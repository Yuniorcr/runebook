<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="ebd384ff0ca5f30a5e0a8c9ad6731c18938a2de7" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a char.</source>
          <target state="translated">パラメータをcharとして返す便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="943c460c5961c35f10136d79eecd64420524f821" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a char. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Character&lt;/code&gt;.</source>
          <target state="translated">パラメータをcharとして返す便利なメソッド。パラメータが &lt;code&gt;null&lt;/code&gt; の場合、または &lt;code&gt;Character&lt;/code&gt; でない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="9299b862be9cb5f48ba998965def8a106f265b48" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a double.</source>
          <target state="translated">パラメータをdoubleとして返す便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="0a4928bb86282825c0d0349c047c0c7f91b12e57" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a double. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Double&lt;/code&gt;.</source>
          <target state="translated">パラメータをdoubleとして返す便利なメソッド。パラメータが &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;Double&lt;/code&gt; でない場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="7d714cdbfd4c754d4cfadc5e295c8e601f417c1d" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a float.</source>
          <target state="translated">パラメータをfloatで返す便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="6b8f4bcda4d37d4b73d947a9674d1b53d644b757" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a float. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Float&lt;/code&gt;.</source>
          <target state="translated">パラメータをfloatとして返す便利なメソッド。パラメータが &lt;code&gt;null&lt;/code&gt; の場合、または &lt;code&gt;Float&lt;/code&gt; でない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="5d3c86fa44ad2b33e64227671b292e4b240c5a5d" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a long.</source>
          <target state="translated">パラメータをlongとして返す便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="43bc7bfca54e042222983f9e48f68745a5dfbb77" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a long. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Long&lt;/code&gt;.</source>
          <target state="translated">パラメータをlongとして返す便利なメソッド。パラメータが &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;Long&lt;/code&gt; でない場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="184db79e285fbcabdf3665ef62914ed4d5295fd1" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a short.</source>
          <target state="translated">パラメータを短く返す便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="1b4b1ce8266727e88ff4a4a2856fea1a2e381801" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a short. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Short&lt;/code&gt;.</source>
          <target state="translated">パラメータをshortとして返す便利なメソッド。パラメータが &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;Short&lt;/code&gt; でない場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="48b5cd060eef9c2b39dca326ba801f578061c0e4" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as an int.</source>
          <target state="translated">パラメータをintとして返す便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="532f65b1b7e14711268e9c70a498ade80cd68042" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as an int. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not an &lt;code&gt;Integer&lt;/code&gt;.</source>
          <target state="translated">パラメータをintとして返す便利なメソッド。パラメータが &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;Integer&lt;/code&gt; ない場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="d111cbd6b41c2ec780244806b0efcc6e09e34206" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's execute permission for this abstract pathname.</source>
          <target state="translated">この抽象パス名の所有者の実行権限を設定する便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="b79d96520d2a2823d7650d8196b0afa730e7bde5" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's execute permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to execute files that are not marked executable.</source>
          <target state="translated">この抽象パス名の所有者の実行権限を設定する便利なメソッドです。プラットフォームによっては、実行可能とマークされていないファイルの実行を許可する特別な権限で Java 仮想マシンを起動することが可能な場合があります。</target>
        </trans-unit>
        <trans-unit id="9c5f74355de733dd0c77f822b18ab1093d5053f8" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's read permission for this abstract pathname.</source>
          <target state="translated">この抽象パス名の所有者の読み取り権限を設定する便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="c61e898f162a2725342347bb011438457029df56" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's read permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to read files that are marked as unreadable.</source>
          <target state="translated">この抽象パス名の所有者の読み取り権限を設定する便利なメソッドです。プラットフォームによっては、Java 仮想マシンを特別な権限で起動して、読めないとマークされたファイルの読み込みを許可することが可能な場合があります。</target>
        </trans-unit>
        <trans-unit id="8522c8eecf8c188ae3f5c7af8d515d84ecf53638" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's read permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to read files that that are marked as unreadable.</source>
          <target state="translated">この抽象パス名の所有者の読み取り権限を設定する便利なメソッドです。プラットフォームによっては、読めないとマークされたファイルを読み込める特別な権限で Java 仮想マシンを起動することが可能な場合があります。</target>
        </trans-unit>
        <trans-unit id="7ccae16f4c65f4ffb387b6a92877cb7bdde73741" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's write permission for this abstract pathname.</source>
          <target state="translated">この抽象パス名の所有者の書き込み許可を設定する便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="70adbfa143948dbfbe2a2079d23a3c700d25e391" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's write permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to modify files that disallow write operations.</source>
          <target state="translated">この抽象パス名に対する所有者の書き込み権限を設定する便利なメソッドです。プラットフォームによっては、書き込み操作を許可しないファイルの変更を許可する特別な権限で Java 仮想マシンを起動することが可能な場合があります。</target>
        </trans-unit>
        <trans-unit id="8390e30450358a6ea70064ba0435f38800aed856" translate="yes" xml:space="preserve">
          <source>A convenience method to write a formatted string to this console's output stream using the specified format string and arguments.</source>
          <target state="translated">指定したフォーマット文字列と引数を使って、フォーマットされた文字列をこのコンソールの出力ストリームに書き込むための便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="f3a608167c200beb78de0abed90f0e9a8f45921d" translate="yes" xml:space="preserve">
          <source>A convenience method to write a formatted string to this output stream using the specified format string and arguments.</source>
          <target state="translated">指定されたフォーマット文字列と引数を用いて、フォーマットされた文字列をこの出力ストリームに書き込む便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="057f452c5522dff43c52c19081fba580e4096f04" translate="yes" xml:space="preserve">
          <source>A convenience method to write a formatted string to this writer using the specified format string and arguments.</source>
          <target state="translated">指定したフォーマット文字列と引数を使って、フォーマットされた文字列をこのライタに書き込む便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="8cf3d0db1f2e456a656fc16b71edb621d58b8d0c" translate="yes" xml:space="preserve">
          <source>A convenience method to write a formatted string to this writer using the specified format string and arguments. If automatic flushing is enabled, calls to this method will flush the output buffer.</source>
          <target state="translated">指定されたフォーマット文字列と引数を使用して、フォーマットされた文字列をこのライタに書き込むための便利なメソッドです。自動フラッシュが有効な場合、このメソッドを呼び出すと出力バッファがフラッシュされます。</target>
        </trans-unit>
        <trans-unit id="e712b86666e15790d81bace0d8ef4d573f4eea97" translate="yes" xml:space="preserve">
          <source>A convenience method which displays a cross-platform page setup dialog.</source>
          <target state="translated">クロスプラットフォームのページ設定ダイアログを表示する便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="60d87dcf83ee6f1ac872e3217d721c3ca77b0d27" translate="yes" xml:space="preserve">
          <source>A convenience method which displays a cross-platform page setup dialog. The choices available will reflect the print service currently set on this PrinterJob.</source>
          <target state="translated">クロスプラットフォームのページセットアップダイアログを表示する便利なメソッドです。利用可能な選択肢は、現在このPrinterJobに設定されている印刷サービスを反映します。</target>
        </trans-unit>
        <trans-unit id="98a09ce2aa2369702097696923a831c4f66ccf72" translate="yes" xml:space="preserve">
          <source>A convenience method which displays a cross-platform print dialog for all services which are capable of printing 2D graphics using the &lt;code&gt;Pageable&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;Pageable&lt;/code&gt; インターフェイスを使用して2Dグラフィックスを印刷できるすべてのサービスのクロスプラットフォーム印刷ダイアログを表示する便利な方法。</target>
        </trans-unit>
        <trans-unit id="2fcfb06ab6fe3bd2ebd0ab4931beb49dc7099e60" translate="yes" xml:space="preserve">
          <source>A convenience method which displays a cross-platform print dialog for all services which are capable of printing 2D graphics using the &lt;code&gt;Pageable&lt;/code&gt; interface. The selected printer when the dialog is initially displayed will reflect the print service currently attached to this print job. If the user changes the print service, the PrinterJob will be updated to reflect this, unless the user cancels the dialog. As well as allowing the user to select the destination printer, the user can also select values of various print request attributes.</source>
          <target state="translated">&lt;code&gt;Pageable&lt;/code&gt; インターフェイスを使用して2Dグラフィックスを印刷できるすべてのサービスのクロスプラットフォーム印刷ダイアログを表示する便利な方法。ダイアログが最初に表示されたときに選択されたプリンターは、この印刷ジョブに現在接続されている印刷サービスを反映します。ユーザーが印刷サービスを変更すると、ユーザーがダイアログをキャンセルしない限り、PrinterJobはこれを反映するように更新されます。ユーザーが宛先プリンターを選択できるようにするだけでなく、ユーザーはさまざまな印刷要求属性の値を選択することもできます。</target>
        </trans-unit>
        <trans-unit id="bc3c50b2d142242dac51d5fcf3d231fce606de43" translate="yes" xml:space="preserve">
          <source>A convenience method which locates factories for stream print services which can image 2D graphics.</source>
          <target state="translated">2Dグラフィックスをイメージできるストリームプリントサービスの工場を探す便利な方法。</target>
        </trans-unit>
        <trans-unit id="d447e3392051f85c24ed40199bf6fe4c3e94a3c3" translate="yes" xml:space="preserve">
          <source>A convenience method which locates factories for stream print services which can image 2D graphics. Sample usage :</source>
          <target state="translated">2Dグラフィックスをイメージできるストリームプリントサービスの工場を探す便利な方法。使い方の例です。</target>
        </trans-unit>
        <trans-unit id="672d84b5e5ba08b84c1c7afb2749463b7f8e63db" translate="yes" xml:space="preserve">
          <source>A convenience method which looks up 2D print services.</source>
          <target state="translated">2Dプリントサービスを調べる便利な方法。</target>
        </trans-unit>
        <trans-unit id="cb4aa5666c349dbc23740d5c5e9867260211490c" translate="yes" xml:space="preserve">
          <source>A convenience method which looks up 2D print services. Services returned from this method may be installed on &lt;code&gt;PrinterJob&lt;/code&gt;s which support print services. Calling this method is equivalent to calling &lt;a href=&quot;../../../javax/print/printservicelookup#lookupPrintServices(javax.print.DocFlavor,javax.print.attribute.AttributeSet)&quot;&gt;&lt;code&gt;PrintServiceLookup.lookupPrintServices()&lt;/code&gt;&lt;/a&gt; and specifying a Pageable DocFlavor.</source>
          <target state="translated">2D印刷サービスを検索する便利な方法。このメソッドから返されるサービスは、印刷サービスをサポートする &lt;code&gt;PrinterJob&lt;/code&gt; にインストールされる場合があります。このメソッドを呼び出すことは、&lt;a href=&quot;../../../javax/print/printservicelookup#lookupPrintServices(javax.print.DocFlavor,javax.print.attribute.AttributeSet)&quot;&gt; &lt;code&gt;PrintServiceLookup.lookupPrintServices()&lt;/code&gt; &lt;/a&gt;を呼び出してPageableDocFlavorを指定することと同じです。</target>
        </trans-unit>
        <trans-unit id="66abb527922f743b62aa7e70858db1aa029ed263" translate="yes" xml:space="preserve">
          <source>A convenience print method that displays a print dialog, and then prints this &lt;code&gt;JTextComponent&lt;/code&gt; in</source>
          <target state="translated">印刷ダイアログを表示し、この &lt;code&gt;JTextComponent&lt;/code&gt; をで印刷する便利なprintメソッド</target>
        </trans-unit>
        <trans-unit id="64bde2928b505165975e0f37a6c2cda5a9820208" translate="yes" xml:space="preserve">
          <source>A convenient shortcut for locating elements is the method &lt;a href=&quot;#getElement(java.lang.String)&quot;&gt;&lt;code&gt;getElement(String)&lt;/code&gt;&lt;/a&gt;; returns an element whose &lt;code&gt;ID&lt;/code&gt; attribute matches the specified value. For example, &lt;code&gt;d.getElement(&quot;BOX&quot;)&lt;/code&gt; returns the &lt;code&gt;DIV&lt;/code&gt; element.</source>
          <target state="translated">要素を見つけるための便利なショートカットは、メソッド&lt;a href=&quot;#getElement(java.lang.String)&quot;&gt; &lt;code&gt;getElement(String)&lt;/code&gt; &lt;/a&gt;です。 &lt;code&gt;ID&lt;/code&gt; 属性が指定された値と一致する要素を返します。たとえば、 &lt;code&gt;d.getElement(&quot;BOX&quot;)&lt;/code&gt; は &lt;code&gt;DIV&lt;/code&gt; 要素を返します。</target>
        </trans-unit>
        <trans-unit id="3a1a8039aac719e599728c0c27428d151c53c8d8" translate="yes" xml:space="preserve">
          <source>A cookie to store may or may not be associated with an URI. If it is not associated with an URI, the cookie's domain and path attribute will indicate where it comes from. If it is associated with an URI and its domain and path attribute are not specified, given URI will indicate where this cookie comes from.</source>
          <target state="translated">保存するクッキーはURIに関連付けられているかもしれないし、関連付けられていないかもしれない。それがURIに関連付けられていない場合、クッキーのドメインとパス属性はそれがどこから来たかを示します。それがURIに関連付けられていて、そのドメインとパス属性が指定されていない場合、与えられたURIはこのクッキーがどこから来たかを示します。</target>
        </trans-unit>
        <trans-unit id="6ed2cdafa04c759296cf982bd9190b629e1e1a1f" translate="yes" xml:space="preserve">
          <source>A copy of &lt;code&gt;name&lt;/code&gt; is made and stored. Subsequent changes to &lt;code&gt;name&lt;/code&gt; do not affect the copy in this NamingException and vice versa.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; のコピーが作成され、保存されます。その後の &lt;code&gt;name&lt;/code&gt; 変更は、このNamingExceptionのコピーには影響しません。その逆も同様です。</target>
        </trans-unit>
        <trans-unit id="847e6f4959462c58ea8ac27a4387b6518797a9bd" translate="yes" xml:space="preserve">
          <source>A copy of &lt;code&gt;name&lt;/code&gt; is made and stored. Subsequent changes to &lt;code&gt;name&lt;/code&gt; does not affect the copy in this NamingException and vice versa.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; のコピーが作成され、保存されます。その後の &lt;code&gt;name&lt;/code&gt; 変更は、このNamingExceptionのコピーには影響せず、その逆も同様です。</target>
        </trans-unit>
        <trans-unit id="2014e4f257019657ca846cfb69be1eedec61a26e" translate="yes" xml:space="preserve">
          <source>A copy of &lt;code&gt;newName&lt;/code&gt; is made and stored. Subsequent changes to &lt;code&gt;name&lt;/code&gt; does not affect the copy in this NamingException and vice versa.</source>
          <target state="translated">&lt;code&gt;newName&lt;/code&gt; のコピーが作成され、保存されます。その後の &lt;code&gt;name&lt;/code&gt; 変更は、このNamingExceptionのコピーには影響せず、その逆も同様です。</target>
        </trans-unit>
        <trans-unit id="d405432971fb5d5bd4d9655c00ba110cf9164761" translate="yes" xml:space="preserve">
          <source>A copy of the certificates array, or null if there is none.</source>
          <target state="translated">証明書の配列のコピー。</target>
        </trans-unit>
        <trans-unit id="2c53b1d71e76fb7f9999eb4ea68630428eca0196" translate="yes" xml:space="preserve">
          <source>A copy of the code signer array, or null if there is none.</source>
          <target state="translated">コードシグナの配列のコピー。</target>
        </trans-unit>
        <trans-unit id="d12b5b76ae33b8ff518231f4bdf080025e7d1ecc" translate="yes" xml:space="preserve">
          <source>A copy of the current quantization table.</source>
          <target state="translated">現在の量子化テーブルのコピー。</target>
        </trans-unit>
        <trans-unit id="39726b352731b62ca6b918622ee3ca622b5b8a86" translate="yes" xml:space="preserve">
          <source>A copy of the date or null if the identifier is not mapped to any timer notification registered for this timer MBean.</source>
          <target state="translated">識別子がこのタイマーMBeanに登録されているタイマー通知にマッピングされていない場合は、日付のコピー、またはNULL。</target>
        </trans-unit>
        <trans-unit id="95671ff38df1ecf38192edcde87daa005a34113e" translate="yes" xml:space="preserve">
          <source>A copy of the flag indicating whether a periodic notification is executed at</source>
          <target state="translated">で定期通知が実行されるかどうかを示すフラグのコピー。</target>
        </trans-unit>
        <trans-unit id="2d2d2301896bb87bf4110f7f9035139f0077d8a5" translate="yes" xml:space="preserve">
          <source>A copy of the period or null if the identifier is not mapped to any timer notification registered for this timer MBean.</source>
          <target state="translated">識別子がこのタイマーMBeanに登録されているタイマー通知にマッピングされていない場合は、期間のコピー、またはNULL。</target>
        </trans-unit>
        <trans-unit id="7162e1527ed5572f6cb24373b5f74999ffaf9db9" translate="yes" xml:space="preserve">
          <source>A copy of the remaining number of occurrences or null if the identifier is not mapped to any timer notification registered for this timer MBean.</source>
          <target state="translated">識別子がこのタイマーMBeanに登録されているタイマー通知にマッピングされていない場合は、残りの発生数のコピー、またはNULL。</target>
        </trans-unit>
        <trans-unit id="50876ec5fa35a1c18223c83324392c638b888998" translate="yes" xml:space="preserve">
          <source>A copy of the set of output properties in effect for the next transformation.</source>
          <target state="translated">次の変換に有効な出力プロパティのセットのコピー。</target>
        </trans-unit>
        <trans-unit id="67421ae13fd23f4c24e8887b04d367966e5e8324" translate="yes" xml:space="preserve">
          <source>A copy of the specified enum set.</source>
          <target state="translated">指定された列挙集合のコピー。</target>
        </trans-unit>
        <trans-unit id="df7838b154197b11591455e756b04860d754eddc" translate="yes" xml:space="preserve">
          <source>A copy of the this LDAP name.</source>
          <target state="translated">このLDAP名のコピー。</target>
        </trans-unit>
        <trans-unit id="ef57a052b407fe7cec8a98762eedf987fe6eb85f" translate="yes" xml:space="preserve">
          <source>A copy of this</source>
          <target state="translated">これをコピーしたもの</target>
        </trans-unit>
        <trans-unit id="f05780f73bdf8cfeaf60a3f5d18215bea1164a3c" translate="yes" xml:space="preserve">
          <source>A corner component will only be visible if there is an empty space in that corner for it to exist in. For example, consider a component set into the top right corner of a scroll pane with a column header. If the scroll pane's vertical scrollbar is not present, perhaps because the view component hasn't grown large enough to require it, then the corner component will not be shown (since there is no empty space in that corner created by the meeting of the header and vertical scroll bar). Forcing the scroll bar to always be shown, using &lt;code&gt;setVerticalScrollBarPolicy(VERTICAL_SCROLLBAR_ALWAYS)&lt;/code&gt;, will ensure that the space for the corner component always exists.</source>
          <target state="translated">コーナーコンポーネントは、そのコーナーに存在するための空きスペースがある場合にのみ表示されます。たとえば、列ヘッダーのあるスクロールペインの右上隅に設定されたコンポーネントについて考えてみます。スクロールペインの垂直スクロールバーが存在しない場合、おそらくビューコンポーネントがそれを必要とするほど大きくなっていないため、コーナーコンポーネントは表示されません（ヘッダーの会議によって作成されたそのコーナーに空きスペースがないため）および垂直スクロールバー）。 &lt;code&gt;setVerticalScrollBarPolicy(VERTICAL_SCROLLBAR_ALWAYS)&lt;/code&gt; を使用してスクロールバーを常に表示するように強制すると、コーナーコンポーネント用のスペースが常に存在するようになります。</target>
        </trans-unit>
        <trans-unit id="006ad8eae957fdfb71c138d6dee58128135c8d4f" translate="yes" xml:space="preserve">
          <source>A correct &lt;code&gt;ListSelectionModel&lt;/code&gt; implementation notifies the set of &lt;code&gt;javax.swing.event.ListSelectionListener&lt;/code&gt;s that have been added to it each time a change to the selection occurs. These changes are characterized by a &lt;code&gt;javax.swing.event.ListSelectionEvent&lt;/code&gt;, which identifies the range of the selection change.</source>
          <target state="translated">正しい &lt;code&gt;ListSelectionModel&lt;/code&gt; 実装は、選択が変更されるたびに、追加された &lt;code&gt;javax.swing.event.ListSelectionListener&lt;/code&gt; のセットに通知します。これらの変更は、選択の変更の範囲を識別する &lt;code&gt;javax.swing.event.ListSelectionEvent&lt;/code&gt; によって特徴付けられます。</target>
        </trans-unit>
        <trans-unit id="45b413993b1520d780fb987e3d90b52cd11ab28e" translate="yes" xml:space="preserve">
          <source>A correct way to write the addSource function is to clone the source Vector:</source>
          <target state="translated">addSource関数の正しい書き方は、ソースVectorをクローン化することです。</target>
        </trans-unit>
        <trans-unit id="bfe0b7d026c71e8963a98d7d535863e14aaad2cb" translate="yes" xml:space="preserve">
          <source>A counter monitor sends a &lt;a href=&quot;monitornotification#THRESHOLD_VALUE_EXCEEDED&quot;&gt;&lt;code&gt;threshold
 notification&lt;/code&gt;&lt;/a&gt; when the value of the counter reaches or exceeds a threshold known as the comparison level. The notify flag must be set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">カウンターモニターは、カウンターの値が比較レベルと呼ばれるしきい値に達するか超えると、しきい値&lt;a href=&quot;monitornotification#THRESHOLD_VALUE_EXCEEDED&quot;&gt; &lt;code&gt;threshold notification&lt;/code&gt; &lt;/a&gt;送信します。通知フラグは &lt;code&gt;true&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="e5aa116cd195f41d88b93e7e05e33512e16c94f4" translate="yes" xml:space="preserve">
          <source>A counting semaphore.</source>
          <target state="translated">カウントセマフォです。</target>
        </trans-unit>
        <trans-unit id="5f0f0f0344e5f8679592b34bede9e77639210058" translate="yes" xml:space="preserve">
          <source>A counting semaphore. Conceptually, a semaphore maintains a set of permits. Each &lt;a href=&quot;#acquire()&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; blocks if necessary until a permit is available, and then takes it. Each &lt;a href=&quot;#release()&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; adds a permit, potentially releasing a blocking acquirer. However, no actual permit objects are used; the &lt;code&gt;Semaphore&lt;/code&gt; just keeps a count of the number available and acts accordingly.</source>
          <target state="translated">カウントセマフォ。概念的には、セマフォは一連の許可を維持します。各&lt;a href=&quot;#acquire()&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;は、必要に応じて許可が利用可能になるまでブロックし、それを取得します。各&lt;a href=&quot;#release()&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;は許可を追加し、ブロッキングアクワイアラーを解放する可能性があります。ただし、実際の許可オブジェクトは使用されません。 &lt;code&gt;Semaphore&lt;/code&gt; 単に利用可能数のカウントを保持し、それに応じて動作します。</target>
        </trans-unit>
        <trans-unit id="1878569fa082444cb799d4d4472ca8f08f05481f" translate="yes" xml:space="preserve">
          <source>A counting semaphore. Conceptually, a semaphore maintains a set of permits. Each &lt;a href=&quot;semaphore#acquire--&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; blocks if necessary until a permit is available, and then takes it. Each &lt;a href=&quot;semaphore#release--&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; adds a permit, potentially releasing a blocking acquirer. However, no actual permit objects are used; the &lt;code&gt;Semaphore&lt;/code&gt; just keeps a count of the number available and acts accordingly.</source>
          <target state="translated">カウントするセマフォ。概念的には、セマフォは一連の許可を保持します。パーミットが利用可能になるまで、それぞれの&lt;a href=&quot;semaphore#acquire--&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;は必要に応じてブロックし、許可を取得します。各&lt;a href=&quot;semaphore#release--&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;は許可を追加し、ブロッキングアクワイアラを解放する可能性があります。ただし、実際の許可オブジェクトは使用されません。 &lt;code&gt;Semaphore&lt;/code&gt; 単に利用可能数のカウントを保持し、それに応じて動作します。</target>
        </trans-unit>
        <trans-unit id="7ef50c2f78174c7e3ff2ae341386d9693f14a6a2" translate="yes" xml:space="preserve">
          <source>A cover for HTMLEditorKit.insertHTML.</source>
          <target state="translated">HTMLEditorKit.insertHTMLのカバーです。</target>
        </trans-unit>
        <trans-unit id="4b660728216539f39406aedd92d8cf8abfbfdc29" translate="yes" xml:space="preserve">
          <source>A cover for HTMLEditorKit.insertHTML. If an exception it thrown it is wrapped in a RuntimeException and thrown.</source>
          <target state="translated">HTMLEditorKit.insertHTMLのカバーです。例外が発生した場合はRuntimeExceptionでラップしてスローします。</target>
        </trans-unit>
        <trans-unit id="17a6af52f060965e86c67aebd554d45e863130ac" translate="yes" xml:space="preserve">
          <source>A cryptographic service is always associated with a particular algorithm or type. For example, a digital signature service is always associated with a particular algorithm (e.g., DSA), and a CertificateFactory service is always associated with a particular certificate type (e.g., X.509).</source>
          <target state="translated">暗号化サービスは常に特定のアルゴリズムまたはタイプに関連付けられています。例えば、デジタル署名サービスは常に特定のアルゴリズム(DSAなど)に関連付けられており、CertificateFactoryサービスは常に特定の証明書タイプ(X.509など)に関連付けられています。</target>
        </trans-unit>
        <trans-unit id="3d49d8541edd780589e4ca07657ecf84fd361175" translate="yes" xml:space="preserve">
          <source>A cryptographically strong random number minimally complies with the statistical random number generator tests specified in &lt;a href=&quot;http://csrc.nist.gov/cryptval/140-2.htm&quot;&gt; &lt;i&gt;FIPS 140-2, Security Requirements for Cryptographic Modules&lt;/i&gt;&lt;/a&gt;, section 4.9.1. Additionally, SecureRandom must produce non-deterministic output. Therefore any seed material passed to a SecureRandom object must be unpredictable, and all SecureRandom output sequences must be cryptographically strong, as described in &lt;a href=&quot;http://www.ietf.org/rfc/rfc1750.txt&quot;&gt; &lt;i&gt;RFC 1750: Randomness Recommendations for Security&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">暗号学的に強力な乱数は、&lt;a href=&quot;http://csrc.nist.gov/cryptval/140-2.htm&quot;&gt;&lt;i&gt;FIPS 140-2、暗号モジュールのセキュリティ要件&lt;/i&gt;&lt;/a&gt;、セクション4.9.1で指定されている統計的乱数ジェネレータテストに最低限準拠しています。さらに、SecureRandomは非決定的な出力を生成する必要があります。したがって、&lt;a href=&quot;http://www.ietf.org/rfc/rfc1750.txt&quot;&gt;&lt;i&gt;RFC 1750：Randomness Recommendations for Securityで&lt;/i&gt;&lt;/a&gt;説明され&lt;i&gt;て&lt;/i&gt;いるように、SecureRandomオブジェクトに渡されるシードマテリアルはすべて予測不可能である必要があり、すべてのSecureRandom出力シーケンスは暗号学的に強力である必要があります。 &lt;i&gt;&lt;/i&gt; &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="00cd8fbb64796f31c2a59103935ef4a790cae1ba" translate="yes" xml:space="preserve">
          <source>A cryptographically strong random number minimally complies with the statistical random number generator tests specified in &lt;a href=&quot;http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-2.pdf&quot;&gt; &lt;i&gt;FIPS 140-2, Security Requirements for Cryptographic Modules&lt;/i&gt;&lt;/a&gt;, section 4.9.1. Additionally, &lt;code&gt;SecureRandom&lt;/code&gt; must produce non-deterministic output. Therefore any seed material passed to a &lt;code&gt;SecureRandom&lt;/code&gt; object must be unpredictable, and all &lt;code&gt;SecureRandom&lt;/code&gt; output sequences must be cryptographically strong, as described in &lt;a href=&quot;http://tools.ietf.org/html/rfc4086&quot;&gt; &lt;i&gt;RFC 4086: Randomness Requirements for Security&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">暗号的に強い乱数は、&lt;a href=&quot;http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-2.pdf&quot;&gt;&lt;i&gt;FIPS 140-2、暗号化モジュールのセキュリティ要件&lt;/i&gt;&lt;/a&gt;、セクション4.9.1で指定されている統計的乱数ジェネレータテストに最小限準拠しています。さらに、 &lt;code&gt;SecureRandom&lt;/code&gt; は非決定論的な出力を生成する必要があります。したがって、&lt;a href=&quot;http://tools.ietf.org/html/rfc4086&quot;&gt;&lt;i&gt;RFC 4086：セキュリティのランダム性要件で&lt;/i&gt;&lt;/a&gt;説明され&lt;i&gt;て&lt;/i&gt;いるように、 &lt;code&gt;SecureRandom&lt;/code&gt; オブジェクトに渡されるシードマテリアルは予測不可能である必要があり、すべての &lt;code&gt;SecureRandom&lt;/code&gt; 出力シーケンスは暗号的に強力である必要があります。 &lt;i&gt;&lt;/i&gt; &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="6e1ad5ccdaee2397b9cf498e124fe74f968acd0d" translate="yes" xml:space="preserve">
          <source>A cubic parametric curve segment specified with &lt;code&gt;double&lt;/code&gt; coordinates.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 座標で指定された3次パラメトリック曲線セグメント。</target>
        </trans-unit>
        <trans-unit id="a7e216a818fced7e98353e4b7bbdea310be88d95" translate="yes" xml:space="preserve">
          <source>A cubic parametric curve segment specified with &lt;code&gt;float&lt;/code&gt; coordinates.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 座標で指定された3次パラメトリック曲線セグメント。</target>
        </trans-unit>
        <trans-unit id="fa5deb637528748537e80092135237e4eb9b1b7c" translate="yes" xml:space="preserve">
          <source>A currency symbol</source>
          <target state="translated">通貨記号</target>
        </trans-unit>
        <trans-unit id="51f6b838a1574832f2e9fbffda3b26c4015239a0" translate="yes" xml:space="preserve">
          <source>A custom layout manager that is responsible for the layout of layeredPane, glassPane, and menuBar.</source>
          <target state="translated">layeredPane、glassPane、menuBarのレイアウトを担当するカスタムレイアウトマネージャ。</target>
        </trans-unit>
        <trans-unit id="dc755e278cda4dc95c7384213717314814ed613e" translate="yes" xml:space="preserve">
          <source>A customized caret appearance can be achieved by reimplementing the paint method. If the paint method is changed, the damage method should also be reimplemented to cause a repaint for the area needed to render the caret. The caret extends the Rectangle class which is used to hold the bounding box for where the caret was last rendered. This enables the caret to repaint in a thread-safe manner when the caret moves without making a call to modelToView which is unstable between model updates and view repair (i.e. the order of delivery to DocumentListeners is not guaranteed).</source>
          <target state="translated">カスタマイズされたキャレットの外観は、ペイント方法を再実装することで達成することができます。paint メソッドが変更された場合、caret のレンダリングに必要な領域の再ペイントを行うために、damage メソッドも再実装する必要があります。キャレットは、キャレットが最後にレンダリングされた場所のバウンディングボックスを保持するために使用される Rectangle クラスを継承しています。これにより、モデルの更新とビューの修復の間で不安定な modelToView を呼び出すことなく、キャレットが移動したときにスレッドセーフな方法でキャレットを再描画することができます(つまり、DocumentListeners への配信順序が保証されていません)。</target>
        </trans-unit>
        <trans-unit id="0d9a552f1eae9532772ba8a0f5bd21b603f695ba" translate="yes" xml:space="preserve">
          <source>A customizer class provides a complete custom GUI for customizing a target Java Bean.</source>
          <target state="translated">カスタマイザクラスは、ターゲットJava Beanをカスタマイズするための完全なカスタムGUIを提供します。</target>
        </trans-unit>
        <trans-unit id="155801b8d431610d4f89e1e764da92c1508c8337" translate="yes" xml:space="preserve">
          <source>A cycle is detected, say where module &lt;code&gt;m1&lt;/code&gt; requires module &lt;code&gt;m2&lt;/code&gt; and &lt;code&gt;m2&lt;/code&gt; requires &lt;code&gt;m1&lt;/code&gt;.</source>
          <target state="translated">モジュール &lt;code&gt;m1&lt;/code&gt; がモジュール &lt;code&gt;m2&lt;/code&gt; を必要とし、 &lt;code&gt;m2&lt;/code&gt; が &lt;code&gt;m1&lt;/code&gt; を必要とする場合など、サイクルが検出されます。</target>
        </trans-unit>
        <trans-unit id="2069b8c17d37c31667b7fab19c4856de0cc1f8d1" translate="yes" xml:space="preserve">
          <source>A daemon thread group is automatically destroyed when its last thread is stopped or its last thread group is destroyed.</source>
          <target state="translated">デーモンのスレッドグループは、最後のスレッドが停止したとき、または最後のスレッドグループが破壊されたときに自動的に破壊されます。</target>
        </trans-unit>
        <trans-unit id="05d0e41569ec35aa65fa2c0237db9083d80b3ecd" translate="yes" xml:space="preserve">
          <source>A dash</source>
          <target state="translated">ダッシュ</target>
        </trans-unit>
        <trans-unit id="a33b219dbf7a1c9bcc3067caa4ec245d6a63116b" translate="yes" xml:space="preserve">
          <source>A data input stream lets an application read primitive Java data types from an underlying input stream in a machine-independent way.</source>
          <target state="translated">データ入力ストリームを使用すると、アプリケーションは、マシンに依存しない方法で、基礎となる入力ストリームからプリミティブなJavaデータ型を読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="d45df3da7223cc3f060b7b0d57ac3b346e061e77" translate="yes" xml:space="preserve">
          <source>A data input stream lets an application read primitive Java data types from an underlying input stream in a machine-independent way. An application uses a data output stream to write data that can later be read by a data input stream.</source>
          <target state="translated">データ入力ストリームを使用すると、アプリケーションは、機械に依存しない方法で、基礎となる入力ストリームからプリミティブなJavaデータ型を読み取ることができます。アプリケーションは、データ出力ストリームを使用して、後からデータ入力ストリームで読み込めるデータを書き込みます。</target>
        </trans-unit>
        <trans-unit id="ec9aec4344d0e51aa12ef1215631eb1d67b5a569" translate="yes" xml:space="preserve">
          <source>A data line has an internal buffer in which the incoming or outgoing audio data is queued. The &lt;a href=&quot;#drain()&quot;&gt;&lt;code&gt;drain()&lt;/code&gt;&lt;/a&gt; method blocks until this internal buffer becomes empty, usually because all queued data has been processed. The &lt;a href=&quot;#flush()&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt; method discards any available queued data from the internal buffer.</source>
          <target state="translated">データラインには、着信または発信オーディオデータがキューに入れられる内部バッファがあります。&lt;a href=&quot;#drain()&quot;&gt; &lt;code&gt;drain()&lt;/code&gt; &lt;/a&gt;この内部バッファが空になるまで、方法ブロックは、すべてのキューされたデータが処理されている通常ため。&lt;a href=&quot;#flush()&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; &lt;/a&gt;メソッドは、内部バッファから任意の利用可能なキューに入れられたデータを破棄する。</target>
        </trans-unit>
        <trans-unit id="1de7e80dd13dc68d3168ef0a6e2fe9e3913dcf0a" translate="yes" xml:space="preserve">
          <source>A data line has an internal buffer in which the incoming or outgoing audio data is queued. The &lt;code&gt;&lt;a href=&quot;dataline#drain--&quot;&gt;&lt;code&gt;drain()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method blocks until this internal buffer becomes empty, usually because all queued data has been processed. The &lt;code&gt;&lt;a href=&quot;dataline#flush--&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method discards any available queued data from the internal buffer.</source>
          <target state="translated">データラインには、着信または発信オーディオデータがキューに入れられる内部バッファがあります。 &lt;code&gt;&lt;a href=&quot;dataline#drain--&quot;&gt;&lt;code&gt;drain()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; この内部バッファが空になるまで、方法ブロックは、すべてのキューされたデータが処理されている通常ため。 &lt;code&gt;&lt;a href=&quot;dataline#flush--&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドは、内部バッファから任意の利用可能なキューに入れられたデータを破棄する。</target>
        </trans-unit>
        <trans-unit id="ea6cbb8b0f188dc029372c2eb8622099b8037345" translate="yes" xml:space="preserve">
          <source>A data line produces &lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt; events whenever it begins or ceases active presentation or capture of data. These events can be generated in response to specific requests, or as a result of less direct state changes. For example, if &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; is called on an inactive data line, and data is available for capture or playback, a &lt;code&gt;START&lt;/code&gt; event will be generated shortly, when data playback or capture actually begins. Or, if the flow of data to an active data line is constricted so that a gap occurs in the presentation of data, a &lt;code&gt;STOP&lt;/code&gt; event is generated.</source>
          <target state="translated">データラインは生産&lt;a href=&quot;lineevent.type#START&quot;&gt; &lt;code&gt;START&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;lineevent.type#STOP&quot;&gt; &lt;code&gt;STOP&lt;/code&gt; &lt;/a&gt;それがアクティブなプレゼンテーションやデータのキャプチャを開始または停止したときにイベントを。これらのイベントは、特定の要求に応じて、または直接的な状態変化が少ない結果として生成できます。たとえば、非アクティブなデータ回線で&lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;が呼び出され、データがキャプチャまたは再生に使用できる場合、データの再生またはキャプチャが実際に開始されるとすぐに &lt;code&gt;START&lt;/code&gt; イベントが生成されます。または、アクティブなデータラインへのデータの流れが制限され、データの表示にギャップが発生した場合、 &lt;code&gt;STOP&lt;/code&gt; イベントが生成されます。</target>
        </trans-unit>
        <trans-unit id="5c11db064de02f620dcd7062f6e3d3fe8017c28a" translate="yes" xml:space="preserve">
          <source>A data line produces &lt;code&gt;&lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; events whenever it begins or ceases active presentation or capture of data. These events can be generated in response to specific requests, or as a result of less direct state changes. For example, if &lt;code&gt;&lt;a href=&quot;dataline#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is called on an inactive data line, and data is available for capture or playback, a &lt;code&gt;START&lt;/code&gt; event will be generated shortly, when data playback or capture actually begins. Or, if the flow of data to an active data line is constricted so that a gap occurs in the presentation of data, a &lt;code&gt;STOP&lt;/code&gt; event is generated.</source>
          <target state="translated">データラインは生産 &lt;code&gt;&lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; それがアクティブなプレゼンテーションやデータのキャプチャを開始または停止したときにイベントを。これらのイベントは、特定の要求に応じて、または直接的な状態変化が少ない結果として生成されます。たとえば、非アクティブなデータラインで &lt;code&gt;&lt;a href=&quot;dataline#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; が呼び出され、データをキャプチャまたは再生できる場合、データの再生またはキャプチャが実際に開始されると、 &lt;code&gt;START&lt;/code&gt; イベントがすぐに生成されます。または、アクティブなデータラインへのデータフローが制限され、データの表示にギャップが発生した場合、 &lt;code&gt;STOP&lt;/code&gt; イベントが生成されます。</target>
        </trans-unit>
        <trans-unit id="039c1d1d51bba8822833fd86de721e61e08f3939" translate="yes" xml:space="preserve">
          <source>A data model for a combo box.</source>
          <target state="translated">コンボボックスのデータモデル。</target>
        </trans-unit>
        <trans-unit id="e6dadba60cfbfb81f34f2058ee572d2de4e1288f" translate="yes" xml:space="preserve">
          <source>A data model for a combo box. This interface extends &lt;code&gt;ListDataModel&lt;/code&gt; and adds the concept of a</source>
          <target state="translated">コンボボックスのデータモデル。このインターフェースは &lt;code&gt;ListDataModel&lt;/code&gt; を拡張し、</target>
        </trans-unit>
        <trans-unit id="b4ade92fed66a9ea602b46e8ce07d94ae873930c" translate="yes" xml:space="preserve">
          <source>A data output stream lets an application write primitive Java data types to an output stream in a portable way.</source>
          <target state="translated">データ出力ストリームを使用すると、アプリケーションは、ポータブルな方法で出力ストリームにプリミティブなJavaデータ型を書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="7e49ad230178e81f14bea1885dc6b952a1a78975" translate="yes" xml:space="preserve">
          <source>A data output stream lets an application write primitive Java data types to an output stream in a portable way. An application can then use a data input stream to read the data back in.</source>
          <target state="translated">データ出力ストリームは、アプリケーションがポータブルな方法で出力ストリームにプリミティブなJavaデータ型を書き込むことを可能にします。アプリケーションは、データ入力ストリームを使用してデータを読み出すことができます。</target>
        </trans-unit>
        <trans-unit id="6ffd7d53aef0182ff78f6145031ad6fa96eaf5e9" translate="yes" xml:space="preserve">
          <source>A datagram channel is created by invoking one of the &lt;a href=&quot;#open()&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods of this class. It is not possible to create a channel for an arbitrary, pre-existing datagram socket. A newly-created datagram channel is open but not connected. A datagram channel need not be connected in order for the &lt;a href=&quot;#send(java.nio.ByteBuffer,java.net.SocketAddress)&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#receive(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;receive&lt;/code&gt;&lt;/a&gt; methods to be used. A datagram channel may be connected, by invoking its &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method, in order to avoid the overhead of the security checks are otherwise performed as part of every send and receive operation. A datagram channel must be connected in order to use the &lt;a href=&quot;#read(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods, since those methods do not accept or return socket addresses.</source>
          <target state="translated">データグラムチャネルは、このクラスの&lt;a href=&quot;#open()&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;メソッドの1つを呼び出すことによって作成されます。任意の既存のデータグラムソケット用のチャネルを作成することはできません。新しく作成されたデータグラムチャネルは開いていますが、接続されていません。&lt;a href=&quot;#send(java.nio.ByteBuffer,java.net.SocketAddress)&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;#receive(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;receive&lt;/code&gt; &lt;/a&gt;メソッドを使用するために、データグラムチャネルを接続する必要はありません。データグラムチャネルは、その&lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって接続できます。これは、セキュリティチェックのオーバーヘッドを回避するために、他の方法ではすべての送受信操作の一部として実行されます。&lt;a href=&quot;#read(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;メソッドを使用するには、データグラムチャネルを接続する必要があります。これらのメソッドは、ソケットアドレスを受け入れたり返したりしないためです。</target>
        </trans-unit>
        <trans-unit id="860c85146d0e51648ee215e21e8c0d125f69ac4d" translate="yes" xml:space="preserve">
          <source>A datagram channel is created by invoking one of the &lt;a href=&quot;datagramchannel#open--&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods of this class. It is not possible to create a channel for an arbitrary, pre-existing datagram socket. A newly-created datagram channel is open but not connected. A datagram channel need not be connected in order for the &lt;a href=&quot;datagramchannel#send-java.nio.ByteBuffer-java.net.SocketAddress-&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datagramchannel#receive-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;receive&lt;/code&gt;&lt;/a&gt; methods to be used. A datagram channel may be connected, by invoking its &lt;a href=&quot;datagramchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method, in order to avoid the overhead of the security checks are otherwise performed as part of every send and receive operation. A datagram channel must be connected in order to use the &lt;a href=&quot;datagramchannel#read-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datagramchannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods, since those methods do not accept or return socket addresses.</source>
          <target state="translated">データグラムチャネルは、このクラスの&lt;a href=&quot;datagramchannel#open--&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;メソッドの1つを呼び出すことによって作成されます。任意の既存のデータグラムソケットのチャネルを作成することはできません。新しく作成されたデータグラムチャネルは開いていますが、接続されていません。&lt;a href=&quot;datagramchannel#send-java.nio.ByteBuffer-java.net.SocketAddress-&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;datagramchannel#receive-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;receive&lt;/code&gt; &lt;/a&gt;メソッドを使用するために、データグラムチャネルを接続する必要はありません。データグラムチャネルは、セキュリティメソッドのオーバーヘッドを回避するために、&lt;a href=&quot;datagramchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで接続できます。そうしないと、すべての送受信操作の一部としてセキュリティチェックが実行されます。&lt;a href=&quot;datagramchannel#read-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;datagramchannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;メソッドを使用するには、データグラムチャネルが接続されている必要があります。これらのメソッドはソケットアドレスを受け付けたり返したりしないためです。</target>
        </trans-unit>
        <trans-unit id="b50daddc17e2dc3b7a053825fe91e19a870e48dc" translate="yes" xml:space="preserve">
          <source>A datagram socket associated with this channel</source>
          <target state="translated">このチャネルに関連付けられたデータグラムソケット</target>
        </trans-unit>
        <trans-unit id="3d2c68abbc6de0158a3eae16d10798edaae398fe" translate="yes" xml:space="preserve">
          <source>A datagram socket is the sending or receiving point for a packet delivery service. Each packet sent or received on a datagram socket is individually addressed and routed. Multiple packets sent from one machine to another may be routed differently, and may arrive in any order.</source>
          <target state="translated">データグラムソケットは、パケット配信サービスの送受信ポイントです。データグラムソケット上で送受信される各パケットは、個別にアドレス指定され、ルーティングされます。あるマシンから別のマシンに送信された複数のパケットは、異なる経路でルーティングされ、任意の順序で到着する可能性があります。</target>
        </trans-unit>
        <trans-unit id="ad8df8d5ed296cdf0ebd9da1afb9e92512db37c3" translate="yes" xml:space="preserve">
          <source>A datagram socket will have a channel if, and only if, the channel itself was created via the &lt;a href=&quot;../nio/channels/datagramchannel#open()&quot;&gt;&lt;code&gt;DatagramChannel.open&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">チャネル自体が&lt;a href=&quot;../nio/channels/datagramchannel#open()&quot;&gt; &lt;code&gt;DatagramChannel.open&lt;/code&gt; &lt;/a&gt;メソッドを介して作成された場合にのみ、データグラムソケットにチャネルがあります。</target>
        </trans-unit>
        <trans-unit id="0ae7f8573e25c5bd21f3782b0c07769f31eec235" translate="yes" xml:space="preserve">
          <source>A datagram socket will have a channel if, and only if, the channel itself was created via the &lt;a href=&quot;../nio/channels/datagramchannel#open--&quot;&gt;&lt;code&gt;DatagramChannel.open&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">データグラムソケットは、チャネル自体が&lt;a href=&quot;../nio/channels/datagramchannel#open--&quot;&gt; &lt;code&gt;DatagramChannel.open&lt;/code&gt; &lt;/a&gt;メソッドを介して作成された場合にのみ、チャネルを持ちます。</target>
        </trans-unit>
        <trans-unit id="28f9164c3c92e685be103dbf4f46c787de2d68b2" translate="yes" xml:space="preserve">
          <source>A date (day of month) is represented by an integer from 1 to 31 in the usual manner.</source>
          <target state="translated">日付(月の日)は、通常の方法では1から31までの整数で表されます。</target>
        </trans-unit>
        <trans-unit id="765d4dd40d45377469a0163c1106343e90f2903d" translate="yes" xml:space="preserve">
          <source>A date in the Hijrah calendar system.</source>
          <target state="translated">ヒジュラ暦システムの日付。</target>
        </trans-unit>
        <trans-unit id="c1c7acc4aa80b7eeb7672f49c432e7cd85327b48" translate="yes" xml:space="preserve">
          <source>A date in the Japanese Imperial calendar system.</source>
          <target state="translated">日本の帝国暦制度における日付。</target>
        </trans-unit>
        <trans-unit id="7de30d127cf084154c18dba24d51f5c4658f9091" translate="yes" xml:space="preserve">
          <source>A date in the Minguo calendar system.</source>
          <target state="translated">みんぐう暦システムの日付。</target>
        </trans-unit>
        <trans-unit id="eb679e0dede92d2e659a9d8242cd334c8812c331" translate="yes" xml:space="preserve">
          <source>A date in the Thai Buddhist calendar system.</source>
          <target state="translated">タイ仏教のカレンダーシステムにおける日付。</target>
        </trans-unit>
        <trans-unit id="c9aefbb3b8fbfbb921cfbea59354493d7c161995" translate="yes" xml:space="preserve">
          <source>A date is time-based if it can be used to imply meaning from a date. It must have a &lt;a href=&quot;#getDuration()&quot;&gt;duration&lt;/a&gt; that is an integral multiple of the length of a standard day. Note that it is valid for both &lt;code&gt;isDateBased()&lt;/code&gt; and &lt;code&gt;isTimeBased()&lt;/code&gt; to return false, such as when representing a unit like 36 hours.</source>
          <target state="translated">日付は、日付からの意味を暗示するために使用できる場合、時間ベースです。標準日の長さの整数倍の&lt;a href=&quot;#getDuration()&quot;&gt;期間&lt;/a&gt;が必要です。36時間のような単位を表す場合など、 &lt;code&gt;isDateBased()&lt;/code&gt; と &lt;code&gt;isTimeBased()&lt;/code&gt; の両方がfalseを返すことは有効であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="73688423161d451845e09cb015764dabbeb668f9" translate="yes" xml:space="preserve">
          <source>A date is time-based if it can be used to imply meaning from a date. It must have a &lt;a href=&quot;temporalunit#getDuration--&quot;&gt;duration&lt;/a&gt; that is an integral multiple of the length of a standard day. Note that it is valid for both &lt;code&gt;isDateBased()&lt;/code&gt; and &lt;code&gt;isTimeBased()&lt;/code&gt; to return false, such as when representing a unit like 36 hours.</source>
          <target state="translated">日付は、日付の意味を示すために使用できる場合、時間ベースです。&lt;a href=&quot;temporalunit#getDuration--&quot;&gt;期間&lt;/a&gt;は、標準の日の期間の整数倍である必要があります。36時間などの単位を表す場合など、 &lt;code&gt;isDateBased()&lt;/code&gt; と &lt;code&gt;isTimeBased()&lt;/code&gt; の両方がfalseを返すことは有効であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="15998c955b5528e968175b0e012f5926807a8abe" translate="yes" xml:space="preserve">
          <source>A date without a time-zone in the ISO-8601 calendar system, such as &lt;code&gt;2007-12-03&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;2007-12-03&lt;/code&gt; など、ISO-8601カレンダーシステムでタイムゾーンのない日付。</target>
        </trans-unit>
        <trans-unit id="922a9f59988c2dc98cc4b1ef57bbd880865b6d16" translate="yes" xml:space="preserve">
          <source>A date without time-of-day or time-zone in an arbitrary chronology, intended for advanced globalization use cases.</source>
          <target state="translated">先進的なグローバル化のユースケースを想定した、任意の年表に時間帯や時間帯のない日付。</target>
        </trans-unit>
        <trans-unit id="2e438e7f48db8594363e3d4b8a272fd1430eae73" translate="yes" xml:space="preserve">
          <source>A date-based amount of time in the ISO-8601 calendar system, such as '2 years, 3 months and 4 days'.</source>
          <target state="translated">ISO-8601カレンダーシステムにおける「2年、3ヶ月、4日」のような日付ベースの時間量。</target>
        </trans-unit>
        <trans-unit id="ea8975e273a6ef0177859f50acb175de6d095b63" translate="yes" xml:space="preserve">
          <source>A date-based amount of time, such as '3 years, 4 months and 5 days' in an arbitrary chronology, intended for advanced globalization use cases.</source>
          <target state="translated">高度なグローバル化のユースケースを想定した、任意の年表の「3年、4ヶ月、5日」のような日付ベースの時間量。</target>
        </trans-unit>
        <trans-unit id="164536bebef9f26d2ca2490445b8e742d6eac336" translate="yes" xml:space="preserve">
          <source>A date-time with a time-zone in an arbitrary chronology, intended for advanced globalization use cases.</source>
          <target state="translated">先進的なグローバル化のユースケースを想定した、任意の年表のタイムゾーンを持つ日付時間。</target>
        </trans-unit>
        <trans-unit id="097280af56f500be86aab77cc886c6c68d69083a" translate="yes" xml:space="preserve">
          <source>A date-time with a time-zone in the ISO-8601 calendar system, such as &lt;code&gt;2007-12-03T10:15:30+01:00 Europe/Paris&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;2007-12-03T10:15:30+01:00 Europe/Paris&lt;/code&gt; などの、ISO-8601カレンダーシステムのタイムゾーンを含む日時。</target>
        </trans-unit>
        <trans-unit id="4ef9fd927e47ecd38cbd267620a731630ad6d605" translate="yes" xml:space="preserve">
          <source>A date-time with an offset from UTC/Greenwich in the ISO-8601 calendar system, such as &lt;code&gt;2007-12-03T10:15:30+01:00&lt;/code&gt;.</source>
          <target state="translated">ISO-8601カレンダーシステムのUTC /グリニッジからのオフセットのある日時（ &lt;code&gt;2007-12-03T10:15:30+01:00&lt;/code&gt; など)。</target>
        </trans-unit>
        <trans-unit id="aa42790b0fd24d4edfc2bea6b761cee59e338ba9" translate="yes" xml:space="preserve">
          <source>A date-time without a time-zone in an arbitrary chronology, intended for advanced globalization use cases.</source>
          <target state="translated">先進的なグローバル化のユースケースを想定した、任意の年表にタイムゾーンのない日付時間。</target>
        </trans-unit>
        <trans-unit id="4cd7fec84ac247f0315d0f529964606dad258e5d" translate="yes" xml:space="preserve">
          <source>A date-time without a time-zone in the ISO-8601 calendar system, such as &lt;code&gt;2007-12-03T10:15:30&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;2007-12-03T10:15:30&lt;/code&gt; のように、ISO-8601カレンダーシステムでタイムゾーンのない日時。</target>
        </trans-unit>
        <trans-unit id="157be410809c28fe9d32a7c9658f228c1d9c12a7" translate="yes" xml:space="preserve">
          <source>A day-of-week, such as 'Tuesday'.</source>
          <target state="translated">火曜」などの曜日。</target>
        </trans-unit>
        <trans-unit id="89abd7c81d146952b08c454a0a1da8bc94ec80c6" translate="yes" xml:space="preserve">
          <source>A deadlock was detected.</source>
          <target state="translated">行き詰まりが検出されました。</target>
        </trans-unit>
        <trans-unit id="a9ecc568d3f4daf6463d56e74479f881abbaf7f1" translate="yes" xml:space="preserve">
          <source>A decimal digit character:&lt;code&gt;\p{IsDigit}&lt;/code&gt;</source>
          <target state="translated">10進数： &lt;code&gt;\p{IsDigit}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5eff0f0d27d8edf396c4eb418d3158f33ab7a26b" translate="yes" xml:space="preserve">
          <source>A decimal digit character:&lt;code&gt;p{IsDigit}&lt;/code&gt;</source>
          <target state="translated">10進数文字： &lt;code&gt;p{IsDigit}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b598631977de5f143e88066dce901dff98686a6" translate="yes" xml:space="preserve">
          <source>A decimal digit: &lt;code&gt;[0-9]&lt;/code&gt;</source>
          <target state="translated">10進数： &lt;code&gt;[0-9]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="157311c8bc1e2a311fd7d16a1903d15eeb1dce10" translate="yes" xml:space="preserve">
          <source>A decimal point</source>
          <target state="translated">小数点</target>
        </trans-unit>
        <trans-unit id="3a147eaebba94f0aafb2fc225c172ce03371c707" translate="yes" xml:space="preserve">
          <source>A decorative icon to be placed in the dialog box. A default value for this is determined by the &lt;code&gt;messageType&lt;/code&gt; parameter.</source>
          <target state="translated">ダイアログボックスに配置される装飾アイコン。これのデフォルト値は、 &lt;code&gt;messageType&lt;/code&gt; パラメーターによって決定されます。</target>
        </trans-unit>
        <trans-unit id="eacb7c1c16ebd99f7dce891e5025f17399f2e2f4" translate="yes" xml:space="preserve">
          <source>A default &lt;code&gt;BaseRowSet&lt;/code&gt; object is initialized with many starting values. The following is true of a default &lt;code&gt;RowSet&lt;/code&gt; instance that extends the &lt;code&gt;BaseRowSet&lt;/code&gt; class:</source>
          <target state="translated">デフォルトの &lt;code&gt;BaseRowSet&lt;/code&gt; オブジェクトは、多くの開始値で初期化されます。以下は、 &lt;code&gt;BaseRowSet&lt;/code&gt; クラスを拡張するデフォルトの &lt;code&gt;RowSet&lt;/code&gt; インスタンスに当てはまります。</target>
        </trans-unit>
        <trans-unit id="cd2a0ef14d56cc958a92c93743ec0088b9a70441" translate="yes" xml:space="preserve">
          <source>A default &lt;code&gt;CallbackHandler&lt;/code&gt; class implementation may be specified by setting the value of the &lt;code&gt;auth.login.defaultCallbackHandler&lt;/code&gt; security property.</source>
          <target state="translated">デフォルトの &lt;code&gt;CallbackHandler&lt;/code&gt; クラスの実装は、 &lt;code&gt;auth.login.defaultCallbackHandler&lt;/code&gt; セキュリティプロパティの値を設定することで指定できます。</target>
        </trans-unit>
        <trans-unit id="b99bfd83db6c28b8a002954d21d2d96a76dea25f" translate="yes" xml:space="preserve">
          <source>A default &lt;code&gt;ResultSet&lt;/code&gt; object is not updatable and has a cursor that moves forward only. Thus, you can iterate through it only once and only from the first row to the last row. It is possible to produce &lt;code&gt;ResultSet&lt;/code&gt; objects that are scrollable and/or updatable. The following code fragment, in which &lt;code&gt;con&lt;/code&gt; is a valid &lt;code&gt;Connection&lt;/code&gt; object, illustrates how to make a result set that is scrollable and insensitive to updates by others, and that is updatable. See &lt;code&gt;ResultSet&lt;/code&gt; fields for other options.</source>
          <target state="translated">デフォルトの &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトは更新可能ではなく、前方にのみ移動するカーソルがあります。したがって、最初の行から最後の行まで1回だけ繰り返すことができます。スクロール可能および/または更新可能な &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトを生成することが可能です。次のコードフラグメントは、 &lt;code&gt;con&lt;/code&gt; が有効な &lt;code&gt;Connection&lt;/code&gt; オブジェクトであり、スクロール可能で他のユーザーによる更新の影響を受けず、更新可能な結果セットを作成する方法を示しています。その他のオプションについては、 &lt;code&gt;ResultSet&lt;/code&gt; フィールドを参照してください。</target>
        </trans-unit>
        <trans-unit id="fe8d0db92ce5c4e505b1f926182cc6432d1640de" translate="yes" xml:space="preserve">
          <source>A default L&amp;amp;F implementation of MenuBarUI.</source>
          <target state="translated">MenuBarUIのデフォルトのL＆F実装。</target>
        </trans-unit>
        <trans-unit id="e04e173ec48be7a696a9414557505123bb614b96" translate="yes" xml:space="preserve">
          <source>A default L&amp;amp;F implementation of MenuBarUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">MenuBarUIのデフォルトのL＆F実装。この実装は、「結合された」ビュー/コントローラーです。</target>
        </trans-unit>
        <trans-unit id="6a8272f3e52f484a6ce27c79c9769215ed5ae87c" translate="yes" xml:space="preserve">
          <source>A default L&amp;amp;F implementation of MenuUI.</source>
          <target state="translated">MenuUIのデフォルトのL＆F実装。</target>
        </trans-unit>
        <trans-unit id="95200ec264056fd4c2a8497e57d2858c47f0191d" translate="yes" xml:space="preserve">
          <source>A default L&amp;amp;F implementation of MenuUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">MenuUIのデフォルトのL＆F実装。この実装は、「結合された」ビュー/コントローラーです。</target>
        </trans-unit>
        <trans-unit id="9faf29b8ac86cd6ee98675a5581ff9e8c31c42f0" translate="yes" xml:space="preserve">
          <source>A default L&amp;amp;F implementation of ScrollPaneUI.</source>
          <target state="translated">ScrollPaneUIのデフォルトのL＆F実装。</target>
        </trans-unit>
        <trans-unit id="5cd744bf0733a787180eef4442c83eed314c098e" translate="yes" xml:space="preserve">
          <source>A default TerminalFactory is always available. However, depending on the implementation, it may not offer any terminals.</source>
          <target state="translated">デフォルトのTerminalFactoryは常に用意されています。ただし、実装によっては端末を提供しない場合があります。</target>
        </trans-unit>
        <trans-unit id="b9a6eacf12d63cc0e2ee5fc279c41f03de9eabe5" translate="yes" xml:space="preserve">
          <source>A default horizontal thumb &lt;code&gt;Icon&lt;/code&gt;.</source>
          <target state="translated">デフォルトの水平親指 &lt;code&gt;Icon&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4783bbb67a33b2992887ff110755ed8d76992c97" translate="yes" xml:space="preserve">
          <source>A default horizontal thumb &lt;code&gt;Icon&lt;/code&gt;. This field might not be used. To change the &lt;code&gt;Icon&lt;/code&gt; used by this delegate directly set it using the &lt;code&gt;Slider.horizontalThumbIcon&lt;/code&gt; UIManager property.</source>
          <target state="translated">デフォルトの水平親指 &lt;code&gt;Icon&lt;/code&gt; 。このフィールドは使用されない場合があります。変更するには &lt;code&gt;Icon&lt;/code&gt; このデリゲートによって使用を直接使用して、それを設定し &lt;code&gt;Slider.horizontalThumbIcon&lt;/code&gt; のUIManagerプロパティを。</target>
        </trans-unit>
        <trans-unit id="895cd1d0c3c4897508ede06f87f5a985330bf289" translate="yes" xml:space="preserve">
          <source>A default implementation of Caret.</source>
          <target state="translated">Caretのデフォルトの実装です。</target>
        </trans-unit>
        <trans-unit id="57bbfc291e6251172e02f1663e0f826298ae79ee" translate="yes" xml:space="preserve">
          <source>A default implementation of Caret. The caret is rendered as a vertical line in the color specified by the CaretColor property of the associated JTextComponent. It can blink at the rate specified by the BlinkRate property.</source>
          <target state="translated">キャレットのデフォルトの実装。カレットは、関連する JTextComponent の CaretColor プロパティで指定された色の垂直線としてレンダリングされます。BlinkRate プロパティで指定した割合で点滅させることができます。</target>
        </trans-unit>
        <trans-unit id="b08558f81563eb2f14f1c724a86a9b41c48e40d8" translate="yes" xml:space="preserve">
          <source>A default vertical thumb &lt;code&gt;Icon&lt;/code&gt;.</source>
          <target state="translated">デフォルトの垂直サム &lt;code&gt;Icon&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="377ac0b773de448340bc8623588ff6c5ffc7818e" translate="yes" xml:space="preserve">
          <source>A default vertical thumb &lt;code&gt;Icon&lt;/code&gt;. This field might not be used. To change the &lt;code&gt;Icon&lt;/code&gt; used by this delegate directly set it using the &lt;code&gt;Slider.verticalThumbIcon&lt;/code&gt; UIManager property.</source>
          <target state="translated">デフォルトの垂直サム &lt;code&gt;Icon&lt;/code&gt; 。このフィールドは使用されない場合があります。変更するには &lt;code&gt;Icon&lt;/code&gt; このデリゲートによって使用を直接使用して、それを設定し &lt;code&gt;Slider.verticalThumbIcon&lt;/code&gt; のUIManagerプロパティを。</target>
        </trans-unit>
        <trans-unit id="3eead970a964cfd77fd60eb90fa4973507e78a75" translate="yes" xml:space="preserve">
          <source>A definition of the way a local time can be converted to the actual transition date-time.</source>
          <target state="translated">ローカル時間を実際の遷移日時に変換する方法の定義。</target>
        </trans-unit>
        <trans-unit id="c9dd44617c4d88f5e2e6388d8e2dafe4e46a14ef" translate="yes" xml:space="preserve">
          <source>A delayed result-bearing action that can be cancelled.</source>
          <target state="translated">結果が遅れてキャンセルされることもある行動。</target>
        </trans-unit>
        <trans-unit id="ac46e84e3abf4aff48d4f542f6baf971ac9dad1e" translate="yes" xml:space="preserve">
          <source>A delayed result-bearing action that can be cancelled. Usually a scheduled future is the result of scheduling a task with a &lt;a href=&quot;scheduledexecutorservice&quot;&gt;&lt;code&gt;ScheduledExecutorService&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">キャンセルできる遅延した結果を伴うアクション。通常、スケジュールされたフューチャーは、&lt;a href=&quot;scheduledexecutorservice&quot;&gt; &lt;code&gt;ScheduledExecutorService&lt;/code&gt; で&lt;/a&gt;タスクをスケジュールした結果です。</target>
        </trans-unit>
        <trans-unit id="c23a3f9cc77449f2c7206f98f654f1e397e1782a" translate="yes" xml:space="preserve">
          <source>A dependence upon a module</source>
          <target state="translated">モジュールへの依存</target>
        </trans-unit>
        <trans-unit id="5572adadfdd4648f0ee6ddebccd29574fd8ebae6" translate="yes" xml:space="preserve">
          <source>A dependency of a module.</source>
          <target state="translated">モジュールの依存関係。</target>
        </trans-unit>
        <trans-unit id="daf559c6ba08fd75e8590ce4b96a16bac7e5a662" translate="yes" xml:space="preserve">
          <source>A dereferencer of &lt;a href=&quot;urireference&quot;&gt;&lt;code&gt;URIReference&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">&lt;a href=&quot;urireference&quot;&gt; &lt;code&gt;URIReference&lt;/code&gt; &lt;/a&gt;の間接参照。</target>
        </trans-unit>
        <trans-unit id="9281783cd7910a1b9bd0cbddec54bbe22a45331a" translate="yes" xml:space="preserve">
          <source>A description of a Serializable field from a Serializable class.</source>
          <target state="translated">シリアライズ可能なクラスのシリアライズ可能なフィールドの記述。</target>
        </trans-unit>
        <trans-unit id="76b5a73d15645da68ef6f5bf9709ccb80943a81e" translate="yes" xml:space="preserve">
          <source>A description of a Serializable field from a Serializable class. An array of ObjectStreamFields is used to declare the Serializable fields of a class.</source>
          <target state="translated">SerializableクラスのSerializableフィールドの記述。クラスのシリアライズ可能なフィールドを宣言するために、ObjectStreamFieldsの配列を使用します。</target>
        </trans-unit>
        <trans-unit id="62eb29e85381c666aa2036d142f522d9f38765c8" translate="yes" xml:space="preserve">
          <source>A description of a to-be-instantiated KeyStore object.</source>
          <target state="translated">インスタンス化される予定のKeyStoreオブジェクトの説明。</target>
        </trans-unit>
        <trans-unit id="3d1c33b4d2727c3bbde32903a7c46f61993d7993" translate="yes" xml:space="preserve">
          <source>A description of the result state of a coder.</source>
          <target state="translated">コーダーの結果の状態の記述。</target>
        </trans-unit>
        <trans-unit id="0d6f09acd02e2b1303ba87805be2fea193b39dfd" translate="yes" xml:space="preserve">
          <source>A description of these layouts follows:</source>
          <target state="translated">これらのレイアウトの説明は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="503550528bc86ec5d2191b4236089b4484a623f3" translate="yes" xml:space="preserve">
          <source>A descriptive message to be placed in the dialog box. In the most common usage, message is just a &lt;code&gt;String&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt; constant. However, the type of this parameter is actually &lt;code&gt;Object&lt;/code&gt;. Its interpretation depends on its type:</source>
          <target state="translated">ダイアログボックスに表示される説明メッセージ。最も一般的な使用法では、メッセージは単なる &lt;code&gt;String&lt;/code&gt; または &lt;code&gt;String&lt;/code&gt; 定数です。ただし、このパラメーターのタイプは実際には &lt;code&gt;Object&lt;/code&gt; です。その解釈はそのタイプによって異なります。</target>
        </trans-unit>
        <trans-unit id="941de8ae14a5bae60a5d906de62f015bbb32d97b" translate="yes" xml:space="preserve">
          <source>A descriptive string</source>
          <target state="translated">記述文字列</target>
        </trans-unit>
        <trans-unit id="39b6b0c8659ae33eb1969916bc67e68279e3a0d9" translate="yes" xml:space="preserve">
          <source>A descriptor can be mutable or immutable. An immutable descriptor, once created, never changes. The &lt;code&gt;Descriptor&lt;/code&gt; methods that could modify the contents of the descriptor will throw an exception for an immutable descriptor. Immutable descriptors are usually instances of &lt;a href=&quot;immutabledescriptor&quot;&gt;&lt;code&gt;ImmutableDescriptor&lt;/code&gt;&lt;/a&gt; or a subclass. Mutable descriptors are usually instances of &lt;a href=&quot;modelmbean/descriptorsupport&quot;&gt;&lt;code&gt;DescriptorSupport&lt;/code&gt;&lt;/a&gt; or a subclass.</source>
          <target state="translated">記述子は変更可能または不変にすることができます。不変の記述子は、一度作成されると変更されることはありません。 &lt;code&gt;Descriptor&lt;/code&gt; 記述子の内容を修正することができる方法は不変記述子に対して例外がスローされます。不変記述子は通常、&lt;a href=&quot;immutabledescriptor&quot;&gt; &lt;code&gt;ImmutableDescriptor&lt;/code&gt; &lt;/a&gt;またはサブクラスのインスタンスです。可変記述子は通常、&lt;a href=&quot;modelmbean/descriptorsupport&quot;&gt; &lt;code&gt;DescriptorSupport&lt;/code&gt; &lt;/a&gt;またはサブクラスのインスタンスです。</target>
        </trans-unit>
        <trans-unit id="72904f35789eb5719433f738c8b55b480e3f7be2" translate="yes" xml:space="preserve">
          <source>A descriptor consists of a collection of fields. Each field is in fieldname=fieldvalue format. Field names are not case sensitive, case will be preserved on field values.</source>
          <target state="translated">ディスクリプタは、フィールドの集合で構成されます。各フィールドは fieldname=fieldvalue 形式です。フィールド名は大文字と小文字を区別しません。</target>
        </trans-unit>
        <trans-unit id="90bc82ff659998d45e1e39ffda8cb824fc0bfa07" translate="yes" xml:space="preserve">
          <source>A descriptor registered with the activation system can be used to recreate/activate the object specified by the descriptor. The &lt;code&gt;MarshalledObject&lt;/code&gt; in the object's descriptor is passed as the second argument to the remote object's constructor for object to use during reinitialization/activation.</source>
          <target state="translated">アクティベーションシステムに登録されている記述子を使用して、記述子で指定されたオブジェクトを再作成/アクティブ化できます。オブジェクトの記述子内の &lt;code&gt;MarshalledObject&lt;/code&gt; は、再初期化/アクティブ化中に使用するオブジェクトのリモートオブジェクトのコンストラクターに2番目の引数として渡されます。</target>
        </trans-unit>
        <trans-unit id="f0ff2df0a69862e0b2488b671e2b54a0b5b5e113" translate="yes" xml:space="preserve">
          <source>A descriptor which is equal to this descriptor.</source>
          <target state="translated">この記述子と等しい記述子。</target>
        </trans-unit>
        <trans-unit id="4b102a703f2ede2ee34cfdc855003bf78429b505" translate="yes" xml:space="preserve">
          <source>A dialog can be either modeless (the default) or modal. A modal dialog is one which blocks input to some other top-level windows in the application, except for any windows created with the dialog as their owner. See &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/Modality.html&quot;&gt;AWT Modality&lt;/a&gt; specification for details.</source>
          <target state="translated">ダイアログは、モードレス（デフォルト）またはモーダルのいずれかです。モーダルダイアログは、ダイアログを所有者として作成されたウィンドウを除いて、アプリケーション内の他のトップレベルウィンドウへの入力をブロックするダイアログです。詳細については、&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/Modality.html&quot;&gt;AWTモダリティ&lt;/a&gt;仕様を参照してください。</target>
        </trans-unit>
        <trans-unit id="904d1f2e68b031295de8cafe7035cb526e4f3232" translate="yes" xml:space="preserve">
          <source>A dialog may have another window as its owner when it's constructed. When the owner window of a visible dialog is minimized, the dialog will automatically be hidden from the user. When the owner window is subsequently restored, the dialog is made visible to the user again.</source>
          <target state="translated">ダイアログが作成されたとき、ダイアログは別のウィンドウを所有者とすることができます。表示されているダイアログの所有者ウィンドウが最小化されると、 ダイアログは自動的に非表示になります。その後所有者ウィンドウが復元されると、 ダイアログは再び利用者に見えるようになります。</target>
        </trans-unit>
        <trans-unit id="f495413b1396c36454c52331f1acea05a9263eaf" translate="yes" xml:space="preserve">
          <source>A dialog may have its native decorations (i.e. Frame &amp;amp; Titlebar) turned off with &lt;code&gt;setUndecorated&lt;/code&gt;. This can only be done while the dialog is not &lt;a href=&quot;component#isDisplayable()&quot;&gt;&lt;code&gt;displayable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ダイアログのネイティブデコレーション（フレームとタイトルバーなど）は、 &lt;code&gt;setUndecorated&lt;/code&gt; でオフになっている場合があります。これは、ダイアログが&lt;a href=&quot;component#isDisplayable()&quot;&gt; &lt;code&gt;displayable&lt;/code&gt; &lt;/a&gt;いないときにのみ実行できます。</target>
        </trans-unit>
        <trans-unit id="f2ac3be272a0574021e64ac6b1513e44e8223162" translate="yes" xml:space="preserve">
          <source>A digit: &lt;code&gt;[0-9]&lt;/code&gt;</source>
          <target state="translated">数字： &lt;code&gt;[0-9]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e55b37ed13f5e44ba0fa6d222acf00463637355" translate="yes" xml:space="preserve">
          <source>A digit: &lt;code&gt;\p{IsDigit}&lt;/code&gt;</source>
          <target state="translated">数字： &lt;code&gt;\p{IsDigit}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e1c6320bfe897efcad522bedce59a1bf3c1d0a0" translate="yes" xml:space="preserve">
          <source>A direct byte buffer mapped to a region of a file</source>
          <target state="translated">ファイルの領域にマップされたダイレクトバイトバッファ。</target>
        </trans-unit>
        <trans-unit id="0fc1a07aefb0815717141569b5cba4c4d5206598" translate="yes" xml:space="preserve">
          <source>A direct byte buffer may also be created by &lt;a href=&quot;channels/filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt;&lt;code&gt;mapping&lt;/code&gt;&lt;/a&gt; a region of a file directly into memory. An implementation of the Java platform may optionally support the creation of direct byte buffers from native code via JNI. If an instance of one of these kinds of buffers refers to an inaccessible region of memory then an attempt to access that region will not change the buffer's content and will cause an unspecified exception to be thrown either at the time of the access or at some later time.</source>
          <target state="translated">ダイレクトバイトバッファは、ファイルの領域をメモリに直接&lt;a href=&quot;channels/filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt; &lt;code&gt;mapping&lt;/code&gt; &lt;/a&gt;することによって作成することもできます。 Javaプラットフォームの実装は、オプションで、JNIを介したネイティブコードからの直接バイトバッファの作成をサポートする場合があります。これらの種類のバッファのいずれかのインスタンスがメモリのアクセスできない領域を参照している場合、その領域にアクセスしようとしてもバッファの内容は変更されず、アクセス時またはアクセス後に不特定の例外がスローされます。時間。</target>
        </trans-unit>
        <trans-unit id="81aaa261b81128af12881c936333c5551a92c591" translate="yes" xml:space="preserve">
          <source>A direct byte buffer may also be created by &lt;a href=&quot;channels/filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt;&lt;code&gt;mapping&lt;/code&gt;&lt;/a&gt; a region of a file directly into memory. An implementation of the Java platform may optionally support the creation of direct byte buffers from native code via JNI. If an instance of one of these kinds of buffers refers to an inaccessible region of memory then an attempt to access that region will not change the buffer's content and will cause an unspecified exception to be thrown either at the time of the access or at some later time.</source>
          <target state="translated">ダイレクトバイトバッファは、ファイルの領域を直接メモリに&lt;a href=&quot;channels/filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt; &lt;code&gt;mapping&lt;/code&gt; &lt;/a&gt;することによっても作成できます。 Javaプラットフォームの実装は、オプションで、JNIを介したネイティブコードからのダイレクトバイトバッファーの作成をサポートする場合があります。これらの種類のバッファのいずれかのインスタンスがアクセスできないメモリ領域を参照している場合、その領域にアクセスしようとしてもバッファの内容は変更されず、アクセス時または後で、指定されていない例外がスローされます。時間。</target>
        </trans-unit>
        <trans-unit id="cbbe5c24c618f05f3ad9a84e48d3d7e4a20571df" translate="yes" xml:space="preserve">
          <source>A direct byte buffer may be created by invoking the &lt;a href=&quot;#allocateDirect(int)&quot;&gt;&lt;code&gt;allocateDirect&lt;/code&gt;&lt;/a&gt; factory method of this class. The buffers returned by this method typically have somewhat higher allocation and deallocation costs than non-direct buffers. The contents of direct buffers may reside outside of the normal garbage-collected heap, and so their impact upon the memory footprint of an application might not be obvious. It is therefore recommended that direct buffers be allocated primarily for large, long-lived buffers that are subject to the underlying system's native I/O operations. In general it is best to allocate direct buffers only when they yield a measureable gain in program performance.</source>
          <target state="translated">ダイレクトバイトバッファは、このクラスの&lt;a href=&quot;#allocateDirect(int)&quot;&gt; &lt;code&gt;allocateDirect&lt;/code&gt; &lt;/a&gt;ファクトリメソッドを呼び出すことで作成できます。このメソッドによって返されるバッファは、通常、非直接バッファよりも割り当てと割り当て解除のコストがいくらか高くなります。直接バッファの内容は、通常のガベージコレクションヒープの外部にある可能性があるため、アプリケーションのメモリフットプリントへの影響は明らかではない可能性があります。したがって、直接バッファは、主に、基盤となるシステムのネイティブI / O操作の対象となる大規模で長寿命のバッファに割り当てることをお勧めします。一般に、直接バッファは、プログラムのパフォーマンスが測定可能な程度に向上する場合にのみ割り当てるのが最適です。</target>
        </trans-unit>
        <trans-unit id="ab01d4bccb2016b6742b55c3ca10eb76a7c66d26" translate="yes" xml:space="preserve">
          <source>A direct byte buffer may be created by invoking the &lt;a href=&quot;bytebuffer#allocateDirect-int-&quot;&gt;&lt;code&gt;allocateDirect&lt;/code&gt;&lt;/a&gt; factory method of this class. The buffers returned by this method typically have somewhat higher allocation and deallocation costs than non-direct buffers. The contents of direct buffers may reside outside of the normal garbage-collected heap, and so their impact upon the memory footprint of an application might not be obvious. It is therefore recommended that direct buffers be allocated primarily for large, long-lived buffers that are subject to the underlying system's native I/O operations. In general it is best to allocate direct buffers only when they yield a measureable gain in program performance.</source>
          <target state="translated">このクラスの&lt;a href=&quot;bytebuffer#allocateDirect-int-&quot;&gt; &lt;code&gt;allocateDirect&lt;/code&gt; &lt;/a&gt;ファクトリメソッドを呼び出すことにより、ダイレクトバイトバッファを作成できます。このメソッドによって返されるバッファーは、通常、非ダイレクトバッファーよりも割り当てと割り当て解除のコストがいくらか高くなります。ダイレクトバッファの内容は、通常のガベージコレクションされたヒープの外に存在する可能性があるため、アプリケーションのメモリフットプリントへの影響は明らかではない場合があります。したがって、直接バッファーは、主に、基盤となるシステムのネイティブI / O操作の影響を受ける、長期間有効な大きなバッファーに割り当てることをお勧めします。一般的に、ダイレクトバッファは、プログラムのパフォーマンスが測定可能なほど向上する場合にのみ割り当てるのが最適です。</target>
        </trans-unit>
        <trans-unit id="9e62af31304449a0e8e9997671ca8cef65fe0060" translate="yes" xml:space="preserve">
          <source>A direct byte buffer whose content is a memory-mapped region of a file.</source>
          <target state="translated">ファイルのメモリマップされた領域を内容とするダイレクトバイトバッファ。</target>
        </trans-unit>
        <trans-unit id="27d710eefe649a75a4ba4bf7f513ec23a73d1bf8" translate="yes" xml:space="preserve">
          <source>A direct method handle reference kind, as defined in the &lt;a href=&quot;methodhandleinfo#refkinds&quot;&gt;table above&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;methodhandleinfo#refkinds&quot;&gt;上記&lt;/a&gt;の表で定義されている、直接メソッドハンドル参照の種類。</target>
        </trans-unit>
        <trans-unit id="2c4d94bf1cbf3f0b6e58c8d46620a3904bfb67dc" translate="yes" xml:space="preserve">
          <source>A directory might return more attributes than was requested (see &lt;strong&gt;Attribute Type Names&lt;/strong&gt; in the class description), but is not allowed to return arbitrary, unrelated attributes.</source>
          <target state="translated">ディレクトリは要求されたよりも多くの属性を返す可能性があります（クラスの説明の&lt;strong&gt;属性タイプ名&lt;/strong&gt;を参照）。ただし、任意の無関係な属性を返すことは許可されていません。</target>
        </trans-unit>
        <trans-unit id="2f43b3eeaa9f2985c2c0a2500f1ecaf8cf55ba57" translate="yes" xml:space="preserve">
          <source>A directory might return more attributes than were requested (see &lt;strong&gt;Attribute Type Names&lt;/strong&gt; in the class description) but is not allowed to return arbitrary, unrelated attributes.</source>
          <target state="translated">ディレクトリは要求されたよりも多くの属性を返す可能性があります（クラスの説明の&lt;strong&gt;属性タイプ名&lt;/strong&gt;を参照）が、任意の無関係な属性を返すことは許可されていません。</target>
        </trans-unit>
        <trans-unit id="03fe397e85f8a42f3fbf743c8747c214f39a12ce" translate="yes" xml:space="preserve">
          <source>A directory stream is not required to be</source>
          <target state="translated">ディレクトリストリームは</target>
        </trans-unit>
        <trans-unit id="688f381d5ef6e2e50ea91339058716db8dfc57cc" translate="yes" xml:space="preserve">
          <source>A disconnected &lt;code&gt;RowSet&lt;/code&gt; object that has implemented the &lt;code&gt;RowSetInternal&lt;/code&gt; interface can call on its reader (the &lt;code&gt;RowSetReader&lt;/code&gt; object associated with it) to populate it with data. When an application calls the &lt;code&gt;RowSet.execute&lt;/code&gt; method, that method calls on the rowset's reader to do much of the work. Implementations can vary widely, but generally a reader makes a connection to the data source, reads data from the data source and populates the rowset with it, and closes the connection. A reader may also update the &lt;code&gt;RowSetMetaData&lt;/code&gt; object for its rowset. The rowset's internal state is also updated, either by the reader or directly by the method &lt;code&gt;RowSet.execute&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RowSetInternal&lt;/code&gt; インターフェイスを実装した切断された &lt;code&gt;RowSet&lt;/code&gt; オブジェクトは、そのリーダー（それに関連付けられた &lt;code&gt;RowSetReader&lt;/code&gt; オブジェクト）を呼び出して、データを取り込むことができます。アプリケーションが &lt;code&gt;RowSet.execute&lt;/code&gt; メソッドを呼び出すと、そのメソッドは行セットのリーダーを呼び出して多くの作業を実行します。実装は大きく異なりますが、通常、リーダーはデータソースに接続し、データソースからデータを読み取り、行セットにデータを入力して、接続を閉じます。リーダーは、行セットの &lt;code&gt;RowSetMetaData&lt;/code&gt; オブジェクトを更新することもできます。行セットの内部状態も、リーダーによって、またはメソッド &lt;code&gt;RowSet.execute&lt;/code&gt; によって直接更新されます。</target>
        </trans-unit>
        <trans-unit id="110186d8a895ddbb678f6d03ccace1c416a9dfda" translate="yes" xml:space="preserve">
          <source>A disconnected &lt;code&gt;RowSet&lt;/code&gt; object that has implemented the &lt;code&gt;RowSetInternal&lt;/code&gt; interface can call on its writer (the &lt;code&gt;RowSetWriter&lt;/code&gt; object associated with it) to write changes back to the underlying data source. Implementations may vary widely, but generally, a writer will do the following:</source>
          <target state="translated">&lt;code&gt;RowSetInternal&lt;/code&gt; インターフェイスを実装した切断された &lt;code&gt;RowSet&lt;/code&gt; オブジェクトは、そのライター（それに関連付けられた &lt;code&gt;RowSetWriter&lt;/code&gt; オブジェクト）を呼び出して、基になるデータソースに変更を書き戻すことができます。実装は大きく異なる可能性がありますが、一般的に、ライターは次のことを行います。</target>
        </trans-unit>
        <trans-unit id="450d789fb4ad236790f5011ec44343669706eef9" translate="yes" xml:space="preserve">
          <source>A disconnected &lt;code&gt;RowSet&lt;/code&gt; object, such as a &lt;code&gt;CachedRowSet&lt;/code&gt; object, &lt;b&gt;should&lt;/b&gt; delegate connection management to a &lt;code&gt;SyncProvider&lt;/code&gt; object provided by the &lt;code&gt;SyncFactory&lt;/code&gt;. To ensure fully disconnected semantics, all disconnected &lt;code&gt;RowSet&lt;/code&gt; objects &lt;b&gt;must&lt;/b&gt; ensure that the original connection made to the data source to populate the &lt;code&gt;RowSet&lt;/code&gt; object is closed to permit the garbage collector to recover and release resources. The &lt;code&gt;SyncProvider&lt;/code&gt; object ensures that the critical JDBC properties are maintained in order to re-establish a connection to the data source when a synchronization is required. A disconnected &lt;code&gt;RowSet&lt;/code&gt; object should therefore ensure that no extraneous references remain on the &lt;code&gt;Connection&lt;/code&gt; object.</source>
          <target state="translated">切断され &lt;code&gt;RowSet&lt;/code&gt; オブジェクトは、など &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクト&lt;b&gt;べき&lt;/b&gt;への接続管理を委任 &lt;code&gt;SyncProvider&lt;/code&gt; によって提供されるオブジェクト &lt;code&gt;SyncFactory&lt;/code&gt; が。完全に切断さセマンティクスを確保するために、すべての切断さ &lt;code&gt;RowSet&lt;/code&gt; オブジェクトが&lt;b&gt;なければなりません&lt;/b&gt;元の接続を移入するデータソースに行われていることを確認し &lt;code&gt;RowSet&lt;/code&gt; オブジェクトがリソースを回復し、解放するためにガベージコレクタを許可するように閉じられています。 &lt;code&gt;SyncProvider&lt;/code&gt; 同期が必要とされたときに、重要なJDBCプロパティがデータソースへの接続を再確立するために維持されていることをオブジェクトが保証されます。切断された &lt;code&gt;RowSet&lt;/code&gt; したがって、オブジェクトは、 &lt;code&gt;Connection&lt;/code&gt; オブジェクトに無関係な参照が残っていないことを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="0f70425adb4860eace6ccc351f6a243d8c310126" translate="yes" xml:space="preserve">
          <source>A disconnected &lt;code&gt;Rowset&lt;/code&gt; object may get access to a &lt;code&gt;SyncProvider&lt;/code&gt; object in one of the following two ways:</source>
          <target state="translated">切断された &lt;code&gt;Rowset&lt;/code&gt; オブジェクトは、次の2つの方法のいずれかで &lt;code&gt;SyncProvider&lt;/code&gt; オブジェクトにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="f36a9dca7441e97c0bdb8885b48b0430dc5dcf59" translate="yes" xml:space="preserve">
          <source>A disconnected rowset may have a &lt;code&gt;Reader&lt;/code&gt; (a &lt;code&gt;RowSetReader&lt;/code&gt; object) and a writer (a &lt;code&gt;RowSetWriter&lt;/code&gt; object) associated with it. The &lt;code&gt;Reader&lt;/code&gt; may be implemented in many different ways to populate a rowset with data, including getting data from a non-relational data source. The writer can also be implemented in many different ways to propagate changes made to the rowset's data back to the underlying data source.</source>
          <target state="translated">切断された行セットには、 &lt;code&gt;Reader&lt;/code&gt; （ &lt;code&gt;RowSetReader&lt;/code&gt; オブジェクト）とライター（ &lt;code&gt;RowSetWriter&lt;/code&gt; オブジェクト）が関連付けられている場合があります。 &lt;code&gt;Reader&lt;/code&gt; は、非リレーショナルデータソースからデータを取得するなど、データを持つ行セットを移入するために多くの異なる方法で実施することができます。ライターは、行セットのデータに加えられた変更を基になるデータソースに伝播するために、さまざまな方法で実装することもできます。</target>
        </trans-unit>
        <trans-unit id="24aaafb4de473bcceb6c1a588033ca327c736e00" translate="yes" xml:space="preserve">
          <source>A discussion of the use of dynamically typesafe views may be found in the documentation for the &lt;a href=&quot;#checkedCollection(java.util.Collection,java.lang.Class)&quot;&gt;&lt;code&gt;checkedCollection&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">動的にタイプセーフなビューの使用に関する説明は、&lt;a href=&quot;#checkedCollection(java.util.Collection,java.lang.Class)&quot;&gt; &lt;code&gt;checkedCollection&lt;/code&gt; &lt;/a&gt;メソッドのドキュメントに記載されています。</target>
        </trans-unit>
        <trans-unit id="1daa8bbdabafd9fce66bb5e5f6f1d901814d2276" translate="yes" xml:space="preserve">
          <source>A discussion of the use of dynamically typesafe views may be found in the documentation for the &lt;a href=&quot;collections#checkedCollection-java.util.Collection-java.lang.Class-&quot;&gt;&lt;code&gt;checkedCollection&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">動的に型保証されたビューの使用に関する説明は、&lt;a href=&quot;collections#checkedCollection-java.util.Collection-java.lang.Class-&quot;&gt; &lt;code&gt;checkedCollection&lt;/code&gt; &lt;/a&gt;メソッドのドキュメントにあります。</target>
        </trans-unit>
        <trans-unit id="5bf7cdfb210761e58612920806cc60028cef0dee" translate="yes" xml:space="preserve">
          <source>A display area for a short text string or an image, or both.</source>
          <target state="translated">短いテキスト文字列または画像、またはその両方を表示する領域。</target>
        </trans-unit>
        <trans-unit id="5a434aab2ca42e2ccca690bb12ce75fe97d8f206" translate="yes" xml:space="preserve">
          <source>A display area for a short text string or an image, or both. A label does not react to input events. As a result, it cannot get the keyboard focus. A label can, however, display a keyboard alternative as a convenience for a nearby component that has a keyboard alternative but can't display it.</source>
          <target state="translated">短いテキスト文字列または画像、またはその両方を表示する領域。ラベルは入力イベントに反応しません。その結果、キーボードのフォーカスを得ることができません。しかし、ラベルはキーボードの代替品を表示することができますが、キーボードの代替品を表示できない近くのコンポーネントのための利便性として、キーボードの代替品を表示することができます。</target>
        </trans-unit>
        <trans-unit id="2af42f197ce8c147ed5af6ab9abbb20857cbf9da" translate="yes" xml:space="preserve">
          <source>A distinct rendering area of a Swing component.</source>
          <target state="translated">Swingコンポーネントのレンダリング領域を指定します。</target>
        </trans-unit>
        <trans-unit id="4b400d01f64cbdd08143ab0c640264ea343ecb60" translate="yes" xml:space="preserve">
          <source>A distinct rendering area of a Swing component. A component may support one or more regions. Specific component regions are defined by the typesafe enumeration in this class.</source>
          <target state="translated">Swingコンポーネントの明確なレンダリング領域。コンポーネントは、1つまたは複数の領域をサポートしています。特定のコンポーネント領域は、このクラスの typesafe 列挙によって定義されます。</target>
        </trans-unit>
        <trans-unit id="880fb129a686d82ae7e8a1faddba49404e033c38" translate="yes" xml:space="preserve">
          <source>A do-nothing constructor.</source>
          <target state="translated">何もしないコンストラクタ。</target>
        </trans-unit>
        <trans-unit id="ba128ff46d6d09091f6de642d4da3a2a3af5bf2f" translate="yes" xml:space="preserve">
          <source>A document that can be marked up with character and paragraph styles in a manner similar to the Rich Text Format.</source>
          <target state="translated">リッチテキスト形式と同様の方法で、文字や段落のスタイルをマークアップできる文書。</target>
        </trans-unit>
        <trans-unit id="6466e47872811247292613ad06e41649e2466883" translate="yes" xml:space="preserve">
          <source>A document that can be marked up with character and paragraph styles in a manner similar to the Rich Text Format. The element structure for this document represents style crossings for style runs. These style runs are mapped into a paragraph element structure (which may reside in some other structure). The style runs break at paragraph boundaries since logical styles are assigned to paragraph boundaries.</source>
          <target state="translated">リッチテキスト形式に似た方法で文字や段落のスタイルをマークアップできる文書。この文書の要素構造は、スタイルランのためのスタイルの交差を表しています。これらのスタイルランは、段落要素構造(他の構造に存在する場合もある)にマップされています。論理スタイルが段落境界に割り当てられているため、スタイルランは段落境界で中断します。</target>
        </trans-unit>
        <trans-unit id="9cf5b610d9afca74d207b8d156cd175c162fb034" translate="yes" xml:space="preserve">
          <source>A document that models HTML.</source>
          <target state="translated">HTMLをモデル化したドキュメント。</target>
        </trans-unit>
        <trans-unit id="3463762c970ad57db4db9fc03ca463b94634ba5f" translate="yes" xml:space="preserve">
          <source>A document that models HTML. The purpose of this model is to support both browsing and editing. As a result, the structure described by an HTML document is not exactly replicated by default. The element structure that is modeled by default, is built by the class &lt;code&gt;HTMLDocument.HTMLReader&lt;/code&gt;, which implements the &lt;code&gt;HTMLEditorKit.ParserCallback&lt;/code&gt; protocol that the parser expects. To change the structure one can subclass &lt;code&gt;HTMLReader&lt;/code&gt;, and reimplement the method &lt;a href=&quot;#getReader(int)&quot;&gt;&lt;code&gt;getReader(int)&lt;/code&gt;&lt;/a&gt; to return the new reader implementation. The documentation for &lt;code&gt;HTMLReader&lt;/code&gt; should be consulted for the details of the default structure created. The intent is that the document be non-lossy (although reproducing the HTML format may result in a different format).</source>
          <target state="translated">HTMLをモデル化するドキュメント。このモデルの目的は、ブラウジングと編集の両方をサポートすることです。その結果、HTMLドキュメントで記述された構造は、デフォルトでは正確に複製されません。デフォルトでモデル化される要素構造は、パーサーが期待する &lt;code&gt;HTMLEditorKit.ParserCallback&lt;/code&gt; プロトコルを実装するクラス &lt;code&gt;HTMLDocument.HTMLReader&lt;/code&gt; によって構築されます。構造を変更するには、 &lt;code&gt;HTMLReader&lt;/code&gt; をサブクラス化し、メソッド&lt;a href=&quot;#getReader(int)&quot;&gt; &lt;code&gt;getReader(int)&lt;/code&gt; &lt;/a&gt;を再実装して、新しいリーダーの実装を返します。 &lt;code&gt;HTMLReader&lt;/code&gt; のドキュメント作成されるデフォルトの構造の詳細については、参照する必要があります。目的は、ドキュメントが非可逆であることです（ただし、HTML形式を複製すると異なる形式になる場合があります）。</target>
        </trans-unit>
        <trans-unit id="b71c71564559739571d89dc193d01264a17d03d7" translate="yes" xml:space="preserve">
          <source>A documentation comment of an element is a comment that begins with &quot;&lt;code&gt;/**&lt;/code&gt;&quot; , ends with a separate &quot;&lt;code&gt;*/&lt;/code&gt;&quot;, and immediately precedes the element, ignoring white space. Therefore, a documentation comment contains at least three&quot;&lt;code&gt;*&lt;/code&gt;&quot; characters. The text returned for the documentation comment is a processed form of the comment as it appears in source code. The leading &quot;&lt;code&gt;
 /**&lt;/code&gt;&quot; and trailing &quot;&lt;code&gt;*/&lt;/code&gt;&quot; are removed. For lines of the comment starting after the initial &quot;&lt;code&gt;/**&lt;/code&gt;&quot;, leading white space characters are discarded as are any consecutive &quot;&lt;code&gt;*&lt;/code&gt;&quot; characters appearing after the white space or starting the line. The processed lines are then concatenated together (including line terminators) and returned.</source>
          <target state="translated">要素のドキュメンテーションコメントは、「 &lt;code&gt;/**&lt;/code&gt; 」で始まり、個別の「 &lt;code&gt;*/&lt;/code&gt; 」で終わり、空白を無視して要素の直前にあるコメントです。したがって、ドキュメントのコメントには少なくとも3つの &quot; &lt;code&gt;*&lt;/code&gt; &quot;文字が含まれます。ドキュメントコメントに対して返されるテキストは、ソースコードに表示されるコメントの処理済み形式です。先頭の「 &lt;code&gt; /**&lt;/code&gt; 」と末尾の「 &lt;code&gt;*/&lt;/code&gt; 」は削除されます。最初の「 &lt;code&gt;/**&lt;/code&gt; 」の後に始まるコメントの行の場合、先頭の空白文字は、連続する「 &lt;code&gt;*&lt;/code&gt; 」と同様に破棄されます。&quot;空白の後に表示される文字、または行の開始文字。処理された行は連結され（行末記号を含む）、返されます。</target>
        </trans-unit>
        <trans-unit id="b3f4fef94aef2e7e91d9e397eff9c286026bcf3e" translate="yes" xml:space="preserve">
          <source>A documentation comment of an element is a comment that begins with &quot;&lt;code&gt;/**&lt;/code&gt;&quot; , ends with a separate &quot;&lt;code&gt;*/&lt;/code&gt;&quot;, and immediately precedes the element, ignoring white space. Therefore, a documentation comment contains at least three&quot;&lt;code&gt;*&lt;/code&gt;&quot; characters. The text returned for the documentation comment is a processed form of the comment as it appears in source code. The leading &quot;&lt;code&gt;/**&lt;/code&gt;&quot; and trailing &quot;&lt;code&gt;*/&lt;/code&gt;&quot; are removed. For lines of the comment starting after the initial &quot;&lt;code&gt;/**&lt;/code&gt;&quot;, leading white space characters are discarded as are any consecutive &quot;&lt;code&gt;*&lt;/code&gt;&quot; characters appearing after the white space or starting the line. The processed lines are then concatenated together (including line terminators) and returned.</source>
          <target state="translated">要素のドキュメンテーションコメントは、「 &lt;code&gt;/**&lt;/code&gt; 」で始まり、別の「 &lt;code&gt;*/&lt;/code&gt; 」で終わり、空白を無視して要素の直前にあるコメントです。したがって、ドキュメンテーションコメントには少なくとも3つの &quot; &lt;code&gt;*&lt;/code&gt; &quot;文字が含まれます。ドキュメンテーションコメントに対して返されるテキストは、ソースコードに表示されるコメントの処理された形式です。先頭の「 &lt;code&gt;/**&lt;/code&gt; 」と末尾の「 &lt;code&gt;*/&lt;/code&gt; 」は削除されます。最初の「 &lt;code&gt;/**&lt;/code&gt; 」の後に続くコメント行の場合、先行する空白文字は、連続する「 &lt;code&gt;*&lt;/code&gt; 」と同様に破棄されます。&quot;空白の後に表示される文字、または行の先頭。処理された行は（行末記号を含めて）連結されて返されます。</target>
        </trans-unit>
        <trans-unit id="fc953ed4ff12851c45b606c0dca273654084ace6" translate="yes" xml:space="preserve">
          <source>A domain name consisting of one or more</source>
          <target state="translated">1つまたは複数の</target>
        </trans-unit>
        <trans-unit id="f0a13517cae5c3558d1607d5b802c6dbc9b72514" translate="yes" xml:space="preserve">
          <source>A dotted-quad IPv4 address of the form</source>
          <target state="translated">ドットクォード形式のIPv4アドレス</target>
        </trans-unit>
        <trans-unit id="5a84dd1bce4cdbeb08becc1d7ae6d1d359e78aa6" translate="yes" xml:space="preserve">
          <source>A double buffer is not comparable to any other type of object.</source>
          <target state="translated">ダブルバッファは、他のどのタイプのオブジェクトとも比較できません。</target>
        </trans-unit>
        <trans-unit id="c42eb01adeccbb9bb551f09447b1ea18887c870f" translate="yes" xml:space="preserve">
          <source>A double buffer is not equal to any other type of object.</source>
          <target state="translated">ダブルバッファは、他のどのタイプのオブジェクトとも同じではありません。</target>
        </trans-unit>
        <trans-unit id="eef80ddc49ceb62f77b5716e5156654ae8ddee60" translate="yes" xml:space="preserve">
          <source>A double buffer.</source>
          <target state="translated">ダブルバッファです。</target>
        </trans-unit>
        <trans-unit id="c4de03a0777a17496e226bfbd9084bda84d187a9" translate="yes" xml:space="preserve">
          <source>A double click listener.</source>
          <target state="translated">ダブルクリックリスナーです。</target>
        </trans-unit>
        <trans-unit id="2eeb0e4ee0ca6dfa257886d6f97b74b0924e5fe0" translate="yes" xml:space="preserve">
          <source>A double value that represents the angular extent of the arc in degrees.</source>
          <target state="translated">円弧の角度範囲を度単位で表す二重の値。</target>
        </trans-unit>
        <trans-unit id="bcbb9667d570232b95d0a554b50eb130abe5a862" translate="yes" xml:space="preserve">
          <source>A double value that represents the starting angle of the arc in degrees.</source>
          <target state="translated">円弧の開始角度を度単位で表す二重の値。</target>
        </trans-unit>
        <trans-unit id="d0cec8f9e99dfd7dea921d292434a4c23e91e89f" translate="yes" xml:space="preserve">
          <source>A down-cycle focus traversal action.</source>
          <target state="translated">ダウンサイクルフォーカスのトラバーサルアクション。</target>
        </trans-unit>
        <trans-unit id="7dd676ca98f55c2728eafc7eed92cc4112f1eba4" translate="yes" xml:space="preserve">
          <source>A driver that is accessed via a &lt;code&gt;DataSource&lt;/code&gt; object does not register itself with the &lt;code&gt;DriverManager&lt;/code&gt;. Rather, a &lt;code&gt;DataSource&lt;/code&gt; object is retrieved through a lookup operation and then used to create a &lt;code&gt;Connection&lt;/code&gt; object. With a basic implementation, the connection obtained through a &lt;code&gt;DataSource&lt;/code&gt; object is identical to a connection obtained through the &lt;code&gt;DriverManager&lt;/code&gt; facility.</source>
          <target state="translated">A driver that is accessed via a &lt;code&gt;DataSource&lt;/code&gt; object does not register itself with the &lt;code&gt;DriverManager&lt;/code&gt; . Rather, a &lt;code&gt;DataSource&lt;/code&gt; object is retrieved through a lookup operation and then used to create a &lt;code&gt;Connection&lt;/code&gt; object. With a basic implementation, the connection obtained through a &lt;code&gt;DataSource&lt;/code&gt; object is identical to a connection obtained through the &lt;code&gt;DriverManager&lt;/code&gt; facility.</target>
        </trans-unit>
        <trans-unit id="1f6b416a3bb637b910a1a9345bce82c1097d25bd" translate="yes" xml:space="preserve">
          <source>A dummy constructor.</source>
          <target state="translated">ダミーのコンストラクタです。</target>
        </trans-unit>
        <trans-unit id="ec23e7b42341db8a34268a2d8f2135e2acccceeb" translate="yes" xml:space="preserve">
          <source>A duration of zero or one nanosecond would have no truncation effect. Passing one of these will return the underlying clock.</source>
          <target state="translated">継続時間がゼロまたは1ナノ秒であれば、切り捨て効果はありません。これらのいずれかを渡すと、基礎となるクロックが返されます。</target>
        </trans-unit>
        <trans-unit id="707ea64794ea49795fc1fbf1c5bb2e342b9a2947" translate="yes" xml:space="preserve">
          <source>A duration of zero would have no offsetting effect. Passing zero will return the underlying clock.</source>
          <target state="translated">ゼロの継続時間は、相殺効果がありません。ゼロを渡すと、基礎となるクロックが返されます。</target>
        </trans-unit>
        <trans-unit id="9b537f9aafa5416ef5331e31b922ae14170c2110" translate="yes" xml:space="preserve">
          <source>A dynamic call site is linked just before its first execution. The bootstrap method call implementing the linkage occurs within a thread that is attempting a first execution.</source>
          <target state="translated">動的な呼び出しサイトは、最初の実行の直前にリンクされます。リンクを実装したブートストラップメソッドの呼び出しは、最初の実行を試みているスレッド内で発生します。</target>
        </trans-unit>
        <trans-unit id="80f373678cec5d9f9816518ac0151384e5addeb3" translate="yes" xml:space="preserve">
          <source>A dynamic call site is originally in an unlinked state. In this state, there is no target method for the call site to invoke.</source>
          <target state="translated">動的なコールサイトは、もともとリンクされていない状態です。この状態では、コールサイトが呼び出すターゲット・メソッドはありません。</target>
        </trans-unit>
        <trans-unit id="a35f1d6c92b89c6d3284e21bbafa4993e9e55cab" translate="yes" xml:space="preserve">
          <source>A dynamic module can read the modules of all of the superinterfaces of a proxy class and the modules of the types referenced by all public method signatures of a proxy class. If a superinterface or a referenced type, say &lt;code&gt;T&lt;/code&gt;, is in a non-exported package, the &lt;a href=&quot;../module&quot;&gt;module&lt;/a&gt; of &lt;code&gt;T&lt;/code&gt; is updated to export the package of &lt;code&gt;T&lt;/code&gt; to the dynamic module.</source>
          <target state="translated">A dynamic module can read the modules of all of the superinterfaces of a proxy class and the modules of the types referenced by all public method signatures of a proxy class. If a superinterface or a referenced type, say &lt;code&gt;T&lt;/code&gt; , is in a non-exported package, the &lt;a href=&quot;../module&quot;&gt;module&lt;/a&gt; of &lt;code&gt;T&lt;/code&gt; is updated to export the package of &lt;code&gt;T&lt;/code&gt; to the dynamic module.</target>
        </trans-unit>
        <trans-unit id="ddb5ee4c0960e48c089f4d8e38609787b474d01d" translate="yes" xml:space="preserve">
          <source>A dynamic module is a named module generated at runtime. A proxy class defined in a dynamic module is encapsulated and not accessible to any module. Calling &lt;a href=&quot;constructor#newInstance(java.lang.Object...)&quot;&gt;&lt;code&gt;Constructor.newInstance(Object...)&lt;/code&gt;&lt;/a&gt; on a proxy class in a dynamic module will throw &lt;code&gt;IllegalAccessException&lt;/code&gt;; &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; method should be used instead.</source>
          <target state="translated">A dynamic module is a named module generated at runtime. A proxy class defined in a dynamic module is encapsulated and not accessible to any module. Calling &lt;a href=&quot;constructor#newInstance(java.lang.Object...)&quot;&gt; &lt;code&gt;Constructor.newInstance(Object...)&lt;/code&gt; &lt;/a&gt; on a proxy class in a dynamic module will throw &lt;code&gt;IllegalAccessException&lt;/code&gt; ; &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; method should be used instead.</target>
        </trans-unit>
        <trans-unit id="e0e84d0f37ed837b18dc38b43e9581df209ca4d8" translate="yes" xml:space="preserve">
          <source>A facility for threads to schedule tasks for future execution in a background thread.</source>
          <target state="translated">バックグラウンドスレッドで将来の実行タスクをスケジュールするための機能。</target>
        </trans-unit>
        <trans-unit id="bdaa3fdd98dc8ca4ca47e134d4bacf3327c2afba" translate="yes" xml:space="preserve">
          <source>A facility for threads to schedule tasks for future execution in a background thread. Tasks may be scheduled for one-time execution, or for repeated execution at regular intervals.</source>
          <target state="translated">スレッドがバックグラウンドスレッドで将来の実行のためにタスクをスケジュールするための機能。タスクは、一度限りの実行のためにスケジュールされることもあれば、一定の間隔で繰り返し実行されることもあります。</target>
        </trans-unit>
        <trans-unit id="9eb599a894d1362c773f87be709e799cd7ba2e0d" translate="yes" xml:space="preserve">
          <source>A facility to load implementations of a service.</source>
          <target state="translated">サービスの実装をロードするための施設。</target>
        </trans-unit>
        <trans-unit id="3e9d6b0d519e0d5df9d38026b8e9f08942170f60" translate="yes" xml:space="preserve">
          <source>A factory API that enables applications to obtain a &lt;code&gt;RowSetFactory&lt;/code&gt; implementation that can be used to create different types of &lt;code&gt;RowSet&lt;/code&gt; implementations.</source>
          <target state="translated">A factory API that enables applications to obtain a &lt;code&gt;RowSetFactory&lt;/code&gt; implementation that can be used to create different types of &lt;code&gt;RowSet&lt;/code&gt; implementations.</target>
        </trans-unit>
        <trans-unit id="9d83bf4f0dfb948ac8ea59714cca2a0d1d7f915b" translate="yes" xml:space="preserve">
          <source>A factory for &lt;code&gt;PooledConnection&lt;/code&gt; objects.</source>
          <target state="translated">A factory for &lt;code&gt;PooledConnection&lt;/code&gt; objects.</target>
        </trans-unit>
        <trans-unit id="ae5bf3593b2bc2ebbd3b41b8caf27d80db5b1246" translate="yes" xml:space="preserve">
          <source>A factory for &lt;code&gt;PooledConnection&lt;/code&gt; objects. An object that implements this interface will typically be registered with a naming service that is based on the Java&amp;trade; Naming and Directory Interface (JNDI).</source>
          <target state="translated">A factory for &lt;code&gt;PooledConnection&lt;/code&gt; objects. An object that implements this interface will typically be registered with a naming service that is based on the Java&amp;trade; Naming and Directory Interface (JNDI).</target>
        </trans-unit>
        <trans-unit id="579b6f648f592b2c7ff6326232a8cd8cc173bf83" translate="yes" xml:space="preserve">
          <source>A factory for &lt;code&gt;XAConnection&lt;/code&gt; objects that is used internally.</source>
          <target state="translated">A factory for &lt;code&gt;XAConnection&lt;/code&gt; objects that is used internally.</target>
        </trans-unit>
        <trans-unit id="10a7fb9a720b14cdeded353cb7a72ae0f53b0b28" translate="yes" xml:space="preserve">
          <source>A factory for &lt;code&gt;XAConnection&lt;/code&gt; objects that is used internally. An object that implements the &lt;code&gt;XADataSource&lt;/code&gt; interface is typically registered with a naming service that uses the Java Naming and Directory Interface&amp;trade; (JNDI).</source>
          <target state="translated">A factory for &lt;code&gt;XAConnection&lt;/code&gt; objects that is used internally. An object that implements the &lt;code&gt;XADataSource&lt;/code&gt; interface is typically registered with a naming service that uses the Java Naming and Directory Interface&amp;trade; (JNDI).</target>
        </trans-unit>
        <trans-unit id="87f6ab02b247d5436eed5e9f5e2a03cd7e138648" translate="yes" xml:space="preserve">
          <source>A factory for CardTerminal objects.</source>
          <target state="translated">CardTerminalオブジェクトのためのファクトリーです。</target>
        </trans-unit>
        <trans-unit id="02af8ac601cf2412d598ea387602eb65495daa2c" translate="yes" xml:space="preserve">
          <source>A factory for CardTerminal objects. It allows an application to</source>
          <target state="translated">CardTerminal オブジェクトのためのファクトリーです。これにより、アプリケーションは</target>
        </trans-unit>
        <trans-unit id="131e4fe4fdae1da728043a7c48a260ffd3f9c887" translate="yes" xml:space="preserve">
          <source>A factory for connections to the physical data source that this &lt;code&gt;DataSource&lt;/code&gt; object represents.</source>
          <target state="translated">A factory for connections to the physical data source that this &lt;code&gt;DataSource&lt;/code&gt; object represents.</target>
        </trans-unit>
        <trans-unit id="fac16fd026dbf49e9965916a11212b5c068ba6ed" translate="yes" xml:space="preserve">
          <source>A factory for connections to the physical data source that this &lt;code&gt;DataSource&lt;/code&gt; object represents. An alternative to the &lt;code&gt;DriverManager&lt;/code&gt; facility, a &lt;code&gt;DataSource&lt;/code&gt; object is the preferred means of getting a connection. An object that implements the &lt;code&gt;DataSource&lt;/code&gt; interface will typically be registered with a naming service based on the Java&amp;trade; Naming and Directory (JNDI) API.</source>
          <target state="translated">A factory for connections to the physical data source that this &lt;code&gt;DataSource&lt;/code&gt; object represents. An alternative to the &lt;code&gt;DriverManager&lt;/code&gt; facility, a &lt;code&gt;DataSource&lt;/code&gt; object is the preferred means of getting a connection. An object that implements the &lt;code&gt;DataSource&lt;/code&gt; interface will typically be registered with a naming service based on the Java&amp;trade; Naming and Directory (JNDI) API.</target>
        </trans-unit>
        <trans-unit id="bfbdc95ca7e6c1437aa26750a0c65f90a90ae45d" translate="yes" xml:space="preserve">
          <source>A factory for creating &lt;a href=&quot;keyinfo&quot;&gt;&lt;code&gt;KeyInfo&lt;/code&gt;&lt;/a&gt; objects from scratch or for unmarshalling a &lt;code&gt;KeyInfo&lt;/code&gt; object from a corresponding XML representation.</source>
          <target state="translated">A factory for creating &lt;a href=&quot;keyinfo&quot;&gt; &lt;code&gt;KeyInfo&lt;/code&gt; &lt;/a&gt; objects from scratch or for unmarshalling a &lt;code&gt;KeyInfo&lt;/code&gt; object from a corresponding XML representation.</target>
        </trans-unit>
        <trans-unit id="447ae3b752cb09da56fb7966e82af8d086341193" translate="yes" xml:space="preserve">
          <source>A factory for creating &lt;a href=&quot;xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; objects from scratch or for unmarshalling an &lt;code&gt;XMLSignature&lt;/code&gt; object from a corresponding XML representation.</source>
          <target state="translated">A factory for creating &lt;a href=&quot;xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt; objects from scratch or for unmarshalling an &lt;code&gt;XMLSignature&lt;/code&gt; object from a corresponding XML representation.</target>
        </trans-unit>
        <trans-unit id="3e0b467ba2dc989506e0ee0a0bb1aacb33912437" translate="yes" xml:space="preserve">
          <source>A factory object that generates Preferences objects.</source>
          <target state="translated">環境設定オブジェクトを生成するファクトリーオブジェクト。</target>
        </trans-unit>
        <trans-unit id="101b3fce69853a396df998619090ea7c49a64227" translate="yes" xml:space="preserve">
          <source>A factory object that generates Preferences objects. Providers of new &lt;a href=&quot;preferences&quot;&gt;&lt;code&gt;Preferences&lt;/code&gt;&lt;/a&gt; implementations should provide corresponding &lt;code&gt;PreferencesFactory&lt;/code&gt; implementations so that the new &lt;code&gt;Preferences&lt;/code&gt; implementation can be installed in place of the platform-specific default implementation.</source>
          <target state="translated">Preferencesオブジェクトを生成するファクトリオブジェクト。新しいのプロバイダ&lt;a href=&quot;preferences&quot;&gt; &lt;code&gt;Preferences&lt;/code&gt; &lt;/a&gt;実装は、対応する提供しなければならない &lt;code&gt;PreferencesFactory&lt;/code&gt; 新しいように実装を &lt;code&gt;Preferences&lt;/code&gt; 実装は、プラットフォーム固有のデフォルトの実装の場所に設置することができます。</target>
        </trans-unit>
        <trans-unit id="012439963caa9c740b53700ca7f65192a34f5061" translate="yes" xml:space="preserve">
          <source>A factory that enables applications to obtain instances of &lt;code&gt;DOMImplementation&lt;/code&gt;.</source>
          <target state="translated">A factory that enables applications to obtain instances of &lt;code&gt;DOMImplementation&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9dec17682dae61c4e3664b4d404fd914e0739877" translate="yes" xml:space="preserve">
          <source>A factory to build views for HTML.</source>
          <target state="translated">HTML用のビューを構築するためのファクトリーです。</target>
        </trans-unit>
        <trans-unit id="4859eae3ed9161a437459fc111d12cc6dfeb9a6d" translate="yes" xml:space="preserve">
          <source>A factory to build views for HTML. The following table describes what this factory will build by default.</source>
          <target state="translated">HTML用のビューを構築するためのファクトリです。以下の表は、このファクトリがデフォルトで構築するものを示しています。</target>
        </trans-unit>
        <trans-unit id="e72ea0c899015a79e68fd6431aed375e5031320e" translate="yes" xml:space="preserve">
          <source>A factory to create a view of some portion of document subject.</source>
          <target state="translated">文書の主題の一部のビューを作成するためのファクトリです。</target>
        </trans-unit>
        <trans-unit id="5d98c05b8f6e5a37c3763765419238927bfff5ef" translate="yes" xml:space="preserve">
          <source>A factory to create a view of some portion of document subject. This is intended to enable customization of how views get mapped over a document model.</source>
          <target state="translated">ドキュメントサブジェクトの一部のビューを作成するためのファクトリです。これは、ビューがドキュメントモデルにマッピングされる方法をカスタマイズできるようにすることを目的としています。</target>
        </trans-unit>
        <trans-unit id="63b7b032fe80d4faf6433141990e02b45251e415" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character blocks in the Unicode specification.</source>
          <target state="translated">Unicode 仕様の文字ブロックを表す文字サブセットのファミリ。</target>
        </trans-unit>
        <trans-unit id="a24fb7d86b530dcf58935f77822385b0ba5a6d7b" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character blocks in the Unicode specification. Character blocks generally define characters used for a specific script or purpose. A character is contained by at most one Unicode block.</source>
          <target state="translated">Unicode 仕様の文字ブロックを表す文字サブセットのファミリ。文字ブロックは一般に、特定のスクリプトや目的に使用される文字を定義します。1 つの文字は、最大で 1 つの Unicode ブロックに含まれています。</target>
        </trans-unit>
        <trans-unit id="3ec563e568f55e4f71b71ac1435cf68999ac1f70" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character scripts defined in the &lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt; &lt;i&gt;Unicode Standard Annex #24: Script Names&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt;&lt;i&gt;Unicode Standard Annex＃24：Script Namesで&lt;/i&gt;&lt;/a&gt;定義されて&lt;i&gt;いる&lt;/i&gt;文字スクリプトを表す文字サブセットのファミリー。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="b57546c0d16673c5ddb9bd2cdd184a4b0ab8b0a7" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character scripts defined in the &lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt; &lt;i&gt;Unicode Standard Annex #24: Script Names&lt;/i&gt;&lt;/a&gt;. Every Unicode character is assigned to a single Unicode script, either a specific script, such as &lt;a href=&quot;#LATIN&quot;&gt;&lt;code&gt;Latin&lt;/code&gt;&lt;/a&gt;, or one of the following three special values, &lt;a href=&quot;#INHERITED&quot;&gt;&lt;code&gt;Inherited&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#COMMON&quot;&gt;&lt;code&gt;Common&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#UNKNOWN&quot;&gt;&lt;code&gt;Unknown&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A family of character subsets representing the character scripts defined in the &lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt; &lt;i&gt;Unicode Standard Annex #24: Script Names&lt;/i&gt;&lt;/a&gt;. Every Unicode character is assigned to a single Unicode script, either a specific script, such as &lt;a href=&quot;#LATIN&quot;&gt; &lt;code&gt;Latin&lt;/code&gt; &lt;/a&gt;, or one of the following three special values, &lt;a href=&quot;#INHERITED&quot;&gt; &lt;code&gt;Inherited&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#COMMON&quot;&gt; &lt;code&gt;Common&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#UNKNOWN&quot;&gt; &lt;code&gt;Unknown&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9c8c5279fc99f2514225c6d1d19175798ae080ea" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character scripts defined in the &lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt; &lt;i&gt;Unicode Standard Annex #24: Script Names&lt;/i&gt;&lt;/a&gt;. Every Unicode character is assigned to a single Unicode script, either a specific script, such as &lt;a href=&quot;character.unicodescript#LATIN&quot;&gt;&lt;code&gt;Latin&lt;/code&gt;&lt;/a&gt;, or one of the following three special values, &lt;a href=&quot;character.unicodescript#INHERITED&quot;&gt;&lt;code&gt;Inherited&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;character.unicodescript#COMMON&quot;&gt;&lt;code&gt;Common&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;character.unicodescript#UNKNOWN&quot;&gt;&lt;code&gt;Unknown&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt;&lt;i&gt;Unicode Standard Annex＃24：Script Namesで&lt;/i&gt;&lt;/a&gt;定義されて&lt;i&gt;いる&lt;/i&gt;文字スクリプトを表す文字サブセットのファミリー。すべてのUnicode文字は、&lt;a href=&quot;character.unicodescript#LATIN&quot;&gt; &lt;code&gt;Latin&lt;/code&gt; &lt;/a&gt;などの特定のスクリプト、または&lt;a href=&quot;character.unicodescript#INHERITED&quot;&gt; &lt;code&gt;Inherited&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;character.unicodescript#COMMON&quot;&gt; &lt;code&gt;Common&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;character.unicodescript#UNKNOWN&quot;&gt; &lt;code&gt;Unknown&lt;/code&gt; の&lt;/a&gt; 3つの特別な値のいずれか1つのUnicodeスクリプトに割り当てられます。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="9eaa4a882ff6f7b68aa33cabdb36bc4551205285" translate="yes" xml:space="preserve">
          <source>A field in a TIFF Image File Directory (IFD) is defined as a tag number accompanied by a sequence of values of identical data type. TIFF 6.0 defines 12 data types; a 13th type &lt;code&gt;IFD&lt;/code&gt; is defined in TIFF Tech Note 1 of TIFF Specification Supplement 1. These TIFF data types are referred to by Java constants and mapped internally onto Java language data types and type names as follows:</source>
          <target state="translated">A field in a TIFF Image File Directory (IFD) is defined as a tag number accompanied by a sequence of values of identical data type. TIFF 6.0 defines 12 data types; a 13th type &lt;code&gt;IFD&lt;/code&gt; is defined in TIFF Tech Note 1 of TIFF Specification Supplement 1. These TIFF data types are referred to by Java constants and mapped internally onto Java language data types and type names as follows:</target>
        </trans-unit>
        <trans-unit id="cb6cfa1af99682ad4ccf2d09f7b713dfe2919b99" translate="yes" xml:space="preserve">
          <source>A field is date-based if it can be derived from &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. Note that it is valid for both &lt;code&gt;isDateBased()&lt;/code&gt; and &lt;code&gt;isTimeBased()&lt;/code&gt; to return false, such as when representing a field like minute-of-week.</source>
          <target state="translated">&lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;EPOCH_DAY&lt;/code&gt; &lt;/a&gt;から取得できる場合、フィールドは日付ベースです。 &lt;code&gt;isDateBased()&lt;/code&gt; と &lt;code&gt;isTimeBased()&lt;/code&gt; の両方がfalseを返すことは有効であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="06d4b6c0fcbdbfaf03d612c54baeb44342bf70b4" translate="yes" xml:space="preserve">
          <source>A field is time-based if it can be derived from &lt;a href=&quot;chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;NANO_OF_DAY&lt;/code&gt;&lt;/a&gt;. Note that it is valid for both &lt;code&gt;isDateBased()&lt;/code&gt; and &lt;code&gt;isTimeBased()&lt;/code&gt; to return false, such as when representing a field like minute-of-week.</source>
          <target state="translated">&lt;a href=&quot;chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;NANO_OF_DAY&lt;/code&gt; &lt;/a&gt;から取得できる場合、フィールドは時間ベースです。 &lt;code&gt;isDateBased()&lt;/code&gt; と &lt;code&gt;isTimeBased()&lt;/code&gt; の両方がfalseを返すことは有効であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b07348f8e4cb68554849ca186156d3c0c4587481" translate="yes" xml:space="preserve">
          <source>A field is used to express part of a larger date-time, such as year, month-of-year or second-of-minute. All fields implement &lt;a href=&quot;temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt;. The set of well known fields are defined in &lt;a href=&quot;chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt;, such as &lt;code&gt;HOUR_OF_DAY&lt;/code&gt;. Additional fields are defined by &lt;a href=&quot;julianfields&quot;&gt;&lt;code&gt;JulianFields&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;weekfields&quot;&gt;&lt;code&gt;WeekFields&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;isofields&quot;&gt;&lt;code&gt;IsoFields&lt;/code&gt;&lt;/a&gt;. The field interface is designed to allow application defined fields.</source>
          <target state="translated">フィールドは、年、月、秒など、より大きな日時の一部を表すために使用されます。すべてのフィールドは&lt;a href=&quot;temporalfield&quot;&gt; &lt;code&gt;TemporalField&lt;/code&gt; を&lt;/a&gt;実装します。既知のフィールドのセットは、 &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; などの&lt;a href=&quot;chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; &lt;/a&gt;で定義されています。追加のフィールドは、&lt;a href=&quot;julianfields&quot;&gt; &lt;code&gt;JulianFields&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;weekfields&quot;&gt; &lt;code&gt;WeekFields&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;isofields&quot;&gt; &lt;code&gt;IsoFields&lt;/code&gt; &lt;/a&gt;によって定義されます。フィールドインターフェイスは、アプリケーションで定義されたフィールドを許可するように設計されています。</target>
        </trans-unit>
        <trans-unit id="835f2490b6cfe9fa75186c818d8516b2e4a5f979" translate="yes" xml:space="preserve">
          <source>A field not described by a more specific kind (like &lt;code&gt;ENUM_CONSTANT&lt;/code&gt;).</source>
          <target state="translated">より具体的な種類で記述されていないフィールド（ &lt;code&gt;ENUM_CONSTANT&lt;/code&gt; など）。</target>
        </trans-unit>
        <trans-unit id="b9124f145776683f4253809cd0411ccd5b528c41" translate="yes" xml:space="preserve">
          <source>A field of date-time, such as month-of-year or hour-of-minute.</source>
          <target state="translated">年月や時分などの日付時間のフィールド。</target>
        </trans-unit>
        <trans-unit id="e150dcc5b1e035eec8b678494a857eb63cde20d6" translate="yes" xml:space="preserve">
          <source>A field of the resulting &lt;code&gt;Duration&lt;/code&gt; will be unset if and only if respective fields of two input &lt;code&gt;Duration&lt;/code&gt;s are unset.</source>
          <target state="translated">A field of the resulting &lt;code&gt;Duration&lt;/code&gt; will be unset if and only if respective fields of two input &lt;code&gt;Duration&lt;/code&gt; s are unset.</target>
        </trans-unit>
        <trans-unit id="561ec93c50ac986765d6e5eddfd9cb88b32c965f" translate="yes" xml:space="preserve">
          <source>A field to store user data.</source>
          <target state="translated">ユーザーデータを格納するフィールドです。</target>
        </trans-unit>
        <trans-unit id="7093bcdde49295add6532ea87edaa57b21040595" translate="yes" xml:space="preserve">
          <source>A field to store user data. Mostly used to store style sheets.</source>
          <target state="translated">ユーザーデータを格納するフィールド。主にスタイルシートを格納するために使用されます。</target>
        </trans-unit>
        <trans-unit id="dda0e6d153e939c0eebf6f92e4c6f459678f22a4" translate="yes" xml:space="preserve">
          <source>A file attribute view provides a read-only or updatable view of a set of file attributes. This method is intended to be used where the file attribute view defines type-safe methods to read or update the file attributes. The &lt;code&gt;type&lt;/code&gt; parameter is the type of the attribute view required and the method returns an instance of that type if supported. The &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; type supports access to the basic attributes of a file. Invoking this method to select a file attribute view of that type will always return an instance of that class.</source>
          <target state="translated">ファイル属性ビューは、一連のファイル属性の読み取り専用または更新可能なビューを提供します。このメソッドは、ファイル属性ビューがタイプセーフメソッドを定義してファイル属性を読み取りまたは更新する場合に使用することを目的としています。 &lt;code&gt;type&lt;/code&gt; パラメーターは必須属性ビューのタイプであり、サポートされている場合の方法は、そのタイプのインスタンスを返します。&lt;a href=&quot;attribute/basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; の&lt;/a&gt;タイプは、ファイルの基本的な属性へのアクセスをサポートしています。このメソッドを呼び出してそのタイプのファイル属性ビューを選択すると、常にそのクラスのインスタンスが返されます。</target>
        </trans-unit>
        <trans-unit id="deda609125e7d48e407f76f729b8f27d65f74ddb" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of a &lt;em&gt;basic set&lt;/em&gt; of file attributes common to many file systems.</source>
          <target state="translated">多くのファイルシステムに共通のファイル属性の&lt;em&gt;基本セット&lt;/em&gt;のビューを提供するファイル属性ビュー。</target>
        </trans-unit>
        <trans-unit id="c25c5edd2e59e66e30742b0dc9fb42aac420e492" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of a &lt;em&gt;basic set&lt;/em&gt; of file attributes common to many file systems. The basic set of file attributes consist of &lt;em&gt;mandatory&lt;/em&gt; and &lt;em&gt;optional&lt;/em&gt; file attributes as defined by the &lt;a href=&quot;basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">多くのファイルシステムに共通のファイル属性の&lt;em&gt;基本セット&lt;/em&gt;のビューを提供するファイル属性ビュー。ファイル属性の基本セットは、&lt;a href=&quot;basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt;インターフェイスで定義されている&lt;em&gt;必須&lt;/em&gt;および&lt;em&gt;オプションの&lt;/em&gt;ファイル属性で構成されています。</target>
        </trans-unit>
        <trans-unit id="3f5f657f89b3a00a961d3cdfff1050605cb66a30" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of a file's user-defined attributes, sometimes known as &lt;em&gt;extended attributes&lt;/em&gt;.</source>
          <target state="translated">ファイルのユーザー定義属性のビューを提供するファイル属性ビュー。&lt;em&gt;拡張属性&lt;/em&gt;とも呼ばれ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="92134ae2669883f7bd8d353e8b759e080264ae92" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of a file's user-defined attributes, sometimes known as &lt;em&gt;extended attributes&lt;/em&gt;. User-defined file attributes are used to store metadata with a file that is not meaningful to the file system. It is primarily intended for file system implementations that support such a capability directly but may be emulated. The details of such emulation are highly implementation specific and therefore not specified.</source>
          <target state="translated">ファイルのユーザー定義属性のビューを提供するファイル属性ビュー。&lt;em&gt;拡張属性&lt;/em&gt;とも呼ばれ&lt;em&gt;ます&lt;/em&gt;。ユーザー定義のファイル属性は、ファイルシステムにとって意味のないファイルを含むメタデータを格納するために使用されます。これは主に、そのような機能を直接サポートするがエミュレートされる可能性のあるファイルシステム実装を対象としています。このようなエミュレーションの詳細は、実装に大きく固有であるため、指定されていません。</target>
        </trans-unit>
        <trans-unit id="e6a4b8e3954a7ff014e199475145d881eb3c5987" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of the file attributes commonly associated with files on file systems used by operating systems that implement the Portable Operating System Interface (POSIX) family of standards.</source>
          <target state="translated">Portable Operating System Interface (POSIX)ファミリーの標準規格を実装するオペレーティングシステムで使用されるファイルシステム上のファイルに一般的に関連付けられているファイル属性のビューを提供するファイル属性ビューです。</target>
        </trans-unit>
        <trans-unit id="73aab05f1958ac269a1d81f012b9a0e86f942671" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of the legacy &quot;DOS&quot; file attributes.</source>
          <target state="translated">レガシーな &quot;DOS &quot;ファイル属性のビューを提供するファイル属性ビュー。</target>
        </trans-unit>
        <trans-unit id="06ce420caee228b75176ea93c6da6be3e8962c23" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of the legacy &quot;DOS&quot; file attributes. These attributes are supported by file systems such as the File Allocation Table (FAT) format commonly used in &lt;em&gt;consumer devices&lt;/em&gt;.</source>
          <target state="translated">従来の「DOS」ファイル属性のビューを提供するファイル属性ビュー。これらの属性は、&lt;em&gt;コンシューマデバイスで&lt;/em&gt;一般的に使用されているファイルアロケーションテーブル（FAT）形式などのファイルシステムでサポートされています。</target>
        </trans-unit>
        <trans-unit id="c56af10820e6747bde58155c74dc6b8cb1c563e9" translate="yes" xml:space="preserve">
          <source>A file attribute view that supports reading or updating a file's Access Control Lists (ACL) or file owner attributes.</source>
          <target state="translated">ファイルのアクセス制御リスト(ACL)やファイル所有者属性の読み取りや更新をサポートするファイル属性ビュー。</target>
        </trans-unit>
        <trans-unit id="fc8f481ef9d0d618680cc9caba8c29e3b337fd06" translate="yes" xml:space="preserve">
          <source>A file attribute view that supports reading or updating the owner of a file.</source>
          <target state="translated">ファイルの所有者の読み込みや更新をサポートするファイル属性ビュー。</target>
        </trans-unit>
        <trans-unit id="637eb168120f6d58bb9a543da7d437ff587931ee" translate="yes" xml:space="preserve">
          <source>A file attribute view that supports reading or updating the owner of a file. This file attribute view is intended for file system implementations that support a file attribute that represents an identity that is the owner of the file. Often the owner of a file is the identity of the entity that created the file.</source>
          <target state="translated">ファイルの所有者の読み取りまたは更新をサポートするファイル属性ビュー。このファイル属性ビューは、ファイルの所有者であるアイデンティティを表すファイル属性をサポートするファイルシステム実装のためのものである。ファイルの所有者は、ファイルを作成したエンティティの ID であることが多い。</target>
        </trans-unit>
        <trans-unit id="50d3c544cf02930f72d3dd2dcf7596521b56b995" translate="yes" xml:space="preserve">
          <source>A file channel is a &lt;a href=&quot;seekablebytechannel&quot;&gt;&lt;code&gt;SeekableByteChannel&lt;/code&gt;&lt;/a&gt; that is connected to a file. It has a current</source>
          <target state="translated">ファイルチャネルは、ファイルに接続されている&lt;a href=&quot;seekablebytechannel&quot;&gt; &lt;code&gt;SeekableByteChannel&lt;/code&gt; &lt;/a&gt;です。電流があります</target>
        </trans-unit>
        <trans-unit id="b56454099a3b48fd182acb907397a9dc83e2ebc7" translate="yes" xml:space="preserve">
          <source>A file channel is created by invoking one of the &lt;a href=&quot;#open(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods defined by this class. A file channel can also be obtained from an existing &lt;a href=&quot;../../io/fileinputstream#getChannel()&quot;&gt;&lt;code&gt;FileInputStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../io/fileoutputstream#getChannel()&quot;&gt;&lt;code&gt;FileOutputStream&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../io/randomaccessfile#getChannel()&quot;&gt;&lt;code&gt;RandomAccessFile&lt;/code&gt;&lt;/a&gt; object by invoking that object's &lt;code&gt;getChannel&lt;/code&gt; method, which returns a file channel that is connected to the same underlying file. Where the file channel is obtained from an existing stream or random access file then the state of the file channel is intimately connected to that of the object whose &lt;code&gt;getChannel&lt;/code&gt; method returned the channel. Changing the channel's position, whether explicitly or by reading or writing bytes, will change the file position of the originating object, and vice versa. Changing the file's length via the file channel will change the length seen via the originating object, and vice versa. Changing the file's content by writing bytes will change the content seen by the originating object, and vice versa.</source>
          <target state="translated">A file channel is created by invoking one of the &lt;a href=&quot;#open(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; methods defined by this class. A file channel can also be obtained from an existing &lt;a href=&quot;../../io/fileinputstream#getChannel()&quot;&gt; &lt;code&gt;FileInputStream&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;../../io/fileoutputstream#getChannel()&quot;&gt; &lt;code&gt;FileOutputStream&lt;/code&gt; &lt;/a&gt;, or &lt;a href=&quot;../../io/randomaccessfile#getChannel()&quot;&gt; &lt;code&gt;RandomAccessFile&lt;/code&gt; &lt;/a&gt; object by invoking that object's &lt;code&gt;getChannel&lt;/code&gt; method, which returns a file channel that is connected to the same underlying file. Where the file channel is obtained from an existing stream or random access file then the state of the file channel is intimately connected to that of the object whose &lt;code&gt;getChannel&lt;/code&gt; method returned the channel. Changing the channel's position, whether explicitly or by reading or writing bytes, will change the file position of the originating object, and vice versa. Changing the file's length via the file channel will change the length seen via the originating object, and vice versa. Changing the file's content by writing bytes will change the content seen by the originating object, and vice versa.</target>
        </trans-unit>
        <trans-unit id="a3d45873616dfb5f64695ebaf34a5417aaf96574" translate="yes" xml:space="preserve">
          <source>A file channel is created by invoking one of the &lt;a href=&quot;filechannel#open-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods defined by this class. A file channel can also be obtained from an existing &lt;a href=&quot;../../io/fileinputstream#getChannel--&quot;&gt;&lt;code&gt;FileInputStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../io/fileoutputstream#getChannel--&quot;&gt;&lt;code&gt;FileOutputStream&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../io/randomaccessfile#getChannel--&quot;&gt;&lt;code&gt;RandomAccessFile&lt;/code&gt;&lt;/a&gt; object by invoking that object's &lt;code&gt;getChannel&lt;/code&gt; method, which returns a file channel that is connected to the same underlying file. Where the file channel is obtained from an existing stream or random access file then the state of the file channel is intimately connected to that of the object whose &lt;code&gt;getChannel&lt;/code&gt; method returned the channel. Changing the channel's position, whether explicitly or by reading or writing bytes, will change the file position of the originating object, and vice versa. Changing the file's length via the file channel will change the length seen via the originating object, and vice versa. Changing the file's content by writing bytes will change the content seen by the originating object, and vice versa.</source>
          <target state="translated">ファイルチャネルは、このクラスで定義されている&lt;a href=&quot;filechannel#open-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;メソッドの1つを呼び出すことによって作成されます。ファイルチャネルは、既存の&lt;a href=&quot;../../io/fileinputstream#getChannel--&quot;&gt; &lt;code&gt;FileInputStream&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../io/fileoutputstream#getChannel--&quot;&gt; &lt;code&gt;FileOutputStream&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;../../io/randomaccessfile#getChannel--&quot;&gt; &lt;code&gt;RandomAccessFile&lt;/code&gt; &lt;/a&gt;オブジェクトから取得することもできます。このオブジェクトの &lt;code&gt;getChannel&lt;/code&gt; メソッドを呼び出すと、同じ基本ファイルに接続されているファイルチャネルが返されます。ファイルチャネルが既存のストリームまたはランダムアクセスファイルから取得される場合、ファイルチャネルの状態は、 &lt;code&gt;getChannel&lt;/code&gt; を持つオブジェクトの状態と密接に関連しています。メソッドはチャネルを返しました。明示的に、またはバイトの読み取りまたは書き込みによってチャネルの位置を変更すると、元のオブジェクトのファイル位置が変更されます。逆も同様です。ファイルチャネルを介してファイルの長さを変更すると、元のオブジェクトを介して表示される長さが変更され、その逆も同様です。バイトを書き込むことによってファイルのコンテンツを変更すると、元のオブジェクトから見えるコンテンツが変更され、逆も同様です。</target>
        </trans-unit>
        <trans-unit id="b94e4d0c80198834d983bc6e3bb51a9dd99a5d5e" translate="yes" xml:space="preserve">
          <source>A file channel that is open for writing may be in</source>
          <target state="translated">書き込み用にオープンされているファイルチャネルは、次のような場合があります。</target>
        </trans-unit>
        <trans-unit id="9faaef2741bf30dbc54b5af9a41af4397e3de550" translate="yes" xml:space="preserve">
          <source>A file loading event.</source>
          <target state="translated">ファイルの読み込みイベント。</target>
        </trans-unit>
        <trans-unit id="cb5c27031614e42ea12644e9d3cc607334c9b99b" translate="yes" xml:space="preserve">
          <source>A file lock is either</source>
          <target state="translated">ファイルロックは</target>
        </trans-unit>
        <trans-unit id="e16568056aeea069ecd34d375096a08ef82c7ca7" translate="yes" xml:space="preserve">
          <source>A file output stream is an output stream for writing data to a &lt;code&gt;File&lt;/code&gt; or to a &lt;code&gt;FileDescriptor&lt;/code&gt;.</source>
          <target state="translated">ファイル出力ストリームは、データを &lt;code&gt;File&lt;/code&gt; または &lt;code&gt;FileDescriptor&lt;/code&gt; に書き込むための出力ストリームです。</target>
        </trans-unit>
        <trans-unit id="6d6f1007335cda7cde3d679a1dbaf6aa504670c2" translate="yes" xml:space="preserve">
          <source>A file output stream is an output stream for writing data to a &lt;code&gt;File&lt;/code&gt; or to a &lt;code&gt;FileDescriptor&lt;/code&gt;. Whether or not a file is available or may be created depends upon the underlying platform. Some platforms, in particular, allow a file to be opened for writing by only one &lt;code&gt;FileOutputStream&lt;/code&gt; (or other file-writing object) at a time. In such situations the constructors in this class will fail if the file involved is already open.</source>
          <target state="translated">ファイル出力ストリームは、データを &lt;code&gt;File&lt;/code&gt; または &lt;code&gt;FileDescriptor&lt;/code&gt; に書き込むための出力ストリームです。ファイルが利用可能であるか、または作成できるかどうかは、基盤となるプラットフォームによって異なります。特に、一部のプラットフォームでは、一度に1つの &lt;code&gt;FileOutputStream&lt;/code&gt; （または他のファイル書き込みオブジェクト）のみが書き込み用にファイルを開くことができます。このような状況では、関連するファイルがすでに開いている場合、このクラスのコンストラクターは失敗します。</target>
        </trans-unit>
        <trans-unit id="8a79e46569e7c0e6ac13297491f4474b3fba636e" translate="yes" xml:space="preserve">
          <source>A file saving event.</source>
          <target state="translated">ファイル保存イベント。</target>
        </trans-unit>
        <trans-unit id="1504cc80177c88564aff13f864faf9b4cc1e4f14" translate="yes" xml:space="preserve">
          <source>A file system is open upon creation and can be closed by invoking its &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method. Once closed, any further attempt to access objects in the file system cause &lt;a href=&quot;closedfilesystemexception&quot;&gt;&lt;code&gt;ClosedFileSystemException&lt;/code&gt;&lt;/a&gt; to be thrown. File systems created by the default &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; cannot be closed.</source>
          <target state="translated">A file system is open upon creation and can be closed by invoking its &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; method. Once closed, any further attempt to access objects in the file system cause &lt;a href=&quot;closedfilesystemexception&quot;&gt; &lt;code&gt;ClosedFileSystemException&lt;/code&gt; &lt;/a&gt; to be thrown. File systems created by the default &lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt; cannot be closed.</target>
        </trans-unit>
        <trans-unit id="9dfaa0b7bf6f105699605d63ef04558be23f70fd" translate="yes" xml:space="preserve">
          <source>A file system is open upon creation and can be closed by invoking its &lt;a href=&quot;filesystem#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method. Once closed, any further attempt to access objects in the file system cause &lt;a href=&quot;closedfilesystemexception&quot;&gt;&lt;code&gt;ClosedFileSystemException&lt;/code&gt;&lt;/a&gt; to be thrown. File systems created by the default &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; cannot be closed.</source>
          <target state="translated">ファイルシステムは作成時に開かれ、その&lt;a href=&quot;filesystem#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって閉じることができます。いったん閉じられると、ファイルシステム内のオブジェクトにアクセスしようとすると、&lt;a href=&quot;closedfilesystemexception&quot;&gt; &lt;code&gt;ClosedFileSystemException&lt;/code&gt; &lt;/a&gt;がスローされます。デフォルトの&lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;によって作成されたファイルシステムは閉じることができません。</target>
        </trans-unit>
        <trans-unit id="0d1780ff9ebff809b69e5e84bd16e835fd70a0aa" translate="yes" xml:space="preserve">
          <source>A file system is the factory for several types of objects:</source>
          <target state="translated">ファイルシステムは、いくつかのタイプのオブジェクトの工場です。</target>
        </trans-unit>
        <trans-unit id="2aafa7d2b1e430fc99b0ad47e955d5980d694e00" translate="yes" xml:space="preserve">
          <source>A file system may implement restrictions to certain operations on the actual file-system object, such as reading, writing, and executing. These restrictions are collectively known as</source>
          <target state="translated">ファイルシステムは、実際のファイルシステムオブジェクトに対する特定の操作(読み、書き、実行など)に対する制限を実装することができます。これらの制限は、以下のようにまとめて知られています。</target>
        </trans-unit>
        <trans-unit id="50c9ca57e623b4c14bcb87e67ff20918988b3535" translate="yes" xml:space="preserve">
          <source>A file system provider is a concrete implementation of this class that implements the abstract methods defined by this class. A provider is identified by a &lt;code&gt;URI&lt;/code&gt;&lt;a href=&quot;#getScheme()&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt;. The default provider is identified by the URI scheme &quot;file&quot;. It creates the &lt;a href=&quot;../filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that provides access to the file systems accessible to the Java virtual machine. The &lt;a href=&quot;../filesystems&quot;&gt;&lt;code&gt;FileSystems&lt;/code&gt;&lt;/a&gt; class defines how file system providers are located and loaded. The default provider is typically a system-default provider but may be overridden if the system property &lt;code&gt;
 java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; is set. In that case, the provider has a one argument constructor whose formal parameter type is &lt;code&gt;
 FileSystemProvider&lt;/code&gt;. All other providers have a zero argument constructor that initializes the provider.</source>
          <target state="translated">A file system provider is a concrete implementation of this class that implements the abstract methods defined by this class. A provider is identified by a &lt;code&gt;URI&lt;/code&gt; &lt;a href=&quot;#getScheme()&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt;. The default provider is identified by the URI scheme &quot;file&quot;. It creates the &lt;a href=&quot;../filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt; that provides access to the file systems accessible to the Java virtual machine. The &lt;a href=&quot;../filesystems&quot;&gt; &lt;code&gt;FileSystems&lt;/code&gt; &lt;/a&gt; class defines how file system providers are located and loaded. The default provider is typically a system-default provider but may be overridden if the system property &lt;code&gt; java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; is set. In that case, the provider has a one argument constructor whose formal parameter type is &lt;code&gt; FileSystemProvider&lt;/code&gt; . All other providers have a zero argument constructor that initializes the provider.</target>
        </trans-unit>
        <trans-unit id="1e8b4b9993656e1244070ad20dae9aefaa220eb7" translate="yes" xml:space="preserve">
          <source>A file system provider is a concrete implementation of this class that implements the abstract methods defined by this class. A provider is identified by a &lt;code&gt;URI&lt;/code&gt;&lt;a href=&quot;filesystemprovider#getScheme--&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt;. The default provider is identified by the URI scheme &quot;file&quot;. It creates the &lt;a href=&quot;../filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that provides access to the file systems accessible to the Java virtual machine. The &lt;a href=&quot;../filesystems&quot;&gt;&lt;code&gt;FileSystems&lt;/code&gt;&lt;/a&gt; class defines how file system providers are located and loaded. The default provider is typically a system-default provider but may be overridden if the system property &lt;code&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; is set. In that case, the provider has a one argument constructor whose formal parameter type is &lt;code&gt;FileSystemProvider&lt;/code&gt;. All other providers have a zero argument constructor that initializes the provider.</source>
          <target state="translated">ファイルシステムプロバイダーは、このクラスによって定義された抽象メソッドを実装するこのクラスの具象実装です。プロバイダーは &lt;code&gt;URI&lt;/code&gt; &lt;a href=&quot;filesystemprovider#getScheme--&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt;によって識別されます。デフォルトのプロバイダーは、URIスキーム「ファイル」によって識別されます。Java仮想マシンにアクセス可能なファイルシステムへのアクセスを提供する&lt;a href=&quot;../filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt;を作成します。&lt;a href=&quot;../filesystems&quot;&gt; &lt;code&gt;FileSystems&lt;/code&gt; &lt;/a&gt;のファイルシステムプロバイダが位置し、ロードされているか、クラスの定義。デフォルトのプロバイダーは通常、システムのデフォルトのプロバイダーですが、システムプロパティ &lt;code&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; が設定されている場合はオーバーライドされる可能性があります。その場合、プロバイダーには1つの引数のコンストラクターがあり、その仮パラメーターのタイプは &lt;code&gt;FileSystemProvider&lt;/code&gt; です。。他のすべてのプロバイダーには、プロバイダーを初期化するゼロ引数コンストラクターがあります。</target>
        </trans-unit>
        <trans-unit id="ce65bc131fb341143ffa2432afe6788f89f640c4" translate="yes" xml:space="preserve">
          <source>A file system provides access to a file store that may be composed of a number of distinct file hierarchies, each with its own top-level root directory. Unless denied by the security manager, each element in the returned iterator corresponds to the root directory of a distinct file hierarchy. The order of the elements is not defined. The file hierarchies may change during the lifetime of the Java virtual machine. For example, in some implementations, the insertion of removable media may result in the creation of a new file hierarchy with its own top-level directory.</source>
          <target state="translated">ファイルシステムは、複数の異なるファイル階層からなるファイルストアへのアクセスを提供します。セキュリティ管理者によって拒否されない限り、返されるイテレータの各要素は、別個のファイル階層のルートディレクトリに対応します。要素の順序は定義されていません。ファイル階層は、Java 仮想マシンの有効期間中に変更される可能性があります。例えば、いくつかの実装では、リムーバブル・メディアの挿入により、それ自身のトップレベル・ディレクトリを持つ新しいファイル階層が作成されることがあります。</target>
        </trans-unit>
        <trans-unit id="67ce0311f6028fd1552cf502d1719372ae4c2342" translate="yes" xml:space="preserve">
          <source>A file type detector for probing a file to guess its file type.</source>
          <target state="translated">ファイルの種類を推測するためにファイルをプロービングするためのファイルタイプ検出器。</target>
        </trans-unit>
        <trans-unit id="61027a230d12f615246216d95e4ebcd7132e375c" translate="yes" xml:space="preserve">
          <source>A file type detector is a concrete implementation of this class, has a zero-argument constructor, and implements the abstract methods specified below.</source>
          <target state="translated">ファイル型検出器は、このクラスの具体的な実装であり、ゼロ引数のコンストラクタを持ち、以下に指定された抽象メソッドを実装しています。</target>
        </trans-unit>
        <trans-unit id="672c5562db439fda1727f52bc78e2d03e4797b3b" translate="yes" xml:space="preserve">
          <source>A file-lock object is created each time a lock is acquired on a file via one of the &lt;a href=&quot;filechannel#lock(long,long,boolean)&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;filechannel#tryLock(long,long,boolean)&quot;&gt;&lt;code&gt;tryLock&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class, or the &lt;a href=&quot;asynchronousfilechannel#lock(long,long,boolean,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;asynchronousfilechannel#tryLock(long,long,boolean)&quot;&gt;&lt;code&gt;tryLock&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;asynchronousfilechannel&quot;&gt;&lt;code&gt;AsynchronousFileChannel&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">A file-lock object is created each time a lock is acquired on a file via one of the &lt;a href=&quot;filechannel#lock(long,long,boolean)&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;filechannel#tryLock(long,long,boolean)&quot;&gt; &lt;code&gt;tryLock&lt;/code&gt; &lt;/a&gt; methods of the &lt;a href=&quot;filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt; class, or the &lt;a href=&quot;asynchronousfilechannel#lock(long,long,boolean,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;asynchronousfilechannel#tryLock(long,long,boolean)&quot;&gt; &lt;code&gt;tryLock&lt;/code&gt; &lt;/a&gt; methods of the &lt;a href=&quot;asynchronousfilechannel&quot;&gt; &lt;code&gt;AsynchronousFileChannel&lt;/code&gt; &lt;/a&gt; class.</target>
        </trans-unit>
        <trans-unit id="7a8fa8c5ab136a06c54fd39e4c674ceb8e8879dc" translate="yes" xml:space="preserve">
          <source>A file-lock object is created each time a lock is acquired on a file via one of the &lt;a href=&quot;filechannel#lock-long-long-boolean-&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;filechannel#tryLock-long-long-boolean-&quot;&gt;&lt;code&gt;tryLock&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class, or the &lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;asynchronousfilechannel#tryLock-long-long-boolean-&quot;&gt;&lt;code&gt;tryLock&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;asynchronousfilechannel&quot;&gt;&lt;code&gt;AsynchronousFileChannel&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">ファイルロックオブジェクトがロックのうちの1つを介してファイルを取得するたびに作成され&lt;a href=&quot;filechannel#lock-long-long-boolean-&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;filechannel#tryLock-long-long-boolean-&quot;&gt; &lt;code&gt;tryLock&lt;/code&gt; &lt;/a&gt;の方法&lt;a href=&quot;filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt;クラス、または&lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;asynchronousfilechannel#tryLock-long-long-boolean-&quot;&gt; &lt;code&gt;tryLock&lt;/code&gt; &lt;/a&gt;方法&lt;a href=&quot;asynchronousfilechannel&quot;&gt; &lt;code&gt;AsynchronousFileChannel&lt;/code&gt; の&lt;/a&gt;クラス。</target>
        </trans-unit>
        <trans-unit id="f5e07c6b2c7d4656577eb217d6c977813de3732f" translate="yes" xml:space="preserve">
          <source>A file-lock object is initially valid. It remains valid until the lock is released by invoking the &lt;a href=&quot;#release()&quot;&gt;&lt;code&gt;release&lt;/code&gt;&lt;/a&gt; method, by closing the channel that was used to acquire it, or by the termination of the Java virtual machine, whichever comes first. The validity of a lock may be tested by invoking its &lt;a href=&quot;#isValid()&quot;&gt;&lt;code&gt;isValid&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">A file-lock object is initially valid. It remains valid until the lock is released by invoking the &lt;a href=&quot;#release()&quot;&gt; &lt;code&gt;release&lt;/code&gt; &lt;/a&gt; method, by closing the channel that was used to acquire it, or by the termination of the Java virtual machine, whichever comes first. The validity of a lock may be tested by invoking its &lt;a href=&quot;#isValid()&quot;&gt; &lt;code&gt;isValid&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="ad42d41492ff4c772586b7c3843a8158af9ec343" translate="yes" xml:space="preserve">
          <source>A file-lock object is initially valid. It remains valid until the lock is released by invoking the &lt;a href=&quot;filelock#release--&quot;&gt;&lt;code&gt;release&lt;/code&gt;&lt;/a&gt; method, by closing the channel that was used to acquire it, or by the termination of the Java virtual machine, whichever comes first. The validity of a lock may be tested by invoking its &lt;a href=&quot;filelock#isValid--&quot;&gt;&lt;code&gt;isValid&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ファイルロックオブジェクトは、最初は有効です。ロックは、&lt;a href=&quot;filelock#release--&quot;&gt; &lt;code&gt;release&lt;/code&gt; &lt;/a&gt;メソッドの呼び出し、ロックの取得に使用されたチャネルのクローズ、またはJava仮想マシンの終了のいずれか早い方でロックが解放されるまで有効です。ロックの有効性は、その&lt;a href=&quot;filelock#isValid--&quot;&gt; &lt;code&gt;isValid&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによってテストできます。</target>
        </trans-unit>
        <trans-unit id="711939d8e50341d6cac3f60c7b46e0edf7fe9bab" translate="yes" xml:space="preserve">
          <source>A file-lock object records the file channel upon whose file the lock is held, the type and validity of the lock, and the position and size of the locked region. Only the validity of a lock is subject to change over time; all other aspects of a lock's state are immutable.</source>
          <target state="translated">ファイルロックオブジェクトは、ロックが保持されているファイルのファイルチャネル、ロックのタイプと有効性、ロックされた領域の位置とサイズを記録します。ロックの有効性だけが時間の経過とともに変化します。</target>
        </trans-unit>
        <trans-unit id="37db82205994f143c5f9c99d0b674ca7cbf64f42" translate="yes" xml:space="preserve">
          <source>A filter can be set via &lt;a href=&quot;objectinputstream#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt;&lt;code&gt;setObjectInputFilter&lt;/code&gt;&lt;/a&gt; for an individual ObjectInputStream. A filter can be set via &lt;a href=&quot;objectinputfilter.config#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt;&lt;code&gt;Config.setSerialFilter&lt;/code&gt;&lt;/a&gt; to affect every &lt;code&gt;ObjectInputStream&lt;/code&gt; that does not otherwise set a filter.</source>
          <target state="translated">A filter can be set via &lt;a href=&quot;objectinputstream#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt; &lt;code&gt;setObjectInputFilter&lt;/code&gt; &lt;/a&gt; for an individual ObjectInputStream. A filter can be set via &lt;a href=&quot;objectinputfilter.config#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt; &lt;code&gt;Config.setSerialFilter&lt;/code&gt; &lt;/a&gt; to affect every &lt;code&gt;ObjectInputStream&lt;/code&gt; that does not otherwise set a filter.</target>
        </trans-unit>
        <trans-unit id="7de111ba655a02d8af6bcdb6e71c56d7031e6b00" translate="yes" xml:space="preserve">
          <source>A filter determines whether the arguments are &lt;a href=&quot;objectinputfilter.status#ALLOWED&quot;&gt;&lt;code&gt;ALLOWED&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt;&lt;code&gt;REJECTED&lt;/code&gt;&lt;/a&gt; and should return the appropriate status. If the filter cannot determine the status it should return &lt;a href=&quot;objectinputfilter.status#UNDECIDED&quot;&gt;&lt;code&gt;UNDECIDED&lt;/code&gt;&lt;/a&gt;. Filters should be designed for the specific use case and expected types. A filter designed for a particular use may be passed a class that is outside of the scope of the filter. If the purpose of the filter is to black-list classes then it can reject a candidate class that matches and report UNDECIDED for others. A filter may be called with class equals &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;arrayLength&lt;/code&gt; equal -1, the depth, number of references, and stream size and return a status that reflects only one or only some of the values. This allows a filter to specific about the choice it is reporting and to use other filters without forcing either allowed or rejected status.</source>
          <target state="translated">A filter determines whether the arguments are &lt;a href=&quot;objectinputfilter.status#ALLOWED&quot;&gt; &lt;code&gt;ALLOWED&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt; &lt;code&gt;REJECTED&lt;/code&gt; &lt;/a&gt; and should return the appropriate status. If the filter cannot determine the status it should return &lt;a href=&quot;objectinputfilter.status#UNDECIDED&quot;&gt; &lt;code&gt;UNDECIDED&lt;/code&gt; &lt;/a&gt;. Filters should be designed for the specific use case and expected types. A filter designed for a particular use may be passed a class that is outside of the scope of the filter. If the purpose of the filter is to black-list classes then it can reject a candidate class that matches and report UNDECIDED for others. A filter may be called with class equals &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;arrayLength&lt;/code&gt; equal -1, the depth, number of references, and stream size and return a status that reflects only one or only some of the values. This allows a filter to specific about the choice it is reporting and to use other filters without forcing either allowed or rejected status.</target>
        </trans-unit>
        <trans-unit id="0bf0848690b34b73710f009588eaee0ac9b1dec7" translate="yes" xml:space="preserve">
          <source>A filter for abstract pathnames.</source>
          <target state="translated">抽象パス名のフィルタ。</target>
        </trans-unit>
        <trans-unit id="4e46c5f00d4c9311a752d8db9bc2a6b91d9ee455" translate="yes" xml:space="preserve">
          <source>A filtering collector differs from a stream's &lt;code&gt;filter()&lt;/code&gt; operation. In this example, suppose there are no employees whose salary is above the threshold in some department. Using a filtering collector as shown above would result in a mapping from that department to an empty &lt;code&gt;Set&lt;/code&gt;. If a stream &lt;code&gt;filter()&lt;/code&gt; operation were done instead, there would be no mapping for that department at all.</source>
          <target state="translated">A filtering collector differs from a stream's &lt;code&gt;filter()&lt;/code&gt; operation. In this example, suppose there are no employees whose salary is above the threshold in some department. Using a filtering collector as shown above would result in a mapping from that department to an empty &lt;code&gt;Set&lt;/code&gt; . If a stream &lt;code&gt;filter()&lt;/code&gt; operation were done instead, there would be no mapping for that department at all.</target>
        </trans-unit>
        <trans-unit id="f5d806550c847ea862457c3d219d54ba7153c428" translate="yes" xml:space="preserve">
          <source>A finder of modules.</source>
          <target state="translated">モジュールのファインダー。</target>
        </trans-unit>
        <trans-unit id="5a27c0038919302b881a06f7ffdce9745aa933a5" translate="yes" xml:space="preserve">
          <source>A finder of modules. A &lt;code&gt;ModuleFinder&lt;/code&gt; is used to find modules during &lt;a href=&quot;package-summary#resolution&quot;&gt;resolution&lt;/a&gt; or &lt;a href=&quot;configuration#service-binding&quot;&gt;service binding&lt;/a&gt;.</source>
          <target state="translated">A finder of modules. A &lt;code&gt;ModuleFinder&lt;/code&gt; is used to find modules during &lt;a href=&quot;package-summary#resolution&quot;&gt;resolution&lt;/a&gt; or &lt;a href=&quot;configuration#service-binding&quot;&gt;service binding&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a0855a7cb6e2cc9c6bb1e2f2e28bf3f0bf0f605f" translate="yes" xml:space="preserve">
          <source>A flag for recording whether this attribute's values are ordered.</source>
          <target state="translated">この属性の値が順序付けられているかどうかを記録するためのフラグ。</target>
        </trans-unit>
        <trans-unit id="0150a3e4f9ae041e8ce2e60f25a81b388f493479" translate="yes" xml:space="preserve">
          <source>A flag indicating that there has been at least one &lt;code&gt;PropertyChangeVetoException&lt;/code&gt; thrown for the attempted setBeanContext operation.</source>
          <target state="translated">試行されたsetBeanContext操作に対して少なくとも1つの &lt;code&gt;PropertyChangeVetoException&lt;/code&gt; がスローされたことを示すフラグ。</target>
        </trans-unit>
        <trans-unit id="ef38e7098fbd7a1a4c4c2c37ee356ad0ed51a5b9" translate="yes" xml:space="preserve">
          <source>A flag indicating whether this attribute was actually specified in the start-tag of its element, or was defaulted from the schema.</source>
          <target state="translated">この属性が実際にその要素の開始タグで指定されているのか、スキーマからデフォルトで指定されているのかを示すフラグ。</target>
        </trans-unit>
        <trans-unit id="a00c11559390c6c3c288e96fb53f1dac078f6002" translate="yes" xml:space="preserve">
          <source>A flag to layoutGlyphVector indicating that text in the char array after the indicated limit should not be examined.</source>
          <target state="translated">指定された限界値以降のchar配列内のテキストを検査すべきではないことを示すlayoutGlyphVectorに対するフラグ。</target>
        </trans-unit>
        <trans-unit id="89b835f89e44dca84649d0af8a2d341b267b828d" translate="yes" xml:space="preserve">
          <source>A flag to layoutGlyphVector indicating that text in the char array before the indicated start should not be examined.</source>
          <target state="translated">指定された開始前のchar配列内のテキストを検査すべきではないことを示すlayoutGlyphVectorに対するフラグ。</target>
        </trans-unit>
        <trans-unit id="1b05810e2680c32d104367e2bc3bdf2856bec039" translate="yes" xml:space="preserve">
          <source>A flag to layoutGlyphVector indicating that text is left-to-right as determined by Bidi analysis.</source>
          <target state="translated">Bidi解析により文字が左から右になることを示す layoutGlyphVector へのフラグ。</target>
        </trans-unit>
        <trans-unit id="2f642699b80e7848ecebfe10f5fb03cf79285cd9" translate="yes" xml:space="preserve">
          <source>A flag to layoutGlyphVector indicating that text is right-to-left as determined by Bidi analysis.</source>
          <target state="translated">Bidi解析で決定された文字が右から左になることを示す layoutGlyphVector へのフラグ。</target>
        </trans-unit>
        <trans-unit id="3b2359dfcb7720ef48d07ba5990a5de781cb3c32" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has a complex glyph-to-char mapping (one that does not map glyphs to chars one-to-one in strictly ascending or descending order matching the run direction).</source>
          <target state="translated">A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has a complex glyph-to-char mapping (one that does not map glyphs to chars one-to-one in strictly ascending or descending order matching the run direction).</target>
        </trans-unit>
        <trans-unit id="9e458e69570a072d1fc8ecb0f33a8857f2d161d8" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has a right-to-left run direction.</source>
          <target state="translated">A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has a right-to-left run direction.</target>
        </trans-unit>
        <trans-unit id="5d389bdc65eb9e2f6f6590d7b5a086d06acef5c7" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has a right-to-left run direction. This refers to the glyph-to-char mapping and does not imply that the visual locations of the glyphs are necessarily in this order, although generally they will be.</source>
          <target state="translated">A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has a right-to-left run direction. This refers to the glyph-to-char mapping and does not imply that the visual locations of the glyphs are necessarily in this order, although generally they will be.</target>
        </trans-unit>
        <trans-unit id="27d657250e658fcd9c6d68b3f91f841beea746f8" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has per-glyph transforms.</source>
          <target state="translated">A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has per-glyph transforms.</target>
        </trans-unit>
        <trans-unit id="64110abfbbbc887bb854fb4704c0089ffea09615" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has position adjustments.</source>
          <target state="translated">A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has position adjustments.</target>
        </trans-unit>
        <trans-unit id="80fe54feb13a5cc0c3529dbae576c4c0c7d6c892" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has position adjustments. When this is true, the glyph positions don't match the accumulated default advances of the glyphs (for example, if kerning has been done).</source>
          <target state="translated">A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has position adjustments. When this is true, the glyph positions don't match the accumulated default advances of the glyphs (for example, if kerning has been done).</target>
        </trans-unit>
        <trans-unit id="dec43e8a9f1bb9d6b9c197216876739e500aa223" translate="yes" xml:space="preserve">
          <source>A float buffer is not comparable to any other type of object.</source>
          <target state="translated">フロートバッファは他のタイプのオブジェクトとは比較になりません。</target>
        </trans-unit>
        <trans-unit id="5fb7a5a9e39b583648f523754a43509e1e7a8e4b" translate="yes" xml:space="preserve">
          <source>A float buffer is not equal to any other type of object.</source>
          <target state="translated">float バッファは、他のタイプのオブジェクトと同じではありません。</target>
        </trans-unit>
        <trans-unit id="8e77a58864e91572b793bb101954ce33a7471066" translate="yes" xml:space="preserve">
          <source>A float buffer.</source>
          <target state="translated">フロートバッファです。</target>
        </trans-unit>
        <trans-unit id="bd680bc60ca812a5387563332bf314e22d394073" translate="yes" xml:space="preserve">
          <source>A flow layout arranges components in a directional flow, much like lines of text in a paragraph.</source>
          <target state="translated">フローレイアウトは、段落内のテキストの行のように、方向性のある流れの中でコンポーネントを配置します。</target>
        </trans-unit>
        <trans-unit id="6a46d621888c556449816594810e0ad6f440cf3b" translate="yes" xml:space="preserve">
          <source>A flow layout arranges components in a directional flow, much like lines of text in a paragraph. The flow direction is determined by the container's &lt;code&gt;componentOrientation&lt;/code&gt; property and may be one of two values:</source>
          <target state="translated">A flow layout arranges components in a directional flow, much like lines of text in a paragraph. The flow direction is determined by the container's &lt;code&gt;componentOrientation&lt;/code&gt; property and may be one of two values:</target>
        </trans-unit>
        <trans-unit id="fb80e248814493a514fcef9129f6cbb0b50437d8" translate="yes" xml:space="preserve">
          <source>A flow layout lets each component assume its natural (preferred) size.</source>
          <target state="translated">フローレイアウトでは、各コンポーネントは自然な(好みの)サイズを想定しています。</target>
        </trans-unit>
        <trans-unit id="d96ba43b6da836af6fc96efc40a3cd8caf037eff" translate="yes" xml:space="preserve">
          <source>A focus traversal action with unspecified direction.</source>
          <target state="translated">方向不定のフォーカストラバーサルアクション。</target>
        </trans-unit>
        <trans-unit id="d03e66bb96338159b743fc35610bd55d6fbcf642" translate="yes" xml:space="preserve">
          <source>A font designer will typically carefully hint a font for the most common user interface point sizes. Consequently the 'gasp' table will likely specify to use only hinting at those sizes and not &quot;smoothing&quot;. So in many cases the resulting text display is equivalent to &lt;code&gt;VALUE_TEXT_ANTIALIAS_OFF&lt;/code&gt;. This may be unexpected but is correct.</source>
          <target state="translated">A font designer will typically carefully hint a font for the most common user interface point sizes. Consequently the 'gasp' table will likely specify to use only hinting at those sizes and not &quot;smoothing&quot;. So in many cases the resulting text display is equivalent to &lt;code&gt;VALUE_TEXT_ANTIALIAS_OFF&lt;/code&gt; . This may be unexpected but is correct.</target>
        </trans-unit>
        <trans-unit id="095d84578b9b46db68702b89c5e268f351fac4b5" translate="yes" xml:space="preserve">
          <source>A format conversion provider provides format conversion services from one or more input formats to one or more output formats.</source>
          <target state="translated">フォーマット変換プロバイダは、1つ以上の入力フォーマットから1つ以上の出力フォーマットへのフォーマット変換サービスを提供します。</target>
        </trans-unit>
        <trans-unit id="9cc5d6ee4e5941d38db8fe246dade4e397e58a4b" translate="yes" xml:space="preserve">
          <source>A format conversion provider provides format conversion services from one or more input formats to one or more output formats. Converters include codecs, which encode and/or decode audio data, as well as transcoders, etc. Format converters provide methods for determining what conversions are supported and for obtaining an audio stream from which converted data can be read.</source>
          <target state="translated">フォーマット変換プロバイダは、1つ以上の入力フォーマットから1つ以上の出力フォーマットへのフォーマット変換サービスを提供する。変換装置は、オーディオデータをエンコード及び/又はデコードするコーデック、並びにトランスコーダ等を含む。フォーマット変換プロバイダは、どのような変換がサポートされているかを決定し、変換されたデータを読み取ることができるオーディオストリームを得るための方法を提供する。</target>
        </trans-unit>
        <trans-unit id="787cdbb4f865ed56be30b06dfca7e0f4af1393ad" translate="yes" xml:space="preserve">
          <source>A formatted string</source>
          <target state="translated">フォーマットされた文字列</target>
        </trans-unit>
        <trans-unit id="e34e6b811c39b4b5b349c092b770d0705e7dbe5f" translate="yes" xml:space="preserve">
          <source>A forward focus traversal action.</source>
          <target state="translated">フォワードフォーカスのトラバーサルアクション。</target>
        </trans-unit>
        <trans-unit id="35d25a295891e4731302bd13ab6217bf8d2a28c1" translate="yes" xml:space="preserve">
          <source>A fragment of Java code representing an initializer for the current value.</source>
          <target state="translated">現在の値のイニシャライザを表すJavaコードの断片。</target>
        </trans-unit>
        <trans-unit id="60990cb5e587dad8e349ae68390eae1367ebed51" translate="yes" xml:space="preserve">
          <source>A frame may have its native decorations (i.e. &lt;code&gt;Frame&lt;/code&gt; and &lt;code&gt;Titlebar&lt;/code&gt;) turned off with &lt;code&gt;setUndecorated&lt;/code&gt;. This can only be done while the frame is not &lt;a href=&quot;component#isDisplayable()&quot;&gt;&lt;code&gt;displayable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A frame may have its native decorations (i.e. &lt;code&gt;Frame&lt;/code&gt; and &lt;code&gt;Titlebar&lt;/code&gt; ) turned off with &lt;code&gt;setUndecorated&lt;/code&gt; . This can only be done while the frame is not &lt;a href=&quot;component#isDisplayable()&quot;&gt; &lt;code&gt;displayable&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b942d4b2fdeab74944136600301e72f5eb3d26f0" translate="yes" xml:space="preserve">
          <source>A frame-like object that is clipped by a desktop pane.</source>
          <target state="translated">デスクトップペインでクリップされたフレーム状のオブジェクト。</target>
        </trans-unit>
        <trans-unit id="9e2e6aded9e997f98ab282c9eb759f9a92abd1bd" translate="yes" xml:space="preserve">
          <source>A frame-like object that is clipped by a desktop pane. The desktop pane, internal frame, and desktop icon objects are often used to create multiple document interfaces within an application.</source>
          <target state="translated">デスクトップペインでクリップされたフレーム状のオブジェクト。デスクトップペイン、内部フレーム、デスクトップアイコンオブジェクトは、アプリケーション内で複数のドキュメントインターフェースを作成するためによく使用されます。</target>
        </trans-unit>
        <trans-unit id="3869e53a3cced311d994733b36fbcccab3b1d8c9" translate="yes" xml:space="preserve">
          <source>A freshly-created lookup object on the &lt;a href=&quot;methodhandles#lookup()&quot;&gt;caller's class&lt;/a&gt; has all possible bits set, except &lt;code&gt;UNCONDITIONAL&lt;/code&gt;. A lookup object on a new lookup class &lt;a href=&quot;#in(java.lang.Class)&quot;&gt;created from a previous lookup object&lt;/a&gt; may have some mode bits set to zero. Mode bits can also be &lt;a href=&quot;#dropLookupMode(int)&quot;&gt;directly cleared&lt;/a&gt;. Once cleared, mode bits cannot be restored from the downgraded lookup object. The purpose of this is to restrict access via the new lookup object, so that it can access only names which can be reached by the original lookup object, and also by the new lookup class.</source>
          <target state="translated">A freshly-created lookup object on the &lt;a href=&quot;methodhandles#lookup()&quot;&gt;caller's class&lt;/a&gt; has all possible bits set, except &lt;code&gt;UNCONDITIONAL&lt;/code&gt; . A lookup object on a new lookup class &lt;a href=&quot;#in(java.lang.Class)&quot;&gt;created from a previous lookup object&lt;/a&gt; may have some mode bits set to zero. Mode bits can also be &lt;a href=&quot;#dropLookupMode(int)&quot;&gt;directly cleared&lt;/a&gt;. Once cleared, mode bits cannot be restored from the downgraded lookup object. The purpose of this is to restrict access via the new lookup object, so that it can access only names which can be reached by the original lookup object, and also by the new lookup class.</target>
        </trans-unit>
        <trans-unit id="f50712164fb4f66c4a5273060c757a95e13d5e62" translate="yes" xml:space="preserve">
          <source>A freshly-created lookup object on the &lt;a href=&quot;methodhandles#lookup--&quot;&gt;caller's class&lt;/a&gt; has all possible bits set, since the caller class can access all its own members. A lookup object on a new lookup class &lt;a href=&quot;methodhandles.lookup#in-java.lang.Class-&quot;&gt;created from a previous lookup object&lt;/a&gt; may have some mode bits set to zero. The purpose of this is to restrict access via the new lookup object, so that it can access only names which can be reached by the original lookup object, and also by the new lookup class.</source>
          <target state="translated">&lt;a href=&quot;methodhandles#lookup--&quot;&gt;呼び出し元のクラスで&lt;/a&gt;新しく作成されたルックアップオブジェクトには、すべての可能なビットが設定されています。これは、呼び出し元のクラスが自身のメンバーすべてにアクセスできるためです。&lt;a href=&quot;methodhandles.lookup#in-java.lang.Class-&quot;&gt;以前のルックアップオブジェクトから作成さ&lt;/a&gt;れた新しいルックアップクラスのルックアップオブジェクトでは、一部のモードビットがゼロに設定されている場合があります。これの目的は、新しいルックアップオブジェクトを介したアクセスを制限し、元のルックアップオブジェクトと新しいルックアップクラスが到達できる名前のみにアクセスできるようにすることです。</target>
        </trans-unit>
        <trans-unit id="1b5de0b9db89f7dec9586d9d504d2d55acb5d76d" translate="yes" xml:space="preserve">
          <source>A function that accepts two partial results and merges them.</source>
          <target state="translated">2つの部分的な結果を受け取り、それらをマージする関数。</target>
        </trans-unit>
        <trans-unit id="6d07cafb2c426484441f2fe06c267dc28cd189d5" translate="yes" xml:space="preserve">
          <source>A function that accepts two partial results and merges them. The combiner function may fold state from one argument into the other and return that, or may return a new result container.</source>
          <target state="translated">2つの部分的な結果を受け取り、それらをマージする関数。コンバイナ関数は、一方の引数の状態をもう一方の引数に畳み込んでそれを返すか、あるいは新しい結果コンテナを返すことができます。</target>
        </trans-unit>
        <trans-unit id="43bddcf15e634de817d95953c7f18c644307bb91" translate="yes" xml:space="preserve">
          <source>A function that creates and returns a new mutable result container.</source>
          <target state="translated">新しい変更可能な結果コンテナを作成して返す関数です。</target>
        </trans-unit>
        <trans-unit id="ac772ea250f6df76a426391d3fc80b98a029b616" translate="yes" xml:space="preserve">
          <source>A function that folds a value into a mutable result container.</source>
          <target state="translated">値を、ミューティング可能な結果コンテナに折りたたむ関数です。</target>
        </trans-unit>
        <trans-unit id="f1e987f1e57505c842f18a1165026e190dbf68de" translate="yes" xml:space="preserve">
          <source>A gauge monitor observes an attribute that is continuously variable with time. A gauge monitor sends notifications as follows:</source>
          <target state="translated">ゲージモニターは、時間的に連続的に変動する属性を観測します。ゲージモニターは以下のように通知を送信します。</target>
        </trans-unit>
        <trans-unit id="1354cd976006274706a25240cf8974eba59b5894" translate="yes" xml:space="preserve">
          <source>A general guideline for validators is to return true if the attribute was originally present in the pipeline, and false if it was added by the validator.</source>
          <target state="translated">バリデータの一般的なガイドラインは、パイプラインに元々存在していた属性であればtrueを返し、バリデータによって追加された属性であればfalseを返すというものです。</target>
        </trans-unit>
        <trans-unit id="f3bb2e152ff1aaee77640e95e07291f19892a22f" translate="yes" xml:space="preserve">
          <source>A generator of uniform pseudorandom values applicable for use in (among other contexts) isolated parallel computations that may generate subtasks.</source>
          <target state="translated">サブタスクを生成することができる孤立した並列計算で使用するための(他のコンテキストの中で)一様な擬似乱数値の生成器。</target>
        </trans-unit>
        <trans-unit id="f296f7762bab23d802a5065844a5502434108582" translate="yes" xml:space="preserve">
          <source>A generator of uniform pseudorandom values applicable for use in (among other contexts) isolated parallel computations that may generate subtasks. Class &lt;code&gt;SplittableRandom&lt;/code&gt; supports methods for producing pseudorandom numbers of type &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, and &lt;code&gt;double&lt;/code&gt; with similar usages as for class &lt;a href=&quot;random&quot;&gt;&lt;code&gt;Random&lt;/code&gt;&lt;/a&gt; but differs in the following ways:</source>
          <target state="translated">（他のコンテキストの中で）サブタスクを生成する可能性のある分離された並列計算での使用に適用可能な均一な擬似ランダム値のジェネレーター。クラス &lt;code&gt;SplittableRandom&lt;/code&gt; は、クラス&lt;a href=&quot;random&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;/a&gt;と同様の使用法で、タイプが &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt;long&lt;/code&gt; 、および &lt;code&gt;double&lt;/code&gt; の疑似乱数を生成するメソッドをサポートしますが、以下の点で異なります。</target>
        </trans-unit>
        <trans-unit id="39c26f88bef5c9de64f68da3b786d42455a9cab2" translate="yes" xml:space="preserve">
          <source>A generic Abstract Window Toolkit(AWT) container object is a component that can contain other AWT components.</source>
          <target state="translated">一般的な抽象ウィンドウツールキット(AWT)コンテナオブジェクトは、他のAWTコンポーネントを含むことができるコンポーネントです。</target>
        </trans-unit>
        <trans-unit id="5f318d1625a7edc63e2f5618183f323472491dc4" translate="yes" xml:space="preserve">
          <source>A generic HTML TagElement class.</source>
          <target state="translated">汎用的なHTML TagElementクラス。</target>
        </trans-unit>
        <trans-unit id="1b641406d58da099513d996133375b981123f238" translate="yes" xml:space="preserve">
          <source>A generic HTML TagElement class. The methods define how white space is interpreted around the tag.</source>
          <target state="translated">汎用的なHTML TagElementクラス。メソッドは、タグの周りの空白がどのように解釈されるかを定義します。</target>
        </trans-unit>
        <trans-unit id="ee3e63d8bc812120b6319da0e643f81f18db8658" translate="yes" xml:space="preserve">
          <source>A generic account exception.</source>
          <target state="translated">一般的なアカウントの例外。</target>
        </trans-unit>
        <trans-unit id="6638c80328392fd542656ba1c109b89d4578d810" translate="yes" xml:space="preserve">
          <source>A generic container that is often used to group objects.</source>
          <target state="translated">オブジェクトをグループ化するのによく使われる汎用コンテナ。</target>
        </trans-unit>
        <trans-unit id="ea8cc0b37c072a62f90548d86d62546be1b6030b" translate="yes" xml:space="preserve">
          <source>A generic credential exception.</source>
          <target state="translated">一般的なクレデンシャルの例外。</target>
        </trans-unit>
        <trans-unit id="8d3921e6c41e544a62aad090d777399ba09dfeb0" translate="yes" xml:space="preserve">
          <source>A generic element defines a family of types, not just one. If this is a generic element, a</source>
          <target state="translated">ジェネリック要素は型のファミリーを定義するもので、一つだけではありません。これがジェネリック要素であれば</target>
        </trans-unit>
        <trans-unit id="3578a52f1bc291e214ae7fd982f27e4ba0b688c3" translate="yes" xml:space="preserve">
          <source>A generic implementation of &lt;code&gt;ColorSelectionModel&lt;/code&gt;.</source>
          <target state="translated">A generic implementation of &lt;code&gt;ColorSelectionModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30dc67c3ddc214c44e60b4ae5fede37d7fcd999c" translate="yes" xml:space="preserve">
          <source>A generic implementation of BoundedRangeModel.</source>
          <target state="translated">BoundedRangeModel の汎用的な実装です。</target>
        </trans-unit>
        <trans-unit id="1f635e63becb19276595cfd341b6bc81d2e61999" translate="yes" xml:space="preserve">
          <source>A generic implementation of SingleSelectionModel.</source>
          <target state="translated">SingleSelectionModel の汎用的な実装です。</target>
        </trans-unit>
        <trans-unit id="5ccd60299ff2b531b7b5d0ed4bca19b49c6e458e" translate="yes" xml:space="preserve">
          <source>A generic interface for a mutable collection of unique attributes.</source>
          <target state="translated">ユニークな属性の変異可能なコレクションのための一般的なインターフェース。</target>
        </trans-unit>
        <trans-unit id="69fa87a3d0b58ae17bc145d5d6f7bee1fd0c231d" translate="yes" xml:space="preserve">
          <source>A generic interface for a mutable collection of unique attributes. Implementations will probably want to provide a constructor of the form:</source>
          <target state="translated">ユニークな属性を集めた変異可能なコレクションのための一般的なインターフェイスです。実装では、おそらくこの形式のコンストラクタを提供することになるでしょう。</target>
        </trans-unit>
        <trans-unit id="36a2626cbe080b42ca256bc3f5f06c6e465de057" translate="yes" xml:space="preserve">
          <source>A given connector need not support the generation of client stubs. However, the connectors specified by the JMX Remote API do (JMXMP Connector and RMI Connector).</source>
          <target state="translated">指定されたコネクタは、クライアント スタブの生成をサポートする必要はありません。ただし、JMX Remote API で指定されたコネクタ (JMXMP コネクタと RMI コネクタ)はサポートしています。</target>
        </trans-unit>
        <trans-unit id="b139f5ad6b7946d259047308f55c666e905ba834" translate="yes" xml:space="preserve">
          <source>A given invocation of the Java virtual machine maintains a system-wide list of file type detectors. Installed file type detectors are loaded using the service-provider loading facility defined by the &lt;a href=&quot;../../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class. Installed file type detectors are loaded using the system class loader. If the system class loader cannot be found then the extension class loader is used; If the extension class loader cannot be found then the bootstrap class loader is used. File type detectors are typically installed by placing them in a JAR file on the application class path or in the extension directory, the JAR file contains a provider-configuration file named &lt;code&gt;java.nio.file.spi.FileTypeDetector&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;, and the file lists one or more fully-qualified names of concrete subclass of &lt;code&gt;FileTypeDetector &lt;/code&gt; that have a zero argument constructor. If the process of locating or instantiating the installed file type detectors fails then an unspecified error is thrown. The ordering that installed providers are located is implementation specific.</source>
          <target state="translated">Java仮想マシンの特定の呼び出しは、ファイルタイプ検出器のシステム全体のリストを維持します。インストールされたファイルタイプディテクタは、&lt;a href=&quot;../../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;クラスによって定義されたサービスプロバイダーロード機能を使用してロードされます。インストールされたファイルタイプ検出器は、システムクラスローダーを使用してロードされます。システムクラスローダーが見つからない場合は、拡張クラスローダーが使用されます。拡張クラスローダーが見つからない場合は、ブートストラップクラスローダーが使用されます。ファイルタイプ検出器は、通常、アプリケーションクラスパスまたは拡張ディレクトリのJARファイルに配置することでインストールされます。JARファイルには、リソースディレクトリ &lt;code&gt;META-INF/services&lt;/code&gt; &lt;code&gt;java.nio.file.spi.FileTypeDetector&lt;/code&gt; という名前のプロバイダー設定ファイルが含まれています。/ services、およびファイルには、引数がゼロのコンストラクターを持つ &lt;code&gt;FileTypeDetector &lt;/code&gt; の具象サブクラスの1つ以上の完全修飾名がリストされます。インストールされているファイルタイプディテクタを検索またはインスタンス化するプロセスが失敗した場合、不特定のエラーがスローされます。インストールされたプロバイダーが配置される順序は、実装によって異なります。</target>
        </trans-unit>
        <trans-unit id="c99eab50de0140ef9d944911fa037ec867874873" translate="yes" xml:space="preserve">
          <source>A given invocation of the Java virtual machine maintains a system-wide list of file type detectors. Installed file type detectors are loaded using the service-provider loading facility defined by the &lt;a href=&quot;../../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class. Installed file type detectors are loaded using the system class loader. If the system class loader cannot be found then the platform class loader is used. File type detectors are typically installed by placing them in a JAR file on the application class path, the JAR file contains a provider-configuration file named &lt;code&gt;java.nio.file.spi.FileTypeDetector&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;, and the file lists one or more fully-qualified names of concrete subclass of &lt;code&gt;FileTypeDetector &lt;/code&gt; that have a zero argument constructor. If the process of locating or instantiating the installed file type detectors fails then an unspecified error is thrown. The ordering that installed providers are located is implementation specific.</source>
          <target state="translated">A given invocation of the Java virtual machine maintains a system-wide list of file type detectors. Installed file type detectors are loaded using the service-provider loading facility defined by the &lt;a href=&quot;../../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; class. Installed file type detectors are loaded using the system class loader. If the system class loader cannot be found then the platform class loader is used. File type detectors are typically installed by placing them in a JAR file on the application class path, the JAR file contains a provider-configuration file named &lt;code&gt;java.nio.file.spi.FileTypeDetector&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt; , and the file lists one or more fully-qualified names of concrete subclass of &lt;code&gt;FileTypeDetector &lt;/code&gt; that have a zero argument constructor. If the process of locating or instantiating the installed file type detectors fails then an unspecified error is thrown. The ordering that installed providers are located is implementation specific.</target>
        </trans-unit>
        <trans-unit id="9e3b442b5fe9a27c98a08c95f21bc990f7ab8bc7" translate="yes" xml:space="preserve">
          <source>A global color table is written to the output stream if one of the following conditions is met:</source>
          <target state="translated">グローバルカラーテーブルは、以下の条件のいずれかが満たされた場合に、出力ストリームに書き込まれます。</target>
        </trans-unit>
        <trans-unit id="8af0722143a8cd99cd10f9bcc5d199373569cb1d" translate="yes" xml:space="preserve">
          <source>A grouping of asynchronous channels for the purpose of resource sharing</source>
          <target state="translated">リソース共有を目的とした非同期チャンネルのグループ化</target>
        </trans-unit>
        <trans-unit id="c24b47a3aa5a36d6a87410408d2c4d5a5faf5cfe" translate="yes" xml:space="preserve">
          <source>A grouping of asynchronous channels for the purpose of resource sharing.</source>
          <target state="translated">リソース共有を目的とした非同期チャンネルのグループ化。</target>
        </trans-unit>
        <trans-unit id="2be906f8d04ce14e3feb869931fc7b7f37dae596" translate="yes" xml:space="preserve">
          <source>A handle is a small icon that displays adjacent to the node which allows the user to click once to expand or collapse the node. A common interface shows a plus sign (+) for a node which can be expanded and a minus sign (-) for a node which can be collapsed. Handles are always shown for nodes below the topmost level.</source>
          <target state="translated">ハンドルとは、ノードに隣接して表示される小さなアイコンのことで、ユーザーは1回クリックするだけでノードを展開したり、折りたたんだりすることができます。一般的なインターフェイスでは、展開可能なノードにはプラス記号 (+)、折りたたむことができるノードにはマイナス記号 (-)が表示されます。ハンドルは、最上段以下のノードに対して常に表示されます。</target>
        </trans-unit>
        <trans-unit id="30a821dd5510cfba238591c999baad3298ac1b21" translate="yes" xml:space="preserve">
          <source>A handle to the standard error stream.</source>
          <target state="translated">標準エラーストリームへのハンドル。</target>
        </trans-unit>
        <trans-unit id="9928d62a2404074511ec0f299ada0040336beb28" translate="yes" xml:space="preserve">
          <source>A handle to the standard error stream. Usually, this file descriptor is not used directly, but rather via the output stream known as &lt;code&gt;System.err&lt;/code&gt;.</source>
          <target state="translated">標準エラーストリームへのハンドル。通常、このファイル記述子は直接使用されませんが、 &lt;code&gt;System.err&lt;/code&gt; と呼ばれる出力ストリームを介して使用されます。</target>
        </trans-unit>
        <trans-unit id="0a7380902243667d2be7d7f4080010cd101f173f" translate="yes" xml:space="preserve">
          <source>A handle to the standard input stream.</source>
          <target state="translated">標準入力ストリームのハンドル。</target>
        </trans-unit>
        <trans-unit id="a2838c09bf3325466fca5db9ee06eb2453bfff6d" translate="yes" xml:space="preserve">
          <source>A handle to the standard input stream. Usually, this file descriptor is not used directly, but rather via the input stream known as &lt;code&gt;System.in&lt;/code&gt;.</source>
          <target state="translated">標準入力ストリームへのハンドル。通常、このファイル記述子は直接使用されませんが、 &lt;code&gt;System.in&lt;/code&gt; と呼ばれる入力ストリームを介して使用されます。</target>
        </trans-unit>
        <trans-unit id="1978a1df9850d456ea7b0d47dceb737dbb3e418e" translate="yes" xml:space="preserve">
          <source>A handle to the standard output stream.</source>
          <target state="translated">標準出力ストリームへのハンドル。</target>
        </trans-unit>
        <trans-unit id="e8b2f584a4219597bac6f663c5cbf24cfa40cf51" translate="yes" xml:space="preserve">
          <source>A handle to the standard output stream. Usually, this file descriptor is not used directly, but rather via the output stream known as &lt;code&gt;System.out&lt;/code&gt;.</source>
          <target state="translated">標準出力ストリームへのハンドル。通常、このファイル記述子は直接使用されるのではなく、 &lt;code&gt;System.out&lt;/code&gt; として知られる出力ストリームを介して使用されます。</target>
        </trans-unit>
        <trans-unit id="4a3f24c9968701ba089eded185c35bffc8539bb2" translate="yes" xml:space="preserve">
          <source>A handler for consuming the result of an asynchronous I/O operation.</source>
          <target state="translated">非同期I/O操作の結果を消費するためのハンドラ。</target>
        </trans-unit>
        <trans-unit id="87b43b91a9388e1643e11f5fb51e2f91d80cd199" translate="yes" xml:space="preserve">
          <source>A handler for consuming the result of an asynchronous operation</source>
          <target state="translated">非同期操作の結果を消費するためのハンドラ</target>
        </trans-unit>
        <trans-unit id="2ced0ff8936b2b8ca7d93d97b9ddc96163d5006b" translate="yes" xml:space="preserve">
          <source>A handler for push promises.</source>
          <target state="translated">プッシュプロミスのハンドラ。</target>
        </trans-unit>
        <trans-unit id="3cec3929b4904998820b22c6d9b5a5aebdfb2d20" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that discards the oldest unhandled request and then retries &lt;code&gt;execute&lt;/code&gt;, unless the executor is shut down, in which case the task is discarded.</source>
          <target state="translated">executorがシャットダウンされていない限り、最も古い未処理の要求を破棄してから &lt;code&gt;execute&lt;/code&gt; を再試行する、拒否されたタスクのハンドラー。この場合、タスクは破棄されます。</target>
        </trans-unit>
        <trans-unit id="6d2b537bf297eb19ca8a1ca48bc8a94afcc52f9b" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that runs the rejected task directly in the calling thread of the &lt;code&gt;execute&lt;/code&gt; method, unless the executor has been shut down, in which case the task is discarded.</source>
          <target state="translated">executorがシャットダウンされていない限り、 &lt;code&gt;execute&lt;/code&gt; メソッドの呼び出しスレッドで拒否されたタスクを直接実行する拒否されたタスクのハンドラー。シャットダウンされている場合、タスクは破棄されます。</target>
        </trans-unit>
        <trans-unit id="12e0f3f68b2f87e89d6864a58af1905bcde37958" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that silently discards the rejected task.</source>
          <target state="translated">拒否されたタスクを黙って破棄する拒否されたタスクのためのハンドラ。</target>
        </trans-unit>
        <trans-unit id="2e10982cc89e46fcc6c511554f0ca769b7a3f337" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that throws a &lt;a href=&quot;rejectedexecutionexception&quot;&gt;&lt;code&gt;RejectedExecutionException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A handler for rejected tasks that throws a &lt;a href=&quot;rejectedexecutionexception&quot;&gt; &lt;code&gt;RejectedExecutionException&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d4927fee05dc5b481a362ec2b93edc23d0a7a2e5" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that throws a &lt;a href=&quot;rejectedexecutionexception&quot;&gt;&lt;code&gt;RejectedExecutionException&lt;/code&gt;&lt;/a&gt;. This is the default handler for &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;scheduledthreadpoolexecutor&quot;&gt;&lt;code&gt;ScheduledThreadPoolExecutor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A handler for rejected tasks that throws a &lt;a href=&quot;rejectedexecutionexception&quot;&gt; &lt;code&gt;RejectedExecutionException&lt;/code&gt; &lt;/a&gt;. This is the default handler for &lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;scheduledthreadpoolexecutor&quot;&gt; &lt;code&gt;ScheduledThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d3cce71daa234bfb9ba87e7bb64a50184f43e70f" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that throws a &lt;code&gt;RejectedExecutionException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RejectedExecutionException&lt;/code&gt; をスローする、拒否されたタスクのハンドラー。</target>
        </trans-unit>
        <trans-unit id="abc1f69c0d6ea8e98a9bd04a018ce25520ec62a5" translate="yes" xml:space="preserve">
          <source>A handler for response bodies.</source>
          <target state="translated">レスポンスボディのハンドラです。</target>
        </trans-unit>
        <trans-unit id="45a1e2095347e4e6aa94d3b5dab9a732262b2e18" translate="yes" xml:space="preserve">
          <source>A handler for response bodies. The class &lt;a href=&quot;httpresponse.bodyhandlers&quot;&gt;&lt;code&gt;BodyHandlers&lt;/code&gt;&lt;/a&gt; provides implementations of many common body handlers.</source>
          <target state="translated">A handler for response bodies. The class &lt;a href=&quot;httpresponse.bodyhandlers&quot;&gt; &lt;code&gt;BodyHandlers&lt;/code&gt; &lt;/a&gt; provides implementations of many common body handlers.</target>
        </trans-unit>
        <trans-unit id="7f8ca17fde6e602f88cd3d6a07f614961244d33f" translate="yes" xml:space="preserve">
          <source>A handler for tasks that cannot be executed by a &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;で実行できないタスクのハンドラー。</target>
        </trans-unit>
        <trans-unit id="0a91275847969127c3a82acb83d8bd92b1ca604e" translate="yes" xml:space="preserve">
          <source>A hardware or software device that plays back a MIDI &lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt; is known as a &lt;em&gt;sequencer&lt;/em&gt;.</source>
          <target state="translated">A hardware or software device that plays back a MIDI &lt;a href=&quot;sequence&quot;&gt; &lt;code&gt;sequence&lt;/code&gt; &lt;/a&gt; is known as a &lt;em&gt;sequencer&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="fbd1b68861c6ec91db40150e61ef171032c7db14" translate="yes" xml:space="preserve">
          <source>A hardware or software device that plays back a MIDI &lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt; is known as a &lt;em&gt;sequencer&lt;/em&gt;. A MIDI sequence contains lists of time-stamped MIDI data, such as might be read from a standard MIDI file. Most sequencers also provide functions for creating and editing sequences.</source>
          <target state="translated">A hardware or software device that plays back a MIDI &lt;a href=&quot;sequence&quot;&gt; &lt;code&gt;sequence&lt;/code&gt; &lt;/a&gt; is known as a &lt;em&gt;sequencer&lt;/em&gt;. A MIDI sequence contains lists of time-stamped MIDI data, such as might be read from a standard MIDI file. Most sequencers also provide functions for creating and editing sequences.</target>
        </trans-unit>
        <trans-unit id="cb43ba18f8e33a313d98fe4907d0dc669c17300e" translate="yes" xml:space="preserve">
          <source>A hardware or software device that plays back a MIDI &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is known as a &lt;em&gt;sequencer&lt;/em&gt;.</source>
          <target state="translated">MIDI &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; を再生するハードウェアまたはソフトウェアデバイスは、シーケンサーと呼ばれ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1050858df573c8b54a98d32a32a6761e7ca701a4" translate="yes" xml:space="preserve">
          <source>A hardware or software device that plays back a MIDI &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is known as a &lt;em&gt;sequencer&lt;/em&gt;. A MIDI sequence contains lists of time-stamped MIDI data, such as might be read from a standard MIDI file. Most sequencers also provide functions for creating and editing sequences.</source>
          <target state="translated">MIDI &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; を再生するハードウェアまたはソフトウェアデバイスは、シーケンサーと呼ばれ&lt;em&gt;ます&lt;/em&gt;。MIDIシーケンスには、標準のMIDIファイルから読み取られるような、タイムスタンプ付きのMIDIデータのリストが含まれています。ほとんどのシーケンサーには、シーケンスを作成および編集するための関数も用意されています。</target>
        </trans-unit>
        <trans-unit id="3a7edc5100c7524404899934b687c1b0263088ad" translate="yes" xml:space="preserve">
          <source>A hash code</source>
          <target state="translated">ハッシュコード</target>
        </trans-unit>
        <trans-unit id="8f0f5eba602ce509dcca3db786c22c74bdedbf76" translate="yes" xml:space="preserve">
          <source>A hash code based on the executable's hash code.</source>
          <target state="translated">実行ファイルのハッシュコードに基づくハッシュコード。</target>
        </trans-unit>
        <trans-unit id="6422685e686802184d02914f59e5e03e37e4b920" translate="yes" xml:space="preserve">
          <source>A hash code for this &lt;code&gt;WeekFields&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;WeekFields&lt;/code&gt; のハッシュコード。</target>
        </trans-unit>
        <trans-unit id="082377c5769ccaeb74c377e922e220bd74c1eb8b" translate="yes" xml:space="preserve">
          <source>A hash code for this DecimalStyle.</source>
          <target state="translated">このDecimalStyleのハッシュコード。</target>
        </trans-unit>
        <trans-unit id="1a0a2cbf33b6fc708b1e71a5607d7568aba4cd9d" translate="yes" xml:space="preserve">
          <source>A hash code for this abstract pathname</source>
          <target state="translated">この抽象パス名のハッシュコード</target>
        </trans-unit>
        <trans-unit id="5e74913296ef0affb84d3a88b703ae21e89763f7" translate="yes" xml:space="preserve">
          <source>A hash code for this chronology.</source>
          <target state="translated">この年表のハッシュコード。</target>
        </trans-unit>
        <trans-unit id="56ecf462977972b604f5d42c94c6433b5d120cb4" translate="yes" xml:space="preserve">
          <source>A hash code for this clock.</source>
          <target state="translated">このクロックのハッシュコード。</target>
        </trans-unit>
        <trans-unit id="6d733f15fb333cbf3f6de70fb60920b8481a2562" translate="yes" xml:space="preserve">
          <source>A hash code for this date-time.</source>
          <target state="translated">この日時のハッシュコード。</target>
        </trans-unit>
        <trans-unit id="cd393e22a9982f36df6d1e49fdc513be03d5db18" translate="yes" xml:space="preserve">
          <source>A hash code for this date.</source>
          <target state="translated">この日付のハッシュコード。</target>
        </trans-unit>
        <trans-unit id="75aa073250f910cbe612992bee56c47830c125f3" translate="yes" xml:space="preserve">
          <source>A hash code for this duration.</source>
          <target state="translated">この期間のハッシュコード。</target>
        </trans-unit>
        <trans-unit id="ef6b3720cb101c6523e14b342faf358533e784b6" translate="yes" xml:space="preserve">
          <source>A hash code for this month-day.</source>
          <target state="translated">この月の日のハッシュコード</target>
        </trans-unit>
        <trans-unit id="9d286da27efe86be8a56c732ea14a6d1d4c2dd17" translate="yes" xml:space="preserve">
          <source>A hash code for this offset.</source>
          <target state="translated">このオフセットのハッシュコード。</target>
        </trans-unit>
        <trans-unit id="338c5ee14af4c4f5108e22b8984af253203eb866" translate="yes" xml:space="preserve">
          <source>A hash code for this period.</source>
          <target state="translated">この期間のハッシュコード。</target>
        </trans-unit>
        <trans-unit id="d1ca372319e5779208c68834db7457509cffd5e9" translate="yes" xml:space="preserve">
          <source>A hash code for this range.</source>
          <target state="translated">この範囲のハッシュコード。</target>
        </trans-unit>
        <trans-unit id="def95cbd7ecd69e1cb41c6e7fe9e142e1b6e12b9" translate="yes" xml:space="preserve">
          <source>A hash code for this time-zone ID.</source>
          <target state="translated">このタイムゾーンIDのハッシュコード。</target>
        </trans-unit>
        <trans-unit id="21b0c4b6c9ca1f20ee357c40a64a32937d745822" translate="yes" xml:space="preserve">
          <source>A hash code for this time.</source>
          <target state="translated">今回のハッシュコード。</target>
        </trans-unit>
        <trans-unit id="8fc40307541ad29754e7c8cc76d8cdac1da4dab9" translate="yes" xml:space="preserve">
          <source>A hash code for this year-month.</source>
          <target state="translated">今年の月のハッシュコードです。</target>
        </trans-unit>
        <trans-unit id="0f0ed6aa7948b36fe936b86cc68d0c6dc3a1c7b0" translate="yes" xml:space="preserve">
          <source>A hash code for this year.</source>
          <target state="translated">今年のハッシュコード。</target>
        </trans-unit>
        <trans-unit id="c7260df544fa8e975c1248b223e104cf612fdcea" translate="yes" xml:space="preserve">
          <source>A hash code of this reference as an int.</source>
          <target state="translated">この参照のハッシュコードをintとして返します。</target>
        </trans-unit>
        <trans-unit id="c038c38ee7b79b8905fbe54cde0df6b4f273532e" translate="yes" xml:space="preserve">
          <source>A hash code value for this &lt;code&gt;UUID&lt;/code&gt;</source>
          <target state="translated">この &lt;code&gt;UUID&lt;/code&gt; のハッシュコード値</target>
        </trans-unit>
        <trans-unit id="85283c8b1e2ec2edadf924f01b3aaeb9490f0d58" translate="yes" xml:space="preserve">
          <source>A hash code value for this object.</source>
          <target state="translated">このオブジェクトのハッシュコード値。</target>
        </trans-unit>
        <trans-unit id="5e119773bedd6f34e3f4a604ececbbc72f9f1cf7" translate="yes" xml:space="preserve">
          <source>A hash table supporting full concurrency of retrievals and high expected concurrency for updates.</source>
          <target state="translated">検索の完全な同時実行性と更新の期待される高い同時実行性をサポートするハッシュテーブル。</target>
        </trans-unit>
        <trans-unit id="7be080c5693a5494d8a81110a7c2c060ad2b0789" translate="yes" xml:space="preserve">
          <source>A hash table supporting full concurrency of retrievals and high expected concurrency for updates. This class obeys the same functional specification as &lt;a href=&quot;../hashtable&quot;&gt;&lt;code&gt;Hashtable&lt;/code&gt;&lt;/a&gt;, and includes versions of methods corresponding to each method of &lt;code&gt;Hashtable&lt;/code&gt;. However, even though all operations are thread-safe, retrieval operations do &lt;em&gt;not&lt;/em&gt; entail locking, and there is &lt;em&gt;not&lt;/em&gt; any support for locking the entire table in a way that prevents all access. This class is fully interoperable with &lt;code&gt;Hashtable&lt;/code&gt; in programs that rely on its thread safety but not on its synchronization details.</source>
          <target state="translated">取得の完全な同時実行性と更新の予想される高い同時実行性をサポートするハッシュテーブル。このクラスは、同じ機能仕様に従う&lt;a href=&quot;../hashtable&quot;&gt; &lt;code&gt;Hashtable&lt;/code&gt; &lt;/a&gt;、及び各方法に対応する方法のバージョン含む &lt;code&gt;Hashtable&lt;/code&gt; 。ただし、すべての操作がスレッドセーフであっても、検索操作はロックを必要とせ&lt;em&gt;ず&lt;/em&gt;、すべてのアクセスを防ぐ方法でテーブル全体をロックすることはサポートされて&lt;em&gt;いません&lt;/em&gt;。このクラスは、スレッドの安全性に依存するが同期の詳細には依存しないプログラムで &lt;code&gt;Hashtable&lt;/code&gt; と完全に相互運用できます。</target>
        </trans-unit>
        <trans-unit id="f2ac80bdd78fba7e815e2307473834134c0b8301" translate="yes" xml:space="preserve">
          <source>A hash-code value for this URI</source>
          <target state="translated">このURIのハッシュコード値</target>
        </trans-unit>
        <trans-unit id="6f786cf19e1bfad99116b7eea0c7c4d01a129f5e" translate="yes" xml:space="preserve">
          <source>A hashcode value for this object.</source>
          <target state="translated">このオブジェクトのハッシュコード値。</target>
        </trans-unit>
        <trans-unit id="0c92d5878bd4109278901b64a7898c9b219f4450" translate="yes" xml:space="preserve">
          <source>A helper interface to run the nested event loop.</source>
          <target state="translated">入れ子になったイベントループを実行するためのヘルパーインターフェイス。</target>
        </trans-unit>
        <trans-unit id="531037da01ce93fad322a6e90507cf29968387ee" translate="yes" xml:space="preserve">
          <source>A hexadecimal digit: &lt;code&gt;[0-9a-fA-F]&lt;/code&gt;</source>
          <target state="translated">16進数： &lt;code&gt;[0-9a-fA-F]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8019d565ee6672068a88a557bf3259f61e9f6e2e" translate="yes" xml:space="preserve">
          <source>A hexadecimal digit: &lt;code&gt;[\p{gc=Nd}\p{IsHex_Digit}]&lt;/code&gt;</source>
          <target state="translated">16進数： &lt;code&gt;[\p{gc=Nd}\p{IsHex_Digit}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0eaf5113462f5f09a75427d07e5000b2557a560e" translate="yes" xml:space="preserve">
          <source>A hierarchical URI is considered to be less than an opaque URI with an identical scheme.</source>
          <target state="translated">階層的なURIは、同一のスキームを持つ不透明なURIよりも少ないと考えられる。</target>
        </trans-unit>
        <trans-unit id="3f15b0dd6e68706f3cc8aca6a2b0b354d9959881" translate="yes" xml:space="preserve">
          <source>A hierarchical URI is subject to further parsing according to the syntax</source>
          <target state="translated">階層型URIは構文に従ってさらに解析されます。</target>
        </trans-unit>
        <trans-unit id="1b72242d36dd9c1a1bbcdcd871a57488b4e19272" translate="yes" xml:space="preserve">
          <source>A higher value (eg 200) corresponds to lower contrast text when displaying dark text on a light background.</source>
          <target state="translated">値が大きいほど(例:200)、明るい背景に暗いテキストを表示する場合、コントラストの低いテキストに対応します。</target>
        </trans-unit>
        <trans-unit id="0d5419f9f8244ee00b27805e52cb8a6861a1f7c0" translate="yes" xml:space="preserve">
          <source>A higher-quality spliterator will provide balanced and known-size splits, accurate sizing information, and a number of other &lt;a href=&quot;../spliterator#characteristics()&quot;&gt;&lt;code&gt;characteristics&lt;/code&gt;&lt;/a&gt; of the spliterator or data that can be used by implementations to optimize execution.</source>
          <target state="translated">A higher-quality spliterator will provide balanced and known-size splits, accurate sizing information, and a number of other &lt;a href=&quot;../spliterator#characteristics()&quot;&gt; &lt;code&gt;characteristics&lt;/code&gt; &lt;/a&gt; of the spliterator or data that can be used by implementations to optimize execution.</target>
        </trans-unit>
        <trans-unit id="3a70b6cdbfa6b9ebe9df52783e9c0b40b7945da0" translate="yes" xml:space="preserve">
          <source>A higher-quality spliterator will provide balanced and known-size splits, accurate sizing information, and a number of other &lt;a href=&quot;../spliterator#characteristics--&quot;&gt;&lt;code&gt;characteristics&lt;/code&gt;&lt;/a&gt; of the spliterator or data that can be used by implementations to optimize execution.</source>
          <target state="translated">より高品質のスプリッターは、バランスのとれた既知のサイズのスプリット、正確なサイジング情報、および実行を最適化するために実装で使用できるスプリッターまたはデータの他の多くの&lt;a href=&quot;../spliterator#characteristics--&quot;&gt; &lt;code&gt;characteristics&lt;/code&gt; &lt;/a&gt;を提供します。</target>
        </trans-unit>
        <trans-unit id="e3b3c45bec3819031bfb3beac1e4cf8a85411829" translate="yes" xml:space="preserve">
          <source>A highlight.</source>
          <target state="translated">ハイライトです。</target>
        </trans-unit>
        <trans-unit id="1f73842d8304b98d46d95ef4a1c93bc4aeac0030" translate="yes" xml:space="preserve">
          <source>A hint to the scheduler that the current thread is willing to yield its current use of a processor.</source>
          <target state="translated">スケジューラへのヒントは、現在のスレッドが現在のプロセッサの使用を放棄しても構わないということである。</target>
        </trans-unit>
        <trans-unit id="1d2af2f2ec5660f7616d7e59e084554df9083acf" translate="yes" xml:space="preserve">
          <source>A hint to the scheduler that the current thread is willing to yield its current use of a processor. The scheduler is free to ignore this hint.</source>
          <target state="translated">現在のスレッドが現在のプロセッサを使用していることをスケジューラに伝えるヒント。スケジューラはこのヒントを無視することができます。</target>
        </trans-unit>
        <trans-unit id="2e25d8e3fd6b9427c3d026104f6c339e625a8770" translate="yes" xml:space="preserve">
          <source>A horizontal line is drawn dividing the children of the root node.</source>
          <target state="translated">ルートノードの子ノードを分割する水平線が引かれます。</target>
        </trans-unit>
        <trans-unit id="c154a87c0971a077f5cd09333efec30ff1904e75" translate="yes" xml:space="preserve">
          <source>A horizontal offset to be applied to the subsampling grid before subsampling.</source>
          <target state="translated">サブサンプリング前にサブサンプリンググリッドに適用される水平オフセット。</target>
        </trans-unit>
        <trans-unit id="dce262eaf05a51984255debdf4e961963652fdf2" translate="yes" xml:space="preserve">
          <source>A horizontal offset to be applied to the subsampling grid before subsampling. The first pixel to be used will be offset this amount from the origin of the region, or of the image if no region is specified.</source>
          <target state="translated">サブサンプリング前にサブサンプリンググリッドに適用される水平オフセット。最初に使われるピクセルは,その領域の原点から,領域が指定されていない場合は画像の原点から,このオフセット量だけオフセットされます.</target>
        </trans-unit>
        <trans-unit id="cae300f90785fca5b33cd05f0e37e347f3bdb295" translate="yes" xml:space="preserve">
          <source>A horizontal whitespace character: &lt;code&gt;[ \t\xA0\u1680\u180e\u2000-\u200a\u202f\u205f\u3000]&lt;/code&gt;</source>
          <target state="translated">水平空白文字： &lt;code&gt;[ \t\xA0\u1680\u180e\u2000-\u200a\u202f\u205f\u3000]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2092bd5cb7b434a04d1edfe6aba1977fb241b996" translate="yes" xml:space="preserve">
          <source>A host isn't in a domain (RFC 2965 sec. 3.3.2) if:</source>
          <target state="translated">ホストがドメイン内にいない(RFC 2965 sec.3.3.2)場合。</target>
        </trans-unit>
        <trans-unit id="db7e379eb5e0f3f3d4c5030d527a0a8f61a34df4" translate="yes" xml:space="preserve">
          <source>A human readable description of the file.</source>
          <target state="translated">ファイルの人間が読める説明。</target>
        </trans-unit>
        <trans-unit id="cdc37c4166ea9c8a2930ce69109a712e2add43c0" translate="yes" xml:space="preserve">
          <source>A human readable description of the file. For example, a file named</source>
          <target state="translated">ファイルの人間が読める説明。例えば</target>
        </trans-unit>
        <trans-unit id="05275ceba984e39524d2b0df962c6b901d482052" translate="yes" xml:space="preserve">
          <source>A human readable description of the type of the file.</source>
          <target state="translated">ファイルの種類を人間が読めるように記述したもの。</target>
        </trans-unit>
        <trans-unit id="bf5a6fdb997f26851858a2a7e49351bab13266e2" translate="yes" xml:space="preserve">
          <source>A human readable description of the type of the file. For example, a &lt;code&gt;jpg&lt;/code&gt; file might have a type description of: &quot;A JPEG Compressed Image File&quot;</source>
          <target state="translated">A human readable description of the type of the file. For example, a &lt;code&gt;jpg&lt;/code&gt; file might have a type description of: &quot;A JPEG Compressed Image File&quot;</target>
        </trans-unit>
        <trans-unit id="d6381a21b33e7b13b7e539d9fd273f492eae9e53" translate="yes" xml:space="preserve">
          <source>A hypertext anchor.</source>
          <target state="translated">ハイパーテキストのアンカー。</target>
        </trans-unit>
        <trans-unit id="07aa9b38a4ede3c83aa047636c3e1f374ce196f4" translate="yes" xml:space="preserve">
          <source>A instance of &lt;code&gt;CookieManager&lt;/code&gt; will have cookie policy ACCEPT_ORIGINAL_SERVER by default. Users always can call this method to set another cookie policy.</source>
          <target state="translated">&lt;code&gt;CookieManager&lt;/code&gt; のインスタンスには、デフォルトでCookieポリシーACCEPT_ORIGINAL_SERVERがあります。ユーザーはいつでもこのメソッドを呼び出して、別のCookieポリシーを設定できます。</target>
        </trans-unit>
        <trans-unit id="ed93d745a111d391d7a2f46cbf50e03f102e5d8b" translate="yes" xml:space="preserve">
          <source>A int buffer is not comparable to any other type of object.</source>
          <target state="translated">int バッファは他のタイプのオブジェクトとは比較になりません。</target>
        </trans-unit>
        <trans-unit id="a7a5c5dcd5045f34fd77586929f7a76518869889" translate="yes" xml:space="preserve">
          <source>A int buffer is not equal to any other type of object.</source>
          <target state="translated">int バッファは、他のどのタイプのオブジェクトとも同じではありません。</target>
        </trans-unit>
        <trans-unit id="3b8db826daaeb4da111cdd530cd07bbeacba70f5" translate="yes" xml:space="preserve">
          <source>A is a HDN string and has the form NB, where N is a non-empty name string, B has the form .B', and B' is a HDN string. (So, x.y.com domain-matches .Y.com but not Y.com.)</source>
          <target state="translated">AはHDN文字列で、NBという形式を持ち、ここでNは空でない名前文字列で、Bは.B'という形式を持ち、B'はHDN文字列である。(つまり、x.y.comは.Y.comとドメインマッチしますが、Y.comとはマッチしません)。</target>
        </trans-unit>
        <trans-unit id="c1d25b7429dcbb1987d6223c0fd9a5ab8b4f4d68" translate="yes" xml:space="preserve">
          <source>A java.awt.Component that will allow a human to directly edit the current property value. May be null if this is not supported.</source>
          <target state="translated">人間が現在のプロパティ値を直接編集できるようにするjava.awt.Component。これがサポートされていない場合は、nullにすることができます。</target>
        </trans-unit>
        <trans-unit id="f8479b6e12a50290a4467817e2ae521cd0602642" translate="yes" xml:space="preserve">
          <source>A key for decrypting.</source>
          <target state="translated">復号化するための鍵です。</target>
        </trans-unit>
        <trans-unit id="5f2f2b91c9987065c527424b56bb25a319710c59" translate="yes" xml:space="preserve">
          <source>A key for encrypting.</source>
          <target state="translated">暗号化するための鍵。</target>
        </trans-unit>
        <trans-unit id="aeb7761ffdaca83c367d0f28bdffb8e9a53f6697" translate="yes" xml:space="preserve">
          <source>A key for signing.</source>
          <target state="translated">署名のための鍵です。</target>
        </trans-unit>
        <trans-unit id="ba41fbf59d1b71ab91a38baf00516e42096254bd" translate="yes" xml:space="preserve">
          <source>A key for verifying.</source>
          <target state="translated">検証のための鍵。</target>
        </trans-unit>
        <trans-unit id="7b3c012683f968fa1daa96c09c44348b3118cee4" translate="yes" xml:space="preserve">
          <source>A key indicating the shape should be filled.</source>
          <target state="translated">塗りつぶすべき形状を示すキーです。</target>
        </trans-unit>
        <trans-unit id="d4c1bb24115fe4e1a99161dae231b08fd3bac417" translate="yes" xml:space="preserve">
          <source>A key indicating the shape should be stroked with a 1-pixel wide stroke.</source>
          <target state="translated">形状を示すキーは、1ピクセル幅のストロークでストロークする必要があります。</target>
        </trans-unit>
        <trans-unit id="e2f512559524a09759b68d44fb68ab035c63ee9c" translate="yes" xml:space="preserve">
          <source>A key is added to a selector's key set as a side effect of registering a channel via the channel's &lt;a href=&quot;selectablechannel#register(java.nio.channels.Selector,int)&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method. Cancelled keys are removed from the key set during selection operations. The key set itself is not directly modifiable.</source>
          <target state="translated">チャンネルの&lt;a href=&quot;selectablechannel#register(java.nio.channels.Selector,int)&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt;メソッドを介してチャンネルを登録する副作用として、セレクターのキーセットにキーが追加されます。キャンセルされたキーは、選択操作中にキーセットから削除されます。キーセット自体は直接変更できません。</target>
        </trans-unit>
        <trans-unit id="dc935686fe4c4bf5294565416f415b4c8bfe92e9" translate="yes" xml:space="preserve">
          <source>A key is added to a selector's key set as a side effect of registering a channel via the channel's &lt;a href=&quot;selectablechannel#register-java.nio.channels.Selector-int-&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method. Cancelled keys are removed from the key set during selection operations. The key set itself is not directly modifiable.</source>
          <target state="translated">チャネルの&lt;a href=&quot;selectablechannel#register-java.nio.channels.Selector-int-&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt;メソッドを介してチャネルを登録する副作用として、キーがセレクターのキーセットに追加されます。キャンセルされたキーは、選択操作中にキーセットから削除されます。キーセット自体を直接変更することはできません。</target>
        </trans-unit>
        <trans-unit id="11bba173b0c2ffe68b976c77efcdac1edeb723a9" translate="yes" xml:space="preserve">
          <source>A key is added to its selector's cancelled-key set when it is cancelled, whether by closing its channel or by invoking its &lt;a href=&quot;selectionkey#cancel()&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method. Cancelling a key will cause its channel to be deregistered during the next selection operation, at which time the key will be removed from all of the selector's key sets.</source>
          <target state="translated">キーは、チャネルを閉じるか、&lt;a href=&quot;selectionkey#cancel()&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによってキャンセルされると、セレクターのキャンセルされたキーセットに追加されます。キーをキャンセルすると、次の選択操作中にそのチャネルの登録が解除され、その時点でキーはセレクターのすべてのキーセットから削除されます。</target>
        </trans-unit>
        <trans-unit id="964050a9069a956131820dda0c3b3fdb5dec31af" translate="yes" xml:space="preserve">
          <source>A key is added to its selector's cancelled-key set when it is cancelled, whether by closing its channel or by invoking its &lt;a href=&quot;selectionkey#cancel--&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method. Cancelling a key will cause its channel to be deregistered during the next selection operation, at which time the key will removed from all of the selector's key sets.</source>
          <target state="translated">チャネルを閉じるか、&lt;a href=&quot;selectionkey#cancel--&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すかによって、キャンセルされると、キーはセレクタのキャンセルされたキーセットに追加されます。キーをキャンセルすると、次の選択操作中にそのチャネルの登録が解除されます。その時点で、キーはセレクターのすべてのキーセットから削除されます。</target>
        </trans-unit>
        <trans-unit id="c5c83f6d5654385f02695581674b4358677f2c26" translate="yes" xml:space="preserve">
          <source>A key is valid upon creation and remains so until it is cancelled, its channel is closed, or its selector is closed.</source>
          <target state="translated">キーは作成時に有効で、キャンセルされるか、チャンネルが閉じられるか、セレクタが閉じられるまで有効です。</target>
        </trans-unit>
        <trans-unit id="3567b234d34db2898e97ad89a7423f7ad8bb314d" translate="yes" xml:space="preserve">
          <source>A key may be specified in an algorithm-specific way, or in an algorithm-independent encoding format (such as ASN.1). For example, a DSA private key may be specified by its components &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;p&lt;/code&gt;, &lt;code&gt;q&lt;/code&gt;, and &lt;code&gt;g&lt;/code&gt; (see &lt;a href=&quot;dsaprivatekeyspec&quot;&gt;&lt;code&gt;DSAPrivateKeySpec&lt;/code&gt;&lt;/a&gt;), or it may be specified using its DER encoding (see &lt;a href=&quot;pkcs8encodedkeyspec&quot;&gt;&lt;code&gt;PKCS8EncodedKeySpec&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">鍵は、アルゴリズム固有の方法で、またはアルゴリズムに依存しないエンコード形式（ASN.1など）で指定できます。たとえば、DSA秘密鍵は、そのコンポーネント &lt;code&gt;x&lt;/code&gt; 、 &lt;code&gt;p&lt;/code&gt; 、 &lt;code&gt;q&lt;/code&gt; 、および &lt;code&gt;g&lt;/code&gt; （&lt;a href=&quot;dsaprivatekeyspec&quot;&gt; &lt;code&gt;DSAPrivateKeySpec&lt;/code&gt; を&lt;/a&gt;参照）によって指定することも、DERエンコーディング（&lt;a href=&quot;pkcs8encodedkeyspec&quot;&gt; &lt;code&gt;PKCS8EncodedKeySpec&lt;/code&gt; を&lt;/a&gt;参照）を使用して指定することもできます。</target>
        </trans-unit>
        <trans-unit id="dd53af8d943f80628e365177149bf1813ced8fbe" translate="yes" xml:space="preserve">
          <source>A key part of the date-time problem space is adjusting a date to a new, related value, such as the &quot;last day of the month&quot;, or &quot;next Wednesday&quot;. These are modeled as functions that adjust a base date-time. The functions implement &lt;a href=&quot;temporaladjuster&quot;&gt;&lt;code&gt;TemporalAdjuster&lt;/code&gt;&lt;/a&gt; and operate on &lt;code&gt;Temporal&lt;/code&gt;. A set of common functions are provided in &lt;a href=&quot;temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. For example, to find the first occurrence of a day-of-week after a given date, use &lt;a href=&quot;temporaladjusters#next(java.time.DayOfWeek)&quot;&gt;&lt;code&gt;TemporalAdjusters.next(DayOfWeek)&lt;/code&gt;&lt;/a&gt;, such as &lt;code&gt;date.with(next(MONDAY))&lt;/code&gt;. Applications can also define adjusters by implementing &lt;a href=&quot;temporaladjuster&quot;&gt;&lt;code&gt;TemporalAdjuster&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">日時問題スペースの重要な部分は、「月末日」や「次の水曜日」など、新しい関連する値に日付を調整することです。これらは、基準日時を調整する関数としてモデル化されています。機能が実装&lt;a href=&quot;temporaladjuster&quot;&gt; &lt;code&gt;TemporalAdjuster&lt;/code&gt; を&lt;/a&gt;して上で動作させる &lt;code&gt;Temporal&lt;/code&gt; 。一連の一般的な関数は、&lt;a href=&quot;temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; で&lt;/a&gt;提供されます。たとえば、特定の日付の後の曜日の最初の出現を見つけるには、 &lt;code&gt;date.with(next(MONDAY))&lt;/code&gt; などの&lt;a href=&quot;temporaladjusters#next(java.time.DayOfWeek)&quot;&gt; &lt;code&gt;TemporalAdjusters.next(DayOfWeek)&lt;/code&gt; を&lt;/a&gt;使用します。アプリケーションは、&lt;a href=&quot;temporaladjuster&quot;&gt; &lt;code&gt;TemporalAdjuster&lt;/code&gt; &lt;/a&gt;を実装することでアジャスターを定義することもできます。</target>
        </trans-unit>
        <trans-unit id="1f46b54c144fbfb71c028bbb373ce3b3ddfb0cb9" translate="yes" xml:space="preserve">
          <source>A key part of the date-time problem space is adjusting a date to a new, related value, such as the &quot;last day of the month&quot;, or &quot;next Wednesday&quot;. These are modeled as functions that adjust a base date-time. The functions implement &lt;a href=&quot;temporaladjuster&quot;&gt;&lt;code&gt;TemporalAdjuster&lt;/code&gt;&lt;/a&gt; and operate on &lt;code&gt;Temporal&lt;/code&gt;. A set of common functions are provided in &lt;a href=&quot;temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. For example, to find the first occurrence of a day-of-week after a given date, use &lt;a href=&quot;temporaladjusters#next-java.time.DayOfWeek-&quot;&gt;&lt;code&gt;TemporalAdjusters.next(DayOfWeek)&lt;/code&gt;&lt;/a&gt;, such as &lt;code&gt;date.with(next(MONDAY))&lt;/code&gt;. Applications can also define adjusters by implementing &lt;a href=&quot;temporaladjuster&quot;&gt;&lt;code&gt;TemporalAdjuster&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">日時問題スペースの重要な部分は、「月の最後の日」や「次の水曜日」などの新しい関連する値に日付を調整することです。これらは、基本的な日時を調整する関数としてモデル化されています。機能が実装&lt;a href=&quot;temporaladjuster&quot;&gt; &lt;code&gt;TemporalAdjuster&lt;/code&gt; を&lt;/a&gt;して上で動作させる &lt;code&gt;Temporal&lt;/code&gt; 。&lt;a href=&quot;temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; に&lt;/a&gt;は、一連の共通関数が用意されています。たとえば、特定の日付の後の最初の曜日を見つけるには、 &lt;code&gt;date.with(next(MONDAY))&lt;/code&gt; などの&lt;a href=&quot;temporaladjusters#next-java.time.DayOfWeek-&quot;&gt; &lt;code&gt;TemporalAdjusters.next(DayOfWeek)&lt;/code&gt; を&lt;/a&gt;使用します。アプリケーションは&lt;a href=&quot;temporaladjuster&quot;&gt; &lt;code&gt;TemporalAdjuster&lt;/code&gt; &lt;/a&gt;を実装することでアジャスターを定義することもできます。</target>
        </trans-unit>
        <trans-unit id="bd8a761e520198c1cdaa54b4d4372dc66292abc6" translate="yes" xml:space="preserve">
          <source>A key property list as defined below.</source>
          <target state="translated">以下に定義されているキー・プロパティ・リスト。</target>
        </trans-unit>
        <trans-unit id="f68a1b3c961bf3188f44addd02d18988aa1e3f1b" translate="yes" xml:space="preserve">
          <source>A key property list written as a String is a comma-separated list of elements. Each element is either an asterisk or a key property. A key property consists of a key, an equals (&lt;code&gt;=&lt;/code&gt;), and the associated value.</source>
          <target state="translated">文字列として記述されたキープロパティリストは、要素のコンマ区切りのリストです。各要素はアスタリスクまたはキープロパティです。キープロパティは、キー、等号（ &lt;code&gt;=&lt;/code&gt; ）、および関連する値で構成されます。</target>
        </trans-unit>
        <trans-unit id="c0586c9ec6232590f575482bb2c80c36ba5f7423" translate="yes" xml:space="preserve">
          <source>A key representing the registration of this channel with the given selector</source>
          <target state="translated">このチャンネルを指定されたセレクタに登録するためのキー。</target>
        </trans-unit>
        <trans-unit id="ecefc7965907056694e7481d75b869b29f450431" translate="yes" xml:space="preserve">
          <source>A key representing the registration of this object with the given watch service</source>
          <target state="translated">与えられたウォッチサービスへのこのオブジェクトの登録を表すキー</target>
        </trans-unit>
        <trans-unit id="f42a40d645e94595a63ed0059561f728071e39f5" translate="yes" xml:space="preserve">
          <source>A key specification is a transparent representation of the key material that constitutes a key. A key may be specified in an algorithm-specific way, or in an algorithm-independent encoding format (such as ASN.1). This package contains key specifications for DSA public and private keys, RSA public and private keys, PKCS #8 private keys in DER-encoded format, and X.509 public and private keys in DER-encoded format.</source>
          <target state="translated">鍵の指定は、鍵を構成する鍵材料を透過的に表現したものである。鍵は、アルゴリズム固有の方法で指定することも、アルゴリズムに依存しないエンコーディング形式 (ASN.1 など)で指定することもできる。本パッケージには、DSA 公開鍵および秘密鍵、RSA 公開鍵および秘密鍵、DER エンコード形式の PKCS #8 秘密鍵、DER エンコード形式の X.509 公開鍵および秘密鍵の鍵仕様が含まれる。</target>
        </trans-unit>
        <trans-unit id="e0f3d8b0a4094e0a7b104df6160697464e59ec13" translate="yes" xml:space="preserve">
          <source>A key specification is a transparent representation of the key material that constitutes a key. A key may be specified in an algorithm-specific way, or in an algorithm-independent encoding format (such as ASN.1). This package contains key specifications for Diffie-Hellman public and private keys, as well as key specifications for DES, Triple DES, and PBE secret keys.</source>
          <target state="translated">鍵の指定は、鍵を構成する鍵材料を透過的に表現したものである。鍵はアルゴリズム固有の方法で指定されることもあれば、 アルゴリズムに依存しないエンコーディング形式 (ASN.1 など)で指定されることもあります。本パッケージには、Diffie-Hellman 公開鍵および秘密鍵の鍵仕様、DES、Triple DES、PBE 秘密鍵の鍵仕様が含まれる。</target>
        </trans-unit>
        <trans-unit id="0aacfcfb6bf4889f12230f05b825f1f2e0d7537b" translate="yes" xml:space="preserve">
          <source>A key use case for calculations on a date in an arbitrary calendar system is producing a month-by-month calendar for display and user interaction. Again, this is a UI issue, and use of this interface solely within a few methods of the UI layer may be justified.</source>
          <target state="translated">任意のカレンダーシステムにおける日付の計算の主要な使用例は、表示とユーザーのインタラクションのための月ごとのカレンダーを作成することです。繰り返しになりますが、これはUIの問題であり、このインターフェイスをUIレイヤーのいくつかのメソッド内でのみ使用することは正当化されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="c34e01f46090c7cf338fb81da1087990aca8505e" translate="yes" xml:space="preserve">
          <source>A kit can safely store editing state as an instance of the kit will be dedicated to a text component. New kits will normally be created by cloning a prototype kit. The kit will have its &lt;code&gt;setComponent&lt;/code&gt; method called to establish its relationship with a JTextComponent.</source>
          <target state="translated">キットのインスタンスはテキストコンポーネント専用になるため、キットは編集状態を安全に保存できます。新しいキットは通常、プロトタイプキットのクローンを作成することによって作成されます。キットには、JTextComponentとの関係を確立するために呼び出される &lt;code&gt;setComponent&lt;/code&gt; メソッドがあります。</target>
        </trans-unit>
        <trans-unit id="7fcb15f00291a40cab9dcee79f5d952bd5eac29d" translate="yes" xml:space="preserve">
          <source>A label is an individual part of a domain name. The original ToASCII operation, as defined in RFC 3490, only operates on a single label. This method can handle both label and entire domain name, by assuming that labels in a domain name are always separated by dots. The following characters are recognized as dots: \u002E (full stop), \u3002 (ideographic full stop), \uFF0E (fullwidth full stop), and \uFF61 (halfwidth ideographic full stop). if dots are used as label separators, this method also changes all of them to \u002E (full stop) in output translated string.</source>
          <target state="translated">ラベルはドメイン名の個々の部分である。RFC 3490で定義されているオリジナルのToASCII操作は、単一のラベルに対してのみ操作される。この方法は、ドメイン名のラベルは常にドットで区切られていると仮定することで、ラベルとドメイン名全体の両方を扱うことができます。以下の文字がドットとして認識される。\dotsがラベルセパレータとして使用された場合、この方法は、出力された翻訳文字列の中で、それらの全てを「\u002E」(full stop)に変更する。</target>
        </trans-unit>
        <trans-unit id="123da693824e9381ac6679a81d6dc167f1012487" translate="yes" xml:space="preserve">
          <source>A label is an individual part of a domain name. The original ToUnicode operation, as defined in RFC 3490, only operates on a single label. This method can handle both label and entire domain name, by assuming that labels in a domain name are always separated by dots. The following characters are recognized as dots: \u002E (full stop), \u3002 (ideographic full stop), \uFF0E (fullwidth full stop), and \uFF61 (halfwidth ideographic full stop).</source>
          <target state="translated">ラベルはドメイン名の個々の部分である。RFC 3490で定義されているオリジナルのToUnicode操作は、単一のラベルに対してのみ操作されます。このメソッドは、ドメイン名のラベルは常にドットで区切られていると仮定することで、ラベルとドメイン名全体の両方を扱うことができます。以下の文字がドットとして認識される。\u002E(full stop)、\u3002(ideographic full stop)、\uFF0E(fullwidth full stop)、および\uFF61(alfwidth ideographic full stop)である。</target>
        </trans-unit>
        <trans-unit id="5057ac95e11321f63baa2115c1f6ba3069ef33ed" translate="yes" xml:space="preserve">
          <source>A label's leading and trailing edge are determined from the value of its &lt;a href=&quot;../../java/awt/componentorientation&quot;&gt;&lt;code&gt;ComponentOrientation&lt;/code&gt;&lt;/a&gt; property. At present, the default ComponentOrientation setting maps the leading edge to left and the trailing edge to right.</source>
          <target state="translated">ラベルの前縁と後縁は、その&lt;a href=&quot;../../java/awt/componentorientation&quot;&gt; &lt;code&gt;ComponentOrientation&lt;/code&gt; &lt;/a&gt;プロパティの値から決定されます。現在、デフォルトのComponentOrientation設定は、前縁を左に、後縁を右にマップします。</target>
        </trans-unit>
        <trans-unit id="253218e6f649ceefe10cad50f21d102120bfa077" translate="yes" xml:space="preserve">
          <source>A later token has already been processed.</source>
          <target state="translated">後のトークンはすでに処理されています。</target>
        </trans-unit>
        <trans-unit id="677b023fe7ec6362779ee6d3c8675d6129a3afd3" translate="yes" xml:space="preserve">
          <source>A later token has already been processed. This is a fatal error code that may occur during context establishment. It is not used to indicate supplementary status values. The MessageProp object is used for that purpose.</source>
          <target state="translated">後のトークンがすでに処理されています。これは、コンテキストの確立中に発生する可能性のある致命的なエラーコードです。補足的なステータス値を示すためには使用されません。MessageProp オブジェクトはその目的のために使用されます。</target>
        </trans-unit>
        <trans-unit id="5277e37c88befb14c4900a1e7b21705943a1921e" translate="yes" xml:space="preserve">
          <source>A layer is created from a graph of modules in a &lt;a href=&quot;module/configuration&quot;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt; and a function that maps each module to a &lt;a href=&quot;classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt;. Creating a layer informs the Java virtual machine about the classes that may be loaded from the modules so that the Java virtual machine knows which module that each class is a member of.</source>
          <target state="translated">レイヤーは、&lt;a href=&quot;module/configuration&quot;&gt; &lt;code&gt;Configuration&lt;/code&gt; &lt;/a&gt;内のモジュールのグラフと、各モジュールを&lt;a href=&quot;classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; に&lt;/a&gt;マップする関数から作成されます。レイヤーを作成すると、モジュールからロードされる可能性のあるクラスについてJava仮想マシンに通知されるため、Java仮想マシンは各クラスがメンバーになっているモジュールを認識できます。</target>
        </trans-unit>
        <trans-unit id="1342f1334f0443aaf9516668d4ea2e646d808449" translate="yes" xml:space="preserve">
          <source>A layer of modules in the Java virtual machine.</source>
          <target state="translated">Java仮想マシンのモジュールの層。</target>
        </trans-unit>
        <trans-unit id="d0f54cc0e5057c7986390cbc721e478d9988fe29" translate="yes" xml:space="preserve">
          <source>A layout manager that allows multiple components to be laid out either vertically or horizontally.</source>
          <target state="translated">複数のコンポーネントを縦にも横にもレイアウトできるレイアウトマネージャ。</target>
        </trans-unit>
        <trans-unit id="b2079d32865329cc7156e48c142cc7deb2aadb37" translate="yes" xml:space="preserve">
          <source>A layout manager that allows multiple components to be laid out either vertically or horizontally. The components will not wrap so, for example, a vertical arrangement of components will stay vertically arranged when the frame is resized.</source>
          <target state="translated">複数のコンポーネントを縦にも横にもレイアウトできるレイアウトマネージャ。コンポーネントはラップしないので、例えば垂直に配置されたコンポーネントは、フレームのサイズを変更しても垂直に配置されたままになります。</target>
        </trans-unit>
        <trans-unit id="72907ab61e9adc794018ea3cbf42699ea9fef1c6" translate="yes" xml:space="preserve">
          <source>A layout manager to arrange components over the top of each other.</source>
          <target state="translated">コンポーネントを重ねて配置するレイアウトマネージャー。</target>
        </trans-unit>
        <trans-unit id="01ab3fef8b40a4d2b6e84d588ce178f6e7e3ad2d" translate="yes" xml:space="preserve">
          <source>A layout manager to arrange components over the top of each other. The requested size of the container will be the largest requested size of the children, taking alignment needs into consideration. The alignment is based upon what is needed to properly fit the children in the allocation area. The children will be placed such that their alignment points are all on top of each other.</source>
          <target state="translated">コンポーネントを重ねて配置するレイアウトマネージャー。コンテナの要求されたサイズは、整列の必要性を考慮して、子供たちの最大の要求されたサイズになります。アラインメントは、割り当て領域内の子供を適切に適合させるために必要なものに基づいています。子供たちは、それらの整列ポイントがすべてお互いの上にあるように配置されます。</target>
        </trans-unit>
        <trans-unit id="97d54d21fcf748da2a9bb68d7e686e2f8dfef862" translate="yes" xml:space="preserve">
          <source>A leading component separator (the composite name string begins with a separator) denotes a leading empty component (a component consisting of an empty string). A trailing component separator (the composite name string ends with a separator) denotes a trailing empty component. Adjacent component separators denote an empty component.</source>
          <target state="translated">先頭のコンポーネントセパレータ(複合名文字列がセパレータで始まる)は、先頭の空のコンポーネント(空の文字列からなるコンポーネント)を表します。後続のコンポーネント区切り文字(複合名文字列が区切り文字で終わる)は、後続の空のコンポーネントを表します。隣接するコンポーネントの区切り文字は、空のコンポーネントを表します。</target>
        </trans-unit>
        <trans-unit id="fcad8987095acc8d02184de58b249c169cc6e9af" translate="yes" xml:space="preserve">
          <source>A leading separator (the compound name string begins with a separator) denotes a leading empty atomic component (consisting of an empty string). A trailing separator (the compound name string ends with a separator) denotes a trailing empty atomic component. Adjacent separators denote an empty atomic component.</source>
          <target state="translated">先頭のセパレータ(複合名文字列がセパレータで始まる)は、先頭の空の原子成分(空の文字列で構成される)を表します。後続のセパレータ(複合名文字列がセパレータで終わる)は、後続の空の原子成分を表します。隣接するセパレータは、空の原子成分を表します。</target>
        </trans-unit>
        <trans-unit id="e1a750474571c1caa8c781c57987f658741abc84" translate="yes" xml:space="preserve">
          <source>A leap-year is a year of a longer length than normal. The exact meaning is determined by the chronology according to the following constraints.</source>
          <target state="translated">閏年(うるうねん)とは、通常の年よりも長い長さの年のこと。正確な意味は、以下の制約により年表によって決定される。</target>
        </trans-unit>
        <trans-unit id="97d705fdaf553c98ff69239e30eff552390ebd01" translate="yes" xml:space="preserve">
          <source>A leap-year is a year of a longer length than normal. The exact meaning is determined by the chronology with the constraint that a leap-year must imply a year-length longer than a non leap-year.</source>
          <target state="translated">閏年とは、通常の年よりも長い長さの年のことである。正確な意味は、閏年が非閏年よりも長い年の長さを意味しなければならないという制約の下、年表によって決定されます。</target>
        </trans-unit>
        <trans-unit id="953f8698788a9660e6c0a3bdd71c8c8119fdd91e" translate="yes" xml:space="preserve">
          <source>A lease contains a unique VM identifier and a lease duration.</source>
          <target state="translated">リースには、一意の VM 識別子とリース期間が含まれます。</target>
        </trans-unit>
        <trans-unit id="c0b22f14dc030e91d35fb03f5b42eff402d43340" translate="yes" xml:space="preserve">
          <source>A lease contains a unique VM identifier and a lease duration. A Lease object is used to request and grant leases to remote object references.</source>
          <target state="translated">リースには、一意の VM 識別子とリース期間が含まれます。リースオブジェクトは、リモートオブジェクト参照へのリースの要求と付与に使用されます。</target>
        </trans-unit>
        <trans-unit id="53a2599abeb7238ac2f98a3b5600a3def82bd862" translate="yes" xml:space="preserve">
          <source>A lenient query for the &lt;code&gt;ZoneId&lt;/code&gt;, falling back to the &lt;code&gt;ZoneOffset&lt;/code&gt;.</source>
          <target state="translated">以下のための寛大クエリ &lt;code&gt;ZoneId&lt;/code&gt; バックに落下、 &lt;code&gt;ZoneOffset&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc4c49462e7a1fe884a4de6151aa15633318f510" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing indefinite context lifetime.</source>
          <target state="translated">不定のコンテキストの寿命を表す寿命定数。</target>
        </trans-unit>
        <trans-unit id="4aeacf66c5c9e40fd212093fc0fabc89fc4ede13" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing indefinite context lifetime. This value must is set to the maximum integer value in Java - &lt;a href=&quot;../../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">無期限のコンテキストライフタイムを表すライフタイム定数。この値は、Javaの最大整数値である&lt;a href=&quot;../../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; に&lt;/a&gt;設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="d29bd4bbbab78549a664342c4352facb19ca9be4" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing indefinite credential lifetime.</source>
          <target state="translated">不定のクレデンシャルの寿命を表す寿命定数。</target>
        </trans-unit>
        <trans-unit id="c20a7615c31d04d0931569589e5ae9e53ecddea1" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing indefinite credential lifetime. This value must is set to the maximum integer value in Java - &lt;a href=&quot;../../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">資格情報の無期限の有効期間を表す有効期間定数。この値は、Javaの最大整数値である&lt;a href=&quot;../../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; に&lt;/a&gt;設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="8234ce96d3a2d8f155f84e80a615b00a6a0f1d4f" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing the default context lifetime.</source>
          <target state="translated">デフォルトのコンテキストの有効期限を表す有効期限の定数。</target>
        </trans-unit>
        <trans-unit id="6f986dfd8833a6e2fcc19621aff2df7651bf272e" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing the default context lifetime. This value is set to 0.</source>
          <target state="translated">デフォルトのコンテキストの有効期限を表す有効期限の定数。この値は 0 に設定されます。</target>
        </trans-unit>
        <trans-unit id="d47581dc6d095f98d74975a81b4fc941aca6e752" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing the default credential lifetime.</source>
          <target state="translated">既定のクレデンシャルの寿命を表す寿命定数。</target>
        </trans-unit>
        <trans-unit id="b6062c1fe03b24d5e70f80869eabacd1c8e15a8b" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing the default credential lifetime. This value it set to 0.</source>
          <target state="translated">既定のクレデンシャルの有効期間を表す有効期間の定数。この値は 0 に設定される。</target>
        </trans-unit>
        <trans-unit id="056dc7e5f5acdbe9072497479b984fdf625f1673" translate="yes" xml:space="preserve">
          <source>A lightweight component doesn't have a native toolkit peer.</source>
          <target state="translated">軽量コンポーネントには、ネイティブ ツールキット ピアがありません。</target>
        </trans-unit>
        <trans-unit id="961da4c1767206da49835874c56a453eb333103a" translate="yes" xml:space="preserve">
          <source>A lightweight component doesn't have a native toolkit peer. Subclasses of &lt;code&gt;Component&lt;/code&gt; and &lt;code&gt;Container&lt;/code&gt;, other than the ones defined in this package like &lt;code&gt;Button&lt;/code&gt; or &lt;code&gt;Scrollbar&lt;/code&gt;, are lightweight. All of the Swing components are lightweights.</source>
          <target state="translated">軽量コンポーネントには、ネイティブツールキットピアがありません。 &lt;code&gt;Button&lt;/code&gt; や &lt;code&gt;Scrollbar&lt;/code&gt; など、このパッケージで定義されているもの以外の &lt;code&gt;Component&lt;/code&gt; と &lt;code&gt;Container&lt;/code&gt; のサブクラスは軽量です。Swingコンポーネントはすべて軽量です。</target>
        </trans-unit>
        <trans-unit id="185a81fc9a29fad538cdc2a966ca75ad3243ce0a" translate="yes" xml:space="preserve">
          <source>A lightweight container that uses a BoxLayout object as its layout manager.</source>
          <target state="translated">BoxLayoutオブジェクトをレイアウトマネージャとして使用する軽量コンテナ。</target>
        </trans-unit>
        <trans-unit id="979d25672adedcde0b0dd84c461e1543b2458bcc" translate="yes" xml:space="preserve">
          <source>A lightweight container that uses a BoxLayout object as its layout manager. Box provides several class methods that are useful for containers using BoxLayout -- even non-Box containers.</source>
          <target state="translated">BoxLayout オブジェクトをレイアウトマネージャとして使用する軽量コンテナ。Box は BoxLayout を使用するコンテナに便利なクラスメソッドをいくつか提供しています。</target>
        </trans-unit>
        <trans-unit id="aa12d0cac093b12b3e599eb656d726a52b98e4e3" translate="yes" xml:space="preserve">
          <source>A lightweight container used behind the scenes by &lt;code&gt;JFrame&lt;/code&gt;, &lt;code&gt;JDialog&lt;/code&gt;, &lt;code&gt;JWindow&lt;/code&gt;, &lt;code&gt;JApplet&lt;/code&gt;, and &lt;code&gt;JInternalFrame&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JFrame&lt;/code&gt; 、 &lt;code&gt;JDialog&lt;/code&gt; 、 &lt;code&gt;JWindow&lt;/code&gt; 、 &lt;code&gt;JApplet&lt;/code&gt; 、および &lt;code&gt;JInternalFrame&lt;/code&gt; によって舞台裏で使用される軽量コンテナ。</target>
        </trans-unit>
        <trans-unit id="5205f5e675c9dc2be1e53cb3d5c4f7df5153a51c" translate="yes" xml:space="preserve">
          <source>A lightweight container used behind the scenes by &lt;code&gt;JFrame&lt;/code&gt;, &lt;code&gt;JDialog&lt;/code&gt;, &lt;code&gt;JWindow&lt;/code&gt;, &lt;code&gt;JApplet&lt;/code&gt;, and &lt;code&gt;JInternalFrame&lt;/code&gt;. For task-oriented information on functionality provided by root panes see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/rootpane.html&quot;&gt;How to Use Root Panes&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JFrame&lt;/code&gt; 、 &lt;code&gt;JDialog&lt;/code&gt; 、 &lt;code&gt;JWindow&lt;/code&gt; 、 &lt;code&gt;JApplet&lt;/code&gt; 、および &lt;code&gt;JInternalFrame&lt;/code&gt; によって舞台裏で使用される軽量コンテナ。ルートペインによって提供される機能に関するタスク指向の情報については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションであるルートペインの&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/rootpane.html&quot;&gt;使用方法を&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d7dee2457c08564bdda284896607baec0996631f" translate="yes" xml:space="preserve">
          <source>A lightweight object that provides many of the features of a native frame, including dragging, closing, becoming an icon, resizing, title display, and support for a menu bar.</source>
          <target state="translated">ドラッグ、閉じる、アイコンになる、リサイズ、タイトル表示、メニューバーのサポートなど、ネイティブフレームの多くの機能を提供する軽量オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="f6fd25a0119a6fc946ca5ed9b5dec6debec44e37" translate="yes" xml:space="preserve">
          <source>A lightweight object that provides many of the features of a native frame, including dragging, closing, becoming an icon, resizing, title display, and support for a menu bar. For task-oriented documentation and examples of using internal frames, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;How to Use Internal Frames&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">ドラッグ、閉じる、アイコンになる、サイズ変更、タイトル表示、メニューバーのサポートなど、ネイティブフレームの多くの機能を提供する軽量オブジェクト。タスク指向のドキュメントと内部フレームの使用例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションにある&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;内部フレームの使用方法」を&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e7e4ac118d01d0cc449198a99d54ff399706233a" translate="yes" xml:space="preserve">
          <source>A line border UI resource.</source>
          <target state="translated">線の境界線のUIリソース。</target>
        </trans-unit>
        <trans-unit id="acc386c289b45c240b5420ea9f37eef84f9e9787" translate="yes" xml:space="preserve">
          <source>A line can have controls, such as gain, pan, and reverb. The controls themselves are instances of classes that extend the base &lt;a href=&quot;control&quot;&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/a&gt; class. The &lt;code&gt;Line&lt;/code&gt; interface provides two accessor methods for obtaining the line's controls: &lt;a href=&quot;#getControls()&quot;&gt;&lt;code&gt;getControls&lt;/code&gt;&lt;/a&gt; returns the entire set, and &lt;a href=&quot;#getControl(javax.sound.sampled.Control.Type)&quot;&gt;&lt;code&gt;getControl&lt;/code&gt;&lt;/a&gt; returns a single control of specified type.</source>
          <target state="translated">ラインには、ゲイン、パン、リバーブなどのコントロールを含めることができます。コントロール自体は、基本の&lt;a href=&quot;control&quot;&gt; &lt;code&gt;Control&lt;/code&gt; &lt;/a&gt;クラスを拡張するクラスのインスタンスです。 &lt;code&gt;Line&lt;/code&gt; インターフェースは、ラインのコントロールを得るための2つのアクセサメソッドを提供する：&lt;a href=&quot;#getControls()&quot;&gt; &lt;code&gt;getControls&lt;/code&gt; は&lt;/a&gt;セット全体を返し、&lt;a href=&quot;#getControl(javax.sound.sampled.Control.Type)&quot;&gt; &lt;code&gt;getControl&lt;/code&gt; は&lt;/a&gt;指定されたタイプの単一のコントロールを返します。</target>
        </trans-unit>
        <trans-unit id="b56c5699f1874ffdd2862ebff22710a3d81daec8" translate="yes" xml:space="preserve">
          <source>A line can have controls, such as gain, pan, and reverb. The controls themselves are instances of classes that extend the base &lt;code&gt;&lt;a href=&quot;control&quot;&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class. The &lt;code&gt;Line&lt;/code&gt; interface provides two accessor methods for obtaining the line's controls: &lt;code&gt;&lt;a href=&quot;line#getControls--&quot;&gt;&lt;code&gt;getControls&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; returns the entire set, and &lt;code&gt;&lt;a href=&quot;line#getControl-javax.sound.sampled.Control.Type-&quot;&gt;&lt;code&gt;getControl&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; returns a single control of specified type.</source>
          <target state="translated">ラインには、ゲイン、パン、リバーブなどのコントロールを含めることができます。コントロール自体は、基本の &lt;code&gt;&lt;a href=&quot;control&quot;&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; クラスを拡張するクラスのインスタンスです。 &lt;code&gt;Line&lt;/code&gt; インターフェースは、ラインのコントロールを得るための2つのアクセサメソッドを提供する： &lt;code&gt;&lt;a href=&quot;line#getControls--&quot;&gt;&lt;code&gt;getControls&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; はセット全体を返し、 &lt;code&gt;&lt;a href=&quot;line#getControl-javax.sound.sampled.Control.Type-&quot;&gt;&lt;code&gt;getControl&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; は指定されたタイプの単一のコントロールを返します。</target>
        </trans-unit>
        <trans-unit id="8786a5fe383b5efbdf5037cc5b63611602b61532" translate="yes" xml:space="preserve">
          <source>A line feed (LF) character standing by itself means &quot;go to column 1 of the next line.&quot;</source>
          <target state="translated">改行(LF)文字が単独で立っているのは、&quot;次の行の1列目に行く &quot;ことを意味します。</target>
        </trans-unit>
        <trans-unit id="8b693dcbd13d371398add1d691705128da936559" translate="yes" xml:space="preserve">
          <source>A line is a sequence of bytes ending with a carriage return character (&lt;code&gt;'\r'&lt;/code&gt;), a newline character (&lt;code&gt;'\n'&lt;/code&gt;), or a carriage return character followed immediately by a linefeed character. In all three cases, the line terminating character(s) are returned as a single newline character.</source>
          <target state="translated">行は、復帰文字（ &lt;code&gt;'\r'&lt;/code&gt; ）、改行文字（ &lt;code&gt;'\n'&lt;/code&gt; ）、または復帰文字の直後に改行文字が続く一連のバイトです。3つのケースすべてで、行終端文字は単一の改行文字として返されます。</target>
        </trans-unit>
        <trans-unit id="cd89c4e3b2be50c382c2539dcc24464fdbb0045e" translate="yes" xml:space="preserve">
          <source>A line is a sequence of characters ending with either a carriage-return character (&lt;code&gt;'\r'&lt;/code&gt;) or a newline character (&lt;code&gt;'\n'&lt;/code&gt;). In addition, a carriage-return character followed immediately by a newline character is treated as a single end-of-line token.</source>
          <target state="translated">行は、復帰文字（ &lt;code&gt;'\r'&lt;/code&gt; ）または改行文字（ &lt;code&gt;'\n'&lt;/code&gt; ）のいずれかで終わる文字のシーケンスです。また、復帰文字の直後に改行文字が続く場合は、単一の行末トークンとして扱われます。</target>
        </trans-unit>
        <trans-unit id="1ba222b541f295d3bf4f50e5a5f62ba700c4b970" translate="yes" xml:space="preserve">
          <source>A line is considered to be &lt;a id=&quot;lt&quot;&gt;terminated&lt;/a&gt; by any one of a line feed ('\n'), a carriage return ('\r'), or a carriage return followed immediately by a linefeed.</source>
          <target state="translated">改行は、改行（ '\ n'）、キャリッジリターン（ '\ r'）、またはキャリッジリターンの直後に改行が続くいずれかによって&lt;a id=&quot;lt&quot;&gt;終了&lt;/a&gt;したと見なされます。</target>
        </trans-unit>
        <trans-unit id="3247ed16456853302a1cf889fa07ec387d051119" translate="yes" xml:space="preserve">
          <source>A line is considered to be &lt;a name=&quot;lt&quot;&gt;terminated&lt;/a&gt; by any one of a line feed ('\n'), a carriage return ('\r'), or a carriage return followed immediately by a linefeed.</source>
          <target state="translated">行は、改行（ '\ n'）、復帰（ '\ r'）、または復帰の直後に改行が続くもののいずれかで&lt;a name=&quot;lt&quot;&gt;終了&lt;/a&gt;すると見なされます。</target>
        </trans-unit>
        <trans-unit id="c4fde9f82d44868764c4b891f64e208e4c533ea9" translate="yes" xml:space="preserve">
          <source>A line is drawn connecting the child to the parent. For handling of the root node refer to &lt;a href=&quot;../../jtree#setRootVisible(boolean)&quot;&gt;&lt;code&gt;JTree.setRootVisible(boolean)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../jtree#setShowsRootHandles(boolean)&quot;&gt;&lt;code&gt;JTree.setShowsRootHandles(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">子と親を結ぶ線が引かれます。ルートノードの処理については、&lt;a href=&quot;../../jtree#setRootVisible(boolean)&quot;&gt; &lt;code&gt;JTree.setRootVisible(boolean)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../jtree#setShowsRootHandles(boolean)&quot;&gt; &lt;code&gt;JTree.setShowsRootHandles(boolean)&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0b7ca0c2af9f1edee874d303ecbb4bfe840e2ae1" translate="yes" xml:space="preserve">
          <source>A line of text is terminated by a carriage-return character (&lt;code&gt;'\r'&lt;/code&gt;), a newline character (&lt;code&gt;'\n'&lt;/code&gt;), a carriage-return character immediately followed by a newline character, or the end of the file. Line-terminating characters are discarded and are not included as part of the string returned.</source>
          <target state="translated">テキスト行は、改行文字（ &lt;code&gt;'\r'&lt;/code&gt; ）、改行文字（ &lt;code&gt;'\n'&lt;/code&gt; ）、改行文字の直後に続く改行文字、またはファイルの終わりで終了します。行末文字は破棄され、返される文字列の一部として含まれません。</target>
        </trans-unit>
        <trans-unit id="1dea08ed54499fe496d9233626bb8c4a7cd9288e" translate="yes" xml:space="preserve">
          <source>A line segment specified with double coordinates.</source>
          <target state="translated">二重座標で指定された線分。</target>
        </trans-unit>
        <trans-unit id="a8ddba63111ee463487f4ecaeb6ac0f5f0c77a0e" translate="yes" xml:space="preserve">
          <source>A line segment specified with float coordinates.</source>
          <target state="translated">float座標で指定された線分。</target>
        </trans-unit>
        <trans-unit id="d1d421a3c437913459686e8e2c616f56c058bc0b" translate="yes" xml:space="preserve">
          <source>A line-separator character (&lt;code&gt;'\u2028'&lt;/code&gt;), or</source>
          <target state="translated">行区切り文字（ &lt;code&gt;'\u2028'&lt;/code&gt; ）、または</target>
        </trans-unit>
        <trans-unit id="6a06843d99cb5f85c0cf509d37a1efecb9a3799a" translate="yes" xml:space="preserve">
          <source>A linear collection that supports element insertion and removal at both ends.</source>
          <target state="translated">両端で要素の挿入・削除をサポートするリニアコレクション。</target>
        </trans-unit>
        <trans-unit id="b40d08cf909bccb933847ab2cbb7c69d15600fc8" translate="yes" xml:space="preserve">
          <source>A linear collection that supports element insertion and removal at both ends. The name</source>
          <target state="translated">両端で要素の挿入と削除をサポートするリニアコレクション。名前は</target>
        </trans-unit>
        <trans-unit id="97306c8d3ba98c3b4909e917962a43aca00f125b" translate="yes" xml:space="preserve">
          <source>A linked hash map has two parameters that affect its performance:</source>
          <target state="translated">リンクされたハッシュマップには、そのパフォーマンスに影響を与える2つのパラメータがあります。</target>
        </trans-unit>
        <trans-unit id="a5d0567d95ba1f476603a27df139f097cc946400" translate="yes" xml:space="preserve">
          <source>A linked hash set has two parameters that affect its performance:</source>
          <target state="translated">リンクされたハッシュセットには、その性能に影響を与える2つのパラメータがあります。</target>
        </trans-unit>
        <trans-unit id="4a34d022e2b151d44379f6754c3e516c74e49078" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;String&lt;/code&gt; each of which is a currently registered &lt;code&gt;Logger&lt;/code&gt; name.</source>
          <target state="translated">それぞれが現在登録されている &lt;code&gt;Logger&lt;/code&gt; 名である &lt;code&gt;String&lt;/code&gt; のリスト。</target>
        </trans-unit>
        <trans-unit id="65e892dc9473951e991ccf155b1ca1274401dc1f" translate="yes" xml:space="preserve">
          <source>A list of DOM implementations that support the desired features.</source>
          <target state="translated">希望する機能をサポートする DOM 実装のリスト。</target>
        </trans-unit>
        <trans-unit id="b08264eb34333533bdb8e9acfb6937f62fd4417e" translate="yes" xml:space="preserve">
          <source>A list of DOMImplementations that support the desired features.</source>
          <target state="translated">目的の機能をサポートする DOMImplementation のリスト。</target>
        </trans-unit>
        <trans-unit id="15cf90d8d2220c9cd8197762d2212a7447bdf437" translate="yes" xml:space="preserve">
          <source>A list of MBeanServer objects.</source>
          <target state="translated">MBeanServer オブジェクトのリスト。</target>
        </trans-unit>
        <trans-unit id="de48ea7e17b256037e5c901cc789fac23bfb5898" translate="yes" xml:space="preserve">
          <source>A list of choices the user can select from.</source>
          <target state="translated">ユーザーが選択できる選択肢のリスト。</target>
        </trans-unit>
        <trans-unit id="31e54663fdecd8b34639cd2595d3190ba6f979d8" translate="yes" xml:space="preserve">
          <source>A list of choices the user can select from. Also optionally allows the user to enter a choice of their own.</source>
          <target state="translated">ユーザーが選択できる選択肢のリスト。また、オプションとして、ユーザーが自分の選択肢を入力することもできます。</target>
        </trans-unit>
        <trans-unit id="bf7009e57a42ab2b8198d59d5043bf01d53a555f" translate="yes" xml:space="preserve">
          <source>A list of event listeners for this component.</source>
          <target state="translated">このコンポーネントのイベントリスナーのリスト。</target>
        </trans-unit>
        <trans-unit id="be31e28e9acde1db832856f21a141e6f8fd1a8c8" translate="yes" xml:space="preserve">
          <source>A list of listeners that will receive events from this object.</source>
          <target state="translated">このオブジェクトからイベントを受け取るリスナーのリスト。</target>
        </trans-unit>
        <trans-unit id="e2cdf1db9dc024dd948eaa61978df4a6a1912d0e" translate="yes" xml:space="preserve">
          <source>A list of matching &lt;code&gt;Element&lt;/code&gt; nodes.</source>
          <target state="translated">一致する &lt;code&gt;Element&lt;/code&gt; ノードのリスト。</target>
        </trans-unit>
        <trans-unit id="ce084408655d8ff5f3ed083f8ea3a1698adb007b" translate="yes" xml:space="preserve">
          <source>A list of paths to be searched by the bootstrap class loader. Paths represent directories or libraries (commonly referred to as JAR or zip libraries on many platforms). These paths are searched by the bootstrap class loader after the platform specific mechanisms of locating a class have failed. Paths are searched in the order listed. Paths in the list are separated by one or more spaces. A path takes the syntax of the path component of a hierarchical URI. The path is absolute if it begins with a slash character ('/'), otherwise it is relative. A relative path is resolved against the absolute path of the agent JAR file. Malformed and non-existent paths are ignored. When an agent is started sometime after the VM has started then paths that do not represent a JAR file are ignored. This attribute is optional.</source>
          <target state="translated">ブートストラップクラスローダが検索するパスのリスト。パスは、ディレクトリやライブラリ (多くのプラットフォームでは一般的に JAR や zip ライブラリと呼ばれています)を表します。これらのパスは、クラスを探すプラットフォーム固有のメカニズムが失敗した後、ブートストラップクラスローダによって検索されます。パスは、リストされた順番で検索されます。リスト内のパスは、1 つ以上のスペースで区切られています。パスは階層的な URI のパスコンポーネントの構文を取ります。パスはスラッシュ文字('/')で始まる場合は絶対パスであり、そうでない場合は相対パスです。相対パスは、エージェント JAR ファイルの絶対パスに対して解決されます。不正なパスや存在しないパスは無視されます。VMが起動した後にエージェントが起動した場合、JARファイルを表さないパスは無視されます。この属性はオプションです。</target>
        </trans-unit>
        <trans-unit id="cd71c25d8fb4c7cd0da03ca7d9bfab807b3ef157" translate="yes" xml:space="preserve">
          <source>A listener class that watches for a popup window closing.</source>
          <target state="translated">ポップアップウィンドウが閉じるのを監視するリスナークラス。</target>
        </trans-unit>
        <trans-unit id="e598c4bf95d7225b30a8913153841fb80fa29899" translate="yes" xml:space="preserve">
          <source>A listener class that watches for a popup window closing. When the popup is closing, the listener deselects the menu.</source>
          <target state="translated">ポップアップウィンドウが閉じるのを監視するリスナークラス。ポップアップが閉じると、リスナーはメニューの選択を解除します。</target>
        </trans-unit>
        <trans-unit id="71e55bf263a6776b16cc5006150fea3427b4ac17" translate="yes" xml:space="preserve">
          <source>A listener for a Timer MBean can itself be an MBean, using the method &lt;a href=&quot;../mbeanserver#addNotificationListener(javax.management.ObjectName,javax.management.ObjectName,javax.management.NotificationFilter,java.lang.Object)&quot;&gt;&lt;code&gt;MBeanServer.addNotificationListener(ObjectName,
      ObjectName, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;. In this way, a management application can create an MBean representing a task, then schedule that task using a Timer MBean.</source>
          <target state="translated">タイマーMBeanのリスナーは、メソッド&lt;a href=&quot;../mbeanserver#addNotificationListener(javax.management.ObjectName,javax.management.ObjectName,javax.management.NotificationFilter,java.lang.Object)&quot;&gt; &lt;code&gt;MBeanServer.addNotificationListener(ObjectName, ObjectName, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt;を使用して、それ自体をMBeanにすることができます。このようにして、管理アプリケーションはタスクを表すMBeanを作成し、タイマーMBeanを使用してそのタスクをスケジュールできます。</target>
        </trans-unit>
        <trans-unit id="0a94d2ecd063ae6a1df5852d1841f65f60bd65cf" translate="yes" xml:space="preserve">
          <source>A listener for a Timer MBean can itself be an MBean, using the method &lt;a href=&quot;../mbeanserver#addNotificationListener-javax.management.ObjectName-javax.management.ObjectName-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;MBeanServer.addNotificationListener(ObjectName,
      ObjectName, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;. In this way, a management application can create an MBean representing a task, then schedule that task using a Timer MBean.</source>
          <target state="translated">Timer MBeanのリスナーは、メソッド&lt;a href=&quot;../mbeanserver#addNotificationListener-javax.management.ObjectName-javax.management.ObjectName-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;MBeanServer.addNotificationListener(ObjectName, ObjectName, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt;を使用して、それ自体をMBeanにすることができます。このようにして、管理アプリケーションはタスクを表すMBeanを作成し、タイマーMBeanを使用してそのタスクをスケジュールできます。</target>
        </trans-unit>
        <trans-unit id="698554ac6345725e38dfb1615e0a194ec85c4ba6" translate="yes" xml:space="preserve">
          <source>A listener for receiving preference change events.</source>
          <target state="translated">プリファレンス変更イベントを受信するためのリスナー。</target>
        </trans-unit>
        <trans-unit id="1aabbb23a368618bba8cf844d1f5d4f8bd473acc" translate="yes" xml:space="preserve">
          <source>A listener for receiving preference node change events.</source>
          <target state="translated">プリファレンスノードの変更イベントを受信するためのリスナーです。</target>
        </trans-unit>
        <trans-unit id="bfc69827b09f6e59d534209ca3a289bb0277d279" translate="yes" xml:space="preserve">
          <source>A listener for the view.</source>
          <target state="translated">景色を見るためのリスナー。</target>
        </trans-unit>
        <trans-unit id="8500799ac60ccf3012e5129a0790c8e444a71044" translate="yes" xml:space="preserve">
          <source>A listener implementing all the methods in both the &lt;code&gt;MouseListener&lt;/code&gt; and &lt;code&gt;MouseMotionListener&lt;/code&gt; interfaces.</source>
          <target state="translated">両方のすべてのメソッド実装リスナー &lt;code&gt;MouseListener&lt;/code&gt; と &lt;code&gt;MouseMotionListener&lt;/code&gt; インタフェースを。</target>
        </trans-unit>
        <trans-unit id="b4e8c843b8da1377b4a4fe35087522a11a1f018f" translate="yes" xml:space="preserve">
          <source>A listener interested in &lt;code&gt;OBJECT_CHANGED&lt;/code&gt; event types must:</source>
          <target state="translated">&lt;code&gt;OBJECT_CHANGED&lt;/code&gt; イベントタイプに関心のあるリスナーは、次の条件を満たす必要があります。</target>
        </trans-unit>
        <trans-unit id="dabaed40746a3ea76dd8eee23e9763e3e5474eb6" translate="yes" xml:space="preserve">
          <source>A listener interface for receiving mouse motion events during a drag operation.</source>
          <target state="translated">ドラッグ操作中にマウスのモーションイベントを受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="85207bf3ee7b5f4fb2ce7243c28aed16dadb21b3" translate="yes" xml:space="preserve">
          <source>A listener is an object that has implemented the &lt;code&gt;RowSetListener&lt;/code&gt; interface. If it has been added to a &lt;code&gt;RowSet&lt;/code&gt; object's list of listeners, it will be notified when an event occurs on that &lt;code&gt;RowSet&lt;/code&gt; object. Each listener's implementation of the &lt;code&gt;RowSetListener&lt;/code&gt; methods defines what that object will do when it is notified that an event has occurred.</source>
          <target state="translated">リスナーは、 &lt;code&gt;RowSetListener&lt;/code&gt; インターフェースを実装したオブジェクトです。 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトのリスナーのリストに追加されている場合は、その &lt;code&gt;RowSet&lt;/code&gt; オブジェクトでイベントが発生したときに通知されます。 &lt;code&gt;RowSetListener&lt;/code&gt; メソッドの各リスナーの実装は、イベントが発生したことが通知されたときにそのオブジェクトが何をするかを定義します。</target>
        </trans-unit>
        <trans-unit id="8797401d0ffe322f1602faefe424a1878b3214bf" translate="yes" xml:space="preserve">
          <source>A listener might, for example, be a table or graph that needs to be updated in order to accurately reflect the current state of the &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">リスナーは、たとえば、 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトの現在の状態を正確に反映するために更新する必要があるテーブルまたはグラフである可能性があります。</target>
        </trans-unit>
        <trans-unit id="c1eb406af2e34f83c1ff0326d1a53689b2620751" translate="yes" xml:space="preserve">
          <source>A listener that wants to be notified of &lt;code&gt;OBJECT_CHANGED&lt;/code&gt; event types should also implement the &lt;code&gt;ObjectChangeListener&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;OBJECT_CHANGED&lt;/code&gt; イベントタイプの通知を必要とするリスナーは、 &lt;code&gt;ObjectChangeListener&lt;/code&gt; インターフェイスも実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="de4c0125a157adee093814e09b281eaa9497021d" translate="yes" xml:space="preserve">
          <source>A listener that wants to be notified of namespace change events should also implement the &lt;code&gt;NamespaceChangeListener&lt;/code&gt; interface.</source>
          <target state="translated">名前空間変更イベントの通知を必要とするリスナーは、 &lt;code&gt;NamespaceChangeListener&lt;/code&gt; インターフェースも実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="4aa182dd1164d6f87d4e4f06c54fef56a59a0650" translate="yes" xml:space="preserve">
          <source>A listener to be registered upon the combo box (&lt;em&gt;not&lt;/em&gt; its popup menu) to handle mouse events that affect the state of the popup menu.</source>
          <target state="translated">ポップアップメニューの状態に影響を与えるマウスイベントを処理するために、コンボボックス（ポップアップメニューで&lt;em&gt;はない&lt;/em&gt;）に登録されるリスナー。</target>
        </trans-unit>
        <trans-unit id="987732cee4fab52c38c198447827dec323b254e2" translate="yes" xml:space="preserve">
          <source>A listener to be registered upon the combo box (&lt;em&gt;not&lt;/em&gt; its popup menu) to handle mouse events that affect the state of the popup menu. The main purpose of this listener is to make the popup menu appear and disappear. This listener also helps with click-and-drag scenarios by setting the selection if the mouse was released over the list during a drag.</source>
          <target state="translated">ポップアップメニューの状態に影響を与えるマウスイベントを処理するために、コンボボックス（ポップアップメニューで&lt;em&gt;はない&lt;/em&gt;）に登録されるリスナー。このリスナーの主な目的は、ポップアップメニューを表示および非表示にすることです。このリスナーは、ドラッグ中にマウスがリスト上で離された場合に選択を設定することにより、クリックアンドドラッグのシナリオにも役立ちます。</target>
        </trans-unit>
        <trans-unit id="670f046d6bc2c8904ae2cf8a3aae8a6dbbb7456d" translate="yes" xml:space="preserve">
          <source>A listener to listen for model changes.</source>
          <target state="translated">モデルチェンジを聞くためのリスナーです。</target>
        </trans-unit>
        <trans-unit id="3d0fdc05796202e16b01613faa5d4476667a38cc" translate="yes" xml:space="preserve">
          <source>A listener to track focus events and convert them to PropertyChange events.</source>
          <target state="translated">フォーカスイベントを追跡し、PropertyChangeイベントに変換するためのリスナーです。</target>
        </trans-unit>
        <trans-unit id="9e24f20d2177ce0b96413ecb356cb7008b6d89e3" translate="yes" xml:space="preserve">
          <source>A literal string replacement</source>
          <target state="translated">リテラル文字列の置換</target>
        </trans-unit>
        <trans-unit id="1971fb641c3e63b72bc3a32c19b53e864bfaab20" translate="yes" xml:space="preserve">
          <source>A local cache of the combined width of all columns</source>
          <target state="translated">すべての列の幅を合わせたローカルキャッシュ</target>
        </trans-unit>
        <trans-unit id="592b027e5e9d567689958753a9389037cb88b1a2" translate="yes" xml:space="preserve">
          <source>A local color table is written to the output stream only if image metadata containing a LocalColorTable element is supplied to the writer, or no image metadata is supplied to the writer and the local color table which would be generated from the image itself is not equal to the global color table.</source>
          <target state="translated">LocalColorTable 要素を含む画像メタデータがライタに与えられた場合、または画像メタデータがライタに与えられず、画像自体から生成されるであろうローカルカラーテーブルがグローバルカラーテーブルと等しくない場合にのみ、ローカルカラーテーブルが出力ストリームに書き込まれます。</target>
        </trans-unit>
        <trans-unit id="5e67dc7d76e5d6260aa02465cd132b1be622d15e" translate="yes" xml:space="preserve">
          <source>A local port number of &lt;code&gt;zero&lt;/code&gt; will let the system pick up a free port in the &lt;code&gt;bind&lt;/code&gt; operation.</source>
          <target state="translated">ローカルポート番号が &lt;code&gt;zero&lt;/code&gt; 、システムは &lt;code&gt;bind&lt;/code&gt; 操作で空きポートを取得します。</target>
        </trans-unit>
        <trans-unit id="ad2e095520751ba87e3068d056542787aeca9197" translate="yes" xml:space="preserve">
          <source>A local variable.</source>
          <target state="translated">ローカル変数。</target>
        </trans-unit>
        <trans-unit id="6955283daf06e25711bb8ad70a56014545639769" translate="yes" xml:space="preserve">
          <source>A locale with language &quot;no&quot;, country &quot;NO&quot;, and variant &quot;NY&quot;, representing Norwegian Nynorsk (Norway), is converted to a language tag &quot;nn-NO&quot;.</source>
          <target state="translated">言語が &quot;no&quot;、国名が &quot;no&quot;、バリアントが &quot;ny&quot; のロケールは、ノルウェーのナイノルスク (Norwegian Nynorsk)を表し、言語タグ &quot;nn-NO&quot; に変換されます。</target>
        </trans-unit>
        <trans-unit id="65c9b270c7c3f54a5f3173eaed9ba0424301ac5e" translate="yes" xml:space="preserve">
          <source>A localized String containing the description of the object.</source>
          <target state="translated">オブジェクトの説明を含むローカライズされた文字列。</target>
        </trans-unit>
        <trans-unit id="00a1c98e62c8c1f14895bfb21d9ee63a77aa54f1" translate="yes" xml:space="preserve">
          <source>A localized String containing the name of the object.</source>
          <target state="translated">オブジェクトの名前を含むローカライズされた文字列。</target>
        </trans-unit>
        <trans-unit id="3a27552254d56009aa8e1699a2f0793508aa6107" translate="yes" xml:space="preserve">
          <source>A localized short description associated with this property/method/event. This defaults to be the display name.</source>
          <target state="translated">このプロパティ/メソッド/イベントに関連付けられたローカライズされた短い説明。デフォルトは表示名です。</target>
        </trans-unit>
        <trans-unit id="5c9fada9017e71f49bf3f0e12ca12af8b3cad0a7" translate="yes" xml:space="preserve">
          <source>A lock is a tool for controlling access to a shared resource by multiple threads. Commonly, a lock provides exclusive access to a shared resource: only one thread at a time can acquire the lock and all access to the shared resource requires that the lock be acquired first. However, some locks may allow concurrent access to a shared resource, such as the read lock of a &lt;a href=&quot;readwritelock&quot;&gt;&lt;code&gt;ReadWriteLock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ロックは、複数のスレッドによる共有リソースへのアクセスを制御するためのツールです。一般に、ロックは共有リソースへの排他的アクセスを提供します。一度に1つのスレッドのみがロックを取得でき、共有リソースへのすべてのアクセスは最初にロックを取得する必要があります。ただし、一部のロックでは、&lt;a href=&quot;readwritelock&quot;&gt; &lt;code&gt;ReadWriteLock&lt;/code&gt; の&lt;/a&gt;読み取りロックなど、共有リソースへの同時アクセスが許可される場合があります。</target>
        </trans-unit>
        <trans-unit id="3a6ffffd6b30beb72af7461ead42991d37ef4948" translate="yes" xml:space="preserve">
          <source>A lock object remains valid until it is released or the associated file channel is closed, whichever comes first.</source>
          <target state="translated">ロックオブジェクトは、それが解放されるか、または関連するファイルチャネルが閉じられるまで有効です。</target>
        </trans-unit>
        <trans-unit id="28a3b257aa12bb2f4fb5f8f6e1420bc67c0a823b" translate="yes" xml:space="preserve">
          <source>A lock object representing the newly-acquired lock</source>
          <target state="translated">新しく取得したロックを表すロックオブジェクト</target>
        </trans-unit>
        <trans-unit id="2b22d963da1177eba0b896711186aa82f5524a3d" translate="yes" xml:space="preserve">
          <source>A lock object representing the newly-acquired lock, or &lt;code&gt;null&lt;/code&gt; if the lock could not be acquired because another program holds an overlapping lock</source>
          <target state="translated">新しく取得したロックを表すロックオブジェクト。別のプログラムが重複ロックを保持しているためにロックを取得できなかった場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94c9f044a4875cfd3ff8a41efa0667cbf6bb53d6" translate="yes" xml:space="preserve">
          <source>A lock on a (region of a) file</source>
          <target state="translated">ファイル(の領域)のロック</target>
        </trans-unit>
        <trans-unit id="84ac1353e7256bd0e9a70d66e51652a6d59ae9e0" translate="yes" xml:space="preserve">
          <source>A locked region need not be contained within, or even overlap, the actual underlying file, so the value returned by this method may exceed the file's current size.</source>
          <target state="translated">ロックされた領域は、実際のファイル内に含まれている必要はなく、重なっている必要もないので、このメソッドが返す値はファイルの現在のサイズを超える可能性があります。</target>
        </trans-unit>
        <trans-unit id="d2a79a2335ce967d894d9aa28b3ea94309610ccb" translate="yes" xml:space="preserve">
          <source>A logger finder is responsible for mapping from a &lt;code&gt;
 System.Logger.Level&lt;/code&gt; to a level supported by the logging backend it uses.</source>
          <target state="translated">ロガーファインダーは、 &lt;code&gt; System.Logger.Level&lt;/code&gt; から使用するロギングバックエンドでサポートされているレベルへのマッピングを担当します。</target>
        </trans-unit>
        <trans-unit id="7e0711816c11bc2760ac5554d0b7767c117620f3" translate="yes" xml:space="preserve">
          <source>A logical channel connection to a Smart Card.</source>
          <target state="translated">スマートカードとの論理チャネル接続。</target>
        </trans-unit>
        <trans-unit id="82653681cfdf11447ffcbfb97eefb36b4534e087" translate="yes" xml:space="preserve">
          <source>A logical channel connection to a Smart Card. It is used to exchange APDUs with a Smart Card. A CardChannel object can be obtained by calling the method &lt;a href=&quot;card#getBasicChannel()&quot;&gt;Card.getBasicChannel()&lt;/a&gt; or &lt;a href=&quot;card#openLogicalChannel()&quot;&gt;Card.openLogicalChannel()&lt;/a&gt;.</source>
          <target state="translated">スマートカードへの論理チャネル接続。スマートカードとAPDUを交換するために使用されます。CardChannelオブジェクトは、メソッド&lt;a href=&quot;card#getBasicChannel()&quot;&gt;Card.getBasicChannel（）&lt;/a&gt;または&lt;a href=&quot;card#openLogicalChannel()&quot;&gt;Card.openLogicalChannel（）を&lt;/a&gt;呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="c068ce28b77aa11f0756c0de4e392d8a3775df39" translate="yes" xml:space="preserve">
          <source>A logical name for the data source is registered with a naming service that uses the Java Naming and Directory Interface&amp;trade; (JNDI) API, usually by a system administrator or someone performing the duties of a system administrator. An application can retrieve the &lt;code&gt;DataSource&lt;/code&gt; object it wants by doing a lookup on the logical name that has been registered for it. The application can then use the &lt;code&gt;DataSource&lt;/code&gt; object to create a connection to the physical data source it represents.</source>
          <target state="translated">データソースの論理名は、Java Naming and DirectoryInterface&amp;trade;（JNDI）APIを使用するネーミングサービスに、通常はシステム管理者またはシステム管理者の職務を遂行する誰かによって登録されます。アプリケーションは、登録されている論理名を検索することにより、必要な &lt;code&gt;DataSource&lt;/code&gt; オブジェクトを取得できます。次に、アプリケーションは &lt;code&gt;DataSource&lt;/code&gt; オブジェクトを使用して、それが表す物理データソースへの接続を作成できます。</target>
        </trans-unit>
        <trans-unit id="bded42e220d2678d88898dced390cdac6cdad3c4" translate="yes" xml:space="preserve">
          <source>A logical set of child views, which as used as a layout pool from which a physical view is formed.</source>
          <target state="translated">子ビューの論理セットで、物理ビューを形成するレイアウト プールとして使用されます。</target>
        </trans-unit>
        <trans-unit id="568c4b3b9a76ea6ca643c5daaf99dff90277ebc4" translate="yes" xml:space="preserve">
          <source>A login configuration contains the following information. Note that this example only represents the default syntax for the &lt;code&gt;Configuration&lt;/code&gt;. Subclass implementations of this class may implement alternative syntaxes and may retrieve the &lt;code&gt;Configuration&lt;/code&gt; from any source such as files, databases, or servers.</source>
          <target state="translated">ログイン構成には、次の情報が含まれています。この例は、 &lt;code&gt;Configuration&lt;/code&gt; デフォルトの構文のみを表していることに注意してください。このクラスのサブクラス実装は、代替構文を実装し、ファイル、データベース、サーバーなどの任意のソースから &lt;code&gt;Configuration&lt;/code&gt; を取得できます。</target>
        </trans-unit>
        <trans-unit id="26dda26d1e92f5c5e23547c5c332144ba4720ca0" translate="yes" xml:space="preserve">
          <source>A long buffer is not comparable to any other type of object.</source>
          <target state="translated">長いバッファは、他のどのタイプのオブジェクトとも比較できません。</target>
        </trans-unit>
        <trans-unit id="af058ad87a032a73c5dbeda376e1410c7f0e9d15" translate="yes" xml:space="preserve">
          <source>A long buffer is not equal to any other type of object.</source>
          <target state="translated">ロングバッファは、他のタイプのオブジェクトと同じではありません。</target>
        </trans-unit>
        <trans-unit id="14db0bab1d80c04094c29c5f4876e521eaaaad9a" translate="yes" xml:space="preserve">
          <source>A long buffer.</source>
          <target state="translated">長いバッファ。</target>
        </trans-unit>
        <trans-unit id="fdd3fa643df0a7408495d391eff49d6089573722" translate="yes" xml:space="preserve">
          <source>A lookup can fail, because the containing class is not accessible to the lookup class, or because the desired class member is missing, or because the desired class member is not accessible to the lookup class, or because the lookup object is not trusted enough to access the member. In any of these cases, a &lt;code&gt;ReflectiveOperationException&lt;/code&gt; will be thrown from the attempted lookup. The exact class will be one of the following:</source>
          <target state="translated">含まれているクラスがルックアップクラスにアクセスできない、または目的のクラスメンバーが見つからない、または目的のクラスメンバーがルックアップクラスにアクセスできない、またはルックアップオブジェクトが信頼できないため、ルックアップは失敗する可能性がありますメンバーにアクセスします。これらのいずれの場合でも、試行されたルックアップから &lt;code&gt;ReflectiveOperationException&lt;/code&gt; がスローされます。正確なクラスは次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="df039c113f004ecf80f82c293fc0ad048fa8ba6e" translate="yes" xml:space="preserve">
          <source>A lookup class which needs to create method handles will call &lt;a href=&quot;methodhandles#lookup()&quot;&gt;&lt;code&gt;MethodHandles.lookup&lt;/code&gt;&lt;/a&gt; to create a factory for itself. When the &lt;code&gt;Lookup&lt;/code&gt; factory object is created, the identity of the lookup class is determined, and securely stored in the &lt;code&gt;Lookup&lt;/code&gt; object. The lookup class (or its delegates) may then use factory methods on the &lt;code&gt;Lookup&lt;/code&gt; object to create method handles for access-checked members. This includes all methods, constructors, and fields which are allowed to the lookup class, even private ones.</source>
          <target state="translated">メソッドハンドルを作成する必要があるルックアップクラスは、&lt;a href=&quot;methodhandles#lookup()&quot;&gt; &lt;code&gt;MethodHandles.lookup&lt;/code&gt; &lt;/a&gt;を呼び出して、それ自体のファクトリを作成します。ときに &lt;code&gt;Lookup&lt;/code&gt; ファクトリオブジェクトが作成され、ルックアップクラスのアイデンティティが決定され、安全に格納された &lt;code&gt;Lookup&lt;/code&gt; オブジェクト。次に、ルックアップクラス（またはそのデリゲート）は、 &lt;code&gt;Lookup&lt;/code&gt; オブジェクトのファクトリメソッドを使用して、アクセスチェックされたメンバーのメソッドハンドルを作成できます。これには、プライベートなものも含め、ルックアップクラスに許可されているすべてのメソッド、コンストラクター、およびフィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="0b8aa7e616f29eacc7bbf003997b65bbb16a9d5b" translate="yes" xml:space="preserve">
          <source>A lookup class which needs to create method handles will call &lt;a href=&quot;methodhandles#lookup--&quot;&gt;&lt;code&gt;MethodHandles.lookup&lt;/code&gt;&lt;/a&gt; to create a factory for itself. When the &lt;code&gt;Lookup&lt;/code&gt; factory object is created, the identity of the lookup class is determined, and securely stored in the &lt;code&gt;Lookup&lt;/code&gt; object. The lookup class (or its delegates) may then use factory methods on the &lt;code&gt;Lookup&lt;/code&gt; object to create method handles for access-checked members. This includes all methods, constructors, and fields which are allowed to the lookup class, even private ones.</source>
          <target state="translated">メソッドハンドルを作成する必要があるルックアップクラスは、&lt;a href=&quot;methodhandles#lookup--&quot;&gt; &lt;code&gt;MethodHandles.lookup&lt;/code&gt; &lt;/a&gt;を呼び出して、自身のファクトリを作成します。ときに &lt;code&gt;Lookup&lt;/code&gt; ファクトリオブジェクトが作成され、ルックアップクラスのアイデンティティが決定され、安全に格納された &lt;code&gt;Lookup&lt;/code&gt; オブジェクト。ルックアップクラス（またはそのデリゲート）は、 &lt;code&gt;Lookup&lt;/code&gt; オブジェクトのファクトリメソッドを使用して、アクセスチェックされたメンバーのメソッドハンドルを作成します。これには、プライベートクラスも含め、ルックアップクラスで許可されているすべてのメソッド、コンストラクタ、およびフィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="407af2e7c55e4f2c6720b8870c4e549db987d678" translate="yes" xml:space="preserve">
          <source>A low-level event that indicates that a window has changed its status.</source>
          <target state="translated">ウィンドウのステータスが変更されたことを示す低レベルのイベント。</target>
        </trans-unit>
        <trans-unit id="91b8a97945ca1e2eee85694320a0fa0331897881" translate="yes" xml:space="preserve">
          <source>A low-level event that indicates that a window has changed its status. This low-level event is generated by a Window object when it is opened, closed, activated, deactivated, iconified, or deiconified, or when focus is transferred into or out of the Window.</source>
          <target state="translated">ウィンドウのステータスが変更されたことを示す低レベル イベント。この低レベルイベントは、ウィンドウオブジェクトが開かれたとき、閉じられたとき、アクティブ化されたとき、非アクティブ化されたとき、アイコン化されたとき、またはアイコン化されたとき、またはアイコン化されていないとき、またはフォーカスがウィンドウの中に転送されたときに、ウィンドウオブジェクトによって生成されます。</target>
        </trans-unit>
        <trans-unit id="cb079744a24a989b3684b56495bdf7568cb65664" translate="yes" xml:space="preserve">
          <source>A low-level event which indicates that a Component has gained or lost the input focus.</source>
          <target state="translated">コンポーネントが入力フォーカスを獲得した、または失ったことを示す低レベルのイベント。</target>
        </trans-unit>
        <trans-unit id="f9789d3e89bc57b7e00b92b8d2f77ca87648e86e" translate="yes" xml:space="preserve">
          <source>A low-level event which indicates that a Component has gained or lost the input focus. This low-level event is generated by a Component (such as a TextField). The event is passed to every &lt;code&gt;FocusListener&lt;/code&gt; or &lt;code&gt;FocusAdapter&lt;/code&gt; object which registered to receive such events using the Component's &lt;code&gt;addFocusListener&lt;/code&gt; method. (&lt;code&gt;FocusAdapter&lt;/code&gt; objects implement the &lt;code&gt;FocusListener&lt;/code&gt; interface.) Each such listener object gets this &lt;code&gt;FocusEvent&lt;/code&gt; when the event occurs.</source>
          <target state="translated">コンポーネントが入力フォーカスを獲得または喪失したことを示す低レベルのイベント。この低レベルのイベントは、コンポーネント（TextFieldなど）によって生成されます。イベントは、コンポーネントの &lt;code&gt;addFocusListener&lt;/code&gt; メソッドを使用してそのようなイベントを受信するように登録されたすべての &lt;code&gt;FocusListener&lt;/code&gt; または &lt;code&gt;FocusAdapter&lt;/code&gt; オブジェクトに渡されます。 （ &lt;code&gt;FocusAdapter&lt;/code&gt; オブジェクトは &lt;code&gt;FocusListener&lt;/code&gt; インターフェースを実装します。）このような各リスナーオブジェクトは、イベントが発生したときにこの &lt;code&gt;FocusEvent&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="c46a21e048aa495dbdcbb94896c23056986c3457" translate="yes" xml:space="preserve">
          <source>A low-level event which indicates that a component moved, changed size, or changed visibility (also, the root class for the other component-level events).</source>
          <target state="translated">コンポーネントが移動したこと、サイズが変更されたこと、または可視性が変更されたことを示す低レベルのイベント(他のコンポーネントレベルのイベントのルートクラスでもあります)。</target>
        </trans-unit>
        <trans-unit id="649f205485b73cc811bcec91033bc6c95cd527be" translate="yes" xml:space="preserve">
          <source>A low-level event which indicates that a container's contents changed because a component was added or removed.</source>
          <target state="translated">コンポーネントが追加または削除されたためにコンテナの内容が変更されたことを示す低レベルのイベント。</target>
        </trans-unit>
        <trans-unit id="ff9b7ac08540e6b07272d4f6ab622d7f00d9e75a" translate="yes" xml:space="preserve">
          <source>A lower value (eg 100) corresponds to higher contrast text when displaying dark text on a light background.</source>
          <target state="translated">値が低いほど(例:100)、明るい背景に暗いテキストを表示する際にコントラストの高いテキストに対応します。</target>
        </trans-unit>
        <trans-unit id="8153cb1f4f8081e17bb4e5f6258e0dc551189059" translate="yes" xml:space="preserve">
          <source>A lower-case alphabetic character: &lt;code&gt;[a-z]&lt;/code&gt;</source>
          <target state="translated">小文字のアルファベット文字： &lt;code&gt;[a-z]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54d053dd5de98d77f961dfe613bd1e3a4b83129d" translate="yes" xml:space="preserve">
          <source>A lowercase character:&lt;code&gt;\p{IsLowercase}&lt;/code&gt;</source>
          <target state="translated">小文字： &lt;code&gt;\p{IsLowercase}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0c5f1bada31724a95975e7fb4646121c67bb998" translate="yes" xml:space="preserve">
          <source>A management application and a platform MBeanServer of a running virtual machine can interoperate without requiring classes used by the platform MXBean interfaces. The data types being transmitted between the JMX connector server and the connector client are JMX &lt;a href=&quot;../../../javax/management/openmbean/opentype&quot;&gt;open types&lt;/a&gt; and this allows interoperation across versions. A data type used by the MXBean interfaces are mapped to an open type when being accessed via MBeanServer interface. See the &lt;a href=&quot;../../../javax/management/mxbean#MXBean-spec&quot;&gt; MXBean&lt;/a&gt; specification for details.</source>
          <target state="translated">実行中の仮想マシンの管理アプリケーションとプラットフォームMBeanServerは、プラットフォームMXBeanインターフェースで使用されるクラスを必要とせずに相互運用できます。JMXコネクタサーバーとコネクタクライアントの間で送信されるデータタイプはJMX &lt;a href=&quot;../../../javax/management/openmbean/opentype&quot;&gt;オープンタイプで&lt;/a&gt;あり、これによりバージョン間の相互運用が可能になります。MXBeanインターフェースで使用されるデータ型は、MBeanServerインターフェース経由でアクセスされるときにオープンタイプにマップされます。詳細については、&lt;a href=&quot;../../../javax/management/mxbean#MXBean-spec&quot;&gt;MXBean&lt;/a&gt;仕様を参照してください。</target>
        </trans-unit>
        <trans-unit id="32d77cea074b43a48ea99dfb0273fed364568d22" translate="yes" xml:space="preserve">
          <source>A management application and a platform MBeanServer of a running virtual machine can interoperate without requiring classes used by the platform MXBean interfaces. The data types being transmitted between the JMX connector server and the connector client are JMX &lt;a href=&quot;../../../javax/management/openmbean/opentype&quot;&gt;open types&lt;/a&gt; and this allows interoperation across versions. A data type used by the MXBean interfaces are mapped to an open type when being accessed via MBeanServer interface. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/javax/management/MXBean.html#MXBean-spec&quot;&gt; MXBean&lt;/a&gt; specification for details.</source>
          <target state="translated">実行中の仮想マシンの管理アプリケーションとプラットフォームMBeanServerは、プラットフォームMXBeanインターフェイスで使用されるクラスを必要とせずに相互運用できます。 JMXコネクタサーバーとコネクタクライアント間で送信されるデータ型はJMX&lt;a href=&quot;../../../javax/management/openmbean/opentype&quot;&gt;オープン型で&lt;/a&gt;あり、これによりバージョン間の相互運用が可能になります。 MXBeanインターフェースで使用されるデータ型は、MBeanServerインターフェースを介してアクセスされるときにオープン型にマップされます。詳細については、&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/javax/management/MXBean.html#MXBean-spec&quot;&gt;MXBean&lt;/a&gt;仕様を参照してください。</target>
        </trans-unit>
        <trans-unit id="47fa0cfd58919cdac5200faaeab4cd1fdd71215c" translate="yes" xml:space="preserve">
          <source>A mandated construct is one that is not explicitly declared in the source code, but whose presence is mandated by the specification.</source>
          <target state="translated">義務化された構造体とは、ソースコードで明示的に宣言されていないが、仕様によって存在が義務化されている構造体のことです。</target>
        </trans-unit>
        <trans-unit id="bd336924782d5297e51e282da651c828594dafdf" translate="yes" xml:space="preserve">
          <source>A mandated construct is one that is not explicitly declared in the source code, but whose presence is mandated by the specification. Such a construct is said to be implicitly declared. One example of a mandated element is a &lt;em&gt;default constructor&lt;/em&gt; in a class that contains no explicit constructor declarations. Another example of a mandated construct is an implicitly declared &lt;em&gt;container annotation&lt;/em&gt; used to hold multiple annotations of a repeatable annotation type.</source>
          <target state="translated">必須の構成は、ソースコードで明示的に宣言されていないものですが、その存在は仕様によって義務付けられています。このような構成は、暗黙的に宣言されていると言われます。必須要素の一例は、明示的なコンストラクター宣言を含まないクラスの&lt;em&gt;デフォルトコンストラクターです&lt;/em&gt;。必須の構成の別の例は、繰り返し可能なアノテーションタイプの複数のアノテーションを保持するために使用さ&lt;em&gt;れる&lt;/em&gt;暗黙的に宣言された&lt;em&gt;コンテナアノテーション&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="523acc2618e298537fac6c6db657235420efeba2" translate="yes" xml:space="preserve">
          <source>A map entry (key-value pair).</source>
          <target state="translated">マップエントリ(キーと値のペア)。</target>
        </trans-unit>
        <trans-unit id="f8154228f438e29a074d401ba3f6df78033cad84" translate="yes" xml:space="preserve">
          <source>A map entry (key-value pair). The &lt;code&gt;Map.entrySet&lt;/code&gt; method returns a collection-view of the map, whose elements are of this class. The</source>
          <target state="translated">マップエントリ（キーと値のペア）。 &lt;code&gt;Map.entrySet&lt;/code&gt; の方法は、要素このクラスのあるマップのコレクションビューを返します。の</target>
        </trans-unit>
        <trans-unit id="734ae33840ce4ece035615ca1a3162f9e1c88c0c" translate="yes" xml:space="preserve">
          <source>A map from single character keys to string values, indicating extensions apart from language identification. The extensions in &lt;code&gt;Locale&lt;/code&gt; implement the semantics and syntax of BCP 47 extension subtags and private use subtags. The extensions are case insensitive, but &lt;code&gt;Locale&lt;/code&gt; canonicalizes all extension keys and values to lower case. Note that extensions cannot have empty values.</source>
          <target state="translated">1文字のキーから文字列値へのマップ。言語識別以外の拡張子を示します。拡張 &lt;code&gt;Locale&lt;/code&gt; BCP 47、拡張サブタグと私的使用のサブタグの意味と構文を実装しています。拡張機能は大文字と小文字を区別しませんが、 &lt;code&gt;Locale&lt;/code&gt; すべての拡張キーと値を小文字に正規化します。拡張機能に空の値を含めることはできません。</target>
        </trans-unit>
        <trans-unit id="f4fac118eaa61bd3381786afc5506fae5041565a" translate="yes" xml:space="preserve">
          <source>A map of the attributes of the &lt;code&gt;MLET&lt;/code&gt; tag and their values.</source>
          <target state="translated">&lt;code&gt;MLET&lt;/code&gt; タグの属性とその値のマップ。</target>
        </trans-unit>
        <trans-unit id="ecca0e69af4452740453796ec2257a6e8d86c1b0" translate="yes" xml:space="preserve">
          <source>A map of zone overrides to enable the short time-zone names to be used.</source>
          <target state="translated">短いタイムゾーン名を使用できるようにするためのゾーンオーバーライドのマップ。</target>
        </trans-unit>
        <trans-unit id="125d5f648fdc6b3b583770be46f92225acbb6df2" translate="yes" xml:space="preserve">
          <source>A mapped byte buffer and the file mapping that it represents remain valid until the buffer itself is garbage-collected.</source>
          <target state="translated">マッピングされたバイトバッファとそれを表すファイルマッピングは、バッファ自体がゴミ箱に回収されるまで有効です。</target>
        </trans-unit>
        <trans-unit id="1d8b4897e57fdeecad1d940f01be5b12c7f07121" translate="yes" xml:space="preserve">
          <source>A mapping of key/value pairs, all of whose keys are &lt;code&gt;Strings&lt;/code&gt;.</source>
          <target state="translated">すべてのキーが &lt;code&gt;Strings&lt;/code&gt; であるキー/値ペアのマッピング。</target>
        </trans-unit>
        <trans-unit id="249f4e6247696ef79d77f9632a8840e624e39fa5" translate="yes" xml:space="preserve">
          <source>A mapping, once established, is not dependent upon the file channel that was used to create it. Closing the channel, in particular, has no effect upon the validity of the mapping.</source>
          <target state="translated">一度確立されたマッピングは、それを作成するために使用されたファイルチャネルに依存しません。特にチャネルを閉じても、マッピングの有効性には影響しません。</target>
        </trans-unit>
        <trans-unit id="1cf7ecf320778fa8570ef98cef4c60a4d8eee590" translate="yes" xml:space="preserve">
          <source>A marker interface for &lt;code&gt;KeyStore&lt;/code&gt; entry types.</source>
          <target state="translated">&lt;code&gt;KeyStore&lt;/code&gt; エントリタイプのマーカーインターフェイス。</target>
        </trans-unit>
        <trans-unit id="20f1eb54a1504ea4d0329f700bd25ca65410acf6" translate="yes" xml:space="preserve">
          <source>A marker interface for &lt;code&gt;KeyStore&lt;/code&gt;&lt;a href=&quot;#load(java.security.KeyStore.LoadStoreParameter)&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#store(java.security.KeyStore.LoadStoreParameter)&quot;&gt;&lt;code&gt;store&lt;/code&gt;&lt;/a&gt; parameters.</source>
          <target state="translated">&lt;code&gt;KeyStore&lt;/code&gt; の&lt;a href=&quot;#load(java.security.KeyStore.LoadStoreParameter)&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#store(java.security.KeyStore.LoadStoreParameter)&quot;&gt; &lt;code&gt;store&lt;/code&gt; &lt;/a&gt;パラメータのマーカーインターフェイス。</target>
        </trans-unit>
        <trans-unit id="16110f246a5bef6d146026b68db4023a20eb468c" translate="yes" xml:space="preserve">
          <source>A marker interface for &lt;code&gt;KeyStore&lt;/code&gt;&lt;a href=&quot;keystore#load(java.security.KeyStore.LoadStoreParameter)&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;keystore#store(java.security.KeyStore.LoadStoreParameter)&quot;&gt;&lt;code&gt;store&lt;/code&gt;&lt;/a&gt; parameters.</source>
          <target state="translated">&lt;code&gt;KeyStore&lt;/code&gt; の&lt;a href=&quot;keystore#load(java.security.KeyStore.LoadStoreParameter)&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;keystore#store(java.security.KeyStore.LoadStoreParameter)&quot;&gt; &lt;code&gt;store&lt;/code&gt; &lt;/a&gt;パラメータのマーカーインターフェイス。</target>
        </trans-unit>
        <trans-unit id="4f97d254de94be9955d0374c391792c8cd03cd9a" translate="yes" xml:space="preserve">
          <source>A marker interface for &lt;code&gt;KeyStore&lt;/code&gt;&lt;a href=&quot;keystore#load-java.security.KeyStore.LoadStoreParameter-&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;keystore#store-java.security.KeyStore.LoadStoreParameter-&quot;&gt;&lt;code&gt;store&lt;/code&gt;&lt;/a&gt; parameters.</source>
          <target state="translated">&lt;code&gt;KeyStore&lt;/code&gt; &lt;a href=&quot;keystore#load-java.security.KeyStore.LoadStoreParameter-&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;keystore#store-java.security.KeyStore.LoadStoreParameter-&quot;&gt; &lt;code&gt;store&lt;/code&gt; &lt;/a&gt;パラメータのマーカーインターフェイス。</target>
        </trans-unit>
        <trans-unit id="b87ab39dbbc70f26edc0d8e9c3fcd2b14e207095" translate="yes" xml:space="preserve">
          <source>A marker interface for keystore protection parameters.</source>
          <target state="translated">キーストア保護パラメータ用のマーカーインターフェース。</target>
        </trans-unit>
        <trans-unit id="f0a2bf301a5de3c70e89b16dc01e8dabc98a1261" translate="yes" xml:space="preserve">
          <source>A marker interface for parameters used in various &lt;code&gt;SecureRandom&lt;/code&gt; methods.</source>
          <target state="translated">さまざまな &lt;code&gt;SecureRandom&lt;/code&gt; メソッドで使用されるパラメーターのマーカーインターフェイス。</target>
        </trans-unit>
        <trans-unit id="0035f278ed0acbc8c02637e9be7a201b90f6b87c" translate="yes" xml:space="preserve">
          <source>A marker interface for the end of the document</source>
          <target state="translated">文書の終わりのためのマーカーインターフェース</target>
        </trans-unit>
        <trans-unit id="9eff216b480311bcbb9834bfd9e89e5bb1ab95d0" translate="yes" xml:space="preserve">
          <source>A marker interface identifying asynchronous tasks produced by &lt;code&gt;async&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; メソッドによって生成される非同期タスクを識別するマーカーインターフェイス。</target>
        </trans-unit>
        <trans-unit id="c7f8f418ddcef0be0c8c3683d4d5c10eac3e4d5a" translate="yes" xml:space="preserve">
          <source>A marker interface identifying asynchronous tasks produced by &lt;code&gt;async&lt;/code&gt; methods. This may be useful for monitoring, debugging, and tracking asynchronous activities.</source>
          <target state="translated">&lt;code&gt;async&lt;/code&gt; メソッドによって生成される非同期タスクを識別するマーカーインターフェイス。これは、非同期アクティビティの監視、デバッグ、追跡に役立ちます。</target>
        </trans-unit>
        <trans-unit id="0df196a232a0c0909bbcc3867add7c3a9426e08b" translate="yes" xml:space="preserve">
          <source>A marker to indicate that all levels are disabled.</source>
          <target state="translated">すべてのレベルが無効になっていることを示すマーカー。</target>
        </trans-unit>
        <trans-unit id="6f716b42aa654cf1f62f9e219ef89741ce307485" translate="yes" xml:space="preserve">
          <source>A marker to indicate that all levels are disabled. This level &lt;a href=&quot;#getSeverity()&quot;&gt;severity&lt;/a&gt; is &lt;a href=&quot;integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべてのレベルが無効になっていることを示すマーカー。このレベルの&lt;a href=&quot;#getSeverity()&quot;&gt;重大度&lt;/a&gt;は&lt;a href=&quot;integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="4dd00300c1d1d8eca3dacf85fa1c12fafbc1273d" translate="yes" xml:space="preserve">
          <source>A marker to indicate that all levels are enabled.</source>
          <target state="translated">すべてのレベルが有効であることを示すマーカ。</target>
        </trans-unit>
        <trans-unit id="2ac454e10702b15ffe806cab0efb7dbec9e36eac" translate="yes" xml:space="preserve">
          <source>A marker to indicate that all levels are enabled. This level &lt;a href=&quot;#getSeverity()&quot;&gt;severity&lt;/a&gt; is &lt;a href=&quot;integer#MIN_VALUE&quot;&gt;&lt;code&gt;Integer.MIN_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すべてのレベルが有効になっていることを示すマーカー。このレベルの&lt;a href=&quot;#getSeverity()&quot;&gt;重大度&lt;/a&gt;は&lt;a href=&quot;integer#MIN_VALUE&quot;&gt; &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="f09198edec762eb31b9241c7fd2744d522fe1d31" translate="yes" xml:space="preserve">
          <source>A mask for supported flags from getLayoutFlags.</source>
          <target state="translated">getLayoutFlagsからサポートされているフラグのマスク。</target>
        </trans-unit>
        <trans-unit id="44f4c50db580441785344b65adcc29714114f5ba" translate="yes" xml:space="preserve">
          <source>A mask for supported flags from getLayoutFlags. Only bits covered by the mask should be tested.</source>
          <target state="translated">getLayoutFlagsからサポートされているフラグのマスク。マスクでカバーされているビットのみがテストされます。</target>
        </trans-unit>
        <trans-unit id="a6aa6c3b1414a543907b16897d2cffac1cdfd599" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating auto mode.</source>
          <target state="translated">自動モードを示す &quot;Flash &quot;タグと一緒に使用するマスク。</target>
        </trans-unit>
        <trans-unit id="1f7463765c393caefbb1a2aa59e465e56027565d" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating compulsory flash firing mode.</source>
          <target state="translated">フラッシュ」タグと一緒に使用するマスクで、強制的にフラッシュを発射するモードを示します。</target>
        </trans-unit>
        <trans-unit id="11008a1b9bed07bf81ef2b8d48ca49a118d4c819" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating compulsory flash suppression mode.</source>
          <target state="translated">Flash &quot;タグと一緒に使用されるマスクで、強制的にフラッシュ抑制モードであることを示します。</target>
        </trans-unit>
        <trans-unit id="ea8c4d60b7a80668ef134ae6f663c096060be6f7" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating no flash function present.</source>
          <target state="translated">フラッシュ機能がないことを示す「フラッシュ」タグと一緒に使用するマスク。</target>
        </trans-unit>
        <trans-unit id="c482ad4af56faa018ee9da7695d2529ba3cd6a95" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating red-eye reduction supported.</source>
          <target state="translated">Flash&quot; タグで使用されるマスクで、赤目軽減がサポートされていることを示します。</target>
        </trans-unit>
        <trans-unit id="1b1ce035712ebb0fe55b061a87b150f11bd165ff" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating strobe return light detected.</source>
          <target state="translated">ストロボの戻り光を検出したことを示す「フラッシュ」タグと一緒に使用するマスクです。</target>
        </trans-unit>
        <trans-unit id="85fcf5935c6bb82d05629c0f5dc8bff64e7d5f96" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating strobe return light not detected.</source>
          <target state="translated">ストロボの戻り光が検出されていないことを示す「フラッシュ」タグと一緒に使用するマスクです。</target>
        </trans-unit>
        <trans-unit id="4cbbbd24270b7a478c98d814d7038afbf573187b" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating that the flash fired.</source>
          <target state="translated">フラッシュが発射されたことを示す &quot;Flash &quot;タグと一緒に使用されるマスク。</target>
        </trans-unit>
        <trans-unit id="21d11dc894039b2eac563c4ae59bf29edff669e4" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;NewSubfileType&quot; tag.</source>
          <target state="translated">NewSubfileType&quot; タグで使用するマスク。</target>
        </trans-unit>
        <trans-unit id="7fa06c979421786ebcc1a98729df221acd565c4e" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;T4Options&quot; tag.</source>
          <target state="translated">T4Options &quot;タグで使用するマスク。</target>
        </trans-unit>
        <trans-unit id="c2c917ee880f3b775b6575fc987929825f43eed2" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;T6Options&quot; tag.</source>
          <target state="translated">T6Options &quot;タグで使用するマスク。</target>
        </trans-unit>
        <trans-unit id="516f31ddfd8224efe35b11d66b1e0e8c19b3ab29" translate="yes" xml:space="preserve">
          <source>A master or slave synchronization mode that specifies the use of MIDI Time Code.</source>
          <target state="translated">MIDIタイムコードの使用を指定するマスターまたはスレーブの同期モード。</target>
        </trans-unit>
        <trans-unit id="1a34b881770391e5c98b3f4b648f43d1c9c9288b" translate="yes" xml:space="preserve">
          <source>A master or slave synchronization mode that specifies the use of MIDI Time Code. If this mode is used as the master sync mode, the sequencer gets its timing information from MIDI Time Code messages. This mode only applies as the master sync mode to sequencers that are also MIDI receivers. If this mode is used as the slave sync mode, the sequencer sends MIDI Time Code messages to its receiver. (See the MIDI 1.0 Detailed Specification for a description of MIDI Time Code.)</source>
          <target state="translated">MIDI タイムコードの使用を指定するマスターまたはスレーブの同期モードです。このモードがマスター同期モードとして使用された場合、シーケンサはMIDIタイムコードメッセージからタイミング情報を取得します。このモードは MIDI レシーバーでもあるシーケンサにのみ適用されます。このモードをスレーブ同期モードとして使用すると、シーケンサはレシーバーに MIDI タイムコードメッセージを送信します。MIDI タイムコードの説明は MIDI 1.0 詳細仕様書を参照してください。</target>
        </trans-unit>
        <trans-unit id="8b74dcfa4d11643692dd56060db98e20ccb865d3" translate="yes" xml:space="preserve">
          <source>A master or slave synchronization mode that specifies the use of MIDI clock messages.</source>
          <target state="translated">MIDIクロックメッセージの使用を指定するマスターまたはスレーブの同期モード。</target>
        </trans-unit>
        <trans-unit id="f1c1acbd4422c8096f1ccd850fc6f1437ccd7db8" translate="yes" xml:space="preserve">
          <source>A master or slave synchronization mode that specifies the use of MIDI clock messages. If this mode is used as the master sync mode, the sequencer gets its timing information from system real-time MIDI clock messages. This mode only applies as the master sync mode for sequencers that are also MIDI receivers. If this is the slave sync mode, the sequencer sends system real-time MIDI clock messages to its receiver. MIDI clock messages are sent at a rate of 24 per quarter note.</source>
          <target state="translated">MIDI クロックメッセージの使用を指定するマスターまたはスレーブ同期モードです。このモードをマスター同期モードとして使用すると、シーケンサはシステムのリアルタイム MIDI クロックメッセージからタイミング情報を取得します。このモードは MIDI レシーバーでもあるシーケンサーのマスター同期モードとしてのみ適用されます。このモードがスレーブ同期モードの場合、シーケンサはシステムリアルタイムの MIDI クロックメッセージをレシーバーに送信します。MIDI クロックメッセージは四分音符ごとに 24 の割合で送信されます。</target>
        </trans-unit>
        <trans-unit id="dccd692bcd77b8b3b096b3b3427fbdfd4efedd8e" translate="yes" xml:space="preserve">
          <source>A master synchronization mode that makes the sequencer get its timing information from its internal clock.</source>
          <target state="translated">シーケンサの内部クロックからタイミング情報を取得するマスター同期モード。</target>
        </trans-unit>
        <trans-unit id="12d3b27856e9bd36d1a97eaae0372f0f8a17e986" translate="yes" xml:space="preserve">
          <source>A master synchronization mode that makes the sequencer get its timing information from its internal clock. This is not a legal slave sync mode.</source>
          <target state="translated">シーケンサが内部クロックからタイミング情報を取得するマスター同期モード。これは合法的なスレーブ同期モードではありません。</target>
        </trans-unit>
        <trans-unit id="7eb366aa08c38a5f3036184a27210e6054eae460" translate="yes" xml:space="preserve">
          <source>A match column can be set in two ways:</source>
          <target state="translated">マッチカラムは2つの方法で設定することができます。</target>
        </trans-unit>
        <trans-unit id="e8d49a16c11b345dbd45845c1fa0699317425664" translate="yes" xml:space="preserve">
          <source>A matcher finds matches in a subset of its input called the</source>
          <target state="translated">マッチャーは、入力のサブセットである</target>
        </trans-unit>
        <trans-unit id="758a4d9f7a90b6649a7891a5e92bf4733aec59aa" translate="yes" xml:space="preserve">
          <source>A matcher is created from a pattern by invoking the pattern's &lt;a href=&quot;pattern#matcher(java.lang.CharSequence)&quot;&gt;&lt;code&gt;matcher&lt;/code&gt;&lt;/a&gt; method. Once created, a matcher can be used to perform three different kinds of match operations:</source>
          <target state="translated">マッチャーは、パターンの&lt;a href=&quot;pattern#matcher(java.lang.CharSequence)&quot;&gt; &lt;code&gt;matcher&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによってパターンから作成されます。作成されたマッチャーは、次の3種類の照合操作を実行するために使用できます。</target>
        </trans-unit>
        <trans-unit id="2beb95eaaa4f46d10d05eb1b5ffd8b1199e910da" translate="yes" xml:space="preserve">
          <source>A matcher is created from a pattern by invoking the pattern's &lt;a href=&quot;pattern#matcher-java.lang.CharSequence-&quot;&gt;&lt;code&gt;matcher&lt;/code&gt;&lt;/a&gt; method. Once created, a matcher can be used to perform three different kinds of match operations:</source>
          <target state="translated">マッチャーは、パターンの&lt;a href=&quot;pattern#matcher-java.lang.CharSequence-&quot;&gt; &lt;code&gt;matcher&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによってパターンから作成されます。作成されたマッチャーを使用して、3種類の一致操作を実行できます。</target>
        </trans-unit>
        <trans-unit id="6b606d69b6dac4199a2011b1286becb842eabc7e" translate="yes" xml:space="preserve">
          <source>A matcher may be reset explicitly by invoking its &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method or, if a new input sequence is desired, its &lt;a href=&quot;#reset(java.lang.CharSequence)&quot;&gt;&lt;code&gt;reset(CharSequence)&lt;/code&gt;&lt;/a&gt; method. Resetting a matcher discards its explicit state information and sets the append position to zero.</source>
          <target state="translated">マッチャーは、&lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すか、新しい入力シーケンスが必要な場合は&lt;a href=&quot;#reset(java.lang.CharSequence)&quot;&gt; &lt;code&gt;reset(CharSequence)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、明示的にリセットできます。マッチャーをリセットすると、その明示的な状態情報が破棄され、追加位置がゼロに設定されます。</target>
        </trans-unit>
        <trans-unit id="ec1706ed07cebe204549527211631a07768594eb" translate="yes" xml:space="preserve">
          <source>A matcher may be reset explicitly by invoking its &lt;a href=&quot;matcher#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method or, if a new input sequence is desired, its &lt;a href=&quot;matcher#reset-java.lang.CharSequence-&quot;&gt;&lt;code&gt;reset(CharSequence)&lt;/code&gt;&lt;/a&gt; method. Resetting a matcher discards its explicit state information and sets the append position to zero.</source>
          <target state="translated">マッチャーは、&lt;a href=&quot;matcher#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで明示的にリセットできます。新しい入力シーケンスが必要な場合は、&lt;a href=&quot;matcher#reset-java.lang.CharSequence-&quot;&gt; &lt;code&gt;reset(CharSequence)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すこともできます。マッチャーをリセットすると、明示的な状態情報が破棄され、追加位置がゼロに設定されます。</target>
        </trans-unit>
        <trans-unit id="7621ee330212390d04d603c1e9f1fcdf7cbe24ad" translate="yes" xml:space="preserve">
          <source>A matte border UI resource.</source>
          <target state="translated">マットなボーダーのUIリソース。</target>
        </trans-unit>
        <trans-unit id="b452eaf2abe71ee3567f668d2fad17d07381a5e7" translate="yes" xml:space="preserve">
          <source>A membership key is valid upon creation and remains valid until the membership is dropped by invoking the &lt;a href=&quot;#drop()&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method, or the channel is closed. The validity of the membership key may be tested by invoking its &lt;a href=&quot;#isValid()&quot;&gt;&lt;code&gt;isValid&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">メンバーシップキーは作成時に有効であり、&lt;a href=&quot;#drop()&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してメンバーシップを削除するか、チャネルを閉じるまで有効です。メンバーシップキーの有効性は、&lt;a href=&quot;#isValid()&quot;&gt; &lt;code&gt;isValid&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことでテストできます。</target>
        </trans-unit>
        <trans-unit id="aac5131474a1f3893bb80ebe32ae2b7a9c14944f" translate="yes" xml:space="preserve">
          <source>A membership key is valid upon creation and remains valid until the membership is dropped by invoking the &lt;a href=&quot;membershipkey#drop--&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method, or the channel is closed. The validity of the membership key may be tested by invoking its &lt;a href=&quot;membershipkey#isValid--&quot;&gt;&lt;code&gt;isValid&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">メンバーシップキーは、作成時に有効であり、&lt;a href=&quot;membershipkey#drop--&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してメンバーシップが削除されるか、チャネルが閉じられるまで有効です。メンバーシップキーの有効性は、その&lt;a href=&quot;membershipkey#isValid--&quot;&gt; &lt;code&gt;isValid&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによってテストできます。</target>
        </trans-unit>
        <trans-unit id="87ff0d72d9055ee787db74e634bab1ba0c390134" translate="yes" xml:space="preserve">
          <source>A membership key may represent a membership to receive all datagrams sent to the group, or it may be &lt;em&gt;source-specific&lt;/em&gt;, meaning that it represents a membership that receives only datagrams from a specific source address. Whether or not a membership key is source-specific may be determined by invoking its &lt;a href=&quot;#sourceAddress()&quot;&gt;&lt;code&gt;sourceAddress&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">メンバーシップキーは、グループに送信されたすべてのデータグラムを受信するメンバーシップを表す場合もあれば、&lt;em&gt;ソース固有の&lt;/em&gt;場合もあります。つまり、特定の送信元アドレスからデータグラムのみを受信するメンバーシップを表します。メンバーシップキーがソース固有であるかどうかは、その&lt;a href=&quot;#sourceAddress()&quot;&gt; &lt;code&gt;sourceAddress&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで判断できます。</target>
        </trans-unit>
        <trans-unit id="92540732008e2be4a329a53daa253b9bb615558c" translate="yes" xml:space="preserve">
          <source>A membership key may represent a membership to receive all datagrams sent to the group, or it may be &lt;em&gt;source-specific&lt;/em&gt;, meaning that it represents a membership that receives only datagrams from a specific source address. Whether or not a membership key is source-specific may be determined by invoking its &lt;a href=&quot;membershipkey#sourceAddress--&quot;&gt;&lt;code&gt;sourceAddress&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">メンバーシップキーは、グループに送信されたすべてのデータグラムを受信するためのメンバーシップを表す場合と、&lt;em&gt;source-specificの&lt;/em&gt;場合があります。つまり、特定の送信元アドレスからデータグラムのみを受信するメンバーシップを表します。メンバーシップキーがソース固有であるかどうかは、その&lt;a href=&quot;membershipkey#sourceAddress--&quot;&gt; &lt;code&gt;sourceAddress&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで判断できます。</target>
        </trans-unit>
        <trans-unit id="759c3acd1cbf2f8d514c805241af3bdaa1b340bb" translate="yes" xml:space="preserve">
          <source>A memory manager is responsible for managing one or more memory pools. The garbage collector is one type of memory manager responsible for reclaiming memory occupied by unreachable objects. A Java virtual machine may have one or more memory managers. It may add or remove memory managers during execution. A memory pool can be managed by more than one memory manager.</source>
          <target state="translated">メモリマネージャは、1 つ以上のメモリプールを管理する責任があります。ガベージコレクタは、到達不可能なオブジェクトによって占有されたメモリの回収を担当するメモリマネージャの一種である。Java仮想マシンは、1つまたは複数のメモリマネージャを持つことができる。実行中にメモリマネージャを追加したり削除したりすることができます。1 つのメモリプールは、複数のメモリマネージャによって管理されることがあります。</target>
        </trans-unit>
        <trans-unit id="bf21ff485998503fc83eb613e59967f6d9bc4ba8" translate="yes" xml:space="preserve">
          <source>A memory notification is emitted by &lt;a href=&quot;memorymxbean&quot;&gt;&lt;code&gt;MemoryMXBean&lt;/code&gt;&lt;/a&gt; when the Java virtual machine detects that the memory usage of a memory pool is exceeding a threshold value. The notification emitted will contain the memory notification information about the detected condition:</source>
          <target state="translated">メモリ通知は、Java仮想マシンがメモリプールのメモリ使用量がしきい値を超えていることを検出すると、&lt;a href=&quot;memorymxbean&quot;&gt; &lt;code&gt;MemoryMXBean&lt;/code&gt; &lt;/a&gt;によって発行されます。送信される通知には、検出された状態に関するメモリ通知情報が含まれます。</target>
        </trans-unit>
        <trans-unit id="8ab28529f854079d6bca735fc48ddf13983bb582" translate="yes" xml:space="preserve">
          <source>A memory pool has the following attributes:</source>
          <target state="translated">メモリプールは以下の属性を持っています。</target>
        </trans-unit>
        <trans-unit id="05dcfc0734c44f5245f5a089b1b448dece950547" translate="yes" xml:space="preserve">
          <source>A memory pool represents a memory area that the Java virtual machine manages. The Java virtual machine has at least one memory pool and it may create or remove memory pools during execution. A memory pool can belong to either the heap or the non-heap memory.</source>
          <target state="translated">メモリプールは、Java仮想マシンが管理するメモリ領域を表す。Java仮想マシンは少なくとも1つのメモリプールを持ち、実行中にメモリプールを作成したり削除したりすることができます。メモリプールは、ヒープメモリまたは非ヒープメモリのいずれかに属することができます。</target>
        </trans-unit>
        <trans-unit id="fa4a35c46f1a1f8fea8d8e45f0198eb4ca0e7607" translate="yes" xml:space="preserve">
          <source>A menu bar handles keyboard shortcuts for menu items, passing them along to its child menus. (Keyboard shortcuts, which are optional, provide the user with an alternative to the mouse for invoking a menu item and the action that is associated with it.) Each menu item can maintain an instance of &lt;code&gt;MenuShortcut&lt;/code&gt;. The &lt;code&gt;MenuBar&lt;/code&gt; class defines several methods, &lt;a href=&quot;#shortcuts()&quot;&gt;&lt;code&gt;shortcuts()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getShortcutMenuItem(java.awt.MenuShortcut)&quot;&gt;&lt;code&gt;getShortcutMenuItem(java.awt.MenuShortcut)&lt;/code&gt;&lt;/a&gt; that retrieve information about the shortcuts a given menu bar is managing.</source>
          <target state="translated">メニューバーは、メニュー項目のキーボードショートカットを処理し、それらを子メニューに渡します。（オプションのキーボードショートカットは、メニュー項目とそれに関連付けられたアクションを呼び出すためのマウスの代替手段をユーザーに提供します。）各メニュー項目は &lt;code&gt;MenuShortcut&lt;/code&gt; のインスタンスを維持できます。 &lt;code&gt;MenuBar&lt;/code&gt; クラスにはいくつかのメソッド定義&lt;a href=&quot;#shortcuts()&quot;&gt; &lt;code&gt;shortcuts()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#getShortcutMenuItem(java.awt.MenuShortcut)&quot;&gt; &lt;code&gt;getShortcutMenuItem(java.awt.MenuShortcut)&lt;/code&gt; &lt;/a&gt;与えられたメニューバーが管理しているショートカットについての情報を取得します。</target>
        </trans-unit>
        <trans-unit id="5035dd58b2fad02c6006f7e6d0c5be6150166ab0" translate="yes" xml:space="preserve">
          <source>A menu can optionally be a</source>
          <target state="translated">メニューはオプションで</target>
        </trans-unit>
        <trans-unit id="0c39c3fedba96a1dc85a3688a13359c4a0f1b393" translate="yes" xml:space="preserve">
          <source>A menu item that can be selected or deselected.</source>
          <target state="translated">選択・非選択が可能なメニュー項目。</target>
        </trans-unit>
        <trans-unit id="405567ef999c60714d2b7cf810f25c93ef8d643c" translate="yes" xml:space="preserve">
          <source>A menu item that can be selected or deselected. If selected, the menu item typically appears with a checkmark next to it. If unselected or deselected, the menu item appears without a checkmark. Like a regular menu item, a check box menu item can have either text or a graphic icon associated with it, or both.</source>
          <target state="translated">選択または選択解除が可能なメニュー項目。選択されている場合、メニュー項目は通常、その横にチェックマークが付いて表示されます。選択されていない場合、または選択解除されている場合、メニュー項目はチェックマークなしで表示されます。通常のメニュー項目と同様に、チェックボックスメニュー項目には、テキストまたはグラフィックアイコンのいずれか、またはその両方を使用することができます。</target>
        </trans-unit>
        <trans-unit id="659a21b7e16b76b0fda52e8389f9c126a4fd8a77" translate="yes" xml:space="preserve">
          <source>A metadata instance initialized from the contents of this &lt;code&gt;TIFFDirectory&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;TIFFDirectory&lt;/code&gt; のコンテンツから初期化されたメタデータインスタンス。</target>
        </trans-unit>
        <trans-unit id="16a1fefd1f156e716dec034d62735cb2fdb42a53" translate="yes" xml:space="preserve">
          <source>A method &lt;code&gt;&lt;em&gt;T&lt;/em&gt; get&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt;, where &lt;code&gt;&lt;em&gt;T&lt;/em&gt;&lt;/code&gt; is a Java type (not &lt;code&gt;void&lt;/code&gt;) and &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; is a non-empty string, specifies that there is a readable attribute called &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt;. The Java type and Open type of the attribute are determined by the mapping rules below. The method &lt;code&gt;final Class getClass()&lt;/code&gt; inherited from &lt;code&gt;
        Object&lt;/code&gt; is ignored when looking for getters.</source>
          <target state="translated">方法 &lt;code&gt;&lt;em&gt;T&lt;/em&gt; get&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt; 、 &lt;code&gt;&lt;em&gt;T&lt;/em&gt;&lt;/code&gt; は、 Javaの型（ではない &lt;code&gt;void&lt;/code&gt; ）と &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; が呼ば読める属性があることを非空の文字列で、指定され &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; を。属性のJavaタイプとOpenタイプは、以下のマッピングルールによって決定されます。 &lt;code&gt; Object&lt;/code&gt; から継承されたメソッド &lt;code&gt;final Class getClass()&lt;/code&gt; は、ゲッターを探すときに無視されます。</target>
        </trans-unit>
        <trans-unit id="457a7051128277e171a5ea7f82f57b1cd1040435" translate="yes" xml:space="preserve">
          <source>A method &lt;code&gt;&lt;em&gt;T&lt;/em&gt; get&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt;, where &lt;code&gt;&lt;em&gt;T&lt;/em&gt;&lt;/code&gt; is a Java type (not &lt;code&gt;void&lt;/code&gt;) and &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; is a non-empty string, specifies that there is a readable attribute called &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt;. The Java type and Open type of the attribute are determined by the mapping rules below. The method &lt;code&gt;final Class getClass()&lt;/code&gt; inherited from &lt;code&gt;Object&lt;/code&gt; is ignored when looking for getters.</source>
          <target state="translated">方法 &lt;code&gt;&lt;em&gt;T&lt;/em&gt; get&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt; 、 &lt;code&gt;&lt;em&gt;T&lt;/em&gt;&lt;/code&gt; は、 Javaの型（ではない &lt;code&gt;void&lt;/code&gt; ）と &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; が呼ば読める属性があることを非空の文字列で、指定され &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; を。属性のJavaタイプとOpenタイプは、以下のマッピングルールによって決定されます。 &lt;code&gt;Object&lt;/code&gt; から継承された &lt;code&gt;final Class getClass()&lt;/code&gt; メソッドは、getterを探すときに無視されます。</target>
        </trans-unit>
        <trans-unit id="45e0dc0f042d7646630672696718f7e2db616536" translate="yes" xml:space="preserve">
          <source>A method &lt;code&gt;boolean is&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt; specifies that there is a readable attribute called &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; with Java type &lt;code&gt;boolean&lt;/code&gt; and Open type &lt;code&gt;SimpleType.Boolean&lt;/code&gt;.</source>
          <target state="translated">メソッド &lt;code&gt;boolean is&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt; は、Javaタイプの &lt;code&gt;boolean&lt;/code&gt; とOpenタイプの &lt;code&gt;SimpleType.Boolean&lt;/code&gt; を持つ &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; という読み取り可能な属性があることを指定します。</target>
        </trans-unit>
        <trans-unit id="4a00575483612c388739a75e40677c1065a6370f" translate="yes" xml:space="preserve">
          <source>A method &lt;code&gt;void set&lt;em&gt;N&lt;/em&gt;(&lt;em&gt;T&lt;/em&gt; x)&lt;/code&gt; specifies that there is a writeable attribute called &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt;. The Java type and Open type of the attribute are determined by the mapping rules below. (Of course, the name &lt;code&gt;x&lt;/code&gt; of the parameter is irrelevant.)</source>
          <target state="translated">メソッド &lt;code&gt;void set&lt;em&gt;N&lt;/em&gt;(&lt;em&gt;T&lt;/em&gt; x)&lt;/code&gt; は、 &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; と呼ばれる書き込み可能な属性があることを指定します。属性のJavaタイプとOpenタイプは、以下のマッピングルールによって決定されます。（もちろん、パラメーターの名前 &lt;code&gt;x&lt;/code&gt; は無関係です。）</target>
        </trans-unit>
        <trans-unit id="9f151ad26a3a627668cf7977d9ea36505901b414" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a byte buffer.</source>
          <target state="translated">バイトバッファを&lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt;する方法。</target>
        </trans-unit>
        <trans-unit id="ca0c6ab07cc030a5287d27e80a03a25a67784230" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a char buffer.</source>
          <target state="translated">charバッファを&lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt;する方法。</target>
        </trans-unit>
        <trans-unit id="4b4231f38a8bf8e304d2ab9b9dab38a325b73255" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a double buffer.</source>
          <target state="translated">ダブルバッファを&lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt;する方法。</target>
        </trans-unit>
        <trans-unit id="64986d2d5ed96c2dfbc0aa0bd99c07e17f5a0b82" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a float buffer.</source>
          <target state="translated">フロートバッファを&lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt;する方法。</target>
        </trans-unit>
        <trans-unit id="b8dfbcd3cae533ef6cbb4a02c4853fa87f633721" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a long buffer.</source>
          <target state="translated">長いバッファを&lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt;する方法。</target>
        </trans-unit>
        <trans-unit id="9e34d7660fc4c604587ce011fcc3f2a57fdd4658" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a short buffer.</source>
          <target state="translated">短いバッファを&lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt;する方法。</target>
        </trans-unit>
        <trans-unit id="b79732fa8755bda85b52323f9c34ac4c36537958" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; an int buffer.</source>
          <target state="translated">intバッファを&lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt;する方法。</target>
        </trans-unit>
        <trans-unit id="fc4507d0bc619ee8ca9395cabbe1e3fe755b1d57" translate="yes" xml:space="preserve">
          <source>A method handle can be obtained on a method, constructor, or field which is declared with Java generic types. As with the Core Reflection API, the type of the method handle will be constructed from the erasure of the source-level type. When a method handle is invoked, the types of its arguments or the return value cast type may be generic types or type instances. If this occurs, the compiler will replace those types by their erasures when it constructs the symbolic type descriptor for the &lt;code&gt;invokevirtual&lt;/code&gt; instruction.</source>
          <target state="translated">メソッドハンドルは、Javaジェネリック型で宣言されたメソッド、コンストラクター、またはフィールドで取得できます。Core Reflection APIと同様に、メソッドハンドルのタイプは、ソースレベルのタイプの消去から構築されます。メソッドハンドルが呼び出されると、その引数の型または戻り値のキャスト型はジェネリック型または型インスタンスになります。これが発生した場合、コンパイラは、 &lt;code&gt;invokevirtual&lt;/code&gt; 命令のシンボリック型記述子を作成するときに、それらの型を消去に置き換えます。</target>
        </trans-unit>
        <trans-unit id="6b21bdd4c6300a890a95cf204bbba7785f32d420" translate="yes" xml:space="preserve">
          <source>A method handle can be obtained on a method, constructor, or field which is declared with Java generic types. As with the Core Reflection API, the type of the method handle will constructed from the erasure of the source-level type. When a method handle is invoked, the types of its arguments or the return value cast type may be generic types or type instances. If this occurs, the compiler will replace those types by their erasures when it constructs the symbolic type descriptor for the &lt;code&gt;invokevirtual&lt;/code&gt; instruction.</source>
          <target state="translated">メソッドハンドルは、Javaジェネリック型で宣言されたメソッド、コンストラクタ、またはフィールドで取得できます。 Core Reflection APIと同様に、メソッドハンドルのタイプはソースレベルタイプの消去から構築されます。メソッドハンドルが呼び出されると、その引数の型または戻り値キャスト型は、ジェネリック型または型インスタンスになる場合があります。これが発生した場合、コンパイラーは、 &lt;code&gt;invokevirtual&lt;/code&gt; 命令のシンボリック型記述子を構築するときに、それらの型をイレージャーで置き換えます。</target>
        </trans-unit>
        <trans-unit id="f85e865b4901f7eb077fe1f7678da72b01b68a19" translate="yes" xml:space="preserve">
          <source>A method handle contains a pair of special invoker methods called &lt;a href=&quot;#invokeExact(java.lang.Object...)&quot;&gt;&lt;code&gt;invokeExact&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#invoke(java.lang.Object...)&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt;. Both invoker methods provide direct access to the method handle's underlying method, constructor, field, or other operation, as modified by transformations of arguments and return values. Both invokers accept calls which exactly match the method handle's own type. The plain, inexact invoker also accepts a range of other call types.</source>
          <target state="translated">メソッドハンドルには、&lt;a href=&quot;#invokeExact(java.lang.Object...)&quot;&gt; &lt;code&gt;invokeExact&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#invoke(java.lang.Object...)&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;と呼ばれる特別なinvokeメソッドのペアが含まれています。両方の呼び出し元メソッドは、引数と戻り値の変換によって変更された、メソッドハンドルの基になるメソッド、コンストラクター、フィールド、またはその他の操作への直接アクセスを提供します。両方の呼び出し元は、メソッドハンドル自体のタイプと完全に一致する呼び出しを受け入れます。単純で不正確な呼び出し元は、他のさまざまな呼び出しタイプも受け入れます。</target>
        </trans-unit>
        <trans-unit id="8baa56b94df191753f371cdf316dbc026a4b19c5" translate="yes" xml:space="preserve">
          <source>A method handle contains a pair of special invoker methods called &lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt;&lt;code&gt;invokeExact&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt;. Both invoker methods provide direct access to the method handle's underlying method, constructor, field, or other operation, as modified by transformations of arguments and return values. Both invokers accept calls which exactly match the method handle's own type. The plain, inexact invoker also accepts a range of other call types.</source>
          <target state="translated">メソッドハンドルには、&lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt; &lt;code&gt;invokeExact&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;と呼ばれる特別な呼び出しメソッドのペアが含まれています。どちらの呼び出しメソッドも、引数と戻り値の変換によって変更された、メソッドハンドルの基になるメソッド、コンストラクタ、フィールド、またはその他の操作への直接アクセスを提供します。どちらの呼び出し元も、メソッドハンドル自体のタイプと完全に一致する呼び出しを受け入れます。単純で不正確な呼び出し元は、他のさまざまな種類の呼び出しも受け入れます。</target>
        </trans-unit>
        <trans-unit id="572fd61588901813858a5e05ef980f150779222e" translate="yes" xml:space="preserve">
          <source>A method handle is a typed, directly executable reference to an underlying method, constructor, field, or similar low-level operation, with optional transformations of arguments or return values.</source>
          <target state="translated">メソッドハンドルは、型付きで直接実行可能な、基礎となるメソッド、コンストラクタ、フィールド、または同様の低レベル操作への参照であり、オプションで引数や戻り値を変換することができます。</target>
        </trans-unit>
        <trans-unit id="601e9818f0485220f5df6a6df4003865ff1dda61" translate="yes" xml:space="preserve">
          <source>A method handle is a typed, directly executable reference to an underlying method, constructor, field, or similar low-level operation, with optional transformations of arguments or return values. These transformations are quite general, and include such patterns as &lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt;conversion&lt;/a&gt;, &lt;a href=&quot;#bindTo(java.lang.Object)&quot;&gt;insertion&lt;/a&gt;, &lt;a href=&quot;methodhandles#dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)&quot;&gt;deletion&lt;/a&gt;, and &lt;a href=&quot;methodhandles#filterArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle...)&quot;&gt;substitution&lt;/a&gt;.</source>
          <target state="translated">メソッドハンドルは、基になるメソッド、コンストラクター、フィールド、または同様の低レベルの操作への型指定された直接実行可能な参照であり、引数または戻り値のオプションの変換があります。これらの変換は非常に一般的であり、&lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt;変換&lt;/a&gt;、&lt;a href=&quot;#bindTo(java.lang.Object)&quot;&gt;挿入&lt;/a&gt;、&lt;a href=&quot;methodhandles#dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)&quot;&gt;削除&lt;/a&gt;、&lt;a href=&quot;methodhandles#filterArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle...)&quot;&gt;置換&lt;/a&gt;などのパターンが含まれます。</target>
        </trans-unit>
        <trans-unit id="3fa05ec6e74c0fc625c0541a82a118964114ff54" translate="yes" xml:space="preserve">
          <source>A method handle is a typed, directly executable reference to an underlying method, constructor, field, or similar low-level operation, with optional transformations of arguments or return values. These transformations are quite general, and include such patterns as &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;conversion&lt;/a&gt;, &lt;a href=&quot;methodhandle#bindTo-java.lang.Object-&quot;&gt;insertion&lt;/a&gt;, &lt;a href=&quot;methodhandles#dropArguments-java.lang.invoke.MethodHandle-int-java.util.List-&quot;&gt;deletion&lt;/a&gt;, and &lt;a href=&quot;methodhandles#filterArguments-java.lang.invoke.MethodHandle-int-java.lang.invoke.MethodHandle...-&quot;&gt;substitution&lt;/a&gt;.</source>
          <target state="translated">メソッドハンドルは、基になるメソッド、コンストラクター、フィールド、または同様の低レベル操作への型指定された直接実行可能な参照であり、引数または戻り値のオプションの変換を備えています。これらの変換は非常に一般的で、&lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;変換&lt;/a&gt;、&lt;a href=&quot;methodhandle#bindTo-java.lang.Object-&quot;&gt;挿入&lt;/a&gt;、&lt;a href=&quot;methodhandles#dropArguments-java.lang.invoke.MethodHandle-int-java.util.List-&quot;&gt;削除&lt;/a&gt;、&lt;a href=&quot;methodhandles#filterArguments-java.lang.invoke.MethodHandle-int-java.lang.invoke.MethodHandle...-&quot;&gt;置換&lt;/a&gt;などのパターンが含まれます。</target>
        </trans-unit>
        <trans-unit id="5d952641ca1800b10d6cffa65e1d0f020bc88924" translate="yes" xml:space="preserve">
          <source>A method handle's type controls the types of invocations it accepts, and the kinds of transformations that apply to it.</source>
          <target state="translated">メソッドハンドルの型は、それが受け入れる呼び出しの型と、それに適用される変換の種類を制御します。</target>
        </trans-unit>
        <trans-unit id="868a3299e2184db727b0edc3655d74054eb7fe70" translate="yes" xml:space="preserve">
          <source>A method is not required to declare in its &lt;code&gt;throws&lt;/code&gt; clause any subclasses of &lt;code&gt;Error&lt;/code&gt; that might be thrown during the execution of the method but not caught, since these errors are abnormal conditions that should never occur. That is, &lt;code&gt;Error&lt;/code&gt; and its subclasses are regarded as unchecked exceptions for the purposes of compile-time checking of exceptions.</source>
          <target state="translated">これらのエラーは発生してはならない異常な状態であるため、メソッドの &lt;code&gt;throws&lt;/code&gt; 句でメソッドの実行中にスローされてもキャッチされない &lt;code&gt;Error&lt;/code&gt; のサブクラスをメソッドで宣言する必要はありません。つまり、 &lt;code&gt;Error&lt;/code&gt; とそのサブクラスは、例外のコンパイル時チェックのために、チェックされていない例外と見なされます。</target>
        </trans-unit>
        <trans-unit id="9eec3fbd4625bc7c0178910686b6b7a4115fd480" translate="yes" xml:space="preserve">
          <source>A method reference may refer either to a static or non-static method. In the non-static case, the method handle type includes an explicit receiver argument, prepended before any other arguments. In the method handle's type, the initial receiver argument is typed according to the class under which the method was initially requested. (E.g., if a non-static method handle is obtained via &lt;code&gt;ldc&lt;/code&gt;, the type of the receiver is the class named in the constant pool entry.)</source>
          <target state="translated">メソッド参照は、静的メソッドまたは非静的メソッドのいずれかを参照できます。非静的の場合、メソッドハンドルタイプには、他の引数の前に付加される明示的なレシーバー引数が含まれます。メソッドハンドルの型では、最初のレシーバー引数は、メソッドが最初に要求されたクラスに従って型付けされます。（たとえば、非静的メソッドハンドルが &lt;code&gt;ldc&lt;/code&gt; を介して取得される場合、レシーバーのタイプは定数プールエントリで指定されたクラスです。）</target>
        </trans-unit>
        <trans-unit id="cad269b9da91c19f486eedab75bf4efc3bb48451" translate="yes" xml:space="preserve">
          <source>A method reference to the exception constructor with an empty argument list can be used as the supplier. For example, &lt;code&gt;IllegalStateException::new&lt;/code&gt;</source>
          <target state="translated">空の引数リストを持つ例外コンストラクターへのメソッド参照をサプライヤーとして使用できます。たとえば、 &lt;code&gt;IllegalStateException::new&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9898a76c96e7d7d28d9424a80b3fbd1abace77a" translate="yes" xml:space="preserve">
          <source>A method that result-bearing CountedCompleters may optionally use to help maintain result data.</source>
          <target state="translated">結果を含むCountedCompletersが結果データを維持するためにオプションで使用することができるメソッドです。</target>
        </trans-unit>
        <trans-unit id="80ff713d25db02a3cefe09efa77844101963da11" translate="yes" xml:space="preserve">
          <source>A method that result-bearing CountedCompleters may optionally use to help maintain result data. By default, does nothing. Overrides are not recommended. However, if this method is overridden to update existing objects or fields, then it must in general be defined to be thread-safe.</source>
          <target state="translated">結果を含むCountedCompletersが、結果データを維持するためにオプションで使用することができるメソッド。デフォルトでは何もしません。オーバーライドは推奨されません。しかし、このメソッドが既存のオブジェクトやフィールドを更新するためにオーバーライドされる場合は、一般的にスレッドセーフであるように定義されていなければなりません。</target>
        </trans-unit>
        <trans-unit id="314e124337cca6e52bd50063a6fcb8a5228fd544" translate="yes" xml:space="preserve">
          <source>A method to make a separate copy of the &lt;code&gt;JoinRowSet&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;JoinRowSet&lt;/code&gt; オブジェクトの個別のコピーを作成するメソッド</target>
        </trans-unit>
        <trans-unit id="84063deeb0e5c66bc0b8ac1435169c1c18f56b89" translate="yes" xml:space="preserve">
          <source>A method to obtain a mask for any existing mouse button.</source>
          <target state="translated">既存のマウスボタンのマスクを取得する方法。</target>
        </trans-unit>
        <trans-unit id="9af5485dfac5301c3eba09595d3817d30c0bb162" translate="yes" xml:space="preserve">
          <source>A method to obtain a mask for any existing mouse button. The returned mask may be used for different purposes. Following are some of them:</source>
          <target state="translated">任意の既存のマウスボタンのマスクを取得するメソッドです。返されたマスクは、さまざまな目的で使用することができます。以下はそのいくつかです。</target>
        </trans-unit>
        <trans-unit id="1b25841327949a6f44612d8d6ab0ea4932ceee3e" translate="yes" xml:space="preserve">
          <source>A method to request a list of DOM implementations that support the specified features and versions, as specified in .</source>
          <target state="translated">で指定された機能とバージョンをサポートする DOM 実装のリストを要求するメソッドです。</target>
        </trans-unit>
        <trans-unit id="574e4904b4e4713da2d82697faf33315da724d05" translate="yes" xml:space="preserve">
          <source>A method to request the first DOM implementation that supports the specified features.</source>
          <target state="translated">指定された機能をサポートする最初の DOM 実装を要求するメソッド。</target>
        </trans-unit>
        <trans-unit id="b4afeaccf26c0c9c61c626d5668b50078b9e9509" translate="yes" xml:space="preserve">
          <source>A method type represents the arguments and return type accepted and returned by a method handle, or the arguments and return type passed and expected by a method handle caller.</source>
          <target state="translated">メソッド型は、メソッド・ハンドルによって受け入れられ、返される引数と戻り値の型、またはメソッド・ハンドルの呼び出し元によって渡され、期待される引数と戻り値の型を表します。</target>
        </trans-unit>
        <trans-unit id="7753aab8f09d05964bb597b07157886ec8f0d15c" translate="yes" xml:space="preserve">
          <source>A method type represents the arguments and return type accepted and returned by a method handle, or the arguments and return type passed and expected by a method handle caller. Method types must be properly matched between a method handle and all its callers, and the JVM's operations enforce this matching at, specifically during calls to &lt;a href=&quot;methodhandle#invokeExact(java.lang.Object...)&quot;&gt;&lt;code&gt;MethodHandle.invokeExact&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt;&lt;code&gt;MethodHandle.invoke&lt;/code&gt;&lt;/a&gt;, and during execution of &lt;code&gt;invokedynamic&lt;/code&gt; instructions.</source>
          <target state="translated">メソッド型は、メソッドハンドルによって受け入れられて返される引数と戻り値の型、またはメソッドハンドルの呼び出し元によって渡され期待される引数と戻り値の型を表します。メソッドタイプは、メソッドハンドルとそのすべての呼び出し元の間で適切に一致する必要があり、JVMの操作は、特に&lt;a href=&quot;methodhandle#invokeExact(java.lang.Object...)&quot;&gt; &lt;code&gt;MethodHandle.invokeExact&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt; &lt;code&gt;MethodHandle.invoke&lt;/code&gt; の&lt;/a&gt;呼び出し中、および &lt;code&gt;invokedynamic&lt;/code&gt; 命令の実行中にこの一致を強制します。</target>
        </trans-unit>
        <trans-unit id="71a2dc9fcf19a2c5b0704beb5103aeb20daf64e4" translate="yes" xml:space="preserve">
          <source>A method type represents the arguments and return type accepted and returned by a method handle, or the arguments and return type passed and expected by a method handle caller. Method types must be properly matched between a method handle and all its callers, and the JVM's operations enforce this matching at, specifically during calls to &lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt;&lt;code&gt;MethodHandle.invokeExact&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;MethodHandle.invoke&lt;/code&gt;&lt;/a&gt;, and during execution of &lt;code&gt;invokedynamic&lt;/code&gt; instructions.</source>
          <target state="translated">メソッドタイプは、メソッドハンドルによって受け入れられて返される引数と戻り値のタイプ、またはメソッドハンドルの呼び出し元によって渡されて予期される引数と戻り値のタイプを表します。メソッドタイプは、メソッドハンドルとそのすべての呼び出し元の間で適切に一致する必要があり、JVMの操作は、特に&lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt; &lt;code&gt;MethodHandle.invokeExact&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt; &lt;code&gt;MethodHandle.invoke&lt;/code&gt; の&lt;/a&gt;呼び出し中、および &lt;code&gt;invokedynamic&lt;/code&gt; 命令の実行中にこの一致を強制します。</target>
        </trans-unit>
        <trans-unit id="45fcaa635da8696543cc6670e9a6f2c07be4af8b" translate="yes" xml:space="preserve">
          <source>A method, constructor, or initializer.</source>
          <target state="translated">メソッド、コンストラクタ、またはイニシャライザ。</target>
        </trans-unit>
        <trans-unit id="d107594adcb7aadca22825c251cefea0649e7b80" translate="yes" xml:space="preserve">
          <source>A method.</source>
          <target state="translated">方法です。</target>
        </trans-unit>
        <trans-unit id="0b155a1bb88c0bf0613eda5b33193ca7093a6f16" translate="yes" xml:space="preserve">
          <source>A minimal set of system dependent environment variables may be required to start a process on some operating systems. As a result, the subprocess may inherit additional environment variable settings beyond those in the process builder's &lt;a href=&quot;#environment()&quot;&gt;&lt;code&gt;environment()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一部のオペレーティングシステムでプロセスを開始するには、システムに依存する環境変数の最小限のセットが必要になる場合があります。その結果、サブプロセスは、プロセスビルダーの&lt;a href=&quot;#environment()&quot;&gt; &lt;code&gt;environment()&lt;/code&gt; &lt;/a&gt;の設定以外の追加の環境変数設定を継承する場合があります。</target>
        </trans-unit>
        <trans-unit id="a6157c9c5a862c0de70fda2d64867e07de05695a" translate="yes" xml:space="preserve">
          <source>A minimal set of system dependent environment variables may be required to start a process on some operating systems. As a result, the subprocess may inherit additional environment variable settings beyond those in the process builder's &lt;a href=&quot;processbuilder#environment--&quot;&gt;&lt;code&gt;environment()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一部のオペレーティングシステムでプロセスを開始するには、システム依存の環境変数の最小限のセットが必要になる場合があります。その結果、サブプロセスは、プロセスビルダーの&lt;a href=&quot;processbuilder#environment--&quot;&gt; &lt;code&gt;environment()&lt;/code&gt; &lt;/a&gt;の設定を超える追加の環境変数設定を継承する可能性があります。</target>
        </trans-unit>
        <trans-unit id="d78868ad6806cc456fd63e85f5e434673de3bcbf" translate="yes" xml:space="preserve">
          <source>A minimal set of system dependent environment variables may be required to start a process on some operating systems. As a result, the subprocess may inherit additional environment variable settings beyond those in the specified environment.</source>
          <target state="translated">いくつかのオペレーティングシステム上でプロセスを起動するためには、システムに依存する環境変数の最小限のセットが必要とされるかもしれません。その結果、サブプロセスは、指定された環境変数の設定を超えた追加の環境変数の設定を継承することがあります。</target>
        </trans-unit>
        <trans-unit id="90de6152ceb7e2040443e1d839e2daeb98a99880" translate="yes" xml:space="preserve">
          <source>A minute is represented by an integer from 0 to 59 in the usual manner.</source>
          <target state="translated">1分は、通常の方法では0から59までの整数で表されます。</target>
        </trans-unit>
        <trans-unit id="2a2b165d0ebb6938fa640f88e06d14ff5829009a" translate="yes" xml:space="preserve">
          <source>A mix-in style interface for marking objects that should be acted upon after a given delay.</source>
          <target state="translated">与えられた遅延の後に処理すべきオブジェクトをマークするためのミックスインスタイルのインターフェイス。</target>
        </trans-unit>
        <trans-unit id="a82b2f3ea80435da0528df31d8de211f9f131bb9" translate="yes" xml:space="preserve">
          <source>A mixer can support synchronization of its lines. When one line in a synchronized group is started or stopped, the other lines in the group automatically start or stop simultaneously with the explicitly affected one.</source>
          <target state="translated">ミキサーは、そのラインの同期をサポートすることができます。同期されたグループ内の1つのラインが開始または停止されると、グループ内の他のラインは、明示的に影響を受けたラインと同時に自動的に開始または停止します。</target>
        </trans-unit>
        <trans-unit id="6605ccbd86386660b3cccfb6c44a5bbaf230733d" translate="yes" xml:space="preserve">
          <source>A mixer is an audio device with one or more lines.</source>
          <target state="translated">ミキサーとは、1本以上のラインを持つオーディオ機器のことです。</target>
        </trans-unit>
        <trans-unit id="d9e59a59c28f466552e7a1512eef543e2311cb0a" translate="yes" xml:space="preserve">
          <source>A mixer is an audio device with one or more lines. It need not be designed for mixing audio signals. A mixer that actually mixes audio has multiple input (source) lines and at least one output (target) line. The former are often instances of classes that implement &lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;, and the latter, &lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;port&quot;&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/a&gt; objects, too, are either source lines or target lines. A mixer can accept prerecorded, loopable sound as input, by having some of its source lines be instances of objects that implement the &lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">ミキサーは、1つまたは複数のラインを持つオーディオデバイスです。オーディオ信号をミキシングするように設計する必要はありません。実際にオーディオをミキシングするミキサーには、複数の入力（ソース）ラインと少なくとも1つの出力（ターゲット）ラインがあります。前者は多くの場合、&lt;a href=&quot;sourcedataline&quot;&gt; &lt;code&gt;SourceDataLine&lt;/code&gt; &lt;/a&gt;を実装するクラスのインスタンスであり、後者は&lt;a href=&quot;targetdataline&quot;&gt; &lt;code&gt;TargetDataLine&lt;/code&gt; &lt;/a&gt;です。&lt;a href=&quot;port&quot;&gt; &lt;code&gt;Port&lt;/code&gt; &lt;/a&gt;オブジェクトも、ソースラインまたはターゲットラインのいずれかです。ミキサーは、そのソースラインの一部を&lt;a href=&quot;clip&quot;&gt; &lt;code&gt;Clip&lt;/code&gt; &lt;/a&gt;インターフェイスを実装するオブジェクトのインスタンスにすることにより、事前に録音されたループ可能なサウンドを入力として受け入れることができます。</target>
        </trans-unit>
        <trans-unit id="f0a85bd03cce327d0a024b8ca3c5739ec1759ae7" translate="yes" xml:space="preserve">
          <source>A mixer is an audio device with one or more lines. It need not be designed for mixing audio signals. A mixer that actually mixes audio has multiple input (source) lines and at least one output (target) line. The former are often instances of classes that implement &lt;code&gt;&lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;, and the latter, &lt;code&gt;&lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;port&quot;&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; objects, too, are either source lines or target lines. A mixer can accept prerecorded, loopable sound as input, by having some of its source lines be instances of objects that implement the &lt;code&gt;&lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; interface.</source>
          <target state="translated">ミキサーは、1つ以上のラインを持つオーディオデバイスです。オーディオ信号のミキシング用に設計する必要はありません。実際にオーディオをミキシングするミキサーには、複数の入力（ソース）ラインと少なくとも1つの出力（ターゲット）ラインがあります。前者はしばしば &lt;code&gt;&lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; を実装するクラスのインスタンスであり、後者は &lt;code&gt;&lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; です。 &lt;code&gt;&lt;a href=&quot;port&quot;&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; オブジェクトも、ソースラインまたはターゲットラインです。ミキサーは、そのソースラインの一部を &lt;code&gt;&lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; インターフェースを実装するオブジェクトのインスタンスにすることにより、録音済みのループ可能なサウンドを入力として受け入れることができます。</target>
        </trans-unit>
        <trans-unit id="eb3efede6328869ca7c41918f11095f6b2a95ea9" translate="yes" xml:space="preserve">
          <source>A mixin interface for an element that has a qualified name.</source>
          <target state="translated">名前が修飾されている要素のためのミックスインインターフェース。</target>
        </trans-unit>
        <trans-unit id="940bc0118071492b342d59cad911ef90c1786c35" translate="yes" xml:space="preserve">
          <source>A mixin interface for an element that has type parameters.</source>
          <target state="translated">型パラメータを持つ要素のためのミックスインインターフェース。</target>
        </trans-unit>
        <trans-unit id="85bfe50b01099694ef5f3fdf2cd07cd87cc85364" translate="yes" xml:space="preserve">
          <source>A mnemonic must correspond to a single key on the keyboard and should be specified using one of the &lt;code&gt;VK_XXX&lt;/code&gt; keycodes defined in &lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt; or one of the extended keycodes obtained through &lt;code&gt;java.awt.event.KeyEvent.getExtendedKeyCodeForChar&lt;/code&gt;. Mnemonics are case-insensitive, therefore a key event with the corresponding keycode would cause the button to be activated whether or not the Shift modifier was pressed.</source>
          <target state="translated">ニーモニックは、キーボードの単一のキーに対応している必要があり、 &lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt; で定義されている &lt;code&gt;VK_XXX&lt;/code&gt; キーコードの1つ、または &lt;code&gt;java.awt.event.KeyEvent.getExtendedKeyCodeForChar&lt;/code&gt; を介して取得した拡張キーコードの1つを使用して指定する必要があります。ニーモニックでは大文字と小文字が区別されないため、対応するキーコードを使用したキーイベントにより、Shift修飾子が押されたかどうかに関係なくボタンがアクティブになります。</target>
        </trans-unit>
        <trans-unit id="6fbe55459253ff7e43ccf4d93d0aac5b438e89c7" translate="yes" xml:space="preserve">
          <source>A mnemonic must correspond to a single key on the keyboard and should be specified using one of the &lt;code&gt;VK_XXX&lt;/code&gt; keycodes defined in &lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt;. These codes and the wider array of codes for international keyboards may be obtained through &lt;code&gt;java.awt.event.KeyEvent.getExtendedKeyCodeForChar&lt;/code&gt;. Mnemonics are case-insensitive, therefore a key event with the corresponding keycode would cause the button to be activated whether or not the Shift modifier was pressed.</source>
          <target state="translated">ニーモニックは、キーボードの単一のキーに対応している必要があり、 &lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt; で定義されている &lt;code&gt;VK_XXX&lt;/code&gt; キーコードの1つを使用して指定する必要があります。これらのコードおよび国際キーボード用の幅広いコード配列は、 &lt;code&gt;java.awt.event.KeyEvent.getExtendedKeyCodeForChar&lt;/code&gt; から取得できます。ニーモニックでは大文字と小文字が区別されないため、対応するキーコードを使用したキーイベントにより、Shift修飾子が押されたかどうかに関係なくボタンがアクティブになります。</target>
        </trans-unit>
        <trans-unit id="dccf7abbdd783e10b0eaedc81b7d45650fa6829a" translate="yes" xml:space="preserve">
          <source>A model for a potentially unbounded sequence of object values.</source>
          <target state="translated">束縛されない可能性のある一連のオブジェクト値のモデル。</target>
        </trans-unit>
        <trans-unit id="b9a0e61f9edac0df5cf8ebd8c21c30ffc057a602" translate="yes" xml:space="preserve">
          <source>A model for a potentially unbounded sequence of object values. This model is similar to &lt;code&gt;ListModel&lt;/code&gt; however there are some important differences:</source>
          <target state="translated">潜在的に無制限のオブジェクト値のシーケンスのモデル。このモデルは &lt;code&gt;ListModel&lt;/code&gt; に似ていますが、いくつかの重要な違いがあります。</target>
        </trans-unit>
        <trans-unit id="ef7797cc5b0a0ddbc8a93f2cab350d859a88a7bf" translate="yes" xml:space="preserve">
          <source>A model that supports at most one indexed selection.</source>
          <target state="translated">最大で1つのインデックス付き選択をサポートするモデル。</target>
        </trans-unit>
        <trans-unit id="113198bff2c471d9a1340e1c7395aba0b81a05b8" translate="yes" xml:space="preserve">
          <source>A model that supports selecting a &lt;code&gt;Color&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Color&lt;/code&gt; 選択をサポートするモデル。</target>
        </trans-unit>
        <trans-unit id="75a1381c14d2290171b492582cd78cc9f246be75" translate="yes" xml:space="preserve">
          <source>A moderately condensed width.</source>
          <target state="translated">程よく凝縮された幅。</target>
        </trans-unit>
        <trans-unit id="8d188161e9d611c063510995c84aefe5b9b8bceb" translate="yes" xml:space="preserve">
          <source>A moderately extended width.</source>
          <target state="translated">程よく伸びた幅。</target>
        </trans-unit>
        <trans-unit id="97d801ad32671b3e691c89407615fb7c0e1225da" translate="yes" xml:space="preserve">
          <source>A moderately heavier weight than &lt;code&gt;WEIGHT_BOLD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WEIGHT_BOLD&lt;/code&gt; よりも適度に重いウェイト。</target>
        </trans-unit>
        <trans-unit id="ec770c5cec376cec7cab568da145cc8cefb435ff" translate="yes" xml:space="preserve">
          <source>A moderately heavier weight than &lt;code&gt;WEIGHT_REGULAR&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WEIGHT_REGULAR&lt;/code&gt; よりも適度に重いウェイト。</target>
        </trans-unit>
        <trans-unit id="a659fd009867c7b19b8a9492e01adae960c27290" translate="yes" xml:space="preserve">
          <source>A moderately lighter weight than &lt;code&gt;WEIGHT_BOLD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WEIGHT_BOLD&lt;/code&gt; よりも適度に軽量です。</target>
        </trans-unit>
        <trans-unit id="b00dd7f7c7c0de87dc4b914ed635255aa8bdd375" translate="yes" xml:space="preserve">
          <source>A modifier on a module dependence.</source>
          <target state="translated">モジュール依存性の修飾子。</target>
        </trans-unit>
        <trans-unit id="1f66a47c471b55a1f2837bdd92e8d02f3fbcf0b9" translate="yes" xml:space="preserve">
          <source>A modifier on a module.</source>
          <target state="translated">モジュール上の修飾子。</target>
        </trans-unit>
        <trans-unit id="9c827a6d1160b76111dacfc9cf7d5c1b048cb4d3" translate="yes" xml:space="preserve">
          <source>A modifier on an exported package.</source>
          <target state="translated">エクスポートされたパッケージの修飾子。</target>
        </trans-unit>
        <trans-unit id="cd12fa667e8860dab8dcf4c8cace39116df85c96" translate="yes" xml:space="preserve">
          <source>A modifier on an open package.</source>
          <target state="translated">オープンパッケージの修飾子。</target>
        </trans-unit>
        <trans-unit id="455aa858215590bd7ae451f50057a1eaef663612" translate="yes" xml:space="preserve">
          <source>A module &quot;reads&quot; two or more modules with the same name. This includes the case where a module &quot;reads&quot; another with the same name as itself.</source>
          <target state="translated">モジュールは、同じ名前の複数のモジュールを「読む」。これには、モジュールがそれ自身と同じ名前の別のモジュールを「読む」場合も含まれます。</target>
        </trans-unit>
        <trans-unit id="eb98ec38ed46c6c4948d6e5527a24116a4008805" translate="yes" xml:space="preserve">
          <source>A module &lt;code&gt;M&lt;/code&gt; declares that it &quot;&lt;code&gt;uses p.S&lt;/code&gt;&quot; or &quot;&lt;code&gt;provides p.S with ...&lt;/code&gt;&quot; but package &lt;code&gt;p&lt;/code&gt; is neither in module &lt;code&gt;M&lt;/code&gt; nor exported to &lt;code&gt;M&lt;/code&gt; by any module that &lt;code&gt;M&lt;/code&gt; reads.</source>
          <target state="translated">モジュール &lt;code&gt;M&lt;/code&gt; は、「 &lt;code&gt;uses p.S&lt;/code&gt; 」または「 &lt;code&gt;provides p.S with ...&lt;/code&gt; 」と宣言しますが、パッケージ &lt;code&gt;p&lt;/code&gt; はモジュール &lt;code&gt;M&lt;/code&gt; になく、 &lt;code&gt;M&lt;/code&gt; が読み取るモジュールによって &lt;code&gt;M&lt;/code&gt; にエクスポートされません。</target>
        </trans-unit>
        <trans-unit id="662c4f200c7a7a0588b4578c360940ca674b26a0" translate="yes" xml:space="preserve">
          <source>A module M declares that it 'uses p.S' or 'provides p.S with ...' but package p is neither in module M nor exported to M by any module that M &quot;reads&quot;.</source>
          <target state="translated">モジュールMは「p.Sを使用している」「p.Sに...を提供している」と宣言していますが、パッケージpはモジュールMにはありませんし、Mが「読み込んだ」モジュールによってMにエクスポートされたものでもありません。</target>
        </trans-unit>
        <trans-unit id="7051931822f315c97f2452ced1be59b68e994add" translate="yes" xml:space="preserve">
          <source>A module descriptor describes a &lt;em&gt;normal&lt;/em&gt;, open, or automatic module. &lt;em&gt;Normal&lt;/em&gt; modules and open modules describe their &lt;a href=&quot;#requires()&quot;&gt;&lt;code&gt;dependences&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#exports()&quot;&gt;&lt;code&gt;exported-packages&lt;/code&gt;&lt;/a&gt;, the services that they &lt;a href=&quot;#uses()&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#provides()&quot;&gt;&lt;code&gt;provide&lt;/code&gt;&lt;/a&gt;, and other components. &lt;em&gt;Normal&lt;/em&gt; modules may &lt;a href=&quot;#opens()&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; specific packages. The module descriptor for an open modules does not declare any open packages (its &lt;code&gt;opens&lt;/code&gt; method returns an empty set) but when instantiated in the Java virtual machine then it is treated as if all packages are open. The module descriptor for an automatic module does not declare any dependences (except for the mandatory dependency on &lt;code&gt;
 java.base&lt;/code&gt;), and does not declare any exported or open packages. Automatic module receive special treatment during resolution so that they read all other modules in the configuration. When an automatic module is instantiated in the Java virtual machine then it reads every unnamed module and is treated as if all packages are exported and open.</source>
          <target state="translated">モジュール記述子は、&lt;em&gt;通常&lt;/em&gt;、オープン、または自動モジュールを記述します。&lt;em&gt;通常の&lt;/em&gt;モジュールとオープンモジュールは、それらの&lt;a href=&quot;#requires()&quot;&gt; &lt;code&gt;dependences&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#exports()&quot;&gt; &lt;code&gt;exported-packages&lt;/code&gt; &lt;/a&gt;、それらが&lt;a href=&quot;#uses()&quot;&gt; &lt;code&gt;use&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#provides()&quot;&gt; &lt;code&gt;provide&lt;/code&gt; &lt;/a&gt;サービス、およびその他のコンポーネントを記述します。&lt;em&gt;通常の&lt;/em&gt;モジュールは特定のパッケージを&lt;a href=&quot;#opens()&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;場合があります。開いているモジュールのモジュール記述子は、開いているパッケージを宣言しません（ &lt;code&gt;opens&lt;/code&gt; メソッドは空のセットを返します）が、Java仮想マシンでインスタンス化されると、すべてのパッケージが開いているかのように扱われます。自動モジュールのモジュール記述子は、依存関係を宣言しません（ &lt;code&gt; java.base&lt;/code&gt; への必須の依存関係を除く））、エクスポートされたパッケージまたは開いているパッケージを宣言しません。自動モジュールは、構成内の他のすべてのモジュールを読み取るように、解決中に特別な処理を受けます。自動モジュールがJava仮想マシンでインスタンス化されると、名前のないすべてのモジュールが読み取られ、すべてのパッケージがエクスポートされて開かれたかのように扱われます。</target>
        </trans-unit>
        <trans-unit id="39484186c8c0c1ae7050c0af3a7d39c72c80caeb" translate="yes" xml:space="preserve">
          <source>A module descriptor describes a named module and defines methods to obtain each of its components. The module descriptor for a named module in the Java virtual machine is obtained by invoking the &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;../module#getDescriptor()&quot;&gt;&lt;code&gt;getDescriptor&lt;/code&gt;&lt;/a&gt; method. Module descriptors can also be created using the &lt;a href=&quot;moduledescriptor.builder&quot;&gt;&lt;code&gt;ModuleDescriptor.Builder&lt;/code&gt;&lt;/a&gt; class or by reading the binary form of a module declaration (&lt;code&gt;module-info.class&lt;/code&gt;) using the &lt;a href=&quot;#read(java.io.InputStream,java.util.function.Supplier)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; methods defined here.</source>
          <target state="translated">モジュール記述子は、名前付きモジュールを記述し、その各コンポーネントを取得するためのメソッドを定義します。Java仮想マシンの名前付きモジュール用のモジュール記述子は呼び出して取得された&lt;a href=&quot;../module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;../module#getDescriptor()&quot;&gt; &lt;code&gt;getDescriptor&lt;/code&gt; &lt;/a&gt;方法を。モジュール記述子は、&lt;a href=&quot;moduledescriptor.builder&quot;&gt; &lt;code&gt;ModuleDescriptor.Builder&lt;/code&gt; &lt;/a&gt;クラスを使用するか、ここで定義されている&lt;a href=&quot;#read(java.io.InputStream,java.util.function.Supplier)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;メソッドを使用してモジュール宣言のバイナリ形式（ &lt;code&gt;module-info.class&lt;/code&gt; ）を読み取ることによって作成することもできます。</target>
        </trans-unit>
        <trans-unit id="eaabbb2d3e77e23acd558210c32a5e147a902783" translate="yes" xml:space="preserve">
          <source>A module descriptor.</source>
          <target state="translated">モジュール記述子。</target>
        </trans-unit>
        <trans-unit id="ec86bbca16256870199e11664f4b4e20c1e7c283" translate="yes" xml:space="preserve">
          <source>A module in a graph of &lt;em&gt;resolved modules&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;解決されたモジュールの&lt;/em&gt;グラフ内の&lt;em&gt;モジュール&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="294856b1fabfeb9684fab1cc4cea4d5c8337917a" translate="yes" xml:space="preserve">
          <source>A module is mapped to a class loader that already has a module of the same name defined to it.</source>
          <target state="translated">モジュールは、すでに同じ名前のモジュールが定義されているクラス・ローダにマップされます。</target>
        </trans-unit>
        <trans-unit id="ea95f763a71a66296df0f219de84921cb321ce7c" translate="yes" xml:space="preserve">
          <source>A module is mapped to a class loader that has already defined types in any of the packages in the module.</source>
          <target state="translated">モジュールは、モジュール内のパッケージのいずれかで既に型が定義されているクラスローダにマップされます。</target>
        </trans-unit>
        <trans-unit id="9e020352fda5c7c64704bec97a647670222fe370" translate="yes" xml:space="preserve">
          <source>A module reader is intended for cases where access to the resources in a module is required, regardless of whether the module has been loaded. A framework that scans a collection of packaged modules on the file system, for example, may use a module reader to access a specific resource in each module. A module reader is also intended to be used by &lt;code&gt;ClassLoader&lt;/code&gt; implementations that load classes and resources from modules.</source>
          <target state="translated">モジュールリーダーは、モジュールがロードされているかどうかに関係なく、モジュール内のリソースへのアクセスが必要な場合を対象としています。たとえば、ファイルシステム上のパッケージ化されたモジュールのコレクションをスキャンするフレームワークは、モジュールリーダーを使用して、各モジュールの特定のリソースにアクセスできます。モジュールリーダーは、モジュールからクラスとリソースをロードする &lt;code&gt;ClassLoader&lt;/code&gt; 実装で使用することも目的としています。</target>
        </trans-unit>
        <trans-unit id="df023938795e281f4835897184ca0e8813ed88d3" translate="yes" xml:space="preserve">
          <source>A module reader is not required to be asynchronously closeable. If a thread is reading a resource and another thread invokes the close method, then the second thread may block until the read operation is complete.</source>
          <target state="translated">モジュールリーダは、非同期的にクローズ可能である必要はありません。あるスレッドがリソースを読み込んでいて、別のスレッドが close メソッドを呼び出した場合、2 番目のスレッドは読み込み操作が完了するまでブロックすることができます。</target>
        </trans-unit>
        <trans-unit id="3224c079eb7e378827cebbe2bb247fe6be8ad974" translate="yes" xml:space="preserve">
          <source>A module reads two or more modules with the same name. This includes the case where a module reads another with the same name as itself.</source>
          <target state="translated">モジュールは、同じ名前を持つ複数のモジュールを読み込みます。これには、モジュールが自分と同じ名前の別のモジュールを読み込む場合も含まれます。</target>
        </trans-unit>
        <trans-unit id="22abf316c218170b96c9f81b65a87289f64f9f26" translate="yes" xml:space="preserve">
          <source>A module reference is a concrete implementation of this class that implements the abstract methods defined by this class. It contains the module's descriptor and its location, if known. It also has the ability to create a &lt;a href=&quot;modulereader&quot;&gt;&lt;code&gt;ModuleReader&lt;/code&gt;&lt;/a&gt; in order to access the module's content, which may be inside the Java run-time system itself or in an artifact such as a modular JAR file.</source>
          <target state="translated">モジュール参照は、このクラスによって定義された抽象メソッドを実装する、このクラスの具体的な実装です。モジュールの記述子と、わかっている場合はその場所が含まれます。また、モジュールのコンテンツにアクセスするために&lt;a href=&quot;modulereader&quot;&gt; &lt;code&gt;ModuleReader&lt;/code&gt; &lt;/a&gt;を作成する機能もあります。これは、Javaランタイムシステム自体の内部、またはモジュラーJARファイルなどのアーティファクト内にある可能性があります。</target>
        </trans-unit>
        <trans-unit id="b9879bf6c336646f6375f771243418c15804cfe2" translate="yes" xml:space="preserve">
          <source>A module's version string.</source>
          <target state="translated">モジュールのバージョン文字列。</target>
        </trans-unit>
        <trans-unit id="e49db2cd47d76f570b602b8aeeac431ff85df08f" translate="yes" xml:space="preserve">
          <source>A module.</source>
          <target state="translated">モジュールです。</target>
        </trans-unit>
        <trans-unit id="42953139b3b36dae3cc66096b2aec9e05777e71d" translate="yes" xml:space="preserve">
          <source>A month is represented by an integer from 0 to 11; 0 is January, 1 is February, and so forth; thus 11 is December.</source>
          <target state="translated">月は0から11までの整数で表され、0は1月、1は2月などとなり、11は12月となります。</target>
        </trans-unit>
        <trans-unit id="ab22d20d25b582a956df404a2854dfd37a08a7c3" translate="yes" xml:space="preserve">
          <source>A month-day in the ISO-8601 calendar system, such as &lt;code&gt;--12-03&lt;/code&gt;.</source>
          <target state="translated">ISO-8601カレンダーシステムの月日（例：-- &lt;code&gt;--12-03&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e911868de06210df74694f89f02b4486402c1f21" translate="yes" xml:space="preserve">
          <source>A month-day of February 29th will be adjusted to February 28th in the resulting date if the year is not a leap year.</source>
          <target state="translated">2月29日の月日は、うるう年でない場合は、結果の日付で2月28日に調整されます。</target>
        </trans-unit>
        <trans-unit id="544d028170c4cc8966d5aa5df1674bb3bd930fe7" translate="yes" xml:space="preserve">
          <source>A month-of-year, such as 'July'.</source>
          <target state="translated">'7月'などの月齢のこと。</target>
        </trans-unit>
        <trans-unit id="72ef0e6fc016a03a5df04c55ed4903f14c08ffee" translate="yes" xml:space="preserve">
          <source>A more complete and consistent set of LIFO stack operations is provided by the &lt;a href=&quot;deque&quot;&gt;&lt;code&gt;Deque&lt;/code&gt;&lt;/a&gt; interface and its implementations, which should be used in preference to this class. For example:</source>
          <target state="translated">&lt;a href=&quot;deque&quot;&gt; &lt;code&gt;Deque&lt;/code&gt; &lt;/a&gt;インターフェースとその実装によって、より完全で一貫性のあるLIFOスタック操作のセットが提供されます。これは、このクラスよりも優先して使用する必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="779ab2c19e9e20055e3d69fab40e1eae13ac1fbe" translate="yes" xml:space="preserve">
          <source>A more detailed description of the set of option buttons that will appear at the bottom of the dialog box. The usual value for the options parameter is an array of &lt;code&gt;String&lt;/code&gt;s. But the parameter type is an array of &lt;code&gt;Objects&lt;/code&gt;. A button is created for each object depending on its type:</source>
          <target state="translated">ダイアログボックスの下部に表示される一連のオプションボタンの詳細な説明。optionsパラメータの通常の値は、 &lt;code&gt;String&lt;/code&gt; の配列です。ただし、パラメータタイプは &lt;code&gt;Objects&lt;/code&gt; 配列です。タイプに応じて、オブジェクトごとにボタンが作成されます。</target>
        </trans-unit>
        <trans-unit id="a8ef92902ef52fc9390a15bc63628b67c671c8aa" translate="yes" xml:space="preserve">
          <source>A more informative set of completions would include the number of each prime:</source>
          <target state="translated">補完のセットは、より情報量の多いものであれば、各素数の数も含まれます。</target>
        </trans-unit>
        <trans-unit id="8fba423df016bcca01d528c49a66aa0490f8d71b" translate="yes" xml:space="preserve">
          <source>A more interesting case can be illustrated by the following example in which a method in type &lt;code&gt;A&lt;/code&gt; does not override a like-named method in type &lt;code&gt;B&lt;/code&gt;:</source>
          <target state="translated">より興味深いケースは、タイプ &lt;code&gt;A&lt;/code&gt; のメソッドがタイプ &lt;code&gt;B&lt;/code&gt; の同じ名前のメソッドをオーバーライドしない次の例で説明できます。</target>
        </trans-unit>
        <trans-unit id="e9c58067d77bf7244be501b1ebc8017e9dfb5d7a" translate="yes" xml:space="preserve">
          <source>A more reliable way to determine which &lt;code&gt;ImageReader&lt;/code&gt;s are likely to be able to parse a particular data stream is provided by the &lt;code&gt;canDecodeInput&lt;/code&gt; method. This methods allows the service provider to inspect the actual stream contents.</source>
          <target state="translated">特定のデータストリームを解析できる可能性が高い &lt;code&gt;ImageReader&lt;/code&gt; を判断するためのより信頼性の高い方法は、 &lt;code&gt;canDecodeInput&lt;/code&gt; メソッドによって提供されます。このメソッドにより、サービスプロバイダーは実際のストリームコンテンツを検査できます。</target>
        </trans-unit>
        <trans-unit id="6f2e502d946565cf8a0faf1431c1e45de5f7293b" translate="yes" xml:space="preserve">
          <source>A more reliable way to determine which &lt;code&gt;ImageWriter&lt;/code&gt;s are likely to be able to parse a particular data stream is provided by the &lt;code&gt;canEncodeImage&lt;/code&gt; method. This methods allows the service provider to inspect the actual image contents.</source>
          <target state="translated">特定のデータストリームを解析できる可能性が高い &lt;code&gt;ImageWriter&lt;/code&gt; を判断するためのより信頼性の高い方法は、 &lt;code&gt;canEncodeImage&lt;/code&gt; メソッドによって提供されます。このメソッドにより、サービスプロバイダーは実際の画像コンテンツを検査できます。</target>
        </trans-unit>
        <trans-unit id="e98fad3c4bc26860fd5b43356494929e7f5e13c6" translate="yes" xml:space="preserve">
          <source>A multicast channel may join several multicast groups, including the same group on more than one interface. An implementation may impose a limit on the number of groups that may be joined at the same time.</source>
          <target state="translated">マルチキャストチャネルは、複数のインタフェース上の同じグループを含む複数のマルチキャストグループに参加してもよい。実装は、同時に参加することができるグループの数に制限を課してもよい。</target>
        </trans-unit>
        <trans-unit id="fc6c2bf87ac13f1021feb64a454cd4052af2d2c4" translate="yes" xml:space="preserve">
          <source>A multicast group is specified by a class D IP address and by a standard UDP port number. Class D IP addresses are in the range &lt;code&gt;224.0.0.0&lt;/code&gt; to &lt;code&gt;239.255.255.255&lt;/code&gt;, inclusive. The address 224.0.0.0 is reserved and should not be used.</source>
          <target state="translated">マルチキャストグループは、クラスDのIPアドレスと標準のUDPポート番号で指定されます。クラスDのIPアドレスは、範囲内にある &lt;code&gt;224.0.0.0&lt;/code&gt; に &lt;code&gt;239.255.255.255&lt;/code&gt; 、包括的。アドレス224.0.0.0は予約されているため、使用しないでください。</target>
        </trans-unit>
        <trans-unit id="7343f0136a235add22e5d1a4a1f7087a79e0cf03" translate="yes" xml:space="preserve">
          <source>A multicast group membership is valid upon creation and remains valid until the membership is dropped by invoking the &lt;a href=&quot;#drop()&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method, or the channel is closed.</source>
          <target state="translated">マルチキャストグループメンバーシップは作成時に有効であり、&lt;a href=&quot;#drop()&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してメンバーシップを削除するか、チャネルを閉じるまで有効です。</target>
        </trans-unit>
        <trans-unit id="2c4338d75e8f3f9d14e959f365f91cefea68d6d9" translate="yes" xml:space="preserve">
          <source>A multicast group membership is valid upon creation and remains valid until the membership is dropped by invoking the &lt;a href=&quot;membershipkey#drop--&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method, or the channel is closed.</source>
          <target state="translated">マルチキャストグループメンバーシップは作成時に有効であり、&lt;a href=&quot;membershipkey#drop--&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してメンバーシップが削除されるか、チャネルが閉じられるまで有効です。</target>
        </trans-unit>
        <trans-unit id="1fee222616db716259fa4af6ce03b2c2360c34f2" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ButtonUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ButtonUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="3ef1780e60881228d13a1f01f6990b531840ad92" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ColorChooserUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ColorChooserUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="2aae38e31e2bae50f1e674f7a6d926d88f80a391" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ComboBoxUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ComboBoxUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="01a6971639ccef86d18603a068ca7d3d55340502" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;DesktopIconUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;DesktopIconUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="21718f844feee3eb6c779b47a33192a69e4d17ab" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;DesktopPaneUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;DesktopPaneUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="02ce2c4b7cbbb3e576680056f6bf7f9bba8c7b67" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;FileChooserUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;FileChooserUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="92e8808c850534bcc256bdf71547438f2e3c5e37" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;InternalFrameUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;InternalFrameUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="1a23d3908c1bae315b127e3c02ebbbc9176015f2" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;LabelUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;LabelUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="f6b9f46db8f1ee3fd4cbca7332657eb67f3fd527" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ListUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ListUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="938864c832b86e3cd3303e98afce5a557ea23104" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;MenuBarUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;MenuBarUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="3199bc673bd3ddfbe197155f083fcc08aaaf707e" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;MenuItemUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;MenuItemUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="c7ac51351c67842db3297bcfdf74d61cff4b640b" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;OptionPaneUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;OptionPaneUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="e09a77aff5096fac207ff03a8298c2fa6ccc41da" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;PanelUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;PanelUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="1284e1a2ecb7cb1789a48aaf6494e05832de5b81" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;PopupMenuUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;PopupMenuUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="3faad1637e96e180b3c281ff8796900fa6df2a1e" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ProgressBarUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ProgressBarUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="a8574221e5bf68d386033fc0c0140d3870d96272" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;RootPaneUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;RootPaneUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="3261bde38d3051181064931365782b9ef0d32b94" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ScrollBarUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ScrollBarUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="b6b5b98fa65bbe03d183f8198e2431f166f4cb15" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ScrollPaneUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ScrollPaneUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="e975ff5a1489fa5104bd8b75478a94157f6b42af" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;SeparatorUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SeparatorUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="273c978a0929e4b64f114b569f3c84dab7265c81" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;SliderUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SliderUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="6fd5d419bb486ebb48d207651fac3a57a9aa0269" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;SpinnerUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SpinnerUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="4eea0ca608e5c590b325168309b6434c00f0d638" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;SplitPaneUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SplitPaneUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="fb3dbccb3889bc7b8609d61092a161c42ee6d4d0" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;TabbedPaneUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;TabbedPaneUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="bf7bc019760d3c3d87b0573b76f11a09b3a51ca9" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;TableHeaderUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;TableHeaderUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="6fb9b208b295da65edcf6993e4ff79caeabd74d7" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;TableUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;TableUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="95e17c75b78fee341b72027498c671ee6db26abb" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;TextUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;TextUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="bedbb43564525fe5b2692e616e5f6473babec282" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ToolBarUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ToolBarUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="6deb990b9e65562640acd50862c844cb2701aac1" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ToolTipUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ToolTipUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="4df940effda0bc48381874736c437b749bcb0807" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;TreeUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;TreeUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="2d39954726b86f4bef02a2bf7eb406affc785111" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ViewportUI&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ViewportUI&lt;/code&gt; を組み合わせるために使用される多重化UI 。</target>
        </trans-unit>
        <trans-unit id="bfa6c5aa9794d343bdab40a369745170ecfa95c9" translate="yes" xml:space="preserve">
          <source>A multiplexing look and feel that allows more than one UI to be associated with a component at the same time.</source>
          <target state="translated">複数のUIを同時にコンポーネントに関連付けることができる多重化されたルックアンドフィール。</target>
        </trans-unit>
        <trans-unit id="3c1e5f419c26febccc0ffb1aca07fd601e9a17cf" translate="yes" xml:space="preserve">
          <source>A multiplexing look and feel that allows more than one UI to be associated with a component at the same time. The primary look and feel is called the &lt;em&gt;default&lt;/em&gt; look and feel, and the other look and feels are called &lt;em&gt;auxiliary&lt;/em&gt;.</source>
          <target state="translated">複数のUIをコンポーネントに同時に関連付けることができる多重化ルックアンドフィール。プライマリルックアンドフィールは&lt;em&gt;デフォルトの&lt;/em&gt;ルックアンドフィールと呼ばれ、他のルックアンドフィールは&lt;em&gt;補助&lt;/em&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="a8f6c2efcaf967fd17cecf4f42e5961f5cdde54a" translate="yes" xml:space="preserve">
          <source>A multiplexor of &lt;a href=&quot;selectablechannel&quot;&gt;&lt;code&gt;SelectableChannel&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;selectablechannel&quot;&gt; &lt;code&gt;SelectableChannel&lt;/code&gt; &lt;/a&gt;オブジェクトのマルチプレクサ。</target>
        </trans-unit>
        <trans-unit id="1495361d783dd2a9d043b0f1ccc945ff6d84551d" translate="yes" xml:space="preserve">
          <source>A multiplexor of selectable channels</source>
          <target state="translated">選択可能なチャンネルのマルチプレクサ</target>
        </trans-unit>
        <trans-unit id="555863f097a94438e284e109cba2dc49bb401875" translate="yes" xml:space="preserve">
          <source>A mutable builder for a &lt;code&gt;DoubleStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DoubleStream&lt;/code&gt; の変更可能なビルダー。</target>
        </trans-unit>
        <trans-unit id="90417ba4d57dcf29afd7fec868b8fdb146ad4c9b" translate="yes" xml:space="preserve">
          <source>A mutable builder for a &lt;code&gt;LongStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LongStream&lt;/code&gt; の変更可能なビルダー。</target>
        </trans-unit>
        <trans-unit id="044e204fc4ab1c02d5ea7c7f7994ed6f2a93ca7d" translate="yes" xml:space="preserve">
          <source>A mutable builder for a &lt;code&gt;Stream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Stream&lt;/code&gt; の変更可能なビルダー。</target>
        </trans-unit>
        <trans-unit id="a93cbe7058fafefe2e6c3715c295688f4da1f0bc" translate="yes" xml:space="preserve">
          <source>A mutable builder for a &lt;code&gt;Stream&lt;/code&gt;. This allows the creation of a &lt;code&gt;Stream&lt;/code&gt; by generating elements individually and adding them to the &lt;code&gt;Builder&lt;/code&gt; (without the copying overhead that comes from using an &lt;code&gt;ArrayList&lt;/code&gt; as a temporary buffer.)</source>
          <target state="translated">&lt;code&gt;Stream&lt;/code&gt; の変更可能なビルダー。これにより、要素を個別に生成して &lt;code&gt;Builder&lt;/code&gt; 追加することにより、 &lt;code&gt;Stream&lt;/code&gt; を作成できます（ &lt;code&gt;ArrayList&lt;/code&gt; を一時バッファーとして使用することによるオーバーヘッドのコピーはありません）。</target>
        </trans-unit>
        <trans-unit id="18ca1533c6784699fe41abab6fed9f7491312a39" translate="yes" xml:space="preserve">
          <source>A mutable builder for an &lt;code&gt;IntStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IntStream&lt;/code&gt; の変更可能なビルダー。</target>
        </trans-unit>
        <trans-unit id="ecc126b3174f7ae048b22adc473a9269aec45ddf" translate="yes" xml:space="preserve">
          <source>A mutable sequence of characters.</source>
          <target state="translated">変形可能な文字列。</target>
        </trans-unit>
        <trans-unit id="114a5f53e63078efc11af25d64ad64ab43e20f20" translate="yes" xml:space="preserve">
          <source>A mutable sequence of characters. This class provides an API compatible with &lt;code&gt;StringBuffer&lt;/code&gt;, but with no guarantee of synchronization. This class is designed for use as a drop-in replacement for &lt;code&gt;StringBuffer&lt;/code&gt; in places where the string buffer was being used by a single thread (as is generally the case). Where possible, it is recommended that this class be used in preference to &lt;code&gt;StringBuffer&lt;/code&gt; as it will be faster under most implementations.</source>
          <target state="translated">変更可能な文字のシーケンス。このクラスは &lt;code&gt;StringBuffer&lt;/code&gt; と互換性のあるAPIを提供しますが、同期の保証はありません。このクラスは、文字列バッファーが単一のスレッドによって使用されていた場所（一般的なケース）で、 &lt;code&gt;StringBuffer&lt;/code&gt; のドロップイン置換として使用するために設計されています。ほとんどの実装では高速になるため、可能であれば、このクラスを &lt;code&gt;StringBuffer&lt;/code&gt; よりも優先して使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="4bf8a240b81c2f14cdad8d3ef15b686060025c38" translate="yes" xml:space="preserve">
          <source>A mutable version of &lt;code&gt;ComboBoxModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ComboBoxModel&lt;/code&gt; の変更可能なバージョン。</target>
        </trans-unit>
        <trans-unit id="72b546ec375c20860b8c2b5ba62a0a6c41c735cf" translate="yes" xml:space="preserve">
          <source>A named mapping between characters</source>
          <target state="translated">文字間の名前付きマッピング</target>
        </trans-unit>
        <trans-unit id="2ab48f96a53d76bf9fe717aef2494bcc3996df7b" translate="yes" xml:space="preserve">
          <source>A named mapping between characters and bytes</source>
          <target state="translated">文字とバイトの間の名前付きマッピング</target>
        </trans-unit>
        <trans-unit id="500b84de38af55c5c034588505665f0cccfa6d4e" translate="yes" xml:space="preserve">
          <source>A named mapping between sequences of sixteen-bit Unicode &lt;a href=&quot;../../lang/character#unicode&quot;&gt;code units&lt;/a&gt; and sequences of bytes.</source>
          <target state="translated">16ビットUnicode &lt;a href=&quot;../../lang/character#unicode&quot;&gt;コード単位の&lt;/a&gt;シーケンスとバイトシーケンス間の名前付きマッピング。</target>
        </trans-unit>
        <trans-unit id="8a8533ff28a7e7235565a6d9d987a050c6c50423" translate="yes" xml:space="preserve">
          <source>A named mapping between sequences of sixteen-bit Unicode &lt;a href=&quot;../../lang/character#unicode&quot;&gt;code units&lt;/a&gt; and sequences of bytes. This class defines methods for creating decoders and encoders and for retrieving the various names associated with a charset. Instances of this class are immutable.</source>
          <target state="translated">16ビットUnicode &lt;a href=&quot;../../lang/character#unicode&quot;&gt;コード単位の&lt;/a&gt;シーケンスとバイトシーケンス間の名前付きマッピング。このクラスは、デコーダーとエンコーダーを作成し、文字セットに関連付けられたさまざまな名前を取得するためのメソッドを定義します。このクラスのインスタンスは不変です。</target>
        </trans-unit>
        <trans-unit id="458cd2c85e7533ea872f2e22726ff6877b1309a4" translate="yes" xml:space="preserve">
          <source>A named type declared within a construct other than a type.</source>
          <target state="translated">型以外のコンストラクタ内で宣言された名前付き型。</target>
        </trans-unit>
        <trans-unit id="c894148c721f2b7b2d26acf446229790a75dd927" translate="yes" xml:space="preserve">
          <source>A namespace declaration is written. If the namespace is a default namespace declaration (isDefault is true) then xmlns=&quot;$namespaceURI&quot; is written and the prefix is optional. If isDefault is false, the prefix must be declared and the writer must prepend xmlns to the prefix and write out a standard prefix declaration.</source>
          <target state="translated">名前空間宣言が記述されます。名前空間が既定の名前空間宣言の場合 (isDefault が true の場合)、xmlns=&quot;$namespaceURI&quot; が書き込まれ、接頭辞はオプションです。isDefault が false の場合は、接頭辞を宣言する必要があり、書き手は接頭辞の前に xmlns を付加し、標準の接頭辞宣言を書き出す必要があります。</target>
        </trans-unit>
        <trans-unit id="1f79de9c3b1e951c7064e57fbe3bb9c1a04d7fa1" translate="yes" xml:space="preserve">
          <source>A natural line that contains only white space characters is considered blank and is ignored. A comment line has an ASCII &lt;code&gt;'#'&lt;/code&gt; or &lt;code&gt;'!'&lt;/code&gt; as its first non-white space character; comment lines are also ignored and do not encode key-element information. In addition to line terminators, this format considers the characters space (&lt;code&gt;' '&lt;/code&gt;, &lt;code&gt;'\u0020'&lt;/code&gt;), tab (&lt;code&gt;'\t'&lt;/code&gt;, &lt;code&gt;'\u0009'&lt;/code&gt;), and form feed (&lt;code&gt;'\f'&lt;/code&gt;, &lt;code&gt;'\u000C'&lt;/code&gt;) to be white space.</source>
          <target state="translated">空白文字のみを含む自然な行は空白と見なされ、無視されます。コメント行にASCIIの &lt;code&gt;'#'&lt;/code&gt; または &lt;code&gt;'!'&lt;/code&gt; 最初の非空白文字として。コメント行も無視され、キー要素情報はエンコードされません。 &lt;code&gt;'\u0009'&lt;/code&gt; 加えて、この形式では、スペース（ &lt;code&gt;' '&lt;/code&gt; 、 &lt;code&gt;'\u0020'&lt;/code&gt; ）、タブ（ &lt;code&gt;'\t'&lt;/code&gt; 、'\ u0009'）、およびフォームフィード（ &lt;code&gt;'\f'&lt;/code&gt; 、 &lt;code&gt;'\u000C'&lt;/code&gt; ）が考慮されます。空白である。</target>
        </trans-unit>
        <trans-unit id="f5b4f6afaac43c87c02b9b20cd494e01bc27a526" translate="yes" xml:space="preserve">
          <source>A negated constraint. The returned object will be serialized as an instance of the non-public class  javax.management.NotQueryExp.</source>
          <target state="translated">否定された制約。返されたオブジェクトは、非公開クラス javax.management.NotQueryExp のインスタンスとしてシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="6e93eae5e5563dcda094f85cda52babcb326d950" translate="yes" xml:space="preserve">
          <source>A negated constraint. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.NotQueryExp&quot;&gt; javax.management.NotQueryExp&lt;/a&gt;.</source>
          <target state="translated">否定された制約。返されるオブジェクトは、非パブリッククラス&lt;a href=&quot;../../serialized-form#javax.management.NotQueryExp&quot;&gt;javax.management.NotQueryExpの&lt;/a&gt;インスタンスとしてシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="79bb08b42e8bcc663e05f72c5017484d7a3c8843" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this Name is less than, equal to, or greater than the given obj.</source>
          <target state="translated">この名前が与えられた obj より小さいか、等しいか、または大きいので、負の整数、ゼロ、または正の整数。</target>
        </trans-unit>
        <trans-unit id="6eced5b2e4d81d3b26a2627fda3671b2f3b39190" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this Rdn is less than, equal to, or greater than the given Object.</source>
          <target state="translated">このRdnが与えられたObjectより小さいか、等しいか、または大きいので、負の整数、ゼロ、または正の整数。</target>
        </trans-unit>
        <trans-unit id="9fb8c6b86e5345cbef91652c29458695a07c1f13" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this URI is less than, equal to, or greater than the given URI</source>
          <target state="translated">このURIが与えられたURIより小さいか、等しいか、または大きいので、負の整数、ゼロ、または正の整数</target>
        </trans-unit>
        <trans-unit id="ed80c12a5615031d10b0f7059e7c8eb7c272608a" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this buffer is less than, equal to, or greater than the given buffer</source>
          <target state="translated">このバッファが与えられたバッファより小さいか、等しいか、または大きいので、負の整数、ゼロ、または正の整数。</target>
        </trans-unit>
        <trans-unit id="c47633dceffec00e2e7bfd87003eb21a20911f2d" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this charset is less than, equal to, or greater than the specified charset</source>
          <target state="translated">この文字セットが指定された文字セットより小さいか、等しいか、または大きいので、負の整数、ゼロ、または正の整数</target>
        </trans-unit>
        <trans-unit id="3e32fdcf44f80e850e6eb4628fd8fbc785265461" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this module version is less than, equal to, or greater than the given module version</source>
          <target state="translated">このモジュールのバージョンが与えられたモジュールのバージョンより小さいか、等しいか、または大きいので、負の整数、ゼロ、または正の整数。</target>
        </trans-unit>
        <trans-unit id="012de39621337d32e06dcd963efb123f2d8408d2" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this &lt;code&gt;Version&lt;/code&gt; is less than, equal to, or greater than the given &lt;code&gt;Version&lt;/code&gt;</source>
          <target state="translated">A negative integer, zero, or a positive integer if this &lt;code&gt;Version&lt;/code&gt; is less than, equal to, or greater than the given &lt;code&gt;Version&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54c0d1d060aa6b22af2c8866e49b11fce042bcd3" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this module dependence is less than, equal to, or greater than the given module dependence</source>
          <target state="translated">このモジュール依存性が与えられたモジュール依存性より小さいか、等しいか、または大きい場合は、負の整数、ゼロ、または正の整数。</target>
        </trans-unit>
        <trans-unit id="ba01448065c5be61b8b1de4cc28f04f18702ae95" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this module descriptor is less than, equal to, or greater than the given module descriptor</source>
          <target state="translated">このモジュール記述子が与えられたモジュール記述子より小さいか、等しいか、または大きい場合は、負の整数、ゼロ、または正の整数。</target>
        </trans-unit>
        <trans-unit id="6b2908d9eff4fcb3e7593e05d1109f33d99c6233" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this module export is less than, equal to, or greater than the given export dependence</source>
          <target state="translated">このモジュールのエクスポートが、指定されたエクスポート依存性よりも小さいか、等しいか、または大きい場合は、負の整数、ゼロ、または正の整数。</target>
        </trans-unit>
        <trans-unit id="a6f08088fd568982cfa37fb2123efa0d7461bf10" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this module opens is less than, equal to, or greater than the given module opens</source>
          <target state="translated">負の整数、ゼロ、または正の整数で、このモジュールオープンが与えられたモジュールオープンより小さいか、等しいか、または大きい場合は</target>
        </trans-unit>
        <trans-unit id="14fc75c7164240154eb81e2f5886bbd043c13ae7" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this provides is less than, equal to, or greater than the given provides</source>
          <target state="translated">負の整数、ゼロ、または正の整数は、この提供が与えられた提供よりも小さいか、等しいか、または大きい場合には</target>
        </trans-unit>
        <trans-unit id="58f9c54b8b24163ccca7d19df4cfdcb1e2f4b205" translate="yes" xml:space="preserve">
          <source>A negative value means that the cookie is not stored persistently and will be deleted when the Web browser exits. A zero value causes the cookie to be deleted.</source>
          <target state="translated">負の値は、クッキーが永続的に保存されず、Web ブラウザが終了したときに削除されることを意味します。ゼロの値は、クッキーが削除されます。</target>
        </trans-unit>
        <trans-unit id="88f0bc390bc81564616c7ace6f9f0ff719f435d2" translate="yes" xml:space="preserve">
          <source>A network channel that supports Internet Protocol (IP) multicasting.</source>
          <target state="translated">インターネット プロトコル (IP)マルチキャストをサポートするネットワーク チャネル。</target>
        </trans-unit>
        <trans-unit id="cbdc419e84e51b1088337a46cc75bdfa7afbab39" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; instance for this &lt;code&gt;Lock&lt;/code&gt; instance</source>
          <target state="translated">この &lt;code&gt;Lock&lt;/code&gt; インスタンスの新しい&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;インスタンス</target>
        </trans-unit>
        <trans-unit id="aceb0d651c53edfc705d99c1a7c6bd60485b446b" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;mbeanserverdelegate&quot;&gt;&lt;code&gt;MBeanServerDelegate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;mbeanserverdelegate&quot;&gt; &lt;code&gt;MBeanServerDelegate&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c807f5aaccbe3ed21f9844b74c3f8e26dc5c8f14" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; object for managing the subprocess</source>
          <target state="translated">サブプロセスを管理するための新しい&lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;オブジェクト</target>
        </trans-unit>
        <trans-unit id="ec57e55fd3af4b36094fc208fbb620a69cf9f500" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;AccessibleJList&lt;/code&gt; instance is created if necessary.</source>
          <target state="translated">A new &lt;code&gt;AccessibleJList&lt;/code&gt; instance is created if necessary.</target>
        </trans-unit>
        <trans-unit id="5f48283e4f735c2f8c789ece1bf37a57efc23e23" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Attr&lt;/code&gt; object with the &lt;code&gt;nodeName&lt;/code&gt; attribute set to &lt;code&gt;name&lt;/code&gt;, and &lt;code&gt;localName&lt;/code&gt;, &lt;code&gt;prefix&lt;/code&gt;, and &lt;code&gt;namespaceURI&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt;. The value of the attribute is the empty string.</source>
          <target state="translated">A new &lt;code&gt;Attr&lt;/code&gt; object with the &lt;code&gt;nodeName&lt;/code&gt; attribute set to &lt;code&gt;name&lt;/code&gt; , and &lt;code&gt;localName&lt;/code&gt; , &lt;code&gt;prefix&lt;/code&gt; , and &lt;code&gt;namespaceURI&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt; . The value of the attribute is the empty string.</target>
        </trans-unit>
        <trans-unit id="11dad3570fa8f5d2138e2f8d660ea55490c345bf" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Attr&lt;/code&gt; object with the following attributes:</source>
          <target state="translated">A new &lt;code&gt;Attr&lt;/code&gt; object with the following attributes:</target>
        </trans-unit>
        <trans-unit id="dec4e93d87e2b6f8927646919d97ce55149dc434" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Connection&lt;/code&gt; object created using the JDBC 2.1 core API has an initially empty type map associated with it. A user may enter a custom mapping for a UDT in this type map. When a UDT is retrieved from a data source with the method &lt;code&gt;ResultSet.getObject&lt;/code&gt;, the &lt;code&gt;getObject&lt;/code&gt; method will check the connection's type map to see if there is an entry for that UDT. If so, the &lt;code&gt;getObject&lt;/code&gt; method will map the UDT to the class indicated. If there is no entry, the UDT will be mapped using the standard mapping.</source>
          <target state="translated">A new &lt;code&gt;Connection&lt;/code&gt; object created using the JDBC 2.1 core API has an initially empty type map associated with it. A user may enter a custom mapping for a UDT in this type map. When a UDT is retrieved from a data source with the method &lt;code&gt;ResultSet.getObject&lt;/code&gt; , the &lt;code&gt;getObject&lt;/code&gt; method will check the connection's type map to see if there is an entry for that UDT. If so, the &lt;code&gt;getObject&lt;/code&gt; method will map the UDT to the class indicated. If there is no entry, the UDT will be mapped using the standard mapping.</target>
        </trans-unit>
        <trans-unit id="0d6d7b584d2467ca78948a5e3c7d4899a326124c" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Document&lt;/code&gt; object with its document element. If the &lt;code&gt;NamespaceURI&lt;/code&gt;, &lt;code&gt;qualifiedName&lt;/code&gt;, and &lt;code&gt;doctype&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;, the returned &lt;code&gt;Document&lt;/code&gt; is empty with no document element.</source>
          <target state="translated">A new &lt;code&gt;Document&lt;/code&gt; object with its document element. If the &lt;code&gt;NamespaceURI&lt;/code&gt; , &lt;code&gt;qualifiedName&lt;/code&gt; , and &lt;code&gt;doctype&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt; , the returned &lt;code&gt;Document&lt;/code&gt; is empty with no document element.</target>
        </trans-unit>
        <trans-unit id="5e5a487869645c6dbb6e55243697eec58cfb36d7" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;DocumentFragment&lt;/code&gt;.</source>
          <target state="translated">A new &lt;code&gt;DocumentFragment&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87f69480435125c7e2c846d1d77644e770bd9625" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;DocumentType&lt;/code&gt; node with &lt;code&gt;Node.ownerDocument&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">A new &lt;code&gt;DocumentType&lt;/code&gt; node with &lt;code&gt;Node.ownerDocument&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb08b864203a9906480e953a80cc71b7417f5f4c" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Element&lt;/code&gt; object with the &lt;code&gt;nodeName&lt;/code&gt; attribute set to &lt;code&gt;tagName&lt;/code&gt;, and &lt;code&gt;localName&lt;/code&gt;, &lt;code&gt;prefix&lt;/code&gt;, and &lt;code&gt;namespaceURI&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">A new &lt;code&gt;Element&lt;/code&gt; object with the &lt;code&gt;nodeName&lt;/code&gt; attribute set to &lt;code&gt;tagName&lt;/code&gt; , and &lt;code&gt;localName&lt;/code&gt; , &lt;code&gt;prefix&lt;/code&gt; , and &lt;code&gt;namespaceURI&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3d4f4912a05669c5f64443a3dc57bb80a56868c" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Element&lt;/code&gt; object with the following attributes:</source>
          <target state="translated">A new &lt;code&gt;Element&lt;/code&gt; object with the following attributes:</target>
        </trans-unit>
        <trans-unit id="41077822641618130ec0bedfaf21b31638589ccb" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;NodeList&lt;/code&gt; object containing all the matched &lt;code&gt;Elements&lt;/code&gt;.</source>
          <target state="translated">一致したすべての &lt;code&gt;Elements&lt;/code&gt; を含む新しい &lt;code&gt;NodeList&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="8323ebc1e0ab1a61c592a7a03b8de3a77fc401c4" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Predicate&lt;/code&gt; object may be set at any time. This has the effect of changing constraints on the &lt;code&gt;RowSet&lt;/code&gt; object's data. In addition, modifying the filter at runtime presents issues whereby multiple components may be operating on one &lt;code&gt;FilteredRowSet&lt;/code&gt; object. Application developers must take responsibility for managing multiple handles to &lt;code&gt;FilteredRowSet&lt;/code&gt; objects when their underling &lt;code&gt;Predicate&lt;/code&gt; objects change.</source>
          <target state="translated">A new &lt;code&gt;Predicate&lt;/code&gt; object may be set at any time. This has the effect of changing constraints on the &lt;code&gt;RowSet&lt;/code&gt; object's data. In addition, modifying the filter at runtime presents issues whereby multiple components may be operating on one &lt;code&gt;FilteredRowSet&lt;/code&gt; object. Application developers must take responsibility for managing multiple handles to &lt;code&gt;FilteredRowSet&lt;/code&gt; objects when their underling &lt;code&gt;Predicate&lt;/code&gt; objects change.</target>
        </trans-unit>
        <trans-unit id="5a0818fae3b102f2598d388007a8a9be75f48b7f" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;ProtectionDomain&lt;/code&gt; instance is created for each &lt;code&gt;ProtectionDomain&lt;/code&gt; in the</source>
          <target state="translated">新しい &lt;code&gt;ProtectionDomain&lt;/code&gt; インスタンスがそれぞれのために作成され &lt;code&gt;ProtectionDomain&lt;/code&gt; に</target>
        </trans-unit>
        <trans-unit id="40e23dc949c192b9bab658bd0f0a73dd00053a29" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;ProtectionDomain&lt;/code&gt; instance is created for each non-static &lt;code&gt;ProtectionDomain&lt;/code&gt; ( (staticPermissionsOnly() == false) in the &lt;code&gt;currentDomains&lt;/code&gt; array. Each new &lt;code&gt;ProtectionDomain&lt;/code&gt; instance is created using the &lt;code&gt;CodeSource&lt;/code&gt;, &lt;code&gt;Permission&lt;/code&gt;s and &lt;code&gt;ClassLoader&lt;/code&gt; from the corresponding &lt;code&gt;ProtectionDomain&lt;/code&gt; in &lt;code&gt;currentDomains&lt;/code&gt;, as well as with the Principals from the &lt;code&gt;Subject&lt;/code&gt; associated with this &lt;code&gt;SubjectDomainCombiner&lt;/code&gt;. Static ProtectionDomains are combined as-is and no new instance is created.</source>
          <target state="translated">A new &lt;code&gt;ProtectionDomain&lt;/code&gt; instance is created for each non-static &lt;code&gt;ProtectionDomain&lt;/code&gt; ( (staticPermissionsOnly() == false) in the &lt;code&gt;currentDomains&lt;/code&gt; array. Each new &lt;code&gt;ProtectionDomain&lt;/code&gt; instance is created using the &lt;code&gt;CodeSource&lt;/code&gt; , &lt;code&gt;Permission&lt;/code&gt; s and &lt;code&gt;ClassLoader&lt;/code&gt; from the corresponding &lt;code&gt;ProtectionDomain&lt;/code&gt; in &lt;code&gt;currentDomains&lt;/code&gt; , as well as with the Principals from the &lt;code&gt;Subject&lt;/code&gt; associated with this &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; . Static ProtectionDomains are combined as-is and no new instance is created.</target>
        </trans-unit>
        <trans-unit id="a95239ece3f57681e7656c554da453f9592e1013" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;ScriptEngine&lt;/code&gt; instance.</source>
          <target state="translated">新しい &lt;code&gt;ScriptEngine&lt;/code&gt; インスタンス。</target>
        </trans-unit>
        <trans-unit id="1f109b8d7e453b9671d1212247ac664691653bfb" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;SecureRandom&lt;/code&gt; object encapsulating the &lt;code&gt;SecureRandomSpi&lt;/code&gt; implementation from the specified &lt;code&gt;Provider&lt;/code&gt; object is returned. Note that the specified &lt;code&gt;Provider&lt;/code&gt; object does not have to be registered in the provider list.</source>
          <target state="translated">A new &lt;code&gt;SecureRandom&lt;/code&gt; object encapsulating the &lt;code&gt;SecureRandomSpi&lt;/code&gt; implementation from the specified &lt;code&gt;Provider&lt;/code&gt; object is returned. Note that the specified &lt;code&gt;Provider&lt;/code&gt; object does not have to be registered in the provider list.</target>
        </trans-unit>
        <trans-unit id="4443aab9ef82b062faadc57d2fdcdb83ef1aabc1" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;SecureRandom&lt;/code&gt; object encapsulating the &lt;code&gt;SecureRandomSpi&lt;/code&gt; implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">A new &lt;code&gt;SecureRandom&lt;/code&gt; object encapsulating the &lt;code&gt;SecureRandomSpi&lt;/code&gt; implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</target>
        </trans-unit>
        <trans-unit id="5c35c1a4d858abd970e2d3b67ff470296be409e5" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;TIFFField&lt;/code&gt;.</source>
          <target state="translated">A new &lt;code&gt;TIFFField&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eda082cce43bbb1d4dd772771575be56b104b4ff" translate="yes" xml:space="preserve">
          <source>A new AlgorithmParameterGenerator object encapsulating the AlgorithmParameterGeneratorSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダ・オブジェクトから AlgorithmParameterGeneratorSpi の実装をカプセル化した新しい AlgorithmParameterGenerator オブジェクトが返されます。指定されたプロバイダオブジェクトはプロバイダリストに登録されていなくてもよいことに注意してください。</target>
        </trans-unit>
        <trans-unit id="0096921d89846c0cf2763feccbd6997a0ca057e4" translate="yes" xml:space="preserve">
          <source>A new AlgorithmParameterGenerator object encapsulating the AlgorithmParameterGeneratorSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定されたプロバイダから AlgorithmParameterGeneratorSpi 実装をカプセル化した新しい AlgorithmParameterGenerator オブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="c8db4ef5023ec47dffbc295585ed2ee725e8ec7e" translate="yes" xml:space="preserve">
          <source>A new AlgorithmParameters object encapsulating the AlgorithmParametersSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからAlgorithmParametersSpiの実装をカプセル化した新しいAlgorithmParametersオブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="05e564e535bfdce60132adece41bae9a47113364" translate="yes" xml:space="preserve">
          <source>A new AlgorithmParameters object encapsulating the AlgorithmParametersSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定されたプロバイダの AlgorithmParametersSpi 実装をカプセル化した新しい AlgorithmParameters オブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="0f1d7452ea04f9c2afe99ae652273776235855e7" translate="yes" xml:space="preserve">
          <source>A new CertPathBuilder object encapsulating the CertPathBuilderSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定した Provider オブジェクトから CertPathBuilderSpi 実装をカプセル化した新しい CertPathBuilder オブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="4813f80297b39ee0005052624b5afe1227d8ba78" translate="yes" xml:space="preserve">
          <source>A new CertPathBuilder object encapsulating the CertPathBuilderSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのCertPathBuilderSpi実装をカプセル化した新しいCertPathBuilderオブジェクトが返されます。指定したプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="f4f6e5d465fe4439ee8d90eb2dc3dbe6fb7f98e1" translate="yes" xml:space="preserve">
          <source>A new CertPathValidator object encapsulating the CertPathValidatorSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからCertPathValidatorSpi実装をカプセル化した新しいCertPathValidatorオブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="c47b2e857fd28f65e29dfe763089c7fad02932d8" translate="yes" xml:space="preserve">
          <source>A new CertPathValidator object encapsulating the CertPathValidatorSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのCertPathValidatorSpi実装をカプセル化した新しいCertPathValidatorオブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="7bd4645178202c99207e926685878b815ba8fce2" translate="yes" xml:space="preserve">
          <source>A new CertStore object encapsulating the CertStoreSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトから、CertStoreSpi の実装をカプセル化した新しい CertStore オブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="8d8f6a7b01df83b2a9a8122afb18b83d00dd1d65" translate="yes" xml:space="preserve">
          <source>A new CertStore object encapsulating the CertStoreSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのCertStoreSpi実装をカプセル化した新しいCertStoreオブジェクトを返します。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="3ffe740d37d58dd03d186ad8aaf4cc29b54a3ee6" translate="yes" xml:space="preserve">
          <source>A new CertificateFactory object encapsulating the CertificateFactorySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトから CertificateFactorySpi の実装をカプセル化した新しい CertificateFactory オブジェクトを返します。なお、指定されたプロバイダオブジェクトはプロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="667c5edd8de2720b23e0df06dc2169efc2ffbf6e" translate="yes" xml:space="preserve">
          <source>A new CertificateFactory object encapsulating the CertificateFactorySpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定されたプロバイダの CertificateFactorySpi 実装をカプセル化した新しい CertificateFactory オブジェクトを返します。指定されたプロバイダはセキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="13f5262b3e58b67e449bf85fb8910c0c65651876" translate="yes" xml:space="preserve">
          <source>A new Cipher object encapsulating the CipherSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定された Provider オブジェクトから CipherSpi 実装をカプセル化した新しい Cipher オブジェクトが返されます。指定されたプロバイダオブジェクトはプロバイダリストに登録されていなくてもよいことに注意してください。</target>
        </trans-unit>
        <trans-unit id="a779576cecf11550d340570f7b289b329b69e9c0" translate="yes" xml:space="preserve">
          <source>A new Cipher object encapsulating the CipherSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定されたプロバイダの CipherSpi 実装をカプセル化した新しい Cipher オブジェクトが返されます。指定されたプロバイダはセキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="e6ef251d1ad08ddaf631fcd2060e3b3a5e0f46c5" translate="yes" xml:space="preserve">
          <source>A new Configuration object encapsulating the ConfigurationSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからConfigurationSpi実装をカプセル化した新しいConfigurationオブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="fa463bab5fbb393507e91ecd483b38008a3795b7" translate="yes" xml:space="preserve">
          <source>A new Configuration object encapsulating the ConfigurationSpi implementation from the specified provider is returned. The specified provider must be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダからConfigurationSpi実装をカプセル化した新しいConfigurationオブジェクトが返されます。指定されたプロバイダは、プロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="268558c1e911108ef6beb8616f773d3b457cd85a" translate="yes" xml:space="preserve">
          <source>A new DOM Document object.</source>
          <target state="translated">新しい DOM Document オブジェクト。</target>
        </trans-unit>
        <trans-unit id="3d7bca7783460fdcbe766d8afa49d507dd57fce6" translate="yes" xml:space="preserve">
          <source>A new ExemptionMechanism object encapsulating the ExemptionMechanismSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定したプロバイダオブジェクトから ExemptionMechanismSpi の実装をカプセル化した新しい ExemptionMechanism オブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="7d01edec86d421f499b113f481dc2188c1235265" translate="yes" xml:space="preserve">
          <source>A new ExemptionMechanism object encapsulating the ExemptionMechanismSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダの ExemptionMechanismSpi 実装をカプセル化した新しい ExemptionMechanism オブジェクトが返されます。指定したプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="eb9a359af290bd0355a7a6eb076732d3c75c73d0" translate="yes" xml:space="preserve">
          <source>A new InputSource or null for the default.</source>
          <target state="translated">新しいInputSource、またはデフォルトの場合はnull。</target>
        </trans-unit>
        <trans-unit id="3a8f176dc13128dc7727dc967e2effffb4fd2d1e" translate="yes" xml:space="preserve">
          <source>A new KeyAgreement object encapsulating the KeyAgreementSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからKeyAgreementSpi実装をカプセル化した新しいKeyAgreementオブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="abfdca351b763735030c6ffa741e09a2e267a2fe" translate="yes" xml:space="preserve">
          <source>A new KeyAgreement object encapsulating the KeyAgreementSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのKeyAgreementSpi実装をカプセル化した新しいKeyAgreementオブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="84931dacf7f4308bf76b01043d9e1d1952f0c0e2" translate="yes" xml:space="preserve">
          <source>A new KeyFactory object encapsulating the KeyFactorySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからKeyFactorySpiの実装をカプセル化した新しいKeyFactoryオブジェクトを返します。なお、指定されたプロバイダオブジェクトはプロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="17be658cae2f4ca28d3a636c2fb89480fddc80e2" translate="yes" xml:space="preserve">
          <source>A new KeyFactory object encapsulating the KeyFactorySpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのKeyFactorySpi実装をカプセル化した新しいKeyFactoryオブジェクトを返します。指定したプロバイダはセキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="726b9be3aa361c7a1a6a8904841d210166b70e4a" translate="yes" xml:space="preserve">
          <source>A new KeyGenerator object encapsulating the KeyGeneratorSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからKeyGeneratorSpi実装をカプセル化した新しいKeyGeneratorオブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="601bd47706449db33537347d94064978f2eacaea" translate="yes" xml:space="preserve">
          <source>A new KeyGenerator object encapsulating the KeyGeneratorSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのKeyGeneratorSpi実装をカプセル化した新しいKeyGeneratorオブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="bb1a75f50c4c8029b580cf3a428319dbb0999447" translate="yes" xml:space="preserve">
          <source>A new KeyManagerFactory object encapsulating the KeyManagerFactorySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトのKeyManagerFactorySpi実装をカプセル化した新しいKeyManagerFactoryオブジェクトを返します。なお、指定されたプロバイダオブジェクトはプロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="4797fb2c6d23e5bab123bb7103d87927153a81fa" translate="yes" xml:space="preserve">
          <source>A new KeyManagerFactory object encapsulating the KeyManagerFactorySpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのKeyManagerFactorySpi実装をカプセル化した新しいKeyManagerFactoryオブジェクトを返します。指定したプロバイダはセキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="bd15c6ed2e3240f50d98657c044e44c22458ebd1" translate="yes" xml:space="preserve">
          <source>A new KeyPairGenerator object encapsulating the KeyPairGeneratorSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトから KeyPairGeneratorSpi 実装をカプセル化した新しい KeyPairGenerator オブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="12c4ce735c8941f25ce3934bcb5bb865e73a5782" translate="yes" xml:space="preserve">
          <source>A new KeyPairGenerator object encapsulating the KeyPairGeneratorSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダの KeyPairGeneratorSpi 実装をカプセル化した新しい KeyPairGenerator オブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="8ab07cbfc7499c36532bc293c456c29f325598e5" translate="yes" xml:space="preserve">
          <source>A new KeyStore object encapsulating the KeyStoreSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからKeyStoreSpi実装をカプセル化した新しいKeyStoreオブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="1c8dfdc36199a332249519eeeea1609560b4aada" translate="yes" xml:space="preserve">
          <source>A new KeyStore object encapsulating the KeyStoreSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのKeyStoreSpi実装をカプセル化した新しいKeyStoreオブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="efcee39721eebc8fee884a81cb101c715d642357" translate="yes" xml:space="preserve">
          <source>A new Mac object encapsulating the MacSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからMacSpi実装をカプセル化した新しいMacオブジェクトが返されます。指定されたプロバイダオブジェクトはプロバイダリストに登録されていなくてもよいことに注意してください。</target>
        </trans-unit>
        <trans-unit id="3df5f1db3255acb1b4aec4415fe60b9d47e4877d" translate="yes" xml:space="preserve">
          <source>A new Mac object encapsulating the MacSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのMacSpi実装をカプセル化した新しいMacオブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="3e0370abbf39cd0a1720174664441cdfa936cded" translate="yes" xml:space="preserve">
          <source>A new MessageDigest object encapsulating the MessageDigestSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトから MessageDigestSpi 実装をカプセル化した新しい MessageDigest オブジェクトが返されます。指定されたプロバイダオブジェクトはプロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="2b3460499c4fc8e488a6d3199e9febda0e668b3b" translate="yes" xml:space="preserve">
          <source>A new MessageDigest object encapsulating the MessageDigestSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定されたプロバイダの MessageDigestSpi 実装をカプセル化した新しい MessageDigest オブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="e951b0d1178624f88694988cc856af7f8e4eb0d7" translate="yes" xml:space="preserve">
          <source>A new Policy object encapsulating the PolicySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからPolicySpi実装をカプセル化した新しいPolicyオブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="af2d9c29be422703f6d5f565cf9b2fa602f5114a" translate="yes" xml:space="preserve">
          <source>A new Policy object encapsulating the PolicySpi implementation from the specified provider is returned. The specified provider must be registered in the provider list.</source>
          <target state="translated">指定したプロバイダからPolicySpi実装をカプセル化した新しいPolicyオブジェクトが返されます。指定されたプロバイダは、プロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="7858bf11a432c416daff7336874533473b29ac41" translate="yes" xml:space="preserve">
          <source>A new SSLContext object encapsulating the SSLContextSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトから SSLContextSpi 実装をカプセル化した新しい SSLContext オブジェクトが返されます。指定されたプロバイダオブジェクトはプロバイダリストに登録されていなくてもよいことに注意してください。</target>
        </trans-unit>
        <trans-unit id="c8fb01cecb27c91b6b8cf68e13eff80f90e7c94f" translate="yes" xml:space="preserve">
          <source>A new SSLContext object encapsulating the SSLContextSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダの SSLContextSpi 実装をカプセル化した新しい SSLContext オブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="125b51a284735009e0587e15b1957037a70f2802" translate="yes" xml:space="preserve">
          <source>A new SecretKeyFactory object encapsulating the SecretKeyFactorySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからSecretKeyFactorySpiの実装をカプセル化した新しいSecretKeyFactoryオブジェクトを返します。なお、指定されたプロバイダオブジェクトはプロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="a40ee33baacc8bc5aa95c3f9ea8fbb1bb62b66e8" translate="yes" xml:space="preserve">
          <source>A new SecretKeyFactory object encapsulating the SecretKeyFactorySpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのSecretKeyFactorySpi実装をカプセル化した新しいSecretKeyFactoryオブジェクトを返します。指定したプロバイダはセキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="a0ad3fe577ac3de904aa73bfe5d0324bc87a0ef2" translate="yes" xml:space="preserve">
          <source>A new SecureRandom object encapsulating the SecureRandomSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトから、SecureRandomSpi の実装をカプセル化した新しい SecureRandom オブジェクトが返されます。なお、指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="7cbd31f6dffe090270edeb2c56d25020ed9dc191" translate="yes" xml:space="preserve">
          <source>A new SecureRandom object encapsulating the SecureRandomSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダの SecureRandomSpi 実装をカプセル化した新しい SecureRandom オブジェクトを返します。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="828cbcea91bf56c9036fa8b7931cff18275cc27b" translate="yes" xml:space="preserve">
          <source>A new Signature object encapsulating the SignatureSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダ・オブジェクトからSignatureSpiの実装をカプセル化した新しいSignatureオブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="ce3264e462754c18f1da3742ab2d57ae7b1dd714" translate="yes" xml:space="preserve">
          <source>A new Signature object encapsulating the SignatureSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定されたプロバイダのSignatureSpi実装をカプセル化した新しいSignatureオブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="ad638694a4b1174b1e24a42aa6da4815fa5435e1" translate="yes" xml:space="preserve">
          <source>A new Socket &lt;code&gt;s&lt;/code&gt; is created and, if there is a security manager, the security manager's &lt;code&gt;checkAccept&lt;/code&gt; method is called with &lt;code&gt;s.getInetAddress().getHostAddress()&lt;/code&gt; and &lt;code&gt;s.getPort()&lt;/code&gt; as its arguments to ensure the operation is allowed. This could result in a SecurityException.</source>
          <target state="translated">新しいソケット &lt;code&gt;s&lt;/code&gt; が作成され、セキュリティマネージャが存在する場合、セキュリティマネージャの &lt;code&gt;checkAccept&lt;/code&gt; のメソッドを使って呼び出される &lt;code&gt;s.getInetAddress().getHostAddress()&lt;/code&gt; および &lt;code&gt;s.getPort()&lt;/code&gt; の動作を保証するためにその引数が許可されているよう。これにより、SecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="66204968ac98a71fc6ee269f8a995331d559448a" translate="yes" xml:space="preserve">
          <source>A new TerminalFactory object encapsulating the TerminalFactorySpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのTerminalFactorySpi実装をカプセル化した新しいTerminalFactoryオブジェクトを返します。指定したプロバイダはセキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="84dfef1c1eaa14da4b2dc8e38eb215a181632e26" translate="yes" xml:space="preserve">
          <source>A new TerminalFactory object encapsulating the TerminalFactorySpi implementation from the specified provider object is returned. Note that the specified provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定したプロバイダオブジェクトからTerminalFactorySpiの実装をカプセル化した新しいTerminalFactoryオブジェクトを返します。なお、指定したプロバイダオブジェクトはプロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="97302852d3f597f8d52fdf01ec03933350e6ae95" translate="yes" xml:space="preserve">
          <source>A new TrustManagerFactory object encapsulating the TrustManagerFactorySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからTrustManagerFactorySpiの実装をカプセル化した新しいTrustManagerFactoryオブジェクトを返します。なお、指定されたプロバイダオブジェクトはプロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="23fe331bb6446dd58e24f97a053114136ed0249e" translate="yes" xml:space="preserve">
          <source>A new URI is constructed with this URI's scheme and the given URI's query and fragment components.</source>
          <target state="translated">新しいURIは、このURIのスキームと、与えられたURIのクエリとフラグメントのコンポーネントを用いて構築される。</target>
        </trans-unit>
        <trans-unit id="157a34a241ea1b952cd99032a77ba64cbe69bb79" translate="yes" xml:space="preserve">
          <source>A new XML reader.</source>
          <target state="translated">新しいXMLリーダー。</target>
        </trans-unit>
        <trans-unit id="06f9613f699e6fa12d911001309fb89e22f8dd9e" translate="yes" xml:space="preserve">
          <source>A new asynchronous channel group</source>
          <target state="translated">新しい非同期チャンネルグループ</target>
        </trans-unit>
        <trans-unit id="f9986c93c068befdf1d67a7439a7159a62fd88b3" translate="yes" xml:space="preserve">
          <source>A new asynchronous file channel</source>
          <target state="translated">新しい非同期ファイルチャンネル</target>
        </trans-unit>
        <trans-unit id="0cbc57d6c284b1dd12c94be8622f616e240f8834" translate="yes" xml:space="preserve">
          <source>A new asynchronous server socket channel</source>
          <target state="translated">新しい非同期サーバソケットチャンネル</target>
        </trans-unit>
        <trans-unit id="9c56f1e622819c89f8e6fae5048bfb4464aa4589" translate="yes" xml:space="preserve">
          <source>A new asynchronous socket channel</source>
          <target state="translated">新しい非同期ソケットチャンネル</target>
        </trans-unit>
        <trans-unit id="629499fc782a69be656b125acbccb40f74208a4a" translate="yes" xml:space="preserve">
          <source>A new builder</source>
          <target state="translated">新しいビルダー</target>
        </trans-unit>
        <trans-unit id="9fad74d240d25d378558b1255b34f70560a228bf" translate="yes" xml:space="preserve">
          <source>A new builder that builds an automatic module</source>
          <target state="translated">自動モジュールを構築する新しいビルダー</target>
        </trans-unit>
        <trans-unit id="e92d9957909a8d005975568fba3a9c49448141f9" translate="yes" xml:space="preserve">
          <source>A new builder that builds an open module</source>
          <target state="translated">オープンモジュールをビルドする新しいビルダー</target>
        </trans-unit>
        <trans-unit id="25ee34a403c6700c546a4108cc328ae600591c3e" translate="yes" xml:space="preserve">
          <source>A new certificate handling package is created in the Java platform.</source>
          <target state="translated">新しい証明書処理パッケージがJavaプラットフォームで作成されます。</target>
        </trans-unit>
        <trans-unit id="718f2b8bbf1587dde6bb38de3b6d608243e6dea2" translate="yes" xml:space="preserve">
          <source>A new certificate handling package is created in the Java platform. This Certificate interface is entirely deprecated and is here to allow for a smooth transition to the new package.</source>
          <target state="translated">新しい証明書処理パッケージが Java プラットフォームで作成されます。この証明書インターフェイスは完全に非推奨となっており、新しいパッケージへのスムーズな移行を可能にするためにここにあります。</target>
        </trans-unit>
        <trans-unit id="26ac536ddec39c76615631278c13e054fe68ed0b" translate="yes" xml:space="preserve">
          <source>A new char buffer</source>
          <target state="translated">新しい char バッファ</target>
        </trans-unit>
        <trans-unit id="01d9b805add68dab9a76c40af460390f4da7fb91" translate="yes" xml:space="preserve">
          <source>A new client connection has been opened.</source>
          <target state="translated">新しいクライアント接続が開かれました。</target>
        </trans-unit>
        <trans-unit id="cc2a294dd99b3c03dbf54cdf085be4e65bab5b13" translate="yes" xml:space="preserve">
          <source>A new collation rules string can be created by concatenating rules strings. For example, the rules returned by &lt;a href=&quot;#getRules()&quot;&gt;&lt;code&gt;getRules()&lt;/code&gt;&lt;/a&gt; could be concatenated to combine multiple &lt;code&gt;RuleBasedCollator&lt;/code&gt;s.</source>
          <target state="translated">A new collation rules string can be created by concatenating rules strings. For example, the rules returned by &lt;a href=&quot;#getRules()&quot;&gt; &lt;code&gt;getRules()&lt;/code&gt; &lt;/a&gt; could be concatenated to combine multiple &lt;code&gt;RuleBasedCollator&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="827e2087bb76a0b88fc51994d48a3006017e8bae" translate="yes" xml:space="preserve">
          <source>A new collation rules string can be created by concatenating rules strings. For example, the rules returned by &lt;a href=&quot;rulebasedcollator#getRules--&quot;&gt;&lt;code&gt;getRules()&lt;/code&gt;&lt;/a&gt; could be concatenated to combine multiple &lt;code&gt;RuleBasedCollator&lt;/code&gt;s.</source>
          <target state="translated">ルール文字列を連結することにより、新しい照合ルール文字列を作成できます。たとえば、&lt;a href=&quot;rulebasedcollator#getRules--&quot;&gt; &lt;code&gt;getRules()&lt;/code&gt; &lt;/a&gt;によって返されるルールを連結して、複数の &lt;code&gt;RuleBasedCollator&lt;/code&gt; を組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="0c8e2bfcf83550d90a8829fb36311408b5e67747" translate="yes" xml:space="preserve">
          <source>A new datagram channel</source>
          <target state="translated">新しいデータグラムチャンネル</target>
        </trans-unit>
        <trans-unit id="e0b8ebf717a254cbd0e710cad36b3aa7cf6b47c8" translate="yes" xml:space="preserve">
          <source>A new decoder for this charset</source>
          <target state="translated">この文字セットのための新しいデコーダ</target>
        </trans-unit>
        <trans-unit id="a58078311df4687b197e1dcc8ca8cfde78caada0" translate="yes" xml:space="preserve">
          <source>A new double buffer</source>
          <target state="translated">新しいダブルバッファ</target>
        </trans-unit>
        <trans-unit id="c7e6b0b71de9de9ede7aea10272874373ea2cfbf" translate="yes" xml:space="preserve">
          <source>A new encoder for this charset</source>
          <target state="translated">この文字セット用の新しいエンコーダ</target>
        </trans-unit>
        <trans-unit id="7a12be5620980a642f2d62bb55b1169fe7d2f9c0" translate="yes" xml:space="preserve">
          <source>A new file channel</source>
          <target state="translated">新しいファイルチャンネル</target>
        </trans-unit>
        <trans-unit id="7a03fc9b6fe7f9f50a8b588d5c2839f795d5cfa3" translate="yes" xml:space="preserve">
          <source>A new file system</source>
          <target state="translated">新しいファイルシステム</target>
        </trans-unit>
        <trans-unit id="2c72f7dbc539aca73a65ca87d61f96c62f44ab73" translate="yes" xml:space="preserve">
          <source>A new float buffer</source>
          <target state="translated">新しいフロートバッファ</target>
        </trans-unit>
        <trans-unit id="07e3279021ba77f5ae5155347ef02546bd534253" translate="yes" xml:space="preserve">
          <source>A new input stream</source>
          <target state="translated">新しい入力ストリーム</target>
        </trans-unit>
        <trans-unit id="aa02ce4bf632eab35c8c2d8de16eb028c133b493" translate="yes" xml:space="preserve">
          <source>A new instance of &lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt; is created every time when invoking the &lt;a href=&quot;urlstreamhandler#openConnection(java.net.URL)&quot;&gt;URLStreamHandler.openConnection(URL)&lt;/a&gt; method of the protocol handler for this URL.</source>
          <target state="translated">A new instance of &lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt; is created every time when invoking the &lt;a href=&quot;urlstreamhandler#openConnection(java.net.URL)&quot;&gt;URLStreamHandler.openConnection(URL)&lt;/a&gt; method of the protocol handler for this URL.</target>
        </trans-unit>
        <trans-unit id="c28559dd6b37c82370a2d6d36b273e27af024dea" translate="yes" xml:space="preserve">
          <source>A new instance of &lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt; is created every time when invoking the &lt;a href=&quot;urlstreamhandler#openConnection-java.net.URL-&quot;&gt;URLStreamHandler.openConnection(URL)&lt;/a&gt; method of the protocol handler for this URL.</source>
          <target state="translated">このURLのプロトコルハンドラーの&lt;a href=&quot;urlstreamhandler#openConnection-java.net.URL-&quot;&gt;URLStreamHandler.openConnection（URL）&lt;/a&gt;メソッドを呼び出すたびに、&lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt;の新しいインスタンスが作成されます。</target>
        </trans-unit>
        <trans-unit id="09ee83524a2a6cec8de09ad6addfbae7e314cdce" translate="yes" xml:space="preserve">
          <source>A new instance of a &lt;code&gt;DOMImplementation&lt;/code&gt;.</source>
          <target state="translated">A new instance of a &lt;code&gt;DOMImplementation&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4961957f719848f8638762dfcd734c9efac8219" translate="yes" xml:space="preserve">
          <source>A new instance of a CachedRowSet.</source>
          <target state="translated">CachedRowSet の新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="faafe4152486969e7c281c1445dc75ff92829b56" translate="yes" xml:space="preserve">
          <source>A new instance of a DOM Document object.</source>
          <target state="translated">DOM Document オブジェクトの新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="63baa74073afc7903bcfd521ce76950ab24c3358" translate="yes" xml:space="preserve">
          <source>A new instance of a DocumentBuilder.</source>
          <target state="translated">DocumentBuilderの新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="43aeb569dfa12312d98c1df99b0b9c5a57a1cecb" translate="yes" xml:space="preserve">
          <source>A new instance of a FilteredRowSet.</source>
          <target state="translated">FilteredRowSetの新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="457ed6ba0799b2cad0030abf99f554a8d05119f5" translate="yes" xml:space="preserve">
          <source>A new instance of a JdbcRowSet.</source>
          <target state="translated">JdbcRowSetの新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="c288ef954fd9c070a9e9c45378da1f7bfaa440ee" translate="yes" xml:space="preserve">
          <source>A new instance of a JoinRowSet.</source>
          <target state="translated">JoinRowSet の新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="dba82889fa35016045565b66ab8e267b901eb25b" translate="yes" xml:space="preserve">
          <source>A new instance of a SAXParser.</source>
          <target state="translated">SAXParserの新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="0ed0e50c9ee23a426d83efb31df4a7ea91a7cc07" translate="yes" xml:space="preserve">
          <source>A new instance of a SAXParserFactory.</source>
          <target state="translated">SAXParserFactoryの新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="69c4e380a0d626dbb5eb47b86877ca603ed20145" translate="yes" xml:space="preserve">
          <source>A new instance of a WebRowSet.</source>
          <target state="translated">WebRowSetの新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="02ba29b9df798f29678c5c4004096be3513a4ab9" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;DatatypeFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;DatatypeFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="f1aefd1dfdb46b9d062c77a9d2289f8c0e987db0" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;DatatypeFactory&lt;/code&gt; is created through the &lt;a href=&quot;#newInstance()&quot;&gt;&lt;code&gt;newInstance()&lt;/code&gt;&lt;/a&gt; method that uses the following implementation resolution mechanisms to determine an implementation:</source>
          <target state="translated">A new instance of the &lt;code&gt;DatatypeFactory&lt;/code&gt; is created through the &lt;a href=&quot;#newInstance()&quot;&gt; &lt;code&gt;newInstance()&lt;/code&gt; &lt;/a&gt; method that uses the following implementation resolution mechanisms to determine an implementation:</target>
        </trans-unit>
        <trans-unit id="2b4c941aa0181945e0c3f753d40c3a6d40a28985" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="5c7faa9209326d962b653b314cdf02fc955e6995" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;SAXParserFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;SAXParserFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="cc6a464fa02bcd202d11de377703e73d7c138591" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;SchemaFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;SchemaFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="68ad9849a89b512e82c82da5570806181e8f22e5" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;TransformerFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;TransformerFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="85f9777c8930827dfb2a70b7ad32691eadf2f90d" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;XMLEventFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;XMLEventFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="84b3a1e6cc940512457d4f097a81448949bc0ea1" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;XMLInputFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;XMLInputFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="b689f28162c5d08b1ec2167897e085e171f388cb" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;XMLOutputFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;XMLOutputFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="c07fed8aa7432ea5be5cf7464e7669f77adbc594" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;XPathFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;XPathFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="70dd79cc189d68c5b9c4748ef1fbf76c508ca55d" translate="yes" xml:space="preserve">
          <source>A new int buffer</source>
          <target state="translated">新しいintバッファ</target>
        </trans-unit>
        <trans-unit id="4cab229378aefd95620182bd2e26e42daed2a585" translate="yes" xml:space="preserve">
          <source>A new key representing the registration of the given channel with this selector</source>
          <target state="translated">このセレクタで指定されたチャンネルの登録を表す新しいキー</target>
        </trans-unit>
        <trans-unit id="eb82ef1bb373c9a76bbed75b19d1396c6c0475f9" translate="yes" xml:space="preserve">
          <source>A new long buffer</source>
          <target state="translated">新しいロングバッファ</target>
        </trans-unit>
        <trans-unit id="2378edf28d0f7cd090a51aaa3253aba996f08c6c" translate="yes" xml:space="preserve">
          <source>A new matcher for this pattern</source>
          <target state="translated">このパターンのための新しいマッチャー</target>
        </trans-unit>
        <trans-unit id="370091f3315fb7e9620cc6ef2c7174e7f8b439d4" translate="yes" xml:space="preserve">
          <source>A new output stream</source>
          <target state="translated">新しい出力ストリーム</target>
        </trans-unit>
        <trans-unit id="fc00dcf9a6f1431f2f4900621a30444a41c3f824" translate="yes" xml:space="preserve">
          <source>A new pipe</source>
          <target state="translated">新しいパイプ</target>
        </trans-unit>
        <trans-unit id="195dbfc34817c71b0ac77609e1a68b8637c20709" translate="yes" xml:space="preserve">
          <source>A new private implementation of an MBeanServer.</source>
          <target state="translated">MBeanServerの新しいプライベート実装。</target>
        </trans-unit>
        <trans-unit id="c1bba2ce8a1736ca41dee666c238188a8f3968a5" translate="yes" xml:space="preserve">
          <source>A new readable byte channel</source>
          <target state="translated">新しい読み取り可能なバイトチャネル</target>
        </trans-unit>
        <trans-unit id="227964ba0cdb00d556590c57b5b512186bc50f84" translate="yes" xml:space="preserve">
          <source>A new reader</source>
          <target state="translated">新しい読者</target>
        </trans-unit>
        <trans-unit id="a987f16a3add20d096c2dc2279a462557da4b375" translate="yes" xml:space="preserve">
          <source>A new selector</source>
          <target state="translated">新しいセレクター</target>
        </trans-unit>
        <trans-unit id="f414cd40bc587b5cb076112120f1a32f7542e237" translate="yes" xml:space="preserve">
          <source>A new sequential &lt;code&gt;IntStream&lt;/code&gt;</source>
          <target state="translated">新しい順次 &lt;code&gt;IntStream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6938f1e9b7120bf66ba9f32b912fe7a3bb90330" translate="yes" xml:space="preserve">
          <source>A new service is available from the nesting BeanContext.</source>
          <target state="translated">ネスティングBeanContextから新しいサービスが利用できます。</target>
        </trans-unit>
        <trans-unit id="f53d0dbb2fa07c0c02c96d61beb2e8a31523487e" translate="yes" xml:space="preserve">
          <source>A new service is available from the nesting BeanContext. Subclasses may override this method in order to implement their own behaviors</source>
          <target state="translated">新しいサービスは,ネスティングBeanContextから利用可能です。サブクラスは,独自の振る舞いを実装するために,このメソッドをオーバーライドすることができます.</target>
        </trans-unit>
        <trans-unit id="cc5510b8ee23c196414d7a41911a0b2d8c8655c7" translate="yes" xml:space="preserve">
          <source>A new service loader</source>
          <target state="translated">新しいサービスローダー</target>
        </trans-unit>
        <trans-unit id="7a598ad4eff5223742f9071b01244341dbae324b" translate="yes" xml:space="preserve">
          <source>A new short buffer</source>
          <target state="translated">新しいショートバッファ</target>
        </trans-unit>
        <trans-unit id="92e48cdd5d234dfa3d6e9af022c9d12a72a40f16" translate="yes" xml:space="preserve">
          <source>A new socket channel</source>
          <target state="translated">新しいソケットチャンネル</target>
        </trans-unit>
        <trans-unit id="ad8acabd40cadf9e1fc83439d4cacc467728413a" translate="yes" xml:space="preserve">
          <source>A new volatile variable &lt;code&gt;V&lt;/code&gt; is created, and written by the current thread. As defined by the JMM, this write is a global synchronization event.</source>
          <target state="translated">新しい揮発性変数 &lt;code&gt;V&lt;/code&gt; が作成され、現在のスレッドによって書き込まれます。JMMで定義されているように、この書き込みはグローバル同期イベントです。</target>
        </trans-unit>
        <trans-unit id="fae76c304ef49fc476ffd8e6ab0bb7e6f610c034" translate="yes" xml:space="preserve">
          <source>A new writable byte channel</source>
          <target state="translated">新しい書き込み可能なバイトチャネル</target>
        </trans-unit>
        <trans-unit id="f9a4767fbb8f8aed5b2928cb74b7c92f9ba2c665" translate="yes" xml:space="preserve">
          <source>A new writer</source>
          <target state="translated">新人作家</target>
        </trans-unit>
        <trans-unit id="96a14b87d6769803187b54bde0e78433cf67339d" translate="yes" xml:space="preserve">
          <source>A new, and connected, socket channel</source>
          <target state="translated">新しい、接続されたソケットチャンネル</target>
        </trans-unit>
        <trans-unit id="2595cfcee208226807eae38461417b358c37d2c5" translate="yes" xml:space="preserve">
          <source>A newLine() method is provided, which uses the platform's own notion of line separator as defined by the system property &lt;code&gt;line.separator&lt;/code&gt;. Not all platforms use the newline character ('\n') to terminate lines. Calling this method to terminate each output line is therefore preferred to writing a newline character directly.</source>
          <target state="translated">newLine（）メソッドが提供されています。これは、システムプロパティ &lt;code&gt;line.separator&lt;/code&gt; で定義されているプラ​​ットフォーム独自の行区切り記号の概念を使用します。すべてのプラットフォームが改行文字（ '\ n'）を使用して行を終了するわけではありません。したがって、このメソッドを呼び出して各出力行を終了することは、改行文字を直接書き込むよりも望ましい方法です。</target>
        </trans-unit>
        <trans-unit id="d618578a9393e1dd96591434db2110ed0c362143" translate="yes" xml:space="preserve">
          <source>A newline (line feed) character (&lt;code&gt;'\n'&lt;/code&gt;),</source>
          <target state="translated">改行（ラインフィード）文字（ &lt;code&gt;'\n'&lt;/code&gt; ）、</target>
        </trans-unit>
        <trans-unit id="8b5f06c0531c3ba4c791f46b68dc5d8317f9ec88" translate="yes" xml:space="preserve">
          <source>A newline character (the character '\n' in Java) is replaced by a backslash followed by the character '\n'.</source>
          <target state="translated">改行文字(Javaでは文字「\n」)は、バックスラッシュに置き換えられ、文字「\n」が続く。</target>
        </trans-unit>
        <trans-unit id="ad7e79fbc80b15ff80930a2bd90a4d857f0a8809" translate="yes" xml:space="preserve">
          <source>A newly allocated Packer engine.</source>
          <target state="translated">新たに割り当てられたパッカーエンジン。</target>
        </trans-unit>
        <trans-unit id="ae89a8172fee4e06f55daa88ca36ec1e21275ab3" translate="yes" xml:space="preserve">
          <source>A newly allocated Unpacker engine.</source>
          <target state="translated">新たに割り当てられたアンパッカーエンジン。</target>
        </trans-unit>
        <trans-unit id="cbbf204fae9ef1bb37d44b20447a2eddb6f441bb" translate="yes" xml:space="preserve">
          <source>A newly created PRNG &lt;code&gt;SecureRandom&lt;/code&gt; object is not seeded (except if it is created by &lt;a href=&quot;#%3Cinit%3E(byte%5B%5D)&quot;&gt;&lt;code&gt;SecureRandom(byte[])&lt;/code&gt;&lt;/a&gt;). The first call to &lt;code&gt;nextBytes&lt;/code&gt; will force it to seed itself from an implementation- specific entropy source. This self-seeding will not occur if &lt;code&gt;setSeed&lt;/code&gt; was previously called.</source>
          <target state="translated">A newly created PRNG &lt;code&gt;SecureRandom&lt;/code&gt; object is not seeded (except if it is created by &lt;a href=&quot;#%3Cinit%3E(byte%5B%5D)&quot;&gt; &lt;code&gt;SecureRandom(byte[])&lt;/code&gt; &lt;/a&gt;). The first call to &lt;code&gt;nextBytes&lt;/code&gt; will force it to seed itself from an implementation- specific entropy source. This self-seeding will not occur if &lt;code&gt;setSeed&lt;/code&gt; was previously called.</target>
        </trans-unit>
        <trans-unit id="f749a2698aa7b3fe7595ce4fe494aefb6961a78f" translate="yes" xml:space="preserve">
          <source>A newly-allocated byte array containing the decoded bytes.</source>
          <target state="translated">デコードされたバイトを含む新たに割り当てられたバイト配列。</target>
        </trans-unit>
        <trans-unit id="4500d02e284d7deca5c46a49dd59c877a9687edf" translate="yes" xml:space="preserve">
          <source>A newly-allocated byte array containing the resulting encoded bytes.</source>
          <target state="translated">新たに割り当てられたバイト配列で、結果としてエンコードされたバイトを含む。</target>
        </trans-unit>
        <trans-unit id="ad405c747b824e9ef58d7c88b72e9eb7cc3efb65" translate="yes" xml:space="preserve">
          <source>A newly-allocated byte buffer containing the decoded bytes</source>
          <target state="translated">デコードされたバイトを含む新たに割り当てられたバイトバッファ</target>
        </trans-unit>
        <trans-unit id="91f70710f376acb4f8c9553c4de7e523904b6303" translate="yes" xml:space="preserve">
          <source>A newly-allocated byte buffer containing the encoded bytes.</source>
          <target state="translated">エンコードされたバイトを含む、新たに割り当てられたバイトバッファ。</target>
        </trans-unit>
        <trans-unit id="8c318ea698e58c2b2e4ebdafd737b67d00e3f939" translate="yes" xml:space="preserve">
          <source>A newly-allocated byte buffer containing the result of the encoding operation. The buffer's position will be zero and its limit will follow the last byte written.</source>
          <target state="translated">新たに割り当てられたバイトバッファで、エンコーディング操作の結果が格納されます。バッファの位置はゼロで、その限界は最後に書き込まれたバイトの後に続きます。</target>
        </trans-unit>
        <trans-unit id="e1af1e5437c51808c4a8a1190c196a71f76d20e4" translate="yes" xml:space="preserve">
          <source>A newly-allocated character buffer containing the result of the decoding operation. The buffer's position will be zero and its limit will follow the last character written.</source>
          <target state="translated">新たに割り当てられた文字バッファで、デコード処理の結果が格納されます。バッファの位置はゼロで、その限界は最後に書き込まれた文字の後に続きます。</target>
        </trans-unit>
        <trans-unit id="14848075c6a2bf1c1cd5881b071a496387811f42" translate="yes" xml:space="preserve">
          <source>A newly-created buffer always has a position of zero and a mark that is undefined. The initial limit may be zero, or it may be some other value that depends upon the type of the buffer and the manner in which it is constructed. Each element of a newly-allocated buffer is initialized to zero.</source>
          <target state="translated">新しく作成されたバッファは常にゼロの位置と未定義のマークを持ちます。初期値はゼロであってもよいし、バッファのタイプや構築方法に依存する他の値であってもよい。新しく割り当てられたバッファの各要素はゼロに初期化されます。</target>
        </trans-unit>
        <trans-unit id="aed6f82b71caffa13cc936a03a53581159ec9c9c" translate="yes" xml:space="preserve">
          <source>A newly-created channel is connected by invoking its &lt;a href=&quot;#connect(java.net.SocketAddress,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method; once connected, a channel remains connected until it is closed. Whether or not a socket channel is connected may be determined by invoking its &lt;a href=&quot;#getRemoteAddress()&quot;&gt;&lt;code&gt;getRemoteAddress&lt;/code&gt;&lt;/a&gt; method. An attempt to invoke an I/O operation upon an unconnected channel will cause a &lt;a href=&quot;notyetconnectedexception&quot;&gt;&lt;code&gt;NotYetConnectedException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">A newly-created channel is connected by invoking its &lt;a href=&quot;#connect(java.net.SocketAddress,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; method; once connected, a channel remains connected until it is closed. Whether or not a socket channel is connected may be determined by invoking its &lt;a href=&quot;#getRemoteAddress()&quot;&gt; &lt;code&gt;getRemoteAddress&lt;/code&gt; &lt;/a&gt; method. An attempt to invoke an I/O operation upon an unconnected channel will cause a &lt;a href=&quot;notyetconnectedexception&quot;&gt; &lt;code&gt;NotYetConnectedException&lt;/code&gt; &lt;/a&gt; to be thrown.</target>
        </trans-unit>
        <trans-unit id="12e02aa878755e8bc2b352a4b4027c3700104164" translate="yes" xml:space="preserve">
          <source>A newly-created channel is connected by invoking its &lt;a href=&quot;asynchronoussocketchannel#connect-java.net.SocketAddress-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method; once connected, a channel remains connected until it is closed. Whether or not a socket channel is connected may be determined by invoking its &lt;a href=&quot;asynchronoussocketchannel#getRemoteAddress--&quot;&gt;&lt;code&gt;getRemoteAddress&lt;/code&gt;&lt;/a&gt; method. An attempt to invoke an I/O operation upon an unconnected channel will cause a &lt;a href=&quot;notyetconnectedexception&quot;&gt;&lt;code&gt;NotYetConnectedException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">新しく作成されたチャネルは、その&lt;a href=&quot;asynchronoussocketchannel#connect-java.net.SocketAddress-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって接続されます。接続されると、チャネルは閉じるまで接続されたままになります。ソケットチャネルが接続されているかどうかは、その&lt;a href=&quot;asynchronoussocketchannel#getRemoteAddress--&quot;&gt; &lt;code&gt;getRemoteAddress&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって判断できます。接続されていないチャネルでI / O操作を呼び出そうとすると、&lt;a href=&quot;notyetconnectedexception&quot;&gt; &lt;code&gt;NotYetConnectedException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="da1a847e03b38daa625c581b5c50ecbf191ba107" translate="yes" xml:space="preserve">
          <source>A newly-created connector server is &lt;em&gt;inactive&lt;/em&gt;, and does not yet listen for connections. Only when its &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method has been called does it start listening for connections.</source>
          <target state="translated">A newly-created connector server is &lt;em&gt;inactive&lt;/em&gt;, and does not yet listen for connections. Only when its &lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; method has been called does it start listening for connections.</target>
        </trans-unit>
        <trans-unit id="3937dfeb6f50d8b3801a4e97455d079ce3003278" translate="yes" xml:space="preserve">
          <source>A newly-created connector server is &lt;em&gt;inactive&lt;/em&gt;, and does not yet listen for connections. Only when its &lt;a href=&quot;jmxconnectorservermbean#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method has been called does it start listening for connections.</source>
          <target state="translated">新しく作成されたコネクタサーバーは&lt;em&gt;非アクティブで&lt;/em&gt;、まだ接続をリッスンしていません。&lt;a href=&quot;jmxconnectorservermbean#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;メソッドが呼び出された場合にのみ、接続の待機を開始します。</target>
        </trans-unit>
        <trans-unit id="bf5b745265e7a08cb2b6dd796bea5742ede1db26" translate="yes" xml:space="preserve">
          <source>A newly-created object of this type is unconnected. Its &lt;a href=&quot;#connect()&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method must be called before it can be used. However, objects created by &lt;a href=&quot;jmxconnectorfactory#connect(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt;&lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt;&lt;/a&gt; are already connected.</source>
          <target state="translated">A newly-created object of this type is unconnected. Its &lt;a href=&quot;#connect()&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; method must be called before it can be used. However, objects created by &lt;a href=&quot;jmxconnectorfactory#connect(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt; &lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt; &lt;/a&gt; are already connected.</target>
        </trans-unit>
        <trans-unit id="9320a55b7ef50489ba9462b8018314f21d3b82a1" translate="yes" xml:space="preserve">
          <source>A newly-created object of this type is unconnected. Its &lt;a href=&quot;jmxconnector#connect--&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method must be called before it can be used. However, objects created by &lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt;&lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt;&lt;/a&gt; are already connected.</source>
          <target state="translated">このタイプの新しく作成されたオブジェクトは接続されていません。その&lt;a href=&quot;jmxconnector#connect--&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;メソッドは、使用する前に呼び出す必要があります。ただし、&lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt; &lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt; &lt;/a&gt;によって作成されたオブジェクトはすでに接続されています。</target>
        </trans-unit>
        <trans-unit id="d920ab1e496d0ab22784661132c5d8cba8bb07a7" translate="yes" xml:space="preserve">
          <source>A next-line character (&lt;code&gt;'\u0085'&lt;/code&gt;),</source>
          <target state="translated">次の行の文字（ &lt;code&gt;'\u0085'&lt;/code&gt; ）、</target>
        </trans-unit>
        <trans-unit id="3ad327a430dd79283b9f13832e1f8c1e8b07e851" translate="yes" xml:space="preserve">
          <source>A nexus for I/O operations</source>
          <target state="translated">I/O操作のためのネクサス</target>
        </trans-unit>
        <trans-unit id="30b96666137ff956b13f29c122ff2067f45da9e4" translate="yes" xml:space="preserve">
          <source>A nexus for I/O operations.</source>
          <target state="translated">I/O操作のためのネクサス。</target>
        </trans-unit>
        <trans-unit id="32d94d48baeb48749abc6e461ec1568849d96888" translate="yes" xml:space="preserve">
          <source>A node</source>
          <target state="translated">ノード</target>
        </trans-unit>
        <trans-unit id="6d1ab6e4231c9fd824e59dacc81a7b8495e33cd8" translate="yes" xml:space="preserve">
          <source>A node in a hierarchical collection of preference data.</source>
          <target state="translated">プリファレンスデータの階層的なコレクションのノード。</target>
        </trans-unit>
        <trans-unit id="0d390cb60da6e421d230a106d5ce284bbd479bfd" translate="yes" xml:space="preserve">
          <source>A node in a hierarchical collection of preference data. This class allows applications to store and retrieve user and system preference and configuration data. This data is stored persistently in an implementation-dependent backing store. Typical implementations include flat files, OS-specific registries, directory servers and SQL databases. The user of this class needn't be concerned with details of the backing store.</source>
          <target state="translated">プリファレンスデータの階層的なコレクションのノード。このクラスは、アプリケーションがユーザやシステムの環境設定や設定データを保存したり取得したりすることを可能にします。このデータは、実装に依存したバッキングストアに永続的に保存されます。典型的な実装としては、フラットファイル、OS固有のレジストリ、ディレクトリサーバ、SQLデータベースなどがあります。このクラスのユーザは、バッキングストアの詳細を気にする必要はありません。</target>
        </trans-unit>
        <trans-unit id="2ba931555b23ae0a3a5783daf9e71de13b0827ba" translate="yes" xml:space="preserve">
          <source>A non-&lt;code&gt;null&lt;/code&gt; valid &lt;code&gt;String&lt;/code&gt; representation of this &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">A non- &lt;code&gt;null&lt;/code&gt; valid &lt;code&gt;String&lt;/code&gt; representation of this &lt;code&gt;Duration&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17f20ba92b650ae0774012f30e1f13c144cd223e" translate="yes" xml:space="preserve">
          <source>A non-&lt;code&gt;null&lt;/code&gt; valid &lt;code&gt;String&lt;/code&gt; representation of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.</source>
          <target state="translated">A non- &lt;code&gt;null&lt;/code&gt; valid &lt;code&gt;String&lt;/code&gt; representation of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30b479c5d53f929d5b3781486075a91492453c50" translate="yes" xml:space="preserve">
          <source>A non-ASCII character c for which &lt;a href=&quot;../lang/character#isDigit(char)&quot;&gt;&lt;code&gt;Character.isDigit&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(c)&lt;/code&gt; returns true</source>
          <target state="translated">A non-ASCII character c for which &lt;a href=&quot;../lang/character#isDigit(char)&quot;&gt; &lt;code&gt;Character.isDigit&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(c)&lt;/code&gt; returns true</target>
        </trans-unit>
        <trans-unit id="34276e6cf55ed986512c9b4e3783654205d06d95" translate="yes" xml:space="preserve">
          <source>A non-ASCII character c for which &lt;a href=&quot;../lang/character#isDigit-char-&quot;&gt;&lt;code&gt;Character.isDigit&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(c)&lt;/code&gt; returns true</source>
          <target state="translated">&lt;a href=&quot;../lang/character#isDigit-char-&quot;&gt; &lt;code&gt;Character.isDigit&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(c)&lt;/code&gt; がtrueを返す非ASCII文字c</target>
        </trans-unit>
        <trans-unit id="2f60e868b739d55dc0d3cd5caebc70e7bfdd560f" translate="yes" xml:space="preserve">
          <source>A non-blocking connection operation is initiated by placing a socket channel in non-blocking mode and then invoking its &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method. Once the connection is established, or the attempt has failed, the socket channel will become connectable and this method may be invoked to complete the connection sequence. If the connection operation failed then invoking this method will cause an appropriate &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">A non-blocking connection operation is initiated by placing a socket channel in non-blocking mode and then invoking its &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; method. Once the connection is established, or the attempt has failed, the socket channel will become connectable and this method may be invoked to complete the connection sequence. If the connection operation failed then invoking this method will cause an appropriate &lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt; to be thrown.</target>
        </trans-unit>
        <trans-unit id="49951378a32d6d7aa2f164737d4577800b20cbd4" translate="yes" xml:space="preserve">
          <source>A non-blocking connection operation is initiated by placing a socket channel in non-blocking mode and then invoking its &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method. Once the connection is established, or the attempt has failed, the socket channel will become connectable and this method may be invoked to complete the connection sequence. If the connection operation failed then invoking this method will cause an appropriate &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">非ブロッキング接続操作は、ソケットチャネルを非ブロッキングモードにしてから、その&lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって開始されます。接続が確立されるか、試行が失敗すると、ソケットチャネルが接続可能になり、このメソッドを呼び出して接続シーケンスを完了することができます。接続操作が失敗した場合、このメソッドを呼び出すと、適切な&lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="afbca2e0eedaf99a74c0ec68c4e06c16da62d429" translate="yes" xml:space="preserve">
          <source>A non-constant call site may be &lt;em&gt;relinked&lt;/em&gt; by changing its target. The new target must have the same &lt;a href=&quot;methodhandle#type()&quot;&gt;type&lt;/a&gt; as the previous target. Thus, though a call site can be relinked to a series of successive targets, it cannot change its type.</source>
          <target state="translated">A non-constant call site may be &lt;em&gt;relinked&lt;/em&gt; by changing its target. The new target must have the same &lt;a href=&quot;methodhandle#type()&quot;&gt;type&lt;/a&gt; as the previous target. Thus, though a call site can be relinked to a series of successive targets, it cannot change its type.</target>
        </trans-unit>
        <trans-unit id="bc767860690d8c24cb88c960e15a4973d9558857" translate="yes" xml:space="preserve">
          <source>A non-constant call site may be &lt;em&gt;relinked&lt;/em&gt; by changing its target. The new target must have the same &lt;a href=&quot;methodhandle#type--&quot;&gt;type&lt;/a&gt; as the previous target. Thus, though a call site can be relinked to a series of successive targets, it cannot change its type.</source>
          <target state="translated">非定数呼び出しサイトは、そのターゲットを変更することによって&lt;em&gt;再リンク&lt;/em&gt;できます。新しいターゲットは、前のターゲットと同じ&lt;a href=&quot;methodhandle#type--&quot;&gt;タイプで&lt;/a&gt;なければなりません。したがって、呼び出しサイトは一連の連続するターゲットに再リンクできますが、そのタイプを変更することはできません。</target>
        </trans-unit>
        <trans-unit id="ac6825da8adbf85d254ecf0727fccd99ee289ca9" translate="yes" xml:space="preserve">
          <source>A non-digit: &lt;code&gt;[^0-9]&lt;/code&gt;</source>
          <target state="translated">非数字： &lt;code&gt;[^0-9]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41ae39581d83b8afbf8fbfd5ce8d03c1bf3a0325" translate="yes" xml:space="preserve">
          <source>A non-digit: &lt;code&gt;[^\d]&lt;/code&gt;</source>
          <target state="translated">非数字： &lt;code&gt;[^\d]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb2d73400cb4d52c72018a1f210b1e270d329614" translate="yes" xml:space="preserve">
          <source>A non-empty and unmodifiable list of the fully qualified class names of the providers or provider factories</source>
          <target state="translated">プロバイダまたはプロバイダファクトリの完全修飾クラス名の空ではない、変更不可能なリスト。</target>
        </trans-unit>
        <trans-unit id="eabbd7a5ea7b535624280794aea261db5d7739a3" translate="yes" xml:space="preserve">
          <source>A non-escaped begin-quote which precedes a component must be matched by a non-escaped end-quote at the end of the component. A component thus quoted is referred to as a &lt;em&gt;quoted component&lt;/em&gt;. It is parsed by removing the being- and end- quotes, and by treating the intervening characters as ordinary characters unless one of the rules involving quoted components listed below applies.</source>
          <target state="translated">コンポーネントの前にあるエスケープされていない開始引用符は、コンポーネントの最後にあるエスケープされていない終了引用符と一致する必要があります。このように引用されたコンポーネントは、&lt;em&gt;引用されたコンポーネント&lt;/em&gt;と呼ば&lt;em&gt;れます&lt;/em&gt;。これは、being-とend-の引用符を削除し、次に挙げる引用されたコンポーネントに関する規則の1つが適用されない限り、介在する文字を通常の文字として扱うことによって解析されます。</target>
        </trans-unit>
        <trans-unit id="8576c5a3fc4ecf47e4a0d11fd6e03315dba7c325" translate="yes" xml:space="preserve">
          <source>A non-horizontal whitespace character: &lt;code&gt;[^\h]&lt;/code&gt;</source>
          <target state="translated">非水平空白文字： &lt;code&gt;[^\h]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d58c0f6e6b46f4925dee1a29c717b5cd776d604" translate="yes" xml:space="preserve">
          <source>A non-null &lt;code&gt;DirContext&lt;/code&gt; object for continuing the operation.</source>
          <target state="translated">操作を続行するためのnull以外の &lt;code&gt;DirContext&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="29be16e17e34f62bfdebf51ad0e122d23c628721" translate="yes" xml:space="preserve">
          <source>A non-null &lt;code&gt;LdapContext&lt;/code&gt; instance.</source>
          <target state="translated">null以外の &lt;code&gt;LdapContext&lt;/code&gt; インスタンス。</target>
        </trans-unit>
        <trans-unit id="a64ff7fe321a188f5c04bb6cdea604c663889254" translate="yes" xml:space="preserve">
          <source>A non-null Context object for continuing the operation.</source>
          <target state="translated">操作を継続するための非 null でないコンテキストオブジェクト。</target>
        </trans-unit>
        <trans-unit id="c1b55005a4d78a4f993dfd1b675db095e662505c" translate="yes" xml:space="preserve">
          <source>A non-null DirStateFactory.Result containing the object and attributes to be bound. If no state factory returns a non-null answer, the result will contain the object (&lt;code&gt;obj&lt;/code&gt;) itself with the original attributes.</source>
          <target state="translated">バインドされるオブジェクトと属性を含むnull以外のDirStateFactory.Result。状態ファクトリがnull以外の回答を返さない場合、結果には元の属性を持つオブジェクト（ &lt;code&gt;obj&lt;/code&gt; ）自体が含まれます。</target>
        </trans-unit>
        <trans-unit id="f705e9073287cf92793fe2b86b035e32a5be310b" translate="yes" xml:space="preserve">
          <source>A non-null array containing a IANA-registered SASL mechanism names.</source>
          <target state="translated">IANAに登録されたSASLメカニズム名を含む非NULL配列。</target>
        </trans-unit>
        <trans-unit id="a10e64472867840475c1ab4209b86ea2f64b0ad1" translate="yes" xml:space="preserve">
          <source>A non-null byte array containing the decoded bytes.</source>
          <target state="translated">デコードされたバイトを含む非ヌルバイト配列。</target>
        </trans-unit>
        <trans-unit id="256fd2e37df2c810fe693bf60b371e4fae6dc77b" translate="yes" xml:space="preserve">
          <source>A non-null byte array containing the encoded bytes.</source>
          <target state="translated">エンコードされたバイトを含む非ヌルバイト配列。</target>
        </trans-unit>
        <trans-unit id="f52a76285fcf3e42442c6aa14b1b84b86a9555fd" translate="yes" xml:space="preserve">
          <source>A non-null copy of the attribute.</source>
          <target state="translated">属性の非ヌルコピー。</target>
        </trans-unit>
        <trans-unit id="c350742e8171824a76f2140a837bb27a02d36bfd" translate="yes" xml:space="preserve">
          <source>A non-null copy of this attribute set.</source>
          <target state="translated">この属性セットの非ヌルコピー。</target>
        </trans-unit>
        <trans-unit id="2834f16d4197dd5885969de3f6e1c06d9fe27c3e" translate="yes" xml:space="preserve">
          <source>A non-null copy of this composite name.</source>
          <target state="translated">この複合名の非ヌルコピー。</target>
        </trans-unit>
        <trans-unit id="a28c689ba0a9cd3cad130669a4a31f8d6e1c8750" translate="yes" xml:space="preserve">
          <source>A non-null copy of this compound name.</source>
          <target state="translated">この複合名の非ヌルコピー。</target>
        </trans-unit>
        <trans-unit id="680d7ced3578bebfbe3b008f6d9acabd436bed7a" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of known factories for producing &lt;code&gt;SaslClient&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SaslClient&lt;/code&gt; を生成するための既知のファクトリのnull以外の列挙。</target>
        </trans-unit>
        <trans-unit id="0931c1e3c651dc8eb96435df64758f9fd1218389" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of known factories for producing &lt;code&gt;SaslServer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SaslServer&lt;/code&gt; を生成するための既知のファクトリのnull以外の列挙。</target>
        </trans-unit>
        <trans-unit id="0d1e9cc0831144a125442fbc119f960b9a802adc" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the attribute's values. Each element of the enumeration is a possibly null Object. The object's class is the class of the attribute value. The element is null if the attribute's value is null. If the attribute has zero values, an empty enumeration is returned.</source>
          <target state="translated">属性の値の非 null 列挙。列挙の各要素は、nullの可能性のあるObjectです。オブジェクトのクラスは属性値のクラスです。属性の値がnullの場合、要素はnullになります。属性の値がゼロの場合、空の列挙が返されます。</target>
        </trans-unit>
        <trans-unit id="7363de214e3d6c461c5bb6736dc9ee64e081aa40" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the attributes in this attribute set. Each element of the enumeration is of class &lt;code&gt;Attribute&lt;/code&gt;. If attribute set has zero attributes, an empty enumeration is returned.</source>
          <target state="translated">この属性セットの属性のnull以外の列挙。列挙の各要素は &lt;code&gt;Attribute&lt;/code&gt; クラスです。属性セットに属性がない場合、空の列挙が返されます。</target>
        </trans-unit>
        <trans-unit id="afe8669ca17e96be8a453b66dfc469a28ebe6a0d" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the attributes' ids in this attribute set. Each element of the enumeration is of class String. If attribute set has zero attributes, an empty enumeration is returned.</source>
          <target state="translated">この属性セットの属性のidの非ヌルの列挙。列挙の各要素は String クラスです。属性集合がゼロの属性を持つ場合、空の列挙が返されます。</target>
        </trans-unit>
        <trans-unit id="5f1cbc6763def1c45342a437b1a688c40133ab7a" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the components of this LDAP name. Each element of the enumeration is of class String.</source>
          <target state="translated">このLDAP名のコンポーネントの非ヌルの列挙。列挙の各要素は String クラスです。</target>
        </trans-unit>
        <trans-unit id="ebf81c0a1c1c74ed4f4d400b71c358f46266c099" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the components of this composite name. Each element of the enumeration is of class String.</source>
          <target state="translated">この複合名の構成要素の非 null 列挙。列挙の各要素は String クラスです。</target>
        </trans-unit>
        <trans-unit id="2340ea0fb4f1270c0668eb4bfc3dc9c9cf277715" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the components of this compound name. Each element of the enumeration is of class String.</source>
          <target state="translated">この複合名の構成要素の非 null 列挙。列挙の各要素は String クラスです。</target>
        </trans-unit>
        <trans-unit id="8bfa2f9be14187c9f14ce39d8d833d7f1175f5dc" translate="yes" xml:space="preserve">
          <source>A non-null initial context factory.</source>
          <target state="translated">非 null ではない初期コンテキストファクトリー。</target>
        </trans-unit>
        <trans-unit id="1e608221c5c5ea8c18e363465c0a5d025612f0d6" translate="yes" xml:space="preserve">
          <source>A non-null initial context object that implements the Context interface.</source>
          <target state="translated">Context インターフェースを実装した非 null の初期コンテキストオブジェクト。</target>
        </trans-unit>
        <trans-unit id="37954dbe9bab921b1deb6369decc49588a641fb7" translate="yes" xml:space="preserve">
          <source>A non-null initial context.</source>
          <target state="translated">非 null ではない初期コンテキスト。</target>
        </trans-unit>
        <trans-unit id="4730b465f4124443538b5e1770c8811274893fee" translate="yes" xml:space="preserve">
          <source>A non-null new instance of an ObjectFactory.</source>
          <target state="translated">ObjectFactory の非 null の新規インスタンス。</target>
        </trans-unit>
        <trans-unit id="c59410b08adf864ea948e598b03f608227631233" translate="yes" xml:space="preserve">
          <source>A non-null object.</source>
          <target state="translated">非 null オブジェクト。</target>
        </trans-unit>
        <trans-unit id="1f31f2d546f056d9729de73a8c0cafbb3add9b69" translate="yes" xml:space="preserve">
          <source>A non-null parsed form of the name using the naming convention of this parser.</source>
          <target state="translated">このパーサの命名規則を使用して、名前をヌルではない形でパースしたものです。</target>
        </trans-unit>
        <trans-unit id="365024c158fc56fbd24149913e4847bff4e1c7ff" translate="yes" xml:space="preserve">
          <source>A non-null reference to a TransformerHandler, that may be used as a ContentHandler for SAX parse events.</source>
          <target state="translated">SAX パース・イベントの ContentHandler として使用される可能性のある TransformerHandler への非 null 参照。</target>
        </trans-unit>
        <trans-unit id="a5e68f3dd8aaf605a6de850303de002c47d88269" translate="yes" xml:space="preserve">
          <source>A non-null string listing the contents of this attribute set.</source>
          <target state="translated">この属性セットの内容をリストアップした非ヌル文字列。</target>
        </trans-unit>
        <trans-unit id="caf496ddea9cd135d401dcca1f2054b18dc2ecf2" translate="yes" xml:space="preserve">
          <source>A non-null string representation of this composite name.</source>
          <target state="translated">この複合名の非ヌル文字列表現。</target>
        </trans-unit>
        <trans-unit id="15ce034bc6811eedfe9b677a32692e3f0462b11c" translate="yes" xml:space="preserve">
          <source>A non-null string representation of this compound name.</source>
          <target state="translated">この複合名の非ヌル文字列表現。</target>
        </trans-unit>
        <trans-unit id="08d28ae2c79b56daa709959f3d79d9d06c131b29" translate="yes" xml:space="preserve">
          <source>A non-null string representing the IANA-registered mechanism name.</source>
          <target state="translated">IANAに登録された機構名を表す非ヌル文字列。</target>
        </trans-unit>
        <trans-unit id="78220fa45f4e95f9c02602526ce9d9ddf420ba59" translate="yes" xml:space="preserve">
          <source>A non-static method consumes an extra argument for the object on which the method is called.</source>
          <target state="translated">非静的メソッドは、メソッドが呼び出されるオブジェクトの余分な引数を消費します。</target>
        </trans-unit>
        <trans-unit id="fcf1b695e4b7e1236a6443caec6fe36bb0b9f17e" translate="yes" xml:space="preserve">
          <source>A non-vertical whitespace character: &lt;code&gt;[^\v]&lt;/code&gt;</source>
          <target state="translated">垂直以外の空白文字： &lt;code&gt;[^\v]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7d3d3ab514a35cbfee9f849f4b37cf780906329" translate="yes" xml:space="preserve">
          <source>A non-virtual method handle to a specific virtual method implementation can also be created. These do not perform virtual lookup based on receiver type. Such a method handle simulates the effect of an &lt;code&gt;invokespecial&lt;/code&gt; instruction to the same method.</source>
          <target state="translated">特定の仮想メソッド実装への非仮想メソッドハンドルも作成できます。これらは、レシーバータイプに基づく仮想ルックアップを実行しません。このようなメソッドハンドルは、同じメソッドに対する &lt;code&gt;invokespecial&lt;/code&gt; 命令の効果をシミュレートします。</target>
        </trans-unit>
        <trans-unit id="885d1aed7578ee9fc33b80a7c8cbd5afdaa172b8" translate="yes" xml:space="preserve">
          <source>A non-virtual method handle to a specific virtual method implementation can also be created. These do not perform virtual lookup based on receiver type. Such a method handle simulates the effect of an &lt;code&gt;invokespecial&lt;/code&gt; instruction to the same method. A non-virtual method handle can also be created to simulate the effect of an &lt;code&gt;invokevirtual&lt;/code&gt; or &lt;code&gt;invokeinterface&lt;/code&gt; instruction on a private method (as applicable).</source>
          <target state="translated">A non-virtual method handle to a specific virtual method implementation can also be created. These do not perform virtual lookup based on receiver type. Such a method handle simulates the effect of an &lt;code&gt;invokespecial&lt;/code&gt; instruction to the same method. A non-virtual method handle can also be created to simulate the effect of an &lt;code&gt;invokevirtual&lt;/code&gt; or &lt;code&gt;invokeinterface&lt;/code&gt; instruction on a private method (as applicable).</target>
        </trans-unit>
        <trans-unit id="490d23f83a66805dcb270127052997bab3cbcef3" translate="yes" xml:space="preserve">
          <source>A non-whitespace character: &lt;code&gt;[^\s]&lt;/code&gt;</source>
          <target state="translated">空白以外の文字： &lt;code&gt;[^\s]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71faa00612f3246b69dff10b33a7b4956ad1ded0" translate="yes" xml:space="preserve">
          <source>A non-word boundary</source>
          <target state="translated">単語以外の境界</target>
        </trans-unit>
        <trans-unit id="5a3963613c4e2b85a2160538fa0a3ebf78d4cb53" translate="yes" xml:space="preserve">
          <source>A non-word character: &lt;code&gt;[^\w]&lt;/code&gt;</source>
          <target state="translated">非単語文字： &lt;code&gt;[^\w]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="874565c5d6a9c9f23443edff0392ef0747a48ce4" translate="yes" xml:space="preserve">
          <source>A non-zero winding rule for determining the interior of a path.</source>
          <target state="translated">パスの内部を決定するための非ゼロ巻線ルール。</target>
        </trans-unit>
        <trans-unit id="27473e4260d3933f83b4103875121ed003b122d3" translate="yes" xml:space="preserve">
          <source>A nonzero value gives a time as the number of milliseconds since January 1, 1970, GMT. The object is fetched only if it has been modified more recently than that time.</source>
          <target state="translated">ゼロ以外の値を指定すると、グリニッジ標準時の1970年1月1日からのミリ秒数として時間を指定します。オブジェクトは、その時間よりも最近に変更された場合にのみ取得されます。</target>
        </trans-unit>
        <trans-unit id="bd0bbc8c17597d3479d33d00df124b35420e9bee" translate="yes" xml:space="preserve">
          <source>A normalized path will begin with one or more &lt;code&gt;&quot;..&quot;&lt;/code&gt; segments if there were insufficient non-&lt;code&gt;&quot;..&quot;&lt;/code&gt; segments preceding them to allow their removal. A normalized path will begin with a &lt;code&gt;&quot;.&quot;&lt;/code&gt; segment if one was inserted by step 3 above. Otherwise, a normalized path will not contain any &lt;code&gt;&quot;.&quot;&lt;/code&gt; or &lt;code&gt;&quot;..&quot;&lt;/code&gt; segments.</source>
          <target state="translated">正規化されたパスは、その前に非 &lt;code&gt;&quot;..&quot;&lt;/code&gt; セグメントが不足していて削除できない場合、1つ以上の &lt;code&gt;&quot;..&quot;&lt;/code&gt; セグメントで始まります。正規化されたパスは &lt;code&gt;&quot;.&quot;&lt;/code&gt; 始まります。上記のステップ3で挿入された場合はセグメント。それ以外の場合、正規化されたパスには &lt;code&gt;&quot;.&quot;&lt;/code&gt; が含まれません。または &lt;code&gt;&quot;..&quot;&lt;/code&gt; セグメント。</target>
        </trans-unit>
        <trans-unit id="43ea19dae1574fbcbb421f7bdfe875197a55c7d2" translate="yes" xml:space="preserve">
          <source>A notification can be included in the result if its sequence number is no less than &lt;code&gt;clientSequenceNumber&lt;/code&gt; and this client has registered at least one listener for the MBean generating the notification, with a filter that accepts the notification. Each listener that is interested in the notification is identified by an Integer ID that was returned by &lt;a href=&quot;#addNotificationListeners(javax.management.ObjectName%5B%5D,java.rmi.MarshalledObject%5B%5D,javax.security.auth.Subject%5B%5D)&quot;&gt;&lt;code&gt;addNotificationListeners(ObjectName[],
 MarshalledObject[], Subject[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A notification can be included in the result if its sequence number is no less than &lt;code&gt;clientSequenceNumber&lt;/code&gt; and this client has registered at least one listener for the MBean generating the notification, with a filter that accepts the notification. Each listener that is interested in the notification is identified by an Integer ID that was returned by &lt;a href=&quot;#addNotificationListeners(javax.management.ObjectName%5B%5D,java.rmi.MarshalledObject%5B%5D,javax.security.auth.Subject%5B%5D)&quot;&gt; &lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c3a10557374749dd3612c700569d8d4fbfff6337" translate="yes" xml:space="preserve">
          <source>A notification can be included in the result if its sequence number is no less than &lt;code&gt;clientSequenceNumber&lt;/code&gt; and this client has registered at least one listener for the MBean generating the notification, with a filter that accepts the notification. Each listener that is interested in the notification is identified by an Integer ID that was returned by &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt;&lt;code&gt;RMIConnection.addNotificationListeners(ObjectName[],
 MarshalledObject[], Subject[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">シーケンス番号が &lt;code&gt;clientSequenceNumber&lt;/code&gt; 以上で、このクライアントが通知を生成するMBeanの少なくとも1つのリスナーを、通知を受け入れるフィルターで登録している場合、通知に結果を含めることができます。通知に関係する各リスナーは、&lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt; &lt;code&gt;RMIConnection.addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt;によって返された整数IDによって識別されます。</target>
        </trans-unit>
        <trans-unit id="6f81cc48a1476843cb589c0a6edfffa3c877abc8" translate="yes" xml:space="preserve">
          <source>A notification can be included in the result if its sequence number is no less than &lt;code&gt;clientSequenceNumber&lt;/code&gt; and this client has registered at least one listener for the MBean generating the notification, with a filter that accepts the notification. Each listener that is interested in the notification is identified by an Integer ID that was returned by &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt;&lt;code&gt;addNotificationListeners(ObjectName[],
 MarshalledObject[], Subject[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">シーケンス番号が &lt;code&gt;clientSequenceNumber&lt;/code&gt; 以上で、このクライアントが通知を生成するMBeanの少なくとも1つのリスナーを、通知を受け入れるフィルターで登録している場合、通知に結果を含めることができます。通知に関係する各リスナーは、&lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt; &lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt;によって返された整数IDによって識別されます。</target>
        </trans-unit>
        <trans-unit id="eb2316273427642a12c2dde2fb02858156d5200b" translate="yes" xml:space="preserve">
          <source>A notification emitted by an MBean will be forwarded by the MBeanServer to the listener. If the source of the notification is a reference to an MBean object, the MBean server will replace it by that MBean's ObjectName. Otherwise the source is unchanged.</source>
          <target state="translated">MBean から発せられた通知は、MBeanServer によってリスナーに転送されます。通知のソースが MBean オブジェクトへの参照である場合、MBean サーバはそれを MBean の ObjectName で置き換えます。それ以外の場合、ソースは変更されません。</target>
        </trans-unit>
        <trans-unit id="9fbf4137e454e66ee8d25e83c4c38921d7f02cf7" translate="yes" xml:space="preserve">
          <source>A notification of a change in the Relation Service.</source>
          <target state="translated">リレーションサービスの変更通知。</target>
        </trans-unit>
        <trans-unit id="74b1df702f3bc581785499dd02ae0b69bee54ca0" translate="yes" xml:space="preserve">
          <source>A notification of a change in the Relation Service. A RelationNotification notification is sent when a relation is created via the Relation Service, or an MBean is added as a relation in the Relation Service, or a role is updated in a relation, or a relation is removed from the Relation Service.</source>
          <target state="translated">Relation Service の変更の通知。RelationNotification通知は、Relation Service経由でリレーションが作成されたとき、または、Relation ServiceでMBeanがリレーションとして追加されたとき、または、リレーションでロールが更新されたとき、または、リレーションがRelation Serviceから削除されたときに送信されます。</target>
        </trans-unit>
        <trans-unit id="b8184adc49569973f8d66fd10bb3be15b129fd5e" translate="yes" xml:space="preserve">
          <source>A number greater than or equal to zero -- indicates that the command was processed successfully and is an update count giving the number of rows in the database that were affected by the command's execution</source>
          <target state="translated">ゼロ以上の数値は、コマンドが正常に処理されたことを示し、コマンドの実行によって影響を受けたデータベース内の行数を示す更新回数です。</target>
        </trans-unit>
        <trans-unit id="42830d8bbd4ec7a36ac1600fbdb97fe7829814c8" translate="yes" xml:space="preserve">
          <source>A number of &lt;code&gt;ShortMessage&lt;/code&gt; methods have integer parameters by which you specify a MIDI status or data byte. If you know the numeric value, you can express it directly. For system common and system real-time messages, you can often use the corresponding fields of &lt;code&gt;ShortMessage&lt;/code&gt;, such as &lt;a href=&quot;#SYSTEM_RESET&quot;&gt;&lt;code&gt;SYSTEM_RESET&lt;/code&gt;&lt;/a&gt;. For channel messages, the upper four bits of the status byte are specified by a command value and the lower four bits are specified by a MIDI channel number. To convert incoming MIDI data bytes that are in the form of Java's signed bytes, you can use the &lt;a href=&quot;midimessage#integersVsBytes&quot;&gt;conversion code&lt;/a&gt; given in the &lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt; class description.</source>
          <target state="translated">A number of &lt;code&gt;ShortMessage&lt;/code&gt; methods have integer parameters by which you specify a MIDI status or data byte. If you know the numeric value, you can express it directly. For system common and system real-time messages, you can often use the corresponding fields of &lt;code&gt;ShortMessage&lt;/code&gt; , such as &lt;a href=&quot;#SYSTEM_RESET&quot;&gt; &lt;code&gt;SYSTEM_RESET&lt;/code&gt; &lt;/a&gt;. For channel messages, the upper four bits of the status byte are specified by a command value and the lower four bits are specified by a MIDI channel number. To convert incoming MIDI data bytes that are in the form of Java's signed bytes, you can use the &lt;a href=&quot;midimessage#integersVsBytes&quot;&gt;conversion code&lt;/a&gt; given in the &lt;a href=&quot;midimessage&quot;&gt; &lt;code&gt;MidiMessage&lt;/code&gt; &lt;/a&gt; class description.</target>
        </trans-unit>
        <trans-unit id="43f0f3abe1ddd97507c9365666da42e829d29184" translate="yes" xml:space="preserve">
          <source>A number of &lt;code&gt;ShortMessage&lt;/code&gt; methods have integer parameters by which you specify a MIDI status or data byte. If you know the numeric value, you can express it directly. For system common and system real-time messages, you can often use the corresponding fields of &lt;code&gt;ShortMessage&lt;/code&gt;, such as &lt;a href=&quot;shortmessage#SYSTEM_RESET&quot;&gt;&lt;code&gt;SYSTEM_RESET&lt;/code&gt;&lt;/a&gt;. For channel messages, the upper four bits of the status byte are specified by a command value and the lower four bits are specified by a MIDI channel number. To convert incoming MIDI data bytes that are in the form of Java's signed bytes, you can use the &lt;a href=&quot;midimessage#integersVsBytes&quot;&gt;conversion code&lt;/a&gt; given in the &lt;code&gt;&lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class description.</source>
          <target state="translated">多くの &lt;code&gt;ShortMessage&lt;/code&gt; メソッドには、MIDIステータスまたはデータバイトを指定する整数パラメーターがあります。数値がわかれば直接表現できます。システム共通メッセージとシステムリアルタイムメッセージの場合、多くの場合、&lt;a href=&quot;shortmessage#SYSTEM_RESET&quot;&gt; &lt;code&gt;SYSTEM_RESET&lt;/code&gt; &lt;/a&gt;などの &lt;code&gt;ShortMessage&lt;/code&gt; の対応するフィールドを使用できます。チャネルメッセージの場合、ステータスバイトの上位4ビットはコマンド値で指定され、下位4ビットはMIDIチャネル番号で指定されます。Javaの署名付きバイトの形式の着信MIDIデータバイトを変換するには、 &lt;code&gt;&lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; クラスの説明で提供されている&lt;a href=&quot;midimessage#integersVsBytes&quot;&gt;変換コードを&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="88ef82d7a1acf5551302d1f421428c6310badc2a" translate="yes" xml:space="preserve">
          <source>A number of classes in the java.net package do provide for a much higher level of abstraction and allow for easy access to resources on the network. The classes are:</source>
          <target state="translated">java.netパッケージ内のいくつかのクラスは、はるかに高い抽象化レベルを提供し、ネットワーク上のリソースへの容易なアクセスを可能にします。クラスは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="a7de7e6ccbddf2e2c4cb0823e652873980328bfe" translate="yes" xml:space="preserve">
          <source>A package exported by a module, may be qualified or unqualified.</source>
          <target state="translated">モジュールによってエクスポートされたパッケージは、修飾されている場合と、修飾されていない場合があります。</target>
        </trans-unit>
        <trans-unit id="26a5315e56bbc0b1a41c272ad0788f786e5e99a8" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API containing the plug-in interfaces for readers, writers, transcoders, and streams, and a runtime registry.</source>
          <target state="translated">Java Image I/O API のパッケージで、リーダ、ライタ、トランスコーダ、ストリーム用のプラグインインタフェースとランタイムレジストリが含まれています。</target>
        </trans-unit>
        <trans-unit id="3d1474ec8064f4048b349e060bd17d481f91abb7" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API dealing with low-level I/O from files and streams.</source>
          <target state="translated">ファイルやストリームからの低レベルI/Oを扱うJava Image I/O APIのパッケージ。</target>
        </trans-unit>
        <trans-unit id="fcd25d02098be8fe912d200eda69fa86ba44c8a4" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API dealing with reading and writing metadata.</source>
          <target state="translated">メタデータの読み書きを扱うJava Image I/O APIのパッケージ。</target>
        </trans-unit>
        <trans-unit id="1e50c13e656800213a2b38221ce5d3c67a302d08" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API dealing with synchronous notification of events during the reading and writing of images.</source>
          <target state="translated">画像の読み書き中のイベントの同期通知を扱うJava Image I/O APIのパッケージです。</target>
        </trans-unit>
        <trans-unit id="d42aa5ab351834ccda11ab2bfcd667dbe42adf2b" translate="yes" xml:space="preserve">
          <source>A package opened by a module, may be qualified or unqualified.</source>
          <target state="translated">モジュールによって開封されたパッケージは、修飾されていても、修飾されていなくてもよい。</target>
        </trans-unit>
        <trans-unit id="75aceaead5894b1564163cdca6dffc56df070c4d" translate="yes" xml:space="preserve">
          <source>A package.</source>
          <target state="translated">パッケージです。</target>
        </trans-unit>
        <trans-unit id="7c290b5fad84f553582133ce9e6b636bf6feff60" translate="yes" xml:space="preserve">
          <source>A painting delegate.</source>
          <target state="translated">絵画の代議士。</target>
        </trans-unit>
        <trans-unit id="21af00cd67fa2e76c463e609ff882f8a21333f75" translate="yes" xml:space="preserve">
          <source>A painting delegate. The Painter interface defines exactly one method, &lt;code&gt;paint&lt;/code&gt;. It is used in situations where the developer can change the painting routine of a component without having to resort to subclassing the component. It is also generically useful when doing any form of painting delegation.</source>
          <target state="translated">A painting delegate. The Painter interface defines exactly one method, &lt;code&gt;paint&lt;/code&gt; . It is used in situations where the developer can change the painting routine of a component without having to resort to subclassing the component. It is also generically useful when doing any form of painting delegation.</target>
        </trans-unit>
        <trans-unit id="9c561483e1216a136545d701b9a0c6a84ebc7b7e" translate="yes" xml:space="preserve">
          <source>A pair of channels that implements a unidirectional pipe.</source>
          <target state="translated">一方向パイプを実装したチャンネルのペア。</target>
        </trans-unit>
        <trans-unit id="161fbf388971c0361a60ca23423fec42d8bf9028" translate="yes" xml:space="preserve">
          <source>A pane that allows the user to navigate through and select the contents of a directory.</source>
          <target state="translated">ユーザーがディレクトリの内容をナビゲートしたり、選択したりできるようにするペインです。</target>
        </trans-unit>
        <trans-unit id="9e71a15ef7f8252ea4263584f6871d18af429f54" translate="yes" xml:space="preserve">
          <source>A pane that allows the user to navigate through and select the contents of a directory. May be used by a file chooser.</source>
          <target state="translated">ディレクトリの内容をナビゲートしたり選択したりするためのペイン。ファイルセレクタで使用することができる。</target>
        </trans-unit>
        <trans-unit id="4c18b24461f8ae6e47402d8230e4c8763f210c6d" translate="yes" xml:space="preserve">
          <source>A pane that is guaranteed to be painted on top of all panes beneath it.</source>
          <target state="translated">その下のすべてのペインの上に塗装されることが保証されているペイン。</target>
        </trans-unit>
        <trans-unit id="f67f98001b0f165dfe2a20beea6cabadb769f87c" translate="yes" xml:space="preserve">
          <source>A pane that supports internal frames and iconified versions of those internal frames.</source>
          <target state="translated">内部フレームとその内部フレームのアイコン化されたバージョンをサポートするペイン。</target>
        </trans-unit>
        <trans-unit id="7bf40754fba93eba6040ef587e633d26738db0e1" translate="yes" xml:space="preserve">
          <source>A panel that starts in row 0 and ends in row 1. The panel has a baseline-resize behavior of &lt;code&gt;CONSTANT_DESCENT&lt;/code&gt; and has an anchor of &lt;code&gt;BASELINE&lt;/code&gt;. As the baseline-resize behavior is &lt;code&gt;CONSTANT_DESCENT&lt;/code&gt; the prevailing row for the panel is row 1.</source>
          <target state="translated">A panel that starts in row 0 and ends in row 1. The panel has a baseline-resize behavior of &lt;code&gt;CONSTANT_DESCENT&lt;/code&gt; and has an anchor of &lt;code&gt;BASELINE&lt;/code&gt; . As the baseline-resize behavior is &lt;code&gt;CONSTANT_DESCENT&lt;/code&gt; the prevailing row for the panel is row 1.</target>
        </trans-unit>
        <trans-unit id="040482871b1b9f2a69ca18b4cced684c121757c7" translate="yes" xml:space="preserve">
          <source>A paragraph-separator character (&lt;code&gt;'\u2029'&lt;/code&gt;).</source>
          <target state="translated">A paragraph-separator character ( &lt;code&gt;'\u2029'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="394c92f3379723469af1d8636c4eaf9565783905" translate="yes" xml:space="preserve">
          <source>A paragraph-separator character (&lt;code&gt;'\u2029&lt;/code&gt;).</source>
          <target state="translated">段落区切り文字（ &lt;code&gt;'\u2029&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="79368f8d53ce66ea9334edbe3b72f58f6e497a54" translate="yes" xml:space="preserve">
          <source>A parameter of a method or constructor.</source>
          <target state="translated">メソッドまたはコンストラクタのパラメータ。</target>
        </trans-unit>
        <trans-unit id="58b36826d2d44021fe02b6a2abe751fe9a54079c" translate="yes" xml:space="preserve">
          <source>A parameter of an exception handler.</source>
          <target state="translated">例外ハンドラのパラメータ。</target>
        </trans-unit>
        <trans-unit id="3585600fff66d07c254c460c9422920ddb647135" translate="yes" xml:space="preserve">
          <source>A parameter that contains a URI pointing to data intended for a PolicySpi or ConfigurationSpi implementation.</source>
          <target state="translated">PolicySpi または ConfigurationSpi の実装を目的としたデータを指す URI を含むパラメータ。</target>
        </trans-unit>
        <trans-unit id="d7213d466d72a10b28057b3ef7fb4aba4a50d958" translate="yes" xml:space="preserve">
          <source>A parameter that has been set with setParameter.</source>
          <target state="translated">setParameterで設定したパラメータ。</target>
        </trans-unit>
        <trans-unit id="d63cf425fcd35e454243a434211b0e6d1a9b20cd" translate="yes" xml:space="preserve">
          <source>A parameter's name is &quot;&quot;, or contains an illegal character</source>
          <target state="translated">パラメータ名が&quot;&quot;であるか、不正な文字が含まれています。</target>
        </trans-unit>
        <trans-unit id="a6e2c142abe93ec8b1941b8de767b406102f08b5" translate="yes" xml:space="preserve">
          <source>A parameterized type is created the first time it is needed by a reflective method, as specified in this package. When a parameterized type p is created, the generic type declaration that p instantiates is resolved, and all type arguments of p are created recursively. See &lt;a href=&quot;typevariable&quot;&gt;&lt;code&gt;TypeVariable&lt;/code&gt;&lt;/a&gt; for details on the creation process for type variables. Repeated creation of a parameterized type has no effect.</source>
          <target state="translated">このパッケージで指定されているように、パラメーター化された型は、リフレクトメソッドで初めて必要になったときに作成されます。パラメータ化された型pが作成されると、pがインスタンス化するジェネリック型宣言が解決され、pのすべての型引数が再帰的に作成されます。参照してください。&lt;a href=&quot;typevariable&quot;&gt; &lt;code&gt;TypeVariable&lt;/code&gt; の&lt;/a&gt;型変数の作成プロセスの詳細については。パラメータ化された型を繰り返し作成しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="207968ed3b02650fd3f0f90772b619beb100c1b9" translate="yes" xml:space="preserve">
          <source>A parameters object for X509KeyManagers that encapsulates a List of KeyStore.Builders.</source>
          <target state="translated">KeyStore.Buildersのリストをカプセル化したX509KeyManagers用のパラメータオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="b990f88485fa5da93f0c0e3138f89eab0ed06e86" translate="yes" xml:space="preserve">
          <source>A parser must be able to work with any &lt;a href=&quot;../validation/schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; implementation. However, parsers and schemas are allowed to use implementation-specific custom mechanisms as long as they yield the result described in the specification.</source>
          <target state="translated">A parser must be able to work with any &lt;a href=&quot;../validation/schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt; implementation. However, parsers and schemas are allowed to use implementation-specific custom mechanisms as long as they yield the result described in the specification.</target>
        </trans-unit>
        <trans-unit id="725b605d7b96e538c4444b6cc65519d2a9564a59" translate="yes" xml:space="preserve">
          <source>A partially complete temporal is used to allow the chronology and zone to be queried. In general, only the chronology will be needed. Querying items other than the zone or chronology is undefined and must not be relied on. The behavior of other methods such as &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;getLong&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt; and &lt;code&gt;isSupported&lt;/code&gt; is unpredictable and the results undefined.</source>
          <target state="translated">部分的に完全な時相を使用して、年表とゾーンを照会できます。一般的に、必要なのは年表だけです。ゾーンまたは年表以外のアイテムのクエリは定義されておらず、依存することはできません。 &lt;code&gt;get&lt;/code&gt; 、 &lt;code&gt;getLong&lt;/code&gt; 、 &lt;code&gt;range&lt;/code&gt; 、 &lt;code&gt;isSupported&lt;/code&gt; などの他のメソッドの動作は予測できず、結果は未定義です。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
