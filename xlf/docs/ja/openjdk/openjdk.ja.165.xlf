<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="78ac89e34bb33075084c8e8edd00338d1db15d21" translate="yes" xml:space="preserve">
          <source>The notification emitted is a &lt;a href=&quot;../../../javax/management/notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; instance whose &lt;a href=&quot;../../../javax/management/notification#setUserData(java.lang.Object)&quot;&gt;&lt;code&gt;user data&lt;/code&gt;&lt;/a&gt; is set to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; that represents a &lt;a href=&quot;memorynotificationinfo&quot;&gt;&lt;code&gt;MemoryNotificationInfo&lt;/code&gt;&lt;/a&gt; object containing information about the memory pool when the notification was constructed. The &lt;code&gt;CompositeData&lt;/code&gt; contains the attributes as described in &lt;a href=&quot;memorynotificationinfo#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;MemoryNotificationInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;memorynotificationinfo&quot;&gt; &lt;code&gt;MemoryNotificationInfo&lt;/code&gt; &lt;/a&gt;れる通知は、通知が作成されたときのメモリプールに関する情報を含むMemoryNotificationInfoオブジェクトを表す&lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; に&lt;/a&gt;&lt;a href=&quot;../../../javax/management/notification#setUserData(java.lang.Object)&quot;&gt; &lt;code&gt;user data&lt;/code&gt; &lt;/a&gt;が設定されている&lt;a href=&quot;../../../javax/management/notification&quot;&gt; &lt;code&gt;Notification&lt;/code&gt; &lt;/a&gt;インスタンスです。 &lt;code&gt;CompositeData&lt;/code&gt; にはで説明したように属性が含まれ&lt;a href=&quot;memorynotificationinfo#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;MemoryNotificationInfo&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b815b7a69fff83a89aecb794ceb17aa59e315dbf" translate="yes" xml:space="preserve">
          <source>The notification emitted is a &lt;a href=&quot;../../../javax/management/notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; instance whose &lt;a href=&quot;../../../javax/management/notification#setUserData-java.lang.Object-&quot;&gt;&lt;code&gt;user data&lt;/code&gt;&lt;/a&gt; is set to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; that represents a &lt;a href=&quot;memorynotificationinfo&quot;&gt;&lt;code&gt;MemoryNotificationInfo&lt;/code&gt;&lt;/a&gt; object containing information about the memory pool when the notification was constructed. The &lt;code&gt;CompositeData&lt;/code&gt; contains the attributes as described in &lt;a href=&quot;memorynotificationinfo#from-javax.management.openmbean.CompositeData-&quot;&gt;&lt;code&gt;MemoryNotificationInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../javax/management/notification#setUserData-java.lang.Object-&quot;&gt; &lt;code&gt;user data&lt;/code&gt; &lt;/a&gt;される通知は、通知が作成されたときのメモリプールに関する情報を含む&lt;a href=&quot;memorynotificationinfo&quot;&gt; &lt;code&gt;MemoryNotificationInfo&lt;/code&gt; &lt;/a&gt;オブジェクトを表す&lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; に&lt;/a&gt;ユーザーデータが設定されている&lt;a href=&quot;../../../javax/management/notification&quot;&gt; &lt;code&gt;Notification&lt;/code&gt; &lt;/a&gt;インスタンスです。 &lt;code&gt;CompositeData&lt;/code&gt; にはで説明したように属性が含まれ&lt;a href=&quot;memorynotificationinfo#from-javax.management.openmbean.CompositeData-&quot;&gt; &lt;code&gt;MemoryNotificationInfo&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d43792640468618be4943696b58814c5982d2f01" translate="yes" xml:space="preserve">
          <source>The notification sequence number within the source object. It's a serial number identifying a particular instance of notification in the context of the notification source. The notification model does not assume that notifications will be received in the same order that they are sent. The sequence number helps listeners to sort received notifications.</source>
          <target state="translated">ソースオブジェクト内の通知シーケンス番号。これは、通知ソースのコンテキスト内の通知の特定のインスタンスを識別するシリアル番号です。通知モデルは、通知が送信された順番と同じ順番で受信されることを想定していません。シーケンス番号はリスナーが受信した通知をソートするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="047c41230a085945fb649a5ebbbac0f9cc2023e7" translate="yes" xml:space="preserve">
          <source>The notification source and a set of parameters concerning the monitor MBean's state need to be specified when creating a new object of this class. The list of notifications fired by the monitor MBeans is the following:</source>
          <target state="translated">このクラスの新規オブジェクトを作成する際には、通知ソースとモニタ MBean の状態に関するパラメータを指定する必要があります。モニターMBeansによって発行される通知のリストは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="f5e52f5aa1ac9e3d0cc53022642f1d2fa738c7f5" translate="yes" xml:space="preserve">
          <source>The notification timestamp.</source>
          <target state="translated">通知のタイムスタンプ。</target>
        </trans-unit>
        <trans-unit id="1cc0bdffa957699c3503e9a21edd9c5510954093" translate="yes" xml:space="preserve">
          <source>The notification type is one of the following:</source>
          <target state="translated">通知タイプは以下のいずれかとなります。</target>
        </trans-unit>
        <trans-unit id="54f36e19da8052d6b002a6408bea252c14dac4d8" translate="yes" xml:space="preserve">
          <source>The notification type. It's a string expressed in a dot notation similar to Java properties. It is recommended that the notification type should follow the reverse-domain-name convention used by Java package names. An example of a notification type is com.example.alarm.router.</source>
          <target state="translated">通知タイプです。Javaのプロパティに似たドット表記で表現された文字列です。通知タイプは、Java パッケージ名で使用される逆ドメイン名の規約に従うことを推奨します。通知タイプの例としては、com.example.alarm.router.</target>
        </trans-unit>
        <trans-unit id="1924a5b15b3249ce092a029bd89121d0f77e325f" translate="yes" xml:space="preserve">
          <source>The notification.</source>
          <target state="translated">通達の件。</target>
        </trans-unit>
        <trans-unit id="fab265b6684bbffb1f218488bc04b79bf0141ad3" translate="yes" xml:space="preserve">
          <source>The null byte &lt;code&gt;'\u0000'&lt;/code&gt; is encoded in 2-byte format rather than 1-byte, so that the encoded strings never have embedded nulls.</source>
          <target state="translated">ヌルバイト &lt;code&gt;'\u0000'&lt;/code&gt; エンコードされた文字列がNULLを埋め込またことがないのでことを、2バイト形式ではなく、1バイトでエンコードされています。</target>
        </trans-unit>
        <trans-unit id="556c462e53e5ab353ef562a0763b91624cdf0bb0" translate="yes" xml:space="preserve">
          <source>The null character &lt;code&gt;'\u0000'&lt;/code&gt; and characters in the range &lt;code&gt;'\u0080'&lt;/code&gt; to &lt;code&gt;'\u07FF'&lt;/code&gt; are represented by a pair of bytes.</source>
          <target state="translated">ヌル文字 &lt;code&gt;'\u0000'&lt;/code&gt; および &lt;code&gt;'\u0080'&lt;/code&gt; から &lt;code&gt;'\u07FF'&lt;/code&gt; の範囲の文字は、バイトのペアで表されます。</target>
        </trans-unit>
        <trans-unit id="3b8e10011b092d252f9eb3176c082893795abb5d" translate="yes" xml:space="preserve">
          <source>The null character &lt;code&gt;'\u0000'&lt;/code&gt; and characters in the range &lt;code&gt;'\u0080'&lt;/code&gt; to &lt;code&gt;'\u07FF'&lt;/code&gt; are represented by a pair of bytes:</source>
          <target state="translated">ヌル文字 &lt;code&gt;'\u0000'&lt;/code&gt; および &lt;code&gt;'\u0080'&lt;/code&gt; から &lt;code&gt;'\u07FF'&lt;/code&gt; の範囲の文字は、1組のバイトで表されます。</target>
        </trans-unit>
        <trans-unit id="fdf012dbbee5e63f7359a0dcd636e783461bf0ec" translate="yes" xml:space="preserve">
          <source>The null type.</source>
          <target state="translated">ヌル型です。</target>
        </trans-unit>
        <trans-unit id="bfa4624adbb58928ef8efb29a2f80d2c80dac18c" translate="yes" xml:space="preserve">
          <source>The null value.</source>
          <target state="translated">ヌル値です。</target>
        </trans-unit>
        <trans-unit id="72eeb7ae48294ef46081a7a538e4507ac50ff336" translate="yes" xml:space="preserve">
          <source>The number formatter that &lt;code&gt;DateFormat&lt;/code&gt; uses to format numbers in dates and times.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; が日付と時刻で数値をフォーマットするために使用する数値フォーマッター。</target>
        </trans-unit>
        <trans-unit id="62bb929eddf4e5076a6c1af6a73ff7f12b318660" translate="yes" xml:space="preserve">
          <source>The number formatter that &lt;code&gt;DateFormat&lt;/code&gt; uses to format numbers in dates and times. Subclasses should initialize this to a number format appropriate for the locale associated with this &lt;code&gt;DateFormat&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; が日付と時刻の数値をフォーマットするために使用する数値フォーマッタ。サブクラスはこれを、この &lt;code&gt;DateFormat&lt;/code&gt; に関連付けられたロケールに適した数値形式に初期化する必要があります。</target>
        </trans-unit>
        <trans-unit id="e937f460d16c2dd03c469010edefe2fdea52818a" translate="yes" xml:space="preserve">
          <source>The number is equal to or greater than 70 and followed by a space, comma, slash, or end of string</source>
          <target state="translated">70以上の数値で、スペース、カンマ、スラッシュ、または文字列の最後に続くもの。</target>
        </trans-unit>
        <trans-unit id="20c65393a3bac9d4d95cbcb35c3376b737c51fb4" translate="yes" xml:space="preserve">
          <source>The number is less than 70, and both a month and a day of the month have already been recognized</source>
          <target state="translated">70を切っており、月も日もすでに認知されている</target>
        </trans-unit>
        <trans-unit id="1cc438c896ef962d5026bc123197b09edc413720" translate="yes" xml:space="preserve">
          <source>The number is regarded as a year number if one of the following conditions is true:</source>
          <target state="translated">次の条件のいずれかに該当する場合、年号とみなす。</target>
        </trans-unit>
        <trans-unit id="fbd17b0115dc526bf174fa810f72abf0661f26d1" translate="yes" xml:space="preserve">
          <source>The number of 16-bit units that are available through &lt;code&gt;data&lt;/code&gt; and the &lt;code&gt;substringData&lt;/code&gt; method below.</source>
          <target state="translated">以下の &lt;code&gt;data&lt;/code&gt; および &lt;code&gt;substringData&lt;/code&gt; メソッドを介して使用できる16ビットユニットの数。</target>
        </trans-unit>
        <trans-unit id="75342f1094eb495c3aabd48425339086d2ad1cdf" translate="yes" xml:space="preserve">
          <source>The number of 16-bit units that are available through &lt;code&gt;data&lt;/code&gt; and the &lt;code&gt;substringData&lt;/code&gt; method below. This may have the value zero, i.e., &lt;code&gt;CharacterData&lt;/code&gt; nodes may be empty.</source>
          <target state="translated">以下の &lt;code&gt;data&lt;/code&gt; および &lt;code&gt;substringData&lt;/code&gt; メソッドを介して使用できる16ビットユニットの数。これは値がゼロである可能性があります。つまり、 &lt;code&gt;CharacterData&lt;/code&gt; ノードが空である可能性があります。</target>
        </trans-unit>
        <trans-unit id="abe9a464eadb8b45be72b38683ef575d9e77b2a1" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;CSSRules&lt;/code&gt; in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78bea75b4c9ef6959cd5b4f540c0e1736d470c61" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;CSSRules&lt;/code&gt; in the list. The range of valid child rule indices is &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;length-1&lt;/code&gt; inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c548becf36faf403211c576595e031a659f44d7d" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;CSSValues&lt;/code&gt; in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32bb8eee085247884b90546de84a4a8f1aac4f0" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;CSSValues&lt;/code&gt; in the list. The range of valid values of the indices is &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;length-1&lt;/code&gt; inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4b5ddabaf56d5c4c36a5570d9d6d29d030dd4e" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;DOMImplementation&lt;/code&gt;s in the list.</source>
          <target state="translated">リスト内の &lt;code&gt;DOMImplementation&lt;/code&gt; の数。</target>
        </trans-unit>
        <trans-unit id="9489088a467b83bdca0bfdbd7c936cad49d78114" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;DOMImplementation&lt;/code&gt;s in the list. The range of valid child node indices is 0 to &lt;code&gt;length-1&lt;/code&gt; inclusive.</source>
          <target state="translated">リスト内の &lt;code&gt;DOMImplementation&lt;/code&gt; の数。有効な子ノードインデックスの範囲は、0から &lt;code&gt;length-1&lt;/code&gt; までです。</target>
        </trans-unit>
        <trans-unit id="3151dddf297321dd67d138ddf19d1b8fa0097bde" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;DOMString&lt;/code&gt;s in the list.</source>
          <target state="translated">リスト内の &lt;code&gt;DOMString&lt;/code&gt; の数。</target>
        </trans-unit>
        <trans-unit id="675390bfaee708d77610d340d5e3baa3976e86f8" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;DOMString&lt;/code&gt;s in the list. The range of valid child node indices is 0 to &lt;code&gt;length-1&lt;/code&gt; inclusive.</source>
          <target state="translated">リスト内の &lt;code&gt;DOMString&lt;/code&gt; の数。有効な子ノードインデックスの範囲は、0から &lt;code&gt;length-1&lt;/code&gt; までです。</target>
        </trans-unit>
        <trans-unit id="476dd7b1e6f4eb5dfcec4e9dbe2a94ee1b0badd8" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;StyleSheets&lt;/code&gt; in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac5b164af72e445fb4f8455f787b7eca198e969" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;StyleSheets&lt;/code&gt; in the list. The range of valid child stylesheet indices is &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;length-1&lt;/code&gt; inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a60822d38a3770fe364352a19792205d536947" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;TIFFField&lt;/code&gt;s in this &lt;code&gt;TIFFDirectory&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;TIFFDirectory&lt;/code&gt; 内の &lt;code&gt;TIFFField&lt;/code&gt; の数。</target>
        </trans-unit>
        <trans-unit id="df8cbf65b57833acddb4ff0a78d9a0353df9a3f4" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;char&lt;/code&gt; values added to the buffer, or -1 if this source of characters is at its end</source>
          <target state="translated">バッファに追加された &lt;code&gt;char&lt;/code&gt; 値の数、またはこの文字ソースが最後にある場合は-1</target>
        </trans-unit>
        <trans-unit id="6a4fe6c9ed8723108cce0e192446f1016bb5190a" translate="yes" xml:space="preserve">
          <source>The number of DataBuffer data elements per pixel.</source>
          <target state="translated">1ピクセルあたりのDataBufferデータ要素数。</target>
        </trans-unit>
        <trans-unit id="a13aedd88da9ff953a45546a659c446cf0d4bcbb" translate="yes" xml:space="preserve">
          <source>The number of array elements when deserializing an array of the class.</source>
          <target state="translated">クラスの配列をデシリアライズするときの配列の要素数。</target>
        </trans-unit>
        <trans-unit id="a9e565d04a934465ec5fead6c1f84b201f781fa2" translate="yes" xml:space="preserve">
          <source>The number of attributes in the list.</source>
          <target state="translated">リストに含まれる属性の数。</target>
        </trans-unit>
        <trans-unit id="f3a97128719266ddb790af1c18af9062d75593ec" translate="yes" xml:space="preserve">
          <source>The number of attributes in this attribute set.</source>
          <target state="translated">この属性セットの属性数。</target>
        </trans-unit>
        <trans-unit id="6ec090dddd82f048df0c06bf0d557ff56e2af995" translate="yes" xml:space="preserve">
          <source>The number of audio channels in this format (1 for mono, 2 for stereo).</source>
          <target state="translated">このフォーマットのオーディオチャンネル数(モノラルは1、ステレオは2)。</target>
        </trans-unit>
        <trans-unit id="da794183d91354fbd66821a8a0c13b012e54b407" translate="yes" xml:space="preserve">
          <source>The number of available bytes on the partition or &lt;code&gt;0L&lt;/code&gt; if the abstract pathname does not name a partition or if this number cannot be obtained. On systems where this information is not available, this method will be equivalent to a call to &lt;a href=&quot;#getFreeSpace()&quot;&gt;&lt;code&gt;getFreeSpace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbe542c12a90a28a0f4b4b26ed2890e7aa85abd" translate="yes" xml:space="preserve">
          <source>The number of available bytes on the partition or &lt;code&gt;0L&lt;/code&gt; if the abstract pathname does not name a partition. On systems where this information is not available, this method will be equivalent to a call to &lt;a href=&quot;#getFreeSpace()&quot;&gt;&lt;code&gt;getFreeSpace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パーティションで使用可能なバイト数。抽象パス名でパーティションが指定されていない場合は &lt;code&gt;0L&lt;/code&gt; 。この情報が利用できないシステムでは、このメソッドは&lt;a href=&quot;#getFreeSpace()&quot;&gt; &lt;code&gt;getFreeSpace()&lt;/code&gt; の&lt;/a&gt;呼び出しと同等になります。</target>
        </trans-unit>
        <trans-unit id="ebe508295acf5978d83f70bb43c4b3bd8b4274fb" translate="yes" xml:space="preserve">
          <source>The number of available bytes on the partition or &lt;code&gt;0L&lt;/code&gt; if the abstract pathname does not name a partition. On systems where this information is not available, this method will be equivalent to a call to &lt;a href=&quot;file#getFreeSpace--&quot;&gt;&lt;code&gt;getFreeSpace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パーティションで使用可能なバイト数、または抽象パス名がパーティションを指定していない場合は &lt;code&gt;0L&lt;/code&gt; 。この情報が利用できないシステムでは、このメソッドは&lt;a href=&quot;file#getFreeSpace--&quot;&gt; &lt;code&gt;getFreeSpace()&lt;/code&gt; の&lt;/a&gt;呼び出しと同等です。</target>
        </trans-unit>
        <trans-unit id="986d228b1cb124a7f2771a51d5eedb83ae9e201a" translate="yes" xml:space="preserve">
          <source>The number of bands in the Raster.</source>
          <target state="translated">ラスタのバンド数。</target>
        </trans-unit>
        <trans-unit id="ebe7d42d7d56efc03967bcfad1c053de532602df" translate="yes" xml:space="preserve">
          <source>The number of bands in this &lt;code&gt;ComponentSampleModel&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;ComponentSampleModel&lt;/code&gt; のバンドの数。</target>
        </trans-unit>
        <trans-unit id="2c0a45d9f8790184259c173f5fdc53836106419a" translate="yes" xml:space="preserve">
          <source>The number of banks in this &lt;code&gt;ComponentSampleModel&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;ComponentSampleModel&lt;/code&gt; のバンクの数。</target>
        </trans-unit>
        <trans-unit id="3d71dc51d09a652590c4253e71d8987c66a2cdde" translate="yes" xml:space="preserve">
          <source>The number of banks in this DataBuffer.</source>
          <target state="translated">このDataBufferに含まれる銀行の数。</target>
        </trans-unit>
        <trans-unit id="1130b4382f1b7fe878fe4148c6bceffdb27b5491" translate="yes" xml:space="preserve">
          <source>The number of bits in each sample of a sound that has this format.</source>
          <target state="translated">この形式を持つ音の各サンプルのビット数。</target>
        </trans-unit>
        <trans-unit id="2c6ef0f30695893dbdb9d64573a808a0335d172d" translate="yes" xml:space="preserve">
          <source>The number of bits used to represent a &lt;code&gt;byte&lt;/code&gt; value in two's complement binary form.</source>
          <target state="translated">2の補数バイナリ形式で &lt;code&gt;byte&lt;/code&gt; 値を表すために使用されるビット数。</target>
        </trans-unit>
        <trans-unit id="15e790ed5a0a48d5374c994c58d90003c84875ca" translate="yes" xml:space="preserve">
          <source>The number of bits used to represent a &lt;code&gt;char&lt;/code&gt; value in unsigned binary form, constant &lt;code&gt;16&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 値を符号なしバイナリ形式で表すために使用されるビット数、定数 &lt;code&gt;16&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="262c8f5ae61f9348f39f6db260ec423eb0e0fc41" translate="yes" xml:space="preserve">
          <source>The number of bits used to represent a &lt;code&gt;double&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 値を表すために使用されるビット数。</target>
        </trans-unit>
        <trans-unit id="db7608f15c88ac6b6517884137b2698cc2061366" translate="yes" xml:space="preserve">
          <source>The number of bits used to represent a &lt;code&gt;float&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 値を表すために使用されるビット数。</target>
        </trans-unit>
        <trans-unit id="e0bfa0a3ed9120efd3be680d6da69e3fb3b7ff5a" translate="yes" xml:space="preserve">
          <source>The number of bits used to represent a &lt;code&gt;long&lt;/code&gt; value in two's complement binary form.</source>
          <target state="translated">2の補数バイナリ形式で &lt;code&gt;long&lt;/code&gt; 値を表すために使用されるビット数。</target>
        </trans-unit>
        <trans-unit id="8b6311d22d425e5b3c17619c262b0fb241a15127" translate="yes" xml:space="preserve">
          <source>The number of bits used to represent a &lt;code&gt;short&lt;/code&gt; value in two's complement binary form.</source>
          <target state="translated">2の補数バイナリ形式で &lt;code&gt;short&lt;/code&gt; 値を表すために使用されるビット数。</target>
        </trans-unit>
        <trans-unit id="11b4eca6a42f5c3d86eeb7e9b58d5fd4c96c3c69" translate="yes" xml:space="preserve">
          <source>The number of bits used to represent an &lt;code&gt;int&lt;/code&gt; value in two's complement binary form.</source>
          <target state="translated">2の補数バイナリ形式で &lt;code&gt;int&lt;/code&gt; 値を表すために使用されるビット数。</target>
        </trans-unit>
        <trans-unit id="b5aa872ec500b92f693ae617360824bca852a7c7" translate="yes" xml:space="preserve">
          <source>The number of buffers</source>
          <target state="translated">バッファの数</target>
        </trans-unit>
        <trans-unit id="b595b8a977d69a8109f568a8e86df5418ffc6011" translate="yes" xml:space="preserve">
          <source>The number of bytes allocated to read data from this stream and return the result is bounded by &lt;code&gt;2*(long)len&lt;/code&gt;, inclusive.</source>
          <target state="translated">このストリームからデータを読み取り、結果を返すために割り当てられたバイト数は、 &lt;code&gt;2*(long)len&lt;/code&gt; （両端を含む）によって制限されます。</target>
        </trans-unit>
        <trans-unit id="17d4e70f10cd5538ecaddea27e5925f3b39b1260" translate="yes" xml:space="preserve">
          <source>The number of bytes in each frame of a sound that has this format.</source>
          <target state="translated">この形式を持つサウンドの各フレームのバイト数。</target>
        </trans-unit>
        <trans-unit id="10ce5b479dd18c652ab8267df15337a3c496022c" translate="yes" xml:space="preserve">
          <source>The number of bytes in the MIDI message, including the status byte and any data bytes.</source>
          <target state="translated">MIDI メッセージのバイト数(ステータスバイトとデータバイトを含む)。</target>
        </trans-unit>
        <trans-unit id="d13a4622dc0f210135891bcff08ace66977b3820" translate="yes" xml:space="preserve">
          <source>The number of bytes of primitive data available to be read in the current buffer.</source>
          <target state="translated">現在のバッファで読み込めるプリミティブデータのバイト数。</target>
        </trans-unit>
        <trans-unit id="6341e47288eb142c81634939fc65c544723e74d1" translate="yes" xml:space="preserve">
          <source>The number of bytes read, &lt;code&gt;-1&lt;/code&gt; if the channel is an &lt;a href=&quot;sctpchannel&quot;&gt;&lt;code&gt;SctpChannel&lt;/code&gt;&lt;/a&gt; that has reached end-of-stream, otherwise &lt;code&gt;0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfdd8b77cfc1f1b2a6f5515e18f818690cf800f0" translate="yes" xml:space="preserve">
          <source>The number of bytes read, or -1 if the end of the stream has already been reached</source>
          <target state="translated">読み込んだバイト数、またはストリームの終了がすでに到達している場合は -1。</target>
        </trans-unit>
        <trans-unit id="cbcb5512c2972dbeb5124314fe8397ab9324ba4c" translate="yes" xml:space="preserve">
          <source>The number of bytes read, possibly zero</source>
          <target state="translated">読み込んだバイト数。</target>
        </trans-unit>
        <trans-unit id="e54fa04ce29f88473805b5e56fe5895a6e99f815" translate="yes" xml:space="preserve">
          <source>The number of bytes read, possibly zero, or &lt;code&gt;-1&lt;/code&gt; if the channel has reached end-of-stream</source>
          <target state="translated">読み込まれたバイト数。ゼロの場合もあり、チャネルがストリームの終わりに達した場合は &lt;code&gt;-1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2adccbd80eaab01d04b629a86d5b76357c7316e9" translate="yes" xml:space="preserve">
          <source>The number of bytes read, possibly zero, or &lt;code&gt;-1&lt;/code&gt; if the given position is greater than or equal to the file's current size</source>
          <target state="translated">読み込まれたバイト数。ゼロの場合もあり、指定された位置がファイルの現在のサイズ以上の場合は &lt;code&gt;-1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="654ef5023c84ef66a6381000b6a3d72b3ddd64a4" translate="yes" xml:space="preserve">
          <source>The number of bytes sent, which will be either the number of bytes that were remaining in the messages buffer when this method was invoked or, if this channel is non-blocking, may be zero if there was insufficient room for the message in the underlying output buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a7079e650bee5a8a354dd28ed5d308b1f47e06" translate="yes" xml:space="preserve">
          <source>The number of bytes sent, which will be either the number of bytes that were remaining in the source buffer when this method was invoked or, if this channel is non-blocking, may be zero if there was insufficient room for the datagram in the underlying output buffer</source>
          <target state="translated">送信されたバイト数は、このメソッドが呼び出されたときにソースバッファに残っていたバイト数、または、このチャネルがノンブロッキングの場合、基礎となる出力バッファにデータグラムのための十分なスペースがなかった場合はゼロになります。</target>
        </trans-unit>
        <trans-unit id="2255a94d1e2a76f353fed8a1d7b8e435de23cbd1" translate="yes" xml:space="preserve">
          <source>The number of bytes that can be read without blocking can be ascertained using the &lt;a href=&quot;dataline#available()&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;DataLine&lt;/code&gt; interface. (While it is guaranteed that this number of bytes can be read without blocking, there is no guarantee that attempts to read additional data will block.)</source>
          <target state="translated">ブロッキングなしで読み取ることができるバイト数は、 &lt;code&gt;DataLine&lt;/code&gt; インターフェイスの&lt;a href=&quot;dataline#available()&quot;&gt; &lt;code&gt;available&lt;/code&gt; &lt;/a&gt;メソッドを使用して確認できます。（このバイト数はブロックせずに読み取ることができることが保証されていますが、追加のデータを読み取ろうとするとブロックされるという保証はありません。）</target>
        </trans-unit>
        <trans-unit id="9e97ccf1d843b3b3580662091dfd95f1358e8031" translate="yes" xml:space="preserve">
          <source>The number of bytes that can be read without blocking can be ascertained using the &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of the &lt;code&gt;DataLine&lt;/code&gt; interface. (While it is guaranteed that this number of bytes can be read without blocking, there is no guarantee that attempts to read additional data will block.)</source>
          <target state="translated">ブロックせずに読み取ることができるバイト数は、 &lt;code&gt;DataLine&lt;/code&gt; インターフェースの &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドを使用して確認できます。（このバイト数はブロックせずに読み取ることができることが保証されていますが、追加のデータを読み取ろうとするとブロックされる保証はありません。）</target>
        </trans-unit>
        <trans-unit id="fd338086f6f6b37beee7c38de457fa661d7d1f92" translate="yes" xml:space="preserve">
          <source>The number of bytes that can be written without blocking can be ascertained using the &lt;a href=&quot;dataline#available()&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;DataLine&lt;/code&gt; interface. (While it is guaranteed that this number of bytes can be written without blocking, there is no guarantee that attempts to write additional data will block.)</source>
          <target state="translated">ブロッキングなしで書き込むことができるバイト数は、 &lt;code&gt;DataLine&lt;/code&gt; インターフェイスの&lt;a href=&quot;dataline#available()&quot;&gt; &lt;code&gt;available&lt;/code&gt; &lt;/a&gt;メソッドを使用して確認できます。（このバイト数はブロックせずに書き込むことができることが保証されていますが、追加のデータを書き込もうとするとブロックされるという保証はありません。）</target>
        </trans-unit>
        <trans-unit id="f0013bec32edf3c0c9dad2765e90a066acc9e7ad" translate="yes" xml:space="preserve">
          <source>The number of bytes that can be written without blocking can be ascertained using the &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of the &lt;code&gt;DataLine&lt;/code&gt; interface. (While it is guaranteed that this number of bytes can be written without blocking, there is no guarantee that attempts to write additional data will block.)</source>
          <target state="translated">ブロックせずに書き込むことができるバイト数は、 &lt;code&gt;DataLine&lt;/code&gt; インターフェースの &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドを使用して確認できます。（このバイト数はブロックせずに書き込むことができることが保証されていますが、追加のデータを書き込もうとするとブロックされるという保証はありません。）</target>
        </trans-unit>
        <trans-unit id="80f6fef15a305bb856be09b4ef7409dc0dfb2fc8" translate="yes" xml:space="preserve">
          <source>The number of bytes to be read must represent an integral number of sample frames, such that:</source>
          <target state="translated">読み込まれるバイト数は、次のようなサンプルフレームの積分数を表す必要があります。</target>
        </trans-unit>
        <trans-unit id="4523152343dab6798c93c7c3562ed8220c409f7a" translate="yes" xml:space="preserve">
          <source>The number of bytes to write must represent an integral number of sample frames, such that:</source>
          <target state="translated">書き込むバイト数は、次のように、サンプルフレームの積分数を表す必要があります。</target>
        </trans-unit>
        <trans-unit id="a610a04d9530184116d0938a5b3f9e488bba7801" translate="yes" xml:space="preserve">
          <source>The number of bytes used to represent a &lt;code&gt;byte&lt;/code&gt; value in two's complement binary form.</source>
          <target state="translated">2の補数バイナリ形式で &lt;code&gt;byte&lt;/code&gt; 値を表すために使用されるバイト数。</target>
        </trans-unit>
        <trans-unit id="1796e9529f51151f2a6f5b7fcdc6d4bd70c786af" translate="yes" xml:space="preserve">
          <source>The number of bytes used to represent a &lt;code&gt;char&lt;/code&gt; value in unsigned binary form.</source>
          <target state="translated">符号なしバイナリ形式で &lt;code&gt;char&lt;/code&gt; 値を表すために使用されるバイト数。</target>
        </trans-unit>
        <trans-unit id="3d71b8f32cede9bbb676411377aebced3b7d4c67" translate="yes" xml:space="preserve">
          <source>The number of bytes used to represent a &lt;code&gt;double&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 値を表すために使用されるバイト数。</target>
        </trans-unit>
        <trans-unit id="229d3c03b3ae3c1ed8f12a7910a48a2be5adc533" translate="yes" xml:space="preserve">
          <source>The number of bytes used to represent a &lt;code&gt;float&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 値を表すために使用されるバイト数。</target>
        </trans-unit>
        <trans-unit id="aa4672a7d102168489149e5d5e7d36728647ebc6" translate="yes" xml:space="preserve">
          <source>The number of bytes used to represent a &lt;code&gt;int&lt;/code&gt; value in two's complement binary form.</source>
          <target state="translated">2の補数バイナリ形式で &lt;code&gt;int&lt;/code&gt; 値を表すために使用されるバイト数。</target>
        </trans-unit>
        <trans-unit id="dcc8fa85fe3017a1bc6d96fbdb414b709a9b995c" translate="yes" xml:space="preserve">
          <source>The number of bytes used to represent a &lt;code&gt;long&lt;/code&gt; value in two's complement binary form.</source>
          <target state="translated">2の補数バイナリ形式で &lt;code&gt;long&lt;/code&gt; 値を表すために使用されるバイト数。</target>
        </trans-unit>
        <trans-unit id="d331db734169c052769944e176d28ab646bccf3a" translate="yes" xml:space="preserve">
          <source>The number of bytes used to represent a &lt;code&gt;short&lt;/code&gt; value in two's complement binary form.</source>
          <target state="translated">2の補数バイナリ形式で &lt;code&gt;short&lt;/code&gt; 値を表すために使用されるバイト数。</target>
        </trans-unit>
        <trans-unit id="fbddc6e94c7277988d661bc338017f0ceb95e132" translate="yes" xml:space="preserve">
          <source>The number of bytes used to represent an &lt;code&gt;int&lt;/code&gt; value in two's complement binary form.</source>
          <target state="translated">2の補数のバイナリ形式で &lt;code&gt;int&lt;/code&gt; 値を表すために使用されるバイト数。</target>
        </trans-unit>
        <trans-unit id="49cea9bc18d6128266132564ff26cd7bbad3f15a" translate="yes" xml:space="preserve">
          <source>The number of bytes written to the data output stream so far.</source>
          <target state="translated">これまでにデータ出力ストリームに書き込まれたバイト数。</target>
        </trans-unit>
        <trans-unit id="ccba44d3bc4162d753710c71c12cf8138d21d82d" translate="yes" xml:space="preserve">
          <source>The number of bytes written to the data output stream so far. If this counter overflows, it will be wrapped to Integer.MAX_VALUE.</source>
          <target state="translated">これまでにデータ出力ストリームに書き込まれたバイト数。このカウンタがオーバーフローした場合は、Integer.MAX_VALUEにラップされます。</target>
        </trans-unit>
        <trans-unit id="d0f42b4506dd9b1a24e0be2228b3cc5e5f34c15a" translate="yes" xml:space="preserve">
          <source>The number of bytes written to the output byte array</source>
          <target state="translated">出力バイト配列に書き込まれたバイト数</target>
        </trans-unit>
        <trans-unit id="6624a626639ad8ac1c8cb97de741a539df918fa9" translate="yes" xml:space="preserve">
          <source>The number of bytes written, possibly zero</source>
          <target state="translated">書き込まれたバイト数。</target>
        </trans-unit>
        <trans-unit id="2e83b9c69c8e5617a17c757bc7b8be745b27a54c" translate="yes" xml:space="preserve">
          <source>The number of bytes, possibly zero, that were actually transferred</source>
          <target state="translated">実際に転送されたバイト数(おそらくゼロ)。</target>
        </trans-unit>
        <trans-unit id="af7ab7cd4f3072661b7c20abd685bf0c436d55bc" translate="yes" xml:space="preserve">
          <source>The number of capturing groups in this matcher's pattern</source>
          <target state="translated">このマッチャーのパターンにおける捕獲群の数</target>
        </trans-unit>
        <trans-unit id="2f329af4f477cd85e689456398c923d81cd9c8c1" translate="yes" xml:space="preserve">
          <source>The number of channels (1 for mono, 2 for stereo, etc.), or &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;</source>
          <target state="translated">チャンネル数（モノ用に1つ、ステレオ用に2 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; ）、またはAudioSystem.NOT_SPECIFIED</target>
        </trans-unit>
        <trans-unit id="032b81eac6a8ead6bf3bea51101baeb3b3e0d8f0" translate="yes" xml:space="preserve">
          <source>The number of characters actually skipped</source>
          <target state="translated">実際に飛ばした文字数</target>
        </trans-unit>
        <trans-unit id="386f609288a9f0b220b6ac9838664b0f43846b2d" translate="yes" xml:space="preserve">
          <source>The number of characters added to the buffer, or -1 if this source of characters is at its end</source>
          <target state="translated">バッファに追加された文字数、またはこの文字源が終端にある場合は -1</target>
        </trans-unit>
        <trans-unit id="ecf5ab475eeef8fcb49643a9532fa7b4dc7af88a" translate="yes" xml:space="preserve">
          <source>The number of characters read, or -1 if the end of the stream has been reached</source>
          <target state="translated">読み込んだ文字数、ストリームが終了した場合は-1。</target>
        </trans-unit>
        <trans-unit id="205c7f1702ff1d1066de34202d523525add5dd9e" translate="yes" xml:space="preserve">
          <source>The number of chars in the buffer.</source>
          <target state="translated">バッファ内の文字数。</target>
        </trans-unit>
        <trans-unit id="6cce150dda936838801add841ddd847a738448a1" translate="yes" xml:space="preserve">
          <source>The number of color components in the profile's input color space.</source>
          <target state="translated">プロファイルの入力色空間の色成分の数。</target>
        </trans-unit>
        <trans-unit id="3a06c379ffd04e632888118323157e2ad1d24593" translate="yes" xml:space="preserve">
          <source>The number of columns of frames in the frameset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffe520e7d4024db8e4e5b1854078d07ec5d7d3a" translate="yes" xml:space="preserve">
          <source>The number of columns of frames in the frameset. See the cols attribute definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27fe1795e395f12dea2f5b4c6f95e4dd635c4f5" translate="yes" xml:space="preserve">
          <source>The number of components in this &lt;code&gt;ColorSpace&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;ColorSpace&lt;/code&gt; のコンポーネントの数。</target>
        </trans-unit>
        <trans-unit id="e5459d16fb3b7c8ed8621399fa51604616eecd04" translate="yes" xml:space="preserve">
          <source>The number of data items present in the field.</source>
          <target state="translated">フィールドに存在するデータ項目の数。</target>
        </trans-unit>
        <trans-unit id="929430c1d8c5ac6d7a42cbccdfc2c26fcd50c43a" translate="yes" xml:space="preserve">
          <source>The number of days considered to define the first week of a month or year varies by culture. For example, the ISO-8601 requires 4 days (more than half a week) to be present before counting the first week.</source>
          <target state="translated">月または年の最初の週を定義するために考慮される日数は、文化によって異なる。例えば、ISO-8601では、最初の週を数える前に4日(週の半分以上)が存在することを要求しています。</target>
        </trans-unit>
        <trans-unit id="82d024cc379193ffdf9a30ee6d903c40b1cdc418" translate="yes" xml:space="preserve">
          <source>The number of days is multiplied by 86400 to obtain the number of seconds to add. This is based on the standard definition of a day as 24 hours.</source>
          <target state="translated">日数に86400を乗じて、加算する秒数を求めます。これは、1日を24時間とする標準的な定義に基づいています。</target>
        </trans-unit>
        <trans-unit id="080fc6c7c7c958c7b7e37d0533887be92a47406d" translate="yes" xml:space="preserve">
          <source>The number of days is multiplied by 86400 to obtain the number of seconds to subtract. This is based on the standard definition of a day as 24 hours.</source>
          <target state="translated">日の数に86400を掛けて、引くべき秒数を求めます。これは、1日を24時間とする標準的な定義に基づいています。</target>
        </trans-unit>
        <trans-unit id="4c5a8510ea5cd109d91d0cd1e886868f35891a33" translate="yes" xml:space="preserve">
          <source>The number of digit characters after the exponent character gives the minimum exponent digit count. There is no maximum. Negative exponents are formatted using the localized minus sign, &lt;em&gt;not&lt;/em&gt; the prefix and suffix from the pattern. This allows patterns such as &lt;code&gt;&quot;0.###E0 m/s&quot;&lt;/code&gt;.</source>
          <target state="translated">指数文字の後の数字の数は、指数の最小桁数を示します。上限はありません。負の指数は、パターンの接頭辞と接尾辞で&lt;em&gt;はなく&lt;/em&gt;、ローカライズされたマイナス記号を使用してフォーマットされます。これにより、 &lt;code&gt;&quot;0.###E0 m/s&quot;&lt;/code&gt; などのパターンが許可されます。</target>
        </trans-unit>
        <trans-unit id="4b53b240407fd962e2dd3b27a91febfe24bbf171" translate="yes" xml:space="preserve">
          <source>The number of digits in the result for the fractional part of</source>
          <target state="translated">の端数部分の結果の桁数です。</target>
        </trans-unit>
        <trans-unit id="05d292761fd82f9f0dd80c9070f0ac52df331589" translate="yes" xml:space="preserve">
          <source>The number of dimensions of the new array must not exceed 255.</source>
          <target state="translated">新しい配列の次元数は255を超えてはなりません.</target>
        </trans-unit>
        <trans-unit id="d6cd0b74c19721cb1208c561a00d8161cb59f302" translate="yes" xml:space="preserve">
          <source>The number of distinct fields recognized by &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; および &lt;code&gt;set&lt;/code&gt; によって認識される個別のフィールドの数。</target>
        </trans-unit>
        <trans-unit id="5a45d0d315d987c393e3a2c515c64048ccf875d3" translate="yes" xml:space="preserve">
          <source>The number of distinct fields recognized by &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;. Field numbers range from &lt;code&gt;0..FIELD_COUNT-1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; および &lt;code&gt;set&lt;/code&gt; によって認識される個別のフィールドの数。フィールド番号の範囲は &lt;code&gt;0..FIELD_COUNT-1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e0dfd1950909619c9868b487a9d57d847c0cc29b" translate="yes" xml:space="preserve">
          <source>The number of elements covered by the stream source is known and the intermediate operation, &lt;code&gt;peek&lt;/code&gt;, does not inject into or remove elements from the stream (as may be the case for &lt;code&gt;flatMap&lt;/code&gt; or &lt;code&gt;filter&lt;/code&gt; operations). Thus the count is 4 and there is no need to execute the pipeline and, as a side-effect, print out the elements.</source>
          <target state="translated">ストリームソースによってカバーされる要素の数は既知であり、中間操作である &lt;code&gt;peek&lt;/code&gt; は、要素をストリームに挿入したり、ストリームから削除したりしません（ &lt;code&gt;flatMap&lt;/code&gt; または &lt;code&gt;filter&lt;/code&gt; 操作の場合のように）。したがって、カウントは4であり、パイプラインを実行する必要はなく、副作用として要素を出力します。</target>
        </trans-unit>
        <trans-unit id="789ce93185a0e2beb4cc5bbc9f0b5bac9d5ce9c3" translate="yes" xml:space="preserve">
          <source>The number of elements covered by the stream source, a &lt;code&gt;List&lt;/code&gt;, is known and the intermediate operation, &lt;code&gt;peek&lt;/code&gt;, does not inject into or remove elements from the stream (as may be the case for &lt;code&gt;flatMap&lt;/code&gt; or &lt;code&gt;filter&lt;/code&gt; operations). Thus the count is the size of the &lt;code&gt;List&lt;/code&gt; and there is no need to execute the pipeline and, as a side-effect, print out the list elements.</source>
          <target state="translated">ストリームソースである &lt;code&gt;List&lt;/code&gt; でカバーされる要素の数は既知であり、中間操作である &lt;code&gt;peek&lt;/code&gt; は、要素をストリームに挿入したり、ストリームから削除したりしません（ &lt;code&gt;flatMap&lt;/code&gt; または &lt;code&gt;filter&lt;/code&gt; 操作の場合のように）。したがって、カウントは &lt;code&gt;List&lt;/code&gt; のサイズであり、パイプラインを実行する必要はなく、副作用としてリスト要素を出力します。</target>
        </trans-unit>
        <trans-unit id="9860eaa69c7abfda9de7a6d02811a1e3a1871e66" translate="yes" xml:space="preserve">
          <source>The number of elements in &lt;code&gt;constants&lt;/code&gt; equals to number of \2 tags in &lt;code&gt;recipe&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;constants&lt;/code&gt; の要素の数は、 &lt;code&gt;recipe&lt;/code&gt; \ 2タグの数と同じです</target>
        </trans-unit>
        <trans-unit id="9f7e127090b80ab82ce71cab846f1367b5d71e09" translate="yes" xml:space="preserve">
          <source>The number of elements in &lt;code&gt;constants&lt;/code&gt; is equal to number of \2 tags in &lt;code&gt;recipe&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd4fd691fac05bdf2d5e37af4276341169d50a8" translate="yes" xml:space="preserve">
          <source>The number of elements remaining in this buffer</source>
          <target state="translated">このバッファに残っている要素の数</target>
        </trans-unit>
        <trans-unit id="b2e83b34b6fc477f1ef053898329bc6fcb7133b3" translate="yes" xml:space="preserve">
          <source>The number of entries in the search result, or zero if unknown.</source>
          <target state="translated">検索結果に含まれるエントリの数、不明な場合はゼロ。</target>
        </trans-unit>
        <trans-unit id="7279b8ec5b65eee9ab8817c690539d89f1ed6013" translate="yes" xml:space="preserve">
          <source>The number of events generated for an event request can be controlled through filters. Filters provide additional constraints that an event must satisfy before it is placed on the event queue. Multiple filters can be used by making multiple calls to filter addition methods such as &lt;a href=&quot;exceptionrequest#addClassFilter(java.lang.String)&quot;&gt;&lt;code&gt;ExceptionRequest.addClassFilter(java.lang.String classPattern)&lt;/code&gt;&lt;/a&gt;. Filters are added to an event one at a time only while the event is disabled. Multiple filters are applied with CUT-OFF AND, in the order it was added to the request. Only events that satisfy all filters are placed in the event queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1506fbc3937c30ae3fb6b2818335f09a36a8fc" translate="yes" xml:space="preserve">
          <source>The number of form controls in the form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84c6c62b5a42df25220cabbfa4124476735b0f2" translate="yes" xml:space="preserve">
          <source>The number of formal parameters for the executable this object represents</source>
          <target state="translated">このオブジェクトが表す実行可能ファイルのフォーマルパラメータの数</target>
        </trans-unit>
        <trans-unit id="dfefc77d44f13f44ad950d4ebe9a5e1dcbcc6e1d" translate="yes" xml:space="preserve">
          <source>The number of frames played or recorded per second, for sounds that have this format.</source>
          <target state="translated">このフォーマットを持つサウンドの場合、1秒間に再生または録音されるフレーム数。</target>
        </trans-unit>
        <trans-unit id="4edbcfc8aa45cc498cde3e783850921f5632be3c" translate="yes" xml:space="preserve">
          <source>The number of hours is multiplied by 3600 to obtain the number of seconds to subtract.</source>
          <target state="translated">時間数に3600を掛けて、引き算する秒数を求めます。</target>
        </trans-unit>
        <trans-unit id="307478f090dcd23f5ff03bb51efd07fb84315e34" translate="yes" xml:space="preserve">
          <source>The number of hours is multiplied by 60 to obtain the number of seconds to subtract.</source>
          <target state="translated">時間数に60を掛けて、引き算する秒数を求めます。</target>
        </trans-unit>
        <trans-unit id="78247313d86cd76765e1c133a2b09bbb32f29107" translate="yes" xml:space="preserve">
          <source>The number of instances of a serializable &lt;code&gt;BeanContextServceProvider&lt;/code&gt;.</source>
          <target state="translated">シリアル化可能な &lt;code&gt;BeanContextServceProvider&lt;/code&gt; のインスタンスの数。</target>
        </trans-unit>
        <trans-unit id="317369d1e0be16bc5ba4718d3219b54f3b09d26c" translate="yes" xml:space="preserve">
          <source>The number of items in the result</source>
          <target state="translated">結果の項目数</target>
        </trans-unit>
        <trans-unit id="097f0a8d71914cb9c6dea77c3a145d38daa1e596" translate="yes" xml:space="preserve">
          <source>The number of iterations is determined by the &lt;code&gt;iterations&lt;/code&gt; handle evaluation result. The loop counter &lt;code&gt;i&lt;/code&gt; is an extra loop iteration variable of type &lt;code&gt;int&lt;/code&gt;. It will be initialized to 0 and incremented by 1 in each iteration.</source>
          <target state="translated">反復回数は、 &lt;code&gt;iterations&lt;/code&gt; 処理の評価結果によって決まります。ループカウンター &lt;code&gt;i&lt;/code&gt; は、 &lt;code&gt;int&lt;/code&gt; 型の追加のループ反復変数です。これは0に初期化され、反復ごとに1ずつ増加します。</target>
        </trans-unit>
        <trans-unit id="3e1adaf0033f7bba7e092443336bc7fbe43cefde" translate="yes" xml:space="preserve">
          <source>The number of keys, possibly zero, whose ready-operation sets were updated</source>
          <target state="translated">既定の操作セットが更新された鍵の数(0の場合もある)。</target>
        </trans-unit>
        <trans-unit id="4418abf384fb3ff1dd1752bbc4761bc8afef107c" translate="yes" xml:space="preserve">
          <source>The number of keys, possibly zero, whose ready-operation sets were updated by the selection operation</source>
          <target state="translated">選択操作によって操作可能セットが更新されたキーの数(0の場合もある)</target>
        </trans-unit>
        <trans-unit id="c20843ef3b72fbf752c53fffbd60b239fd23c93b" translate="yes" xml:space="preserve">
          <source>The number of media in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d182bf34796729394244e789fd603bbd0ac1ef98" translate="yes" xml:space="preserve">
          <source>The number of media in the list. The range of valid media is &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;length-1&lt;/code&gt; inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58599d8f7a9756bbcaa8cb541eec393ad429d292" translate="yes" xml:space="preserve">
          <source>The number of nodes in the list.</source>
          <target state="translated">リストに含まれるノードの数。</target>
        </trans-unit>
        <trans-unit id="10c3a3ca6ddaa4e8f11f7782659de88cb00a5425" translate="yes" xml:space="preserve">
          <source>The number of nodes in the list. The range of valid child node indices is 0 to &lt;code&gt;length-1&lt;/code&gt; inclusive.</source>
          <target state="translated">リスト内のノードの数。有効な子ノードインデックスの範囲は0から &lt;code&gt;length-1&lt;/code&gt; までです。</target>
        </trans-unit>
        <trans-unit id="89a5e0b13372e6fc062adb249daacd8031860d98" translate="yes" xml:space="preserve">
          <source>The number of nodes in the result snapshot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571156ab8ed4d3c2f5cbffafc1a6e233235445db" translate="yes" xml:space="preserve">
          <source>The number of nodes in the result snapshot. Valid values for snapshotItem indices are &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;snapshotLength-1&lt;/code&gt; inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ccd76fa8856f04dcd4795c012af0ade0677dc3" translate="yes" xml:space="preserve">
          <source>The number of nodes in this map.</source>
          <target state="translated">このマップのノード数。</target>
        </trans-unit>
        <trans-unit id="99714a0533e48c069f5d0251fb069318d7bc8ed0" translate="yes" xml:space="preserve">
          <source>The number of nodes in this map. The range of valid child node indices is &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;length-1&lt;/code&gt; inclusive.</source>
          <target state="translated">このマップ内のノードの数。有効な子ノードインデックスの範囲は、 &lt;code&gt;0&lt;/code&gt; から &lt;code&gt;length-1&lt;/code&gt; までです。</target>
        </trans-unit>
        <trans-unit id="b11bc3b865afb868876d196a399af8b369dc2995" translate="yes" xml:space="preserve">
          <source>The number of options in this &lt;code&gt;SELECT&lt;/code&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae7dea8f5d3421534529bc5cc4c84ee7b852657" translate="yes" xml:space="preserve">
          <source>The number of pairs (name and namespaceURI) in the list.</source>
          <target state="translated">リスト内のペア(名前と名前空間URI)の数。</target>
        </trans-unit>
        <trans-unit id="c3847744dd637bbb831cfd22ebd7a7b7aa4dd88e" translate="yes" xml:space="preserve">
          <source>The number of pairs (name and namespaceURI) in the list. The range of valid child node indices is 0 to &lt;code&gt;length-1&lt;/code&gt; inclusive.</source>
          <target state="translated">リスト内のペアの数（nameとnamespaceURI）。有効な子ノードインデックスの範囲は、0から &lt;code&gt;length-1&lt;/code&gt; までです。</target>
        </trans-unit>
        <trans-unit id="555261104557ed52a03a89935ea1fbf0b6fdc34b" translate="yes" xml:space="preserve">
          <source>The number of parameter slots in &lt;code&gt;concatType&lt;/code&gt; is less than or equal to 200</source>
          <target state="translated">&lt;code&gt;concatType&lt;/code&gt; のパラメータスロットの数が200以下</target>
        </trans-unit>
        <trans-unit id="d0b15529b633a23cd3e86f0403d34390bbda7486" translate="yes" xml:space="preserve">
          <source>The number of parameters (parameter_count) is wrong for the method</source>
          <target state="translated">メソッドのパラメータ数 (parameter_count)が間違っています。</target>
        </trans-unit>
        <trans-unit id="305a1cc134b6c645204fd4641631706c7a3bf073" translate="yes" xml:space="preserve">
          <source>The number of pixels and scanlines to be used are calculated as follows.</source>
          <target state="translated">使用する画素数とスキャンラインは、以下のように計算されます。</target>
        </trans-unit>
        <trans-unit id="6343b0fcd544950cdbcf24b5aaa789b892836bb5" translate="yes" xml:space="preserve">
          <source>The number of properties that have been explicitly set in this declaration block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4561440cc6cdd63b07a44062ec81252e18c80b7f" translate="yes" xml:space="preserve">
          <source>The number of properties that have been explicitly set in this declaration block. The range of valid indices is 0 to length-1 inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e36ed639ce030e50c74a42001c8392fa0df35e" translate="yes" xml:space="preserve">
          <source>The number of rows of frames in the frameset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3bca561abb5210de2c168887b1285b153fe5c7" translate="yes" xml:space="preserve">
          <source>The number of rows of frames in the frameset. See the rows attribute definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b09023fb617952757d1c12c7474a0c419e6159" translate="yes" xml:space="preserve">
          <source>The number of samples played or recorded per second, for sounds that have this format.</source>
          <target state="translated">このフォーマットを持つサウンドの場合、1秒間に再生または録音されるサンプル数。</target>
        </trans-unit>
        <trans-unit id="9bbc1ff0553b0381a0869f137c83f31dcb608500" translate="yes" xml:space="preserve">
          <source>The number of scanlines to be used can be computed similarly.</source>
          <target state="translated">使用するスキャンラインの数も同様に計算できます。</target>
        </trans-unit>
        <trans-unit id="afe45a69b86f3105c28dbba507ef13df1b6571f1" translate="yes" xml:space="preserve">
          <source>The number of seconds is calculated using the era, year-of-era, month, day-of-month, hour, minute, second, and zoneOffset.</source>
          <target state="translated">秒数は、時代、年号、月号、日号、時号、分号、秒号、zoneOffsetを用いて計算します。</target>
        </trans-unit>
        <trans-unit id="2e29a6191dda7aba6c2290709789914d31fdc135" translate="yes" xml:space="preserve">
          <source>The number of seconds is calculated using the proleptic-year, month, day-of-month, hour, minute, second, and zoneOffset.</source>
          <target state="translated">秒数は、proleptic-year、month、day-of-month、hour、minute、second、zoneOffsetを使用して計算されます。</target>
        </trans-unit>
        <trans-unit id="27d50337df7b10c0b2a7bea6efd93de22a290207" translate="yes" xml:space="preserve">
          <source>The number of seconds is calculated using the year, month, day-of-month, hour, minute, second, and zoneOffset.</source>
          <target state="translated">秒数は、年、月、日、時、分、秒、zoneOffsetを使って計算します。</target>
        </trans-unit>
        <trans-unit id="7ba563126126250d6b36a8f34204fd2b8961d6b5" translate="yes" xml:space="preserve">
          <source>The number of sequence elements isn't necessarily bounded.</source>
          <target state="translated">シーケンス要素の数には必ずしも制限はありません。</target>
        </trans-unit>
        <trans-unit id="be3893e01cc76c096f13435ff5df0b674f3d85d4" translate="yes" xml:space="preserve">
          <source>The number of sessions that can be stored in context can be limited.</source>
          <target state="translated">コンテキストに保存できるセッションの数を制限することができます。</target>
        </trans-unit>
        <trans-unit id="bc312459807625f373e756dee442f9bfa948a13e" translate="yes" xml:space="preserve">
          <source>The number of significant digits in the mantissa is the sum of the &lt;em&gt;minimum integer&lt;/em&gt; and &lt;em&gt;maximum fraction&lt;/em&gt; digits, and is unaffected by the maximum integer digits. For example, 12345 formatted with &lt;code&gt;&quot;##0.##E0&quot;&lt;/code&gt; is &lt;code&gt;&quot;12.3E3&quot;&lt;/code&gt;. To show all digits, set the significant digits count to zero. The number of significant digits does not affect parsing.</source>
          <target state="translated">仮数の有効桁数は、&lt;em&gt;最小整数&lt;/em&gt;と&lt;em&gt;最大小&lt;/em&gt;数桁の合計であり、最大整数桁の影響を受けません。たとえば、 &lt;code&gt;&quot;##0.##E0&quot;&lt;/code&gt; フォーマットされた12345 は &lt;code&gt;&quot;12.3E3&quot;&lt;/code&gt; です。すべての桁を表示するには、有効桁数をゼロに設定します。有効桁数は解析に影響しません。</target>
        </trans-unit>
        <trans-unit id="5d91005939f84137a8df80f671cacf84df36e6b8" translate="yes" xml:space="preserve">
          <source>The number of subsampled pixels in a scanline is given by</source>
          <target state="translated">スキャンライン内のサブサンプル化されたピクセルの数は</target>
        </trans-unit>
        <trans-unit id="dcd109508ee8f3a6f378ef74aa92b469fe67d4fc" translate="yes" xml:space="preserve">
          <source>The number of system colors in the array.</source>
          <target state="translated">配列内のシステムカラーの数。</target>
        </trans-unit>
        <trans-unit id="ff212c63b39ca97d00e31f372ba96ac08c1c2239" translate="yes" xml:space="preserve">
          <source>The number of timer notifications.</source>
          <target state="translated">タイマー通知の数です。</target>
        </trans-unit>
        <trans-unit id="a99c933e31e58e2b2effa06d1ecd99e60ab9562d" translate="yes" xml:space="preserve">
          <source>The number of times that the memory usage has crossed a threshold when the notification was constructed. For usage threshold notifications, this count will be the &lt;a href=&quot;memorypoolmxbean#getUsageThresholdCount()&quot;&gt;&lt;code&gt;usage threshold
       count&lt;/code&gt;&lt;/a&gt;. For collection threshold notifications, this count will be the &lt;a href=&quot;memorypoolmxbean#getCollectionUsageThresholdCount()&quot;&gt;&lt;code&gt;collection usage threshold count&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通知が作成されたときにメモリ使用量がしきい値を超えた回数。使用しきい値通知の場合、このカウントは&lt;a href=&quot;memorypoolmxbean#getUsageThresholdCount()&quot;&gt; &lt;code&gt;usage threshold count&lt;/code&gt; &lt;/a&gt;。収集しきい値通知の場合、このカウントは&lt;a href=&quot;memorypoolmxbean#getCollectionUsageThresholdCount()&quot;&gt; &lt;code&gt;collection usage threshold count&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="19bd983290a225549adc50288431558c89bf12d7" translate="yes" xml:space="preserve">
          <source>The number of times that the memory usage has crossed a threshold when the notification was constructed. For usage threshold notifications, this count will be the &lt;a href=&quot;memorypoolmxbean#getUsageThresholdCount--&quot;&gt;&lt;code&gt;usage threshold
       count&lt;/code&gt;&lt;/a&gt;. For collection threshold notifications, this count will be the &lt;a href=&quot;memorypoolmxbean#getCollectionUsageThresholdCount--&quot;&gt;&lt;code&gt;collection usage threshold count&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通知の作成時にメモリ使用量がしきい値を超えた回数。使用量しきい値通知の場合、このカウントは&lt;a href=&quot;memorypoolmxbean#getUsageThresholdCount--&quot;&gt; &lt;code&gt;usage threshold count&lt;/code&gt; &lt;/a&gt;。コレクションしきい値通知の場合、この数は&lt;a href=&quot;memorypoolmxbean#getCollectionUsageThresholdCount--&quot;&gt; &lt;code&gt;collection usage threshold count&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d5233e312eca4b40bdcfff8caabd2847f926280" translate="yes" xml:space="preserve">
          <source>The number of times that the thread has blocked for synchronization or waited for notification.</source>
          <target state="translated">スレッドが同期のためにブロックした回数、または通知を待った回数。</target>
        </trans-unit>
        <trans-unit id="3736904d09a27872b02330b53922aff48808ffef" translate="yes" xml:space="preserve">
          <source>The number of times this list has been</source>
          <target state="translated">このリストの回数は</target>
        </trans-unit>
        <trans-unit id="357ec448a341d2b228db1dbd27bc9cf72c53aabb" translate="yes" xml:space="preserve">
          <source>The number of type arguments must either equal the number of the type element's formal type parameters, or must be zero. If zero, and if the type element is generic, then the type element's raw type is returned.</source>
          <target state="translated">型引数の数は,型要素の形式的な型パラメータの数と等しくなければならないか,0でなければならない。ゼロの場合、また、type要素が一般的なものである場合は、type要素の生の型が返されます。</target>
        </trans-unit>
        <trans-unit id="6b602b7781dbf08e5719fd58a4e1bbbbeccdfe65" translate="yes" xml:space="preserve">
          <source>The number of unallocated bytes on the partition or &lt;code&gt;0L&lt;/code&gt; if the abstract pathname does not name a partition or if this number cannot be obtained. This value will be less than or equal to the total file system size returned by &lt;a href=&quot;#getTotalSpace()&quot;&gt;&lt;code&gt;getTotalSpace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668af3c185c4b261a4b5f605aa7eb30233f7fa80" translate="yes" xml:space="preserve">
          <source>The number of unallocated bytes on the partition or &lt;code&gt;0L&lt;/code&gt; if the abstract pathname does not name a partition. This value will be less than or equal to the total file system size returned by &lt;a href=&quot;#getTotalSpace()&quot;&gt;&lt;code&gt;getTotalSpace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パーティション上の未割り当てバイト数。抽象パス名がパーティションに名前を付けていない場合は &lt;code&gt;0L&lt;/code&gt; 。この値は、&lt;a href=&quot;#getTotalSpace()&quot;&gt; &lt;code&gt;getTotalSpace()&lt;/code&gt; &lt;/a&gt;によって返されるファイルシステムの合計サイズ以下になります。</target>
        </trans-unit>
        <trans-unit id="bb5dcdeeed728c559a3fe4b12406c534b1b7846c" translate="yes" xml:space="preserve">
          <source>The number of unallocated bytes on the partition or &lt;code&gt;0L&lt;/code&gt; if the abstract pathname does not name a partition. This value will be less than or equal to the total file system size returned by &lt;a href=&quot;file#getTotalSpace--&quot;&gt;&lt;code&gt;getTotalSpace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パーティション上の未割り当てバイト数、または抽象パス名がパーティションを指定していない場合は &lt;code&gt;0L&lt;/code&gt; 。この値は、&lt;a href=&quot;file#getTotalSpace--&quot;&gt; &lt;code&gt;getTotalSpace()&lt;/code&gt; &lt;/a&gt;によって返されるファイルシステムの合計サイズ以下になります。</target>
        </trans-unit>
        <trans-unit id="43d617bb62a7a18964f7ca8a27418ffb89cf70e0" translate="yes" xml:space="preserve">
          <source>The number of unique keys consumed, possibly zero</source>
          <target state="translated">消費された一意の鍵の数。</target>
        </trans-unit>
        <trans-unit id="87c541a3e7a17d1566331ea8f74b8b01cec37942" translate="yes" xml:space="preserve">
          <source>The number of valid bytes in the buffer.</source>
          <target state="translated">バッファ内の有効なバイト数。</target>
        </trans-unit>
        <trans-unit id="24896816bf723dc5a3b4b2e1bd2ca0f9074de51b" translate="yes" xml:space="preserve">
          <source>The number of valid bytes in the buffer. This value is always in the range &lt;code&gt;0&lt;/code&gt; through &lt;code&gt;buf.length&lt;/code&gt;; elements &lt;code&gt;buf[0]&lt;/code&gt; through &lt;code&gt;buf[count-1]&lt;/code&gt; contain valid byte data.</source>
          <target state="translated">バッファ内の有効なバイト数。この値は常に &lt;code&gt;0&lt;/code&gt; から &lt;code&gt;buf.length&lt;/code&gt; の範囲です。要素 &lt;code&gt;buf[0]&lt;/code&gt; から &lt;code&gt;buf[count-1]&lt;/code&gt; は、有効なバイトデータが含まれています。</target>
        </trans-unit>
        <trans-unit id="2e96ff8f9eedefb579c2382e0dc82d928321f101" translate="yes" xml:space="preserve">
          <source>The number of valid characters in the input stream buffer.</source>
          <target state="translated">入力ストリームバッファ内の有効な文字数。</target>
        </trans-unit>
        <trans-unit id="e57f66c301a924e445314f3299d3af941360076b" translate="yes" xml:space="preserve">
          <source>The number of valid components in the vector of observed objects.</source>
          <target state="translated">観測されたオブジェクトのベクトル内の有効成分の数.</target>
        </trans-unit>
        <trans-unit id="d8ec9845a21a8802586d218cdb961c9632ff679e" translate="yes" xml:space="preserve">
          <source>The number of valid components in this &lt;code&gt;Vector&lt;/code&gt; object.</source>
          <target state="translated">この &lt;code&gt;Vector&lt;/code&gt; オブジェクト内の有効なコンポーネントの数。</target>
        </trans-unit>
        <trans-unit id="f6b3f8e949ab3c4c73047ca1f7e1396e53ad0edf" translate="yes" xml:space="preserve">
          <source>The number of valid components in this &lt;code&gt;Vector&lt;/code&gt; object. Components &lt;code&gt;elementData[0]&lt;/code&gt; through &lt;code&gt;elementData[elementCount-1]&lt;/code&gt; are the actual items.</source>
          <target state="translated">この &lt;code&gt;Vector&lt;/code&gt; オブジェクト内の有効なコンポーネントの数。 &lt;code&gt;elementData[0]&lt;/code&gt; から &lt;code&gt;elementData[elementCount-1]&lt;/code&gt; までのコンポーネントは、実際のアイテムです。</target>
        </trans-unit>
        <trans-unit id="d36405cf1838f4623a0028cc40d5619b16565f33" translate="yes" xml:space="preserve">
          <source>The number of values between the major tick marks -- the larger marks that break up the minor tick marks.</source>
          <target state="translated">メジャー目盛りとマイナー目盛りの間の値の数。</target>
        </trans-unit>
        <trans-unit id="6f14995f2deadbb2d0a053c0fbe4ed6a82bd8ff5" translate="yes" xml:space="preserve">
          <source>The number of values between the minor tick marks -- the smaller marks that occur between the major tick marks.</source>
          <target state="translated">マイナー目盛りの間にある値の数 --メジャー目盛りの間にある小さな目盛りの数。</target>
        </trans-unit>
        <trans-unit id="bc51c3cdfd5086e82cbbf9f7edebb6104b8eb202" translate="yes" xml:space="preserve">
          <source>The number, types and properties of a &lt;code&gt;ResultSet&lt;/code&gt; object's columns are provided by the &lt;code&gt;ResultSetMetaData&lt;/code&gt; object returned by the &lt;code&gt;ResultSet.getMetaData&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; オブジェクトの列の数、タイプ、およびプロパティは、 &lt;code&gt;ResultSet.getMetaData&lt;/code&gt; メソッドによって返される &lt;code&gt;ResultSetMetaData&lt;/code&gt; オブジェクトによって提供されます。</target>
        </trans-unit>
        <trans-unit id="f57f709838bfc1167d3aa24e20f38dfd74e18c34" translate="yes" xml:space="preserve">
          <source>The numerically largest constant representing a TIFF data type.</source>
          <target state="translated">TIFFデータ型を表す数値的に最大の定数。</target>
        </trans-unit>
        <trans-unit id="7b270a943d9f7ce2a2bc2099cd7e009b0695ba7c" translate="yes" xml:space="preserve">
          <source>The numerically smallest constant representing a TIFF data type.</source>
          <target state="translated">TIFFデータ型を表す数値的に最小の定数。</target>
        </trans-unit>
        <trans-unit id="9bc6965ff85bb150de99e69a5605bbc312ce5005" translate="yes" xml:space="preserve">
          <source>The object &lt;code&gt;crs&lt;/code&gt; now contains the data from the table &lt;code&gt;EMPLOYEES&lt;/code&gt;, just as the object &lt;code&gt;rs&lt;/code&gt; does. The difference is that the cursor for &lt;code&gt;crs&lt;/code&gt; can be moved forward, backward, or to a particular row even if the cursor for &lt;code&gt;rs&lt;/code&gt; can move only forward. In addition, &lt;code&gt;crs&lt;/code&gt; is updatable even if &lt;code&gt;rs&lt;/code&gt; is not because by default, a &lt;code&gt;CachedRowSet&lt;/code&gt; object is both scrollable and updatable.</source>
          <target state="translated">オブジェクト &lt;code&gt;crs&lt;/code&gt; には、オブジェクト &lt;code&gt;rs&lt;/code&gt; と同様に、テーブル &lt;code&gt;EMPLOYEES&lt;/code&gt; のデータが含まれるようになりました。違いは、 &lt;code&gt;rs&lt;/code&gt; のカーソルが前方にしか移動できない場合でも、 &lt;code&gt;crs&lt;/code&gt; のカーソルを前方、後方、または特定の行に移動できることです。さらに、デフォルトでは &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトはスクロール可能であり、更新可能であるため、 &lt;code&gt;rs&lt;/code&gt; が更新可能でない場合でも、 &lt;code&gt;crs&lt;/code&gt; は更新可能です。</target>
        </trans-unit>
        <trans-unit id="8e1ec64095853fe197aa6cf41100bd72f0b70a53" translate="yes" xml:space="preserve">
          <source>The object acts as a &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber&quot;&gt;&lt;code&gt;Flow.Subscriber&lt;/code&gt;&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../../java.base/java/util/list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../../java.base/java/nio/bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;&amp;gt;&amp;gt; to the HTTP Client implementation, which publishes lists of ByteBuffers containing the response body. The Flow of data, as well as the order of ByteBuffers in the Flow lists, is a strictly ordered representation of the response body. Both the Lists and the ByteBuffers, once passed to the subscriber, are no longer used by the HTTP Client. The subscriber converts the incoming buffers of data to some higher-level Java type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">このオブジェクトは、HTTPクライアント実装に対する&lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber&quot;&gt; &lt;code&gt;Flow.Subscriber&lt;/code&gt; &lt;/a&gt; &amp;lt; &lt;a href=&quot;../../../../java.base/java/util/list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; &amp;lt; &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer&quot;&gt; &lt;code&gt;ByteBuffer&lt;/code&gt; &lt;/a&gt; &amp;gt;&amp;gt;として機能し、応答本文を含むByteBufferのリストを公開します。データのフロー、およびフローリスト内のByteBufferの順序は、応答本文の厳密に順序付けられた表現です。リストとByteBufferは、サブスクライバーに渡されると、HTTPクライアントによって使用されなくなります。サブスクライバーは、データの着信バッファーを高レベルのJavaタイプ &lt;code&gt;T&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="ee52cc4a979dfa290de71fa0d59778b99e3b2595" translate="yes" xml:space="preserve">
          <source>The object at the top of this stack (the last item of the &lt;code&gt;Vector&lt;/code&gt; object).</source>
          <target state="translated">このスタックの一番上のオブジェクト（ &lt;code&gt;Vector&lt;/code&gt; オブジェクトの最後のアイテム）。</target>
        </trans-unit>
        <trans-unit id="94b3742377d13942b81c18e1127b983561a8c3d5" translate="yes" xml:space="preserve">
          <source>The object being edited</source>
          <target state="translated">編集対象のオブジェクト</target>
        </trans-unit>
        <trans-unit id="e3463f0dce6f74d0351102935f5ca5c5e97f8ec9" translate="yes" xml:space="preserve">
          <source>The object being observed.</source>
          <target state="translated">観察されている対象物。</target>
        </trans-unit>
        <trans-unit id="549576c93743bbc010ab0c4c1c93ac04bc78070c" translate="yes" xml:space="preserve">
          <source>The object bound; null if this binding does not contain an object.</source>
          <target state="translated">このバインディングにオブジェクトが含まれていない場合はnull。</target>
        </trans-unit>
        <trans-unit id="449d3598041a294afe3399942437e9f97f025dcf" translate="yes" xml:space="preserve">
          <source>The object contains some &lt;code&gt;Accessible&lt;/code&gt; information, but its role is not known.</source>
          <target state="translated">オブジェクトにはいくつかの &lt;code&gt;Accessible&lt;/code&gt; 情報が含まれていますが、その役割は不明です。</target>
        </trans-unit>
        <trans-unit id="ab8401c61b78ecc0ded2083081b9915784d7e095" translate="yes" xml:space="preserve">
          <source>The object created; null if an object cannot be created.</source>
          <target state="translated">作成されたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="25101b399f33f9945d69632115c3f921d4a373f9" translate="yes" xml:space="preserve">
          <source>The object currently attached to this key, or &lt;code&gt;null&lt;/code&gt; if there is no attachment</source>
          <target state="translated">現在このキーにアタッチされているオブジェクト、またはアタッチメントがない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83e78860e5f6b1711764595fee4d0cebd5f6dd80" translate="yes" xml:space="preserve">
          <source>The object factories tried must implement either &lt;code&gt;ObjectFactory&lt;/code&gt; or &lt;code&gt;DirObjectFactory&lt;/code&gt;. If it implements &lt;code&gt;DirObjectFactory&lt;/code&gt;, &lt;code&gt;DirObjectFactory.getObjectInstance()&lt;/code&gt; is used, otherwise, &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt; is used.</source>
          <target state="translated">試行されるオブジェクトファクトリは、 &lt;code&gt;ObjectFactory&lt;/code&gt; または &lt;code&gt;DirObjectFactory&lt;/code&gt; を実装する必要があります。 &lt;code&gt;DirObjectFactory&lt;/code&gt; を実装する場合は &lt;code&gt;DirObjectFactory.getObjectInstance()&lt;/code&gt; が使用され、それ以外の場合は &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="ab1ce82fc4930728131e5f5b4937333efd1a4cdb" translate="yes" xml:space="preserve">
          <source>The object identifier string, &quot;1.3.6.1.4.1.1466.20037&quot;.</source>
          <target state="translated">オブジェクト識別子文字列「1.3.6.1.4.1.1466.20037」。</target>
        </trans-unit>
        <trans-unit id="d1a4549046096f69268afef4b505824d9f29c7f1" translate="yes" xml:space="preserve">
          <source>The object implementing the &lt;code&gt;ModuleMXBean&lt;/code&gt; interface returns from its &lt;code&gt;getProduct&lt;/code&gt; method an object implementing the &lt;code&gt;ProductMXBean&lt;/code&gt; interface. The &lt;code&gt;ModuleMXBean&lt;/code&gt; object and the returned &lt;code&gt;
      ProductMXBean&lt;/code&gt; objects must both be registered as MXBeans in the same MBean Server.</source>
          <target state="translated">実装オブジェクト &lt;code&gt;ModuleMXBean&lt;/code&gt; それからインターフェース復帰 &lt;code&gt;getProduct&lt;/code&gt; の方法で実装するオブジェクト &lt;code&gt;ProductMXBean&lt;/code&gt; インタフェースを。 &lt;code&gt;ModuleMXBean&lt;/code&gt; オブジェクトと返さ &lt;code&gt; ProductMXBean&lt;/code&gt; 、同じMBean ServerのMXBeanとして登録され、両方の必須オブジェクト。</target>
        </trans-unit>
        <trans-unit id="d478c804036047e663cb169378cb0113711a662b" translate="yes" xml:space="preserve">
          <source>The object implementing the &lt;code&gt;ModuleMXBean&lt;/code&gt; interface returns from its &lt;code&gt;getProduct&lt;/code&gt; method an object implementing the &lt;code&gt;ProductMXBean&lt;/code&gt; interface. The &lt;code&gt;ModuleMXBean&lt;/code&gt; object and the returned &lt;code&gt;ProductMXBean&lt;/code&gt; objects must both be registered as MXBeans in the same MBean Server.</source>
          <target state="translated">実装オブジェクト &lt;code&gt;ModuleMXBean&lt;/code&gt; それからインターフェース復帰 &lt;code&gt;getProduct&lt;/code&gt; の方法で実装するオブジェクト &lt;code&gt;ProductMXBean&lt;/code&gt; インタフェースを。 &lt;code&gt;ModuleMXBean&lt;/code&gt; オブジェクトと返さ &lt;code&gt;ProductMXBean&lt;/code&gt; 、同じMBean ServerのMXBeanとして登録され、両方の必須オブジェクト。</target>
        </trans-unit>
        <trans-unit id="3dd2f9f197debe54b55c044ebc8513127ed88c2f" translate="yes" xml:space="preserve">
          <source>The object implements the readExternal method to restore its contents by calling the methods of DataInput for primitive types and readObject for objects, strings and arrays.</source>
          <target state="translated">このオブジェクトは、プリミティブ型の場合は DataInput のメソッドを、オブジェクト、文字列、配列の場合は readObject のメソッドを呼び出して内容を復元する readExternal メソッドを実装しています。</target>
        </trans-unit>
        <trans-unit id="acbe0492ed2a56ae25a5b225e810323a17ee9567" translate="yes" xml:space="preserve">
          <source>The object implements the readExternal method to restore its contents by calling the methods of DataInput for primitive types and readObject for objects, strings and arrays. The readExternal method must read the values in the same sequence and with the same types as were written by writeExternal.</source>
          <target state="translated">オブジェクトは、プリミティブ型の場合はDataInput、オブジェクト、文字列、配列の場合はreadObjectのメソッドを呼び出して内容を復元するreadExternalメソッドを実装しています。readExternal メソッドは、writeExternal によって書き込まれたものと同じ順序で、同じ型で値を読み込む必要があります。</target>
        </trans-unit>
        <trans-unit id="c660c0ad9f3d328f1f20a48dcdf28911ebb8dafe" translate="yes" xml:space="preserve">
          <source>The object implements the writeExternal method to save its contents by calling the methods of DataOutput for its primitive values or calling the writeObject method of ObjectOutput for objects, strings, and arrays.</source>
          <target state="translated">オブジェクトは、そのプリミティブ値については DataOutput のメソッドを呼び出したり、オブジェクト、文字列、および配列については ObjectOutput の writeObject メソッドを呼び出したりして内容を保存する writeExternal メソッドを実装しています。</target>
        </trans-unit>
        <trans-unit id="49b3c7a825f5c8fce74e67a564c0c3afebb0bbd2" translate="yes" xml:space="preserve">
          <source>The object is converted to a &lt;code&gt;String&lt;/code&gt; by calling its &lt;code&gt;toString&lt;/code&gt; method. The result is wrapped in a &lt;code&gt;JLabel&lt;/code&gt; and displayed.</source>
          <target state="translated">オブジェクトは、 &lt;code&gt;toString&lt;/code&gt; メソッドを呼び出すことによって &lt;code&gt;String&lt;/code&gt; 変換されます。結果は &lt;code&gt;JLabel&lt;/code&gt; にラップされ、表示されます。</target>
        </trans-unit>
        <trans-unit id="416c57a91832721c9f5aceb6449ffd3e9e13e27e" translate="yes" xml:space="preserve">
          <source>The object is exported with a server socket created using the &lt;a href=&quot;rmisocketfactory&quot;&gt;&lt;code&gt;RMISocketFactory&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">オブジェクトは、&lt;a href=&quot;rmisocketfactory&quot;&gt; &lt;code&gt;RMISocketFactory&lt;/code&gt; &lt;/a&gt;クラスを使用して作成されたサーバーソケットとともにエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="803c0a9c70ce150a1fdc3f8dcd7dcababb9b43c4" translate="yes" xml:space="preserve">
          <source>The object name for identifying the MXBean in the platform MBean server is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b36518730fd2c13f206fa344da4fbf71908e2b" translate="yes" xml:space="preserve">
          <source>The object name is written using the usual syntax for &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt;. It may contain any legal characters, including &lt;code&gt;]&lt;/code&gt;. It is terminated by a &lt;code&gt;]&lt;/code&gt; character that is the last character in the string.</source>
          <target state="translated">オブジェクト名は、&lt;a href=&quot;objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; の&lt;/a&gt;通常の構文を使用して記述されます。 &lt;code&gt;]&lt;/code&gt; などの有効な文字を含めることができます。文字列の最後の文字である &lt;code&gt;]&lt;/code&gt; 文字で終了します。</target>
        </trans-unit>
        <trans-unit id="fcd8b487cf6c43869dd95c8f0bff1303f6f407e8" translate="yes" xml:space="preserve">
          <source>The object on which the Event initially occurred.</source>
          <target state="translated">イベントが最初に発生したオブジェクト。</target>
        </trans-unit>
        <trans-unit id="a1808bbdd8fe581c5b3453a2a271ffb2f9d6c722" translate="yes" xml:space="preserve">
          <source>The object reference returned from &lt;code&gt;Transferable.getTransferData&lt;/code&gt; for a &lt;code&gt;DataFlavor&lt;/code&gt; with this MIME Content-Type is required to be an instance of the representation Class of the &lt;code&gt;DataFlavor&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;DataFlavor&lt;/code&gt; -Typeを持つDataFlavorの &lt;code&gt;Transferable.getTransferData&lt;/code&gt; から返されるオブジェクト参照は、DataFlavorの表現クラスのインスタンスである必要があり &lt;code&gt;DataFlavor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81130672cbc8ff967d42b441aaca30a9b8bdf723" translate="yes" xml:space="preserve">
          <source>The object returned by the action, which represents the result of invoking the action on the MBean specified.</source>
          <target state="translated">指定された MBean に対してアクションを実行した結果を表す、アクションによって返されるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="36afb72a7b72fb42fa69bd024e797eb65658034c" translate="yes" xml:space="preserve">
          <source>The object returned by the method, which represents the result of invoking the method on the specified managed resource.</source>
          <target state="translated">メソッドが返すオブジェクトで、指定された管理されたリソース上でメソッドを呼び出した結果を表します。</target>
        </trans-unit>
        <trans-unit id="4aed1f261990252b69271a77a6e7502c08d201c0" translate="yes" xml:space="preserve">
          <source>The object returned by the operation, which represents the result of invoking the operation on the MBean specified.</source>
          <target state="translated">指定された MBean に対して操作を行った結果を表すオブジェクト。</target>
        </trans-unit>
        <trans-unit id="6c93f62d51e3b2cfddc806818f63e0d7ad31bfac" translate="yes" xml:space="preserve">
          <source>The object returned by this method is a &lt;a href=&quot;../../../java.base/java/lang/reflect/proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; whose &lt;code&gt;InvocationHandler&lt;/code&gt; is an &lt;a href=&quot;mbeanserverinvocationhandler&quot;&gt;&lt;code&gt;MBeanServerInvocationHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返されるオブジェクトは、 &lt;code&gt;InvocationHandler&lt;/code&gt; が&lt;a href=&quot;mbeanserverinvocationhandler&quot;&gt; &lt;code&gt;MBeanServerInvocationHandler&lt;/code&gt; &lt;/a&gt;である&lt;a href=&quot;../../../java.base/java/lang/reflect/proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="19c49d417b2958f22cd9e8d59294bafdefc26984" translate="yes" xml:space="preserve">
          <source>The object returned by this method is a &lt;a href=&quot;../../java/lang/reflect/proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; whose &lt;code&gt;InvocationHandler&lt;/code&gt; is an &lt;a href=&quot;mbeanserverinvocationhandler&quot;&gt;&lt;code&gt;MBeanServerInvocationHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返されるオブジェクトは、 &lt;code&gt;InvocationHandler&lt;/code&gt; が&lt;a href=&quot;mbeanserverinvocationhandler&quot;&gt; &lt;code&gt;MBeanServerInvocationHandler&lt;/code&gt; &lt;/a&gt;である&lt;a href=&quot;../../java/lang/reflect/proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="2fd75977ed6de60086bb423f950b0a7c4c202381" translate="yes" xml:space="preserve">
          <source>The object returned by this method is owned by the caller. The implementation will not subsequently modify it. It will contain either a new &lt;code&gt;Attributes&lt;/code&gt; object that is likewise owned by the caller, or a reference to the original &lt;code&gt;attrs&lt;/code&gt; parameter.</source>
          <target state="translated">このメソッドによって返されるオブジェクトは、呼び出し元が所有しています。その後、実装はそれを変更しません。同様に、呼び出し元が所有する新しい &lt;code&gt;Attributes&lt;/code&gt; オブジェクト、または元の &lt;code&gt;attrs&lt;/code&gt; パラメータへの参照が含まれます。</target>
        </trans-unit>
        <trans-unit id="de60c4905cdacdd6d8601ccdfcd944817e444f9d" translate="yes" xml:space="preserve">
          <source>The object that holds the data for the progress bar.</source>
          <target state="translated">プログレスバーのデータを保持するオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="592ac681baf8df60b8a9b00bdcd506d4334a9175" translate="yes" xml:space="preserve">
          <source>The object that implements the &lt;code&gt;ActionListener&lt;/code&gt; interface gets this &lt;code&gt;ActionEvent&lt;/code&gt; when the event occurs. The listener is therefore spared the details of processing individual mouse movements and mouse clicks, and can instead process a &quot;meaningful&quot; (semantic) event like &quot;button pressed&quot;.</source>
          <target state="translated">&lt;code&gt;ActionListener&lt;/code&gt; インターフェースを実装するオブジェクトは、イベントが発生したときにこの &lt;code&gt;ActionEvent&lt;/code&gt; を取得します。したがって、リスナーは、個々のマウスの動きとマウスのクリックの処理の詳細を省き、代わりに「ボタンが押された」などの「意味のある」（セマンティック）イベントを処理できます。</target>
        </trans-unit>
        <trans-unit id="378268adb2f0c5ea9f44ef1d220ef0a45f3c5690" translate="yes" xml:space="preserve">
          <source>The object that implements the &lt;code&gt;ItemListener&lt;/code&gt; interface gets this &lt;code&gt;ItemEvent&lt;/code&gt; when the event occurs. The listener is spared the details of processing individual mouse movements and mouse clicks, and can instead process a &quot;meaningful&quot; (semantic) event like &quot;item selected&quot; or &quot;item deselected&quot;.</source>
          <target state="translated">&lt;code&gt;ItemListener&lt;/code&gt; インターフェースを実装するオブジェクトは、イベントが発生したときにこの &lt;code&gt;ItemEvent&lt;/code&gt; を取得します。リスナーは、個々のマウスの動きとマウスのクリックの処理の詳細を省き、代わりに「アイテムが選択されました」や「アイテムが選択解除された」などの「意味のある」（セマンティック）イベントを処理できます。</target>
        </trans-unit>
        <trans-unit id="722913fb70b4d355c5461a06c046ff754baedd55" translate="yes" xml:space="preserve">
          <source>The object that implements the &lt;code&gt;TextListener&lt;/code&gt; interface gets this &lt;code&gt;TextEvent&lt;/code&gt; when the event occurs. The listener is spared the details of processing individual mouse movements and key strokes Instead, it can process a &quot;meaningful&quot; (semantic) event like &quot;text changed&quot;.</source>
          <target state="translated">&lt;code&gt;TextListener&lt;/code&gt; インターフェースを実装するオブジェクトは、イベントが発生したときにこの &lt;code&gt;TextEvent&lt;/code&gt; を取得します。リスナーは、個々のマウスの動きやキーストロークの処理の詳細を省くことができます。代わりに、「テキストが変更されました」などの「意味のある」（セマンティック）イベントを処理できます。</target>
        </trans-unit>
        <trans-unit id="3a04190473c4b64ec143351918e9e15b033c0e14" translate="yes" xml:space="preserve">
          <source>The object that will generate the parameters can be initialized in two different ways: in an algorithm-independent manner, or in an algorithm-specific manner:</source>
          <target state="translated">パラメータを生成するオブジェクトは、アルゴリズムに依存しない方法で初期化するか、アルゴリズム固有の方法で初期化するかの2つの方法で初期化することができます。</target>
        </trans-unit>
        <trans-unit id="e0bfa8896361883de50652f049a3abf89fa5b629" translate="yes" xml:space="preserve">
          <source>The object to which this reference refers, or &lt;code&gt;null&lt;/code&gt; if this reference object has been cleared</source>
          <target state="translated">この参照が参照するオブジェクト、またはこの参照オブジェクトがクリアされている場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="479e4c581de3dc9c3988355f57b5a21b657c8262" translate="yes" xml:space="preserve">
          <source>The object upon which the thread is blocked due to:</source>
          <target state="translated">スレッドがブロックされているオブジェクト。</target>
        </trans-unit>
        <trans-unit id="59e05639dc4486cdfe5ff6a8dce8bd4e58ea0a79" translate="yes" xml:space="preserve">
          <source>The object used for executing a static SQL statement and returning the results it produces.</source>
          <target state="translated">静的なSQL文を実行し、その結果を返すために使用されるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="972046ff7e08954078fcad07463a0ebbf2c0d1a7" translate="yes" xml:space="preserve">
          <source>The object used to represent the &lt;code&gt;TH&lt;/code&gt; and &lt;code&gt;TD&lt;/code&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee621353b81778427a3f1b8c0393e308ca6d4b9" translate="yes" xml:space="preserve">
          <source>The object used to represent the &lt;code&gt;TH&lt;/code&gt; and &lt;code&gt;TD&lt;/code&gt; elements. See the TD element definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7b9c42317e2e24d3b3dab9ab7fe4afbf8756cb" translate="yes" xml:space="preserve">
          <source>The object used to synchronize operations on this stream.</source>
          <target state="translated">このストリームの操作を同期させるために使用されるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="47d5085633f8d27160804ec39a21ef33e1d60c26" translate="yes" xml:space="preserve">
          <source>The object used to synchronize operations on this stream. For efficiency, a character-stream object may use an object other than itself to protect critical sections. A subclass should therefore use the object in this field rather than &lt;code&gt;this&lt;/code&gt; or a synchronized method.</source>
          <target state="translated">このストリームの操作を同期するために使用されるオブジェクト。効率を上げるために、文字ストリームオブジェクトはそれ自体以外のオブジェクトを使用してクリティカルセクションを保護する場合があります。サブクラスは、従ってよりもむしろ、このフィールド内のオブジェクトを使用する必要があり &lt;code&gt;this&lt;/code&gt; 又は同期方法。</target>
        </trans-unit>
        <trans-unit id="c7cc5f2db4bc998308c976129ab12d35d38dc95c" translate="yes" xml:space="preserve">
          <source>The object's remote reference.</source>
          <target state="translated">オブジェクトのリモート参照。</target>
        </trans-unit>
        <trans-unit id="a07b833139a6ad3c188a63203fee507e5dfad4ab" translate="yes" xml:space="preserve">
          <source>The object's state for binding; null if the factory is not returning any changes.</source>
          <target state="translated">ファクトリーが変更を返さない場合はNULL。</target>
        </trans-unit>
        <trans-unit id="66b636c530e62514647286e66dec68718239aedb" translate="yes" xml:space="preserve">
          <source>The object, null if the object has not been seen before.</source>
          <target state="translated">オブジェクト、以前に見たことがない場合はnull。</target>
        </trans-unit>
        <trans-unit id="4b2eb00905a91560fe1394f171982be773d4da7b" translate="yes" xml:space="preserve">
          <source>The objects being observed.</source>
          <target state="translated">観察されている対象物。</target>
        </trans-unit>
        <trans-unit id="31a9cc545d293e2f13a000cd7cec43d84ee2b3fc" translate="yes" xml:space="preserve">
          <source>The objects of the classes implementing &lt;code&gt;Stroke&lt;/code&gt; must be read-only because &lt;code&gt;Graphics2D&lt;/code&gt; does not clone these objects either when they are set as an attribute with the &lt;code&gt;setStroke&lt;/code&gt; method or when the &lt;code&gt;Graphics2D&lt;/code&gt; object is itself cloned. If a &lt;code&gt;Stroke&lt;/code&gt; object is modified after it is set in the &lt;code&gt;Graphics2D&lt;/code&gt; context then the behavior of subsequent rendering would be undefined.</source>
          <target state="translated">実装するクラスのオブジェクト &lt;code&gt;Stroke&lt;/code&gt; 読み取り専用にしなければならないため &lt;code&gt;Graphics2D&lt;/code&gt; これらのオブジェクトを複製しないか、それらが持つ属性として設定されている場合 &lt;code&gt;setStroke&lt;/code&gt; メソッドのメソッドまたはとき &lt;code&gt;Graphics2D&lt;/code&gt; オブジェクト自体が複製されます。 &lt;code&gt;Graphics2D&lt;/code&gt; コンテキストで設定された後に &lt;code&gt;Stroke&lt;/code&gt; オブジェクトが変更された場合、後続のレンダリングの動作は未定義になります。</target>
        </trans-unit>
        <trans-unit id="c6a36576b202e3f5841ae4674e3a1e6bfeff7ce9" translate="yes" xml:space="preserve">
          <source>The objects that this factory produces will be based on DOM and abide by the DOM interoperability requirements as defined in the &lt;a href=&quot;../package-summary#dom_req&quot;&gt;DOM Mechanism Requirements&lt;/a&gt;. See the &lt;code&gt;KeyInfoFactory&lt;/code&gt; section in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/security/standard-names.html#xml-signature-xmlsignaturefactorykeyinfofactorytransformservice-mechanisms&quot;&gt; Java Security Standard Algorithm Names Specification&lt;/a&gt; for a list of standard mechanism types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe728976b073c45bf744821ca6ba80ce51a0da6" translate="yes" xml:space="preserve">
          <source>The objects that this factory produces will be based on DOM and abide by the DOM interoperability requirements as defined in the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_xmldsig_rqmts&quot;&gt;DOM Mechanism Requirements&lt;/a&gt; section of the API overview. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#xml-signature-xmlsignaturefactorykeyinfofactorytransformservice-mechanisms&quot;&gt; Java Security Standard Algorithm Names&lt;/a&gt; document for more information.</source>
          <target state="translated">このファクトリが生成するオブジェクトはDOMに基づいており、API概要の「&lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_xmldsig_rqmts&quot;&gt;DOMメカニズム要件」&lt;/a&gt;セクションで定義されているDOM相互運用性要件を順守します。詳細については、&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#xml-signature-xmlsignaturefactorykeyinfofactorytransformservice-mechanisms&quot;&gt;Javaセキュリティ標準アルゴリズム名の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1d122f0c0cc63ee07c0c1d3a3a38f8a6e6ad5a6b" translate="yes" xml:space="preserve">
          <source>The objects that this factory produces will be based on DOM and abide by the DOM interoperability requirements as defined in the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_xmldsig_rqmts&quot;&gt;DOM Mechanism Requirements&lt;/a&gt; section of the API overview. See the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_xmldsig_provider&quot;&gt;Service Providers&lt;/a&gt; section of the API overview for a list of standard mechanism types.</source>
          <target state="translated">このファクトリが生成するオブジェクトはDOMに基づいており、API概要の「&lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_xmldsig_rqmts&quot;&gt;DOMメカニズム要件」&lt;/a&gt;セクションで定義されているDOM相互運用性要件を順守します。標準のメカニズムタイプのリストについては、APIの概要の「&lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_xmldsig_provider&quot;&gt;サービスプロバイダー」&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="ef9527d4f8b103acbd8f0c5c4ab283344d88a9c1" translate="yes" xml:space="preserve">
          <source>The objects that this factory produces will be based on DOM and abide by the DOM interoperability requirements as defined in the &lt;a href=&quot;package-summary#dom_req&quot;&gt;DOM Mechanism Requirements&lt;/a&gt;. See the &lt;code&gt;XMLSignatureFactory&lt;/code&gt; section in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/security/standard-names.html#xml-signature-xmlsignaturefactorykeyinfofactorytransformservice-mechanisms&quot;&gt; Java Security Standard Algorithm Names Specification&lt;/a&gt; for a list of standard mechanism types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429abc75cd4f81d9b58c4ca6b602d61ef39ec33b" translate="yes" xml:space="preserve">
          <source>The observed attribute has differed from the &quot;string to compare&quot; value.</source>
          <target state="translated">観測された属性は、「比較する文字列」の値とは異なります。</target>
        </trans-unit>
        <trans-unit id="871c7770e55cdc1bbf71029ab54209655d703ea8" translate="yes" xml:space="preserve">
          <source>The observed attribute has exceeded the threshold high value.</source>
          <target state="translated">観測された属性が閾値の高い値を超えた。</target>
        </trans-unit>
        <trans-unit id="672d698adf676e55830651a3e0dd447d91d839f5" translate="yes" xml:space="preserve">
          <source>The observed attribute has exceeded the threshold low value.</source>
          <target state="translated">観測された属性が閾値の低い値を超えた。</target>
        </trans-unit>
        <trans-unit id="999e98019d02c1e1a5253c17913dd0ced4ce971f" translate="yes" xml:space="preserve">
          <source>The observed attribute has matched the &quot;string to compare&quot; value.</source>
          <target state="translated">観測された属性が「比較対象の文字列」の値と一致しました。</target>
        </trans-unit>
        <trans-unit id="46421981f801d958da0b6eee8f1acb3f27c41fd9" translate="yes" xml:space="preserve">
          <source>The observed attribute has reached the threshold value.</source>
          <target state="translated">観測された属性が閾値に達した。</target>
        </trans-unit>
        <trans-unit id="fca6efcbf0300595dc90421a5999ce724786f218" translate="yes" xml:space="preserve">
          <source>The observed attribute is not contained in the observed object.</source>
          <target state="translated">観測された属性が観測対象に含まれていない。</target>
        </trans-unit>
        <trans-unit id="7a495e45796ee85b6f7b4712f3dc6b44dbd9667b" translate="yes" xml:space="preserve">
          <source>The observed attribute is not initialized by default (set to null).</source>
          <target state="translated">観測された属性はデフォルトでは初期化されていません(nullに設定されています)。</target>
        </trans-unit>
        <trans-unit id="01626b79ebba8880f72349668f94f078b89c13bd" translate="yes" xml:space="preserve">
          <source>The observed attribute.</source>
          <target state="translated">観測された属性。</target>
        </trans-unit>
        <trans-unit id="0a9f956d167d7d6dbfd3e8ba63d5548489a146e8" translate="yes" xml:space="preserve">
          <source>The observed object is not registered in the MBean server.</source>
          <target state="translated">観測されたオブジェクトが MBean サーバに登録されていません。</target>
        </trans-unit>
        <trans-unit id="416b7e765f8103a9eb70b7e15edec19bb2ecc0e9" translate="yes" xml:space="preserve">
          <source>The observed object.</source>
          <target state="translated">観測された物体。</target>
        </trans-unit>
        <trans-unit id="45dc8c9c6ea7bb9a99fef1fccbc3548f32fa1a9e" translate="yes" xml:space="preserve">
          <source>The obtained &lt;a href=&quot;typeinfoprovider&quot;&gt;&lt;code&gt;TypeInfoProvider&lt;/code&gt;&lt;/a&gt; can be queried during a parse to access the type information determined by the validator.</source>
          <target state="translated">取得した&lt;a href=&quot;typeinfoprovider&quot;&gt; &lt;code&gt;TypeInfoProvider&lt;/code&gt; &lt;/a&gt;は、解析中にクエリを実行して、バリデーターによって決定されたタイプ情報にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="57e624d8b36b41f9dc5b92485a65e92541347bbe" translate="yes" xml:space="preserve">
          <source>The official ISO-8601 standard does not define eras, however &lt;code&gt;IsoChronology&lt;/code&gt; does. It defines two eras, 'CE' from year one onwards and 'BCE' from year zero backwards. Since dates before the Julian-Gregorian cutover are not in line with history, the cutover between 'BCE' and 'CE' is also not aligned with the commonly used eras, often referred to using 'BC' and 'AD'.</source>
          <target state="translated">公式のISO-8601規格は時代を定義していませんが、 &lt;code&gt;IsoChronology&lt;/code&gt; は定義しています。これは、1年目以降の「CE」とゼロ年以降の「BCE」の2つの時代を定義しています。ジュリアン-グレゴリアンカットオーバーの前の日付は履歴と一致していないため、「BCE」と「CE」の間のカットオーバーも一般に使用される時代と一致していません。</target>
        </trans-unit>
        <trans-unit id="702e5e5fb4fee8a147a291965da3b8b686cd784a" translate="yes" xml:space="preserve">
          <source>The official XML Namespace name URI.</source>
          <target state="translated">正式なXML名前空間名のURI。</target>
        </trans-unit>
        <trans-unit id="ffab6be2401ae307b4e44045f56125a67011b1bb" translate="yes" xml:space="preserve">
          <source>The official XML Namespace prefix.</source>
          <target state="translated">公式の XML 名前空間接頭辞。</target>
        </trans-unit>
        <trans-unit id="a4a7af578f6f669ed14b4164a2625019a1a64582" translate="yes" xml:space="preserve">
          <source>The official XML attribute used for specifying XML Namespace declarations, &lt;a href=&quot;#XMLNS_ATTRIBUTE&quot;&gt;&lt;code&gt;XMLConstants.XMLNS_ATTRIBUTE&lt;/code&gt;&lt;/a&gt;, Namespace name URI.</source>
          <target state="translated">XML名前空間宣言を指定するために使用される公式のXML属性、&lt;a href=&quot;#XMLNS_ATTRIBUTE&quot;&gt; &lt;code&gt;XMLConstants.XMLNS_ATTRIBUTE&lt;/code&gt; &lt;/a&gt;、名前空間名URI。</target>
        </trans-unit>
        <trans-unit id="7c5ea6d3db745c887e7f367926242e325c40c6a6" translate="yes" xml:space="preserve">
          <source>The official XML attribute used for specifying XML Namespace declarations.</source>
          <target state="translated">XML名前空間宣言を指定するために使用される公式のXML属性。</target>
        </trans-unit>
        <trans-unit id="9aa0cbb0971f94ec243f04bed4069fee72927eed" translate="yes" xml:space="preserve">
          <source>The offset</source>
          <target state="translated">オフセット</target>
        </trans-unit>
        <trans-unit id="7452b72544afe4ea17383b9c1a0ddd335f187953" translate="yes" xml:space="preserve">
          <source>The offset after the last character captured by the group, or &lt;code&gt;-1&lt;/code&gt; if the match was successful but the group itself did not match anything</source>
          <target state="translated">グループによってキャプチャされた最後の文字の後のオフセット。一致は成功したがグループ自体が何にも一致しなかった場合は &lt;code&gt;-1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6a514a96e4c706169df1bae50ab993a34ff2649" translate="yes" xml:space="preserve">
          <source>The offset after the last character matched</source>
          <target state="translated">最後にマッチした文字の後のオフセット</target>
        </trans-unit>
        <trans-unit id="95184cd7d4878804e4744550fed5412ac87a781a" translate="yes" xml:space="preserve">
          <source>The offset does not affect the calculation and will be the same in the result.</source>
          <target state="translated">オフセットは計算に影響を与えず、結果も同じになります。</target>
        </trans-unit>
        <trans-unit id="8d0ea8f68c9762891010ddff46c446503f293682" translate="yes" xml:space="preserve">
          <source>The offset from UTC/Greenwich.</source>
          <target state="translated">UTC/グリニッジからのオフセット。</target>
        </trans-unit>
        <trans-unit id="187e2b59cf9b7d7beab7161e59a7d3c2b6d648e0" translate="yes" xml:space="preserve">
          <source>The offset in the destination where the upper-left decoded pixel should be placed.</source>
          <target state="translated">左上のデコードされたピクセルが配置されるべき宛先内のオフセット。</target>
        </trans-unit>
        <trans-unit id="f5e45443bbef26f421b83a68935e17782face615" translate="yes" xml:space="preserve">
          <source>The offset in the destination where the upper-left decoded pixel should be placed. By default, the value is (0, 0).</source>
          <target state="translated">左上のデコードされたピクセルが配置されるべき宛先内のオフセット。デフォルトでは、値は (0,0)です。</target>
        </trans-unit>
        <trans-unit id="bcad531c02ce778e413b93f44d2a73d86d13c97e" translate="yes" xml:space="preserve">
          <source>The offset must be in the range &lt;code&gt;-18:00&lt;/code&gt; to &lt;code&gt;+18:00&lt;/code&gt;, which corresponds to -64800 to +64800.</source>
          <target state="translated">オフセットは &lt;code&gt;-18:00&lt;/code&gt; から &lt;code&gt;+18:00&lt;/code&gt; の範囲でなければなりません。これは-64800から+64800に対応します。</target>
        </trans-unit>
        <trans-unit id="1779234f1100c3b7e70e689137679a16d92bfee0" translate="yes" xml:space="preserve">
          <source>The offset of the caret is relative to the current composed text; that is, the composed text within getText() if this is an &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; event, the composed text within getText() of the preceding &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; event otherwise.</source>
          <target state="translated">キャレットのオフセットは、現在作成されているテキストを基準にしています。つまり、これが &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; イベントの場合はgetText（）内の合成テキスト、それ以外の場合は先行する &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; イベントのgetText（）内の合成テキストです。</target>
        </trans-unit>
        <trans-unit id="298942ecb904f06c2e9ab9e10fc0a7a6f6c5d93f" translate="yes" xml:space="preserve">
          <source>The offset of the divider.</source>
          <target state="translated">ディバイダのオフセット。</target>
        </trans-unit>
        <trans-unit id="bc4e0b22e164423e697bcbfa93e4a52b80e4ded8" translate="yes" xml:space="preserve">
          <source>The offset of the visible position is relative to the current composed text; that is, the composed text within getText() if this is an &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; event, the composed text within getText() of the preceding &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; event otherwise.</source>
          <target state="translated">表示位置のオフセットは、現在作成されているテキストを基準にしています。つまり、これが &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; イベントの場合はgetText（）内の合成テキスト、それ以外の場合は先行する &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; イベントのgetText（）内の合成テキストです。</target>
        </trans-unit>
        <trans-unit id="dbff04852ae6dc7f91ef52e4416eeb9c4bdba3f8" translate="yes" xml:space="preserve">
          <source>The offset value.</source>
          <target state="translated">オフセット値。</target>
        </trans-unit>
        <trans-unit id="1ee05bd1235e40acbee8bde4cc93361e017df6f0" translate="yes" xml:space="preserve">
          <source>The offset within this buffer's array of the first element of the buffer</source>
          <target state="translated">このバッファの配列内での、バッファの最初の要素のオフセット。</target>
        </trans-unit>
        <trans-unit id="fe8294ba666d8dd39741a182a81b1fec80b75498" translate="yes" xml:space="preserve">
          <source>The offset, in bits, of the layout selected by the layout path in &lt;code&gt;elements&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c97a082dbdaef80700756fbcab43cc75fe82149" translate="yes" xml:space="preserve">
          <source>The offset, in bytes, of the layout selected by the layout path in &lt;code&gt;elements&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f54cdf947745f8f0b6ab00403e70f969ef9fcc" translate="yes" xml:space="preserve">
          <source>The offset-based date-time types &lt;code&gt;OffsetTime&lt;/code&gt; and &lt;code&gt;OffsetDateTime&lt;/code&gt;, are intended primarily for use with network protocols and database access. For example, most databases cannot automatically store a time-zone like 'Europe/Paris', but they can store an offset like '+02:00'.</source>
          <target state="translated">オフセットベースの日時タイプ &lt;code&gt;OffsetTime&lt;/code&gt; および &lt;code&gt;OffsetDateTime&lt;/code&gt; は、主にネットワークプロトコルおよびデータベースアクセスでの使用を目的としています。たとえば、ほとんどのデータベースは「ヨーロッパ/パリ」のようなタイムゾーンを自動的に保存できませんが、「+ 02:00」のようなオフセットを保存できます。</target>
        </trans-unit>
        <trans-unit id="118a1e86d2011a80aabb35687d2f8db1fc48e418" translate="yes" xml:space="preserve">
          <source>The offsets are compared in the order that they occur for the same time of day around the world. Thus, an offset of &lt;code&gt;+10:00&lt;/code&gt; comes before an offset of &lt;code&gt;+09:00&lt;/code&gt; and so on down to &lt;code&gt;-18:00&lt;/code&gt;.</source>
          <target state="translated">オフセットは、世界中で同じ時刻に発生する順序で比較されます。したがって、 &lt;code&gt;+10:00&lt;/code&gt; のオフセットは &lt;code&gt;+09:00&lt;/code&gt; のオフセットの前に来て、 &lt;code&gt;-18:00&lt;/code&gt; まで続きます。</target>
        </trans-unit>
        <trans-unit id="b9fdfa406d3d4cfc6d0cc44eef8e628beb67c6ec" translate="yes" xml:space="preserve">
          <source>The offsets of &lt;code&gt;caret&lt;/code&gt; and &lt;code&gt;visiblePosition&lt;/code&gt; are relative to the current composed text; that is, the composed text within the &lt;code&gt;text&lt;/code&gt; of the preceding &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; event if the event being constructed as a &lt;code&gt;CARET_POSITION_CHANGED&lt;/code&gt; event. For an &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; event without text, &lt;code&gt;caret&lt;/code&gt; and &lt;code&gt;visiblePosition&lt;/code&gt; must be &lt;code&gt;null&lt;/code&gt;. The time stamp for this event is initialized by invoking &lt;a href=&quot;../eventqueue#getMostRecentEventTime()&quot;&gt;&lt;code&gt;EventQueue.getMostRecentEventTime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;caret&lt;/code&gt; と &lt;code&gt;visiblePosition&lt;/code&gt; のオフセットは、現在作成されているテキストを基準にしています。すなわち、内構成されるテキスト &lt;code&gt;text&lt;/code&gt; 先行する &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; イベントのイベントは次のように構成されている場合 &lt;code&gt;CARET_POSITION_CHANGED&lt;/code&gt; イベント。 &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; テキストなしイベント、 &lt;code&gt;caret&lt;/code&gt; と &lt;code&gt;visiblePosition&lt;/code&gt; をがでなければならない &lt;code&gt;null&lt;/code&gt; 。このイベントのタイムスタンプは、&lt;a href=&quot;../eventqueue#getMostRecentEventTime()&quot;&gt; &lt;code&gt;EventQueue.getMostRecentEventTime()&lt;/code&gt; &lt;/a&gt;を呼び出すことによって初期化されます。</target>
        </trans-unit>
        <trans-unit id="9615764801bc7f0118b08c3cedefd1d207963ebd" translate="yes" xml:space="preserve">
          <source>The offsets of caret and visiblePosition are relative to the current composed text; that is, the composed text within &lt;code&gt;text&lt;/code&gt; if this is an &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; event, the composed text within the &lt;code&gt;text&lt;/code&gt; of the preceding &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; event otherwise.</source>
          <target state="translated">キャレットとvisiblePositionのオフセットは、現在作成されているテキストを基準にしています。すなわち、内構成されるテキスト &lt;code&gt;text&lt;/code&gt; これがある場合 &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; イベント、内構成されるテキスト &lt;code&gt;text&lt;/code&gt; 先行の &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; さもなければイベント。</target>
        </trans-unit>
        <trans-unit id="e3efed3cce04acecd68237e471d78f4ab8c10742" translate="yes" xml:space="preserve">
          <source>The offsets of caret and visiblePosition are relative to the current composed text; that is, the composed text within &lt;code&gt;text&lt;/code&gt; if this is an &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; event, the composed text within the &lt;code&gt;text&lt;/code&gt; of the preceding &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; event otherwise. The time stamp for this event is initialized by invoking &lt;a href=&quot;../eventqueue#getMostRecentEventTime()&quot;&gt;&lt;code&gt;EventQueue.getMostRecentEventTime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">キャレットとvisiblePositionのオフセットは、現在作成されているテキストを基準にしています。すなわち、内構成されるテキスト &lt;code&gt;text&lt;/code&gt; これがある場合 &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; イベント、内構成されるテキスト &lt;code&gt;text&lt;/code&gt; 先行の &lt;code&gt;INPUT_METHOD_TEXT_CHANGED&lt;/code&gt; さもなければイベント。このイベントのタイムスタンプは、&lt;a href=&quot;../eventqueue#getMostRecentEventTime()&quot;&gt; &lt;code&gt;EventQueue.getMostRecentEventTime()&lt;/code&gt; &lt;/a&gt;を呼び出すことによって初期化されます。</target>
        </trans-unit>
        <trans-unit id="e102309a5333ab2237cebc7d402fc7f4a95ad222" translate="yes" xml:space="preserve">
          <source>The old binding: information about the object before the change.</source>
          <target state="translated">古いバインディング:変更前のオブジェクトに関する情報。</target>
        </trans-unit>
        <trans-unit id="d5f61ec25f174a0aa0e3e129763ffbe8890fd5d4" translate="yes" xml:space="preserve">
          <source>The old modifiers</source>
          <target state="translated">古い修飾子</target>
        </trans-unit>
        <trans-unit id="d09e0e17113c933353bdc17d7b91ac2797ae7090" translate="yes" xml:space="preserve">
          <source>The old modifiers listed below also can be used, but they are mapped to _DOWN_ modifiers.</source>
          <target state="translated">以下の古いモディファイアも使用できますが、_DOWN_モディファイアにマッピングされています。</target>
        </trans-unit>
        <trans-unit id="eaa830de2cd1ee40ef0e64424b6658b54dfedf50" translate="yes" xml:space="preserve">
          <source>The old value for the property, expressed as an Object. May be null if multiple properties have changed.</source>
          <target state="translated">プロパティの古い値を Object で表します。複数のプロパティが変更されている場合は null になることがあります。</target>
        </trans-unit>
        <trans-unit id="b8804e2adfeaa4e67e196991549e2b345ab8e8bf" translate="yes" xml:space="preserve">
          <source>The old/new binding in &lt;code&gt;NamingEvent&lt;/code&gt; may be null if the old name or new name is outside of the scope for which the listener has registered.</source>
          <target state="translated">古い名前または新しい名前がリスナーが登録されているスコープの外にある場合、 &lt;code&gt;NamingEvent&lt;/code&gt; の古い/新しいバインディングはnullになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="100741ba84acd0a7c97819d3b1fe9d00db066275" translate="yes" xml:space="preserve">
          <source>The one exception to this is a treeNodesChanged event that is to identify the root, in which case this will return the root and &lt;code&gt;getChildIndices&lt;/code&gt; will return null.</source>
          <target state="translated">これに対する1つの例外は、ルートを識別することであるtreeNodesChangedイベントです。この場合、これはルートを返し、 &lt;code&gt;getChildIndices&lt;/code&gt; はnullを返します。</target>
        </trans-unit>
        <trans-unit id="d8fe09a5500bade693b5533a5b93beed8253b86c" translate="yes" xml:space="preserve">
          <source>The one variation from Java language access control is that the checks by reflected objects assume readability. That is, the module containing the use of a reflected object is assumed to read the module in which the underlying field, method, or constructor is declared.</source>
          <target state="translated">Java言語のアクセス制御との違いは、反映オブジェクトによるチェックが可読性を前提としていることです。つまり、反映されたオブジェクトの使用を含むモジュールは、基礎となるフィールド、メソッド、コンストラクタが宣言されているモジュールを読むことを前提としています。</target>
        </trans-unit>
        <trans-unit id="3680a0d410cbf7c86a348b63caf1fd252cbc022a" translate="yes" xml:space="preserve">
          <source>The only characters in attribute values that are escaped are those which section 2.4 of RFC 2253 states must be escaped (they are escaped using a preceding backslash character)</source>
          <target state="translated">属性値の中でエスケープされるのは、RFC2253の2.4節でエスケープされなければならないとされている文字だけです(前のバックスラッシュ文字を使ってエスケープされます)。</target>
        </trans-unit>
        <trans-unit id="295fb6b399f1423277a11d5a7f557688d118f6dd" translate="yes" xml:space="preserve">
          <source>The only dataTypes supported currently are TYPE_BYTE and TYPE_USHORT.</source>
          <target state="translated">現在サポートされているdataTypは、TYPE_BYTEとTYPE_USHORTのみです。</target>
        </trans-unit>
        <trans-unit id="e7143ae9d93c0b9dfc0aad9a9d7d22c047ec7cdb" translate="yes" xml:space="preserve">
          <source>The only dataTypes supported currently are TYPE_BYTE, TYPE_USHORT, and TYPE_INT.</source>
          <target state="translated">現在サポートされているデータ型は、TYPE_BYTE、TYPE_USHORT、およびTYPE_INTのみです。</target>
        </trans-unit>
        <trans-unit id="2e9ed2799ba6b886f681d8689a9cf0acba5d537b" translate="yes" xml:space="preserve">
          <source>The only difference between the serial and parallel versions of this example is the creation of the initial stream, using &quot;&lt;code&gt;parallelStream()&lt;/code&gt;&quot; instead of &quot;&lt;code&gt;stream()&lt;/code&gt;&quot;. The stream pipeline is executed sequentially or in parallel depending on the mode of the stream on which the terminal operation is invoked. The sequential or parallel mode of a stream can be determined with the &lt;a href=&quot;basestream#isParallel()&quot;&gt;&lt;code&gt;BaseStream.isParallel()&lt;/code&gt;&lt;/a&gt; method, and the stream's mode can be modified with the &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;basestream#parallel()&quot;&gt;&lt;code&gt;BaseStream.parallel()&lt;/code&gt;&lt;/a&gt; operations. The most recent sequential or parallel mode setting applies to the execution of the entire stream pipeline.</source>
          <target state="translated">この例のシリアルバージョンとパラレルバージョンの唯一の違いは、「 &lt;code&gt;stream()&lt;/code&gt; 」の代わりに「 &lt;code&gt;parallelStream()&lt;/code&gt; 」を使用して初期ストリームを作成することです。ストリームパイプラインは、ターミナル操作が呼び出されるストリームのモードに応じて、順次または並列に実行されます。ストリームのシーケンシャルモードまたはパラレルモードは&lt;a href=&quot;basestream#isParallel()&quot;&gt; &lt;code&gt;BaseStream.isParallel()&lt;/code&gt; &lt;/a&gt;メソッドで決定でき、ストリームのモードは&lt;a href=&quot;basestream#sequential()&quot;&gt; &lt;code&gt;BaseStream.sequential()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;basestream#parallel()&quot;&gt; &lt;code&gt;BaseStream.parallel()&lt;/code&gt; &lt;/a&gt;操作で変更できます。最新のシーケンシャルモードまたはパラレルモードの設定は、ストリームパイプライン全体の実行に適用されます。</target>
        </trans-unit>
        <trans-unit id="8c196d72932e1d175e571f345ae61f12d79c6347" translate="yes" xml:space="preserve">
          <source>The only difference between the serial and parallel versions of this example is the creation of the initial stream, using &quot;&lt;code&gt;parallelStream()&lt;/code&gt;&quot; instead of &quot;&lt;code&gt;stream()&lt;/code&gt;&quot;. When the terminal operation is initiated, the stream pipeline is executed sequentially or in parallel depending on the orientation of the stream on which it is invoked. Whether a stream will execute in serial or parallel can be determined with the &lt;code&gt;isParallel()&lt;/code&gt; method, and the orientation of a stream can be modified with the &lt;a href=&quot;basestream#sequential--&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;basestream#parallel--&quot;&gt;&lt;code&gt;BaseStream.parallel()&lt;/code&gt;&lt;/a&gt; operations. When the terminal operation is initiated, the stream pipeline is executed sequentially or in parallel depending on the mode of the stream on which it is invoked.</source>
          <target state="translated">この例のシリアルバージョンとパラレルバージョンの唯一の違いは、「 &lt;code&gt;stream()&lt;/code&gt; 」の代わりに「 &lt;code&gt;parallelStream()&lt;/code&gt; 」を使用して初期ストリームを作成することです。端末操作が開始されると、ストリームパイプラインは、それが呼び出されるストリームの方向に応じて、順次または並列に実行されます。ストリームがシリアルで実行されるかパラレルで実行されるかは &lt;code&gt;isParallel()&lt;/code&gt; メソッドで決定でき、ストリームの方向は&lt;a href=&quot;basestream#sequential--&quot;&gt; &lt;code&gt;BaseStream.sequential()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;basestream#parallel--&quot;&gt; &lt;code&gt;BaseStream.parallel()&lt;/code&gt; &lt;/a&gt;操作で変更できます。端末操作が開始されると、呼び出されたストリームのモードに応じて、ストリームパイプラインが順次または並列に実行されます。</target>
        </trans-unit>
        <trans-unit id="30c57e209d37493c24bd2337628683ad099f2c41" translate="yes" xml:space="preserve">
          <source>The only features recognized are namespaces and namespace-prefixes.</source>
          <target state="translated">認識される機能は、名前空間と名前空間プレフィックスのみです。</target>
        </trans-unit>
        <trans-unit id="f349a38007f0fe5c739a24493c39f2bc7e05087f" translate="yes" xml:space="preserve">
          <source>The only possible modifiers for constructors are the access modifiers &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt; or &lt;code&gt;private&lt;/code&gt;. Only one of these may appear, or none if the constructor has default (package) access.</source>
          <target state="translated">コンストラクタの唯一の可能な修飾子は、アクセス修飾子 &lt;code&gt;public&lt;/code&gt; 、 &lt;code&gt;protected&lt;/code&gt; 、または &lt;code&gt;private&lt;/code&gt; です。これらの1つだけが表示される場合があります。コンストラクタにデフォルト（パッケージ）アクセス権がある場合は表示されません。</target>
        </trans-unit>
        <trans-unit id="a89b452c765bdde7f50f7ca76fd6cb50b91fd636" translate="yes" xml:space="preserve">
          <source>The opacity value is in the range [0..1]. Note that setting the opacity level of 0 may or may not disable the mouse event handling on this window. This is a platform-dependent behavior.</source>
          <target state="translated">不透明度の値は [0~1]の範囲です。不透明度を 0 に設定すると、このウィンドウでのマウスイベント処理が無効になる場合とならない場合があることに注意してください。これはプラットフォームに依存する動作です。</target>
        </trans-unit>
        <trans-unit id="be1c279f5e78386178da2165b50da21200087330" translate="yes" xml:space="preserve">
          <source>The open package was implicitly declared in the source of the module declaration.</source>
          <target state="translated">オープンパッケージは、モジュール宣言のソースで暗黙のうちに宣言されていました。</target>
        </trans-unit>
        <trans-unit id="bcc4bb5d73de91ce75aba43acec34215a0639c91" translate="yes" xml:space="preserve">
          <source>The open package was not explicitly or implicitly declared in the source of the module declaration.</source>
          <target state="translated">オープンパッケージは、モジュール宣言のソースで明示的または暗黙的に宣言されていませんでした。</target>
        </trans-unit>
        <trans-unit id="8ede533a4ed0afa29ef99e43a7a5d5449c703aa3" translate="yes" xml:space="preserve">
          <source>The operable part of the drop site for the &lt;code&gt;DropTarget&lt;/code&gt; is the part of the associated &lt;code&gt;Component&lt;/code&gt;'s geometry that is not obscured by an overlapping top-level window or by another &lt;code&gt;Component&lt;/code&gt; higher in the Z-order that has an associated active &lt;code&gt;DropTarget&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DropTarget&lt;/code&gt; のドロップサイトの操作可能な部分は、関連する &lt;code&gt;Component&lt;/code&gt; のジオメトリの一部であり、オーバーラップするトップレベルウィンドウ、または関連するアクティブな &lt;code&gt;DropTarget&lt;/code&gt; を持つZオーダーの上位にある別の &lt;code&gt;Component&lt;/code&gt; によって隠されません。</target>
        </trans-unit>
        <trans-unit id="9b89a3f4960ca6976b23674244f345949cec31a1" translate="yes" xml:space="preserve">
          <source>The operand stack is restored, however, any changes to the arguments that occurred in the called method, remain. For example, if the method &lt;code&gt;foo&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757cee3ea404c7279f0c6b75405f9e5d965d2914" translate="yes" xml:space="preserve">
          <source>The operating system program file was not found.</source>
          <target state="translated">オペレーティングシステムのプログラムファイルが見つかりませんでした。</target>
        </trans-unit>
        <trans-unit id="47390cdf3b88c3e58ad9e0ae77f10ad59aa1eaf6" translate="yes" xml:space="preserve">
          <source>The operation just closed this side of the &lt;code&gt;SSLEngine&lt;/code&gt;, or the operation could not be completed because it was already closed.</source>
          <target state="translated">操作が &lt;code&gt;SSLEngine&lt;/code&gt; のこちら側を閉じたばかりか、すでに閉じられているため操作を完了できませんでした。</target>
        </trans-unit>
        <trans-unit id="d716f5e6eb73ca33a6b17f0e7fa84479a8ab34c7" translate="yes" xml:space="preserve">
          <source>The operation of this method is slightly different to similar methods using &lt;code&gt;ParsePosition&lt;/code&gt; on &lt;code&gt;java.text.Format&lt;/code&gt;. That class will return errors using the error index on the &lt;code&gt;ParsePosition&lt;/code&gt;. By contrast, this method will throw a &lt;a href=&quot;datetimeparseexception&quot;&gt;&lt;code&gt;DateTimeParseException&lt;/code&gt;&lt;/a&gt; if an error occurs, with the exception containing the error index. This change in behavior is necessary due to the increased complexity of parsing and resolving dates/times in this API.</source>
          <target state="translated">このメソッドの操作は、 &lt;code&gt;java.text.Format&lt;/code&gt; で &lt;code&gt;ParsePosition&lt;/code&gt; を使用する同様のメソッドとは少し異なります。そのクラスは、 &lt;code&gt;ParsePosition&lt;/code&gt; のエラーインデックスを使用してエラーを返します。対照的に、エラーが発生すると、このメソッドは&lt;a href=&quot;datetimeparseexception&quot;&gt; &lt;code&gt;DateTimeParseException&lt;/code&gt; &lt;/a&gt;をスローしますが、例外にはエラーインデックスが含まれます。この動作の変更は、このAPIで日付/時刻の解析と解決が複雑になるために必要です。</target>
        </trans-unit>
        <trans-unit id="8c2dbe5cb88129c338520227f951d5d21bc3adc0" translate="yes" xml:space="preserve">
          <source>The operation proceeds as follows:</source>
          <target state="translated">操作は以下のように進行します。</target>
        </trans-unit>
        <trans-unit id="6229974772e67797588385f119266fb6e2f20834" translate="yes" xml:space="preserve">
          <source>The operation to perform when this action is triggered.</source>
          <target state="translated">このアクションがトリガーされたときに実行する操作。</target>
        </trans-unit>
        <trans-unit id="385a016e839d895d961c9b7fc691a93ab6bd727c" translate="yes" xml:space="preserve">
          <source>The operation will be performed field by field with the precision of &lt;a href=&quot;../../../../java.base/java/math/bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;. Since all the fields except seconds are restricted to hold integers, any fraction produced by the computation will be carried down toward the next lower unit. For example, if you multiply &quot;P1D&quot; (1 day) with &quot;0.5&quot;, then it will be 0.5 day, which will be carried down to &quot;PT12H&quot; (12 hours). When fractions of month cannot be meaningfully carried down to days, or year to months, this will cause an &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt; to be thrown. For example if you multiple one month by 0.5.</source>
          <target state="translated">操作は、&lt;a href=&quot;../../../../java.base/java/math/bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt;の精度でフィールドごとに実行されます。秒を除くすべてのフィールドは整数を保持するように制限されているため、計算によって生成された小数部は、次に低い単位に引き継がれます。たとえば、「P1D」（1日）に「0.5」を掛けると、0。5日となり、「PT12H」（12時間）に引き継がれます。月の端数を数日、または年から月に意味のある形で引き継ぐことができない場合、これにより&lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;がスローされます。たとえば、1か月に0.5を掛けたとします。</target>
        </trans-unit>
        <trans-unit id="1e9b100e7d6bf71d9d81c5cf765dd6e9312adf7f" translate="yes" xml:space="preserve">
          <source>The optical photo conductor is near end of life.</source>
          <target state="translated">光感光体は寿命が近い。</target>
        </trans-unit>
        <trans-unit id="fc98736e760491006a9169783a49bc78538cc3ca" translate="yes" xml:space="preserve">
          <source>The optical photo conductor is no longer functioning.</source>
          <target state="translated">光感光体が機能しなくなりました。</target>
        </trans-unit>
        <trans-unit id="c62ce663f6e5bbb6451017676b19762e1fbf3161" translate="yes" xml:space="preserve">
          <source>The option must be set prior to entering a blocking operation to take effect. If the timeout expires and the operation would continue to block, &lt;b&gt;java.io.InterruptedIOException&lt;/b&gt; is raised. The Socket is not closed in this case.</source>
          <target state="translated">このオプションを有効にするには、ブロッキング操作に入る前に設定する必要があります。タイムアウトが経過しても操作がブロックし続けると、&lt;b&gt;java.io.InterruptedIOException&lt;/b&gt;が発生します。この場合、ソケットは閉じられません。</target>
        </trans-unit>
        <trans-unit id="18b9f1ce4c729b2ded7edcf5db48cd7ab36a842d" translate="yes" xml:space="preserve">
          <source>The optional</source>
          <target state="translated">オプションの</target>
        </trans-unit>
        <trans-unit id="780ff6733d087d7bf446709714c8ebb00a2cffdb" translate="yes" xml:space="preserve">
          <source>The optional build information is compared lexicographically. During this comparison, a version with optional build information is considered to be greater than a version without one.</source>
          <target state="translated">オプションのビルド情報は辞書的に比較されます。この比較の間、オプションのビルド情報があるバージョンは、ビルド情報がないバージョンよりも大きいとみなされます。</target>
        </trans-unit>
        <trans-unit id="7d31088ebde33203706fda6d4531c19f262ae377" translate="yes" xml:space="preserve">
          <source>The optional build number.</source>
          <target state="translated">オプションのビルド番号。</target>
        </trans-unit>
        <trans-unit id="7fde895ca15e28398e2093122f9b0e89dd2c837e" translate="yes" xml:space="preserve">
          <source>The optional capacity bound constructor argument serves as a way to prevent excessive expansion. The capacity, if unspecified, is equal to &lt;a href=&quot;../../lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;. Linked nodes are dynamically created upon each insertion unless this would bring the deque above capacity.</source>
          <target state="translated">オプションの容量制限コンストラクター引数は、過度の拡張を防ぐ方法として機能します。指定されていない場合、容量は&lt;a href=&quot;../../lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/a&gt;と同じです。リンクされたノードは、両端キューが容量を超えない限り、挿入ごとに動的に作成されます。</target>
        </trans-unit>
        <trans-unit id="1b391ca196a239752a071899940b30e945c7e626" translate="yes" xml:space="preserve">
          <source>The optional capacity bound constructor argument serves as a way to prevent excessive queue expansion. The capacity, if unspecified, is equal to &lt;a href=&quot;../../lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;. Linked nodes are dynamically created upon each insertion unless this would bring the queue above capacity.</source>
          <target state="translated">オプションの容量制限コンストラクター引数は、過剰なキュー拡張を防ぐ方法として機能します。指定されていない場合、容量は&lt;a href=&quot;../../lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/a&gt;と同じです。リンクされたノードは、キューが容量を超えない限り、挿入ごとに動的に作成されます。</target>
        </trans-unit>
        <trans-unit id="40329cb44fef466069a746e7e8616ce88f318acf" translate="yes" xml:space="preserve">
          <source>The optional interface implemented by ScriptEngines whose methods allow the invocation of procedures in scripts that have previously been executed.</source>
          <target state="translated">ScriptEngines によって実装されているオプションのインターフェイスで、 そのメソッドを使用すると、以前に実行されたスクリプト内のプロシージャの呼び出しが可能になります。</target>
        </trans-unit>
        <trans-unit id="af44167d5098cd1640942f676f56da64386bc769" translate="yes" xml:space="preserve">
          <source>The optional interface implemented by ScriptEngines whose methods compile scripts to a form that can be executed repeatedly without recompilation.</source>
          <target state="translated">ScriptEngines によって実装されているオプションのインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="bc1b7b35aca1d8eeff15523a95ddf328b6c781ce" translate="yes" xml:space="preserve">
          <source>The optional module name is prefixed to the type name or package name and separated using a &quot;&lt;code&gt;/&lt;/code&gt;&quot; character. For example, to create a class file for type &lt;code&gt;a.B&lt;/code&gt; in module &lt;code&gt;foo&lt;/code&gt;, use a &lt;code&gt;name&lt;/code&gt; argument of &lt;code&gt;&quot;foo/a.B&quot;&lt;/code&gt;.</source>
          <target state="translated">オプションのモジュール名は、タイプ名またはパッケージ名の前に付けられ、「 &lt;code&gt;/&lt;/code&gt; 」文字で区切られます。たとえば、モジュール &lt;code&gt;foo&lt;/code&gt; でタイプ &lt;code&gt;a.B&lt;/code&gt; クラスファイルを作成するには、 &lt;code&gt;&quot;foo/a.B&quot;&lt;/code&gt; &lt;code&gt;name&lt;/code&gt; 引数を使用します。</target>
        </trans-unit>
        <trans-unit id="e7b05f568bb77158d95ed44eb1b1ee848f1cc15e" translate="yes" xml:space="preserve">
          <source>The optional module name is prefixed to the type name or package name and separated using a &quot;&lt;code&gt;/&lt;/code&gt;&quot; character. For example, to create a source file for type &lt;code&gt;a.B&lt;/code&gt; in module &lt;code&gt;foo&lt;/code&gt;, use a &lt;code&gt;name&lt;/code&gt; argument of &lt;code&gt;&quot;foo/a.B&quot;&lt;/code&gt;.</source>
          <target state="translated">オプションのモジュール名は、タイプ名またはパッケージ名の前に付けられ、「 &lt;code&gt;/&lt;/code&gt; 」文字で区切られます。たとえば、モジュール &lt;code&gt;foo&lt;/code&gt; でタイプ &lt;code&gt;a.B&lt;/code&gt; ソースファイルを作成するには、 &lt;code&gt;&quot;foo/a.B&quot;&lt;/code&gt; &lt;code&gt;name&lt;/code&gt; 引数を使用します。</target>
        </trans-unit>
        <trans-unit id="d5829c87f129903c32edbc130685e2ce1d68c681" translate="yes" xml:space="preserve">
          <source>The optional pre-release information as a String</source>
          <target state="translated">オプションのプレリリース情報をStringとして</target>
        </trans-unit>
        <trans-unit id="fc3f9d6f338a5687d0aaac4c1e2d14791c14a93e" translate="yes" xml:space="preserve">
          <source>The options objects should contain either instances of &lt;code&gt;Component&lt;/code&gt;s, (which are added directly) or &lt;code&gt;Strings&lt;/code&gt; (which are wrapped in a &lt;code&gt;JButton&lt;/code&gt;). If you provide &lt;code&gt;Component&lt;/code&gt;s, you must ensure that when the &lt;code&gt;Component&lt;/code&gt; is clicked it messages &lt;code&gt;setValue&lt;/code&gt; in the created &lt;code&gt;JOptionPane&lt;/code&gt;.</source>
          <target state="translated">オプションオブジェクトには、 &lt;code&gt;Component&lt;/code&gt; のインスタンス（直接追加される）または &lt;code&gt;Strings&lt;/code&gt; （ &lt;code&gt;JButton&lt;/code&gt; でラップされる）のいずれかが含まれている必要があります。 &lt;code&gt;Component&lt;/code&gt; を指定する場合は、 &lt;code&gt;Component&lt;/code&gt; がクリックされたときに、作成された &lt;code&gt;JOptionPane&lt;/code&gt; に &lt;code&gt;setValue&lt;/code&gt; メッセージが表示されることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="0d323759d66423b856604e1ca269cc6f1231f8e4" translate="yes" xml:space="preserve">
          <source>The order in which notifications will be delivered is unspecified. The default implementation provided in the Observable class will notify Observers in the order in which they registered interest, but subclasses may change this order, use no guaranteed order, deliver notifications on separate threads, or may guarantee that their subclass follows this order, as they choose.</source>
          <target state="translated">通知が配信される順番は指定されていません。Observable クラスで提供されるデフォルトの実装では、Observer が興味を持った順番で通知を行いますが、サブクラスはこの順番を変更したり、保証された順番を使用しなかったり、別々のスレッドで通知を配信したり、サブクラスがこの順番に従うことを保証したりすることができます。</target>
        </trans-unit>
        <trans-unit id="6143ddfdc758405eea52fe688b165bfc50d049e2" translate="yes" xml:space="preserve">
          <source>The order in which the certificates are presented to the &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; may be either in the forward direction (from target to most-trusted CA) or in the reverse direction (from most-trusted CA to target). A &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; implementation &lt;b&gt;must&lt;/b&gt; support reverse checking (the ability to perform its checks when it is presented with certificates in the reverse direction) and &lt;b&gt;may&lt;/b&gt; support forward checking (the ability to perform its checks when it is presented with certificates in the forward direction). The &lt;a href=&quot;#isForwardCheckingSupported()&quot;&gt;&lt;code&gt;isForwardCheckingSupported&lt;/code&gt;&lt;/a&gt; method indicates whether forward checking is supported.</source>
          <target state="translated">証明書が &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; に提示される順序は、順方向（ターゲットから最も信頼できるCAへ）または逆方向（最も信頼できるCAからターゲットへ）のいずれかです。 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; 実装では、&lt;b&gt;必要があり&lt;/b&gt;、逆チェック（それは逆方向の証明書が提示されるときにチェックを実行する機能）をサポートし&lt;b&gt;てもよい&lt;/b&gt;フォワード確認（それは順方向に証明書が提示されるときにチェックを実行する機能）をサポート。&lt;a href=&quot;#isForwardCheckingSupported()&quot;&gt; &lt;code&gt;isForwardCheckingSupported&lt;/code&gt; &lt;/a&gt;方法は、順方向のチェックがサポートされているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="786679264f791da220873f1e88f2073a40d4300a" translate="yes" xml:space="preserve">
          <source>The order in which the certificates are presented to the &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; may be either in the forward direction (from target to most-trusted CA) or in the reverse direction (from most-trusted CA to target). A &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; implementation &lt;b&gt;must&lt;/b&gt; support reverse checking (the ability to perform its checks when it is presented with certificates in the reverse direction) and &lt;b&gt;may&lt;/b&gt; support forward checking (the ability to perform its checks when it is presented with certificates in the forward direction). The &lt;a href=&quot;pkixcertpathchecker#isForwardCheckingSupported--&quot;&gt;&lt;code&gt;isForwardCheckingSupported&lt;/code&gt;&lt;/a&gt; method indicates whether forward checking is supported.</source>
          <target state="translated">証明書が &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; に提示される順序は、順方向（ターゲットから最も信頼できるCAへ）または逆方向（最も信頼できるCAからターゲット）のいずれかです。 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; 実装では、&lt;b&gt;必要があり&lt;/b&gt;、逆チェック（それは逆方向の証明書が提示されるときにチェックを実行する機能）をサポートし&lt;b&gt;てもよい&lt;/b&gt;フォワード確認（それは順方向に証明書が提示されるときにチェックを実行する機能）をサポート。&lt;a href=&quot;pkixcertpathchecker#isForwardCheckingSupported--&quot;&gt; &lt;code&gt;isForwardCheckingSupported&lt;/code&gt; &lt;/a&gt;方法は、順方向のチェックがサポートされているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="d2f8d57b1d164c84e4b4ac092f45d02503e996db" translate="yes" xml:space="preserve">
          <source>The order of Catalogs in the returned stream is the same as the order in which the corresponding &lt;code&gt;nextCatalog&lt;/code&gt; entries appear in the current catalog. The alternative catalogs from the input file list are appended to the end of the stream in the order they are entered.</source>
          <target state="translated">返されるストリーム内のカタログの順序は、対応する &lt;code&gt;nextCatalog&lt;/code&gt; エントリが現在のカタログに表示される順序と同じです。入力ファイルリストの代替カタログは、入力された順序でストリームの最後に追加されます。</target>
        </trans-unit>
        <trans-unit id="4b3b0a1444d580fbd23f88a9b291fb618ecf7e54" translate="yes" xml:space="preserve">
          <source>The order of MBeans in the &lt;code&gt;ClassLoaderRepository&lt;/code&gt; is significant. For any two MBeans &lt;em&gt;X&lt;/em&gt; and &lt;em&gt;Y&lt;/em&gt; in the &lt;code&gt;ClassLoaderRepository&lt;/code&gt;, &lt;em&gt;X&lt;/em&gt; must appear before &lt;em&gt;Y&lt;/em&gt; if the registration of &lt;em&gt;X&lt;/em&gt; was completed before the registration of &lt;em&gt;Y&lt;/em&gt; started. If &lt;em&gt;X&lt;/em&gt; and &lt;em&gt;Y&lt;/em&gt; were registered concurrently, their order is indeterminate. The registration of an MBean corresponds to the call to &lt;a href=&quot;../mbeanserver#registerMBean(java.lang.Object,javax.management.ObjectName)&quot;&gt;&lt;code&gt;MBeanServer.registerMBean(java.lang.Object, javax.management.ObjectName)&lt;/code&gt;&lt;/a&gt; or one of the &lt;a href=&quot;../mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.createMBean&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;ClassLoaderRepository&lt;/code&gt; 内のMBeanの順序は重要です。任意の二つのMBeanのために&lt;em&gt;X&lt;/em&gt;と&lt;em&gt;Y&lt;/em&gt;で &lt;code&gt;ClassLoaderRepository&lt;/code&gt; 、&lt;em&gt;Xは&lt;/em&gt;前に現れなければなりません&lt;em&gt;Y&lt;/em&gt;の登録ならば&lt;em&gt;Xは&lt;/em&gt;登録前に完成した&lt;em&gt;Yが&lt;/em&gt;始まりました。&lt;em&gt;X&lt;/em&gt;と&lt;em&gt;Y&lt;/em&gt;が同時に登録された場合、それらの順序は不確定です。 MBeanの登録は、&lt;a href=&quot;../mbeanserver#registerMBean(java.lang.Object,javax.management.ObjectName)&quot;&gt; &lt;code&gt;MBeanServer.registerMBean(java.lang.Object, javax.management.ObjectName)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; .createMBean&lt;/a&gt;メソッドの1 &lt;code&gt;.createMBean&lt;/code&gt; の呼び出しに対応します。</target>
        </trans-unit>
        <trans-unit id="3007914f7a4138270cf5fa55368f3ef46fd6ca3f" translate="yes" xml:space="preserve">
          <source>The order of MBeans in the &lt;code&gt;ClassLoaderRepository&lt;/code&gt; is significant. For any two MBeans &lt;em&gt;X&lt;/em&gt; and &lt;em&gt;Y&lt;/em&gt; in the &lt;code&gt;ClassLoaderRepository&lt;/code&gt;, &lt;em&gt;X&lt;/em&gt; must appear before &lt;em&gt;Y&lt;/em&gt; if the registration of &lt;em&gt;X&lt;/em&gt; was completed before the registration of &lt;em&gt;Y&lt;/em&gt; started. If &lt;em&gt;X&lt;/em&gt; and &lt;em&gt;Y&lt;/em&gt; were registered concurrently, their order is indeterminate. The registration of an MBean corresponds to the call to &lt;a href=&quot;../mbeanserver#registerMBean-java.lang.Object-javax.management.ObjectName-&quot;&gt;&lt;code&gt;MBeanServer.registerMBean(java.lang.Object, javax.management.ObjectName)&lt;/code&gt;&lt;/a&gt; or one of the &lt;a href=&quot;../mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.createMBean&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;ClassLoaderRepository&lt;/code&gt; でのMBeanの順序は重要です。任意の二つのMBeanのために&lt;em&gt;X&lt;/em&gt;と&lt;em&gt;Y&lt;/em&gt;で &lt;code&gt;ClassLoaderRepository&lt;/code&gt; 、&lt;em&gt;Xは&lt;/em&gt;前に現れなければなりません&lt;em&gt;Y&lt;/em&gt;の登録ならば&lt;em&gt;Xは&lt;/em&gt;登録前に完成した&lt;em&gt;Yが&lt;/em&gt;始まりました。&lt;em&gt;X&lt;/em&gt;と&lt;em&gt;Y&lt;/em&gt;が同時に登録された場合、それらの順序は不確定です。 MBeanの登録は、&lt;a href=&quot;../mbeanserver#registerMBean-java.lang.Object-javax.management.ObjectName-&quot;&gt; &lt;code&gt;MBeanServer.registerMBean(java.lang.Object, javax.management.ObjectName)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt; &lt;code&gt;.createMBean&lt;/code&gt; メソッドの1 つへの呼び出しに対応しています。</target>
        </trans-unit>
        <trans-unit id="69b59e9b859e1a5e657654408c45f91692763d5e" translate="yes" xml:space="preserve">
          <source>The order of accumulation within or across threads is not guaranteed and cannot be depended upon, so this class is only applicable to functions for which the order of accumulation does not matter. The supplied accumulator function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. For predictable results, the accumulator function should be associative and commutative. The function is applied with an existing value (or identity) as one argument, and a given update as the other argument. For example, to maintain a running maximum value, you could supply &lt;code&gt;
 Long::max&lt;/code&gt; along with &lt;code&gt;Long.MIN_VALUE&lt;/code&gt; as the identity.</source>
          <target state="translated">スレッド内またはスレッド間の累積の順序は保証されておらず、依存できないため、このクラスは、累積の順序が重要ではない関数にのみ適用できます。提供されているアキュムレータ関数は、スレッド間の競合が原因で更新の試行が失敗した場合に再適用される可能性があるため、副作用がない必要があります。予測可能な結果を​​得るには、アキュムレータ関数は結合法則と可換法則である必要があります。この関数は、既存の値（またはID）を1つの引数として適用し、特定の更新をもう1つの引数として適用します。たとえば、実行中の最大値を維持するには、IDとして &lt;code&gt;Long.MIN_VALUE&lt;/code&gt; とともに &lt;code&gt; Long::max&lt;/code&gt; を指定できます。</target>
        </trans-unit>
        <trans-unit id="6726bce2cabc5276351a481e6e10cf57a7fb4a23" translate="yes" xml:space="preserve">
          <source>The order of accumulation within or across threads is not guaranteed and cannot be depended upon, so this class is only applicable to functions for which the order of accumulation does not matter. The supplied accumulator function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value as its first argument, and the given update as the second argument. For example, to maintain a running maximum value, you could supply &lt;code&gt;Long::max&lt;/code&gt; along with &lt;code&gt;Long.MIN_VALUE&lt;/code&gt; as the identity.</source>
          <target state="translated">スレッド内またはスレッド間の累積の順序は保証されておらず、依存することもできないため、このクラスは、累積の順序が重要ではない関数にのみ適用できます。提供されたアキュムレータ関数は、スレッド間の競合により更新の試行が失敗したときに再適用される可能性があるため、副作用がないはずです。関数は、現在の値を最初の引数として、指定された更新を2番目の引数として適用されます。たとえば、実行中の最大値を維持するには、 &lt;code&gt;Long::max&lt;/code&gt; とIDとして &lt;code&gt;Long.MIN_VALUE&lt;/code&gt; を指定できます。</target>
        </trans-unit>
        <trans-unit id="85066ede09274b9f9c61cffaf82980ac01b16326" translate="yes" xml:space="preserve">
          <source>The order of attributes in the list is unspecified, and will vary from implementation to implementation.</source>
          <target state="translated">リストの属性の順番は不特定であり、実装によって異なります。</target>
        </trans-unit>
        <trans-unit id="ec494cb7fce413a23ae1b9813822d9a7c9181642" translate="yes" xml:space="preserve">
          <source>The order of elements in the list is the same as the order of the provided arguments, or of the elements in the provided array.</source>
          <target state="translated">リストの要素の順序は、提供された引数の順序、または提供された配列の要素の順序と同じです。</target>
        </trans-unit>
        <trans-unit id="c8d2c884b5e85c4c029c8b772764cc9802c52974" translate="yes" xml:space="preserve">
          <source>The order of events in this interface is very important, and mirrors the order of information in the document itself. For example, all of an element's content (character data, processing instructions, and/or subelements) will appear, in order, between the startElement event and the corresponding endElement event.</source>
          <target state="translated">このインタフェースにおけるイベントの順序は非常に重要であり、文書自体の中の情報の順序を反映しています。例えば、要素のすべての内容(文字データ、処理命令、および/またはサブ要素)は、startElementイベントと対応するendElementイベントの間に、順番に表示されます。</target>
        </trans-unit>
        <trans-unit id="9ec7a44975564e560e5ebfd67d34b556640a1ec3" translate="yes" xml:space="preserve">
          <source>The order of the color indices is specified by the &lt;code&gt;ColorSpace&lt;/code&gt;. Typically, this reflects the name of the color space type (for example, TYPE_RGB), index 0 corresponds to red, index 1 to green, and index 2 to blue.</source>
          <target state="translated">カラーインデックスの順序は、 &lt;code&gt;ColorSpace&lt;/code&gt; によって指定されます。通常、これは色空間タイプの名前（たとえば、TYPE_RGB）を反映し、インデックス0は赤に対応し、インデックス1は緑に対応し、インデックス2は青に対応します。</target>
        </trans-unit>
        <trans-unit id="e39109fa74536dbd205739a657a79c8c946a6365" translate="yes" xml:space="preserve">
          <source>The order of the list specifies the preference order of the client or server. An implementation should allow configuration of the meaning of these values. An application may use the Java Cryptography Extension (JCE) with JCE-aware mechanisms to control the selection of cipher suites that match the strength values.</source>
          <target state="translated">リストの順序は、クライアントまたはサーバの優先順位を指定します。実装では、これらの値の意味を設定できるようにしなければならない。アプリケーションは、強度値に一致する暗号スイートの選択を制御するために、Java暗号化拡張(JCE)をJCEを意識したメカニズムで使用することができます。</target>
        </trans-unit>
        <trans-unit id="8b7e2a675c70b61b722a61131dcca11cbc86fea1" translate="yes" xml:space="preserve">
          <source>The order of the list specifies the preference order of the client or server. If this property is absent, the default qop is &lt;code&gt;&quot;auth&quot;&lt;/code&gt;. The value of this constant is &lt;code&gt;&quot;javax.security.sasl.qop&quot;&lt;/code&gt;.</source>
          <target state="translated">リストの順序は、クライアントまたはサーバーの優先順位を指定します。このプロパティがない場合、デフォルトのqopは &lt;code&gt;&quot;auth&quot;&lt;/code&gt; です。この定数の値は &lt;code&gt;&quot;javax.security.sasl.qop&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ea3d28b0369798168d59098f402bfbd2dc55933a" translate="yes" xml:space="preserve">
          <source>The order of the value descriptors specifies the index to use when setting event values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55568d5954bb088575a4a35d0388cb5151097fe" translate="yes" xml:space="preserve">
          <source>The order of transformation is described in &lt;a href=&quot;classfiletransformer&quot;&gt;&lt;code&gt;ClassFileTransformer&lt;/code&gt;&lt;/a&gt;. This same order is used in the automatic reapplication of retransformation incapable transforms.</source>
          <target state="translated">変換の順序は、&lt;a href=&quot;classfiletransformer&quot;&gt; &lt;code&gt;ClassFileTransformer&lt;/code&gt; &lt;/a&gt;で説明されています。これと同じ順序が、再変換できない変換の自動再適用で使用されます。</target>
        </trans-unit>
        <trans-unit id="f586d409022fb2da015fb1af6296fa734a0d31fd" translate="yes" xml:space="preserve">
          <source>The order of transformation is described in the &lt;a href=&quot;classfiletransformer#transform-java.lang.ClassLoader-java.lang.String-java.lang.Class-java.security.ProtectionDomain-byte:A-&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt; method. This same order is used in the automatic reapplication of retransformation incapable transforms.</source>
          <target state="translated">変換の順序は、&lt;a href=&quot;classfiletransformer#transform-java.lang.ClassLoader-java.lang.String-java.lang.Class-java.security.ProtectionDomain-byte:A-&quot;&gt; &lt;code&gt;transform&lt;/code&gt; &lt;/a&gt;メソッドで説明されています。これと同じ順序が、再変換できない変換の自動再適用でも使用されます。</target>
        </trans-unit>
        <trans-unit id="6b636074ef1a5a271212dd8309cd64648a786776" translate="yes" xml:space="preserve">
          <source>The order of views relative to the model is up to the implementation. Although child views will typically be arranged in the same order that they occur in the model, they may be visually arranged in an entirely different order. View implementations may have Z-Order associated with them if the children are overlapping.</source>
          <target state="translated">モデルに対するビューの順序は実装次第です。子ビューは通常、モデル内で発生するのと同じ順序で配置されますが、視覚的には全く異なる順序で配置されることもあります。ビューの実装では、子ビューが重なっている場合、Z-Orderが関連付けられていることがあります。</target>
        </trans-unit>
        <trans-unit id="218227e103dee75adf30e33cccee9cc838d6df1c" translate="yes" xml:space="preserve">
          <source>The ordering imposed by a comparator &lt;code&gt;c&lt;/code&gt; on a set of elements &lt;code&gt;S&lt;/code&gt; is said to be</source>
          <target state="translated">コンパレータによって課される順序 &lt;code&gt;c&lt;/code&gt; 要素の集合に &lt;code&gt;S&lt;/code&gt; があると言われています</target>
        </trans-unit>
        <trans-unit id="35ceedf75591c16657215454c74762f532506371" translate="yes" xml:space="preserve">
          <source>The ordering is based on the order that the class loader's &lt;code&gt;
   getResources&lt;/code&gt; method finds the service configuration files and within that, the order that the class names are listed in the file.</source>
          <target state="translated">順序は、クラスローダーの &lt;code&gt; getResources&lt;/code&gt; メソッドがサービス構成ファイルを見つける順序と、その中でクラス名がファイルにリストされている順序に基づいています。</target>
        </trans-unit>
        <trans-unit id="fa90a160007f418563c4b70e7a41641e8b8af99c" translate="yes" xml:space="preserve">
          <source>The ordering of URIs is defined as follows:</source>
          <target state="translated">URIの順序は以下のように定義されています。</target>
        </trans-unit>
        <trans-unit id="10e213727ab1efb66ce40fdac2f168fd5ab6e836" translate="yes" xml:space="preserve">
          <source>The ordering of cards is determined by the container's own internal ordering of its component objects. &lt;code&gt;CardLayout&lt;/code&gt; defines a set of methods that allow an application to flip through these cards sequentially, or to show a specified card. The &lt;a href=&quot;#addLayoutComponent(java.awt.Component,java.lang.Object)&quot;&gt;&lt;code&gt;addLayoutComponent(java.awt.Component, java.lang.Object)&lt;/code&gt;&lt;/a&gt; method can be used to associate a string identifier with a given card for fast random access.</source>
          <target state="translated">カードの順序は、コンテナ自体のコンポーネントオブジェクトの内部順序によって決まります。 &lt;code&gt;CardLayout&lt;/code&gt; は、アプリケーションがこれらのカードを順番にめくったり、指定されたカードを表示したりできるようにする一連のメソッドを定義します。&lt;a href=&quot;#addLayoutComponent(java.awt.Component,java.lang.Object)&quot;&gt; &lt;code&gt;addLayoutComponent(java.awt.Component, java.lang.Object)&lt;/code&gt; &lt;/a&gt;方法は、高速ランダムアクセスのために指定されたカードで文字列識別子を関連付けるために使用することができます。</target>
        </trans-unit>
        <trans-unit id="d740108fcacd8b33f949d001977d3ba5521ae114" translate="yes" xml:space="preserve">
          <source>The ordering of lock reacquisition for threads returning from waiting methods is the same as for threads initially acquiring the lock, which is in the default case not specified, but for &lt;em&gt;fair&lt;/em&gt; locks favors those threads that have been waiting the longest.</source>
          <target state="translated">待機中のメソッドから戻るスレッドのロック再取得の順序は、最初にロックを取得するスレッドと同じですが、デフォルトのケースでは指定されていませんが、&lt;em&gt;公平な&lt;/em&gt;ロックでは、最も長く待機していたスレッドが優先されます。</target>
        </trans-unit>
        <trans-unit id="ebe3338db3779264959a01c896fab9cc8151a384" translate="yes" xml:space="preserve">
          <source>The ordering of modules in a module layer is not defined.</source>
          <target state="translated">モジュール層のモジュールの順序は定義されていません。</target>
        </trans-unit>
        <trans-unit id="2d4dae6bc907437ac679c9f1928886b7eb910aa2" translate="yes" xml:space="preserve">
          <source>The ordering of side-effects may be surprising. Even when a pipeline is constrained to produce a &lt;em&gt;result&lt;/em&gt; that is consistent with the encounter order of the stream source (for example, &lt;code&gt;IntStream.range(0,5).parallel().map(x -&amp;gt; x*2).toArray()&lt;/code&gt; must produce &lt;code&gt;[0, 2, 4, 6, 8]&lt;/code&gt;), no guarantees are made as to the order in which the mapper function is applied to individual elements, or in what thread any behavioral parameter is executed for a given element.</source>
          <target state="translated">副作用の順序は驚くべきものかもしれません。パイプラインがストリームソースの遭遇順序と一致する&lt;em&gt;結果&lt;/em&gt;を生成するように制約されている場合でも（たとえば、 &lt;code&gt;IntStream.range(0,5).parallel().map(x -&amp;gt; x*2).toArray()&lt;/code&gt; は &lt;code&gt;[0, 2, 4, 6, 8]&lt;/code&gt; ）を生成する必要があり、マッパー関数が個々の要素に適用される順序、または特定の要素に対してどのスレッドで動作パラメーターが実行されるかについては保証されません。</target>
        </trans-unit>
        <trans-unit id="c351a0d0a5c5fd7fc6873693e09a2f6e8d0c8198" translate="yes" xml:space="preserve">
          <source>The ordering will be used by the &lt;code&gt;getServiceProviders&lt;/code&gt; methods when their &lt;code&gt;useOrdering&lt;/code&gt; argument is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">順序付けは、 &lt;code&gt;useOrdering&lt;/code&gt; 引数が &lt;code&gt;true&lt;/code&gt; の場合に &lt;code&gt;getServiceProviders&lt;/code&gt; メソッドによって使用されます。</target>
        </trans-unit>
        <trans-unit id="c51946205bec8d4e4a34dc331905e41621242078" translate="yes" xml:space="preserve">
          <source>The ordinal index of the selected option, starting from 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be3279dece3c485957eab1b710071124228e9b0" translate="yes" xml:space="preserve">
          <source>The ordinal index of the selected option, starting from 0. The value -1 is returned if no element is selected. If multiple options are selected, the index of the first selected option is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828902195e00ef436aff70e49094916ecb581eee" translate="yes" xml:space="preserve">
          <source>The orientations are:</source>
          <target state="translated">方向性は</target>
        </trans-unit>
        <trans-unit id="b2fbbc68a36c3656118ddcba9b24016a519952e2" translate="yes" xml:space="preserve">
          <source>The origin and dimensions are the same.</source>
          <target state="translated">原点と寸法は同じです。</target>
        </trans-unit>
        <trans-unit id="81d54722d0f9366f127e5a540eef57cf4be51315" translate="yes" xml:space="preserve">
          <source>The origin is at the bottom left of the paper with x running bottom to top and y running left to right.</source>
          <target state="translated">原点は紙の左下にあり、Xは下から上に、Yは左から右に走っています。</target>
        </trans-unit>
        <trans-unit id="34aadd941b0e6c46830a2cf7051a8e604ce18ba2" translate="yes" xml:space="preserve">
          <source>The origin is at the bottom left of the paper with x running bottom to top and y running left to right. Note that this is not the Macintosh landscape but is the Window's and PostScript landscape.</source>
          <target state="translated">原点は紙の左下にあり、xは下から上に、yは左から右に走っています。これはMacintoshの風景ではなく、WindowやPostScriptの風景であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c72397f47fc72fd8faede6be39606ce7c37d8165" translate="yes" xml:space="preserve">
          <source>The origin is at the top left of the paper with x running to the right and y running down the paper.</source>
          <target state="translated">原点は紙の左上にあり、右にXが走り、紙の下にYが走っています。</target>
        </trans-unit>
        <trans-unit id="eb105468c81962a0b3b369302414b0041b7e6d52" translate="yes" xml:space="preserve">
          <source>The origin is at the top right of the paper with x running top to bottom and y running right to left.</source>
          <target state="translated">原点は紙の右上にあり、Xは上から下に、Yは右から左に走っています。</target>
        </trans-unit>
        <trans-unit id="b915e1ffee25bb4cdc2df24182c61b8d2216ac89" translate="yes" xml:space="preserve">
          <source>The origin is at the top right of the paper with x running top to bottom and y running right to left. Note that this is the Macintosh landscape.</source>
          <target state="translated">原点は紙の右上にあり、xは上から下に、yは右から左に走っています。これはマッキントッシュの風景であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e8ca3c4aef86396c5b74dd72923a67612e1f1e7b" translate="yes" xml:space="preserve">
          <source>The origin of the graphics context, its (&lt;code&gt;0&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;) coordinate point, is the top-left corner of this component. The clipping region of the graphics context is the bounding rectangle of this component.</source>
          <target state="translated">グラフィックスコンテキストの原点を、その（ &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;0&lt;/code&gt; ）座標点は、このコンポーネントの左上隅です。グラフィックスコンテキストのクリッピング領域は、このコンポーネントの外接する四角形です。</target>
        </trans-unit>
        <trans-unit id="e0ce8e8ef1bf8c243508ecd5bf030b1224183b7e" translate="yes" xml:space="preserve">
          <source>The origin point.</source>
          <target state="translated">原点。</target>
        </trans-unit>
        <trans-unit id="0a55863e7f795e02d36c068a0988bdb81b7439eb" translate="yes" xml:space="preserve">
          <source>The original Java type of this element as it appeared in the &lt;a href=&quot;mxbean&quot;&gt;&lt;code&gt;MXBean&lt;/code&gt;&lt;/a&gt; interface method that produced this &lt;code&gt;
 MBeanAttributeInfo&lt;/code&gt; (etc). For example, a method</source>
          <target state="translated">この &lt;code&gt; MBeanAttributeInfo&lt;/code&gt; （など）を生成した&lt;a href=&quot;mxbean&quot;&gt; &lt;code&gt;MXBean&lt;/code&gt; &lt;/a&gt;インターフェースメソッドに表示された、この要素の元のJavaタイプ。たとえば、メソッド</target>
        </trans-unit>
        <trans-unit id="03642eebd1c6e8a163c4a73ff3af624d3fa4e141" translate="yes" xml:space="preserve">
          <source>The original Java type of this element as it appeared in the &lt;a href=&quot;mxbean&quot;&gt;&lt;code&gt;MXBean&lt;/code&gt;&lt;/a&gt; interface method that produced this &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; (etc). For example, a method</source>
          <target state="translated">この &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; などを生成した&lt;a href=&quot;mxbean&quot;&gt; &lt;code&gt;MXBean&lt;/code&gt; &lt;/a&gt;インターフェースメソッドに表示された、この要素の元のJavaタイプ。たとえば、メソッド</target>
        </trans-unit>
        <trans-unit id="97dc8d04e670ae6bfa1055787149df83a7f92ead" translate="yes" xml:space="preserve">
          <source>The original ZIP file. May be null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb59fbab3a9585984429676a1e7522c7316fa111" translate="yes" xml:space="preserve">
          <source>The original diagnostic command name (not the operation name)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb7eb8c45dbc81d8fd70bf5884b22ccd1f62cb9" translate="yes" xml:space="preserve">
          <source>The original object that was sealed can be recovered in two different ways:</source>
          <target state="translated">封印されていた元の物体は、2つの方法で回収することができます。</target>
        </trans-unit>
        <trans-unit id="b954e893a1f95170dfb211c586d111b9c39c9144" translate="yes" xml:space="preserve">
          <source>The original raw name.</source>
          <target state="translated">元々の生名。</target>
        </trans-unit>
        <trans-unit id="1e848f08eb459ca9bd9f3d3751f204b11ef04d87" translate="yes" xml:space="preserve">
          <source>The original value for a &lt;code&gt;RowSet&lt;/code&gt; object is the value it had before the last synchronization with the underlying data source. If there have been no synchronizations, the original value will be the value with which the &lt;code&gt;RowSet&lt;/code&gt; object was populated. This method is called internally when an application calls the method &lt;code&gt;acceptChanges&lt;/code&gt; and the &lt;code&gt;SyncProvider&lt;/code&gt; object has been implemented to check for conflicts. If this is the case, the writer compares the original value with the value currently in the data source to check for conflicts.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; オブジェクトの元の値は、基になるデータソースとの最後の同期の前に持っていた値です。同期が行われていない場合、元の値は &lt;code&gt;RowSet&lt;/code&gt; オブジェクトに入力された値になります。このメソッドは、アプリケーションがメソッド &lt;code&gt;acceptChanges&lt;/code&gt; を呼び出し、 &lt;code&gt;SyncProvider&lt;/code&gt; オブジェクトが実装されて競合をチェックしたときに内部的に呼び出されます。この場合、ライターは元の値を現在データソースにある値と比較して、競合をチェックします。</target>
        </trans-unit>
        <trans-unit id="bd50ee8db6416b8715b2e6cbee3cc76bfde62e5b" translate="yes" xml:space="preserve">
          <source>The original version.</source>
          <target state="translated">オリジナル版です。</target>
        </trans-unit>
        <trans-unit id="506f78a81958986cbe8e40931c749b16889f1e47" translate="yes" xml:space="preserve">
          <source>The original version. The language described in</source>
          <target state="translated">オリジナル版。に記載されている言語は</target>
        </trans-unit>
        <trans-unit id="9d75d36090eb242306d69c88b761090a66976467" translate="yes" xml:space="preserve">
          <source>The other &lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will behave as per the matching method on &lt;a href=&quot;localdatetime#with(java.time.temporal.TemporalField,long)&quot;&gt;&lt;code&gt;LocalDateTime&lt;/code&gt;&lt;/a&gt;. In this case, the offset is not part of the calculation and will be unchanged.</source>
          <target state="translated">&lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;他のフィールドは、&lt;a href=&quot;localdatetime#with(java.time.temporal.TemporalField,long)&quot;&gt; &lt;code&gt;LocalDateTime&lt;/code&gt; の&lt;/a&gt;マッチングメソッドに従って動作します。この場合、オフセットは計算の一部ではなく、変更されません。</target>
        </trans-unit>
        <trans-unit id="e747f59a3b61038baf891aa64aa8fe5a1fd4ec43" translate="yes" xml:space="preserve">
          <source>The other &lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will behave as per the matching method on &lt;a href=&quot;localdatetime#with(java.time.temporal.TemporalField,long)&quot;&gt;&lt;code&gt;LocalDateTime&lt;/code&gt;&lt;/a&gt;. The zone is not part of the calculation and will be unchanged. When converting back to &lt;code&gt;ZonedDateTime&lt;/code&gt;, if the local date-time is in an overlap, then the offset will be retained if possible, otherwise the earlier offset will be used. If in a gap, the local date-time will be adjusted forward by the length of the gap.</source>
          <target state="translated">&lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;他のフィールドは、&lt;a href=&quot;localdatetime#with(java.time.temporal.TemporalField,long)&quot;&gt; &lt;code&gt;LocalDateTime&lt;/code&gt; の&lt;/a&gt;マッチングメソッドに従って動作します。ゾーンは計算の一部ではなく、変更されません。 &lt;code&gt;ZonedDateTime&lt;/code&gt; に戻すときに、ローカルの日時が重複している場合は、可能であればオフセットが保持されます。それ以外の場合は、以前のオフセットが使用されます。ギャップがある場合、ローカルの日時はギャップの長さによって前方に調整されます。</target>
        </trans-unit>
        <trans-unit id="3bcf7353bed6c5b27e8d630d4c511ddeea17f3d5" translate="yes" xml:space="preserve">
          <source>The other &lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will behave as per the matching method on &lt;a href=&quot;localtime#with(java.time.temporal.TemporalField,long)&quot;&gt;&lt;code&gt;LocalTime.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; LocalTime}. In this case, the offset is not part of the calculation and will be unchanged.</source>
          <target state="translated">&lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;他のフィールドは、&lt;a href=&quot;localtime#with(java.time.temporal.TemporalField,long)&quot;&gt; &lt;code&gt;LocalTime.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; LocalTime}のマッチングメソッドに従って動作します。この場合、オフセットは計算の一部ではなく、変更されません。</target>
        </trans-unit>
        <trans-unit id="18b3f2a40bb0908a20b25677701f7f3b90d224d0" translate="yes" xml:space="preserve">
          <source>The other &lt;a href=&quot;offsetdatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will behave as per the matching method on &lt;a href=&quot;localdatetime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;LocalDateTime&lt;/code&gt;&lt;/a&gt;. In this case, the offset is not part of the calculation and will be unchanged.</source>
          <target state="translated">&lt;a href=&quot;offsetdatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;他のフィールドは、&lt;a href=&quot;localdatetime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;LocalDateTime&lt;/code&gt; の&lt;/a&gt;一致するメソッドに従って動作します。この場合、オフセットは計算の一部ではなく、変更されません。</target>
        </trans-unit>
        <trans-unit id="68ee463661f375d777c74d840458ef8c9dd98143" translate="yes" xml:space="preserve">
          <source>The other &lt;a href=&quot;offsettime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will behave as per the matching method on &lt;a href=&quot;localtime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;LocalTime.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt; LocalTime}. In this case, the offset is not part of the calculation and will be unchanged.</source>
          <target state="translated">その他の&lt;a href=&quot;offsettime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;localtime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;LocalTime.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt; LocalTime} のマッチングメソッドに従って動作します。この場合、オフセットは計算の一部ではなく、変更されません。</target>
        </trans-unit>
        <trans-unit id="485d2eb713590b6bb807248ee4372d5241f39e32" translate="yes" xml:space="preserve">
          <source>The other &lt;a href=&quot;zoneddatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will behave as per the matching method on &lt;a href=&quot;localdatetime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;LocalDateTime&lt;/code&gt;&lt;/a&gt;. The zone is not part of the calculation and will be unchanged. When converting back to &lt;code&gt;ZonedDateTime&lt;/code&gt;, if the local date-time is in an overlap, then the offset will be retained if possible, otherwise the earlier offset will be used. If in a gap, the local date-time will be adjusted forward by the length of the gap.</source>
          <target state="translated">&lt;a href=&quot;zoneddatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;他のフィールドは、&lt;a href=&quot;localdatetime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;LocalDateTime&lt;/code&gt; の&lt;/a&gt;一致するメソッドに従って動作します。ゾーンは計算の一部ではなく、変更されません。 &lt;code&gt;ZonedDateTime&lt;/code&gt; に変換し直すときに、ローカルの日付と時刻が重複している場合、可能であればオフセットが保持されます。それ以外の場合は、以前のオフセットが使用されます。ギャップがある場合、ローカルの日時はギャップの長さだけ前方に調整されます。</target>
        </trans-unit>
        <trans-unit id="731e6c57f9e5ae4ccf59a456cb37bb4538303681" translate="yes" xml:space="preserve">
          <source>The other approach initializes a parameter generator object using algorithm-specific semantics, which are represented by a set of algorithm-specific parameter generation values. To generate Diffie-Hellman system parameters, for example, the parameter generation values usually consist of the size of the prime modulus and the size of the random exponent, both specified in number of bits.</source>
          <target state="translated">もう1つのアプローチでは,アルゴリズム固有のパラメータ生成値のセットで表されるアルゴリズム固有のセマンティクスを用いてパラメータ生成オブジェクトを初期化します.例えば,Diffie-Hellman システムのパラメータを生成するために,パラメータ生成値は通常,素弾性係数のサイズと乱数指数のサイズで構成され,両方ともビット数で指定されます.</target>
        </trans-unit>
        <trans-unit id="55d2cad5bd07439d3de3adc5deca101f2c106f10" translate="yes" xml:space="preserve">
          <source>The other syntaxes defined by RFC 2609 are not currently supported by this class.</source>
          <target state="translated">RFC 2609 で定義されている他の構文は、現在このクラスではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="4fd3d8cfa50630b0e53099a212e26fef3d644784" translate="yes" xml:space="preserve">
          <source>The other techniques all use the following approach: if the &lt;code&gt;java.rmi.server.ignoreStubClasses&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt; (case insensitive) or if a static stub cannot be found, stubs are generated dynamically using &lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; objects. Otherwise, static stubs are used.</source>
          <target state="translated">他の手法はすべて、次のアプローチを使用します &lt;code&gt;java.rmi.server.ignoreStubClasses&lt;/code&gt; プロパティが &lt;code&gt;true&lt;/code&gt; （大文字と小文字を区別しない）の場合、または静的スタブが見つからない場合、スタブは&lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt;オブジェクトを使用して動的に生成されます。それ以外の場合は、静的スタブが使用されます。</target>
        </trans-unit>
        <trans-unit id="7f670b4981f0a114b5c79dad80bac9bc5c125b90" translate="yes" xml:space="preserve">
          <source>The other type of pairs consists of those that create Java language Bindings, the values are usually represented in scripts by the corresponding keys or by decorated forms of them.</source>
          <target state="translated">他のタイプのペアは、Java言語のバインディングを作成するもので、値は通常、対応するキーまたはそれらの装飾された形でスクリプトで表現されます。</target>
        </trans-unit>
        <trans-unit id="57d3406bf2a697594830c4ab80c8c1b86765dcee" translate="yes" xml:space="preserve">
          <source>The other version of the &lt;code&gt;acceptChanges&lt;/code&gt; method is not passed a connection because it uses the &lt;code&gt;Connection&lt;/code&gt; object already defined within the &lt;code&gt;RowSet&lt;/code&gt; object, which is the connection used for populating it initially.</source>
          <target state="translated">他のバージョンの &lt;code&gt;acceptChanges&lt;/code&gt; メソッドは、 &lt;code&gt;RowSet&lt;/code&gt; オブジェクト内ですでに定義されている &lt;code&gt;Connection&lt;/code&gt; オブジェクトを使用しているため、接続は渡されません。これは、最初にデータを設定するために使用される接続です。</target>
        </trans-unit>
        <trans-unit id="5b004cd696742da98b715116f439633a968fa96c" translate="yes" xml:space="preserve">
          <source>The other way to create a thread is to declare a class that implements the &lt;code&gt;Runnable&lt;/code&gt; interface. That class then implements the &lt;code&gt;run&lt;/code&gt; method. An instance of the class can then be allocated, passed as an argument when creating &lt;code&gt;Thread&lt;/code&gt;, and started. The same example in this other style looks like the following:</source>
          <target state="translated">スレッドを作成するもう1つの方法は、 &lt;code&gt;Runnable&lt;/code&gt; インターフェイスを実装するクラスを宣言することです。次に、そのクラスは &lt;code&gt;run&lt;/code&gt; メソッドを実装します。次に、クラスのインスタンスを割り当て、 &lt;code&gt;Thread&lt;/code&gt; の作成時に引数として渡して、開始できます。この他のスタイルの同じ例は、次のようになります。</target>
        </trans-unit>
        <trans-unit id="583eff28c5b619ca29d9ec50a582a7ac4826c09b" translate="yes" xml:space="preserve">
          <source>The outer range is &lt;code&gt;minimum,maximum&lt;/code&gt; and the inner range is &lt;code&gt;value,value+extent&lt;/code&gt;. The inner range must lie within the outer one, i.e. &lt;code&gt;value&lt;/code&gt; must be less than or equal to &lt;code&gt;maximum&lt;/code&gt; and &lt;code&gt;value+extent&lt;/code&gt; must greater than or equal to &lt;code&gt;minimum&lt;/code&gt;, and &lt;code&gt;maximum&lt;/code&gt; must be greater than or equal to &lt;code&gt;minimum&lt;/code&gt;. There are a few features of this model that one might find a little surprising. These quirks exist for the convenience of the Swing BoundedRangeModel clients, such as &lt;code&gt;Slider&lt;/code&gt; and &lt;code&gt;ScrollBar&lt;/code&gt;.</source>
          <target state="translated">外側の範囲は &lt;code&gt;minimum,maximum&lt;/code&gt; あり、内側の範囲は &lt;code&gt;value,value+extent&lt;/code&gt; です。内側の範囲、すなわち、外側の内に存在しなければならない &lt;code&gt;value&lt;/code&gt; でなければならない未満又は等しい &lt;code&gt;maximum&lt;/code&gt; と &lt;code&gt;value+extent&lt;/code&gt; よりマスト大きいかまたは等しい &lt;code&gt;minimum&lt;/code&gt; 、および &lt;code&gt;maximum&lt;/code&gt; より大きいか等しくなければならない &lt;code&gt;minimum&lt;/code&gt; 。このモデルには、少し驚くかもしれないいくつかの機能があります。これらの癖は、 &lt;code&gt;Slider&lt;/code&gt; や &lt;code&gt;ScrollBar&lt;/code&gt; などのSwingBoundedRangeModelクライアントの便宜のために存在します。</target>
        </trans-unit>
        <trans-unit id="681df9280815be16ce85cad82cd9590490576412" translate="yes" xml:space="preserve">
          <source>The outgoing message info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2bff297e85d996a4c78e24eb08ae10d924ada6b" translate="yes" xml:space="preserve">
          <source>The outline of the &lt;code&gt;Shape&lt;/code&gt; is extracted using the &lt;a href=&quot;shape#getPathIterator(java.awt.geom.AffineTransform)&quot;&gt;&lt;code&gt;getPathIterator&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Shape&lt;/code&gt;, which returns a &lt;a href=&quot;geom/pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; object that iterates along the boundary of the &lt;code&gt;Shape&lt;/code&gt;.</source>
          <target state="translated">輪郭 &lt;code&gt;Shape&lt;/code&gt; 用いて抽出される&lt;a href=&quot;shape#getPathIterator(java.awt.geom.AffineTransform)&quot;&gt; &lt;code&gt;getPathIterator&lt;/code&gt; &lt;/a&gt;方法 &lt;code&gt;Shape&lt;/code&gt; 返す&lt;a href=&quot;geom/pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;オブジェクトをその境界に沿って繰り返し処理 &lt;code&gt;Shape&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c8adc64c31daab6de1a7235e69f69308c772876" translate="yes" xml:space="preserve">
          <source>The output IO stream is buffered, but is flushed after each &lt;code&gt;LogRecord&lt;/code&gt; is written.</source>
          <target state="translated">出力IOストリームはバッファリングされ &lt;code&gt;LogRecord&lt;/code&gt; が、各LogRecordが書き込まれた後にフラッシュされます。</target>
        </trans-unit>
        <trans-unit id="26459ea2edbcfd100c25cd1785eb8ab10711495d" translate="yes" xml:space="preserve">
          <source>The output device is marking media.</source>
          <target state="translated">出力装置は、メディアをマーキングしています。</target>
        </trans-unit>
        <trans-unit id="5eca022c3bb2070b54c1b4b8f2c8671145a20cab" translate="yes" xml:space="preserve">
          <source>The output device is marking media. This value is useful for printers which spend a great deal of time processing (1) when no marking is happening and then want to show that marking is now happening or (2) when the job is in the process of being canceled or aborted while the job remains in the &lt;code&gt;PROCESSING&lt;/code&gt; state, but the marking has not yet stopped so that impression or sheet counts are still increasing for the job.</source>
          <target state="translated">出力デバイスはメディアをマーキングしています。この値は、（1）マーキングが行われていないときにマーキングが行われていることを示したい場合、または（2）ジョブがキャンセルまたは中止されている間にジョブがキャンセルまたは中止されているときに処理に多くの時間を費やすプリンターに役立ちます。ジョブは &lt;code&gt;PROCESSING&lt;/code&gt; 状態のままですが、マーキングはまだ停止していないため、ジョブのインプレッション数またはシート数はまだ増加しています。</target>
        </trans-unit>
        <trans-unit id="84e58d292a5274ac7143c456712868ef9a668dc0" translate="yes" xml:space="preserve">
          <source>The output device is marking media. This value is useful for printers which spend a great deal of time processing (1) when no marking is happening and then want to show that marking is now happening or (2) when the job is in the process of being canceled or aborted while the job remains in the PROCESSING state, but the marking has not yet stopped so that impression or sheet counts are still increasing for the job.</source>
          <target state="translated">出力デバイスはマーキングメディアである。この値は、(1)マーキングが発生していないときに処理に多くの時間を費やし、その後マーキングが発生していることを示したい場合、または(2)ジョブが処理中の状態のままであるが、マーキングがまだ停止していないために、インプレッションまたはシートカウントがジョブに対してまだ増加している間に、ジョブがキャンセルまたは中止されるプロセス中である場合に有用である。</target>
        </trans-unit>
        <trans-unit id="688afe174c47eb9329383daa0efbfa513f94d552" translate="yes" xml:space="preserve">
          <source>The output is right-justified within the &lt;code&gt;width&lt;/code&gt;</source>
          <target state="translated">出力は &lt;code&gt;width&lt;/code&gt; 内で右寄せされます</target>
        </trans-unit>
        <trans-unit id="b74ff8ee45b0b8f3cea227a5cb8b0ca2512e0fa1" translate="yes" xml:space="preserve">
          <source>The output is:</source>
          <target state="translated">出力されます。</target>
        </trans-unit>
        <trans-unit id="804ab937140ab8aceea397468da48794c9e5c156" translate="yes" xml:space="preserve">
          <source>The output must have been set beforehand using either the &lt;code&gt;setOutput&lt;/code&gt; method.</source>
          <target state="translated">出力は、あらかじめ &lt;code&gt;setOutput&lt;/code&gt; メソッドを使用して設定しておく必要があります。</target>
        </trans-unit>
        <trans-unit id="5834d251964586e73d7e57cd4080802c92b44a58" translate="yes" xml:space="preserve">
          <source>The output must have been set beforehand using the &lt;code&gt;setOutput&lt;/code&gt; method.</source>
          <target state="translated">出力は、 &lt;code&gt;setOutput&lt;/code&gt; メソッドを使用して事前に設定しておく必要があります。</target>
        </trans-unit>
        <trans-unit id="7f7bcdd198ccdce248e7f31e3c4dc8fb9ab43140" translate="yes" xml:space="preserve">
          <source>The output of formatting can include optional sections, which may be nested. An optional section is started by calling &lt;a href=&quot;#optionalStart()&quot;&gt;&lt;code&gt;optionalStart()&lt;/code&gt;&lt;/a&gt; and ended using this method (or at the end of the builder).</source>
          <target state="translated">フォーマットの出力には、ネストできるオプションのセクションを含めることができます。オプションのセクションは、&lt;a href=&quot;#optionalStart()&quot;&gt; &lt;code&gt;optionalStart()&lt;/code&gt; &lt;/a&gt;を呼び出すことによって開始され、このメソッドを使用して（またはビルダーの最後で）終了します。</target>
        </trans-unit>
        <trans-unit id="0c137f9ad4568084e0eada82e7dc19a7e9d63517" translate="yes" xml:space="preserve">
          <source>The output of formatting can include optional sections, which may be nested. An optional section is started by calling &lt;a href=&quot;datetimeformatterbuilder#optionalStart--&quot;&gt;&lt;code&gt;optionalStart()&lt;/code&gt;&lt;/a&gt; and ended using this method (or at the end of the builder).</source>
          <target state="translated">書式設定の出力には、入れ子になったオプションのセクションを含めることができます。オプションのセクションは、&lt;a href=&quot;datetimeformatterbuilder#optionalStart--&quot;&gt; &lt;code&gt;optionalStart()&lt;/code&gt; &lt;/a&gt;を呼び出すことによって開始され、このメソッドを使用して（またはビルダーの最後に）終了します。</target>
        </trans-unit>
        <trans-unit id="30bee059122c0e2413c350a5135e567ef038d6df" translate="yes" xml:space="preserve">
          <source>The output of formatting can include optional sections, which may be nested. An optional section is started by calling this method and ended by calling &lt;a href=&quot;#optionalEnd()&quot;&gt;&lt;code&gt;optionalEnd()&lt;/code&gt;&lt;/a&gt; or by ending the build process.</source>
          <target state="translated">フォーマットの出力には、ネストできるオプションのセクションを含めることができます。オプションのセクションは、このメソッドを呼び出すことで開始され、&lt;a href=&quot;#optionalEnd()&quot;&gt; &lt;code&gt;optionalEnd()&lt;/code&gt; を&lt;/a&gt;呼び出すか、ビルドプロセスを終了することで終了します。</target>
        </trans-unit>
        <trans-unit id="4ace7699a2d9bc0b73e1579908c8e14ceff6a861" translate="yes" xml:space="preserve">
          <source>The output of formatting can include optional sections, which may be nested. An optional section is started by calling this method and ended by calling &lt;a href=&quot;datetimeformatterbuilder#optionalEnd--&quot;&gt;&lt;code&gt;optionalEnd()&lt;/code&gt;&lt;/a&gt; or by ending the build process.</source>
          <target state="translated">書式設定の出力には、入れ子になったオプションのセクションを含めることができます。オプションセクションは、このメソッドを呼び出すことによって開始され、&lt;a href=&quot;datetimeformatterbuilder#optionalEnd--&quot;&gt; &lt;code&gt;optionalEnd()&lt;/code&gt; を&lt;/a&gt;呼び出すか、ビルドプロセスを終了することによって終了します。</target>
        </trans-unit>
        <trans-unit id="f4b15ced407c23c236dd27a5b8940ab033961526" translate="yes" xml:space="preserve">
          <source>The output stream for writing the attributes of a custom mapped user-defined type (UDT) back to the database. The driver uses this interface internally, and its methods are never directly invoked by an application programmer.</source>
          <target state="translated">カスタムマップされたユーザ定義型(UDT)の属性をデータベースに書き戻すための出力ストリーム。ドライバは内部的にこのインタフェースを使用し、そのメソッドがアプリケーションプログラマによって直接呼び出されることはありません。</target>
        </trans-unit>
        <trans-unit id="f2644bde300cd9bee2aafe476022bed0d8f7f809" translate="yes" xml:space="preserve">
          <source>The output stream for writing the attributes of a custom-mapped user-defined type (UDT) back to the database.</source>
          <target state="translated">カスタムマップされたユーザ定義型(UDT)の属性をデータベースに書き戻すための出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="5291fc4ff823e118140880807207e4a84cdb270e" translate="yes" xml:space="preserve">
          <source>The output stream for writing the attributes of a custom-mapped user-defined type (UDT) back to the database. The driver uses this interface internally, and its methods are never directly invoked by an application programmer.</source>
          <target state="translated">カスタムマップされたユーザ定義型(UDT)の属性をデータベースに書き戻すための出力ストリーム。ドライバは内部的にこのインタフェースを使用し、そのメソッドがアプリケーションプログラマによって直接呼び出されることはありません。</target>
        </trans-unit>
        <trans-unit id="5c5cc4efa6ae535ea715a0ada32fc5dd1b98a681" translate="yes" xml:space="preserve">
          <source>The output stream for writing the attributes of a user-defined type back to the database.</source>
          <target state="translated">ユーザー定義型の属性をデータベースに書き戻すための出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="bf44ebf553c6d8e04b4e02abdc3300d8ca5d0e43" translate="yes" xml:space="preserve">
          <source>The output stream for writing the attributes of a user-defined type back to the database. This interface, used only for custom mapping, is used by the driver, and its methods are never directly invoked by a programmer.</source>
          <target state="translated">ユーザー定義型の属性をデータベースに書き戻すための出力ストリーム。このインターフェイスは、カスタムマッピングのためだけに使用され、ドライバによって使用され、そのメソッドがプログラマによって直接呼び出されることはありません。</target>
        </trans-unit>
        <trans-unit id="c86979c68dfa75a5ea8a4fa4ebc1ad3a84cf42c6" translate="yes" xml:space="preserve">
          <source>The output will be in the ISO-8601 format &lt;code&gt;uuuu-MM-dd&lt;/code&gt;.</source>
          <target state="translated">出力はISO-8601形式の &lt;code&gt;uuuu-MM-dd&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="9b633ef40153b0f7e5fd9c57a4eaf98a09ebc8bd" translate="yes" xml:space="preserve">
          <source>The output will be in the ISO-8601 period format. A zero period will be represented as zero days, 'P0D'.</source>
          <target state="translated">出力は、ISO-8601の期間フォーマットになります。ゼロ期間はゼロ日、'P0D'として表現されます。</target>
        </trans-unit>
        <trans-unit id="68588c3b93830eb7b05eaa2a32bd88e2e6401d4a" translate="yes" xml:space="preserve">
          <source>The output will be in the format &lt;code&gt;--MM-dd&lt;/code&gt;:</source>
          <target state="translated">出力は &lt;code&gt;--MM-dd&lt;/code&gt; の形式になります。</target>
        </trans-unit>
        <trans-unit id="bdf3023f62cba73bbd1a514729bd330ebd38319c" translate="yes" xml:space="preserve">
          <source>The output will be in the format &lt;code&gt;uuuu-MM&lt;/code&gt;:</source>
          <target state="translated">出力は &lt;code&gt;uuuu-MM&lt;/code&gt; の形式になります。</target>
        </trans-unit>
        <trans-unit id="dd014c7d6b437b473d734099818c5531d372f334" translate="yes" xml:space="preserve">
          <source>The output will be one of the following ISO-8601 formats:</source>
          <target state="translated">出力は以下のISO-8601形式のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="705acc7715ef6cf8f5d79566a8f63147ba3837f5" translate="yes" xml:space="preserve">
          <source>The output will include the full local date-time.</source>
          <target state="translated">出力には、完全なローカルの日付時刻が含まれます。</target>
        </trans-unit>
        <trans-unit id="1f2e50f340847768af08514b08ccbbc3cfbeecb6" translate="yes" xml:space="preserve">
          <source>The output will include the full local date.</source>
          <target state="translated">出力には、ローカルの完全な日付が含まれます。</target>
        </trans-unit>
        <trans-unit id="569b52322e6eb839ec665dce679a13d3f5ed0afe" translate="yes" xml:space="preserve">
          <source>The output will include the full zoned date-time.</source>
          <target state="translated">出力には、完全にゾーニングされた日付時間が含まれます。</target>
        </trans-unit>
        <trans-unit id="dc58e9e7951c47f5031287fcfab530275c088ee0" translate="yes" xml:space="preserve">
          <source>The output will include the period amounts and chronology.</source>
          <target state="translated">出力されるのは、期間金額と年表です。</target>
        </trans-unit>
        <trans-unit id="234157b711ff9b8171f42b7b203bce27d2d2b18a" translate="yes" xml:space="preserve">
          <source>The output with different values for &lt;code&gt;fileCount&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;fileCount&lt;/code&gt; の値が異なる出力：</target>
        </trans-unit>
        <trans-unit id="e695466f61d86736de0f15cfe8d369fc29207abf" translate="yes" xml:space="preserve">
          <source>The outside border.</source>
          <target state="translated">外側の境界線。</target>
        </trans-unit>
        <trans-unit id="7efda311ebc629dc550cc733ff5c1932095ad7e5" translate="yes" xml:space="preserve">
          <source>The oval covers an area that is &lt;code&gt;width&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; pixels wide and &lt;code&gt;height&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; pixels tall.</source>
          <target state="translated">The oval covers an area that is &lt;code&gt;width&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; pixels wide and &lt;code&gt;height&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; pixels tall.</target>
        </trans-unit>
        <trans-unit id="a40c1fc8cccf601ed7cf89f2562ee058faba7bf0" translate="yes" xml:space="preserve">
          <source>The overall authentication succeeds only if all</source>
          <target state="translated">全体の認証が成功するのは、すべての</target>
        </trans-unit>
        <trans-unit id="afc837de431bba096268be7bd23f007fce85a68b" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a &lt;code&gt;char&lt;/code&gt; array by the method &lt;a href=&quot;character#toChars(int)&quot;&gt;&lt;code&gt;Character.toChars(int)&lt;/code&gt;&lt;/a&gt; and the character in that array were then &lt;a href=&quot;#append(char%5B%5D)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">The overall effect is exactly as if the argument were converted to a &lt;code&gt;char&lt;/code&gt; array by the method &lt;a href=&quot;character#toChars(int)&quot;&gt; &lt;code&gt;Character.toChars(int)&lt;/code&gt; &lt;/a&gt; and the character in that array were then &lt;a href=&quot;#append(char%5B%5D)&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt; to this character sequence.</target>
        </trans-unit>
        <trans-unit id="f59ea59df05be113fd52c10e956f63fb5a862338" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a &lt;code&gt;char&lt;/code&gt; array by the method &lt;a href=&quot;character#toChars-int-&quot;&gt;&lt;code&gt;Character.toChars(int)&lt;/code&gt;&lt;/a&gt; and the character in that array were then &lt;a href=&quot;stringbuffer#append-char:A-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;character#toChars-int-&quot;&gt; &lt;code&gt;Character.toChars(int)&lt;/code&gt; &lt;/a&gt;によって &lt;code&gt;char&lt;/code&gt; 配列に変換され、その配列内の文字がこの文字シーケンスに&lt;a href=&quot;stringbuffer#append-char:A-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="be6d5695ee207edc76227a4e67c6ab0ba325ae3c" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a &lt;code&gt;char&lt;/code&gt; array by the method &lt;a href=&quot;character#toChars-int-&quot;&gt;&lt;code&gt;Character.toChars(int)&lt;/code&gt;&lt;/a&gt; and the character in that array were then &lt;a href=&quot;stringbuilder#append-char:A-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;character#toChars-int-&quot;&gt; &lt;code&gt;Character.toChars(int)&lt;/code&gt; &lt;/a&gt;によって &lt;code&gt;char&lt;/code&gt; 配列に変換され、その配列内の文字がこの文字シーケンスに&lt;a href=&quot;stringbuilder#append-char:A-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="63d704d3e8a8db51d045134a1bf4500866ab995c" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(boolean)&quot;&gt;&lt;code&gt;String.valueOf(boolean)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(boolean)&quot;&gt; &lt;code&gt;String.valueOf(boolean)&lt;/code&gt; &lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt; to this character sequence.</target>
        </trans-unit>
        <trans-unit id="a0c418496e1ac731b49fd8cb836ebff68932a9ef" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(boolean)&quot;&gt;&lt;code&gt;String.valueOf(boolean)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;appendable#append(java.lang.CharSequence)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d22124f42c4fcc9202445b436eaf6b2b6492d0" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(char%5B%5D)&quot;&gt;&lt;code&gt;String.valueOf(char[])&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(char%5B%5D)&quot;&gt; &lt;code&gt;String.valueOf(char[])&lt;/code&gt; &lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt; to this character sequence.</target>
        </trans-unit>
        <trans-unit id="79d6f9eea850114d7a9b202fc0b8b89d51b84cf8" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(char%5B%5D)&quot;&gt;&lt;code&gt;String.valueOf(char[])&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;appendable#append(java.lang.CharSequence)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c9906a666b00f6a09e068c9e5c534ed752c25f" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(char)&quot;&gt;&lt;code&gt;String.valueOf(char)&lt;/code&gt;&lt;/a&gt;, and the character in that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(char)&quot;&gt; &lt;code&gt;String.valueOf(char)&lt;/code&gt; &lt;/a&gt;, and the character in that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt; to this character sequence.</target>
        </trans-unit>
        <trans-unit id="3b406a14172d286cf69abb34f348310597e5b2f0" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(double)&quot;&gt;&lt;code&gt;String.valueOf(char)&lt;/code&gt;&lt;/a&gt;, and the character in that string were then &lt;a href=&quot;appendable#append(java.lang.CharSequence)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c75e21f2598dc94c7d1497d11bff7a1f046139" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(double)&quot;&gt;&lt;code&gt;String.valueOf(double)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(double)&quot;&gt; &lt;code&gt;String.valueOf(double)&lt;/code&gt; &lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt; to this character sequence.</target>
        </trans-unit>
        <trans-unit id="5ae21a031715b312101629e3479ceb9126981d40" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(double)&quot;&gt;&lt;code&gt;String.valueOf(double)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;appendable#append(java.lang.CharSequence)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae62dc7765790bf27db11bfb64a8630bd77f4bb" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(double)&quot;&gt;&lt;code&gt;String.valueOf(float)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;appendable#append(java.lang.CharSequence)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ade25be47848fe9b0e40fbb734bc54e132b32e" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(double)&quot;&gt;&lt;code&gt;String.valueOf(int)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;appendable#append(java.lang.CharSequence)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648556c8e68f153f15818f90033112d47cf3b47d" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(double)&quot;&gt;&lt;code&gt;String.valueOf(long)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;appendable#append(java.lang.CharSequence)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310cb9a994c29cdc77dae7305d38d1b15d9afe1f" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(float)&quot;&gt;&lt;code&gt;String.valueOf(float)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(float)&quot;&gt; &lt;code&gt;String.valueOf(float)&lt;/code&gt; &lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt; to this character sequence.</target>
        </trans-unit>
        <trans-unit id="1d6aa9e36873bbad4c0d33292b2e0cafa71c5e92" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(int)&quot;&gt;&lt;code&gt;String.valueOf(int)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(int)&quot;&gt; &lt;code&gt;String.valueOf(int)&lt;/code&gt; &lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt; to this character sequence.</target>
        </trans-unit>
        <trans-unit id="8cae7457cdd163d073210668c444483abb9018f0" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(java.lang.Object)&quot;&gt;&lt;code&gt;String.valueOf(Object)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(java.lang.Object)&quot;&gt; &lt;code&gt;String.valueOf(Object)&lt;/code&gt; &lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt; to this character sequence.</target>
        </trans-unit>
        <trans-unit id="46b4af2589cb8859e8c23006e8d86372909b6580" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(java.lang.Object)&quot;&gt;&lt;code&gt;String.valueOf(Object)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;appendable#append(java.lang.CharSequence)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e107f2f3b6c5daae645f36d7c1aef0539272701e" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(long)&quot;&gt;&lt;code&gt;String.valueOf(long)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf(long)&quot;&gt; &lt;code&gt;String.valueOf(long)&lt;/code&gt; &lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt; to this character sequence.</target>
        </trans-unit>
        <trans-unit id="57cba855e92025ba54d5320f086b0dbf8cfec25b" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf-boolean-&quot;&gt;&lt;code&gt;String.valueOf(boolean)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-boolean-&quot;&gt; &lt;code&gt;String.valueOf(boolean)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字がこの文字シーケンスに&lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="e7df0f951a6156117783dfb422bf5ed58fb06623" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf-boolean-&quot;&gt;&lt;code&gt;String.valueOf(boolean)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-boolean-&quot;&gt; &lt;code&gt;String.valueOf(boolean)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字がこの文字シーケンスに&lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="845b434e13a8aaf2c9d866bceb0cd542c9f36bae" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf-char-&quot;&gt;&lt;code&gt;String.valueOf(char)&lt;/code&gt;&lt;/a&gt;, and the character in that string were then &lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-char-&quot;&gt; &lt;code&gt;String.valueOf(char)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列内の文字がこの文字シーケンスに&lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="07f151c65ac0110f86fef11dd3f3f19d05c7cbc5" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf-char-&quot;&gt;&lt;code&gt;String.valueOf(char)&lt;/code&gt;&lt;/a&gt;, and the character in that string were then &lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-char-&quot;&gt; &lt;code&gt;String.valueOf(char)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列内の文字がこの文字シーケンスに&lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="e4fdc466e4bb623ea414c11f74ab2ab2710302ca" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf-char:A-&quot;&gt;&lt;code&gt;String.valueOf(char[])&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-char:A-&quot;&gt; &lt;code&gt;String.valueOf(char[])&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字がこの文字シーケンスに&lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="157765951de65cc003ce1491b4ef26e8c342399d" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf-char:A-&quot;&gt;&lt;code&gt;String.valueOf(char[])&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-char:A-&quot;&gt; &lt;code&gt;String.valueOf(char[])&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字がこの文字シーケンスに&lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="9c95847b7e89b7021cc6b64b5b06284de479600b" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf-double-&quot;&gt;&lt;code&gt;String.valueOf(double)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-double-&quot;&gt; &lt;code&gt;String.valueOf(double)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字がこの文字シーケンスに&lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="9e4e8c68ad219b2ca4384b64637aee75cfb33a09" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf-double-&quot;&gt;&lt;code&gt;String.valueOf(double)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-double-&quot;&gt; &lt;code&gt;String.valueOf(double)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字がこの文字シーケンスに&lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="047be1cada456ef70fd59c3ee3f044b4b3346662" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf-float-&quot;&gt;&lt;code&gt;String.valueOf(float)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-float-&quot;&gt; &lt;code&gt;String.valueOf(float)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字がこの文字シーケンスに&lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="e5533d40c6ced212dd75bac0fd6a34c6fac9422b" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf-float-&quot;&gt;&lt;code&gt;String.valueOf(float)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-float-&quot;&gt; &lt;code&gt;String.valueOf(float)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字がこの文字シーケンスに&lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="55f999bd369940307c24bebb765ca5b872fb76b7" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf-int-&quot;&gt;&lt;code&gt;String.valueOf(int)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-int-&quot;&gt; &lt;code&gt;String.valueOf(int)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字がこの文字シーケンスに&lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="5b879652398b41d309d1476f2c2e969058129bf6" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf-int-&quot;&gt;&lt;code&gt;String.valueOf(int)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-int-&quot;&gt; &lt;code&gt;String.valueOf(int)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字がこの文字シーケンスに&lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="27d2cb16c3fe6c766ce861a61273f35f95a4220f" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf-java.lang.Object-&quot;&gt;&lt;code&gt;String.valueOf(Object)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-java.lang.Object-&quot;&gt; &lt;code&gt;String.valueOf(Object)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字がこの文字シーケンスに&lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="2f3315b830429e7a9bc3e205fa95bae92504588c" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf-java.lang.Object-&quot;&gt;&lt;code&gt;String.valueOf(Object)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-java.lang.Object-&quot;&gt; &lt;code&gt;String.valueOf(Object)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字がこの文字シーケンスに&lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="5885c63fcfaae322b7ea095a9fac9b6f29e099cc" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf-long-&quot;&gt;&lt;code&gt;String.valueOf(long)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-long-&quot;&gt; &lt;code&gt;String.valueOf(long)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字がこの文字シーケンスに&lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="7336e95827ca7bca837791a580e9cd1b62d7c706" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the argument were converted to a string by the method &lt;a href=&quot;string#valueOf-long-&quot;&gt;&lt;code&gt;String.valueOf(long)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-long-&quot;&gt; &lt;code&gt;String.valueOf(long)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字がこの文字シーケンスに&lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="4e1c324e343a3702507d78ac2247b82a2b6c6bd4" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the arguments were converted to a string by the method &lt;a href=&quot;string#valueOf(char%5B%5D,int,int)&quot;&gt;&lt;code&gt;String.valueOf(char[],int,int)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">The overall effect is exactly as if the arguments were converted to a string by the method &lt;a href=&quot;string#valueOf(char%5B%5D,int,int)&quot;&gt; &lt;code&gt;String.valueOf(char[],int,int)&lt;/code&gt; &lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#append(java.lang.String)&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt; to this character sequence.</target>
        </trans-unit>
        <trans-unit id="a84a40cce8885c87e5333813410de7216e2a669b" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the arguments were converted to a string by the method &lt;a href=&quot;string#valueOf(char%5B%5D,int,int)&quot;&gt;&lt;code&gt;String.valueOf(char[],int,int)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;appendable#append(java.lang.CharSequence)&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f590370647a03195ad36ca13c3dafc9d17830de" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the arguments were converted to a string by the method &lt;a href=&quot;string#valueOf-char:A-int-int-&quot;&gt;&lt;code&gt;String.valueOf(char[],int,int)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-char:A-int-int-&quot;&gt; &lt;code&gt;String.valueOf(char[],int,int)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字がこの文字シーケンスに&lt;a href=&quot;stringbuffer#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="667446b3ce7a38fb13fed317aa887df961ff9edc" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the arguments were converted to a string by the method &lt;a href=&quot;string#valueOf-char:A-int-int-&quot;&gt;&lt;code&gt;String.valueOf(char[],int,int)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt;&lt;code&gt;appended&lt;/code&gt;&lt;/a&gt; to this character sequence.</source>
          <target state="translated">全体的な効果は、引数がメソッド&lt;a href=&quot;string#valueOf-char:A-int-int-&quot;&gt; &lt;code&gt;String.valueOf(char[],int,int)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字がこの文字シーケンスに&lt;a href=&quot;stringbuilder#append-java.lang.String-&quot;&gt; &lt;code&gt;appended&lt;/code&gt; &lt;/a&gt;れた場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="2c9fa9ac27b9581edc1bbe2ca820bbe9560c4ae9" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(boolean)&quot;&gt;&lt;code&gt;String.valueOf(boolean)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.CharSequence)&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3431e2061cfa7271649a78b90242cab86e4bea3" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(boolean)&quot;&gt;&lt;code&gt;String.valueOf(boolean)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.String)&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(boolean)&quot;&gt; &lt;code&gt;String.valueOf(boolean)&lt;/code&gt; &lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.String)&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt; into this character sequence at the indicated offset.</target>
        </trans-unit>
        <trans-unit id="716fe619a79cc3f3409b762c7f20428af3b07c46" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(char%5B%5D)&quot;&gt;&lt;code&gt;String.valueOf(char[])&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.CharSequence)&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9046f217f1dadf54f1e0afa4a10e802011cf9b14" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(char%5B%5D)&quot;&gt;&lt;code&gt;String.valueOf(char[])&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.String)&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(char%5B%5D)&quot;&gt; &lt;code&gt;String.valueOf(char[])&lt;/code&gt; &lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.String)&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt; into this character sequence at the indicated offset.</target>
        </trans-unit>
        <trans-unit id="8c3a3f0eefdc6cd0623ccb4427387514024d89d5" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(char)&quot;&gt;&lt;code&gt;String.valueOf(char)&lt;/code&gt;&lt;/a&gt;, and the character in that string were then &lt;a href=&quot;#insert(int,java.lang.String)&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(char)&quot;&gt; &lt;code&gt;String.valueOf(char)&lt;/code&gt; &lt;/a&gt;, and the character in that string were then &lt;a href=&quot;#insert(int,java.lang.String)&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt; into this character sequence at the indicated offset.</target>
        </trans-unit>
        <trans-unit id="d7b361b4885492c0840c3b0b07aed1652fb821c9" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(double)&quot;&gt;&lt;code&gt;String.valueOf(char)&lt;/code&gt;&lt;/a&gt;, and the character in that string were then &lt;a href=&quot;#insert(int,java.lang.CharSequence)&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a397fdc01f4a35195fc8f993ab704964197f4af" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(double)&quot;&gt;&lt;code&gt;String.valueOf(double)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.CharSequence)&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70945df54158f189337be144bc0908fcb472348" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(double)&quot;&gt;&lt;code&gt;String.valueOf(double)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.String)&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(double)&quot;&gt; &lt;code&gt;String.valueOf(double)&lt;/code&gt; &lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.String)&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt; into this character sequence at the indicated offset.</target>
        </trans-unit>
        <trans-unit id="78752bca97244ec67e6ffcc0d5be846b93eee961" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(double)&quot;&gt;&lt;code&gt;String.valueOf(float)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.CharSequence)&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0344a438f1f77d2d0b3423fdd01a5320939d98e5" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(double)&quot;&gt;&lt;code&gt;String.valueOf(int)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.CharSequence)&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038665001103d37a0d8c60d862e1f0fb47f8a2f0" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(double)&quot;&gt;&lt;code&gt;String.valueOf(long)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.CharSequence)&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b66fbd5988862f4b6fb8d4aa435376a0f89711" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(float)&quot;&gt;&lt;code&gt;String.valueOf(float)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.String)&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(float)&quot;&gt; &lt;code&gt;String.valueOf(float)&lt;/code&gt; &lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.String)&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt; into this character sequence at the indicated offset.</target>
        </trans-unit>
        <trans-unit id="245c9230d35217221e075ed545abf2fbc8278dc0" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(int)&quot;&gt;&lt;code&gt;String.valueOf(int)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.String)&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(int)&quot;&gt; &lt;code&gt;String.valueOf(int)&lt;/code&gt; &lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.String)&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt; into this character sequence at the indicated offset.</target>
        </trans-unit>
        <trans-unit id="7fab1f7ef32442fb3c1aec6dae00f743da5819c7" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(java.lang.Object)&quot;&gt;&lt;code&gt;String.valueOf(Object)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.CharSequence)&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a313be5db64537c2a2628855eb4e85e00683feb9" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(java.lang.Object)&quot;&gt;&lt;code&gt;String.valueOf(Object)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.String)&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(java.lang.Object)&quot;&gt; &lt;code&gt;String.valueOf(Object)&lt;/code&gt; &lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.String)&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt; into this character sequence at the indicated offset.</target>
        </trans-unit>
        <trans-unit id="59d643a3df0c9b21da2bb822cd6057390f54e373" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(long)&quot;&gt;&lt;code&gt;String.valueOf(long)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.String)&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf(long)&quot;&gt; &lt;code&gt;String.valueOf(long)&lt;/code&gt; &lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;#insert(int,java.lang.String)&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt; into this character sequence at the indicated offset.</target>
        </trans-unit>
        <trans-unit id="4e3ad882f1370e6a19c92030d372ebea043ac08c" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf-boolean-&quot;&gt;&lt;code&gt;String.valueOf(boolean)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuffer#insert-int-java.lang.String-&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">全体的な効果は、2番目の引数がメソッド&lt;a href=&quot;string#valueOf-boolean-&quot;&gt; &lt;code&gt;String.valueOf(boolean)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字が指定されたオフセットでこの文字シーケンスに&lt;a href=&quot;stringbuffer#insert-int-java.lang.String-&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt;された場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="c7af047a811aea03c7cfb551fb7745eca0c8286b" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf-boolean-&quot;&gt;&lt;code&gt;String.valueOf(boolean)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuilder#insert-int-java.lang.String-&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">全体的な効果は、2番目の引数がメソッド&lt;a href=&quot;string#valueOf-boolean-&quot;&gt; &lt;code&gt;String.valueOf(boolean)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字が指定されたオフセットでこの文字シーケンスに&lt;a href=&quot;stringbuilder#insert-int-java.lang.String-&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt;された場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="e5d50176eafd06dde20c9510416b4ea1abd05817" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf-char-&quot;&gt;&lt;code&gt;String.valueOf(char)&lt;/code&gt;&lt;/a&gt;, and the character in that string were then &lt;a href=&quot;stringbuffer#insert-int-java.lang.String-&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">全体的な効果は、2番目の引数がメソッド&lt;a href=&quot;string#valueOf-char-&quot;&gt; &lt;code&gt;String.valueOf(char)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列内の文字が指定されたオフセットでこの文字シーケンスに&lt;a href=&quot;stringbuffer#insert-int-java.lang.String-&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt;された場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="99669c326a383e25b074e12ce49230f42dee9d3d" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf-char-&quot;&gt;&lt;code&gt;String.valueOf(char)&lt;/code&gt;&lt;/a&gt;, and the character in that string were then &lt;a href=&quot;stringbuilder#insert-int-java.lang.String-&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">全体的な効果は、2番目の引数がメソッド&lt;a href=&quot;string#valueOf-char-&quot;&gt; &lt;code&gt;String.valueOf(char)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列内の文字が指定されたオフセットでこの文字シーケンスに&lt;a href=&quot;stringbuilder#insert-int-java.lang.String-&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt;された場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="73138bb845b641098da27eae98dd3fcc96960e8a" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf-char:A-&quot;&gt;&lt;code&gt;String.valueOf(char[])&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuffer#insert-int-java.lang.String-&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">全体的な効果は、2番目の引数がメソッド&lt;a href=&quot;string#valueOf-char:A-&quot;&gt; &lt;code&gt;String.valueOf(char[])&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字が指定されたオフセットでこの文字シーケンスに&lt;a href=&quot;stringbuffer#insert-int-java.lang.String-&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt;された場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="c64220b96dbb589d7148353f7e1cfad95e5e608f" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf-char:A-&quot;&gt;&lt;code&gt;String.valueOf(char[])&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuilder#insert-int-java.lang.String-&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">全体的な効果は、2番目の引数がメソッド&lt;a href=&quot;string#valueOf-char:A-&quot;&gt; &lt;code&gt;String.valueOf(char[])&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字が指定されたオフセットでこの文字シーケンスに&lt;a href=&quot;stringbuilder#insert-int-java.lang.String-&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt;された場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="2e313b4e5bbaa022d9225aca73fc6c42986754cf" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf-double-&quot;&gt;&lt;code&gt;String.valueOf(double)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuffer#insert-int-java.lang.String-&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">全体的な効果は、2番目の引数がメソッド&lt;a href=&quot;string#valueOf-double-&quot;&gt; &lt;code&gt;String.valueOf(double)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字が指定されたオフセットでこの文字シーケンスに&lt;a href=&quot;stringbuffer#insert-int-java.lang.String-&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt;された場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="cce5181b8ce0af8aa47d1fcfeb79ba05fe223d1d" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf-double-&quot;&gt;&lt;code&gt;String.valueOf(double)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuilder#insert-int-java.lang.String-&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">全体的な効果は、2番目の引数がメソッド&lt;a href=&quot;string#valueOf-double-&quot;&gt; &lt;code&gt;String.valueOf(double)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字が指定されたオフセットでこの文字シーケンスに&lt;a href=&quot;stringbuilder#insert-int-java.lang.String-&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt;された場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="324cc7be6c9dedfbe10fe3f90387bf61ecd27c01" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf-float-&quot;&gt;&lt;code&gt;String.valueOf(float)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuffer#insert-int-java.lang.String-&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">全体的な効果は、2番目の引数がメソッド&lt;a href=&quot;string#valueOf-float-&quot;&gt; &lt;code&gt;String.valueOf(float)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字が指定されたオフセットでこの文字シーケンスに&lt;a href=&quot;stringbuffer#insert-int-java.lang.String-&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt;された場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="db08c56eaebf244ff3142963ce2d28f1d66ab880" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf-float-&quot;&gt;&lt;code&gt;String.valueOf(float)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuilder#insert-int-java.lang.String-&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">全体的な効果は、2番目の引数がメソッド&lt;a href=&quot;string#valueOf-float-&quot;&gt; &lt;code&gt;String.valueOf(float)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字が指定されたオフセットでこの文字シーケンスに&lt;a href=&quot;stringbuilder#insert-int-java.lang.String-&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt;された場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="38951459bdb968fe8d267a2144f2daab8015b7ff" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf-int-&quot;&gt;&lt;code&gt;String.valueOf(int)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuffer#insert-int-java.lang.String-&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">全体的な効果は、2番目の引数がメソッド&lt;a href=&quot;string#valueOf-int-&quot;&gt; &lt;code&gt;String.valueOf(int)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字が指定されたオフセットでこの文字シーケンスに&lt;a href=&quot;stringbuffer#insert-int-java.lang.String-&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt;された場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="5fc542b259600a887b19200ae27aaaa00be8b9a0" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf-int-&quot;&gt;&lt;code&gt;String.valueOf(int)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuilder#insert-int-java.lang.String-&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">全体的な効果は、2番目の引数がメソッド&lt;a href=&quot;string#valueOf-int-&quot;&gt; &lt;code&gt;String.valueOf(int)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字が指定されたオフセットでこの文字シーケンスに&lt;a href=&quot;stringbuilder#insert-int-java.lang.String-&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt;された場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="f58159ca31b8acb9ea067910b0f31bafe22b3cbe" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf-java.lang.Object-&quot;&gt;&lt;code&gt;String.valueOf(Object)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuffer#insert-int-java.lang.String-&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">全体的な効果は、2番目の引数がメソッド&lt;a href=&quot;string#valueOf-java.lang.Object-&quot;&gt; &lt;code&gt;String.valueOf(Object)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字が指定されたオフセットでこの文字シーケンスに&lt;a href=&quot;stringbuffer#insert-int-java.lang.String-&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt;された場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="5f522c3927d765d22340b0bebf81d5e0e71e191d" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf-java.lang.Object-&quot;&gt;&lt;code&gt;String.valueOf(Object)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuilder#insert-int-java.lang.String-&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">全体的な効果は、2番目の引数がメソッド&lt;a href=&quot;string#valueOf-java.lang.Object-&quot;&gt; &lt;code&gt;String.valueOf(Object)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字が指定されたオフセットでこの文字シーケンスに&lt;a href=&quot;stringbuilder#insert-int-java.lang.String-&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt;された場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="01523b80576e2b49f83dc67247fbc3f9819c22d9" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf-long-&quot;&gt;&lt;code&gt;String.valueOf(long)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuffer#insert-int-java.lang.String-&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">全体的な効果は、2番目の引数がメソッド&lt;a href=&quot;string#valueOf-long-&quot;&gt; &lt;code&gt;String.valueOf(long)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字が指定されたオフセットでこの文字シーケンスに&lt;a href=&quot;stringbuffer#insert-int-java.lang.String-&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt;された場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="b87b84c4a13dc2c6e5e702e25ec10a27e27371fe" translate="yes" xml:space="preserve">
          <source>The overall effect is exactly as if the second argument were converted to a string by the method &lt;a href=&quot;string#valueOf-long-&quot;&gt;&lt;code&gt;String.valueOf(long)&lt;/code&gt;&lt;/a&gt;, and the characters of that string were then &lt;a href=&quot;stringbuilder#insert-int-java.lang.String-&quot;&gt;&lt;code&gt;inserted&lt;/code&gt;&lt;/a&gt; into this character sequence at the indicated offset.</source>
          <target state="translated">全体的な効果は、2番目の引数がメソッド&lt;a href=&quot;string#valueOf-long-&quot;&gt; &lt;code&gt;String.valueOf(long)&lt;/code&gt; &lt;/a&gt;によって文字列に変換され、その文字列の文字が指定されたオフセットでこの文字シーケンスに&lt;a href=&quot;stringbuilder#insert-int-java.lang.String-&quot;&gt; &lt;code&gt;inserted&lt;/code&gt; &lt;/a&gt;された場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="31f8064daed292501f356d518545df44d51455b3" translate="yes" xml:space="preserve">
          <source>The overall effect is that the total size moves that same percentage, k, towards the total minimum or maximum and that percentage guarantees accommodation of the required space, DELTA.</source>
          <target state="translated">全体的な効果は、合計サイズは、合計の最小値または最大値に向かって、その同じパーセンテージ、kを移動し、そのパーセンテージは、必要なスペース、deltaの宿泊施設を保証するということです。</target>
        </trans-unit>
        <trans-unit id="f770b2501486fad821354a61f138150a2a3b6c92" translate="yes" xml:space="preserve">
          <source>The overall effect is to force all future readers of each call site's target to accept the most recently stored value. (&quot;Most recently&quot; is reckoned relative to the &lt;code&gt;syncAll&lt;/code&gt; itself.) Conversely, the &lt;code&gt;syncAll&lt;/code&gt; call may block until all readers have (somehow) decached all previous versions of each call site's target.</source>
          <target state="translated">全体的な効果は、各呼び出しサイトのターゲットのすべての将来のリーダーに、最後に保存された値を受け入れるように強制することです。（「最近」は、 &lt;code&gt;syncAll&lt;/code&gt; 自体に関連して考慮されます。）逆に、 &lt;code&gt;syncAll&lt;/code&gt; 呼び出しは、すべてのリーダーが（なんらかの理由で）各呼び出しサイトのターゲットのすべての以前のバージョンをデキャッシュするまでブロックする可能性があります。</target>
        </trans-unit>
        <trans-unit id="8a597f7fe2186deb83b3832d157681941badccc8" translate="yes" xml:space="preserve">
          <source>The overall height of the &lt;code&gt;Ellipse2D&lt;/code&gt;.</source>
          <target state="translated">The overall height of the &lt;code&gt;Ellipse2D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c51d680650336bbcd98a1a70650e114d30b07a9f" translate="yes" xml:space="preserve">
          <source>The overall height of the full ellipse of which this arc is a partial section (not considering the angular extents).</source>
          <target state="translated">この円弧が部分的な断面である全楕円の全高(角度エクステントは考慮されていない)。</target>
        </trans-unit>
        <trans-unit id="08d345304e88691848ec39f0e8e15128680f7442" translate="yes" xml:space="preserve">
          <source>The overall height of this &lt;code&gt;Ellipse2D&lt;/code&gt;.</source>
          <target state="translated">The overall height of this &lt;code&gt;Ellipse2D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3870ccb10e3ab8d6ce4a4e513b761343c57f1158" translate="yes" xml:space="preserve">
          <source>The overall orientation of the grid depends on the container's &lt;a href=&quot;componentorientation&quot;&gt;&lt;code&gt;ComponentOrientation&lt;/code&gt;&lt;/a&gt; property. For horizontal left-to-right orientations, grid coordinate (0,0) is in the upper left corner of the container with x increasing to the right and y increasing downward. For horizontal right-to-left orientations, grid coordinate (0,0) is in the upper right corner of the container with x increasing to the left and y increasing downward.</source>
          <target state="translated">The overall orientation of the grid depends on the container's &lt;a href=&quot;componentorientation&quot;&gt; &lt;code&gt;ComponentOrientation&lt;/code&gt; &lt;/a&gt; property. For horizontal left-to-right orientations, grid coordinate (0,0) is in the upper left corner of the container with x increasing to the right and y increasing downward. For horizontal right-to-left orientations, grid coordinate (0,0) is in the upper right corner of the container with x increasing to the left and y increasing downward.</target>
        </trans-unit>
        <trans-unit id="7129641fb17ee86ae98bd9910e56b0d7e0292b8b" translate="yes" xml:space="preserve">
          <source>The overall width of the full ellipse of which this arc is a partial section (not considering the angular extents).</source>
          <target state="translated">この円弧が部分的な断面である全楕円の全幅(角度エクステントは考慮されていない)。</target>
        </trans-unit>
        <trans-unit id="3fa89a83d7b23289a758aae24c69fb19d0825627" translate="yes" xml:space="preserve">
          <source>The overall width of this &lt;code&gt;Ellipse2D&lt;/code&gt;.</source>
          <target state="translated">The overall width of this &lt;code&gt;Ellipse2D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b81d6288655d85e74abf1180320ee72013eb469e" translate="yes" xml:space="preserve">
          <source>The overloads that accept &lt;code&gt;Name&lt;/code&gt; are useful for applications that need to manipulate names: composing them, comparing components, and so on. The overloads that accept string names are likely to be more useful for simple applications, such as those that simply read in a name and look up the corresponding object.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; を受け入れるオーバーロードは、名前を操作する必要があるアプリケーション（名前の作成、コンポーネントの比較など）に役立ちます。文字列名を受け入れるオーバーロードは、単純に名前を読み取って対応するオブジェクトを検索するような単純なアプリケーションの場合に役立つ可能性があります。</target>
        </trans-unit>
        <trans-unit id="b16057ee984ca30b3a09e33dd099c7a289d1e4e6" translate="yes" xml:space="preserve">
          <source>The override style declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3afd76a6a4ce3c69d50d9e42513b3e98bae449" translate="yes" xml:space="preserve">
          <source>The owner of the clipboard.</source>
          <target state="translated">クリップボードの持ち主です。</target>
        </trans-unit>
        <trans-unit id="cf7fb65cedad5b648dd187476b8ae459f6736b04" translate="yes" xml:space="preserve">
          <source>The owner of this decoder.</source>
          <target state="translated">このデコーダーの持ち主。</target>
        </trans-unit>
        <trans-unit id="960d60a6630ecd199aafa78b55469fbc9767c71b" translate="yes" xml:space="preserve">
          <source>The owner of this encoder.</source>
          <target state="translated">このエンコーダの所有者です。</target>
        </trans-unit>
        <trans-unit id="fc34151ce94888d998373a80767db73331183bd7" translate="yes" xml:space="preserve">
          <source>The pack engine is initialized to an initial state as described by their properties below. The initial state can be manipulated by getting the engine properties (using &lt;a href=&quot;#properties()&quot;&gt;&lt;code&gt;properties()&lt;/code&gt;&lt;/a&gt;) and storing the modified properties on the map. The resource files will be passed through with no changes at all. The class files will not contain identical bytes, since the unpacker is free to change minor class file features such as constant pool order. However, the class files will be semantically identical, as specified in</source>
          <target state="translated">The pack engine is initialized to an initial state as described by their properties below. The initial state can be manipulated by getting the engine properties (using &lt;a href=&quot;#properties()&quot;&gt; &lt;code&gt;properties()&lt;/code&gt; &lt;/a&gt;) and storing the modified properties on the map. The resource files will be passed through with no changes at all. The class files will not contain identical bytes, since the unpacker is free to change minor class file features such as constant pool order. However, the class files will be semantically identical, as specified in</target>
        </trans-unit>
        <trans-unit id="1f5a4430fc7ac0d6794758f4e8205b46eb2301e9" translate="yes" xml:space="preserve">
          <source>The pack engine is initialized to an initial state as described by their properties below. The initial state can be manipulated by getting the engine properties (using &lt;a href=&quot;pack200.packer#properties--&quot;&gt;&lt;code&gt;properties()&lt;/code&gt;&lt;/a&gt;) and storing the modified properties on the map. The resource files will be passed through with no changes at all. The class files will not contain identical bytes, since the unpacker is free to change minor class file features such as constant pool order. However, the class files will be semantically identical, as specified in</source>
          <target state="translated">以下のプロパティで説明されているように、パックエンジンは初期状態に初期化されます。エンジンのプロパティを&lt;a href=&quot;pack200.packer#properties--&quot;&gt; &lt;code&gt;properties()&lt;/code&gt; &lt;/a&gt;を使用）、変更されたプロパティをマップに保存することで、初期状態を操作できます。リソースファイルはまったく変更されずにパススルーされます。アンパッカーは定数プールの順序などのマイナークラスファイル機能を自由に変更できるため、クラスファイルには同一のバイトは含まれません。ただし、クラスファイルは、以下で指定されているように、意味的に同一になります。</target>
        </trans-unit>
        <trans-unit id="63b42ec2ae764de42f4fa6aaac0f55d562803652" translate="yes" xml:space="preserve">
          <source>The package and module in which a proxy class is defined is specified &lt;a href=&quot;#membership&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">The package and module in which a proxy class is defined is specified &lt;a href=&quot;#membership&quot;&gt;below&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="17e0bdff2945c2edfc2026d2ce087b6253e4a1f0" translate="yes" xml:space="preserve">
          <source>The package and module to which a proxy class belongs are chosen such that the accessibility of the proxy class is in line with the accessibility of the proxy interfaces. Specifically, the package and the module membership of a proxy class defined via the &lt;a href=&quot;#getProxyClass(java.lang.ClassLoader,java.lang.Class...)&quot;&gt;&lt;code&gt;getProxyClass(ClassLoader, Class[])&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#newProxyInstance(java.lang.ClassLoader,java.lang.Class%5B%5D,java.lang.reflect.InvocationHandler)&quot;&gt;&lt;code&gt;newProxyInstance(ClassLoader, Class[], InvocationHandler)&lt;/code&gt;&lt;/a&gt; methods is specified as follows:</source>
          <target state="translated">The package and module to which a proxy class belongs are chosen such that the accessibility of the proxy class is in line with the accessibility of the proxy interfaces. Specifically, the package and the module membership of a proxy class defined via the &lt;a href=&quot;#getProxyClass(java.lang.ClassLoader,java.lang.Class...)&quot;&gt; &lt;code&gt;getProxyClass(ClassLoader, Class[])&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#newProxyInstance(java.lang.ClassLoader,java.lang.Class%5B%5D,java.lang.reflect.InvocationHandler)&quot;&gt; &lt;code&gt;newProxyInstance(ClassLoader, Class[], InvocationHandler)&lt;/code&gt; &lt;/a&gt; methods is specified as follows:</target>
        </trans-unit>
        <trans-unit id="cf2c096bf56c3be8d88ff1f521bec6265e7d4dd6" translate="yes" xml:space="preserve">
          <source>The package is not sealed.</source>
          <target state="translated">パッケージには封がされていません。</target>
        </trans-unit>
        <trans-unit id="872f4daa7a794af63f1ae3e925cc2ccdb7956cff" translate="yes" xml:space="preserve">
          <source>The package is sealed with the &lt;a href=&quot;module/modulereference#location()&quot;&gt;module location&lt;/a&gt; as the code source, if known.</source>
          <target state="translated">The package is sealed with the &lt;a href=&quot;module/modulereference#location()&quot;&gt;module location&lt;/a&gt; as the code source, if known.</target>
        </trans-unit>
        <trans-unit id="fbcd298d448956ef76e9c32f1274449606412ec1" translate="yes" xml:space="preserve">
          <source>The package name</source>
          <target state="translated">パッケージ名</target>
        </trans-unit>
        <trans-unit id="a6f33a2d9b883f2e9494c80ac5a2a02df51ac287" translate="yes" xml:space="preserve">
          <source>The package names that are parameters or returned by methods defined in this class are the fully-qualified names of the packages as defined in section 6.5.3 of</source>
          <target state="translated">このクラスで定義されているメソッドのパラメータまたはメソッドによって返されるパッケージ名は、以下の 6.5.3 節で定義されているパッケージの完全修飾名です。</target>
        </trans-unit>
        <trans-unit id="d825e3d7dabee111214c86ef931cdc1b54776a9a" translate="yes" xml:space="preserve">
          <source>The packer engine applies various transformations to the input JAR file, making the pack stream highly compressible by a compressor such as gzip or zip.</source>
          <target state="translated">パッカーエンジンは、入力されたJARファイルに様々な変換を適用し、パックストリームをgzipやzipなどの圧縮機で高度に圧縮可能にします。</target>
        </trans-unit>
        <trans-unit id="aa7b79f15d60b49360866c20e996ad65f58d66e0" translate="yes" xml:space="preserve">
          <source>The packer engine applies various transformations to the input JAR file, making the pack stream highly compressible by a compressor such as gzip or zip. An instance of the engine can be obtained using &lt;a href=&quot;pack200#newPacker()&quot;&gt;&lt;code&gt;Pack200.newPacker()&lt;/code&gt;&lt;/a&gt;. The high degree of compression is achieved by using a number of techniques described in the JSR 200 specification. Some of the techniques are sorting, re-ordering and co-location of the constant pool.</source>
          <target state="translated">The packer engine applies various transformations to the input JAR file, making the pack stream highly compressible by a compressor such as gzip or zip. An instance of the engine can be obtained using &lt;a href=&quot;pack200#newPacker()&quot;&gt; &lt;code&gt;Pack200.newPacker()&lt;/code&gt; &lt;/a&gt;. The high degree of compression is achieved by using a number of techniques described in the JSR 200 specification. Some of the techniques are sorting, re-ordering and co-location of the constant pool.</target>
        </trans-unit>
        <trans-unit id="e60248a43a81f58023b88492a2d08616c29b5dfb" translate="yes" xml:space="preserve">
          <source>The packer engine applies various transformations to the input JAR file, making the pack stream highly compressible by a compressor such as gzip or zip. An instance of the engine can be obtained using &lt;a href=&quot;pack200#newPacker--&quot;&gt;&lt;code&gt;Pack200.newPacker()&lt;/code&gt;&lt;/a&gt;. The high degree of compression is achieved by using a number of techniques described in the JSR 200 specification. Some of the techniques are sorting, re-ordering and co-location of the constant pool.</source>
          <target state="translated">パッカーエンジンは、入力JARファイルにさまざまな変換を適用して、gzipやzipなどのコンプレッサーによってパックストリームを高度に圧縮可能にします。エンジンのインスタンスは、&lt;a href=&quot;pack200#newPacker--&quot;&gt; &lt;code&gt;Pack200.newPacker()&lt;/code&gt; &lt;/a&gt;を使用して取得できます。高度な圧縮は、JSR 200仕様で説明されているいくつかの手法を使用して実現されます。いくつかの手法は、定数プールの並べ替え、並べ替え、同じ場所への配置です。</target>
        </trans-unit>
        <trans-unit id="30ee921e8de863d2bf5c9f554ad216859c719f2f" translate="yes" xml:space="preserve">
          <source>The packer's progress as a percentage, as periodically updated by the packer.</source>
          <target state="translated">パッカーによって定期的に更新されるパッカーの進捗状況をパーセンテージで表示します。</target>
        </trans-unit>
        <trans-unit id="821c9b2be3513399d24ae8026376ff5c4cd964d7" translate="yes" xml:space="preserve">
          <source>The packer's progress as a percentage, as periodically updated by the packer. Values of 0 - 100 are normal, and -1 indicates a stall. Progress can be monitored by polling the value of this property.</source>
          <target state="translated">パッカーが定期的に更新するパッカーの進捗状況をパーセンテージで表示します。0 ~ 100 の値は正常で、-1 は失速を示します。進捗状況は、このプロパティの値をポーリングすることで監視することができます。</target>
        </trans-unit>
        <trans-unit id="9b7835d6c2897bc03547bef50d2e8ccef489fee5" translate="yes" xml:space="preserve">
          <source>The padding value.</source>
          <target state="translated">パディング値。</target>
        </trans-unit>
        <trans-unit id="5254cf384974df4bf22cb621e6eb98fe1516e0c5" translate="yes" xml:space="preserve">
          <source>The paged-results control's assigned object identifier is 1.2.840.113556.1.4.319.</source>
          <target state="translated">ページ結果コントロールに割り当てられたオブジェクト識別子は、1.2.840.113556.1.4.319です。</target>
        </trans-unit>
        <trans-unit id="866b80818a098f96114ee08abb23a44885090886" translate="yes" xml:space="preserve">
          <source>The paged-results response control's assigned object identifier is 1.2.840.113556.1.4.319.</source>
          <target state="translated">ページ結果応答コントロールに割り当てられたオブジェクト識別子は、1.2.840.11356.1.4.319です。</target>
        </trans-unit>
        <trans-unit id="b266460db97939c24d673ede02a200ebb6755934" translate="yes" xml:space="preserve">
          <source>The paint event type.</source>
          <target state="translated">塗りのイベントタイプ。</target>
        </trans-unit>
        <trans-unit id="67aa960c4b671a24ef5b1e0c2ea9ff270cfe200e" translate="yes" xml:space="preserve">
          <source>The painting architecture of Swing requires an opaque &lt;code&gt;JComponent&lt;/code&gt; to exist in the containment hierarchy above all other components. This is typically provided by way of the content pane. If you replace the content pane, it is recommended that you make the content pane opaque by way of &lt;code&gt;setOpaque(true)&lt;/code&gt;. Additionally, if the content pane overrides &lt;code&gt;paintComponent&lt;/code&gt;, it will need to completely fill in the background in an opaque color in &lt;code&gt;paintComponent&lt;/code&gt;.</source>
          <target state="translated">The painting architecture of Swing requires an opaque &lt;code&gt;JComponent&lt;/code&gt; to exist in the containment hierarchy above all other components. This is typically provided by way of the content pane. If you replace the content pane, it is recommended that you make the content pane opaque by way of &lt;code&gt;setOpaque(true)&lt;/code&gt; . Additionally, if the content pane overrides &lt;code&gt;paintComponent&lt;/code&gt; , it will need to completely fill in the background in an opaque color in &lt;code&gt;paintComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49dbe49dc69592f6524d7ca2b444c01fc630b182" translate="yes" xml:space="preserve">
          <source>The palette close icon.</source>
          <target state="translated">パレットを閉じるアイコンです。</target>
        </trans-unit>
        <trans-unit id="1b15c609d33b642b1ba463e5d2a1471d0d9df721" translate="yes" xml:space="preserve">
          <source>The palette layer sits over the default layer. Useful for floating toolbars and palettes, so they can be positioned above other components.</source>
          <target state="translated">パレットレイヤーはデフォルトレイヤーの上に配置されます。フローティングツールバーやパレットを他のコンポーネントの上に配置するのに便利です。</target>
        </trans-unit>
        <trans-unit id="a054a114f906605bc80876fd63d7712ff1b761b8" translate="yes" xml:space="preserve">
          <source>The paragraph attributes form the definition of a paragraph to be rendered. All sizes are specified in points (such as found in postscript), a device independent measure.</source>
          <target state="translated">段落属性は,レンダリングされる段落の定義を形成する。すべてのサイズは、デバイスに依存しない尺度であるポイント(postscriptで見られるような)で指定されます。</target>
        </trans-unit>
        <trans-unit id="4707bb85a1366f3abad509af71baadf574140ddd" translate="yes" xml:space="preserve">
          <source>The paragraph left indent action identifier</source>
          <target state="translated">段落左インデント アクション識別子</target>
        </trans-unit>
        <trans-unit id="16cfceed724273e5b7e0f3fabbd803cacb348ced" translate="yes" xml:space="preserve">
          <source>The paragraph right indent action identifier</source>
          <target state="translated">段落右インデントアクション識別子</target>
        </trans-unit>
        <trans-unit id="7b4511c60fee63fc5dd606de36079b10244d82e8" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;item&lt;/code&gt; represents the context the XPath expression will be operated on. The type of the context is implementation-dependent. If the value is &lt;code&gt;null&lt;/code&gt;, the operation must have no dependency on the context, otherwise an XPathExpressionException will be thrown.</source>
          <target state="translated">The parameter &lt;code&gt;item&lt;/code&gt; represents the context the XPath expression will be operated on. The type of the context is implementation-dependent. If the value is &lt;code&gt;null&lt;/code&gt; , the operation must have no dependency on the context, otherwise an XPathExpressionException will be thrown.</target>
        </trans-unit>
        <trans-unit id="50af5226ec29660988fc56fada491b71c9083bd4" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;n&lt;/code&gt; must be in the range 0 through 999999999, inclusive. &lt;code&gt;ZERO.pow(0)&lt;/code&gt; returns &lt;a href=&quot;#ONE&quot;&gt;&lt;code&gt;ONE&lt;/code&gt;&lt;/a&gt;. Note that future releases may expand the allowable exponent range of this method.</source>
          <target state="translated">The parameter &lt;code&gt;n&lt;/code&gt; must be in the range 0 through 999999999, inclusive. &lt;code&gt;ZERO.pow(0)&lt;/code&gt; returns &lt;a href=&quot;#ONE&quot;&gt; &lt;code&gt;ONE&lt;/code&gt; &lt;/a&gt;. Note that future releases may expand the allowable exponent range of this method.</target>
        </trans-unit>
        <trans-unit id="24552a8980b41276ccd5905a6aaeeb53f392d59d" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;n&lt;/code&gt; must be in the range 0 through 999999999, inclusive. &lt;code&gt;ZERO.pow(0)&lt;/code&gt; returns &lt;a href=&quot;bigdecimal#ONE&quot;&gt;&lt;code&gt;ONE&lt;/code&gt;&lt;/a&gt;. Note that future releases may expand the allowable exponent range of this method.</source>
          <target state="translated">パラメーター &lt;code&gt;n&lt;/code&gt; は、0から999999999までの範囲でなければなりません。 &lt;code&gt;ZERO.pow(0)&lt;/code&gt; は&lt;a href=&quot;bigdecimal#ONE&quot;&gt; &lt;code&gt;ONE&lt;/code&gt; を&lt;/a&gt;返します。今後のリリースでは、このメソッドの許容指数範囲が拡張される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="225f6eef89aa234e726279199c17142bb293790d" translate="yes" xml:space="preserve">
          <source>The parameter count in &lt;code&gt;concatType&lt;/code&gt; equals to number of \1 tags in &lt;code&gt;recipe&lt;/code&gt;</source>
          <target state="translated">The parameter count in &lt;code&gt;concatType&lt;/code&gt; equals to number of \1 tags in &lt;code&gt;recipe&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10e5bbcde45ca10f7347abac26ef33398c3b889b" translate="yes" xml:space="preserve">
          <source>The parameter count in &lt;code&gt;concatType&lt;/code&gt; is equal to number of \1 tags in &lt;code&gt;recipe&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa4a1bf9d4f2c697535f0da6a4485f9445b8e53" translate="yes" xml:space="preserve">
          <source>The parameter description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ec5b0fc9d2ee85f8e3be945c5875b1eb128c88" translate="yes" xml:space="preserve">
          <source>The parameter factoryId defined here is inconsistent with that of other JAXP factories where the first parameter is fully qualified factory class name that provides implementation of the factory.</source>
          <target state="translated">ここで定義されているパラメータ factoryId は、最初のパラメータがファクトリーの実装を提供する完全修飾されたファクトリークラス名である他の JAXP ファクトリのそれと矛盾しています。</target>
        </trans-unit>
        <trans-unit id="06f41071ad9d7621be55ce2931fc7d18a329dcd8" translate="yes" xml:space="preserve">
          <source>The parameter list &lt;code&gt;(V A...)&lt;/code&gt; of the body is called the &lt;em&gt;internal parameter list&lt;/em&gt;. It will constrain the parameter lists of the other loop parts.</source>
          <target state="translated">The parameter list &lt;code&gt;(V A...)&lt;/code&gt; of the body is called the &lt;em&gt;internal parameter list&lt;/em&gt;. It will constrain the parameter lists of the other loop parts.</target>
        </trans-unit>
        <trans-unit id="7fd62c7a8f8c15bfb268fbf63a8a0194acc8a533" translate="yes" xml:space="preserve">
          <source>The parameter list &lt;code&gt;(V I A...)&lt;/code&gt; of the body contributes to a list of types called the &lt;em&gt;internal parameter list&lt;/em&gt;. It will constrain the parameter lists of the other loop parts.</source>
          <target state="translated">The parameter list &lt;code&gt;(V I A...)&lt;/code&gt; of the body contributes to a list of types called the &lt;em&gt;internal parameter list&lt;/em&gt;. It will constrain the parameter lists of the other loop parts.</target>
        </trans-unit>
        <trans-unit id="e58b0b6e022c4ee1aa6339bb336b514c909a5f9d" translate="yes" xml:space="preserve">
          <source>The parameter list &lt;code&gt;(V T A...)&lt;/code&gt; of the body contributes to a list of types called the &lt;em&gt;internal parameter list&lt;/em&gt;. It will constrain the parameter lists of the other loop parts.</source>
          <target state="translated">The parameter list &lt;code&gt;(V T A...)&lt;/code&gt; of the body contributes to a list of types called the &lt;em&gt;internal parameter list&lt;/em&gt;. It will constrain the parameter lists of the other loop parts.</target>
        </trans-unit>
        <trans-unit id="474a5af5a3f8d227ed70f57da563f8b86bc54e3c" translate="yes" xml:space="preserve">
          <source>The parameter list for every non-omitted, non-init (step, pred, and fini) function must be effectively identical to the internal parameter list &lt;code&gt;(V... A...)&lt;/code&gt;.</source>
          <target state="translated">The parameter list for every non-omitted, non-init (step, pred, and fini) function must be effectively identical to the internal parameter list &lt;code&gt;(V... A...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53432ad7282ec815dfa60a54e056f22aa428efcb" translate="yes" xml:space="preserve">
          <source>The parameter list for init functions will be adjusted to the external parameter list. (Note that their parameter lists are already effectively identical to this list.)</source>
          <target state="translated">init関数のパラメータリストは、外部パラメータリストに合わせて調整されます。(それらのパラメータリストはすでにこのリストと事実上同じであることに注意してください)。</target>
        </trans-unit>
        <trans-unit id="8e16a7cb9882736edeb02f61ab4586e18b7cca61" translate="yes" xml:space="preserve">
          <source>The parameter list for the resulting loop handle will be the external parameter list &lt;code&gt;(A...)&lt;/code&gt;.</source>
          <target state="translated">The parameter list for the resulting loop handle will be the external parameter list &lt;code&gt;(A...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b118da091f6db3ab3ac720df6e05ded63f2e75c7" translate="yes" xml:space="preserve">
          <source>The parameter list of &lt;code&gt;iterations&lt;/code&gt; (of some form &lt;code&gt;(A*)&lt;/code&gt;) must be effectively identical to the external parameter list &lt;code&gt;(A...)&lt;/code&gt;.</source>
          <target state="translated">The parameter list of &lt;code&gt;iterations&lt;/code&gt; (of some form &lt;code&gt;(A*)&lt;/code&gt; ) must be effectively identical to the external parameter list &lt;code&gt;(A...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30a082bbd95089d21ab808594316f3f108f9a062" translate="yes" xml:space="preserve">
          <source>The parameter list of &lt;code&gt;start&lt;/code&gt; (of some form &lt;code&gt;(A*)&lt;/code&gt;) must be effectively identical to the external parameter list &lt;code&gt;(A...)&lt;/code&gt;.</source>
          <target state="translated">The parameter list of &lt;code&gt;start&lt;/code&gt; (of some form &lt;code&gt;(A*)&lt;/code&gt; ) must be effectively identical to the external parameter list &lt;code&gt;(A...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9d60d133de9d4d6e4fd09cf41a4b92be03c10f9" translate="yes" xml:space="preserve">
          <source>The parameter list of an &lt;code&gt;iterator&lt;/code&gt; that is non-&lt;code&gt;null&lt;/code&gt; (of some form &lt;code&gt;(A*)&lt;/code&gt;) must be effectively identical to the external parameter list &lt;code&gt;(A...)&lt;/code&gt;.</source>
          <target state="translated">The parameter list of an &lt;code&gt;iterator&lt;/code&gt; that is non- &lt;code&gt;null&lt;/code&gt; (of some form &lt;code&gt;(A*)&lt;/code&gt; ) must be effectively identical to the external parameter list &lt;code&gt;(A...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c4b12867b1f840ab46a64f2a284a7b84dba7590" translate="yes" xml:space="preserve">
          <source>The parameter names used by the &lt;code&gt;DOMConfiguration&lt;/code&gt; object are defined throughout the DOM Level 3 specifications. Names are case-insensitive. To avoid possible conflicts, as a convention, names referring to parameters defined outside the DOM specification should be made unique. Because parameters are exposed as properties in names are recommended to follow the section 5.16 Identifiers of [Unicode] with the addition of the character '-' (HYPHEN-MINUS) but it is not enforced by the DOM implementation. DOM Level 3 Core Implementations are required to recognize all parameters defined in this specification. Some parameter values may also be required to be supported by the implementation. Refer to the definition of the parameter to know if a value must be supported or not.</source>
          <target state="translated">The parameter names used by the &lt;code&gt;DOMConfiguration&lt;/code&gt; object are defined throughout the DOM Level 3 specifications. Names are case-insensitive. To avoid possible conflicts, as a convention, names referring to parameters defined outside the DOM specification should be made unique. Because parameters are exposed as properties in names are recommended to follow the section 5.16 Identifiers of [Unicode] with the addition of the character '-' (HYPHEN-MINUS) but it is not enforced by the DOM implementation. DOM Level 3 Core Implementations are required to recognize all parameters defined in this specification. Some parameter values may also be required to be supported by the implementation. Refer to the definition of the parameter to know if a value must be supported or not.</target>
        </trans-unit>
        <trans-unit id="bcdb80d85de039f3e18bb3b5fc1d902bb8edad88" translate="yes" xml:space="preserve">
          <source>The parameter of this method is the number of invocations being requested from this WebSocket to the associated listener, not the number of messages. Sometimes a message may be delivered to the listener in a single invocation, but not always. For example, Ping, Pong and Close messages are delivered in a single invocation of &lt;code&gt;onPing&lt;/code&gt;, &lt;code&gt;onPong&lt;/code&gt; and &lt;code&gt;onClose&lt;/code&gt; methods respectively. However, whether or not Text and Binary messages are delivered in a single invocation of &lt;code&gt;onText&lt;/code&gt; and &lt;code&gt;onBinary&lt;/code&gt; methods depends on the boolean argument (&lt;code&gt;last&lt;/code&gt;) of these methods. If &lt;code&gt;last&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, then there is more to a message than has been delivered to the invocation.</source>
          <target state="translated">The parameter of this method is the number of invocations being requested from this WebSocket to the associated listener, not the number of messages. Sometimes a message may be delivered to the listener in a single invocation, but not always. For example, Ping, Pong and Close messages are delivered in a single invocation of &lt;code&gt;onPing&lt;/code&gt; , &lt;code&gt;onPong&lt;/code&gt; and &lt;code&gt;onClose&lt;/code&gt; methods respectively. However, whether or not Text and Binary messages are delivered in a single invocation of &lt;code&gt;onText&lt;/code&gt; and &lt;code&gt;onBinary&lt;/code&gt; methods depends on the boolean argument ( &lt;code&gt;last&lt;/code&gt; ) of these methods. If &lt;code&gt;last&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; , then there is more to a message than has been delivered to the invocation.</target>
        </trans-unit>
        <trans-unit id="44e6fab6d9ac4719240ec0b3727c954e51d89ce9" translate="yes" xml:space="preserve">
          <source>The parameter types &lt;code&gt;Vn&lt;/code&gt; will be interpreted as loop-local state elements &lt;code&gt;(V...)&lt;/code&gt;.</source>
          <target state="translated">The parameter types &lt;code&gt;Vn&lt;/code&gt; will be interpreted as loop-local state elements &lt;code&gt;(V...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e373695ec6d41c303c83799483b80fd014fe746" translate="yes" xml:space="preserve">
          <source>The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this &lt;code&gt;RowSet&lt;/code&gt; object's command when the method &lt;code&gt;execute&lt;/code&gt; is called. Calls made to the method &lt;code&gt;getParams&lt;/code&gt; after &lt;code&gt;setUnicodeStream&lt;/code&gt; has been called will return an array containing the parameter values that have been set. In that array, the element that represents the values set with this method will itself be an array. The first element of that array is the given &lt;code&gt;java.io.InputStream&lt;/code&gt; object. The second element is the value set for</source>
          <target state="translated">The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this &lt;code&gt;RowSet&lt;/code&gt; object's command when the method &lt;code&gt;execute&lt;/code&gt; is called. Calls made to the method &lt;code&gt;getParams&lt;/code&gt; after &lt;code&gt;setUnicodeStream&lt;/code&gt; has been called will return an array containing the parameter values that have been set. In that array, the element that represents the values set with this method will itself be an array. The first element of that array is the given &lt;code&gt;java.io.InputStream&lt;/code&gt; object. The second element is the value set for</target>
        </trans-unit>
        <trans-unit id="5b1d686a30e89e20a67cce69f88fe14f6a1d46c4" translate="yes" xml:space="preserve">
          <source>The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this &lt;code&gt;RowSet&lt;/code&gt; object's command when the method &lt;code&gt;execute&lt;/code&gt; is called. Methods such as &lt;code&gt;execute&lt;/code&gt; and &lt;code&gt;populate&lt;/code&gt; must be provided in any class that extends this class and implements one or more of the standard JSR-114 &lt;code&gt;RowSet&lt;/code&gt; interfaces.</source>
          <target state="translated">The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this &lt;code&gt;RowSet&lt;/code&gt; object's command when the method &lt;code&gt;execute&lt;/code&gt; is called. Methods such as &lt;code&gt;execute&lt;/code&gt; and &lt;code&gt;populate&lt;/code&gt; must be provided in any class that extends this class and implements one or more of the standard JSR-114 &lt;code&gt;RowSet&lt;/code&gt; interfaces.</target>
        </trans-unit>
        <trans-unit id="dfb052ee0c1e5966878d2245fe418bfa8a8bdef9" translate="yes" xml:space="preserve">
          <source>The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this &lt;code&gt;RowSet&lt;/code&gt; object's command when the method &lt;code&gt;execute&lt;/code&gt; is called. Methods such as &lt;code&gt;execute&lt;/code&gt; and &lt;code&gt;populate&lt;/code&gt; must be provided in any class that extends this class and implements one or more of the standard JSR-114 &lt;code&gt;RowSet&lt;/code&gt; interfaces. NOTE: &lt;code&gt;JdbcRowSet&lt;/code&gt; does not require the &lt;code&gt;populate&lt;/code&gt; method as it is undefined in this class.</source>
          <target state="translated">The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this &lt;code&gt;RowSet&lt;/code&gt; object's command when the method &lt;code&gt;execute&lt;/code&gt; is called. Methods such as &lt;code&gt;execute&lt;/code&gt; and &lt;code&gt;populate&lt;/code&gt; must be provided in any class that extends this class and implements one or more of the standard JSR-114 &lt;code&gt;RowSet&lt;/code&gt; interfaces. NOTE: &lt;code&gt;JdbcRowSet&lt;/code&gt; does not require the &lt;code&gt;populate&lt;/code&gt; method as it is undefined in this class.</target>
        </trans-unit>
        <trans-unit id="305a02d1aa1ebc36991c6f5311b0ec8b4872c30b" translate="yes" xml:space="preserve">
          <source>The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this &lt;code&gt;RowSet&lt;/code&gt; object's command when the method &lt;code&gt;execute&lt;/code&gt; is called. Methods such as &lt;code&gt;execute&lt;/code&gt;, &lt;code&gt;populate&lt;/code&gt; must be provided in any class that extends this class and implements one or more of the standard JSR-114 &lt;code&gt;RowSet&lt;/code&gt; interfaces.</source>
          <target state="translated">The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this &lt;code&gt;RowSet&lt;/code&gt; object's command when the method &lt;code&gt;execute&lt;/code&gt; is called. Methods such as &lt;code&gt;execute&lt;/code&gt; , &lt;code&gt;populate&lt;/code&gt; must be provided in any class that extends this class and implements one or more of the standard JSR-114 &lt;code&gt;RowSet&lt;/code&gt; interfaces.</target>
        </trans-unit>
        <trans-unit id="b8ef4f0e5646bef0741f18b4f02a8cea83921ea8" translate="yes" xml:space="preserve">
          <source>The parameter values retain their original case, except a charset parameter value for a text media type is converted to lowercase.</source>
          <target state="translated">パラメータ値は元の大文字小文字を保持しますが、テキスト・メディア・タイプのcharsetパラメータ値が小文字に変換されることを除いては、パラメータ値は元の大文字小文字を保持します。</target>
        </trans-unit>
        <trans-unit id="bb39ffff0d8075952f90c8c237468e1f45f1c684" translate="yes" xml:space="preserve">
          <source>The parameters are arranged in ascending order of parameter name.</source>
          <target state="translated">パラメータはパラメータ名の昇順に並んでいます。</target>
        </trans-unit>
        <trans-unit id="11e0d4edf362f7c76332fc4450bc63049b256eb3" translate="yes" xml:space="preserve">
          <source>The parameters are not authenticated by the &lt;code&gt;SSLEngine&lt;/code&gt;.</source>
          <target state="translated">パラメータは &lt;code&gt;SSLEngine&lt;/code&gt; によって認証されません。</target>
        </trans-unit>
        <trans-unit id="fb65f692e7e1455e31c885605739ad78cecb430f" translate="yes" xml:space="preserve">
          <source>The parameters are not order dependent. That is, &lt;code&gt;
 addSelectionInterval(x, y)&lt;/code&gt; is equivalent to &lt;code&gt;addSelectionInterval(y, x)&lt;/code&gt;.</source>
          <target state="translated">The parameters are not order dependent. That is, &lt;code&gt; addSelectionInterval(x, y)&lt;/code&gt; is equivalent to &lt;code&gt;addSelectionInterval(y, x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f7d66b2c4cec0965399997b2bce2a3097afb6c1" translate="yes" xml:space="preserve">
          <source>The parameters are not order dependent. That is, &lt;code&gt;
 getPathBetweenRows(x, y)&lt;/code&gt; is equivalent to &lt;code&gt;getPathBetweenRows(y, x)&lt;/code&gt;.</source>
          <target state="translated">The parameters are not order dependent. That is, &lt;code&gt; getPathBetweenRows(x, y)&lt;/code&gt; is equivalent to &lt;code&gt;getPathBetweenRows(y, x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71fdccbc419bc28fc08830c8d380f76d2f332f40" translate="yes" xml:space="preserve">
          <source>The parameters are not order dependent. That is, &lt;code&gt;
 removeSelectionInterval(x, y)&lt;/code&gt; is equivalent to &lt;code&gt;removeSelectionInterval(y, x)&lt;/code&gt;.</source>
          <target state="translated">The parameters are not order dependent. That is, &lt;code&gt; removeSelectionInterval(x, y)&lt;/code&gt; is equivalent to &lt;code&gt;removeSelectionInterval(y, x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8392c9e26a22dc79ccde9fbc210a6e58f6f0e6de" translate="yes" xml:space="preserve">
          <source>The parameters are not order dependent. That is, &lt;code&gt;
 setSelectionInterval(x, y)&lt;/code&gt; is equivalent to &lt;code&gt;setSelectionInterval(y, x)&lt;/code&gt;.</source>
          <target state="translated">The parameters are not order dependent. That is, &lt;code&gt; setSelectionInterval(x, y)&lt;/code&gt; is equivalent to &lt;code&gt;setSelectionInterval(y, x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aff2143fd57f0fff307229e418484b901b5de2b1" translate="yes" xml:space="preserve">
          <source>The parameters consist of a 12-byte nonce and an initial counter value expressed as a 32-bit integer.</source>
          <target state="translated">パラメータは、12 バイトの nonce と 32 ビットの整数で表されるカウンタの初期値で構成されています。</target>
        </trans-unit>
        <trans-unit id="a4ae335f84321e13f212ee4b121568c174875cb3" translate="yes" xml:space="preserve">
          <source>The parameters consist of a version number, a rounds count, a word size, and optionally an initialization vector (IV) (only in feedback mode).</source>
          <target state="translated">パラメータは、バージョン番号、ラウンド数、ワードサイズ、オプションで初期化ベクトル(IV)から構成されます(フィードバックモードのみ)。</target>
        </trans-unit>
        <trans-unit id="a9f8d6f3c8b03d8da1385862cfad5502762462d5" translate="yes" xml:space="preserve">
          <source>The parameters consist of an effective key size and optionally an 8-byte initialization vector (IV) (only in feedback mode).</source>
          <target state="translated">パラメータは、有効鍵サイズとオプションで8バイトの初期化ベクトル(IV)で構成される(フィードバックモード時のみ)。</target>
        </trans-unit>
        <trans-unit id="0b947091ed01239ac2c63710914b838d30a607d9" translate="yes" xml:space="preserve">
          <source>The parameters of the underlying executable do not necessarily have unique names, or names that are legal identifiers in the Java programming language (JLS 3.8).</source>
          <target state="translated">基底となる実行ファイルのパラメータには、必ずしも一意の名前や、Java プログラミング言語(JLS 3.8)における法的な識別子である名前が含まれているとは限りません。</target>
        </trans-unit>
        <trans-unit id="76d53ff74b412d6d37047d16013d75e50df36de2" translate="yes" xml:space="preserve">
          <source>The parameters represent the two parts of a phrase like '6 Hours'. For example:</source>
          <target state="translated">パラメータは、「6時間」のようなフレーズの2つの部分を表します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="ad7182414b3d2ec2fdd16dc0fcb2c6566049a62c" translate="yes" xml:space="preserve">
          <source>The parameters specified by an &lt;code&gt;ImageReadParam&lt;/code&gt; are applied to an image as follows. First, if a rendering size has been set by &lt;code&gt;setSourceRenderSize&lt;/code&gt;, the entire decoded image is rendered at the size given by &lt;code&gt;getSourceRenderSize&lt;/code&gt;. Otherwise, the image has its natural size given by &lt;code&gt;ImageReader.getWidth&lt;/code&gt; and &lt;code&gt;ImageReader.getHeight&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageReadParam&lt;/code&gt; で指定されたパラメーターは、次のように画像に適用されます。まず、レンダリングサイズが &lt;code&gt;setSourceRenderSize&lt;/code&gt; で設定されている場合、デコードされた画像全体が &lt;code&gt;getSourceRenderSize&lt;/code&gt; で指定されたサイズでレンダリングされます。それ以外の場合、画像は &lt;code&gt;ImageReader.getWidth&lt;/code&gt; および &lt;code&gt;ImageReader.getHeight&lt;/code&gt; で指定された本来のサイズになります。</target>
        </trans-unit>
        <trans-unit id="71e0836126bfdf6c19dabd14a10861299a8d46d0" translate="yes" xml:space="preserve">
          <source>The parameters supplied to this constructor are subject to the constraints described in &lt;a href=&quot;#setValues(int,int,int,int)&quot;&gt;&lt;code&gt;setValues(int, int, int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The parameters supplied to this constructor are subject to the constraints described in &lt;a href=&quot;#setValues(int,int,int,int)&quot;&gt; &lt;code&gt;setValues(int, int, int, int)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a0eb52dcb0a07ffe222d0a4187fb174042c35c23" translate="yes" xml:space="preserve">
          <source>The parameters to &lt;code&gt;Printable.print(..)&lt;/code&gt; include a &lt;code&gt;PageFormat&lt;/code&gt; which describes the printable area of the page, needed for calculating the contents that will fit the page, and the page index, which specifies the zero-based print stream index of the requested page.</source>
          <target state="translated">The parameters to &lt;code&gt;Printable.print(..)&lt;/code&gt; include a &lt;code&gt;PageFormat&lt;/code&gt; which describes the printable area of the page, needed for calculating the contents that will fit the page, and the page index, which specifies the zero-based print stream index of the requested page.</target>
        </trans-unit>
        <trans-unit id="adce7a8e02b2dbab7543097404b50ae2e2f2c0d3" translate="yes" xml:space="preserve">
          <source>The parameters to these methods follow consistent patterns:</source>
          <target state="translated">これらのメソッドのパラメータは一貫したパターンに従います。</target>
        </trans-unit>
        <trans-unit id="64f3c4e11f9c88a8f6edb02c85c8a7f5a133e45c" translate="yes" xml:space="preserve">
          <source>The parameters used to construct the common pool may be controlled by setting the following &lt;a href=&quot;../../lang/system#getProperty(java.lang.String)&quot;&gt;system properties&lt;/a&gt;:</source>
          <target state="translated">The parameters used to construct the common pool may be controlled by setting the following &lt;a href=&quot;../../lang/system#getProperty(java.lang.String)&quot;&gt;system properties&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="cbf95408183e18e8026be8d135af97a9475df373" translate="yes" xml:space="preserve">
          <source>The parameters will always have the ciphersuite and protocols arrays set to non-null values.</source>
          <target state="translated">パラメータは常に ciphersuite と protocols 配列が非 null 値に設定されています。</target>
        </trans-unit>
        <trans-unit id="b52384d72a0f4af8de4f042358cf9996bbe18cf1" translate="yes" xml:space="preserve">
          <source>The parameters will always have the ciphersuites and protocols arrays set to non-null values.</source>
          <target state="translated">パラメータには常にサイファースイートとプロトコルの配列が NULL 以外の値に設定されます。</target>
        </trans-unit>
        <trans-unit id="fbc871c3368e0f342532a2f5e48a852376491cab" translate="yes" xml:space="preserve">
          <source>The parent &lt;code&gt;ClassLoader&lt;/code&gt;</source>
          <target state="translated">親 &lt;code&gt;ClassLoader&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e0f70c146a15a9633f15da82c69e002a0f572e9c" translate="yes" xml:space="preserve">
          <source>The parent &lt;code&gt;TIFFTag&lt;/code&gt; of this &lt;code&gt;TIFFDiectory&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">The parent &lt;code&gt;TIFFTag&lt;/code&gt; of this &lt;code&gt;TIFFDiectory&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d74755cef612aee13f4b446f05e5c5a94e3a7a37" translate="yes" xml:space="preserve">
          <source>The parent Preferences node whose child was added or removed</source>
          <target state="translated">子が追加または削除された親環境設定ノード</target>
        </trans-unit>
        <trans-unit id="33ac4d46f58c647e6c28b3a88eaca5814b56ebef" translate="yes" xml:space="preserve">
          <source>The parent XML reader, or null if none is set.</source>
          <target state="translated">親XMLリーダー、または設定されていない場合はnull。</target>
        </trans-unit>
        <trans-unit id="cd9fa36300939772a8d4ba38942d9a6d934d8ad7" translate="yes" xml:space="preserve">
          <source>The parent bundle of this bundle.</source>
          <target state="translated">このバンドルの親バンドル。</target>
        </trans-unit>
        <trans-unit id="e7f2fe8682b735add36e45bdef4d5db06770add9" translate="yes" xml:space="preserve">
          <source>The parent bundle of this bundle. The parent bundle is searched by &lt;a href=&quot;#getObject(java.lang.String)&quot;&gt;&lt;code&gt;getObject&lt;/code&gt;&lt;/a&gt; when this bundle does not contain a particular resource.</source>
          <target state="translated">The parent bundle of this bundle. The parent bundle is searched by &lt;a href=&quot;#getObject(java.lang.String)&quot;&gt; &lt;code&gt;getObject&lt;/code&gt; &lt;/a&gt; when this bundle does not contain a particular resource.</target>
        </trans-unit>
        <trans-unit id="f994dff1510a6e8c2918e9b6d01ec794ebf2150e" translate="yes" xml:space="preserve">
          <source>The parent bundle of this bundle. The parent bundle is searched by &lt;a href=&quot;resourcebundle#getObject-java.lang.String-&quot;&gt;&lt;code&gt;getObject&lt;/code&gt;&lt;/a&gt; when this bundle does not contain a particular resource.</source>
          <target state="translated">このバンドルの親バンドル。このバンドルに特定のリソースが含まれていない場合、親バンドルは&lt;a href=&quot;resourcebundle#getObject-java.lang.String-&quot;&gt; &lt;code&gt;getObject&lt;/code&gt; &lt;/a&gt;によって検索されます。</target>
        </trans-unit>
        <trans-unit id="1a8a8c799fe8db426e27940a42162ee878964a8c" translate="yes" xml:space="preserve">
          <source>The parent filter, or null if none has been set.</source>
          <target state="translated">親フィルタ、あるいは設定されていない場合は null。</target>
        </trans-unit>
        <trans-unit id="2ad67599d600504152ce7c1281d25a4bda96e309" translate="yes" xml:space="preserve">
          <source>The parent of this Raster, or null.</source>
          <target state="translated">このラスタの親、またはnull。</target>
        </trans-unit>
        <trans-unit id="6ead187d94bbfc9668d1eb5e36e9dd0eef0b1804" translate="yes" xml:space="preserve">
          <source>The parent of this node.</source>
          <target state="translated">このノードの親。</target>
        </trans-unit>
        <trans-unit id="cc6d14ed40ff1babb894dcdc578652bb681cdd1e" translate="yes" xml:space="preserve">
          <source>The parent of this node. All nodes, except &lt;code&gt;Attr&lt;/code&gt;, &lt;code&gt;Document&lt;/code&gt;, &lt;code&gt;DocumentFragment&lt;/code&gt;, &lt;code&gt;Entity&lt;/code&gt;, and &lt;code&gt;Notation&lt;/code&gt; may have a parent. However, if a node has just been created and not yet added to the tree, or if it has been removed from the tree, this is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">The parent of this node. All nodes, except &lt;code&gt;Attr&lt;/code&gt; , &lt;code&gt;Document&lt;/code&gt; , &lt;code&gt;DocumentFragment&lt;/code&gt; , &lt;code&gt;Entity&lt;/code&gt; , and &lt;code&gt;Notation&lt;/code&gt; may have a parent. However, if a node has just been created and not yet added to the tree, or if it has been removed from the tree, this is &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33e9e67cecfddb7bcbfe15f096f52a88a0f4abac" translate="yes" xml:space="preserve">
          <source>The parent of this path object consists of this path's root component, if any, and each element in the path except for the &lt;em&gt;farthest&lt;/em&gt; from the root in the directory hierarchy. This method does not access the file system; the path or its parent may not exist. Furthermore, this method does not eliminate special names such as &quot;.&quot; and &quot;..&quot; that may be used in some implementations. On UNIX for example, the parent of &quot;&lt;code&gt;/a/b/c&lt;/code&gt;&quot; is &quot;&lt;code&gt;/a/b&lt;/code&gt;&quot;, and the parent of &lt;code&gt;&quot;x/y/.&lt;/code&gt;&quot; is &quot;&lt;code&gt;x/y&lt;/code&gt;&quot;. This method may be used with the &lt;a href=&quot;#normalize()&quot;&gt;&lt;code&gt;normalize&lt;/code&gt;&lt;/a&gt; method, to eliminate redundant names, for cases where &lt;em&gt;shell-like&lt;/em&gt; navigation is required.</source>
          <target state="translated">The parent of this path object consists of this path's root component, if any, and each element in the path except for the &lt;em&gt;farthest&lt;/em&gt; from the root in the directory hierarchy. This method does not access the file system; the path or its parent may not exist. Furthermore, this method does not eliminate special names such as &quot;.&quot; and &quot;..&quot; that may be used in some implementations. On UNIX for example, the parent of &quot; &lt;code&gt;/a/b/c&lt;/code&gt; &quot; is &quot; &lt;code&gt;/a/b&lt;/code&gt; &quot;, and the parent of &lt;code&gt;&quot;x/y/.&lt;/code&gt; &quot; is &quot; &lt;code&gt;x/y&lt;/code&gt; &quot;. This method may be used with the &lt;a href=&quot;#normalize()&quot;&gt; &lt;code&gt;normalize&lt;/code&gt; &lt;/a&gt; method, to eliminate redundant names, for cases where &lt;em&gt;shell-like&lt;/em&gt; navigation is required.</target>
        </trans-unit>
        <trans-unit id="3ecda3b1f4f94be292091c923d129f7d53c68915" translate="yes" xml:space="preserve">
          <source>The parent of this path object consists of this path's root component, if any, and each element in the path except for the &lt;em&gt;farthest&lt;/em&gt; from the root in the directory hierarchy. This method does not access the file system; the path or its parent may not exist. Furthermore, this method does not eliminate special names such as &quot;.&quot; and &quot;..&quot; that may be used in some implementations. On UNIX for example, the parent of &quot;&lt;code&gt;/a/b/c&lt;/code&gt;&quot; is &quot;&lt;code&gt;/a/b&lt;/code&gt;&quot;, and the parent of &lt;code&gt;&quot;x/y/.&lt;/code&gt;&quot; is &quot;&lt;code&gt;x/y&lt;/code&gt;&quot;. This method may be used with the &lt;a href=&quot;path#normalize--&quot;&gt;&lt;code&gt;normalize&lt;/code&gt;&lt;/a&gt; method, to eliminate redundant names, for cases where &lt;em&gt;shell-like&lt;/em&gt; navigation is required.</source>
          <target state="translated">このパスオブジェクトの親は、このパスのルートコンポーネント（存在する場合）と、ディレクトリ階層内のルートから&lt;em&gt;最も遠いもの&lt;/em&gt;を除くパスの各要素で構成されます。このメソッドはファイルシステムにアクセスしません。パスまたはその親が存在しない可能性があります。さらに、この方法では、「。」などの特殊な名前は削除されません。および「..」は、一部の実装で使用される場合があります。たとえばUNIXでは、「 &lt;code&gt;/a/b/c&lt;/code&gt; 」の親は「 &lt;code&gt;/a/b&lt;/code&gt; 」であり、 &lt;code&gt;&quot;x/y/.&lt;/code&gt; 」の親は「 &lt;code&gt;x/y&lt;/code&gt; 」です。このメソッドは、&lt;em&gt;シェルのような&lt;/em&gt;ナビゲーションが必要&lt;em&gt;な&lt;/em&gt;場合に、冗長な名前を排除するために、&lt;a href=&quot;path#normalize--&quot;&gt; &lt;code&gt;normalize&lt;/code&gt; &lt;/a&gt;メソッドと一緒に使用できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8eec86ed61bb41b453fe46f696b36fc01364efd8" translate="yes" xml:space="preserve">
          <source>The parentX, parentY, width and height parameters form a Rectangle in this Raster's coordinate space, indicating the area of pixels to be shared. An error will be thrown if this Rectangle is not contained with the bounds of the current Raster.</source>
          <target state="translated">parentX,parentY,width,height パラメータは、このラスタの座標空間内で矩形を形成し、共有するピクセルの領域を示します。この矩形が現在のラスターの境界に含まれていない場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="a015d5afd091b8ea8039b136a7b37b297cf71397" translate="yes" xml:space="preserve">
          <source>The parentX, parentY, width and height parameters form a Rectangle in this WritableRaster's coordinate space, indicating the area of pixels to be shared. An error will be thrown if this Rectangle is not contained with the bounds of the current WritableRaster.</source>
          <target state="translated">parentX,parentY,width,height パラメータは、この WritableRaster の座標空間内で矩形を形成し、共有するピクセルの領域を示します。このRectangleが現在のWritableRasterの境界に含まれていない場合、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="c36a2eb88cb58395a7ce0b4cce65815d955a82d4" translate="yes" xml:space="preserve">
          <source>The parsable textual representation of the declaration block (excluding the surrounding curly braces).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5475591c3ffc90e6e8a0c88b14ba8460d5953d4" translate="yes" xml:space="preserve">
          <source>The parsable textual representation of the declaration block (excluding the surrounding curly braces). Setting this attribute will result in the parsing of the new value and resetting of all the properties in the declaration block including the removal or addition of properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f344b8a3dae0b9a2ed9e7339cb6b96e27180e7ff" translate="yes" xml:space="preserve">
          <source>The parsable textual representation of the media list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6847d7815246c2dffbbfce713fe44482b4d6e66f" translate="yes" xml:space="preserve">
          <source>The parsable textual representation of the media list. This is a comma-separated list of media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ff572ddaacf237b4fddf4460a1245ae5ba39f8" translate="yes" xml:space="preserve">
          <source>The parsable textual representation of the page selector for the rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2ce014def84eab302481930994a5adcb82e900" translate="yes" xml:space="preserve">
          <source>The parsable textual representation of the rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f633c2fa350868719d81450ea8eac37449681437" translate="yes" xml:space="preserve">
          <source>The parsable textual representation of the rule. This reflects the current state of the rule and not its initial value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34ccef159a0d71e1f63c70bb6fe8aedb77a7a54" translate="yes" xml:space="preserve">
          <source>The parsed value. Passing an integer that corresponds to a known name (e.g., 700) will return the associated name (e.g., &lt;code&gt;CONFIG&lt;/code&gt;). Passing an integer that does not (e.g., 1) will return a new level name initialized to that value.</source>
          <target state="translated">解析された値。既知の名前（700など）に対応する整数を渡すと、関連付けられた名前（ &lt;code&gt;CONFIG&lt;/code&gt; など）が返されます。ない整数（例：1）を渡すと、その値に初期化された新しいレベル名が返されます。</target>
        </trans-unit>
        <trans-unit id="c80c4671a6882e49c3c95f5d8d0a916dc52dfeed" translate="yes" xml:space="preserve">
          <source>The parser drives the ParserCallback, which is provided by HTMLDocument. To change the callback, subclass HTMLDocument and reimplement the createDefaultDocument method to return document that produces a different reader. The reader controls how the document is structured. Although the Document provides HTML support by default, there is nothing preventing support of non-HTML tags that result in alternative element structures.</source>
          <target state="translated">パーサは HTMLDocument によって提供される ParserCallback を駆動します。コールバックを変更するには、HTMLDocument をサブクラス化し、異なるリーダーを生成するドキュメントを返す createDefaultDocument メソッドを再実装します。リーダーは、ドキュメントがどのように構造化されるかを制御します。Document はデフォルトで HTML をサポートしていますが、代替の要素構造をもたらす非 HTML タグのサポートを妨げるものは何もありません。</target>
        </trans-unit>
        <trans-unit id="0958e538d194ee775ec5a4fae0f7ef159a0e04df" translate="yes" xml:space="preserve">
          <source>The parser for a variable width value such as this normally behaves greedily, accepting as many digits as possible. This behavior can be affected by 'adjacent value parsing'. See &lt;a href=&quot;#appendValue(java.time.temporal.TemporalField,int)&quot;&gt;&lt;code&gt;appendValue(java.time.temporal.TemporalField, int)&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">The parser for a variable width value such as this normally behaves greedily, accepting as many digits as possible. This behavior can be affected by 'adjacent value parsing'. See &lt;a href=&quot;#appendValue(java.time.temporal.TemporalField,int)&quot;&gt; &lt;code&gt;appendValue(java.time.temporal.TemporalField, int)&lt;/code&gt; &lt;/a&gt; for full details.</target>
        </trans-unit>
        <trans-unit id="21ff5f3cdc66539833c1fbafaf60db7a54685bb2" translate="yes" xml:space="preserve">
          <source>The parser for a variable width value such as this normally behaves greedily, accepting as many digits as possible. This behavior can be affected by 'adjacent value parsing'. See &lt;a href=&quot;datetimeformatterbuilder#appendValue-java.time.temporal.TemporalField-int-&quot;&gt;&lt;code&gt;appendValue(java.time.temporal.TemporalField, int)&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">このような可変幅の値のパーサーは、通常、貪欲に動作し、できるだけ多くの桁を受け入れます。この動作は、「隣接する値の解析」の影響を受ける可能性があります。詳細については、&lt;a href=&quot;datetimeformatterbuilder#appendValue-java.time.temporal.TemporalField-int-&quot;&gt; &lt;code&gt;appendValue(java.time.temporal.TemporalField, int)&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="0c09eecf6e6b5152ce4eaa50a2e9cb6e5669cb3d" translate="yes" xml:space="preserve">
          <source>The parser for a variable width value such as this normally behaves greedily, requiring one digit, but accepting as many digits as possible. This behavior can be affected by 'adjacent value parsing'. See &lt;a href=&quot;#appendValue(java.time.temporal.TemporalField,int)&quot;&gt;&lt;code&gt;appendValue(java.time.temporal.TemporalField, int)&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">The parser for a variable width value such as this normally behaves greedily, requiring one digit, but accepting as many digits as possible. This behavior can be affected by 'adjacent value parsing'. See &lt;a href=&quot;#appendValue(java.time.temporal.TemporalField,int)&quot;&gt; &lt;code&gt;appendValue(java.time.temporal.TemporalField, int)&lt;/code&gt; &lt;/a&gt; for full details.</target>
        </trans-unit>
        <trans-unit id="9f6b73693478a0455ddabfd20c4e13a83419854e" translate="yes" xml:space="preserve">
          <source>The parser for a variable width value such as this normally behaves greedily, requiring one digit, but accepting as many digits as possible. This behavior can be affected by 'adjacent value parsing'. See &lt;a href=&quot;datetimeformatterbuilder#appendValue-java.time.temporal.TemporalField-int-&quot;&gt;&lt;code&gt;appendValue(java.time.temporal.TemporalField, int)&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">このような可変幅の値のパーサーは通常、貪欲に動作し、1桁を必要としますが、できるだけ多くの桁を受け入れます。この動作は、「隣接する値の解析」の影響を受ける可能性があります。詳細については、&lt;a href=&quot;datetimeformatterbuilder#appendValue-java.time.temporal.TemporalField-int-&quot;&gt; &lt;code&gt;appendValue(java.time.temporal.TemporalField, int)&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2b2566f1d573d8a0c323846050643ae43f48e34c" translate="yes" xml:space="preserve">
          <source>The parser is replaceable. The default parser is the Hot Java parser which is DTD based. A different DTD can be used, or an entirely different parser can be used. To change the parser, reimplement the getParser method. The default parser is dynamically loaded when first asked for, so the class files will never be loaded if an alternative parser is used. The default parser is in a separate package called parser below this package.</source>
          <target state="translated">パーサは交換可能です。デフォルトのパーサーは、DTD ベースの Hot Java パーサーです。別のDTDを使用するか、全く別のパーサを使用することができます。パーサを変更するには、getParserメソッドを再実装してください。デフォルトのパーサは、最初に要求されたときに動的にロードされますので、代替のパーサが使用されてもクラスファイルはロードされません。デフォルトのパーサは、このパッケージの下にある parser という別のパッケージにあります。</target>
        </trans-unit>
        <trans-unit id="1db896e88ea1524b86eec66607087c03e131c1fe" translate="yes" xml:space="preserve">
          <source>The parser treats \r and \r\n as \n. Newlines after starttags and before end tags are ignored just as specified in the SGML/HTML specification.</source>
          <target state="translated">パーサーは、「\r」と「\r\r\n」を「\n」として扱います。starttagsの後とendタグの前の改行は、SGML/HTML仕様と同様に無視されます。</target>
        </trans-unit>
        <trans-unit id="f79566e8db3ace95b06a78c81cfb5c3a069df4ea" translate="yes" xml:space="preserve">
          <source>The parser will call this method after each &lt;code&gt;Element&lt;/code&gt; start tag has been scanned, but before the remainder of the &lt;code&gt;Element&lt;/code&gt; is processed.</source>
          <target state="translated">The parser will call this method after each &lt;code&gt;Element&lt;/code&gt; start tag has been scanned, but before the remainder of the &lt;code&gt;Element&lt;/code&gt; is processed.</target>
        </trans-unit>
        <trans-unit id="89bb0dda1c5e645ee858d42db8076dbafa59d5c5" translate="yes" xml:space="preserve">
          <source>The parser will call this method after each &lt;code&gt;Element&lt;/code&gt; start tag has been scanned, but before the remainder of the &lt;code&gt;Element&lt;/code&gt; is processed. The intent is to allow the element, including any children, to be efficiently skipped. Note that only element nodes are passed to the &lt;code&gt;startElement&lt;/code&gt; function.</source>
          <target state="translated">The parser will call this method after each &lt;code&gt;Element&lt;/code&gt; start tag has been scanned, but before the remainder of the &lt;code&gt;Element&lt;/code&gt; is processed. The intent is to allow the element, including any children, to be efficiently skipped. Note that only element nodes are passed to the &lt;code&gt;startElement&lt;/code&gt; function.</target>
        </trans-unit>
        <trans-unit id="25bb83472b4f57122efa4cb36da17a7150c525d7" translate="yes" xml:space="preserve">
          <source>The parser will call this method before opening any external entity except the top-level document entity. Such entities include the external DTD subset and external parameter entities referenced within the DTD (in either case, only if the parser reads external parameter entities), and external general entities referenced within the document element (if the parser reads external general entities). The application may request that the parser locate the entity itself, that it use an alternative URI, or that it use data provided by the application (as a character or byte input stream).</source>
          <target state="translated">パーサは、トップレベルのドキュメントエンティティ以外の外部エンティティを開く前に、このメソッドを呼び出します。このようなエンティティには、外部 DTD サブセットと DTD 内で参照される外部パラメータエンティティ(いずれの場合も、パーサが外部パラメータエンティティを読み込む場合のみ)、およびドキュメント要素内で参照される外部一般エンティティ(パーサが外部一般エンティティを読み込む場合)が含まれます。アプリケーションは、パーサがエンティティ自体を検索するように要求したり、別の URI を使用したり、アプリケーションから提供されたデータ(文字またはバイト入力ストリーム)を使用するように要求したりすることができます。</target>
        </trans-unit>
        <trans-unit id="0ee7fce3ce38754400a5fb2ffa707a2159a2a86a" translate="yes" xml:space="preserve">
          <source>The parsing and conversion to a path object is inherently implementation dependent. In the simplest case, the path string is rejected, and &lt;a href=&quot;invalidpathexception&quot;&gt;&lt;code&gt;InvalidPathException&lt;/code&gt;&lt;/a&gt; thrown, if the path string contains characters that cannot be converted to characters that are &lt;em&gt;legal&lt;/em&gt; to the file store. For example, on UNIX systems, the NUL (\u0000) character is not allowed to be present in a path. An implementation may choose to reject path strings that contain names that are longer than those allowed by any file store, and where an implementation supports a complex path syntax, it may choose to reject path strings that are &lt;em&gt;badly formed&lt;/em&gt;.</source>
          <target state="translated">構文解析とパスオブジェクトへの変換は、本質的に実装に依存します。最も単純なケースでは、パス文字列が拒否され、パス文字列にファイルストアで&lt;em&gt;有効な&lt;/em&gt;文字に変換できない文字が含まれていると、&lt;a href=&quot;invalidpathexception&quot;&gt; &lt;code&gt;InvalidPathException&lt;/code&gt; が&lt;/a&gt;スローされます。たとえば、UNIXシステムでは、NUL（\ u0000）文字をパスに含めることはできません。実装は任意のファイルストアによって許可されたものより長い名を含むパス文字列を拒否することを選択することができ、実装が複雑なパス構文をサポートしている、それがされているパス文字列拒否することもできます&lt;em&gt;ひどく形成を&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="58366cc3fc3392a36ac4de8d54ae2345f03badf0" translate="yes" xml:space="preserve">
          <source>The parsing is done field by field so that the following holds for any lexically correct String x:</source>
          <target state="translated">構文解析はフィールドごとに行われるので、字句的に正しい文字列 x に対しては以下のようになります。</target>
        </trans-unit>
        <trans-unit id="70a1b9684ff0e071a82a4339efad58504e82add3" translate="yes" xml:space="preserve">
          <source>The part of the destination lying inside of the source is composited over the source and replaces the destination (Porter-Duff Destination Atop Source rule).</source>
          <target state="translated">ソースの内側に横たわっているデスティネーションの部分がソースの上に合成され、デスティネーションに置き換わります(ポーターダフデスティネーション・アトープ・ソース・ルール)。</target>
        </trans-unit>
        <trans-unit id="1da589b57f7260e6e37c7640ceeaac089943225b" translate="yes" xml:space="preserve">
          <source>The part of the destination lying inside of the source replaces the destination (Porter-Duff Destination In Source rule).</source>
          <target state="translated">ソースの内側に横たわっているデスティネーションの部分がデスティネーションを置き換えます(ポーターダフデスティネーションインソースルール)。</target>
        </trans-unit>
        <trans-unit id="dcfe0a22ae97cb137aea5a3bbe6c1a59738245d0" translate="yes" xml:space="preserve">
          <source>The part of the destination lying outside of the source replaces the destination (Porter-Duff Destination Held Out By Source rule).</source>
          <target state="translated">ソースの外側にあるデスティネーションの部分がデスティネーションを置き換えます(Porter-Duff Destination Held Out By Sourceルール)。</target>
        </trans-unit>
        <trans-unit id="0514c11ef515545f2db88b599f4ee46a343c496c" translate="yes" xml:space="preserve">
          <source>The part of the link name that has not been resolved. It is a composite name. It can be null, which means the link remaining name field has not been set.</source>
          <target state="translated">リンク名の中で解決していない部分。これは合成名です。nullにすることもできますが、これはリンク残名フィールドが設定されていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="47baf3ca1b3134d4434d6cb4c6eec321ec81a768" translate="yes" xml:space="preserve">
          <source>The part of the link name that was resolved successfully. It is a composite name. It can be null, which means the link resolved name field has not been set.</source>
          <target state="translated">リンク名の解決に成功した部分。これは合成名です。これは、リンク解決された名前フィールドが設定されていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="32726d1c2037f095bb11ef491521f5e2b8d6ac95" translate="yes" xml:space="preserve">
          <source>The part of the name that has not been resolved. It is a composite name. It can be null, which means the remaining name field has not been set.</source>
          <target state="translated">名前の中で解決していない部分。これは合成名です。nullにすることもできますが、これは残りの名前フィールドが設定されていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="ec9433b1d02006377972147afe60dd9073ccb8e0" translate="yes" xml:space="preserve">
          <source>The part of the name that was resolved successfully. It is a composite name. It can be null, which means the resolved name field has not been set.</source>
          <target state="translated">名前の解決に成功した部分。これは合成名です。nullにすることもできますが、これは解決された名前フィールドが設定されていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="6d1c09fb04aadbb62a7a9fde5b33cff4c271e44c" translate="yes" xml:space="preserve">
          <source>The part of the source lying inside of the destination is composited onto the destination (Porter-Duff Source Atop Destination rule).</source>
          <target state="translated">デスティネーションの内側に横たわっているソースの部分をデスティネーションに合成します(Porter-Duff Source Atop Destinationルール)。</target>
        </trans-unit>
        <trans-unit id="40baec417b1738d9f463750ccea01809d5a85bba" translate="yes" xml:space="preserve">
          <source>The part of the source lying inside of the destination replaces the destination (Porter-Duff Source In Destination rule).</source>
          <target state="translated">デスティネーションの内側に横たわっているソースの部分がデスティネーションに置き換わる(Porter-Duff Source In Destinationルール)。</target>
        </trans-unit>
        <trans-unit id="0edd66952700232dfab5dd336b9d5a21df59003b" translate="yes" xml:space="preserve">
          <source>The part of the source lying outside of the destination replaces the destination (Porter-Duff Source Held Out By Destination rule).</source>
          <target state="translated">デスティネーションの外側にあるソースの部分がデスティネーションに置き換わります(Porter-Duff Source Held Out By Destinationルール)。</target>
        </trans-unit>
        <trans-unit id="76bc3c459fb6e604ce60cb4e6b1d79dd10a65b80" translate="yes" xml:space="preserve">
          <source>The part of the source that lies outside of the destination is combined with the part of the destination that lies outside of the source (Porter-Duff Source Xor Destination rule).</source>
          <target state="translated">宛先の外側にあるソースの部分は、ソースの外側にある宛先の部分と結合されます(ポーターダフソースXor宛先ルール)。</target>
        </trans-unit>
        <trans-unit id="a0ccdd4edd6b9daa6601aef32f68b66801d49f2d" translate="yes" xml:space="preserve">
          <source>The particular &lt;code&gt;ImageReader&lt;/code&gt; implementation may choose how often to provide updates. Each update specifies that a given region of the image has been updated since the last update. A region is described by its spatial bounding box (&lt;code&gt;minX&lt;/code&gt;, &lt;code&gt;minY&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, and &lt;code&gt;height&lt;/code&gt;); X and Y subsampling factors (&lt;code&gt;periodX&lt;/code&gt; and &lt;code&gt;periodY&lt;/code&gt;); and a set of updated bands (&lt;code&gt;bands&lt;/code&gt;). For example, the update:</source>
          <target state="translated">特定の &lt;code&gt;ImageReader&lt;/code&gt; 実装では、更新を提供する頻度を選択できます。各更新は、画像の特定の領域が最後の更新以降に更新されたことを示します。領域は、その空間境界ボックス（ &lt;code&gt;minX&lt;/code&gt; 、 &lt;code&gt;minY&lt;/code&gt; 、 &lt;code&gt;width&lt;/code&gt; 、および &lt;code&gt;height&lt;/code&gt; ）によって記述されます。 XおよびYサブサンプリング係数（ &lt;code&gt;periodX&lt;/code&gt; および &lt;code&gt;periodY&lt;/code&gt; ）;更新されたバンドのセット（ &lt;code&gt;bands&lt;/code&gt; ）。たとえば、更新：</target>
        </trans-unit>
        <trans-unit id="2d05bd905575708b902adb79797980be7e49876a" translate="yes" xml:space="preserve">
          <source>The particular compression scheme to be used can be specified by using the &lt;code&gt;setCompressionType()&lt;/code&gt; method with the appropriate type string. The compression scheme specified will be honored if and only if it is compatible with the type of image being written. If the specified compression scheme is not compatible with the type of image being written then the &lt;code&gt;IOException&lt;/code&gt; will be thrown by the BMP image writer. If the compression type is not set explicitly then &lt;code&gt;getCompressionType()&lt;/code&gt; will return &lt;code&gt;null&lt;/code&gt;. In this case the BMP image writer will select a compression type that supports encoding of the given image without loss of the color resolution.</source>
          <target state="translated">使用する特定の圧縮方式は、適切なタイプ文字列を指定した &lt;code&gt;setCompressionType()&lt;/code&gt; メソッドを使用して指定できます。指定された圧縮スキームは、書き込まれるイメージのタイプと互換性がある場合にのみ適用されます。指定された圧縮方式が書き込まれるイメージのタイプと互換性がない &lt;code&gt;IOException&lt;/code&gt; 、BMPイメージライターによってIOExceptionがスローされます。圧縮タイプが明示的に設定されていない場合、 &lt;code&gt;getCompressionType()&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; を返します。この場合、BMP画像ライターは、カラー解像度を失うことなく、特定の画像のエンコードをサポートする圧縮タイプを選択します。</target>
        </trans-unit>
        <trans-unit id="d678e3b47db28315a51c9392f3290d72efd52628" translate="yes" xml:space="preserve">
          <source>The passed in &lt;code&gt;Graphics&lt;/code&gt; object might have a transform other than the identify transform installed on it. In this case, you might get unexpected results if you cumulatively apply another transform.</source>
          <target state="translated">渡された &lt;code&gt;Graphics&lt;/code&gt; オブジェクトには、identifyトランスフォーム以外のトランスフォームがインストールされている可能性があります。この場合、別の変換を累積的に適用すると、予期しない結果が生じる可能性があります。</target>
        </trans-unit>
        <trans-unit id="e8241d354a88f83dd6e313eef3dc68fb3e944175" translate="yes" xml:space="preserve">
          <source>The password can be viewed as some kind of raw key material, from which the encryption mechanism that uses it derives a cryptographic key.</source>
          <target state="translated">パスワードは、それを使用する暗号化機構が暗号鍵を導出する、ある種の生の鍵材料として見ることができます。</target>
        </trans-unit>
        <trans-unit id="820e2577f359bf6935013e53ac3bf2a5b32541fa" translate="yes" xml:space="preserve">
          <source>The past notifications sending on/off flag value.</source>
          <target state="translated">過去の通知送信オンオフフラグの値。</target>
        </trans-unit>
        <trans-unit id="2dff58ea6e8968b95e225bc5373e375d5474c33c" translate="yes" xml:space="preserve">
          <source>The path</source>
          <target state="translated">道のり</target>
        </trans-unit>
        <trans-unit id="34dc364ae2dbeed42a8b0e59b6b7f50e29642280" translate="yes" xml:space="preserve">
          <source>The path component of a URI, if defined, only contains the slash character (&lt;code&gt;'/'&lt;/code&gt;), the commercial-at character (&lt;code&gt;'@'&lt;/code&gt;), and characters in the</source>
          <target state="translated">URIのパスコンポーネントは、定義されている場合、スラッシュ文字（ &lt;code&gt;'/'&lt;/code&gt; ）、コマーシャルアット文字（ &lt;code&gt;'@'&lt;/code&gt; ）、および</target>
        </trans-unit>
        <trans-unit id="ce374624d095692df597972be967a92da604ae1f" translate="yes" xml:space="preserve">
          <source>The path component of a hierarchical URI is itself said to be absolute if it begins with a slash character (&lt;code&gt;'/'&lt;/code&gt;); otherwise it is relative. The path of a hierarchical URI that is either absolute or specifies an authority is always absolute.</source>
          <target state="translated">階層URIのパスコンポーネントは、スラッシュ文字（ &lt;code&gt;'/'&lt;/code&gt; ）で始まる場合、それ自体が絶対パスと呼ばれます。それ以外の場合は相対的です。絶対であるか、または権限を指定する階層URIのパスは常に絶対です。</target>
        </trans-unit>
        <trans-unit id="984a1006edcb13d7a44e0aa4a2152ea60b272a92" translate="yes" xml:space="preserve">
          <source>The path component of this URI, or &lt;code&gt;null&lt;/code&gt; if the path is undefined</source>
          <target state="translated">このURIのパスコンポーネント。パスが定義されていない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a70f79521a69bb3942223fa682e3262fee7ae26f" translate="yes" xml:space="preserve">
          <source>The path length constraint has been violated.</source>
          <target state="translated">パス長制約に違反しています。</target>
        </trans-unit>
        <trans-unit id="9c2f7c86fc8f01ff7e4a59e3bc63da50bbfde30a" translate="yes" xml:space="preserve">
          <source>The path should generally, but is not required to, end with '/'. If the path does not end with '/', eg such as with &lt;code&gt;&quot;/foo&quot;&lt;/code&gt; then this would match requests with a path of &lt;code&gt;&quot;/foobar&quot;&lt;/code&gt; or &lt;code&gt;&quot;/foo/bar&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79852855fbcc34d332e59a024d37902ef3399008" translate="yes" xml:space="preserve">
          <source>The path specifies the root URI path for this context. The first character of path must be '/'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2d067f7af76e2b06945d71f3ec990142c7f99d" translate="yes" xml:space="preserve">
          <source>The pathname string of the parent directory named by this abstract pathname, or &lt;code&gt;null&lt;/code&gt; if this pathname does not name a parent</source>
          <target state="translated">この抽象パス名で指定された親ディレクトリのパス名文字列、またはこのパス名が親を指定していない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="36815dfa099a2085beea9c4219c1336efe128f00" translate="yes" xml:space="preserve">
          <source>The paths returned from &lt;code&gt;getSelectionPaths&lt;/code&gt; are in the same order as those supplied to this method.</source>
          <target state="translated">&lt;code&gt;getSelectionPaths&lt;/code&gt; から返されるパスは、このメソッドに提供されるパスと同じ順序です。</target>
        </trans-unit>
        <trans-unit id="44bfbe0740e4812ab2ebef01403857fd4763cbc0" translate="yes" xml:space="preserve">
          <source>The pattern for which this matcher was created</source>
          <target state="translated">このマッチャーが作成されたパターン</target>
        </trans-unit>
        <trans-unit id="36288d456902db8f2b6812d0fa34109886d1b2c0" translate="yes" xml:space="preserve">
          <source>The peer address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2c3487039ef25eb5545370e934fa95e28b34f7" translate="yes" xml:space="preserve">
          <source>The peer primary address of the association or the address that the message was sent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df695ca495032754cb1e1d72664b6f7e2ce057b1" translate="yes" xml:space="preserve">
          <source>The pen width, measured perpendicularly to the pen trajectory.</source>
          <target state="translated">ペンの幅は、ペンの軌跡に対して垂直に測定されます。</target>
        </trans-unit>
        <trans-unit id="8070624d401231b6bc6ba43c5cd26c92a8154972" translate="yes" xml:space="preserve">
          <source>The performance of the programs can depend on your choice of the class to represent call sites. The above example used &lt;a href=&quot;support/simplerelinkablecallsite&quot;&gt;&lt;code&gt;SimpleRelinkableCallSite&lt;/code&gt;&lt;/a&gt;, but you might want to use &lt;a href=&quot;support/chainedcallsite&quot;&gt;&lt;code&gt;ChainedCallSite&lt;/code&gt;&lt;/a&gt; instead. You'll need to experiment and decide what fits your runtime the best. You can further subclass either of these or implement your own.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228163f26ece9e76769fe19d43640bb8467f3d60" translate="yes" xml:space="preserve">
          <source>The period added is a multiple of this unit. For example, this method could be used to add &quot;3 days&quot; to a date by calling this method on the instance representing &quot;days&quot;, passing the date and the period &quot;3&quot;. The period to be added may be negative, which is equivalent to subtraction.</source>
          <target state="translated">追加される期間は、この単位の倍数です。例えば、&quot;days &quot;を表すインスタンス上でこのメソッドを呼び出し、日付と期間 &quot;3 &quot;を渡すことで、日付に &quot;3日 &quot;を追加することができます。追加される期間は負の値であってもよく、これは減算と同じです。</target>
        </trans-unit>
        <trans-unit id="9fdc88c8af0c7b558ba1c4c23f7e65140ebfa762" translate="yes" xml:space="preserve">
          <source>The period character &lt;code&gt;'.'&lt;/code&gt; (&lt;code&gt;'\u002e'&lt;/code&gt;, &lt;small&gt;FULL STOP&lt;/small&gt;),</source>
          <target state="translated">ピリオド文字 &lt;code&gt;'.'&lt;/code&gt; （ &lt;code&gt;'\u002e'&lt;/code&gt; 、&lt;small&gt;完全停止&lt;/small&gt;）、</target>
        </trans-unit>
        <trans-unit id="8a43a4749a0092ff01f681602eba4d1752639395" translate="yes" xml:space="preserve">
          <source>The period is defined by the chronology. It controls the supported units and restricts addition/subtraction to &lt;code&gt;ChronoLocalDate&lt;/code&gt; instances of the same chronology.</source>
          <target state="translated">期間は年代順に定義されています。サポートされている単位を制御し、同じ &lt;code&gt;ChronoLocalDate&lt;/code&gt; インスタンスへの加算/減算を制限します。</target>
        </trans-unit>
        <trans-unit id="1a70990b9e6545d7eddd1d2d67af5b8ba6080247" translate="yes" xml:space="preserve">
          <source>The period is modeled as a directed amount of time, meaning that individual parts of the period may be negative.</source>
          <target state="translated">期間は、期間の個々の部分が負の値になる可能性があることを意味し、時間が指示された量としてモデル化されています。</target>
        </trans-unit>
        <trans-unit id="582b9e9609272bc13dc68aa8a72ae7a31ac8a03b" translate="yes" xml:space="preserve">
          <source>The permission for which the &lt;code&gt;SecurityManager&lt;/code&gt; will check when code that is running an application with a &lt;code&gt;SecurityManager&lt;/code&gt; enabled, calls the &lt;code&gt;DriverManager.deregisterDriver&lt;/code&gt; method, &lt;code&gt;DriverManager.setLogWriter&lt;/code&gt; method, &lt;code&gt;DriverManager.setLogStream&lt;/code&gt; (deprecated) method, &lt;code&gt;SyncFactory.setJNDIContext&lt;/code&gt; method, &lt;code&gt;SyncFactory.setLogger&lt;/code&gt; method, &lt;code&gt;Connection.setNetworkTimeout&lt;/code&gt; method, or the &lt;code&gt;Connection.abort&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;SecurityManager&lt;/code&gt; が有効になっているアプリケーションを実行しているコードが &lt;code&gt;DriverManager.deregisterDriver&lt;/code&gt; メソッド、 &lt;code&gt;DriverManager.setLogWriter&lt;/code&gt; メソッド、 &lt;code&gt;DriverManager.setLogStream&lt;/code&gt; （非推奨）メソッド、 &lt;code&gt;SyncFactory.setJNDIContext&lt;/code&gt; メソッド、 &lt;code&gt;SyncFactory.setLogger&lt;/code&gt; メソッドを呼び出すときに、 &lt;code&gt;SecurityManager&lt;/code&gt; がチェックする権限。 &lt;code&gt;Connection.setNetworkTimeout&lt;/code&gt; メソッド、または &lt;code&gt;Connection.abort&lt;/code&gt; メソッド。</target>
        </trans-unit>
        <trans-unit id="7596472c88903a656ba2e77a47db428db58c9b86" translate="yes" xml:space="preserve">
          <source>The permission for which the &lt;code&gt;SecurityManager&lt;/code&gt; will check when code that is running an application with a &lt;code&gt;SecurityManager&lt;/code&gt; enabled, calls the &lt;code&gt;DriverManager.deregisterDriver&lt;/code&gt; method, &lt;code&gt;DriverManager.setLogWriter&lt;/code&gt; method, &lt;code&gt;DriverManager.setLogStream&lt;/code&gt; (deprecated) method, &lt;code&gt;SyncFactory.setJNDIContext&lt;/code&gt; method, &lt;code&gt;SyncFactory.setLogger&lt;/code&gt; method, &lt;code&gt;Connection.setNetworkTimeout&lt;/code&gt; method, or the &lt;code&gt;Connection.abort&lt;/code&gt; method. If there is no &lt;code&gt;SQLPermission&lt;/code&gt; object, these methods throw a &lt;code&gt;java.lang.SecurityException&lt;/code&gt; as a runtime exception.</source>
          <target state="translated">&lt;code&gt;SecurityManager&lt;/code&gt; が有効になっているアプリケーションを実行しているコードが &lt;code&gt;DriverManager.deregisterDriver&lt;/code&gt; メソッド、 &lt;code&gt;DriverManager.setLogWriter&lt;/code&gt; メソッド、 &lt;code&gt;DriverManager.setLogStream&lt;/code&gt; （非推奨）メソッド、 &lt;code&gt;SyncFactory.setJNDIContext&lt;/code&gt; メソッド、 &lt;code&gt;SyncFactory.setLogger&lt;/code&gt; メソッドを呼び出すときに、 &lt;code&gt;SecurityManager&lt;/code&gt; がチェックする権限。 &lt;code&gt;Connection.setNetworkTimeout&lt;/code&gt; メソッド、または &lt;code&gt;Connection.abort&lt;/code&gt; メソッド。 &lt;code&gt;SQLPermission&lt;/code&gt; オブジェクトがない場合、これらのメソッドは実行時例外として &lt;code&gt;java.lang.SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="905e0e83c9c4d3f7868b0477d055820ab11f5e8d" translate="yes" xml:space="preserve">
          <source>The permission returned may dependent upon the state of the connection. For example, the permission before connecting may be different from that after connecting. For example, an HTTP sever, say foo.com, may redirect the connection to a different host, say bar.com. Before connecting the permission returned by the connection will represent the permission needed to connect to foo.com, while the permission returned after connecting will be to bar.com.</source>
          <target state="translated">返されるパーミッションは接続の状態に依存している可能性があります。例えば、接続前のパーミッションと接続後のパーミッションは異なるかもしれません。例えば、HTTP サーバが foo.com のような場合、接続を別のホスト、例えば bar.com にリダイレクトするかもしれません。接続前のパーミッションは foo.com に接続するために必要なパーミッションを表し、 接続後のパーミッションは bar.com に接続するために必要なパーミッションを表します。</target>
        </trans-unit>
        <trans-unit id="9aec82e1b8e6d992b0690a908ac3aedc9b31e177" translate="yes" xml:space="preserve">
          <source>The permission which the SecurityManager will check when code that is running with a SecurityManager calls methods defined in the management interface for the Java platform.</source>
          <target state="translated">SecurityManagerで実行中のコードが、Javaプラットフォームの管理インタフェースで定義されたメソッドを呼び出すときに、SecurityManagerがチェックする権限。</target>
        </trans-unit>
        <trans-unit id="e5faa7a6949030f63d05138d5d40aa6ac04a730d" translate="yes" xml:space="preserve">
          <source>The permission which the SecurityManager will check when code that is running with a SecurityManager calls one of the logging control methods (such as Logger.setLevel).</source>
          <target state="translated">SecurityManager で実行中のコードがロギング制御メソッド(Logger.setLevel など)のいずれかを呼び出したときに SecurityManager がチェックするパーミッション。</target>
        </trans-unit>
        <trans-unit id="67f61541f09f163aad875955ec40973cb856f479" translate="yes" xml:space="preserve">
          <source>The permissions granted to this domain are dynamic, i.e. invoking the &lt;a href=&quot;#staticPermissionsOnly()&quot;&gt;&lt;code&gt;staticPermissionsOnly()&lt;/code&gt;&lt;/a&gt; method returns false. They include both the static permissions passed to this constructor, and any permissions granted to this domain by the current Policy at the time a permission is checked.</source>
          <target state="translated">このドメインに付与された権限は動的です。つまり、&lt;a href=&quot;#staticPermissionsOnly()&quot;&gt; &lt;code&gt;staticPermissionsOnly()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すとfalseが返されます。これらには、このコンストラクターに渡される静的アクセス許可と、アクセス許可がチェックされたときに現在のポリシーによってこのドメインに付与されたアクセス許可の両方が含まれます。</target>
        </trans-unit>
        <trans-unit id="c63c09e1919a0b385305981a2835a097860b9eda" translate="yes" xml:space="preserve">
          <source>The permissions granted to this domain are static, i.e. invoking the &lt;a href=&quot;#staticPermissionsOnly()&quot;&gt;&lt;code&gt;staticPermissionsOnly()&lt;/code&gt;&lt;/a&gt; method returns true. They contain only the ones passed to this constructor and the current Policy will not be consulted.</source>
          <target state="translated">このドメインに付与された権限は静的です。つまり、&lt;a href=&quot;#staticPermissionsOnly()&quot;&gt; &lt;code&gt;staticPermissionsOnly()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すとtrueが返されます。これらには、このコンストラクターに渡されたもののみが含まれ、現在のポリシーは参照されません。</target>
        </trans-unit>
        <trans-unit id="89058a6566fae0c8d5c5fdda2b2372f796569fb3" translate="yes" xml:space="preserve">
          <source>The physical connection is not closed until the connection pool manager calls the &lt;code&gt;PooledConnection&lt;/code&gt; method &lt;code&gt;close&lt;/code&gt;. This method is generally called to have an orderly shutdown of the server or if a fatal error has made the connection unusable.</source>
          <target state="translated">物理接続は、接続プールマネージャが &lt;code&gt;PooledConnection&lt;/code&gt; メソッド &lt;code&gt;close&lt;/code&gt; を呼び出すまで閉じられません。このメソッドは通常、サーバーを正常にシャットダウンするため、または致命的なエラーによって接続が使用できなくなった場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="63cef99a21c3ce784ef3880657559d49f21aea55" translate="yes" xml:space="preserve">
          <source>The pixel (0, 0) in the coordinate space of the graphics context corresponds to the origin of the splash screen native window bounds (see &lt;a href=&quot;#getBounds()&quot;&gt;&lt;code&gt;getBounds()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">グラフィックスコンテキストの座標空間のピクセル（0、0）は、スプラッシュ画面のネイティブウィンドウ境界の原点に対応します（&lt;a href=&quot;#getBounds()&quot;&gt; &lt;code&gt;getBounds()&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="500d2293e97237119e1983a5c3e9a605e180c0c9" translate="yes" xml:space="preserve">
          <source>The pixels of the image are delivered using one or more calls to the setPixels method.</source>
          <target state="translated">画像のピクセルは、1つ以上のsetPixelsメソッドの呼び出しを使用して配信されます。</target>
        </trans-unit>
        <trans-unit id="b32a76182c825641c5cc61b6489eb4335615b5b4" translate="yes" xml:space="preserve">
          <source>The pixels of the image are delivered using one or more calls to the setPixels method. Each call specifies the location and size of the rectangle of source pixels that are contained in the array of pixels. The specified ColorModel object should be used to convert the pixels into their corresponding color and alpha components. Pixel (m,n) is stored in the pixels array at index (n * scansize + m + off). The pixels delivered using this method are all stored as ints. this method are all stored as ints.</source>
          <target state="translated">画像のピクセルは、setPixelsメソッドへの1つ以上の呼び出しを使用して配信されます。それぞれの呼び出しは、ピクセルの配列に含まれるソースピクセルの矩形の位置とサイズを指定します。指定されたColorModelオブジェクトは、ピクセルを対応する色とアルファ成分に変換するために使用されなければなりません。ピクセル(m,n)は、インデックス(n*scansize+m+off)でピクセル配列に格納されます。このメソッドを使用して配信されたピクセルはすべて ints として格納されます。</target>
        </trans-unit>
        <trans-unit id="f611275393252bc802d72fdd641a2615171a85f6" translate="yes" xml:space="preserve">
          <source>The pixels will be delivered in (multiples of) complete scanlines at a time.</source>
          <target state="translated">ピクセルは、一度に(倍数の)完全なスキャンラインで配信されます。</target>
        </trans-unit>
        <trans-unit id="2fece7997ef4b9cf1e323d0a1efd50cb013153b0" translate="yes" xml:space="preserve">
          <source>The pixels will be delivered in a random order.</source>
          <target state="translated">画素はランダムに配信されます。</target>
        </trans-unit>
        <trans-unit id="cf16e6291c890f1d381931538f7295e2f5706d87" translate="yes" xml:space="preserve">
          <source>The pixels will be delivered in a random order. This tells the ImageConsumer not to use any optimizations that depend on the order of pixel delivery, which should be the default assumption in the absence of any call to the setHints method.</source>
          <target state="translated">ピクセルはランダムな順序で配信されます。これは、ピクセルの配信順序に依存する最適化を使用しないよう ImageConsumer に指示します。</target>
        </trans-unit>
        <trans-unit id="9c2099a9c74f962fd6a4d8576f2e1d315893b01f" translate="yes" xml:space="preserve">
          <source>The pixels will be delivered in a single pass.</source>
          <target state="translated">画素は1パスで配信されます。</target>
        </trans-unit>
        <trans-unit id="92bb6ee63ae68c3bc426e959c05f0f0b4310d5a1" translate="yes" xml:space="preserve">
          <source>The pixels will be delivered in a single pass. Each pixel will appear in only one call to any of the setPixels methods. An example of an image format which does not meet this criterion is a progressive JPEG image which defines pixels in multiple passes, each more refined than the previous.</source>
          <target state="translated">ピクセルは単一のパスで配信されます。各ピクセルは1回のsetPixelsメソッドの呼び出しだけで表示されます。この基準を満たさない画像フォーマットの例としては、複数のパスでピクセルを定義し、それぞれが前のパスよりも洗練されているプログレッシブJPEG画像があります。</target>
        </trans-unit>
        <trans-unit id="6310f53f396133fc271c197615afe20c6a96988b" translate="yes" xml:space="preserve">
          <source>The pixels will be delivered in top-down, left-to-right order.</source>
          <target state="translated">画素はトップダウン、左から右への順で配信されます。</target>
        </trans-unit>
        <trans-unit id="9d90b3b0c7f4fd76e2cdd5db2a7c785664e9f012" translate="yes" xml:space="preserve">
          <source>The placeholder parameters set with the &lt;code&gt;BaseRowSet&lt;/code&gt; setter methods are stored as objects in an internal &lt;code&gt;Hashtable&lt;/code&gt; object. Primitives are stored as their &lt;code&gt;Object&lt;/code&gt; type. For example, &lt;code&gt;byte&lt;/code&gt; is stored as &lt;code&gt;Byte&lt;/code&gt; object, and &lt;code&gt;int&lt;/code&gt; is stored as an &lt;code&gt;Integer&lt;/code&gt; object. When the method &lt;code&gt;execute&lt;/code&gt; is called, the values in the &lt;code&gt;Hashtable&lt;/code&gt; object are substituted for the appropriate placeholder parameters in the command.</source>
          <target state="translated">&lt;code&gt;BaseRowSet&lt;/code&gt; セッターメソッドで設定されたプレースホルダーパラメーターは、オブジェクトとして内部 &lt;code&gt;Hashtable&lt;/code&gt; オブジェクトに格納されます。プリミティブは、 &lt;code&gt;Object&lt;/code&gt; タイプとして格納されます。たとえば、 &lt;code&gt;byte&lt;/code&gt; は &lt;code&gt;Byte&lt;/code&gt; オブジェクトとして格納され、 &lt;code&gt;int&lt;/code&gt; は &lt;code&gt;Integer&lt;/code&gt; オブジェクトとして格納されます。メソッド &lt;code&gt;execute&lt;/code&gt; が呼び出されると、 &lt;code&gt;Hashtable&lt;/code&gt; オブジェクトの値が、コマンドの適切なプレースホルダーパラメーターに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="a342a1ca910ba03ac856dd3cb6b496330e72e4ed" translate="yes" xml:space="preserve">
          <source>The placement of the scrollbars is controlled by platform-specific properties set by the user outside of the program.</source>
          <target state="translated">スクロールバーの配置は、ユーザーがプログラムの外部で設定したプラットフォーム固有のプロパティによって制御されます。</target>
        </trans-unit>
        <trans-unit id="75c5e59d7fc130499537b22ca3f6a19ddfdef68a" translate="yes" xml:space="preserve">
          <source>The plain style constant.</source>
          <target state="translated">プレーンなスタイルの定数。</target>
        </trans-unit>
        <trans-unit id="5a84f21cac12242c01031819d62ec386192e9637" translate="yes" xml:space="preserve">
          <source>The platform &lt;code&gt;ClassLoader&lt;/code&gt;.</source>
          <target state="translated">プラットフォーム &lt;code&gt;ClassLoader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffc9ede0436d0d5baf4766a8ab07e168116dd1bc" translate="yes" xml:space="preserve">
          <source>The platform uses signed two's complement integer arithmetic with int and long primitive types. The developer should choose the primitive type to ensure that arithmetic operations consistently produce correct results, which in some cases means the operations will not overflow the range of values of the computation. The best practice is to choose the primitive type and algorithm to avoid overflow. In cases where the size is &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;long&lt;/code&gt; and overflow errors need to be detected, the methods &lt;code&gt;addExact&lt;/code&gt;, &lt;code&gt;subtractExact&lt;/code&gt;, &lt;code&gt;multiplyExact&lt;/code&gt;, &lt;code&gt;toIntExact&lt;/code&gt;, &lt;code&gt;incrementExact&lt;/code&gt;, &lt;code&gt;decrementExact&lt;/code&gt; and &lt;code&gt;negateExact&lt;/code&gt; throw an &lt;code&gt;ArithmeticException&lt;/code&gt; when the results overflow. For the arithmetic operations divide and absolute value, overflow occurs only with a specific minimum or maximum value and should be checked against the minimum or maximum as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d191e3661c045abc37d149ffba48109cff4ab5bb" translate="yes" xml:space="preserve">
          <source>The platform uses signed two's complement integer arithmetic with int and long primitive types. The developer should choose the primitive type to ensure that arithmetic operations consistently produce correct results, which in some cases means the operations will not overflow the range of values of the computation. The best practice is to choose the primitive type and algorithm to avoid overflow. In cases where the size is &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;long&lt;/code&gt; and overflow errors need to be detected, the methods &lt;code&gt;addExact&lt;/code&gt;, &lt;code&gt;subtractExact&lt;/code&gt;, &lt;code&gt;multiplyExact&lt;/code&gt;, and &lt;code&gt;toIntExact&lt;/code&gt; throw an &lt;code&gt;ArithmeticException&lt;/code&gt; when the results overflow. For other arithmetic operations such as divide, absolute value, increment by one, decrement by one, and negation overflow occurs only with a specific minimum or maximum value and should be checked against the minimum or maximum as appropriate.</source>
          <target state="translated">プラットフォームは、intおよびlongプリミティブ型で符号付き2の補数整数演算を使用します。開発者は、算術演算が一貫して正しい結果を生成するようにプリミティブ型を選択する必要があります。これは、場合によっては、演算が計算値の範囲をオーバーフローしないことを意味します。ベストプラクティスは、オーバーフローを回避するためにプリミティブ型とアルゴリズムを選択することです。サイズが &lt;code&gt;int&lt;/code&gt; または &lt;code&gt;long&lt;/code&gt; で、オーバーフローエラーを検出する必要がある場合、メソッド &lt;code&gt;addExact&lt;/code&gt; 、 &lt;code&gt;subtractExact&lt;/code&gt; 、 &lt;code&gt;multiplyExact&lt;/code&gt; 、および &lt;code&gt;toIntExact&lt;/code&gt; は &lt;code&gt;ArithmeticException&lt;/code&gt; をスローします。結果がオーバーフローしたとき。除算、絶対値、1ずつインクリメント、1ずつデクリメント、否定オーバーフローなどの他の算術演算では、特定の最小値または最大値でのみ発生するため、必要に応じて最小値または最大値と照合する必要があります。</target>
        </trans-unit>
        <trans-unit id="2ceb5ca739bd037a631c6a8df267fc3ed5ce1040" translate="yes" xml:space="preserve">
          <source>The platform uses signed two's complement integer arithmetic with int and long primitive types. The developer should choose the primitive type to ensure that arithmetic operations consistently produce correct results, which in some cases means the operations will not overflow the range of values of the computation. The best practice is to choose the primitive type and algorithm to avoid overflow. In cases where the size is &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;long&lt;/code&gt; and overflow errors need to be detected, the methods &lt;code&gt;addExact&lt;/code&gt;, &lt;code&gt;subtractExact&lt;/code&gt;, &lt;code&gt;multiplyExact&lt;/code&gt;, and &lt;code&gt;toIntExact&lt;/code&gt; throw an &lt;code&gt;ArithmeticException&lt;/code&gt; when the results overflow. For other arithmetic operations such as divide, absolute value, increment by one, decrement by one, and negation, overflow occurs only with a specific minimum or maximum value and should be checked against the minimum or maximum as appropriate.</source>
          <target state="translated">プラットフォームは、intおよびlongプリミティブ型で符号付き2の補数整数演算を使用します。開発者は、算術演算が一貫して正しい結果を生成するようにプリミティブ型を選択する必要があります。これは、場合によっては、演算が計算値の範囲をオーバーフローしないことを意味します。ベストプラクティスは、オーバーフローを回避するためにプリミティブ型とアルゴリズムを選択することです。サイズが &lt;code&gt;int&lt;/code&gt; または &lt;code&gt;long&lt;/code&gt; で、オーバーフローエラーを検出する必要がある場合、メソッド &lt;code&gt;addExact&lt;/code&gt; 、 &lt;code&gt;subtractExact&lt;/code&gt; 、 &lt;code&gt;multiplyExact&lt;/code&gt; 、および &lt;code&gt;toIntExact&lt;/code&gt; は &lt;code&gt;ArithmeticException&lt;/code&gt; をスローします。結果がオーバーフローしたとき。除算、絶対値、1ずつインクリメント、1ずつデクリメント、否定などの他の算術演算の場合、オーバーフローは特定の最小値または最大値でのみ発生するため、必要に応じて最小値または最大値と照合する必要があります。</target>
        </trans-unit>
        <trans-unit id="3ddf2138bdbeea3a72c2017234d8cedbfdba2c4d" translate="yes" xml:space="preserve">
          <source>The platform uses signed two's complement integer arithmetic with int and long primitive types. The developer should choose the primitive type to ensure that arithmetic operations consistently produce correct results, which in some cases means the operations will not overflow the range of values of the computation. The best practice is to choose the primitive type and algorithm to avoid overflow. In cases where the size is &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;long&lt;/code&gt; and overflow errors need to be detected, the methods &lt;code&gt;addExact&lt;/code&gt;, &lt;code&gt;subtractExact&lt;/code&gt;, &lt;code&gt;multiplyExact&lt;/code&gt;, and &lt;code&gt;toIntExact&lt;/code&gt; throw an &lt;code&gt;ArithmeticException&lt;/code&gt; when the results overflow. For other arithmetic operations such as divide, absolute value, increment, decrement, and negation overflow occurs only with a specific minimum or maximum value and should be checked against the minimum or maximum as appropriate.</source>
          <target state="translated">プラットフォームは、intおよびlongプリミティブ型で符号付き2の補数整数演算を使用します。開発者は、プリミティブ型を選択して、算術演算が常に正しい結果を生成するようにします。これは、場合によっては、演算が計算の値の範囲をオーバーフローしないことを意味します。ベストプラクティスは、プリミティブタイプとアルゴリズムを選択してオーバーフローを回避することです。サイズが &lt;code&gt;int&lt;/code&gt; または &lt;code&gt;long&lt;/code&gt; でオーバーフローエラーを検出する必要がある場合、メソッド &lt;code&gt;addExact&lt;/code&gt; 、 &lt;code&gt;subtractExact&lt;/code&gt; 、 &lt;code&gt;multiplyExact&lt;/code&gt; 、および &lt;code&gt;toIntExact&lt;/code&gt; は &lt;code&gt;ArithmeticException&lt;/code&gt; をスローします。結果がオーバーフローしたとき。除算、絶対値、増分、減分、否定などの他の算術演算では、特定の最小値または最大値でのみオーバーフローが発生し、必要に応じて最小値または最大値に対してチェックする必要があります。</target>
        </trans-unit>
        <trans-unit id="f7521e50eec810dafda8ec390ca964f1fb534790" translate="yes" xml:space="preserve">
          <source>The plus character &lt;code&gt;'+'&lt;/code&gt; (&lt;code&gt;'\u002b'&lt;/code&gt;, &lt;small&gt;PLUS SIGN&lt;/small&gt;),</source>
          <target state="translated">プラス文字 &lt;code&gt;'+'&lt;/code&gt; （ &lt;code&gt;'\u002b'&lt;/code&gt; 、&lt;small&gt;PLUS SIGN&lt;/small&gt;）、</target>
        </trans-unit>
        <trans-unit id="8de422a879c63cd1d08f600a6e2474b68479ffa1" translate="yes" xml:space="preserve">
          <source>The plus sign &quot;&lt;code&gt;+&lt;/code&gt;&quot; is converted into a space character &quot; &quot; .</source>
          <target state="translated">プラス記号「 &lt;code&gt;+&lt;/code&gt; 」はスペース文字「」に変換されます。</target>
        </trans-unit>
        <trans-unit id="e85f9897d05dda5c28cb4704b1031cfc583d8bdb" translate="yes" xml:space="preserve">
          <source>The point size of this &lt;code&gt;Font&lt;/code&gt; in &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">こののポイントサイズ &lt;code&gt;Font&lt;/code&gt; で &lt;code&gt;float&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e05bc968c4e3e94ec2209d4abaf443fe21787fa" translate="yes" xml:space="preserve">
          <source>The point size of this &lt;code&gt;Font&lt;/code&gt;, rounded to integer.</source>
          <target state="translated">この &lt;code&gt;Font&lt;/code&gt; のポイントサイズ。整数に丸められます。</target>
        </trans-unit>
        <trans-unit id="770068703e30a0ae5899254519c58354757383e7" translate="yes" xml:space="preserve">
          <source>The policies can be certificate-based or may depend on other authentication schemes.</source>
          <target state="translated">ポリシーは、証明書ベースのものであってもよいし、他の認証スキームに依存するものであってもよい。</target>
        </trans-unit>
        <trans-unit id="0e9410b63b7333b991d16e974b0ea1ae55586212" translate="yes" xml:space="preserve">
          <source>The policy constraints have been violated.</source>
          <target state="translated">政策的制約に違反している。</target>
        </trans-unit>
        <trans-unit id="1b63ad61faf90a50a857b840faad61a57d9a475d" translate="yes" xml:space="preserve">
          <source>The policy for a Java runtime (specifying which permissions are available for code from various principals) is represented by a Policy object. Whenever a Policy is initialized or refreshed, Permission objects of appropriate classes are created for all permissions allowed by the Policy.</source>
          <target state="translated">Javaランタイムのポリシー(様々なプリンシパルからのコードに対して利用可能なパーミッションを指定する)は、Policyオブジェクトで表されます。ポリシーが初期化または更新されるたびに、適切なクラスのPermissionオブジェクトが、ポリシーによって許可されたすべてのパーミッションのために作成されます。</target>
        </trans-unit>
        <trans-unit id="744c3ae06df1c4965a33f02db62c6df02c922313" translate="yes" xml:space="preserve">
          <source>The poolable value of a statement is applicable to both internal statement caches implemented by the driver and external statement caches implemented by application servers and other applications.</source>
          <target state="translated">ステートメントのプーリング可能な値は、ドライバによって実装された内部ステートメントキャッシュと、アプリケーションサーバや他のアプリケーションによって実装された外部ステートメントキャッシュの両方に適用されます。</target>
        </trans-unit>
        <trans-unit id="82fae92e0d4dd371e91f2864a390bac7d0eb3216" translate="yes" xml:space="preserve">
          <source>The pooled connection closed by the application</source>
          <target state="translated">アプリケーションによって閉じられたプールされた接続</target>
        </trans-unit>
        <trans-unit id="dfaf71328abec9e71a671eccc845d3121c2b0845" translate="yes" xml:space="preserve">
          <source>The pooling manager does not need to call &lt;code&gt;beginRequest&lt;/code&gt; if:</source>
          <target state="translated">次の場合、プーリングマネージャーは &lt;code&gt;beginRequest&lt;/code&gt; を呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="92fa2d336d7c8160e103bf987c4391a790f21b4b" translate="yes" xml:space="preserve">
          <source>The pooling manager does not need to call &lt;code&gt;endRequest&lt;/code&gt; if:</source>
          <target state="translated">次の場合、プーリングマネージャーは &lt;code&gt;endRequest&lt;/code&gt; を呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="e90b45718cda98d6bea32baefe82cd6640d8dea0" translate="yes" xml:space="preserve">
          <source>The pooling manager should call &lt;code&gt;beginRequest&lt;/code&gt; on the underlying connection prior to returning a connection to the caller.</source>
          <target state="translated">プーリングマネージャーは、呼び出し元に接続を返す前に、基になる接続で &lt;code&gt;beginRequest&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="167dc5ab45ec38b0cd73d7df03608399509bba35" translate="yes" xml:space="preserve">
          <source>The pooling manager should call &lt;code&gt;endRequest&lt;/code&gt; on the underlying connection when the applications returns the connection back to the connection pool.</source>
          <target state="translated">プーリングマネージャは、アプリケーションが接続を接続プールに戻すときに、基になる接続で &lt;code&gt;endRequest&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="6926313f48d16c7d56d1e2313f5a4569737b892b" translate="yes" xml:space="preserve">
          <source>The popup layer displays above dialogs. That way, the popup windows associated with combo boxes, tooltips, and other help text will appear above the component, palette, or dialog that generated them.</source>
          <target state="translated">ポップアップレイヤーはダイアログの上に表示されます。これにより、コンボボックス、ツールチップ、その他のヘルプテキストに関連付けられたポップアップウィンドウが、それらを生成したコンポーネント、パレット、またはダイアログの上に表示されます。</target>
        </trans-unit>
        <trans-unit id="2fdaf80d95e0f5e31151be71383e818b9ccadd36" translate="yes" xml:space="preserve">
          <source>The port component of a URI, if defined, is a non-negative integer.</source>
          <target state="translated">URIのportコンポーネントが定義されている場合は、非負の整数である。</target>
        </trans-unit>
        <trans-unit id="465e20b5e3d6b616ff936762b108d3831a17ee64" translate="yes" xml:space="preserve">
          <source>The port component of this URI, or &lt;code&gt;-1&lt;/code&gt; if the port is undefined</source>
          <target state="translated">このURIのポートコンポーネント。ポートが未定義の場合は &lt;code&gt;-1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2770c496726c2c6a1fb08bb232925adc856e5e7f" translate="yes" xml:space="preserve">
          <source>The port number on the remote host to which this socket is connected.</source>
          <target state="translated">このソケットが接続されているリモートホストのポート番号。</target>
        </trans-unit>
        <trans-unit id="771f8b79eb7ead72cd42f8874261ce51d5e9642c" translate="yes" xml:space="preserve">
          <source>The port of the Service URL.</source>
          <target state="translated">サービスURLのポート。</target>
        </trans-unit>
        <trans-unit id="17cb13d2105c7d415ffa295626d4a87fddb85329" translate="yes" xml:space="preserve">
          <source>The port of the Service URL. If no port was specified, the returned value is 0.</source>
          <target state="translated">サービスURLのポートです。ポートが指定されていない場合は 0 が返されます。</target>
        </trans-unit>
        <trans-unit id="356c1293f756ffbef5fc572bed0d988e81455650" translate="yes" xml:space="preserve">
          <source>The port or portrange is optional. A port specification of the form &quot;N-&quot;, where</source>
          <target state="translated">ポートまたはポートレンジは任意である。N-&quot; の形式のポート指定で、ここでは</target>
        </trans-unit>
        <trans-unit id="f7a3255c4428117efb808f78d07d1a509a065fee" translate="yes" xml:space="preserve">
          <source>The port to lookup the activation system.</source>
          <target state="translated">活性化システムを検索するポート。</target>
        </trans-unit>
        <trans-unit id="a50d6c96a3e4d969a207bbe35ece3c77d64fdbff" translate="yes" xml:space="preserve">
          <source>The portion of a private use subtag prefixed by &quot;lvariant&quot;, if any, is removed and appended to the variant field in the result locale (without case normalization). If it is then empty, the private use subtag is discarded:</source>
          <target state="translated">プライベート使用サブタグの先頭に &quot;lvariant&quot; がある場合は、その部分が削除され、結果ロケールの variant フィールドに追加されます (大文字小文字の正規化は行われません)。空の場合は、プライベート使用サブタグは破棄されます。</target>
        </trans-unit>
        <trans-unit id="dade22179ed59dcfbad33f06553c3e366962e9c8" translate="yes" xml:space="preserve">
          <source>The position</source>
          <target state="translated">位置</target>
        </trans-unit>
        <trans-unit id="be4c1197eaffc124cfb0f83a9e8a33d8b6aa4a29" translate="yes" xml:space="preserve">
          <source>The position argument will indicate the start of the tag, comment or text. Similar to arrays, the first character in the stream has a position of 0. For tags that are implied the position will indicate the location of the next encountered tag. In the first example, the implied start body and html tags will have the same position as the p tag, and the implied end p, html and body tags will all have the same position.</source>
          <target state="translated">position 引数は、タグ、コメント、またはテキストの開始位置を示します。配列と同様に、ストリームの最初の文字の位置は0です。 暗黙のタグの場合、位置は次に遭遇したタグの位置を示します。最初の例では、暗黙の開始タグであるbodyタグとhtmlタグはpタグと同じ位置にあり、暗黙の終了タグであるpタグ、htmlタグ、bodyタグはすべて同じ位置にあります。</target>
        </trans-unit>
        <trans-unit id="e928e79ce165a52965e64d8e1b2549cc6465990b" translate="yes" xml:space="preserve">
          <source>The position for the title.</source>
          <target state="translated">タイトルのポジションです。</target>
        </trans-unit>
        <trans-unit id="9d1f5a30624f167466c9de353c1c87fe46188eb5" translate="yes" xml:space="preserve">
          <source>The position of a component within a layer can also be specified directly. Valid positions range from 0 up to one less than the number of components in that layer. A value of -1 indicates the bottommost position. A value of 0 indicates the topmost position. Unlike layer numbers, higher position values are</source>
          <target state="translated">レイヤー内のコンポーネントの位置を直接指定することもできます。有効な位置は0からそのレイヤー内のコンポーネントの数より1つ少ない位置までの範囲です。値 -1 は最下段の位置を示します。値が0の場合は最上段の位置を示します。レイヤー番号とは異なり、高い位置の値は</target>
        </trans-unit>
        <trans-unit id="9aa972c882e959af5cfa74686b743fa2cca90fbe" translate="yes" xml:space="preserve">
          <source>The position of mark in buffer.</source>
          <target state="translated">バッファ内のマークの位置。</target>
        </trans-unit>
        <trans-unit id="52e63aae911feb5735dffb853de1c4d06a2d4958" translate="yes" xml:space="preserve">
          <source>The position of the first mismatched byte, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a10a32b9ba1b850952eb01a2dac5b8e40ece025" translate="yes" xml:space="preserve">
          <source>The position of this buffer</source>
          <target state="translated">このバッファの位置</target>
        </trans-unit>
        <trans-unit id="e14f14e3eeac65815857675924c0f85fa97086c5" translate="yes" xml:space="preserve">
          <source>The position prior to which data may be discarded.</source>
          <target state="translated">データが廃棄される可能性がある前の位置。</target>
        </trans-unit>
        <trans-unit id="c4ecb0a7945551375751ca2e25e871a33f35f2b7" translate="yes" xml:space="preserve">
          <source>The position prior to which data may be discarded. Seeking to a smaller position is not allowed. &lt;code&gt;flushedPos&lt;/code&gt; will always be &amp;gt;= 0.</source>
          <target state="translated">データが破棄される前の位置。小さい位置へのシークは許可されていません。 &lt;code&gt;flushedPos&lt;/code&gt; は常に&amp;gt; = 0になります。</target>
        </trans-unit>
        <trans-unit id="b019f8134a25cd17d205f23f036ec08fa24eb150" translate="yes" xml:space="preserve">
          <source>The position within the pushback buffer from which the next byte will be read.</source>
          <target state="translated">次のバイトが読み込まれるプッシュバックバッファ内の位置。</target>
        </trans-unit>
        <trans-unit id="ce0957d483aceb3b45553d641f8c629ba289ca24" translate="yes" xml:space="preserve">
          <source>The position within the pushback buffer from which the next byte will be read. When the buffer is empty, &lt;code&gt;pos&lt;/code&gt; is equal to &lt;code&gt;buf.length&lt;/code&gt;; when the buffer is full, &lt;code&gt;pos&lt;/code&gt; is equal to zero.</source>
          <target state="translated">次のバイトが読み取られるプッシュバックバッファー内の位置。バッファーが空の場合、 &lt;code&gt;pos&lt;/code&gt; は &lt;code&gt;buf.length&lt;/code&gt; と等しくなります。バッファがいっぱいになると、 &lt;code&gt;pos&lt;/code&gt; はゼロになります。</target>
        </trans-unit>
        <trans-unit id="2697068a8ce2370b45252b0381024224e1a033b6" translate="yes" xml:space="preserve">
          <source>The positions tracking change are also generally cheap to maintain. The Position implementations (marks) store the array index and can easily calculate the sequential position from the current gap location. Changes only require update to the the marks between the old and new gap boundaries when the gap is moved, so generally updating the marks is pretty cheap. The marks are stored sorted so they can be located quickly with a binary search. This increases the cost of adding a mark, and decreases the cost of keeping the mark updated.</source>
          <target state="translated">また、位置追跡変化は、一般的には維持費が安いです。位置の実装(マーク)は配列のインデックスを格納しており、現在のギャップの位置から連続した位置を簡単に計算できます。変更は、ギャップが移動したときに、古いギャップ境界と新しいギャップ境界の間のマークを更新する必要があるだけなので、一般的にマークの更新はかなり安く済みます。マークはソートされて保存されているので、バイナリ検索で素早く位置を特定することができます。これにより、マークを追加するコストが増加し、マークを更新し続けるコストが減少します。</target>
        </trans-unit>
        <trans-unit id="7548ff65d5ee10f38621f470acbd0447c4140b54" translate="yes" xml:space="preserve">
          <source>The possible actions are these:</source>
          <target state="translated">考えられる行動はこれらです。</target>
        </trans-unit>
        <trans-unit id="30057bbd133f892768abece91c4328fc6c016d37" translate="yes" xml:space="preserve">
          <source>The possible actions are:</source>
          <target state="translated">考えられる行動は</target>
        </trans-unit>
        <trans-unit id="07e57a756aabf195e2b55eca8c76dad211c93a86" translate="yes" xml:space="preserve">
          <source>The possible attribute values</source>
          <target state="translated">可能な属性値</target>
        </trans-unit>
        <trans-unit id="cf6fa0c1ab6538a58254ad393e6c38d337097a65" translate="yes" xml:space="preserve">
          <source>The possible constraints objects (Strings) are:</source>
          <target state="translated">可能な制約オブジェクト(文字列)は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="35dfa121a2fd6c8bb8d45be45d834b7cd54ad632" translate="yes" xml:space="preserve">
          <source>The possible implementations and return values have been modified in the Java 2 SDK, Standard Edition, version 1.3 to accommodate the option of continuing to process commands in a batch update after a &lt;code&gt;BatchUpdateException&lt;/code&gt; object has been thrown.</source>
          <target state="translated">可能な実装と戻り値は、Java 2 SDK、Standard Edition、バージョン1.3で変更され、 &lt;code&gt;BatchUpdateException&lt;/code&gt; オブジェクトがスローされた後、バッチ更新でコマンドを処理し続けるオプションに対応しています。</target>
        </trans-unit>
        <trans-unit id="b36238ad8a3ea91b1260f9601a23cb5d54279a3f" translate="yes" xml:space="preserve">
          <source>The possible return values for this method were modified for the Java 2 SDK, Standard Edition, version 1.3. This was done to accommodate the new option of continuing to process commands in a batch update after a &lt;code&gt;BatchUpdateException&lt;/code&gt; object has been thrown.</source>
          <target state="translated">このメソッドの可能な戻り値は、Java 2 SDK、Standard Edition、バージョン1.3用に変更されました。これは、 &lt;code&gt;BatchUpdateException&lt;/code&gt; オブジェクトがスローされた後、バッチ更新でコマンドを処理し続けるという新しいオプションに対応するために行われました。</target>
        </trans-unit>
        <trans-unit id="7b7bd960ee00d4b00678a55c5cbb406785c27c39" translate="yes" xml:space="preserve">
          <source>The possible target names for an Authentication Permission are:</source>
          <target state="translated">認証許可の対象となる名前は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="8a3e78cdd39c4f87760b3390e7efcd189cdc7308" translate="yes" xml:space="preserve">
          <source>The possible ways to connect to the host are</source>
          <target state="translated">ホストへの接続方法として考えられるのは</target>
        </trans-unit>
        <trans-unit id="080f48b0aa6b32cedd5af01121bd7b1bfc958102" translate="yes" xml:space="preserve">
          <source>The possibly null ID of the bad attribute.</source>
          <target state="translated">不良属性のヌルの可能性のあるID。</target>
        </trans-unit>
        <trans-unit id="9b7991f6067c19c449119e08d159087dc4972217" translate="yes" xml:space="preserve">
          <source>The possibly null address contents.</source>
          <target state="translated">ヌルの可能性があるアドレスの内容。</target>
        </trans-unit>
        <trans-unit id="4ed5af77681adda9a6ccec629fa59a1a47e0566d" translate="yes" xml:space="preserve">
          <source>The possibly null attribute value at index &lt;code&gt;ix&lt;/code&gt; that was removed; null if the attribute value is null.</source>
          <target state="translated">削除されたインデックス &lt;code&gt;ix&lt;/code&gt; の nullの可能性がある属性値。属性値がnullの場合はnull。</target>
        </trans-unit>
        <trans-unit id="75e1e093b3b31beab3f725db1a7a97f735291ed2" translate="yes" xml:space="preserve">
          <source>The possibly null attribute value at index &lt;code&gt;ix&lt;/code&gt;; null if the attribute value is null.</source>
          <target state="translated">nullの可能性がある、インデックス &lt;code&gt;ix&lt;/code&gt; の属性値。属性値がnullの場合はnull。</target>
        </trans-unit>
        <trans-unit id="01e53a4583b8b632e31e23e545835d7fb151953e" translate="yes" xml:space="preserve">
          <source>The possibly null attribute value at index ix that was replaced. Null if the attribute value was null.</source>
          <target state="translated">置換されたインデックスixのヌルの可能性のある属性値。属性値がNULLの場合はNULL。</target>
        </trans-unit>
        <trans-unit id="77bb1fce5266fd4ed13f0e3a64b2e033cc88d05b" translate="yes" xml:space="preserve">
          <source>The possibly null attributes to be bound.</source>
          <target state="translated">バインドされる可能性のあるヌル属性。</target>
        </trans-unit>
        <trans-unit id="71f9a1ed0e575411b69d0a23112e14cf08307845" translate="yes" xml:space="preserve">
          <source>The possibly null binding of the object after the change.</source>
          <target state="translated">変更後のオブジェクトのヌルの可能性のあるバインディング。</target>
        </trans-unit>
        <trans-unit id="303282c69dc7d698ff760f2ed06dfbbad81206cb" translate="yes" xml:space="preserve">
          <source>The possibly null binding of the object before the change.</source>
          <target state="translated">変更前のオブジェクトのヌルの可能性があるバインディング。</target>
        </trans-unit>
        <trans-unit id="be200430acab3902acee3be25723c5883a236b4b" translate="yes" xml:space="preserve">
          <source>The possibly null challenge to send to the client. It is null if the authentication has succeeded and there is no more challenge data to be sent to the client.</source>
          <target state="translated">クライアントに送信するチャレンジデータが NULL の可能性があります。認証に成功し、クライアントに送信するチャレンジデータがなくなった場合は null となります。</target>
        </trans-unit>
        <trans-unit id="288430f98d1d8dc902d6cd0f841e573864bef168" translate="yes" xml:space="preserve">
          <source>The possibly null change information of this event.</source>
          <target state="translated">このイベントのヌルの可能性のある変更情報。</target>
        </trans-unit>
        <trans-unit id="ef5328e9a2c12269fc3c9790ffb3bdf7b904c77d" translate="yes" xml:space="preserve">
          <source>The possibly null class name of object bound. It is null if the object bound is null.</source>
          <target state="translated">object boundのnullの可能性のあるクラス名。オブジェクトバウンドがNULLの場合はNULLです。</target>
        </trans-unit>
        <trans-unit id="ffd8994818808e7044f5a7bd47401c36f2d57625" translate="yes" xml:space="preserve">
          <source>The possibly null detail string explaining more about the problem with resolving a link. If null, it means there is no link detail message for this exception.</source>
          <target state="translated">null の可能性がある詳細文字列で、リンクの解決に関する問題の詳細を説明します。null の場合は、この例外に対するリンク詳細メッセージがないことを意味します。</target>
        </trans-unit>
        <trans-unit id="67a7663ef453f501bcf8141dc78d296c77c8d264" translate="yes" xml:space="preserve">
          <source>The possibly null detail string explaining more about this exception. If null, it means there is no detail message for this exception.</source>
          <target state="translated">null の可能性がある詳細文字列で、この例外についての詳細を説明します。null の場合は、この例外の詳細メッセージがないことを意味します。</target>
        </trans-unit>
        <trans-unit id="2dbbcea44ff699506e27e77c0ad6dc0d7cd34a86" translate="yes" xml:space="preserve">
          <source>The possibly null element in the enumeration. null is only valid for enumerations that can return null (e.g. Attribute.getAll() returns an enumeration of attribute values, and an attribute value can be null).</source>
          <target state="translated">列挙の中のnullの可能性のある要素。 nullは、nullを返すことができる列挙に対してのみ有効です(例:Attribute.getAll()は属性値の列挙を返し、属性値はnullにすることができます)。</target>
        </trans-unit>
        <trans-unit id="50e6ea1bbf4d3d242e0442515defbd02966a7734" translate="yes" xml:space="preserve">
          <source>The possibly null exception that caused this naming exception. If null, it means no root cause has been set for this naming exception.</source>
          <target state="translated">この命名例外の原因となった null の可能性のある例外。null の場合は、この命名例外に根本原因が設定されていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="ce85339be4b00e60548e7a67ece14ecc99dfce86" translate="yes" xml:space="preserve">
          <source>The possibly null fully-qualified class name of the factory. (e.g. &quot;java.lang.String&quot;)</source>
          <target state="translated">ファクトリーのヌルの可能性のある完全修飾クラス名。(例:&quot;java.lang.String&quot;)</target>
        </trans-unit>
        <trans-unit id="53819d8f2ff0666381a9127d62f2914f015d222f" translate="yes" xml:space="preserve">
          <source>The possibly null matching rule ID. If null then the ordering matching rule defined for the sort key attribute is used.</source>
          <target state="translated">nullの可能性のあるマッチングルールID。nullの場合は、ソートキー属性に定義されている順序付けマッチングルールが使用されます。</target>
        </trans-unit>
        <trans-unit id="ac7693eebba3b1d8e8aed9065f755c90ca9438ca" translate="yes" xml:space="preserve">
          <source>The possibly null object that was resolved so far. If null, it means the link resolved object field has not been set.</source>
          <target state="translated">これまでに解決されたNULLの可能性のあるオブジェクト。nullの場合は、リンク解決済みオブジェクトフィールドが設定されていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="97169d9b8c4d89f8a301ca6eb28fad9af6f33b5c" translate="yes" xml:space="preserve">
          <source>The possibly null object that was resolved so far. null means that the resolved object field has not been set.</source>
          <target state="translated">これまでに解決されたNULLの可能性のあるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="2ce6afd310045ea10e313ef96d7542591a1cd218" translate="yes" xml:space="preserve">
          <source>The possibly null object to be bound.</source>
          <target state="translated">バインドされる可能性のあるnullオブジェクト。</target>
        </trans-unit>
        <trans-unit id="644a895b0ec7420afe1f7206497a62be42cccfd6" translate="yes" xml:space="preserve">
          <source>The possibly null part of the new name that has not been resolved. It is a composite name. It can be null, which means the remaining new name field has not been set.</source>
          <target state="translated">解決されていない新しい名前のヌルの可能性がある部分。これは合成名です。nullになる可能性がありますが、これは残りの新しい名前フィールドが設定されていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="227b72d26062a0a4a65406d6b2400d858977938f" translate="yes" xml:space="preserve">
          <source>The possibly null response of the operation. null means the operation did not generate any response.</source>
          <target state="translated">nullの可能性がある操作のレスポンス。</target>
        </trans-unit>
        <trans-unit id="95751c0e2100386276d5fbab10fec9eadc434b68" translate="yes" xml:space="preserve">
          <source>The possibly null response to send to the server. It is null if the challenge accompanied a &quot;SUCCESS&quot; status and the challenge only contains data for the client to update its state and no response needs to be sent to the server. The response is a zero-length byte array if the client is to send a response with no data.</source>
          <target state="translated">サーバーに送信する応答がヌルの可能性があります。チャレンジが「SUCCESS」ステータスを伴っており、チャレンジにはクライアントが状態を更新するためのデータのみが含まれており、サーバーに応答を送信する必要がない場合は、NULLとなります。クライアントがデータなしで応答を送信する場合、応答はゼロ長のバイト配列です。</target>
        </trans-unit>
        <trans-unit id="a9f4959d404525b8010782edbbb82d1a4a73f2c7" translate="yes" xml:space="preserve">
          <source>The possibly null string containing the location for loading in the factory's class.</source>
          <target state="translated">ファクトリーのクラスでロードする場所を含むヌル文字列の可能性があります。</target>
        </trans-unit>
        <trans-unit id="598464a1b17e0cdd4775fa1d87fe9e6f6f313e36" translate="yes" xml:space="preserve">
          <source>The possibly null unexecuted modification list.</source>
          <target state="translated">ヌルの可能性がある未実行の修正リスト。</target>
        </trans-unit>
        <trans-unit id="594289587491331d8018893d276e66cdd5175334" translate="yes" xml:space="preserve">
          <source>The possibly-empty unmodifiable set of the services that this module provides</source>
          <target state="translated">このモジュールが提供するサービスの可能性のある空の変更不可能なセット</target>
        </trans-unit>
        <trans-unit id="701dd4005bf758fa7ad450f4118b0095191d7b33" translate="yes" xml:space="preserve">
          <source>The pre-processing is performed by &lt;code&gt;combiner&lt;/code&gt;, a second method handle. Of the arguments passed to the adapter, the first &lt;code&gt;N&lt;/code&gt; arguments are copied to the combiner, which is then called. (Here, &lt;code&gt;N&lt;/code&gt; is defined as the parameter count of the combiner.) After this, control passes to the target, with any result from the combiner inserted before the original &lt;code&gt;N&lt;/code&gt; incoming arguments.</source>
          <target state="translated">前処理は、2番目のメソッドハンドルである &lt;code&gt;combiner&lt;/code&gt; によって実行されます。アダプターに渡される引数のうち、最初の &lt;code&gt;N&lt;/code&gt; 個の引数がコンバイナーにコピーされ、次に呼び出されます。（ここでは、 &lt;code&gt;N&lt;/code&gt; はコンバイナのパラメータカウントとして定義されています。）この後、制御はターゲットに渡され、コンバイナからの結果が元の &lt;code&gt;N&lt;/code&gt; 個の入力引数の前に挿入されます。</target>
        </trans-unit>
        <trans-unit id="7c240ae7a898a6847f515e8d7157c3336476bbff" translate="yes" xml:space="preserve">
          <source>The pre-processing is performed by one or more method handles, specified in the elements of the &lt;code&gt;filters&lt;/code&gt; array. The first element of the filter array corresponds to the &lt;code&gt;pos&lt;/code&gt; argument of the target, and so on in sequence.</source>
          <target state="translated">前処理は、 &lt;code&gt;filters&lt;/code&gt; 配列の要素で指定された1つ以上のメソッドハンドルによって実行されます。フィルター配列の最初の要素は、ターゲットの &lt;code&gt;pos&lt;/code&gt; 引数に対応し、以下同様に続きます。</target>
        </trans-unit>
        <trans-unit id="0c8d7cd21b52b86ec589875400da932885d18951" translate="yes" xml:space="preserve">
          <source>The pre-processing is performed by one or more method handles, specified in the elements of the &lt;code&gt;filters&lt;/code&gt; array. The first element of the filter array corresponds to the &lt;code&gt;pos&lt;/code&gt; argument of the target, and so on in sequence. The filter functions are invoked in left to right order.</source>
          <target state="translated">前処理は、 &lt;code&gt;filters&lt;/code&gt; 配列の要素で指定された1つ以上のメソッドハンドルによって実行されます。フィルタ配列の最初の要素は、ターゲットの &lt;code&gt;pos&lt;/code&gt; 引数に対応し、以下同様に順番に対応します。フィルタ関数は、左から右の順序で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="54fba175e25513934ae6e0c928d834995d59017b" translate="yes" xml:space="preserve">
          <source>The precedence of character-class operators is as follows, from highest to lowest:</source>
          <target state="translated">文字クラス演算子の優先順位は、高いものから順に以下のようになります。</target>
        </trans-unit>
        <trans-unit id="a932d6aca64396e330c14caa731cd2e97c2efee4" translate="yes" xml:space="preserve">
          <source>The preceding code fragments give an idea of what goes on behind the scenes; they would not appear in an application, which would not invoke methods like &lt;code&gt;readData&lt;/code&gt; and &lt;code&gt;decodeParams&lt;/code&gt;. In contrast, the following code fragment shows what an application might do. It sets the rowset's command, sets the command's parameters, and executes the command. Simply by calling the &lt;code&gt;execute&lt;/code&gt; method, &lt;code&gt;crs&lt;/code&gt; populates itself with the requested data from the table &lt;code&gt;CUSTOMERS&lt;/code&gt;.</source>
          <target state="translated">上記のコードフラグメントは、舞台裏で何が起こっているのかを示しています。これらは、 &lt;code&gt;readData&lt;/code&gt; や &lt;code&gt;decodeParams&lt;/code&gt; などのメソッドを呼び出さないアプリケーションには表示されません。対照的に、次のコードフラグメントは、アプリケーションが実行する可能性のあることを示しています。行セットのコマンドを設定し、コマンドのパラメーターを設定して、コマンドを実行します。 &lt;code&gt;execute&lt;/code&gt; メソッドを呼び出すだけで、 &lt;code&gt;crs&lt;/code&gt; はテーブル &lt;code&gt;CUSTOMERS&lt;/code&gt; から要求されたデータを自分自身に入力します。</target>
        </trans-unit>
        <trans-unit id="d4b22a75a19cc8184d8d42eb3e0cea459d833bd7" translate="yes" xml:space="preserve">
          <source>The preceding element or null if &lt;code&gt;value&lt;/code&gt; is the first element of the sequence.</source>
          <target state="translated">前の要素。 &lt;code&gt;value&lt;/code&gt; がシーケンスの最初の要素の場合はnull 。</target>
        </trans-unit>
        <trans-unit id="1662793d099b9cf5e31bcba731e92de7d3a9c837" translate="yes" xml:space="preserve">
          <source>The precise definition of &quot;equality&quot; used in comparing attribute values is defined by the underlying directory service. It might use the &lt;code&gt;Object.equals&lt;/code&gt; method, for example, or might use a schema to specify a different equality operation. For matching based on operations other than equality (such as substring comparison) use the version of the &lt;code&gt;search&lt;/code&gt; method that takes a filter argument.</source>
          <target state="translated">属性値の比較に使用される「同等」の正確な定義は、基礎となるディレクトリサービスによって定義されます。これは、使用する可能性があります &lt;code&gt;Object.equals&lt;/code&gt; 例えば、方法、または別の平等の操作を指定するには、スキーマを使用する場合があります。等価以外の操作（部分文字列の比較など）に基づくマッチングでは、フィルター引数を取るバージョンの &lt;code&gt;search&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="bb4614fd577d896554af4208ae33226e3eddd8ad" translate="yes" xml:space="preserve">
          <source>The precise definition of this method is implementation dependent but in general it derives from this path, a path that does not contain &lt;em&gt;redundant&lt;/em&gt; name elements. In many file systems, the &quot;&lt;code&gt;.&lt;/code&gt;&quot; and &quot;&lt;code&gt;..&lt;/code&gt;&quot; are special names used to indicate the current directory and parent directory. In such file systems all occurrences of &quot;&lt;code&gt;.&lt;/code&gt;&quot; are considered redundant. If a &quot;&lt;code&gt;..&lt;/code&gt;&quot; is preceded by a non-&quot;&lt;code&gt;..&lt;/code&gt;&quot; name then both names are considered redundant (the process to identify such names is repeated until it is no longer applicable).</source>
          <target state="translated">このメソッドの正確な定義は実装に依存しますが、一般に、このパスは&lt;em&gt;冗長な&lt;/em&gt;名前要素を含まないパスから派生します。多くのファイルシステムでは、「 &lt;code&gt;.&lt;/code&gt; 」と「 &lt;code&gt;..&lt;/code&gt; 」は、現在のディレクトリと親ディレクトリを示すために使用される特別な名前です。このようなファイルシステムでは、「 &lt;code&gt;.&lt;/code&gt; 」はすべて冗長であると見なされます。 「 &lt;code&gt;..&lt;/code&gt; 」の前に「 &lt;code&gt;..&lt;/code&gt; 」以外の名前が付いている場合、両方の名前は冗長と見なされます（このような名前を識別するプロセスは、適用されなくなるまで繰り返されます）。</target>
        </trans-unit>
        <trans-unit id="29fe6f024b67a56fd1534c416c02d84229593b97" translate="yes" xml:space="preserve">
          <source>The precise definition of this method is implementation dependent but in general it derives from this path, an &lt;a href=&quot;#isAbsolute()&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; path that locates the &lt;a href=&quot;files#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt;&lt;code&gt;same&lt;/code&gt;&lt;/a&gt; file as this path, but with name elements that represent the actual name of the directories and the file. For example, where filename comparisons on a file system are case insensitive then the name elements represent the names in their actual case. Additionally, the resulting path has redundant name elements removed.</source>
          <target state="translated">このメソッドの正確な定義は実装に依存しますが、一般に、このパス、つまりこのパス&lt;a href=&quot;files#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt; &lt;code&gt;same&lt;/code&gt; &lt;/a&gt;ファイルを見つける&lt;a href=&quot;#isAbsolute()&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt;パスから派生しますが、ディレクトリとファイルの実際の名前を表す名前要素があります。たとえば、ファイルシステムでのファイル名の比較で大文字と小文字が区別されない場合、name要素は実際の場合の名前を表します。さらに、結果のパスでは冗長な名前要素が削除されています。</target>
        </trans-unit>
        <trans-unit id="f156f4742b28783fc176e2435a927cffa5913867" translate="yes" xml:space="preserve">
          <source>The precise definition of this method is implementation dependent but in general it derives from this path, an &lt;a href=&quot;path#isAbsolute--&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; path that locates the &lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt;&lt;code&gt;same&lt;/code&gt;&lt;/a&gt; file as this path, but with name elements that represent the actual name of the directories and the file. For example, where filename comparisons on a file system are case insensitive then the name elements represent the names in their actual case. Additionally, the resulting path has redundant name elements removed.</source>
          <target state="translated">このメソッドの正確な定義は実装に依存しますが、一般的にはこのパスから派生します。このパス&lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt; &lt;code&gt;same&lt;/code&gt; &lt;/a&gt;ファイルを見つける&lt;a href=&quot;path#isAbsolute--&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt;パスですが、ディレクトリとファイルの実際の名前を表す名前要素があります。たとえば、ファイルシステムでのファイル名の比較で大文字と小文字が区別されない場合、name要素は実際の大文字小文字の名前を表します。さらに、結果のパスでは、冗長な名前要素が削除されています。</target>
        </trans-unit>
        <trans-unit id="f29514735dff4eb9875c567e3c77c10d0798a36a" translate="yes" xml:space="preserve">
          <source>The precise meaning of &quot;copy&quot; may depend on the class of the &lt;code&gt;CertStoreParameters&lt;/code&gt; object. A typical implementation performs a &quot;deep copy&quot; of this object, but this is not an absolute requirement. Some implementations may perform a &quot;shallow copy&quot; of some or all of the fields of this object.</source>
          <target state="translated">「コピー」の正確な意味は、 &lt;code&gt;CertStoreParameters&lt;/code&gt; オブジェクトのクラスによって異なります。典型的な実装では、このオブジェクトの「ディープコピー」を実行しますが、これは絶対的な要件ではありません。一部の実装では、このオブジェクトの一部またはすべてのフィールドの「浅いコピー」を実行できます。</target>
        </trans-unit>
        <trans-unit id="20a518f78db20ec1e8e63802d6b81b3e5afc2d6f" translate="yes" xml:space="preserve">
          <source>The precise string returned is unspecified, although the following example can be considered typical:</source>
          <target state="translated">返される正確な文字列は特定されていませんが、以下の例が典型的なものと考えられます。</target>
        </trans-unit>
        <trans-unit id="bc7760cf2ead29811d5a4f7919c808536944042d" translate="yes" xml:space="preserve">
          <source>The precision</source>
          <target state="translated">精度</target>
        </trans-unit>
        <trans-unit id="7f3d6ffd25563b48e926ec811735bc2c49c338dd" translate="yes" xml:space="preserve">
          <source>The precision is not applicable. If precision is specified then an &lt;a href=&quot;illegalformatprecisionexception&quot;&gt;&lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">精度は適用されません。精度が指定されている場合、&lt;a href=&quot;illegalformatprecisionexception&quot;&gt; &lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="8b627f68a8d6aaaef844dc471dec6b871f7b4415" translate="yes" xml:space="preserve">
          <source>The precision is not applicable. If the precision is specified an &lt;a href=&quot;illegalformatprecisionexception&quot;&gt;&lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">精度は適用されません。精度を指定すると、&lt;a href=&quot;illegalformatprecisionexception&quot;&gt; &lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="73c2e0008148d7f138652dae3090ecc94203eec5" translate="yes" xml:space="preserve">
          <source>The precision is not applicable. If the precision is specified then an &lt;a href=&quot;illegalformatprecisionexception&quot;&gt;&lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">精度は適用されません。精度が指定されている場合、&lt;a href=&quot;illegalformatprecisionexception&quot;&gt; &lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="9f948c10e382d2f7768291cb8552af2625096c3e" translate="yes" xml:space="preserve">
          <source>The precision is the maximum number of characters to be written to the output. The precision is applied before the width, thus the output will be truncated to &lt;code&gt;precision&lt;/code&gt; characters even if the width is greater than the precision. If the precision is not specified then there is no explicit limit on the number of characters.</source>
          <target state="translated">精度は、出力に書き込まれる最大文字数です。精度は幅の前に適用されるため、幅が精度よりも大きい場合でも、出力は &lt;code&gt;precision&lt;/code&gt; 文字に切り捨てられます。精度が指定されていない場合、文字数に明示的な制限はありません。</target>
        </trans-unit>
        <trans-unit id="5b1e32fea1577f6299edbb4af566a671877a6a6c" translate="yes" xml:space="preserve">
          <source>The precision of a Timestamp object is calculated to be either:</source>
          <target state="translated">Timestampオブジェクトの精度は、どちらかになるように計算されます。</target>
        </trans-unit>
        <trans-unit id="011a0b906162939e49578d08e8c1662e56c9f51a" translate="yes" xml:space="preserve">
          <source>The precision of a zero value is 1.</source>
          <target state="translated">ゼロ値の精度は1です。</target>
        </trans-unit>
        <trans-unit id="7e82e7810d2a873bd46b845642c3dcb0365960ec" translate="yes" xml:space="preserve">
          <source>The predicate set on a &lt;code&gt;FilteredRowSet&lt;/code&gt; object applies a criterion on all rows in a &lt;code&gt;RowSet&lt;/code&gt; object to manage a subset of rows in a &lt;code&gt;RowSet&lt;/code&gt; object. This criterion governs the subset of rows that are visible and also defines which rows can be modified, deleted or inserted.</source>
          <target state="translated">上の述語セット &lt;code&gt;FilteredRowSet&lt;/code&gt; オブジェクトは、内のすべての行に基準を適用 &lt;code&gt;RowSet&lt;/code&gt; 内の行のサブセットを管理するためのオブジェクト &lt;code&gt;RowSet&lt;/code&gt; オブジェクト。この基準は、表示される行のサブセットを管理し、変更、削除、または挿入できる行も定義します。</target>
        </trans-unit>
        <trans-unit id="fa7e902fc875b9d16b011208a78c742ef3d3df14" translate="yes" xml:space="preserve">
          <source>The predicate which can be used for finding a match on a subsequence of a string</source>
          <target state="translated">文字列の部分列にマッチするものを見つけるために使用できる述語</target>
        </trans-unit>
        <trans-unit id="17aa8f7febdaa3dd39b9259abe1f54bf9f0bebab" translate="yes" xml:space="preserve">
          <source>The predicate which can be used for matching an input string against this pattern.</source>
          <target state="translated">このパターンに対して入力文字列をマッチングさせるために使用できる述語。</target>
        </trans-unit>
        <trans-unit id="4f4b2728c2d9fd894664edd48acbeb413a1af02a" translate="yes" xml:space="preserve">
          <source>The predicate which can be used for matching on a string</source>
          <target state="translated">文字列のマッチングに使用できる述語</target>
        </trans-unit>
        <trans-unit id="93d5400fe79116558dbb225fbe571b21c4ae79c8" translate="yes" xml:space="preserve">
          <source>The preference node that emitted the event.</source>
          <target state="translated">イベントを発生させたプリファレンスノード。</target>
        </trans-unit>
        <trans-unit id="01203bc40cdd0fc728a1cb94001dc99438b063b0" translate="yes" xml:space="preserve">
          <source>The preferred (natural) size.</source>
          <target state="translated">好ましい(自然な)サイズ。</target>
        </trans-unit>
        <trans-unit id="668f70b2a4daaa09d8171ffcd2d7649a4140024b" translate="yes" xml:space="preserve">
          <source>The preferred (natural) size. For a component &lt;code&gt;comp&lt;/code&gt;, this should be equal to either &lt;code&gt;comp.getPreferredSize().width&lt;/code&gt; or &lt;code&gt;comp.getPreferredSize().height&lt;/code&gt;.</source>
          <target state="translated">推奨される（自然な）サイズ。コンポーネント &lt;code&gt;comp&lt;/code&gt; の場合、これは &lt;code&gt;comp.getPreferredSize().width&lt;/code&gt; または &lt;code&gt;comp.getPreferredSize().height&lt;/code&gt; いずれかと等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="bee2604a2c9080ffc366e1be25ae9500c7ea3565" translate="yes" xml:space="preserve">
          <source>The preferred alternative to this method is &lt;a href=&quot;#orElseThrow()&quot;&gt;&lt;code&gt;orElseThrow()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドの推奨される代替手段は&lt;a href=&quot;#orElseThrow()&quot;&gt; &lt;code&gt;orElseThrow()&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="d6e11d6aa454b661b4e798d0b01d95991a0663d3" translate="yes" xml:space="preserve">
          <source>The preferred form is the official IANA primary name for an encoding. Applications which stream text data should always specify the charset in the mime type, which necessitates obtaining the encoding of the host platform for data (eg files) stored in that platform's encoding. A &lt;code&gt;CharSet&lt;/code&gt; which corresponds to this and is suitable for use in a mime-type for a &lt;code&gt;DocFlavor&lt;/code&gt; can be obtained from &lt;a href=&quot;#hostEncoding&quot;&gt;&lt;code&gt;DocFlavor.hostEncoding&lt;/code&gt;&lt;/a&gt; This may not always be the primary IANA name but is guaranteed to be understood by this VM. For common flavors, the pre-defined *HOST &lt;code&gt;DocFlavors&lt;/code&gt; may be used.</source>
          <target state="translated">推奨される形式は、エンコーディングの公式IANAプライマリ名です。テキストデータをストリーミングするアプリケーションは、常にmimeタイプの文字セットを指定する必要があります。そのため、ホストプラットフォームのエンコーディングで保存されているデータ（ファイルなど）のエンコーディングを取得する必要があります。これに対応し、 &lt;code&gt;DocFlavor&lt;/code&gt; のmimeタイプでの使用に適した &lt;code&gt;CharSet&lt;/code&gt; は、DocFlavor.hostEncodingから取得でき&lt;a href=&quot;#hostEncoding&quot;&gt; &lt;code&gt;DocFlavor.hostEncoding&lt;/code&gt; &lt;/a&gt;これは常にプライマリIANA名であるとは限りませんが、このVMによって理解されることが保証されています。一般的なフレーバーの場合、事前定義された* &lt;code&gt;DocFlavors&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="795459da550b399518e8f16108cfa6f315f51f3c" translate="yes" xml:space="preserve">
          <source>The preferred form is the official IANA primary name for an encoding. Applications which stream text data should always specify the charset in the mime type, which necessitates obtaining the encoding of the host platform for data (eg files) stored in that platform's encoding. A CharSet which corresponds to this and is suitable for use in a mime-type for a DocFlavor can be obtained from &lt;a href=&quot;docflavor#hostEncoding&quot;&gt;&lt;code&gt;DocFlavor.hostEncoding&lt;/code&gt;&lt;/a&gt; This may not always be the primary IANA name but is guaranteed to be understood by this VM. For common flavors, the pre-defined *HOST DocFlavors may be used.</source>
          <target state="translated">推奨される形式は、エンコーディングの正式なIANAプライマリ名です。テキストデータをストリーミングするアプリケーションでは、常にMIMEタイプの文字セットを指定する必要があります。これにより、プラットフォームのエンコーディングに格納されているデータ（ファイルなど）のホストプラットフォームのエンコーディングを取得する必要があります。これに対応し、DocFlavorのMIMEタイプでの使用に適したCharSetは、DocFlavor.hostEncodingから取得でき&lt;a href=&quot;docflavor#hostEncoding&quot;&gt; &lt;code&gt;DocFlavor.hostEncoding&lt;/code&gt; &lt;/a&gt;これは、常にプライマリIANA名であるとは限りませんが、このVMによって理解されることが保証されています。一般的なフレーバーの場合、事前定義された* HOST DocFlavorsを使用できます。</target>
        </trans-unit>
        <trans-unit id="9d4fefc085f821e9d3a5fbae52dac81c3effbc7e" translate="yes" xml:space="preserve">
          <source>The preferred grid size that can be laid out by the grid bag layout.</source>
          <target state="translated">グリッドバッグのレイアウトでレイアウトできる好ましいグリッドサイズ。</target>
        </trans-unit>
        <trans-unit id="05d8afb011f2d6aa97450b5eeed5331327e17a1b" translate="yes" xml:space="preserve">
          <source>The preferred height of a grid layout is the largest preferred height of all of the components in the container times the number of rows, plus the vertical padding times the number of rows minus one, plus the top and bottom insets of the target container.</source>
          <target state="translated">グリッドレイアウトの好ましい高さは、コンテナ内のすべてのコンポーネントの最大の好ましい高さに行数を乗じたものに、垂直方向のパディングを行数から1を引いた値に加えて、ターゲットコンテナの上下のインセットを加えたものである。</target>
        </trans-unit>
        <trans-unit id="c8a8514ae55eb27d43368a36b34b29a4a95ecea4" translate="yes" xml:space="preserve">
          <source>The preferred scale of the returned result is equal to &lt;code&gt;this.scale()/2&lt;/code&gt;. The value of the returned result is always within one ulp of the exact decimal value for the precision in question. If the rounding mode is &lt;a href=&quot;roundingmode#HALF_UP&quot;&gt;&lt;code&gt;HALF_UP&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;roundingmode#HALF_DOWN&quot;&gt;&lt;code&gt;HALF_DOWN&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;roundingmode#HALF_EVEN&quot;&gt;&lt;code&gt;HALF_EVEN&lt;/code&gt;&lt;/a&gt;, the result is within one half an ulp of the exact decimal value.</source>
          <target state="translated">返される結果の優先スケールは &lt;code&gt;this.scale()/2&lt;/code&gt; に等しくなります。返される結果の値は、問題の精度の正確な10進値の1ulp以内に常にあります。丸めモードが&lt;a href=&quot;roundingmode#HALF_UP&quot;&gt; &lt;code&gt;HALF_UP&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;roundingmode#HALF_DOWN&quot;&gt; &lt;code&gt;HALF_DOWN&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;roundingmode#HALF_EVEN&quot;&gt; &lt;code&gt;HALF_EVEN&lt;/code&gt; の&lt;/a&gt;場合、結果は正確な10進値の2分の1ulp以内になります。</target>
        </trans-unit>
        <trans-unit id="97d21f85809a776457475782a29383e91f9fd0e0" translate="yes" xml:space="preserve">
          <source>The preferred size of a &lt;code&gt;ScrollPane&lt;/code&gt; is the size of the insets, plus the preferred size of the viewport, plus the preferred size of the visible headers, plus the preferred size of the scrollbars that will appear given the current view and the current scrollbar displayPolicies.</source>
          <target state="translated">&lt;code&gt;ScrollPane&lt;/code&gt; の推奨サイズは、インセットのサイズ、ビューポートの推奨サイズ、表示されるヘッダーの推奨サイズ、および現在のビューと現在のスクロールバーのdisplayPoliciesで表示されるスクロールバーの推奨サイズです。</target>
        </trans-unit>
        <trans-unit id="7e0c9711b77e17c2c4489dd5f3a52974aebe48d6" translate="yes" xml:space="preserve">
          <source>The preferred size of the radio button</source>
          <target state="translated">ラジオボタンの好ましいサイズ</target>
        </trans-unit>
        <trans-unit id="5e6038f90eeaa8ca2ee7e55f1a245305b2c41a38" translate="yes" xml:space="preserve">
          <source>The preferred way to listen for changes in list selection is to add &lt;code&gt;ListSelectionListener&lt;/code&gt;s directly to the &lt;code&gt;JList&lt;/code&gt;. &lt;code&gt;JList&lt;/code&gt; then takes care of listening to the selection model and notifying your listeners of change.</source>
          <target state="translated">リスト選択の変更をリッスンするための推奨される方法は、 &lt;code&gt;ListSelectionListener&lt;/code&gt; を &lt;code&gt;JList&lt;/code&gt; に直接追加することです。 &lt;code&gt;JList&lt;/code&gt; 、JListは、選択モデルをリッスンし、リスナーに変更を通知します。</target>
        </trans-unit>
        <trans-unit id="48639e84ad6bcbf4597e147d7f6d16619a7c0136" translate="yes" xml:space="preserve">
          <source>The preferred width of a grid layout is the largest preferred width of all of the components in the container times the number of columns, plus the horizontal padding times the number of columns minus one, plus the left and right insets of the target container.</source>
          <target state="translated">グリッドレイアウトの好ましい幅は、コンテナ内のすべての構成要素の最大の好ましい幅に列数を掛けたものに、水平方向のパディングを掛けたものに列数から1を引いたものを加えたものに、対象コンテナの左右のインセットを加えたものである。</target>
        </trans-unit>
        <trans-unit id="b2b470a8c702b5603e9fd56840aa453b3eb2223e" translate="yes" xml:space="preserve">
          <source>The preferredSize of a JViewport whose view is this Scrollable.</source>
          <target state="translated">このビューがScrollableであるJViewportのpreferredSize。</target>
        </trans-unit>
        <trans-unit id="0845b5b36ca2d4a9b8425c1235452d096e88e50c" translate="yes" xml:space="preserve">
          <source>The preferredSize of the list depends upon the layout orientation.</source>
          <target state="translated">リストのpreferredSizeは、レイアウトの向きに依存します。</target>
        </trans-unit>
        <trans-unit id="9f1ee0aa7a4e77fdaf06191164b7988a841284af" translate="yes" xml:space="preserve">
          <source>The preferredSize of the list is total height of the rows and the maximum width of the cells. If JList.fixedCellHeight is specified then the total height of the rows is just (cellVerticalMargins + fixedCellHeight) * model.getSize() where rowVerticalMargins is the space we allocate for drawing the yellow focus outline. Similarly if fixedCellWidth is specified then we just use that.</source>
          <target state="translated">リストのpreferredSizeは、行の高さとセルの最大幅の合計です。JList.fixedCellHeightが指定されている場合、行の全高は(cellVerticalMargins+fixedCellHeight)*model.getSize()となります。同様に、fixedCellWidthが指定されている場合は、それを使用します。</target>
        </trans-unit>
        <trans-unit id="4eac60dfdfde299257ae10fdc0b835ebccd24913" translate="yes" xml:space="preserve">
          <source>The prefix assigned to a &lt;code&gt;QName&lt;/code&gt; might &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; be valid in a different context. For example, a &lt;code&gt;QName&lt;/code&gt; may be assigned a prefix in the context of parsing a document but that prefix may be invalid in the context of a different document.</source>
          <target state="translated">割り当てられたプレフィックス &lt;code&gt;QName&lt;/code&gt; あります&lt;strong&gt;&lt;em&gt;しないで&lt;/em&gt;&lt;/strong&gt;別のコンテキストで有効です。たとえば、 &lt;code&gt;QName&lt;/code&gt; には、ドキュメントの解析のコンテキストでプレフィックスが割り当てられている場合がありますが、そのプレフィックスは別のドキュメントのコンテキストでは無効である可能性があります。</target>
        </trans-unit>
        <trans-unit id="1623642ae83456ebc262cddb280ef298b22cf43d" translate="yes" xml:space="preserve">
          <source>The prefix concept is used to handle root directories on UNIX platforms, and drive specifiers, root directories and UNC pathnames on Microsoft Windows platforms, as follows:</source>
          <target state="translated">プレフィックスの概念は、UNIXプラットフォームではルートディレクトリ、Microsoft Windowsプラットフォームではドライブ指定子、ルートディレクトリ、UNCパス名を以下のように扱うために使用されます。</target>
        </trans-unit>
        <trans-unit id="83c74b98c1c103adeb72e47f23638fe0c6b5dd97" translate="yes" xml:space="preserve">
          <source>The prefix is included in &lt;code&gt;QName&lt;/code&gt; to retain lexical information &lt;strong&gt;&lt;em&gt;when present&lt;/em&gt;&lt;/strong&gt; in an &lt;a href=&quot;../transform/source&quot;&gt;&lt;code&gt;XML input source&lt;/code&gt;&lt;/a&gt;. The prefix is &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; used in &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;QName.equals(Object)&lt;/code&gt;&lt;/a&gt; or to compute the &lt;a href=&quot;#hashCode()&quot;&gt;&lt;code&gt;QName.hashCode()&lt;/code&gt;&lt;/a&gt;. Equality and the hash code are defined using &lt;strong&gt;&lt;em&gt;only&lt;/em&gt;&lt;/strong&gt; the Namespace URI and local part.</source>
          <target state="translated">プレフィックスは &lt;code&gt;QName&lt;/code&gt; に含まれており、&lt;a href=&quot;../transform/source&quot;&gt; &lt;code&gt;XML input source&lt;/code&gt; &lt;/a&gt;&lt;strong&gt;&lt;em&gt;に存在&lt;/em&gt;&lt;/strong&gt;する&lt;strong&gt;&lt;em&gt;場合に&lt;/em&gt;&lt;/strong&gt;字句情報を保持します。プレフィックスは、&lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;QName.equals(Object)&lt;/code&gt; で、&lt;/a&gt;または&lt;a href=&quot;#hashCode()&quot;&gt; &lt;code&gt;QName.hashCode()&lt;/code&gt; &lt;/a&gt;を計算するために使用され&lt;strong&gt;&lt;em&gt;ません&lt;/em&gt;&lt;/strong&gt;。等価性とハッシュコードは、名前空間URIとローカル部分&lt;strong&gt;&lt;em&gt;のみ&lt;/em&gt;&lt;/strong&gt;を使用して定義されます。&lt;strong&gt;&lt;em&gt;&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f0a33b763f461c55c714ee683f971a7242fb300" translate="yes" xml:space="preserve">
          <source>The prefix value &lt;strong&gt;&lt;em&gt;CANNOT&lt;/em&gt;&lt;/strong&gt; be represented in the &lt;code&gt;String&lt;/code&gt; and will be set to &lt;a href=&quot;../xmlconstants#DEFAULT_NS_PREFIX&quot;&gt;&lt;code&gt;XMLConstants.DEFAULT_NS_PREFIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プレフィックス値は&lt;strong&gt;&lt;em&gt;ことはできません&lt;/em&gt;&lt;/strong&gt;で表現することが &lt;code&gt;String&lt;/code&gt; とに設定されます&lt;a href=&quot;../xmlconstants#DEFAULT_NS_PREFIX&quot;&gt; &lt;code&gt;XMLConstants.DEFAULT_NS_PREFIX&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f09b6b3f056a1320123b826245334165f48ccf20" translate="yes" xml:space="preserve">
          <source>The prefixes, suffixes, and various symbols used for infinity, digits, grouping separators, decimal separators, etc. may be set to arbitrary values, and they will appear properly during formatting. However, care must be taken that the symbols and strings do not conflict, or parsing will be unreliable. For example, either the positive and negative prefixes or the suffixes must be distinct for &lt;code&gt;DecimalFormat.parse()&lt;/code&gt; to be able to distinguish positive from negative values. (If they are identical, then &lt;code&gt;DecimalFormat&lt;/code&gt; will behave as if no negative subpattern was specified.) Another example is that the decimal separator and grouping separator should be distinct characters, or parsing will be impossible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1c1be1011e46771e6c940b6b8fa6d5e62a87e1" translate="yes" xml:space="preserve">
          <source>The prefixes, suffixes, and various symbols used for infinity, digits, thousands separators, decimal separators, etc. may be set to arbitrary values, and they will appear properly during formatting. However, care must be taken that the symbols and strings do not conflict, or parsing will be unreliable. For example, either the positive and negative prefixes or the suffixes must be distinct for &lt;code&gt;DecimalFormat.parse()&lt;/code&gt; to be able to distinguish positive from negative values. (If they are identical, then &lt;code&gt;DecimalFormat&lt;/code&gt; will behave as if no negative subpattern was specified.) Another example is that the decimal separator and thousands separator should be distinct characters, or parsing will be impossible.</source>
          <target state="translated">接頭辞、接尾辞、および無限、数字、桁区切り記号、小数点記号などに使用されるさまざまな記号は、任意の値に設定でき、フォーマット中に正しく表示されます。ただし、記号と文字列が競合しないように注意する必要があります。そうしないと、解析が信頼できなくなります。たとえば、 &lt;code&gt;DecimalFormat.parse()&lt;/code&gt; が正の値と負の値を区別できるようにするには、正と負の接頭辞または接尾辞を区別する必要があります。 （それらが同一の場合、 &lt;code&gt;DecimalFormat&lt;/code&gt; は、負のサブパターンが指定されなかったかのように動作します。）別の例は、小数点と3桁ごとの区切り文字が異なる文字である必要があります。そうしないと、解析ができなくなります。</target>
        </trans-unit>
        <trans-unit id="dfe9500d76701215dda5f0694197cf9ce7cabc59" translate="yes" xml:space="preserve">
          <source>The preprocessing operations &lt;code&gt;\l&lt;/code&gt;&lt;code&gt;\u&lt;/code&gt;, &lt;code&gt;\L&lt;/code&gt;, and &lt;code&gt;\U&lt;/code&gt;.</source>
          <target state="translated">前処理操作 &lt;code&gt;\l&lt;/code&gt; &lt;code&gt;\u&lt;/code&gt; 、 &lt;code&gt;\L&lt;/code&gt; 、および &lt;code&gt;\U&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c9c9b0afc43dff8f62f02bd5e510a84044b62add" translate="yes" xml:space="preserve">
          <source>The presence of a &quot;throws TooManyListenersException&quot; clause on any given concrete implementation of the normally multicast &quot;void addXyzEventListener&quot; event listener registration pattern is used to annotate that interface as implementing a unicast Listener special case, that is, that one and only one Listener may be registered on the particular event listener source concurrently.</source>
          <target state="translated">通常マルチキャストの &quot;void addXyzEventListener&quot; イベント・リスナー登録パターンの任意の具体的な実装に &quot;throwsTooManyListenersException&quot; 節が存在することは、ユニキャスト・リスナーの特殊なケースを実装しているインターフェイスに注釈を付けるために使用されます。</target>
        </trans-unit>
        <trans-unit id="bcfe2fa218fb85c049078854e31cba9eb33712aa" translate="yes" xml:space="preserve">
          <source>The presence of the &lt;code&gt;setProduct&lt;/code&gt; method now means that the &lt;code&gt;Product&lt;/code&gt; attribute is read/write. As before, the value of this attribute is an &lt;code&gt;ObjectName&lt;/code&gt;. When the attribute is set, the &lt;code&gt;ObjectName&lt;/code&gt; must be converted into the &lt;code&gt;ProductMXBean&lt;/code&gt; object that the &lt;code&gt;setProduct&lt;/code&gt; method expects. This object will be an MXBean proxy for the given &lt;code&gt;ObjectName&lt;/code&gt; in the same MBean Server.</source>
          <target state="translated">&lt;code&gt;setProduct&lt;/code&gt; メソッドの存在は、 &lt;code&gt;Product&lt;/code&gt; 属性が読み取り/書き込みであることを意味します。前と同じように、この属性の値は &lt;code&gt;ObjectName&lt;/code&gt; です。属性が設定されている場合、 &lt;code&gt;ObjectName&lt;/code&gt; は、 &lt;code&gt;setProduct&lt;/code&gt; メソッドが予期する &lt;code&gt;ProductMXBean&lt;/code&gt; オブジェクトに変換する必要があります。このオブジェクトは、同じMBeanサーバー内の指定された &lt;code&gt;ObjectName&lt;/code&gt; の MXBeanプロキシになります。</target>
        </trans-unit>
        <trans-unit id="95fd8050fdd45b3295eab4ae02a17e8850afef7c" translate="yes" xml:space="preserve">
          <source>The preview panel property name.</source>
          <target state="translated">プレビューパネルのプロパティ名です。</target>
        </trans-unit>
        <trans-unit id="81e03839989ac27ea315697726bbbcb23a717c1b" translate="yes" xml:space="preserve">
          <source>The previous 2 requirements also apply to &lt;code&gt;URIDereferencer&lt;/code&gt;s returned by the &lt;code&gt;getURIDereferencer&lt;/code&gt; method of &lt;code&gt;
 XMLSignatureFactory&lt;/code&gt; and &lt;code&gt;KeyInfoFactory&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c1a6d5e06c70c525e18d6c292218418c439f71" translate="yes" xml:space="preserve">
          <source>The previous &lt;code&gt;Node&lt;/code&gt; in the set being iterated over, or &lt;code&gt;null&lt;/code&gt; if there are no more members in that set.</source>
          <target state="translated">セット内の前の &lt;code&gt;Node&lt;/code&gt; が繰り返されるか、そのセットにメンバーがもうない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6099ffaa8e5a95edca2a939c252763b26b2f5933" translate="yes" xml:space="preserve">
          <source>The previous example assumes you have not enabled filtering. If you have enabled filtering &lt;code&gt;convertRowIndexToView&lt;/code&gt; will return -1 for locations that are not visible in the view.</source>
          <target state="translated">前の例では、フィルタリングが有効になっていないことを前提としています。フィルタリングを有効にしている場合、 &lt;code&gt;convertRowIndexToView&lt;/code&gt; は、ビューに表示されていない場所に対して-1を返します。</target>
        </trans-unit>
        <trans-unit id="70c0c9bb4cb63f228dd9dcd36da40d2bf9a2afb1" translate="yes" xml:space="preserve">
          <source>The previous interest set</source>
          <target state="translated">前々からの関心事セット</target>
        </trans-unit>
        <trans-unit id="f7113d8eb1505536f0ceef50cb4ab773d8857fa3" translate="yes" xml:space="preserve">
          <source>The previously-attached object, if any, otherwise &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">以前にアタッチされたオブジェクト（ある場合）、それ以外の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3eace7397efd4ce2c5bc4bde921c89ec3d4523a0" translate="yes" xml:space="preserve">
          <source>The primary API of interest in this class for 3rd party component authors are the three methods which retrieve painters: #getBackgroundPainter, #getForegroundPainter, and #getBorderPainter.</source>
          <target state="translated">サードパーティコンポーネントの作者にとってこのクラスの主なAPIは、ペインターを取得する3つのメソッドです。それは #getBackgroundPainter,#getForegroundPainter,そして #getBorderPainter です。</target>
        </trans-unit>
        <trans-unit id="3ab68026a150f7949b7b1dc414949fb8e8e07d81" translate="yes" xml:space="preserve">
          <source>The primary alternative to using this interface throughout your application is as follows.</source>
          <target state="translated">アプリケーション全体でこのインターフェイスを使用する第一の選択肢は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="bf540bb867becf7faa8d8a8f6a3aafda966d70ed" translate="yes" xml:space="preserve">
          <source>The primary distinction of an &lt;code&gt;SSLEngine&lt;/code&gt; is that it operates on inbound and outbound byte streams, independent of the transport mechanism. It is the responsibility of the &lt;code&gt;SSLEngine&lt;/code&gt; user to arrange for reliable I/O transport to the peer. By separating the SSL/TLS abstraction from the I/O transport mechanism, the &lt;code&gt;SSLEngine&lt;/code&gt; can be used for a wide variety of I/O types, such as &lt;a href=&quot;../../../java/nio/channels/spi/abstractselectablechannel#configureBlocking-boolean-&quot;&gt;&lt;code&gt;non-blocking I/O (polling)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../java/nio/channels/selector&quot;&gt;&lt;code&gt;selectable non-blocking I/O&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../java/net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; and the traditional Input/OutputStreams, local &lt;a href=&quot;../../../java/nio/bytebuffer&quot;&gt;&lt;code&gt;ByteBuffers&lt;/code&gt;&lt;/a&gt; or byte arrays, &lt;a href=&quot;http://www.jcp.org/en/jsr/detail?id=203&quot;&gt; future asynchronous I/O models &lt;/a&gt;, and so on.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; の主な違いは、トランスポートメカニズムに関係なく、インバウンドとアウトバウンドのバイトストリームで動作することです。ピアへの信頼性の高いI / Oトランスポートを準備するのは、 &lt;code&gt;SSLEngine&lt;/code&gt; ユーザーの責任です。 SSL / TLSの抽象化をI / Oトランスポートメカニズムから分離することにより、 &lt;code&gt;SSLEngine&lt;/code&gt; は、&lt;a href=&quot;../../../java/nio/channels/spi/abstractselectablechannel#configureBlocking-boolean-&quot;&gt; &lt;code&gt;non-blocking I/O (polling)&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../../../java/nio/channels/selector&quot;&gt; &lt;code&gt;selectable non-blocking I/O&lt;/code&gt; &lt;/a&gt;など、さまざまなI / Oタイプに使用できます。&lt;a href=&quot;../../../java/net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt;と従来の入出力ストリーム、ローカル&lt;a href=&quot;../../../java/nio/bytebuffer&quot;&gt; &lt;code&gt;ByteBuffers&lt;/code&gt; &lt;/a&gt;またはバイト配列、&lt;a href=&quot;http://www.jcp.org/en/jsr/detail?id=203&quot;&gt;将来の非同期I / Oモデル&lt;/a&gt;など。</target>
        </trans-unit>
        <trans-unit id="f9ee17cce91342ad50a57f1b7253427e39e222db" translate="yes" xml:space="preserve">
          <source>The primary distinction of an &lt;code&gt;SSLEngine&lt;/code&gt; is that it operates on inbound and outbound byte streams, independent of the transport mechanism. It is the responsibility of the &lt;code&gt;SSLEngine&lt;/code&gt; user to arrange for reliable I/O transport to the peer. By separating the SSL/TLS/DTLS abstraction from the I/O transport mechanism, the &lt;code&gt;SSLEngine&lt;/code&gt; can be used for a wide variety of I/O types, such as &lt;a href=&quot;../../../java/nio/channels/spi/abstractselectablechannel#configureBlocking(boolean)&quot;&gt;&lt;code&gt;non-blocking I/O (polling)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../java/nio/channels/selector&quot;&gt;&lt;code&gt;selectable non-blocking I/O&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../java/net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; and the traditional Input/OutputStreams, local &lt;a href=&quot;../../../java/nio/bytebuffer&quot;&gt;&lt;code&gt;ByteBuffers&lt;/code&gt;&lt;/a&gt; or byte arrays, &lt;a href=&quot;http://www.jcp.org/en/jsr/detail?id=203&quot;&gt; future asynchronous I/O models &lt;/a&gt;, and so on.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; の主な違いは、トランスポートメカニズムとは関係なく、インバウンドとアウトバウンドのバイトストリームで動作することです。ピアへの信頼性の高いI / Oトランスポートを手配するのは、 &lt;code&gt;SSLEngine&lt;/code&gt; ユーザーの責任です。 SSL / TLS / DTLS抽象化をI / Oトランスポートメカニズムから分離することにより、 &lt;code&gt;SSLEngine&lt;/code&gt; は、&lt;a href=&quot;../../../java/nio/channels/spi/abstractselectablechannel#configureBlocking(boolean)&quot;&gt; &lt;code&gt;non-blocking I/O (polling)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../java/nio/channels/selector&quot;&gt; &lt;code&gt;selectable non-blocking I/O&lt;/code&gt; &lt;/a&gt;など、さまざまなI / Oタイプに使用できます。O、&lt;a href=&quot;../../../java/net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt;および従来のInput / OutputStreams、ローカル&lt;a href=&quot;../../../java/nio/bytebuffer&quot;&gt; &lt;code&gt;ByteBuffers&lt;/code&gt; &lt;/a&gt;またはバイト配列、&lt;a href=&quot;http://www.jcp.org/en/jsr/detail?id=203&quot;&gt;将来の非同期I / Oモデル&lt;/a&gt;など。</target>
        </trans-unit>
        <trans-unit id="85593e45877e5841c29232741b0ac453fc6b1e46" translate="yes" xml:space="preserve">
          <source>The primary distinction of an &lt;code&gt;SSLEngine&lt;/code&gt; is that it operates on inbound and outbound byte streams, independent of the transport mechanism. It is the responsibility of the &lt;code&gt;SSLEngine&lt;/code&gt; user to arrange for reliable I/O transport to the peer. By separating the SSL/TLS/DTLS abstraction from the I/O transport mechanism, the &lt;code&gt;SSLEngine&lt;/code&gt; can be used for a wide variety of I/O types, such as &lt;a href=&quot;../../../java/nio/channels/spi/abstractselectablechannel#configureBlocking(boolean)&quot;&gt;&lt;code&gt;non-blocking I/O (polling)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../java/nio/channels/selector&quot;&gt;&lt;code&gt;selectable non-blocking I/O&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../java/net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; and the traditional Input/OutputStreams, local &lt;a href=&quot;../../../java/nio/bytebuffer&quot;&gt;&lt;code&gt;ByteBuffers&lt;/code&gt;&lt;/a&gt; or byte arrays, &lt;a href=&quot;https://www.jcp.org/en/jsr/detail?id=203&quot;&gt; future asynchronous I/O models &lt;/a&gt;, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca999a61a413f3228e3e710618f31b417d296f9" translate="yes" xml:space="preserve">
          <source>The primary entry point for HTML View implementations to get their attributes is the &lt;a href=&quot;#getViewAttributes(javax.swing.text.View)&quot;&gt;&lt;code&gt;getViewAttributes&lt;/code&gt;&lt;/a&gt; method. This should be implemented to establish the desired policy used to associate attributes with the view. Each HTMLEditorKit (i.e. and therefore each associated JEditorPane) can have its own StyleSheet, but by default one sheet will be shared by all of the HTMLEditorKit instances. HTMLDocument instance can also have a StyleSheet, which holds the document-specific CSS specifications.</source>
          <target state="translated">HTMLビュー実装が属性を取得するための主要なエントリポイントは、&lt;a href=&quot;#getViewAttributes(javax.swing.text.View)&quot;&gt; &lt;code&gt;getViewAttributes&lt;/code&gt; &lt;/a&gt;メソッドです。これは、属性をビューに関連付けるために使用される目的のポリシーを確立するために実装する必要があります。各HTMLEditorKit（つまり、関連する各JEditorPane）は独自のStyleSheetを持つことができますが、デフォルトでは、1つのシートがすべてのHTMLEditorKitインスタンスによって共有されます。 HTMLDocumentインスタンスには、ドキュメント固有のCSS仕様を保持するStyleSheetを含めることもできます。</target>
        </trans-unit>
        <trans-unit id="853c2b2cc138799245561165af6aeca2d462a6c9" translate="yes" xml:space="preserve">
          <source>The primary intent is to support scaling and skewing, though other effects are possible.</source>
          <target state="translated">主な目的は、スケーリングとスキューイングをサポートすることですが、他の効果も可能です。</target>
        </trans-unit>
        <trans-unit id="4616eb214fb3d1763d1d2d39382e94401c0c6dd6" translate="yes" xml:space="preserve">
          <source>The primary method for awaiting completion and extracting results of a task is &lt;a href=&quot;#join()&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;, but there are several variants: The &lt;a href=&quot;future#get()&quot;&gt;&lt;code&gt;Future.get()&lt;/code&gt;&lt;/a&gt; methods support interruptible and/or timed waits for completion and report results using &lt;code&gt;Future&lt;/code&gt; conventions. Method &lt;a href=&quot;#invoke()&quot;&gt;&lt;code&gt;invoke()&lt;/code&gt;&lt;/a&gt; is semantically equivalent to &lt;code&gt;fork(); join()&lt;/code&gt; but always attempts to begin execution in the current thread. The &quot;&lt;em&gt;quiet&lt;/em&gt;&quot; forms of these methods do not extract results or report exceptions. These may be useful when a set of tasks are being executed, and you need to delay processing of results or exceptions until all complete. Method &lt;code&gt;invokeAll&lt;/code&gt; (available in multiple versions) performs the most common form of parallel invocation: forking a set of tasks and joining them all.</source>
          <target state="translated">完了を待ってタスクの結果を抽出するための主要なメソッドは&lt;a href=&quot;#join()&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;ですが、いくつかのバリエーションがあります&lt;a href=&quot;future#get()&quot;&gt; &lt;code&gt;Future.get()&lt;/code&gt; &lt;/a&gt;メソッドは、中断可能または時間指定の完了待機をサポートし、 &lt;code&gt;Future&lt;/code&gt; 規則を使用して結果を報告します。メソッド&lt;a href=&quot;#invoke()&quot;&gt; &lt;code&gt;invoke()&lt;/code&gt; &lt;/a&gt;は、意味的に &lt;code&gt;fork(); join()&lt;/code&gt; と同等です。 join（）ですが、常に現在のスレッドで実行を開始しようとします。これらのメソッドの「&lt;em&gt;クワイエット&lt;/em&gt;」形式は、結果を抽出したり、例外を報告したりしません。これらは、一連のタスクが実行されているときに役立つ場合があり、すべてが完了するまで結果または例外の処理を遅らせる必要があります。メソッド &lt;code&gt;invokeAll&lt;/code&gt; （複数のバージョンで利用可能）は、並列呼び出しの最も一般的な形式を実行します。一連のタスクをフォークし、それらすべてを結合します。</target>
        </trans-unit>
        <trans-unit id="5aa8250cbbb0c762aa091de1f6729c7a726f2772" translate="yes" xml:space="preserve">
          <source>The primary method for awaiting completion and extracting results of a task is &lt;a href=&quot;forkjointask#join--&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;, but there are several variants: The &lt;a href=&quot;future#get--&quot;&gt;&lt;code&gt;Future.get()&lt;/code&gt;&lt;/a&gt; methods support interruptible and/or timed waits for completion and report results using &lt;code&gt;Future&lt;/code&gt; conventions. Method &lt;a href=&quot;forkjointask#invoke--&quot;&gt;&lt;code&gt;invoke()&lt;/code&gt;&lt;/a&gt; is semantically equivalent to &lt;code&gt;fork(); join()&lt;/code&gt; but always attempts to begin execution in the current thread. The &quot;&lt;em&gt;quiet&lt;/em&gt;&quot; forms of these methods do not extract results or report exceptions. These may be useful when a set of tasks are being executed, and you need to delay processing of results or exceptions until all complete. Method &lt;code&gt;invokeAll&lt;/code&gt; (available in multiple versions) performs the most common form of parallel invocation: forking a set of tasks and joining them all.</source>
          <target state="translated">タスクの完了を待ち、結果を抽出するための主要なメソッドは&lt;a href=&quot;forkjointask#join--&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;ですが、いくつかのバリアントがあります&lt;a href=&quot;future#get--&quot;&gt; &lt;code&gt;Future.get()&lt;/code&gt; &lt;/a&gt;メソッドは、割り込みの待機や時間による完了の待機をサポートし、 &lt;code&gt;Future&lt;/code&gt; 規則を使用して結果を報告します。メソッド&lt;a href=&quot;forkjointask#invoke--&quot;&gt; &lt;code&gt;invoke()&lt;/code&gt; &lt;/a&gt;は、意味的には &lt;code&gt;fork(); join()&lt;/code&gt; と同等です。 join（）ですが、常に現在のスレッドで実行を開始しようとします。これらのメソッドの「&lt;em&gt;静かな&lt;/em&gt;」形式は、結果を抽出したり、例外を報告したりしません。これらは、一連のタスクが実行されており、すべてが完了するまで結果または例外の処理を遅らせる必要がある場合に役立ちます。メソッド &lt;code&gt;invokeAll&lt;/code&gt; （複数のバージョンで利用可能）は、最も一般的な形式の並列呼び出しを実行します。タスクのセットをforkし、それらすべてを結合します。</target>
        </trans-unit>
        <trans-unit id="00886361fc8e5debb687daae7baa2873e040b957" translate="yes" xml:space="preserve">
          <source>The primary purpose of this method is for testing frameworks. Per-request headers can be set through one of the &lt;code&gt;HttpRequest&lt;/code&gt;&lt;a href=&quot;httprequest.builder#header(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;headers&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">この方法の主な目的は、フレームワークをテストすることです。リクエストごとのヘッダーは、 &lt;code&gt;HttpRequest&lt;/code&gt; &lt;a href=&quot;httprequest.builder#header(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;headers&lt;/code&gt; &lt;/a&gt;メソッドの1つを介して設定できます。</target>
        </trans-unit>
        <trans-unit id="e7ff3a60b668a9b4f8ca3f3d80ba5d198b1e81f9" translate="yes" xml:space="preserve">
          <source>The primary purpose of this method is to allow callers to specify additional input parameters and options specific to revocation checking. See the class description for an example.</source>
          <target state="translated">このメソッドの主な目的は、呼び出し元が失効チェックに特有の追加の入力パラメータやオプションを指定できるようにすることです。例については、クラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="99d4de701d15e3c0f3d5abd8f5d765bb2d14afb5" translate="yes" xml:space="preserve">
          <source>The primary purpose of this method is to allow callers to specify additional input parameters and options specific to revocation checking. See the class description of &lt;code&gt;CertPathBuilder&lt;/code&gt; for an example.</source>
          <target state="translated">このメソッドの主な目的は、呼び出し元が失効チェックに固有の追加の入力パラメーターとオプションを指定できるようにすることです。例については、 &lt;code&gt;CertPathBuilder&lt;/code&gt; のクラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="9bfe43c7ad82b7b062c6a1e827670b3dcd56247c" translate="yes" xml:space="preserve">
          <source>The primary purpose of this method is to allow callers to specify additional input parameters and options specific to revocation checking. See the class description of &lt;code&gt;CertPathValidator&lt;/code&gt; for an example.</source>
          <target state="translated">このメソッドの主な目的は、呼び出し元が失効チェックに固有の追加の入力パラメーターとオプションを指定できるようにすることです。例については、 &lt;code&gt;CertPathValidator&lt;/code&gt; のクラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="1f3e653a9912f2fb83d0c6901343dcf8706cee3d" translate="yes" xml:space="preserve">
          <source>The primary purpose of this method is to allow programmatic examination of the reasons behind the failure of the opening handshake. Some of these reasons might allow recovery.</source>
          <target state="translated">この方法の第一の目的は、オープニング握手が失敗した理由をプログラム的に検討できるようにすることである。これらの理由のいくつかは、回復を可能にするかもしれない。</target>
        </trans-unit>
        <trans-unit id="8fe693196ff316383da883ba4c0bb6bb52e8167c" translate="yes" xml:space="preserve">
          <source>The primary reasons to provide an explicit declaration for the canonical constructor or accessor methods are to validate constructor arguments, perform defensive copies on mutable components, or normalize groups of components (such as reducing a rational number to lowest terms.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f492c04efa6c01604221d247f621ebc339b6f64" translate="yes" xml:space="preserve">
          <source>The primitive type &lt;code&gt;boolean&lt;/code&gt;.</source>
          <target state="translated">プリミティブ型 &lt;code&gt;boolean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83fc8baed5ef78ca23821a13e04a9d8ddd10f762" translate="yes" xml:space="preserve">
          <source>The primitive type &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">プリミティブ型 &lt;code&gt;byte&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f471c30cb2c84f70470f03c585738bdc64b599e" translate="yes" xml:space="preserve">
          <source>The primitive type &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">プリミティブ型 &lt;code&gt;char&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e44aee72206b87354d815ff88a92f784a937e888" translate="yes" xml:space="preserve">
          <source>The primitive type &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">プリミティブ型 &lt;code&gt;double&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd515036f97bf6ba858fdf01810f65a40a4f0c9c" translate="yes" xml:space="preserve">
          <source>The primitive type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">プリミティブ型 &lt;code&gt;float&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa3a71348ea0fed210633648dce17501818f0109" translate="yes" xml:space="preserve">
          <source>The primitive type &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">プリミティブ型 &lt;code&gt;int&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0dbfb61247c4fbf66782c11b9ea7234fee3f4c1e" translate="yes" xml:space="preserve">
          <source>The primitive type &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">プリミティブ型 &lt;code&gt;long&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbd45dce2a86e7713945fe9ae4375a42101fb99a" translate="yes" xml:space="preserve">
          <source>The primitive type &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">プリミティブ型の &lt;code&gt;short&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13f1d1c5a513be9280a101289705bc830feffc07" translate="yes" xml:space="preserve">
          <source>The principal methods are defined to allow the throwing of an exception. In normal use, no exceptions will be thrown, however one possible implementation would be to obtain the time from a central time server across the network. Obviously, in this case the lookup could fail, and so the method is permitted to throw an exception.</source>
          <target state="translated">主なメソッドは、例外のスローを許可するために定義されています。通常の使用では、例外はスローされませんが、1つの可能性としては、ネットワーク上の中央のタイムサーバから時刻を取得することが考えられます。明らかに、この場合はルックアップに失敗する可能性があるので、このメソッドは例外を投げることが許されています。</target>
        </trans-unit>
        <trans-unit id="e475d06aeb71dedfae8b203b7c5051f7f55447ac" translate="yes" xml:space="preserve">
          <source>The principal name can be specified in the configuration entry by using the option &lt;code&gt;principal&lt;/code&gt;. The principal name can either be a simple user name, a service name such as &lt;code&gt;host/mission.eng.sun.com&lt;/code&gt;, or &quot;*&quot;. The principal can also be set using the system property &lt;code&gt;&lt;span id=&quot;sun.security.krb5.principal&quot;&gt;sun.security.krb5.principal&lt;/span&gt;&lt;/code&gt;. This property is checked during login. If this property is not set, then the principal name from the configuration is used. In the case where the principal property is not set and the principal entry also does not exist, the user is prompted for the name. When this property of entry is set, and &lt;code&gt;useTicketCache&lt;/code&gt; is set to true, only TGT belonging to this principal is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00414fce4c7455a893959b39576e22c2ae5eafaa" translate="yes" xml:space="preserve">
          <source>The principal operations on a &lt;code&gt;StringBuffer&lt;/code&gt; are the &lt;code&gt;append&lt;/code&gt; and &lt;code&gt;insert&lt;/code&gt; methods, which are overloaded so as to accept data of any type. Each effectively converts a given datum to a string and then appends or inserts the characters of that string to the string buffer. The &lt;code&gt;append&lt;/code&gt; method always adds these characters at the end of the buffer; the &lt;code&gt;insert&lt;/code&gt; method adds the characters at a specified point.</source>
          <target state="translated">&lt;code&gt;StringBuffer&lt;/code&gt; の主な操作は、 &lt;code&gt;append&lt;/code&gt; メソッドと &lt;code&gt;insert&lt;/code&gt; メソッドです。これらのメソッドは、任意のタイプのデータを受け入れるためにオーバーロードされます。それぞれが特定のデータを文字列に効果的に変換し、その文字列の文字を文字列バッファーに追加または挿入します。 &lt;code&gt;append&lt;/code&gt; メソッドは常に、バッファの末尾にこれらの文字を追加します。 &lt;code&gt;insert&lt;/code&gt; 方法は、指定された時点で文字を追加します。</target>
        </trans-unit>
        <trans-unit id="8d9eb8cbf18b97db213dc84e3622468146efcc16" translate="yes" xml:space="preserve">
          <source>The principal operations on a &lt;code&gt;StringBuilder&lt;/code&gt; are the &lt;code&gt;append&lt;/code&gt; and &lt;code&gt;insert&lt;/code&gt; methods, which are overloaded so as to accept data of any type. Each effectively converts a given datum to a string and then appends or inserts the characters of that string to the string builder. The &lt;code&gt;append&lt;/code&gt; method always adds these characters at the end of the builder; the &lt;code&gt;insert&lt;/code&gt; method adds the characters at a specified point.</source>
          <target state="translated">&lt;code&gt;StringBuilder&lt;/code&gt; の主な操作は、 &lt;code&gt;append&lt;/code&gt; メソッドと &lt;code&gt;insert&lt;/code&gt; メソッドです。これらのメソッドは、任意のタイプのデータを受け入れるようにオーバーロードされます。それぞれが特定のデータを文字列に効果的に変換し、その文字列の文字を文字列ビルダーに追加または挿入します。 &lt;code&gt;append&lt;/code&gt; 方法は、常にビルダーの最後にこれらの文字を追加します。 &lt;code&gt;insert&lt;/code&gt; 方法は、指定された時点で文字を追加します。</target>
        </trans-unit>
        <trans-unit id="cdd711677992dcb1524f6e2386709d058ae3ac67" translate="yes" xml:space="preserve">
          <source>The principal purpose of these additions is to allow the specification of tables to use in encoding abbreviated streams. The built-in JPEG writer will also accept an ordinary &lt;code&gt;ImageWriteParam&lt;/code&gt;, in which case the writer will construct the necessary tables internally.</source>
          <target state="translated">これらの追加の主な目的は、省略されたストリームのエンコードに使用するテーブルの仕様を許可することです。組み込みのJPEGライターは、通常の &lt;code&gt;ImageWriteParam&lt;/code&gt; も受け入れます。この場合、ライターは必要なテーブルを内部的に構築します。</target>
        </trans-unit>
        <trans-unit id="afec8d4b049429203a01c98d5a3e84b26efa406b" translate="yes" xml:space="preserve">
          <source>The principal's hash code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b62f8c1f2db55b89f9c40aba475d2a194e0285" translate="yes" xml:space="preserve">
          <source>The principal's name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5135ad9a2bb1192cebdf1c42bbd61662695e861a" translate="yes" xml:space="preserve">
          <source>The principal's string name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e1de7f953be5214dc8046cee3435b263a6bc9b" translate="yes" xml:space="preserve">
          <source>The print data and the processing instructions are separate entities. This means that:</source>
          <target state="translated">印刷データと処理命令は別体である。ということになります。</target>
        </trans-unit>
        <trans-unit id="87fa994137d2af295902c75d6d1e468277e6adf3" translate="yes" xml:space="preserve">
          <source>The print data format is unspecified (just an octet stream)</source>
          <target state="translated">印刷データのフォーマットは未指定(単なるオクテットストリーム)</target>
        </trans-unit>
        <trans-unit id="2887ef4584b4a46b117c104e5d5bafd49277b4db" translate="yes" xml:space="preserve">
          <source>The print service indicates that a - possibly transient - problem may require external intervention before the print service can continue.</source>
          <target state="translated">このプリントサービスは、プリントサービスを継続する前に、一時的な問題の可能性があり、外部からの介入を必要とする可能性があることを示しています。</target>
        </trans-unit>
        <trans-unit id="87d74c41b031f63a36b535b9f8f87b980e7f4993" translate="yes" xml:space="preserve">
          <source>The print service indicates that a - possibly transient - problem may require external intervention before the print service can continue. One example of an event that can generate this message is when the printer runs out of paper.</source>
          <target state="translated">このプリントサービスは、プリントサービスを継続する前に、過渡的な問題が発生し、外部からの介入が必要になる可能性があることを示しています。このメッセージを生成するイベントの例としては、プリンタの用紙が不足している場合があります。</target>
        </trans-unit>
        <trans-unit id="8c9efeedc8343f07e9cac56c5db7dfd99892ddd9" translate="yes" xml:space="preserve">
          <source>The print service reports that the job cannot be completed.</source>
          <target state="translated">印刷サービスでは、ジョブを完了できないと報告されています。</target>
        </trans-unit>
        <trans-unit id="6ffca2a80baec343c1fe37408ec848806e832a04" translate="yes" xml:space="preserve">
          <source>The print service reports that the job cannot be completed. The application must resubmit the job.</source>
          <target state="translated">プリントサービスからジョブを完了できないとの報告があります。このアプリケーションでは、ジョブを再送信する必要があります。</target>
        </trans-unit>
        <trans-unit id="ee3379a27f4d6bd5aea086e7d040f37f1b4e28e0" translate="yes" xml:space="preserve">
          <source>The printable area is specified to be a rectangle, within the overall dimensions of a media.</source>
          <target state="translated">印刷可能な領域は、メディアの全体寸法の範囲内で、矩形であることが指定されています。</target>
        </trans-unit>
        <trans-unit id="4a424ad159a01af0ae87f7797a6b6f5420eea6d5" translate="yes" xml:space="preserve">
          <source>The printer attempts to make the external job attribute values take precedence over embedded instructions in the documents' print data, however there is no guarantee.</source>
          <target state="translated">プリンタは、外部ジョブ属性値を文書の印刷データに埋め込まれた命令よりも優先させようとしますが、保証はありません。</target>
        </trans-unit>
        <trans-unit id="c845bc5a10dc5d6856a87ec303fc2db4c49089d3" translate="yes" xml:space="preserve">
          <source>The printer could not access one or more documents passed by reference (i.e., the print data representation object is a &lt;code&gt;URL&lt;/code&gt;).</source>
          <target state="translated">プリンターは、参照によって渡された1つ以上のドキュメントにアクセスできませんでした（つまり、印刷データ表現オブジェクトは &lt;code&gt;URL&lt;/code&gt; です）。</target>
        </trans-unit>
        <trans-unit id="481ecce0067802bcb30b2bcd366ca961b211a6bb" translate="yes" xml:space="preserve">
          <source>The printer could not access one or more documents passed by reference (i.e., the print data representation object is a &lt;code&gt;URL&lt;/code&gt;). This reason is intended to cover any file access problem,including file does not exist and access denied because of an access control problem. Whether the printer aborts the job and moves the job to the &lt;code&gt;ABORTED&lt;/code&gt; job state or prints all documents that are accessible and moves the job to the &lt;code&gt;COMPLETED&lt;/code&gt; job state and adds the &lt;code&gt;COMPLETED_WITH_ERRORS&lt;/code&gt; reason to the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute depends on implementation and/or site policy. This value should be supported if the printer supports doc flavors with &lt;code&gt;URL&lt;/code&gt; print data representation objects.</source>
          <target state="translated">プリンターは、参照によって渡された1つ以上のドキュメントにアクセスできませんでした（つまり、印刷データ表現オブジェクトは &lt;code&gt;URL&lt;/code&gt; です）。この理由は、ファイルが存在せず、アクセス制御の問題のためにアクセスが拒否された場合など、ファイルアクセスの問題をカバーすることを目的としています。プリンターがジョブを中止してジョブを &lt;code&gt;ABORTED&lt;/code&gt; ジョブ状態に移動するか、アクセス可能なすべてのドキュメントを印刷してジョブを &lt;code&gt;COMPLETED&lt;/code&gt; ジョブ状態に移動し、 &lt;code&gt;COMPLETED_WITH_ERRORS&lt;/code&gt; 理由をジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性に追加するかは、実装やサイトポリシーによって異なります。プリンタが &lt;code&gt;URL&lt;/code&gt; 印刷データ表現オブジェクトを含むドキュメントフレーバーをサポートしている場合、この値をサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="22182d19201ff4051207c19a5ee208fd4a5a1b2f" translate="yes" xml:space="preserve">
          <source>The printer decides how to interpret the print data; the way this &quot;autosensing&quot; works is implementation dependent. In general, preformatted autosense print data is provided in a byte oriented representation class (byte array, &lt;code&gt;InputStream&lt;/code&gt;, &lt;code&gt;URL&lt;/code&gt;).</source>
          <target state="translated">プリンタは、印刷データの解釈方法を決定します。この「自動検知」が機能する方法は、実装によって異なります。一般に、事前にフォーマットされたオートセンス印刷データは、バイト指向の表現クラス（バイト配列、 &lt;code&gt;InputStream&lt;/code&gt; 、 &lt;code&gt;URL&lt;/code&gt; ）で提供されます。</target>
        </trans-unit>
        <trans-unit id="420689a193f1513253aa8f7350cd70790dfdb9dd" translate="yes" xml:space="preserve">
          <source>The printer decides how to interpret the print data; the way this &quot;autosensing&quot; works is implementation dependent. In general, preformatted autosense print data is provided in a byte oriented representation class (byte array, InputStream, URL).</source>
          <target state="translated">プリンタは印刷データをどのように解釈するかを決定する;この「オートセンス」の動作方法は実装に依存する。一般的に、あらかじめフォーマットされたオートセンス印刷データは、バイト指向の表現クラス(バイト配列、InputStream、URL)で提供されます。</target>
        </trans-unit>
        <trans-unit id="b8d27c6ece8fd59adc7c9db5b4829fd7026afa41" translate="yes" xml:space="preserve">
          <source>The printer has created the Print Job, but the printer has not finished accessing or accepting all the print data yet.</source>
          <target state="translated">プリンタはプリントジョブを作成しましたが、すべてのプリントデータへのアクセスまたは受け入れがまだ完了していません。</target>
        </trans-unit>
        <trans-unit id="5b838c048d7373b6f5fece71927c2c6d92736461" translate="yes" xml:space="preserve">
          <source>The printer has created the Print Job, but the printer is expecting additional print data before it can move the job into the &lt;code&gt;PROCESSING&lt;/code&gt; state.</source>
          <target state="translated">プリンタは印刷ジョブを作成しましたが、ジョブを &lt;code&gt;PROCESSING&lt;/code&gt; 状態に移行する前に、追加の印刷データを期待しています。</target>
        </trans-unit>
        <trans-unit id="f5116fa6c6a863806c7589febab48774aa25fcd4" translate="yes" xml:space="preserve">
          <source>The printer has created the Print Job, but the printer is expecting additional print data before it can move the job into the &lt;code&gt;PROCESSING&lt;/code&gt; state. If a printer starts processing before it has received all data, the printer removes the &lt;code&gt;JOB_DATA_INSUFFICIENT&lt;/code&gt; reason, but the &lt;code&gt;JOB_INCOMING&lt;/code&gt; reason remains. If a printer starts processing after it has received all data, the printer removes the &lt;code&gt;JOB_DATA_INSUFFICIENT&lt;/code&gt; and &lt;code&gt;JOB_INCOMING&lt;/code&gt; reasons at the same time.</source>
          <target state="translated">プリンタは印刷ジョブを作成しましたが、ジョブを &lt;code&gt;PROCESSING&lt;/code&gt; 状態に移行する前に、追加の印刷データを期待しています。プリンターがすべてのデータを受信する前に処理を開始した場合、プリンターは &lt;code&gt;JOB_DATA_INSUFFICIENT&lt;/code&gt; 理由を削除しますが、 &lt;code&gt;JOB_INCOMING&lt;/code&gt; 理由は残ります。プリンターがすべてのデータを受信した後に処理を開始すると、プリンターは &lt;code&gt;JOB_DATA_INSUFFICIENT&lt;/code&gt; と &lt;code&gt;JOB_INCOMING&lt;/code&gt; の理由を同時に削除します。</target>
        </trans-unit>
        <trans-unit id="2c6e9c3b42f4bb17ba7645de0aa8f126f95272d5" translate="yes" xml:space="preserve">
          <source>The printer has created the Print Job, but the printer is expecting additional print data before it can move the job into the PROCESSING state. If a printer starts processing before it has received all data, the printer removes the JOB_DATA_INSUFFICIENT reason, but the JOB_INCOMING reason remains. If a printer starts processing after it has received all data, the printer removes the JOB_DATA_INSUFFICIENT and JOB_INCOMING reasons at the same time.</source>
          <target state="translated">プリンタは印刷ジョブを作成しましたが、ジョブを処理中の状態に移行する前に、プリンタは追加の印刷データを期待しています。プリンタがすべてのデータを受信する前に処理を開始した場合、プリンタは JOB_DATA_INSUFFICIENT の理由を削除しますが、JOB_INCOMING の理由は残ります。すべてのデータを受信した後にプリンタが処理を開始した場合、プリンタは JOB_DATA_INSUFFICIENT の理由と JOB_INCOMING の理由を同時に削除します。</target>
        </trans-unit>
        <trans-unit id="26f86c1fd10f95e2e1ce6d73964c40d138b16512" translate="yes" xml:space="preserve">
          <source>The printer has detected an error other than ones listed below.</source>
          <target state="translated">プリンタが下記以外のエラーを検出しました。</target>
        </trans-unit>
        <trans-unit id="ee4d72184cd18cc72c7888278ace0c6fd62b60fb" translate="yes" xml:space="preserve">
          <source>The printer has made the job ready for printing, but the output device is not yet printing it, either because the job hasn't reached the output device or because the job is queued in the output device or some other spooler, awaiting the output device to print it.</source>
          <target state="translated">これは、ジョブが出力装置に到達していないか、またはジョブが出力装置や他のスプーラにキューに入っていて、出力装置が印刷するのを待っているためです。</target>
        </trans-unit>
        <trans-unit id="bb06ac1489baa54ea2bee8733b418deb9986e56c" translate="yes" xml:space="preserve">
          <source>The printer has scheduled a job on the output device and is in the process of connecting to a shared network output device (and might not be able to actually start printing the job for an arbitrarily long time depending on the usage of the output device by other servers on the network).</source>
          <target state="translated">プリンタが出力デバイスにジョブをスケジュールしており、共有ネットワークの出力デバイスに接続している最中である(ネットワーク上の他のサーバによる出力デバイスの使用状況によっては、任意の時間、実際にジョブの印刷を開始できない可能性がある)。</target>
        </trans-unit>
        <trans-unit id="8e0bf3607b8e2970cff88cf552730d6f2d8d625d" translate="yes" xml:space="preserve">
          <source>The printer is capable of some type of color printing, such as highlight color or full process color.</source>
          <target state="translated">プリンターは、ハイライトカラーやフルプロセスカラーなど、何らかのカラー印刷が可能です。</target>
        </trans-unit>
        <trans-unit id="c005cdea131511c73720a6f53d9a8366cf1ca01d" translate="yes" xml:space="preserve">
          <source>The printer is currently accepting jobs.</source>
          <target state="translated">現在、プリンターはジョブを受け付けています。</target>
        </trans-unit>
        <trans-unit id="03c387e9c6647fb266c1648f1dc120f6cc016ad4" translate="yes" xml:space="preserve">
          <source>The printer is currently rejecting any jobs sent to it.</source>
          <target state="translated">現在、プリンタに送信されたジョブはすべて拒否されています。</target>
        </trans-unit>
        <trans-unit id="05b2fabb7aa801e323b9d634f91b48efaabae0c1" translate="yes" xml:space="preserve">
          <source>The printer is in the process of stopping the device and will be stopped in a while.</source>
          <target state="translated">プリンターが停止している最中なので、しばらくしてから停止します。</target>
        </trans-unit>
        <trans-unit id="a53658e3838a5dc4333bc6672baea14965848810" translate="yes" xml:space="preserve">
          <source>The printer is in the process of stopping the device and will be stopped in a while. When the device is stopped, the printer will change the &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;STOPPED&lt;/code&gt;. The &lt;code&gt;STOPPING&lt;/code&gt; reason is never an error, even for a printer with a single output device. When an output device ceases accepting jobs, the printer's &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; will have this reason while the output device completes printing.</source>
          <target state="translated">プリンタはデバイスを停止中です。しばらくすると停止します。デバイスが停止すると、プリンターは&lt;a href=&quot;printerstate&quot;&gt; &lt;code&gt;PrinterState&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;STOPPED&lt;/code&gt; に変更します。 &lt;code&gt;STOPPING&lt;/code&gt; の理由は、1つでも出力デバイスとプリンターのため、エラーになることはありません。出力デバイスがジョブの受け入れを停止すると、出力デバイスが印刷を完了する間、プリンターの&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; &lt;/a&gt;にこの理由があります。</target>
        </trans-unit>
        <trans-unit id="c8b0ff98c2f13c970471be7702bd134d6dbdc6cc" translate="yes" xml:space="preserve">
          <source>The printer is in the process of stopping the device and will be stopped in a while. When the device is stopped, the printer will change the &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; to STOPPED. The STOPPING reason is never an error, even for a printer with a single output device. When an output device ceases accepting jobs, the printer's &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; will have this reason while the output device completes printing.</source>
          <target state="translated">プリンターはデバイスの停止処理中であり、しばらくして停止します。デバイスが停止すると、プリンターは&lt;a href=&quot;printerstate&quot;&gt; &lt;code&gt;PrinterState&lt;/code&gt; &lt;/a&gt;をSTOPPEDに変更します。 STOPPING理由は、単一の出力デバイスを持つプリンターであっても、決してエラーではありません。出力デバイスがジョブの受け入れを停止すると、出力デバイスが印刷を完了する間、プリンターの&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; &lt;/a&gt;にこの理由があります。</target>
        </trans-unit>
        <trans-unit id="54f62f72799c6d5e9a37cf0c00f4e1b535987780" translate="yes" xml:space="preserve">
          <source>The printer is not capable of any type of color printing.</source>
          <target state="translated">このプリンターは、どのようなカラー印刷にも対応していません。</target>
        </trans-unit>
        <trans-unit id="7b38e5fa5b8409dddee614ca089cd0362c79f47f" translate="yes" xml:space="preserve">
          <source>The printer is off-line and accepting no jobs.</source>
          <target state="translated">プリンタがオフラインで、ジョブを受け付けていません。</target>
        </trans-unit>
        <trans-unit id="1afe6d85c12a8a8b5a7f1edd564ce3193ddf2261" translate="yes" xml:space="preserve">
          <source>The printer is off-line and accepting no jobs. All &lt;code&gt;PENDING&lt;/code&gt; jobs are put into the &lt;code&gt;PENDING_HELD&lt;/code&gt; state. This situation could be true if the service's or document transform's input is impaired or broken.</source>
          <target state="translated">プリンタはオフラインであり、ジョブを受け入れていません。すべての &lt;code&gt;PENDING&lt;/code&gt; ジョブは &lt;code&gt;PENDING_HELD&lt;/code&gt; 状態になります。この状況は、サービスまたはドキュメント変換の入力が損なわれている、または壊れている場合に当てはまる可能性があります。</target>
        </trans-unit>
        <trans-unit id="a76ccbd08fd7ed213da23153a2832c1f11f3ddb7" translate="yes" xml:space="preserve">
          <source>The printer is off-line and accepting no jobs. All PENDING jobs are put into the PENDING_HELD state. This situation could be true if the service's or document transform's input is impaired or broken.</source>
          <target state="translated">プリンタはオフラインで、ジョブを受け付けていません。すべての保留中のジョブは PENDING_HELD 状態になります。この状況は、サービスまたはドキュメントトランスフォームの入力が障害または破損している場合に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="84ea5b5a51cabfc6ce87f4bba805d145bf23c69d" translate="yes" xml:space="preserve">
          <source>The printer is transmitting the job to the output device.</source>
          <target state="translated">プリンタは出力装置にジョブを送信しています。</target>
        </trans-unit>
        <trans-unit id="5e1b431e7082d79aa73c78295a787c0420e076b7" translate="yes" xml:space="preserve">
          <source>The printer makes no attempt to make the external job attribute values take precedence over embedded instructions in the documents' print data.</source>
          <target state="translated">プリンタは、外部ジョブ属性値を、文書の印刷データに埋め込まれた指示よりも優先させようとはしない。</target>
        </trans-unit>
        <trans-unit id="fc15b2e767f5374c6b094a0dfd57a256c58156f6" translate="yes" xml:space="preserve">
          <source>The printer should make reasonable attempts to print the job, even if it cannot print it exactly as specified.</source>
          <target state="translated">プリンタは、ジョブを指定通りに印刷できない場合でも、合理的な方法で印刷を試みなければなりません。</target>
        </trans-unit>
        <trans-unit id="e18a8686bb628a68a2eaf4c30403e4349bfe5fcd" translate="yes" xml:space="preserve">
          <source>The printer state is unknown.</source>
          <target state="translated">プリンタの状態は不明です。</target>
        </trans-unit>
        <trans-unit id="95f20fd944e4a43232c41915ad9d367576e3c214" translate="yes" xml:space="preserve">
          <source>The printing system may request a page index more than once. On each occasion equal PageFormat parameters will be supplied.</source>
          <target state="translated">印刷シ ス テ ムは、 ページ イ ンデ ッ ク ス を複数回要求す る こ と がで き ます。その都度,同じ PageFormat パラ メータが与えられます。</target>
        </trans-unit>
        <trans-unit id="63d426c5363736a80887b7073605a6606087a1b4" translate="yes" xml:space="preserve">
          <source>The printing system will call &lt;code&gt;Printable.print(..)&lt;/code&gt; with page indexes which increase monotonically, although as noted above, the &lt;code&gt;Printable&lt;/code&gt; should expect multiple calls for a page index and that page indexes may be skipped, when page ranges are specified by the client, or by a user through a print dialog.</source>
          <target state="translated">印刷システムは、単調に増加するページインデックスを使用して &lt;code&gt;Printable.print(..)&lt;/code&gt; を呼び出しますが、上記のように、 &lt;code&gt;Printable&lt;/code&gt; はページインデックスの複数の呼び出しを予期する必要があり、ページ範囲がクライアントによって指定されている場合、ページインデックスはスキップされる可能性があります、またはユーザーが印刷ダイアログを介して。</target>
        </trans-unit>
        <trans-unit id="08bc056d9ef081c3233d58a84e37a59beef78d75" translate="yes" xml:space="preserve">
          <source>The printwriter associated with this console</source>
          <target state="translated">このコンソールに関連付けられたプリントライタ</target>
        </trans-unit>
        <trans-unit id="42f954696c5f60bbc139b566f392ccb1636872f4" translate="yes" xml:space="preserve">
          <source>The priority level of this glyph as it is growing.</source>
          <target state="translated">このグリフの優先度は成長しているので、優先度が高いです。</target>
        </trans-unit>
        <trans-unit id="628a678ead91170d2283b79dc824cb7b5316e893" translate="yes" xml:space="preserve">
          <source>The priority level of this glyph as it is shrinking.</source>
          <target state="translated">縮小しているので、このグリフの優先度。</target>
        </trans-unit>
        <trans-unit id="6701aac4c822d072a47e34f47ed4c1b355734957" translate="yes" xml:space="preserve">
          <source>The priority of the newly created thread is set equal to the priority of the thread creating it, that is, the currently running thread. The method &lt;a href=&quot;#setPriority(int)&quot;&gt;setPriority&lt;/a&gt; may be used to change the priority to a new value.</source>
          <target state="translated">新しく作成されたスレッドの優先度は、それを作成したスレッド、つまり現在実行中のスレッドの優先度と同じに設定されます。メソッド&lt;a href=&quot;#setPriority(int)&quot;&gt;setPriority&lt;/a&gt;を使用して、優先度を新しい値に変更できます。</target>
        </trans-unit>
        <trans-unit id="97a7ef6f1e3cb3a0aaedfb170ff09b511361e6da" translate="yes" xml:space="preserve">
          <source>The priority of the newly created thread is set equal to the priority of the thread creating it, that is, the currently running thread. The method &lt;a href=&quot;thread#setPriority-int-&quot;&gt;setPriority&lt;/a&gt; may be used to change the priority to a new value.</source>
          <target state="translated">新しく作成されたスレッドの優先度は、それを作成したスレッド、つまり現在実行中のスレッドの優先度と同じに設定されます。メソッド&lt;a href=&quot;thread#setPriority-int-&quot;&gt;setPriority&lt;/a&gt;を使用して、優先度を新しい値に変更できます。</target>
        </trans-unit>
        <trans-unit id="ad67cfc9e7ec6a73ea73ab912679bd94c7119e41" translate="yes" xml:space="preserve">
          <source>The priority of the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;ThreadInfo&lt;/code&gt; に関連付けられているスレッドの優先度。</target>
        </trans-unit>
        <trans-unit id="c66994c2e5565d62182013ffae28875f5cf6f391" translate="yes" xml:space="preserve">
          <source>The probe result is the string form of the value of a Multipurpose Internet Mail Extension (MIME) content type as defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;&lt;i&gt;RFC 2045: Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies&lt;/i&gt;&lt;/a&gt;. The string must be parsable according to the grammar in the RFC 2045.</source>
          <target state="translated">プローブの結果は、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;&lt;i&gt;RFC 2045：Multipurpose Internet Mail Extensions（MIME）Part One：Format of Internet Message Bodiesで&lt;/i&gt;&lt;/a&gt;定義され&lt;i&gt;て&lt;/i&gt;いる多目的インターネットメール拡張（MIME）コンテンツタイプの値の文字列形式です。文字列は、RFC 2045の文法に従って解析可能である必要があります。</target>
        </trans-unit>
        <trans-unit id="de3f9f0af3ad65a2fa21912e8d0d887a5b5a28c3" translate="yes" xml:space="preserve">
          <source>The probe result is the string form of the value of a Multipurpose Internet Mail Extension (MIME) content type as defined by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2045.txt&quot;&gt;&lt;i&gt;RFC 2045: Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies&lt;/i&gt;&lt;/a&gt;. The string must be parsable according to the grammar in the RFC 2045.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2212334559e7a887fc928254facb62421de92a5a" translate="yes" xml:space="preserve">
          <source>The process is not killed when there are no more references to the &lt;code&gt;Process&lt;/code&gt; object, but rather the process continues executing asynchronously.</source>
          <target state="translated">The process is not killed when there are no more references to the &lt;code&gt;Process&lt;/code&gt; object, but rather the process continues executing asynchronously.</target>
        </trans-unit>
        <trans-unit id="b41ea041545c20c101d2c5766605f8c26aba0a1d" translate="yes" xml:space="preserve">
          <source>The process may be observed to have terminated with &lt;a href=&quot;#isAlive()&quot;&gt;&lt;code&gt;isAlive()&lt;/code&gt;&lt;/a&gt; before the ComputableFuture is completed and dependent actions are invoked.</source>
          <target state="translated">The process may be observed to have terminated with &lt;a href=&quot;#isAlive()&quot;&gt; &lt;code&gt;isAlive()&lt;/code&gt; &lt;/a&gt; before the ComputableFuture is completed and dependent actions are invoked.</target>
        </trans-unit>
        <trans-unit id="006b08040b73f5d34fb2e71fc14a1d7d47de63f1" translate="yes" xml:space="preserve">
          <source>The process may not terminate immediately. i.e. &lt;code&gt;isAlive()&lt;/code&gt; may return true for a brief period after &lt;code&gt;destroyForcibly()&lt;/code&gt; is called. This method may be chained to &lt;code&gt;waitFor()&lt;/code&gt; if needed.</source>
          <target state="translated">The process may not terminate immediately. i.e. &lt;code&gt;isAlive()&lt;/code&gt; may return true for a brief period after &lt;code&gt;destroyForcibly()&lt;/code&gt; is called. This method may be chained to &lt;code&gt;waitFor()&lt;/code&gt; if needed.</target>
        </trans-unit>
        <trans-unit id="880dec8515b711c27c013e6c9697d99218ffed43" translate="yes" xml:space="preserve">
          <source>The process of implementing a set by extending this class is identical to that of implementing a Collection by extending AbstractCollection, except that all of the methods and constructors in subclasses of this class must obey the additional constraints imposed by the &lt;code&gt;Set&lt;/code&gt; interface (for instance, the add method must not permit addition of multiple instances of an object to a set).</source>
          <target state="translated">このクラスを拡張してセットを実装するプロセスは、AbstractCollectionを拡張してコレクションを実装するプロセスと同じですが、このクラスのサブクラス内のすべてのメソッドとコンストラクターは、 &lt;code&gt;Set&lt;/code&gt; インターフェースによって課される追加の制約に従う必要があります（たとえば、 addメソッドでは、オブジェクトの複数のインスタンスをセットに追加できません。</target>
        </trans-unit>
        <trans-unit id="e1ec3b94c22e460ebbbb042de3db1027d96793ab" translate="yes" xml:space="preserve">
          <source>The process of normalization is specific to each calendar system. For example, in the ISO calendar system, the years and months are normalized but the days are not, such that &quot;15 months&quot; would be normalized to &quot;1 year and 3 months&quot;.</source>
          <target state="translated">正規化のプロセスは、各カレンダーシステムに特有のものです。例えば、ISOカレンダーシステムでは、年と月は正規化されますが、日は正規化されません。</target>
        </trans-unit>
        <trans-unit id="a0880060c6bd165f58bb9740e5b98b10e7366b11" translate="yes" xml:space="preserve">
          <source>The process of writing changes in a &lt;code&gt;RowSet&lt;/code&gt; object to its data source is known as</source>
          <target state="translated">The process of writing changes in a &lt;code&gt;RowSet&lt;/code&gt; object to its data source is known as</target>
        </trans-unit>
        <trans-unit id="cf7301191430bba9ec8368d5ffbc647fac0cf73d" translate="yes" xml:space="preserve">
          <source>The process that looks for a class name in the &lt;code&gt;META-INF/services/org.xml.sax.driver&lt;/code&gt; file in a jar file does not conform to the specification of the service-provider loading facility as defined in &lt;a href=&quot;../../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; and therefore does not support modularization. It is deprecated as of Java SE 9 and subject to removal in a future release.</source>
          <target state="translated">The process that looks for a class name in the &lt;code&gt;META-INF/services/org.xml.sax.driver&lt;/code&gt; file in a jar file does not conform to the specification of the service-provider loading facility as defined in &lt;a href=&quot;../../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; and therefore does not support modularization. It is deprecated as of Java SE 9 and subject to removal in a future release.</target>
        </trans-unit>
        <trans-unit id="455f1746aa3e2b37c23f02cccc11f1194c2bd1f7" translate="yes" xml:space="preserve">
          <source>The processing instruction does not specify how the print job processes the request; each processing instruction is only a description of the results of a print job. The print job determines the manner in which it achieves the results specified by the processing instructions. Representing processing instructions as descriptive items provides more flexibility for implementing print jobs.</source>
          <target state="translated">処理命令は、プリントジョブが要求をどのように処理するかを特定するものではなく、各処理命令はプリントジョブの結果を記述したものに過ぎない。各処理命令は印刷ジョブの結果を記述したものに過ぎず、印刷ジョブは処理命令によって指定された結果をどのように達成するかを決定する。処理命令を記述項目として表現することで、プリントジョブの実装の柔軟性が向上する。</target>
        </trans-unit>
        <trans-unit id="f21c5292c5f0f85748710a360b9fb4d2c8ebb894" translate="yes" xml:space="preserve">
          <source>The processor may choose to continue, but will not normally proceed to a successful completion.</source>
          <target state="translated">プロセッサーは続行を選択することができますが、通常は正常に完了するまで進みません。</target>
        </trans-unit>
        <trans-unit id="6f696f02deb8ba447238e7b0ba963cade3056181" translate="yes" xml:space="preserve">
          <source>The profile includes the &lt;code&gt;redColorantTag&lt;/code&gt;, &lt;code&gt;greenColorantTag&lt;/code&gt;, &lt;code&gt;blueColorantTag&lt;/code&gt;, &lt;code&gt;redTRCTag&lt;/code&gt;, &lt;code&gt;greenTRCTag&lt;/code&gt;, &lt;code&gt;blueTRCTag&lt;/code&gt;, and &lt;code&gt;mediaWhitePointTag&lt;/code&gt; tags.</source>
          <target state="translated">The profile includes the &lt;code&gt;redColorantTag&lt;/code&gt; , &lt;code&gt;greenColorantTag&lt;/code&gt; , &lt;code&gt;blueColorantTag&lt;/code&gt; , &lt;code&gt;redTRCTag&lt;/code&gt; , &lt;code&gt;greenTRCTag&lt;/code&gt; , &lt;code&gt;blueTRCTag&lt;/code&gt; , and &lt;code&gt;mediaWhitePointTag&lt;/code&gt; tags.</target>
        </trans-unit>
        <trans-unit id="fd8dfde5161913039fba723df9c9b90bc3017769" translate="yes" xml:space="preserve">
          <source>The profile's color space type is RGB.</source>
          <target state="translated">プロファイルの色空間タイプはRGBです。</target>
        </trans-unit>
        <trans-unit id="b21468901598e18762161fbe3cf811efedaec007" translate="yes" xml:space="preserve">
          <source>The program</source>
          <target state="translated">プログラム</target>
        </trans-unit>
        <trans-unit id="345c1d3616f08664463e96baa7a67e8da0786160" translate="yes" xml:space="preserve">
          <source>The program number is zero-based (expressed from 0 to 127). Note that MIDI hardware displays and literature about MIDI typically use the range 1 to 128 instead.</source>
          <target state="translated">プログラム番号はゼロベース(0 から 127 で表されます)です。MIDI ハードウェアの表示や MIDI に関する文献では、一般的に 1 から 128 の範囲を使用していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="76dfc7088829bdbf1569fb6f72d786a2251045f0" translate="yes" xml:space="preserve">
          <source>The program number is zero-based (expressed from 0 to 127). Note that MIDI hardware displays and literature about MIDI typically use the range 1 to 128 instead. It is possible that the underlying synthesizer does not support a specific program. In order to verify that a call to &lt;code&gt;programChange&lt;/code&gt; was successful, use &lt;code&gt;getProgram&lt;/code&gt;.</source>
          <target state="translated">プログラム番号はゼロベースです（0から127で表されます）。MIDIハードウェアの表示とMIDIに関する文献では、通常、代わりに1〜128の範囲を使用していることに注意してください。基礎となるシンセサイザが特定のプログラムをサポートしていない可能性があります。 &lt;code&gt;programChange&lt;/code&gt; の呼び出しが成功したことを確認するには、 &lt;code&gt;getProgram&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="962e35562a0df5666bf7aad07b776ace67ab18a8" translate="yes" xml:space="preserve">
          <source>The program number of the instrument that this voice is currently using.</source>
          <target state="translated">この声が現在使用している楽器のプログラム番号です。</target>
        </trans-unit>
        <trans-unit id="4155d56e171215de9c7037e45d7bce8a1282da2c" translate="yes" xml:space="preserve">
          <source>The program number of the instrument that this voice is currently using. The value ranges from 0 to 127 if the voice is active, and is unspecified if the voice is inactive.</source>
          <target state="translated">この音色が現在使用している楽器のプログラム番号。この値の範囲は、ボイスがアクティブの場合は0から127までで、ボイスが非アクティブの場合は指定されません。</target>
        </trans-unit>
        <trans-unit id="f1be1f5399b975af8c707420333db180e0981d19" translate="yes" xml:space="preserve">
          <source>The programmatic name of the property that was changed. May be null if multiple properties have changed.</source>
          <target state="translated">変更されたプロパティのプログラム名。複数のプロパティが変更されている場合は、NULLにすることができます。</target>
        </trans-unit>
        <trans-unit id="ad93de22f765c96c57d8527107c09122268deb2d" translate="yes" xml:space="preserve">
          <source>The programmatic name of the property/method/event</source>
          <target state="translated">プロパティ/メソッド/イベントのプログラム名</target>
        </trans-unit>
        <trans-unit id="4a4ca8c0566e76e0bda81fc2154a3dd169f21dfd" translate="yes" xml:space="preserve">
          <source>The programmer should generally provide a void (no argument) and &lt;code&gt;Collection&lt;/code&gt; constructor, as per the recommendation in the &lt;code&gt;Collection&lt;/code&gt; interface specification.</source>
          <target state="translated">プログラマーは、 &lt;code&gt;Collection&lt;/code&gt; インターフェース仕様の推奨に従って、一般にvoid（引数なし）および &lt;code&gt;Collection&lt;/code&gt; コンストラクターを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="61075cdab1eeb6f09db5bfab67efc96a9fe1b4d1" translate="yes" xml:space="preserve">
          <source>The programmer should generally provide a void (no argument) and collection constructor, as per the recommendation in the &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; interface specification.</source>
          <target state="translated">プログラマーは、&lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;インターフェース仕様の推奨に従って、一般にvoid（引数なし）およびコレクションコンストラクターを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="37e4fc3e466260a434320ff485db7412afec1305" translate="yes" xml:space="preserve">
          <source>The programmer should generally provide a void (no argument) and collection constructor, as per the recommendation in the &lt;code&gt;Collection&lt;/code&gt; interface specification.</source>
          <target state="translated">プログラマーは、 &lt;code&gt;Collection&lt;/code&gt; インターフェース仕様の推奨に従って、一般にvoid（引数なし）およびコレクションコンストラクターを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="92e053e057575398190a0ac956a5817f3e0304d3" translate="yes" xml:space="preserve">
          <source>The programmer should generally provide a void (no argument) and map constructor, as per the recommendation in the &lt;code&gt;Map&lt;/code&gt; interface specification.</source>
          <target state="translated">プログラマーは、 &lt;code&gt;Map&lt;/code&gt; インターフェース仕様の推奨に従って、一般にvoid（引数なし）およびマップコンストラクターを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="f01bb378f182b23e8ed67c381eb92c51c702d451" translate="yes" xml:space="preserve">
          <source>The progress bar changes to determinate</source>
          <target state="translated">プログレスバーは、決定するために変更されます。</target>
        </trans-unit>
        <trans-unit id="4b5b62e95c0464429469a4601f4eedbff960af77" translate="yes" xml:space="preserve">
          <source>The progress bar is determinate and becomes displayable</source>
          <target state="translated">プログレスバーが確定して表示可能になる</target>
        </trans-unit>
        <trans-unit id="e367352ef18d207387d0a16384a607086a84bf3e" translate="yes" xml:space="preserve">
          <source>The progress bar is displayable and becomes determinate</source>
          <target state="translated">プログレスバーが表示され、確定的になります。</target>
        </trans-unit>
        <trans-unit id="ff7b207dcad61e50dde5ee3a8d51e2a89562a740" translate="yes" xml:space="preserve">
          <source>The progress bar is displayable and determinate and this UI is installed</source>
          <target state="translated">プログレスバーが表示可能で確定しており、このUIがインストールされています。</target>
        </trans-unit>
        <trans-unit id="0b58ada95969c7cc2b96e1fd97a909c42b180449" translate="yes" xml:space="preserve">
          <source>The progress bar is no longer part of a displayable hierarchy</source>
          <target state="translated">プログレスバーは表示可能な階層の一部ではなくなりました。</target>
        </trans-unit>
        <trans-unit id="7db88831546fb954fc3d5d9710f6e0ab2f4739c8" translate="yes" xml:space="preserve">
          <source>The progress indicator displays activity without specifying what proportion of the progress is complete.</source>
          <target state="translated">進捗インジケータは、進捗の割合を指定せずにアクティビティを表示します。</target>
        </trans-unit>
        <trans-unit id="26c5212b411b32f2f4fb4ac337ae0a4ad3976b99" translate="yes" xml:space="preserve">
          <source>The progress indicator displays with normal color and determinate mode.</source>
          <target state="translated">進捗状況表示は、通常の色と確定モードで表示されます。</target>
        </trans-unit>
        <trans-unit id="f47f32edf9816a4f888b251afa36f949fce0846c" translate="yes" xml:space="preserve">
          <source>The progress string is painted only if the &lt;code&gt;isStringPainted&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">The progress string is painted only if the &lt;code&gt;isStringPainted&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="391c694a427ff64d8dedbc35ef6300a0d16bfa8a" translate="yes" xml:space="preserve">
          <source>The proleptic year, such as 2012.</source>
          <target state="translated">2012年などのプロレプティックイヤー。</target>
        </trans-unit>
        <trans-unit id="2f8941a3eade121ced3151a4fbe9a184aa501fb3" translate="yes" xml:space="preserve">
          <source>The proleptic-month based, counting months sequentially from year 0.</source>
          <target state="translated">プロレプティック月をベースに、0年から順次月をカウントしていきます。</target>
        </trans-unit>
        <trans-unit id="185505c1591ee22f4c8919b7761eb6109bcd3be2" translate="yes" xml:space="preserve">
          <source>The prompt message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f41482df910d2f5aab39d869a803af9046ad93d" translate="yes" xml:space="preserve">
          <source>The prompt message. See the prompt attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a56a02d5a817b1dc30304481e16ea69bcff2062" translate="yes" xml:space="preserve">
          <source>The properties for loggers and Handlers will have names starting with the dot-separated name for the handler or logger.</source>
          <target state="translated">ロガーとハンドラのプロパティは、ハンドラまたはロガーのドット区切りの名前で始まる名前を持ちます。</target>
        </trans-unit>
        <trans-unit id="53b4cc1bbc02ad93af5b4e56711266aa46d88a87" translate="yes" xml:space="preserve">
          <source>The properties returned should contain properties set by the stylesheet, and these properties are &quot;defaulted&quot; by default properties specified by &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;&gt;section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a&gt;. The properties that were specifically set by the stylesheet should be in the base Properties list, while the XSLT default properties that were not specifically set should be in the &quot;default&quot; Properties list. Thus, getOutputProperties().getProperty(String key) will obtain any property in that was set by the stylesheet, &lt;em&gt;or&lt;/em&gt; the default properties, while getOutputProperties().get(String key) will only retrieve properties that were explicitly set in the stylesheet.</source>
          <target state="translated">The properties returned should contain properties set by the stylesheet, and these properties are &quot;defaulted&quot; by default properties specified by &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;&gt;section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a&gt;. The properties that were specifically set by the stylesheet should be in the base Properties list, while the XSLT default properties that were not specifically set should be in the &quot;default&quot; Properties list. Thus, getOutputProperties().getProperty(String key) will obtain any property in that was set by the stylesheet, &lt;em&gt;or&lt;/em&gt; the default properties, while getOutputProperties().get(String key) will only retrieve properties that were explicitly set in the stylesheet.</target>
        </trans-unit>
        <trans-unit id="f87075d599da93b17f19b11d041569e97b3e1ab8" translate="yes" xml:space="preserve">
          <source>The properties returned should contain properties set by the stylesheet, and these properties are &quot;defaulted&quot; by default properties specified by &lt;a href=&quot;https://www.w3.org/TR/xslt#output&quot;&gt;section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a&gt;. The properties that were specifically set by the stylesheet should be in the base Properties list, while the XSLT default properties that were not specifically set should be in the &quot;default&quot; Properties list. Thus, getOutputProperties().getProperty(String key) will obtain any property in that was set by the stylesheet, &lt;em&gt;or&lt;/em&gt; the default properties, while getOutputProperties().get(String key) will only retrieve properties that were explicitly set in the stylesheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924030f16e4e6790ddf29e1281d8ffc937efbad3" translate="yes" xml:space="preserve">
          <source>The properties returned should contain properties set by the user, and properties set by the stylesheet, and these properties are &quot;defaulted&quot; by default properties specified by &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;&gt;section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a&gt;. The properties that were specifically set by the user or the stylesheet should be in the base Properties list, while the XSLT default properties that were not specifically set should be the default Properties list. Thus, getOutputProperties().getProperty(String key) will obtain any property in that was set by &lt;a href=&quot;#setOutputProperty(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;setOutputProperty(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setOutputProperties(java.util.Properties)&quot;&gt;&lt;code&gt;setOutputProperties(java.util.Properties)&lt;/code&gt;&lt;/a&gt;, in the stylesheet, &lt;em&gt;or&lt;/em&gt; the default properties, while getOutputProperties().get(String key) will only retrieve properties that were explicitly set by &lt;a href=&quot;#setOutputProperty(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;setOutputProperty(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setOutputProperties(java.util.Properties)&quot;&gt;&lt;code&gt;setOutputProperties(java.util.Properties)&lt;/code&gt;&lt;/a&gt;, or in the stylesheet.</source>
          <target state="translated">The properties returned should contain properties set by the user, and properties set by the stylesheet, and these properties are &quot;defaulted&quot; by default properties specified by &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;&gt;section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a&gt;. The properties that were specifically set by the user or the stylesheet should be in the base Properties list, while the XSLT default properties that were not specifically set should be the default Properties list. Thus, getOutputProperties().getProperty(String key) will obtain any property in that was set by &lt;a href=&quot;#setOutputProperty(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;setOutputProperty(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#setOutputProperties(java.util.Properties)&quot;&gt; &lt;code&gt;setOutputProperties(java.util.Properties)&lt;/code&gt; &lt;/a&gt;, in the stylesheet, &lt;em&gt;or&lt;/em&gt; the default properties, while getOutputProperties().get(String key) will only retrieve properties that were explicitly set by &lt;a href=&quot;#setOutputProperty(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;setOutputProperty(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#setOutputProperties(java.util.Properties)&quot;&gt; &lt;code&gt;setOutputProperties(java.util.Properties)&lt;/code&gt; &lt;/a&gt;, or in the stylesheet.</target>
        </trans-unit>
        <trans-unit id="8ba944ea3e8ea683f7d2f0bdb9647fb3d115acc6" translate="yes" xml:space="preserve">
          <source>The properties returned should contain properties set by the user, and properties set by the stylesheet, and these properties are &quot;defaulted&quot; by default properties specified by &lt;a href=&quot;https://www.w3.org/TR/xslt#output&quot;&gt;section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a&gt;. The properties that were specifically set by the user or the stylesheet should be in the base Properties list, while the XSLT default properties that were not specifically set should be the default Properties list. Thus, getOutputProperties().getProperty(String key) will obtain any property in that was set by &lt;a href=&quot;#setOutputProperty(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;setOutputProperty(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setOutputProperties(java.util.Properties)&quot;&gt;&lt;code&gt;setOutputProperties(java.util.Properties)&lt;/code&gt;&lt;/a&gt;, in the stylesheet, &lt;em&gt;or&lt;/em&gt; the default properties, while getOutputProperties().get(String key) will only retrieve properties that were explicitly set by &lt;a href=&quot;#setOutputProperty(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;setOutputProperty(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setOutputProperties(java.util.Properties)&quot;&gt;&lt;code&gt;setOutputProperties(java.util.Properties)&lt;/code&gt;&lt;/a&gt;, or in the stylesheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f833fe6fa37acd5e76ba0606a69897f0ed235c" translate="yes" xml:space="preserve">
          <source>The properties-only format &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;.</source>
          <target state="translated">The properties-only format &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="daa8bdb84e81154bc80370cc5e9727f554ff3e32" translate="yes" xml:space="preserve">
          <source>The properties-only format &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;. This &lt;code&gt;List&lt;/code&gt; is &lt;a href=&quot;collections#unmodifiableList-java.util.List-&quot;&gt;unmodifiable&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; を含むプロパティのみの形式の &lt;code&gt;List&lt;/code&gt; 。この &lt;code&gt;List&lt;/code&gt; は&lt;a href=&quot;collections#unmodifiableList-java.util.List-&quot;&gt;変更できません&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5d2cff9c6617a0baba314ee31c1929597466d86" translate="yes" xml:space="preserve">
          <source>The properties-only format &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;. This &lt;code&gt;List&lt;/code&gt; is unmodifiable.</source>
          <target state="translated">The properties-only format &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; . This &lt;code&gt;List&lt;/code&gt; is unmodifiable.</target>
        </trans-unit>
        <trans-unit id="edbaf52dc9114c17a17b8e7f6f915d29977216eb" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;JInternalFrame.isPalette&lt;/code&gt;.</source>
          <target state="translated">The property &lt;code&gt;JInternalFrame.isPalette&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf5373aab850e2de634fb8554a90fb179e5380fa" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;JScrollBar.isFreeStanding&lt;/code&gt;.</source>
          <target state="translated">The property &lt;code&gt;JScrollBar.isFreeStanding&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be6722df6ec5a2e75cae3fda33dde1100cbb76cd" translate="yes" xml:space="preserve">
          <source>The property can be set with the following code line: &lt;code&gt;setProperty(&quot;javax.xml.stream.isRepairingNamespaces&quot;, new Boolean(true|false));&lt;/code&gt;</source>
          <target state="translated">The property can be set with the following code line: &lt;code&gt;setProperty(&quot;javax.xml.stream.isRepairingNamespaces&quot;, new Boolean(true|false));&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90ef13d5a715c58badd6aeb3009b5ac9131a03a4" translate="yes" xml:space="preserve">
          <source>The property map may contain pre-defined implementation specific and default properties. Users are encouraged to read the information and fully understand the implications, before modifying pre-existing properties.</source>
          <target state="translated">プロパティマップには、事前に定義された実装固有のプロパティとデフォルトのプロパティが含まれている場合があります。ユーザーは、既存のプロパティを変更する前に、情報を読み、その意味を十分に理解することが推奨されます。</target>
        </trans-unit>
        <trans-unit id="216631b6a2b26fcac5c37473e2eaf40759dbb441" translate="yes" xml:space="preserve">
          <source>The property name &lt;code&gt;&quot;comment&quot;&lt;/code&gt; should be used to store an optional comment which can be presented to the application as a description of the image, its source, or its author.</source>
          <target state="translated">The property name &lt;code&gt;&quot;comment&quot;&lt;/code&gt; should be used to store an optional comment which can be presented to the application as a description of the image, its source, or its author.</target>
        </trans-unit>
        <trans-unit id="05614fb918268cb256ef8ff9c79e7c509c6ff6a3" translate="yes" xml:space="preserve">
          <source>The property name for the description of the stream used to initialize the document.</source>
          <target state="translated">文書の初期化に用いられたストリームの記述のためのプロパティ名。</target>
        </trans-unit>
        <trans-unit id="65d307effbfb6738fbc49652b7df00c768e32304" translate="yes" xml:space="preserve">
          <source>The property name for the description of the stream used to initialize the document. This should be used if the document was initialized from a stream and anything is known about the stream.</source>
          <target state="translated">文書の初期化に用いたストリームの説明のためのプロパティ名。これは、文書がストリームから初期化され、ストリームについて何かがわかっている場合に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="55766c1c4623c812c3048cdf08c9f6f33926a54f" translate="yes" xml:space="preserve">
          <source>The property name for the title of the document, if there is one.</source>
          <target state="translated">ドキュメントのタイトルのプロパティ名(ある場合)。</target>
        </trans-unit>
        <trans-unit id="491a849b11e4c2c0acd318273c6a61f63270a3d9" translate="yes" xml:space="preserve">
          <source>The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; to recognize a property name but temporarily be unable to return its value.</source>
          <target state="translated">The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt; to recognize a property name but temporarily be unable to return its value.</target>
        </trans-unit>
        <trans-unit id="b04117b905a55eae82549e4e3a2b723556877a5c" translate="yes" xml:space="preserve">
          <source>The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; to recognize a property name but to be unable to change the current value.</source>
          <target state="translated">The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt; to recognize a property name but to be unable to change the current value.</target>
        </trans-unit>
        <trans-unit id="765dd3a32bda74de713a08c9e42bf1083b24e6ca" translate="yes" xml:space="preserve">
          <source>The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validator&quot;&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;/a&gt; to recognize a property name but temporarily be unable to return its value. Some property values may be available only in specific contexts, such as before, during, or after a validation.</source>
          <target state="translated">The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validator&quot;&gt; &lt;code&gt;Validator&lt;/code&gt; &lt;/a&gt; to recognize a property name but temporarily be unable to return its value. Some property values may be available only in specific contexts, such as before, during, or after a validation.</target>
        </trans-unit>
        <trans-unit id="f6fa366af3cd654c1c35b4f151e2781b11c57e03" translate="yes" xml:space="preserve">
          <source>The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validator&quot;&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;/a&gt; to recognize a property name but to be unable to change the current value. Some property values may be immutable or mutable only in specific contexts, such as before, during, or after a validation.</source>
          <target state="translated">The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validator&quot;&gt; &lt;code&gt;Validator&lt;/code&gt; &lt;/a&gt; to recognize a property name but to be unable to change the current value. Some property values may be immutable or mutable only in specific contexts, such as before, during, or after a validation.</target>
        </trans-unit>
        <trans-unit id="a9efd0eeaa6302fa4fd979a20db22dc2dc37765c" translate="yes" xml:space="preserve">
          <source>The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; to recognize a property name but temporarily be unable to return its value. Some property values may be available only in specific contexts, such as before, during, or after a validation.</source>
          <target state="translated">The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt; to recognize a property name but temporarily be unable to return its value. Some property values may be available only in specific contexts, such as before, during, or after a validation.</target>
        </trans-unit>
        <trans-unit id="c26b08882aefe98ea2b359c6337181f87d358da5" translate="yes" xml:space="preserve">
          <source>The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; to recognize a property name but to be unable to change the current value. Some property values may be immutable or mutable only in specific contexts, such as before, during, or after a validation.</source>
          <target state="translated">The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt; to recognize a property name but to be unable to change the current value. Some property values may be immutable or mutable only in specific contexts, such as before, during, or after a validation.</target>
        </trans-unit>
        <trans-unit id="9f21d91a82fc4c162b2dfd34fcdb2d44e94f0d92" translate="yes" xml:space="preserve">
          <source>The property name is any fully-qualified URI. It is possible for an XMLReader to recognize a property name but temporarily be unable to return its value. Some property values may be available only in specific contexts, such as before, during, or after a parse.</source>
          <target state="translated">プロパティ名は、任意の完全修飾 URI です。XMLReader がプロパティ名を認識しても、一時的にその値を返すことができないことがあります。プロパティ値の中には、パース前、パース中、パース後などの特定のコンテキストでのみ利用可能なものがあります。</target>
        </trans-unit>
        <trans-unit id="7593858905d16bae87d6ea5c763c7dd7603e0f00" translate="yes" xml:space="preserve">
          <source>The property name is any fully-qualified URI. It is possible for an XMLReader to recognize a property name but to be unable to change the current value. Some property values may be immutable or mutable only in specific contexts, such as before, during, or after a parse.</source>
          <target state="translated">プロパティ名は、任意の完全修飾 URI です。XMLReader がプロパティ名を認識しても、現在の値を変更できないことがあります。プロパティ値の中には、パース前、パース中、パース後などの特定のコンテキストでのみ不変または変更可能なものがあります。</target>
        </trans-unit>
        <trans-unit id="5a44166bbcf01d577f1354b0551d5aad5a3ef464" translate="yes" xml:space="preserve">
          <source>The property resource defining the &lt;code&gt;{ID}&lt;/code&gt; variant</source>
          <target state="translated">&lt;code&gt;{ID}&lt;/code&gt; バリアントを定義するプロパティリソース</target>
        </trans-unit>
        <trans-unit id="af5b082804d7c2dde6ea05c46a90e42cc6381e7f" translate="yes" xml:space="preserve">
          <source>The property resource is located with the &lt;code&gt;calendars.properties&lt;/code&gt; file</source>
          <target state="translated">プロパティリソースは &lt;code&gt;calendars.properties&lt;/code&gt; ファイルにあります</target>
        </trans-unit>
        <trans-unit id="1f758999ea110228277da4c8ec83f3970f50ce67" translate="yes" xml:space="preserve">
          <source>The property that requires the parser to coalesce adjacent character data sections</source>
          <target state="translated">隣接する文字データセクションを合体させることをパーサに要求するプロパティです。</target>
        </trans-unit>
        <trans-unit id="e265780daa42ecc2e0802b3158af0dcc9a3d2876" translate="yes" xml:space="preserve">
          <source>The property that requires the parser to resolve external parsed entities</source>
          <target state="translated">パーサが外部解析されたエンティティの解決を要求するプロパティです。</target>
        </trans-unit>
        <trans-unit id="13afb556feceeb83a36d49a0460475a7e85ddb79" translate="yes" xml:space="preserve">
          <source>The property that requires the parser to support DTDs</source>
          <target state="translated">パーサがDTDをサポートすることを要求するプロパティです。</target>
        </trans-unit>
        <trans-unit id="f462c466c77ecb8aecc01f7fc097bd0ef7bee433" translate="yes" xml:space="preserve">
          <source>The property used to set/get the implementation of the XMLReporter interface</source>
          <target state="translated">XMLReporter インターフェースの実装を設定/取得するために使用するプロパティです。</target>
        </trans-unit>
        <trans-unit id="4325235510b04660062df652bfe8ef53233412c5" translate="yes" xml:space="preserve">
          <source>The property used to set/get the implementation of the XMLResolver</source>
          <target state="translated">XMLResolverの実装を設定/取得するために使用するプロパティです。</target>
        </trans-unit>
        <trans-unit id="50c756a437d7d9476e61751578d130ff92ae44bf" translate="yes" xml:space="preserve">
          <source>The property used to set/get the implementation of the allocator</source>
          <target state="translated">アロケータの実装を設定/取得するために使用されるプロパティ</target>
        </trans-unit>
        <trans-unit id="99399b40e8299eb71e8be6c59cb3bbd8473d04ed" translate="yes" xml:space="preserve">
          <source>The property used to turn on/off implementation specific validation</source>
          <target state="translated">実装固有の検証をオン/オフするために使用されるプロパティです。</target>
        </trans-unit>
        <trans-unit id="df5033615f0d4c5aa6046366f6f557d55da8ce89" translate="yes" xml:space="preserve">
          <source>The property used to turn on/off namespace support, this is to support XML 1.0 documents, only the true setting must be supported</source>
          <target state="translated">これは XML 1.0 ドキュメントをサポートするためのもので、true の設定のみがサポートされている必要があります。</target>
        </trans-unit>
        <trans-unit id="bb305a13af061bdafc684dce06c7fea083824a3c" translate="yes" xml:space="preserve">
          <source>The property value as a human editable string.</source>
          <target state="translated">プロパティの値を人間が編集可能な文字列として指定します。</target>
        </trans-unit>
        <trans-unit id="928506a8e906ccfdc133220356a75d90280830ec" translate="yes" xml:space="preserve">
          <source>The property value as a string suitable for presentation to a human to edit.</source>
          <target state="translated">プロパティの値を、人間が編集するために提示するのに適した文字列として指定します。</target>
        </trans-unit>
        <trans-unit id="73101b28e30a36efb57859ac5d834112bb90605f" translate="yes" xml:space="preserve">
          <source>The property value consists of the provider class name and the device name, separated by the hash mark (&quot;#&quot;). The provider class name is the fully-qualified name of a concrete &lt;a href=&quot;spi/midideviceprovider&quot;&gt;&lt;code&gt;MIDI device provider&lt;/code&gt;&lt;/a&gt; class. The device name is matched against the &lt;code&gt;String&lt;/code&gt; returned by the &lt;code&gt;getName&lt;/code&gt; method of &lt;code&gt;MidiDevice.Info&lt;/code&gt;. Either the class name, or the device name may be omitted. If only the class name is specified, the trailing hash mark is optional.</source>
          <target state="translated">プロパティ値は、ハッシュマーク（ &quot;＃&quot;）で区切られたプロバイダークラス名とデバイス名で構成されます。プロバイダークラス名は、具体的な&lt;a href=&quot;spi/midideviceprovider&quot;&gt; &lt;code&gt;MIDI device provider&lt;/code&gt; &lt;/a&gt;クラスの完全修飾名です。デバイス名は、 &lt;code&gt;MidiDevice.Info&lt;/code&gt; の &lt;code&gt;getName&lt;/code&gt; メソッドによって返される &lt;code&gt;String&lt;/code&gt; と照合されます。クラス名またはデバイス名は省略できます。クラス名のみが指定されている場合、末尾のハッシュマークはオプションです。</target>
        </trans-unit>
        <trans-unit id="0fda51bd535de894365d52df1f5e4d52b33dd40e" translate="yes" xml:space="preserve">
          <source>The property value consists of the provider class name and the mixer name, separated by the hash mark (&quot;#&quot;). The provider class name is the fully-qualified name of a concrete &lt;a href=&quot;spi/mixerprovider&quot;&gt;&lt;code&gt;mixer provider&lt;/code&gt;&lt;/a&gt; class. The mixer name is matched against the &lt;code&gt;String&lt;/code&gt; returned by the &lt;code&gt;getName&lt;/code&gt; method of &lt;code&gt;Mixer.Info&lt;/code&gt;. Either the class name, or the mixer name may be omitted. If only the class name is specified, the trailing hash mark is optional.</source>
          <target state="translated">プロパティ値は、ハッシュマーク（ &quot;＃&quot;）で区切られたプロバイダークラス名とミキサー名で構成されます。プロバイダークラス名は、具象&lt;a href=&quot;spi/mixerprovider&quot;&gt; &lt;code&gt;mixer provider&lt;/code&gt; &lt;/a&gt;クラスの完全修飾名です。ミキサー名は、 &lt;code&gt;Mixer.Info&lt;/code&gt; の &lt;code&gt;getName&lt;/code&gt; メソッドによって返される &lt;code&gt;String&lt;/code&gt; と照合されます。クラス名またはミキサー名は省略できます。クラス名のみが指定されている場合、末尾のハッシュマークはオプションです。</target>
        </trans-unit>
        <trans-unit id="839344a2affd2c29010b14b6d381310744ba6f63" translate="yes" xml:space="preserve">
          <source>The property value should be one of the forms accepted by &lt;code&gt;Font.decode(String)&lt;/code&gt; If the specified property is not found, or the executing code does not have permission to read the property, the &lt;code&gt;font&lt;/code&gt; argument is returned instead.</source>
          <target state="translated">The property value should be one of the forms accepted by &lt;code&gt;Font.decode(String)&lt;/code&gt; If the specified property is not found, or the executing code does not have permission to read the property, the &lt;code&gt;font&lt;/code&gt; argument is returned instead.</target>
        </trans-unit>
        <trans-unit id="253fede9392a1c0b18e0b9824d151fca7a0e3b9d" translate="yes" xml:space="preserve">
          <source>The property value.</source>
          <target state="translated">プロパティの値。</target>
        </trans-unit>
        <trans-unit id="a934d82554d845420400459f6c0dabc8ba77a442" translate="yes" xml:space="preserve">
          <source>The protected &lt;code&gt;EditorDelegate&lt;/code&gt; class.</source>
          <target state="translated">The protected &lt;code&gt;EditorDelegate&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="374ba4813aef129e3eb1f2074ac73df714237dfe" translate="yes" xml:space="preserve">
          <source>The protocol handler calls this method after a resource has been retrieved, and the ResponseCache must decide whether or not to store the resource in its cache.</source>
          <target state="translated">リソースが取得された後、プロトコルハンドラはこのメソッドを呼び出し、ResponseCache はリソースをキャッシュに保存するかどうかを決定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="8bca8021794336ac922184238ff13cedd04b4c6c" translate="yes" xml:space="preserve">
          <source>The protocol handler calls this method after a resource has been retrieved, and the ResponseCache must decide whether or not to store the resource in its cache. If the resource is to be cached, then put() must return a CacheRequest object which contains an OutputStream that the protocol handler will use to write the resource into the cache. If the resource is not to be cached, then put must return null.</source>
          <target state="translated">リソースが取得された後、プロトコル ハンドラはこのメソッドを呼び出し、ResponseCache はそのリソースをキャッシュに保存するかどうかを決定する必要があります。リソースをキャッシュする場合、put()は、プロトコル ハンドラがリソースをキャッシュに書き込むために使用する OutputStream を含む CacheRequest オブジェクトを返す必要があります。リソースをキャッシュしない場合は、put は null を返さなければなりません。</target>
        </trans-unit>
        <trans-unit id="4be2401bbc033d02d77ae8d018dde89f5a6c5180" translate="yes" xml:space="preserve">
          <source>The protocol part of the Service URL.</source>
          <target state="translated">サービスURLのプロトコル部分です。</target>
        </trans-unit>
        <trans-unit id="a28e98c099c58a5bda5e715045862d609dda783c" translate="yes" xml:space="preserve">
          <source>The protocol-specific requirements are defined in the &lt;a href=&quot;https://tools.ietf.org/html/rfc7540&quot;&gt;Hypertext Transfer Protocol Version 2 (HTTP/2)&lt;/a&gt;, the &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt; Hypertext Transfer Protocol (HTTP/1.1)&lt;/a&gt;, and &lt;a href=&quot;https://tools.ietf.org/html/rfc6455&quot;&gt;The WebSocket Protocol&lt;/a&gt;.</source>
          <target state="translated">The protocol-specific requirements are defined in the &lt;a href=&quot;https://tools.ietf.org/html/rfc7540&quot;&gt;Hypertext Transfer Protocol Version 2 (HTTP/2)&lt;/a&gt;, the &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt; Hypertext Transfer Protocol (HTTP/1.1)&lt;/a&gt;, and &lt;a href=&quot;https://tools.ietf.org/html/rfc6455&quot;&gt;The WebSocket Protocol&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="37c5465d2ff8a6fe16f37629d0bc86289e7d279a" translate="yes" xml:space="preserve">
          <source>The protocols must have been listed by &lt;code&gt;getSupportedProtocols()&lt;/code&gt; as being supported. Following a successful call to this method, only protocols listed in the &lt;code&gt;protocols&lt;/code&gt; parameter are enabled for use.</source>
          <target state="translated">プロトコルは、サポートされているものとして &lt;code&gt;getSupportedProtocols()&lt;/code&gt; によってリストされている必要があります。このメソッドの呼び出しが成功すると、 &lt;code&gt;protocols&lt;/code&gt; パラメーターにリストされているプロトコルのみが使用可能になります。</target>
        </trans-unit>
        <trans-unit id="3ceb4dc01f774ca073a268387a29e005c274c187" translate="yes" xml:space="preserve">
          <source>The protocols must have been listed by getSupportedProtocols() as being supported. Following a successful call to this method, only protocols listed in the &lt;code&gt;protocols&lt;/code&gt; parameter are enabled for use.</source>
          <target state="translated">プロトコルは、サポートされているものとしてgetSupportedProtocols（）によってリストされている必要があります。このメソッドの呼び出しが成功すると、 &lt;code&gt;protocols&lt;/code&gt; パラメーターにリストされているプロトコルのみが使用可能になります。</target>
        </trans-unit>
        <trans-unit id="9210c3071d14625b46a43f122fc15299c196c44c" translate="yes" xml:space="preserve">
          <source>The provided &lt;code&gt;LocalDate&lt;/code&gt; is interpreted as the local date in the local time zone.</source>
          <target state="translated">指定された &lt;code&gt;LocalDate&lt;/code&gt; は、ローカルタイムゾーンのローカル日付として解釈されます。</target>
        </trans-unit>
        <trans-unit id="276032490e07e1dda2172dc0392e83bfa40a5cb8" translate="yes" xml:space="preserve">
          <source>The provided &lt;code&gt;LocalDateTime&lt;/code&gt; is interpreted as the local date-time in the local time zone.</source>
          <target state="translated">指定された &lt;code&gt;LocalDateTime&lt;/code&gt; は、ローカルタイムゾーンのローカル日時として解釈されます。</target>
        </trans-unit>
        <trans-unit id="39ea298e1ed9cecc5248c7addf960c07d300fb1e" translate="yes" xml:space="preserve">
          <source>The provider class must be visible to the class loader.</source>
          <target state="translated">プロバイダクラスは、クラスローダから見えるようにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="01842d144548af6e56891138f0f22f5b69c75250" translate="yes" xml:space="preserve">
          <source>The provider configuration file lists the full-qualified class name of the AttachProvider implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b819aa1e87112cebc844a816e2d9cca7e54bfec7" translate="yes" xml:space="preserve">
          <source>The provider package list is a string that is interpreted as a list of non-empty Java package names separated by vertical bars (&lt;code&gt;|&lt;/code&gt;). If the string is empty, then so is the provider package list. If the provider package list is not a String, or if it contains an element that is an empty string, a &lt;a href=&quot;jmxproviderexception&quot;&gt;&lt;code&gt;JMXProviderException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">プロバイダーパッケージリストは、縦棒（ &lt;code&gt;|&lt;/code&gt; ）で区切られた空でないJavaパッケージ名のリストとして解釈される文字列です。文字列が空の場合、プロバイダーパッケージリストも空になります。プロバイダーパッケージリストが文字列でない場合、または空の文字列である要素が含まれている場合は、&lt;a href=&quot;jmxproviderexception&quot;&gt; &lt;code&gt;JMXProviderException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="81ff5f0c2ed16bdcde6df10f629ec05f4f76b747" translate="yes" xml:space="preserve">
          <source>The provider properties each specify the name and location of a particular service implemented by the provider. By granting this permission, you let code replace the service specification with another one, thereby specifying a different implementation.</source>
          <target state="translated">プロバイダのプロパティは、それぞれプロバイダによって実装された特定のサービスの名前と場所を指定します。この許可を与えることで、コードがサービスの指定を別のものに置き換えることができ、それによって異なる実装を指定することができます。</target>
        </trans-unit>
        <trans-unit id="7bfdec86c531152b897fae56fc5431156beb1192" translate="yes" xml:space="preserve">
          <source>The provider relies on a &lt;code&gt;CallbackHandler&lt;/code&gt; to obtain authentication information from the caller (a PIN, for example). If the caller passes a &lt;code&gt;null&lt;/code&gt; handler to this method, the provider uses the handler set in the &lt;code&gt;setCallbackHandler&lt;/code&gt; method. If no handler was set in that method, the provider queries the</source>
          <target state="translated">プロバイダーは、 &lt;code&gt;CallbackHandler&lt;/code&gt; を使用して、呼び出し元（PINなど）から認証情報を取得します。呼び出し元がこのメソッドに &lt;code&gt;null&lt;/code&gt; ハンドラーを渡すと、プロバイダーは &lt;code&gt;setCallbackHandler&lt;/code&gt; メソッドで設定されたハンドラーを使用します。そのメソッドにハンドラーが設定されていない場合、プロバイダーは</target>
        </trans-unit>
        <trans-unit id="1c17253044a3e06989e7d90ee41703431073eb01" translate="yes" xml:space="preserve">
          <source>The provider resource file (&lt;code&gt;jndiprovider.properties&lt;/code&gt;) for the context being operated on.</source>
          <target state="translated">操作対象のコンテキストのプロバイダーリソースファイル（ &lt;code&gt;jndiprovider.properties&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7e7c1d350031806c332b9c24a137dd3c90b8b811" translate="yes" xml:space="preserve">
          <source>The provider that created this channel</source>
          <target state="translated">このチャンネルを作成したプロバイダ</target>
        </trans-unit>
        <trans-unit id="77a39cfcc4e9fe4e8ca3afc28026bfc41ca77e69" translate="yes" xml:space="preserve">
          <source>The provider that created this channel group</source>
          <target state="translated">このチャネルグループを作成したプロバイダ</target>
        </trans-unit>
        <trans-unit id="bd0273ec6d54c15dbfb4d880d2bc546ddaf6772d" translate="yes" xml:space="preserve">
          <source>The provider that created this file system.</source>
          <target state="translated">このファイルシステムを作成したプロバイダ。</target>
        </trans-unit>
        <trans-unit id="caffc9ea416d37a1e2711f50ba819549314a7e56" translate="yes" xml:space="preserve">
          <source>The provider that created this virtual machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3d88e815a75e16ffb4c1ab7a620700614562f3" translate="yes" xml:space="preserve">
          <source>The provider type</source>
          <target state="translated">プロバイダの種類</target>
        </trans-unit>
        <trans-unit id="e97bc8d34251d21b62200936e722253994322277" translate="yes" xml:space="preserve">
          <source>The provider typically uses a KeyStore as a basis for making trust decisions.</source>
          <target state="translated">プロバイダは、通常、信頼関係を決定するための基礎としてKeyStoreを使用しています。</target>
        </trans-unit>
        <trans-unit id="8eb1ab0ca4032f625e2e248a88d341a2ea149e6e" translate="yes" xml:space="preserve">
          <source>The provider typically uses a KeyStore for obtaining key material for use during secure socket negotiations. The KeyStore is generally password-protected.</source>
          <target state="translated">プロバイダは、セキュアなソケットネゴシエーションの際に使用する鍵情報を取得するために、通常 KeyStore を使用する。KeyStoreは通常、パスワードで保護されている。</target>
        </trans-unit>
        <trans-unit id="9346f15ca94e3e6d74fbf4bbfdeeea05816f74fe" translate="yes" xml:space="preserve">
          <source>The provider used by JShell to generate the execution engine needed to evaluate Snippets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22fa7c2a853bf7c659d1bad19161a472dd7cca7e" translate="yes" xml:space="preserve">
          <source>The provider used by JShell to generate the execution engine needed to evaluate Snippets. Alternate execution engines can be created by implementing this interface, then configuring JShell with the provider or the providers name and parameter specifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ee7c51b3de3d00b80da9b5d57be36f861ae7af" translate="yes" xml:space="preserve">
          <source>The provider uses this handler if one is not passed to the &lt;code&gt;login&lt;/code&gt; method. The provider also uses this handler if it invokes &lt;code&gt;login&lt;/code&gt; on behalf of callers. In either case if a handler is not set via this method, the provider queries the</source>
          <target state="translated">&lt;code&gt;login&lt;/code&gt; メソッドに渡されない場合、プロバイダーはこのハンドラーを使用します。プロバイダーは、呼び出し元に代わって &lt;code&gt;login&lt;/code&gt; を呼び出す場合にもこのハンドラーを使用します。どちらの場合も、このメソッドを介してハンドラーが設定されていない場合、プロバイダーは</target>
        </trans-unit>
        <trans-unit id="9a14653f68a78cf5317ff6c4d28abc9bf7e7ffec" translate="yes" xml:space="preserve">
          <source>The proxy forwards all requests to the encapsulated transferable and automatically performs additional conversion on the data returned by the encapsulated transferable in case of local transfer.</source>
          <target state="translated">プロキシは、すべてのリクエストをカプセル化された転送装置に転送し、ローカル転送の場合にカプセル化された転送装置によって返されたデータに対して自動的に追加の変換を行う。</target>
        </trans-unit>
        <trans-unit id="b50d88e8c90fab7f40e58f79439f226bc1b3f211" translate="yes" xml:space="preserve">
          <source>The proxy implements all the remote interfaces implemented by the remote object's class.</source>
          <target state="translated">プロキシはリモートオブジェクトのクラスによって実装されたすべてのリモートインターフェースを実装します。</target>
        </trans-unit>
        <trans-unit id="5fb92df931a046e4e96ec8a961568a0710597d9c" translate="yes" xml:space="preserve">
          <source>The proxy's class is defined according to the specifications for the &lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy#membership&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; class, using the class loader of the remote object's class.</source>
          <target state="translated">プロキシのクラスは、リモートオブジェクトのクラスのクラスローダーを使用して、&lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy#membership&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt;クラスの仕様に従って定義されます。</target>
        </trans-unit>
        <trans-unit id="09deea942a6e744cdc803da8c6c2dfa4a09a0e5d" translate="yes" xml:space="preserve">
          <source>The proxy's invocation handler is a &lt;a href=&quot;remoteobjectinvocationhandler&quot;&gt;&lt;code&gt;RemoteObjectInvocationHandler&lt;/code&gt;&lt;/a&gt; instance constructed with a &lt;a href=&quot;remoteref&quot;&gt;&lt;code&gt;RemoteRef&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プロキシの呼び出しハンドラーは、&lt;a href=&quot;remoteref&quot;&gt; &lt;code&gt;RemoteRef&lt;/code&gt; で&lt;/a&gt;構築された&lt;a href=&quot;remoteobjectinvocationhandler&quot;&gt; &lt;code&gt;RemoteObjectInvocationHandler&lt;/code&gt; &lt;/a&gt;インスタンスです。</target>
        </trans-unit>
        <trans-unit id="b083456a4a9c6284da1cf31e08008817ef68ed33" translate="yes" xml:space="preserve">
          <source>The pseudo code for the rescaling operation is as follows:</source>
          <target state="translated">リスケーリング演算の疑似コードは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="6cbb75c3c1cc6c2af9021f9f5e045df931d8ccd5" translate="yes" xml:space="preserve">
          <source>The pseudo-type corresponding to the keyword &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">キーワード &lt;code&gt;void&lt;/code&gt; に対応する疑似型。</target>
        </trans-unit>
        <trans-unit id="94f0a25ea40a5d8f1223e160a1f04a7a4b183b85" translate="yes" xml:space="preserve">
          <source>The pseudo/hidden column may only be used in a SELECT list.</source>
          <target state="translated">擬似/非表示の列は、SELECTリストでのみ使用することができます。</target>
        </trans-unit>
        <trans-unit id="ca6478c62d3dc1f97483e29223ff3d12797f8b7c" translate="yes" xml:space="preserve">
          <source>The pseudo/hidden column may only be used in a WHERE clause.</source>
          <target state="translated">擬似/非表示のカラムは、WHERE句でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="4812bd2f1ef82113d348414069707122f4719cd1" translate="yes" xml:space="preserve">
          <source>The pseudocode for the resulting adapter looks as follows. In the code, &lt;code&gt;V&lt;/code&gt; represents the result type of the &lt;code&gt;try/finally&lt;/code&gt; construct; &lt;code&gt;A&lt;/code&gt;/&lt;code&gt;a&lt;/code&gt;, the types and values of arguments to the resulting handle consumed by the cleanup; and &lt;code&gt;B&lt;/code&gt;/&lt;code&gt;b&lt;/code&gt;, those of arguments to the resulting handle discarded by the cleanup.</source>
          <target state="translated">結果のアダプターの擬似コードは次のようになります。コードでは、 &lt;code&gt;V&lt;/code&gt; は &lt;code&gt;try/finally&lt;/code&gt; コンストラクトの結果タイプを表します。 &lt;code&gt;A&lt;/code&gt; / &lt;code&gt;a&lt;/code&gt; 、クリーンアップによって消費される結果のハンドルへの引数のタイプと値。および &lt;code&gt;B&lt;/code&gt; / &lt;code&gt;b&lt;/code&gt; 、クリーンアップによって破棄された結果のハンドルへの引数の引数。</target>
        </trans-unit>
        <trans-unit id="f1c0bbc66bdb6ee141f8f29a8594a0f7f7c26d71" translate="yes" xml:space="preserve">
          <source>The public exponent-value F4 = 65537.</source>
          <target state="translated">公開指数値F4=65537。</target>
        </trans-unit>
        <trans-unit id="889b7ac5748f9ffaedc89e0966ff01f02908492a" translate="yes" xml:space="preserve">
          <source>The public identifier and system identifier are &lt;code&gt;null&lt;/code&gt;, and byte and character stream are either &lt;code&gt;null&lt;/code&gt; or contain no byte or character.</source>
          <target state="translated">パブリック識別子とシステム識別子が &lt;code&gt;null&lt;/code&gt; であり、バイトと文字ストリームが &lt;code&gt;null&lt;/code&gt; であるか、バイトまたは文字が含まれていません。</target>
        </trans-unit>
        <trans-unit id="607a67c14bf23bd75e74af63fd58a783d5e8e1e8" translate="yes" xml:space="preserve">
          <source>The public identifier as a string, or null if none is available.</source>
          <target state="translated">公開識別子を文字列で指定します。</target>
        </trans-unit>
        <trans-unit id="666d68a6bc57f9864e5a56565fbc5a900e031826" translate="yes" xml:space="preserve">
          <source>The public identifier associated with the entity if specified, and &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">指定されている場合はエンティティに関連付けられているパブリック識別子、それ以外の場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3641e2bf5da57b5d4d6f8981fd5ba25936de99d5" translate="yes" xml:space="preserve">
          <source>The public identifier for the XML Schema definition that defines the XML tags and their valid values for a &lt;code&gt;WebRowSet&lt;/code&gt; implementation.</source>
          <target state="translated">&lt;code&gt;WebRowSet&lt;/code&gt; 実装のXMLタグとその有効な値を定義するXMLスキーマ定義のパブリック識別子。</target>
        </trans-unit>
        <trans-unit id="6082fcf3b4787c7e3fa7e05f8cd01a60bcc96655" translate="yes" xml:space="preserve">
          <source>The public identifier for this input source.</source>
          <target state="translated">この入力ソースの公開識別子。</target>
        </trans-unit>
        <trans-unit id="306fe0d5ecd3a197943ce9157ab37545b45833fc" translate="yes" xml:space="preserve">
          <source>The public identifier for this input source. This may be mapped to an input source using an implementation dependent mechanism (such as catalogues or other mappings). The public identifier, if specified, may also be reported as part of the location information when errors are reported.</source>
          <target state="translated">この入力ソースの公開識別子。これは、実装依存のメカニズム(カタログや他のマッピングなど)を使用して入力ソースにマッピングされてもよい。指定された場合、この公開識別子は、エラーが報告されるときに位置情報の一部として報告されることもあります。</target>
        </trans-unit>
        <trans-unit id="8616cf097304d23ed9bdee5a10da665d66f611aa" translate="yes" xml:space="preserve">
          <source>The public identifier is always optional: if the application writer includes one, it will be provided as part of the location information.</source>
          <target state="translated">公開識別子は常にオプションです:アプリケーションライターがそれを含む場合、それは位置情報の一部として提供されます。</target>
        </trans-unit>
        <trans-unit id="084fd15bde5749cac40870c17b4a07ccada3bfac" translate="yes" xml:space="preserve">
          <source>The public identifier of the external subset.</source>
          <target state="translated">外部サブセットの公開識別子。</target>
        </trans-unit>
        <trans-unit id="e59aa7e65372678aa563cfbbb9d944fcecc85ead" translate="yes" xml:space="preserve">
          <source>The public identifier of this notation.</source>
          <target state="translated">この記法の公開識別子。</target>
        </trans-unit>
        <trans-unit id="af89db99417a364a5ed02edd579e71607f09ad52" translate="yes" xml:space="preserve">
          <source>The public identifier of this notation. If the public identifier was not specified, this is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">この表記の公開識別子。公開識別子が指定されていない場合、これは &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="452a322725b189c1bd9848c6035428fa8271f855" translate="yes" xml:space="preserve">
          <source>The public identifier that was set with setPublicId, or null if setPublicId was not called.</source>
          <target state="translated">setPublicId で設定されたパブリック識別子、または setPublicId が呼び出されなかった場合は null。</target>
        </trans-unit>
        <trans-unit id="1d7f2c29e78db86abe70e3052b6a63ed7f102e04" translate="yes" xml:space="preserve">
          <source>The public identifier, or null if none was supplied.</source>
          <target state="translated">公開識別子、または何も与えられなかった場合はnull。</target>
        </trans-unit>
        <trans-unit id="f26be22251f1ffca01d91cc5cb358dc14cdbbb9d" translate="yes" xml:space="preserve">
          <source>The public key or the signature algorithm has been constrained.</source>
          <target state="translated">公開鍵または署名アルゴリズムが制約されています。</target>
        </trans-unit>
        <trans-unit id="c28eb2aa6086a8572e42d5f820ee00606327026e" translate="yes" xml:space="preserve">
          <source>The public methods of all &lt;code&gt;CertStoreSpi&lt;/code&gt; objects must be thread-safe. That is, multiple threads may concurrently invoke these methods on a single &lt;code&gt;CertStoreSpi&lt;/code&gt; object (or more than one) with no ill effects. This allows a &lt;code&gt;CertPathBuilder&lt;/code&gt; to search for a CRL while simultaneously searching for further certificates, for instance.</source>
          <target state="translated">すべての &lt;code&gt;CertStoreSpi&lt;/code&gt; オブジェクトのパブリックメソッドはスレッドセーフでなければなりません。つまり、複数のスレッドが単一の &lt;code&gt;CertStoreSpi&lt;/code&gt; オブジェクト（または複数）でこれらのメソッドを同時に呼び出しても、悪影響はありません。これにより、たとえば、 &lt;code&gt;CertPathBuilder&lt;/code&gt; はCRLを検索すると同時に、他の証明書を検索できます。</target>
        </trans-unit>
        <trans-unit id="a02308f567fb58540f6ccefee2675e6a72ad544b" translate="yes" xml:space="preserve">
          <source>The public-exponent value F0 = 3.</source>
          <target state="translated">公開指数値F0=3である。</target>
        </trans-unit>
        <trans-unit id="ffd416e4ee6aca89b81f63e35d9c17c738fb2e7a" translate="yes" xml:space="preserve">
          <source>The publisher returned by the &lt;a href=&quot;httpresponse#body()&quot;&gt;&lt;code&gt;body&lt;/code&gt;&lt;/a&gt; method can be subscribed to only once. The first subscriber will receive the body response bytes if successfully subscribed, or will cause the subscription to be cancelled otherwise. If more subscriptions are attempted, the subsequent subscribers will be immediately subscribed with an empty subscription and their &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt;&lt;code&gt;onError&lt;/code&gt;&lt;/a&gt; method will be invoked with an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;httpresponse#body()&quot;&gt; &lt;code&gt;body&lt;/code&gt; &lt;/a&gt;メソッドによって返される発行元は、1回だけサブスクライブできます。最初のサブスクライバーは、正常にサブスクライブされた場合は本文応答バイトを受信します。それ以外の場合は、サブスクリプションがキャンセルされます。さらにサブスクリプションが試行されると、後続のサブスクライバーはすぐに空のサブスクリプションでサブスクライブされ、それらの&lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt; &lt;code&gt;onError&lt;/code&gt; &lt;/a&gt;メソッドは &lt;code&gt;IllegalStateException&lt;/code&gt; で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a3c496c34577282d9b29830bb8f695bcbc9c40b3" translate="yes" xml:space="preserve">
          <source>The purported representation in &lt;code&gt;bytes&lt;/code&gt; must be a &lt;code&gt;ClassFile&lt;/code&gt; structure of a supported major and minor version. The major and minor version may differ from the &lt;code&gt;class&lt;/code&gt; file version of the lookup class of this &lt;code&gt;Lookup&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b9b090e2e3af4d5dc6ecafb7583d4cc88b82f8" translate="yes" xml:space="preserve">
          <source>The purpose of the key that is to be selected.</source>
          <target state="translated">選ばれるべき鍵の目的。</target>
        </trans-unit>
        <trans-unit id="a685b30cd56fd2fa8d25fa1008484df0ea6a7290" translate="yes" xml:space="preserve">
          <source>The purpose of the methods to transform to/from the well-defined CIEXYZ color space is to support conversions between any two color spaces at a reasonably high degree of accuracy. It is expected that particular implementations of subclasses of &lt;code&gt;ColorSpace&lt;/code&gt; (e.g. &lt;code&gt;ICC_ColorSpace&lt;/code&gt;) will support high performance conversion based on underlying platform color management systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a218ad17fd93df6b98634337c4e7514b88c3517" translate="yes" xml:space="preserve">
          <source>The purpose of the methods to transform to/from the well-defined CIEXYZ color space is to support conversions between any two color spaces at a reasonably high degree of accuracy. It is expected that particular implementations of subclasses of ColorSpace (e.g. ICC_ColorSpace) will support high performance conversion based on underlying platform color management systems.</source>
          <target state="translated">よく定義されたCIEXYZ色空間へ/から変換する方法の目的は、任意の2つの色空間間の変換を合理的に高い精度でサポートすることである。ColorSpaceのサブクラス(例えばICC_ColorSpace)の特定の実装が、基礎となるプラットフォームのカラーマネジメントシステムに基づいた高性能変換をサポートすることが期待されています。</target>
        </trans-unit>
        <trans-unit id="58212aee8e35283834dfaea45dcaab9b066bc5e9" translate="yes" xml:space="preserve">
          <source>The purpose of this interface is to group (and provide type safety for) all &lt;code&gt;CertStore&lt;/code&gt; parameter specifications. All &lt;code&gt;CertStore&lt;/code&gt; parameter specifications must implement this interface.</source>
          <target state="translated">このインタフェースの目的は、すべての &lt;code&gt;CertStore&lt;/code&gt; パラメータ仕様をグループ化（およびタイプセーフを提供）することです。すべての &lt;code&gt;CertStore&lt;/code&gt; パラメータ仕様は、このインターフェースを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="497084f3740257fa01928dfab9f2a8bd92f16644" translate="yes" xml:space="preserve">
          <source>The purpose of this interface is to group (and provide type safety for) all certification path validator results. All results returned by the &lt;a href=&quot;certpathvalidator#validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)&quot;&gt;&lt;code&gt;CertPathValidator.validate&lt;/code&gt;&lt;/a&gt; method must implement this interface.</source>
          <target state="translated">このインターフェースの目的は、すべての認証パスバリデーターの結果をグループ化（およびタイプセーフティを提供）することです。&lt;a href=&quot;certpathvalidator#validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)&quot;&gt; &lt;code&gt;CertPathValidator.validate&lt;/code&gt; &lt;/a&gt;メソッドによって返されるすべての結果は、このインターフェイスを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="8f81245615bb3902dc0ddd73189d74b0875c911f" translate="yes" xml:space="preserve">
          <source>The purpose of this interface is to group (and provide type safety for) all certification path validator results. All results returned by the &lt;a href=&quot;certpathvalidator#validate-java.security.cert.CertPath-java.security.cert.CertPathParameters-&quot;&gt;&lt;code&gt;CertPathValidator.validate&lt;/code&gt;&lt;/a&gt; method must implement this interface.</source>
          <target state="translated">このインターフェイスの目的は、すべての証明書パス検証の結果をグループ化（およびタイプセーフを提供）することです。&lt;a href=&quot;certpathvalidator#validate-java.security.cert.CertPath-java.security.cert.CertPathParameters-&quot;&gt; &lt;code&gt;CertPathValidator.validate&lt;/code&gt; &lt;/a&gt;メソッドによって返されるすべての結果は、このインターフェースを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="f40bfb04d6225f59e5f6ed15eef633d42be0d88d" translate="yes" xml:space="preserve">
          <source>The pushback buffer.</source>
          <target state="translated">プッシュバックバッファです。</target>
        </trans-unit>
        <trans-unit id="b5af8f1a618a38255f2c1f2534b78fc0e45ec2ab" translate="yes" xml:space="preserve">
          <source>The qualified name of the import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31d955d9efe36b1734a65da90b797845391d566" translate="yes" xml:space="preserve">
          <source>The qualified name of the import. For any imports (&lt;a href=&quot;snippet.subkind#TYPE_IMPORT_ON_DEMAND_SUBKIND&quot;&gt;&lt;code&gt;Snippet.SubKind.TYPE_IMPORT_ON_DEMAND_SUBKIND&lt;/code&gt;&lt;/a&gt;, (&lt;a href=&quot;snippet.subkind#STATIC_IMPORT_ON_DEMAND_SUBKIND&quot;&gt;&lt;code&gt;Snippet.SubKind.STATIC_IMPORT_ON_DEMAND_SUBKIND&lt;/code&gt;&lt;/a&gt;), (&lt;a href=&quot;snippet.subkind#SINGLE_TYPE_IMPORT_SUBKIND&quot;&gt;&lt;code&gt;Snippet.SubKind.SINGLE_TYPE_IMPORT_SUBKIND&lt;/code&gt;&lt;/a&gt; or (&lt;a href=&quot;snippet.subkind#SINGLE_STATIC_IMPORT_SUBKIND&quot;&gt;&lt;code&gt;Snippet.SubKind.SINGLE_STATIC_IMPORT_SUBKIND&lt;/code&gt;&lt;/a&gt;) that is the full specifier including any qualifiers and the asterisks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4aab08f812dbdbd1e2f17d2f57df09ad2f9651a" translate="yes" xml:space="preserve">
          <source>The quality of implementation specifications concern two properties, accuracy of the returned result and monotonicity of the method. Accuracy of the floating-point &lt;code&gt;Math&lt;/code&gt; methods is measured in terms of</source>
          <target state="translated">実装仕様の品質は、返される結果の精度とメソッドの単調性という2つのプロパティに関係します。浮動小数点 &lt;code&gt;Math&lt;/code&gt; メソッドの精度は、</target>
        </trans-unit>
        <trans-unit id="f5cb0e2e965fe133bfc4b502b0d3bcf943a71b82" translate="yes" xml:space="preserve">
          <source>The quarter-of-year can only be calculated if the month-of-year is available.</source>
          <target state="translated">半期分は、その月の月数がある場合にのみ計算できます。</target>
        </trans-unit>
        <trans-unit id="dddac52873ee50d0b150f5774b33d3171bd12498" translate="yes" xml:space="preserve">
          <source>The query can be used as follows:</source>
          <target state="translated">クエリは以下のように使用できます。</target>
        </trans-unit>
        <trans-unit id="70bb5883a481eb39ca30783c6a7918ebefc04d35" translate="yes" xml:space="preserve">
          <source>The query component of a URI, if defined, only contains legal URI characters.</source>
          <target state="translated">URIのクエリコンポーネントは、定義されている場合、合法的なURI文字のみを含む。</target>
        </trans-unit>
        <trans-unit id="e864d8346a749cfdd6a77c410e2c3f6c279670bc" translate="yes" xml:space="preserve">
          <source>The query implementation examines the &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt; field and uses it to create a &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">クエリ実装は&lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;EPOCH_DAY&lt;/code&gt; &lt;/a&gt;フィールドを調べ、それを使用して &lt;code&gt;LocalDate&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="6043cc3fa8c882b0feedaeddf7526a1d1132efc5" translate="yes" xml:space="preserve">
          <source>The query implementation examines the &lt;a href=&quot;chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; field and uses it to create a &lt;code&gt;LocalTime&lt;/code&gt;.</source>
          <target state="translated">クエリ実装は&lt;a href=&quot;chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;NANO_OF_DAY&lt;/code&gt; &lt;/a&gt;フィールドを調べ、それを使用して &lt;code&gt;LocalTime&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="b5e706d8394f50472ebf16e28898a8a1e6a58887" translate="yes" xml:space="preserve">
          <source>The query implementation examines the &lt;a href=&quot;chronofield#OFFSET_SECONDS&quot;&gt;&lt;code&gt;OFFSET_SECONDS&lt;/code&gt;&lt;/a&gt; field and uses it to create a &lt;code&gt;ZoneOffset&lt;/code&gt;.</source>
          <target state="translated">クエリ実装は&lt;a href=&quot;chronofield#OFFSET_SECONDS&quot;&gt; &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; &lt;/a&gt;フィールドを調べ、それを使用して &lt;code&gt;ZoneOffset&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="a9d533d67b796aabaca7323db73ec2da2a5567db" translate="yes" xml:space="preserve">
          <source>The query submitted by the driver to validate the connection shall be executed in the context of the current transaction.</source>
          <target state="translated">接続を検証するためにドライバが提出したクエリは、現在のトランザクションのコンテキストで実行されなければならない。</target>
        </trans-unit>
        <trans-unit id="b701fffe515ad54c8901b8edcc958e95fc0863c4" translate="yes" xml:space="preserve">
          <source>The quotes surrounding a quoted value, and any backslashes within that value, are considered to be part of the value.</source>
          <target state="translated">引用された値を囲む引用符、およびその値内のバックスラッシュは、値の一部とみなされます。</target>
        </trans-unit>
        <trans-unit id="a7d974dd7e85a61e651a1f194908d0947c9c72a3" translate="yes" xml:space="preserve">
          <source>The radix is either smaller than &lt;a href=&quot;character#MIN_RADIX&quot;&gt;&lt;code&gt;Character.MIN_RADIX&lt;/code&gt;&lt;/a&gt; or larger than &lt;a href=&quot;character#MAX_RADIX&quot;&gt;&lt;code&gt;Character.MAX_RADIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">基数はいずれよりも小さい&lt;a href=&quot;character#MIN_RADIX&quot;&gt; &lt;code&gt;Character.MIN_RADIX&lt;/code&gt; &lt;/a&gt;又はより大きい&lt;a href=&quot;character#MAX_RADIX&quot;&gt; &lt;code&gt;Character.MAX_RADIX&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1aff07d7777d5b73265b5ea3b6fd0d12004a2b97" translate="yes" xml:space="preserve">
          <source>The range is never null. For example, the 'Year' field is shorthand for 'YearOfForever'. It therefore has a unit of 'Years' and a range of 'Forever'.</source>
          <target state="translated">範囲は決してnullではありません。例えば、'Year' フィールドは 'YearOfForever' の略語です。したがって、'Year' の単位と 'Forever' の範囲を持ちます。</target>
        </trans-unit>
        <trans-unit id="28c3676b410b66174f1db5ce3adf03537f612813" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This date is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この日付は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="3be0f1078a3bff28a13de38bf87eb44d5f6cfd7c" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This date-time is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この日付時間は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="91574718820af02ba334ca5d2fcaa8ec6eaea0fc" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This day-of-week is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この曜日の指定は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="49564c5fdd906eee0231c2e097092a4591ff74b8" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This era is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この時代は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="d7949501ac98f64cd52d82177d9b4791e0d319f3" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This instant is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この瞬間は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="8a75a30588e66efcb4e03e0edc195ee3a6dc4a14" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This month is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この月は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="e107332e6198f288dc13a1a398312820086bba7b" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This month-day is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この月日は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="014329a030e2ab6f6b560564601eb56834e5e981" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This offset is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。このオフセットは、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="f8e7e158ec4085c5caa0000a57a4cf2e6742dd0c" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This time is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この時間は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="735932a1888a19dccb3e713207eb70618d6c1110" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This year is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この年は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="461a26e4d72a556581a55b26af7476b03a89d671" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This year-month is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この年月は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="85b6f271b8e9dbcfec00b32e847d50024b09f127" translate="yes" xml:space="preserve">
          <source>The range of a duration requires the storage of a number larger than a &lt;code&gt;long&lt;/code&gt;. To achieve this, the class stores a &lt;code&gt;long&lt;/code&gt; representing seconds and an &lt;code&gt;int&lt;/code&gt; representing nanosecond-of-second, which will always be between 0 and 999,999,999. The model is of a directed duration, meaning that the duration may be negative.</source>
          <target state="translated">期間の範囲では、 &lt;code&gt;long&lt;/code&gt; よりも大きい数値を格納する必要があります。これを実現するために、クラスは &lt;code&gt;long&lt;/code&gt; を表す秒とnanosecond-of-secondを表す &lt;code&gt;int&lt;/code&gt; を格納します。これは常に0から999,999,999の間です。モデルは有向期間です。つまり、期間は負になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="32e38d37e14ca58b0618d587028515e73e2533f4" translate="yes" xml:space="preserve">
          <source>The range of an instant requires the storage of a number larger than a &lt;code&gt;long&lt;/code&gt;. To achieve this, the class stores a &lt;code&gt;long&lt;/code&gt; representing epoch-seconds and an &lt;code&gt;int&lt;/code&gt; representing nanosecond-of-second, which will always be between 0 and 999,999,999. The epoch-seconds are measured from the standard Java epoch of &lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt; where instants after the epoch have positive values, and earlier instants have negative values. For both the epoch-second and nanosecond parts, a larger value is always later on the time-line than a smaller value.</source>
          <target state="translated">インスタントの範囲には、 &lt;code&gt;long&lt;/code&gt; よりも大きい数のストレージが必要です。これを実現するために、クラスはエポック秒を表す &lt;code&gt;long&lt;/code&gt; とナノ秒を表す &lt;code&gt;int&lt;/code&gt; を格納します。これは常に0から999,999,999の間です。エポック秒は、 &lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt; の標準Javaエポックから測定されます。エポックの後の瞬間は正の値を持ち、それ以前の瞬間は負の値を持ちます。エポック秒とナノ秒の両方の部分で、大きい値は常に小さい値よりタイムライン上で遅くなります。</target>
        </trans-unit>
        <trans-unit id="9c4be6accb9dad9be6efe2a2837d3150210f72f4" translate="yes" xml:space="preserve">
          <source>The range of the field is the period that the field varies within. For example, in the field 'MonthOfYear', the range is 'Years'. See also &lt;a href=&quot;#getBaseUnit()&quot;&gt;&lt;code&gt;getBaseUnit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールドの範囲は、フィールドが変化する期間です。たとえば、フィールド「MonthOfYear」の範囲は「Years」です。&lt;a href=&quot;#getBaseUnit()&quot;&gt; &lt;code&gt;getBaseUnit()&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="679d54d91b72b6e361f360707cfcab80ec107617" translate="yes" xml:space="preserve">
          <source>The range of the field is the period that the field varies within. For example, in the field 'MonthOfYear', the range is 'Years'. See also &lt;a href=&quot;temporalfield#getBaseUnit--&quot;&gt;&lt;code&gt;TemporalField.getBaseUnit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールドの範囲は、フィールドが変化する期間です。たとえば、フィールド 'MonthOfYear'では、範囲は 'Years'です。&lt;a href=&quot;temporalfield#getBaseUnit--&quot;&gt; &lt;code&gt;TemporalField.getBaseUnit()&lt;/code&gt; &lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="8d54476f03a91c05aa619016f50c3163119ec639" translate="yes" xml:space="preserve">
          <source>The range of the field is the period that the field varies within. For example, in the field 'MonthOfYear', the range is 'Years'. See also &lt;a href=&quot;temporalfield#getBaseUnit--&quot;&gt;&lt;code&gt;getBaseUnit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールドの範囲は、フィールドが変化する期間です。たとえば、フィールド 'MonthOfYear'では、範囲は 'Years'です。&lt;a href=&quot;temporalfield#getBaseUnit--&quot;&gt; &lt;code&gt;getBaseUnit()&lt;/code&gt; &lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="bb9262661e91ed7bef2f4dcc6a38ba0c83ed604f" translate="yes" xml:space="preserve">
          <source>The range of valid Japanese eras can change over time due to the nature of the Japanese calendar system.</source>
          <target state="translated">日本の暦の性質上、日本の有効な年の範囲は時間の経過とともに変化することがあります。</target>
        </trans-unit>
        <trans-unit id="0bed82254a2488e57b5e72ee8db8066e750b8a42" translate="yes" xml:space="preserve">
          <source>The range of valid values for a date-time field.</source>
          <target state="translated">日付時間フィールドの有効な値の範囲。</target>
        </trans-unit>
        <trans-unit id="f74c7503d6071b30c8c61a8b75f2f1ec45dd13e0" translate="yes" xml:space="preserve">
          <source>The raw authority component of this URI, or &lt;code&gt;null&lt;/code&gt; if the authority is undefined</source>
          <target state="translated">このURIの未加工の権限コンポーネント。権限が未定義の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca0f93a7d9b2a593cc73021049a4babe847f8e5a" translate="yes" xml:space="preserve">
          <source>The raw fragment component of this URI, or &lt;code&gt;null&lt;/code&gt; if the fragment is undefined</source>
          <target state="translated">このURIの生のフラグメントコンポーネント。フラグメントが未定義の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="884bd03f88502ccbbb9691da661566c970592757" translate="yes" xml:space="preserve">
          <source>The raw long value associated to this memory address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a189753abac31378f32795de3236540870ae3b" translate="yes" xml:space="preserve">
          <source>The raw query component of this URI, or &lt;code&gt;null&lt;/code&gt; if the query is undefined</source>
          <target state="translated">このURIの生のクエリコンポーネント。クエリが未定義の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05172f64d4d3b180d734e94e231efb1e5ba69223" translate="yes" xml:space="preserve">
          <source>The raw scheme-specific part of this URI (never &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">このURIのスキーマ固有部分（ &lt;code&gt;null&lt;/code&gt; にはならない）</target>
        </trans-unit>
        <trans-unit id="5e87c817a622606571e558fb125257b7d14ba713" translate="yes" xml:space="preserve">
          <source>The raw user-information component of this URI, or &lt;code&gt;null&lt;/code&gt; if the user information is undefined</source>
          <target state="translated">このURIの生のユーザー情報コンポーネント。ユーザー情報が未定義の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f41303d8fd6ce5aa0821756418e069b981b7b161" translate="yes" xml:space="preserve">
          <source>The read end of a pipe</source>
          <target state="translated">パイプのリードエンド</target>
        </trans-unit>
        <trans-unit id="2f625a725ca986b919f09071c8736ca180edd0b0" translate="yes" xml:space="preserve">
          <source>The read lock and write lock both support interruption during lock acquisition.</source>
          <target state="translated">リードロックとライトロックは、ロック取得中の割り込みをサポートしています。</target>
        </trans-unit>
        <trans-unit id="1910ace8ec568ce21c0234fca6b9fc966c9cfd9a" translate="yes" xml:space="preserve">
          <source>The read lock does not support a &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;readLock().newCondition()&lt;/code&gt; throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">読み取りロックは&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;をサポートせず、 &lt;code&gt;readLock().newCondition()&lt;/code&gt; は &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="2ef8ece400c68c93f9421b6ba44a9c57dd5cbaa4" translate="yes" xml:space="preserve">
          <source>The read lock is acquired by the current thread; or</source>
          <target state="translated">読み取りロックは、現在のスレッドで取得されます。</target>
        </trans-unit>
        <trans-unit id="c9ea905530375593b0c66214e6790341afceb692" translate="yes" xml:space="preserve">
          <source>The read operation may read up to</source>
          <target state="translated">読み取り操作では、最大</target>
        </trans-unit>
        <trans-unit id="2865a10b019911b5946864d5522b0a72162698af" translate="yes" xml:space="preserve">
          <source>The read position of the input stream is positioned to the next available byte after the encoded distinguished name.</source>
          <target state="translated">入力ストリームの読み出し位置は、符号化された識別名の次の利用可能なバイトに配置される。</target>
        </trans-unit>
        <trans-unit id="634db75a4e5ec4659af37c3e0e8afa693c0276b7" translate="yes" xml:space="preserve">
          <source>The readObject method is responsible for reading and restoring the state of the object for its particular class using data written to the stream by the corresponding writeObject method. The method does not need to concern itself with the state belonging to its superclasses or subclasses. State is restored by reading data from the ObjectInputStream for the individual fields and making assignments to the appropriate fields of the object. Reading primitive data types is supported by DataInput.</source>
          <target state="translated">readObject メソッドは、対応する writeObject メソッドによってストリームに書き込まれたデータを使用して、その特定のクラスのオブジェクトの状態を読み込んで復元します。このメソッドは、そのスーパークラスまたはサブクラスに属する状態を気にする必要はありません。状態は、個々のフィールドの ObjectInputStream からデータを読み取り、オブジェクトの適切なフィールドに代入することで復元されます。プリミティブ・データ型の読み取りは、DataInput によってサポートされています。</target>
        </trans-unit>
        <trans-unit id="8520a1a1ecaa0cf4e920c8fe17c0f626c164c35d" translate="yes" xml:space="preserve">
          <source>The readObject method is responsible for reading from the stream and restoring the classes fields. It may call in.defaultReadObject to invoke the default mechanism for restoring the object's non-static and non-transient fields. The defaultReadObject method uses information in the stream to assign the fields of the object saved in the stream with the correspondingly named fields in the current object. This handles the case when the class has evolved to add new fields. The method does not need to concern itself with the state belonging to its superclasses or subclasses. State is restored by reading data from the ObjectInputStream for the individual fields and making assignments to the appropriate fields of the object. Reading primitive data types is supported by DataInput.</source>
          <target state="translated">readObject メソッドは、ストリームからの読み込みとクラスのフィールドの復元を担当します。これは in.defaultReadObject を呼び出して、オブジェクトの非静的および非一時的なフィールドを復元するためのデフォルトのメカニズムを呼び出すことができます。defaultReadObject メソッドは、ストリーム内の情報を使用して、ストリーム内に保存されたオブジェクトのフィールドを、現在のオブジェクト内の対応する名前のフィールドに割り当てます。これは、クラスが新しいフィールドを追加するために進化した場合を処理します。このメソッドは、そのスーパークラスやサブクラスに属する状態を気にする必要はありません。状態は、個々のフィールドの ObjectInputStream からデータを読み取り、オブジェクトの適切なフィールドへの割り当てを行うことで復元されます。プリミティブ・データ型の読み取りは、DataInput によってサポートされています。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
