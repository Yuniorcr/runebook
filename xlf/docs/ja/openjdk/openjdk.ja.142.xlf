<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="cc14039f9542b116070e40ff4b44402d445c1c0e" translate="yes" xml:space="preserve">
          <source>Tells whether the file is a symbolic link.</source>
          <target state="translated">ファイルがシンボリックリンクであるかどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="1f4914090150733a7effa2b3e06ad205d1308748" translate="yes" xml:space="preserve">
          <source>Tells whether the file is something other than a regular file, directory, or symbolic link.</source>
          <target state="translated">ファイルが通常のファイル、ディレクトリ、シンボリックリンク以外のものであるかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="d553077c6219eb50fd9f7ff3697b489b5c13a487" translate="yes" xml:space="preserve">
          <source>Tells whether the named charset is supported.</source>
          <target state="translated">名前付き文字セットがサポートされているかどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="c90888c5609b0ad8f009748e22b55eb20c1c8c79" translate="yes" xml:space="preserve">
          <source>Tells whether there are any elements between the current position and the limit.</source>
          <target state="translated">現在位置と限界値の間に要素があるかどうかを判定します。</target>
        </trans-unit>
        <trans-unit id="f1e307c18c7235ffac0bc9102a045b703288fb6d" translate="yes" xml:space="preserve">
          <source>Tells whether this WebSocket's input is closed.</source>
          <target state="translated">この WebSocket の入力が閉じられているかどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="fbca271839e4fc3941753942cb5157f96d7525bd" translate="yes" xml:space="preserve">
          <source>Tells whether this WebSocket's output is closed.</source>
          <target state="translated">この WebSocket の出力がクローズされているかどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="7684eeace43e468ddc40160695d339ed57d9ba0d" translate="yes" xml:space="preserve">
          <source>Tells whether this file store is read-only.</source>
          <target state="translated">このファイルストアが読み取り専用かどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="6c1b0cc691a8ba56d36bd81350a8816782b4c96a" translate="yes" xml:space="preserve">
          <source>Tells whether this file store is read-only. A file store is read-only if it does not support write operations or other changes to files. Any attempt to create a file, open an existing file for writing etc. causes an &lt;code&gt;IOException&lt;/code&gt; to be thrown.</source>
          <target state="translated">このファイルストアが読み取り専用かどうかを判断します。ファイルストアは、ファイルへの書き込み操作やその他の変更をサポートしていない場合、読み取り専用です。ファイルを作成したり、既存のファイルを開いて書き込みなどを &lt;code&gt;IOException&lt;/code&gt; うとすると、IOExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="fb83ba7cf71cb3ce5d966791408c7d9e3c891a4d" translate="yes" xml:space="preserve">
          <source>Tells whether this lock is shared.</source>
          <target state="translated">このロックが共有されているかどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="f7a5d31c04a0f8aec42cae000c2334d9fa7ef1b2" translate="yes" xml:space="preserve">
          <source>Tells whether this process builder merges standard error and standard output.</source>
          <target state="translated">このプロセスビルダが標準誤差と標準出力をマージするかどうかを判定します。</target>
        </trans-unit>
        <trans-unit id="7bf307eb0e21cade3a71192dcc7a0dde425d4d5b" translate="yes" xml:space="preserve">
          <source>Tells whether this stream is ready to be read.</source>
          <target state="translated">このストリームを読み込む準備ができているかどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="2deb36e8952f86642e1c7d386eba9349a39c3dbe" translate="yes" xml:space="preserve">
          <source>Tells whether this stream is ready to be read. A buffered character stream is ready if the buffer is not empty, or if the underlying character stream is ready.</source>
          <target state="translated">このストリームの読み込み準備ができているかどうかを指定します。バッファリングされた文字ストリームは、バッファが空でない場合、またはその下にある文字ストリームが準備ができている場合に準備ができています。</target>
        </trans-unit>
        <trans-unit id="2ed8581f44b192ed5ac1593f6e99bffa98043db6" translate="yes" xml:space="preserve">
          <source>Tells whether this stream is ready to be read. An InputStreamReader is ready if its input buffer is not empty, or if bytes are available to be read from the underlying byte stream.</source>
          <target state="translated">このストリームの読み込み準備ができているかどうかを示します。InputStreamReader は、入力バッファが空でない場合、またはバイトストリームからの読み込みが可能な場合に準備ができています。</target>
        </trans-unit>
        <trans-unit id="6c94665ddc8f2dcb5dc788aa07429449dd548862" translate="yes" xml:space="preserve">
          <source>Tells whether this stream is ready to be read. Character-array readers are always ready to be read.</source>
          <target state="translated">このストリームが読み込まれる準備ができているかどうかを判定します。文字配列リーダは常に読み込み準備ができています。</target>
        </trans-unit>
        <trans-unit id="e30c73af260a015b813beaa7dea4212d680061ef" translate="yes" xml:space="preserve">
          <source>Tells whether this stream supports the mark() operation, which it does not.</source>
          <target state="translated">このストリームが mark()操作をサポートしているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="2a6710993d297b3eca5ee752f3c745fb06db41c7" translate="yes" xml:space="preserve">
          <source>Tells whether this stream supports the mark() operation, which it does.</source>
          <target state="translated">このストリームが mark()操作をサポートしているかどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="f4e4ca990766d636ab0b19a2df6bc3f321fe5e0f" translate="yes" xml:space="preserve">
          <source>Tells whether this stream supports the mark() operation.</source>
          <target state="translated">このストリームが mark()操作をサポートしているかどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="9e9652318ae932a49847e8ce079c7efe4d121332" translate="yes" xml:space="preserve">
          <source>Tells whether this stream supports the mark() operation. The default implementation always returns false. Subclasses should override this method.</source>
          <target state="translated">このストリームが mark()操作をサポートしているかどうかを指定します。デフォルトの実装では、常に false を返します。サブクラスはこのメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="8519d6094da990d369e2fea23d4d3e93aae8da1a" translate="yes" xml:space="preserve">
          <source>Tells which access-protection classes of members this lookup object can produce.</source>
          <target state="translated">このルックアップオブジェクトが生成できるメンバーのアクセス保護クラスを指定します。</target>
        </trans-unit>
        <trans-unit id="f1410b6b75c8193f5f535786af030674cdd4bc82" translate="yes" xml:space="preserve">
          <source>Tells which access-protection classes of members this lookup object can produce. The result is a bit-mask of the bits &lt;a href=&quot;#PUBLIC&quot;&gt;PUBLIC (0x01)&lt;/a&gt;, &lt;a href=&quot;#PRIVATE&quot;&gt;PRIVATE (0x02)&lt;/a&gt;, &lt;a href=&quot;#PROTECTED&quot;&gt;PROTECTED (0x04)&lt;/a&gt;, &lt;a href=&quot;#PACKAGE&quot;&gt;PACKAGE (0x08)&lt;/a&gt;, &lt;a href=&quot;#MODULE&quot;&gt;MODULE (0x10)&lt;/a&gt;, and &lt;a href=&quot;#UNCONDITIONAL&quot;&gt;UNCONDITIONAL (0x20)&lt;/a&gt;.</source>
          <target state="translated">Tells which access-protection classes of members this lookup object can produce. The result is a bit-mask of the bits &lt;a href=&quot;#PUBLIC&quot;&gt;PUBLIC (0x01)&lt;/a&gt;, &lt;a href=&quot;#PRIVATE&quot;&gt;PRIVATE (0x02)&lt;/a&gt;, &lt;a href=&quot;#PROTECTED&quot;&gt;PROTECTED (0x04)&lt;/a&gt;, &lt;a href=&quot;#PACKAGE&quot;&gt;PACKAGE (0x08)&lt;/a&gt;, &lt;a href=&quot;#MODULE&quot;&gt;MODULE (0x10)&lt;/a&gt;, and &lt;a href=&quot;#UNCONDITIONAL&quot;&gt;UNCONDITIONAL (0x20)&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b82962a05765506d200f067df1a67e6c41e7dc86" translate="yes" xml:space="preserve">
          <source>Tells which access-protection classes of members this lookup object can produce. The result is a bit-mask of the bits &lt;a href=&quot;methodhandles.lookup#PUBLIC&quot;&gt;PUBLIC (0x01)&lt;/a&gt;, &lt;a href=&quot;methodhandles.lookup#PRIVATE&quot;&gt;PRIVATE (0x02)&lt;/a&gt;, &lt;a href=&quot;methodhandles.lookup#PROTECTED&quot;&gt;PROTECTED (0x04)&lt;/a&gt;, and &lt;a href=&quot;methodhandles.lookup#PACKAGE&quot;&gt;PACKAGE (0x08)&lt;/a&gt;.</source>
          <target state="translated">この検索オブジェクトが生成できるメンバーのアクセス保護クラスを通知します。結果は、ビット&lt;a href=&quot;methodhandles.lookup#PUBLIC&quot;&gt;PUBLIC（0x01）&lt;/a&gt;、&lt;a href=&quot;methodhandles.lookup#PRIVATE&quot;&gt;PRIVATE（0x02）&lt;/a&gt;、&lt;a href=&quot;methodhandles.lookup#PROTECTED&quot;&gt;PROTECTED（0x04）&lt;/a&gt;、および&lt;a href=&quot;methodhandles.lookup#PACKAGE&quot;&gt;PACKAGE（0x08）&lt;/a&gt;のビットマスクです。</target>
        </trans-unit>
        <trans-unit id="97cb47f40b2c92eab2017d028f9c11a83e5dbc82" translate="yes" xml:space="preserve">
          <source>Tells which class is performing the lookup.</source>
          <target state="translated">どのクラスがルックアップを実行しているかを知らせます。</target>
        </trans-unit>
        <trans-unit id="2273ffa0126ce571b130b0a37fe9e221186c9ec6" translate="yes" xml:space="preserve">
          <source>Tells which class is performing the lookup. It is this class against which checks are performed for visibility and access permissions.</source>
          <target state="translated">どのクラスがルックアップを実行しているかを知らせます。可視性とアクセス権限のチェックが実行されるのは、このクラスです。</target>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="translated">Templates</target>
        </trans-unit>
        <trans-unit id="8983724093546fb9c6f973ae60994f206093a8c7" translate="yes" xml:space="preserve">
          <source>Templates must be threadsafe for a given instance over multiple threads running concurrently, and may be used multiple times in a given session.</source>
          <target state="translated">テンプレートは、同時に実行されている複数のスレッドに対して、指定されたインスタンスに対してスレッドセーフでなければならず、指定されたセッションで複数回使用することができます。</target>
        </trans-unit>
        <trans-unit id="834a28d2896837f659be4bd4cd02e11559b52b6b" translate="yes" xml:space="preserve">
          <source>TemplatesHandler</source>
          <target state="translated">TemplatesHandler</target>
        </trans-unit>
        <trans-unit id="0efe5fd2a34c24650008540e93242893db484cab" translate="yes" xml:space="preserve">
          <source>Temporal</source>
          <target state="translated">Temporal</target>
        </trans-unit>
        <trans-unit id="f286a2dc5192d3d5aa9f64e09927f6c1517a5849" translate="yes" xml:space="preserve">
          <source>Temporal.isSupported()</source>
          <target state="translated">Temporal.isSupported()</target>
        </trans-unit>
        <trans-unit id="b3e1a6ddb04e5295aab2518ee54693fee0260d0e" translate="yes" xml:space="preserve">
          <source>Temporal.minus()</source>
          <target state="translated">Temporal.minus()</target>
        </trans-unit>
        <trans-unit id="1b5a4e2165544e13530f8280087cf8452eb8f5e7" translate="yes" xml:space="preserve">
          <source>Temporal.plus()</source>
          <target state="translated">Temporal.plus()</target>
        </trans-unit>
        <trans-unit id="588d57472cbbee250c7f8f17a94c202edb4572af" translate="yes" xml:space="preserve">
          <source>Temporal.until()</source>
          <target state="translated">Temporal.until()</target>
        </trans-unit>
        <trans-unit id="0d242c39991a0f96255d76397e4fbcee4d31ab92" translate="yes" xml:space="preserve">
          <source>Temporal.with()</source>
          <target state="translated">Temporal.with()</target>
        </trans-unit>
        <trans-unit id="d7b64ec77bf66b8b294c77030f826e395aa9d393" translate="yes" xml:space="preserve">
          <source>TemporalAccessor</source>
          <target state="translated">TemporalAccessor</target>
        </trans-unit>
        <trans-unit id="d52be251debbdfa2aee296b0a0ee6558b77b08cb" translate="yes" xml:space="preserve">
          <source>TemporalAccessor.get()</source>
          <target state="translated">TemporalAccessor.get()</target>
        </trans-unit>
        <trans-unit id="5991f084a5a85c0f99e3691d47e4ca554b3dc4ae" translate="yes" xml:space="preserve">
          <source>TemporalAccessor.getLong()</source>
          <target state="translated">TemporalAccessor.getLong()</target>
        </trans-unit>
        <trans-unit id="0540e4d90dc793060238bc4fe835bcd32eeb5920" translate="yes" xml:space="preserve">
          <source>TemporalAccessor.isSupported()</source>
          <target state="translated">TemporalAccessor.isSupported()</target>
        </trans-unit>
        <trans-unit id="0507d7783739194e891f51b5711a2353fd008213" translate="yes" xml:space="preserve">
          <source>TemporalAccessor.query()</source>
          <target state="translated">TemporalAccessor.query()</target>
        </trans-unit>
        <trans-unit id="92b0a688dc1a9d4cb0439c61a6a5ff2e10d319bd" translate="yes" xml:space="preserve">
          <source>TemporalAccessor.range()</source>
          <target state="translated">TemporalAccessor.range()</target>
        </trans-unit>
        <trans-unit id="19188a92cfb3df6530f716fec82a3c52654b9596" translate="yes" xml:space="preserve">
          <source>TemporalAdjuster</source>
          <target state="translated">TemporalAdjuster</target>
        </trans-unit>
        <trans-unit id="ef64d3fd80da43b94af9036c57d6c1490f6d42cc" translate="yes" xml:space="preserve">
          <source>TemporalAdjuster.adjustInto()</source>
          <target state="translated">TemporalAdjuster.adjustInto()</target>
        </trans-unit>
        <trans-unit id="d461e12be922c3013b20d7f3d8450c02116c71d5" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters</source>
          <target state="translated">TemporalAdjusters</target>
        </trans-unit>
        <trans-unit id="0980fb23c839936939dcf1c707f344ca598088c3" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.dayOfWeekInMonth()</source>
          <target state="translated">TemporalAdjusters.dayOfWeekInMonth()</target>
        </trans-unit>
        <trans-unit id="749fe9f19c32aa5722a3ee1f0f74e8694c8f147b" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.firstDayOfMonth()</source>
          <target state="translated">TemporalAdjusters.firstDayOfMonth()</target>
        </trans-unit>
        <trans-unit id="b79ca08bc46f1d64dc3cae63269be1ec236e176f" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.firstDayOfNextMonth()</source>
          <target state="translated">TemporalAdjusters.firstDayOfNextMonth()</target>
        </trans-unit>
        <trans-unit id="02d2a3224c0e19c614fa7524983829924756c994" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.firstDayOfNextYear()</source>
          <target state="translated">TemporalAdjusters.firstDayOfNextYear()</target>
        </trans-unit>
        <trans-unit id="cf03c2555cdf9797197f8ae6a7d5cb5366e747c5" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.firstDayOfYear()</source>
          <target state="translated">TemporalAdjusters.firstDayOfYear()</target>
        </trans-unit>
        <trans-unit id="fcaad7e0774f4332eb4f82b9d5b8e1aa7196166f" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.firstInMonth()</source>
          <target state="translated">TemporalAdjusters.firstInMonth()</target>
        </trans-unit>
        <trans-unit id="c138b0e8d0fc2858a951bbe51e2d5ef6f4aeb53c" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.lastDayOfMonth()</source>
          <target state="translated">TemporalAdjusters.lastDayOfMonth()</target>
        </trans-unit>
        <trans-unit id="47b9e20800a22b8ab3e4f673a21a759f36ddb32a" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.lastDayOfYear()</source>
          <target state="translated">TemporalAdjusters.lastDayOfYear()</target>
        </trans-unit>
        <trans-unit id="921cdd23a397d35d9f326d6abaf60ab412ca3c57" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.lastInMonth()</source>
          <target state="translated">TemporalAdjusters.lastInMonth()</target>
        </trans-unit>
        <trans-unit id="e14087dfe7126031698256a4ef14493c23963271" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.next()</source>
          <target state="translated">TemporalAdjusters.next()</target>
        </trans-unit>
        <trans-unit id="c68f4680c39189da9282aff8017659addc6cc5e1" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.nextOrSame()</source>
          <target state="translated">TemporalAdjusters.nextOrSame()</target>
        </trans-unit>
        <trans-unit id="4a89433836f2ac3d6d85a60b4b5c56b15656d99d" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.ofDateAdjuster()</source>
          <target state="translated">TemporalAdjusters.ofDateAdjuster()</target>
        </trans-unit>
        <trans-unit id="298438f1caa92fd38059f52c9bdb2fce0473f010" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.previous()</source>
          <target state="translated">TemporalAdjusters.previous()</target>
        </trans-unit>
        <trans-unit id="3d86725b8b9062056762e37b39830c2d38e1ff48" translate="yes" xml:space="preserve">
          <source>TemporalAdjusters.previousOrSame()</source>
          <target state="translated">TemporalAdjusters.previousOrSame()</target>
        </trans-unit>
        <trans-unit id="7fa2903e1316f1b64a6a4f4c9b58102da774976d" translate="yes" xml:space="preserve">
          <source>TemporalAmount</source>
          <target state="translated">TemporalAmount</target>
        </trans-unit>
        <trans-unit id="5852bf5ccff0a44de515c0c9e8122e9b8faa2e45" translate="yes" xml:space="preserve">
          <source>TemporalAmount.addTo()</source>
          <target state="translated">TemporalAmount.addTo()</target>
        </trans-unit>
        <trans-unit id="b30c8a751fb346251b1354f330687cb2ace4134d" translate="yes" xml:space="preserve">
          <source>TemporalAmount.get()</source>
          <target state="translated">TemporalAmount.get()</target>
        </trans-unit>
        <trans-unit id="8351c093e27fad83572795b092f96d6678b0d146" translate="yes" xml:space="preserve">
          <source>TemporalAmount.getUnits()</source>
          <target state="translated">TemporalAmount.getUnits()</target>
        </trans-unit>
        <trans-unit id="5a5e4cc573a98a61e8f09ccecf10ff4801be1dae" translate="yes" xml:space="preserve">
          <source>TemporalAmount.subtractFrom()</source>
          <target state="translated">TemporalAmount.subtractFrom()</target>
        </trans-unit>
        <trans-unit id="a097d25f7afa633d90e98400711aaa30261fcce3" translate="yes" xml:space="preserve">
          <source>TemporalField</source>
          <target state="translated">TemporalField</target>
        </trans-unit>
        <trans-unit id="7e3d7455a8bdcbd30f9d2f53e79bdbf76d693eb4" translate="yes" xml:space="preserve">
          <source>TemporalField.adjustInto()</source>
          <target state="translated">TemporalField.adjustInto()</target>
        </trans-unit>
        <trans-unit id="9dcb3057deff1d7882c947b760999ba0464fd821" translate="yes" xml:space="preserve">
          <source>TemporalField.getBaseUnit()</source>
          <target state="translated">TemporalField.getBaseUnit()</target>
        </trans-unit>
        <trans-unit id="c57ab3ed56464d797330512843a6de112b2b6bd8" translate="yes" xml:space="preserve">
          <source>TemporalField.getDisplayName()</source>
          <target state="translated">TemporalField.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="2191c8a7f6d4045d1d962920bdf70bee17337e2f" translate="yes" xml:space="preserve">
          <source>TemporalField.getFrom()</source>
          <target state="translated">TemporalField.getFrom()</target>
        </trans-unit>
        <trans-unit id="6b9224fc391a9da015368e93aa383abac634c5e5" translate="yes" xml:space="preserve">
          <source>TemporalField.getRangeUnit()</source>
          <target state="translated">TemporalField.getRangeUnit()</target>
        </trans-unit>
        <trans-unit id="bfbaeddbe02e2c729b96ecd2969aa74aa5aab03f" translate="yes" xml:space="preserve">
          <source>TemporalField.isDateBased()</source>
          <target state="translated">TemporalField.isDateBased()</target>
        </trans-unit>
        <trans-unit id="f563b00e2df4f92fa622aacc67dd08b766fef9ae" translate="yes" xml:space="preserve">
          <source>TemporalField.isSupportedBy()</source>
          <target state="translated">TemporalField.isSupportedBy()</target>
        </trans-unit>
        <trans-unit id="22367005f75d38a6c3aace2cfa1da206f443c4e6" translate="yes" xml:space="preserve">
          <source>TemporalField.isTimeBased()</source>
          <target state="translated">TemporalField.isTimeBased()</target>
        </trans-unit>
        <trans-unit id="39a25c47d9cf555de727ab570b2999ce4fb7bec6" translate="yes" xml:space="preserve">
          <source>TemporalField.range()</source>
          <target state="translated">TemporalField.range()</target>
        </trans-unit>
        <trans-unit id="fa521cab2685b2b576323ca90a478c80ea4959c6" translate="yes" xml:space="preserve">
          <source>TemporalField.rangeRefinedBy()</source>
          <target state="translated">TemporalField.rangeRefinedBy()</target>
        </trans-unit>
        <trans-unit id="2c1340571d1317d3f07bb1e66184a451ad68ceaf" translate="yes" xml:space="preserve">
          <source>TemporalField.resolve()</source>
          <target state="translated">TemporalField.resolve()</target>
        </trans-unit>
        <trans-unit id="13cf2a03822d27148fb784a76049d6a0092b8eea" translate="yes" xml:space="preserve">
          <source>TemporalField.toString()</source>
          <target state="translated">TemporalField.toString()</target>
        </trans-unit>
        <trans-unit id="e172ffb79aa7ff0db4adb4581d000bb5aa49f03f" translate="yes" xml:space="preserve">
          <source>TemporalQueries</source>
          <target state="translated">TemporalQueries</target>
        </trans-unit>
        <trans-unit id="48aabdaa2b041100e4652f0a5f67d8d17ea9da46" translate="yes" xml:space="preserve">
          <source>TemporalQueries.chronology()</source>
          <target state="translated">TemporalQueries.chronology()</target>
        </trans-unit>
        <trans-unit id="6fa1ea8b8522cc270388138147a226f55c7408cc" translate="yes" xml:space="preserve">
          <source>TemporalQueries.localDate()</source>
          <target state="translated">TemporalQueries.localDate()</target>
        </trans-unit>
        <trans-unit id="62583c16e2323f8aea872d432520cb91676e2200" translate="yes" xml:space="preserve">
          <source>TemporalQueries.localTime()</source>
          <target state="translated">TemporalQueries.localTime()</target>
        </trans-unit>
        <trans-unit id="cfd0d9afb4912991aa55b1883ae17f8ced315cf6" translate="yes" xml:space="preserve">
          <source>TemporalQueries.offset()</source>
          <target state="translated">TemporalQueries.offset()</target>
        </trans-unit>
        <trans-unit id="e73bb6119d5eabc638d21a94b0046d4e5f40db53" translate="yes" xml:space="preserve">
          <source>TemporalQueries.precision()</source>
          <target state="translated">TemporalQueries.precision()</target>
        </trans-unit>
        <trans-unit id="6a82d040356652bb96075faa4887a159b180e82c" translate="yes" xml:space="preserve">
          <source>TemporalQueries.zone()</source>
          <target state="translated">TemporalQueries.zone()</target>
        </trans-unit>
        <trans-unit id="37b18187f55d2f820feacd9c12fb605c7ce10987" translate="yes" xml:space="preserve">
          <source>TemporalQueries.zoneId()</source>
          <target state="translated">TemporalQueries.zoneId()</target>
        </trans-unit>
        <trans-unit id="f306b083af37cf9827edee1543676f0e5f93ab5b" translate="yes" xml:space="preserve">
          <source>TemporalQuery</source>
          <target state="translated">TemporalQuery</target>
        </trans-unit>
        <trans-unit id="68173f0d7a70ad8b30b0c9415f50073d1ac9de8f" translate="yes" xml:space="preserve">
          <source>TemporalQuery.queryFrom()</source>
          <target state="translated">TemporalQuery.queryFrom()</target>
        </trans-unit>
        <trans-unit id="dcc743a34f3dcfb3faa51da93971e9d20905fdbc" translate="yes" xml:space="preserve">
          <source>TemporalUnit</source>
          <target state="translated">TemporalUnit</target>
        </trans-unit>
        <trans-unit id="d6ab2bf710d6d72ab0cd08ea299d878ea6eaa65e" translate="yes" xml:space="preserve">
          <source>TemporalUnit.addTo()</source>
          <target state="translated">TemporalUnit.addTo()</target>
        </trans-unit>
        <trans-unit id="c6b8bf94a664a5fa1c9565abe6fcf63d659957f2" translate="yes" xml:space="preserve">
          <source>TemporalUnit.between()</source>
          <target state="translated">TemporalUnit.between()</target>
        </trans-unit>
        <trans-unit id="d51745ad8117a1936508d6a0882cde4ae0b0c043" translate="yes" xml:space="preserve">
          <source>TemporalUnit.getDuration()</source>
          <target state="translated">TemporalUnit.getDuration()</target>
        </trans-unit>
        <trans-unit id="6b90685553413ba7f408060236d8f77e2be14daf" translate="yes" xml:space="preserve">
          <source>TemporalUnit.isDateBased()</source>
          <target state="translated">TemporalUnit.isDateBased()</target>
        </trans-unit>
        <trans-unit id="95ded006f64f4a6871680c7954eaa3f93b9c8036" translate="yes" xml:space="preserve">
          <source>TemporalUnit.isDurationEstimated()</source>
          <target state="translated">TemporalUnit.isDurationEstimated()</target>
        </trans-unit>
        <trans-unit id="a7be4369b55f5231d03bd564e826737bd5413558" translate="yes" xml:space="preserve">
          <source>TemporalUnit.isSupportedBy()</source>
          <target state="translated">TemporalUnit.isSupportedBy()</target>
        </trans-unit>
        <trans-unit id="89345799ec5e7c7f5be1373a91212efa391543cb" translate="yes" xml:space="preserve">
          <source>TemporalUnit.isTimeBased()</source>
          <target state="translated">TemporalUnit.isTimeBased()</target>
        </trans-unit>
        <trans-unit id="80ab41103e1ddf24fb925f3ba5e606a50d566a6e" translate="yes" xml:space="preserve">
          <source>TemporalUnit.toString()</source>
          <target state="translated">TemporalUnit.toString()</target>
        </trans-unit>
        <trans-unit id="8965c2a2c7eadcd8965f4ae9da536a21560a42fa" translate="yes" xml:space="preserve">
          <source>Terminal operations, such as &lt;code&gt;Stream.forEach&lt;/code&gt; or &lt;code&gt;IntStream.sum&lt;/code&gt;, may traverse the stream to produce a result or a side-effect. After the terminal operation is performed, the stream pipeline is considered consumed, and can no longer be used; if you need to traverse the same data source again, you must return to the data source to get a new stream. In almost all cases, terminal operations are &lt;em&gt;eager&lt;/em&gt;, completing their traversal of the data source and processing of the pipeline before returning. Only the terminal operations &lt;code&gt;iterator()&lt;/code&gt; and &lt;code&gt;spliterator()&lt;/code&gt; are not; these are provided as an &quot;escape hatch&quot; to enable arbitrary client-controlled pipeline traversals in the event that the existing operations are not sufficient to the task.</source>
          <target state="translated">&lt;code&gt;Stream.forEach&lt;/code&gt; や &lt;code&gt;IntStream.sum&lt;/code&gt; などのターミナル操作は、ストリームをトラバースして結果または副作用を生成する場合があります。端末操作が実行された後、ストリームパイプラインは使用済みと見なされ、使用できなくなります。同じデータソースをもう一度走査する必要がある場合は、データソースに戻って新しいストリームを取得する必要があります。ほとんどすべての場合、ターミナルオペレーションは&lt;em&gt;熱心&lt;/em&gt;で、データソースの全探索とパイプラインの処理を完了してから戻ります。端末操作 &lt;code&gt;iterator()&lt;/code&gt; および &lt;code&gt;spliterator()&lt;/code&gt; のみそうではありません。これらは「エスケープハッチ」として提供され、既存の操作では不十分な場合に、クライアントが制御する任意のパイプライン走査を可能にします。</target>
        </trans-unit>
        <trans-unit id="9e7fe1cb4bfe32464b5e649ea6e65dfb77f89746" translate="yes" xml:space="preserve">
          <source>TerminalFactory</source>
          <target state="translated">TerminalFactory</target>
        </trans-unit>
        <trans-unit id="757c1f6aaceb676aa909092f5b2f049da2b66ec9" translate="yes" xml:space="preserve">
          <source>TerminalFactory utilizes an extensible service provider framework. Service providers that wish to add a new implementation should see the &lt;a href=&quot;terminalfactoryspi&quot;&gt;TerminalFactorySpi&lt;/a&gt; class for more information.</source>
          <target state="translated">TerminalFactory utilizes an extensible service provider framework. Service providers that wish to add a new implementation should see the &lt;a href=&quot;terminalfactoryspi&quot;&gt;TerminalFactorySpi&lt;/a&gt; class for more information.</target>
        </trans-unit>
        <trans-unit id="7de5a272d94f0dc142a784f93dd178e54667f91f" translate="yes" xml:space="preserve">
          <source>TerminalFactorySpi</source>
          <target state="translated">TerminalFactorySpi</target>
        </trans-unit>
        <trans-unit id="75bb594889fc299b22c6b123d54db2b965001a7c" translate="yes" xml:space="preserve">
          <source>Terminate.</source>
          <target state="translated">Terminate.</target>
        </trans-unit>
        <trans-unit id="8cd7f789c9997db311e7e6a41a6ecd661071edf5" translate="yes" xml:space="preserve">
          <source>Terminates a sequence of calls to &lt;code&gt;replacePixels&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;replacePixels&lt;/code&gt; への一連の呼び出しを終了します。</target>
        </trans-unit>
        <trans-unit id="24ddc2bc7010645c34993e44dc38224630aec13f" translate="yes" xml:space="preserve">
          <source>Terminates an open connection.</source>
          <target state="translated">開いている接続を終了します。</target>
        </trans-unit>
        <trans-unit id="d32793731f47ac0452108fde97be4031ec72442e" translate="yes" xml:space="preserve">
          <source>Terminates an open connection. Calling &lt;code&gt;abort&lt;/code&gt; results in:</source>
          <target state="translated">Terminates an open connection. Calling &lt;code&gt;abort&lt;/code&gt; results in:</target>
        </trans-unit>
        <trans-unit id="89ca4a51db5ae6016eb0008d1dd365028520b18b" translate="yes" xml:space="preserve">
          <source>Terminates the current line by writing the line separator string.</source>
          <target state="translated">行区切り文字列を書いて現在の行を終了させます。</target>
        </trans-unit>
        <trans-unit id="c4d4f9a417b40d08c27fd6de31c06a21f2230fdf" translate="yes" xml:space="preserve">
          <source>Terminates the current line by writing the line separator string. The line separator string is defined by the system property &lt;code&gt;line.separator&lt;/code&gt;, and is not necessarily a single newline character (&lt;code&gt;'\n'&lt;/code&gt;).</source>
          <target state="translated">行区切り文字列を書き込むことにより、現在の行を終了します。行区切り文字列はシステムプロパティ &lt;code&gt;line.separator&lt;/code&gt; によって定義され、単一の改行文字（ &lt;code&gt;'\n'&lt;/code&gt; ）である必要はありません。</target>
        </trans-unit>
        <trans-unit id="f0cae13bb326cc7a4e49d35b2a11a9b120116098" translate="yes" xml:space="preserve">
          <source>Terminates the currently running Java Virtual Machine.</source>
          <target state="translated">現在実行中の Java 仮想マシンを終了します。</target>
        </trans-unit>
        <trans-unit id="84446a4de72f5ad3d5d3feeaf90637b3c3299095" translate="yes" xml:space="preserve">
          <source>Terminates the currently running Java Virtual Machine. The argument serves as a status code; by convention, a nonzero status code indicates abnormal termination.</source>
          <target state="translated">現在実行中の Java 仮想マシンを終了します。引数はステータスコードとして機能します。慣例では、0以外のステータスコードは異常終了を示します。</target>
        </trans-unit>
        <trans-unit id="75b77246d241a7a86922ee5ecb6e3d7d63cb749d" translate="yes" xml:space="preserve">
          <source>Terminates the currently running Java virtual machine by initiating its shutdown sequence.</source>
          <target state="translated">シャットダウン・シーケンスを開始することで、現在実行中の Java 仮想マシンを終了します。</target>
        </trans-unit>
        <trans-unit id="7f3fe88d0f286bdb39054dc6e0a9c16300e35b62" translate="yes" xml:space="preserve">
          <source>Terminates the currently running Java virtual machine by initiating its shutdown sequence. This method never returns normally. The argument serves as a status code; by convention, a nonzero status code indicates abnormal termination.</source>
          <target state="translated">シャットダウン・シーケンスを開始することで、現在実行中の Java 仮想マシンを終了させます。このメソッドは正常終了を返すことはありません。引数はステータスコードとして機能します。慣習上、ゼロでないステータスコードは異常終了を示します。</target>
        </trans-unit>
        <trans-unit id="b3de8860cfe0fe57dbe59385b9d40551c34e8643" translate="yes" xml:space="preserve">
          <source>Terminates this timer, discarding any currently scheduled tasks.</source>
          <target state="translated">このタイマーを終了し、現在スケジュールされているタスクを破棄します。</target>
        </trans-unit>
        <trans-unit id="f13de16fc98a68204d23e740b65a54da2b871e6d" translate="yes" xml:space="preserve">
          <source>Terminates this timer, discarding any currently scheduled tasks. Does not interfere with a currently executing task (if it exists). Once a timer has been terminated, its execution thread terminates gracefully, and no more tasks may be scheduled on it.</source>
          <target state="translated">このタイマーを終了し、現在スケジュールされているタスクを破棄します。現在実行中のタスク(存在する場合)に干渉しません。タイマーが終了すると、その実行スレッドは優雅に終了し、それ以上のタスクをスケジューリングすることはできません。</target>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="8cd1c0791d3eaa3441fadb05902e9a404226474e" translate="yes" xml:space="preserve">
          <source>Test execute access.</source>
          <target state="translated">アクセス権をテストします。</target>
        </trans-unit>
        <trans-unit id="f2498fb3db6c0446b98c9e136714c3f101288064" translate="yes" xml:space="preserve">
          <source>Test if a name is part of this &lt;code&gt;NameList&lt;/code&gt;.</source>
          <target state="translated">Test if a name is part of this &lt;code&gt;NameList&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76fae1878eefcb923bbdc1ef0a8f5b1deb4a1391" translate="yes" xml:space="preserve">
          <source>Test if a string is part of this &lt;code&gt;DOMStringList&lt;/code&gt;.</source>
          <target state="translated">Test if a string is part of this &lt;code&gt;DOMStringList&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="586cbde8b4fe4205c0f718493390b9a24b6fcd63" translate="yes" xml:space="preserve">
          <source>Test if the DOM implementation implements a specific feature and version, as specified in &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMFeatures&quot;&gt;DOM Features&lt;/a&gt;.</source>
          <target state="translated">Test if the DOM implementation implements a specific feature and version, as specified in &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMFeatures&quot;&gt;DOM Features&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e31558afc01eeb4da57172d5bb62f523b21e0e0c" translate="yes" xml:space="preserve">
          <source>Test if the caller can access this reflected object.</source>
          <target state="translated">呼び出し元がこの反映されたオブジェクトにアクセスできるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="3e0e12b595e05b1be7079e3cb002971dd3594773" translate="yes" xml:space="preserve">
          <source>Test if the caller can access this reflected object. If this reflected object corresponds to an instance method or field then this method tests if the caller can access the given &lt;code&gt;obj&lt;/code&gt; with the reflected object. For instance methods or fields then the &lt;code&gt;obj&lt;/code&gt; argument must be an instance of the &lt;a href=&quot;member#getDeclaringClass()&quot;&gt;&lt;code&gt;declaring class&lt;/code&gt;&lt;/a&gt;. For static members and constructors then &lt;code&gt;obj&lt;/code&gt; must be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Test if the caller can access this reflected object. If this reflected object corresponds to an instance method or field then this method tests if the caller can access the given &lt;code&gt;obj&lt;/code&gt; with the reflected object. For instance methods or fields then the &lt;code&gt;obj&lt;/code&gt; argument must be an instance of the &lt;a href=&quot;member#getDeclaringClass()&quot;&gt; &lt;code&gt;declaring class&lt;/code&gt; &lt;/a&gt;. For static members and constructors then &lt;code&gt;obj&lt;/code&gt; must be &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dae3a4ae8be2982aca9f5694cc8834826ef2ac2e" translate="yes" xml:space="preserve">
          <source>Test if the current event is of the given type and if the namespace and name match the current namespace and name of the current event.</source>
          <target state="translated">現在のイベントが与えられたタイプのものであるかどうか、また、名前空間と名前が現在のイベントの名前空間と名前に一致するかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="b4e97a0edeffd8149a3c5c7d854872bf0cb81b99" translate="yes" xml:space="preserve">
          <source>Test if the current event is of the given type and if the namespace and name match the current namespace and name of the current event. If the namespaceURI is null it is not checked for equality, if the localName is null it is not checked for equality.</source>
          <target state="translated">現在のイベントが指定された型であるかどうか、名前空間と名前が現在のイベントの名前空間と名前に一致するかどうかをテストします。namespaceURIがnullの場合は等しいかどうかチェックされず、localNameがnullの場合は等しいかどうかチェックされません。</target>
        </trans-unit>
        <trans-unit id="b2eb80a014419e1be9f3781825cc63768df1a471" translate="yes" xml:space="preserve">
          <source>Test if the pair namespaceURI/name is part of this &lt;code&gt;NameList&lt;/code&gt;.</source>
          <target state="translated">Test if the pair namespaceURI/name is part of this &lt;code&gt;NameList&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a25d2c4f17eeb0452b47d543d8cca3283ff8f86e" translate="yes" xml:space="preserve">
          <source>Test if we are in design-mode.</source>
          <target state="translated">デザインモードになっているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="5e3b7c362e373dbf01e1f334e51d8617b9143743" translate="yes" xml:space="preserve">
          <source>Test read access.</source>
          <target state="translated">読み取りアクセスをテストします。</target>
        </trans-unit>
        <trans-unit id="ea5662581751d1f7fe089e1565f7112b85932593" translate="yes" xml:space="preserve">
          <source>Test the equality of two HTTP cookies.</source>
          <target state="translated">2つのHTTPクッキーの平等性をテストします。</target>
        </trans-unit>
        <trans-unit id="a48eb3b499ac0600e1f02285100763bd43a60f7d" translate="yes" xml:space="preserve">
          <source>Test this &lt;code&gt;QName&lt;/code&gt; for equality with another &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">Test this &lt;code&gt;QName&lt;/code&gt; for equality with another &lt;code&gt;Object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="136e1078ba7851271b2fa4707f198ec5c04823f7" translate="yes" xml:space="preserve">
          <source>Test whether a specified node is visible in the logical view of a &lt;code&gt;TreeWalker&lt;/code&gt; or &lt;code&gt;NodeIterator&lt;/code&gt;.</source>
          <target state="translated">Test whether a specified node is visible in the logical view of a &lt;code&gt;TreeWalker&lt;/code&gt; or &lt;code&gt;NodeIterator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa98656d8e9c65b55b4b4662ddf9419103789b55" translate="yes" xml:space="preserve">
          <source>Test whether a specified node is visible in the logical view of a &lt;code&gt;TreeWalker&lt;/code&gt; or &lt;code&gt;NodeIterator&lt;/code&gt;. This function will be called by the implementation of &lt;code&gt;TreeWalker&lt;/code&gt; and &lt;code&gt;NodeIterator&lt;/code&gt;; it is not normally called directly from user code. (Though you could do so if you wanted to use the same filter to guide your own application logic.)</source>
          <target state="translated">Test whether a specified node is visible in the logical view of a &lt;code&gt;TreeWalker&lt;/code&gt; or &lt;code&gt;NodeIterator&lt;/code&gt; . This function will be called by the implementation of &lt;code&gt;TreeWalker&lt;/code&gt; and &lt;code&gt;NodeIterator&lt;/code&gt; ; it is not normally called directly from user code. (Though you could do so if you wanted to use the same filter to guide your own application logic.)</target>
        </trans-unit>
        <trans-unit id="6388a5fe1bd21a60590ca1aac16b379ca2768918" translate="yes" xml:space="preserve">
          <source>Test whether an interface is an MXBean interface.</source>
          <target state="translated">インターフェースがMXBeanインターフェースであるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="f55fb9e19e0aeaa0839eca70fbed8bf54f689ec2" translate="yes" xml:space="preserve">
          <source>Test whether an interface is an MXBean interface. An interface is an MXBean interface if it is public, annotated &lt;a href=&quot;mxbean&quot;&gt;&lt;code&gt;@MXBean&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;@MXBean(true)&lt;/code&gt; or if it does not have an &lt;code&gt;@MXBean&lt;/code&gt; annotation and its name ends with &quot;&lt;code&gt;MXBean&lt;/code&gt;&quot;.</source>
          <target state="translated">インターフェースがMXBeanインターフェースであるかどうかをテストします。パブリックでアノテーションが付けられた&lt;a href=&quot;mxbean&quot;&gt; &lt;code&gt;@MXBean&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;@MXBean(true)&lt;/code&gt; の場合、または &lt;code&gt;@MXBean&lt;/code&gt; アノテーションがなく、名前が「 &lt;code&gt;MXBean&lt;/code&gt; 」で終わる場合、インターフェースはMXBeanインターフェースです。</target>
        </trans-unit>
        <trans-unit id="7b970541496ae5e8463a485b2ccbe1dee6a6b844" translate="yes" xml:space="preserve">
          <source>Test whether that address is reachable.</source>
          <target state="translated">そのアドレスが到達可能かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="7900224b61e1d3f14c293ec3e7d030ac658762dd" translate="yes" xml:space="preserve">
          <source>Test whether that address is reachable. Best effort is made by the implementation to try to reach the host, but firewalls and server configuration may block requests resulting in a unreachable status while some specific ports may be accessible. A typical implementation will use ICMP ECHO REQUESTs if the privilege can be obtained, otherwise it will try to establish a TCP connection on port 7 (Echo) of the destination host.</source>
          <target state="translated">そのアドレスが到達可能かどうかをテストします。実装ではホストに到達しようと努力していますが、ファイアウォールやサーバの設定によって、特定のポートにはアクセス可能な場合もありますが、到達不可能な状態になるリクエストをブロックする場合があります。一般的な実装では、特権を取得できる場合はICMP ECHO REQUESTを使用し、そうでない場合は宛先ホストのポート7(Echo)でTCP接続を確立しようとします。</target>
        </trans-unit>
        <trans-unit id="a3073ce0f99220df1e294901fe15b19fbc50b265" translate="yes" xml:space="preserve">
          <source>Test whether this ObjectName, which may be a pattern, matches another ObjectName.</source>
          <target state="translated">パターンである可能性のあるこの ObjectName が他の ObjectName と一致するかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="6d6bc4e44cf7e2e4e9df51ac9d51090725e19684" translate="yes" xml:space="preserve">
          <source>Test whether this ObjectName, which may be a pattern, matches another ObjectName. If &lt;code&gt;name&lt;/code&gt; is a pattern, the result is false. If this ObjectName is a pattern, the result is true if and only if &lt;code&gt;name&lt;/code&gt; matches the pattern. If neither this ObjectName nor &lt;code&gt;name&lt;/code&gt; is a pattern, the result is true if and only if the two ObjectNames are equal as described for the &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(Object)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Test whether this ObjectName, which may be a pattern, matches another ObjectName. If &lt;code&gt;name&lt;/code&gt; is a pattern, the result is false. If this ObjectName is a pattern, the result is true if and only if &lt;code&gt;name&lt;/code&gt; matches the pattern. If neither this ObjectName nor &lt;code&gt;name&lt;/code&gt; is a pattern, the result is true if and only if the two ObjectNames are equal as described for the &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(Object)&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="1e6eb2d6cbeb14a0819809782eb97025d2a7248d" translate="yes" xml:space="preserve">
          <source>Test whether this ObjectName, which may be a pattern, matches another ObjectName. If &lt;code&gt;name&lt;/code&gt; is a pattern, the result is false. If this ObjectName is a pattern, the result is true if and only if &lt;code&gt;name&lt;/code&gt; matches the pattern. If neither this ObjectName nor &lt;code&gt;name&lt;/code&gt; is a pattern, the result is true if and only if the two ObjectNames are equal as described for the &lt;a href=&quot;objectname#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(Object)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">パターンの可能性があるこのObjectNameが別のObjectNameと一致するかどうかをテストします。場合は &lt;code&gt;name&lt;/code&gt; パターンで、結果はfalseです。このObjectNameがパターンの場合、 &lt;code&gt;name&lt;/code&gt; がパターンに一致する場合に限り結果はtrueになります。このObjectNameも &lt;code&gt;name&lt;/code&gt; もパターンではない場合、&lt;a href=&quot;objectname#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(Object)&lt;/code&gt; &lt;/a&gt;メソッドで説明したように2つのObjectNameが等しい場合に限り、結果はtrueになります。</target>
        </trans-unit>
        <trans-unit id="6fdaa754552b0589f21d204f92a2758a3a5fff52" translate="yes" xml:space="preserve">
          <source>Test whether this Service can use the specified parameter.</source>
          <target state="translated">このサービスが指定されたパラメータを使用できるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="b2ad41cafda723983d8c1c7daef7f306ed636e4d" translate="yes" xml:space="preserve">
          <source>Test whether this Service can use the specified parameter. Returns false if this service cannot use the parameter. Returns true if this service can use the parameter, if a fast test is infeasible, or if the status is unknown.</source>
          <target state="translated">このサービスが指定されたパラメータを使用できるかどうかをテストします。このサービスがパラメータを使用できない場合は false を返します。このサービスがパラメータを使用できる場合、高速テストが実行不可能な場合、または状態が不明な場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="c608f0f35239c70c24034928f2073921f862cd67" translate="yes" xml:space="preserve">
          <source>Test write access.</source>
          <target state="translated">書き込みアクセスをテストします。</target>
        </trans-unit>
        <trans-unit id="55f27f5ab8ad6a67e06b0522f1aec012c8449fd4" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified identity and this identity.</source>
          <target state="translated">指定された ID とこの ID との間に等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="620317808c7961a08c0a980568f06480ddc95f3b" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified identity and this identity. This method should be overriden by subclasses to test for equality. The default behavior is to return true if the names and public keys are equal.</source>
          <target state="translated">指定された ID とこの ID との間の等質性をテストします。このメソッドは、等しさをテストするためにサブクラスでオーバーライドする必要があります。既定の動作は、名前と公開鍵が等しい場合に true を返すことです。</target>
        </trans-unit>
        <trans-unit id="3179683467ffb2cef2a50c66a684c522f9db2831" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this code signer.</source>
          <target state="translated">指定されたオブジェクトとこのコード・シグナとの間の等しさをテストします。</target>
        </trans-unit>
        <trans-unit id="b09e2f01e61502d952741bcb63b005afb94ffdc4" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this code signer. Two code signers are considered equal if their signer certificate paths are equal and if their timestamps are equal, if present in both.</source>
          <target state="translated">指定されたオブジェクトとこのコード署名者との間の平等性をテストします。2 つのコード署名者は、署名者の証明書パスが等しい場合と、両方にタイムスタンプが存在する場合には等しい場合には等しいとみなされます。</target>
        </trans-unit>
        <trans-unit id="cdd70f9502e16fbaeb5cbd28796d2ee075294d86" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this identity.</source>
          <target state="translated">指定されたオブジェクトとこの ID との間の平等性をテストします。</target>
        </trans-unit>
        <trans-unit id="9d431d8856336abe3cfbc750cbf1b84050499087" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this identity. This first tests to see if the entities actually refer to the same object, in which case it returns true. Next, it checks to see if the entities have the same name and the same scope. If they do, the method returns true. Otherwise, it calls &lt;a href=&quot;#identityEquals(java.security.Identity)&quot;&gt;&lt;code&gt;identityEquals&lt;/code&gt;&lt;/a&gt;, which subclasses should override.</source>
          <target state="translated">Tests for equality between the specified object and this identity. This first tests to see if the entities actually refer to the same object, in which case it returns true. Next, it checks to see if the entities have the same name and the same scope. If they do, the method returns true. Otherwise, it calls &lt;a href=&quot;#identityEquals(java.security.Identity)&quot;&gt; &lt;code&gt;identityEquals&lt;/code&gt; &lt;/a&gt;, which subclasses should override.</target>
        </trans-unit>
        <trans-unit id="3ee97f37f3034452f8959a4d3e284398f9c8b792" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this identity. This first tests to see if the entities actually refer to the same object, in which case it returns true. Next, it checks to see if the entities have the same name and the same scope. If they do, the method returns true. Otherwise, it calls &lt;a href=&quot;identity#identityEquals-java.security.Identity-&quot;&gt;&lt;code&gt;identityEquals&lt;/code&gt;&lt;/a&gt;, which subclasses should override.</source>
          <target state="translated">指定されたオブジェクトとこのアイデンティティが等しいかどうかをテストします。これは最初に、エンティティが実際に同じオブジェクトを参照しているかどうかを確認するためにテストします。この場合、trueが返されます。次に、エンティティの名前とスコープが同じかどうかを確認します。一致する場合、メソッドはtrueを返します。それ以外の場合は、サブクラスがオーバーライドする必要がある&lt;a href=&quot;identity#identityEquals-java.security.Identity-&quot;&gt; &lt;code&gt;identityEquals&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="4b82eb070170731e043215b85817cc47b09128fe" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this object.</source>
          <target state="translated">指定されたオブジェクトとこのオブジェクトとの間の平等性をテストします。</target>
        </trans-unit>
        <trans-unit id="e846efd30d641142757ba73272c7634af77f3fb0" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this object. Two CodeSource objects are considered equal if their locations are of identical value and if their signer certificate chains are of identical value. It is not required that the certificate chains be in the same order.</source>
          <target state="translated">指定されたオブジェクトとこのオブジェクトの間の等しさをテストします。2 つの CodeSource オブジェクトの位置が同じ値であり、署名者の証明書チェーンが同じ値であれば、2 つの CodeSource オブジェクトは等しいとみなされます。証明書チェーンが同じ順序である必要はありません。</target>
        </trans-unit>
        <trans-unit id="2e216d9c2351740e178f000f8eb26645b630cfb2" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this object. Two RC2ParameterSpec objects are considered equal if their effective key sizes and IVs are equal. (Two IV references are considered equal if both are &lt;code&gt;null&lt;/code&gt;.)</source>
          <target state="translated">指定されたオブジェクトとこのオブジェクトが等しいかどうかをテストします。2つのRC2ParameterSpecオブジェクトは、それらの有効なキーサイズとIVが等しい場合、等しいと見なされます。（両方が &lt;code&gt;null&lt;/code&gt; の場合、2つのIV参照は等しいと見なされます。）</target>
        </trans-unit>
        <trans-unit id="4ebd7976496a6095c4382c97f651dbc377a2e97c" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this object. Two RC5ParameterSpec objects are considered equal if their version numbers, number of rounds, word sizes, and IVs are equal. (Two IV references are considered equal if both are &lt;code&gt;null&lt;/code&gt;.)</source>
          <target state="translated">指定されたオブジェクトとこのオブジェクトが等しいかどうかをテストします。バージョン番号、ラウンド数、ワードサイズ、およびIVが等しい場合、2つのRC5ParameterSpecオブジェクトは等しいと見なされます。（両方が &lt;code&gt;null&lt;/code&gt; の場合、2つのIV参照は等しいと見なされます。）</target>
        </trans-unit>
        <trans-unit id="d94118b777999bbb8180e6778a9f193cd1f7177c" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this object. Two SecretKeySpec objects are considered equal if they are both SecretKey instances which have the same case-insensitive algorithm name and key encoding.</source>
          <target state="translated">指定されたオブジェクトとこのオブジェクトとの間で等しいかどうかをテストします。2つのSecretKeySpecオブジェクトは、両方とも同じ大文字小文字を区別しないアルゴリズム名とキーエンコーディングを持つSecretKeyインスタンスである場合、等しいとみなされます。</target>
        </trans-unit>
        <trans-unit id="3e842125983005a85716151ea74a2a458c8b6a63" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this timestamp.</source>
          <target state="translated">指定されたオブジェクトとこのタイムスタンプとの間の等しさをテストします。</target>
        </trans-unit>
        <trans-unit id="e202fdc1ede6228728e18b363e32123368f17015" translate="yes" xml:space="preserve">
          <source>Tests for equality between the specified object and this timestamp. Two timestamps are considered equal if the date and time of their timestamp's and their signer's certificate paths are equal.</source>
          <target state="translated">指定されたオブジェクトとこのタイムスタンプが等しいかどうかをテストします。2つのタイムスタンプの日時と署名者の証明書パスが等しい場合、2つのタイムスタンプは等しいとみなされます。</target>
        </trans-unit>
        <trans-unit id="40a652172d0d3752572cb26957f07fb65956c2a5" translate="yes" xml:space="preserve">
          <source>Tests if &lt;a href=&quot;socketoptions#SO_KEEPALIVE&quot;&gt;&lt;code&gt;SO_KEEPALIVE&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_KEEPALIVE&quot;&gt; &lt;code&gt;SO_KEEPALIVE&lt;/code&gt; &lt;/a&gt;が有効かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="5640cc756350ea712e4777a13931e3e40fd33cb0" translate="yes" xml:space="preserve">
          <source>Tests if &lt;a href=&quot;socketoptions#SO_OOBINLINE&quot;&gt;&lt;code&gt;SO_OOBINLINE&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_OOBINLINE&quot;&gt; &lt;code&gt;SO_OOBINLINE&lt;/code&gt; &lt;/a&gt;が有効かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="644dfe832fab41b7e14dcbc3ffa174eb998caac6" translate="yes" xml:space="preserve">
          <source>Tests if &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; &lt;/a&gt;が有効かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="57668a62afb79c7e79d1c39b93d1c381607245f0" translate="yes" xml:space="preserve">
          <source>Tests if &lt;a href=&quot;socketoptions#TCP_NODELAY&quot;&gt;&lt;code&gt;TCP_NODELAY&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#TCP_NODELAY&quot;&gt; &lt;code&gt;TCP_NODELAY&lt;/code&gt; &lt;/a&gt;が有効かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="9ff325ac533db8a9187010d4dae606b4cbad567b" translate="yes" xml:space="preserve">
          <source>Tests if SO_BROADCAST is enabled.</source>
          <target state="translated">SO_BROADCASTが有効かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="5d3ebaff3d766fee921b8490a0d046a410a53e83" translate="yes" xml:space="preserve">
          <source>Tests if SO_REUSEADDR is enabled.</source>
          <target state="translated">SO_REUSEADDRが有効かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="089b2516019b85bc6303c16886f397971a885824" translate="yes" xml:space="preserve">
          <source>Tests if a given &lt;code&gt;Point2D&lt;/code&gt; is inside the boundary of this &lt;code&gt;Line2D&lt;/code&gt;.</source>
          <target state="translated">Tests if a given &lt;code&gt;Point2D&lt;/code&gt; is inside the boundary of this &lt;code&gt;Line2D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f21398c6e3debd68b5432c4bf373c3257818a38b" translate="yes" xml:space="preserve">
          <source>Tests if a given &lt;code&gt;Point2D&lt;/code&gt; is inside the boundary of this &lt;code&gt;Line2D&lt;/code&gt;. This method is required to implement the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; interface, but in the case of &lt;code&gt;Line2D&lt;/code&gt; objects it always returns &lt;code&gt;false&lt;/code&gt; since a line contains no area.</source>
          <target state="translated">Tests if a given &lt;code&gt;Point2D&lt;/code&gt; is inside the boundary of this &lt;code&gt;Line2D&lt;/code&gt; . This method is required to implement the &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; interface, but in the case of &lt;code&gt;Line2D&lt;/code&gt; objects it always returns &lt;code&gt;false&lt;/code&gt; since a line contains no area.</target>
        </trans-unit>
        <trans-unit id="f2beb578c764e0b7cceb8e9495ec41de762465ba" translate="yes" xml:space="preserve">
          <source>Tests if a later token had already been processed.</source>
          <target state="translated">後のトークンがすでに処理されていたかどうかを調べます。</target>
        </trans-unit>
        <trans-unit id="24ca3a685ec18df5709a6858ac60e286aaee1715" translate="yes" xml:space="preserve">
          <source>Tests if a method from a class with the specified name is on the execution stack.</source>
          <target state="translated">指定された名前のクラスのメソッドが実行スタック上にあるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="872a93712bc2424d0724304eba216c2642dd6949" translate="yes" xml:space="preserve">
          <source>Tests if a specified &lt;a href=&quot;geom/point2d&quot;&gt;&lt;code&gt;Point2D&lt;/code&gt;&lt;/a&gt; is inside the boundary of the &lt;code&gt;Shape&lt;/code&gt;, as described by the &lt;a href=&quot;shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt;.</source>
          <target state="translated">Tests if a specified &lt;a href=&quot;geom/point2d&quot;&gt; &lt;code&gt;Point2D&lt;/code&gt; &lt;/a&gt; is inside the boundary of the &lt;code&gt;Shape&lt;/code&gt; , as described by the &lt;a href=&quot;shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7f69c2c8432a4d96ebe46712e507c69f3552245a" translate="yes" xml:space="preserve">
          <source>Tests if a specified &lt;a href=&quot;point2d&quot;&gt;&lt;code&gt;Point2D&lt;/code&gt;&lt;/a&gt; is inside the boundary of the &lt;code&gt;Shape&lt;/code&gt;, as described by the &lt;a href=&quot;../shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt;.</source>
          <target state="translated">Tests if a specified &lt;a href=&quot;point2d&quot;&gt; &lt;code&gt;Point2D&lt;/code&gt; &lt;/a&gt; is inside the boundary of the &lt;code&gt;Shape&lt;/code&gt; , as described by the &lt;a href=&quot;../shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a0d20ae8cedd69566e588547f8a96cd4e54882a6" translate="yes" xml:space="preserve">
          <source>Tests if a specified coordinate is inside the boundary of this &lt;code&gt;Line2D&lt;/code&gt;.</source>
          <target state="translated">Tests if a specified coordinate is inside the boundary of this &lt;code&gt;Line2D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4a0606cee077c66cfcf1f28539403394c7f8b6f" translate="yes" xml:space="preserve">
          <source>Tests if a specified coordinate is inside the boundary of this &lt;code&gt;Line2D&lt;/code&gt;. This method is required to implement the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; interface, but in the case of &lt;code&gt;Line2D&lt;/code&gt; objects it always returns &lt;code&gt;false&lt;/code&gt; since a line contains no area.</source>
          <target state="translated">Tests if a specified coordinate is inside the boundary of this &lt;code&gt;Line2D&lt;/code&gt; . This method is required to implement the &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; interface, but in the case of &lt;code&gt;Line2D&lt;/code&gt; objects it always returns &lt;code&gt;false&lt;/code&gt; since a line contains no area.</target>
        </trans-unit>
        <trans-unit id="9b56aaef08fcf92fc4640d29ba20b707d2367106" translate="yes" xml:space="preserve">
          <source>Tests if a specified file should be included in a file list.</source>
          <target state="translated">指定したファイルをファイルリストに含めるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="92fd6bc8ba5d3531d2af0dfc56dc4cba72ef4b0c" translate="yes" xml:space="preserve">
          <source>Tests if a specified object is equal to this &lt;code&gt;BasicStroke&lt;/code&gt; by first testing if it is a &lt;code&gt;BasicStroke&lt;/code&gt; and then comparing its width, join, cap, miter limit, dash, and dash phase attributes with those of this &lt;code&gt;BasicStroke&lt;/code&gt;.</source>
          <target state="translated">Tests if a specified object is equal to this &lt;code&gt;BasicStroke&lt;/code&gt; by first testing if it is a &lt;code&gt;BasicStroke&lt;/code&gt; and then comparing its width, join, cap, miter limit, dash, and dash phase attributes with those of this &lt;code&gt;BasicStroke&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8543adf651f55d2d4910f2ebaf222e1e54bee183" translate="yes" xml:space="preserve">
          <source>Tests if an expected token was not received, i.e., one or more predecessor tokens have not yet been successfully processed.</source>
          <target state="translated">期待されたトークンが受信されなかった場合、すなわち、1 つ以上の前任者トークンがまだ正常に処理されていない場合にテストします。</target>
        </trans-unit>
        <trans-unit id="60a2b6f538f56369d17c0b1ca0ccb950b94b7419" translate="yes" xml:space="preserve">
          <source>Tests if some key maps into the specified value in this hashtable.</source>
          <target state="translated">あるキーがこのハッシュテーブルの指定された値にマップされているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="e8de0f611c57365cc2d0355d776e6c0ff0a53d35" translate="yes" xml:space="preserve">
          <source>Tests if some key maps into the specified value in this hashtable. This operation is more expensive than the &lt;a href=&quot;#containsKey(java.lang.Object)&quot;&gt;&lt;code&gt;containsKey&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Tests if some key maps into the specified value in this hashtable. This operation is more expensive than the &lt;a href=&quot;#containsKey(java.lang.Object)&quot;&gt; &lt;code&gt;containsKey&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="f7ea51141bb722c450ceeb00c520246e6ea92ee7" translate="yes" xml:space="preserve">
          <source>Tests if some key maps into the specified value in this hashtable. This operation is more expensive than the &lt;a href=&quot;hashtable#containsKey-java.lang.Object-&quot;&gt;&lt;code&gt;containsKey&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">いくつかのキーがこのハッシュテーブルの指定された値にマップするかどうかをテストします。この操作は、&lt;a href=&quot;hashtable#containsKey-java.lang.Object-&quot;&gt; &lt;code&gt;containsKey&lt;/code&gt; &lt;/a&gt;メソッドよりもコストがかかります。</target>
        </trans-unit>
        <trans-unit id="5fb815736873e34454c94811223e0a4810394010" translate="yes" xml:space="preserve">
          <source>Tests if some key maps into the specified value in this table.</source>
          <target state="translated">あるキーがこのテーブルの指定された値にマップされているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="2fa5a4893859ae5c92b66cacbaea53d9329066a0" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine implementation supports CPU time measurement for any thread.</source>
          <target state="translated">Java仮想マシンの実装が、任意のスレッドのCPU時間測定をサポートしているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="7a2097b7b0179cc3bda4eb069c95a40142b4742c" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine implementation supports CPU time measurement for any thread. A Java virtual machine implementation that supports CPU time measurement for any thread will also support CPU time measurement for the current thread.</source>
          <target state="translated">Java 仮想マシンの実装が任意のスレッドの CPU 時間測定をサポートしているかどうかをテストします。任意のスレッドの CPU 時間計測をサポートする Java 仮想マシンの実装は、現在のスレッドの CPU 時間計測もサポートします。</target>
        </trans-unit>
        <trans-unit id="de00727d4cbe2d590a8a6190358cb567f49867e6" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine supports CPU time measurement for the current thread.</source>
          <target state="translated">Java 仮想マシンが現在のスレッドの CPU 時間測定をサポートしているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="1177f97fd63cd5a2d418380702b3e9638df44d42" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine supports CPU time measurement for the current thread. This method returns &lt;code&gt;true&lt;/code&gt; if &lt;a href=&quot;#isThreadCpuTimeSupported()&quot;&gt;&lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Tests if the Java virtual machine supports CPU time measurement for the current thread. This method returns &lt;code&gt;true&lt;/code&gt; if &lt;a href=&quot;#isThreadCpuTimeSupported()&quot;&gt; &lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ba9f760a24fe1c2b0857b032303f5c1ed500793" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine supports CPU time measurement for the current thread. This method returns &lt;code&gt;true&lt;/code&gt; if &lt;a href=&quot;threadmxbean#isThreadCpuTimeSupported--&quot;&gt;&lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Java仮想マシンが現在のスレッドのCPU時間測定をサポートするかどうかをテストします。&lt;a href=&quot;threadmxbean#isThreadCpuTimeSupported--&quot;&gt; &lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;true&lt;/code&gt; を返す &lt;code&gt;true&lt;/code&gt; 、このメソッドはtrueを返します。</target>
        </trans-unit>
        <trans-unit id="22d12ae69e2128c6fe106d8d15c7cb6a36ec0652" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine supports monitoring of &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt; ownable synchronizer&lt;/a&gt; usage.</source>
          <target state="translated">Java仮想マシンが&lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;所有可能なシンクロナイザーの&lt;/a&gt;使用状況の監視をサポートするかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="c3360bbbfd90e6c09212757da6b1dcbdc52ed507" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine supports monitoring of object monitor usage.</source>
          <target state="translated">Java 仮想マシンがオブジェクト・モニターの使用状況の監視をサポートしているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="43a0e72e27fa6b3526b5bb164e8becbdea872880" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine supports the boot class path mechanism used by the bootstrap class loader to search for class files.</source>
          <target state="translated">Java 仮想マシンが、クラスファイルを検索するためにブートストラップ・クラス・ローダが使用するブート・クラス・パス・メカニズムをサポートしているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="05f3dfd28daeb0da6fe621fa0caa35011318cd8c" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine supports the monitoring of compilation time.</source>
          <target state="translated">Java 仮想マシンがコンパイル時間の監視をサポートしているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="ce50fff26b324c9d3354eaa9da5608d9665266d9" translate="yes" xml:space="preserve">
          <source>Tests if the Java virtual machine supports thread contention monitoring.</source>
          <target state="translated">Java 仮想マシンがスレッド競合監視をサポートしているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="5b8af7bc5b58273287f6d68a702a2cb67c42198d" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; entirely contains the specified &lt;code&gt;Rectangle2D&lt;/code&gt;.</source>
          <target state="translated">Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; entirely contains the specified &lt;code&gt;Rectangle2D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="529cb57f4eeb873743e6cdf5d8d9caa6a1568ee5" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; entirely contains the specified &lt;code&gt;Rectangle2D&lt;/code&gt;. The &lt;code&gt;Shape.contains()&lt;/code&gt; method allows a &lt;code&gt;Shape&lt;/code&gt; implementation to conservatively return &lt;code&gt;false&lt;/code&gt; when:</source>
          <target state="translated">Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; entirely contains the specified &lt;code&gt;Rectangle2D&lt;/code&gt; . The &lt;code&gt;Shape.contains()&lt;/code&gt; method allows a &lt;code&gt;Shape&lt;/code&gt; implementation to conservatively return &lt;code&gt;false&lt;/code&gt; when:</target>
        </trans-unit>
        <trans-unit id="29bb7e8a5795be55b73a9c6112eec85064578c74" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; entirely contains the specified rectangular area.</source>
          <target state="translated">Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; entirely contains the specified rectangular area.</target>
        </trans-unit>
        <trans-unit id="f235368ac31720d2ce094e34d1ec453e3b75f4c4" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; entirely contains the specified rectangular area. All coordinates that lie inside the rectangular area must lie within the &lt;code&gt;Shape&lt;/code&gt; for the entire rectangular area to be considered contained within the &lt;code&gt;Shape&lt;/code&gt;.</source>
          <target state="translated">Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; entirely contains the specified rectangular area. All coordinates that lie inside the rectangular area must lie within the &lt;code&gt;Shape&lt;/code&gt; for the entire rectangular area to be considered contained within the &lt;code&gt;Shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dcde6280cdf78e9fee618b431c29568c2a6b493" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; intersects the interior of a specified &lt;code&gt;Rectangle2D&lt;/code&gt;.</source>
          <target state="translated">Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; intersects the interior of a specified &lt;code&gt;Rectangle2D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="581f725a1ec04333ff0cdd46c6d69d072e6e0f26" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; intersects the interior of a specified &lt;code&gt;Rectangle2D&lt;/code&gt;. The &lt;code&gt;Shape.intersects()&lt;/code&gt; method allows a &lt;code&gt;Shape&lt;/code&gt; implementation to conservatively return &lt;code&gt;true&lt;/code&gt; when:</source>
          <target state="translated">Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; intersects the interior of a specified &lt;code&gt;Rectangle2D&lt;/code&gt; . The &lt;code&gt;Shape.intersects()&lt;/code&gt; method allows a &lt;code&gt;Shape&lt;/code&gt; implementation to conservatively return &lt;code&gt;true&lt;/code&gt; when:</target>
        </trans-unit>
        <trans-unit id="b8c8c9b16b17839c15911f4ef5825c2466cf28ff" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; intersects the interior of a specified rectangular area.</source>
          <target state="translated">Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; intersects the interior of a specified rectangular area.</target>
        </trans-unit>
        <trans-unit id="5182c0f953e3f18b9b7a93d2b4c496c01ed2a94a" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; intersects the interior of a specified rectangular area. The rectangular area is considered to intersect the &lt;code&gt;Shape&lt;/code&gt; if any point is contained in both the interior of the &lt;code&gt;Shape&lt;/code&gt; and the specified rectangular area.</source>
          <target state="translated">Tests if the interior of the &lt;code&gt;Shape&lt;/code&gt; intersects the interior of a specified rectangular area. The rectangular area is considered to intersect the &lt;code&gt;Shape&lt;/code&gt; if any point is contained in both the interior of the &lt;code&gt;Shape&lt;/code&gt; and the specified rectangular area.</target>
        </trans-unit>
        <trans-unit id="74f321d80d3e8f837b09a3227cc2595fafcb8a3c" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; intersects the interior of a specified &lt;a href=&quot;rectangle2d&quot;&gt;&lt;code&gt;Rectangle2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tests if the interior of the specified &lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt; intersects the interior of a specified &lt;a href=&quot;rectangle2d&quot;&gt; &lt;code&gt;Rectangle2D&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cf58eb5ad62b5ed93f78e9643130c927f114e8e9" translate="yes" xml:space="preserve">
          <source>Tests if the interior of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; intersects the interior of a specified set of rectangular coordinates.</source>
          <target state="translated">Tests if the interior of the specified &lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt; intersects the interior of a specified set of rectangular coordinates.</target>
        </trans-unit>
        <trans-unit id="c80edca0e0eafa2234efe57988b1d421528652ec" translate="yes" xml:space="preserve">
          <source>Tests if the interior of this &lt;code&gt;Line2D&lt;/code&gt; entirely contains the specified &lt;code&gt;Rectangle2D&lt;/code&gt;.</source>
          <target state="translated">Tests if the interior of this &lt;code&gt;Line2D&lt;/code&gt; entirely contains the specified &lt;code&gt;Rectangle2D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="738e5dcb80e46e5c827f2be3565b95b34f616be8" translate="yes" xml:space="preserve">
          <source>Tests if the interior of this &lt;code&gt;Line2D&lt;/code&gt; entirely contains the specified &lt;code&gt;Rectangle2D&lt;/code&gt;. This method is required to implement the &lt;code&gt;Shape&lt;/code&gt; interface, but in the case of &lt;code&gt;Line2D&lt;/code&gt; objects it always returns &lt;code&gt;false&lt;/code&gt; since a line contains no area.</source>
          <target state="translated">Tests if the interior of this &lt;code&gt;Line2D&lt;/code&gt; entirely contains the specified &lt;code&gt;Rectangle2D&lt;/code&gt; . This method is required to implement the &lt;code&gt;Shape&lt;/code&gt; interface, but in the case of &lt;code&gt;Line2D&lt;/code&gt; objects it always returns &lt;code&gt;false&lt;/code&gt; since a line contains no area.</target>
        </trans-unit>
        <trans-unit id="cdc50164510c4d169f1b4d476fece7f03b077ba4" translate="yes" xml:space="preserve">
          <source>Tests if the interior of this &lt;code&gt;Line2D&lt;/code&gt; entirely contains the specified set of rectangular coordinates.</source>
          <target state="translated">Tests if the interior of this &lt;code&gt;Line2D&lt;/code&gt; entirely contains the specified set of rectangular coordinates.</target>
        </trans-unit>
        <trans-unit id="009282262cdffd24e4c6e8c924a6ce2bb299705e" translate="yes" xml:space="preserve">
          <source>Tests if the interior of this &lt;code&gt;Line2D&lt;/code&gt; entirely contains the specified set of rectangular coordinates. This method is required to implement the &lt;code&gt;Shape&lt;/code&gt; interface, but in the case of &lt;code&gt;Line2D&lt;/code&gt; objects it always returns false since a line contains no area.</source>
          <target state="translated">Tests if the interior of this &lt;code&gt;Line2D&lt;/code&gt; entirely contains the specified set of rectangular coordinates. This method is required to implement the &lt;code&gt;Shape&lt;/code&gt; interface, but in the case of &lt;code&gt;Line2D&lt;/code&gt; objects it always returns false since a line contains no area.</target>
        </trans-unit>
        <trans-unit id="da119a1e653da178be46a4aa738d46efe69eddc7" translate="yes" xml:space="preserve">
          <source>Tests if the iteration is complete.</source>
          <target state="translated">反復が完了しているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="7b9a2d40fabf928c7491e1ce7aee0eaed6557c48" translate="yes" xml:space="preserve">
          <source>Tests if the line segment from &lt;code&gt;(x1,y1)&lt;/code&gt; to &lt;code&gt;(x2,y2)&lt;/code&gt; intersects the line segment from &lt;code&gt;(x3,y3)&lt;/code&gt; to &lt;code&gt;(x4,y4)&lt;/code&gt;.</source>
          <target state="translated">Tests if the line segment from &lt;code&gt;(x1,y1)&lt;/code&gt; to &lt;code&gt;(x2,y2)&lt;/code&gt; intersects the line segment from &lt;code&gt;(x3,y3)&lt;/code&gt; to &lt;code&gt;(x4,y4)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c93e916d6add6d0deb6bec1d705db617590d81eb" translate="yes" xml:space="preserve">
          <source>Tests if the line segment from &lt;code&gt;(x1,y1)&lt;/code&gt; to &lt;code&gt;(x2,y2)&lt;/code&gt; intersects this line segment.</source>
          <target state="translated">Tests if the line segment from &lt;code&gt;(x1,y1)&lt;/code&gt; to &lt;code&gt;(x2,y2)&lt;/code&gt; intersects this line segment.</target>
        </trans-unit>
        <trans-unit id="205ca6f6794761af7b3d2e9274622cf2862b86e9" translate="yes" xml:space="preserve">
          <source>Tests if the memory usage of this memory pool after the most recent collection on which the Java virtual machine has expended effort has reached or exceeded its collection usage threshold.</source>
          <target state="translated">Java 仮想マシンが労力を費やした最新のコレクションの後のこのメモリ プールのメモリ使用量が、コレクション使用量のしきい値に達しているか、またはそれを超えているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="589d6ead6695db963debe0595fb7df645128d97e" translate="yes" xml:space="preserve">
          <source>Tests if the memory usage of this memory pool after the most recent collection on which the Java virtual machine has expended effort has reached or exceeded its collection usage threshold. This method does not request the Java virtual machine to perform any garbage collection other than its normal automatic memory management.</source>
          <target state="translated">このメモリ プールのメモリ使用量が、Java 仮想マシンが努力を費やした最新のコレクションの後に、そのコレクション使用量のしきい値に達しているか、またはそれを超えているかどうかをテストします。このメソッドは、通常の自動メモリ管理以外のガベージ コレクションの実行を Java 仮想マシンに要求しません。</target>
        </trans-unit>
        <trans-unit id="06e15add558ebdf1cf007c4ce672e9a43724f8d3" translate="yes" xml:space="preserve">
          <source>Tests if the memory usage of this memory pool reaches or exceeds its usage threshold value.</source>
          <target state="translated">このメモリプールのメモリ使用量が使用量しきい値に達しているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="cea372bb8f045163bec9b8681db1d7217328e146" translate="yes" xml:space="preserve">
          <source>Tests if the monitor MBean is active.</source>
          <target state="translated">モニターMBeanがアクティブかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="2a6856dadf5872fe517fd09a16d82f584b3aaed2" translate="yes" xml:space="preserve">
          <source>Tests if the monitor MBean is active. A monitor MBean is marked active when the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. It becomes inactive when the &lt;a href=&quot;#stop()&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">Tests if the monitor MBean is active. A monitor MBean is marked active when the &lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; method is called. It becomes inactive when the &lt;a href=&quot;#stop()&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt; method is called.</target>
        </trans-unit>
        <trans-unit id="9ec21324bd2e358fc5cce3bd3f29fb53e2a92118" translate="yes" xml:space="preserve">
          <source>Tests if the monitor MBean is active. A monitor MBean is marked active when the &lt;a href=&quot;monitormbean#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. It becomes inactive when the &lt;a href=&quot;monitormbean#stop--&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">モニターMBeanがアクティブかどうかをテストします。&lt;a href=&quot;monitormbean#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されると、モニターMBeanはアクティブとしてマークされます。&lt;a href=&quot;monitormbean#stop--&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されると非アクティブになります。</target>
        </trans-unit>
        <trans-unit id="12eb2631407d23da5e091aa6b7bd4aba08e780a3" translate="yes" xml:space="preserve">
          <source>Tests if the specified &lt;a href=&quot;point2d&quot;&gt;&lt;code&gt;Point2D&lt;/code&gt;&lt;/a&gt; is inside the closed boundary of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tests if the specified &lt;a href=&quot;point2d&quot;&gt; &lt;code&gt;Point2D&lt;/code&gt; &lt;/a&gt; is inside the closed boundary of the specified &lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9609d0d59bbd19dc7f9329403f6ab571b63262d7" translate="yes" xml:space="preserve">
          <source>Tests if the specified &lt;a href=&quot;rectangle2d&quot;&gt;&lt;code&gt;Rectangle2D&lt;/code&gt;&lt;/a&gt; is entirely inside the closed boundary of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tests if the specified &lt;a href=&quot;rectangle2d&quot;&gt; &lt;code&gt;Rectangle2D&lt;/code&gt; &lt;/a&gt; is entirely inside the closed boundary of the specified &lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a02ca50064d966419c7a6dc6eb90617b0b9521f8" translate="yes" xml:space="preserve">
          <source>Tests if the specified &lt;code&gt;GlyphVector&lt;/code&gt; exactly equals this &lt;code&gt;GlyphVector&lt;/code&gt;.</source>
          <target state="translated">Tests if the specified &lt;code&gt;GlyphVector&lt;/code&gt; exactly equals this &lt;code&gt;GlyphVector&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da4c513b3c59ff4fc776fc7839eb8478a6dc1a68" translate="yes" xml:space="preserve">
          <source>Tests if the specified &lt;code&gt;Object&lt;/code&gt; is an instance of &lt;code&gt;ComponentColorModel&lt;/code&gt; and equals this &lt;code&gt;ComponentColorModel&lt;/code&gt;.</source>
          <target state="translated">Tests if the specified &lt;code&gt;Object&lt;/code&gt; is an instance of &lt;code&gt;ComponentColorModel&lt;/code&gt; and equals this &lt;code&gt;ComponentColorModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1b423e0a401b87ac478a4a40467ed2280e4c574" translate="yes" xml:space="preserve">
          <source>Tests if the specified &lt;code&gt;Object&lt;/code&gt; is an instance of &lt;code&gt;IndexColorModel&lt;/code&gt; and if it equals this &lt;code&gt;IndexColorModel&lt;/code&gt;</source>
          <target state="translated">Tests if the specified &lt;code&gt;Object&lt;/code&gt; is an instance of &lt;code&gt;IndexColorModel&lt;/code&gt; and if it equals this &lt;code&gt;IndexColorModel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="922b46bb236637f4d8d72c6de2aace9dc89b84c2" translate="yes" xml:space="preserve">
          <source>Tests if the specified &lt;code&gt;Object&lt;/code&gt; is an instance of &lt;code&gt;PackedColorModel&lt;/code&gt; and equals this &lt;code&gt;PackedColorModel&lt;/code&gt;.</source>
          <target state="translated">Tests if the specified &lt;code&gt;Object&lt;/code&gt; is an instance of &lt;code&gt;PackedColorModel&lt;/code&gt; and equals this &lt;code&gt;PackedColorModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13f331a59f7c0878ed677f108f6f4f0da2523667" translate="yes" xml:space="preserve">
          <source>Tests if the specified coordinates are inside the boundary of the &lt;code&gt;Shape&lt;/code&gt;, as described by the &lt;a href=&quot;../shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt;.</source>
          <target state="translated">Tests if the specified coordinates are inside the boundary of the &lt;code&gt;Shape&lt;/code&gt; , as described by the &lt;a href=&quot;../shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1b9d8ef113494657790128660cbf264a098edcbf" translate="yes" xml:space="preserve">
          <source>Tests if the specified coordinates are inside the boundary of the &lt;code&gt;Shape&lt;/code&gt;, as described by the &lt;a href=&quot;shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt;.</source>
          <target state="translated">Tests if the specified coordinates are inside the boundary of the &lt;code&gt;Shape&lt;/code&gt; , as described by the &lt;a href=&quot;shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7acbbed132a47d3c8d867bd45d14d7c79c2f0350" translate="yes" xml:space="preserve">
          <source>Tests if the specified coordinates are inside the closed boundary of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tests if the specified coordinates are inside the closed boundary of the specified &lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e5cbf688ecd1a53c6ae19f423dc6ff3c8686b799" translate="yes" xml:space="preserve">
          <source>Tests if the specified line segment intersects the interior of this &lt;code&gt;Rectangle2D&lt;/code&gt;.</source>
          <target state="translated">指定された線分がこの &lt;code&gt;Rectangle2D&lt;/code&gt; の内部と交差するかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="34f240de22d971f34b69e1ae3f7b193c0404fbb5" translate="yes" xml:space="preserve">
          <source>Tests if the specified line segment intersects this line segment.</source>
          <target state="translated">指定された線分がこの線分と交差するかどうかを調べます。</target>
        </trans-unit>
        <trans-unit id="829ea16e88643c4354eb8e289328fcade68b7cd6" translate="yes" xml:space="preserve">
          <source>Tests if the specified object is a key in this hashtable.</source>
          <target state="translated">指定されたオブジェクトがこのハッシュテーブルのキーであるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="1e5b79dd75c69804ac69d0b591a74c9eee88301c" translate="yes" xml:space="preserve">
          <source>Tests if the specified object is a key in this table.</source>
          <target state="translated">指定されたオブジェクトがこのテーブルのキーであるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="49176c522441078d0c397d9ea9f48775a9a7fe23" translate="yes" xml:space="preserve">
          <source>Tests if the specified rectangular area is entirely inside the closed boundary of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された長方形の領域が、指定された&lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; の&lt;/a&gt;閉じた境界の内側に完全にあるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="fd3235e2fa5d8939fcbf413ff193b5687616fb84" translate="yes" xml:space="preserve">
          <source>Tests if the substring of this string beginning at the specified index starts with the specified prefix.</source>
          <target state="translated">指定されたインデックスから始まる文字列の部分文字列が指定された接頭辞で始まるかどうかを調べます。</target>
        </trans-unit>
        <trans-unit id="f278d34e0140f3a8f1ad10e42a87c437cf2a12fd" translate="yes" xml:space="preserve">
          <source>Tests if the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt; is a &lt;a href=&quot;../../../../java.base/java/lang/thread#isDaemon()&quot;&gt;daemon thread&lt;/a&gt;.</source>
          <target state="translated">この &lt;code&gt;ThreadInfo&lt;/code&gt; に関連付けられているスレッドが&lt;a href=&quot;../../../../java.base/java/lang/thread#isDaemon()&quot;&gt;デーモンスレッドである&lt;/a&gt;かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="9b995d928d449b0aaa0f792bda30672bc6c8317b" translate="yes" xml:space="preserve">
          <source>Tests if the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt; is executing native code via the Java Native Interface (JNI).</source>
          <target state="translated">この &lt;code&gt;ThreadInfo&lt;/code&gt; に関連付けられたスレッドがJavaNative Interface（JNI）を介してネイティブコードを実行しているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="468f6617f89a65261a19a8d28baf3bcabb1b80dd" translate="yes" xml:space="preserve">
          <source>Tests if the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt; is executing native code via the Java Native Interface (JNI). The JNI native code does not include the virtual machine support code or the compiled native code generated by the virtual machine.</source>
          <target state="translated">この &lt;code&gt;ThreadInfo&lt;/code&gt; に関連付けられたスレッドがJava Native Interface（JNI）を介してネイティブコードを実行しているかどうかをテストします。JNIネイティブコードには、仮想マシンサポートコードまたは仮想マシンによって生成されたコンパイル済みネイティブコードは含まれません。</target>
        </trans-unit>
        <trans-unit id="fbcf564a71f66da9fd534961891f1419bd1dda3b" translate="yes" xml:space="preserve">
          <source>Tests if the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt; is suspended.</source>
          <target state="translated">この &lt;code&gt;ThreadInfo&lt;/code&gt; に関連付けられているスレッドが中断されているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="6550927ad151019c4ec40bf0b28e64e42f59f7cf" translate="yes" xml:space="preserve">
          <source>Tests if the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt; is suspended. This method returns &lt;code&gt;true&lt;/code&gt; if &lt;a href=&quot;../../../../java.base/java/lang/thread#suspend()&quot;&gt;&lt;code&gt;Thread.suspend()&lt;/code&gt;&lt;/a&gt; has been called.</source>
          <target state="translated">この &lt;code&gt;ThreadInfo&lt;/code&gt; に関連付けられているスレッドが中断されているかどうかをテストします。&lt;a href=&quot;../../../../java.base/java/lang/thread#suspend()&quot;&gt; &lt;code&gt;Thread.suspend()&lt;/code&gt; &lt;/a&gt;が呼び出された場合、このメソッドは &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="44ae8e55cbddd846c3d29c7c636c18bd5b8c2fae" translate="yes" xml:space="preserve">
          <source>Tests if the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt; is suspended. This method returns &lt;code&gt;true&lt;/code&gt; if &lt;a href=&quot;../thread#suspend--&quot;&gt;&lt;code&gt;Thread.suspend()&lt;/code&gt;&lt;/a&gt; has been called.</source>
          <target state="translated">この &lt;code&gt;ThreadInfo&lt;/code&gt; に関連付けられたスレッドが中断されているかどうかをテストします。&lt;a href=&quot;../thread#suspend--&quot;&gt; &lt;code&gt;Thread.suspend()&lt;/code&gt; &lt;/a&gt;が呼び出された場合、このメソッドは &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="89bc9ac87680e9de4f314ffe780453fe75db0b00" translate="yes" xml:space="preserve">
          <source>Tests if the verbose output for the class loading system is enabled.</source>
          <target state="translated">クラス・ローディング・システムの冗長出力が有効になっているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="5bb981dce6053fac210678fa946f8539f470f112" translate="yes" xml:space="preserve">
          <source>Tests if there are more tokens available from this tokenizer's string.</source>
          <target state="translated">このトークナイザーの文字列から利用可能なトークンがさらにあるかどうかを調べます。</target>
        </trans-unit>
        <trans-unit id="a6650d4ae9e4db6e13d294c3c2dd317d8302d584" translate="yes" xml:space="preserve">
          <source>Tests if there are more tokens available from this tokenizer's string. If this method returns &lt;code&gt;true&lt;/code&gt;, then a subsequent call to &lt;code&gt;nextToken&lt;/code&gt; with no argument will successfully return a token.</source>
          <target state="translated">このトークナイザの文字列から利用可能なトークンがまだあるかどうかをテストします。このメソッドが &lt;code&gt;true&lt;/code&gt; を返す場合、引き数なしで &lt;code&gt;nextToken&lt;/code&gt; を次に呼び出すと、トークンが正常に返されます。</target>
        </trans-unit>
        <trans-unit id="c48c1f4c95f4ffffc88841e05b6cfcb4db399ad8" translate="yes" xml:space="preserve">
          <source>Tests if there is a security check in progress.</source>
          <target state="translated">セキュリティチェックが行われているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="d72ac81e2b1381613fc52e591526f6a760a02045" translate="yes" xml:space="preserve">
          <source>Tests if this &lt;code&gt;InputStream&lt;/code&gt; supports mark/reset.</source>
          <target state="translated">この &lt;code&gt;InputStream&lt;/code&gt; がマーク/リセットをサポートしているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="fa4feeec7dee56f00c46a1f88381c96e7e6cca98" translate="yes" xml:space="preserve">
          <source>Tests if this &lt;code&gt;InputStream&lt;/code&gt; supports mark/reset. The &lt;code&gt;markSupported&lt;/code&gt; method of &lt;code&gt;ByteArrayInputStream&lt;/code&gt; always returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;InputStream&lt;/code&gt; がマーク/リセットをサポートするかどうかをテストします。 &lt;code&gt;ByteArrayInputStream&lt;/code&gt; の &lt;code&gt;markSupported&lt;/code&gt; メソッドは常に &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f869c2d4dadf730da5549032b133b4a5311cb639" translate="yes" xml:space="preserve">
          <source>Tests if this GSSCredential asserts the same entity as the supplied object.</source>
          <target state="translated">このGSSCredentialが供給されたオブジェクトと同じ実体を主張するかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="785692d0ed29c9b0295fccc72b94e3e713fd91d3" translate="yes" xml:space="preserve">
          <source>Tests if this GSSCredential asserts the same entity as the supplied object. The two credentials must be acquired over the same mechanisms and must refer to the same principal.</source>
          <target state="translated">この GSSCredential が、提供されたオブジェクトと同じエンティティを主張するかどうかをテストします。2 つのクレデンシャルは、同じメカニズムで取得され、同じプリンシパルを参照している必要があります。</target>
        </trans-unit>
        <trans-unit id="77a88f0d30c8b9251d6617e646d1961117d202ce" translate="yes" xml:space="preserve">
          <source>Tests if this date is after the specified date.</source>
          <target state="translated">この日付が指定された日付以降であるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="493b22d31b4c0749f371bd16d78e70028618b8dc" translate="yes" xml:space="preserve">
          <source>Tests if this date is before the specified date.</source>
          <target state="translated">この日付が指定された日付より前であるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="1e1f68ab6be67292a24d0bb3cb3303475d1b939a" translate="yes" xml:space="preserve">
          <source>Tests if this dictionary maps no keys to value.</source>
          <target state="translated">この辞書がキーを値にマップしていないかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="8d73c41bea9ac1467d0c73aa19a3bd11f22ab73e" translate="yes" xml:space="preserve">
          <source>Tests if this dictionary maps no keys to value. The general contract for the &lt;code&gt;isEmpty&lt;/code&gt; method is that the result is true if and only if this dictionary contains no entries.</source>
          <target state="translated">このディクショナリがキーを値にマップしていないかどうかをテストします。 &lt;code&gt;isEmpty&lt;/code&gt; メソッドの一般規約では、このディクショナリにエントリが含まれていない場合にのみ結果がtrueになります。</target>
        </trans-unit>
        <trans-unit id="65ac5dff26425c505b283f15e32c49061f185c54" translate="yes" xml:space="preserve">
          <source>Tests if this enumeration contains more elements.</source>
          <target state="translated">この列挙にさらに多くの要素が含まれているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="5f5af7c093f8f9f456dc1d94e796324884f5dd5c" translate="yes" xml:space="preserve">
          <source>Tests if this file descriptor object is valid.</source>
          <target state="translated">このファイル記述子オブジェクトが有効かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="e164f92e268148bbad9efa0fe1440f6463fccc1b" translate="yes" xml:space="preserve">
          <source>Tests if this hashtable maps no keys to values.</source>
          <target state="translated">このハッシュテーブルがキーを値にマッピングしていないかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="40cd6174d30712287bb326d77fb3282f644245d8" translate="yes" xml:space="preserve">
          <source>Tests if this input stream supports the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods, which it does not.</source>
          <target state="translated">この入力ストリームが &lt;code&gt;mark&lt;/code&gt; メソッドと &lt;code&gt;reset&lt;/code&gt; メソッドをサポートしているかどうかをテストしますが、サポートしていません。</target>
        </trans-unit>
        <trans-unit id="a24069bb2665fd32338d8d3841634d4b3af92df9" translate="yes" xml:space="preserve">
          <source>Tests if this input stream supports the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods.</source>
          <target state="translated">この入力ストリームが &lt;code&gt;mark&lt;/code&gt; および &lt;code&gt;reset&lt;/code&gt; メソッドをサポートしているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="a7757143555f0dcad2870bbee6e0b52f07a77fbe" translate="yes" xml:space="preserve">
          <source>Tests if this input stream supports the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods. The &lt;code&gt;markSupported&lt;/code&gt; method of &lt;code&gt;BufferedInputStream&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">この入力ストリームが &lt;code&gt;mark&lt;/code&gt; メソッドと &lt;code&gt;reset&lt;/code&gt; メソッドをサポートするかどうかをテストします。 &lt;code&gt;BufferedInputStream&lt;/code&gt; の &lt;code&gt;markSupported&lt;/code&gt; メソッドは &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="29039dc0cd154f4ab52f38d22848cdb94796f333" translate="yes" xml:space="preserve">
          <source>Tests if this input stream supports the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods. The &lt;code&gt;markSupported&lt;/code&gt; method of &lt;code&gt;InflaterInputStream&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">この入力ストリームが &lt;code&gt;mark&lt;/code&gt; メソッドと &lt;code&gt;reset&lt;/code&gt; メソッドをサポートするかどうかをテストします。 &lt;code&gt;InflaterInputStream&lt;/code&gt; の &lt;code&gt;markSupported&lt;/code&gt; メソッドはfalseを返し &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08189f5e3d782650d89fff9685a67849a989be12" translate="yes" xml:space="preserve">
          <source>Tests if this input stream supports the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods. This method simply performs &lt;code&gt;in.markSupported()&lt;/code&gt;.</source>
          <target state="translated">この入力ストリームが &lt;code&gt;mark&lt;/code&gt; メソッドと &lt;code&gt;reset&lt;/code&gt; メソッドをサポートするかどうかをテストします。このメソッドは単に &lt;code&gt;in.markSupported()&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="f067791dc7bf78eee99c5e8db0e67466c1e87ec6" translate="yes" xml:space="preserve">
          <source>Tests if this input stream supports the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods. Whether or not &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; are supported is an invariant property of a particular input stream instance. The &lt;code&gt;markSupported&lt;/code&gt; method of &lt;code&gt;InputStream&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">この入力ストリームが &lt;code&gt;mark&lt;/code&gt; メソッドと &lt;code&gt;reset&lt;/code&gt; メソッドをサポートするかどうかをテストします。 &lt;code&gt;mark&lt;/code&gt; と &lt;code&gt;reset&lt;/code&gt; がサポートされているかどうかは、特定の入力ストリームインスタンスの不変のプロパティです。 &lt;code&gt;InputStream&lt;/code&gt; の &lt;code&gt;markSupported&lt;/code&gt; メソッドは &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6d0dd0d674a38718f54316a46236fd2a50305d82" translate="yes" xml:space="preserve">
          <source>Tests if this is a duplicate of an earlier token.</source>
          <target state="translated">これが以前のトークンの複製であるかどうかを調べます。</target>
        </trans-unit>
        <trans-unit id="52c4cbef152cc3f530d62336e8145cb80e2ce4d7" translate="yes" xml:space="preserve">
          <source>Tests if this memory manager is valid in the Java virtual machine.</source>
          <target state="translated">このメモリ・マネージャーがJava仮想マシンで有効かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="ac5bfdb48aa956d7ad13db246bee0cb6f628fb82" translate="yes" xml:space="preserve">
          <source>Tests if this memory manager is valid in the Java virtual machine. A memory manager becomes invalid once the Java virtual machine removes it from the memory system.</source>
          <target state="translated">このメモリ・マネージャーが Java 仮想マシンで有効かどうかをテストします。Java 仮想マシンがメモリシステムから削除すると、メモリマネージャは無効になります。</target>
        </trans-unit>
        <trans-unit id="3ddfdb7b5d4693edb0173a3b0711528b1ecbfb4c" translate="yes" xml:space="preserve">
          <source>Tests if this memory pool is valid in the Java virtual machine.</source>
          <target state="translated">このメモリプールが Java 仮想マシンで有効かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="335fda410cc890d5b352a66cd3029f8bdf71f5b5" translate="yes" xml:space="preserve">
          <source>Tests if this memory pool is valid in the Java virtual machine. A memory pool becomes invalid once the Java virtual machine removes it from the memory system.</source>
          <target state="translated">このメモリ プールが Java 仮想マシンで有効かどうかをテストします。Java 仮想マシンがメモリ システムから削除すると、メモリ プールは無効になります。</target>
        </trans-unit>
        <trans-unit id="a1d8345179b7cabc97588fdc4618e30be12087f1" translate="yes" xml:space="preserve">
          <source>Tests if this memory pool supports a collection usage threshold.</source>
          <target state="translated">このメモリプールがコレクション使用のしきい値をサポートしているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="8f4799f0708a0fee3689994e6047645224d8f602" translate="yes" xml:space="preserve">
          <source>Tests if this memory pool supports usage threshold.</source>
          <target state="translated">このメモリプールが使用量のしきい値をサポートしているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="a4062e24c74d1123bea93641d47bd4405035f2a2" translate="yes" xml:space="preserve">
          <source>Tests if this name object represents a Mechanism Name (MN).</source>
          <target state="translated">機構名(MN)を表すかどうかを判定します。</target>
        </trans-unit>
        <trans-unit id="d5ed34b90221a7a4f9590161ca8ad4d7e8d21b7f" translate="yes" xml:space="preserve">
          <source>Tests if this name object represents a Mechanism Name (MN). An MN is a GSSName the contains exactly one mechanism's primitive name element.</source>
          <target state="translated">この名前オブジェクトがメカニズム名(MN)を表しているかどうかを判定します。MN は、メカニズムのプリミティブ名要素を正確に 1 つ含む GSSName です。</target>
        </trans-unit>
        <trans-unit id="052f245c3e3283a830dc0b3943e531f3155cd5c1" translate="yes" xml:space="preserve">
          <source>Tests if this name object represents an anonymous entity.</source>
          <target state="translated">この名前オブジェクトが匿名のエンティティを表すかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="6a5c24bb6458103c0f805f35cfb6019d8713a07d" translate="yes" xml:space="preserve">
          <source>Tests if this object has changed.</source>
          <target state="translated">このオブジェクトが変更されたかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="010bfcc74697ad38265d0453f103362f68ed4e6c" translate="yes" xml:space="preserve">
          <source>Tests if this path ends with a &lt;code&gt;Path&lt;/code&gt;, constructed by converting the given path string, in exactly the manner specified by the &lt;a href=&quot;#endsWith(java.nio.file.Path)&quot;&gt;&lt;code&gt;endsWith(Path)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このパスが、&lt;a href=&quot;#endsWith(java.nio.file.Path)&quot;&gt; &lt;code&gt;endsWith(Path)&lt;/code&gt; &lt;/a&gt;メソッドで指定された方法で、指定されたパス文字列を変換することによって構築された &lt;code&gt;Path&lt;/code&gt; で終了するかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="4f65997bb5a3d772d1a4445b347e1fd97fdc0f10" translate="yes" xml:space="preserve">
          <source>Tests if this path ends with a &lt;code&gt;Path&lt;/code&gt;, constructed by converting the given path string, in exactly the manner specified by the &lt;a href=&quot;#endsWith(java.nio.file.Path)&quot;&gt;&lt;code&gt;endsWith(Path)&lt;/code&gt;&lt;/a&gt; method. On UNIX for example, the path &quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot; ends with &quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot; and &quot;&lt;code&gt;bar&lt;/code&gt;&quot;. It does not end with &quot;&lt;code&gt;r&lt;/code&gt;&quot; or &quot;&lt;code&gt;/bar&lt;/code&gt;&quot;. Note that trailing separators are not taken into account, and so invoking this method on the &lt;code&gt;
 Path&lt;/code&gt;&quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot; with the &lt;code&gt;String&lt;/code&gt; &quot;&lt;code&gt;bar/&lt;/code&gt;&quot; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このパスが、&lt;a href=&quot;#endsWith(java.nio.file.Path)&quot;&gt; &lt;code&gt;endsWith(Path)&lt;/code&gt; &lt;/a&gt;メソッドで指定された方法で、指定されたパス文字列を変換することによって構築された &lt;code&gt;Path&lt;/code&gt; で終了するかどうかをテストします。たとえばUNIXの場合、パス「 &lt;code&gt;foo/bar&lt;/code&gt; 」は「 &lt;code&gt;foo/bar&lt;/code&gt; 」と「 &lt;code&gt;bar&lt;/code&gt; 」で終わります。 「 &lt;code&gt;r&lt;/code&gt; 」または「 &lt;code&gt;/bar&lt;/code&gt; 」で終わらない。末尾の区切り文字は考慮されないため、 &lt;code&gt; Path&lt;/code&gt; 「 &lt;code&gt;foo/bar&lt;/code&gt; 」で &lt;code&gt;String&lt;/code&gt; 「 &lt;code&gt;bar/&lt;/code&gt; 」を使用してこのメ​​ソッドを呼び出すと、 &lt;code&gt;true&lt;/code&gt; が返されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6630570d4515bb90c011e59b418b10898f928957" translate="yes" xml:space="preserve">
          <source>Tests if this path ends with a &lt;code&gt;Path&lt;/code&gt;, constructed by converting the given path string, in exactly the manner specified by the &lt;a href=&quot;path#endsWith-java.nio.file.Path-&quot;&gt;&lt;code&gt;endsWith(Path)&lt;/code&gt;&lt;/a&gt; method. On UNIX for example, the path &quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot; ends with &quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot; and &quot;&lt;code&gt;bar&lt;/code&gt;&quot;. It does not end with &quot;&lt;code&gt;r&lt;/code&gt;&quot; or &quot;&lt;code&gt;/bar&lt;/code&gt;&quot;. Note that trailing separators are not taken into account, and so invoking this method on the &lt;code&gt;Path&lt;/code&gt;&quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot; with the &lt;code&gt;String&lt;/code&gt; &quot;&lt;code&gt;bar/&lt;/code&gt;&quot; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このパスが、指定されたパス文字列を、&lt;a href=&quot;path#endsWith-java.nio.file.Path-&quot;&gt; &lt;code&gt;endsWith(Path)&lt;/code&gt; &lt;/a&gt;メソッドで指定された方法で変換して作成された &lt;code&gt;Path&lt;/code&gt; で終了するかどうかをテストします。たとえばUNIXでは、パス &quot; &lt;code&gt;foo/bar&lt;/code&gt; &quot;は &quot; &lt;code&gt;foo/bar&lt;/code&gt; &quot;および &quot; &lt;code&gt;bar&lt;/code&gt; &quot;で終わります。 「 &lt;code&gt;r&lt;/code&gt; 」または「 &lt;code&gt;/bar&lt;/code&gt; 」で終わらない。末尾のセパレータは考慮されないため、 &lt;code&gt;Path&lt;/code&gt; 「 &lt;code&gt;foo/bar&lt;/code&gt; 」でこのメソッドを &lt;code&gt;String&lt;/code&gt; 「 &lt;code&gt;bar/&lt;/code&gt; 」で呼び出すと &lt;code&gt;true&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="17b4a34a64cbd464714119dd298f986de7d3b196" translate="yes" xml:space="preserve">
          <source>Tests if this path ends with the given path.</source>
          <target state="translated">このパスが指定されたパスで終わるかどうかを調べます。</target>
        </trans-unit>
        <trans-unit id="09808fbd4ad12bd2abdd38858479f7dd7b87f661" translate="yes" xml:space="preserve">
          <source>Tests if this path starts with a &lt;code&gt;Path&lt;/code&gt;, constructed by converting the given path string, in exactly the manner specified by the &lt;a href=&quot;#startsWith(java.nio.file.Path)&quot;&gt;&lt;code&gt;startsWith(Path)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このパスが、&lt;a href=&quot;#startsWith(java.nio.file.Path)&quot;&gt; &lt;code&gt;startsWith(Path)&lt;/code&gt; &lt;/a&gt;メソッドで指定された方法で、指定されたパス文字列を変換することによって構築された &lt;code&gt;Path&lt;/code&gt; で始まるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="91dbe837ebb083c937dc150f33b88ee47142e88a" translate="yes" xml:space="preserve">
          <source>Tests if this path starts with a &lt;code&gt;Path&lt;/code&gt;, constructed by converting the given path string, in exactly the manner specified by the &lt;a href=&quot;#startsWith(java.nio.file.Path)&quot;&gt;&lt;code&gt;startsWith(Path)&lt;/code&gt;&lt;/a&gt; method. On UNIX for example, the path &quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot; starts with &quot;&lt;code&gt;foo&lt;/code&gt;&quot; and &quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot;. It does not start with &quot;&lt;code&gt;f&lt;/code&gt;&quot; or &quot;&lt;code&gt;fo&lt;/code&gt;&quot;.</source>
          <target state="translated">このパスが、&lt;a href=&quot;#startsWith(java.nio.file.Path)&quot;&gt; &lt;code&gt;startsWith(Path)&lt;/code&gt; &lt;/a&gt;メソッドで指定された方法で、指定されたパス文字列を変換することによって構築された &lt;code&gt;Path&lt;/code&gt; で始まるかどうかをテストします。たとえばUNIXの場合、パス「 &lt;code&gt;foo/bar&lt;/code&gt; 」は「 &lt;code&gt;foo&lt;/code&gt; 」と「 &lt;code&gt;foo/bar&lt;/code&gt; 」で始まります。「 &lt;code&gt;f&lt;/code&gt; 」や「 &lt;code&gt;fo&lt;/code&gt; 」で始まらない。</target>
        </trans-unit>
        <trans-unit id="bfaad5ac804750ab7b2d77d4323bab70b8990cdb" translate="yes" xml:space="preserve">
          <source>Tests if this path starts with a &lt;code&gt;Path&lt;/code&gt;, constructed by converting the given path string, in exactly the manner specified by the &lt;a href=&quot;path#startsWith-java.nio.file.Path-&quot;&gt;&lt;code&gt;startsWith(Path)&lt;/code&gt;&lt;/a&gt; method. On UNIX for example, the path &quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot; starts with &quot;&lt;code&gt;foo&lt;/code&gt;&quot; and &quot;&lt;code&gt;foo/bar&lt;/code&gt;&quot;. It does not start with &quot;&lt;code&gt;f&lt;/code&gt;&quot; or &quot;&lt;code&gt;fo&lt;/code&gt;&quot;.</source>
          <target state="translated">このパスが、&lt;a href=&quot;path#startsWith-java.nio.file.Path-&quot;&gt; &lt;code&gt;startsWith(Path)&lt;/code&gt; &lt;/a&gt;メソッドで指定された方法で、指定されたパス文字列を変換することによって構築された &lt;code&gt;Path&lt;/code&gt; で始まるかどうかをテストします。たとえばUNIXでは、パス &quot; &lt;code&gt;foo/bar&lt;/code&gt; &quot;は &quot; &lt;code&gt;foo&lt;/code&gt; &quot;および &quot; &lt;code&gt;foo/bar&lt;/code&gt; &quot;で始まります。「 &lt;code&gt;f&lt;/code&gt; 」または「 &lt;code&gt;fo&lt;/code&gt; 」で始まっていません。</target>
        </trans-unit>
        <trans-unit id="cfd959ff72bb39c7bc6cebf523bf3d2dd3a6be48" translate="yes" xml:space="preserve">
          <source>Tests if this path starts with the given path.</source>
          <target state="translated">このパスが指定されたパスから始まるかどうかを調べます。</target>
        </trans-unit>
        <trans-unit id="9a594c43c406305f1ac58992fea1a7c184371188" translate="yes" xml:space="preserve">
          <source>Tests if this stack is empty.</source>
          <target state="translated">このスタックが空かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="a72cb21d325c0875088c56d1ffcb8458f644b878" translate="yes" xml:space="preserve">
          <source>Tests if this string ends with the specified suffix.</source>
          <target state="translated">この文字列が指定された接尾辞で終わるかどうかを調べます。</target>
        </trans-unit>
        <trans-unit id="f648078e04951663f03ea03dcaedbfe7f612550f" translate="yes" xml:space="preserve">
          <source>Tests if this string starts with the specified prefix.</source>
          <target state="translated">この文字列が指定された接頭辞で始まるかどうかを調べます。</target>
        </trans-unit>
        <trans-unit id="9c24c442501c93347432dba1ef79d241f332f935" translate="yes" xml:space="preserve">
          <source>Tests if this thread group has been destroyed.</source>
          <target state="translated">このスレッドグループが破壊されたかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="279e59c201a9521407d3f4aaf96033fe5010f6ca" translate="yes" xml:space="preserve">
          <source>Tests if this thread group is a daemon thread group.</source>
          <target state="translated">このスレッドグループがデーモンスレッドグループであるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="b1932aebb7380f5cce39beeab145c1c24e15d82a" translate="yes" xml:space="preserve">
          <source>Tests if this thread group is a daemon thread group. A daemon thread group is automatically destroyed when its last thread is stopped or its last thread group is destroyed.</source>
          <target state="translated">このスレッドグループがデーモンスレッドグループであるかどうかをテストします。デーモンスレッドグループは、最後のスレッドが停止するか、最後のスレッドグループが破壊されると自動的に破壊されます。</target>
        </trans-unit>
        <trans-unit id="35d45d6658d8668373e9acfa06e40eb5b0fedc64" translate="yes" xml:space="preserve">
          <source>Tests if this thread group is either the thread group argument or one of its ancestor thread groups.</source>
          <target state="translated">このスレッドグループがスレッドグループ引数かその祖先のスレッドグループのいずれかであるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="9a9e843150a0f6574bd7b4c07ff63197ddc89250" translate="yes" xml:space="preserve">
          <source>Tests if this thread is a daemon thread.</source>
          <target state="translated">このスレッドがデーモンスレッドであるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="ed0070dd3d71ed5c435dc79d3fac97271fc54789" translate="yes" xml:space="preserve">
          <source>Tests if this thread is alive.</source>
          <target state="translated">このスレッドが生きているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="16bb2bd320617000eb9d9127d033df7b7cb72e44" translate="yes" xml:space="preserve">
          <source>Tests if this thread is alive. A thread is alive if it has been started and has not yet died.</source>
          <target state="translated">このスレッドが生きているかどうかをテストします。スレッドが開始されていて、まだ死亡していない場合、スレッドは生きています。</target>
        </trans-unit>
        <trans-unit id="a01f326a43869ac8b84fe8fcdbdcfc7269437336" translate="yes" xml:space="preserve">
          <source>Tests if this token's validity period has expired, i.e., the token is too old to be checked for duplication.</source>
          <target state="translated">このトークンの有効期限が切れているかどうか、つまり、トークンが古すぎて重複していないかどうかを調べます。</target>
        </trans-unit>
        <trans-unit id="27508e5d3616ba9fc1f8085e3143b247833a4149" translate="yes" xml:space="preserve">
          <source>Tests if this vector has no components.</source>
          <target state="translated">このベクトルに成分がないかどうかを判定します。</target>
        </trans-unit>
        <trans-unit id="f4debb5684fd8f3281bfb0184aca3223afb24b81" translate="yes" xml:space="preserve">
          <source>Tests if thread CPU time measurement is enabled.</source>
          <target state="translated">スレッドのCPU時間測定が有効かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="7dc21a2b1beffed1e6f22534038b78f6219ea6cf" translate="yes" xml:space="preserve">
          <source>Tests if thread contention monitoring is enabled.</source>
          <target state="translated">スレッド競合監視が有効かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="f6e473aefb1a8052ce0bcd10c801359693a789c7" translate="yes" xml:space="preserve">
          <source>Tests if two Oid objects represent the same Object identifier value.</source>
          <target state="translated">2つのOidオブジェクトが同じObject識別子の値を表しているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="464905da8f3968b704a4932a14599f516a410e68" translate="yes" xml:space="preserve">
          <source>Tests if two paths locate the same file.</source>
          <target state="translated">2 つのパスが同じファイルを見つけるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="70238b02b09e590581333517d9260a6ec8e9140e" translate="yes" xml:space="preserve">
          <source>Tests if two paths locate the same file. This method works in exactly the manner specified by the &lt;a href=&quot;../files#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt;&lt;code&gt;Files.isSameFile(java.nio.file.Path, java.nio.file.Path)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">2つのパスが同じファイルを見つけるかどうかをテストします。このメソッドは、&lt;a href=&quot;../files#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt; &lt;code&gt;Files.isSameFile(java.nio.file.Path, java.nio.file.Path)&lt;/code&gt; &lt;/a&gt;メソッドで指定された方法で正確に機能します。</target>
        </trans-unit>
        <trans-unit id="3c31b5b531c5762ddbbf94d0dc7fef88239759d1" translate="yes" xml:space="preserve">
          <source>Tests if two paths locate the same file. This method works in exactly the manner specified by the &lt;a href=&quot;../files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt;&lt;code&gt;Files.isSameFile(java.nio.file.Path, java.nio.file.Path)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">2つのパスが同じファイルを見つけるかどうかをテストします。このメソッドは、&lt;a href=&quot;../files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt; &lt;code&gt;Files.isSameFile(java.nio.file.Path, java.nio.file.Path)&lt;/code&gt; &lt;/a&gt;メソッドで指定された方法とまったく同じように機能します。</target>
        </trans-unit>
        <trans-unit id="96cc8501455cd6d437d775f4a33d535f1d7a007b" translate="yes" xml:space="preserve">
          <source>Tests if two string regions are equal.</source>
          <target state="translated">2つの文字列領域が等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="11726cf32c81a58c06f8546f6c3285a238b1f550" translate="yes" xml:space="preserve">
          <source>Tests if verbose output for the memory system is enabled.</source>
          <target state="translated">メモリシステムの冗長出力が有効かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="723c578329b3db12bcdfd74f206cd5fda1d0b98a" translate="yes" xml:space="preserve">
          <source>Tests the specified file, returning true if the file is accepted, false otherwise.</source>
          <target state="translated">指定したファイルをテストし、ファイルが受け入れられた場合はtrueを、そうでない場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="6f53e93cf05d0b01ea26bdbd5064c9c70c1633a5" translate="yes" xml:space="preserve">
          <source>Tests the specified file, returning true if the file is accepted, false otherwise. True is returned if the extension matches one of the file name extensions of this &lt;code&gt;
 FileFilter&lt;/code&gt;, or the file is a directory.</source>
          <target state="translated">指定されたファイルをテストし、ファイルが受け入れられた場合はtrueを返し、受け入れられなかった場合はfalseを返します。拡張子がこの &lt;code&gt; FileFilter&lt;/code&gt; のファイル名拡張子の1つと一致する場合、またはファイルがディレクトリである場合は、Trueが返されます。</target>
        </trans-unit>
        <trans-unit id="3d18cc904c4680e5c570e15b5ff31311430830f4" translate="yes" xml:space="preserve">
          <source>Tests this &lt;code&gt;FileTime&lt;/code&gt; for equality with the given object.</source>
          <target state="translated">この &lt;code&gt;FileTime&lt;/code&gt; を、指定されたオブジェクトと等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="980b0e7b84cbb0ca995ce1a4ebd816fd101ce9f7" translate="yes" xml:space="preserve">
          <source>Tests this HTTP headers instance for equality with the given object.</source>
          <target state="translated">この HTTP ヘッダのインスタンスが指定されたオブジェクトと等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="42092602e903e220babcc333f0e540369dd18be9" translate="yes" xml:space="preserve">
          <source>Tests this HTTP request instance for equality with the given object.</source>
          <target state="translated">この HTTP リクエストのインスタンスが指定されたオブジェクトと等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="a96151bb2f737e5fff936b5dec26298e6f95ab24" translate="yes" xml:space="preserve">
          <source>Tests this URI for equality with another object.</source>
          <target state="translated">このURIが別のオブジェクトと等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="0f36d537416d32633bf2525ab2484d558d8f30ce" translate="yes" xml:space="preserve">
          <source>Tests this abstract pathname for equality with the given object.</source>
          <target state="translated">この抽象パス名が与えられたオブジェクトと等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="8185668c507de23080233654f7132735fb11b3a2" translate="yes" xml:space="preserve">
          <source>Tests this abstract pathname for equality with the given object. Returns &lt;code&gt;true&lt;/code&gt; if and only if the argument is not &lt;code&gt;null&lt;/code&gt; and is an abstract pathname that denotes the same file or directory as this abstract pathname. Whether or not two abstract pathnames are equal depends upon the underlying system. On UNIX systems, alphabetic case is significant in comparing pathnames; on Microsoft Windows systems it is not.</source>
          <target state="translated">この抽象パス名が指定されたオブジェクトと等しいかどうかをテストします。引数が &lt;code&gt;null&lt;/code&gt; ではなく、この抽象パス名と同じファイルまたはディレクトリを示す抽象パス名で &lt;code&gt;true&lt;/code&gt; 場合にのみ、trueを返します。2つの抽象パス名が等しいかどうかは、基になるシステムによって異なります。UNIXシステムでは、パス名の比較で大文字と小文字が区別されます。Microsoft Windowsシステムではそうではありません。</target>
        </trans-unit>
        <trans-unit id="8a7b4b0ed52c412ae9ca7e3342ec3e2a832eaafd" translate="yes" xml:space="preserve">
          <source>Tests this module dependence for equality with the given object.</source>
          <target state="translated">このモジュールの依存性が、与えられたオブジェクトと等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="4a2d58c2f5e55a58d9d1e873e75b34200abaa17c" translate="yes" xml:space="preserve">
          <source>Tests this module descriptor for equality with the given object.</source>
          <target state="translated">このモジュール記述子が与えられたオブジェクトと等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="336612e4e4722df30106c25fe7243252cf0235e8" translate="yes" xml:space="preserve">
          <source>Tests this module export for equality with the given object.</source>
          <target state="translated">このモジュールのエクスポートが、指定されたオブジェクトと等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="d104ced5c631704b61281cb4e16dc923a1b23d92" translate="yes" xml:space="preserve">
          <source>Tests this module opens for equality with the given object.</source>
          <target state="translated">このモジュールが、与えられたオブジェクトと等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="2eaa42a3b280a02f2b19637b6bd7ae2a55a5cf90" translate="yes" xml:space="preserve">
          <source>Tests this module version for equality with the given object.</source>
          <target state="translated">このモジュールのバージョンが、与えられたオブジェクトと等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="bd16e5b1dd8414109e32095d1b2fc5d3ef832efe" translate="yes" xml:space="preserve">
          <source>Tests this path for equality with the given object.</source>
          <target state="translated">このパスが与えられたオブジェクトと等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="88ad4920855d3a389e18a155cc5768590d26c553" translate="yes" xml:space="preserve">
          <source>Tests this provides for equality with the given object.</source>
          <target state="translated">これが与えられたオブジェクトとの平等性を提供することをテストします。</target>
        </trans-unit>
        <trans-unit id="d850ad5f2176223630d3b998ff6138db29bbe571" translate="yes" xml:space="preserve">
          <source>Tests this resolved module for equality with the given object.</source>
          <target state="translated">この解決されたモジュールが、指定されたオブジェクトと等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="b39d332cf45d5b0f076fa28c3e7a76a07b75e797" translate="yes" xml:space="preserve">
          <source>Tests to see if all objects in the specified &lt;code&gt;Collection&lt;/code&gt; are children of this &lt;code&gt;BeanContext&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;Collection&lt;/code&gt; 内のすべてのオブジェクトがこの &lt;code&gt;BeanContext&lt;/code&gt; の子であるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="e9d13084255a8f619ecd7b330cc8b93642edb500" translate="yes" xml:space="preserve">
          <source>Tests to see if this &lt;code&gt;Timestamp&lt;/code&gt; object is equal to the given &lt;code&gt;Timestamp&lt;/code&gt; object.</source>
          <target state="translated">このどうかを判定し &lt;code&gt;Timestamp&lt;/code&gt; オブジェクトが指定されたに等しい &lt;code&gt;Timestamp&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="e12e6d0b54d586e19da24dec3bcb8bddbd6ac128" translate="yes" xml:space="preserve">
          <source>Tests to see if this &lt;code&gt;Timestamp&lt;/code&gt; object is equal to the given object.</source>
          <target state="translated">この &lt;code&gt;Timestamp&lt;/code&gt; オブジェクトが指定されたオブジェクトと等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="2c915fc19350a9e4430472b51454f1adb73b7fba" translate="yes" xml:space="preserve">
          <source>Tests to see if this &lt;code&gt;Timestamp&lt;/code&gt; object is equal to the given object. This version of the method &lt;code&gt;equals&lt;/code&gt; has been added to fix the incorrect signature of &lt;code&gt;Timestamp.equals(Timestamp)&lt;/code&gt; and to preserve backward compatibility with existing class files. Note: This method is not symmetric with respect to the &lt;code&gt;equals(Object)&lt;/code&gt; method in the base class.</source>
          <target state="translated">この &lt;code&gt;Timestamp&lt;/code&gt; オブジェクトが指定されたオブジェクトと等しいかどうかをテストします。このバージョンの &lt;code&gt;equals&lt;/code&gt; メソッドは、 &lt;code&gt;Timestamp.equals(Timestamp)&lt;/code&gt; の誤ったシグネチャを修正し、既存のクラスファイルとの下位互換性を維持するために追加されました。注：このメソッドは、基本クラスの &lt;code&gt;equals(Object)&lt;/code&gt; メソッドに関して対称ではありません。</target>
        </trans-unit>
        <trans-unit id="e179f12f5b169d478c209c6bf92d55e5010f1aa7" translate="yes" xml:space="preserve">
          <source>Tests to see if two class objects, or their names are equal.</source>
          <target state="translated">2つのクラスオブジェクト、またはその名前が等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="7a3ee955b8e8f25c927e3b6d3380851ca95a0288" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;code&gt;obj&lt;/code&gt; is a valid value for the attribute described by this &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; が、この &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; インスタンスによって記述された属性の有効な値であるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="0c3c9f5188c2093812bd09100f073d9005e454d7" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;code&gt;obj&lt;/code&gt; is a valid value for the parameter described by this &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; が、この &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; インスタンスによって記述されたパラメータの有効な値であるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="5ee8d9d840e314dd7edb34d6b6e2f22909af0dd5" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;var&gt;obj&lt;/var&gt; is a valid value for the parameter described by this &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; instance.</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; が、この &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; インスタンスによって記述されたパラメータの有効な値であるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="ea63b605375af93e8f4218759adec0285753101d" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;var&gt;obj&lt;/var&gt; is a value for this &lt;code&gt;ArrayType&lt;/code&gt; instance.</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; がこの &lt;code&gt;ArrayType&lt;/code&gt; インスタンスの値であるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="09f18d3421299a9203c6820ec747e5cdc6d592c7" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;var&gt;obj&lt;/var&gt; is a value for this &lt;code&gt;SimpleType&lt;/code&gt; instance.</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; がこの &lt;code&gt;SimpleType&lt;/code&gt; インスタンスの値であるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="c1317b510e9868f256fa88c8c4f898deb408dab5" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;var&gt;obj&lt;/var&gt; is a value for this open type.</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; がこの公開型の値かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="a9a650b1d1fd33079f9a91b8b70c7478363eed3b" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;var&gt;obj&lt;/var&gt; is a value which could be described by this &lt;code&gt;CompositeType&lt;/code&gt; instance.</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; がこの &lt;code&gt;CompositeType&lt;/code&gt; インスタンスで記述できる値かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="dc23e49656365a6cd2230de52d366a3321bdc591" translate="yes" xml:space="preserve">
          <source>Tests whether &lt;var&gt;obj&lt;/var&gt; is a value which could be described by this &lt;code&gt;TabularType&lt;/code&gt; instance.</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; がこの &lt;code&gt;TabularType&lt;/code&gt; インスタンスで記述できる値かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="560220faeabe7eb88a2bd982af7e1e8037cbf798" translate="yes" xml:space="preserve">
          <source>Tests whether a &lt;code&gt;Feature&lt;/code&gt; is supported on the current platform.</source>
          <target state="translated">&lt;code&gt;Feature&lt;/code&gt; が現在のプラットフォームでサポートされているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="52b3c1cd8e48ebe54bf56ea08b5ef0bd706e26f3" translate="yes" xml:space="preserve">
          <source>Tests whether a class is modifiable by &lt;a href=&quot;#retransformClasses(java.lang.Class...)&quot;&gt;retransformation&lt;/a&gt; or &lt;a href=&quot;#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt;redefinition&lt;/a&gt;.</source>
          <target state="translated">クラスが&lt;a href=&quot;#retransformClasses(java.lang.Class...)&quot;&gt;再変換&lt;/a&gt;または&lt;a href=&quot;#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt;再定義&lt;/a&gt;によって変更可能かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="08ce846909415caef7091ef3209ef86952974452" translate="yes" xml:space="preserve">
          <source>Tests whether a class is modifiable by &lt;a href=&quot;#retransformClasses(java.lang.Class...)&quot;&gt;retransformation&lt;/a&gt; or &lt;a href=&quot;#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt;redefinition&lt;/a&gt;. If a class is modifiable then this method returns &lt;code&gt;true&lt;/code&gt;. If a class is not modifiable then this method returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">クラスが&lt;a href=&quot;#retransformClasses(java.lang.Class...)&quot;&gt;再変換&lt;/a&gt;または&lt;a href=&quot;#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt;再定義&lt;/a&gt;によって変更可能かどうかをテストします。クラスが変更可能である場合、このメソッドは &lt;code&gt;true&lt;/code&gt; を返します。クラスが変更可能でない場合、このメソッドは &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="16c57ed3861fde80ea006b4f5db6d6651075ccaf" translate="yes" xml:space="preserve">
          <source>Tests whether a file exists.</source>
          <target state="translated">ファイルが存在するかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="e55210b46976197479747856de42825b74526f8c" translate="yes" xml:space="preserve">
          <source>Tests whether a file is a directory.</source>
          <target state="translated">ファイルがディレクトリであるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="542f4106bf6d1e5645787a6f05e46ce6647f7520" translate="yes" xml:space="preserve">
          <source>Tests whether a file is a regular file with opaque content.</source>
          <target state="translated">ファイルが不透明な内容の通常のファイルであるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="f7c4341fde49197a58ec6c6398b08419883b5b1f" translate="yes" xml:space="preserve">
          <source>Tests whether a file is a symbolic link.</source>
          <target state="translated">ファイルがシンボリックリンクであるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="217989ddd80256b020ec916a08f8ca26201c8038" translate="yes" xml:space="preserve">
          <source>Tests whether a file is executable.</source>
          <target state="translated">ファイルが実行可能かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="8af915de28f4424f5fb8c61b29c3bf344e84d747" translate="yes" xml:space="preserve">
          <source>Tests whether a file is executable. This method checks that a file exists and that this Java virtual machine has appropriate privileges to &lt;a href=&quot;../../lang/runtime#exec(java.lang.String)&quot;&gt;&lt;code&gt;execute&lt;/code&gt;&lt;/a&gt; the file. The semantics may differ when checking access to a directory. For example, on UNIX systems, checking for execute access checks that the Java virtual machine has permission to search the directory in order to access file or subdirectories.</source>
          <target state="translated">ファイルが実行可能かどうかをテストします。このメソッドは、ファイルが存在すること、およびこのJava仮想マシンがファイルを&lt;a href=&quot;../../lang/runtime#exec(java.lang.String)&quot;&gt; &lt;code&gt;execute&lt;/code&gt; &lt;/a&gt;の適切な特権を持っていることを確認します。ディレクトリへのアクセスをチェックするとき、セマンティクスは異なる場合があります。たとえば、UNIXシステムでは、実行アクセスをチェックすると、Java仮想マシンがファイルまたはサブディレクトリにアクセスするためにディレクトリを検索する権限を持っていることがチェックされます。</target>
        </trans-unit>
        <trans-unit id="57b242f176cba76759073790e01e5c16e37d426d" translate="yes" xml:space="preserve">
          <source>Tests whether a file is executable. This method checks that a file exists and that this Java virtual machine has appropriate privileges to &lt;a href=&quot;../../lang/runtime#exec-java.lang.String-&quot;&gt;&lt;code&gt;execute&lt;/code&gt;&lt;/a&gt; the file. The semantics may differ when checking access to a directory. For example, on UNIX systems, checking for execute access checks that the Java virtual machine has permission to search the directory in order to access file or subdirectories.</source>
          <target state="translated">ファイルが実行可能かどうかをテストします。このメソッドは、ファイルが存在すること、およびこのJava仮想マシンがファイルを&lt;a href=&quot;../../lang/runtime#exec-java.lang.String-&quot;&gt; &lt;code&gt;execute&lt;/code&gt; &lt;/a&gt;の適切な特権を持っていることを確認します。ディレクトリへのアクセスをチェックする場合、セマンティクスは異なる場合があります。たとえば、UNIXシステムでは、実行アクセスをチェックすると、Java仮想マシンに、ファイルまたはサブディレクトリにアクセスするためにディレクトリを検索する権限があるかどうかがチェックされます。</target>
        </trans-unit>
        <trans-unit id="1c6e750feecaf59d784cfdae8b4dbaaae0b57b2d" translate="yes" xml:space="preserve">
          <source>Tests whether a file is readable.</source>
          <target state="translated">ファイルが読めるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="4c1d0c6f81052671a7c870df818d10fd5e19b8a8" translate="yes" xml:space="preserve">
          <source>Tests whether a file is readable. This method checks that a file exists and that this Java virtual machine has appropriate privileges that would allow it open the file for reading. Depending on the implementation, this method may require to read file permissions, access control lists, or other file attributes in order to check the effective access to the file. Consequently, this method may not be atomic with respect to other file system operations.</source>
          <target state="translated">ファイルが読み取り可能かどうかをテストします。このメソッドは、ファイルが存在するかどうか、そしてこの Java 仮想マシンがファイルを開いて読むことを許可する適切な権限を持っているかどうかをチェックします。実装によっては、このメソッドは、ファイルへの有効なアクセスをチェックするために、ファイルのパーミッション、アクセス制御リスト、または他のファイル属性を読み込む必要がある場合があります。その結果、このメソッドは他のファイルシステム操作に関してはアトミックではないかもしれません。</target>
        </trans-unit>
        <trans-unit id="f127903f798e27c1f90f9c297286abdcdcb85f4f" translate="yes" xml:space="preserve">
          <source>Tests whether a file is writable.</source>
          <target state="translated">ファイルが書き込み可能かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="1b37ee2c3ed64224a7646a2acc2b895da858061e" translate="yes" xml:space="preserve">
          <source>Tests whether a file is writable. This method checks that a file exists and that this Java virtual machine has appropriate privileges that would allow it open the file for writing. Depending on the implementation, this method may require to read file permissions, access control lists, or other file attributes in order to check the effective access to the file. Consequently, this method may not be atomic with respect to other file system operations.</source>
          <target state="translated">ファイルが書き込み可能かどうかをテストします。このメソッドは、ファイルが存在し、このJava仮想マシンが書き込みのためにファイルを開くことを許可する適切な権限を持っているかどうかをチェックします。実装によっては、このメソッドは、ファイルへの有効なアクセスをチェックするために、ファイルのパーミッション、アクセス制御リスト、または他のファイル属性を読み取る必要がある場合があります。その結果、このメソッドは他のファイルシステム操作に関してはアトミックではない可能性があります。</target>
        </trans-unit>
        <trans-unit id="136809ed107e46f0027681c767513c383a9bdfb8" translate="yes" xml:space="preserve">
          <source>Tests whether a module can be modified with &lt;a href=&quot;#redefineModule(java.lang.Module,java.util.Set,java.util.Map,java.util.Map,java.util.Set,java.util.Map)&quot;&gt;&lt;code&gt;redefineModule&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">モジュールを用いて修飾することができるかどうかをテストし&lt;a href=&quot;#redefineModule(java.lang.Module,java.util.Set,java.util.Map,java.util.Map,java.util.Set,java.util.Map)&quot;&gt; &lt;code&gt;redefineModule&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c6495b44c6774d95ab9a63b920788aa2a3a9cee" translate="yes" xml:space="preserve">
          <source>Tests whether a module can be modified with &lt;a href=&quot;#redefineModule(java.lang.Module,java.util.Set,java.util.Map,java.util.Map,java.util.Set,java.util.Map)&quot;&gt;&lt;code&gt;redefineModule&lt;/code&gt;&lt;/a&gt;. If a module is modifiable then this method returns &lt;code&gt;true&lt;/code&gt;. If a module is not modifiable then this method returns &lt;code&gt;false&lt;/code&gt;. This method always returns &lt;code&gt;true&lt;/code&gt; when the module is an unnamed module (as redefining an unnamed module is a no-op).</source>
          <target state="translated">モジュールを用いて修飾することができるかどうかをテストし&lt;a href=&quot;#redefineModule(java.lang.Module,java.util.Set,java.util.Map,java.util.Map,java.util.Set,java.util.Map)&quot;&gt; &lt;code&gt;redefineModule&lt;/code&gt; &lt;/a&gt;。モジュールが変更可能である場合、このメソッドは &lt;code&gt;true&lt;/code&gt; を返します。モジュールが変更可能でない場合、このメソッドは &lt;code&gt;false&lt;/code&gt; を返します。モジュールが名前のないモジュールで &lt;code&gt;true&lt;/code&gt; 場合、このメソッドは常にtrueを返します（名前のないモジュールの再定義は操作なしであるため）。</target>
        </trans-unit>
        <trans-unit id="a0e9587817b247412b3ed76f215fb890711cfc0f" translate="yes" xml:space="preserve">
          <source>Tests whether a point lies after the rectangle range.</source>
          <target state="translated">点が矩形の範囲の後にあるかどうかを調べます。</target>
        </trans-unit>
        <trans-unit id="7beebd224f5d29686d8e0000706d66902a6acac3" translate="yes" xml:space="preserve">
          <source>Tests whether a point lies before the rectangle range.</source>
          <target state="translated">点が矩形の範囲の前にあるかどうかを調べます。</target>
        </trans-unit>
        <trans-unit id="e6bbb24d9ffe00468548c6feb606ba56593eb5b0" translate="yes" xml:space="preserve">
          <source>Tests whether an action is supported on the current platform.</source>
          <target state="translated">アクションが現在のプラットフォームでサポートされているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="1546e5637ac385eebb286647d7682c4a58bfa2ec" translate="yes" xml:space="preserve">
          <source>Tests whether one method, as a member of a given type, overrides another method.</source>
          <target state="translated">あるメソッドが、指定された型のメンバとして、別のメソッドを上書きするかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="ee78f9df0156bd4109254e370d0fd81b9fde5aaa" translate="yes" xml:space="preserve">
          <source>Tests whether one method, as a member of a given type, overrides another method. When a non-abstract method overrides an abstract one, the former is also said to</source>
          <target state="translated">あるメソッドが、指定された型のメンバとして別のメソッドを上書きするかどうかを調べます。抽象的ではないメソッドが抽象的なメソッドを上書きする場合、前者のメソッドは</target>
        </trans-unit>
        <trans-unit id="937647361fc8e4f4714b9f1ac28f7ca84263767e" translate="yes" xml:space="preserve">
          <source>Tests whether one type argument</source>
          <target state="translated">ある型の引数があるかどうかを調べる</target>
        </trans-unit>
        <trans-unit id="1a3525b9e276b94478f3cd645fca14717d320304" translate="yes" xml:space="preserve">
          <source>Tests whether one type is a subtype of another.</source>
          <target state="translated">ある型が他の型のサブタイプであるかどうかを調べます。</target>
        </trans-unit>
        <trans-unit id="47c2c60044600114f182b21e09ecd9618006261f" translate="yes" xml:space="preserve">
          <source>Tests whether one type is a subtype of another. Any type is considered to be a subtype of itself.</source>
          <target state="translated">ある型が他の型のサブタイプであるかどうかをテストします。どのような型でも、それ自体がサブタイプであるとみなされます。</target>
        </trans-unit>
        <trans-unit id="d666bdd33db05b74fec644c88d179beaf1a013a4" translate="yes" xml:space="preserve">
          <source>Tests whether one type is assignable to another.</source>
          <target state="translated">ある型が別の型に代入可能かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="4682067efb3c9f60d4687b0774f8a8c0d39bc437" translate="yes" xml:space="preserve">
          <source>Tests whether one type, method, or field hides another.</source>
          <target state="translated">ある型、メソッド、またはフィールドが別の型を隠すかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="c6d90df7f90edabeb7388abd0d34a71ab31f1747" translate="yes" xml:space="preserve">
          <source>Tests whether or not a display, keyboard, and mouse can be supported in this environment.</source>
          <target state="translated">この環境でディスプレイ、キーボード、マウスがサポートされているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="34f4c2d2e7203efad1136e3bee69ab36fe6c411e" translate="yes" xml:space="preserve">
          <source>Tests whether or not a display, keyboard, and mouse can be supported in this environment. If this method returns true, a HeadlessException is thrown from areas of the Toolkit and GraphicsEnvironment that are dependent on a display, keyboard, or mouse.</source>
          <target state="translated">この環境でディスプレイ、キーボード、マウスがサポートされているかどうかをテストします。このメソッドが true を返した場合、ディスプレイ、キーボード、マウスに依存している Toolkit および GraphicsEnvironment の領域から HeadlessException がスローされます。</target>
        </trans-unit>
        <trans-unit id="63375cbfddce8ad197372d1dc474f78da6ab7fb1" translate="yes" xml:space="preserve">
          <source>Tests whether or not the specified abstract pathname should be included in a pathname list.</source>
          <target state="translated">指定した抽象パス名をパス名リストに含めるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="7a5434f967fe50cca5e123260d28d44722c86b02" translate="yes" xml:space="preserve">
          <source>Tests whether the DOM implementation implements a specific feature and that feature is supported by this node, as specified in .</source>
          <target state="translated">で指定されているように、DOM の実装が特定の機能を実装しており、その機能がこのノードでサポートされているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="96f0fea2f2a48a6fd7f733bcc243c90c87d9b881" translate="yes" xml:space="preserve">
          <source>Tests whether the application can execute the file denoted by this abstract pathname.</source>
          <target state="translated">アプリケーションがこの抽象パス名で示されたファイルを実行できるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="449d58237e6201d5a084acfcc7306cbdcc83c392" translate="yes" xml:space="preserve">
          <source>Tests whether the application can execute the file denoted by this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to execute files that are not marked executable. Consequently this method may return &lt;code&gt;true&lt;/code&gt; even though the file does not have execute permissions.</source>
          <target state="translated">この抽象パス名が示すファイルをアプリケーションが実行できるかどうかをテストします。一部のプラットフォームでは、実行可能としてマークされていないファイルを実行できる特別な権限でJava仮想マシンを起動できる場合があります。その結果、ファイルに実行権限がない &lt;code&gt;true&lt;/code&gt; でも、このメソッドはtrueを返すことがあります。</target>
        </trans-unit>
        <trans-unit id="4185befc22a5267e0a129e68828bd87308a42a44" translate="yes" xml:space="preserve">
          <source>Tests whether the application can modify the file denoted by this abstract pathname.</source>
          <target state="translated">アプリケーションがこの抽象パス名で示されたファイルを変更できるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="9859e23a0ecf63cb3b1de0ab8d2c67c4659f743c" translate="yes" xml:space="preserve">
          <source>Tests whether the application can modify the file denoted by this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to modify files that are marked read-only. Consequently this method may return &lt;code&gt;true&lt;/code&gt; even though the file is marked read-only.</source>
          <target state="translated">アプリケーションがこの抽象パス名が示すファイルを変更できるかどうかをテストします。一部のプラットフォームでは、読み取り専用とマークされたファイルを変更できる特別な特権でJava仮想マシンを起動できる場合があります。その結果、ファイルが読み取り専用としてマークされている &lt;code&gt;true&lt;/code&gt; でも、このメソッドはtrueを返すことがあります。</target>
        </trans-unit>
        <trans-unit id="8cdcb874a87845dfe3cd4d10a04932bdd6be54b7" translate="yes" xml:space="preserve">
          <source>Tests whether the application can read the file denoted by this abstract pathname.</source>
          <target state="translated">アプリケーションがこの抽象パス名で示されたファイルを読み込めるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="6676e7b5ca356a16c50052dccf2586a312e98304" translate="yes" xml:space="preserve">
          <source>Tests whether the application can read the file denoted by this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to read files that are marked as unreadable. Consequently this method may return &lt;code&gt;true&lt;/code&gt; even though the file does not have read permissions.</source>
          <target state="translated">アプリケーションがこの抽象パス名が示すファイルを読み取ることができるかどうかをテストします。一部のプラットフォームでは、読み取り不可としてマークされたファイルを読み取ることができる特別な権限でJava仮想マシンを起動できる場合があります。したがって、ファイルに読み取り権限がない &lt;code&gt;true&lt;/code&gt; でも、このメソッドはtrueを返すことがあります。</target>
        </trans-unit>
        <trans-unit id="e2169b021e8bcd340e6002bbaa4a4a09f05e1738" translate="yes" xml:space="preserve">
          <source>Tests whether the current state is part of this stream.</source>
          <target state="translated">現在の状態がこのストリームの一部であるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="d597590a87ebf02c70353d64c7b2c0ff476ec580" translate="yes" xml:space="preserve">
          <source>Tests whether the current state is part of this stream. This method will return true if this filter accepts this event and false otherwise. The method should not change the state of the reader when accepting a state.</source>
          <target state="translated">現在の状態がこのストリームの一部であるかどうかを調べます。このメソッドは、このフィルタがこのイベントを受け入れた場合には真を返し、そうでない場合には偽を返します。このメソッドは、状態を受け入れる際にリーダの状態を変更してはいけません。</target>
        </trans-unit>
        <trans-unit id="ccdd662fcd18f231642d33da0bf43a40ffeee25e" translate="yes" xml:space="preserve">
          <source>Tests whether the current thread has been interrupted.</source>
          <target state="translated">現在のスレッドが中断されているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="394f5148380649e964324f6321d19c6327cf4592" translate="yes" xml:space="preserve">
          <source>Tests whether the current thread has been interrupted. The</source>
          <target state="translated">現在のスレッドが中断されたかどうかを調べます。このテストでは、現在のスレッドが中断されたかどうかを判定します。</target>
        </trans-unit>
        <trans-unit id="679a89b039ddf64a02747e3e89588ba3a1c240df" translate="yes" xml:space="preserve">
          <source>Tests whether the file denoted by this abstract pathname is a directory.</source>
          <target state="translated">この抽象パス名で示されるファイルがディレクトリであるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="3279fa940a2e62891f5334c9c2db059186e817a1" translate="yes" xml:space="preserve">
          <source>Tests whether the file denoted by this abstract pathname is a normal file.</source>
          <target state="translated">この抽象パス名で示されたファイルが通常のファイルであるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="7c38eca61501a25389b23d316859375b96a94484" translate="yes" xml:space="preserve">
          <source>Tests whether the file denoted by this abstract pathname is a normal file. A file is &lt;em&gt;normal&lt;/em&gt; if it is not a directory and, in addition, satisfies other system-dependent criteria. Any non-directory file created by a Java application is guaranteed to be a normal file.</source>
          <target state="translated">この抽象パス名が示すファイルが通常のファイルかどうかをテストします。ファイルがディレクトリでない場合は&lt;em&gt;通常&lt;/em&gt;のファイルであり、さらに他のシステム依存の基準も満たしています。Javaアプリケーションによって作成されたディレクトリ以外のファイルは、通常のファイルであることが保証されています。</target>
        </trans-unit>
        <trans-unit id="5441d10cfbe1f4eddfebfd9cdc96deefccff1f6d" translate="yes" xml:space="preserve">
          <source>Tests whether the file located by this path does not exist.</source>
          <target state="translated">このパスにあるファイルが存在しないかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="4c626c1458472affa0efc82fa870d149fc7a7a97" translate="yes" xml:space="preserve">
          <source>Tests whether the file located by this path does not exist. This method is intended for cases where it is required to take action when it can be confirmed that a file does not exist.</source>
          <target state="translated">このパスで指定したファイルが存在しないかどうかを判定します。このメソッドは、ファイルが存在しないことが確認できた場合に対応が必要な場合を想定しています。</target>
        </trans-unit>
        <trans-unit id="28fe06dc6fcbfa3f98a125bb6b6938007abc17c3" translate="yes" xml:space="preserve">
          <source>Tests whether the file named by this abstract pathname is a hidden file.</source>
          <target state="translated">この抽象パス名で命名されたファイルが隠しファイルであるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="621980ca7c2d295160c7aee5ac179778ede79f49" translate="yes" xml:space="preserve">
          <source>Tests whether the file named by this abstract pathname is a hidden file. The exact definition of &lt;em&gt;hidden&lt;/em&gt; is system-dependent. On UNIX systems, a file is considered to be hidden if its name begins with a period character (&lt;code&gt;'.'&lt;/code&gt;). On Microsoft Windows systems, a file is considered to be hidden if it has been marked as such in the filesystem.</source>
          <target state="translated">この抽象パス名で指定されたファイルが隠しファイルかどうかをテストします。&lt;em&gt;非表示&lt;/em&gt;の正確な定義はシステムに依存します。UNIXシステムでは、ファイル名がピリオド（ &lt;code&gt;'.'&lt;/code&gt; ）で始まっている場合、そのファイルは非表示と見なされます。Microsoft Windowsシステムでは、ファイルシステムでそのようにマークされているファイルは非表示と見なされます。</target>
        </trans-unit>
        <trans-unit id="829be859a830e8d4d199302ab454be743a076fb7" translate="yes" xml:space="preserve">
          <source>Tests whether the file or directory denoted by this abstract pathname exists.</source>
          <target state="translated">この抽象パス名で示されるファイルまたはディレクトリが存在するかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="410d9b737cd0f8c826c5f5fc7fc5c3c37af699bd" translate="yes" xml:space="preserve">
          <source>Tests whether the geometries of the two &lt;code&gt;Area&lt;/code&gt; objects are equal.</source>
          <target state="translated">2つの &lt;code&gt;Area&lt;/code&gt; オブジェクトのジオメトリが等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="1068452fc822637382827139d3118dab7a14ae71" translate="yes" xml:space="preserve">
          <source>Tests whether the geometries of the two &lt;code&gt;Area&lt;/code&gt; objects are equal. This method will return false if the argument is null.</source>
          <target state="translated">2つの &lt;code&gt;Area&lt;/code&gt; オブジェクトのジオメトリが等しいかどうかをテストします。引数がnullの場合、このメソッドはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="0e47046e7d62356bba9e96b8c625c7f3a5124930" translate="yes" xml:space="preserve">
          <source>Tests whether the list of timer notifications is empty.</source>
          <target state="translated">タイマー通知のリストが空かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="5cc51c3f502f39705f8790b6d99e9d397a59e6d0" translate="yes" xml:space="preserve">
          <source>Tests whether the monitor MBean is active.</source>
          <target state="translated">モニターMBeanがアクティブかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="bf4ffacac53d628be253e6b3e4b8a931458e1853" translate="yes" xml:space="preserve">
          <source>Tests whether the monitor MBean is active. A monitor MBean is marked active when the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. It becomes inactive when the &lt;a href=&quot;#stop()&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">モニターMBeanがアクティブかどうかをテストします。&lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されると、モニターMBeanはアクティブとしてマークされます。&lt;a href=&quot;#stop()&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されると非アクティブになります。</target>
        </trans-unit>
        <trans-unit id="3e2e63cd4c003030b4f5ed47b271b1efc0b962f9" translate="yes" xml:space="preserve">
          <source>Tests whether the monitor MBean is active. A monitor MBean is marked active when the &lt;a href=&quot;monitor#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. It becomes inactive when the &lt;a href=&quot;monitor#stop--&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">モニターMBeanがアクティブかどうかをテストします。&lt;a href=&quot;monitor#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されると、モニターMBeanはアクティブとしてマークされます。&lt;a href=&quot;monitor#stop--&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されると非アクティブになります。</target>
        </trans-unit>
        <trans-unit id="e79bdf1ec97466ca51133df8902cccbb4a201c5e" translate="yes" xml:space="preserve">
          <source>Tests whether the process represented by this &lt;code&gt;Process&lt;/code&gt; is alive.</source>
          <target state="translated">この &lt;code&gt;Process&lt;/code&gt; によって表されるプロセスが生きているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="86752fc7d9e598ddc99034a858801b254d416e62" translate="yes" xml:space="preserve">
          <source>Tests whether the process represented by this &lt;code&gt;ProcessHandle&lt;/code&gt; is alive.</source>
          <target state="translated">この &lt;code&gt;ProcessHandle&lt;/code&gt; で表されるプロセスが生きているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="9848f6eef450d3ef485bb0c145c12e19eccbef0f" translate="yes" xml:space="preserve">
          <source>Tests whether the process represented by this &lt;code&gt;ProcessHandle&lt;/code&gt; is alive. Process termination is implementation and operating system specific. The process is considered alive as long as the PID is valid.</source>
          <target state="translated">この &lt;code&gt;ProcessHandle&lt;/code&gt; で表されるプロセスが生きているかどうかをテストします。プロセスの終了は、実装およびオペレーティングシステムに固有です。PIDが有効である限り、プロセスは有効であると見なされます。</target>
        </trans-unit>
        <trans-unit id="9285a9b91548fe7a4e5aec9a3cc925964c023940" translate="yes" xml:space="preserve">
          <source>Tests whether the signature of one method is a</source>
          <target state="translated">あるメソッドのシグネチャが</target>
        </trans-unit>
        <trans-unit id="39e8d78c73b2d0973abc80bc677b95ba0f639284" translate="yes" xml:space="preserve">
          <source>Tests whether the specified object is a component in this list.</source>
          <target state="translated">指定されたオブジェクトがこのリストのコンポーネントであるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="08943a44f29a65037fa2c9ff30c174def355706b" translate="yes" xml:space="preserve">
          <source>Tests whether the specified object is in the set of observed MBeans.</source>
          <target state="translated">指定されたオブジェクトが観測されたMBeansのセットに含まれているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="517de79f4c34645266e36260f8f2eb5669925656" translate="yes" xml:space="preserve">
          <source>Tests whether the specified object reference is a key in this identity hash map.</source>
          <target state="translated">指定されたオブジェクト参照がこの ID ハッシュ・マップのキーであるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="41257b850be87f24028308b7ee700cb8f313aa2d" translate="yes" xml:space="preserve">
          <source>Tests whether the specified object reference is a value in this identity hash map.</source>
          <target state="translated">指定されたオブジェクト参照がこの ID ハッシュ・マップ内の値であるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="bb2ad3fa3eebd9fa1b12063691b05b71ceabbd87" translate="yes" xml:space="preserve">
          <source>Tests whether the subprocess represented by this &lt;code&gt;Process&lt;/code&gt; is alive.</source>
          <target state="translated">この &lt;code&gt;Process&lt;/code&gt; が表すサブプロセスが有効かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="2481f608cb7c5927fe3028ca3ba618ab1df44cec" translate="yes" xml:space="preserve">
          <source>Tests whether the timer MBean is active.</source>
          <target state="translated">タイマーMBeanがアクティブかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="a761fd9dff6458d3c727722f38e3d4609e0d23d9" translate="yes" xml:space="preserve">
          <source>Tests whether the timer MBean is active. A timer MBean is marked active when the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. It becomes inactive when the &lt;a href=&quot;#stop()&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">タイマーMBeanがアクティブかどうかをテストします。&lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されると、タイマーMBeanがアクティブとしてマークされます。&lt;a href=&quot;#stop()&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されると非アクティブになります。</target>
        </trans-unit>
        <trans-unit id="de2ba39ec9ae34b6dcd69b79c3b7c1da37286a76" translate="yes" xml:space="preserve">
          <source>Tests whether the timer MBean is active. A timer MBean is marked active when the &lt;a href=&quot;timer#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. It becomes inactive when the &lt;a href=&quot;timer#stop--&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">タイマーMBeanがアクティブかどうかをテストします。タイマーMBeanは、&lt;a href=&quot;timer#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されるとアクティブとしてマークされます。&lt;a href=&quot;timer#stop--&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されると非アクティブになります。</target>
        </trans-unit>
        <trans-unit id="547ac5deeface453e084d952565e6677afcb10ec" translate="yes" xml:space="preserve">
          <source>Tests whether the timer MBean is active. A timer MBean is marked active when the &lt;a href=&quot;timermbean#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. It becomes inactive when the &lt;a href=&quot;timermbean#stop--&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">タイマーMBeanがアクティブかどうかをテストします。タイマーMBeanは、&lt;a href=&quot;timermbean#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されるとアクティブとしてマークされます。&lt;a href=&quot;timermbean#stop--&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されると非アクティブになります。</target>
        </trans-unit>
        <trans-unit id="a7c1c9f1d9f9ad34794cb17238bc365b1787e207" translate="yes" xml:space="preserve">
          <source>Tests whether this &lt;code&gt;Area&lt;/code&gt; consists entirely of straight edged polygonal geometry.</source>
          <target state="translated">この &lt;code&gt;Area&lt;/code&gt; 完全にストレートエッジのポリゴンジオメトリで構成されているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="b3ecfead75f6462876c9aa7dd3147d68d149af89" translate="yes" xml:space="preserve">
          <source>Tests whether this &lt;code&gt;Area&lt;/code&gt; is comprised of a single closed subpath.</source>
          <target state="translated">この &lt;code&gt;Area&lt;/code&gt; が単一の閉じたサブパスで構成されているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="510ad4b8e113d91f39367dc963156350118b24a2" translate="yes" xml:space="preserve">
          <source>Tests whether this &lt;code&gt;Area&lt;/code&gt; is comprised of a single closed subpath. This method returns &lt;code&gt;true&lt;/code&gt; if the path contains 0 or 1 subpaths, or &lt;code&gt;false&lt;/code&gt; if the path contains more than 1 subpath. The subpaths are counted by the number of &lt;a href=&quot;pathiterator#SEG_MOVETO&quot;&gt;&lt;code&gt;SEG_MOVETO&lt;/code&gt;&lt;/a&gt; segments that appear in the path.</source>
          <target state="translated">この &lt;code&gt;Area&lt;/code&gt; が単一の閉じたサブパスで構成されているかどうかをテストします。このメソッドは、パスに0または1つのサブパスが含まれている場合は &lt;code&gt;true&lt;/code&gt; を返し、パスに複数のサブパスが含まれている場合は &lt;code&gt;false&lt;/code&gt; を返します。サブパスは、パスに表示される&lt;a href=&quot;pathiterator#SEG_MOVETO&quot;&gt; &lt;code&gt;SEG_MOVETO&lt;/code&gt; &lt;/a&gt;セグメントの数によってカウントされます。</target>
        </trans-unit>
        <trans-unit id="b5605f0dddcc0b3da7ea6891ff842ebb50922db2" translate="yes" xml:space="preserve">
          <source>Tests whether this &lt;code&gt;Area&lt;/code&gt; is rectangular in shape.</source>
          <target state="translated">この &lt;code&gt;Area&lt;/code&gt; 形状が長方形であるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="cad6754c5064661920412b5cee3926ce0dc38608" translate="yes" xml:space="preserve">
          <source>Tests whether this &lt;code&gt;Area&lt;/code&gt; object encloses any area.</source>
          <target state="translated">この &lt;code&gt;Area&lt;/code&gt; オブジェクトが任意の領域を囲んでいるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="90545305d1150de0e9ff72696a3638bb3eb2dd2b" translate="yes" xml:space="preserve">
          <source>Tests whether this abstract pathname is absolute.</source>
          <target state="translated">この抽象パス名が絶対パス名であるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="88648f28bcebd3dd55ad5a0bf07ef64871f4478e" translate="yes" xml:space="preserve">
          <source>Tests whether this abstract pathname is absolute. The definition of absolute pathname is system dependent. On UNIX systems, a pathname is absolute if its prefix is &lt;code&gt;&quot;/&quot;&lt;/code&gt;. On Microsoft Windows systems, a pathname is absolute if its prefix is a drive specifier followed by &lt;code&gt;&quot;\\&quot;&lt;/code&gt;, or if its prefix is &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt;.</source>
          <target state="translated">この抽象パス名が絶対パスかどうかをテストします。絶対パス名の定義はシステムに依存します。UNIXシステムでは、プレフィックスが &lt;code&gt;&quot;/&quot;&lt;/code&gt; の場合、パス名は絶対パスです。Microsoft Windowsシステムでは、プレフィックスがドライブ指定子の後に &lt;code&gt;&quot;\\&quot;&lt;/code&gt; が続く場合、またはプレフィックスが &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt; の場合、パス名は絶対パスです。</target>
        </trans-unit>
        <trans-unit id="61cb38f3fbbc9febad05d4d0dcfab6b44b650df8" translate="yes" xml:space="preserve">
          <source>Tests whether this audio input stream supports the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; methods.</source>
          <target state="translated">このオーディオ入力ストリームが &lt;code&gt;mark&lt;/code&gt; および &lt;code&gt;reset&lt;/code&gt; メソッドをサポートするかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="1b293ca7b9d9fa4ed14696344dc8b88e6fc06bed" translate="yes" xml:space="preserve">
          <source>Tests whether this class is supported on the current platform.</source>
          <target state="translated">このクラスが現在のプラットフォームでサポートされているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="360d96897c5b49aba4b97278fa4d64c53a5bfc2b" translate="yes" xml:space="preserve">
          <source>Tests whether this class is supported on the current platform. If it's supported, use &lt;a href=&quot;#getDesktop()&quot;&gt;&lt;code&gt;getDesktop()&lt;/code&gt;&lt;/a&gt; to retrieve an instance.</source>
          <target state="translated">このクラスが現在のプラットフォームでサポートされているかどうかをテストします。サポートされている場合は、&lt;a href=&quot;#getDesktop()&quot;&gt; &lt;code&gt;getDesktop()&lt;/code&gt; &lt;/a&gt;を使用してインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="603bf3cd410f4a301bc5672842c41d040af34ce4" translate="yes" xml:space="preserve">
          <source>Tests whether this class is supported on the current platform. If it's supported, use &lt;a href=&quot;#getTaskbar()&quot;&gt;&lt;code&gt;getTaskbar()&lt;/code&gt;&lt;/a&gt; to retrieve an instance.</source>
          <target state="translated">このクラスが現在のプラットフォームでサポートされているかどうかをテストします。サポートされている場合は、&lt;a href=&quot;#getTaskbar()&quot;&gt; &lt;code&gt;getTaskbar()&lt;/code&gt; &lt;/a&gt;を使用してインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="d9bcc58fc6eb90b5ba3d911ec86fcf67324c37a8" translate="yes" xml:space="preserve">
          <source>Tests whether this event is part of this stream.</source>
          <target state="translated">このイベントがこのストリームの一部であるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="e0cbc9991650b5ff29d026c4e11e161916cf938d" translate="yes" xml:space="preserve">
          <source>Tests whether this event is part of this stream. This method will return true if this filter accepts this event and false otherwise.</source>
          <target state="translated">このイベントがこのストリームの一部であるかどうかを調べます。このメソッドは、このフィルタがこのイベントを受け入れた場合には true を返し、受け入れなかった場合には false を返します。</target>
        </trans-unit>
        <trans-unit id="264a787abc1d0c3b33b27ca3013fb89e0308caac" translate="yes" xml:space="preserve">
          <source>Tests whether this key's channel has either finished, or failed to finish, its socket-connection operation.</source>
          <target state="translated">このキーのチャネルがソケット接続を終了したか失敗したかを判定する。</target>
        </trans-unit>
        <trans-unit id="fabf0adae88981842164d4747c7f777d89cabbbd" translate="yes" xml:space="preserve">
          <source>Tests whether this key's channel is ready for reading.</source>
          <target state="translated">このキーのチャンネルが読み込み可能かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="b79264cb18b35fc13ad5264a1a9612e4da97144a" translate="yes" xml:space="preserve">
          <source>Tests whether this key's channel is ready for writing.</source>
          <target state="translated">このキーのチャンネルが書き込み可能かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="dddd1a800000dae101aac1e89fcdec3b08c15ac2" translate="yes" xml:space="preserve">
          <source>Tests whether this key's channel is ready to accept a new socket connection.</source>
          <target state="translated">このキーのチャンネルが新しいソケット接続を受け入れる準備ができているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="2c9688f595972d1bde0f253122cc4e0fd7e06efc" translate="yes" xml:space="preserve">
          <source>Tests whether this list has any components.</source>
          <target state="translated">このリストにコンポーネントがあるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="374c842a9d2e4f4525ac81dd53a2ea29f1b17eda" translate="yes" xml:space="preserve">
          <source>Tests whether this thread has been interrupted.</source>
          <target state="translated">このスレッドが中断されたかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="5d878c471adbc9b2c8a9fa6dbce748ad8cd28072" translate="yes" xml:space="preserve">
          <source>Tests whether this thread has been interrupted. The</source>
          <target state="translated">このスレッドが中断されたかどうかを調べます。このスレッドが中断されたかどうかを調べるには</target>
        </trans-unit>
        <trans-unit id="3392e47c46aa945b753998473d535e85a39484fd" translate="yes" xml:space="preserve">
          <source>Tests whether two &lt;code&gt;TypeMirror&lt;/code&gt; objects represent the same type.</source>
          <target state="translated">2つの &lt;code&gt;TypeMirror&lt;/code&gt; オブジェクトが同じ型を表すかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="31d0256d84b4956cc509f70c7d5f6aeee9d2f47e" translate="yes" xml:space="preserve">
          <source>Tests whether two nodes are equal.</source>
          <target state="translated">2つのノードが等しいかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="c3328c39b0e29f78e9ff45db674248b1d245887d" translate="yes" xml:space="preserve">
          <source>Text</source>
          <target state="translated">Text</target>
        </trans-unit>
        <trans-unit id="890e885d9e116b52f69e2ef63c1003d7d11c8d34" translate="yes" xml:space="preserve">
          <source>Text - the textual equivalent for the value</source>
          <target state="translated">テキスト-値のテキストに相当するもの.</target>
        </trans-unit>
        <trans-unit id="9de7e07004ed9106d2edbd1bcaf9994263874e01" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint key.</source>
          <target state="translated">テキストのアンチエイリアスヒントキー。</target>
        </trans-unit>
        <trans-unit id="3548f4b3efb498e15d4889e95e644a67e943b1cb" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint key. The &lt;code&gt;TEXT_ANTIALIASING&lt;/code&gt; hint can control the use of antialiasing algorithms for text independently of the choice used for shape rendering. Often an application may want to use antialiasing for text only and not for other shapes. Additionally, the algorithms for reducing the aliasing artifacts for text are often more sophisticated than those that have been developed for general rendering so this hint key provides additional values which can control the choices of some of those text-specific algorithms. If left in the &lt;code&gt;DEFAULT&lt;/code&gt; state, this hint will generally defer to the value of the regular &lt;a href=&quot;#KEY_ANTIALIASING&quot;&gt;&lt;code&gt;KEY_ANTIALIASING&lt;/code&gt;&lt;/a&gt; hint key.</source>
          <target state="translated">テキストアンチエイリアスヒントキー。 &lt;code&gt;TEXT_ANTIALIASING&lt;/code&gt; のヒントは、独立形状のレンダリングに使用する任意のテキストのためのアンチエイリアシングアルゴリズムの使用を制御することができます。多くの場合、アプリケーションは、他の形状ではなく、テキストのみにアンチエイリアスを使用することをお勧めします。さらに、テキストのエイリアシングアーティファクトを減らすためのアルゴリズムは、一般的なレンダリング用に開発されたものよりも洗練されていることが多いため、このヒントキーは、これらのテキスト固有のアルゴリズムのいくつかの選択を制御できる追加の値を提供します。 &lt;code&gt;DEFAULT&lt;/code&gt; 状態のままにすると、このヒントは通常、通常の&lt;a href=&quot;#KEY_ANTIALIASING&quot;&gt; &lt;code&gt;KEY_ANTIALIASING&lt;/code&gt; &lt;/a&gt;ヒントキーの値に従います。</target>
        </trans-unit>
        <trans-unit id="89e78967f3424501a26b747836abecb10364b869" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- request that text be displayed optimised for an LCD display with subpixel organisation from display top to bottom of B,G,R such that the vertical subpixel resolution is three times that of the full pixel vertical resolution (VBGR).</source>
          <target state="translated">テキストアンチエイリアシングヒント値 --テキストがLCDディスプレイに最適化されて表示されるように要求し、垂直サブピクセル解像度がフルピクセル垂直解像度(VBGR)の3倍になるように、ディスプレイの上からB,G,Rの下までサブピクセルを構成します。</target>
        </trans-unit>
        <trans-unit id="b50b387a5c823fe052834cdced673f842f004f9a" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- request that text be displayed optimised for an LCD display with subpixel organisation from display top to bottom of B,G,R such that the vertical subpixel resolution is three times that of the full pixel vertical resolution (VBGR). Vertical orientation is very uncommon and probably mainly useful for a physically rotated display. Selecting this hint for displays with one of the other LCD subpixel configurations will likely result in unfocused text. See &lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_LCD_HRGB&quot;&gt;&lt;code&gt;VALUE_TEXT_ANTIALIAS_LCD_HRGB&lt;/code&gt;&lt;/a&gt;, for more information on when this hint is applied.</source>
          <target state="translated">テキストアンチエイリアスのヒント値-垂直サブピクセル解像度がフルピクセル垂直解像度（VBGR）の3倍になるように、B、G、Rのディスプレイの上から下までサブピクセル構成のLCDディスプレイ用に最適化されたテキストを表示するように要求します。垂直方向は非常にまれであり、おそらく主に物理的に回転したディスプレイに役立ちます。他のLCDサブピクセル構成のいずれかを使用するディスプレイでこのヒントを選択すると、テキストの焦点が合わなくなる可能性があります。このヒントがいつ適用されるかについての詳細は、&lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_LCD_HRGB&quot;&gt; &lt;code&gt;VALUE_TEXT_ANTIALIAS_LCD_HRGB&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="16243cafd25cd328847eac0f34519c3d0922c4a9" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- request that text be displayed optimised for an LCD display with subpixel organisation from display top to bottom of R,G,B such that the vertical subpixel resolution is three times that of the full pixel vertical resolution (VRGB).</source>
          <target state="translated">テキストのアンチエイリアシングヒント値 --テキストがLCDディスプレイに最適化されて表示されるように要求します。</target>
        </trans-unit>
        <trans-unit id="d20546820370445fb3fd1c54fe1e2d59225d9ab5" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- request that text be displayed optimised for an LCD display with subpixel organisation from display top to bottom of R,G,B such that the vertical subpixel resolution is three times that of the full pixel vertical resolution (VRGB). Vertical orientation is very uncommon and probably mainly useful for a physically rotated display. Selecting this hint for displays with one of the other LCD subpixel configurations will likely result in unfocused text. See &lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_LCD_HRGB&quot;&gt;&lt;code&gt;VALUE_TEXT_ANTIALIAS_LCD_HRGB&lt;/code&gt;&lt;/a&gt;, for more information on when this hint is applied.</source>
          <target state="translated">テキストアンチエイリアスのヒント値-垂直サブピクセル解像度がフルピクセル垂直解像度（VRGB）の3倍になるように、R、G、Bのディスプレイの上から下までサブピクセル構成のLCDディスプレイ用に最適化されたテキストを表示するように要求します。垂直方向は非常にまれであり、おそらく主に物理的に回転したディスプレイに役立ちます。他のLCDサブピクセル構成のいずれかを使用するディスプレイでこのヒントを選択すると、テキストの焦点が合わなくなる可能性があります。このヒントがいつ適用されるかについての詳細は、&lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_LCD_HRGB&quot;&gt; &lt;code&gt;VALUE_TEXT_ANTIALIAS_LCD_HRGB&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="04c8208a9f2e940d9f66287ac34781e81967cd32" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- request that text be displayed optimised for an LCD display with subpixels in order from display left to right of B,G,R such that the horizontal subpixel resolution is three times that of the full pixel horizontal resolution (HBGR).</source>
          <target state="translated">テキストアンチエイリアシングヒント値 --B,G,Rの左から順にサブピクセルが表示され、水平サブピクセル解像度がフルピクセル水平解像度(HBGR)の3倍になるように、テキストがLCDディスプレイに最適化されて表示されるように要求します。</target>
        </trans-unit>
        <trans-unit id="892b33c5dfa6ee611770a88b49497426a72fd3a4" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- request that text be displayed optimised for an LCD display with subpixels in order from display left to right of B,G,R such that the horizontal subpixel resolution is three times that of the full pixel horizontal resolution (HBGR). This is a much less common configuration than HRGB. Selecting this hint for displays with one of the other LCD subpixel configurations will likely result in unfocused text. See &lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_LCD_HRGB&quot;&gt;&lt;code&gt;VALUE_TEXT_ANTIALIAS_LCD_HRGB&lt;/code&gt;&lt;/a&gt;, for more information on when this hint is applied.</source>
          <target state="translated">テキストアンチエイリアシングのヒント値-水平サブピクセル解像度がフルピクセル水平解像度（HBGR）の3倍になるように、B、G、Rの左から右に表示される順に、サブピクセルを含むLCDディスプレイ用に最適化されたテキストを表示するように要求します。 。これは、HRGBよりもはるかに一般的ではない構成です。他のLCDサブピクセル構成のいずれかを使用するディスプレイでこのヒントを選択すると、テキストの焦点が合わなくなる可能性があります。このヒントがいつ適用されるかについての詳細は、&lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_LCD_HRGB&quot;&gt; &lt;code&gt;VALUE_TEXT_ANTIALIAS_LCD_HRGB&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b68616cd28023f13583c6d2a8b03f38dd0ecf897" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- request that text be displayed optimised for an LCD display with subpixels in order from display left to right of R,G,B such that the horizontal subpixel resolution is three times that of the full pixel horizontal resolution (HRGB).</source>
          <target state="translated">テキストアンチエイリアシングヒント値 --R,G,Bの左から順にサブピクセルが表示され、水平サブピクセル解像度がフルピクセル水平解像度(HRGB)の3倍になるように、液晶ディスプレイに最適化して表示されるように要求します。</target>
        </trans-unit>
        <trans-unit id="74c803cfec98fc159a7495de576591f755fd81e0" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- request that text be displayed optimised for an LCD display with subpixels in order from display left to right of R,G,B such that the horizontal subpixel resolution is three times that of the full pixel horizontal resolution (HRGB). This is the most common configuration. Selecting this hint for displays with one of the other LCD subpixel configurations will likely result in unfocused text.</source>
          <target state="translated">テキスト・アンチエイリアシング・ヒント値 --R,G,Bの左から右にサブピクセルを並べたLCDディスプレイに最適化されたテキスト表示を要求し、水平サブピクセル解像度がフルピクセル水平解像度(HRGB)の3倍になるようにします。これが最も一般的な構成である。他のLCDサブピクセル構成のディスプレイでこのヒントを選択すると、テキストの焦点が合わなくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="32d4180bdc5f9b73b6e8be2e65354553f987b740" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- text rendering is done according to the &lt;a href=&quot;#KEY_ANTIALIASING&quot;&gt;&lt;code&gt;KEY_ANTIALIASING&lt;/code&gt;&lt;/a&gt; hint or a default chosen by the implementation.</source>
          <target state="translated">テキストアンチエイリアスヒント値-テキストレンダリングは、&lt;a href=&quot;#KEY_ANTIALIASING&quot;&gt; &lt;code&gt;KEY_ANTIALIASING&lt;/code&gt; &lt;/a&gt;ヒントまたは実装によって選択されたデフォルトに従って実行されます。</target>
        </trans-unit>
        <trans-unit id="f2652b8a69967b4ee9909c12148770777e07354b" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- text rendering is done with some form of antialiasing.</source>
          <target state="translated">テキストのアンチエイリアスヒント値 --テキストのレンダリングは、何らかのアンチエイリアスを使って行われます。</target>
        </trans-unit>
        <trans-unit id="a4493609891ff2e4b3855ca0cb6591425939d42c" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- text rendering is done without any form of antialiasing.</source>
          <target state="translated">テキストアンチエイリアスヒントの値 --テキストのレンダリングはアンチエイリアスなしで行われます。</target>
        </trans-unit>
        <trans-unit id="45888e5c919cb2cd9e63ecc70eb7a7512a76ebaf" translate="yes" xml:space="preserve">
          <source>Text antialiasing hint value -- text rendering is requested to use information in the font resource which specifies for each point size whether to apply &lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_ON&quot;&gt;&lt;code&gt;VALUE_TEXT_ANTIALIAS_ON&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_OFF&quot;&gt;&lt;code&gt;VALUE_TEXT_ANTIALIAS_OFF&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">テキストアンチエイリアスのヒント値-テキストレンダリングは、各ポイントサイズに&lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_ON&quot;&gt; &lt;code&gt;VALUE_TEXT_ANTIALIAS_ON&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_OFF&quot;&gt; &lt;code&gt;VALUE_TEXT_ANTIALIAS_OFF&lt;/code&gt; の&lt;/a&gt;どちらを適用するかを指定するフォントリソース内の情報を使用するように要求されます。</target>
        </trans-unit>
        <trans-unit id="ec4d19a132304fb6e74d8275ddfc3762ef4579c0" translate="yes" xml:space="preserve">
          <source>Text components provide a number of commands that can be used to manipulate the component. This is essentially the way that the component expresses its capabilities. These are expressed in terms of the swing &lt;code&gt;Action&lt;/code&gt; interface, using the &lt;code&gt;TextAction&lt;/code&gt; implementation. The set of commands supported by the text component can be found with the &lt;a href=&quot;#getActions()&quot;&gt;&lt;code&gt;getActions()&lt;/code&gt;&lt;/a&gt; method. These actions can be bound to key events, fired from buttons, etc.</source>
          <target state="translated">テキストコンポーネントは、コンポーネントを操作するために使用できるいくつかのコマンドを提供します。これは基本的に、コンポーネントがその機能を表現する方法です。これらは、スイングの用語で表現されている &lt;code&gt;Action&lt;/code&gt; 使用して、インターフェイス &lt;code&gt;TextAction&lt;/code&gt; のの実装を。テキストコンポーネントでサポートされているコマンドのセットは、&lt;a href=&quot;#getActions()&quot;&gt; &lt;code&gt;getActions()&lt;/code&gt; &lt;/a&gt;メソッドで見つけることができます。これらのアクションは、キーイベントにバインドしたり、ボタンから起動したりできます。</target>
        </trans-unit>
        <trans-unit id="ec933e87a4586e6cb5f4556ab10c88c9b0551d52" translate="yes" xml:space="preserve">
          <source>Text direction.</source>
          <target state="translated">テキストの方向。</target>
        </trans-unit>
        <trans-unit id="686a7f5eb7f1648068affaa7ed032380382004d9" translate="yes" xml:space="preserve">
          <source>Text editor user interface</source>
          <target state="translated">テキストエディタのユーザーインターフェース</target>
        </trans-unit>
        <trans-unit id="2c236b72cbb10f9edd52606dbd5c76f63dcab538" translate="yes" xml:space="preserve">
          <source>Text events are enabled via &lt;code&gt;enableEvents&lt;/code&gt;</source>
          <target state="translated">テキストイベントは &lt;code&gt;enableEvents&lt;/code&gt; を介して有効になります</target>
        </trans-unit>
        <trans-unit id="1c4f2b895cd5304555ae25ed192df74b0fa42e40" translate="yes" xml:space="preserve">
          <source>Text icon gap</source>
          <target state="translated">テキストアイコンのギャップ</target>
        </trans-unit>
        <trans-unit id="75e3ea342081cafec7f96bff36c8f55abde348c6" translate="yes" xml:space="preserve">
          <source>Text is rarely represented simply as featureless content. Rather, text typically has some sort of structure associated with it. Exactly what structure is modeled is up to a particular Document implementation. It might be as simple as no structure (i.e. a simple text field), or it might be something like diagram below.</source>
          <target state="translated">テキストは、単に特徴のないコンテンツとして表現されることはほとんどありません。むしろ、テキストは一般的に何らかの構造を持っています。正確にどのような構造がモデル化されるかは、特定の Document の実装次第です。それは、構造がないような単純なもの(つまり単純なテキストフィールド)かもしれませんし、下の図のようなものかもしれません。</target>
        </trans-unit>
        <trans-unit id="2cd4f4ad22e30894dfd760bd655d6ca0d4086566" translate="yes" xml:space="preserve">
          <source>Text of notification.</source>
          <target state="translated">通知のテキスト。</target>
        </trans-unit>
        <trans-unit id="84b5008a43352c30bd5e7e53bc20f84945a7b7b7" translate="yes" xml:space="preserve">
          <source>Text styles define three sizes for the formatted text - 'full', 'short' and 'narrow'. Each of these three sizes is available in both 'standard' and 'stand-alone' variations.</source>
          <target state="translated">テキストスタイルは、フォーマットされたテキストに「フル」、「ショート」、「ナロー」の3つのサイズを定義します。これらの3つのサイズはそれぞれ、「標準」と「スタンドアロン」の両方のバリエーションで利用できます。</target>
        </trans-unit>
        <trans-unit id="c62d559f76902e22c7828bf2006e005bb471e6ef" translate="yes" xml:space="preserve">
          <source>TextAction</source>
          <target state="translated">TextAction</target>
        </trans-unit>
        <trans-unit id="6803da9ee11ff492530f9c8867cacf0bf23256dc" translate="yes" xml:space="preserve">
          <source>TextArea</source>
          <target state="translated">TextArea</target>
        </trans-unit>
        <trans-unit id="1141a05ff6115572b6faf474f48a70085ad86ad3" translate="yes" xml:space="preserve">
          <source>TextArea region.</source>
          <target state="translated">TextArea領域。</target>
        </trans-unit>
        <trans-unit id="33f1c6b88b8ac58976d6ed7604232a6850c5dd96" translate="yes" xml:space="preserve">
          <source>TextArea region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;TextArea&lt;/code&gt;.</source>
          <target state="translated">TextAreaリージョン。スタイルをこの &lt;code&gt;Region&lt;/code&gt; バインドするには、 &lt;code&gt;TextArea&lt;/code&gt; という名前を使用します。</target>
        </trans-unit>
        <trans-unit id="9b9731723801d8367069023825529aad1bdc6179" translate="yes" xml:space="preserve">
          <source>TextArea.AccessibleAWTTextArea</source>
          <target state="translated">TextArea.AccessibleAWTTextArea</target>
        </trans-unit>
        <trans-unit id="cc6d5965106a97b437c821b506e6a6cc0b02b3a8" translate="yes" xml:space="preserve">
          <source>TextAttribute</source>
          <target state="translated">TextAttribute</target>
        </trans-unit>
        <trans-unit id="c657b178630e6ecddad573a066553cba3a050c9e" translate="yes" xml:space="preserve">
          <source>TextComponent</source>
          <target state="translated">TextComponent</target>
        </trans-unit>
        <trans-unit id="409e7e5277c74ad4ad57874777acc41ef06508d8" translate="yes" xml:space="preserve">
          <source>TextComponent.AccessibleAWTTextComponent</source>
          <target state="translated">TextComponent.AccessibleAWTTextComponent</target>
        </trans-unit>
        <trans-unit id="80694b2807ac275fa1b332f2b5daf26e73cbdaf5" translate="yes" xml:space="preserve">
          <source>TextEvent</source>
          <target state="translated">TextEvent</target>
        </trans-unit>
        <trans-unit id="ed595662ad10d27de0f2faece995e2ca2b8e7012" translate="yes" xml:space="preserve">
          <source>TextField</source>
          <target state="translated">TextField</target>
        </trans-unit>
        <trans-unit id="efb4de1491efa73753a852ae412adb6ec35c4e35" translate="yes" xml:space="preserve">
          <source>TextField region.</source>
          <target state="translated">テキストフィールド領域。</target>
        </trans-unit>
        <trans-unit id="173f00afca6f72be7f67b2d86bbc2e9bf81fb8c5" translate="yes" xml:space="preserve">
          <source>TextField region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;TextField&lt;/code&gt;.</source>
          <target state="translated">TextField領域。スタイルをこの &lt;code&gt;Region&lt;/code&gt; バインドするには、 &lt;code&gt;TextField&lt;/code&gt; という名前を使用します。</target>
        </trans-unit>
        <trans-unit id="0a8b5cc425a1410c3a0324cc07d2dfea9dbbfb58" translate="yes" xml:space="preserve">
          <source>TextField.AccessibleAWTTextField</source>
          <target state="translated">TextField.AccessibleAWTTextField</target>
        </trans-unit>
        <trans-unit id="45936df229c89a809f511cda10486846f3904399" translate="yes" xml:space="preserve">
          <source>TextFieldBorder</source>
          <target state="translated">TextFieldBorder</target>
        </trans-unit>
        <trans-unit id="2ebbd96a512872d328e1c81998e69ecc7e7bc8f1" translate="yes" xml:space="preserve">
          <source>TextHitInfo</source>
          <target state="translated">TextHitInfo</target>
        </trans-unit>
        <trans-unit id="c0a019987906550410814728141e87a01dcb706d" translate="yes" xml:space="preserve">
          <source>TextInputCallback</source>
          <target state="translated">TextInputCallback</target>
        </trans-unit>
        <trans-unit id="3fde12722a72456d8e4d6445b0a9a4654cb73300" translate="yes" xml:space="preserve">
          <source>TextInputCallback.getDefaultText()</source>
          <target state="translated">TextInputCallback.getDefaultText()</target>
        </trans-unit>
        <trans-unit id="0a5e8244825ced667ef0950c3decd6960ad62616" translate="yes" xml:space="preserve">
          <source>TextInputCallback.getPrompt()</source>
          <target state="translated">TextInputCallback.getPrompt()</target>
        </trans-unit>
        <trans-unit id="97cad89ebd01bcfd907d406cd9142c54409b192f" translate="yes" xml:space="preserve">
          <source>TextInputCallback.getText()</source>
          <target state="translated">TextInputCallback.getText()</target>
        </trans-unit>
        <trans-unit id="628928dea47b979f7fd4227e346208d91c210955" translate="yes" xml:space="preserve">
          <source>TextInputCallback.setText()</source>
          <target state="translated">TextInputCallback.setText()</target>
        </trans-unit>
        <trans-unit id="4948ddaa99e72ebe224bd404badce3f161ed78fd" translate="yes" xml:space="preserve">
          <source>TextLayout</source>
          <target state="translated">TextLayout</target>
        </trans-unit>
        <trans-unit id="95225223b54e70cbfa25c515904e18b25b0ad0de" translate="yes" xml:space="preserve">
          <source>TextLayout.CaretPolicy</source>
          <target state="translated">TextLayout.CaretPolicy</target>
        </trans-unit>
        <trans-unit id="f2c786dd8931cbf2877be0d05cee324ca3a30c60" translate="yes" xml:space="preserve">
          <source>TextListener</source>
          <target state="translated">TextListener</target>
        </trans-unit>
        <trans-unit id="ae7786ce5d880244d2f1d13c8a4815cac129b515" translate="yes" xml:space="preserve">
          <source>TextListener notification of a text value change.</source>
          <target state="translated">テキスト値の変更をテキストリスナーに通知します。</target>
        </trans-unit>
        <trans-unit id="ac166623a76e86eeca946d862ad033d086a62638" translate="yes" xml:space="preserve">
          <source>TextMeasurer</source>
          <target state="translated">TextMeasurer</target>
        </trans-unit>
        <trans-unit id="588e445a7fb8a62cfbfe07fc7da7e4c3fa53c998" translate="yes" xml:space="preserve">
          <source>TextOutputCallback</source>
          <target state="translated">TextOutputCallback</target>
        </trans-unit>
        <trans-unit id="252f4df0a0cc7ef6d63b2964239d75a8cd935edb" translate="yes" xml:space="preserve">
          <source>TextOutputCallback.getMessage()</source>
          <target state="translated">TextOutputCallback.getMessage()</target>
        </trans-unit>
        <trans-unit id="04a3dc5e3172617d279fa04f4074aa7941b269e8" translate="yes" xml:space="preserve">
          <source>TextOutputCallback.getMessageType()</source>
          <target state="translated">TextOutputCallback.getMessageType()</target>
        </trans-unit>
        <trans-unit id="a9cd54a4125c7be8f147ce4971c5b600368543c7" translate="yes" xml:space="preserve">
          <source>TextPane region.</source>
          <target state="translated">テキストペイン領域。</target>
        </trans-unit>
        <trans-unit id="d6076ba78418e80b00bf8b0fcf6accde6ba64df8" translate="yes" xml:space="preserve">
          <source>TextPane region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;TextPane&lt;/code&gt;.</source>
          <target state="translated">TextPaneリージョン。スタイルをこの &lt;code&gt;Region&lt;/code&gt; バインドするには、 &lt;code&gt;TextPane&lt;/code&gt; という名前を使用します。</target>
        </trans-unit>
        <trans-unit id="9730e5eb39c447a1781ba61855df2714772d7751" translate="yes" xml:space="preserve">
          <source>TextStyle</source>
          <target state="translated">TextStyle</target>
        </trans-unit>
        <trans-unit id="f4dca53ffd389401b79d872c5e632fd324076eef" translate="yes" xml:space="preserve">
          <source>TextStyle.asNormal()</source>
          <target state="translated">TextStyle.asNormal()</target>
        </trans-unit>
        <trans-unit id="1ef9942c75cd5e393a8ead0a76131c8945ad5e66" translate="yes" xml:space="preserve">
          <source>TextStyle.asStandalone()</source>
          <target state="translated">TextStyle.asStandalone()</target>
        </trans-unit>
        <trans-unit id="0d128dd8c9acf7ee1c4c113528b8714efd712df9" translate="yes" xml:space="preserve">
          <source>TextStyle.isStandalone()</source>
          <target state="translated">TextStyle.isStandalone()</target>
        </trans-unit>
        <trans-unit id="c83b71a023441b2dec3ae28c844e030a94a564ce" translate="yes" xml:space="preserve">
          <source>TextStyle.valueOf()</source>
          <target state="translated">TextStyle.valueOf()</target>
        </trans-unit>
        <trans-unit id="a36d687140d6a14d13a30df1289134c5a96887bf" translate="yes" xml:space="preserve">
          <source>TextStyle.values()</source>
          <target state="translated">TextStyle.values()</target>
        </trans-unit>
        <trans-unit id="4ba1cb88f64bee051232816580fd6cb2672c9cf0" translate="yes" xml:space="preserve">
          <source>TextSyntax</source>
          <target state="translated">TextSyntax</target>
        </trans-unit>
        <trans-unit id="a0e31d45ecd3597bc9c201242058dd0894346074" translate="yes" xml:space="preserve">
          <source>TextSyntax.equals()</source>
          <target state="translated">TextSyntax.equals()</target>
        </trans-unit>
        <trans-unit id="01a8db3991f8df738125e4291a8f08e2dd90e0dd" translate="yes" xml:space="preserve">
          <source>TextSyntax.getLocale()</source>
          <target state="translated">TextSyntax.getLocale()</target>
        </trans-unit>
        <trans-unit id="36257532531c5aca445403e9ee18a7e5d3a9316c" translate="yes" xml:space="preserve">
          <source>TextSyntax.getValue()</source>
          <target state="translated">TextSyntax.getValue()</target>
        </trans-unit>
        <trans-unit id="cbae53268b404fa9327fcac8b160936d3d73e4f8" translate="yes" xml:space="preserve">
          <source>TextSyntax.hashCode()</source>
          <target state="translated">TextSyntax.hashCode()</target>
        </trans-unit>
        <trans-unit id="fab8c00792aa8223f14e1550d15267c9fe32de52" translate="yes" xml:space="preserve">
          <source>TextSyntax.toString()</source>
          <target state="translated">TextSyntax.toString()</target>
        </trans-unit>
        <trans-unit id="ada4026782ca69102c304790669fdfb4005da1b1" translate="yes" xml:space="preserve">
          <source>TextUI</source>
          <target state="translated">TextUI</target>
        </trans-unit>
        <trans-unit id="35e814370946e73a4be7cae92516751937de9ac7" translate="yes" xml:space="preserve">
          <source>Textual representation of IP addresses</source>
          <target state="translated">IPアドレスのテキスト表現</target>
        </trans-unit>
        <trans-unit id="117803293fc433375561793178e0696f42010099" translate="yes" xml:space="preserve">
          <source>Textual representation of IPv4 address used as input to methods takes one of the following forms:</source>
          <target state="translated">メソッドへの入力として使用されるIPv4アドレスのテキスト表現は、以下のいずれかの形式をとります。</target>
        </trans-unit>
        <trans-unit id="7b4628af40961c1f376a18d8c40b6de5d38b2404" translate="yes" xml:space="preserve">
          <source>Textual representation of IPv6 address used as input to methods takes one of the following forms:</source>
          <target state="translated">メソッドへの入力として使用されるIPv6アドレスのテキスト表現は、以下のいずれかの形式をとります。</target>
        </trans-unit>
        <trans-unit id="8c4d1dd6105f0bc77857401185e81ff007acd88e" translate="yes" xml:space="preserve">
          <source>Textual representation of IPv6 scoped addresses</source>
          <target state="translated">IPv6のスコープ付きアドレスのテキスト表現</target>
        </trans-unit>
        <trans-unit id="54dc10ae4aff9fa451f03265c48f0fd2e453c8f1" translate="yes" xml:space="preserve">
          <source>TexturePaint</source>
          <target state="translated">TexturePaint</target>
        </trans-unit>
        <trans-unit id="fc7e4006758ef1304dbc8a17ff24569b5872cba2" translate="yes" xml:space="preserve">
          <source>Thai Buddhist leap years occur exactly in line with ISO leap years. This method does not validate the year passed in, and only has a well-defined result for years in the supported range.</source>
          <target state="translated">タイ仏教のうるう年は、ISOのうるう年と正確に一致しています。このメソッドは、渡された年を検証することはなく、サポートされている範囲内の年についてのみ定義された結果を持ちます。</target>
        </trans-unit>
        <trans-unit id="a3a88c31fc847e5975ca0d481465a31d6c2afb88" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology</source>
          <target state="translated">ThaiBuddhistChronology</target>
        </trans-unit>
        <trans-unit id="9f4e098c159feb8a1aaa3489340db7b582b8a923" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.date()</source>
          <target state="translated">ThaiBuddhistChronology.date()</target>
        </trans-unit>
        <trans-unit id="81a9c9b5b80bdfdae92d38adf091b7f3c1052eff" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.dateEpochDay()</source>
          <target state="translated">ThaiBuddhistChronology.dateEpochDay()</target>
        </trans-unit>
        <trans-unit id="23605069d3ce7143eb2a0a9211ed2c62103e6714" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.dateNow()</source>
          <target state="translated">ThaiBuddhistChronology.dateNow()</target>
        </trans-unit>
        <trans-unit id="af7b1ba8e6be27d0b854cb3a4d57c40d2446899f" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.dateYearDay()</source>
          <target state="translated">ThaiBuddhistChronology.dateYearDay()</target>
        </trans-unit>
        <trans-unit id="93910146fe36db4c0613d18ce6c1f9117ddaf7c2" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.eraOf()</source>
          <target state="translated">ThaiBuddhistChronology.eraOf()</target>
        </trans-unit>
        <trans-unit id="9cdaba971e2dea5eb16dff0e2ef133360ef742de" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.eras()</source>
          <target state="translated">ThaiBuddhistChronology.eras()</target>
        </trans-unit>
        <trans-unit id="8e2878dd01a7e76600e403a321b5ac1650f4749c" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.getCalendarType()</source>
          <target state="translated">ThaiBuddhistChronology.getCalendarType()</target>
        </trans-unit>
        <trans-unit id="5951fdcb7eaad658dd8f305149f76d4e28ab97cc" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.getId()</source>
          <target state="translated">ThaiBuddhistChronology.getId()</target>
        </trans-unit>
        <trans-unit id="5dc3d69674033a15206befd7f6f1f0bd82e1f586" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.isLeapYear()</source>
          <target state="translated">ThaiBuddhistChronology.isLeapYear()</target>
        </trans-unit>
        <trans-unit id="0ca9e1ad57b9dc845e3c7a8290592d23191a4c7c" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.localDateTime()</source>
          <target state="translated">ThaiBuddhistChronology.localDateTime()</target>
        </trans-unit>
        <trans-unit id="62c58c7a6de0785fc1963f4cdc3f687a137b9c8a" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.prolepticYear()</source>
          <target state="translated">ThaiBuddhistChronology.prolepticYear()</target>
        </trans-unit>
        <trans-unit id="84dec28471d39425c7517074060ef484dc960f5b" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.range()</source>
          <target state="translated">ThaiBuddhistChronology.range()</target>
        </trans-unit>
        <trans-unit id="6f1b85d9c539b822fc2c329e721c9f10d3615fda" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.resolveDate()</source>
          <target state="translated">ThaiBuddhistChronology.resolveDate()</target>
        </trans-unit>
        <trans-unit id="ef04f245e01dd1ed7ca48833a62e0cf965f8b9c8" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.zonedDateTime()</source>
          <target state="translated">ThaiBuddhistChronology.zonedDateTime()</target>
        </trans-unit>
        <trans-unit id="56cacb065b48fc5b20d838fbbe8bde43dbb623ac" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate</source>
          <target state="translated">ThaiBuddhistDate</target>
        </trans-unit>
        <trans-unit id="db18fff8c5f1eba899d8e2fec3b841757b2c64a3" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.atTime()</source>
          <target state="translated">ThaiBuddhistDate.atTime()</target>
        </trans-unit>
        <trans-unit id="9d6dc83ae18f9c046ce1ca0c1c1858d808569894" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.equals()</source>
          <target state="translated">ThaiBuddhistDate.equals()</target>
        </trans-unit>
        <trans-unit id="a1d0a76834da9825dbe7a22b7df411265b938345" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.from()</source>
          <target state="translated">ThaiBuddhistDate.from()</target>
        </trans-unit>
        <trans-unit id="631ff9458cac35099e69a03f2c39b78d3177d43d" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.getChronology()</source>
          <target state="translated">ThaiBuddhistDate.getChronology()</target>
        </trans-unit>
        <trans-unit id="867efbd62bb34492da2f93784ae9940be543f6e8" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.getEra()</source>
          <target state="translated">ThaiBuddhistDate.getEra()</target>
        </trans-unit>
        <trans-unit id="b20965a16ab7d753daa15fdd1445726a4b4bc735" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.getLong()</source>
          <target state="translated">ThaiBuddhistDate.getLong()</target>
        </trans-unit>
        <trans-unit id="1d08e48b0f31e7d132dcf2513888d58482f93533" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.hashCode()</source>
          <target state="translated">ThaiBuddhistDate.hashCode()</target>
        </trans-unit>
        <trans-unit id="05c327da97b723029b77d71ab87e5769aa49376d" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.lengthOfMonth()</source>
          <target state="translated">ThaiBuddhistDate.lengthOfMonth()</target>
        </trans-unit>
        <trans-unit id="83339f429fc8d1032f157bfa1a6f48584818ee22" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.minus()</source>
          <target state="translated">ThaiBuddhistDate.minus()</target>
        </trans-unit>
        <trans-unit id="1772e94bfa441b9d316fb8029d2e0a2880c086e9" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.now()</source>
          <target state="translated">ThaiBuddhistDate.now()</target>
        </trans-unit>
        <trans-unit id="eee511f518f709d927b64f0cf053d2bc3abdf547" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.of()</source>
          <target state="translated">ThaiBuddhistDate.of()</target>
        </trans-unit>
        <trans-unit id="6e5182152bdca111eee82cfccedeccac50e6be2b" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.plus()</source>
          <target state="translated">ThaiBuddhistDate.plus()</target>
        </trans-unit>
        <trans-unit id="3caf1e8127398daabc0daecbc7a3899bc28bf097" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.range()</source>
          <target state="translated">ThaiBuddhistDate.range()</target>
        </trans-unit>
        <trans-unit id="c9251bd315b835c130709c2bd5ad364ffcd087a2" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.toEpochDay()</source>
          <target state="translated">ThaiBuddhistDate.toEpochDay()</target>
        </trans-unit>
        <trans-unit id="e14e21c8865db3adeb700749d14718da3c6d5c12" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.toString()</source>
          <target state="translated">ThaiBuddhistDate.toString()</target>
        </trans-unit>
        <trans-unit id="b5d685fb3d918cd886b757988fe0097b71da0c52" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.until()</source>
          <target state="translated">ThaiBuddhistDate.until()</target>
        </trans-unit>
        <trans-unit id="0891bb4c3ac498e3de588a3b988abfe28bd45b3a" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.with()</source>
          <target state="translated">ThaiBuddhistDate.with()</target>
        </trans-unit>
        <trans-unit id="0c6f18d03a0410128636e15c4276fb431889de55" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra</source>
          <target state="translated">ThaiBuddhistEra</target>
        </trans-unit>
        <trans-unit id="1e44ae46b9f83afcc5d0dd91bd2ba339e3ffe2e6" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.getValue()</source>
          <target state="translated">ThaiBuddhistEra.getValue()</target>
        </trans-unit>
        <trans-unit id="1f8b419c0c527a193ab6d599bd7ec00e696ce392" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.of()</source>
          <target state="translated">ThaiBuddhistEra.of()</target>
        </trans-unit>
        <trans-unit id="551e2de4fb34142d0eff47396c16cf09f916c035" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.valueOf()</source>
          <target state="translated">ThaiBuddhistEra.valueOf()</target>
        </trans-unit>
        <trans-unit id="5ec30eac149daa0ab70fa50291d1ae80950de39a" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.values()</source>
          <target state="translated">ThaiBuddhistEra.values()</target>
        </trans-unit>
        <trans-unit id="8a430b0436fbafd13ff3f8f793fd3a22f31a2926" translate="yes" xml:space="preserve">
          <source>That</source>
          <target state="translated">That</target>
        </trans-unit>
        <trans-unit id="383a080e9d69d6f722f57039b9091b9f29317036" translate="yes" xml:space="preserve">
          <source>That a selection key indicates that its channel is ready for some operation is a hint, but not a guarantee, that such an operation can be performed by a thread without causing the thread to block. It is imperative that code that performs multiplexed I/O be written so as to ignore these hints when they prove to be incorrect.</source>
          <target state="translated">選択キーがそのチャンネルが何らかの操作の準備ができていることを示すのはヒントであり、そのような操作をスレッドがブロックすることなく実行できることを保証するものではありません。多重化された I/O を実行するコードは、これらのヒントが正しくないことが判明した場合には無視するように記述することが必須です。</target>
        </trans-unit>
        <trans-unit id="2e116fde30bfce6bc219f98a723200588db818f4" translate="yes" xml:space="preserve">
          <source>That a selection key's ready set indicates that its channel is ready for some operation category is a hint, but not a guarantee, that an operation in such a category may be performed by a thread without causing the thread to block. A ready set is most likely to be accurate immediately after the completion of a selection operation. It is likely to be made inaccurate by external events and by I/O operations that are invoked upon the corresponding channel.</source>
          <target state="translated">選択キーのレディセットがそのチャンネルがある操作カテゴリの準備ができていることを示すのは、そのようなカテゴリの操作をスレッドがブロックすることなく実行できることを保証するものではありませんが、 ヒントにはなります。レディセットは、選択操作が完了した直後に正確になる可能性が高い。これは、外部イベントや、対応するチャネルに対して呼び出されるI/O操作によって不正確になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="7293d0c8de22c531a5129cfdad90649cce36d51f" translate="yes" xml:space="preserve">
          <source>That implementation makes the operation suitable for short traversals from a known position. But to traverse all of the leaves in the tree, you should use &lt;code&gt;depthFirstEnumeration&lt;/code&gt; to enumerate the nodes in the tree and use &lt;code&gt;isLeaf&lt;/code&gt; on each node to determine which are leaves.</source>
          <target state="translated">この実装により、操作は既知の位置からの短いトラバーサルに適したものになります。ただし、ツリー内のすべての葉をトラバースするには、 &lt;code&gt;depthFirstEnumeration&lt;/code&gt; を使用してツリー内のノードを列挙し、各ノードで &lt;code&gt;isLeaf&lt;/code&gt; を使用してどの葉であるかを判別する必要があります。</target>
        </trans-unit>
        <trans-unit id="afcead73a580f282a044b63d246784dd77d66756" translate="yes" xml:space="preserve">
          <source>That is, &lt;code&gt;cipher.getParameters().getEncoded()&lt;/code&gt;.</source>
          <target state="translated">つまり、 &lt;code&gt;cipher.getParameters().getEncoded()&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5ffbb9cc7363c310d2444b1a8fa556ad01792b87" translate="yes" xml:space="preserve">
          <source>That is, if &lt;code&gt;AWTEvent&lt;/code&gt; A is enqueued to the &lt;code&gt;EventQueue&lt;/code&gt; before &lt;code&gt;AWTEvent&lt;/code&gt; B then event B will not be dispatched before event A.</source>
          <target state="translated">場合は、あることを &lt;code&gt;AWTEvent&lt;/code&gt; Aがキューに入れられる &lt;code&gt;EventQueue&lt;/code&gt; の前に &lt;code&gt;AWTEvent&lt;/code&gt; B、イベントBがイベントAの前に送出されることはありません</target>
        </trans-unit>
        <trans-unit id="1838fbc3bd4ca130f9a4e006ec1c3120622cb2b7" translate="yes" xml:space="preserve">
          <source>That is, it is not permitted that several events from this queue are dispatched simultaneously.</source>
          <target state="translated">つまり、このキューから複数のイベントを同時にディスパッチすることは許されていません。</target>
        </trans-unit>
        <trans-unit id="7fbef03361aa2d11a29ea57ba9573d91992f1ee2" translate="yes" xml:space="preserve">
          <source>That supports three categories of application that modify entity resolution. &lt;em&gt;Old Style&lt;/em&gt; applications won't know about this interface; they will provide an EntityResolver. &lt;em&gt;Transitional Mode&lt;/em&gt; provide an EntityResolver2 and automatically get the benefit of its methods in any systems (parsers or other tools) supporting it, due to polymorphism. Both &lt;em&gt;Old Style&lt;/em&gt; and &lt;em&gt;Transitional Mode&lt;/em&gt; applications will work with any SAX2 parser. &lt;em&gt;New style&lt;/em&gt; applications will fail to run except on SAX2 parsers that support this particular feature. They will insist that feature flag have a value of &quot;true&quot;, and the EntityResolver2 implementation they provide might throw an exception if the original SAX 1.0 style entity resolution method is invoked.</source>
          <target state="translated">これは、エンティティの解決を変更する3つのカテゴリのアプリケーションをサポートします。&lt;em&gt;古いスタイルの&lt;/em&gt;アプリケーションはこのインターフェースについて知りません。それらはEntityResolverを提供します。トランジショナル&lt;em&gt;モード&lt;/em&gt;はEntityResolver2を提供し、ポリモーフィズムにより、それをサポートするすべてのシステム（パーサーまたはその他のツール）でそのメソッドの利点を自動的に取得します。どちらも&lt;em&gt;古いスタイル&lt;/em&gt;と&lt;em&gt;移行モードの&lt;/em&gt;アプリケーションでは、任意のSAX2パーサーで動作します。&lt;em&gt;新しいスタイル&lt;/em&gt;この特定の機能をサポートするSAX2パーサーを除いて、アプリケーションは実行に失敗します。彼らは、機能フラグの値が「true」であると主張し、元のSAX 1.0スタイルのエンティティ解決メソッドが呼び出された場合、提供するEntityResolver2実装が例外をスローする可能性があります。</target>
        </trans-unit>
        <trans-unit id="006efee9935d1d56869e21b1bac583a106240016" translate="yes" xml:space="preserve">
          <source>That this method returns &lt;code&gt;false&lt;/code&gt; does not imply that no bytes have yet been decoded. Some auto-detecting decoders are capable of decoding some, or even all, of an input byte sequence without fixing on a particular charset.</source>
          <target state="translated">このメソッドが &lt;code&gt;false&lt;/code&gt; を返すことは、バイトがまだデコードされていないことを意味しません。一部の自動検出デコーダーは、特定の文字セットを修正せずに、入力バイトシーケンスの一部またはすべてをデコードできます。</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="d28a162efe56d735c7f674ab51f90529f140fe99" translate="yes" xml:space="preserve">
          <source>The &quot;&amp;lt;hostname&amp;gt;&quot; is an ASCII representation of the hostname, which may contains A-labels. For example, a returned value of an pseudo hostname may look like:</source>
          <target state="translated">「&amp;lt;hostname&amp;gt;」はホスト名のASCII表現であり、Aラベルが含まれる場合があります。たとえば、疑似ホスト名の戻り値は次のようになります。</target>
        </trans-unit>
        <trans-unit id="fbe380e337c8737cb91d45f2fdda4edb182c7b59" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;code&gt;.jar&lt;/code&gt;&quot; suffix is removed.</source>
          <target state="translated">「 &lt;code&gt;.jar&lt;/code&gt; 」サフィックスが削除されます。</target>
        </trans-unit>
        <trans-unit id="3cb83e70711efc11b9d5c355db1e4fee21b3d4ec" translate="yes" xml:space="preserve">
          <source>The &quot;Concurrent&quot; prefix used with some classes in this package is a shorthand indicating several differences from similar &quot;synchronized&quot; classes. For example &lt;code&gt;java.util.Hashtable&lt;/code&gt; and &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; are synchronized. But &lt;a href=&quot;concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt; is &quot;concurrent&quot;. A concurrent collection is thread-safe, but not governed by a single exclusion lock. In the particular case of ConcurrentHashMap, it safely permits any number of concurrent reads as well as a large number of concurrent writes. &quot;Synchronized&quot; classes can be useful when you need to prevent all access to a collection via a single lock, at the expense of poorer scalability. In other cases in which multiple threads are expected to access a common collection, &quot;concurrent&quot; versions are normally preferable. And unsynchronized collections are preferable when either collections are unshared, or are accessible only when holding other locks.</source>
          <target state="translated">このパッケージの一部のクラスで使用される「並行」プレフィックスは、類似の「同期」クラスとのいくつかの違いを示す省略形です。たとえば、 &lt;code&gt;java.util.Hashtable&lt;/code&gt; と &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; は同期されます。しかし、&lt;a href=&quot;concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt;「並行」です。並行コレクションはスレッドセーフですが、単一の除外ロックによって管理されていません。 ConcurrentHashMapの特定のケースでは、任意の数の同時読み取りと多数の同時書き込みを安全に許可します。 「同期」クラスは、スケーラビリティが低下する代わりに、単一のロックを介したコレクションへのすべてのアクセスを防止する必要がある場合に役立ちます。複数のスレッドが共通のコレクションにアクセスすることが予想されるその他の場合、通常は「並行」バージョンが推奨されます。また、同期されていないコレクションは、コレクションが共有されていない場合、または他のロックを保持している場合にのみアクセスできる場合に適しています。</target>
        </trans-unit>
        <trans-unit id="761b12883375956b1fd5c3659aa381596b01fdaa" translate="yes" xml:space="preserve">
          <source>The &quot;Concurrent&quot; prefix used with some classes in this package is a shorthand indicating several differences from similar &quot;synchronized&quot; classes. For example &lt;code&gt;java.util.Hashtable&lt;/code&gt; and &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; are synchronized. But &lt;a href=&quot;concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt; is &quot;concurrent&quot;. A concurrent collection is thread-safe, but not governed by a single exclusion lock. In the particular case of ConcurrentHashMap, it safely permits any number of concurrent reads as well as a tunable number of concurrent writes. &quot;Synchronized&quot; classes can be useful when you need to prevent all access to a collection via a single lock, at the expense of poorer scalability. In other cases in which multiple threads are expected to access a common collection, &quot;concurrent&quot; versions are normally preferable. And unsynchronized collections are preferable when either collections are unshared, or are accessible only when holding other locks.</source>
          <target state="translated">このパッケージの一部のクラスで使用される「並行」接頭辞は、類似の「同期」クラスとのいくつかの違いを示す略記です。たとえば、 &lt;code&gt;java.util.Hashtable&lt;/code&gt; と &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; は同期されます。しかし、&lt;a href=&quot;concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt;「並行」です。並行コレクションはスレッドセーフですが、単一の排他ロックによって制御されません。 ConcurrentHashMapの特定のケースでは、調整可能な数の同時書き込みだけでなく、任意の数の同時読み取りを安全に許可します。 「同期」クラスは、スケーラビリティーが低下する代わりに、単一のロックを介してコレクションへのすべてのアクセスを防止する必要がある場合に役立ちます。複数のスレッドが共通のコレクションにアクセスすることが予想される他のケースでは、通常は「並行」バージョンが推奨されます。また、同期されていないコレクションは、コレクションが共有されていない場合、または他のロックを保持している場合にのみアクセスできる場合に適しています。</target>
        </trans-unit>
        <trans-unit id="2be3c7247d4c95e0eee9f8ccfea4760fa5e29c40" translate="yes" xml:space="preserve">
          <source>The &quot;TableExample&quot; directory in the demo area of the source distribution gives a number of complete examples of &lt;code&gt;JTable&lt;/code&gt; usage, covering how the &lt;code&gt;JTable&lt;/code&gt; can be used to provide an editable view of data taken from a database and how to modify the columns in the display to use specialized renderers and editors.</source>
          <target state="translated">ソース配布のデモ領域に「TableExample」ディレクトリは、完全な例の数与える &lt;code&gt;JTable&lt;/code&gt; の方法覆う、使用を &lt;code&gt;JTable&lt;/code&gt; は、データベースから取得されたデータの編集可能なビューを提供するために使用することができ、ディスプレイの列を変更する方法専用のレンダラーとエディターを使用します。</target>
        </trans-unit>
        <trans-unit id="f5d233d2c83083380d6b780fce20712170e44145" translate="yes" xml:space="preserve">
          <source>The &quot;block&quot; increment for scrolling in the specified direction. This value should always be positive.</source>
          <target state="translated">指定した方向にスクロールするための「ブロック」のインクリメント。この値は常に正の値でなければなりません。</target>
        </trans-unit>
        <trans-unit id="5c92ed0ed7f44357d29a0d93b7d5e34400a5966a" translate="yes" xml:space="preserve">
          <source>The &quot;class&quot; attribute is used to specify the target of a static method or constructor explicitly; its value being the fully qualified name of the class.</source>
          <target state="translated">class&quot; 属性は、静的メソッドやコンストラクタのターゲットを明示的に指定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="410744ec5d7aaa6733716ca632b49febdb1c1415" translate="yes" xml:space="preserve">
          <source>The &quot;contentPane&quot; is the primary container for application specific components.</source>
          <target state="translated">contentPane」は、アプリケーション固有のコンポーネントのための主要なコンテナです。</target>
        </trans-unit>
        <trans-unit id="b5f47fbc154769f72f7809d97f7c4fc03a4116e0" translate="yes" xml:space="preserve">
          <source>The &quot;contentPane&quot; is the primary container for application specific components. Applications should add children to the contentPane, set its layout manager, and so on.</source>
          <target state="translated">contentPane」は、アプリケーション固有のコンポーネントのための主要なコンテナです。アプリケーションはcontentPaneに子を追加したり、レイアウトマネージャを設定したりする必要があります。</target>
        </trans-unit>
        <trans-unit id="99b714dc607d2a32a9e5ae18a28845a9ad7f9870" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; algorithms contained in this class, that is, the algorithms that modify the collection on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the collection does not support the appropriate mutation primitive(s), such as the &lt;code&gt;set&lt;/code&gt; method. These algorithms may, but are not required to, throw this exception if an invocation would have no effect on the collection. For example, invoking the &lt;code&gt;sort&lt;/code&gt; method on an unmodifiable list that is already sorted may or may not throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">このクラスに含まれる「破壊的な」アルゴリズム、つまりそれらが動作するコレクションを変更するアルゴリズムは、コレクションが &lt;code&gt;set&lt;/code&gt; メソッドなどの適切なミューテーションプリミティブをサポートしていない場合に &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローするように指定されています。これらのアルゴリズムは、呼び出しがコレクションに影響を及ぼさない場合に、この例外をスローすることがありますが、必須ではありません。たとえば、すでにソートされている変更不可能なリストで &lt;code&gt;sort&lt;/code&gt; メソッドを呼び出すと、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされる場合とスローされない場合があります。</target>
        </trans-unit>
        <trans-unit id="d3799b0d99e9f9ae8ba59928fbe544b7e50ada4f" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; methods contained in this interface, that is, the methods that modify the collection on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this collection does not support the operation. If this is the case, these methods may, but are not required to, throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the invocation would have no effect on the collection. For example, invoking the &lt;a href=&quot;collection#addAll-java.util.Collection-&quot;&gt;&lt;code&gt;addAll(Collection)&lt;/code&gt;&lt;/a&gt; method on an unmodifiable collection may, but is not required to, throw the exception if the collection to be added is empty.</source>
          <target state="translated">このインターフェイスに含まれる「破壊的」なメソッド、つまり操作対象のコレクションを変更するメソッドは、このコレクションが操作をサポートしていない場合に &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローするように指定されています。この場合、呼び出しがコレクションに影響を及ぼさない場合、これらのメソッドは &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローすることがありますが、必須ではありません。たとえば、変更不可能なコレクションで&lt;a href=&quot;collection#addAll-java.util.Collection-&quot;&gt; &lt;code&gt;addAll(Collection)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、追加するコレクションが空の場合に例外がスローされることがありますが、必須ではありません。</target>
        </trans-unit>
        <trans-unit id="f888ae94165a497ee34db90a9611055f9403494e" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; methods contained in this interface, that is, the methods that modify the map on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this map does not support the operation. If this is the case, these methods may, but are not required to, throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the invocation would have no effect on the map. For example, invoking the &lt;a href=&quot;#putAll(java.util.Map)&quot;&gt;&lt;code&gt;putAll(Map)&lt;/code&gt;&lt;/a&gt; method on an unmodifiable map may, but is not required to, throw the exception if the map whose mappings are to be &quot;superimposed&quot; is empty.</source>
          <target state="translated">このインターフェイスに含まれる「破壊的な」メソッド、つまり、それらが動作するマップを変更するメソッドは、このマップが操作をサポートしていない場合に &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローするように指定されています。この場合、呼び出しがマップに影響を与えない場合、これらのメソッドは &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローする可能性がありますが、必須ではありません。たとえば、変更不可能なマップで&lt;a href=&quot;#putAll(java.util.Map)&quot;&gt; &lt;code&gt;putAll(Map)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、マッピングが「スーパーインポーズ」されるマップが空の場合に例外がスローされる可能性がありますが、必須ではありません。</target>
        </trans-unit>
        <trans-unit id="523d08144b8e0cc24e5d2b715228e9abf2df6508" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; methods contained in this interface, that is, the methods that modify the map on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this map does not support the operation. If this is the case, these methods may, but are not required to, throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the invocation would have no effect on the map. For example, invoking the &lt;a href=&quot;map#putAll-java.util.Map-&quot;&gt;&lt;code&gt;putAll(Map)&lt;/code&gt;&lt;/a&gt; method on an unmodifiable map may, but is not required to, throw the exception if the map whose mappings are to be &quot;superimposed&quot; is empty.</source>
          <target state="translated">このインターフェイスに含まれる「破壊的な」メソッド、つまり、操作対象のマップを変更するメソッドは、このマップが操作をサポートしていない場合に &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローするように指定されています。この場合、呼び出しがマップに影響を及ぼさない場合、これらのメソッドは &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローすることがありますが、必須ではありません。たとえば、変更不可能なマップで&lt;a href=&quot;map#putAll-java.util.Map-&quot;&gt; &lt;code&gt;putAll(Map)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、マッピングが「スーパーインポーズ」されるマップが空の場合に、例外がスローされる場合がありますが、これは必須ではありません。</target>
        </trans-unit>
        <trans-unit id="eae4891e98416f7d88cd670a3c2c7ffcf50a66c3" translate="yes" xml:space="preserve">
          <source>The &quot;expert&quot; flag is used to distinguish between features that are intended for expert users from those that are intended for normal users.</source>
          <target state="translated">エキスパート」フラグは、エキスパートユーザ向けの機能と、通常のユーザ向けの機能を区別するために使用されます。</target>
        </trans-unit>
        <trans-unit id="53de2781ee0e7ac40066ecc66400a0280e82b151" translate="yes" xml:space="preserve">
          <source>The &quot;expert&quot; flag is used to distinguish between those features that are intended for expert users from those that are intended for normal users.</source>
          <target state="translated">エキスパート」フラグは、エキスパートユーザ向けの機能と、通常のユーザ向けの機能を区別するために使用されます。</target>
        </trans-unit>
        <trans-unit id="96db2ea0542daeff5fb771b914acf904d52fda1e" translate="yes" xml:space="preserve">
          <source>The &quot;global&quot; Logger object is provided as a convenience to developers who are making casual use of the Logging package. Developers who are making serious use of the logging package (for example in products) should create and use their own Logger objects, with appropriate names, so that logging can be controlled on a suitable per-Logger granularity. Developers also need to keep a strong reference to their Logger objects to prevent them from being garbage collected.</source>
          <target state="translated">グローバル&quot; Logger オブジェクトは、Logging パッケージをカジュアルに利用している開発者の利便性として提供されています。ロギングパッケージ(製品など)を真剣に使用している開発者は、ロギングをロガーごとに適切な粒度で制御できるように、適切な名前で独自のロガーオブジェクトを作成して使用しなければなりません。また、開発者は、ロガーオブジェクトがゴミとして収集されるのを防ぐために、ロガーオブジェクトへの強力な参照を保持する必要があります。</target>
        </trans-unit>
        <trans-unit id="6d7cb2b2bdfe06e56767bcb0bc7bde1627ef37ec" translate="yes" xml:space="preserve">
          <source>The &quot;heavyweight&quot; components (those that delegate to a peer, or native component on the host system) are shown with a darker, heavier box. The four heavyweight JFC/Swing containers (&lt;code&gt;JFrame&lt;/code&gt;, &lt;code&gt;JDialog&lt;/code&gt;, &lt;code&gt;JWindow&lt;/code&gt;, and &lt;code&gt;JApplet&lt;/code&gt;) are shown in relation to the AWT classes they extend. These four components are the only heavyweight containers in the Swing library. The lightweight container &lt;code&gt;JInternalFrame&lt;/code&gt; is also shown. All five of these JFC/Swing containers implement the &lt;code&gt;RootPaneContainer&lt;/code&gt; interface, and they all delegate their operations to a &lt;code&gt;JRootPane&lt;/code&gt; (shown with a little &quot;handle&quot; on top).</source>
          <target state="translated">「ヘビーウェイト」コンポーネント（ピアに委任するコンポーネント、またはホストシステム上のネイティブコンポーネント）は、暗くて重いボックスで表示されます。 4つのヘビーウェイトJFC / Swingコンテナ（ &lt;code&gt;JFrame&lt;/code&gt; 、 &lt;code&gt;JDialog&lt;/code&gt; 、 &lt;code&gt;JWindow&lt;/code&gt; 、および &lt;code&gt;JApplet&lt;/code&gt; ）は、それらが拡張するAWTクラスに関連して示されています。これらの4つのコンポーネントは、Swingライブラリで唯一の重量のあるコンテナです。軽量コンテナ &lt;code&gt;JInternalFrame&lt;/code&gt; も示されています。これらの5つのJFC / Swingコンテナーはすべて &lt;code&gt;RootPaneContainer&lt;/code&gt; インターフェースを実装し、それらはすべて &lt;code&gt;JRootPane&lt;/code&gt; に操作を委任します（上部に小さな「ハンドル」が表示されています）。</target>
        </trans-unit>
        <trans-unit id="3c8addeccbf7f5e85580dfc2361b06f37794364c" translate="yes" xml:space="preserve">
          <source>The &quot;hidden&quot; flag is used to identify features that are intended only for tool use, and which should not be exposed to humans.</source>
          <target state="translated">隠された」フラグは、ツールの使用のみを目的としており、人間に露出してはならない機能を識別するために使用されます。</target>
        </trans-unit>
        <trans-unit id="a488d2b6590253541ee7f92e1ac3dd1986e06a1b" translate="yes" xml:space="preserve">
          <source>The &quot;host_name&quot; type representing of a DNS hostname (see &lt;a href=&quot;snihostname&quot;&gt;&lt;code&gt;SNIHostName&lt;/code&gt;&lt;/a&gt;) in a Server Name Indication (SNI) extension.</source>
          <target state="translated">サーバー名表示（SNI）拡張のDNSホスト名（&lt;a href=&quot;snihostname&quot;&gt; &lt;code&gt;SNIHostName&lt;/code&gt; を&lt;/a&gt;参照）を表す「host_name」タイプ。</target>
        </trans-unit>
        <trans-unit id="10a044e56e8d6b8a40829767ab33a3bc7ae091b1" translate="yes" xml:space="preserve">
          <source>The &quot;key pressed&quot; event.</source>
          <target state="translated">キーが押された」イベント。</target>
        </trans-unit>
        <trans-unit id="cb1a2a9817108a8f3fb0c74a1517f31d89883b1c" translate="yes" xml:space="preserve">
          <source>The &quot;key pressed&quot; event. This event is generated when a key is pushed down.</source>
          <target state="translated">キーが押された」イベントです。このイベントは、キーが押されたときに発生します。</target>
        </trans-unit>
        <trans-unit id="15a0b36368e7533da45b107a8fdb9d0dbb87991b" translate="yes" xml:space="preserve">
          <source>The &quot;key released&quot; event.</source>
          <target state="translated">&quot;鍵が解放された &quot;イベント。</target>
        </trans-unit>
        <trans-unit id="89065abb7212cafb2aa0e60705c8e8fb49031c07" translate="yes" xml:space="preserve">
          <source>The &quot;key released&quot; event. This event is generated when a key is let up.</source>
          <target state="translated">鍵が解放された」イベントです。このイベントは、鍵が解放されたときに発生します。</target>
        </trans-unit>
        <trans-unit id="c4db56f511a0b0caa531937b259ac838d670ef62" translate="yes" xml:space="preserve">
          <source>The &quot;key typed&quot; event.</source>
          <target state="translated">キーが打たれた」イベント。</target>
        </trans-unit>
        <trans-unit id="1731c860a12ee2be3d3d567b4975c99da1c6b048" translate="yes" xml:space="preserve">
          <source>The &quot;key typed&quot; event. This event is generated when a character is entered. In the simplest case, it is produced by a single key press. Often, however, characters are produced by series of key presses, and the mapping from key pressed events to key typed events may be many-to-one or many-to-many.</source>
          <target state="translated">キーが入力された」イベントです。このイベントは、文字が入力されたときに生成されます。最も単純なケースでは、1回のキー押下によって生成されます。しかし、多くの場合、文字は連続したキーの押下によって生成され、キーが押されたイベントからキータイプされたイベントへのマッピングは、多対多の場合もあります。</target>
        </trans-unit>
        <trans-unit id="d5ee252810cba0d533bf7f76c20a67b32a87cd3a" translate="yes" xml:space="preserve">
          <source>The &quot;listen&quot; action is only meaningful when used with &quot;localhost&quot; and means the ability to bind to a specified port. The &quot;resolve&quot; action is implied when any of the other actions are present. The action &quot;resolve&quot; refers to host/ip name service lookups.</source>
          <target state="translated">listen &quot;アクションは &quot;localhost &quot;と一緒に使用された場合にのみ意味を持ち、指定されたポートにバインドする能力を意味する。resolve」アクションは、他のアクションのいずれかが存在する場合に暗示される。resolve」アクションは、ホスト/IP名サービスのルックアップを参照する。</target>
        </trans-unit>
        <trans-unit id="d3c0ba0eee2ac7b66f3aef3fc73c2b223a4c0ec9" translate="yes" xml:space="preserve">
          <source>The &quot;mouse clicked&quot; event.</source>
          <target state="translated">マウスがクリックされた」イベント。</target>
        </trans-unit>
        <trans-unit id="fd95273f9e0f97ba6154493334dfbc88304d3745" translate="yes" xml:space="preserve">
          <source>The &quot;mouse clicked&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when a mouse button is pressed and released.</source>
          <target state="translated">「マウスクリック」イベント。この &lt;code&gt;MouseEvent&lt;/code&gt; は、マウスボタンを押して離したときに発生します。</target>
        </trans-unit>
        <trans-unit id="eb930dfd17a60925068d70705e9352f325ee57fe" translate="yes" xml:space="preserve">
          <source>The &quot;mouse dragged&quot; event.</source>
          <target state="translated">マウスをドラッグした」イベント。</target>
        </trans-unit>
        <trans-unit id="b075435502c8f7106ae0666596bf2e26f2c15d14" translate="yes" xml:space="preserve">
          <source>The &quot;mouse dragged&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when the mouse position changes while a mouse button is pressed.</source>
          <target state="translated">「マウスドラッグ」イベント。この &lt;code&gt;MouseEvent&lt;/code&gt; は、マウスボタンが押されているときにマウスの位置が変化したときに発生します。</target>
        </trans-unit>
        <trans-unit id="78c6cf4d6d751d3b148d29d91a9b44b79d81b329" translate="yes" xml:space="preserve">
          <source>The &quot;mouse entered&quot; event.</source>
          <target state="translated">マウスが入った」イベント。</target>
        </trans-unit>
        <trans-unit id="92484043e5f424f60214946af78c19a23cb0e672" translate="yes" xml:space="preserve">
          <source>The &quot;mouse entered&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when the mouse cursor enters the unobscured part of component's geometry.</source>
          <target state="translated">「マウスが入った」イベント。この &lt;code&gt;MouseEvent&lt;/code&gt; は、マウスカーソルがコンポーネントのジオメトリの隠されていない部分に入ると発生します。</target>
        </trans-unit>
        <trans-unit id="7cf7efa1787704ba9875d107afd4470014ed223c" translate="yes" xml:space="preserve">
          <source>The &quot;mouse exited&quot; event.</source>
          <target state="translated">マウスが出た」イベント。</target>
        </trans-unit>
        <trans-unit id="7633a989f55a9a134d2f8ff1b7940365bbd2c29a" translate="yes" xml:space="preserve">
          <source>The &quot;mouse exited&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when the mouse cursor exits the unobscured part of component's geometry.</source>
          <target state="translated">「マウスが終了しました」イベント。この &lt;code&gt;MouseEvent&lt;/code&gt; は、マウスカーソルがコンポーネントのジオメトリの隠されていない部分を出るときに発生します。</target>
        </trans-unit>
        <trans-unit id="19a32ec102054b05202c9958fa7c4841ba476534" translate="yes" xml:space="preserve">
          <source>The &quot;mouse moved&quot; event.</source>
          <target state="translated">マウスが動いた」イベント。</target>
        </trans-unit>
        <trans-unit id="7c7e14a335bae48f1e5f91e66b80f93c264e4e45" translate="yes" xml:space="preserve">
          <source>The &quot;mouse moved&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when the mouse position changes.</source>
          <target state="translated">「マウス移動」イベント。この &lt;code&gt;MouseEvent&lt;/code&gt; は、マウスの位置が変更されたときに発生します。</target>
        </trans-unit>
        <trans-unit id="b3bbcddb1dc3d6cbd24ab4a55e75d7a461d4f45a" translate="yes" xml:space="preserve">
          <source>The &quot;mouse pressed&quot; event.</source>
          <target state="translated">マウスが押された」イベント。</target>
        </trans-unit>
        <trans-unit id="ae781e8182fd3b20274560fd07afa5afdaa84dc5" translate="yes" xml:space="preserve">
          <source>The &quot;mouse pressed&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when a mouse button is pushed down.</source>
          <target state="translated">「マウスプレス」イベント。この &lt;code&gt;MouseEvent&lt;/code&gt; は、マウスボタンが押されたときに発生します。</target>
        </trans-unit>
        <trans-unit id="b0ffd7c3529bd8be1ff6ce38f355d520951884df" translate="yes" xml:space="preserve">
          <source>The &quot;mouse released&quot; event.</source>
          <target state="translated">マウスリリース」イベント。</target>
        </trans-unit>
        <trans-unit id="5339e6250ff74b2626aff20bcdc159359391a858" translate="yes" xml:space="preserve">
          <source>The &quot;mouse released&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when a mouse button is let up.</source>
          <target state="translated">「マウスリリース」イベント。この &lt;code&gt;MouseEvent&lt;/code&gt; は、マウスボタンを離したときに発生します。</target>
        </trans-unit>
        <trans-unit id="5f299653ce8809acb5d9b394aeb347b35b63a060" translate="yes" xml:space="preserve">
          <source>The &quot;mouse wheel&quot; event.</source>
          <target state="translated">マウスホイール」イベント。</target>
        </trans-unit>
        <trans-unit id="e2517857e2bd19f0daa1ea9a18fc38bf3b4b844e" translate="yes" xml:space="preserve">
          <source>The &quot;mouse wheel&quot; event. This is the only &lt;code&gt;MouseWheelEvent&lt;/code&gt;. It occurs when a mouse equipped with a wheel has its wheel rotated.</source>
          <target state="translated">「マウスホイール」イベント。これは唯一の &lt;code&gt;MouseWheelEvent&lt;/code&gt; です。これは、ホイールを備えたマウスのホイールが回転したときに発生します。</target>
        </trans-unit>
        <trans-unit id="34537c0a9b18a5b97ca9dba2fc6ccb6e06339c2a" translate="yes" xml:space="preserve">
          <source>The &quot;no offset&quot; text controls what text is printed when the total amount of the offset fields to be output is zero. Example values would be 'Z', '+00:00', 'UTC' or 'GMT'. Three formats are accepted for parsing UTC - the &quot;no offset&quot; text, and the plus and minus versions of zero defined by the pattern.</source>
          <target state="translated">オフセットなし」テキストは、出力されるオフセットフィールドの合計量がゼロの場合に、どのテキストを出力するかを制御します。値の例としては、'Z'、'+00:00'、'UTC' または 'GMT' が挙げられます。UTCの解析には3つのフォーマットが使用できます。&quot;no offset &quot;テキスト、パターンで定義されたゼロのプラスとマイナスのバージョンです。</target>
        </trans-unit>
        <trans-unit id="0039eb18c439a8fe0ded6f996e270014f44833ff" translate="yes" xml:space="preserve">
          <source>The &quot;object&quot; tag denotes an &lt;em&gt;expression&lt;/em&gt; whose value is to be used as the argument to the enclosing element.</source>
          <target state="translated">「object」タグは、その値が囲み要素の引数として使用される&lt;em&gt;式&lt;/em&gt;を示します。</target>
        </trans-unit>
        <trans-unit id="8b7ed3f19fc82e3673167bf96934264dcec09b2d" translate="yes" xml:space="preserve">
          <source>The &quot;preferred&quot; flag is used to identify features that are particularly important for presenting to humans.</source>
          <target state="translated">好ましい」フラグは、人間に提示するために特に重要な特徴を識別するために使用されます。</target>
        </trans-unit>
        <trans-unit id="4b8e7b319e024eaf410d2b4884b5404343990997" translate="yes" xml:space="preserve">
          <source>The &quot;propagationId&quot; field is reserved for future use.</source>
          <target state="translated">propagationId &quot;フィールドは将来の使用のために予約されている。</target>
        </trans-unit>
        <trans-unit id="e52ae4af20949258e854e3591de7eb4159275419" translate="yes" xml:space="preserve">
          <source>The &quot;propagationId&quot; field is reserved for future use. In Beans 1.0 the sole requirement is that if a listener catches a PropertyChangeEvent and then fires a PropertyChangeEvent of its own, then it should make sure that it propagates the propagationId field from its incoming event to its outgoing event.</source>
          <target state="translated">propagationId」フィールドは将来の使用のために予約されています。Beans 1.0での唯一の要件は、リスナーがPropertyChangeEventをキャッチして、それ自身のPropertyChangeEventを発生させる場合、それがその着信イベントからその発信イベントにpropagationIdフィールドを伝播することを確認する必要があるということです。</target>
        </trans-unit>
        <trans-unit id="28e0bfde4b5880a6ead92dd03fce5b3e532829ac" translate="yes" xml:space="preserve">
          <source>The &quot;selectionBackground&quot; is the color of the text when it is painted over an unfilled area of the progress bar.</source>
          <target state="translated">選択背景」は、プログレスバーの塗りつぶされていない領域の上に塗りつぶされたときのテキストの色です。</target>
        </trans-unit>
        <trans-unit id="217311dded8133e98a9dbffc4c619b4a9be712b0" translate="yes" xml:space="preserve">
          <source>The &quot;selectionForeground&quot; is the color of the text when it is painted over a filled area of the progress bar.</source>
          <target state="translated">selectionForeground」は、プログレスバーの塗りつぶされた領域の上に塗りつぶされたときのテキストの色です。</target>
        </trans-unit>
        <trans-unit id="42bdeb61efcd06a145da747487352948dbf3d104" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; error output stream.</source>
          <target state="translated">標準」エラー出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="448f901e9880ca6676ec228309500276a588387c" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; error output stream. This stream is already open and ready to accept output data.</source>
          <target state="translated">標準」エラー出力ストリーム。このストリームは既にオープンされており、出力データを受け入れる準備ができています。</target>
        </trans-unit>
        <trans-unit id="c09e43335de1888d318df0870ac4ad9eac45e377" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; input stream.</source>
          <target state="translated">標準」の入力ストリーム。</target>
        </trans-unit>
        <trans-unit id="9b0fa7082ba453aa32dcb16ac03daf1ba9c65c4f" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; input stream. This stream is already open and ready to supply input data. Typically this stream corresponds to keyboard input or another input source specified by the host environment or user.</source>
          <target state="translated">標準」入力ストリーム。このストリームは既にオープンされており、入力データを供給する準備ができている。通常、このストリームはキーボード入力、またはホスト環境またはユーザによって指定された他の入力ソースに対応する。</target>
        </trans-unit>
        <trans-unit id="75482cec17e77687e4c5e4dd58db85c8319d6643" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; output stream.</source>
          <target state="translated">標準」出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="8d594a48963bd0f322bbb684e19620412a6932c8" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; output stream. This stream is already open and ready to accept output data. Typically this stream corresponds to display output or another output destination specified by the host environment or user.</source>
          <target state="translated">標準」出力ストリーム。このストリームはすでにオープンされており、出力データを受け入れる準備ができています。通常、このストリームは、表示出力、またはホスト環境またはユーザによって指定された他の出力先に対応する。</target>
        </trans-unit>
        <trans-unit id="e49f1b992ecac3c4246b928abba36653e8cfabb0" translate="yes" xml:space="preserve">
          <source>The &quot;unit&quot; increment for scrolling in the specified direction</source>
          <target state="translated">指定した方向にスクロールするための「単位」のインクリメント</target>
        </trans-unit>
        <trans-unit id="c7b2a0b2a156cc227469775e832652ef0030c0b5" translate="yes" xml:space="preserve">
          <source>The &quot;unit&quot; increment for scrolling in the specified direction. This value should always be positive.</source>
          <target state="translated">指定された方向にスクロールするための「単位」のインクリメント。この値は常に正の値でなければなりません。</target>
        </trans-unit>
        <trans-unit id="2dd42dc8f0100ef88f1c09f4b716e6faae9b9104" translate="yes" xml:space="preserve">
          <source>The &quot;viewport&quot; or &quot;porthole&quot; through which you see the underlying information.</source>
          <target state="translated">その下にある情報を見るための「ビューポート」または「舷窓」。</target>
        </trans-unit>
        <trans-unit id="7abc451b2b8a02dae8147b6816d130c87349c8a6" translate="yes" xml:space="preserve">
          <source>The &quot;viewport&quot; or &quot;porthole&quot; through which you see the underlying information. When you scroll, what moves is the viewport. It is like peering through a camera's viewfinder. Moving the viewfinder upwards brings new things into view at the top of the picture and loses things that were at the bottom.</source>
          <target state="translated">基本的な情報を見るための「ビューポート」または「舷窓」。スクロールしたときに動くのがビューポートです。カメラのファインダーを覗くようなものです。ファインダーを上に移動させると、写真の上部に新しいものが現れ、下部にあったものが失われます。</target>
        </trans-unit>
        <trans-unit id="87b168e22e7b27d60154fb06e4407a5bdb2ba403" translate="yes" xml:space="preserve">
          <source>The &quot;virtual key&quot; constants defined in &lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt; can be used to specify the key code. For example:</source>
          <target state="translated">&lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt; で定義されている「仮想キー」定数を使用して、キーコードを指定できます。例えば：</target>
        </trans-unit>
        <trans-unit id="42fa43eba557cdf1cf26626adea323a5cf291383" translate="yes" xml:space="preserve">
          <source>The &quot;virtual key&quot; constants defined in java.awt.event.KeyEvent can be used to specify the key code. For example:</source>
          <target state="translated">java.awt.event.KeyEventで定義されている「仮想キー」定数を使用して、キーコードを指定することができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="542ceac497d888731f108f54134d87b43e6e1e87" translate="yes" xml:space="preserve">
          <source>The &quot;void&quot; tag denotes a &lt;em&gt;statement&lt;/em&gt; which will be executed, but whose result will not be used as an argument to the enclosing method.</source>
          <target state="translated">「void」タグは実行される&lt;em&gt;ステートメント&lt;/em&gt;を示しますが、その結果は囲んでいるメソッドへの引数として使用されません。</target>
        </trans-unit>
        <trans-unit id="5413cb19ad08d0c83ec83a25d94198413a07db11" translate="yes" xml:space="preserve">
          <source>The &quot;widgets&quot; examples shown earlier shows how reduction combines with other operations to replace for loops with bulk operations. If &lt;code&gt;widgets&lt;/code&gt; is a collection of &lt;code&gt;Widget&lt;/code&gt; objects, which have a &lt;code&gt;getWeight&lt;/code&gt; method, we can find the heaviest widget with:</source>
          <target state="translated">前に示した「ウィジェット」の例は、リダクションを他の操作と組み合わせてforループを一括操作に置き換える方法を示しています。 &lt;code&gt;widgets&lt;/code&gt; が &lt;code&gt;getWeight&lt;/code&gt; メソッドを持つ &lt;code&gt;Widget&lt;/code&gt; オブジェクトのコレクションである場合、次のようにして最も重いウィジェットを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="9ef7ea7bc7a6cc52453a4c0762bb67aa32d26c11" translate="yes" xml:space="preserve">
          <source>The &quot;window activated&quot; event type.</source>
          <target state="translated">ウィンドウが起動した」イベントタイプ。</target>
        </trans-unit>
        <trans-unit id="226427283659032d179c570438fad9fad0c92457" translate="yes" xml:space="preserve">
          <source>The &quot;window activated&quot; event type. This event indicates that keystrokes and mouse clicks are directed towards this internal frame.</source>
          <target state="translated">イベントタイプは「ウィンドウがアクティブになった」です。このイベントは、キーストロークやマウスクリックがこの内部フレームに向けられていることを示します。</target>
        </trans-unit>
        <trans-unit id="cf5285f557eaed961f7b089388434d1897fd8d74" translate="yes" xml:space="preserve">
          <source>The &quot;window closed&quot; event.</source>
          <target state="translated">ウィンドウが閉じた」イベント。</target>
        </trans-unit>
        <trans-unit id="0bd85abd28b81dd4e92f480fe6c4ffc04de9ae6a" translate="yes" xml:space="preserve">
          <source>The &quot;window closed&quot; event. This event is delivered after the internal frame has been closed as the result of a call to the &lt;code&gt;setClosed&lt;/code&gt; or &lt;code&gt;dispose&lt;/code&gt; method.</source>
          <target state="translated">「ウィンドウが閉じました」イベント。このイベントは、 &lt;code&gt;setClosed&lt;/code&gt; または &lt;code&gt;dispose&lt;/code&gt; メソッドの呼び出しの結果として内部フレームが閉じられた後に配信されます。</target>
        </trans-unit>
        <trans-unit id="b02d8a38a7c497198054b98777fad1cda5bdb9c6" translate="yes" xml:space="preserve">
          <source>The &quot;window deactivated&quot; event type.</source>
          <target state="translated">イベントタイプは「ウィンドウが非アクティブになった」です。</target>
        </trans-unit>
        <trans-unit id="f2fafc768c0f5cb1c334413348114360e836dc93" translate="yes" xml:space="preserve">
          <source>The &quot;window deactivated&quot; event type. This event indicates that keystrokes and mouse clicks are no longer directed to the internal frame.</source>
          <target state="translated">イベントタイプの &quot;window deactivated &quot;です。このイベントは、キーストロークやマウスクリックが内部フレームに向けられなくなったことを示します。</target>
        </trans-unit>
        <trans-unit id="408bbda837c71da78c76f55730fb50a043774050" translate="yes" xml:space="preserve">
          <source>The &quot;window deiconified&quot; event type.</source>
          <target state="translated">イベントタイプ「ウィンドウデアイコン化」。</target>
        </trans-unit>
        <trans-unit id="52d2752f94b96c2494b60b46964d812e8cf6ba71" translate="yes" xml:space="preserve">
          <source>The &quot;window deiconified&quot; event type. This event indicates that the internal frame has been restored to its normal size.</source>
          <target state="translated">イベントタイプ「ウィンドウのデアイコン化」。このイベントは、内部フレームが通常のサイズに復元されたことを示します。</target>
        </trans-unit>
        <trans-unit id="fdc7911a6dbe466488c70a583cd5451f62271756" translate="yes" xml:space="preserve">
          <source>The &quot;window iconified&quot; event.</source>
          <target state="translated">窓をアイコン化した」イベント。</target>
        </trans-unit>
        <trans-unit id="cd6ed970523e6e0baed21a463189d7232d4321f4" translate="yes" xml:space="preserve">
          <source>The &quot;window iconified&quot; event. This event indicates that the internal frame was shrunk down to a small icon.</source>
          <target state="translated">&quot;ウィンドウがアイコン化された &quot;イベントです。このイベントは、内部フレームが縮小されて小さなアイコン化されたことを示します。</target>
        </trans-unit>
        <trans-unit id="ada4fcc113683f29a8a6153c0c2bf59ae79df5ab" translate="yes" xml:space="preserve">
          <source>The &quot;window is closing&quot; event.</source>
          <target state="translated">ウィンドウが閉じています」イベント。</target>
        </trans-unit>
        <trans-unit id="77cf40f7c82e26ae7cb58dc8fb5f7a97d962f1db" translate="yes" xml:space="preserve">
          <source>The &quot;window is closing&quot; event. This event is delivered when the user attempts to close the internal frame, such as by clicking the internal frame's close button, or when a program attempts to close the internal frame by invoking the &lt;code&gt;setClosed&lt;/code&gt; method.</source>
          <target state="translated">「ウィンドウが閉じています」イベント。このイベントは、ユーザーが内部フレームの閉じるボタンをクリックするなどして内部フレームを &lt;code&gt;setClosed&lt;/code&gt; うとしたとき、またはプログラムがsetClosedメソッドを呼び出して内部フレームを閉じようとしたときに配信されます。</target>
        </trans-unit>
        <trans-unit id="2f70a4fb74eeed3e23a4b7140075a7623a0646be" translate="yes" xml:space="preserve">
          <source>The &quot;window is closing&quot; event. This event is delivered when the user attempts to close the window from the window's system menu. If the program does not explicitly hide or dispose the window while processing this event, the window close operation will be cancelled.</source>
          <target state="translated">&quot;window is closing&quot; イベント。このイベントは、ユーザがウィンドウのシステムメニューからウィンドウを閉じようとしたときに配信されます。このイベントを処理している間に、プログラムが明示的にウィンドウを非表示にしたり廃棄したりしなければ、ウィンドウの閉じ操作はキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="35b9ff91928feda93eb2bbd321ab8c5974e6a7a3" translate="yes" xml:space="preserve">
          <source>The &quot;window opened&quot; event.</source>
          <target state="translated">ウィンドウが開いた」イベント。</target>
        </trans-unit>
        <trans-unit id="812e0c735e5c1dec67159170fe8e4124fe33b906" translate="yes" xml:space="preserve">
          <source>The &quot;window opened&quot; event. This event is delivered only the first time the internal frame is made visible.</source>
          <target state="translated">ウィンドウが開いた」イベントです。このイベントは、内部フレームが最初に可視化されたときにのみ配信されます。</target>
        </trans-unit>
        <trans-unit id="dd51a31f2fb3c35a53c40953e7b137610fa538ba" translate="yes" xml:space="preserve">
          <source>The '*' and '-' may only be specified in the final segment of a path and must be the only character in that segment. Any query or fragment components of the url are ignored when constructing URLPermissions.</source>
          <target state="translated">'*' と '-' はパスの最後のセグメントでのみ指定でき、そのセグメント内の唯一の文字でなければなりません。URLPermissions を作成する際には、URL のクエリーやフラグメントの構成要素は無視されます。</target>
        </trans-unit>
        <trans-unit id="c3dd2c4f47449a4544b3de80cb83d745f1361cb0" translate="yes" xml:space="preserve">
          <source>The '*' character refers to all resources in the same &quot;directory&quot; - in other words all resources with the same number of path components, and which only differ in the final path component, represented by the '*'.</source>
          <target state="translated">文字「*」は、同じ「ディレクトリ」内のすべてのリソースを指します。言い換えれば、パス構成要素の数が同じで、「*」で表される最終的なパス構成要素だけが異なるすべてのリソースを指します。</target>
        </trans-unit>
        <trans-unit id="5b1a4b786fce275a14542316145f1ffc6265c6f2" translate="yes" xml:space="preserve">
          <source>The '-' character refers to all resources recursively below the preceding path (eg. http://www.oracle.com/a/b/c/d/e.html matches this example).</source>
          <target state="translated">文字「-」は、前のパスの下にあるすべてのリソースを再帰的に参照します (例:http://www.oracle.com/a/b/c/d/e.html はこの例にマッチします)。</target>
        </trans-unit>
        <trans-unit id="a61c324d5664eb3125e624c3e41910d6b8260976" translate="yes" xml:space="preserve">
          <source>The '-' is a literal (non-editable) character, and is skipped.</source>
          <target state="translated">はリテラル(編集不可能な)文字であり、スキップされます。</target>
        </trans-unit>
        <trans-unit id="b9075ee33f640272d08ecfd74afcc317aa1feeee" translate="yes" xml:space="preserve">
          <source>The '_' character represents any single character; the '%' character represents any sequence of zero or more characters.</source>
          <target state="translated">文字は任意の 1 文字を表し、「%」文字は 0 文字以上の連続した文字を表します。</target>
        </trans-unit>
        <trans-unit id="2d3d7549dcf0d83ed68ff060f89f99b12e4561e6" translate="yes" xml:space="preserve">
          <source>The (possibly empty) subsequence captured by the group during the previous match, or &lt;code&gt;null&lt;/code&gt; if the group failed to match part of the input</source>
          <target state="translated">前の一致時にグループによってキャプチャされた（場合によっては空の）サブシーケンス、またはグループが入力の一部と一致しなかった場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f610b577e0d0c1aa68c7de09df91b0c3b1792629" translate="yes" xml:space="preserve">
          <source>The (possibly empty) subsequence captured by the named group during the previous match, or &lt;code&gt;null&lt;/code&gt; if the group failed to match part of the input</source>
          <target state="translated">前の一致時に指定されたグループによってキャプチャされた（場合によっては空の）サブシーケンス、またはグループが入力の一部と一致しなかった場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b452ff3f7cd68722baf21b3005843847575b9ad" translate="yes" xml:space="preserve">
          <source>The (possibly empty) subsequence matched by the previous match, in string form</source>
          <target state="translated">前のマッチでマッチした(空の可能性のある)部分シーケンスを文字列形式で表します。</target>
        </trans-unit>
        <trans-unit id="8341c85cf0c06e0be2262709eb4535bb0c5658b6" translate="yes" xml:space="preserve">
          <source>The (potentially null) Object whose notifyAll() method will be called immediately after the Runnable.run() method has returned or thrown an exception or after the event was disposed.</source>
          <target state="translated">Runnable.run()メソッドが返された直後、または例外がスローされた直後、またはイベントが破棄された後に、notifyAll()メソッドが呼び出される(潜在的にnull)オブジェクト。</target>
        </trans-unit>
        <trans-unit id="03e6e28175ae241b91674d1ee7e9f6b8e22a39c6" translate="yes" xml:space="preserve">
          <source>The (user-accessible) request headers that this request was (or will be) sent with.</source>
          <target state="translated">このリクエストが送られた (または送られる予定の)(ユーザーがアクセス可能な)リクエストヘッダ。</target>
        </trans-unit>
        <trans-unit id="db8c98f744455c4ea33c3652417a8d4d6babb38a" translate="yes" xml:space="preserve">
          <source>The +90 direction was chosen because simple finishing on the long edge is the same edge whether portrait or landscape.</source>
          <target state="translated">長辺のシンプルな仕上げは、縦でも横でも同じ辺になるので、+90の方向にしました。</target>
        </trans-unit>
        <trans-unit id="dc75f82aa609831b4e45d1280715e643c1e08fde" translate="yes" xml:space="preserve">
          <source>The 14 bit clock sequence value is constructed from the clock sequence field of this UUID. The clock sequence field is used to guarantee temporal uniqueness in a time-based UUID.</source>
          <target state="translated">14ビットのクロックシーケンス値は、このUUIDのクロックシーケンスフィールドから構築される。クロックシーケンスフィールドは、時間ベースのUUIDにおける時間的一意性を保証するために使用される。</target>
        </trans-unit>
        <trans-unit id="9244f80a9a7b954470832171ad15b5298b7c6027" translate="yes" xml:space="preserve">
          <source>The 48 bit node value is constructed from the node field of this UUID. This field is intended to hold the IEEE 802 address of the machine that generated this UUID to guarantee spatial uniqueness.</source>
          <target state="translated">48 ビットのノード値は、この UUID のノードフィールドから構築される。このフィールドは、空間的一意性を保証するために、このUUIDを生成したマシンのIEEE 802アドレスを保持することを意図している。</target>
        </trans-unit>
        <trans-unit id="cf62656bdd2342ac213b17c11186efa9fdef0697" translate="yes" xml:space="preserve">
          <source>The 60 bit timestamp value is constructed from the time_low, time_mid, and time_hi fields of this &lt;code&gt;UUID&lt;/code&gt;. The resulting timestamp is measured in 100-nanosecond units since midnight, October 15, 1582 UTC.</source>
          <target state="translated">60ビットのタイムスタンプ値は、この &lt;code&gt;UUID&lt;/code&gt; のtime_low、time_mid、およびtime_hiフィールドから構成されます。結果のタイムスタンプは、UTC 1582年10月15日の午前0時から100ナノ秒単位で測定されます。</target>
        </trans-unit>
        <trans-unit id="dece32256f323cee7e134d3087e518f2b7ddcafa" translate="yes" xml:space="preserve">
          <source>The 8 primitive Java types (&lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;
      long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;) are mapped to the corresponding boxed types from &lt;code&gt;java.lang&lt;/code&gt;, namely &lt;code&gt;
      Boolean&lt;/code&gt;, &lt;code&gt;Byte&lt;/code&gt;, etc. The Open Type is the corresponding &lt;code&gt;SimpleType&lt;/code&gt;. Thus, &lt;em&gt;opentype(&lt;/em&gt;&lt;code&gt;
      long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;SimpleType.LONG&lt;/code&gt;, and &lt;em&gt;opendata(&lt;/em&gt;&lt;code&gt;long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;
      java.lang.Long&lt;/code&gt;.</source>
          <target state="translated">8つのプリミティブJavaタイプ（ &lt;code&gt;boolean&lt;/code&gt; 、 &lt;code&gt;byte&lt;/code&gt; 、 &lt;code&gt;short&lt;/code&gt; 、 &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt; long&lt;/code&gt; 、 &lt;code&gt;float&lt;/code&gt; 、 &lt;code&gt;double&lt;/code&gt; 、 &lt;code&gt;char&lt;/code&gt; ）は、 &lt;code&gt;java.lang&lt;/code&gt; からの対応するボックス化されたタイプ、つまり &lt;code&gt; Boolean&lt;/code&gt; 、 &lt;code&gt;Byte&lt;/code&gt; などにマップされます &lt;code&gt;SimpleType&lt;/code&gt; は対応するSimpleTypeです。したがって、&lt;em&gt;opentype（&lt;/em&gt; &lt;code&gt; long&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;は &lt;code&gt;SimpleType.LONG&lt;/code&gt; であり、&lt;em&gt;opendata（&lt;/em&gt; &lt;code&gt;long&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;は &lt;code&gt; java.lang.Long&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5148f442500cb2e7c77d69481afbed4f322b7043" translate="yes" xml:space="preserve">
          <source>The 8 primitive Java types (&lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;) are mapped to the corresponding boxed types from &lt;code&gt;java.lang&lt;/code&gt;, namely &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Byte&lt;/code&gt;, etc. The Open Type is the corresponding &lt;code&gt;SimpleType&lt;/code&gt;. Thus, &lt;em&gt;opentype(&lt;/em&gt;&lt;code&gt;long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;SimpleType.LONG&lt;/code&gt;, and &lt;em&gt;opendata(&lt;/em&gt;&lt;code&gt;long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;java.lang.Long&lt;/code&gt;.</source>
          <target state="translated">8つのプリミティブJavaタイプ（ &lt;code&gt;boolean&lt;/code&gt; 、 &lt;code&gt;byte&lt;/code&gt; 、 &lt;code&gt;short&lt;/code&gt; 、 &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt;long&lt;/code&gt; 、 &lt;code&gt;float&lt;/code&gt; 、 &lt;code&gt;double&lt;/code&gt; 、 &lt;code&gt;char&lt;/code&gt; ）は、 &lt;code&gt;java.lang&lt;/code&gt; から対応するボックス化されたタイプ、つまり &lt;code&gt;Boolean&lt;/code&gt; 、 &lt;code&gt;Byte&lt;/code&gt; などにマップされます &lt;code&gt;SimpleType&lt;/code&gt; は対応するSimpleTypeです。したがって、&lt;em&gt;opentype（&lt;/em&gt; &lt;code&gt;long&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;は &lt;code&gt;SimpleType.LONG&lt;/code&gt; であり、&lt;em&gt;opendata（&lt;/em&gt; &lt;code&gt;long&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;は &lt;code&gt;java.lang.Long&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a6b61faaf0fa15e874e7aa6036cb8bbc437bc046" translate="yes" xml:space="preserve">
          <source>The 800-90Ar1 specification allows for a variety of DRBG implementation choices, such as:</source>
          <target state="translated">800-90Ar1仕様では、以下のような様々なDRBG実装の選択が可能です。</target>
        </trans-unit>
        <trans-unit id="9e58fb199b65ff39292af5a70bd8d9990914fb0a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#%3Cinit%3E()&quot;&gt;&lt;code&gt;ObjID()&lt;/code&gt;&lt;/a&gt; constructor can be used to generate a unique object identifier. Such an &lt;code&gt;ObjID&lt;/code&gt; is unique over time with respect to the host it is generated on. The &lt;a href=&quot;#%3Cinit%3E(int)&quot;&gt;&lt;code&gt;ObjID(int)&lt;/code&gt;&lt;/a&gt; constructor can be used to create a &quot;well-known&quot; object identifier. The scope of a well-known &lt;code&gt;ObjID&lt;/code&gt; depends on the RMI runtime it is exported to.</source>
          <target state="translated">&lt;a href=&quot;#%3Cinit%3E()&quot;&gt; &lt;code&gt;ObjID()&lt;/code&gt; &lt;/a&gt;コンストラクタは、一意のオブジェクト識別子を生成するために使用することができます。このような &lt;code&gt;ObjID&lt;/code&gt; は、それが生成されるホストに関して、時間の経過とともに一意になります。&lt;a href=&quot;#%3Cinit%3E(int)&quot;&gt; &lt;code&gt;ObjID(int)&lt;/code&gt; &lt;/a&gt;コンストラクタは、「既知の」オブジェクト識別子を作成するために使用することができます。よく知られている &lt;code&gt;ObjID&lt;/code&gt; のスコープは、エクスポート先のRMIランタイムによって異なります。</target>
        </trans-unit>
        <trans-unit id="b4e3f86cc07101d3686dcbfa5a8ccabe930104d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#%3Cinit%3E()&quot;&gt;&lt;code&gt;UID()&lt;/code&gt;&lt;/a&gt; constructor can be used to generate an identifier that is unique over time with respect to the host it is generated on. The &lt;a href=&quot;#%3Cinit%3E(short)&quot;&gt;&lt;code&gt;UID(short)&lt;/code&gt;&lt;/a&gt; constructor can be used to create one of 2&lt;sup&gt;16&lt;/sup&gt; well-known identifiers.</source>
          <target state="translated">&lt;a href=&quot;#%3Cinit%3E()&quot;&gt; &lt;code&gt;UID()&lt;/code&gt; &lt;/a&gt;コンストラクタは、それが生成されるホストに対して時間にわたって一意である識別子を生成するために使用することができます。&lt;a href=&quot;#%3Cinit%3E(short)&quot;&gt; &lt;code&gt;UID(short)&lt;/code&gt; &lt;/a&gt;コンストラクタは、2のいずれかを作成するために使用することができる&lt;sup&gt;16&lt;/sup&gt;周知の識別子。</target>
        </trans-unit>
        <trans-unit id="682311c69459705b6611d2116dd3a23ba37087d4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;single-argument constructor&lt;/a&gt; requires any illegal characters in its argument to be quoted and preserves any escaped octets and</source>
          <target state="translated">&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;単一引数のコンストラクタは、&lt;/a&gt;任意のエスケープオクテットを引用しなければ、引数のいずれかの不正な文字を必要とし、保持し、</target>
        </trans-unit>
        <trans-unit id="0d511e9cdd40f514d5106cf2ef66216314a29c9d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)&quot;&gt;multi-argument constructors&lt;/a&gt; quote illegal characters as required by the components in which they appear. The percent character (&lt;code&gt;'%'&lt;/code&gt;) is always quoted by these constructors. Any</source>
          <target state="translated">&lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)&quot;&gt;多引数のコンストラクタは&lt;/a&gt;、彼らが表示されているコンポーネントで必要とされる不正な文字を引用します。パーセント文字（ &lt;code&gt;'%'&lt;/code&gt; ）は、これらのコンストラクターによって常に引用符で囲まれます。どれか</target>
        </trans-unit>
        <trans-unit id="12a6cdf59f396e7ede4167477fe96500e2984545" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#HOUR_OF_DAY&quot;&gt;&lt;code&gt;HOUR_OF_DAY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#HOUR&quot;&gt;&lt;code&gt;HOUR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#AM_PM&quot;&gt;&lt;code&gt;AM_PM&lt;/code&gt;&lt;/a&gt; fields are handled independently and the &lt;a href=&quot;#time_resolution&quot;&gt;the resolution rule for the time of day&lt;/a&gt; is applied. Clearing one of the fields doesn't reset the hour of day value of this &lt;code&gt;Calendar&lt;/code&gt;. Use &lt;a href=&quot;#set(int,int)&quot;&gt;&lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt;&lt;/a&gt; to reset the hour value.</source>
          <target state="translated">&lt;a href=&quot;#HOUR_OF_DAY&quot;&gt; &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#HOUR&quot;&gt; &lt;code&gt;HOUR&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#AM_PM&quot;&gt; &lt;code&gt;AM_PM&lt;/code&gt; &lt;/a&gt;フィールドは、独立して処理され、&lt;a href=&quot;#time_resolution&quot;&gt;その日の時間分解能のルールが&lt;/a&gt;適用されます。フィールドの1つをクリアしても、この &lt;code&gt;Calendar&lt;/code&gt; 時間帯の値はリセットされません。&lt;a href=&quot;#set(int,int)&quot;&gt; &lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt; &lt;/a&gt;を使用して、時間の値をリセットします。</target>
        </trans-unit>
        <trans-unit id="1d3797757117e40a3e66974929944ba9d9f97b3d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_LOCAL_DATE&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ISO_LOCAL_DATE&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f15ef683ec00288c71d3577bc42eb084e27f694" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_LOCAL_DATE_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ISO_LOCAL_DATE_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f808d49e1dbf56a3c4398227f6b1e2bf8250f43f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_LOCAL_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ISO_LOCAL_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0c109d69bd2a94cc8708a4b92a21150d220aabd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56ea47af67300951fe2f7673e1da328222067840" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt; where the instant is converted from &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;UTC&lt;/code&gt; offset. Parsing is case insensitive.</source>
          <target state="translated">&lt;a href=&quot;#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;瞬間をから変換され&lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt; &lt;/a&gt;使用して &lt;code&gt;UTC&lt;/code&gt; オフセットを。解析では大文字と小文字は区別されません。</target>
        </trans-unit>
        <trans-unit id="6462b3412eddb31db3350f0bec08a7567c11bfe2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#SHOWA&quot;&gt;&lt;code&gt;SHOWA&lt;/code&gt;&lt;/a&gt; era that contains 1970-01-01 (ISO calendar system) has the value 1. Later eras are numbered from 2 (&lt;a href=&quot;#HEISEI&quot;&gt;&lt;code&gt;HEISEI&lt;/code&gt;&lt;/a&gt;). Earlier eras are numbered 0 (&lt;a href=&quot;#TAISHO&quot;&gt;&lt;code&gt;TAISHO&lt;/code&gt;&lt;/a&gt;), -1 (&lt;a href=&quot;#MEIJI&quot;&gt;&lt;code&gt;MEIJI&lt;/code&gt;&lt;/a&gt;)).</source>
          <target state="translated">&lt;a href=&quot;#SHOWA&quot;&gt; &lt;code&gt;SHOWA&lt;/code&gt; &lt;/a&gt;1970-01-01（ISOカレンダーシステム）が含ま時代は1.後の時代には2（から番号付けされた値がある&lt;a href=&quot;#HEISEI&quot;&gt; &lt;code&gt;HEISEI&lt;/code&gt; &lt;/a&gt;）。初期の時代は0（&lt;a href=&quot;#TAISHO&quot;&gt; &lt;code&gt;TAISHO&lt;/code&gt; &lt;/a&gt;）、-1（&lt;a href=&quot;#MEIJI&quot;&gt; &lt;code&gt;MEIJI&lt;/code&gt; &lt;/a&gt;））と番号が付けられています。</target>
        </trans-unit>
        <trans-unit id="1218f5e11c1b0fbb96868c89e68629f6c6f31a8b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#SHOW_HIDDEN_FRAMES&quot;&gt;&lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt;&lt;/a&gt; option can also be used to show all reflection frames and it will also show other hidden frames that are implementation-specific.</source>
          <target state="translated">&lt;a href=&quot;#SHOW_HIDDEN_FRAMES&quot;&gt; &lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt; の&lt;/a&gt;オプションは、すべての反射フレームを表示するために使用することができ、それはまた、実装固有です他の隠されたフレームが表示されます。</target>
        </trans-unit>
        <trans-unit id="c3d51ccaaa6c7526c0b9fe4eaa230ff7631e6c8e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; methods that do not otherwise have a value to return are specified to return the network channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; を&lt;/a&gt;戻り値を返さないものな方法は、それらが呼び出される時にネットワークチャネルを返すように指定されています。これにより、メソッド呼び出しを連鎖させることができます。このインターフェイスの実装では、実装クラスでのメソッド呼び出しを連鎖できるように、戻り値の型を特殊化する必要があります。</target>
        </trans-unit>
        <trans-unit id="7b41cd732268ff9ba7ada77977453a57f1631483" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method determines whether the access request indicated by a specified permission should be granted or denied. A sample call appears below. In this example, &lt;code&gt;checkPermission&lt;/code&gt; will determine whether or not to grant &quot;read&quot; access to the file named &quot;testFile&quot; in the &quot;/temp&quot; directory.</source>
          <target state="translated">&lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;メソッドは、指定したアクセス権によって示されるアクセス要求が許可または拒否すべきかどうかを判断します。サンプル呼び出しを以下に示します。この例では、 &lt;code&gt;checkPermission&lt;/code&gt; は、「/ temp」ディレクトリにある「testFile」という名前のファイルへの「読み取り」アクセスを許可するかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="fc21b8772df57e16a19a32de1251db03dac1b038" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method synchronizes on the selector and its selected-key set in the same order as in a selection operation.</source>
          <target state="translated">&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法は、セレクタと選択動作と同じ順序で、その選択されたキーセットに同期させます。</target>
        </trans-unit>
        <trans-unit id="0c452ba0c8c3a01125dbd7aa512ab0bb6267b570" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#defineModulesWithOneLoader(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;defineModulesWithOneLoader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#defineModulesWithManyLoaders(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;defineModulesWithManyLoaders&lt;/code&gt;&lt;/a&gt; methods provide convenient ways to create a module layer where all modules are mapped to a single class loader or where each module is mapped to its own class loader. The &lt;a href=&quot;#defineModules(java.lang.module.Configuration,java.util.function.Function)&quot;&gt;&lt;code&gt;defineModules&lt;/code&gt;&lt;/a&gt; method is for more advanced cases where modules are mapped to custom class loaders by means of a function specified to the method. Each of these methods has an instance and static variant. The instance methods create a layer with the receiver as the parent layer. The static methods are for more advanced cases where there can be more than one parent layer or where a &lt;a href=&quot;modulelayer.controller&quot;&gt;&lt;code&gt;Controller&lt;/code&gt;&lt;/a&gt; is needed to control modules in the layer</source>
          <target state="translated">&lt;a href=&quot;#defineModulesWithOneLoader(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;defineModulesWithOneLoader&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#defineModulesWithManyLoaders(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;defineModulesWithManyLoaders&lt;/code&gt; &lt;/a&gt;方法は、すべてのモジュールは、単一のクラスローダにマッピングされるか、または各モジュールがそれ自身のクラスローダにマッピングされるモジュール層を作成するための便利な方法を提供します。&lt;a href=&quot;#defineModules(java.lang.module.Configuration,java.util.function.Function)&quot;&gt; &lt;code&gt;defineModules&lt;/code&gt; の&lt;/a&gt;方法は、モジュールがメソッドに指定された関数によってカスタムクラスローダーにマッピングされ、より高度なケースのためのものです。これらの各メソッドには、インスタンスと静的バリアントがあります。インスタンスメソッドは、レシーバーを親レイヤーとしてレイヤーを作成します。静的メソッドは、複数の親レイヤーが存在する可能性がある、またはレイヤー内のモジュールを制御するために&lt;a href=&quot;modulelayer.controller&quot;&gt; &lt;code&gt;Controller&lt;/code&gt; &lt;/a&gt;が必要な、より高度なケース向けです。</target>
        </trans-unit>
        <trans-unit id="8b028e1e9572581fd279877b772e9ad7c8a10ac0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#element()&quot;&gt;&lt;code&gt;element()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#peek()&quot;&gt;&lt;code&gt;peek()&lt;/code&gt;&lt;/a&gt; methods return, but do not remove, the head of the queue.</source>
          <target state="translated">&lt;a href=&quot;#element()&quot;&gt; &lt;code&gt;element()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#peek()&quot;&gt; &lt;code&gt;peek()&lt;/code&gt; &lt;/a&gt;メソッドは、キューの先頭を返しますが、削除しないでください。</target>
        </trans-unit>
        <trans-unit id="59fe8ba28696ef3fa84a45d40a68ce4ad796fed3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#fillInStackTrace()&quot;&gt;&lt;code&gt;fillInStackTrace()&lt;/code&gt;&lt;/a&gt; method is called to initialize the stack trace data in the newly created throwable.</source>
          <target state="translated">&lt;a href=&quot;#fillInStackTrace()&quot;&gt; &lt;code&gt;fillInStackTrace()&lt;/code&gt; &lt;/a&gt;メソッドは、新しく作成されたスロー可能オブジェクト内のスタックトレースデータを初期化するために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="65031d3365faff2695a182538e3b2421b65176cb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#find()&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; method scans the input sequence looking for the next subsequence that matches the pattern.</source>
          <target state="translated">&lt;a href=&quot;#find()&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;方法は、パターンに一致する次のサブシーケンスを探して入力シーケンスをスキャンします。</target>
        </trans-unit>
        <trans-unit id="485afabc350f71204e8f4d536d46cdaf239de32b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#find(java.lang.String)&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#findAll()&quot;&gt;&lt;code&gt;findAll&lt;/code&gt;&lt;/a&gt; methods defined here can fail for several reasons. These include I/O errors, errors detected parsing a module descriptor (&lt;code&gt;module-info.class&lt;/code&gt;), or in the case of &lt;code&gt;ModuleFinder&lt;/code&gt; returned by &lt;a href=&quot;#of(java.nio.file.Path...)&quot;&gt;&lt;code&gt;ModuleFinder.of&lt;/code&gt;&lt;/a&gt;, that two or more modules with the same name are found in a directory. When an error is detected then these methods throw &lt;a href=&quot;findexception&quot;&gt;&lt;code&gt;FindException&lt;/code&gt;&lt;/a&gt; with an appropriate &lt;a href=&quot;../throwable#getCause()&quot;&gt;&lt;code&gt;cause&lt;/code&gt;&lt;/a&gt;. The behavior of a &lt;code&gt;ModuleFinder&lt;/code&gt; after a &lt;code&gt;FindException&lt;/code&gt; is thrown is undefined. For example, invoking &lt;code&gt;find&lt;/code&gt; after an exception is thrown may or may not scan the same modules that lead to the exception. It is recommended that a module finder be discarded after an exception is thrown.</source>
          <target state="translated">&lt;a href=&quot;#find(java.lang.String)&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#findAll()&quot;&gt; &lt;code&gt;findAll&lt;/code&gt; の&lt;/a&gt;ここで定義された方法は、いくつかの理由で失敗することができます。これには、I / Oエラー、モジュール記述子（ &lt;code&gt;module-info.class&lt;/code&gt; ）の解析で検出されたエラー、または &lt;code&gt;ModuleFinder&lt;/code&gt; .ofによって返された&lt;a href=&quot;#of(java.nio.file.Path...)&quot;&gt; &lt;code&gt;ModuleFinder.of&lt;/code&gt; &lt;/a&gt;場合、同じ名前の2つ以上のモジュールがディレクトリにあることが含まれます。エラーが検出されると、これらのメソッドは適切な&lt;a href=&quot;../throwable#getCause()&quot;&gt; &lt;code&gt;cause&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;findexception&quot;&gt; &lt;code&gt;FindException&lt;/code&gt; &lt;/a&gt;をスローします。行動 &lt;code&gt;ModuleFinder&lt;/code&gt; 後 &lt;code&gt;FindException&lt;/code&gt; は未定義でスローされます。たとえば、 &lt;code&gt;find&lt;/code&gt; を呼び出す例外がスローされた後、例外につながる同じモジュールをスキャンする場合としない場合があります。例外がスローされた後は、モジュールファインダーを破棄することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a0be6cc5b803049be30b6393527056072d664d40" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#findInLine(java.lang.String)&quot;&gt;&lt;code&gt;findInLine()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#findWithinHorizon(java.lang.String,int)&quot;&gt;&lt;code&gt;findWithinHorizon()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#skip(java.util.regex.Pattern)&quot;&gt;&lt;code&gt;skip()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#findAll(java.util.regex.Pattern)&quot;&gt;&lt;code&gt;findAll()&lt;/code&gt;&lt;/a&gt; methods operate independently of the delimiter pattern. These methods will attempt to match the specified pattern with no regard to delimiters in the input and thus can be used in special circumstances where delimiters are not relevant. These methods may block waiting for more input.</source>
          <target state="translated">&lt;a href=&quot;#findInLine(java.lang.String)&quot;&gt; &lt;code&gt;findInLine()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#findWithinHorizon(java.lang.String,int)&quot;&gt; &lt;code&gt;findWithinHorizon()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#skip(java.util.regex.Pattern)&quot;&gt; &lt;code&gt;skip()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#findAll(java.util.regex.Pattern)&quot;&gt; &lt;code&gt;findAll()&lt;/code&gt; &lt;/a&gt;メソッドは、独立して、区切り文字パターンの動作。これらのメソッドは、入力の区切り文字に関係なく、指定されたパターンに一致しようとするため、区切り文字が関係しない特別な状況で使用できます。これらのメソッドは、追加の入力の待機をブロックする場合があります。</target>
        </trans-unit>
        <trans-unit id="76c75e1993d06be0c203f41c01f7c21dc08dea73" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#flags()&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentryflag&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; to indicate how entries are inherited and propagated</source>
          <target state="translated">&lt;a href=&quot;#flags()&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt;コンポーネントは、一連のある&lt;a href=&quot;aclentryflag&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt;エントリは継承され、伝播される方法を示すために、</target>
        </trans-unit>
        <trans-unit id="190f5e4e1c44c5bff240e5e10541bfc811769ca9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#floatdFlags&quot;&gt;default behavior&lt;/a&gt; when no flags are given is the same as for Float and Double.</source>
          <target state="translated">フラグが指定されていない場合の&lt;a href=&quot;#floatdFlags&quot;&gt;デフォルトの動作&lt;/a&gt;は、FloatおよびDoubleの場合と同じです。</target>
        </trans-unit>
        <trans-unit id="8440ae8a2e8c8cb5abe641e67dc8c2628fb82898" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#format(double,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt;&lt;code&gt;format(double, StringBuffer, FieldPosition)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#format(long,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt;&lt;code&gt;format(long, StringBuffer, FieldPosition)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#parse(java.lang.String,java.text.ParsePosition)&quot;&gt;&lt;code&gt;parse(String, ParsePosition)&lt;/code&gt;&lt;/a&gt; methods may throw &lt;code&gt;NullPointerException&lt;/code&gt;, if any of their parameter is &lt;code&gt;null&lt;/code&gt;. The subclass may provide its own implementation and specification about &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#format(double,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt; &lt;code&gt;format(double, StringBuffer, FieldPosition)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#format(long,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt; &lt;code&gt;format(long, StringBuffer, FieldPosition)&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;#parse(java.lang.String,java.text.ParsePosition)&quot;&gt; &lt;code&gt;parse(String, ParsePosition)&lt;/code&gt; &lt;/a&gt;メソッドがスローできる &lt;code&gt;NullPointerException&lt;/code&gt; がそれらのパラメータのいずれかがある場合、 &lt;code&gt;null&lt;/code&gt; 。サブクラスは、 &lt;code&gt;NullPointerException&lt;/code&gt; に関する独自の実装と仕様を提供する場合があります。</target>
        </trans-unit>
        <trans-unit id="6ddeb2913f2a55c19f8bf8bdbf4bdad02909664b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt;&lt;code&gt;format(Date, StringBuffer, FieldPosition)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#parse(java.lang.String,java.text.ParsePosition)&quot;&gt;&lt;code&gt;parse(String, ParsePosition)&lt;/code&gt;&lt;/a&gt; methods may throw &lt;code&gt;NullPointerException&lt;/code&gt;, if any of their parameter is &lt;code&gt;null&lt;/code&gt;. The subclass may provide its own implementation and specification about &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt; &lt;code&gt;format(Date, StringBuffer, FieldPosition)&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;#parse(java.lang.String,java.text.ParsePosition)&quot;&gt; &lt;code&gt;parse(String, ParsePosition)&lt;/code&gt; &lt;/a&gt;メソッドスローされることがあり &lt;code&gt;NullPointerException&lt;/code&gt; がそのパラメータのいずれかがある場合は、 &lt;code&gt;null&lt;/code&gt; を。サブクラスは、 &lt;code&gt;NullPointerException&lt;/code&gt; に関する独自の実装と仕様を提供する場合があります。</target>
        </trans-unit>
        <trans-unit id="c35eba97249f91e14a4aa2e210793e65c3843e54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#format(java.util.Locale,java.lang.String,java.lang.Object...)&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt; method for this object which has a locale argument does not change this value.</source>
          <target state="translated">ロケール引数を持つこのオブジェクトの&lt;a href=&quot;#format(java.util.Locale,java.lang.String,java.lang.Object...)&quot;&gt; &lt;code&gt;format&lt;/code&gt; &lt;/a&gt;メソッドは、この値を変更しません。</target>
        </trans-unit>
        <trans-unit id="2c86df6f2aba994c7c6bab473720f8bbcbca5a50" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getAnnotationsByType(java.lang.Class)&quot;&gt;&lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getDeclaredAnnotationsByType(java.lang.Class)&quot;&gt;&lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; methods support multiple annotations of the same type on an element. If the argument to either method is a repeatable annotation type (JLS 9.6), then the method will &quot;look through&quot; a container annotation (JLS 9.7), if present, and return any annotations inside the container. Container annotations may be generated at compile-time to wrap multiple annotations of the argument type.</source>
          <target state="translated">&lt;a href=&quot;#getAnnotationsByType(java.lang.Class)&quot;&gt; &lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#getDeclaredAnnotationsByType(java.lang.Class)&quot;&gt; &lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt;メソッドは、要素上で同じタイプの複数の注釈をサポートします。いずれかのメソッドの引数が繰り返し可能なアノテーションタイプ（JLS 9.6）の場合、メソッドはコンテナアノテーション（JLS 9.7）が存在する場合はそれを「調べ」、コンテナ内のアノテーションを返します。コンテナの注釈は、引数タイプの複数の注釈をラップするためにコンパイル時に生成される場合があります。</target>
        </trans-unit>
        <trans-unit id="fdab4d7eeb982b1f24089281c7dfb71b45783340" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getAttributes()&quot;&gt;&lt;code&gt;getAttributes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getOperations()&quot;&gt;&lt;code&gt;getOperations()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getConstructors()&quot;&gt;&lt;code&gt;getConstructors()&lt;/code&gt;&lt;/a&gt; methods of the implementing class should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt;&lt;code&gt;MBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; respectively which implement the &lt;a href=&quot;openmbeanattributeinfo&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbeanoperationinfo&quot;&gt;&lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;openmbeanconstructorinfo&quot;&gt;&lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; interface respectively.</source>
          <target state="translated">実装クラスの&lt;a href=&quot;#getAttributes()&quot;&gt; &lt;code&gt;getAttributes()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getOperations()&quot;&gt; &lt;code&gt;getOperations()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#getConstructors()&quot;&gt; &lt;code&gt;getConstructors()&lt;/code&gt; &lt;/a&gt;メソッドは、実行時に、それぞれ&lt;a href=&quot;openmbeanattributeinfo&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;openmbeanoperationinfo&quot;&gt; &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; 、&lt;/a&gt;または&lt;a href=&quot;openmbeanconstructorinfo&quot;&gt; &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; &lt;/a&gt;インターフェイスを実装する&lt;a href=&quot;../mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; 、&lt;/a&gt;または&lt;a href=&quot;../mbeanconstructorinfo&quot;&gt; &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; の&lt;/a&gt;サブクラスのインスタンスの配列を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="72faf261c7a536f2c59a574937656ff7b51fe043" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getBody()&quot;&gt;&lt;code&gt;getBody()&lt;/code&gt;&lt;/a&gt; method returns a &lt;a href=&quot;../../../../java.base/java/util/concurrent/completionstage&quot;&gt;&lt;code&gt;CompletionStage&lt;/code&gt;&lt;/a&gt;&amp;lt;&lt;code&gt;T&lt;/code&gt;&amp;gt; that provides the response body object. The &lt;code&gt;CompletionStage&lt;/code&gt; must be obtainable at any time. When it completes depends on the nature of type &lt;code&gt;T&lt;/code&gt;. In many cases, when &lt;code&gt;T&lt;/code&gt; represents the entire body after being consumed then the &lt;code&gt;CompletionStage&lt;/code&gt; completes after the body has been consumed. If &lt;code&gt;T&lt;/code&gt; is a streaming type, such as &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;, then it completes before the body has been read, because the calling code uses the &lt;code&gt;InputStream&lt;/code&gt; to consume the data.</source>
          <target state="translated">&lt;a href=&quot;#getBody()&quot;&gt; &lt;code&gt;getBody()&lt;/code&gt; &lt;/a&gt;メソッドの戻り&lt;a href=&quot;../../../../java.base/java/util/concurrent/completionstage&quot;&gt; &lt;code&gt;CompletionStage&lt;/code&gt; &lt;/a&gt; &amp;lt; &lt;code&gt;T&lt;/code&gt; &amp;gt;レスポンスボディオブジェクトを提供します。 &lt;code&gt;CompletionStage&lt;/code&gt; はいつでも入手可能でなければなりません。いつ完了するかは、タイプ &lt;code&gt;T&lt;/code&gt; の性質によって異なります。多くの場合、 &lt;code&gt;T&lt;/code&gt; が消費された後の全身を表す場合、 &lt;code&gt;CompletionStage&lt;/code&gt; は体が消費された後に完了します。 &lt;code&gt;T&lt;/code&gt; が&lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;などのストリーミングタイプの場合、呼び出し元のコードは &lt;code&gt;InputStream&lt;/code&gt; を使用してデータを消費するため、本文が読み取られる前に完了します。</target>
        </trans-unit>
        <trans-unit id="32435269bba763b6eed91c0fa1607a52b35430fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getCalendar()&quot;&gt;&lt;code&gt;getCalendar()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getNumberFormat()&quot;&gt;&lt;code&gt;getNumberFormat()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getTimeZone()&quot;&gt;&lt;code&gt;getTimeZone()&lt;/code&gt;&lt;/a&gt; methods may return &lt;code&gt;null&lt;/code&gt;, if the respective values of this instance is set to &lt;code&gt;null&lt;/code&gt; through the corresponding setter methods. For Example: &lt;a href=&quot;#getTimeZone()&quot;&gt;&lt;code&gt;getTimeZone()&lt;/code&gt;&lt;/a&gt; may return &lt;code&gt;null&lt;/code&gt;, if the &lt;code&gt;TimeZone&lt;/code&gt; value of this instance is set as &lt;a href=&quot;#setTimeZone(java.util.TimeZone)&quot;&gt;&lt;code&gt;setTimeZone(null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#getCalendar()&quot;&gt; &lt;code&gt;getCalendar()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getNumberFormat()&quot;&gt; &lt;code&gt;getNumberFormat()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#getTimeZone()&quot;&gt; &lt;code&gt;getTimeZone()&lt;/code&gt; &lt;/a&gt;メソッドが戻ってもよい &lt;code&gt;null&lt;/code&gt; このインスタンスのそれぞれの値に設定されている場合、 &lt;code&gt;null&lt;/code&gt; 対応するセッターメソッドを介し。例：このインスタンスの &lt;code&gt;TimeZone&lt;/code&gt; 値が&lt;a href=&quot;#setTimeZone(java.util.TimeZone)&quot;&gt; &lt;code&gt;setTimeZone(null)&lt;/code&gt; &lt;/a&gt;として設定されている場合、&lt;a href=&quot;#getTimeZone()&quot;&gt; &lt;code&gt;getTimeZone()&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;null&lt;/code&gt; を返す場合があります。</target>
        </trans-unit>
        <trans-unit id="6d548ec1adba7df814c35c56a9d94e05c3e1227d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getDeclaringClass()&quot;&gt;&lt;code&gt;getDeclaringClass()&lt;/code&gt;&lt;/a&gt; method may be unsupported as determined by the &lt;a href=&quot;stackwalker.option&quot;&gt;stack walking options&lt;/a&gt; of a &lt;a href=&quot;stackwalker&quot;&gt;stack walker&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#getDeclaringClass()&quot;&gt; &lt;code&gt;getDeclaringClass()&lt;/code&gt; &lt;/a&gt;によって決定されるような方法は、サポートされていないかもしれ&lt;a href=&quot;stackwalker.option&quot;&gt;スタック歩行オプション&lt;/a&gt;の&lt;a href=&quot;stackwalker&quot;&gt;スタックウォーカー&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d4c01e514a6c723b1c356309d3d13365f6f6cf37" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getFileStores()&quot;&gt;&lt;code&gt;getFileStores&lt;/code&gt;&lt;/a&gt; method returns an iterator over the underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;file-stores&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#getFileStores()&quot;&gt; &lt;code&gt;getFileStores&lt;/code&gt; の&lt;/a&gt;方法は、基礎の反復子を返し&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;file-stores&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e2fd79ed77ea552ff89f8d8ead155a3581da1522" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getIterator(javax.swing.text.html.HTML.Tag)&quot;&gt;&lt;code&gt;getIterator(HTML.Tag t)&lt;/code&gt;&lt;/a&gt; method can also be used for finding all occurrences of the specified HTML tag in the document.</source>
          <target state="translated">&lt;a href=&quot;#getIterator(javax.swing.text.html.HTML.Tag)&quot;&gt; &lt;code&gt;getIterator(HTML.Tag t)&lt;/code&gt; は&lt;/a&gt;この方法はまた、文書で指定されたHTMLタグのすべての出現を見つけるために使用することができます。</target>
        </trans-unit>
        <trans-unit id="3300fd87f6f8a6538e519485e93d458bc5394918" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getOwner()&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods may be used to read or update the owner of the file.</source>
          <target state="translated">&lt;a href=&quot;#getOwner()&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; メソッド&lt;/a&gt;または&lt;a href=&quot;#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;方法は、読み取りまたはファイルの所有者を更新するために使用されてもよいです。</target>
        </trans-unit>
        <trans-unit id="64901b8451e1c8852e7089d807ed5f8258270d8e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPath(java.lang.String,java.lang.String...)&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method converts a system dependent &lt;em&gt;path string&lt;/em&gt;, returning a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; object that may be used to locate and access a file.</source>
          <target state="translated">&lt;a href=&quot;#getPath(java.lang.String,java.lang.String...)&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;方法は、システムに依存する変換&lt;em&gt;パス文字列を&lt;/em&gt;返す、&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;ファイルを見つけてアクセスするために使用することができるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="8fd2d9f74ec9cdead2e0184fbf49aa9ddf9115b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPathMatcher(java.lang.String)&quot;&gt;&lt;code&gt;getPathMatcher&lt;/code&gt;&lt;/a&gt; method is used to create a &lt;a href=&quot;pathmatcher&quot;&gt;&lt;code&gt;PathMatcher&lt;/code&gt;&lt;/a&gt; that performs match operations on paths.</source>
          <target state="translated">&lt;a href=&quot;#getPathMatcher(java.lang.String)&quot;&gt; &lt;code&gt;getPathMatcher&lt;/code&gt; &lt;/a&gt;方法を作成するために使用され&lt;a href=&quot;pathmatcher&quot;&gt; &lt;code&gt;PathMatcher&lt;/code&gt; &lt;/a&gt;実行がパス上の操作と一致していることを。</target>
        </trans-unit>
        <trans-unit id="a560f4cd636efba36278b039e9aa6637d4fa976d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPeerCertificates()&quot;&gt;&lt;code&gt;getPeerCertificates()&lt;/code&gt;&lt;/a&gt; method that returns an array of &lt;code&gt;java.security.cert.Certificate&lt;/code&gt; should be used instead.</source>
          <target state="translated">&lt;a href=&quot;#getPeerCertificates()&quot;&gt; &lt;code&gt;getPeerCertificates()&lt;/code&gt; &lt;/a&gt;の配列を返すメソッド &lt;code&gt;java.security.cert.Certificate&lt;/code&gt; 代わりに使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="313bda01207414193392bffc5273876e5116943a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPlatformClassLoader()&quot;&gt;&lt;code&gt;platform class loader&lt;/code&gt;&lt;/a&gt; may delegate to the application class loader but the application class loader is not its ancestor. When invoked on the platform class loader, this method will not find packages defined to the application class loader.</source>
          <target state="translated">&lt;a href=&quot;#getPlatformClassLoader()&quot;&gt; &lt;code&gt;platform class loader&lt;/code&gt; &lt;/a&gt;アプリケーションクラスローダに委任することができるが、アプリケーションのクラスローダは、その祖先ではありません。プラットフォームクラスローダーで呼び出された場合、このメソッドはアプリケーションクラスローダーに定義されたパッケージを検索しません。</target>
        </trans-unit>
        <trans-unit id="0c93939323354c73ed8f0956cf1175a9c81572a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPlatformClassLoader()&quot;&gt;&lt;code&gt;platform class loader&lt;/code&gt;&lt;/a&gt; may delegate to the application class loader. In other words, packages in modules defined to the application class loader may be visible to the platform class loader. On the other hand, the application class loader is not its ancestor and hence when invoked on the platform class loader, this method will not return any packages defined to the application class loader.</source>
          <target state="translated">&lt;a href=&quot;#getPlatformClassLoader()&quot;&gt; &lt;code&gt;platform class loader&lt;/code&gt; &lt;/a&gt;アプリケーションクラスローダに委任することができます。つまり、アプリケーションクラスローダーに定義されたモジュール内のパッケージは、プラットフォームクラスローダーに表示される場合があります。一方、アプリケーションクラスローダーはその祖先ではないため、プラットフォームクラスローダーで呼び出された場合、このメソッドはアプリケーションクラスローダーに定義されたパッケージを返しません。</target>
        </trans-unit>
        <trans-unit id="457ebe76737264b01c1e1c27299d64cf99dbc43d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPlatformManagementInterfaces()&quot;&gt;&lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt;&lt;/a&gt; method returns all management interfaces supported in the Java virtual machine including the standard management interfaces listed in the tables below as well as the management interfaces extended by the JDK implementation.</source>
          <target state="translated">&lt;a href=&quot;#getPlatformManagementInterfaces()&quot;&gt; &lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンでサポートされているすべての管理インターフェースを返します。これには、以下の表にリストされている標準の管理インターフェースと、JDK実装によって拡張された管理インターフェースが含まれます。</target>
        </trans-unit>
        <trans-unit id="84b83e16e7d300b2d7773bc228f8821d4fecf3d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getRawUserInfo()&quot;&gt;&lt;code&gt;getRawUserInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getRawPath()&quot;&gt;&lt;code&gt;getRawPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getRawQuery()&quot;&gt;&lt;code&gt;getRawQuery&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getRawFragment()&quot;&gt;&lt;code&gt;getRawFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getRawAuthority()&quot;&gt;&lt;code&gt;getRawAuthority&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#getRawSchemeSpecificPart()&quot;&gt;&lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; methods return the values of their corresponding components in raw form, without interpreting any escaped octets. The strings returned by these methods may contain both escaped octets and</source>
          <target state="translated">&lt;a href=&quot;#getRawUserInfo()&quot;&gt; &lt;code&gt;getRawUserInfo&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getRawPath()&quot;&gt; &lt;code&gt;getRawPath&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getRawQuery()&quot;&gt; &lt;code&gt;getRawQuery&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getRawFragment()&quot;&gt; &lt;code&gt;getRawFragment&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getRawAuthority()&quot;&gt; &lt;code&gt;getRawAuthority&lt;/code&gt; &lt;/a&gt;、及び&lt;a href=&quot;#getRawSchemeSpecificPart()&quot;&gt; &lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt; の&lt;/a&gt;方法は、任意のエスケープオクテットを解釈せずに、そのままの形式でそれらの対応する成分の値を返します。これらのメソッドによって返される文字列には、エスケープされたオクテットと</target>
        </trans-unit>
        <trans-unit id="891cbbb7b678ed269448de3333f3c927fe5fa40f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getRemaining()&quot;&gt;remaining byte count&lt;/a&gt; will be reduced by the number of consumed input bytes. If the &lt;a href=&quot;#setInput(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;setInput(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method was called to provide a buffer for input, the input buffer's position will be advanced the number of consumed bytes.</source>
          <target state="translated">&lt;a href=&quot;#getRemaining()&quot;&gt;残りのバイト数は&lt;/a&gt;、消費入力バイト数によって削減されます。場合&lt;a href=&quot;#setInput(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;setInput(ByteBuffer)&lt;/code&gt; &lt;/a&gt;メソッドは、入力のためのバッファを提供するために呼ばれた、入力バッファの位置は、消費されたバイト数を前進します。</target>
        </trans-unit>
        <trans-unit id="71a5ae33e22c851a1c1a637a5ed40b081c469403" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getRevocationChecker()&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathBuilder&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">&lt;a href=&quot;#getRevocationChecker()&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt;メソッドは、アプリケーションにより使用される追加のアルゴリズム固有のパラメータとオプションを指定することを可能に &lt;code&gt;CertPathBuilder&lt;/code&gt; 証明書の失効ステータスをチェックするときに。これは、PKIXアルゴリズムでどのように使用されるかを示す例です。</target>
        </trans-unit>
        <trans-unit id="6225f57b6a8a1feec5ebc1ed8607b650f0217212" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getRevocationChecker()&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathValidator&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">&lt;a href=&quot;#getRevocationChecker()&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt;メソッドは、アプリケーションにより使用される追加のアルゴリズム固有のパラメータとオプションを指定することを可能に &lt;code&gt;CertPathValidator&lt;/code&gt; 証明書の失効ステータスをチェックするときに。これは、PKIXアルゴリズムでどのように使用されるかを示す例です。</target>
        </trans-unit>
        <trans-unit id="8330d802646a04e518219a971d7d2f79724a3ffd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getSignature()&quot;&gt;&lt;code&gt;getSignature()&lt;/code&gt;&lt;/a&gt; method should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt; which implements the &lt;a href=&quot;openmbeanparameterinfo&quot;&gt;&lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt;&lt;/a&gt; interface (typically &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;#getSignature()&quot;&gt; &lt;code&gt;getSignature()&lt;/code&gt; &lt;/a&gt;メソッドは、実行時のサブクラスのインスタンスの配列を返す必要があり&lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt;実装&lt;a href=&quot;openmbeanparameterinfo&quot;&gt; &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; の&lt;/a&gt;インタフェース（通常&lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; を&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="31af394073090130fd1f8beb5c75278aebe2c90d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getSourceRegion(javax.imageio.ImageReadParam,int,int)&quot;&gt;&lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt;&lt;/a&gt; method may be used if only source clipping is desired.</source>
          <target state="translated">ソースクリッピングのみが必要な場合は、&lt;a href=&quot;#getSourceRegion(javax.imageio.ImageReadParam,int,int)&quot;&gt; &lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt; &lt;/a&gt;メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="83d43fd9e2a48582721d6f9affffd5098ee4bec9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getUsage()&quot;&gt;&lt;code&gt;getUsage()&lt;/code&gt;&lt;/a&gt; method provides an estimate of the current usage of a memory pool. For a garbage-collected memory pool, the amount of used memory includes the memory occupied by all objects in the pool including both &lt;em&gt;reachable&lt;/em&gt; and &lt;em&gt;unreachable&lt;/em&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;#getUsage()&quot;&gt; &lt;code&gt;getUsage()&lt;/code&gt; &lt;/a&gt;メソッドは、メモリ・プールの現在の使用量の推定値を提供します。ガベージコレクションされたメモリプールの場合、使用されるメモリの量には、&lt;em&gt;到達可能な&lt;/em&gt;オブジェクトと&lt;em&gt;到達不可能な&lt;/em&gt;オブジェクトの両方を含む、プール内のすべてのオブジェクトが占有するメモリが含まれます。</target>
        </trans-unit>
        <trans-unit id="559aadec9e879fc10fa12147be2c7e895971e5af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getUserInfo()&quot;&gt;&lt;code&gt;getUserInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getPath()&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getQuery()&quot;&gt;&lt;code&gt;getQuery&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getFragment()&quot;&gt;&lt;code&gt;getFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getAuthority()&quot;&gt;&lt;code&gt;getAuthority&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#getSchemeSpecificPart()&quot;&gt;&lt;code&gt;getSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; methods decode any escaped octets in their corresponding components. The strings returned by these methods may contain both</source>
          <target state="translated">&lt;a href=&quot;#getUserInfo()&quot;&gt; &lt;code&gt;getUserInfo&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getPath()&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getQuery()&quot;&gt; &lt;code&gt;getQuery&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getFragment()&quot;&gt; &lt;code&gt;getFragment&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getAuthority()&quot;&gt; &lt;code&gt;getAuthority&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#getSchemeSpecificPart()&quot;&gt; &lt;code&gt;getSchemeSpecificPart&lt;/code&gt; の&lt;/a&gt;方法は、それらの対応する構成要素の任意のエスケープオクテットを復号します。これらのメソッドによって返される文字列には、両方が含まれる場合があります</target>
        </trans-unit>
        <trans-unit id="c1ecc682c394d5429ead1bc5e6b032e53a1e3cfd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getUserPrincipalLookupService()&quot;&gt;&lt;code&gt;getUserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt;&lt;code&gt;UserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; to lookup users or groups by name.</source>
          <target state="translated">&lt;a href=&quot;#getUserPrincipalLookupService()&quot;&gt; &lt;code&gt;getUserPrincipalLookupService&lt;/code&gt; の&lt;/a&gt;方法は返し&lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt; &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; &lt;/a&gt;名前でユーザーまたはグループを検索するために。</target>
        </trans-unit>
        <trans-unit id="745b9cdeea817364e334364a39d0a45c736ab00e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isCollectionUsageThresholdSupported()&quot;&gt;&lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if this functionality is supported.</source>
          <target state="translated">&lt;a href=&quot;#isCollectionUsageThresholdSupported()&quot;&gt; &lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、この機能がサポートされているかどうかを決定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="90fec33b491d33702594f93509a72af9d3f5cb90" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isProxyClass(java.lang.Class)&quot;&gt;&lt;code&gt;Proxy.isProxyClass&lt;/code&gt;&lt;/a&gt; method can be used to determine if a given class is a proxy class.</source>
          <target state="translated">&lt;a href=&quot;#isProxyClass(java.lang.Class)&quot;&gt; &lt;code&gt;Proxy.isProxyClass&lt;/code&gt; の&lt;/a&gt;方法は、所与のクラスはプロキシクラスであるかどうかを決定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="2c598e99d45cbbe9a04f38fa8dc91096cbd3a7d8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isThreadContentionMonitoringSupported()&quot;&gt;&lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports thread contention monitoring. The thread contention monitoring is disabled by default. The &lt;a href=&quot;#setThreadContentionMonitoringEnabled(boolean)&quot;&gt;&lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt;&lt;/a&gt; method can be used to enable thread contention monitoring.</source>
          <target state="translated">&lt;a href=&quot;#isThreadContentionMonitoringSupported()&quot;&gt; &lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンがスレッドコンテンション監視をサポートしているかどうかを決定するために使用することができます。スレッド競合の監視はデフォルトで無効になっています。&lt;a href=&quot;#setThreadContentionMonitoringEnabled(boolean)&quot;&gt; &lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt; &lt;/a&gt;メソッドは、スレッドコンテンション監視を可能にするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="7b9631e9f6d40e6b620e784137534f813361a172" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isThreadCpuTimeSupported()&quot;&gt;&lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for any thread. The &lt;a href=&quot;#isCurrentThreadCpuTimeSupported()&quot;&gt;&lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for the current thread. A Java virtual machine implementation that supports CPU time measurement for any thread will also support that for the current thread.</source>
          <target state="translated">&lt;a href=&quot;#isThreadCpuTimeSupported()&quot;&gt; &lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンのサポートは、任意のスレッドのCPU時間を測定するかどうかを決定するために使用することができます。&lt;a href=&quot;#isCurrentThreadCpuTimeSupported()&quot;&gt; &lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンのサポートは、現在のスレッドのCPU時間を測定するかどうかを決定するために使用することができます。任意のスレッドのCPU時間測定をサポートするJava仮想マシンの実装は、現在のスレッドのCPU時間測定もサポートします。</target>
        </trans-unit>
        <trans-unit id="07a942a3ea7a2470fc40b97213df775f8393b88e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#join(java.net.InetAddress,java.net.NetworkInterface)&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt;&lt;/a&gt; method is used to join a group and receive all multicast datagrams sent to the group. A channel may join several multicast groups and may join the same group on several &lt;a href=&quot;../../net/networkinterface&quot;&gt;&lt;code&gt;interfaces&lt;/code&gt;&lt;/a&gt;. Membership is dropped by invoking the &lt;a href=&quot;membershipkey#drop()&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method on the returned &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt;. If the underlying platform supports source filtering then the &lt;a href=&quot;membershipkey#block(java.net.InetAddress)&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;membershipkey#unblock(java.net.InetAddress)&quot;&gt;&lt;code&gt;unblock&lt;/code&gt;&lt;/a&gt; methods can be used to block or unblock multicast datagrams from particular source addresses.</source>
          <target state="translated">&lt;a href=&quot;#join(java.net.InetAddress,java.net.NetworkInterface)&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt; &lt;/a&gt;メソッドは、グループに参加し、グループに送信されたすべてのマルチキャストデータグラムを受信するために使用されます。チャネルは、複数のマルチキャストグループに参加する場合があり、複数の&lt;a href=&quot;../../net/networkinterface&quot;&gt; &lt;code&gt;interfaces&lt;/code&gt; &lt;/a&gt;同じグループに参加する場合があります。返された&lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;membershipkey#drop()&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、メンバーシップが削除されます。下層のプラットフォームサポート源がフィルタリング場合、&lt;a href=&quot;membershipkey#block(java.net.InetAddress)&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;membershipkey#unblock(java.net.InetAddress)&quot;&gt; &lt;code&gt;unblock&lt;/code&gt; &lt;/a&gt;方法は、特定の送信元アドレスからのブロックまたはブロック解除マルチキャストデータグラムを使用することができます。</target>
        </trans-unit>
        <trans-unit id="9227e6048eb60c8fc84d7128ee8ee2b101cf46af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#join(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress)&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt;&lt;/a&gt; method is used to begin receiving datagrams sent to a group whose source address matches a given source address. This method throws &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; if the underlying platform does not support source filtering. Membership is &lt;em&gt;cumulative&lt;/em&gt; and this method may be invoked again with the same group and interface to allow receiving datagrams from other source addresses. The method returns a &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt; that represents membership to receive datagrams from the given source address. Invoking the key's &lt;a href=&quot;membershipkey#drop()&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method drops membership so that datagrams from the source address can no longer be received.</source>
          <target state="translated">&lt;a href=&quot;#join(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress)&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt; &lt;/a&gt;方法は、その元アドレス指定された送信元アドレスと一致するグループに送信されたデータグラムの受信を開始するために使用されます。基盤となるプラットフォームがソースフィルタリングをサポートしてい&lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;場合、このメソッドはUnsupportedOperationExceptionをスローします。メンバーシップは&lt;em&gt;累積的で&lt;/em&gt;あり、このメソッドを同じグループとインターフェイスで再度呼び出して、他の送信元アドレスからデータグラムを受信できるようにすることができます。このメソッドは、指定された送信元アドレスからデータグラムを受信するための&lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; &lt;/a&gt;を表すMembershipKeyを返します。キーの&lt;a href=&quot;membershipkey#drop()&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、メンバーシップが削除され、送信元アドレスからのデータグラムを受信できなくなります。</target>
        </trans-unit>
        <trans-unit id="283c2ba216ecb30af2542116821ebfc3dd6848c1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#load(java.io.Reader)&quot;&gt;&lt;code&gt;load(Reader)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;#store(java.io.Writer,java.lang.String)&quot;&gt;&lt;code&gt;store(Writer, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties from and to a character based stream in a simple line-oriented format specified below. The &lt;a href=&quot;#load(java.io.InputStream)&quot;&gt;&lt;code&gt;load(InputStream)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;#store(java.io.OutputStream,java.lang.String)&quot;&gt;&lt;code&gt;store(OutputStream, String)&lt;/code&gt;&lt;/a&gt; methods work the same way as the load(Reader)/store(Writer, String) pair, except the input/output stream is encoded in ISO 8859-1 character encoding. Characters that cannot be directly represented in this encoding can be written using Unicode escapes as defined in section 3.3 of</source>
          <target state="translated">&lt;a href=&quot;#load(java.io.Reader)&quot;&gt; &lt;code&gt;load(Reader)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;#store(java.io.Writer,java.lang.String)&quot;&gt; &lt;code&gt;store(Writer, String)&lt;/code&gt; &lt;/a&gt;単純な行指向形式の文字ベースのストリームからとする方法ロードおよびストアのプロパティは、以下に指定しました。&lt;a href=&quot;#load(java.io.InputStream)&quot;&gt; &lt;code&gt;load(InputStream)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;#store(java.io.OutputStream,java.lang.String)&quot;&gt; &lt;code&gt;store(OutputStream, String)&lt;/code&gt; &lt;/a&gt;の方法は、入力/出力ストリームがISO 8859-1文字エンコーディングでエンコードされている以外は、負荷（リーダ）/ストア（ライター、String）を対と同じように動作します。このエンコーディングで直接表現できない文字は、のセクション3.3で定義されているUnicodeエスケープを使用して記述できます。</target>
        </trans-unit>
        <trans-unit id="6c64782820ca91ace54f1f86ea9f86492a8d8863" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#loadFromXML(java.io.InputStream)&quot;&gt;&lt;code&gt;loadFromXML(InputStream)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#storeToXML(java.io.OutputStream,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties in a simple XML format. By default the UTF-8 character encoding is used, however a specific encoding may be specified if required. Implementations are required to support UTF-8 and UTF-16 and may support other encodings. An XML properties document has the following DOCTYPE declaration:</source>
          <target state="translated">&lt;a href=&quot;#loadFromXML(java.io.InputStream)&quot;&gt; &lt;code&gt;loadFromXML(InputStream)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#storeToXML(java.io.OutputStream,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt; &lt;/a&gt;の単純なXML形式のメソッドのロードおよびストアのプロパティ。デフォルトではUTF-8文字エンコードが使用されますが、必要に応じて特定のエンコードを指定できます。UTF-8およびUTF-16をサポートするには実装が必要であり、他のエンコーディングをサポートする場合があります。XMLプロパティドキュメントには、次のDOCTYPE宣言があります。</target>
        </trans-unit>
        <trans-unit id="ff9a153b92e71fa09c965e8f74027cdf39942b60" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lock&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; used to synchronize operations on the returned &lt;code&gt;Reader&lt;/code&gt; is not specified.</source>
          <target state="translated">&lt;a href=&quot;#lock&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;が返さ上の同期操作に使用 &lt;code&gt;Reader&lt;/code&gt; が指定されていません。</target>
        </trans-unit>
        <trans-unit id="6ea5963a2b34831a1c71c2fbc0dd2b148d5c67d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lock&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; used to synchronize operations on the returned &lt;code&gt;Writer&lt;/code&gt; is not specified.</source>
          <target state="translated">&lt;a href=&quot;#lock&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;が返さで操作を同期させるために使用される &lt;code&gt;Writer&lt;/code&gt; 指定されていません。</target>
        </trans-unit>
        <trans-unit id="84550bbdc380964aefe4e00daea2a1ea69eda243" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lookingAt()&quot;&gt;&lt;code&gt;lookingAt&lt;/code&gt;&lt;/a&gt; method attempts to match the input sequence, starting at the beginning, against the pattern.</source>
          <target state="translated">&lt;a href=&quot;#lookingAt()&quot;&gt; &lt;code&gt;lookingAt&lt;/code&gt; &lt;/a&gt;入力シーケンスにマッチする方法を試み、パターンに対して、先頭から始まります。</target>
        </trans-unit>
        <trans-unit id="78c866a477b89a46ec489346a183a845bc204d84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt; for this lookup must include &lt;a href=&quot;#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt; access as default (package) members will be accessible to the class. The &lt;code&gt;PACKAGE&lt;/code&gt; lookup mode serves to authenticate that the lookup object was created by a caller in the runtime package (or derived from a lookup originally created by suitably privileged code to a target class in the runtime package).</source>
          <target state="translated">この&lt;a href=&quot;#lookupModes()&quot;&gt;ルックアップのルックアップモードに&lt;/a&gt;は、デフォルト（パッケージ）メンバーがクラスにアクセスできるため、&lt;a href=&quot;#PACKAGE&quot;&gt; &lt;code&gt;PACKAGE&lt;/code&gt; &lt;/a&gt;アクセスが含まれている必要があります。 &lt;code&gt;PACKAGE&lt;/code&gt; ルックアップモードは、参照オブジェクトは、ランタイムパッケージ（または元々ランタイムパッケージのターゲットクラスに好適特権コードによって作成されたルックアップに由来する）で発呼者によって作成されたことを認証するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="af8af1d74c30b23540127f0b0b432dad9af185a7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#matches()&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method attempts to match the entire input sequence against the pattern.</source>
          <target state="translated">&lt;a href=&quot;#matches()&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt;パターンに対する全入力配列と一致するメソッドの試みを。</target>
        </trans-unit>
        <trans-unit id="9cf613d99e0fc77707140b31310fa50f3b661bdc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#newWatchService()&quot;&gt;&lt;code&gt;newWatchService&lt;/code&gt;&lt;/a&gt; method creates a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt; that may be used to watch objects for changes and events.</source>
          <target state="translated">&lt;a href=&quot;#newWatchService()&quot;&gt; &lt;code&gt;newWatchService&lt;/code&gt; の&lt;/a&gt;方法は、作成&lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; &lt;/a&gt;の変更やイベントのためのオブジェクトを監視するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="0f2779d651def565116a29cb04d620dbba2f2dd2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#next()&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#hasNext()&quot;&gt;&lt;code&gt;hasNext()&lt;/code&gt;&lt;/a&gt; methods and their companion methods (such as &lt;a href=&quot;#nextInt()&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#hasNextInt()&quot;&gt;&lt;code&gt;hasNextInt()&lt;/code&gt;&lt;/a&gt;) first skip any input that matches the delimiter pattern, and then attempt to return the next token. Both &lt;code&gt;hasNext()&lt;/code&gt; and &lt;code&gt;next()&lt;/code&gt; methods may block waiting for further input. Whether a &lt;code&gt;hasNext()&lt;/code&gt; method blocks has no connection to whether or not its associated &lt;code&gt;next()&lt;/code&gt; method will block. The &lt;a href=&quot;#tokens()&quot;&gt;&lt;code&gt;tokens()&lt;/code&gt;&lt;/a&gt; method may also block waiting for input.</source>
          <target state="translated">&lt;a href=&quot;#next()&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#hasNext()&quot;&gt; &lt;code&gt;hasNext()&lt;/code&gt; &lt;/a&gt;メソッド、および（例えば、彼らのコンパニオンメソッド&lt;a href=&quot;#nextInt()&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#hasNextInt()&quot;&gt; &lt;code&gt;hasNextInt()&lt;/code&gt; &lt;/a&gt;最初のデリミタパターンに一致する入力をスキップし、次のトークンを返すようにしよう）。 &lt;code&gt;hasNext()&lt;/code&gt; メソッドと &lt;code&gt;next()&lt;/code&gt; メソッドの両方が、さらなる入力の待機をブロックする場合があります。かどうか &lt;code&gt;hasNext()&lt;/code&gt; メソッドブロックその関連するかどうかへの接続がありません &lt;code&gt;next()&lt;/code&gt; メソッドがブロックされます。&lt;a href=&quot;#tokens()&quot;&gt; &lt;code&gt;tokens()&lt;/code&gt; &lt;/a&gt;メソッドは、入力を待ってブロックしてもよいです。</target>
        </trans-unit>
        <trans-unit id="a4eabcb070201104bd4072f1fbef69e32c7ed568" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#of()&quot;&gt;&lt;code&gt;Map.of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ofEntries(java.util.Map.Entry...)&quot;&gt;&lt;code&gt;Map.ofEntries&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#copyOf(java.util.Map)&quot;&gt;&lt;code&gt;Map.copyOf&lt;/code&gt;&lt;/a&gt; static factory methods provide a convenient way to create unmodifiable maps. The &lt;code&gt;Map&lt;/code&gt; instances created by these methods have the following characteristics:</source>
          <target state="translated">&lt;a href=&quot;#of()&quot;&gt; &lt;code&gt;Map.of&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ofEntries(java.util.Map.Entry...)&quot;&gt; &lt;code&gt;Map.ofEntries&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#copyOf(java.util.Map)&quot;&gt; &lt;code&gt;Map.copyOf&lt;/code&gt; &lt;/a&gt; staticファクトリメソッドは、変更不可能なマップを作成するための便利な方法を提供します。 &lt;code&gt;Map&lt;/code&gt; これらの方法で作成されたインスタンスは、次の特性があります。</target>
        </trans-unit>
        <trans-unit id="5a3652c966b080da38bf2f411dad00b6802884ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#of(E...)&quot;&gt;&lt;code&gt;List.of&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#copyOf(java.util.Collection)&quot;&gt;&lt;code&gt;List.copyOf&lt;/code&gt;&lt;/a&gt; static factory methods provide a convenient way to create unmodifiable lists. The &lt;code&gt;List&lt;/code&gt; instances created by these methods have the following characteristics:</source>
          <target state="translated">&lt;a href=&quot;#of(E...)&quot;&gt; &lt;code&gt;List.of&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#copyOf(java.util.Collection)&quot;&gt; &lt;code&gt;List.copyOf&lt;/code&gt; &lt;/a&gt; staticファクトリメソッドは、変更不可能なリストを作成するための便利な方法を提供します。 &lt;code&gt;List&lt;/code&gt; これらの方法で作成されたインスタンスは、次の特性があります。</target>
        </trans-unit>
        <trans-unit id="b75ebf0e3eb357a1a5138bef731809fcdcfbdf5c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#of(E...)&quot;&gt;&lt;code&gt;Set.of&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#copyOf(java.util.Collection)&quot;&gt;&lt;code&gt;Set.copyOf&lt;/code&gt;&lt;/a&gt; static factory methods provide a convenient way to create unmodifiable sets. The &lt;code&gt;Set&lt;/code&gt; instances created by these methods have the following characteristics:</source>
          <target state="translated">&lt;a href=&quot;#of(E...)&quot;&gt; &lt;code&gt;Set.of&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#copyOf(java.util.Collection)&quot;&gt; &lt;code&gt;Set.copyOf&lt;/code&gt; &lt;/a&gt;静的ファクトリメソッドは、変更不可能なセットを作成するための便利な方法を提供します。 &lt;code&gt;Set&lt;/code&gt; 、これらの方法によって作成されたインスタンスは、次の特性があります。</target>
        </trans-unit>
        <trans-unit id="fc4145739906a5fafcf27e7b758feb7e10fa3e1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#offer(E)&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt; method inserts an element if possible, otherwise returning &lt;code&gt;false&lt;/code&gt;. This differs from the &lt;a href=&quot;collection#add(E)&quot;&gt;&lt;code&gt;Collection.add&lt;/code&gt;&lt;/a&gt; method, which can fail to add an element only by throwing an unchecked exception. The &lt;code&gt;offer&lt;/code&gt; method is designed for use when failure is a normal, rather than exceptional occurrence, for example, in fixed-capacity (or &quot;bounded&quot;) queues.</source>
          <target state="translated">&lt;a href=&quot;#offer(E)&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt;可能であれば、方法はそれ以外の場合は戻って、要素を挿入 &lt;code&gt;false&lt;/code&gt; 。これは、チェックされていない例外をスローするだけで要素の追加に失敗する可能性がある&lt;a href=&quot;collection#add(E)&quot;&gt; &lt;code&gt;Collection.add&lt;/code&gt; &lt;/a&gt;メソッドとは異なります。 &lt;code&gt;offer&lt;/code&gt; 障害はむしろ例外発生より、正常である場合の方法は、固定容量（または「有界」）キューに、例えば、使用のために設計されています。</target>
        </trans-unit>
        <trans-unit id="c9f6349a4ae2d3a238eb3271977a5ff56ad4db25" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#permissions()&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentrypermission&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#permissions()&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;コンポーネントは、一連のある&lt;a href=&quot;aclentrypermission&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="404a185f9841c99d54d179b827ceceb997785ba3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#position(long)&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#truncate(long)&quot;&gt;&lt;code&gt;truncate&lt;/code&gt;&lt;/a&gt; methods which do not otherwise have a value to return are specified to return the channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">&lt;a href=&quot;#position(long)&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#truncate(long)&quot;&gt; &lt;code&gt;truncate&lt;/code&gt; &lt;/a&gt;戻り値を返さないものな方法は、それらが呼び出される時にチャンネルを返すように指定されています。これにより、メソッド呼び出しを連鎖させることができます。このインターフェイスの実装では、実装クラスでのメソッド呼び出しを連鎖できるように、戻り値の型を特殊化する必要があります。</target>
        </trans-unit>
        <trans-unit id="7901edc883e754854d8ae590ec6d7d61281b0f1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#principal()&quot;&gt;&lt;code&gt;principal&lt;/code&gt;&lt;/a&gt; component, sometimes called the &quot;who&quot; component, is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; corresponding to the identity that the entry grants or denies access</source>
          <target state="translated">&lt;a href=&quot;#principal()&quot;&gt; &lt;code&gt;principal&lt;/code&gt; &lt;/a&gt;時々 「A」成分と呼ばれるコンポーネントは、ある&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;アクセスを拒否エントリー許可こと又はアイデンティティに対応します</target>
        </trans-unit>
        <trans-unit id="0252e2b5ac28e835bd24e1eb9ad03a80bbc13d38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#read(java.io.InputStream,java.lang.Object)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method can be used to initialize the component from a &lt;code&gt;Reader&lt;/code&gt;. Note that if the content type is HTML, relative references (e.g. for things like images) can't be resolved unless the &amp;lt;base&amp;gt; tag is used or the &lt;em&gt;Base&lt;/em&gt; property on &lt;code&gt;HTMLDocument&lt;/code&gt; is set. In this case the current &lt;code&gt;EditorKit&lt;/code&gt; will be used, and the content type will be expected to be of this type.</source>
          <target state="translated">&lt;a href=&quot;#read(java.io.InputStream,java.lang.Object)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;方法は、からコンポーネントを初期化するために使用することができる &lt;code&gt;Reader&lt;/code&gt; 。コンテンツタイプがHTMLの場合、&amp;lt;base&amp;gt;タグを使用するか、 &lt;code&gt;HTMLDocument&lt;/code&gt; の&lt;em&gt;Base&lt;/em&gt;プロパティを設定しない限り、相対参照（画像など）を解決できないことに注意してください。この場合、現在の &lt;code&gt;EditorKit&lt;/code&gt; が使用され、コンテンツタイプはこのタイプであることが期待されます。</target>
        </trans-unit>
        <trans-unit id="c3c9ff5626e9554f693ad6ddf85f19c656c52ccb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#write(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods defined by this class allow a timeout to be specified when initiating a read or write operation. If the timeout elapses before an operation completes then the operation completes with the exception &lt;a href=&quot;interruptedbytimeoutexception&quot;&gt;&lt;code&gt;InterruptedByTimeoutException&lt;/code&gt;&lt;/a&gt;. A timeout may leave the channel, or the underlying connection, in an inconsistent state. Where the implementation cannot guarantee that bytes have not been read from the channel then it puts the channel into an implementation specific &lt;em&gt;error state&lt;/em&gt;. A subsequent attempt to initiate a &lt;code&gt;read&lt;/code&gt; operation causes an unspecified runtime exception to be thrown. Similarly if a &lt;code&gt;write&lt;/code&gt; operation times out and the implementation cannot guarantee bytes have not been written to the channel then further attempts to &lt;code&gt;write&lt;/code&gt; to the channel cause an unspecified runtime exception to be thrown. When a timeout elapses then the state of the &lt;a href=&quot;../bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, or the sequence of buffers, for the I/O operation is not defined. Buffers should be discarded or at least care must be taken to ensure that the buffers are not accessed while the channel remains open. All methods that accept timeout parameters treat values less than or equal to zero to mean that the I/O operation does not timeout.</source>
          <target state="translated">&lt;a href=&quot;#read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#write(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;、このクラスで定義されたメソッドは、読み取りまたは書き込み操作を開始するときのタイムアウトを指定することができます。操作が完了する前にタイムアウトが経過すると、操作は例外&lt;a href=&quot;interruptedbytimeoutexception&quot;&gt; &lt;code&gt;InterruptedByTimeoutException&lt;/code&gt; で&lt;/a&gt;完了します。タイムアウトにより、チャネルまたは基になる接続が不整合な状態のままになる場合があります。実装がバイトがチャネルから読み取られていないことを保証できない場合、実装はチャネルを実装固有の&lt;em&gt;エラー状態にし&lt;/em&gt;ます。その後、 &lt;code&gt;read&lt;/code&gt; 操作を開始しようとすると、不特定のランタイム例外がスローされます。同様に &lt;code&gt;write&lt;/code&gt; 場合操作がタイムアウトし、実装はバイトがチャネルに書き込まれていないことを保証できません。さらにチャネルに &lt;code&gt;write&lt;/code&gt; うとすると、不特定のランタイム例外がスローされます。タイムアウトが経過すると、I / O操作の&lt;a href=&quot;../bytebuffer&quot;&gt; &lt;code&gt;ByteBuffer&lt;/code&gt; &lt;/a&gt;の状態またはバッファのシーケンスは定義されません。バッファを破棄するか、チャネルが開いたままのときにバッファにアクセスしないように少なくとも注意する必要があります。タイムアウトパラメータを受け入れるすべてのメソッドは、ゼロ以下の値を処理して、I / O操作がタイムアウトしないことを意味します。</target>
        </trans-unit>
        <trans-unit id="1d9fe06809d0a55ee94fa7c5575ab00fb2cbf4e3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#readAttributes()&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method is used to read the file's attributes. The file &lt;a href=&quot;posixfileattributes#owner()&quot;&gt;&lt;code&gt;owner&lt;/code&gt;&lt;/a&gt; is represented by a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; that is the identity of the file owner for the purposes of access control. The &lt;a href=&quot;posixfileattributes#group()&quot;&gt;&lt;code&gt;group-owner&lt;/code&gt;&lt;/a&gt;, represented by a &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt;, is the identity of the group owner, where a group is an identity created for administrative purposes so as to determine the access rights for the members of the group.</source>
          <target state="translated">&lt;a href=&quot;#readAttributes()&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; の&lt;/a&gt;方法は、ファイルの属性を読み取るために使用されます。ファイル&lt;a href=&quot;posixfileattributes#owner()&quot;&gt; &lt;code&gt;owner&lt;/code&gt; &lt;/a&gt;は、アクセス制御の目的でファイル所有者のIDである&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;によって表されます。&lt;a href=&quot;posixfileattributes#group()&quot;&gt; &lt;code&gt;group-owner&lt;/code&gt; &lt;/a&gt;で表される、&lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; は&lt;/a&gt;、グループは、グループのメンバーのアクセス権を決定するために、管理目的のために作成されたアイデンティティであるグループの所有者のアイデンティティです。</target>
        </trans-unit>
        <trans-unit id="ef05e8d8630d24a4539bbca297c4ec8e95476f17" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#redirectErrorStream()&quot;&gt;&lt;code&gt;redirectErrorStream()&lt;/code&gt;&lt;/a&gt; of each ProcessBuilder applies to the respective process. If set to &lt;code&gt;true&lt;/code&gt;, the error stream is written to the same stream as standard output.</source>
          <target state="translated">各ProcessBuilderの&lt;a href=&quot;#redirectErrorStream()&quot;&gt; &lt;code&gt;redirectErrorStream()&lt;/code&gt; &lt;/a&gt;は、それぞれのプロセスに適用されます。 &lt;code&gt;true&lt;/code&gt; に設定すると、エラーストリームは標準出力と同じストリームに書き込まれます。</target>
        </trans-unit>
        <trans-unit id="d60d96790fcf12bd52c7ceb255ee2290d4d63d7d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#remove()&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#poll()&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; methods remove and return the head of the queue. Exactly which element is removed from the queue is a function of the queue's ordering policy, which differs from implementation to implementation. The &lt;code&gt;remove()&lt;/code&gt; and &lt;code&gt;poll()&lt;/code&gt; methods differ only in their behavior when the queue is empty: the &lt;code&gt;remove()&lt;/code&gt; method throws an exception, while the &lt;code&gt;poll()&lt;/code&gt; method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#remove()&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#poll()&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt;メソッドは、キューの先頭を削除して返します。正確にどの要素がキューから削除されるかは、実装ごとに異なるキューの順序付けポリシーの機能です。 &lt;code&gt;remove()&lt;/code&gt; と &lt;code&gt;poll()&lt;/code&gt; キューが空である場合の方法は、それらの動作のみが異なる： &lt;code&gt;remove()&lt;/code&gt; メソッドはしばらくの間、例外をスロー &lt;code&gt;poll()&lt;/code&gt; メソッドの戻り値 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b71740ad55dd486243123249a69711ae3adb45e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#removeEldestEntry(java.util.Map.Entry)&quot;&gt;&lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt;&lt;/a&gt; method may be overridden to impose a policy for removing stale mappings automatically when new mappings are added to the map.</source>
          <target state="translated">&lt;a href=&quot;#removeEldestEntry(java.util.Map.Entry)&quot;&gt; &lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt; &lt;/a&gt;メソッドは、新しいマッピングがマップに追加されたときに自動的に失効マッピングを除去するためのポリシーを課すことをオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="f388f89464ce1efc48db1ad1eb74d58994279c54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#select()&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#select(long)&quot;&gt;&lt;code&gt;select(long)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#selectNow()&quot;&gt;&lt;code&gt;selectNow()&lt;/code&gt;&lt;/a&gt; methods add the keys of channels ready to perform an operation to the selected-key set, or update the ready-operation set of keys already in the selected-key set.</source>
          <target state="translated">&lt;a href=&quot;#select()&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#select(long)&quot;&gt; &lt;code&gt;select(long)&lt;/code&gt; &lt;/a&gt;、及び&lt;a href=&quot;#selectNow()&quot;&gt; &lt;code&gt;selectNow()&lt;/code&gt; &lt;/a&gt;メソッドは、選択されたキーセットに操作を実行する準備ができて、または既に選択されたキーセットのキーのすぐ動作セットを更新するチャンネルのキーを追加します。</target>
        </trans-unit>
        <trans-unit id="3d9fe37bdba1bdbf40ca515feaaf9c3f126885ae" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#select(java.util.function.Consumer)&quot;&gt;&lt;code&gt;select(Consumer)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#select(java.util.function.Consumer,long)&quot;&gt;&lt;code&gt;select(Consumer, long)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#selectNow(java.util.function.Consumer)&quot;&gt;&lt;code&gt;selectNow(Consumer)&lt;/code&gt;&lt;/a&gt; methods perform an</source>
          <target state="translated">&lt;a href=&quot;#select(java.util.function.Consumer)&quot;&gt; &lt;code&gt;select(Consumer)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#select(java.util.function.Consumer,long)&quot;&gt; &lt;code&gt;select(Consumer, long)&lt;/code&gt; &lt;/a&gt;し、&lt;a href=&quot;#selectNow(java.util.function.Consumer)&quot;&gt; &lt;code&gt;selectNow(Consumer)&lt;/code&gt; &lt;/a&gt;の方法が実行します</target>
        </trans-unit>
        <trans-unit id="fc7a14c324b4c491d6e144c3f63588c2f48f7a71" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#setCalendar(java.util.Calendar)&quot;&gt;&lt;code&gt;setCalendar(Calendar)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setNumberFormat(java.text.NumberFormat)&quot;&gt;&lt;code&gt;setNumberFormat(NumberFormat)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#setTimeZone(java.util.TimeZone)&quot;&gt;&lt;code&gt;setTimeZone(TimeZone)&lt;/code&gt;&lt;/a&gt; methods do not throw &lt;code&gt;NullPointerException&lt;/code&gt; when their parameter is &lt;code&gt;null&lt;/code&gt;, but any subsequent operations on the same instance may throw &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#setCalendar(java.util.Calendar)&quot;&gt; &lt;code&gt;setCalendar(Calendar)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#setNumberFormat(java.text.NumberFormat)&quot;&gt; &lt;code&gt;setNumberFormat(NumberFormat)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#setTimeZone(java.util.TimeZone)&quot;&gt; &lt;code&gt;setTimeZone(TimeZone)&lt;/code&gt; &lt;/a&gt;メソッドがスローされません &lt;code&gt;NullPointerException&lt;/code&gt; が彼らのパラメータがあるときに &lt;code&gt;null&lt;/code&gt; が、同じインスタンス上の任意の後続の操作がスローされることがあり &lt;code&gt;NullPointerException&lt;/code&gt; が。</target>
        </trans-unit>
        <trans-unit id="30fa18ad27f297296b044126d2041ea7ea479b67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#setPage(java.net.URL)&quot;&gt;&lt;code&gt;setPage&lt;/code&gt;&lt;/a&gt; method can be used to initialize the component from a URL. In this case, the content type will be determined from the URL, and the registered &lt;code&gt;EditorKit&lt;/code&gt; for that content type will be set.</source>
          <target state="translated">&lt;a href=&quot;#setPage(java.net.URL)&quot;&gt; &lt;code&gt;setPage&lt;/code&gt; での&lt;/a&gt;方法は、URLからコンポーネントを初期化するために使用することができます。この場合、コンテンツタイプはURLから決定され、そのコンテンツタイプに登録されている &lt;code&gt;EditorKit&lt;/code&gt; が設定されます。</target>
        </trans-unit>
        <trans-unit id="12baf4ccc1db7688f8d44afcde7b6744bb5c9dfe" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#setText(java.lang.String)&quot;&gt;&lt;code&gt;setText&lt;/code&gt;&lt;/a&gt; method can be used to initialize the component from a string. In this case the current &lt;code&gt;EditorKit&lt;/code&gt; will be used, and the content type will be expected to be of this type.</source>
          <target state="translated">&lt;a href=&quot;#setText(java.lang.String)&quot;&gt; &lt;code&gt;setText&lt;/code&gt; &lt;/a&gt;方法は、文字列からコンポーネントを初期化するために使用することができます。この場合、現在の &lt;code&gt;EditorKit&lt;/code&gt; が使用され、コンテンツタイプはこのタイプであることが期待されます。</target>
        </trans-unit>
        <trans-unit id="5ba01f383f346e26e2c6a5defafb5896d214129d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#shutdown()&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; method is used to initiate an &lt;em&gt;orderly shutdown&lt;/em&gt; of a group. An orderly shutdown marks the group as shutdown; further attempts to construct a channel that binds to the group will throw &lt;a href=&quot;shutdownchannelgroupexception&quot;&gt;&lt;code&gt;ShutdownChannelGroupException&lt;/code&gt;&lt;/a&gt;. Whether or not a group is shutdown can be tested using the &lt;a href=&quot;#isShutdown()&quot;&gt;&lt;code&gt;isShutdown&lt;/code&gt;&lt;/a&gt; method. Once shutdown, the group &lt;em&gt;terminates&lt;/em&gt; when all asynchronous channels that are bound to the group are closed, all actively executing completion handlers have run to completion, and resources used by the group are released. No attempt is made to stop or interrupt threads that are executing completion handlers. The &lt;a href=&quot;#isTerminated()&quot;&gt;&lt;code&gt;isTerminated&lt;/code&gt;&lt;/a&gt; method is used to test if the group has terminated, and the &lt;a href=&quot;#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; method can be used to block until the group has terminated.</source>
          <target state="translated">&lt;a href=&quot;#shutdown()&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt;方法を開始するために使用される&lt;em&gt;正常シャットダウン&lt;/em&gt;グループを。正常なシャットダウンは、グループをシャットダウンとしてマークします。グループにバインドするチャネルをさらに構築しようとすると、&lt;a href=&quot;shutdownchannelgroupexception&quot;&gt; &lt;code&gt;ShutdownChannelGroupException&lt;/code&gt; &lt;/a&gt;がスローされます。グループがシャットダウンされているかどうかは、&lt;a href=&quot;#isShutdown()&quot;&gt; &lt;code&gt;isShutdown&lt;/code&gt; &lt;/a&gt;メソッドを使用してテストできます。シャットダウンすると、グループの&lt;em&gt;終了は、&lt;/em&gt;グループにバインドされているすべての非同期チャネルが閉じられたときに、すべての実行中のアクティブな完了ハンドラが完了するまで実行しており、グループで使用されるリソースが解放されます。完了ハンドラーを実行しているスレッドを停止または中断する試みは行われません。&lt;a href=&quot;#isTerminated()&quot;&gt; &lt;code&gt;isTerminated&lt;/code&gt; の&lt;/a&gt;方法は、グループが終了した場合、テストに使用され、&lt;a href=&quot;#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;メソッドを使用して、グループが終了するまでブロックできます。</target>
        </trans-unit>
        <trans-unit id="fb8d7794284deaddd5c051be877e293a50aade4e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#shutdownNow()&quot;&gt;&lt;code&gt;shutdownNow&lt;/code&gt;&lt;/a&gt; method can be used to initiate a &lt;em&gt;forceful shutdown&lt;/em&gt; of the group. In addition to the actions performed by an orderly shutdown, the &lt;code&gt;shutdownNow&lt;/code&gt; method closes all open channels in the group as if by invoking the &lt;a href=&quot;asynchronouschannel#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#shutdownNow()&quot;&gt; &lt;code&gt;shutdownNow&lt;/code&gt; のの&lt;/a&gt;方法は、開始するために使用することができる&lt;em&gt;強力なシャットダウン&lt;/em&gt;グループのを。整然としたシャットダウンによって実行されるアクションに加えて、 &lt;code&gt;shutdownNow&lt;/code&gt; メソッドは、&lt;a href=&quot;asynchronouschannel#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すかのように、グループ内の開いているすべてのチャネルを閉じます。</target>
        </trans-unit>
        <trans-unit id="33fb27c2c564d3705cef054d1baae924b5d2bf54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#startPipeline(java.util.List)&quot;&gt;&lt;code&gt;startPipeline&lt;/code&gt;&lt;/a&gt; method can be invoked to create a pipeline of new processes that send the output of each process directly to the next process. Each process has the attributes of its respective ProcessBuilder.</source>
          <target state="translated">&lt;a href=&quot;#startPipeline(java.util.List)&quot;&gt; &lt;code&gt;startPipeline&lt;/code&gt; の&lt;/a&gt;方法は次の工程に直接プロセスの出力を送信する新しいプロセスのパイプラインを作成するために呼び出すことができます。各プロセスには、それぞれのProcessBuilderの属性があります。</target>
        </trans-unit>
        <trans-unit id="e337b45e7f50fae2c01488f43bd843f36ebcb157" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#syncAll(java.lang.invoke.MutableCallSite%5B%5D)&quot;&gt;&lt;code&gt;syncAll&lt;/code&gt;&lt;/a&gt; operation provides a way to force threads to accept a new target value, even if there is no other synchronization.</source>
          <target state="translated">&lt;a href=&quot;#syncAll(java.lang.invoke.MutableCallSite%5B%5D)&quot;&gt; &lt;code&gt;syncAll&lt;/code&gt; の&lt;/a&gt;操作は、他の同期がない場合でも、新たな目標値を受け入れるようにスレッドを強制する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="992fc683c8b560dbb6114a38df797c785f0f9454" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#toASCIIString()&quot;&gt;&lt;code&gt;toASCIIString&lt;/code&gt;&lt;/a&gt; method returns a fully quoted and encoded URI string that does not contain any</source>
          <target state="translated">&lt;a href=&quot;#toASCIIString()&quot;&gt; &lt;code&gt;toASCIIString&lt;/code&gt; の&lt;/a&gt;方法はいずれも含まない、完全に引用された符号化されたURI文字列を返します。</target>
        </trans-unit>
        <trans-unit id="35726dda3d36345e921ec2f26c1649acac41b9a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#toDisplayString()&quot;&gt;&lt;code&gt;toDisplayString()&lt;/code&gt;&lt;/a&gt; method allows you to obtain the localized string for a locale independent key from a predefined &lt;code&gt;ResourceBundle&lt;/code&gt; for the keys defined in this class. This localized string is intended to be readable by humans.</source>
          <target state="translated">&lt;a href=&quot;#toDisplayString()&quot;&gt; &lt;code&gt;toDisplayString()&lt;/code&gt; &lt;/a&gt;メソッドを使用すると、あらかじめ定義されたから、ロケールに依存しないキーのためのローカライズされた文字列取得することができ &lt;code&gt;ResourceBundle&lt;/code&gt; このクラスで定義されたキーのために。このローカライズされた文字列は、人間が読めるようにすることを目的としています。</target>
        </trans-unit>
        <trans-unit id="65b4b7be65a52928b9c78e34dccbe47a502708e2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#toEngineeringString()&quot;&gt;&lt;code&gt;toEngineeringString()&lt;/code&gt;&lt;/a&gt; method may be used for presenting numbers with exponents in engineering notation, and the &lt;a href=&quot;#setScale(int,java.math.RoundingMode)&quot;&gt;&lt;code&gt;setScale&lt;/code&gt;&lt;/a&gt; method may be used for rounding a &lt;code&gt;BigDecimal&lt;/code&gt; so it has a known number of digits after the decimal point.</source>
          <target state="translated">&lt;a href=&quot;#toEngineeringString()&quot;&gt; &lt;code&gt;toEngineeringString()&lt;/code&gt; &lt;/a&gt;メソッドは、工学表記で指数と番号を提示するために使用することができる、および&lt;a href=&quot;#setScale(int,java.math.RoundingMode)&quot;&gt; &lt;code&gt;setScale&lt;/code&gt; の&lt;/a&gt;方法は、丸めのために使用することができる &lt;code&gt;BigDecimal&lt;/code&gt; 、それが小数点の後の桁の既知数を持つように。</target>
        </trans-unit>
        <trans-unit id="bc086637a391b1032b4d9a87f65f931f3ebfac84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#toString()&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method returns a URI string with all necessary quotation but which may contain</source>
          <target state="translated">&lt;a href=&quot;#toString()&quot;&gt; &lt;code&gt;toString&lt;/code&gt; &lt;/a&gt;メソッドは、すべての必要な引用でURI文字列を返しますが含まれている可能性があります</target>
        </trans-unit>
        <trans-unit id="478767a169faaeb53898bb2638beee30a4b18797" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#type()&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; component determines if the entry grants or denies access.</source>
          <target state="translated">&lt;a href=&quot;#type()&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;エントリが許可またはアクセスを拒否した場合にコンポーネントが判定する。</target>
        </trans-unit>
        <trans-unit id="22dd7f57ec39defcc50324c81f0f9c18cf2d4803" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#walk(java.util.function.Function)&quot;&gt;&lt;code&gt;walk&lt;/code&gt;&lt;/a&gt; method opens a sequential stream of &lt;a href=&quot;stackwalker.stackframe&quot;&gt;&lt;code&gt;StackFrame&lt;/code&gt;&lt;/a&gt;s for the current thread and then applies the given function to walk the &lt;code&gt;StackFrame&lt;/code&gt; stream. The stream reports stack frame elements in order, from the top most frame that represents the execution point at which the stack was generated to the bottom most frame. The &lt;code&gt;StackFrame&lt;/code&gt; stream is closed when the &lt;code&gt;walk&lt;/code&gt; method returns. If an attempt is made to reuse the closed stream, &lt;code&gt;IllegalStateException&lt;/code&gt; will be thrown.</source>
          <target state="translated">&lt;a href=&quot;#walk(java.util.function.Function)&quot;&gt; &lt;code&gt;walk&lt;/code&gt; &lt;/a&gt;方法は、順次ストリーム開く&lt;a href=&quot;stackwalker.stackframe&quot;&gt; &lt;code&gt;StackFrame&lt;/code&gt; &lt;/a&gt;現在のスレッドの秒してから歩いて与えられた関数を適用し &lt;code&gt;StackFrame&lt;/code&gt; 流れを。ストリームは、スタックが生成された実行ポイントを表す最上位のフレームから最下位のフレームまで、スタックフレーム要素を順番に報告します。 &lt;code&gt;StackFrame&lt;/code&gt; ストリームが閉じたときにされた &lt;code&gt;walk&lt;/code&gt; メソッドが返します。閉じたストリームを再利用しようとすると、 &lt;code&gt;IllegalStateException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="104e9821fb34ad83cbe06a664eb098239b1f2dbf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withChronology(java.time.chrono.Chronology)&quot;&gt;&lt;code&gt;withChronology&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the chronology. If overridden, the date-time value is converted to the chronology before formatting. During parsing the date-time value is converted to the chronology before it is returned.</source>
          <target state="translated">&lt;a href=&quot;#withChronology(java.time.chrono.Chronology)&quot;&gt; &lt;code&gt;withChronology&lt;/code&gt; の&lt;/a&gt;方法は、年表をオーバーライドする新しいフォーマッタを返します。オーバーライドされた場合、日時値はフォーマット前に年表に変換されます。解析中に、日時値は返される前に年表に変換されます。</target>
        </trans-unit>
        <trans-unit id="8e69011f7c1b9509096433b5315c14df4b0867c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withDecimalStyle(java.time.format.DecimalStyle)&quot;&gt;&lt;code&gt;withDecimalStyle&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the &lt;a href=&quot;decimalstyle&quot;&gt;&lt;code&gt;DecimalStyle&lt;/code&gt;&lt;/a&gt;. The DecimalStyle symbols are used for formatting and parsing.</source>
          <target state="translated">&lt;a href=&quot;#withDecimalStyle(java.time.format.DecimalStyle)&quot;&gt; &lt;code&gt;withDecimalStyle&lt;/code&gt; の&lt;/a&gt;方法が優先されます新しいフォーマッタを返し&lt;a href=&quot;decimalstyle&quot;&gt; &lt;code&gt;DecimalStyle&lt;/code&gt; を&lt;/a&gt;。DecimalStyleシンボルは、フォーマットと解析に使用されます。</target>
        </trans-unit>
        <trans-unit id="179737e50aab62d467c3cc1df8b25dae572a53e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt;&lt;code&gt;withLocale&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the locale. The locale affects some aspects of formatting and parsing. For example, the &lt;a href=&quot;#ofLocalizedDate(java.time.format.FormatStyle)&quot;&gt;&lt;code&gt;ofLocalizedDate&lt;/code&gt;&lt;/a&gt; provides a formatter that uses the locale specific date format.</source>
          <target state="translated">&lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt; &lt;code&gt;withLocale&lt;/code&gt; の&lt;/a&gt;方法は、ロケールをオーバーライドする新しいフォーマッタを返します。ロケールは、フォーマットと解析のいくつかの側面に影響を与えます。たとえば、&lt;a href=&quot;#ofLocalizedDate(java.time.format.FormatStyle)&quot;&gt; &lt;code&gt;ofLocalizedDate&lt;/code&gt; &lt;/a&gt;は、ロケール固有の日付形式を使用するフォーマッタを提供します。</target>
        </trans-unit>
        <trans-unit id="7b5f8f7f416846ce6c11368f1979062c39147ad9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withResolverFields(java.time.temporal.TemporalField...)&quot;&gt;&lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt;&lt;/a&gt; parameter allows the set of fields that will be resolved to be filtered before resolving starts. For example, if the formatter has parsed a year, month, day-of-month and day-of-year, then there are two approaches to resolve a date: (year + month + day-of-month) and (year + day-of-year). The resolver fields allows one of the two approaches to be selected. If no resolver fields are set then both approaches must result in the same date.</source>
          <target state="translated">&lt;a href=&quot;#withResolverFields(java.time.temporal.TemporalField...)&quot;&gt; &lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt; &lt;/a&gt;パラメータは、開始を解決する前に濾過されるように解決されるフィールドのセットすることができます。たとえば、フォーマッタが年、月、日、および年を解析した場合、日付を解決するには、（年+月+日）と（年+）の2つのアプローチがあります。曜日）。リゾルバフィールドを使用すると、2つのアプローチのいずれかを選択できます。リゾルバフィールドが設定されていない場合は、両方のアプローチで同じ日付になる必要があります。</target>
        </trans-unit>
        <trans-unit id="4eb3b989121f5815135159b785773c5f4b0e5bee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withZone(java.time.ZoneId)&quot;&gt;&lt;code&gt;withZone&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the zone. If overridden, the date-time value is converted to a ZonedDateTime with the requested ZoneId before formatting. During parsing the ZoneId is applied before the value is returned.</source>
          <target state="translated">&lt;a href=&quot;#withZone(java.time.ZoneId)&quot;&gt; &lt;code&gt;withZone&lt;/code&gt; の&lt;/a&gt;方法は、ゾーンをオーバーライドする新しいフォーマッタを返します。オーバーライドされた場合、日時値は、フォーマットする前に、要求されたZoneIdを使用してZonedDateTimeに変換されます。解析中、値が返される前にZoneIdが適用されます。</target>
        </trans-unit>
        <trans-unit id="5767321150fbf304f9c853fe7423b79275141cc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;properties&lt;/a&gt; for loggers and Handlers will have names starting with the dot-separated name for the handler or logger.</source>
          <target state="translated">ロガーとハンドラーの&lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;プロパティ&lt;/a&gt;には、ハンドラーまたはロガーのドットで区切られた名前で始まる名前が付けられます。</target>
        </trans-unit>
        <trans-unit id="0069f70249676e93e664c0be115bc404720187e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; API. The &lt;code&gt;ServiceLoader&lt;/code&gt; API will look for a class name in the file &lt;code&gt;META-INF/services/javax.sql.rowset.RowSetFactory&lt;/code&gt; in jars available to the runtime. For example, to have the RowSetFactory implementation &lt;code&gt;com.sun.rowset.RowSetFactoryImpl &lt;/code&gt; loaded, the entry in &lt;code&gt;META-INF/services/javax.sql.rowset.RowSetFactory&lt;/code&gt; would be:</source>
          <target state="translated">&lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; の&lt;/a&gt;API。 &lt;code&gt;ServiceLoader&lt;/code&gt; のAPIは、ファイル内のクラス名を探します &lt;code&gt;META-INF/services/javax.sql.rowset.RowSetFactory&lt;/code&gt; ランタイムに使用できるjarインチ たとえば、RowSetFactory実装 &lt;code&gt;com.sun.rowset.RowSetFactoryImpl &lt;/code&gt; をロードするには、 &lt;code&gt;META-INF/services/javax.sql.rowset.RowSetFactory&lt;/code&gt; /javax.sql.rowset.RowSetFactoryのエントリは次のようになります。</target>
        </trans-unit>
        <trans-unit id="522c2e92bd2b278cbf22bf030310e50d7ce05ec7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../java.base/java/net/uri&quot;&gt;URI&lt;/a&gt; returned from &lt;code&gt;&lt;a href=&quot;fileobject#toUri()&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../java.base/java/net/uri&quot;&gt;URI&lt;/a&gt;から返さ &lt;code&gt;&lt;a href=&quot;fileobject#toUri()&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a81bf25ed46b7ed4b581a608b7780d76bdc79dd9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../java.base/java/util/locale&quot;&gt;locale&lt;/a&gt; of the description in this &lt;code&gt;MBeanInfo&lt;/code&gt;, &lt;code&gt;MBeanAttributeInfo&lt;/code&gt;, etc, as returned by &lt;a href=&quot;../../../java.base/java/util/locale#toString()&quot;&gt;&lt;code&gt;Locale.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../java.base/java/util/locale#toString()&quot;&gt; &lt;code&gt;Locale.toString()&lt;/code&gt; &lt;/a&gt;によって返される、この &lt;code&gt;MBeanInfo&lt;/code&gt; 、 &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; などの説明の&lt;a href=&quot;../../../java.base/java/util/locale&quot;&gt;ロケール&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc51dcb232ef7f25e91fae041a5e61191866e752" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; that uniquely identifies the management interface for logging within the &lt;code&gt;MBeanServer&lt;/code&gt; is:</source>
          <target state="translated">&lt;a href=&quot;../../../javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; の&lt;/a&gt;一意内のログの管理インタフェースを特定 &lt;code&gt;MBeanServer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c2067b4092577ae338b99899873d5c51ff4766a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../../io/file#toPath()&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method to construct a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; by converting the abstract path represented by the &lt;code&gt;java.io.File&lt;/code&gt; object. The resulting &lt;code&gt;Path&lt;/code&gt; can be used to operate on the same file as the &lt;code&gt;File&lt;/code&gt; object. The &lt;code&gt;Path&lt;/code&gt; specification provides further information on the &lt;a href=&quot;path#interop&quot;&gt;interoperability&lt;/a&gt; between &lt;code&gt;Path&lt;/code&gt; and &lt;code&gt;java.io.File&lt;/code&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;../../io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;クラスを定義&lt;a href=&quot;../../io/file#toPath()&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; を&lt;/a&gt;構築する方法&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;で表される抽象パス変換することによって、 &lt;code&gt;java.io.File&lt;/code&gt; ののオブジェクト。結果の &lt;code&gt;Path&lt;/code&gt; は、 &lt;code&gt;File&lt;/code&gt; オブジェクトと同じファイルを操作するために使用できます。 &lt;code&gt;Path&lt;/code&gt; 指定はに関する詳細な情報提供し&lt;a href=&quot;path#interop&quot;&gt;、相互運用性&lt;/a&gt;の間 &lt;code&gt;Path&lt;/code&gt; と &lt;code&gt;java.io.File&lt;/code&gt; オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="9a85bd907f559c9802535fa51f23ef29d3d95c9e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../../io/file#toPath--&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method to construct a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; by converting the abstract path represented by the &lt;code&gt;java.io.File&lt;/code&gt; object. The resulting &lt;code&gt;Path&lt;/code&gt; can be used to operate on the same file as the &lt;code&gt;File&lt;/code&gt; object. The &lt;code&gt;Path&lt;/code&gt; specification provides further information on the &lt;a href=&quot;path#interop&quot;&gt;interoperability&lt;/a&gt; between &lt;code&gt;Path&lt;/code&gt; and &lt;code&gt;java.io.File&lt;/code&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;../../io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;クラスを定義&lt;a href=&quot;../../io/file#toPath--&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; を&lt;/a&gt;構築する方法&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;で表される抽象パス変換することによって、 &lt;code&gt;java.io.File&lt;/code&gt; ののオブジェクト。結果の &lt;code&gt;Path&lt;/code&gt; を使用して、 &lt;code&gt;File&lt;/code&gt; オブジェクトと同じファイルを操作できます。 &lt;code&gt;Path&lt;/code&gt; 指定はに関する詳細な情報提供し&lt;a href=&quot;path#interop&quot;&gt;、相互運用性&lt;/a&gt;の間 &lt;code&gt;Path&lt;/code&gt; と &lt;code&gt;java.io.File&lt;/code&gt; オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="d5be3abde35d6105d79ad74bc634371ab99a05a5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../java/net/uri&quot;&gt;URI&lt;/a&gt; returned from &lt;code&gt;&lt;a href=&quot;fileobject#toUri--&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../../java/net/uri&quot;&gt;URI&lt;/a&gt;から返さ &lt;code&gt;&lt;a href=&quot;fileobject#toUri--&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="134ad8107ae31bdb06239d777265c61dbef39bc0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../java/util/locale&quot;&gt;locale&lt;/a&gt; of the description in this &lt;code&gt;MBeanInfo&lt;/code&gt;, &lt;code&gt;MBeanAttributeInfo&lt;/code&gt;, etc, as returned by &lt;a href=&quot;../../java/util/locale#toString--&quot;&gt;&lt;code&gt;Locale.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../java/util/locale#toString--&quot;&gt; &lt;code&gt;Locale.toString()&lt;/code&gt; &lt;/a&gt;によって返される、この &lt;code&gt;MBeanInfo&lt;/code&gt; 、 &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; などの説明の&lt;a href=&quot;../../java/util/locale&quot;&gt;ロケール&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c934c128f75a8a4fa5a31b7015ed85f88403315" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/protocolfamily&quot;&gt;&lt;code&gt;ProtocolFamily&lt;/code&gt;&lt;/a&gt; of the channel's socket is platform (and possibly configuration) dependent and therefore unspecified. The &lt;a href=&quot;#open(java.net.ProtocolFamily)&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; allows the protocol family to be selected when opening a datagram channel, and should be used to open datagram channels that are intended for Internet Protocol multicasting.</source>
          <target state="translated">チャネルのソケットの&lt;a href=&quot;../../net/protocolfamily&quot;&gt; &lt;code&gt;ProtocolFamily&lt;/code&gt; &lt;/a&gt;は、プラットフォーム（および場合によっては構成）に依存するため、指定されていません。&lt;a href=&quot;#open(java.net.ProtocolFamily)&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;データグラムチャネルを開くときプロトコルファミリが選択されることを可能にする、インターネットプロトコルマルチキャストのために意図されているオープンデータグラムチャネルに使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="f1ec0c7d3ac150a1e7303b1353c79b5a3e266162" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/protocolfamily&quot;&gt;&lt;code&gt;ProtocolFamily&lt;/code&gt;&lt;/a&gt; of the channel's socket is platform (and possibly configuration) dependent and therefore unspecified. The &lt;a href=&quot;datagramchannel#open-java.net.ProtocolFamily-&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; allows the protocol family to be selected when opening a datagram channel, and should be used to open datagram channels that are intended for Internet Protocol multicasting.</source>
          <target state="translated">チャネルのソケットの&lt;a href=&quot;../../net/protocolfamily&quot;&gt; &lt;code&gt;ProtocolFamily&lt;/code&gt; &lt;/a&gt;はプラットフォーム（および場合によっては構成）に依存するため、指定されていません。&lt;a href=&quot;datagramchannel#open-java.net.ProtocolFamily-&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;データグラムチャネルを開くときプロトコルファミリが選択されることを可能にする、インターネットプロトコルマルチキャストのために意図されているオープンデータグラムチャネルに使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="26ee394bd5a91389898fffb43587756f5372b01d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; option should be enabled prior to &lt;a href=&quot;networkchannel#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;binding&lt;/code&gt;&lt;/a&gt; the socket. This is required to allow multiple members of the group to bind to the same address.</source>
          <target state="translated">&lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; の&lt;/a&gt;オプションは、前に有効にする必要があります&lt;a href=&quot;networkchannel#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;binding&lt;/code&gt; &lt;/a&gt;ソケットを。これは、グループの複数のメンバーが同じアドレスにバインドできるようにするために必要です。</target>
        </trans-unit>
        <trans-unit id="17b844a7bf6569487aadb2b841362d26db2df769" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; option should be enabled prior to &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;binding&lt;/code&gt;&lt;/a&gt; the socket. This is required to allow multiple members of the group to bind to the same address.</source>
          <target state="translated">&lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; の&lt;/a&gt;オプションは、前に有効にする必要があります&lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;binding&lt;/code&gt; &lt;/a&gt;ソケットを。これは、グループの複数のメンバーが同じアドレスにバインドできるようにするために必要です。</target>
        </trans-unit>
        <trans-unit id="5e9eeca29aab2965612038f9a3795990d96a2122" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../security/protectiondomain&quot;&gt;&lt;code&gt;ProtectionDomain&lt;/code&gt;&lt;/a&gt; of a proxy class is the same as that of system classes loaded by the bootstrap class loader, such as &lt;code&gt;java.lang.Object&lt;/code&gt;, because the code for a proxy class is generated by trusted system code. This protection domain will typically be granted &lt;code&gt;java.security.AllPermission&lt;/code&gt;.</source>
          <target state="translated">プロキシクラスの&lt;a href=&quot;../../security/protectiondomain&quot;&gt; &lt;code&gt;ProtectionDomain&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;java.lang.Object&lt;/code&gt; などのブートストラップクラスローダーによってロードされるシステムクラスのProtectionDomainと同じです。これは、プロキシクラスのコードが信頼できるシステムコードによって生成されるためです。この保護ドメインには通常、 &lt;code&gt;java.security.AllPermission&lt;/code&gt; が付与されます。</target>
        </trans-unit>
        <trans-unit id="5ecb831d25072794a8321beb08d3f2989b4eb525" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../time/zoneid#systemDefault()&quot;&gt;&lt;code&gt;system default TimeZone&lt;/code&gt;&lt;/a&gt; is used to convert the UTC time to local date-time.</source>
          <target state="translated">&lt;a href=&quot;../../time/zoneid#systemDefault()&quot;&gt; &lt;code&gt;system default TimeZone&lt;/code&gt; &lt;/a&gt;ローカルの日時にUTC時刻に変換するために使用されます。</target>
        </trans-unit>
        <trans-unit id="8cce448bf1e954b21943bc931e3a7ed24ae93fed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../util/locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; class provide access to a range of information useful for localizing an application. This includes the language and region, such as &quot;en-GB&quot; for English as used in Great Britain.</source>
          <target state="translated">&lt;a href=&quot;../../util/locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt;クラスは、アプリケーションをローカライズするための有用な情報の範囲へのアクセスを提供します。これには、英国で使用されている英語の「en-GB」などの言語と地域が含まれます。</target>
        </trans-unit>
        <trans-unit id="7786edad52abe214490e50f86c58831524452f9b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; methods may also be used to read or update the owner. In that case, the owner attribute is identified by the name &lt;code&gt;&quot;owner&quot;&lt;/code&gt;, and the value of the attribute is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッド&lt;/a&gt;方法は、所有者の読み取りまたは更新するために使用することができます。その場合、所有者属性は &lt;code&gt;&quot;owner&quot;&lt;/code&gt; という名前で識別され、属性の値は&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="f8a11726aa14cd73ca2137ecb864daef15163536" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes as if by invoking the &lt;a href=&quot;#readAttributes()&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; の&lt;/a&gt;方法は、IFとして呼び出すことによって、これらの属性のいずれかを読み取るために使用することができる&lt;a href=&quot;#readAttributes()&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="85684b2fc47146275fdab7d2c9f839a7fdc85f8f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes, or any of the attributes defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; as if by invoking the &lt;a href=&quot;#readAttributes()&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; の&lt;/a&gt;方法は、これらの属性のいずれかを読み取るために使用され得る、または属性のいずれかによって定義さ&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;呼び出すことであるかのように&lt;a href=&quot;#readAttributes()&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="01813ca8a2f4cee820ce424da9550d8a914a2790" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read the ACL or owner attributes as if by invoking the &lt;a href=&quot;#getAcl()&quot;&gt;&lt;code&gt;getAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#getOwner()&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; の&lt;/a&gt;方法を呼び出すことによってかのようにACLまたは所有者属性を読み取るために使用されてもよい&lt;a href=&quot;#getAcl()&quot;&gt; &lt;code&gt;getAcl&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;fileownerattributeview#getOwner()&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; メソッド&lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="f7bcc13ad5cb486576996f847be7d97aa0930b3d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; methods may also be used to read or update the owner. In that case, the owner attribute is identified by the name &lt;code&gt;&quot;owner&quot;&lt;/code&gt;, and the value of the attribute is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッド&lt;/a&gt;方法は、所有者の読み取りまたは更新するために使用することができます。その場合、所有者属性は &lt;code&gt;&quot;owner&quot;&lt;/code&gt; という名前で識別され、属性の値は&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="6c2baff7408e5ad54d49ec829c03c8add1ffdf24" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes as if by invoking the &lt;a href=&quot;basicfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; の&lt;/a&gt;方法は、IFとして呼び出すことによって、これらの属性のいずれかを読み取るために使用することができる&lt;a href=&quot;basicfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="e42fb0b1ed94cf5c272dbff37a665442f101c72a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes, or any of the attributes defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; as if by invoking the &lt;a href=&quot;dosfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; の&lt;/a&gt;方法は、これらの属性のいずれかを読み取るために使用され得る、または属性のいずれかによって定義さ&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;呼び出すことであるかのように&lt;a href=&quot;dosfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="cc5e5360eedff08a35975f0e9a9480502f02b841" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes, or any of the attributes defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; as if by invoking the &lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; の&lt;/a&gt;方法は、これらの属性のいずれかを読み取るために使用され得る、または属性のいずれかによって定義さ&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;呼び出すことであるかのように&lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="52e7fac281b42fd7fe7452e241108ef2d5dcf7d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read the ACL or owner attributes as if by invoking the &lt;a href=&quot;aclfileattributeview#getAcl--&quot;&gt;&lt;code&gt;getAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; の&lt;/a&gt;方法を呼び出すことによってかのようにACLまたは所有者属性を読み取るために使用されてもよい&lt;a href=&quot;aclfileattributeview#getAcl--&quot;&gt; &lt;code&gt;getAcl&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; メソッド&lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="a66d1389e68f17cf760e4ead06c81319bc1c611a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the ACL or owner attributes as if by invoking the &lt;a href=&quot;#setAcl(java.util.List)&quot;&gt;&lt;code&gt;setAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッドの&lt;/a&gt;方法は、IFとして呼び出すことによって、ACLまたは所有者属性を更新するために使用されてもよい&lt;a href=&quot;#setAcl(java.util.List)&quot;&gt; &lt;code&gt;setAcl&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;fileownerattributeview#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="a1ab88808fcc3905febfce9137a0e1f9a46f0aa3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the DOS attributes as if by invoking the &lt;a href=&quot;#setReadOnly(boolean)&quot;&gt;&lt;code&gt;setReadOnly&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setHidden(boolean)&quot;&gt;&lt;code&gt;setHidden&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setSystem(boolean)&quot;&gt;&lt;code&gt;setSystem&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#setArchive(boolean)&quot;&gt;&lt;code&gt;setArchive&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッドの&lt;/a&gt;方法は、最終アクセス時刻をファイルの最終更新時刻を更新したりすることによって定義されるように、時間属性を作成するために使用することができる&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;。また、&lt;a href=&quot;#setReadOnly(boolean)&quot;&gt; &lt;code&gt;setReadOnly&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#setHidden(boolean)&quot;&gt; &lt;code&gt;setHidden&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#setSystem(boolean)&quot;&gt; &lt;code&gt;setSystem&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#setArchive(boolean)&quot;&gt; &lt;code&gt;setArchive&lt;/code&gt; &lt;/a&gt;メソッドをそれぞれ呼び出すかのようにDOS属性を更新するために使用することもできます。</target>
        </trans-unit>
        <trans-unit id="324d0485d9b5471da8935266a3e2c4f243862906" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the permissions, owner, or group-owner as if by invoking the &lt;a href=&quot;#setPermissions(java.util.Set)&quot;&gt;&lt;code&gt;setPermissions&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;fileownerattributeview#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#setGroup(java.nio.file.attribute.GroupPrincipal)&quot;&gt;&lt;code&gt;setGroup&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッドの&lt;/a&gt;方法は、最終アクセス時刻をファイルの最終更新時刻を更新したりすることによって定義されるように、時間属性を作成するために使用することができる&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;。また、&lt;a href=&quot;#setPermissions(java.util.Set)&quot;&gt; &lt;code&gt;setPermissions&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;fileownerattributeview#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#setGroup(java.nio.file.attribute.GroupPrincipal)&quot;&gt; &lt;code&gt;setGroup&lt;/code&gt; &lt;/a&gt;メソッドをそれぞれ呼び出すかのように、アクセス許可、所有者、またはグループ所有者を更新するために使用することもできます。</target>
        </trans-unit>
        <trans-unit id="32d653cec997683485730f2c2e168b1cada5ca30" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as if by invoking the &lt;a href=&quot;#setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)&quot;&gt;&lt;code&gt;setTimes&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッドの&lt;/a&gt;方法は、最終アクセス時刻をファイルの最終更新時刻を更新したり呼び出すことによってかのように、時間属性を作成するために使用することができる&lt;a href=&quot;#setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)&quot;&gt; &lt;code&gt;setTimes&lt;/code&gt; の&lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="1bfa9ca3b01e08a940097655d13c2a85724d95de" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the ACL or owner attributes as if by invoking the &lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt;&lt;code&gt;setAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッドの&lt;/a&gt;方法は、IFとして呼び出すことによって、ACLまたは所有者属性を更新するために使用されてもよい&lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt; &lt;code&gt;setAcl&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="c435d3e3c46a4b9a0beff2ad2d5cec4c6ab7aa83" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the DOS attributes as if by invoking the &lt;a href=&quot;dosfileattributeview#setReadOnly-boolean-&quot;&gt;&lt;code&gt;setReadOnly&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dosfileattributeview#setHidden-boolean-&quot;&gt;&lt;code&gt;setHidden&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dosfileattributeview#setSystem-boolean-&quot;&gt;&lt;code&gt;setSystem&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;dosfileattributeview#setArchive-boolean-&quot;&gt;&lt;code&gt;setArchive&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッドの&lt;/a&gt;方法は、最終アクセス時刻をファイルの最終更新時刻を更新したりすることによって定義されるように、時間属性を作成するために使用することができる&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;。また、&lt;a href=&quot;dosfileattributeview#setReadOnly-boolean-&quot;&gt; &lt;code&gt;setReadOnly&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;dosfileattributeview#setHidden-boolean-&quot;&gt; &lt;code&gt;setHidden&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;dosfileattributeview#setSystem-boolean-&quot;&gt; &lt;code&gt;setSystem&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;dosfileattributeview#setArchive-boolean-&quot;&gt; &lt;code&gt;setArchive&lt;/code&gt; &lt;/a&gt;メソッドをそれぞれ呼び出すかのように、DOS属性を更新するために使用することもできます。</target>
        </trans-unit>
        <trans-unit id="eda9c31c1c567716843eb27dfd24c5d17ae4a65a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the permissions, owner, or group-owner as if by invoking the &lt;a href=&quot;posixfileattributeview#setPermissions-java.util.Set-&quot;&gt;&lt;code&gt;setPermissions&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;posixfileattributeview#setGroup-java.nio.file.attribute.GroupPrincipal-&quot;&gt;&lt;code&gt;setGroup&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッドの&lt;/a&gt;方法は、最終アクセス時刻をファイルの最終更新時刻を更新したりすることによって定義されるように、時間属性を作成するために使用することができる&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;。また、&lt;a href=&quot;posixfileattributeview#setPermissions-java.util.Set-&quot;&gt; &lt;code&gt;setPermissions&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;posixfileattributeview#setGroup-java.nio.file.attribute.GroupPrincipal-&quot;&gt; &lt;code&gt;setGroup&lt;/code&gt; &lt;/a&gt;メソッドをそれぞれ呼び出すことによって、アクセス権、所有者、またはグループ所有者を更新する場合にも使用できます。</target>
        </trans-unit>
        <trans-unit id="a691ef8b98d41f4420b4aefb065db958be6429d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as if by invoking the &lt;a href=&quot;basicfileattributeview#setTimes-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-&quot;&gt;&lt;code&gt;setTimes&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッドの&lt;/a&gt;方法は、最終アクセス時刻をファイルの最終更新時刻を更新したり呼び出すことによってかのように、時間属性を作成するために使用することができる&lt;a href=&quot;basicfileattributeview#setTimes-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-&quot;&gt; &lt;code&gt;setTimes&lt;/code&gt; の&lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="d6234f4c2f9f186f3857bbbd3b1aad9de4850aec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../filestore#supportsFileAttributeView(java.lang.Class)&quot;&gt;&lt;code&gt;supportsFileAttributeView&lt;/code&gt;&lt;/a&gt; method may be used to test if a specific &lt;a href=&quot;../filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the storage of user-defined attributes.</source>
          <target state="translated">&lt;a href=&quot;../filestore#supportsFileAttributeView(java.lang.Class)&quot;&gt; &lt;code&gt;supportsFileAttributeView&lt;/code&gt; の&lt;/a&gt;特定の場合方法は、試験に使用することができる&lt;a href=&quot;../filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt;ユーザ定義属性のストレージをサポートします。</target>
        </trans-unit>
        <trans-unit id="580a6d6beeb8ffe4eb2d62290bc22802acbffaee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../filestore#supportsFileAttributeView-java.lang.Class-&quot;&gt;&lt;code&gt;supportsFileAttributeView&lt;/code&gt;&lt;/a&gt; method may be used to test if a specific &lt;a href=&quot;../filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the storage of user-defined attributes.</source>
          <target state="translated">&lt;a href=&quot;../filestore#supportsFileAttributeView-java.lang.Class-&quot;&gt; &lt;code&gt;supportsFileAttributeView&lt;/code&gt; の&lt;/a&gt;特定の場合方法は、試験に使用することができる&lt;a href=&quot;../filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt;ユーザ定義属性のストレージをサポートします。</target>
        </trans-unit>
        <trans-unit id="c29872ec7ff5ff95dc63bc474c776a8113805f34" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../function/supplier#get()&quot;&gt;&lt;code&gt;Supplier.get()&lt;/code&gt;&lt;/a&gt; method will be invoked on the supplier no more than once, and only after the terminal operation of the stream pipeline commences.</source>
          <target state="translated">&lt;a href=&quot;../function/supplier#get()&quot;&gt; &lt;code&gt;Supplier.get()&lt;/code&gt; &lt;/a&gt;メソッドは複数回業者に呼び出されていない、とだけストリームパイプラインの開始についての端末操作後に説明します。</target>
        </trans-unit>
        <trans-unit id="0ee89249aaebf2f1fc5eeda71bacdd03058fa195" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../function/supplier#get--&quot;&gt;&lt;code&gt;Supplier.get()&lt;/code&gt;&lt;/a&gt; method will be invoked on the supplier no more than once, and only after the terminal operation of the stream pipeline commences.</source>
          <target state="translated">&lt;a href=&quot;../function/supplier#get--&quot;&gt; &lt;code&gt;Supplier.get()&lt;/code&gt; &lt;/a&gt;メソッドは複数回業者に呼び出されていない、とだけストリームパイプラインの開始についての端末操作後に説明します。</target>
        </trans-unit>
        <trans-unit id="142dbbdea20e0ff6bd9b8a5f8d0a573aae47a0f4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mappedbytebuffer&quot;&gt;&lt;code&gt;&lt;i&gt;mapped byte buffer&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; returned by this method will have a position of zero and a limit and capacity of &lt;code&gt;size&lt;/code&gt;; its mark will be undefined. The buffer and the mapping that it represents will remain valid until the buffer itself is garbage-collected.</source>
          <target state="translated">&lt;a href=&quot;../mappedbytebuffer&quot;&gt; &lt;code&gt;&lt;i&gt;mapped byte buffer&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;このメソッドによって返されたゼロの位置との限界と能力があります &lt;code&gt;size&lt;/code&gt; 、そのマークは未定義になります。バッファとそれが表すマッピングは、バッファ自体がガベージコレクションされるまで有効です。</target>
        </trans-unit>
        <trans-unit id="1eef88d322f3e09ae53bc681f6806fe486829507" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will always be equal to this object's file-pointer offset as returned by the &lt;a href=&quot;#getFilePointer()&quot;&gt;&lt;code&gt;getFilePointer&lt;/code&gt;&lt;/a&gt; method. Changing this object's file-pointer offset, whether explicitly or by reading or writing bytes, will change the position of the channel, and vice versa. Changing the file's length via this object will change the length seen via the file channel, and vice versa.</source>
          <target state="translated">返されるチャネルの&lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;#getFilePointer()&quot;&gt; &lt;code&gt;getFilePointer&lt;/code&gt; &lt;/a&gt;メソッドによって返されるこのオブジェクトのファイルポインタオフセットと常に等しくなります。このオブジェクトのファイルポインタオフセットを変更すると、明示的に、またはバイトの読み取りまたは書き込みによって、チャネルの位置が変更されます。その逆も同様です。このオブジェクトを介してファイルの長さを変更すると、ファイルチャネルを介して表示される長さが変更され、その逆も同様です。</target>
        </trans-unit>
        <trans-unit id="48db05c222075f07f78662388844eeb5f6f1bc01" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will always be equal to this object's file-pointer offset as returned by the &lt;a href=&quot;randomaccessfile#getFilePointer--&quot;&gt;&lt;code&gt;getFilePointer&lt;/code&gt;&lt;/a&gt; method. Changing this object's file-pointer offset, whether explicitly or by reading or writing bytes, will change the position of the channel, and vice versa. Changing the file's length via this object will change the length seen via the file channel, and vice versa.</source>
          <target state="translated">返されるチャネルの&lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;randomaccessfile#getFilePointer--&quot;&gt; &lt;code&gt;getFilePointer&lt;/code&gt; &lt;/a&gt;メソッドによって返されるこのオブジェクトのファイルポインターオフセットと常に等しくなります。このオブジェクトのファイルポインターオフセットを変更すると、明示的に、またはバイトの読み取りまたは書き込みによって、チャネルの位置が変更されます。逆の場合も同様です。このオブジェクトを介してファイルの長さを変更すると、ファイルチャネルを介して表示される長さが変更され、逆も同様です。</target>
        </trans-unit>
        <trans-unit id="1b7577f54ca9ebadbf67e174ed9fc74807c65a0b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class defines methods that operate on file attributes including file permissions. This may be used when finer manipulation of file permissions is required.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;クラスは、ファイルのアクセス権などのファイル属性を操作するメソッドを定義します。これは、ファイルのアクセス許可をより細かく操作する必要がある場合に使用できます。</target>
        </trans-unit>
        <trans-unit id="b28607d7b75904cc426fcfb6ec4e099b107fd4d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/files#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;Files.createTempFile&lt;/code&gt;&lt;/a&gt; method provides an alternative method to create an empty file in the temporary-file directory. Files created by that method may have more restrictive access permissions to files created by this method and so may be more suited to security-sensitive applications.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/files#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;Files.createTempFile&lt;/code&gt; の&lt;/a&gt;方法は、一時ファイルディレクトリに空のファイルを作成するための別の方法を提供します。この方法で作成されたファイルは、この方法で作成されたファイルへのアクセス許可がより制限されている可能性があるため、セキュリティが重要なアプリケーションに適している可能性があります。</target>
        </trans-unit>
        <trans-unit id="3185bf54751cfa5bf1ebba53d67faccb98bf6516" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/files#createTempFile-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;Files.createTempFile&lt;/code&gt;&lt;/a&gt; method provides an alternative method to create an empty file in the temporary-file directory. Files created by that method may have more restrictive access permissions to files created by this method and so may be more suited to security-sensitive applications.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/files#createTempFile-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;Files.createTempFile&lt;/code&gt; の&lt;/a&gt;方法は、一時ファイルディレクトリに空のファイルを作成するための別の方法を提供します。その方法で作成されたファイルは、この方法で作成されたファイルへのアクセス制限がより厳しくなり、セキュリティが重要なアプリケーションに適している場合があります。</target>
        </trans-unit>
        <trans-unit id="9b177003ee97e039cabe9da4299828ca0c286e4b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/package-summary&quot;&gt;&lt;code&gt;java.nio.file&lt;/code&gt;&lt;/a&gt; package defines interfaces and classes for the Java virtual machine to access files, file attributes, and file systems. This API may be used to overcome many of the limitations of the &lt;code&gt;java.io.File&lt;/code&gt; class. The &lt;a href=&quot;#toPath()&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method may be used to obtain a &lt;a href=&quot;../nio/file/path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; that uses the abstract path represented by a &lt;code&gt;File&lt;/code&gt; object to locate a file. The resulting &lt;code&gt;Path&lt;/code&gt; may be used with the &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class to provide more efficient and extensive access to additional file operations, file attributes, and I/O exceptions to help diagnose errors when an operation on a file fails.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/package-summary&quot;&gt; &lt;code&gt;java.nio.file&lt;/code&gt; の&lt;/a&gt;パッケージには、アクセスファイル、ファイル属性、およびファイルシステムにJava仮想マシン用のインタフェースとクラスを定義します。このAPIは、 &lt;code&gt;java.io.File&lt;/code&gt; クラスの制限の多くを克服するために使用できます。&lt;a href=&quot;#toPath()&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; の&lt;/a&gt;方法を得るために使用することができる&lt;a href=&quot;../nio/file/path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;で表される抽象パス使用して &lt;code&gt;File&lt;/code&gt; ファイルを検索するオブジェクト。結果の &lt;code&gt;Path&lt;/code&gt; &lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;クラスで使用すると、追加のファイル操作、ファイル属性、およびI / O例外へのより効率的で広範なアクセスが提供され、ファイルの操作が失敗した場合のエラーの診断に役立ちます。</target>
        </trans-unit>
        <trans-unit id="d1cd2dbce708c6940c8cf8ba35f1bba1e58ac0ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/package-summary&quot;&gt;&lt;code&gt;java.nio.file&lt;/code&gt;&lt;/a&gt; package defines interfaces and classes for the Java virtual machine to access files, file attributes, and file systems. This API may be used to overcome many of the limitations of the &lt;code&gt;java.io.File&lt;/code&gt; class. The &lt;a href=&quot;file#toPath--&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method may be used to obtain a &lt;a href=&quot;../nio/file/path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; that uses the abstract path represented by a &lt;code&gt;File&lt;/code&gt; object to locate a file. The resulting &lt;code&gt;Path&lt;/code&gt; may be used with the &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class to provide more efficient and extensive access to additional file operations, file attributes, and I/O exceptions to help diagnose errors when an operation on a file fails.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/package-summary&quot;&gt; &lt;code&gt;java.nio.file&lt;/code&gt; の&lt;/a&gt;パッケージには、アクセスファイル、ファイル属性、およびファイルシステムにJava仮想マシン用のインタフェースとクラスを定義します。このAPIは、 &lt;code&gt;java.io.File&lt;/code&gt; クラスの制限の多くを克服するために使用できます。&lt;a href=&quot;file#toPath--&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; の&lt;/a&gt;方法を得るために使用することができる&lt;a href=&quot;../nio/file/path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;で表される抽象パス使用して &lt;code&gt;File&lt;/code&gt; ファイルを検索するオブジェクト。結果の &lt;code&gt;Path&lt;/code&gt; を&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;クラスで使用して、追加のファイル操作、ファイル属性、およびI / O例外へのより効率的で広範なアクセスを提供し、ファイルの操作が失敗したときのエラーの診断に役立てることができます。</target>
        </trans-unit>
        <trans-unit id="d82b2361fe117f27f253cb0e774de64061c22b2d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../spliterator#getComparator()&quot;&gt;spliterator's comparator&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt; if the &lt;a href=&quot;../sortedmap#comparator()&quot;&gt;map's comparator&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the map's comparator.</source>
          <target state="translated">&lt;a href=&quot;../spliterator#getComparator()&quot;&gt;spliteratorのコンパレータが&lt;/a&gt;ある &lt;code&gt;null&lt;/code&gt; の場合は&lt;a href=&quot;../sortedmap#comparator()&quot;&gt;マップのコンパレータで&lt;/a&gt;ある &lt;code&gt;null&lt;/code&gt; 。それ以外の場合、スプリッターのコンパレーターは、マップのコンパレーターと同じであるか、同じ全順序を課します。</target>
        </trans-unit>
        <trans-unit id="98176dc88f06469dcca48fb3788ff30dc992f8b1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../spliterator#getComparator()&quot;&gt;spliterator's comparator&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt; if the &lt;a href=&quot;../sortedset#comparator()&quot;&gt;set's comparator&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the set's comparator.</source>
          <target state="translated">&lt;a href=&quot;../spliterator#getComparator()&quot;&gt;spliteratorのコンパレータが&lt;/a&gt;ある &lt;code&gt;null&lt;/code&gt; の場合は&lt;a href=&quot;../sortedset#comparator()&quot;&gt;セットのコンパレータで&lt;/a&gt;ある &lt;code&gt;null&lt;/code&gt; 。それ以外の場合、スプリッターのコンパレーターは、セットのコンパレーターと同じであるか、同じ全順序を課します。</target>
        </trans-unit>
        <trans-unit id="6e1a4cbb02bf6c03d5a44b8766a6b75e3bd7ef2d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;Epoch Day count&lt;/code&gt;&lt;/a&gt; is a simple incrementing count of days where day 0 is 1970-01-01 (ISO). This definition is the same for all chronologies, enabling conversion.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;Epoch Day count&lt;/code&gt; &lt;/a&gt; 0日が1970年1月1日である日の簡単なインクリメント数（ISO）です。この定義はすべての年代で同じであり、変換を可能にします。</target>
        </trans-unit>
        <trans-unit id="d90b2002fdcbda3f48a04b1c28d8f93afe9fd378" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; instance used for calculating the date-time fields and the instant of time.</source>
          <target state="translated">&lt;a href=&quot;../util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;の日付・時刻フィールドと時間の瞬間を計算するために使用されるインスタンス。</target>
        </trans-unit>
        <trans-unit id="5e38b37aeff6c0bffbe4d4c7f1f5d153a7812a9f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; instance used for calculating the date-time fields and the instant of time. This field is used for both formatting and parsing.</source>
          <target state="translated">&lt;a href=&quot;../util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;の日付・時刻フィールドと時間の瞬間を計算するために使用されるインスタンス。このフィールドは、フォーマットと解析の両方に使用されます。</target>
        </trans-unit>
        <trans-unit id="d349e9ab300acec984275666f0f2f7898835dbbc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt;&lt;code&gt;CompletableFuture&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;#onExit()&quot;&gt;&lt;code&gt;onExit()&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;../util/concurrent/completablefuture#complete(T)&quot;&gt;&lt;code&gt;completed&lt;/code&gt;&lt;/a&gt; when the process has terminated.</source>
          <target state="translated">&lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt; &lt;code&gt;CompletableFuture&lt;/code&gt; &lt;/a&gt;からの&lt;a href=&quot;#onExit()&quot;&gt; &lt;code&gt;onExit()&lt;/code&gt; &lt;/a&gt;されて&lt;a href=&quot;../util/concurrent/completablefuture#complete(T)&quot;&gt; &lt;code&gt;completed&lt;/code&gt; &lt;/a&gt;、プロセスが終了したとき。</target>
        </trans-unit>
        <trans-unit id="19b1c9756a7bb0fa30123a5de981aa066dd9f14b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt;&lt;code&gt;CompletableFuture&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;#onExit()&quot;&gt;&lt;code&gt;onExit()&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;../util/concurrent/completablefuture#complete(T)&quot;&gt;completed&lt;/a&gt; when the process has terminated.</source>
          <target state="translated">&lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt; &lt;code&gt;CompletableFuture&lt;/code&gt; &lt;/a&gt;からの&lt;a href=&quot;#onExit()&quot;&gt; &lt;code&gt;onExit()&lt;/code&gt; &lt;/a&gt;されて&lt;a href=&quot;../util/concurrent/completablefuture#complete(T)&quot;&gt;完了し&lt;/a&gt;、プロセスが終了したとき。</target>
        </trans-unit>
        <trans-unit id="8df3e7a33aa49e28a1192bcf36d057cf0293415b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneid#getId()&quot;&gt;&lt;code&gt;zone ID&lt;/code&gt;&lt;/a&gt;. This is not part of the ISO-8601 standard. Parsing is case sensitive.</source>
          <target state="translated">&lt;a href=&quot;../zoneid#getId()&quot;&gt; &lt;code&gt;zone ID&lt;/code&gt; &lt;/a&gt;。これはISO-8601標準の一部ではありません。解析では大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="bde57531a30d3dd5f7c37db7a69c3a1d61935c91" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;zone ID&lt;/code&gt;&lt;/a&gt;. This is not part of the ISO-8601 standard. Parsing is case sensitive.</source>
          <target state="translated">&lt;a href=&quot;../zoneid#getId--&quot;&gt; &lt;code&gt;zone ID&lt;/code&gt; &lt;/a&gt;。これはISO-8601規格の一部ではありません。解析では大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="526e36bd9e115421a045dc56e1f87a5c3579d0c0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons or seconds. An offset of zero uses &quot;GMT&quot;. North American zone names and military zone names are not handled.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;コロンまたは秒なし。ゼロのオフセットは「GMT」を使用します。北米のゾーン名と軍事ゾーンの名前は処理されません。</target>
        </trans-unit>
        <trans-unit id="e56b90af9202ee373bfa47364f3304adf4ca57ec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. The offset parsing is lenient, which allows the minutes and seconds to be optional. Parsing is case insensitive.</source>
          <target state="translated">コロンなしの&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。オフセットに秒がある場合、これはISO-8601標準の一部ではありませんが、それらは処理されます。オフセット解析は寛大であり、分と秒をオプションにすることができます。解析では大文字と小文字は区別されません。</target>
        </trans-unit>
        <trans-unit id="5535a010f39cfbe7cdfaf718c4a1e14b41ecdf58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。オフセットに秒がある場合、これはISO-8601標準の一部ではありませんが、それらは処理されます。</target>
        </trans-unit>
        <trans-unit id="144173739cb700aa98d81173233fe566b6071553" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. Parsing is case insensitive.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。オフセットに秒がある場合、これはISO-8601標準の一部ではありませんが、それらは処理されます。解析では大文字と小文字は区別されません。</target>
        </trans-unit>
        <trans-unit id="50f628752614c2df8ca094659bb098d1157b0637" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. The offset parsing is lenient, which allows the minutes and seconds to be optional. Parsing is case insensitive.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。オフセットに秒がある場合、これはISO-8601標準の一部ではありませんが、それらは処理されます。オフセット解析は寛大であり、分と秒をオプションにすることができます。解析では大文字と小文字は区別されません。</target>
        </trans-unit>
        <trans-unit id="d3169944a88bbb1bad97a1a30cd73363ef99816c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons or seconds. An offset of zero uses &quot;GMT&quot;. North American zone names and military zone names are not handled.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;コロンまたは秒なし。ゼロのオフセットは「GMT」を使用します。北米のゾーン名と軍事ゾーン名は処理されません。</target>
        </trans-unit>
        <trans-unit id="ccd8df3518a4d9b943302ee23512831c55573aa6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. Parsing is case insensitive.</source>
          <target state="translated">コロンなしの&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。オフセットに秒がある場合、これはISO-8601標準の一部ではありませんが、それらは処理されます。解析では大文字と小文字が区別されません。</target>
        </trans-unit>
        <trans-unit id="ef469acd11a9914f386735c8a07ac2ef3e1fdbdb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。オフセットに秒がある場合、これはISO-8601標準の一部ではありませんが、それらは処理されます。</target>
        </trans-unit>
        <trans-unit id="7eb4562aec376d8a60cf8842edb8d8443f0a1248" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. Parsing is case insensitive.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。オフセットに秒がある場合、これはISO-8601標準の一部ではありませんが、それらは処理されます。解析では大文字と小文字が区別されません。</target>
        </trans-unit>
        <trans-unit id="fbbeb22d9b7e39547534480fe8598ea8d98e6e22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt;&lt;/a&gt; class serves as a useful superclass for defining locks and other synchronizers that rely on queuing blocked threads. The &lt;a href=&quot;abstractqueuedlongsynchronizer&quot;&gt;&lt;code&gt;AbstractQueuedLongSynchronizer&lt;/code&gt;&lt;/a&gt; class provides the same functionality but extends support to 64 bits of synchronization state. Both extend class &lt;a href=&quot;abstractownablesynchronizer&quot;&gt;&lt;code&gt;AbstractOwnableSynchronizer&lt;/code&gt;&lt;/a&gt;, a simple class that helps record the thread currently holding exclusive synchronization. The &lt;a href=&quot;locksupport&quot;&gt;&lt;code&gt;LockSupport&lt;/code&gt;&lt;/a&gt; class provides lower-level blocking and unblocking support that is useful for those developers implementing their own customized lock classes.</source>
          <target state="translated">&lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; の&lt;/a&gt;クラスは、ロックとブロックされたスレッドのキューイングに依存する他のシンクロナイザを定義するのに有用なスーパークラスとして機能します。&lt;a href=&quot;abstractqueuedlongsynchronizer&quot;&gt; &lt;code&gt;AbstractQueuedLongSynchronizer&lt;/code&gt; の&lt;/a&gt;クラスは、同じ機能を提供するが、同期状態の64ビットのサポートを拡張します。どちらも、クラス&lt;a href=&quot;abstractownablesynchronizer&quot;&gt; &lt;code&gt;AbstractOwnableSynchronizer&lt;/code&gt; を&lt;/a&gt;拡張します。これは、現在排他的同期を保持しているスレッドの記録に役立つ単純なクラスです。&lt;a href=&quot;locksupport&quot;&gt; &lt;code&gt;LockSupport&lt;/code&gt; の&lt;/a&gt;クラスは、独自のカスタマイズされたロッククラスを実装するこれらの開発者にとって便利である低レベルのブロックと解除のサポートを提供します。</target>
        </trans-unit>
        <trans-unit id="cfef7de48d524821a8ec7c9579af151f13cdc049" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accesscontroller#checkPermission-java.security.Permission-&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method determines whether the access request indicated by a specified permission should be granted or denied. A sample call appears below. In this example, &lt;code&gt;checkPermission&lt;/code&gt; will determine whether or not to grant &quot;read&quot; access to the file named &quot;testFile&quot; in the &quot;/temp&quot; directory.</source>
          <target state="translated">&lt;a href=&quot;accesscontroller#checkPermission-java.security.Permission-&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;メソッドは、指定したアクセス権によって示されるアクセス要求が許可または拒否すべきかどうかを判断します。呼び出しの例を以下に示します。この例では、 &lt;code&gt;checkPermission&lt;/code&gt; は、「/ temp」ディレクトリ内の「testFile」という名前のファイルへの「読み取り」アクセスを許可するかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="8838fb229596af6a0b8d0c55ad981647e1961bd8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessibleaction&quot;&gt;AccessibleAction&lt;/a&gt; interface should be supported by any object that can perform one or more actions. This interface provides the standard mechanism for an assistive technology to determine what those actions are as well as tell the object to perform those actions. Any object that can be manipulated should support this interface.</source>
          <target state="translated">&lt;a href=&quot;accessibleaction&quot;&gt;たAccessibleActionの&lt;/a&gt;インタフェースは、1つ以上のアクションを実行できるすべてのオブジェクトによってサポートされなければなりません。このインターフェースは、これらのアクションが何であるかを判別し、それらのアクションを実行するようにオブジェクトに指示するための支援技術の標準メカニズムを提供します。操作可能なオブジェクトはすべて、このインターフェイスをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="8ae7ddd5290d55c841db71019a71a67d5d9c493e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt;&lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt;&lt;/a&gt; method allows you to obtain the localized string for a locale independent key from a predefined &lt;code&gt;ResourceBundle&lt;/code&gt; for the keys defined in this class.</source>
          <target state="translated">&lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt; &lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt; &lt;/a&gt;メソッドを使用すると、あらかじめ定義されたから、ロケールに依存しないキーのためのローカライズされた文字列取得することができ &lt;code&gt;ResourceBundle&lt;/code&gt; このクラスで定義されたキーのために。</target>
        </trans-unit>
        <trans-unit id="9b77e4ce5068ed5e85d6cc9ed7b115da4ecc9dd1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessiblecomponent&quot;&gt;AccessibleComponent&lt;/a&gt; interface should be supported by any object that is rendered on the screen. This interface provides the standard mechanism for an assistive technology to determine and set the graphical representation of an object.</source>
          <target state="translated">&lt;a href=&quot;accessiblecomponent&quot;&gt;AccessibleComponent内&lt;/a&gt;インターフェイスは、画面に描画されるすべてのオブジェクトによってサポートされなければなりません。このインターフェイスは、オブジェクトのグラフィック表現を決定および設定するための支援技術の標準メカニズムを提供します。</target>
        </trans-unit>
        <trans-unit id="b94cfd97d9dd9fae4586187050765fb100010225" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessiblehypertext&quot;&gt;AccessibleHypertext&lt;/a&gt; interface should be supported by any object that presents hypertext information on the display. This interface provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. It also provides standard mechanisms for manipulating &lt;a href=&quot;#AccessibleHyperlink&quot;&gt;hyperlinks&lt;/a&gt;. Applications can determine if an object supports the AccessibleHypertext interface by first obtaining its &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt; (see &lt;a href=&quot;#Accessible&quot;&gt;Accessible&lt;/a&gt;) and then calling the AccessibleContext.getAccessibleText() method of &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt;. If the return value is a class which extends AccessibleHypertext, then that object supports AccessibleHypertext.</source>
          <target state="translated">&lt;a href=&quot;accessiblehypertext&quot;&gt;AccessibleHypertextの&lt;/a&gt;インターフェースは、ディスプレイ上の任意のオブジェクトそのプレゼントのハイパーテキスト情報によってサポートされる必要があります。このインターフェースは、コンテンツ、属性、および空間的位置を介してそのテキストにアクセスするための支援技術の標準メカニズムを提供します。また、&lt;a href=&quot;#AccessibleHyperlink&quot;&gt;ハイパーリンク&lt;/a&gt;を操作するための標準的なメカニズムも提供します。オブジェクトが最初に取得することによってAccessibleHypertextインタフェースをサポートするかどうかを判定することができる&lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContextを&lt;/a&gt;（参照&lt;a href=&quot;#Accessible&quot;&gt;アクセ&lt;/a&gt;）、その後のAccessibleContext.getAccessibleText（）メソッドを呼び出す&lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContextを&lt;/a&gt;。戻り値がAccessibleHypertextを拡張するクラスである場合、そのオブジェクトはAccessibleHypertextをサポートします。</target>
        </trans-unit>
        <trans-unit id="c497281662eb34297821a824dd4c89d1971de1a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessibleselection&quot;&gt;AccessibleSelection&lt;/a&gt; interface provides the standard mechanism for an assistive technology to determine what the current selected children are, as well as modify the selection set. Any object that has children that can be selected should support this the AccessibleSelection interface.</source>
          <target state="translated">&lt;a href=&quot;accessibleselection&quot;&gt;たAccessibleSelectionの&lt;/a&gt;インタフェースは、選択されているセットを変更すると、現在選択されている子どもたちが何であるかを決定するために支援技術のための標準的なメカニズムを提供します。選択可能な子を持つオブジェクトはすべて、このAccessibleSelectionインターフェイスをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="fd58f92dbbbde65bfcc823d640b8c8cf6f567063" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessiblevalue&quot;&gt;AccessibleValue&lt;/a&gt; interface should be supported by any object that supports a numerical value (e.g., a scroll bar). This interface provides the standard mechanism for an assistive technology to determine and set the numerical value as well as get the minimum and maximum values.</source>
          <target state="translated">&lt;a href=&quot;accessiblevalue&quot;&gt;たAccessibleValueの&lt;/a&gt;インタフェースは、数値をサポートするすべてのオブジェクト（スクロールバーなど）によってサポートされる必要があります。このインターフェースは、数値を決定および設定し、最小値と最大値を取得するための支援技術の標準メカニズムを提供します。</target>
        </trans-unit>
        <trans-unit id="7af739ac4d097cac2c6f5ee5bae27b0834134652" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#flags&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentryflag&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; to indicate how entries are inherited and propagated</source>
          <target state="translated">&lt;a href=&quot;aclentry#flags&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt;コンポーネントは、一連のある&lt;a href=&quot;aclentryflag&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt;エントリは継承され、伝播される方法を示すために、</target>
        </trans-unit>
        <trans-unit id="69c9b8c45ab29ebc4b01d4e76c2c7f6f5bb01e81" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#permissions--&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentrypermission&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;aclentry#permissions--&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;コンポーネントは、一連のある&lt;a href=&quot;aclentrypermission&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4243500d113a1e8dca92fc8e0626cf084b1c7810" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#principal--&quot;&gt;&lt;code&gt;principal&lt;/code&gt;&lt;/a&gt; component, sometimes called the &quot;who&quot; component, is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; corresponding to the identity that the entry grants or denies access</source>
          <target state="translated">&lt;a href=&quot;aclentry#principal--&quot;&gt; &lt;code&gt;principal&lt;/code&gt; &lt;/a&gt;時々 「A」成分と呼ばれるコンポーネントは、ある&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;アクセスを拒否エントリー許可こと又はアイデンティティに対応します</target>
        </trans-unit>
        <trans-unit id="f2f5e00fa6ae64b393f6e7d80594412fecc00383" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#type--&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; component determines if the entry grants or denies access.</source>
          <target state="translated">&lt;a href=&quot;aclentry#type--&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;エントリが許可またはアクセスを拒否した場合にコンポーネントが判定する。</target>
        </trans-unit>
        <trans-unit id="f7f010146e9231a02191ac41817da03a8fd8aa8b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclfileattributeview&quot;&gt;&lt;code&gt;AclFileAttributeView&lt;/code&gt;&lt;/a&gt; class defines methods to read and write the Access Control List (ACL) file attribute. The ACL model used by this file attribute view is based on the model defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt; &lt;i&gt;RFC 3530: Network File System (NFS) version 4 Protocol&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;aclfileattributeview&quot;&gt; &lt;code&gt;AclFileAttributeView&lt;/code&gt; の&lt;/a&gt;クラスは、アクセス制御リスト（ACL）のファイル属性を読み書きするメソッドを定義します。このファイル属性ビューで使用されるACLモデルは以下のように定義モデルに基づいて&lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;ネットワークファイルシステム（NFS）バージョン4プロトコル：RFC 3530&lt;/i&gt;&lt;/a&gt;。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="5cf038cbd7c0a12c38ae8e3f28f385b0f66f7649" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;alphacomposite#SRC_OVER&quot;&gt;&lt;code&gt;AlphaComposite.SRC_OVER&lt;/code&gt;&lt;/a&gt; rule.</source>
          <target state="translated">&lt;a href=&quot;alphacomposite#SRC_OVER&quot;&gt; &lt;code&gt;AlphaComposite.SRC_OVER&lt;/code&gt; の&lt;/a&gt;ルール。</target>
        </trans-unit>
        <trans-unit id="d757646f4f57b621bdd66e46c7cc777a0dd7b6f0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;annotatedelement#getAnnotationsByType-java.lang.Class-&quot;&gt;&lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;annotatedelement#getDeclaredAnnotationsByType-java.lang.Class-&quot;&gt;&lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; methods support multiple annotations of the same type on an element. If the argument to either method is a repeatable annotation type (JLS 9.6), then the method will &quot;look through&quot; a container annotation (JLS 9.7), if present, and return any annotations inside the container. Container annotations may be generated at compile-time to wrap multiple annotations of the argument type.</source>
          <target state="translated">&lt;a href=&quot;annotatedelement#getAnnotationsByType-java.lang.Class-&quot;&gt; &lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;annotatedelement#getDeclaredAnnotationsByType-java.lang.Class-&quot;&gt; &lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt;メソッドは、要素上で同じタイプの複数の注釈をサポートします。いずれかのメソッドへの引数が繰り返し可能なアノテーションタイプ（JLS 9.6）である場合、メソッドはコンテナアノテーション（JLS 9.7）を「調べ」、存在する場合はコンテナアノテーションを返します。コンテナアノテーションは、コンパイル時に引数型の複数のアノテーションをラップするために生成される場合があります。</target>
        </trans-unit>
        <trans-unit id="5538279924c592259bec4c32883911ad4ee9986c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asynchronouschannelgroup#shutdown--&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; method is used to initiate an &lt;em&gt;orderly shutdown&lt;/em&gt; of a group. An orderly shutdown marks the group as shutdown; further attempts to construct a channel that binds to the group will throw &lt;a href=&quot;shutdownchannelgroupexception&quot;&gt;&lt;code&gt;ShutdownChannelGroupException&lt;/code&gt;&lt;/a&gt;. Whether or not a group is shutdown can be tested using the &lt;a href=&quot;asynchronouschannelgroup#isShutdown--&quot;&gt;&lt;code&gt;isShutdown&lt;/code&gt;&lt;/a&gt; method. Once shutdown, the group &lt;em&gt;terminates&lt;/em&gt; when all asynchronous channels that are bound to the group are closed, all actively executing completion handlers have run to completion, and resources used by the group are released. No attempt is made to stop or interrupt threads that are executing completion handlers. The &lt;a href=&quot;asynchronouschannelgroup#isTerminated--&quot;&gt;&lt;code&gt;isTerminated&lt;/code&gt;&lt;/a&gt; method is used to test if the group has terminated, and the &lt;a href=&quot;asynchronouschannelgroup#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; method can be used to block until the group has terminated.</source>
          <target state="translated">&lt;a href=&quot;asynchronouschannelgroup#shutdown--&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt;方法を開始するために使用される&lt;em&gt;正常シャットダウン&lt;/em&gt;グループを。通常のシャットダウンは、グループをシャットダウンとしてマークします。グループにバインドするチャネルをさらに構築しようとすると、&lt;a href=&quot;shutdownchannelgroupexception&quot;&gt; &lt;code&gt;ShutdownChannelGroupException&lt;/code&gt; &lt;/a&gt;がスローされます。グループがシャットダウンされているかどうかは、&lt;a href=&quot;asynchronouschannelgroup#isShutdown--&quot;&gt; &lt;code&gt;isShutdown&lt;/code&gt; &lt;/a&gt;メソッドを使用してテストできます。シャットダウンすると、グループの&lt;em&gt;終了は、&lt;/em&gt;グループにバインドされているすべての非同期チャネルが閉じられたときに、すべての実行中のアクティブな完了ハンドラが完了するまで実行しており、グループで使用されるリソースが解放されます。完了ハンドラを実行しているスレッドを停止または中断する試みは行われません。&lt;a href=&quot;asynchronouschannelgroup#isTerminated--&quot;&gt; &lt;code&gt;isTerminated&lt;/code&gt; の&lt;/a&gt;方法は、グループが終了した場合、テストに使用され、&lt;a href=&quot;asynchronouschannelgroup#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;メソッドを使用すると、グループが終了するまでブロックできます。</target>
        </trans-unit>
        <trans-unit id="b514369062ab3b9e80aad31b822e6bf912e55f38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asynchronouschannelgroup#shutdownNow--&quot;&gt;&lt;code&gt;shutdownNow&lt;/code&gt;&lt;/a&gt; method can be used to initiate a &lt;em&gt;forceful shutdown&lt;/em&gt; of the group. In addition to the actions performed by an orderly shutdown, the &lt;code&gt;shutdownNow&lt;/code&gt; method closes all open channels in the group as if by invoking the &lt;a href=&quot;asynchronouschannel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;asynchronouschannelgroup#shutdownNow--&quot;&gt; &lt;code&gt;shutdownNow&lt;/code&gt; のの&lt;/a&gt;方法は、開始するために使用することができる&lt;em&gt;強力なシャットダウン&lt;/em&gt;グループのを。通常のシャットダウンによって実行されるアクションに加えて、 &lt;code&gt;shutdownNow&lt;/code&gt; メソッドは、&lt;a href=&quot;asynchronouschannel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドを呼び出したかのように、グループ内のすべての開いているチャネルを閉じます。</target>
        </trans-unit>
        <trans-unit id="b0ba63e1a3f588adc27a9ff386437373fd12a3c2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asynchronoussocketchannel#read-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asynchronoussocketchannel#write-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods defined by this class allow a timeout to be specified when initiating a read or write operation. If the timeout elapses before an operation completes then the operation completes with the exception &lt;a href=&quot;interruptedbytimeoutexception&quot;&gt;&lt;code&gt;InterruptedByTimeoutException&lt;/code&gt;&lt;/a&gt;. A timeout may leave the channel, or the underlying connection, in an inconsistent state. Where the implementation cannot guarantee that bytes have not been read from the channel then it puts the channel into an implementation specific &lt;em&gt;error state&lt;/em&gt;. A subsequent attempt to initiate a &lt;code&gt;read&lt;/code&gt; operation causes an unspecified runtime exception to be thrown. Similarly if a &lt;code&gt;write&lt;/code&gt; operation times out and the implementation cannot guarantee bytes have not been written to the channel then further attempts to &lt;code&gt;write&lt;/code&gt; to the channel cause an unspecified runtime exception to be thrown. When a timeout elapses then the state of the &lt;a href=&quot;../bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, or the sequence of buffers, for the I/O operation is not defined. Buffers should be discarded or at least care must be taken to ensure that the buffers are not accessed while the channel remains open. All methods that accept timeout parameters treat values less than or equal to zero to mean that the I/O operation does not timeout.</source>
          <target state="translated">&lt;a href=&quot;asynchronoussocketchannel#read-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;asynchronoussocketchannel#write-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;、このクラスで定義されたメソッドは、読み取りまたは書き込み操作を開始するときのタイムアウトを指定することができます。操作が完了する前にタイムアウトが経過すると、操作は例外&lt;a href=&quot;interruptedbytimeoutexception&quot;&gt; &lt;code&gt;InterruptedByTimeoutException&lt;/code&gt; で&lt;/a&gt;完了します。タイムアウトにより、チャネルまたは基礎となる接続が不整合な状態になる場合があります。実装がチャネルからバイトが読み取られていないことを保証できない場合、チャネルは実装固有の&lt;em&gt;エラー状態になり&lt;/em&gt;ます。その後、 &lt;code&gt;read&lt;/code&gt; 操作を開始しようとすると、不特定の実行時例外がスローされます。同様に、 &lt;code&gt;write&lt;/code&gt; 操作がタイムアウトし、実装がバイトがチャネルに書き込まれていないことを保証できない場合、チャネルへの &lt;code&gt;write&lt;/code&gt; をさらに試行すると、不特定のランタイム例外がスローされます。タイムアウトが経過すると、入出力操作の&lt;a href=&quot;../bytebuffer&quot;&gt; &lt;code&gt;ByteBuffer&lt;/code&gt; &lt;/a&gt;の状態または一連のバッファーは定義されません。バッファを破棄するか、少なくともチャネルが開いている間はバッファにアクセスしないように注意する必要があります。タイムアウトパラメータを受け入れるすべてのメソッドは、ゼロ以下の値を処理して、I / O操作がタイムアウトしないことを意味します。</target>
        </trans-unit>
        <trans-unit id="ff23faa6b9710e7149b05774884ffc2d0c84dc55" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;atomicintegerarray&quot;&gt;&lt;code&gt;AtomicIntegerArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;atomiclongarray&quot;&gt;&lt;code&gt;AtomicLongArray&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;atomicreferencearray&quot;&gt;&lt;code&gt;AtomicReferenceArray&lt;/code&gt;&lt;/a&gt; classes further extend atomic operation support to arrays of these types. These classes are also notable in providing &lt;code&gt;volatile&lt;/code&gt; access semantics for their array elements, which is not supported for ordinary arrays.</source>
          <target state="translated">&lt;a href=&quot;atomicintegerarray&quot;&gt; &lt;code&gt;AtomicIntegerArray&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;atomiclongarray&quot;&gt; &lt;code&gt;AtomicLongArray&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;atomicreferencearray&quot;&gt; &lt;code&gt;AtomicReferenceArray&lt;/code&gt; の&lt;/a&gt;クラスはさらに、これらのタイプのアレイにアトミック操作をサポートして延びています。これらのクラスは、それらの配列要素に &lt;code&gt;volatile&lt;/code&gt; アクセスセマンティクスを提供する点でも注目に値しますが、これは通常の配列ではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="7021ba930ee249423077383cf0109781f9028e26" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;atomicintegerarray&quot;&gt;&lt;code&gt;AtomicIntegerArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;atomiclongarray&quot;&gt;&lt;code&gt;AtomicLongArray&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;atomicreferencearray&quot;&gt;&lt;code&gt;AtomicReferenceArray&lt;/code&gt;&lt;/a&gt; classes further extend atomic operation support to arrays of these types. These classes are also notable in providing &lt;code&gt;volatile&lt;/code&gt; access semantics for their array elements.</source>
          <target state="translated">&lt;a href=&quot;atomicintegerarray&quot;&gt; &lt;code&gt;AtomicIntegerArray&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;atomiclongarray&quot;&gt; &lt;code&gt;AtomicLongArray&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;atomicreferencearray&quot;&gt; &lt;code&gt;AtomicReferenceArray&lt;/code&gt; の&lt;/a&gt;クラスはさらに、これらのタイプのアレイにアトミック操作をサポートして延びています。これらのクラスは、配列要素に &lt;code&gt;volatile&lt;/code&gt; アクセスセマンティクスを提供する点でも注目に値します。</target>
        </trans-unit>
        <trans-unit id="154013ac578d40011c0e881853d2d1cf4c7084e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;atomicmarkablereference&quot;&gt;&lt;code&gt;AtomicMarkableReference&lt;/code&gt;&lt;/a&gt; class associates a single boolean with a reference. For example, this bit might be used inside a data structure to mean that the object being referenced has logically been deleted. The &lt;a href=&quot;atomicstampedreference&quot;&gt;&lt;code&gt;AtomicStampedReference&lt;/code&gt;&lt;/a&gt; class associates an integer value with a reference. This may be used for example, to represent version numbers corresponding to series of updates.</source>
          <target state="translated">&lt;a href=&quot;atomicmarkablereference&quot;&gt; &lt;code&gt;AtomicMarkableReference&lt;/code&gt; の&lt;/a&gt;クラスは参照して、単一のブール値を関連付けます。たとえば、このビットはデータ構造内で使用され、参照されているオブジェクトが論理的に削除されたことを意味します。&lt;a href=&quot;atomicstampedreference&quot;&gt; &lt;code&gt;AtomicStampedReference&lt;/code&gt; の&lt;/a&gt;クラスは、参照して整数値を関連付けます。これは、たとえば、一連の更新に対応するバージョン番号を表すために使用できます。</target>
        </trans-unit>
        <trans-unit id="4e0bb33867e93c786974aecb9c28853d1fb48aa1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; is required to be supported and therefore the set contains at least one element, &quot;basic&quot;.</source>
          <target state="translated">&lt;a href=&quot;attribute/basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; を&lt;/a&gt;サポートするために必要なので、セットには、「基本」、少なくとも1つの元素を含んでいます。</target>
        </trans-unit>
        <trans-unit id="42fec1b7f85b596fee4ca045a99c27b6e05ae27f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;attribute/package-summary&quot;&gt;&lt;code&gt;javax.print.attribute&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;attribute/standard/package-summary&quot;&gt;&lt;code&gt;javax.print.attribute.standard&lt;/code&gt;&lt;/a&gt; packages define print attributes, which describe the capabilities of a print service, specify the requirements of a print job, and track the progress of a print job.</source>
          <target state="translated">&lt;a href=&quot;attribute/package-summary&quot;&gt; &lt;code&gt;javax.print.attribute&lt;/code&gt; の&lt;/a&gt;と&lt;a href=&quot;attribute/standard/package-summary&quot;&gt; &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; の&lt;/a&gt;パッケージは、印刷ジョブの要件を指定して、プリントサービスの機能について説明した印刷属性を、定義、および印刷ジョブの進捗状況を追跡します。</target>
        </trans-unit>
        <trans-unit id="1bec0e906f3a1df2a6a9ba13ac4e098e5f62af15" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;AudioSystem&lt;/code&gt;&lt;/a&gt; class includes methods for determining the format of an audio file, obtaining an audio input stream from an audio file, and writing an audio file from an audio input stream.</source>
          <target state="translated">&lt;a href=&quot;audiosystem&quot;&gt; &lt;code&gt;AudioSystem&lt;/code&gt; &lt;/a&gt;クラスは、オーディオファイルからのオーディオ入力ストリームを取得し、オーディオファイルのフォーマットを決定するための方法を含み、オーディオ入力ストリームからオーディオファイルを書き込みます。</target>
        </trans-unit>
        <trans-unit id="5ac6194267d0e25c2097930b8f5fbaf32e490bf5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; class defines methods to read and update a &lt;em&gt;basic&lt;/em&gt; set of file attributes that are common to many file systems.</source>
          <target state="translated">&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;読んで、更新するクラスを定義する方法&lt;em&gt;の基本的な&lt;/em&gt;多くのファイルシステムに共通しているファイル属性のセットを。</target>
        </trans-unit>
        <trans-unit id="9008207e38a099728a1e599c9fd10ddfa22dae76" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;bigdecimal#toEngineeringString--&quot;&gt;&lt;code&gt;toEngineeringString()&lt;/code&gt;&lt;/a&gt; method may be used for presenting numbers with exponents in engineering notation, and the &lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt;&lt;code&gt;setScale&lt;/code&gt;&lt;/a&gt; method may be used for rounding a &lt;code&gt;BigDecimal&lt;/code&gt; so it has a known number of digits after the decimal point.</source>
          <target state="translated">&lt;a href=&quot;bigdecimal#toEngineeringString--&quot;&gt; &lt;code&gt;toEngineeringString()&lt;/code&gt; &lt;/a&gt;メソッドは、工学表記で指数と番号を提示するために使用することができる、および&lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt; &lt;code&gt;setScale&lt;/code&gt; の&lt;/a&gt;方法は、丸めのために使用することができる &lt;code&gt;BigDecimal&lt;/code&gt; 、それが小数点の後の桁の既知数を持つように。</target>
        </trans-unit>
        <trans-unit id="e2929b7aad495e34766a177c1e114f9cc3750748" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;blockingdeque&quot;&gt;&lt;code&gt;BlockingDeque&lt;/code&gt;&lt;/a&gt; interface extends &lt;code&gt;BlockingQueue&lt;/code&gt; to support both FIFO and LIFO (stack-based) operations. Class &lt;a href=&quot;linkedblockingdeque&quot;&gt;&lt;code&gt;LinkedBlockingDeque&lt;/code&gt;&lt;/a&gt; provides an implementation.</source>
          <target state="translated">&lt;a href=&quot;blockingdeque&quot;&gt; &lt;code&gt;BlockingDeque&lt;/code&gt; &lt;/a&gt;インタフェースは延び &lt;code&gt;BlockingQueue&lt;/code&gt; のが両方FIFOとLIFO（スタックベース）操作をサポートします。クラス&lt;a href=&quot;linkedblockingdeque&quot;&gt; &lt;code&gt;LinkedBlockingDeque&lt;/code&gt; &lt;/a&gt;は実装を提供します。</target>
        </trans-unit>
        <trans-unit id="b2fd22bc1464c414a0571863354563eb9bb6d8fd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;calendar#HOUR_OF_DAY&quot;&gt;&lt;code&gt;HOUR_OF_DAY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;calendar#HOUR&quot;&gt;&lt;code&gt;HOUR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#AM_PM&quot;&gt;&lt;code&gt;AM_PM&lt;/code&gt;&lt;/a&gt; fields are handled independently and the &lt;a href=&quot;#time_resolution&quot;&gt;the resolution rule for the time of day&lt;/a&gt; is applied. Clearing one of the fields doesn't reset the hour of day value of this &lt;code&gt;Calendar&lt;/code&gt;. Use &lt;a href=&quot;calendar#set-int-int-&quot;&gt;&lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt;&lt;/a&gt; to reset the hour value.</source>
          <target state="translated">&lt;a href=&quot;calendar#HOUR_OF_DAY&quot;&gt; &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;calendar#HOUR&quot;&gt; &lt;code&gt;HOUR&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;calendar#AM_PM&quot;&gt; &lt;code&gt;AM_PM&lt;/code&gt; &lt;/a&gt;フィールドは、独立して処理され、&lt;a href=&quot;#time_resolution&quot;&gt;その日の時間分解能のルールが&lt;/a&gt;適用されます。いずれかのフィールドをクリアしても、この &lt;code&gt;Calendar&lt;/code&gt; 時間の値はリセットされません。時間の値をリセットするには&lt;a href=&quot;calendar#set-int-int-&quot;&gt; &lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="f04591de46efc6d10158813651253c9ef9e12e5d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;certpathbuilder#getRevocationChecker--&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathBuilder&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">&lt;a href=&quot;certpathbuilder#getRevocationChecker--&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt;メソッドは、アプリケーションにより使用される追加のアルゴリズム固有のパラメータとオプションを指定することを可能に &lt;code&gt;CertPathBuilder&lt;/code&gt; 証明書の失効ステータスをチェックするときに。これは、PKIXアルゴリズムでどのように使用されるかを示す例です。</target>
        </trans-unit>
        <trans-unit id="c2fe006c42d37a0e6b495c7077cf3ce1bbd6e97e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;certpathvalidator#getRevocationChecker--&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathValidator&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">&lt;a href=&quot;certpathvalidator#getRevocationChecker--&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt;メソッドは、アプリケーションにより使用される追加のアルゴリズム固有のパラメータとオプションを指定することを可能に &lt;code&gt;CertPathValidator&lt;/code&gt; 証明書の失効ステータスをチェックするときに。これは、PKIXアルゴリズムでどのように使用されるかを示す例です。</target>
        </trans-unit>
        <trans-unit id="353391e89ff7caccf4fa0ecf1b6ada580292d90f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; interface is extended by several other interfaces.</source>
          <target state="translated">&lt;a href=&quot;channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt;インターフェースは、いくつかの他のインタフェースによって拡張されます。</target>
        </trans-unit>
        <trans-unit id="12b29184356586926a8d665851524b8f725c12e2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;channels&quot;&gt;&lt;code&gt;Channels&lt;/code&gt;&lt;/a&gt; utility class defines static methods that support the interoperation of the stream classes of the &lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt; package with the channel classes of this package. An appropriate channel can be constructed from an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt;, and conversely an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt; can be constructed from a channel. A &lt;a href=&quot;../../io/reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to decode bytes from a given readable byte channel, and conversely a &lt;a href=&quot;../../io/writer&quot;&gt;&lt;code&gt;Writer&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to encode characters into bytes and write them to a given writable byte channel.</source>
          <target state="translated">&lt;a href=&quot;channels&quot;&gt; &lt;code&gt;Channels&lt;/code&gt; &lt;/a&gt;ユーティリティクラスは、ストリームクラスの相互運用サポートする静的メソッド定義&lt;a href=&quot;../../io/package-summary&quot;&gt; &lt;code&gt;java.io&lt;/code&gt; &lt;/a&gt;このパッケージのチャネルクラスとパッケージを。適切なチャネルは、&lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;から構築でき、逆に、&lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;はチャネルから構築できます。特定の文字セットを使用して特定の読み取り可能なバイトチャネルからバイトをデコードする&lt;a href=&quot;../../io/reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt;を構築でき、逆に、特定の文字セットを使用して文字をバイトにエンコードし、特定の書き込み可能なバイトチャネルに書き込む&lt;a href=&quot;../../io/writer&quot;&gt; &lt;code&gt;Writer&lt;/code&gt; &lt;/a&gt;を構築できます。</target>
        </trans-unit>
        <trans-unit id="13bd1e29b4330451ff38da9cb77e5dbd6672f0ec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;channels&quot;&gt;&lt;code&gt;Channels&lt;/code&gt;&lt;/a&gt; utility class defines static methods that support the interoperation of the stream classes of the &lt;code&gt;&lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; package with the channel classes of this package. An appropriate channel can be constructed from an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt;, and conversely an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt; can be constructed from a channel. A &lt;a href=&quot;../../io/reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to decode bytes from a given readable byte channel, and conversely a &lt;a href=&quot;../../io/writer&quot;&gt;&lt;code&gt;Writer&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to encode characters into bytes and write them to a given writable byte channel.</source>
          <target state="translated">&lt;a href=&quot;channels&quot;&gt; &lt;code&gt;Channels&lt;/code&gt; &lt;/a&gt;ユーティリティクラスは、ストリームクラスの相互運用サポートする静的メソッド定義 &lt;code&gt;&lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; このパッケージのチャネルクラスとパッケージを。&lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;から適切なチャネルを構築でき、逆に、チャネルから&lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;を構築できます。特定の文字セットを使用して特定の読み取り可能なバイトチャネルからバイトをデコードする&lt;a href=&quot;../../io/reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt;を構築できます。逆に、特定の文字セットを使用して文字をバイトにエンコードし、特定の書き込み可能なバイトチャネルに書き込む&lt;a href=&quot;../../io/writer&quot;&gt; &lt;code&gt;Writer&lt;/code&gt; &lt;/a&gt;を構築できます。</target>
        </trans-unit>
        <trans-unit id="0f057642b4bb486cc33d79cbc367d51cb24e2bda" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; class defines methods for creating coders for a given charset and for retrieving the various names associated with a charset. It also defines static methods for testing whether a particular charset is supported, for locating charset instances by name, and for constructing a map that contains every charset for which support is available in the current Java virtual machine.</source>
          <target state="translated">&lt;a href=&quot;charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;クラスは、指定された文字セットおよび文字セットに関連付けられたさまざまな名前を取得するためのコーダを作成するための方法を定義します。また、特定の文字セットがサポートされているかどうかをテストしたり、文字セットインスタンスを名前で検索したり、現在のJava仮想マシンでサポートされているすべての文字セットを含むマップを作成したりするための静的メソッドも定義します。</target>
        </trans-unit>
        <trans-unit id="26b62da2bb56725ff2decf8f098a1aafbd9d9b2c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;classloader#builtinLoaders&quot;&gt;builtin class loaders&lt;/a&gt; do not explicitly define &lt;code&gt;Package&lt;/code&gt; objects for packages in &lt;em&gt;named modules&lt;/em&gt;. Instead those packages are automatically defined and have no specification and implementation versioning information.</source>
          <target state="translated">&lt;a href=&quot;classloader#builtinLoaders&quot;&gt;組み込みクラスローダーは&lt;/a&gt;、明示的に定義しない &lt;code&gt;Package&lt;/code&gt; 内のパッケージのためのオブジェクトを&lt;em&gt;命名モジュール&lt;/em&gt;。代わりに、これらのパッケージは自動的に定義され、仕様および実装のバージョン情報はありません。</target>
        </trans-unit>
        <trans-unit id="a67cff32a8cc7c58f69e3c11acfe781fdb3c37d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;concurrentlinkedqueue&quot;&gt;&lt;code&gt;ConcurrentLinkedQueue&lt;/code&gt;&lt;/a&gt; class supplies an efficient scalable thread-safe non-blocking FIFO queue. The &lt;a href=&quot;concurrentlinkeddeque&quot;&gt;&lt;code&gt;ConcurrentLinkedDeque&lt;/code&gt;&lt;/a&gt; class is similar, but additionally supports the &lt;a href=&quot;../deque&quot;&gt;&lt;code&gt;Deque&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;concurrentlinkedqueue&quot;&gt; &lt;code&gt;ConcurrentLinkedQueue&lt;/code&gt; &lt;/a&gt;クラスの供給効率的なスケーラブルなスレッドセーフの非ブロッキングFIFOキュー。&lt;a href=&quot;concurrentlinkeddeque&quot;&gt; &lt;code&gt;ConcurrentLinkedDeque&lt;/code&gt; &lt;/a&gt;クラスは似ていますが、さらにサポートされてい&lt;a href=&quot;../deque&quot;&gt; &lt;code&gt;Deque&lt;/code&gt; &lt;/a&gt;インタフェースを。</target>
        </trans-unit>
        <trans-unit id="8f05e709096b93b1da433f74acd77bc05bb25621" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; interface describes condition variables that may be associated with Locks. These are similar in usage to the implicit monitors accessed using &lt;code&gt;Object.wait&lt;/code&gt;, but offer extended capabilities. In particular, multiple &lt;code&gt;Condition&lt;/code&gt; objects may be associated with a single &lt;code&gt;Lock&lt;/code&gt;. To avoid compatibility issues, the names of &lt;code&gt;Condition&lt;/code&gt; methods are different from the corresponding &lt;code&gt;Object&lt;/code&gt; versions.</source>
          <target state="translated">&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;インターフェースは、ロックに関連してもよい状態変数について説明します。これらは、 &lt;code&gt;Object.wait&lt;/code&gt; を使用してアクセスされる暗黙のモニターと使い方が似ていますが、拡張機能を提供します。特に、複数の &lt;code&gt;Condition&lt;/code&gt; オブジェクトを1つの &lt;code&gt;Lock&lt;/code&gt; に関連付けることができます。互換性の問題を回避するために、 &lt;code&gt;Condition&lt;/code&gt; メソッドの名前は、対応する &lt;code&gt;Object&lt;/code&gt; のバージョンとは異なります。</target>
        </trans-unit>
        <trans-unit id="9e8041c88b3dcafc9b4f4c5eb63f4ac4c547288c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e9dd68445d5385bb05545d5acae99f43bf46af4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd9235cbf846fb05154c7fff0a0c527bea890016" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_LOCAL_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#ISO_LOCAL_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6aeff022cca7462b1d24d181862f8642f26d64d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75e1a69d924196bb7f31b2df6ac058a6b61c95bc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt; where the instant is converted from &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;UTC&lt;/code&gt; offset. Parsing is case insensitive.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;瞬間をから変換され&lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt; &lt;/a&gt;使用して &lt;code&gt;UTC&lt;/code&gt; オフセットを。解析では大文字と小文字が区別されません。</target>
        </trans-unit>
        <trans-unit id="7bbd020b4b15b4b357c33b60139663bc5ab3a2b4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt;&lt;code&gt;withChronology&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the chronology. If overridden, the date-time value is converted to the chronology before formatting. During parsing the date-time value is converted to the chronology before it is returned.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt; &lt;code&gt;withChronology&lt;/code&gt; の&lt;/a&gt;方法は、年表をオーバーライドする新しいフォーマッタを返します。オーバーライドされた場合、日時の値はフォーマットの前に年代順に変換されます。解析中に、日付時刻値は日付に変換されてから返されます。</target>
        </trans-unit>
        <trans-unit id="c2be0f0e5c7bfb256821fc337fa24120b0dbdc22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withDecimalStyle-java.time.format.DecimalStyle-&quot;&gt;&lt;code&gt;withDecimalStyle&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the &lt;a href=&quot;decimalstyle&quot;&gt;&lt;code&gt;DecimalStyle&lt;/code&gt;&lt;/a&gt;. The DecimalStyle symbols are used for formatting and parsing.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#withDecimalStyle-java.time.format.DecimalStyle-&quot;&gt; &lt;code&gt;withDecimalStyle&lt;/code&gt; の&lt;/a&gt;方法が優先されます新しいフォーマッタを返し&lt;a href=&quot;decimalstyle&quot;&gt; &lt;code&gt;DecimalStyle&lt;/code&gt; を&lt;/a&gt;。DecimalStyleシンボルは、フォーマットと解析に使用されます。</target>
        </trans-unit>
        <trans-unit id="65e1e451917eff1d1ca40b8cd181f08037d85fa5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt;&lt;code&gt;withLocale&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the locale. The locale affects some aspects of formatting and parsing. For example, the &lt;a href=&quot;datetimeformatter#ofLocalizedDate-java.time.format.FormatStyle-&quot;&gt;&lt;code&gt;ofLocalizedDate&lt;/code&gt;&lt;/a&gt; provides a formatter that uses the locale specific date format.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt; &lt;code&gt;withLocale&lt;/code&gt; の&lt;/a&gt;方法は、ロケールをオーバーライドする新しいフォーマッタを返します。ロケールは、フォーマットと解析のいくつかの側面に影響します。たとえば、&lt;a href=&quot;datetimeformatter#ofLocalizedDate-java.time.format.FormatStyle-&quot;&gt; &lt;code&gt;ofLocalizedDate&lt;/code&gt; &lt;/a&gt;は、ロケール固有の日付形式を使用するフォーマッターを提供します。</target>
        </trans-unit>
        <trans-unit id="ac11e4705d1cea60755dd413e0d7e05004a9574f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withResolverFields-java.time.temporal.TemporalField...-&quot;&gt;&lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt;&lt;/a&gt; parameter allows the set of fields that will be resolved to be filtered before resolving starts. For example, if the formatter has parsed a year, month, day-of-month and day-of-year, then there are two approaches to resolve a date: (year + month + day-of-month) and (year + day-of-year). The resolver fields allows one of the two approaches to be selected. If no resolver fields are set then both approaches must result in the same date.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#withResolverFields-java.time.temporal.TemporalField...-&quot;&gt; &lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt; &lt;/a&gt;パラメータは、開始を解決する前に濾過されるように解決されるフィールドのセットすることができます。たとえば、フォーマッタが年、月、日、年の日付を解析した場合、日付を解決するには、（年+月+日）と（年+年の日）。リゾルバーフィールドでは、2つのアプローチのいずれかを選択できます。リゾルバーフィールドが設定されていない場合は、両方のアプローチで同じ日付にする必要があります。</target>
        </trans-unit>
        <trans-unit id="c56041ee24c2e62e6514b35eb7cc04f16f5b0ac1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withZone-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZone&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the zone. If overridden, the date-time value is converted to a ZonedDateTime with the requested ZoneId before formatting. During parsing the ZoneId is applied before the value is returned.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#withZone-java.time.ZoneId-&quot;&gt; &lt;code&gt;withZone&lt;/code&gt; の&lt;/a&gt;方法は、ゾーンをオーバーライドする新しいフォーマッタを返します。オーバーライドされた場合、日時の値は、フォーマットする前に、要求されたZoneIdを使用してZonedDateTimeに変換されます。解析中、ZoneIdは値が返される前に適用されます。</target>
        </trans-unit>
        <trans-unit id="cd859580f99613136d80c7938719b23f4da700bc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt; for all of the &lt;code&gt;MBeanAttributeInfo&lt;/code&gt;, &lt;code&gt;MBeanParameterInfo&lt;/code&gt;, and &lt;code&gt;MBeanOperationInfo&lt;/code&gt; objects contained in the &lt;code&gt;MBeanInfo&lt;/code&gt; will have a field &lt;code&gt;openType&lt;/code&gt; whose value is the &lt;a href=&quot;openmbean/opentype&quot;&gt;&lt;code&gt;OpenType&lt;/code&gt;&lt;/a&gt; specified by the mapping rules above. So even when &lt;code&gt;getType()&lt;/code&gt; is &quot;&lt;code&gt;int&lt;/code&gt;&quot;, &lt;code&gt;getDescriptor().getField(&quot;openType&quot;)&lt;/code&gt; will be &lt;a href=&quot;openmbean/simpletype#INTEGER&quot;&gt;&lt;code&gt;SimpleType.INTEGER&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt;の全てのため &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; 、 &lt;code&gt;MBeanParameterInfo&lt;/code&gt; と &lt;code&gt;MBeanOperationInfo&lt;/code&gt; に含まれるオブジェクト &lt;code&gt;MBeanInfo&lt;/code&gt; フィールドがあります &lt;code&gt;openType&lt;/code&gt; その値で&lt;a href=&quot;openmbean/opentype&quot;&gt; &lt;code&gt;OpenType&lt;/code&gt; &lt;/a&gt;上記マッピング規則で指定します。したがって、 &lt;code&gt;getType()&lt;/code&gt; が「 &lt;code&gt;int&lt;/code&gt; 」の場合でも、 &lt;code&gt;getDescriptor().getField(&quot;openType&quot;)&lt;/code&gt; は&lt;a href=&quot;openmbean/simpletype#INTEGER&quot;&gt; &lt;code&gt;SimpleType.INTEGER&lt;/code&gt; になり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="83d652f00d8a04827d939d634a6f87310e7e3196" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;docflavor&quot;&gt;&lt;code&gt;DocFlavor&lt;/code&gt;&lt;/a&gt; class represents the print data format, such as JPEG or PostScript. A &lt;code&gt;DocFlavor&lt;/code&gt; object consists of a MIME type, which describes the format, and a document representation class name that indicates how the document is delivered to the printer or output stream. An application uses the &lt;code&gt;DocFlavor&lt;/code&gt; and an attribute set to find printers that can print the document type specified by the &lt;code&gt;DocFlavor&lt;/code&gt; and have the capabilities specified by the attribute set.</source>
          <target state="translated">&lt;a href=&quot;docflavor&quot;&gt; &lt;code&gt;DocFlavor&lt;/code&gt; の&lt;/a&gt;クラスは、JPEGやPostScriptのように、印刷データ形式を表します。 &lt;code&gt;DocFlavor&lt;/code&gt; のオブジェクトの形式を記述するMIMEタイプ、及びドキュメントをプリンタまたは出力ストリームに配信されるかを示すドキュメント表現クラス名で構成されています。アプリケーションが使用し &lt;code&gt;DocFlavor&lt;/code&gt; によって指定されたドキュメントタイプ印刷できるプリンタを見つけるために、属性セットを &lt;code&gt;DocFlavor&lt;/code&gt; のを、属性セットに指定された機能を持っています。</target>
        </trans-unit>
        <trans-unit id="0513df95d4bb865252722a8d8255694866eed6fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;domlocator&quot;&gt;&lt;code&gt;DOMLocator&lt;/code&gt;&lt;/a&gt; node may be passed to &lt;a href=&quot;../transformerexception&quot;&gt;&lt;code&gt;TransformerException&lt;/code&gt;&lt;/a&gt; objects, and retrieved by trying to cast the result of the &lt;a href=&quot;../transformerexception#getLocator()&quot;&gt;&lt;code&gt;TransformerException.getLocator()&lt;/code&gt;&lt;/a&gt; method. The implementation has no responsibility to use a DOMLocator instead of a &lt;a href=&quot;../sourcelocator&quot;&gt;&lt;code&gt;SourceLocator&lt;/code&gt;&lt;/a&gt; (though line numbers and the like do not make much sense for a DOM), so the result of getLocator must always be tested with an instanceof.</source>
          <target state="translated">&lt;a href=&quot;domlocator&quot;&gt; &lt;code&gt;DOMLocator&lt;/code&gt; の&lt;/a&gt;ノードが渡されてもよい&lt;a href=&quot;../transformerexception&quot;&gt; &lt;code&gt;TransformerException&lt;/code&gt; の&lt;/a&gt;オブジェクト、および結果キャストしようとすることによって取得&lt;a href=&quot;../transformerexception#getLocator()&quot;&gt; &lt;code&gt;TransformerException.getLocator()&lt;/code&gt; &lt;/a&gt;メソッドを。実装は、&lt;a href=&quot;../sourcelocator&quot;&gt; &lt;code&gt;SourceLocator&lt;/code&gt; の&lt;/a&gt;代わりにDOMLocatorを使用する責任を負いません（ただし、行番号などはDOMにはあまり意味がありません）。したがって、getLocatorの結果は常にinstanceofでテストする必要があります。</target>
        </trans-unit>
        <trans-unit id="1b6ef39fe04c1b93a69d3237b32d9c958a683847" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;domresult&quot;&gt;&lt;code&gt;DOMResult&lt;/code&gt;&lt;/a&gt; class allows a &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; to be specified to which result DOM nodes will be appended. If an output node is not specified, the transformer will use &lt;a href=&quot;../../parsers/documentbuilder#newDocument()&quot;&gt;&lt;code&gt;DocumentBuilder.newDocument()&lt;/code&gt;&lt;/a&gt; to create an output &lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; node. If a node is specified, it should be one of the following: &lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../../org/w3c/dom/element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../../../org/w3c/dom/documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt;. Specification of any other node type is implementation dependent and undefined by this API. If the result is a &lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, the output of the transformation must have a single element root to set as the document element.</source>
          <target state="translated">&lt;a href=&quot;domresult&quot;&gt; &lt;code&gt;DOMResult&lt;/code&gt; の&lt;/a&gt;クラスができ&lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;結果のDOMノードが追加されると指定します。出力ノードが指定されていない場合、トランスフォーマーは&lt;a href=&quot;../../parsers/documentbuilder#newDocument()&quot;&gt; &lt;code&gt;DocumentBuilder.newDocument()&lt;/code&gt; &lt;/a&gt;を使用して出力&lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;ノードを作成します。ノードを指定する場合は、&lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../../org/w3c/dom/element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;../../../../org/w3c/dom/documentfragment&quot;&gt; &lt;code&gt;DocumentFragment&lt;/code&gt; の&lt;/a&gt;いずれかである必要があります。他のノードタイプの仕様は実装に依存し、このAPIでは定義されていません。結果が&lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;場合、トランスフォーメーションの出力には、ドキュメント要素として設定する単一の要素ルートが必要です。</target>
        </trans-unit>
        <trans-unit id="59b5c96271b6b21c6c835702a2a5b8f3209ac347" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;domsource&quot;&gt;&lt;code&gt;DOMSource&lt;/code&gt;&lt;/a&gt; class allows the client of the implementation of this API to specify a DOM &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; as the source of the input tree. The model of how the Transformer deals with the DOM tree in terms of mismatches with the &lt;a href=&quot;http://www.w3.org/TR/xslt#data-model&quot;&gt;XSLT data model&lt;/a&gt; or other data models is beyond the scope of this document. Any of the nodes derived from &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; are legal input.</source>
          <target state="translated">&lt;a href=&quot;domsource&quot;&gt; &lt;code&gt;DOMSource&lt;/code&gt; の&lt;/a&gt;クラスは、このAPIの実装のクライアントは、DOMを指定することを可能にする&lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;入力ツリーのソースとして。&lt;a href=&quot;http://www.w3.org/TR/xslt#data-model&quot;&gt;XSLTデータモデル&lt;/a&gt;または他のデータモデルとの不一致に関して、TransformerがDOMツリーを処理する方法のモデルは、このドキュメントの範囲を超えています。&lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;から派生したノードはすべて正当な入力です。</target>
        </trans-unit>
        <trans-unit id="4a2a33b021a508069e12369db4ed8235c23dd820" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;dosfileattributeview&quot;&gt;&lt;code&gt;DosFileAttributeView&lt;/code&gt;&lt;/a&gt; class extends &lt;code&gt;BasicFileAttributeView&lt;/code&gt; by defining methods to access the legacy &quot;DOS&quot; file attributes supported on file systems such as File Allocation Tabl (FAT), commonly used in consumer devices.</source>
          <target state="translated">&lt;a href=&quot;dosfileattributeview&quot;&gt; &lt;code&gt;DosFileAttributeView&lt;/code&gt; の&lt;/a&gt;クラスを拡張し &lt;code&gt;BasicFileAttributeView&lt;/code&gt; を「DOS」ファイルは、一般的に民生機器に使用されるそのようなファイルアロケーションTABL（FAT）などのファイル・システム上でサポートされる属性レガシーにアクセスするためのメソッドを定義することによって。</target>
        </trans-unit>
        <trans-unit id="7ab5e9ce6e03076464956d6cf8e9e21635c83e58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class contains utility methods to convert from other common forms to &lt;code&gt;Callable&lt;/code&gt; classes.</source>
          <target state="translated">&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;クラスはに他の一般的な形式へ変換するユーティリティメソッドが含まれている &lt;code&gt;Callable&lt;/code&gt; なクラス。</target>
        </trans-unit>
        <trans-unit id="8883df3bd964eac1086fd88dfe3a79b6d06f9e71" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class provides convenient factory methods for the ScheduledExecutorService implementations provided in this package.</source>
          <target state="translated">&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;クラスは、このパッケージで提供されるScheduledExecutorService実装するための便利なファクトリメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="e042e1e41822ebb3dc29ae27670b8475a6541a52" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class provides factory methods for the executor services provided in this package.</source>
          <target state="translated">&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;クラスは、このパッケージで提供さキュータのサービスのためのファクトリメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="2310b091914d7e1f782b2d472dcaf0ac025a8afd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors#defaultThreadFactory()&quot;&gt;&lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt;&lt;/a&gt; method provides a more useful simple implementation, that sets the created thread context to known values before returning it.</source>
          <target state="translated">&lt;a href=&quot;executors#defaultThreadFactory()&quot;&gt; &lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt; &lt;/a&gt;メソッドは、それを返す前に既知の値に作成されたスレッドのコンテキストを設定し、より有用な簡単な実装を提供します。</target>
        </trans-unit>
        <trans-unit id="89123dab0161f270435efa4f546d779073bf8797" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors#defaultThreadFactory--&quot;&gt;&lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt;&lt;/a&gt; method provides a more useful simple implementation, that sets the created thread context to known values before returning it.</source>
          <target state="translated">&lt;a href=&quot;executors#defaultThreadFactory--&quot;&gt; &lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt; &lt;/a&gt;メソッドは、それを返す前に既知の値に作成されたスレッドのコンテキストを設定し、より有用な簡単な実装を提供します。</target>
        </trans-unit>
        <trans-unit id="5340eb811bb6c4f04eac908f1a47f6cb848e143e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;featuredescriptor#getShortDescription()&quot;&gt;&lt;code&gt;short description&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;beaninfo#getBeanDescriptor()&quot;&gt;&lt;code&gt;bean descriptor&lt;/code&gt;&lt;/a&gt; of the annotated class.</source>
          <target state="translated">&lt;a href=&quot;featuredescriptor#getShortDescription()&quot;&gt; &lt;code&gt;short description&lt;/code&gt; &lt;/a&gt;のための&lt;a href=&quot;beaninfo#getBeanDescriptor()&quot;&gt; &lt;code&gt;bean descriptor&lt;/code&gt; &lt;/a&gt;注釈付きクラスの。</target>
        </trans-unit>
        <trans-unit id="465886a723384dd38a46e42193428a7e1aeabfc9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;featuredescriptor#getShortDescription()&quot;&gt;&lt;code&gt;short description&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;beaninfo#getPropertyDescriptors()&quot;&gt;&lt;code&gt;descriptor&lt;/code&gt;&lt;/a&gt; of the annotated property.</source>
          <target state="translated">&lt;a href=&quot;featuredescriptor#getShortDescription()&quot;&gt; &lt;code&gt;short description&lt;/code&gt; &lt;/a&gt;のための&lt;a href=&quot;beaninfo#getPropertyDescriptors()&quot;&gt; &lt;code&gt;descriptor&lt;/code&gt; &lt;/a&gt;注釈付きプロパティの。</target>
        </trans-unit>
        <trans-unit id="452f568b1f5309f7b11b0f0b96affb2b04cc97db" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;fileattribute&quot;&gt;&lt;code&gt;FileAttribute&lt;/code&gt;&lt;/a&gt; interface represents the value of an attribute for cases where the attribute value is required to be set atomically when creating an object in the file system.</source>
          <target state="translated">&lt;a href=&quot;fileattribute&quot;&gt; &lt;code&gt;FileAttribute&lt;/code&gt; の&lt;/a&gt;インターフェースは、ファイルシステム内のオブジェクトを作成するときに、属性値をアトミックに設定する必要がある場合の属性の値を表します。</target>
        </trans-unit>
        <trans-unit id="44a89ca3f8f23eed63e4ec0b6a8bbaea5d50e095" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class supports the usual operations of reading bytes from, and writing bytes to, a channel connected to a file, as well as those of querying and modifying the current file position and truncating the file to a specific size. It defines methods for acquiring locks on the whole file or on a specific region of a file; these methods return instances of the &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;FileLock&lt;/code&gt;&lt;/a&gt; class. Finally, it defines methods for forcing updates to the file to be written to the storage device that contains it, for efficiently transferring bytes between the file and other channels, and for mapping a region of the file directly into memory.</source>
          <target state="translated">&lt;a href=&quot;filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt;、ファイルに接続されたチャネル、並びに照会及び現在のファイル位置を変更し、特定のサイズのファイルを切り捨てるのものなどをクラスからバイトを読み出す通常の動作をサポートし、書き込みがバイト。ファイル全体またはファイルの特定の領域のロックを取得するためのメソッドを定義します。これらのメソッドは、&lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;FileLock&lt;/code&gt; &lt;/a&gt;クラスのインスタンスを返します。最後に、ファイルの更新を、それを含むストレージデバイスに強制的に書き込む方法、ファイルと他のチャネル間でバイトを効率的に転送する方法、およびファイルの領域を直接メモリにマッピングする方法を定義します。</target>
        </trans-unit>
        <trans-unit id="7eca07bd746a1861a27802a596cf1b4a71de4344" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods may be used to read or update the owner of the file.</source>
          <target state="translated">&lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; メソッド&lt;/a&gt;または&lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;方法は、読み取りまたはファイルの所有者を更新するために使用されてもよいです。</target>
        </trans-unit>
        <trans-unit id="73d3f705da9ee89357307dce73865b84f0d0035f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filer&quot;&gt;&lt;code&gt;Filer&lt;/code&gt;&lt;/a&gt; interface discusses restrictions on how processors can operate on files.</source>
          <target state="translated">&lt;a href=&quot;filer&quot;&gt; &lt;code&gt;Filer&lt;/code&gt; &lt;/a&gt;インタフェースは、プロセッサがファイルを操作する方法の制限について説明します。</target>
        </trans-unit>
        <trans-unit id="ec58fefa4089af5e49bf486507980bb4e39cbe29" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filestore#supportsFileAttributeView(java.lang.String)&quot;&gt;&lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt;&lt;/a&gt; method may be used to test if an underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the file attributes identified by a file attribute view.</source>
          <target state="translated">&lt;a href=&quot;filestore#supportsFileAttributeView(java.lang.String)&quot;&gt; &lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt; を&lt;/a&gt;基本となる場合の方法は、テストに使用できる&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt;、ファイル属性ビューで識別されるファイル属性をサポートしています。</target>
        </trans-unit>
        <trans-unit id="b4b3f7c632fcbbe9935cc6379723468392ffc252" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filestore#supportsFileAttributeView-java.lang.String-&quot;&gt;&lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt;&lt;/a&gt; method may be used to test if an underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the file attributes identified by a file attribute view.</source>
          <target state="translated">&lt;a href=&quot;filestore#supportsFileAttributeView-java.lang.String-&quot;&gt; &lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt; を&lt;/a&gt;基本となる場合の方法は、テストに使用できる&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt;、ファイル属性ビューで識別されるファイル属性をサポートしています。</target>
        </trans-unit>
        <trans-unit id="f8cb4d9733bf198a655b4589202cc06dace82870" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getFileStores--&quot;&gt;&lt;code&gt;getFileStores&lt;/code&gt;&lt;/a&gt; method returns an iterator over the underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;file-stores&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;filesystem#getFileStores--&quot;&gt; &lt;code&gt;getFileStores&lt;/code&gt; の&lt;/a&gt;方法は、基礎の反復子を返し&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;file-stores&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cfd644bf38b0bb664dee5219ee6298f48860e300" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method converts a system dependent &lt;em&gt;path string&lt;/em&gt;, returning a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; object that may be used to locate and access a file.</source>
          <target state="translated">&lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;方法は、システムに依存する変換&lt;em&gt;パス文字列を&lt;/em&gt;返す、&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;ファイルを見つけてアクセスするために使用することができるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="85bb054fbeaeb496dcbb5f7913fdc2da38a5d8df" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getPathMatcher-java.lang.String-&quot;&gt;&lt;code&gt;getPathMatcher&lt;/code&gt;&lt;/a&gt; method is used to create a &lt;a href=&quot;pathmatcher&quot;&gt;&lt;code&gt;PathMatcher&lt;/code&gt;&lt;/a&gt; that performs match operations on paths.</source>
          <target state="translated">&lt;a href=&quot;filesystem#getPathMatcher-java.lang.String-&quot;&gt; &lt;code&gt;getPathMatcher&lt;/code&gt; &lt;/a&gt;方法を作成するために使用され&lt;a href=&quot;pathmatcher&quot;&gt; &lt;code&gt;PathMatcher&lt;/code&gt; &lt;/a&gt;実行がパス上の操作と一致していることを。</target>
        </trans-unit>
        <trans-unit id="5a69e75d4d560b20f800838bf2f2879aa7b27302" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getUserPrincipalLookupService--&quot;&gt;&lt;code&gt;getUserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt;&lt;code&gt;UserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; to lookup users or groups by name.</source>
          <target state="translated">&lt;a href=&quot;filesystem#getUserPrincipalLookupService--&quot;&gt; &lt;code&gt;getUserPrincipalLookupService&lt;/code&gt; の&lt;/a&gt;方法は返し&lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt; &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; &lt;/a&gt;名前でユーザーまたはグループを検索するために。</target>
        </trans-unit>
        <trans-unit id="6f447288e7932d315836b220e40a38ac2e592a02" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#newWatchService--&quot;&gt;&lt;code&gt;newWatchService&lt;/code&gt;&lt;/a&gt; method creates a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt; that may be used to watch objects for changes and events.</source>
          <target state="translated">&lt;a href=&quot;filesystem#newWatchService--&quot;&gt; &lt;code&gt;newWatchService&lt;/code&gt; の&lt;/a&gt;方法は、作成&lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; &lt;/a&gt;の変更やイベントのためのオブジェクトを監視するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="0df1d883900393179ef6a938286fb977dcd966a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;formatter#format-java.util.Locale-java.lang.String-java.lang.Object...-&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt; method for this object which has a locale argument does not change this value.</source>
          <target state="translated">ロケール引数を持つこのオブジェクトの&lt;a href=&quot;formatter#format-java.util.Locale-java.lang.String-java.lang.Object...-&quot;&gt; &lt;code&gt;format&lt;/code&gt; &lt;/a&gt;メソッドは、この値を変更しません。</target>
        </trans-unit>
        <trans-unit id="e68fc7c4ce0ce129079a142bdf3e6ba5e50c5128" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;futuretask&quot;&gt;&lt;code&gt;FutureTask&lt;/code&gt;&lt;/a&gt; class is an implementation of &lt;code&gt;Future&lt;/code&gt; that implements &lt;code&gt;Runnable&lt;/code&gt;, and so may be executed by an &lt;code&gt;Executor&lt;/code&gt;. For example, the above construction with &lt;code&gt;submit&lt;/code&gt; could be replaced by:</source>
          <target state="translated">&lt;a href=&quot;futuretask&quot;&gt; &lt;code&gt;FutureTask&lt;/code&gt; の&lt;/a&gt;クラスが実装され &lt;code&gt;Future&lt;/code&gt; 実装する &lt;code&gt;Runnable&lt;/code&gt; などにより実行されてもよい &lt;code&gt;Executor&lt;/code&gt; 。たとえば、上記の &lt;code&gt;submit&lt;/code&gt; を使用した構成は、次のように置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="5ba414d1962554d1f8e4567bcf5d7da85351a76c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsconfiguration#getDefaultTransform()&quot;&gt;&lt;code&gt;getDefaultTransform&lt;/code&gt;&lt;/a&gt; for the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; of the &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;graphicsconfiguration#getDefaultTransform()&quot;&gt; &lt;code&gt;getDefaultTransform&lt;/code&gt; &lt;/a&gt;のため &lt;code&gt;GraphicsConfiguration&lt;/code&gt; の &lt;code&gt;Component&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39a8d2a83535770d869eebc4c30cb9198770d41d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSLUCENT&quot;&gt;&lt;code&gt;PERPIXEL_TRANSLUCENT&lt;/code&gt;&lt;/a&gt; translucency must be supported by the graphics device where this window is located</source>
          <target state="translated">&lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSLUCENT&quot;&gt; &lt;code&gt;PERPIXEL_TRANSLUCENT&lt;/code&gt; の&lt;/a&gt;半透明性は、このウィンドウが配置されているグラフィックスデバイスによってサポートされなければなりません</target>
        </trans-unit>
        <trans-unit id="8a9920b2b3bdc4d70beb4a231bc49073bc86e240" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSPARENT&quot;&gt;&lt;code&gt;PERPIXEL_TRANSPARENT&lt;/code&gt;&lt;/a&gt; translucency must be supported by the underlying system</source>
          <target state="translated">&lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSPARENT&quot;&gt; &lt;code&gt;PERPIXEL_TRANSPARENT&lt;/code&gt; の&lt;/a&gt;半透明性は、基盤となるシステムによってサポートされている必要があり</target>
        </trans-unit>
        <trans-unit id="c5d339fa5b74059e5d1ae5610caf66ae89534242" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsdevice.windowtranslucency#TRANSLUCENT&quot;&gt;&lt;code&gt;TRANSLUCENT&lt;/code&gt;&lt;/a&gt; translucency must be supported by the underlying system</source>
          <target state="translated">&lt;a href=&quot;graphicsdevice.windowtranslucency#TRANSLUCENT&quot;&gt; &lt;code&gt;TRANSLUCENT&lt;/code&gt; の&lt;/a&gt;半透明性は、基盤となるシステムによってサポートされている必要があり</target>
        </trans-unit>
        <trans-unit id="ec992ef8c01d8a91b29b9663489a827132e70061" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsenvironment#getAllFonts()&quot;&gt;&lt;code&gt;getAllFonts&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;GraphicsEnvironment&lt;/code&gt; class returns an array of all font faces available in the system. These font faces are returned as &lt;code&gt;Font&lt;/code&gt; objects with a size of 1, identity transform and default font features. These base fonts can then be used to derive new &lt;code&gt;Font&lt;/code&gt; objects with varying sizes, styles, transforms and font features via the &lt;code&gt;deriveFont&lt;/code&gt; methods in this class.</source>
          <target state="translated">&lt;code&gt;GraphicsEnvironment&lt;/code&gt; クラスの&lt;a href=&quot;graphicsenvironment#getAllFonts()&quot;&gt; &lt;code&gt;getAllFonts&lt;/code&gt; &lt;/a&gt;メソッドは、システムで使用可能なすべてのフォントフェースの配列を返します。これらのフォントフェースは、サイズが1、ID変換、およびデフォルトのフォント機能を持つ &lt;code&gt;Font&lt;/code&gt; オブジェクトとして返されます。これらのベースフォントは、このクラスの &lt;code&gt;deriveFont&lt;/code&gt; メソッドを介して、さまざまなサイズ、スタイル、変換、およびフォント機能を備えた新しい &lt;code&gt;Font&lt;/code&gt; オブジェクトを派生させるために使用できます。</target>
        </trans-unit>
        <trans-unit id="ac6fd445a8abbfdf6b8f85b02ec9c54bc64434b0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#base64&quot;&gt;Base64&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#base64&quot;&gt;Base64では、&lt;/a&gt;変換アルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="becff7faf751f42ccbca78d1ff611ab0fb00ba48" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#dsa-sha1&quot;&gt;DSA-SHA1&lt;/a&gt; (DSS) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#dsa-sha1&quot;&gt;DSA-SHA1&lt;/a&gt;（DSS）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="ee3f60b00b3529817693288491df29a6712e3331" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;&gt; Enveloped Signature&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;&gt;エンベロープ署名は&lt;/a&gt;変換アルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="0b88790d458afe33d2216d161472445474fc51cb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#hmac-sha1&quot;&gt;HMAC-SHA1&lt;/a&gt; MAC signature method algorithm URI</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#hmac-sha1&quot;&gt;HMAC-SHA1&lt;/a&gt; MAC署名メソッドアルゴリズムURI</target>
        </trans-unit>
        <trans-unit id="c19c2c2b7a22f554c7ae96b18019113331154992" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;&gt;RSA-SHA1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;&gt;RSA-SHA1&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="01bf5b4fc24fe23d8966259b4091df56900af996" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;&gt; SHA1&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;&gt;SHA1は、&lt;/a&gt;メソッドアルゴリズムURIをダイジェスト。</target>
        </trans-unit>
        <trans-unit id="af7ee9cfcd3d6107b3c1dd50b03852f916c260e1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1&quot;&gt; ECDSA-SHA1&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1&quot;&gt;ECDSA-SHA1&lt;/a&gt;（FIPS 180-4）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="e4dedda2e7f7aea4568aa2c2eb187e63638d19af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha224&quot;&gt; ECDSA-SHA224&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha224&quot;&gt;ECDSA-SHA224&lt;/a&gt;（FIPS 180-4）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="a53376ec8ca69ca3d54a2262f28511aa42273529" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256&quot;&gt; ECDSA-SHA256&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256&quot;&gt;ECDSA-SHA256&lt;/a&gt;（FIPS 180-4）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="d85df8f41b660375d4442a1e15fa274557a89535" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384&quot;&gt; ECDSA-SHA384&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384&quot;&gt;ECDSA-SHA384&lt;/a&gt;（FIPS 180-4）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="ad5bd96b17eae327314c8f39dfe7802a29acf09a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512&quot;&gt; ECDSA-SHA512&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512&quot;&gt;ECDSA-SHA512&lt;/a&gt;（FIPS 180-4）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="8ae5b3c777b1e2d5a2186ca8a378affe9c7ade16" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha224&quot;&gt; HMAC-SHA224&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha224&quot;&gt;HMAC-SHA224&lt;/a&gt; MAC署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="53de04ca23665c1a16a28adfdf8c893f824822a4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha256&quot;&gt; HMAC-SHA256&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha256&quot;&gt;HMAC-SHA256&lt;/a&gt; MAC署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="861114a3ecd86c3cab9aa4a66112c1e2ee43c6eb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha384&quot;&gt; HMAC-SHA384&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha384&quot;&gt;HMAC-SHA384&lt;/a&gt; MAC署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="af1359431a4b4abc420088f3eaf4951469a38069" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha512&quot;&gt; HMAC-SHA512&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha512&quot;&gt;HMAC-SHA512&lt;/a&gt; MAC署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="4fa675d632de88ac6516637e0feaed2abaaa090d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha224&quot;&gt; RSA-SHA224&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha224&quot;&gt;RSA-SHA224&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="eaddb66e627fa00f9ce8834f0acbf436a0c9d55a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;&gt; RSA-SHA256&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;&gt;RSA-SHA256&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="7fdeb91c4bb77cbff71ec5b53a24f31a2cfc8fb0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha384&quot;&gt; RSA-SHA384&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha384&quot;&gt;RSA-SHA384&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="36fa84d4352533e019faa9c861c57be646aeeb1f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha512&quot;&gt; RSA-SHA512&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha512&quot;&gt;RSA-SHA512&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="bc01f1e49eb4cbe40436d470538878c09a541e97" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#sha224&quot;&gt; SHA224&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#sha224&quot;&gt;SHA224&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="8c5c807f091255a14ff7a3da29c8287a037f9165" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#sha384&quot;&gt; SHA384&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#sha384&quot;&gt;SHA3​​84&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="d84f835080934ddeca944780a8bafd9805086678" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#ripemd160&quot;&gt; RIPEMD-160&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#ripemd160&quot;&gt;RIPEMD-160&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="492ea7b910db2fa76b178f6f56dad826131e494e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;&gt; SHA256&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;&gt;SHA256&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="59642427325669eecdce19219f8c8dfb434e8443" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#sha512&quot;&gt; SHA512&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#sha512&quot;&gt;SHA512&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="6c7c6f971c0678438ecae16f111eb39141e3b969" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;&gt;Exclusive Canonical XML (without comments)&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;&gt;独占正規XML（コメントなし）&lt;/a&gt;標準化メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="9bba8474b6924be852a4fb82e20bd985dfbd627d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;&gt; Exclusive Canonical XML with comments&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;&gt;コメント付き&lt;/a&gt;の排他的CanonicalXML正規化メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="9bc8e8bdb11de9b4d0c46e91f131a698d3a4fcc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2002/06/xmldsig-filter2&quot;&gt; XPath Filter 2&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2002/06/xmldsig-filter2&quot;&gt;XPathのフィルタ2は、&lt;/a&gt;変換アルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="31f1151a5b47c7982e4acc0910f8a4b52ca5d55f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha1-rsa-MGF1&quot;&gt; SHA1-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha1-rsa-MGF1&quot;&gt;SHA1-RSA-MGF1&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="c9aa58b291f03f83bf122fa950bfe3fcb22188d3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha224-rsa-MGF1&quot;&gt; SHA224-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha224-rsa-MGF1&quot;&gt;SHA224-RSA-MGF1&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="3175530d8fe15bfed754288d8676d3bf07d8afe0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha256-rsa-MGF1&quot;&gt; SHA256-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha256-rsa-MGF1&quot;&gt;SHA256-RSA-MGF1&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="3144f4088250ae9caf73443a7b313dce2cff775c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-224&quot;&gt; SHA3-224&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-224&quot;&gt;SHA3​​-224&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="5e6ba38dec8a0df92c6bd5c27c41609fff68bd20" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-256&quot;&gt; SHA3-256&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-256&quot;&gt;SHA3​​-256&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="d7d8efc48e2075aca981620055a7e3c7b772d12c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-384&quot;&gt; SHA3-384&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-384&quot;&gt;SHA3​​-384&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="3fe8e6908bf5d6d9385ca4cfbc6956d3e11b3192" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-512&quot;&gt; SHA3-512&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-512&quot;&gt;SHA3​​-512&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="3e0da8972968f17f0432d7daf91118841009c746" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha384-rsa-MGF1&quot;&gt; SHA384-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha384-rsa-MGF1&quot;&gt;SHA3​​84-RSA-MGF1&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="951b7da31a6ca5e6cfdec902f4b7f1ddcdba5734" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha512-rsa-MGF1&quot;&gt; SHA512-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha512-rsa-MGF1&quot;&gt;SHA512-RSA-MGF1&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="15e53346f59cf546f87a890d95118ee937cd487b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2009/xmldsig11#dsa-sha256&quot;&gt;DSA-SHA256&lt;/a&gt; (DSS) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2009/xmldsig11#dsa-sha256&quot;&gt;DSA-SHA256&lt;/a&gt;（DSS）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="f0a1935cb2f87664fbd1025122a44d8673e21bab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/TR/1999/REC-xpath-19991116&quot;&gt;XPath&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/1999/REC-xpath-19991116&quot;&gt;XPathは&lt;/a&gt;変換アルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="90ca213841333d5dc68670f40a116f7342d94bf5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/TR/1999/REC-xslt-19991116&quot;&gt;XSLT&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/1999/REC-xslt-19991116&quot;&gt;XSLTは、&lt;/a&gt;変換アルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="fd24bfe3b04d3f02022c8e627280dee1e6b0b526" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;&gt;Canonical XML (without comments)&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;&gt;正規XML（コメントなし）&lt;/a&gt;標準化メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="8d03ca9ec12e255299bb77708dc8410b70e2f6e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;&gt; Canonical XML with comments&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;&gt;コメント付き&lt;/a&gt;のCanonicalXML正規化メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="a98781d4e7260d7cef0e2c5a0ed41bd67c0822aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httprequest.bodypublishers#noBody()&quot;&gt;&lt;code&gt;noBody&lt;/code&gt;&lt;/a&gt; request body publisher can be used where no request body is required or appropriate. Whether a method is restricted, or not, is implementation specific. For example, some implementations may choose to restrict the &lt;code&gt;CONNECT&lt;/code&gt; method.</source>
          <target state="translated">&lt;a href=&quot;httprequest.bodypublishers#noBody()&quot;&gt; &lt;code&gt;noBody&lt;/code&gt; &lt;/a&gt;要求ボディ発行元には、要求本体が必要とされない場合に使用されるか、または適切であり得ます。メソッドが制限されているかどうかは、実装によって異なります。たとえば、一部の実装では、 &lt;code&gt;CONNECT&lt;/code&gt; メソッドを制限することを選択する場合があります。</target>
        </trans-unit>
        <trans-unit id="6b121b64ccce6e083946b53f51efe1baa69ca2c2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; using this subscriber is available after the entire response has been read.</source>
          <target state="translated">&lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;全体の応答が読み込まれた後に、この加入者を使用することが可能です。</target>
        </trans-unit>
        <trans-unit id="270c350cfd8851cc33080ad9adabc067ee58e5f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; using this subscriber is available immediately after the response headers have been read, without requiring to wait for the entire body to be processed. The response body bytes can then be obtained by subscribing to the publisher returned by the &lt;code&gt;HttpResponse&lt;/code&gt;&lt;a href=&quot;httpresponse#body()&quot;&gt;&lt;code&gt;body&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;応答ヘッダーが身体全体が処理されるのを待つ必要なく、読み込まれた直後に、この加入者を使用することは可能です。応答本文のバイトは、 &lt;code&gt;HttpResponse&lt;/code&gt; &lt;a href=&quot;httpresponse#body()&quot;&gt; &lt;code&gt;body&lt;/code&gt; &lt;/a&gt;メソッドによって返される発行元にサブスクライブすることで取得できます。</target>
        </trans-unit>
        <trans-unit id="cc75a5baa31a01f6a547ced8e614c9253df03795" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; using this subscriber is available immediately after the response headers have been read, without requiring to wait for the entire body to be processed. The response body can then be read directly from the &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;応答ヘッダーが身体全体が処理されるのを待つ必要なく、読み込まれた直後に、この加入者を使用することは可能です。応答本文は、&lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;から直接読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="c4a301962377dbb6dfc7d3d088a9924195ee0fe6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; using this subscriber is available immediately after the response headers have been read, without requiring to wait for the entire body to be processed. The response body can then be read directly from the &lt;a href=&quot;../../../../java.base/java/util/stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;応答ヘッダーが身体全体が処理されるのを待つ必要なく、読み込まれた直後に、この加入者を使用することは可能です。応答本文は、&lt;a href=&quot;../../../../java.base/java/util/stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt;から直接読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="cee6ebd1c78062b9217ddd4f1433c90767823779" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html&quot;&gt; Catalog Standard&lt;/a&gt; distinguished &lt;code&gt;external identifiers&lt;/code&gt; from &lt;code&gt;uri entries&lt;/code&gt; as being used to solely identify DTDs, while &lt;code&gt;uri entries&lt;/code&gt; for other resources such as stylesheets and schema. The Java APIs, such as &lt;a href=&quot;../stream/xmlresolver&quot;&gt;&lt;code&gt;XMLResolver&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt;&lt;code&gt;LSResourceResolver&lt;/code&gt;&lt;/a&gt; however, make no such distinction. In consistent with the existing Java API, this CatalogResolver recognizes a system identifier as a URI and will search both &lt;code&gt;system&lt;/code&gt; and &lt;code&gt;uri&lt;/code&gt; entries in a catalog in order to find a matching entry.</source>
          <target state="translated">&lt;a href=&quot;https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html&quot;&gt;カタログ標準&lt;/a&gt;区別 &lt;code&gt;external identifiers&lt;/code&gt; から &lt;code&gt;uri entries&lt;/code&gt; 、単にDTDを特定するために使用されるように、一方 &lt;code&gt;uri entries&lt;/code&gt; ようなスタイルシートやスキーマなどの他のリソースのため。ただし、&lt;a href=&quot;../stream/xmlresolver&quot;&gt; &lt;code&gt;XMLResolver&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt; &lt;code&gt;LSResourceResolver&lt;/code&gt; &lt;/a&gt;などのJava APIは、そのような区別をしません。既存のJavaAPIと一貫して、このCatalogResolverはシステム識別子をURIとして認識し、一致するエントリを見つけるためにカタログ内の &lt;code&gt;system&lt;/code&gt; エントリと &lt;code&gt;uri&lt;/code&gt; エントリの両方を検索します。</target>
        </trans-unit>
        <trans-unit id="6a01a0650bec2f8bee323fb677c1487d4fef943f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=imf_overview&quot;&gt;Input Method Framework&lt;/a&gt; lets text components interact with input methods, separate software components that preprocess events to let users enter thousands of different characters using keyboards with far fewer keys. &lt;code&gt;JTextComponent&lt;/code&gt; is an &lt;em&gt;active client&lt;/em&gt; of the framework, so it implements the preferred user interface for interacting with input methods. As a consequence, some key events do not reach the text component because they are handled by an input method, and some text input reaches the text component as committed text within an &lt;a href=&quot;../../../java/awt/event/inputmethodevent&quot;&gt;&lt;code&gt;InputMethodEvent&lt;/code&gt;&lt;/a&gt; instead of as a key event. The complete text input is the combination of the characters in &lt;code&gt;keyTyped&lt;/code&gt; key events and committed text in input method events.</source>
          <target state="translated">&lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=imf_overview&quot;&gt;インプットメソッドフレームワークは、&lt;/a&gt;前処理イベントは、ユーザーがはるかに少ないキーでキーボードを使用して、異なる数千文字を入力できるようにするという入力方法、個別のソフトウェアコンポーネントと対話するテキストコンポーネントをすることができます。 &lt;code&gt;JTextComponent&lt;/code&gt; はフレームワークの&lt;em&gt;アクティブなクライアント&lt;/em&gt;であるため、入力メソッドと対話するための優先ユーザーインターフェイスを実装します。結果として、一部のキーイベントは入力メソッドによって処理されるためテキストコンポーネントに到達せず、一部のテキスト入力はキーイベントとしてではなく&lt;a href=&quot;../../../java/awt/event/inputmethodevent&quot;&gt; &lt;code&gt;InputMethodEvent&lt;/code&gt; &lt;/a&gt;内のコミットされたテキストとしてテキストコンポーネントに到達します。完全なテキスト入力は、 &lt;code&gt;keyTyped&lt;/code&gt; キーイベントの文字と入力メソッドイベントのコミットされたテキストの組み合わせです。</target>
        </trans-unit>
        <trans-unit id="761513f2b0bbba586605e4294850b23aff51188d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;imagereader#getSourceRegion-javax.imageio.ImageReadParam-int-int-&quot;&gt;&lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt;&lt;/a&gt; method may be used if only source clipping is desired.</source>
          <target state="translated">ソースのクリッピングのみが必要な場合は、&lt;a href=&quot;imagereader#getSourceRegion-javax.imageio.ImageReadParam-int-int-&quot;&gt; &lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt; &lt;/a&gt;メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="1eedddde68bb46978d525f7790711dd02e0ebfc9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;inet6address#lform&quot;&gt;full uncompressed form&lt;/a&gt; of an IPv6 literal address is also valid.</source>
          <target state="translated">&lt;a href=&quot;inet6address#lform&quot;&gt;完全な非圧縮形式&lt;/a&gt;のIPv6リテラルアドレスのも有効です。</target>
        </trans-unit>
        <trans-unit id="89aa71069d9b64ba38bde1b7ed22da8a98a99b64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;inetaddress&quot;&gt;&lt;code&gt;InetAddress&lt;/code&gt;&lt;/a&gt; class is the abstraction representing an IP (Internet Protocol) address. It has two subclasses:</source>
          <target state="translated">&lt;a href=&quot;inetaddress&quot;&gt; &lt;code&gt;InetAddress&lt;/code&gt; のの&lt;/a&gt;クラスは、IP（Internet Protocol）アドレスを表す抽象概念です。これには2つのサブクラスがあります。</target>
        </trans-unit>
        <trans-unit id="63af60ec9959bd5779b0337a24c9f2bd2daa5ff3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;japaneseera#SHOWA&quot;&gt;&lt;code&gt;SHOWA&lt;/code&gt;&lt;/a&gt; era that contains 1970-01-01 (ISO calendar system) has the value 1 Later era is numbered 2 (&lt;a href=&quot;japaneseera#HEISEI&quot;&gt;&lt;code&gt;HEISEI&lt;/code&gt;&lt;/a&gt;). Earlier eras are numbered 0 (&lt;a href=&quot;japaneseera#TAISHO&quot;&gt;&lt;code&gt;TAISHO&lt;/code&gt;&lt;/a&gt;), -1 (&lt;a href=&quot;japaneseera#MEIJI&quot;&gt;&lt;code&gt;MEIJI&lt;/code&gt;&lt;/a&gt;), only Meiji and later eras are supported.</source>
          <target state="translated">&lt;a href=&quot;japaneseera#SHOWA&quot;&gt; &lt;code&gt;SHOWA&lt;/code&gt; &lt;/a&gt; 1970-01-01（ISOカレンダシステム）が含ま時代2（番号付けされている値1後で時代有する&lt;a href=&quot;japaneseera#HEISEI&quot;&gt; &lt;code&gt;HEISEI&lt;/code&gt; &lt;/a&gt;）。初期の年号には0（&lt;a href=&quot;japaneseera#TAISHO&quot;&gt; &lt;code&gt;TAISHO&lt;/code&gt; &lt;/a&gt;）、-1（&lt;a href=&quot;japaneseera#MEIJI&quot;&gt; &lt;code&gt;MEIJI&lt;/code&gt; &lt;/a&gt;）の番号が付けられ、明治以降の年号のみがサポートされます。</target>
        </trans-unit>
        <trans-unit id="5ad4c9f7c1d38ff17eed005c539f21753e0ecc72" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;japaneseera#SHOWA&quot;&gt;&lt;code&gt;SHOWA&lt;/code&gt;&lt;/a&gt; era that contains 1970-01-01 (ISO calendar system) has the value 1. Later eras are numbered from 2 (&lt;a href=&quot;japaneseera#HEISEI&quot;&gt;&lt;code&gt;HEISEI&lt;/code&gt;&lt;/a&gt;). Earlier eras are numbered 0 (&lt;a href=&quot;japaneseera#TAISHO&quot;&gt;&lt;code&gt;TAISHO&lt;/code&gt;&lt;/a&gt;), -1 (&lt;a href=&quot;japaneseera#MEIJI&quot;&gt;&lt;code&gt;MEIJI&lt;/code&gt;&lt;/a&gt;)).</source>
          <target state="translated">&lt;a href=&quot;japaneseera#SHOWA&quot;&gt; &lt;code&gt;SHOWA&lt;/code&gt; &lt;/a&gt; 1970-01-01（ISOカレンダーシステム）が含ま時代は1.後の時代には2（から番号付けされた値がある&lt;a href=&quot;japaneseera#HEISEI&quot;&gt; &lt;code&gt;HEISEI&lt;/code&gt; &lt;/a&gt;）。初期の時代には0（&lt;a href=&quot;japaneseera#TAISHO&quot;&gt; &lt;code&gt;TAISHO&lt;/code&gt; &lt;/a&gt;）、-1（&lt;a href=&quot;japaneseera#MEIJI&quot;&gt; &lt;code&gt;MEIJI&lt;/code&gt; &lt;/a&gt;）と番号が付けられます。</target>
        </trans-unit>
        <trans-unit id="53e05d8dddbec45eaf69a1abeb3e0b1d8a3d4dde" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;linkedhashmap#removeEldestEntry-java.util.Map.Entry-&quot;&gt;&lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt;&lt;/a&gt; method may be overridden to impose a policy for removing stale mappings automatically when new mappings are added to the map.</source>
          <target state="translated">&lt;a href=&quot;linkedhashmap#removeEldestEntry-java.util.Map.Entry-&quot;&gt; &lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt; &lt;/a&gt;メソッドは、新しいマッピングがマップに追加されたときに自動的に失効マッピングを除去するためのポリシーを課すことをオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="e4349deb740443b661611a6b6b7d62724a4a215b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;locateregistry&quot;&gt;&lt;code&gt;LocateRegistry&lt;/code&gt;&lt;/a&gt; class provides a programmatic API for constructing a bootstrap reference to a &lt;code&gt;Registry&lt;/code&gt; at a remote address (see the static &lt;code&gt;getRegistry&lt;/code&gt; methods) and for creating and exporting a &lt;code&gt;Registry&lt;/code&gt; in the current VM on a particular local address (see the static &lt;code&gt;createRegistry&lt;/code&gt; methods).</source>
          <target state="translated">&lt;a href=&quot;locateregistry&quot;&gt; &lt;code&gt;LocateRegistry&lt;/code&gt; の&lt;/a&gt;クラスは、プログラムへのブートストラップ参照構築するためのAPIを提供 &lt;code&gt;Registry&lt;/code&gt; リモートアドレスに（静的参照 &lt;code&gt;getRegistry&lt;/code&gt; 方法）を作成およびエクスポートするために &lt;code&gt;Registry&lt;/code&gt; （静的参照特定のローカルアドレスに現在のVMでの &lt;code&gt;createRegistry&lt;/code&gt; の方法を）。</target>
        </trans-unit>
        <trans-unit id="685e9f05827cafac5b9700afb54eb83f6c776e78" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; interface supports locking disciplines that differ in semantics (reentrant, fair, etc), and that can be used in non-block-structured contexts including hand-over-hand and lock reordering algorithms. The main implementation is &lt;a href=&quot;reentrantlock&quot;&gt;&lt;code&gt;ReentrantLock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;インターフェースセマンティクス（リエントラント、フェアなど）が異なる分野を固定支持し、それがハンドオーバーハンドロック並べ替えアルゴリズムを含む非ブロック構造のコンテキストで使用することができます。主な実装は&lt;a href=&quot;reentrantlock&quot;&gt; &lt;code&gt;ReentrantLock&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="3180b0ec0d45d09638da4a7e022ef32c09072ff6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;managementfactory&quot;&gt;&lt;code&gt;ManagementFactory&lt;/code&gt;&lt;/a&gt; class is the management factory class for the Java platform. This class provides a set of static factory methods to obtain the MXBeans for the Java platform to allow an application to access the MXBeans directly.</source>
          <target state="translated">&lt;a href=&quot;managementfactory&quot;&gt; &lt;code&gt;ManagementFactory&lt;/code&gt; に&lt;/a&gt;クラスは、Javaプラットフォームの管理ファクトリクラスです。このクラスは、JavaプラットフォームのMXBeanを取得して、アプリケーションがMXBeanに直接アクセスできるようにする一連の静的ファクトリメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="6aee927bc4b4fd7e8464ec83c8eda0aa86fccfbd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;managementfactory#getPlatformManagementInterfaces--&quot;&gt;&lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt;&lt;/a&gt; method returns all management interfaces supported in the Java virtual machine including the standard management interfaces listed in the tables below as well as the management interfaces extended by the JDK implementation.</source>
          <target state="translated">&lt;a href=&quot;managementfactory#getPlatformManagementInterfaces--&quot;&gt; &lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンでサポートされるすべての管理インターフェースを返します。これには、以下の表にリストされている標準管理インターフェースや、JDK実装によって拡張された管理インターフェースが含まれます。</target>
        </trans-unit>
        <trans-unit id="c882421782dfc7080f4d7ba69c0672ccbaee2976" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matcher#find--&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; method scans the input sequence looking for the next subsequence that matches the pattern.</source>
          <target state="translated">&lt;a href=&quot;matcher#find--&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;方法は、パターンに一致する次のサブシーケンスを探して入力シーケンスをスキャンします。</target>
        </trans-unit>
        <trans-unit id="f8f9d8ffa3354e5ea114ec9c9eecd670dfa20d2a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matcher#lookingAt--&quot;&gt;&lt;code&gt;lookingAt&lt;/code&gt;&lt;/a&gt; method attempts to match the input sequence, starting at the beginning, against the pattern.</source>
          <target state="translated">&lt;a href=&quot;matcher#lookingAt--&quot;&gt; &lt;code&gt;lookingAt&lt;/code&gt; &lt;/a&gt;入力シーケンスにマッチする方法を試み、パターンに対して、先頭から始まります。</target>
        </trans-unit>
        <trans-unit id="81a4840468c5585768ffd0339442ff61c0e3f495" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matcher#matches--&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method attempts to match the entire input sequence against the pattern.</source>
          <target state="translated">&lt;a href=&quot;matcher#matches--&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt;パターンに対する全入力配列と一致するメソッドの試みを。</target>
        </trans-unit>
        <trans-unit id="3b536101e87b34402f5a75ef5e45b85b8065447c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;memorypoolmxbean#getUsage--&quot;&gt;&lt;code&gt;getUsage()&lt;/code&gt;&lt;/a&gt; method provides an estimate of the current usage of a memory pool. For a garbage-collected memory pool, the amount of used memory includes the memory occupied by all objects in the pool including both &lt;em&gt;reachable&lt;/em&gt; and &lt;em&gt;unreachable&lt;/em&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;memorypoolmxbean#getUsage--&quot;&gt; &lt;code&gt;getUsage()&lt;/code&gt; &lt;/a&gt;メソッドは、メモリ・プールの現在の使用量の推定値を提供します。ガベージコレクションされたメモリプールの場合、使用されるメモリの量には、&lt;em&gt;到達可能&lt;/em&gt;オブジェクトと&lt;em&gt;到達不能&lt;/em&gt;オブジェクトの両方を含む、プール内のすべてのオブジェクトが占めるメモリが含まれます。</target>
        </trans-unit>
        <trans-unit id="2917cba2196f42068511cb8866976f8cefd8ba43" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;memorypoolmxbean#isCollectionUsageThresholdSupported--&quot;&gt;&lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if this functionality is supported.</source>
          <target state="translated">&lt;a href=&quot;memorypoolmxbean#isCollectionUsageThresholdSupported--&quot;&gt; &lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、この機能がサポートされているかどうかを決定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="00777c593762897a62ff30f882e9e994e0fd4435" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;Lookup Factory Methods&lt;/a&gt; correspond to all major use cases for methods, constructors, and fields. These use cases may be distinguished using small integers as follows:</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;検索ファクトリーメソッドは、&lt;/a&gt;メソッド、コンストラクタ、およびフィールドのすべての主要なユースケースに対応しています。これらの使用例は、次のように小さな整数を使用して区別できます。</target>
        </trans-unit>
        <trans-unit id="2c3b7cfe91905e95935f97b235b0958422f4db84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;moduledescriptor#version()&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt;, and the module name when the attribute &quot;&lt;code&gt;Automatic-Module-Name&lt;/code&gt;&quot; is not present, are derived from the file name of the JAR file as follows:</source>
          <target state="translated">&lt;a href=&quot;moduledescriptor#version()&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt;属性「およびモジュール名 &lt;code&gt;Automatic-Module-Name&lt;/code&gt; 、次のように」存在ではありませんが、JARファイルのファイル名に由来しています。</target>
        </trans-unit>
        <trans-unit id="803a5dc5363ca39a6c192f06387b9fe75f794ba3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt;&lt;/a&gt; method is used to join a group and receive all multicast datagrams sent to the group. A channel may join several multicast groups and may join the same group on several &lt;a href=&quot;../../net/networkinterface&quot;&gt;&lt;code&gt;interfaces&lt;/code&gt;&lt;/a&gt;. Membership is dropped by invoking the &lt;a href=&quot;membershipkey#drop--&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method on the returned &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt;. If the underlying platform supports source filtering then the &lt;a href=&quot;membershipkey#block-java.net.InetAddress-&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;membershipkey#unblock-java.net.InetAddress-&quot;&gt;&lt;code&gt;unblock&lt;/code&gt;&lt;/a&gt; methods can be used to block or unblock multicast datagrams from particular source addresses.</source>
          <target state="translated">&lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt; &lt;/a&gt;メソッドは、グループに参加し、グループに送信されたすべてのマルチキャストデータグラムを受信するために使用されます。チャネルは複数のマルチキャストグループに参加したり、複数の&lt;a href=&quot;../../net/networkinterface&quot;&gt; &lt;code&gt;interfaces&lt;/code&gt; &lt;/a&gt;上の同じグループに参加したりできます。メンバーシップは、返された&lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;membershipkey#drop--&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって削除されます。基盤となるプラットフォームがソースフィルタリングをサポートしている場合、&lt;a href=&quot;membershipkey#block-java.net.InetAddress-&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;membershipkey#unblock-java.net.InetAddress-&quot;&gt; &lt;code&gt;unblock&lt;/code&gt; &lt;/a&gt;メソッドを使用して、特定のソースアドレスからのマルチキャストデータグラムをブロックまたはブロック解除できます。</target>
        </trans-unit>
        <trans-unit id="586959a334aab9367192bda3b22ae8905ccfbfb5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-java.net.InetAddress-&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt;&lt;/a&gt; method is used to begin receiving datagrams sent to a group whose source address matches a given source address. This method throws &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; if the underlying platform does not support source filtering. Membership is &lt;em&gt;cumulative&lt;/em&gt; and this method may be invoked again with the same group and interface to allow receiving datagrams from other source addresses. The method returns a &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt; that represents membership to receive datagrams from the given source address. Invoking the key's &lt;a href=&quot;membershipkey#drop--&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method drops membership so that datagrams from the source address can no longer be received.</source>
          <target state="translated">&lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-java.net.InetAddress-&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt; &lt;/a&gt;方法は、その元アドレス指定された送信元アドレスと一致するグループに送信されたデータグラムの受信を開始するために使用されます。基盤となるプラットフォームがソースフィルタリングをサポートしてい&lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;場合、このメソッドはUnsupportedOperationExceptionをスローします。メンバーシップは&lt;em&gt;累積的で&lt;/em&gt;あり、このメソッドを同じグループとインターフェイスで再度呼び出して、他の送信元アドレスからデータグラムを受信できるようにすることができます。このメソッドは、指定された送信元アドレスからデータグラムを受信するための&lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; &lt;/a&gt;を表すMembershipKeyを返します。キーの&lt;a href=&quot;membershipkey#drop--&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、メンバーシップが削除され、送信元アドレスからのデータグラムを受信できなくなります。</target>
        </trans-unit>
        <trans-unit id="ea1666c946dbc92e3963a08d51b7fe1ff2e05b97" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;mutablecallsite#syncAll-java.lang.invoke.MutableCallSite:A-&quot;&gt;&lt;code&gt;syncAll&lt;/code&gt;&lt;/a&gt; operation provides a way to force threads to accept a new target value, even if there is no other synchronization.</source>
          <target state="translated">&lt;a href=&quot;mutablecallsite#syncAll-java.lang.invoke.MutableCallSite:A-&quot;&gt; &lt;code&gt;syncAll&lt;/code&gt; の&lt;/a&gt;操作は、他の同期がない場合でも、新たな目標値を受け入れるようにスレッドを強制する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="4a33de6ddb9b787f9d72d46f03220512c25c8dcf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkchannel&quot;&gt;&lt;code&gt;NetworkChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to &lt;a href=&quot;networkchannel#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; the channel's socket, obtain the address to which the socket is bound, and methods to &lt;a href=&quot;networkchannel#getOption(java.net.SocketOption)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;networkchannel#setOption(java.net.SocketOption,T)&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; socket options. The &lt;a href=&quot;multicastchannel&quot;&gt;&lt;code&gt;MulticastChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to join Internet Protocol (IP) multicast groups.</source>
          <target state="translated">&lt;a href=&quot;networkchannel&quot;&gt; &lt;code&gt;NetworkChannel&lt;/code&gt; &lt;/a&gt;インタフェースの指定方法がする&lt;a href=&quot;networkchannel#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;、チャネルのソケットをソケットがバインドされているアドレスを取得し、方法はする&lt;a href=&quot;networkchannel#getOption(java.net.SocketOption)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;networkchannel#setOption(java.net.SocketOption,T)&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;ソケットオプション。&lt;a href=&quot;multicastchannel&quot;&gt; &lt;code&gt;MulticastChannel&lt;/code&gt; の&lt;/a&gt;インタフェースの指定方法は、インターネットプロトコル（IP）マルチキャストグループに参加します。</target>
        </trans-unit>
        <trans-unit id="86bc696e481ab25ea679a816f2b2344f73e99298" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkchannel&quot;&gt;&lt;code&gt;NetworkChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; the channel's socket, obtain the address to which the socket is bound, and methods to &lt;a href=&quot;networkchannel#getOption-java.net.SocketOption-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; socket options. The &lt;a href=&quot;multicastchannel&quot;&gt;&lt;code&gt;MulticastChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to join Internet Protocol (IP) multicast groups.</source>
          <target state="translated">&lt;a href=&quot;networkchannel&quot;&gt; &lt;code&gt;NetworkChannel&lt;/code&gt; &lt;/a&gt;インタフェースの指定方法がする&lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;、チャネルのソケットをソケットがバインドされているアドレスを取得し、方法はする&lt;a href=&quot;networkchannel#getOption-java.net.SocketOption-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;ソケットオプション。&lt;a href=&quot;multicastchannel&quot;&gt; &lt;code&gt;MulticastChannel&lt;/code&gt; の&lt;/a&gt;インタフェースの指定方法は、インターネットプロトコル（IP）マルチキャストグループに参加します。</target>
        </trans-unit>
        <trans-unit id="97e5a8c6cebdfee9806373945502b19fe12625e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; methods that do not otherwise have a value to return are specified to return the network channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">&lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; を&lt;/a&gt;戻り値を返さないものな方法は、それらが呼び出される時にネットワークチャネルを返すように指定されています。これにより、メソッド呼び出しを連鎖させることができます。このインターフェースの実装は、戻り値の型を特殊化して、実装クラスでのメソッド呼び出しをチェーンできるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="2aae4de2a8761dadc1703ebe8bd9d27e209c3303" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkinterface&quot;&gt;&lt;code&gt;NetworkInterface&lt;/code&gt;&lt;/a&gt; class provides APIs to browse and query all the networking interfaces (e.g. ethernet connection or PPP endpoint) of the local machine. It is through that class that you can check if any of the local interfaces is configured to support IPv6.</source>
          <target state="translated">&lt;a href=&quot;networkinterface&quot;&gt; &lt;code&gt;NetworkInterface&lt;/code&gt; &lt;/a&gt;クラスは、ローカルマシンのすべてのネットワークインタフェース（例えば、イーサネット接続またはPPP端点）をブラウズし、クエリするためのAPIを提供します。そのクラスを通じて、ローカルインターフェースのいずれかがIPv6をサポートするように構成されているかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="1d4398a2182ad9d3d156c72bc1e1b46b563498d0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;openmbeanconstructorinfo#getSignature--&quot;&gt;&lt;code&gt;getSignature()&lt;/code&gt;&lt;/a&gt; method should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt; which implements the &lt;a href=&quot;openmbeanparameterinfo&quot;&gt;&lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt;&lt;/a&gt; interface (typically &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;openmbeanconstructorinfo#getSignature--&quot;&gt; &lt;code&gt;getSignature()&lt;/code&gt; &lt;/a&gt;メソッドは、実行時のサブクラスのインスタンスの配列を返す必要があり&lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt;実装&lt;a href=&quot;openmbeanparameterinfo&quot;&gt; &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; の&lt;/a&gt;インタフェース（通常&lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; を&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ce3b1f0ce29ed84d089633cd109fcedd10fa19a0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;openmbeaninfo#getAttributes--&quot;&gt;&lt;code&gt;getAttributes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbeaninfo#getOperations--&quot;&gt;&lt;code&gt;getOperations()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;openmbeaninfo#getConstructors--&quot;&gt;&lt;code&gt;getConstructors()&lt;/code&gt;&lt;/a&gt; methods of the implementing class should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt;&lt;code&gt;MBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; respectively which implement the &lt;a href=&quot;openmbeanattributeinfo&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbeanoperationinfo&quot;&gt;&lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;openmbeanconstructorinfo&quot;&gt;&lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; interface respectively.</source>
          <target state="translated">実装クラスの&lt;a href=&quot;openmbeaninfo#getAttributes--&quot;&gt; &lt;code&gt;getAttributes()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;openmbeaninfo#getOperations--&quot;&gt; &lt;code&gt;getOperations()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;openmbeaninfo#getConstructors--&quot;&gt; &lt;code&gt;getConstructors()&lt;/code&gt; &lt;/a&gt;メソッドは、実行時に、それぞれ&lt;a href=&quot;openmbeanattributeinfo&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;openmbeanoperationinfo&quot;&gt; &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; 、&lt;/a&gt;または&lt;a href=&quot;openmbeanconstructorinfo&quot;&gt; &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; &lt;/a&gt;インターフェースを実装する&lt;a href=&quot;../mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; 、&lt;/a&gt;または&lt;a href=&quot;../mbeanconstructorinfo&quot;&gt; &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; の&lt;/a&gt;サブクラスのインスタンスの配列を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="fc59af9de6b925c7a001de9e0cda1335db8b9216" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;openmbeanoperationinfo#getSignature--&quot;&gt;&lt;code&gt;getSignature()&lt;/code&gt;&lt;/a&gt; method should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt; which implements the &lt;a href=&quot;openmbeanparameterinfo&quot;&gt;&lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt;&lt;/a&gt; interface (typically &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;openmbeanoperationinfo#getSignature--&quot;&gt; &lt;code&gt;getSignature()&lt;/code&gt; &lt;/a&gt;メソッドは、実行時のサブクラスのインスタンスの配列を返す必要があり&lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt;実装&lt;a href=&quot;openmbeanparameterinfo&quot;&gt; &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; の&lt;/a&gt;インタフェース（通常&lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; を&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="264dc2096f52224fc7a2ff5e5ccbe792a29983b3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; interface has more detailed descriptions of the types of segments that make up a path and the winding rules that control how to determine which regions are inside or outside the path.</source>
          <target state="translated">&lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;インタフェースは、内部又は経路の外側である領域を決定する方法を制御することをパスと巻ルールを構成するセグメントの種類の詳細な説明を持っています。</target>
        </trans-unit>
        <trans-unit id="857b7af384088ef828c48d616bc078e73774a9aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributes#permissions()&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; attribute is a set of access permissions. This file attribute view provides access to the nine permission defined by the &lt;a href=&quot;posixfilepermission&quot;&gt;&lt;code&gt;PosixFilePermission&lt;/code&gt;&lt;/a&gt; class. These nine permission bits determine the &lt;em&gt;read&lt;/em&gt;, &lt;em&gt;write&lt;/em&gt;, and &lt;em&gt;execute&lt;/em&gt; access for the file owner, group, and others (others meaning identities other than the owner and members of the group). Some operating systems and file systems may provide additional permission bits but access to these other bits is not defined by this class in this release.</source>
          <target state="translated">&lt;a href=&quot;posixfileattributes#permissions()&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;属性は、アクセス許可のセットです。このファイル属性ビューは、&lt;a href=&quot;posixfilepermission&quot;&gt; &lt;code&gt;PosixFilePermission&lt;/code&gt; &lt;/a&gt;クラスによって定義された9つのパーミッションへのアクセスを提供します。これらの9つの許可ビットは、ファイルの所有者、グループ、およびその他（所有者とグループのメンバー以外のIDを意味するその他）の&lt;em&gt;読み取り&lt;/em&gt;、&lt;em&gt;書き込み&lt;/em&gt;、および&lt;em&gt;実行&lt;/em&gt;アクセスを決定します。一部のオペレーティングシステムおよびファイルシステムは、追加の許可ビットを提供する場合がありますが、これらの他のビットへのアクセスは、このリリースではこのクラスによって定義されていません。</target>
        </trans-unit>
        <trans-unit id="4744c29d66c9935d41a7b7e162f4709ec4bf036a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributes#permissions--&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; attribute is a set of access permissions. This file attribute view provides access to the nine permission defined by the &lt;a href=&quot;posixfilepermission&quot;&gt;&lt;code&gt;PosixFilePermission&lt;/code&gt;&lt;/a&gt; class. These nine permission bits determine the &lt;em&gt;read&lt;/em&gt;, &lt;em&gt;write&lt;/em&gt;, and &lt;em&gt;execute&lt;/em&gt; access for the file owner, group, and others (others meaning identities other than the owner and members of the group). Some operating systems and file systems may provide additional permission bits but access to these other bits is not defined by this class in this release.</source>
          <target state="translated">&lt;a href=&quot;posixfileattributes#permissions--&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;属性は、アクセス許可のセットです。このファイル属性ビューは、&lt;a href=&quot;posixfilepermission&quot;&gt; &lt;code&gt;PosixFilePermission&lt;/code&gt; &lt;/a&gt;クラスで定義された9つの権限へのアクセスを提供します。これらの9つの許可ビットは、ファイルの所有者、グループ、およびその他（その他の所有者およびグループのメンバー以外のIDを意味する）の&lt;em&gt;読み取り&lt;/em&gt;、&lt;em&gt;書き込み&lt;/em&gt;、および&lt;em&gt;実行&lt;/em&gt;アクセスを決定します。一部のオペレーティングシステムとファイルシステムは追加の許可ビットを提供する場合がありますが、これらの他のビットへのアクセスは、このリリースではこのクラスによって定義されていません。</target>
        </trans-unit>
        <trans-unit id="9d75e18b4bb9f537656575df11977b7323415855" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributeview&quot;&gt;&lt;code&gt;PosixFileAttributeView&lt;/code&gt;&lt;/a&gt; interface extends &lt;code&gt;BasicFileAttributeView&lt;/code&gt; by defining methods to access the file attributes commonly used by file systems and operating systems that implement the Portable Operating System Interface (POSIX) family of standards.</source>
          <target state="translated">&lt;a href=&quot;posixfileattributeview&quot;&gt; &lt;code&gt;PosixFileAttributeView&lt;/code&gt; の&lt;/a&gt;インタフェースは、拡張 &lt;code&gt;BasicFileAttributeView&lt;/code&gt; を一般の規格のポータブルオペレーティングシステムインタフェース（POSIX）ファミリを実装するファイルシステムおよびオペレーティングシステムで使用されるファイル属性にアクセスするためのメソッドを定義することによって。</target>
        </trans-unit>
        <trans-unit id="6738d407658008666bc1a5053dfbc19962272b6f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method is used to read the file's attributes. The file &lt;a href=&quot;posixfileattributes#owner--&quot;&gt;&lt;code&gt;owner&lt;/code&gt;&lt;/a&gt; is represented by a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; that is the identity of the file owner for the purposes of access control. The &lt;a href=&quot;posixfileattributes#group--&quot;&gt;&lt;code&gt;group-owner&lt;/code&gt;&lt;/a&gt;, represented by a &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt;, is the identity of the group owner, where a group is an identity created for administrative purposes so as to determine the access rights for the members of the group.</source>
          <target state="translated">&lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; の&lt;/a&gt;方法は、ファイルの属性を読み取るために使用されます。ファイル&lt;a href=&quot;posixfileattributes#owner--&quot;&gt; &lt;code&gt;owner&lt;/code&gt; &lt;/a&gt;は、アクセス制御の目的でファイル所有者のIDである&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;によって表されます。&lt;a href=&quot;posixfileattributes#group--&quot;&gt; &lt;code&gt;group-owner&lt;/code&gt; &lt;/a&gt;で表される、&lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; は&lt;/a&gt;、グループは、グループのメンバーのアクセス権を決定するために、管理目的のために作成されたアイデンティティであるグループの所有者のアイデンティティです。</target>
        </trans-unit>
        <trans-unit id="f5cae7f82ee146d950bad36b2028281d1616c695" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfilepermissions&quot;&gt;&lt;code&gt;PosixFilePermissions&lt;/code&gt;&lt;/a&gt; class defines methods for manipulating set of permissions.</source>
          <target state="translated">&lt;a href=&quot;posixfilepermissions&quot;&gt; &lt;code&gt;PosixFilePermissions&lt;/code&gt; の&lt;/a&gt;クラスには、アクセス権のセットを操作するための方法を定義します。</target>
        </trans-unit>
        <trans-unit id="2102dd9dc30eda3c84421793f04949c973076a9e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; instances created by &lt;a href=&quot;processbuilder&quot;&gt;&lt;code&gt;ProcessBuilder&lt;/code&gt;&lt;/a&gt; can be queried for a ProcessHandle that provides information about the Process. ProcessHandle references should not be freely distributed.</source>
          <target state="translated">&lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;によって作成されたインスタンス&lt;a href=&quot;processbuilder&quot;&gt; &lt;code&gt;ProcessBuilder&lt;/code&gt; &lt;/a&gt;プロセスに関する情報を提供ProcessHandleを照会することができます。ProcessHandle参照は自由に配布しないでください。</target>
        </trans-unit>
        <trans-unit id="b47226c20611a769390944113a9bbd420bdbfa52" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;process#getInputStream()&quot;&gt;&lt;code&gt;standard output&lt;/code&gt;&lt;/a&gt; of all processes except the last process are</source>
          <target state="translated">最後のプロセスを除くすべてのプロセスの&lt;a href=&quot;process#getInputStream()&quot;&gt; &lt;code&gt;standard output&lt;/code&gt; &lt;/a&gt;は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1c860f3bbab8e3f481494dd988c7bd96d51b73be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;Runtime.exec&lt;/code&gt;&lt;/a&gt; methods create a native process and return an instance of a subclass of &lt;code&gt;Process&lt;/code&gt; that can be used to control the process and obtain information about it.</source>
          <target state="translated">&lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt; &lt;code&gt;Runtime.exec&lt;/code&gt; &lt;/a&gt;メソッドは、ネイティブなプロセスを作成してのサブクラスのインスタンスを返す &lt;code&gt;Process&lt;/code&gt; 工程を制御し、それについての情報を得るために使用することができます。</target>
        </trans-unit>
        <trans-unit id="b1cb6821609bfac1723d508b0bb91d2d757fd59e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;Runtime.exec&lt;/code&gt;&lt;/a&gt; methods create a native process and return an instance of a subclass of &lt;code&gt;Process&lt;/code&gt; that can be used to control the process and obtain information about it. The class &lt;code&gt;Process&lt;/code&gt; provides methods for performing input from the process, performing output to the process, waiting for the process to complete, checking the exit status of the process, and destroying (killing) the process.</source>
          <target state="translated">&lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt; &lt;code&gt;Runtime.exec&lt;/code&gt; &lt;/a&gt;メソッドは、ネイティブなプロセスを作成してのサブクラスのインスタンスを返す &lt;code&gt;Process&lt;/code&gt; 工程を制御し、それについての情報を得るために使用することができます。クラス &lt;code&gt;Process&lt;/code&gt; は、プロセスからの入力の実行、プロセスへの出力の実行、プロセスの完了の待機、プロセスの終了ステータスのチェック、およびプロセスの破棄（強制終了）のためのメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="ea844c85f1e3f45d0fbdf528232a86e15887b986" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;properties#load-java.io.Reader-&quot;&gt;&lt;code&gt;load(Reader)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;properties#store-java.io.Writer-java.lang.String-&quot;&gt;&lt;code&gt;store(Writer, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties from and to a character based stream in a simple line-oriented format specified below. The &lt;a href=&quot;properties#load-java.io.InputStream-&quot;&gt;&lt;code&gt;load(InputStream)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;properties#store-java.io.OutputStream-java.lang.String-&quot;&gt;&lt;code&gt;store(OutputStream, String)&lt;/code&gt;&lt;/a&gt; methods work the same way as the load(Reader)/store(Writer, String) pair, except the input/output stream is encoded in ISO 8859-1 character encoding. Characters that cannot be directly represented in this encoding can be written using Unicode escapes as defined in section 3.3 of</source>
          <target state="translated">&lt;a href=&quot;properties#load-java.io.Reader-&quot;&gt; &lt;code&gt;load(Reader)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;properties#store-java.io.Writer-java.lang.String-&quot;&gt; &lt;code&gt;store(Writer, String)&lt;/code&gt; &lt;/a&gt;単純な行指向形式の文字ベースのストリームからとする方法ロードおよびストアのプロパティは、以下に指定しました。&lt;a href=&quot;properties#load-java.io.InputStream-&quot;&gt; &lt;code&gt;load(InputStream)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;properties#store-java.io.OutputStream-java.lang.String-&quot;&gt; &lt;code&gt;store(OutputStream, String)&lt;/code&gt; &lt;/a&gt;の方法は、入力/出力ストリームがISO 8859-1文字エンコーディングでエンコードされている以外は、負荷（リーダ）/ストア（ライター、String）を対と同じように動作します。このエンコーディングで直接表現できない文字は、セクション3.3で定義されているUnicodeエスケープを使用して記述できます。</target>
        </trans-unit>
        <trans-unit id="43359c708823c69498cdd32a1f027924e4c33c67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;properties#loadFromXML-java.io.InputStream-&quot;&gt;&lt;code&gt;loadFromXML(InputStream)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;properties#storeToXML-java.io.OutputStream-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties in a simple XML format. By default the UTF-8 character encoding is used, however a specific encoding may be specified if required. Implementations are required to support UTF-8 and UTF-16 and may support other encodings. An XML properties document has the following DOCTYPE declaration:</source>
          <target state="translated">&lt;a href=&quot;properties#loadFromXML-java.io.InputStream-&quot;&gt; &lt;code&gt;loadFromXML(InputStream)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;properties#storeToXML-java.io.OutputStream-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt; &lt;/a&gt;の単純なXML形式のメソッドのロードおよびストアのプロパティ。デフォルトではUTF-8文字エンコーディングが使用されますが、必要に応じて特定のエンコーディングを指定できます。実装はUTF-8およびUTF-16をサポートする必要があり、他のエンコーディングをサポートする場合があります。XMLプロパティドキュメントには、次のDOCTYPE宣言があります。</target>
        </trans-unit>
        <trans-unit id="f8f6297aee07864a86e2bb6a0ea3ccd94df49256" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;proxy#isProxyClass-java.lang.Class-&quot;&gt;&lt;code&gt;Proxy.isProxyClass&lt;/code&gt;&lt;/a&gt; method will return true if it is passed a proxy class-- a class returned by &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; or the class of an object returned by &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;-- and false otherwise.</source>
          <target state="translated">&lt;a href=&quot;proxy#isProxyClass-java.lang.Class-&quot;&gt; &lt;code&gt;Proxy.isProxyClass&lt;/code&gt; の&lt;/a&gt;それはクラスclass--プロキシを渡された場合、メソッドはtrueを返しますによって返さ &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; かによって返されたオブジェクトのクラス &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; -それ以外の場合はfalse。</target>
        </trans-unit>
        <trans-unit id="82b9b6df8d0389635e3baf324194adaf4d0a9535" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queue#element--&quot;&gt;&lt;code&gt;element()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;queue#peek--&quot;&gt;&lt;code&gt;peek()&lt;/code&gt;&lt;/a&gt; methods return, but do not remove, the head of the queue.</source>
          <target state="translated">&lt;a href=&quot;queue#element--&quot;&gt; &lt;code&gt;element()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;queue#peek--&quot;&gt; &lt;code&gt;peek()&lt;/code&gt; &lt;/a&gt;メソッドは、キューの先頭を返しますが、削除しないでください。</target>
        </trans-unit>
        <trans-unit id="b3de824965777891d01ab953cb9a6bb37bc267d2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queue#offer-E-&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt; method inserts an element if possible, otherwise returning &lt;code&gt;false&lt;/code&gt;. This differs from the &lt;a href=&quot;collection#add-E-&quot;&gt;&lt;code&gt;Collection.add&lt;/code&gt;&lt;/a&gt; method, which can fail to add an element only by throwing an unchecked exception. The &lt;code&gt;offer&lt;/code&gt; method is designed for use when failure is a normal, rather than exceptional occurrence, for example, in fixed-capacity (or &quot;bounded&quot;) queues.</source>
          <target state="translated">&lt;a href=&quot;queue#offer-E-&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt;可能であれば、方法はそれ以外の場合は戻って、要素を挿入 &lt;code&gt;false&lt;/code&gt; 。これは、チェックされていない例外をスローすることによってのみ要素の追加に失敗する可能性がある&lt;a href=&quot;collection#add-E-&quot;&gt; &lt;code&gt;Collection.add&lt;/code&gt; &lt;/a&gt;メソッドとは異なります。 &lt;code&gt;offer&lt;/code&gt; 障害はむしろ例外発生より、正常である場合の方法は、固定容量（または「有界」）キューに、例えば、使用のために設計されています。</target>
        </trans-unit>
        <trans-unit id="e8d4e252e82e3c4010bc6f24536b3c8e384a7a00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queue#remove--&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;queue#poll--&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; methods remove and return the head of the queue. Exactly which element is removed from the queue is a function of the queue's ordering policy, which differs from implementation to implementation. The &lt;code&gt;remove()&lt;/code&gt; and &lt;code&gt;poll()&lt;/code&gt; methods differ only in their behavior when the queue is empty: the &lt;code&gt;remove()&lt;/code&gt; method throws an exception, while the &lt;code&gt;poll()&lt;/code&gt; method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;queue#remove--&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;queue#poll--&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt;メソッドは、キューの先頭を削除して返します。キューから削除される要素は、キューの順序付けポリシーの関数であり、実装ごとに異なります。 &lt;code&gt;remove()&lt;/code&gt; と &lt;code&gt;poll()&lt;/code&gt; キューが空である場合の方法は、それらの動作のみが異なる： &lt;code&gt;remove()&lt;/code&gt; メソッドはしばらくの間、例外をスロー &lt;code&gt;poll()&lt;/code&gt; メソッドの戻り値 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16aaa4fa2dee4f0e0c1d205d7849d692a73afd79" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;readablebytechannel#read(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method that reads bytes from the channel into a buffer; similarly, the &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method that writes bytes from a buffer to the channel. The &lt;a href=&quot;bytechannel&quot;&gt;&lt;code&gt;ByteChannel&lt;/code&gt;&lt;/a&gt; interface unifies these two interfaces for the common case of channels that can both read and write bytes. The &lt;a href=&quot;seekablebytechannel&quot;&gt;&lt;code&gt;SeekableByteChannel&lt;/code&gt;&lt;/a&gt; interface extends the &lt;code&gt;ByteChannel&lt;/code&gt; interface with methods to &lt;a href=&quot;seekablebytechannel#position()&quot;&gt;&lt;code&gt;query&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#position(long)&quot;&gt;&lt;code&gt;modify&lt;/code&gt;&lt;/a&gt; the channel's current position, and its &lt;a href=&quot;seekablebytechannel#size()&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; の&lt;/a&gt;インタフェースを指定し&lt;a href=&quot;readablebytechannel#read(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;バッファへのチャネルからバイトを読み取る方法。同様に、&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;インターフェイスは、バッファからチャネルにバイトを書き込む&lt;a href=&quot;writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;メソッドを指定します。&lt;a href=&quot;bytechannel&quot;&gt; &lt;code&gt;ByteChannel&lt;/code&gt; の&lt;/a&gt;インターフェースは、読み出しと書き込みの両方がバイトができるチャネルの一般的なケースのためにこれら二つのインタフェースを統一します。&lt;a href=&quot;seekablebytechannel&quot;&gt; &lt;code&gt;SeekableByteChannel&lt;/code&gt; の&lt;/a&gt;インターフェースは延び &lt;code&gt;ByteChannel&lt;/code&gt; のにメソッドとのインターフェースを&lt;a href=&quot;seekablebytechannel#position()&quot;&gt; &lt;code&gt;query&lt;/code&gt; &lt;/a&gt;し、&lt;a href=&quot;seekablebytechannel#position(long)&quot;&gt; &lt;code&gt;modify&lt;/code&gt; &lt;/a&gt;チャネルの現在位置、およびその&lt;a href=&quot;seekablebytechannel#size()&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78e6516c0dec9e8c202d246bc450ed434c84f25b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;readablebytechannel#read-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method that reads bytes from the channel into a buffer; similarly, the &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method that writes bytes from a buffer to the channel. The &lt;a href=&quot;bytechannel&quot;&gt;&lt;code&gt;ByteChannel&lt;/code&gt;&lt;/a&gt; interface unifies these two interfaces for the common case of channels that can both read and write bytes. The &lt;a href=&quot;seekablebytechannel&quot;&gt;&lt;code&gt;SeekableByteChannel&lt;/code&gt;&lt;/a&gt; interface extends the &lt;code&gt;ByteChannel&lt;/code&gt; interface with methods to &lt;a href=&quot;seekablebytechannel#position--&quot;&gt;&lt;code&gt;query&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt;&lt;code&gt;modify&lt;/code&gt;&lt;/a&gt; the channel's current position, and its &lt;a href=&quot;seekablebytechannel#size--&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; の&lt;/a&gt;インタフェースを指定し&lt;a href=&quot;readablebytechannel#read-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;バッファへのチャネルからバイトを読み取る方法。同様に、&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;インターフェースは、バッファーからチャネルにバイトを書き込む&lt;a href=&quot;writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;メソッドを指定します。&lt;a href=&quot;bytechannel&quot;&gt; &lt;code&gt;ByteChannel&lt;/code&gt; の&lt;/a&gt;インターフェースは、読み出しと書き込みの両方がバイトができるチャネルの一般的なケースのためにこれら二つのインタフェースを統一します。&lt;a href=&quot;seekablebytechannel&quot;&gt; &lt;code&gt;SeekableByteChannel&lt;/code&gt; の&lt;/a&gt;インターフェースは延び &lt;code&gt;ByteChannel&lt;/code&gt; のにメソッドとのインターフェースを&lt;a href=&quot;seekablebytechannel#position--&quot;&gt; &lt;code&gt;query&lt;/code&gt; &lt;/a&gt;し、&lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt; &lt;code&gt;modify&lt;/code&gt; &lt;/a&gt;チャネルの現在位置、およびその&lt;a href=&quot;seekablebytechannel#size--&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c2ccfc4344d98344bac10a3d0beeebc75678f34" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;readwritelock&quot;&gt;&lt;code&gt;ReadWriteLock&lt;/code&gt;&lt;/a&gt; interface similarly defines locks that may be shared among readers but are exclusive to writers. Only a single implementation, &lt;a href=&quot;reentrantreadwritelock&quot;&gt;&lt;code&gt;ReentrantReadWriteLock&lt;/code&gt;&lt;/a&gt;, is provided, since it covers most standard usage contexts. But programmers may create their own implementations to cover nonstandard requirements.</source>
          <target state="translated">&lt;a href=&quot;readwritelock&quot;&gt; &lt;code&gt;ReadWriteLock&lt;/code&gt; の&lt;/a&gt;インターフェースは、同様に、読者の間で共有が、作家に排他的であることができるロックを定義します。ほとんどの標準的な使用コンテキストをカバーするため、単一の実装である&lt;a href=&quot;reentrantreadwritelock&quot;&gt; &lt;code&gt;ReentrantReadWriteLock&lt;/code&gt; &lt;/a&gt;のみが提供されます。ただし、プログラマーは非標準の要件をカバーするために独自の実装を作成する場合があります。</target>
        </trans-unit>
        <trans-unit id="fdf44d4882f2dcfdfc588519320608f9984766c1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;&lt;code&gt;ResolverStyle&lt;/code&gt;&lt;/a&gt; is an enum that offers three different approaches, strict, smart and lenient. The smart option is the default. It can be set using &lt;a href=&quot;#withResolverStyle(java.time.format.ResolverStyle)&quot;&gt;&lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt; &lt;code&gt;ResolverStyle&lt;/code&gt; は&lt;/a&gt;申し出3つの異なるアプローチ、厳格な、スマートかつ寛大その列挙型です。スマートオプションがデフォルトです。&lt;a href=&quot;#withResolverStyle(java.time.format.ResolverStyle)&quot;&gt; &lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt; &lt;/a&gt;を使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="ccb2a8fa5c45fda8065dbaad7a3c71bba458a361" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;&lt;code&gt;ResolverStyle&lt;/code&gt;&lt;/a&gt; is an enum that offers three different approaches, strict, smart and lenient. The smart option is the default. It can be set using &lt;a href=&quot;datetimeformatter#withResolverStyle-java.time.format.ResolverStyle-&quot;&gt;&lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt; &lt;code&gt;ResolverStyle&lt;/code&gt; は&lt;/a&gt;申し出3つの異なるアプローチ、厳格な、スマートかつ寛大その列挙型です。スマートオプションがデフォルトです。これは&lt;a href=&quot;datetimeformatter#withResolverStyle-java.time.format.ResolverStyle-&quot;&gt; &lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt; &lt;/a&gt;を使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="230eb0b70762cd391eb1aba658c2338c39426288" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:59' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond()&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt;リゾルバのスタイルは、&lt;/a&gt;インスタントの解析には影響を与えません。「24:00」の1日の終わりの時間は、翌日の開始時に深夜として処理されます。「23:59:59」のうるう秒時間はある程度処理されます。詳細については、&lt;a href=&quot;datetimeformatter#parsedLeapSecond()&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a61c3fe4bcefb9096a8ca84cf773684b1d6df713" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:59' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt;リゾルバのスタイルは、&lt;/a&gt;インスタントの解析には影響を与えません。終業時刻「24:00」は翌日の午前零時として扱います。うるう秒の「23:59:59」はある程度処理されます。詳細については、&lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5158dacdde311d782c14bbee2d65ed5bcc2d0e9a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:60' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond()&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt;リゾルバのスタイルは、&lt;/a&gt;インスタントの解析には影響を与えません。「24:00」の1日の終わりの時間は、翌日の開始時に深夜として処理されます。「23:59:60」のうるう秒時間はある程度処理されます。詳細については、&lt;a href=&quot;datetimeformatter#parsedLeapSecond()&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ffbf4748dbac126c5220a08777eb15c9fdb0572e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:60' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt;リゾルバのスタイルは、&lt;/a&gt;インスタントの解析には影響を与えません。終業時刻「24:00」は翌日の午前零時として扱います。「23:59:60」のうるう秒時間はある程度処理されます。詳細については、&lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c81588aa28a1eb4f1a2581775076c1ff69d4b5a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; class provides information necessary to perform the bundle loading process by the &lt;code&gt;getBundle&lt;/code&gt; factory methods that take a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instance. You can implement your own subclass in order to enable non-standard resource bundle formats, change the search strategy, or define caching parameters. Refer to the descriptions of the class and the &lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt;&lt;code&gt;getBundle&lt;/code&gt;&lt;/a&gt; factory method for details.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; の&lt;/a&gt;クラスは、バンドルによってロード処理を実行するために必要な情報提供 &lt;code&gt;getBundle&lt;/code&gt; の取るファクトリメソッド &lt;code&gt;ResourceBundle.Control&lt;/code&gt; インスタンス。非標準のリソースバンドル形式を有効にしたり、検索戦略を変更したり、キャッシュパラメータを定義したりするために、独自のサブクラスを実装できます。詳細については、クラスの説明と&lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt; &lt;code&gt;getBundle&lt;/code&gt; &lt;/a&gt;ファクトリメソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="844b2132f1798e9d55cc9c339a4149469ad05e5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; class provides information necessary to perform the bundle loading process by the &lt;code&gt;getBundle&lt;/code&gt; factory methods that take a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instance. You can implement your own subclass in order to enable non-standard resource bundle formats, change the search strategy, or define caching parameters. Refer to the descriptions of the class and the &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt;&lt;code&gt;getBundle&lt;/code&gt;&lt;/a&gt; factory method for details.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; の&lt;/a&gt;クラスは、バンドルによってロード処理を実行するために必要な情報提供 &lt;code&gt;getBundle&lt;/code&gt; の取るファクトリメソッド &lt;code&gt;ResourceBundle.Control&lt;/code&gt; インスタンス。独自のサブクラスを実装して、非標準のリソースバンドル形式を有効にしたり、検索戦略を変更したり、キャッシュパラメーターを定義したりできます。詳細については、クラスの説明と&lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt; &lt;code&gt;getBundle&lt;/code&gt; &lt;/a&gt;ファクトリメソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="e57c3b809c8cee0138874cbd67eaba73e85e11c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getCandidateLocales(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;control.getCandidateLocales&lt;/code&gt;&lt;/a&gt; method is called with the target locale to get a list of &lt;em&gt;candidate &lt;code&gt;Locale&lt;/code&gt;s&lt;/em&gt; for which resource bundles are searched.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getCandidateLocales(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;control.getCandidateLocales&lt;/code&gt; の&lt;/a&gt;方法は、のリストを取得するために、ターゲットロケールと呼ばれる&lt;em&gt;候補 &lt;code&gt;Locale&lt;/code&gt; の&lt;/em&gt;リソースバンドルが検索されるために。</target>
        </trans-unit>
        <trans-unit id="5b1b140c56a442f57e62e38c4c78a04d61105b58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;control.getCandidateLocales&lt;/code&gt;&lt;/a&gt; method is called with the target locale to get a list of &lt;em&gt;candidate &lt;code&gt;Locale&lt;/code&gt;s&lt;/em&gt; for which resource bundles are searched.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;control.getCandidateLocales&lt;/code&gt; の&lt;/a&gt;方法は、のリストを取得するために、ターゲットロケールと呼ばれる&lt;em&gt;候補 &lt;code&gt;Locale&lt;/code&gt; の&lt;/em&gt;リソースバンドルが検索されるために。</target>
        </trans-unit>
        <trans-unit id="9db79ac6c90a6417df850016832ced248481b912" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFallbackLocale(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;control.getFallbackLocale&lt;/code&gt;&lt;/a&gt; method is called to get a fallback locale (alternative to the current target locale) to try further finding a resource bundle. If the method returns a non-null locale, it becomes the next target locale and the loading process starts over from Step 3. Otherwise, if a base bundle was found and put on hold in a previous Step 5, it is returned to the caller now. Otherwise, a MissingResourceException is thrown.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getFallbackLocale(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;control.getFallbackLocale&lt;/code&gt; の&lt;/a&gt;方法は、リソースバンドルを見つけ、さらにしようとする（現在のターゲットロケールの代替）フォールバックロケールを取得するために呼び出されます。メソッドがnull以外のロケールを返す場合、それは次のターゲットロケールになり、ロードプロセスはステップ3からやり直します。それ以外の場合、ベースバンドルが見つかり、前のステップ5で保留にされた場合、呼び出し元に返されます。今。それ以外の場合は、MissingResourceExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="772adc8499f04f3dfcd1f7ee081e85fbe1b93725" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;control.getFallbackLocale&lt;/code&gt;&lt;/a&gt; method is called to get a fallback locale (alternative to the current target locale) to try further finding a resource bundle. If the method returns a non-null locale, it becomes the next target locale and the loading process starts over from Step 3. Otherwise, if a base bundle was found and put on hold in a previous Step 5, it is returned to the caller now. Otherwise, a MissingResourceException is thrown.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;control.getFallbackLocale&lt;/code&gt; の&lt;/a&gt;方法は、リソースバンドルを見つけ、さらにしようとする（現在のターゲットロケールの代替）フォールバックロケールを取得するために呼び出されます。メソッドがnull以外のロケールを返す場合、それは次のターゲットロケールになり、ロードプロセスはステップ3からやり直します。それ以外の場合、ベースバンドルが見つかり、前のステップ5で保留にされた場合は、呼び出し元に返されます。今。それ以外の場合は、MissingResourceExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="c5fbacfc9b01c70d6e8b2d6dde797d3664eec031" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFormats(java.lang.String)&quot;&gt;&lt;code&gt;control.getFormats&lt;/code&gt;&lt;/a&gt; method is called to get resource bundle formats to produce bundle or resource names. The strings &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; designate class-based and &lt;a href=&quot;propertyresourcebundle&quot;&gt;property&lt;/a&gt;-based resource bundles, respectively. Other strings starting with &lt;code&gt;&quot;java.&quot;&lt;/code&gt; are reserved for future extensions and must not be used for application-defined formats. Other strings designate application-defined formats.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getFormats(java.lang.String)&quot;&gt; &lt;code&gt;control.getFormats&lt;/code&gt; の&lt;/a&gt;方法は、農産物のバンドルまたはリソース名にリソースバンドル形式を取得するために呼び出されます。文字列 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; および &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 、それぞれクラスベースおよび&lt;a href=&quot;propertyresourcebundle&quot;&gt;プロパティ&lt;/a&gt;ベースのリソースバンドルを示します。 &lt;code&gt;&quot;java.&quot;&lt;/code&gt; 始まるその他の文字列。将来の拡張用に予約されており、アプリケーション定義の形式には使用しないでください。他の文字列は、アプリケーション定義の形式を示します。</target>
        </trans-unit>
        <trans-unit id="635f440f4fb0dc3df8028007964f525ee541d99c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFormats-java.lang.String-&quot;&gt;&lt;code&gt;control.getFormats&lt;/code&gt;&lt;/a&gt; method is called to get resource bundle formats to produce bundle or resource names. The strings &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; designate class-based and &lt;a href=&quot;propertyresourcebundle&quot;&gt;property&lt;/a&gt;-based resource bundles, respectively. Other strings starting with &lt;code&gt;&quot;java.&quot;&lt;/code&gt; are reserved for future extensions and must not be used for application-defined formats. Other strings designate application-defined formats.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getFormats-java.lang.String-&quot;&gt; &lt;code&gt;control.getFormats&lt;/code&gt; の&lt;/a&gt;方法は、農産物のバンドルまたはリソース名にリソースバンドル形式を取得するために呼び出されます。文字列 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; および &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 、それぞれクラスベースおよび&lt;a href=&quot;propertyresourcebundle&quot;&gt;プロパティ&lt;/a&gt;ベースのリソースバンドルを指定します。 &lt;code&gt;&quot;java.&quot;&lt;/code&gt; 始まるその他の文字列。将来の拡張用に予約されており、アプリケーション定義の形式には使用しないでください。その他の文字列は、アプリケーション定義の形式を指定します。</target>
        </trans-unit>
        <trans-unit id="098517283c774eeba3b3b15f041e0be79bde4704" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)&quot;&gt;&lt;code&gt;control.newBundle&lt;/code&gt;&lt;/a&gt; method is called to instantiate a &lt;code&gt;ResourceBundle&lt;/code&gt; for the base bundle name, a candidate locale, and a format. (Refer to the note on the cache lookup below.) This step is iterated over all combinations of the candidate locales and formats until the &lt;code&gt;newBundle&lt;/code&gt; method returns a &lt;code&gt;ResourceBundle&lt;/code&gt; instance or the iteration has used up all the combinations. For example, if the candidate locales are &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt;, &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; and &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; and the formats are &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;, then the following is the sequence of locale-format combinations to be used to call &lt;code&gt;control.newBundle&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)&quot;&gt; &lt;code&gt;control.newBundle&lt;/code&gt; &lt;/a&gt;方法をインスタンス化するために呼び出され &lt;code&gt;ResourceBundle&lt;/code&gt; ベースバンドル名、候補ロケール、およびフォーマットのために。 （以下のキャッシュルックアップに関する注記を参照してください。）このステップは、 &lt;code&gt;newBundle&lt;/code&gt; メソッドが &lt;code&gt;ResourceBundle&lt;/code&gt; インスタンスを返すか、反復によってすべての組み合わせが使い果たされるまで、候補ロケールとフォーマットのすべての組み合わせに対して繰り返されます。たとえば、候補ロケールが &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt; 、 &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; 、 &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; で、形式が &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; の場合、次に、呼び出しに使用されるロケール形式の組み合わせのシーケンスを示します。 &lt;code&gt;control.newBundle&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="143061f5a7fc551c0ad375aa5616ef6082a571b7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt;&lt;code&gt;control.newBundle&lt;/code&gt;&lt;/a&gt; method is called to instantiate a &lt;code&gt;ResourceBundle&lt;/code&gt; for the base bundle name, a candidate locale, and a format. (Refer to the note on the cache lookup below.) This step is iterated over all combinations of the candidate locales and formats until the &lt;code&gt;newBundle&lt;/code&gt; method returns a &lt;code&gt;ResourceBundle&lt;/code&gt; instance or the iteration has used up all the combinations. For example, if the candidate locales are &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt;, &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; and &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; and the formats are &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;, then the following is the sequence of locale-format combinations to be used to call &lt;code&gt;control.newBundle&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt; &lt;code&gt;control.newBundle&lt;/code&gt; &lt;/a&gt;方法をインスタンス化するために呼び出され &lt;code&gt;ResourceBundle&lt;/code&gt; ベースバンドル名、候補ロケール、およびフォーマットのために。 （以下のキャッシュルックアップに関する注記を参照してください。）この手順は、 &lt;code&gt;newBundle&lt;/code&gt; メソッドが &lt;code&gt;ResourceBundle&lt;/code&gt; インスタンスを返すか、反復がすべての組み合わせを使い果たすまで、候補ロケールとフォーマットのすべての組み合わせに対して繰り返されます。たとえば、候補ロケールが &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt; 、 &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; および &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; であり、フォーマットが &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; および &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; の場合、次に、呼び出しに使用されるロケール形式の組み合わせのシーケンスは次のとおりです &lt;code&gt;control.newBundle&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a415f074984a8725314b75563b370d9ae6b46c38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sasl&quot;&gt;&lt;code&gt;Sasl&lt;/code&gt;&lt;/a&gt; class includes several well-known property names (For example, &lt;a href=&quot;sasl#QOP&quot;&gt;&lt;code&gt;Sasl.QOP&lt;/code&gt;&lt;/a&gt;). A SASL provider can support other properties which are specific to the vendor and/or a mechanism.</source>
          <target state="translated">&lt;a href=&quot;sasl&quot;&gt; &lt;code&gt;Sasl&lt;/code&gt; の&lt;/a&gt;クラス（例えば、いくつかのよく知られたプロパティ名含む&lt;a href=&quot;sasl#QOP&quot;&gt; &lt;code&gt;Sasl.QOP&lt;/code&gt; を&lt;/a&gt;）。SASLプロバイダーは、ベンダーやメカニズムに固有の他のプロパティをサポートできます。</target>
        </trans-unit>
        <trans-unit id="257e05e9fa65e14e315705646288980e33146c06" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;saxresult&quot;&gt;&lt;code&gt;SAXResult&lt;/code&gt;&lt;/a&gt; class allows the setting of a &lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; to be the receiver of SAX2 events from the transformation.</source>
          <target state="translated">&lt;a href=&quot;saxresult&quot;&gt; &lt;code&gt;SAXResult&lt;/code&gt; の&lt;/a&gt;クラスは、設定可能&lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt;変換からSAX2イベントの受信機であること。</target>
        </trans-unit>
        <trans-unit id="a6dfb34cc4dd4b24effdf12adfef647af75d6cc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;saxsource&quot;&gt;&lt;code&gt;SAXSource&lt;/code&gt;&lt;/a&gt; class allows the setting of an &lt;a href=&quot;../../../../org/xml/sax/xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; to be used for pulling parse events, and an &lt;a href=&quot;../../../../org/xml/sax/inputsource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; that may be used to specify the SAX source.</source>
          <target state="translated">&lt;a href=&quot;saxsource&quot;&gt; &lt;code&gt;SAXSource&lt;/code&gt; の&lt;/a&gt;クラスは、設定可能&lt;a href=&quot;../../../../org/xml/sax/xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; が&lt;/a&gt;解析イベントを引っ張るために使用される、そして&lt;a href=&quot;../../../../org/xml/sax/inputsource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt; SAXソースを指定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="6686fec400ee70f3fbed9514abdaf5cffbf56153" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;saxtransformerfactory&quot;&gt;&lt;code&gt;SAXTransformerFactory&lt;/code&gt;&lt;/a&gt; extends &lt;a href=&quot;../transformerfactory&quot;&gt;&lt;code&gt;TransformerFactory&lt;/code&gt;&lt;/a&gt; to provide factory methods for creating &lt;a href=&quot;templateshandler&quot;&gt;&lt;code&gt;TemplatesHandler&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;transformerhandler&quot;&gt;&lt;code&gt;TransformerHandler&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../../../org/xml/sax/xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;saxtransformerfactory&quot;&gt; &lt;code&gt;SAXTransformerFactory&lt;/code&gt; は&lt;/a&gt;延び&lt;a href=&quot;../transformerfactory&quot;&gt; &lt;code&gt;TransformerFactory&lt;/code&gt; のを&lt;/a&gt;作成するためのファクトリメソッドを提供する&lt;a href=&quot;templateshandler&quot;&gt; &lt;code&gt;TemplatesHandler&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;transformerhandler&quot;&gt; &lt;code&gt;TransformerHandler&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../../../../org/xml/sax/xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; のの&lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="c2c462293ffae4c2b2f44a5989d27d11ce31aec4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;saxtransformerfactory#newXMLFilter(javax.xml.transform.Source)&quot;&gt;&lt;code&gt;SAXTransformerFactory.newXMLFilter(javax.xml.transform.Source)&lt;/code&gt;&lt;/a&gt; method allows the creation of a &lt;a href=&quot;../../../../org/xml/sax/xmlfilter&quot;&gt;&lt;code&gt;XMLFilter&lt;/code&gt;&lt;/a&gt;, which encapsulates the SAX2 notion of a &quot;pull&quot; transformation. The resulting &lt;code&gt;XMLFilters&lt;/code&gt; can be chained together so that a series of transformations can happen with one's output becoming another's input.</source>
          <target state="translated">&lt;a href=&quot;saxtransformerfactory#newXMLFilter(javax.xml.transform.Source)&quot;&gt; &lt;code&gt;SAXTransformerFactory.newXMLFilter(javax.xml.transform.Source)&lt;/code&gt; &lt;/a&gt;方法は、作成可能&lt;a href=&quot;../../../../org/xml/sax/xmlfilter&quot;&gt; &lt;code&gt;XMLFilter&lt;/code&gt; &lt;/a&gt;「プル」変換のSAX2の概念をカプセル化し、。結果の &lt;code&gt;XMLFilters&lt;/code&gt; をチェーン化して、ある出力が別の入力になる一連の変換を実行できます。</target>
        </trans-unit>
        <trans-unit id="10eb909f57a9444304efbbfb4230e34732f3b9b9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scanner#findInLine-java.lang.String-&quot;&gt;&lt;code&gt;findInLine(java.lang.String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;scanner#findWithinHorizon-java.lang.String-int-&quot;&gt;&lt;code&gt;findWithinHorizon(java.lang.String, int)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;scanner#skip-java.util.regex.Pattern-&quot;&gt;&lt;code&gt;skip(java.util.regex.Pattern)&lt;/code&gt;&lt;/a&gt; methods operate independently of the delimiter pattern. These methods will attempt to match the specified pattern with no regard to delimiters in the input and thus can be used in special circumstances where delimiters are not relevant. These methods may block waiting for more input.</source>
          <target state="translated">&lt;a href=&quot;scanner#findInLine-java.lang.String-&quot;&gt; &lt;code&gt;findInLine(java.lang.String)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;scanner#findWithinHorizon-java.lang.String-int-&quot;&gt; &lt;code&gt;findWithinHorizon(java.lang.String, int)&lt;/code&gt; &lt;/a&gt;、及び&lt;a href=&quot;scanner#skip-java.util.regex.Pattern-&quot;&gt; &lt;code&gt;skip(java.util.regex.Pattern)&lt;/code&gt; &lt;/a&gt;メソッドは、独立して、区切り文字パターンの動作。これらのメソッドは、入力内の区切り文字に関係なく、指定されたパターンに一致しようとするため、区切り文字が関係しない特別な状況で使用できます。これらのメソッドは、追加の入力の待機をブロックする場合があります。</target>
        </trans-unit>
        <trans-unit id="348c28db8b27cc9f18897b329f01ff9a7695b683" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scanner#next--&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;scanner#hasNext--&quot;&gt;&lt;code&gt;hasNext()&lt;/code&gt;&lt;/a&gt; methods and their primitive-type companion methods (such as &lt;a href=&quot;scanner#nextInt--&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;scanner#hasNextInt--&quot;&gt;&lt;code&gt;hasNextInt()&lt;/code&gt;&lt;/a&gt;) first skip any input that matches the delimiter pattern, and then attempt to return the next token. Both &lt;code&gt;hasNext&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt; methods may block waiting for further input. Whether a &lt;code&gt;hasNext&lt;/code&gt; method blocks has no connection to whether or not its associated &lt;code&gt;next&lt;/code&gt; method will block.</source>
          <target state="translated">&lt;a href=&quot;scanner#next--&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;scanner#hasNext--&quot;&gt; &lt;code&gt;hasNext()&lt;/code&gt; &lt;/a&gt;メソッドおよびそのプリミティブ型のコンパニオンメソッド（例えば、&lt;a href=&quot;scanner#nextInt--&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;scanner#hasNextInt--&quot;&gt; &lt;code&gt;hasNextInt()&lt;/code&gt; &lt;/a&gt;）最初の区切り文字パターンに一致する入力をスキップし、次のトークンを返すことを試みます。 &lt;code&gt;hasNext&lt;/code&gt; メソッドと &lt;code&gt;next&lt;/code&gt; メソッドの両方が、それ以上の入力を待つのをブロックする場合があります。かどうか &lt;code&gt;hasNext&lt;/code&gt; メソッドブロックその関連するかどうかへの接続がありません &lt;code&gt;next&lt;/code&gt; メソッドがブロックされています。</target>
        </trans-unit>
        <trans-unit id="6036eaba06f3b7844114d0429c543f3e66646467" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scatteringbytechannel&quot;&gt;&lt;code&gt;ScatteringByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel&quot;&gt;&lt;code&gt;GatheringByteChannel&lt;/code&gt;&lt;/a&gt; interfaces extend the &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interfaces, respectively, adding &lt;a href=&quot;scatteringbytechannel#read(java.nio.ByteBuffer%5B%5D,int,int)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel#write(java.nio.ByteBuffer%5B%5D,int,int)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods that take a sequence of buffers rather than a single buffer.</source>
          <target state="translated">&lt;a href=&quot;scatteringbytechannel&quot;&gt; &lt;code&gt;ScatteringByteChannel&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;gatheringbytechannel&quot;&gt; &lt;code&gt;GatheringByteChannel&lt;/code&gt; &lt;/a&gt;インタフェースは延び&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;追加、それぞれ、インターフェイスを&lt;a href=&quot;scatteringbytechannel#read(java.nio.ByteBuffer%5B%5D,int,int)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;gatheringbytechannel#write(java.nio.ByteBuffer%5B%5D,int,int)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;バッファの配列ではなく、単一のバッファを取る方法を。</target>
        </trans-unit>
        <trans-unit id="21137fd05c9ebb8f424df8db033cf26db6b1b34b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scatteringbytechannel&quot;&gt;&lt;code&gt;ScatteringByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel&quot;&gt;&lt;code&gt;GatheringByteChannel&lt;/code&gt;&lt;/a&gt; interfaces extend the &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interfaces, respectively, adding &lt;a href=&quot;scatteringbytechannel#read-java.nio.ByteBuffer:A-int-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel#write-java.nio.ByteBuffer:A-int-int-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods that take a sequence of buffers rather than a single buffer.</source>
          <target state="translated">&lt;a href=&quot;scatteringbytechannel&quot;&gt; &lt;code&gt;ScatteringByteChannel&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;gatheringbytechannel&quot;&gt; &lt;code&gt;GatheringByteChannel&lt;/code&gt; &lt;/a&gt;インタフェースは延び&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;追加、それぞれ、インターフェイスを&lt;a href=&quot;scatteringbytechannel#read-java.nio.ByteBuffer:A-int-int-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;gatheringbytechannel#write-java.nio.ByteBuffer:A-int-int-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;バッファの配列ではなく、単一のバッファを取る方法を。</target>
        </trans-unit>
        <trans-unit id="494bd3af96f36fb31c00ac9c7e7c9c2375b3ac83" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; class is not thread-safe. In other words, it is the application's responsibility to ensure that at most one thread is using a &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; object at any given moment. Implementations are encouraged to mark methods as &lt;code&gt;synchronized&lt;/code&gt; to protect themselves from broken clients.</source>
          <target state="translated">&lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt;クラスはスレッドセーフではありません。つまり、任意の時点で最大1つのスレッドが&lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt;オブジェクトを使用していることを確認するのはアプリケーションの責任です。実装は、壊れたクライアントから自身を保護するために、メソッドを &lt;code&gt;synchronized&lt;/code&gt; としてマークすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="07cb8eb23ad928e28854d19141c00b90056152a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#truncate-long-&quot;&gt;&lt;code&gt;truncate&lt;/code&gt;&lt;/a&gt; methods which do not otherwise have a value to return are specified to return the channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">&lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;seekablebytechannel#truncate-long-&quot;&gt; &lt;code&gt;truncate&lt;/code&gt; &lt;/a&gt;戻り値を返さないものな方法は、それらが呼び出される時にチャンネルを返すように指定されています。これにより、メソッド呼び出しを連鎖させることができます。このインターフェースの実装は、戻り値の型を特殊化して、実装クラスでのメソッド呼び出しをチェーンできるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="90a51280115503dcf1e905f60856aff6ffe205d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;selector#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method synchronizes on the selector and all three key sets in the same order as in a selection operation.</source>
          <target state="translated">&lt;a href=&quot;selector#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法は、セレクタと選択動作と同じ順序ですべての3つのキーセットに同期させます。</target>
        </trans-unit>
        <trans-unit id="990f0f43a18226a7e173ee1e81b5cdf77566b089" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;socketoption#name()&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; of each socket option defined by this class is its field name.</source>
          <target state="translated">&lt;a href=&quot;socketoption#name()&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;このクラスで定義された各ソケットオプションのは、そのフィールド名です。</target>
        </trans-unit>
        <trans-unit id="d451b4a4efe00d347a54add6cb0af761ff11af1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;socketoption#name--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; of each socket option defined by this class is its field name.</source>
          <target state="translated">&lt;a href=&quot;socketoption#name--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;このクラスで定義された各ソケットオプションのは、そのフィールド名です。</target>
        </trans-unit>
        <trans-unit id="2dce7e060eed43bca6d4e88ec9e2f86ac29def42" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stackwalker.option&quot;&gt;&lt;em&gt;stack walking options&lt;/em&gt;&lt;/a&gt; of a &lt;code&gt;StackWalker&lt;/code&gt; determines the information of &lt;a href=&quot;stackwalker.stackframe&quot;&gt;&lt;code&gt;StackFrame&lt;/code&gt;&lt;/a&gt; objects to be returned. By default, stack frames of the reflection API and implementation classes are &lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt;hidden&lt;/a&gt; and &lt;code&gt;StackFrame&lt;/code&gt;s have the class name and method name available but not the &lt;a href=&quot;stackwalker.stackframe#getDeclaringClass()&quot;&gt;&lt;code&gt;Class reference&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;StackWalker&lt;/code&gt; の&lt;a href=&quot;stackwalker.option&quot;&gt;&lt;em&gt;スタックウォーキングオプション&lt;/em&gt;&lt;/a&gt;は、返される&lt;a href=&quot;stackwalker.stackframe&quot;&gt; &lt;code&gt;StackFrame&lt;/code&gt; &lt;/a&gt;オブジェクトの情報を決定します。デフォルトでは、リフレクションAPIと実装クラスのスタックフレームは&lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt;非表示になって&lt;/a&gt;おり、 &lt;code&gt;StackFrame&lt;/code&gt; にはクラス名とメソッド名がありますが、&lt;a href=&quot;stackwalker.stackframe#getDeclaringClass()&quot;&gt; &lt;code&gt;Class reference&lt;/code&gt; &lt;/a&gt;はありません。</target>
        </trans-unit>
        <trans-unit id="277deff41b631710526c3be6a8bce3fa73e5a350" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardcharsets&quot;&gt;&lt;code&gt;StandardCharsets&lt;/code&gt;&lt;/a&gt; class defines constants for each of the standard charsets.</source>
          <target state="translated">&lt;a href=&quot;standardcharsets&quot;&gt; &lt;code&gt;StandardCharsets&lt;/code&gt; の&lt;/a&gt;クラスは、標準文字セットのそれぞれの定数を定義します。</target>
        </trans-unit>
        <trans-unit id="a8dd9a9fec27603d78ed08617b0bdfc6d7c235da" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardcopyoption&quot;&gt;&lt;code&gt;StandardCopyOption&lt;/code&gt;&lt;/a&gt; enumeration type defines the</source>
          <target state="translated">&lt;a href=&quot;standardcopyoption&quot;&gt; &lt;code&gt;StandardCopyOption&lt;/code&gt; の&lt;/a&gt;列挙型定義</target>
        </trans-unit>
        <trans-unit id="80c99f93b54d2734b5913704c3b7bc58ac7bd819" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardopenoption&quot;&gt;&lt;code&gt;StandardOpenOption&lt;/code&gt;&lt;/a&gt; enumeration type defines the</source>
          <target state="translated">&lt;a href=&quot;standardopenoption&quot;&gt; &lt;code&gt;StandardOpenOption&lt;/code&gt; の&lt;/a&gt;列挙型定義</target>
        </trans-unit>
        <trans-unit id="72295d2f416f8a8448218b4363525cc646e9da94" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardopenoption#SYNC&quot;&gt;&lt;code&gt;SYNC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;standardopenoption#DSYNC&quot;&gt;&lt;code&gt;DSYNC&lt;/code&gt;&lt;/a&gt; options are used when opening a file to require that updates to the file are written synchronously to the underlying storage device. In the case of the default provider, and the file resides on a local storage device, and the &lt;a href=&quot;../channels/seekablebytechannel&quot;&gt;&lt;code&gt;seekable&lt;/code&gt;&lt;/a&gt; channel is connected to a file that was opened with one of these options, then an invocation of the &lt;a href=&quot;../channels/writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method is only guaranteed to return when all changes made to the file by that invocation have been written to the device. These options are useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made. Whether this guarantee is possible with other &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; implementations is provider specific.</source>
          <target state="translated">&lt;a href=&quot;standardopenoption#SYNC&quot;&gt; &lt;code&gt;SYNC&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;standardopenoption#DSYNC&quot;&gt; &lt;code&gt;DSYNC&lt;/code&gt; &lt;/a&gt;ファイルへの更新を元になるストレージデバイスと同時に書き込まれていることを必要とするファイルを開くときのオプションが使用されています。デフォルトのプロバイダーの場合、ファイルがローカルストレージデバイスにあり、&lt;a href=&quot;../channels/seekablebytechannel&quot;&gt; &lt;code&gt;seekable&lt;/code&gt; &lt;/a&gt;チャネルがこれらのオプションのいずれかで開かれたファイルに接続されている場合、&lt;a href=&quot;../channels/writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しはすべての場合にのみ返されることが保証されますその呼び出しによってファイルに加えられた変更は、デバイスに書き込まれています。これらのオプションは、システムがクラッシュした場合に重要な情報が失われないようにするために役立ちます。ファイルがローカルデバイスに存在しない場合、そのような保証は行われません。この保証が他の&lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;可能かどうか 実装はプロバイダー固有です。</target>
        </trans-unit>
        <trans-unit id="3d74cb4498be8f94cc5abccf92b10b83b8240700" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardopenoption#SYNC&quot;&gt;&lt;code&gt;SYNC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;standardopenoption#DSYNC&quot;&gt;&lt;code&gt;DSYNC&lt;/code&gt;&lt;/a&gt; options are used when opening a file to require that updates to the file are written synchronously to the underlying storage device. In the case of the default provider, and the file resides on a local storage device, and the &lt;a href=&quot;../channels/seekablebytechannel&quot;&gt;&lt;code&gt;seekable&lt;/code&gt;&lt;/a&gt; channel is connected to a file that was opened with one of these options, then an invocation of the &lt;a href=&quot;../channels/writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method is only guaranteed to return when all changes made to the file by that invocation have been written to the device. These options are useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made. Whether this guarantee is possible with other &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; implementations is provider specific.</source>
          <target state="translated">&lt;a href=&quot;standardopenoption#SYNC&quot;&gt; &lt;code&gt;SYNC&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;standardopenoption#DSYNC&quot;&gt; &lt;code&gt;DSYNC&lt;/code&gt; &lt;/a&gt;ファイルへの更新を元になるストレージデバイスと同時に書き込まれていることを必要とするファイルを開くときのオプションが使用されています。デフォルトプロバイダーの場合、ファイルがローカルストレージデバイスにあり、&lt;a href=&quot;../channels/seekablebytechannel&quot;&gt; &lt;code&gt;seekable&lt;/code&gt; &lt;/a&gt;チャネルがこれらのオプションのいずれかで開かれたファイルに接続されている場合、&lt;a href=&quot;../channels/writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しは、すべての場合にのみ戻ることが保証されますその呼び出しによってファイルに加えられた変更は、デバイスに書き込まれました。これらのオプションは、システムがクラッシュした場合に重要な情報が失われないようにするのに役立ちます。ファイルがローカルデバイスにない場合、そのような保証はありません。この保証が他の&lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;可能かどうか 実装はプロバイダー固有です。</target>
        </trans-unit>
        <trans-unit id="666585fcad66c94e607b17b82eebdf605f5fff6b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;staxresult&quot;&gt;&lt;code&gt;StAXResult&lt;/code&gt;&lt;/a&gt; class encapsulates a &lt;a href=&quot;../../stream/xmlstreamwriter&quot;&gt;&lt;code&gt;XMLStreamWriter&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../stream/xmleventwriter&quot;&gt;&lt;code&gt;XMLEventWriter&lt;/code&gt;&lt;/a&gt; and can be used as an output where a &lt;a href=&quot;../result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; object is accepted.</source>
          <target state="translated">&lt;a href=&quot;staxresult&quot;&gt; &lt;code&gt;StAXResult&lt;/code&gt; の&lt;/a&gt;クラスは、カプセル化し&lt;a href=&quot;../../stream/xmlstreamwriter&quot;&gt; &lt;code&gt;XMLStreamWriter&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../stream/xmleventwriter&quot;&gt; &lt;code&gt;XMLEventWriter&lt;/code&gt; を&lt;/a&gt;出力として使用することができる&lt;a href=&quot;../result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt;オブジェクトが受け入れられます。</target>
        </trans-unit>
        <trans-unit id="9128fc3bc1eb1ff4d95279e4cf6f6224d3cc8961" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;staxsource&quot;&gt;&lt;code&gt;StAXSource&lt;/code&gt;&lt;/a&gt; class encapsulates a &lt;a href=&quot;../../stream/xmlstreamreader&quot;&gt;&lt;code&gt;XMLStreamReader&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../stream/xmleventreader&quot;&gt;&lt;code&gt;XMLEventReader&lt;/code&gt;&lt;/a&gt; and can be used as an input where a &lt;a href=&quot;../source&quot;&gt;&lt;code&gt;Source&lt;/code&gt;&lt;/a&gt; object is accepted.</source>
          <target state="translated">&lt;a href=&quot;staxsource&quot;&gt; &lt;code&gt;StAXSource&lt;/code&gt; がの&lt;/a&gt;クラスは、カプセル化&lt;a href=&quot;../../stream/xmlstreamreader&quot;&gt; &lt;code&gt;XMLStreamReader&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../stream/xmleventreader&quot;&gt; &lt;code&gt;XMLEventReader&lt;/code&gt; のを&lt;/a&gt;入力として使用することができる&lt;a href=&quot;../source&quot;&gt; &lt;code&gt;Source&lt;/code&gt; &lt;/a&gt;オブジェクトが受け入れられます。</target>
        </trans-unit>
        <trans-unit id="15e9da6bf2a3f858875a9def12dcdd45826455c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;streamresult&quot;&gt;&lt;code&gt;StreamResult&lt;/code&gt;&lt;/a&gt; class provides methods for specifying &lt;a href=&quot;../../../../../java.base/java/io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../../../java.base/java/io/writer&quot;&gt;&lt;code&gt;Writer&lt;/code&gt;&lt;/a&gt;, or an output system ID, as the output of the transformation result.</source>
          <target state="translated">&lt;a href=&quot;streamresult&quot;&gt; &lt;code&gt;StreamResult&lt;/code&gt; &lt;/a&gt;クラスが指定するための方法を提供&lt;a href=&quot;../../../../../java.base/java/io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../../../java.base/java/io/writer&quot;&gt; &lt;code&gt;Writer&lt;/code&gt; &lt;/a&gt;変換結果の出力として、または出力システムID。</target>
        </trans-unit>
        <trans-unit id="b73a57897e92c91dc3e9229806ea2a5d957e1fcf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;streamsource&quot;&gt;&lt;code&gt;StreamSource&lt;/code&gt;&lt;/a&gt; class provides methods for specifying &lt;a href=&quot;../../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; input, &lt;a href=&quot;../../../../../java.base/java/io/reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; input, and URL input in the form of strings. Even if an input stream or reader is specified as the source, &lt;a href=&quot;streamsource#setSystemId(java.lang.String)&quot;&gt;&lt;code&gt;StreamSource.setSystemId(java.lang.String)&lt;/code&gt;&lt;/a&gt; should still be called, so that the transformer can know from where it should resolve relative URIs. The public identifier is always optional: if the application writer includes one, it will be provided as part of the &lt;a href=&quot;../sourcelocator&quot;&gt;&lt;code&gt;SourceLocator&lt;/code&gt;&lt;/a&gt; information.</source>
          <target state="translated">&lt;a href=&quot;streamsource&quot;&gt; &lt;code&gt;StreamSource&lt;/code&gt; &lt;/a&gt;クラスは、指定するための方法を提供&lt;a href=&quot;../../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;入力、&lt;a href=&quot;../../../../../java.base/java/io/reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt;文字列の形式で入力し、URLを入力します。入力ストリームまたはリーダーがソースとして指定されている場合&lt;a href=&quot;streamsource#setSystemId(java.lang.String)&quot;&gt; &lt;code&gt;StreamSource.setSystemId(java.lang.String)&lt;/code&gt; &lt;/a&gt;、StreamSource.setSystemId（java.lang.String）を呼び出す必要があります。これにより、トランスフォーマーは相対URIをどこから解決するかを知ることができます。公開識別子は常にオプションです。アプリケーション作成者に公開識別子が含まれている場合は、&lt;a href=&quot;../sourcelocator&quot;&gt; &lt;code&gt;SourceLocator&lt;/code&gt; &lt;/a&gt;情報の一部として提供されます。</target>
        </trans-unit>
        <trans-unit id="e9d9db88422c56d37b5213b36ef7275470166809" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;system#exit(int)&quot;&gt;&lt;code&gt;System.exit&lt;/code&gt;&lt;/a&gt; method is the conventional and convenient means of invoking this method.</source>
          <target state="translated">&lt;a href=&quot;system#exit(int)&quot;&gt; &lt;code&gt;System.exit&lt;/code&gt; の&lt;/a&gt;メソッドは、このメソッドを呼び出すのが一般的で便利です。</target>
        </trans-unit>
        <trans-unit id="3dbae129ef5d648f47d6fba81499acd845594518" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;templateshandler&quot;&gt;&lt;code&gt;TemplatesHandler&lt;/code&gt;&lt;/a&gt; interface allows the creation of &lt;a href=&quot;../templates&quot;&gt;&lt;code&gt;Templates&lt;/code&gt;&lt;/a&gt; objects from SAX2 parse events. Once the &lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; events are complete, the Templates object may be obtained from &lt;a href=&quot;templateshandler#getTemplates()&quot;&gt;&lt;code&gt;TemplatesHandler.getTemplates()&lt;/code&gt;&lt;/a&gt;. Note that &lt;a href=&quot;templateshandler#setSystemId(java.lang.String)&quot;&gt;&lt;code&gt;TemplatesHandler.setSystemId(java.lang.String)&lt;/code&gt;&lt;/a&gt; should normally be called in order to establish a base system ID from which relative URLs may be resolved.</source>
          <target state="translated">&lt;a href=&quot;templateshandler&quot;&gt; &lt;code&gt;TemplatesHandler&lt;/code&gt; の&lt;/a&gt;インタフェースは、の作成ができます&lt;a href=&quot;../templates&quot;&gt; &lt;code&gt;Templates&lt;/code&gt; &lt;/a&gt; SAX2構文解析イベントからオブジェクト。一旦&lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt;イベントが完了し、テンプレートオブジェクトから得ることができる&lt;a href=&quot;templateshandler#getTemplates()&quot;&gt; &lt;code&gt;TemplatesHandler.getTemplates()&lt;/code&gt; &lt;/a&gt;。相対URLを解決できる基本システムIDを確立するには、通常、&lt;a href=&quot;templateshandler#setSystemId(java.lang.String)&quot;&gt; &lt;code&gt;TemplatesHandler.setSystemId(java.lang.String)&lt;/code&gt; &lt;/a&gt;を呼び出す必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="65632e3304ce8a7430971d425d4ea6f5d7041352" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;Epoch Day count&lt;/code&gt;&lt;/a&gt; is a simple incrementing count of days where day 0 is 1970-01-01 (ISO). This definition is the same for all chronologies, enabling conversion.</source>
          <target state="translated">&lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;Epoch Day count&lt;/code&gt; &lt;/a&gt; 0日が1970年1月1日である日の簡単なインクリメント数（ISO）です。この定義はすべての年代順に同じであり、変換を可能にします。</target>
        </trans-unit>
        <trans-unit id="5fe0b0a62926df5a411799abadea12e26424d776" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt; class contains a standard set of adjusters, available as static methods. These include:</source>
          <target state="translated">&lt;a href=&quot;temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; の&lt;/a&gt;クラスには、静的メソッドとして利用できる調整の標準セットが含まれています。これらには以下が含まれます：</target>
        </trans-unit>
        <trans-unit id="8ee0d1305c6ed8ac73c630b5768c7fd55bebbf44" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface models amounts of relative time.</source>
          <target state="translated">&lt;a href=&quot;temporalamount&quot;&gt; &lt;code&gt;TemporalAmount&lt;/code&gt; の&lt;/a&gt;インターフェースモデルは相対的な時間の量。</target>
        </trans-unit>
        <trans-unit id="d603049ad9b812aec8a4461ab35e3fdfaf4b0a9c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt; interface provides another mechanism for querying temporal objects. That interface is limited to returning a &lt;code&gt;long&lt;/code&gt;. By contrast, queries can return any type.</source>
          <target state="translated">&lt;a href=&quot;temporalfield&quot;&gt; &lt;code&gt;TemporalField&lt;/code&gt; の&lt;/a&gt;インタフェースは、時間オブジェクトを照会するための別の機構を提供します。そのインターフェースは &lt;code&gt;long&lt;/code&gt; を返すことに限定されています。対照的に、クエリは任意のタイプを返すことができます。</target>
        </trans-unit>
        <trans-unit id="49d039ee836590f5a2bcdafdec86bf461e5a5432" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadgroup#uncaughtException(java.lang.Thread,java.lang.Throwable)&quot;&gt;top-level error handler&lt;/a&gt; does not print out a message if &lt;code&gt;ThreadDeath&lt;/code&gt; is never caught.</source>
          <target state="translated">&lt;a href=&quot;threadgroup#uncaughtException(java.lang.Thread,java.lang.Throwable)&quot;&gt;トップレベルのエラーハンドラは、&lt;/a&gt;場合にメッセージをプリントアウトしていない &lt;code&gt;ThreadDeath&lt;/code&gt; キャッチされることはありません。</target>
        </trans-unit>
        <trans-unit id="da0f2490753f88004eeaececd77ced0e3d26d3b9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadgroup#uncaughtException-java.lang.Thread-java.lang.Throwable-&quot;&gt;top-level error handler&lt;/a&gt; does not print out a message if &lt;code&gt;ThreadDeath&lt;/code&gt; is never caught.</source>
          <target state="translated">&lt;a href=&quot;threadgroup#uncaughtException-java.lang.Thread-java.lang.Throwable-&quot;&gt;トップレベルのエラーハンドラは、&lt;/a&gt;場合にメッセージをプリントアウトしていない &lt;code&gt;ThreadDeath&lt;/code&gt; キャッチされることはありません。</target>
        </trans-unit>
        <trans-unit id="90e1d925999c201c8dd68d8ed236e67286b0b5ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadmxbean#isThreadContentionMonitoringSupported--&quot;&gt;&lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports thread contention monitoring. The thread contention monitoring is disabled by default. The &lt;a href=&quot;threadmxbean#setThreadContentionMonitoringEnabled-boolean-&quot;&gt;&lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt;&lt;/a&gt; method can be used to enable thread contention monitoring.</source>
          <target state="translated">&lt;a href=&quot;threadmxbean#isThreadContentionMonitoringSupported--&quot;&gt; &lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンがスレッドコンテンション監視をサポートしているかどうかを決定するために使用することができます。スレッド競合監視はデフォルトで無効になっています。&lt;a href=&quot;threadmxbean#setThreadContentionMonitoringEnabled-boolean-&quot;&gt; &lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt; &lt;/a&gt;メソッドは、スレッドコンテンション監視を可能にするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="ed0642ec4c21f239693011a0d808e0a9a5551dee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadmxbean#isThreadCpuTimeSupported--&quot;&gt;&lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for any thread. The &lt;a href=&quot;threadmxbean#isCurrentThreadCpuTimeSupported--&quot;&gt;&lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for the current thread. A Java virtual machine implementation that supports CPU time measurement for any thread will also support that for the current thread.</source>
          <target state="translated">&lt;a href=&quot;threadmxbean#isThreadCpuTimeSupported--&quot;&gt; &lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンのサポートは、任意のスレッドのCPU時間を測定するかどうかを決定するために使用することができます。&lt;a href=&quot;threadmxbean#isCurrentThreadCpuTimeSupported--&quot;&gt; &lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンのサポートは、現在のスレッドのCPU時間を測定するかどうかを決定するために使用することができます。任意のスレッドのCPU時間測定をサポートするJava仮想マシン実装は、現在のスレッドのCPU時間測定もサポートします。</target>
        </trans-unit>
        <trans-unit id="126515b65a295f042897ee7ca24299c10de24ac2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;throwable#fillInStackTrace--&quot;&gt;&lt;code&gt;fillInStackTrace()&lt;/code&gt;&lt;/a&gt; method is called to initialize the stack trace data in the newly created throwable.</source>
          <target state="translated">&lt;a href=&quot;throwable#fillInStackTrace--&quot;&gt; &lt;code&gt;fillInStackTrace()&lt;/code&gt; &lt;/a&gt;メソッドは、新しく作成されたスロー可能オブジェクト内のスタックトレースデータを初期化するために呼び出されます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
