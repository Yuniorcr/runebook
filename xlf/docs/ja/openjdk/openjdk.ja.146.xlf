<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="40a18158059c50e97a80d7cded4b26a35829619e" translate="yes" xml:space="preserve">
          <source>The bitmask used to store the state of the button.</source>
          <target state="translated">ボタンの状態を格納するために使用されるビットマスク。</target>
        </trans-unit>
        <trans-unit id="08ac5f0c28c0fc877f224f69bf1274cdc2e32ae8" translate="yes" xml:space="preserve">
          <source>The block decrement adjustment type.</source>
          <target state="translated">ブロックデクリメント調整タイプです。</target>
        </trans-unit>
        <trans-unit id="ca440f22a5a9cd19a85c1fbb7925221a160e4d25" translate="yes" xml:space="preserve">
          <source>The block increment adjustment type.</source>
          <target state="translated">ブロックインクリメント調整タイプです。</target>
        </trans-unit>
        <trans-unit id="e09cad1c828643fa611127bbd432dc5a9c875056" translate="yes" xml:space="preserve">
          <source>The block increment is the value that is added or subtracted when the user activates the block increment area of the scroll bar, generally through a mouse or keyboard gesture that the scroll bar receives as an adjustment event. The block increment must be greater than zero.</source>
          <target state="translated">ブロックインクリメントは、ユーザーがスクロールバーのブロックインクリメント領域をアクティブにしたときに加算または減算される値であり、一般的には、スクロールバーが調整イベントとして受け取るマウスまたはキーボードのジェスチャーによって行われます。ブロックインクリメントはゼロより大きくなければなりません。</target>
        </trans-unit>
        <trans-unit id="773a4f0006dc919dc3a563e208b9c1d2e567273c" translate="yes" xml:space="preserve">
          <source>The block increment is the value that is added or subtracted when the user activates the block increment area of the scroll bar, generally through a mouse or keyboard gesture that the scroll bar receives as an adjustment event. The block increment must be greater than zero. Attempts to set the block increment to a value lower than 1 will result in a value of 1 being set.</source>
          <target state="translated">ブロックインクリメントは、ユーザーがスクロールバーのブロックインクリメント領域をアクティブにしたときに加算または減算される値であり、一般的には、スクロールバーが調整イベントとして受け取るマウスまたはキーボードのジェスチャーによって行われます。ブロックインクリメントはゼロより大きくなければなりません。ブロックインクリメントを1よりも小さい値に設定しようとすると、1が設定されます。</target>
        </trans-unit>
        <trans-unit id="e21e431f736e80c157423cb9f9c120cb4852cdaa" translate="yes" xml:space="preserve">
          <source>The block names supported by &lt;code&gt;Pattern&lt;/code&gt; are the valid block names accepted and defined by &lt;a href=&quot;../../lang/character.unicodeblock#forName(java.lang.String)&quot;&gt;&lt;code&gt;UnicodeBlock.forName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The block names supported by &lt;code&gt;Pattern&lt;/code&gt; are the valid block names accepted and defined by &lt;a href=&quot;../../lang/character.unicodeblock#forName(java.lang.String)&quot;&gt; &lt;code&gt;UnicodeBlock.forName&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5cb03212f5537c4a0b8ecd683f1339aea4a69290" translate="yes" xml:space="preserve">
          <source>The block names supported by &lt;code&gt;Pattern&lt;/code&gt; are the valid block names accepted and defined by &lt;a href=&quot;../../lang/character.unicodeblock#forName-java.lang.String-&quot;&gt;&lt;code&gt;UnicodeBlock.forName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Pattern&lt;/code&gt; サポートされているブロック名は、&lt;a href=&quot;../../lang/character.unicodeblock#forName-java.lang.String-&quot;&gt; &lt;code&gt;UnicodeBlock.forName&lt;/code&gt; で&lt;/a&gt;受け入れられ、定義されている有効なブロック名です。</target>
        </trans-unit>
        <trans-unit id="c9151392927171f66644b3edff8dd9467431d179" translate="yes" xml:space="preserve">
          <source>The blocking-mode lock object</source>
          <target state="translated">ブロッキングモードロックオブジェクト</target>
        </trans-unit>
        <trans-unit id="b0ff8720d7de8db2a1e787173bbd032dae056cd2" translate="yes" xml:space="preserve">
          <source>The blue color component for the specified pixel, as an int.</source>
          <target state="translated">指定されたピクセルの青色成分を int で表します.</target>
        </trans-unit>
        <trans-unit id="c424f9ac5bce10e99f2c2880b959e00aa4b64679" translate="yes" xml:space="preserve">
          <source>The body of the default method is specified to be the code above.</source>
          <target state="translated">デフォルトメソッドのボディは上記のコードを指定します。</target>
        </trans-unit>
        <trans-unit id="11a6748648cf5b00019dda6cf54e2eb8f3bf8d61" translate="yes" xml:space="preserve">
          <source>The body of the method or constructor declaration performs potentially unsafe operations, such as an assignment to an element of the variable arity parameter's array that generates an unchecked warning. Some unsafe operations do not trigger an unchecked warning. For example, the aliasing in</source>
          <target state="translated">メソッドやコンストラクタの宣言の本体では、変数 arity パラメータの配列の要素への代入など、潜在的に安全でない操作が行われており、それによって未チェックの警告が発生します。安全でない操作の中には、チェックなしの警告が発生しないものもあります。例えば</target>
        </trans-unit>
        <trans-unit id="6ad923cbb344e2e5e611fd37a12eedc4c5f4a4e9" translate="yes" xml:space="preserve">
          <source>The body return type &lt;code&gt;V&lt;/code&gt;, if non-&lt;code&gt;void&lt;/code&gt;, determines the type of an additional state variable of the loop. The body must both accept a leading parameter and return a value of this type &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">The body return type &lt;code&gt;V&lt;/code&gt; , if non- &lt;code&gt;void&lt;/code&gt; , determines the type of an additional state variable of the loop. The body must both accept a leading parameter and return a value of this type &lt;code&gt;V&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05a04824adae3459a5749bc49bce848c38594456" translate="yes" xml:space="preserve">
          <source>The body return type &lt;code&gt;V&lt;/code&gt;, if non-&lt;code&gt;void&lt;/code&gt;, determines the type of an additional state variable of the loop. The body must both accept and return a value of this type &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">The body return type &lt;code&gt;V&lt;/code&gt; , if non- &lt;code&gt;void&lt;/code&gt; , determines the type of an additional state variable of the loop. The body must both accept and return a value of this type &lt;code&gt;V&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc5cacddafbf4617cb6384dfa5cef5ad6f2c7e48" translate="yes" xml:space="preserve">
          <source>The bold action identifier</source>
          <target state="translated">太字のアクション識別子</target>
        </trans-unit>
        <trans-unit id="cc34b91e6655b483b0c37fb242b5853482d9c7dc" translate="yes" xml:space="preserve">
          <source>The bold style constant.</source>
          <target state="translated">大胆なスタイルの定数。</target>
        </trans-unit>
        <trans-unit id="45103bdc1a08a97e0e5d23fc553ce45c7d1a9686" translate="yes" xml:space="preserve">
          <source>The bold style constant. This can be combined with the other style constants (except PLAIN) for mixed styles.</source>
          <target state="translated">太字スタイル定数。これは、他のスタイル定数(PLAINを除く)と組み合わせて、混合スタイルのために使用することができます。</target>
        </trans-unit>
        <trans-unit id="c983fae9d373293fdb9dcc71dcb1886ffc8d3444" translate="yes" xml:space="preserve">
          <source>The boot layer</source>
          <target state="translated">ブート層</target>
        </trans-unit>
        <trans-unit id="b4e40444f8fc152eb16ab3eaf704c842ce4a6de9" translate="yes" xml:space="preserve">
          <source>The bootstrap method is invoked on at least three values:</source>
          <target state="translated">ブートストラップメソッドは、少なくとも3つの値に対して呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9951d470ae0e4c4b7cfefa1e69971ec5f7c86a2d" translate="yes" xml:space="preserve">
          <source>The bootstrap method is then invoked, as if by &lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt;&lt;code&gt;MethodHandle.invoke&lt;/code&gt;&lt;/a&gt;, with the following arguments:</source>
          <target state="translated">次に、&lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt; &lt;code&gt;MethodHandle.invoke&lt;/code&gt; &lt;/a&gt;のように、次の引数を使用してブートストラップメソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8adecc2101d7005121e4be92f59dfde092b68067" translate="yes" xml:space="preserve">
          <source>The bootstrap methods in this class will throw a &lt;code&gt;NullPointerException&lt;/code&gt; for any reference argument that is &lt;code&gt;null&lt;/code&gt;, unless the argument is specified to be unused or specified to accept a &lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">このクラスのブートストラップメソッドは、引数が未使用として指定されているか、 &lt;code&gt;null&lt;/code&gt; 値を受け入れるように指定されていない限り、 &lt;code&gt;null&lt;/code&gt; の参照引数に対して &lt;code&gt;NullPointerException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="17214954c4d069cd73851a29ded58baa4c28bfd7" translate="yes" xml:space="preserve">
          <source>The border insets.</source>
          <target state="translated">ボーダーのインセット。</target>
        </trans-unit>
        <trans-unit id="7f42745bac99508b34591e3dd40062b50391d75e" translate="yes" xml:space="preserve">
          <source>The border painter associated for the given state, or null if none could be found.</source>
          <target state="translated">指定された状態に関連付けられたボーダーペインター。</target>
        </trans-unit>
        <trans-unit id="30781226a7a43d08fe81fa069815460c63b16d26" translate="yes" xml:space="preserve">
          <source>The border.</source>
          <target state="translated">境界線。</target>
        </trans-unit>
        <trans-unit id="cfae179ea42664d99bcc9a1d13b597aac8360806" translate="yes" xml:space="preserve">
          <source>The bottom input tray in the printer.</source>
          <target state="translated">プリンターの底面の入力トレイ。</target>
        </trans-unit>
        <trans-unit id="d7d10d54e8a4f3158d26dcf8670aced46674b3f7" translate="yes" xml:space="preserve">
          <source>The bottom inset of the border.</source>
          <target state="translated">ボーダーの下側のインセット。</target>
        </trans-unit>
        <trans-unit id="ce460ef4959b06b1d25e366288616b130e7eaec7" translate="yes" xml:space="preserve">
          <source>The bound property name for the focus accelerator.</source>
          <target state="translated">フォーカスアクセラレータのバインドプロパティ名。</target>
        </trans-unit>
        <trans-unit id="b8c68a2dc0225e92f68a9a3acbd002d846eea3db" translate="yes" xml:space="preserve">
          <source>The bounding box of the source &lt;code&gt;Image&lt;/code&gt; is transformed from user space into device space using the current &lt;code&gt;Transform&lt;/code&gt;. Note that the result of transforming the bounding box does not necessarily result in a rectangular region in device space.</source>
          <target state="translated">ソース &lt;code&gt;Image&lt;/code&gt; のバウンディングボックスは、現在の &lt;code&gt;Transform&lt;/code&gt; を使用してユーザースペースからデバイススペースに変換されます。バウンディングボックスを変換した結果が、必ずしもデバイス空間に長方形の領域になるとは限らないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="6ce7dadffb10f6fef9c66938fc65a30ab5367cb0" translate="yes" xml:space="preserve">
          <source>The bounds is the smallest rectangle that completely contains the outline of the glyph. The bounds rectangle is relative to the glyph's origin. The left-side bearing is the distance from the glyph origin to the left of its bounds rectangle. If the left-side bearing is negative, part of the glyph is drawn to the left of its origin. The right-side bearing is the distance from the right side of the bounds rectangle to the next glyph origin (the origin plus the advance). If negative, part of the glyph is drawn to the right of the next glyph's origin. Note that the bounds does not necessarily enclose all the pixels affected when rendering the glyph, because of rasterization and pixel adjustment effects.</source>
          <target state="translated">境界はグリフの輪郭を完全に含む最小の矩形です。境界矩形はグリフの原点からの相対的なものです。左辺ベアリングは、グリフの原点からその境界矩形の左辺までの距離です。左辺の位置が負の場合は、 グ リ フの一部がその原点の左に描かれます。右側方角は、 境界矩形の右側から次のグリフ原点までの距離です (原点に前進分を足したもの)。負の場合は、グリフの一部が次のグリフの原点の右側に描かれます。ラスタライズやピクセル調整の効果のため、グリフをレンダリングする際に影響を受けるすべてのピクセルを境界線が囲むとは限らないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="adc0456f9705ad31063dbf76bd8f9343136ad752" translate="yes" xml:space="preserve">
          <source>The bounds of this &lt;code&gt;Polygon&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Polygon&lt;/code&gt; の境界。</target>
        </trans-unit>
        <trans-unit id="8ae28136b7309fc0eb4097babab217f5419985e0" translate="yes" xml:space="preserve">
          <source>The bounds of this &lt;code&gt;Polygon&lt;/code&gt;. This value can be null.</source>
          <target state="translated">この &lt;code&gt;Polygon&lt;/code&gt; の境界。この値はnullにすることができます。</target>
        </trans-unit>
        <trans-unit id="1f35df29ba4c1a160c83b07bf44b764120a88cd3" translate="yes" xml:space="preserve">
          <source>The buffer is then cleared.</source>
          <target state="translated">その後、バッファはクリアされます。</target>
        </trans-unit>
        <trans-unit id="5267ec36b82dc0a5af7120233d80dbb488a5d391" translate="yes" xml:space="preserve">
          <source>The buffer of a tick.</source>
          <target state="translated">ティックのバッファ。</target>
        </trans-unit>
        <trans-unit id="0f3d2700605180a4ce193dca76f09b0360fed042" translate="yes" xml:space="preserve">
          <source>The buffer size is specified in bytes, but must represent an integral number of sample frames. Invoking this method with a requested buffer size that does not meet this requirement may result in an &lt;code&gt;IllegalArgumentException&lt;/code&gt;. The actual buffer size for the open line may differ from the requested buffer size. The value actually set may be queried by subsequently calling &lt;a href=&quot;dataline#getBufferSize()&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">バッファサイズはバイト単位で指定されますが、サンプルフレームの整数を表す必要があります。この要件を満たさない要求されたバッファサイズでこのメソッドを呼び出すと、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; が発生する可能性があります。オープンラインの実際のバッファサイズは、要求されたバッファサイズと異なる場合があります。実際に設定された値は、後で&lt;a href=&quot;dataline#getBufferSize()&quot;&gt; &lt;code&gt;DataLine.getBufferSize()&lt;/code&gt; を&lt;/a&gt;呼び出すことによって照会できます。</target>
        </trans-unit>
        <trans-unit id="076f9653bc023708e8c501870ffc3cb05502a95e" translate="yes" xml:space="preserve">
          <source>The buffer size is specified in bytes, but must represent an integral number of sample frames. Invoking this method with a requested buffer size that does not meet this requirement may result in an &lt;code&gt;IllegalArgumentException&lt;/code&gt;. The actual buffer size for the open line may differ from the requested buffer size. The value actually set may be queried by subsequently calling &lt;a href=&quot;dataline#getBufferSize()&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バッファサイズはバイト単位で指定されますが、サンプルフレームの整数を表す必要があります。この要件を満たさない要求されたバッファサイズでこのメソッドを呼び出すと、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; が発生する可能性があります。オープンラインの実際のバッファサイズは、要求されたバッファサイズと異なる場合があります。実際に設定された値は、後で&lt;a href=&quot;dataline#getBufferSize()&quot;&gt; &lt;code&gt;DataLine.getBufferSize()&lt;/code&gt; を&lt;/a&gt;呼び出すことによって照会できます。</target>
        </trans-unit>
        <trans-unit id="4670c8f1cdd40c40a543b1304e16c713499f0559" translate="yes" xml:space="preserve">
          <source>The buffer size is specified in bytes, but must represent an integral number of sample frames. Invoking this method with a requested buffer size that does not meet this requirement may result in an IllegalArgumentException. The actual buffer size for the open line may differ from the requested buffer size. The value actually set may be queried by subsequently calling &lt;code&gt;&lt;a href=&quot;dataline#getBufferSize--&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">バッファサイズはバイト単位で指定されますが、サンプルフレームの整数を表す必要があります。この要件を満たさない要求されたバッファーサイズでこのメソッドを呼び出すと、IllegalArgumentExceptionが発生する場合があります。オープンラインの実際のバッファサイズは、要求されたバッファサイズと異なる場合があります。実際に設定された値は、続いて &lt;code&gt;&lt;a href=&quot;dataline#getBufferSize--&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; を呼び出すことによってクエリできます。</target>
        </trans-unit>
        <trans-unit id="e3a95695f406bd68814b7b0423d52d5848fcda1f" translate="yes" xml:space="preserve">
          <source>The buffer size is specified in bytes, but must represent an integral number of sample frames. Invoking this method with a requested buffer size that does not meet this requirement may result in an IllegalArgumentException. The actual buffer size for the open line may differ from the requested buffer size. The value actually set may be queried by subsequently calling &lt;code&gt;&lt;a href=&quot;dataline#getBufferSize--&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">バッファサイズはバイト単位で指定されますが、サンプルフレームの整数を表す必要があります。この要件を満たさない要求されたバッファーサイズでこのメソッドを呼び出すと、IllegalArgumentExceptionが発生する場合があります。オープンラインの実際のバッファサイズは、要求されたバッファサイズと異なる場合があります。実際に設定された値は、後で &lt;code&gt;&lt;a href=&quot;dataline#getBufferSize--&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; を呼び出すことによってクエリできます。</target>
        </trans-unit>
        <trans-unit id="42d1dfe3731b63adb6323291fca8d27b9b77331b" translate="yes" xml:space="preserve">
          <source>The buffer size may be specified, or the default size may be accepted. The default is large enough for most purposes.</source>
          <target state="translated">バッファサイズを指定することもできますし、デフォルトのサイズを受け入れることもできます。デフォルトは、ほとんどの目的には十分な大きさです。</target>
        </trans-unit>
        <trans-unit id="8a55978bf856d3f06d55763ba0704c1f8c5f25a9" translate="yes" xml:space="preserve">
          <source>The buffer size may be specified, or the default size may be used. The default is large enough for most purposes.</source>
          <target state="translated">バッファサイズを指定することもできますし、デフォルトのサイズを使用することもできます。デフォルトは、ほとんどの目的には十分な大きさです。</target>
        </trans-unit>
        <trans-unit id="1c56115fb03b357a45a3b5437c42a2575ecdf670" translate="yes" xml:space="preserve">
          <source>The buffer where data is stored.</source>
          <target state="translated">データが格納されているバッファ。</target>
        </trans-unit>
        <trans-unit id="054e837f56115320c3003e3d454659e29001c412" translate="yes" xml:space="preserve">
          <source>The buffer's position is set to the number of bytes copied, rather than to zero, so that an invocation of this method can be followed immediately by an invocation of another relative</source>
          <target state="translated">バッファの位置はゼロではなくコピーされたバイト数に設定されます。</target>
        </trans-unit>
        <trans-unit id="188fa3815ba94bd3d52f1e5d7a2b576e266716ff" translate="yes" xml:space="preserve">
          <source>The buffer's position is set to the number of chars copied, rather than to zero, so that an invocation of this method can be followed immediately by an invocation of another relative</source>
          <target state="translated">バッファの位置はゼロではなくコピーされた文字数に設定されています。</target>
        </trans-unit>
        <trans-unit id="268283661585dc5a43f5d101b5eb0cb7c4bd1ba0" translate="yes" xml:space="preserve">
          <source>The buffer's position is set to the number of doubles copied, rather than to zero, so that an invocation of this method can be followed immediately by an invocation of another relative</source>
          <target state="translated">バッファの位置はゼロではなく、コピーされたダブルスの数に設定されます。</target>
        </trans-unit>
        <trans-unit id="a818e9c80711ad62073fa38012777538062ecb70" translate="yes" xml:space="preserve">
          <source>The buffer's position is set to the number of floats copied, rather than to zero, so that an invocation of this method can be followed immediately by an invocation of another relative</source>
          <target state="translated">バッファの位置はゼロではなく、コピーされたフロートの数に設定されます。</target>
        </trans-unit>
        <trans-unit id="9b9ac4899062f4a8080e7bb42619ee1993a91107" translate="yes" xml:space="preserve">
          <source>The buffer's position is set to the number of ints copied, rather than to zero, so that an invocation of this method can be followed immediately by an invocation of another relative</source>
          <target state="translated">バッファの位置はゼロではなくコピーされたイント数に設定されます。</target>
        </trans-unit>
        <trans-unit id="74b0cc21acda56fdd53c62463623d224a17371a3" translate="yes" xml:space="preserve">
          <source>The buffer's position is set to the number of longs copied, rather than to zero, so that an invocation of this method can be followed immediately by an invocation of another relative</source>
          <target state="translated">バッファの位置はゼロではなく、コピーされたロング数に設定されます。</target>
        </trans-unit>
        <trans-unit id="750514a6ac223b844a07865b20d67f5ea7c24baf" translate="yes" xml:space="preserve">
          <source>The buffer's position is set to the number of shorts copied, rather than to zero, so that an invocation of this method can be followed immediately by an invocation of another relative</source>
          <target state="translated">バッファの位置はゼロではなく、コピーされたショートの数に設定されます。</target>
        </trans-unit>
        <trans-unit id="0ed8fbb1c3f820632b62e90292a556bfb0eaae47" translate="yes" xml:space="preserve">
          <source>The buffering capabilities</source>
          <target state="translated">バッファリング機能</target>
        </trans-unit>
        <trans-unit id="a76b2857d5eedcf4fcf9af3ec043ce6700a4b3cb" translate="yes" xml:space="preserve">
          <source>The buffers are read from, and written to, starting at their current positions. At most &lt;a href=&quot;../buffer#remaining()&quot;&gt;&lt;code&gt;in.remaining()&lt;/code&gt;&lt;/a&gt; bytes will be read and at most &lt;a href=&quot;../buffer#remaining()&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; characters will be written. The buffers' positions will be advanced to reflect the bytes read and the characters written, but their marks and limits will not be modified.</source>
          <target state="translated">バッファは、現在の位置から読み取られ、書き込まれます。最大で&lt;a href=&quot;../buffer#remaining()&quot;&gt; &lt;code&gt;in.remaining()&lt;/code&gt; &lt;/a&gt;バイトが読み取られ、最大で&lt;a href=&quot;../buffer#remaining()&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;文字が書き込まれます。バッファの位置は、読み取られたバイトと書き込まれた文字を反映するように進められますが、それらのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="91ce3e07b95f497eca4ad27872d87d0b79957efb" translate="yes" xml:space="preserve">
          <source>The buffers are read from, and written to, starting at their current positions. At most &lt;a href=&quot;../buffer#remaining()&quot;&gt;&lt;code&gt;in.remaining()&lt;/code&gt;&lt;/a&gt; bytes will be read, and at most &lt;a href=&quot;../buffer#remaining()&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; characters will be written. The buffers' positions will be advanced to reflect the bytes read and the characters written, but their marks and limits will not be modified.</source>
          <target state="translated">バッファは、現在の位置から読み取られ、書き込まれます。最大で&lt;a href=&quot;../buffer#remaining()&quot;&gt; &lt;code&gt;in.remaining()&lt;/code&gt; &lt;/a&gt;バイトが読み取られ、最大で&lt;a href=&quot;../buffer#remaining()&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;文字が書き込まれます。バッファの位置は、読み取られたバイトと書き込まれた文字を反映するように進められますが、それらのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="c84073a1b40a0fce2b3b077f558986fbab072af3" translate="yes" xml:space="preserve">
          <source>The buffers are read from, and written to, starting at their current positions. At most &lt;a href=&quot;../buffer#remaining()&quot;&gt;&lt;code&gt;in.remaining()&lt;/code&gt;&lt;/a&gt; characters will be read and at most &lt;a href=&quot;../buffer#remaining()&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; bytes will be written. The buffers' positions will be advanced to reflect the characters read and the bytes written, but their marks and limits will not be modified.</source>
          <target state="translated">バッファは、現在の位置から読み取られ、書き込まれます。最大で&lt;a href=&quot;../buffer#remaining()&quot;&gt; &lt;code&gt;in.remaining()&lt;/code&gt; &lt;/a&gt;文字が読み取られ、最大で&lt;a href=&quot;../buffer#remaining()&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;バイトが書き込まれます。バッファの位置は、読み取られた文字と書き込まれたバイトを反映するように進められますが、それらのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="b8f9b4cf7ca1d13bbd7775f1178c68819ad41706" translate="yes" xml:space="preserve">
          <source>The buffers are read from, and written to, starting at their current positions. At most &lt;a href=&quot;../buffer#remaining()&quot;&gt;&lt;code&gt;in.remaining()&lt;/code&gt;&lt;/a&gt; characters will be read, and at most &lt;a href=&quot;../buffer#remaining()&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; bytes will be written. The buffers' positions will be advanced to reflect the characters read and the bytes written, but their marks and limits will not be modified.</source>
          <target state="translated">バッファは、現在の位置から読み取られ、書き込まれます。最大で&lt;a href=&quot;../buffer#remaining()&quot;&gt; &lt;code&gt;in.remaining()&lt;/code&gt; &lt;/a&gt;文字が読み取られ、最大で&lt;a href=&quot;../buffer#remaining()&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;バイトが書き込まれます。バッファの位置は、読み取られた文字と書き込まれたバイトを反映するように進められますが、それらのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="293bbf9dbaac98ff56c4b3e964c2a85c882bdba5" translate="yes" xml:space="preserve">
          <source>The buffers are read from, and written to, starting at their current positions. At most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;in.remaining()&lt;/code&gt;&lt;/a&gt; bytes will be read and at most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; characters will be written. The buffers' positions will be advanced to reflect the bytes read and the characters written, but their marks and limits will not be modified.</source>
          <target state="translated">バッファーは、現在の位置から読み取られ、そこに書き込まれます。最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;in.remaining()&lt;/code&gt; &lt;/a&gt;バイトが読み取られ、最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;文字が書き込まれます。バッファーの位置は、読み取られたバイトと書き込まれた文字を反映するように進められますが、それらのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="63913af10c4a2a952523c8a79b63028c30d3d4bb" translate="yes" xml:space="preserve">
          <source>The buffers are read from, and written to, starting at their current positions. At most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;in.remaining()&lt;/code&gt;&lt;/a&gt; bytes will be read, and at most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; characters will be written. The buffers' positions will be advanced to reflect the bytes read and the characters written, but their marks and limits will not be modified.</source>
          <target state="translated">バッファーは、現在の位置から読み取られ、そこに書き込まれます。最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;in.remaining()&lt;/code&gt; &lt;/a&gt;バイトが読み取られ、最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;文字が書き込まれます。バッファーの位置は、読み取られたバイトと書き込まれた文字を反映するように進められますが、それらのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="7ea75e8b0576a0fab591f0e6c8cfa51a7d1af8b0" translate="yes" xml:space="preserve">
          <source>The buffers are read from, and written to, starting at their current positions. At most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;in.remaining()&lt;/code&gt;&lt;/a&gt; characters will be read and at most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; bytes will be written. The buffers' positions will be advanced to reflect the characters read and the bytes written, but their marks and limits will not be modified.</source>
          <target state="translated">バッファーは、現在の位置から読み取られ、そこに書き込まれます。最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;in.remaining()&lt;/code&gt; &lt;/a&gt;文字が読み取られ、最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;バイトが書き込まれます。バッファーの位置は、読み取られた文字と書き込まれたバイトを反映するように進められますが、それらのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="7363ecd6d3a0468acc64ed1a76fb03af75bdb558" translate="yes" xml:space="preserve">
          <source>The buffers are read from, and written to, starting at their current positions. At most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;in.remaining()&lt;/code&gt;&lt;/a&gt; characters will be read, and at most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; bytes will be written. The buffers' positions will be advanced to reflect the characters read and the bytes written, but their marks and limits will not be modified.</source>
          <target state="translated">バッファーは、現在の位置から読み取られ、そこに書き込まれます。最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;in.remaining()&lt;/code&gt; &lt;/a&gt;文字が読み取られ、最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;バイトが書き込まれます。バッファーの位置は、読み取られた文字と書き込まれたバイトを反映するように進められますが、それらのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="0005a7a0f59c8f93ffbf86aec3e2386f246f3c0c" translate="yes" xml:space="preserve">
          <source>The builder can be used to configure per-request state, such as: the request URI, the request method (default is GET unless explicitly set), specific request headers, etc. Each of the setter methods modifies the state of the builder and returns the same instance. The methods are not synchronized and should not be called from multiple threads without external synchronization. The &lt;a href=&quot;#build()&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; method returns a new &lt;code&gt;HttpRequest&lt;/code&gt; each time it is invoked. Once built an &lt;code&gt;
 HttpRequest&lt;/code&gt; is immutable, and can be sent multiple times.</source>
          <target state="translated">ビルダーを使用して、リクエストURI、リクエストメソッド（明示的に設定されていない限りデフォルトはGET）、特定のリクエストヘッダーなど、リクエストごとの状態を構成できます。各セッターメソッドはビルダーの状態を変更し、同じインスタンス。メソッドは同期されないため、外部同期なしで複数のスレッドから呼び出すことはできません。&lt;a href=&quot;#build()&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt;方法は、新しい返す &lt;code&gt;HttpRequest&lt;/code&gt; それが呼び出されるたびに。一度構築されると、 &lt;code&gt; HttpRequest&lt;/code&gt; は不変であり、複数回送信できます。</target>
        </trans-unit>
        <trans-unit id="0d6d45090b38927980128fdfc30c28845132395a" translate="yes" xml:space="preserve">
          <source>The builder can only be installed if the executing thread is allowed (by the security manager's checkSetFactory() method) to do so. Once installed, the builder cannot be replaced.</source>
          <target state="translated">ビルダーは、実行中のスレッドが (セキュリティマネージャの checkSetFactory()メソッドによって)許可されている場合にのみインストールすることができます。一度インストールされると、ビルダを置き換えることはできません。</target>
        </trans-unit>
        <trans-unit id="94162d4cf2c341f565021f495ec547084eb7ab50" translate="yes" xml:space="preserve">
          <source>The builder can only be installed if the executing thread is allowed by the security manager to do so. Once installed, the builder cannot be replaced.</source>
          <target state="translated">ビルダーは、実行中のスレッドがセキュリティ管理者によって許可されている場合にのみ、インストールすることができます。一度インストールされると、ビルダを置き換えることはできません。</target>
        </trans-unit>
        <trans-unit id="f0b725d5619c0e7bf77c36fba4cad953f5d80cf9" translate="yes" xml:space="preserve">
          <source>The builder for an automatic module cannot be used to declare module or service dependences. It also cannot be used to declare any exported or open packages.</source>
          <target state="translated">自動モジュール用のビルダーは、モジュールやサービスの依存関係を宣言するためには使えません。また、エクスポートされたパッケージやオープンパッケージの宣言にも使えません。</target>
        </trans-unit>
        <trans-unit id="554f54568793972ed2310419c981d6a0e3bc6753" translate="yes" xml:space="preserve">
          <source>The builder for an open module cannot be used to declare any open packages.</source>
          <target state="translated">オープンモジュール用のビルダーは、オープンパッケージの宣言には使えません。</target>
        </trans-unit>
        <trans-unit id="be760ed8b2889bc581b1bef89b9c8cbf61fdd1a7" translate="yes" xml:space="preserve">
          <source>The built object</source>
          <target state="translated">ビルドされたオブジェクト</target>
        </trans-unit>
        <trans-unit id="e343b27a869a5ecde5a06f223584b48609e88448" translate="yes" xml:space="preserve">
          <source>The built-in linear gray scale color space.</source>
          <target state="translated">直線的なグレースケールの色空間を内蔵しています。</target>
        </trans-unit>
        <trans-unit id="37a2c933f4668392796de54b4c2a00c581a9b6b0" translate="yes" xml:space="preserve">
          <source>The bulk read operations &lt;a href=&quot;reader#read(char%5B%5D)&quot;&gt;&lt;code&gt;read(char[]) &lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reader#read(char%5B%5D,int,int)&quot;&gt;&lt;code&gt;read(char[], int, int) &lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;reader#read(java.nio.CharBuffer)&quot;&gt;&lt;code&gt;read(java.nio.CharBuffer)&lt;/code&gt;&lt;/a&gt; on the returned object will not read in characters beyond the line bound for each invocation, even if the destination buffer has space for more characters. The &lt;code&gt;Reader&lt;/code&gt;'s &lt;code&gt;read&lt;/code&gt; methods may block if a line bound has not been entered or reached on the console's input device. A line bound is considered to be any one of a line feed (&lt;code&gt;'\n'&lt;/code&gt;), a carriage return (&lt;code&gt;'\r'&lt;/code&gt;), a carriage return followed immediately by a linefeed, or an end of stream.</source>
          <target state="translated">返されたオブジェクトに対する一括読み取り操作&lt;a href=&quot;reader#read(char%5B%5D)&quot;&gt; &lt;code&gt;read(char[]) &lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;reader#read(char%5B%5D,int,int)&quot;&gt; &lt;code&gt;read(char[], int, int) &lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;reader#read(java.nio.CharBuffer)&quot;&gt; &lt;code&gt;read(java.nio.CharBuffer)&lt;/code&gt; &lt;/a&gt;は、各呼び出しにバインドされた行を超える文字を読み取りません。宛先バッファーには、より多くの文字を入れるスペースがあります。 &lt;code&gt;Reader&lt;/code&gt; の &lt;code&gt;read&lt;/code&gt; 拘束ライン入力またはコンソールの入力デバイスに達していない場合の方法はブロックすることがあります。ラインバウンドは、ラインフィード（ &lt;code&gt;'\n'&lt;/code&gt; ）、キャリッジリターン（ &lt;code&gt;'\r'&lt;/code&gt; ）、キャリッジリターンの直後にラインフィードが続く、またはストリームの終了のいずれかと見なされます。</target>
        </trans-unit>
        <trans-unit id="57bc2cca5ed13a9fc84b6171112f0807ef63a7e4" translate="yes" xml:space="preserve">
          <source>The bulk read operations &lt;a href=&quot;reader#read-char:A-&quot;&gt;&lt;code&gt;read(char[]) &lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reader#read-char:A-int-int-&quot;&gt;&lt;code&gt;read(char[], int, int) &lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;reader#read-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;read(java.nio.CharBuffer)&lt;/code&gt;&lt;/a&gt; on the returned object will not read in characters beyond the line bound for each invocation, even if the destination buffer has space for more characters. The &lt;code&gt;Reader&lt;/code&gt;'s &lt;code&gt;read&lt;/code&gt; methods may block if a line bound has not been entered or reached on the console's input device. A line bound is considered to be any one of a line feed (&lt;code&gt;'\n'&lt;/code&gt;), a carriage return (&lt;code&gt;'\r'&lt;/code&gt;), a carriage return followed immediately by a linefeed, or an end of stream.</source>
          <target state="translated">返されたオブジェクトに対する一括読み取り操作&lt;a href=&quot;reader#read-char:A-&quot;&gt; &lt;code&gt;read(char[]) &lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;reader#read-char:A-int-int-&quot;&gt; &lt;code&gt;read(char[], int, int) &lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;reader#read-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;read(java.nio.CharBuffer)&lt;/code&gt; &lt;/a&gt;は、呼び出しごとにバインドされた行を超える文字を読み取りません。宛先バッファには、さらに多くの文字のためのスペースがあります。 &lt;code&gt;Reader&lt;/code&gt; の &lt;code&gt;read&lt;/code&gt; 拘束ライン入力またはコンソールの入力デバイスに達していない場合の方法はブロックすることがあります。ラインバウンドは、ラインフィード（ &lt;code&gt;'\n'&lt;/code&gt; ）、キャリッジリターン（ &lt;code&gt;'\r'&lt;/code&gt; ）、キャリッジリターンの直後にラインフィードが続く、またはストリームの終わりのいずれかと見なされます。</target>
        </trans-unit>
        <trans-unit id="067475d20de825eccf0c1e0b6c1755d01e4ad9ae" translate="yes" xml:space="preserve">
          <source>The bundle name is obtained by calling &lt;a href=&quot;#toBundleName(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;toBundleName(baseName,
 locale)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バンドル名は&lt;a href=&quot;#toBundleName(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;toBundleName(baseName, locale)&lt;/code&gt; &lt;/a&gt;呼び出すことで取得されます。</target>
        </trans-unit>
        <trans-unit id="4906528df4e968c4a2fd97b5d59c3f8587333b5e" translate="yes" xml:space="preserve">
          <source>The bundle name is obtained by calling &lt;a href=&quot;resourcebundle.control#toBundleName-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;toBundleName(baseName,
 locale)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バンドル名は&lt;a href=&quot;resourcebundle.control#toBundleName-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;toBundleName(baseName, locale)&lt;/code&gt; &lt;/a&gt;呼び出すことによって取得されます。</target>
        </trans-unit>
        <trans-unit id="86425cf46dc2c1b45f5201ffd34e95808bf62687" translate="yes" xml:space="preserve">
          <source>The button group that the button belongs to.</source>
          <target state="translated">ボタンが属するボタングループ。</target>
        </trans-unit>
        <trans-unit id="8b1ee1070dd15797865cb3a4bd40925d1f17dcdd" translate="yes" xml:space="preserve">
          <source>The button labeled &lt;code&gt;one&lt;/code&gt; is in the &quot;on&quot; state, and the other two are in the &quot;off&quot; state. In this example, which uses the &lt;code&gt;GridLayout&lt;/code&gt; class, the states of the three check boxes are set independently.</source>
          <target state="translated">&lt;code&gt;one&lt;/code&gt; ラベルが付いたボタンは「オン」状態で、他の2つは「オフ」状態です。 &lt;code&gt;GridLayout&lt;/code&gt; クラスを使用するこの例では、3つのチェックボックスの状態が個別に設定されています。</target>
        </trans-unit>
        <trans-unit id="af0776528051c36883f5d4ccad77bb0a6703bfbb" translate="yes" xml:space="preserve">
          <source>The button model's &lt;code&gt;ActionListener&lt;/code&gt;.</source>
          <target state="translated">ボタンモデルの &lt;code&gt;ActionListener&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45d7f0bc0500e1df69a9f509abae765e43298e8c" translate="yes" xml:space="preserve">
          <source>The button model's &lt;code&gt;ItemListener&lt;/code&gt;.</source>
          <target state="translated">ボタンモデルの &lt;code&gt;ItemListener&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c908cac20b61837bb8aede2a0023cc05a8749c3" translate="yes" xml:space="preserve">
          <source>The button model's &lt;code&gt;changeListener&lt;/code&gt;.</source>
          <target state="translated">ボタンモデルの &lt;code&gt;changeListener&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f845bf91f6f3cd8bc66ff8b453ed6b8a5158316" translate="yes" xml:space="preserve">
          <source>The button that gets activated when the pane has the focus and a UI-specific action like pressing the &lt;b&gt;Enter&lt;/b&gt; key occurs.</source>
          <target state="translated">ペインにフォーカスがあり、&lt;b&gt;Enter&lt;/b&gt;キーを押すなどのUI固有のアクションが発生したときにアクティブになるボタン。</target>
        </trans-unit>
        <trans-unit id="3f92842ca5ff5e5cc61ba710720f050663b78c8e" translate="yes" xml:space="preserve">
          <source>The button's mnemonic.</source>
          <target state="translated">ボタンのニーモニック。</target>
        </trans-unit>
        <trans-unit id="a4a52b4593f9a8a8dd2e70ebe00138c0d2b17c41" translate="yes" xml:space="preserve">
          <source>The byte array referenced by an &lt;code&gt;IIOByteBuffer&lt;/code&gt; will generally be part of an internal data structure belonging to an &lt;code&gt;ImageReader&lt;/code&gt; implementation; its contents should be considered read-only and must not be modified.</source>
          <target state="translated">&lt;code&gt;IIOByteBuffer&lt;/code&gt; によって参照されるバイト配列は、通常、 &lt;code&gt;ImageReader&lt;/code&gt; 実装に属する内部データ構造の一部になります。その内容は読み取り専用と見なされ、変更しないでください。</target>
        </trans-unit>
        <trans-unit id="1355d05c2748f9dfcf75dbdc8ead75958008b92d" translate="yes" xml:space="preserve">
          <source>The byte at the buffer's current position</source>
          <target state="translated">バッファの現在位置のバイト</target>
        </trans-unit>
        <trans-unit id="47ca471c96d31b5f0031a2837a68bf4083a1dc36" translate="yes" xml:space="preserve">
          <source>The byte at the given index</source>
          <target state="translated">指定されたインデックスのバイト</target>
        </trans-unit>
        <trans-unit id="deb4c87efe1222286df56bf2a615595a08fdcbc1" translate="yes" xml:space="preserve">
          <source>The byte buffer is not modified by this method, and no reference to the buffer is retained by the bit set.</source>
          <target state="translated">この方法ではバイトバッファは変更されず、ビットがセットされてもバッファへの参照は保持されません。</target>
        </trans-unit>
        <trans-unit id="63a728366ae9c365dd8b934a38844c6d8865bed5" translate="yes" xml:space="preserve">
          <source>The byte offset into the input source this locator is pointing to or &lt;code&gt;-1&lt;/code&gt; if there is no byte offset available.</source>
          <target state="translated">このロケーターが指している入力ソースへのバイトオフセット、または使用可能なバイトオフセットがない場合は &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ccd18330dd5450f1b6655054edb6878c9c12957" translate="yes" xml:space="preserve">
          <source>The byte order has no effect on the results returned from the &lt;code&gt;readBits&lt;/code&gt; method (or the value written by &lt;code&gt;ImageOutputStream.writeBits&lt;/code&gt;).</source>
          <target state="translated">バイト順序は、 &lt;code&gt;readBits&lt;/code&gt; メソッドから返される結果（または &lt;code&gt;ImageOutputStream.writeBits&lt;/code&gt; によって書き込まれる値）には影響しません。</target>
        </trans-unit>
        <trans-unit id="14aafe7666eb5797f1333016b720d9c302895a7b" translate="yes" xml:space="preserve">
          <source>The byte order is used when reading or writing multibyte values, and when creating buffers that are views of this byte buffer. The order of a newly-created byte buffer is always &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">バイトオーダーは、マルチバイト値を読み書きするとき、およびこのバイトバッファーのビューであるバッファーを作成するときに使用されます。新しく作成されたバイトバッファの順序は常に&lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt; &lt;code&gt;BIG_ENDIAN&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="4cc5ed997e081b7b31bde626bd68b9254ed59d17" translate="yes" xml:space="preserve">
          <source>The byte order of a char buffer created by allocation or by wrapping an existing &lt;code&gt;char&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of a char buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てまたは既存の &lt;code&gt;char&lt;/code&gt; 配列のラップによって作成されたcharバッファーのバイト順序は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成されたcharバッファのバイト順序は、ビューが作成された時点でのバイトバッファのバイト順序です。</target>
        </trans-unit>
        <trans-unit id="9cc687ee55e65629bf7cb07b117a3609d5c3c138" translate="yes" xml:space="preserve">
          <source>The byte order of a char buffer created by allocation or by wrapping an existing &lt;code&gt;char&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder--&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of a char buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てによって、または既存の &lt;code&gt;char&lt;/code&gt; 配列をラップすることによって作成されたcharバッファーのバイト順は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder--&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファーの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成されたcharバッファーのバイトオーダーは、ビューが作成された時点のバイトバッファーのバイトオーダーです。</target>
        </trans-unit>
        <trans-unit id="ad07033ac4a28f23e49c92546714e0062d88b9e4" translate="yes" xml:space="preserve">
          <source>The byte order of a double buffer created by allocation or by wrapping an existing &lt;code&gt;double&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of a double buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てまたは既存の &lt;code&gt;double&lt;/code&gt; 配列のラップによって作成されたdoubleバッファーのバイト順序は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成されたダブルバッファのバイト順序は、ビューが作成された時点のバイトバッファのバイト順序です。</target>
        </trans-unit>
        <trans-unit id="0b6816216a3e49126f17437c6afe4b84167bb241" translate="yes" xml:space="preserve">
          <source>The byte order of a double buffer created by allocation or by wrapping an existing &lt;code&gt;double&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder--&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of a double buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てによって、または既存の &lt;code&gt;double&lt;/code&gt; 配列をラップすることによって作成されたdoubleバッファーのバイト順は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder--&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファーの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成されたダブルバッファーのバイトオーダーは、ビューが作成された瞬間のバイトバッファーのバイトオーダーです。</target>
        </trans-unit>
        <trans-unit id="445cfe173d2d37f4d0540ab4f09eb151d40dd663" translate="yes" xml:space="preserve">
          <source>The byte order of a float buffer created by allocation or by wrapping an existing &lt;code&gt;float&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of a float buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てまたは既存の &lt;code&gt;float&lt;/code&gt; 配列のラップによって作成されたfloatバッファーのバイト順序は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成されたfloatバッファのバイト順序は、ビューが作成された時点のバイトバッファのバイト順序です。</target>
        </trans-unit>
        <trans-unit id="44939b5e6d7ee751fc60184ae79f1bdd2b79b9e1" translate="yes" xml:space="preserve">
          <source>The byte order of a float buffer created by allocation or by wrapping an existing &lt;code&gt;float&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder--&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of a float buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てによって、または既存の &lt;code&gt;float&lt;/code&gt; 配列をラップすることによって作成されたフロートバッファーのバイト順は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder--&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成されたフロートバッファのバイトオーダーは、ビューが作成された時点のバイトバッファのバイトオーダーです。</target>
        </trans-unit>
        <trans-unit id="d9bf87c99b3482a165d5f42fc45d647f23c42549" translate="yes" xml:space="preserve">
          <source>The byte order of a long buffer created by allocation or by wrapping an existing &lt;code&gt;long&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of a long buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てまたは既存の &lt;code&gt;long&lt;/code&gt; 配列のラップによって作成された長いバッファのバイト順序は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成された長いバッファのバイト順序は、ビューが作成された時点のバイトバッファのバイト順序です。</target>
        </trans-unit>
        <trans-unit id="e097a7b495f686009fc938ec60647ad742832ccc" translate="yes" xml:space="preserve">
          <source>The byte order of a long buffer created by allocation or by wrapping an existing &lt;code&gt;long&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder--&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of a long buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てによって、または既存の &lt;code&gt;long&lt;/code&gt; 配列をラップすることによって作成された長いバッファーのバイト順序は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder--&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファーの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成された長いバッファーのバイトオーダーは、ビューが作成された瞬間のバイトバッファーのバイトオーダーです。</target>
        </trans-unit>
        <trans-unit id="e14d106f129af656c0cc5ea2e08517556d02b5e1" translate="yes" xml:space="preserve">
          <source>The byte order of a short buffer created by allocation or by wrapping an existing &lt;code&gt;short&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of a short buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てまたは既存の &lt;code&gt;short&lt;/code&gt; 配列のラップによって作成された短いバッファのバイト順序は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成されたショートバッファのバイト順序は、ビューが作成された時点のバイトバッファのバイト順序です。</target>
        </trans-unit>
        <trans-unit id="cfc5f284c55f0850787d4daf099cb8d1f252d53e" translate="yes" xml:space="preserve">
          <source>The byte order of a short buffer created by allocation or by wrapping an existing &lt;code&gt;short&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder--&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of a short buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てによって、または既存の &lt;code&gt;short&lt;/code&gt; 配列をラップすることによって作成された短いバッファーのバイト順は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder--&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファーの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成されたshortバッファーのバイトオーダーは、ビューが作成された瞬間のバイトバッファーのバイトオーダーです。</target>
        </trans-unit>
        <trans-unit id="d329e5f47c9a84dc8e2b980d1c0c0a36a749cba2" translate="yes" xml:space="preserve">
          <source>The byte order of a view buffer is fixed to be that of its byte buffer at the time that the view is created.</source>
          <target state="translated">ビューバッファのバイト順は、ビュー作成時のバイトバッファのバイト順に固定されています。</target>
        </trans-unit>
        <trans-unit id="a9ba71648d412782d19f790e89eb67c7021e14fa" translate="yes" xml:space="preserve">
          <source>The byte order of an int buffer created by allocation or by wrapping an existing &lt;code&gt;int&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of an int buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てまたは既存の &lt;code&gt;int&lt;/code&gt; 配列のラップによって作成されたintバッファーのバイト順序は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成されたintバッファのバイト順序は、ビューが作成された時点でのバイトバッファのバイト順序です。</target>
        </trans-unit>
        <trans-unit id="7e6b38e4e4aefc9d62ff65054f43aab5864326e1" translate="yes" xml:space="preserve">
          <source>The byte order of an int buffer created by allocation or by wrapping an existing &lt;code&gt;int&lt;/code&gt; array is the &lt;a href=&quot;byteorder#nativeOrder--&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. The byte order of an int buffer created as a &lt;a href=&quot;bytebuffer#views&quot;&gt;view&lt;/a&gt; of a byte buffer is that of the byte buffer at the moment that the view is created.</source>
          <target state="translated">割り当てによって、または既存の &lt;code&gt;int&lt;/code&gt; 配列をラップすることによって作成されたintバッファーのバイト順序は、基盤となるハードウェアの&lt;a href=&quot;byteorder#nativeOrder--&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;です。バイトバッファーの&lt;a href=&quot;bytebuffer#views&quot;&gt;ビュー&lt;/a&gt;として作成されたintバッファーのバイトオーダーは、ビューが作成された瞬間のバイトバッファーのバイトオーダーです。</target>
        </trans-unit>
        <trans-unit id="9ab3e7d600ccaa7f8b9bff966dc767547c526082" translate="yes" xml:space="preserve">
          <source>The byte order of the stream as an instance of the enumeration class &lt;code&gt;java.nio.ByteOrder&lt;/code&gt;, where &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; indicates network byte order and &lt;code&gt;ByteOrder.LITTLE_ENDIAN&lt;/code&gt; indicates the reverse order.</source>
          <target state="translated">列挙クラス &lt;code&gt;java.nio.ByteOrder&lt;/code&gt; のインスタンスとしてのストリームのバイト順序。ここで、 &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; はネットワークのバイト順序を示し、 &lt;code&gt;ByteOrder.LITTLE_ENDIAN&lt;/code&gt; は逆の順序を示します。</target>
        </trans-unit>
        <trans-unit id="922b6475bb7c93120f18c536157006a342e40842" translate="yes" xml:space="preserve">
          <source>The byte order of the stream as an instance of the enumeration class &lt;code&gt;java.nio.ByteOrder&lt;/code&gt;, where &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; indicates network byte order and &lt;code&gt;ByteOrder.LITTLE_ENDIAN&lt;/code&gt; indicates the reverse order. By default, the value is &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt;.</source>
          <target state="translated">列挙クラスのインスタンスとしてストリームのバイト順 &lt;code&gt;java.nio.ByteOrder&lt;/code&gt; 、 &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; はネットワークバイト順を示し、 &lt;code&gt;ByteOrder.LITTLE_ENDIAN&lt;/code&gt; は逆順を示しています。デフォルトでは、値は &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3ac99f08420b0a24dc629e953b4fd8055fd1229b" translate="yes" xml:space="preserve">
          <source>The byte order of the stream has no effect on this method. The return value of this method is constructed as though the bits were read one at a time, and shifted into the right side of the return value, as shown by the following pseudo-code:</source>
          <target state="translated">ストリームのバイト順はこのメソッドには影響しません。このメソッドの戻り値は、以下の疑似コードで示されるように、ビットが1つずつ読み込まれたかのように構成され、戻り値の右側にシフトされています。</target>
        </trans-unit>
        <trans-unit id="08e17269998e47630b6abbde51c8a7614a01ba4b" translate="yes" xml:space="preserve">
          <source>The byte stream that was set with setByteStream, or null if setByteStream or the ByteStream constructor was not called.</source>
          <target state="translated">setByteStream で設定されたバイト・ストリーム、または setByteStream または ByteStream コンストラクタが呼び出されなかった場合は null。</target>
        </trans-unit>
        <trans-unit id="17672dad032d8fba9c2ddea23057f29a9f6fd3f2" translate="yes" xml:space="preserve">
          <source>The byte stream that was set with setOutputStream, or null if setOutputStream or the ByteStream constructor was not called.</source>
          <target state="translated">setOutputStream で設定されたバイト・ストリーム、または setOutputStream または ByteStream コンストラクタが呼び出されなかった場合は null。</target>
        </trans-unit>
        <trans-unit id="3c1b269d444d43a3624f3eeb02b5c0c28d452db7" translate="yes" xml:space="preserve">
          <source>The byte stream, or null if none was supplied.</source>
          <target state="translated">バイトストリーム、または何も与えられなかった場合はnull。</target>
        </trans-unit>
        <trans-unit id="fe9e7e57fe9d5209751608e3672edda5b746da18" translate="yes" xml:space="preserve">
          <source>The bytecode behavior for a &lt;code&gt;findClass&lt;/code&gt; operation is a load of a constant class, as if by &lt;code&gt;ldc CONSTANT_Class&lt;/code&gt;. The behavior is represented, not as a method handle, but directly as a &lt;code&gt;Class&lt;/code&gt; constant.</source>
          <target state="translated">&lt;code&gt;findClass&lt;/code&gt; 操作のバイトコードの動作は、 &lt;code&gt;ldc CONSTANT_Class&lt;/code&gt; の場合と同様に、定数クラスのロードです。動作は、メソッドハンドルとしてではなく、 &lt;code&gt;Class&lt;/code&gt; 定数として直接表されます。</target>
        </trans-unit>
        <trans-unit id="e98750b98cb578117e4a7b03d9689b363791d254" translate="yes" xml:space="preserve">
          <source>The bytes between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the byte at index</source>
          <target state="translated">バッファの現在位置から限界までのバイトがある場合は、バッファの先頭にコピーされます。つまり、インデックス</target>
        </trans-unit>
        <trans-unit id="605bdb9768c8cdd5277446afd564abb5d9175bca" translate="yes" xml:space="preserve">
          <source>The bytes in given byte buffer will be fully consumed by this method. On return, its position will equal its limit.</source>
          <target state="translated">与えられたバイトバッファ内のバイトは、このメソッドによって完全に消費されます。返却時には、その位置はその限界値と等しくなります。</target>
        </trans-unit>
        <trans-unit id="fdb617b55c781ce6016c87e15df5a36aff81d4fc" translate="yes" xml:space="preserve">
          <source>The bytes in the &lt;code&gt;input&lt;/code&gt; buffer are processed, and the result is stored in a new buffer.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; バッファのバイトが処理され、結果が新しいバッファに格納されます。</target>
        </trans-unit>
        <trans-unit id="c3be3ee4e2ba1705b0819316619d526cd4ca38d3" translate="yes" xml:space="preserve">
          <source>The bytes in the &lt;code&gt;input&lt;/code&gt; buffer, and any input bytes that may have been buffered during a previous &lt;code&gt;update&lt;/code&gt; operation, are processed, with padding (if requested) being applied. If an AEAD mode such as GCM/CCM is being used, the authentication tag is appended in the case of encryption, or verified in the case of decryption. The result is stored in a new buffer.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; バッファー内のバイト、および前の &lt;code&gt;update&lt;/code&gt; 操作中にバッファーに入れられた可能性のある入力バイトが処理され、パディング（要求された場合）が適用されます。GCM / CCMなどのAEADモードが使用されている場合、暗号化の場合は認証タグが付加され、復号化の場合は認証タグが検証されます。結果は新しいバッファに保存されます。</target>
        </trans-unit>
        <trans-unit id="e8477b1431e21fbd46bb1ccf3bf62d71fd8b63b6" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the DES key are those between &lt;code&gt;key[0]&lt;/code&gt; and &lt;code&gt;key[7]&lt;/code&gt; inclusive.</source>
          <target state="translated">DESキーを構成するバイトは、 &lt;code&gt;key[0]&lt;/code&gt; と &lt;code&gt;key[7]&lt;/code&gt; 間のバイトです。</target>
        </trans-unit>
        <trans-unit id="a3f2da7875cad1eeed18f83a8d95ae13c715aa4e" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the DES key are those between &lt;code&gt;key[offset]&lt;/code&gt; and &lt;code&gt;key[offset+7]&lt;/code&gt; inclusive.</source>
          <target state="translated">DES鍵を構成するバイトは、 &lt;code&gt;key[offset]&lt;/code&gt; と &lt;code&gt;key[offset+7]&lt;/code&gt; 間のバイトです。</target>
        </trans-unit>
        <trans-unit id="f4fa0678e8609555f8143e63e8b2f158ff878621" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the DES-EDE key are those between &lt;code&gt;key[0]&lt;/code&gt; and &lt;code&gt;key[23]&lt;/code&gt; inclusive</source>
          <target state="translated">DES-EDE鍵を構成するバイトの間のものである &lt;code&gt;key[0]&lt;/code&gt; および &lt;code&gt;key[23]&lt;/code&gt; 包括的な</target>
        </trans-unit>
        <trans-unit id="13305bd13aac1472ef1037068afe772ad0fb4273" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the DES-EDE key are those between &lt;code&gt;key[offset]&lt;/code&gt; and &lt;code&gt;key[offset+23]&lt;/code&gt; inclusive.</source>
          <target state="translated">DES-EDE鍵を構成するバイトは、 &lt;code&gt;key[offset]&lt;/code&gt; と &lt;code&gt;key[offset+23]&lt;/code&gt; 間のバイトです。</target>
        </trans-unit>
        <trans-unit id="3067e974cc7fdd3a9dfe76018048100635f25890" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the IV are those between &lt;code&gt;iv[0]&lt;/code&gt; and &lt;code&gt;iv[7]&lt;/code&gt; inclusive.</source>
          <target state="translated">IVを構成するバイトは、 &lt;code&gt;iv[0]&lt;/code&gt; と &lt;code&gt;iv[7]&lt;/code&gt; 間のバイトです。</target>
        </trans-unit>
        <trans-unit id="e88aa68f8ceb389a17299b0b745903e72581ad9c" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the IV are those between &lt;code&gt;iv[offset]&lt;/code&gt; and &lt;code&gt;iv[offset+len-1]&lt;/code&gt; inclusive.</source>
          <target state="translated">IVを構成するバイトは、 &lt;code&gt;iv[offset]&lt;/code&gt; と &lt;code&gt;iv[offset+len-1]&lt;/code&gt; 間のバイトです。</target>
        </trans-unit>
        <trans-unit id="c171e0871451b5bcb88b7ecb2eba3ec410b4a9a1" translate="yes" xml:space="preserve">
          <source>The bytes that constitute the secret key are those between &lt;code&gt;key[offset]&lt;/code&gt; and &lt;code&gt;key[offset+len-1]&lt;/code&gt; inclusive.</source>
          <target state="translated">秘密鍵を構成するバイトは、 &lt;code&gt;key[offset]&lt;/code&gt; と &lt;code&gt;key[offset+len-1]&lt;/code&gt; 間のバイトです。</target>
        </trans-unit>
        <trans-unit id="a5b7d43b7dabc9df1454a8ff820a35700bfc1b23" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readChar&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt; , which will then return a &lt;code&gt;char&lt;/code&gt; equal to &lt;code&gt;(char)v&lt;/code&gt;.</source>
          <target state="translated">このメソッドによって書き込まれたバイトは、インターフェース &lt;code&gt;DataInput&lt;/code&gt; の &lt;code&gt;readChar&lt;/code&gt; メソッドによって読み取ることができます。これにより、 &lt;code&gt;(char)v&lt;/code&gt; に等しい &lt;code&gt;char&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="0b95387b94a86af5779949aa0a20e886731ea4d4" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readInt&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt; , which will then return an &lt;code&gt;int&lt;/code&gt; equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">このメソッドによって書き込まれたバイトは、インターフェース &lt;code&gt;DataInput&lt;/code&gt; の &lt;code&gt;readInt&lt;/code&gt; メソッドによって読み取ることができます。これにより、 &lt;code&gt;v&lt;/code&gt; に等しい &lt;code&gt;int&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="b00736a5ccdb8c5c715cbbbfdd29b8aa3e9af1ac" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readLong&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt; , which will then return a &lt;code&gt;long&lt;/code&gt; equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">このメソッドによって書き込まれたバイトは、インターフェース &lt;code&gt;DataInput&lt;/code&gt; の &lt;code&gt;readLong&lt;/code&gt; メソッドによって読み取ることができます。これにより、 &lt;code&gt;v&lt;/code&gt; に等しい &lt;code&gt;long&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="3565a4ba0097da0e53b33f2f269c8a9843ebdfdd" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readShort&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt; , which will then return a &lt;code&gt;short&lt;/code&gt; equal to &lt;code&gt;(short)v&lt;/code&gt;.</source>
          <target state="translated">このメソッドによって書き込まれたバイトは、インターフェース &lt;code&gt;DataInput&lt;/code&gt; の &lt;code&gt;readShort&lt;/code&gt; メソッドによって読み取ることができます。これにより、 &lt;code&gt;(short)v&lt;/code&gt; に等しい &lt;code&gt;short&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="594b8e0f4367854f5fec1f1e47e81634970cee0b" translate="yes" xml:space="preserve">
          <source>The bytes written by this method may be read by the &lt;code&gt;readUTF&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt; , which will then return a &lt;code&gt;String&lt;/code&gt; equal to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">このメソッドによって書き込まれたバイトは、インターフェース &lt;code&gt;DataInput&lt;/code&gt; の &lt;code&gt;readUTF&lt;/code&gt; メソッドによって読み取られ、次に &lt;code&gt;s&lt;/code&gt; に等しい &lt;code&gt;String&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="31fa5f9fc9eed95eef4be0210ae43d26c7263f6c" translate="yes" xml:space="preserve">
          <source>The cache may reside in main memory or on disk. Setting this flag to &lt;code&gt;false&lt;/code&gt; disallows the use of disk for future streams, which may be advantageous when working with small images, as the overhead of creating and destroying files is removed.</source>
          <target state="translated">キャッシュはメインメモリまたはディスクに常駐する場合があります。このフラグを &lt;code&gt;false&lt;/code&gt; に設定すると、将来のストリームでディスクを使用できなくなります。これは、ファイルの作成と破棄のオーバーヘッドがなくなるため、小さな画像を扱うときに有利になる場合があります。</target>
        </trans-unit>
        <trans-unit id="2bc9e50f825b3431afd7e5a709accec3607181e7" translate="yes" xml:space="preserve">
          <source>The cached MBeanInfo for that MBean, if not null, or a newly built MBeanInfo if none was cached.</source>
          <target state="translated">null でない場合は、その MBean のキャッシュされた MBeanInfo、キャッシュされていない場合は新しくビルドされた MBeanInfo。</target>
        </trans-unit>
        <trans-unit id="0ab46aaa358cbc9d48861d7c404420fc26ce55fe" translate="yes" xml:space="preserve">
          <source>The cached MBeanInfo, or null if no MBeanInfo is cached.</source>
          <target state="translated">キャッシュされた MBeanInfo、または MBeanInfo がキャッシュされていない場合は null。</target>
        </trans-unit>
        <trans-unit id="b2259efff9c9fa7b9d00ac309cbb633be1c4e418" translate="yes" xml:space="preserve">
          <source>The cached minimum preferred size.</source>
          <target state="translated">キャッシュされた最小の好ましいサイズ。</target>
        </trans-unit>
        <trans-unit id="83d21569e8013b0c639bdc2607401a7867030a12" translate="yes" xml:space="preserve">
          <source>The caching flag is designed to allow provider implementations to prevent the rules being cached in &lt;code&gt;ZoneId&lt;/code&gt;. Under normal circumstances, the caching of zone rules is highly desirable as it will provide greater performance. However, there is a use case where the caching would not be desirable, see &lt;a href=&quot;#provideRules(java.lang.String,boolean)&quot;&gt;&lt;code&gt;provideRules(java.lang.String, boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">キャッシュフラグは、プロバイダーの実装がルールが &lt;code&gt;ZoneId&lt;/code&gt; にキャッシュされないようにするように設計されています。通常の状況では、ゾーンルールのキャッシュは、パフォーマンスが向上するため、非常に望ましいものです。ただし、キャッシングが望ましくないユースケースがあります&lt;a href=&quot;#provideRules(java.lang.String,boolean)&quot;&gt; &lt;code&gt;provideRules(java.lang.String, boolean)&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b831b6b8d71a342113c94aa040943ab0817aea9b" translate="yes" xml:space="preserve">
          <source>The caching flag is designed to allow provider implementations to prevent the rules being cached in &lt;code&gt;ZoneId&lt;/code&gt;. Under normal circumstances, the caching of zone rules is highly desirable as it will provide greater performance. However, there is a use case where the caching would not be desirable, see &lt;a href=&quot;zonerulesprovider#provideRules-java.lang.String-boolean-&quot;&gt;&lt;code&gt;provideRules(java.lang.String, boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">キャッシングフラグは、プロバイダーの実装で、ルールが &lt;code&gt;ZoneId&lt;/code&gt; にキャッシュされないようにするために設計されています。通常の状況では、ゾーンルールのキャッシングは、パフォーマンスを向上させるため非常に望ましいです。ただし、キャッシュが望ましくないユースケースがあります&lt;a href=&quot;zonerulesprovider#provideRules-java.lang.String-boolean-&quot;&gt; &lt;code&gt;provideRules(java.lang.String, boolean)&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b0e896df123d4b65bbbe5a4dafe244dbddcdea17" translate="yes" xml:space="preserve">
          <source>The calculation for date and time units differ.</source>
          <target state="translated">日付と時間の単位の計算が異なります。</target>
        </trans-unit>
        <trans-unit id="12cacecff5d3a90852567654a9cd056e41f9ed9b" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo(java.time.temporal.Temporal)&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo(java.time.temporal.Temporal)&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算が金額オブジェクトに委任されます。金額の実装は、任意の方法で加算を自由に実装できますが、通常は&lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装に関するドキュメントを参照して、正常に追加できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="3f9bfb97f566a996492a90ed855eda8eef86861b" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;instant#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;instant#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="d36a13c282a1a0db204d6e433edc37043d6d0a0c" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="405fd7a334255c2eb1f7b060d385c4b26c0c094f" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="337784a3c16463d8f2a1d05d69b5de99101c53f9" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="8944e4ffa7476e40cdbb6ed5d28a69895c14f3d9" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;offsetdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;offsetdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="5fc94b4fc685ed04a2ebd12ecf82c33d700c679e" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;offsettime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;offsettime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1cfef65ed1bb6a95bbe63ebf74cdcb10c5ecd139" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;year#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;year#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="7e99f6027203570f1c45a91326691927a052b5f7" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;yearmonth#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;yearmonth#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="994428485f2ea149263e9c2fb513da76194ad0b8" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the addition in any way it wishes, however it typically calls back to &lt;a href=&quot;zoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully added.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#addTo-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.addTo(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で追加を自由に実装できますが、通常は&lt;a href=&quot;zoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。それが正常に追加できるかどうかを判断するには、金額実装のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="a3b93fd296752b78aa6bf5c6f05eb5aa9188bee9" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom(java.time.temporal.Temporal)&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">計算は、&lt;a href=&quot;temporal/temporalamount#subtractFrom(java.time.temporal.Temporal)&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことによって金額オブジェクトに委任されます。量の実装は、任意の方法で減算を自由に実装できますが、通常は&lt;a href=&quot;#minus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;コールバックします。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="72beecfb4b4380d1395896cd556f2fd5f887329f" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;instant#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;instant#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="63d8dfd01dd14bee40f150a8512f195b82961be7" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;localdate#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;localdate#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="ef7bf705802a1c00c21142d8479c79f5ad4f4ad9" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;localdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;localdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="9f83917a4b3043dc83a8a121229cd2c84588523d" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;localtime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;localtime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="9735318a5ee7c236f2a3824643d883272d024629" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;offsetdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;offsetdatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="4678787b4640ffb19d6e0e843874079614a6c590" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;offsettime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;offsettime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="76574227f521761bf4b8e3a70c0d6e0fd5a48f77" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;year#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;year#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="6a606f8f745f376a82afb4bf3b9cfaaf4b5e04e7" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;yearmonth#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;yearmonth#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="fb583766018df0a002e06f9ff6b85c52184760b5" translate="yes" xml:space="preserve">
          <source>The calculation is delegated to the amount object by calling &lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt;&lt;/a&gt;. The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to &lt;a href=&quot;zoneddatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Consult the documentation of the amount implementation to determine if it can be successfully subtracted.</source>
          <target state="translated">&lt;a href=&quot;temporal/temporalamount#subtractFrom-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAmount.subtractFrom(Temporal)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、計算は金額オブジェクトに委任されます。金額の実装は、任意の方法で減算を自由に実装できますが、通常は、&lt;a href=&quot;zoneddatetime#minus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;minus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;呼び出します。金額の実装のドキュメントを参照して、正常に減算できるかどうかを判断してください。</target>
        </trans-unit>
        <trans-unit id="1cd315c0454258ad07a59eebbecac5190d877bf3" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;../temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;DAYS&lt;/code&gt;, &lt;code&gt;WEEKS&lt;/code&gt;, &lt;code&gt;MONTHS&lt;/code&gt;, &lt;code&gt;YEARS&lt;/code&gt;, &lt;code&gt;DECADES&lt;/code&gt;, &lt;code&gt;CENTURIES&lt;/code&gt;, &lt;code&gt;MILLENNIA&lt;/code&gt; and &lt;code&gt;ERAS&lt;/code&gt; should be supported by all implementations. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">計算は、&lt;a href=&quot;../temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;このメソッドで実装されます。単位 &lt;code&gt;DAYS&lt;/code&gt; 、 &lt;code&gt;WEEKS&lt;/code&gt; 、 &lt;code&gt;MONTHS&lt;/code&gt; 、 &lt;code&gt;YEARS&lt;/code&gt; 、 &lt;code&gt;DECADES&lt;/code&gt; 、 &lt;code&gt;CENTURIES&lt;/code&gt; 、 &lt;code&gt;MILLENNIA&lt;/code&gt; 、および &lt;code&gt;ERAS&lt;/code&gt; は、すべての実装でサポートされている必要があります。他の &lt;code&gt;ChronoUnit&lt;/code&gt; 値は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="2c40729f65e17fa53bc32e56e2b68deecbce35f4" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;DAYS&lt;/code&gt;, &lt;code&gt;WEEKS&lt;/code&gt;, &lt;code&gt;MONTHS&lt;/code&gt;, &lt;code&gt;YEARS&lt;/code&gt;, &lt;code&gt;DECADES&lt;/code&gt;, &lt;code&gt;CENTURIES&lt;/code&gt;, &lt;code&gt;MILLENNIA&lt;/code&gt; and &lt;code&gt;ERAS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">計算は、&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;このメソッドで実装されます。単位 &lt;code&gt;DAYS&lt;/code&gt; 、 &lt;code&gt;WEEKS&lt;/code&gt; 、 &lt;code&gt;MONTHS&lt;/code&gt; 、 &lt;code&gt;YEARS&lt;/code&gt; 、 &lt;code&gt;DECADES&lt;/code&gt; 、 &lt;code&gt;CENTURIES&lt;/code&gt; 、 &lt;code&gt;MILLENNIA&lt;/code&gt; および &lt;code&gt;ERAS&lt;/code&gt; がサポートされています。他の &lt;code&gt;ChronoUnit&lt;/code&gt; 値は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="19b9a5d378177e9c9b3a71840adcb16f0f886bde" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;MONTHS&lt;/code&gt;, &lt;code&gt;YEARS&lt;/code&gt;, &lt;code&gt;DECADES&lt;/code&gt;, &lt;code&gt;CENTURIES&lt;/code&gt;, &lt;code&gt;MILLENNIA&lt;/code&gt; and &lt;code&gt;ERAS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">計算は、&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;このメソッドで実装されます。ユニット &lt;code&gt;MONTHS&lt;/code&gt; 、 &lt;code&gt;YEARS&lt;/code&gt; 、 &lt;code&gt;DECADES&lt;/code&gt; 、 &lt;code&gt;CENTURIES&lt;/code&gt; 、 &lt;code&gt;MILLENNIA&lt;/code&gt; と &lt;code&gt;ERAS&lt;/code&gt; がサポートされています。他の &lt;code&gt;ChronoUnit&lt;/code&gt; 値は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="e230aa95d014e34ceda792a8275bb6a6a1650561" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;NANOS&lt;/code&gt;, &lt;code&gt;MICROS&lt;/code&gt;, &lt;code&gt;MILLIS&lt;/code&gt;, &lt;code&gt;SECONDS&lt;/code&gt;, &lt;code&gt;MINUTES&lt;/code&gt;, &lt;code&gt;HOURS&lt;/code&gt; and &lt;code&gt;HALF_DAYS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">計算は、&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;このメソッドで実装されます。単位 &lt;code&gt;NANOS&lt;/code&gt; 、 &lt;code&gt;MICROS&lt;/code&gt; 、 &lt;code&gt;MILLIS&lt;/code&gt; 、 &lt;code&gt;SECONDS&lt;/code&gt; 、 &lt;code&gt;MINUTES&lt;/code&gt; 、 &lt;code&gt;HOURS&lt;/code&gt; および &lt;code&gt;HALF_DAYS&lt;/code&gt; がサポートされています。他の &lt;code&gt;ChronoUnit&lt;/code&gt; 値は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="1507d23c8a6f8c72a31bd26e1e7810e4719336ab" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;NANOS&lt;/code&gt;, &lt;code&gt;MICROS&lt;/code&gt;, &lt;code&gt;MILLIS&lt;/code&gt;, &lt;code&gt;SECONDS&lt;/code&gt;, &lt;code&gt;MINUTES&lt;/code&gt;, &lt;code&gt;HOURS&lt;/code&gt; and &lt;code&gt;HALF_DAYS&lt;/code&gt;, &lt;code&gt;DAYS&lt;/code&gt;, &lt;code&gt;WEEKS&lt;/code&gt;, &lt;code&gt;MONTHS&lt;/code&gt;, &lt;code&gt;YEARS&lt;/code&gt;, &lt;code&gt;DECADES&lt;/code&gt;, &lt;code&gt;CENTURIES&lt;/code&gt;, &lt;code&gt;MILLENNIA&lt;/code&gt; and &lt;code&gt;ERAS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">計算は、&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;このメソッドで実装されます。単位 &lt;code&gt;NANOS&lt;/code&gt; 、 &lt;code&gt;MICROS&lt;/code&gt; 、 &lt;code&gt;MILLIS&lt;/code&gt; 、 &lt;code&gt;SECONDS&lt;/code&gt; 、 &lt;code&gt;MINUTES&lt;/code&gt; 、 &lt;code&gt;HOURS&lt;/code&gt; および &lt;code&gt;HALF_DAYS&lt;/code&gt; 、 &lt;code&gt;DAYS&lt;/code&gt; 、 &lt;code&gt;WEEKS&lt;/code&gt; 、 &lt;code&gt;MONTHS&lt;/code&gt; 、 &lt;code&gt;YEARS&lt;/code&gt; 、 &lt;code&gt;DECADES&lt;/code&gt; 、 &lt;code&gt;CENTURIES&lt;/code&gt; 、 &lt;code&gt;MILLENNIA&lt;/code&gt; および &lt;code&gt;ERAS&lt;/code&gt; がサポートされています。他の &lt;code&gt;ChronoUnit&lt;/code&gt; 値は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="a944bb9e5a6fb6bb71bb5754d803740edba2e7e6" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;NANOS&lt;/code&gt;, &lt;code&gt;MICROS&lt;/code&gt;, &lt;code&gt;MILLIS&lt;/code&gt;, &lt;code&gt;SECONDS&lt;/code&gt;, &lt;code&gt;MINUTES&lt;/code&gt;, &lt;code&gt;HOURS&lt;/code&gt;, &lt;code&gt;HALF_DAYS&lt;/code&gt; and &lt;code&gt;DAYS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">計算は、&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;このメソッドで実装されます。単位 &lt;code&gt;NANOS&lt;/code&gt; 、 &lt;code&gt;MICROS&lt;/code&gt; 、 &lt;code&gt;MILLIS&lt;/code&gt; 、 &lt;code&gt;SECONDS&lt;/code&gt; 、 &lt;code&gt;MINUTES&lt;/code&gt; 、 &lt;code&gt;HOURS&lt;/code&gt; 、 &lt;code&gt;HALF_DAYS&lt;/code&gt; および &lt;code&gt;DAYS&lt;/code&gt; がサポートされています。他の &lt;code&gt;ChronoUnit&lt;/code&gt; 値は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="1d36fea63293e397176d95e77b5737ce1cf421eb" translate="yes" xml:space="preserve">
          <source>The calculation is implemented in this method for &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. The units &lt;code&gt;YEARS&lt;/code&gt;, &lt;code&gt;DECADES&lt;/code&gt;, &lt;code&gt;CENTURIES&lt;/code&gt;, &lt;code&gt;MILLENNIA&lt;/code&gt; and &lt;code&gt;ERAS&lt;/code&gt; are supported. Other &lt;code&gt;ChronoUnit&lt;/code&gt; values will throw an exception.</source>
          <target state="translated">計算は、&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;このメソッドで実装されます。ユニット &lt;code&gt;YEARS&lt;/code&gt; 、 &lt;code&gt;DECADES&lt;/code&gt; 、 &lt;code&gt;CENTURIES&lt;/code&gt; 、 &lt;code&gt;MILLENNIA&lt;/code&gt; と &lt;code&gt;ERAS&lt;/code&gt; がサポートされています。他の &lt;code&gt;ChronoUnit&lt;/code&gt; 値は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="de396f35f1beb4dec84fd96c5c0bc128000c53b5" translate="yes" xml:space="preserve">
          <source>The calculation is performed using the ISO calendar system. If necessary, the input date will be converted to ISO.</source>
          <target state="translated">ISO カレンダーシステムを使用して計算を行います。必要に応じて、入力された日付をISOに変換します。</target>
        </trans-unit>
        <trans-unit id="5c8b7a9e75b18aac11374fa27a65860ce2cba5ee" translate="yes" xml:space="preserve">
          <source>The calculation is performed using the chronology of this date. If necessary, the input date will be converted to match.</source>
          <target state="translated">この日付の年表を使って計算します。必要に応じて、入力された日付が一致するように変換されます。</target>
        </trans-unit>
        <trans-unit id="a18a3925fc70243cd9c7e703ff805ee959f8b1b2" translate="yes" xml:space="preserve">
          <source>The calculation is proleptic - applying the same rules into the far future and far past. This is historically inaccurate, but is correct for the ISO-8601 standard.</source>
          <target state="translated">計算はプロレプティックである-同じルールを遠い未来と遠い過去に適用する。これは歴史的に不正確ですが、ISO-8601規格では正しいです。</target>
        </trans-unit>
        <trans-unit id="a77397163b78a04fe04dd941420d69ad173ac41a" translate="yes" xml:space="preserve">
          <source>The calculation operates as follows. First, the chronology of the temporal is checked to ensure it is ISO chronology or null. Second, if the months are zero, the years are added if non-zero, otherwise the combination of years and months is added if non-zero. Finally, any days are added.</source>
          <target state="translated">計算は以下のように動作します。最初に、テンポラリの年表がISO年表であるかヌルであるかをチェックします。第二に、月がゼロの場合、ゼロでない場合は年が追加され、ゼロでない場合は年と月の組み合わせが追加されます。最後に、日が追加されます。</target>
        </trans-unit>
        <trans-unit id="c263030716ce91a128cf8f90575be9c8fd437b13" translate="yes" xml:space="preserve">
          <source>The calculation operates as follows. First, the chronology of the temporal is checked to ensure it is ISO chronology or null. Second, if the months are zero, the years are subtracted if non-zero, otherwise the combination of years and months is subtracted if non-zero. Finally, any days are subtracted.</source>
          <target state="translated">計算は以下のように動作します。最初に、テンポラリの年表がISO年表であるかヌルであるかをチェックします。第二に、月がゼロの場合、ゼロでない場合は年が減算され、ゼロでない場合は年と月の組み合わせが減算されます。最後に、日が差し引かれます。</target>
        </trans-unit>
        <trans-unit id="fdb1636ed39215073f821c5aa121f59d7ee4d527" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two date-times. For example, the amount in months between 2012-06-15T00:00 and 2012-08-14T23:59 will only be one month as it is one minute short of two months.</source>
          <target state="translated">計算は、2つの日付間の完全な単位の数を表す整数を返します。例えば、2012-06-15T00:00から2012-08-14T23:59までの間の月の金額は、2ヶ月の1分足りないので1ヶ月になります。</target>
        </trans-unit>
        <trans-unit id="ec9af07e807db86ba031ee502751cd0c38c69a71" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two date-times. For example, the amount in months between 2012-06-15T00:00Z and 2012-08-14T23:59Z will only be one month as it is one minute short of two months.</source>
          <target state="translated">計算は、2つの日付間の完全な単位の数を表す整数を返します。例えば、2012-06-15T00:00Z と 2012-08-14T23:59Z の間の月単位の金額は、2ヶ月のうち1分足りないので1ヶ月になります。</target>
        </trans-unit>
        <trans-unit id="2a40c5deaf847238353378cb61b47570a274c9ac" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two dates. For example, the amount in months between 2012-06-15 and 2012-08-14 will only be one month as it is one day short of two months.</source>
          <target state="translated">計算は、2 つの日付間の完全な単位数を表す整数を返します。例えば、2012-06-15 と 2012-08-14 の間の月の金額は、2 ヶ月のうち 1 日足りないので 1 ヶ月になります。</target>
        </trans-unit>
        <trans-unit id="4e4af59e77647dd6907c8a296e775e0a0d836e8c" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two temporals. For example, the amount in hours between the times 11:30 and 13:29 will only be one hour as it is one minute short of two hours.</source>
          <target state="translated">この計算は、2つの時間軸の間の完全な単位の数を表す整数を返します。例えば、11:30と13:29の間の時間は、2時間に1分足りないので、1時間となります。</target>
        </trans-unit>
        <trans-unit id="e6909d5ca1c4c3ff219ad8a02bf77193f0655754" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two times. For example, the amount in hours between 11:30 and 13:29 will only be one hour as it is one minute short of two hours.</source>
          <target state="translated">計算は、2つの時間の間の完全な単位の数を表す整数を返します。例えば、11:30から13:29の間の時間は、2時間に1分足りないので、1時間にしかなりません。</target>
        </trans-unit>
        <trans-unit id="c9e0270c645839bc297b8d8461abd213cdea0773" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two times. For example, the amount in hours between 11:30Z and 13:29Z will only be one hour as it is one minute short of two hours.</source>
          <target state="translated">計算は、2つの時間の間の完全な単位の数を表す整数を返します。例えば、11:30Zと13:29Zの間の時間単位は、2時間のうち1分足りないので、1時間になります。</target>
        </trans-unit>
        <trans-unit id="b40e1be73246aecc1325d0ab24225f79366c3cea" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two year-months. For example, the amount in decades between 2012-06 and 2032-05 will only be one decade as it is one month short of two decades.</source>
          <target state="translated">この計算は、2つの年月間の完全な単位の数を表す整数を返します。例えば、2012-06年から2032-05年の間の数十年分の金額は、20年分の1ヶ月分足りないので、10年分の金額は1つになります。</target>
        </trans-unit>
        <trans-unit id="ccc4ff471f21d9f7ba0907b139abcc2e7896bd76" translate="yes" xml:space="preserve">
          <source>The calculation returns a whole number, representing the number of complete units between the two years. For example, the amount in decades between 2012 and 2031 will only be one decade as it is one year short of two decades.</source>
          <target state="translated">この計算は、2年の間の完全な単位の数を表す整数を返します。例えば、2012年から2031年の間の数十年単位の金額は、20年のうち1年足りないので、1年単位にしかなりません。</target>
        </trans-unit>
        <trans-unit id="58e5423c597dc35b389e5d938496ce0de4d9778f" translate="yes" xml:space="preserve">
          <source>The calculation rolls around the end of the week from Sunday to Monday. The specified period may be negative.</source>
          <target state="translated">日曜から月曜までの週の終わりを巻き込んで計算します。指定された期間は負の値になる場合があります。</target>
        </trans-unit>
        <trans-unit id="668d9a3e3fa4c9967805f1a3678a36f85651608a" translate="yes" xml:space="preserve">
          <source>The calculation rolls around the end of the year from December to January. The specified period may be negative.</source>
          <target state="translated">12月から1月までの年末を中心に計算します。指定された期間はマイナスになる場合があります。</target>
        </trans-unit>
        <trans-unit id="c563b5a653779db71d45290b934e9ad07e26260f" translate="yes" xml:space="preserve">
          <source>The calculation rolls around the start of the year from January to December. The specified period may be negative.</source>
          <target state="translated">1月から12月までの年初を中心に計算します。指定された期間は負の場合もあります。</target>
        </trans-unit>
        <trans-unit id="e7212e045d02e1d66ae352530c884f838bcd75d4" translate="yes" xml:space="preserve">
          <source>The calculation rolls around the start of the year from Monday to Sunday. The specified period may be negative.</source>
          <target state="translated">計算は、月曜から日曜までの年の始まりをロールバックします。指定された期間は負の値になる場合があります。</target>
        </trans-unit>
        <trans-unit id="ec7c17cc8ccefb501b5beef5a7c7ae8a3150c74f" translate="yes" xml:space="preserve">
          <source>The calculation will add the seconds, then nanos. Only non-zero amounts will be added.</source>
          <target state="translated">計算では秒を加算し、次にナノを加算します。ゼロではない量だけが加算されます。</target>
        </trans-unit>
        <trans-unit id="16e7549a22a253997bf53ac9cf0c75a51b0bbc3b" translate="yes" xml:space="preserve">
          <source>The calculation will subtract the seconds, then nanos. Only non-zero amounts will be added.</source>
          <target state="translated">計算では秒数を引いてからナノスになります。ゼロではない量だけが加算されます。</target>
        </trans-unit>
        <trans-unit id="82a4f3f7a39babbf366ad326d064056956101ac1" translate="yes" xml:space="preserve">
          <source>The calendar field values can be set by calling the &lt;code&gt;set&lt;/code&gt; methods. Any field values set in a &lt;code&gt;Calendar&lt;/code&gt; will not be interpreted until it needs to calculate its time value (milliseconds from the Epoch) or values of the calendar fields. Calling the &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;getTimeInMillis&lt;/code&gt;, &lt;code&gt;getTime&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;roll&lt;/code&gt; involves such calculation.</source>
          <target state="translated">カレンダフィールド値を呼び出すことによって設定することができ &lt;code&gt;set&lt;/code&gt; 方法を。 &lt;code&gt;Calendar&lt;/code&gt; 設定されたフィールド値は、時間値（エポックからのミリ秒）またはカレンダーフィールドの値を計算する必要があるまで解釈されません。 &lt;code&gt;get&lt;/code&gt; 、 &lt;code&gt;getTimeInMillis&lt;/code&gt; 、 &lt;code&gt;getTime&lt;/code&gt; 、 &lt;code&gt;add&lt;/code&gt; および &lt;code&gt;roll&lt;/code&gt; の呼び出しには、このような計算が含まれます。</target>
        </trans-unit>
        <trans-unit id="8dfa36ab7bd611cdb8f405d4e9a617cb059bfbc2" translate="yes" xml:space="preserve">
          <source>The calendar field values for the currently set time for this calendar.</source>
          <target state="translated">このカレンダーに現在設定されている時刻のカレンダーフィールドの値です。</target>
        </trans-unit>
        <trans-unit id="865d4b04e7b37220faeadf26dcf5654c73ef78a9" translate="yes" xml:space="preserve">
          <source>The calendar field values for the currently set time for this calendar. This is an array of &lt;code&gt;FIELD_COUNT&lt;/code&gt; integers, with index values &lt;code&gt;ERA&lt;/code&gt; through &lt;code&gt;DST_OFFSET&lt;/code&gt;.</source>
          <target state="translated">このカレンダーに現在設定されている時刻のカレンダーフィールド値。これは &lt;code&gt;FIELD_COUNT&lt;/code&gt; 整数の配列で、インデックス値は &lt;code&gt;ERA&lt;/code&gt; から &lt;code&gt;DST_OFFSET&lt;/code&gt; までです。</target>
        </trans-unit>
        <trans-unit id="77dba84a172780be492cbe77a232ee1219c79321" translate="yes" xml:space="preserve">
          <source>The calendar fields can be changed using three methods: &lt;code&gt;set()&lt;/code&gt;, &lt;code&gt;add()&lt;/code&gt;, and &lt;code&gt;roll()&lt;/code&gt;.</source>
          <target state="translated">カレンダーのフィールドは、 &lt;code&gt;set()&lt;/code&gt; 、 &lt;code&gt;add()&lt;/code&gt; 、および &lt;code&gt;roll()&lt;/code&gt; の 3つのメソッドを使用して変更できます。</target>
        </trans-unit>
        <trans-unit id="93ce9ec5e026f012a845bb7044250795eb5e3784" translate="yes" xml:space="preserve">
          <source>The calendar system name will be output during a format. If the chronology cannot be obtained then an exception will be thrown.</source>
          <target state="translated">カレンダーシステム名は、フォーマット中に出力されます。年表が取得できない場合は例外が発生します。</target>
        </trans-unit>
        <trans-unit id="962278d560a441566052e9e275cc29395fdebae6" translate="yes" xml:space="preserve">
          <source>The calendar type</source>
          <target state="translated">カレンダータイプ</target>
        </trans-unit>
        <trans-unit id="98eaf2920920ec6aeadc95b5dbd8a45b16626887" translate="yes" xml:space="preserve">
          <source>The calendar type is an identifier defined by the &lt;em&gt;Unicode Locale Data Markup Language (LDML)&lt;/em&gt; specification. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of(java.lang.String)&quot;&gt;&lt;code&gt;Chronology.of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">カレンダタイプは、&lt;em&gt;Unicodeロケールデータマークアップ言語（LDML）&lt;/em&gt;仕様で定義された識別子です。&lt;a href=&quot;chronology#of(java.lang.String)&quot;&gt; &lt;code&gt;Chronology.of(String)&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;Chronology&lt;/code&gt; を検索するために使用できます。</target>
        </trans-unit>
        <trans-unit id="ffa7966fe840f77dd8ac98c4a6ac666feca3d8f6" translate="yes" xml:space="preserve">
          <source>The calendar type is an identifier defined by the &lt;em&gt;Unicode Locale Data Markup Language (LDML)&lt;/em&gt; specification. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of(java.lang.String)&quot;&gt;&lt;code&gt;Chronology.of(String)&lt;/code&gt;&lt;/a&gt;. It can also be used as part of a locale, accessible via &lt;a href=&quot;../../util/locale#getUnicodeLocaleType(java.lang.String)&quot;&gt;&lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt;&lt;/a&gt; with the key 'ca'.</source>
          <target state="translated">カレンダタイプは、&lt;em&gt;Unicodeロケールデータマークアップ言語（LDML）&lt;/em&gt;仕様で定義された識別子です。&lt;a href=&quot;chronology#of(java.lang.String)&quot;&gt; &lt;code&gt;Chronology.of(String)&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;Chronology&lt;/code&gt; を検索するために使用できます。また、ロケールの一部として使用することもでき、&lt;a href=&quot;../../util/locale#getUnicodeLocaleType(java.lang.String)&quot;&gt; &lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt; &lt;/a&gt;を介してキー「ca」でアクセスできます。</target>
        </trans-unit>
        <trans-unit id="4446eadd3978a37be2e9479e866319a200f662b6" translate="yes" xml:space="preserve">
          <source>The calendar type is an identifier defined by the &lt;em&gt;Unicode Locale Data Markup Language (LDML)&lt;/em&gt; specification. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt;&lt;code&gt;Chronology.of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">カレンダータイプは、&lt;em&gt;Unicode Locale Data Markup Language（LDML）&lt;/em&gt;仕様で定義された識別子です。&lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt; &lt;code&gt;Chronology.of(String)&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;Chronology&lt;/code&gt; を検索するために使用できます。</target>
        </trans-unit>
        <trans-unit id="e9ed929db1a5de6f998e10698419063ed967ca06" translate="yes" xml:space="preserve">
          <source>The calendar type is an identifier defined by the &lt;em&gt;Unicode Locale Data Markup Language (LDML)&lt;/em&gt; specification. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt;&lt;code&gt;Chronology.of(String)&lt;/code&gt;&lt;/a&gt;. It can also be used as part of a locale, accessible via &lt;a href=&quot;../../util/locale#getUnicodeLocaleType-java.lang.String-&quot;&gt;&lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt;&lt;/a&gt; with the key 'ca'.</source>
          <target state="translated">カレンダータイプは、&lt;em&gt;Unicode Locale Data Markup Language（LDML）&lt;/em&gt;仕様で定義された識別子です。&lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt; &lt;code&gt;Chronology.of(String)&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;Chronology&lt;/code&gt; を検索するために使用できます。ロケールの一部として使用することもでき、キー「ca」を使用して&lt;a href=&quot;../../util/locale#getUnicodeLocaleType-java.lang.String-&quot;&gt; &lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt; &lt;/a&gt;からアクセスできます。</target>
        </trans-unit>
        <trans-unit id="5fc183cf3291b70fe7d13ce84678bde8c535e01b" translate="yes" xml:space="preserve">
          <source>The calendar type is an identifier defined by the CLDR and &lt;em&gt;Unicode Locale Data Markup Language (LDML)&lt;/em&gt; specifications to uniquely identification a calendar. The &lt;code&gt;getCalendarType&lt;/code&gt; is the concatenation of the CLDR calendar type and the variant, if applicable, is appended separated by &quot;-&quot;. The calendar type is used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt;&lt;code&gt;of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">カレンダータイプは、カレンダーを一意に識別するためにCLDRおよび&lt;em&gt;Unicodeロケールデータマークアップ言語（LDML）&lt;/em&gt;仕様で定義された識別子です。 &lt;code&gt;getCalendarType&lt;/code&gt; は「 - 」CLDRカレンダー型と変異体の連結であり、該当する場合、により分離添付されます。カレンダータイプは、&lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt; &lt;code&gt;of(String)&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;Chronology&lt;/code&gt; を検索するために使用されます。</target>
        </trans-unit>
        <trans-unit id="ecf49c80d144080449d596a16686f8ca5914884c" translate="yes" xml:space="preserve">
          <source>The calendar type is an identifier defined by the CLDR and &lt;em&gt;Unicode Locale Data Markup Language (LDML)&lt;/em&gt; specifications to uniquely identify a calendar. The &lt;code&gt;getCalendarType&lt;/code&gt; is the concatenation of the CLDR calendar type and the variant, if applicable, is appended separated by &quot;-&quot;. The calendar type is used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;#of(java.lang.String)&quot;&gt;&lt;code&gt;of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">カレンダタイプは、カレンダを一意に識別するためにCLDRおよび&lt;em&gt;Unicodeロケールデータマークアップ言語（LDML）&lt;/em&gt;仕様で定義された識別子です。 &lt;code&gt;getCalendarType&lt;/code&gt; は「 - 」CLDRカレンダー型と変異体の連結であり、該当する場合、により分離添付されます。カレンダータイプは、&lt;a href=&quot;#of(java.lang.String)&quot;&gt; &lt;code&gt;of(String)&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;Chronology&lt;/code&gt; を検索するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b6a0060fcedfd8a68377b3d1eb2b5aba06d7d975" translate="yes" xml:space="preserve">
          <source>The call</source>
          <target state="translated">呼び出し</target>
        </trans-unit>
        <trans-unit id="bfa957c4639eb6b0b522562bf5068bd4ec5c04a3" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;System.exit(n)&lt;/code&gt; is effectively equivalent to the call:</source>
          <target state="translated">&lt;code&gt;System.exit(n)&lt;/code&gt; の呼び出しは、実質的に次の呼び出しと同等です。</target>
        </trans-unit>
        <trans-unit id="76511f462f4300cf033c5338feb8d0cddaa72576" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;System.gc()&lt;/code&gt; is effectively equivalent to the call:</source>
          <target state="translated">&lt;code&gt;System.gc()&lt;/code&gt; の呼び出しは、実質的に次の呼び出しと同等です。</target>
        </trans-unit>
        <trans-unit id="b690e13d2eb683913812a8e26357b9092be90125" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;System.load(name)&lt;/code&gt; is effectively equivalent to the call:</source>
          <target state="translated">&lt;code&gt;System.load(name)&lt;/code&gt; の呼び出しは、実質的に次の呼び出しと同等です。</target>
        </trans-unit>
        <trans-unit id="1eb7ec99c5609280be9a3083224b7fba9909e0ca" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;System.loadLibrary(name)&lt;/code&gt; is effectively equivalent to the call</source>
          <target state="translated">呼び出し &lt;code&gt;System.loadLibrary(name)&lt;/code&gt; は、呼び出しと実質的に同等です。</target>
        </trans-unit>
        <trans-unit id="44ca22e66f70469f3b06955ad110de6c45f398d4" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;System.runFinalization()&lt;/code&gt; is effectively equivalent to the call:</source>
          <target state="translated">&lt;code&gt;System.runFinalization()&lt;/code&gt; の呼び出しは、実質的に次の呼び出しと同等です。</target>
        </trans-unit>
        <trans-unit id="e36a0559239de87755b7f3e15a71516f5fc282f3" translate="yes" xml:space="preserve">
          <source>The call spuriously (that is, for no reason) returns.</source>
          <target state="translated">呼び出しはスプリアスで(つまり、理由もなく)返ってきます。</target>
        </trans-unit>
        <trans-unit id="d4d15ed9ec3b7821f87167a2d4c1dc15a7458567" translate="yes" xml:space="preserve">
          <source>The call to &lt;code&gt;reset&lt;/code&gt; may throw an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reset&lt;/code&gt; を呼び出すと、 &lt;code&gt;IOException&lt;/code&gt; がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="318e87ac7cadb4f840a1d335aa357e0736d9869c" translate="yes" xml:space="preserve">
          <source>The callee will read all the &lt;a href=&quot;../transform/source&quot;&gt;&lt;code&gt;Source&lt;/code&gt;&lt;/a&gt;s and combine them into a single schema. The exact semantics of the combination depends on the schema language that this &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; object is created for.</source>
          <target state="translated">呼び出し先はすべての&lt;a href=&quot;../transform/source&quot;&gt; &lt;code&gt;Source&lt;/code&gt; &lt;/a&gt;を読み取り、それらを1つのスキーマに結合します。組み合わせの正確なセマンティクスは、この&lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt;オブジェクトが作成されるスキーマ言語によって異なります。</target>
        </trans-unit>
        <trans-unit id="768c012ad804fb9a864a4db4525b259baaf8487d" translate="yes" xml:space="preserve">
          <source>The caller can use the result to determine if it should fallback to another mechanism to read the keys.</source>
          <target state="translated">呼び出し元はその結果を使用して、鍵を読み取るために別のメカニズムにフォールバックすべきかどうかを判断することができる。</target>
        </trans-unit>
        <trans-unit id="d96dcf01d9183b3af787b40b613a5ceb1004752a" translate="yes" xml:space="preserve">
          <source>The caller initiating the security context must determine the appropriate channel binding values to set in the GSSContext object. The acceptor must provide an identical binding in order to validate that received tokens possess correct channel-related characteristics.</source>
          <target state="translated">セキュリティコンテキストの呼び出し元は、GSSContext オブジェクトに設定する適切なチャネルバインディング値を決定する必要があります。アクセプタは、受信したトークンが正しいチャネル関連の特性を持っていることを検証するために、同一のバインディングを提供しなければなりません。</target>
        </trans-unit>
        <trans-unit id="d04140412c1fb225a44054ba343d90b9017cec04" translate="yes" xml:space="preserve">
          <source>The caller must have permission to access all of the requested Credentials, or a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown.</source>
          <target state="translated">呼び出し元は、要求されたすべての資格情報にアクセスする権限を持っている必要があります。そうしないと、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="aa92adff6514811ab419f1227d3ed5e4ce614299" translate="yes" xml:space="preserve">
          <source>The caller principal must be an owner of the ACL in order to invoke this method.</source>
          <target state="translated">このメソッドを呼び出すには、呼び出し元のプリンシパルが ACL の所有者でなければなりません。</target>
        </trans-unit>
        <trans-unit id="9af10b071d26e95fd329201957fb34bf923bd4a9" translate="yes" xml:space="preserve">
          <source>The caller should not make any changes to the object returned: their effect on the context is undefined. The environment of this context may be changed using &lt;code&gt;addToEnvironment()&lt;/code&gt; and &lt;code&gt;removeFromEnvironment()&lt;/code&gt;.</source>
          <target state="translated">呼び出し元は、返されたオブジェクトに変更を加えないでください。コンテキストへの影響は定義されていません。このコンテキストの環境を使用して変更することができる &lt;code&gt;addToEnvironment()&lt;/code&gt; および &lt;code&gt;removeFromEnvironment()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8cd6ba60b3eac7216be485ec7f97649dd91f55ac" translate="yes" xml:space="preserve">
          <source>The caller type must provides as least enough arguments, and of the correct type, to satisfy the target's requirement for positional arguments before the trailing array argument. Thus, the caller must supply, at a minimum, &lt;code&gt;N-1&lt;/code&gt; arguments, where &lt;code&gt;N&lt;/code&gt; is the arity of the target. Also, there must exist conversions from the incoming arguments to the target's arguments. As with other uses of plain &lt;code&gt;invoke&lt;/code&gt;, if these basic requirements are not fulfilled, a &lt;code&gt;WrongMethodTypeException&lt;/code&gt; may be thrown.</source>
          <target state="translated">呼び出し側の型は、末尾の配列引数の前に位置引数に関するターゲットの要件を満たすために、少なくとも十分な引数と正しい型の引数を提供する必要があります。したがって、呼び出し元は、少なくとも &lt;code&gt;N-1&lt;/code&gt; 個の引数を指定する必要があります。ここで、 &lt;code&gt;N&lt;/code&gt; はターゲットのアリティです。また、入力引数からターゲットの引数への変換が存在する必要があります。単純な &lt;code&gt;invoke&lt;/code&gt; の他の使用と同様に、これらの基本的な要件が満たされない場合、 &lt;code&gt;WrongMethodTypeException&lt;/code&gt; がスローされることがあります。</target>
        </trans-unit>
        <trans-unit id="e678c4c34a7e5ad339f2ef0d335da6e8fc8e199b" translate="yes" xml:space="preserve">
          <source>The calling &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; factory method calls this method on the &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instance used for its current invocation, not on the instance used in the invocation that originally loaded the resource bundle.</source>
          <target state="translated">呼び出し元の &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; ファクトリメソッドは、リソースバンドルを最初にロードした呼び出しで使用されたインスタンスではなく、現在の呼び出しで使用された &lt;code&gt;ResourceBundle.Control&lt;/code&gt; インスタンスでこのメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="295d4fb4a3cfad392bf258af4796a9b85656d164" translate="yes" xml:space="preserve">
          <source>The calling application sees the authentication process as a single operation. However, the authentication process within the &lt;code&gt;LoginModule&lt;/code&gt; proceeds in two distinct phases. In the first phase, the LoginModule's &lt;code&gt;login&lt;/code&gt; method gets invoked by the LoginContext's &lt;code&gt;login&lt;/code&gt; method. The &lt;code&gt;login&lt;/code&gt; method for the &lt;code&gt;LoginModule&lt;/code&gt; then performs the actual authentication (prompt for and verify a password for example) and saves its authentication status as private state information. Once finished, the LoginModule's &lt;code&gt;login&lt;/code&gt; method either returns &lt;code&gt;true&lt;/code&gt; (if it succeeded) or &lt;code&gt;false&lt;/code&gt; (if it should be ignored), or throws a &lt;code&gt;LoginException&lt;/code&gt; to specify a failure. In the failure case, the &lt;code&gt;LoginModule&lt;/code&gt; must not retry the authentication or introduce delays. The responsibility of such tasks belongs to the application. If the application attempts to retry the authentication, the LoginModule's &lt;code&gt;login&lt;/code&gt; method will be called again.</source>
          <target state="translated">呼び出し元のアプリケーションは、認証プロセスを単一の操作と見なします。ただし、 &lt;code&gt;LoginModule&lt;/code&gt; 内の認証プロセスは、2つの異なるフェーズで進行します。最初のフェーズでは、LoginModuleの &lt;code&gt;login&lt;/code&gt; メソッドがLoginContextの &lt;code&gt;login&lt;/code&gt; メソッドによって呼び出されます。次に、 &lt;code&gt;LoginModule&lt;/code&gt; の &lt;code&gt;login&lt;/code&gt; メソッドは実際の認証を実行し（たとえば、パスワードの入力を求めて確認し）、その認証ステータスをプライベートステート情報として保存します。完了すると、LoginModuleの &lt;code&gt;login&lt;/code&gt; メソッドは &lt;code&gt;true&lt;/code&gt; （成功した場合）または &lt;code&gt;false&lt;/code&gt; （無視する必要がある場合）を返すか、 &lt;code&gt;LoginException&lt;/code&gt; をスローします。失敗を指定します。失敗した場合、 &lt;code&gt;LoginModule&lt;/code&gt; は認証を再試行したり、遅延を引き起こしたりしてはなりません。このようなタスクの責任はアプリケーションにあります。アプリケーションが認証を再試行しようとすると、LoginModuleの &lt;code&gt;login&lt;/code&gt; メソッドが再度呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1c3fe9fba10b534da227fa8d485a94dde30e127c" translate="yes" xml:space="preserve">
          <source>The cancelled-key set</source>
          <target state="translated">キャンセルされたキーセット</target>
        </trans-unit>
        <trans-unit id="1f0d05d11fafed55715e8743f958047cb4d86b64" translate="yes" xml:space="preserve">
          <source>The canonical form derived from the version parameter is &lt;code&gt;Runtime.Version.parse(Integer.toString(n))&lt;/code&gt; where &lt;code&gt;n&lt;/code&gt; is &lt;code&gt;Math.max(version.feature(), JarFile.baseVersion().feature())&lt;/code&gt;.</source>
          <target state="translated">バージョンパラメータから派生した正規の形式は &lt;code&gt;Runtime.Version.parse(Integer.toString(n))&lt;/code&gt; です。ここで、 &lt;code&gt;n&lt;/code&gt; は &lt;code&gt;Math.max(version.feature(), JarFile.baseVersion().feature())&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7705f65a7bdd439c114a9df9b4c5a1d7648e03b2" translate="yes" xml:space="preserve">
          <source>The canonical form of the name.</source>
          <target state="translated">名前の正準形。</target>
        </trans-unit>
        <trans-unit id="a1104158561eadc7967dd83f5b89d12e9b6c57d4" translate="yes" xml:space="preserve">
          <source>The canonical key property list string. This string is independent of whether the ObjectName is a pattern.</source>
          <target state="translated">定型キー・プロパティ・リスト文字列。この文字列は、ObjectNameがパターンであるかどうかに依存しません。</target>
        </trans-unit>
        <trans-unit id="791454749861f9eb0692973f9cadb5f0f1a53c91" translate="yes" xml:space="preserve">
          <source>The canonical name of this charset</source>
          <target state="translated">この文字セットの正式名称</target>
        </trans-unit>
        <trans-unit id="210de0ba154cb7e2b8b0b68265e90339f4d9d26d" translate="yes" xml:space="preserve">
          <source>The canonical pathname of a file that resides on some other machine and is accessed via a remote-filesystem protocol such as SMB or NFS may or may not begin with one of the roots returned by this method. If the pathname of a remote file is syntactically indistinguishable from the pathname of a local file then it will begin with one of the roots returned by this method. Thus, for example, &lt;code&gt;File&lt;/code&gt; objects denoting the root directories of the mapped network drives of a Windows platform will be returned by this method, while &lt;code&gt;File&lt;/code&gt; objects containing UNC pathnames will not be returned by this method.</source>
          <target state="translated">他のマシンに常駐し、SMBやNFSなどのリモートファイルシステムプロトコルを介してアクセスされるファイルの正規のパス名は、このメソッドによって返されるルートの1つで始まる場合と始まらない場合があります。リモートファイルのパス名がローカルファイルのパス名と構文的に区別できない場合、このメソッドによって返されるルートの1つで始まります。したがって、たとえば、Windowsプラットフォームのマップされたネットワークドライブのルートディレクトリを示す &lt;code&gt;File&lt;/code&gt; オブジェクトはこのメソッドによって返されますが、UNCパス名を含む &lt;code&gt;File&lt;/code&gt; オブジェクトはこのメソッドによって返されません。</target>
        </trans-unit>
        <trans-unit id="de6a0ba5b090b016962ea6aeaab45878b7d009d1" translate="yes" xml:space="preserve">
          <source>The canonical pathname string denoting the same file or directory as this abstract pathname</source>
          <target state="translated">この抽象パス名と同じファイルやディレクトリを表す正準パス名文字列</target>
        </trans-unit>
        <trans-unit id="f3002d045225be82bcb986e5cc5054510e6d33e1" translate="yes" xml:space="preserve">
          <source>The capability of determining the location of text in the view is provided. There are two methods, &lt;a href=&quot;#modelToView(int)&quot;&gt;&lt;code&gt;modelToView(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#viewToModel(java.awt.Point)&quot;&gt;&lt;code&gt;viewToModel(java.awt.Point)&lt;/code&gt;&lt;/a&gt; for determining this information.</source>
          <target state="translated">ビュー内のテキストの場所を決定する機能が提供されます。この情報を決定するための2つのメソッド、&lt;a href=&quot;#modelToView(int)&quot;&gt; &lt;code&gt;modelToView(int)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#viewToModel(java.awt.Point)&quot;&gt; &lt;code&gt;viewToModel(java.awt.Point)&lt;/code&gt; &lt;/a&gt;があります。</target>
        </trans-unit>
        <trans-unit id="2dd69bbf6aa755d82287b8178393cdb4e9dc5d14" translate="yes" xml:space="preserve">
          <source>The capacity of this buffer</source>
          <target state="translated">このバッファの容量</target>
        </trans-unit>
        <trans-unit id="e6ddf569c4f9f11da3f1c096e2d9563ba72d6331" translate="yes" xml:space="preserve">
          <source>The captured image</source>
          <target state="translated">キャプチャされた画像</target>
        </trans-unit>
        <trans-unit id="5f754be5b922ce10c49466dd844dfc855b60ce26" translate="yes" xml:space="preserve">
          <source>The captured input associated with a group is always the subsequence that the group most recently matched. If a group is evaluated a second time because of quantification then its previously-captured value, if any, will be retained if the second evaluation fails. Matching the string &lt;code&gt;&quot;aba&quot;&lt;/code&gt; against the expression &lt;code&gt;(a(b)?)+&lt;/code&gt;, for example, leaves group two set to &lt;code&gt;&quot;b&quot;&lt;/code&gt;. All captured input is discarded at the beginning of each match.</source>
          <target state="translated">グループに関連付けられたキャプチャされた入力は常に、グループが最後に一致したサブシーケンスです。定量化のためにグループが2回評価されると、2回目の評価が失敗した場合、以前に取得された値があればそれが保持されます。たとえば、文字列 &lt;code&gt;&quot;aba&quot;&lt;/code&gt; を式 &lt;code&gt;(a(b)?)+&lt;/code&gt; と照合すると、グループ2は &lt;code&gt;&quot;b&quot;&lt;/code&gt; に設定されたままになります。キャプチャされたすべての入力は、各一致の開始時に破棄されます。</target>
        </trans-unit>
        <trans-unit id="f654b268e7aa116ea7c684306472b0ca1ad3bd65" translate="yes" xml:space="preserve">
          <source>The caret acts as a mouse and focus listener on the text component it has been installed in, and defines the caret semantics based upon those events. The listener methods can be reimplemented to change the semantics. By default, the first mouse button will be used to set focus and caret position. Dragging the mouse pointer with the first mouse button will sweep out a selection that is contiguous in the model. If the associated text component is editable, the caret will become visible when focus is gained, and invisible when focus is lost.</source>
          <target state="translated">キャレットは、それがインストールされたテキストコンポーネント上でマウスとフォーカスのリスナーとして動作し、それらのイベントに基づいてキャレットのセマンティクスを定義します。リスナーメソッドは、セマンティクスを変更するために再実装することができます。デフォルトでは、最初のマウスボタンがフォーカスとキャレット位置の設定に使用されます。最初のマウスボタンでマウスポインタをドラッグすると、モデル内で連続している選択範囲が一掃されます。関連するテキストコンポーネントが編集可能な場合は、フォーカスが得られるとキャレットが表示され、フォーカスがなくなると見えなくなります。</target>
        </trans-unit>
        <trans-unit id="1f33dab989db11d55d3bacf177757859513b84af" translate="yes" xml:space="preserve">
          <source>The caret is a pluggable object in swing text components. Notification of changes to the caret position and the selection are sent to implementations of the &lt;code&gt;CaretListener&lt;/code&gt; interface that have been registered with the text component. The UI will install a default caret unless a customized caret has been set.</source>
          <target state="translated">キャレットは、スイングテキストコンポーネントのプラグ可能なオブジェクトです。キャレットの位置と選択の変更の通知は、テキストコンポーネントに登録されている &lt;code&gt;CaretListener&lt;/code&gt; インターフェイスの実装に送信されます。カスタマイズされたキャレットが設定されていない限り、UIはデフォルトのキャレットをインストールします。</target>
        </trans-unit>
        <trans-unit id="86fa7a262c868582bc5ac9ee61d205350adc5a62" translate="yes" xml:space="preserve">
          <source>The caret is painted.</source>
          <target state="translated">キャレットが描かれています。</target>
        </trans-unit>
        <trans-unit id="454d106b2ed5373abf97288cbbf46f7fa9aede72" translate="yes" xml:space="preserve">
          <source>The carriage-return character (&lt;code&gt;'\u000D'&lt;/code&gt;)</source>
          <target state="translated">復帰文字（ &lt;code&gt;'\u000D'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="bf62c1f85c8322515dc2cf5ea1cf81604ccad3fb" translate="yes" xml:space="preserve">
          <source>The case of names is significant. All names should be treated as case-sensitive. For example, some file systems have case-insensitive, case-aware file names. File objects representing such files should take care to preserve case by using &lt;a href=&quot;../../../java.base/java/io/file#getCanonicalFile()&quot;&gt;&lt;code&gt;File.getCanonicalFile()&lt;/code&gt;&lt;/a&gt; or similar means. If the system is not case-aware, file objects must use other means to preserve case.</source>
          <target state="translated">名前の場合は重要です。すべての名前では大文字と小文字が区別されます。たとえば、一部のファイルシステムでは、大文字と小文字を区別せず、大文字と小文字を区別するファイル名が使用されます。このようなファイルを表すファイルオブジェクトは、&lt;a href=&quot;../../../java.base/java/io/file#getCanonicalFile()&quot;&gt; &lt;code&gt;File.getCanonicalFile()&lt;/code&gt; &lt;/a&gt;または同様の手段を使用して、大文字と小文字を区別するように注意する必要があります。システムが大文字と小文字を区別しない場合、ファイルオブジェクトは大文字と小文字を区別するために他の手段を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="a336e54edba2db7b0d45359eec9f772478b631f0" translate="yes" xml:space="preserve">
          <source>The case of names is significant. All names should be treated as case-sensitive. For example, some file systems have case-insensitive, case-aware file names. File objects representing such files should take care to preserve case by using &lt;a href=&quot;../../java/io/file#getCanonicalFile--&quot;&gt;&lt;code&gt;File.getCanonicalFile()&lt;/code&gt;&lt;/a&gt; or similar means. If the system is not case-aware, file objects must use other means to preserve case.</source>
          <target state="translated">名前の大文字と小文字は区別されます。すべての名前は大文字と小文字を区別するものとして扱う必要があります。たとえば、一部のファイルシステムでは、大文字と小文字が区別されず、大文字と小文字が区別されます。そのようなファイルを表すFileオブジェクトは、&lt;a href=&quot;../../java/io/file#getCanonicalFile--&quot;&gt; &lt;code&gt;File.getCanonicalFile()&lt;/code&gt; &lt;/a&gt;または同様の手段を使用して大文字と小文字を保持するように注意する必要があります。システムで大文字と小文字が区別されない場合、ファイルオブジェクトは他の手段を使用して大文字と小文字を保持する必要があります。</target>
        </trans-unit>
        <trans-unit id="8fa76ae4c3a9a054d0b180c034bb5ab398342f9e" translate="yes" xml:space="preserve">
          <source>The catalog column is:</source>
          <target state="translated">カタログ欄は</target>
        </trans-unit>
        <trans-unit id="a68a56f85f50d4a3bd11e0630615e26f7f282680" translate="yes" xml:space="preserve">
          <source>The cause of the activation exception.</source>
          <target state="translated">活性化例外の原因。</target>
        </trans-unit>
        <trans-unit id="735c24ada71f9c0a910f8d211c119bd92a6c307f" translate="yes" xml:space="preserve">
          <source>The cause of the exception.</source>
          <target state="translated">例外の原因。</target>
        </trans-unit>
        <trans-unit id="72733aae3de9acb183baaab1a9525b354c63a3a6" translate="yes" xml:space="preserve">
          <source>The cause of the remote exception.</source>
          <target state="translated">リモート例外の原因。</target>
        </trans-unit>
        <trans-unit id="950b8ee7732eb08f5ae8f7c10e0fbf2805346d12" translate="yes" xml:space="preserve">
          <source>The cell used to draw nodes.</source>
          <target state="translated">ノードの描画に使用するセル。</target>
        </trans-unit>
        <trans-unit id="bed6f946252235f638a5c558ea2264b1004e064a" translate="yes" xml:space="preserve">
          <source>The cell used to draw nodes. If &lt;code&gt;null&lt;/code&gt;, the UI uses a default &lt;code&gt;cellRenderer&lt;/code&gt;.</source>
          <target state="translated">ノードの描画に使用されるセル。場合 &lt;code&gt;null&lt;/code&gt; 、UIはデフォルトの使用 &lt;code&gt;cellRenderer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21385f52060e6b3b1820318af4439ce11e0ea9c3" translate="yes" xml:space="preserve">
          <source>The cells from (firstRow, column) to (lastRow, column) have been changed.</source>
          <target state="translated">(firstRow,column)から(lastRow,column)までのセルを変更しました。</target>
        </trans-unit>
        <trans-unit id="4f4febe22a4ac9250eebeae2e09a0ccc8854abf4" translate="yes" xml:space="preserve">
          <source>The cells from (firstRow, column) to (lastRow, column) have been changed. The</source>
          <target state="translated">(firstRow,column)から(lastRow,column)までのセルが変更されました。のセルが変更されました。</target>
        </trans-unit>
        <trans-unit id="0e663c6d1cb7f2148cb7a048469122118729985a" translate="yes" xml:space="preserve">
          <source>The cells in column</source>
          <target state="translated">列のセル</target>
        </trans-unit>
        <trans-unit id="d6aac3d3a62bf0fb9ebd69ea942c8b185d7753f2" translate="yes" xml:space="preserve">
          <source>The center layout constraint (middle of container).</source>
          <target state="translated">中央のレイアウト制約(コンテナの中央)。</target>
        </trans-unit>
        <trans-unit id="bb3b1cd6db2267bff743c80e17b1be7434e1c0b8" translate="yes" xml:space="preserve">
          <source>The center of the arc is the center of the rectangle whose origin is (</source>
          <target state="translated">円弧の中心は、原点が (</target>
        </trans-unit>
        <trans-unit id="a18ae82107d7074e97f5e1bfd9b5c68cb340a111" translate="yes" xml:space="preserve">
          <source>The central abstractions of the NIO APIs are:</source>
          <target state="translated">NIO APIの中心的な抽象化は、以下の通りです。</target>
        </trans-unit>
        <trans-unit id="eea9d66af2319420cb90b9153a7f48fc60a2109b" translate="yes" xml:space="preserve">
          <source>The central authority, after computing the parameters, must send this information to the parties looking to agree on a secret key.</source>
          <target state="translated">中央機関は、パラメータを計算した後、この情報を秘密鍵に合意しようとする当事者に送らなければならない。</target>
        </trans-unit>
        <trans-unit id="31bbd318f66267e19a59875dc86d02599fff6ad3" translate="yes" xml:space="preserve">
          <source>The central position in an area.</source>
          <target state="translated">エリア内の中心的な位置。</target>
        </trans-unit>
        <trans-unit id="0c044d2527674844aeb7838cafb455cbbf0e7d17" translate="yes" xml:space="preserve">
          <source>The central position in an area. Used for both compass-direction constants (NORTH, etc.) and box-orientation constants (TOP, etc.).</source>
          <target state="translated">領域内の中心位置。コンパス方向定数(NORTHなど)とボックス方向定数(TOPなど)の両方に使用されます。</target>
        </trans-unit>
        <trans-unit id="c22f0301e2c96e02c998d11f05a81bda7ec13023" translate="yes" xml:space="preserve">
          <source>The certificate contains one or more unrecognized critical extensions.</source>
          <target state="translated">この証明書には、1 つ以上の認識されていない重要な拡張子が含まれています。</target>
        </trans-unit>
        <trans-unit id="b3f88fc74a60569eaa011ebfe60b8bb781fd8d80" translate="yes" xml:space="preserve">
          <source>The certificate does not chain correctly.</source>
          <target state="translated">証明書が正しくチェーンされていません。</target>
        </trans-unit>
        <trans-unit id="b25d26b01801270f07001113d7e2c75485deab07" translate="yes" xml:space="preserve">
          <source>The certificate is expired.</source>
          <target state="translated">証明書の有効期限が切れています。</target>
        </trans-unit>
        <trans-unit id="6e2ff8ce341f5930215309008c9e9de70d1648b6" translate="yes" xml:space="preserve">
          <source>The certificate is not a CA certificate.</source>
          <target state="translated">CAの証明書ではありません。</target>
        </trans-unit>
        <trans-unit id="8b796401164cf6fe5dbe9be3e622da059437350d" translate="yes" xml:space="preserve">
          <source>The certificate is not yet valid.</source>
          <target state="translated">証明書はまだ有効ではありません。</target>
        </trans-unit>
        <trans-unit id="ee1a1d0d8304f8fa5e5065bbc09eefcc09be7d06" translate="yes" xml:space="preserve">
          <source>The certificate is revoked.</source>
          <target state="translated">証明書は取り消されています。</target>
        </trans-unit>
        <trans-unit id="e3899819dea82e37e000988814aa79fa88a75e2d" translate="yes" xml:space="preserve">
          <source>The certificate's key usage is invalid.</source>
          <target state="translated">証明書の鍵の使用が無効です。</target>
        </trans-unit>
        <trans-unit id="b384fb743347a5a12dacd02a3d76e6f93ee0b1f3" translate="yes" xml:space="preserve">
          <source>The certificates supplied must be of a type supported by the &lt;code&gt;CertificateFactory&lt;/code&gt;. They will be copied out of the supplied &lt;code&gt;List&lt;/code&gt; object.</source>
          <target state="translated">提供される証明書は、 &lt;code&gt;CertificateFactory&lt;/code&gt; がサポートするタイプである必要があります。それらは、提供された &lt;code&gt;List&lt;/code&gt; オブジェクトからコピーされます。</target>
        </trans-unit>
        <trans-unit id="c8b00d4d4f4b86477d55b6e145457b3ceca2ef79" translate="yes" xml:space="preserve">
          <source>The change event for the model.</source>
          <target state="translated">モデルの変更イベント。</target>
        </trans-unit>
        <trans-unit id="eff2515cf3660b511336c271115d60c3d25266db" translate="yes" xml:space="preserve">
          <source>The change event for the model. Only one ChangeEvent is needed per model instance since the event's only (read-only) state is the source property. The source of events generated here is always &quot;this&quot;.</source>
          <target state="translated">モデルの変更イベント。イベントの唯一の(読み取り専用の)状態がソース・プロパティであるため、モデル・インスタンスごとに1つのChangeEventだけが必要です。ここで生成されるイベントのソースは常に &quot;this &quot;です。</target>
        </trans-unit>
        <trans-unit id="8e35a9d4c22f210e2a5a10cf8dd793f7216c1761" translate="yes" xml:space="preserve">
          <source>The change event.</source>
          <target state="translated">変更イベントです。</target>
        </trans-unit>
        <trans-unit id="956ae8d2236a24f62640100e8b1e007288c60360" translate="yes" xml:space="preserve">
          <source>The change listeners for the model.</source>
          <target state="translated">モデルの変更リスナー。</target>
        </trans-unit>
        <trans-unit id="7b98e8e58f22b3caa2eb436eb57fa4ba86980758" translate="yes" xml:space="preserve">
          <source>The change to</source>
          <target state="translated">への変更</target>
        </trans-unit>
        <trans-unit id="d6e6681b8ed8b2fabf6b1b1685ceba0031ebea2a" translate="yes" xml:space="preserve">
          <source>The changeListener (no suffix) is the listener we add to the slider's model.</source>
          <target state="translated">changeListener (接尾辞なし)は、スライダーのモデルに追加するリスナーです。</target>
        </trans-unit>
        <trans-unit id="784a0ab0404a20c47ad0e34d28e6554225379520" translate="yes" xml:space="preserve">
          <source>The changeListener (no suffix) is the listener we add to the slider's model. This listener is initialized to the &lt;code&gt;ChangeListener&lt;/code&gt; returned from &lt;code&gt;createChangeListener&lt;/code&gt;, which by default just forwards events to &lt;code&gt;ChangeListener&lt;/code&gt;s (if any) added directly to the slider.</source>
          <target state="translated">changeListener（サフィックスなし）は、スライダーのモデルに追加するリスナーです。このリスナーはに初期化される &lt;code&gt;ChangeListener&lt;/code&gt; から返さ &lt;code&gt;createChangeListener&lt;/code&gt; デフォルトでちょうど転送したイベント、 &lt;code&gt;ChangeListener&lt;/code&gt; スライダに直接追加の（もしあれば）。</target>
        </trans-unit>
        <trans-unit id="4fdc013cd02b34bb628674b8ff4bd551ff228166" translate="yes" xml:space="preserve">
          <source>The changing of the component hierarchy will touch the component lock, which is the one thing that is not safe from the View hierarchy. Therefore, this functionality is executed immediately if on the event thread, or is queued on the event queue if called from another thread (notification of change from an asynchronous update).</source>
          <target state="translated">コンポーネント階層の変更はコンポーネントロックに触れることになりますが、これはView階層からは安全ではありません。そのため、この機能はイベントスレッド上であれば即座に実行され、他のスレッドから呼び出された場合はイベントキューにキューイングされます(非同期更新からの変更通知)。</target>
        </trans-unit>
        <trans-unit id="3ef63324777b7b14fe754d2696b2ef9060c9840d" translate="yes" xml:space="preserve">
          <source>The channel</source>
          <target state="translated">チャンネル</target>
        </trans-unit>
        <trans-unit id="273f3a154b1e12746a05f884c9cef9ece2560ed9" translate="yes" xml:space="preserve">
          <source>The channel upon whose file this lock was acquired.</source>
          <target state="translated">このロックが取得されたファイルのチャンネル。</target>
        </trans-unit>
        <trans-unit id="1e0652fa3fbb3d765369e9f411541094bc17eda1" translate="yes" xml:space="preserve">
          <source>The channel's socket is configured so that it can receive datagrams from, and sends datagrams to, any remote address so long as the security manager, if installed, permits it.</source>
          <target state="translated">チャネルのソケットは、セキュリティマネージャがインストールされている場合、それが許可されている限り、任意のリモートアドレスからデータグラムを受信し、データグラムを送信できるように設定されています。</target>
        </trans-unit>
        <trans-unit id="118fc18fddf3f99946425aa7c2e5b6561b28a981" translate="yes" xml:space="preserve">
          <source>The channel's socket is configured so that it only receives datagrams from, and sends datagrams to, the given remote</source>
          <target state="translated">チャネルのソケットは、指定されたリモートの</target>
        </trans-unit>
        <trans-unit id="577f4a4bd9f1a525a92f81820c6bbda92b62eb43" translate="yes" xml:space="preserve">
          <source>The channel's socket should be bound to the &lt;a href=&quot;../../net/inetaddress#isAnyLocalAddress()&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address. If the socket is bound to a specific address, rather than the wildcard address then it is implementation specific if multicast datagrams are received by the socket.</source>
          <target state="translated">チャネルのソケットは&lt;a href=&quot;../../net/inetaddress#isAnyLocalAddress()&quot;&gt; &lt;code&gt;wildcard&lt;/code&gt; &lt;/a&gt;アドレスにバインドする必要があります。ソケットがワイルドカードアドレスではなく特定のアドレスにバインドされている場合、マルチキャストデータグラムがソケットによって受信されるかどうかは実装固有です。</target>
        </trans-unit>
        <trans-unit id="4c3b4f4f803181b3afa3181177892230a023a909" translate="yes" xml:space="preserve">
          <source>The channel's socket should be bound to the &lt;a href=&quot;../../net/inetaddress#isAnyLocalAddress--&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address. If the socket is bound to a specific address, rather than the wildcard address then it is implementation specific if multicast datagrams are received by the socket.</source>
          <target state="translated">チャネルのソケットは&lt;a href=&quot;../../net/inetaddress#isAnyLocalAddress--&quot;&gt; &lt;code&gt;wildcard&lt;/code&gt; &lt;/a&gt;アドレスにバインドする必要があります。ソケットがワイルドカードアドレスではなく特定のアドレスにバインドされている場合、マルチキャストデータグラムがソケットによって受信されるかどうかは実装固有です。</target>
        </trans-unit>
        <trans-unit id="a699f56014d87844a8ee4bb207efd8389c233bcd" translate="yes" xml:space="preserve">
          <source>The channel, once created, is not dependent upon the directory stream used to create it. Closing this directory stream has no effect upon the channel.</source>
          <target state="translated">一度作成されたチャンネルは、その作成に使用されたディレクトリストリームに依存しません。このディレクトリストリームを閉じてもチャネルには何の影響もありません。</target>
        </trans-unit>
        <trans-unit id="39a6f005d3b2a7ce9af757d87e217ca0deda5d34" translate="yes" xml:space="preserve">
          <source>The char array of data.</source>
          <target state="translated">データのchar配列です。</target>
        </trans-unit>
        <trans-unit id="7290d5e1f93c0657c60681207491c9d4282f5969" translate="yes" xml:space="preserve">
          <source>The char at the buffer's current position</source>
          <target state="translated">バッファの現在位置の文字</target>
        </trans-unit>
        <trans-unit id="54b64de4dceefa74c52963cd7e8709b225830d3a" translate="yes" xml:space="preserve">
          <source>The char at the given index</source>
          <target state="translated">指定されたインデックスの文字</target>
        </trans-unit>
        <trans-unit id="0fb8540e46e037f0a55ee7cdb05c6a02e8b3244a" translate="yes" xml:space="preserve">
          <source>The char value at the buffer's current position</source>
          <target state="translated">バッファの現在位置の char 値</target>
        </trans-unit>
        <trans-unit id="38f5117adec7b8930b5b6167a3b737d62ce6af18" translate="yes" xml:space="preserve">
          <source>The char value at the given index</source>
          <target state="translated">指定されたインデックスの文字値</target>
        </trans-unit>
        <trans-unit id="861556c9f709a544627b4ec57f4cad7a37448510" translate="yes" xml:space="preserve">
          <source>The character</source>
          <target state="translated">キャラクター</target>
        </trans-unit>
        <trans-unit id="a31e6336561cb067818ee6d07b56859cf4a07e52" translate="yes" xml:space="preserve">
          <source>The character 'n'. The two characters represent a newline ('\n' in Java).</source>
          <target state="translated">文字'n'です。2つの文字は改行(Javaでは'\n')を表します。</target>
        </trans-unit>
        <trans-unit id="99fe90d5b42df4311043f886ab6c19c1e8b75bb8" translate="yes" xml:space="preserve">
          <source>The character at index</source>
          <target state="translated">インデックスの文字</target>
        </trans-unit>
        <trans-unit id="add7c9db1597ce73e7b64c0b4d75b5e5f46580e5" translate="yes" xml:space="preserve">
          <source>The character at index &lt;code&gt;position() + index&lt;/code&gt;</source>
          <target state="translated">インデックス &lt;code&gt;position() + index&lt;/code&gt; の文字（）+インデックス</target>
        </trans-unit>
        <trans-unit id="7913fbf250e90f8c3ebaa828e0ccf95027ea7dac" translate="yes" xml:space="preserve">
          <source>The character at index &lt;code&gt;position()&amp;nbsp;+&amp;nbsp;index&lt;/code&gt;</source>
          <target state="translated">インデックス &lt;code&gt;position()&amp;nbsp;+&amp;nbsp;index&lt;/code&gt; の文字（）+インデックス</target>
        </trans-unit>
        <trans-unit id="2df8f2bba1b114eddf895aae602e96bbb49d0161" translate="yes" xml:space="preserve">
          <source>The character at the specified index is set to &lt;code&gt;ch&lt;/code&gt;.</source>
          <target state="translated">指定したインデックスの文字は &lt;code&gt;ch&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="05cb1c2e1ff664b4468546f04c60b5ac72c5839e" translate="yes" xml:space="preserve">
          <source>The character at the specified index is set to &lt;code&gt;ch&lt;/code&gt;. This sequence is altered to represent a new character sequence that is identical to the old character sequence, except that it contains the character &lt;code&gt;ch&lt;/code&gt; at position &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">指定されたインデックスの文字が &lt;code&gt;ch&lt;/code&gt; に設定されます。このシーケンスは、位置 &lt;code&gt;index&lt;/code&gt; に文字 &lt;code&gt;ch&lt;/code&gt; が含まれていることを除いて、古い文字シーケンスと同一の新しい文字シーケンスを表すように変更されます。</target>
        </trans-unit>
        <trans-unit id="60ad5395dc1ff483a8ff68c1464584af5830cab2" translate="yes" xml:space="preserve">
          <source>The character buffer.</source>
          <target state="translated">文字バッファです。</target>
        </trans-unit>
        <trans-unit id="70f203f41b9c452844aa256ef0bb4e81a6005ccc" translate="yes" xml:space="preserve">
          <source>The character data of the node that implements this interface.</source>
          <target state="translated">このインタフェースを実装したノードの文字データ。</target>
        </trans-unit>
        <trans-unit id="a45523bab125a86352ac449c7a46dae9cfa3064c" translate="yes" xml:space="preserve">
          <source>The character data of the node that implements this interface. The DOM implementation may not put arbitrary limits on the amount of data that may be stored in a &lt;code&gt;CharacterData&lt;/code&gt; node. However, implementation limits may mean that the entirety of a node's data may not fit into a single &lt;code&gt;DOMString&lt;/code&gt;. In such cases, the user may call &lt;code&gt;substringData&lt;/code&gt; to retrieve the data in appropriately sized pieces.</source>
          <target state="translated">このインターフェースを実装するノードの文字データ。 DOM実装は、 &lt;code&gt;CharacterData&lt;/code&gt; ノードに格納できるデータの量に任意の制限を課すことはできません。ただし、実装の制限により、ノードのデータ全体が単一の &lt;code&gt;DOMString&lt;/code&gt; に収まらない場合があります。このような場合、ユーザーは &lt;code&gt;substringData&lt;/code&gt; を呼び出して、適切なサイズのデータ​​を取得できます。</target>
        </trans-unit>
        <trans-unit id="718c1608eb642e79984b1c33db929e47a46949af" translate="yes" xml:space="preserve">
          <source>The character encoding to use for the output.</source>
          <target state="translated">出力に使用する文字エンコーディング。</target>
        </trans-unit>
        <trans-unit id="f5d0f39150aed7cebe9518370ff00134deff7b43" translate="yes" xml:space="preserve">
          <source>The character encoding to use for the output. The encoding must be a string acceptable for an XML encoding declaration ([&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt;] section 4.3.3 &quot;Character Encoding in Entities&quot;), it is recommended that character encodings registered (as charsets) with the Internet Assigned Numbers Authority [&lt;a href=&quot;ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets&quot;&gt;IANA-CHARSETS&lt;/a&gt;] should be referred to using their registered names.</source>
          <target state="translated">出力に使用する文字エンコード。エンコーディングは、XMLエンコーディング宣言（[ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt; ]セクション4.3.3「エンティティでの文字エンコーディング」）に使用できる文字列である必要があります。文字エンコーディングは、Internet Assigned Numbers Authority [ &lt;a href=&quot;ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets&quot;&gt;IANA-CHARSETS&lt;/a&gt; ]に（文字セットとして）登録することをお勧めします。]は、登録名を使用して参照する必要があります。</target>
        </trans-unit>
        <trans-unit id="b1b3c9f4165d65582f7f43545ad013dca4e32be8" translate="yes" xml:space="preserve">
          <source>The character encoding, if known.</source>
          <target state="translated">文字エンコーディングがわかっている場合は、その文字エンコーディングを指定します。</target>
        </trans-unit>
        <trans-unit id="7c8d321ef1e971aa674156adc969397230fe588a" translate="yes" xml:space="preserve">
          <source>The character encoding, if known. The encoding must be a string acceptable for an XML encoding declaration ([&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt;] section 4.3.3 &quot;Character Encoding in Entities&quot;).</source>
          <target state="translated">わかっている場合は、文字エンコード。エンコーディングは、XMLエンコーディング宣言に受け入れられる文字列である必要があります（[ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt; ]セクション4.3.3「エンティティでの文字エンコーディング」）。</target>
        </trans-unit>
        <trans-unit id="f53810bc7c23ad757010d0dee9a2d3f2d0f88c86" translate="yes" xml:space="preserve">
          <source>The character index of the first text boundary.</source>
          <target state="translated">最初のテキスト境界の文字インデックス。</target>
        </trans-unit>
        <trans-unit id="bf1cc285cf8f3350802731f918ab3a751880522f" translate="yes" xml:space="preserve">
          <source>The character index of the last text boundary.</source>
          <target state="translated">最後のテキスト境界の文字インデックス。</target>
        </trans-unit>
        <trans-unit id="fbb25d884c4b95970cd226381775257633d22616" translate="yes" xml:space="preserve">
          <source>The character index of the next text boundary or &lt;code&gt;BreakIterator.DONE&lt;/code&gt; if the current boundary is the last text boundary. Equivalent to next(1).</source>
          <target state="translated">次のテキスト境界の文字インデックス、または現在の境界が最後のテキスト境界の場合は &lt;code&gt;BreakIterator.DONE&lt;/code&gt; 。next（1）と同等です。</target>
        </trans-unit>
        <trans-unit id="8f936cd2ad0aa613f11cba5c34739fa3c3541469" translate="yes" xml:space="preserve">
          <source>The character index of the nth boundary from the current position or &lt;code&gt;BreakIterator.DONE&lt;/code&gt; if either first or last text boundary has been reached.</source>
          <target state="translated">現在の位置からn番目の境界の文字インデックス、または最初または最後のテキスト境界に達した場合は &lt;code&gt;BreakIterator.DONE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e9038b2d54c15a81fe437312a391d350ec427b8" translate="yes" xml:space="preserve">
          <source>The character index of the previous text boundary or &lt;code&gt;BreakIterator.DONE&lt;/code&gt; if the current boundary is the first text boundary.</source>
          <target state="translated">前のテキスト境界の文字インデックス、または現在の境界が最初のテキスト境界の場合は &lt;code&gt;BreakIterator.DONE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85a238174f4550c34f72f6ae6bc1bc6a516a69c0" translate="yes" xml:space="preserve">
          <source>The character is one of the fullwidth lowercase Latin letters a (&lt;code&gt;'\uFF41'&lt;/code&gt;) through z (&lt;code&gt;'\uFF5A'&lt;/code&gt;) and its code is less than &lt;code&gt;radix + '\uFF41' - 10&lt;/code&gt;. In this case, &lt;code&gt;ch - '\uFF41' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">文字は、全角小文字のラテン文字a（ &lt;code&gt;'\uFF41'&lt;/code&gt; ）〜z（ &lt;code&gt;'\uFF5A'&lt;/code&gt; ）のいずれかであり、そのコードは &lt;code&gt;radix + '\uFF41' - 10&lt;/code&gt; 未満です。この場合、 &lt;code&gt;ch - '\uFF41' + 10&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="393a621e1493451e2055126ad0ce9ab6f642949f" translate="yes" xml:space="preserve">
          <source>The character is one of the fullwidth lowercase Latin letters a (&lt;code&gt;'\uFF41'&lt;/code&gt;) through z (&lt;code&gt;'\uFF5A'&lt;/code&gt;) and its code is less than &lt;code&gt;radix + '\uFF41'- 10&lt;/code&gt;. In this case, &lt;code&gt;codePoint - '\uFF41' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">文字は、全角小文字のラテン文字a（ &lt;code&gt;'\uFF41'&lt;/code&gt; ）〜z（ &lt;code&gt;'\uFF5A'&lt;/code&gt; ）のいずれかであり、そのコードは &lt;code&gt;radix + '\uFF41'- 10&lt;/code&gt; 未満です。この場合、 &lt;code&gt;codePoint - '\uFF41' + 10&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="57d9c7164d71a3374ba8edd927a1bf0f75b1189e" translate="yes" xml:space="preserve">
          <source>The character is one of the fullwidth uppercase Latin letters A (&lt;code&gt;'\uFF21'&lt;/code&gt;) through Z (&lt;code&gt;'\uFF3A'&lt;/code&gt;) and its code is less than &lt;code&gt;radix + '\uFF21' - 10&lt;/code&gt;. In this case, &lt;code&gt;ch - '\uFF21' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">文字は全角大文字のラテン文字A（ &lt;code&gt;'\uFF21'&lt;/code&gt; ）〜Z（ &lt;code&gt;'\uFF3A'&lt;/code&gt; ）のいずれかであり、そのコードは &lt;code&gt;radix + '\uFF21' - 10&lt;/code&gt; 未満です。この場合、 &lt;code&gt;ch - '\uFF21' + 10&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="732e1fdb20043b7a30607a5f809fab9e87fcf502" translate="yes" xml:space="preserve">
          <source>The character is one of the fullwidth uppercase Latin letters A (&lt;code&gt;'\uFF21'&lt;/code&gt;) through Z (&lt;code&gt;'\uFF3A'&lt;/code&gt;) and its code is less than &lt;code&gt;radix + '\uFF21' - 10&lt;/code&gt;. In this case, &lt;code&gt;codePoint - '\uFF21' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">文字は全角大文字のラテン文字A（ &lt;code&gt;'\uFF21'&lt;/code&gt; ）〜Z（ &lt;code&gt;'\uFF3A'&lt;/code&gt; ）のいずれかであり、そのコードは &lt;code&gt;radix + '\uFF21' - 10&lt;/code&gt; 未満です。この場合、 &lt;code&gt;codePoint - '\uFF21' + 10&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="1eb711d346697b7b7850b866e9e676aabf15ad34" translate="yes" xml:space="preserve">
          <source>The character is one of the lowercase Latin letters &lt;code&gt;'a'&lt;/code&gt; through &lt;code&gt;'z'&lt;/code&gt; and its code is less than &lt;code&gt;radix + 'a' - 10&lt;/code&gt;. In this case, &lt;code&gt;ch - 'a' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">文字は、小文字のラテン文字 &lt;code&gt;'a'&lt;/code&gt; 〜 &lt;code&gt;'z'&lt;/code&gt; あり、そのコードは &lt;code&gt;radix + 'a' - 10&lt;/code&gt; 未満です。この場合、 &lt;code&gt;ch - 'a' + 10&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="d4985c1ad0a3e0ebca4f21ca205a752bc0f9e0b1" translate="yes" xml:space="preserve">
          <source>The character is one of the lowercase Latin letters &lt;code&gt;'a'&lt;/code&gt; through &lt;code&gt;'z'&lt;/code&gt; and its code is less than &lt;code&gt;radix + 'a' - 10&lt;/code&gt;. In this case, &lt;code&gt;codePoint - 'a' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">文字は、小文字のラテン文字 &lt;code&gt;'a'&lt;/code&gt; 〜 &lt;code&gt;'z'&lt;/code&gt; あり、そのコードは &lt;code&gt;radix + 'a' - 10&lt;/code&gt; 未満です。この場合、 &lt;code&gt;codePoint - 'a' + 10&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="68f10c8de5bc4401e5a790943a291b720bd020f5" translate="yes" xml:space="preserve">
          <source>The character is one of the uppercase Latin letters &lt;code&gt;'A'&lt;/code&gt; through &lt;code&gt;'Z'&lt;/code&gt; and its code is less than &lt;code&gt;radix + 'A' - 10&lt;/code&gt;. In this case, &lt;code&gt;ch - 'A' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">文字は、大文字のラテン文字 &lt;code&gt;'A'&lt;/code&gt; から &lt;code&gt;'Z'&lt;/code&gt; の 1つであり、そのコードは &lt;code&gt;radix + 'A' - 10&lt;/code&gt; 未満です。この場合、 &lt;code&gt;ch - 'A' + 10&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="6fe9401de4bc97d32c2a8728ad43d7b3a78b4e99" translate="yes" xml:space="preserve">
          <source>The character is one of the uppercase Latin letters &lt;code&gt;'A'&lt;/code&gt; through &lt;code&gt;'Z'&lt;/code&gt; and its code is less than &lt;code&gt;radix + 'A' - 10&lt;/code&gt;. In this case, &lt;code&gt;codePoint - 'A' + 10&lt;/code&gt; is returned.</source>
          <target state="translated">文字は、大文字のラテン文字 &lt;code&gt;'A'&lt;/code&gt; から &lt;code&gt;'Z'&lt;/code&gt; の 1つであり、そのコードは &lt;code&gt;radix + 'A' - 10&lt;/code&gt; 未満です。この場合、 &lt;code&gt;codePoint - 'A' + 10&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="e076b3a7eea32ed0dc7dc561e359383aa33f70c6" translate="yes" xml:space="preserve">
          <source>The character offset in the original text corresponding to the collation element that will be returned by the next call to next().</source>
          <target state="translated">next()の次の呼び出 し で返 さ れ る 照合要素に対応す る 元のテキス ト 内のキ ャ ラ ク タ オ フ セ ッ ト 。</target>
        </trans-unit>
        <trans-unit id="4f6c553fcebe232a97d93a16c79fbcc14fc8b0ec" translate="yes" xml:space="preserve">
          <source>The character outlines are filled as indicated above under &lt;a href=&quot;#rendershape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt; operations&lt;/a&gt;.</source>
          <target state="translated">キャラクターのアウトラインは、上記の&lt;a href=&quot;#rendershape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; 操作で&lt;/a&gt;示したように塗りつぶされます。</target>
        </trans-unit>
        <trans-unit id="3a9b42a0d833d89c7e1ee55beda05f13b1e9a664" translate="yes" xml:space="preserve">
          <source>The character pair carriage return-line feed (CR-LF) means &quot;go to column 1 of the next line.&quot;</source>
          <target state="translated">文字ペアキャリッジ戻り行送り(CR-LF)とは、&quot;次の行の1列目に行く &quot;ことを意味します。</target>
        </trans-unit>
        <trans-unit id="b579f6aaeea5b3484a7d5e231a38a6bf7bee9f9b" translate="yes" xml:space="preserve">
          <source>The character read, as an integer in the range 0 to 65535 (&lt;code&gt;0x00-0xffff&lt;/code&gt;), or -1 if the end of the stream has been reached</source>
          <target state="translated">読み取った文字 &lt;code&gt;0x00-0xffff&lt;/code&gt; （0x00-0xffff）の範囲の整数、またはストリームの終わりに達した場合は-1</target>
        </trans-unit>
        <trans-unit id="b93b563951bc4c436a534356e0d109368effc806" translate="yes" xml:space="preserve">
          <source>The character read, or -1 if the end of the stream has been reached</source>
          <target state="translated">読み込まれた文字、またはストリームの終了に達した場合は -1</target>
        </trans-unit>
        <trans-unit id="062f61a88c5bf0196c78c2d594f19eddc5f72256" translate="yes" xml:space="preserve">
          <source>The character sequence &lt;code&gt;\b&lt;/code&gt; does</source>
          <target state="translated">文字シーケンス &lt;code&gt;\b&lt;/code&gt; は</target>
        </trans-unit>
        <trans-unit id="703dc856fffc1553773b2e4aaa4dcea5eb152f1f" translate="yes" xml:space="preserve">
          <source>The character sequence must not be modified until the &lt;code&gt;CompletableFuture&lt;/code&gt; returned from this method has completed.</source>
          <target state="translated">このメソッドから返される &lt;code&gt;CompletableFuture&lt;/code&gt; が完了するまで、文字シーケンスを変更しないでください。</target>
        </trans-unit>
        <trans-unit id="520302b6502eda745dea8b408d47b01c64d806b1" translate="yes" xml:space="preserve">
          <source>The character stream shall not include a byte order mark.</source>
          <target state="translated">文字ストリームには、バイトオーダーマークを含めてはならない。</target>
        </trans-unit>
        <trans-unit id="d030fffe75db9d3054a32099cf89361ef6145242" translate="yes" xml:space="preserve">
          <source>The character stream that was set with setReader, or null if setReader or the Reader constructor was not called.</source>
          <target state="translated">setReader で設定された文字ストリーム、または setReader または Reader コンストラクタが呼び出されなかった場合は null。</target>
        </trans-unit>
        <trans-unit id="0ef31aca4c6b3c377a869e55d96e7a48d9da70e4" translate="yes" xml:space="preserve">
          <source>The character stream that was set with setWriter, or null if setWriter or the Writer constructor was not called.</source>
          <target state="translated">setWriter で設定された文字ストリーム、または setWriter または Writer コンストラクタが呼ばれなかった場合は null。</target>
        </trans-unit>
        <trans-unit id="181146e59244eecb57af67b761c04a714d0bd1e3" translate="yes" xml:space="preserve">
          <source>The character stream, or null if none was supplied.</source>
          <target state="translated">文字ストリーム、または何も与えられなかった場合はnull。</target>
        </trans-unit>
        <trans-unit id="11959f2e3bfff894e61388267b4d1d1ae5d3c0ba" translate="yes" xml:space="preserve">
          <source>The character used for the decimal point,</source>
          <target state="translated">小数点以下に使用する文字です。</target>
        </trans-unit>
        <trans-unit id="54a8a31a27f0561fd4d1442ec2d72b795702bba8" translate="yes" xml:space="preserve">
          <source>The character used to represent a decimal point may vary by culture. This method specifies the character to use.</source>
          <target state="translated">小数点を表すために使用される文字は、文化によって異なる場合があります。このメソッドは、使用する文字を指定します。</target>
        </trans-unit>
        <trans-unit id="b22f85c7da2590e363e7946610cf7ddeef47bdd8" translate="yes" xml:space="preserve">
          <source>The character used to represent a negative number may vary by culture. This method specifies the character to use.</source>
          <target state="translated">負の数を表すために使用される文字は、文化によって異なる場合があります。このメソッドは、使用する文字を指定します。</target>
        </trans-unit>
        <trans-unit id="c3ef2b6ccf9ecfa410067e8549aece2c7416b126" translate="yes" xml:space="preserve">
          <source>The character used to represent a positive number may vary by culture. This method specifies the character to use.</source>
          <target state="translated">正の数を表すために使用される文字は、文化によって異なる場合があります。このメソッドは、使用する文字を指定します。</target>
        </trans-unit>
        <trans-unit id="26f9cc43b601122c17d2fd77c4849184eb0350df" translate="yes" xml:space="preserve">
          <source>The character used to represent digits may vary by culture. This method specifies the zero character to use, which implies the characters for one to nine.</source>
          <target state="translated">桁を表すために使用される文字は、文化によって異なる場合があります。このメソッドでは、使用するゼロ文字を指定します。</target>
        </trans-unit>
        <trans-unit id="a005f0c7035b2bf5efb6b65407b084e0584a607c" translate="yes" xml:space="preserve">
          <source>The character used to separate thousands groups,</source>
          <target state="translated">数千のグループを分けるために使われる文字。</target>
        </trans-unit>
        <trans-unit id="722bba4da3817532e1483dc8e58474bb30ced17f" translate="yes" xml:space="preserve">
          <source>The character with Unicode character name</source>
          <target state="translated">Unicode文字名を持つ文字</target>
        </trans-unit>
        <trans-unit id="1edb505c87a80b6cf210744640fa626208a69fbc" translate="yes" xml:space="preserve">
          <source>The character with hexadecimal value &lt;code&gt;0x&lt;/code&gt;</source>
          <target state="translated">16進値 &lt;code&gt;0x&lt;/code&gt; の文字</target>
        </trans-unit>
        <trans-unit id="c84b095cdf29086ff619529958524051e0271274" translate="yes" xml:space="preserve">
          <source>The character with octal value &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">8進値 &lt;code&gt;0&lt;/code&gt; の文字</target>
        </trans-unit>
        <trans-unit id="231dc1e1b18639700a12a25bbd2a2a272ff1fa38" translate="yes" xml:space="preserve">
          <source>The character-to-digit mapping is provided by &lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt;&lt;code&gt;Character.digit(char, int)&lt;/code&gt;&lt;/a&gt; set to convert to radix 10. The String may not contain any extraneous characters (whitespace, for example).</source>
          <target state="translated">文字から数字へのマッピングは、基数10に変換するように設定された&lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt; &lt;code&gt;Character.digit(char, int)&lt;/code&gt; &lt;/a&gt;によって提供されます。文字列には、無関係な文字（空白など）を含めることはできません。</target>
        </trans-unit>
        <trans-unit id="82172894cc0762c353026f8ba1c885f10551b86a" translate="yes" xml:space="preserve">
          <source>The character-to-digit mapping is provided by &lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt;&lt;code&gt;Character.digit(char, int)&lt;/code&gt;&lt;/a&gt; set to convert to radix 10. The String may not contain any extraneous characters (whitespace, for example).</source>
          <target state="translated">文字から数字へのマッピングは、基数10に変換するように設定された&lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt; &lt;code&gt;Character.digit(char, int)&lt;/code&gt; &lt;/a&gt;によって提供されます。文字列には無関係な文字（空白など）を含めることはできません。</target>
        </trans-unit>
        <trans-unit id="8f4bb0757c762aa0af3f827ae218712137600c6b" translate="yes" xml:space="preserve">
          <source>The characteristics of a given spliterator before splitting may differ from the characteristics after splitting. For specific examples see the characteristic values &lt;a href=&quot;#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#CONCURRENT&quot;&gt;&lt;code&gt;CONCURRENT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">分割前の特定のスプリッターの特性は、分割後の特性とは異なる場合があります。具体的な例については、特性値&lt;a href=&quot;#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#CONCURRENT&quot;&gt; &lt;code&gt;CONCURRENT&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="435d5181f703f0ee95ddc2bbae114562f2df9834" translate="yes" xml:space="preserve">
          <source>The characteristics of a given spliterator before splitting may differ from the characteristics after splitting. For specific examples see the characteristic values &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#CONCURRENT&quot;&gt;&lt;code&gt;CONCURRENT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">分割前の特定のスプリッターの特性は、分割後の特性と異なる場合があります。特定の例については、特性値&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;spliterator#CONCURRENT&quot;&gt; &lt;code&gt;CONCURRENT&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9ab6b7294df45ceef62a80e9cea125eac0330917" translate="yes" xml:space="preserve">
          <source>The characters are white space (see [XML], 2.10 &quot;White Space Handling&quot;).</source>
          <target state="translated">文字はホワイトスペースです([XML]、2.10「ホワイトスペースの扱い」参照)。</target>
        </trans-unit>
        <trans-unit id="d4c239d068f43613e278b2404d04072112a6d4fc" translate="yes" xml:space="preserve">
          <source>The characters are white space (see [XML], 2.10 &quot;White Space Handling&quot;). Events are only reported as SPACE if they are ignorable white space. Otherwise they are reported as CHARACTERS.</source>
          <target state="translated">文字はホワイトスペースである([XML]、2.10「ホワイトスペースの取り扱い」を参照)。イベントは、無視できないホワイトスペースである場合にのみ、スペースとして報告されます。それ以外の場合はCHARACTERSとして報告されます。</target>
        </trans-unit>
        <trans-unit id="28dbbf3eadec14e8427d691728ace1fef26d6786" translate="yes" xml:space="preserve">
          <source>The characters in the string &lt;code&gt;&quot;,;:$&amp;amp;+=&quot;&lt;/code&gt;</source>
          <target state="translated">文字列 &lt;code&gt;&quot;,;:$&amp;amp;+=&quot;&lt;/code&gt; の文字</target>
        </trans-unit>
        <trans-unit id="30cd469e4707a34de20913da0df9601ef8663134" translate="yes" xml:space="preserve">
          <source>The characters listed here are used in non-localized patterns. Localized patterns use the corresponding characters taken from this formatter's &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object instead, and these characters lose their special status. Two exceptions are the currency sign and quote, which are not localized.</source>
          <target state="translated">ここにリストされている文字は、ローカライズされていないパターンで使用されています。ローカライズされたパターンは、このフォーマッタの &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; オブジェクトから取得した対応する文字を代わりに使用し、これらの文字は特別なステータスを失います。2つの例外は、ローカライズされていない通貨記号と引用です。</target>
        </trans-unit>
        <trans-unit id="99f9de68302286576fe3ff6f67c73b8ba839df97" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;CharSequence&lt;/code&gt; argument are appended, in order, increasing the length of this sequence by the length of the argument.</source>
          <target state="translated">&lt;code&gt;CharSequence&lt;/code&gt; 引数の文字が順番に追加され、引数の長さだけこのシーケンスの長さが増加します。</target>
        </trans-unit>
        <trans-unit id="131a3485d970889cbd1a189397eb208a790f9256" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;CharSequence&lt;/code&gt; argument are inserted, in order, into this sequence at the indicated offset, moving up any characters originally above that position and increasing the length of this sequence by the length of the argument s.</source>
          <target state="translated">&lt;code&gt;CharSequence&lt;/code&gt; 引数の文字は、指定されたオフセットでこのシーケンスに順番に挿入され、元の位置よりも上にある文字が上に移動し、引数の長さだけこのシーケンスの長さが増加します。</target>
        </trans-unit>
        <trans-unit id="f293b85c86723e9d3bf915086157971fe6916192" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;String&lt;/code&gt; argument are appended, in order, increasing the length of this sequence by the length of the argument. If &lt;code&gt;str&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 引数の文字が順番に追加され、このシーケンスの長さが引数の長さだけ増加します。 &lt;code&gt;str&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、4つの文字 &lt;code&gt;&quot;null&quot;&lt;/code&gt; が追加されます。</target>
        </trans-unit>
        <trans-unit id="4608ed44802d04c08139f51bfa64aeda4d30bd74" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;String&lt;/code&gt; argument are inserted, in order, into this sequence at the indicated offset, moving up any characters originally above that position and increasing the length of this sequence by the length of the argument. If &lt;code&gt;str&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are inserted into this sequence.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 引数の文字は、指定されたオフセットでこのシーケンスに順番に挿入され、元の位置より上の文字を上に移動し、引数の長さだけこのシーケンスの長さを増やします。 &lt;code&gt;str&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、4つの文字 &lt;code&gt;&quot;null&quot;&lt;/code&gt; がこのシーケンスに挿入されます。</target>
        </trans-unit>
        <trans-unit id="79d83c330c94a3aa502af5b18cdbaab8bce643e4" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;StringBuffer&lt;/code&gt; argument are appended, in order, to the contents of this &lt;code&gt;StringBuffer&lt;/code&gt;, increasing the length of this &lt;code&gt;StringBuffer&lt;/code&gt; by the length of the argument. If &lt;code&gt;sb&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended to this &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StringBuffer&lt;/code&gt; 引数の文字は、この &lt;code&gt;StringBuffer&lt;/code&gt; のコンテンツに順番に追加され、引数の長さだけこの &lt;code&gt;StringBuffer&lt;/code&gt; の長さが増加します。 &lt;code&gt;sb&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、4つの文字 &lt;code&gt;&quot;null&quot;&lt;/code&gt; がこの &lt;code&gt;StringBuffer&lt;/code&gt; に追加されます。</target>
        </trans-unit>
        <trans-unit id="7edc50505e461cd6fdf61331e374acd6a8173601" translate="yes" xml:space="preserve">
          <source>The characters of the &lt;code&gt;StringBuffer&lt;/code&gt; argument are appended, in order, to this sequence, increasing the length of this sequence by the length of the argument. If &lt;code&gt;sb&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended to this sequence.</source>
          <target state="translated">&lt;code&gt;StringBuffer&lt;/code&gt; 引数の文字がこのシーケンスに順番に追加され、このシーケンスの長さが引数の長さだけ増加します。 &lt;code&gt;sb&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、4つの文字 &lt;code&gt;&quot;null&quot;&lt;/code&gt; がこのシーケンスに追加されます。</target>
        </trans-unit>
        <trans-unit id="5790ab1c515a529581222483c7c357bb2b14a2d7" translate="yes" xml:space="preserve">
          <source>The characters of the array argument are appended, in order, to the contents of this sequence. The length of this sequence increases by the length of the argument.</source>
          <target state="translated">配列の引数の文字は、このシーケンスの内容に順に追加されます。このシーケンスの長さは、引数の長さの分だけ長くなります。</target>
        </trans-unit>
        <trans-unit id="44ce3e7b31696b9d255c03623ddf7ab6eef4959a" translate="yes" xml:space="preserve">
          <source>The characters of the array argument are inserted into the contents of this sequence at the position indicated by &lt;code&gt;offset&lt;/code&gt;. The length of this sequence increases by the length of the argument.</source>
          <target state="translated">配列引数の文字は、このシーケンスのコンテンツの &lt;code&gt;offset&lt;/code&gt; で示される位置に挿入されます。このシーケンスの長さは、引数の長さだけ増加します。</target>
        </trans-unit>
        <trans-unit id="a2e130797df8bfbb83081b72694f55f678e4cdeb" translate="yes" xml:space="preserve">
          <source>The characters to be appended should be valid Unicode characters as described in &lt;a href=&quot;character#unicode&quot;&gt;Unicode Character Representation&lt;/a&gt;. Note that supplementary characters may be composed of multiple 16-bit &lt;code&gt;char&lt;/code&gt; values.</source>
          <target state="translated">追加される文字は、「&lt;a href=&quot;character#unicode&quot;&gt;Unicode文字表現」で&lt;/a&gt;説明されているように、有効なUnicode文字である必要があります。補足文字は、複数の16ビット &lt;code&gt;char&lt;/code&gt; 値で構成される場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2a2ed22fca7e3896fc3bc86e089e89c687ca7a5b" translate="yes" xml:space="preserve">
          <source>The chars between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the char at index</source>
          <target state="translated">バッファの現在位置から限界までの間の文字があれば、バッファの先頭にコピーされます。つまり、インデックス</target>
        </trans-unit>
        <trans-unit id="6128e80448b0188f85071bb3edbcecfd33c87c6a" translate="yes" xml:space="preserve">
          <source>The charset &quot;unicode&quot; is not well-defined. &quot;unicode&quot; implies a particular platform's implementation of Unicode, not a cross-platform implementation</source>
          <target state="translated">&quot;unicode &quot;という文字セットはよく定義されていません。&quot;unicode&quot; は特定のプラットフォームでの Unicode の実装を意味し、クロスプラットフォームでの実装を意味するものではありません。</target>
        </trans-unit>
        <trans-unit id="2eb67236cbfc275c0a8a4f77193881e74832ba7b" translate="yes" xml:space="preserve">
          <source>The charset detected by this auto-detecting decoder, or &lt;code&gt;null&lt;/code&gt; if the charset has not yet been determined</source>
          <target state="translated">この自動検出デコーダーによって検出された文字セット。文字セットがまだ決定されていない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9bf522e403515c42a05b0e6a6281e1678fafb075" translate="yes" xml:space="preserve">
          <source>The charset used is the &lt;a href=&quot;../nio/charset/charset#defaultCharset()&quot;&gt;default charset&lt;/a&gt; for this instance of the Java virtual machine.</source>
          <target state="translated">使用される&lt;a href=&quot;../nio/charset/charset#defaultCharset()&quot;&gt;文字セット&lt;/a&gt;は、Java仮想マシンのこのインスタンスのデフォルトの文字セットです。</target>
        </trans-unit>
        <trans-unit id="024b1b6be1629de97b24774ad57c6eda0415a449" translate="yes" xml:space="preserve">
          <source>The charset used is the &lt;a href=&quot;../nio/charset/charset#defaultCharset--&quot;&gt;default charset&lt;/a&gt; for this instance of the Java virtual machine.</source>
          <target state="translated">使用される&lt;a href=&quot;../nio/charset/charset#defaultCharset--&quot;&gt;文字セット&lt;/a&gt;は、Java仮想マシンのこのインスタンスのデフォルトの文字セットです。</target>
        </trans-unit>
        <trans-unit id="27c52d3d4af9cf537e83a0b9e73130183130379f" translate="yes" xml:space="preserve">
          <source>The check icon.</source>
          <target state="translated">チェックのアイコンです。</target>
        </trans-unit>
        <trans-unit id="c0a456a1576ddacef3768fa05e856a92c9cb556f" translate="yes" xml:space="preserve">
          <source>The child may have been removed from the view hierarchy.</source>
          <target state="translated">子はビュー階層から削除されている可能性があります。</target>
        </trans-unit>
        <trans-unit id="c41c3114b7d8a252c53203b0408c37766a3abe07" translate="yes" xml:space="preserve">
          <source>The child may have been updated by a higher priority operation (i.e. the child may have become visible).</source>
          <target state="translated">優先度の高い操作で更新された可能性があります(つまり、子が見えるようになった可能性があります)。</target>
        </trans-unit>
        <trans-unit id="da0656ba3d8191056faf936bafe12efaf237139d" translate="yes" xml:space="preserve">
          <source>The child node before which the result nodes will be inserted.</source>
          <target state="translated">結果ノードが挿入される前の子ノード。</target>
        </trans-unit>
        <trans-unit id="62341cca1f132566b4380d71fb764695d802bba0" translate="yes" xml:space="preserve">
          <source>The children of a &lt;code&gt;DocumentFragment&lt;/code&gt; node are zero or more nodes representing the tops of any sub-trees defining the structure of the document. &lt;code&gt;DocumentFragment&lt;/code&gt; nodes do not need to be well-formed XML documents (although they do need to follow the rules imposed upon well-formed XML parsed entities, which can have multiple top nodes). For example, a &lt;code&gt;DocumentFragment&lt;/code&gt; might have only one child and that child node could be a &lt;code&gt;Text&lt;/code&gt; node. Such a structure model represents neither an HTML document nor a well-formed XML document.</source>
          <target state="translated">&lt;code&gt;DocumentFragment&lt;/code&gt; ノードの子は、ドキュメントの構造を定義するサブツリーの最上位を表す0個以上のノードです。 &lt;code&gt;DocumentFragment&lt;/code&gt; ノードは整形式のXMLドキュメントである必要はありません（ただし、複数の最上位ノードを持つことができる整形式のXML解析済みエンティティに課せられる規則に従う必要があります）。たとえば、 &lt;code&gt;DocumentFragment&lt;/code&gt; には子が1つしかなく、その子ノードを &lt;code&gt;Text&lt;/code&gt; ノードにすることができます。このような構造モデルは、HTMLドキュメントも整形式のXMLドキュメントも表していません。</target>
        </trans-unit>
        <trans-unit id="c8fd2435042ade2989834d385b33d7983d058f57" translate="yes" xml:space="preserve">
          <source>The children of an element must conform to one of a few simple patterns, described in the documentation for the &lt;code&gt;CHILD_*&lt;/code&gt; constants;</source>
          <target state="translated">要素の子は、 &lt;code&gt;CHILD_*&lt;/code&gt; 定数のドキュメントで説明されているいくつかの単純なパターンのいずれかに準拠する必要があります。</target>
        </trans-unit>
        <trans-unit id="5ed4829be2fc8be2f19b67a2fdfd7c5f6f6f875e" translate="yes" xml:space="preserve">
          <source>The choice should be made based on which makes the code more readable.</source>
          <target state="translated">どちらがコードをより読みやすくするかに基づいて選択する必要があります。</target>
        </trans-unit>
        <trans-unit id="79f74e45aaf7c0f85ebcbcdac20621c5958045d8" translate="yes" xml:space="preserve">
          <source>The chooserPanel array property name.</source>
          <target state="translated">chooserPanel 配列のプロパティ名。</target>
        </trans-unit>
        <trans-unit id="81abce803b2b576873096c050698e84ce7b2adb3" translate="yes" xml:space="preserve">
          <source>The chronology is determined. The chronology of the result is either the chronology that was parsed, or if no chronology was parsed, it is the chronology set on this class, or if that is null, it is &lt;code&gt;IsoChronology&lt;/code&gt;.</source>
          <target state="translated">年表が決定されます。結果の年表は、解析された年表であるか、年表が解析されなかった場合はこのクラスに設定された年表であるか、それがnullの場合は &lt;code&gt;IsoChronology&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a16292e267ee8e923f5ad107d6d91fc2c30e6c22" translate="yes" xml:space="preserve">
          <source>The chronology may be a system chronology or a chronology provided by the application via ServiceLoader configuration.</source>
          <target state="translated">年表は、システム年表であってもよいし、ServiceLoader構成を介してアプリケーションから提供される年表であってもよい。</target>
        </trans-unit>
        <trans-unit id="de1734dbd2ea904560b6d9da0267c5e3bc7d2d75" translate="yes" xml:space="preserve">
          <source>The chronology of the first date is used. The chronology of the second date is ignored, with the date being converted to the target chronology system before the calculation starts.</source>
          <target state="translated">最初の日付の年表が使用されます。2 番目の日付の年表は無視され、計算開始前にターゲット年表システムに変換されます。</target>
        </trans-unit>
        <trans-unit id="77c2678fd3eab80325fb8588b7d1ef1c45ba73ba" translate="yes" xml:space="preserve">
          <source>The chunk-length when using chunked encoding streaming mode for output.</source>
          <target state="translated">出力にチャンク付きエンコーディング・ストリーミングモードを使用する場合のチャンク長。</target>
        </trans-unit>
        <trans-unit id="782f61b1130e60fa0fb037f8e4955382779eb421" translate="yes" xml:space="preserve">
          <source>The chunk-length when using chunked encoding streaming mode for output. A value of &lt;code&gt;-1&lt;/code&gt; means chunked encoding is disabled for output.</source>
          <target state="translated">出力にチャンクエンコーディングストリーミングモードを使用する場合のチャンク長。値 &lt;code&gt;-1&lt;/code&gt; は、チャンクエンコーディングが出力に対して無効であることを意味します。</target>
        </trans-unit>
        <trans-unit id="b625f56a9aa5a9cfd0dba0b4ba26b41f91c3d8d0" translate="yes" xml:space="preserve">
          <source>The cipher is initialized for one of the following four operations: encryption, decryption, key wrapping or key unwrapping, depending on the value of &lt;code&gt;opmode&lt;/code&gt;.</source>
          <target state="translated">暗号は、 &lt;code&gt;opmode&lt;/code&gt; の値に応じて、暗号化、復号化、鍵のラップ、または鍵のラップ解除の4つの操作のいずれかで初期化されます。</target>
        </trans-unit>
        <trans-unit id="173002f079d69036a5e31eb46675498add7c46e8" translate="yes" xml:space="preserve">
          <source>The cipher suite used is established by a negotiation process called &quot;handshaking&quot;. The goal of this process is to create or rejoin a &quot;session&quot;, which may protect many connections over time. After handshaking has completed, you can access session attributes by using the &lt;a href=&quot;#getSession()&quot;&gt;&lt;code&gt;getSession()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">使用される暗号スイートは、「ハンドシェイク」と呼ばれるネゴシエーションプロセスによって確立されます。このプロセスの目標は、「セッション」を作成または再参加することです。これにより、時間の経過とともに多くの接続が保護される可能性があります。ハンドシェイクが完了したら、&lt;a href=&quot;#getSession()&quot;&gt; &lt;code&gt;getSession()&lt;/code&gt; &lt;/a&gt;メソッドを使用してセッション属性にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="a7062f5c31a9aefcc821d9d0c94628fe97a3602f" translate="yes" xml:space="preserve">
          <source>The cipher suite used is established by a negotiation process called &quot;handshaking&quot;. The goal of this process is to create or rejoin a &quot;session&quot;, which may protect many connections over time. After handshaking has completed, you can access session attributes by using the &lt;a href=&quot;sslengine#getSession--&quot;&gt;&lt;code&gt;getSession()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">使用される暗号スイートは、「ハンドシェイク」と呼ばれる交渉プロセスによって確立されます。このプロセスの目的は、「セッション」を作成または再結合することです。これにより、時間の経過とともに多くの接続を保護できます。ハンドシェイクが完了したら、&lt;a href=&quot;sslengine#getSession--&quot;&gt; &lt;code&gt;getSession()&lt;/code&gt; &lt;/a&gt;メソッドを使用してセッション属性にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="b4991f1ddbcd690dbea95abe4922ab873f65fad7" translate="yes" xml:space="preserve">
          <source>The cipher suite used is established by a negotiation process called &quot;handshaking&quot;. The goal of this process is to create or rejoin a &quot;session&quot;, which may protect many connections over time. After handshaking has completed, you can access session attributes by using the &lt;em&gt;getSession&lt;/em&gt; method. The initial handshake on this connection can be initiated in one of three ways:</source>
          <target state="translated">使用される暗号スイートは、「ハンドシェイク」と呼ばれる交渉プロセスによって確立されます。このプロセスの目的は、「セッション」を作成または再結合することです。これにより、時間の経過とともに多くの接続を保護できます。ハンドシェイクが完了したら、&lt;em&gt;getSession&lt;/em&gt;メソッドを使用してセッション属性にアクセスできます。この接続の初期ハンドシェイクは、次の3つの方法のいずれかで開始できます。</target>
        </trans-unit>
        <trans-unit id="83ac4045333504efe877655bdd2b37e50cb50200" translate="yes" xml:space="preserve">
          <source>The cipher suites must have been listed by getSupportedCipherSuites() as being supported. Following a successful call to this method, only suites listed in the &lt;code&gt;suites&lt;/code&gt; parameter are enabled for use.</source>
          <target state="translated">暗号スイートは、サポート対象としてgetSupportedCipherSuites（）によってリストされている必要があります。このメソッドの呼び出しが成功すると、 &lt;code&gt;suites&lt;/code&gt; パラメーターにリストされているスイートのみが使用可能になります。</target>
        </trans-unit>
        <trans-unit id="b1dff289b9d5493dc4b93e102227e4045f5c8b60" translate="yes" xml:space="preserve">
          <source>The circular buffer into which incoming data is placed.</source>
          <target state="translated">受信データが配置されるサーキュラーバッファ。</target>
        </trans-unit>
        <trans-unit id="614cf5ba9f056fa7e5ca2805e4ef8d98f0bd7391" translate="yes" xml:space="preserve">
          <source>The class &lt;a href=&quot;httprequest.bodypublishers&quot;&gt;&lt;code&gt;BodyPublishers&lt;/code&gt;&lt;/a&gt; provides implementations of many common publishers. Alternatively, a custom &lt;code&gt;BodyPublisher&lt;/code&gt; implementation can be used.</source>
          <target state="translated">&lt;a href=&quot;httprequest.bodypublishers&quot;&gt; &lt;code&gt;BodyPublishers&lt;/code&gt; &lt;/a&gt;クラスは、多くの一般的なパブリッシャーの実装を提供します。または、カスタムの &lt;code&gt;BodyPublisher&lt;/code&gt; 実装を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="79591cc158e2d587f71e1a7c15b55cee4ffd047e" translate="yes" xml:space="preserve">
          <source>The class &lt;a href=&quot;httpresponse.bodyhandlers&quot;&gt;&lt;code&gt;BodyHandlers&lt;/code&gt;&lt;/a&gt; provides implementations of many common response handlers. Alternatively, a custom &lt;code&gt;BodyHandler&lt;/code&gt; implementation can be used.</source>
          <target state="translated">&lt;a href=&quot;httpresponse.bodyhandlers&quot;&gt; &lt;code&gt;BodyHandlers&lt;/code&gt; &lt;/a&gt;クラスは、多くの一般的な応答ハンドラーの実装を提供します。または、カスタムの &lt;code&gt;BodyHandler&lt;/code&gt; 実装を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="b2f5972a5da0630a3ea1ce16a259ac7e2bc027c1" translate="yes" xml:space="preserve">
          <source>The class &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt; contains &lt;a href=&quot;methodhandle#sigpoly&quot;&gt;signature polymorphic methods&lt;/a&gt; which can be linked regardless of their type descriptor. Normally, method linkage requires exact matching of type descriptors.</source>
          <target state="translated">クラス&lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;には、タイプ記述子に関係なくリンクできる&lt;a href=&quot;methodhandle#sigpoly&quot;&gt;シグネチャポリモーフィックメソッド&lt;/a&gt;が含まれています。通常、メソッドのリンケージには、タイプ記述子の完全一致が必要です。</target>
        </trans-unit>
        <trans-unit id="eab9997c80610f9c64f20b81263d0bcfad837f30" translate="yes" xml:space="preserve">
          <source>The class &lt;a href=&quot;requiredmodelmbean&quot;&gt;&lt;code&gt;RequiredModelMBean&lt;/code&gt;&lt;/a&gt; provides a standard Model MBean implementation.</source>
          <target state="translated">&lt;a href=&quot;requiredmodelmbean&quot;&gt; &lt;code&gt;RequiredModelMBean&lt;/code&gt; &lt;/a&gt;クラスは、標準のModel MBean実装を提供します。</target>
        </trans-unit>
        <trans-unit id="e2db3d1c22a729a290e85045bcd4bfe1eb80a35a" translate="yes" xml:space="preserve">
          <source>The class &lt;a href=&quot;streamsupport&quot;&gt;&lt;code&gt;StreamSupport&lt;/code&gt;&lt;/a&gt; has a number of low-level methods for creating a stream, all using some form of a &lt;a href=&quot;../spliterator&quot;&gt;&lt;code&gt;Spliterator&lt;/code&gt;&lt;/a&gt;. A spliterator is the parallel analogue of an &lt;a href=&quot;../iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;; it describes a (possibly infinite) collection of elements, with support for sequentially advancing, bulk traversal, and splitting off some portion of the input into another spliterator which can be processed in parallel. At the lowest level, all streams are driven by a spliterator.</source>
          <target state="translated">&lt;a href=&quot;streamsupport&quot;&gt; &lt;code&gt;StreamSupport&lt;/code&gt; &lt;/a&gt;クラスには、ストリームを作成するためのいくつかの低レベルのメソッドがあり、すべて何らかの形式の&lt;a href=&quot;../spliterator&quot;&gt; &lt;code&gt;Spliterator&lt;/code&gt; を使用してい&lt;/a&gt;ます。Spliteratorは&lt;a href=&quot;../iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; の&lt;/a&gt;類似物です。これは、要素の（場合によっては無限の）コレクションを記述し、順次前進、バルクトラバーサル、および並列で処理できる別のスプリッターへの入力の一部の分割をサポートします。最下位レベルでは、すべてのストリームはスプリッターによって駆動されます。</target>
        </trans-unit>
        <trans-unit id="684f89869c3a9936722182499d56cdcd4cbcf40a" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Date&lt;/code&gt; represents a specific instant in time, with millisecond precision.</source>
          <target state="translated">クラス &lt;code&gt;Date&lt;/code&gt; は、特定の瞬間をミリ秒の精度で表します。</target>
        </trans-unit>
        <trans-unit id="f304ba88bc19705d6cbe2036bbfe4f2d2fdb0d77" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Exception&lt;/code&gt; and any subclasses that are not also subclasses of &lt;a href=&quot;runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt; are &lt;em&gt;checked exceptions&lt;/em&gt;. Checked exceptions need to be declared in a method or constructor's &lt;code&gt;throws&lt;/code&gt; clause if they can be thrown by the execution of the method or constructor and propagate outside the method or constructor boundary.</source>
          <target state="translated">クラス &lt;code&gt;Exception&lt;/code&gt; と、&lt;a href=&quot;runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; の&lt;/a&gt;サブクラスではないすべてのサブクラスは、&lt;em&gt;チェック例外&lt;/em&gt;です。チェックされた例外は、メソッドまたはコンストラクターの実行によってスローされ、メソッドまたはコンストラクターの境界の外に伝播できる場合、メソッドまたはコンストラクターの &lt;code&gt;throws&lt;/code&gt; 句で宣言する必要があります。</target>
        </trans-unit>
        <trans-unit id="b63ddbb8255c4c5cc301a4d4eeaca5eac941924c" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Exception&lt;/code&gt; and its subclasses are a form of &lt;code&gt;Throwable&lt;/code&gt; that indicates conditions that a reasonable application might want to catch.</source>
          <target state="translated">クラス &lt;code&gt;Exception&lt;/code&gt; およびそのサブクラスは、合理的なアプリケーションがキャッチする可能性のある条件を示す &lt;code&gt;Throwable&lt;/code&gt; の形式です。</target>
        </trans-unit>
        <trans-unit id="690c5f3da265a415109fd3011e41d9d5ea3c3c22" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;FilterOutputStream&lt;/code&gt; itself simply overrides all methods of &lt;code&gt;OutputStream&lt;/code&gt; with versions that pass all requests to the underlying output stream. Subclasses of &lt;code&gt;FilterOutputStream&lt;/code&gt; may further override some of these methods as well as provide additional methods and fields.</source>
          <target state="translated">&lt;code&gt;FilterOutputStream&lt;/code&gt; クラス自体は、基になる出力ストリームにすべてのリクエストを渡すバージョンで、 &lt;code&gt;OutputStream&lt;/code&gt; のすべてのメソッドを単にオーバーライドします。 &lt;code&gt;FilterOutputStream&lt;/code&gt; のサブクラスは、これらのメソッドの一部をさらにオーバーライドし、追加のメソッドとフィールドを提供する場合があります。</target>
        </trans-unit>
        <trans-unit id="aa85724edba155c1163af251f7e5b2a8e32a3730" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Math&lt;/code&gt; contains methods for performing basic numeric operations such as the elementary exponential, logarithm, square root, and trigonometric functions.</source>
          <target state="translated">&lt;code&gt;Math&lt;/code&gt; クラスには、基本的な指数演算、対数、平方根、三角関数などの基本的な数値演算を実行するためのメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="a1a0cb7c448078442d89f1a37fe7dd237cc2a88e" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Math&lt;/code&gt; provides commonly used mathematical functions such as sine, cosine, and square root. The classes &lt;code&gt;
 String&lt;/code&gt;, &lt;code&gt;StringBuffer&lt;/code&gt;, and &lt;code&gt;StringBuilder&lt;/code&gt; similarly provide commonly used operations on character strings.</source>
          <target state="translated">クラス &lt;code&gt;Math&lt;/code&gt; は、正弦、余弦、平方根などの一般的に使用される数学関数を提供します。 &lt;code&gt; String&lt;/code&gt; 、 &lt;code&gt;StringBuffer&lt;/code&gt; 、および &lt;code&gt;StringBuilder&lt;/code&gt; クラスは、同様に、文字列に対して一般的に使用される操作を提供します。</target>
        </trans-unit>
        <trans-unit id="e1871b5ab32d2e12a446537bb7460fb5726d74b1" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Math&lt;/code&gt; provides commonly used mathematical functions such as sine, cosine, and square root. The classes &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;StringBuffer&lt;/code&gt;, and &lt;code&gt;StringBuilder&lt;/code&gt; similarly provide commonly used operations on character strings.</source>
          <target state="translated">&lt;code&gt;Math&lt;/code&gt; クラスは、サイン、コサイン、平方根などの一般的に使用される数学関数を提供します。 &lt;code&gt;String&lt;/code&gt; 、 &lt;code&gt;StringBuffer&lt;/code&gt; 、および &lt;code&gt;StringBuilder&lt;/code&gt; クラスは、同様に文字列に対して一般的に使用される操作を提供します。</target>
        </trans-unit>
        <trans-unit id="3791863b130a0f270b24ef71c5a66eb3739e86ed" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Object&lt;/code&gt; does not itself implement the interface &lt;code&gt;Cloneable&lt;/code&gt;, so calling the &lt;code&gt;clone&lt;/code&gt; method on an object whose class is &lt;code&gt;Object&lt;/code&gt; will result in throwing an exception at run time.</source>
          <target state="translated">クラス &lt;code&gt;Object&lt;/code&gt; 自体は &lt;code&gt;Cloneable&lt;/code&gt; インターフェースを実装していないため、クラスが &lt;code&gt;Object&lt;/code&gt; であるオブジェクトで &lt;code&gt;clone&lt;/code&gt; メソッドを呼び出すと、実行時に例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="0624cc2712e980f0b92fbdb7083e89abc8924f4c" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;StrictMath&lt;/code&gt; contains methods for performing basic numeric operations such as the elementary exponential, logarithm, square root, and trigonometric functions.</source>
          <target state="translated">クラス &lt;code&gt;StrictMath&lt;/code&gt; には、基本指数、対数、平方根、三角関数などの基本的な数値演算を実行するためのメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="0402c5931dd701f0cf78b33e69e39d00d48ee21d" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;String&lt;/code&gt; includes methods for examining individual characters of the sequence, for comparing strings, for searching strings, for extracting substrings, and for creating a copy of a string with all characters translated to uppercase or to lowercase. Case mapping is based on the Unicode Standard version specified by the &lt;a href=&quot;character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; クラスには、シーケンスの個々の文字を検査するため、文字列を比較するため、文字列を検索するため、部分文字列を抽出するため、すべての文字を大文字または小文字に変換した文字列のコピーを作成するためのメソッドが含まれます。大文字と小文字のマッピングは、&lt;a href=&quot;character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; &lt;/a&gt;クラスで指定されたUnicode標準バージョンに基づいています。</target>
        </trans-unit>
        <trans-unit id="4f0e14063482da03a9517e0315c86c6d5e0da2a1" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;ThreadDeath&lt;/code&gt; is specifically a subclass of &lt;code&gt;Error&lt;/code&gt; rather than &lt;code&gt;Exception&lt;/code&gt;, even though it is a &quot;normal occurrence&quot;, because many applications catch all occurrences of &lt;code&gt;Exception&lt;/code&gt; and then discard the exception.</source>
          <target state="translated">多くのアプリケーションは &lt;code&gt;Exception&lt;/code&gt; のすべての発生をキャッチして例外を破棄するため、「通常の発生」であるにもかかわらず、 &lt;code&gt;ThreadDeath&lt;/code&gt; クラスは具体的には &lt;code&gt;Exception&lt;/code&gt; ではなく &lt;code&gt;Error&lt;/code&gt; のサブクラスです。</target>
        </trans-unit>
        <trans-unit id="0ed9f55caeaa2d309bd40ff62b6a14ba0f7f4c18" translate="yes" xml:space="preserve">
          <source>The class Authenticator represents an object that knows how to obtain authentication for a network connection.</source>
          <target state="translated">Authenticator クラスは、ネットワーク接続の認証を取得する方法を知っているオブジェクトを表します。</target>
        </trans-unit>
        <trans-unit id="73f3f95a1b4468727a1f47724f198e0b3a19ce9c" translate="yes" xml:space="preserve">
          <source>The class Authenticator represents an object that knows how to obtain authentication for a network connection. Usually, it will do this by prompting the user for information.</source>
          <target state="translated">クラス Authenticator は、ネットワーク接続の認証を取得する方法を知っているオブジェクトを表します。通常、これはユーザーに情報を要求することで行われます。</target>
        </trans-unit>
        <trans-unit id="3ec0063817bf0bc470163e5295aa4de585ae7fe9" translate="yes" xml:space="preserve">
          <source>The class PasswordAuthentication is a data holder that is used by Authenticator.</source>
          <target state="translated">クラスPasswordAuthenticationは、Authenticatorが使用するデータホルダーです。</target>
        </trans-unit>
        <trans-unit id="5dab3bdf681d65e4650c5df8d97994c50a3f16e6" translate="yes" xml:space="preserve">
          <source>The class PasswordAuthentication is a data holder that is used by Authenticator. It is simply a repository for a user name and a password.</source>
          <target state="translated">クラスPasswordAuthenticationはAuthenticatorが使用するデータホルダーです。これは単純にユーザー名とパスワードのリポジトリです。</target>
        </trans-unit>
        <trans-unit id="26afb3f34e19b6dd2d9b7a7cbd9df2a19bd4ff5c" translate="yes" xml:space="preserve">
          <source>The class also has methods for reading files, streams, and URLs that contain standard MIDI file data or soundbanks. You can query the &lt;code&gt;MidiSystem&lt;/code&gt; for the format of a specified MIDI file.</source>
          <target state="translated">このクラスには、標準のMIDIファイルデータまたはサウンドバンクを含むファイル、ストリーム、およびURLを読み取るためのメソッドもあります。 &lt;code&gt;MidiSystem&lt;/code&gt; に指定したMIDIファイルの形式を問い合わせることができます。</target>
        </trans-unit>
        <trans-unit id="8eec387ca6bcd129da5be587045e11a4e69c7d0e" translate="yes" xml:space="preserve">
          <source>The class also provides additional fields and methods for implementing a concrete calendar system outside the package. Those fields and methods are defined as &lt;code&gt;protected&lt;/code&gt;.</source>
          <target state="translated">このクラスは、パッケージの外部にある具体的なカレンダーシステムを実装するための追加のフィールドとメソッドも提供します。これらのフィールドとメソッドは、 &lt;code&gt;protected&lt;/code&gt; されていると定義されています。</target>
        </trans-unit>
        <trans-unit id="a83c31be57eb77d002f6fb8561dbfe1c5447ab07" translate="yes" xml:space="preserve">
          <source>The class also provides two methods to map between its constants and the corresponding Calendar constants.</source>
          <target state="translated">また、このクラスには、その定数と対応するカレンダ定数の間をマッピングするための2つのメソッドが用意されています。</target>
        </trans-unit>
        <trans-unit id="9d313501a82f92b26a3e6cf1bf80484b0ab03c45" translate="yes" xml:space="preserve">
          <source>The class contains unknown datatypes</source>
          <target state="translated">クラスには未知のデータ型が含まれています</target>
        </trans-unit>
        <trans-unit id="13d93d9b734d66221117665181f602c5532671b0" translate="yes" xml:space="preserve">
          <source>The class declares methods with the name given by &lt;code&gt;invokedName&lt;/code&gt;, and the signature given by &lt;code&gt;samMethodType&lt;/code&gt; and additional signatures given by &lt;code&gt;bridges&lt;/code&gt;</source>
          <target state="translated">クラスは、によって与えられた名前のメソッド宣言 &lt;code&gt;invokedName&lt;/code&gt; 、によって与えられた署名 &lt;code&gt;samMethodType&lt;/code&gt; によって与えられ、追加の署名 &lt;code&gt;bridges&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b60cd2a193307541db7fa376009f616ad9f49e04" translate="yes" xml:space="preserve">
          <source>The class does not have an accessible no-arg constructor</source>
          <target state="translated">このクラスにはアクセス可能な no-arg コンストラクタがありません。</target>
        </trans-unit>
        <trans-unit id="cff5ea3c8c8e7aecbb4dbea85724a31e5e8e8645" translate="yes" xml:space="preserve">
          <source>The class fingerprint that is set to indicate serialization compatibility since J2SE 1.4.</source>
          <target state="translated">J2SE 1.4以降のシリアライズ互換性を示すために設定されているクラスフィンガープリント。</target>
        </trans-unit>
        <trans-unit id="3e56e7ff07bb8781fefafcc3605938ed932d77d3" translate="yes" xml:space="preserve">
          <source>The class fingerprint that is set to indicate serialization compatibility with a previous version of the class.</source>
          <target state="translated">以前のバージョンのクラスとのシリアライズ互換性を示すために設定されているクラスのフィンガープリント。</target>
        </trans-unit>
        <trans-unit id="a00aa6be9da30f0a48df242c586c275d828683b4" translate="yes" xml:space="preserve">
          <source>The class fingerprint that is set to indicate serialization compatibility.</source>
          <target state="translated">シリアライズ互換性を示すために設定されているクラスのフィンガープリント。</target>
        </trans-unit>
        <trans-unit id="135e02082cd84a88b5861571042a7fe763a97717" translate="yes" xml:space="preserve">
          <source>The class implements a buffered output stream.</source>
          <target state="translated">このクラスは、バッファリングされた出力ストリームを実装しています。</target>
        </trans-unit>
        <trans-unit id="8460a541a46a3829ad6445b112d205f85871207c" translate="yes" xml:space="preserve">
          <source>The class implements a buffered output stream. By setting up such an output stream, an application can write bytes to the underlying output stream without necessarily causing a call to the underlying system for each byte written.</source>
          <target state="translated">このクラスは、バッファリングされた出力ストリームを実装しています。このような出力ストリームを設定することで、アプリケーションは、書き込まれたバイトごとに基礎となるシステムへの呼び出しを必ずしも発生させることなく、基礎となる出力ストリームにバイトを書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="3dfc1a1ea31b195bebaa4b8045733e43e88ceaec" translate="yes" xml:space="preserve">
          <source>The class implements the interface named by the return type of &lt;code&gt;invokedType&lt;/code&gt; and any interfaces named by &lt;code&gt;markerInterfaces&lt;/code&gt;</source>
          <target state="translated">クラス実装の戻り型によって指定インターフェース &lt;code&gt;invokedType&lt;/code&gt; によって命名任意インターフェイス &lt;code&gt;markerInterfaces&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d6705a53cda97bf2651a6b87e2017e005a77404" translate="yes" xml:space="preserve">
          <source>The class implies a maximum level of access permission, but the permissions may be additionally limited by the bitmask &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;, which controls whether non-public members can be accessed.</source>
          <target state="translated">このクラスは、最大レベルのアクセス許可を意味しますが、許可は、非公開メンバーにアクセスできるかどうかを制御するビットマスク&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;によってさらに制限される場合があります。</target>
        </trans-unit>
        <trans-unit id="89aaf05f9154c5d639e3b220e9a279db91a285c9" translate="yes" xml:space="preserve">
          <source>The class implies a maximum level of access permission, but the permissions may be additionally limited by the bitmask &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;, which controls whether non-public members can be accessed.</source>
          <target state="translated">このクラスは最大レベルのアクセス許可を意味しますが、アクセス権は、非公開メンバーにアクセスできるかどうかを制御するビットマスク&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;によってさらに制限される場合があります。</target>
        </trans-unit>
        <trans-unit id="07a936057fd298f90ef4620016e6ba3d49dac02a" translate="yes" xml:space="preserve">
          <source>The class is designed so that there's never more than one &lt;code&gt;Currency&lt;/code&gt; instance for any given currency. Therefore, there's no public constructor. You obtain a &lt;code&gt;Currency&lt;/code&gt; instance using the &lt;code&gt;getInstance&lt;/code&gt; methods.</source>
          <target state="translated">このクラスは、特定の通貨に対して複数の &lt;code&gt;Currency&lt;/code&gt; インスタンスが存在しないように設計されています。したがって、パブリックコンストラクターはありません。 &lt;code&gt;getInstance&lt;/code&gt; メソッドを使用して &lt;code&gt;Currency&lt;/code&gt; インスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="4ba87f5fbbddbc4d6864e72595ed2ed1025acbc6" translate="yes" xml:space="preserve">
          <source>The class is examined for getters using the conventions &lt;a href=&quot;#naming-conv&quot;&gt;above&lt;/a&gt;. (Getters must be public instance methods.) If there are no getters, or if any getter has a type that is not convertible, then &lt;em&gt;J&lt;/em&gt; is not convertible.</source>
          <target state="translated">&lt;a href=&quot;#naming-conv&quot;&gt;上記&lt;/a&gt;の規則を使用して、クラスはゲッターについて検査されます。（ゲッターはパブリックインスタンスメソッドである必要があります。）ゲッターがない場合、またはゲッターに変換できない型がある場合、&lt;em&gt;J&lt;/em&gt;は変換できません。</target>
        </trans-unit>
        <trans-unit id="0556140d639dee4aeced0e2d16ae076f246116ea" translate="yes" xml:space="preserve">
          <source>The class listens for component events.</source>
          <target state="translated">このクラスはコンポーネントのイベントをリッスンします。</target>
        </trans-unit>
        <trans-unit id="cbeb5c64a7f821c5e507e34ceac6d354f6b329f5" translate="yes" xml:space="preserve">
          <source>The class listens for focus events.</source>
          <target state="translated">授業では、フォーカスイベントに耳を傾けます。</target>
        </trans-unit>
        <trans-unit id="282e26d8566ede0aa84b99a5e9533eb2324e2ea8" translate="yes" xml:space="preserve">
          <source>The class listens for property changed events.</source>
          <target state="translated">クラスはプロパティの変更イベントをリッスンします。</target>
        </trans-unit>
        <trans-unit id="90084390ddd75ee262a42b490ac6031708964d0a" translate="yes" xml:space="preserve">
          <source>The class listens for window events.</source>
          <target state="translated">このクラスはウィンドウイベントをリッスンします。</target>
        </trans-unit>
        <trans-unit id="05bcd59f5760ca731c5e5d15e20de3accf563530" translate="yes" xml:space="preserve">
          <source>The class loader created by this method implements &lt;em&gt;direct delegation&lt;/em&gt; when loading classes from modules. If the &lt;a href=&quot;classloader#loadClass(java.lang.String,boolean)&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method is invoked to load a class then it uses the package name of the class to map it to a module. This may be a module in this layer and hence defined to the same class loader. It may be a package in a module in a parent layer that is exported to one or more of the modules in this layer. The class loader delegates to the class loader of the module, throwing &lt;code&gt;
 ClassNotFoundException&lt;/code&gt; if not found by that class loader. When &lt;code&gt;loadClass&lt;/code&gt; is invoked to load classes that do not map to a module then it delegates to the parent class loader.</source>
          <target state="translated">このメソッドによって作成されたクラスローダーは、モジュールからクラスをロードするときに&lt;em&gt;直接委任を&lt;/em&gt;実装します。場合&lt;a href=&quot;classloader#loadClass(java.lang.String,boolean)&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt;メソッドは、クラスをロードするために呼び出され、それがモジュールにマッピングするには、クラスのパッケージ名を使用しています。これはこのレイヤーのモジュールである可能性があるため、同じクラスローダーに定義されます。これは、親レイヤーのモジュール内のパッケージであり、このレイヤーの1つ以上のモジュールにエクスポートされます。クラスローダーはモジュールのクラスローダーに委任し、そのクラスローダーで &lt;code&gt; ClassNotFoundException&lt;/code&gt; ない場合はClassNotFoundExceptionをスローします。とき &lt;code&gt;loadClass&lt;/code&gt; 親クラスローダに、モジュールに代表をマップしない負荷クラスに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="cfbce1456f53eb48b9c1245f2e54ee3b686f7cc6" translate="yes" xml:space="preserve">
          <source>The class loader created by this method locates resources (&lt;a href=&quot;classloader#getResource(java.lang.String)&quot;&gt;&lt;code&gt;getResource&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;classloader#getResources(java.lang.String)&quot;&gt;&lt;code&gt;getResources&lt;/code&gt;&lt;/a&gt;, and other resource methods) in all modules in the layer before searching the parent class loader.</source>
          <target state="translated">このメソッドによって作成されたクラスローダーは、親クラスローダーを検索する前に、レイヤー内のすべてのモジュールでリソース（&lt;a href=&quot;classloader#getResource(java.lang.String)&quot;&gt; &lt;code&gt;getResource&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;classloader#getResources(java.lang.String)&quot;&gt; &lt;code&gt;getResources&lt;/code&gt; &lt;/a&gt;、およびその他のリソースメソッド）を検索します。</target>
        </trans-unit>
        <trans-unit id="258c74d3131960d404800da270fe020fa27dbebb" translate="yes" xml:space="preserve">
          <source>The class loader delegation implemented by the class loaders must respect module readability. The class loaders should be &lt;a href=&quot;classloader#registerAsParallelCapable()&quot;&gt;&lt;code&gt;parallel-capable&lt;/code&gt;&lt;/a&gt; so as to avoid deadlocks during class loading. In addition, the entity creating a new layer with this method should arrange that the class loaders be ready to load from these modules before there are any attempts to load classes or resources.</source>
          <target state="translated">クラスローダーによって実装されるクラスローダーの委任は、モジュールの可読性を尊重する必要があります。クラスローダーは、クラスロード中のデッドロックを回避&lt;a href=&quot;classloader#registerAsParallelCapable()&quot;&gt; &lt;code&gt;parallel-capable&lt;/code&gt; &lt;/a&gt;ために並列対応である必要があります。さらに、このメソッドを使用して新しいレイヤーを作成するエンティティは、クラスまたはリソースをロードしようとする前に、クラスローダーがこれらのモジュールからロードできるように調整する必要があります。</target>
        </trans-unit>
        <trans-unit id="326261e6f6cbb96bde83ba980d663285f4766b99" translate="yes" xml:space="preserve">
          <source>The class loader for this module</source>
          <target state="translated">このモジュールのクラスローダ</target>
        </trans-unit>
        <trans-unit id="8bbdf2509f29c5a7692e0e647c6562d6eb109c7e" translate="yes" xml:space="preserve">
          <source>The class loader returned is the class loader that the &lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;loadClass(String,String)&lt;/code&gt;&lt;/a&gt; method would use to load classes for the same &lt;code&gt;codebase&lt;/code&gt; argument.</source>
          <target state="translated">返されるクラスローダーは、&lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;loadClass(String,String)&lt;/code&gt; &lt;/a&gt;メソッドが同じ &lt;code&gt;codebase&lt;/code&gt; 引数のクラスをロードするために使用するクラスローダーです。</target>
        </trans-unit>
        <trans-unit id="fab82d392bdcac6117cd4e8e850bd2d53fbeb1df" translate="yes" xml:space="preserve">
          <source>The class loaders created by this method implement &lt;em&gt;direct delegation&lt;/em&gt; when loading classes from modules. If the &lt;a href=&quot;classloader#loadClass(java.lang.String,boolean)&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method is invoked to load a class then it uses the package name of the class to map it to a module. The package may be in the module defined to the class loader. The package may be exported by another module in this layer to the module defined to the class loader. It may be in a package exported by a module in a parent layer. The class loader delegates to the class loader of the module, throwing &lt;code&gt;ClassNotFoundException&lt;/code&gt; if not found by that class loader. When &lt;code&gt;loadClass&lt;/code&gt; is invoked to load a class that does not map to a module then it delegates to the parent class loader.</source>
          <target state="translated">このメソッドによって作成されたクラスローダーは、モジュールからクラスをロードするときに&lt;em&gt;直接委任を&lt;/em&gt;実装します。場合&lt;a href=&quot;classloader#loadClass(java.lang.String,boolean)&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt;メソッドは、クラスをロードするために呼び出され、それがモジュールにマッピングするには、クラスのパッケージ名を使用しています。パッケージは、クラスローダーに定義されたモジュール内にある可能性があります。パッケージは、このレイヤーの別のモジュールによって、クラスローダーに定義されたモジュールにエクスポートされる場合があります。親レイヤーのモジュールによってエクスポートされたパッケージに含まれている場合があります。クラスローダーはモジュールのクラスローダーに委任し、そのクラスローダーで &lt;code&gt;ClassNotFoundException&lt;/code&gt; ない場合はClassNotFoundExceptionをスローします。とき &lt;code&gt;loadClass&lt;/code&gt; 親クラスローダに、モジュールにデリゲートをマッピングしていないクラスをロードするために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f70a839a344030b06998e453d9fdb88f614bd640" translate="yes" xml:space="preserve">
          <source>The class loaders created by this method locate resources (&lt;a href=&quot;classloader#getResource(java.lang.String)&quot;&gt;&lt;code&gt;getResource&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;classloader#getResources(java.lang.String)&quot;&gt;&lt;code&gt;getResources&lt;/code&gt;&lt;/a&gt;, and other resource methods) in the module defined to the class loader before searching the parent class loader.</source>
          <target state="translated">このメソッドによって作成されたクラスローダーは、親クラスローダーを検索する前に、クラスローダーに定義されたモジュール内のリソース（&lt;a href=&quot;classloader#getResource(java.lang.String)&quot;&gt; &lt;code&gt;getResource&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;classloader#getResources(java.lang.String)&quot;&gt; &lt;code&gt;getResources&lt;/code&gt; &lt;/a&gt;、およびその他のリソースメソッド）を検索します。</target>
        </trans-unit>
        <trans-unit id="6a46a2bceba51e26038bcf8bf9c04983b0c81d03" translate="yes" xml:space="preserve">
          <source>The class may override methods from &lt;code&gt;Object&lt;/code&gt;, and may implement methods related to serialization.</source>
          <target state="translated">クラスは &lt;code&gt;Object&lt;/code&gt; のメソッドをオーバーライドし、シリアル化に関連するメソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="b6eb7d47c9875da75274f0ffa32e24741e2b6b2d" translate="yes" xml:space="preserve">
          <source>The class name of the factory that creates the resulting context has the naming convention</source>
          <target state="translated">結果のコンテキストを作成するファクトリのクラス名には、命名規則があります。</target>
        </trans-unit>
        <trans-unit id="c25a269dccdba35102f1daa8f57a9b2dd312ae31" translate="yes" xml:space="preserve">
          <source>The class name, member and object name parameters define a target name of the form &quot;&lt;code&gt;className#member[objectName]&lt;/code&gt;&quot; where each part is optional. This will be the result of &lt;a href=&quot;../../../java.base/java/security/permission#getName()&quot;&gt;&lt;code&gt;Permission.getName()&lt;/code&gt;&lt;/a&gt; on the resultant MBeanPermission.</source>
          <target state="translated">クラス名、メンバー、およびオブジェクト名のパラメーターは、「 &lt;code&gt;className#member[objectName]&lt;/code&gt; 」の形式のターゲット名を定義します。各部分はオプションです。これは、結果のMBeanPermissionに対する&lt;a href=&quot;../../../java.base/java/security/permission#getName()&quot;&gt; &lt;code&gt;Permission.getName()&lt;/code&gt; &lt;/a&gt;の結果になります。</target>
        </trans-unit>
        <trans-unit id="32fd5d586f202bbf77341f1d00fc8fc880091605" translate="yes" xml:space="preserve">
          <source>The class name, member and object name parameters define a target name of the form &quot;&lt;code&gt;className#member[objectName]&lt;/code&gt;&quot; where each part is optional. This will be the result of &lt;a href=&quot;../../java/security/permission#getName--&quot;&gt;&lt;code&gt;Permission.getName()&lt;/code&gt;&lt;/a&gt; on the resultant MBeanPermission.</source>
          <target state="translated">クラス名、メンバー、およびオブジェクト名のパラメーターは、「 &lt;code&gt;className#member[objectName]&lt;/code&gt; 」という形式のターゲット名を定義します。各部分はオプションです。これは、結果のMBeanPermission に対する&lt;a href=&quot;../../java/security/permission#getName--&quot;&gt; &lt;code&gt;Permission.getName()&lt;/code&gt; &lt;/a&gt;の結果です。</target>
        </trans-unit>
        <trans-unit id="f9608e6fec316aa026228e36333ed7b4a4a46e0c" translate="yes" xml:space="preserve">
          <source>The class name, member, and object name can be written together as a single string, which is the &lt;em&gt;name&lt;/em&gt; of this permission. The name of the permission is the string returned by &lt;a href=&quot;../../../java.base/java/security/permission#getName()&quot;&gt;&lt;code&gt;getName()&lt;/code&gt;&lt;/a&gt;. The format of the string is:</source>
          <target state="translated">クラス名、メンバー、およびオブジェクト名は、この権限の&lt;em&gt;名前&lt;/em&gt;である単一の文字列としてまとめて書き込むことができます。権限の名前は、&lt;a href=&quot;../../../java.base/java/security/permission#getName()&quot;&gt; &lt;code&gt;getName()&lt;/code&gt; &lt;/a&gt;によって返される文字列です。文字列の形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e7f527e6a2e74f94312874345a4b4bb09466dc5d" translate="yes" xml:space="preserve">
          <source>The class name, member, and object name can be written together as a single string, which is the &lt;em&gt;name&lt;/em&gt; of this permission. The name of the permission is the string returned by &lt;a href=&quot;../../java/security/permission#getName--&quot;&gt;&lt;code&gt;getName()&lt;/code&gt;&lt;/a&gt;. The format of the string is:</source>
          <target state="translated">クラス名、メンバー、およびオブジェクト名は、この権限の&lt;em&gt;名前&lt;/em&gt;である単一の文字列として一緒に書き込むことができます。権限の名前は、&lt;a href=&quot;../../java/security/permission#getName--&quot;&gt; &lt;code&gt;getName()&lt;/code&gt; &lt;/a&gt;によって返される文字列です。文字列の形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="24463e4dd2161bdd8170d4d26693be82652a2840" translate="yes" xml:space="preserve">
          <source>The class names of the exceptions that can be thrown when invoking a constructor or operation, or getting an attribute. The meaning of this field is defined by this specification but the field is not set or used by the JMX API itself. Exceptions thrown when setting an attribute are specified by the field &lt;a href=&quot;#setExceptions&quot;&gt;&lt;code&gt;setExceptions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コンストラクターまたは操作の呼び出し時、または属性の取得時にスローされる可能性のある例外のクラス名。このフィールドの意味はこの仕様で定義されていますが、フィールドはJMX API自体では設定または使用されません。属性の設定時にスローされる例外は、フィールド&lt;a href=&quot;#setExceptions&quot;&gt; &lt;code&gt;setExceptions&lt;/code&gt; で&lt;/a&gt;指定されます。</target>
        </trans-unit>
        <trans-unit id="4f558354362711f7f870366ca77457f25ec982e1" translate="yes" xml:space="preserve">
          <source>The class names of the exceptions that can be thrown when setting an attribute. The meaning of this field is defined by this specification but the field is not set or used by the JMX API itself. Exceptions thrown when getting an attribute are specified by the field &lt;a href=&quot;#exceptions&quot;&gt;&lt;code&gt;exceptions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">属性の設定時にスローされる可能性のある例外のクラス名。このフィールドの意味はこの仕様で定義されていますが、フィールドはJMX API自体では設定または使用されません。属性の取得時にスローされる&lt;a href=&quot;#exceptions&quot;&gt; &lt;code&gt;exceptions&lt;/code&gt; &lt;/a&gt;は、フィールドexceptionsで指定されます。</target>
        </trans-unit>
        <trans-unit id="1f9b8f032b0167ba6e6300e5b684930ecc1fd72b" translate="yes" xml:space="preserve">
          <source>The class of an object being deserialized.</source>
          <target state="translated">デシリアライズされるオブジェクトのクラス。</target>
        </trans-unit>
        <trans-unit id="2740e15772572f35c505dbc760b86f3a12d87415" translate="yes" xml:space="preserve">
          <source>The class of an object being deserialized. For arrays, it is the array type. For example, the array class name of a 2 dimensional array of strings is &quot;&lt;code&gt;[[Ljava.lang.String;&lt;/code&gt;&quot;. To check the array's element type, iteratively use &lt;a href=&quot;../lang/class#getComponentType()&quot;&gt;&lt;code&gt;Class.getComponentType&lt;/code&gt;&lt;/a&gt; while the result is an array and then check the class. The &lt;code&gt;serialClass is null&lt;/code&gt; in the case where a new object is not being created and to give the filter a chance to check the depth, number of references to existing objects, and the stream size.</source>
          <target state="translated">デシリアライズされるオブジェクトのクラス。配列の場合、これは配列タイプです。たとえば、文字列の2次元配列の配列クラス名は「 &lt;code&gt;[[Ljava.lang.String;&lt;/code&gt; 」です。配列の要素タイプを確認するには、結果が配列であるときに&lt;a href=&quot;../lang/class#getComponentType()&quot;&gt; &lt;code&gt;Class.getComponentType&lt;/code&gt; &lt;/a&gt;を繰り返し使用してから、クラスを確認します。 &lt;code&gt;serialClass is null&lt;/code&gt; 、新しいオブジェクトが作成されていないと、フィルタに深さ、既存のオブジェクトへの参照の数、およびストリームのサイズを確認する機会を与える場合。</target>
        </trans-unit>
        <trans-unit id="67a17c362d3e1b1c120d30ec1c8988dcf8590e9f" translate="yes" xml:space="preserve">
          <source>The class of the implementation of this Standard MBean (or MXBean).</source>
          <target state="translated">この標準MBean(またはMXBean)の実装のクラス。</target>
        </trans-unit>
        <trans-unit id="aafaead25ed357736f7fa6d9e43fd8e44d23e040" translate="yes" xml:space="preserve">
          <source>The class of the mismatched argument</source>
          <target state="translated">不一致引数のクラス</target>
        </trans-unit>
        <trans-unit id="9f9c1e95a29aed3cd3487891bc5c2b07f99d1d46" translate="yes" xml:space="preserve">
          <source>The class or interface name</source>
          <target state="translated">クラスまたはインターフェイス名</target>
        </trans-unit>
        <trans-unit id="f007715f4909fdab76de81c8cd8ec93dac588cf5" translate="yes" xml:space="preserve">
          <source>The class provides an implementation of the Java Accessibility API appropriate to table cells.</source>
          <target state="translated">このクラスは、テーブルセルに適したJavaアクセシビリティAPIの実装を提供します。</target>
        </trans-unit>
        <trans-unit id="286267cd7c2dadf8f4f24d53925a0ddb0cc6af1d" translate="yes" xml:space="preserve">
          <source>The class represents a tree leaf icon.</source>
          <target state="translated">このクラスは、木の葉のアイコンを表します。</target>
        </trans-unit>
        <trans-unit id="8b77a5b0d4e4154f18193bc6fbbf51abd2feba82" translate="yes" xml:space="preserve">
          <source>The class represents the 3D border.</source>
          <target state="translated">3Dの境界線を表すクラスです。</target>
        </trans-unit>
        <trans-unit id="6839be2ec33b78e827e2d1987980afbaf909e1a3" translate="yes" xml:space="preserve">
          <source>The class represents the border of a &lt;code&gt;JButton&lt;/code&gt;.</source>
          <target state="translated">このクラスは、 &lt;code&gt;JButton&lt;/code&gt; の境界を表します。</target>
        </trans-unit>
        <trans-unit id="6e7cf833e911bdb723121693cf19ffd36e4a7f56" translate="yes" xml:space="preserve">
          <source>The class represents the border of a &lt;code&gt;JInternalFrame&lt;/code&gt;.</source>
          <target state="translated">このクラスは、 &lt;code&gt;JInternalFrame&lt;/code&gt; の境界を表します。</target>
        </trans-unit>
        <trans-unit id="ac514f9d438d9dc3f63c070f0f195568ddbe73d5" translate="yes" xml:space="preserve">
          <source>The class represents the border of a &lt;code&gt;JMenuBar&lt;/code&gt;.</source>
          <target state="translated">このクラスは、 &lt;code&gt;JMenuBar&lt;/code&gt; の境界を表します。</target>
        </trans-unit>
        <trans-unit id="f988bc863af25b2cdc6f590ca4c93d2573c389a1" translate="yes" xml:space="preserve">
          <source>The class represents the border of a &lt;code&gt;JMenuItem&lt;/code&gt;.</source>
          <target state="translated">このクラスは、 &lt;code&gt;JMenuItem&lt;/code&gt; の境界を表します。</target>
        </trans-unit>
        <trans-unit id="6ca0ccd64022eb7039d05fcc7f5d27910100c513" translate="yes" xml:space="preserve">
          <source>The class represents the border of a &lt;code&gt;JPopupMenu&lt;/code&gt;.</source>
          <target state="translated">このクラスは、 &lt;code&gt;JPopupMenu&lt;/code&gt; の境界を表します。</target>
        </trans-unit>
        <trans-unit id="450acedb236f56cbe5dff9c77f50b10c2ec8b1f2" translate="yes" xml:space="preserve">
          <source>The class represents the border of a &lt;code&gt;JScrollPane&lt;/code&gt;.</source>
          <target state="translated">このクラスは、 &lt;code&gt;JScrollPane&lt;/code&gt; の境界を表します。</target>
        </trans-unit>
        <trans-unit id="6d1b06a7803bfe5ea260aec6f6a6cba057af6fd6" translate="yes" xml:space="preserve">
          <source>The class represents the border of a &lt;code&gt;JTestField&lt;/code&gt;.</source>
          <target state="translated">このクラスは、 &lt;code&gt;JTestField&lt;/code&gt; の境界を表します。</target>
        </trans-unit>
        <trans-unit id="92a84daf1534fb790532a9fe6ccd488a42c15d1e" translate="yes" xml:space="preserve">
          <source>The class represents the border of a &lt;code&gt;JToolBar&lt;/code&gt;.</source>
          <target state="translated">このクラスは、 &lt;code&gt;JToolBar&lt;/code&gt; の境界を表します。</target>
        </trans-unit>
        <trans-unit id="33777a2cbf90e63d04b2bf1136625e688a5e6ae2" translate="yes" xml:space="preserve">
          <source>The class represents the border of a rollover &lt;code&gt;Button&lt;/code&gt;.</source>
          <target state="translated">このクラスは、ロールオーバー &lt;code&gt;Button&lt;/code&gt; 境界を表します。</target>
        </trans-unit>
        <trans-unit id="db9baa563ca4c8e66488ed12859d61eef33e98ac" translate="yes" xml:space="preserve">
          <source>The class represents the border of an option dialog.</source>
          <target state="translated">このクラスはオプションダイアログの境界を表します。</target>
        </trans-unit>
        <trans-unit id="1a2c9a0f65f1fbe34eeec41acff28d1714f07806" translate="yes" xml:space="preserve">
          <source>The class that defines the constants that are used to identify generic SQL types, called JDBC types.</source>
          <target state="translated">JDBC型と呼ばれる一般的なSQL型を識別するための定数を定義するクラス。</target>
        </trans-unit>
        <trans-unit id="9916676bdcf31c8c5f801880ee36b6ab011a90ed" translate="yes" xml:space="preserve">
          <source>The class that is interested in monitoring AWT events implements this interface, and the object created with that class is registered with the Toolkit, using the Toolkit's &lt;code&gt;addAWTEventListener&lt;/code&gt; method. When an event is dispatched anywhere in the AWT, that object's &lt;code&gt;eventDispatched&lt;/code&gt; method is invoked.</source>
          <target state="translated">AWTイベントの監視に関心のあるクラスはこのインターフェースを実装し、そのクラスで作成されたオブジェクトは、Toolkitの &lt;code&gt;addAWTEventListener&lt;/code&gt; メソッドを使用してToolkitに登録されます。イベントがAWTのどこかに &lt;code&gt;eventDispatched&lt;/code&gt; 、そのオブジェクトのeventDispatchedメソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7beb96be1aa1e8cd73a29cb0be379483ac84fffa" translate="yes" xml:space="preserve">
          <source>The class that is interested in processing a mouse event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;MouseAdapter&lt;/code&gt; class (overriding only the methods of interest).</source>
          <target state="translated">マウスイベントの処理に関心のあるクラスは、このインターフェイス（およびそれに含まれるすべてのメソッド）を実装するか、抽象 &lt;code&gt;MouseAdapter&lt;/code&gt; クラスを拡張します（対象のメソッドのみをオーバーライドします）。</target>
        </trans-unit>
        <trans-unit id="64773e4c6790fc9845cb53b1da9e016383c63a54" translate="yes" xml:space="preserve">
          <source>The class that is interested in processing a mouse motion event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;MouseMotionAdapter&lt;/code&gt; class (overriding only the methods of interest).</source>
          <target state="translated">マウスモーションイベントの処理に関心のあるクラスは、このインターフェイス（およびそれに含まれるすべてのメソッド）を実装するか、抽象 &lt;code&gt;MouseMotionAdapter&lt;/code&gt; クラスを拡張します（対象のメソッドのみをオーバーライドします）。</target>
        </trans-unit>
        <trans-unit id="56d5c773bc59e865c1a0b3e9b30ba5a6d6a4f0ef" translate="yes" xml:space="preserve">
          <source>The class that is interested in processing a mouse wheel event implements this interface (and all the methods it contains).</source>
          <target state="translated">マウスホイールイベントの処理に興味のあるクラスは、このインターフェイスを実装しています (そしてそれに含まれるすべてのメソッド)。</target>
        </trans-unit>
        <trans-unit id="0af3e588c9bd003a135038de3c9d7c5c596ab936" translate="yes" xml:space="preserve">
          <source>The class that is interested in processing a window state event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;WindowAdapter&lt;/code&gt; class (overriding only the methods of interest).</source>
          <target state="translated">ウィンドウ状態イベントの処理に関心のあるクラスは、このインターフェイス（およびそれに含まれるすべてのメソッド）を実装するか、抽象 &lt;code&gt;WindowAdapter&lt;/code&gt; クラスを拡張します（対象のメソッドのみをオーバーライドします）。</target>
        </trans-unit>
        <trans-unit id="40526c10f584dacf65d48b1c288c31afec545385" translate="yes" xml:space="preserve">
          <source>The class that is interested in processing mouse motion events during a drag operation either implements this interface or extends the abstract &lt;code&gt;DragSourceAdapter&lt;/code&gt; class (overriding only the methods of interest).</source>
          <target state="translated">ドラッグ操作中にマウスモーションイベントを処理することに関心のあるクラスは、このインターフェイスを実装するか、抽象 &lt;code&gt;DragSourceAdapter&lt;/code&gt; クラスを拡張します（目的のメソッドのみをオーバーライドします）。</target>
        </trans-unit>
        <trans-unit id="8adf9ffee8fa29a5a58a6deb1d3be82bab882a76" translate="yes" xml:space="preserve">
          <source>The class that manages a basic title bar</source>
          <target state="translated">基本的なタイトルバーを管理するクラス</target>
        </trans-unit>
        <trans-unit id="9e0fc3532f2d6f01a6ea69c31f9dd3f6b79f0e1c" translate="yes" xml:space="preserve">
          <source>The class to be activated and the special activation constructor are both public, and the class resides in a package that is &lt;a href=&quot;../../../../java.base/java/lang/module#isExported(java.lang.String,java.lang.Module)&quot;&gt;exported&lt;/a&gt; to at least the &lt;code&gt;java.rmi&lt;/code&gt; module; or</source>
          <target state="translated">アクティブ化されるクラスと特別なアクティブ化コンストラクターは両方ともパブリックであり、クラスは少なくとも &lt;code&gt;java.rmi&lt;/code&gt; モジュールに&lt;a href=&quot;../../../../java.base/java/lang/module#isExported(java.lang.String,java.lang.Module)&quot;&gt;エクスポートさ&lt;/a&gt;れるパッケージに存在します。または</target>
        </trans-unit>
        <trans-unit id="a2985ee19fb1ba59bf43a79f9385704f37a81b93" translate="yes" xml:space="preserve">
          <source>The class to be activated resides in a package that is &lt;a href=&quot;../../../../java.base/java/lang/module#isOpen(java.lang.String,java.lang.Module)&quot;&gt;open&lt;/a&gt; to at least the &lt;code&gt;java.rmi&lt;/code&gt; module.</source>
          <target state="translated">アクティブ化されるクラスは、少なくとも &lt;code&gt;java.rmi&lt;/code&gt; モジュールに対して&lt;a href=&quot;../../../../java.base/java/lang/module#isOpen(java.lang.String,java.lang.Module)&quot;&gt;開か&lt;/a&gt;れているパッケージに存在します。</target>
        </trans-unit>
        <trans-unit id="458470aec10b5efb991e16f76cc406030e1671eb" translate="yes" xml:space="preserve">
          <source>The class used for the default look and feel is chosen in the following manner:</source>
          <target state="translated">デフォルトのルックアンドフィールに使用されるクラスは、以下のように選択されています。</target>
        </trans-unit>
        <trans-unit id="fccb7f1f0fc8e9637c0fc6b879e925d95c35e3be" translate="yes" xml:space="preserve">
          <source>The class used to obtain the accessible role for this object, as well as implementing many of the methods in the AccessibleContainer interface.</source>
          <target state="translated">このオブジェクトのアクセス可能なロールを取得するために使用されるクラスで、AccessibleContainer インターフェースの多くのメソッドを実装しています。</target>
        </trans-unit>
        <trans-unit id="0ce9bfae0074ac7b078c71e5fcb0954fed4da723" translate="yes" xml:space="preserve">
          <source>The class used to obtain the accessible role for this object.</source>
          <target state="translated">このオブジェクトのアクセス可能なロールを取得するために使用されるクラス。</target>
        </trans-unit>
        <trans-unit id="b654b49876bc0c4e9c2764844b998a4518610818" translate="yes" xml:space="preserve">
          <source>The class-only format &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;&quot;java.class&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;java.class&quot;&lt;/code&gt; を含むクラスのみの形式の &lt;code&gt;List&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0429235745a3b457b0c546403aed40bddedcce9d" translate="yes" xml:space="preserve">
          <source>The class-only format &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;&quot;java.class&quot;&lt;/code&gt;. This &lt;code&gt;List&lt;/code&gt; is &lt;a href=&quot;collections#unmodifiableList-java.util.List-&quot;&gt;unmodifiable&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;java.class&quot;&lt;/code&gt; を含むクラスのみの形式の &lt;code&gt;List&lt;/code&gt; 。この &lt;code&gt;List&lt;/code&gt; は&lt;a href=&quot;collections#unmodifiableList-java.util.List-&quot;&gt;変更できません&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="81b9436050ee4309c9801830af9ef66d77d8aff6" translate="yes" xml:space="preserve">
          <source>The class-only format &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;&quot;java.class&quot;&lt;/code&gt;. This &lt;code&gt;List&lt;/code&gt; is unmodifiable.</source>
          <target state="translated">&lt;code&gt;&quot;java.class&quot;&lt;/code&gt; を含むクラスのみの形式の &lt;code&gt;List&lt;/code&gt; 。この &lt;code&gt;List&lt;/code&gt; は変更できません。</target>
        </trans-unit>
        <trans-unit id="951f885ca705190ee66dda1a5c90080539c69c07" translate="yes" xml:space="preserve">
          <source>The classes &lt;a href=&quot;localdate&quot;&gt;&lt;code&gt;LocalDate&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localtime&quot;&gt;&lt;code&gt;LocalTime&lt;/code&gt;&lt;/a&gt; implement &lt;code&gt;TemporalAdjuster&lt;/code&gt;, thus this method can be used to change the date, time or offset:</source>
          <target state="translated">クラス&lt;a href=&quot;localdate&quot;&gt; &lt;code&gt;LocalDate&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;localtime&quot;&gt; &lt;code&gt;LocalTime&lt;/code&gt; &lt;/a&gt;実装 &lt;code&gt;TemporalAdjuster&lt;/code&gt; を、したがって、この方法では、日付、時間またはオフセットを変更するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="91f35168bb8ac0d14680d3e7a283896058efa32f" translate="yes" xml:space="preserve">
          <source>The classes &lt;a href=&quot;localdate&quot;&gt;&lt;code&gt;LocalDate&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;localtime&quot;&gt;&lt;code&gt;LocalTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffset&quot;&gt;&lt;code&gt;ZoneOffset&lt;/code&gt;&lt;/a&gt; implement &lt;code&gt;TemporalAdjuster&lt;/code&gt;, thus this method can be used to change the date, time or offset:</source>
          <target state="translated">&lt;a href=&quot;localdate&quot;&gt; &lt;code&gt;LocalDate&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;localtime&quot;&gt; &lt;code&gt;LocalTime&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;zoneoffset&quot;&gt; &lt;code&gt;ZoneOffset&lt;/code&gt; &lt;/a&gt;クラスは &lt;code&gt;TemporalAdjuster&lt;/code&gt; を実装しているため、このメソッドを使用して、日付、時刻、またはオフセットを変更できます。</target>
        </trans-unit>
        <trans-unit id="667e2b33474bdab83bd95b94b5fc3ee8acc932ff" translate="yes" xml:space="preserve">
          <source>The classes &lt;a href=&quot;localtime&quot;&gt;&lt;code&gt;LocalTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffset&quot;&gt;&lt;code&gt;ZoneOffset&lt;/code&gt;&lt;/a&gt; implement &lt;code&gt;TemporalAdjuster&lt;/code&gt;, thus this method can be used to change the time or offset:</source>
          <target state="translated">クラス&lt;a href=&quot;localtime&quot;&gt; &lt;code&gt;LocalTime&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;zoneoffset&quot;&gt; &lt;code&gt;ZoneOffset&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;TemporalAdjuster&lt;/code&gt; を実装しているため、このメソッドを使用して時間またはオフセットを変更できます。</target>
        </trans-unit>
        <trans-unit id="722234831f395f0d9b64e2955ad52bebceec69b0" translate="yes" xml:space="preserve">
          <source>The classes &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; contain &lt;a href=&quot;methodhandle#sigpoly&quot;&gt;signature polymorphic methods&lt;/a&gt; which can be linked regardless of their type descriptor. Normally, method linkage requires exact matching of type descriptors.</source>
          <target state="translated">クラス&lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; を&lt;/a&gt;含む&lt;a href=&quot;methodhandle#sigpoly&quot;&gt;署名多型の方法&lt;/a&gt;にかかわらず、それらのタイプ記述子の連結され得ます。通常、メソッドリンケージでは、型記述子を完全に一致させる必要があります。</target>
        </trans-unit>
        <trans-unit id="cec24830f5c82c9cf576c48a3e99008285d79599" translate="yes" xml:space="preserve">
          <source>The classes and interfaces in this package have been deprecated.</source>
          <target state="translated">このパッケージのクラスとインタフェースは非推奨となりました。</target>
        </trans-unit>
        <trans-unit id="5e8bdfe5f8a605c6118dd5500287b4e9ccf0f1bf" translate="yes" xml:space="preserve">
          <source>The classes and interfaces in this package have been deprecated. New classes should not be added to this package. The &lt;code&gt;java.security&lt;/code&gt; package contains suitable replacements. See &lt;a href=&quot;../policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; and related classes for details. This package is subject to removal in a future version of Java SE.</source>
          <target state="translated">このパッケージのクラスとインターフェースは非推奨になりました。このパッケージに新しいクラスを追加しないでください。 &lt;code&gt;java.security&lt;/code&gt; のパッケージには、適切な代替品が含まれています。詳細については、&lt;a href=&quot;../policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt;および関連するクラスを参照してください。このパッケージは、JavaSEの将来のバージョンで削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="80a1b2807e3c199a522ca9fc26f06689a6f68c38" translate="yes" xml:space="preserve">
          <source>The classes and interfaces in this package have been superseded by classes in the java.security package.</source>
          <target state="translated">本パッケージのクラスとインタフェースは、java.security パッケージのクラスに取って代わられています。</target>
        </trans-unit>
        <trans-unit id="ed5a6af1e3f7c3411e84709c3cbf34764ac2efbf" translate="yes" xml:space="preserve">
          <source>The classes and interfaces in this package have been superseded by classes in the java.security package. See that package and, for example, java.security.Permission for details.</source>
          <target state="translated">本パッケージのクラスとインタフェースは、java.security パッケージのクラスに取って代わられています。詳細については、そのパッケージと、例えば java.security.Permission を参照してください。</target>
        </trans-unit>
        <trans-unit id="b9635c921806c4e935892a31449185b3439db682" translate="yes" xml:space="preserve">
          <source>The classes and interfaces used for connection pooling are:</source>
          <target state="translated">接続プーリングに使用されるクラスとインターフェースは、以下の通りです。</target>
        </trans-unit>
        <trans-unit id="4c51a617893f735aff590cb84b679bd5d0f64b0e" translate="yes" xml:space="preserve">
          <source>The classes and interfaces used for distributed transactions are:</source>
          <target state="translated">分散トランザクションに使用されるクラスとインターフェースは</target>
        </trans-unit>
        <trans-unit id="8cc8dc37d5486db6b4ddadb26ec74de8ff37fc86" translate="yes" xml:space="preserve">
          <source>The classes defined here represent the principle date-time concepts, including instants, durations, dates, times, time-zones and periods. They are based on the ISO calendar system, which is the</source>
          <target state="translated">ここで定義されているクラスは、インスタント、デュレーション、日付、時間、タイムゾーン、ピリオドなどの原則的な日付時間の概念を表しています。これらは、ISOのカレンダーシステムに基づいています。</target>
        </trans-unit>
        <trans-unit id="9a46ae30bb17480a7a5450f23f683c7092a86400" translate="yes" xml:space="preserve">
          <source>The classes in packages exported by the modules in the &lt;a href=&quot;../../../../java.base/java/lang/modulelayer#boot()&quot;&gt;boot layer&lt;/a&gt;. Whether the boot layer contains all platform modules or not will depend on the initial module or how the application was started.</source>
          <target state="translated">&lt;a href=&quot;../../../../java.base/java/lang/modulelayer#boot()&quot;&gt;ブートレイヤーの&lt;/a&gt;モジュールによってエクスポートされたパッケージ内のクラス。ブートレイヤーにすべてのプラットフォームモジュールが含まれるかどうかは、最初のモジュールまたはアプリケーションの起動方法によって異なります。</target>
        </trans-unit>
        <trans-unit id="f1ddc966da7eb209890b6b98e471fd102a3dbfd7" translate="yes" xml:space="preserve">
          <source>The classes that are loaded are by default granted permission only to access the URLs specified when the URLClassLoader was created.</source>
          <target state="translated">ロードされるクラスは、デフォルトではURLClassLoaderが作成された際に指定されたURLへのアクセスのみが許可されています。</target>
        </trans-unit>
        <trans-unit id="2ed60e3a4caf143027d587104b1f044774f6e21d" translate="yes" xml:space="preserve">
          <source>The classes that can be defined by the system class loader (typically the class path) to be members of its unnamed module.</source>
          <target state="translated">システムクラスローダによって定義されるクラス (典型的にはクラスパス)は、その名前のないモジュールのメンバーになることができます。</target>
        </trans-unit>
        <trans-unit id="238f24052324a21a82637cf730180fbba8927382" translate="yes" xml:space="preserve">
          <source>The classes visible to the agent class are the classes visible to the system class loader and minimally include:</source>
          <target state="translated">エージェント・クラスに見えるクラスは、システム・クラス・ローダに見えるクラスであり、最小限に含まれています。</target>
        </trans-unit>
        <trans-unit id="a4f20c0c81d3fcf5f113e63defaf1a7e721b263f" translate="yes" xml:space="preserve">
          <source>The classification function maps elements to some key type &lt;code&gt;K&lt;/code&gt;. The collector produces a &lt;code&gt;ConcurrentMap&amp;lt;K, List&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; whose keys are the values resulting from applying the classification function to the input elements, and whose corresponding values are &lt;code&gt;List&lt;/code&gt;s containing the input elements which map to the associated key under the classification function.</source>
          <target state="translated">分類関数は、要素をいくつかのキータイプ &lt;code&gt;K&lt;/code&gt; にマップします。コレクターは &lt;code&gt;ConcurrentMap&amp;lt;K, List&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; を生成します。そのキーは、分類関数を入力要素に適用した結果の値であり、対応する値は、分類関数の下で関連するキーにマップする入力要素を含む &lt;code&gt;List&lt;/code&gt; です。 。</target>
        </trans-unit>
        <trans-unit id="f7b6ff72cdcfcbf34cc479a3dd8ccba88f465aff" translate="yes" xml:space="preserve">
          <source>The classification function maps elements to some key type &lt;code&gt;K&lt;/code&gt;. The collector produces a &lt;code&gt;Map&amp;lt;K, List&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; whose keys are the values resulting from applying the classification function to the input elements, and whose corresponding values are &lt;code&gt;List&lt;/code&gt;s containing the input elements which map to the associated key under the classification function.</source>
          <target state="translated">分類関数は、要素をいくつかのキータイプ &lt;code&gt;K&lt;/code&gt; にマップします。コレクターは &lt;code&gt;Map&amp;lt;K, List&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; を生成します。そのキーは分類要素を入力要素に適用した結果の値であり、対応する値は分類要素の下の関連するキーにマップする入力要素を含む &lt;code&gt;List&lt;/code&gt; です。 。</target>
        </trans-unit>
        <trans-unit id="3727ee55f4157c61233f7b056c889b66016de950" translate="yes" xml:space="preserve">
          <source>The classification function maps elements to some key type &lt;code&gt;K&lt;/code&gt;. The downstream collector operates on elements of type &lt;code&gt;T&lt;/code&gt; and produces a result of type &lt;code&gt;D&lt;/code&gt;. The resulting collector produces a &lt;code&gt;ConcurrentMap&amp;lt;K, D&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">分類関数は、要素をいくつかのキータイプ &lt;code&gt;K&lt;/code&gt; にマップします。ダウンストリームコレクターはタイプ &lt;code&gt;T&lt;/code&gt; の要素で動作し、タイプ &lt;code&gt;D&lt;/code&gt; の結果を生成します。結果のコレクターは、 &lt;code&gt;ConcurrentMap&amp;lt;K, D&amp;gt;&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="8dcf0f47762fae0e87c464f9581d648ea3ae1c54" translate="yes" xml:space="preserve">
          <source>The classification function maps elements to some key type &lt;code&gt;K&lt;/code&gt;. The downstream collector operates on elements of type &lt;code&gt;T&lt;/code&gt; and produces a result of type &lt;code&gt;D&lt;/code&gt;. The resulting collector produces a &lt;code&gt;Map&amp;lt;K, D&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">分類関数は、要素をいくつかのキータイプ &lt;code&gt;K&lt;/code&gt; にマップします。ダウンストリームコレクターは、タイプ &lt;code&gt;T&lt;/code&gt; の要素を操作し、タイプ &lt;code&gt;D&lt;/code&gt; の結果を生成します。結果のコレクターは &lt;code&gt;Map&amp;lt;K, D&amp;gt;&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="a9e51511b8fecf450953e01c011e33402e8e04f0" translate="yes" xml:space="preserve">
          <source>The clause array (of type &lt;code&gt;MethodHandle[][]&lt;/code&gt;) must be non-&lt;code&gt;null&lt;/code&gt; and contain at least one element.</source>
          <target state="translated">（ &lt;code&gt;MethodHandle[][]&lt;/code&gt; 型の）句配列は &lt;code&gt;null&lt;/code&gt; 以外であり、少なくとも1つの要素を含む必要があります。</target>
        </trans-unit>
        <trans-unit id="c0cb4102e442d6ca5287e2670473db4ab91082d5" translate="yes" xml:space="preserve">
          <source>The clause array may not contain &lt;code&gt;null&lt;/code&gt;s or sub-arrays longer than four elements.</source>
          <target state="translated">句配列には、 &lt;code&gt;null&lt;/code&gt; または4要素より長いサブ配列を含めることはできません。</target>
        </trans-unit>
        <trans-unit id="b1785a2b6e3d5ba51ec1c9cfb9aee9bc00c0be0e" translate="yes" xml:space="preserve">
          <source>The clean call removes the 'vmid' from the reference list of each remote object indicated in 'id's.</source>
          <target state="translated">クリーンコールは、'id' で示される各リモートオブジェクトの参照リストから 'vmid' を削除します。</target>
        </trans-unit>
        <trans-unit id="a8ec795cf12da5dab298d48a6c632ec8fb265b5a" translate="yes" xml:space="preserve">
          <source>The clean call removes the 'vmid' from the reference list of each remote object indicated in 'id's. The sequence number is used to detect late clean calls. If the argument 'strong' is true, then the clean call is a result of a failed dirty call, thus the sequence number for the client 'vmid' needs to be remembered.</source>
          <target state="translated">クリーンコールは、'id' で示される各リモートオブジェクトの参照リストから 'vmid' を削除します。シーケンス番号は、遅いクリーンコールを検出するために使用されます。引数 'strong' が真の場合、クリーンコールは失敗したダーティコールの結果であるため、クライアント 'vmid' のシーケンス番号を記憶しておく必要があります。</target>
        </trans-unit>
        <trans-unit id="282642815fbef3f3ce01e449943b340705977b72" translate="yes" xml:space="preserve">
          <source>The cleaner creates a &lt;a href=&quot;../thread#setDaemon(boolean)&quot;&gt;&lt;code&gt;daemon thread&lt;/code&gt;&lt;/a&gt; to process the phantom reachable objects and to invoke cleaning actions. The &lt;a href=&quot;../thread#getContextClassLoader()&quot;&gt;context class loader&lt;/a&gt; of the thread is set to the &lt;a href=&quot;../classloader#getSystemClassLoader()&quot;&gt;&lt;code&gt;system class loader&lt;/code&gt;&lt;/a&gt;. The thread has no permissions, enforced only if a &lt;a href=&quot;../system#setSecurityManager(java.lang.SecurityManager)&quot;&gt;&lt;code&gt;SecurityManager is set&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">クリーナーは、到達可能なファントムオブジェクトを処理し、クリーニングアクションを呼び出す&lt;a href=&quot;../thread#setDaemon(boolean)&quot;&gt; &lt;code&gt;daemon thread&lt;/code&gt; &lt;/a&gt;を作成します。スレッドの&lt;a href=&quot;../thread#getContextClassLoader()&quot;&gt;コンテキストクラスローダー&lt;/a&gt;は、&lt;a href=&quot;../classloader#getSystemClassLoader()&quot;&gt; &lt;code&gt;system class loader&lt;/code&gt; &lt;/a&gt;設定されます。スレッドには権限がなく、&lt;a href=&quot;../system#setSecurityManager(java.lang.SecurityManager)&quot;&gt; &lt;code&gt;SecurityManager is set&lt;/code&gt; &lt;/a&gt;いる場合にのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="d3ab61fdfe6ebfe36da9949cd933ac5b8e6fd103" translate="yes" xml:space="preserve">
          <source>The cleaner terminates when it is phantom reachable and all of the registered cleaning actions are complete.</source>
          <target state="translated">ファントムリーチが可能で、登録されているすべてのクリーニング動作が完了した時点で、クリーナーは終了します。</target>
        </trans-unit>
        <trans-unit id="d81d720db79742e038cb81cd7c69dcda1aade83b" translate="yes" xml:space="preserve">
          <source>The cleaning action could be a lambda but all too easily will capture the object reference, by referring to fields of the object being cleaned, preventing the object from becoming phantom reachable. Using a static nested class, as above, will avoid accidentally retaining the object reference.</source>
          <target state="translated">クリーニングアクションはラムダかもしれませんが、あまりにも簡単に、クリーニングされるオブジェクトのフィールドを参照することで、オブジェクトの参照を捕捉してしまい、オブジェクトがファントムリーチ可能になるのを防ぎます。上記のように静的なネストされたクラスを使用することで、誤ってオブジェクト参照を保持してしまうことを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="00e35b50f749ac6712b40f22d8edda156c5309cd" translate="yes" xml:space="preserve">
          <source>The cleaning action is invoked only after the associated object becomes phantom reachable, so it is important that the object implementing the cleaning action does not hold references to the object. In this example, a static class encapsulates the cleaning state and action. An &quot;inner&quot; class, anonymous or not, must not be used because it implicitly contains a reference to the outer instance, preventing it from becoming phantom reachable. The choice of a new cleaner or sharing an existing cleaner is determined by the use case.</source>
          <target state="translated">クリーニング アクションは、関連付けられたオブジェクトがファントム リーチャブルになった後にのみ呼び出されるので、クリーニング アクションを実装するオブジェクトがオブジェクトへの参照を保持していないことが重要です。この例では、静的クラスがクリーニング状態とアクションをカプセル化しています。匿名であろうとなかろうと「内部」クラスは、外部インスタンスへの参照を暗黙的に含み、ファントムリーチャブルになるのを防ぐため、使用してはいけません。新しいクリーナーを作成するか、既存のクリーナーを共有するかの選択は、ユースケースによって決定されます。</target>
        </trans-unit>
        <trans-unit id="d66802f538547bc49310f369abc46f7fe953b16a" translate="yes" xml:space="preserve">
          <source>The client can always specify any &lt;a href=&quot;jobpriority&quot;&gt;&lt;code&gt;JobPriority&lt;/code&gt;&lt;/a&gt; value from 1 to 100 for a job. However, the Print Service instance may support fewer than 100 different job priority levels. If this is the case, the Print Service instance automatically maps the client-specified job priority value to one of the supported job priority levels, dividing the 100 job priority values equally among the available job priority levels.</source>
          <target state="translated">クライアントは、ジョブに対して常に1〜100の任意の&lt;a href=&quot;jobpriority&quot;&gt; &lt;code&gt;JobPriority&lt;/code&gt; &lt;/a&gt;値を指定できます。ただし、Print Serviceインスタンスは100未満の異なるジョブ優先度レベルをサポートする場合があります。この場合、Print Serviceインスタンスは、クライアントが指定したジョブの優先度の値を、サポートされているジョブの優先度のレベルの1つに自動的にマッピングし、100のジョブの優先度の値を使用可能なジョブの優先度のレベルで均等に分割します。</target>
        </trans-unit>
        <trans-unit id="f54e74b6cf6d674d95124793f818122cb381114e" translate="yes" xml:space="preserve">
          <source>The client can always specify any job priority value from 1 to 100 for a job. However, a Print Service instance may support fewer than 100 different job priority levels. If this is the case, the Print Service instance automatically maps the client-specified job priority value to one of the supported job priority levels, dividing the 100 job priority values equally among the available job priority levels.</source>
          <target state="translated">クライアントは、ジョブに対して常に1から100までの任意のジョブ優先度値を指定することができる。しかし、プリントサービス・インスタンスでは、サポートされているジョブ優先度が100よりも少ない場合があります。このような場合、Print Serviceインスタンスは、クライアントが指定したジョブ優先度値をサポートされているジョブ優先度レベルの1つに自動的にマッピングし、100のジョブ優先度値を利用可能なジョブ優先度レベル間で均等に分割します。</target>
        </trans-unit>
        <trans-unit id="e36327ca2d0b7f027e93c0c6830f31c98a8858f0" translate="yes" xml:space="preserve">
          <source>The client code shown here is slightly more complicated for the MXBean client. But, if the client does in fact know the model, here the interface &lt;code&gt;MemoryPoolMXBean&lt;/code&gt; and the class &lt;code&gt;MemoryUsage&lt;/code&gt;, then it can construct a &lt;em&gt;proxy&lt;/em&gt;. This is the recommended way to interact with managed objects when you know the model beforehand, regardless of whether you are using Standard MBeans or MXBeans:</source>
          <target state="translated">ここに示されているクライアントコードは、MXBeanクライアントでは少し複雑です。ただし、クライアントが実際にモデルを知っている場合（ここではインターフェース &lt;code&gt;MemoryPoolMXBean&lt;/code&gt; およびクラス &lt;code&gt;MemoryUsage&lt;/code&gt; )、クライアントは&lt;em&gt;プロキシ&lt;/em&gt;を構築できます。これは、Standard MBeanとMXBeanのどちらを使用しているかに関係なく、モデルが事前にわかっている場合に管理対象オブジェクトと対話するための推奨される方法です。</target>
        </trans-unit>
        <trans-unit id="c82a5d98728343602350f3acf815500ea1c5ee2c" translate="yes" xml:space="preserve">
          <source>The client end of a JMX API connector.</source>
          <target state="translated">JMX APIコネクタのクライアントエンド。</target>
        </trans-unit>
        <trans-unit id="b4488646dd7bc568328ca00d7c96cdc5b511b54e" translate="yes" xml:space="preserve">
          <source>The client end of a JMX API connector. An object of this type can be used to establish a connection to a connector server.</source>
          <target state="translated">JMX API コネクタのクライアント側。このタイプのオブジェクトは、コネクタサーバへの接続を確立するために使用できます。</target>
        </trans-unit>
        <trans-unit id="e056ca88cf2a5987bb9340e8778e9152047e0db4" translate="yes" xml:space="preserve">
          <source>The client info property could not be set for some unknown reason</source>
          <target state="translated">何らかの理由でクライアント情報プロパティを設定できませんでした。</target>
        </trans-unit>
        <trans-unit id="4af7f3abc38c45da431d9cf62afd2acdb99a1a23" translate="yes" xml:space="preserve">
          <source>The client info property name specified was not a recognized property name.</source>
          <target state="translated">指定されたクライアント情報プロパティ名は、認識されたプロパティ名ではありませんでした。</target>
        </trans-unit>
        <trans-unit id="f6d8cb5abcc9dba2b35caaa1100aa8007bd4f05d" translate="yes" xml:space="preserve">
          <source>The client must itself perform all plain text print data formatting not addressed by the above requirements.</source>
          <target state="translated">クライアントは、上記の要件に対応していないすべてのプレーンテキスト印刷データの書式設定を自分自身で行わなければならない。</target>
        </trans-unit>
        <trans-unit id="61622044c23d1dc5bf6a5c87f1e0670101adac2f" translate="yes" xml:space="preserve">
          <source>The clock implementation provided here is based on &lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;. That method provides little to no guarantee about the accuracy of the clock. Applications requiring a more accurate clock must implement this abstract class themselves using a different external clock, such as an NTP server.</source>
          <target state="translated">ここで提供されるクロックの実装は、&lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; に&lt;/a&gt;基づいています。この方法では、クロックの精度についてほとんどまたはまったく保証されません。より正確なクロックを必要とするアプリケーションは、NTPサーバーなどの異なる外部クロックを使用して、この抽象クラス自体を実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="60f70e9c0e75c2b841ccf57e9e8a8750236f14b8" translate="yes" xml:space="preserve">
          <source>The clock implementation provided here is based on the same underlying clock as &lt;a href=&quot;../lang/system#currentTimeMillis()&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;, but may have a precision finer than milliseconds if available. However, little to no guarantee is provided about the accuracy of the underlying clock. Applications requiring a more accurate clock must implement this abstract class themselves using a different external clock, such as an NTP server.</source>
          <target state="translated">ここで提供されるクロックの実装は、&lt;a href=&quot;../lang/system#currentTimeMillis()&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt;と同じ基本クロックに基づいていますが、使用可能な場合はミリ秒よりも精度が高い場合があります。ただし、基になるクロックの精度についてはほとんど、またはまったく保証されていません。より正確なクロックを必要とするアプリケーションは、NTPサーバーなどの別の外部クロックを使用して、この抽象クラス自体を実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="25e6815aa00a334e2bd9ee8bdf69f008eb1d1606" translate="yes" xml:space="preserve">
          <source>The clock sequence of this &lt;code&gt;UUID&lt;/code&gt;</source>
          <target state="translated">この &lt;code&gt;UUID&lt;/code&gt; のクロックシーケンス</target>
        </trans-unit>
        <trans-unit id="4927698d61ddc5d19e93d88deb9e42d15dbacd87" translate="yes" xml:space="preserve">
          <source>The clock sequence value associated with this UUID.</source>
          <target state="translated">このUUIDに関連付けられたクロックシーケンス値。</target>
        </trans-unit>
        <trans-unit id="5d1b1f6ea1a364b40310f013d2e4ede7c72b865f" translate="yes" xml:space="preserve">
          <source>The clock-hour-of-am-pm.</source>
          <target state="translated">時計の時間帯の午前午後。</target>
        </trans-unit>
        <trans-unit id="d9d6945b9a1ccb1b98abde4cb5b49e528dae6fda" translate="yes" xml:space="preserve">
          <source>The clock-hour-of-day.</source>
          <target state="translated">時計の時間帯のこと。</target>
        </trans-unit>
        <trans-unit id="f99a4a21e3cbbe9ed012eae5ee38148685f4c0a2" translate="yes" xml:space="preserve">
          <source>The clone method of &lt;code&gt;ParameterBlock&lt;/code&gt; has been defined to perform a clone of both the source and parameter Vectors for this reason. A standard, shallow clone is available as shallowClone.</source>
          <target state="translated">このため、 &lt;code&gt;ParameterBlock&lt;/code&gt; のcloneメソッドは、ソースベクトルとパラメーターベクトルの両方のクローンを実行するように定義されています。標準の浅いクローンはshallowCloneとして利用できます。</target>
        </trans-unit>
        <trans-unit id="d29ef91f5598635f832c0c367c1938a13aaa5119" translate="yes" xml:space="preserve">
          <source>The close button text property.</source>
          <target state="translated">閉じるボタンのテキストプロパティです。</target>
        </trans-unit>
        <trans-unit id="6d57647df9ab28bd7a91edbfabcfa0167bacdd81" translate="yes" xml:space="preserve">
          <source>The close button.</source>
          <target state="translated">閉じるボタンです。</target>
        </trans-unit>
        <trans-unit id="d2af3b0194ee94870d3a705f6f087b87ffb73e03" translate="yes" xml:space="preserve">
          <source>The close icon.</source>
          <target state="translated">閉じるアイコンです。</target>
        </trans-unit>
        <trans-unit id="67da0df2a20add6c7e78cab2dd3884834bc5386c" translate="yes" xml:space="preserve">
          <source>The close method will perform a &lt;code&gt;flush&lt;/code&gt; and then close the &lt;code&gt;Handler&lt;/code&gt;. After close has been called this &lt;code&gt;Handler&lt;/code&gt; should no longer be used. Method calls may either be silently ignored or may throw runtime exceptions.</source>
          <target state="translated">closeメソッドは、 &lt;code&gt;flush&lt;/code&gt; を実行してから &lt;code&gt;Handler&lt;/code&gt; を閉じます。closeが呼び出された後、この &lt;code&gt;Handler&lt;/code&gt; は使用されなくなります。メソッド呼び出しは、警告なしに無視されるか、実行時例外をスローする場合があります。</target>
        </trans-unit>
        <trans-unit id="a278df20a4194f01149ab1f3b134649f546b181a" translate="yes" xml:space="preserve">
          <source>The closing of a &lt;code&gt;ResultSet&lt;/code&gt; object does &lt;strong&gt;not&lt;/strong&gt; close the &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;Clob&lt;/code&gt; or &lt;code&gt;NClob&lt;/code&gt; objects created by the &lt;code&gt;ResultSet&lt;/code&gt;. &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;Clob&lt;/code&gt; or &lt;code&gt;NClob&lt;/code&gt; objects remain valid for at least the duration of the transaction in which they are created, unless their &lt;code&gt;free&lt;/code&gt; method is invoked.</source>
          <target state="translated">閉鎖 &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトがい&lt;strong&gt;ない&lt;/strong&gt;近く &lt;code&gt;Blob&lt;/code&gt; 、 &lt;code&gt;Clob&lt;/code&gt; オブジェクトまたは &lt;code&gt;NClob&lt;/code&gt; によって作成されたオブジェクト &lt;code&gt;ResultSet&lt;/code&gt; 。 &lt;code&gt;Blob&lt;/code&gt; 、 &lt;code&gt;Clob&lt;/code&gt; 、または &lt;code&gt;NClob&lt;/code&gt; オブジェクトは、 &lt;code&gt;free&lt;/code&gt; メソッドが呼び出されない限り、少なくともそれらが作成されたトランザクションの期間中は有効です。</target>
        </trans-unit>
        <trans-unit id="18c7e6c960afbbeecf9e874b2c23ef37988a06f8" translate="yes" xml:space="preserve">
          <source>The closure type for an arc closed by drawing a straight line segment from the start of the arc segment to the end of the arc segment.</source>
          <target state="translated">円弧セグメントの始点から終点までの直線セグメントを描いて閉じた円弧の閉鎖型。</target>
        </trans-unit>
        <trans-unit id="4c39613051bf7d0c4295a311b805c0c3ccbc1f93" translate="yes" xml:space="preserve">
          <source>The closure type for an arc closed by drawing straight line segments from the start of the arc segment to the center of the full ellipse and from that point to the end of the arc segment.</source>
          <target state="translated">円弧セグメントの始点から全楕円の中心まで直線セグメントを描き、その点から円弧セグメントの終点まで直線セグメントを描くことで閉じた円弧の閉鎖型です。</target>
        </trans-unit>
        <trans-unit id="a03faa6189392649c5e4b049d8285ee21de43d50" translate="yes" xml:space="preserve">
          <source>The closure type for an open arc with no path segments connecting the two ends of the arc segment.</source>
          <target state="translated">開いた円弧の両端を結ぶパスセグメントがない場合の閉塞タイプ。</target>
        </trans-unit>
        <trans-unit id="4fd1533908a49f3a3287d84ea06d505a13b12494" translate="yes" xml:space="preserve">
          <source>The code above would remain correct even if the &lt;code&gt;onSpinWait&lt;/code&gt; method was not called at all. However on some architectures the Java Virtual Machine may issue the processor instructions to address such code patterns in a more beneficial way.</source>
          <target state="translated">&lt;code&gt;onSpinWait&lt;/code&gt; メソッドがまったく呼び出されなかった場合でも、上記のコードは正しいままです。ただし、一部のアーキテクチャでは、Java仮想マシンがプロセッサ命令を発行して、このようなコードパターンにさらに有益な方法で対処する場合があります。</target>
        </trans-unit>
        <trans-unit id="b1433e4121635551dd14010c6b704bba7b5e5e75" translate="yes" xml:space="preserve">
          <source>The code base URL.</source>
          <target state="translated">コードベースのURLです。</target>
        </trans-unit>
        <trans-unit id="d704a02142327979b6f7a982175f4ea4d53045b2" translate="yes" xml:space="preserve">
          <source>The code for this applet is as follows:</source>
          <target state="translated">このアプレットのコードは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="56ce6ef2114da8b3480773fc41a5bba91e0be358" translate="yes" xml:space="preserve">
          <source>The code fragment should be context free and must be a legal Java expression as specified by the JLS.</source>
          <target state="translated">コードフラグメントはコンテキストフリーであるべきであり、JLS で指定された合法的な Java 式でなければなりません。</target>
        </trans-unit>
        <trans-unit id="7551fda94d924a51c214eacfb5d20ee1569ef738" translate="yes" xml:space="preserve">
          <source>The code sample in &lt;a href=&quot;pagedresultscontrol&quot;&gt;&lt;code&gt;PagedResultsControl&lt;/code&gt;&lt;/a&gt; shows how this class may be used.</source>
          <target state="translated">&lt;a href=&quot;pagedresultscontrol&quot;&gt; &lt;code&gt;PagedResultsControl&lt;/code&gt; &lt;/a&gt;のコードサンプルは、このクラスの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="2d9000efa3a911a92cbde4578c40faa3825deb27" translate="yes" xml:space="preserve">
          <source>The code sample in &lt;a href=&quot;sortcontrol&quot;&gt;&lt;code&gt;SortControl&lt;/code&gt;&lt;/a&gt; shows how this class may be used.</source>
          <target state="translated">&lt;a href=&quot;sortcontrol&quot;&gt; &lt;code&gt;SortControl&lt;/code&gt; &lt;/a&gt;のコードサンプルは、このクラスの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="71f14a2b64370084990ba267c7b13cea9da68ef3" translate="yes" xml:space="preserve">
          <source>The collapsed icon.</source>
          <target state="translated">潰れたアイコン。</target>
        </trans-unit>
        <trans-unit id="30d83691e8c4e45b8fe52bdd6fd725a184c8ca07" translate="yes" xml:space="preserve">
          <source>The collation table is composed of a list of collation rules, where each rule is of one of three forms:</source>
          <target state="translated">照合テーブルは、照合規則のリストから構成され、各規則は3つの形態のうちの1つである。</target>
        </trans-unit>
        <trans-unit id="7c1827d597c9c77ae6e1e11339356cf0f6e7e02e" translate="yes" xml:space="preserve">
          <source>The collection is backed by the map, so changes to the map are reflected in the collection, and vice-versa. If the map is modified while an iteration over the collection is in progress (except through the iterator's own &lt;code&gt;remove&lt;/code&gt; operation), the results of the iteration are undefined. The collection supports element removal, which removes the corresponding mapping from the map, via the &lt;code&gt;Iterator.remove&lt;/code&gt;, &lt;code&gt;Collection.remove&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt; and &lt;code&gt;clear&lt;/code&gt; operations. It does not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;addAll&lt;/code&gt; operations.</source>
          <target state="translated">コレクションはマップに基づいているため、マップへの変更はコレクションに反映され、その逆も同様です。コレクションの反復処理の進行中にマップが変更された場合（イテレータ自体の &lt;code&gt;remove&lt;/code&gt; 操作を除く）、反復の結果は定義されていません。コレクションは、 &lt;code&gt;Iterator.remove&lt;/code&gt; 、 &lt;code&gt;Collection.remove&lt;/code&gt; 、 &lt;code&gt;removeAll&lt;/code&gt; 、 &lt;code&gt;retainAll&lt;/code&gt; 、および &lt;code&gt;clear&lt;/code&gt; オペレーションを介して、対応するマッピングをマップから削除する要素の削除をサポートしています。 &lt;code&gt;add&lt;/code&gt; または &lt;code&gt;addAll&lt;/code&gt; 操作はサポートしていません。</target>
        </trans-unit>
        <trans-unit id="08a9f493e12bc421d71667070210c7e0b80be588" translate="yes" xml:space="preserve">
          <source>The collection is backed by the map, so changes to the map are reflected in the collection, and vice-versa. The collection supports element removal, which removes the corresponding mapping from the map, via the &lt;code&gt;Iterator.remove&lt;/code&gt;, &lt;code&gt;Collection.remove&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt; and &lt;code&gt;clear&lt;/code&gt; operations. It does not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;addAll&lt;/code&gt; operations.</source>
          <target state="translated">コレクションはマップに基づいているため、マップへの変更はコレクションに反映され、その逆も同様です。コレクションは、要素の削除をサポートします。これは、 &lt;code&gt;Iterator.remove&lt;/code&gt; 、 &lt;code&gt;Collection.remove&lt;/code&gt; 、 &lt;code&gt;removeAll&lt;/code&gt; 、 &lt;code&gt;retainAll&lt;/code&gt; 、および &lt;code&gt;clear&lt;/code&gt; オペレーションを介して、対応するマッピングをマップから削除します。 &lt;code&gt;add&lt;/code&gt; または &lt;code&gt;addAll&lt;/code&gt; 操作はサポートしていません。</target>
        </trans-unit>
        <trans-unit id="0ae6cac46e4d7c9b4fdc7934d10d1e2d1a73c597" translate="yes" xml:space="preserve">
          <source>The collection is created the first time this method is called, and returned in response to all subsequent calls. No synchronization is performed, so there is a slight chance that multiple calls to this method will not all return the same collection.</source>
          <target state="translated">コレクションは、このメソッドが最初に呼び出されたときに作成され、その後のすべての呼び出しに応答して返されます。同期は行われないので、このメソッドを複数回呼び出してもすべて同じコレクションが返されない可能性がわずかにあります。</target>
        </trans-unit>
        <trans-unit id="f191f447c47d7dfe057061f96c5ef872bcbd1f83" translate="yes" xml:space="preserve">
          <source>The collection of &lt;code&gt;UndoableEdit&lt;/code&gt;s undone/redone en masse by this &lt;code&gt;CompoundEdit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;UndoableEdit&lt;/code&gt; のコレクションは、この &lt;code&gt;CompoundEdit&lt;/code&gt; によってまとめて元に戻され/やり直されます。</target>
        </trans-unit>
        <trans-unit id="346407db4e0cffd7947837447d691abd899e03aa" translate="yes" xml:space="preserve">
          <source>The collection of registered listeners</source>
          <target state="translated">登録されたリスナーのコレクション</target>
        </trans-unit>
        <trans-unit id="c5c3e34cded6e5734738b1e1b8b06c8233974e12" translate="yes" xml:space="preserve">
          <source>The collection should not be modified (see &lt;a href=&quot;#add(java.security.Permission)&quot;&gt;&lt;code&gt;add(java.security.Permission)&lt;/code&gt;&lt;/a&gt;) during the execution of the terminal stream operation. Otherwise, the result of the terminal stream operation is undefined.</source>
          <target state="translated">ターミナルストリーム操作の実行中にコレクションを変更しないでください（&lt;a href=&quot;#add(java.security.Permission)&quot;&gt; &lt;code&gt;add(java.security.Permission)&lt;/code&gt; を&lt;/a&gt;参照）。それ以外の場合、ターミナルストリーム操作の結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="8bf124bacc13ad53500c93100391bd683fd0dda8" translate="yes" xml:space="preserve">
          <source>The collection usage threshold crossing checking is enabled in this memory pool if the threshold is set to a positive value. The collection usage threshold crossing checking is disabled if it is set to zero.</source>
          <target state="translated">このメモリプールでは、閾値が正の値に設定されている場合、コレクション使用閾値の交差チェックが有効になります。コレクション使用閾値の交差チェックは、ゼロに設定されている場合は無効になります。</target>
        </trans-unit>
        <trans-unit id="9156660a2ac7aa98ef313cabffe7060e8aa35409" translate="yes" xml:space="preserve">
          <source>The collection usage threshold is designed for monitoring the memory usage after the Java virtual machine has expended effort in reclaiming memory space. The collection usage could also be monitored by the polling and threshold notification mechanism described above for the &lt;a href=&quot;#UsageThreshold&quot;&gt;usage threshold&lt;/a&gt; in a similar fashion.</source>
          <target state="translated">コレクション使用量しきい値は、Java仮想マシンがメモリ領域の再利用に労力を費やした後のメモリ使用量を監視するために設計されています。コレクションの使用状況も、同様の方法で、&lt;a href=&quot;#UsageThreshold&quot;&gt;使用状況のしきい値&lt;/a&gt;について上記のポーリングおよびしきい値通知メカニズムによって監視できます。</target>
        </trans-unit>
        <trans-unit id="0e2883e94761fa22e846a8f32267f5142a06c8d2" translate="yes" xml:space="preserve">
          <source>The collection's iterator returns the values in ascending order of the corresponding keys. The collection's spliterator is &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;fail-fast&lt;/em&gt;, and additionally reports &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt; with an encounter order that is ascending order of the corresponding keys.</source>
          <target state="translated">コレクションの反復子は、対応するキーの昇順で値を返します。コレクションのスプリッターは&lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;遅延バインディング&lt;/a&gt;&lt;/em&gt;、&lt;em&gt;フェイルファスト&lt;/em&gt;であり、さらに対応するキーの昇順であるエンカウンター順で&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;を報告します。</target>
        </trans-unit>
        <trans-unit id="ea1bd030966840638731efedafac9a0ec7782728" translate="yes" xml:space="preserve">
          <source>The collection's iterator returns the values in ascending order of the corresponding keys. The collections's spliterator additionally reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, with an encounter order that is ascending order of the corresponding keys.</source>
          <target state="translated">コレクションの反復子は、対応するキーの昇順で値を返します。コレクションのspliteratorはさらに報告&lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; を&lt;/a&gt;対応するキーの昇順ている出会いのために、。</target>
        </trans-unit>
        <trans-unit id="e274436db22ea8e689c8f92c1a625157a2ad4161" translate="yes" xml:space="preserve">
          <source>The collector has the &lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt;&lt;code&gt;Collector.Characteristics.CONCURRENT&lt;/code&gt;&lt;/a&gt; characteristic, and;</source>
          <target state="translated">コレクターには&lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt; &lt;code&gt;Collector.Characteristics.CONCURRENT&lt;/code&gt; &lt;/a&gt;特性があり、</target>
        </trans-unit>
        <trans-unit id="91ec48482e2398b213123b4670de324887cddaf6" translate="yes" xml:space="preserve">
          <source>The colon character &lt;code&gt;':'&lt;/code&gt; (&lt;code&gt;'\u003a'&lt;/code&gt;, &lt;small&gt;COLON&lt;/small&gt;), and</source>
          <target state="translated">コロン文字 &lt;code&gt;':'&lt;/code&gt; （ &lt;code&gt;'\u003a'&lt;/code&gt; 、&lt;small&gt;COLON&lt;/small&gt;）、および</target>
        </trans-unit>
        <trans-unit id="9fd1379c9afe56acbb2fb69be0fad0a683d98a4f" translate="yes" xml:space="preserve">
          <source>The colon separator need not be present if the request headers list is empty. No white-space is permitted in the actions string. The action strings supplied to the URLPermission constructors are case-insensitive and are normalized by converting method names to upper-case and header names to the form defines in RFC2616 (lower case with initial letter of each word capitalized). Either list can contain a wild-card '*' character which signifies all request methods or headers respectively.</source>
          <target state="translated">リクエストヘッダリストが空の場合、コロン区切り文字は必要ありません。アクション文字列には空白は許されません。URLPermission コンストラクタに渡されるアクション文字列は大文字小文字を区別せず、 メソッド名を大文字に、ヘッダ名を RFC2616 で定義されている形式に変換することで正規化されます (小文字で各単語の頭文字を大文字にしたもの)。いずれのリストにも、ワイルドカードの '*' 文字を含めることができます。これはそれぞれすべてのリクエストメソッドやヘッダを意味します。</target>
        </trans-unit>
        <trans-unit id="68ba72595a28be58ad484f9969b1561a3533d484" translate="yes" xml:space="preserve">
          <source>The color black.</source>
          <target state="translated">色は黒。</target>
        </trans-unit>
        <trans-unit id="9351a475c4876bc4a8139bd04708c9c02d950e4a" translate="yes" xml:space="preserve">
          <source>The color black. In the default sRGB space.</source>
          <target state="translated">色は黒。デフォルトのsRGB空間で。</target>
        </trans-unit>
        <trans-unit id="94d08170b466b38e4ff184e42121bece2d6e5f50" translate="yes" xml:space="preserve">
          <source>The color blue.</source>
          <target state="translated">色はブルー。</target>
        </trans-unit>
        <trans-unit id="e3ca3c9170007b59c5fffaf29b108c837f98c528" translate="yes" xml:space="preserve">
          <source>The color blue. In the default sRGB space.</source>
          <target state="translated">色は青。デフォルトのsRGB空間で。</target>
        </trans-unit>
        <trans-unit id="4687f5ae22be6b4fc7eae766669df876fd9d4220" translate="yes" xml:space="preserve">
          <source>The color cyan.</source>
          <target state="translated">色はシアン。</target>
        </trans-unit>
        <trans-unit id="62cbf8e961f0f6bcb5ef066647827f848eccfa43" translate="yes" xml:space="preserve">
          <source>The color cyan. In the default sRGB space.</source>
          <target state="translated">シアンという色。デフォルトの sRGB 空間で。</target>
        </trans-unit>
        <trans-unit id="62fb1aac2f951bcbbc0d263363f154cedccd14df" translate="yes" xml:space="preserve">
          <source>The color dark gray.</source>
          <target state="translated">色はダークグレー。</target>
        </trans-unit>
        <trans-unit id="4afc1c3a9e95ae885b7c529889ebd65674fecb21" translate="yes" xml:space="preserve">
          <source>The color dark gray. In the default sRGB space.</source>
          <target state="translated">ダークグレーの色。デフォルトの sRGB 空間で。</target>
        </trans-unit>
        <trans-unit id="b652c6399322a315c91091c14b17a0a928605190" translate="yes" xml:space="preserve">
          <source>The color gray.</source>
          <target state="translated">色はグレー。</target>
        </trans-unit>
        <trans-unit id="3b1ee35324073f5340ab18472ef18601f6c1a46c" translate="yes" xml:space="preserve">
          <source>The color gray. In the default sRGB space.</source>
          <target state="translated">グレーの色です。デフォルトの sRGB 空間で。</target>
        </trans-unit>
        <trans-unit id="244815b6ae3c4d80a77a22feed060a5551010f7c" translate="yes" xml:space="preserve">
          <source>The color green.</source>
          <target state="translated">色はグリーン。</target>
        </trans-unit>
        <trans-unit id="b6e57a4c9a15edaf29ab93a2c9c0e191bb5a8294" translate="yes" xml:space="preserve">
          <source>The color green. In the default sRGB space.</source>
          <target state="translated">緑の色です。デフォルトのsRGB空間で。</target>
        </trans-unit>
        <trans-unit id="7ded0b43eed8c2c56789f69d87ecca1126db35c7" translate="yes" xml:space="preserve">
          <source>The color light gray.</source>
          <target state="translated">色はライトグレー。</target>
        </trans-unit>
        <trans-unit id="24fdeb5f31a624ae0805c1404de09e707fa42094" translate="yes" xml:space="preserve">
          <source>The color light gray. In the default sRGB space.</source>
          <target state="translated">色はライトグレー。デフォルトのsRGB空間で。</target>
        </trans-unit>
        <trans-unit id="618d2ce311bed621ad2dc8ae7c1f95741b8a6306" translate="yes" xml:space="preserve">
          <source>The color magenta.</source>
          <target state="translated">色はマゼンタ。</target>
        </trans-unit>
        <trans-unit id="a97e1d5d35f5930a5ebb1fdab89dd1c63d806304" translate="yes" xml:space="preserve">
          <source>The color magenta. In the default sRGB space.</source>
          <target state="translated">マゼンタ色です。デフォルトのsRGB空間で。</target>
        </trans-unit>
        <trans-unit id="c9df8b5810acfa9f70dbf00d5cfbf02dd558f9bc" translate="yes" xml:space="preserve">
          <source>The color of a disabled text.</source>
          <target state="translated">障害者用テキストの色。</target>
        </trans-unit>
        <trans-unit id="dac16cf3dd8b3f34864a59ad6ed136749d58d52c" translate="yes" xml:space="preserve">
          <source>The color of a focused toggle button.</source>
          <target state="translated">フォーカスされたトグルボタンの色。</target>
        </trans-unit>
        <trans-unit id="9bb1c1c85d69cbe420aa8e7c8771ce6003b6f6f2" translate="yes" xml:space="preserve">
          <source>The color of a not selected text.</source>
          <target state="translated">選択されていないテキストの色。</target>
        </trans-unit>
        <trans-unit id="e130dff1a1a77424ef685d3041b4e33df52d20f8" translate="yes" xml:space="preserve">
          <source>The color of a not selected title.</source>
          <target state="translated">選択されていないタイトルの色。</target>
        </trans-unit>
        <trans-unit id="eb6f5f316f2810a23c5bcea9a31cb9d1750f0ab5" translate="yes" xml:space="preserve">
          <source>The color of a selected button.</source>
          <target state="translated">選択されているボタンの色。</target>
        </trans-unit>
        <trans-unit id="2c95c4c54c3003d98cdbba0d81013cced2cfb03b" translate="yes" xml:space="preserve">
          <source>The color of a selected text.</source>
          <target state="translated">選択されたテキストの色。</target>
        </trans-unit>
        <trans-unit id="1b8d522744d37311d86d157e531405a934b8e65c" translate="yes" xml:space="preserve">
          <source>The color of a selected title.</source>
          <target state="translated">選択したタイトルの色。</target>
        </trans-unit>
        <trans-unit id="9d15dece56bff8e66e223bf72d1560e52eb7773e" translate="yes" xml:space="preserve">
          <source>The color of a thumb</source>
          <target state="translated">親指の色</target>
        </trans-unit>
        <trans-unit id="e7351bb9dc833bba5b6675ab65dad66b0b19bfc2" translate="yes" xml:space="preserve">
          <source>The color of dark shadow.</source>
          <target state="translated">暗い影の色。</target>
        </trans-unit>
        <trans-unit id="c0fb24555b2a49c851fcc0e585c3a919800e3918" translate="yes" xml:space="preserve">
          <source>The color of highlight</source>
          <target state="translated">ハイライトの色</target>
        </trans-unit>
        <trans-unit id="b55b17f589c04df6ec55438be252029f40604801" translate="yes" xml:space="preserve">
          <source>The color of highlight.</source>
          <target state="translated">ハイライトの色。</target>
        </trans-unit>
        <trans-unit id="74ab3ae6bd267db764b2db3a7e4e8e8c2da9522e" translate="yes" xml:space="preserve">
          <source>The color of highlighting.</source>
          <target state="translated">ハイライトの色。</target>
        </trans-unit>
        <trans-unit id="61913ca0aef1dcdb076a892e703a07e2f8276fa6" translate="yes" xml:space="preserve">
          <source>The color of light highlight.</source>
          <target state="translated">光のハイライトの色。</target>
        </trans-unit>
        <trans-unit id="cce3119ec861405d3f9b3b9c4b6fe2db50169799" translate="yes" xml:space="preserve">
          <source>The color of shadow</source>
          <target state="translated">影の色</target>
        </trans-unit>
        <trans-unit id="70fc9e4b387e4c6e3e5a9255f1fe68fdb908fccb" translate="yes" xml:space="preserve">
          <source>The color of shadow.</source>
          <target state="translated">影の色。</target>
        </trans-unit>
        <trans-unit id="07a9a00c25b33779e039088100991c3d7b931629" translate="yes" xml:space="preserve">
          <source>The color of tab's background.</source>
          <target state="translated">タブの背景色。</target>
        </trans-unit>
        <trans-unit id="2797099178306e56b9ccc7212af5a27a3dd06ea8" translate="yes" xml:space="preserve">
          <source>The color of the &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; の色。</target>
        </trans-unit>
        <trans-unit id="89be517ecf62e9c4d68959a954d7534a16f5855e" translate="yes" xml:space="preserve">
          <source>The color of the accelerator foreground.</source>
          <target state="translated">アクセルの前景の色。</target>
        </trans-unit>
        <trans-unit id="d0168136a09f5e47a94cee2eabfa5be87d797f7c" translate="yes" xml:space="preserve">
          <source>The color of the accelerator selection.</source>
          <target state="translated">アクセル選択の色です。</target>
        </trans-unit>
        <trans-unit id="0c48146b84e4f4a08bab2c8533faa0de8e3dea35" translate="yes" xml:space="preserve">
          <source>The color of the disabled color.</source>
          <target state="translated">無効化された色です。</target>
        </trans-unit>
        <trans-unit id="cc6c22d1a991d3cd1b320708e2be87563899301e" translate="yes" xml:space="preserve">
          <source>The color of the disabled foreground.</source>
          <target state="translated">無効化された前景の色。</target>
        </trans-unit>
        <trans-unit id="06f674d86c2b3b574a64a974a97059572ca503bb" translate="yes" xml:space="preserve">
          <source>The color of the docking border.</source>
          <target state="translated">ドッキングボーダーの色。</target>
        </trans-unit>
        <trans-unit id="e500ae03acce7f2e5f867c075c681876ecdfc2f2" translate="yes" xml:space="preserve">
          <source>The color of the focused button.</source>
          <target state="translated">フォーカスされたボタンの色。</target>
        </trans-unit>
        <trans-unit id="5f511100678adb7fe8e176564acb1d95848544b1" translate="yes" xml:space="preserve">
          <source>The color of the focused radio button.</source>
          <target state="translated">フォーカスされたラジオボタンの色。</target>
        </trans-unit>
        <trans-unit id="93a938386695418b44a9dd31464af9b1ea2207b9" translate="yes" xml:space="preserve">
          <source>The color of the grid.</source>
          <target state="translated">グリッドの色。</target>
        </trans-unit>
        <trans-unit id="dca51a4fa17a87781e904454f544f2faa6778134" translate="yes" xml:space="preserve">
          <source>The color of the highlight.</source>
          <target state="translated">ハイライトの色です。</target>
        </trans-unit>
        <trans-unit id="86cd7e9871235defb143bd365e646839074b4b82" translate="yes" xml:space="preserve">
          <source>The color of the highlighting.</source>
          <target state="translated">ハイライトの色です。</target>
        </trans-unit>
        <trans-unit id="68dfa593a45554e1f57b83045528737bfae8df91" translate="yes" xml:space="preserve">
          <source>The color of the not docking border.</source>
          <target state="translated">ドッキングしないボーダーの色。</target>
        </trans-unit>
        <trans-unit id="eaa79c38506780c2c880a597ad9a4c5dab7274d0" translate="yes" xml:space="preserve">
          <source>The color of the selected button.</source>
          <target state="translated">選択されているボタンの色です。</target>
        </trans-unit>
        <trans-unit id="c7aadb72c536d5d9b0fd80d6def297652c894e22" translate="yes" xml:space="preserve">
          <source>The color of the selected pane.</source>
          <target state="translated">選択されたペインの色。</target>
        </trans-unit>
        <trans-unit id="d81f3abb63de1aeb0f2f584658c56d291027b7f8" translate="yes" xml:space="preserve">
          <source>The color of the selected radio button.</source>
          <target state="translated">選択されているラジオボタンの色。</target>
        </trans-unit>
        <trans-unit id="a1e72920ae27745e8cb629c80b7a825f51bf90eb" translate="yes" xml:space="preserve">
          <source>The color of the selection background.</source>
          <target state="translated">選択範囲の背景色。</target>
        </trans-unit>
        <trans-unit id="d26fb6269c3652a691572f829a4a4ce93b7f6164" translate="yes" xml:space="preserve">
          <source>The color of the selection foreground.</source>
          <target state="translated">選択範囲の前景の色。</target>
        </trans-unit>
        <trans-unit id="9e53e8d06b966cfcfb27cde9767af94501e73a00" translate="yes" xml:space="preserve">
          <source>The color of the shadow.</source>
          <target state="translated">影の色。</target>
        </trans-unit>
        <trans-unit id="8cc2421dc7c0fcc193ceb4e34e0cd757a8fe8514" translate="yes" xml:space="preserve">
          <source>The color of the title.</source>
          <target state="translated">タイトルの色。</target>
        </trans-unit>
        <trans-unit id="5df2c133cc4ba4e246550aad08ec190c9913234b" translate="yes" xml:space="preserve">
          <source>The color orange.</source>
          <target state="translated">色はオレンジ色。</target>
        </trans-unit>
        <trans-unit id="4667f9a9b9261452b63e3aa4ae8a2b2a7a6a5c96" translate="yes" xml:space="preserve">
          <source>The color orange. In the default sRGB space.</source>
          <target state="translated">オレンジ色です。デフォルトのsRGB空間で。</target>
        </trans-unit>
        <trans-unit id="8a6bff0b3dfd1453a6812a74d3056ba8d8230a0f" translate="yes" xml:space="preserve">
          <source>The color pink.</source>
          <target state="translated">色はピンク。</target>
        </trans-unit>
        <trans-unit id="ef56f15c7590160ad4b7169e0205fdc4eaeba7ba" translate="yes" xml:space="preserve">
          <source>The color pink. In the default sRGB space.</source>
          <target state="translated">ピンク色です。デフォルトのsRGB空間で。</target>
        </trans-unit>
        <trans-unit id="7e17f139ecfe650f733673528029a01dc810cf2b" translate="yes" xml:space="preserve">
          <source>The color red.</source>
          <target state="translated">色は赤。</target>
        </trans-unit>
        <trans-unit id="1db1f131057a2cc99275fff3c62087a86d3d0e1d" translate="yes" xml:space="preserve">
          <source>The color red. In the default sRGB space.</source>
          <target state="translated">色は赤。デフォルトのsRGB空間で。</target>
        </trans-unit>
        <trans-unit id="73dc6c175e96343aeac36f3c1ba689f45f21d4c0" translate="yes" xml:space="preserve">
          <source>The color rendered for dark shadow areas on 3D control objects, such as pushbuttons.</source>
          <target state="translated">押しボタンなどの3Dコントロールオブジェクトの暗い影の部分にレンダリングされる色。</target>
        </trans-unit>
        <trans-unit id="470a67d1a353f89ccc801b2bbbce110851397128" translate="yes" xml:space="preserve">
          <source>The color rendered for dark shadow areas on 3D control objects, such as pushbuttons. This color is typically derived from the &lt;code&gt;control&lt;/code&gt; background color to provide a 3D effect.</source>
          <target state="translated">プッシュボタンなどの3Dコントロールオブジェクトの暗い影の領域にレンダリングされる色。この色は通常、3D効果を提供するために &lt;code&gt;control&lt;/code&gt; 背景色から派生します。</target>
        </trans-unit>
        <trans-unit id="f6b1d595a7532e8d56127a76db05b3d8aac9ac54" translate="yes" xml:space="preserve">
          <source>The color rendered for highlight areas of 3D control objects, such as pushbuttons.</source>
          <target state="translated">押しボタンなどの3Dコントロールオブジェクトのハイライト部分にレンダリングされた色。</target>
        </trans-unit>
        <trans-unit id="907c2eceaaf260a7f594c2030d51e1e5893151dd" translate="yes" xml:space="preserve">
          <source>The color rendered for highlight areas of 3D control objects, such as pushbuttons. This color is typically derived from the &lt;code&gt;control&lt;/code&gt; background color to provide a 3D effect.</source>
          <target state="translated">プッシュボタンなどの3Dコントロールオブジェクトのハイライト領域にレンダリングされる色。この色は通常、3D効果を提供するために &lt;code&gt;control&lt;/code&gt; 背景色から派生します。</target>
        </trans-unit>
        <trans-unit id="46258c1bb708e0b97d3387f84e326825aae32a3f" translate="yes" xml:space="preserve">
          <source>The color rendered for light areas of 3D control objects, such as pushbuttons.</source>
          <target state="translated">押しボタンなどの3Dコントロールオブジェクトの光の部分の色をレンダリングしています。</target>
        </trans-unit>
        <trans-unit id="2b5fc66e3c159e5025318736304bbbb0938cb701" translate="yes" xml:space="preserve">
          <source>The color rendered for light areas of 3D control objects, such as pushbuttons. This color is typically derived from the &lt;code&gt;control&lt;/code&gt; background color to provide a 3D effect.</source>
          <target state="translated">プッシュボタンなどの3Dコントロールオブジェクトの明るい領域にレンダリングされる色。この色は通常、3D効果を提供するために &lt;code&gt;control&lt;/code&gt; 背景色から派生します。</target>
        </trans-unit>
        <trans-unit id="02e44af3a6d64b651c997de7dc5c40fd5deb610a" translate="yes" xml:space="preserve">
          <source>The color rendered for shadow areas of 3D control objects, such as pushbuttons.</source>
          <target state="translated">押しボタンなどの3Dコントロールオブジェクトの影の部分にレンダリングされた色。</target>
        </trans-unit>
        <trans-unit id="8f8d3fb8cdbca739a5271ee5aa07d4c024931b6a" translate="yes" xml:space="preserve">
          <source>The color rendered for shadow areas of 3D control objects, such as pushbuttons. This color is typically derived from the &lt;code&gt;control&lt;/code&gt; background color to provide a 3D effect.</source>
          <target state="translated">プッシュボタンなどの3Dコントロールオブジェクトのシャドウ領域にレンダリングされる色。この色は通常、3D効果を提供するために &lt;code&gt;control&lt;/code&gt; 背景色から派生します。</target>
        </trans-unit>
        <trans-unit id="12dc2438f875a6d4833a57632f2fe2d98eb81d69" translate="yes" xml:space="preserve">
          <source>The color rendered for text of interior regions inside windows.</source>
          <target state="translated">ウィンドウ内の内部領域のテキストにレンダリングされる色。</target>
        </trans-unit>
        <trans-unit id="fd3b53f20d1337804908f3096e2a8b8a9cd1df78" translate="yes" xml:space="preserve">
          <source>The color rendered for the background of control panels and control objects, such as pushbuttons.</source>
          <target state="translated">コントロールパネルやプッシュボタンなどのコントロールオブジェクトの背景にレンダリングされる色。</target>
        </trans-unit>
        <trans-unit id="4dbb4f735b101125078febd0d4ed06f15fd6c140" translate="yes" xml:space="preserve">
          <source>The color rendered for the background of interior regions inside windows.</source>
          <target state="translated">窓の内側の内部領域の背景にレンダリングされた色。</target>
        </trans-unit>
        <trans-unit id="c9b8ed53190d130e017ba8e2169aba6242d8c8b9" translate="yes" xml:space="preserve">
          <source>The color rendered for the background of menus.</source>
          <target state="translated">メニューの背景にレンダリングされた色。</target>
        </trans-unit>
        <trans-unit id="dca9fd6c09c5551c427b43dc65b34112d3e0b73e" translate="yes" xml:space="preserve">
          <source>The color rendered for the background of scrollbars.</source>
          <target state="translated">スクロールバーの背景にレンダリングされる色。</target>
        </trans-unit>
        <trans-unit id="24ed2f15963e7871e4f2c2ecb3b368352afcd21e" translate="yes" xml:space="preserve">
          <source>The color rendered for the background of selected items, such as in menus, comboboxes, and text.</source>
          <target state="translated">メニュー、コンボボックス、テキストなど、選択されたアイテムの背景にレンダリングされる色。</target>
        </trans-unit>
        <trans-unit id="fc6fa9fc483be06c8030f2157702aaeab540d4bb" translate="yes" xml:space="preserve">
          <source>The color rendered for the background of text control objects, such as textfields and comboboxes.</source>
          <target state="translated">テキストフィールドやコンボボックスなどのテキストコントロールオブジェクトの背景にレンダリングされる色。</target>
        </trans-unit>
        <trans-unit id="0f8c83507adeeaf4cf3fffab874f860bdf5be545" translate="yes" xml:space="preserve">
          <source>The color rendered for the background of the desktop.</source>
          <target state="translated">デスクトップの背景にレンダリングされた色。</target>
        </trans-unit>
        <trans-unit id="96192e517b77d2af5363caf88579f1dd01c9710e" translate="yes" xml:space="preserve">
          <source>The color rendered for the background of tooltips or spot help.</source>
          <target state="translated">ツールチップやスポットヘルプの背景にレンダリングされる色。</target>
        </trans-unit>
        <trans-unit id="f7b8c56bb3e38974d48617687207184ff68cf35b" translate="yes" xml:space="preserve">
          <source>The color rendered for the border around inactive windows.</source>
          <target state="translated">アクティブでないウィンドウの周囲の境界線のためにレンダリングされた色。</target>
        </trans-unit>
        <trans-unit id="5f86e95f5ff4db6f772c51fc548c271d60c83047" translate="yes" xml:space="preserve">
          <source>The color rendered for the border around interior regions inside windows.</source>
          <target state="translated">窓の内側の内部領域の境界線のためにレンダリングされた色。</target>
        </trans-unit>
        <trans-unit id="9f421708674555c1142db905208f7c0fa2c8ba4e" translate="yes" xml:space="preserve">
          <source>The color rendered for the border around the currently active window.</source>
          <target state="translated">現在アクティブなウィンドウの周囲の境界線にレンダリングされる色。</target>
        </trans-unit>
        <trans-unit id="d66f344824886da965c169f2a17acbe683c4f211" translate="yes" xml:space="preserve">
          <source>The color rendered for the border.</source>
          <target state="translated">境界線のためにレンダリングされた色。</target>
        </trans-unit>
        <trans-unit id="b422b0db2c88e4fca50d05f505aa105ff194f90d" translate="yes" xml:space="preserve">
          <source>The color rendered for the text of control panels and control objects, such as pushbuttons.</source>
          <target state="translated">コントロールパネルや押しボタンなどのコントロールオブジェクトのテキストにレンダリングされる色。</target>
        </trans-unit>
        <trans-unit id="104d7225b577be1ea8c3937a81a5f39842403842" translate="yes" xml:space="preserve">
          <source>The color rendered for the text of inactive items, such as in menus.</source>
          <target state="translated">メニューなどの非アクティブな項目のテキストにレンダリングされる色。</target>
        </trans-unit>
        <trans-unit id="ba7e55b358318312c5ae6754525c1245dbd50be2" translate="yes" xml:space="preserve">
          <source>The color rendered for the text of menus.</source>
          <target state="translated">メニューのテキストにレンダリングされた色。</target>
        </trans-unit>
        <trans-unit id="e9f852db88c1376538f6916c80da4b6384bfa762" translate="yes" xml:space="preserve">
          <source>The color rendered for the text of selected items, such as in menus, comboboxes, and text.</source>
          <target state="translated">メニュー、コンボボックス、テキストなど、選択された項目のテキストにレンダリングされる色。</target>
        </trans-unit>
        <trans-unit id="bc776176a896265cb8a273ca25c7814f8e2e9e42" translate="yes" xml:space="preserve">
          <source>The color rendered for the text of text control objects, such as textfields and comboboxes.</source>
          <target state="translated">テキストフィールドやコンボボックスなどのテキストコントロールオブジェクトのテキストにレンダリングされる色。</target>
        </trans-unit>
        <trans-unit id="3e05a00a84289466743383ea0f2aa1a3a0c83b3b" translate="yes" xml:space="preserve">
          <source>The color rendered for the text of tooltips or spot help.</source>
          <target state="translated">ツールチップやスポットヘルプのテキストにレンダリングされる色。</target>
        </trans-unit>
        <trans-unit id="007e5cdd6dffd12010de712b755381079673ec1c" translate="yes" xml:space="preserve">
          <source>The color rendered for the window-title background of inactive windows.</source>
          <target state="translated">アクティブでないウィンドウのウィンドウタイトルの背景にレンダリングされる色。</target>
        </trans-unit>
        <trans-unit id="1b801891828ce688cb4cc8b14d2c8242277053ff" translate="yes" xml:space="preserve">
          <source>The color rendered for the window-title background of the currently active window.</source>
          <target state="translated">現在アクティブなウィンドウのウィンドウタイトルの背景にレンダリングされる色。</target>
        </trans-unit>
        <trans-unit id="08127243343bad81741fd74ba59e624879275a39" translate="yes" xml:space="preserve">
          <source>The color rendered for the window-title text of inactive windows.</source>
          <target state="translated">アクティブでないウィンドウのウィンドウタイトルテキストにレンダリングされる色。</target>
        </trans-unit>
        <trans-unit id="9f1e33c4c1e806122c67931a7f5c7088d006baf6" translate="yes" xml:space="preserve">
          <source>The color rendered for the window-title text of the currently active window.</source>
          <target state="translated">現在アクティブなウィンドウのウィンドウタイトルのテキストにレンダリングされる色。</target>
        </trans-unit>
        <trans-unit id="a3a7bcb5c4910004d209ce12b8781ff77931645b" translate="yes" xml:space="preserve">
          <source>The color space in which to perform the gradient interpolation.</source>
          <target state="translated">グラデーション補間を行う色空間。</target>
        </trans-unit>
        <trans-unit id="cbc0abf4fd430d4226f1fa06c9b1dca5fa506046" translate="yes" xml:space="preserve">
          <source>The color that was obtained from the component or defaultColor</source>
          <target state="translated">コンポーネントまたは defaultColor から取得した色。</target>
        </trans-unit>
        <trans-unit id="71e0739ec1fb0243f8596167e9d23eb416fc7cc3" translate="yes" xml:space="preserve">
          <source>The color to use for the bevel inner highlight.</source>
          <target state="translated">ベベルインナーハイライトに使用する色です。</target>
        </trans-unit>
        <trans-unit id="39c0d5b49c1a23dbedbf004a2cab865bdd5f0c2d" translate="yes" xml:space="preserve">
          <source>The color to use for the bevel inner shadow.</source>
          <target state="translated">ベベルインナーシャドウに使用する色です。</target>
        </trans-unit>
        <trans-unit id="e14f88b840e7d46ca638321ba169d0ac6c697ef2" translate="yes" xml:space="preserve">
          <source>The color to use for the bevel outer highlight.</source>
          <target state="translated">ベベルアウターハイライトに使用する色です。</target>
        </trans-unit>
        <trans-unit id="ec0689a17e07037d8efc19243899a02d1c92c502" translate="yes" xml:space="preserve">
          <source>The color to use for the etched highlight.</source>
          <target state="translated">エッチングされたハイライトに使用する色。</target>
        </trans-unit>
        <trans-unit id="3fcc57eb2f61973e01e9de14f1c14831b2d16f71" translate="yes" xml:space="preserve">
          <source>The color to use for the etched shadow.</source>
          <target state="translated">エッチングされたシャドウに使用する色。</target>
        </trans-unit>
        <trans-unit id="28cbe33d3265b3fe7dcc5600e903ea50781848f5" translate="yes" xml:space="preserve">
          <source>The color white.</source>
          <target state="translated">色は白。</target>
        </trans-unit>
        <trans-unit id="a173cf1ac4bb53c14dc31dc411b0a59f768506be" translate="yes" xml:space="preserve">
          <source>The color white. In the default sRGB space.</source>
          <target state="translated">色は白。デフォルトのsRGB空間で。</target>
        </trans-unit>
        <trans-unit id="1993de3c64baa7899edae484cdec8ade56469407" translate="yes" xml:space="preserve">
          <source>The color yellow.</source>
          <target state="translated">色は黄色。</target>
        </trans-unit>
        <trans-unit id="a04d19a271ffdb434a80776c2e800b2f4bc5cd2a" translate="yes" xml:space="preserve">
          <source>The color yellow. In the default sRGB space.</source>
          <target state="translated">黄色の色です。デフォルトのsRGB空間で。</target>
        </trans-unit>
        <trans-unit id="3dc56f3ed9ae9e2fb93f85527809fc80f9e72639" translate="yes" xml:space="preserve">
          <source>The color/alpha components for the specified pixel, as an int.</source>
          <target state="translated">指定されたピクセルのcolor/alpha成分をintで表します.</target>
        </trans-unit>
        <trans-unit id="3935fe9b5f8b6e65597c15e80f805a38771c1ae3" translate="yes" xml:space="preserve">
          <source>The colorSpace parameter allows the user to specify in which colorspace the interpolation should be performed, default sRGB or linearized RGB.</source>
          <target state="translated">colorSpaceパラメータでは、どの色空間で補間を実行するかを指定できます(デフォルトはsRGBまたは線形化RGB)。</target>
        </trans-unit>
        <trans-unit id="40db39679e9d3b4fa0c8e2c5c408e66cf7c192fb" translate="yes" xml:space="preserve">
          <source>The colors that the renderers for JList and JTable use are specified by way of the list and table Regions. The following XML fragment illustrates how to specify red on white, when selected, and white on red when not selected:</source>
          <target state="translated">JList および JTable 用のレンダラーが使用する色は、リストとテーブルの Regions を使用して指定します。次の XML は、選択されているときは白地に赤、選択されていないときは赤地に白を指定する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="d34589d6edd1ce50973e2a77d9cc51eba722e510" translate="yes" xml:space="preserve">
          <source>The colors used for the highlighting effect are determined based on the current color. The resulting rectangle covers an area that is &lt;code&gt;width&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; pixels wide by &lt;code&gt;height&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; pixels tall.</source>
          <target state="translated">ハイライト効果に使用される色は、現在の色に基づいて決定されます。結果の長方形は、 &lt;code&gt;width&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; ピクセル幅x &lt;code&gt;height&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; ピクセルの領域をカバーします。</target>
        </trans-unit>
        <trans-unit id="a7c61a37de1d16209fac97ae4ee0e2c7f970a5c2" translate="yes" xml:space="preserve">
          <source>The colors used for the highlighting effect are determined based on the current color. The resulting rectangle covers an area that is &lt;code&gt;width&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; pixels wide by &lt;code&gt;height&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; pixels tall. This method uses the current &lt;code&gt;Color&lt;/code&gt; exclusively and ignores the current &lt;code&gt;Paint&lt;/code&gt;.</source>
          <target state="translated">ハイライト効果に使用される色は、現在の色に基づいて決定されます。結果の長方形は、 &lt;code&gt;width&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; ピクセル幅x &lt;code&gt;height&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; ピクセルの領域をカバーします。このメソッドは現在の &lt;code&gt;Color&lt;/code&gt; のみを使用し、現在の &lt;code&gt;Paint&lt;/code&gt; を無視します。</target>
        </trans-unit>
        <trans-unit id="56629a58e5fe5272fa7306a76e51650e0b57f115" translate="yes" xml:space="preserve">
          <source>The column for the event.</source>
          <target state="translated">イベントの欄です。</target>
        </trans-unit>
        <trans-unit id="9474accc7200b4d22482bbeb8e9f64c870b5b415" translate="yes" xml:space="preserve">
          <source>The column header child.</source>
          <target state="translated">列のヘッダーの子。</target>
        </trans-unit>
        <trans-unit id="bc83a77d79aa3eda2dbe6388c9733a0b510fa7e7" translate="yes" xml:space="preserve">
          <source>The column header child. Default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">列ヘッダーの子。デフォルトは &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6d809e6014f6964c67cc50cd480442d58f8706b7" translate="yes" xml:space="preserve">
          <source>The column header, if present and visible, gets its preferred height and the viewport's width.</source>
          <target state="translated">カラムヘッダーが存在し、表示されている場合は、その高さとビューポートの幅が優先されます。</target>
        </trans-unit>
        <trans-unit id="463d672504438607f798baca7856266e00fa0fc4" translate="yes" xml:space="preserve">
          <source>The column number as an integer, or -1 if none is available.</source>
          <target state="translated">カラム番号を整数で指定します。</target>
        </trans-unit>
        <trans-unit id="624f495fa964e3206459763f8c58471630eb5cd8" translate="yes" xml:space="preserve">
          <source>The column number of the end of the text where the exception occurred.</source>
          <target state="translated">例外が発生したテキストの末尾の列番号。</target>
        </trans-unit>
        <trans-unit id="b358f75861d99243c580150b53058a5a38068c2f" translate="yes" xml:space="preserve">
          <source>The column number this locator is pointing to, or &lt;code&gt;-1&lt;/code&gt; if there is no column number available.</source>
          <target state="translated">このロケーターが指している列番号、または使用可能な列番号がない場合は &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e9bc506f5e2d7a1a67fd012b7903fac45c5da3e" translate="yes" xml:space="preserve">
          <source>The column number, or -1 if none is available.</source>
          <target state="translated">カラム番号、または何もない場合は-1。</target>
        </trans-unit>
        <trans-unit id="2e641ea6fe64f0b8a19aa6317da464694488bcba" translate="yes" xml:space="preserve">
          <source>The column number. Returns -1 if a column number is unavailable.</source>
          <target state="translated">列番号。カラム番号が利用できない場合は -1 を返します。</target>
        </trans-unit>
        <trans-unit id="f59b440a5dce5861e4bd83979917698dd94ef608" translate="yes" xml:space="preserve">
          <source>The combination day-of-week and day-of-month (&quot;Friday the 13th&quot;) should not implement this interface. It does not represent a contiguous set of fields, as days to weeks overlaps days to months.</source>
          <target state="translated">曜日と月の組み合わせ(「13日の金曜日」)は、このインタフェースを実装すべきではありません。日から週への日数が日から月への日数と重なるため、フィールドの連続したセットを表すものではありません。</target>
        </trans-unit>
        <trans-unit id="e565904e8f36cdfb0561232e8a61e5fd3a583b87" translate="yes" xml:space="preserve">
          <source>The combination of keystrokes and conditions lets you define high level (semantic) action events for a specified keystroke+modifier combination (using the KeyStroke class) and direct to a parent or child of a component that has the focus, or to the component itself. In other words, in any hierarchical structure of components, an arbitrary key-combination can be immediately directed to the appropriate component in the hierarchy, and cause a specific method to be invoked (usually by way of adapter objects).</source>
          <target state="translated">キーストロークと条件を組み合わせることで、指定したキーストロークと修飾子の組み合わせに対して高レベルの (意味的な)アクションイベントを定義し (KeyStroke クラスを使用して)、フォーカスを持つコンポーネントの親や子、あるいはコンポーネント自体に直接指示することができます。言い換えれば、コンポーネントの任意の階層構造において、任意のキーの組み合わせを即座に階層内の適切なコンポーネントに指示し、特定のメソッドを呼び出すことができます (通常はアダプタオブジェクトを使用します)。</target>
        </trans-unit>
        <trans-unit id="9a95804740becaea21fb0fb96083c1c9566eaf00" translate="yes" xml:space="preserve">
          <source>The combination of the 'before' date-time and offset represents the same instant as the 'after' date-time and offset.</source>
          <target state="translated">before」の日付時間とオフセットの組み合わせは、「after」の日付時間とオフセットの組み合わせと同じ瞬間を表します。</target>
        </trans-unit>
        <trans-unit id="eeb7f12dcdc1b38ae56fe22eab8edc4e52262d56" translate="yes" xml:space="preserve">
          <source>The combine method takes two arguments. The first argument represents an array of ProtectionDomains from the current execution Thread, since the most recent call to &lt;code&gt;AccessController.doPrivileged&lt;/code&gt;. If no call to doPrivileged was made, then the first argument will contain all the ProtectionDomains from the current execution Thread. The second argument represents an array of inherited ProtectionDomains, which may be &lt;code&gt;null&lt;/code&gt;. ProtectionDomains may be inherited from a parent Thread, or from a privileged context. If no call to doPrivileged was made, then the second argument will contain the ProtectionDomains inherited from the parent Thread. If one or more calls to doPrivileged were made, and the most recent call was to doPrivileged(action, context), then the second argument will contain the ProtectionDomains from the privileged context. If the most recent call was to doPrivileged(action), then there is no privileged context, and the second argument will be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Combineメソッドは2つの引数を取ります。最初の引数は、 &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; の最新の呼び出し以降、現在の実行スレッドからのProtectionDomainsの配列を表します。doPrivilegedが呼び出されなかった場合、最初の引数には、現在の実行スレッドからのすべてのProtectionDomainが含まれます。2番目の引数は、 &lt;code&gt;null&lt;/code&gt; の可能性がある継承されたProtectionDomainの配列を表します。ProtectionDomainsは、親スレッドから、または特権付きコンテキストから継承できます。doPrivilegedが呼び出されなかった場合、2番目の引数には、親スレッドから継承されたProtectionDomainが含まれます。doPrivilegedへの1つ以上の呼び出しが行われ、最新の呼び出しがdoPrivileged（action、context）への呼び出しであった場合、2番目の引数には特権コンテキストからのProtectionDomainsが含まれます。最新の呼び出しがdoPrivileged（action）であった場合、特権コンテキストはなく、2番目の引数は &lt;code&gt;null&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="a94254d17a88e72bc6f1dc24f661a80d3329ca92" translate="yes" xml:space="preserve">
          <source>The combined list consisting of iteration variable types followed by the external parameter types is called the &quot;internal parameter list&quot;.</source>
          <target state="translated">外部パラメータ型に続く反復変数型からなる結合リストを「内部パラメータリスト」と呼ぶ。</target>
        </trans-unit>
        <trans-unit id="8f2ff4150d41df826e2c4cc87725174b36d8f91b" translate="yes" xml:space="preserve">
          <source>The combo box is a compound component which means that it is an aggregate of many simpler components. This class creates and manages the listeners on the combo box and the combo box model. These listeners update the user interface in response to changes in the properties and state of the combo box.</source>
          <target state="translated">コンボボックスは複合コンポーネントであり、多くの単純なコンポーネントの集合体であることを意味します。このクラスは、コンボ・ボックスとコンボ・ボックス・モデルのリスナーを作成して管理します。これらのリスナーは、コンボボックスのプロパティや状態の変更に応じてユーザー・インターフェースを更新します。</target>
        </trans-unit>
        <trans-unit id="196a9079c3535248d3b46004d5c735399a406de8" translate="yes" xml:space="preserve">
          <source>The command buffer must contain valid command APDU data starting at &lt;code&gt;command.position()&lt;/code&gt; and the APDU must be &lt;code&gt;command.remaining()&lt;/code&gt; bytes long. Upon return, the command buffer's position will be equal to its limit; its limit will not have changed. The output buffer will have received the response APDU bytes. Its position will have advanced by the number of bytes received, which is also the return value of this method.</source>
          <target state="translated">コマンドバッファには、 &lt;code&gt;command.position()&lt;/code&gt; で始まる有効なコマンドAPDUデータが含まれている必要があり、APDUは &lt;code&gt;command.remaining()&lt;/code&gt; バイト長である必要があります。戻ると、コマンドバッファの位置はその制限に等しくなります。その制限は変更されません。出力バッファは、応答APDUバイトを受信します。その位置は、受信したバイト数だけ進んでいます。これは、このメソッドの戻り値でもあります。</target>
        </trans-unit>
        <trans-unit id="b3f0053f84641db4ff6667d76c084be1f101fb90" translate="yes" xml:space="preserve">
          <source>The command is used by the &lt;code&gt;RowSet&lt;/code&gt; object's reader to obtain a &lt;code&gt;ResultSet&lt;/code&gt; object. The reader then reads the data from the &lt;code&gt;ResultSet&lt;/code&gt; object and uses it to to populate this &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">このコマンドは、 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトのリーダーが &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトを取得するために使用します。次に、リーダーは &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトからデータを読み取り、それを使用してこの &lt;code&gt;RowSet&lt;/code&gt; オブジェクトにデータを入力します。</target>
        </trans-unit>
        <trans-unit id="7a16f5e65d2f83a96835a56079d0447983bf6e15" translate="yes" xml:space="preserve">
          <source>The comment element is a place holder for any comments that the code generator may want to include in the generated code.</source>
          <target state="translated">comment要素は、コード・ジェネレーターが生成されたコードに含めたいコメントのプレース・ホルダーです。</target>
        </trans-unit>
        <trans-unit id="5b433409894f5c34e3b5e4e1f349233ce16b0dc9" translate="yes" xml:space="preserve">
          <source>The comment for the &lt;code&gt;SyncResolver&lt;/code&gt; interface has more detail.</source>
          <target state="translated">&lt;code&gt;SyncResolver&lt;/code&gt; インターフェースのコメントに詳細があります。</target>
        </trans-unit>
        <trans-unit id="f1aa4318100af0e60a66c19ea23c4f6ead396bad" translate="yes" xml:space="preserve">
          <source>The comment to display when the cursor is over the component, also known as a &quot;value tip&quot;, &quot;flyover help&quot;, or &quot;flyover label&quot;.</source>
          <target state="translated">カーソルがコンポーネントの上にあるときに表示されるコメントで、「値のヒント」、「フライオーバーヘルプ」、「フライオーバーラベル」とも呼ばれます。</target>
        </trans-unit>
        <trans-unit id="ec6554f126ed61be6eed4aa31b343d560b310358" translate="yes" xml:space="preserve">
          <source>The commit occurs when the statement completes. The time when the statement completes depends on the type of SQL Statement:</source>
          <target state="translated">コミットはステートメントが完了したときに発生します。文が完了する時間は、SQLステートメントの種類によって異なります。</target>
        </trans-unit>
        <trans-unit id="7cc3e34fc55f9b2b57ce4d53e61e6d6e9418fed9" translate="yes" xml:space="preserve">
          <source>The common definition of a week that starts on Sunday and the first week has a minimum of 1 day.</source>
          <target state="translated">一般的な定義としては、日曜日から始まる週で、最初の週は最低でも1日はあるということです。</target>
        </trans-unit>
        <trans-unit id="54934fd2df13abeb43116e909517bf162f57134b" translate="yes" xml:space="preserve">
          <source>The common interface extended by all annotation types.</source>
          <target state="translated">すべてのアノテーション・タイプによって拡張された共通のインターフェイス。</target>
        </trans-unit>
        <trans-unit id="1314aec14eff7f99258639556043ab2235382bb2" translate="yes" xml:space="preserve">
          <source>The common interface extended by all annotation types. Note that an interface that manually extends this one does</source>
          <target state="translated">すべてのアノテーション・タイプによって拡張された共通のインターフェイス。このインターフェイスを手動で拡張したインターフェイスは</target>
        </trans-unit>
        <trans-unit id="be8eec3709c1b7ba220252bd3ee06454fbc63cce" translate="yes" xml:space="preserve">
          <source>The common pool is by default constructed with default parameters, but these may be controlled by setting three &lt;a href=&quot;../../lang/system#getProperty-java.lang.String-&quot;&gt;system properties&lt;/a&gt;:</source>
          <target state="translated">共通プールはデフォルトでデフォルトのパラメーターで構築されますが、これらは3つの&lt;a href=&quot;../../lang/system#getProperty-java.lang.String-&quot;&gt;システムプロパティを&lt;/a&gt;設定することで制御できます。</target>
        </trans-unit>
        <trans-unit id="c18e1e314bdb3585227ef54e7b57e96bd4334b85" translate="yes" xml:space="preserve">
          <source>The commonly accepted way of representing a &lt;code&gt;QName&lt;/code&gt; as a &lt;code&gt;String&lt;/code&gt; was &lt;a href=&quot;http://jclark.com/xml/xmlns.htm&quot;&gt;defined&lt;/a&gt; by James Clark. Although this is not a &lt;em&gt;standard&lt;/em&gt; specification, it is in common use, e.g. &lt;a href=&quot;../transform/transformer#setParameter(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;Transformer.setParameter(String name, Object value)&lt;/code&gt;&lt;/a&gt;. This implementation parses a &lt;code&gt;String&lt;/code&gt; formatted as: &quot;{&quot; + Namespace URI + &quot;}&quot; + local part. If the Namespace URI &lt;code&gt;.equals(XMLConstants.NULL_NS_URI)&lt;/code&gt;, only the local part should be provided.</source>
          <target state="translated">表現の一般的に受け入れられている方法 &lt;code&gt;QName&lt;/code&gt; として &lt;code&gt;String&lt;/code&gt; して&lt;a href=&quot;http://jclark.com/xml/xmlns.htm&quot;&gt;定義された&lt;/a&gt;ジェームズ・クラークによる。これは&lt;em&gt;標準&lt;/em&gt;仕様ではありませんが、一般的に使用されています（例：&lt;a href=&quot;../transform/transformer#setParameter(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;Transformer.setParameter(String name, Object value)&lt;/code&gt; &lt;/a&gt;。この実装は、&quot;{&quot; +名前空間URI + &quot;}&quot; +ローカル部分の形式の &lt;code&gt;String&lt;/code&gt; 解析します。名前空間 &lt;code&gt;.equals(XMLConstants.NULL_NS_URI)&lt;/code&gt; 場合、ローカル部分のみを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="b1afca0435e978f4c963375b2f60ca3bdb23d563" translate="yes" xml:space="preserve">
          <source>The commonly accepted way of representing a &lt;code&gt;QName&lt;/code&gt; as a &lt;code&gt;String&lt;/code&gt; was &lt;a href=&quot;http://jclark.com/xml/xmlns.htm&quot;&gt;defined&lt;/a&gt; by James Clark. Although this is not a &lt;em&gt;standard&lt;/em&gt; specification, it is in common use, e.g. &lt;a href=&quot;../transform/transformer#setParameter(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;Transformer.setParameter(String name, Object value)&lt;/code&gt;&lt;/a&gt;. This implementation represents a &lt;code&gt;QName&lt;/code&gt; as: &quot;{&quot; + Namespace URI + &quot;}&quot; + local part. If the Namespace URI &lt;code&gt;.equals(XMLConstants.NULL_NS_URI)&lt;/code&gt;, only the local part is returned. An appropriate use of this method is for debugging or logging for human consumption.</source>
          <target state="translated">表現の一般的に受け入れられている方法 &lt;code&gt;QName&lt;/code&gt; として &lt;code&gt;String&lt;/code&gt; して&lt;a href=&quot;http://jclark.com/xml/xmlns.htm&quot;&gt;定義された&lt;/a&gt;ジェームズ・クラークによる。これは&lt;em&gt;標準&lt;/em&gt;仕様ではありませんが、一般的に使用されています（例：&lt;a href=&quot;../transform/transformer#setParameter(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;Transformer.setParameter(String name, Object value)&lt;/code&gt; &lt;/a&gt;。この実装は、 &lt;code&gt;QName&lt;/code&gt; を次のように表します： &quot;{&quot; +名前空間URI + &quot;}&quot; +ローカル部分。名前空間 &lt;code&gt;.equals(XMLConstants.NULL_NS_URI)&lt;/code&gt; 場合、ローカル部分のみが返されます。この方法の適切な使用法は、人間が消費するためのデバッグまたはロギングです。</target>
        </trans-unit>
        <trans-unit id="40472696caa6671c3ae2d8a764be134346c666a2" translate="yes" xml:space="preserve">
          <source>The comparison is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致します。</target>
        </trans-unit>
        <trans-unit id="7544553cbef2741d51df7e2448ec9b3d30bfc038" translate="yes" xml:space="preserve">
          <source>The comparison is based first on the UTC equivalent instant, then on the local time. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、最初にUTCに相当する瞬間に基づいて行われ、次に現地時間に基づいて行われます。これは、&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致しています。</target>
        </trans-unit>
        <trans-unit id="a9f1c042dcb61fa1cd287abce64f4635e9b92eae" translate="yes" xml:space="preserve">
          <source>The comparison is based first on the instant, then on the local date-time, then on the zone ID, then on the chronology. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、最初にインスタント、次にローカルの日時、次にゾーンID、次に年代順に基づいています。&lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されているように、「等しい」と一致します。</target>
        </trans-unit>
        <trans-unit id="ec2151de3ebbbe7f15e922252583edd296181fa3" translate="yes" xml:space="preserve">
          <source>The comparison is based first on the underlying time-line date, then on the chronology. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、最初に基になるタイムライン日付に基づいて行われ、次に年代順に行われます。これは、&lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致しています。</target>
        </trans-unit>
        <trans-unit id="85c7e6fc1e00fe1d64177c565a13d627754ef76f" translate="yes" xml:space="preserve">
          <source>The comparison is based first on the underlying time-line date-time, then on the chronology. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、最初に基礎となるタイムラインの日時に基づいて行われ、次に年代順に行われます。これは、&lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致しています。</target>
        </trans-unit>
        <trans-unit id="bc9c161855c82e99812fb51724a912bec4af797a" translate="yes" xml:space="preserve">
          <source>The comparison is based first on the value of the year, then on the value of the month. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、最初は年の値に基づいて行われ、次に月の値に基づいて行われます。これは、&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致しています。</target>
        </trans-unit>
        <trans-unit id="a8022e23d05bb51e89c64c6b0e9af30219a8fdac" translate="yes" xml:space="preserve">
          <source>The comparison is based first on value of the month, then on the value of the day. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、まず月の値に基づいて行われ、次に日の値に基づいて行われます。これは、&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致しています。</target>
        </trans-unit>
        <trans-unit id="1235f74256f8786279bbc14ae61bc796d7600d41" translate="yes" xml:space="preserve">
          <source>The comparison is based on the ID.</source>
          <target state="translated">比較するのはIDを元にしています。</target>
        </trans-unit>
        <trans-unit id="fc65394da81a692e7946a055c22f7463a6a84557" translate="yes" xml:space="preserve">
          <source>The comparison is based on the amount of the offset in seconds. This is equivalent to a comparison by ID.</source>
          <target state="translated">秒単位のオフセット量で比較します。これはIDによる比較と同等です。</target>
        </trans-unit>
        <trans-unit id="b18c89c7d60fa0dae17d459068542c53d7e25964" translate="yes" xml:space="preserve">
          <source>The comparison is based on the entire state of the object.</source>
          <target state="translated">比較は、対象物の全体の状態を基準にしています。</target>
        </trans-unit>
        <trans-unit id="5af66c17bf64182c96c3f385062b0126edaa4e54" translate="yes" xml:space="preserve">
          <source>The comparison is based on the entire state of the rules, which is the first day-of-week and minimal days.</source>
          <target state="translated">比較するのは、最初の曜日と最低限の日をルールとして、全体の状態に基づいています。</target>
        </trans-unit>
        <trans-unit id="192da957c0f4b80479e196d424d4d3775beb904f" translate="yes" xml:space="preserve">
          <source>The comparison is based on the four values, minimum, largest minimum, smallest maximum and maximum. Only objects of type &lt;code&gt;ValueRange&lt;/code&gt; are compared, other types return false.</source>
          <target state="translated">比較は、最小、最大最小、最小最大、最大の4つの値に基づいています。タイプ &lt;code&gt;ValueRange&lt;/code&gt; のオブジェクトのみが比較され、他のタイプはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="cba93eebbdf4e98ed715ba844e1f105f1a12c788" translate="yes" xml:space="preserve">
          <source>The comparison is based on the instant then on the local date-time. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、インスタントに基づいてからローカルの日時に基づいて行われます。これは、&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致しています。</target>
        </trans-unit>
        <trans-unit id="034257456036c497bfe5291e68e9c84c7944d29e" translate="yes" xml:space="preserve">
          <source>The comparison is based on the local date-time and the offset. To compare for the same instant on the time-line, use &lt;a href=&quot;#isEqual(java.time.OffsetDateTime)&quot;&gt;&lt;code&gt;isEqual(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt;. Only objects of type &lt;code&gt;OffsetDateTime&lt;/code&gt; are compared, other types return false.</source>
          <target state="translated">比較は、ローカルの日時とオフセットに基づいています。タイムライン上の同じ瞬間を比較するには、&lt;a href=&quot;#isEqual(java.time.OffsetDateTime)&quot;&gt; &lt;code&gt;isEqual(java.time.OffsetDateTime)&lt;/code&gt; を&lt;/a&gt;使用します。タイプ &lt;code&gt;OffsetDateTime&lt;/code&gt; のオブジェクトのみが比較され、他のタイプはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="737cc9ee0e95935301bdbf824b243f30aec93c53" translate="yes" xml:space="preserve">
          <source>The comparison is based on the local date-time and the offset. To compare for the same instant on the time-line, use &lt;a href=&quot;offsetdatetime#isEqual-java.time.OffsetDateTime-&quot;&gt;&lt;code&gt;isEqual(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt;. Only objects of type &lt;code&gt;OffsetDateTime&lt;/code&gt; are compared, other types return false.</source>
          <target state="translated">比較は、ローカルの日時とオフセットに基づいています。タイムラインで同じ瞬間を比較するには、&lt;a href=&quot;offsetdatetime#isEqual-java.time.OffsetDateTime-&quot;&gt; &lt;code&gt;isEqual(java.time.OffsetDateTime)&lt;/code&gt; を&lt;/a&gt;使用します。タイプが &lt;code&gt;OffsetDateTime&lt;/code&gt; のオブジェクトのみが比較され、他のタイプはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="aaddf76274d3ce1a00ecf4394d88322b1057587d" translate="yes" xml:space="preserve">
          <source>The comparison is based on the local-time and the offset. To compare for the same instant on the time-line, use &lt;a href=&quot;#isEqual(java.time.OffsetTime)&quot;&gt;&lt;code&gt;isEqual(OffsetTime)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は現地時間とオフセットに基づいています。タイムライン上の同じ瞬間を比較するには、&lt;a href=&quot;#isEqual(java.time.OffsetTime)&quot;&gt; &lt;code&gt;isEqual(OffsetTime)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="d5a831b02c02275b1518078d06b087841d7f2158" translate="yes" xml:space="preserve">
          <source>The comparison is based on the local-time and the offset. To compare for the same instant on the time-line, use &lt;a href=&quot;offsettime#isEqual-java.time.OffsetTime-&quot;&gt;&lt;code&gt;isEqual(OffsetTime)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、現地時間とオフセットに基づいています。タイムラインで同じ瞬間を比較するには、&lt;a href=&quot;offsettime#isEqual-java.time.OffsetTime-&quot;&gt; &lt;code&gt;isEqual(OffsetTime)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="82e0667693e86c110e3044cc93f2d394e82a5c9b" translate="yes" xml:space="preserve">
          <source>The comparison is based on the offset date-time and the zone. Only objects of type &lt;code&gt;ZonedDateTime&lt;/code&gt; are compared, other types return false.</source>
          <target state="translated">比較は、オフセット日時とゾーンに基づいています。タイプ &lt;code&gt;ZonedDateTime&lt;/code&gt; のオブジェクトのみが比較され、他のタイプはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="f113f9daa8f2381ead62d12e55c9496c98efaa3d" translate="yes" xml:space="preserve">
          <source>The comparison is based on the offset date-time and the zone. To compare for the same instant on the time-line, use &lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt;. Only objects of type &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; are compared, other types return false.</source>
          <target state="translated">比較は、オフセット日時とゾーンに基づいています。タイムライン上の同じ瞬間を比較するには、&lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;ます。 &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; タイプのオブジェクトのみが比較され、他のタイプはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="33b5a7379f272963b1231d6f7fe31e6ce7f2e169" translate="yes" xml:space="preserve">
          <source>The comparison is based on the offset date-time and the zone. To compare for the same instant on the time-line, use &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt;. Only objects of type &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; are compared, other types return false.</source>
          <target state="translated">比較は、オフセット日時とゾーンに基づいています。タイムラインで同じ瞬間を比較するには、&lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;ます。タイプ &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; のオブジェクトのみが比較され、他のタイプはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="89ee64a765fb07b058f4c38bb5d7dd8adeb5ae39" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the instants.</source>
          <target state="translated">比較はインスタの時系列位置を基準にしています。</target>
        </trans-unit>
        <trans-unit id="16b8d94d368fe5302d9f95a3fac584848bf6c823" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the instants. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、インスタントのタイムライン位置に基づいています。これは、&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致しています。</target>
        </trans-unit>
        <trans-unit id="c62e4664e20e19bb86140431a4348f682732596c" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the local times within a day. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、1日の中のローカル時刻のタイムライン位置に基づいています。これは、&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されている「等しい」と一致しています。</target>
        </trans-unit>
        <trans-unit id="596c353f32239015bd0dfaedc67872f34772e8a0" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the month-day within a year.</source>
          <target state="translated">1年以内の月日の時系列位置で比較しています。</target>
        </trans-unit>
        <trans-unit id="4d10c99bef52962cda140baf526e052de919b106" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the time within a day.</source>
          <target state="translated">1日の中での時間軸の位置を基準に比較しています。</target>
        </trans-unit>
        <trans-unit id="bc4d73aa624f4c73d652784336ae68fda81a83f5" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the year-months.</source>
          <target state="translated">年月の時系列位置を基準に比較しています。</target>
        </trans-unit>
        <trans-unit id="16bbd8a5d59cacd64bc82e497b6806c5905521a7" translate="yes" xml:space="preserve">
          <source>The comparison is based on the time-line position of the years.</source>
          <target state="translated">年の時系列位置で比較しています。</target>
        </trans-unit>
        <trans-unit id="687b4a5a03f3d03cd8074b28705f197dbd61474d" translate="yes" xml:space="preserve">
          <source>The comparison is based on the total length of the durations.</source>
          <target state="translated">比較するのは、持続時間の合計の長さに基づいています。</target>
        </trans-unit>
        <trans-unit id="147c6ea90ff33076d2c31d50f28390aa314b97fa" translate="yes" xml:space="preserve">
          <source>The comparison is based on the total length of the durations. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は、期間の合計の長さに基づいています。&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されているように、「等しい」と一致します。</target>
        </trans-unit>
        <trans-unit id="dc1a66e5ec71f197e7d88a905f435f0152a887f3" translate="yes" xml:space="preserve">
          <source>The comparison is based on the type &lt;code&gt;Period&lt;/code&gt; and each of the three amounts. To be equal, the years, months and days units must be individually equal. Note that this means that a period of &quot;15 Months&quot; is not equal to a period of &quot;1 Year and 3 Months&quot;.</source>
          <target state="translated">比較は、 &lt;code&gt;Period&lt;/code&gt; タイプと3つの金額のそれぞれに基づいています。等しくするには、年、月、日の単位は個々に等しくなければなりません。これは、「15か月」の期間が「1年と3か月」の期間と等しくないことを意味することに注意してください。</target>
        </trans-unit>
        <trans-unit id="463960db060f3465393d7aee55fa6982b411192d" translate="yes" xml:space="preserve">
          <source>The comparison is based on the value of the year. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は年の値に基づいています。&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されているように、「等しい」と一致します。</target>
        </trans-unit>
        <trans-unit id="0f54efe8752b32e6e8eacc75bfeee74ae6761886" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(boolean%5B%5D,boolean%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(boolean%5B%5D,boolean%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、配列 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="49b0be5a16b1a376e93cf7bd5b72ef7a825a398a" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(boolean%5B%5D,int,int,boolean%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(boolean%5B%5D,int,int,boolean%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、指定された範囲[ &lt;code&gt;aFromIndex&lt;/code&gt; 、 &lt;code&gt;atoIndex&lt;/code&gt; ）および[ &lt;code&gt;bFromIndex&lt;/code&gt; 、 &lt;code&gt;btoIndex&lt;/code&gt; ）を持つ配列 &lt;code&gt;a&lt;/code&gt; および &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="03b64a12dc926fe6f09e8a748eab22f3d55cef0c" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(byte%5B%5D,byte%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(byte%5B%5D,byte%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、配列 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="50047cff115b8f736afee26eeca5323d4025fd16" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(byte%5B%5D,int,int,byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(byte%5B%5D,int,int,byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、指定された範囲[ &lt;code&gt;aFromIndex&lt;/code&gt; 、 &lt;code&gt;atoIndex&lt;/code&gt; ）および[ &lt;code&gt;bFromIndex&lt;/code&gt; 、 &lt;code&gt;btoIndex&lt;/code&gt; ）を持つ配列 &lt;code&gt;a&lt;/code&gt; および &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="716d9b54e30d768c747d6859c1eefe682f37f850" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(char%5B%5D,char%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(char%5B%5D,char%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、配列 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="c799b986a6a5b1811c8c670eb63ceeee4b2ecaaf" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(char%5B%5D,int,int,char%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(char%5B%5D,int,int,char%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、指定された範囲[ &lt;code&gt;aFromIndex&lt;/code&gt; 、 &lt;code&gt;atoIndex&lt;/code&gt; ）および[ &lt;code&gt;bFromIndex&lt;/code&gt; 、 &lt;code&gt;btoIndex&lt;/code&gt; ）を持つ配列 &lt;code&gt;a&lt;/code&gt; および &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="8cd310a41049b7688f6ce9081ee8d378c5a50dfb" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(double%5B%5D,double%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(double%5B%5D,double%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、配列 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="8314033aa3f904c28d650dc4b875a96c3b829ff2" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(double%5B%5D,int,int,double%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(double%5B%5D,int,int,double%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、指定された範囲[ &lt;code&gt;aFromIndex&lt;/code&gt; 、 &lt;code&gt;atoIndex&lt;/code&gt; ）および[ &lt;code&gt;bFromIndex&lt;/code&gt; 、 &lt;code&gt;btoIndex&lt;/code&gt; ）を持つ配列 &lt;code&gt;a&lt;/code&gt; および &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="f99217490e549482f5468dde7e2d3a4b0b3c7b11" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(float%5B%5D,float%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(float%5B%5D,float%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、配列 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="2c389626c4e64682d6c05f8aca5a75f9dd5a9f30" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(float%5B%5D,int,int,float%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(float%5B%5D,int,int,float%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、指定された範囲[ &lt;code&gt;aFromIndex&lt;/code&gt; 、 &lt;code&gt;atoIndex&lt;/code&gt; ）および[ &lt;code&gt;bFromIndex&lt;/code&gt; 、 &lt;code&gt;btoIndex&lt;/code&gt; ）を持つ配列 &lt;code&gt;a&lt;/code&gt; および &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="fe28f7e960119b42514409cf2b3a9182f7110b66" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(int%5B%5D,int%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(int%5B%5D,int%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、配列 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="5b832c3cebf3ca36a50ab324c60f5ed31a51a657" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(int%5B%5D,int,int,int%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(int%5B%5D,int,int,int%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、指定された範囲[ &lt;code&gt;aFromIndex&lt;/code&gt; 、 &lt;code&gt;atoIndex&lt;/code&gt; ）および[ &lt;code&gt;bFromIndex&lt;/code&gt; 、 &lt;code&gt;btoIndex&lt;/code&gt; ）を持つ配列 &lt;code&gt;a&lt;/code&gt; および &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="eb53e9a6aa745a2c8cd17e4565d0e414244b9e44" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(java.lang.Object%5B%5D,int,int,java.lang.Object%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(java.lang.Object%5B%5D,int,int,java.lang.Object%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、指定された範囲[ &lt;code&gt;aFromIndex&lt;/code&gt; 、 &lt;code&gt;atoIndex&lt;/code&gt; ）および[ &lt;code&gt;bFromIndex&lt;/code&gt; 、 &lt;code&gt;btoIndex&lt;/code&gt; ）を持つ配列 &lt;code&gt;a&lt;/code&gt; および &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="b39e0dec192b8c145e2a2089bd151f84bb4b8384" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(java.lang.Object%5B%5D,java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(java.lang.Object%5B%5D,java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、配列 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="f540020af9ce2b573180569b60eef6cf738982f3" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(long%5B%5D,int,int,long%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(long%5B%5D,int,int,long%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、指定された範囲[ &lt;code&gt;aFromIndex&lt;/code&gt; 、 &lt;code&gt;atoIndex&lt;/code&gt; ）および[ &lt;code&gt;bFromIndex&lt;/code&gt; 、 &lt;code&gt;btoIndex&lt;/code&gt; ）を持つ配列 &lt;code&gt;a&lt;/code&gt; および &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="620dbd913357373fadfdf1e9d089360a5077d3b2" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(long%5B%5D,long%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(long%5B%5D,long%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、配列 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="13fdfc1118a3fae8a910c0a9bac261aacc401c4c" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(short%5B%5D,int,int,short%5B%5D,int,int)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(short%5B%5D,int,int,short%5B%5D,int,int)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、指定された範囲[ &lt;code&gt;aFromIndex&lt;/code&gt; 、 &lt;code&gt;atoIndex&lt;/code&gt; ）および[ &lt;code&gt;bFromIndex&lt;/code&gt; 、 &lt;code&gt;btoIndex&lt;/code&gt; ）を持つ配列 &lt;code&gt;a&lt;/code&gt; および &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="fc98d98a9828848d75a5fdc4acfdc636f273dd58" translate="yes" xml:space="preserve">
          <source>The comparison is consistent with &lt;a href=&quot;#equals(short%5B%5D,short%5B%5D)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;, more specifically the following holds for arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;:</source>
          <target state="translated">比較は&lt;a href=&quot;#equals(short%5B%5D,short%5B%5D)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/a&gt;と一致します。より具体的には、配列 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; について次のことが当てはまります。</target>
        </trans-unit>
        <trans-unit id="62f16067b7a90f0f4f245f000991fe2df5b1a555" translate="yes" xml:space="preserve">
          <source>The comparison is primarily based on the date, from earliest to latest. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は主に、最も古いものから最も新しいものまでの日付に基づいています。&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されているように、「等しい」と一致します。</target>
        </trans-unit>
        <trans-unit id="706f98b3cb9aba1254b020ff959b8465ce325b8c" translate="yes" xml:space="preserve">
          <source>The comparison is primarily based on the date-time, from earliest to latest. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較は主に、最も早いものから最も新しいものまでの日時に基づいています。&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されているように、「等しい」と一致します。</target>
        </trans-unit>
        <trans-unit id="0062aa5848822076fe3842237a04acbf5acbd21a" translate="yes" xml:space="preserve">
          <source>The comparison order first by the chronology ID string, then by any additional information specific to the subclass. It is &quot;consistent with equals&quot;, as defined by &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最初に年代順ID文字列、次にサブクラスに固有の追加情報による比較順序。&lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; で&lt;/a&gt;定義されているように、「等しい」と一致します。</target>
        </trans-unit>
        <trans-unit id="e51ae022ed297aaa4ea1f258f7ef88e5acc67791" translate="yes" xml:space="preserve">
          <source>The compiler might generate diagnostics during compilation (for example, error messages). If a diagnostic listener is provided, the diagnostics will be supplied to the listener. If no listener is provided, the diagnostics will be formatted in an unspecified format and written to the default output, which is &lt;code&gt;
 System.err&lt;/code&gt; unless otherwise specified. Even if a diagnostic listener is supplied, some diagnostics might not fit in a &lt;code&gt;
 Diagnostic&lt;/code&gt; and will be written to the default output.</source>
          <target state="translated">コンパイラーは、コンパイル中に診断（エラー・メッセージなど）を生成する場合があります。診断リスナーが提供されている場合、診断はリスナーに提供されます。リスナーが提供されていない場合、診断は不特定の形式でフォーマットされ、特に指定されていない限り、デフォルトの出力である &lt;code&gt; System.err&lt;/code&gt; に書き込まれます。診断リスナーが供給されている場合でも、いくつかの診断は内に収まらない可能性があります &lt;code&gt; Diagnostic&lt;/code&gt; し、デフォルトの出力に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="3d38b5f16eb7a1039fb7fb049c7f6b1ebb31b6e6" translate="yes" xml:space="preserve">
          <source>The compiler might generate diagnostics during compilation (for example, error messages). If a diagnostic listener is provided, the diagnostics will be supplied to the listener. If no listener is provided, the diagnostics will be formatted in an unspecified format and written to the default output, which is &lt;code&gt;System.err&lt;/code&gt; unless otherwise specified. Even if a diagnostic listener is supplied, some diagnostics might not fit in a &lt;code&gt;Diagnostic&lt;/code&gt; and will be written to the default output.</source>
          <target state="translated">コンパイラーは、コンパイル中に診断（例えば、エラー・メッセージ）を生成する場合があります。診断リスナーが提供されている場合、診断はリスナーに提供されます。リスナーが指定されていない場合、診断は指定されていない形式でフォーマットされ、特に指定されていない限り、デフォルトの出力である &lt;code&gt;System.err&lt;/code&gt; に書き込まれます。診断リスナーが供給されている場合でも、いくつかの診断は内に収まらない可能性があります &lt;code&gt;Diagnostic&lt;/code&gt; し、デフォルトの出力に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="381f14496e56d0ef9908dc1f0d9bb14c74a2832d" translate="yes" xml:space="preserve">
          <source>The compiler relies on two services: &lt;a href=&quot;diagnosticlistener&quot;&gt;diagnostic listener&lt;/a&gt; and &lt;a href=&quot;javafilemanager&quot;&gt;file manager&lt;/a&gt;. Although most classes and interfaces in this package defines an API for compilers (and tools in general) the interfaces &lt;a href=&quot;diagnosticlistener&quot;&gt;DiagnosticListener&lt;/a&gt;, &lt;a href=&quot;javafilemanager&quot;&gt;JavaFileManager&lt;/a&gt;, &lt;a href=&quot;fileobject&quot;&gt;FileObject&lt;/a&gt;, and &lt;a href=&quot;javafileobject&quot;&gt;JavaFileObject&lt;/a&gt; are not intended to be used in applications. Instead these interfaces are intended to be implemented and used to provide customized services for a compiler and thus defines an SPI for compilers.</source>
          <target state="translated">コンパイラーは、&lt;a href=&quot;diagnosticlistener&quot;&gt;診断リスナー&lt;/a&gt;と&lt;a href=&quot;javafilemanager&quot;&gt;ファイルマネージャーの&lt;/a&gt; 2つのサービスに依存しています。このパッケージのほとんどのクラスとインターフェースは、コンパイラー（およびツール全般）のAPIを定義していますが、&lt;a href=&quot;diagnosticlistener&quot;&gt;DiagnosticListener&lt;/a&gt;、&lt;a href=&quot;javafilemanager&quot;&gt;JavaFileManager&lt;/a&gt;、&lt;a href=&quot;fileobject&quot;&gt;FileObject&lt;/a&gt;、および&lt;a href=&quot;javafileobject&quot;&gt;JavaFileObject&lt;/a&gt;のインターフェースは、アプリケーションでの使用を意図していません。代わりに、これらのインターフェースは、コンパイラーにカスタマイズされたサービスを提供するために実装および使用されることが意図されているため、コンパイラーのSPIを定義します。</target>
        </trans-unit>
        <trans-unit id="362286647cd635d5481f683398fcaef1fc4da1f8" translate="yes" xml:space="preserve">
          <source>The complement of the specified set in this set</source>
          <target state="translated">この集合で指定された集合の補数</target>
        </trans-unit>
        <trans-unit id="a5e446a959aa30fea4f31ea3c5f55e40725fce89" translate="yes" xml:space="preserve">
          <source>The complete date is expressed using three fields:</source>
          <target state="translated">完全な日付を3つのフィールドで表現しています。</target>
        </trans-unit>
        <trans-unit id="2609040dc1c1bf30c73930b7eb53396d79f341f3" translate="yes" xml:space="preserve">
          <source>The complete set of transitions for this rules instance is defined by this method and &lt;a href=&quot;#getTransitionRules()&quot;&gt;&lt;code&gt;getTransitionRules()&lt;/code&gt;&lt;/a&gt;. This method returns those transitions that have been fully defined. These are typically historical, but may be in the future.</source>
          <target state="translated">このルールインスタンスの遷移の完全なセットは、このメソッドと&lt;a href=&quot;#getTransitionRules()&quot;&gt; &lt;code&gt;getTransitionRules()&lt;/code&gt; &lt;/a&gt;によって定義されます。このメソッドは、完全に定義された遷移を返します。これらは通常、歴史的なものですが、将来的になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="3c695d11429ec73735c5d91048db870c4106233b" translate="yes" xml:space="preserve">
          <source>The complete set of transitions for this rules instance is defined by this method and &lt;a href=&quot;#getTransitions()&quot;&gt;&lt;code&gt;getTransitions()&lt;/code&gt;&lt;/a&gt;. This method returns instances of &lt;a href=&quot;zoneoffsettransitionrule&quot;&gt;&lt;code&gt;ZoneOffsetTransitionRule&lt;/code&gt;&lt;/a&gt; that define an algorithm for when transitions will occur.</source>
          <target state="translated">このルールインスタンスの遷移の完全なセットは、このメソッドと&lt;a href=&quot;#getTransitions()&quot;&gt; &lt;code&gt;getTransitions()&lt;/code&gt; &lt;/a&gt;によって定義されます。このメソッドは、遷移が発生するタイミングのアルゴリズムを定義する&lt;a href=&quot;zoneoffsettransitionrule&quot;&gt; &lt;code&gt;ZoneOffsetTransitionRule&lt;/code&gt; の&lt;/a&gt;インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="62ccc62c3b00948e20f42cc9c3131d69e90ab141" translate="yes" xml:space="preserve">
          <source>The complete set of transitions for this rules instance is defined by this method and &lt;a href=&quot;zonerules#getTransitionRules--&quot;&gt;&lt;code&gt;getTransitionRules()&lt;/code&gt;&lt;/a&gt;. This method returns those transitions that have been fully defined. These are typically historical, but may be in the future.</source>
          <target state="translated">このルールインスタンスの遷移の完全なセットは、このメソッドと&lt;a href=&quot;zonerules#getTransitionRules--&quot;&gt; &lt;code&gt;getTransitionRules()&lt;/code&gt; &lt;/a&gt;によって定義されます。このメソッドは、完全に定義された遷移を返します。これらは通常、歴史的なものですが、将来的には可能性があります。</target>
        </trans-unit>
        <trans-unit id="3cbe2850875a6f72ed6ab4a88952848315078e96" translate="yes" xml:space="preserve">
          <source>The complete set of transitions for this rules instance is defined by this method and &lt;a href=&quot;zonerules#getTransitions--&quot;&gt;&lt;code&gt;getTransitions()&lt;/code&gt;&lt;/a&gt;. This method returns instances of &lt;a href=&quot;zoneoffsettransitionrule&quot;&gt;&lt;code&gt;ZoneOffsetTransitionRule&lt;/code&gt;&lt;/a&gt; that define an algorithm for when transitions will occur.</source>
          <target state="translated">このルールインスタンスの遷移の完全なセットは、このメソッドと&lt;a href=&quot;zonerules#getTransitions--&quot;&gt; &lt;code&gt;getTransitions()&lt;/code&gt; &lt;/a&gt;によって定義されます。このメソッドは、遷移が発生するときのアルゴリズムを定義する&lt;a href=&quot;zoneoffsettransitionrule&quot;&gt; &lt;code&gt;ZoneOffsetTransitionRule&lt;/code&gt; の&lt;/a&gt;インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="524c842350764043be1381deb4e7a75d9303361c" translate="yes" xml:space="preserve">
          <source>The completion handler for an I/O operation initiated on a channel bound to a group is guaranteed to be invoked by one of the pooled threads in the group. This ensures that the completion handler is run by a thread with the expected &lt;em&gt;identity&lt;/em&gt;.</source>
          <target state="translated">グループにバインドされたチャネルで開始されたI / O操作の完了ハンドラーは、グループ内のプールされたスレッドの1つによって呼び出されることが保証されています。これにより、予期される&lt;em&gt;IDを&lt;/em&gt;持つスレッドによって完了ハンドラが確実に実行され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0d8a524b8f0bfc14d5b33c03393a926327201c05" translate="yes" xml:space="preserve">
          <source>The component at index posn.</source>
          <target state="translated">インデックス posn にあるコンポーネント。</target>
        </trans-unit>
        <trans-unit id="321beb39093f29d2f1844869134bf472de0dc315" translate="yes" xml:space="preserve">
          <source>The component comes after the last line of the layout's content.</source>
          <target state="translated">このコンポーネントは、レイアウトの内容の最後の行の後に来ます。</target>
        </trans-unit>
        <trans-unit id="e26a2430d578c99c6167b88d0c2c1db04933f6a7" translate="yes" xml:space="preserve">
          <source>The component comes after the last line of the layout's content. For Western, left-to-right and top-to-bottom orientations, this is equivalent to SOUTH.</source>
          <target state="translated">このコンポーネントは、レイアウトの内容の最後の行の後に来ます。西洋、左から右、上から下の方向の場合、これは SOUTH と同じです。</target>
        </trans-unit>
        <trans-unit id="38629b8ee0afc40f5f2853e3dec3e5dc7298f69d" translate="yes" xml:space="preserve">
          <source>The component comes before the first line of the layout's content.</source>
          <target state="translated">このコンポーネントは、レイアウトの内容の最初の行の前に来ます。</target>
        </trans-unit>
        <trans-unit id="af6a2af1898d81c481440b3cd8640aaf640a422b" translate="yes" xml:space="preserve">
          <source>The component comes before the first line of the layout's content. For Western, left-to-right and top-to-bottom orientations, this is equivalent to NORTH.</source>
          <target state="translated">このコンポーネントは、レイアウトの内容の最初の行の前に来ます。西洋、左から右、上から下の方向の場合、これはNORTHと同じです。</target>
        </trans-unit>
        <trans-unit id="c6ca63c44af0debf2bf58f6314ef6eb8595cba1d" translate="yes" xml:space="preserve">
          <source>The component configures some of its properties to match the &lt;code&gt;Action&lt;/code&gt;.</source>
          <target state="translated">コンポーネントは、 &lt;code&gt;Action&lt;/code&gt; に一致するようにいくつかのプロパティを構成します。</target>
        </trans-unit>
        <trans-unit id="e2dd08aa02937510bce78896eb46f9c0281fb581" translate="yes" xml:space="preserve">
          <source>The component given is the actual component used by the JTextPane. Since components cannot be a child of more than one container, this method should not be used in situations where the model is shared by text components.</source>
          <target state="translated">与えられたコンポーネントは、JTextPaneで使用される実際のコンポーネントです。コンポーネントは複数のコンテナの子にはできないので、モデルがテキストコンポーネントによって共有されている状況では、このメソッドを使用すべきではありません。</target>
        </trans-unit>
        <trans-unit id="357e717a3867058012bcfcad4afa0fdbac1206ab" translate="yes" xml:space="preserve">
          <source>The component goes at the beginning of the line direction for the layout.</source>
          <target state="translated">コンポーネントは、レイアウトの線方向の先頭に行きます。</target>
        </trans-unit>
        <trans-unit id="74e6099840a74dc7f8fd860a0a4c41b7373c5631" translate="yes" xml:space="preserve">
          <source>The component goes at the beginning of the line direction for the layout. For Western, left-to-right and top-to-bottom orientations, this is equivalent to WEST.</source>
          <target state="translated">このコンポーネントは、レイアウトの線方向の先頭に配置されます。西側、左から右、上から下の方向の場合、これは WEST と同じです。</target>
        </trans-unit>
        <trans-unit id="22ccddc9737aced85a20683366e6b89ddfb58af0" translate="yes" xml:space="preserve">
          <source>The component goes at the end of the line direction for the layout.</source>
          <target state="translated">コンポーネントは、レイアウトのための線方向の端に行きます。</target>
        </trans-unit>
        <trans-unit id="2a5b339f24ae082855aeddaaecacbe04571f14f1" translate="yes" xml:space="preserve">
          <source>The component goes at the end of the line direction for the layout. For Western, left-to-right and top-to-bottom orientations, this is equivalent to EAST.</source>
          <target state="translated">このコンポーネントは、レイアウトの線方向の端に配置されます。西向き、左から右向き、上から下向きの場合、これはEASTと同じです。</target>
        </trans-unit>
        <trans-unit id="e51b1a86d675ea435b4d48af53e1bf2606cf91f0" translate="yes" xml:space="preserve">
          <source>The component in the currently selected path which contains sourcePoint (relative to the source component's coordinate space. If sourcePoint is not inside a component on the currently selected path, null is returned.</source>
          <target state="translated">現在選択されているパス上のコンポーネントの中で、sourcePointを含むコンポーネント(ソースコンポーネントの座標空間を基準とした相対的なもの)。現在選択されているパス上のコンポーネントの中に sourcePoint がない場合は null が返されます。</target>
        </trans-unit>
        <trans-unit id="93ff1a34a8d24b885af3bc77651d96f52e2bb611" translate="yes" xml:space="preserve">
          <source>The component installs a &lt;code&gt;PropertyChangeListener&lt;/code&gt; on the &lt;code&gt;Action&lt;/code&gt; so that the component can change its properties to reflect changes in the &lt;code&gt;Action&lt;/code&gt;'s properties.</source>
          <target state="translated">コンポーネントは、 &lt;code&gt;Action&lt;/code&gt; &lt;code&gt;PropertyChangeListener&lt;/code&gt; をインストールして、コンポーネントがそのプロパティを変更して、 &lt;code&gt;Action&lt;/code&gt; のプロパティの変更を反映できるようにします。</target>
        </trans-unit>
        <trans-unit id="3d8fabcefb52aa83a5f6e083956a8ffb77011074" translate="yes" xml:space="preserve">
          <source>The component is added to the button row directly.</source>
          <target state="translated">ボタン列に直接コンポーネントが追加されます。</target>
        </trans-unit>
        <trans-unit id="1e531d252c893d215889244b2c27a8217c3a4709" translate="yes" xml:space="preserve">
          <source>The component is placed relative to the text baseline according to the value returned by &lt;code&gt;Component.getAlignmentY&lt;/code&gt;. For Swing components this value can be conveniently set using the method &lt;code&gt;JComponent.setAlignmentY&lt;/code&gt;. For example, setting a value of &lt;code&gt;0.75&lt;/code&gt; will cause 75 percent of the component to be above the baseline, and 25 percent of the component to be below the baseline.</source>
          <target state="translated">コンポーネントは、 &lt;code&gt;Component.getAlignmentY&lt;/code&gt; によって返される値に従って、テキストベースラインを基準にして配置されます。Swingコンポーネントの場合、この値はメソッド &lt;code&gt;JComponent.setAlignmentY&lt;/code&gt; を使用して簡単に設定できます。たとえば、値を &lt;code&gt;0.75&lt;/code&gt; に設定すると、コンポーネントの75％がベースラインを上回り、コンポーネントの25％がベースラインを下回ります。</target>
        </trans-unit>
        <trans-unit id="6353bf9fb6b5c395dc80e83b16932093c258f2dc" translate="yes" xml:space="preserve">
          <source>The component removed (a String).</source>
          <target state="translated">削除されたコンポーネント(文字列)。</target>
        </trans-unit>
        <trans-unit id="8d33f83809006866b17b180cd392b443af959e82" translate="yes" xml:space="preserve">
          <source>The component should either descend from &lt;code&gt;JComponent&lt;/code&gt; or be another kind of lightweight component. A lightweight component is one whose &quot;lightweight&quot; property (returned by the &lt;code&gt;Component&lt;/code&gt;&lt;code&gt;isLightweight&lt;/code&gt; method) is true. If the Component is not lightweight, bad things map happen: crashes, exceptions, painting problems...</source>
          <target state="translated">コンポーネントは、 &lt;code&gt;JComponent&lt;/code&gt; の子孫であるか、別の種類の軽量コンポーネントである必要があります。軽量コンポーネントとは、「lightweight」プロパティ（ &lt;code&gt;Component&lt;/code&gt; &lt;code&gt;isLightweight&lt;/code&gt; メソッドによって返される）がtrueであるコンポーネントです。コンポーネントが軽量でない場合、クラッシュ、例外、ペイントの問題など、悪いことが起こります。</target>
        </trans-unit>
        <trans-unit id="1376ca272698913ec6989854da54425e8d439c9b" translate="yes" xml:space="preserve">
          <source>The component that gets acted upon by the action will be the source of the ActionEvent if the source can be narrowed to a JEditorPane type. If the source can't be narrowed, the most recently focused text component is changed. If neither of these are the case, the action cannot be performed.</source>
          <target state="translated">ソースを JEditorPane タイプに絞り込むことができれば、アクションによってアクションが実行されるコンポーネントが ActionEvent のソースとなります。ソースを絞り込むことができない場合は、最近フォーカスされたテキストコンポーネントが変更されます。これらのどちらにも当てはまらない場合、アクションは実行できません。</target>
        </trans-unit>
        <trans-unit id="067c52924cb281f6221e68a53f34b1dfc8b6c1ab" translate="yes" xml:space="preserve">
          <source>The component that was focused.</source>
          <target state="translated">集中していた成分。</target>
        </trans-unit>
        <trans-unit id="83787bea9a3b9d7919539b97e1a25b1a69bf1001" translate="yes" xml:space="preserve">
          <source>The component to display in the lower left corner.</source>
          <target state="translated">左下に表示するコンポーネント。</target>
        </trans-unit>
        <trans-unit id="60f1167b3c36e8998bceb2d1149062ad990f2e07" translate="yes" xml:space="preserve">
          <source>The component to display in the lower left corner. Default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">左下隅に表示するコンポーネント。デフォルトは &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0ff34819478ff80a2f1081e4195a8bad93d175b3" translate="yes" xml:space="preserve">
          <source>The component to display in the lower right corner.</source>
          <target state="translated">右下に表示するコンポーネント。</target>
        </trans-unit>
        <trans-unit id="4a4b7ad0d3b671d851ff3715009f49e51e41019a" translate="yes" xml:space="preserve">
          <source>The component to display in the lower right corner. Default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">右下隅に表示するコンポーネント。デフォルトは &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="74f16643d9e3602845c27d833e43c30495a95c51" translate="yes" xml:space="preserve">
          <source>The component to display in the upper left corner.</source>
          <target state="translated">左上に表示するコンポーネント。</target>
        </trans-unit>
        <trans-unit id="e9ed964a6910f13d3da2e9bf1d787e81760caca3" translate="yes" xml:space="preserve">
          <source>The component to display in the upper left corner. Default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">左上隅に表示するコンポーネント。デフォルトは &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6ae9c445ae7df434e1134c10ad2ea7ed2dcfd2e8" translate="yes" xml:space="preserve">
          <source>The component to display in the upper right corner.</source>
          <target state="translated">右上に表示するコンポーネント。</target>
        </trans-unit>
        <trans-unit id="b1d50dbaf19c8a5e71d3378ea1bce6a8a20b74fe" translate="yes" xml:space="preserve">
          <source>The component to display in the upper right corner. Default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">右上隅に表示するコンポーネント。デフォルトは &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1f538daac3e9cc0d4de608e6fa542fe6f5abaea4" translate="yes" xml:space="preserve">
          <source>The component used is determined by the return value of the createComponent method. The default implementation of this method is to return the component held as an attribute of the element (by calling StyleConstants.getComponent). A limitation of this behavior is that the component cannot be used by more than one text component (i.e. with a shared model). Subclasses can remove this constraint by implementing the createComponent to actually create a component based upon some kind of specification contained in the attributes. The ObjectView class in the html package is an example of a ComponentView implementation that supports multiple component views of a shared model.</source>
          <target state="translated">使用されるコンポーネントは、createComponentメソッドの戻り値によって決定されます。このメソッドのデフォルトの実装は、要素の属性として保持されているコンポーネントを返すことです(StyleConstants.getComponentを呼び出すことで)。この動作の制限は、コンポーネントを複数のテキスト・コンポーネントで使用できないことです(つまり、共有モデルを持つ)。サブクラスは、属性に含まれる何らかの指定に基づいて実際にコンポーネントを作成するために createComponent を実装することで、この制約を取り除くことができます。htmlパッケージのObjectViewクラスは、共有モデルの複数のコンポーネントビューをサポートするComponentView実装の例です。</target>
        </trans-unit>
        <trans-unit id="143da0a2808725f1c84cf860b5e15e2363b0ba85" translate="yes" xml:space="preserve">
          <source>The component-level paint event.</source>
          <target state="translated">コンポーネントレベルのペイントイベント。</target>
        </trans-unit>
        <trans-unit id="dbccbafebfec9e845027b128d81666afafa24267" translate="yes" xml:space="preserve">
          <source>The component-level paint event. This event is a special type which is used to ensure that paint/update method calls are serialized along with the other events delivered from the event queue. This event is not designed to be used with the Event Listener model; programs should continue to override paint/update methods in order render themselves properly.</source>
          <target state="translated">コンポーネントレベルの paint イベント。このイベントは、 paint/update メソッドの呼び出しが、イベントキューから配信される他のイベントと一緒にシリアライズされることを保証するために使用される特別なタイプです。このイベントは、イベントリスナーモデルで使用するように設計されていません。プログラムは、自分自身を適切にレンダリングするために、 paint/update メソッドをオーバーライドし続けなければなりません。</target>
        </trans-unit>
        <trans-unit id="f651357a4d9c2ca3a9b8efd0570128b8a66e1e93" translate="yes" xml:space="preserve">
          <source>The components are aligned as specified by each component's X or Y alignment value.</source>
          <target state="translated">コンポーネントは、各コンポーネントのXまたはYアライメント値で指定された通りにアライメントされます。</target>
        </trans-unit>
        <trans-unit id="83604b63fc3a0513d1ff51b63849fd7ce52faa0c" translate="yes" xml:space="preserve">
          <source>The components are laid out according to their preferred sizes and the constraints of the container's size. The &lt;code&gt;NORTH&lt;/code&gt; and &lt;code&gt;SOUTH&lt;/code&gt; components may be stretched horizontally; the &lt;code&gt;EAST&lt;/code&gt; and &lt;code&gt;WEST&lt;/code&gt; components may be stretched vertically; the &lt;code&gt;CENTER&lt;/code&gt; component may stretch both horizontally and vertically to fill any space left over.</source>
          <target state="translated">コンポーネントは、好みのサイズとコンテナのサイズの制約に従ってレイアウトされます。 &lt;code&gt;NORTH&lt;/code&gt; と &lt;code&gt;SOUTH&lt;/code&gt; の成分は、水平に延伸してもよいです。 &lt;code&gt;EAST&lt;/code&gt; と &lt;code&gt;WEST&lt;/code&gt; コンポーネントは垂直方向に延伸してもよいです。 &lt;code&gt;CENTER&lt;/code&gt; の成分が残さ任意の空間を充填する水平および垂直の両方を伸ばすことができます。</target>
        </trans-unit>
        <trans-unit id="e667b0bc3fd41f695744e24b79fc8cf2ad44fe04" translate="yes" xml:space="preserve">
          <source>The components are placed end-to-end, starting either at coordinate 0 (the leftmost or topmost position) or at the coordinate representing the end of the allocated span (the rightmost or bottommost position).</source>
          <target state="translated">構成要素は、 座標 0 (左端ま たは最上端の位置)か、 割り当て ら れた ス パ ンの終点を表す座標 (右端ま たは最下端の位置)で始ま り 、 端か ら 端へ配置 さ れます。</target>
        </trans-unit>
        <trans-unit id="8b20b5cd486b73d090e372acf6686be11fed43f5" translate="yes" xml:space="preserve">
          <source>The components array.</source>
          <target state="translated">コンポーネントの配列です。</target>
        </trans-unit>
        <trans-unit id="551e179ff0a1f6b74371033d523205c16478c234" translate="yes" xml:space="preserve">
          <source>The components of a LDAP name, that is, RDNs, are numbered. The indexes of a LDAP name with n RDNs range from 0 to n-1. This range may be written as [0,n). The right most RDN is at index 0, and the left most RDN is at index n-1. For example, the distinguished name: &quot;CN=Steve Kille, O=Isode Limited, C=GB&quot; is numbered in the following sequence ranging from 0 to 2: {C=GB, O=Isode Limited, CN=Steve Kille}. An empty LDAP name is represented by an empty RDN list.</source>
          <target state="translated">LDAP名の構成要素、つまりRDNには番号が付けられています。n個のRDNを持つLDAP名のインデックスは、0からn-1までの範囲である。この範囲は[0,n]と書くことができます。右端のRDNはインデックス0にあり、左端のRDNはインデックスn-1にある。例えば、識別名「CN=Steve Kille,O=Isode Limited,C=GB」は、0から2までの範囲で{C=GB,O=Isode Limited,CN=Steve Kille}のように番号が付けられている。空のLDAP名は、空のRDNリストで表される。</target>
        </trans-unit>
        <trans-unit id="5dc21cc1b67ef648051518375f8f7207d80d43fb" translate="yes" xml:space="preserve">
          <source>The components of a composite name are numbered. The indexes of a composite name with N components range from 0 up to, but not including, N. This range may be written as [0,N). The most significant component is at index 0. An empty composite name has no components.</source>
          <target state="translated">複合名の構成要素には番号が付けられている。N個の構成要素を持つ複合名のインデックスは、0からNまでの範囲であるが、Nを含まない。最も重要な構成要素はインデックス0にある。空の複合名は構成要素を持たない。</target>
        </trans-unit>
        <trans-unit id="14a1f972f1e3053de3d05dc8a5b4d01708c7f345" translate="yes" xml:space="preserve">
          <source>The components of a compound name are numbered. The indexes of a compound name with N components range from 0 up to, but not including, N. This range may be written as [0,N). The most significant component is at index 0. An empty compound name has no components.</source>
          <target state="translated">複合名の構成要素には番号が付けられています。N個の構成要素を持つ複合名のインデックスは、0からNまでの範囲ですが、Nは含まれていません。最も重要な構成要素はインデックス 0 にあります。空の複合名には構成要素がありません。</target>
        </trans-unit>
        <trans-unit id="3bfe595dae00ecadd506655e42ccf5b0136b9bf1" translate="yes" xml:space="preserve">
          <source>The components of a name are numbered. The indexes of a name with N components range from 0 up to, but not including, N. This range may be written as [0,N). The most significant component is at index 0. An empty name has no components.</source>
          <target state="translated">名前の構成要素には番号が付けられています。N個の構成要素を持つ名前のインデックスは、0からNまでの範囲ですが、Nは含まれません。最も重要な構成要素はインデックス0にあります。空の名前には構成要素がありません。</target>
        </trans-unit>
        <trans-unit id="a53895bd7db05674c11082dd6d7f96a64be863b9" translate="yes" xml:space="preserve">
          <source>The components.</source>
          <target state="translated">コンポーネントです。</target>
        </trans-unit>
        <trans-unit id="f9f1515300716b621407634206b763efbbba541c" translate="yes" xml:space="preserve">
          <source>The compound edit.</source>
          <target state="translated">複合編集です。</target>
        </trans-unit>
        <trans-unit id="5352c3728b0e0385e152a82e295d498e4fb174ac" translate="yes" xml:space="preserve">
          <source>The compression type strings and the image type(s) each supports are listed in the following table:</source>
          <target state="translated">圧縮タイプの文字列と、それぞれがサポートしている画像タイプを以下の表に示します。</target>
        </trans-unit>
        <trans-unit id="d9412d65799f7d144a7050330acbbbef5abfaf9b" translate="yes" xml:space="preserve">
          <source>The computation is specified in &lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#adding-durations-to-dateTimes&quot;&gt;XML Schema 1.0 Part 2, Appendix E, &lt;i&gt;Adding durations to dateTimes&lt;/i&gt;&lt;/a&gt;. &lt;a href=&quot;#datetimefieldmapping&quot;&gt;date/time field mapping table&lt;/a&gt; defines the mapping from XML Schema 1.0 &lt;code&gt;dateTime&lt;/code&gt; fields to this class' representation of those fields.</source>
          <target state="translated">計算は、&lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#adding-durations-to-dateTimes&quot;&gt;XMLスキーマ1.0パート2、付録E、&lt;i&gt;dateTimesへの期間の追加で&lt;/i&gt;&lt;/a&gt;指定されています。&lt;a href=&quot;#datetimefieldmapping&quot;&gt;日付/時刻フィールドマッピングテーブル&lt;/a&gt;は、XMLスキーマ1.0の &lt;code&gt;dateTime&lt;/code&gt; フィールドからこれらのフィールドのこのクラスの表現へのマッピングを定義します。</target>
        </trans-unit>
        <trans-unit id="982bc19242c5ed0c7f0eea7d10d969d4bfd2f401" translate="yes" xml:space="preserve">
          <source>The computation of the value returned by this method is similar to that of the value returned by &lt;a href=&quot;list#hashCode()&quot;&gt;&lt;code&gt;List.hashCode()&lt;/code&gt;&lt;/a&gt; on a list containing the same elements as &lt;code&gt;a&lt;/code&gt; in the same order, with one difference: If an element &lt;code&gt;e&lt;/code&gt; of &lt;code&gt;a&lt;/code&gt; is itself an array, its hash code is computed not by calling &lt;code&gt;e.hashCode()&lt;/code&gt;, but as by calling the appropriate overloading of &lt;code&gt;Arrays.hashCode(e)&lt;/code&gt; if &lt;code&gt;e&lt;/code&gt; is an array of a primitive type, or as by calling &lt;code&gt;Arrays.deepHashCode(e)&lt;/code&gt; recursively if &lt;code&gt;e&lt;/code&gt; is an array of a reference type. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値の計算は、によって返された値と同様である&lt;a href=&quot;list#hashCode()&quot;&gt; &lt;code&gt;List.hashCode()&lt;/code&gt; &lt;/a&gt;と同じ要素を含むリスト上の一つの違いで、同じ順序で：要素の場合 &lt;code&gt;e&lt;/code&gt; のそのものであります配列の場合、そのハッシュコードは、 &lt;code&gt;e.hashCode()&lt;/code&gt; を呼び出すことによってではなく、 &lt;code&gt;e&lt;/code&gt; がプリミティブ型の配列である場合は &lt;code&gt;Arrays.hashCode(e)&lt;/code&gt; の適切なオーバーロードを呼び出すことによって、または &lt;code&gt;Arrays.deepHashCode(e)&lt;/code&gt; を呼び出すことによって計算されます。 &lt;code&gt;e&lt;/code&gt; が参照型の配列である場合、再帰的に。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="de48d26fe33c726460e7d2fda077c5a4d41c831c" translate="yes" xml:space="preserve">
          <source>The computation of the value returned by this method is similar to that of the value returned by &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;List.hashCode()&lt;/code&gt;&lt;/a&gt; on a list containing the same elements as &lt;code&gt;a&lt;/code&gt; in the same order, with one difference: If an element &lt;code&gt;e&lt;/code&gt; of &lt;code&gt;a&lt;/code&gt; is itself an array, its hash code is computed not by calling &lt;code&gt;e.hashCode()&lt;/code&gt;, but as by calling the appropriate overloading of &lt;code&gt;Arrays.hashCode(e)&lt;/code&gt; if &lt;code&gt;e&lt;/code&gt; is an array of a primitive type, or as by calling &lt;code&gt;Arrays.deepHashCode(e)&lt;/code&gt; recursively if &lt;code&gt;e&lt;/code&gt; is an array of a reference type. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値の計算は、によって返された値と同様である&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;List.hashCode()&lt;/code&gt; &lt;/a&gt;と同じ要素を含むリスト上の一つの違いで、同じ順序で：要素の場合 &lt;code&gt;e&lt;/code&gt; のそのものであります配列の場合、そのハッシュコードは &lt;code&gt;e.hashCode()&lt;/code&gt; を呼び出すのではなく、 &lt;code&gt;e&lt;/code&gt; がプリミティブ型の配列の場合は &lt;code&gt;Arrays.hashCode(e)&lt;/code&gt; の適切なオーバーロードを呼び出すことによって、または &lt;code&gt;Arrays.deepHashCode(e)&lt;/code&gt; を呼び出すことによって計算されます。 &lt;code&gt;e&lt;/code&gt; が参照型の配列の場合、再帰的に。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="214bb0bb62df51550823153b8ce29f6dab115c3a" translate="yes" xml:space="preserve">
          <source>The computation performed by a stage may be expressed as a Function, Consumer, or Runnable (using methods with names including &lt;em&gt;apply&lt;/em&gt;, &lt;em&gt;accept&lt;/em&gt;, or &lt;em&gt;run&lt;/em&gt;, respectively) depending on whether it requires arguments and/or produces results. For example, &lt;code&gt;stage.thenApply(x -&amp;gt; square(x)).thenAccept(x -&amp;gt;
 System.out.print(x)).thenRun(() -&amp;gt; System.out.println())&lt;/code&gt;. An additional form (&lt;em&gt;compose&lt;/em&gt;) applies functions of stages themselves, rather than their results.</source>
          <target state="translated">ステージによって実行される計算は、引数が必要か、結果を生成するかによって、関数、コンシューマー、または&lt;em&gt;実行可能&lt;/em&gt;として（それぞれ&lt;em&gt;apply&lt;/em&gt;、&lt;em&gt;accept&lt;/em&gt;、または&lt;em&gt;run&lt;/em&gt;を含む名前のメソッドを使用して）表すことができます。たとえば、 &lt;code&gt;stage.thenApply(x -&amp;gt; square(x)).thenAccept(x -&amp;gt; System.out.print(x)).thenRun(() -&amp;gt; System.out.println())&lt;/code&gt; ます。追加のフォーム（&lt;em&gt;compose&lt;/em&gt;）は、結果ではなく、ステージ自体の関数を適用します。</target>
        </trans-unit>
        <trans-unit id="5fb29aadd15fe6f9ced78a3f9d83f727b656a835" translate="yes" xml:space="preserve">
          <source>The computation performed by a stage may be expressed as a Function, Consumer, or Runnable (using methods with names including &lt;em&gt;apply&lt;/em&gt;, &lt;em&gt;accept&lt;/em&gt;, or &lt;em&gt;run&lt;/em&gt;, respectively) depending on whether it requires arguments and/or produces results. For example:</source>
          <target state="translated">ステージによって実行される計算は、引数が必要か結果を生成するかに応じて、関数、コンシューマー、または&lt;em&gt;実行可能&lt;/em&gt;（それぞれ、&lt;em&gt;apply&lt;/em&gt;、&lt;em&gt;accept&lt;/em&gt;、&lt;em&gt;run&lt;/em&gt;などの名前のメソッドを使用）として表すことができます。例えば：</target>
        </trans-unit>
        <trans-unit id="1691fd27bc6e097f4599ed6bb1fc28887a525083" translate="yes" xml:space="preserve">
          <source>The computations for day-of-week, week-of-month, and week-of-year are based on the &lt;a href=&quot;chronofield#YEAR&quot;&gt;proleptic-year&lt;/a&gt;, &lt;a href=&quot;chronofield#MONTH_OF_YEAR&quot;&gt;month-of-year&lt;/a&gt;, &lt;a href=&quot;chronofield#DAY_OF_MONTH&quot;&gt;day-of-month&lt;/a&gt;, and &lt;a href=&quot;chronofield#DAY_OF_WEEK&quot;&gt;ISO day-of-week&lt;/a&gt; which are based on the &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;epoch-day&lt;/a&gt; and the chronology. The values may not be aligned with the &lt;a href=&quot;chronofield#YEAR_OF_ERA&quot;&gt;year-of-Era&lt;/a&gt; depending on the Chronology.</source>
          <target state="translated">曜日のための計算、週-の-月、週-の年はに基づいています&lt;a href=&quot;chronofield#YEAR&quot;&gt;proleptic年&lt;/a&gt;、&lt;a href=&quot;chronofield#MONTH_OF_YEAR&quot;&gt;月-の年&lt;/a&gt;、&lt;a href=&quot;chronofield#DAY_OF_MONTH&quot;&gt;日のヶ月&lt;/a&gt;、および&lt;a href=&quot;chronofield#DAY_OF_WEEK&quot;&gt;ISOの曜日&lt;/a&gt;であります&lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;時代&lt;/a&gt;と年代に基づいています。年代順によっては、値が&lt;a href=&quot;chronofield#YEAR_OF_ERA&quot;&gt;年号&lt;/a&gt;と一致しない場合があります。</target>
        </trans-unit>
        <trans-unit id="ddb607d0cbc2d88b925fbad2202c59f052a09097" translate="yes" xml:space="preserve">
          <source>The computed average can vary numerically and have the special case behavior as computing the sum; see &lt;a href=&quot;#getSum()&quot;&gt;&lt;code&gt;getSum()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">計算された平均は数値的に変化する可能性があり、合計を計算するときの特殊なケースの動作があります。詳細については、&lt;a href=&quot;#getSum()&quot;&gt; &lt;code&gt;getSum()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a1dceb73e2dcd8fada2a458e771cdcb91f02b518" translate="yes" xml:space="preserve">
          <source>The computed average can vary numerically and have the special case behavior as computing the sum; see &lt;a href=&quot;#sum()&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">計算された平均は数値的に変化する可能性があり、合計を計算するときの特殊なケースの動作があります。詳細については、&lt;a href=&quot;#sum()&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e0a314c28965a5184605c91a9dd77e2a63a6282c" translate="yes" xml:space="preserve">
          <source>The computed result must be within 1 ulp of the exact result.</source>
          <target state="translated">計算された結果は、正確な結果から1 ulp以内でなければなりません。</target>
        </trans-unit>
        <trans-unit id="778968ebec250a920a57d7938e53b3467b9d8fb1" translate="yes" xml:space="preserve">
          <source>The computed result must be within 1 ulp of the exact result. If one parameter is held constant, the results must be semi-monotonic in the other parameter.</source>
          <target state="translated">計算された結果は、正確な結果から1 ulp以内でなければなりません。1つのパラメータが一定の場合、結果は他のパラメータで半単調でなければなりません。</target>
        </trans-unit>
        <trans-unit id="a6674b79e473f3879ed7bc38a2aea8ceb42331e7" translate="yes" xml:space="preserve">
          <source>The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic.</source>
          <target state="translated">計算された結果は、正確な結果から1 ulp以内でなければならない。結果は半単調でなければなりません。</target>
        </trans-unit>
        <trans-unit id="a95667f460b33082c1f4875f29adeb6b10893583" translate="yes" xml:space="preserve">
          <source>The computed result must be within 1 ulp of the exact result. Results must be semi-monotonic. The result of &lt;code&gt;expm1&lt;/code&gt; for any finite input must be greater than or equal to &lt;code&gt;-1.0&lt;/code&gt;. Note that once the exact result of</source>
          <target state="translated">計算結果は、正確な結果の1 ulp以内である必要があります。結果は半単調でなければなりません。有限入力の &lt;code&gt;expm1&lt;/code&gt; の結果は、 &lt;code&gt;-1.0&lt;/code&gt; 以上でなければなりません。の正確な結果が</target>
        </trans-unit>
        <trans-unit id="051083ed8bd5eb53cc6b0a3e3e4e3a859c790084" translate="yes" xml:space="preserve">
          <source>The computed result must be within 2 ulps of the exact result. Results must be semi-monotonic.</source>
          <target state="translated">計算された結果は、正確な結果から2 ulps以内でなければならない。結果は半単調でなければなりません。</target>
        </trans-unit>
        <trans-unit id="8e8d50f4531c22cdf1c57032345e12f930311bee" translate="yes" xml:space="preserve">
          <source>The computed result must be within 2.5 ulps of the exact result.</source>
          <target state="translated">計算された結果は、正確な結果から2.5 ulps以内でなければなりません。</target>
        </trans-unit>
        <trans-unit id="5716b70a97e32988d2cb0c294378ce7e42458ba1" translate="yes" xml:space="preserve">
          <source>The computed result must be within 2.5 ulps of the exact result. The result of &lt;code&gt;tanh&lt;/code&gt; for any finite input must have an absolute value less than or equal to 1. Note that once the exact result of tanh is within 1/2 of an ulp of the limit value of &amp;plusmn;1, correctly signed &amp;plusmn;&lt;code&gt;1.0&lt;/code&gt; should be returned.</source>
          <target state="translated">計算結果は、正確な結果の2.5 ulp以内である必要があります。有限入力の &lt;code&gt;tanh&lt;/code&gt; の結果は、1以下の絶対値でなければなりません。tanhの正確な結果が&amp;plusmn;1の限界値のulpの1/2以内になったら、正しく符号付き&amp;plusmn; &lt;code&gt;1.0&lt;/code&gt; にする必要があります。戻ってきた。</target>
        </trans-unit>
        <trans-unit id="caefa96ef052b328b6ab54a78509cbcd82bb3a6d" translate="yes" xml:space="preserve">
          <source>The concatenation &lt;em&gt;recipe&lt;/em&gt; is a String description for the way to construct a concatenated String from the arguments and constants. The recipe is processed from left to right, and each character represents an input to concatenation. Recipe characters mean:</source>
          <target state="translated">連結&lt;em&gt;レシピ&lt;/em&gt;は、引数と定数から連結された文字列を作成する方法の文字列の説明です。レシピは左から右に処理され、各文字は連結への入力を表します。レシピ文字の意味：</target>
        </trans-unit>
        <trans-unit id="e44ba5b29ec6b29fa13a1c0b35b2b236c3e56f08" translate="yes" xml:space="preserve">
          <source>The concepts are easier to understand by comparison with the Standard MBean concept. Here is how a managed object might be represented as a Standard MBean, and as an MXBean:</source>
          <target state="translated">概念は Standard MBean の概念と比較すると理解しやすいです。ここでは、管理されたオブジェクトが標準MBeanとして、MXBeanとしてどのように表現されるかを示しています。</target>
        </trans-unit>
        <trans-unit id="406e4cef7e07251a93d230aa3d12ee538ab9badb" translate="yes" xml:space="preserve">
          <source>The conceptual distinction between URIs and URLs is reflected in the differences between this class and the &lt;a href=&quot;url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">URIとURLの概念的な違いは、このクラスと&lt;a href=&quot;url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;クラスの違いに反映されています。</target>
        </trans-unit>
        <trans-unit id="07517dfd669419de18de761dd5d44e2d407cd858" translate="yes" xml:space="preserve">
          <source>The concurrency properties of bulk operations follow from those of ConcurrentHashMap: Any non-null result returned from &lt;code&gt;get(key)&lt;/code&gt; and related access methods bears a happens-before relation with the associated insertion or update. The result of any bulk operation reflects the composition of these per-element relations (but is not necessarily atomic with respect to the map as a whole unless it is somehow known to be quiescent). Conversely, because keys and values in the map are never null, null serves as a reliable atomic indicator of the current lack of any result. To maintain this property, null serves as an implicit basis for all non-scalar reduction operations. For the double, long, and int versions, the basis should be one that, when combined with any other value, returns that other value (more formally, it should be the identity element for the reduction). Most common reductions have these properties; for example, computing a sum with basis 0 or a minimum with basis MAX_VALUE.</source>
          <target state="translated">一括操作の同時実行プロパティは、ConcurrentHashMapの同時実行プロパティに従います。get &lt;code&gt;get(key)&lt;/code&gt; から返されるnull以外の結果関連するアクセス方法は、関連する挿入または更新との前に発生する関係を担います。一括操作の結果は、これらの要素ごとの関係の構成を反映します（ただし、静止していることが何らかの形で知られている場合を除き、マップ全体に関して必ずしもアトミックではありません）。逆に、マップ内のキーと値がnullになることはないため、nullは現在の結果の欠如の信頼できるアトミックインジケーターとして機能します。このプロパティを維持するために、nullはすべての非スカラー縮約操作の暗黙的な基礎として機能します。 double、long、およびintバージョンの場合、基底は、他の値と組み合わせると、その他の値を返すものでなければなりません（より正式には、リダクションの単位要素でなければなりません）。最も一般的な削減にはこれらの特性があります。例えば、基底0の合計または基底MAX_VALUEの最小値を計算します。</target>
        </trans-unit>
        <trans-unit id="0177e5099b5a24620627e890b703a5635812dcbd" translate="yes" xml:space="preserve">
          <source>The condition &quot;at least one&quot;, allows for the stream to represent a single OpenType/TrueType font. That is, it does not have to be a collection. Each &lt;code&gt;Font&lt;/code&gt; element of the returned array is created with a point size of 1 and style &lt;a href=&quot;#PLAIN&quot;&gt;&lt;code&gt;PLAIN&lt;/code&gt;&lt;/a&gt;. This base font can then be used with the &lt;code&gt;deriveFont&lt;/code&gt; methods in this class to derive new &lt;code&gt;Font&lt;/code&gt; objects with varying sizes, styles, transforms and font features.</source>
          <target state="translated">「少なくとも1つ」という条件により、ストリームは単一のOpenType / TrueTypeフォントを表すことができます。つまり、コレクションである必要はありません。返される配列の各 &lt;code&gt;Font&lt;/code&gt; 要素は、ポイントサイズ1とスタイル&lt;a href=&quot;#PLAIN&quot;&gt; &lt;code&gt;PLAIN&lt;/code&gt; &lt;/a&gt;で作成されます。次に、このベースフォントをこのクラスの &lt;code&gt;deriveFont&lt;/code&gt; メソッドとともに使用して、さまざまなサイズ、スタイル、変換、およびフォント機能を持つ新しい &lt;code&gt;Font&lt;/code&gt; オブジェクトを派生させることができます。</target>
        </trans-unit>
        <trans-unit id="695bcb81bf8921f2b489db3866dc5c4b73eb01e2" translate="yes" xml:space="preserve">
          <source>The conditional constructs &lt;code&gt;(?(&lt;/code&gt;</source>
          <target state="translated">条件付き構文 &lt;code&gt;(?(&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f9289d113f06c7752017512ddee95d8472dadf4" translate="yes" xml:space="preserve">
          <source>The configuration files and their corresponding implementation classes must be accessible to the calling thread's context class loader.</source>
          <target state="translated">設定ファイルとそれに対応する実装クラスは、呼び出し元のスレッドのコンテキストクラスローダからアクセス可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="67915cac37b5ed3df9143b84fd02ccd029e4fef0" translate="yes" xml:space="preserve">
          <source>The configuration for this layer</source>
          <target state="translated">このレイヤーの構成</target>
        </trans-unit>
        <trans-unit id="7cf1b97986252f8182b0494aee4713a2ba71b725" translate="yes" xml:space="preserve">
          <source>The configuration that is the result of resolving the given root modules</source>
          <target state="translated">与えられたルートモジュールを解決した結果の設定</target>
        </trans-unit>
        <trans-unit id="460b076b9564463bd67cc2aa7ccd2428240d42e4" translate="yes" xml:space="preserve">
          <source>The configuration that is the result of resolving, with service binding, the given root modules</source>
          <target state="translated">サービスバインディングを使って、与えられたルートモジュールを解決した結果の設定。</target>
        </trans-unit>
        <trans-unit id="87ddf802905b04393ef126f10b00b5349dee42e7" translate="yes" xml:space="preserve">
          <source>The configuration that this resolved module is in</source>
          <target state="translated">この解決されたモジュールが存在する構成</target>
        </trans-unit>
        <trans-unit id="cd4ed8e3b11b7499b708bf5b280daf2c93be9437" translate="yes" xml:space="preserve">
          <source>The configuration used when &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; is invoked.</source>
          <target state="translated">&lt;code&gt;Document.normalizeDocument()&lt;/code&gt; が呼び出されたときに使用される構成。</target>
        </trans-unit>
        <trans-unit id="0bd8196d8a21097374666c4e69a129e9d0dc940d" translate="yes" xml:space="preserve">
          <source>The conjunction of the two arguments. The returned object will be serialized as an instance of the non-public class  javax.management.AndQueryExp.</source>
          <target state="translated">2 つの引数の連結子。返されたオブジェクトは、非公開クラス javax.management.AndQueryExp のインスタンスとしてシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="df8419feaf868f19c89f57a3cf0c6c1df8342b7a" translate="yes" xml:space="preserve">
          <source>The conjunction of the two arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.AndQueryExp&quot;&gt; javax.management.AndQueryExp&lt;/a&gt;.</source>
          <target state="translated">2つの引数の接続詞。返されるオブジェクトは、非パブリッククラス&lt;a href=&quot;../../serialized-form#javax.management.AndQueryExp&quot;&gt;javax.management.AndQueryExpの&lt;/a&gt;インスタンスとしてシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="fb86bc8294f16c5649875c6782a7b1a216e845cc" translate="yes" xml:space="preserve">
          <source>The connection ID to which this notification pertains.</source>
          <target state="translated">この通知が属する接続ID。</target>
        </trans-unit>
        <trans-unit id="0f1333f703284ac3447568cf04dfa131b985aa2e" translate="yes" xml:space="preserve">
          <source>The connection marked as closed</source>
          <target state="translated">閉じたと表示された接続</target>
        </trans-unit>
        <trans-unit id="77a8462c229d42343c33ea746d63cf832a294cb2" translate="yes" xml:space="preserve">
          <source>The connection object is created by invoking the &lt;a href=&quot;url#openConnection()&quot;&gt;&lt;code&gt;openConnection&lt;/code&gt;&lt;/a&gt; method on a URL.</source>
          <target state="translated">接続オブジェクトは、URLで&lt;a href=&quot;url#openConnection()&quot;&gt; &lt;code&gt;openConnection&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって作成されます。</target>
        </trans-unit>
        <trans-unit id="f8ff508fdc1ac8bc4959ca20489757c5f0a674de" translate="yes" xml:space="preserve">
          <source>The connection object is created by invoking the &lt;code&gt;openConnection&lt;/code&gt; method on a URL.</source>
          <target state="translated">接続オブジェクトは、URLで &lt;code&gt;openConnection&lt;/code&gt; メソッドを呼び出すことによって作成されます。</target>
        </trans-unit>
        <trans-unit id="6b706255d25f867144ee0aea048db9671e2656fd" translate="yes" xml:space="preserve">
          <source>The connection pool caches &lt;code&gt;PooledConnection&lt;/code&gt; objects</source>
          <target state="translated">接続プールは &lt;code&gt;PooledConnection&lt;/code&gt; オブジェクトをキャッシュします</target>
        </trans-unit>
        <trans-unit id="8b2513222bb14fcd13a9a5198558492e851f386e" translate="yes" xml:space="preserve">
          <source>The connection pool manager, a facility in the middle tier of a three-tier architecture, uses these classes and interfaces behind the scenes. When a &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; object is called on to create a &lt;code&gt;PooledConnection&lt;/code&gt; object, the connection pool manager will register as a &lt;code&gt;ConnectionEventListener&lt;/code&gt; object with the new &lt;code&gt;PooledConnection&lt;/code&gt; object. When the connection is closed or there is an error, the connection pool manager (being a listener) gets a notification that includes a &lt;code&gt;ConnectionEvent&lt;/code&gt; object.</source>
          <target state="translated">3層アーキテクチャの中間層にある機能である接続プールマネージャは、これらのクラスとインターフェイスをバックグラウンドで使用します。とき &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; オブジェクトを作成するために呼び出された &lt;code&gt;PooledConnection&lt;/code&gt; オブジェクトを、接続プールマネージャはとして登録されます &lt;code&gt;ConnectionEventListener&lt;/code&gt; newでオブジェクト &lt;code&gt;PooledConnection&lt;/code&gt; オブジェクト。接続が閉じられるか、エラーが発生すると、接続プールマネージャ（リスナー）は、 &lt;code&gt;ConnectionEvent&lt;/code&gt; オブジェクトを含む通知を受け取ります。</target>
        </trans-unit>
        <trans-unit id="05f67c24a463f860503de09a41c8bd605d5134fa" translate="yes" xml:space="preserve">
          <source>The connection pool manager, typically the application server, maintains a pool of &lt;code&gt;PooledConnection&lt;/code&gt; objects. If there is a &lt;code&gt;PooledConnection&lt;/code&gt; object available in the pool, the connection pool manager returns a &lt;code&gt;Connection&lt;/code&gt; object that is a handle to that physical connection. If no &lt;code&gt;PooledConnection&lt;/code&gt; object is available, the connection pool manager calls the &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; method &lt;code&gt;getPoolConnection&lt;/code&gt; to create a new physical connection. The JDBC driver implementing &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; creates a new &lt;code&gt;PooledConnection&lt;/code&gt; object and returns a handle to it.</source>
          <target state="translated">接続プールマネージャ（通常はアプリケーションサーバー）は、 &lt;code&gt;PooledConnection&lt;/code&gt; オブジェクトのプールを維持します。プールで使用可能な &lt;code&gt;PooledConnection&lt;/code&gt; オブジェクトがある場合、接続プールマネージャは、その物理接続へのハンドルである &lt;code&gt;Connection&lt;/code&gt; オブジェクトを返します。使用可能な &lt;code&gt;PooledConnection&lt;/code&gt; オブジェクトがない場合、接続プールマネージャは &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; メソッド &lt;code&gt;getPoolConnection&lt;/code&gt; を呼び出して、新しい物理接続を作成します。 &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; を実装するJDBCドライバーは、新しい &lt;code&gt;PooledConnection&lt;/code&gt; オブジェクトを作成し、そのオブジェクトへのハンドルを返します。</target>
        </trans-unit>
        <trans-unit id="4bf3f0b24f5fc2578f012d12e58c3560045b0a7b" translate="yes" xml:space="preserve">
          <source>The connection to the JAR file URL, if the connection has been initiated.</source>
          <target state="translated">接続が開始されている場合は、JARファイルのURLへの接続。</target>
        </trans-unit>
        <trans-unit id="c2f7f112153c54fb4cda2b130cddc1d8821a798f" translate="yes" xml:space="preserve">
          <source>The connection to the JAR file URL, if the connection has been initiated. This should be set by connect.</source>
          <target state="translated">接続が開始されている場合は、JARファイルのURLへの接続を指定します。これは connect で設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="2fdbc77cf21a62029729ae4d767690b0796a4208" translate="yes" xml:space="preserve">
          <source>The connector server will generate an &lt;code&gt;RMIServerImpl&lt;/code&gt; based on the protocol (&lt;code&gt;rmi&lt;/code&gt; or &lt;code&gt;iiop&lt;/code&gt;) and, for &lt;code&gt;rmi&lt;/code&gt;, the &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; if any. When the connector server is started, it will derive a stub from this object using its &lt;a href=&quot;rmiserverimpl#toStub--&quot;&gt;&lt;code&gt;toStub&lt;/code&gt;&lt;/a&gt; method and store the object using the given &lt;code&gt;&lt;em&gt;jndi-name&lt;/em&gt;&lt;/code&gt;. The properties defined by the JNDI API are consulted as usual.</source>
          <target state="translated">コネクタサーバーは、プロトコル（ &lt;code&gt;rmi&lt;/code&gt; または &lt;code&gt;iiop&lt;/code&gt; ）に基づいて &lt;code&gt;RMIServerImpl&lt;/code&gt; を生成し、 &lt;code&gt;rmi&lt;/code&gt; の場合は、 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; あればそれを生成します。コネクター・サーバーが始動すると、&lt;a href=&quot;rmiserverimpl#toStub--&quot;&gt; &lt;code&gt;toStub&lt;/code&gt; &lt;/a&gt;メソッドを使用してこのオブジェクトからスタブを派生させ、指定された &lt;code&gt;&lt;em&gt;jndi-name&lt;/em&gt;&lt;/code&gt; を使用してオブジェクトを保管します。JNDI APIによって定義されたプロパティは、通常どおり参照されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="597a246dc02ad6af93aee81a400210fcabff15c5" translate="yes" xml:space="preserve">
          <source>The connector server will generate an &lt;code&gt;RMIServerImpl&lt;/code&gt; based on the protocol (&lt;code&gt;rmi&lt;/code&gt;) and the &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; if any. When the connector server is started, it will derive a stub from this object using its &lt;a href=&quot;rmiserverimpl#toStub()&quot;&gt;&lt;code&gt;toStub&lt;/code&gt;&lt;/a&gt; method and store the object using the given &lt;code&gt;&lt;em&gt;jndi-name&lt;/em&gt;&lt;/code&gt;. The properties defined by the JNDI API are consulted as usual.</source>
          <target state="translated">コネクタサーバーは、プロトコル（ &lt;code&gt;rmi&lt;/code&gt; ）と &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 場合）に基づいて &lt;code&gt;RMIServerImpl&lt;/code&gt; を生成します。コネクタサーバーが起動すると、&lt;a href=&quot;rmiserverimpl#toStub()&quot;&gt; &lt;code&gt;toStub&lt;/code&gt; &lt;/a&gt;メソッドを使用してこのオブジェクトからスタブを取得し、指定された &lt;code&gt;&lt;em&gt;jndi-name&lt;/em&gt;&lt;/code&gt; を使用してオブジェクトを格納します。JNDI APIによって定義されたプロパティは、通常どおり参照されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9dd5ae6d1e3cade50eb6caf2c268a1278764c4fb" translate="yes" xml:space="preserve">
          <source>The console-read methods return &lt;code&gt;null&lt;/code&gt; when the end of the console input stream is reached, for example by typing control-D on Unix or control-Z on Windows. Subsequent read operations will succeed if additional characters are later entered on the console's input device.</source>
          <target state="translated">コンソール入力ストリームの最後に到達すると、コンソール読み取りメソッドは &lt;code&gt;null&lt;/code&gt; を返します。たとえば、Unixではcontrol-D、Windowsではcontrol-Zを入力します。以降の読み取り操作は、後でコンソールの入力デバイスに追加の文字が入力された場合に成功します。</target>
        </trans-unit>
        <trans-unit id="bbceea72f03400ac03f5cf54635d41e749e41beb" translate="yes" xml:space="preserve">
          <source>The constant &lt;a href=&quot;#TYPE_USE&quot;&gt;&lt;code&gt;TYPE_USE&lt;/code&gt;&lt;/a&gt; corresponds to the type contexts in JLS 4.11, as well as to two declaration contexts: type declarations (including annotation type declarations) and type parameter declarations.</source>
          <target state="translated">定数&lt;a href=&quot;#TYPE_USE&quot;&gt; &lt;code&gt;TYPE_USE&lt;/code&gt; &lt;/a&gt;は、JLS 4.11の型コンテキスト、および2つの宣言コンテキスト（型宣言（注釈型宣言を含む）と型パラメーター宣言）に対応します。</target>
        </trans-unit>
        <trans-unit id="bf3c6b7bb1907894e51344d6616a6e7cb10386dc" translate="yes" xml:space="preserve">
          <source>The constant &lt;a href=&quot;elementtype#TYPE_USE&quot;&gt;&lt;code&gt;TYPE_USE&lt;/code&gt;&lt;/a&gt; corresponds to the 15 type contexts in JLS 4.11, as well as to two declaration contexts: type declarations (including annotation type declarations) and type parameter declarations.</source>
          <target state="translated">定数&lt;a href=&quot;elementtype#TYPE_USE&quot;&gt; &lt;code&gt;TYPE_USE&lt;/code&gt; &lt;/a&gt;は、JLS 4.11の15の型コンテキストと、型宣言（注釈型宣言を含む）と型パラメーター宣言の2つの宣言コンテキストに対応しています。</target>
        </trans-unit>
        <trans-unit id="a9849d91e204ee300c9a505f6ac5aae8791e465f" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language that identifies the generic SQL value &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">汎用SQL値 &lt;code&gt;NULL&lt;/code&gt; を識別するJavaプログラミング言語の定数。</target>
        </trans-unit>
        <trans-unit id="4a2baf97c4a8212ee0c2130a4eac22ba4871c97a" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language that indicates that the SQL type is database-specific and gets mapped to a Java object that can be accessed via the methods &lt;code&gt;getObject&lt;/code&gt; and &lt;code&gt;setObject&lt;/code&gt;.</source>
          <target state="translated">SQL型がデータベース固有であり、メソッド &lt;code&gt;getObject&lt;/code&gt; および &lt;code&gt;setObject&lt;/code&gt; を介してアクセスできるJavaオブジェクトにマップされることを示すJavaプログラミング言語の定数。</target>
        </trans-unit>
        <trans-unit id="e9b34b17b9fadcdab08ee0a67c1c58f5c1d67b99" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;ARRAY&lt;/code&gt;.</source>
          <target state="translated">一般的なSQL型 &lt;code&gt;ARRAY&lt;/code&gt; を識別するJavaプログラミング言語の定数（型コードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="efd5d93e142e2167fe9c9f1900126b23d13a6435" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;BIGINT&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;BIGINT&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="6aabb2d467b4a4fb56551c5a3a6b5dbacd2362fe" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;BINARY&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;BINARY&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="4610b2dcb887998d571fb7b3badc63fe134e81a6" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;BIT&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;BIT&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="8bdfffe4be538ee2a4c0c9f7043ccd5fb19d21eb" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;BLOB&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;BLOB&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="63436c20c1c5a1b8ba2d6cf0e69e94dffeca9ffb" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;BOOLEAN&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;BOOLEAN&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="131f315071e884813376644ebcffc1638878155c" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;CHAR&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;CHAR&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="08948cf88f5959eb4650f96302135816effba259" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;CLOB&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;CLOB&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="2c801ff0b2b9bbd717c9c47504d9aaadd81206cb" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;DATALINK&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;DATALINK&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="87009228d84461f533423c0551908ae99a774058" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;DATE&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;DATE&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="a7f6f88f97e7b4a3d1310d66ba86013f71b38e6f" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;DECIMAL&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;DECIMAL&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="70c178e69ab1081be7d66dfb7d0480ccacc9ee89" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;DISTINCT&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;DISTINCT&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="df790144e14be5e5dc5b5bbadd577b0e46864fb2" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;DOUBLE&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;DOUBLE&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="e7ce1652610d1e801fd0d7c3b5bf92660f9dd0c1" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;FLOAT&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;FLOAT&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="fedc3c1c37b0fc8b48afd8fcdbe32cdf000fe97f" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;INTEGER&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;INTEGER&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="7e02d0ce8a4f06c97628c40061f186f1c74ab284" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;JAVA_OBJECT&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;JAVA_OBJECT&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="fc1fe159924fa984d54bf27e151d848f1fedcf3b" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;LONGNVARCHAR&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;LONGNVARCHAR&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="13b4d954fbab9bb37ce708d2bd9ee16d97fcb3ca" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;LONGVARBINARY&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;LONGVARBINARY&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="05a59f5558ab08aae4f7b11f7868590637f7dfba" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;LONGVARCHAR&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;LONGVARCHAR&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="02de06597adff96858bb3c1af129679230494a59" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;NCHAR&lt;/code&gt;</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;NCHAR&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）</target>
        </trans-unit>
        <trans-unit id="e47a9be0e85e54c324177811aa47af5d83f5c82a" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;NCLOB&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;NCLOB&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="d715a7573195bb84903b60e4f39038f0ba1078cf" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;NUMERIC&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;NUMERIC&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="985dc7b26354c3b6e28bf3548bc9f547cfa593ac" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;NVARCHAR&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;NVARCHAR&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="63a9960427d7d4deeea4c62d55aa787679ff7ac7" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;REAL&lt;/code&gt;.</source>
          <target state="translated">汎用SQL型 &lt;code&gt;REAL&lt;/code&gt; を識別するJavaプログラミング言語の定数（型コードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="72ba4a3927cd6ebdf674609af3227b323ddf1c67" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;REF CURSOR&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;REF CURSOR&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="2f829ef54e8127993158d9916ec759e970d686f0" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;REF&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;REF&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="6c2f8da00f54808618ee1a654687c7c4bdbdc9ad" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;ROWID&lt;/code&gt;</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;ROWID&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）</target>
        </trans-unit>
        <trans-unit id="540844afe7db33f8bdcc3c0a7c8198fb17c890dc" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;SMALLINT&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;SMALLINT&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="4f87ed83e0c15393c32fd3a7dbb7f959726057cf" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;STRUCT&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;STRUCT&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="60bab42f3f50297acd1ceed97962f6a7bff20366" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;TIME WITH TIMEZONE&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;TIME WITH TIMEZONE&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="c172a9e9f1dfa3cc55f26397955cb600145972e6" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;TIME&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;TIME&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="d9225cab1ea49f895cb19ccd4468750c6b47fd9e" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;TIMESTAMP WITH TIMEZONE&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;TIMESTAMP WITH TIMEZONE&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="8e3220b9d58eaff4ce20a24877336d2b81e1ded7" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;TIMESTAMP&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;TIMESTAMP&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="8c5082a5b254a81634234f10520e7621d0280408" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;TINYINT&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;TINYINT&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="3d0750f7b1e673a8254ffc0f9b5e8bd1cd1915f2" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;VARBINARY&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;VARBINARY&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="69fc1628f409fe4954b0e0a40b89721b061e9c05" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;VARCHAR&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;VARCHAR&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="a1c62a47d53ffa764ef0ad0e464193511951617a" translate="yes" xml:space="preserve">
          <source>The constant in the Java programming language, sometimes referred to as a type code, that identifies the generic SQL type &lt;code&gt;XML&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;XML&lt;/code&gt; を識別するJavaプログラミング言語の定数（タイプコードと呼ばれることもあります）。</target>
        </trans-unit>
        <trans-unit id="c2386d7ab05423670d391f9dafbed5c40430742c" translate="yes" xml:space="preserve">
          <source>The constant indicating that a batch statement executed successfully but that no count of the number of rows it affected is available.</source>
          <target state="translated">バッチステートメントが正常に実行されたが、影響を受けた行数のカウントが利用できないことを示す定数。</target>
        </trans-unit>
        <trans-unit id="e4e5b2475b435594a8df4aef9b03809b0309c536" translate="yes" xml:space="preserve">
          <source>The constant indicating that a column allows &lt;code&gt;NULL&lt;/code&gt; values.</source>
          <target state="translated">列が &lt;code&gt;NULL&lt;/code&gt; 値を許可することを示す定数。</target>
        </trans-unit>
        <trans-unit id="b08604a64723930d2c059b0b25d5e9144ac0d5c5" translate="yes" xml:space="preserve">
          <source>The constant indicating that a column does not allow &lt;code&gt;NULL&lt;/code&gt; values.</source>
          <target state="translated">列が &lt;code&gt;NULL&lt;/code&gt; 値を許可しないことを示す定数。</target>
        </trans-unit>
        <trans-unit id="13366f0d0a238bcd6cf99ccc80f7022f7ffa47a2" translate="yes" xml:space="preserve">
          <source>The constant indicating that a parameter will allow &lt;code&gt;NULL&lt;/code&gt; values.</source>
          <target state="translated">パラメータが &lt;code&gt;NULL&lt;/code&gt; 値を許可することを示す定数。</target>
        </trans-unit>
        <trans-unit id="31a26baf1979336d68c4adec486c6b2bedd1b311" translate="yes" xml:space="preserve">
          <source>The constant indicating that a parameter will not allow &lt;code&gt;NULL&lt;/code&gt; values.</source>
          <target state="translated">パラメータが &lt;code&gt;NULL&lt;/code&gt; 値を許可しないことを示す定数。</target>
        </trans-unit>
        <trans-unit id="6c4030c13ecd838d1005c9b9485bcf5352fa94c4" translate="yes" xml:space="preserve">
          <source>The constant indicating that all &lt;code&gt;ResultSet&lt;/code&gt; objects that have previously been kept open should be closed when calling &lt;code&gt;getMoreResults&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getMoreResults&lt;/code&gt; を呼び出すときに、以前に開いたままになっているすべての &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトを閉じる必要があることを示す定数。</target>
        </trans-unit>
        <trans-unit id="c16afd5e570b2d16ebe611dd39624026462ab2a9" translate="yes" xml:space="preserve">
          <source>The constant indicating that an error occurred while executing a batch statement.</source>
          <target state="translated">バッチステートメントの実行中にエラーが発生したことを示す定数。</target>
        </trans-unit>
        <trans-unit id="bfcb6c49e3f6502fec85f91521cc72c8b06021ea" translate="yes" xml:space="preserve">
          <source>The constant indicating that generated keys should be made available for retrieval.</source>
          <target state="translated">生成された鍵を検索可能な状態にすることを示す定数。</target>
        </trans-unit>
        <trans-unit id="6d0317879c06502bf1865bdfc1f5b1c6635057c0" translate="yes" xml:space="preserve">
          <source>The constant indicating that generated keys should not be made available for retrieval.</source>
          <target state="translated">生成された鍵を検索可能な状態にしてはならないことを示す定数。</target>
        </trans-unit>
        <trans-unit id="d7482cb325c00ab3e0c7c6e798308f7f353ada58" translate="yes" xml:space="preserve">
          <source>The constant indicating that open &lt;code&gt;ResultSet&lt;/code&gt; objects with this holdability will be closed when the current transaction is committed.</source>
          <target state="translated">この保持可能性を持つ開いている &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトが、現在のトランザクションがコミットされたときに閉じられることを示す定数。</target>
        </trans-unit>
        <trans-unit id="c5226b746936fc27ed6fb4d893e8037021959276" translate="yes" xml:space="preserve">
          <source>The constant indicating that open &lt;code&gt;ResultSet&lt;/code&gt; objects with this holdability will remain open when the current transaction is committed.</source>
          <target state="translated">この保持可能性を持つ開いている &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトが、現在のトランザクションがコミットされたときに開いたままになることを示す定数。</target>
        </trans-unit>
        <trans-unit id="04bc781319fbf605c931394e0d1a8d7692c13a51" translate="yes" xml:space="preserve">
          <source>The constant indicating that the current &lt;code&gt;ResultSet&lt;/code&gt; object should be closed when calling &lt;code&gt;getMoreResults&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getMoreResults&lt;/code&gt; を呼び出すときに現在の &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトを閉じる必要があることを示す定数。</target>
        </trans-unit>
        <trans-unit id="385a7b3d0ac10f92d3820ff91e45eac12f92e48b" translate="yes" xml:space="preserve">
          <source>The constant indicating that the current &lt;code&gt;ResultSet&lt;/code&gt; object should not be closed when calling &lt;code&gt;getMoreResults&lt;/code&gt;.</source>
          <target state="translated">The constant indicating that the current &lt;code&gt;ResultSet&lt;/code&gt; object should not be closed when calling &lt;code&gt;getMoreResults&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c74dfb5f942b323b600e7efb019f04c8250b5554" translate="yes" xml:space="preserve">
          <source>The constant indicating that the mode of the parameter is unknown.</source>
          <target state="translated">パラメータのモードが不明であることを示す定数。</target>
        </trans-unit>
        <trans-unit id="13e89c11658c6b1e65c6bebedaf92e6a66653dc9" translate="yes" xml:space="preserve">
          <source>The constant indicating that the nullability of a column's values is unknown.</source>
          <target state="translated">カラムの値のヌル可能性が不明であることを示す定数。</target>
        </trans-unit>
        <trans-unit id="bf3206cce57b1307df9075db2972b9f35f54a25c" translate="yes" xml:space="preserve">
          <source>The constant indicating that the nullability of a parameter is unknown.</source>
          <target state="translated">パラメータのヌル可能性が不明であることを示す定数。</target>
        </trans-unit>
        <trans-unit id="b47f5fc7e5273e8a0dbc406316e899d5169ce0bb" translate="yes" xml:space="preserve">
          <source>The constant indicating that the order in which rows in a result set will be processed is unknown.</source>
          <target state="translated">結果セットの行が処理される順序が不明であることを示す定数。</target>
        </trans-unit>
        <trans-unit id="3a050840ccdc7f361e9e9fd7cd7d9f334b5a887c" translate="yes" xml:space="preserve">
          <source>The constant indicating that the order in which rows in a result set will be processed is unknown. This constant is used by the method &lt;code&gt;setFetchDirection&lt;/code&gt; as a hint to the driver, which the driver may ignore.</source>
          <target state="translated">The constant indicating that the order in which rows in a result set will be processed is unknown. This constant is used by the method &lt;code&gt;setFetchDirection&lt;/code&gt; as a hint to the driver, which the driver may ignore.</target>
        </trans-unit>
        <trans-unit id="aa5ca12a30b4ef820e4c646eb12aad84051c97ea" translate="yes" xml:space="preserve">
          <source>The constant indicating that the parameter's mode is IN.</source>
          <target state="translated">パラメータのモードがINであることを示す定数です。</target>
        </trans-unit>
        <trans-unit id="e6ac6bf161432ec52b7efdc16c2ec0519d1c7de1" translate="yes" xml:space="preserve">
          <source>The constant indicating that the parameter's mode is INOUT.</source>
          <target state="translated">パラメータのモードがINOUTであることを示す定数です。</target>
        </trans-unit>
        <trans-unit id="6dc63595c2f4fac43ed2940d69c38fe0d5fc1f4d" translate="yes" xml:space="preserve">
          <source>The constant indicating that the parameter's mode is OUT.</source>
          <target state="translated">パラメータのモードが OUT であることを示す定数です。</target>
        </trans-unit>
        <trans-unit id="d3eb26feac1860a905c279007af0bd3bbdea32f5" translate="yes" xml:space="preserve">
          <source>The constant indicating that the rows in a result set will be processed in a forward direction; first-to-last.</source>
          <target state="translated">結果セットの行が順方向に処理されることを示す定数。</target>
        </trans-unit>
        <trans-unit id="3c94eec7c4cb53c8a248e822eb41d80fa102b157" translate="yes" xml:space="preserve">
          <source>The constant indicating that the rows in a result set will be processed in a forward direction; first-to-last. This constant is used by the method &lt;code&gt;setFetchDirection&lt;/code&gt; as a hint to the driver, which the driver may ignore.</source>
          <target state="translated">The constant indicating that the rows in a result set will be processed in a forward direction; first-to-last. This constant is used by the method &lt;code&gt;setFetchDirection&lt;/code&gt; as a hint to the driver, which the driver may ignore.</target>
        </trans-unit>
        <trans-unit id="1f3f0ed476e52eb33aa41c17c1be12ef7b3827f2" translate="yes" xml:space="preserve">
          <source>The constant indicating that the rows in a result set will be processed in a reverse direction; last-to-first.</source>
          <target state="translated">結果セットの行が逆方向に処理されることを示す定数。</target>
        </trans-unit>
        <trans-unit id="dc0eecdee4995564e253db4e49a36415307aa214" translate="yes" xml:space="preserve">
          <source>The constant indicating that the rows in a result set will be processed in a reverse direction; last-to-first. This constant is used by the method &lt;code&gt;setFetchDirection&lt;/code&gt; as a hint to the driver, which the driver may ignore.</source>
          <target state="translated">The constant indicating that the rows in a result set will be processed in a reverse direction; last-to-first. This constant is used by the method &lt;code&gt;setFetchDirection&lt;/code&gt; as a hint to the driver, which the driver may ignore.</target>
        </trans-unit>
        <trans-unit id="9c810e92925752768154e4f32141efadd8dc3db0" translate="yes" xml:space="preserve">
          <source>The constant indicating the concurrency mode for a &lt;code&gt;ResultSet&lt;/code&gt; object that may NOT be updated.</source>
          <target state="translated">The constant indicating the concurrency mode for a &lt;code&gt;ResultSet&lt;/code&gt; object that may NOT be updated.</target>
        </trans-unit>
        <trans-unit id="ddadf855e90f8eaacf202ec23a46e944e0622f44" translate="yes" xml:space="preserve">
          <source>The constant indicating the concurrency mode for a &lt;code&gt;ResultSet&lt;/code&gt; object that may be updated.</source>
          <target state="translated">The constant indicating the concurrency mode for a &lt;code&gt;ResultSet&lt;/code&gt; object that may be updated.</target>
        </trans-unit>
        <trans-unit id="9bca282b75c5d2e745de99763077285e3b1192ec" translate="yes" xml:space="preserve">
          <source>The constant indicating the type for a &lt;code&gt;ResultSet&lt;/code&gt; object that is scrollable and generally sensitive to changes to the data that underlies the &lt;code&gt;ResultSet&lt;/code&gt;.</source>
          <target state="translated">The constant indicating the type for a &lt;code&gt;ResultSet&lt;/code&gt; object that is scrollable and generally sensitive to changes to the data that underlies the &lt;code&gt;ResultSet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8214aedcfde30343d223ee7ebb5cb8e2876a3bf3" translate="yes" xml:space="preserve">
          <source>The constant indicating the type for a &lt;code&gt;ResultSet&lt;/code&gt; object that is scrollable but generally not sensitive to changes to the data that underlies the &lt;code&gt;ResultSet&lt;/code&gt;.</source>
          <target state="translated">The constant indicating the type for a &lt;code&gt;ResultSet&lt;/code&gt; object that is scrollable but generally not sensitive to changes to the data that underlies the &lt;code&gt;ResultSet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f437cb3f61575214fea420fa2f64e97ba3cdee67" translate="yes" xml:space="preserve">
          <source>The constant indicating the type for a &lt;code&gt;ResultSet&lt;/code&gt; object whose cursor may move only forward.</source>
          <target state="translated">The constant indicating the type for a &lt;code&gt;ResultSet&lt;/code&gt; object whose cursor may move only forward.</target>
        </trans-unit>
        <trans-unit id="5c6a9dce79c0b6034323c38e7e9849f0bf6d7091" translate="yes" xml:space="preserve">
          <source>The constant pool may contain constants tagged &lt;code&gt;CONSTANT_Dynamic&lt;/code&gt;, equipped with bootstrap methods which perform their resolution. Such a &lt;em&gt;dynamic constant&lt;/em&gt; is originally in an unresolved state. Before the JVM can use a dynamically-computed constant, it must first be &lt;em&gt;resolved&lt;/em&gt;. Dynamically-computed constant resolution is accomplished by calling a &lt;em&gt;bootstrap method&lt;/em&gt; which is given the static information content of the constant, and which must produce a value of the constant's statically declared type.</source>
          <target state="translated">The constant pool may contain constants tagged &lt;code&gt;CONSTANT_Dynamic&lt;/code&gt; , equipped with bootstrap methods which perform their resolution. Such a &lt;em&gt;dynamic constant&lt;/em&gt; is originally in an unresolved state. Before the JVM can use a dynamically-computed constant, it must first be &lt;em&gt;resolved&lt;/em&gt;. Dynamically-computed constant resolution is accomplished by calling a &lt;em&gt;bootstrap method&lt;/em&gt; which is given the static information content of the constant, and which must produce a value of the constant's statically declared type.</target>
        </trans-unit>
        <trans-unit id="84d7a73412c8c00b8128d66b5085f457ec427565" translate="yes" xml:space="preserve">
          <source>The constant value &lt;a href=&quot;#KERNING_ON&quot;&gt;&lt;code&gt;KERNING_ON&lt;/code&gt;&lt;/a&gt; is provided.</source>
          <target state="translated">The constant value &lt;a href=&quot;#KERNING_ON&quot;&gt; &lt;code&gt;KERNING_ON&lt;/code&gt; &lt;/a&gt; is provided.</target>
        </trans-unit>
        <trans-unit id="e4c3623d0d053114984b1dfcb858c757394c800f" translate="yes" xml:space="preserve">
          <source>The constant value &lt;a href=&quot;#LIGATURES_ON&quot;&gt;&lt;code&gt;LIGATURES_ON&lt;/code&gt;&lt;/a&gt; is defined.</source>
          <target state="translated">The constant value &lt;a href=&quot;#LIGATURES_ON&quot;&gt; &lt;code&gt;LIGATURES_ON&lt;/code&gt; &lt;/a&gt; is defined.</target>
        </trans-unit>
        <trans-unit id="ca2ee3b848ad5eb2176a5ea75502cd43e88bc7d5" translate="yes" xml:space="preserve">
          <source>The constant value &lt;a href=&quot;#STRIKETHROUGH_ON&quot;&gt;&lt;code&gt;STRIKETHROUGH_ON&lt;/code&gt;&lt;/a&gt; is provided.</source>
          <target state="translated">The constant value &lt;a href=&quot;#STRIKETHROUGH_ON&quot;&gt; &lt;code&gt;STRIKETHROUGH_ON&lt;/code&gt; &lt;/a&gt; is provided.</target>
        </trans-unit>
        <trans-unit id="23565ccfc19e7d9a7220a6065e7d4ce228dcfe05" translate="yes" xml:space="preserve">
          <source>The constant value &lt;a href=&quot;#SWAP_COLORS_ON&quot;&gt;&lt;code&gt;SWAP_COLORS_ON&lt;/code&gt;&lt;/a&gt; is defined.</source>
          <target state="translated">The constant value &lt;a href=&quot;#SWAP_COLORS_ON&quot;&gt; &lt;code&gt;SWAP_COLORS_ON&lt;/code&gt; &lt;/a&gt; is defined.</target>
        </trans-unit>
        <trans-unit id="098f42948f7cc5d6726df08db4c3f07a94e53e4e" translate="yes" xml:space="preserve">
          <source>The constant value &lt;a href=&quot;#UNDERLINE_ON&quot;&gt;&lt;code&gt;UNDERLINE_ON&lt;/code&gt;&lt;/a&gt; is provided.</source>
          <target state="translated">The constant value &lt;a href=&quot;#UNDERLINE_ON&quot;&gt; &lt;code&gt;UNDERLINE_ON&lt;/code&gt; &lt;/a&gt; is provided.</target>
        </trans-unit>
        <trans-unit id="fd7d21b839d915be854999ae3895c9fc0775c58b" translate="yes" xml:space="preserve">
          <source>The constant value of this field is the largest value of type &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;'\uFFFF'&lt;/code&gt;.</source>
          <target state="translated">このフィールドの定数値は、タイプ &lt;code&gt;char&lt;/code&gt; 、 &lt;code&gt;'\uFFFF'&lt;/code&gt; の最大値です。</target>
        </trans-unit>
        <trans-unit id="13a3d4f9e90fafbe487863d61e2c681b40a76e07" translate="yes" xml:space="preserve">
          <source>The constant value of this field is the smallest value of type &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;'\u0000'&lt;/code&gt;.</source>
          <target state="translated">このフィールドの定数値は、型の最小値である &lt;code&gt;char&lt;/code&gt; 、 &lt;code&gt;'\u0000'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60251b00bf4fd5f5ce3ebddb97c3f733d992b028" translate="yes" xml:space="preserve">
          <source>The constant values &lt;a href=&quot;#TRACKING_TIGHT&quot;&gt;&lt;code&gt;TRACKING_TIGHT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#TRACKING_LOOSE&quot;&gt;&lt;code&gt;TRACKING_LOOSE&lt;/code&gt;&lt;/a&gt; are provided.</source>
          <target state="translated">The constant values &lt;a href=&quot;#TRACKING_TIGHT&quot;&gt; &lt;code&gt;TRACKING_TIGHT&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#TRACKING_LOOSE&quot;&gt; &lt;code&gt;TRACKING_LOOSE&lt;/code&gt; &lt;/a&gt; are provided.</target>
        </trans-unit>
        <trans-unit id="a5c3ae86c80c0ffd5751f1bcac0fbdd026305053" translate="yes" xml:space="preserve">
          <source>The constant which defines the length of a DES key in bytes.</source>
          <target state="translated">DESキーの長さをバイト単位で定義する定数。</target>
        </trans-unit>
        <trans-unit id="2c331109070150d080aecfe00c315900d5ffe214" translate="yes" xml:space="preserve">
          <source>The constant which defines the length of a DESede key in bytes.</source>
          <target state="translated">DESedeキーの長さをバイト単位で定義する定数。</target>
        </trans-unit>
        <trans-unit id="8a3567f6e124d3231577f51734ce5ae593e4d5d4" translate="yes" xml:space="preserve">
          <source>The constants &lt;a href=&quot;#ANNOTATION_TYPE&quot;&gt;&lt;code&gt;ANNOTATION_TYPE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#CONSTRUCTOR&quot;&gt;&lt;code&gt;CONSTRUCTOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#FIELD&quot;&gt;&lt;code&gt;FIELD&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#LOCAL_VARIABLE&quot;&gt;&lt;code&gt;LOCAL_VARIABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#METHOD&quot;&gt;&lt;code&gt;METHOD&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#MODULE&quot;&gt;&lt;code&gt;MODULE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#PARAMETER&quot;&gt;&lt;code&gt;PARAMETER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#TYPE&quot;&gt;&lt;code&gt;TYPE&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#TYPE_PARAMETER&quot;&gt;&lt;code&gt;TYPE_PARAMETER&lt;/code&gt;&lt;/a&gt; correspond to the declaration contexts in JLS 9.6.4.1.</source>
          <target state="translated">The constants &lt;a href=&quot;#ANNOTATION_TYPE&quot;&gt; &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#CONSTRUCTOR&quot;&gt; &lt;code&gt;CONSTRUCTOR&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#FIELD&quot;&gt; &lt;code&gt;FIELD&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#LOCAL_VARIABLE&quot;&gt; &lt;code&gt;LOCAL_VARIABLE&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#METHOD&quot;&gt; &lt;code&gt;METHOD&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#PACKAGE&quot;&gt; &lt;code&gt;PACKAGE&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#MODULE&quot;&gt; &lt;code&gt;MODULE&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#PARAMETER&quot;&gt; &lt;code&gt;PARAMETER&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#TYPE&quot;&gt; &lt;code&gt;TYPE&lt;/code&gt; &lt;/a&gt;, and &lt;a href=&quot;#TYPE_PARAMETER&quot;&gt; &lt;code&gt;TYPE_PARAMETER&lt;/code&gt; &lt;/a&gt; correspond to the declaration contexts in JLS 9.6.4.1.</target>
        </trans-unit>
        <trans-unit id="923e5f8c7d790243956aee8bd73d5ed48e985525" translate="yes" xml:space="preserve">
          <source>The constants &lt;a href=&quot;#JUSTIFICATION_FULL&quot;&gt;&lt;code&gt;JUSTIFICATION_FULL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#JUSTIFICATION_NONE&quot;&gt;&lt;code&gt;JUSTIFICATION_NONE&lt;/code&gt;&lt;/a&gt; are provided.</source>
          <target state="translated">The constants &lt;a href=&quot;#JUSTIFICATION_FULL&quot;&gt; &lt;code&gt;JUSTIFICATION_FULL&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#JUSTIFICATION_NONE&quot;&gt; &lt;code&gt;JUSTIFICATION_NONE&lt;/code&gt; &lt;/a&gt; are provided.</target>
        </trans-unit>
        <trans-unit id="0d18ca5cc6633941b6057f038afb440f473ca161" translate="yes" xml:space="preserve">
          <source>The constants &lt;a href=&quot;#RUN_DIRECTION_RTL&quot;&gt;&lt;code&gt;RUN_DIRECTION_RTL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#RUN_DIRECTION_LTR&quot;&gt;&lt;code&gt;RUN_DIRECTION_LTR&lt;/code&gt;&lt;/a&gt; are provided.</source>
          <target state="translated">The constants &lt;a href=&quot;#RUN_DIRECTION_RTL&quot;&gt; &lt;code&gt;RUN_DIRECTION_RTL&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#RUN_DIRECTION_LTR&quot;&gt; &lt;code&gt;RUN_DIRECTION_LTR&lt;/code&gt; &lt;/a&gt; are provided.</target>
        </trans-unit>
        <trans-unit id="e3144d771789e4d26a103912ef85edcf80e38dfe" translate="yes" xml:space="preserve">
          <source>The constants &lt;a href=&quot;elementtype#ANNOTATION_TYPE&quot;&gt;&lt;code&gt;ANNOTATION_TYPE&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#CONSTRUCTOR&quot;&gt;&lt;code&gt;CONSTRUCTOR&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#FIELD&quot;&gt;&lt;code&gt;FIELD&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#LOCAL_VARIABLE&quot;&gt;&lt;code&gt;LOCAL_VARIABLE&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#METHOD&quot;&gt;&lt;code&gt;METHOD&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#PARAMETER&quot;&gt;&lt;code&gt;PARAMETER&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;elementtype#TYPE&quot;&gt;&lt;code&gt;TYPE&lt;/code&gt;&lt;/a&gt; , and &lt;a href=&quot;elementtype#TYPE_PARAMETER&quot;&gt;&lt;code&gt;TYPE_PARAMETER&lt;/code&gt;&lt;/a&gt; correspond to the declaration contexts in JLS 9.6.4.1.</source>
          <target state="translated">定数&lt;a href=&quot;elementtype#ANNOTATION_TYPE&quot;&gt; &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;elementtype#CONSTRUCTOR&quot;&gt; &lt;code&gt;CONSTRUCTOR&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;elementtype#FIELD&quot;&gt; &lt;code&gt;FIELD&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;elementtype#LOCAL_VARIABLE&quot;&gt; &lt;code&gt;LOCAL_VARIABLE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;elementtype#METHOD&quot;&gt; &lt;code&gt;METHOD&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;elementtype#PACKAGE&quot;&gt; &lt;code&gt;PACKAGE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;elementtype#PARAMETER&quot;&gt; &lt;code&gt;PARAMETER&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;elementtype#TYPE&quot;&gt; &lt;code&gt;TYPE&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;elementtype#TYPE_PARAMETER&quot;&gt; &lt;code&gt;TYPE_PARAMETER&lt;/code&gt; &lt;/a&gt;は、JLS 9.6.4.1の宣言コンテキストに対応しています。</target>
        </trans-unit>
        <trans-unit id="ab696badae0b7beaf1abeefc926f6fd55883c9d4" translate="yes" xml:space="preserve">
          <source>The constants in this class present a strongly typed enumeration of common object roles. A public constructor for this class has been purposely omitted and applications should use one of the constants from this class. Although this class pre-defines a large list of standard roles, it is extensible so additional, programmer-defined roles can be added in the future without needing to modify the base class.</source>
          <target state="translated">このクラスの定数は、一般的なオブジェクトの役割を強く型付けした列挙を提供します。このクラスのパブリック・コンストラクタは意図的に省略されており、アプリケーションはこのクラスの定数のいずれかを使用しなければなりません。このクラスは、標準的な役割の多くのリストを事前に定義していますが、将来、基底クラスを変更することなく、プログラマが定義した役割を追加することができるように拡張可能です。</target>
        </trans-unit>
        <trans-unit id="1bc72d418c9f0b95e1f477df6a36cedab27fbf50" translate="yes" xml:space="preserve">
          <source>The constants in this class present a strongly typed enumeration of common object roles. A public constructor for this class has been purposely omitted and applications should use one of the constants from this class. If the constants in this class are not sufficient to describe the role of an object, a subclass should be generated from this class and it should provide constants in a similar manner.</source>
          <target state="translated">このクラスの定数は、一般的なオブジェクトの役割を強く型付けした列挙を提供します。このクラスのパブリック・コンストラクタは意図的に省略されており、アプリケーションはこのクラスの定数の1つを使用しなければなりません。このクラスの定数だけではオブジェクトの役割を記述するのに十分でない場合は、このクラスからサブクラスを生成し、同様の方法で定数を提供しなければなりません。</target>
        </trans-unit>
        <trans-unit id="64dd747eb34d780d39e1cda712ecf83a4b94f4bc" translate="yes" xml:space="preserve">
          <source>The constants in this class present a strongly typed enumeration of common object roles. If the constants in this class are not sufficient to describe the role of an object, a subclass should be generated from this class and it should provide constants in a similar manner.</source>
          <target state="translated">このクラスの定数は、一般的なオブジェクトの役割の強い型付けされた列挙を示します。このクラスの定数ではオブジェクトの役割を記述するのに十分でない場合は、このクラスからサブクラスを生成し、同様の方法で定数を提供しなければなりません。</target>
        </trans-unit>
        <trans-unit id="5c6db25e66548268914c017d479808b70cf00b1c" translate="yes" xml:space="preserve">
          <source>The constants of this enumerated type provide a simple classification of the syntactic locations where annotations may appear in a Java program.</source>
          <target state="translated">この列挙型の定数は、Javaプログラム内でアノテーションが現れる構文上の場所を簡単に分類します。</target>
        </trans-unit>
        <trans-unit id="008d84f84709ba1d20ea14026b2e0495beac045f" translate="yes" xml:space="preserve">
          <source>The constants of this enumerated type provide a simple classification of the syntactic locations where annotations may appear in a Java program. These constants are used in &lt;a href=&quot;target&quot;&gt;&lt;code&gt;Target&lt;/code&gt;&lt;/a&gt; meta-annotations to specify where it is legal to write annotations of a given type.</source>
          <target state="translated">The constants of this enumerated type provide a simple classification of the syntactic locations where annotations may appear in a Java program. These constants are used in &lt;a href=&quot;target&quot;&gt; &lt;code&gt;Target&lt;/code&gt; &lt;/a&gt; meta-annotations to specify where it is legal to write annotations of a given type.</target>
        </trans-unit>
        <trans-unit id="feb4cacf066dccc67c2a1e1cd57d17bf146fe670" translate="yes" xml:space="preserve">
          <source>The constants of this enumerated type provide a simple classification of the syntactic locations where annotations may appear in a Java program. These constants are used in &lt;a href=&quot;target&quot;&gt;&lt;code&gt;java.lang.annotation.Target&lt;/code&gt;&lt;/a&gt; meta-annotations to specify where it is legal to write annotations of a given type.</source>
          <target state="translated">この列挙型の定数は、Javaプログラムで注釈が表示される可能性がある構文上の場所を簡単に分類します。これらの定数は&lt;a href=&quot;target&quot;&gt; &lt;code&gt;java.lang.annotation.Target&lt;/code&gt; &lt;/a&gt; meta-annotationsで使用され、特定のタイプの注釈を書き込むことが正当な場所を指定します。</target>
        </trans-unit>
        <trans-unit id="1ba5b51bbcde9c4b95b98a38c2cb44b2c7b551b5" translate="yes" xml:space="preserve">
          <source>The constants used here are defined in [&lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt;] .</source>
          <target state="translated">The constants used here are defined in [&lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt;] .</target>
        </trans-unit>
        <trans-unit id="f8a9e3731d3b267ea8e3fd8453e861846ef7350f" translate="yes" xml:space="preserve">
          <source>The constants used here are defined in [&lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt;].</source>
          <target state="translated">The constants used here are defined in [&lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt;].</target>
        </trans-unit>
        <trans-unit id="ba3ca4b2e56262c71dbe0a15263e988db1d00eb8" translate="yes" xml:space="preserve">
          <source>The constraint that a matches s. The returned object will be serialized as an instance of the non-public class  javax.management.MatchQueryExp.</source>
          <target state="translated">返されたオブジェクトは、非公開クラス javax.management.MatchQueryExp のインスタンスとしてシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="0dc78ded7dea94c59386c5d251d615ad75643db7" translate="yes" xml:space="preserve">
          <source>The constraint that a matches s. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.MatchQueryExp&quot;&gt; javax.management.MatchQueryExp&lt;/a&gt;.</source>
          <target state="translated">The constraint that a matches s. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.MatchQueryExp&quot;&gt; javax.management.MatchQueryExp&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6d919fe4516cb983d55f9db338ccc9c7dde1f1b9" translate="yes" xml:space="preserve">
          <source>The constraint that v1 lies between v2 and v3. The returned object will be serialized as an instance of the non-public class  javax.management.BetweenQueryExp.</source>
          <target state="translated">v1 が v2 と v3 の間にあるという制約。返されたオブジェクトは、非公開クラス javax.management.BetweenQueryExp のインスタンスとしてシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="b90df5090a1bbe4199fe0844363d2a20a96d1513" translate="yes" xml:space="preserve">
          <source>The constraint that v1 lies between v2 and v3. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BetweenQueryExp&quot;&gt; javax.management.BetweenQueryExp&lt;/a&gt;.</source>
          <target state="translated">The constraint that v1 lies between v2 and v3. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BetweenQueryExp&quot;&gt; javax.management.BetweenQueryExp&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="02e64359684a178386b52858059552ffc6551516" translate="yes" xml:space="preserve">
          <source>The constraints are defined by the particular layout manager being used. For example, the &lt;code&gt;BorderLayout&lt;/code&gt; class defines five constraints: &lt;code&gt;BorderLayout.NORTH&lt;/code&gt;, &lt;code&gt;BorderLayout.SOUTH&lt;/code&gt;, &lt;code&gt;BorderLayout.EAST&lt;/code&gt;, &lt;code&gt;BorderLayout.WEST&lt;/code&gt;, and &lt;code&gt;BorderLayout.CENTER&lt;/code&gt;.</source>
          <target state="translated">The constraints are defined by the particular layout manager being used. For example, the &lt;code&gt;BorderLayout&lt;/code&gt; class defines five constraints: &lt;code&gt;BorderLayout.NORTH&lt;/code&gt; , &lt;code&gt;BorderLayout.SOUTH&lt;/code&gt; , &lt;code&gt;BorderLayout.EAST&lt;/code&gt; , &lt;code&gt;BorderLayout.WEST&lt;/code&gt; , and &lt;code&gt;BorderLayout.CENTER&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d680dfab2d7cf7f3941527a50827dfaf79d9cb1" translate="yes" xml:space="preserve">
          <source>The constructor checks that all the constraints listed below for each parameter are satisfied, and throws the appropriate exception if they are not.</source>
          <target state="translated">コンストラクタは、各パラメータについて以下に示す制約がすべて満たされているかどうかをチェックし、満たされていない場合は適切な例外をスローします。</target>
        </trans-unit>
        <trans-unit id="d9e2554056245c482985e2824f96d7f07d4107f6" translate="yes" xml:space="preserve">
          <source>The constructor does nothing.</source>
          <target state="translated">コンストラクタは何もしません。</target>
        </trans-unit>
        <trans-unit id="e5cd3d79bf2bb3af2291728bef40e188974573c5" translate="yes" xml:space="preserve">
          <source>The constructor for &lt;code&gt;ActivationID&lt;/code&gt; takes a single argument, activator, that specifies a remote reference to the activator responsible for activating the object associated with this identifier.</source>
          <target state="translated">The constructor for &lt;code&gt;ActivationID&lt;/code&gt; takes a single argument, activator, that specifies a remote reference to the activator responsible for activating the object associated with this identifier.</target>
        </trans-unit>
        <trans-unit id="f315c66ee9bc0baa5f0d43eca37d2fcad1edb9d8" translate="yes" xml:space="preserve">
          <source>The constructor for &lt;code&gt;ActivationID&lt;/code&gt; takes a single argument, activator, that specifies a remote reference to the activator responsible for activating the object associated with this identifier. An instance of &lt;code&gt;ActivationID&lt;/code&gt; is globally unique.</source>
          <target state="translated">The constructor for &lt;code&gt;ActivationID&lt;/code&gt; takes a single argument, activator, that specifies a remote reference to the activator responsible for activating the object associated with this identifier. An instance of &lt;code&gt;ActivationID&lt;/code&gt; is globally unique.</target>
        </trans-unit>
        <trans-unit id="b0815ab8cb5067b6921bc917cf277069e52d0c8d" translate="yes" xml:space="preserve">
          <source>The constructor for this class accepts an optional &lt;em&gt;fairness&lt;/em&gt; parameter. When set &lt;code&gt;true&lt;/code&gt;, under contention, locks favor granting access to the longest-waiting thread. Otherwise this lock does not guarantee any particular access order. Programs using fair locks accessed by many threads may display lower overall throughput (i.e., are slower; often much slower) than those using the default setting, but have smaller variances in times to obtain locks and guarantee lack of starvation. Note however, that fairness of locks does not guarantee fairness of thread scheduling. Thus, one of many threads using a fair lock may obtain it multiple times in succession while other active threads are not progressing and not currently holding the lock. Also note that the untimed &lt;a href=&quot;#tryLock()&quot;&gt;&lt;code&gt;tryLock()&lt;/code&gt;&lt;/a&gt; method does not honor the fairness setting. It will succeed if the lock is available even if other threads are waiting.</source>
          <target state="translated">The constructor for this class accepts an optional &lt;em&gt;fairness&lt;/em&gt; parameter. When set &lt;code&gt;true&lt;/code&gt; , under contention, locks favor granting access to the longest-waiting thread. Otherwise this lock does not guarantee any particular access order. Programs using fair locks accessed by many threads may display lower overall throughput (i.e., are slower; often much slower) than those using the default setting, but have smaller variances in times to obtain locks and guarantee lack of starvation. Note however, that fairness of locks does not guarantee fairness of thread scheduling. Thus, one of many threads using a fair lock may obtain it multiple times in succession while other active threads are not progressing and not currently holding the lock. Also note that the untimed &lt;a href=&quot;#tryLock()&quot;&gt; &lt;code&gt;tryLock()&lt;/code&gt; &lt;/a&gt; method does not honor the fairness setting. It will succeed if the lock is available even if other threads are waiting.</target>
        </trans-unit>
        <trans-unit id="55c1cac93e10dcceae66fd36ab495f0d17064a67" translate="yes" xml:space="preserve">
          <source>The constructor for this class accepts an optional &lt;em&gt;fairness&lt;/em&gt; parameter. When set &lt;code&gt;true&lt;/code&gt;, under contention, locks favor granting access to the longest-waiting thread. Otherwise this lock does not guarantee any particular access order. Programs using fair locks accessed by many threads may display lower overall throughput (i.e., are slower; often much slower) than those using the default setting, but have smaller variances in times to obtain locks and guarantee lack of starvation. Note however, that fairness of locks does not guarantee fairness of thread scheduling. Thus, one of many threads using a fair lock may obtain it multiple times in succession while other active threads are not progressing and not currently holding the lock. Also note that the untimed &lt;a href=&quot;reentrantlock#tryLock--&quot;&gt;&lt;code&gt;tryLock()&lt;/code&gt;&lt;/a&gt; method does not honor the fairness setting. It will succeed if the lock is available even if other threads are waiting.</source>
          <target state="translated">このクラスのコンストラクターは、オプションの&lt;em&gt;公平性&lt;/em&gt;パラメーターを受け入れます。 &lt;code&gt;true&lt;/code&gt; に設定すると、競合下で、ロックは最も長く待機しているスレッドへのアクセスの許可を優先します。それ以外の場合、このロックは特定のアクセス順序を保証しません。多くのスレッドによってアクセスされる公平なロックを使用するプログラムは、デフォルト設定を使用するプログラムよりも全体的なスループットが低い（つまり、遅い、多くの場合はかなり遅い）場合がありますが、ロックを取得して飢餓の欠如を保証するための時間の変動は小さいです。ただし、ロックの公平性はスレッドスケジューリングの公平性を保証するものではないことに注意してください。したがって、他のアクティブなスレッドが進行中でなく、現在ロックを保持していない間に、フェアロックを使用する多くのスレッドの1つが連続して複数回取得する可能性があります。また、アン&lt;a href=&quot;reentrantlock#tryLock--&quot;&gt; &lt;code&gt;tryLock()&lt;/code&gt; &lt;/a&gt;も注意してください。メソッドは、公平性設定を尊重しません。他のスレッドが待機していても、ロックが利用可能であれば成功します。</target>
        </trans-unit>
        <trans-unit id="e241afd05a20d90f27c2cc27ff98efcd6c8511d1" translate="yes" xml:space="preserve">
          <source>The constructor for this class optionally accepts a &lt;em&gt;fairness&lt;/em&gt; parameter. When set false, this class makes no guarantees about the order in which threads acquire permits. In particular, &lt;em&gt;barging&lt;/em&gt; is permitted, that is, a thread invoking &lt;a href=&quot;#acquire()&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; can be allocated a permit ahead of a thread that has been waiting - logically the new thread places itself at the head of the queue of waiting threads. When fairness is set true, the semaphore guarantees that threads invoking any of the &lt;a href=&quot;#acquire()&quot;&gt;&lt;code&gt;acquire&lt;/code&gt;&lt;/a&gt; methods are selected to obtain permits in the order in which their invocation of those methods was processed (first-in-first-out; FIFO). Note that FIFO ordering necessarily applies to specific internal points of execution within these methods. So, it is possible for one thread to invoke &lt;code&gt;acquire&lt;/code&gt; before another, but reach the ordering point after the other, and similarly upon return from the method. Also note that the untimed &lt;a href=&quot;#tryAcquire()&quot;&gt;&lt;code&gt;tryAcquire&lt;/code&gt;&lt;/a&gt; methods do not honor the fairness setting, but will take any permits that are available.</source>
          <target state="translated">The constructor for this class optionally accepts a &lt;em&gt;fairness&lt;/em&gt; parameter. When set false, this class makes no guarantees about the order in which threads acquire permits. In particular, &lt;em&gt;barging&lt;/em&gt; is permitted, that is, a thread invoking &lt;a href=&quot;#acquire()&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt; can be allocated a permit ahead of a thread that has been waiting - logically the new thread places itself at the head of the queue of waiting threads. When fairness is set true, the semaphore guarantees that threads invoking any of the &lt;a href=&quot;#acquire()&quot;&gt; &lt;code&gt;acquire&lt;/code&gt; &lt;/a&gt; methods are selected to obtain permits in the order in which their invocation of those methods was processed (first-in-first-out; FIFO). Note that FIFO ordering necessarily applies to specific internal points of execution within these methods. So, it is possible for one thread to invoke &lt;code&gt;acquire&lt;/code&gt; before another, but reach the ordering point after the other, and similarly upon return from the method. Also note that the untimed &lt;a href=&quot;#tryAcquire()&quot;&gt; &lt;code&gt;tryAcquire&lt;/code&gt; &lt;/a&gt; methods do not honor the fairness setting, but will take any permits that are available.</target>
        </trans-unit>
        <trans-unit id="cabf2c65732e2de463fc3500f56a6de7aadab8e6" translate="yes" xml:space="preserve">
          <source>The constructor for this class optionally accepts a &lt;em&gt;fairness&lt;/em&gt; parameter. When set false, this class makes no guarantees about the order in which threads acquire permits. In particular, &lt;em&gt;barging&lt;/em&gt; is permitted, that is, a thread invoking &lt;a href=&quot;semaphore#acquire--&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; can be allocated a permit ahead of a thread that has been waiting - logically the new thread places itself at the head of the queue of waiting threads. When fairness is set true, the semaphore guarantees that threads invoking any of the &lt;a href=&quot;semaphore#acquire--&quot;&gt;&lt;code&gt;acquire&lt;/code&gt;&lt;/a&gt; methods are selected to obtain permits in the order in which their invocation of those methods was processed (first-in-first-out; FIFO). Note that FIFO ordering necessarily applies to specific internal points of execution within these methods. So, it is possible for one thread to invoke &lt;code&gt;acquire&lt;/code&gt; before another, but reach the ordering point after the other, and similarly upon return from the method. Also note that the untimed &lt;a href=&quot;semaphore#tryAcquire--&quot;&gt;&lt;code&gt;tryAcquire&lt;/code&gt;&lt;/a&gt; methods do not honor the fairness setting, but will take any permits that are available.</source>
          <target state="translated">このクラスのコンストラクターは、オプションで&lt;em&gt;公平性&lt;/em&gt;パラメーターを受け入れます。falseに設定すると、このクラスは、スレッドが許可を取得する順序を保証しません。特に、&lt;em&gt;割り込み&lt;/em&gt;は許可されます。つまり、&lt;a href=&quot;semaphore#acquire--&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;を呼び出すスレッドには、待機していたスレッドの前にパーミットを割り当てることができます。論理的には、新しいスレッドは待機スレッドのキューの先頭に配置されます。公平性がtrueに設定されている場合、セマフォは、&lt;a href=&quot;semaphore#acquire--&quot;&gt; &lt;code&gt;acquire&lt;/code&gt; &lt;/a&gt;いずれかを呼び出すスレッドがメソッドは、それらのメソッドの呼び出しが処理された順序で許可を取得するように選択されます（先入れ先出し; FIFO）。FIFOの順序は、これらのメソッド内の特定の内部実行ポイントに必ず適用されることに注意してください。したがって、1つのスレッドが別のスレッドの前に &lt;code&gt;acquire&lt;/code&gt; を呼び出すことは可能ですが、次の順序で順序付けポイントに到達し、メソッドから戻ったときにも同様です。また、時間&lt;a href=&quot;semaphore#tryAcquire--&quot;&gt; &lt;code&gt;tryAcquire&lt;/code&gt; &lt;/a&gt;いないtryAcquireメソッドは、公平性の設定を尊重しませんが、使用可能な許可を取得します。</target>
        </trans-unit>
        <trans-unit id="2f82cef178c196bbec6e0156b69c44428cb62da4" translate="yes" xml:space="preserve">
          <source>The constructor to reflect is the public constructor of the class represented by this &lt;code&gt;Class&lt;/code&gt; object whose formal parameter types match those specified by &lt;code&gt;parameterTypes&lt;/code&gt;.</source>
          <target state="translated">反映するコンストラクターは、この &lt;code&gt;Class&lt;/code&gt; オブジェクトによって表されるクラスのパブリックコンストラクターであり、その仮パラメータータイプは &lt;code&gt;parameterTypes&lt;/code&gt; で指定されたものと一致します。</target>
        </trans-unit>
        <trans-unit id="ee0852712d5ff7fe80470478a94e9a96247f3720" translate="yes" xml:space="preserve">
          <source>The constructors of this class are protected. To instantiate a WritableRaster, use one of the createWritableRaster factory methods in the Raster class.</source>
          <target state="translated">このクラスのコンストラクタは保護されています。WritableRaster のインスタンスを作成するには、Raster クラスの createWritableRaster ファクトリメソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="1da2d1fc58bcce9ec33d91f159cb8bc7fb6a5519" translate="yes" xml:space="preserve">
          <source>The consumer of the particular image data stream for which this instance of the ImageFilter is filtering data.</source>
          <target state="translated">ImageFilter のインスタンスがデータをフィルタリングしている特定の画像データストリームの消費者。</target>
        </trans-unit>
        <trans-unit id="0fbb50554bed7b206d06fdeeecd4715cecdc9c45" translate="yes" xml:space="preserve">
          <source>The consumer of the particular image data stream for which this instance of the ImageFilter is filtering data. It is not initialized during the constructor, but rather during the getFilterInstance() method call when the FilteredImageSource is creating a unique instance of this object for a particular image data stream.</source>
          <target state="translated">ImageFilter のインスタンスがフィルタリングする特定の画像データストリームの消費者。コンストラクタ中に初期化されるのではなく、 FilteredImageSource が特定の画像データストリームに対してこのオブジェクトのユニークなインスタンスを作成しているときに getFilterInstance()メソッドをコールしている間に初期化されます。</target>
        </trans-unit>
        <trans-unit id="dc091f884e5b69128c7db36ffbfe76ae011df98f" translate="yes" xml:space="preserve">
          <source>The content and representation of an attribute and its values is defined by the attribute's &lt;em&gt;schema&lt;/em&gt;. The schema contains information about the attribute's syntax and other properties about the attribute. See &lt;code&gt;getAttributeDefinition()&lt;/code&gt; and &lt;code&gt;getAttributeSyntaxDefinition()&lt;/code&gt; for details regarding how to get schema information about an attribute if the underlying directory service supports schemas.</source>
          <target state="translated">属性とその値の内容と表現は、属性の&lt;em&gt;スキーマ&lt;/em&gt;によって定義され&lt;em&gt;ます&lt;/em&gt;。スキーマには、属性の構文に関する情報と、属性に関するその他のプロパティが含まれています。参照 &lt;code&gt;getAttributeDefinition()&lt;/code&gt; と &lt;code&gt;getAttributeSyntaxDefinition()&lt;/code&gt; 基本となるディレクトリサービスがサポートするスキーマかの属性に関するスキーマ情報を取得する方法についての詳細については。</target>
        </trans-unit>
        <trans-unit id="5d706cd64d7347fbe0907548af2463f15b628d97" translate="yes" xml:space="preserve">
          <source>The content length set by invoking this method takes precedence over any value set by &lt;a href=&quot;#setFixedLengthStreamingMode(int)&quot;&gt;&lt;code&gt;setFixedLengthStreamingMode(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The content length set by invoking this method takes precedence over any value set by &lt;a href=&quot;#setFixedLengthStreamingMode(int)&quot;&gt; &lt;code&gt;setFixedLengthStreamingMode(int)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fcaf947eb04b0f9c4537af81320b15e8bade372f" translate="yes" xml:space="preserve">
          <source>The content length set by invoking this method takes precedence over any value set by &lt;a href=&quot;httpurlconnection#setFixedLengthStreamingMode-int-&quot;&gt;&lt;code&gt;setFixedLengthStreamingMode(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドの呼び出しによって設定されたコンテンツの長さは、&lt;a href=&quot;httpurlconnection#setFixedLengthStreamingMode-int-&quot;&gt; &lt;code&gt;setFixedLengthStreamingMode(int)&lt;/code&gt; &lt;/a&gt;によって設定されたどの値よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="a995a1fdac8b5e6ff0108cba8dae30ab6b91f5cd" translate="yes" xml:space="preserve">
          <source>The content model</source>
          <target state="translated">コンテンツモデル</target>
        </trans-unit>
        <trans-unit id="c448b92e4ca498c50532fd1d3d39aa14a291fb13" translate="yes" xml:space="preserve">
          <source>The content model will consist of the string &quot;EMPTY&quot;, the string &quot;ANY&quot;, or a parenthesised group, optionally followed by an occurrence indicator. The model will be normalized so that all parameter entities are fully resolved and all whitespace is removed,and will include the enclosing parentheses. Other normalization (such as removing redundant parentheses or simplifying occurrence indicators) is at the discretion of the parser.</source>
          <target state="translated">内容モデルは、文字列 &quot;EMPTY&quot;、文字列 &quot;ANY&quot;、または括弧で囲まれたグループで構成され、オプションで発生インジケータが続く。モデルは、すべてのパラメータ実体が完全に解決され、すべての空白が削除されるように正規化され、括弧を含むようになります。その他の正規化(冗長な括弧の削除やオカレンス指標の簡略化など)はパーサの裁量に委ねられます。</target>
        </trans-unit>
        <trans-unit id="571ca938b3faeb08721ed17e39715453eb020c82" translate="yes" xml:space="preserve">
          <source>The content of a mapped byte buffer can change at any time, for example if the content of the corresponding region of the mapped file is changed by this program or another. Whether or not such changes occur, and when they occur, is operating-system dependent and therefore unspecified.</source>
          <target state="translated">例えば、マップされたファイルの対応する領域の内容がこのプログラムや他のプログラムによって変更された場合など、マップされたバイトバッファの内容はいつでも変更される可能性があります。このような変更が発生するかどうか、発生するタイミングはオペレーティングシステムに依存しているため特定できません。</target>
        </trans-unit>
        <trans-unit id="8ec1fd8ede78cb7ef9de2d4323ba7216c5e957fd" translate="yes" xml:space="preserve">
          <source>The content of the new buffer will be that of this buffer. Changes to this buffer's content will be visible in the new buffer, and vice versa; the two buffers' position, limit, and mark values will be independent.</source>
          <target state="translated">新しいバッファの内容はこのバッファの内容となります。このバッファの内容の変更は新しいバッファにも表示され、その逆も同様に、2つのバッファの位置、リミット、マークの値は独立しています。</target>
        </trans-unit>
        <trans-unit id="b52924f0667cd93dbfd903475fcb1b22e1203c6d" translate="yes" xml:space="preserve">
          <source>The content of the new buffer will be that of this buffer. Changes to this buffer's content will be visible in the new buffer; the new buffer itself, however, will be read-only and will not allow the shared content to be modified. The two buffers' position, limit, and mark values will be independent.</source>
          <target state="translated">新しいバッファの内容はこのバッファの内容となります。このバッファの内容の変更は新しいバッファに表示されますが、新しいバッファ自体は読み込み専用となり、共有されている内容を変更することはできません。2 つのバッファの位置、リミット、マークの値は独立しています。</target>
        </trans-unit>
        <trans-unit id="7b1d4314ceabde41e5b0b6b394b82a68318c7a87" translate="yes" xml:space="preserve">
          <source>The content of the new buffer will start at this buffer's current position rounded up to the index of the nearest aligned byte for the given unit size, and end at this buffer's limit rounded down to the index of the nearest aligned byte for the given unit size. If rounding results in out-of-bound values then the new buffer's capacity and limit will be zero. If rounding is within bounds the following expressions will be true for a new buffer &lt;code&gt;nb&lt;/code&gt; and unit size &lt;code&gt;unitSize&lt;/code&gt;:</source>
          <target state="translated">The content of the new buffer will start at this buffer's current position rounded up to the index of the nearest aligned byte for the given unit size, and end at this buffer's limit rounded down to the index of the nearest aligned byte for the given unit size. If rounding results in out-of-bound values then the new buffer's capacity and limit will be zero. If rounding is within bounds the following expressions will be true for a new buffer &lt;code&gt;nb&lt;/code&gt; and unit size &lt;code&gt;unitSize&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8be5a548cfa9fe9bb9c255c2eb6075bfe2f8e059" translate="yes" xml:space="preserve">
          <source>The content of the new buffer will start at this buffer's current position. Changes to this buffer's content will be visible in the new buffer, and vice versa; the two buffers' position, limit, and mark values will be independent.</source>
          <target state="translated">新しいバッファの内容は、このバッファの現在の位置から始まります。このバッファの内容の変更は新しいバッファにも表示され、その逆も同様に、2つのバッファの位置、リミット、マークの値は独立しています。</target>
        </trans-unit>
        <trans-unit id="cefde5877ed78f05c3cd681ed1cfc50dc6c6dc4c" translate="yes" xml:space="preserve">
          <source>The content of the new, read-only buffer will be the content of the given character sequence. The buffer's capacity will be &lt;code&gt;csq.length()&lt;/code&gt;, its position will be &lt;code&gt;start&lt;/code&gt;, its limit will be &lt;code&gt;end&lt;/code&gt;, and its mark will be undefined.</source>
          <target state="translated">新しい読み取り専用バッファのコンテンツは、指定された文字シーケンスのコンテンツになります。バッファーの容量は &lt;code&gt;csq.length()&lt;/code&gt; であり、その位置は &lt;code&gt;start&lt;/code&gt; であり、その制限は &lt;code&gt;end&lt;/code&gt; であり、そのマークは未定義です。</target>
        </trans-unit>
        <trans-unit id="26c3cb709632b1f3d492bb30e289e528ee9018bc" translate="yes" xml:space="preserve">
          <source>The content of the new, read-only buffer will be the content of the given character sequence. The new buffer's capacity and limit will be &lt;code&gt;csq.length()&lt;/code&gt;, its position will be zero, and its mark will be undefined.</source>
          <target state="translated">新しい読み取り専用バッファのコンテンツは、指定された文字シーケンスのコンテンツになります。新しいバッファの容量と制限は &lt;code&gt;csq.length()&lt;/code&gt; になり、その位置はゼロになり、マークは未定義になります。</target>
        </trans-unit>
        <trans-unit id="74948663ea9fc210edaba7a229133e9ad8796433" translate="yes" xml:space="preserve">
          <source>The content of this processing instruction.</source>
          <target state="translated">この処理命令の内容。</target>
        </trans-unit>
        <trans-unit id="9bd0d8b7305a2d4c56de9c62425fe68436144eac" translate="yes" xml:space="preserve">
          <source>The content of this processing instruction. This is from the first non white space character after the target to the character immediately preceding the &lt;code&gt;?&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">The content of this processing instruction. This is from the first non white space character after the target to the character immediately preceding the &lt;code&gt;?&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="021d368c57420163c43028320242ba50a5ecf8eb" translate="yes" xml:space="preserve">
          <source>The content pane.</source>
          <target state="translated">コンテンツペイン。</target>
        </trans-unit>
        <trans-unit id="a7af81925356d9326d970998ba5413043e77043f" translate="yes" xml:space="preserve">
          <source>The content type of the file, or &lt;code&gt;null&lt;/code&gt; if the content type cannot be determined</source>
          <target state="translated">ファイルのコンテンツタイプ。コンテンツタイプを判別できない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fefa96213a0f4f4a20404355dc88109a3b19df22" translate="yes" xml:space="preserve">
          <source>The content type or &lt;code&gt;null&lt;/code&gt; if the file type is not recognized</source>
          <target state="translated">コンテンツタイプ、またはファイルタイプが認識されない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc59a148955516ec4b579f1da10c937b05110d17" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the long edge of the medium, but in the opposite manner from landscape.</source>
          <target state="translated">コンテンツは、媒体の長辺を横切ってイメージ化されるが、風景とは逆の方法でイメージ化される。</target>
        </trans-unit>
        <trans-unit id="66f44833c6467f09c644d9346944666f84828bc6" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the long edge of the medium, but in the opposite manner from landscape. Reverse-landscape is defined to be a rotation of the print-stream page to be imaged by -90 degrees with respect to the medium (i.e. clockwise) from the portrait orientation.</source>
          <target state="translated">コンテンツは媒体の長辺を横切ってイメージされるが、ランドスケープとは逆の方法でイメージされる。ランドスケープを逆にすることは、印刷ストリームのページを、媒体に対して縦向きから-90度(すなわち時計回りに)回転させてイメージ化することであると定義されている。</target>
        </trans-unit>
        <trans-unit id="3e7a816918ae729437621b4ae4fdce0b55d3cfbc" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the long edge of the medium.</source>
          <target state="translated">コンテンツは、媒体の長辺をまたいでイメージ化されます。</target>
        </trans-unit>
        <trans-unit id="a6abed47322b2de7552654f3f1b6131fb26ff966" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the long edge of the medium. Landscape is defined to be a rotation of the print-stream page to be imaged by +90 degrees with respect to the medium (i.e. anti-clockwise) from the portrait orientation.</source>
          <target state="translated">コンテンツは媒体の長辺を横切ってイメージ化される。横向きとは、イメージ化される印刷ストリームページの回転を、縦向きから媒体に対して+90度(すなわち反時計回り)回転させることと定義されている。</target>
        </trans-unit>
        <trans-unit id="32a811781efdca4ccfc250c9bf66ab598db8e2cd" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the short edge of the medium, but in the opposite manner from portrait.</source>
          <target state="translated">内容は、媒体の短辺を横切ってイメージされるが、ポートレートとは逆の方法でイメージされる。</target>
        </trans-unit>
        <trans-unit id="785e00c1b7145d81a8620ade1cef3fdb93caa602" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the short edge of the medium, but in the opposite manner from portrait. Reverse-portrait is defined to be a rotation of the print-stream page to be imaged by 180 degrees with respect to the medium from the portrait orientation.</source>
          <target state="translated">コンテンツは媒体の短辺を横切ってイメージされるが、ポートレートとは逆の方法でイメージされる。逆ポートレートは、印刷ストリームページをポートレート方向から媒体に対して 180 度回転させてイメージ化することと定義されている。</target>
        </trans-unit>
        <trans-unit id="6852f939963698fc0410e778b02bf61dab00e768" translate="yes" xml:space="preserve">
          <source>The content will be imaged across the short edge of the medium.</source>
          <target state="translated">コンテンツは、媒体の短辺をまたいでイメージ化されます。</target>
        </trans-unit>
        <trans-unit id="b7fbb4e571bdfb18ee27b8258fa6c9a017747700" translate="yes" xml:space="preserve">
          <source>The content.</source>
          <target state="translated">内容です。</target>
        </trans-unit>
        <trans-unit id="6990de53515048fc24b7fd5e1afaad92bd31947e" translate="yes" xml:space="preserve">
          <source>The content. Either an Element or a ContentModel.</source>
          <target state="translated">コンテンツ。Element または ContentModel のいずれか。</target>
        </trans-unit>
        <trans-unit id="639eea9474f50230d9aa820f8cf5f588dbf94408" translate="yes" xml:space="preserve">
          <source>The contentPane may not be null.</source>
          <target state="translated">contentPaneはnullではないかもしれません。</target>
        </trans-unit>
        <trans-unit id="bc28f755e5915277d2988d4a6013aea7ae1c7b98" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;legalValues&lt;/code&gt; are copied, so subsequent modifications of the array referenced by &lt;code&gt;legalValues&lt;/code&gt; have no impact on this &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;legalValues&lt;/code&gt; の内容がコピーされるため、 &lt;code&gt;legalValues&lt;/code&gt; によって参照される配列のその後の変更は、この &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; インスタンスに影響を与えません。</target>
        </trans-unit>
        <trans-unit id="1946580fff472131e18b708943cd99d690b0e519" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;legalValues&lt;/code&gt; are copied, so subsequent modifications of the array referenced by &lt;code&gt;legalValues&lt;/code&gt; have no impact on this &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;legalValues&lt;/code&gt; の内容がコピーされるため、 &lt;code&gt;legalValues&lt;/code&gt; によって参照される配列のその後の変更は、この &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; インスタンスに影響を与えません。</target>
        </trans-unit>
        <trans-unit id="c325ca178e48547f71dba766d1fb7d18b3def496" translate="yes" xml:space="preserve">
          <source>The contents of all files are valid (that is, public non-abstract subclasses of &lt;code&gt;ResourceBundle&lt;/code&gt; for the &quot;.class&quot; files, syntactically correct &quot;.properties&quot; files). The default locale is &lt;code&gt;Locale(&quot;en&quot;, &quot;GB&quot;)&lt;/code&gt;.</source>
          <target state="translated">すべてのファイルの内容は有効です（つまり、「。class」ファイルの &lt;code&gt;ResourceBundle&lt;/code&gt; の非抽象サブクラス、構文的に正しい「.properties」ファイル）。デフォルトのロケールは &lt;code&gt;Locale(&quot;en&quot;, &quot;GB&quot;)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7042e6a9a03e92b7ccb4accd0d856b41fbb3e6fb" translate="yes" xml:space="preserve">
          <source>The contents of entries starting with &lt;code&gt;
     META-INF/services/&lt;/code&gt; are assumed to be service configuration files (see &lt;a href=&quot;../../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt;). If the name of a file (that follows &lt;code&gt;META-INF/services/&lt;/code&gt;) is a legal class name then it is assumed to be the fully-qualified class name of a service type. The entries in the file are assumed to be the fully-qualified class names of provider classes.</source>
          <target state="translated">The contents of entries starting with &lt;code&gt; META-INF/services/&lt;/code&gt; are assumed to be service configuration files (see &lt;a href=&quot;../../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;). If the name of a file (that follows &lt;code&gt;META-INF/services/&lt;/code&gt; ) is a legal class name then it is assumed to be the fully-qualified class name of a service type. The entries in the file are assumed to be the fully-qualified class names of provider classes.</target>
        </trans-unit>
        <trans-unit id="83269b44f34ab52d511039f26b8037bc2bdb6f8a" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;code&gt;MBeanInfo&lt;/code&gt; for a Dynamic MBean are determined by its &lt;a href=&quot;dynamicmbean#getMBeanInfo()&quot;&gt;&lt;code&gt;getMBeanInfo()&lt;/code&gt;&lt;/a&gt; method. This includes Open MBeans and Model MBeans, which are kinds of Dynamic MBeans.</source>
          <target state="translated">The contents of the &lt;code&gt;MBeanInfo&lt;/code&gt; for a Dynamic MBean are determined by its &lt;a href=&quot;dynamicmbean#getMBeanInfo()&quot;&gt; &lt;code&gt;getMBeanInfo()&lt;/code&gt; &lt;/a&gt; method. This includes Open MBeans and Model MBeans, which are kinds of Dynamic MBeans.</target>
        </trans-unit>
        <trans-unit id="ebac3c238a1391d9c3c39bf23e530a85063ac59c" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;code&gt;MBeanInfo&lt;/code&gt; for a Dynamic MBean are determined by its &lt;a href=&quot;dynamicmbean#getMBeanInfo--&quot;&gt;&lt;code&gt;getMBeanInfo()&lt;/code&gt;&lt;/a&gt; method. This includes Open MBeans and Model MBeans, which are kinds of Dynamic MBeans.</source>
          <target state="translated">動的MBeanの &lt;code&gt;MBeanInfo&lt;/code&gt; の内容は、その&lt;a href=&quot;dynamicmbean#getMBeanInfo--&quot;&gt; &lt;code&gt;getMBeanInfo()&lt;/code&gt; &lt;/a&gt;メソッドによって決定されます。これには、動的MBeanの一種であるオープンMBeanとモデルMBeanが含まれます。</target>
        </trans-unit>
        <trans-unit id="d848a8a7bfa54e24e5b7fcaf3feddaaa4c47c842" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;code&gt;MBeanInfo&lt;/code&gt; for a Standard MBean are determined by the MBean server as follows:</source>
          <target state="translated">標準MBeanの &lt;code&gt;MBeanInfo&lt;/code&gt; の内容は、MBeanサーバーによって次のように決定されます。</target>
        </trans-unit>
        <trans-unit id="af743abf5d160073126c0152d63b2dc17a6f2567" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;code&gt;message&lt;/code&gt; argument are copied; subsequent modification of the byte array does not affect the newly created object.</source>
          <target state="translated">The contents of the &lt;code&gt;message&lt;/code&gt; argument are copied; subsequent modification of the byte array does not affect the newly created object.</target>
        </trans-unit>
        <trans-unit id="641fc24cc38af987f1aefc7e151309eea4ad0ec1" translate="yes" xml:space="preserve">
          <source>The contents of the CDATA section will be reported through the regular &lt;a href=&quot;../contenthandler#characters(char%5B%5D,int,int)&quot;&gt;&lt;code&gt;characters&lt;/code&gt;&lt;/a&gt; event; this event is intended only to report the boundary.</source>
          <target state="translated">The contents of the CDATA section will be reported through the regular &lt;a href=&quot;../contenthandler#characters(char%5B%5D,int,int)&quot;&gt; &lt;code&gt;characters&lt;/code&gt; &lt;/a&gt; event; this event is intended only to report the boundary.</target>
        </trans-unit>
        <trans-unit id="2cb367ce10fdd3c0a6ce88ea6ecba270fbaf6c8d" translate="yes" xml:space="preserve">
          <source>The contents of the Range.</source>
          <target state="translated">レンジの内容です。</target>
        </trans-unit>
        <trans-unit id="6b894cb8f2eb423a6336bc47537c202aa64f2631" translate="yes" xml:space="preserve">
          <source>The contents of the byte array are copied; subsequent modification of the byte array does not affect the newly created key.</source>
          <target state="translated">バイト配列の内容はコピーされます。その後のバイト配列の変更は、新しく作成されたキーには影響しません。</target>
        </trans-unit>
        <trans-unit id="b0b4c7cdb43c1b320218f1d15b6496c67a3847fe" translate="yes" xml:space="preserve">
          <source>The contents of the located files indicate the names of actual implementation classes which implement the aforementioned service provider interfaces; the default class loader is then used to load each of these classes and to instantiate an instance of each class, which is then placed into the registry for later retrieval.</source>
          <target state="translated">配置されたファイルの内容は、前述のサービスプロバイダインタフェースを実装する実際の実装クラスの名前を示しています。デフォルトのクラスローダは、これらの各クラスをロードし、各クラスのインスタンスを作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="c577bd9582fc897c748292b336e567c8a4b33c18" translate="yes" xml:space="preserve">
          <source>The contents of the stream can be filtered during deserialization. If a &lt;a href=&quot;#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt;filter is set&lt;/a&gt; on an ObjectInputStream, the &lt;a href=&quot;objectinputfilter&quot;&gt;&lt;code&gt;ObjectInputFilter&lt;/code&gt;&lt;/a&gt; can check that the classes, array lengths, number of references in the stream, depth, and number of bytes consumed from the input stream are allowed and if not, can terminate deserialization. A &lt;a href=&quot;objectinputfilter.config#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt;process-wide filter&lt;/a&gt; can be configured that is applied to each &lt;code&gt;ObjectInputStream&lt;/code&gt; unless replaced using &lt;a href=&quot;#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt;&lt;code&gt;setObjectInputFilter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The contents of the stream can be filtered during deserialization. If a &lt;a href=&quot;#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt;filter is set&lt;/a&gt; on an ObjectInputStream, the &lt;a href=&quot;objectinputfilter&quot;&gt; &lt;code&gt;ObjectInputFilter&lt;/code&gt; &lt;/a&gt; can check that the classes, array lengths, number of references in the stream, depth, and number of bytes consumed from the input stream are allowed and if not, can terminate deserialization. A &lt;a href=&quot;objectinputfilter.config#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt;process-wide filter&lt;/a&gt; can be configured that is applied to each &lt;code&gt;ObjectInputStream&lt;/code&gt; unless replaced using &lt;a href=&quot;#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt; &lt;code&gt;setObjectInputFilter&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="388f439246bd0e7a4c23e29d7ee51483d463dcb8" translate="yes" xml:space="preserve">
          <source>The context class loader is used by system code and extensions when they need to lookup resources that might not exist in the system class loader. Granting enableContextClassLoaderOverride permission would allow a subclass of Thread to override the methods that are used to get or set the context class loader for a particular thread.</source>
          <target state="translated">コンテキストクラスローダは、システムコードや拡張機能がシステムクラスローダに存在しないかもしれないリソースを探す必要があるときに使用されます。enableContextClassLoaderOverride 権限を与えると、 Thread のサブクラスが特定のスレッドのコンテキストクラスローダを取得したり設定したりするために使用されるメソッドをオーバーライドできるようになります。</target>
        </trans-unit>
        <trans-unit id="590a02352e6b07386297ba1df528c88dc41306dc" translate="yes" xml:space="preserve">
          <source>The context class loader is used by system code and extensions when they need to lookup resources that might not exist in the system class loader. Granting setContextClassLoader permission would allow code to change which context class loader is used for a particular thread, including system threads.</source>
          <target state="translated">コンテキストクラスローダは、システムコードや拡張機能がシステムクラスローダに存在しないかもしれないリソースを探す必要があるときに使用されます。setContextClassLoader 権限を与えることで、システムスレッドを含む特定のスレッドで使用されるコンテキストクラスローダを変更することができます。</target>
        </trans-unit>
        <trans-unit id="a700d5065f6712b03f8838226dcd3bb123177951" translate="yes" xml:space="preserve">
          <source>The context establishment occurs in a loop where the initiator calls &lt;a href=&quot;#initSecContext(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;initSecContext&lt;/code&gt;&lt;/a&gt; and the acceptor calls &lt;a href=&quot;#acceptSecContext(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;acceptSecContext&lt;/code&gt;&lt;/a&gt; until the context is established. While in this loop the &lt;code&gt;initSecContext&lt;/code&gt; and &lt;code&gt;acceptSecContext&lt;/code&gt; methods produce tokens that the application sends over to the peer. The peer passes any such token as input to its &lt;code&gt;acceptSecContext&lt;/code&gt; or &lt;code&gt;initSecContext&lt;/code&gt; as the case may be.</source>
          <target state="translated">The context establishment occurs in a loop where the initiator calls &lt;a href=&quot;#initSecContext(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;initSecContext&lt;/code&gt; &lt;/a&gt; and the acceptor calls &lt;a href=&quot;#acceptSecContext(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;acceptSecContext&lt;/code&gt; &lt;/a&gt; until the context is established. While in this loop the &lt;code&gt;initSecContext&lt;/code&gt; and &lt;code&gt;acceptSecContext&lt;/code&gt; methods produce tokens that the application sends over to the peer. The peer passes any such token as input to its &lt;code&gt;acceptSecContext&lt;/code&gt; or &lt;code&gt;initSecContext&lt;/code&gt; as the case may be.</target>
        </trans-unit>
        <trans-unit id="5c382ea0f6e622d8b8b41c104555d098f7b132c4" translate="yes" xml:space="preserve">
          <source>The context in which the service has become available</source>
          <target state="translated">サービスが利用可能になったコンテキスト</target>
        </trans-unit>
        <trans-unit id="7e89d3aadd2fc133242406bab583a28ade056edc" translate="yes" xml:space="preserve">
          <source>The context relative to which &lt;code&gt;altName&lt;/code&gt; is named. If null, then the default initial context is implied.</source>
          <target state="translated">&lt;code&gt;altName&lt;/code&gt; の名前に関連するコンテキスト。nullの場合、デフォルトの初期コンテキストが暗示されます。</target>
        </trans-unit>
        <trans-unit id="9ce2783e4e5dd5cbc5de3a3c2791fe493d1b5b93" translate="yes" xml:space="preserve">
          <source>The control character corresponding to</source>
          <target state="translated">に対応する制御文字</target>
        </trans-unit>
        <trans-unit id="9370f04a5544f51098edcb0f278d5570b1dac651" translate="yes" xml:space="preserve">
          <source>The control modifier.</source>
          <target state="translated">制御修飾子です。</target>
        </trans-unit>
        <trans-unit id="5362b5a3c930f71b9b4eacd2f3f2bd885237f036" translate="yes" xml:space="preserve">
          <source>The control modifier. An indicator that the control key was held down during the event.</source>
          <target state="translated">コントロール修飾子。イベント中にコントロールキーが押されたことを示すインジケータ。</target>
        </trans-unit>
        <trans-unit id="e74ab6fbf2fbd58d08490c2d7480131e843f9403" translate="yes" xml:space="preserve">
          <source>The control's ASN.1 BER encoded value.</source>
          <target state="translated">コントロールのASN.1 BERエンコード値。</target>
        </trans-unit>
        <trans-unit id="10a80369bf3b0a07e4be4b96341c9aa03850a503" translate="yes" xml:space="preserve">
          <source>The control's criticality.</source>
          <target state="translated">コントロールの臨界点。</target>
        </trans-unit>
        <trans-unit id="55775f89e5178f6ddda32a06da33c39badc6c01e" translate="yes" xml:space="preserve">
          <source>The control's object identifier string.</source>
          <target state="translated">コントロールのオブジェクト識別子文字列。</target>
        </trans-unit>
        <trans-unit id="5d6d978d47d58f71c7f1271ddd066ad095c8e7b6" translate="yes" xml:space="preserve">
          <source>The conversion</source>
          <target state="translated">変換</target>
        </trans-unit>
        <trans-unit id="75d2a2e015ea330e6ecba09a56f23a1a380c1c54" translate="yes" xml:space="preserve">
          <source>The conversion creates a &lt;code&gt;LocalDateTime&lt;/code&gt; that represents the same year, month, day of month, hours, minutes, seconds and nanos date-time value as this &lt;code&gt;Timestamp&lt;/code&gt; in the local time zone.</source>
          <target state="translated">The conversion creates a &lt;code&gt;LocalDateTime&lt;/code&gt; that represents the same year, month, day of month, hours, minutes, seconds and nanos date-time value as this &lt;code&gt;Timestamp&lt;/code&gt; in the local time zone.</target>
        </trans-unit>
        <trans-unit id="90396444982f1d638d80c0a4ec00a3515e1db96f" translate="yes" xml:space="preserve">
          <source>The conversion creates a &lt;code&gt;LocalTime&lt;/code&gt; that represents the same hour, minute, and second time value as this &lt;code&gt;Time&lt;/code&gt;. The nanosecond &lt;code&gt;LocalTime&lt;/code&gt; field will be set to zero.</source>
          <target state="translated">The conversion creates a &lt;code&gt;LocalTime&lt;/code&gt; that represents the same hour, minute, and second time value as this &lt;code&gt;Time&lt;/code&gt; . The nanosecond &lt;code&gt;LocalTime&lt;/code&gt; field will be set to zero.</target>
        </trans-unit>
        <trans-unit id="270e247fd88eb7860b4d0a63df4b9c814a6bf3d7" translate="yes" xml:space="preserve">
          <source>The conversion creates an &lt;code&gt;Instant&lt;/code&gt; that represents the same point on the time-line as this &lt;code&gt;Calendar&lt;/code&gt;.</source>
          <target state="translated">変換により、この &lt;code&gt;Calendar&lt;/code&gt; と同じタイムライン上のポイントを表す &lt;code&gt;Instant&lt;/code&gt; が作成されます。</target>
        </trans-unit>
        <trans-unit id="efd60f8e9860e6d830f6fe82f385538e552bf494" translate="yes" xml:space="preserve">
          <source>The conversion creates an &lt;code&gt;Instant&lt;/code&gt; that represents the same point on the time-line as this &lt;code&gt;Date&lt;/code&gt;.</source>
          <target state="translated">変換により、この &lt;code&gt;Date&lt;/code&gt; と同じタイムライン上のポイントを表す &lt;code&gt;Instant&lt;/code&gt; が作成されます。</target>
        </trans-unit>
        <trans-unit id="54a6f4f7aad035dfcc7a40e216ebf648682262d6" translate="yes" xml:space="preserve">
          <source>The conversion creates an &lt;code&gt;Instant&lt;/code&gt; that represents the same point on the time-line as this &lt;code&gt;FileTime&lt;/code&gt;.</source>
          <target state="translated">変換により、この &lt;code&gt;FileTime&lt;/code&gt; と同じタイムライン上のポイントを表す &lt;code&gt;Instant&lt;/code&gt; が作成されます。</target>
        </trans-unit>
        <trans-unit id="d7789558a9e8bded9caf3402daf4673312af21d2" translate="yes" xml:space="preserve">
          <source>The conversion creates an &lt;code&gt;Instant&lt;/code&gt; that represents the same point on the time-line as this &lt;code&gt;Timestamp&lt;/code&gt;.</source>
          <target state="translated">The conversion creates an &lt;code&gt;Instant&lt;/code&gt; that represents the same point on the time-line as this &lt;code&gt;Timestamp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d9ef9299b2fb831504cc2147231f846f711cd03" translate="yes" xml:space="preserve">
          <source>The conversion does not correspond to any argument.</source>
          <target state="translated">変換はどの引数にも対応していません。</target>
        </trans-unit>
        <trans-unit id="12582e3813a1ad56415e3e99c5a9269b04638260" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the &lt;code&gt;ChronoLocalDate&lt;/code&gt; and the &lt;code&gt;LocalTime&lt;/code&gt; from the temporal object. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects. The result uses this chronology.</source>
          <target state="translated">変換エキス、コンバイン &lt;code&gt;ChronoLocalDate&lt;/code&gt; と &lt;code&gt;LocalTime&lt;/code&gt; 時間的オブジェクトから。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。結果はこの年表を使用しています。</target>
        </trans-unit>
        <trans-unit id="4b54547f5841ed450737930c04beb5ec751b5128" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the &lt;code&gt;LocalDate&lt;/code&gt; and the &lt;code&gt;LocalTime&lt;/code&gt; from the temporal object. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">変換エキス、コンバイン &lt;code&gt;LocalDate&lt;/code&gt; と &lt;code&gt;LocalTime&lt;/code&gt; 時間的オブジェクトから。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。</target>
        </trans-unit>
        <trans-unit id="70498ef0a69b6eab342c7fac47172341588c109c" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the &lt;code&gt;ZoneOffset&lt;/code&gt; and the &lt;code&gt;LocalTime&lt;/code&gt; from the temporal object. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">変換エキス、コンバイン &lt;code&gt;ZoneOffset&lt;/code&gt; と &lt;code&gt;LocalTime&lt;/code&gt; 時間的オブジェクトから。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。</target>
        </trans-unit>
        <trans-unit id="2bd237ed7933aea397ad0c05b7728ea1d9cef865" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the chronology and the date from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#date(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;Chronology.date(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">The conversion extracts and combines the chronology and the date from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#date(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;Chronology.date(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</target>
        </trans-unit>
        <trans-unit id="4b826735171361928b376c1342132346dd4ef147" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the chronology and the date from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#date-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;Chronology.date(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">変換では、時間オブジェクトから年表と日付を抽出して結合します。この動作は、抽出された年表で&lt;a href=&quot;chronology#date-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;Chronology.date(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;を使用することと同等です。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。</target>
        </trans-unit>
        <trans-unit id="7548e99ac707ebd95e7154d06d1c9ffd11706cf8" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the chronology and the date-time from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#localDateTime(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;Chronology.localDateTime(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">The conversion extracts and combines the chronology and the date-time from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#localDateTime(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;Chronology.localDateTime(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</target>
        </trans-unit>
        <trans-unit id="6b3b87af7f6d662b2b8b6d102b13718c4e5b2e3a" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the chronology and the date-time from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#localDateTime-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;Chronology.localDateTime(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">変換では、時間オブジェクトから時系列と日時を抽出して組み合わせます。この動作は、抽出された年表で&lt;a href=&quot;chronology#localDateTime-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;Chronology.localDateTime(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;を使用することと同等です。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。</target>
        </trans-unit>
        <trans-unit id="9e42ac87a10c0d630374d88d42e6ce627f20518e" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the chronology, date, time and zone from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#zonedDateTime(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;Chronology.zonedDateTime(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">The conversion extracts and combines the chronology, date, time and zone from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#zonedDateTime(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;Chronology.zonedDateTime(TemporalAccessor)&lt;/code&gt; &lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</target>
        </trans-unit>
        <trans-unit id="bc0526ed650fd16edcc91d9d9d4f4c192d585a6f" translate="yes" xml:space="preserve">
          <source>The conversion extracts and combines the chronology, date, time and zone from the temporal object. The behavior is equivalent to using &lt;a href=&quot;chronology#zonedDateTime-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;Chronology.zonedDateTime(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; with the extracted chronology. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">変換では、時間オブジェクトから年表、日付、時刻、およびゾーンを抽出して組み合わせます。この動作は、抽出された年表で&lt;a href=&quot;chronology#zonedDateTime-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;Chronology.zonedDateTime(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;を使用することと同等です。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。</target>
        </trans-unit>
        <trans-unit id="d1d03bf26e9a6cb1c5b95c5f95bbe5b5411246d5" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">変換により、&lt;a href=&quot;temporal/chronofield#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt;フィールドが抽出されます。</target>
        </trans-unit>
        <trans-unit id="fa783f0d9bec9cbce0330f54aae9cb879d9ade79" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; fields.</source>
          <target state="translated">変換により、&lt;a href=&quot;temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;temporal/chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;NANO_OF_SECOND&lt;/code&gt; &lt;/a&gt;フィールドが抽出されます。</target>
        </trans-unit>
        <trans-unit id="0b804266d47675c8fff80578d89c9217652722e5" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronofield#DAY_OF_MONTH&quot;&gt;&lt;code&gt;DAY_OF_MONTH&lt;/code&gt;&lt;/a&gt; fields. The extraction is only permitted if the temporal object has an ISO chronology, or can be converted to a &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">変換により、&lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;temporal/chronofield#DAY_OF_MONTH&quot;&gt; &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; &lt;/a&gt;フィールドが抽出されます。時間的なオブジェクトがISO年代順を持っている場合、または &lt;code&gt;LocalDate&lt;/code&gt; に変換できる場合にのみ、抽出が許可されます。</target>
        </trans-unit>
        <trans-unit id="81623a2ca823b67f80d520c5c052168f4c759622" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;&lt;/a&gt; field. The extraction is only permitted if the temporal object has an ISO chronology, or can be converted to a &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">変換により、&lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; &lt;/a&gt;フィールドが抽出されます。時間的なオブジェクトがISO年代順を持っている場合、または &lt;code&gt;LocalDate&lt;/code&gt; に変換できる場合にのみ、抽出が許可されます。</target>
        </trans-unit>
        <trans-unit id="9820f4411a835c958ac7328575c291589f31326f" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;&lt;/a&gt; fields. The extraction is only permitted if the temporal object has an ISO chronology, or can be converted to a &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">変換により、&lt;a href=&quot;temporal/chronofield#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; &lt;/a&gt;フィールドが抽出されます。時間的なオブジェクトがISO年代順を持っている場合、または &lt;code&gt;LocalDate&lt;/code&gt; に変換できる場合にのみ、抽出が許可されます。</target>
        </trans-unit>
        <trans-unit id="41faf7243bccfcf6675028684c04068be4e78524" translate="yes" xml:space="preserve">
          <source>The conversion extracts the &lt;a href=&quot;temporal/chronofield#YEAR&quot;&gt;&lt;code&gt;year&lt;/code&gt;&lt;/a&gt; field. The extraction is only permitted if the temporal object has an ISO chronology, or can be converted to a &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">変換により&lt;a href=&quot;temporal/chronofield#YEAR&quot;&gt; &lt;code&gt;year&lt;/code&gt; &lt;/a&gt;フィールドが抽出されます。時間的なオブジェクトがISO年代順を持っている場合、または &lt;code&gt;LocalDate&lt;/code&gt; に変換できる場合にのみ、抽出が許可されます。</target>
        </trans-unit>
        <trans-unit id="6499ccce5fd40cb40838d7075f78094ebeb01d21" translate="yes" xml:space="preserve">
          <source>The conversion loops around the set of units from the amount and uses the &lt;a href=&quot;temporal/chronounit#YEARS&quot;&gt;&lt;code&gt;YEARS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;temporal/chronounit#MONTHS&quot;&gt;&lt;code&gt;MONTHS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt; units to create a period. If any other units are found then an exception is thrown.</source>
          <target state="translated">変換では、金額から単位のセットをループし、&lt;a href=&quot;temporal/chronounit#YEARS&quot;&gt; &lt;code&gt;YEARS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;temporal/chronounit#MONTHS&quot;&gt; &lt;code&gt;MONTHS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; の&lt;/a&gt;単位を使用して期間を作成します。他のユニットが見つかった場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="3ddd488943b48f0d8ffd75f000f91af91af30040" translate="yes" xml:space="preserve">
          <source>The conversion loops around the set of units from the amount and uses the &lt;a href=&quot;temporal/temporalunit#getDuration()&quot;&gt;duration&lt;/a&gt; of the unit to calculate the total &lt;code&gt;Duration&lt;/code&gt;. Only a subset of units are accepted by this method. The unit must either have an &lt;a href=&quot;temporal/temporalunit#isDurationEstimated()&quot;&gt;exact duration&lt;/a&gt; or be &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;ChronoUnit.DAYS&lt;/code&gt;&lt;/a&gt; which is treated as 24 hours. If any other units are found then an exception is thrown.</source>
          <target state="translated">The conversion loops around the set of units from the amount and uses the &lt;a href=&quot;temporal/temporalunit#getDuration()&quot;&gt;duration&lt;/a&gt; of the unit to calculate the total &lt;code&gt;Duration&lt;/code&gt; . Only a subset of units are accepted by this method. The unit must either have an &lt;a href=&quot;temporal/temporalunit#isDurationEstimated()&quot;&gt;exact duration&lt;/a&gt; or be &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;ChronoUnit.DAYS&lt;/code&gt; &lt;/a&gt; which is treated as 24 hours. If any other units are found then an exception is thrown.</target>
        </trans-unit>
        <trans-unit id="d2027683d68cc5bd618e3f017b9f0057b1248599" translate="yes" xml:space="preserve">
          <source>The conversion loops around the set of units from the amount and uses the &lt;a href=&quot;temporal/temporalunit#getDuration--&quot;&gt;duration&lt;/a&gt; of the unit to calculate the total &lt;code&gt;Duration&lt;/code&gt;. Only a subset of units are accepted by this method. The unit must either have an &lt;a href=&quot;temporal/temporalunit#isDurationEstimated--&quot;&gt;exact duration&lt;/a&gt; or be &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;ChronoUnit.DAYS&lt;/code&gt;&lt;/a&gt; which is treated as 24 hours. If any other units are found then an exception is thrown.</source>
          <target state="translated">変換では、金額から単位のセットをループし、単位の&lt;a href=&quot;temporal/temporalunit#getDuration--&quot;&gt;期間&lt;/a&gt;を使用して、合計の &lt;code&gt;Duration&lt;/code&gt; を計算します。この方法では、ユニットのサブセットのみが受け入れられます。単位は&lt;a href=&quot;temporal/temporalunit#isDurationEstimated--&quot;&gt;正確な期間である&lt;/a&gt;か、24時間として扱われる&lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;ChronoUnit.DAYS&lt;/code&gt; で&lt;/a&gt;ある必要があります。他のユニットが見つかった場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="de374e2fe38f8f6723cc9d835befd0090683f98b" translate="yes" xml:space="preserve">
          <source>The conversion of a pathname string to or from an abstract pathname is inherently system-dependent. When an abstract pathname is converted into a pathname string, each name is separated from the next by a single copy of the default &lt;em&gt;separator character&lt;/em&gt;. The default name-separator character is defined by the system property &lt;code&gt;file.separator&lt;/code&gt;, and is made available in the public static fields &lt;a href=&quot;#separator&quot;&gt;&lt;code&gt;separator&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#separatorChar&quot;&gt;&lt;code&gt;separatorChar&lt;/code&gt;&lt;/a&gt; of this class. When a pathname string is converted into an abstract pathname, the names within it may be separated by the default name-separator character or by any other name-separator character that is supported by the underlying system.</source>
          <target state="translated">The conversion of a pathname string to or from an abstract pathname is inherently system-dependent. When an abstract pathname is converted into a pathname string, each name is separated from the next by a single copy of the default &lt;em&gt;separator character&lt;/em&gt;. The default name-separator character is defined by the system property &lt;code&gt;file.separator&lt;/code&gt; , and is made available in the public static fields &lt;a href=&quot;#separator&quot;&gt; &lt;code&gt;separator&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#separatorChar&quot;&gt; &lt;code&gt;separatorChar&lt;/code&gt; &lt;/a&gt; of this class. When a pathname string is converted into an abstract pathname, the names within it may be separated by the default name-separator character or by any other name-separator character that is supported by the underlying system.</target>
        </trans-unit>
        <trans-unit id="adb8598ff9c8ce94abf829e4e923229b7296bb69" translate="yes" xml:space="preserve">
          <source>The conversion of a pathname string to or from an abstract pathname is inherently system-dependent. When an abstract pathname is converted into a pathname string, each name is separated from the next by a single copy of the default &lt;em&gt;separator character&lt;/em&gt;. The default name-separator character is defined by the system property &lt;code&gt;file.separator&lt;/code&gt;, and is made available in the public static fields &lt;code&gt;&lt;a href=&quot;file#separator&quot;&gt;&lt;code&gt;separator&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;file#separatorChar&quot;&gt;&lt;code&gt;separatorChar&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; of this class. When a pathname string is converted into an abstract pathname, the names within it may be separated by the default name-separator character or by any other name-separator character that is supported by the underlying system.</source>
          <target state="translated">パス名文字列と抽象パス名の間の変換は、本質的にシステムに依存しています。抽象パス名がパス名文字列に変換されるとき、各名前は、デフォルトの&lt;em&gt;区切り文字の&lt;/em&gt;単一のコピーによって次の名前から分離されます。デフォルトの名前区切り文字は、システムプロパティ &lt;code&gt;file.separator&lt;/code&gt; によって定義され、このクラスのパブリック静的フィールド &lt;code&gt;&lt;a href=&quot;file#separator&quot;&gt;&lt;code&gt;separator&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;file#separatorChar&quot;&gt;&lt;code&gt;separatorChar&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; で使用可能になります。パス名文字列が抽象パス名に変換されるとき、その中の名前は、デフォルトの名前区切り文字、または基盤となるシステムでサポートされているその他の名前区切り文字で区切られます。</target>
        </trans-unit>
        <trans-unit id="0f9ba598909cafcafc84e677c238200abf9bf623" translate="yes" xml:space="preserve">
          <source>The conversion process is the reverse of that used by the URLEncoder class. It is assumed that all characters in the encoded string are one of the following: &quot;&lt;code&gt;a&lt;/code&gt;&quot; through &quot;&lt;code&gt;z&lt;/code&gt;&quot;, &quot;&lt;code&gt;A&lt;/code&gt;&quot; through &quot;&lt;code&gt;Z&lt;/code&gt;&quot;, &quot;&lt;code&gt;0&lt;/code&gt;&quot; through &quot;&lt;code&gt;9&lt;/code&gt;&quot;, and &quot;&lt;code&gt;-&lt;/code&gt;&quot;, &quot;&lt;code&gt;_&lt;/code&gt;&quot;, &quot;&lt;code&gt;.&lt;/code&gt;&quot;, and &quot;&lt;code&gt;*&lt;/code&gt;&quot;. The character &quot;&lt;code&gt;%&lt;/code&gt;&quot; is allowed but is interpreted as the start of a special escaped sequence.</source>
          <target state="translated">変換プロセスは、URLEncoderクラスで使用されるプロセスの逆です。エンコードされた文字列のすべての文字は、「 &lt;code&gt;a&lt;/code&gt; 」から「 &lt;code&gt;z&lt;/code&gt; 」、「 &lt;code&gt;A&lt;/code&gt; 」から「 &lt;code&gt;Z&lt;/code&gt; 」、「 &lt;code&gt;0&lt;/code&gt; 」から「 &lt;code&gt;9&lt;/code&gt; 」、および「 &lt;code&gt;-&lt;/code&gt; 」、「 &lt;code&gt;_&lt;/code&gt; 」、「」のいずれかであると想定されています。 &lt;code&gt;.&lt;/code&gt; &quot;、および&quot; &lt;code&gt;*&lt;/code&gt; &quot;。文字「 &lt;code&gt;%&lt;/code&gt; 」は許可されますが、特別なエスケープシーケンスの開始として解釈されます。</target>
        </trans-unit>
        <trans-unit id="d9df38eb05556485f863486b970a591e4776043a" translate="yes" xml:space="preserve">
          <source>The conversion state for the text range - RAW_TEXT or CONVERTED_TEXT.</source>
          <target state="translated">テキスト範囲の変換状態-RAW_TEXT または CONVERTED_TEXT。</target>
        </trans-unit>
        <trans-unit id="fb1ff74c5aed55df321b5f69eb36786f520db7dc" translate="yes" xml:space="preserve">
          <source>The conversion typically uses the &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt; field, which is standardized across calendar systems.</source>
          <target state="translated">変換では通常、カレンダーシステム全体で標準化されている&lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;EPOCH_DAY&lt;/code&gt; &lt;/a&gt;フィールドを使用します。</target>
        </trans-unit>
        <trans-unit id="91ef23b79edd0ee7ecba7d34b31c55ea64ca7d3f" translate="yes" xml:space="preserve">
          <source>The conversion uses the &lt;a href=&quot;temporal/temporalqueries#localDate()&quot;&gt;&lt;code&gt;TemporalQueries.localDate()&lt;/code&gt;&lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">The conversion uses the &lt;a href=&quot;temporal/temporalqueries#localDate()&quot;&gt; &lt;code&gt;TemporalQueries.localDate()&lt;/code&gt; &lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;EPOCH_DAY&lt;/code&gt; &lt;/a&gt; field.</target>
        </trans-unit>
        <trans-unit id="cbfdcd807f9acab66a49b1ca8f9b0af23d70ee42" translate="yes" xml:space="preserve">
          <source>The conversion uses the &lt;a href=&quot;temporal/temporalqueries#localDate--&quot;&gt;&lt;code&gt;TemporalQueries.localDate()&lt;/code&gt;&lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">変換では、&lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;EPOCH_DAY&lt;/code&gt; &lt;/a&gt;フィールドの抽出に依存する&lt;a href=&quot;temporal/temporalqueries#localDate--&quot;&gt; &lt;code&gt;TemporalQueries.localDate()&lt;/code&gt; &lt;/a&gt;クエリを使用します。</target>
        </trans-unit>
        <trans-unit id="75c09d569ddb4be209738f9e5466154e768cc101" translate="yes" xml:space="preserve">
          <source>The conversion uses the &lt;a href=&quot;temporal/temporalqueries#localTime()&quot;&gt;&lt;code&gt;TemporalQueries.localTime()&lt;/code&gt;&lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">The conversion uses the &lt;a href=&quot;temporal/temporalqueries#localTime()&quot;&gt; &lt;code&gt;TemporalQueries.localTime()&lt;/code&gt; &lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;NANO_OF_DAY&lt;/code&gt; &lt;/a&gt; field.</target>
        </trans-unit>
        <trans-unit id="dbddf0561d8a6eecdccec00ea1f9dc5a0286620b" translate="yes" xml:space="preserve">
          <source>The conversion uses the &lt;a href=&quot;temporal/temporalqueries#localTime--&quot;&gt;&lt;code&gt;TemporalQueries.localTime()&lt;/code&gt;&lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">変換では、&lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;NANO_OF_DAY&lt;/code&gt; &lt;/a&gt;フィールドの抽出に依存する&lt;a href=&quot;temporal/temporalqueries#localTime--&quot;&gt; &lt;code&gt;TemporalQueries.localTime()&lt;/code&gt; &lt;/a&gt;クエリを使用します。</target>
        </trans-unit>
        <trans-unit id="4823cbb58569805026b0df6490f23ca04cc32228" translate="yes" xml:space="preserve">
          <source>The conversion uses the &lt;a href=&quot;temporal/temporalqueries#offset()&quot;&gt;&lt;code&gt;TemporalQueries.offset()&lt;/code&gt;&lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#OFFSET_SECONDS&quot;&gt;&lt;code&gt;OFFSET_SECONDS&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">The conversion uses the &lt;a href=&quot;temporal/temporalqueries#offset()&quot;&gt; &lt;code&gt;TemporalQueries.offset()&lt;/code&gt; &lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#OFFSET_SECONDS&quot;&gt; &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; &lt;/a&gt; field.</target>
        </trans-unit>
        <trans-unit id="3ab0f44ea5fc468726fdc2960c4ee1963521f34d" translate="yes" xml:space="preserve">
          <source>The conversion uses the &lt;a href=&quot;temporal/temporalqueries#offset--&quot;&gt;&lt;code&gt;TemporalQueries.offset()&lt;/code&gt;&lt;/a&gt; query, which relies on extracting the &lt;a href=&quot;temporal/chronofield#OFFSET_SECONDS&quot;&gt;&lt;code&gt;OFFSET_SECONDS&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">変換では、&lt;a href=&quot;temporal/chronofield#OFFSET_SECONDS&quot;&gt; &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; &lt;/a&gt;フィールドの抽出に依存する&lt;a href=&quot;temporal/temporalqueries#offset--&quot;&gt; &lt;code&gt;TemporalQueries.offset()&lt;/code&gt; &lt;/a&gt;クエリを使用します。</target>
        </trans-unit>
        <trans-unit id="b208e5c531e20f8176aafb88407764919d7c63ff" translate="yes" xml:space="preserve">
          <source>The conversion will first obtain a &lt;code&gt;ZoneId&lt;/code&gt; from the temporal object, falling back to a &lt;code&gt;ZoneOffset&lt;/code&gt; if necessary. It will then try to obtain an &lt;code&gt;Instant&lt;/code&gt;, falling back to a &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; if necessary. The result will be either the combination of &lt;code&gt;ZoneId&lt;/code&gt; or &lt;code&gt;ZoneOffset&lt;/code&gt; with &lt;code&gt;Instant&lt;/code&gt; or &lt;code&gt;ChronoLocalDateTime&lt;/code&gt;. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects. The result uses this chronology.</source>
          <target state="translated">変換では、最初に一時オブジェクトから &lt;code&gt;ZoneId&lt;/code&gt; を取得し、必要に応じて &lt;code&gt;ZoneOffset&lt;/code&gt; にフォールバックします。次に &lt;code&gt;Instant&lt;/code&gt; を取得しようとし、必要に応じて &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; にフォールバックします。結果は、 &lt;code&gt;ZoneId&lt;/code&gt; または &lt;code&gt;ZoneOffset&lt;/code&gt; と &lt;code&gt;Instant&lt;/code&gt; または &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; の組み合わせになります。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。結果はこの年表を使用しています。</target>
        </trans-unit>
        <trans-unit id="571d73d0d2e70c92b228d6825ccb709402d177e7" translate="yes" xml:space="preserve">
          <source>The conversion will first obtain a &lt;code&gt;ZoneId&lt;/code&gt; from the temporal object, falling back to a &lt;code&gt;ZoneOffset&lt;/code&gt; if necessary. It will then try to obtain an &lt;code&gt;Instant&lt;/code&gt;, falling back to a &lt;code&gt;LocalDateTime&lt;/code&gt; if necessary. The result will be either the combination of &lt;code&gt;ZoneId&lt;/code&gt; or &lt;code&gt;ZoneOffset&lt;/code&gt; with &lt;code&gt;Instant&lt;/code&gt; or &lt;code&gt;LocalDateTime&lt;/code&gt;. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">変換では、まず一時オブジェクトから &lt;code&gt;ZoneId&lt;/code&gt; を取得し、必要に応じて &lt;code&gt;ZoneOffset&lt;/code&gt; にフォールバックします。次に、必要に応じて &lt;code&gt;LocalDateTime&lt;/code&gt; にフォールバックして &lt;code&gt;Instant&lt;/code&gt; を取得しようとします。結果は、 &lt;code&gt;ZoneId&lt;/code&gt; または &lt;code&gt;ZoneOffset&lt;/code&gt; と &lt;code&gt;Instant&lt;/code&gt; または &lt;code&gt;LocalDateTime&lt;/code&gt; の組み合わせになります。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。</target>
        </trans-unit>
        <trans-unit id="a4e422bfc9d1ec4b2959561dc366330dfb858376" translate="yes" xml:space="preserve">
          <source>The conversion will first obtain a &lt;code&gt;ZoneOffset&lt;/code&gt; from the temporal object. It will then try to obtain a &lt;code&gt;LocalDateTime&lt;/code&gt;, falling back to an &lt;code&gt;Instant&lt;/code&gt; if necessary. The result will be the combination of &lt;code&gt;ZoneOffset&lt;/code&gt; with either with &lt;code&gt;LocalDateTime&lt;/code&gt; or &lt;code&gt;Instant&lt;/code&gt;. Implementations are permitted to perform optimizations such as accessing those fields that are equivalent to the relevant objects.</source>
          <target state="translated">変換では、最初に時間オブジェクトから &lt;code&gt;ZoneOffset&lt;/code&gt; を取得します。次に &lt;code&gt;LocalDateTime&lt;/code&gt; の取得を試み、必要に応じて &lt;code&gt;Instant&lt;/code&gt; フォールバックします。結果は、 &lt;code&gt;ZoneOffset&lt;/code&gt; と &lt;code&gt;LocalDateTime&lt;/code&gt; または &lt;code&gt;Instant&lt;/code&gt; のいずれかとZoneOffsetの組み合わせになります。実装では、関連オブジェクトと同等のフィールドにアクセスするなどの最適化を実行できます。</target>
        </trans-unit>
        <trans-unit id="b496942fe294ba32639139266b2d6f7dad507a32" translate="yes" xml:space="preserve">
          <source>The conversion will obtain the chronology using &lt;a href=&quot;../temporal/temporalqueries#chronology()&quot;&gt;&lt;code&gt;TemporalQueries.chronology()&lt;/code&gt;&lt;/a&gt;. If the specified temporal object does not have a chronology, &lt;a href=&quot;isochronology&quot;&gt;&lt;code&gt;IsoChronology&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">The conversion will obtain the chronology using &lt;a href=&quot;../temporal/temporalqueries#chronology()&quot;&gt; &lt;code&gt;TemporalQueries.chronology()&lt;/code&gt; &lt;/a&gt;. If the specified temporal object does not have a chronology, &lt;a href=&quot;isochronology&quot;&gt; &lt;code&gt;IsoChronology&lt;/code&gt; &lt;/a&gt; is returned.</target>
        </trans-unit>
        <trans-unit id="6956bf86f5d6bf1d33c22f2f54c601f1ab0adbc0" translate="yes" xml:space="preserve">
          <source>The conversion will obtain the chronology using &lt;a href=&quot;../temporal/temporalqueries#chronology--&quot;&gt;&lt;code&gt;TemporalQueries.chronology()&lt;/code&gt;&lt;/a&gt;. If the specified temporal object does not have a chronology, &lt;a href=&quot;isochronology&quot;&gt;&lt;code&gt;IsoChronology&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">変換では、&lt;a href=&quot;../temporal/temporalqueries#chronology--&quot;&gt; &lt;code&gt;TemporalQueries.chronology()&lt;/code&gt; &lt;/a&gt;を使用して年表を取得します。指定された一時オブジェクトに年表がない場合、&lt;a href=&quot;isochronology&quot;&gt; &lt;code&gt;IsoChronology&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="fe7f61d1b35eb9e27b70264bc79f5cd3f1a74eaa" translate="yes" xml:space="preserve">
          <source>The conversion will try to obtain the zone in a way that favours region-based zones over offset-based zones using &lt;a href=&quot;temporal/temporalqueries#zone()&quot;&gt;&lt;code&gt;TemporalQueries.zone()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The conversion will try to obtain the zone in a way that favours region-based zones over offset-based zones using &lt;a href=&quot;temporal/temporalqueries#zone()&quot;&gt; &lt;code&gt;TemporalQueries.zone()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fc6ad7ff706fd21e39acd2de086b03b0801af3a8" translate="yes" xml:space="preserve">
          <source>The conversion will try to obtain the zone in a way that favours region-based zones over offset-based zones using &lt;a href=&quot;temporal/temporalqueries#zone--&quot;&gt;&lt;code&gt;TemporalQueries.zone()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">変換では、&lt;a href=&quot;temporal/temporalqueries#zone--&quot;&gt; &lt;code&gt;TemporalQueries.zone()&lt;/code&gt; &lt;/a&gt;を使用して、オフセットベースのゾーンよりもリージョンベースのゾーンを優先する方法でゾーンを取得しようとします。</target>
        </trans-unit>
        <trans-unit id="047a76b73af3eddf4a664a5aabf56f3f19a4cb48" translate="yes" xml:space="preserve">
          <source>The cookie is visible to all the pages in the directory you specify, and all the pages in that directory's subdirectories. A cookie's path must include the servlet that set the cookie, for example,</source>
          <target state="translated">クッキーは指定したディレクトリ内のすべてのページと、そのディレクトリのサブディレクトリ内のすべてのページに表示されます。クッキーのパスには、例えば、クッキーを設定したサーブレットが含まれていなければなりません。</target>
        </trans-unit>
        <trans-unit id="a24a3a0bfe8047ac7ffaf6eabdeb93c18e0cb5e0" translate="yes" xml:space="preserve">
          <source>The coordinate system is the same as the hosting &lt;code&gt;Component&lt;/code&gt; (i.e. the &lt;code&gt;Component&lt;/code&gt; returned by the &lt;a href=&quot;#getContainer()&quot;&gt;&lt;code&gt;getContainer&lt;/code&gt;&lt;/a&gt; method). This means a child view lives in the same coordinate system as the parent view unless the parent has explicitly changed the coordinate system. To schedule itself to be repainted a view can call repaint on the hosting &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">The coordinate system is the same as the hosting &lt;code&gt;Component&lt;/code&gt; (i.e. the &lt;code&gt;Component&lt;/code&gt; returned by the &lt;a href=&quot;#getContainer()&quot;&gt; &lt;code&gt;getContainer&lt;/code&gt; &lt;/a&gt; method). This means a child view lives in the same coordinate system as the parent view unless the parent has explicitly changed the coordinate system. To schedule itself to be repainted a view can call repaint on the hosting &lt;code&gt;Component&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77627fa15f66ec6fd6725232a0b575f22d919cf6" translate="yes" xml:space="preserve">
          <source>The coordinates of the rectangle returned by &lt;code&gt;getBounds2D(BufferedImage)&lt;/code&gt; are not necessarily the same as the coordinates of the &lt;code&gt;BufferedImage&lt;/code&gt; returned by this method. If the upper-left corner coordinates of the rectangle are negative then this part of the rectangle is not drawn. If the upper-left corner coordinates of the rectangle are positive then the filtered image is drawn at that position in the destination &lt;code&gt;BufferedImage&lt;/code&gt;.</source>
          <target state="translated">The coordinates of the rectangle returned by &lt;code&gt;getBounds2D(BufferedImage)&lt;/code&gt; are not necessarily the same as the coordinates of the &lt;code&gt;BufferedImage&lt;/code&gt; returned by this method. If the upper-left corner coordinates of the rectangle are negative then this part of the rectangle is not drawn. If the upper-left corner coordinates of the rectangle are positive then the filtered image is drawn at that position in the destination &lt;code&gt;BufferedImage&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="409a92b61b3937edfa43794f73fe03408f3a9070" translate="yes" xml:space="preserve">
          <source>The coordinates of the rectangle returned by &lt;code&gt;getBounds2D(Raster)&lt;/code&gt; are not necessarily the same as the coordinates of the &lt;code&gt;WritableRaster&lt;/code&gt; returned by this method. If the upper-left corner coordinates of rectangle are negative then this part of the rectangle is not drawn. If the coordinates of the rectangle are positive then the filtered image is drawn at that position in the destination &lt;code&gt;Raster&lt;/code&gt;.</source>
          <target state="translated">The coordinates of the rectangle returned by &lt;code&gt;getBounds2D(Raster)&lt;/code&gt; are not necessarily the same as the coordinates of the &lt;code&gt;WritableRaster&lt;/code&gt; returned by this method. If the upper-left corner coordinates of rectangle are negative then this part of the rectangle is not drawn. If the coordinates of the rectangle are positive then the filtered image is drawn at that position in the destination &lt;code&gt;Raster&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8fb12c6825c7fd13f722aba14ab559325916e2b" translate="yes" xml:space="preserve">
          <source>The core responsibility of a FocusTraversalPolicy is to provide algorithms determining the next and previous Components to focus when traversing forward or backward in a UI. Each FocusTraversalPolicy must also provide algorithms for determining the first, last, and default Components in a traversal cycle. First and last Components are used when normal forward and backward traversal, respectively, wraps. The default Component is the first to receive focus when traversing down into a new focus traversal cycle. A FocusTraversalPolicy can optionally provide an algorithm for determining a Window's initial Component. The initial Component is the first to receive focus when a Window is first made visible.</source>
          <target state="translated">FocusTraversalPolicy の中心的な責任は、UI 内で前方または後方に移動する際にフォーカスする次のコンポーネントと前のコンポーネントを決定するアルゴリズムを提供することです。各 FocusTraversalPolicy はまた、探索サイクルにおける最初のコンポーネント、最後のコンポーネント、およびデフォルトのコンポーネントを決定するアルゴリズムを提供しなければなりません。最初のコンポーネントと最後のコンポーネントは、通常の前方移動と後方移動がそれぞれラップするときに使用されます。デフォルトコンポーネントは、新しいフォーカストラバーサルサイクルに下方向にトラバーサルする際に、最初にフォーカスを受け取るコンポーネントです。FocusTraversalPolicyは、オプションで、ウィンドウの初期コンポーネントを決定するためのアルゴリズムを提供することができます。初期コンポーネントは、ウィンドウが最初に可視化されたときに最初にフォーカスを受け取るものです。</target>
        </trans-unit>
        <trans-unit id="a564f760f6b0979aedc01dc69a6463047e73f522" translate="yes" xml:space="preserve">
          <source>The corner components, if provided, are aligned with the ends of the scrollbars and headers. If there is a vertical scrollbar, the right corners appear; if there is a horizontal scrollbar, the lower corners appear; a row header gets left corners, and a column header gets upper corners.</source>
          <target state="translated">コーナーコンポーネントが提供されている場合は、スクロールバーとヘッダーの端に合わせて配置されます。垂直スクロールバーがある場合は右コーナーが表示され、水平スクロールバーがある場合は下コーナーが表示されます。</target>
        </trans-unit>
        <trans-unit id="356cb558fb1125bf97bfd4f9a42b1040449cfb5d" translate="yes" xml:space="preserve">
          <source>The corresponding &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; should be checked for the version that was actually used. If the version is not set in a request, then the version requested will be that of the sending &lt;a href=&quot;httpclient&quot;&gt;&lt;code&gt;HttpClient&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The corresponding &lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; should be checked for the version that was actually used. If the version is not set in a request, then the version requested will be that of the sending &lt;a href=&quot;httpclient&quot;&gt; &lt;code&gt;HttpClient&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="67cce5ff929f9bdadcc685d8ff1ecd96493940f0" translate="yes" xml:space="preserve">
          <source>The corresponding &lt;code&gt;Bindings&lt;/code&gt;.</source>
          <target state="translated">対応する &lt;code&gt;Bindings&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b480994a7091e3426c5edaa423c4f82d133e2289" translate="yes" xml:space="preserve">
          <source>The corresponding &lt;code&gt;TIFFTag&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">The corresponding &lt;code&gt;TIFFTag&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b70155a38b4df111e6e3074a162bafc1ae94748e" translate="yes" xml:space="preserve">
          <source>The corresponding Open Type, &lt;em&gt;opentype(J)&lt;/em&gt;. This is an instance of a subclass of &lt;a href=&quot;openmbean/opentype&quot;&gt;&lt;code&gt;OpenType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">対応するオープンタイプ&lt;em&gt;opentype（J）&lt;/em&gt;。これは&lt;a href=&quot;openmbean/opentype&quot;&gt; &lt;code&gt;OpenType&lt;/code&gt; の&lt;/a&gt;サブクラスのインスタンスです。</target>
        </trans-unit>
        <trans-unit id="0c40dcf63722a8c192ee371c1356c058acb3b36f" translate="yes" xml:space="preserve">
          <source>The corresponding method in &lt;code&gt;ObjectInputStream&lt;/code&gt; is &lt;code&gt;resolveProxyClass&lt;/code&gt;. For a given subclass of &lt;code&gt;ObjectOutputStream&lt;/code&gt; that overrides this method, the &lt;code&gt;resolveProxyClass&lt;/code&gt; method in the corresponding subclass of &lt;code&gt;ObjectInputStream&lt;/code&gt; must read any data or objects written by &lt;code&gt;annotateProxyClass&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ObjectInputStream&lt;/code&gt; の対応するメソッドは &lt;code&gt;resolveProxyClass&lt;/code&gt; です。このメソッドをオーバーライドする &lt;code&gt;ObjectOutputStream&lt;/code&gt; の特定のサブクラスの場合、 &lt;code&gt;ObjectInputStream&lt;/code&gt; の対応するサブクラスの &lt;code&gt;resolveProxyClass&lt;/code&gt; メソッドは、 &lt;code&gt;annotateProxyClass&lt;/code&gt; によって書き込まれたデータまたはオブジェクトを読み取る必要があります。</target>
        </trans-unit>
        <trans-unit id="c30c5d8c1a677f64708a87d05ecef9aaa2803beb" translate="yes" xml:space="preserve">
          <source>The corresponding method in &lt;code&gt;ObjectOutputStream&lt;/code&gt; is &lt;code&gt;annotateClass&lt;/code&gt;. This method will be invoked only once for each unique class in the stream. This method can be implemented by subclasses to use an alternate loading mechanism but must return a &lt;code&gt;Class&lt;/code&gt; object. Once returned, if the class is not an array class, its serialVersionUID is compared to the serialVersionUID of the serialized class, and if there is a mismatch, the deserialization fails and an &lt;a href=&quot;invalidclassexception&quot;&gt;&lt;code&gt;InvalidClassException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;ObjectOutputStream&lt;/code&gt; の対応するメソッドは &lt;code&gt;annotateClass&lt;/code&gt; です。このメソッドは、ストリーム内の一意のクラスごとに1回だけ呼び出されます。このメソッドは、代替読み込みメカニズムを使用するためにサブクラスによって実装できますが、 &lt;code&gt;Class&lt;/code&gt; オブジェクトを返す必要があります。返されると、クラスが配列クラスでない場合、そのserialVersionUIDがシリアル化されたクラスのserialVersionUIDと比較され、不一致があると、逆シリアル化は失敗し、&lt;a href=&quot;invalidclassexception&quot;&gt; &lt;code&gt;InvalidClassException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="3ac5720f125cacb45fafbd1b321034291ac3311a" translate="yes" xml:space="preserve">
          <source>The corresponding method in &lt;code&gt;ObjectOutputStream&lt;/code&gt; is &lt;code&gt;annotateProxyClass&lt;/code&gt;. For a given subclass of &lt;code&gt;ObjectInputStream&lt;/code&gt; that overrides this method, the &lt;code&gt;annotateProxyClass&lt;/code&gt; method in the corresponding subclass of &lt;code&gt;ObjectOutputStream&lt;/code&gt; must write any data or objects read by this method.</source>
          <target state="translated">&lt;code&gt;ObjectOutputStream&lt;/code&gt; の対応するメソッドは &lt;code&gt;annotateProxyClass&lt;/code&gt; です。このメソッドをオーバーライドする &lt;code&gt;ObjectInputStream&lt;/code&gt; の特定のサブクラスの場合、 &lt;code&gt;ObjectOutputStream&lt;/code&gt; の対応するサブクラスの &lt;code&gt;annotateProxyClass&lt;/code&gt; メソッドは、このメソッドによって読み取られたデータまたはオブジェクトを書き込む必要があります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
