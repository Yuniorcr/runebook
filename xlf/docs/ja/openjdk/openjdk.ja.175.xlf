<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="f52350011b2bff4b6aadc49010400da9f43d3bb7" translate="yes" xml:space="preserve">
          <source>This will fail if a &lt;code&gt;TreeWillExpandListener&lt;/code&gt; vetos it.</source>
          <target state="translated">&lt;code&gt;TreeWillExpandListener&lt;/code&gt; が拒否した場合、これは失敗します。</target>
        </trans-unit>
        <trans-unit id="ab38c9664df556481f2d51dfa76e580d88277188" translate="yes" xml:space="preserve">
          <source>This will generate a new key pair every time it is called.</source>
          <target state="translated">これにより、呼び出されるたびに新しいキーペアが生成されます。</target>
        </trans-unit>
        <trans-unit id="70f58a08959dc1e341564858f87708e283558ea2" translate="yes" xml:space="preserve">
          <source>This will invoke &lt;code&gt;insureRowContinuity&lt;/code&gt; to make sure the currently selected TreePaths are still valid based on the selection mode.</source>
          <target state="translated">これにより、 &lt;code&gt;insureRowContinuity&lt;/code&gt; が呼び出され、現在選択されているTreePathが選択モードに基づいて引き続き有効であることを確認します。</target>
        </trans-unit>
        <trans-unit id="0b66aca30d5516165d0d54b76b287be829817962" translate="yes" xml:space="preserve">
          <source>This will look up appropriate values from the provider of localization data.</source>
          <target state="translated">ローカリゼーションデータの提供者から適切な値を検索します。</target>
        </trans-unit>
        <trans-unit id="ece8edb688f403bce6cce9790dc7fd91da3e23a4" translate="yes" xml:space="preserve">
          <source>This will look up appropriate values from the provider of localization data. If the locale contains &quot;fw&quot; (First day of week) and/or &quot;rg&quot; (Region Override) &lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt; Unicode extensions&lt;/a&gt;, returned instance will reflect the values specified with those extensions. If both &quot;fw&quot; and &quot;rg&quot; are specified, the value from the &quot;fw&quot; extension supersedes the implicit one from the &quot;rg&quot; extension.</source>
          <target state="translated">これにより、ローカリゼーションデータのプロバイダーから適切な値が検索されます。ロケールに「fw」（曜日）または「rg」（リージョンオーバーライド）&lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt;Unicode拡張子&lt;/a&gt;が含まれている場合、返されるインスタンスはそれらの拡張子で指定された値を反映します。「fw」と「rg」の両方が指定されている場合、「fw」拡張子の値は「rg」拡張子の暗黙の値に優先します。</target>
        </trans-unit>
        <trans-unit id="df9a68f44aa8097af8ec68f8849aabd2320e2a38" translate="yes" xml:space="preserve">
          <source>This will message the callback for all valid tags, as well as tags that are implied but not explicitly specified. For example, the html string (&amp;lt;p&amp;gt;blah) only has a p tag defined. The callback will see the following methods:</source>
          <target state="translated">これにより、すべての有効なタグ、および暗黙的であるが明示的に指定されていないタグのコールバックにメッセージが送信されます。たとえば、html文字列（&amp;lt;p&amp;gt; blah）にはapタグのみが定義されています。コールバックには次のメソッドが表示されます。</target>
        </trans-unit>
        <trans-unit id="f07bc0ec249937e8e0df0e258e0fb5875f41ffd7" translate="yes" xml:space="preserve">
          <source>This will normally result in the behavior of breaking on a whitespace location if one can be found, otherwise breaking between characters.</source>
          <target state="translated">これは通常、空白が見つかった場合には空白の位置で改行し、そうでない場合には文字間で改行するという動作になります。</target>
        </trans-unit>
        <trans-unit id="be2f582267b5b2e46448732bd22aed27aa3c8ea5" translate="yes" xml:space="preserve">
          <source>This will not normally be useful, since the main purpose of this class is to make a snapshot of an existing Locator.</source>
          <target state="translated">このクラスの主な目的は、既存のロケーターのスナップショットを作成することなので、通常は役に立ちません。</target>
        </trans-unit>
        <trans-unit id="51631d282e296baa21b9558d237e218fff48f4a3" translate="yes" xml:space="preserve">
          <source>This will parse a textual representation of a duration, including the string produced by &lt;code&gt;toString()&lt;/code&gt;. The formats accepted are based on the ISO-8601 duration format &lt;code&gt;PnDTnHnMn.nS&lt;/code&gt; with days considered to be exactly 24 hours.</source>
          <target state="translated">これは、 &lt;code&gt;toString()&lt;/code&gt; によって生成された文字列を含む、期間のテキスト表現を解析します。受け入れられる形式はISO-8601期間形式 &lt;code&gt;PnDTnHnMn.nS&lt;/code&gt; に基づいており、日数は正確に24時間と見なされます。</target>
        </trans-unit>
        <trans-unit id="3ea3fa437e506a5a1971a2ca4e8d888a853c0203" translate="yes" xml:space="preserve">
          <source>This will parse the string produced by &lt;code&gt;toString()&lt;/code&gt; which is based on the ISO-8601 period formats &lt;code&gt;PnYnMnD&lt;/code&gt; and &lt;code&gt;PnW&lt;/code&gt;.</source>
          <target state="translated">これは、ISO-8601の期間フォーマット &lt;code&gt;PnYnMnD&lt;/code&gt; および &lt;code&gt;PnW&lt;/code&gt; に基づく &lt;code&gt;toString()&lt;/code&gt; によって生成された文字列を解析します。</target>
        </trans-unit>
        <trans-unit id="a8eaf12edbe768972c5bf9f8281d0fc56a10c24c" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;../clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">これにより、&lt;a href=&quot;../clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日付が取得されます。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。</target>
        </trans-unit>
        <trans-unit id="2230694209aa2317fc76b1b24e757431678172d5" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;../clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">これにより、&lt;a href=&quot;../clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日付が取得されます。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。</target>
        </trans-unit>
        <trans-unit id="9829edbfc032e460de5918c4267818337e50a673" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;../clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;../clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日付が取得されます。</target>
        </trans-unit>
        <trans-unit id="973c26b5bc3319d923f63cd006bd44273d33455b" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;../clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;../clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日付が取得されます。</target>
        </trans-unit>
        <trans-unit id="707d6f9ef400c704c21a3c9314815afc6f3cbae7" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date-time. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">これにより、&lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日時が取得されます。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。</target>
        </trans-unit>
        <trans-unit id="f3250d0d4aa00af753e7e46d667f29394b7ae229" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date-time. Specifying the time-zone avoids dependence on the default time-zone. The offset will be calculated from the specified time-zone.</source>
          <target state="translated">これにより、&lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日時が取得されます。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。オフセットは、指定されたタイムゾーンから計算されます。</target>
        </trans-unit>
        <trans-unit id="96e22858dc6b7c1e86f19e99efffd50ef421c45a" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">これにより、&lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日付が取得されます。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。</target>
        </trans-unit>
        <trans-unit id="da4f2c0327f11bec29487651be61d6578361f555" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current month-day. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">これにより、&lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の月日が取得されます。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。</target>
        </trans-unit>
        <trans-unit id="d1a1112eb2f460e0dd304b636395f87ed48febd8" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current time. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">これにより、&lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の時刻が取得されます。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。</target>
        </trans-unit>
        <trans-unit id="f48bd5d3a31851a451315a0d79a98cd5ab1e3b14" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current time. Specifying the time-zone avoids dependence on the default time-zone. The offset will be calculated from the specified time-zone.</source>
          <target state="translated">これにより、&lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の時刻が取得されます。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。オフセットは、指定されたタイムゾーンから計算されます。</target>
        </trans-unit>
        <trans-unit id="27a805d2b63e7781b55eb7034dd8ec7ca5023063" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current year-month. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">これにより、&lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の年月が取得されます。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。</target>
        </trans-unit>
        <trans-unit id="7e80ff766c94ce4d9a21f6f3fadb21afa8358e83" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current year. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">これにより、&lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の年が取得されます。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。</target>
        </trans-unit>
        <trans-unit id="41407725abc0b30ba6397cb5f98d01c738927873" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date-time. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">これにより、&lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日時が取得されます。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。</target>
        </trans-unit>
        <trans-unit id="665959bc639edfac15a73b628c7d40292c657afd" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date-time. Specifying the time-zone avoids dependence on the default time-zone. The offset will be calculated from the specified time-zone.</source>
          <target state="translated">これにより、&lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日時が取得されます。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。オフセットは、指定されたタイムゾーンから計算されます。</target>
        </trans-unit>
        <trans-unit id="34bf469d6445df27e6d4da34047b5416f4f7778b" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">これにより、&lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日付が取得されます。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。</target>
        </trans-unit>
        <trans-unit id="8ee0e9065dc29d677335d80c13d87feb9259ae65" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current month-day. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">これは、現在の月日を取得するために&lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;を照会します。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。</target>
        </trans-unit>
        <trans-unit id="6ad8dfc68d70ae6ac0ab47c11a7c585a6516f6c2" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current time. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">これにより、&lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の時刻が取得されます。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。</target>
        </trans-unit>
        <trans-unit id="0245657cf2d66d387048d5eca72e6afcd21ef7f9" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current time. Specifying the time-zone avoids dependence on the default time-zone. The offset will be calculated from the specified time-zone.</source>
          <target state="translated">これにより、&lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の時刻が取得されます。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。オフセットは、指定されたタイムゾーンから計算されます。</target>
        </trans-unit>
        <trans-unit id="6c6f86b6dab6dcd4e4a110a4462cc3e9b8289b36" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current year-month. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">これにより、&lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の年月が取得されます。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。</target>
        </trans-unit>
        <trans-unit id="770bd27e885a9f0b88771df564df12dc7a17ee02" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current year. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">これにより、現在の年を取得するために&lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会されます。タイムゾーンを指定すると、デフォルトのタイムゾーンへの依存を回避できます。</target>
        </trans-unit>
        <trans-unit id="55e1cd2373890a650e142b19f3ce8f55003c0168" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date-time.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日時が取得されます。</target>
        </trans-unit>
        <trans-unit id="e38cd59821854801b573dde473977a0d0fc2fc39" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date-time. The offset will be calculated from the time-zone in the clock.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日時が取得されます。オフセットは、時計のタイムゾーンから計算されます。</target>
        </trans-unit>
        <trans-unit id="df68938c781136d1f61e1b6b2dd2f21e72201092" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date-time. The zone and offset will be set based on the time-zone in the clock.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日時が取得されます。ゾーンとオフセットは、時計のタイムゾーンに基づいて設定されます。</target>
        </trans-unit>
        <trans-unit id="094bdab27bbe9c27deac96bb3e445c9a0e46eca8" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日付が取得されます。</target>
        </trans-unit>
        <trans-unit id="8403981f35cccf267846d902986c6eeb351ee307" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current month-day.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の月日が取得されます。</target>
        </trans-unit>
        <trans-unit id="6c7fc8a9c8477f706a9a96d9c6a9b6a68ece7d70" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current time.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の時刻が取得されます。</target>
        </trans-unit>
        <trans-unit id="80641d9cfd27b89266f1f2388766c7d1de0203fa" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current time. The offset will be calculated from the time-zone in the clock.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の時刻が取得されます。オフセットは、時計のタイムゾーンから計算されます。</target>
        </trans-unit>
        <trans-unit id="90a0360b2883da7ff1f36c4e553dac0c74044ee6" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current year-month.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の年月が取得されます。</target>
        </trans-unit>
        <trans-unit id="fcbb3771c9dc2793ab9558cdfe6a55646fbe34ef" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current year.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の年が取得されます。</target>
        </trans-unit>
        <trans-unit id="4b30385519a5d72e4a197ac6824fdeb31803d613" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date-time.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日時が取得されます。</target>
        </trans-unit>
        <trans-unit id="3ce726aba1854603c8707ad4db9f6b85c2ef2632" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date-time. The offset will be calculated from the time-zone in the clock.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日時が取得されます。オフセットは時計のタイムゾーンから計算されます。</target>
        </trans-unit>
        <trans-unit id="3d7e359999c96071dde4096430f18285388cd7b5" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date-time. The zone and offset will be set based on the time-zone in the clock.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日時が取得されます。ゾーンとオフセットは、時計のタイムゾーンに基づいて設定されます。</target>
        </trans-unit>
        <trans-unit id="3adff1aa350c98b0ea3203e87ff62393779ffd65" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の日付が取得されます。</target>
        </trans-unit>
        <trans-unit id="0349406cf4b8868af6b8306ec85731e4f6f75b08" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current month-day.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の月日が取得されます。</target>
        </trans-unit>
        <trans-unit id="bc5647c2131f117bd2ecdd62acb50fb78a955b58" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current time.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の時刻が取得されます。</target>
        </trans-unit>
        <trans-unit id="e1be01c9423aa939291ac93f48bcac53d427c2a3" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current time. The offset will be calculated from the time-zone in the clock.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の時刻が取得されます。オフセットは時計のタイムゾーンから計算されます。</target>
        </trans-unit>
        <trans-unit id="6e31ca88d8bfcdf0d499745ce10c21a4bf4bf48d" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current year-month.</source>
          <target state="translated">これにより、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の年月が取得されます。</target>
        </trans-unit>
        <trans-unit id="ab9de08ee82ae4786740e7b930d590cf4a6183ac" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current year.</source>
          <target state="translated">これにより、現在の年を取得するために、デフォルトのタイムゾーンで&lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt;が照会されます。</target>
        </trans-unit>
        <trans-unit id="7e58be422231c8d742e4de9f3c17d0709a51ddc9" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemUTC()&quot;&gt;&lt;code&gt;system UTC clock&lt;/code&gt;&lt;/a&gt; to obtain the current instant.</source>
          <target state="translated">これにより、&lt;a href=&quot;clock#systemUTC()&quot;&gt; &lt;code&gt;system UTC clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の瞬間が取得されます。</target>
        </trans-unit>
        <trans-unit id="f321f27144684e10d42dbb9bf339ee409ea0e88f" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemUTC--&quot;&gt;&lt;code&gt;system UTC clock&lt;/code&gt;&lt;/a&gt; to obtain the current instant.</source>
          <target state="translated">これにより、&lt;a href=&quot;clock#systemUTC--&quot;&gt; &lt;code&gt;system UTC clock&lt;/code&gt; &lt;/a&gt;が照会され、現在の瞬間が取得されます。</target>
        </trans-unit>
        <trans-unit id="71a3c787ff1a4f93da19b797f10dcb8d33cf8745" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date - today. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;../clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、指定されたクロックを照会して、現在の日付（今日）を取得します。この方法を使用すると、テストに代替クロックを使用できます。代替クロックは、&lt;a href=&quot;../clock&quot;&gt; &lt;code&gt;dependency injection&lt;/code&gt; &lt;/a&gt;を使用して導入できます。</target>
        </trans-unit>
        <trans-unit id="26c5245822e1245cd9ca0670bc71059f3444c0ef" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date - today. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;../clock&quot;&gt;dependency injection&lt;/a&gt;.</source>
          <target state="translated">これは、指定されたクロックを照会して、現在の日付（今日）を取得します。この方法を使用すると、テストに代替クロックを使用できます。代替クロックは、&lt;a href=&quot;../clock&quot;&gt;依存性注入&lt;/a&gt;を使用して導入できます。</target>
        </trans-unit>
        <trans-unit id="d581abe1f1ca54266a7b3d0b574a865a1bd39666" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date - today. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、指定されたクロックを照会して、現在の日付（今日）を取得します。この方法を使用すると、テストに代替クロックを使用できます。代替クロックは、&lt;a href=&quot;clock&quot;&gt; &lt;code&gt;dependency injection&lt;/code&gt; &lt;/a&gt;を使用して導入できます。</target>
        </trans-unit>
        <trans-unit id="e6ecbbe86ade988c0f7af15d7c9e93a7cfbfe9df" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date-time. The offset will be calculated from the time-zone in the clock.</source>
          <target state="translated">これは、指定されたクロックに問い合わせて現在の日付時刻を取得します。オフセットは、クロックのタイムゾーンから計算されます。</target>
        </trans-unit>
        <trans-unit id="64464121176e6f8078cbf9b5bbaa582a773f52ff" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date-time. The zone and offset will be set based on the time-zone in the clock.</source>
          <target state="translated">これは、指定されたクロックに問い合わせて、現在の日付時刻を取得します。ゾーンとオフセットは、クロックのタイムゾーンに基づいて設定されます。</target>
        </trans-unit>
        <trans-unit id="979323f8a1230cc1ff96b4264fede9355440178b" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date-time. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、現在の日時を取得するために指定されたクロックをクエリします。この方法を使用すると、テストに代替クロックを使用できます。代替クロックは、&lt;a href=&quot;clock&quot;&gt; &lt;code&gt;dependency injection&lt;/code&gt; &lt;/a&gt;を使用して導入できます。</target>
        </trans-unit>
        <trans-unit id="066349d83f341ec0776b2f0c8b118c0ac5f0c336" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current month-day. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、指定されたクロックを照会して、現在の月日を取得します。この方法を使用すると、テストに代替クロックを使用できます。代替クロックは、&lt;a href=&quot;clock&quot;&gt; &lt;code&gt;dependency injection&lt;/code&gt; &lt;/a&gt;を使用して導入できます。</target>
        </trans-unit>
        <trans-unit id="54eee961956929aac90360979e3f61a8a40984a3" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current time.</source>
          <target state="translated">これは、指定された時計を照会して現在の時刻を取得します。</target>
        </trans-unit>
        <trans-unit id="ca01b34fd4e3914216939e9c0d62dfd2005e282d" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current time. The offset will be calculated from the time-zone in the clock.</source>
          <target state="translated">これは、指定されたクロックに問い合わせて現在の時刻を取得します。オフセットは、クロックのタイムゾーンから計算されます。</target>
        </trans-unit>
        <trans-unit id="66524c4d69a7ed26367a83fe537172c3254f3f30" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current time. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、現在の時刻を取得するために指定されたクロックを照会します。この方法を使用すると、テストに代替クロックを使用できます。代替クロックは、&lt;a href=&quot;clock&quot;&gt; &lt;code&gt;dependency injection&lt;/code&gt; &lt;/a&gt;を使用して導入できます。</target>
        </trans-unit>
        <trans-unit id="afb747cc0b3b1a469e438d1c2db15a64feb99a97" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current year-month. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、指定されたクロックを照会して、現在の年月を取得します。この方法を使用すると、テストに代替クロックを使用できます。代替クロックは、&lt;a href=&quot;clock&quot;&gt; &lt;code&gt;dependency injection&lt;/code&gt; &lt;/a&gt;を使用して導入できます。</target>
        </trans-unit>
        <trans-unit id="13fe7e87e82c99d55ca687f561c4abf1d3b51724" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current year. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、現在の年を取得するために指定されたクロックをクエリします。この方法を使用すると、テストに代替クロックを使用できます。代替クロックは、&lt;a href=&quot;clock&quot;&gt; &lt;code&gt;dependency injection&lt;/code&gt; &lt;/a&gt;を使用して導入できます。</target>
        </trans-unit>
        <trans-unit id="c2e9917fb8c28705c77469341cdcf0b8b05ae375" translate="yes" xml:space="preserve">
          <source>This will register key bindings to show and hide the tooltip text only if &lt;code&gt;component&lt;/code&gt; has focus bindings. This is done so that components that are not normally focus traversable, such as &lt;code&gt;JLabel&lt;/code&gt;, are not made focus traversable as a result of invoking this method.</source>
          <target state="translated">これにより、 &lt;code&gt;component&lt;/code&gt; にフォーカスバインディングがある場合にのみ、ツールチップテキストを表示および非表示にするキーバインディングが登録されます。これは、 &lt;code&gt;JLabel&lt;/code&gt; など、通常はフォーカストラバースできないコンポーネントが、このメソッドを呼び出した結果としてフォーカストラバース可能にならないようにするために行われます。</target>
        </trans-unit>
        <trans-unit id="123021986b61edabe6c5c7972465bcdbd3f18d26" translate="yes" xml:space="preserve">
          <source>This will return &lt;code&gt;null&lt;/code&gt; if the UI has not installed an ActionMap.</source>
          <target state="translated">UIがActionMapをインストールしていない場合、これは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f51759ecd6c32d40763f0ea238ee168fc0a593a1" translate="yes" xml:space="preserve">
          <source>This will return &lt;code&gt;null&lt;/code&gt; if the UI has not installed an InputMap of the specified type.</source>
          <target state="translated">UIが指定されたタイプのInputMapをインストールしていない場合、これは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e036b6fc9e8cfa17742fa4ded7c21132de8ecb5a" translate="yes" xml:space="preserve">
          <source>This will return true for horizontal, left-to-right writing systems such as Roman.</source>
          <target state="translated">これは、ローマ字のような横書きの左から右への書き方の場合にも当てはまります。</target>
        </trans-unit>
        <trans-unit id="c76f87c08875c3c060f69802f808f11a363c8d21" translate="yes" xml:space="preserve">
          <source>This will return true if &lt;code&gt;action&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt; and actionPerformed is invoked on it.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; 以外で、actionPerformedが呼び出された場合、これはtrueを返します。</target>
        </trans-unit>
        <trans-unit id="dc00018208a6fb19f49eb297baa138555040e61d" translate="yes" xml:space="preserve">
          <source>This will return true if the text is layed out right to left at position, otherwise false.</source>
          <target state="translated">これは、テキストが位置で右から左にレイアウトされている場合はtrueを返し、そうでない場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="912496a0904835c01a2a3f627ed3e1de6dcfd427" translate="yes" xml:space="preserve">
          <source>This will throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if the object passed in is not one of the afore mentioned values.</source>
          <target state="translated">渡されたオブジェクトが前述の値のいずれでもない場合、これは &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="a91b45e2d6cccd06373696da027c47e938806640" translate="yes" xml:space="preserve">
          <source>This will update the displayed mnemonic property for the specified tab.</source>
          <target state="translated">指定されたタブの表示されているニーモニック プロパティを更新します。</target>
        </trans-unit>
        <trans-unit id="cd390f8dfde647c926076af19a84c11f8de9d52d" translate="yes" xml:space="preserve">
          <source>This would allow an attacker to configure the system identity scope with certificates that should not be trusted, thereby granting applet or application code signed with those certificates privileges that would have been denied by the system's original identity scope.</source>
          <target state="translated">これにより、攻撃者は、信頼すべきでない証明書でシステムの ID スコープを構成することができ、それによって、システムの元の ID スコープでは拒否されていたであろう、これらの証明書で署名されたアプレットやアプリケーションコードの特権を付与することが可能になります。</target>
        </trans-unit>
        <trans-unit id="0f4b372775693a3f3729fb4a12596b5f177dba17" translate="yes" xml:space="preserve">
          <source>This would allow an attacker to replace somebody else's (the &quot;target's&quot;) keypair with a possibly weaker keypair (e.g., a keypair of a smaller keysize). This also would allow the attacker to listen in on encrypted communication between the target and its peers. The target's peers might wrap an encryption session key under the target's &quot;new&quot; public key, which would allow the attacker (who possesses the corresponding private key) to unwrap the session key and decipher the communication data encrypted under that session key.</source>
          <target state="translated">これにより、攻撃者は他の誰かの(「ターゲット」の)鍵ペアを、より弱い鍵ペア(例えば、より小さな鍵サイズの鍵ペア)に置き換えることができるようになります。これにより、攻撃者はターゲットとそのピア間の暗号化された通信を盗聴することも可能になる。ターゲットのピアは、ターゲットの「新しい」公開鍵の下で暗号化セッション鍵をラップするかもしれない。</target>
        </trans-unit>
        <trans-unit id="0c3287cbec2ba672203f22a68abe1da17bd16a41" translate="yes" xml:space="preserve">
          <source>This would allow code to read the particular file associated with the file descriptor read. This is dangerous if the file contains confidential data.</source>
          <target state="translated">これにより、コードがファイルディスクリプタの読み取りに関連付けられた特定のファイルを読み取ることができるようになります。これは、ファイルに機密データが含まれている場合には危険です。</target>
        </trans-unit>
        <trans-unit id="88b09ac9d75e1b34a75decabc7990049448779b0" translate="yes" xml:space="preserve">
          <source>This would allow code to read the value, or determine the existence, of a particular environment variable. This is dangerous if the variable contains confidential data.</source>
          <target state="translated">これにより、コードが特定の環境変数の値を読み取ったり、存在を判断したりすることができるようになります。これは、変数に機密データが含まれている場合には危険です。</target>
        </trans-unit>
        <trans-unit id="4cbfabfbb474646305c1c6c72e013cde70ebf828" translate="yes" xml:space="preserve">
          <source>This would allow malfeasant code to share potentially sensitive or confidential information.</source>
          <target state="translated">これにより、悪質なコードは、潜在的に機密情報や機密情報を共有することができるようになります。</target>
        </trans-unit>
        <trans-unit id="ab0c0ea081779bc13fbe847295faf7b1c91f223c" translate="yes" xml:space="preserve">
          <source>This would allow malicious code to add tray icons to the system tray. First, such an icon may look like the icon of some known application (such as a firewall or anti-virus) and order a user to do something unsafe (with help of balloon messages). Second, the system tray may be glutted with tray icons so that no one could add a tray icon anymore.</source>
          <target state="translated">これにより、悪意のあるコードがシステムトレイにトレイアイコンを追加することができるようになります。第一に、そのようなアイコンは、(ファイアウォールやアンチウイルスなどの)既知のアプリケーションのアイコンのように見えるかもしれませんし、(バルーンメッセージの助けを借りて)安全ではない何かをするようにユーザーに命令することができます。第二に、システムトレイは、誰もがもうトレイアイコンを追加することができないように、トレイアイコンでいっぱいになることがあります。</target>
        </trans-unit>
        <trans-unit id="e78245f19ad38908342afcca7d4670ae693a02bd" translate="yes" xml:space="preserve">
          <source>This would allow somebody to introduce a possibly malicious provider (e.g., one that discloses the private keys passed to it) as the highest-priority provider. This would be possible because the Security object (which manages the installed providers) currently does not check the integrity or authenticity of a provider before attaching it.</source>
          <target state="translated">これにより、誰かが悪意のあるプロバイダ(例えば、渡された秘密鍵を公開しているプロバイダ)を最優先のプロバイダとして導入することができるようになります。これは、(インストールされたプロバイダを管理する)Security オブジェクトが、現在のところプロバイダをアタッチする前にプロバイダの完全性や真正性をチェックしていないために可能になるでしょう。</target>
        </trans-unit>
        <trans-unit id="6662c8190dbce153e597e67e53e732b988a736d7" translate="yes" xml:space="preserve">
          <source>This would allow somebody to introduce a possibly malicious provider (e.g., one that discloses the private keys passed to it) as the highest-priority provider. This would be possible because the Security object (which manages the installed providers) currently does not check the integrity or authenticity of a provider before attaching it. The &quot;insertProvider&quot; permission subsumes the &quot;insertProvider.{provider name}&quot; permission (see the section below for more information).</source>
          <target state="translated">これにより、誰かが悪意のあるプロバイダ(例えば、渡された秘密鍵を公開しているプロバイダ)を最優先のプロバイダとして導入することができるようになります。これは、(インストールされたプロバイダを管理する)Securityオブジェクトが、現在のところプロバイダをアタッチする前にプロバイダの完全性や真正性をチェックしないために可能になるだろう。insertProvider」パーミッションは、「insertProvider.{provider name}」パーミッションをサブセットします(詳細については、以下のセクションを参照してください)。</target>
        </trans-unit>
        <trans-unit id="1a78017524cd98bc8d0f44d22192a40383c71771" translate="yes" xml:space="preserve">
          <source>This would correspond to the following inner class implementation:</source>
          <target state="translated">これは、次のような内部クラスの実装に対応します。</target>
        </trans-unit>
        <trans-unit id="0e3055edf0bfd18992e0a6de528bcff05da3c9d7" translate="yes" xml:space="preserve">
          <source>This would grant an attacker permission to get the class loader for a particular class. This is dangerous because having access to a class's class loader allows the attacker to load other classes available to that class loader. The attacker would typically otherwise not have access to those classes.</source>
          <target state="translated">これは攻撃者に特定のクラスのクラス・ローダを取得する権限を与えることになります。クラスのクラス・ローダにアクセスすることで、攻撃者はそのクラス・ローダで利用可能な他のクラスをロードすることができるので、これは危険です。攻撃者は通常、そうでなければそれらのクラスにアクセスすることはできません。</target>
        </trans-unit>
        <trans-unit id="1ad63d6825444e50e947e58c76661b32b65b26dc" translate="yes" xml:space="preserve">
          <source>This writeReplace method is invoked by serialization if the method exists and it would be accessible from a method defined within the class of the object being serialized. Thus, the method can have private, protected and package-private access. Subclass access to this method follows java accessibility rules.</source>
          <target state="translated">この writeReplace メソッドは、メソッドが存在し、シリアライズされるオブジェクトのクラス内で定義されたメソッドからアクセスできる場合、シリアライズによって呼び出されます。したがって、このメソッドは、プライベート、プロテクト、およびパッケージ・プライベートのアクセスを持つことができます。このメソッドへのサブクラスのアクセスは、javaのアクセシビリティ・ルールに従います。</target>
        </trans-unit>
        <trans-unit id="6153a4519f91fd5f347f26300009c2204cb88817" translate="yes" xml:space="preserve">
          <source>This writer</source>
          <target state="translated">このライター</target>
        </trans-unit>
        <trans-unit id="b38908dca9805c5a238fb04ae01e8f4050fec50f" translate="yes" xml:space="preserve">
          <source>This year will be passed to the formatter to produce a string.</source>
          <target state="translated">この年はフォーマッターに渡されて文字列が生成されます。</target>
        </trans-unit>
        <trans-unit id="3155e2890a538a42cabf40f857ade908fe129fd5" translate="yes" xml:space="preserve">
          <source>This year-month will be passed to the formatter to produce a string.</source>
          <target state="translated">この年月は、文字列を生成するためにフォーマッタに渡されます。</target>
        </trans-unit>
        <trans-unit id="ca2dc477b42bd28584c257d149ff8e2a45fa2af8" translate="yes" xml:space="preserve">
          <source>This zip entry</source>
          <target state="translated">このzipエントリ</target>
        </trans-unit>
        <trans-unit id="021dfe21335b14b4968e4b2ded3d2749b66ffb3d" translate="yes" xml:space="preserve">
          <source>Those that affect the namespace (add/remove/rename an object)</source>
          <target state="translated">名前空間に影響を与えるもの(オブジェクトの追加/削除/名前の変更)</target>
        </trans-unit>
        <trans-unit id="41d43c29f5ca524c1ab57ac963b166ac1727f85d" translate="yes" xml:space="preserve">
          <source>Those that affect the objects' contents.</source>
          <target state="translated">オブジェクトの内容に影響を与えるもの</target>
        </trans-unit>
        <trans-unit id="c1c1c09efdf88e487e46bf293447de4044e92720" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;null&lt;/code&gt; is a valid &lt;code&gt;name&lt;/code&gt;, when &lt;code&gt;getAttributes(null)&lt;/code&gt; is invoked on a &lt;code&gt;Manifest&lt;/code&gt; obtained from a jar file, &lt;code&gt;null&lt;/code&gt; will be returned. While jar files themselves do not allow &lt;code&gt;null&lt;/code&gt;-named attributes, it is possible to invoke &lt;a href=&quot;#getEntries()&quot;&gt;&lt;code&gt;getEntries()&lt;/code&gt;&lt;/a&gt; on a &lt;code&gt;Manifest&lt;/code&gt;, and on that result, invoke &lt;code&gt;put&lt;/code&gt; with a null key and an arbitrary value. Subsequent invocations of &lt;code&gt;getAttributes(null)&lt;/code&gt; will return the just-&lt;code&gt;put&lt;/code&gt; value.</source>
          <target state="translated">けれども &lt;code&gt;null&lt;/code&gt; は有効な &lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;getAttributes(null)&lt;/code&gt; に呼び出された &lt;code&gt;Manifest&lt;/code&gt; jarファイルから取得し、 &lt;code&gt;null&lt;/code&gt; が返されます。 jarファイル自体は &lt;code&gt;null&lt;/code&gt; 名の属性を許可していませんが、 &lt;code&gt;Manifest&lt;/code&gt; で&lt;a href=&quot;#getEntries()&quot;&gt; &lt;code&gt;getEntries()&lt;/code&gt; &lt;/a&gt;を呼び出し、その結果、nullキーと任意の値を使用して &lt;code&gt;put&lt;/code&gt; を呼び出すことができます。後続の &lt;code&gt;getAttributes(null)&lt;/code&gt; の呼び出しは、ジャスト &lt;code&gt;put&lt;/code&gt; 値を返します。</target>
        </trans-unit>
        <trans-unit id="f2257a9a6819dd695a05d6dfb0d9d438845c5a51" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;null&lt;/code&gt; is a valid &lt;code&gt;name&lt;/code&gt;, when &lt;code&gt;getAttributes(null)&lt;/code&gt; is invoked on a &lt;code&gt;Manifest&lt;/code&gt; obtained from a jar file, &lt;code&gt;null&lt;/code&gt; will be returned. While jar files themselves do not allow &lt;code&gt;null&lt;/code&gt;-named attributes, it is possible to invoke &lt;a href=&quot;manifest#getEntries--&quot;&gt;&lt;code&gt;getEntries()&lt;/code&gt;&lt;/a&gt; on a &lt;code&gt;Manifest&lt;/code&gt;, and on that result, invoke &lt;code&gt;put&lt;/code&gt; with a null key and an arbitrary value. Subsequent invocations of &lt;code&gt;getAttributes(null)&lt;/code&gt; will return the just-&lt;code&gt;put&lt;/code&gt; value.</source>
          <target state="translated">けれども &lt;code&gt;null&lt;/code&gt; は有効な &lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;getAttributes(null)&lt;/code&gt; に呼び出された &lt;code&gt;Manifest&lt;/code&gt; jarファイルから取得し、 &lt;code&gt;null&lt;/code&gt; が返されます。 jarファイル自体は &lt;code&gt;null&lt;/code&gt; 名の属性を許可していませんが、 &lt;code&gt;Manifest&lt;/code&gt; で&lt;a href=&quot;manifest#getEntries--&quot;&gt; &lt;code&gt;getEntries()&lt;/code&gt; &lt;/a&gt;を呼び出すことができます。その結果、nullキーと任意の値で &lt;code&gt;put&lt;/code&gt; を呼び出すことができます。後続の呼び出し &lt;code&gt;getAttributes(null)&lt;/code&gt; ジャスト戻ります &lt;code&gt;put&lt;/code&gt; 値を。</target>
        </trans-unit>
        <trans-unit id="dc7726b449187faa9ac0fce42a6b634bcfe416bd" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;Option.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;optional#isPresent--&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">そうしたくなるかもしれませんが、 &lt;code&gt;Option.empty()&lt;/code&gt; によって返されたインスタンスに対して &lt;code&gt;==&lt;/code&gt; と比較して、オブジェクトが空かどうかのテストを避けてください。シングルトンであるという保証はありません。代わりに、&lt;a href=&quot;optional#isPresent--&quot;&gt; &lt;code&gt;isPresent()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="91a4ed9dd4cd840a425d290fb66814a060470728" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;Option.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;optionaldouble#isPresent--&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">そうしたくなるかもしれませんが、 &lt;code&gt;Option.empty()&lt;/code&gt; によって返されたインスタンスに対して &lt;code&gt;==&lt;/code&gt; と比較して、オブジェクトが空かどうかのテストを避けてください。シングルトンであるという保証はありません。代わりに、&lt;a href=&quot;optionaldouble#isPresent--&quot;&gt; &lt;code&gt;isPresent()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="77aae136cefeffc558a45b9df9b56e6e43f74883" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;Option.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;optionalint#isPresent--&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">そうしたくなるかもしれませんが、 &lt;code&gt;Option.empty()&lt;/code&gt; によって返されたインスタンスに対して &lt;code&gt;==&lt;/code&gt; と比較して、オブジェクトが空かどうかのテストを避けてください。シングルトンであるという保証はありません。代わりに、&lt;a href=&quot;optionalint#isPresent--&quot;&gt; &lt;code&gt;isPresent()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="e62e1ce6b1ba7918fdd05b0b1bc91e6d3a38ca00" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;Option.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;optionallong#isPresent--&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">そうしたくなるかもしれませんが、 &lt;code&gt;Option.empty()&lt;/code&gt; によって返されたインスタンスに対して &lt;code&gt;==&lt;/code&gt; と比較して、オブジェクトが空かどうかのテストを避けてください。シングルトンであるという保証はありません。代わりに、&lt;a href=&quot;optionallong#isPresent--&quot;&gt; &lt;code&gt;isPresent()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="c3dc345dd3c212c59813309c93cfb6cce6dbc97e" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;Optional.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;#isPresent()&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">そうすることは魅力的かもしれませんが、 &lt;code&gt;Optional.empty()&lt;/code&gt; によって返されるインスタンスに対して &lt;code&gt;==&lt;/code&gt; と比較して、オブジェクトが空であるかどうかをテストすることは避けてください。シングルトンであるという保証はありません。代わりに、&lt;a href=&quot;#isPresent()&quot;&gt; &lt;code&gt;isPresent()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="ca102c88d30d7335b0e3bf6217ececc55555b19d" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;OptionalDouble.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;#isPresent()&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">そうすることは魅力的かもしれませんが、 &lt;code&gt;OptionalDouble.empty()&lt;/code&gt; によって返されるインスタンスに対して &lt;code&gt;==&lt;/code&gt; と比較して、オブジェクトが空であるかどうかをテストすることは避けてください。シングルトンであるという保証はありません。代わりに、&lt;a href=&quot;#isPresent()&quot;&gt; &lt;code&gt;isPresent()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="7bfc87b8730ab001eaa391027afbe9e6bedfaadb" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;OptionalInt.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;#isPresent()&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">そうすることは魅力的かもしれませんが、 &lt;code&gt;OptionalInt.empty()&lt;/code&gt; によって返されるインスタンスに対して &lt;code&gt;==&lt;/code&gt; と比較して、オブジェクトが空であるかどうかをテストすることは避けてください。シングルトンであるという保証はありません。代わりに、&lt;a href=&quot;#isPresent()&quot;&gt; &lt;code&gt;isPresent()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="2d94b7fc01e59d72cf5eb2bb51150f613f355b05" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;OptionalLong.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;#isPresent()&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">そうするのは魅力的かもしれませんが、 &lt;code&gt;OptionalLong.empty()&lt;/code&gt; によって返されるインスタンスに対して &lt;code&gt;==&lt;/code&gt; と比較して、オブジェクトが空であるかどうかをテストすることは避けてください。シングルトンであるという保証はありません。代わりに、&lt;a href=&quot;#isPresent()&quot;&gt; &lt;code&gt;isPresent()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="172d058e561fbad190c87f42005f6b323df0602b" translate="yes" xml:space="preserve">
          <source>Though the class is abstract, this should be called by all sub-classes.</source>
          <target state="translated">クラスは抽象的ですが、これはすべてのサブクラスから呼び出されなければなりません。</target>
        </trans-unit>
        <trans-unit id="7863f7503e5377891a3b7452c7d6cc377d443fe7" translate="yes" xml:space="preserve">
          <source>Thread</source>
          <target state="translated">Thread</target>
        </trans-unit>
        <trans-unit id="b38699fda488b7482936986c498a536c22765ae1" translate="yes" xml:space="preserve">
          <source>Thread &lt;var&gt;T&lt;/var&gt; is awakened spuriously. (See below.)</source>
          <target state="translated">スレッド &lt;var&gt;T&lt;/var&gt; が誤って目覚めます。（下記参照。）</target>
        </trans-unit>
        <trans-unit id="82c156be42f44539fe0b88299d8861156fe936d0" translate="yes" xml:space="preserve">
          <source>Thread &lt;var&gt;T&lt;/var&gt; then becomes disabled for thread scheduling purposes and lies dormant until one of the following occurs:</source>
          <target state="translated">その後、スレッド &lt;var&gt;T&lt;/var&gt; はスレッドスケジューリングの目的で無効になり、次のいずれかが発生するまで休止状態になります。</target>
        </trans-unit>
        <trans-unit id="47da6895e1e6b88393c30e25b50c55119b8f50a9" translate="yes" xml:space="preserve">
          <source>Thread CPU time</source>
          <target state="translated">スレッドCPU時間</target>
        </trans-unit>
        <trans-unit id="2b5c53fe9a4d8244bf0c25a63e7182e6adff93b7" translate="yes" xml:space="preserve">
          <source>Thread Contention Monitoring</source>
          <target state="translated">スレッド競合の監視</target>
        </trans-unit>
        <trans-unit id="e36518333df71af3800afef11101d5e994956a61" translate="yes" xml:space="preserve">
          <source>Thread ID</source>
          <target state="translated">スレッドID</target>
        </trans-unit>
        <trans-unit id="8966395c230e01509af40eaad7d13451c363a8d1" translate="yes" xml:space="preserve">
          <source>Thread ID is a positive long value returned by calling the &lt;a href=&quot;../../../../java.base/java/lang/thread#getId()&quot;&gt;&lt;code&gt;Thread.getId()&lt;/code&gt;&lt;/a&gt; method for a thread. The thread ID is unique during its lifetime. When a thread is terminated, this thread ID may be reused.</source>
          <target state="translated">スレッドIDは、スレッドの&lt;a href=&quot;../../../../java.base/java/lang/thread#getId()&quot;&gt; &lt;code&gt;Thread.getId()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって返される正のlong値です。スレッドIDは、その存続期間中は一意です。スレッドが終了すると、このスレッドIDが再利用される場合があります。</target>
        </trans-unit>
        <trans-unit id="2f76e42195d15468b3b9fa18723e7fa6b81585ed" translate="yes" xml:space="preserve">
          <source>Thread ID is a positive long value returned by calling the &lt;a href=&quot;../thread#getId--&quot;&gt;&lt;code&gt;Thread.getId()&lt;/code&gt;&lt;/a&gt; method for a thread. The thread ID is unique during its lifetime. When a thread is terminated, this thread ID may be reused.</source>
          <target state="translated">スレッドIDは、スレッドの&lt;a href=&quot;../thread#getId--&quot;&gt; &lt;code&gt;Thread.getId()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって返される正のlong値です。スレッドIDは、存続期間中は一意です。スレッドが終了すると、このスレッドIDは再利用できます。</target>
        </trans-unit>
        <trans-unit id="709e7d50f757d668c561bcdc2ac04e1234cd811b" translate="yes" xml:space="preserve">
          <source>Thread ID.</source>
          <target state="translated">スレッドIDです。</target>
        </trans-unit>
        <trans-unit id="decc9ddc6ccf02c9a5756c9d56cc2fbaf1b269a8" translate="yes" xml:space="preserve">
          <source>Thread confinement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4951041fa59248144f5ebbfd84aeac5ab159b5bd" translate="yes" xml:space="preserve">
          <source>Thread filters allow control over the thread for which events are generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e08a6a8a038b968e3f09ce256b0dafb9d3d418" translate="yes" xml:space="preserve">
          <source>Thread has completed execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0825558e2b7fc0a45e2f74cacdf1bdf02b87df6e" translate="yes" xml:space="preserve">
          <source>Thread has not yet been started</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db928b13a70f56d0745b7f5a1040b50baa958b5a" translate="yes" xml:space="preserve">
          <source>Thread information.</source>
          <target state="translated">スレッド情報です。</target>
        </trans-unit>
        <trans-unit id="d3e04278e885f30adacf4ed40fd0d643789254ec" translate="yes" xml:space="preserve">
          <source>Thread information. &lt;code&gt;ThreadInfo&lt;/code&gt; contains the information about a thread including:</source>
          <target state="translated">スレッド情報。 &lt;code&gt;ThreadInfo&lt;/code&gt; には、次のようなスレッドに関する情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="7eeaeec83aecd2a1149e18cd1e9b6a72b2e35dad" translate="yes" xml:space="preserve">
          <source>Thread is runnable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb04826123975c6ce46ed51c4d676fcb2fb0db1b" translate="yes" xml:space="preserve">
          <source>Thread is sleeping - Thread.sleep() or JVM_Sleep() was called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2376b5b3566ee794a1d2b62a5d8dbc31709bc2a" translate="yes" xml:space="preserve">
          <source>Thread is waiting - Object.wait() or JVM_MonitorWait() was called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e087babe8f322a04e34b171ac5428952c1f348e5" translate="yes" xml:space="preserve">
          <source>Thread is waiting on a java monitor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245257161e6583b400ed0b2e4c375d5c08cf3d19" translate="yes" xml:space="preserve">
          <source>Thread pools address two different problems: they usually provide improved performance when executing large numbers of asynchronous tasks, due to reduced per-task invocation overhead, and they provide a means of bounding and managing the resources, including threads, consumed when executing a collection of tasks. Each &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; also maintains some basic statistics, such as the number of completed tasks.</source>
          <target state="translated">スレッドプールは2つの異なる問題に対処します。これらは通常、タスクごとの呼び出しオーバーヘッドが減少するため、多数の非同期タスクを実行するときのパフォーマンスを向上させます。また、スレッドプールは、コレクションの実行時に消費されるリソース（スレッドを含む）を制限および管理する手段を提供します。タスク。各 &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; は、完了したタスクの数など、いくつかの基本的な統計も保持します。</target>
        </trans-unit>
        <trans-unit id="498b8432f46fddf13062facb9c2bd487eddb870e" translate="yes" xml:space="preserve">
          <source>Thread priority</source>
          <target state="translated">スレッドの優先順位</target>
        </trans-unit>
        <trans-unit id="d0cef5deb223649da3c92e68bafacf5c8ccd785e" translate="yes" xml:space="preserve">
          <source>Thread safety</source>
          <target state="translated">スレッドの安全性</target>
        </trans-unit>
        <trans-unit id="72809a8293d05a6a9382d9942b9b926564a1c746" translate="yes" xml:space="preserve">
          <source>Thread state for a runnable thread.</source>
          <target state="translated">実行可能なスレッドのスレッド状態。</target>
        </trans-unit>
        <trans-unit id="65e27057aee71462f8ef5ca1cc912182af819db7" translate="yes" xml:space="preserve">
          <source>Thread state for a runnable thread. A thread in the runnable state is executing in the Java virtual machine but it may be waiting for other resources from the operating system such as processor.</source>
          <target state="translated">実行可能なスレッドのスレッド状態。実行可能な状態のスレッドはJava仮想マシン内で実行していますが、プロセッサなどのオペレーティングシステムからの他のリソースを待っている可能性があります。</target>
        </trans-unit>
        <trans-unit id="df6c8dd552273072e97ea4c8472d6e96a96d8574" translate="yes" xml:space="preserve">
          <source>Thread state for a terminated thread.</source>
          <target state="translated">終了したスレッドのスレッド状態。</target>
        </trans-unit>
        <trans-unit id="8a1446e3c3300c50d045828f33142928402b6b95" translate="yes" xml:space="preserve">
          <source>Thread state for a terminated thread. The thread has completed execution.</source>
          <target state="translated">終了したスレッドのスレッド状態。スレッドの実行が終了しました。</target>
        </trans-unit>
        <trans-unit id="73e0ba0f7aeec2eb8c7b530fbb30e6ff959660f0" translate="yes" xml:space="preserve">
          <source>Thread state for a thread blocked waiting for a monitor lock.</source>
          <target state="translated">モニターロック待ちでブロックされたスレッドのスレッド状態。</target>
        </trans-unit>
        <trans-unit id="a175dece080502f182a4ac14b2aecbff3d430faa" translate="yes" xml:space="preserve">
          <source>Thread state for a thread blocked waiting for a monitor lock. A thread in the blocked state is waiting for a monitor lock to enter a synchronized block/method or reenter a synchronized block/method after calling &lt;a href=&quot;object#wait()&quot;&gt;&lt;code&gt;Object.wait&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">モニターロックの待機中にブロックされたスレッドのスレッド状態。ブロックされた状態のスレッドは、&lt;a href=&quot;object#wait()&quot;&gt; &lt;code&gt;Object.wait&lt;/code&gt; &lt;/a&gt;を呼び出した後、モニターロックが同期されたブロック/メソッドに入るか、同期されたブロック/メソッドに再び入るのを待っています。</target>
        </trans-unit>
        <trans-unit id="2a31282db01ce2b51fcf38902248613f6ffba8e0" translate="yes" xml:space="preserve">
          <source>Thread state for a thread blocked waiting for a monitor lock. A thread in the blocked state is waiting for a monitor lock to enter a synchronized block/method or reenter a synchronized block/method after calling &lt;a href=&quot;object#wait--&quot;&gt;&lt;code&gt;Object.wait&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">モニターロックを待機してブロックされたスレッドのスレッド状態。ブロックされた状態のスレッドは、&lt;a href=&quot;object#wait--&quot;&gt; &lt;code&gt;Object.wait&lt;/code&gt; &lt;/a&gt;を呼び出した後、モニターロックが同期ブロック/メソッドに入るか、同期ブロック/メソッドに再び入るのを待っています。</target>
        </trans-unit>
        <trans-unit id="48710439938209a9068defb0dd2b0bf3e76f0613" translate="yes" xml:space="preserve">
          <source>Thread state for a thread which has not yet started.</source>
          <target state="translated">まだ始まっていないスレッドのスレッド状態。</target>
        </trans-unit>
        <trans-unit id="af284d1da127cbc526d950ced6e4a90d2475d1b7" translate="yes" xml:space="preserve">
          <source>Thread state for a waiting thread with a specified waiting time.</source>
          <target state="translated">指定された待ち時間で待機しているスレッドのスレッド状態。</target>
        </trans-unit>
        <trans-unit id="7a7250ddba064781f1554cf011ff62ae96e59908" translate="yes" xml:space="preserve">
          <source>Thread state for a waiting thread with a specified waiting time. A thread is in the timed waiting state due to calling one of the following methods with a specified positive waiting time:</source>
          <target state="translated">指定された正の待ち時間で待機しているスレッドのスレッド状態。指定された正の待ち時間で以下のいずれかのメソッドを呼び出したことにより、スレッドは時限待ち状態になっています。</target>
        </trans-unit>
        <trans-unit id="b54bff3c8b87140de825890e79a5df2c5842fbea" translate="yes" xml:space="preserve">
          <source>Thread state for a waiting thread.</source>
          <target state="translated">待機中のスレッドの状態。</target>
        </trans-unit>
        <trans-unit id="941d814bdcb829ba77fc90cf8890778199edba85" translate="yes" xml:space="preserve">
          <source>Thread state for a waiting thread. A thread is in the waiting state due to calling one of the following methods:</source>
          <target state="translated">待機中のスレッドのスレッド状態。スレッドは、以下のメソッドのいずれかを呼び出したために待機状態になっています。</target>
        </trans-unit>
        <trans-unit id="2f1ce44fa0295a976b81d62000e1b31dbca131c4" translate="yes" xml:space="preserve">
          <source>Thread state.</source>
          <target state="translated">スレッドの状態。</target>
        </trans-unit>
        <trans-unit id="e128f3449d069ef6b583f18918df98231fb4d7e4" translate="yes" xml:space="preserve">
          <source>Thread status is unknown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b8a713b2305b4293d7fbdc69d9d2dcd0e06979" translate="yes" xml:space="preserve">
          <source>Thread suspensions through events have the same functionality as explicitly requested suspensions. See &lt;a href=&quot;../threadreference#suspend()&quot;&gt;&lt;code&gt;ThreadReference.suspend()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../virtualmachine#suspend()&quot;&gt;&lt;code&gt;VirtualMachine.suspend()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37915ecf8d3fbed9a5eee81ef2911cbb3a5e3207" translate="yes" xml:space="preserve">
          <source>Thread.State</source>
          <target state="translated">Thread.State</target>
        </trans-unit>
        <trans-unit id="227b8c08cb3e154fa0c97f680236579b595d2cdf" translate="yes" xml:space="preserve">
          <source>Thread.State.valueOf()</source>
          <target state="translated">Thread.State.valueOf()</target>
        </trans-unit>
        <trans-unit id="eab39abeba8f1421cd199818dca838a9a46b93d6" translate="yes" xml:space="preserve">
          <source>Thread.State.values()</source>
          <target state="translated">Thread.State.values()</target>
        </trans-unit>
        <trans-unit id="3b1e1ddec40a1768b399e0e7edd5a51d8ac63a2f" translate="yes" xml:space="preserve">
          <source>Thread.UncaughtExceptionHandler</source>
          <target state="translated">Thread.UncaughtExceptionHandler</target>
        </trans-unit>
        <trans-unit id="b2907aff7a7f3b35e8c36c18838b4cc8379af99b" translate="yes" xml:space="preserve">
          <source>Thread.UncaughtExceptionHandler.uncaughtException()</source>
          <target state="translated">Thread.UncaughtExceptionHandler.uncaughtException()</target>
        </trans-unit>
        <trans-unit id="017eeed09c879121d0e05abd5fe58899b43d4ea0" translate="yes" xml:space="preserve">
          <source>Thread.activeCount()</source>
          <target state="translated">Thread.activeCount()</target>
        </trans-unit>
        <trans-unit id="999d0445f342e796eca1980b7690afdcb5158b12" translate="yes" xml:space="preserve">
          <source>Thread.checkAccess()</source>
          <target state="translated">Thread.checkAccess()</target>
        </trans-unit>
        <trans-unit id="f2c765012cdb2c99f4040d45437af41d1440bb47" translate="yes" xml:space="preserve">
          <source>Thread.clone()</source>
          <target state="translated">Thread.clone()</target>
        </trans-unit>
        <trans-unit id="c8a71b66c4398d49d8980ac355b64a2eebcf7856" translate="yes" xml:space="preserve">
          <source>Thread.countStackFrames()</source>
          <target state="translated">Thread.countStackFrames()</target>
        </trans-unit>
        <trans-unit id="14d63f03738836e668f5f71f9e55e8365a75ae1b" translate="yes" xml:space="preserve">
          <source>Thread.currentThread()</source>
          <target state="translated">Thread.currentThread()</target>
        </trans-unit>
        <trans-unit id="a17a2ac01af96173a4c81f70feeeb92bf1433728" translate="yes" xml:space="preserve">
          <source>Thread.destroy()</source>
          <target state="translated">Thread.destroy()</target>
        </trans-unit>
        <trans-unit id="44c77da31f926c9d694c2a498f020854d765caf6" translate="yes" xml:space="preserve">
          <source>Thread.dumpStack()</source>
          <target state="translated">Thread.dumpStack()</target>
        </trans-unit>
        <trans-unit id="ecc7a70e392fa8cc950aaac5e645a2e789efc731" translate="yes" xml:space="preserve">
          <source>Thread.enumerate()</source>
          <target state="translated">Thread.enumerate()</target>
        </trans-unit>
        <trans-unit id="31cf59305d3b9681e3d76421833bfc1166f6f122" translate="yes" xml:space="preserve">
          <source>Thread.getAllStackTraces()</source>
          <target state="translated">Thread.getAllStackTraces()</target>
        </trans-unit>
        <trans-unit id="1649662c849479f9870629ce2cab73c37e20eedb" translate="yes" xml:space="preserve">
          <source>Thread.getContextClassLoader()</source>
          <target state="translated">Thread.getContextClassLoader()</target>
        </trans-unit>
        <trans-unit id="5a412458b1b23392b311b35cf5bb335105a370fb" translate="yes" xml:space="preserve">
          <source>Thread.getDefaultUncaughtExceptionHandler()</source>
          <target state="translated">Thread.getDefaultUncaughtExceptionHandler()</target>
        </trans-unit>
        <trans-unit id="16f1a575881cc5847fafd379ea1d9d300fa44c53" translate="yes" xml:space="preserve">
          <source>Thread.getId()</source>
          <target state="translated">Thread.getId()</target>
        </trans-unit>
        <trans-unit id="6a0dabdeb42a3697bd9fac5a96a70d14fb3c58df" translate="yes" xml:space="preserve">
          <source>Thread.getName()</source>
          <target state="translated">Thread.getName()</target>
        </trans-unit>
        <trans-unit id="b6170d84660464b3f7f949e18707f34c2e85ee8f" translate="yes" xml:space="preserve">
          <source>Thread.getPriority()</source>
          <target state="translated">Thread.getPriority()</target>
        </trans-unit>
        <trans-unit id="26f9e3f0516e77b15937f086b1eeb053b130f252" translate="yes" xml:space="preserve">
          <source>Thread.getStackTrace()</source>
          <target state="translated">Thread.getStackTrace()</target>
        </trans-unit>
        <trans-unit id="71ac7c92823b4424bc7162bb1b89de74457ffce4" translate="yes" xml:space="preserve">
          <source>Thread.getState()</source>
          <target state="translated">Thread.getState()</target>
        </trans-unit>
        <trans-unit id="e12f6eb305e7411829c51497fd129040d275818a" translate="yes" xml:space="preserve">
          <source>Thread.getThreadGroup()</source>
          <target state="translated">Thread.getThreadGroup()</target>
        </trans-unit>
        <trans-unit id="f7f7ae37d7deb49b7be39a8b531af9d469695dc6" translate="yes" xml:space="preserve">
          <source>Thread.getUncaughtExceptionHandler()</source>
          <target state="translated">Thread.getUncaughtExceptionHandler()</target>
        </trans-unit>
        <trans-unit id="d1aff596760ca7e8dc9570a3667e4b946bf25433" translate="yes" xml:space="preserve">
          <source>Thread.holdsLock()</source>
          <target state="translated">Thread.holdsLock()</target>
        </trans-unit>
        <trans-unit id="0c679e1ae42be00487fdd2405b3876efe6e45677" translate="yes" xml:space="preserve">
          <source>Thread.interrupt()</source>
          <target state="translated">Thread.interrupt()</target>
        </trans-unit>
        <trans-unit id="d0f93e9cceb068dd91c27b2e8f651777100317b6" translate="yes" xml:space="preserve">
          <source>Thread.interrupted()</source>
          <target state="translated">Thread.interrupted()</target>
        </trans-unit>
        <trans-unit id="31066e35d013a30e202a803a47b8519877c009eb" translate="yes" xml:space="preserve">
          <source>Thread.isAlive()</source>
          <target state="translated">Thread.isAlive()</target>
        </trans-unit>
        <trans-unit id="5d05ccb7edc96d5f1ad39a8d33098b7143a0cd91" translate="yes" xml:space="preserve">
          <source>Thread.isDaemon()</source>
          <target state="translated">Thread.isDaemon()</target>
        </trans-unit>
        <trans-unit id="9678dd137c825627a6ae3fdeaa3c4c9a489db969" translate="yes" xml:space="preserve">
          <source>Thread.isInterrupted()</source>
          <target state="translated">Thread.isInterrupted()</target>
        </trans-unit>
        <trans-unit id="073de4e92c9d623f1bd8b870a9e735df18ae281c" translate="yes" xml:space="preserve">
          <source>Thread.join()</source>
          <target state="translated">Thread.join()</target>
        </trans-unit>
        <trans-unit id="b729d431e0b564d96dc90f2bed4afecb0ecd0b33" translate="yes" xml:space="preserve">
          <source>Thread.resume()</source>
          <target state="translated">Thread.resume()</target>
        </trans-unit>
        <trans-unit id="e2d01b8112bf5d5ce95d8ab511e5f58e457b4ebd" translate="yes" xml:space="preserve">
          <source>Thread.run()</source>
          <target state="translated">Thread.run()</target>
        </trans-unit>
        <trans-unit id="2eeb3ea9181940cd157763e860fcc2d31214fef8" translate="yes" xml:space="preserve">
          <source>Thread.setContextClassLoader()</source>
          <target state="translated">Thread.setContextClassLoader()</target>
        </trans-unit>
        <trans-unit id="e6bba6264d61a80c3b03757c36a799fbd9a9a8a5" translate="yes" xml:space="preserve">
          <source>Thread.setDaemon()</source>
          <target state="translated">Thread.setDaemon()</target>
        </trans-unit>
        <trans-unit id="51fc3228f0259239be05e033ff097a6e05bc88e8" translate="yes" xml:space="preserve">
          <source>Thread.setDefaultUncaughtExceptionHandler()</source>
          <target state="translated">Thread.setDefaultUncaughtExceptionHandler()</target>
        </trans-unit>
        <trans-unit id="d2500dc1d856ba3e2e8480d5653722c0d4b94520" translate="yes" xml:space="preserve">
          <source>Thread.setName()</source>
          <target state="translated">Thread.setName()</target>
        </trans-unit>
        <trans-unit id="ef7bd4ccc7035bdacfccfa2c76e7fc3418d5acc3" translate="yes" xml:space="preserve">
          <source>Thread.setPriority()</source>
          <target state="translated">Thread.setPriority()</target>
        </trans-unit>
        <trans-unit id="00b42ae30a214ac4d46dbd095019858a956a56fa" translate="yes" xml:space="preserve">
          <source>Thread.setUncaughtExceptionHandler()</source>
          <target state="translated">Thread.setUncaughtExceptionHandler()</target>
        </trans-unit>
        <trans-unit id="03ccf24176b10508883d0f15c0a5b719b142f622" translate="yes" xml:space="preserve">
          <source>Thread.sleep()</source>
          <target state="translated">Thread.sleep()</target>
        </trans-unit>
        <trans-unit id="c6a87556f30c1e309db6481c92974797e01b0d3c" translate="yes" xml:space="preserve">
          <source>Thread.start()</source>
          <target state="translated">Thread.start()</target>
        </trans-unit>
        <trans-unit id="8df1b2c26de1f0e2c12a00e7f10d398fe12ce9c4" translate="yes" xml:space="preserve">
          <source>Thread.stop()</source>
          <target state="translated">Thread.stop()</target>
        </trans-unit>
        <trans-unit id="947baa5d0e303b1e099f6774b4ba07547fc1ac61" translate="yes" xml:space="preserve">
          <source>Thread.suspend()</source>
          <target state="translated">Thread.suspend()</target>
        </trans-unit>
        <trans-unit id="821acae9dc94b56c58d6278790aa30ffa5fee076" translate="yes" xml:space="preserve">
          <source>Thread.toString()</source>
          <target state="translated">Thread.toString()</target>
        </trans-unit>
        <trans-unit id="c3a7b2ce085b6df3fdd37512478dfb38b0c3a7e0" translate="yes" xml:space="preserve">
          <source>Thread.yield()</source>
          <target state="translated">Thread.yield()</target>
        </trans-unit>
        <trans-unit id="2023533734ec13e574b188e53e027097d56ed4e2" translate="yes" xml:space="preserve">
          <source>ThreadDeath</source>
          <target state="translated">ThreadDeath</target>
        </trans-unit>
        <trans-unit id="0bf665c1a36299fe0d6de351ae18e421a763e4a6" translate="yes" xml:space="preserve">
          <source>ThreadDeathEvent</source>
          <target state="translated">ThreadDeathEvent</target>
        </trans-unit>
        <trans-unit id="9537644b2115941001ab22e236c7afa19caccb51" translate="yes" xml:space="preserve">
          <source>ThreadDeathRequest</source>
          <target state="translated">ThreadDeathRequest</target>
        </trans-unit>
        <trans-unit id="d5cc85fdc4d23e7c32473be563d01a3470f47625" translate="yes" xml:space="preserve">
          <source>ThreadFactory</source>
          <target state="translated">ThreadFactory</target>
        </trans-unit>
        <trans-unit id="639f6a21b1097ef66b7f8d57d149541a4d21130e" translate="yes" xml:space="preserve">
          <source>ThreadFactory.newThread()</source>
          <target state="translated">ThreadFactory.newThread()</target>
        </trans-unit>
        <trans-unit id="22c12761263399de65de26186a64d96b9dd55b6a" translate="yes" xml:space="preserve">
          <source>ThreadGroup</source>
          <target state="translated">ThreadGroup</target>
        </trans-unit>
        <trans-unit id="059898a018c9719d82c47e8df552210a319afaee" translate="yes" xml:space="preserve">
          <source>ThreadGroup that new threads are instantiated into</source>
          <target state="translated">新しいスレッドがインスタンス化されるスレッドグループ</target>
        </trans-unit>
        <trans-unit id="2168fa2cbca8d1075577c5d6ed7f5547778673b5" translate="yes" xml:space="preserve">
          <source>ThreadGroup.activeCount()</source>
          <target state="translated">ThreadGroup.activeCount()</target>
        </trans-unit>
        <trans-unit id="07e64be12afbfadcc7b97b9cd27c5a055c953a07" translate="yes" xml:space="preserve">
          <source>ThreadGroup.activeGroupCount()</source>
          <target state="translated">ThreadGroup.activeGroupCount()</target>
        </trans-unit>
        <trans-unit id="6c3bffc705dd7e213fd32e46407349bd3f7eacdb" translate="yes" xml:space="preserve">
          <source>ThreadGroup.allowThreadSuspension()</source>
          <target state="translated">ThreadGroup.allowThreadSuspension()</target>
        </trans-unit>
        <trans-unit id="e42649105d36947129821d6afcf4d4941152e6f6" translate="yes" xml:space="preserve">
          <source>ThreadGroup.checkAccess()</source>
          <target state="translated">ThreadGroup.checkAccess()</target>
        </trans-unit>
        <trans-unit id="e9f1476100d91f7a4dc9f25d3d892bcc4feac01a" translate="yes" xml:space="preserve">
          <source>ThreadGroup.destroy()</source>
          <target state="translated">ThreadGroup.destroy()</target>
        </trans-unit>
        <trans-unit id="241d3244ab07bffab77bbe3bba3a4ab773658693" translate="yes" xml:space="preserve">
          <source>ThreadGroup.enumerate()</source>
          <target state="translated">ThreadGroup.enumerate()</target>
        </trans-unit>
        <trans-unit id="d44de7cf6f1aef179d419b24a490017cac204f16" translate="yes" xml:space="preserve">
          <source>ThreadGroup.getMaxPriority()</source>
          <target state="translated">ThreadGroup.getMaxPriority()</target>
        </trans-unit>
        <trans-unit id="f40cd031292c5455288b01f9b83ee4a091478356" translate="yes" xml:space="preserve">
          <source>ThreadGroup.getName()</source>
          <target state="translated">ThreadGroup.getName()</target>
        </trans-unit>
        <trans-unit id="72e5af96234c224f451a65a8f85461a187502c95" translate="yes" xml:space="preserve">
          <source>ThreadGroup.getParent()</source>
          <target state="translated">ThreadGroup.getParent()</target>
        </trans-unit>
        <trans-unit id="2ce9a4034c94b1856a7323c10b97ea3cc3b972f5" translate="yes" xml:space="preserve">
          <source>ThreadGroup.interrupt()</source>
          <target state="translated">ThreadGroup.interrupt()</target>
        </trans-unit>
        <trans-unit id="c6ee92ca409444bb1119ad7e5be546639fff1aab" translate="yes" xml:space="preserve">
          <source>ThreadGroup.isDaemon()</source>
          <target state="translated">ThreadGroup.isDaemon()</target>
        </trans-unit>
        <trans-unit id="ef8db58035c24c3952b22cbc94ca8dff9f742ba0" translate="yes" xml:space="preserve">
          <source>ThreadGroup.isDestroyed()</source>
          <target state="translated">ThreadGroup.isDestroyed()</target>
        </trans-unit>
        <trans-unit id="1b950c9b638a93c4424ebca8f4a2d43daebc89d5" translate="yes" xml:space="preserve">
          <source>ThreadGroup.list()</source>
          <target state="translated">ThreadGroup.list()</target>
        </trans-unit>
        <trans-unit id="e0958cbd01ddadec8f957373a4b6880bef0d255d" translate="yes" xml:space="preserve">
          <source>ThreadGroup.parentOf()</source>
          <target state="translated">ThreadGroup.parentOf()</target>
        </trans-unit>
        <trans-unit id="8e9e8cb9830f6025a6d0263c09a26a47bad662bd" translate="yes" xml:space="preserve">
          <source>ThreadGroup.resume()</source>
          <target state="translated">ThreadGroup.resume()</target>
        </trans-unit>
        <trans-unit id="21ba900981c697065bf740d11886e2983b5c636f" translate="yes" xml:space="preserve">
          <source>ThreadGroup.setDaemon()</source>
          <target state="translated">ThreadGroup.setDaemon()</target>
        </trans-unit>
        <trans-unit id="c3127b8d5b70fa4af53794e7f5223f23703c18ff" translate="yes" xml:space="preserve">
          <source>ThreadGroup.setMaxPriority()</source>
          <target state="translated">ThreadGroup.setMaxPriority()</target>
        </trans-unit>
        <trans-unit id="9592078d2d0911b903fe2b1e44c99f493c6c6000" translate="yes" xml:space="preserve">
          <source>ThreadGroup.stop()</source>
          <target state="translated">ThreadGroup.stop()</target>
        </trans-unit>
        <trans-unit id="13611581a61716c64f44d18f4a2552f3ea821453" translate="yes" xml:space="preserve">
          <source>ThreadGroup.suspend()</source>
          <target state="translated">ThreadGroup.suspend()</target>
        </trans-unit>
        <trans-unit id="f3fd385adb838a7df1c1aa867a084dd13ebe0e24" translate="yes" xml:space="preserve">
          <source>ThreadGroup.toString()</source>
          <target state="translated">ThreadGroup.toString()</target>
        </trans-unit>
        <trans-unit id="16f389539d6a08ff1048907b073387ed3e6ad9fa" translate="yes" xml:space="preserve">
          <source>ThreadGroup.uncaughtException()</source>
          <target state="translated">ThreadGroup.uncaughtException()</target>
        </trans-unit>
        <trans-unit id="3328e44e60c36bfb52eeac5b0f4f3a5d112dac73" translate="yes" xml:space="preserve">
          <source>ThreadGroupReference</source>
          <target state="translated">ThreadGroupReference</target>
        </trans-unit>
        <trans-unit id="afc57ece9cf03472cd12808a8721cb53a66a5db4" translate="yes" xml:space="preserve">
          <source>ThreadInfo</source>
          <target state="translated">ThreadInfo</target>
        </trans-unit>
        <trans-unit id="51f458be46fb5e6e46005c703419cb052bd48737" translate="yes" xml:space="preserve">
          <source>ThreadInfo.from()</source>
          <target state="translated">ThreadInfo.from()</target>
        </trans-unit>
        <trans-unit id="5b475793851011cd916326209f8aae652389dff1" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getBlockedCount()</source>
          <target state="translated">ThreadInfo.getBlockedCount()</target>
        </trans-unit>
        <trans-unit id="c2ac56d10c5e84f02866dd5bf2bde296086849a1" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getBlockedTime()</source>
          <target state="translated">ThreadInfo.getBlockedTime()</target>
        </trans-unit>
        <trans-unit id="6bb6cf5e2668e662d342264e63db576ba478a81d" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockInfo()</source>
          <target state="translated">ThreadInfo.getLockInfo()</target>
        </trans-unit>
        <trans-unit id="279fb7e22d469c26bca51c4b4cc47449426fe535" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockName()</source>
          <target state="translated">ThreadInfo.getLockName()</target>
        </trans-unit>
        <trans-unit id="f1442fd463c7c703a720b700e9b34e63b69373dc" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockOwnerId()</source>
          <target state="translated">ThreadInfo.getLockOwnerId()</target>
        </trans-unit>
        <trans-unit id="0e3459f517cf142609f581ec4df76d912782fc29" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockOwnerName()</source>
          <target state="translated">ThreadInfo.getLockOwnerName()</target>
        </trans-unit>
        <trans-unit id="e9f0257cc11605fac44cbb92bbeb2da2206a08dd" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockedMonitors()</source>
          <target state="translated">ThreadInfo.getLockedMonitors()</target>
        </trans-unit>
        <trans-unit id="c76532e0ef6ddfd41220640231ab75476649f719" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockedSynchronizers()</source>
          <target state="translated">ThreadInfo.getLockedSynchronizers()</target>
        </trans-unit>
        <trans-unit id="162c47fb57d9ecb804a75415311893cb53dfd1e7" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getStackTrace()</source>
          <target state="translated">ThreadInfo.getStackTrace()</target>
        </trans-unit>
        <trans-unit id="a94d7984cb5a5f902ff8baaf2ef4ef6af80927c7" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getThreadId()</source>
          <target state="translated">ThreadInfo.getThreadId()</target>
        </trans-unit>
        <trans-unit id="317b1a52c13c077a7434cd4b65cb1be1c08c7aca" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getThreadName()</source>
          <target state="translated">ThreadInfo.getThreadName()</target>
        </trans-unit>
        <trans-unit id="18b4298ae9a04f40df9ca1864bbfe9df63823192" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getThreadState()</source>
          <target state="translated">ThreadInfo.getThreadState()</target>
        </trans-unit>
        <trans-unit id="fa450fdcd0d633c012b0196754c8f415e75f14b8" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getWaitedCount()</source>
          <target state="translated">ThreadInfo.getWaitedCount()</target>
        </trans-unit>
        <trans-unit id="5a52e40ceff85f86fd4d15145c74344f31319a91" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getWaitedTime()</source>
          <target state="translated">ThreadInfo.getWaitedTime()</target>
        </trans-unit>
        <trans-unit id="de9e94bbb6033eeca6772ce8168334dc71979b2f" translate="yes" xml:space="preserve">
          <source>ThreadInfo.isInNative()</source>
          <target state="translated">ThreadInfo.isInNative()</target>
        </trans-unit>
        <trans-unit id="43e65e159fd271dd58fb800e6762176c537acf71" translate="yes" xml:space="preserve">
          <source>ThreadInfo.isSuspended()</source>
          <target state="translated">ThreadInfo.isSuspended()</target>
        </trans-unit>
        <trans-unit id="dffcb8b612a67880c30df2549fd53ebad6515bb9" translate="yes" xml:space="preserve">
          <source>ThreadInfo.toString()</source>
          <target state="translated">ThreadInfo.toString()</target>
        </trans-unit>
        <trans-unit id="8a77bfd3db44e0aeb0a80c2f055eea2ff97f89d4" translate="yes" xml:space="preserve">
          <source>ThreadLocal</source>
          <target state="translated">ThreadLocal</target>
        </trans-unit>
        <trans-unit id="15a9e9559806004daf00b91be8ab2489cd4086f3" translate="yes" xml:space="preserve">
          <source>ThreadLocal.get()</source>
          <target state="translated">ThreadLocal.get()</target>
        </trans-unit>
        <trans-unit id="374a65448cdae0a9c4a7564ba1697744ca6286ed" translate="yes" xml:space="preserve">
          <source>ThreadLocal.initialValue()</source>
          <target state="translated">ThreadLocal.initialValue()</target>
        </trans-unit>
        <trans-unit id="dacb0909125c4d07d9f0fc1c0650dc3f858ec4d2" translate="yes" xml:space="preserve">
          <source>ThreadLocal.remove()</source>
          <target state="translated">ThreadLocal.remove()</target>
        </trans-unit>
        <trans-unit id="fad47872087ae46c0ae8801dcd216aac1629b8ba" translate="yes" xml:space="preserve">
          <source>ThreadLocal.set()</source>
          <target state="translated">ThreadLocal.set()</target>
        </trans-unit>
        <trans-unit id="ea76ebb3afba7ca5ca185d93e419ac9d7bef11a0" translate="yes" xml:space="preserve">
          <source>ThreadLocal.withInitial()</source>
          <target state="translated">ThreadLocal.withInitial()</target>
        </trans-unit>
        <trans-unit id="388f79e7f6cd9af6475504d43031fda444936124" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom</source>
          <target state="translated">ThreadLocalRandom</target>
        </trans-unit>
        <trans-unit id="c51cd7526dcb058d5725d7b97c9cf1842042f017" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.current()</source>
          <target state="translated">ThreadLocalRandom.current()</target>
        </trans-unit>
        <trans-unit id="5168002791e5e3766e8d2bac85b194773e4bf72e" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.doubles()</source>
          <target state="translated">ThreadLocalRandom.doubles()</target>
        </trans-unit>
        <trans-unit id="518cecff24b0802c13974e5eb757ed3036528994" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.ints()</source>
          <target state="translated">ThreadLocalRandom.ints()</target>
        </trans-unit>
        <trans-unit id="84faa68f340ad21c01aa0dbf0e1e9b1708ada7a9" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.longs()</source>
          <target state="translated">ThreadLocalRandom.longs()</target>
        </trans-unit>
        <trans-unit id="24fedf2bd3ecab7a2c06bba403ee506fd8b26be3" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.next()</source>
          <target state="translated">ThreadLocalRandom.next()</target>
        </trans-unit>
        <trans-unit id="c8adfe0aba9bab398b7b25b9a5d333645a7fdff5" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextBoolean()</source>
          <target state="translated">ThreadLocalRandom.nextBoolean()</target>
        </trans-unit>
        <trans-unit id="134b41249c461f28c399dde9b6fab0e592a6e3e7" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextDouble()</source>
          <target state="translated">ThreadLocalRandom.nextDouble()</target>
        </trans-unit>
        <trans-unit id="f24698da57c58571edcc85c3374b37628aae6f04" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextFloat()</source>
          <target state="translated">ThreadLocalRandom.nextFloat()</target>
        </trans-unit>
        <trans-unit id="83febbb9d6050b072117e6f1dd63688acbb6631b" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextGaussian()</source>
          <target state="translated">ThreadLocalRandom.nextGaussian()</target>
        </trans-unit>
        <trans-unit id="e575d279e9c78f1ec1dd0ceb779e5210fc6a4b27" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextInt()</source>
          <target state="translated">ThreadLocalRandom.nextInt()</target>
        </trans-unit>
        <trans-unit id="b6fca32ef59f5e0bfe30521e4cfde599339502ae" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextLong()</source>
          <target state="translated">ThreadLocalRandom.nextLong()</target>
        </trans-unit>
        <trans-unit id="f8ca4ad4cdfa04559b5b65d9c7a318aa910c6ac1" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.setSeed()</source>
          <target state="translated">ThreadLocalRandom.setSeed()</target>
        </trans-unit>
        <trans-unit id="a10ff84fac420e7f316a20bc0b94ea47b14bdade" translate="yes" xml:space="preserve">
          <source>ThreadMXBean</source>
          <target state="translated">ThreadMXBean</target>
        </trans-unit>
        <trans-unit id="3d0b651efc0f0a81c992b53220709251da91b5fc" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.dumpAllThreads()</source>
          <target state="translated">ThreadMXBean.dumpAllThreads()</target>
        </trans-unit>
        <trans-unit id="7c1ba97afe4c4a6572769579cb7c064e7a9a15d5" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.findDeadlockedThreads()</source>
          <target state="translated">ThreadMXBean.findDeadlockedThreads()</target>
        </trans-unit>
        <trans-unit id="2d930f7d99a532b8271117121586e39b589fb39c" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.findMonitorDeadlockedThreads()</source>
          <target state="translated">ThreadMXBean.findMonitorDeadlockedThreads()</target>
        </trans-unit>
        <trans-unit id="7e3fb081e1ace73ca6853739b66bdcb8e822bdf8" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getAllThreadIds()</source>
          <target state="translated">ThreadMXBean.getAllThreadIds()</target>
        </trans-unit>
        <trans-unit id="0e680848a18b89f5046d2e0078bec092bd035396" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getCurrentThreadCpuTime()</source>
          <target state="translated">ThreadMXBean.getCurrentThreadCpuTime()</target>
        </trans-unit>
        <trans-unit id="216ddb51b7ac7475ab788d3d6ec8c6fdf3dabd5f" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getCurrentThreadUserTime()</source>
          <target state="translated">ThreadMXBean.getCurrentThreadUserTime()</target>
        </trans-unit>
        <trans-unit id="535dac6197aed1f130e46ded648770696cd9ce37" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getDaemonThreadCount()</source>
          <target state="translated">ThreadMXBean.getDaemonThreadCount()</target>
        </trans-unit>
        <trans-unit id="bccd3eff09eabed514da6b3f82c1fdf55d88f79e" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getPeakThreadCount()</source>
          <target state="translated">ThreadMXBean.getPeakThreadCount()</target>
        </trans-unit>
        <trans-unit id="25a7985ce2f8a9b9e2a7df1d3076558dfa1bdfe2" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getThreadCount()</source>
          <target state="translated">ThreadMXBean.getThreadCount()</target>
        </trans-unit>
        <trans-unit id="8478ed530d45010a41b3927c61fb835f892753ae" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getThreadCpuTime()</source>
          <target state="translated">ThreadMXBean.getThreadCpuTime()</target>
        </trans-unit>
        <trans-unit id="ee478f284f0bc74be3488715a1ee92be295df179" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getThreadInfo()</source>
          <target state="translated">ThreadMXBean.getThreadInfo()</target>
        </trans-unit>
        <trans-unit id="817b796175b303a6e6804ea24aac176ccecf96eb" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getThreadUserTime()</source>
          <target state="translated">ThreadMXBean.getThreadUserTime()</target>
        </trans-unit>
        <trans-unit id="070aed62e0989092ae5d156b47e79ecfacf0424f" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getTotalStartedThreadCount()</source>
          <target state="translated">ThreadMXBean.getTotalStartedThreadCount()</target>
        </trans-unit>
        <trans-unit id="22642e0709ff7d93dac027a226301d094f29aa1e" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isCurrentThreadCpuTimeSupported()</source>
          <target state="translated">ThreadMXBean.isCurrentThreadCpuTimeSupported()</target>
        </trans-unit>
        <trans-unit id="4f5eb882b75a3b985ecba7e8200444dd1e9b2842" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isObjectMonitorUsageSupported()</source>
          <target state="translated">ThreadMXBean.isObjectMonitorUsageSupported()</target>
        </trans-unit>
        <trans-unit id="4ca77425cf7ef9d43a09cb76be40e2b572b6ec33" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isSynchronizerUsageSupported()</source>
          <target state="translated">ThreadMXBean.isSynchronizerUsageSupported()</target>
        </trans-unit>
        <trans-unit id="c021cf53a65415b0f248c41bf1327082a2ed894a" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isThreadContentionMonitoringEnabled()</source>
          <target state="translated">ThreadMXBean.isThreadContentionMonitoringEnabled()</target>
        </trans-unit>
        <trans-unit id="30a6d9e52a20a4e80f8dcbba927ffcacc1af758f" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isThreadContentionMonitoringSupported()</source>
          <target state="translated">ThreadMXBean.isThreadContentionMonitoringSupported()</target>
        </trans-unit>
        <trans-unit id="b8e9c7741661179460be305a7b1ff5366c157322" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isThreadCpuTimeEnabled()</source>
          <target state="translated">ThreadMXBean.isThreadCpuTimeEnabled()</target>
        </trans-unit>
        <trans-unit id="1ef8a931131e0666c8f6831f70f2432b7763134a" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isThreadCpuTimeSupported()</source>
          <target state="translated">ThreadMXBean.isThreadCpuTimeSupported()</target>
        </trans-unit>
        <trans-unit id="984c959dc877c2aca2b750ad50d892ee893874c5" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.resetPeakThreadCount()</source>
          <target state="translated">ThreadMXBean.resetPeakThreadCount()</target>
        </trans-unit>
        <trans-unit id="90a4041d734ffb1bcfc54716dbe0cf7793e9329e" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.setThreadContentionMonitoringEnabled()</source>
          <target state="translated">ThreadMXBean.setThreadContentionMonitoringEnabled()</target>
        </trans-unit>
        <trans-unit id="7c4537db9ab28220401454e0be9e69074f0bcdf8" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.setThreadCpuTimeEnabled()</source>
          <target state="translated">ThreadMXBean.setThreadCpuTimeEnabled()</target>
        </trans-unit>
        <trans-unit id="f4ccad88952fdcd6a1fc61663ba8a6b67b062047" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor</source>
          <target state="translated">ThreadPoolExecutor</target>
        </trans-unit>
        <trans-unit id="f2c79d25c8bbeb1de3eb6b991c9c74c92e3a244e" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.AbortPolicy</source>
          <target state="translated">ThreadPoolExecutor.AbortPolicy</target>
        </trans-unit>
        <trans-unit id="d7cc9e13b352c70b3ae3f5dd893ed6f2e88d6d05" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.AbortPolicy.rejectedExecution()</source>
          <target state="translated">ThreadPoolExecutor.AbortPolicy.rejectedExecution()</target>
        </trans-unit>
        <trans-unit id="7b533b964444519aa5cf3169bc513754145d9b96" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.CallerRunsPolicy</source>
          <target state="translated">ThreadPoolExecutor.CallerRunsPolicy</target>
        </trans-unit>
        <trans-unit id="5c445d96d1e1aaa9fe5baec0f0c7895f8ffddbaf" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.CallerRunsPolicy.rejectedExecution()</source>
          <target state="translated">ThreadPoolExecutor.CallerRunsPolicy.rejectedExecution()</target>
        </trans-unit>
        <trans-unit id="eaf6a5f1aabc931cf9f0c22af511f7a995c70bd3" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.DiscardOldestPolicy</source>
          <target state="translated">ThreadPoolExecutor.DiscardOldestPolicy</target>
        </trans-unit>
        <trans-unit id="40b1fd685130406b521e03f6b69d8e1bfe7a2ad7" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.DiscardOldestPolicy.rejectedExecution()</source>
          <target state="translated">ThreadPoolExecutor.DiscardOldestPolicy.rejectedExecution()</target>
        </trans-unit>
        <trans-unit id="8e3bf12c969ea180a4519fc58d1b9242617651b7" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.DiscardPolicy</source>
          <target state="translated">ThreadPoolExecutor.DiscardPolicy</target>
        </trans-unit>
        <trans-unit id="659da8d6807d95d356ca26bbf195573e27a2aef2" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.DiscardPolicy.rejectedExecution()</source>
          <target state="translated">ThreadPoolExecutor.DiscardPolicy.rejectedExecution()</target>
        </trans-unit>
        <trans-unit id="a07a97ed57555cb5c116d4d576ae5fa5afe4a11a" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.afterExecute()</source>
          <target state="translated">ThreadPoolExecutor.afterExecute()</target>
        </trans-unit>
        <trans-unit id="b6abc016d184ee9001f123cf7acda91338f878fc" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.allowCoreThreadTimeOut()</source>
          <target state="translated">ThreadPoolExecutor.allowCoreThreadTimeOut()</target>
        </trans-unit>
        <trans-unit id="6e4f95316b15e284ab4612f86782a7b28afcb84b" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.allowsCoreThreadTimeOut()</source>
          <target state="translated">ThreadPoolExecutor.allowsCoreThreadTimeOut()</target>
        </trans-unit>
        <trans-unit id="c05151e0a08d6bb09aaef5e33c022ac6e63fa9f8" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.awaitTermination()</source>
          <target state="translated">ThreadPoolExecutor.awaitTermination()</target>
        </trans-unit>
        <trans-unit id="5907ee60c1305e06c4e7c6d216e843fb9401700b" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.beforeExecute()</source>
          <target state="translated">ThreadPoolExecutor.beforeExecute()</target>
        </trans-unit>
        <trans-unit id="cd40bf4b1c64224658a5dda766b3ca0378219d78" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.execute()</source>
          <target state="translated">ThreadPoolExecutor.execute()</target>
        </trans-unit>
        <trans-unit id="6d18ed6bcdeac2481871aff10ed90da081adb943" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.finalize()</source>
          <target state="translated">ThreadPoolExecutor.finalize()</target>
        </trans-unit>
        <trans-unit id="a65cec0917fe013463b0be91a2ff0daa9bb53e5d" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getActiveCount()</source>
          <target state="translated">ThreadPoolExecutor.getActiveCount()</target>
        </trans-unit>
        <trans-unit id="e4b3c04ca39b02420d9d29787cf945f10a50c5a2" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getCompletedTaskCount()</source>
          <target state="translated">ThreadPoolExecutor.getCompletedTaskCount()</target>
        </trans-unit>
        <trans-unit id="63116374dd7127f9740b3e59fdf638fffde3ad16" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getCorePoolSize()</source>
          <target state="translated">ThreadPoolExecutor.getCorePoolSize()</target>
        </trans-unit>
        <trans-unit id="a3412a61aac2a4a090d1279b3351cdbc54894e3c" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getKeepAliveTime()</source>
          <target state="translated">ThreadPoolExecutor.getKeepAliveTime()</target>
        </trans-unit>
        <trans-unit id="aa5dc0279c590e30e67ec8056b1f531642bad724" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getLargestPoolSize()</source>
          <target state="translated">ThreadPoolExecutor.getLargestPoolSize()</target>
        </trans-unit>
        <trans-unit id="5b2487e8db27a8ff85fd7d2ad6c140c79be7179b" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getMaximumPoolSize()</source>
          <target state="translated">ThreadPoolExecutor.getMaximumPoolSize()</target>
        </trans-unit>
        <trans-unit id="1e433e740c79571196ce4c40a7d2e4de9a4d82d8" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getPoolSize()</source>
          <target state="translated">ThreadPoolExecutor.getPoolSize()</target>
        </trans-unit>
        <trans-unit id="16a98562b9a01e91841b292ec928b1c3697c3c5f" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getQueue()</source>
          <target state="translated">ThreadPoolExecutor.getQueue()</target>
        </trans-unit>
        <trans-unit id="7a35a232ce690a4fbd789ec5f1eb91c79350d866" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getRejectedExecutionHandler()</source>
          <target state="translated">ThreadPoolExecutor.getRejectedExecutionHandler()</target>
        </trans-unit>
        <trans-unit id="d9884834a18ae8875adc0dc72374bb5df10b3176" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getTaskCount()</source>
          <target state="translated">ThreadPoolExecutor.getTaskCount()</target>
        </trans-unit>
        <trans-unit id="38a332410da078a93276896dad4c5d958124d97e" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getThreadFactory()</source>
          <target state="translated">ThreadPoolExecutor.getThreadFactory()</target>
        </trans-unit>
        <trans-unit id="d48791041fe0838566d09999493b06a8f4172585" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.isShutdown()</source>
          <target state="translated">ThreadPoolExecutor.isShutdown()</target>
        </trans-unit>
        <trans-unit id="8db47e1b9fc0fc612ba95c8ab8837cb580e09057" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.isTerminated()</source>
          <target state="translated">ThreadPoolExecutor.isTerminated()</target>
        </trans-unit>
        <trans-unit id="154a1158ff0bc95ff0218a7f6729285e9006f9fa" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.isTerminating()</source>
          <target state="translated">ThreadPoolExecutor.isTerminating()</target>
        </trans-unit>
        <trans-unit id="b8c9e8cab95909d0f9f6f4c14a6eb05ccf7b0c70" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.prestartAllCoreThreads()</source>
          <target state="translated">ThreadPoolExecutor.prestartAllCoreThreads()</target>
        </trans-unit>
        <trans-unit id="e8e0209bc08f6b1bffc4fd25066c640edc090d7d" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.prestartCoreThread()</source>
          <target state="translated">ThreadPoolExecutor.prestartCoreThread()</target>
        </trans-unit>
        <trans-unit id="23dfab8cc11462680b9eeb1bc2197f88b7b18f36" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.purge()</source>
          <target state="translated">ThreadPoolExecutor.purge()</target>
        </trans-unit>
        <trans-unit id="7348f105a42e42d949f33acc99f16f70ea15a7a7" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.remove()</source>
          <target state="translated">ThreadPoolExecutor.remove()</target>
        </trans-unit>
        <trans-unit id="171c9977d1eba377a7a5fba0d1a178f82be4fcc8" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.setCorePoolSize()</source>
          <target state="translated">ThreadPoolExecutor.setCorePoolSize()</target>
        </trans-unit>
        <trans-unit id="ffdcd6085baf7ea939001521e5c6791114da2d41" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.setKeepAliveTime()</source>
          <target state="translated">ThreadPoolExecutor.setKeepAliveTime()</target>
        </trans-unit>
        <trans-unit id="142eb53a1492c0f895f65f0a6d01f644ee8ba3bb" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.setMaximumPoolSize()</source>
          <target state="translated">ThreadPoolExecutor.setMaximumPoolSize()</target>
        </trans-unit>
        <trans-unit id="628548d7b463f0709c6f86a57cdd0d2269e58547" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.setRejectedExecutionHandler()</source>
          <target state="translated">ThreadPoolExecutor.setRejectedExecutionHandler()</target>
        </trans-unit>
        <trans-unit id="9efe3a8706a4364989090e0a5fe176c47e485000" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.setThreadFactory()</source>
          <target state="translated">ThreadPoolExecutor.setThreadFactory()</target>
        </trans-unit>
        <trans-unit id="da192288deea93eb600f964fab0db8c7f6c523e2" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.shutdown()</source>
          <target state="translated">ThreadPoolExecutor.shutdown()</target>
        </trans-unit>
        <trans-unit id="1a067c0a488a5e47d757724e51fc90736e37dc53" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.shutdownNow()</source>
          <target state="translated">ThreadPoolExecutor.shutdownNow()</target>
        </trans-unit>
        <trans-unit id="f64b4cef9f08cda6f2061e93f5d833d78e23fd3b" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.terminated()</source>
          <target state="translated">ThreadPoolExecutor.terminated()</target>
        </trans-unit>
        <trans-unit id="c9cbb28f68a32b755c11fc3f6ccc630ae8bc7429" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.toString()</source>
          <target state="translated">ThreadPoolExecutor.toString()</target>
        </trans-unit>
        <trans-unit id="dfb8fcce70647e393c17dec81898f27d0e3a0ff3" translate="yes" xml:space="preserve">
          <source>ThreadReference</source>
          <target state="translated">ThreadReference</target>
        </trans-unit>
        <trans-unit id="646d42bb8fb29ffc8b5dcdba8288df5dc51b54b7" translate="yes" xml:space="preserve">
          <source>ThreadStartEvent</source>
          <target state="translated">ThreadStartEvent</target>
        </trans-unit>
        <trans-unit id="7ef72c5fa50e1973b0866c10f3ba1902f62fe1a3" translate="yes" xml:space="preserve">
          <source>ThreadStartRequest</source>
          <target state="translated">ThreadStartRequest</target>
        </trans-unit>
        <trans-unit id="5541d0b76d127f6a3c54bbc247ffcc1b6c2bbc25" translate="yes" xml:space="preserve">
          <source>Threading</source>
          <target state="translated">Threading</target>
        </trans-unit>
        <trans-unit id="de4e9c7a680290a7be76fdc747bd300e110ee012" translate="yes" xml:space="preserve">
          <source>Threading Issues</source>
          <target state="translated">スレッドの問題</target>
        </trans-unit>
        <trans-unit id="dec163ec912a72e6830c783d992f4f06d3629f5b" translate="yes" xml:space="preserve">
          <source>Threads need not be suspended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1541b44e621bca4b923bcb6b71a660d9ce9725d6" translate="yes" xml:space="preserve">
          <source>Threads running in the mirrored VM are abruptly terminated. A thread death exception is not thrown and finally blocks are not run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4f01800311acd6dc47585b32eb83273995c915" translate="yes" xml:space="preserve">
          <source>Three digits for the &lt;a href=&quot;../temporal/chronofield#DAY_OF_YEAR&quot;&gt;&lt;code&gt;day-of-year&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure three digits.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#DAY_OF_YEAR&quot;&gt; &lt;code&gt;day-of-year&lt;/code&gt; &lt;/a&gt; 3桁。これは、3桁を確保するためにゼロが事前に埋め込まれています。</target>
        </trans-unit>
        <trans-unit id="b92c0c34ed0eca6d90d4dc9a82a1b224030f48bc" translate="yes" xml:space="preserve">
          <source>Three letter &lt;a href=&quot;../temporal/chronofield#DAY_OF_WEEK&quot;&gt;&lt;code&gt;day-of-week&lt;/code&gt;&lt;/a&gt; in English.</source>
          <target state="translated">英語&lt;a href=&quot;../temporal/chronofield#DAY_OF_WEEK&quot;&gt; &lt;code&gt;day-of-week&lt;/code&gt; &lt;/a&gt; 3文字の曜日。</target>
        </trans-unit>
        <trans-unit id="e9bdfefee4ac2aa9176fc0669c8e504ff8a01d0f" translate="yes" xml:space="preserve">
          <source>Three letter &lt;a href=&quot;../temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;month-of-year&lt;/code&gt;&lt;/a&gt; in English.</source>
          <target state="translated">英語&lt;a href=&quot;../temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;month-of-year&lt;/code&gt; &lt;/a&gt; 3文字の月。</target>
        </trans-unit>
        <trans-unit id="37139c0ccc1f75933cbec2cca83bd75137c53f0f" translate="yes" xml:space="preserve">
          <source>Three methods on a &lt;code&gt;TextLayout&lt;/code&gt; object (&lt;code&gt;getNextRightHit&lt;/code&gt;, &lt;code&gt;getNextLeftHit&lt;/code&gt;, and &lt;code&gt;hitTestChar&lt;/code&gt;) return instances of &lt;a href=&quot;texthitinfo&quot;&gt;&lt;code&gt;TextHitInfo&lt;/code&gt;&lt;/a&gt;. The offsets contained in these &lt;code&gt;TextHitInfo&lt;/code&gt; objects are relative to the start of the &lt;code&gt;TextLayout&lt;/code&gt;, &lt;b&gt;not&lt;/b&gt; to the text used to create the &lt;code&gt;TextLayout&lt;/code&gt;. Similarly, &lt;code&gt;TextLayout&lt;/code&gt; methods that accept &lt;code&gt;TextHitInfo&lt;/code&gt; instances as parameters expect the &lt;code&gt;TextHitInfo&lt;/code&gt; object's offsets to be relative to the &lt;code&gt;TextLayout&lt;/code&gt;, not to any underlying text storage model.</source>
          <target state="translated">&lt;code&gt;TextLayout&lt;/code&gt; オブジェクトの3つのメソッド（ &lt;code&gt;getNextRightHit&lt;/code&gt; 、 &lt;code&gt;getNextLeftHit&lt;/code&gt; 、および &lt;code&gt;hitTestChar&lt;/code&gt; ）は、&lt;a href=&quot;texthitinfo&quot;&gt; &lt;code&gt;TextHitInfo&lt;/code&gt; の&lt;/a&gt;インスタンスを返します。これらに含まれるオフセット &lt;code&gt;TextHitInfo&lt;/code&gt; オブジェクトが開始に相対的 &lt;code&gt;TextLayout&lt;/code&gt; の、&lt;b&gt;ではない&lt;/b&gt;の作成に使用されるテキストに &lt;code&gt;TextLayout&lt;/code&gt; と。同様に、 &lt;code&gt;TextHitInfo&lt;/code&gt; インスタンスをパラメーターとして受け入れる &lt;code&gt;TextLayout&lt;/code&gt; メソッドは、 &lt;code&gt;TextHitInfo&lt;/code&gt; オブジェクトのオフセットが、基になるテキストストレージモデルではなく、 &lt;code&gt;TextLayout&lt;/code&gt; に相対的であることを期待します。</target>
        </trans-unit>
        <trans-unit id="16642dcdca4115f5acd44073f0cfac6c8955758e" translate="yes" xml:space="preserve">
          <source>Three sample &lt;a href=&quot;../../../../../../java.base/javax/security/auth/login/configuration&quot;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt;s are shown below. The first one activates search-first mode. It identifies the LDAP server and specifies that users' entries be located by their &lt;code&gt;uid&lt;/code&gt; and &lt;code&gt;objectClass&lt;/code&gt; attributes. It also specifies that an identity based on the user's &lt;code&gt;employeeNumber&lt;/code&gt; attribute should be created. The second one activates authentication-first mode. It requests that the LDAP server be located dynamically, that authentication be performed using the supplied username directly but without the protection of SSL and that users' entries be located by one of three naming attributes and their &lt;code&gt;objectClass&lt;/code&gt; attribute. The third one activates authentication-only mode. It identifies alternative LDAP servers, it specifies the distinguished name to use for authentication and a fixed identity to use for authorization. No directory search is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab82e400141b434308880b18f5d90ab1df67021" translate="yes" xml:space="preserve">
          <source>Three-letter language/country(region) codes</source>
          <target state="translated">3文字の言語/国(地域)コード</target>
        </trans-unit>
        <trans-unit id="d3394744981ae3b0d160ba5fa153018728b86da8" translate="yes" xml:space="preserve">
          <source>Three-letter time zone IDs</source>
          <target state="translated">3文字のタイムゾーンID</target>
        </trans-unit>
        <trans-unit id="c51f7b72279e26fd7cf66d9d61e7f7204bf3b26a" translate="yes" xml:space="preserve">
          <source>Threshold</source>
          <target state="translated">Threshold</target>
        </trans-unit>
        <trans-unit id="5556acb4e84bfb80d4f798219daaad9dbdbdf7ec" translate="yes" xml:space="preserve">
          <source>Through methods of the &lt;code&gt;Line&lt;/code&gt; interface, which &lt;code&gt;Mixer&lt;/code&gt; extends, a mixer might provide a set of controls that are global to the mixer. For example, the mixer can have a master gain control. These global controls are distinct from the controls belonging to each of the mixer's individual lines.</source>
          <target state="translated">&lt;code&gt;Mixer&lt;/code&gt; が拡張する &lt;code&gt;Line&lt;/code&gt; インターフェースのメソッドを通じて、ミキサーはミキサーにグローバルな一連のコントロールを提供する場合があります。たとえば、ミキサーはマスターゲインコントロールを持つことができます。これらのグローバルコントロールは、ミキサーの各ラインに属するコントロールとは異なります。</target>
        </trans-unit>
        <trans-unit id="bc6f0690a388f90a1a01773ee5e8153698da023a" translate="yes" xml:space="preserve">
          <source>Throughout this specification, a &quot;non-exported package&quot; refers to a package that is not exported to all modules, and a &quot;non-open package&quot; refers to a package that is not open to all modules. Specifically, these terms refer to a package that either is not exported/open by its containing module or is exported/open in a qualified fashion by its containing module.</source>
          <target state="translated">本仕様を通して、「非輸出パッケージ」とは、すべてのモジュールに輸出されていないパッケージを指し、「非オープンパッケージ」とは、すべてのモジュールにオープンされていないパッケージを指します。具体的には、これらの用語は、含まれるモジュールによって輸出されない/開かれないパッケージ、または、含まれるモジュールによって修飾された方法で輸出される/開かれるパッケージを意味します。</target>
        </trans-unit>
        <trans-unit id="be663f5f0260dc7bc778704d125c41b8f7e040e3" translate="yes" xml:space="preserve">
          <source>Throughput and scalability are generally highest for the default barging (also known as &lt;em&gt;greedy&lt;/em&gt;, &lt;em&gt;renouncement&lt;/em&gt;, and &lt;em&gt;convoy-avoidance&lt;/em&gt;) strategy. While this is not guaranteed to be fair or starvation-free, earlier queued threads are allowed to recontend before later queued threads, and each recontention has an unbiased chance to succeed against incoming threads. Also, while acquires do not &quot;spin&quot; in the usual sense, they may perform multiple invocations of &lt;code&gt;tryAcquire&lt;/code&gt; interspersed with other computations before blocking. This gives most of the benefits of spins when exclusive synchronization is only briefly held, without most of the liabilities when it isn't. If so desired, you can augment this by preceding calls to acquire methods with &quot;fast-path&quot; checks, possibly prechecking &lt;a href=&quot;#hasContended()&quot;&gt;&lt;code&gt;hasContended()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#hasQueuedThreads()&quot;&gt;&lt;code&gt;hasQueuedThreads()&lt;/code&gt;&lt;/a&gt; to only do so if the synchronizer is likely not to be contended.</source>
          <target state="translated">スループットとスケーラビリティは、通常、デフォルトのバージング（&lt;em&gt;貪欲&lt;/em&gt;、&lt;em&gt;放棄&lt;/em&gt;、および&lt;em&gt;コンボイ回避&lt;/em&gt;とも呼ばれます）戦略で最も高くなります。これが公平または飢餓のないことを保証するものではありませんが、以前にキューに入れられたスレッドは、後でキューに入れられたスレッドの前に再競合することが許可され、各再競合には、着信スレッドに対して成功する偏りのないチャンスがあります。また、取得は通常の意味で「スピン」しませんが、 &lt;code&gt;tryAcquire&lt;/code&gt; の複数の呼び出しを実行する場合がありますブロックする前に他の計算が散在している。これにより、排他的同期が短時間だけ保持されている場合のスピンの利点のほとんどが得られ、そうでない場合のほとんどの責任はありません。必要に応じて、「ファストパス」チェックを使用してメソッドを取得する呼び出しを先行させることでこれを強化できます。シンクロナイザーが競合しない可能性が高い場合にのみ、&lt;a href=&quot;#hasContended()&quot;&gt; &lt;code&gt;hasContended()&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#hasQueuedThreads()&quot;&gt; &lt;code&gt;hasQueuedThreads()&lt;/code&gt; &lt;/a&gt;を事前チェックすることもできます。</target>
        </trans-unit>
        <trans-unit id="29fa5a3481369653554d192305a3d49ea5c81669" translate="yes" xml:space="preserve">
          <source>Throughput and scalability are generally highest for the default barging (also known as &lt;em&gt;greedy&lt;/em&gt;, &lt;em&gt;renouncement&lt;/em&gt;, and &lt;em&gt;convoy-avoidance&lt;/em&gt;) strategy. While this is not guaranteed to be fair or starvation-free, earlier queued threads are allowed to recontend before later queued threads, and each recontention has an unbiased chance to succeed against incoming threads. Also, while acquires do not &quot;spin&quot; in the usual sense, they may perform multiple invocations of &lt;code&gt;tryAcquire&lt;/code&gt; interspersed with other computations before blocking. This gives most of the benefits of spins when exclusive synchronization is only briefly held, without most of the liabilities when it isn't. If so desired, you can augment this by preceding calls to acquire methods with &quot;fast-path&quot; checks, possibly prechecking &lt;a href=&quot;abstractqueuedsynchronizer#hasContended--&quot;&gt;&lt;code&gt;hasContended()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;abstractqueuedsynchronizer#hasQueuedThreads--&quot;&gt;&lt;code&gt;hasQueuedThreads()&lt;/code&gt;&lt;/a&gt; to only do so if the synchronizer is likely not to be contended.</source>
          <target state="translated">スループットとスケーラビリティは通常、デフォルトの割り込み（&lt;em&gt;greedy&lt;/em&gt;、&lt;em&gt;renouncement&lt;/em&gt;、および&lt;em&gt;convoy-avoidance&lt;/em&gt;とも呼ばれます）戦略で最も高くなります。これが公平または飢餓のないことが保証されているわけではありませんが、以前にキューに入れられたスレッドは、後でキューに入れられるスレッドの前に再競合することができます。また、取得は通常の意味では「スピン」しませんが、 &lt;code&gt;tryAcquire&lt;/code&gt; の複数の呼び出しを実行する場合があります。ブロックする前に他の計算が散在しています。これにより、排他的な同期が一時的にしか行われない場合のスピンの利点のほとんどが得られます。必要に応じて、「高速パス」チェックを使用してメソッドを取得する前に呼び出しを行うことで、シンクロナイザが競合していない可能性がある場合にのみ&lt;a href=&quot;abstractqueuedsynchronizer#hasContended--&quot;&gt; &lt;code&gt;hasContended()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;abstractqueuedsynchronizer#hasQueuedThreads--&quot;&gt; &lt;code&gt;hasQueuedThreads()&lt;/code&gt; &lt;/a&gt;を事前チェックして、これを強化できます。</target>
        </trans-unit>
        <trans-unit id="752f7dcf3af4736472c15ac84d4706886da95d27" translate="yes" xml:space="preserve">
          <source>ThrowTree</source>
          <target state="translated">ThrowTree</target>
        </trans-unit>
        <trans-unit id="8abf11297f412ee4fff55514bb434f634e293565" translate="yes" xml:space="preserve">
          <source>Throwable</source>
          <target state="translated">Throwable</target>
        </trans-unit>
        <trans-unit id="98ad00fadfe509294b8793d010a54fc9acb13d66" translate="yes" xml:space="preserve">
          <source>Throwable.addSuppressed()</source>
          <target state="translated">Throwable.addSuppressed()</target>
        </trans-unit>
        <trans-unit id="0c47561a8f890315e653b9cc117aa39ca8c38c67" translate="yes" xml:space="preserve">
          <source>Throwable.fillInStackTrace()</source>
          <target state="translated">Throwable.fillInStackTrace()</target>
        </trans-unit>
        <trans-unit id="cae7225746c3e3d75356859bb685613b213e4379" translate="yes" xml:space="preserve">
          <source>Throwable.getCause()</source>
          <target state="translated">Throwable.getCause()</target>
        </trans-unit>
        <trans-unit id="cd4d4d68986b90e5907c5e1d03ffbf1dcd713548" translate="yes" xml:space="preserve">
          <source>Throwable.getLocalizedMessage()</source>
          <target state="translated">Throwable.getLocalizedMessage()</target>
        </trans-unit>
        <trans-unit id="0e930f6c77fd1a322a22f35a097179d8cb8ef2e4" translate="yes" xml:space="preserve">
          <source>Throwable.getMessage()</source>
          <target state="translated">Throwable.getMessage()</target>
        </trans-unit>
        <trans-unit id="dfdb46c2fa44323329c34d19d00faadb4f29cedb" translate="yes" xml:space="preserve">
          <source>Throwable.getStackTrace()</source>
          <target state="translated">Throwable.getStackTrace()</target>
        </trans-unit>
        <trans-unit id="81966576a0ddab78739d3dd60d9e2f5b4c488a0b" translate="yes" xml:space="preserve">
          <source>Throwable.getSuppressed()</source>
          <target state="translated">Throwable.getSuppressed()</target>
        </trans-unit>
        <trans-unit id="50fa4943f7e6382fb6a0ed657c438da27448c947" translate="yes" xml:space="preserve">
          <source>Throwable.initCause()</source>
          <target state="translated">Throwable.initCause()</target>
        </trans-unit>
        <trans-unit id="4b30a8b60ba03a343483fe862a0a26fb68000e06" translate="yes" xml:space="preserve">
          <source>Throwable.printStackTrace()</source>
          <target state="translated">Throwable.printStackTrace()</target>
        </trans-unit>
        <trans-unit id="3f5d61ee96878a562cc64674a60e417a0bdec190" translate="yes" xml:space="preserve">
          <source>Throwable.setStackTrace()</source>
          <target state="translated">Throwable.setStackTrace()</target>
        </trans-unit>
        <trans-unit id="6562f58691de1dc184d89b483c459a8ab9d6db45" translate="yes" xml:space="preserve">
          <source>Throwable.toString()</source>
          <target state="translated">Throwable.toString()</target>
        </trans-unit>
        <trans-unit id="13986754d05f8d0840da837200315be5d97506ab" translate="yes" xml:space="preserve">
          <source>Throwing &lt;code&gt;null&lt;/code&gt; as if it were a &lt;code&gt;Throwable&lt;/code&gt; value.</source>
          <target state="translated">投げ &lt;code&gt;null&lt;/code&gt; それがあたかも &lt;code&gt;Throwable&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="a4418f356f25cfb7d0c9ce91b95afe579b04ca02" translate="yes" xml:space="preserve">
          <source>Throwing an error in these cases may seem extreme. The rationale for this behavior is that a malformed provider-configuration file, like a malformed class file, indicates a serious problem with the way the Java virtual machine is configured or is being used. As such it is preferable to throw an error rather than try to recover or, even worse, fail silently.</source>
          <target state="translated">このような場合にエラーをスローするのは、極端に思えるかもしれません。この動作の根拠は、不正な形式のクラス・ファイルのように、不正な形式のプロバイダ設定ファイルは、Java仮想マシンの構成方法や使用方法に深刻な問題があることを示しているからです。そのため、回復しようとするよりも、エラーを投げる方が望ましいです。</target>
        </trans-unit>
        <trans-unit id="27e8f7208704cb9c42e23d091c281f52ceed5b04" translate="yes" xml:space="preserve">
          <source>Thrown at the invocation if the call site can not be linked by any available &lt;a href=&quot;linker/guardingdynamiclinker&quot;&gt;&lt;code&gt;GuardingDynamicLinker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f36b5eecc3dae1784f587e0354ce2988752b3b" translate="yes" xml:space="preserve">
          <source>Thrown by &lt;a href=&quot;virtualmachine#attach(java.lang.String)&quot;&gt;&lt;code&gt;VirtualMachine.attach&lt;/code&gt;&lt;/a&gt; when attempting to attach to a Java virtual machine for which a compatible &lt;a href=&quot;spi/attachprovider&quot;&gt;&lt;code&gt;AttachProvider&lt;/code&gt;&lt;/a&gt; does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7060f83bfa4711c8375771627b563612ce5dbba8" translate="yes" xml:space="preserve">
          <source>Thrown by &lt;a href=&quot;virtualmachine#attach(java.lang.String)&quot;&gt;&lt;code&gt;VirtualMachine.attach&lt;/code&gt;&lt;/a&gt; when attempting to attach to a Java virtual machine for which a compatible &lt;a href=&quot;spi/attachprovider&quot;&gt;&lt;code&gt;AttachProvider&lt;/code&gt;&lt;/a&gt; does not exist. It is also thrown by &lt;a href=&quot;spi/attachprovider#attachVirtualMachine(java.lang.String)&quot;&gt;&lt;code&gt;AttachProvider.attachVirtualMachine&lt;/code&gt;&lt;/a&gt; if the provider attempts to attach to a Java virtual machine with which it not comptatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4dac3b7a9730402058d3af55f2a3f82c5d5b1e8" translate="yes" xml:space="preserve">
          <source>Thrown by &lt;code&gt;String&lt;/code&gt; methods to indicate that an index is either negative or greater than the size of the string.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; メソッドによってスローされ、インデックスが負であるか、文字列のサイズより大きいことを示します。</target>
        </trans-unit>
        <trans-unit id="bfa59ae88d1d9ef936b47bbc727d00337768fd02" translate="yes" xml:space="preserve">
          <source>Thrown by &lt;code&gt;String&lt;/code&gt; methods to indicate that an index is either negative or greater than the size of the string. For some methods such as the &lt;a href=&quot;string#charAt(int)&quot;&gt;&lt;code&gt;charAt&lt;/code&gt;&lt;/a&gt; method, this exception also is thrown when the index is equal to the size of the string.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; メソッドによってスローされ、インデックスが負であるか、文字列のサイズより大きいことを示します。&lt;a href=&quot;string#charAt(int)&quot;&gt; &lt;code&gt;charAt&lt;/code&gt; &lt;/a&gt;メソッドなどの一部のメソッドでは、インデックスが文字列のサイズと等しい場合にもこの例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="144e7f92010c33f921437350f5bad319e14da26c" translate="yes" xml:space="preserve">
          <source>Thrown by &lt;code&gt;String&lt;/code&gt; methods to indicate that an index is either negative or greater than the size of the string. For some methods such as the charAt method, this exception also is thrown when the index is equal to the size of the string.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; メソッドによってスローされ、インデックスが負であるか、文字列のサイズより大きいことを示します。charAtメソッドなどの一部のメソッドでは、インデックスが文字列のサイズと等しい場合にもこの例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="3a716c06b290d9848848b3238cc79caaba6d4d9a" translate="yes" xml:space="preserve">
          <source>Thrown by a &lt;a href=&quot;modulefinder&quot;&gt;&lt;code&gt;ModuleFinder&lt;/code&gt;&lt;/a&gt; when an error occurs finding a module.</source>
          <target state="translated">モジュールの検索中にエラーが発生したときに&lt;a href=&quot;modulefinder&quot;&gt; &lt;code&gt;ModuleFinder&lt;/code&gt; &lt;/a&gt;によってスローされます。</target>
        </trans-unit>
        <trans-unit id="8f7180a519eb6cf7ddd42524994816801ea0c9d3" translate="yes" xml:space="preserve">
          <source>Thrown by a &lt;a href=&quot;modulefinder&quot;&gt;&lt;code&gt;ModuleFinder&lt;/code&gt;&lt;/a&gt; when an error occurs finding a module. Also thrown by &lt;a href=&quot;configuration#resolve(java.lang.module.ModuleFinder,java.util.List,java.lang.module.ModuleFinder,java.util.Collection)&quot;&gt;&lt;code&gt;Configuration.resolve&lt;/code&gt;&lt;/a&gt; when resolution fails for observability-related reasons.</source>
          <target state="translated">モジュールの検索中にエラーが発生したときに&lt;a href=&quot;modulefinder&quot;&gt; &lt;code&gt;ModuleFinder&lt;/code&gt; &lt;/a&gt;によってスローされます。可観測性関連の理由で解決が失敗した場合にも、&lt;a href=&quot;configuration#resolve(java.lang.module.ModuleFinder,java.util.List,java.lang.module.ModuleFinder,java.util.Collection)&quot;&gt; &lt;code&gt;Configuration.resolve&lt;/code&gt; &lt;/a&gt;によってスローされます。</target>
        </trans-unit>
        <trans-unit id="880bf456a54a70675982d129fa0b480180cdaf07" translate="yes" xml:space="preserve">
          <source>Thrown by a &lt;code&gt;Scanner&lt;/code&gt; to indicate that the token retrieved does not match the pattern for the expected type, or that the token is out of range for the expected type.</source>
          <target state="translated">取得されたトークンが予期されるタイプのパターンに一致しないか、またはトークンが予期されるタイプの範囲外であることを示すために &lt;code&gt;Scanner&lt;/code&gt; によってスローされます。</target>
        </trans-unit>
        <trans-unit id="c4174a24dc3725eb8cd3a55fb30924a4fe44438f" translate="yes" xml:space="preserve">
          <source>Thrown by a method invocation on a proxy instance if its invocation handler's &lt;a href=&quot;invocationhandler#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; method throws a checked exception (a &lt;code&gt;Throwable&lt;/code&gt; that is not assignable to &lt;code&gt;RuntimeException&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt;) that is not assignable to any of the exception types declared in the &lt;code&gt;throws&lt;/code&gt; clause of the method that was invoked on the proxy instance and dispatched to the invocation handler.</source>
          <target state="translated">プロキシインスタンスのメソッド呼び出しによって、その呼び出しハンドラーの&lt;a href=&quot;invocationhandler#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;メソッドが、メソッドの &lt;code&gt;throws&lt;/code&gt; 句で宣言された例外タイプのいずれにも割り当てられないチェック済み例外（ &lt;code&gt;RuntimeException&lt;/code&gt; または &lt;code&gt;Error&lt;/code&gt; に割り当てられない &lt;code&gt;Throwable&lt;/code&gt; ）をスローした場合にスローされます。プロキシインスタンスで呼び出され、呼び出しハンドラにディスパッチされました。</target>
        </trans-unit>
        <trans-unit id="449d68c28afb5144db6be3ee1bdaf776191d13c8" translate="yes" xml:space="preserve">
          <source>Thrown by a method invocation on a proxy instance if its invocation handler's &lt;a href=&quot;invocationhandler#invoke-java.lang.Object-java.lang.reflect.Method-java.lang.Object:A-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; method throws a checked exception (a &lt;code&gt;Throwable&lt;/code&gt; that is not assignable to &lt;code&gt;RuntimeException&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt;) that is not assignable to any of the exception types declared in the &lt;code&gt;throws&lt;/code&gt; clause of the method that was invoked on the proxy instance and dispatched to the invocation handler.</source>
          <target state="translated">呼び出しハンドラの&lt;a href=&quot;invocationhandler#invoke-java.lang.Object-java.lang.reflect.Method-java.lang.Object:A-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;メソッドが、次のメソッドの &lt;code&gt;throws&lt;/code&gt; 句で宣言されている例外タイプのいずれにも割り当てられないチェック例外（ &lt;code&gt;RuntimeException&lt;/code&gt; または &lt;code&gt;Error&lt;/code&gt; に割り当てられない &lt;code&gt;Throwable&lt;/code&gt; )をスローした場合に、プロキシインスタンスのメソッド呼び出しによってスローされます。プロキシインスタンスで呼び出され、呼び出しハンドラにディスパッチされました。</target>
        </trans-unit>
        <trans-unit id="46bc74f574ec776658168405e81db7afdbafd125" translate="yes" xml:space="preserve">
          <source>Thrown by an implementation of &lt;a href=&quot;classfiletransformer#transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte%5B%5D)&quot;&gt;&lt;code&gt;ClassFileTransformer.transform&lt;/code&gt;&lt;/a&gt; when its input parameters are invalid.</source>
          <target state="translated">入力パラメーターが無効な場合に、&lt;a href=&quot;classfiletransformer#transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte%5B%5D)&quot;&gt; &lt;code&gt;ClassFileTransformer.transform&lt;/code&gt; の&lt;/a&gt;実装によってスローされます。</target>
        </trans-unit>
        <trans-unit id="c0b191916804a0ce7ade3e7ad6c72907de653afa" translate="yes" xml:space="preserve">
          <source>Thrown by an implementation of &lt;a href=&quot;classfiletransformer#transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte%5B%5D)&quot;&gt;&lt;code&gt;ClassFileTransformer.transform&lt;/code&gt;&lt;/a&gt; when its input parameters are invalid. This may occur either because the initial class file bytes were invalid or a previously applied transform corrupted the bytes.</source>
          <target state="translated">入力パラメーターが無効な場合に、&lt;a href=&quot;classfiletransformer#transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte%5B%5D)&quot;&gt; &lt;code&gt;ClassFileTransformer.transform&lt;/code&gt; の&lt;/a&gt;実装によってスローされます。これは、最初のクラスファイルのバイトが無効であったか、以前に適用された変換によってバイトが破損したために発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="2026bb949c8942d0b6ff954de426689bedd22a0f" translate="yes" xml:space="preserve">
          <source>Thrown by an implementation of &lt;a href=&quot;classfiletransformer#transform-java.lang.ClassLoader-java.lang.String-java.lang.Class-java.security.ProtectionDomain-byte:A-&quot;&gt;&lt;code&gt;ClassFileTransformer.transform&lt;/code&gt;&lt;/a&gt; when its input parameters are invalid.</source>
          <target state="translated">入力パラメータが無効な場合に&lt;a href=&quot;classfiletransformer#transform-java.lang.ClassLoader-java.lang.String-java.lang.Class-java.security.ProtectionDomain-byte:A-&quot;&gt; &lt;code&gt;ClassFileTransformer.transform&lt;/code&gt; の&lt;/a&gt;実装によってスローされます。</target>
        </trans-unit>
        <trans-unit id="6451678b25a75ad37657496ad6b021f9742247c7" translate="yes" xml:space="preserve">
          <source>Thrown by an implementation of &lt;a href=&quot;classfiletransformer#transform-java.lang.ClassLoader-java.lang.String-java.lang.Class-java.security.ProtectionDomain-byte:A-&quot;&gt;&lt;code&gt;ClassFileTransformer.transform&lt;/code&gt;&lt;/a&gt; when its input parameters are invalid. This may occur either because the initial class file bytes were invalid or a previously applied transform corrupted the bytes.</source>
          <target state="translated">入力パラメータが無効な場合に&lt;a href=&quot;classfiletransformer#transform-java.lang.ClassLoader-java.lang.String-java.lang.Class-java.security.ProtectionDomain-byte:A-&quot;&gt; &lt;code&gt;ClassFileTransformer.transform&lt;/code&gt; の&lt;/a&gt;実装によってスローされます。これは、初期クラスファイルのバイトが無効であったか、以前に適用された変換によってバイトが破損したために発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="36bf512d6b95a3230a8e2fd50d1b4de0d228dc0b" translate="yes" xml:space="preserve">
          <source>Thrown by an implementation of &lt;a href=&quot;instrumentation#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt;&lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt;&lt;/a&gt; when one of the specified classes cannot be modified.</source>
          <target state="translated">指定されたクラスの1つを変更できない場合に、&lt;a href=&quot;instrumentation#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt; &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; の&lt;/a&gt;実装によってスローされます。</target>
        </trans-unit>
        <trans-unit id="020cb90959939fef07e8618b70b83b808a7ab6c3" translate="yes" xml:space="preserve">
          <source>Thrown by an implementation of &lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt;&lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt;&lt;/a&gt; when one of the specified classes cannot be modified.</source>
          <target state="translated">指定されたクラスの1つを変更できない場合に&lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt; &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; の&lt;/a&gt;実装によってスローされます。</target>
        </trans-unit>
        <trans-unit id="95e9420662d7d9b9afbe109c1554657e148aebbb" translate="yes" xml:space="preserve">
          <source>Thrown by method createFont in the &lt;code&gt;Font&lt;/code&gt; class to indicate that the specified font is bad.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; クラスのメソッドcreateFontによってスローされ、指定されたフォントが不良であることを示します。</target>
        </trans-unit>
        <trans-unit id="d1f4915444489b296f8a95b9b3a5484f0f810de5" translate="yes" xml:space="preserve">
          <source>Thrown by methods in &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;locale.builder&quot;&gt;&lt;code&gt;Locale.Builder&lt;/code&gt;&lt;/a&gt; to indicate that an argument is not a well-formed BCP 47 tag.</source>
          <target state="translated">&lt;a href=&quot;locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;locale.builder&quot;&gt; &lt;code&gt;Locale.Builder&lt;/code&gt; の&lt;/a&gt;メソッドによってスローされ、引数が整形式のBCP 47タグではないことを示します。</target>
        </trans-unit>
        <trans-unit id="f7a0ec2666db0d1770ce4ee7ceaa041a300fc918" translate="yes" xml:space="preserve">
          <source>Thrown by methods in the &lt;code&gt;Stack&lt;/code&gt; class to indicate that the stack is empty.</source>
          <target state="translated">&lt;code&gt;Stack&lt;/code&gt; クラスのメソッドによってスローされ、スタックが空であることを示します。</target>
        </trans-unit>
        <trans-unit id="87839756f2b4a9bdafa9add0a5b76630b551723c" translate="yes" xml:space="preserve">
          <source>Thrown by the security manager to indicate a security violation.</source>
          <target state="translated">セキュリティ違反を示すために、セキュリティ管理者によって投げられます。</target>
        </trans-unit>
        <trans-unit id="638a53a219cd761cc43bce87f81cd26bd5efe2ad" translate="yes" xml:space="preserve">
          <source>Thrown by various accessor methods to indicate that the element being requested does not exist.</source>
          <target state="translated">要求された要素が存在しないことを示すために、さまざまなアクセサメソッドによってスローされます。</target>
        </trans-unit>
        <trans-unit id="508e7b614f5c1b1263478222d628a114be76f6fd" translate="yes" xml:space="preserve">
          <source>Thrown if an application attempts to access or modify a field, or to call a method that it does not have access to.</source>
          <target state="translated">アプリケーションがフィールドにアクセスしたり変更したり、アクセスできないメソッドを呼び出したりしようとした場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="869d003fbbd88ace377fa534fb1cf7362cbf9994" translate="yes" xml:space="preserve">
          <source>Thrown if an application tries to access or modify a specified field of an object, and that object no longer has that field.</source>
          <target state="translated">アプリケーションがオブジェクトの指定したフィールドにアクセスまたは変更しようとしたときに、そのオブジェクトがそのフィールドを持たなくなった場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="b35416788a1bd097dd83b51fbf396ce3397d9350" translate="yes" xml:space="preserve">
          <source>Thrown if an application tries to call a specified method of a class (either static or instance), and that class no longer has a definition of that method.</source>
          <target state="translated">アプリケーションがクラスの指定したメソッド (静的またはインスタンス)を呼ぼうとしたときに、そのクラスにそのメソッドの定義がなくなった場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="4aa5f401421c28f34721102b2aaea3b599adcdcf" translate="yes" xml:space="preserve">
          <source>Thrown if an application tries to create an array with negative size.</source>
          <target state="translated">アプリケーションが負のサイズの配列を作成しようとした場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="4cacfda15a370bf1f448b1b8734326c58b5e5ab2" translate="yes" xml:space="preserve">
          <source>Thrown if the Java Virtual Machine cannot find an appropriate native-language definition of a method declared &lt;code&gt;native&lt;/code&gt;.</source>
          <target state="translated">Java仮想マシンは、メソッドの適切なネイティブ言語の定義を見つけることができない場合にスローされますが宣言 &lt;code&gt;native&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed4b30764bfef85ec04d2330e9c4230db6e74c8e" translate="yes" xml:space="preserve">
          <source>Thrown if the Java Virtual Machine or a &lt;code&gt;ClassLoader&lt;/code&gt; instance tries to load in the definition of a class (as part of a normal method call or as part of creating a new instance using the &lt;code&gt;new&lt;/code&gt; expression) and no definition of the class could be found.</source>
          <target state="translated">Java仮想マシンまたは &lt;code&gt;ClassLoader&lt;/code&gt; インスタンスがクラスの定義を（通常のメソッド呼び出しの一部として、または &lt;code&gt;new&lt;/code&gt; 式を使用して新しいインスタンスを作成する一環として）ロードしようとし、クラスの定義が見つからなかった場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="e2a4785aa211f2dc50660bf09b1edea5405e82d1" translate="yes" xml:space="preserve">
          <source>Thrown to indicate a duplicate event request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41a5283fb09f87113fc151fba33158899deefe0" translate="yes" xml:space="preserve">
          <source>Thrown to indicate a problem with time-zone configuration.</source>
          <target state="translated">タイムゾーンの設定に問題があることを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="a00c65c8705273b864506f2439a5ce94c07ab7e1" translate="yes" xml:space="preserve">
          <source>Thrown to indicate a type mismatch in setting the value of a field or variable, or in specifying the return value of a method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f51e8fc28174460f9c752b1eaea8720524716f" translate="yes" xml:space="preserve">
          <source>Thrown to indicate an exception occurred in an invoked method within the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c458fce325e565591ddac6f889e8b33b0bd6f707" translate="yes" xml:space="preserve">
          <source>Thrown to indicate an invalid argument or inconsistent passed to a &lt;a href=&quot;connector&quot;&gt;&lt;code&gt;Connector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e633b8d9881d69fa335af23e48c98b66a7c163ab" translate="yes" xml:space="preserve">
          <source>Thrown to indicate an operation cannot be completed because it is not valid for a native method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7edb569a990a4308177a3298535d51a76693af6d" translate="yes" xml:space="preserve">
          <source>Thrown to indicate line number or variable information is not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3983324dddc861a832d725ae45cd3b7f60d3579e" translate="yes" xml:space="preserve">
          <source>Thrown to indicate some unexpected internal error has occurred in the Java Virtual Machine.</source>
          <target state="translated">Java 仮想マシンで予期せぬ内部エラーが発生したことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="7e3e4a0f1f3fa89bbf8d9b5da71fc426af023520" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a HTTP request needs to be retried but cannot be retried automatically, due to streaming mode being enabled.</source>
          <target state="translated">ストリーミングモードが有効になっているため、HTTP リクエストを再試行する必要があるが、自動的に再試行できないことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="540d804314f89ee62b22cb986c1385ddf340ae9d" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a malformed URL has occurred.</source>
          <target state="translated">不正な URL が発生したことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="fa6f32daeda821c29c3ca8469339c0da181d14f4" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a malformed URL has occurred. Either no legal protocol could be found in a specification string or the string could not be parsed.</source>
          <target state="translated">不正な URL が発生したことを示すためにスローされます。指定文字列に正当なプロトコルが見つからなかったか、文字列が解析できなかったかのいずれかです。</target>
        </trans-unit>
        <trans-unit id="9b27cf873b7ec3e49797e7c1bd9474615d97e0ff" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a method has been called by an inappropriate caller.</source>
          <target state="translated">不適切な呼び出し元によってメソッドが呼び出されたことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="db0c26de4391b628372b987bc09c64a422883e4c" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a method has been passed an illegal or inappropriate argument.</source>
          <target state="translated">メソッドに不正または不適切な引数が渡されたことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="2ddb6d8e4d777c420df81b8d63878b60ae16bf67" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a module cannot be modified.</source>
          <target state="translated">モジュールを変更できないことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="3969dcb5b1cacd4b351f464d7cbd2f69e84f3112" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a preferences operation could not complete because of a failure in the backing store, or a failure to contact the backing store.</source>
          <target state="translated">バッキングストアに障害が発生したために環境設定操作が完了できなかったこと、またはバッキングストアに連絡できなかったことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="f2ddf5259c94abd224ba4a9bb539fc79886290d3" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a program has attempted to access an element of an annotation type that was added to the annotation type definition after the annotation was compiled (or serialized).</source>
          <target state="translated">アノテーションがコンパイル(またはシリアライズ)された後にアノテーション型定義に追加されたアノテーション型の要素にプログラムがアクセスしようとしたことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="5239569b289f742c10f1a049c81ec9e3872a1bbe" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a program has attempted to access an element of an annotation type that was added to the annotation type definition after the annotation was compiled (or serialized). This exception will not be thrown if the new element has a default value. This exception can be thrown by the &lt;a href=&quot;../reflect/annotatedelement&quot;&gt;API used to read annotations reflectively&lt;/a&gt;.</source>
          <target state="translated">注釈がコンパイル（またはシリアル化）された後に注釈型定義に追加された注釈型の要素にプログラムがアクセスしようとしたことを示すためにスローされます。新しい要素にデフォルト値がある場合、この例外はスローされません。この例外は、&lt;a href=&quot;../reflect/annotatedelement&quot;&gt;注釈を反射的に読み取るために使用されるAPI&lt;/a&gt;によってスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="396e7ce9ea643597626cd549a33491cd8c6ef479" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a program has attempted to access an element of an annotation whose type has changed after the annotation was compiled (or serialized).</source>
          <target state="translated">アノテーションがコンパイル(またはシリアライズ)された後に型が変更されたアノテーションの要素にプログラムがアクセスしようとしたことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="b56668c6b68c397fb5a223b8e1ca0567f75cb2a3" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a program has attempted to access an element of an annotation whose type has changed after the annotation was compiled (or serialized). This exception can be thrown by the &lt;a href=&quot;../reflect/annotatedelement&quot;&gt;API used to read annotations reflectively&lt;/a&gt;.</source>
          <target state="translated">注釈がコンパイル（またはシリアル化）された後に型が変更された注釈の要素にプログラムがアクセスしようとしたことを示すためにスローされます。この例外は、&lt;a href=&quot;../reflect/annotatedelement&quot;&gt;注釈を反射的に読み取るために使用されるAPI&lt;/a&gt;によってスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="5d4c519a933997728d1498c9a610464926087237" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a thread has attempted to wait on an object's monitor or to notify other threads waiting on an object's monitor without owning the specified monitor.</source>
          <target state="translated">スレッドがオブジェクトのモニタで待機しようとしたこと、または指定されたモニタを所有せずにオブジェクトのモニタで待機している他のスレッドに通知するためにスローされます。</target>
        </trans-unit>
        <trans-unit id="f5640785c45e7765a6d9b60e968cf411a55241ae" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a thread is not in an appropriate state for the requested operation.</source>
          <target state="translated">スレッドが要求された操作に適切な状態でないことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="104f9c2d0af4cd752935e91bc4dac004678b631a" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a thread is not in an appropriate state for the requested operation. See, for example, the &lt;code&gt;suspend&lt;/code&gt; and &lt;code&gt;resume&lt;/code&gt; methods in class &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="translated">要求された操作に対してスレッドが適切な状態ではないことを示すためにスローされます。たとえば、クラス &lt;code&gt;Thread&lt;/code&gt; の &lt;code&gt;suspend&lt;/code&gt; および &lt;code&gt;resume&lt;/code&gt; メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="66861cc613fc6090138285ae273fece145579c8e" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an &lt;code&gt;invokedynamic&lt;/code&gt; instruction has failed to find its bootstrap method, or the bootstrap method has failed to provide a &lt;a href=&quot;invoke/callsite&quot;&gt;call site&lt;/a&gt; with a &lt;a href=&quot;invoke/callsite#getTarget--&quot;&gt;target&lt;/a&gt; of the correct &lt;a href=&quot;invoke/methodhandle#type&quot;&gt;method type&lt;/a&gt;.</source>
          <target state="translated">ことを示すためにスローされ &lt;code&gt;invokedynamic&lt;/code&gt; の命令は、そのブートストラップ法を見つけることができなかった、またはブートストラップ法を提供するために失敗した&lt;a href=&quot;invoke/callsite&quot;&gt;コールサイトを&lt;/a&gt;して&lt;a href=&quot;invoke/callsite#getTarget--&quot;&gt;、ターゲット&lt;/a&gt;正しいの&lt;a href=&quot;invoke/methodhandle#type&quot;&gt;メソッドタイプ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8867bef35b671e2b21250e6f5c954f39b1db2ea2" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an &lt;code&gt;invokedynamic&lt;/code&gt; instruction or a dynamic constant failed to resolve its bootstrap method and arguments, or for &lt;code&gt;invokedynamic&lt;/code&gt; instruction the bootstrap method has failed to provide a &lt;a href=&quot;invoke/callsite&quot;&gt;call site&lt;/a&gt; with a &lt;a href=&quot;invoke/callsite#getTarget()&quot;&gt;target&lt;/a&gt; of the correct &lt;a href=&quot;invoke/methodhandle#type()&quot;&gt;method type&lt;/a&gt;, or for a dynamic constant the bootstrap method has failed to provide a constant value of the required type.</source>
          <target state="translated">ことを示すためにスローさ &lt;code&gt;invokedynamic&lt;/code&gt; の命令または動的定数は、そのブートストラップ法と引数を解決するために失敗した、または &lt;code&gt;invokedynamic&lt;/code&gt; の指示ブートストラップ法は、提供するために、失敗した&lt;a href=&quot;invoke/callsite&quot;&gt;呼び出しサイト&lt;/a&gt;と&lt;a href=&quot;invoke/callsite#getTarget()&quot;&gt;ターゲット&lt;/a&gt;正しいの&lt;a href=&quot;invoke/methodhandle#type()&quot;&gt;メソッドタイプを&lt;/a&gt;、または動的定数ブートストラップ用メソッドは、必要なタイプの定数値を提供できませんでした。</target>
        </trans-unit>
        <trans-unit id="102ef32c651cb8c531134e2d5666f4c8921e8d5a" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an array has been accessed with an illegal index.</source>
          <target state="translated">配列が不正なインデックスでアクセスされたことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="e638105227ffc56d46887520a9df3fe725ecf6bf" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an array has been accessed with an illegal index. The index is either negative or greater than or equal to the size of the array.</source>
          <target state="translated">配列が不正なインデックスでアクセスされたことを示すためにスローされます。インデックスは、負の値か配列のサイズ以上の値となります。</target>
        </trans-unit>
        <trans-unit id="3788a6bc96dd93a0423e65a2392c4aefa6564479" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an assertion has failed.</source>
          <target state="translated">アサーションが失敗したことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="c4b932c33fe1548f8d27998a525122baefbc9517" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an attempt has been made to store the wrong type of object into an array of objects.</source>
          <target state="translated">間違った型のオブジェクトをオブジェクトの配列に格納しようとしたことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="7f8dfd8c4ad7a3be4deff5dd0a1a73d68b62f9a3" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an attempt has been made to store the wrong type of object into an array of objects. For example, the following code generates an &lt;code&gt;ArrayStoreException&lt;/code&gt;:</source>
          <target state="translated">間違ったタイプのオブジェクトをオブジェクトの配列に格納しようとしたことを示すためにスローされます。たとえば、次のコードは &lt;code&gt;ArrayStoreException&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="f2f6549a0587858bd0fb2c54a050332bf79bf62e" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an index of some sort (such as to an array, to a string, or to a vector) is out of range.</source>
          <target state="translated">ある種のインデックス (配列、文字列、ベクタなど)が範囲外であることを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="41a57f59f92df555e7bc14534566186bfe4a4075" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an operation could not complete because the input did not conform to the appropriate XML document type for a collection of preferences, as per the &lt;a href=&quot;preferences&quot;&gt;&lt;code&gt;Preferences&lt;/code&gt;&lt;/a&gt; specification.</source>
          <target state="translated">&lt;a href=&quot;preferences&quot;&gt; &lt;code&gt;Preferences&lt;/code&gt; &lt;/a&gt;仕様に従って、入力が設定のコレクションの適切なXMLドキュメントタイプに準拠していなかったため、操作が完了できなかったことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="4ef87496cb36d2707364b4b160f0cab796ab79c2" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an operation could not complete because the input did not conform to the appropriate XML document type for a collection of properties, as per the &lt;a href=&quot;properties&quot;&gt;&lt;code&gt;Properties&lt;/code&gt;&lt;/a&gt; specification.</source>
          <target state="translated">&lt;a href=&quot;properties&quot;&gt; &lt;code&gt;Properties&lt;/code&gt; &lt;/a&gt;仕様に従って、入力がプロパティのコレクションの適切なXMLドキュメントタイプに準拠していなかったために操作が完了できなかったことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="8103270cbbd1a662984e3a54fc94c6e14c56503c" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an unexpected internal error has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af993c3944abc68b7713ec33d09f8faacc3dade8" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an unknown service exception has occurred.</source>
          <target state="translated">未知のサービス例外が発生したことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="84b381bb1c81dc4ca192e0de5ff0ecde91c4dac6" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an unknown service exception has occurred. Either the MIME type returned by a URL connection does not make sense, or the application is attempting to write to a read-only URL connection.</source>
          <target state="translated">未知のサービス例外が発生したことを示すためにスローされます。URL 接続によって返された MIME タイプが意味をなさないか、アプリケーションが読み取り専用の URL 接続に書き込もうとしているかのいずれかです。</target>
        </trans-unit>
        <trans-unit id="5493a6ebb1e010e9dd2cea973b53ecbf4af2dea2" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that code has attempted to call a method handle via the wrong method type.</source>
          <target state="translated">コードが間違ったメソッド型を使用してメソッドハンドルを呼ぼうとしたことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="92ac50091a1f8c77798686f70107577cf2451182" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that code has attempted to call a method handle via the wrong method type. As with the bytecode representation of normal Java method calls, method handle calls are strongly typed to a specific type descriptor associated with a call site.</source>
          <target state="translated">コードが間違ったメソッド・タイプを介してメソッド・ハンドルを呼ぼうとしたことを示すためにスローされます。通常の Java メソッド呼び出しのバイトコード表現と同様に、メソッドハンドル呼び出しは、呼び出しサイトに関連付けられた特定の型記述子に強く型付けされます。</target>
        </trans-unit>
        <trans-unit id="f92c41a850d254a4780135c9c69967168dabaafc" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the &lt;code&gt;clone&lt;/code&gt; method in class &lt;code&gt;Object&lt;/code&gt; has been called to clone an object, but that the object's class does not implement the &lt;code&gt;Cloneable&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; を複製するためにObjectクラスの &lt;code&gt;clone&lt;/code&gt; メソッドが呼び出されたが、オブジェクトのクラスが &lt;code&gt;Cloneable&lt;/code&gt; インターフェースを実装していないことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="d8478a05f127fe7cb9c0488a21cfdaaa771e4f86" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the IP address of a host could not be determined.</source>
          <target state="translated">ホストの IP アドレスを決定できなかったことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="efa7f8c02d77f4c0cf3b797c8fcecce755192567" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the Java Virtual Machine is broken or has run out of resources necessary for it to continue operating.</source>
          <target state="translated">Java 仮想マシンが壊れているか、動作を継続するために必要なリソースが不足していることを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="383825884ffb24c7fd28f3f1256478dd6354193a" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the application has attempted to convert a string to one of the numeric types, but that the string does not have the appropriate format.</source>
          <target state="translated">アプリケーションが文字列を数値型のいずれかに変換しようとしたが、文字列が適切なフォーマットを持っていないことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="2d77fa13959fc7eaa7f9d341784fbcd5f5ca9eea" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the code has attempted to cast an object to a subclass of which it is not an instance.</source>
          <target state="translated">コードがオブジェクトをインスタンスではないサブクラスにキャストしようとしたことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="c506a5ebbdd9f9271eda27d1cea842ba88758187" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the code has attempted to cast an object to a subclass of which it is not an instance. For example, the following code generates a &lt;code&gt;ClassCastException&lt;/code&gt;:</source>
          <target state="translated">コードが、インスタンスではないサブクラスにオブジェクトをキャストしようとしたことを示すためにスローされます。たとえば、次のコードは &lt;code&gt;ClassCastException&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="5cf58324758dffc1d1155b8ef72111f96620a3e6" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the operation is invalid because it would modify the VM and the VM is read-only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f0a14787bcec58470322c418ddf9cd14570f7d" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the operation is invalid because it would modify the VM and the VM is read-only. See &lt;a href=&quot;virtualmachine#canBeModified()&quot;&gt;&lt;code&gt;VirtualMachine.canBeModified()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a907b8d33d2f53eb11c1d849ed25a86a68162360" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested class has not yet been loaded through the appropriate class loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e8060d0aa162837e712d9a9d2d1e30b4b56b19" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested event cannot be modified because it is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97eae1a95388dd8252326acf4bcbc9c1bb80f215" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested event cannot be modified because it is enabled. Filters can be added only to disabled event requests. Also thrown if an operation is attempted on a deleted request. See &lt;a href=&quot;eventrequestmanager#deleteEventRequest(com.sun.jdi.request.EventRequest)&quot;&gt;&lt;code&gt;EventRequestManager.deleteEventRequest(EventRequest)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5253e21cb5e4058201f1c7c99bfc9f5b403bdee9" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested module is invalid or became invalid after the module was unloaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d307b74b79419674c3280f83642278de542e5396" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be completed because the a mirror from one target VM is being combined with a mirror from another target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4e6d6ccdbc295a36a6c66c95000478dd57db96" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be completed because the specified class has not yet been prepared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dcef24880fabaa3219fd4d8cb3c1a3c502b1d6d" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be completed because the specified code index is not valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205697ac6157292f3aa8720ffd2dd16bdf495f37" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be completed because the specified line number is not valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbc4240eb01fd432405bed5c3f0729ff99738e7" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be completed because the specified object has been garbage collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5739d7c57b78a0ea095dea77cbea94fc204a84" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be completed because the specified stack frame is no longer valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa3a4ea21e600b1834769e749179e269e329d1e" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be completed because the target VM has run out of memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f70451808d82b8a68f173dd4fcef3a05f2c206" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be completed while the specified thread is in its current state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a1967fe0da3125703acfb2f8268a0b79a2042b" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be performed because the set is unmodifiable.</source>
          <target state="translated">セットが変更できないため、要求された操作が実行できないことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="c5b1734f96c51dcec87166c6792985e9dc831b91" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation is not supported.</source>
          <target state="translated">要求された操作がサポートされていないことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="d99d78d4dde5392bb96f28ceab1fd0b14f1f18e4" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that there is an error creating or accessing a Socket.</source>
          <target state="translated">ソケットの作成またはアクセスにエラーが発生したことを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="9cf43f98e6868d5fac49daf31f93cdbc9d0c4f2f" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that there is an error in the underlying protocol, such as a TCP error.</source>
          <target state="translated">TCP エラーなど、基礎となるプロトコルにエラーがあることを示すためにスローされます。</target>
        </trans-unit>
        <trans-unit id="16397a05b50ec9b4384ee8d0332c486d0cbaefec" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that there is an inconistency in the debug information provided by the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59844f73f2ae72bf41d36aa51b2d277b46f13a1" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that there is an inconistency in the debug information provided by the target VM. For example, this exception is thrown if there is a type mismatch between a retrieved value's runtime type and its declared type as reported by the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0020a2f014df109b88c150090155fe5e0ff392a6" translate="yes" xml:space="preserve">
          <source>Thrown when &lt;a href=&quot;executable#getParameters()&quot;&gt;&lt;code&gt;the
 java.lang.reflect package&lt;/code&gt;&lt;/a&gt; attempts to read method parameters from a class file and determines that one or more parameters are malformed.</source>
          <target state="translated">&lt;a href=&quot;executable#getParameters()&quot;&gt; &lt;code&gt;the java.lang.reflect package&lt;/code&gt; &lt;/a&gt;がクラスファイルからメソッドパラメータを読み取ろうとし、1つ以上のパラメータの形式が正しくないと判断した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="5966211edde30cdd2a3cf811bcc64351630ec522" translate="yes" xml:space="preserve">
          <source>Thrown when &lt;a href=&quot;executable#getParameters--&quot;&gt;&lt;code&gt;the
 java.lang.reflect package&lt;/code&gt;&lt;/a&gt; attempts to read method parameters from a class file and determines that one or more parameters are malformed.</source>
          <target state="translated">&lt;a href=&quot;executable#getParameters--&quot;&gt; &lt;code&gt;the java.lang.reflect package&lt;/code&gt; &lt;/a&gt;がクラスファイルからメソッドパラメータを読み取ろうとし、1つ以上のパラメータが不正であると判断した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="d2951857e3709e7ab46537dafc94ee6564ca9b97" translate="yes" xml:space="preserve">
          <source>Thrown when Java language access checks cannot be suppressed.</source>
          <target state="translated">Java 言語のアクセスチェックを抑制できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="cb4220a02882b11343f17a0ea2b10800ca84cf61" translate="yes" xml:space="preserve">
          <source>Thrown when a connection, over which an &lt;code&gt;HttpRequest&lt;/code&gt; is intended to be sent, is not successfully established within a specified time period.</source>
          <target state="translated">&lt;code&gt;HttpRequest&lt;/code&gt; の送信を目的とした接続が、指定された期間内に正常に確立されなかった場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="ea327af5e49b562dedb37469442db8fcd3880f1e" translate="yes" xml:space="preserve">
          <source>Thrown when a file system operation fails on one or two files.</source>
          <target state="translated">1 つまたは 2 つのファイルに対してファイルシステムの操作が失敗した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="c1c8ea5944303943cba55b2bd34f2f77daa12756" translate="yes" xml:space="preserve">
          <source>Thrown when a file system operation fails on one or two files. This class is the general class for file system exceptions.</source>
          <target state="translated">1 つまたは 2 つのファイルに対してファイルシステムの操作が失敗したときにスローされます。このクラスは、ファイルシステム例外のための一般的なクラスです。</target>
        </trans-unit>
        <trans-unit id="5b356658f537a4564f86e8316f0d9b9d4bd5b569" translate="yes" xml:space="preserve">
          <source>Thrown when a particular method cannot be found.</source>
          <target state="translated">特定のメソッドが見つからない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="c7af046ff6245868c073a5d05a8d58efb250301d" translate="yes" xml:space="preserve">
          <source>Thrown when a problem with configuration with the Parser Factories exists.</source>
          <target state="translated">パーサファクトリの設定に問題がある場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="2066b17ef3e174b88acffb0963013f5940815b33" translate="yes" xml:space="preserve">
          <source>Thrown when a problem with configuration with the Parser Factories exists. This error will typically be thrown when the class of a parser factory specified in the system properties cannot be found or instantiated.</source>
          <target state="translated">パーサファクトリの設定に問題がある場合にスローされます。このエラーは、システムプロパティで指定されたパーサファクトリのクラスが見つからなかったり、インスタンス化されなかったりした場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="b9443a6c7fb738aebf8ff35da034e42d8123b0ee" translate="yes" xml:space="preserve">
          <source>Thrown when a problem with configuration with the Schema Factories exists.</source>
          <target state="translated">スキーマファクトリの設定に問題がある場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="cebc51291159e9576fc227fcf27e79451ea6cc05" translate="yes" xml:space="preserve">
          <source>Thrown when a problem with configuration with the Schema Factories exists. This error will typically be thrown when the class of a schema factory specified in the system properties cannot be found or instantiated.</source>
          <target state="translated">スキーマファクトリの設定に問題がある場合にスローされます。このエラーは通常、システムプロパティで指定されたスキーマファクトリのクラスが見つからなかったり、インスタンス化できなかったりした場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="d3e42270794da6b2c96e0d3f8ad29d66d755b986" translate="yes" xml:space="preserve">
          <source>Thrown when a problem with configuration with the Transformer Factories exists.</source>
          <target state="translated">変圧器工場の構成に問題がある場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="9955c7643c81f67e799716917c8f3ede4685a928" translate="yes" xml:space="preserve">
          <source>Thrown when a problem with configuration with the Transformer Factories exists. This error will typically be thrown when the class of a transformation factory specified in the system properties cannot be found or instantiated.</source>
          <target state="translated">トランスフォーム ファクトリの構成に問題がある場合にスローされます。このエラーは通常、システム プロパティで指定されたトランスフォーム ファクトリのクラスが見つからないか、インスタンス化できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="3888570a9ed2851c78f15065dafecd85068689fb" translate="yes" xml:space="preserve">
          <source>Thrown when a response is not received within a specified time period.</source>
          <target state="translated">指定された時間内に応答を受け取れなかった場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="473aef2086c18bb75b2527e5f479c40478fb31a6" translate="yes" xml:space="preserve">
          <source>Thrown when a semantically malformed parameterized type is encountered by a reflective method that needs to instantiate it.</source>
          <target state="translated">インスタンスを作成する必要のある反射メソッドで、意味的に不正なパラメータ化された型が見つかった場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="abc8d3f3349c445f738743923e1d85c669bd665d" translate="yes" xml:space="preserve">
          <source>Thrown when a semantically malformed parameterized type is encountered by a reflective method that needs to instantiate it. For example, if the number of type arguments to a parameterized type is wrong.</source>
          <target state="translated">インスタンスを作成する必要のあるリフレクティブ・メソッドで、意味的に不正なパラメータ化された型が見つかった場合にスローされます。例えば、パラメータ化された型の引数の数が間違っている場合などです。</target>
        </trans-unit>
        <trans-unit id="1f83e8d7c62a2be973442f570ebc9fd648e27703" translate="yes" xml:space="preserve">
          <source>Thrown when a serious Abstract Window Toolkit error has occurred.</source>
          <target state="translated">Abstract Window Toolkit の深刻なエラーが発生した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="e9f3c5a41292fa168570f2fd4a41460ed538818e" translate="yes" xml:space="preserve">
          <source>Thrown when a serious I/O error has occurred.</source>
          <target state="translated">深刻な I/O エラーが発生した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="6c339926ccc01f06f95cfd36ba516e167e648173" translate="yes" xml:space="preserve">
          <source>Thrown when a stack overflow occurs because an application recurses too deeply.</source>
          <target state="translated">アプリケーションの再帰が深すぎるためにスタックオーバーフローが発生した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="a69fa9230dccf801abde7f829b6712ffde1f2600" translate="yes" xml:space="preserve">
          <source>Thrown when a syntactically malformed signature attribute is encountered by a reflective method that needs to interpret the generic signature information for a type, method or constructor.</source>
          <target state="translated">型、メソッド、コンストラクタの一般的なシグネチャ情報を解釈する必要がある反射メソッドで、構文的に不正なシグネチャ属性が見つかった場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="13159ce6dfd56a2d1d891aba708f3644e1858209" translate="yes" xml:space="preserve">
          <source>Thrown when a thread is waiting, sleeping, or otherwise occupied, and the thread is interrupted, either before or during the activity.</source>
          <target state="translated">スレッドが待機中、スリープ中、またはその他の方法で占有されていて、そのアクティビティの前または途中でスレッドが中断された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="a09b0f18154fb0be95c6024931d3b93eefc7c0c0" translate="yes" xml:space="preserve">
          <source>Thrown when a thread is waiting, sleeping, or otherwise occupied, and the thread is interrupted, either before or during the activity. Occasionally a method may wish to test whether the current thread has been interrupted, and if so, to immediately throw this exception. The following code can be used to achieve this effect:</source>
          <target state="translated">スレッドが待機中、スリープ中、またはその他の方法で占有されていて、そのアクティビティの前または途中でスレッドが中断された場合にスローされます。時々、メソッドは現在のスレッドが中断されたかどうかをテストし、中断された場合は直ちにこの例外をスローしたい場合があります。この効果を得るために、以下のコードを使用することができます。</target>
        </trans-unit>
        <trans-unit id="ffc50e4e05b8b47fba417b04297bdf0aa5a790fd" translate="yes" xml:space="preserve">
          <source>Thrown when an UndoableEdit is told to &lt;code&gt;redo()&lt;/code&gt; and can't.</source>
          <target state="translated">UndoableEditが &lt;code&gt;redo()&lt;/code&gt; するように指示され、できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="690e36e00543576250919a2418fe6f7708155e3a" translate="yes" xml:space="preserve">
          <source>Thrown when an UndoableEdit is told to &lt;code&gt;undo()&lt;/code&gt; and can't.</source>
          <target state="translated">UndoableEditが &lt;code&gt;undo()&lt;/code&gt; するように指示され、できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="941d7ef48c29f364b6afef1778dd397e9666f698" translate="yes" xml:space="preserve">
          <source>Thrown when an application attempts to access a sequence of &lt;a href=&quot;../../../../../java.base/java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; objects each corresponding to a &lt;a href=&quot;typemirror&quot;&gt;&lt;code&gt;TypeMirror&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アプリケーションが、それぞれが&lt;a href=&quot;typemirror&quot;&gt; &lt;code&gt;TypeMirror&lt;/code&gt; に&lt;/a&gt;対応する一連の&lt;a href=&quot;../../../../../java.base/java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;オブジェクトにアクセスしようとしたときにスローされます。</target>
        </trans-unit>
        <trans-unit id="225db7a3c32fdda714d3a100271f518cdd05102e" translate="yes" xml:space="preserve">
          <source>Thrown when an application attempts to access a sequence of &lt;a href=&quot;../../../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; objects each corresponding to a &lt;a href=&quot;typemirror&quot;&gt;&lt;code&gt;TypeMirror&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アプリケーションが、それぞれ&lt;a href=&quot;typemirror&quot;&gt; &lt;code&gt;TypeMirror&lt;/code&gt; に&lt;/a&gt;対応する&lt;a href=&quot;../../../../java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;オブジェクトのシーケンスにアクセスしようとするとスローされます。</target>
        </trans-unit>
        <trans-unit id="8dc8a7aff1a9851ac4a3c07027a0feabd12085d4" translate="yes" xml:space="preserve">
          <source>Thrown when an application attempts to access the &lt;a href=&quot;../../../../../java.base/java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object corresponding to a &lt;a href=&quot;typemirror&quot;&gt;&lt;code&gt;TypeMirror&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アプリケーションが&lt;a href=&quot;typemirror&quot;&gt; &lt;code&gt;TypeMirror&lt;/code&gt; に&lt;/a&gt;対応する&lt;a href=&quot;../../../../../java.base/java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;オブジェクトにアクセスしようとしたときにスローされます。</target>
        </trans-unit>
        <trans-unit id="0e9acf0947c9de40df52ae2fe13a861f6ea15113" translate="yes" xml:space="preserve">
          <source>Thrown when an application attempts to access the &lt;a href=&quot;../../../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object corresponding to a &lt;a href=&quot;typemirror&quot;&gt;&lt;code&gt;TypeMirror&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アプリケーションが&lt;a href=&quot;typemirror&quot;&gt; &lt;code&gt;TypeMirror&lt;/code&gt; に&lt;/a&gt;対応する&lt;a href=&quot;../../../../java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;オブジェクトにアクセスしようとするとスローされます。</target>
        </trans-unit>
        <trans-unit id="b6d2fa5db6cc3f5ae02f3bb6d25cd64e447d437b" translate="yes" xml:space="preserve">
          <source>Thrown when an application attempts to use &lt;code&gt;null&lt;/code&gt; in a case where an object is required.</source>
          <target state="translated">オブジェクトが必要な場合にアプリケーションが &lt;code&gt;null&lt;/code&gt; を使用しようとするとスローされます。</target>
        </trans-unit>
        <trans-unit id="54d794833472e9887dedcf95a573622747a3250e" translate="yes" xml:space="preserve">
          <source>Thrown when an application attempts to use &lt;code&gt;null&lt;/code&gt; in a case where an object is required. These include:</source>
          <target state="translated">オブジェクトが必要な場合にアプリケーションが &lt;code&gt;null&lt;/code&gt; を使用しようとするとスローされます。これらには以下が含まれます：</target>
        </trans-unit>
        <trans-unit id="0efdcf35f82ddf5acbc1ee386d430193d9c08f60" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to access a type using a string representing the type's name, but no definition for the type with the specified name can be found.</source>
          <target state="translated">アプリケーションが型の名前を表す文字列を使って型にアクセスしようとしたが、指定された名前の型の定義が見つからなかった場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="d583f6390e88d58a321cdd57cd3f045c610841a6" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to access a type using a string representing the type's name, but no definition for the type with the specified name can be found. This exception differs from &lt;a href=&quot;classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; in that &lt;code&gt;ClassNotFoundException&lt;/code&gt; is a checked exception, whereas this exception is unchecked.</source>
          <target state="translated">アプリケーションが型の名前を表す文字列を使用して型にアクセスしようとしたが、指定された名前の型の定義が見つからない場合にスローされます。この例外が異なる&lt;a href=&quot;classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt;という点で &lt;code&gt;ClassNotFoundException&lt;/code&gt; が、この例外がオフになっているのに対し、チェック例外です。</target>
        </trans-unit>
        <trans-unit id="394d02ea1dad51f2e7fea8427dbdfb2dc48460b1" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to access an enum constant by name and the enum type contains no constant with the specified name.</source>
          <target state="translated">アプリケーションが名前を指定して列挙型定数にアクセスしようとした場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="ef87971ac4029e84916a62d3d21f03b3407a94cf" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to access an enum constant by name and the enum type contains no constant with the specified name. This exception can be thrown by the &lt;a href=&quot;reflect/annotatedelement&quot;&gt;API used to read annotations reflectively&lt;/a&gt;.</source>
          <target state="translated">アプリケーションが名前で列挙型定数にアクセスしようとし、列挙型に指定された名前の定数が含まれていない場合にスローされます。この例外は、&lt;a href=&quot;reflect/annotatedelement&quot;&gt;注釈を反射的に読み取るために使用されるAPI&lt;/a&gt;によってスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="b0e1287ede5f17d39e118dcc0654e2e9da0386c3" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to call an abstract method.</source>
          <target state="translated">アプリケーションが抽象メソッドを呼ぼうとしたときにスローされます。</target>
        </trans-unit>
        <trans-unit id="8952421e86e0b4cec4184d03f07efd2efca2d6f1" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to call an abstract method. Normally, this error is caught by the compiler; this error can only occur at run time if the definition of some class has incompatibly changed since the currently executing method was last compiled.</source>
          <target state="translated">アプリケーションが抽象メソッドを呼ぼうとしたときにスローされます。通常、このエラーはコンパイラによって捕捉されます。このエラーは、実行中のメソッドが最後にコンパイルされた後にクラスの定義が変更された場合にのみ発生します。</target>
        </trans-unit>
        <trans-unit id="d599ac9e124da1067640464856740be65dcb3fc5" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to create an instance of a class using the &lt;code&gt;newInstance&lt;/code&gt; method in class &lt;code&gt;Class&lt;/code&gt;, but the specified class object cannot be instantiated.</source>
          <target state="translated">アプリケーションがクラス &lt;code&gt;Class&lt;/code&gt; の &lt;code&gt;newInstance&lt;/code&gt; メソッドを使用してクラスのインスタンスを作成しようとしたが、指定されたクラスオブジェクトをインスタンス化できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="f5da040c056249dd1c7fbcfdea1a071f540ddb76" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to create an instance of a class using the &lt;code&gt;newInstance&lt;/code&gt; method in class &lt;code&gt;Class&lt;/code&gt;, but the specified class object cannot be instantiated. The instantiation can fail for a variety of reasons including but not limited to:</source>
          <target state="translated">アプリケーションがクラス &lt;code&gt;Class&lt;/code&gt; の &lt;code&gt;newInstance&lt;/code&gt; メソッドを使用してクラスのインスタンスを作成しようとしたが、指定されたクラスオブジェクトをインスタンス化できない場合にスローされます。インスタンス化は、次のようなさまざまな理由で失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="0bf321247c46d7739ccd9a0b52a0d88daf189f0c" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to load in a class through its string name using:</source>
          <target state="translated">アプリケーションが文字列名を使ってクラスをロードしようとしたときにスローされます。</target>
        </trans-unit>
        <trans-unit id="b1ba4c30bc96d518611c82265d700edfac455648" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to load in a class through its string name using: The &lt;code&gt;forName&lt;/code&gt; method in class &lt;code&gt;Class&lt;/code&gt;.</source>
          <target state="translated">アプリケーションが文字列名を使用してクラスをロードしようとすると、クラス &lt;code&gt;Class&lt;/code&gt; の &lt;code&gt;forName&lt;/code&gt; メソッドを使用してスローされます。</target>
        </trans-unit>
        <trans-unit id="cf137b773f9859fde3407fbc5844cd52f1a45bfe" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to use the Java &lt;code&gt;new&lt;/code&gt; construct to instantiate an abstract class or an interface.</source>
          <target state="translated">アプリケーションがJavaの &lt;code&gt;new&lt;/code&gt; 構成要素を使用して、抽象クラスまたはインターフェースをインスタンス化しようとしたときにスローされます。</target>
        </trans-unit>
        <trans-unit id="9bbd13add8ba126043071ece75b6a53958168b5c" translate="yes" xml:space="preserve">
          <source>Thrown when an attempt is made to apply either of the following: A subquery expression to an MBean or a qualified attribute expression to an MBean of the wrong class.</source>
          <target state="translated">以下のいずれかを適用しようとした場合にスローされます。MBean に対するサブクエリ式、または間違ったクラスの MBean に対する修飾属性式のいずれかを適用しようとした場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="e2f5ccd6d74e1e11b46464103f4bd32cb8d0e745" translate="yes" xml:space="preserve">
          <source>Thrown when an attempt is made to apply either of the following: A subquery expression to an MBean or a qualified attribute expression to an MBean of the wrong class. This exception is used internally by JMX during the evaluation of a query. User code does not usually see it.</source>
          <target state="translated">以下のいずれかを適用しようとした場合にスローされます。MBean に対するサブクエリ式、または間違ったクラスの MBean に対する修飾属性式のいずれかを適用しようとしたときにスローされます。この例外は、クエリの評価中に JMX が内部的に使用します。通常、ユーザ・コードはこの例外を見ることはありません。</target>
        </trans-unit>
        <trans-unit id="5d8f8ddb11e46f4a61f57676c0712e4c59869f15" translate="yes" xml:space="preserve">
          <source>Thrown when an exception happens during Introspection.</source>
          <target state="translated">Introspection中に例外が発生した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="c64a77e6ad686df0a89b49b76151c687561da5c2" translate="yes" xml:space="preserve">
          <source>Thrown when an exception is raised in the JavaScript engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6af00d83e1ccb0edabe1ee4e9fd7e70d74e8770" translate="yes" xml:space="preserve">
          <source>Thrown when an exception is raised in the JavaScript engine. This is merely a marker class to indicate an exception relating to the JavaScript interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf4b1fcd2c1835e34a0b539588da56420cfbfe4" translate="yes" xml:space="preserve">
          <source>Thrown when an exceptional arithmetic condition has occurred.</source>
          <target state="translated">例外的な演算条件が発生した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="a9bb4ab12ab75f88250315d9db590482589a471c" translate="yes" xml:space="preserve">
          <source>Thrown when an exceptional arithmetic condition has occurred. For example, an integer &quot;divide by zero&quot; throws an instance of this class. &lt;code&gt;ArithmeticException&lt;/code&gt; objects may be constructed by the virtual machine as if &lt;a href=&quot;throwable#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;suppression were disabled and/or the stack trace was not writable&lt;/a&gt;.</source>
          <target state="translated">例外的な算術条件が発生したときにスローされます。たとえば、整数の「ゼロ除算」は、このクラスのインスタンスをスローします。 &lt;code&gt;ArithmeticException&lt;/code&gt; オブジェクトは、&lt;a href=&quot;throwable#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;抑制が無効になっているか、スタックトレースが書き込み可能でなかったかの&lt;/a&gt;ように、仮想マシンによって構築される場合があります。</target>
        </trans-unit>
        <trans-unit id="5e4095093e5e2e1f08f1094f0cb7cdc298b4807f" translate="yes" xml:space="preserve">
          <source>Thrown when an exceptional arithmetic condition has occurred. For example, an integer &quot;divide by zero&quot; throws an instance of this class. &lt;code&gt;ArithmeticException&lt;/code&gt; objects may be constructed by the virtual machine as if &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;suppression were disabled and/or the stack trace was not writable&lt;/a&gt;.</source>
          <target state="translated">例外的な算術条件が発生したときにスローされます。たとえば、整数「ゼロで除算」は、このクラスのインスタンスをスローします。 &lt;code&gt;ArithmeticException&lt;/code&gt; オブジェクトは、仮想マシンによって&lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;抑制が無効にされているか、スタックトレースが書き込み不可である&lt;/a&gt;かのように構築される場合があります。</target>
        </trans-unit>
        <trans-unit id="e4c3b51563fba6681b56fff23ad6e3f7caa032a5" translate="yes" xml:space="preserve">
          <source>Thrown when an incompatible class change has occurred to some class definition.</source>
          <target state="translated">互換性のないクラス変更がいくつかのクラス定義で発生した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="d03dbcc1ff09820ec670644adf9fb836fd881505" translate="yes" xml:space="preserve">
          <source>Thrown when an incompatible class change has occurred to some class definition. The definition of some class, on which the currently executing method depends, has since changed.</source>
          <target state="translated">互換性のないクラスの変更がいくつかのクラス定義で発生した場合にスローされます。現在実行中のメソッドが依存しているクラスの定義が変更されました。</target>
        </trans-unit>
        <trans-unit id="859c313b24fee600258c58da585f738aa69eefda" translate="yes" xml:space="preserve">
          <source>Thrown when an instance is required to have a Serializable interface.</source>
          <target state="translated">インスタンスにシリアライズ可能なインターフェイスが必要な場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="8212e9b4f24451f5d6042e552f5a1924bf917b44" translate="yes" xml:space="preserve">
          <source>Thrown when an instance is required to have a Serializable interface. The serialization runtime or the class of the instance can throw this exception. The argument should be the name of the class.</source>
          <target state="translated">インスタンスがシリアライズ可能なインターフェイスを持つ必要がある場合にスローされます。シリアライズランタイムまたはインスタンスのクラスは、この例外をスローすることができます。引数にはクラス名を指定します。</target>
        </trans-unit>
        <trans-unit id="68caee0d2483ccee0c8bedc33ef0d8c32c01186f" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid MBean attribute is passed to a query constructing method.</source>
          <target state="translated">無効なMBean属性がクエリ構築メソッドに渡された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="5b4924793bd0e16d66f4de3676bc5bc92d8b866d" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid MBean attribute is passed to a query constructing method. This exception is used internally by JMX during the evaluation of a query. User code does not usually see it.</source>
          <target state="translated">無効なMBean属性がクエリ構築メソッドに渡された場合にスローされます。この例外は、クエリの評価中にJMXが内部的に使用します。通常、ユーザ・コードはこの例外を見ることはありません。</target>
        </trans-unit>
        <trans-unit id="65027c2cbefb9a86f7e5896157d0a564dc68c8a2" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid expression is passed to a method for constructing a query.</source>
          <target state="translated">クエリを構築するためのメソッドに無効な式が渡された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="612fd061d4632211a9f42160d42efe19a4953464" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid expression is passed to a method for constructing a query. This exception is used internally by JMX during the evaluation of a query. User code does not usually see it.</source>
          <target state="translated">クエリを構築するためのメソッドに無効な式が渡された場合にスローされます。この例外は、クエリの評価中にJMXが内部的に使用します。ユーザコードでは通常見られません。</target>
        </trans-unit>
        <trans-unit id="d5156c265aa48ef9e6123c4e2b94e041b51d8612" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid string operation is passed to a method for constructing a query.</source>
          <target state="translated">無効な文字列操作がクエリを構築するためのメソッドに渡された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="1a721eac456b7c9447845cc8c07c5d51ce86fd74" translate="yes" xml:space="preserve">
          <source>Thrown when an unknown but serious exception has occurred in the Java Virtual Machine.</source>
          <target state="translated">Java 仮想マシンで不明だが重大な例外が発生した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="a14a40e60ef7d4bb5ace0b7a526297fb2ebdee8e" translate="yes" xml:space="preserve">
          <source>Thrown when code that is dependent on a keyboard, display, or mouse is called in an environment that does not support a keyboard, display, or mouse.</source>
          <target state="translated">キーボード、ディスプレイ、マウスに依存するコードが、キーボード、ディスプレイ、マウスをサポートしていない環境で呼び出された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="25db40a8d175cc35f11aff538e81340fae831424" translate="yes" xml:space="preserve">
          <source>Thrown when code that is dependent on a keyboard, display, or mouse is called in an environment that does not support a keyboard, display, or mouse. Any code that depends on any of those devices should firstly ensure their availability using the &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; method and throw &lt;code&gt;HeadlessException&lt;/code&gt; if the latter returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">キーボード、ディスプレイ、またはマウスをサポートしていない環境で、キーボード、ディスプレイ、またはマウスに依存するコードが呼び出されたときにスローされます。これらのデバイスのいずれかに依存するコードは、最初に &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; メソッドを使用してそれらの可用性を確認し、後者が &lt;code&gt;true&lt;/code&gt; を返す場合は &lt;code&gt;HeadlessException&lt;/code&gt; をスローする必要があります。</target>
        </trans-unit>
        <trans-unit id="99f0535770ad610db510a22dd91b17d0ecb07058" translate="yes" xml:space="preserve">
          <source>Thrown when control information that was read from an object stream violates internal consistency checks.</source>
          <target state="translated">オブジェクトストリームから読み込まれた制御情報が内部一貫性チェックに違反した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="10a32691a8fe8b29ae84b519d5eecc4ef5977d3a" translate="yes" xml:space="preserve">
          <source>Thrown when creating a &lt;a href=&quot;modulelayer&quot;&gt;module layer&lt;/a&gt; fails.</source>
          <target state="translated">&lt;a href=&quot;modulelayer&quot;&gt;モジュールレイヤーの&lt;/a&gt;作成が失敗したときにスローされます。</target>
        </trans-unit>
        <trans-unit id="99ebcfaf6131629d5267e51aab4164218dddbe86" translate="yes" xml:space="preserve">
          <source>Thrown when reading a module descriptor and the module descriptor is found to be malformed or otherwise cannot be interpreted as a module descriptor.</source>
          <target state="translated">モジュール記述子を読み込んだ際に、モジュール記述子が不正な形をしていることが判明した場合や、モジュール記述子として解釈できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="bf20b9e4ffc2c2b1f8881fb05d4f62d7e499651b" translate="yes" xml:space="preserve">
          <source>Thrown when resolving a set of modules, or resolving a set of modules with service binding, fails.</source>
          <target state="translated">モジュールのセットの解決、またはサービスバインディングを持つモジュールのセットの解決に失敗した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="a6d94c66beac535279aeecb37d1880f959ac08af" translate="yes" xml:space="preserve">
          <source>Thrown when serialization or deserialization is not active.</source>
          <target state="translated">シリアライズまたはデシリアライズがアクティブでない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="5d46bdd3f1bde41e39251582589cfaad576ea3a9" translate="yes" xml:space="preserve">
          <source>Thrown when the &quot;verifier&quot; detects that a class file, though well formed, contains some sort of internal inconsistency or security problem.</source>
          <target state="translated">検証者 &quot;が、クラスファイルがうまく形成されているにもかかわらず、何らかの内部矛盾やセキュリティ上の問題を含んでいることを検出した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="e008bbf65d9a350656cb038f08e70432f6f069f3" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine attempts to read a class file and determines that the file is malformed or otherwise cannot be interpreted as a class file.</source>
          <target state="translated">Java 仮想マシンがクラス・ファイルを読み込もうとしたときに、ファイルが不正な形式であるか、そうでなければクラス・ファイルとして解釈できないと判断された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="8dc1214c2d99c634bec6c595d0849d6c2fe5591c" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine attempts to read a class file and determines that the major and minor version numbers in the file are not supported.</source>
          <target state="translated">Java 仮想マシンがクラス・ファイルを読み込もうとしたときに、ファイル内のメジャー・バージョン番号とマイナー・バージョン番号がサポートされていないと判断された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="225d524010f1bd6efec2c88237f9c71cbb8350e3" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine cannot allocate an object because it is out of memory, and no more memory could be made available by the garbage collector.</source>
          <target state="translated">Java 仮想マシンがメモリ不足のためにオブジェクトを割り当てることができず、ガベージコレクタがこれ以上のメモリを利用できなかった場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="9bb8f05d665e17abfa0a50b22f1a9f2c8b5e6512" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine cannot allocate an object because it is out of memory, and no more memory could be made available by the garbage collector. &lt;code&gt;OutOfMemoryError&lt;/code&gt; objects may be constructed by the virtual machine as if &lt;a href=&quot;throwable#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;suppression were disabled and/or the stack trace was not writable&lt;/a&gt;.</source>
          <target state="translated">オブジェクトがメモリ不足であるためにJava仮想マシンがオブジェクトを割り当てることができず、ガベージコレクタがそれ以上メモリを使用できない場合にスローされます。 &lt;code&gt;OutOfMemoryError&lt;/code&gt; オブジェクトは、&lt;a href=&quot;throwable#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;抑制が無効になっているか、スタックトレースが書き込み可能でなかったかの&lt;/a&gt;ように、仮想マシンによって構築される場合があります。</target>
        </trans-unit>
        <trans-unit id="cc64fdd683025546acfff552400f086c70aac922" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine cannot allocate an object because it is out of memory, and no more memory could be made available by the garbage collector. &lt;code&gt;OutOfMemoryError&lt;/code&gt; objects may be constructed by the virtual machine as if &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;suppression were disabled and/or the stack trace was not writable&lt;/a&gt;.</source>
          <target state="translated">メモリ不足のためにJava仮想マシンがオブジェクトを割り当てることができず、ガベージコレクタがそれ以上メモリを使用できなくなった場合にスローされます。 &lt;code&gt;OutOfMemoryError&lt;/code&gt; オブジェクトは、仮想マシンによって&lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;抑制が無効になっているか、スタックトレースが書き込み不可である&lt;/a&gt;かのように構築される場合があります。</target>
        </trans-unit>
        <trans-unit id="031c30cc5094ce5c4a0da5e119a594f2fec0e626" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine detects a circularity in the superclass hierarchy of a class being loaded.</source>
          <target state="translated">Java Virtual Machine が、ロード中のクラスのスーパークラス階層に循環性があることを検出したときにスローされます。</target>
        </trans-unit>
        <trans-unit id="212e011343d58000abfbc7c33228a1c8770b4591" translate="yes" xml:space="preserve">
          <source>Thrown when the Serialization runtime detects one of the following problems with a Class.</source>
          <target state="translated">Serialization ランタイムがクラスの以下の問題のいずれかを検出したときにスローされます。</target>
        </trans-unit>
        <trans-unit id="268d43717775e9a46e419decbb0b34f324b2fc13" translate="yes" xml:space="preserve">
          <source>Thrown when the annotation parser attempts to read an annotation from a class file and determines that the annotation is malformed.</source>
          <target state="translated">アノテーション・パーサーがクラス・ファイルからアノテーションを読み込もうとした際に、アノテーションが不正な形式であると判断した場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="c2d93b2e90840d752626ad4f57ce3e02d72ee34d" translate="yes" xml:space="preserve">
          <source>Thrown when the annotation parser attempts to read an annotation from a class file and determines that the annotation is malformed. This error can be thrown by the &lt;a href=&quot;../reflect/annotatedelement&quot;&gt;API used to read annotations reflectively&lt;/a&gt;.</source>
          <target state="translated">注釈パーサーがクラスファイルから注釈を読み取ろうとして、注釈の形式が正しくないと判断した場合にスローされます。このエラーは、&lt;a href=&quot;../reflect/annotatedelement&quot;&gt;注釈を反射的に読み取るために使用されるAPI&lt;/a&gt;によってスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="dd4f259c02812b99fbe9dbe5ae49cd400c3a3c49" translate="yes" xml:space="preserve">
          <source>Thrown when the opening handshake has failed.</source>
          <target state="translated">オープニングの握手に失敗したときに投げられる。</target>
        </trans-unit>
        <trans-unit id="c6589574e8059517df6273b7c1514557652f47ad" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;</source>
          <target state="translated">例外&lt;a href=&quot;../../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;はUnsupportedOperationExceptionは&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc7e5f5a07e99c66c5fe5b4b682ce8c11ab4f35b" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">例外&lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f7cc30911f6bc18ccf83a3d8c0de18fcd8f93d5" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../clonenotsupportedexception&quot;&gt;&lt;code&gt;CloneNotSupportedException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">例外&lt;a href=&quot;../clonenotsupportedexception&quot;&gt; &lt;code&gt;CloneNotSupportedException&lt;/code&gt; が&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="429c4123a0cc6f16fc81f54e7a3b4a289f835ca3" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../clonenotsupportedexception&quot;&gt;&lt;code&gt;CloneNotSupportedException&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;Reference&lt;/code&gt; cannot be meaningfully cloned. Construct a new &lt;code&gt;Reference&lt;/code&gt; instead.</source>
          <target state="translated">例外&lt;a href=&quot;../clonenotsupportedexception&quot;&gt; &lt;code&gt;CloneNotSupportedException&lt;/code&gt; が&lt;/a&gt;。A &lt;code&gt;Reference&lt;/code&gt; 有意義にクローニングすることができません。代わりに、新しい &lt;code&gt;Reference&lt;/code&gt; を作成してください。</target>
        </trans-unit>
        <trans-unit id="37fd660c53c5155458a03c531cf971e59cbb246d" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; because &lt;code&gt;&quot;de-*-DE&quot;&lt;/code&gt; is not a valid basic language range.</source>
          <target state="translated">例外&lt;a href=&quot;../lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; が&lt;/a&gt;あるため &lt;code&gt;&quot;de-*-DE&quot;&lt;/code&gt; 有効な基本的な言語の範囲ではありません。</target>
        </trans-unit>
        <trans-unit id="b6bcd658de7adf03be526b1f4c13b4043b6de281" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;nosuchmethoderror&quot;&gt;&lt;code&gt;NoSuchMethodError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">例外&lt;a href=&quot;nosuchmethoderror&quot;&gt; &lt;code&gt;NoSuchMethodError&lt;/code&gt; が&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="47a244c730ca2429da9b0cbcb0f69a2f7cc754b8" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;CannotRedoException&lt;/code&gt; if &lt;code&gt;canRedo&lt;/code&gt; returns false.</source>
          <target state="translated">例外 &lt;code&gt;CannotRedoException&lt;/code&gt; 場合 &lt;code&gt;canRedo&lt;/code&gt; がfalseを返します。</target>
        </trans-unit>
        <trans-unit id="678411bd7a7bd98e55c8df57bb4e6f1115938ea9" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;CannotRedoException&lt;/code&gt; if &lt;code&gt;canRedo&lt;/code&gt; returns false. Sets &lt;code&gt;hasBeenDone&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. Subclasses should override to redo the operation represented by this edit. Override should begin with a call to super.</source>
          <target state="translated">例外 &lt;code&gt;CannotRedoException&lt;/code&gt; 場合 &lt;code&gt;canRedo&lt;/code&gt; がfalseを返します。 &lt;code&gt;hasBeenDone&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定します。この編集で表される操作をやり直すには、サブクラスをオーバーライドする必要があります。オーバーライドは、superの呼び出しで開始する必要があります。</target>
        </trans-unit>
        <trans-unit id="3790f33e502d2f90b642c2efac55dd5898b137df" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;CannotUndoException&lt;/code&gt; if &lt;code&gt;canUndo&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">例外 &lt;code&gt;CannotUndoException&lt;/code&gt; 場合 &lt;code&gt;canUndo&lt;/code&gt; が返されます &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fff7793826f72d71730a8ab6f9c30caeba72e7b2" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;CannotUndoException&lt;/code&gt; if &lt;code&gt;canUndo&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. Sets &lt;code&gt;hasBeenDone&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. Subclasses should override to undo the operation represented by this edit. Override should begin with a call to super.</source>
          <target state="translated">例外 &lt;code&gt;CannotUndoException&lt;/code&gt; 場合 &lt;code&gt;canUndo&lt;/code&gt; が返されます &lt;code&gt;false&lt;/code&gt; 。 &lt;code&gt;hasBeenDone&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定します。この編集で表される操作を元に戻すには、サブクラスをオーバーライドする必要があります。オーバーライドは、superの呼び出しで開始する必要があります。</target>
        </trans-unit>
        <trans-unit id="f4eb1b7e95ca67674015b9400cf0bd76a61969be" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt; because &lt;code&gt;ReadLocks&lt;/code&gt; do not support conditions.</source>
          <target state="translated">例外 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; があるため &lt;code&gt;ReadLocks&lt;/code&gt; が条件に対応していません。</target>
        </trans-unit>
        <trans-unit id="866a4b95987c85cee1e61367384eb97fddc2254b" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">例外 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71463ab935ff7965f4bb58554d2f740ad341d01d" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. Setting seeds in this generator is not supported.</source>
          <target state="translated">例外 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。このジェネレーターでのシードの設定はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="6bd07e55edb2f5f0a06b2b16c924ab0ed07d91cf" translate="yes" xml:space="preserve">
          <source>Throws CatalogException if there is no match.</source>
          <target state="translated">一致するものがない場合は、CatalogException をスローします。</target>
        </trans-unit>
        <trans-unit id="05e2c5607fdd5eb923bca4220eeb994a9887f667" translate="yes" xml:space="preserve">
          <source>Throws CloneNotSupportedException as a Thread can not be meaningfully cloned.</source>
          <target state="translated">スレッドが意味のあるクローンを作成できないので、CloneNotSupportedExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="78c5180f23af8ef04642e893263bb662bb2d9ce1" translate="yes" xml:space="preserve">
          <source>Throws CloneNotSupportedException as a Thread can not be meaningfully cloned. Construct a new Thread instead.</source>
          <target state="translated">スレッドを意味のある形でクローン化できないので CloneNotSupportedException をスローします。代わりに新しいスレッドを作成します。</target>
        </trans-unit>
        <trans-unit id="586a2bda3b8f60777f049d843c966a5984b6bee6" translate="yes" xml:space="preserve">
          <source>Throws CloneNotSupportedException.</source>
          <target state="translated">Throws CloneNotSupportedException.</target>
        </trans-unit>
        <trans-unit id="d7906d41002453e852ec1ee359aac34142c9c10e" translate="yes" xml:space="preserve">
          <source>Throws CloneNotSupportedException. This guarantees that enums are never cloned, which is necessary to preserve their &quot;singleton&quot; status.</source>
          <target state="translated">CloneNotSupportedException をスローします。これは、列挙型が決してクローンされないことを保証します。</target>
        </trans-unit>
        <trans-unit id="ef933213f30747ab820a8ac6fc361588a2855817" translate="yes" xml:space="preserve">
          <source>Throws SocketException if the option is unrecognized, the socket is closed, or some low-level error occurred</source>
          <target state="translated">オプションが認識されていない場合、ソケットが閉じられている場合、または低レベルのエラーが発生した場合に SocketException をスローする。</target>
        </trans-unit>
        <trans-unit id="be311179773fef72b8e322098317b5607696664e" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access members.</source>
          <target state="translated">呼び出しスレッドがメンバーへのアクセスを許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="b0a483d1a1cce3c98637f041f03044671cbe2e89" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access or modify the system properties.</source>
          <target state="translated">呼び出し元のスレッドがシステムプロパティへのアクセスまたは変更を許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="74f7c6fbaf9a2607bc25a6acc5fa0c8f060a9989" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the AWT event queue.</source>
          <target state="translated">呼び出し元のスレッドがAWTイベントキューへのアクセスを許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="58a41bc1c166f380713d9ba97b29c985e0e4a579" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the package specified by the argument.</source>
          <target state="translated">呼び出しスレッドが引数で指定されたパッケージへのアクセスを許可されていない場合は、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="e0002bb078911e2b80574cebba133bac4b5326a6" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the specified package.</source>
          <target state="translated">呼び出し元のスレッドが指定されたパッケージへのアクセスを許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="f496850217aa0260833640ec37d1833905978aad" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the system clipboard.</source>
          <target state="translated">呼び出し側スレッドがシステムクリップボードへのアクセスを許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="ee651fa0fe2ac3ba0abb353dbe90d4880e5f272d" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the system property with the specified &lt;code&gt;key&lt;/code&gt; name.</source>
          <target state="translated">指定された &lt;code&gt;key&lt;/code&gt; 名でシステムプロパティへのアクセスが呼び出し側スレッドに許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="8e0f42f7ce4bc6efbaa975a76c42159794ec73ff" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to cause the Java Virtual Machine to halt with the specified status code.</source>
          <target state="translated">指定されたステータスコードでJava仮想マシンを停止させる呼び出しスレッドが許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="1f1ea61f78b2cd6b2339492e62dcd23635cf3fd1" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to create a new class loader.</source>
          <target state="translated">呼び出しスレッドが新しいクラスローダーの作成を許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="8a6dbdd3781f34d5c9960948cde79f67a33094d0" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to create a subprocess.</source>
          <target state="translated">呼び出しスレッドがサブプロセスの作成を許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="94f119cb4bb17d984742723135c67fd80d9a5479" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to define classes in the package specified by the argument.</source>
          <target state="translated">呼び出しスレッドが引数で指定されたパッケージ内のクラスを定義することを許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="881e352a7390cf2597612b7b60df1167a12a6216" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to define classes in the specified package.</source>
          <target state="translated">呼び出し元のスレッドが指定されたパッケージ内のクラスを定義することを許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="93928659d55c05442babb348bde7f9097f9e3bb9" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to delete the specified file.</source>
          <target state="translated">指定したファイルの削除が呼び出し側スレッドに許可されていない場合は、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="f113bc6b4e60e02159410376302a1c656658a90f" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to dynamic link the library code specified by the string argument file.</source>
          <target state="translated">呼び出し元のスレッドが文字列引数ファイルで指定されたライブラリコードを動的にリンクすることを許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="a44b9f9df6244dd1cedb020ade27ffd9d377ac2f" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to dynamic link the library code specified by the string argument file. The argument is either a simple library name or a complete filename.</source>
          <target state="translated">文字列引数ファイルで指定されたライブラリコードを動的にリンクすることが呼び出し側スレッドに許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。引数は、単純なライブラリ名または完全なファイル名です。</target>
        </trans-unit>
        <trans-unit id="18eb7ec4e7cf6dd8f0810f8fbd3de11dda2ab520" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to initiate a print job request.</source>
          <target state="translated">呼び出しスレッドが印刷ジョブ要求の開始を許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="a5f1abf24c7ec33534c68edc39f44985b7130de5" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to modify the thread argument.</source>
          <target state="translated">呼び出し元のスレッドがスレッド引数の変更を許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="9c82afd4e3102f2b30f0f490f95269fcefb1ea11" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to modify the thread group argument.</source>
          <target state="translated">呼び出し元のスレッドがスレッドグループ引数の変更を許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="9348c9c27c4d0b27be635ebd4243b5159774bd3c" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to open a socket connection to the specified host and port number.</source>
          <target state="translated">指定されたホストとポート番号へのソケット接続を呼び出すスレッドが許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="bd511dcc00428d20e199d504e5a62cf049f420e6" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to read from the specified file descriptor.</source>
          <target state="translated">指定されたファイル記述子からの読み取りが呼び出し側スレッドに許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="613665d6a7892ee299b4b9a41dd7850681647520" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to read the file specified by the string argument.</source>
          <target state="translated">文字列引数で指定されたファイルの読み取りが呼び出し側スレッドに許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="04b4f2564e11bd9010431ad73cb7dbcb64671417" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to set the socket factory used by &lt;code&gt;ServerSocket&lt;/code&gt; or &lt;code&gt;Socket&lt;/code&gt;, or the stream handler factory used by &lt;code&gt;URL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ServerSocket&lt;/code&gt; または &lt;code&gt;Socket&lt;/code&gt; によって使用されるソケットファクトリ、または &lt;code&gt;URL&lt;/code&gt; によって使用されるストリームハンドラファクトリの設定が呼び出し側スレッドに許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="a992423182e7fd2f0c68a6e3399d48fb61a2c4ea" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to use (join/leave/send/receive) IP multicast.</source>
          <target state="translated">呼び出し元のスレッドがIPマルチキャストの使用（参加/脱退/送信/受信）を許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="42179baf69e295d476e665b60f38e3b57c0d823e" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to wait for a connection request on the specified local port number.</source>
          <target state="translated">指定されたローカルポート番号で接続要求を待機することが呼び出し側スレッドに許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="c6c71db3bcf9f3e867fee15210966a56b5576646" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to write to the file specified by the string argument.</source>
          <target state="translated">文字列引数で指定されたファイルへの書き込みが呼び出し側スレッドに許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="33b59151923ebac69423a301ee1ca0d61eea1f8b" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to write to the specified file descriptor.</source>
          <target state="translated">指定されたファイル記述子への書き込みが呼び出し側スレッドに許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="fa607d3467b07e33aa5dbab627a8cb509730651e" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not permitted to accept a socket connection from the specified host and port number.</source>
          <target state="translated">指定されたホストとポート番号からのソケット接続を受け入れることが呼び出し側スレッドに許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="3911c97d748b3105f51a1c90495fee8541f38427" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the requested access, specified by the given permission, is not permitted based on the security policy currently in effect.</source>
          <target state="translated">指定されたアクセス権で指定された要求されたアクセスが、現在有効なセキュリティポリシーに基づいて許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="eba2327c676431952552ab77f84ca7655867ddd5" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is denied access to the resource specified by the given permission.</source>
          <target state="translated">指定されたセキュリティコンテキストが、指定された権限で指定されたリソースへのアクセスを拒否された場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="6d182175e27ba08a0b9e896a7124bd7728f59f68" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is denied access to the resource specified by the given permission. The context must be a security context returned by a previous call to &lt;code&gt;getSecurityContext&lt;/code&gt; and the access control decision is based upon the configured security policy for that security context.</source>
          <target state="translated">指定されたセキュリティコンテキストが、指定された権限で指定されたリソースへのアクセスを拒否された場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。コンテキストは、 &lt;code&gt;getSecurityContext&lt;/code&gt; への以前の呼び出しによって返されたセキュリティコンテキストである必要があり、アクセス制御の決定は、そのセキュリティコンテキストに構成されたセキュリティポリシーに基づいています。</target>
        </trans-unit>
        <trans-unit id="4f0a8e2aad645347a8283d1be96e9faf74fb172f" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is not allowed to open a socket connection to the specified host and port number.</source>
          <target state="translated">指定されたセキュリティコンテキストが、指定されたホストとポート番号へのソケット接続を開くことが許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="f41c19487968a975b17314af7d85473c24c704cf" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is not allowed to read the file specified by the string argument.</source>
          <target state="translated">指定されたセキュリティコンテキストが文字列引数で指定されたファイルの読み取りを許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="2fe7a014c93f4282d4cf240fe9f4785ceeb3567c" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is not allowed to read the file specified by the string argument. The context must be a security context returned by a previous call to &lt;code&gt;getSecurityContext&lt;/code&gt;.</source>
          <target state="translated">指定されたセキュリティコンテキストが文字列引数で指定されたファイルの読み取りを許可されていない場合、 &lt;code&gt;SecurityException&lt;/code&gt; をスローします。コンテキストは、 &lt;code&gt;getSecurityContext&lt;/code&gt; への以前の呼び出しによって返されたセキュリティコンテキストでなければなりません。</target>
        </trans-unit>
        <trans-unit id="08fc4c3667cf82918abc80f384e841bb901427fd" translate="yes" xml:space="preserve">
          <source>Throws an &lt;code&gt;IOException&lt;/code&gt; if the stream has been closed.</source>
          <target state="translated">ストリームが閉じられている場合、 &lt;code&gt;IOException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="304bfe57b073a4145ee415402af9e5b48a0f327f" translate="yes" xml:space="preserve">
          <source>Throws an &lt;code&gt;IOException&lt;/code&gt; if the stream has been closed. Subclasses may call this method from any of their methods that require the stream not to be closed.</source>
          <target state="translated">例外 &lt;code&gt;IOException&lt;/code&gt; がストリームが閉じられている場合。サブクラスは、ストリームを閉じないようにする必要があるメソッドからこのメソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="609bcdb27dcdc809a9bd509b8703d67998b69572" translate="yes" xml:space="preserve">
          <source>Throws an AWTError, since a Box can use only a BoxLayout.</source>
          <target state="translated">BoxはBoxLayoutしか使えないため、AWTErrorをスローします。</target>
        </trans-unit>
        <trans-unit id="4f451515ac1645688e90d030ff9b7ee8761a8ad3" translate="yes" xml:space="preserve">
          <source>Throws an exception appropriate to the result described by this object.</source>
          <target state="translated">このオブジェクトで記述された結果に応じた例外をスローします。</target>
        </trans-unit>
        <trans-unit id="e05991524e70c9e9c8187b002469b800e945b108" translate="yes" xml:space="preserve">
          <source>Throws exception</source>
          <target state="translated">例外をスローします。</target>
        </trans-unit>
        <trans-unit id="9c1b3e348c5e658c9f04296e21ad3e2315006119" translate="yes" xml:space="preserve">
          <source>Throws:</source>
          <target state="translated">Throws:</target>
        </trans-unit>
        <trans-unit id="3ecbfa1c53472673918cef852b6648cecd3ea06a" translate="yes" xml:space="preserve">
          <source>ThrowsTree</source>
          <target state="translated">ThrowsTree</target>
        </trans-unit>
        <trans-unit id="a30856303a88309d99f53e90a911f2241ad88676" translate="yes" xml:space="preserve">
          <source>Ths default is &quot;sticky&quot;, being a part of the static state of all URLConnections. This flag applies to the next, and all following URLConnections that are created.</source>
          <target state="translated">デフォルトは &quot;sticky &quot;で、すべての URLConnections の静的状態の一部となります。このフラグは、作成された次の URLConnections とそれに続くすべての URLConnections に適用されます。</target>
        </trans-unit>
        <trans-unit id="5637b858eb0b17bd5112c0aee97f263d368b4dd9" translate="yes" xml:space="preserve">
          <source>Thumb color</source>
          <target state="translated">親指の色</target>
        </trans-unit>
        <trans-unit id="805b9e010fa1abe503c1b09648cad64a3c037b98" translate="yes" xml:space="preserve">
          <source>Thumb dark shadow color</source>
          <target state="translated">親指ダークシャドウカラー</target>
        </trans-unit>
        <trans-unit id="fba611dd71adc1ff044e39366915000d1e76b2f7" translate="yes" xml:space="preserve">
          <source>Thumb highlight color</source>
          <target state="translated">親指のハイライトカラー</target>
        </trans-unit>
        <trans-unit id="77dbaec2c57d69e7ef56cf8cde6575a9c2bf55a3" translate="yes" xml:space="preserve">
          <source>Thumb light shadow color</source>
          <target state="translated">親指ライトシャドウカラー</target>
        </trans-unit>
        <trans-unit id="f1d2e4e187f8fbaf4ec2112c91df35d27eaa8f08" translate="yes" xml:space="preserve">
          <source>Thumb of the ScrollBar.</source>
          <target state="translated">スクロールバーの親指。</target>
        </trans-unit>
        <trans-unit id="fc844e823ec4889ad648b13d48433f663f74844d" translate="yes" xml:space="preserve">
          <source>Thumb of the ScrollBar. The thumb is the region of the ScrollBar that gives a graphical depiction of what percentage of the View is currently visible. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ScrollBarThumb&lt;/code&gt;.</source>
          <target state="translated">ScrollBarの親指。つまみは、現在表示されているビューの割合をグラフィカルに表現するScrollBarの領域です。スタイルをこの &lt;code&gt;Region&lt;/code&gt; バインドするには、 &lt;code&gt;ScrollBarThumb&lt;/code&gt; という名前を使用します。</target>
        </trans-unit>
        <trans-unit id="1de6ffdc504e5df5941eb577d236d9daa60e2bb5" translate="yes" xml:space="preserve">
          <source>Thumb of the Slider.</source>
          <target state="translated">スライダーの親指。</target>
        </trans-unit>
        <trans-unit id="ed33cf3c2ea8dac658c7db1ce37c52d9b0257521" translate="yes" xml:space="preserve">
          <source>Thumb of the Slider. The thumb of the Slider identifies the current value. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;SliderThumb&lt;/code&gt;.</source>
          <target state="translated">スライダーの親指。スライダーの親指が現在の値を識別します。スタイルをこの &lt;code&gt;Region&lt;/code&gt; バインドするには、 &lt;code&gt;SliderThumb&lt;/code&gt; という名前を使用します。</target>
        </trans-unit>
        <trans-unit id="b5b9d3c9cd3ceb2320a9d20c152aef3f0b66a967" translate="yes" xml:space="preserve">
          <source>Thumb rectangle</source>
          <target state="translated">親指の長方形</target>
        </trans-unit>
        <trans-unit id="7050380a0757ca93c6160fb310b67b6ebbd5740d" translate="yes" xml:space="preserve">
          <source>Thumbnails will be returned in their entirety regardless of the region settings.</source>
          <target state="translated">サムネイルは、リージョンの設定に関係なく、全体が返却されます。</target>
        </trans-unit>
        <trans-unit id="76031ddf92450ba52c1e3945097079807a9065c2" translate="yes" xml:space="preserve">
          <source>Thursday</source>
          <target state="translated">Thursday</target>
        </trans-unit>
        <trans-unit id="3d04b20ba0bec439ae9bc45463e71ca3adffc239" translate="yes" xml:space="preserve">
          <source>Thus &quot;FooBah&quot; becomes &quot;fooBah&quot; and &quot;X&quot; becomes &quot;x&quot;, but &quot;URL&quot; stays as &quot;URL&quot;.</source>
          <target state="translated">このように、&quot;FooBah &quot;は &quot;fooBah &quot;になり、&quot;X &quot;は &quot;x &quot;になりますが、&quot;URL &quot;は &quot;URL &quot;のままです。</target>
        </trans-unit>
        <trans-unit id="1406418bbdae0badf2726e6c650822f58e9a9bc5" translate="yes" xml:space="preserve">
          <source>Thus any implementation of ModelMBeanInfo should always add those two notifications in addition to those specified by the application.</source>
          <target state="translated">したがって、ModelMBeanInfoの実装は、アプリケーションによって指定された通知に加えて、常にこれら2つの通知を追加しなければなりません。</target>
        </trans-unit>
        <trans-unit id="8ecb3e422cd1d28153f56d873a84dcc58af876d1" translate="yes" xml:space="preserve">
          <source>Thus for a class such as &quot;sun.xyz.OurButton&quot; we would first look for a BeanInfo class called &quot;sun.xyz.OurButtonBeanInfo&quot; and if that failed we'd look in each package in the BeanInfo search path for an OurButtonBeanInfo class. With the default search path, this would mean looking for &quot;sun.beans.infos.OurButtonBeanInfo&quot;.</source>
          <target state="translated">したがって、&quot;sun.xyz.OurButton&quot; のようなクラスの場合、まず &quot;sun.xyz.OurButtonBeanInfo&quot; という BeanInfo クラスを探し、それが失敗した場合は、BeanInfo 検索パスの各パッケージから OurButtonBeanInfo クラスを探します。デフォルトの検索パスでは、&quot;sun.beans.infos.OurButtonBeanInfo&quot; を探すことになります。</target>
        </trans-unit>
        <trans-unit id="39eb837b9fc8b3cfe8f618eade937385de94fe08" translate="yes" xml:space="preserve">
          <source>Thus for example a pattern of &quot;%t/java%g.log&quot; with a count of 2 would typically cause log files to be written on Solaris to /var/tmp/java0.log and /var/tmp/java1.log whereas on Windows 95 they would be typically written to C:\TEMP\java0.log and C:\TEMP\java1.log</source>
          <target state="translated">したがって、例えば、カウントが 2 の &quot;%t/java%g.log&quot; のパターンは、通常、ログファイルが Solaris 上では /var/tmp/java0.log と /var/tmp/java1.log に書き込まれるのに対し、Windows 95 上では、通常、C:\TEMP_java0.log と C:\TEMP_java1.log に書き込まれることになります。</target>
        </trans-unit>
        <trans-unit id="c9bec96d1db6450dc1a885bd7b05bf79842923ad" translate="yes" xml:space="preserve">
          <source>Thus if the argument name is &quot;fred&quot;, it will assume that there is an indexed reader method &quot;getFred&quot;, a non-indexed (array) reader method also called &quot;getFred&quot;, an indexed writer method &quot;setFred&quot;, and finally a non-indexed writer method &quot;setFred&quot;.</source>
          <target state="translated">したがって、引数名が &quot;fred &quot;であれば、インデックス付きのリーダメソッド &quot;getFred&quot;、同じく &quot;getFred &quot;と呼ばれるインデックスなし(配列)のリーダメソッド &quot;setFred&quot;、インデックス付きのライタメソッド &quot;setFred&quot;、そして最後にインデックスなしのライタメソッド &quot;setFred &quot;が存在すると仮定します。</target>
        </trans-unit>
        <trans-unit id="9c0eef772246048b29012102df64202a5a3b0e9f" translate="yes" xml:space="preserve">
          <source>Thus if three processes were all trying to log to fred%u.%g.txt then they might end up using fred0.0.txt, fred1.0.txt, fred2.0.txt as the first file in their rotating sequences.</source>
          <target state="translated">したがって、3 つのプロセスがすべて fred%u.%g.txt にログを記録しようとしていた場合、それらのプロセスは fred0.0.txt,fred1.0.txt,fred2.0.txt を回転シーケンスの最初のファイルとして使用することになるかもしれません。</target>
        </trans-unit>
        <trans-unit id="b30bef851397fcfa834b5d84559d2fc29425fcce" translate="yes" xml:space="preserve">
          <source>Thus these two notifications are always added to those specified by the application.</source>
          <target state="translated">このように、これら2つの通知は常にアプリケーションによって指定された通知に追加されます。</target>
        </trans-unit>
        <trans-unit id="175a69d195bb39a6e49e26db6468a1cc4c4f0c15" translate="yes" xml:space="preserve">
          <source>Thus, a method type mismatch which might show up as a linkage error in a statically typed program can show up as a dynamic &lt;code&gt;WrongMethodTypeException&lt;/code&gt; in a program which uses method handles.</source>
          <target state="translated">したがって、静的に型付けされたプログラムでリンクエラーとして表示される可能性のあるメソッドタイプの不一致は、メソッドハンドルを使用するプログラムで動的な &lt;code&gt;WrongMethodTypeException&lt;/code&gt; として表示される可能性があります。</target>
        </trans-unit>
        <trans-unit id="e801b41bba098969fbeab29984849586fd477148" translate="yes" xml:space="preserve">
          <source>Thus, an access mode type mismatch which might show up as a linkage error in a statically typed program can show up as a dynamic &lt;code&gt;WrongMethodTypeException&lt;/code&gt; in a program which uses VarHandles.</source>
          <target state="translated">したがって、静的に型指定されたプログラムでリンケージエラーとして表示される可能性のあるアクセスモードタイプの不一致は、VarHandlesを使用するプログラムで動的な &lt;code&gt;WrongMethodTypeException&lt;/code&gt; として表示される可能性があります。</target>
        </trans-unit>
        <trans-unit id="72b7967722f4e5fa58e816e3be6b2e8e809e07b7" translate="yes" xml:space="preserve">
          <source>Thus, byte values between &lt;code&gt;0x00&lt;/code&gt; and &lt;code&gt;0x7f&lt;/code&gt; are simply returned as integer values between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;127&lt;/code&gt;. Values between &lt;code&gt;0x80&lt;/code&gt; and &lt;code&gt;0xff&lt;/code&gt;, which normally represent negative &lt;code&gt;byte&lt;/code&gt; values, will be mapped into positive integers between &lt;code&gt;128&lt;/code&gt; and &lt;code&gt;255&lt;/code&gt;.</source>
          <target state="translated">したがって、間のバイト値 &lt;code&gt;0x00&lt;/code&gt; と &lt;code&gt;0x7f&lt;/code&gt; のは単にの間の整数値として返される &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;127&lt;/code&gt; 。間の値 &lt;code&gt;0x80&lt;/code&gt; と &lt;code&gt;0xff&lt;/code&gt; 通常負表し、 &lt;code&gt;byte&lt;/code&gt; 値は、の間の正の整数にマッピングされる &lt;code&gt;128&lt;/code&gt; と &lt;code&gt;255&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b1c7f4c120a26932bbddcc1fc1d6486b24537a52" translate="yes" xml:space="preserve">
          <source>Thus, byte values between &lt;code&gt;0x00&lt;/code&gt; and &lt;code&gt;0x7f&lt;/code&gt; are simply returned as integer values between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;127&lt;/code&gt;. Values between &lt;code&gt;0x80&lt;/code&gt; and &lt;code&gt;0xff&lt;/code&gt;, which normally represent negative &lt;code&gt;byte&lt;/code&gt;values, will be mapped into positive integers between &lt;code&gt;128&lt;/code&gt; and &lt;code&gt;255&lt;/code&gt;.</source>
          <target state="translated">したがって、 &lt;code&gt;0x00&lt;/code&gt; と &lt;code&gt;0x7f&lt;/code&gt; の間のバイト値は、単に &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;127&lt;/code&gt; の間の整数値として返されます。間の値 &lt;code&gt;0x80&lt;/code&gt; と &lt;code&gt;0xff&lt;/code&gt; 通常負表し、 &lt;code&gt;byte&lt;/code&gt; 値は、の間の正の整数にマッピングされる &lt;code&gt;128&lt;/code&gt; と &lt;code&gt;255&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8d5d9388d642541526ec7a4d22824785e336cf7" translate="yes" xml:space="preserve">
          <source>Thus, for any given local date-time there can be zero, one or two valid offsets. This method returns that list of valid offsets, which is a list of size 0, 1 or 2. In the case where there are two offsets, the earlier offset is returned at index 0 and the later offset at index 1.</source>
          <target state="translated">このように、与えられたローカルの日付時刻に対して、有効なオフセットは0、1、2のいずれかになる可能性があります。このメソッドは、有効なオフセットのリストを返します。2つのオフセットがある場合、前のオフセットはインデックス0で返され、後のオフセットはインデックス1で返されます。</target>
        </trans-unit>
        <trans-unit id="ecac47baa2a0453ec61d9b7f00a6b3be988dfffb" translate="yes" xml:space="preserve">
          <source>Thus, for any given local date-time there can be zero, one or two valid offsets. This method returns the single offset in the Normal case, and in the Gap or Overlap case it returns the offset before the transition.</source>
          <target state="translated">したがって、与えられたローカルの日付時刻に対して、有効なオフセットはゼロ、1つまたは2つです。このメソッドは、通常の場合は単一のオフセットを返し、ギャップやオーバーラップの場合は遷移前のオフセットを返します。</target>
        </trans-unit>
        <trans-unit id="a05cc43cc27a279b762a0084bba5cae97c6ea3f3" translate="yes" xml:space="preserve">
          <source>Thus, handles to non-public methods, or to methods in non-public classes, should generally be kept secret. They should not be passed to untrusted code unless their use from the untrusted code would be harmless.</source>
          <target state="translated">したがって、非公開のメソッドや非公開クラスのメソッドへのハンドルは、一般的には秘密にしておくべきです。信頼されていないコードからの使用が無害でない限り、信頼されていないコードに渡されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="ffd17657c1d0440eb89690887c93cacc2d6efb86" translate="yes" xml:space="preserve">
          <source>Thus, the purpose of AccessControlContext is for those situations where a security check that should be made within a given context actually needs to be done from within a</source>
          <target state="translated">このように、AccessControlContext の目的は、与えられたコンテキスト内で行われるべきセキュリティチェックが、実際には</target>
        </trans-unit>
        <trans-unit id="98476dff4d031897aba6eab3b7fd173f84c35a5b" translate="yes" xml:space="preserve">
          <source>Thus, two &lt;code&gt;Date&lt;/code&gt; objects are equal if and only if the &lt;code&gt;getTime&lt;/code&gt; method returns the same &lt;code&gt;long&lt;/code&gt; value for both.</source>
          <target state="translated">したがって、2つの &lt;code&gt;Date&lt;/code&gt; オブジェクトが等しいのは、 &lt;code&gt;getTime&lt;/code&gt; メソッドが両方に同じ &lt;code&gt;long&lt;/code&gt; 値を返す場合だけです。</target>
        </trans-unit>
        <trans-unit id="72260e824fb4c4e7adfb4bb0b1b8958b7c6930a2" translate="yes" xml:space="preserve">
          <source>Thus, when a &lt;code&gt;Locale&lt;/code&gt; object contains Unicode locale attributes and keywords, &lt;code&gt;getExtension(UNICODE_LOCALE_EXTENSION)&lt;/code&gt; will return a String representing this information, for example, &quot;nu-thai&quot;. The &lt;code&gt;Locale&lt;/code&gt; class also provides &lt;a href=&quot;#getUnicodeLocaleAttributes()&quot;&gt;&lt;code&gt;getUnicodeLocaleAttributes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getUnicodeLocaleKeys()&quot;&gt;&lt;code&gt;getUnicodeLocaleKeys()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#getUnicodeLocaleType(java.lang.String)&quot;&gt;&lt;code&gt;getUnicodeLocaleType(java.lang.String)&lt;/code&gt;&lt;/a&gt; which allow you to access Unicode locale attributes and key/type pairs directly. When represented as a string, the Unicode Locale Extension lists attributes alphabetically, followed by key/type sequences with keys listed alphabetically (the order of subtags comprising a key's type is fixed when the type is defined)</source>
          <target state="translated">したがって、 &lt;code&gt;Locale&lt;/code&gt; オブジェクトにUnicodeロケール属性とキーワードが含まれている場合、 &lt;code&gt;getExtension(UNICODE_LOCALE_EXTENSION)&lt;/code&gt; は、この情報を表す文字列（たとえば、「nu-thai」）を返します。 &lt;code&gt;Locale&lt;/code&gt; クラスも提供してい&lt;a href=&quot;#getUnicodeLocaleAttributes()&quot;&gt; &lt;code&gt;getUnicodeLocaleAttributes()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getUnicodeLocaleKeys()&quot;&gt; &lt;code&gt;getUnicodeLocaleKeys()&lt;/code&gt; 、&lt;/a&gt;および&lt;a href=&quot;#getUnicodeLocaleType(java.lang.String)&quot;&gt; &lt;code&gt;getUnicodeLocaleType(java.lang.String)&lt;/code&gt; &lt;/a&gt;直接アクセスのUnicodeロケール属性とキー/タイプのペアにあなたを可能にします。文字列として表される場合、Unicode Locale Extensionは属性をアルファベット順にリストし、その後にキーがアルファベット順にリストされたキー/タイプシーケンスが続きます（キーのタイプを構成するサブタグの順序は、タイプが定義されるときに固定されます）</target>
        </trans-unit>
        <trans-unit id="92c3d429db909b0bed898ed1c23e12a0253ff1c8" translate="yes" xml:space="preserve">
          <source>Thus, when a &lt;code&gt;Locale&lt;/code&gt; object contains Unicode locale attributes and keywords, &lt;code&gt;getExtension(UNICODE_LOCALE_EXTENSION)&lt;/code&gt; will return a String representing this information, for example, &quot;nu-thai&quot;. The &lt;code&gt;Locale&lt;/code&gt; class also provides &lt;a href=&quot;locale#getUnicodeLocaleAttributes--&quot;&gt;&lt;code&gt;getUnicodeLocaleAttributes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;locale#getUnicodeLocaleKeys--&quot;&gt;&lt;code&gt;getUnicodeLocaleKeys()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;locale#getUnicodeLocaleType-java.lang.String-&quot;&gt;&lt;code&gt;getUnicodeLocaleType(java.lang.String)&lt;/code&gt;&lt;/a&gt; which allow you to access Unicode locale attributes and key/type pairs directly. When represented as a string, the Unicode Locale Extension lists attributes alphabetically, followed by key/type sequences with keys listed alphabetically (the order of subtags comprising a key's type is fixed when the type is defined)</source>
          <target state="translated">したがって、 &lt;code&gt;Locale&lt;/code&gt; オブジェクトにUnicodeロケール属性とキーワードが含まれている場合、 &lt;code&gt;getExtension(UNICODE_LOCALE_EXTENSION)&lt;/code&gt; は、この情報を表す文字列（「nu-thai」など）を返します。 &lt;code&gt;Locale&lt;/code&gt; クラスも提供してい&lt;a href=&quot;locale#getUnicodeLocaleAttributes--&quot;&gt; &lt;code&gt;getUnicodeLocaleAttributes()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;locale#getUnicodeLocaleKeys--&quot;&gt; &lt;code&gt;getUnicodeLocaleKeys()&lt;/code&gt; 、&lt;/a&gt;および&lt;a href=&quot;locale#getUnicodeLocaleType-java.lang.String-&quot;&gt; &lt;code&gt;getUnicodeLocaleType(java.lang.String)&lt;/code&gt; &lt;/a&gt;直接アクセスのUnicodeロケール属性とキー/タイプのペアにあなたを可能にします。文字列として表される場合、Unicode Locale Extensionは属性をアルファベット順にリストし、その後にキー/タイプシーケンスをキー順にアルファベット順にリストします（キーのタイプを構成するサブタグの順序は、タイプが定義されるときに固定されます）。</target>
        </trans-unit>
        <trans-unit id="6a4b3369e6a303ed019539a3ace8efe19456477d" translate="yes" xml:space="preserve">
          <source>Thus, when copying an integral type source to an integral type destination, if the source sample size is greater than the destination sample size for a particular band, the high order bits of the source sample are truncated. If the source sample size is less than the destination size for a particular band, the high order bits of the destination are zero-extended or sign-extended depending on whether srcRaster's SampleModel treats the sample as a signed or unsigned quantity.</source>
          <target state="translated">このように,積分型のソースを積分型のデスティネーションにコピーする場合,ソースのサンプルサイズが特定のバンドのデスティネーションのサンプルサイズよりも大きい場合,ソースサンプルの高次ビットは切り捨てられます.ソースサンプルサイズが特定のバンドのデスティネーションサイズよりも小さい場合、srcRaster の SampleModel がサンプルを符号付き量として扱うか符号無し量として扱うかに応じて、デスティネーションの高次ビットはゼロ拡張または符号拡張されます。</target>
        </trans-unit>
        <trans-unit id="866e086146681ed6c2109e5f79647c0874300c87" translate="yes" xml:space="preserve">
          <source>Tick rectangle</source>
          <target state="translated">ティック長方形</target>
        </trans-unit>
        <trans-unit id="8e5f0e67c1a46279f15bfa1668ff92355a0291ed" translate="yes" xml:space="preserve">
          <source>TileObserver</source>
          <target state="translated">TileObserver</target>
        </trans-unit>
        <trans-unit id="6c82e6dd86807ee3db07e3c82bec1ae1ce00b08b" translate="yes" xml:space="preserve">
          <source>Time</source>
          <target state="translated">Time</target>
        </trans-unit>
        <trans-unit id="0e6784f4bdace33c20dfec97fb8e85a458830053" translate="yes" xml:space="preserve">
          <source>Time formatted for the 12-hour clock as &lt;code&gt;&quot;%tI:%tM:%tS %Tp&quot;&lt;/code&gt;. The location of the morning or afternoon marker (&lt;code&gt;'%Tp'&lt;/code&gt;) may be locale-dependent.</source>
          <target state="translated">&lt;code&gt;&quot;%tI:%tM:%tS %Tp&quot;&lt;/code&gt; ように12時間制でフォーマットされた時刻。午前または午後のマーカー（ &lt;code&gt;'%Tp'&lt;/code&gt; ）の位置は、ロケールによって異なります。</target>
        </trans-unit>
        <trans-unit id="ac0fcf04a794ce3095e0649fe7de98b0aa7efd9c" translate="yes" xml:space="preserve">
          <source>Time formatted for the 24-hour clock as &lt;code&gt;&quot;%tH:%tM&quot;&lt;/code&gt;</source>
          <target state="translated">24時間形式で &lt;code&gt;&quot;%tH:%tM&quot;&lt;/code&gt; としてフォーマットされた時刻</target>
        </trans-unit>
        <trans-unit id="de6d94004f978d6098c423e1892852b097c9b10b" translate="yes" xml:space="preserve">
          <source>Time formatted for the 24-hour clock as &lt;code&gt;&quot;%tH:%tM:%tS&quot;&lt;/code&gt;.</source>
          <target state="translated">24時間時計用にフォーマットされた時刻は &lt;code&gt;&quot;%tH:%tM:%tS&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fabfafbde1bcee333b2792b5a75b20bd748367c1" translate="yes" xml:space="preserve">
          <source>Time unit representing one second</source>
          <target state="translated">1秒を表す時間単位</target>
        </trans-unit>
        <trans-unit id="c9dbcaa261c78b418e4aebabb43ab10eb5d2c894" translate="yes" xml:space="preserve">
          <source>Time unit representing one second.</source>
          <target state="translated">1秒を表す時間単位。</target>
        </trans-unit>
        <trans-unit id="0427592ba03900f5b05775749a82fa6413478361" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a microsecond</source>
          <target state="translated">1,000分の1マイクロ秒を表す時間単位</target>
        </trans-unit>
        <trans-unit id="87480b4cfcc3a722c27cbf068afa4dbd8a4442c1" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a microsecond.</source>
          <target state="translated">1,000分の1マイクロ秒を表す時間単位。</target>
        </trans-unit>
        <trans-unit id="61bb947eb596cc0808ba5a6e9ecb5e1f991eafa8" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a millisecond</source>
          <target state="translated">1,000分の1ミリ秒を表す時間単位</target>
        </trans-unit>
        <trans-unit id="93479bfc7155f5bf2fd0382e7286186abecc0f97" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a millisecond.</source>
          <target state="translated">1000分の1ミリ秒を表す時間単位。</target>
        </trans-unit>
        <trans-unit id="c50f471fb69b28b20b8e59aff81ba82cdfda6dba" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a second</source>
          <target state="translated">千分の一秒を表す時間単位</target>
        </trans-unit>
        <trans-unit id="e31e8bb6df6dd7121d4255ecf461003237d9881a" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a second.</source>
          <target state="translated">1,000分の1秒を表す時間単位。</target>
        </trans-unit>
        <trans-unit id="eab70b98a2301e438690d8226a7540fb93a18051" translate="yes" xml:space="preserve">
          <source>Time unit representing sixty minutes</source>
          <target state="translated">60分を表す時間単位</target>
        </trans-unit>
        <trans-unit id="5dc18d0258a296e4d566c9eb552f6b976086ebc4" translate="yes" xml:space="preserve">
          <source>Time unit representing sixty minutes.</source>
          <target state="translated">60分を表す時間単位。</target>
        </trans-unit>
        <trans-unit id="25db4b139768b0c095e63a33f97da9c2ced0a3e6" translate="yes" xml:space="preserve">
          <source>Time unit representing sixty seconds</source>
          <target state="translated">60秒を表す時間単位</target>
        </trans-unit>
        <trans-unit id="8a76eb2dbfa240231ca05866a99810c9b86a64b8" translate="yes" xml:space="preserve">
          <source>Time unit representing sixty seconds.</source>
          <target state="translated">60秒を表す時間単位。</target>
        </trans-unit>
        <trans-unit id="020cbda4d020d26de73dea56e6abbaa04d2631e6" translate="yes" xml:space="preserve">
          <source>Time unit representing twenty four hours</source>
          <target state="translated">24時間を表す時間単位</target>
        </trans-unit>
        <trans-unit id="f6c409a4954de100948bf0e3d90e770c6acc66b5" translate="yes" xml:space="preserve">
          <source>Time unit representing twenty four hours.</source>
          <target state="translated">24時間を表す時間単位。</target>
        </trans-unit>
        <trans-unit id="89f57c9112e204a7e40fe8299e9501ca95885d1f" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The calculation effectively converts both zoned date-times to instants and then calculates the period between the instants. For example, the period from noon on day 1 to noon the following day in hours may be 23, 24 or 25 hours (or some other amount) depending on whether there was a daylight savings change or not.</source>
          <target state="translated">時間単位は瞬時の時間軸上で動作します。この計算では、ゾーン化された両方の日付時間を効果的に瞬時に変換し、瞬時の間の期間を計算します。例えば、1日目の正午から翌日の正午までの時間単位の期間は、サマータイムの変更があったかどうかによって、23時間、24時間、25時間(またはその他の量)となります。</target>
        </trans-unit>
        <trans-unit id="d70941fb95500a6268aa8269ce17251e959f5659" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The period is first added to the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;#ofInstant(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt;&lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt; with the offset before the addition.</source>
          <target state="translated">時間単位は、インスタントタイムラインで動作します。期間は最初にローカル日時に追加され、次にゾーンIDを使用してゾーン日時に変換されます。変換では、追加前のオフセットとともに&lt;a href=&quot;#ofInstant(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt; &lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt;れます。</target>
        </trans-unit>
        <trans-unit id="9ed6b3c9aeefe2bc6282eff254e96b8c3817061f" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The period is first added to the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;zoneddatetime#ofInstant-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt;&lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt; with the offset before the addition.</source>
          <target state="translated">時間単位は、インスタントタイムラインで動作します。最初に期間がローカルの日時に追加され、次にゾーンIDを使用してゾーン化された日時に変換されます。変換では、追加前のオフセットで&lt;a href=&quot;zoneddatetime#ofInstant-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt; &lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="4e1cfd464b999bed036579c41e7890f35be3c7a8" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The period is first subtracted from the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;#ofInstant(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt;&lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt; with the offset before the subtraction.</source>
          <target state="translated">時間単位は、インスタントタイムラインで動作します。期間は最初にローカル日時から減算され、次にゾーンIDを使用してゾーン日時に変換されます。変換では、減算前のオフセットで&lt;a href=&quot;#ofInstant(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt; &lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt;れます。</target>
        </trans-unit>
        <trans-unit id="831e64c683b21b66a0babbd03d6b96ebea1847d5" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The period is first subtracted from the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;zoneddatetime#ofInstant-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt;&lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt; with the offset before the subtraction.</source>
          <target state="translated">時間単位は、インスタントタイムラインで動作します。期間は最初にローカルの日時から減算され、次にゾーンIDを使用してゾーン化された日時に変換されます。変換では、減算の前にオフセットを&lt;a href=&quot;zoneddatetime#ofInstant-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt; &lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt;してofInstant（LocalDateTime、ZoneOffset、ZoneId）を使用します。</target>
        </trans-unit>
        <trans-unit id="050590f9af11ee8fbb6d37006b75678e145d12dd" translate="yes" xml:space="preserve">
          <source>Time with offset</source>
          <target state="translated">オフセットのある時間</target>
        </trans-unit>
        <trans-unit id="caa53650ff34d0afa2cc90c62149dba0ee3a43b8" translate="yes" xml:space="preserve">
          <source>Time with or without offset</source>
          <target state="translated">オフセットの有無にかかわらず、時間</target>
        </trans-unit>
        <trans-unit id="71a771812f6037b30385960c0fae367957acff4a" translate="yes" xml:space="preserve">
          <source>Time without offset</source>
          <target state="translated">オフセットなしの時間</target>
        </trans-unit>
        <trans-unit id="eea79afd832854a3b24153b928ee9c62c7457dbe" translate="yes" xml:space="preserve">
          <source>Time zone</source>
          <target state="translated">タイムゾーン</target>
        </trans-unit>
        <trans-unit id="8bb54ab1e88ff1d025269859104bf56b528ef8af" translate="yes" xml:space="preserve">
          <source>Time zone names are supported by &lt;a href=&quot;timezonenameprovider&quot;&gt;&lt;code&gt;TimeZoneNameProvider&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">タイムゾーン名は&lt;a href=&quot;timezonenameprovider&quot;&gt; &lt;code&gt;TimeZoneNameProvider&lt;/code&gt; で&lt;/a&gt;サポートされています。</target>
        </trans-unit>
        <trans-unit id="3f4878b36a0d9264640a70315c2a5bb65e680e2f" translate="yes" xml:space="preserve">
          <source>Time zone rules are expressed in one of three ways:</source>
          <target state="translated">タイムゾーンのルールは、3つの方法のいずれかで表現されています。</target>
        </trans-unit>
        <trans-unit id="29a5c476992123ec99f71484fedd2849b8aecb7b" translate="yes" xml:space="preserve">
          <source>Time-consuming tasks should not be run on the</source>
          <target state="translated">時間のかかるタスクは</target>
        </trans-unit>
        <trans-unit id="8e881d4f0c8acf36a5646394d4530435fc6c9f4a" translate="yes" xml:space="preserve">
          <source>Time-scale</source>
          <target state="translated">Time-scale</target>
        </trans-unit>
        <trans-unit id="8830a64163772ea12b0403c9616e1650d28ab38b" translate="yes" xml:space="preserve">
          <source>Time-zone IDs</source>
          <target state="translated">タイムゾーンID</target>
        </trans-unit>
        <trans-unit id="33ded71aae7cb19513a319ece1e1ed4533d56bc6" translate="yes" xml:space="preserve">
          <source>Time-zone rules are defined by governments and change frequently. There are a number of organizations, known here as groups, that monitor time-zone changes and collate them. The default group is the IANA Time Zone Database (TZDB). Other organizations include IATA (the airline industry body) and Microsoft.</source>
          <target state="translated">タイムゾーンのルールは政府によって定められており、頻繁に変更されています。タイムゾーンの変更を監視し、照合するために、ここではグループとして知られているいくつかの組織があります。デフォルトのグループは、IANAタイムゾーンデータベース(TZDB)です。他の組織としては、IATA(航空業界団体)やマイクロソフトなどがあります。</target>
        </trans-unit>
        <trans-unit id="6137849a9f17f87165fee1499b4099d6a4fd65ee" translate="yes" xml:space="preserve">
          <source>Time-zone rules are political, thus the data can change at any time. Each provider will provide the latest rules for each zone ID, but they may also provide the history of how the rules changed.</source>
          <target state="translated">時間帯のルールは政治的なものであるため、データはいつでも変更される可能性があります。各プロバイダーは各ゾーンIDの最新のルールを提供しますが、ルールがどのように変更されたかの履歴を提供する場合もあります。</target>
        </trans-unit>
        <trans-unit id="090fb0c18ce47a2edb59226eb740058c265f757b" translate="yes" xml:space="preserve">
          <source>Time-zone rules, such as daylight savings, mean that not every local date-time is valid for the specified zone, thus the local date-time may not be midnight.</source>
          <target state="translated">サマータイムなどの時間帯のルールは、指定されたゾーンではすべてのローカルの日付が有効ではないことを意味し、そのためローカルの日付は真夜中ではない可能性があります。</target>
        </trans-unit>
        <trans-unit id="0b065bea6629d2bcd6f2aa65275a8270e77ac97d" translate="yes" xml:space="preserve">
          <source>Time-zone rules, such as daylight savings, mean that not every time on the local time-line exists. If the local date-time is in a gap or overlap according to the rules then a resolver is used to determine the resultant local time and offset. This method uses &lt;a href=&quot;zoneddatetime#ofLocal(java.time.LocalDateTime,java.time.ZoneId,java.time.ZoneOffset)&quot;&gt;&lt;code&gt;ZonedDateTime.ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt;&lt;/a&gt; to retain the offset from this instance if possible.</source>
          <target state="translated">夏時間などのタイムゾーンルールは、ローカルタイムラインのすべての時間が存在するわけではないことを意味します。現地の日時が規則に従ってギャップまたはオーバーラップしている場合、リゾルバーを使用して、結果の現地時間とオフセットを決定します。このメソッドは&lt;a href=&quot;zoneddatetime#ofLocal(java.time.LocalDateTime,java.time.ZoneId,java.time.ZoneOffset)&quot;&gt; &lt;code&gt;ZonedDateTime.ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt; &lt;/a&gt;を使用して、このインスタンスからのオフセットを保持します。</target>
        </trans-unit>
        <trans-unit id="69d8919b61a4696f2edbdb1a0ffd8942c9a32cd6" translate="yes" xml:space="preserve">
          <source>Time-zone rules, such as daylight savings, mean that not every time on the local time-line exists. If the local date-time is in a gap or overlap according to the rules then a resolver is used to determine the resultant local time and offset. This method uses &lt;a href=&quot;zoneddatetime#ofLocal-java.time.LocalDateTime-java.time.ZoneId-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;ZonedDateTime.ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt;&lt;/a&gt; to retain the offset from this instance if possible.</source>
          <target state="translated">夏時間などのタイムゾーンルールは、ローカルタイムラインのすべての時間が存在するわけではないことを意味します。現地の日時がルールに従ってギャップまたはオーバーラップしている場合は、リゾルバーを使用して結果の現地時間とオフセットを決定します。このメソッドは&lt;a href=&quot;zoneddatetime#ofLocal-java.time.LocalDateTime-java.time.ZoneId-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;ZonedDateTime.ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt; &lt;/a&gt;を使用して、可能であればこのインスタンスからのオフセットを保持します。</target>
        </trans-unit>
        <trans-unit id="626b62a0eab63d8138cbffcf2c050e1dbc225369" translate="yes" xml:space="preserve">
          <source>Time-zones are defined by governments and change frequently. This method allows applications to find the history of changes to the rules for a single zone ID. The map is keyed by a string, which is the version string associated with the rules.</source>
          <target state="translated">タイムゾーンは政府によって定義されており、頻繁に変更されます。この方法では、アプリケーションは、単一のゾーンIDのためのルールの変更履歴を見つけることができます。マップのキーは文字列であり、これはルールに関連付けられたバージョン文字列です。</target>
        </trans-unit>
        <trans-unit id="0de905fd055ac463c8b08925d00ee67eebc8d728" translate="yes" xml:space="preserve">
          <source>TimeLimitExceededException</source>
          <target state="translated">TimeLimitExceededException</target>
        </trans-unit>
        <trans-unit id="df40c3b93b006f00eef205beea090efa3f7e9e8d" translate="yes" xml:space="preserve">
          <source>TimeUnit</source>
          <target state="translated">TimeUnit</target>
        </trans-unit>
        <trans-unit id="dc6d78829b2f8c3106a4bdf822f751696435efcb" translate="yes" xml:space="preserve">
          <source>TimeUnit.convert()</source>
          <target state="translated">TimeUnit.convert()</target>
        </trans-unit>
        <trans-unit id="830cc0bd2e0a2fe9eac0e502ef3b5b9156d31f8b" translate="yes" xml:space="preserve">
          <source>TimeUnit.sleep()</source>
          <target state="translated">TimeUnit.sleep()</target>
        </trans-unit>
        <trans-unit id="83f017325323a2fb1c3d3b6db20dd4b319aa7f08" translate="yes" xml:space="preserve">
          <source>TimeUnit.timedJoin()</source>
          <target state="translated">TimeUnit.timedJoin()</target>
        </trans-unit>
        <trans-unit id="5f6deaa8e8a85d9852e3e80f21a713e5ffac59c6" translate="yes" xml:space="preserve">
          <source>TimeUnit.timedWait()</source>
          <target state="translated">TimeUnit.timedWait()</target>
        </trans-unit>
        <trans-unit id="c8e371532ae3111ecdf8ef29a5548ddd918cb4f1" translate="yes" xml:space="preserve">
          <source>TimeUnit.toDays()</source>
          <target state="translated">TimeUnit.toDays()</target>
        </trans-unit>
        <trans-unit id="99b0f5def87732225751e7031078408f4f134430" translate="yes" xml:space="preserve">
          <source>TimeUnit.toHours()</source>
          <target state="translated">TimeUnit.toHours()</target>
        </trans-unit>
        <trans-unit id="ef73133eee66e8d60b240f6c276328790c87d794" translate="yes" xml:space="preserve">
          <source>TimeUnit.toMicros()</source>
          <target state="translated">TimeUnit.toMicros()</target>
        </trans-unit>
        <trans-unit id="c68987acb22a0f1133564c2feeec03d3e5d7b531" translate="yes" xml:space="preserve">
          <source>TimeUnit.toMillis()</source>
          <target state="translated">TimeUnit.toMillis()</target>
        </trans-unit>
        <trans-unit id="3730ed7851bf04f1d33d3ff0080311423a464267" translate="yes" xml:space="preserve">
          <source>TimeUnit.toMinutes()</source>
          <target state="translated">TimeUnit.toMinutes()</target>
        </trans-unit>
        <trans-unit id="4dd5c6566718095f94c4b947cdb8e61d5741f1d9" translate="yes" xml:space="preserve">
          <source>TimeUnit.toNanos()</source>
          <target state="translated">TimeUnit.toNanos()</target>
        </trans-unit>
        <trans-unit id="a79b9e1c9998086855c45b2ecd7a5f4c333edfe8" translate="yes" xml:space="preserve">
          <source>TimeUnit.toSeconds()</source>
          <target state="translated">TimeUnit.toSeconds()</target>
        </trans-unit>
        <trans-unit id="57ef650399f2712bf741a27ec482a93a859abb4a" translate="yes" xml:space="preserve">
          <source>TimeUnit.valueOf()</source>
          <target state="translated">TimeUnit.valueOf()</target>
        </trans-unit>
        <trans-unit id="a359ca57ee573718caff5b8c3e63b5fc924bf389" translate="yes" xml:space="preserve">
          <source>TimeUnit.values()</source>
          <target state="translated">TimeUnit.values()</target>
        </trans-unit>
        <trans-unit id="a4208dd784207f8d84ef4fa31bd30bdd2b432c1d" translate="yes" xml:space="preserve">
          <source>TimeZone</source>
          <target state="translated">TimeZone</target>
        </trans-unit>
        <trans-unit id="cb3863b86450493de455ba45e15ac953362436e0" translate="yes" xml:space="preserve">
          <source>TimeZone for this.</source>
          <target state="translated">このためのタイムゾーン。</target>
        </trans-unit>
        <trans-unit id="e9cbb9369e1389fce6fec9ee7402639ce40b5d8a" translate="yes" xml:space="preserve">
          <source>TimeZone.clone()</source>
          <target state="translated">TimeZone.clone()</target>
        </trans-unit>
        <trans-unit id="d2c14798f600f15426d37393363602c92fa2a2f2" translate="yes" xml:space="preserve">
          <source>TimeZone.getAvailableIDs()</source>
          <target state="translated">TimeZone.getAvailableIDs()</target>
        </trans-unit>
        <trans-unit id="b37d04d3329436f7f71234e48d7d2bc525eef972" translate="yes" xml:space="preserve">
          <source>TimeZone.getDSTSavings()</source>
          <target state="translated">TimeZone.getDSTSavings()</target>
        </trans-unit>
        <trans-unit id="a36b3c7befab558d8c90ba31a7714dde07f2d526" translate="yes" xml:space="preserve">
          <source>TimeZone.getDefault()</source>
          <target state="translated">TimeZone.getDefault()</target>
        </trans-unit>
        <trans-unit id="6c480eb94416dc3381f7dd97c7c459c72e05d9aa" translate="yes" xml:space="preserve">
          <source>TimeZone.getDisplayName()</source>
          <target state="translated">TimeZone.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="79e758338012138895c385e324e812e297c7e960" translate="yes" xml:space="preserve">
          <source>TimeZone.getID()</source>
          <target state="translated">TimeZone.getID()</target>
        </trans-unit>
        <trans-unit id="5cef88fd890c75151720b6f231afd2108cb8f294" translate="yes" xml:space="preserve">
          <source>TimeZone.getOffset()</source>
          <target state="translated">TimeZone.getOffset()</target>
        </trans-unit>
        <trans-unit id="89330dcc6b6c1d1c028fe320c5f593c5b989fe9e" translate="yes" xml:space="preserve">
          <source>TimeZone.getRawOffset()</source>
          <target state="translated">TimeZone.getRawOffset()</target>
        </trans-unit>
        <trans-unit id="10d1274880ae857877db690d3c0220040aff62da" translate="yes" xml:space="preserve">
          <source>TimeZone.getTimeZone()</source>
          <target state="translated">TimeZone.getTimeZone()</target>
        </trans-unit>
        <trans-unit id="1b8c437f45170fda63fafc1a7c082d45c20fced2" translate="yes" xml:space="preserve">
          <source>TimeZone.hasSameRules()</source>
          <target state="translated">TimeZone.hasSameRules()</target>
        </trans-unit>
        <trans-unit id="ff334a3e562bd71e91ec01e6fe9899d37c05c857" translate="yes" xml:space="preserve">
          <source>TimeZone.inDaylightTime()</source>
          <target state="translated">TimeZone.inDaylightTime()</target>
        </trans-unit>
        <trans-unit id="1f697c26f417f7d9d7cdfbd4587c9d2fcd681320" translate="yes" xml:space="preserve">
          <source>TimeZone.observesDaylightTime()</source>
          <target state="translated">TimeZone.observesDaylightTime()</target>
        </trans-unit>
        <trans-unit id="a0c48fd39e019f85ce0aab5d72e0b366c8359b4d" translate="yes" xml:space="preserve">
          <source>TimeZone.setDefault()</source>
          <target state="translated">TimeZone.setDefault()</target>
        </trans-unit>
        <trans-unit id="626b6b713b4bdcd72171c0a543c3568bf7e9b7d9" translate="yes" xml:space="preserve">
          <source>TimeZone.setID()</source>
          <target state="translated">TimeZone.setID()</target>
        </trans-unit>
        <trans-unit id="1eb9d165355823bccfd58e6ad48f0bf613215d5c" translate="yes" xml:space="preserve">
          <source>TimeZone.setRawOffset()</source>
          <target state="translated">TimeZone.setRawOffset()</target>
        </trans-unit>
        <trans-unit id="05df22f63337599f3180142338eb2e7d8e3d4163" translate="yes" xml:space="preserve">
          <source>TimeZone.toZoneId()</source>
          <target state="translated">TimeZone.toZoneId()</target>
        </trans-unit>
        <trans-unit id="a64731e93346a78a35c5c19948993596c27b8261" translate="yes" xml:space="preserve">
          <source>TimeZone.useDaylightTime()</source>
          <target state="translated">TimeZone.useDaylightTime()</target>
        </trans-unit>
        <trans-unit id="16f1ab458f74bc6b63fec460f972ba78af52cb77" translate="yes" xml:space="preserve">
          <source>TimeZoneNameProvider</source>
          <target state="translated">TimeZoneNameProvider</target>
        </trans-unit>
        <trans-unit id="2cb73024ec0e6f28e0a0dcc16ab5bd51ad99c21a" translate="yes" xml:space="preserve">
          <source>TimeZoneNameProvider.getDisplayName()</source>
          <target state="translated">TimeZoneNameProvider.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="d4eec88fceb36fe86366dd0d4aadff59ad8c78c7" translate="yes" xml:space="preserve">
          <source>TimeZoneNameProvider.getGenericDisplayName()</source>
          <target state="translated">TimeZoneNameProvider.getGenericDisplayName()</target>
        </trans-unit>
        <trans-unit id="3188114969e7bc52ee2de7d28da57b1a4e07a31e" translate="yes" xml:space="preserve">
          <source>TimeoutException</source>
          <target state="translated">TimeoutException</target>
        </trans-unit>
        <trans-unit id="27a4f2c5a6aa7d957af2668e0ec53e32944aba26" translate="yes" xml:space="preserve">
          <source>Timeouts</source>
          <target state="translated">Timeouts</target>
        </trans-unit>
        <trans-unit id="9d9cec22f36fd2bb99d5fe8c4723347bec202ca5" translate="yes" xml:space="preserve">
          <source>Timer</source>
          <target state="translated">Timer</target>
        </trans-unit>
        <trans-unit id="b20460a8965f21d19e98c04e87d17f50bd2afc59" translate="yes" xml:space="preserve">
          <source>Timer used when inside a scrollpane and the scrollbar is adjusting.</source>
          <target state="translated">スクロールペイン内でスクロールバーを調整しているときに使用するタイマーです。</target>
        </trans-unit>
        <trans-unit id="81883e3bc6886077cba970d3d858196e709beb20" translate="yes" xml:space="preserve">
          <source>Timer.addNotification()</source>
          <target state="translated">Timer.addNotification()</target>
        </trans-unit>
        <trans-unit id="4896acdf5c63a6f47b6f6e5849ec30459d3397c8" translate="yes" xml:space="preserve">
          <source>Timer.cancel()</source>
          <target state="translated">Timer.cancel()</target>
        </trans-unit>
        <trans-unit id="9bb39f74d2e3a29a5d75b90c5890df232ec8a798" translate="yes" xml:space="preserve">
          <source>Timer.getAllNotificationIDs()</source>
          <target state="translated">Timer.getAllNotificationIDs()</target>
        </trans-unit>
        <trans-unit id="97ea8e20a2d0daef8655419765a1ff27524f3f68" translate="yes" xml:space="preserve">
          <source>Timer.getDate()</source>
          <target state="translated">Timer.getDate()</target>
        </trans-unit>
        <trans-unit id="2af097df8af116002578d5ede08febd3159da119" translate="yes" xml:space="preserve">
          <source>Timer.getFixedRate()</source>
          <target state="translated">Timer.getFixedRate()</target>
        </trans-unit>
        <trans-unit id="1df4cccd4d4a572b241065bce89ac0d714bf31c2" translate="yes" xml:space="preserve">
          <source>Timer.getNbNotifications()</source>
          <target state="translated">Timer.getNbNotifications()</target>
        </trans-unit>
        <trans-unit id="529f55d399ba2c6c3ad532c17a0040d4bcbabf41" translate="yes" xml:space="preserve">
          <source>Timer.getNbOccurences()</source>
          <target state="translated">Timer.getNbOccurences()</target>
        </trans-unit>
        <trans-unit id="337e7f895c06efc9798f62fade28c2c7bc75afb0" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationIDs()</source>
          <target state="translated">Timer.getNotificationIDs()</target>
        </trans-unit>
        <trans-unit id="dc7343a202131d19a3692f24d648b04ebe01ace1" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationInfo()</source>
          <target state="translated">Timer.getNotificationInfo()</target>
        </trans-unit>
        <trans-unit id="b7078c5612fe13ddc75429a66eef5a6cf51c7f79" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationMessage()</source>
          <target state="translated">Timer.getNotificationMessage()</target>
        </trans-unit>
        <trans-unit id="df06bf539a64e1d86be94d1f6c21668177afed89" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationType()</source>
          <target state="translated">Timer.getNotificationType()</target>
        </trans-unit>
        <trans-unit id="029175da9ac93fd9fe81c7afedd7c0a95ef244e3" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationUserData()</source>
          <target state="translated">Timer.getNotificationUserData()</target>
        </trans-unit>
        <trans-unit id="57357051a09d379f81cc559540f30392aaeb31ea" translate="yes" xml:space="preserve">
          <source>Timer.getPeriod()</source>
          <target state="translated">Timer.getPeriod()</target>
        </trans-unit>
        <trans-unit id="f78b87ef04f0bb00580e579f2fcd11ab4279366c" translate="yes" xml:space="preserve">
          <source>Timer.getSendPastNotifications()</source>
          <target state="translated">Timer.getSendPastNotifications()</target>
        </trans-unit>
        <trans-unit id="4446979211b5db6ce570fbcb22219fbb9c77aae8" translate="yes" xml:space="preserve">
          <source>Timer.isActive()</source>
          <target state="translated">Timer.isActive()</target>
        </trans-unit>
        <trans-unit id="87706d3abfd020bfef2fb744b330e323bcddc5a8" translate="yes" xml:space="preserve">
          <source>Timer.isEmpty()</source>
          <target state="translated">Timer.isEmpty()</target>
        </trans-unit>
        <trans-unit id="79df4ac63affeeebf92910d568c126ee51c99e46" translate="yes" xml:space="preserve">
          <source>Timer.postDeregister()</source>
          <target state="translated">Timer.postDeregister()</target>
        </trans-unit>
        <trans-unit id="7b5f54b95af92a706d03f83f7098c293894eca3f" translate="yes" xml:space="preserve">
          <source>Timer.postRegister()</source>
          <target state="translated">Timer.postRegister()</target>
        </trans-unit>
        <trans-unit id="447f824bc2e0b6f94331da66e273cf93caaa4ea8" translate="yes" xml:space="preserve">
          <source>Timer.preDeregister()</source>
          <target state="translated">Timer.preDeregister()</target>
        </trans-unit>
        <trans-unit id="a7234e331e0c317bc0dcc660197a94021b492954" translate="yes" xml:space="preserve">
          <source>Timer.preRegister()</source>
          <target state="translated">Timer.preRegister()</target>
        </trans-unit>
        <trans-unit id="469a71915f47f697b0dbc948b29da72d062b3076" translate="yes" xml:space="preserve">
          <source>Timer.purge()</source>
          <target state="translated">Timer.purge()</target>
        </trans-unit>
        <trans-unit id="60bbc2e3fb8c12e5c337cff4039fb8100605ec93" translate="yes" xml:space="preserve">
          <source>Timer.removeAllNotifications()</source>
          <target state="translated">Timer.removeAllNotifications()</target>
        </trans-unit>
        <trans-unit id="f6d90aa3f0b109727d4e7aff37653de419bf0d73" translate="yes" xml:space="preserve">
          <source>Timer.removeNotification()</source>
          <target state="translated">Timer.removeNotification()</target>
        </trans-unit>
        <trans-unit id="230ad18a70470f6b72de5c59f28a6bcb0da1496a" translate="yes" xml:space="preserve">
          <source>Timer.removeNotifications()</source>
          <target state="translated">Timer.removeNotifications()</target>
        </trans-unit>
        <trans-unit id="56182922191e990b74ab5db444640f9b00561de9" translate="yes" xml:space="preserve">
          <source>Timer.schedule()</source>
          <target state="translated">Timer.schedule()</target>
        </trans-unit>
        <trans-unit id="fa0c7e4a2fb9be5aeebfe683e8eb7a3969fb53ab" translate="yes" xml:space="preserve">
          <source>Timer.scheduleAtFixedRate()</source>
          <target state="translated">Timer.scheduleAtFixedRate()</target>
        </trans-unit>
        <trans-unit id="dae275a30a1987fa3697a4e86ae79c78c06b14f3" translate="yes" xml:space="preserve">
          <source>Timer.setSendPastNotifications()</source>
          <target state="translated">Timer.setSendPastNotifications()</target>
        </trans-unit>
        <trans-unit id="68fca54c892ed8115fe16a2ca295987b82732716" translate="yes" xml:space="preserve">
          <source>Timer.start()</source>
          <target state="translated">Timer.start()</target>
        </trans-unit>
        <trans-unit id="464ee22a6605fc707ee61cbe4b6acf2a62a27242" translate="yes" xml:space="preserve">
          <source>Timer.stop()</source>
          <target state="translated">Timer.stop()</target>
        </trans-unit>
        <trans-unit id="4745ab42c374b6ddd2749572dda476df993af964" translate="yes" xml:space="preserve">
          <source>TimerMBean</source>
          <target state="translated">TimerMBean</target>
        </trans-unit>
        <trans-unit id="ab45a18791516a0d8b992c386c17f0a94fc001c7" translate="yes" xml:space="preserve">
          <source>TimerMBean.addNotification()</source>
          <target state="translated">TimerMBean.addNotification()</target>
        </trans-unit>
        <trans-unit id="cabf14affb9bb3d2bbc0f2c10e3cb6215380a957" translate="yes" xml:space="preserve">
          <source>TimerMBean.getAllNotificationIDs()</source>
          <target state="translated">TimerMBean.getAllNotificationIDs()</target>
        </trans-unit>
        <trans-unit id="f2f0224a15f20d7056f6b466379a8ebc59bedc03" translate="yes" xml:space="preserve">
          <source>TimerMBean.getDate()</source>
          <target state="translated">TimerMBean.getDate()</target>
        </trans-unit>
        <trans-unit id="57ad433c1188325131ba6d348a3fc9160a47240e" translate="yes" xml:space="preserve">
          <source>TimerMBean.getFixedRate()</source>
          <target state="translated">TimerMBean.getFixedRate()</target>
        </trans-unit>
        <trans-unit id="4ea1d519219b502c595dfa0c65a4889379e40649" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNbNotifications()</source>
          <target state="translated">TimerMBean.getNbNotifications()</target>
        </trans-unit>
        <trans-unit id="4f12890f2f9cac3684436b6c5b0a1bdec58ece20" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNbOccurences()</source>
          <target state="translated">TimerMBean.getNbOccurences()</target>
        </trans-unit>
        <trans-unit id="636fbad0075124d3cabcdf71e9c9f9391391709d" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNotificationIDs()</source>
          <target state="translated">TimerMBean.getNotificationIDs()</target>
        </trans-unit>
        <trans-unit id="8999c51a2b18d4699c6dda98c540926c265aa3a8" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNotificationMessage()</source>
          <target state="translated">TimerMBean.getNotificationMessage()</target>
        </trans-unit>
        <trans-unit id="6c0efd75ba28af29bcdd7915bb0d7897f6ccf178" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNotificationType()</source>
          <target state="translated">TimerMBean.getNotificationType()</target>
        </trans-unit>
        <trans-unit id="eb83d72bf4861b48f7b70f189221cda6219db761" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNotificationUserData()</source>
          <target state="translated">TimerMBean.getNotificationUserData()</target>
        </trans-unit>
        <trans-unit id="08c496ea5938bf04aa0cdb99f985c2885382ca33" translate="yes" xml:space="preserve">
          <source>TimerMBean.getPeriod()</source>
          <target state="translated">TimerMBean.getPeriod()</target>
        </trans-unit>
        <trans-unit id="843bcdc502f986de4d2ac74ff6b6441a45eaf612" translate="yes" xml:space="preserve">
          <source>TimerMBean.getSendPastNotifications()</source>
          <target state="translated">TimerMBean.getSendPastNotifications()</target>
        </trans-unit>
        <trans-unit id="2e80500c146295abc08326321704a668cb47dbd0" translate="yes" xml:space="preserve">
          <source>TimerMBean.isActive()</source>
          <target state="translated">TimerMBean.isActive()</target>
        </trans-unit>
        <trans-unit id="b529b73caf402e506be7a04417d98526209f1c60" translate="yes" xml:space="preserve">
          <source>TimerMBean.isEmpty()</source>
          <target state="translated">TimerMBean.isEmpty()</target>
        </trans-unit>
        <trans-unit id="31caa0e6959c22a72c11796f5c3053213f1bb25c" translate="yes" xml:space="preserve">
          <source>TimerMBean.removeAllNotifications()</source>
          <target state="translated">TimerMBean.removeAllNotifications()</target>
        </trans-unit>
        <trans-unit id="06443e5fc2f1bcca44edf9fe88470effe45f27e0" translate="yes" xml:space="preserve">
          <source>TimerMBean.removeNotification()</source>
          <target state="translated">TimerMBean.removeNotification()</target>
        </trans-unit>
        <trans-unit id="36084ae3698c86f6e82e72e8816e56d3e3f031e0" translate="yes" xml:space="preserve">
          <source>TimerMBean.removeNotifications()</source>
          <target state="translated">TimerMBean.removeNotifications()</target>
        </trans-unit>
        <trans-unit id="41852f9f70d5bf0ec98d16d92088277a4daaa735" translate="yes" xml:space="preserve">
          <source>TimerMBean.setSendPastNotifications()</source>
          <target state="translated">TimerMBean.setSendPastNotifications()</target>
        </trans-unit>
        <trans-unit id="e691dc971ee42a7b95439844a5ac2c29fb25dd0a" translate="yes" xml:space="preserve">
          <source>TimerMBean.start()</source>
          <target state="translated">TimerMBean.start()</target>
        </trans-unit>
        <trans-unit id="2499248a5c4c8fea79097eec24a71eb010236fd9" translate="yes" xml:space="preserve">
          <source>TimerMBean.stop()</source>
          <target state="translated">TimerMBean.stop()</target>
        </trans-unit>
        <trans-unit id="1e50eeda781ceb9ef85731b34490acd306b91521" translate="yes" xml:space="preserve">
          <source>TimerNotification</source>
          <target state="translated">TimerNotification</target>
        </trans-unit>
        <trans-unit id="df5b02b9b175d4b10e997bf48fda3ed1c1208b04" translate="yes" xml:space="preserve">
          <source>TimerNotification.getNotificationID()</source>
          <target state="translated">TimerNotification.getNotificationID()</target>
        </trans-unit>
        <trans-unit id="db860929e828fe0641ac766efabe87b45c980daf" translate="yes" xml:space="preserve">
          <source>TimerTask</source>
          <target state="translated">TimerTask</target>
        </trans-unit>
        <trans-unit id="9d8bbad39e66d5ec2b1a732a23c2e6f13ecb6887" translate="yes" xml:space="preserve">
          <source>TimerTask.cancel()</source>
          <target state="translated">TimerTask.cancel()</target>
        </trans-unit>
        <trans-unit id="792a79da08a7e0bb591e07d3e8064893b257bd69" translate="yes" xml:space="preserve">
          <source>TimerTask.run()</source>
          <target state="translated">TimerTask.run()</target>
        </trans-unit>
        <trans-unit id="78dadea3be55e36f60d5fbec8b0b892eca60f6cb" translate="yes" xml:space="preserve">
          <source>TimerTask.scheduledExecutionTime()</source>
          <target state="translated">TimerTask.scheduledExecutionTime()</target>
        </trans-unit>
        <trans-unit id="7fb217f30f6443cf3e16104e905101256d5e1626" translate="yes" xml:space="preserve">
          <source>Times out</source>
          <target state="translated">タイムズアウト</target>
        </trans-unit>
        <trans-unit id="6c6d476a98f07f16e0d6e2bcb3f917bd62a38d93" translate="yes" xml:space="preserve">
          <source>TimesRoman (use Serif)</source>
          <target state="translated">タイムズローマン</target>
        </trans-unit>
        <trans-unit id="312bfcf428f683992f055710f0ce3a6ad094aa08" translate="yes" xml:space="preserve">
          <source>Timespan</source>
          <target state="translated">Timespan</target>
        </trans-unit>
        <trans-unit id="19eabc961735d78f12fc7be906ffcb033853cf85" translate="yes" xml:space="preserve">
          <source>Timestamp</source>
          <target state="translated">Timestamp</target>
        </trans-unit>
        <trans-unit id="94cdc1fe977cba1c2d58d57a70bae983f620006e" translate="yes" xml:space="preserve">
          <source>Timestamp.equals()</source>
          <target state="translated">Timestamp.equals()</target>
        </trans-unit>
        <trans-unit id="f317887dcb89cda6b356ea42eade8c2b5e28868f" translate="yes" xml:space="preserve">
          <source>Timestamp.getSignerCertPath()</source>
          <target state="translated">Timestamp.getSignerCertPath()</target>
        </trans-unit>
        <trans-unit id="69059e7deee2c95ea43368902a077e27ccf8cf59" translate="yes" xml:space="preserve">
          <source>Timestamp.getTimestamp()</source>
          <target state="translated">Timestamp.getTimestamp()</target>
        </trans-unit>
        <trans-unit id="fa5ebbc5912e10adb01112392bbc56892ec74298" translate="yes" xml:space="preserve">
          <source>Timestamp.hashCode()</source>
          <target state="translated">Timestamp.hashCode()</target>
        </trans-unit>
        <trans-unit id="e6f9a7710e9367ff6d7245db561ce54c3724dacd" translate="yes" xml:space="preserve">
          <source>Timestamp.toString()</source>
          <target state="translated">Timestamp.toString()</target>
        </trans-unit>
        <trans-unit id="098024dc5537ca3623978ac7c0a6140ce39062b8" translate="yes" xml:space="preserve">
          <source>Timing</source>
          <target state="translated">Timing</target>
        </trans-unit>
        <trans-unit id="91f5ff61d2144f29c14b3d41f7b5f57a180a71d4" translate="yes" xml:space="preserve">
          <source>Timing of provider discovery</source>
          <target state="translated">プロバイダ発見のタイミング</target>
        </trans-unit>
        <trans-unit id="9d83d547ddd2a9519402e1cc1af3a4263caa9c55" translate="yes" xml:space="preserve">
          <source>Timing of resolution</source>
          <target state="translated">解決のタイミング</target>
        </trans-unit>
        <trans-unit id="3557cf461c922fb358962f7a3908fc79d1e1829c" translate="yes" xml:space="preserve">
          <source>Tip for Trouble-shooting</source>
          <target state="translated">トラブルシューティングのヒント</target>
        </trans-unit>
        <trans-unit id="e936a2368fae0dcade82992da382e3a7afc79b6f" translate="yes" xml:space="preserve">
          <source>Tip for Trouble-shooting:</source>
          <target state="translated">トラブルシューティングのヒント</target>
        </trans-unit>
        <trans-unit id="17aee4a357c6012617a8c4c54a1dae2faaa490a2" translate="yes" xml:space="preserve">
          <source>Title pane</source>
          <target state="translated">タイトルペイン</target>
        </trans-unit>
        <trans-unit id="eabf432b886231bee9b726c95c050e5a2a1d31ef" translate="yes" xml:space="preserve">
          <source>TitleAction</source>
          <target state="translated">TitleAction</target>
        </trans-unit>
        <trans-unit id="fe5417f8737103c29740c880d9fd9c6024616a01" translate="yes" xml:space="preserve">
          <source>TitlePane of an InternalFrame.</source>
          <target state="translated">InternalFrameのTitlePane。</target>
        </trans-unit>
        <trans-unit id="43f37db998e81dade60d568fc93ec6e092904810" translate="yes" xml:space="preserve">
          <source>TitlePane of an InternalFrame. The TitlePane typically shows a menu, title, widgets to manipulate the internal frame. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;InternalFrameTitlePane&lt;/code&gt;.</source>
          <target state="translated">InternalFrameのTitlePane。TitlePaneは通常、内部フレームを操作するためのメニュー、タイトル、ウィジェットを表示します。スタイルをこの &lt;code&gt;Region&lt;/code&gt; バインドするには、 &lt;code&gt;InternalFrameTitlePane&lt;/code&gt; という名前を使用します。</target>
        </trans-unit>
        <trans-unit id="11bd1d7a27634107404c3d967ee797adfb9a5e1e" translate="yes" xml:space="preserve">
          <source>TitlePaneLayout</source>
          <target state="translated">TitlePaneLayout</target>
        </trans-unit>
        <trans-unit id="c60032656c5e7157b36fdae4781cadecc7aa36f1" translate="yes" xml:space="preserve">
          <source>TitleProperty</source>
          <target state="translated">TitleProperty</target>
        </trans-unit>
        <trans-unit id="f7fb128ab2b2b606667607db6ec0f87259f7a1e5" translate="yes" xml:space="preserve">
          <source>Titlecase</source>
          <target state="translated">Titlecase</target>
        </trans-unit>
        <trans-unit id="232c897822eee0aa4be2243715c458e7a161bdd9" translate="yes" xml:space="preserve">
          <source>TitledBorder</source>
          <target state="translated">TitledBorder</target>
        </trans-unit>
        <trans-unit id="bf10f7d2eec21fc0a918ed3e9f24675f67ee71e7" translate="yes" xml:space="preserve">
          <source>TitledBorderUIResource</source>
          <target state="translated">TitledBorderUIResource</target>
        </trans-unit>
        <trans-unit id="ae79ea1e9c6391a9ed83a2e18a031b835feec0c9" translate="yes" xml:space="preserve">
          <source>To</source>
          <target state="translated">To</target>
        </trans-unit>
        <trans-unit id="5f14923c5999c9e1a81cbb61d2e7edb34d0b3030" translate="yes" xml:space="preserve">
          <source>To &quot;run&quot; as a particular &lt;code&gt;Principal&lt;/code&gt;, code invokes the &lt;code&gt;Subject.doAs(subject, ...)&lt;/code&gt; method. After invoking that method, the code runs as all the Principals associated with the specified &lt;code&gt;Subject&lt;/code&gt;. Note that this &lt;code&gt;Policy&lt;/code&gt; (and the Permissions granted in this &lt;code&gt;Policy&lt;/code&gt;) only become effective after the call to &lt;code&gt;Subject.doAs&lt;/code&gt; has occurred.</source>
          <target state="translated">特定の &lt;code&gt;Principal&lt;/code&gt; として「実行」するために、コードは &lt;code&gt;Subject.doAs(subject, ...)&lt;/code&gt; メソッドを呼び出します。そのメソッドを呼び出した後、コードは指定された &lt;code&gt;Subject&lt;/code&gt; に関連付けられたすべてのプリンシパルとして実行されます。このことを注意 &lt;code&gt;Policy&lt;/code&gt; （この中に付与された権限 &lt;code&gt;Policy&lt;/code&gt; の呼び出し後）にのみ有効になる &lt;code&gt;Subject.doAs&lt;/code&gt; 発生しました。</target>
        </trans-unit>
        <trans-unit id="57af1372f17114a8bcc2db8d5516bec385ce0653" translate="yes" xml:space="preserve">
          <source>To a user of your program, however, both of these sequences should be treated as the same &quot;user-level&quot; character &quot;A with acute accent&quot;. When you are searching or comparing text, you must ensure that these two sequences are treated as equivalent. In addition, you must handle characters with more than one accent. Sometimes the order of a character's combining accents is significant, while in other cases accent sequences in different orders are really equivalent.</source>
          <target state="translated">しかし、プログラムのユーザーにとっては、これらのシーケンスは両方とも同じ「ユーザーレベル」の文字「A with acute accent」として扱われるべきです。テキストを検索したり比較したりするときには、これら2つのシーケンスが同等のものとして扱われるようにしなければなりません。さらに、複数のアクセントを持つ文字を扱う必要があります。文字のアクセントの組み合わせの順序が重要な場合もありますが、異なる順序のアクセントシーケンスが本当に等価である場合もあります。</target>
        </trans-unit>
        <trans-unit id="79d468f2080799fd4a5b8cfe80388b11a5d9042a" translate="yes" xml:space="preserve">
          <source>To access the member layout named &lt;code&gt;value&lt;/code&gt;, we can construct a memory access var handle as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c1897506b00f2472473c7bf16938a123ff47b08" translate="yes" xml:space="preserve">
          <source>To access the next page (chunk of data), an application calls the method &lt;code&gt;nextPage&lt;/code&gt;. This method creates a new &lt;code&gt;CachedRowSet&lt;/code&gt; object and fills it with the next page of data. For example, assume that the &lt;code&gt;CachedRowSet&lt;/code&gt; object's command returns a &lt;code&gt;ResultSet&lt;/code&gt; object</source>
          <target state="translated">次のページ（データのチャンク）にアクセスするために、アプリケーションはメソッド &lt;code&gt;nextPage&lt;/code&gt; を呼び出します。このメソッドは、新しい &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトを作成し、次のページのデータで埋めます。たとえば、 &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトのコマンドが &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトを返すと仮定します</target>
        </trans-unit>
        <trans-unit id="ca231756d4836a985dd44e4c864318e7cb7e548f" translate="yes" xml:space="preserve">
          <source>To achieve laziness the actual work of locating and instantiating providers is done by the iterator itself. Its &lt;a href=&quot;iterator#hasNext()&quot;&gt;&lt;code&gt;hasNext&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator#next()&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; methods can therefore throw a &lt;a href=&quot;serviceconfigurationerror&quot;&gt;&lt;code&gt;ServiceConfigurationError&lt;/code&gt;&lt;/a&gt; for any of the reasons specified in the &lt;a href=&quot;#errors&quot;&gt;Errors&lt;/a&gt; section above. To write robust code it is only necessary to catch &lt;code&gt;ServiceConfigurationError&lt;/code&gt; when using the iterator. If an error is thrown then subsequent invocations of the iterator will make a best effort to locate and instantiate the next available provider, but in general such recovery cannot be guaranteed.</source>
          <target state="translated">怠惰を実現するために、プロバイダーの検索とインスタンス化の実際の作業は、イテレーター自体によって行われます。したがって、その&lt;a href=&quot;iterator#hasNext()&quot;&gt; &lt;code&gt;hasNext&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;iterator#next()&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt;メソッドは、上記の「&lt;a href=&quot;#errors&quot;&gt;エラー」&lt;/a&gt;セクションで指定された理由のいずれかで&lt;a href=&quot;serviceconfigurationerror&quot;&gt; &lt;code&gt;ServiceConfigurationError&lt;/code&gt; &lt;/a&gt;をスローする可能性があります。堅牢なコードを作成するには、イテレータを使用するときに &lt;code&gt;ServiceConfigurationError&lt;/code&gt; をキャッチするだけで済みます。エラーがスローされた場合、その後のイテレーターの呼び出しは、次に利用可能なプロバイダーを見つけてインスタンス化するために最善を尽くしますが、一般に、そのような回復は保証されません。</target>
        </trans-unit>
        <trans-unit id="4a36173cb289a14da668f4851982702ec5e661c1" translate="yes" xml:space="preserve">
          <source>To achieve laziness the actual work of locating providers is done when processing the stream. If a service provider cannot be loaded for any of the reasons specified in the &lt;a href=&quot;#errors&quot;&gt;Errors&lt;/a&gt; section above then &lt;a href=&quot;serviceconfigurationerror&quot;&gt;&lt;code&gt;ServiceConfigurationError&lt;/code&gt;&lt;/a&gt; is thrown by whatever method caused the service provider to be loaded.</source>
          <target state="translated">怠惰を実現するために、ストリームを処理するときにプロバイダーを見つける実際の作業が行われます。上記の「&lt;a href=&quot;#errors&quot;&gt;エラー」&lt;/a&gt;セクションで指定された理由のいずれかでサービスプロバイダーをロードできない場合、&lt;a href=&quot;serviceconfigurationerror&quot;&gt; &lt;code&gt;ServiceConfigurationError&lt;/code&gt; &lt;/a&gt;は、サービスプロバイダーがロードされた原因となった方法によってスローされます。</target>
        </trans-unit>
        <trans-unit id="2e64d08ea8166d722ce0f8580516aea74cb7327d" translate="yes" xml:space="preserve">
          <source>To achieve laziness the actual work of parsing the available provider-configuration files and instantiating providers must be done by the iterator itself. Its &lt;a href=&quot;iterator#hasNext--&quot;&gt;&lt;code&gt;hasNext&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator#next--&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; methods can therefore throw a &lt;a href=&quot;serviceconfigurationerror&quot;&gt;&lt;code&gt;ServiceConfigurationError&lt;/code&gt;&lt;/a&gt; if a provider-configuration file violates the specified format, or if it names a provider class that cannot be found and instantiated, or if the result of instantiating the class is not assignable to the service type, or if any other kind of exception or error is thrown as the next provider is located and instantiated. To write robust code it is only necessary to catch &lt;a href=&quot;serviceconfigurationerror&quot;&gt;&lt;code&gt;ServiceConfigurationError&lt;/code&gt;&lt;/a&gt; when using a service iterator.</source>
          <target state="translated">遅延を実現するには、利用可能なプロバイダー構成ファイルを解析し、プロバイダーをインスタンス化する実際の作業を、イテレーター自体が行う必要があります。そのため、プロバイダー構成ファイルが指定された形式に違反している場合、またはプロバイダークラスが見つかり、インスタンス化できない場合、またはクラスのインスタンス化の結果がサービスタイプに割り当て可能でない場合、その&lt;a href=&quot;iterator#hasNext--&quot;&gt; &lt;code&gt;hasNext&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;iterator#next--&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt;メソッドは&lt;a href=&quot;serviceconfigurationerror&quot;&gt; &lt;code&gt;ServiceConfigurationError&lt;/code&gt; を&lt;/a&gt;スローできます。、または次のプロバイダーが検出されてインスタンス化されるときに、他の種類の例外またはエラーがスローされた場合。堅牢なコードを作成するには、サービスイテレータを使用するときに&lt;a href=&quot;serviceconfigurationerror&quot;&gt; &lt;code&gt;ServiceConfigurationError&lt;/code&gt; &lt;/a&gt;をキャッチするだけです。</target>
        </trans-unit>
        <trans-unit id="f660f1fdf02f0b0c53d2e6bfb4da162ba2db350d" translate="yes" xml:space="preserve">
          <source>To add a border around the main viewport, you can use &lt;code&gt;setViewportBorder&lt;/code&gt;. (Of course, you can also add a border around the whole scroll pane using &lt;code&gt;setBorder&lt;/code&gt;.)</source>
          <target state="translated">メインビューポートの周囲に境界線を追加するには、 &lt;code&gt;setViewportBorder&lt;/code&gt; を使用できます。（もちろん、 &lt;code&gt;setBorder&lt;/code&gt; を使用してスクロールペイン全体の周囲に境界線を追加することもできます。）</target>
        </trans-unit>
        <trans-unit id="588767c38b0b444c375dc69fcf2cc26802572150" translate="yes" xml:space="preserve">
          <source>To add a column to this &lt;code&gt;JTable&lt;/code&gt; to display the &lt;code&gt;modelColumn&lt;/code&gt;'th column of data in the model with a given &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;cellRenderer&lt;/code&gt;, and &lt;code&gt;cellEditor&lt;/code&gt; you can use:</source>
          <target state="translated">この &lt;code&gt;JTable&lt;/code&gt; に列を追加して、指定された &lt;code&gt;width&lt;/code&gt; 、 &lt;code&gt;cellRenderer&lt;/code&gt; 、および &lt;code&gt;cellEditor&lt;/code&gt; を使用して、モデル内のモデルのデータの3番目の列を表示するには、 &lt;code&gt;modelColumn&lt;/code&gt; のコマンドを使用できます。</target>
        </trans-unit>
        <trans-unit id="863cc423d428bb677b96e6a9d670999f85be2783" translate="yes" xml:space="preserve">
          <source>To add a coordinate transform, use the &lt;code&gt;transform&lt;/code&gt;, &lt;code&gt;rotate&lt;/code&gt;, &lt;code&gt;scale&lt;/code&gt;, or &lt;code&gt;shear&lt;/code&gt; methods. The &lt;code&gt;setTransform&lt;/code&gt; method is intended only for restoring the original &lt;code&gt;Graphics2D&lt;/code&gt; transform after rendering, as shown in this example:</source>
          <target state="translated">座標変換を追加するには、 &lt;code&gt;transform&lt;/code&gt; 、 &lt;code&gt;rotate&lt;/code&gt; 、 &lt;code&gt;scale&lt;/code&gt; 、または &lt;code&gt;shear&lt;/code&gt; 方法を使用します。 &lt;code&gt;setTransform&lt;/code&gt; の方法は、唯一のオリジナルを復元するためのものである &lt;code&gt;Graphics2D&lt;/code&gt; この例に示すように、レンダリング後に変換します：</target>
        </trans-unit>
        <trans-unit id="e906cc18369f863dd230411fdde5ac28d756e1c8" translate="yes" xml:space="preserve">
          <source>To add a new attribute node with a qualified name and namespace URI, use the &lt;code&gt;setAttributeNodeNS&lt;/code&gt; method.</source>
          <target state="translated">修飾名と名前空間URIを使用して新しい属性ノードを追加するには、 &lt;code&gt;setAttributeNodeNS&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="dff0f41b75b6bfc32af4b34fb312dcecad708cec" translate="yes" xml:space="preserve">
          <source>To add components to the &lt;code&gt;JRootPane&lt;/code&gt; (other than the optional menu bar), you add the object to the &lt;code&gt;contentPane&lt;/code&gt; of the &lt;code&gt;JRootPane&lt;/code&gt;, like this:</source>
          <target state="translated">コンポーネントを &lt;code&gt;JRootPane&lt;/code&gt; （オプションのメニューバー以外）に追加するには、次のようにオブジェクトを &lt;code&gt;JRootPane&lt;/code&gt; の &lt;code&gt;contentPane&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="878ec0869f8701c9d2e6abc0d34c545132ce4951" translate="yes" xml:space="preserve">
          <source>To address this problem, and to simplify the design of clients providing multiple docs to a Print Job, every Print Service proxy that supports multidoc print jobs is required to access a &lt;code&gt;MultiDoc&lt;/code&gt; object using the interleaved pattern. That is, given a &lt;code&gt;MultiDoc&lt;/code&gt; object, the print service proxy will call &lt;a href=&quot;#getDoc()&quot;&gt;&lt;code&gt;getDoc()&lt;/code&gt;&lt;/a&gt; one or more times until it successfully obtains the current &lt;code&gt;Doc&lt;/code&gt; object. The print service proxy will then obtain the current doc's print data, not proceeding until all the print data is obtained or an unrecoverable error occurs. If it is able to continue, the print service proxy will then call &lt;a href=&quot;#next()&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; one or more times until it successfully obtains either the next &lt;code&gt;MultiDoc&lt;/code&gt; object or an indication that there are no more. An implementation of interface &lt;code&gt;MultiDoc&lt;/code&gt; can assume the print service proxy will follow this interleaved pattern; for any other pattern of usage, the &lt;code&gt;MultiDoc&lt;/code&gt; implementation's behavior is unspecified.</source>
          <target state="translated">この問題に対処し、印刷ジョブに複数のドキュメントを提供するクライアントの設計を簡素化するには、マルチドキュメント印刷ジョブをサポートするすべてのプリントサービスプロキシが、インターリーブパターンを使用して &lt;code&gt;MultiDoc&lt;/code&gt; オブジェクトにアクセスする必要があります。つまり、 &lt;code&gt;MultiDoc&lt;/code&gt; オブジェクトが与えられると、印刷サービスプロキシは、現在の &lt;code&gt;Doc&lt;/code&gt; オブジェクトを正常に取得するまで、&lt;a href=&quot;#getDoc()&quot;&gt; &lt;code&gt;getDoc()&lt;/code&gt; を&lt;/a&gt;1回以上呼び出します。次に、印刷サービスプロキシは、現在のドキュメントの印刷データを取得し、すべての印刷データが取得されるか、回復不能なエラーが発生するまで続行しません。続行できる場合、プリントサービスプロキシは、次の &lt;code&gt;MultiDoc&lt;/code&gt; を正常に取得するまで、&lt;a href=&quot;#next()&quot;&gt; &lt;code&gt;next()&lt;/code&gt; を&lt;/a&gt;1回以上呼び出します。オブジェクトまたはこれ以上ないことの表示。インターフェイス &lt;code&gt;MultiDoc&lt;/code&gt; の実装では、印刷サービスプロキシがこのインターリーブパターンに従うと想定できます。その他の使用パターンの場合、 &lt;code&gt;MultiDoc&lt;/code&gt; 実装の動作は指定されていません。</target>
        </trans-unit>
        <trans-unit id="0901ef1364b0bc7003aefcc673f8da9f739ccaea" translate="yes" xml:space="preserve">
          <source>To address this problem, and to simplify the design of clients providing multiple docs to a Print Job, every Print Service proxy that supports multidoc print jobs is required to access a MultiDoc object using the interleaved pattern. That is, given a MultiDoc object, the print service proxy will call &lt;a href=&quot;multidoc#getDoc--&quot;&gt;&lt;code&gt;getDoc()&lt;/code&gt;&lt;/a&gt; one or more times until it successfully obtains the current Doc object. The print service proxy will then obtain the current doc's print data, not proceeding until all the print data is obtained or an unrecoverable error occurs. If it is able to continue, the print service proxy will then call &lt;a href=&quot;multidoc#next--&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; one or more times until it successfully obtains either the next MultiDoc object or an indication that there are no more. An implementation of interface MultiDoc can assume the print service proxy will follow this interleaved pattern; for any other pattern of usage, the MultiDoc implementation's behavior is unspecified.</source>
          <target state="translated">この問題に対処し、印刷ジョブに複数のドキュメントを提供するクライアントの設計を簡略化するには、マルチドキュメント印刷ジョブをサポートするすべてのプリントサービスプロキシが、インターリーブパターンを使用してMultiDocオブジェクトにアクセスする必要があります。つまり、MultiDocオブジェクトが指定されると、印刷サービスプロキシは、現在のDocオブジェクトを正常に取得するまで&lt;a href=&quot;multidoc#getDoc--&quot;&gt; &lt;code&gt;getDoc()&lt;/code&gt; を&lt;/a&gt; 1回以上呼び出します。印刷サービスプロキシは、現在のドキュメントの印刷データを取得し、すべての印刷データが取得されるか、回復不可能なエラーが発生するまで処理を続行しません。続行できる場合、印刷サービスプロキシは&lt;a href=&quot;multidoc#next--&quot;&gt; &lt;code&gt;next()&lt;/code&gt; を&lt;/a&gt;呼び出します次のMultiDocオブジェクトを取得するか、それ以上存在しないという指示を正常に取得するまで1回以上。インターフェイスMultiDocの実装は、印刷サービスプロキシがこのインターリーブパターンに従うと想定できます。その他の使用パターンの場合、MultiDoc実装の動作は指定されていません。</target>
        </trans-unit>
        <trans-unit id="3114b61fabbaf8f1204ff4e332d1d6b4ad9fa1cd" translate="yes" xml:space="preserve">
          <source>To align elements along the baseline you &lt;code&gt;createBaselineGroup&lt;/code&gt;, or &lt;code&gt;createParallelGroup&lt;/code&gt; with an alignment of &lt;code&gt;BASELINE&lt;/code&gt;. If the group was not created with a baseline alignment, and you attempt to add an element specifying a baseline alignment, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">ベースラインに沿って要素を整列するには、 &lt;code&gt;createBaselineGroup&lt;/code&gt; 、または &lt;code&gt;BASELINE&lt;/code&gt; の整列で &lt;code&gt;createParallelGroup&lt;/code&gt; を作成します。グループがベースライン配置で作成されておらず、ベースライン配置を指定する要素を追加しようとすると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="f7c5b88ac19ad6f7230d27dffbaf4dac3bda87a9" translate="yes" xml:space="preserve">
          <source>To allow attribute values to contain both single and double quotes, the apostrophe or single-quote character (') may be represented as &quot;&amp;amp;apos;&quot;, and the double-quote character (&quot;) as &quot;&amp;amp;quot;&quot;. New line characters and other characters that cannot be represented directly in attribute values in the output character encoding are serialized as a numeric character reference.</source>
          <target state="translated">属性値に一重引用符と二重引用符の両方を含めることができるようにするには、アポストロフィまたは一重引用符（ '）を「＆apos;」、二重引用符（ &quot;）を「＆quot;」として表すことができます。出力文字エンコーディングの属性値で直接表すことができない他の文字は、数値文字参照としてシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="7a153e650f00cf6ae0dd2b8b108821031836e76a" translate="yes" xml:space="preserve">
          <source>To allow for concurrent handling of new connections, the completion handler is not invoked directly by the initiating thread when a new connection is accepted immediately (see &lt;a href=&quot;asynchronouschannelgroup#threading&quot;&gt;Threading&lt;/a&gt;).</source>
          <target state="translated">新しい接続の同時処理を可能にするために、新しい接続がすぐに受け入れられたときに、開始ハンドラによって完了ハンドラが直接呼び出されることはありません（「&lt;a href=&quot;asynchronouschannelgroup#threading&quot;&gt;スレッド&lt;/a&gt;」を参照）。</target>
        </trans-unit>
        <trans-unit id="73cb135d1c1301a310f6e0c2ffc775dacbe8133c" translate="yes" xml:space="preserve">
          <source>To allow for interoperability with existing code, a byte buffer view can be obtained from a memory segment (see &lt;a href=&quot;#asByteBuffer()&quot;&gt;&lt;code&gt;asByteBuffer()&lt;/code&gt;&lt;/a&gt;). This can be useful, for instance, for those clients that want to keep using the &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt; API, but need to operate on large memory segments. Byte buffers obtained in such a way support the same spatial and temporal access restrictions associated to the memory segment from which they originated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5a74187e5d5e88e2eac45e5fd470fc826ba10d" translate="yes" xml:space="preserve">
          <source>To allow for upgrading/overriding of modules defined to the platform class loader, and where upgraded modules read modules defined to class loaders other than the platform class loader and its ancestors, then the platform class loader may have to delegate to other class loaders, the application class loader for example. In other words, classes in named modules defined to class loaders other than the platform class loader and its ancestors may be visible to the platform class loader.</source>
          <target state="translated">プラットフォームクラスローダに定義されたモジュールのアップグレード/オーバーライドを可能にするために、アップグレードされたモジュールがプラットフォームクラスローダとその祖先以外のクラスローダに定義されたモジュールを読み込む場合、プラットフォームクラスローダは他のクラスローダ、例えばアプリケーションクラスローダに委任しなければならないかもしれません。言い換えれば、プラットフォームクラスローダとその祖先以外のクラスローダに定義された名前付きモジュール内のクラスは、プラットフォームクラスローダから見えるかもしれません。</target>
        </trans-unit>
        <trans-unit id="b0149ec9554c159ccbe058966b05df35f3701f32" translate="yes" xml:space="preserve">
          <source>To allow subtypes of non-serializable classes to be serialized, the subtype may assume responsibility for saving and restoring the state of the supertype's public, protected, and (if accessible) package fields. The subtype may assume this responsibility only if the class it extends has an accessible no-arg constructor to initialize the class's state. It is an error to declare a class Serializable if this is not the case. The error will be detected at runtime.</source>
          <target state="translated">シリアライズ可能ではないクラスのサブタイプをシリアライズできるようにするために、サブタイプはスーパータイプのpublic、protected、(アクセス可能な場合は)パッケージフィールドの状態を保存したり復元したりする責任を負うことができます。サブタイプがこの責任を負うことができるのは、そのサブタイプが拡張したクラスが、クラスの状態を初期化するためのアクセス可能なno-argコンストラクタを持っている場合のみです。そうでない場合、クラスをSerializableと宣言するのはエラーです。このエラーは実行時に検出されます。</target>
        </trans-unit>
        <trans-unit id="04b02950d208e8aeb726121c4232fee22a90ca25" translate="yes" xml:space="preserve">
          <source>To allow the Relation Service to maintain the consistency (in case of MBean unregistration) and to be able to perform queries, this method must be called when a role is updated.</source>
          <target state="translated">リレーションサービスが(MBeanの未登録の場合)一貫性を維持し、クエリを実行できるようにするためには、ロールが更新されたときにこのメソッドを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="18f203586f552a8bf3e85ed2fd04ae6a1ec1b0c1" translate="yes" xml:space="preserve">
          <source>To assign a specific &lt;code&gt;ProtectionDomain&lt;/code&gt; to the class, use the &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/a&gt; method that takes a &lt;code&gt;ProtectionDomain&lt;/code&gt; as one of its arguments.</source>
          <target state="translated">特定の &lt;code&gt;ProtectionDomain&lt;/code&gt; をクラスに割り当てるには、引数の1つとして &lt;code&gt;ProtectionDomain&lt;/code&gt; をとる&lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt; &lt;code&gt;defineClass&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="098cffcdc8ae98f9e73fb6b3bc4c693ece84d5b2" translate="yes" xml:space="preserve">
          <source>To assign a specific &lt;code&gt;ProtectionDomain&lt;/code&gt; to the class, use the &lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-java.security.ProtectionDomain-&quot;&gt;&lt;code&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method that takes a &lt;code&gt;ProtectionDomain&lt;/code&gt; as one of its arguments.</source>
          <target state="translated">特定の &lt;code&gt;ProtectionDomain&lt;/code&gt; をクラスに割り当てるには、 &lt;code&gt;ProtectionDomain&lt;/code&gt; を引数の1つとして取る&lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-java.security.ProtectionDomain-&quot;&gt; &lt;code&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="cb62f55eef3213cfdfd6d6c4b5d133a0d8886c48" translate="yes" xml:space="preserve">
          <source>To attempt to retain the values of the fields, use &lt;a href=&quot;#atZoneSimilarLocal(java.time.ZoneId)&quot;&gt;&lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;#toZonedDateTime()&quot;&gt;&lt;code&gt;toZonedDateTime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールドの値を保持しようとするには、&lt;a href=&quot;#atZoneSimilarLocal(java.time.ZoneId)&quot;&gt; &lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt; を&lt;/a&gt;使用します。オフセットをゾーンIDとして使用するには、&lt;a href=&quot;#toZonedDateTime()&quot;&gt; &lt;code&gt;toZonedDateTime()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="7963056aeb1e3fe7d72c198290f32b36c2c30f8b" translate="yes" xml:space="preserve">
          <source>To attempt to retain the values of the fields, use &lt;a href=&quot;offsetdatetime#atZoneSimilarLocal-java.time.ZoneId-&quot;&gt;&lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;offsetdatetime#toZonedDateTime--&quot;&gt;&lt;code&gt;toZonedDateTime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールドの値を保持するには、&lt;a href=&quot;offsetdatetime#atZoneSimilarLocal-java.time.ZoneId-&quot;&gt; &lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt; を&lt;/a&gt;使用します。オフセットをゾーンIDとして使用するには、&lt;a href=&quot;offsetdatetime#toZonedDateTime--&quot;&gt; &lt;code&gt;toZonedDateTime()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="c860b82be316c2ebd5b8042b5f2ae32cc26ebbd8" translate="yes" xml:space="preserve">
          <source>To avoid &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;, use the &lt;a href=&quot;#normalizeWith(java.util.Calendar)&quot;&gt;&lt;code&gt;normalizeWith(Calendar)&lt;/code&gt;&lt;/a&gt; method to remove the years and months fields.</source>
          <target state="translated">&lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;を回避するには、&lt;a href=&quot;#normalizeWith(java.util.Calendar)&quot;&gt; &lt;code&gt;normalizeWith(Calendar)&lt;/code&gt; &lt;/a&gt;メソッドを使用して年と月のフィールドを削除します。</target>
        </trans-unit>
        <trans-unit id="6ad427fbbb14d96dd25df6d7ec64c8e355ba9449" translate="yes" xml:space="preserve">
          <source>To avoid calling this method on an invalid string and having a &lt;code&gt;NumberFormatException&lt;/code&gt; be thrown, the documentation for &lt;a href=&quot;double#valueOf(java.lang.String)&quot;&gt;&lt;code&gt;Double.valueOf&lt;/code&gt;&lt;/a&gt; lists a regular expression which can be used to screen the input.</source>
          <target state="translated">無効な文字列でこのメソッドを呼び出して &lt;code&gt;NumberFormatException&lt;/code&gt; がスローされるのを&lt;a href=&quot;double#valueOf(java.lang.String)&quot;&gt; &lt;code&gt;Double.valueOf&lt;/code&gt; &lt;/a&gt;ために、Double.valueOfのドキュメントには、入力のスクリーニングに使用できる正規表現がリストされています。</target>
        </trans-unit>
        <trans-unit id="42d51c18a01968c9e81085024407b1e88d5039d3" translate="yes" xml:space="preserve">
          <source>To avoid calling this method on an invalid string and having a &lt;code&gt;NumberFormatException&lt;/code&gt; be thrown, the documentation for &lt;a href=&quot;double#valueOf-java.lang.String-&quot;&gt;&lt;code&gt;Double.valueOf&lt;/code&gt;&lt;/a&gt; lists a regular expression which can be used to screen the input.</source>
          <target state="translated">無効な文字列でこのメソッドを呼び出して &lt;code&gt;NumberFormatException&lt;/code&gt; がスローされるのを回避するために、&lt;a href=&quot;double#valueOf-java.lang.String-&quot;&gt; &lt;code&gt;Double.valueOf&lt;/code&gt; &lt;/a&gt;のドキュメントには、入力のスクリーニングに使用できる正規表現がリストされています。</target>
        </trans-unit>
        <trans-unit id="5563f0afb09a3844b6d08118ec1a1c5fc780d991" translate="yes" xml:space="preserve">
          <source>To avoid calling this method on an invalid string and having a &lt;code&gt;NumberFormatException&lt;/code&gt; be thrown, the regular expression below can be used to screen the input string:</source>
          <target state="translated">無効な文字列でこのメソッドを呼び出して &lt;code&gt;NumberFormatException&lt;/code&gt; がスローされるのを防ぐために、以下の正規表現を使用して入力文字列をスクリーニングできます。</target>
        </trans-unit>
        <trans-unit id="668d902875e5660f744a686581109ccac6b67276" translate="yes" xml:space="preserve">
          <source>To avoid collisions between MBeans supplied by different vendors, a useful convention is to begin the domain name with the reverse DNS name of the organization that specifies the MBeans, followed by a period and a string whose interpretation is determined by that organization. For example, MBeans specified by &lt;code&gt;example.com&lt;/code&gt; would have domains such as &lt;code&gt;com.example.MyDomain&lt;/code&gt;. This is essentially the same convention as for Java-language package names.</source>
          <target state="translated">異なるベンダーによって提供されるMBean間の衝突を回避するための便利な規則は、ドメイン名をMBeanを指定する組織の逆引きDNS名で開始し、その後にピリオドとその組織によって解釈が決定される文字列を続けることです。たとえば、 &lt;code&gt;example.com&lt;/code&gt; で指定されたMBeanには、 &lt;code&gt;com.example.MyDomain&lt;/code&gt; などのドメインがあります。これは基本的に、Java言語のパッケージ名と同じ規則です。</target>
        </trans-unit>
        <trans-unit id="b11ede55a71c6248b71e81342253042ee5847dea" translate="yes" xml:space="preserve">
          <source>To avoid infinite recursion, if the specified array contains itself as an element, or contains an indirect reference to itself through one or more levels of arrays, the self-reference is converted to the string &lt;code&gt;&quot;[...]&quot;&lt;/code&gt;. For example, an array containing only a reference to itself would be rendered as &lt;code&gt;&quot;[[...]]&quot;&lt;/code&gt;.</source>
          <target state="translated">無限再帰を回避するために、指定された配列自体が要素として含まれている場合、または1つ以上のレベルの配列を介したそれ自体への間接参照が含まれている場合、自己参照は文字列 &lt;code&gt;&quot;[...]&quot;&lt;/code&gt; に変換されます。たとえば、それ自体への参照のみを含む配列は &lt;code&gt;&quot;[[...]]&quot;&lt;/code&gt; としてレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="eb9f7d7071e28faad12ca6077ede6939f3bbcb22" translate="yes" xml:space="preserve">
          <source>To avoid race conditions, calls to &lt;code&gt;setTarget&lt;/code&gt; and &lt;code&gt;syncAll&lt;/code&gt; should generally be performed under some sort of mutual exclusion. Note that reader threads may observe an updated target as early as the &lt;code&gt;setTarget&lt;/code&gt; call that install the value (and before the &lt;code&gt;syncAll&lt;/code&gt; that confirms the value). On the other hand, reader threads may observe previous versions of the target until the &lt;code&gt;syncAll&lt;/code&gt; call returns (and after the &lt;code&gt;setTarget&lt;/code&gt; that attempts to convey the updated version).</source>
          <target state="translated">競合状態を回避するために、 &lt;code&gt;setTarget&lt;/code&gt; および &lt;code&gt;syncAll&lt;/code&gt; の呼び出しは、通常、何らかの相互排除のもとで実行する必要があります。リーダースレッドは、値をインストールする &lt;code&gt;setTarget&lt;/code&gt; 呼び出しと同じくらい早く（および値を確認する &lt;code&gt;syncAll&lt;/code&gt; の前に）、更新されたターゲットを監視する場合があることに注意してください。一方、リーダースレッドは、 &lt;code&gt;syncAll&lt;/code&gt; 呼び出しが戻るまで（および、更新されたバージョンを伝えようとする &lt;code&gt;setTarget&lt;/code&gt; の後で）、ターゲットの以前のバージョンを監視する場合があります。</target>
        </trans-unit>
        <trans-unit id="2403bf2edea6a88cd7277e157f919db06ae3dfc9" translate="yes" xml:space="preserve">
          <source>To avoid subsequent errors, the contents of the class file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion()&quot;&gt;source version&lt;/a&gt; being used for this run.</source>
          <target state="translated">その後のエラーを回避するために、クラスファイルの内容は、この実行に使用されている&lt;a href=&quot;processingenvironment#getSourceVersion()&quot;&gt;ソースバージョン&lt;/a&gt;と互換性がある必要があります。</target>
        </trans-unit>
        <trans-unit id="0b2f4c173618b481634504b07869653ce32189fe" translate="yes" xml:space="preserve">
          <source>To avoid subsequent errors, the contents of the class file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion--&quot;&gt;source version&lt;/a&gt; being used for this run.</source>
          <target state="translated">後続のエラーを回避するには、クラスファイルの内容が、この実行に使用されている&lt;a href=&quot;processingenvironment#getSourceVersion--&quot;&gt;ソースバージョン&lt;/a&gt;と互換性がある必要があります。</target>
        </trans-unit>
        <trans-unit id="fbf4073a8f6efcb281074255c73dab8cf60b1111" translate="yes" xml:space="preserve">
          <source>To avoid subsequent errors, the contents of the source file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion()&quot;&gt;source version&lt;/a&gt; being used for this run.</source>
          <target state="translated">その後のエラーを回避するには、ソースファイルの内容がこの実行に使用されている&lt;a href=&quot;processingenvironment#getSourceVersion()&quot;&gt;ソースバージョン&lt;/a&gt;と互換性がある必要があります。</target>
        </trans-unit>
        <trans-unit id="1aceb19707e74a7f2174ca9ab49548d039860ecb" translate="yes" xml:space="preserve">
          <source>To avoid subsequent errors, the contents of the source file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion--&quot;&gt;source version&lt;/a&gt; being used for this run.</source>
          <target state="translated">後続のエラーを回避するには、ソースファイルの内容が、この実行に使用されている&lt;a href=&quot;processingenvironment#getSourceVersion--&quot;&gt;ソースバージョン&lt;/a&gt;と互換性がある必要があります。</target>
        </trans-unit>
        <trans-unit id="dd2ae549da430ea87fa9d5dcde9da234390b02b0" translate="yes" xml:space="preserve">
          <source>To avoid these potential problems, this exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd35ab6a8c06d360cbb65355b85d9fbf1af619f6" translate="yes" xml:space="preserve">
          <source>To be added as a relation, the MBean must conform to the following:</source>
          <target state="translated">リレーションとして追加されるためには、MBeanは以下の条件を満たす必要があります。</target>
        </trans-unit>
        <trans-unit id="369feee215b2d206e27e067d4a8327d9b7ec460b" translate="yes" xml:space="preserve">
          <source>To be compliant with the spec, the implementation is only required to support W3C XML Schema 1.0. However, if it chooses to support other schema languages listed here, it must conform to the relevant behaviors described in this spec.</source>
          <target state="translated">この仕様に準拠するためには、実装はW3C XML Schema 1.0をサポートすることだけが要求される。しかし、ここにリストアップされている他のスキーマ言語をサポートすることを選択した場合、この仕様で説明されている関連する動作に準拠しなければなりません。</target>
        </trans-unit>
        <trans-unit id="bfee6b585f8f264404435c5e1eb3afcaa0fe2b44" translate="yes" xml:space="preserve">
          <source>To be functional, the filter should allow at least all the concrete types in the transitive closure of all objects that might get serialized when serializing all JMX classes referred as parameters in the &lt;a href=&quot;rmiconnection&quot;&gt;&lt;code&gt;RMIConnection&lt;/code&gt;&lt;/a&gt; interface, plus all classes that a &lt;a href=&quot;rmiconnector&quot;&gt;&lt;code&gt;client&lt;/code&gt;&lt;/a&gt; might need to transmit wrapped in &lt;a href=&quot;../../../../../java.rmi/java/rmi/marshalledobject&quot;&gt;marshalled objects&lt;/a&gt; in order to interoperate with the MBeans registered in the &lt;code&gt;MBeanServer&lt;/code&gt;. That would potentially include all the concrete &lt;a href=&quot;../../../../../java.management/javax/management/openmbean/package-summary&quot;&gt;JMX OpenTypes&lt;/a&gt; and the classes they use in their serial form.</source>
          <target state="translated">フィルタを機能させるには、&lt;a href=&quot;rmiconnection&quot;&gt; &lt;code&gt;RMIConnection&lt;/code&gt; &lt;/a&gt;インターフェイスでパラメータと呼ばれるすべてのJMXクラスをシリアル化するときにシリアル化される可能性のあるすべてのオブジェクトの推移閉包に加えて、&lt;a href=&quot;rmiconnector&quot;&gt; &lt;code&gt;client&lt;/code&gt; &lt;/a&gt;が送信する必要がある可能性のあるすべてのクラスの少なくともすべての具象型を許可する必要があります。 &lt;code&gt;MBeanServer&lt;/code&gt; に登録されているMBeanと相互運用するために&lt;a href=&quot;../../../../../java.rmi/java/rmi/marshalledobject&quot;&gt;オブジェクト&lt;/a&gt;をマーシャリングしました。これには、すべての具体的な&lt;a href=&quot;../../../../../java.management/javax/management/openmbean/package-summary&quot;&gt;JMXOpenType&lt;/a&gt;とそれらがシリアル形式で使用するクラスが含まれる可能性があります。</target>
        </trans-unit>
        <trans-unit id="c929685592eb7dd72839b0b7ddca865cf01e746f" translate="yes" xml:space="preserve">
          <source>To be handled as a relation, the &lt;code&gt;RelationSupport&lt;/code&gt; object has to be added to the Relation Service using the Relation Service method addRelation().</source>
          <target state="translated">関係として処理するには、 &lt;code&gt;RelationSupport&lt;/code&gt; オブジェクトを、関係サービスメソッドaddRelation（）を使用して関係サービスに追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="a748dd0e04f95aff698fcdef2145934fa8ff1739" translate="yes" xml:space="preserve">
          <source>To be implemented by a any class acting as a notification filter.</source>
          <target state="translated">通知フィルタとして動作する任意のクラスによって実装されます。</target>
        </trans-unit>
        <trans-unit id="0bea40cd4dd3d35083217eb1e5827a09e2816a62" translate="yes" xml:space="preserve">
          <source>To be implemented by a any class acting as a notification filter. It allows a registered notification listener to filter the notifications of interest.</source>
          <target state="translated">通知フィルタとして動作する任意のクラスによって実装されます。これは、登録された通知リスナーが関心のある通知をフィルタリングすることを可能にします。</target>
        </trans-unit>
        <trans-unit id="3fa1f94f9b6a662f59e0397dd2d57a3b1cf7527b" translate="yes" xml:space="preserve">
          <source>To be robust when running in different tool implementations, an annotation processor should have the following properties:</source>
          <target state="translated">異なるツールの実装で実行した場合にロバストになるように、アノテーションプロセッサは以下のプロパティを持っている必要があります。</target>
        </trans-unit>
        <trans-unit id="7365d81ddb8a3e13e3c1703bdd0a47167098d97a" translate="yes" xml:space="preserve">
          <source>To be useful across a wide range of contexts, this class provides many adjustable parameters and extensibility hooks. However, programmers are urged to use the more convenient &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; factory methods &lt;a href=&quot;executors#newCachedThreadPool()&quot;&gt;&lt;code&gt;Executors.newCachedThreadPool()&lt;/code&gt;&lt;/a&gt; (unbounded thread pool, with automatic thread reclamation), &lt;a href=&quot;executors#newFixedThreadPool(int)&quot;&gt;&lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt;&lt;/a&gt; (fixed size thread pool) and &lt;a href=&quot;executors#newSingleThreadExecutor()&quot;&gt;&lt;code&gt;Executors.newSingleThreadExecutor()&lt;/code&gt;&lt;/a&gt; (single background thread), that preconfigure settings for the most common usage scenarios. Otherwise, use the following guide when manually configuring and tuning this class:</source>
          <target state="translated">このクラスは、さまざまなコンテキストで役立つように、多くの調整可能なパラメーターと拡張性フックを提供します。ただし、プログラマーは、より便利な&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;ファクトリメソッド&lt;a href=&quot;executors#newCachedThreadPool()&quot;&gt; &lt;code&gt;Executors.newCachedThreadPool()&lt;/code&gt; &lt;/a&gt;（無制限のスレッドプール、自動スレッド再利用付き）、&lt;a href=&quot;executors#newFixedThreadPool(int)&quot;&gt; &lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt; &lt;/a&gt;（固定サイズのスレッドプール）、および&lt;a href=&quot;executors#newSingleThreadExecutor()&quot;&gt; &lt;code&gt;Executors.newSingleThreadExecutor()&lt;/code&gt; &lt;/a&gt;（単一のバックグラウンド）を使用することをお勧めします。スレッド）、最も一般的な使用シナリオの設定を事前構成します。それ以外の場合は、このクラスを手動で構成および調整するときに、次のガイドを使用してください。</target>
        </trans-unit>
        <trans-unit id="88dbdb72a8dc5710ba81907c1d505d6f93d8a007" translate="yes" xml:space="preserve">
          <source>To be useful across a wide range of contexts, this class provides many adjustable parameters and extensibility hooks. However, programmers are urged to use the more convenient &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; factory methods &lt;a href=&quot;executors#newCachedThreadPool--&quot;&gt;&lt;code&gt;Executors.newCachedThreadPool()&lt;/code&gt;&lt;/a&gt; (unbounded thread pool, with automatic thread reclamation), &lt;a href=&quot;executors#newFixedThreadPool-int-&quot;&gt;&lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt;&lt;/a&gt; (fixed size thread pool) and &lt;a href=&quot;executors#newSingleThreadExecutor--&quot;&gt;&lt;code&gt;Executors.newSingleThreadExecutor()&lt;/code&gt;&lt;/a&gt; (single background thread), that preconfigure settings for the most common usage scenarios. Otherwise, use the following guide when manually configuring and tuning this class:</source>
          <target state="translated">このクラスは、幅広いコンテキストで役立つように、多くの調整可能なパラメーターと拡張性フックを提供します。ただし、プログラマーには、より便利な&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;ファクトリーメソッド&lt;a href=&quot;executors#newCachedThreadPool--&quot;&gt; &lt;code&gt;Executors.newCachedThreadPool()&lt;/code&gt; &lt;/a&gt;（無制限のスレッドプール、自動スレッド再利用あり）、&lt;a href=&quot;executors#newFixedThreadPool-int-&quot;&gt; &lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt; &lt;/a&gt;（固定サイズのスレッドプール）、および&lt;a href=&quot;executors#newSingleThreadExecutor--&quot;&gt; &lt;code&gt;Executors.newSingleThreadExecutor()&lt;/code&gt; &lt;/a&gt;（単一の背景）を使用することをお勧めします。スレッド）、最も一般的な使用シナリオの設定を事前構成します。それ以外の場合は、このクラスを手動で構成および調整するときに、次のガイドを使用してください。</target>
        </trans-unit>
        <trans-unit id="2af1c11afc8cfc4b7a8797ee836b3f9f4ad2b42e" translate="yes" xml:space="preserve">
          <source>To be useful, an MBean must be registered in an &lt;em&gt;MBean Server&lt;/em&gt;. An MBean Server is a repository of MBeans. Usually the only access to the MBeans is through the MBean Server. In other words, code no longer accesses the Java object implementing the MBean directly, but instead accesses the MBean by name through the MBean Server. Each MBean has a unique name within the MBean Server, defined by the &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">役立つためには、&lt;em&gt;MBeanがMBeanサーバーに&lt;/em&gt;登録されている必要があり&lt;em&gt;ます&lt;/em&gt;。MBeanサーバーはMBeanのリポジトリです。通常、MBeanへの唯一のアクセスは、MBeanサーバーを介したものです。つまり、コードはMBeanを実装するJavaオブジェクトに直接アクセスするのではなく、MBeanサーバーを介して名前でMBeanにアクセスします。各MBeanは、&lt;a href=&quot;objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;クラスで定義されたMBeanサーバー内で一意の名前を持っています。</target>
        </trans-unit>
        <trans-unit id="d7d65dc6887ac1dd59675099ed4d4af3e8a59cf9" translate="yes" xml:space="preserve">
          <source>To be valid, the local date-time must not be in a gap and the offset must match one of the valid offsets.</source>
          <target state="translated">有効であるためには、ローカルの日付時刻がギャップ内にあってはならず、オフセットは有効なオフセットの1つと一致していなければなりません。</target>
        </trans-unit>
        <trans-unit id="595d2bea644f826bf905ff99aa32537c17280ff0" translate="yes" xml:space="preserve">
          <source>To build a view of the model, one of the following strategies can be employed.</source>
          <target state="translated">モデルのビューを構築するには、以下の戦略のいずれかを採用することができます。</target>
        </trans-unit>
        <trans-unit id="54feb46700524af6a40f21fc6cd8b80d114ab55c" translate="yes" xml:space="preserve">
          <source>To cancel the remapping reload instrument &lt;code&gt;from&lt;/code&gt; by invoking one of &lt;a href=&quot;#loadInstrument(javax.sound.midi.Instrument)&quot;&gt;&lt;code&gt;loadInstrument(javax.sound.midi.Instrument)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#loadInstruments(javax.sound.midi.Soundbank,javax.sound.midi.Patch%5B%5D)&quot;&gt;&lt;code&gt;loadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#loadAllInstruments(javax.sound.midi.Soundbank)&quot;&gt;&lt;code&gt;loadAllInstruments(javax.sound.midi.Soundbank)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">再マッピングリロード器具をキャンセルする &lt;code&gt;from&lt;/code&gt; の呼び出しによって&lt;a href=&quot;#loadInstrument(javax.sound.midi.Instrument)&quot;&gt; &lt;code&gt;loadInstrument(javax.sound.midi.Instrument)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#loadInstruments(javax.sound.midi.Soundbank,javax.sound.midi.Patch%5B%5D)&quot;&gt; &lt;code&gt;loadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#loadAllInstruments(javax.sound.midi.Soundbank)&quot;&gt; &lt;code&gt;loadAllInstruments(javax.sound.midi.Soundbank)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4d1dda8f60be6ccdd68366fa5b3526dbaaf5e344" translate="yes" xml:space="preserve">
          <source>To cancel the remapping reload instrument &lt;code&gt;from&lt;/code&gt; by invoking one of &lt;a href=&quot;synthesizer#loadInstrument-javax.sound.midi.Instrument-&quot;&gt;&lt;code&gt;loadInstrument(javax.sound.midi.Instrument)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;synthesizer#loadInstruments-javax.sound.midi.Soundbank-javax.sound.midi.Patch:A-&quot;&gt;&lt;code&gt;loadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;synthesizer#loadAllInstruments-javax.sound.midi.Soundbank-&quot;&gt;&lt;code&gt;loadAllInstruments(javax.sound.midi.Soundbank)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">再マッピングリロード器具をキャンセルする &lt;code&gt;from&lt;/code&gt; の呼び出しによって&lt;a href=&quot;synthesizer#loadInstrument-javax.sound.midi.Instrument-&quot;&gt; &lt;code&gt;loadInstrument(javax.sound.midi.Instrument)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;synthesizer#loadInstruments-javax.sound.midi.Soundbank-javax.sound.midi.Patch:A-&quot;&gt; &lt;code&gt;loadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;synthesizer#loadAllInstruments-javax.sound.midi.Soundbank-&quot;&gt; &lt;code&gt;loadAllInstruments(javax.sound.midi.Soundbank)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c755469e1f8e95c5db1f4257371feede4267c06" translate="yes" xml:space="preserve">
          <source>To change the offset while keeping the local time, use &lt;a href=&quot;#withZoneSameLocal(java.time.ZoneId)&quot;&gt;&lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現地時間を維持しながらオフセットを変更するには、&lt;a href=&quot;#withZoneSameLocal(java.time.ZoneId)&quot;&gt; &lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="9be8336b7115a72362232acff67cab5d31ad64ab" translate="yes" xml:space="preserve">
          <source>To change the offset while keeping the local time, use &lt;a href=&quot;chronozoneddatetime#withZoneSameLocal-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ローカル時間を維持しながらオフセットを変更するには、&lt;a href=&quot;chronozoneddatetime#withZoneSameLocal-java.time.ZoneId-&quot;&gt; &lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="ba22c3c91be7bb4a1b614e70312b432e314453d5" translate="yes" xml:space="preserve">
          <source>To change the offset while keeping the local time, use &lt;a href=&quot;zoneddatetime#withZoneSameLocal-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ローカル時間を維持しながらオフセットを変更するには、&lt;a href=&quot;zoneddatetime#withZoneSameLocal-java.time.ZoneId-&quot;&gt; &lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="28e48054f0c3e60dffb2e6a36bf0cd3e64b7398f" translate="yes" xml:space="preserve">
          <source>To change the offset without adjusting the local time use &lt;a href=&quot;#withOffsetSameLocal(java.time.ZoneOffset)&quot;&gt;&lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現地時間を調整せずにオフセットを変更するには、&lt;a href=&quot;#withOffsetSameLocal(java.time.ZoneOffset)&quot;&gt; &lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="3fec9c95a4da51399394703581f182ba52a20925" translate="yes" xml:space="preserve">
          <source>To change the offset without adjusting the local time use &lt;a href=&quot;offsetdatetime#withOffsetSameLocal-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現地時間を調整せずにオフセットを変更するには、&lt;a href=&quot;offsetdatetime#withOffsetSameLocal-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="7a8364aad1736c04d486c11667371207fe4ea657" translate="yes" xml:space="preserve">
          <source>To change the offset without adjusting the local time use &lt;a href=&quot;offsettime#withOffsetSameLocal-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現地時間を調整せずにオフセットを変更するには、&lt;a href=&quot;offsettime#withOffsetSameLocal-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="147c0b430daa82e45aff80a01b0bd18d8fedb718" translate="yes" xml:space="preserve">
          <source>To change the returned value it is necessary to set the &lt;code&gt;sun.awt.enableExtraMouseButtons&lt;/code&gt; property before the &lt;code&gt;Toolkit&lt;/code&gt; class initialization. This setting could be done on the application startup by the following command:</source>
          <target state="translated">戻り値を変更するには、 &lt;code&gt;Toolkit&lt;/code&gt; クラスを初期化する前に &lt;code&gt;sun.awt.enableExtraMouseButtons&lt;/code&gt; プロパティを設定する必要があります。この設定は、アプリケーションの起動時に次のコマンドで実行できます。</target>
        </trans-unit>
        <trans-unit id="624f42a2ec9597a5fa8bf860e5c53714b80e1ade" translate="yes" xml:space="preserve">
          <source>To change the zone and adjust the local date-time, use &lt;a href=&quot;#withZoneSameInstant(java.time.ZoneId)&quot;&gt;&lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ゾーンを変更してローカルの日時を調整するには、&lt;a href=&quot;#withZoneSameInstant(java.time.ZoneId)&quot;&gt; &lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="54d53b327a76d23201fb03d673f3a5e3ba6d80dc" translate="yes" xml:space="preserve">
          <source>To change the zone and adjust the local date-time, use &lt;a href=&quot;chronozoneddatetime#withZoneSameInstant-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ゾーンを変更してローカルの日時を調整するには、&lt;a href=&quot;chronozoneddatetime#withZoneSameInstant-java.time.ZoneId-&quot;&gt; &lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="d2bb8e9dce97fedd17ba93b900abfb561816c1a4" translate="yes" xml:space="preserve">
          <source>To change the zone and adjust the local date-time, use &lt;a href=&quot;zoneddatetime#withZoneSameInstant-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ゾーンを変更してローカルの日時を調整するには、&lt;a href=&quot;zoneddatetime#withZoneSameInstant-java.time.ZoneId-&quot;&gt; &lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="7e2c58b787e33fb2498ddf879b308c08f5de4333" translate="yes" xml:space="preserve">
          <source>To compare elapsed time against a timeout, use</source>
          <target state="translated">経過時間とタイムアウトを比較するには</target>
        </trans-unit>
        <trans-unit id="c019e479f28fa520e4b25c1389f58c638560ba3a" translate="yes" xml:space="preserve">
          <source>To compare the dates of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, including dates in two different chronologies, use &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">2つの異なる年代の日付を含む2つの &lt;code&gt;TemporalAccessor&lt;/code&gt; インスタンスの日付を比較するには、コンパ&lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt;としてChronoField.EPOCH_DAYを使用します。</target>
        </trans-unit>
        <trans-unit id="fe4f722fe3026ef77704c6c722d1dd4b2c998af4" translate="yes" xml:space="preserve">
          <source>To compare the underlying local time of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, use &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">2つの &lt;code&gt;TemporalAccessor&lt;/code&gt; インスタンスの基礎となる現地時間を比較するには、&lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt; をコンパレーター&lt;/a&gt;として使用します。</target>
        </trans-unit>
        <trans-unit id="245c4d91674938b9243301b17cdfbec11707bbd6" translate="yes" xml:space="preserve">
          <source>To compare two nanoTime values</source>
          <target state="translated">2つのnanoTime値を比較するには</target>
        </trans-unit>
        <trans-unit id="d78c279d229f78f77095561ee9065cfa4d49c959" translate="yes" xml:space="preserve">
          <source>To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest input stream's &lt;a href=&quot;#read()&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">メッセージダイジェストの計算を完了するには、このダイジェスト入力ストリームの&lt;a href=&quot;#read()&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;メソッドの1つを呼び出した後、関連するメッセージダイジェストの &lt;code&gt;digest&lt;/code&gt; メソッドの1つを呼び出します。</target>
        </trans-unit>
        <trans-unit id="db54c8f8a02c8d006edd754b51f4c637374eadf8" translate="yes" xml:space="preserve">
          <source>To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest input stream's &lt;a href=&quot;digestinputstream#read--&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">メッセージダイジェストの計算を完了するには、このダイジェスト入力ストリームの&lt;a href=&quot;digestinputstream#read--&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;メソッドの1つを呼び出した後に、関連するメッセージダイジェストで &lt;code&gt;digest&lt;/code&gt; メソッドの1つを呼び出します。</target>
        </trans-unit>
        <trans-unit id="39e64b299ba8072e1d29e749493f1e4a0a967d71" translate="yes" xml:space="preserve">
          <source>To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest output stream's &lt;a href=&quot;#write(int)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">メッセージダイジェストの計算を完了するには、このダイジェスト出力ストリームの&lt;a href=&quot;#write(int)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;メソッドの1つを呼び出した後、関連するメッセージダイジェストの &lt;code&gt;digest&lt;/code&gt; メソッドの1つを呼び出します。</target>
        </trans-unit>
        <trans-unit id="6ca822c9d032e884c819b5572500df5caeb9a899" translate="yes" xml:space="preserve">
          <source>To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest output stream's &lt;a href=&quot;digestoutputstream#write-int-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">メッセージダイジェストの計算を完了するには、このダイジェスト出力ストリームの&lt;a href=&quot;digestoutputstream#write-int-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;メソッドの1つを呼び出した後に、関連するメッセージダイジェストで &lt;code&gt;digest&lt;/code&gt; メソッドの1つを呼び出します。</target>
        </trans-unit>
        <trans-unit id="2842855a6f62843707f8d500baadc11f1c0ff16e" translate="yes" xml:space="preserve">
          <source>To completely reinitialize a configuration, an application can first call &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; to fully remove the old configuration, followed by &lt;code&gt;updateConfiguration&lt;/code&gt; to initialize the new configuration.</source>
          <target state="translated">構成を完全に再初期化するために、アプリケーションは最初に&lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;を呼び出して古い構成を完全に削除し、次に &lt;code&gt;updateConfiguration&lt;/code&gt; を呼び出して新しい構成を初期化できます。</target>
        </trans-unit>
        <trans-unit id="1ab7339ad50ef1a66106e4edb66c156331356176" translate="yes" xml:space="preserve">
          <source>To compute the return value's &lt;code&gt;TimeZone&lt;/code&gt; field,</source>
          <target state="translated">戻り値の &lt;code&gt;TimeZone&lt;/code&gt; フィールドを計算するには、</target>
        </trans-unit>
        <trans-unit id="3f9547964c2738ed3c0c39daef4a026c54f8594a" translate="yes" xml:space="preserve">
          <source>To conform with the definition of SQL &lt;code&gt;DATE&lt;/code&gt;, the millisecond values wrapped by a &lt;code&gt;java.sql.Date&lt;/code&gt; instance must be 'normalized' by setting the hours, minutes, seconds, and milliseconds to zero in the particular time zone with which the instance is associated.</source>
          <target state="translated">SQL &lt;code&gt;DATE&lt;/code&gt; の定義に準拠するには、 &lt;code&gt;java.sql.Date&lt;/code&gt; インスタンスによってラップされたミリ秒の値を、インスタンスが関連付けられている特定のタイムゾーンで時間、分、秒、およびミリ秒をゼロに設定して「正規化」する必要があります。 。</target>
        </trans-unit>
        <trans-unit id="adf07d8e8c9cb7ddafb1c87b428791695f534b6e" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtCompleted attribute. To convert a &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; attribute.</source>
          <target state="translated">構築するには &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; のように年、月、日、時間、分など個々の値から属性を、そして、使用&lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;構築するためにオブジェクトを&lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;、その後、オブジェクトを使用して&lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;DateTimeAtCompleted属性を構築するためにオブジェクトを。 &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; 属性を年、月、日、時、分などの個別の値に変換するには、&lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;オブジェクトを作成し、 &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; 属性から&lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; に&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="441fb7b971ccd667f32f69486a486691e495eadd" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;DateTimeAtCreation&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtCreation attribute. To convert a &lt;code&gt;DateTimeAtCreation&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the &lt;code&gt;DateTimeAtCreation&lt;/code&gt; attribute.</source>
          <target state="translated">構築するには &lt;code&gt;DateTimeAtCreation&lt;/code&gt; のように年、月、日、時間、分など個々の値から属性を、そして、使用&lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;構築するためにオブジェクトを&lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;、その後、オブジェクトを使用して&lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;DateTimeAtCreation属性を構築するためにオブジェクトを。 &lt;code&gt;DateTimeAtCreation&lt;/code&gt; 属性を年、月、日、時、分などの個別の値に変換するには、&lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;オブジェクトを作成し、 &lt;code&gt;DateTimeAtCreation&lt;/code&gt; 属性から&lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; に&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="286b9b18c7f4ba8aa3dfde3d3505bcf887aed71a" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtProcessing attribute. To convert a &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; attribute.</source>
          <target state="translated">構築するために、 &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; のように年、月、日、時間、分など個々の値から属性を、そして、使用&lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;構築するためにオブジェクトを&lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;、その後、オブジェクトを使用して&lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;DateTimeAtProcessing属性を構築するためにオブジェクトを。 &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; 属性を年、月、日、時、分などの個別の値に変換するには、&lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;オブジェクトを作成し、 &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; 属性から&lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; に&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="a2d2e3b87007882e866b73b9b88a688504813bb1" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute. To convert a &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute.</source>
          <target state="translated">構築するには &lt;code&gt;JobHoldUntil&lt;/code&gt; のように年、月、日、時間、分など個々の値から属性を、そして、使用&lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;構築するためにオブジェクトを&lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;、その後、オブジェクトを使用して&lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;構築するためにオブジェクトを &lt;code&gt;JobHoldUntil&lt;/code&gt; の属性を。 &lt;code&gt;JobHoldUntil&lt;/code&gt; 属性を年、月、日、時、分などの個別の値に変換するには、&lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;オブジェクトを作成し、 &lt;code&gt;JobHoldUntil&lt;/code&gt; 属性から&lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; に&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="4e85b1ac5bb1ea53e984d6388f99052847f6c694" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;SimpleTimeZone&lt;/code&gt; with a daylight saving time schedule, the schedule can be described with a set of rules, &lt;em&gt;start-rule&lt;/em&gt; and &lt;em&gt;end-rule&lt;/em&gt;. A day when daylight saving time starts or ends is specified by a combination of &lt;em&gt;month&lt;/em&gt;, &lt;em&gt;day-of-month&lt;/em&gt;, and &lt;em&gt;day-of-week&lt;/em&gt; values. The &lt;em&gt;month&lt;/em&gt; value is represented by a Calendar &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field value, such as &lt;a href=&quot;calendar#MARCH&quot;&gt;&lt;code&gt;Calendar.MARCH&lt;/code&gt;&lt;/a&gt;. The &lt;em&gt;day-of-week&lt;/em&gt; value is represented by a Calendar &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; value, such as &lt;a href=&quot;calendar#SUNDAY&quot;&gt;&lt;code&gt;SUNDAY&lt;/code&gt;&lt;/a&gt;. The meanings of value combinations are as follows.</source>
          <target state="translated">夏時間スケジュールを使用して &lt;code&gt;SimpleTimeZone&lt;/code&gt; を構築するには、スケジュールを一連のルール&lt;em&gt;start-rule&lt;/em&gt;と&lt;em&gt;end-rule&lt;/em&gt;で記述できます。夏時間が開始または終了する&lt;em&gt;日&lt;/em&gt;は、&lt;em&gt;month&lt;/em&gt;、&lt;em&gt;day-of-month&lt;/em&gt;、および&lt;em&gt;day-of-weekの&lt;/em&gt;値の組み合わせによって指定されます。&lt;em&gt;月の&lt;/em&gt;値はカレンダーで表される&lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; の&lt;/a&gt;ようなフィールド値、&lt;a href=&quot;calendar#MARCH&quot;&gt; &lt;code&gt;Calendar.MARCH&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;曜日の&lt;/em&gt;値はカレンダーで表される&lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; の&lt;/a&gt;ような値、&lt;a href=&quot;calendar#SUNDAY&quot;&gt; &lt;code&gt;SUNDAY&lt;/code&gt; &lt;/a&gt;。値の組み合わせの意味は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="25bcc41bb9be6142d4b382a35be675feb6b382ec" translate="yes" xml:space="preserve">
          <source>To construct a DateTimeAtCompleted attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtCompleted attribute. To convert a DateTimeAtCompleted attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the DateTimeAtCompleted attribute.</source>
          <target state="translated">年、月、日、時間、分など個々の値からDateTimeAtCompleted属性を構築し、するには、使用する&lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;構築するためにオブジェクトを&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;、その後、オブジェクトを使用して&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; DateTimeAtCompleted属性を構築するためにオブジェクトを。 DateTimeAtCompleted属性を年、月、日、時、分などの個別の値に変換するには、&lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;オブジェクトを作成し、DateTimeAtCompleted属性から&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; に&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="fa286d2c9331083538f7b2483ba40d01066c7be7" translate="yes" xml:space="preserve">
          <source>To construct a DateTimeAtCreation attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtCreation attribute. To convert a DateTimeAtCreation attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the DateTimeAtCreation attribute.</source>
          <target state="translated">年、月、日、時間、分など個々の値からDateTimeAtCreation属性を構築し、するには、使用する&lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;構築するためにオブジェクトを&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;、その後、オブジェクトを使用して&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; DateTimeAtCreation属性を構築するためにオブジェクトを。 DateTimeAtCreation属性を年、月、日、時、分などの個別の値に変換するには、&lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;オブジェクトを作成し、DateTimeAtCreation属性から&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; に&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="74dd642a97b53fdc97dc32a69febd07a2a41f613" translate="yes" xml:space="preserve">
          <source>To construct a DateTimeAtProcessing attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtProcessing attribute. To convert a DateTimeAtProcessing attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the DateTimeAtProcessing attribute.</source>
          <target state="translated">年、月、日、時間、分など個々の値からDateTimeAtProcessing属性を構築し、するには、使用する&lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;構築するためにオブジェクトを&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;、その後、オブジェクトを使用して&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; DateTimeAtProcessing属性を構築するためにオブジェクトを。 DateTimeAtProcessing属性を年、月、日、時、分などの個別の値に変換するには、&lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;オブジェクトを作成し、DateTimeAtProcessing属性から&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; に&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="d51e72cb883d367f9e951d82f4b8bfada0f7edfe" translate="yes" xml:space="preserve">
          <source>To construct a JobHoldUntil attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the JobHoldUntil attribute. To convert a JobHoldUntil attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the JobHoldUntil attribute.</source>
          <target state="translated">年、月、日、時間、分など個々の値からJobHoldUntil属性を構築し、するには、使用する&lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;構築するためにオブジェクトを&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;、その後、オブジェクトを使用して&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; JobHoldUntil属性を構築するためにオブジェクトを。 JobHoldUntil属性を年、月、日、時、分などの個別の値に変換するには、&lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;オブジェクトを作成し、JobHoldUntil属性から&lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="69c0b94087d4d39699cf7eb51758827f396e268e" translate="yes" xml:space="preserve">
          <source>To construct a date-time attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;code&gt;java.util.Calendar&lt;/code&gt; object to construct a &lt;code&gt;java.util.Date&lt;/code&gt; object, then use the &lt;code&gt;java.util.Date&lt;/code&gt; object to construct the date-time attribute. To convert a date-time attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;code&gt;java.util.Calendar&lt;/code&gt; object and set it to the &lt;code&gt;java.util.Date&lt;/code&gt; from the date-time attribute. Class &lt;code&gt;DateTimeSyntax&lt;/code&gt; stores its value in the form of a &lt;code&gt;java.util.Date&lt;/code&gt; rather than a &lt;code&gt;java.util.Calendar&lt;/code&gt; because it typically takes less memory to store and less time to compare a &lt;code&gt;java.util.Date&lt;/code&gt; than a &lt;code&gt;java.util.Calendar&lt;/code&gt;.</source>
          <target state="translated">別の年の値は、月、日、時、分、などから、日付と時刻属性を構築し、使用するには、 &lt;code&gt;java.util.Calendar&lt;/code&gt; のを構築するためにオブジェクトを &lt;code&gt;java.util.Date&lt;/code&gt; のオブジェクトを、そして使用 &lt;code&gt;java.util.Date&lt;/code&gt; 日時属性を作成するための.Dateオブジェクト。日時属性を年、月、日、時、分などの個別の値に変換するには、 &lt;code&gt;java.util.Calendar&lt;/code&gt; オブジェクトを作成し、日時属性から &lt;code&gt;java.util.Date&lt;/code&gt; に設定します。 。クラス &lt;code&gt;DateTimeSyntax&lt;/code&gt; は、の形でその値を格納する &lt;code&gt;java.util.Date&lt;/code&gt; なく &lt;code&gt;java.util.Calendar&lt;/code&gt; のそれは典型的に比較するためにストアと短い時間に、より少ないメモリを要するため &lt;code&gt;java.util.Date&lt;/code&gt; よりも &lt;code&gt;java.util.Calendar&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db92a2c6c7f08bf559d61fcd335d1b352eb04511" translate="yes" xml:space="preserve">
          <source>To construct a date-time attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;code&gt;java.util.Calendar&lt;/code&gt; object to construct a &lt;code&gt;java.util.Date&lt;/code&gt; object, then use the &lt;code&gt;java.util.Date&lt;/code&gt; object to construct the date-time attribute. To convert a date-time attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;code&gt;java.util.Calendar&lt;/code&gt; object and set it to the &lt;code&gt;java.util.Date&lt;/code&gt; from the date-time attribute. Class DateTimeSyntax stores its value in the form of a &lt;code&gt;java.util.Date
 &lt;/code&gt; rather than a &lt;code&gt;java.util.Calendar&lt;/code&gt; because it typically takes less memory to store and less time to compare a &lt;code&gt;java.util.Date&lt;/code&gt; than a &lt;code&gt;java.util.Calendar&lt;/code&gt;.</source>
          <target state="translated">別の年の値は、月、日、時、分、などから、日付と時刻属性を構築し、使用するには、 &lt;code&gt;java.util.Calendar&lt;/code&gt; のを構築するためにオブジェクトを &lt;code&gt;java.util.Date&lt;/code&gt; のオブジェクトを、そして使用 &lt;code&gt;java.util.Date&lt;/code&gt; オブジェクトを使用して、日時属性を構築します。日時属性を年、月、日、時、分などの個別の値に変換するには、 &lt;code&gt;java.util.Calendar&lt;/code&gt; オブジェクトを作成し、日時属性から &lt;code&gt;java.util.Date&lt;/code&gt; に設定します。 。 DateTimeSyntaxクラスは、の形でその値を格納する &lt;code&gt;java.util.Date &lt;/code&gt; なく &lt;code&gt;java.util.Calendar&lt;/code&gt; のそれは典型的に比較するためにストアと短い時間に、より少ないメモリを要するので、 &lt;code&gt;java.util.Date&lt;/code&gt; を &lt;code&gt;java.util.Calendar&lt;/code&gt; よりも。</target>
        </trans-unit>
        <trans-unit id="087aae889fb70843b3991a318cba4a5735f9cb01" translate="yes" xml:space="preserve">
          <source>To continue the operation, the client program should re-invoke the method using the same arguments as the original invocation.</source>
          <target state="translated">操作を継続するために、クライアントプログラムは、元の呼び出しと同じ引数を使用してメソッドを再呼び出しする必要があります。</target>
        </trans-unit>
        <trans-unit id="e7a3e03976d269ce626f879a0166b160687d59f1" translate="yes" xml:space="preserve">
          <source>To control receiving of messages, a WebSocket maintains an &lt;a id=&quot;counter&quot;&gt;internal counter&lt;/a&gt;. This counter's value is a number of times the WebSocket has yet to invoke a receive method. While this counter is zero the WebSocket does not invoke receive methods. The counter is incremented by &lt;code&gt;n&lt;/code&gt; when &lt;code&gt;request(n)&lt;/code&gt; is called. The counter is decremented by one when the WebSocket invokes a receive method. &lt;code&gt;onOpen&lt;/code&gt; and &lt;code&gt;onError&lt;/code&gt; are not receive methods. WebSocket invokes &lt;code&gt;onOpen&lt;/code&gt; prior to any other methods on the listener. WebSocket invokes &lt;code&gt;onOpen&lt;/code&gt; at most once. WebSocket may invoke &lt;code&gt;onError&lt;/code&gt; at any given time. If the WebSocket invokes &lt;code&gt;onError&lt;/code&gt; or &lt;code&gt;onClose&lt;/code&gt;, then no further listener's methods will be invoked, no matter the value of the counter. For a newly built WebSocket the counter is zero.</source>
          <target state="translated">メッセージの受信を制御するために、WebSocketは&lt;a id=&quot;counter&quot;&gt;内部カウンターを&lt;/a&gt;維持します。このカウンターの値は、WebSocketがまだreceiveメソッドを呼び出していない回数です。このカウンターがゼロの間、WebSocketは受信メソッドを呼び出しません。 &lt;code&gt;request(n)&lt;/code&gt; が呼び出されると、カウンターは &lt;code&gt;n&lt;/code&gt; ずつインクリメントされます。 WebSocketがreceiveメソッドを呼び出すと、カウンターが1つ減ります。 &lt;code&gt;onOpen&lt;/code&gt; と &lt;code&gt;onError&lt;/code&gt; は受信メソッドではありません。 WebSocketは、リスナーの他のメソッドの前に &lt;code&gt;onOpen&lt;/code&gt; を呼び出します。 WebSocketは最大で1回 &lt;code&gt;onOpen&lt;/code&gt; を呼び出します。 WebSocketはいつでも &lt;code&gt;onError&lt;/code&gt; を呼び出すことができます。 WebSocketが &lt;code&gt;onError&lt;/code&gt; を呼び出す場合または &lt;code&gt;onClose&lt;/code&gt; の場合、カウンターの値に関係なく、それ以上リスナーのメソッドは呼び出されません。新しく構築されたWebSocketの場合、カウンターはゼロです。</target>
        </trans-unit>
        <trans-unit id="2d00134949b777561f41d071da4934d3d23a9bc0" translate="yes" xml:space="preserve">
          <source>To control the amount of recording data stored on disk, the maximum length of time to retain the data can be specified. Data stored on disk that is older than the specified length of time is removed by the Java Virtual Machine (JVM).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0070bd467d97aba3bbf124ba6a13b06eaafba9aa" translate="yes" xml:space="preserve">
          <source>To control the amount of recording data that is stored on disk, the maximum amount of data to retain can be specified. When the maximum limit is exceeded, the Java Virtual Machine (JVM) removes the oldest chunk to make room for a more recent chunk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf80006582d17ab05fdb596ec329a7499abd75c" translate="yes" xml:space="preserve">
          <source>To control the time-zone used, see &lt;a href=&quot;#atZoneSameInstant(java.time.ZoneId)&quot;&gt;&lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#atZoneSimilarLocal(java.time.ZoneId)&quot;&gt;&lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用するタイムゾーンを制御するには、&lt;a href=&quot;#atZoneSameInstant(java.time.ZoneId)&quot;&gt; &lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#atZoneSimilarLocal(java.time.ZoneId)&quot;&gt; &lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="23e44dbd2456435fa91cf79de7a65d5d719ff213" translate="yes" xml:space="preserve">
          <source>To control the time-zone used, see &lt;a href=&quot;offsetdatetime#atZoneSameInstant-java.time.ZoneId-&quot;&gt;&lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsetdatetime#atZoneSimilarLocal-java.time.ZoneId-&quot;&gt;&lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用するタイムゾーンを制御するには、&lt;a href=&quot;offsetdatetime#atZoneSameInstant-java.time.ZoneId-&quot;&gt; &lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;offsetdatetime#atZoneSimilarLocal-java.time.ZoneId-&quot;&gt; &lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="376d8c3e1efda9f05146c9c2cd711c194b274e43" translate="yes" xml:space="preserve">
          <source>To convert to a specific time in a given time-zone call &lt;a href=&quot;#atTime(java.time.LocalTime)&quot;&gt;&lt;code&gt;atTime(LocalTime)&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;localdatetime#atZone(java.time.ZoneId)&quot;&gt;&lt;code&gt;LocalDateTime.atZone(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">特定のタイムゾーンで特定の時間に変換するには、&lt;a href=&quot;#atTime(java.time.LocalTime)&quot;&gt; &lt;code&gt;atTime(LocalTime)&lt;/code&gt; の&lt;/a&gt;後に&lt;a href=&quot;localdatetime#atZone(java.time.ZoneId)&quot;&gt; &lt;code&gt;LocalDateTime.atZone(ZoneId)&lt;/code&gt; を呼び出し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="8dd8a7b4f5dab34349b3a4318dd855c7abbe2237" translate="yes" xml:space="preserve">
          <source>To convert to a specific time in a given time-zone call &lt;a href=&quot;localdate#atTime-java.time.LocalTime-&quot;&gt;&lt;code&gt;atTime(LocalTime)&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;localdatetime#atZone-java.time.ZoneId-&quot;&gt;&lt;code&gt;LocalDateTime.atZone(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所定の時間帯のコールに特定の時間に変換する&lt;a href=&quot;localdate#atTime-java.time.LocalTime-&quot;&gt; &lt;code&gt;atTime(LocalTime)&lt;/code&gt; &lt;/a&gt;続い&lt;a href=&quot;localdatetime#atZone-java.time.ZoneId-&quot;&gt; &lt;code&gt;LocalDateTime.atZone(ZoneId)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04c0fcc1d36b488dceb3eb03800fffb2574fb9a1" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;RuleBasedCollator&lt;/code&gt; object with specialized rules tailored to your needs, you construct the &lt;code&gt;RuleBasedCollator&lt;/code&gt; with the rules contained in a &lt;code&gt;String&lt;/code&gt; object. For example:</source>
          <target state="translated">作成するには &lt;code&gt;RuleBasedCollator&lt;/code&gt; ニーズに合わせた特殊なルールを持つオブジェクトを、あなたが構築 &lt;code&gt;RuleBasedCollator&lt;/code&gt; 中に含まれているルールと &lt;code&gt;String&lt;/code&gt; オブジェクトを。例えば：</target>
        </trans-unit>
        <trans-unit id="5e6448c217bd1036f514fd3babb0cb8df35bdea4" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;SpinnerNumberModel&lt;/code&gt; for the integer range zero to one hundred, with fifty as the initial value, one could write:</source>
          <target state="translated">初期値として50を使用して、0から100の整数範囲の &lt;code&gt;SpinnerNumberModel&lt;/code&gt; を作成するには、次のように記述します。</target>
        </trans-unit>
        <trans-unit id="937c1d166731d3f66caa2bdf2a846465ed1fe1ce" translate="yes" xml:space="preserve">
          <source>To create a DOMSource from a DOMResult:</source>
          <target state="translated">DOMResult から DOMSource を作成する。</target>
        </trans-unit>
        <trans-unit id="e9eb6315376b4cd30a3d04f3b5c315ba3a13eeb0" translate="yes" xml:space="preserve">
          <source>To create a new Raster that contains a subregion of the current Raster, but shares its coordinate system and bands, this method should be called with childMinX equal to parentX, childMinY equal to parentY, and bandList equal to null.</source>
          <target state="translated">現在のラスタのサブ領域を含むが、その座標系とバンドを共有する新しいラスタを作成するには、このメソッドは、childMinX が parentX に等しく、childMinY が parentY に等しく、bandList が null に等しくなるようにして呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="d32d63274f2cbf4036683fa92a83776446845000" translate="yes" xml:space="preserve">
          <source>To create a new WritableRaster that contains a subregion of the current WritableRaster, but shares its coordinate system and bands, this method should be called with childMinX equal to parentX, childMinY equal to parentY, and bandList equal to null.</source>
          <target state="translated">現在のWritableRasterのサブ領域を含むが、その座標系とバンドを共有する新しいWritableRasterを作成するには、このメソッドは、childMinXがparentX、childMinYがparentY、bandListがnullの状態で呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="b4d8e3aa230fd8d328cb50849ff011b721e8d563" translate="yes" xml:space="preserve">
          <source>To create a new border class, subclass AbstractBorder.</source>
          <target state="translated">新しいボーダークラスを作成するには、サブクラス AbstractBorder を作成します。</target>
        </trans-unit>
        <trans-unit id="a32afc764b311a6d840f4a6d3c91f1a4e91e603a" translate="yes" xml:space="preserve">
          <source>To create a node changed event for the root node, specify the parent and the child indices as &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">ルートノードのノード変更イベントを作成するには、親インデックスと子インデックスを &lt;code&gt;null&lt;/code&gt; として指定します。</target>
        </trans-unit>
        <trans-unit id="791b72a8d90e2e2ec1bac7e05d883ff1e653d19d" translate="yes" xml:space="preserve">
          <source>To create a proxy for some interface &lt;code&gt;Foo&lt;/code&gt;:</source>
          <target state="translated">インターフェース &lt;code&gt;Foo&lt;/code&gt; のプロキシを作成するには：</target>
        </trans-unit>
        <trans-unit id="0dc7f689cdf1bba3e94d6df9657ba2feff02c34a" translate="yes" xml:space="preserve">
          <source>To create a set of &lt;code&gt;n&lt;/code&gt; tasks using a tree of phasers, you could use code of the following form, assuming a Task class with a constructor accepting a &lt;code&gt;Phaser&lt;/code&gt; that it registers with upon construction. After invocation of &lt;code&gt;build(new Task[n], 0, n,
 new Phaser())&lt;/code&gt;, these tasks could then be started, for example by submitting to a pool:</source>
          <target state="translated">&lt;code&gt;Phaser&lt;/code&gt; ツリーを使用して &lt;code&gt;n&lt;/code&gt; 個のタスクのセットを作成するには、次の形式のコードを使用できます。構築時に登録するフェーザーを受け入れるコンストラクターを持つタスククラスを想定しています。 &lt;code&gt;build(new Task[n], 0, n, new Phaser())&lt;/code&gt; 呼び出し後、これらのタスクは、たとえばプールに送信することによって開始できます。</target>
        </trans-unit>
        <trans-unit id="76fa5103ec809c37c86b48faae54a31800d4d1c4" translate="yes" xml:space="preserve">
          <source>To create a zoned date-time at the same instant irrespective of the local time-line, use &lt;a href=&quot;#atZoneSameInstant(java.time.ZoneId)&quot;&gt;&lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;#toZonedDateTime()&quot;&gt;&lt;code&gt;toZonedDateTime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ローカルタイムラインに関係なく、ゾーン化された日時を同じ瞬間に作成するには、&lt;a href=&quot;#atZoneSameInstant(java.time.ZoneId)&quot;&gt; &lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt; を&lt;/a&gt;使用します。オフセットをゾーンIDとして使用するには、&lt;a href=&quot;#toZonedDateTime()&quot;&gt; &lt;code&gt;toZonedDateTime()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="21cef35b7895ed0dec80ac99d3f5fda763229008" translate="yes" xml:space="preserve">
          <source>To create a zoned date-time at the same instant irrespective of the local time-line, use &lt;a href=&quot;offsetdatetime#atZoneSameInstant-java.time.ZoneId-&quot;&gt;&lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;offsetdatetime#toZonedDateTime--&quot;&gt;&lt;code&gt;toZonedDateTime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ローカルタイムラインに関係なく、ゾーン化された日時を同時に作成するには、&lt;a href=&quot;offsetdatetime#atZoneSameInstant-java.time.ZoneId-&quot;&gt; &lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt; を&lt;/a&gt;使用します。オフセットをゾーンIDとして使用するには、&lt;a href=&quot;offsetdatetime#toZonedDateTime--&quot;&gt; &lt;code&gt;toZonedDateTime()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="60baa4fa76cf50ff7c38d2a22f008a79c85d01d7" translate="yes" xml:space="preserve">
          <source>To create an &lt;code&gt;ActionListener&lt;/code&gt; that sets the the text of a &lt;code&gt;JLabel&lt;/code&gt; to the text value of the &lt;code&gt;JTextField&lt;/code&gt; source of the incoming event, you can use the following code:</source>
          <target state="translated">&lt;code&gt;JLabel&lt;/code&gt; のテキストを着信イベントの &lt;code&gt;JTextField&lt;/code&gt; ソースのテキスト値に設定する &lt;code&gt;ActionListener&lt;/code&gt; を作成するには、次のコードを使用できます。</target>
        </trans-unit>
        <trans-unit id="45312066937624f899610291c457e6f409e99be8" translate="yes" xml:space="preserve">
          <source>To create an &lt;code&gt;ActionListener&lt;/code&gt; that shows a &lt;code&gt;JDialog&lt;/code&gt; with &lt;code&gt;dialog.show()&lt;/code&gt;, one can write:</source>
          <target state="translated">&lt;code&gt;dialog.show()&lt;/code&gt; で &lt;code&gt;JDialog&lt;/code&gt; を表示する &lt;code&gt;ActionListener&lt;/code&gt; を作成するには、次のように記述します。</target>
        </trans-unit>
        <trans-unit id="1ee8a21417c0231b6df257f281fdd95449cee6d1" translate="yes" xml:space="preserve">
          <source>To create an attribute with a qualified name and namespace URI, use the &lt;code&gt;createAttributeNS&lt;/code&gt; method.</source>
          <target state="translated">修飾名と名前空間URIを使用して属性を作成するには、 &lt;code&gt;createAttributeNS&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="321d9a78ad904102d13153b2f25df867969dcc2f" translate="yes" xml:space="preserve">
          <source>To create an element with a qualified name and namespace URI, use the &lt;code&gt;createElementNS&lt;/code&gt; method.</source>
          <target state="translated">修飾名と名前空間URIを使用して要素を作成するには、 &lt;code&gt;createElementNS&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="2f18a394ec1d00d632fa8ea8c9678ed1d607d136" translate="yes" xml:space="preserve">
          <source>To create an empty keystore using the above &lt;code&gt;load&lt;/code&gt; method, pass &lt;code&gt;null&lt;/code&gt; as the &lt;code&gt;InputStream&lt;/code&gt; argument.</source>
          <target state="translated">上記の &lt;code&gt;load&lt;/code&gt; メソッドを使用して空のキーストアを作成するには、 &lt;code&gt;InputStream&lt;/code&gt; 引数として &lt;code&gt;null&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="8af718b63d7e37600b3d65dd7cbfbaf8c854d52b" translate="yes" xml:space="preserve">
          <source>To create and use an &lt;code&gt;JOptionPane&lt;/code&gt; directly, the standard pattern is roughly as follows:</source>
          <target state="translated">&lt;code&gt;JOptionPane&lt;/code&gt; を直接作成して使用するための標準パターンは、おおよそ次のとおりです。</target>
        </trans-unit>
        <trans-unit id="8dea388bdca9f830fe55c273e0d4866e5bd285b2" translate="yes" xml:space="preserve">
          <source>To create localized string representations of a floating-point value, use subclasses of &lt;a href=&quot;../text/numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">浮動小数点値のローカライズされた文字列表現を作成するには、&lt;a href=&quot;../text/numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; の&lt;/a&gt;サブクラスを使用します。</target>
        </trans-unit>
        <trans-unit id="808da32e3a261ba4ac89ef37045a1f29ac0fb890" translate="yes" xml:space="preserve">
          <source>To create the new file, the prefix and the suffix may first be adjusted to fit the limitations of the underlying platform. If the prefix is too long then it will be truncated, but its first three characters will always be preserved. If the suffix is too long then it too will be truncated, but if it begins with a period character (&lt;code&gt;'.'&lt;/code&gt;) then the period and the first three characters following it will always be preserved. Once these adjustments have been made the name of the new file will be generated by concatenating the prefix, five or more internally-generated characters, and the suffix.</source>
          <target state="translated">新しいファイルを作成するには、基本となるプラットフォームの制限に合わせて、最初に接頭辞と接尾辞を調整します。プレフィックスが長すぎる場合は切り捨てられますが、最初の3文字は常に保持されます。サフィックスが長すぎる場合も、切り捨てられますが、ピリオド文字（ &lt;code&gt;'.'&lt;/code&gt; ）で始まる場合、ピリオドとそれに続く最初の3文字は常に保持されます。これらの調整が行われると、プレフィックス、5つ以上の内部生成文字、およびサフィックスを連結して、新しいファイルの名前が生成されます。</target>
        </trans-unit>
        <trans-unit id="3e4a062b070484f1c27e4ca896fe630eef6f8d83" translate="yes" xml:space="preserve">
          <source>To declare a feature non-transient in a class whose superclass declares it transient, use &lt;code&gt;@Transient(false)&lt;/code&gt;. In all cases, the &lt;a href=&quot;introspector&quot;&gt;&lt;code&gt;Introspector&lt;/code&gt;&lt;/a&gt; decides if a feature is transient by referring to the annotation on the most specific superclass. If no &lt;code&gt;Transient&lt;/code&gt; annotation is present in any superclass the feature is not transient.</source>
          <target state="translated">スーパークラスが機能を一時的に宣言するクラスで機能を非一時的に宣言するには、 &lt;code&gt;@Transient(false)&lt;/code&gt; を使用します。すべての場合において、&lt;a href=&quot;introspector&quot;&gt; &lt;code&gt;Introspector&lt;/code&gt; &lt;/a&gt;は、最も具体的なスーパークラスのアノテーションを参照して、機能が一時的であるかどうかを決定します。 &lt;code&gt;Transient&lt;/code&gt; アノテーションがスーパークラスに存在しない場合、機能は一時的ではありません。</target>
        </trans-unit>
        <trans-unit id="57fd356f7d95a14f5404eeb90ff5031af2abdc3b" translate="yes" xml:space="preserve">
          <source>To declare a service provider, a &lt;code&gt;services&lt;/code&gt; subdirectory is placed within the &lt;code&gt;META-INF&lt;/code&gt; directory that is present in every JAR file. This directory contains a file for each service provider interface that has one or more implementation classes present in the JAR file. For example, if the JAR file contained a class named &lt;code&gt;com.mycompany.mypkg.MyServiceImpl&lt;/code&gt; which implements the &lt;code&gt;javax.someapi.SomeService&lt;/code&gt; interface, the JAR file would contain a file named:</source>
          <target state="translated">サービスプロバイダーを宣言するには、すべてのJARファイルにある &lt;code&gt;META-INF&lt;/code&gt; ディレクトリ内に &lt;code&gt;services&lt;/code&gt; サブディレクトリを配置します。このディレクトリには、JARファイルに1つ以上の実装クラスが存在する各サービスプロバイダーインターフェースのファイルが含まれています。たとえば、JARファイルに &lt;code&gt;javax.someapi.SomeService&lt;/code&gt; インターフェースを実装する &lt;code&gt;com.mycompany.mypkg.MyServiceImpl&lt;/code&gt; という名前のクラスが含まれている場合、JARファイルには次の名前のファイルが含まれます。</target>
        </trans-unit>
        <trans-unit id="8d5f427026a3bffd1cf9d8eaa3798b47dd458e0e" translate="yes" xml:space="preserve">
          <source>To declare the default element Namespace, use the empty string as the prefix.</source>
          <target state="translated">デフォルトの要素 Namespace を宣言するには、空の文字列をプレフィックスとして使用します。</target>
        </trans-unit>
        <trans-unit id="b5daf07cb128e0adef752589303d128fdbba030b" translate="yes" xml:space="preserve">
          <source>To define a Flight Recorder event, extend &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; and add fields that matches the data types of the payload. Metadata about fields, such as labels, descriptions and units, can be added by using the annotations available in the &lt;code&gt;jdk.jfr&lt;/code&gt; package, or by using a user-defined annotation that has the &lt;a href=&quot;metadatadefinition&quot;&gt;&lt;code&gt;MetadataDefinition&lt;/code&gt;&lt;/a&gt; annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7283b113e7c0164d77d2a8c9fb8573fa56cef93b" translate="yes" xml:space="preserve">
          <source>To define a new attribute category, a vendor defines a new attribute class. This attribute class, like the standard attribute classes, implements &lt;code&gt;Attribute&lt;/code&gt; or one of its subinterfaces and extends an abstract syntax class. The vendor can either use an existing abstract syntax class or define a new one. The new vendor-defined attribute can be used wherever an &lt;code&gt;Attribute&lt;/code&gt; is used, such as in an &lt;code&gt;AttributeSet&lt;/code&gt;.</source>
          <target state="translated">新しい属性カテゴリを定義するために、ベンダーは新しい属性クラスを定義します。この属性クラスは、標準の属性クラスと同様に、 &lt;code&gt;Attribute&lt;/code&gt; またはそのサブインターフェイスの1つを実装し、抽象構文クラスを拡張します。ベンダーは、既存の抽象構文クラスを使用するか、新しい構文クラスを定義できます。どこに新しいベンダー定義属性を使用することができます &lt;code&gt;Attribute&lt;/code&gt; 使用されているなどのように、 &lt;code&gt;AttributeSet&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e347f14baa8fe4d897360a51c83aed5e5fbc4b76" translate="yes" xml:space="preserve">
          <source>To define a new value for an attribute, a client can construct instances of such attributes with arbitrary values at runtime. However, an enumerated attribute using an abstract syntax class of &lt;code&gt;EnumSyntax&lt;/code&gt; specifies all the possible attribute values at compile time as singleton instances of the attribute class. This means that new enumerated values cannot be constructed at run time. To define new vendor-specific values for a standard enumerated attribute, the vendor must define a new attribute class specifying the new singleton instances. To ensure that the new attribute values fall in the same category as the standard attribute values, the new attribute class must be a subclass of the standard attribute class.</source>
          <target state="translated">属性の新しい値を定義するために、クライアントは実行時に任意の値でそのような属性のインスタンスを構築できます。ただし、 &lt;code&gt;EnumSyntax&lt;/code&gt; の抽象構文クラスを使用する列挙型属性は、コンパイル時にすべての可能な属性値を属性クラスのシングルトンインスタンスとして指定します。つまり、実行時に新しい列挙値を作成することはできません。標準の列挙型属性の新しいベンダー固有の値を定義するには、ベンダーは新しいシングルトンインスタンスを指定する新しい属性クラスを定義する必要があります。新しい属性値が標準属性値と同じカテゴリに確実に入るようにするには、新しい属性クラスが標準属性クラスのサブクラスである必要があります。</target>
        </trans-unit>
        <trans-unit id="f939ea17e6648d57afdd0ab71206b3b4ae1f10f1" translate="yes" xml:space="preserve">
          <source>To define an event at compile time, see &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be390e424352119396aca90952aa3eb2e129ceb" translate="yes" xml:space="preserve">
          <source>To detect if a MidiDevice represents a hardware MIDI port, the following programming technique can be used:</source>
          <target state="translated">MidiDeviceがハードウェアMIDIポートを表しているかどうかを検出するには、以下のプログラミング技術を使用することができます。</target>
        </trans-unit>
        <trans-unit id="e676ccd071b538464ec0f5bba24430555e2f6906" translate="yes" xml:space="preserve">
          <source>To determine certificate equality, this method only compares actual signer certificates. Supporting certificate chains are not taken into consideration by this method.</source>
          <target state="translated">証明書の平等性を決定するために、この方法では実際の署名者証明書のみを比較する。この方法では、サポートする証明書チェーンは考慮されません。</target>
        </trans-unit>
        <trans-unit id="ff5817879da34db4f56fdd68b526d292ae2a611c" translate="yes" xml:space="preserve">
          <source>To determine if your environment is a virtual device environment, call &lt;code&gt;getBounds&lt;/code&gt; on all of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; objects in your system. If any of the origins of the returned bounds is not (0, 0), your environment is a virtual device environment.</source>
          <target state="translated">ご使用の環境が仮想デバイス環境であるかどうかを判別するには、システム内のすべての &lt;code&gt;GraphicsConfiguration&lt;/code&gt; オブジェクトで &lt;code&gt;getBounds&lt;/code&gt; を呼び出します。返される境界の起点のいずれかが（0、0）でない場合、環境は仮想デバイス環境です。</target>
        </trans-unit>
        <trans-unit id="902c6e685e894ad6aedb9e2a7a97d5aa77dd6669" translate="yes" xml:space="preserve">
          <source>To disable a traversal key, use an empty &lt;code&gt;Set&lt;/code&gt;; &lt;code&gt;Collections.EMPTY_SET&lt;/code&gt; is recommended.</source>
          <target state="translated">トラバーサルキーを無効にするには、空の &lt;code&gt;Set&lt;/code&gt; 使用します。 &lt;code&gt;Collections.EMPTY_SET&lt;/code&gt; をお勧めします。</target>
        </trans-unit>
        <trans-unit id="e816b46eabb2d9327b82c3318740e2a587020d84" translate="yes" xml:space="preserve">
          <source>To disable a traversal key, use an empty Set; Collections.EMPTY_SET is recommended.</source>
          <target state="translated">探索キーを無効にするには、空のセットを使用します。</target>
        </trans-unit>
        <trans-unit id="2491d61c1dce605c04f31a3f9752a63f8d068280" translate="yes" xml:space="preserve">
          <source>To dispatch events to registered actions, the stream must be started. To start processing in the current thread, invoke the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method. To process actions asynchronously in a separate thread, invoke the &lt;a href=&quot;#startAsync()&quot;&gt;&lt;code&gt;startAsync()&lt;/code&gt;&lt;/a&gt; method. To await completion of the stream, use the awaitTermination &lt;a href=&quot;#awaitTermination()&quot;&gt;&lt;code&gt;awaitTermination()&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;#awaitTermination(java.time.Duration)&quot;&gt;&lt;code&gt;awaitTermination(Duration)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521d4df1fdecc5d9afbb280c6d01cbb8e8131919" translate="yes" xml:space="preserve">
          <source>To display the selected item, &lt;code&gt;aRenderer.getListCellRendererComponent&lt;/code&gt; is called, passing the list object and an index of -1.</source>
          <target state="translated">選択したアイテムを表示するために、 &lt;code&gt;aRenderer.getListCellRendererComponent&lt;/code&gt; が呼び出され、リストオブジェクトと-1のインデックスが渡されます。</target>
        </trans-unit>
        <trans-unit id="73759847ca2ddc195bc637dee70c201f5a265565" translate="yes" xml:space="preserve">
          <source>To dynamically define an event, use the &lt;a href=&quot;eventfactory&quot;&gt;&lt;code&gt;EventFactory&lt;/code&gt;&lt;/a&gt; class and define fields by using the &lt;a href=&quot;valuedescriptor&quot;&gt;&lt;code&gt;ValueDescriptor&lt;/code&gt;&lt;/a&gt; class, and define annotations by using the &lt;a href=&quot;annotationelement&quot;&gt;&lt;code&gt;AnnotationElement&lt;/code&gt;&lt;/a&gt; class. Use the factory to allocate an event and the &lt;a href=&quot;event#set(int,java.lang.Object)&quot;&gt;&lt;code&gt;Event.set(int, Object)&lt;/code&gt;&lt;/a&gt; method to populate it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c996f0050be7ce5d2c546057a7079bb77afcba" translate="yes" xml:space="preserve">
          <source>To enable sorting and filtering of rows, use a &lt;code&gt;RowSorter&lt;/code&gt;. You can set up a row sorter in either of two ways:</source>
          <target state="translated">行の並べ替えとフィルタリングを有効にするには、 &lt;code&gt;RowSorter&lt;/code&gt; を使用します。行ソーターは、次の2つの方法のいずれかでセットアップできます。</target>
        </trans-unit>
        <trans-unit id="ab978687241b79866b127e3c7c6ff7a942b26599" translate="yes" xml:space="preserve">
          <source>To enable the &lt;code&gt;AWTEvent&lt;/code&gt;s of a particular type, you call &lt;a href=&quot;../jlayer#setLayerEventMask(long)&quot;&gt;&lt;code&gt;JLayer.setLayerEventMask(long)&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;#installUI(javax.swing.JComponent)&quot;&gt;&lt;code&gt;installUI(javax.swing.JComponent)&lt;/code&gt;&lt;/a&gt; and set the layer event mask to &lt;code&gt;0&lt;/code&gt; in &lt;a href=&quot;#uninstallUI(javax.swing.JComponent)&quot;&gt;&lt;code&gt;uninstallUI(javax.swing.JComponent)&lt;/code&gt;&lt;/a&gt; after that. By default this method calls the appropriate &lt;code&gt;process&amp;lt;event&lt;/code&gt;&lt;code&gt;type&amp;gt;Event&lt;/code&gt; method for the given class of event.</source>
          <target state="translated">特定のタイプの &lt;code&gt;AWTEvent&lt;/code&gt; を有効にするには、&lt;a href=&quot;#installUI(javax.swing.JComponent)&quot;&gt; &lt;code&gt;installUI(javax.swing.JComponent)&lt;/code&gt; &lt;/a&gt;で&lt;a href=&quot;../jlayer#setLayerEventMask(long)&quot;&gt; &lt;code&gt;JLayer.setLayerEventMask(long)&lt;/code&gt; &lt;/a&gt;を呼び出し、その後、&lt;a href=&quot;#uninstallUI(javax.swing.JComponent)&quot;&gt; &lt;code&gt;uninstallUI(javax.swing.JComponent)&lt;/code&gt; &lt;/a&gt;でレイヤーイベントマスクを &lt;code&gt;0&lt;/code&gt; に設定します。デフォルトでは、このメソッドは、指定されたクラスのイベントに対して適切な &lt;code&gt;process&amp;lt;event&lt;/code&gt; &lt;code&gt;type&amp;gt;Event&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="9d4331aca8bde50509f15e66b1dc895741884c03" translate="yes" xml:space="preserve">
          <source>To ensure consistency in conversion implementations, the new &lt;code&gt;GregorianCalendar&lt;/code&gt; should be instantiated in following manner.</source>
          <target state="translated">変換実装の一貫性を確保するには、新しい &lt;code&gt;GregorianCalendar&lt;/code&gt; を次の方法でインスタンス化する必要があります。</target>
        </trans-unit>
        <trans-unit id="ec3f3d2e8b8da37d059135bf9927030dc1a93310" translate="yes" xml:space="preserve">
          <source>To ensure progress, the supplied function must arrange eventual completion of its result.</source>
          <target state="translated">進捗を確実にするために、提供される関数は、その結果の最終的な完了を手配しなければなりません。</target>
        </trans-unit>
        <trans-unit id="fbf6d3ab4a41188c49c32e545df6afa5e97c91be" translate="yes" xml:space="preserve">
          <source>To ensure reasonable behavior in the face of concurrency, the event is dispatched after the mutation has occurred. This means that by the time a notification of removal is dispatched, the document has already been updated and any marks created by &lt;code&gt;createPosition&lt;/code&gt; have already changed. For a removal, the end of the removal range is collapsed down to the start of the range, and any marks in the removal range are collapsed down to the start of the range.</source>
          <target state="translated">並行性に直面した場合の合理的な動作を保証するために、イベントはミューテーションが発生した後にディスパッチされます。これは、削除の通知が &lt;code&gt;createPosition&lt;/code&gt; されるまでに、ドキュメントがすでに更新されており、createPositionによって作成されたマークがすでに変更されていることを意味します。削除の場合、削除範囲の終わりは範囲の開始点まで折りたたまれ、削除範囲内のマークは範囲の開始点まで折りたたまれます。</target>
        </trans-unit>
        <trans-unit id="11643c6ea43dfed43359a63e34cfeec2c468e235" translate="yes" xml:space="preserve">
          <source>To ensure that all resources associated with the corresponding HTTP exchange are properly released, an implementation of &lt;code&gt;
 BodySubscriber&lt;/code&gt; should ensure to &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt;&lt;code&gt;request&lt;/code&gt;&lt;/a&gt; more data until one of &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onComplete()&quot;&gt;&lt;code&gt;onComplete&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt;&lt;code&gt;onError&lt;/code&gt;&lt;/a&gt; are signalled, or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; its &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onSubscribe(java.util.concurrent.Flow.Subscription)&quot;&gt;subscription&lt;/a&gt; if unable or unwilling to do so. Calling &lt;code&gt;cancel&lt;/code&gt; before exhausting the response body data may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</source>
          <target state="translated">対応するHTTP交換に関連付けられたすべてのリソースが適切に解放されるようにするには、 &lt;code&gt; BodySubscriber&lt;/code&gt; の実装は、&lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onComplete()&quot;&gt; &lt;code&gt;onComplete&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt; &lt;code&gt;onError&lt;/code&gt; &lt;/a&gt;のいずれかが通知されるまで追加のデータを&lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt; &lt;code&gt;request&lt;/code&gt; &lt;/a&gt;するか、そうすることができないか、または望まない場合は&lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onSubscribe(java.util.concurrent.Flow.Subscription)&quot;&gt;サブスクリプションを&lt;/a&gt;&lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt;する必要があります。応答本文データを使い果たす前に &lt;code&gt;cancel&lt;/code&gt; を呼び出すと、基になるHTTP接続が閉じられ、後続の操作で再利用できなくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="7c1c79b46a51721b58d635598c2eb415a441c368" translate="yes" xml:space="preserve">
          <source>To ensure that all resources associated with the corresponding HTTP exchange are properly released, an implementation of &lt;code&gt;
 BodySubscriber&lt;/code&gt; should ensure to &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt;request&lt;/a&gt; more data until one of &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onComplete()&quot;&gt;&lt;code&gt;onComplete&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt;&lt;code&gt;onError&lt;/code&gt;&lt;/a&gt; are signalled, or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; its &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onSubscribe(java.util.concurrent.Flow.Subscription)&quot;&gt;subscription&lt;/a&gt; if unable or unwilling to do so. Calling &lt;code&gt;cancel&lt;/code&gt; before exhausting the response body data may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3eff81a66d8962e609b1164941f2aa109e279a" translate="yes" xml:space="preserve">
          <source>To ensure that all resources associated with the corresponding exchange are properly released the caller must ensure that the provided publisher is subscribed once, and either &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt;requests&lt;/a&gt; all bytes until &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onComplete()&quot;&gt;&lt;code&gt;onComplete&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt;&lt;code&gt;onError&lt;/code&gt;&lt;/a&gt; are invoked, or cancel the provided &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onSubscribe(java.util.concurrent.Flow.Subscription)&quot;&gt;subscription&lt;/a&gt; if it is unable or unwilling to do so. Note that depending on the actual HTTP protocol &lt;a href=&quot;httpclient.version&quot;&gt;version&lt;/a&gt; used for the exchange, cancelling the subscription instead of exhausting the flow may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</source>
          <target state="translated">対応するエクスチェンジに関連付けられているすべてのリソースが適切に解放されるようにするには、呼び出し元は、提供されたパブリッシャーが1回サブスクライブされ、&lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onComplete()&quot;&gt; &lt;code&gt;onComplete&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt; &lt;code&gt;onError&lt;/code&gt; &lt;/a&gt;が呼び出されるまですべてのバイトを&lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt;要求&lt;/a&gt;するか、提供された&lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onSubscribe(java.util.concurrent.Flow.Subscription)&quot;&gt;サブスクリプションを&lt;/a&gt;キャンセルできないか、実行したくない場合はキャンセルする必要があります。そう。交換に使用される実際のHTTPプロトコルの&lt;a href=&quot;httpclient.version&quot;&gt;バージョン&lt;/a&gt;によっては、フローを使い果たす代わりにサブスクリプションをキャンセルすると、基になるHTTP接続が閉じられ、後続の操作で再利用できなくなる場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9745d3a736e887f0e3c7f8472f10fe34a71ab4a4" translate="yes" xml:space="preserve">
          <source>To ensure that all resources associated with the corresponding exchange are properly released the caller must ensure to either read all bytes until EOF is reached, or call &lt;a href=&quot;../../../../java.base/java/io/inputstream#close()&quot;&gt;&lt;code&gt;InputStream.close()&lt;/code&gt;&lt;/a&gt; if it is unable or unwilling to do so. Calling &lt;code&gt;close&lt;/code&gt; before exhausting the stream may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</source>
          <target state="translated">対応する交換に関連付けられたすべてのリソースが適切に解放されるようにするには、呼び出し元はEOFに達するまですべてのバイトを読み取るか、それができないか、または望まない場合は&lt;a href=&quot;../../../../java.base/java/io/inputstream#close()&quot;&gt; &lt;code&gt;InputStream.close()&lt;/code&gt; を&lt;/a&gt;呼び出す必要があります。ストリームを使い果たす前に &lt;code&gt;close&lt;/code&gt; を呼び出すと、基になるHTTP接続が閉じられ、後続の操作で再利用できなくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="fa53fd89d6c9264fb3e331487b71d7d22e61aa13" translate="yes" xml:space="preserve">
          <source>To ensure that all resources associated with the corresponding exchange are properly released the caller must ensure to either read all lines until the stream is exhausted, or call &lt;a href=&quot;../../../../java.base/java/util/stream/basestream#close()&quot;&gt;&lt;code&gt;BaseStream.close()&lt;/code&gt;&lt;/a&gt; if it is unable or unwilling to do so. Calling &lt;code&gt;close&lt;/code&gt; before exhausting the stream may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</source>
          <target state="translated">対応する交換に関連付けられたすべてのリソースが適切に解放されるようにするには、呼び出し元は、ストリームが使い果たされるまですべての行を読み取るか、それができないか、そうすることを望まない場合は&lt;a href=&quot;../../../../java.base/java/util/stream/basestream#close()&quot;&gt; &lt;code&gt;BaseStream.close()&lt;/code&gt; を&lt;/a&gt;呼び出す必要があります。ストリームを使い果たす前に &lt;code&gt;close&lt;/code&gt; を呼び出すと、基になるHTTP接続が閉じられ、後続の操作で再利用できなくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="740785de36acfcfa114524f1b3afbf22d481fdba" translate="yes" xml:space="preserve">
          <source>To ensure that client parameters will be deserialized at the server side with the correct classloader, client parameters such as parameters used to invoke a method are wrapped in a &lt;a href=&quot;../../../../../java.rmi/java/rmi/marshalledobject&quot;&gt;&lt;code&gt;MarshalledObject&lt;/code&gt;&lt;/a&gt;. An implementation of this interface must first get the appropriate class loader for the operation and its target, then deserialize the marshalled parameters with this classloader. Except as noted, a parameter that is a &lt;code&gt;MarshalledObject&lt;/code&gt; or &lt;code&gt;MarshalledObject[]&lt;/code&gt; must not be null; the behavior is unspecified if it is.</source>
          <target state="translated">クライアントパラメーターがサーバー側で正しいクラスローダーを使用して逆シリアル化されるようにするために、メソッドの呼び出しに使用されるパラメーターなどのクライアントパラメーターは&lt;a href=&quot;../../../../../java.rmi/java/rmi/marshalledobject&quot;&gt; &lt;code&gt;MarshalledObject&lt;/code&gt; に&lt;/a&gt;ラップされます。このインターフェイスの実装では、最初に操作とそのターゲットに適切なクラスローダーを取得してから、このクラスローダーを使用してマーシャリングされたパラメーターを逆シリアル化する必要があります。特に明記されていない限り、 &lt;code&gt;MarshalledObject&lt;/code&gt; または &lt;code&gt;MarshalledObject[]&lt;/code&gt; であるパラメーターはnullであってはなりません。そうである場合、動作は指定されていません。</target>
        </trans-unit>
        <trans-unit id="b59757c043cfb960c17c98e1a8dd7ce3314ad5d3" translate="yes" xml:space="preserve">
          <source>To ensure that client parameters will be deserialized at the server side with the correct classloader, client parameters such as parameters used to invoke a method are wrapped in a &lt;a href=&quot;/openjdk~8_web/java/rmi/marshalledobject&quot;&gt;&lt;code&gt;MarshalledObject&lt;/code&gt;&lt;/a&gt;. An implementation of this interface must first get the appropriate class loader for the operation and its target, then deserialize the marshalled parameters with this classloader. Except as noted, a parameter that is a &lt;code&gt;MarshalledObject&lt;/code&gt; or &lt;code&gt;MarshalledObject[]&lt;/code&gt; must not be null; the behavior is unspecified if it is.</source>
          <target state="translated">正しいクラスローダーを使用してサーバー側でクライアントパラメーターが確実に逆シリアル化されるようにするために、メソッドの呼び出しに使用されるパラメーターなどのクライアントパラメーターは&lt;a href=&quot;/openjdk~8_web/java/rmi/marshalledobject&quot;&gt; &lt;code&gt;MarshalledObject&lt;/code&gt; に&lt;/a&gt;ラップされます。このインターフェースの実装は、最初に操作とそのターゲットに適切なクラスローダーを取得し、次にこのクラスローダーを使用して整列化されたパラメーターを逆シリアル化する必要があります。特に注記がない限り、 &lt;code&gt;MarshalledObject&lt;/code&gt; または &lt;code&gt;MarshalledObject[]&lt;/code&gt; であるパラメーターはnullであってはなりません。そうであれば、動作は不特定です。</target>
        </trans-unit>
        <trans-unit id="f2abea5f649f3db3eea3bbf55598ba6f03b42815" translate="yes" xml:space="preserve">
          <source>To ensure that keystore entries are uniquely identified, each entry's alias is prefixed by its &lt;code&gt;keystoreName&lt;/code&gt; followed by the entry name separator and each &lt;code&gt;keystoreName&lt;/code&gt; must be unique within its domain. Entry name prefixes are omitted when storing a keystore.</source>
          <target state="translated">キーストアエントリが確実に一意に識別されるようにするには、各エントリのエイリアスの前に &lt;code&gt;keystoreName&lt;/code&gt; を付け、その後にエントリ名の区切り文字を付けます。各 &lt;code&gt;keystoreName&lt;/code&gt; はドメイン内で一意である必要があります。キーストアを保存するとき、エントリ名のプレフィックスは省略されます。</target>
        </trans-unit>
        <trans-unit id="7533c6ef00ad28237e37b969dc3e84fa760e069f" translate="yes" xml:space="preserve">
          <source>To ensure that sequential and parallel executions produce equivalent results, the collector functions must satisfy an &lt;em&gt;identity&lt;/em&gt; and an &lt;a href=&quot;package-summary#Associativity&quot;&gt;associativity&lt;/a&gt; constraints.</source>
          <target state="translated">順次実行と並列実行で同等の結果が生成されるようにするには、コレクター関数が&lt;em&gt;ID&lt;/em&gt;と&lt;a href=&quot;package-summary#Associativity&quot;&gt;結合&lt;/a&gt;規則の制約を満たす必要があります。</target>
        </trans-unit>
        <trans-unit id="00fe0fe22981250465b7707614b837e155640b61" translate="yes" xml:space="preserve">
          <source>To ensure the integrity of time-zones already created, there is no way to deregister providers.</source>
          <target state="translated">すでに作成されたタイムゾーンの整合性を確保するために、プロバイダの登録を解除する方法はありません。</target>
        </trans-unit>
        <trans-unit id="b3d5ee6edf0e10a67c0dd7074d245642e41157c8" translate="yes" xml:space="preserve">
          <source>To ensure this is a Java frame, use the &lt;a href=&quot;recordedframe#isJavaFrame()&quot;&gt;&lt;code&gt;RecordedFrame.isJavaFrame()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5106a2defd4e990de3915bb1a3bd513a8478ebfd" translate="yes" xml:space="preserve">
          <source>To fill in default values, use &lt;a href=&quot;../util/elements#getElementValuesWithDefaults(javax.lang.model.element.AnnotationMirror)&quot;&gt;&lt;code&gt;getElementValuesWithDefaults&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルト値を入力するには、&lt;a href=&quot;../util/elements#getElementValuesWithDefaults(javax.lang.model.element.AnnotationMirror)&quot;&gt; &lt;code&gt;getElementValuesWithDefaults&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="054a915983e4b95e8f0a7fc17e50da04ce361fd5" translate="yes" xml:space="preserve">
          <source>To fill in default values, use &lt;a href=&quot;../util/elements#getElementValuesWithDefaults-javax.lang.model.element.AnnotationMirror-&quot;&gt;&lt;code&gt;getElementValuesWithDefaults&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルト値を入力するには、&lt;a href=&quot;../util/elements#getElementValuesWithDefaults-javax.lang.model.element.AnnotationMirror-&quot;&gt; &lt;code&gt;getElementValuesWithDefaults&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="1b1f92d50f9e865c5004f64d2a4f404c52a1d655" translate="yes" xml:space="preserve">
          <source>To find a &lt;code&gt;SchemaFactory&lt;/code&gt; object for a given schema language, this method looks the following places in the following order where &quot;the class loader&quot; refers to the context class loader:</source>
          <target state="translated">特定のスキーマ言語の &lt;code&gt;SchemaFactory&lt;/code&gt; オブジェクトを見つけるために、このメソッドは次の場所を次の順序で検索します。ここで、「クラスローダー」はコンテキストクラスローダーを指します。</target>
        </trans-unit>
        <trans-unit id="9b8775d414d5739e2553eeb95758778f1b1162a5" translate="yes" xml:space="preserve">
          <source>To find a &lt;code&gt;XPathFactory&lt;/code&gt; object, this method looks the following places in the following order where &quot;the class loader&quot; refers to the context class loader:</source>
          <target state="translated">&lt;code&gt;XPathFactory&lt;/code&gt; オブジェクトを見つけるために、このメソッドは次の場所を次の順序で検索します。ここで、「クラスローダー」はコンテキストクラスローダーを指します。</target>
        </trans-unit>
        <trans-unit id="e7a2eb21d729f289e381419913e34035d0572aa1" translate="yes" xml:space="preserve">
          <source>To find a matching method in a class or interface C: If C declares exactly one public method with the specified name and exactly the same formal parameter types, that is the method reflected. If more than one such method is found in C, and one of these methods has a return type that is more specific than any of the others, that method is reflected; otherwise one of the methods is chosen arbitrarily.</source>
          <target state="translated">クラスまたはインターフェイス C の中から一致するメソッドを見つけるには:C が指定された名前のパブリック・メソッドを 1 つだけ宣言していて、正式なパラメータ・タイプが全く同じ場合は、そのメソッドが反映されます。そのようなメソッドが C に複数存在し、これらのメソッドのうちの 1 つが他のメソッドよりも特殊な戻り値の型を持っている場合は、そのメソッドが反映されます。</target>
        </trans-unit>
        <trans-unit id="18affa8e6289d316bfbb65fcc90a0d84436fb4e2" translate="yes" xml:space="preserve">
          <source>To force a complete SSL/TLS session renegotiation, the current session should be invalidated prior to calling this method.</source>
          <target state="translated">完全なSSL/TLSセッションの再ネゴシエーションを強制するには、このメソッドを呼び出す前に現在のセッションを無効にしなければなりません。</target>
        </trans-unit>
        <trans-unit id="47932eadf2a2f5b763ff01f0e64c92e2c7a1f269" translate="yes" xml:space="preserve">
          <source>To force a complete SSL/TLS/DTLS session renegotiation, the current session should be invalidated prior to calling this method.</source>
          <target state="translated">完全なSSL/TLS/DTLSセッションの再ネゴシエーションを強制するには、このメソッドを呼び出す前に現在のセッションを無効にしなければなりません。</target>
        </trans-unit>
        <trans-unit id="023592bd128d50677e7012f1fdf88fec752749f6" translate="yes" xml:space="preserve">
          <source>To format a date for a different Locale, specify it in the call to &lt;a href=&quot;#getDateInstance(int,java.util.Locale)&quot;&gt;&lt;code&gt;getDateInstance()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">別のロケールの日付をフォーマットするには、&lt;a href=&quot;#getDateInstance(int,java.util.Locale)&quot;&gt; &lt;code&gt;getDateInstance()&lt;/code&gt; の&lt;/a&gt;呼び出しで日付を指定します。</target>
        </trans-unit>
        <trans-unit id="23a173b3cd0da62e49a4c6312b7effbebcf70a1d" translate="yes" xml:space="preserve">
          <source>To format a date for a different Locale, specify it in the call to &lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDateInstance()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">別のロケールの日付をフォーマットするには、&lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDateInstance()&lt;/code&gt; の&lt;/a&gt;呼び出しで日付を指定します。</target>
        </trans-unit>
        <trans-unit id="31c56dc41650b703b7585ee73957c79da8a6ebd8" translate="yes" xml:space="preserve">
          <source>To format a date for the current Locale, use one of the static factory methods:</source>
          <target state="translated">現在のロケールの日付をフォーマットするには、スタティック・ファクトリー・メソッドのいずれかを使用します。</target>
        </trans-unit>
        <trans-unit id="1efc90fec6b3d2be588385321c3b066f49b91be9" translate="yes" xml:space="preserve">
          <source>To format a number for a different Locale, specify it in the call to &lt;code&gt;getInstance&lt;/code&gt;.</source>
          <target state="translated">異なるロケールの数値をフォーマットするには、 &lt;code&gt;getInstance&lt;/code&gt; の呼び出しでそれを指定します。</target>
        </trans-unit>
        <trans-unit id="f8abc2244a33eeafa86f7a9eab9d0022e187c943" translate="yes" xml:space="preserve">
          <source>To format a number for the current Locale, use one of the factory class methods:</source>
          <target state="translated">現在のロケールに合わせて数値をフォーマットするには、ファクトリー・クラス・メソッドのいずれかを使用します。</target>
        </trans-unit>
        <trans-unit id="66a7e5e7c134d63a47be4ac7fd3cecaecbe5eb3b" translate="yes" xml:space="preserve">
          <source>To generate the new &lt;code&gt;Map&lt;/code&gt;, first the &lt;code&gt;Font&lt;/code&gt; is obtained from the &lt;code&gt;FONT&lt;/code&gt; attribute, and &lt;em&gt;all&lt;/em&gt; of its attributes extracted into a new &lt;code&gt;Map&lt;/code&gt;. Then only the &lt;em&gt;secondary&lt;/em&gt; attributes from the original &lt;code&gt;Map&lt;/code&gt; are added to those in the new &lt;code&gt;Map&lt;/code&gt;. Thus the values of primary attributes come solely from the &lt;code&gt;Font&lt;/code&gt;, and the values of secondary attributes originate with the &lt;code&gt;Font&lt;/code&gt; but can be overridden by other values in the &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">新しい &lt;code&gt;Map&lt;/code&gt; を生成するには、最初に &lt;code&gt;Font&lt;/code&gt; &lt;code&gt;FONT&lt;/code&gt; 属性から取得し、その&lt;em&gt;すべて&lt;/em&gt;の属性を新しい &lt;code&gt;Map&lt;/code&gt; 抽出します。次に、元の &lt;code&gt;Map&lt;/code&gt; &lt;em&gt;2次&lt;/em&gt;属性のみが新しい &lt;code&gt;Map&lt;/code&gt; 属性に追加されます。したがって、プライマリ属性の値は &lt;code&gt;Font&lt;/code&gt; のみに由来し、セカンダリ属性の値は &lt;code&gt;Font&lt;/code&gt; 由来しますが、 &lt;code&gt;Map&lt;/code&gt; 内の他の値で上書きできます。</target>
        </trans-unit>
        <trans-unit id="a7068f16c1368da1e38328378e79e407c5026688" translate="yes" xml:space="preserve">
          <source>To get access to the methods in the &lt;code&gt;Joinable&lt;/code&gt; interface, a &lt;code&gt;RowSet&lt;/code&gt; object implements at least one of the five standard &lt;code&gt;RowSet&lt;/code&gt; interfaces and also implements the &lt;code&gt;Joinable&lt;/code&gt; interface. In addition, most &lt;code&gt;RowSet&lt;/code&gt; objects extend the &lt;code&gt;BaseRowSet&lt;/code&gt; class. For example:</source>
          <target state="translated">&lt;code&gt;Joinable&lt;/code&gt; インターフェイスのメソッドにアクセスするために、 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトは5つの標準 &lt;code&gt;RowSet&lt;/code&gt; インターフェイスの少なくとも1つを実装し、 &lt;code&gt;Joinable&lt;/code&gt; インターフェイスも実装します。さらに、ほとんどの &lt;code&gt;RowSet&lt;/code&gt; オブジェクトは &lt;code&gt;BaseRowSet&lt;/code&gt; クラスを拡張します。例えば：</target>
        </trans-unit>
        <trans-unit id="52b92f4e22e96872d0eeaf2d39a7292f5d628910" translate="yes" xml:space="preserve">
          <source>To get all prefixes bound to a Namespace URI in the current scope, use &lt;a href=&quot;#getPrefixes(java.lang.String)&quot;&gt;&lt;code&gt;getPrefixes(String namespaceURI)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在のスコープ内の名前空間URIにバインドされているすべてのプレフィックスを取得するには、&lt;a href=&quot;#getPrefixes(java.lang.String)&quot;&gt; &lt;code&gt;getPrefixes(String namespaceURI)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="d0c3f50bdc8e06b0b1c0cba75b086eb2e0b2a934" translate="yes" xml:space="preserve">
          <source>To get all the print data for a multidoc print job, a Print Service proxy could use either of two patterns:</source>
          <target state="translated">マルチドキュメント印刷ジョブのすべての印刷データを取得するために、印刷サービスプロキシは2つのパターンのいずれかを使用することができます。</target>
        </trans-unit>
        <trans-unit id="db85f570d409f6ee337c4648a89a556a12485b24" translate="yes" xml:space="preserve">
          <source>To get inherited annotations as well, use &lt;a href=&quot;../util/elements#getAllAnnotationMirrors(javax.lang.model.element.Element)&quot;&gt;&lt;code&gt;getAllAnnotationMirrors&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">継承された注釈も取得するには、&lt;a href=&quot;../util/elements#getAllAnnotationMirrors(javax.lang.model.element.Element)&quot;&gt; &lt;code&gt;getAllAnnotationMirrors&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="53f9c125af6f96d56cd5afcb02f4e6777d74a3ee" translate="yes" xml:space="preserve">
          <source>To get inherited annotations as well, use &lt;a href=&quot;../util/elements#getAllAnnotationMirrors-javax.lang.model.element.Element-&quot;&gt;&lt;code&gt;getAllAnnotationMirrors&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">継承された注釈も取得するには、&lt;a href=&quot;../util/elements#getAllAnnotationMirrors-javax.lang.model.element.Element-&quot;&gt; &lt;code&gt;getAllAnnotationMirrors&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="c0d6c5ca9be6faabe7c5c4b78779fe5ee5e0974e" translate="yes" xml:space="preserve">
          <source>To get the full nanosecond resolution event time, use &lt;a href=&quot;#getInstant()&quot;&gt;&lt;code&gt;getInstant()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">完全なナノ秒の解像度のイベント時間を取得するには、&lt;a href=&quot;#getInstant()&quot;&gt; &lt;code&gt;getInstant()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="0edf530fac42c6b9feda41e41a432619d4db95aa" translate="yes" xml:space="preserve">
          <source>To get the pseudo-type corresponding to a package or module, call &lt;code&gt;asType()&lt;/code&gt; on the element modeling the &lt;a href=&quot;../element/packageelement&quot;&gt;package&lt;/a&gt; or &lt;a href=&quot;../element/moduleelement&quot;&gt;module&lt;/a&gt;. Names can be converted to elements for packages or modules using &lt;a href=&quot;elements#getPackageElement(java.lang.CharSequence)&quot;&gt;&lt;code&gt;Elements.getPackageElement(CharSequence)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;elements#getModuleElement(java.lang.CharSequence)&quot;&gt;&lt;code&gt;Elements.getModuleElement(CharSequence)&lt;/code&gt;&lt;/a&gt;, respectively.</source>
          <target state="translated">パッケージまたはモジュールに対応する擬似型を得るために、コール &lt;code&gt;asType()&lt;/code&gt; モデリング要素に&lt;a href=&quot;../element/packageelement&quot;&gt;パッケージ&lt;/a&gt;または&lt;a href=&quot;../element/moduleelement&quot;&gt;モジュール&lt;/a&gt;。名前は、&lt;a href=&quot;elements#getPackageElement(java.lang.CharSequence)&quot;&gt; &lt;code&gt;Elements.getPackageElement(CharSequence)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;elements#getModuleElement(java.lang.CharSequence)&quot;&gt; &lt;code&gt;Elements.getModuleElement(CharSequence)&lt;/code&gt; &lt;/a&gt;をそれぞれ使用して、パッケージまたはモジュールの要素に変換できます。</target>
        </trans-unit>
        <trans-unit id="8be391c458cb78822f7c5bfc69617ab46cc68a26" translate="yes" xml:space="preserve">
          <source>To get the usable bounds of a single display, use &lt;code&gt;GraphicsConfiguration.getBounds()&lt;/code&gt; and &lt;code&gt;Toolkit.getScreenInsets()&lt;/code&gt;.</source>
          <target state="translated">単一のディスプレイの使用可能な境界を取得するには、 &lt;code&gt;GraphicsConfiguration.getBounds()&lt;/code&gt; および &lt;code&gt;Toolkit.getScreenInsets()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="734faec3693f1b81c8049c2b2612c8bba8fe7efe" translate="yes" xml:space="preserve">
          <source>To give the &quot;backup&quot; service a proxiable nfs service ticket the target permission might be specified:</source>
          <target state="translated">backup &quot;サービスにproxiableなnfsサービスチケットを与えるために、ターゲットパーミッションを指定することができます。</target>
        </trans-unit>
        <trans-unit id="2c844926cf4aa3b93bd05012b27600af333a76db" translate="yes" xml:space="preserve">
          <source>To have an exception thrown if the conversion is inexact (in other words if a nonzero fractional part is discarded), use the &lt;a href=&quot;#toBigIntegerExact()&quot;&gt;&lt;code&gt;toBigIntegerExact()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">変換が不正確な場合（つまり、ゼロ以外の小数部分が破棄された場合）に例外をスローするには、&lt;a href=&quot;#toBigIntegerExact()&quot;&gt; &lt;code&gt;toBigIntegerExact()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="4efd0f5f6873e8bf5dda3afa59ebf8833c4b8c6e" translate="yes" xml:space="preserve">
          <source>To have an exception thrown if the conversion is inexact (in other words if a nonzero fractional part is discarded), use the &lt;a href=&quot;bigdecimal#toBigIntegerExact--&quot;&gt;&lt;code&gt;toBigIntegerExact()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">変換が不正確な場合（つまり、ゼロ以外の小数部が破棄された場合）に例外をスローするには、&lt;a href=&quot;bigdecimal#toBigIntegerExact--&quot;&gt; &lt;code&gt;toBigIntegerExact()&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="7cd77572030e4bc183f87ba9e0b647921b604b65" translate="yes" xml:space="preserve">
          <source>To help ensure portability of Java programs, the definitions of some of the numeric functions in this package require that they produce the same results as certain published algorithms. These algorithms are available from the well-known network library &lt;code&gt;netlib&lt;/code&gt; as the package &quot;Freely Distributable Math Library,&quot; &lt;a href=&quot;ftp://ftp.netlib.org/fdlibm.tar&quot;&gt;&lt;code&gt;fdlibm&lt;/code&gt;&lt;/a&gt;. These algorithms, which are written in the C programming language, are then to be understood as executed with all floating-point operations following the rules of Java floating-point arithmetic.</source>
          <target state="translated">Javaプログラムの移植性を確保するために、このパッケージの一部の数値関数の定義では、特定の公開アルゴリズムと同じ結果を生成する必要があります。これらのアルゴリズムは、有名なネットワークライブラリ &lt;code&gt;netlib&lt;/code&gt; からパッケージ「Freely Distributable Math Library」&lt;a href=&quot;ftp://ftp.netlib.org/fdlibm.tar&quot;&gt; &lt;code&gt;fdlibm&lt;/code&gt; &lt;/a&gt;として入手できます。 Cプログラミング言語で記述されたこれらのアルゴリズムは、Java浮動小数点演算の規則に従ってすべての浮動小数点演算で実行されると理解されます。</target>
        </trans-unit>
        <trans-unit id="2a8d5f6562cab98eef5756c5b46c016af721d200" translate="yes" xml:space="preserve">
          <source>To help ensure portability of Java programs, the definitions of some of the numeric functions in this package require that they produce the same results as certain published algorithms. These algorithms are available from the well-known network library &lt;code&gt;netlib&lt;/code&gt; as the package &quot;Freely Distributable Math Library,&quot; &lt;a href=&quot;https://www.netlib.org/fdlibm/&quot;&gt;&lt;code&gt;fdlibm&lt;/code&gt;&lt;/a&gt;. These algorithms, which are written in the C programming language, are then to be understood as executed with all floating-point operations following the rules of Java floating-point arithmetic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4c97873af70f0195b146c1979f0db569946b5a" translate="yes" xml:space="preserve">
          <source>To implement a list the programmer needs only to extend this class and provide implementations for the &lt;code&gt;listIterator&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; methods. For an unmodifiable list, the programmer need only implement the list iterator's &lt;code&gt;hasNext&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;hasPrevious&lt;/code&gt;, &lt;code&gt;previous&lt;/code&gt; and &lt;code&gt;index&lt;/code&gt; methods.</source>
          <target state="translated">リストを実装するには、プログラマはこのクラスを拡張し、 &lt;code&gt;listIterator&lt;/code&gt; および &lt;code&gt;size&lt;/code&gt; メソッドの実装を提供するだけで済みます。変更不可能なリストの場合、プログラマーはリスト反復子の &lt;code&gt;hasNext&lt;/code&gt; 、 &lt;code&gt;next&lt;/code&gt; 、 &lt;code&gt;hasPrevious&lt;/code&gt; 、 &lt;code&gt;previous&lt;/code&gt; 、および &lt;code&gt;index&lt;/code&gt; メソッドを実装するだけで済みます。</target>
        </trans-unit>
        <trans-unit id="86969fc9fa9ff65fcf2df680df949b538474ae52" translate="yes" xml:space="preserve">
          <source>To implement a modifiable collection, the programmer must additionally override this class's &lt;code&gt;add&lt;/code&gt; method (which otherwise throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;), and the iterator returned by the &lt;code&gt;iterator&lt;/code&gt; method must additionally implement its &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">変更可能なコレクションを実装するには、上記に加えて、このクラスのオーバーライドする必要があります &lt;code&gt;add&lt;/code&gt; （そうでない場合はスローメソッド &lt;code&gt;UnsupportedOperationException&lt;/code&gt; が）、およびによって返されたイテレータ &lt;code&gt;iterator&lt;/code&gt; 方法は、さらにその実装する必要があります &lt;code&gt;remove&lt;/code&gt; 方法を。</target>
        </trans-unit>
        <trans-unit id="b1560ee47843b7bf3309272a76f86d437bc8f046" translate="yes" xml:space="preserve">
          <source>To implement a modifiable list, the programmer must additionally override the &lt;a href=&quot;#set(int,E)&quot;&gt;&lt;code&gt;set(int, E)&lt;/code&gt;&lt;/a&gt; method (which otherwise throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;). If the list is variable-size the programmer must additionally override the &lt;a href=&quot;#add(int,E)&quot;&gt;&lt;code&gt;add(int, E)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#remove(int)&quot;&gt;&lt;code&gt;remove(int)&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">変更可能なリストを実装するには、プログラマーはさらに&lt;a href=&quot;#set(int,E)&quot;&gt; &lt;code&gt;set(int, E)&lt;/code&gt; &lt;/a&gt;メソッドをオーバーライドする必要があります（そうでない場合は &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされます）。リストが可変サイズの場合、プログラマーは&lt;a href=&quot;#add(int,E)&quot;&gt; &lt;code&gt;add(int, E)&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#remove(int)&quot;&gt; &lt;code&gt;remove(int)&lt;/code&gt; &lt;/a&gt;メソッドとremove（int）メソッドをさらにオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="9decea476179857efb8167e4eb3423dfe587d678" translate="yes" xml:space="preserve">
          <source>To implement a modifiable list, the programmer must additionally override the &lt;a href=&quot;abstractlist#set-int-E-&quot;&gt;&lt;code&gt;set(int, E)&lt;/code&gt;&lt;/a&gt; method (which otherwise throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;). If the list is variable-size the programmer must additionally override the &lt;a href=&quot;abstractlist#add-int-E-&quot;&gt;&lt;code&gt;add(int, E)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;abstractlist#remove-int-&quot;&gt;&lt;code&gt;remove(int)&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">変更可能なリストを実装するには、プログラマはさらに&lt;a href=&quot;abstractlist#set-int-E-&quot;&gt; &lt;code&gt;set(int, E)&lt;/code&gt; &lt;/a&gt;メソッドをオーバーライドする必要があります（そうでない場合は、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローします）。リストが可変サイズの場合、プログラマーは&lt;a href=&quot;abstractlist#add-int-E-&quot;&gt; &lt;code&gt;add(int, E)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;abstractlist#remove-int-&quot;&gt; &lt;code&gt;remove(int)&lt;/code&gt; &lt;/a&gt;メソッドをさらにオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="aa7303ac29218f70d971d81a83ee93b68db42140" translate="yes" xml:space="preserve">
          <source>To implement a modifiable map, the programmer must additionally override this class's &lt;code&gt;put&lt;/code&gt; method (which otherwise throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;), and the iterator returned by &lt;code&gt;entrySet().iterator()&lt;/code&gt; must additionally implement its &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">変更可能なマップを実装するには、プログラマーはこのクラスの &lt;code&gt;put&lt;/code&gt; メソッドを追加でオーバーライドする必要があります（そうでない場合は &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローします &lt;code&gt;entrySet().iterator()&lt;/code&gt; また、entrySet（）。iterator（）によって返されるイテレーターは、その &lt;code&gt;remove&lt;/code&gt; メソッドを追加で実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="f4f28c36fafbaae1ba1c6b2a0d879b13be8b6d8f" translate="yes" xml:space="preserve">
          <source>To implement a spliterator an extending class need only implement &lt;a href=&quot;spliterator.ofdouble#tryAdvance-java.util.function.DoubleConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfDouble.tryAdvance(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt; tryAdvance}. The extending class should override &lt;a href=&quot;spliterator.ofdouble#forEachRemaining-java.util.function.DoubleConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfDouble.forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt; forEach} if it can provide a more performant implementation.</source>
          <target state="translated">スプリテレーターを実装するには、拡張クラスは&lt;a href=&quot;spliterator.ofdouble#tryAdvance-java.util.function.DoubleConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfDouble.tryAdvance(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt; tryAdvance}を実装するだけで済みます。より高性能な実装を提供できる場合、拡張クラスは&lt;a href=&quot;spliterator.ofdouble#forEachRemaining-java.util.function.DoubleConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfDouble.forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt; forEach} をオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="5cc0eceff27a04f1eb4e78d0fa0f239a31937f3c" translate="yes" xml:space="preserve">
          <source>To implement a spliterator an extending class need only implement &lt;a href=&quot;spliterator.ofint#tryAdvance-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfInt.tryAdvance(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt; tryAdvance}. The extending class should override &lt;a href=&quot;spliterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfInt.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt; forEach} if it can provide a more performant implementation.</source>
          <target state="translated">スプリテレーターを実装するには、拡張クラスは&lt;a href=&quot;spliterator.ofint#tryAdvance-java.util.function.IntConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfInt.tryAdvance(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt; tryAdvance}を実装するだけで済みます。より高性能な実装を提供できる場合、拡張クラスは&lt;a href=&quot;spliterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfInt.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt; forEach} をオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="9d003ef038d7bc2222c0d7ed292f23107be6608e" translate="yes" xml:space="preserve">
          <source>To implement a spliterator an extending class need only implement &lt;a href=&quot;spliterator.oflong#tryAdvance-java.util.function.LongConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfLong.tryAdvance(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt; tryAdvance}. The extending class should override &lt;a href=&quot;spliterator.oflong#forEachRemaining-java.util.function.LongConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfLong.forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt; forEach} if it can provide a more performant implementation.</source>
          <target state="translated">スプリッターを実装するには、拡張クラスは&lt;a href=&quot;spliterator.oflong#tryAdvance-java.util.function.LongConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfLong.tryAdvance(java.util.function.LongConsumer)&lt;/code&gt; &lt;/a&gt; tryAdvance}を実装するだけで済みます。より高性能な実装を提供できる場合、拡張クラスは&lt;a href=&quot;spliterator.oflong#forEachRemaining-java.util.function.LongConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfLong.forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt; &lt;/a&gt; forEach} をオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="f78b953d621ef8dd5612e1e265c23844fa76bede" translate="yes" xml:space="preserve">
          <source>To implement a spliterator an extending class need only implement &lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt;&lt;code&gt;tryAdvance&lt;/code&gt;&lt;/a&gt;. The extending class should override &lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt;&lt;code&gt;forEachRemaining&lt;/code&gt;&lt;/a&gt; if it can provide a more performant implementation.</source>
          <target state="translated">スプリッターを実装するには、拡張クラスはtryAdvanceを実装するだけで&lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt; &lt;code&gt;tryAdvance&lt;/code&gt; &lt;/a&gt;ます。拡張クラスは、よりパフォーマンスの高い実装を提供できる場合は、&lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt; &lt;code&gt;forEachRemaining&lt;/code&gt; &lt;/a&gt;をオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="671463582399b1ae06cf4aed172d63ff06a22dcf" translate="yes" xml:space="preserve">
          <source>To implement an unmodifiable collection, the programmer needs only to extend this class and provide implementations for the &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; methods. (The iterator returned by the &lt;code&gt;iterator&lt;/code&gt; method must implement &lt;code&gt;hasNext&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt;.)</source>
          <target state="translated">変更不可能なコレクションを実装するには、プログラマはこのクラスを拡張し、 &lt;code&gt;iterator&lt;/code&gt; と &lt;code&gt;size&lt;/code&gt; メソッドの実装を提供するだけで済みます。（ &lt;code&gt;iterator&lt;/code&gt; メソッドによって返される反復子は、 &lt;code&gt;hasNext&lt;/code&gt; および &lt;code&gt;next&lt;/code&gt; を実装する必要があります。）</target>
        </trans-unit>
        <trans-unit id="616c7f95abdc4cbce8cbe5c6d1a139815d544745" translate="yes" xml:space="preserve">
          <source>To implement an unmodifiable list, the programmer needs only to extend this class and provide implementations for the &lt;a href=&quot;#get(int)&quot;&gt;&lt;code&gt;get(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;list#size()&quot;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">変更不可能なリストを実装するには、プログラマーはこのクラスを拡張し、&lt;a href=&quot;#get(int)&quot;&gt; &lt;code&gt;get(int)&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;list#size()&quot;&gt; &lt;code&gt;size()&lt;/code&gt; &lt;/a&gt;メソッドとsize（）メソッドの実装を提供するだけで済みます。</target>
        </trans-unit>
        <trans-unit id="5430a4e8b9de5cc4540fc3c7ac301e5ebbad4405" translate="yes" xml:space="preserve">
          <source>To implement an unmodifiable list, the programmer needs only to extend this class and provide implementations for the &lt;a href=&quot;abstractlist#get-int-&quot;&gt;&lt;code&gt;get(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;list#size--&quot;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">変更不可能なリストを実装するには、プログラマはこのクラスを拡張し、&lt;a href=&quot;abstractlist#get-int-&quot;&gt; &lt;code&gt;get(int)&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;list#size--&quot;&gt; &lt;code&gt;size()&lt;/code&gt; &lt;/a&gt;メソッドとsize（）メソッドの実装を提供するだけで済みます。</target>
        </trans-unit>
        <trans-unit id="e46f4737bb04074017c53a93c53e20d7d872b78c" translate="yes" xml:space="preserve">
          <source>To implement an unmodifiable map, the programmer needs only to extend this class and provide an implementation for the &lt;code&gt;entrySet&lt;/code&gt; method, which returns a set-view of the map's mappings. Typically, the returned set will, in turn, be implemented atop &lt;code&gt;AbstractSet&lt;/code&gt;. This set should not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;remove&lt;/code&gt; methods, and its iterator should not support the &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">変更不可能なマップを実装するには、プログラマはこのクラスを拡張し、マップのマッピングのセットビューを返す &lt;code&gt;entrySet&lt;/code&gt; メソッドの実装を提供するだけで済みます。通常、返されたセットは、次に &lt;code&gt;AbstractSet&lt;/code&gt; の上に実装されます。このセットは、 &lt;code&gt;add&lt;/code&gt; メソッドまたは &lt;code&gt;remove&lt;/code&gt; メソッドをサポートしてはならず、そのイテレータは、 &lt;code&gt;remove&lt;/code&gt; メソッドをサポートしてはなりません。</target>
        </trans-unit>
        <trans-unit id="b60c40eb41f5b2d0799d39deb0d1ec4e177d5ce6" translate="yes" xml:space="preserve">
          <source>To implement operations based on the class of an &lt;code&gt;
 Element&lt;/code&gt; object, either use a &lt;a href=&quot;elementvisitor&quot;&gt;visitor&lt;/a&gt; or use the result of the &lt;a href=&quot;#getKind()&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;
 instanceof&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; necessarily a reliable idiom for determining the effective class of an object in this modeling hierarchy since an implementation may choose to have a single object implement multiple &lt;code&gt;Element&lt;/code&gt; subinterfaces.</source>
          <target state="translated">&lt;code&gt; Element&lt;/code&gt; オブジェクトのクラスに基づいて操作を実装するには、&lt;a href=&quot;elementvisitor&quot;&gt;visitorを&lt;/a&gt;使用するか、&lt;a href=&quot;#getKind()&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt;メソッドの結果を使用します。実装では、単一のオブジェクトに複数の &lt;code&gt;Element&lt;/code&gt; サブインターフェイスを実装させることを選択できるため、 &lt;code&gt; instanceof&lt;/code&gt; の使用は、このモデリング階層内のオブジェクトの有効なクラスを決定するための信頼できるイディオムであるとは&lt;em&gt;限りません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="37b7894324f4a64e553c356ad8a34880b8ee98eb" translate="yes" xml:space="preserve">
          <source>To implement operations based on the class of an &lt;code&gt;
 TypeMirror&lt;/code&gt; object, either use a &lt;a href=&quot;typevisitor&quot;&gt;visitor&lt;/a&gt; or use the result of the &lt;a href=&quot;#getKind()&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;
 instanceof&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; necessarily a reliable idiom for determining the effective class of an object in this modeling hierarchy since an implementation may choose to have a single object implement multiple &lt;code&gt;TypeMirror&lt;/code&gt; subinterfaces.</source>
          <target state="translated">&lt;code&gt; TypeMirror&lt;/code&gt; オブジェクトのクラスに基づいて操作を実装するには、&lt;a href=&quot;typevisitor&quot;&gt;ビジターを&lt;/a&gt;使用するか、&lt;a href=&quot;#getKind()&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt;メソッドの結果を使用します。 &lt;code&gt; instanceof&lt;/code&gt; の使用は、このモデリング階層内のオブジェクトの有効なクラスを決定するための信頼できるイディオムであるとは&lt;em&gt;限りません&lt;/em&gt;。実装では、単一のオブジェクトに複数の &lt;code&gt;TypeMirror&lt;/code&gt; サブインターフェイスを実装させることを選択できるためです。</target>
        </trans-unit>
        <trans-unit id="4da9eb624b21389bac68e88ef77ffb98422a9b5d" translate="yes" xml:space="preserve">
          <source>To implement operations based on the class of an &lt;code&gt;Element&lt;/code&gt; object, either use a &lt;a href=&quot;elementvisitor&quot;&gt;visitor&lt;/a&gt; or use the result of the &lt;a href=&quot;element#getKind--&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;instanceof&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; necessarily a reliable idiom for determining the effective class of an object in this modeling hierarchy since an implementation may choose to have a single object implement multiple &lt;code&gt;Element&lt;/code&gt; subinterfaces.</source>
          <target state="translated">&lt;code&gt;Element&lt;/code&gt; オブジェクトのクラスに基づく操作を実装するには、&lt;a href=&quot;elementvisitor&quot;&gt;ビジターを&lt;/a&gt;使用するか、&lt;a href=&quot;element#getKind--&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt;メソッドの結果を使用します。実装では単一のオブジェクトに複数の &lt;code&gt;Element&lt;/code&gt; サブインターフェースを実装させることを選択する &lt;code&gt;instanceof&lt;/code&gt; があるため、instanceofを使用しても、このモデリング階層でオブジェクトの有効なクラスを決定するための信頼できるイディオムであるとは&lt;em&gt;限りません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="56c3983484a828bf0458dd2e79533731da677b55" translate="yes" xml:space="preserve">
          <source>To implement operations based on the class of an &lt;code&gt;TypeMirror&lt;/code&gt; object, either use a &lt;a href=&quot;typevisitor&quot;&gt;visitor&lt;/a&gt; or use the result of the &lt;a href=&quot;typemirror#getKind--&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;instanceof&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; necessarily a reliable idiom for determining the effective class of an object in this modeling hierarchy since an implementation may choose to have a single object implement multiple &lt;code&gt;TypeMirror&lt;/code&gt; subinterfaces.</source>
          <target state="translated">&lt;code&gt;TypeMirror&lt;/code&gt; オブジェクトのクラスに基づく操作を実装するには、&lt;a href=&quot;typevisitor&quot;&gt;ビジターを&lt;/a&gt;使用するか、&lt;a href=&quot;typemirror#getKind--&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt;メソッドの結果を使用します。実装は単一のオブジェクトに複数の &lt;code&gt;TypeMirror&lt;/code&gt; サブインターフェースを実装させることを選択する &lt;code&gt;instanceof&lt;/code&gt; があるため、instanceofを使用しても、このモデリング階層内のオブジェクトの有効なクラスを決定するための信頼できるイディオムであるとは&lt;em&gt;限りません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="420dda2755911b0bdb93ee79ff62073e76ad6d16" translate="yes" xml:space="preserve">
          <source>To incorporate a new &lt;code&gt;DragSourceContext&lt;/code&gt; subclass, subclass &lt;code&gt;DragSource&lt;/code&gt; and override this method.</source>
          <target state="translated">新しい組み込むため &lt;code&gt;DragSourceContext&lt;/code&gt; サブクラス、サブクラス &lt;code&gt;DragSource&lt;/code&gt; して、このメソッドをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="48cdf821a79e1d7eb2270bd4ff092652154a8722" translate="yes" xml:space="preserve">
          <source>To indicate that a task of unknown length is executing, you can put a progress bar into indeterminate mode. While the bar is in indeterminate mode, it animates constantly to show that work is occurring. As soon as you can determine the task's length and amount of progress, you should update the progress bar's value and switch it back to determinate mode.</source>
          <target state="translated">長さが不明なタスクが実行中であることを示すために、プログレスバーを不定モードにすることができます。不定モードにしている間、バーは常にアニメーションして作業が行われていることを示します。タスクの長さと進捗量が決定できたら、すぐにプログレスバーの値を更新して決定モードに戻してください。</target>
        </trans-unit>
        <trans-unit id="09fd84430bb7e24aa792b7ad96e5b6fdd76e61a4" translate="yes" xml:space="preserve">
          <source>To indicate the root has changed, childIndices and children will be null.</source>
          <target state="translated">ルートが変更されたことを示すために、childIndicesとchildrenはnullになります。</target>
        </trans-unit>
        <trans-unit id="b4be84618ead6d10538cc9ccc258161cb330d82f" translate="yes" xml:space="preserve">
          <source>To instantiate a &lt;code&gt;PKIXBuilderParameters&lt;/code&gt; object, an application must specify one or more</source>
          <target state="translated">&lt;code&gt;PKIXBuilderParameters&lt;/code&gt; オブジェクトをインスタンス化するには、アプリケーションで1つ以上を指定する必要があります</target>
        </trans-unit>
        <trans-unit id="a1248ff0d2cedefb6820edb5e4b125b407119479" translate="yes" xml:space="preserve">
          <source>To instantiate a &lt;code&gt;PKIXParameters&lt;/code&gt; object, an application must specify one or more</source>
          <target state="translated">&lt;code&gt;PKIXParameters&lt;/code&gt; オブジェクトをインスタンス化するには、アプリケーションで1つ以上を指定する必要があります</target>
        </trans-unit>
        <trans-unit id="e7a2a17113f40ab1a2b8b839f4be030b470dc7d9" translate="yes" xml:space="preserve">
          <source>To instantiate the new class, UnresolvedPermission assumes the class provides a zero, one, and/or two-argument constructor. The zero-argument constructor would be used to instantiate a permission without a name and without actions. A one-arg constructor is assumed to take a &lt;code&gt;String&lt;/code&gt; name as input, and a two-arg constructor is assumed to take a &lt;code&gt;String&lt;/code&gt; name and &lt;code&gt;String&lt;/code&gt; actions as input. UnresolvedPermission may invoke a constructor with a &lt;code&gt;null&lt;/code&gt; name and/or actions. If an appropriate permission constructor is not available, the UnresolvedPermission is ignored and the relevant permission will not be granted to executing code.</source>
          <target state="translated">新しいクラスをインスタンス化するために、UnresolvedPermissionは、クラスがゼロ、1、または2つの引数のコンストラクターを提供すると想定します。引数なしのコンストラクターは、名前とアクションなしで権限をインスタンス化するために使用されます。 1引数のコンストラクタは &lt;code&gt;String&lt;/code&gt; 名を入力として受け取ると想定され、2引数のコンストラクタは &lt;code&gt;String&lt;/code&gt; 名と &lt;code&gt;String&lt;/code&gt; アクションを入力として受け取ると想定されます。 UnresolvedPermissionは、 &lt;code&gt;null&lt;/code&gt; の名前やアクションを持つコンストラクターを呼び出す場合があります。適切な権限コンストラクターが使用できない場合、UnresolvedPermissionは無視され、関連する権限はコードの実行に付与されません。</target>
        </trans-unit>
        <trans-unit id="59dd951cff89541b8bd5f93b0411b551c7798c0c" translate="yes" xml:space="preserve">
          <source>To interpret localized string representations of a floating-point value, use subclasses of &lt;a href=&quot;../text/numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">浮動小数点値のローカライズされた文字列表現を解釈するには、&lt;a href=&quot;../text/numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; の&lt;/a&gt;サブクラスを使用します。</target>
        </trans-unit>
        <trans-unit id="4db3a57d60a5194adb7c2304e016a6c3b230f081" translate="yes" xml:space="preserve">
          <source>To issue a complete symbolic type descriptor, the compiler must also determine the return type (if polymorphic). This is based on a cast on the method invocation expression, if there is one, or else &lt;code&gt;Object&lt;/code&gt; if the invocation is an expression, or else &lt;code&gt;void&lt;/code&gt; if the invocation is a statement. The cast may be to a primitive type (but not &lt;code&gt;void&lt;/code&gt;).</source>
          <target state="translated">完全なシンボリック型記述子を発行するには、コンパイラーは戻り値の型も決定する必要があります（多態性の場合）。1、または他のがあればこれは、メソッド呼出し式のキャストに基づいて &lt;code&gt;Object&lt;/code&gt; の呼び出しが式、または他のであれば &lt;code&gt;void&lt;/code&gt; の呼び出しがステートメントである場合。キャストはプリミティブ型にすることができ &lt;code&gt;void&lt;/code&gt; （ただし、voidではありません）。</target>
        </trans-unit>
        <trans-unit id="5466cc76778431e496f99d3381063b005b2172db" translate="yes" xml:space="preserve">
          <source>To issue a complete symbolic type descriptor, the compiler must also determine the return type. This is based on a cast on the method invocation expression, if there is one, or else &lt;code&gt;Object&lt;/code&gt; if the invocation is an expression or else &lt;code&gt;void&lt;/code&gt; if the invocation is a statement. The cast may be to a primitive type (but not &lt;code&gt;void&lt;/code&gt;).</source>
          <target state="translated">完全なシンボリック型記述子を発行するには、コンパイラーは戻り型も判別する必要があります。これは、メソッド呼び出し式（存在する場合）、または呼び出しが式の場合は &lt;code&gt;Object&lt;/code&gt; 、呼び出しがステートメントの場合は &lt;code&gt;void&lt;/code&gt; のキャストに基づいています。キャストはプリミティブ型にすることができ &lt;code&gt;void&lt;/code&gt; （ただしvoidにはできません）。</target>
        </trans-unit>
        <trans-unit id="aa22a0c21e50c88f222e2494533202bc0996e2a1" translate="yes" xml:space="preserve">
          <source>To issue a complete symbolic type descriptor, the compiler must also determine the return type. This is based on a cast on the method invocation expression, if there is one, or else &lt;code&gt;Object&lt;/code&gt; if the invocation is an expression, or else &lt;code&gt;void&lt;/code&gt; if the invocation is a statement. The cast may be to a primitive type (but not &lt;code&gt;void&lt;/code&gt;).</source>
          <target state="translated">完全なシンボリック型記述子を発行するには、コンパイラーは戻り値の型も決定する必要があります。1、または他のがあればこれは、メソッド呼出し式のキャストに基づいて &lt;code&gt;Object&lt;/code&gt; の呼び出しが式、または他のであれば &lt;code&gt;void&lt;/code&gt; の呼び出しがステートメントである場合。キャストはプリミティブ型にすることができ &lt;code&gt;void&lt;/code&gt; （ただし、voidではありません）。</target>
        </trans-unit>
        <trans-unit id="3862489804c9e4ccfb61d25cb12af67885cc894f" translate="yes" xml:space="preserve">
          <source>To iterate over the &lt;code&gt;true&lt;/code&gt; bits in a &lt;code&gt;BitSet&lt;/code&gt;, use the following loop:</source>
          <target state="translated">&lt;code&gt;BitSet&lt;/code&gt; の &lt;code&gt;true&lt;/code&gt; ビットを反復処理するには、次のループを使用します。</target>
        </trans-unit>
        <trans-unit id="32cbb9d1a2fb3260f1ec41175195b4ba0e499ea7" translate="yes" xml:space="preserve">
          <source>To learn what ports are available, you can retrieve port info objects through the &lt;a href=&quot;mixer#getSourceLineInfo()&quot;&gt;&lt;code&gt;getSourceLineInfo&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mixer#getTargetLineInfo()&quot;&gt;&lt;code&gt;getTargetLineInfo&lt;/code&gt;&lt;/a&gt; methods of the &lt;code&gt;Mixer&lt;/code&gt; interface. Instances of the &lt;code&gt;Port.Info&lt;/code&gt; class may also be constructed and used to obtain lines matching the parameters specified in the &lt;code&gt;Port.Info&lt;/code&gt; object.</source>
          <target state="translated">使用可能なポートを&lt;a href=&quot;mixer#getTargetLineInfo()&quot;&gt; &lt;code&gt;getTargetLineInfo&lt;/code&gt; &lt;/a&gt;するには、 &lt;code&gt;Mixer&lt;/code&gt; インターフェイスの&lt;a href=&quot;mixer#getSourceLineInfo()&quot;&gt; &lt;code&gt;getSourceLineInfo&lt;/code&gt; &lt;/a&gt;メソッドとgetTargetLineInfoメソッドを使用してポート情報オブジェクトを取得できます。 &lt;code&gt;Port.Info&lt;/code&gt; クラスのインスタンスを作成して使用し、 &lt;code&gt;Port.Info&lt;/code&gt; オブジェクトで指定されたパラメーターに一致する行を取得することもできます。</target>
        </trans-unit>
        <trans-unit id="7d94124009c8104d9400754da5bae70b65e77522" translate="yes" xml:space="preserve">
          <source>To learn what ports are available, you can retrieve port info objects through the &lt;code&gt;&lt;a href=&quot;mixer#getSourceLineInfo--&quot;&gt;&lt;code&gt;getSourceLineInfo&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mixer#getTargetLineInfo--&quot;&gt;&lt;code&gt;getTargetLineInfo&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; methods of the &lt;code&gt;Mixer&lt;/code&gt; interface. Instances of the &lt;code&gt;Port.Info&lt;/code&gt; class may also be constructed and used to obtain lines matching the parameters specified in the &lt;code&gt;Port.Info&lt;/code&gt; object.</source>
          <target state="translated">使用可能なポートを &lt;code&gt;&lt;a href=&quot;mixer#getTargetLineInfo--&quot;&gt;&lt;code&gt;getTargetLineInfo&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; するには、 &lt;code&gt;Mixer&lt;/code&gt; インターフェイスの &lt;code&gt;&lt;a href=&quot;mixer#getSourceLineInfo--&quot;&gt;&lt;code&gt;getSourceLineInfo&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドとgetTargetLineInfoメソッドを使用してポート情報オブジェクトを取得できます。 &lt;code&gt;Port.Info&lt;/code&gt; クラスのインスタンスを作成し、 &lt;code&gt;Port.Info&lt;/code&gt; オブジェクトで指定されたパラメーターと一致する行を取得するために使用することもできます。</target>
        </trans-unit>
        <trans-unit id="495bf9dd4be473b851836868abcd33a6ec1bfa7b" translate="yes" xml:space="preserve">
          <source>To load the JConsole plugins in JConsole, run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca5ea87ce09aec7665e06c31b2fdc7ff940f7d1" translate="yes" xml:space="preserve">
          <source>To locate an encoder for a given encoding name it defines a static factory method which iterates through the known and available providers, returning only when it has located a suitable encoder or has run out of providers.</source>
          <target state="translated">指定したエンコーディング名に対応するエンコーダを見つけるために、既知の利用可能なプロバイダを繰り返し処理し、適切なエンコーダを見つけた場合やプロバイダがなくなった場合にのみ返す static factory メソッドを定義しています。</target>
        </trans-unit>
        <trans-unit id="ac598dff30c7e6f4b3338e570c1a2ac571c32ca6" translate="yes" xml:space="preserve">
          <source>To logout the Subject, the caller calls the &lt;code&gt;logout&lt;/code&gt; method. As with the &lt;code&gt;login&lt;/code&gt; method, this &lt;code&gt;logout&lt;/code&gt; method invokes the &lt;code&gt;logout&lt;/code&gt; method for the configured modules.</source>
          <target state="translated">件名をログアウトするには、呼び出し元が &lt;code&gt;logout&lt;/code&gt; メソッドを呼び出します。 &lt;code&gt;login&lt;/code&gt; メソッドと同様に、この &lt;code&gt;logout&lt;/code&gt; メソッドは、構成されたモジュールの &lt;code&gt;logout&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="200a036ad4ef503032cd273e2682a3988e5db7e4" translate="yes" xml:space="preserve">
          <source>To maintain compatibility with applications that listen to key events but are not aware of input method events, the input method handling in stage 4 provides a compatibility mode for components that do not process input method events. For these components, the committed text is converted to keyTyped key events and processed in the key event pipeline starting at stage 3 instead of in the input method event pipeline.</source>
          <target state="translated">キーイベントをリッスンするが入力メソッドイベントを認識しないアプリケーションとの互換性を維持するために、ステージ4の入力メソッド処理は、入力メソッドイベントを処理しないコンポーネントのための互換モードを提供する。これらのコンポーネントでは、コミットされたテキストは、keyTypedキーイベントに変換され、入力メソッドイベントパイプラインではなく、ステージ3から始まるキーイベントパイプラインで処理されます。</target>
        </trans-unit>
        <trans-unit id="a565dd907d36cc8d69fe9d44176d38b32a8e625f" translate="yes" xml:space="preserve">
          <source>To maintain the specified guarantees, default implementations of methods including &lt;a href=&quot;#putIfAbsent(K,V)&quot;&gt;&lt;code&gt;putIfAbsent(K, V)&lt;/code&gt;&lt;/a&gt; inherited from &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; must be overridden by implementations of this interface. Similarly, implementations of the collections returned by methods &lt;a href=&quot;../map#keySet()&quot;&gt;&lt;code&gt;Map.keySet()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../map#values()&quot;&gt;&lt;code&gt;Map.values()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../map#entrySet()&quot;&gt;&lt;code&gt;Map.entrySet()&lt;/code&gt;&lt;/a&gt; must override methods such as &lt;code&gt;removeIf&lt;/code&gt; when necessary to preserve atomicity guarantees.</source>
          <target state="translated">指定された保証を維持するには、&lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;から継承された&lt;a href=&quot;#putIfAbsent(K,V)&quot;&gt; &lt;code&gt;putIfAbsent(K, V)&lt;/code&gt; &lt;/a&gt;を含むメソッドのデフォルトの実装を、このインターフェイスの実装でオーバーライドする必要があります。同様に、メソッド&lt;a href=&quot;../map#keySet()&quot;&gt; &lt;code&gt;Map.keySet()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../map#values()&quot;&gt; &lt;code&gt;Map.values()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../map#entrySet()&quot;&gt; &lt;code&gt;Map.entrySet()&lt;/code&gt; &lt;/a&gt;によって返されるコレクションの実装は、原子性の保証を維持するために必要な場合、 &lt;code&gt;removeIf&lt;/code&gt; などのメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="af0222657df4f703bd845c942bc994a362ebce7f" translate="yes" xml:space="preserve">
          <source>To make MBean implementation simple, the JMX API includes the notion of &lt;em&gt;Standard MBeans&lt;/em&gt;. A Standard MBean is one whose attributes and operations are deduced from a Java interface using certain naming patterns, similar to those used by JavaBeans&amp;trade;. For example, consider an interface like this:</source>
          <target state="translated">MBeanの実装を簡単にするために、JMXAPIには&lt;em&gt;標準MBeanの&lt;/em&gt;概念が含まれてい&lt;em&gt;ます&lt;/em&gt;。標準MBeanは、JavaBeans&amp;trade;で使用されるものと同様に、特定の命名パターンを使用してJavaインターフェースから属性と操作が推測されるものです。たとえば、次のようなインターフェイスについて考えてみます。</target>
        </trans-unit>
        <trans-unit id="c5e7b5fa49b2e4052f3cf5d0206015dddaeac66e" translate="yes" xml:space="preserve">
          <source>To make MBean implementation simple, the JMX API includes the notion of &lt;em&gt;Standard MBeans&lt;/em&gt;. A Standard MBean is one whose attributes and operations are deduced from a Java interface using certain naming patterns, similar to those used by JavaBeans. For example, consider an interface like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8370a551b9ecf25330a7b4809b220f9b66585147" translate="yes" xml:space="preserve">
          <source>To make MBean implementation simple, the JMX API includes the notion of &lt;em&gt;Standard MBeans&lt;/em&gt;. A Standard MBean is one whose attributes and operations are deduced from a Java interface using certain naming patterns, similar to those used by JavaBeans&lt;sup&gt;TM&lt;/sup&gt;. For example, consider an interface like this:</source>
          <target state="translated">MBeanの実装を簡単にするために、JMX APIには&lt;em&gt;標準MBeanの&lt;/em&gt;概念が含まれてい&lt;em&gt;ます&lt;/em&gt;。A標準MBeanは、その属性と操作のJavaBeansで使用されるものと同様の特定の命名パターンを使用して、Javaインタフェースから推定されているものである&lt;sup&gt;TMを&lt;/sup&gt;。たとえば、次のようなインターフェースについて考えてみます。</target>
        </trans-unit>
        <trans-unit id="8dc4298fbcae4cb70b048b2b3ee0e77d114153ad" translate="yes" xml:space="preserve">
          <source>To make each &lt;code&gt;Font&lt;/code&gt; available to Font constructors it must be registered in the &lt;code&gt;GraphicsEnvironment&lt;/code&gt; by calling &lt;a href=&quot;graphicsenvironment#registerFont(java.awt.Font)&quot;&gt;&lt;code&gt;registerFont(Font)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">各 &lt;code&gt;Font&lt;/code&gt; をフォントコンストラクターで使用できるようにするには、&lt;a href=&quot;graphicsenvironment#registerFont(java.awt.Font)&quot;&gt; &lt;code&gt;registerFont(Font)&lt;/code&gt; を&lt;/a&gt;呼び出して &lt;code&gt;GraphicsEnvironment&lt;/code&gt; に登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="2be6ccab246702446d76d77301b68cc2bd7b3c8d" translate="yes" xml:space="preserve">
          <source>To make edit-saves automatic whenever the user changes their position in the tree, use &lt;a href=&quot;#setInvokesStopCellEditing(boolean)&quot;&gt;&lt;code&gt;setInvokesStopCellEditing(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ユーザーがツリー内の位置を変更するたびに編集保存を自動化するには、&lt;a href=&quot;#setInvokesStopCellEditing(boolean)&quot;&gt; &lt;code&gt;setInvokesStopCellEditing(boolean)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="fd942e71c8bc73a626886336a4686f9ee992b69b" translate="yes" xml:space="preserve">
          <source>To make it easier to navigate a &lt;code&gt;SyncResolver&lt;/code&gt; object, especially when there are large numbers of rows with no conflicts, the &lt;code&gt;SyncResolver&lt;/code&gt; interface defines the methods &lt;code&gt;nextConflict&lt;/code&gt; and &lt;code&gt;previousConflict&lt;/code&gt;, which move only to rows that contain at least one conflict value. Then an application can call the &lt;code&gt;SyncResolver&lt;/code&gt; method &lt;code&gt;getConflictValue&lt;/code&gt;, supplying it with the column number, to get the conflict value itself. The code fragment in the next section gives an example.</source>
          <target state="translated">&lt;code&gt;SyncResolver&lt;/code&gt; オブジェクトのナビゲートを容易にするために、特に競合のない行が多数ある場合、 &lt;code&gt;SyncResolver&lt;/code&gt; インターフェイスはメソッド &lt;code&gt;nextConflict&lt;/code&gt; および &lt;code&gt;previousConflict&lt;/code&gt; を定義します。これらは、少なくとも1つの競合値を含む行にのみ移動します。次に、アプリケーションは &lt;code&gt;SyncResolver&lt;/code&gt; メソッド &lt;code&gt;getConflictValue&lt;/code&gt; を呼び出して列番号を指定し、競合値自体を取得できます。次のセクションのコードフラグメントに例を示します。</target>
        </trans-unit>
        <trans-unit id="1ea59fd5e24ed5e053aa6040db4ae63cd06cfd3d" translate="yes" xml:space="preserve">
          <source>To make the &lt;code&gt;Font&lt;/code&gt; available to Font constructors the returned &lt;code&gt;Font&lt;/code&gt; must be registered in the &lt;code&gt;GraphicsEnvironment&lt;/code&gt; by calling &lt;a href=&quot;graphicsenvironment#registerFont(java.awt.Font)&quot;&gt;&lt;code&gt;registerFont(Font)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フォントコンストラクターが &lt;code&gt;Font&lt;/code&gt; 使用できるようにするには、&lt;a href=&quot;graphicsenvironment#registerFont(java.awt.Font)&quot;&gt; &lt;code&gt;registerFont(Font)&lt;/code&gt; を&lt;/a&gt;呼び出して、返された &lt;code&gt;Font&lt;/code&gt; &lt;code&gt;GraphicsEnvironment&lt;/code&gt; に登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="1a451ca1030952d13ab8c6eccc71c2d4c0d4e7e3" translate="yes" xml:space="preserve">
          <source>To make this concrete, suppose &lt;code&gt;list&lt;/code&gt; comprises &lt;code&gt;[a, b, c, d, e]&lt;/code&gt;. To move the element at index &lt;code&gt;1&lt;/code&gt; (&lt;code&gt;b&lt;/code&gt;) forward two positions, perform the following invocation:</source>
          <target state="translated">このコンクリートを作るために、仮定する &lt;code&gt;list&lt;/code&gt; 含む &lt;code&gt;[a, b, c, d, e]&lt;/code&gt; 。インデックス &lt;code&gt;1&lt;/code&gt; （ &lt;code&gt;b&lt;/code&gt; ）の要素を2つ前に移動するには、次の呼び出しを実行します。</target>
        </trans-unit>
        <trans-unit id="e93fddb753e32a2945a92ab0e6c73ca71fd6b594" translate="yes" xml:space="preserve">
          <source>To maximize the usefulness of this kit, a great deal of effort has gone into making it extendable. These are some of the features.</source>
          <target state="translated">このキットの有用性を最大限に引き出すために、拡張性を高めるために多大な努力が払われています。その機能の一部をご紹介します。</target>
        </trans-unit>
        <trans-unit id="b4c58cb2bc69f7e6c96cfbf89e008c558629746d" translate="yes" xml:space="preserve">
          <source>To minimize the resources used by a bean, the classes used by bean editors are loaded only when the bean is being edited. They are not needed while the bean is running in an application and therefore not loaded. This information is kept in what's called a bean-info (see &lt;a href=&quot;beaninfo&quot;&gt;&lt;code&gt;BeanInfo&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Beanが使用するリソースを最小限に抑えるために、Beanエディターが使用するクラスは、Beanが編集されているときにのみロードされます。Beanがアプリケーションで実行されている間は必要ないため、ロードされません。この情報は、いわゆるbean-infoに保持されます（&lt;a href=&quot;beaninfo&quot;&gt; &lt;code&gt;BeanInfo&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="001ebdf96f05e6d648887ada3f8bd648fe04f7a1" translate="yes" xml:space="preserve">
          <source>To modify the Principals Set, the caller must have &lt;code&gt;AuthPermission(&quot;modifyPrincipals&quot;)&lt;/code&gt;. To modify the public credential Set, the caller must have &lt;code&gt;AuthPermission(&quot;modifyPublicCredentials&quot;)&lt;/code&gt;. To modify the private credential Set, the caller must have &lt;code&gt;AuthPermission(&quot;modifyPrivateCredentials&quot;)&lt;/code&gt;.</source>
          <target state="translated">プリンシパルセットを変更するには、呼び出し元に &lt;code&gt;AuthPermission(&quot;modifyPrincipals&quot;)&lt;/code&gt; が必要です。パブリック資格情報セットを変更するには、呼び出し元に &lt;code&gt;AuthPermission(&quot;modifyPublicCredentials&quot;)&lt;/code&gt; が必要です。プライベート資格情報セットを変更するには、呼び出し元に &lt;code&gt;AuthPermission(&quot;modifyPrivateCredentials&quot;)&lt;/code&gt; が必要です。</target>
        </trans-unit>
        <trans-unit id="747d9090669e7fe96070fad66923fdb34ea9838f" translate="yes" xml:space="preserve">
          <source>To monitor a particular job see &lt;a href=&quot;printjoblistener&quot;&gt;&lt;code&gt;PrintJobListener&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;printjobattributelistener&quot;&gt;&lt;code&gt;PrintJobAttributeListener&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">特定のジョブを監視するには、&lt;a href=&quot;printjoblistener&quot;&gt; &lt;code&gt;PrintJobListener&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;printjobattributelistener&quot;&gt; &lt;code&gt;PrintJobAttributeListener&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5089e9351790c46132512de82fa88484edb534b8" translate="yes" xml:space="preserve">
          <source>To move more than one element forward, increase the absolute value of the rotation distance. To move elements backward, use a positive shift distance.</source>
          <target state="translated">複数の要素を前方に移動させるには、回転距離の絶対値を大きくします。要素を後方に移動させるには、正のシフト距離を使用します。</target>
        </trans-unit>
        <trans-unit id="cb3503b85c97282f7e6f2c755c071c992dea3dbf" translate="yes" xml:space="preserve">
          <source>To obtain a &lt;a href=&quot;saxtransformerfactory&quot;&gt;&lt;code&gt;SAXTransformerFactory&lt;/code&gt;&lt;/a&gt;, the caller must cast the &lt;a href=&quot;../transformerfactory&quot;&gt;&lt;code&gt;TransformerFactory&lt;/code&gt;&lt;/a&gt; instance returned from &lt;a href=&quot;../transformerfactory#newInstance()&quot;&gt;&lt;code&gt;TransformerFactory.newInstance()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;saxtransformerfactory&quot;&gt; &lt;code&gt;SAXTransformerFactory&lt;/code&gt; &lt;/a&gt;を取得するには、呼び出し元は&lt;a href=&quot;../transformerfactory#newInstance()&quot;&gt; &lt;code&gt;TransformerFactory.newInstance()&lt;/code&gt; &lt;/a&gt;から返された&lt;a href=&quot;../transformerfactory&quot;&gt; &lt;code&gt;TransformerFactory&lt;/code&gt; &lt;/a&gt;インスタンスをキャストする必要があります。</target>
        </trans-unit>
        <trans-unit id="b424b38eab454327d9525270686fc4060233f03f" translate="yes" xml:space="preserve">
          <source>To obtain a &lt;code&gt;CompactNumberFormat&lt;/code&gt; for a locale, use one of the factory methods given by &lt;code&gt;NumberFormat&lt;/code&gt; for compact number formatting. For example, &lt;a href=&quot;numberformat#getCompactNumberInstance(java.util.Locale,java.text.NumberFormat.Style)&quot;&gt;&lt;code&gt;NumberFormat.getCompactNumberInstance(Locale, Style)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca70a679375afb9e5c1facb8c4a73f234fc0942" translate="yes" xml:space="preserve">
          <source>To obtain a &lt;code&gt;NumberFormat&lt;/code&gt; for a specific locale, including the default locale, call one of &lt;code&gt;NumberFormat&lt;/code&gt;'s factory methods, such as &lt;code&gt;getInstance()&lt;/code&gt;. In general, do not call the &lt;code&gt;DecimalFormat&lt;/code&gt; constructors directly, since the &lt;code&gt;NumberFormat&lt;/code&gt; factory methods may return subclasses other than &lt;code&gt;DecimalFormat&lt;/code&gt;. If you need to customize the format object, do something like this:</source>
          <target state="translated">デフォルトロケールを含む特定のロケールの &lt;code&gt;NumberFormat&lt;/code&gt; を取得するには、 &lt;code&gt;getInstance()&lt;/code&gt; などの &lt;code&gt;NumberFormat&lt;/code&gt; のファクトリメソッドの1つを呼び出します。 &lt;code&gt;NumberFormat&lt;/code&gt; ファクトリメソッドは &lt;code&gt;DecimalFormat&lt;/code&gt; 以外のサブクラスを返す可能性があるため、通常は &lt;code&gt;DecimalFormat&lt;/code&gt; コンストラクタを直接呼び出さないでください。フォーマットオブジェクトをカスタマイズする必要がある場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="ae8a17b5ce812b5ceaad690b87f673999972dec5" translate="yes" xml:space="preserve">
          <source>To obtain a pure Julian calendar, set the change date to &lt;code&gt;Date(Long.MAX_VALUE)&lt;/code&gt;. To obtain a pure Gregorian calendar, set the change date to &lt;code&gt;Date(Long.MIN_VALUE)&lt;/code&gt;.</source>
          <target state="translated">純粋なユリウス暦を取得するには、変更日を &lt;code&gt;Date(Long.MAX_VALUE)&lt;/code&gt; に設定します。純粋なグレゴリオ暦を取得するには、変更日を &lt;code&gt;Date(Long.MIN_VALUE)&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="20e33629fe48c53be57864a0404e40b70573533b" translate="yes" xml:space="preserve">
          <source>To obtain a service ticket to initiate a context with the &quot;host&quot; service the permission is constructed as follows:</source>
          <target state="translated">ホスト」サービスでコンテキストを開始するためのサービスチケットを取得するには、パーミッションは以下のように構築されます。</target>
        </trans-unit>
        <trans-unit id="4183bcd6b7f5e700ca506552b7f6e4893d309d35" translate="yes" xml:space="preserve">
          <source>To obtain standard formats for a given locale, use the factory methods on NumberFormat such as getInstance or getCurrencyInstance. If you need only minor adjustments to a standard format, you can modify the format returned by a NumberFormat factory method.</source>
          <target state="translated">指定したロケールの標準フォーマットを取得するには、NumberFormat のファクトリーメソッド getInstance や getCurrencyInstance を使用します。標準フォーマットにちょっとした調整が必要な場合は、NumberFormat のファクトリメソッドで返されたフォーマットを変更することができます。</target>
        </trans-unit>
        <trans-unit id="bac3c8ec9809edfd530be7395e55daf334bf4e69" translate="yes" xml:space="preserve">
          <source>To obtain standard formats for a given locale, use the factory methods on NumberFormat such as getNumberInstance. These factories will return the most appropriate sub-class of NumberFormat for a given locale.</source>
          <target state="translated">指定したロケールの標準フォーマットを取得するには、NumberFormat のファクトリーメソッド getNumberInstance などを使用します。これらのファクトリは、指定したロケールに最も適した NumberFormat のサブクラスを返します。</target>
        </trans-unit>
        <trans-unit id="1e223b0a31093d4eb61af1c92247a8a8a470a822" translate="yes" xml:space="preserve">
          <source>To obtain the current position in microseconds, use the &lt;a href=&quot;dataline#getMicrosecondPosition()&quot;&gt;&lt;code&gt;getMicrosecondPosition&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;DataLine&lt;/code&gt;.</source>
          <target state="translated">マイクロ秒&lt;a href=&quot;dataline#getMicrosecondPosition()&quot;&gt; &lt;code&gt;getMicrosecondPosition&lt;/code&gt; &lt;/a&gt;で現在の位置を取得するには、 &lt;code&gt;DataLine&lt;/code&gt; のgetMicrosecondPositionメソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="62bf607232950c6e5e7025ae2f04f0f1bad57b89" translate="yes" xml:space="preserve">
          <source>To obtain the current position in microseconds, use the &lt;code&gt;&lt;a href=&quot;dataline#getMicrosecondPosition--&quot;&gt;&lt;code&gt;getMicrosecondPosition&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;DataLine&lt;/code&gt;.</source>
          <target state="translated">現在の位置をマイクロ秒で &lt;code&gt;&lt;a href=&quot;dataline#getMicrosecondPosition--&quot;&gt;&lt;code&gt;getMicrosecondPosition&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; するには、 &lt;code&gt;DataLine&lt;/code&gt; のgetMicrosecondPositionメソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="ff87a331546e8ce98e59d719dafed97e11e78b05" translate="yes" xml:space="preserve">
          <source>To obtain the current position in sample frames, use the &lt;a href=&quot;dataline#getFramePosition()&quot;&gt;&lt;code&gt;getFramePosition&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;DataLine&lt;/code&gt;.</source>
          <target state="translated">サンプルフレームの現在の位置を取得するには、 &lt;code&gt;DataLine&lt;/code&gt; の&lt;a href=&quot;dataline#getFramePosition()&quot;&gt; &lt;code&gt;getFramePosition&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="6363ba55df8358f378be9461ccc703149c5241ef" translate="yes" xml:space="preserve">
          <source>To obtain the current position in sample frames, use the &lt;code&gt;&lt;a href=&quot;dataline#getFramePosition--&quot;&gt;&lt;code&gt;getFramePosition&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;DataLine&lt;/code&gt;.</source>
          <target state="translated">サンプルフレームの現在の位置を取得するには、 &lt;code&gt;DataLine&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;dataline#getFramePosition--&quot;&gt;&lt;code&gt;getFramePosition&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="a6430dab5386c8f3fc0e0cf226db51658d927334" translate="yes" xml:space="preserve">
          <source>To obtain the later offset during an overlap, call &lt;a href=&quot;chronozoneddatetime#withLaterOffsetAtOverlap()&quot;&gt;&lt;code&gt;ChronoZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">オーバーラップ中に後のオフセットを取得するには、このメソッドの結果に対して&lt;a href=&quot;chronozoneddatetime#withLaterOffsetAtOverlap()&quot;&gt; &lt;code&gt;ChronoZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="421ed1485a6e75b37273583056082a34fe2d7c71" translate="yes" xml:space="preserve">
          <source>To obtain the later offset during an overlap, call &lt;a href=&quot;chronozoneddatetime#withLaterOffsetAtOverlap--&quot;&gt;&lt;code&gt;ChronoZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">オーバーラップ中に後でオフセットを取得するには、このメソッドの結果に対して&lt;a href=&quot;chronozoneddatetime#withLaterOffsetAtOverlap--&quot;&gt; &lt;code&gt;ChronoZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="a961efe4d884450a5d578beac9bf433224d6f992" translate="yes" xml:space="preserve">
          <source>To obtain the later offset during an overlap, call &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap()&quot;&gt;&lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; on the result of this method. To throw an exception when there is a gap or overlap, use &lt;a href=&quot;zoneddatetime#ofStrict(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt;&lt;code&gt;ZonedDateTime.ofStrict(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オーバーラップ中に後のオフセットを取得するには、このメソッドの結果に対して&lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap()&quot;&gt; &lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt;を呼び出します。ギャップまたはオーバーラップがある場合に例外をスローするには、&lt;a href=&quot;zoneddatetime#ofStrict(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt; &lt;code&gt;ZonedDateTime.ofStrict(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="a76d6f4b82757c761a4c955f850c236f16199c83" translate="yes" xml:space="preserve">
          <source>To obtain the later offset during an overlap, call &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt;&lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; on the result of this method. To throw an exception when there is a gap or overlap, use &lt;a href=&quot;zoneddatetime#ofStrict-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt;&lt;code&gt;ZonedDateTime.ofStrict(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オーバーラップ中に後でオフセットを取得するには、このメソッドの結果で&lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt; &lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt;を呼び出します。ギャップまたはオーバーラップがある場合に例外をスローするには、&lt;a href=&quot;zoneddatetime#ofStrict-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt; &lt;code&gt;ZonedDateTime.ofStrict(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9c13765230d6cb4336c7100851cd30554f8e01ac" translate="yes" xml:space="preserve">
          <source>To perform a computation, stream &lt;a href=&quot;package-summary#StreamOps&quot;&gt;operations&lt;/a&gt; are composed into a &lt;em&gt;stream pipeline&lt;/em&gt;. A stream pipeline consists of a source (which might be an array, a collection, a generator function, an I/O channel, etc), zero or more &lt;em&gt;intermediate operations&lt;/em&gt; (which transform a stream into another stream, such as &lt;a href=&quot;#filter(java.util.function.Predicate)&quot;&gt;&lt;code&gt;filter(Predicate)&lt;/code&gt;&lt;/a&gt;), and a &lt;em&gt;terminal operation&lt;/em&gt; (which produces a result or side-effect, such as &lt;a href=&quot;#count()&quot;&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#forEach(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEach(Consumer)&lt;/code&gt;&lt;/a&gt;). Streams are lazy; computation on the source data is only performed when the terminal operation is initiated, and source elements are consumed only as needed.</source>
          <target state="translated">計算を実行するために、ストリーム&lt;a href=&quot;package-summary#StreamOps&quot;&gt;操作&lt;/a&gt;は&lt;em&gt;ストリームパイプラインに&lt;/em&gt;構成され&lt;em&gt;ます&lt;/em&gt;。ストリームパイプラインは、ソース（配列、コレクション、ジェネレーター関数、I / Oチャネルなど）、0個以上の&lt;em&gt;中間操作&lt;/em&gt;（ストリームを&lt;a href=&quot;#filter(java.util.function.Predicate)&quot;&gt; &lt;code&gt;filter(Predicate)&lt;/code&gt; &lt;/a&gt;などの別のストリームに変換する）で構成されます。）、および&lt;em&gt;端末操作&lt;/em&gt;（&lt;a href=&quot;#count()&quot;&gt; &lt;code&gt;count()&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#forEach(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEach(Consumer)&lt;/code&gt; &lt;/a&gt;などの結果または副作用を生成します）。ストリームは怠惰です。ソースデータの計算は、端末操作が開始されたときにのみ実行され、ソース要素は必要な場合にのみ消費されます。</target>
        </trans-unit>
        <trans-unit id="955cdb74994f65d4a739b1a149a26b028d610190" translate="yes" xml:space="preserve">
          <source>To perform a computation, stream &lt;a href=&quot;package-summary#StreamOps&quot;&gt;operations&lt;/a&gt; are composed into a &lt;em&gt;stream pipeline&lt;/em&gt;. A stream pipeline consists of a source (which might be an array, a collection, a generator function, an I/O channel, etc), zero or more &lt;em&gt;intermediate operations&lt;/em&gt; (which transform a stream into another stream, such as &lt;a href=&quot;stream#filter-java.util.function.Predicate-&quot;&gt;&lt;code&gt;filter(Predicate)&lt;/code&gt;&lt;/a&gt;), and a &lt;em&gt;terminal operation&lt;/em&gt; (which produces a result or side-effect, such as &lt;a href=&quot;stream#count--&quot;&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stream#forEach-java.util.function.Consumer-&quot;&gt;&lt;code&gt;forEach(Consumer)&lt;/code&gt;&lt;/a&gt;). Streams are lazy; computation on the source data is only performed when the terminal operation is initiated, and source elements are consumed only as needed.</source>
          <target state="translated">計算を実行するために、ストリーム&lt;a href=&quot;package-summary#StreamOps&quot;&gt;操作&lt;/a&gt;は&lt;em&gt;ストリームパイプラインに&lt;/em&gt;構成され&lt;em&gt;ます&lt;/em&gt;。ストリームパイプラインは、ソース（配列、コレクション、ジェネレーター関数、I / Oチャネルなど）、ゼロ個以上の&lt;em&gt;中間操作&lt;/em&gt;（ストリームを&lt;a href=&quot;stream#filter-java.util.function.Predicate-&quot;&gt; &lt;code&gt;filter(Predicate)&lt;/code&gt; &lt;/a&gt;などの別のストリームに変換する）で構成されます（述語））、および&lt;em&gt;ターミナル操作&lt;/em&gt;（&lt;a href=&quot;stream#count--&quot;&gt; &lt;code&gt;count()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stream#forEach-java.util.function.Consumer-&quot;&gt; &lt;code&gt;forEach(Consumer)&lt;/code&gt; &lt;/a&gt;などの結果または副作用を生成します）。ストリームは遅延します。ソースデータの計算は、ターミナル操作が開始されたときにのみ実行され、ソース要素は必要な場合にのみ消費されます。</target>
        </trans-unit>
        <trans-unit id="f24477df6a8f7d518c4250334cd224fae9b1651e" translate="yes" xml:space="preserve">
          <source>To permit the discovery of additional chronologies, the &lt;a href=&quot;../../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; is used. A file must be added to the &lt;code&gt;META-INF/services&lt;/code&gt; directory with the name 'java.time.chrono.Chronology' listing the implementation classes. See the ServiceLoader for more details on service loading. For lookup by id or calendarType, the system provided calendars are found first followed by application provided calendars.</source>
          <target state="translated">追加の年表の検出を許可するには、&lt;a href=&quot;../../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;を使用します。実装クラスをリストした「java.time.chrono.Chronology」という名前のファイルを &lt;code&gt;META-INF/services&lt;/code&gt; ディレクトリに追加する必要があります。サービスの読み込みの詳細については、ServiceLoaderを参照してください。idまたはcalendarTypeによる検索の場合、システム提供のカレンダーが最初に見つかり、次にアプリケーション提供のカレンダーが見つかります。</target>
        </trans-unit>
        <trans-unit id="e20e16a6bc01bfb3a045c27d84b3fd5f5b87c088" translate="yes" xml:space="preserve">
          <source>To preserve optimization opportunities this method binds each stream to its source and accepts only two streams as parameters. For example, the exact size of the concatenated stream source can be computed if the exact size of each input stream source is known. To concatenate more streams without binding, or without nested calls to this method, try creating a stream of streams and flat-mapping with the identity function, for example:</source>
          <target state="translated">最適化の機会を確保するために、このメソッドでは各ストリームをソースにバインドし、パラメータとして 2 つのストリームのみを受け入れます。例えば、各入力ストリーム・ソースの正確なサイズが既知であれば、連結されたストリーム・ソースの正確なサイズを計算できます。バインドせずに、またはこのメソッドをネストさせずに、より多くのストリームを連結するには、ストリームのストリームを作成し、identity 関数を使用してフラット・マッピングしてみてください。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
