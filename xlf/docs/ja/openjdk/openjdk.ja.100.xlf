<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="4e121c6238877cfa52264159c47971fcd2c53d4f" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method zero or more times, as long as additional input may be available, passing &lt;code&gt;false&lt;/code&gt; for the &lt;code&gt;endOfInput&lt;/code&gt; argument and filling the input buffer and flushing the output buffer between invocations;</source>
          <target state="translated">追加の入力が利用可能である限り、&lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt;メソッドを0回以上 &lt;code&gt;endOfInput&lt;/code&gt; 、endOfInput引数に &lt;code&gt;false&lt;/code&gt; を渡し、入力バッファーを埋め、呼び出しの間に出力バッファーをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="75110aeff412d0312d551ca3b8f54980d1caf107" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method one final time, passing &lt;code&gt;true&lt;/code&gt; for the &lt;code&gt;endOfInput&lt;/code&gt; argument; and then</source>
          <target state="translated">最後にもう一度&lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt;メソッドを &lt;code&gt;endOfInput&lt;/code&gt; 、endOfInput引数に &lt;code&gt;true&lt;/code&gt; を渡します。その後</target>
        </trans-unit>
        <trans-unit id="4ba8de286125469e68db05a4b0bc62f5d771f6a6" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method zero or more times, as long as additional input may be available, passing &lt;code&gt;false&lt;/code&gt; for the &lt;code&gt;endOfInput&lt;/code&gt; argument and filling the input buffer and flushing the output buffer between invocations;</source>
          <target state="translated">追加の入力が利用可能である限り、&lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt;メソッドを0回以上 &lt;code&gt;endOfInput&lt;/code&gt; 、endOfInput引数に &lt;code&gt;false&lt;/code&gt; を渡し、入力バッファーを埋め、呼び出しの間に出力バッファーをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="5398a4d5deb1c5b05cdb3748221bdeef0613bb6c" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;#findClass(java.lang.String)&quot;&gt;&lt;code&gt;findClass(String)&lt;/code&gt;&lt;/a&gt; method to find the class.</source>
          <target state="translated">&lt;a href=&quot;#findClass(java.lang.String)&quot;&gt; &lt;code&gt;findClass(String)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、クラスを検索します。</target>
        </trans-unit>
        <trans-unit id="84db886a1d9f542431af8afa6a873131bb90d847" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;#flush(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; method so that the encoder can flush any internal state to the output buffer.</source>
          <target state="translated">エンコーダーが内部状態を出力バッファーにフラッシュできるように、&lt;a href=&quot;#flush(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="742d6169d9f68c66c5364c4933c91afbacc38322" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;#flush(java.nio.CharBuffer)&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; method so that the decoder can flush any internal state to the output buffer.</source>
          <target state="translated">デコーダーが内部状態を出力バッファーにフラッシュできるように、&lt;a href=&quot;#flush(java.nio.CharBuffer)&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="de739770401ab7a3d9745c9e34f95bf108340ed2" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;#hasArray()&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">起動&lt;a href=&quot;#hasArray()&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; の&lt;/a&gt;このバッファがアクセス可能な補助配列を持っていることを確認するためにこのメソッドを呼び出す前に、方法。</target>
        </trans-unit>
        <trans-unit id="7d20ee1f9829c26b63a0abff6327cc1493483844" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method on the parent class loader. If the parent is &lt;code&gt;null&lt;/code&gt; the class loader built into the virtual machine is used, instead.</source>
          <target state="translated">親クラスローダーで&lt;a href=&quot;#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。親が &lt;code&gt;null&lt;/code&gt; の場合、代わりに仮想マシンに組み込まれているクラスローダーが使用されます。</target>
        </trans-unit>
        <trans-unit id="35f3adb3de4d1e6782e662e0d008229882f155a0" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;buffer#hasArray--&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">起動&lt;a href=&quot;buffer#hasArray--&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; の&lt;/a&gt;このバッファがアクセス可能な補助配列を持っていることを確認するためにこのメソッドを呼び出す前に、方法。</target>
        </trans-unit>
        <trans-unit id="7fddbe46229b3b3526010f76e7d3fc64162c3363" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;bytebuffer#hasArray--&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">起動&lt;a href=&quot;bytebuffer#hasArray--&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; の&lt;/a&gt;このバッファがアクセス可能な補助配列を持っていることを確認するためにこのメソッドを呼び出す前に、方法。</target>
        </trans-unit>
        <trans-unit id="f0825350bc7d2a7a2838fe4fd58c7d9e041d7e45" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;charbuffer#hasArray--&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">起動&lt;a href=&quot;charbuffer#hasArray--&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; の&lt;/a&gt;このバッファがアクセス可能な補助配列を持っていることを確認するためにこのメソッドを呼び出す前に、方法。</target>
        </trans-unit>
        <trans-unit id="06729342a9d7941483ecf03fc4cbd5628bac89fd" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method one final time, passing &lt;code&gt;true&lt;/code&gt; for the &lt;code&gt;endOfInput&lt;/code&gt; argument; and then</source>
          <target state="translated">最後にもう一度、&lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt;メソッドを &lt;code&gt;endOfInput&lt;/code&gt; 、endOfInput引数に &lt;code&gt;true&lt;/code&gt; を渡します。その後</target>
        </trans-unit>
        <trans-unit id="c8d9e98449c69a8758a70158709fb91add9d2d1b" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method zero or more times, as long as additional input may be available, passing &lt;code&gt;false&lt;/code&gt; for the &lt;code&gt;endOfInput&lt;/code&gt; argument and filling the input buffer and flushing the output buffer between invocations;</source>
          <target state="translated">追加の入力が利用可能である限り、&lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt;メソッドを0回以上 &lt;code&gt;endOfInput&lt;/code&gt; ます。endOfInput引数に &lt;code&gt;false&lt;/code&gt; を渡し、入力バッファーを満たし、呼び出しの間に出力バッファーをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="23b214042b726ff53a4a7b5b6d9765ff6afc9d1c" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;charsetdecoder#flush-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; method so that the decoder can flush any internal state to the output buffer.</source>
          <target state="translated">デコーダーが内部状態を出力バッファーにフラッシュできるように、&lt;a href=&quot;charsetdecoder#flush-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="7b59b0a34d9fe0d0109d73931b63167d9a15fbba" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method one final time, passing &lt;code&gt;true&lt;/code&gt; for the &lt;code&gt;endOfInput&lt;/code&gt; argument; and then</source>
          <target state="translated">呼び出し&lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt;方法最後に1回、通過 &lt;code&gt;true&lt;/code&gt; ため &lt;code&gt;endOfInput&lt;/code&gt; の引数。その後</target>
        </trans-unit>
        <trans-unit id="0edd49b80796bb4f6b8ad7abce3fad2ecf413f65" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method zero or more times, as long as additional input may be available, passing &lt;code&gt;false&lt;/code&gt; for the &lt;code&gt;endOfInput&lt;/code&gt; argument and filling the input buffer and flushing the output buffer between invocations;</source>
          <target state="translated">追加の入力が利用可能である限り、&lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt;メソッドを0回以上 &lt;code&gt;endOfInput&lt;/code&gt; ます。endOfInput引数に &lt;code&gt;false&lt;/code&gt; を渡し、入力バッファーに入力し、呼び出し間で出力バッファーをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="a7d9730556ee19db721a4b1e552a7adfa7af79f8" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;charsetencoder#flush-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; method so that the encoder can flush any internal state to the output buffer.</source>
          <target state="translated">エンコーダーが内部状態を出力バッファーにフラッシュできるように、&lt;a href=&quot;charsetencoder#flush-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="0706b9c2bb2d4677c1bedae45943eb9912f243e9" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;classloader#findClass-java.lang.String-&quot;&gt;&lt;code&gt;findClass(String)&lt;/code&gt;&lt;/a&gt; method to find the class.</source>
          <target state="translated">&lt;a href=&quot;classloader#findClass-java.lang.String-&quot;&gt; &lt;code&gt;findClass(String)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してクラスを検索します。</target>
        </trans-unit>
        <trans-unit id="d117015802e4688474f221a3e2412aa7aaca3ce7" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on the parent class loader. If the parent is &lt;code&gt;null&lt;/code&gt; the class loader built-in to the virtual machine is used, instead.</source>
          <target state="translated">親クラスローダーで&lt;a href=&quot;classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。親が &lt;code&gt;null&lt;/code&gt; の場合は、代わりに仮想マシンに組み込まれているクラスローダーが使用されます。</target>
        </trans-unit>
        <trans-unit id="27b6a13b9b14ced504eab55fd8b7c122798f61e6" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;doublebuffer#hasArray--&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">起動&lt;a href=&quot;doublebuffer#hasArray--&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; の&lt;/a&gt;このバッファがアクセス可能な補助配列を持っていることを確認するためにこのメソッドを呼び出す前に、方法。</target>
        </trans-unit>
        <trans-unit id="9c3622102457e49ffc20e55266df372ca6a895d5" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;floatbuffer#hasArray--&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">起動&lt;a href=&quot;floatbuffer#hasArray--&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; の&lt;/a&gt;このバッファがアクセス可能な補助配列を持っていることを確認するためにこのメソッドを呼び出す前に、方法。</target>
        </trans-unit>
        <trans-unit id="bf8de384f16ea1d2f67402c2b18cd13e98f8896e" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;intbuffer#hasArray--&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">起動&lt;a href=&quot;intbuffer#hasArray--&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; の&lt;/a&gt;このバッファがアクセス可能な補助配列を持っていることを確認するためにこのメソッドを呼び出す前に、方法。</target>
        </trans-unit>
        <trans-unit id="23123d4e2643527ed118e5c5a413930d089d6f76" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;longbuffer#hasArray--&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">起動&lt;a href=&quot;longbuffer#hasArray--&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; の&lt;/a&gt;このバッファがアクセス可能な補助配列を持っていることを確認するためにこのメソッドを呼び出す前に、方法。</target>
        </trans-unit>
        <trans-unit id="916e201158f19877346569b4af1ded5f28578d9a" translate="yes" xml:space="preserve">
          <source>Invoke the &lt;a href=&quot;shortbuffer#hasArray--&quot;&gt;&lt;code&gt;hasArray&lt;/code&gt;&lt;/a&gt; method before invoking this method in order to ensure that this buffer has an accessible backing array.</source>
          <target state="translated">起動&lt;a href=&quot;shortbuffer#hasArray--&quot;&gt; &lt;code&gt;hasArray&lt;/code&gt; の&lt;/a&gt;このバッファがアクセス可能な補助配列を持っていることを確認するためにこのメソッドを呼び出す前に、方法。</target>
        </trans-unit>
        <trans-unit id="0e34ee2cb044210740157c12218b25008f89d279" translate="yes" xml:space="preserve">
          <source>Invoke the original method handle on the converted argument list.</source>
          <target state="translated">変換された引数リスト上で元のメソッドハンドルを呼び出します。</target>
        </trans-unit>
        <trans-unit id="2ee9965b8220aa0a55337eb8e61d435a8ade9229" translate="yes" xml:space="preserve">
          <source>Invoke the type-adjusted method handle on the unpacked arguments: MH1.invokeExact(A0, ...).</source>
          <target state="translated">アンパックされた引数に対して型調整されたメソッドハンドルを呼び出します。MH1.invokeExact(A0,....)。</target>
        </trans-unit>
        <trans-unit id="ba2611b55d1b3e92b53ad132e56819bb8dfb4166" translate="yes" xml:space="preserve">
          <source>Invoke this method after writing data from a buffer in case the write was incomplete. The following loop, for example, copies bytes from one channel to another via the buffer &lt;code&gt;buf&lt;/code&gt;:</source>
          <target state="translated">書き込みが不完全な場合に備えて、バッファからデータを書き込んだ後にこのメソッドを呼び出します。たとえば、次のループは、バッファ &lt;code&gt;buf&lt;/code&gt; を介して、あるチャネルから別のチャネルにバイトをコピーします。</target>
        </trans-unit>
        <trans-unit id="99d56aefcb3014cd66a64d01af2299a82448431f" translate="yes" xml:space="preserve">
          <source>Invoke this method after you've changed how node is to be represented in the tree.</source>
          <target state="translated">ツリーでのノードの表現方法を変更した後にこのメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="ce730592cd8aaaff0c0661cce5f15481cd24af15" translate="yes" xml:space="preserve">
          <source>Invoke this method after you've changed how the children identified by childIndicies are to be represented in the tree.</source>
          <target state="translated">childIndicies によって識別される子のツリーでの表現方法を変更した後に、このメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="8850517cd3640b3850a4f2bd0a504be28d07d514" translate="yes" xml:space="preserve">
          <source>Invoke this method after you've inserted some TreeNodes into node.</source>
          <target state="translated">TreeNodesをノードに挿入した後にこのメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="a45f88c84e3d9a8a8a9aaf7533c189d5a188cb6e" translate="yes" xml:space="preserve">
          <source>Invoke this method after you've inserted some TreeNodes into node. childIndices should be the index of the new elements and must be sorted in ascending order.</source>
          <target state="translated">nodeにTreeNodesを挿入した後にこのメソッドを呼び出します。 childIndicesは新しい要素のインデックスであり、昇順にソートされている必要があります。</target>
        </trans-unit>
        <trans-unit id="be56a142044fc879ba2dd26d1e3e75b208bb8e3c" translate="yes" xml:space="preserve">
          <source>Invoke this method after you've removed some TreeNodes from node.</source>
          <target state="translated">ノードからTreeNodesを削除した後にこのメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="b2f047a9d0d170adfadfbf2ba117f2722c3149ee" translate="yes" xml:space="preserve">
          <source>Invoke this method after you've removed some TreeNodes from node. childIndices should be the index of the removed elements and must be sorted in ascending order. And removedChildren should be the array of the children objects that were removed.</source>
          <target state="translated">childIndices は削除された要素のインデックスで、昇順にソートされている必要があります。また、removedChildrenは削除された子オブジェクトの配列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="62707c4638f7af43169c09e864c8365dc4919e85" translate="yes" xml:space="preserve">
          <source>Invoke this method before a sequence of channel-write or</source>
          <target state="translated">このメソッドは、チャンネル書き込みまたは</target>
        </trans-unit>
        <trans-unit id="13a4d959fb7b989ce01c8af7fe5aa66e2eebd9b7" translate="yes" xml:space="preserve">
          <source>Invoke this method before using a sequence of channel-read or</source>
          <target state="translated">このメソッドは、チャンネルリードまたは</target>
        </trans-unit>
        <trans-unit id="dcba6c23627fd25dc0984bf733b56924f5e09380" translate="yes" xml:space="preserve">
          <source>Invoke this method if you've modified the &lt;code&gt;TreeNode&lt;/code&gt;s upon which this model depends.</source>
          <target state="translated">このモデルが依存する &lt;code&gt;TreeNode&lt;/code&gt; を変更した場合は、このメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="056e5f73f9ba2290ad2417a20e17b8fb82daaf96" translate="yes" xml:space="preserve">
          <source>Invoke this method if you've modified the &lt;code&gt;TreeNode&lt;/code&gt;s upon which this model depends. The model will notify all of its listeners that the model has changed below the given node.</source>
          <target state="translated">このモデルが依存する &lt;code&gt;TreeNode&lt;/code&gt; を変更した場合は、このメソッドを呼び出します。モデルは、指定されたノードの下でモデルが変更されたことをすべてのリスナーに通知します。</target>
        </trans-unit>
        <trans-unit id="88336e133b87382d574bdd4e993b650c15cf4925" translate="yes" xml:space="preserve">
          <source>Invoke this method if you've modified the &lt;code&gt;TreeNode&lt;/code&gt;s upon which this model depends. The model will notify all of its listeners that the model has changed.</source>
          <target state="translated">このモデルが依存する &lt;code&gt;TreeNode&lt;/code&gt; を変更した場合は、このメソッドを呼び出します。モデルは、モデルが変更されたことをすべてのリスナーに通知します。</target>
        </trans-unit>
        <trans-unit id="b9e7268f4cd6b59e1cc436f918a3fcaa04f47bf0" translate="yes" xml:space="preserve">
          <source>Invoke this method if you've totally changed the children of node and its children's children...</source>
          <target state="translated">ノードの子とその子の子を完全に変更した場合にこのメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="9901e5635a4729be1046f37a16e7f9ba23f9e075" translate="yes" xml:space="preserve">
          <source>Invoke this method if you've totally changed the children of node and its children's children... This will post a treeStructureChanged event.</source>
          <target state="translated">ノードの子とその子の子を完全に変更した場合、このメソッドを呼び出します。treeStructureChangedイベントを投稿します。</target>
        </trans-unit>
        <trans-unit id="8ac13e923783f7817e03325cad388d002eb2c553" translate="yes" xml:space="preserve">
          <source>Invoke this method to print the component to the specified &lt;code&gt;Graphics&lt;/code&gt;.</source>
          <target state="translated">このメソッドを呼び出して、コンポーネントを指定された &lt;code&gt;Graphics&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="adf9f10129db8eb312adf697b764595b06678944" translate="yes" xml:space="preserve">
          <source>Invoke this method to print the component to the specified &lt;code&gt;Graphics&lt;/code&gt;. This method will result in invocations of &lt;code&gt;printComponent&lt;/code&gt;, &lt;code&gt;printBorder&lt;/code&gt; and &lt;code&gt;printChildren&lt;/code&gt;. It is recommended that you override one of the previously mentioned methods rather than this one if your intention is to customize the way printing looks. However, it can be useful to override this method should you want to prepare state before invoking the superclass behavior. As an example, if you wanted to change the component's background color before printing, you could do the following:</source>
          <target state="translated">このメソッドを呼び出して、コンポーネントを指定された &lt;code&gt;Graphics&lt;/code&gt; ます。このメソッドにより、 &lt;code&gt;printComponent&lt;/code&gt; 、 &lt;code&gt;printBorder&lt;/code&gt; 、および &lt;code&gt;printChildren&lt;/code&gt; が呼び出されます。印刷の外観をカスタマイズする場合は、この方法ではなく、前述の方法のいずれかをオーバーライドすることをお勧めします。ただし、スーパークラスの動作を呼び出す前に状態を準備する場合は、このメソッドをオーバーライドすると便利です。例として、印刷する前にコンポーネントの背景色を変更したい場合は、次のようにすることができます。</target>
        </trans-unit>
        <trans-unit id="0965969dee3f848e976c2deeefc320177c797187" translate="yes" xml:space="preserve">
          <source>Invoke this method to print the component.</source>
          <target state="translated">このメソッドを呼び出して、コンポーネントを印刷します。</target>
        </trans-unit>
        <trans-unit id="867c7dc1511d412de8cc9981c078e2c924cf20ec" translate="yes" xml:space="preserve">
          <source>Invoke this method to print the component. This method invokes &lt;code&gt;print&lt;/code&gt; on the component.</source>
          <target state="translated">このメソッドを呼び出して、コンポーネントを印刷します。このメソッドは、コンポーネントで &lt;code&gt;print&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="4b0145a5941c2fbced4503ab22629c649cdf1b19" translate="yes" xml:space="preserve">
          <source>Invoke this to update the &lt;code&gt;editValid&lt;/code&gt; property of the &lt;code&gt;JFormattedTextField&lt;/code&gt;.</source>
          <target state="translated">これは、更新するために呼び出す &lt;code&gt;editValid&lt;/code&gt; のプロパティ &lt;code&gt;JFormattedTextField&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a6a74d52b46f7e56bc1d5fc67a6918c2b9f04d1" translate="yes" xml:space="preserve">
          <source>Invoke this to update the &lt;code&gt;editValid&lt;/code&gt; property of the &lt;code&gt;JFormattedTextField&lt;/code&gt;. If you an enforce a policy such that the &lt;code&gt;JFormattedTextField&lt;/code&gt; is always in a valid state, you will never need to invoke this.</source>
          <target state="translated">これは、更新するために呼び出す &lt;code&gt;editValid&lt;/code&gt; のプロパティ &lt;code&gt;JFormattedTextField&lt;/code&gt; 。 &lt;code&gt;JFormattedTextField&lt;/code&gt; が常に有効な状態になるようにポリシーを適用する場合、これを呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="f3916032834cb176c043741ca851c0140daedc6d" translate="yes" xml:space="preserve">
          <source>Invoked after a node (or a set of siblings) has changed in some way.</source>
          <target state="translated">ノード(または兄弟姉妹のセット)が何らかの方法で変更された後に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ba80f435b6fa3788ebb4ac4401ed366e27cb109d" translate="yes" xml:space="preserve">
          <source>Invoked after a node (or a set of siblings) has changed in some way. The node(s) have not changed locations in the tree or altered their children arrays, but other attributes have changed and may affect presentation. Example: the name of a file has changed, but it is in the same location in the file system.</source>
          <target state="translated">ノード(または兄弟姉妹のセット)が何らかの方法で変更された後に呼び出されます。ノードはツリー内の位置を変更したり、子配列を変更したりしていませんが、他の属性が変更されており、表示に影響を与える可能性があります。例:ファイル名が変更されましたが、ファイルシステム内の同じ場所にあります。</target>
        </trans-unit>
        <trans-unit id="77083d9a3db5d175c8a8ba64a0f67edd88904e2f" translate="yes" xml:space="preserve">
          <source>Invoked after data has been exported.</source>
          <target state="translated">データがエクスポートされた後に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f1867aafdd2e22097376e822330566aed84e637f" translate="yes" xml:space="preserve">
          <source>Invoked after data has been exported. This method should remove the data that was transferred if the action was &lt;code&gt;MOVE&lt;/code&gt;.</source>
          <target state="translated">データがエクスポートされた後に呼び出されます。このメソッドは、アクションが &lt;code&gt;MOVE&lt;/code&gt; の場合に転送されたデータを削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="4a58f484c75e372e264fb51577a59fc0c094a24f" translate="yes" xml:space="preserve">
          <source>Invoked after nodes have been inserted into the tree.</source>
          <target state="translated">ノードがツリーに挿入された後に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ef131d8ec9adb75bc14bce2c46454aac76e62fdc" translate="yes" xml:space="preserve">
          <source>Invoked after nodes have been removed from the tree.</source>
          <target state="translated">ノードがツリーから削除された後に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="26755be0584ea9d00dfb1f9b81ed8dc248d09fb0" translate="yes" xml:space="preserve">
          <source>Invoked after nodes have been removed from the tree. Note that if a subtree is removed from the tree, this method may only be invoked once for the root of the removed subtree, not once for each individual set of siblings removed.</source>
          <target state="translated">ノードがツリーから削除された後に呼び出されます。ツリーからサブツリーが削除された場合、このメソッドは削除されたサブツリーのルートに対してのみ呼び出され、削除された兄弟の各セットに対しては呼び出されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="f72d9eede6012ea392f05527aaa6588f1a5739d0" translate="yes" xml:space="preserve">
          <source>Invoked after the &lt;code&gt;tree&lt;/code&gt; instance variable has been set, but before any defaults/listeners have been installed.</source>
          <target state="translated">&lt;code&gt;tree&lt;/code&gt; インスタンス変数が設定された後、デフォルト/リスナーがインストールされる前に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2f1bfe952e30315f2d702abf6ebd2e66641db551" translate="yes" xml:space="preserve">
          <source>Invoked after the tree has drastically changed structure from a given node down.</source>
          <target state="translated">与えられたノードからツリーの構造が劇的に変化した後に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="77e6cabced149f6c9a12b0294a5dd8a29a1f98a0" translate="yes" xml:space="preserve">
          <source>Invoked after the tree has drastically changed structure from a given node down. If the path returned by &lt;code&gt;e.getPath()&lt;/code&gt; is of length one and the first element does not identify the current root node the first element should become the new root of the tree.</source>
          <target state="translated">ツリーが特定のノードから下に向かって構造を大幅に変更した後に呼び出されます。 &lt;code&gt;e.getPath()&lt;/code&gt; によって返されるパスの長さが1で、最初の要素が現在のルートノードを識別しない場合、最初の要素がツリーの新しいルートになるはずです。</target>
        </trans-unit>
        <trans-unit id="faabd26666b5995ccf6208a9fb1a4f707937cb0e" translate="yes" xml:space="preserve">
          <source>Invoked after the tree has drastically changed structure from a given node down. If the path returned by &lt;code&gt;e.getPath&lt;/code&gt; is of length one and the first element does not identify the current root node the first element should become the new root of the tree.</source>
          <target state="translated">ツリーが特定のノードから下に向かって構造を大幅に変更した後に呼び出されます。 &lt;code&gt;e.getPath&lt;/code&gt; によって返されるパスの長さが1で、最初の要素が現在のルートノードを識別しない場合、最初の要素がツリーの新しいルートになるはずです。</target>
        </trans-unit>
        <trans-unit id="ffb9a55c9dae04e79e1c4e5863439fa571e033c9" translate="yes" xml:space="preserve">
          <source>Invoked after the tree has drastically changed structure from a given node down. If the path returned by e.getPath() is of length one and the first element does not identify the current root node the first element should become the new root of the tree.</source>
          <target state="translated">ツリーの構造が、指定したノードから下のノードへと劇的に変化した後に呼び出されます。e.getPath()が返すパスの長さが 1 で、最初の要素が現在のルートノードを特定していない場合は、最初の要素がツリーの新しいルートになるはずです。</target>
        </trans-unit>
        <trans-unit id="6cbd56109635fbeae9a00c1a72a0271e4bd35736" translate="yes" xml:space="preserve">
          <source>Invoked as a side effect of java.beans.Beans.instantiate(). If the child object is not valid for adding then this method throws an IllegalStateException.</source>
          <target state="translated">java.bean.Beans.instantiate()の副作用として呼び出されます。子オブジェクトが追加に有効でない場合、このメソッドは IllegalStateException をスローします。</target>
        </trans-unit>
        <trans-unit id="c32e509234582b709b575e0587b26486cfa207d0" translate="yes" xml:space="preserve">
          <source>Invoked automatically when the model's state changes.</source>
          <target state="translated">モデルの状態が変化したときに自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4f8c0b86b9424c176e082381e88abdcf61956498" translate="yes" xml:space="preserve">
          <source>Invoked automatically when the model's state changes. It is also called by &lt;code&gt;installChooserPanel&lt;/code&gt; to allow you to set up the initial state of your chooser. Override this method to update your &lt;code&gt;ChooserPanel&lt;/code&gt;.</source>
          <target state="translated">モデルの状態が変化すると自動的に呼び出されます。また、 &lt;code&gt;installChooserPanel&lt;/code&gt; によって呼び出され、チューザーの初期状態を設定できるようになります。このメソッドをオーバーライドして、 &lt;code&gt;ChooserPanel&lt;/code&gt; を更新します。</target>
        </trans-unit>
        <trans-unit id="3f6bb02271af3358d3cd9fb07330832ed345598d" translate="yes" xml:space="preserve">
          <source>Invoked before sending the specified notification to the listener.</source>
          <target state="translated">指定した通知をリスナーに送信する前に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7d16d82da7db9c4580abf75c5fa1b3cf2f2f4ebf" translate="yes" xml:space="preserve">
          <source>Invoked before unstallation of UI.</source>
          <target state="translated">UIのアンインストール前に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="5fbbcda6ccbeb38ee158a2dd890f987498111559" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;code&gt;BeanContextServices&lt;/code&gt;, this method gets the current service selectors for the specified service.</source>
          <target state="translated">&lt;code&gt;BeanContextServices&lt;/code&gt; によって呼び出されるこのメソッドは、指定されたサービスの現在のサービスセレクターを取得します。</target>
        </trans-unit>
        <trans-unit id="6c3411502f0fdcb59163d2b8708823389486e0cd" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;code&gt;BeanContextServices&lt;/code&gt;, this method gets the current service selectors for the specified service. A service selector is a service specific parameter, typical examples of which could include: a parameter to a constructor for the service implementation class, a value for a particular service's property, or a key into a map of existing implementations.</source>
          <target state="translated">このメソッドは &lt;code&gt;BeanContextServices&lt;/code&gt; によって呼び出され、指定されたサービスの現在のサービスセレクターを取得します。サービスセレクターはサービス固有のパラメーターであり、その典型的な例には、サービス実装クラスのコンストラクターへのパラメーター、特定のサービスのプロパティの値、または既存の実装のマップへのキーが含まれます。</target>
        </trans-unit>
        <trans-unit id="33a5ee891f4c1a4f8ab4b9418b2cbbfa1103ac91" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;code&gt;BeanContextServices&lt;/code&gt;, this method releases a nested &lt;code&gt;BeanContextChild&lt;/code&gt;'s (or any arbitrary object associated with a &lt;code&gt;BeanContextChild&lt;/code&gt;) reference to the specified service.</source>
          <target state="translated">&lt;code&gt;BeanContextServices&lt;/code&gt; によって呼び出されたこのメソッドは、指定されたサービスへのネストされた &lt;code&gt;BeanContextChild&lt;/code&gt; （または &lt;code&gt;BeanContextChild&lt;/code&gt; に関連付けられた任意のオブジェクト）参照を解放します。</target>
        </trans-unit>
        <trans-unit id="23d3fcc65edf7a5ec0da4d9a1342bd519552db15" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;code&gt;BeanContextServices&lt;/code&gt;, this method requests an instance of a service from this &lt;code&gt;BeanContextServiceProvider&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BeanContextServices&lt;/code&gt; によって呼び出されたこのメソッドは、この &lt;code&gt;BeanContextServiceProvider&lt;/code&gt; にサービスのインスタンスを要求します。</target>
        </trans-unit>
        <trans-unit id="2bda016e4f6dd98147c7710f34c0d9f9e36ac000" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;code&gt;installUI&lt;/code&gt; to create a layout manager object to manage the &lt;code&gt;JTabbedPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;installUI&lt;/code&gt; によって呼び出され、 &lt;code&gt;JTabbedPane&lt;/code&gt; を管理するためのレイアウトマネージャーオブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="a2bf4f1044586cba5953940fe3ac1930a02c6c84" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;code&gt;installUI&lt;/code&gt; to create a layout manager object to manage the &lt;code&gt;JTabbedPane&lt;/code&gt;. Overridden to create a TabbedPaneLayout subclass which takes into account tabOverlap.</source>
          <target state="translated">&lt;code&gt;installUI&lt;/code&gt; によって呼び出され、 &lt;code&gt;JTabbedPane&lt;/code&gt; を管理するためのレイアウトマネージャーオブジェクトを作成します。tabOverlapを考慮したTabbedPaneLayoutサブクラスを作成するためにオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="ebaa3fba395792fdaafc4bb811c1abde2e0255d2" translate="yes" xml:space="preserve">
          <source>Invoked by Swing to draw components.</source>
          <target state="translated">Swingで呼び出され、コンポーネントを描画します。</target>
        </trans-unit>
        <trans-unit id="003c7762181006fb9983cec2ccd9170e6d0c3309" translate="yes" xml:space="preserve">
          <source>Invoked by Swing to draw components. Applications should not invoke &lt;code&gt;paint&lt;/code&gt; directly, but should instead use the &lt;code&gt;repaint&lt;/code&gt; method to schedule the component for redrawing.</source>
          <target state="translated">コンポーネントを描画するためにSwingによって呼び出されます。アプリケーションは &lt;code&gt;paint&lt;/code&gt; を直接呼び出すべきではなく、代わりに &lt;code&gt;repaint&lt;/code&gt; メソッドを使用してコンポーネントの再描画をスケジュールする必要があります。</target>
        </trans-unit>
        <trans-unit id="7ad291b9f7f6be67648683b5644d7032d3294ab2" translate="yes" xml:space="preserve">
          <source>Invoked by the &lt;code&gt;TreeSelectionModel&lt;/code&gt; when the selection changes.</source>
          <target state="translated">選択が変更されたときに &lt;code&gt;TreeSelectionModel&lt;/code&gt; によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="b5acf852d220348f53dc49569f5fd363d0f5bb70" translate="yes" xml:space="preserve">
          <source>Invoked for a directory after entries in the directory, and all of their descendants, have been visited.</source>
          <target state="translated">ディレクトリ内のエントリとその子孫がすべて訪問された後に、ディレクトリに対して呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ade3cd66a3e795170fb6e93c0ab6202061ccff3f" translate="yes" xml:space="preserve">
          <source>Invoked for a directory after entries in the directory, and all of their descendants, have been visited. This method is also invoked when iteration of the directory completes prematurely (by a &lt;a href=&quot;#visitFile(T,java.nio.file.attribute.BasicFileAttributes)&quot;&gt;&lt;code&gt;visitFile&lt;/code&gt;&lt;/a&gt; method returning &lt;a href=&quot;filevisitresult#SKIP_SIBLINGS&quot;&gt;&lt;code&gt;SKIP_SIBLINGS&lt;/code&gt;&lt;/a&gt;, or an I/O error when iterating over the directory).</source>
          <target state="translated">ディレクトリ内のエントリとそのすべての子孫がアクセスされた後、ディレクトリに対して呼び出されます。ディレクトリの反復が（によって早期に完了したときに、この方法はまた、呼び出され&lt;a href=&quot;#visitFile(T,java.nio.file.attribute.BasicFileAttributes)&quot;&gt; &lt;code&gt;visitFile&lt;/code&gt; の&lt;/a&gt;復帰方法&lt;a href=&quot;filevisitresult#SKIP_SIBLINGS&quot;&gt; &lt;code&gt;SKIP_SIBLINGS&lt;/code&gt; に&lt;/a&gt;、またはI / Oエラー反復をディレクトリ上）。</target>
        </trans-unit>
        <trans-unit id="f2ca201bf4a17f15eb2d609e1a1a2bf48aaf0b78" translate="yes" xml:space="preserve">
          <source>Invoked for a directory after entries in the directory, and all of their descendants, have been visited. This method is also invoked when iteration of the directory completes prematurely (by a &lt;a href=&quot;filevisitor#visitFile-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt;&lt;code&gt;visitFile&lt;/code&gt;&lt;/a&gt; method returning &lt;a href=&quot;filevisitresult#SKIP_SIBLINGS&quot;&gt;&lt;code&gt;SKIP_SIBLINGS&lt;/code&gt;&lt;/a&gt;, or an I/O error when iterating over the directory).</source>
          <target state="translated">ディレクトリおよびそのすべての子孫のエントリが訪問された後に、ディレクトリに対して呼び出されました。ディレクトリの反復が（によって早期に完了したときに、この方法はまた、呼び出され&lt;a href=&quot;filevisitor#visitFile-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt; &lt;code&gt;visitFile&lt;/code&gt; の&lt;/a&gt;復帰方法&lt;a href=&quot;filevisitresult#SKIP_SIBLINGS&quot;&gt; &lt;code&gt;SKIP_SIBLINGS&lt;/code&gt; に&lt;/a&gt;、またはI / Oエラー反復をディレクトリ上）。</target>
        </trans-unit>
        <trans-unit id="07ea810c05dca9fc949bfdca19a1cd8bb0172c8a" translate="yes" xml:space="preserve">
          <source>Invoked for a directory before entries in the directory are visited.</source>
          <target state="translated">ディレクトリ内のエントリが訪問される前に、ディレクトリに対して呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6e60ca66368a684f15c3d1a350628f2c09fefbc5" translate="yes" xml:space="preserve">
          <source>Invoked for a file in a directory.</source>
          <target state="translated">ディレクトリ内のファイルに対して呼び出されます。</target>
        </trans-unit>
        <trans-unit id="36f066ffbe31db399db8e40bb50a0defff46d207" translate="yes" xml:space="preserve">
          <source>Invoked for a file that could not be visited.</source>
          <target state="translated">訪問できなかったファイルに対して呼び出されました。</target>
        </trans-unit>
        <trans-unit id="2edb253f825cbce19a1ec94ec68a7e03d5f7b299" translate="yes" xml:space="preserve">
          <source>Invoked for a file that could not be visited. This method is invoked if the file's attributes could not be read, the file is a directory that could not be opened, and other reasons.</source>
          <target state="translated">訪問できなかったファイルに対して呼び出されます。このメソッドは、ファイルの属性が読み込めなかった場合や、ファイルがオープンできなかったディレクトリである場合などに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="69aea094f339f0041a419b48b6199c0da4b0d866" translate="yes" xml:space="preserve">
          <source>Invoked from installUI after all the defaults/listeners have been installed.</source>
          <target state="translated">すべてのデフォルト/リスナーがインストールされた後、installUI から呼び出されます。</target>
        </trans-unit>
        <trans-unit id="41478fd8c666159a8f4e2be101baf818e2ec8c9d" translate="yes" xml:space="preserve">
          <source>Invoked from paintComponent.</source>
          <target state="translated">paintComponent から呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a4b6169a44e99d2c3a014ae2edb3f31f4f38a107" translate="yes" xml:space="preserve">
          <source>Invoked from paintComponent. Paints the background of the titlepane. All text and icons will then be rendered on top of this background.</source>
          <target state="translated">paintComponent から呼び出されます。タイトルペインの背景をペイントします。すべてのテキストとアイコンは、この背景の上にレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="ede686fc14e5a0335876f3c16b3226f07dde02e2" translate="yes" xml:space="preserve">
          <source>Invoked just before editing is to start.</source>
          <target state="translated">編集を開始する直前に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="634c38dc52205d56bf7e28dcbe4f8932a55421c3" translate="yes" xml:space="preserve">
          <source>Invoked just before editing is to start. Will add the &lt;code&gt;editingComponent&lt;/code&gt; to the &lt;code&gt;editingContainer&lt;/code&gt;.</source>
          <target state="translated">編集が開始される直前に呼び出されます。追加されます &lt;code&gt;editingComponent&lt;/code&gt; をする &lt;code&gt;editingContainer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="776d6f790b4ce0ff0f20d04687d012d1a89c08dc" translate="yes" xml:space="preserve">
          <source>Invoked prior to insertion of text into the specified Document.</source>
          <target state="translated">指定されたドキュメントにテキストを挿入する前に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7f096e70806921f4e56b325662c98118995e7e0f" translate="yes" xml:space="preserve">
          <source>Invoked prior to insertion of text into the specified Document. Subclasses that want to conditionally allow insertion should override this and only call supers implementation as necessary, or call directly into the FilterBypass.</source>
          <target state="translated">指定した Document にテキストを挿入する前に呼び出されます。条件付きで挿入を許可したいサブクラスは、これをオーバーライドして必要に応じて supers の実装のみを呼び出すか、FilterBypass に直接呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="62954bf9c5dcd6f97dab00af2cdd1e8471badeb4" translate="yes" xml:space="preserve">
          <source>Invoked prior to removal of the specified region in the specified Document.</source>
          <target state="translated">指定されたドキュメント内の指定された領域が削除される前に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1d938a7c6ef958e0518451fdd3333edd3f9299e5" translate="yes" xml:space="preserve">
          <source>Invoked prior to removal of the specified region in the specified Document. Subclasses that want to conditionally allow removal should override this and only call supers implementation as necessary, or call directly into the &lt;code&gt;FilterBypass&lt;/code&gt; as necessary.</source>
          <target state="translated">指定されたドキュメント内の指定された領域を削除する前に呼び出されます。条件付きで削除を許可するサブクラスは、これをオーバーライドして、必要に応じて &lt;code&gt;FilterBypass&lt;/code&gt; 実装のみを呼び出すか、必要に応じてFilterBypassを直接呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="df2ba00c1ed5dddcf6483a74c94a2e4ad64e576c" translate="yes" xml:space="preserve">
          <source>Invoked prior to replacing a region of text in the specified Document.</source>
          <target state="translated">指定されたドキュメント内のテキスト領域を置き換える前に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="28fe2b3343237dcb97f7b55a6e79186975d10aa8" translate="yes" xml:space="preserve">
          <source>Invoked prior to replacing a region of text in the specified Document. Subclasses that want to conditionally allow replace should override this and only call supers implementation as necessary, or call directly into the FilterBypass.</source>
          <target state="translated">指定されたドキュメント内のテキスト領域を置換する前に呼び出されます。条件付きで置換を許可したいサブクラスは、これをオーバーライドして必要に応じて supers の実装を呼び出すか、 FilterBypass を直接呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="24a95a524b0b0897754d5c4a6246fed92e750c04" translate="yes" xml:space="preserve">
          <source>Invoked prior to the Caret moving the dot.</source>
          <target state="translated">キャレットがドットを移動する前に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6bd1c4f5b2339aa97476cb92e047df5e49a675e4" translate="yes" xml:space="preserve">
          <source>Invoked prior to the Caret moving the dot. The default implementation calls directly into the &lt;code&gt;FilterBypass&lt;/code&gt; with the passed in arguments. Subclasses may wish to conditionally call super with a different location, or invoke the necessary methods on the &lt;code&gt;FilterBypass&lt;/code&gt;.</source>
          <target state="translated">キャレットがドットを移動する前に呼び出されます。デフォルトの実装では、渡された引数を使用して &lt;code&gt;FilterBypass&lt;/code&gt; を直接呼び出します。サブクラスは、条件付きで別の場所でsuperを呼び出すか、 &lt;code&gt;FilterBypass&lt;/code&gt; で必要なメソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="d7d6cedb372fac422cc6705771b6cd971bbb109f" translate="yes" xml:space="preserve">
          <source>Invoked prior to the Caret setting the dot.</source>
          <target state="translated">キャレットがドットを設定する前に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9bc236a99f1fa852ec05d0cbce2fd36e745d68ad" translate="yes" xml:space="preserve">
          <source>Invoked prior to the Caret setting the dot. The default implementation calls directly into the &lt;code&gt;FilterBypass&lt;/code&gt; with the passed in arguments. Subclasses may wish to conditionally call super with a different location, or invoke the necessary method on the &lt;code&gt;FilterBypass&lt;/code&gt;</source>
          <target state="translated">キャレットがドットを設定する前に呼び出されます。デフォルトの実装では、渡された引数を使用して &lt;code&gt;FilterBypass&lt;/code&gt; を直接呼び出します。サブクラスは、別の場所で条件付きでsuperを呼び出すか、 &lt;code&gt;FilterBypass&lt;/code&gt; で必要なメソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="e71419718b4cd4386de3ceee32c997a271101cfb" translate="yes" xml:space="preserve">
          <source>Invoked the first time a window is made visible.</source>
          <target state="translated">ウィンドウが最初に可視化されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="482d641edcb56907bffacc80663dfca15ef7bf3c" translate="yes" xml:space="preserve">
          <source>Invoked this to insert newChild at location index in parents children.</source>
          <target state="translated">これは、親の子供の位置インデックスにnewChildを挿入するために呼び出されました。</target>
        </trans-unit>
        <trans-unit id="12fa51450ccde11b669ee2a12721ad7019181f91" translate="yes" xml:space="preserve">
          <source>Invoked this to insert newChild at location index in parents children. This will then message nodesWereInserted to create the appropriate event. This is the preferred way to add children as it will create the appropriate event.</source>
          <target state="translated">これを呼び出して、親の子の位置インデックスに newChild を挿入します。これは、適切なイベントを作成するために nodesWereInserted をメッセージします。これは、適切なイベントを作成するために子を追加するために好ましい方法です。</target>
        </trans-unit>
        <trans-unit id="15483fb2d2dbb0b5fdf2d91d0c16c22f757ffcce" translate="yes" xml:space="preserve">
          <source>Invoked to process the key bindings for &lt;code&gt;ks&lt;/code&gt; as the result of the &lt;code&gt;KeyEvent&lt;/code&gt;&lt;code&gt;e&lt;/code&gt;.</source>
          <target state="translated">キーバインドを処理するために呼び出されます &lt;code&gt;ks&lt;/code&gt; の結果として &lt;code&gt;KeyEvent&lt;/code&gt; &lt;code&gt;e&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="600ca5767bef0b36e2d559553aff72b2670e7cdf" translate="yes" xml:space="preserve">
          <source>Invoked to process the key bindings for &lt;code&gt;ks&lt;/code&gt; as the result of the &lt;code&gt;KeyEvent&lt;/code&gt;&lt;code&gt;e&lt;/code&gt;. This obtains the appropriate &lt;code&gt;InputMap&lt;/code&gt;, gets the binding, gets the action from the &lt;code&gt;ActionMap&lt;/code&gt;, and then (if the action is found and the component is enabled) invokes &lt;code&gt;notifyAction&lt;/code&gt; to notify the action.</source>
          <target state="translated">キーバインドを処理するために呼び出されます &lt;code&gt;ks&lt;/code&gt; の結果として &lt;code&gt;KeyEvent&lt;/code&gt; &lt;code&gt;e&lt;/code&gt; 。これにより、適切な &lt;code&gt;InputMap&lt;/code&gt; が取得され、バインディングが取得され、 &lt;code&gt;ActionMap&lt;/code&gt; からアクションが取得されます。次に（アクションが見つかり、コンポーネントが有効になっている場合）、 &lt;code&gt;notifyAction&lt;/code&gt; が呼び出されてアクションが通知されます。</target>
        </trans-unit>
        <trans-unit id="547052866aa8bee02eb55ce9b02bfd9eff49b25f" translate="yes" xml:space="preserve">
          <source>Invoked when &lt;a href=&quot;../jlayer#updateUI()&quot;&gt;&lt;code&gt;JLayer.updateUI()&lt;/code&gt;&lt;/a&gt; is called by the &lt;code&gt;JLayer&lt;/code&gt; this &lt;code&gt;LayerUI&lt;/code&gt; is set to.</source>
          <target state="translated">この &lt;code&gt;LayerUI&lt;/code&gt; が設定されている &lt;code&gt;JLayer&lt;/code&gt; によって&lt;a href=&quot;../jlayer#updateUI()&quot;&gt; &lt;code&gt;JLayer.updateUI()&lt;/code&gt; &lt;/a&gt;が呼び出されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ce359c9c22ec5b0e23eab98839754c0f89824967" translate="yes" xml:space="preserve">
          <source>Invoked when a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; has encountered and processed a &lt;code&gt;MetaMessage&lt;/code&gt; in the &lt;code&gt;Sequence&lt;/code&gt; it is processing.</source>
          <target state="translated">呼び出され&lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; が&lt;/a&gt;発生し、処理した &lt;code&gt;MetaMessage&lt;/code&gt; で &lt;code&gt;Sequence&lt;/code&gt; それが処理しているが。</target>
        </trans-unit>
        <trans-unit id="e9df58234bfa2e0026549337398d200de93f757e" translate="yes" xml:space="preserve">
          <source>Invoked when a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; has encountered and processed a control-change event of interest to this listener.</source>
          <target state="translated">&lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt;がこのリスナーにとって関心のある制御変更イベントを検出して処理したときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="81adcbf25edbddf8d068b5c835ce0c804a226ee7" translate="yes" xml:space="preserve">
          <source>Invoked when a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; has encountered and processed a control-change event of interest to this listener. The event passed in is a &lt;code&gt;ShortMessage&lt;/code&gt; whose first data byte indicates the controller number and whose second data byte is the value to which the controller was set.</source>
          <target state="translated">&lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt;がこのリスナーにとって関心のある制御変更イベントを検出して処理したときに呼び出されます。渡されるイベントは &lt;code&gt;ShortMessage&lt;/code&gt; であり、その最初のデータバイトはコントローラー番号を示し、2番目のデータバイトはコントローラーが設定された値です。</target>
        </trans-unit>
        <trans-unit id="e568ca2f5d22f851634e734ac4d8fd10a139feb3" translate="yes" xml:space="preserve">
          <source>Invoked when a &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; has encountered and processed a &lt;code&gt;MetaMessage&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; it is processing.</source>
          <target state="translated">呼び出され &lt;code&gt;&lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; が発生し、処理した &lt;code&gt;MetaMessage&lt;/code&gt; で &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; それが処理しているが。</target>
        </trans-unit>
        <trans-unit id="7b1fd308ac9e6d674e61380443af3cc03aaa29cb" translate="yes" xml:space="preserve">
          <source>Invoked when a &lt;code&gt;Sequencer&lt;/code&gt; has encountered and processed a control-change event of interest to this listener. The event passed in is a &lt;code&gt;ShortMessage&lt;/code&gt; whose first data byte indicates the controller number and whose second data byte is the value to which the controller was set.</source>
          <target state="translated">&lt;code&gt;Sequencer&lt;/code&gt; がこのリスナーに関係するコントロール変更イベントを検出して処理したときに呼び出されます。渡されるイベントは &lt;code&gt;ShortMessage&lt;/code&gt; で、最初のデータバイトはコントローラー番号を示し、2番目のデータバイトはコントローラーが設定された値です。</target>
        </trans-unit>
        <trans-unit id="e92c80cccf4787b4bbc36f58a85c15768d216d10" translate="yes" xml:space="preserve">
          <source>Invoked when a JInternalFrame's parent's size changes.</source>
          <target state="translated">JInternalFrameの親のサイズが変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7dd14e80b486b42657d5e79e3a9fdd26a4a7c805" translate="yes" xml:space="preserve">
          <source>Invoked when a JMX notification occurs.</source>
          <target state="translated">JMX通知が発生したときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a13e99b67a98714e02e94edef597b859ce4a1e48" translate="yes" xml:space="preserve">
          <source>Invoked when a JMX notification occurs. Currently handles notifications for unregistration of MBeans, either referenced in a relation role or being a relation itself.</source>
          <target state="translated">JMX通知が発生したときに呼び出されます。現在は、リレーションロールで参照されているか、リレーションそのものであるMBeansの登録解除の通知を処理しています。</target>
        </trans-unit>
        <trans-unit id="b0284adb43a328422617e52a08a41552f24729d5" translate="yes" xml:space="preserve">
          <source>Invoked when a JMX notification occurs. The implementation of this method should return as soon as possible, to avoid blocking its notification broadcaster.</source>
          <target state="translated">JMX通知が発生したときに呼び出される。このメソッドの実装は、その通知ブロードキャスターをブロックしないように、できるだけ早く返すべきです。</target>
        </trans-unit>
        <trans-unit id="cdd7d0d3aad566c1960b9ccfcf92cd72ae655c1c" translate="yes" xml:space="preserve">
          <source>Invoked when a Window is no longer the active Window.</source>
          <target state="translated">ウィンドウがアクティブなウィンドウでなくなったときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="fcbc05e0d5c14ec56cf892ec183df6b2938a9ea3" translate="yes" xml:space="preserve">
          <source>Invoked when a Window is no longer the active Window. Only a Frame or a Dialog can be the active Window. The native windowing system may denote the active Window or its children with special decorations, such as a highlighted title bar. The active Window is always either the focused Window, or the first Frame or Dialog that is an owner of the focused Window.</source>
          <target state="translated">ウィンドウがアクティブなウィンドウでなくなったときに呼び出されます。アクティブウィンドウになれるのはフレームかダイアログだけです。ネイティブウィンドウシステムでは、アクティブウィンドウやその子ウィンドウを、ハイライトされたタイトルバーのような特別な装飾で表示することができます。アクティブウィンドウは常にフォーカスされたウィンドウか、フォーカスされたウィンドウの所有者である最初のフレームかダイアログのいずれかです。</target>
        </trans-unit>
        <trans-unit id="d3b64e70985ecf5bf3c0c1f5700a4b9c7b34241f" translate="yes" xml:space="preserve">
          <source>Invoked when a column is added to the table column model.</source>
          <target state="translated">テーブルのカラムモデルにカラムが追加されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e01445da7cf47cfbab2d2fe75855a574826e186e" translate="yes" xml:space="preserve">
          <source>Invoked when a column is moved due to a margin change.</source>
          <target state="translated">マージンの変更により列が移動した場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8b1cdb9b99ebf4012a7f56a67e8e551bacf2474b" translate="yes" xml:space="preserve">
          <source>Invoked when a column is moved due to a margin change. If a cell is being edited, then editing is stopped and the cell is redrawn.</source>
          <target state="translated">余白の変更により列が移動した場合に呼び出されます。セルが編集中の場合、編集を停止してセルを再描画します。</target>
        </trans-unit>
        <trans-unit id="a875ddfc0b0cc0239ce211607181bea162019313" translate="yes" xml:space="preserve">
          <source>Invoked when a column is removed from the table column model.</source>
          <target state="translated">テーブルのカラムモデルからカラムが削除されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a325f35f1c94f506948f7368f85c91021af4c81f" translate="yes" xml:space="preserve">
          <source>Invoked when a column is repositioned.</source>
          <target state="translated">列が再配置されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="27516065f46a6a2b2ec97049c0b133cb3b60fedc" translate="yes" xml:space="preserve">
          <source>Invoked when a column is repositioned. If a cell is being edited, then editing is stopped and the cell is redrawn.</source>
          <target state="translated">カラムが再配置されたときに呼び出されます。セルが編集中の場合、編集を停止してセルを再描画します。</target>
        </trans-unit>
        <trans-unit id="04e130a550d285f48be0e7a457fd63648c3f69c4" translate="yes" xml:space="preserve">
          <source>Invoked when a component gains the keyboard focus.</source>
          <target state="translated">コンポーネントがキーボードフォーカスを獲得したときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="deb5b4beb55ee30da8dc8075d8d1fa4b02ebfc44" translate="yes" xml:space="preserve">
          <source>Invoked when a component has been added to the container.</source>
          <target state="translated">コンポーネントがコンテナに追加されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="bd1bcf9e526ec3378d608c618b3e45f89668a899" translate="yes" xml:space="preserve">
          <source>Invoked when a component has been removed from the container.</source>
          <target state="translated">コンテナからコンポーネントが取り除かれたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="107e742ea9cd5a90bdc776015cec2e2c7c49bf19" translate="yes" xml:space="preserve">
          <source>Invoked when a component loses the keyboard focus.</source>
          <target state="translated">コンポーネントがキーボードフォーカスを失ったときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="18f53592d24e261e924b9e272509f3314f2a0c91" translate="yes" xml:space="preserve">
          <source>Invoked when a content is changed.</source>
          <target state="translated">コンテンツが変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="3daad524d53e43408e25db6cbcc0cae9aa610a9e" translate="yes" xml:space="preserve">
          <source>Invoked when a dragged mouse is release in a menu component's display area.</source>
          <target state="translated">メニュー コンポーネントの表示領域でドラッグしたマウスが解放されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="045aaef082703f69da0e037ee32c4a34b52ef313" translate="yes" xml:space="preserve">
          <source>Invoked when a internal frame has been opened.</source>
          <target state="translated">内部フレームがオープンされたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ec1fddf62d322e3ff6df44119c9f12c51b5cc928" translate="yes" xml:space="preserve">
          <source>Invoked when a key has been pressed.</source>
          <target state="translated">キーが押されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4919871adda0e1ab6f5837527d624dfb99fd29ce" translate="yes" xml:space="preserve">
          <source>Invoked when a key has been pressed. See the class description for &lt;a href=&quot;keyevent&quot;&gt;&lt;code&gt;KeyEvent&lt;/code&gt;&lt;/a&gt; for a definition of a key pressed event.</source>
          <target state="translated">キーが押されたときに呼び出されます。キーが押されたイベントの定義については、&lt;a href=&quot;keyevent&quot;&gt; &lt;code&gt;KeyEvent&lt;/code&gt; &lt;/a&gt;のクラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="fccbc1c06497315739d9a9c8d6a83757b325d091" translate="yes" xml:space="preserve">
          <source>Invoked when a key has been released.</source>
          <target state="translated">キーが解放されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="76188f9734dfb9f790379d5057c09a6ef13e8c58" translate="yes" xml:space="preserve">
          <source>Invoked when a key has been released. See the class description for &lt;a href=&quot;keyevent&quot;&gt;&lt;code&gt;KeyEvent&lt;/code&gt;&lt;/a&gt; for a definition of a key released event.</source>
          <target state="translated">キーが離されたときに呼び出されます。キーリリースイベントの定義については、&lt;a href=&quot;keyevent&quot;&gt; &lt;code&gt;KeyEvent&lt;/code&gt; &lt;/a&gt;のクラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="b94ebc51642440371e32c48b9075eed9d1769152" translate="yes" xml:space="preserve">
          <source>Invoked when a key has been typed.</source>
          <target state="translated">キーが入力されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ae45dc05fe1a09e9121bfdfc1312db7012baafc5" translate="yes" xml:space="preserve">
          <source>Invoked when a key has been typed. Moves the keyboard focus to the first element whose first letter matches the alphanumeric key pressed by the user. Subsequent same key presses move the keyboard focus to the next object that starts with the same letter.</source>
          <target state="translated">キーが入力されたときに呼び出されます。ユーザーが押下した英数字キーと最初の文字が一致する最初の要素にキーボードフォーカスを移動します。それ以降に同じキーを押すと、同じ文字で始まる次のオブジェクトにキーボードのフォーカスが移動します。</target>
        </trans-unit>
        <trans-unit id="35bf99d9201bf34186d3df0553619bf74d8ef0db" translate="yes" xml:space="preserve">
          <source>Invoked when a key has been typed. See the class description for &lt;a href=&quot;keyevent&quot;&gt;&lt;code&gt;KeyEvent&lt;/code&gt;&lt;/a&gt; for a definition of a key typed event.</source>
          <target state="translated">キーが入力されたときに呼び出されます。キー型イベントの定義については、&lt;a href=&quot;keyevent&quot;&gt; &lt;code&gt;KeyEvent&lt;/code&gt; &lt;/a&gt;のクラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="d7f9f039b8189ea225320ae59d1a58cc5cd25cbc" translate="yes" xml:space="preserve">
          <source>Invoked when a key has been typed. This event occurs when a key press is followed by a key release.</source>
          <target state="translated">キーが入力されたときに呼び出されます。このイベントは、キーを押した後にキーを離したときに発生します。</target>
        </trans-unit>
        <trans-unit id="28782248947b184b027e4e6bb51810ec08558c8d" translate="yes" xml:space="preserve">
          <source>Invoked when a menu is selected.</source>
          <target state="translated">メニューが選択されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="363d7540377d56cf08d70da3586c6cebbd06781d" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button has been pressed on a &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; 上でマウスボタンが押されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d5b209a66a4e7e93ec80565d280d4151229f40d8" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button has been pressed on a component.</source>
          <target state="translated">コンポーネント上でマウスボタンが押されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e3c53d82b1fd5c2591d321d0a9a8c278037ad606" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button has been released on a component.</source>
          <target state="translated">コンポーネント上でマウスボタンが離されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="153b32136cb5c90b5c79fd632d7327fa971100ee" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button is pressed on a component and then dragged.</source>
          <target state="translated">コンポーネント上でマウスボタンが押された後、ドラッグしたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="09c1e055d6d1bf9695659f8cbb2a508803dc294f" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button is pressed on a component and then dragged. &lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; events will continue to be delivered to the component where the drag originated until the mouse button is released (regardless of whether the mouse position is within the bounds of the component).</source>
          <target state="translated">コンポーネント上でマウスボタンが押されてからドラッグされたときに呼び出されます。 &lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; イベントは、マウスボタンが離されるまで（マウスの位置がコンポーネントの境界内にあるかどうかに関係なく）、ドラッグが発生したコンポーネントに配信され続けます。</target>
        </trans-unit>
        <trans-unit id="1ec8a66c421e2217395a4a653539764fccb6168e" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button is pressed on a component and then dragged. Mouse drag events will continue to be delivered to the component where the first originated until the mouse button is released (regardless of whether the mouse position is within the bounds of the component).</source>
          <target state="translated">マウスボタンがコンポーネント上で押された後、ドラッグされたときに呼び出されます。マウスのドラッグイベントは、マウスボタンが離されるまで(マウスの位置がコンポーネントの範囲内にあるかどうかに関わらず)、最初に発生したコンポーネントに配信され続けます。</target>
        </trans-unit>
        <trans-unit id="5e7721a107e374cba9fb1eedf360b20e5cca8b38" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button is pressed on a component.</source>
          <target state="translated">コンポーネント上でマウスボタンが押されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9e26f00755969947e8e24f6aca0fca75a537e54e" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button is pressed on the menu and then dragged.</source>
          <target state="translated">メニュー上でマウスボタンを押した後、ドラッグしたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e38bb38549bd3df0f2a59890908518d018aec1fd" translate="yes" xml:space="preserve">
          <source>Invoked when a mouse button is pressed on the menu and then dragged. Delegates the mouse event to the MenuSelectionManager.</source>
          <target state="translated">メニュー上でマウスボタンが押された後、ドラッグしたときに呼び出されます。マウスイベントを MenuSelectionManager にデリゲートします。</target>
        </trans-unit>
        <trans-unit id="c00928d727d6f4efe4eb3d9e0b8da4ac57f12f4d" translate="yes" xml:space="preserve">
          <source>Invoked when a problem is found.</source>
          <target state="translated">問題が見つかったときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a5d74aae4fa6b2aa96d53cdefc2da87dc7653560" translate="yes" xml:space="preserve">
          <source>Invoked when a property changes on the root pane.</source>
          <target state="translated">ルートペインのプロパティが変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="fa851011173a5e8de588022c0a0f77f06279458e" translate="yes" xml:space="preserve">
          <source>Invoked when a property changes on the root pane. If the event indicates the &lt;code&gt;defaultButton&lt;/code&gt; has changed, this will reinstall the keyboard actions.</source>
          <target state="translated">ルートペインでプロパティが変更されたときに呼び出されます。イベントが &lt;code&gt;defaultButton&lt;/code&gt; が変更されたことを示している場合、これによりキーボードアクションが再インストールされます。</target>
        </trans-unit>
        <trans-unit id="b1ad098d1f28156f4010c8815d27b28f0d60c00b" translate="yes" xml:space="preserve">
          <source>Invoked when a property changes.</source>
          <target state="translated">プロパティが変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7a3760873d07ecf010e51912fec89fb4ee4a9e8a" translate="yes" xml:space="preserve">
          <source>Invoked when a property changes. &lt;code&gt;MetalRootPaneUI&lt;/code&gt; is primarily interested in events originating from the &lt;code&gt;JRootPane&lt;/code&gt; it has been installed on identifying the property &lt;code&gt;windowDecorationStyle&lt;/code&gt;. If the &lt;code&gt;windowDecorationStyle&lt;/code&gt; has changed to a value other than &lt;code&gt;JRootPane.NONE&lt;/code&gt;, this will add a &lt;code&gt;Component&lt;/code&gt; to the &lt;code&gt;JRootPane&lt;/code&gt; to render the window decorations, as well as installing a &lt;code&gt;Border&lt;/code&gt; on the &lt;code&gt;JRootPane&lt;/code&gt;. On the other hand, if the &lt;code&gt;windowDecorationStyle&lt;/code&gt; has changed to &lt;code&gt;JRootPane.NONE&lt;/code&gt;, this will remove the &lt;code&gt;Component&lt;/code&gt; that has been added to the &lt;code&gt;JRootPane&lt;/code&gt; as well resetting the Border to what it was before &lt;code&gt;installUI&lt;/code&gt; was invoked.</source>
          <target state="translated">プロパティが変更されたときに呼び出されます。 &lt;code&gt;MetalRootPaneUI&lt;/code&gt; は主に、プロパティ &lt;code&gt;windowDecorationStyle&lt;/code&gt; の識別時にインストールされた &lt;code&gt;JRootPane&lt;/code&gt; から発生するイベントに関心があります。場合 &lt;code&gt;windowDecorationStyle&lt;/code&gt; が以外の値に変更されている &lt;code&gt;JRootPane.NONE&lt;/code&gt; 、これは追加する &lt;code&gt;Component&lt;/code&gt; に &lt;code&gt;JRootPane&lt;/code&gt; ウィンドウ装飾をレンダリングするだけでなく、インストール &lt;code&gt;Border&lt;/code&gt; 上 &lt;code&gt;JRootPane&lt;/code&gt; 。一方、 &lt;code&gt;windowDecorationStyle&lt;/code&gt; が &lt;code&gt;JRootPane.NONE&lt;/code&gt; に変更された場合、これにより、に追加された &lt;code&gt;Component&lt;/code&gt; が削除されます。 &lt;code&gt;JRootPane&lt;/code&gt; は、 &lt;code&gt;installUI&lt;/code&gt; が呼び出される前の境界線をリセットします。</target>
        </trans-unit>
        <trans-unit id="00e0ad37487fa6fec455ac4a3666da8d02019dea" translate="yes" xml:space="preserve">
          <source>Invoked when a window has been closed as the result of calling dispose on the window.</source>
          <target state="translated">ウィンドウの dispose を呼び出した結果、ウィンドウが閉じられた場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="422d6fe8378912de49c6afe95417cdcf6cbcdb3b" translate="yes" xml:space="preserve">
          <source>Invoked when a window has been closed.</source>
          <target state="translated">ウィンドウが閉じられたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c7b3aef8af76f15c9d5220f360ac5f066608ca1c" translate="yes" xml:space="preserve">
          <source>Invoked when a window has been opened.</source>
          <target state="translated">ウィンドウが開かれたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="60dae29244c18f1ec88264c1b31bdafbab254b5a" translate="yes" xml:space="preserve">
          <source>Invoked when a window is activated.</source>
          <target state="translated">ウィンドウがアクティブになったときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="67d3277c730f09bb37830ff0f83d54250295af6a" translate="yes" xml:space="preserve">
          <source>Invoked when a window is changed from a minimized to a normal state.</source>
          <target state="translated">ウィンドウが最小化された状態から通常の状態に変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9c7f9e06840d01fb8dfe4de204ae46cd058c1108" translate="yes" xml:space="preserve">
          <source>Invoked when a window is changed from a normal to a minimized state.</source>
          <target state="translated">ウィンドウが通常の状態から最小化された状態に変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="61d7499c0058f49fa09c2c4ec80728d52d1fb423" translate="yes" xml:space="preserve">
          <source>Invoked when a window is changed from a normal to a minimized state. For many platforms, a minimized window is displayed as the icon specified in the window's iconImage property.</source>
          <target state="translated">ウィンドウが通常の状態から最小化された状態に変更されたときに呼び出されます。多くのプラットフォームでは、最小化されたウィンドウはウィンドウの iconImage プロパティで指定されたアイコンとして表示されます。</target>
        </trans-unit>
        <trans-unit id="e7b619a034129f830dd5aec974d871f69fb3b3e1" translate="yes" xml:space="preserve">
          <source>Invoked when a window is de-activated.</source>
          <target state="translated">ウィンドウが非アクティブ化されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c351a77cc3e8b1cceac22cdae7e8a2fe6c15470b" translate="yes" xml:space="preserve">
          <source>Invoked when a window is de-iconified.</source>
          <target state="translated">ウィンドウが非アイコン化されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="eb0ef2f18a27473c8ab578ddfc674dc77ff3f2cf" translate="yes" xml:space="preserve">
          <source>Invoked when a window is iconified.</source>
          <target state="translated">ウィンドウがアイコン化されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="804aeb2c34cb918de48c6bcd0fb31a549f5fdd70" translate="yes" xml:space="preserve">
          <source>Invoked when a window is in the process of being closed.</source>
          <target state="translated">ウィンドウが閉じられようとしているときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="43537223ebb683ee805017071a20fad0edd66fea" translate="yes" xml:space="preserve">
          <source>Invoked when a window is in the process of being closed. The close operation can be overridden at this point.</source>
          <target state="translated">ウィンドウが閉じられようとしているときに呼び出されます。この時点で close 操作をオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="9360eccc100c7efc00f52a251df737bedd1546fa" translate="yes" xml:space="preserve">
          <source>Invoked when a window state is changed.</source>
          <target state="translated">ウィンドウの状態が変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1811011a469ebfa94edd06ee031f6b673e4b03fa" translate="yes" xml:space="preserve">
          <source>Invoked when an action occurs.</source>
          <target state="translated">アクションが発生したときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d46fad955370f90a809af370dfce0c1114ed4c79" translate="yes" xml:space="preserve">
          <source>Invoked when an event is dispatched in the AWT.</source>
          <target state="translated">AWTでイベントがディスパッチされたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="96c68a672aeb88ecca1eee9503a4461864a12e9a" translate="yes" xml:space="preserve">
          <source>Invoked when an internal frame has been closed.</source>
          <target state="translated">内部フレームが閉じられたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2716e85f610e6d9e09aa344f3b2466f5a2f5fe5a" translate="yes" xml:space="preserve">
          <source>Invoked when an internal frame has been opened.</source>
          <target state="translated">内部フレームがオープンされたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ab4a9fe4b2a58d1748b607e3dcdfb94fc0edbd74" translate="yes" xml:space="preserve">
          <source>Invoked when an internal frame is activated.</source>
          <target state="translated">内部フレームがアクティブになったときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="aebd2b35fb42b12c8468c54343a1cf07ab109f98" translate="yes" xml:space="preserve">
          <source>Invoked when an internal frame is de-activated.</source>
          <target state="translated">内部フレームが非アクティブ化されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="dfd44c37595d162c3ff79fd5059c01832ef3a44a" translate="yes" xml:space="preserve">
          <source>Invoked when an internal frame is de-iconified.</source>
          <target state="translated">内部フレームがデアイコン化されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="753513f2bd594978ac1f433bb2b837bc180b55c1" translate="yes" xml:space="preserve">
          <source>Invoked when an internal frame is iconified.</source>
          <target state="translated">内部フレームがアイコン化されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0281917b3002c9702e37cc8307d5306eefab34f8" translate="yes" xml:space="preserve">
          <source>Invoked when an internal frame is in the process of being closed.</source>
          <target state="translated">内部フレームが閉じられようとしているときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="adeff2d94545f28aaac65bbb8ef521d1135bf502" translate="yes" xml:space="preserve">
          <source>Invoked when an internal frame is in the process of being closed. The close operation can be overridden at this point.</source>
          <target state="translated">内部フレームが閉じられようとしているときに呼び出されます。この時点で close 操作をオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="2a2ddb169a50ea61d64cc98ff3e904b7220d6012" translate="yes" xml:space="preserve">
          <source>Invoked when an item has been selected or deselected by the user.</source>
          <target state="translated">ユーザーがアイテムを選択または選択解除したときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1fe8fb337f8119001bf9c73b12893b17863405d6" translate="yes" xml:space="preserve">
          <source>Invoked when an item has been selected or deselected by the user. The code written for this method performs the operations that need to occur when an item is selected (or deselected).</source>
          <target state="translated">ユーザーがアイテムを選択または選択解除したときに呼び出されます。このメソッドのために書かれたコードは、アイテムが選択された (または選択解除された)ときに発生する必要のある操作を実行します。</target>
        </trans-unit>
        <trans-unit id="15571cc73d654dd73216f6b6aa441ec4bc2ca52e" translate="yes" xml:space="preserve">
          <source>Invoked when an operation fails.</source>
          <target state="translated">操作が失敗したときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9bbfd1103e9951bfcddf899d52f9086fe6a19520" translate="yes" xml:space="preserve">
          <source>Invoked when an operation has completed.</source>
          <target state="translated">操作が完了したときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0c99b4df501d20877758d52936b62baa76841e4c" translate="yes" xml:space="preserve">
          <source>Invoked when editing is canceled.</source>
          <target state="translated">編集がキャンセルされたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2d288ae79f97b4eb91c87f935a76d6707d345b30" translate="yes" xml:space="preserve">
          <source>Invoked when editing is canceled. The editor object is discarded and the cell is rendered once again.</source>
          <target state="translated">編集がキャンセルされたときに呼び出されます。エディタオブジェクトは破棄され、セルは再びレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="57489934b363c32816d61699168f0704fdf73ad5" translate="yes" xml:space="preserve">
          <source>Invoked when editing is finished.</source>
          <target state="translated">編集が終了したときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1cce9277faf7b47b73467e42b9bc6dbf269974ff" translate="yes" xml:space="preserve">
          <source>Invoked when editing is finished. The changes are saved and the editor is discarded.</source>
          <target state="translated">編集が終了したときに呼び出されます。変更内容は保存され、エディタは破棄されます。</target>
        </trans-unit>
        <trans-unit id="1e94047f49967cb537e1f2e58d90b8665afc8081" translate="yes" xml:space="preserve">
          <source>Invoked when focus is activated on the tree we're in, redraws the lead row.</source>
          <target state="translated">今いるツリーにフォーカスが当たったときに呼び出され、先頭の行を再描画します。</target>
        </trans-unit>
        <trans-unit id="a61a9f6447c079bc8646fbead3d629b925cd813d" translate="yes" xml:space="preserve">
          <source>Invoked when mouse event occurs.</source>
          <target state="translated">マウスイベントが発生したときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="26bb97cbdb891c56fb81defee8be87a01cf96108" translate="yes" xml:space="preserve">
          <source>Invoked when rows have been changed in the underlying model between the specified range (inclusive).</source>
          <target state="translated">指定された範囲(含む)の間で、基礎となるモデルの行が変更された場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c29ce89f9c579cb93928136fc2c656d9e108f231" translate="yes" xml:space="preserve">
          <source>Invoked when rows have been deleted from the underlying model in the specified range (inclusive).</source>
          <target state="translated">指定された範囲(含む)のモデルから行が削除された場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="82f4e7890a50c8d3d56fd83b240dc8f91e022d6c" translate="yes" xml:space="preserve">
          <source>Invoked when rows have been inserted into the underlying model in the specified range (inclusive).</source>
          <target state="translated">指定された範囲(含む)に行が挿入された場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="49f7ea068b2063fb7e14d3771457eccb9ab67406" translate="yes" xml:space="preserve">
          <source>Invoked when the Elements attributes have changed.</source>
          <target state="translated">Elements属性が変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="465fcab5c4c7d77e7fbbf56b59775b6a94d1d2bc" translate="yes" xml:space="preserve">
          <source>Invoked when the Elements attributes have changed. Recreates the image.</source>
          <target state="translated">Elements属性が変更されたときに呼び出されます。画像を再作成します。</target>
        </trans-unit>
        <trans-unit id="79f614d2b86ac36c7513c281a74f4ae5928cce4b" translate="yes" xml:space="preserve">
          <source>Invoked when the Window is no longer the focused Window, which means that keyboard events will no longer be delivered to the Window or any of its subcomponents.</source>
          <target state="translated">ウィンドウがフォーカスされたウィンドウでなくなったときに呼び出され、キーボードイベントがウィンドウやそのサブコンポーネントに配信されなくなることを意味します。</target>
        </trans-unit>
        <trans-unit id="f8ed7000e3b28a0260355fde25a4883b5679c586" translate="yes" xml:space="preserve">
          <source>Invoked when the Window is set to be the active Window.</source>
          <target state="translated">WindowがアクティブなWindowに設定されている場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6b31a894bffdcfe801877021c45af96c9207210f" translate="yes" xml:space="preserve">
          <source>Invoked when the Window is set to be the active Window. Only a Frame or a Dialog can be the active Window. The native windowing system may denote the active Window or its children with special decorations, such as a highlighted title bar. The active Window is always either the focused Window, or the first Frame or Dialog that is an owner of the focused Window.</source>
          <target state="translated">ウィンドウがアクティブウィンドウに設定されている場合に呼び出されます。活性ウィンドウになれるのはフレームかダイアログだけです。ネイティブウィンドウシステムでは、アクティブウィンドウやその子ウィンドウを、ハイライトされたタイトルバーのような特別な装飾で表示することができます。アクティブウィンドウは、常にフォーカスされたウィンドウか、フォーカスされたウィンドウの所有者である最初のフレームかダイアログのいずれかです。</target>
        </trans-unit>
        <trans-unit id="b34005443ae6acd24039e2eb3cad0baffc331b09" translate="yes" xml:space="preserve">
          <source>Invoked when the Window is set to be the focused Window, which means that the Window, or one of its subcomponents, will receive keyboard events.</source>
          <target state="translated">ウィンドウがフォーカスされたウィンドウに設定されているときに呼び出され、ウィンドウまたはそのサブコンポーネントの1つがキーボードイベントを受信することを意味します。</target>
        </trans-unit>
        <trans-unit id="14e73ab0e53775a8ae83fbb3d7fcb61734a840c7" translate="yes" xml:space="preserve">
          <source>Invoked when the application is asked to quit.</source>
          <target state="translated">アプリケーションの終了を要求されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c872ce404ad7377c2f43628c4a036f433b964c0c" translate="yes" xml:space="preserve">
          <source>Invoked when the application is asked to quit. Implementors must call either &lt;a href=&quot;quitresponse#cancelQuit()&quot;&gt;&lt;code&gt;QuitResponse.cancelQuit()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;quitresponse#performQuit()&quot;&gt;&lt;code&gt;QuitResponse.performQuit()&lt;/code&gt;&lt;/a&gt;, or ensure the application terminates. The process (or log-out) requesting this app to quit will be blocked until the &lt;a href=&quot;quitresponse&quot;&gt;&lt;code&gt;QuitResponse&lt;/code&gt;&lt;/a&gt; is handled. Apps that require complex UI to shutdown may call the &lt;a href=&quot;quitresponse&quot;&gt;&lt;code&gt;QuitResponse&lt;/code&gt;&lt;/a&gt; from any thread. Your app may be asked to quit multiple times before you have responded to the initial request. This handler is called each time a quit is requested, and the same &lt;a href=&quot;quitresponse&quot;&gt;&lt;code&gt;QuitResponse&lt;/code&gt;&lt;/a&gt; object is passed until it is handled. Once used, the &lt;a href=&quot;quitresponse&quot;&gt;&lt;code&gt;QuitResponse&lt;/code&gt;&lt;/a&gt; cannot be used again to change the decision.</source>
          <target state="translated">アプリケーションの終了を求められたときに呼び出されます。実装者は、&lt;a href=&quot;quitresponse#cancelQuit()&quot;&gt; &lt;code&gt;QuitResponse.cancelQuit()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;quitresponse#performQuit()&quot;&gt; &lt;code&gt;QuitResponse.performQuit()&lt;/code&gt; の&lt;/a&gt;いずれかを呼び出すか、アプリケーションが終了することを確認する必要があります。このアプリの終了を要求するプロセス（またはログアウト）は、&lt;a href=&quot;quitresponse&quot;&gt; &lt;code&gt;QuitResponse&lt;/code&gt; &lt;/a&gt;が処理されるまでブロックされます。シャットダウンするために複雑なUIを必要とするアプリは、任意のスレッドから&lt;a href=&quot;quitresponse&quot;&gt; &lt;code&gt;QuitResponse&lt;/code&gt; &lt;/a&gt;を呼び出すことができます。最初のリクエストに応答する前に、アプリを複数回終了するように求められる場合があります。このハンドラーは、終了が要求されるたびに呼び出され、処理されるまで同じ&lt;a href=&quot;quitresponse&quot;&gt; &lt;code&gt;QuitResponse&lt;/code&gt; &lt;/a&gt;オブジェクトが渡されます。一度使用すると、&lt;a href=&quot;quitresponse&quot;&gt; &lt;code&gt;QuitResponse&lt;/code&gt; &lt;/a&gt;を再度使用して決定を変更することはできません。</target>
        </trans-unit>
        <trans-unit id="3b53e33ce29878cb9630dd67dc49288c143791c2" translate="yes" xml:space="preserve">
          <source>Invoked when the caret within composed text has changed.</source>
          <target state="translated">構成されたテキスト内のキャレットが変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="717554779461f87731f5a1201aaf30b1ce530bb2" translate="yes" xml:space="preserve">
          <source>Invoked when the column in the rows have been updated in the underlying model between the specified range.</source>
          <target state="translated">指定された範囲の間で、行のカラムが基礎モデルで更新されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="fa9b2423c09ee06411b1495440d6ae362b012557" translate="yes" xml:space="preserve">
          <source>Invoked when the component has been made invisible.</source>
          <target state="translated">コンポーネントが非表示になったときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="43039026d7a70039fea30597b5221e2cfa323794" translate="yes" xml:space="preserve">
          <source>Invoked when the component has been made visible.</source>
          <target state="translated">コンポーネントが可視化されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="78448c1494ee97777303eb17b3511900fb186845" translate="yes" xml:space="preserve">
          <source>Invoked when the component's position changes.</source>
          <target state="translated">コンポーネントの位置が変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="126b3b5fcb46cea8e98a6cbf19ce2882983a9b1c" translate="yes" xml:space="preserve">
          <source>Invoked when the component's size changes.</source>
          <target state="translated">コンポーネントのサイズが変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8ab3e9871148ece5b6b49f8c32aee4439b2b1f27" translate="yes" xml:space="preserve">
          <source>Invoked when the contents of the underlying model have completely changed.</source>
          <target state="translated">基礎となるモデルの内容が完全に変更された場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2aa4ac21ebeeff5e3676d41e24e35d101cde761b" translate="yes" xml:space="preserve">
          <source>Invoked when the contents of the underlying model have completely changed. The structure of the table is the same, only the contents have changed. This is typically sent when it is too expensive to characterize the change in terms of the other methods.</source>
          <target state="translated">基底モデルの内容が完全に変更された場合に呼び出されます。テーブルの構造は同じですが、内容だけが変更されています。これは通常、他のメソッドで変更を特徴付けるにはコストがかかりすぎる場合に送信されます。</target>
        </trans-unit>
        <trans-unit id="358dddaf2a0895877bc7fd48c975c6be32028e67" translate="yes" xml:space="preserve">
          <source>Invoked when the cursor enters the menu.</source>
          <target state="translated">カーソルがメニューに入ったときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1f00c3ea7bf4d623b7473bda41cf2c92ceafb513" translate="yes" xml:space="preserve">
          <source>Invoked when the cursor enters the menu. This method sets the selected path for the MenuSelectionManager and handles the case in which a menu item is used to pop up an additional menu, as in a hierarchical menu system.</source>
          <target state="translated">カーソルがメニューに入った時に呼び出されます。このメソッドは、MenuSelectionManagerの選択されたパスを設定し、階層的なメニューシステムのように、メニュー項目を使用して追加メニューをポップアップさせる場合を処理します。</target>
        </trans-unit>
        <trans-unit id="a1888a602619f6ce0b5c38cbf00b985b4f8b9d6e" translate="yes" xml:space="preserve">
          <source>Invoked when the dragged mouse has entered a menu component's display area.</source>
          <target state="translated">ドラッグしたマウスがメニュー コンポーネントの表示領域に入ったときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="cb10906bdb588955e72e4ba0039b51dcb6000096" translate="yes" xml:space="preserve">
          <source>Invoked when the dragged mouse has left a menu component's display area.</source>
          <target state="translated">ドラッグしたマウスがメニュー コンポーネントの表示領域から離れたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="57852f19c9d59d123b86133eabece28abe6414a4" translate="yes" xml:space="preserve">
          <source>Invoked when the menu is canceled.</source>
          <target state="translated">メニューがキャンセルされたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="527cd871f1d3efd275969fc8098ad27d25ada089" translate="yes" xml:space="preserve">
          <source>Invoked when the menu is deselected.</source>
          <target state="translated">メニューの選択が解除されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="da546a10c29f8f005b866666f9ba3a93870451e3" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse button has been clicked (pressed and released) on a component.</source>
          <target state="translated">コンポーネント上でマウスボタンがクリックされた(押された、離された)ときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6bcbb29906fa2a407ea9abefa8ba86f47d0f862c" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse button has been moved on a component (with no buttons no down).</source>
          <target state="translated">マウスのボタンがコンポーネント上で移動したときに呼び出されます(ボタンがない状態では、ダウンはありません)。</target>
        </trans-unit>
        <trans-unit id="54e5ed18e2ed9816a17e6b2af2043c532bb6365c" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse cursor has been moved onto a component but no buttons have been pushed.</source>
          <target state="translated">マウスカーソルがコンポーネント上に移動したが、ボタンが押されていない場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="561bb7d0e5770b246ac177d6c6e33856c33f434a" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse enters a component.</source>
          <target state="translated">マウスがコンポーネントに入ったときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="23d334358d8a6d228b1dfeb11b2be6cfca35cf10" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse exits a component.</source>
          <target state="translated">マウスがコンポーネントを終了したときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="62e40ac968a2e2daa87cd5ca24fe2f45574b9e76" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse exits the scrollbar.</source>
          <target state="translated">マウスがスクロールバーを抜けるときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2a80f514495209f1f8577b3ef31e82c308cd83e4" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse has been clicked on a component.</source>
          <target state="translated">マウスがコンポーネント上でクリックされたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="13705210826541ea7c584a87cc720e08e527fb2b" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse has been clicked on the menu.</source>
          <target state="translated">メニュー上でマウスがクリックされたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="fe60208ee5aabb367b00f0cd55f0611436a3ee20" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse has been clicked on the menu. This method clears or sets the selection path of the MenuSelectionManager.</source>
          <target state="translated">メニュー上でマウスがクリックされたときに呼び出されます。このメソッドは、MenuSelectionManager の選択パスをクリアまたは設定します。</target>
        </trans-unit>
        <trans-unit id="c629b83bf17b159b52d41a48c8475631e1eb2fe2" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse has been released on the menu.</source>
          <target state="translated">メニュー上でマウスが離されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c85c9d315138f70ef61c808dac17c0aa3bbb2685" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse has been released on the menu. Delegates the mouse event to the MenuSelectionManager.</source>
          <target state="translated">メニュー上でマウスが離されたときに呼び出されます。マウスイベントを MenuSelectionManager にデリゲートします。</target>
        </trans-unit>
        <trans-unit id="e704fa5b5b91e25b393d4c2b10b4c233c816b022" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse is being dragged in a menu component's display area.</source>
          <target state="translated">メニュー コンポーネントの表示領域でマウスがドラッグされているときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6d65b0e647abe3360ad53f46007d9be3d7e763e6" translate="yes" xml:space="preserve">
          <source>Invoked when the mouse wheel is rotated.</source>
          <target state="translated">マウスホイールが回転したときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9fb3972edcf4ca581c7f9d50ff4a9bf685891d27" translate="yes" xml:space="preserve">
          <source>Invoked when the panel is added to the chooser.</source>
          <target state="translated">パネルがセレクタに追加されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2b322037538a56e0fda0ff295353d408c5f3609f" translate="yes" xml:space="preserve">
          <source>Invoked when the panel is added to the chooser. If you override this, be sure to call &lt;code&gt;super&lt;/code&gt;.</source>
          <target state="translated">Invoked when the panel is added to the chooser. If you override this, be sure to call &lt;code&gt;super&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bfb289c3fe0ec421c685205d38785ea9947a1326" translate="yes" xml:space="preserve">
          <source>Invoked when the panel is removed from the chooser.</source>
          <target state="translated">パネルがセレクタから取り外されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d0ee12065f21c68efae07b1efd08f085f3a471a8" translate="yes" xml:space="preserve">
          <source>Invoked when the panel is removed from the chooser. If override this, be sure to call &lt;code&gt;super&lt;/code&gt;.</source>
          <target state="translated">Invoked when the panel is removed from the chooser. If override this, be sure to call &lt;code&gt;super&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5910294b6a7b5b27de488ec532688c866473d66" translate="yes" xml:space="preserve">
          <source>Invoked when the row selection changes -- repaints to show the new selection.</source>
          <target state="translated">行の選択範囲が変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="47c6cd2112c42879a9332f0703cdb4910ef35c48" translate="yes" xml:space="preserve">
          <source>Invoked when the selection model of the &lt;code&gt;TableColumnModel&lt;/code&gt; is changed.</source>
          <target state="translated">Invoked when the selection model of the &lt;code&gt;TableColumnModel&lt;/code&gt; is changed.</target>
        </trans-unit>
        <trans-unit id="90ce1267002b13f79a9ecd1060c68d5965ce9861" translate="yes" xml:space="preserve">
          <source>Invoked when the selection model of the &lt;code&gt;TableColumnModel&lt;/code&gt; is changed. This method currently has no effect (the header is not redrawn).</source>
          <target state="translated">Invoked when the selection model of the &lt;code&gt;TableColumnModel&lt;/code&gt; is changed. This method currently has no effect (the header is not redrawn).</target>
        </trans-unit>
        <trans-unit id="eba4659e4407f2dcc7af1c321c2434a77268d2e9" translate="yes" xml:space="preserve">
          <source>Invoked when the target &lt;a href=&quot;clipboard&quot;&gt;&lt;code&gt;Clipboard&lt;/code&gt;&lt;/a&gt; of the listener has changed its available &lt;a href=&quot;dataflavor&quot;&gt;&lt;code&gt;DataFlavor&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">Invoked when the target &lt;a href=&quot;clipboard&quot;&gt; &lt;code&gt;Clipboard&lt;/code&gt; &lt;/a&gt; of the listener has changed its available &lt;a href=&quot;dataflavor&quot;&gt; &lt;code&gt;DataFlavor&lt;/code&gt; &lt;/a&gt;s.</target>
        </trans-unit>
        <trans-unit id="d006d01936e0ebc04068b2ff6b63de6bf09561af" translate="yes" xml:space="preserve">
          <source>Invoked when the target of the listener has changed its state.</source>
          <target state="translated">リスナーのターゲットが状態を変更したときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="109a7928c9a47e9aa4174e0d483581cc760569f1" translate="yes" xml:space="preserve">
          <source>Invoked when the text entered through an input method has changed.</source>
          <target state="translated">入力方法で入力されたテキストが変更された場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="449f4d2c9a6c25fe0e1a4090e0a69309ef5b9181" translate="yes" xml:space="preserve">
          <source>Invoked when the underlying model structure has completely changed.</source>
          <target state="translated">基礎となるモデル構造が完全に変更された場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f5c0559dc386e48d320da1f9f1ad0f4f90a3533a" translate="yes" xml:space="preserve">
          <source>Invoked when the underlying model structure has completely changed. For example, if the number of columns in a &lt;code&gt;TableModel&lt;/code&gt; changed, this method would be invoked.</source>
          <target state="translated">Invoked when the underlying model structure has completely changed. For example, if the number of columns in a &lt;code&gt;TableModel&lt;/code&gt; changed, this method would be invoked.</target>
        </trans-unit>
        <trans-unit id="67ca4236b072c145da63ea4dde46a9025bb98335" translate="yes" xml:space="preserve">
          <source>Invoked when the user attempts an invalid operation, such as pasting into an uneditable &lt;code&gt;JTextField&lt;/code&gt; that has focus.</source>
          <target state="translated">Invoked when the user attempts an invalid operation, such as pasting into an uneditable &lt;code&gt;JTextField&lt;/code&gt; that has focus.</target>
        </trans-unit>
        <trans-unit id="28207e822fcf57c3291fe93ffc211a61a8aa6ebb" translate="yes" xml:space="preserve">
          <source>Invoked when the user attempts an invalid operation, such as pasting into an uneditable &lt;code&gt;JTextField&lt;/code&gt; that has focus. The default implementation beeps. Subclasses that wish different behavior should override this and provide the additional feedback.</source>
          <target state="translated">Invoked when the user attempts an invalid operation, such as pasting into an uneditable &lt;code&gt;JTextField&lt;/code&gt; that has focus. The default implementation beeps. Subclasses that wish different behavior should override this and provide the additional feedback.</target>
        </trans-unit>
        <trans-unit id="aeb23f66d6439199ddebe3a0aea000f33e37a2d3" translate="yes" xml:space="preserve">
          <source>Invoked when the user attempts to close the window from the window's system menu.</source>
          <target state="translated">ユーザがウィンドウのシステムメニューからウィンドウを閉じようとしたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="57361029bb878f3c9bdc8c2b6d7b7f4a27965857" translate="yes" xml:space="preserve">
          <source>Invoked when the user inputs an invalid value.</source>
          <target state="translated">ユーザが無効な値を入力したときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="5a9de9200247fe0fdcab85cef7770c686f8db944" translate="yes" xml:space="preserve">
          <source>Invoked when the user inputs an invalid value. This gives the component a chance to provide feedback. The default implementation beeps.</source>
          <target state="translated">ユーザーが無効な値を入力したときに呼び出されます。これにより、コンポーネントにフィードバックを提供する機会が与えられます。デフォルトの実装ではビープ音が鳴ります。</target>
        </trans-unit>
        <trans-unit id="34666fc28fa4af8ecda466f6909f6de80a6bd7e6" translate="yes" xml:space="preserve">
          <source>Invoked when the value of the adjustable has changed.</source>
          <target state="translated">アジャスタブルの値が変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="41c8422492cf799b8e3a4848795fdd81b2cf2abb" translate="yes" xml:space="preserve">
          <source>Invoked when the value of the text has changed.</source>
          <target state="translated">テキストの値が変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="753f1548826c3dbb9283b900acc68da7fe9970a8" translate="yes" xml:space="preserve">
          <source>Invoked when the value of the text has changed. The code written for this method performs the operations that need to occur when text changes.</source>
          <target state="translated">テキストの値が変更されたときに呼び出されます。このメソッドのために書かれたコードは、テキストが変更されたときに発生する必要のある操作を実行します。</target>
        </trans-unit>
        <trans-unit id="ffb2a18a1f2719d88207396ea085cda8c527be62" translate="yes" xml:space="preserve">
          <source>Invoked when this table's &lt;code&gt;TableModel&lt;/code&gt; generates a &lt;code&gt;TableModelEvent&lt;/code&gt;.</source>
          <target state="translated">Invoked when this table's &lt;code&gt;TableModel&lt;/code&gt; generates a &lt;code&gt;TableModelEvent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fdeea35acd2b1be6db8a3ce42f97a18680c19f7d" translate="yes" xml:space="preserve">
          <source>Invoked when this table's &lt;code&gt;TableModel&lt;/code&gt; generates a &lt;code&gt;TableModelEvent&lt;/code&gt;. The &lt;code&gt;TableModelEvent&lt;/code&gt; should be constructed in the coordinate system of the model; the appropriate mapping to the view coordinate system is performed by this &lt;code&gt;JTable&lt;/code&gt; when it receives the event.</source>
          <target state="translated">Invoked when this table's &lt;code&gt;TableModel&lt;/code&gt; generates a &lt;code&gt;TableModelEvent&lt;/code&gt; . The &lt;code&gt;TableModelEvent&lt;/code&gt; should be constructed in the coordinate system of the model; the appropriate mapping to the view coordinate system is performed by this &lt;code&gt;JTable&lt;/code&gt; when it receives the event.</target>
        </trans-unit>
        <trans-unit id="05dfcb2b6357d5a291443a330b91c31e7e122333" translate="yes" xml:space="preserve">
          <source>Invoked when window state is changed.</source>
          <target state="translated">ウィンドウの状態が変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="181ca1c36e24383b2e25a98a4f968ea2b8e1835c" translate="yes" xml:space="preserve">
          <source>Invoked whenever a node in the tree is about to be collapsed.</source>
          <target state="translated">ツリー内のノードが折りたたまれようとしているときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f36e2784898b50c8a01e0e3eb990682f6f2f041d" translate="yes" xml:space="preserve">
          <source>Invoked whenever a node in the tree is about to be expanded.</source>
          <target state="translated">ツリー内のノードが展開されようとしているときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="136a3c7e7529b04f06ad45da1e691df52da4db4d" translate="yes" xml:space="preserve">
          <source>Invokedynamic call sites have two argument lists: a static argument list and a dynamic argument list. The static argument list is stored in the constant pool; the dynamic argument is pushed on the operand stack at capture time. The bootstrap method has access to the entire static argument list (which in this case, includes information describing the implementation method, the target interface, and the target interface method(s)), as well as a method signature describing the number and static types (but not the values) of the dynamic arguments and the static return type of the invokedynamic site.</source>
          <target state="translated">このような場合には、このように、「静的引数リスト」と「動的引数リスト」の2つの引数リストが必要になります。静的な引数リストは定数プールに格納され、動的な引数はキャプチャ時にオペランドスタックにプッシュされます。ブートストラップ・メソッドは、静的引数リスト全体(この場合、実装メソッド、ターゲット・インターフェース、ターゲット・インターフェース・メソッドを記述する情報を含みます)と、動的引数の数と静的型(値ではなく)を記述するメソッド・シグネチャ、および呼び出されたダイナミック・サイトの静的戻り値の型にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="034d7e412f997fb3385d72dcd2b1f9b72382ae03" translate="yes" xml:space="preserve">
          <source>Invokes &lt;a href=&quot;entityresolver2#resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;EntityResolver2.resolveEntity()&lt;/code&gt;&lt;/a&gt; with null entity name and base URI.</source>
          <target state="translated">Invokes &lt;a href=&quot;entityresolver2#resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;EntityResolver2.resolveEntity()&lt;/code&gt; &lt;/a&gt; with null entity name and base URI.</target>
        </trans-unit>
        <trans-unit id="2c84a7f16ec10df891896d3b81e21d17e65c19c4" translate="yes" xml:space="preserve">
          <source>Invokes &lt;a href=&quot;entityresolver2#resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;EntityResolver2.resolveEntity()&lt;/code&gt;&lt;/a&gt; with null entity name and base URI. You only need to override that method to use this class.</source>
          <target state="translated">Invokes &lt;a href=&quot;entityresolver2#resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;EntityResolver2.resolveEntity()&lt;/code&gt; &lt;/a&gt; with null entity name and base URI. You only need to override that method to use this class.</target>
        </trans-unit>
        <trans-unit id="75f3d116ffb7789a4369d8c6505a33280d96c3f5" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;actionPerformed&lt;/code&gt; on &lt;code&gt;action&lt;/code&gt; if &lt;code&gt;action&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt; and accepts the sender object.</source>
          <target state="translated">Invokes &lt;code&gt;actionPerformed&lt;/code&gt; on &lt;code&gt;action&lt;/code&gt; if &lt;code&gt;action&lt;/code&gt; is non- &lt;code&gt;null&lt;/code&gt; and accepts the sender object.</target>
        </trans-unit>
        <trans-unit id="84ade6f3f38e042946022d04908bd809b84cc4cc" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;actionPerformed&lt;/code&gt; on &lt;code&gt;action&lt;/code&gt; if &lt;code&gt;action&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt; and accepts the sender object. The command for the ActionEvent is determined by:</source>
          <target state="translated">Invokes &lt;code&gt;actionPerformed&lt;/code&gt; on &lt;code&gt;action&lt;/code&gt; if &lt;code&gt;action&lt;/code&gt; is non- &lt;code&gt;null&lt;/code&gt; and accepts the sender object. The command for the ActionEvent is determined by:</target>
        </trans-unit>
        <trans-unit id="7b1daee93f3793507a33455ed79dcbe741ca86e1" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;provideErrorFeedback&lt;/code&gt; on the current look and feel, which typically initiates an error beep.</source>
          <target state="translated">Invokes &lt;code&gt;provideErrorFeedback&lt;/code&gt; on the current look and feel, which typically initiates an error beep.</target>
        </trans-unit>
        <trans-unit id="7bd07db099ed326a8cfa699bfae0e7d16c8a985b" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;provideErrorFeedback&lt;/code&gt; on the current look and feel, which typically initiates an error beep. The normal behavior of transferring the currently selected range in the associated text model to the system clipboard, and leaving the contents from the model, is not acceptable for a password field.</source>
          <target state="translated">Invokes &lt;code&gt;provideErrorFeedback&lt;/code&gt; on the current look and feel, which typically initiates an error beep. The normal behavior of transferring the currently selected range in the associated text model to the system clipboard, and leaving the contents from the model, is not acceptable for a password field.</target>
        </trans-unit>
        <trans-unit id="bb286bc0b406cca1adfccd6a45d23b10a5a52197" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;provideErrorFeedback&lt;/code&gt; on the current look and feel, which typically initiates an error beep. The normal behavior of transferring the currently selected range in the associated text model to the system clipboard, and removing the contents from the model, is not acceptable for a password field.</source>
          <target state="translated">Invokes &lt;code&gt;provideErrorFeedback&lt;/code&gt; on the current look and feel, which typically initiates an error beep. The normal behavior of transferring the currently selected range in the associated text model to the system clipboard, and removing the contents from the model, is not acceptable for a password field.</target>
        </trans-unit>
        <trans-unit id="b99072c1a07aa9e93aafc6735755407d965e9482" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;shutdown&lt;/code&gt; when this executor is no longer referenced and it has no threads.</source>
          <target state="translated">このエグゼキューターが参照されなくなり、スレッドがないときに &lt;code&gt;shutdown&lt;/code&gt; 呼び出します。</target>
        </trans-unit>
        <trans-unit id="049be886d03a13dee3e84ab0ebf313a9caf51192" translate="yes" xml:space="preserve">
          <source>Invokes a method on or through a RequiredModelMBean and returns the result of the method execution.</source>
          <target state="translated">RequiredModelMBean 上、または RequiredModelMBean を介してメソッドを呼び出し、メソッドの実行結果を返します。</target>
        </trans-unit>
        <trans-unit id="b4a34b90a6d21a90429a3e6815fa689d71223876" translate="yes" xml:space="preserve">
          <source>Invokes an operation on an MBean.</source>
          <target state="translated">MBean の操作を呼び出します。</target>
        </trans-unit>
        <trans-unit id="d30d312cbf9be7b254348d84b53ae55ca8c1afbb" translate="yes" xml:space="preserve">
          <source>Invokes supers implementation of &lt;code&gt;installUI&lt;/code&gt; to install the necessary state onto the passed in &lt;code&gt;JRootPane&lt;/code&gt; to render the metal look and feel implementation of &lt;code&gt;RootPaneUI&lt;/code&gt;.</source>
          <target state="translated">Invokes supers implementation of &lt;code&gt;installUI&lt;/code&gt; to install the necessary state onto the passed in &lt;code&gt;JRootPane&lt;/code&gt; to render the metal look and feel implementation of &lt;code&gt;RootPaneUI&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05c0c5ea2b0b3fa211d287c16109e27bf2a4b1e8" translate="yes" xml:space="preserve">
          <source>Invokes supers implementation of &lt;code&gt;installUI&lt;/code&gt; to install the necessary state onto the passed in &lt;code&gt;JRootPane&lt;/code&gt; to render the metal look and feel implementation of &lt;code&gt;RootPaneUI&lt;/code&gt;. If the &lt;code&gt;windowDecorationStyle&lt;/code&gt; property of the &lt;code&gt;JRootPane&lt;/code&gt; is other than &lt;code&gt;JRootPane.NONE&lt;/code&gt;, this will add a custom &lt;code&gt;Component&lt;/code&gt; to render the widgets to &lt;code&gt;JRootPane&lt;/code&gt;, as well as installing a custom &lt;code&gt;Border&lt;/code&gt; and &lt;code&gt;LayoutManager&lt;/code&gt; on the &lt;code&gt;JRootPane&lt;/code&gt;.</source>
          <target state="translated">Invokes supers implementation of &lt;code&gt;installUI&lt;/code&gt; to install the necessary state onto the passed in &lt;code&gt;JRootPane&lt;/code&gt; to render the metal look and feel implementation of &lt;code&gt;RootPaneUI&lt;/code&gt; . If the &lt;code&gt;windowDecorationStyle&lt;/code&gt; property of the &lt;code&gt;JRootPane&lt;/code&gt; is other than &lt;code&gt;JRootPane.NONE&lt;/code&gt; , this will add a custom &lt;code&gt;Component&lt;/code&gt; to render the widgets to &lt;code&gt;JRootPane&lt;/code&gt; , as well as installing a custom &lt;code&gt;Border&lt;/code&gt; and &lt;code&gt;LayoutManager&lt;/code&gt; on the &lt;code&gt;JRootPane&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29407bd247807be798b0007887aac21e249622e0" translate="yes" xml:space="preserve">
          <source>Invokes supers implementation to uninstall any of its state.</source>
          <target state="translated">supers の実装を呼び出して、その状態のいずれかをアンインストールします。</target>
        </trans-unit>
        <trans-unit id="23ecc3ca30b4bf9a8ce59ff3d5d5ef1b51c554d9" translate="yes" xml:space="preserve">
          <source>Invokes supers implementation to uninstall any of its state. This will also reset the &lt;code&gt;LayoutManager&lt;/code&gt; of the &lt;code&gt;JRootPane&lt;/code&gt;. If a &lt;code&gt;Component&lt;/code&gt; has been added to the &lt;code&gt;JRootPane&lt;/code&gt; to render the window decoration style, this method will remove it. Similarly, this will revert the Border and LayoutManager of the &lt;code&gt;JRootPane&lt;/code&gt; to what it was before &lt;code&gt;installUI&lt;/code&gt; was invoked.</source>
          <target state="translated">Invokes supers implementation to uninstall any of its state. This will also reset the &lt;code&gt;LayoutManager&lt;/code&gt; of the &lt;code&gt;JRootPane&lt;/code&gt; . If a &lt;code&gt;Component&lt;/code&gt; has been added to the &lt;code&gt;JRootPane&lt;/code&gt; to render the window decoration style, this method will remove it. Similarly, this will revert the Border and LayoutManager of the &lt;code&gt;JRootPane&lt;/code&gt; to what it was before &lt;code&gt;installUI&lt;/code&gt; was invoked.</target>
        </trans-unit>
        <trans-unit id="805ad24d4e7a04e5a2d377ad14379da13d8b92a8" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;cancelEditing&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;cancelEditing&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="042d5967adfd9b9ff6b620950196d4ccdec1daa7" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;contains&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;contains&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="43d3b9aeb6093fc113647f32e0f374bb6d4a73ac" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;containsCustomComponents&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;containsCustomComponents&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="e3ab9766b0f4d42eff6d16058f1a468a844a14d7" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;damageRange&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;damageRange&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="d6735e9228871528607a360b342e9bbd35483e8e" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;ensureFileIsVisible&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;ensureFileIsVisible&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="bbbe070752e0d5d6e87248d2228f08061f2f219e" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;finishedPaintingChildren&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;finishedPaintingChildren&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="f1ee325ae53f49cb217abacfe48b6dbb52f6ef6a" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getAcceptAllFileFilter&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getAcceptAllFileFilter&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="a6b3337aefe3e7d31f087cde783f732013343114" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getAccessibleChild&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getAccessibleChild&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="0a484bc187e79c7c0f7b362868c00db21c45fc40" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getAccessibleChildrenCount&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getAccessibleChildrenCount&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="5a986deec59734966904aef40c533c4c566d9fd5" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getApproveButtonText&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getApproveButtonText&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="5e87b084c3e502cdccdec8746db00a666401ed16" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getCellBounds&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getCellBounds&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="8c4930c63e1938093cd183cf6b2328959e87943a" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getClosestPathForLocation&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getClosestPathForLocation&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="143a847d5a621a4ee54c78958cb6be10a21b71d1" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getDialogTitle&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getDialogTitle&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="b847ad0aa332734820eee6f44b4b9d8c48c417fa" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getDividerLocation&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getDividerLocation&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="cd3a8516d4cbded026dc9193886a13ddead39ab1" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getEditingPath&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getEditingPath&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="e86890be9a8ce2aa1c1776769ed7a34b4e8b1b85" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getEditorKit&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getEditorKit&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="25781d8e04b3277aead5e7506c1393a85458a813" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getFileView&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getFileView&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="f2c47cf51f88077e54e4c6320d24690553902b5c" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getMaximumDividerLocation&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getMaximumDividerLocation&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="f880acd448180a10657d94e365ff0b18fa013738" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getMaximumSize&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getMaximumSize&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="8a8ed496428e5858dd0862bec5b28b21df787026" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getMinimumDividerLocation&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getMinimumDividerLocation&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="00da84be466aee6b1e9b8ac6c6384d5966cb36e0" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getMinimumSize&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getMinimumSize&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="57a70f693e36dfb39da15a9419b038c4c970adaf" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getNextVisualPositionFrom&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getNextVisualPositionFrom&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="345d9487a3b7ca2eac823f01973c0ddcab173a72" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getPathBounds&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getPathBounds&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="a9a66c89e87c64ec00e850816bdd99a18eb72da5" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getPathForRow&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getPathForRow&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="ab247686b2a749e57001f55dfe05d843278a142a" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getPopup&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getPopup&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="bfae178be0e6f0a8427f0976f29a0e07a0eb29df" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getPreferredSize&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getPreferredSize&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="bbbfed5e713139ae765a6e862ced4ec3803b74b7" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getRootView&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getRootView&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="1f39d800b158b149c6e6d7ee28ff876281d8b66e" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getRowCount&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getRowCount&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="59beb486d894e6c65aca92179a100cdc4b7b595d" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getRowForPath&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getRowForPath&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="7e1f2a09d448494bd99f331fccac1e8007378b8a" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getTabBounds&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getTabBounds&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="7e740397c8bc735747d27f7506d1502c4aeb84b3" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getTabRunCount&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getTabRunCount&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="87de260498ea407f5c561ad402840ceffd40304e" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;getToolTipText&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;getToolTipText&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="43faef7d2b006dff0a6cdaea9e0d1ce0c84b5c7e" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;indexToLocation&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;indexToLocation&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="5ea50c696506791dcf4fc98f1aa79c08284fcb3b" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;installUI&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;installUI&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="49cfbf53ffe6e2d5a77d990b6235dfaf6b50321e" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;isEditing&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;isEditing&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="8248c1852826637de8963b177bdf2bf08b96d8cb" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;isFocusTraversable&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;isFocusTraversable&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="650bae36cf075410f787392c0a40f7b131ef251c" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;isPopupTrigger&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;isPopupTrigger&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="4e966e9068a425bcca30826f7fcd9ec1aafe2021" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;isPopupVisible&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;isPopupVisible&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="9e54af8fe9fc198127e40d983023fffa125c308d" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;locationToIndex&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;locationToIndex&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="7f0693883832f192dec5070d9d6b2733a816a412" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;modelToView&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;modelToView&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="21dd02b4ccccd126dc08d49aad7ffe59dc366f00" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;namingExceptionThrown()&lt;/code&gt; method on a listener using this event.</source>
          <target state="translated">このイベントを使用して、リスナーで &lt;code&gt;namingExceptionThrown()&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="d90208e3488a9b53f2ba9bf2c6ffbe196bf6e50f" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;notificationReceived()&lt;/code&gt; method on a listener using this event.</source>
          <target state="translated">このイベントを使用して、リスナーの &lt;code&gt;notificationReceived()&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="500353d9af81797e3c6dff2724e0cad162d384e6" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;paint&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;paint&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="e4664293e5799fba8516052a1973c7ffaec6fa3a" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;rescanCurrentDirectory&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;rescanCurrentDirectory&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="05787b8866a832720d38d8ae9c473e3522fec29d" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;resetToPreferredSizes&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;resetToPreferredSizes&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="c899eb5076de5bb1cdc3eafef53a4e67e07b69be" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;selectInitialValue&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;selectInitialValue&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="559f0df8dfc3116febfb12d9a1403cf388182d8a" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;setDividerLocation&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;setDividerLocation&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="404bf980d97f4fdf6aa014993a2a9bc77c53042c" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;setPopupVisible&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;setPopupVisible&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="1f45c540a4aa0aa3ca0d0633f95bc7a5b670d5d6" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;startEditingAtPath&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;startEditingAtPath&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="2ff3802d506bd2c64ab51b5990e117b4e1422e36" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;stopEditing&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;stopEditing&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="885763f6ac74dd170c6454b97dc0515a53b6572c" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;tabForCoordinate&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;tabForCoordinate&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="63a1cfa2856c9f46f71763b6ea015fac8599cb84" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;uninstallUI&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;uninstallUI&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="89e9443022e603a39ebd19d4b33325f11fc1dbf3" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;update&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;update&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="3e7dc2682a4d71016e083e37f3ad1351573fb6f0" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;viewToModel&lt;/code&gt; method on each UI handled by this object.</source>
          <target state="translated">Invokes the &lt;code&gt;viewToModel&lt;/code&gt; method on each UI handled by this object.</target>
        </trans-unit>
        <trans-unit id="e15c01a56a603b7cad76b4cb66171dc8ad27cfd3" translate="yes" xml:space="preserve">
          <source>Invokes the appropriate listener method on this event.</source>
          <target state="translated">このイベントで適切なリスナー・メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="48899f635f04672d34a9880d3ed183584017d7d0" translate="yes" xml:space="preserve">
          <source>Invokes the appropriate listener method on this event. The default implementation of this method handles the following event types: &lt;code&gt;OBJECT_ADDED, OBJECT_REMOVED,
 OBJECT_RENAMED, OBJECT_CHANGED&lt;/code&gt;.</source>
          <target state="translated">Invokes the appropriate listener method on this event. The default implementation of this method handles the following event types: &lt;code&gt;OBJECT_ADDED, OBJECT_REMOVED, OBJECT_RENAMED, OBJECT_CHANGED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b7bc2e58940e57ca968f35f863f5b14b93f5b92" translate="yes" xml:space="preserve">
          <source>Invokes the appropriate listener method on this event. The default implementation of this method handles the following event types: &lt;code&gt;OBJECT_ADDED&lt;/code&gt;, &lt;code&gt;OBJECT_REMOVED&lt;/code&gt;, &lt;code&gt;OBJECT_RENAMED&lt;/code&gt;, &lt;code&gt;OBJECT_CHANGED&lt;/code&gt;.</source>
          <target state="translated">このイベントで適切なリスナーメソッドを呼び出します。このメソッドのデフォルト実装は、次のイベントタイプを処理します： &lt;code&gt;OBJECT_ADDED&lt;/code&gt; 、 &lt;code&gt;OBJECT_REMOVED&lt;/code&gt; 、 &lt;code&gt;OBJECT_RENAMED&lt;/code&gt; 、 &lt;code&gt;OBJECT_CHANGED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="489e0921dcf8b3447814a659f7d80a2cf64f0bed" translate="yes" xml:space="preserve">
          <source>Invokes the error handler with the 1st, 2nd and 3rd error message argument &quot;?&quot;.</source>
          <target state="translated">第1、第2、第3のエラーメッセージ引数&quot;? &quot;を持つエラーハンドラを呼び出します。</target>
        </trans-unit>
        <trans-unit id="425f877e9591fda3f76e4bfc9a7926bafe9af2f9" translate="yes" xml:space="preserve">
          <source>Invokes the error handler with the 2nd and 3rd error message argument &quot;?&quot;.</source>
          <target state="translated">第2、第3のエラーメッセージ引数&quot;? &quot;でエラーハンドラを起動します。</target>
        </trans-unit>
        <trans-unit id="01c6d207513c9e7a5aba1acfbd3a37341e850e79" translate="yes" xml:space="preserve">
          <source>Invokes the error handler with the 3rd error message argument &quot;?&quot;.</source>
          <target state="translated">第3引数のエラーメッセージ&quot;? &quot;でエラーハンドラを起動します。</target>
        </trans-unit>
        <trans-unit id="842f7cc83286f89f0d154518ff03b5833d8fb02e" translate="yes" xml:space="preserve">
          <source>Invokes the error handler.</source>
          <target state="translated">エラーハンドラを呼び出します。</target>
        </trans-unit>
        <trans-unit id="6bda3d8a3faab4623c4dcc522b0a79a77e9aa52c" translate="yes" xml:space="preserve">
          <source>Invokes the method handle, allowing any caller type descriptor, and optionally performing conversions on arguments and return values.</source>
          <target state="translated">メソッドハンドルを呼び出し、任意の呼び出し元の型記述子を許可し、オプションで引数と戻り値の変換を実行します。</target>
        </trans-unit>
        <trans-unit id="711114ca809db363645dc977db537b6792dae633" translate="yes" xml:space="preserve">
          <source>Invokes the method handle, allowing any caller type descriptor, but requiring an exact type match.</source>
          <target state="translated">メソッド・ハンドルを呼び出し、任意の呼び出し元の型記述子を使用できますが、型が完全に一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="ff46d961f455a4b713493378b5d8182716189c60" translate="yes" xml:space="preserve">
          <source>Invokes the method handle, allowing any caller type descriptor, but requiring an exact type match. The symbolic type descriptor at the call site of &lt;code&gt;invokeExact&lt;/code&gt; must exactly match this method handle's &lt;a href=&quot;#type()&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;. No conversions are allowed on arguments or return values.</source>
          <target state="translated">メソッドハンドルを呼び出し、任意の呼び出し元タイプ記述子を許可しますが、完全なタイプ一致が必要です。 &lt;code&gt;invokeExact&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このメソッドハンドルの&lt;a href=&quot;#type()&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;正確に一致する必要があります。引数または戻り値の変換は許可されていません。</target>
        </trans-unit>
        <trans-unit id="1e7d5ebd67af477ebb8458ec0f4f3e9b094e210d" translate="yes" xml:space="preserve">
          <source>Invokes the method handle, allowing any caller type descriptor, but requiring an exact type match. The symbolic type descriptor at the call site of &lt;code&gt;invokeExact&lt;/code&gt; must exactly match this method handle's &lt;a href=&quot;methodhandle#type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;. No conversions are allowed on arguments or return values.</source>
          <target state="translated">メソッドハンドルを呼び出し、任意の呼び出し元の型記述子を許可しますが、正確な型の一致を必要とします。 &lt;code&gt;invokeExact&lt;/code&gt; の呼び出しサイトにあるシンボリック型記述子は、このメソッドハンドルの&lt;a href=&quot;methodhandle#type&quot;&gt; &lt;code&gt;type&lt;/code&gt; と&lt;/a&gt;正確に一致する必要があります。引数または戻り値の変換は許可されていません。</target>
        </trans-unit>
        <trans-unit id="3ff538d816745eea6f536fc913c9cb9285178c87" translate="yes" xml:space="preserve">
          <source>Invokes the underlying method represented by this &lt;code&gt;Method&lt;/code&gt; object, on the specified object with the specified parameters.</source>
          <target state="translated">指定されたパラメーターを使用して、指定されたオブジェクトで、この &lt;code&gt;Method&lt;/code&gt; オブジェクトによって表される基になるメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="4d7b23e0603426cc3b724cc8686412fb89b633d3" translate="yes" xml:space="preserve">
          <source>Invokes the underlying method represented by this &lt;code&gt;Method&lt;/code&gt; object, on the specified object with the specified parameters. Individual parameters are automatically unwrapped to match primitive formal parameters, and both primitive and reference parameters are subject to method invocation conversions as necessary.</source>
          <target state="translated">指定されたパラメーターを使用して、指定されたオブジェクトで、この &lt;code&gt;Method&lt;/code&gt; オブジェクトによって表される基になるメソッドを呼び出します。個々のパラメーターは、プリミティブ仮パラメーターに一致するように自動的にアンラップされ、プリミティブパラメーターと参照パラメーターの両方が、必要に応じてメソッド呼び出し変換の対象になります。</target>
        </trans-unit>
        <trans-unit id="faa99120206634484776f386f0fcacdea06f734f" translate="yes" xml:space="preserve">
          <source>Invokes when &lt;code&gt;ListSelectionEvent&lt;/code&gt; occurs.</source>
          <target state="translated">&lt;code&gt;ListSelectionEvent&lt;/code&gt; が発生すると呼び出します。</target>
        </trans-unit>
        <trans-unit id="d73e1ea2d26314dbc3a069b6269b90c27eb04a0c" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;close()&lt;/code&gt; on the objects returned by the &lt;a href=&quot;#reader()&quot;&gt;&lt;code&gt;reader()&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;#writer()&quot;&gt;&lt;code&gt;writer()&lt;/code&gt;&lt;/a&gt; will not close the underlying stream of those objects.</source>
          <target state="translated">&lt;a href=&quot;#reader()&quot;&gt; &lt;code&gt;reader()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#writer()&quot;&gt; &lt;code&gt;writer()&lt;/code&gt; &lt;/a&gt;によって返されたオブジェクトに対して &lt;code&gt;close()&lt;/code&gt; を呼び出しても、それらのオブジェクトの基になるストリームは閉じられません。</target>
        </trans-unit>
        <trans-unit id="4c34e41fc0be83115bb57bddc63e38155525f942" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;close()&lt;/code&gt; on the objects returned by the &lt;a href=&quot;console#reader--&quot;&gt;&lt;code&gt;reader()&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;console#writer--&quot;&gt;&lt;code&gt;writer()&lt;/code&gt;&lt;/a&gt; will not close the underlying stream of those objects.</source>
          <target state="translated">&lt;a href=&quot;console#reader--&quot;&gt; &lt;code&gt;reader()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;console#writer--&quot;&gt; &lt;code&gt;writer()&lt;/code&gt; &lt;/a&gt;によって返されたオブジェクトで &lt;code&gt;close()&lt;/code&gt; を呼び出しても、それらのオブジェクトの基になるストリームは閉じられません。</target>
        </trans-unit>
        <trans-unit id="2e5a753650b36e9303f13753477aa94c723a9e7d" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;insertAfterEnd(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; results in the following structure (new elements are in blue).</source>
          <target state="translated">&lt;code&gt;insertAfterEnd(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; を呼び出すと、次の構造になります（新しい要素は青色で表示されます）。</target>
        </trans-unit>
        <trans-unit id="e40cfa38bd1a98a389d0888a2b7988c5b2a765d8" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;insertAfterStart(elem,
 &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; results in the following structure (new elements are in blue).</source>
          <target state="translated">&lt;code&gt;insertAfterStart(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; を呼び出すと、次の構造になります（新しい要素は青色で表示されます）。</target>
        </trans-unit>
        <trans-unit id="59cd0870a28d296831604b2cbce0d2a186be23c6" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;insertBeforeEnd(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; results in the following structure (new elements are in blue).</source>
          <target state="translated">&lt;code&gt;insertBeforeEnd(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; を呼び出すと、次の構造になります（新しい要素は青色で表示されます）。</target>
        </trans-unit>
        <trans-unit id="1e4ab18fdb9e60e80aa1fbf305f39f073ae7e73c" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;insertBeforeStart(elem,
 &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; results in the following structure (new elements are in blue).</source>
          <target state="translated">&lt;code&gt;insertBeforeStart(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; を呼び出すと、次の構造になります（新しい要素は青色で表示されます）。</target>
        </trans-unit>
        <trans-unit id="f039a013fc5175b734608b3f78a070bc72e4c105" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;redo&lt;/code&gt; results in invoking &lt;code&gt;redo&lt;/code&gt; on all edits between the index of the next edit and the next significant edit (or the end of the list). Continuing with the previous example if &lt;code&gt;redo&lt;/code&gt; were invoked, &lt;code&gt;redo&lt;/code&gt; would in turn be invoked on &lt;b&gt;A&lt;/b&gt;,</source>
          <target state="translated">呼び出し &lt;code&gt;redo&lt;/code&gt; 呼び出すことで結果を &lt;code&gt;redo&lt;/code&gt; 次の編集結果のインデックスと、次の重大な編集（またはリストの末尾）との間にすべての編集上。前の例を続けると、 &lt;code&gt;redo&lt;/code&gt; が呼び出された場合、 &lt;code&gt;redo&lt;/code&gt; は&lt;b&gt;A&lt;/b&gt;で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8de67dd468e9dc7d5c59ac2e912a9e6ed39dcd62" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;setInnerHTML(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; results in the following structure (new elements are in blue).</source>
          <target state="translated">&lt;code&gt;setInnerHTML(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; を呼び出すと、次の構造になります（新しい要素は青色で表示されます）。</target>
        </trans-unit>
        <trans-unit id="ea34f5ec3e381c2fd32835186a9bf54602447dba" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;setOuterHTML(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; results in the following structure (new elements are in blue).</source>
          <target state="translated">&lt;code&gt;setOuterHTML(elem, &quot;&amp;lt;ul&amp;gt;&amp;lt;li&amp;gt;&quot;)&lt;/code&gt; を呼び出すと、次の構造になります（新しい要素は青色で表示されます）。</target>
        </trans-unit>
        <trans-unit id="21a3b7095e4ca3274426ac27feeecfd9e0f9f9af" translate="yes" xml:space="preserve">
          <source>Invoking Object's clone method on an instance that does not implement the &lt;code&gt;Cloneable&lt;/code&gt; interface results in the exception &lt;code&gt;CloneNotSupportedException&lt;/code&gt; being thrown.</source>
          <target state="translated">&lt;code&gt;Cloneable&lt;/code&gt; インターフェースを実装していないインスタンスでObjectのcloneメソッドを呼び出すと、例外 &lt;code&gt;CloneNotSupportedException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="c603283845f81ebac0a119f22c2cb908d052b7e1" translate="yes" xml:space="preserve">
          <source>Invoking any of the various &lt;code&gt;get&lt;/code&gt; methods results in checking each of the defaults, in order, returning the first &lt;code&gt;non-null&lt;/code&gt; value. For example, invoking &lt;code&gt;UIManager.getString(&quot;Table.foreground&quot;)&lt;/code&gt; results in first checking developer defaults. If the developer defaults contain a value for &lt;code&gt;&quot;Table.foreground&quot;&lt;/code&gt; it is returned, otherwise the look and feel defaults are checked, followed by the system defaults.</source>
          <target state="translated">さまざまな &lt;code&gt;get&lt;/code&gt; メソッドのいずれかを呼び出すと、デフォルトのそれぞれが順番にチェックされ、最初 &lt;code&gt;non-null&lt;/code&gt; 値が返されます。たとえば、 &lt;code&gt;UIManager.getString(&quot;Table.foreground&quot;)&lt;/code&gt; を呼び出すと、最初に開発者のデフォルトがチェックされます。開発者のデフォルトに &lt;code&gt;&quot;Table.foreground&quot;&lt;/code&gt; 値が含まれている場合は返されます。含まれていない場合は、ルックアンドフィールのデフォルトがチェックされ、その後にシステムのデフォルトがチェックされます。</target>
        </trans-unit>
        <trans-unit id="4cbbb8318235aaada24f3c863ea5064f26658e29" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will set the scanner's delimiter to the &lt;a href=&quot;#default-delimiter&quot;&gt;default&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、スキャナーの区切り文字が&lt;a href=&quot;#default-delimiter&quot;&gt;デフォルトに設定されます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a3e72ef007c6c2373a01470f820b90877f392879" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will set the scanner's locale to the &lt;a href=&quot;#initial-locale&quot;&gt;initial locale&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、スキャナーのロケールが&lt;a href=&quot;#initial-locale&quot;&gt;初期ロケールに&lt;/a&gt;設定されます。</target>
        </trans-unit>
        <trans-unit id="847e98b7fe0b19b2c2818be73430c806bfde642e" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will set the scanner's radix to &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、スキャナーの基数が &lt;code&gt;10&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="176148e615ac10b5af921b52fb68bd925c6f039e" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;a href=&quot;scanner#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will set the scanner's delimiter to the &lt;a href=&quot;#default-delimiter&quot;&gt;default&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;scanner#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、スキャナーの区切り文字が&lt;a href=&quot;#default-delimiter&quot;&gt;デフォルトに設定されます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e83ee19898c75b9b39ed667f972adef8d2826b10" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;a href=&quot;scanner#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will set the scanner's locale to the &lt;a href=&quot;#initial-locale&quot;&gt;initial locale&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;scanner#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、スキャナーのロケールが&lt;a href=&quot;#initial-locale&quot;&gt;初期ロケールに&lt;/a&gt;設定されます。</target>
        </trans-unit>
        <trans-unit id="f353057eb5ea44e28d0e42cdcfc1e96de34e9d1c" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;a href=&quot;scanner#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will set the scanner's radix to &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;scanner#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、スキャナーの基数が &lt;code&gt;10&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="bf442f0811d9a0a5698e1044660e07476439f46a" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;code&gt;close()&lt;/code&gt; methods on the &lt;code&gt;InputStream&lt;/code&gt; or &lt;code&gt;OutputStream&lt;/code&gt; of an &lt;code&gt;URLConnection&lt;/code&gt; after a request may free network resources associated with this instance, unless particular protocol specifications specify different behaviours for it.</source>
          <target state="translated">リクエスト後に &lt;code&gt;URLConnection&lt;/code&gt; の &lt;code&gt;InputStream&lt;/code&gt; または &lt;code&gt;OutputStream&lt;/code&gt; で &lt;code&gt;close()&lt;/code&gt; メソッドを呼び出すと、特定のプロトコル仕様で異なる動作が指定されていない限り、このインスタンスに関連付けられているネットワークリソースが解放される場合があります。</target>
        </trans-unit>
        <trans-unit id="b292ef41a0388e5665d6b910ef98e41e653e6a58" translate="yes" xml:space="preserve">
          <source>Invoking the method &lt;a href=&quot;../../../../java.base/java/lang/throwable#initCause(java.lang.Throwable)&quot;&gt;&lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt;&lt;/a&gt; on an instance of &lt;code&gt;ActivationException&lt;/code&gt; always throws &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ActivationException&lt;/code&gt; のインスタンスでメソッド&lt;a href=&quot;../../../../java.base/java/lang/throwable#initCause(java.lang.Throwable)&quot;&gt; &lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt; &lt;/a&gt;を呼び出すと、常に&lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="39fe84f568f58ddd62c74cb413a8740b8e3465ee" translate="yes" xml:space="preserve">
          <source>Invoking the method &lt;a href=&quot;../../../../java.base/java/lang/throwable#initCause(java.lang.Throwable)&quot;&gt;&lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt;&lt;/a&gt; on an instance of &lt;code&gt;ServerCloneException&lt;/code&gt; always throws &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ServerCloneException&lt;/code&gt; のインスタンスでメソッド&lt;a href=&quot;../../../../java.base/java/lang/throwable#initCause(java.lang.Throwable)&quot;&gt; &lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt; &lt;/a&gt;を呼び出すと、常に&lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="f55ab059e4878ff42c8411b78a978e51e02f6fa0" translate="yes" xml:space="preserve">
          <source>Invoking the method &lt;a href=&quot;../../../java.base/java/lang/throwable#initCause(java.lang.Throwable)&quot;&gt;&lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt;&lt;/a&gt; on an instance of &lt;code&gt;RemoteException&lt;/code&gt; always throws &lt;a href=&quot;../../../java.base/java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;RemoteException&lt;/code&gt; のインスタンスでメソッド&lt;a href=&quot;../../../java.base/java/lang/throwable#initCause(java.lang.Throwable)&quot;&gt; &lt;code&gt;Throwable.initCause(Throwable)&lt;/code&gt; &lt;/a&gt;を呼び出すと、常に&lt;a href=&quot;../../../java.base/java/lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="6655fdeff84b9f5970cb0e8cf1a61885f9c334f6" translate="yes" xml:space="preserve">
          <source>Invoking this constructor with the parameter &lt;code&gt;name&lt;/code&gt; is equivalent to invoking &lt;a href=&quot;#%3Cinit%3E(java.lang.String,boolean)&quot;&gt;&lt;code&gt;new FileOutputStream(name, false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このコンストラクターをパラメーター &lt;code&gt;name&lt;/code&gt; で呼び出すことは、&lt;a href=&quot;#%3Cinit%3E(java.lang.String,boolean)&quot;&gt; &lt;code&gt;new FileOutputStream(name, false)&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="67f7c790b25cb74ef14fc0612ab2e52342dd4b91" translate="yes" xml:space="preserve">
          <source>Invoking this method after this socket has been bound will have no effect. This implies that in order to use this capability requires the socket to be created with the no-argument constructor.</source>
          <target state="translated">このソケットがバインドされた後にこのメソッドを呼び出しても何の効果もありません。このことは、このケイパビリティを利用するためには、引数なしのコンストラクタでソケットを作成する必要があることを意味しています。</target>
        </trans-unit>
        <trans-unit id="70f89a3656d80a45039acbd892abc38739960738" translate="yes" xml:space="preserve">
          <source>Invoking this method after this socket has been connected will have no effect.</source>
          <target state="translated">このソケットが接続された後にこのメソッドを呼び出しても何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="a37aab96f9be084753a54c67c1416610219afbc9" translate="yes" xml:space="preserve">
          <source>Invoking this method arranges for the selector's &lt;a href=&quot;../selector#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method to be invoked if a thread's &lt;a href=&quot;../../../lang/thread#interrupt()&quot;&gt;&lt;code&gt;interrupt&lt;/code&gt;&lt;/a&gt; method is invoked while the thread is blocked in an I/O operation upon the selector.</source>
          <target state="translated">このメソッドを呼び出すと、セレクターのI / O操作でスレッドがブロックされているときにスレッドの&lt;a href=&quot;../../../lang/thread#interrupt()&quot;&gt; &lt;code&gt;interrupt&lt;/code&gt; &lt;/a&gt;メソッドが呼び出された場合に、セレクターの&lt;a href=&quot;../selector#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されるようになります。</target>
        </trans-unit>
        <trans-unit id="96e940ed10297b6989c1d5dbbd7a396d43879747" translate="yes" xml:space="preserve">
          <source>Invoking this method arranges for the selector's &lt;a href=&quot;../selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method to be invoked if a thread's &lt;a href=&quot;../../../lang/thread#interrupt--&quot;&gt;&lt;code&gt;interrupt&lt;/code&gt;&lt;/a&gt; method is invoked while the thread is blocked in an I/O operation upon the selector.</source>
          <target state="translated">このメソッドを呼び出すと、セレクターのI / O操作でスレッドがブロックされているときにスレッドの&lt;a href=&quot;../../../lang/thread#interrupt--&quot;&gt; &lt;code&gt;interrupt&lt;/code&gt; &lt;/a&gt;メソッドが呼び出された場合に、セレクターの&lt;a href=&quot;../selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="60ef943bfdba594f6124f0a8c2b3e46af272e840" translate="yes" xml:space="preserve">
          <source>Invoking this method changes this matcher's state. If the matcher is to be used in further matching operations then it should first be reset.</source>
          <target state="translated">このメソッドを実行すると、このマッチャの状態が変更されます。このマッチャをそれ以降のマッチング処理で使用する場合は、まずリセットしなければなりません。</target>
        </trans-unit>
        <trans-unit id="5df9370c2b8faa0c6dd10831d538a4c0285db00b" translate="yes" xml:space="preserve">
          <source>Invoking this method clears the effect of any previous invocations of the &lt;a href=&quot;#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドを呼び出すと、以前に&lt;a href=&quot;#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt;メソッドを呼び出した場合の影響が解消されます。</target>
        </trans-unit>
        <trans-unit id="9e4fdb942c3da8583fefd7967b13d3dfeb5172da" translate="yes" xml:space="preserve">
          <source>Invoking this method clears the effect of any previous invocations of the &lt;a href=&quot;selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドを呼び出すと、以前の&lt;a href=&quot;selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しの影響がクリアされます。</target>
        </trans-unit>
        <trans-unit id="e126408892a2990e7ca8597c02d37d62ecd31cd7" translate="yes" xml:space="preserve">
          <source>Invoking this method may cause an I/O operation to occur even if the channel was only opened for reading. Some operating systems, for example, maintain a last-access time as part of a file's metadata, and this time is updated whenever the file is read. Whether or not this is actually done is system-dependent and is therefore unspecified.</source>
          <target state="translated">このメソッドを呼び出すと、読み込みのためだけにチャネルが開かれていたとしても、I/O操作が発生することがあります。例えば、いくつかのオペレーティングシステムでは、ファイルのメタデータの一部として最終アクセス時刻を保持しており、ファイルが読み込まれるたびにこの時刻が更新されます。これが実際に行われているかどうかはシステムに依存しているため、未定義です。</target>
        </trans-unit>
        <trans-unit id="c889f16f03607a3e9b3dc67012a12c2bc7299590" translate="yes" xml:space="preserve">
          <source>Invoking this method may change this entry's last modification time, last access time and creation time, if the &lt;code&gt;extra&lt;/code&gt; field data includes the extensible timestamp fields, such as &lt;code&gt;NTFS tag
 0x0001&lt;/code&gt; or &lt;code&gt;Info-ZIP Extended Timestamp&lt;/code&gt;, as specified in &lt;a href=&quot;http://www.info-zip.org/doc/appnote-19970311-iz.zip&quot;&gt;Info-ZIP Application Note 970311&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.info-zip.org/doc/appnote-19970311-iz.zip&quot;&gt;Info-ZIP Application Note 970311で&lt;/a&gt;指定されているように、 &lt;code&gt;extra&lt;/code&gt; フィールドデータに &lt;code&gt;NTFS tag 0x0001&lt;/code&gt; や &lt;code&gt;Info-ZIP Extended Timestamp&lt;/code&gt; などの拡張可能なタイムスタンプフィールドが含まれている場合、このメソッドを呼び出すと、このエントリの最終変更時刻、最終アクセス時刻、作成時刻が変更されることがあります。。</target>
        </trans-unit>
        <trans-unit id="79484cf70e299ec1b53ddd211e9a4f5ae75edb97" translate="yes" xml:space="preserve">
          <source>Invoking this method more than once between two successive selection operations has the same effect as invoking it just once.</source>
          <target state="translated">2 つの連続した選択操作の間にこのメソッドを複数回呼び出すと、1 回だけ呼び出すのと同じ効果が得られます。</target>
        </trans-unit>
        <trans-unit id="3c1484a536bd30ef88c950eccc5a6e3769638937" translate="yes" xml:space="preserve">
          <source>Invoking this method neither changes nor discards the mark's value.</source>
          <target state="translated">このメソッドを呼び出すと、マークの値が変更されたり破棄されたりすることはありません。</target>
        </trans-unit>
        <trans-unit id="4bb533ace18a097bcb2344aaca8af29dc2afd2cf" translate="yes" xml:space="preserve">
          <source>Invoking this method on &lt;code&gt;Process&lt;/code&gt; objects returned by &lt;a href=&quot;processbuilder#start()&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec(java.lang.String)&quot;&gt;&lt;code&gt;Runtime.exec(java.lang.String)&lt;/code&gt;&lt;/a&gt; forcibly terminate the process.</source>
          <target state="translated">&lt;a href=&quot;processbuilder#start()&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;runtime#exec(java.lang.String)&quot;&gt; &lt;code&gt;Runtime.exec(java.lang.String)&lt;/code&gt; &lt;/a&gt;によって返される &lt;code&gt;Process&lt;/code&gt; オブジェクトでこのメソッドを呼び出すと、プロセスが強制的に終了します。</target>
        </trans-unit>
        <trans-unit id="330559a2b3dc271bc1f44445e53e9d420b441e4c" translate="yes" xml:space="preserve">
          <source>Invoking this method on &lt;code&gt;Process&lt;/code&gt; objects returned by &lt;a href=&quot;processbuilder#start()&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec(java.lang.String)&quot;&gt;&lt;code&gt;Runtime.exec(java.lang.String)&lt;/code&gt;&lt;/a&gt; return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; depending on the platform implementation.</source>
          <target state="translated">&lt;a href=&quot;processbuilder#start()&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;runtime#exec(java.lang.String)&quot;&gt; &lt;code&gt;Runtime.exec(java.lang.String)&lt;/code&gt; &lt;/a&gt;によって返される &lt;code&gt;Process&lt;/code&gt; オブジェクトでこのメソッドを呼び出すと、プラットフォームの実装に応じて &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="ddcf2c0e1ac0450bdc9bb0de3a23c0d438efe3a6" translate="yes" xml:space="preserve">
          <source>Invoking this method on a line that is already open is illegal and may result in an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">すでに開いている行でこのメソッドを呼び出すことは不正であり、 &lt;code&gt;IllegalStateException&lt;/code&gt; が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="623ac6a95052eca58d10e302db9e34b04b58d481" translate="yes" xml:space="preserve">
          <source>Invoking this method on a line which is already open is illegal and may result in an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">すでに開いている行でこのメソッドを呼び出すことは不正であり、 &lt;code&gt;IllegalStateException&lt;/code&gt; が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="f47421cee3aea3093bcb9f93120fae696cb90f76" translate="yes" xml:space="preserve">
          <source>Invoking this method on a line which is already open is illegal and may result in an IllegalStateException.</source>
          <target state="translated">すでにオープンされている行でこのメソッドを呼び出すことは違法であり、IllegalStateExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="6572592d9b51a49f1b7945842d9966fc11bccd7a" translate="yes" xml:space="preserve">
          <source>Invoking this method to test if the file store supports &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; will always return &lt;code&gt;true&lt;/code&gt;. In the case of the default provider, this method cannot guarantee to give the correct result when the file store is not a local storage device. The reasons for this are implementation specific and therefore unspecified.</source>
          <target state="translated">このメソッドを&lt;a href=&quot;attribute/basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;、ファイルストアがBasicFileAttributeViewをサポートしているかどうかをテストすると、常に &lt;code&gt;true&lt;/code&gt; が返されます。デフォルトのプロバイダーの場合、このメソッドは、ファイルストアがローカルストレージデバイスでない場合に正しい結果が得られることを保証できません。この理由は実装固有であり、したがって特定されていません。</target>
        </trans-unit>
        <trans-unit id="be38157464f24b4aaf95961d44066380cff33fe7" translate="yes" xml:space="preserve">
          <source>Invoking this method to test if the file store supports &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;, identified by the name &quot;&lt;code&gt;basic&lt;/code&gt;&quot; will always return &lt;code&gt;true&lt;/code&gt;. In the case of the default provider, this method cannot guarantee to give the correct result when the file store is not a local storage device. The reasons for this are implementation specific and therefore unspecified.</source>
          <target state="translated">このメソッドを&lt;a href=&quot;attribute/basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;、ファイルストアが&quot; &lt;code&gt;basic&lt;/code&gt; &quot; という名前で識別されるBasicFileAttributeViewをサポートするかどうかをテストすると、常に &lt;code&gt;true&lt;/code&gt; が返されます。デフォルトのプロバイダーの場合、このメソッドは、ファイルストアがローカルストレージデバイスでない場合に正しい結果が得られることを保証できません。この理由は実装固有であり、したがって特定されていません。</target>
        </trans-unit>
        <trans-unit id="fc5558a9d34cc56f9d2a7db2a0cdebd56a8e60d2" translate="yes" xml:space="preserve">
          <source>Invoking this method will result in the creation of the returned node and its ancestors if they do not already exist. If the returned node did not exist prior to this call, this node and any ancestors that were created by this call are not guaranteed to become permanent until the &lt;code&gt;flush&lt;/code&gt; method is called on the returned node (or one of its ancestors or descendants).</source>
          <target state="translated">このメソッドを呼び出すと、返されたノードとその祖先が存在しない場合は、それらが作成されます。返されたノードがこの呼び出しの前に存在しなかった場合、このノードとこの呼び出しによって作成された祖先は、返されたノード（またはその祖先または子孫の1つ）で &lt;code&gt;flush&lt;/code&gt; メソッドが呼び出されるまで永続的であるとは限りません。</target>
        </trans-unit>
        <trans-unit id="be608336e42c8195cf6de1491f4e3751f3501826" translate="yes" xml:space="preserve">
          <source>Invoking this method with an argument of &lt;code&gt;true&lt;/code&gt; will set this matcher to use</source>
          <target state="translated">引数を &lt;code&gt;true&lt;/code&gt; にしてこのメ​​ソッドを呼び出すと、このマッチャーが使用するように設定されます</target>
        </trans-unit>
        <trans-unit id="30e1cfdc22665446f2b3a40c52c5692d02bfa595" translate="yes" xml:space="preserve">
          <source>Is a little widget provided to quickly expand/collapse the split pane?</source>
          <target state="translated">分割ペインを素早く展開/折りたたみするための小さなウィジェットが用意されていますか?</target>
        </trans-unit>
        <trans-unit id="7672141a63f0b2919df6653cf1a0ed5b3f2d9705" translate="yes" xml:space="preserve">
          <source>Is alpha premultiplied.</source>
          <target state="translated">アルファが前乗されています。</target>
        </trans-unit>
        <trans-unit id="aa0374626f0e5de0170dcedfeac27f377b6dcb80" translate="yes" xml:space="preserve">
          <source>Is called by Swing if this &lt;code&gt;InputVerifier&lt;/code&gt; is assigned to the &lt;code&gt;source&lt;/code&gt; Swing component to check whether the requested focus transfer from the &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;target&lt;/code&gt; is allowed.</source>
          <target state="translated">この &lt;code&gt;InputVerifier&lt;/code&gt; が &lt;code&gt;source&lt;/code&gt; Swingコンポーネントに割り当てられている場合、Swingによって呼び出され、 &lt;code&gt;source&lt;/code&gt; から &lt;code&gt;target&lt;/code&gt; への要求されたフォーカス転送が許可されているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="4365b27f925cbc4348f6d4b867127142f68c982d" translate="yes" xml:space="preserve">
          <source>Is called by Swing if this &lt;code&gt;InputVerifier&lt;/code&gt; is assigned to the &lt;code&gt;source&lt;/code&gt; Swing component to check whether the requested focus transfer from the &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;target&lt;/code&gt; is allowed. This method can have side effects. If this method returns &lt;code&gt;true&lt;/code&gt;, then the focus is transferred normally; if it returns &lt;code&gt;false&lt;/code&gt;, then the focus remains in the first argument component.</source>
          <target state="translated">この &lt;code&gt;InputVerifier&lt;/code&gt; が &lt;code&gt;source&lt;/code&gt; Swingコンポーネントに割り当てられている場合、Swingによって呼び出され、 &lt;code&gt;source&lt;/code&gt; から &lt;code&gt;target&lt;/code&gt; への要求されたフォーカス転送が許可されているかどうかを確認します。この方法には副作用があります。このメソッドが &lt;code&gt;true&lt;/code&gt; を返す場合、フォーカスは正常に転送されます。 &lt;code&gt;false&lt;/code&gt; が返された場合、フォーカスは最初の引数コンポーネントに残ります。</target>
        </trans-unit>
        <trans-unit id="631fe1e8013e3a0c5222ee81f39a58336c82a4e2" translate="yes" xml:space="preserve">
          <source>Is dir the root of a tree in the file system, such as a drive or partition.</source>
          <target state="translated">dirは、ドライブやパーティションなどのファイルシステムのツリーのルートです。</target>
        </trans-unit>
        <trans-unit id="2d0d65692e6749abde8b7f717b139df80b5ae20c" translate="yes" xml:space="preserve">
          <source>Is dir the root of a tree in the file system, such as a drive or partition. Example: Returns true for &quot;C:\&quot; on Windows 98.</source>
          <target state="translated">dirは、ドライブやパーティションなどのファイルシステムのツリーのルートです。例。Windows 98では、&quot;C:｣の場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="dd1c8ed792827569a29df484239b2c4ef7baa479" translate="yes" xml:space="preserve">
          <source>Is specified object model supported by this &lt;code&gt;XPathFactory&lt;/code&gt;?</source>
          <target state="translated">指定されたオブジェクトモデルはこの &lt;code&gt;XPathFactory&lt;/code&gt; でサポートされていますか？</target>
        </trans-unit>
        <trans-unit id="e05793b7249beae9557af2b83c59d171629f365e" translate="yes" xml:space="preserve">
          <source>Is specified schema supported by this &lt;code&gt;SchemaFactory&lt;/code&gt;?</source>
          <target state="translated">指定されたスキーマはこの &lt;code&gt;SchemaFactory&lt;/code&gt; でサポートされていますか？</target>
        </trans-unit>
        <trans-unit id="dc37b97b89ca9f25874a6e072d00e6e88db68b23" translate="yes" xml:space="preserve">
          <source>Is the child specified affected by the event?</source>
          <target state="translated">指定された子はイベントの影響を受けていますか?</target>
        </trans-unit>
        <trans-unit id="c5034b3d2657656796166350eaa649adb22640e2" translate="yes" xml:space="preserve">
          <source>Is the major span currently estimated?</source>
          <target state="translated">メジャースパンは現在推定されているのでしょうか?</target>
        </trans-unit>
        <trans-unit id="761f856c08dad7900714d1962f96c6a45c7bda84" translate="yes" xml:space="preserve">
          <source>Is the passed in value null? Use the null formatter.</source>
          <target state="translated">渡された値はNULLですか?nullフォーマッタを使用します。</target>
        </trans-unit>
        <trans-unit id="1e9b159e969ae39dd9ca33774458f9a77b4d9574" translate="yes" xml:space="preserve">
          <source>Is the preferredSize valid?</source>
          <target state="translated">preferredSizeは有効ですか?</target>
        </trans-unit>
        <trans-unit id="4f59230d9babef9ebcdf815dabfaceb226f44433" translate="yes" xml:space="preserve">
          <source>Is the transition local time midnight at the end of day.</source>
          <target state="translated">日の終わりには、移行現地時間の真夜中ですかね。</target>
        </trans-unit>
        <trans-unit id="aba8416dce13f35dfbdb41a951cdb1039728b67f" translate="yes" xml:space="preserve">
          <source>Is the tree editable?</source>
          <target state="translated">ツリーは編集可能ですか?</target>
        </trans-unit>
        <trans-unit id="316dcc9e0433851aa100015a00a3bb3ce7e14922" translate="yes" xml:space="preserve">
          <source>Is the tree editable? Default is false.</source>
          <target state="translated">ツリーは編集可能ですか?デフォルトはfalseです。</target>
        </trans-unit>
        <trans-unit id="f484d42ed319be5b53a39a49dcae350bed50d282" translate="yes" xml:space="preserve">
          <source>Is the value currently selected.</source>
          <target state="translated">現在選択されている値です。</target>
        </trans-unit>
        <trans-unit id="2d35e0411e51320986a48034bca4ec2f1ab2b8fa" translate="yes" xml:space="preserve">
          <source>Is the value range fixed and fully known.</source>
          <target state="translated">値の範囲が固定されており、完全に把握されているか。</target>
        </trans-unit>
        <trans-unit id="873b7cb93ab87b1ee9b6f65bd1179164fe7c11f8" translate="yes" xml:space="preserve">
          <source>Is this &lt;code&gt;BeanContext&lt;/code&gt; in the process of being serialized?</source>
          <target state="translated">この &lt;code&gt;BeanContext&lt;/code&gt; はシリアル化の途中ですか？</target>
        </trans-unit>
        <trans-unit id="7d949cd549677684aaa3a7697c9a29eb6f50ab00" translate="yes" xml:space="preserve">
          <source>Is this element a leaf element?</source>
          <target state="translated">この要素はリーフ要素ですか?</target>
        </trans-unit>
        <trans-unit id="2825aaaaabc1af45c758b59e660ef00f4d4e9fc4" translate="yes" xml:space="preserve">
          <source>Is this element a leaf element? An element that</source>
          <target state="translated">この要素はリーフ要素ですか?この要素は</target>
        </trans-unit>
        <trans-unit id="70a199478ac38fb67f815107c81eb08f4b72961d" translate="yes" xml:space="preserve">
          <source>Is this tree a large model?</source>
          <target state="translated">この木は大型モデル?</target>
        </trans-unit>
        <trans-unit id="da431e75fda1c31f01942588b502f8dddd1cfbfe" translate="yes" xml:space="preserve">
          <source>Is this tree a large model? This is a code-optimization setting. A large model can be used when the cell height is the same for all nodes. The UI will then cache very little information and instead continually message the model. Without a large model the UI caches most of the information, resulting in fewer method calls to the model.</source>
          <target state="translated">このツリーは大型モデル?これはコード最適化の設定です。大きなモデルは、セルの高さがすべてのノードで同じである場合に使用することができます。この場合、UI は情報をほとんどキャッシュせず、代わりにモデルを継続的にメッセージします。ラージ・モデルがなければ、UI はほとんどの情報をキャッシュし、その結果、モデルへのメソッド呼び出しが少なくなります。</target>
        </trans-unit>
        <trans-unit id="73d05a3f546ea8916b7bb064e66f8288ae9aea16" translate="yes" xml:space="preserve">
          <source>Is updatable.</source>
          <target state="translated">更新可能です。</target>
        </trans-unit>
        <trans-unit id="3e7d45a35a555de3e17a970523afd416c86f862c" translate="yes" xml:space="preserve">
          <source>IsReadable and IsWritable defaulted to true.</source>
          <target state="translated">IsReadableとIsWritableはデフォルトでtrueになっています。</target>
        </trans-unit>
        <trans-unit id="d7c894e314bf9756f61f22da2150e10311523727" translate="yes" xml:space="preserve">
          <source>IsindexAction</source>
          <target state="translated">IsindexAction</target>
        </trans-unit>
        <trans-unit id="32a3cedb4aa7123fdda374af7c96e70aa4fb1aba" translate="yes" xml:space="preserve">
          <source>Islamic - Umm Al-Qura calendar of Saudi Arabia</source>
          <target state="translated">イスラム教-サウジアラビアのウンム・アル・クーラ暦</target>
        </trans-unit>
        <trans-unit id="01ab7b8826be15f46cc01c8def866d25e3ff6ac7" translate="yes" xml:space="preserve">
          <source>IsndexAction</source>
          <target state="translated">IsndexAction</target>
        </trans-unit>
        <trans-unit id="7d98d4489a8ecf4e37b8f0789627030b865ee316" translate="yes" xml:space="preserve">
          <source>IsoChronology</source>
          <target state="translated">IsoChronology</target>
        </trans-unit>
        <trans-unit id="efc5f55e16e431b499e44441be9c7388d9cba6e8" translate="yes" xml:space="preserve">
          <source>IsoChronology.date()</source>
          <target state="translated">IsoChronology.date()</target>
        </trans-unit>
        <trans-unit id="3dcf5c0dc8de26f9203a9e0be0bef38c483baf35" translate="yes" xml:space="preserve">
          <source>IsoChronology.dateEpochDay()</source>
          <target state="translated">IsoChronology.dateEpochDay()</target>
        </trans-unit>
        <trans-unit id="d91c6cc18e64b9f14d0bf769a12896626044744c" translate="yes" xml:space="preserve">
          <source>IsoChronology.dateNow()</source>
          <target state="translated">IsoChronology.dateNow()</target>
        </trans-unit>
        <trans-unit id="d59cc39597f685c419438ec83e825af6e15a13cc" translate="yes" xml:space="preserve">
          <source>IsoChronology.dateYearDay()</source>
          <target state="translated">IsoChronology.dateYearDay()</target>
        </trans-unit>
        <trans-unit id="464cfbee3edadecf4bf82c5f57215f3ad23b8710" translate="yes" xml:space="preserve">
          <source>IsoChronology.eraOf()</source>
          <target state="translated">IsoChronology.eraOf()</target>
        </trans-unit>
        <trans-unit id="7ac495e9c39ee63983f82ef1f41e2e11269204ed" translate="yes" xml:space="preserve">
          <source>IsoChronology.eras()</source>
          <target state="translated">IsoChronology.eras()</target>
        </trans-unit>
        <trans-unit id="ea6b15547041b902f84790e91f26100562dbd930" translate="yes" xml:space="preserve">
          <source>IsoChronology.getCalendarType()</source>
          <target state="translated">IsoChronology.getCalendarType()</target>
        </trans-unit>
        <trans-unit id="dc23e8ea0aac4ba17df9fcff3a8b2b0875c50434" translate="yes" xml:space="preserve">
          <source>IsoChronology.getId()</source>
          <target state="translated">IsoChronology.getId()</target>
        </trans-unit>
        <trans-unit id="a817e1294ea4a98d08f20bc7582caf43ec5d877e" translate="yes" xml:space="preserve">
          <source>IsoChronology.isLeapYear()</source>
          <target state="translated">IsoChronology.isLeapYear()</target>
        </trans-unit>
        <trans-unit id="cc1900e82b3f0cd74455bb92120eed4ee2bf611a" translate="yes" xml:space="preserve">
          <source>IsoChronology.localDateTime()</source>
          <target state="translated">IsoChronology.localDateTime()</target>
        </trans-unit>
        <trans-unit id="44a518f0d32111a25135a7e11983928a631ec2cc" translate="yes" xml:space="preserve">
          <source>IsoChronology.period()</source>
          <target state="translated">IsoChronology.period()</target>
        </trans-unit>
        <trans-unit id="7f4171e326367bf046c0f35177cf6498fd843b5e" translate="yes" xml:space="preserve">
          <source>IsoChronology.prolepticYear()</source>
          <target state="translated">IsoChronology.prolepticYear()</target>
        </trans-unit>
        <trans-unit id="0eeb7db10f998c6712b35c06f9eca81c9b009c2d" translate="yes" xml:space="preserve">
          <source>IsoChronology.range()</source>
          <target state="translated">IsoChronology.range()</target>
        </trans-unit>
        <trans-unit id="dfe0b54ae575ef892b5738496628efedd1c19e35" translate="yes" xml:space="preserve">
          <source>IsoChronology.resolveDate()</source>
          <target state="translated">IsoChronology.resolveDate()</target>
        </trans-unit>
        <trans-unit id="7dce8935b5d991a45dd8250ae5564b6b5bdd7aac" translate="yes" xml:space="preserve">
          <source>IsoChronology.zonedDateTime()</source>
          <target state="translated">IsoChronology.zonedDateTime()</target>
        </trans-unit>
        <trans-unit id="b8ec2a07f715fab2551a59ca01a93e3b674615d9" translate="yes" xml:space="preserve">
          <source>IsoEra</source>
          <target state="translated">IsoEra</target>
        </trans-unit>
        <trans-unit id="c2ae3c367489fd80b41667fb602b8beec084a9e5" translate="yes" xml:space="preserve">
          <source>IsoEra.getValue()</source>
          <target state="translated">IsoEra.getValue()</target>
        </trans-unit>
        <trans-unit id="62dab16079c50e48179115ee121c702474c411a9" translate="yes" xml:space="preserve">
          <source>IsoEra.of()</source>
          <target state="translated">IsoEra.of()</target>
        </trans-unit>
        <trans-unit id="ffc53fd33f81caa60304b2bca94e855cdeb9be42" translate="yes" xml:space="preserve">
          <source>IsoEra.valueOf()</source>
          <target state="translated">IsoEra.valueOf()</target>
        </trans-unit>
        <trans-unit id="435afa2bb0331b5a8560749f4d1c886676a339f4" translate="yes" xml:space="preserve">
          <source>IsoEra.values()</source>
          <target state="translated">IsoEra.values()</target>
        </trans-unit>
        <trans-unit id="4e93e3506d4de8818924947e404f0052ef01ea87" translate="yes" xml:space="preserve">
          <source>IsoFields</source>
          <target state="translated">IsoFields</target>
        </trans-unit>
        <trans-unit id="60bb74d0d5c3ee288e84be5617954f943b66c9d7" translate="yes" xml:space="preserve">
          <source>IssuerAlternativeName</source>
          <target state="translated">IssuerAlternativeName</target>
        </trans-unit>
        <trans-unit id="247bbe1585eeb3a68517b3c606aa8ccc27b5f001" translate="yes" xml:space="preserve">
          <source>Issues such as structure and contents of the schema tree, permission to modify to the contents of the schema tree, and the effect of such modifications on the directory are dependent on the underlying directory.</source>
          <target state="translated">スキーマツリーの構造や内容、スキーマツリーの内容を変更する権限、そのような変更がディレクトリに与える影響などの問題は、基礎となるディレクトリに依存しています。</target>
        </trans-unit>
        <trans-unit id="596e66f81426e06581d909e406a8712c0d7d23a1" translate="yes" xml:space="preserve">
          <source>It accepts an &lt;code&gt;Attributes&lt;/code&gt; parameter containing attributes that were passed to the &lt;code&gt;DirContext.bind()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;DirContext.bind()&lt;/code&gt; メソッドに渡された属性を含む &lt;code&gt;Attributes&lt;/code&gt; パラメーターを受け入れます。</target>
        </trans-unit>
        <trans-unit id="87de8ecb70de7d744b02b88e9d2aea88e8cbfbfd" translate="yes" xml:space="preserve">
          <source>It accepts an &lt;code&gt;Attributes&lt;/code&gt; parameter that contains attributes associated with the object. The &lt;code&gt;DirObjectFactory&lt;/code&gt; might use these attributes to save having to look them up from the directory.</source>
          <target state="translated">オブジェクトに関連付けられた &lt;code&gt;Attributes&lt;/code&gt; を含むAttributesパラメータを受け入れます。 &lt;code&gt;DirObjectFactory&lt;/code&gt; は、ディレクトリからそれらを検索する手間を省くために、これらの属性を使用する場合があります。</target>
        </trans-unit>
        <trans-unit id="17b0f8caffcd0735b83227c384098089ff459d1f" translate="yes" xml:space="preserve">
          <source>It accepts many syntaxes; in particular, it recognizes the IETF standard date syntax: &quot;Sat, 12 Aug 1995 13:30:00 GMT&quot;. It also understands the continental U.S. time-zone abbreviations, but for general use, a time-zone offset should be used: &quot;Sat, 12 Aug 1995 13:30:00 GMT+0430&quot; (4 hours, 30 minutes west of the Greenwich meridian). If no time zone is specified, the local time zone is assumed. GMT and UTC are considered equivalent.</source>
          <target state="translated">これは多くの構文を受け入れます。特に、IETF標準の日付構文を認識します。&quot;Sat,12 Aug 1995 13:30:00 GMT&quot;.また、米国大陸のタイムゾーンの省略形も理解できますが、一般的な使用にはタイムゾーンオフセットを使用しなければなりません。&quot;Sat,12 Aug 1995 13:30:00:00 GMT+0430&quot; (グリニッジ子午線から西に4時間30分)。タイムゾーンが指定されていない場合は、ローカルタイムゾーンを想定します。GMTとUTCは同等とみなされます。</target>
        </trans-unit>
        <trans-unit id="c91ea0ea7f9b67e15d7c57915359f16c2ed303b3" translate="yes" xml:space="preserve">
          <source>It also provides a clipboard mechanism, which is an object that temporarily holds a transferable object that can be transferred between or within an application. The clipboard is typically used for copy and paste operations. Although it is possible to create a clipboard to use within an application, most applications will use the system clipboard to ensure the data can be transferred across applications running on the platform.</source>
          <target state="translated">また、アプリケーション間またはアプリケーション内で転送可能なオブジェクトを一時的に保持するオブジェクトであるクリップボード機構を提供する。クリップボードは通常、コピー&amp;ペースト操作に使用されます。アプリケーション内で使用するクリップボードを作成することも可能ですが、ほとんどのアプリケーションでは、プラットフォーム上で実行されているアプリケーション間でデータを転送できるようにするために、システムクリップボードを使用します。</target>
        </trans-unit>
        <trans-unit id="5b15dda315b32f2f24766f345f99424bc126b285" translate="yes" xml:space="preserve">
          <source>It appends the given replacement string to the string buffer.</source>
          <target state="translated">与えられた置換文字列を文字列バッファに追加します。</target>
        </trans-unit>
        <trans-unit id="8f16b6fccac3206857db2447eb6c09813bcf13ab" translate="yes" xml:space="preserve">
          <source>It appends the given replacement string to the string builder.</source>
          <target state="translated">与えられた置換文字列を文字列ビルダーに追加します。</target>
        </trans-unit>
        <trans-unit id="6d56ee59ac45199f6623e285dc78b70e5080d3d6" translate="yes" xml:space="preserve">
          <source>It can also be used to ensure that a reentrant lock is used in a non-reentrant manner, for example:</source>
          <target state="translated">また、例えば、リエントラントロックが非リエントラント的に使用されることを保証するために使用することもできる。</target>
        </trans-unit>
        <trans-unit id="98b78b23114f69f31bf7f966104505f9189fd647" translate="yes" xml:space="preserve">
          <source>It can be obtained by calling the &lt;a href=&quot;platformmanagedobject#getObjectName()&quot;&gt;&lt;code&gt;PlatformManagedObject.getObjectName()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">これは、&lt;a href=&quot;platformmanagedobject#getObjectName()&quot;&gt; &lt;code&gt;PlatformManagedObject.getObjectName()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="50e3be4ed4d5a8a118fc0806fd34112a470208b8" translate="yes" xml:space="preserve">
          <source>It can be obtained by calling the &lt;a href=&quot;platformmanagedobject#getObjectName()&quot;&gt;&lt;code&gt;PlatformManagedObject.getObjectName()&lt;/code&gt;&lt;/a&gt; method. A platform usually includes additional platform-dependent information specific to a garbage collection algorithm for monitoring.</source>
          <target state="translated">これは、&lt;a href=&quot;platformmanagedobject#getObjectName()&quot;&gt; &lt;code&gt;PlatformManagedObject.getObjectName()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで取得できます。プラットフォームには通常、監視用のガベージコレクションアルゴリズムに固有の追加のプラットフォーム依存情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="0d85818a06c6b00c26cbb5814956dd8d8460a4ee" translate="yes" xml:space="preserve">
          <source>It can be obtained by calling the &lt;a href=&quot;platformmanagedobject#getObjectName--&quot;&gt;&lt;code&gt;PlatformManagedObject.getObjectName()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;platformmanagedobject#getObjectName--&quot;&gt; &lt;code&gt;PlatformManagedObject.getObjectName()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="4cd680e7b3eef59603cad92bdc1f1f3dc3c8415f" translate="yes" xml:space="preserve">
          <source>It can be obtained by calling the &lt;a href=&quot;platformmanagedobject#getObjectName--&quot;&gt;&lt;code&gt;PlatformManagedObject.getObjectName()&lt;/code&gt;&lt;/a&gt; method. A platform usually includes additional platform-dependent information specific to a garbage collection algorithm for monitoring.</source>
          <target state="translated">&lt;a href=&quot;platformmanagedobject#getObjectName--&quot;&gt; &lt;code&gt;PlatformManagedObject.getObjectName()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで取得できます。通常、プラットフォームには、監視用のガベージコレクションアルゴリズムに固有の追加のプラットフォーム依存情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="b357e81fac53c7c8e916bd160f1c722ea68867f0" translate="yes" xml:space="preserve">
          <source>It can be used either as a base class or as a delegate.</source>
          <target state="translated">基底クラスとしても、デリゲートとしても使用できます。</target>
        </trans-unit>
        <trans-unit id="1ce571fdea137af36148695901238341ee13843a" translate="yes" xml:space="preserve">
          <source>It can be used internally to any Java runtime as an unforgeable authorization token -- one that can be passed around without the fear that the token can be maliciously modified without being detected.</source>
          <target state="translated">これは、どのようなJavaランタイムにも、検知されずに悪意を持って変更されることを恐れずに渡せる認証トークンとして、内部的に使用することができます。</target>
        </trans-unit>
        <trans-unit id="101f924ec643fda3ebd6960ad33cb9ad6ff11706" translate="yes" xml:space="preserve">
          <source>It can be used to construct a &lt;code&gt;SecretKey&lt;/code&gt; from a byte array, without having to go through a (provider-based) &lt;code&gt;SecretKeyFactory&lt;/code&gt;.</source>
          <target state="translated">（プロバイダーベースの） &lt;code&gt;SecretKeyFactory&lt;/code&gt; を経由することなく、バイト配列から &lt;code&gt;SecretKey&lt;/code&gt; を構築するために使用できます。</target>
        </trans-unit>
        <trans-unit id="6e072ce75d462dfb7366c71d6f486587f38fc51e" translate="yes" xml:space="preserve">
          <source>It can be used to sign and serialize data/object for storage outside the Java runtime (e.g., storing critical access control data on disk).</source>
          <target state="translated">これは、Javaランタイムの外に保存するためのデータ/オブジェクトに署名し、シリアライズするために使用することができます(例えば、ディスク上に重要なアクセス制御データを保存する)。</target>
        </trans-unit>
        <trans-unit id="835e6350c4884464edfa1d3138b682565e1c9299" translate="yes" xml:space="preserve">
          <source>It can then proceed to use the client for authentication. For example, an LDAP library might use the client as follows:</source>
          <target state="translated">その後、認証のためにクライアントを使用して進むことができます。例えば、LDAP ライブラリは以下のようにクライアントを使用することができます。</target>
        </trans-unit>
        <trans-unit id="36feacc04beb229e033e373528c03f98cfb05944" translate="yes" xml:space="preserve">
          <source>It can then proceed to use the instance to create an authentication connection.</source>
          <target state="translated">その後、インスタンスを使用して認証接続を作成するために進むことができます。</target>
        </trans-unit>
        <trans-unit id="d9ca9c2353d118f56c120f98e2924f27cb2ec5c8" translate="yes" xml:space="preserve">
          <source>It can then proceed to use the server for authentication. For example, suppose the LDAP server received an LDAP BIND request containing the name of the SASL mechanism and an (optional) initial response. It then might use the server as follows:</source>
          <target state="translated">その後、認証のためにサーバーを使用するために進むことができます。例えば、LDAPサーバーがSASLメカニズムの名前と(オプションの)初期応答を含むLDAP BINDリクエストを受け取ったとします。そうすると、以下のようにサーバーを使用することになるかもしれません。</target>
        </trans-unit>
        <trans-unit id="3a63436da922ca2eab1b309033966e6e2e506467" translate="yes" xml:space="preserve">
          <source>It comprises an object identifier string and an optional ASN.1 BER encoded value.</source>
          <target state="translated">これは、オブジェクト識別子文字列とオプションのASN.1 BERエンコードされた値で構成されています。</target>
        </trans-unit>
        <trans-unit id="eea46245b7da7742274ee69a4e3bcc5abd238c5c" translate="yes" xml:space="preserve">
          <source>It comprises an optional object identifier and an optional ASN.1 BER encoded value.</source>
          <target state="translated">これは、オプションのオブジェクト識別子とオプションのASN.1 BERエンコードされた値で構成されています。</target>
        </trans-unit>
        <trans-unit id="8b2b76eb37c7ccedc72cef4f00a75069529964eb" translate="yes" xml:space="preserve">
          <source>It contains fewer &lt;code&gt;getter&lt;/code&gt; methods:</source>
          <target state="translated">含まれる &lt;code&gt;getter&lt;/code&gt; メソッドは少なくなります。</target>
        </trans-unit>
        <trans-unit id="679529855979826c6cb471376267f88d809aa540" translate="yes" xml:space="preserve">
          <source>It defaults to providing &quot;noop&quot; information, and can be selectively overriden to provide more explicit information on chosen topics. When the introspector sees the &quot;noop&quot; values, it will apply low level introspection and design patterns to automatically analyze the target bean.</source>
          <target state="translated">デフォルトでは &quot;noop &quot;情報を提供し、選択されたトピックについてより明確な情報を提供するために選択的にオーバーライドすることができます。イントロスペクタが &quot;noop &quot;の値を見ると、低レベルのイントロスペクションとデザインパターンを適用して、対象のビーンを自動的に分析します。</target>
        </trans-unit>
        <trans-unit id="8d29b63b24ca8c7c47e8bbeb8924de991294cfcb" translate="yes" xml:space="preserve">
          <source>It defines a timer notification identifier which allows to retrieve a timer notification from the list of notifications of a timer MBean.</source>
          <target state="translated">タイマーMBeanの通知リストからタイマー通知を取得するためのタイマー通知識別子を定義します。</target>
        </trans-unit>
        <trans-unit id="0a312262e5c53bdf937f1798a76473585eac7ee8" translate="yes" xml:space="preserve">
          <source>It describes the standard XML document format required when describing a &lt;code&gt;RowSet&lt;/code&gt; object in XML and must be used be all standard implementations of the &lt;code&gt;WebRowSet&lt;/code&gt; interface to ensure interoperability. In addition, the &lt;code&gt;WebRowSet&lt;/code&gt; schema uses specific SQL/XML Schema annotations, thus ensuring greater cross platform interoperability. This is an effort currently under way at the ISO organization. The SQL/XML definition is available at the following URI:</source>
          <target state="translated">これは、XMLで &lt;code&gt;RowSet&lt;/code&gt; オブジェクトを記述するときに必要な標準のXMLドキュメント形式を記述し、相互運用性を確保するために &lt;code&gt;WebRowSet&lt;/code&gt; インターフェイスのすべての標準実装で使用する必要があります。さらに、 &lt;code&gt;WebRowSet&lt;/code&gt; スキーマは特定のSQL / XMLスキーマ注釈を使用するため、クロスプラットフォームの相互運用性が向上します。これは、ISO組織で現在進行中の取り組みです。SQL / XML定義は、次のURIで使用できます。</target>
        </trans-unit>
        <trans-unit id="a5b50fbe254b890438f0ccaa96371b8ac86481bd" translate="yes" xml:space="preserve">
          <source>It does not apply to &lt;em&gt;EntityResolver.resolveEntity()&lt;/em&gt;, which is not used to report declarations, or to &lt;em&gt;LexicalHandler.startDTD()&lt;/em&gt;, which already provides the non-absolutized URI.</source>
          <target state="translated">宣言のレポートに使用されない&lt;em&gt;EntityResolver.resolveEntity（）&lt;/em&gt;や、非絶対化URIを既に提供している&lt;em&gt;LexicalHandler.startDTD（）&lt;/em&gt;には適用されません。</target>
        </trans-unit>
        <trans-unit id="852ead3a595ec6bbbdec68acd796619498dc2174" translate="yes" xml:space="preserve">
          <source>It encapsulates asynchronous event dispatch machinery which extracts events from the queue and dispatches them by calling &lt;a href=&quot;#dispatchEvent(java.awt.AWTEvent)&quot;&gt;&lt;code&gt;dispatchEvent(AWTEvent)&lt;/code&gt;&lt;/a&gt; method on this &lt;code&gt;EventQueue&lt;/code&gt; with the event to be dispatched as an argument. The particular behavior of this machinery is implementation-dependent. The only requirements are that events which were actually enqueued to this queue (note that events being posted to the &lt;code&gt;EventQueue&lt;/code&gt; can be coalesced) are dispatched:</source>
          <target state="translated">キューからイベントを抽出し、引数としてディスパッチされるイベントを使用してこの &lt;code&gt;EventQueue&lt;/code&gt; で&lt;a href=&quot;#dispatchEvent(java.awt.AWTEvent)&quot;&gt; &lt;code&gt;dispatchEvent(AWTEvent)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、イベントをディスパッチする非同期イベントディスパッチ機構をカプセル化します。この機械の特定の動作は、実装に依存します。唯一の要件は、実際にこのキューにエンキューされたイベント（ &lt;code&gt;EventQueue&lt;/code&gt; に投稿されているイベントを合体できることに注意してください）がディスパッチされることです。</target>
        </trans-unit>
        <trans-unit id="cdcb91c4a9a174b748e0017b915caa930098deda" translate="yes" xml:space="preserve">
          <source>It follows immediately from the contract for &lt;code&gt;compare&lt;/code&gt; that the quotient is an</source>
          <target state="translated">&lt;code&gt;compare&lt;/code&gt; の契約からすぐに商が</target>
        </trans-unit>
        <trans-unit id="7584a09884c3ef2d260429bae8117b30d0744823" translate="yes" xml:space="preserve">
          <source>It follows immediately from the contract for &lt;code&gt;compareTo&lt;/code&gt; that the quotient is an</source>
          <target state="translated">&lt;code&gt;compareTo&lt;/code&gt; の契約からすぐに商が</target>
        </trans-unit>
        <trans-unit id="efb302abc356b25b8f35a380be54ffc17a24cbf6" translate="yes" xml:space="preserve">
          <source>It follows that for any two strings &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;s.intern() == t.intern()&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;s.equals(t)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">任意の2つの文字列のことを、以下の &lt;code&gt;s&lt;/code&gt; と &lt;code&gt;t&lt;/code&gt; 、 &lt;code&gt;s.intern() == t.intern()&lt;/code&gt; で &lt;code&gt;true&lt;/code&gt; 場合にのみ &lt;code&gt;s.equals(t)&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a813aba94b380dee5c60c69ab43ce98eaf325d9" translate="yes" xml:space="preserve">
          <source>It has a value in a range defined by the UnicodeData file.</source>
          <target state="translated">UnicodeDataファイルで定義された範囲内の値を持ちます。</target>
        </trans-unit>
        <trans-unit id="56fc5236d9fb01d4085688e39a36777cdccb8f7a" translate="yes" xml:space="preserve">
          <source>It has an entry in the UnicodeData file.</source>
          <target state="translated">UnicodeDataファイルのエントリを持っています。</target>
        </trans-unit>
        <trans-unit id="b608856a9f140c126761367e7c226a3592075140" translate="yes" xml:space="preserve">
          <source>It implements also the MBeanRegistration interface to be able to retrieve the MBean Server where it is registered (if registered as a MBean) to access to its Relation Service.</source>
          <target state="translated">MBeanRegistration インタフェースも実装しており、登録されている MBean サーバ(MBean として登録されている場合)を取得して、そのリレーションサービスにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="42ff9a062b95ac9369c2fb0690d087afe2f74b8e" translate="yes" xml:space="preserve">
          <source>It implements the MBeanRegistration interface to be able to retrieve its ObjectName and MBean Server.</source>
          <target state="translated">MBeanRegistration インターフェースを実装しており、その ObjectName と MBean Server を取得することができます。</target>
        </trans-unit>
        <trans-unit id="1816db20c04c58b1beb8d4e7485eda113ebed7e0" translate="yes" xml:space="preserve">
          <source>It implements the NotificationBroadcaster by extending NotificationBroadcasterSupport to send notifications when a relation is removed from it.</source>
          <target state="translated">NotificationBroadcasterSupport を拡張して NotificationBroadcaster を実装し、リレーションが削除された際に通知を送信するようにしています。</target>
        </trans-unit>
        <trans-unit id="e43db3a17b497113c16531645cc19fcfb8538e1d" translate="yes" xml:space="preserve">
          <source>It implements the NotificationListener interface to be able to receive notifications concerning unregistration of MBeans referenced in relation roles and of relation MBeans.</source>
          <target state="translated">リレーションロールで参照されるMBeansやリレーションMBeansの登録解除に関する通知を受信できるように、NotificationListenerインタフェースを実装しています。</target>
        </trans-unit>
        <trans-unit id="4f22ee4ad776b7630b2e79fdff4eb0f7164c94d5" translate="yes" xml:space="preserve">
          <source>It includes &lt;code&gt;setter&lt;/code&gt; methods:</source>
          <target state="translated">&lt;code&gt;setter&lt;/code&gt; メソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="3dd5d5b49f19e1af8608ede7c4aa585a51f279cb" translate="yes" xml:space="preserve">
          <source>It is</source>
          <target state="translated">それは</target>
        </trans-unit>
        <trans-unit id="bda21b8f378563e5a304a6ec8e06ed70a42ef6c3" translate="yes" xml:space="preserve">
          <source>It is &lt;b&gt;strongly recommended&lt;/b&gt; that an application explicitly commits or rolls back an active transaction prior to calling the &lt;code&gt;close&lt;/code&gt; method. If the &lt;code&gt;close&lt;/code&gt; method is called and there is an active transaction, the results are implementation-defined.</source>
          <target state="translated">&lt;code&gt;close&lt;/code&gt; メソッドを呼び出す前に、アプリケーションがアクティブなトランザクションを明示的にコミットまたはロールバックすることを&lt;b&gt;強くお勧め&lt;/b&gt;します。場合は &lt;code&gt;close&lt;/code&gt; メソッドが呼び出され、アクティブなトランザクションがあると、結果は実装定義です。</target>
        </trans-unit>
        <trans-unit id="dbd0d6b9a7bdc72303fa75a73f0958c5be849d3b" translate="yes" xml:space="preserve">
          <source>It is &lt;code&gt;'\f'&lt;/code&gt;, U+000C FORM FEED.</source>
          <target state="translated">それは &lt;code&gt;'\f'&lt;/code&gt; 、U + 000CのFORM FEED。</target>
        </trans-unit>
        <trans-unit id="ac9b67a7d739c17aea3035fcdd2a9c9e3a05adc6" translate="yes" xml:space="preserve">
          <source>It is &lt;code&gt;'\n'&lt;/code&gt;, U+000A LINE FEED.</source>
          <target state="translated">それは &lt;code&gt;'\n'&lt;/code&gt; 、U + 000A LINEのFEED。</target>
        </trans-unit>
        <trans-unit id="3ddf33d337a0ff7e3698c8e940f3c6199f69e582" translate="yes" xml:space="preserve">
          <source>It is &lt;code&gt;'\r'&lt;/code&gt;, U+000D CARRIAGE RETURN.</source>
          <target state="translated">それは &lt;code&gt;'\r'&lt;/code&gt; 、U + 000D CARRIAGE RETURN。</target>
        </trans-unit>
        <trans-unit id="377ff6c0d919cc0810bfd8331d81afb902d0d698" translate="yes" xml:space="preserve">
          <source>It is &lt;code&gt;'\t'&lt;/code&gt;, U+0009 HORIZONTAL TABULATION.</source>
          <target state="translated">それは &lt;code&gt;'\t'&lt;/code&gt; 、U + 0009水平タブ。</target>
        </trans-unit>
        <trans-unit id="0d37257668ca7438fc69dfd0f1fab061266c029d" translate="yes" xml:space="preserve">
          <source>It is &lt;code&gt;'\u000B'&lt;/code&gt;, U+000B VERTICAL TABULATION.</source>
          <target state="translated">それは &lt;code&gt;'\u000B'&lt;/code&gt; 、U + 000B VERTICAL集計。</target>
        </trans-unit>
        <trans-unit id="a0aa91210a4c0f922fb1950e2ff846cba42526f4" translate="yes" xml:space="preserve">
          <source>It is &lt;code&gt;'\u001C'&lt;/code&gt;, U+001C FILE SEPARATOR.</source>
          <target state="translated">それは &lt;code&gt;'\u001C'&lt;/code&gt; 、U + 001Cのファイル区切り。</target>
        </trans-unit>
        <trans-unit id="87a2d028f467bf65a7f9f5bb4448efb27506b397" translate="yes" xml:space="preserve">
          <source>It is &lt;code&gt;'\u001D'&lt;/code&gt;, U+001D GROUP SEPARATOR.</source>
          <target state="translated">それは &lt;code&gt;'\u001D'&lt;/code&gt; 、U + 001D GROUP SEPARATOR。</target>
        </trans-unit>
        <trans-unit id="167dd9d7d337ea48c6141f6dfca31e86ad1a2c8b" translate="yes" xml:space="preserve">
          <source>It is &lt;code&gt;'\u001E'&lt;/code&gt;, U+001E RECORD SEPARATOR.</source>
          <target state="translated">それは &lt;code&gt;'\u001E'&lt;/code&gt; 、U + 001E RECORD SEPARATOR。</target>
        </trans-unit>
        <trans-unit id="ed46310a3a8bd12df0bbc3ee76a63e249a5a1b51" translate="yes" xml:space="preserve">
          <source>It is &lt;code&gt;'\u001F'&lt;/code&gt;, U+001F UNIT SEPARATOR.</source>
          <target state="translated">それは &lt;code&gt;'\u001F'&lt;/code&gt; 、U + 001F UNIT SEPARATOR。</target>
        </trans-unit>
        <trans-unit id="b3d29ed80b373bcb8704c8eb77edd8e7cd5b14b9" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; required that if two objects are unequal according to the &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; method, then calling the &lt;code&gt;hashCode&lt;/code&gt; method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables.</source>
          <target state="translated">され&lt;em&gt;ていない&lt;/em&gt;2つのオブジェクトに応じて等しくない場合は、その必要&lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;メソッドは、呼び出し &lt;code&gt;hashCode&lt;/code&gt; 異なる整数の結果を生成しなければならない二つの物体のそれぞれに方法を。ただし、プログラマーは、等しくないオブジェクトに対して個別の整数結果を生成すると、ハッシュテーブルのパフォーマンスが向上する可能性があることに注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="81f45aec412b4ca66bdf988d9b21b33ed8a412e3" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; required that if two objects are unequal according to the &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; method, then calling the &lt;code&gt;hashCode&lt;/code&gt; method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables.</source>
          <target state="translated">され&lt;em&gt;ていない&lt;/em&gt;2つのオブジェクトに応じて等しくない場合は、その必要&lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;メソッドは、呼び出し &lt;code&gt;hashCode&lt;/code&gt; 二つのオブジェクトのそれぞれに方法は異なる整数の結果を生成しなければなりません。ただし、プログラマーは、等しくないオブジェクトに対して個別の整数結果を生成すると、ハッシュテーブルのパフォーマンスが向上する可能性があることに注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="711c8fd39d0853f588aa02d874222e7dfdeabcb2" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; required that if two objects are unequal according to the &lt;a href=&quot;../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; method, then calling the &lt;code&gt;hashCode&lt;/code&gt; method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables.</source>
          <target state="translated">され&lt;em&gt;ていない&lt;/em&gt;2つのオブジェクトに応じて等しくない場合は、その必要&lt;a href=&quot;../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;メソッドは、呼び出し &lt;code&gt;hashCode&lt;/code&gt; 二つのオブジェクトのそれぞれに方法は異なる整数の結果を生成しなければなりません。ただし、プログラマーは、等しくないオブジェクトに対して個別の整数結果を生成すると、ハッシュテーブルのパフォーマンスが向上する可能性があることに注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="7ac2f3863305f5db3eda34769fb04c0a6fa214e5" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; required that if two objects are unequal according to the &lt;a href=&quot;../../../java/lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; method, then calling the &lt;code&gt;hashCode&lt;/code&gt; method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables.</source>
          <target state="translated">され&lt;em&gt;ていない&lt;/em&gt; 2つのオブジェクトに応じて等しくない場合は、その必要&lt;a href=&quot;../../../java/lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;メソッドは、呼び出し &lt;code&gt;hashCode&lt;/code&gt; 二つのオブジェクトのそれぞれに方法は異なる整数の結果を生成しなければなりません。ただし、プログラマは、異なるオブジェクトに対して異なる整数の結果を生成すると、ハッシュテーブルのパフォーマンスが向上する可能性があることに注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="f2cb0f6d40c917db2976ef344455e182e6745959" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; required that if two objects are unequal according to the &lt;a href=&quot;../../java/lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; method, then calling the &lt;code&gt;hashCode&lt;/code&gt; method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables.</source>
          <target state="translated">され&lt;em&gt;ていない&lt;/em&gt; 2つのオブジェクトに応じて等しくない場合は、その必要&lt;a href=&quot;../../java/lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;メソッドは、呼び出し &lt;code&gt;hashCode&lt;/code&gt; 二つのオブジェクトのそれぞれに方法は異なる整数の結果を生成しなければなりません。ただし、プログラマは、異なるオブジェクトに対して異なる整数の結果を生成すると、ハッシュテーブルのパフォーマンスが向上する可能性があることに注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="c27f15737f57b9fc801f5cee590fcbe08b8a199f" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; required that if two objects are unequal according to the &lt;a href=&quot;../../lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; method, then calling the &lt;code&gt;hashCode&lt;/code&gt; method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables.</source>
          <target state="translated">され&lt;em&gt;ていない&lt;/em&gt; 2つのオブジェクトに応じて等しくない場合は、その必要&lt;a href=&quot;../../lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;メソッドは、呼び出し &lt;code&gt;hashCode&lt;/code&gt; 二つのオブジェクトのそれぞれに方法は異なる整数の結果を生成しなければなりません。ただし、プログラマは、異なるオブジェクトに対して異なる整数の結果を生成すると、ハッシュテーブルのパフォーマンスが向上する可能性があることに注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="87e8548e1763a0e8ddba7fcc7eb69fe99642cba2" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; required that if two objects are unequal according to the &lt;a href=&quot;../lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; method, then calling the &lt;code&gt;hashCode&lt;/code&gt; method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables.</source>
          <target state="translated">され&lt;em&gt;ていない&lt;/em&gt; 2つのオブジェクトに応じて等しくない場合は、その必要&lt;a href=&quot;../lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;メソッドは、呼び出し &lt;code&gt;hashCode&lt;/code&gt; 二つのオブジェクトのそれぞれに方法は異なる整数の結果を生成しなければなりません。ただし、プログラマは、異なるオブジェクトに対して異なる整数の結果を生成すると、ハッシュテーブルのパフォーマンスが向上する可能性があることに注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="5552de644cb826b50f8b51a69da2d09f91b6b377" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; required that if two objects are unequal according to the &lt;a href=&quot;object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; method, then calling the &lt;code&gt;hashCode&lt;/code&gt; method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables.</source>
          <target state="translated">され&lt;em&gt;ていない&lt;/em&gt; 2つのオブジェクトに応じて等しくない場合は、その必要&lt;a href=&quot;object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;メソッドは、呼び出し &lt;code&gt;hashCode&lt;/code&gt; 異なる整数の結果を生成しなければならない二つの物体のそれぞれに方法を。ただし、プログラマは、異なるオブジェクトに対して異なる整数の結果を生成すると、ハッシュテーブルのパフォーマンスが向上する可能性があることに注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="9de2791ba247f33d7383edd322b417cdbfcc97d0" translate="yes" xml:space="preserve">
          <source>It is &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; valid to use as a prefix. Defined by the XML specification to be &quot;&lt;code&gt;xmlns&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt;プレフィックスとして使用することが有効。XML仕様で「 &lt;code&gt;xmlns&lt;/code&gt; 」と定義されています。</target>
        </trans-unit>
        <trans-unit id="905f066d490011b8eebbfabc4ca50eb51e7c546d" translate="yes" xml:space="preserve">
          <source>It is OK to call this method from the event dispatching thread because the toolkit ensures that other events are not blocked while this method is blocked.</source>
          <target state="translated">このメソッドがブロックされている間、ツールキットは他のイベントがブロックされないことを保証するので、イベント ディスパッチング スレッドからこのメソッドを呼び出しても問題ありません。</target>
        </trans-unit>
        <trans-unit id="9d56fcb805fca18650756f869ea800b5603e4f48" translate="yes" xml:space="preserve">
          <source>It is a Unicode space character (&lt;a href=&quot;#SPACE_SEPARATOR&quot;&gt;&lt;code&gt;SPACE_SEPARATOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#LINE_SEPARATOR&quot;&gt;&lt;code&gt;LINE_SEPARATOR&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#PARAGRAPH_SEPARATOR&quot;&gt;&lt;code&gt;PARAGRAPH_SEPARATOR&lt;/code&gt;&lt;/a&gt;) but is not also a non-breaking space (&lt;code&gt;'\u00A0'&lt;/code&gt;, &lt;code&gt;'\u2007'&lt;/code&gt;, &lt;code&gt;'\u202F'&lt;/code&gt;).</source>
          <target state="translated">これはUnicodeスペース文字（&lt;a href=&quot;#SPACE_SEPARATOR&quot;&gt; &lt;code&gt;SPACE_SEPARATOR&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#LINE_SEPARATOR&quot;&gt; &lt;code&gt;LINE_SEPARATOR&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#PARAGRAPH_SEPARATOR&quot;&gt; &lt;code&gt;PARAGRAPH_SEPARATOR&lt;/code&gt; &lt;/a&gt;）ですが、ノーブレークスペース（ &lt;code&gt;'\u00A0'&lt;/code&gt; 、 &lt;code&gt;'\u2007'&lt;/code&gt; 、 &lt;code&gt;'\u202F'&lt;/code&gt; ）でもありません。</target>
        </trans-unit>
        <trans-unit id="64d2fcb45775b7e274cb28c6954ae5fda49b4063" translate="yes" xml:space="preserve">
          <source>It is a Unicode space character (&lt;a href=&quot;character#SPACE_SEPARATOR&quot;&gt;&lt;code&gt;SPACE_SEPARATOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;character#LINE_SEPARATOR&quot;&gt;&lt;code&gt;LINE_SEPARATOR&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;character#PARAGRAPH_SEPARATOR&quot;&gt;&lt;code&gt;PARAGRAPH_SEPARATOR&lt;/code&gt;&lt;/a&gt;) but is not also a non-breaking space (&lt;code&gt;'\u00A0'&lt;/code&gt;, &lt;code&gt;'\u2007'&lt;/code&gt;, &lt;code&gt;'\u202F'&lt;/code&gt;).</source>
          <target state="translated">これはUnicodeのスペース文字（&lt;a href=&quot;character#SPACE_SEPARATOR&quot;&gt; &lt;code&gt;SPACE_SEPARATOR&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;character#LINE_SEPARATOR&quot;&gt; &lt;code&gt;LINE_SEPARATOR&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;character#PARAGRAPH_SEPARATOR&quot;&gt; &lt;code&gt;PARAGRAPH_SEPARATOR&lt;/code&gt; &lt;/a&gt;）ですが、改行なしスペース（ &lt;code&gt;'\u00A0'&lt;/code&gt; 、 &lt;code&gt;'\u2007'&lt;/code&gt; 、 &lt;code&gt;'\u202F'&lt;/code&gt; ）でもありません。</target>
        </trans-unit>
        <trans-unit id="3f3810bf7163d796a4b66a2f258ef677e51f948a" translate="yes" xml:space="preserve">
          <source>It is a Unicode space character (&lt;code&gt;SPACE_SEPARATOR&lt;/code&gt;, &lt;code&gt;LINE_SEPARATOR&lt;/code&gt;, or &lt;code&gt;PARAGRAPH_SEPARATOR&lt;/code&gt;) but is not also a non-breaking space (&lt;code&gt;'\u00A0'&lt;/code&gt;, &lt;code&gt;'\u2007'&lt;/code&gt;, &lt;code&gt;'\u202F'&lt;/code&gt;).</source>
          <target state="translated">これはUnicodeのスペース文字（ &lt;code&gt;SPACE_SEPARATOR&lt;/code&gt; 、 &lt;code&gt;LINE_SEPARATOR&lt;/code&gt; 、または &lt;code&gt;PARAGRAPH_SEPARATOR&lt;/code&gt; ）ですが、改行なしスペース（ &lt;code&gt;'\u00A0'&lt;/code&gt; 、 &lt;code&gt;'\u2007'&lt;/code&gt; 、 &lt;code&gt;'\u202F'&lt;/code&gt; ）でもありません。</target>
        </trans-unit>
        <trans-unit id="964d75d8ab18a3c8556528294b1f4219d5e4e7ca" translate="yes" xml:space="preserve">
          <source>It is a compile-time error for a single &lt;code&gt;ElementType&lt;/code&gt; constant to appear more than once in an &lt;code&gt;@Target&lt;/code&gt; annotation. For example, the following &lt;code&gt;@Target&lt;/code&gt; meta-annotation is illegal:</source>
          <target state="translated">1つの &lt;code&gt;ElementType&lt;/code&gt; 定数が &lt;code&gt;@Target&lt;/code&gt; アノテーションに複数回現れるのはコンパイル時のエラーです。たとえば、次の &lt;code&gt;@Target&lt;/code&gt; メタ注釈は無効です。</target>
        </trans-unit>
        <trans-unit id="e5b8affa86db0a1f3fb3016868255835a943f515" translate="yes" xml:space="preserve">
          <source>It is a requirement that all disconnected &lt;code&gt;RowSet&lt;/code&gt; objects (&lt;code&gt;CachedRowSet&lt;/code&gt;, &lt;code&gt;FilteredRowSet&lt;/code&gt;, &lt;code&gt;JoinRowSet&lt;/code&gt;, and &lt;code&gt;WebRowSet&lt;/code&gt; objects) obtain their &lt;code&gt;SyncProvider&lt;/code&gt; objects from the &lt;code&gt;SyncFactory&lt;/code&gt; mechanism.</source>
          <target state="translated">切断されたすべての &lt;code&gt;RowSet&lt;/code&gt; オブジェクト（ &lt;code&gt;CachedRowSet&lt;/code&gt; 、 &lt;code&gt;FilteredRowSet&lt;/code&gt; 、 &lt;code&gt;JoinRowSet&lt;/code&gt; 、および &lt;code&gt;WebRowSet&lt;/code&gt; オブジェクト）は、 &lt;code&gt;SyncFactory&lt;/code&gt; メカニズムから &lt;code&gt;SyncProvider&lt;/code&gt; オブジェクトを取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="b1fbc9d0d769d7289d9816af2853fecb2d2cd38f" translate="yes" xml:space="preserve">
          <source>It is a usage error for an unregistered party to invoke this method. However, this error may result in an &lt;code&gt;
 IllegalStateException&lt;/code&gt; only upon some subsequent operation on this phaser, if ever.</source>
          <target state="translated">未登録のパーティがこのメソッドを呼び出すのは使用上のエラーです。ただし、このエラーが発生すると、このフェイザーでの後続の操作があった &lt;code&gt; IllegalStateException&lt;/code&gt; のみ、IllegalStateExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="6076fae1f6f9d5f0269a28b3ddd31773e43439e5" translate="yes" xml:space="preserve">
          <source>It is a usage error for an unregistered party to invoke this method. However, this error may result in an &lt;code&gt;IllegalStateException&lt;/code&gt; only upon some subsequent operation on this phaser, if ever.</source>
          <target state="translated">未登録のパーティがこのメソッドを呼び出すのは使用エラーです。ただし、このエラーが発生した場合でも、このフェーザーの後続の操作でのみ &lt;code&gt;IllegalStateException&lt;/code&gt; が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="4e3e404996c81ed70a70bd361205d217387b3836" translate="yes" xml:space="preserve">
          <source>It is actually an element in a linked list. Use the getNext() method repeatedly to enumerate all the attributes of an element.</source>
          <target state="translated">実際にはリンクされたリストの中の要素です。getNext()メソッドを繰り返し使用して、要素のすべての属性を列挙します。</target>
        </trans-unit>
        <trans-unit id="04eaddb631f989de769ff8c23e5d3c2fa1f9886b" translate="yes" xml:space="preserve">
          <source>It is allowed to use only a combination of valid values as a &lt;code&gt;buttons&lt;/code&gt; parameter. A valid combination consists of &lt;code&gt;InputEvent.BUTTON1_DOWN_MASK&lt;/code&gt;, &lt;code&gt;InputEvent.BUTTON2_DOWN_MASK&lt;/code&gt;, &lt;code&gt;InputEvent.BUTTON3_DOWN_MASK&lt;/code&gt; and values returned by the &lt;a href=&quot;event/inputevent#getMaskForButton(int)&quot;&gt;&lt;code&gt;InputEvent.getMaskForButton(button)&lt;/code&gt;&lt;/a&gt; method. The valid combination also depends on a &lt;a href=&quot;toolkit#areExtraMouseButtonsEnabled()&quot;&gt;&lt;code&gt;Toolkit.areExtraMouseButtonsEnabled()&lt;/code&gt;&lt;/a&gt; value as follows:</source>
          <target state="translated">&lt;code&gt;buttons&lt;/code&gt; パラメータとして有効な値の組み合わせのみを使用できます。有効な組み合わせは、 &lt;code&gt;InputEvent.BUTTON1_DOWN_MASK&lt;/code&gt; 、 &lt;code&gt;InputEvent.BUTTON2_DOWN_MASK&lt;/code&gt; 、 &lt;code&gt;InputEvent.BUTTON3_DOWN_MASK&lt;/code&gt; 、および&lt;a href=&quot;event/inputevent#getMaskForButton(int)&quot;&gt; &lt;code&gt;InputEvent.getMaskForButton(button)&lt;/code&gt; &lt;/a&gt;メソッドによって返される値で構成されます。有効な組み合わせは、次のように&lt;a href=&quot;toolkit#areExtraMouseButtonsEnabled()&quot;&gt; &lt;code&gt;Toolkit.areExtraMouseButtonsEnabled()&lt;/code&gt; の&lt;/a&gt;値にも依存します。</target>
        </trans-unit>
        <trans-unit id="e25a44968ae6f639d05d765a49991330e4e8dd82" translate="yes" xml:space="preserve">
          <source>It is allowed to use those constants to compare with the returned button number in the application. For example,</source>
          <target state="translated">アプリケーション内で返されたボタン番号と比較するために、それらの定数を使用することが許可されています。例えば</target>
        </trans-unit>
        <trans-unit id="d190a6d4acac1aaed60911b863587eb8ce1fb4fd" translate="yes" xml:space="preserve">
          <source>It is also called in Relation Service setRole() (for given role) and setRoles() (for each role) methods.</source>
          <target state="translated">また、リレーションサービスの setRole()(与えられたロールのための)メソッドや setRoles()(各ロールのための)メソッドでも呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f769786983111183ad006004a3a813c3e19c6fc7" translate="yes" xml:space="preserve">
          <source>It is also possible to fire an &lt;code&gt;ActionEvent&lt;/code&gt;. If action events are enabled for the text field, they may be fired by pressing the &lt;code&gt;Return&lt;/code&gt; key.</source>
          <target state="translated">&lt;code&gt;ActionEvent&lt;/code&gt; を起動することもできます。テキストフィールドでアクションイベントが有効になっている場合は、 &lt;code&gt;Return&lt;/code&gt; キーを押すとアクションイベントが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="315d12f262e4fd52219a21c66cae6449553f63a8" translate="yes" xml:space="preserve">
          <source>It is also possible to get the &lt;code&gt;Class&lt;/code&gt; object for a named type (or for void) using a class literal. See Section 15.8.2 of</source>
          <target state="translated">クラスリテラルを使用して、名前付き型（またはvoid）の &lt;code&gt;Class&lt;/code&gt; オブジェクトを取得することもできます。のセクション15.8.2を参照</target>
        </trans-unit>
        <trans-unit id="5c0d72ecef0d8e8d49968d715d3a50759bb50d4a" translate="yes" xml:space="preserve">
          <source>It is also possible to have in a user relation MBean class a member being a RelationSupport object, and to implement the required interfaces by delegating all to this member.</source>
          <target state="translated">また、ユーザリレーションMBeanクラスにRelationSupportオブジェクトであるメンバを持ち、このメンバに全てを委譲することで必要なインタフェースを実装することも可能です。</target>
        </trans-unit>
        <trans-unit id="0b7d7d0d809944a84eb501cc76d1a7b7a1048c45" translate="yes" xml:space="preserve">
          <source>It is also possible to manually add service providers not found automatically, as well as to remove those that are using the interfaces of the &lt;code&gt;ServiceRegistry&lt;/code&gt; class. Thus the application may customize the contents of the registry as it sees fit.</source>
          <target state="translated">自動的に見つからないサービスプロバイダーを手動で追加したり、 &lt;code&gt;ServiceRegistry&lt;/code&gt; クラスのインターフェイスを使用しているプロバイダーを削除したりすることもできます。したがって、アプリケーションは、適切と思われるレジストリの内容をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="3931c49522d73ea7f109d4d0883fdc3caaeb8c63" translate="yes" xml:space="preserve">
          <source>It is also possible to perform numeric shaping explicitly using instances of &lt;code&gt;NumericShaper&lt;/code&gt;, as this code snippet demonstrates:</source>
          <target state="translated">このコードスニペットが示すように、 &lt;code&gt;NumericShaper&lt;/code&gt; のインスタンスを使用して明示的に数値シェーピングを実行することもできます。</target>
        </trans-unit>
        <trans-unit id="c62f7c186540bd04c308d8c51d8a8711cbea98db" translate="yes" xml:space="preserve">
          <source>It is also possible to register a named component with Nimbus. For example, suppose you wanted to style the background of a JPanel named &quot;MyPanel&quot; differently from other JPanels. You could accomplish this by doing the following:</source>
          <target state="translated">名前付きコンポーネントをNimbusに登録することも可能です。例えば、&quot;MyPanel &quot;という名前のJPanelの背景を他のJPanelとは異なるスタイルにしたいとします。以下のようにすることで実現できます。</target>
        </trans-unit>
        <trans-unit id="d2eef2b082b662a21979b5de5686ad715ad2ce4e" translate="yes" xml:space="preserve">
          <source>It is also possible to specify a non-centered focus point, as in the following code:</source>
          <target state="translated">また、以下のコードのように、中央以外のフォーカスポイントを指定することも可能です。</target>
        </trans-unit>
        <trans-unit id="01743a5d90a2916bb520504993acf2fed86d8203" translate="yes" xml:space="preserve">
          <source>It is also possible to specify renderers and editors on a per type basis rather than a per column basis - see the &lt;code&gt;setDefaultRenderer&lt;/code&gt; method in the &lt;code&gt;JTable&lt;/code&gt; class. This default mechanism is only used when the renderer (or editor) in the &lt;code&gt;TableColumn&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">列ごとではなくタイプごとにレンダラーとエディターを指定することもできます &lt;code&gt;JTable&lt;/code&gt; クラスの &lt;code&gt;setDefaultRenderer&lt;/code&gt; メソッドを参照してください。このデフォルトのメカニズムは、 &lt;code&gt;TableColumn&lt;/code&gt; のレンダラー（またはエディター）が &lt;code&gt;null&lt;/code&gt; の場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="79a5bff7170445d7f9eecec29ab2d44bef0ccd3e" translate="yes" xml:space="preserve">
          <source>It is also possible using the static utility method in the &lt;code&gt;SyncFactory&lt;/code&gt; class to determine the list of &lt;code&gt;SyncProvider&lt;/code&gt; implementations currently registered with the &lt;code&gt;SyncFactory&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SyncFactory&lt;/code&gt; クラスの静的ユーティリティメソッドを使用して、現在 &lt;code&gt;SyncFactory&lt;/code&gt; に登録されて &lt;code&gt;SyncProvider&lt;/code&gt; 実装のリストを確認することもできます。</target>
        </trans-unit>
        <trans-unit id="fdd5c6f12a1253ba1a6b5d4153b507827610dc4e" translate="yes" xml:space="preserve">
          <source>It is also thrown when a particular subtype of context is required, such as a DirContext, and the resolved object is a context but not of the required subtype.</source>
          <target state="translated">また、DirContext のような特定のサブタイプのコンテキストが必要で、解決されたオブジェクトがコンテキストではあるが必要なサブタイプではない場合にもスローされます。</target>
        </trans-unit>
        <trans-unit id="d40ec16cd146a479f1bc77d9b2f310dcc6dbaad7" translate="yes" xml:space="preserve">
          <source>It is always possible to rewrite recursive types like this so they are no longer recursive. Doing so may require introducing new types. For example:</source>
          <target state="translated">このように再帰的な型を書き換えることはいつでも可能で、もはや再帰的ではありません。そのためには新しい型を導入する必要があるかもしれません。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="c080eead4dec2b45302af4835abe960ef4d268bd" translate="yes" xml:space="preserve">
          <source>It is an XML document tree represented as a hierarchy of nodes, a &lt;a href=&quot;../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; for example, in the JDK implementation.</source>
          <target state="translated">これは、ノードの階層として表されるXMLドキュメントツリーです。たとえば、JDK実装では&lt;a href=&quot;../../../org/w3c/dom/node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="141d1c860b6d9a9f60949b1d31f74b88211e161d" translate="yes" xml:space="preserve">
          <source>It is an error for there to be two getters with the same name, or two setters with the same name. If there is a getter and a setter for the same name, then the type &lt;code&gt;&lt;em&gt;T&lt;/em&gt;&lt;/code&gt; in both must be the same. In this case the attribute is read/write. If there is only a getter or only a setter, the attribute is read-only or write-only respectively.</source>
          <target state="translated">同じ名前のゲッターが2つあるか、同じ名前のセッターが2つあると、エラーになります。同じ名前のゲッターとセッターがある場合、両方のタイプ &lt;code&gt;&lt;em&gt;T&lt;/em&gt;&lt;/code&gt; は同じでなければなりません。この場合、属性は読み取り/書き込みです。ゲッターのみまたはセッターのみがある場合、属性はそれぞれ読み取り専用または書き込み専用です。</target>
        </trans-unit>
        <trans-unit id="b6e0de659b17fa1e5adba7f56d4ca0e3c812a8c9" translate="yes" xml:space="preserve">
          <source>It is an error if there are elements of &lt;code&gt;filters&lt;/code&gt; (null or not) which do not correspond to argument positions in the target.</source>
          <target state="translated">ターゲットの引数の位置に対応しない &lt;code&gt;filters&lt;/code&gt; 要素（nullかどうか）があると、エラーになります。</target>
        </trans-unit>
        <trans-unit id="33ac4f7093e60217780ea2a21b7413691389a4cc" translate="yes" xml:space="preserve">
          <source>It is an error to use a backslash prior to any alphabetic character that does not denote an escaped construct; these are reserved for future extensions to the regular-expression language. A backslash may be used prior to a non-alphabetic character regardless of whether that character is part of an unescaped construct.</source>
          <target state="translated">エスケープされていない構成要素を示さないアルファベット文字の前にバックスラッシュを使用するのは誤りです。バックスラッシュは、その文字がエスケープされていない構成要素の一部であるかどうかに関わらず、アルファベット以外の文字の前に使用することができます。</target>
        </trans-unit>
        <trans-unit id="61c311afc5877186ec04d08c3d2705e3746e1b8e" translate="yes" xml:space="preserve">
          <source>It is an error to use the &lt;code&gt;http://java.sun.com/xml/jaxp/properties/schemaSource&lt;/code&gt; property and/or the &lt;code&gt;http://java.sun.com/xml/jaxp/properties/schemaLanguage&lt;/code&gt; property in conjunction with a &lt;a href=&quot;../validation/schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; object. Such configuration will cause a &lt;a href=&quot;parserconfigurationexception&quot;&gt;&lt;code&gt;ParserConfigurationException&lt;/code&gt;&lt;/a&gt; exception when the &lt;a href=&quot;#newDocumentBuilder()&quot;&gt;&lt;code&gt;newDocumentBuilder()&lt;/code&gt;&lt;/a&gt; is invoked.</source>
          <target state="translated">&lt;code&gt;http://java.sun.com/xml/jaxp/properties/schemaSource&lt;/code&gt; プロパティおよび/または &lt;code&gt;http://java.sun.com/xml/jaxp/properties/schemaLanguage&lt;/code&gt; プロパティを組み合わせて使用するとエラーになります&lt;a href=&quot;../validation/schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;オブジェクト。このような構成は、原因となります&lt;a href=&quot;parserconfigurationexception&quot;&gt; &lt;code&gt;ParserConfigurationException&lt;/code&gt; の&lt;/a&gt;場合に例外を&lt;a href=&quot;#newDocumentBuilder()&quot;&gt; &lt;code&gt;newDocumentBuilder()&lt;/code&gt; が&lt;/a&gt;呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0d55e4585ab7303c6ce2c0ca02ed1c3bcc11ff81" translate="yes" xml:space="preserve">
          <source>It is an error to use the &lt;code&gt;http://java.sun.com/xml/jaxp/properties/schemaSource&lt;/code&gt; property and/or the &lt;code&gt;http://java.sun.com/xml/jaxp/properties/schemaLanguage&lt;/code&gt; property in conjunction with a non-null &lt;a href=&quot;../validation/schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; object. Such configuration will cause a &lt;a href=&quot;../../../org/xml/sax/saxexception&quot;&gt;&lt;code&gt;SAXException&lt;/code&gt;&lt;/a&gt; exception when those properties are set on a &lt;a href=&quot;saxparser&quot;&gt;&lt;code&gt;SAXParser&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;http://java.sun.com/xml/jaxp/properties/schemaSource&lt;/code&gt; プロパティおよび/または &lt;code&gt;http://java.sun.com/xml/jaxp/properties/schemaLanguage&lt;/code&gt; プロパティを組み合わせて使用するとエラーになりますnull以外の&lt;a href=&quot;../validation/schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;オブジェクト。このような構成では、これらのプロパティが&lt;a href=&quot;saxparser&quot;&gt; &lt;code&gt;SAXParser&lt;/code&gt; に&lt;/a&gt;設定されている場合、&lt;a href=&quot;../../../org/xml/sax/saxexception&quot;&gt; &lt;code&gt;SAXException&lt;/code&gt; &lt;/a&gt;例外が発生します。</target>
        </trans-unit>
        <trans-unit id="0571ec74685c0c587233f018bc5b050b7c8737ea" translate="yes" xml:space="preserve">
          <source>It is best suited for applications in which set sizes generally stay small, read-only operations vastly outnumber mutative operations, and you need to prevent interference among threads during traversal.</source>
          <target state="translated">これは、セットサイズが一般的に小さく、読み取り専用の操作が突然変異操作の数を大きく上回っているアプリケーションに最適で、探索中にスレッド間の干渉を防ぐ必要がある場合に最適です。</target>
        </trans-unit>
        <trans-unit id="c8771d68b5696e0d1aef29f2b25982d8f2f956e7" translate="yes" xml:space="preserve">
          <source>It is called in Relation Service createRelation() and addRelation() methods.</source>
          <target state="translated">リレーションサービスの createRelation()メソッドや addRelation()メソッドで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c127f33141a74184bc6e4cd6ab229016e3b3324c" translate="yes" xml:space="preserve">
          <source>It is called in Relation Service removeRelation() method.</source>
          <target state="translated">Relation Service の removeRelation()メソッドで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="19ee61a2d0bae5b3428d8a81d67c19a4c10edda7" translate="yes" xml:space="preserve">
          <source>It is called in relation MBean setRole() (for given role) and setRoles() (for each role) methods (implementation provided in RelationSupport class).</source>
          <target state="translated">これはリレーションMBeanのsetRole()(与えられたロール用)とsetRoles()(各ロール用)メソッドで呼び出されます(実装はRelationSupportクラスで提供されています)。</target>
        </trans-unit>
        <trans-unit id="ce48d047787382c59dcc9e0b12d8dfb9bcdb5f62" translate="yes" xml:space="preserve">
          <source>It is cancelled, explicitly, by invoking its &lt;a href=&quot;#cancel()&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method, or</source>
          <target state="translated">&lt;a href=&quot;#cancel()&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、明示的にキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="bafc275ec86bdc89fb6a5c9d87d14170d104db57" translate="yes" xml:space="preserve">
          <source>It is cancelled, explicitly, by invoking its &lt;a href=&quot;watchkey#cancel--&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method, or</source>
          <target state="translated">&lt;a href=&quot;watchkey#cancel--&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、明示的にキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="471cef6a8346c1dec486b96c4a2069f37147f7ac" translate="yes" xml:space="preserve">
          <source>It is common for either the key or the value to be the input elements. In this case, the utility method &lt;a href=&quot;../function/function#identity()&quot;&gt;&lt;code&gt;Function.identity()&lt;/code&gt;&lt;/a&gt; may be helpful. For example, the following produces a &lt;code&gt;ConcurrentMap&lt;/code&gt; mapping students to their grade point average:</source>
          <target state="translated">キーまたは値のいずれかが入力要素になるのが一般的です。この場合、ユーティリティメソッド&lt;a href=&quot;../function/function#identity()&quot;&gt; &lt;code&gt;Function.identity()&lt;/code&gt; &lt;/a&gt;が役立つ場合があります。たとえば、次の例では、学生を成績平均点にマッピングする &lt;code&gt;ConcurrentMap&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="f5ea175bd981c22f67569b457e97cc6b94b46884" translate="yes" xml:space="preserve">
          <source>It is common for either the key or the value to be the input elements. In this case, the utility method &lt;a href=&quot;../function/function#identity()&quot;&gt;&lt;code&gt;Function.identity()&lt;/code&gt;&lt;/a&gt; may be helpful. For example, the following produces a &lt;code&gt;Map&lt;/code&gt; mapping students to their grade point average:</source>
          <target state="translated">キーまたは値のいずれかが入力要素になるのが一般的です。この場合、ユーティリティメソッド&lt;a href=&quot;../function/function#identity()&quot;&gt; &lt;code&gt;Function.identity()&lt;/code&gt; &lt;/a&gt;が役立つ場合があります。たとえば、次の例では、生徒を成績平均にマッピングする &lt;code&gt;Map&lt;/code&gt; 作成します。</target>
        </trans-unit>
        <trans-unit id="273e7fc118cb4af754dc914d94ca50d912d8f011" translate="yes" xml:space="preserve">
          <source>It is common for either the key or the value to be the input elements. In this case, the utility method &lt;a href=&quot;../function/function#identity--&quot;&gt;&lt;code&gt;Function.identity()&lt;/code&gt;&lt;/a&gt; may be helpful. For example, the following produces a &lt;code&gt;Map&lt;/code&gt; mapping students to their grade point average:</source>
          <target state="translated">キーまたは値のいずれかが入力要素になるのが一般的です。この場合、ユーティリティメソッド&lt;a href=&quot;../function/function#identity--&quot;&gt; &lt;code&gt;Function.identity()&lt;/code&gt; &lt;/a&gt;が役立ちます。たとえば、次の例では、生徒を成績平均点にマッピングする &lt;code&gt;Map&lt;/code&gt; 作成します。</target>
        </trans-unit>
        <trans-unit id="f944f276e39c59851109d820343caa7ee3842b32" translate="yes" xml:space="preserve">
          <source>It is convenient to create the map entries using the &lt;a href=&quot;#entry(K,V)&quot;&gt;&lt;code&gt;Map.entry()&lt;/code&gt;&lt;/a&gt; method. For example,</source>
          <target state="translated">&lt;a href=&quot;#entry(K,V)&quot;&gt; &lt;code&gt;Map.entry()&lt;/code&gt; &lt;/a&gt;メソッドを使用してマップエントリを作成すると便利です。例えば、</target>
        </trans-unit>
        <trans-unit id="1059678eba42633fa276ce2c4c3e212205af46c9" translate="yes" xml:space="preserve">
          <source>It is crucial for a programmer using this class not to use methods that are not defined or overriden in this class (such as a new method or constructor that is later added to one of the super classes), because the design and implementation of those methods are unlikely to have considered security impact with regard to CipherInputStream.</source>
          <target state="translated">このクラスを使用するプログラマは、このクラスで定義されていないメソッドやオーバーライドされていないメソッド(新しいメソッドやコンストラクタが後にスーパークラスの一つに追加されるようなもの)を使用しないことが重要です。</target>
        </trans-unit>
        <trans-unit id="66b17e17ca6881d55be58fbf517b4840ad9831ce" translate="yes" xml:space="preserve">
          <source>It is crucial for a programmer using this class not to use methods that are not defined or overriden in this class (such as a new method or constructor that is later added to one of the super classes), because the design and implementation of those methods are unlikely to have considered security impact with regard to CipherOutputStream.</source>
          <target state="translated">このクラスを使用するプログラマは、このクラスで定義されていないメソッドやオーバーライドされていないメソッド(新しいメソッドやコンストラクタが後にスーパークラスの一つに追加されるようなもの)を使用しないことが重要です。</target>
        </trans-unit>
        <trans-unit id="ed4a3a9354e9d4a28c616e873b80716e558fbcdf" translate="yes" xml:space="preserve">
          <source>It is dangerous to allow an applet permission to load native code libraries, because the Java security architecture is not designed to and does not prevent malicious behavior at the level of native code.</source>
          <target state="translated">Javaのセキュリティアーキテクチャは、ネイティブコードのレベルで悪意のある動作を防ぐように設計されていないため、アプレットにネイティブコードのライブラリをロードする許可を与えるのは危険です。</target>
        </trans-unit>
        <trans-unit id="7c01a1f890200cecded00a2be3e5e455c149750d" translate="yes" xml:space="preserve">
          <source>It is determined as follows: when this class is initialized, the system property &lt;code&gt;javax.smartcardio.TerminalFactory.DefaultType&lt;/code&gt; is examined. If it is set, a TerminalFactory of this type is instantiated by calling the &lt;a href=&quot;#getInstance(java.lang.String,java.lang.Object)&quot;&gt;getInstance(String,Object)&lt;/a&gt; method passing &lt;code&gt;null&lt;/code&gt; as the value for &lt;code&gt;params&lt;/code&gt;. If the call succeeds, the type becomes the default type and the factory becomes the &lt;a href=&quot;#getDefault()&quot;&gt;default&lt;/a&gt; factory.</source>
          <target state="translated">これは次のように決定されます。このクラスが初期化されると、システムプロパティ &lt;code&gt;javax.smartcardio.TerminalFactory.DefaultType&lt;/code&gt; が調べられます。設定されている場合、このタイプのTerminalFactoryは、 &lt;code&gt;params&lt;/code&gt; の値として &lt;code&gt;null&lt;/code&gt; を渡す&lt;a href=&quot;#getInstance(java.lang.String,java.lang.Object)&quot;&gt;getInstance（String、Object）&lt;/a&gt;メソッドを呼び出すことによってインスタンス化されます。呼び出しが成功すると、タイプがデフォルトのタイプになり、ファクトリが&lt;a href=&quot;#getDefault()&quot;&gt;デフォルトの&lt;/a&gt;ファクトリになります。</target>
        </trans-unit>
        <trans-unit id="f8cf3862fca055459b9b8177288111b73db0f697" translate="yes" xml:space="preserve">
          <source>It is entirely valid for this &lt;code&gt;Printable&lt;/code&gt; to be wrapped inside another in order to create complex reports and documents. You may even request that different pages be rendered into different sized printable areas. The implementation must be prepared to handle this (possibly by doing its layout calculations on the fly). However, providing different heights to each page will likely not work well with &lt;code&gt;PrintMode.NORMAL&lt;/code&gt; when it has to spread columns across pages.</source>
          <target state="translated">複雑なレポートやドキュメントを作成するために、この &lt;code&gt;Printable&lt;/code&gt; を別のPrintableにラップすることは完全に有効です。さまざまなページをさまざまなサイズの印刷可能領域にレンダリングするように要求することもできます。実装はこれを処理する準備をする必要があります（おそらくその場でレイアウト計算を行うことによって）。ただし、ページ間で列を分散する &lt;code&gt;PrintMode.NORMAL&lt;/code&gt; 場合、各ページに異なる高さを指定すると、PrintMode.NORMALではうまく機能しない可能性があります。</target>
        </trans-unit>
        <trans-unit id="0848c02f29eb1e158252e9e2644492922128cc96" translate="yes" xml:space="preserve">
          <source>It is envisioned that there will be three most common ways in which providers will be used:</source>
          <target state="translated">プロバイダの利用方法は、最も一般的な3つの方法が想定されています。</target>
        </trans-unit>
        <trans-unit id="6c1d12f95626c71db1616326b18c14df624d45e7" translate="yes" xml:space="preserve">
          <source>It is expected that the implementation of the class for a custom mapping will be done by a tool. In a typical implementation, the programmer would simply supply the name of the SQL UDT, the name of the class to which it is being mapped, and the names of the fields to which each of the attributes of the UDT is to be mapped. The tool will use this information to implement the &lt;code&gt;SQLData.readSQL&lt;/code&gt; and &lt;code&gt;SQLData.writeSQL&lt;/code&gt; methods. The &lt;code&gt;readSQL&lt;/code&gt; method calls the appropriate &lt;code&gt;SQLInput&lt;/code&gt; methods to read each attribute from an &lt;code&gt;SQLInput&lt;/code&gt; object, and the &lt;code&gt;writeSQL&lt;/code&gt; method calls &lt;code&gt;SQLOutput&lt;/code&gt; methods to write each attribute back to the data source via an &lt;code&gt;SQLOutput&lt;/code&gt; object.</source>
          <target state="translated">カスタムマッピングのクラスの実装は、ツールによって行われることが期待されます。典型的な実装では、プログラマーはSQL UDTの名前、それがマップされているクラスの名前、およびUDTの各属性がマップされるフィールドの名前を単に提供します。このツールは、実装するためにこの情報を使用します &lt;code&gt;SQLData.readSQL&lt;/code&gt; メソッドおよび &lt;code&gt;SQLData.writeSQL&lt;/code&gt; メソッドを。 &lt;code&gt;readSQL&lt;/code&gt; の方法は、適切な呼び出し &lt;code&gt;SQLInput&lt;/code&gt; から各属性を読み取るための方法を &lt;code&gt;SQLInput&lt;/code&gt; インタフェースのオブジェクト、および &lt;code&gt;writeSQL&lt;/code&gt; のメソッド呼び出し &lt;code&gt;SQLOutput&lt;/code&gt; 内を介してデータソースに各属性ライトバックする方法を &lt;code&gt;SQLOutput&lt;/code&gt; 内 オブジェクト。</target>
        </trans-unit>
        <trans-unit id="79b2876fa7f6a12217403d4a90454d9ad3a9bd7d" translate="yes" xml:space="preserve">
          <source>It is generally recommended that the gap buffer or piece table implementations be used instead. This buffer does not scale up to large sizes.</source>
          <target state="translated">一般的には、代わりにギャップバッファやピーステーブルの実装を使用することが推奨されます。このバッファは大きなサイズにはスケールアップしません。</target>
        </trans-unit>
        <trans-unit id="46baebe617e039353a7c9859b82bb0f1923931e3" translate="yes" xml:space="preserve">
          <source>It is generally the case, but</source>
          <target state="translated">一般的にはそうですが</target>
        </trans-unit>
        <trans-unit id="90d2544b80272107feb28bb7d373737dbc0383a8" translate="yes" xml:space="preserve">
          <source>It is generally true of all the reading routines in this class that if end-of-file is reached before the desired number of bytes has been read, an &lt;code&gt;EOFException&lt;/code&gt; (which is a kind of &lt;code&gt;IOException&lt;/code&gt;) is thrown. If any byte cannot be read for any reason other than end-of-file, an &lt;code&gt;IOException&lt;/code&gt; other than &lt;code&gt;EOFException&lt;/code&gt; is thrown. In particular, an &lt;code&gt;IOException&lt;/code&gt; may be thrown if the stream has been closed.</source>
          <target state="translated">通常、このクラスのすべての読み取りルーチンに当てはまります。目的のバイト数が読み取られる前にファイルの終わりに達すると、 &lt;code&gt;EOFException&lt;/code&gt; （一種の &lt;code&gt;IOException&lt;/code&gt; ）がスローされます。ファイルの終わり以外の理由でバイトを読み取ることができない &lt;code&gt;IOException&lt;/code&gt; 、 &lt;code&gt;EOFException&lt;/code&gt; 以外のIOExceptionがスローされます。特に、ストリームが閉じている場合は、 &lt;code&gt;IOException&lt;/code&gt; がスローされることがあります。</target>
        </trans-unit>
        <trans-unit id="b0cf998fa418b7c8509d4dd9e49ed9eed58f1459" translate="yes" xml:space="preserve">
          <source>It is generally true of all the reading routines in this interface that if end of file is reached before the desired number of bytes has been read, an &lt;code&gt;EOFException&lt;/code&gt; (which is a kind of &lt;code&gt;IOException&lt;/code&gt;) is thrown. If any byte cannot be read for any reason other than end of file, an &lt;code&gt;IOException&lt;/code&gt; other than &lt;code&gt;EOFException&lt;/code&gt; is thrown. In particular, an &lt;code&gt;IOException&lt;/code&gt; may be thrown if the input stream has been closed.</source>
          <target state="translated">一般に、このインターフェイスのすべての読み取りルーチンに当てはまります。目的のバイト数が読み取られる前にファイルの終わりに到達すると、 &lt;code&gt;EOFException&lt;/code&gt; （一種の &lt;code&gt;IOException&lt;/code&gt; ）がスローされます。ファイルの終わり以外の理由でバイトを読み取ることができない &lt;code&gt;IOException&lt;/code&gt; 、 &lt;code&gt;EOFException&lt;/code&gt; 以外のIOExceptionがスローされます。特に、入力ストリームが閉じている場合は、 &lt;code&gt;IOException&lt;/code&gt; がスローされることがあります。</target>
        </trans-unit>
        <trans-unit id="25c5ac17941888a55c31ebad0618407e60648181" translate="yes" xml:space="preserve">
          <source>It is good practice for a subclass that overrides this method to call the overridden method via &lt;code&gt;super.postRegister(...)&lt;/code&gt;. This is necessary if this object is an MXBean that is referenced by attributes or operations in other MXBeans.</source>
          <target state="translated">このメソッドをオーバーライドするサブクラスが、 &lt;code&gt;super.postRegister(...)&lt;/code&gt; を介してオーバーライドされたメソッドを呼び出すことをお勧めします。これは、このオブジェクトが他のMXBeanの属性または操作によって参照されるMXBeanである場合に必要です。</target>
        </trans-unit>
        <trans-unit id="024a68cefb8076150b0faef939d5abfd94c4b25a" translate="yes" xml:space="preserve">
          <source>It is good practice for a subclass that overrides this method to call the overridden method via &lt;code&gt;super.preDeregister(...)&lt;/code&gt;.</source>
          <target state="translated">このメソッドをオーバーライドするサブクラスが、 &lt;code&gt;super.preDeregister(...)&lt;/code&gt; を介してオーバーライドされたメソッドを呼び出すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="cbe5c25e7d41e90b13ce4ecc42684d5442dd917e" translate="yes" xml:space="preserve">
          <source>It is good practice for a subclass that overrides this method to call the overridden method via &lt;code&gt;super.preRegister(...)&lt;/code&gt;. This is necessary if this object is an MXBean that is referenced by attributes or operations in other MXBeans.</source>
          <target state="translated">このメソッドをオーバーライドするサブクラスが、 &lt;code&gt;super.preRegister(...)&lt;/code&gt; を介してオーバーライドされたメソッドを呼び出すことをお勧めします。これは、このオブジェクトが他のMXBeanの属性または操作によって参照されるMXBeanである場合に必要です。</target>
        </trans-unit>
        <trans-unit id="519e2c46de59aff87eef011359a88dd7c4a7770a" translate="yes" xml:space="preserve">
          <source>It is guaranteed that the returned set will only contain operation bits that are valid for this key's channel.</source>
          <target state="translated">返されるセットには、このキーのチャネルで有効な操作ビットのみが含まれることが保証されています。</target>
        </trans-unit>
        <trans-unit id="14e7ef0de2ce329c224eeddd089ee4645681161c" translate="yes" xml:space="preserve">
          <source>It is imperative that the user manually synchronize on the returned collection when traversing it via &lt;a href=&quot;iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator&quot;&gt;&lt;code&gt;Spliterator&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator&quot;&gt; &lt;code&gt;Spliterator&lt;/code&gt; 、&lt;/a&gt;または&lt;a href=&quot;stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; を&lt;/a&gt;介してトラバースする場合、ユーザーは返されたコレクションを手動で同期する必要があります。</target>
        </trans-unit>
        <trans-unit id="1196ca14f077e0297dec0dc7f90d22e6e35aab5f" translate="yes" xml:space="preserve">
          <source>It is imperative that the user manually synchronize on the returned list when iterating over it:</source>
          <target state="translated">返されたリストを繰り返し処理する際には、ユーザが手動で同期を取ることが必須です。</target>
        </trans-unit>
        <trans-unit id="42877587b477ca76705f5ee695fef03dd03abc76" translate="yes" xml:space="preserve">
          <source>It is imperative that the user manually synchronize on the returned list when traversing it via &lt;a href=&quot;iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator&quot;&gt;&lt;code&gt;Spliterator&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator&quot;&gt; &lt;code&gt;Spliterator&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; を&lt;/a&gt;介してリストをトラバースする場合、ユーザーは返されたリストを手動で同期する必要があります。</target>
        </trans-unit>
        <trans-unit id="7d98bf3ae757362cd4e06e3f97f870515e4c7479" translate="yes" xml:space="preserve">
          <source>It is imperative that the user manually synchronize on the returned map when iterating over any of its collection views:</source>
          <target state="translated">コレクション ビューのいずれかを反復処理する場合は、返されたマップを手動で同期化することが必須です。</target>
        </trans-unit>
        <trans-unit id="6e4f96ee6236bb0a76e582f14078c0880732940e" translate="yes" xml:space="preserve">
          <source>It is imperative that the user manually synchronize on the returned map when traversing any of its collection views via &lt;a href=&quot;iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator&quot;&gt;&lt;code&gt;Spliterator&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator&quot;&gt; &lt;code&gt;Spliterator&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; を&lt;/a&gt;介してコレクションビューのいずれかをトラバースする場合、ユーザーは返されたマップ上で手動で同期する必要があります。</target>
        </trans-unit>
        <trans-unit id="82f6718a94af412c236d043bdb07f4fa144337a8" translate="yes" xml:space="preserve">
          <source>It is imperative that the user manually synchronize on the returned navigable map when iterating over any of its collection views, or the collections views of any of its &lt;code&gt;subMap&lt;/code&gt;, &lt;code&gt;headMap&lt;/code&gt; or &lt;code&gt;tailMap&lt;/code&gt; views.</source>
          <target state="translated">コレクションビューのいずれか、またはその &lt;code&gt;subMap&lt;/code&gt; 、 &lt;code&gt;headMap&lt;/code&gt; 、または &lt;code&gt;tailMap&lt;/code&gt; ビューのいずれかのコレクションビューを反復する場合、ユーザーは返されたナビゲート可能なマップを手動で同期する必要があります。</target>
        </trans-unit>
        <trans-unit id="45a8463b6d982af55c8f0a106a8414f79b95e3e6" translate="yes" xml:space="preserve">
          <source>It is imperative that the user manually synchronize on the returned navigable map when traversing any of its collection views, or the collections views of any of its &lt;code&gt;subMap&lt;/code&gt;, &lt;code&gt;headMap&lt;/code&gt; or &lt;code&gt;tailMap&lt;/code&gt; views, via &lt;a href=&quot;iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator&quot;&gt;&lt;code&gt;Spliterator&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">それは、そのコレクションビュー、またはそのいずれかのコレクションビューのいずれかの通過時にユーザーが手動で返さ航行マップで同期をとる必要があり &lt;code&gt;subMap&lt;/code&gt; 、 &lt;code&gt;headMap&lt;/code&gt; か &lt;code&gt;tailMap&lt;/code&gt; を経由して、ビューを&lt;a href=&quot;iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator&quot;&gt; &lt;code&gt;Spliterator&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3cfad3b122e621de5270f99cf183ec5c6626cc73" translate="yes" xml:space="preserve">
          <source>It is imperative that the user manually synchronize on the returned navigable set when iterating over it or any of its &lt;code&gt;subSet&lt;/code&gt;, &lt;code&gt;headSet&lt;/code&gt;, or &lt;code&gt;tailSet&lt;/code&gt; views.</source>
          <target state="translated">ユーザーは、返されたナビゲート可能なセットまたはその &lt;code&gt;subSet&lt;/code&gt; 、 &lt;code&gt;headSet&lt;/code&gt; 、または &lt;code&gt;tailSet&lt;/code&gt; ビューを反復処理するときに、手動で同期する必要があります。</target>
        </trans-unit>
        <trans-unit id="93a94c2cfce1c501fd6bea7793192bfd11ec4d62" translate="yes" xml:space="preserve">
          <source>It is imperative that the user manually synchronize on the returned navigable set when traversing it, or any of its &lt;code&gt;subSet&lt;/code&gt;, &lt;code&gt;headSet&lt;/code&gt;, or &lt;code&gt;tailSet&lt;/code&gt; views, via &lt;a href=&quot;iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator&quot;&gt;&lt;code&gt;Spliterator&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">ユーザーは、返されたナビゲート可能なセット、またはその &lt;code&gt;subSet&lt;/code&gt; 、 &lt;code&gt;headSet&lt;/code&gt; 、 &lt;code&gt;tailSet&lt;/code&gt; ビューのいずれかを、&lt;a href=&quot;iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator&quot;&gt; &lt;code&gt;Spliterator&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; を&lt;/a&gt;介して手動で同期する必要があります。</target>
        </trans-unit>
        <trans-unit id="d4746905a868032bc70513a545044b51a706296b" translate="yes" xml:space="preserve">
          <source>It is imperative that the user manually synchronize on the returned set when iterating over it:</source>
          <target state="translated">返されたセットを繰り返し処理する際には,ユーザが手動で同期をとることが必須です.</target>
        </trans-unit>
        <trans-unit id="14e8c11b7e4e2dd6a1cdb7a9d87d08e72a2170f4" translate="yes" xml:space="preserve">
          <source>It is imperative that the user manually synchronize on the returned sorted map when iterating over any of its collection views, or the collections views of any of its &lt;code&gt;subMap&lt;/code&gt;, &lt;code&gt;headMap&lt;/code&gt; or &lt;code&gt;tailMap&lt;/code&gt; views.</source>
          <target state="translated">コレクションビュー、またはその &lt;code&gt;subMap&lt;/code&gt; 、 &lt;code&gt;headMap&lt;/code&gt; 、または &lt;code&gt;tailMap&lt;/code&gt; ビューのいずれかのコレクションビューを反復する場合、ユーザーは返されたソート済みマップを手動で同期する必要があります。</target>
        </trans-unit>
        <trans-unit id="6ef347f0e584191448dc3812f60c9a8515c102c9" translate="yes" xml:space="preserve">
          <source>It is imperative that the user manually synchronize on the returned sorted map when traversing any of its collection views, or the collections views of any of its &lt;code&gt;subMap&lt;/code&gt;, &lt;code&gt;headMap&lt;/code&gt; or &lt;code&gt;tailMap&lt;/code&gt; views, via &lt;a href=&quot;iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator&quot;&gt;&lt;code&gt;Spliterator&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">それは、そのコレクションビュー、またはそのいずれかのコレクションビューのいずれかの通過時にユーザーが手動で返されたソートマップで同期をとる必要があり &lt;code&gt;subMap&lt;/code&gt; 、 &lt;code&gt;headMap&lt;/code&gt; か &lt;code&gt;tailMap&lt;/code&gt; を経由して、ビューを&lt;a href=&quot;iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator&quot;&gt; &lt;code&gt;Spliterator&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="80bfa0a8b5db6f0341e29c555014c90fecd50667" translate="yes" xml:space="preserve">
          <source>It is imperative that the user manually synchronize on the returned sorted set when iterating over it or any of its &lt;code&gt;subSet&lt;/code&gt;, &lt;code&gt;headSet&lt;/code&gt;, or &lt;code&gt;tailSet&lt;/code&gt; views.</source>
          <target state="translated">ユーザーは、返されたソートされたセット、またはその &lt;code&gt;subSet&lt;/code&gt; 、 &lt;code&gt;headSet&lt;/code&gt; 、または &lt;code&gt;tailSet&lt;/code&gt; ビューを反復処理するときに、ユーザーが手動で同期する必要があります。</target>
        </trans-unit>
        <trans-unit id="02d9d1e09c066c84b59665853f8f35daa49ca5c6" translate="yes" xml:space="preserve">
          <source>It is imperative that the user manually synchronize on the returned sorted set when traversing it or any of its &lt;code&gt;subSet&lt;/code&gt;, &lt;code&gt;headSet&lt;/code&gt;, or &lt;code&gt;tailSet&lt;/code&gt; views via &lt;a href=&quot;iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator&quot;&gt;&lt;code&gt;Spliterator&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator&quot;&gt; &lt;code&gt;Spliterator&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; を&lt;/a&gt;介して、ユーザーが返されたソート済みセットまたはその &lt;code&gt;subSet&lt;/code&gt; 、 &lt;code&gt;headSet&lt;/code&gt; 、または &lt;code&gt;tailSet&lt;/code&gt; ビューのいずれかをトラバースするときに、手動で同期することが不可欠です。</target>
        </trans-unit>
        <trans-unit id="ea7dfef3738020f8ba5e392d8469daa0e2caeb9f" translate="yes" xml:space="preserve">
          <source>It is implementation specific as to whether creating a layer with this method is an atomic operation or not. Consequentially it is possible for this method to fail with some modules, but not all, defined to the Java virtual machine.</source>
          <target state="translated">このメソッドでレイヤーを作成することがアトミックな操作であるかどうかは、実装に依存します。結果的に、このメソッドはJava仮想マシンに定義されているモジュールの中には失敗する可能性がありますが、すべてではありません。</target>
        </trans-unit>
        <trans-unit id="1c9120fc8ca0641894297e84f422a77b90cd38e5" translate="yes" xml:space="preserve">
          <source>It is implementation specific if all file attributes are read as an atomic operation with respect to other file system operations.</source>
          <target state="translated">すべてのファイル属性が他のファイルシステム操作に関連してアトミック操作として読み込まれる場合は、実装に依存します。</target>
        </trans-unit>
        <trans-unit id="3aa37b03c61de6cff5a47c4d5ddb82c647c8f595" translate="yes" xml:space="preserve">
          <source>It is implementation specific if the attribute can be updated as an atomic operation with respect to other file system operations. An implementation may, for example, require to read the existing value of the DOS attribute in order to update this attribute.</source>
          <target state="translated">属性が他のファイル システム操作に関連してアトミック操作として更新できる場合、それは実装固有のものです。実装では、例えば、この属性を更新するために、DOS属性の既存の値を読み取る必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="ebafab6aa5f1faf6fbbc496b38983f2bfc5050ee" translate="yes" xml:space="preserve">
          <source>It is implementation specific if the file owner can be a &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;group&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ファイル所有者が&lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;group&lt;/code&gt; &lt;/a&gt;なることができるかどうかは、実装固有です。</target>
        </trans-unit>
        <trans-unit id="45115bf6bf4bcb3dcfa7a9c7514b114daa66fdd4" translate="yes" xml:space="preserve">
          <source>It is implementation specific if the file owner can be a &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;group&lt;/code&gt;&lt;/a&gt;. To ensure consistent and correct behavior across platforms it is recommended that this method should only be used to set the file owner to a user principal that is not a group.</source>
          <target state="translated">ファイル所有者が&lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;group&lt;/code&gt; &lt;/a&gt;なることができるかどうかは、実装固有です。プラットフォーム間で一貫した正しい動作を保証するために、このメソッドは、ファイル所有者をグループではないユーザープリンシパルに設定する場合にのみ使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="07f0500d1475d9e70c5ceee649e512f286bdb93a" translate="yes" xml:space="preserve">
          <source>It is implementation specific whether ProcessHandles with the same PID represent the same system process. ProcessHandle implementations should contain additional information to uniquely identify the process. For example, the start time of the process could be used to determine if the PID has been re-used. The implementation of &lt;code&gt;equals&lt;/code&gt; should return &lt;code&gt;true&lt;/code&gt; for two ProcessHandles with the same PID unless there is information to distinguish them.</source>
          <target state="translated">同じPIDを持つProcessHandlesが同じシステムプロセスを表すかどうかは、実装によって異なります。 ProcessHandleの実装には、プロセスを一意に識別するための追加情報が含まれている必要があります。たとえば、プロセスの開始時刻を使用して、PIDが再利用されたかどうかを判断できます。 &lt;code&gt;equals&lt;/code&gt; の実装は、それらを区別するための情報がない限り、同じPIDを持つ2つのProcessHandlesに対して &lt;code&gt;true&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="98e113797ba87757a8ee56ec5c92e01e42868ba0" translate="yes" xml:space="preserve">
          <source>It is implementation-dependent when environment properties are used and/or verified for validity. For example, some of the security-related properties are used by service providers to &quot;log in&quot; to the directory. This login process might occur at the time the context is created, or the first time a method is invoked on the context. When, and whether this occurs at all, is implementation-dependent. When environment properties are added or removed from the context, verifying the validity of the changes is again implementation-dependent. For example, verification of some properties might occur at the time the change is made, or at the time the next operation is performed on the context, or not at all.</source>
          <target state="translated">環境プロパティが使用されたり、有効性が検証されたりする場合は、実装に依存します。例えば、セキュリティ関連のプロパティの中には、サービスプロバイダがディレクトリに「ログイン」するために使用するものがあります。このログインプロセスは、コンテキストが作成されたときに発生するかもしれませんし、コンテキスト上で最初にメソッドが呼び出されたときに発生するかもしれません。これがいつ、あるいは全く発生するかどうかは、実装に依存します。環境プロパティがコンテキストに追加されたり削除されたりした場合、その変更の有効性の検証も実装に依存します。例えば、いくつかのプロパティの検証は、変更が行われた時に行われるかもしれませんし、コンテキスト上で次の操作が行われた時に行われるかもしれませんし、全く行われないかもしれません。</target>
        </trans-unit>
        <trans-unit id="9bb4743d91cbb39d3a1727f0086823793242af14" translate="yes" xml:space="preserve">
          <source>It is implied that the specified image is presented on the screen &quot;as is&quot;, i.e. preserving the exact color values as specified in the image file. Under certain circumstances, though, the presented image may differ, e.g. when applying color dithering to present a 32 bits per pixel (bpp) image on a 16 or 8 bpp screen. The native platform display configuration may also affect the colors of the displayed image (e.g. color profiles, etc.)</source>
          <target state="translated">これは、指定された画像が画面上に「そのまま」表示されることを意味します。しかし、特定の状況下では、表示される画像が異なる場合があります。例えば、カラーディザリングを適用してピクセルあたり32ビット(bpp)の画像を16または8bppのスクリーンに表示する場合などです。ネイティブプラットフォームのディスプレイ構成は、表示される画像の色にも影響を与えることがあります(カラープロファイルなど)。</target>
        </trans-unit>
        <trans-unit id="ce61732a5d16e16f25e698a1f46a972899540aab" translate="yes" xml:space="preserve">
          <source>It is important for applications to call this method when they know they will no longer be using this &lt;code&gt;ImageReader&lt;/code&gt;. Otherwise, the reader may continue to hold on to resources indefinitely.</source>
          <target state="translated">アプリケーションがこの &lt;code&gt;ImageReader&lt;/code&gt; をもう使用しないことがわかっているときに、アプリケーションがこのメソッドを呼び出すことが重要です。そうしないと、読者はリソースを無期限に保持し続ける可能性があります。</target>
        </trans-unit>
        <trans-unit id="40fee2c716478af0e23ea171483e6f4a8522c1bf" translate="yes" xml:space="preserve">
          <source>It is important for applications to call this method when they know they will no longer be using this &lt;code&gt;ImageWriter&lt;/code&gt;. Otherwise, the writer may continue to hold on to resources indefinitely.</source>
          <target state="translated">アプリケーションがこの &lt;code&gt;ImageWriter&lt;/code&gt; を使用しないことがわかっている場合、アプリケーションがこのメソッドを呼び出すことが重要です。そうしないと、ライターは無期限にリソースを保持し続ける可能性があります。</target>
        </trans-unit>
        <trans-unit id="d50816430f03de40471f1e9d363426201e32cebf" translate="yes" xml:space="preserve">
          <source>It is important that the state of the object not be disturbed in order that other &lt;code&gt;ImageReaderSpi&lt;/code&gt;s can properly determine whether they are able to decode the object. In particular, if the source is an &lt;code&gt;ImageInputStream&lt;/code&gt;, a &lt;code&gt;mark&lt;/code&gt;/&lt;code&gt;reset&lt;/code&gt; pair should be used to preserve the stream position.</source>
          <target state="translated">他の &lt;code&gt;ImageReaderSpi&lt;/code&gt; がオブジェクトをデコードできるかどうかを適切に判断できるように、オブジェクトの状態が乱されないことが重要です。ソースがある場合、特に、 &lt;code&gt;ImageInputStream&lt;/code&gt; が、 &lt;code&gt;mark&lt;/code&gt; / &lt;code&gt;reset&lt;/code&gt; ペアは、ストリーム位置を保持するために使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="aa5ae886a3f832d7012f81c4902863e6894b77dd" translate="yes" xml:space="preserve">
          <source>It is important to be aware of the limitations of this class. Only the minimum and maximum values are provided. It is possible for there to be invalid values within the outer range. For example, a weird field may have valid values of 1, 2, 4, 6, 7, thus have a range of '1 - 7', despite that fact that values 3 and 5 are invalid.</source>
          <target state="translated">このクラスの限界を認識しておくことが重要です。最小値と最大値のみが提供されています。外側の範囲内に無効な値が存在する可能性があります。例えば、ある奇妙なフィールドは1,2,4,6,7の有効な値を持ち、値3と5が無効であるにもかかわらず、'1-7'の範囲を持っているかもしれません。</target>
        </trans-unit>
        <trans-unit id="ef66f34399bdf58608186fa40f28622dce315210" translate="yes" xml:space="preserve">
          <source>It is important to consider both the origin and the valid lifetime of a &lt;code&gt;RowId&lt;/code&gt; when comparing it to another &lt;code&gt;RowId&lt;/code&gt;. If both are valid, and both are from the same table on the same data source, then if they are equal they identify the same row; if one or more is no longer guaranteed to be valid, or if they originate from different data sources, or different tables on the same data source, they may be equal but still not identify the same row.</source>
          <target state="translated">&lt;code&gt;RowId&lt;/code&gt; を別の &lt;code&gt;RowId&lt;/code&gt; と比較するときは、RowIdの起点と有効期間の両方を考慮することが重要です。両方が有効で、両方が同じデータソースの同じテーブルからのものである場合、それらが等しい場合、それらは同じ行を識別します。 1つ以上が有効であることが保証されなくなった場合、またはそれらが異なるデータソース、または同じデータソース上の異なるテーブルから発生した場合、それらは等しい可能性がありますが、それでも同じ行を識別しません。</target>
        </trans-unit>
        <trans-unit id="1f9356c17324f0fb7342efa1a5c1a5962d770fd2" translate="yes" xml:space="preserve">
          <source>It is important to note that only AWT listeners which conform to the &lt;code&gt;Serializable&lt;/code&gt; protocol will be saved when the object is stored. If an AWT object has listeners that aren't marked serializable, they will be dropped at &lt;code&gt;writeObject&lt;/code&gt; time. Developers will need, as always, to consider the implications of making an object serializable. One situation to watch out for is this:</source>
          <target state="translated">オブジェクトが格納されるときに、 &lt;code&gt;Serializable&lt;/code&gt; プロトコルに準拠するAWTリスナーのみが保存されることに注意することが重要です。 AWTオブジェクトに、シリアル化可能とマークされていないリスナーがある場合、それらは &lt;code&gt;writeObject&lt;/code&gt; 時にドロップされます。開発者は、いつものように、オブジェクトをシリアライズ可能にすることの意味を考慮する必要があります。注意すべき1つの状況はこれです：</target>
        </trans-unit>
        <trans-unit id="480acf0c5ca42043318539f992c96b37e3e26c56" translate="yes" xml:space="preserve">
          <source>It is important to note that the equations defined by the Porter and Duff paper are all defined to operate on color components that are premultiplied by their corresponding alpha components. Since the &lt;code&gt;ColorModel&lt;/code&gt; and &lt;code&gt;Raster&lt;/code&gt; classes allow the storage of pixel data in either premultiplied or non-premultiplied form, all input data must be normalized into premultiplied form before applying the equations and all results might need to be adjusted back to the form required by the destination before the pixel values are stored.</source>
          <target state="translated">ポーターとダフの論文で定義された方程式はすべて、対応するアルファ成分が事前に乗算された色成分で動作するように定義されていることに注意することが重要です。以来、 &lt;code&gt;ColorModel&lt;/code&gt; と &lt;code&gt;Raster&lt;/code&gt; クラスのいずれかあらかじめ乗算または非あらかじめ乗算形式の画素データの記憶を可能にする、すべての入力データが方程式を適用する前にあらかじめ乗算形式に正規化されなければならず、すべての結果は、先によって要求される形式に戻って調整する必要があるかもしれませんピクセル値が保存される前。</target>
        </trans-unit>
        <trans-unit id="47c5282fbf4ef78a1f3c79e6d9e140447b309a2c" translate="yes" xml:space="preserve">
          <source>It is important to note that there are certain interactions between the different GSS-API objects that are created by a GSSManager, where the provider that is used for a particular mechanism might need to be consistent across all objects. For instance, if a GSSCredential contains elements from a provider</source>
          <target state="translated">GSSManagerによって作成される異なるGSS-APIオブジェクト間には、特定のメカニズムに使用されるプロバイダがすべてのオブジェクト間で一貫している必要があるかもしれない、特定の相互作用があることに注意することが重要です。例えば、GSSCredentialにプロバイダの要素が含まれている場合</target>
        </trans-unit>
        <trans-unit id="9c3cefe0ff9aa27ed010f0211395f677fe6adf4d" translate="yes" xml:space="preserve">
          <source>It is intended that &lt;code&gt;ZonedDateTime&lt;/code&gt; or &lt;code&gt;Instant&lt;/code&gt; is used to model data in simpler applications. This class may be used when modeling date-time concepts in more detail, or when communicating to a database or in a network protocol.</source>
          <target state="translated">&lt;code&gt;ZonedDateTime&lt;/code&gt; または &lt;code&gt;Instant&lt;/code&gt; を使用して、より単純なアプリケーションでデータをモデル化することを目的としています。このクラスは、日時の概念をより詳細にモデル化する場合、またはデータベースやネットワークプロトコルで通信する場合に使用できます。</target>
        </trans-unit>
        <trans-unit id="7a0a7455bb2a52cc412dc380379b015bf9366aed" translate="yes" xml:space="preserve">
          <source>It is intended that applications use the main API whenever possible, including code to read and write from a persistent data store, such as a database, and to send dates and times across a network. The &quot;chrono&quot; classes are then used at the user interface level to deal with localized input/output. See &lt;a href=&quot;chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt; for a full discussion of the issues.</source>
          <target state="translated">アプリケーションは、データベースなどの永続的なデータストアからの読み取りや書き込み、ネットワーク経由での日付と時刻の送信など、可能な限りメインAPIを使用することを目的としています。次に、「クロノ」クラスがユーザーインターフェイスレベルで使用され、ローカライズされた入出力を処理します。問題の詳細については、&lt;a href=&quot;chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9a3a7da8bf5cfdacc4716ed28d02c69781046bb5" translate="yes" xml:space="preserve">
          <source>It is legal to seek past the end of the file; a &lt;code&gt;java.io.EOFException&lt;/code&gt; will be thrown only if a read is performed.</source>
          <target state="translated">ファイルの終わりを超えてシークすることは合法です。 &lt;code&gt;java.io.EOFException&lt;/code&gt; はリードを行う場合にのみスローされます。</target>
        </trans-unit>
        <trans-unit id="bdcfb5c529b23e7ed05878107d54a2f97517774f" translate="yes" xml:space="preserve">
          <source>It is legal to seek past the end of the file; an &lt;code&gt;java.io.EOFException&lt;/code&gt; will be thrown only if a read is performed.</source>
          <target state="translated">ファイルの終わりを超えてシークすることは合法です。 &lt;code&gt;java.io.EOFException&lt;/code&gt; はリードを行う場合にのみスローされます。</target>
        </trans-unit>
        <trans-unit id="456f9c89af10d26bd2b0d9505f000d70fd835f60" translate="yes" xml:space="preserve">
          <source>It is meant to be used in conjunction with a FilteredImageSource object to produce scaled versions of existing images. Due to implementation dependencies, there may be differences in pixel values of an image filtered on different platforms.</source>
          <target state="translated">これは、既存の画像の縮小版を作成するために FilteredImageSource オブジェクトと組み合わせて使用することを意図しています。実装に依存するため、異なるプラットフォーム上でフィルタリングされた画像のピクセル値には違いがあるかもしれません。</target>
        </trans-unit>
        <trans-unit id="856b811ed9c9f1aa36a9508f0c4f8c3f6b7f6cae" translate="yes" xml:space="preserve">
          <source>It is necessary for a WritableRenderedImage to ensure that notifications occur only when the first writer acquires a tile and the last writer releases it.</source>
          <target state="translated">WritableRenderedImageでは、最初のライタがタイルを取得し、最後のライタがタイルを解放したときにのみ通知が発生するようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="724424dd17ebba58693e0ba99059c945c6e19bf0" translate="yes" xml:space="preserve">
          <source>It is necessary to invoke this method before reusing the Namespace support object for a new session. If namespace declaration URIs are to be supported, that flag must also be set to a non-default value.</source>
          <target state="translated">新しいセッションで名前空間サポートオブジェクトを再利用する前に、このメソッドを呼び出す必要があります。名前空間宣言URIをサポートする場合は、そのフラグもデフォルト以外の値に設定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="fdadfe0e10463e1b0bc7d5f252a5534341dae7f5" translate="yes" xml:space="preserve">
          <source>It is never legal to start a thread more than once. In particular, a thread may not be restarted once it has completed execution.</source>
          <target state="translated">スレッドを複数回起動することは決して合法ではありません。特に、スレッドの実行が完了した後にスレッドを再起動することはできません。</target>
        </trans-unit>
        <trans-unit id="c501ca4fe0cc1c0ba3dcaf6270a71dbd1654000b" translate="yes" xml:space="preserve">
          <source>It is not a requirement to return an immutable (unmodifiable) &lt;code&gt;List&lt;/code&gt;. However, the returned &lt;code&gt;List&lt;/code&gt; must not be mutated after it has been returned by &lt;code&gt;getCandidateLocales&lt;/code&gt;.</source>
          <target state="translated">不変（変更不可） &lt;code&gt;List&lt;/code&gt; を返すことは必須ではありません。ただし、 &lt;code&gt;getCandidateLocales&lt;/code&gt; によって返された後、返された &lt;code&gt;List&lt;/code&gt; はなりません。</target>
        </trans-unit>
        <trans-unit id="4a5a7433628f01e8fef4d359e931e7a68162d0ad" translate="yes" xml:space="preserve">
          <source>It is not a requirement to return an immutable (unmodifiable) &lt;code&gt;List&lt;/code&gt;. However, the returned &lt;code&gt;List&lt;/code&gt; must not be mutated after it has been returned by &lt;code&gt;getFormats&lt;/code&gt;.</source>
          <target state="translated">不変（変更不可） &lt;code&gt;List&lt;/code&gt; を返すことは必須ではありません。ただし、 &lt;code&gt;getFormats&lt;/code&gt; によって返された後、返された &lt;code&gt;List&lt;/code&gt; はなりません。</target>
        </trans-unit>
        <trans-unit id="59f5bc70fe5e3b84442ff4bb21a08b0c86f7eb5c" translate="yes" xml:space="preserve">
          <source>It is not illegal for the MBean to send notifications not described in this array. However, some clients of the MBean server may depend on the array being complete for their correct functioning.</source>
          <target state="translated">MBean がこの配列に記載されていない通知を送信することは違法ではありません。しかし、MBean サーバのクライアントの中には、正しく機能するために配列が完全であることに依存しているものがあります。</target>
        </trans-unit>
        <trans-unit id="4a93cda604d9136e63232540aeb4f64efddaf382" translate="yes" xml:space="preserve">
          <source>It is not recommended to compare the return value of this method using &lt;code&gt;==&lt;/code&gt; because new modifiers can be added in the future. For example, the appropriate way to check that SHIFT and BUTTON1 are down, but CTRL is up is demonstrated by the following code:</source>
          <target state="translated">将来新しい修飾子が追加される可能性があるため、 &lt;code&gt;==&lt;/code&gt; を使用してこのメ​​ソッドの戻り値を比較することはお勧めしません。たとえば、SHIFTとBUTTON1がダウンしているが、CTRLがアップしていることを確認する適切な方法は、次のコードで示されています。</target>
        </trans-unit>
        <trans-unit id="25580d255b727bb71fc3f6f27493abef79a040a0" translate="yes" xml:space="preserve">
          <source>It is often necessary to associate some application-specific data with a selection key, for example an object that represents the state of a higher-level protocol and handles readiness notifications in order to implement that protocol. Selection keys therefore support the</source>
          <target state="translated">アプリケーション固有のデータを選択キーに関連付ける必要があることがよくあります。例えば、上位プロトコルの状態を表すオブジェクトや、そのプロトコルを実装するための準備完了通知を処理するオブジェクトなどです。そのため、選択キーは</target>
        </trans-unit>
        <trans-unit id="4289807df5a23e5c0a600279e6c1ebf23e58da33" translate="yes" xml:space="preserve">
          <source>It is overridden in this class for documentation purposes only. See &lt;code&gt;ReferralException&lt;/code&gt; for how to use this method.</source>
          <target state="translated">このクラスでは、文書化の目的でのみオーバーライドされます。このメソッドの使用方法については、 &lt;code&gt;ReferralException&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="c2b7d8b3ee63d3752ec592e894516b4905759fd1" translate="yes" xml:space="preserve">
          <source>It is permitted to stop a thread that has not yet been started. If the thread is eventually started, it immediately terminates.</source>
          <target state="translated">まだ始まっていないスレッドを停止させることは許されています。最終的にスレッドが開始された場合、そのスレッドは直ちに終了します。</target>
        </trans-unit>
        <trans-unit id="679d770ea3f561b99b0cd302deffebdd4712c31c" translate="yes" xml:space="preserve">
          <source>It is possible for any disconnected or connected &lt;code&gt;RowSet&lt;/code&gt; object to be populated from an SQL query that is formulated originally from an SQL &lt;code&gt;VIEW&lt;/code&gt;. While in many cases it is possible for an update to be performed to an underlying view, such an update requires additional metadata, which may vary. The &lt;code&gt;SyncProvider&lt;/code&gt; class provides two constants to indicate whether an implementation supports updating an SQL &lt;code&gt;VIEW&lt;/code&gt;.</source>
          <target state="translated">任意の切断または接続されことが可能である &lt;code&gt;RowSet&lt;/code&gt; オブジェクトがSQLから元々処方されるSQLクエリから移入する &lt;code&gt;VIEW&lt;/code&gt; 。多くの場合、基になるビューに対して更新を実行することは可能ですが、そのような更新には追加のメタデータが必要であり、それは異なる場合があります。 &lt;code&gt;SyncProvider&lt;/code&gt; クラスは、実装がサポートするSQLの更新をするかどうかを示すために、2つの定数を提供 &lt;code&gt;VIEW&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="94151f03805eee7a1bf3ba440413e804fc622aa9" translate="yes" xml:space="preserve">
          <source>It is possible for intermediate sums of finite values to overflow into opposite-signed infinities; if that occurs, the final sum will be NaN even if the elements are all finite. If all the elements are zero, the sign of zero is &lt;em&gt;not&lt;/em&gt; guaranteed to be preserved in the final sum.</source>
          <target state="translated">有限値の中間和が反対符号の無限大にオーバーフローする可能性があります。その場合、要素がすべて有限であっても、最終的な合計はNaNになります。すべての要素がゼロの場合、ゼロの符号が最終的な合計に保持されるとは&lt;em&gt;限りませ&lt;/em&gt;ん。</target>
        </trans-unit>
        <trans-unit id="5148ff2f268368654832fb6e5d7865208b416315" translate="yes" xml:space="preserve">
          <source>It is possible for intermediate sums of finite values to overflow into opposite-signed infinities; if that occurs, the final sum will be NaN even if the recorded values are all finite. If all the recorded values are zero, the sign of zero is &lt;em&gt;not&lt;/em&gt; guaranteed to be preserved in the final sum.</source>
          <target state="translated">有限値の中間和が反対符号の無限大にオーバーフローする可能性があります。その場合、記録された値がすべて有限であっても、最終的な合計はNaNになります。記録されたすべての値がゼロの場合、ゼロの符号が最終的な合計に保持されるとは&lt;em&gt;限りませ&lt;/em&gt;ん。</target>
        </trans-unit>
        <trans-unit id="2895d40257c157fe5abb7ea3f48657b9dcad5d5f" translate="yes" xml:space="preserve">
          <source>It is possible for the &lt;code&gt;nextSequenceNumber&lt;/code&gt; to be less than the &lt;code&gt;earliestSequenceNumber&lt;/code&gt;. This signifies that notifications between the two might have been lost.</source>
          <target state="translated">ことが可能です &lt;code&gt;nextSequenceNumber&lt;/code&gt; がより小さくなるように &lt;code&gt;earliestSequenceNumber&lt;/code&gt; 。これは、2つの間の通知が失われた可能性があることを示しています。</target>
        </trans-unit>
        <trans-unit id="1bc1ee79b199bb2f7c9428073c6dcc9ea188f910" translate="yes" xml:space="preserve">
          <source>It is possible for third parties to define additional logging levels by subclassing Level. In such cases subclasses should take care to chose unique integer level values and to ensure that they maintain the Object uniqueness property across serialization by defining a suitable readResolve method.</source>
          <target state="translated">サードパーティがLevelをサブクラス化して追加のロギング・レベルを定義することは可能です。そのような場合、サブクラスは一意の整数レベル値を選択するように注意し、適切な readResolve メソッドを定義することで、シリアライゼーション全体にわたって Object uniqueness プロパティを維持するようにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="53f5de1fd38614f6cee804e677baec6d09689417" translate="yes" xml:space="preserve">
          <source>It is possible that more than one instance of parameters may be generated by a given central authority, and that there may be more than one central authority. Indeed, each individual may be its own central authority, with different entities having different parameters.</source>
          <target state="translated">パラメータの複数のインスタンスが与えられた中央機関によって生成される可能性があり、複数の中央機関が存在する可能性があります。実際、各個人はそれ自身の中央機関であり、異なるエンティティが異なるパラメータを持つことがあります。</target>
        </trans-unit>
        <trans-unit id="36714af21bbc28ae9ba8d296a1852553e1fe18ef" translate="yes" xml:space="preserve">
          <source>It is possible that the aborting and releasing of the resources that are held by the connection can take an extended period of time. When the &lt;code&gt;abort&lt;/code&gt; method returns, the connection will have been marked as closed and the &lt;code&gt;Executor&lt;/code&gt; that was passed as a parameter to abort may still be executing tasks to release resources.</source>
          <target state="translated">接続によって保持されているリソースの中止と解放には、長時間かかる可能性があります。とき &lt;code&gt;abort&lt;/code&gt; メソッドが戻ると、接続が閉じられたとしてマークされているでしょうし、 &lt;code&gt;Executor&lt;/code&gt; 中止にパラメータとして渡された、まだリソースを解放するためにタスクを実行することができます。</target>
        </trans-unit>
        <trans-unit id="cb416b402a640d561021c2f1ce01a8fcb4334bb1" translate="yes" xml:space="preserve">
          <source>It is possible that the underlying synthesizer does not support a specific bank, or program. In order to verify that a call to &lt;code&gt;programChange&lt;/code&gt; was successful, use &lt;code&gt;getProgram&lt;/code&gt; and &lt;code&gt;getController&lt;/code&gt;. Since banks are changed by way of control changes, you can verify the current bank with the following statement:</source>
          <target state="translated">基盤となるシンセサイザーが特定のバンクまたはプログラムをサポートしていない可能性があります。 &lt;code&gt;programChange&lt;/code&gt; の呼び出しが成功したことを確認するには、 &lt;code&gt;getProgram&lt;/code&gt; と &lt;code&gt;getController&lt;/code&gt; を使用します。銀行は管理変更によって変更されるため、次のステートメントで現在の銀行を確認できます。</target>
        </trans-unit>
        <trans-unit id="ee8de443b75d9acbf0bd260a3e1bd931e0010307" translate="yes" xml:space="preserve">
          <source>It is possible that the underlying synthesizer does not support a specific controller message. In order to verify that a call to &lt;code&gt;controlChange&lt;/code&gt; was successful, use &lt;code&gt;getController&lt;/code&gt;.</source>
          <target state="translated">基盤となるシンセサイザーが特定のコントローラーメッセージをサポートしていない可能性があります。 &lt;code&gt;controlChange&lt;/code&gt; の呼び出しが成功したことを確認するには、getControllerを使用し &lt;code&gt;getController&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5c5b697480a2314f36efcfd53a14c618dc40335" translate="yes" xml:space="preserve">
          <source>It is possible that the underlying synthesizer does not support a specific program. In order to verify that a call to &lt;code&gt;programChange&lt;/code&gt; was successful, use &lt;code&gt;getProgram&lt;/code&gt;.</source>
          <target state="translated">基盤となるシンセサイザーが特定のプログラムをサポートしていない可能性があります。 &lt;code&gt;programChange&lt;/code&gt; の呼び出しが成功したことを確認するには、 &lt;code&gt;getProgram&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="6a72b906c8510347e865790ea96275943a0c4004" translate="yes" xml:space="preserve">
          <source>It is possible that the underlying synthesizer does not support local control. In order to verify that a call to &lt;code&gt;localControl&lt;/code&gt; was successful, check the return value.</source>
          <target state="translated">基盤となるシンセサイザーがローカル制御をサポートしていない可能性があります。 &lt;code&gt;localControl&lt;/code&gt; の呼び出しが成功したことを確認するには、戻り値を確認してください。</target>
        </trans-unit>
        <trans-unit id="537dbf85ecda162b4ee09160a64b2a413746a97b" translate="yes" xml:space="preserve">
          <source>It is possible that the underlying synthesizer does not support mono mode. In order to verify that a call to &lt;code&gt;setMono&lt;/code&gt; was successful, use &lt;code&gt;getMono&lt;/code&gt;.</source>
          <target state="translated">基盤となるシンセサイザーがモノモードをサポートしていない可能性があります。 &lt;code&gt;setMono&lt;/code&gt; の呼び出しが成功したことを確認するには、getMonoを使用し &lt;code&gt;getMono&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="20ed0f84a37093d83a667ddc8bc1b32e0249e794" translate="yes" xml:space="preserve">
          <source>It is possible that the underlying synthesizer does not support muting channels. In order to verify that a call to &lt;code&gt;setMute&lt;/code&gt; was successful, use &lt;code&gt;getMute&lt;/code&gt;.</source>
          <target state="translated">基盤となるシンセサイザーがミューティングチャネルをサポートしていない可能性があります。 &lt;code&gt;setMute&lt;/code&gt; の呼び出しが成功したことを確認するには、getMuteを使用し &lt;code&gt;getMute&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e84f38db1b4a0f8e910d4c56a5872bf89e799f6" translate="yes" xml:space="preserve">
          <source>It is possible that the underlying synthesizer does not support omni mode. In order to verify that &lt;code&gt;setOmni&lt;/code&gt; was successful, use &lt;code&gt;getOmni&lt;/code&gt;.</source>
          <target state="translated">基盤となるシンセサイザーがオムニモードをサポートしていない可能性があります。 &lt;code&gt;setOmni&lt;/code&gt; が成功したことを確認するには、getOmniを使用し &lt;code&gt;getOmni&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0952bc2be4c55824d42f81b663bd407ca7e1f915" translate="yes" xml:space="preserve">
          <source>It is possible that the underlying synthesizer does not support solo channels. In order to verify that a call to &lt;code&gt;setSolo&lt;/code&gt; was successful, use &lt;code&gt;getSolo&lt;/code&gt;.</source>
          <target state="translated">基盤となるシンセサイザーがソロチャンネルをサポートしていない可能性があります。 &lt;code&gt;setSolo&lt;/code&gt; の呼び出しが成功したことを確認するには、getSoloを使用し &lt;code&gt;getSolo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19a3c920ffdddad317f3d26193770577ff0a6f60" translate="yes" xml:space="preserve">
          <source>It is possible that the underlying synthesizer does not support this MIDI message. In order to verify that &lt;code&gt;setChannelPressure&lt;/code&gt; was successful, use &lt;code&gt;getChannelPressure&lt;/code&gt;.</source>
          <target state="translated">基盤となるシンセサイザーがこのMIDIメッセージをサポートしていない可能性があります。 &lt;code&gt;setChannelPressure&lt;/code&gt; が成功したことを確認するには、 &lt;code&gt;getChannelPressure&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="b723ef89e6a2ff3095f7170dd1c7a4b3717e976f" translate="yes" xml:space="preserve">
          <source>It is possible that the underlying synthesizer does not support this MIDI message. In order to verify that &lt;code&gt;setPitchBend&lt;/code&gt; was successful, use &lt;code&gt;getPitchBend&lt;/code&gt;.</source>
          <target state="translated">基盤となるシンセサイザーがこのMIDIメッセージをサポートしていない可能性があります。 &lt;code&gt;setPitchBend&lt;/code&gt; が成功したことを確認するには、getPitchBendを使用し &lt;code&gt;getPitchBend&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cec7c19b0b25d7afdba0c9d0c71ad03777735e79" translate="yes" xml:space="preserve">
          <source>It is possible that the underlying synthesizer does not support this MIDI message. In order to verify that &lt;code&gt;setPolyPressure&lt;/code&gt; was successful, use &lt;code&gt;getPolyPressure&lt;/code&gt;.</source>
          <target state="translated">基盤となるシンセサイザーがこのMIDIメッセージをサポートしていない可能性があります。 &lt;code&gt;setPolyPressure&lt;/code&gt; が成功したことを確認するには、getPolyPressureを使用し &lt;code&gt;getPolyPressure&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8777ee2670dac2f4f6e0436de41705783bf9d28" translate="yes" xml:space="preserve">
          <source>It is possible to change the value subsequently, by calling &lt;a href=&quot;socket#setReceiveBufferSize(int)&quot;&gt;&lt;code&gt;Socket.setReceiveBufferSize(int)&lt;/code&gt;&lt;/a&gt;. However, if the application wishes to allow a receive window larger than 64K bytes, as defined by RFC1323 then the proposed value must be set in the ServerSocket &lt;b&gt;before&lt;/b&gt; it is bound to a local address. This implies, that the ServerSocket must be created with the no-argument constructor, then setReceiveBufferSize() must be called and lastly the ServerSocket is bound to an address by calling bind().</source>
          <target state="translated">その後、&lt;a href=&quot;socket#setReceiveBufferSize(int)&quot;&gt; &lt;code&gt;Socket.setReceiveBufferSize(int)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、値を変更することができます。ただし、RFC1323で定義されているように、アプリケーションが64Kバイトを超える受信ウィンドウを許可する場合は、提案された値をローカルアドレスにバインドする&lt;b&gt;前&lt;/b&gt;にServerSocket&lt;b&gt;に&lt;/b&gt;設定する必要があります。これは、ServerSocketを引数なしのコンストラクターで作成してから、setReceiveBufferSize（）を呼び出す必要があり、最後に、bind（）を呼び出してServerSocketをアドレスにバインドする必要があることを意味します。</target>
        </trans-unit>
        <trans-unit id="caef7f8de3880ae5ec98139667eafca9ea271eb2" translate="yes" xml:space="preserve">
          <source>It is possible to change the value subsequently, by calling &lt;a href=&quot;socket#setReceiveBufferSize-int-&quot;&gt;&lt;code&gt;Socket.setReceiveBufferSize(int)&lt;/code&gt;&lt;/a&gt;. However, if the application wishes to allow a receive window larger than 64K bytes, as defined by RFC1323 then the proposed value must be set in the ServerSocket &lt;b&gt;before&lt;/b&gt; it is bound to a local address. This implies, that the ServerSocket must be created with the no-argument constructor, then setReceiveBufferSize() must be called and lastly the ServerSocket is bound to an address by calling bind().</source>
          <target state="translated">&lt;a href=&quot;socket#setReceiveBufferSize-int-&quot;&gt; &lt;code&gt;Socket.setReceiveBufferSize(int)&lt;/code&gt; を&lt;/a&gt;呼び出すことで、後で値を変更することができます。ただし、アプリケーションがRFC1323で定義されている64Kバイトを超える受信ウィンドウを許可する場合は、提案された値をローカルアドレスにバインドする&lt;b&gt;前&lt;/b&gt;にServerSocket &lt;b&gt;に&lt;/b&gt;設定する必要があります。これは、ServerSocketを引数なしのコンストラクターで作成する必要があり、次にsetReceiveBufferSize（）を呼び出し、最後にbind（）を呼び出してServerSocketをアドレスにバインドする必要があることを意味します。</target>
        </trans-unit>
        <trans-unit id="1f159198588c16a08d71a0b6413c387119f4edde" translate="yes" xml:space="preserve">
          <source>It is possible to create a phantom reference with a &lt;code&gt;null&lt;/code&gt; queue, but such a reference is completely useless: Its &lt;code&gt;get&lt;/code&gt; method will always return &lt;code&gt;null&lt;/code&gt; and, since it does not have a queue, it will never be enqueued.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; キューを使用してファントム参照を作成することは可能ですが、そのような参照はまったく役に立ちません。その &lt;code&gt;get&lt;/code&gt; メソッドは常に &lt;code&gt;null&lt;/code&gt; を返し、キューがないため、キューに入れられることはありません。</target>
        </trans-unit>
        <trans-unit id="df7ae13f12df29a5cabc10dba6e948f75e9ac7ef" translate="yes" xml:space="preserve">
          <source>It is possible to create a phantom reference with a &lt;code&gt;null&lt;/code&gt; queue, but such a reference is completely useless: Its &lt;code&gt;get&lt;/code&gt; method will always return null and, since it does not have a queue, it will never be enqueued.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; キューでファントム参照を作成することは可能ですが、そのような参照は完全に役に立ちません。その &lt;code&gt;get&lt;/code&gt; メソッドは常にnullを返し、キューがないため、キューに入れられることはありません。</target>
        </trans-unit>
        <trans-unit id="c6e8abac5b1b6232e7da0b9bb3abed2258acbdee" translate="yes" xml:space="preserve">
          <source>It is possible to define and use ForkJoinTasks that may block, but doing do requires three further considerations: (1) Completion of few if any &lt;em&gt;other&lt;/em&gt; tasks should be dependent on a task that blocks on external synchronization or I/O. Event-style async tasks that are never joined (for example, those subclassing &lt;a href=&quot;countedcompleter&quot;&gt;&lt;code&gt;CountedCompleter&lt;/code&gt;&lt;/a&gt;) often fall into this category. (2) To minimize resource impact, tasks should be small; ideally performing only the (possibly) blocking action. (3) Unless the &lt;a href=&quot;forkjoinpool.managedblocker&quot;&gt;&lt;code&gt;ForkJoinPool.ManagedBlocker&lt;/code&gt;&lt;/a&gt; API is used, or the number of possibly blocked tasks is known to be less than the pool's &lt;a href=&quot;forkjoinpool#getParallelism--&quot;&gt;&lt;code&gt;ForkJoinPool.getParallelism()&lt;/code&gt;&lt;/a&gt; level, the pool cannot guarantee that enough threads will be available to ensure progress or good performance.</source>
          <target state="translated">ブロックする可能性のあるForkJoinTasksを定義して使用することは可能ですが、実行するにはさらに3つの考慮事項が必要です。（1）&lt;em&gt;他の&lt;/em&gt;タスクが外部同期またはI / Oでブロックするタスクに依存する必要がある場合、少数の完了 結合されないイベントスタイルの非同期タスク（たとえば、サブクラス化された&lt;a href=&quot;countedcompleter&quot;&gt; &lt;code&gt;CountedCompleter&lt;/code&gt; &lt;/a&gt;）は、多くの場合このカテゴリに分類されます。（2）リソースへの影響を最小限に抑えるには、タスクを小さくする必要があります。理想的には（場合によっては）ブロックするアクションのみを実行します。（3）&lt;a href=&quot;forkjoinpool.managedblocker&quot;&gt; &lt;code&gt;ForkJoinPool.ManagedBlocker&lt;/code&gt; &lt;/a&gt; APIが使用されていない場合、またはブロックされる可能性のあるタスクの数が、プールの&lt;a href=&quot;forkjoinpool#getParallelism--&quot;&gt; &lt;code&gt;ForkJoinPool.getParallelism()&lt;/code&gt; &lt;/a&gt;より少ないことがわかっている場合を除きます。 レベルでは、プールは、進行状況または良好なパフォーマンスを保証するために十分なスレッドが使用可能であることを保証できません。</target>
        </trans-unit>
        <trans-unit id="a8d5b2cab2e0c75397f2106a651b12cda9e3a90a" translate="yes" xml:space="preserve">
          <source>It is possible to define and use ForkJoinTasks that may block, but doing so requires three further considerations: (1) Completion of few if any &lt;em&gt;other&lt;/em&gt; tasks should be dependent on a task that blocks on external synchronization or I/O. Event-style async tasks that are never joined (for example, those subclassing &lt;a href=&quot;countedcompleter&quot;&gt;&lt;code&gt;CountedCompleter&lt;/code&gt;&lt;/a&gt;) often fall into this category. (2) To minimize resource impact, tasks should be small; ideally performing only the (possibly) blocking action. (3) Unless the &lt;a href=&quot;forkjoinpool.managedblocker&quot;&gt;&lt;code&gt;ForkJoinPool.ManagedBlocker&lt;/code&gt;&lt;/a&gt; API is used, or the number of possibly blocked tasks is known to be less than the pool's &lt;a href=&quot;forkjoinpool#getParallelism()&quot;&gt;&lt;code&gt;ForkJoinPool.getParallelism()&lt;/code&gt;&lt;/a&gt; level, the pool cannot guarantee that enough threads will be available to ensure progress or good performance.</source>
          <target state="translated">ブロックすることがありForkJoinTasksを定義して使用することが可能であるが、これはさらに3点の配慮が必要です。もしあれば、いくつかの（1）の完了を&lt;em&gt;他の&lt;/em&gt;タスクは、外部同期やI / Oのブロックそのタスクに依存する必要があります。決して参加しないイベントスタイルの非同期タスク（たとえば、&lt;a href=&quot;countedcompleter&quot;&gt; &lt;code&gt;CountedCompleter&lt;/code&gt; を&lt;/a&gt;サブクラス化するタスク）は、多くの場合、このカテゴリに分類されます。（2）リソースへの影響を最小限に抑えるために、タスクは小さくする必要があります。理想的には、（おそらく）ブロッキングアクションのみを実行します。（3）&lt;a href=&quot;forkjoinpool.managedblocker&quot;&gt; &lt;code&gt;ForkJoinPool.ManagedBlocker&lt;/code&gt; &lt;/a&gt; APIが使用されている場合、またはブロックされている可能性のあるタスクの数がプールの&lt;a href=&quot;forkjoinpool#getParallelism()&quot;&gt; &lt;code&gt;ForkJoinPool.getParallelism()&lt;/code&gt; &lt;/a&gt;より少ないことがわかっている場合を除きます。 レベルでは、プールは、進行状況または良好なパフォーマンスを確保するために十分なスレッドが使用可能になることを保証できません。</target>
        </trans-unit>
        <trans-unit id="298b8a12fb069d832a63539b41c4a3af130a5edb" translate="yes" xml:space="preserve">
          <source>It is possible to define and use other kinds of &lt;a href=&quot;rejectedexecutionhandler&quot;&gt;&lt;code&gt;RejectedExecutionHandler&lt;/code&gt;&lt;/a&gt; classes. Doing so requires some care especially when policies are designed to work only under particular capacity or queuing policies.</source>
          <target state="translated">他の種類の&lt;a href=&quot;rejectedexecutionhandler&quot;&gt; &lt;code&gt;RejectedExecutionHandler&lt;/code&gt; &lt;/a&gt;クラスを定義して使用することが可能です。これを行うには、特にポリシーが特定のキャパシティーまたはキューイングポリシーの下でのみ機能するように設計されている場合、注意が必要です。</target>
        </trans-unit>
        <trans-unit id="78e35e09a1e194a7ff9eade6145c217c91a73de5" translate="yes" xml:space="preserve">
          <source>It is possible to have a format string which uses all forms of indexing, for example:</source>
          <target state="translated">例えば、すべての形式のインデックスを使用するフォーマット文字列を持つことができます。</target>
        </trans-unit>
        <trans-unit id="59e54b3f358a1ae6ae36b2951a5fb64f04eb98bb" translate="yes" xml:space="preserve">
          <source>It is possible to have color/alpha sample values which cannot be reasonably interpreted as component values for rendering. This can happen when &lt;code&gt;ComponentColorModel&lt;/code&gt; is subclassed to override the mapping of unsigned sample values to normalized color component values or when signed sample values outside a certain range are used. (As an example, specifying an alpha component as a signed short value outside the range 0 to 32767, normalized range 0.0 to 1.0, can lead to unexpected results.) It is the responsibility of applications to appropriately scale pixel data before rendering such that color components fall within the normalized range of the &lt;code&gt;ColorSpace&lt;/code&gt; (obtained using the &lt;code&gt;getMinValue&lt;/code&gt; and &lt;code&gt;getMaxValue&lt;/code&gt; methods of the &lt;code&gt;ColorSpace&lt;/code&gt; class) and the alpha component is between 0.0 and 1.0. If color or alpha component values fall outside these ranges, rendering results are indeterminate.</source>
          <target state="translated">レンダリングのコンポーネント値として合理的に解釈できないカラー/アルファサンプル値を持つ可能性があります。これは、 &lt;code&gt;ComponentColorModel&lt;/code&gt; がサブクラス化されて、符号なしサンプル値から正規化されたカラーコンポーネント値へのマッピングをオーバーライドする場合、または特定の範囲外の符号付きサンプル値が使用される場合に発生する可能性があります。 （例として、アルファコンポーネントを0〜32767の範囲外の符号付きショート値、正規化された範囲0.0〜1.0として指定すると、予期しない結果が生じる可能性があります。）そのような色でレンダリングする前に、ピクセルデータを適切にスケーリングするのはアプリケーションの責任です。コンポーネントは、 &lt;code&gt;ColorSpace&lt;/code&gt; の正規化された範囲内にあります（の &lt;code&gt;getMinValue&lt;/code&gt; メソッドと &lt;code&gt;getMaxValue&lt;/code&gt; メソッドを使用して取得されます &lt;code&gt;ColorSpace&lt;/code&gt; クラス）およびアルファコンポーネントは0.0から1.0の間です。色またはアルファコンポーネントの値がこれらの範囲外にある場合、レンダリング結果は不確定です。</target>
        </trans-unit>
        <trans-unit id="7fbbb447fd96aab21333d612dbc411bc27ad9889" translate="yes" xml:space="preserve">
          <source>It is possible to provide alternative compilers or tools through the &lt;a href=&quot;../../../java.base/java/util/serviceloader&quot;&gt;service provider mechanism&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../java.base/java/util/serviceloader&quot;&gt;サービスプロバイダーメカニズムを&lt;/a&gt;介して代替のコンパイラまたはツールを提供することが可能です。</target>
        </trans-unit>
        <trans-unit id="0705f30875eca60e3cb5fe79f3372e3e591c7199" translate="yes" xml:space="preserve">
          <source>It is possible to provide alternative compilers or tools through the &lt;a href=&quot;../../java/util/serviceloader&quot;&gt;service provider mechanism&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../java/util/serviceloader&quot;&gt;サービスプロバイダーメカニズム&lt;/a&gt;を通じて、代替のコンパイラーまたはツールを提供することが可能です。</target>
        </trans-unit>
        <trans-unit id="5a0f997c24120b9a526c9d4142e3f9e852ad9fb1" translate="yes" xml:space="preserve">
          <source>It is possible to turn this stream on or off (see &lt;a href=&quot;#on(boolean)&quot;&gt;&lt;code&gt;on&lt;/code&gt;&lt;/a&gt;). When it is on, a call to one of the &lt;code&gt;read&lt;/code&gt; methods results in an update on the message digest. But when it is off, the message digest is not updated. The default is for the stream to be on.</source>
          <target state="translated">このストリームをオンまたはオフにすることができます（&lt;a href=&quot;#on(boolean)&quot;&gt; &lt;code&gt;on&lt;/code&gt; を&lt;/a&gt;参照）。オンの場合、 &lt;code&gt;read&lt;/code&gt; メソッドの1つを呼び出すと、メッセージダイジェストが更新されます。ただし、オフの場合、メッセージダイジェストは更新されません。デフォルトでは、ストリームがオンになります。</target>
        </trans-unit>
        <trans-unit id="113045ff53a58a057455af6c2589286253982c44" translate="yes" xml:space="preserve">
          <source>It is possible to turn this stream on or off (see &lt;a href=&quot;#on(boolean)&quot;&gt;&lt;code&gt;on&lt;/code&gt;&lt;/a&gt;). When it is on, a call to one of the &lt;code&gt;write&lt;/code&gt; methods results in an update on the message digest. But when it is off, the message digest is not updated. The default is for the stream to be on.</source>
          <target state="translated">このストリームをオンまたはオフにすることができます（&lt;a href=&quot;#on(boolean)&quot;&gt; &lt;code&gt;on&lt;/code&gt; を&lt;/a&gt;参照）。オンの場合、 &lt;code&gt;write&lt;/code&gt; メソッドの1つを呼び出すと、メッセージダイジェストが更新されます。ただし、オフの場合、メッセージダイジェストは更新されません。デフォルトでは、ストリームがオンになります。</target>
        </trans-unit>
        <trans-unit id="c6ac304f58e1ab351a4bafe1a49962c0143335fb" translate="yes" xml:space="preserve">
          <source>It is possible to turn this stream on or off (see &lt;a href=&quot;digestinputstream#on-boolean-&quot;&gt;&lt;code&gt;on&lt;/code&gt;&lt;/a&gt;). When it is on, a call to one of the &lt;code&gt;read&lt;/code&gt; methods results in an update on the message digest. But when it is off, the message digest is not updated. The default is for the stream to be on.</source>
          <target state="translated">このストリームをオンまたはオフにすることができます（&lt;a href=&quot;digestinputstream#on-boolean-&quot;&gt; &lt;code&gt;on&lt;/code&gt; を&lt;/a&gt;参照）。オンの場合、 &lt;code&gt;read&lt;/code&gt; メソッドの1つを呼び出すと、メッセージダイジェストが更新されます。ただし、オフの場合、メッセージダイジェストは更新されません。デフォルトでは、ストリームはオンになっています。</target>
        </trans-unit>
        <trans-unit id="8e4bb1300085cf9b8720a6dc6c1387178e8d6a3c" translate="yes" xml:space="preserve">
          <source>It is possible to turn this stream on or off (see &lt;a href=&quot;digestoutputstream#on-boolean-&quot;&gt;&lt;code&gt;on&lt;/code&gt;&lt;/a&gt;). When it is on, a call to one of the &lt;code&gt;write&lt;/code&gt; methods results in an update on the message digest. But when it is off, the message digest is not updated. The default is for the stream to be on.</source>
          <target state="translated">このストリームをオンまたはオフにすることができます（&lt;a href=&quot;digestoutputstream#on-boolean-&quot;&gt; &lt;code&gt;on&lt;/code&gt; を&lt;/a&gt;参照）。オンの場合、 &lt;code&gt;write&lt;/code&gt; メソッドの1つを呼び出すと、メッセージダイジェストが更新されます。ただし、オフの場合、メッセージダイジェストは更新されません。デフォルトでは、ストリームはオンになっています。</target>
        </trans-unit>
        <trans-unit id="a9b49c1728a85d9960a91d72ad64054d85dbc7da" translate="yes" xml:space="preserve">
          <source>It is possible to use other combinations of the parameters, not all of them are meaningful. By subclassing, you can add other information, for example: whether the event WILL happen or DID happen. This makes the specification of rows in DELETE events more useful but has not been included in the swing package as the JTable only needs post-event notification.</source>
          <target state="translated">パラメータの組み合わせは他にも可能ですが、すべてのパラメータが意味を持つわけではありません。サブクラス化することで、他の情報を追加することができます。例えば、イベントが WILL が発生したのか DID が発生したのかなどです。これにより、DELETE イベントでの行の指定がより便利になりますが、JTable はイベント後の通知だけを必要とするので、スイングパッケージには含まれていません。</target>
        </trans-unit>
        <trans-unit id="9b2bfee96a7e0b02c9c9b4a4821db520e557f776" translate="yes" xml:space="preserve">
          <source>It is possible, and in fact common, for a base class to implement AutoCloseable even though not all of its subclasses or instances will hold releasable resources. For code that must operate in complete generality, or when it is known that the &lt;code&gt;AutoCloseable&lt;/code&gt; instance requires resource release, it is recommended to use &lt;code&gt;
 try&lt;/code&gt;-with-resources constructions. However, when using facilities such as &lt;a href=&quot;../util/stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; that support both I/O-based and non-I/O-based forms, &lt;code&gt;try&lt;/code&gt;-with-resources blocks are in general unnecessary when using non-I/O-based forms.</source>
          <target state="translated">すべてのサブクラスまたはインスタンスがリリース可能なリソースを保持しているわけではありませんが、基本クラスがAutoCloseableを実装することは可能であり、実際には一般的です。完全な一般性で動作しなければならない、またはそれをすることが知られているとき、コードの &lt;code&gt;AutoCloseable&lt;/code&gt; インスタンスは、リソースの解放を必要とし、それは使用することが推奨され &lt;code&gt; try&lt;/code&gt; -with-リソース構造。ただし、I / Oベースのフォームと非I / Oベースのフォームの両方をサポートする&lt;a href=&quot;../util/stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt;などの機能を使用する場合、非I / Oベースのフォームを使用する場合は、通常、 &lt;code&gt;try&lt;/code&gt; -with-resourcesブロックは不要です。</target>
        </trans-unit>
        <trans-unit id="615559c84b6782ef78ad608bfc4a7ec827b9cfab" translate="yes" xml:space="preserve">
          <source>It is possible, and in fact common, for a base class to implement AutoCloseable even though not all of its subclasses or instances will hold releasable resources. For code that must operate in complete generality, or when it is known that the &lt;code&gt;AutoCloseable&lt;/code&gt; instance requires resource release, it is recommended to use &lt;code&gt;try&lt;/code&gt;-with-resources constructions. However, when using facilities such as &lt;a href=&quot;../util/stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; that support both I/O-based and non-I/O-based forms, &lt;code&gt;try&lt;/code&gt;-with-resources blocks are in general unnecessary when using non-I/O-based forms.</source>
          <target state="translated">すべてのサブクラスまたはインスタンスが解放可能なリソースを保持するわけではない場合でも、基本クラスがAutoCloseableを実装することは可能であり、実際には一般的です。一般的に動作する必要があるコードの場合、または &lt;code&gt;AutoCloseable&lt;/code&gt; インスタンスがリソースの解放を必要とすることがわかっている場合は、 &lt;code&gt;try&lt;/code&gt; -with-resources構文を使用することをお勧めします。ただし、I / Oベースのフォームと非I / Oベースのフォームの両方をサポートする&lt;a href=&quot;../util/stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt;などの機能を使用する場合、非I / Oベースのフォームを使用する場合、 &lt;code&gt;try&lt;/code&gt; -with-resourcesブロックは通常不要です。</target>
        </trans-unit>
        <trans-unit id="806ae7739117f643982118e3a2647ce45b237ad9" translate="yes" xml:space="preserve">
          <source>It is possible, but not recommended, to create custom queries by implementing this interface. In that case, it is better to extend the &lt;a href=&quot;queryeval&quot;&gt;&lt;code&gt;QueryEval&lt;/code&gt;&lt;/a&gt; class than to implement the interface directly, so that the &lt;a href=&quot;#setMBeanServer(javax.management.MBeanServer)&quot;&gt;&lt;code&gt;setMBeanServer(javax.management.MBeanServer)&lt;/code&gt;&lt;/a&gt; method works correctly.</source>
          <target state="translated">このインターフェイスを実装することでカスタムクエリを作成することは可能ですが、お勧めしません。その場合、&lt;a href=&quot;#setMBeanServer(javax.management.MBeanServer)&quot;&gt; &lt;code&gt;setMBeanServer(javax.management.MBeanServer)&lt;/code&gt; &lt;/a&gt;メソッドが正しく機能するように、インターフェースを直接実装するよりも&lt;a href=&quot;queryeval&quot;&gt; &lt;code&gt;QueryEval&lt;/code&gt; &lt;/a&gt;クラスを拡張する方が適切です。</target>
        </trans-unit>
        <trans-unit id="16765fea89f9b02541dee3237c2709519b0d0de0" translate="yes" xml:space="preserve">
          <source>It is possible, but not recommended, to create custom queries by implementing this interface. In that case, it is better to extend the &lt;a href=&quot;queryeval&quot;&gt;&lt;code&gt;QueryEval&lt;/code&gt;&lt;/a&gt; class than to implement the interface directly, so that the &lt;a href=&quot;queryexp#setMBeanServer-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;setMBeanServer(javax.management.MBeanServer)&lt;/code&gt;&lt;/a&gt; method works correctly.</source>
          <target state="translated">このインターフェイスを実装することにより、カスタムクエリを作成することは可能ですが、お勧めできません。その場合、&lt;a href=&quot;queryexp#setMBeanServer-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;setMBeanServer(javax.management.MBeanServer)&lt;/code&gt; &lt;/a&gt;メソッドが正しく機能するように、インターフェースを直接実装するよりも&lt;a href=&quot;queryeval&quot;&gt; &lt;code&gt;QueryEval&lt;/code&gt; &lt;/a&gt;クラスを拡張する方が適切です。</target>
        </trans-unit>
        <trans-unit id="e8930689c1de1edcae0acdf5d85f7689ef2da398" translate="yes" xml:space="preserve">
          <source>It is provider-specific if the returned SSLEngine uses client or server mode by default for the (D)TLS connection. The JDK SunJSSE provider implementation uses server mode by default. However, it is recommended to always set the desired mode explicitly by calling &lt;a href=&quot;sslengine#setUseClientMode(boolean)&quot;&gt;&lt;code&gt;SSLEngine.setUseClientMode()&lt;/code&gt;&lt;/a&gt; before invoking other methods of the SSLEngine.</source>
          <target state="translated">返されたSSLEngineが（D）TLS接続にデフォルトでクライアントモードまたはサーバーモードを使用するかどうかは、プロバイダー固有です。JDK SunJSSEプロバイダーの実装では、デフォルトでサーバーモードが使用されます。ただし、&lt;a href=&quot;sslengine#setUseClientMode(boolean)&quot;&gt; &lt;code&gt;SSLEngine.setUseClientMode()&lt;/code&gt; &lt;/a&gt;他のメソッドを呼び出す前に、SSLEngine.setUseClientMode（）を呼び出して、常に目的のモードを明示的に設定することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="deeb886290b8dea7f4c565ea0519d7325b5ae189" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this constructor.</source>
          <target state="translated">このコンストラクタを使用することが適切なことはほとんどありません。</target>
        </trans-unit>
        <trans-unit id="bf67929b26009b4d1db4bade30027b12f1424562" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this constructor. Instead, use the static factory method &lt;a href=&quot;#valueOf(float)&quot;&gt;&lt;code&gt;valueOf(float)&lt;/code&gt;&lt;/a&gt; method as follows: &lt;code&gt;Float.valueOf((float)value)&lt;/code&gt;.</source>
          <target state="translated">このコンストラクターを使用することが適切になることはめったにありません。代わりに、静的ファクトリメソッド&lt;a href=&quot;#valueOf(float)&quot;&gt; &lt;code&gt;valueOf(float)&lt;/code&gt; &lt;/a&gt;メソッドを次のように使用します： &lt;code&gt;Float.valueOf((float)value)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8c150ad74134b5d04b7157219a29d7b59fa0da8" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this constructor. The static factory &lt;a href=&quot;#valueOf(boolean)&quot;&gt;&lt;code&gt;valueOf(boolean)&lt;/code&gt;&lt;/a&gt; is generally a better choice, as it is likely to yield significantly better space and time performance. Also consider using the final fields &lt;a href=&quot;#TRUE&quot;&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#FALSE&quot;&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/a&gt; if possible.</source>
          <target state="translated">このコンストラクターを使用することが適切になることはめったにありません。静的ファクトリ&lt;a href=&quot;#valueOf(boolean)&quot;&gt; &lt;code&gt;valueOf(boolean)&lt;/code&gt; &lt;/a&gt;は、スペースと時間のパフォーマンスが大幅に向上する可能性があるため、一般的にはより適切な選択です。また、可能であれば、最後のフィールド&lt;a href=&quot;#TRUE&quot;&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#FALSE&quot;&gt; &lt;code&gt;FALSE&lt;/code&gt; の&lt;/a&gt;使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="00be32fb8f78795ebdc5cf06d23094716f2efb5a" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this constructor. The static factory &lt;a href=&quot;#valueOf(byte)&quot;&gt;&lt;code&gt;valueOf(byte)&lt;/code&gt;&lt;/a&gt; is generally a better choice, as it is likely to yield significantly better space and time performance.</source>
          <target state="translated">このコンストラクターを使用することが適切になることはめったにありません。静的ファクトリ&lt;a href=&quot;#valueOf(byte)&quot;&gt; &lt;code&gt;valueOf(byte)&lt;/code&gt; &lt;/a&gt;は、スペースと時間のパフォーマンスが大幅に向上する可能性があるため、一般的にはより適切な選択です。</target>
        </trans-unit>
        <trans-unit id="5f82effd27076ab614e5eec6543a18b3eb8de945" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this constructor. The static factory &lt;a href=&quot;#valueOf(char)&quot;&gt;&lt;code&gt;valueOf(char)&lt;/code&gt;&lt;/a&gt; is generally a better choice, as it is likely to yield significantly better space and time performance.</source>
          <target state="translated">このコンストラクターを使用することが適切になることはめったにありません。静的ファクトリ&lt;a href=&quot;#valueOf(char)&quot;&gt; &lt;code&gt;valueOf(char)&lt;/code&gt; &lt;/a&gt;は、スペースと時間のパフォーマンスが大幅に向上する可能性があるため、一般的にはより適切な選択です。</target>
        </trans-unit>
        <trans-unit id="0d3f802cc091916089263ec54107816f0559441e" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this constructor. The static factory &lt;a href=&quot;#valueOf(double)&quot;&gt;&lt;code&gt;valueOf(double)&lt;/code&gt;&lt;/a&gt; is generally a better choice, as it is likely to yield significantly better space and time performance.</source>
          <target state="translated">このコンストラクターを使用することが適切になることはめったにありません。静的ファクトリ&lt;a href=&quot;#valueOf(double)&quot;&gt; &lt;code&gt;valueOf(double)&lt;/code&gt; &lt;/a&gt;は、スペースと時間のパフォーマンスが大幅に向上する可能性があるため、一般的にはより適切な選択です。</target>
        </trans-unit>
        <trans-unit id="a55b90168d659c9211e245832e8a2b253a18f2e7" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this constructor. The static factory &lt;a href=&quot;#valueOf(float)&quot;&gt;&lt;code&gt;valueOf(float)&lt;/code&gt;&lt;/a&gt; is generally a better choice, as it is likely to yield significantly better space and time performance.</source>
          <target state="translated">このコンストラクターを使用することが適切になることはめったにありません。静的ファクトリ&lt;a href=&quot;#valueOf(float)&quot;&gt; &lt;code&gt;valueOf(float)&lt;/code&gt; &lt;/a&gt;は、スペースと時間のパフォーマンスが大幅に向上する可能性があるため、一般的にはより適切な選択です。</target>
        </trans-unit>
        <trans-unit id="eec2c4530cbe26e4e66ebbbfd7b9c551b85bd558" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this constructor. The static factory &lt;a href=&quot;#valueOf(int)&quot;&gt;&lt;code&gt;valueOf(int)&lt;/code&gt;&lt;/a&gt; is generally a better choice, as it is likely to yield significantly better space and time performance.</source>
          <target state="translated">このコンストラクターを使用することが適切になることはめったにありません。静的ファクトリ&lt;a href=&quot;#valueOf(int)&quot;&gt; &lt;code&gt;valueOf(int)&lt;/code&gt; &lt;/a&gt;は、スペースと時間のパフォーマンスが大幅に向上する可能性があるため、一般的にはより適切な選択です。</target>
        </trans-unit>
        <trans-unit id="e493bf86e338a8e9c34b0c8cc22fb2824be32206" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this constructor. The static factory &lt;a href=&quot;#valueOf(long)&quot;&gt;&lt;code&gt;valueOf(long)&lt;/code&gt;&lt;/a&gt; is generally a better choice, as it is likely to yield significantly better space and time performance.</source>
          <target state="translated">このコンストラクターを使用することが適切になることはめったにありません。静的ファクトリ&lt;a href=&quot;#valueOf(long)&quot;&gt; &lt;code&gt;valueOf(long)&lt;/code&gt; &lt;/a&gt;は、スペースと時間のパフォーマンスが大幅に向上する可能性があるため、一般的にはより適切な選択です。</target>
        </trans-unit>
        <trans-unit id="50e94c0c16329de21641300c54924a663d95047c" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this constructor. The static factory &lt;a href=&quot;#valueOf(short)&quot;&gt;&lt;code&gt;valueOf(short)&lt;/code&gt;&lt;/a&gt; is generally a better choice, as it is likely to yield significantly better space and time performance.</source>
          <target state="translated">このコンストラクターを使用することが適切になることはめったにありません。静的ファクトリ&lt;a href=&quot;#valueOf(short)&quot;&gt; &lt;code&gt;valueOf(short)&lt;/code&gt; &lt;/a&gt;は、スペースと時間のパフォーマンスが大幅に向上する可能性があるため、一般的にはより適切な選択です。</target>
        </trans-unit>
        <trans-unit id="8a07e0216c3c35917be28b6dc2f81a31548bbec4" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this constructor. Use &lt;a href=&quot;#parseBoolean(java.lang.String)&quot;&gt;&lt;code&gt;parseBoolean(String)&lt;/code&gt;&lt;/a&gt; to convert a string to a &lt;code&gt;boolean&lt;/code&gt; primitive, or use &lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt;&lt;code&gt;valueOf(String)&lt;/code&gt;&lt;/a&gt; to convert a string to a &lt;code&gt;Boolean&lt;/code&gt; object.</source>
          <target state="translated">このコンストラクターを使用することが適切になることはめったにありません。使用&lt;a href=&quot;#parseBoolean(java.lang.String)&quot;&gt; &lt;code&gt;parseBoolean(String)&lt;/code&gt; &lt;/a&gt;に文字列を変換する &lt;code&gt;boolean&lt;/code&gt; プリミティブ、または使用&lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt; &lt;code&gt;valueOf(String)&lt;/code&gt; &lt;/a&gt;に文字列を変換するために、 &lt;code&gt;Boolean&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="5fbf2b7c359b535ed4127dba11b53ba6067e2102" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this constructor. Use &lt;a href=&quot;#parseByte(java.lang.String)&quot;&gt;&lt;code&gt;parseByte(String)&lt;/code&gt;&lt;/a&gt; to convert a string to a &lt;code&gt;byte&lt;/code&gt; primitive, or use &lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt;&lt;code&gt;valueOf(String)&lt;/code&gt;&lt;/a&gt; to convert a string to a &lt;code&gt;Byte&lt;/code&gt; object.</source>
          <target state="translated">このコンストラクターを使用することが適切になることはめったにありません。使用&lt;a href=&quot;#parseByte(java.lang.String)&quot;&gt; &lt;code&gt;parseByte(String)&lt;/code&gt; &lt;/a&gt;に文字列を変換する &lt;code&gt;byte&lt;/code&gt; プリミティブ、または使用&lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt; &lt;code&gt;valueOf(String)&lt;/code&gt; &lt;/a&gt;に文字列を変換するために、 &lt;code&gt;Byte&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="2b4db963db5e3164cb86ac49179b745b2c2ed473" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this constructor. Use &lt;a href=&quot;#parseDouble(java.lang.String)&quot;&gt;&lt;code&gt;parseDouble(String)&lt;/code&gt;&lt;/a&gt; to convert a string to a &lt;code&gt;double&lt;/code&gt; primitive, or use &lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt;&lt;code&gt;valueOf(String)&lt;/code&gt;&lt;/a&gt; to convert a string to a &lt;code&gt;Double&lt;/code&gt; object.</source>
          <target state="translated">このコンストラクターを使用することが適切になることはめったにありません。使用&lt;a href=&quot;#parseDouble(java.lang.String)&quot;&gt; &lt;code&gt;parseDouble(String)&lt;/code&gt; &lt;/a&gt;に文字列を変換するには &lt;code&gt;double&lt;/code&gt; のプリミティブ、または使用&lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt; &lt;code&gt;valueOf(String)&lt;/code&gt; &lt;/a&gt;に文字列を変換するために、 &lt;code&gt;Double&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="5d74907362436a71487a9543e94cf2adf203b429" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this constructor. Use &lt;a href=&quot;#parseFloat(java.lang.String)&quot;&gt;&lt;code&gt;parseFloat(String)&lt;/code&gt;&lt;/a&gt; to convert a string to a &lt;code&gt;float&lt;/code&gt; primitive, or use &lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt;&lt;code&gt;valueOf(String)&lt;/code&gt;&lt;/a&gt; to convert a string to a &lt;code&gt;Float&lt;/code&gt; object.</source>
          <target state="translated">このコンストラクターを使用することが適切になることはめったにありません。使用&lt;a href=&quot;#parseFloat(java.lang.String)&quot;&gt; &lt;code&gt;parseFloat(String)&lt;/code&gt; &lt;/a&gt;に文字列を変換する &lt;code&gt;float&lt;/code&gt; プリミティブ、または使用&lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt; &lt;code&gt;valueOf(String)&lt;/code&gt; &lt;/a&gt;に文字列を変換するために、 &lt;code&gt;Float&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="deda1ebf98debabf1a776f5b365177962ff0cc78" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this constructor. Use &lt;a href=&quot;#parseInt(java.lang.String)&quot;&gt;&lt;code&gt;parseInt(String)&lt;/code&gt;&lt;/a&gt; to convert a string to a &lt;code&gt;int&lt;/code&gt; primitive, or use &lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt;&lt;code&gt;valueOf(String)&lt;/code&gt;&lt;/a&gt; to convert a string to an &lt;code&gt;Integer&lt;/code&gt; object.</source>
          <target state="translated">このコンストラクターを使用することが適切になることはめったにありません。使用&lt;a href=&quot;#parseInt(java.lang.String)&quot;&gt; &lt;code&gt;parseInt(String)&lt;/code&gt; &lt;/a&gt;に文字列を変換する &lt;code&gt;int&lt;/code&gt; 型のプリミティブ、または使用&lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt; &lt;code&gt;valueOf(String)&lt;/code&gt; &lt;/a&gt;に文字列を変換するために、 &lt;code&gt;Integer&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="9d645c5f6938618ca5673369766a43a87588cba5" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this constructor. Use &lt;a href=&quot;#parseLong(java.lang.String)&quot;&gt;&lt;code&gt;parseLong(String)&lt;/code&gt;&lt;/a&gt; to convert a string to a &lt;code&gt;long&lt;/code&gt; primitive, or use &lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt;&lt;code&gt;valueOf(String)&lt;/code&gt;&lt;/a&gt; to convert a string to a &lt;code&gt;Long&lt;/code&gt; object.</source>
          <target state="translated">このコンストラクターを使用することが適切になることはめったにありません。使用&lt;a href=&quot;#parseLong(java.lang.String)&quot;&gt; &lt;code&gt;parseLong(String)&lt;/code&gt; &lt;/a&gt;に文字列を変換するには &lt;code&gt;long&lt;/code&gt; プリミティブ、または使用&lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt; &lt;code&gt;valueOf(String)&lt;/code&gt; &lt;/a&gt;に文字列を変換するために、 &lt;code&gt;Long&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="7c8dd10a20b72c7abc01926ce2ab2fa184abe50c" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this constructor. Use &lt;a href=&quot;#parseShort(java.lang.String)&quot;&gt;&lt;code&gt;parseShort(String)&lt;/code&gt;&lt;/a&gt; to convert a string to a &lt;code&gt;short&lt;/code&gt; primitive, or use &lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt;&lt;code&gt;valueOf(String)&lt;/code&gt;&lt;/a&gt; to convert a string to a &lt;code&gt;Short&lt;/code&gt; object.</source>
          <target state="translated">このコンストラクターを使用することが適切になることはめったにありません。使用&lt;a href=&quot;#parseShort(java.lang.String)&quot;&gt; &lt;code&gt;parseShort(String)&lt;/code&gt; &lt;/a&gt;に文字列を変換するには &lt;code&gt;short&lt;/code&gt; プリミティブ、または使用&lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt; &lt;code&gt;valueOf(String)&lt;/code&gt; &lt;/a&gt;に文字列を変換するために、 &lt;code&gt;Short&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="0017cdfc2b78b20d58d871bccbd5d7ede7eaa82b" translate="yes" xml:space="preserve">
          <source>It is rarely appropriate to use this method. It may be useful for debugging or testing purposes, where it may help to reproduce bugs due to race conditions. It may also be useful when designing concurrency control constructs such as the ones in the &lt;a href=&quot;../util/concurrent/locks/package-summary&quot;&gt;&lt;code&gt;java.util.concurrent.locks&lt;/code&gt;&lt;/a&gt; package.</source>
          <target state="translated">この方法を使用することはめったに適切ではありません。競合状態によるバグの再現に役立つデバッグやテストの目的で役立つ場合があります。また、&lt;a href=&quot;../util/concurrent/locks/package-summary&quot;&gt; &lt;code&gt;java.util.concurrent.locks&lt;/code&gt; &lt;/a&gt;パッケージのような同時実行制御構造を設計するときにも役立つ場合があります。</target>
        </trans-unit>
        <trans-unit id="f97ef1bbda3a7fa841e3567da9e8e469128c59ec" translate="yes" xml:space="preserve">
          <source>It is recognized that the distinction between random and sequential access is often fuzzy. For example, some &lt;code&gt;List&lt;/code&gt; implementations provide asymptotically linear access times if they get huge, but constant access times in practice. Such a &lt;code&gt;List&lt;/code&gt; implementation should generally implement this interface. As a rule of thumb, a &lt;code&gt;List&lt;/code&gt; implementation should implement this interface if, for typical instances of the class, this loop:</source>
          <target state="translated">ランダムアクセスとシーケンシャルアクセスの区別は、あいまいであることがよくあります。たとえば、一部の &lt;code&gt;List&lt;/code&gt; 実装では、アクセス時間が非常に大きくなると、漸近的に線形のアクセス時間が提供されますが、実際には一定のアクセス時間が提供されます。そのような &lt;code&gt;List&lt;/code&gt; 実装は、通常、このインターフェースを実装する必要があります。経験則として、 &lt;code&gt;List&lt;/code&gt; 実装は、クラスの一般的なインスタンスでこのループが次の場合に、このインターフェースを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="4452a0d4cf264e9dab5bdda3d066b4f73869f0bd" translate="yes" xml:space="preserve">
          <source>It is recommended practice to &lt;em&gt;always&lt;/em&gt; immediately follow a call to &lt;code&gt;lock&lt;/code&gt; with a &lt;code&gt;try&lt;/code&gt; block, most typically in a before/after construction such as:</source>
          <target state="translated">&lt;em&gt;常に&lt;/em&gt;呼び出しの直後に &lt;code&gt;try&lt;/code&gt; ブロックを &lt;code&gt;lock&lt;/code&gt; してロックすることをお勧めします。最も一般的には、次のようなbefore / afterコンストラクションです。</target>
        </trans-unit>
        <trans-unit id="4bd8ab1d17a6d65f0d96b5fa5ac8e6d9b759de2f" translate="yes" xml:space="preserve">
          <source>It is recommended that &lt;a href=&quot;#%3Cinit%3E(java.lang.Object,int)&quot;&gt;&lt;code&gt;AWTEvent(Object, int)&lt;/code&gt;&lt;/a&gt; be used instead</source>
          <target state="translated">代わりに&lt;a href=&quot;#%3Cinit%3E(java.lang.Object,int)&quot;&gt; &lt;code&gt;AWTEvent(Object, int)&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします</target>
        </trans-unit>
        <trans-unit id="79b00e26a37b5d1bb6aac4e20f7db3303d97c9b5" translate="yes" xml:space="preserve">
          <source>It is recommended that &lt;code&gt;AWTEvent&lt;/code&gt; and its subclasses be used instead</source>
          <target state="translated">代わりに &lt;code&gt;AWTEvent&lt;/code&gt; とそのサブクラスを使用することをお勧めします</target>
        </trans-unit>
        <trans-unit id="f30d0a885b7b42862cce2f1628397b50ebdbccbf" translate="yes" xml:space="preserve">
          <source>It is recommended that ALT_DOWN_MASK and &lt;a href=&quot;#getModifiersEx()&quot;&gt;&lt;code&gt;getModifiersEx()&lt;/code&gt;&lt;/a&gt; be used instead</source>
          <target state="translated">代わりにALT_DOWN_MASKとgetModifiersEx &lt;a href=&quot;#getModifiersEx()&quot;&gt; &lt;code&gt;getModifiersEx()&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします</target>
        </trans-unit>
        <trans-unit id="3fb43c84699feb01d3be5fee1ef29d1a9cab490e" translate="yes" xml:space="preserve">
          <source>It is recommended that ALT_GRAPH_DOWN_MASK and &lt;a href=&quot;#getModifiersEx()&quot;&gt;&lt;code&gt;getModifiersEx()&lt;/code&gt;&lt;/a&gt; be used instead</source>
          <target state="translated">代わりにALT_GRAPH_DOWN_MASKとgetModifiersEx &lt;a href=&quot;#getModifiersEx()&quot;&gt; &lt;code&gt;getModifiersEx()&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします</target>
        </trans-unit>
        <trans-unit id="043590a633dc2524998176e65fcf785f758acb6a" translate="yes" xml:space="preserve">
          <source>It is recommended that BUTTON1_DOWN_MASK and &lt;a href=&quot;#getModifiersEx()&quot;&gt;&lt;code&gt;getModifiersEx()&lt;/code&gt;&lt;/a&gt; be used instead</source>
          <target state="translated">代わりにBUTTON1_DOWN_MASKとgetModifiersEx &lt;a href=&quot;#getModifiersEx()&quot;&gt; &lt;code&gt;getModifiersEx()&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします</target>
        </trans-unit>
        <trans-unit id="2c51f25c230064956aaa89b86435246bbcb2d84d" translate="yes" xml:space="preserve">
          <source>It is recommended that BUTTON2_DOWN_MASK and &lt;a href=&quot;#getModifiersEx()&quot;&gt;&lt;code&gt;getModifiersEx()&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">代わりに、BUTTON2_DOWN_MASKとgetModifiersEx &lt;a href=&quot;#getModifiersEx()&quot;&gt; &lt;code&gt;getModifiersEx()&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5b084bb8869d42b936f84308155b8206a3ff43a7" translate="yes" xml:space="preserve">
          <source>It is recommended that BUTTON2_DOWN_MASK and &lt;a href=&quot;#getModifiersEx()&quot;&gt;&lt;code&gt;getModifiersEx()&lt;/code&gt;&lt;/a&gt; be used instead. Note that BUTTON2_MASK has the same value as ALT_MASK.</source>
          <target state="translated">代わりに、BUTTON2_DOWN_MASKとgetModifiersEx &lt;a href=&quot;#getModifiersEx()&quot;&gt; &lt;code&gt;getModifiersEx()&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。BUTTON2_MASKの値はALT_MASKと同じであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4f7b611323d0d1ffde02a5dde55fc00368dbf3a8" translate="yes" xml:space="preserve">
          <source>It is recommended that BUTTON3_DOWN_MASK and &lt;a href=&quot;#getModifiersEx()&quot;&gt;&lt;code&gt;getModifiersEx()&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">代わりに、BUTTON3_DOWN_MASKとgetModifiersEx &lt;a href=&quot;#getModifiersEx()&quot;&gt; &lt;code&gt;getModifiersEx()&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="78ca89aa200623741c24a8360c1bc5573ba3b5ee" translate="yes" xml:space="preserve">
          <source>It is recommended that BUTTON3_DOWN_MASK and &lt;a href=&quot;#getModifiersEx()&quot;&gt;&lt;code&gt;getModifiersEx()&lt;/code&gt;&lt;/a&gt; be used instead. Note that BUTTON3_MASK has the same value as META_MASK.</source>
          <target state="translated">代わりに、BUTTON3_DOWN_MASKとgetModifiersEx &lt;a href=&quot;#getModifiersEx()&quot;&gt; &lt;code&gt;getModifiersEx()&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。BUTTON3_MASKの値はMETA_MASKと同じであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4a75e05c920c09b1fc53ba6d9654b153d68c4c0a" translate="yes" xml:space="preserve">
          <source>It is recommended that CTRL_DOWN_MASK and &lt;a href=&quot;#getModifiersEx()&quot;&gt;&lt;code&gt;getModifiersEx()&lt;/code&gt;&lt;/a&gt; be used instead</source>
          <target state="translated">代わりにCTRL_DOWN_MASKとgetModifiersEx &lt;a href=&quot;#getModifiersEx()&quot;&gt; &lt;code&gt;getModifiersEx()&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします</target>
        </trans-unit>
        <trans-unit id="ad3f54595070228613a9c3f59ce049c5f27590c0" translate="yes" xml:space="preserve">
          <source>It is recommended that META_DOWN_MASK and &lt;a href=&quot;#getModifiersEx()&quot;&gt;&lt;code&gt;getModifiersEx()&lt;/code&gt;&lt;/a&gt; be used instead</source>
          <target state="translated">代わりにMETA_DOWN_MASKとgetModifiersEx &lt;a href=&quot;#getModifiersEx()&quot;&gt; &lt;code&gt;getModifiersEx()&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします</target>
        </trans-unit>
        <trans-unit id="ee5012c35706220a59a6be288b11be091abe1a9a" translate="yes" xml:space="preserve">
          <source>It is recommended that SHIFT_DOWN_MASK and &lt;a href=&quot;#getModifiersEx()&quot;&gt;&lt;code&gt;getModifiersEx()&lt;/code&gt;&lt;/a&gt; be used instead</source>
          <target state="translated">代わりにSHIFT_DOWN_MASKとgetModifiersEx &lt;a href=&quot;#getModifiersEx()&quot;&gt; &lt;code&gt;getModifiersEx()&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします</target>
        </trans-unit>
        <trans-unit id="89080a665aa2f2a396085ffdec7205cf5bcc543f" translate="yes" xml:space="preserve">
          <source>It is recommended that a &lt;code&gt;LoggerFinder&lt;/code&gt; service implementation does not perform any heavy initialization in its constructor, in order to avoid possible risks of deadlock or class loading cycles during the instantiation of the service provider.</source>
          <target state="translated">&lt;code&gt;LoggerFinder&lt;/code&gt; サービスの実装では、サービスプロバイダーのインスタンス化中にデッドロックやクラスの読み込みサイクルが発生するリスクを回避するために、コンストラクターで大量の初期化を実行しないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="11a2f5900c5f6364d4cb0bbc664cb583e752d112" translate="yes" xml:space="preserve">
          <source>It is recommended that a &lt;code&gt;since&lt;/code&gt; value be provided with all newly annotated program elements. Note that &lt;code&gt;since&lt;/code&gt; cannot be mandatory, as there are many existing annotations that lack this element value.</source>
          <target state="translated">新しく注釈が付けられたすべてのプログラム要素に &lt;code&gt;since&lt;/code&gt; 値を指定することをお勧めします。この要素値を欠く既存の注釈が多数あるため、必須ではないことに注意し &lt;code&gt;since&lt;/code&gt; ください。</target>
        </trans-unit>
        <trans-unit id="75dac7218e716f39154c192e136c26107f38b1b5" translate="yes" xml:space="preserve">
          <source>It is recommended that client code not reset mappings established by the data transfer subsystem. This method should only be used for application-level mappings.</source>
          <target state="translated">クライアント・コードは、データ転送サブシステムによって確立されたマッピングをリセットしないことを推奨します。このメソッドは、アプリケーションレベルのマッピングにのみ使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="b7d1e74ff3b9218d846b56f6692a03c58569fd4b" translate="yes" xml:space="preserve">
          <source>It is recommended that extended modifier keys and &lt;a href=&quot;#getMenuShortcutKeyMaskEx()&quot;&gt;&lt;code&gt;getMenuShortcutKeyMaskEx()&lt;/code&gt;&lt;/a&gt; be used instead</source>
          <target state="translated">代わりに、拡張修飾キーと&lt;a href=&quot;#getMenuShortcutKeyMaskEx()&quot;&gt; &lt;code&gt;getMenuShortcutKeyMaskEx()&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d664d3178b9c03f14ff14164f828cccc49504d16" translate="yes" xml:space="preserve">
          <source>It is recommended that extended modifier keys and &lt;a href=&quot;#getModifiersEx()&quot;&gt;&lt;code&gt;getModifiersEx()&lt;/code&gt;&lt;/a&gt; be used instead</source>
          <target state="translated">代わりに、拡張修飾キーと&lt;a href=&quot;#getModifiersEx()&quot;&gt; &lt;code&gt;getModifiersEx()&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="e9e2d51c34e91aa458872f170e1dc319e7e46ff6" translate="yes" xml:space="preserve">
          <source>It is recommended that extended modifier keys and &lt;a href=&quot;inputevent#getModifiersExText(int)&quot;&gt;&lt;code&gt;InputEvent.getModifiersExText(int)&lt;/code&gt;&lt;/a&gt; be used instead</source>
          <target state="translated">代わりに、拡張修飾キーと&lt;a href=&quot;inputevent#getModifiersExText(int)&quot;&gt; &lt;code&gt;InputEvent.getModifiersExText(int)&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="dbf10ac1536da5d055a408f38135fc5378293610" translate="yes" xml:space="preserve">
          <source>It is recommended that if possible, the maximum packet size should not be less than 256 bytes so that small handshake messages, such as HelloVerifyRequests, are not fragmented.</source>
          <target state="translated">HelloVerifyRequestsのような小さなハンドシェイクメッセージが断片化されないように、可能であれば最大パケットサイズは256バイト以下にしないことが推奨されます。</target>
        </trans-unit>
        <trans-unit id="e11025ff411c2ddce20c7abfd0c33978484f8b37" translate="yes" xml:space="preserve">
          <source>It is recommended that listeners do not throw errors or exceptions. If a listener terminates with an uncaught error or exception then the first exception will be propagated to the caller of &lt;a href=&quot;#readConfiguration()&quot;&gt;&lt;code&gt;readConfiguration()&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#readConfiguration(java.io.InputStream)&quot;&gt;&lt;code&gt;readConfiguration(java.io.InputStream)&lt;/code&gt;&lt;/a&gt;) after all listeners have been invoked.</source>
          <target state="translated">リスナーがエラーや例外をスローしないことをお勧めします。リスナーがキャッチされないエラーまたは例外で終了した場合、すべてのリスナーが呼び出された後、最初の例外が&lt;a href=&quot;#readConfiguration()&quot;&gt; &lt;code&gt;readConfiguration()&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;#readConfiguration(java.io.InputStream)&quot;&gt; &lt;code&gt;readConfiguration(java.io.InputStream)&lt;/code&gt; &lt;/a&gt;）の呼び出し元に伝播されます。</target>
        </trans-unit>
        <trans-unit id="75b65f5dc3d5642072af43993348180d1a1bdf12" translate="yes" xml:space="preserve">
          <source>It is recommended that providers initialize default Server Name Indications when creating &lt;code&gt;SSLSocket&lt;/code&gt;/&lt;code&gt;SSLEngine&lt;/code&gt;s. In the following examples, the server name could be represented by an instance of &lt;a href=&quot;snihostname&quot;&gt;&lt;code&gt;SNIHostName&lt;/code&gt;&lt;/a&gt; which has been initialized with the hostname &quot;www.example.com&quot; and type &lt;a href=&quot;standardconstants#SNI_HOST_NAME&quot;&gt;&lt;code&gt;StandardConstants.SNI_HOST_NAME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SSLSocket&lt;/code&gt; / &lt;code&gt;SSLEngine&lt;/code&gt; を作成するときは、プロバイダーがデフォルトのサーバー名表示を初期化することをお勧めします。次の例では、サーバー名は、ホスト名 &quot;www.example.com&quot;で初期化され、&lt;a href=&quot;standardconstants#SNI_HOST_NAME&quot;&gt; &lt;code&gt;StandardConstants.SNI_HOST_NAME&lt;/code&gt; &lt;/a&gt;と入力された&lt;a href=&quot;snihostname&quot;&gt; &lt;code&gt;SNIHostName&lt;/code&gt; の&lt;/a&gt;インスタンスで表すことができます。</target>
        </trans-unit>
        <trans-unit id="31dce5b65085f06d87a64a2b9862375367da5c3b" translate="yes" xml:space="preserve">
          <source>It is recommended that providers should never allow the sequence number incremented to &lt;code&gt;-1L&lt;/code&gt;. If the sequence number is close to wrapping, renegotiate should be requested, otherwise the connection should be closed immediately. This should be carried on automatically by the underlying implementation.</source>
          <target state="translated">プロバイダーは、シーケンス番号を &lt;code&gt;-1L&lt;/code&gt; に増やすことを決して許可しないことをお勧めします。シーケンス番号がラッピングに近い場合は、再ネゴシエーションを要求する必要があります。そうでない場合は、接続をすぐに閉じる必要があります。これは、基盤となる実装によって自動的に実行される必要があります。</target>
        </trans-unit>
        <trans-unit id="c897c43944c1da672b23780aa2c62563c7060da2" translate="yes" xml:space="preserve">
          <source>It is recommended that subclasses override this method.</source>
          <target state="translated">サブクラスがこのメソッドをオーバーライドすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f579b356f1bb1cc05bca69825fd4a6807d5c6822" translate="yes" xml:space="preserve">
          <source>It is recommended that the &lt;a href=&quot;#probablePrime(int,java.util.Random)&quot;&gt;&lt;code&gt;probablePrime&lt;/code&gt;&lt;/a&gt; method be used in preference to this constructor unless there is a compelling need to specify a certainty.</source>
          <target state="translated">確実性を指定する必要がない限り、このコンストラクターよりも&lt;a href=&quot;#probablePrime(int,java.util.Random)&quot;&gt; &lt;code&gt;probablePrime&lt;/code&gt; &lt;/a&gt;メソッドを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="819253f444009cf916d27559b549c6b882e06ffc" translate="yes" xml:space="preserve">
          <source>It is recommended that the &lt;a href=&quot;biginteger#probablePrime-int-java.util.Random-&quot;&gt;&lt;code&gt;probablePrime&lt;/code&gt;&lt;/a&gt; method be used in preference to this constructor unless there is a compelling need to specify a certainty.</source>
          <target state="translated">確実性を明確に指定する必要がない限り、このコンストラクタよりも&lt;a href=&quot;biginteger#probablePrime-int-java.util.Random-&quot;&gt; &lt;code&gt;probablePrime&lt;/code&gt; &lt;/a&gt;メソッドを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a83528e1ddb8c218de2523e29c55e53b39c44c52" translate="yes" xml:space="preserve">
          <source>It is recommended that the first parameter type of &lt;code&gt;cleanup&lt;/code&gt; be declared &lt;code&gt;Throwable&lt;/code&gt; rather than a narrower subtype. This ensures &lt;code&gt;cleanup&lt;/code&gt; will always be invoked with whatever exception that &lt;code&gt;target&lt;/code&gt; throws. Declaring a narrower type may result in a &lt;code&gt;ClassCastException&lt;/code&gt; being thrown by the &lt;code&gt;try-finally&lt;/code&gt; handle if the type of the exception thrown by &lt;code&gt;target&lt;/code&gt; is not assignable to the first parameter type of &lt;code&gt;cleanup&lt;/code&gt;. Note that various exception types of &lt;code&gt;VirtualMachineError&lt;/code&gt;, &lt;code&gt;LinkageError&lt;/code&gt;, and &lt;code&gt;RuntimeException&lt;/code&gt; can in principle be thrown by almost any kind of Java code, and a finally clause that catches (say) only &lt;code&gt;IOException&lt;/code&gt; would mask any of the others behind a &lt;code&gt;ClassCastException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cleanup&lt;/code&gt; 最初のパラメータタイプは、より狭いサブタイプではなく、 &lt;code&gt;Throwable&lt;/code&gt; 可能として宣言することをお勧めします。これにより、 &lt;code&gt;target&lt;/code&gt; スローする例外を除いて、 &lt;code&gt;cleanup&lt;/code&gt; が常に呼び出されます。より狭いタイプを宣言する &lt;code&gt;try-finally&lt;/code&gt; 、 &lt;code&gt;target&lt;/code&gt; によってスローされた例外のタイプが &lt;code&gt;cleanup&lt;/code&gt; 最初のパラメータータイプに割り当てられない場合、try-finallyハンドルによって &lt;code&gt;ClassCastException&lt;/code&gt; がスローされる可能性があります。 &lt;code&gt;VirtualMachineError&lt;/code&gt; 、 &lt;code&gt;LinkageError&lt;/code&gt; 、 &lt;code&gt;RuntimeException&lt;/code&gt; のさまざまな例外タイプに注意してください原則として、ほぼすべての種類のJavaコードによってスローでき、 &lt;code&gt;IOException&lt;/code&gt; のみをキャッチするfinally句は、 &lt;code&gt;ClassCastException&lt;/code&gt; の背後にある他の句をマスクします。</target>
        </trans-unit>
        <trans-unit id="9736031da09b5075f88fa2880f486b1067deb1db" translate="yes" xml:space="preserve">
          <source>It is recommended that the name be the same as would be used on the command line: for example, &quot;javac&quot;, &quot;jar&quot;, &quot;jlink&quot;.</source>
          <target state="translated">コマンドラインで使用されるものと同じ名前にすることを推奨します:例えば、&quot;javac&quot;、&quot;jar&quot;、&quot;jlink&quot; などです。</target>
        </trans-unit>
        <trans-unit id="0963cd00defde36c5fcac889699d0b09b2a00100" translate="yes" xml:space="preserve">
          <source>It is recommended that this platform MBeanServer also be used to register other application managed beans besides the platform MXBeans. This will allow all MBeans to be published through the same &lt;code&gt;MBeanServer&lt;/code&gt; and hence allow for easier network publishing and discovery. Name conflicts with the platform MXBeans should be avoided.</source>
          <target state="translated">このプラットフォームMBeanServerを使用して、プラットフォームMXBean以外のアプリケーション管理Beanを登録することもお勧めします。これにより、すべてのMBeanを同じ &lt;code&gt;MBeanServer&lt;/code&gt; を通じて公開できるようになり、ネットワークの公開と検出が容易になります。プラットフォームMXBeanとの名前の競合は避けてください。</target>
        </trans-unit>
        <trans-unit id="6e90d31c74da734e54d9ab6f94f7caf05130a3d4" translate="yes" xml:space="preserve">
          <source>It is recommended that vendors supply a &lt;code&gt;SyncProvider&lt;/code&gt; implementation in a package named &lt;code&gt;providers&lt;/code&gt;.</source>
          <target state="translated">ベンダーは、 &lt;code&gt;providers&lt;/code&gt; という名前のパッケージで &lt;code&gt;SyncProvider&lt;/code&gt; 実装を提供することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5fc1c0f78892acd266a1cbf533f28333b9f57834" translate="yes" xml:space="preserve">
          <source>It is recommended to enclose each unit of work in &lt;code&gt;beginRequest&lt;/code&gt;, &lt;code&gt;endRequest&lt;/code&gt; pairs such that there is no open transaction at the beginning or end of the request and no dependency on local state that crosses request boundaries. Committed database state is not local.</source>
          <target state="translated">&lt;code&gt;beginRequest&lt;/code&gt; の開始時または終了時にオープントランザクションがなく、リクエストの境界を越えるローカル状態に依存しないように、各作業単位をbeginRequestと &lt;code&gt;endRequest&lt;/code&gt; のペアで囲むことをお勧めします。コミットされたデータベースの状態はローカルではありません。</target>
        </trans-unit>
        <trans-unit id="fb3de67a36131db80ba1ca2211506f784414d5e5" translate="yes" xml:space="preserve">
          <source>It is recommended to name the platform-specific attributes with a vendor-specific prefix such as the vendor's name to avoid collisions of the attribute name between the future extension to the standard management interface and the platform extension. If the future extension to the standard management interface defines a new attribute for a management interface and the attribute name is happened to be same as some vendor-specific attribute's name, the applications accessing that vendor-specific attribute would have to be modified to cope with versioning and compatibility issues.</source>
          <target state="translated">標準管理インタフェースの将来の拡張機能とプラットフォームの拡張機能との間で属性名の衝突を避けるために、プラットフォーム固有の属性にはベンダー名のようなベンダー固有の接頭辞をつけることを推奨します。標準管理インタフェースの将来の拡張機能が管理インタフェース用の新しい属性を定義していて、その属性名がベンダー固有の属性名と同じであった場合、そのベンダー固有の属性にアクセスするアプリケーションは、バージョン管理や互換性の問題に対処するために修正しなければならないでしょう。</target>
        </trans-unit>
        <trans-unit id="8496a259bd03edb5d3c41603570674a6610ce4be" translate="yes" xml:space="preserve">
          <source>It is recommended to obtain a &lt;code&gt;Path&lt;/code&gt; via the &lt;code&gt;Path.of&lt;/code&gt; methods instead of via the &lt;code&gt;get&lt;/code&gt; methods defined in this class as this class may be deprecated in a future release.</source>
          <target state="translated">このクラスは将来のリリースで非推奨になる可能性があるため、このクラスで定義されている &lt;code&gt;get&lt;/code&gt; メソッドではなく、 &lt;code&gt;Path.of&lt;/code&gt; メソッドを介して &lt;code&gt;Path&lt;/code&gt; を取得することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="53f92a676deff3930fa201e8930ee03ba327470c" translate="yes" xml:space="preserve">
          <source>It is recommended to promptly close the returned output stream after use, during which it will flush all possible leftover bytes to the underlying output stream. Closing the returned output stream will close the underlying output stream.</source>
          <target state="translated">使用後は、返された出力ストリームを速やかに閉じることが推奨され、その間に可能性のあるすべての残余バイトが下の出力ストリームにフラッシュされます。返された出力ストリームを閉じると、その下の出力ストリームが閉じられます。</target>
        </trans-unit>
        <trans-unit id="c982559184d7a15c44b6f97fd9bb0ede7a38aec1" translate="yes" xml:space="preserve">
          <source>It is recommended to use &lt;a href=&quot;#instantiate(java.lang.ClassLoader,java.lang.String,java.beans.beancontext.BeanContext)&quot;&gt;&lt;code&gt;instantiate(ClassLoader, String, BeanContext)&lt;/code&gt;&lt;/a&gt;, because the Applet API is deprecated.</source>
          <target state="translated">Applet APIは非推奨であるため、&lt;a href=&quot;#instantiate(java.lang.ClassLoader,java.lang.String,java.beans.beancontext.BeanContext)&quot;&gt; &lt;code&gt;instantiate(ClassLoader, String, BeanContext)&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8c362208b4e8b9e45bbcb26a6df20fa87fd1f452" translate="yes" xml:space="preserve">
          <source>It is recommended to use &lt;a href=&quot;#instantiate(java.lang.ClassLoader,java.lang.String,java.beans.beancontext.BeanContext)&quot;&gt;&lt;code&gt;instantiate(ClassLoader, String, BeanContext)&lt;/code&gt;&lt;/a&gt;, because the Applet API is deprecated. See the &lt;a href=&quot;../applet/package-summary&quot;&gt; java.applet package documentation&lt;/a&gt; for further information.</source>
          <target state="translated">Applet APIは非推奨であるため、&lt;a href=&quot;#instantiate(java.lang.ClassLoader,java.lang.String,java.beans.beancontext.BeanContext)&quot;&gt; &lt;code&gt;instantiate(ClassLoader, String, BeanContext)&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。詳細については、&lt;a href=&quot;../applet/package-summary&quot;&gt;java.appletパッケージのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="030dc03a73a9049892ff451df1c6cf2ef76dbe23" translate="yes" xml:space="preserve">
          <source>It is recommended to use &lt;a href=&quot;../../../../javax/xml/parsers/saxparserfactory&quot;&gt;&lt;code&gt;SAXParserFactory&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">代わりに&lt;a href=&quot;../../../../javax/xml/parsers/saxparserfactory&quot;&gt; &lt;code&gt;SAXParserFactory&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="b95a44bb7a2ee96c566579b0cc863809760d30f5" translate="yes" xml:space="preserve">
          <source>It is recommended to use &lt;a href=&quot;../math/bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; class while dealing with &lt;code&gt;Currency&lt;/code&gt; or monetary values as it provides better handling of floating point numbers and their operations.</source>
          <target state="translated">浮動小数点数とその演算をより適切に処理できるため、 &lt;code&gt;Currency&lt;/code&gt; または金銭の値を処理するときは&lt;a href=&quot;../math/bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt;クラスを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="3a2a4865cf7150ec0605db877f5d45a7115d9989" translate="yes" xml:space="preserve">
          <source>It is recommended to use the &lt;a href=&quot;event/inputevent#getMaskForButton(int)&quot;&gt;&lt;code&gt;InputEvent.getMaskForButton(button)&lt;/code&gt;&lt;/a&gt; method to obtain the mask for any mouse button by its number.</source>
          <target state="translated">&lt;a href=&quot;event/inputevent#getMaskForButton(int)&quot;&gt; &lt;code&gt;InputEvent.getMaskForButton(button)&lt;/code&gt; &lt;/a&gt;メソッドを使用して、マウスボタンのマスクをその番号で取得することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5a5166362dcebc3cdd8e7520aaccccebb71c626a" translate="yes" xml:space="preserve">
          <source>It is recommended to use the second approach, &lt;code&gt;getLong(TemporalField)&lt;/code&gt;, as it is a lot clearer to read in code.</source>
          <target state="translated">コードを読み取る方がはるかに明確であるため、2番目のアプローチ &lt;code&gt;getLong(TemporalField)&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="00adee18271e7ab255736dc4a3f9bb91b474dbc9" translate="yes" xml:space="preserve">
          <source>It is recommended to use the second approach, &lt;code&gt;isSupported(TemporalField)&lt;/code&gt;, as it is a lot clearer to read in code.</source>
          <target state="translated">コードで読み取る方がはるかに明確であるため、2番目のアプローチ &lt;code&gt;isSupported(TemporalField)&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="36bc1cf8f083c0eaf05f35c7f39702b0b334b22c" translate="yes" xml:space="preserve">
          <source>It is recommended to use the second approach, &lt;code&gt;minus(TemporalAmount)&lt;/code&gt;, as it is a lot clearer to read in code.</source>
          <target state="translated">コードを読み取る方がはるかに明確であるため、2番目のアプローチ &lt;code&gt;minus(TemporalAmount)&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8b9dcc31e7ca11acc720c831b6856816a10f31f4" translate="yes" xml:space="preserve">
          <source>It is recommended to use the second approach, &lt;code&gt;plus(TemporalAmount)&lt;/code&gt;, as it is a lot clearer to read in code.</source>
          <target state="translated">コードを読み取る方がはるかに明確であるため、2番目のアプローチ &lt;code&gt;plus(TemporalAmount)&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="865e645ed9afad02cc158e09625d0064fdd191c2" translate="yes" xml:space="preserve">
          <source>It is recommended to use the second approach, &lt;code&gt;plus(TemporalUnit)&lt;/code&gt;, as it is a lot clearer to read in code.</source>
          <target state="translated">コードを読み取る方がはるかに明確であるため、2番目のアプローチ &lt;code&gt;plus(TemporalUnit)&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="14298e3c0e1dd371a9a647263e9ee22a4625cba6" translate="yes" xml:space="preserve">
          <source>It is recommended to use the second approach, &lt;code&gt;query(TemporalQuery)&lt;/code&gt;, as it is a lot clearer to read in code.</source>
          <target state="translated">コードで読み取る方がはるかに明確であるため、2番目のアプローチ &lt;code&gt;query(TemporalQuery)&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="14a2a97641f3dc6f8da607c1ec4b4c8f6917a391" translate="yes" xml:space="preserve">
          <source>It is recommended to use the second approach, &lt;code&gt;range(TemporalField)&lt;/code&gt;, as it is a lot clearer to read in code.</source>
          <target state="translated">コードで読み取る方がはるかに明確であるため、2番目のアプローチ &lt;code&gt;range(TemporalField)&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d2f2844d2d1703acf0a5902c34d31554b2ce4faf" translate="yes" xml:space="preserve">
          <source>It is recommended to use the second approach, &lt;code&gt;with(TemporalAdjuster)&lt;/code&gt;, as it is a lot clearer to read in code.</source>
          <target state="translated">コードを読み取る方がはるかに明確であるため、2番目のアプローチ &lt;code&gt;with(TemporalAdjuster)&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="6ed89ee314bf8a81587b9e68a0643396995434bc" translate="yes" xml:space="preserve">
          <source>It is recommended to use the second approach, &lt;code&gt;with(TemporalField)&lt;/code&gt;, as it is a lot clearer to read in code.</source>
          <target state="translated">コードで読み取る方がはるかに明確であるため、2番目のアプローチ &lt;code&gt;with(TemporalField)&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7e790fae55ec2857e93db6c0710c97b355e30b3b" translate="yes" xml:space="preserve">
          <source>It is recommended, but not guaranteed, that objects implementing the &lt;code&gt;Shape&lt;/code&gt; interface isolate iterations that are in process from any changes that might occur to the original object's geometry during such iterations.</source>
          <target state="translated">&lt;code&gt;Shape&lt;/code&gt; インターフェイスを実装するオブジェクトは、処理中の反復を、そのような反復中に元のオブジェクトのジオメトリに発生する可能性のある変更から分離することをお勧めしますが、保証はされません。</target>
        </trans-unit>
        <trans-unit id="6f6e4ae686ad1091716fc61b9fbd5db42dc0910a" translate="yes" xml:space="preserve">
          <source>It is removed using &lt;code&gt;removeNamingListener()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;removeNamingListener()&lt;/code&gt; を使用して削除されます。</target>
        </trans-unit>
        <trans-unit id="c6094f777d2eea5925210636e1fa91e8b05ae842" translate="yes" xml:space="preserve">
          <source>It is sometimes possible to better encapsulate use of &lt;code&gt;reachabilityFence&lt;/code&gt;. Continuing the above example, if it were acceptable for the call to method &lt;code&gt;update&lt;/code&gt; to proceed even if the finalizer had already executed (nulling out slot), then you could localize use of &lt;code&gt;reachabilityFence&lt;/code&gt;:</source>
          <target state="translated">場合によっては、 &lt;code&gt;reachabilityFence&lt;/code&gt; の使用をより適切にカプセル化することが可能です。それは、メソッドの呼び出しのために許容できるものであった場合は、上記の例を続けると、 &lt;code&gt;update&lt;/code&gt; （スロットをヌル・アウト）ファイナライザが既に実行されていた場合でも続行し、その後は使用できローカライズ &lt;code&gt;reachabilityFence&lt;/code&gt; を：</target>
        </trans-unit>
        <trans-unit id="1ee3ada4378a8396aafc40aeb12740f89d2e6219" translate="yes" xml:space="preserve">
          <source>It is sometimes useful to restrict the set of inputs or results permitted at invocation. For example, when the generic interface &lt;code&gt;Predicate&amp;lt;T&amp;gt;&lt;/code&gt; is parameterized as &lt;code&gt;Predicate&amp;lt;String&amp;gt;&lt;/code&gt;, the input must be a &lt;code&gt;String&lt;/code&gt;, even though the method to implement allows any &lt;code&gt;Object&lt;/code&gt;. At linkage time, an additional &lt;a href=&quot;methodtype&quot;&gt;&lt;code&gt;MethodType&lt;/code&gt;&lt;/a&gt; parameter describes the &quot;instantiated&quot; method type; on invocation, the arguments and eventual result are checked against this &lt;code&gt;MethodType&lt;/code&gt;.</source>
          <target state="translated">呼び出し時に許可される入力または結果のセットを制限すると役立つ場合があります。たとえば、ジェネリックインターフェイス &lt;code&gt;Predicate&amp;lt;T&amp;gt;&lt;/code&gt; が &lt;code&gt;Predicate&amp;lt;String&amp;gt;&lt;/code&gt; としてパラメーター化されている場合、実装するメソッドで任意の &lt;code&gt;Object&lt;/code&gt; が許可されていても、入力は &lt;code&gt;String&lt;/code&gt; でなければなりません。リンク時に、追加の&lt;a href=&quot;methodtype&quot;&gt; &lt;code&gt;MethodType&lt;/code&gt; &lt;/a&gt;パラメータが「インスタンス化された」メソッドタイプを記述します。呼び出し時に、引数と最終的な結果がこの &lt;code&gt;MethodType&lt;/code&gt; に対してチェックされます。</target>
        </trans-unit>
        <trans-unit id="a0c99829082a9db07c27fe5b3a13b147a7fe2938" translate="yes" xml:space="preserve">
          <source>It is straightforward to define new utility functions that, like &lt;code&gt;getAndIncrement&lt;/code&gt;, apply a function to a value atomically. For example, given some transformation</source>
          <target state="translated">&lt;code&gt;getAndIncrement&lt;/code&gt; のように、関数を値にアトミックに適用する新しいユーティリティ関数を定義するのは簡単です。たとえば、いくつかの変換が与えられた</target>
        </trans-unit>
        <trans-unit id="44a3847f6ac8d4dc321ded7c915e735b1c38b5e9" translate="yes" xml:space="preserve">
          <source>It is strongly recommended (though not required) that natural orderings be consistent with equals. This is so because sorted sets (and sorted maps) without explicit comparators behave &quot;strangely&quot; when they are used with elements (or keys) whose natural ordering is inconsistent with equals. In particular, such a sorted set (or sorted map) violates the general contract for set (or map), which is defined in terms of the &lt;code&gt;equals&lt;/code&gt; method.</source>
          <target state="translated">自然な順序付けは、equalsと一貫していることを強くお勧めします（必須ではありません）。これは、明示的なコンパレーターのないソート済みセット（およびソート済みマップ）が、自然順序付けが等号と一致しない要素（またはキー）で使用されると「奇妙な」動作をするためです。特に、このようなソートされたセット（またはソートされたマップ）は、 &lt;code&gt;equals&lt;/code&gt; メソッドで定義されているセット（またはマップ）の一般規約に違反しています。</target>
        </trans-unit>
        <trans-unit id="ce5e50bfdd7ffd53231fc49042260dda1d7866c7" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that a class loader does not call this method to explicitly define packages in &lt;em&gt;named modules&lt;/em&gt;; instead, the package will be automatically defined when a class is &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt;being defined&lt;/a&gt;. If it is desirable to define &lt;code&gt;Package&lt;/code&gt; explicitly, it should ensure that all packages in a named module are defined with the properties specified by &lt;a href=&quot;package&quot;&gt;&lt;code&gt;Package&lt;/code&gt;&lt;/a&gt;. Otherwise, some &lt;code&gt;Package&lt;/code&gt; objects in a named module may be for example sealed with different seal base.</source>
          <target state="translated">クラスローダーがこのメソッドを呼び出して、&lt;em&gt;名前付きモジュール&lt;/em&gt;内のパッケージを明示的に定義しないことを強くお勧めし&lt;em&gt;ます&lt;/em&gt;。代わりに、クラスが定義されているときにパッケージが自動的に定義&lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt;され&lt;/a&gt;ます。 &lt;code&gt;Package&lt;/code&gt; を明示的に定義することが望ましい場合は、名前付きモジュール内のすべてのパッケージが&lt;a href=&quot;package&quot;&gt; &lt;code&gt;Package&lt;/code&gt; で&lt;/a&gt;指定されたプロパティで定義されていることを確認する必要があります。それ以外の場合、名前付きモジュール内の一部の &lt;code&gt;Package&lt;/code&gt; オブジェクトは、たとえば、異なるシールベースでシールされる場合があります。</target>
        </trans-unit>
        <trans-unit id="0a84ca940e8c3b3641313db16154ee677a64373c" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that each Driver class should be small and standalone so that the Driver class can be loaded and queried without bringing in vast quantities of supporting code.</source>
          <target state="translated">膨大な量のサポートコードを持ち込まずにドライバクラスをロードしてクエリできるように、各ドライバクラスは小さくてスタンドアロンであることが強く推奨されます。</target>
        </trans-unit>
        <trans-unit id="706bfb970b2fab2fa6936d3c5822e94263788aec" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that notification senders use the object name rather than a reference to the MBean object as the source.</source>
          <target state="translated">通知送信者は、MBeanオブジェクトへの参照ではなく、オブジェクト名をソースとして使用することを強く推奨します。</target>
        </trans-unit>
        <trans-unit id="ca13fa9e8c520115e7b095d75fb37a8181e9887c" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that subclasses return completely opaque colors. To do otherwise may result in rendering problems, such as visual garbage.</source>
          <target state="translated">サブクラスは完全に不透明な色を返すことを強く推奨します。そうしないと、ビジュアルガーベッジのようなレンダリング上の問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="faa664ba2d3bab70cbd80ec574837ec8a7b33dac" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that the group name is included in all IDs supplied by groups other than TZDB to avoid conflicts. For example, IATA airline time-zone region IDs are typically the same as the three letter airport code. However, the airport of Utrecht has the code 'UTC', which is obviously a conflict. The recommended format for region IDs from groups other than TZDB is 'group~region'. Thus if IATA data were defined, Utrecht airport would be 'IATA~UTC'.</source>
          <target state="translated">競合を避けるために、TZDB以外のグループによって提供されるすべてのIDにグループ名を含めることが強く推奨される。例えば、IATA航空会社のタイムゾーン地域IDは、通常、3文字の空港コードと同じです。しかし、ユトレヒトの空港には「UTC」というコードがあり、これは明らかに矛盾している。TZDB以外のグループからのリージョンIDの推奨フォーマットは「group~region」である。したがって、IATAデータを定義した場合、ユトレヒト空港は「IATA~UTC」となる。</target>
        </trans-unit>
        <trans-unit id="1a45ab21475760b0327789820e5a37fb53ece043" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that the reason for deprecating a program element be explained in the documentation, using the &lt;code&gt;@deprecated&lt;/code&gt; javadoc tag. The documentation should also suggest and link to a recommended replacement API, if applicable. A replacement API often has subtly different semantics, so such issues should be discussed as well.</source>
          <target state="translated">プログラム要素を非推奨にする理由は、 &lt;code&gt;@deprecated&lt;/code&gt; タグを使用してドキュメントで説明することを強くお勧めします。ドキュメントは、該当する場合、推奨される代替APIを提案し、リンクする必要があります。置換APIのセマンティクスは微妙に異なることが多いため、このような問題についても説明する必要があります。</target>
        </trans-unit>
        <trans-unit id="712c5122d0fc4453c8493effde0c0f4cfdd4b944" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that this constructor is only used to parse the encoded name value in a requested SNI extension. Otherwise, to comply with &lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066&lt;/a&gt;, please always use &lt;a href=&quot;../../../java/nio/charset/standardcharsets#US_ASCII&quot;&gt;&lt;code&gt;StandardCharsets.US_ASCII&lt;/code&gt;&lt;/a&gt;-compliant charset and enforce the restrictions on ASCII characters in hostnames (see &lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;, &lt;a href=&quot;http://www.ietf.org/rfc/rfc1122.txt&quot;&gt;RFC 1122&lt;/a&gt;, &lt;a href=&quot;http://www.ietf.org/rfc/rfc1123.txt&quot;&gt;RFC 1123&lt;/a&gt;) for &lt;code&gt;encoded&lt;/code&gt; argument, or use &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;SNIHostName(String)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">このコンストラクターは、要求されたSNI拡張機能のエンコードされた名前の値を解析するためにのみ使用することを強くお勧めします。それ以外の場合、&lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066&lt;/a&gt;に準拠するには、常に&lt;a href=&quot;../../../java/nio/charset/standardcharsets#US_ASCII&quot;&gt; &lt;code&gt;StandardCharsets.US_ASCII&lt;/code&gt; &lt;/a&gt;準拠の文字セットを使用し、 &lt;code&gt;encoded&lt;/code&gt; 引数にホスト名のASCII文字の制限を適用するか（&lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;、&lt;a href=&quot;http://www.ietf.org/rfc/rfc1122.txt&quot;&gt;RFC 1122&lt;/a&gt;、&lt;a href=&quot;http://www.ietf.org/rfc/rfc1123.txt&quot;&gt;RFC 1123を&lt;/a&gt;参照）、代わりに&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;SNIHostName(String)&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="b037bfcd999df15665381b450947e4d6c1af670a" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that this constructor is only used to parse the encoded name value in a requested SNI extension. Otherwise, to comply with &lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066&lt;/a&gt;, please always use &lt;a href=&quot;../../../java/nio/charset/standardcharsets#US_ASCII&quot;&gt;&lt;code&gt;StandardCharsets.US_ASCII&lt;/code&gt;&lt;/a&gt;-compliant charset and enforce the restrictions on ASCII characters in hostnames (see &lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;, &lt;a href=&quot;http://www.ietf.org/rfc/rfc1122.txt&quot;&gt;RFC 1122&lt;/a&gt;, &lt;a href=&quot;http://www.ietf.org/rfc/rfc1123.txt&quot;&gt;RFC 1123&lt;/a&gt;) for &lt;code&gt;encoded&lt;/code&gt; argument, or use &lt;a href=&quot;snihostname#SNIHostName-java.lang.String-&quot;&gt;&lt;code&gt;SNIHostName(String)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">このコンストラクターは、要求されたSNI拡張のエンコードされた名前の値を解析するためだけに使用することを強くお勧めします。それ以外の場合、&lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066&lt;/a&gt;に準拠するには、常に&lt;a href=&quot;../../../java/nio/charset/standardcharsets#US_ASCII&quot;&gt; &lt;code&gt;StandardCharsets.US_ASCII&lt;/code&gt; &lt;/a&gt;準拠の文字セットを使用し、ホスト名のASCII文字に制限を適用して（&lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;、&lt;a href=&quot;http://www.ietf.org/rfc/rfc1122.txt&quot;&gt;RFC 1122&lt;/a&gt;、&lt;a href=&quot;http://www.ietf.org/rfc/rfc1123.txt&quot;&gt;RFC 1123を&lt;/a&gt;参照）、 &lt;code&gt;encoded&lt;/code&gt; 引数を使用するか、代わりに&lt;a href=&quot;snihostname#SNIHostName-java.lang.String-&quot;&gt; &lt;code&gt;SNIHostName(String)&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="0603aab605b0a8a5f33f52a5d1740ce285c5afed" translate="yes" xml:space="preserve">
          <source>It is strongly recommended the spliterator report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or be &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;. Otherwise, &lt;a href=&quot;#doubleStream(java.util.function.Supplier,int,boolean)&quot;&gt;&lt;code&gt;doubleStream(java.util.function.Supplier, int, boolean)&lt;/code&gt;&lt;/a&gt; should be used to reduce the scope of potential interference with the source. See &lt;a href=&quot;package-summary#NonInterference&quot;&gt;Non-Interference&lt;/a&gt; for more details.</source>
          <target state="translated">強くspliteratorが特徴の報告をお勧めし &lt;code&gt;IMMUTABLE&lt;/code&gt; または &lt;code&gt;CONCURRENT&lt;/code&gt; を、またはことが&lt;a href=&quot;../spliterator#binding&quot;&gt;遅延バインディング&lt;/a&gt;。それ以外の場合は、&lt;a href=&quot;#doubleStream(java.util.function.Supplier,int,boolean)&quot;&gt; &lt;code&gt;doubleStream(java.util.function.Supplier, int, boolean)&lt;/code&gt; &lt;/a&gt;を使用して、ソースとの潜在的な干渉の範囲を減らす必要があります。詳細については、&lt;a href=&quot;package-summary#NonInterference&quot;&gt;非干渉&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6de108c2f96ab73d2a0b0152a03ebf2fdf0a810c" translate="yes" xml:space="preserve">
          <source>It is strongly recommended the spliterator report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or be &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;. Otherwise, &lt;a href=&quot;#intStream(java.util.function.Supplier,int,boolean)&quot;&gt;&lt;code&gt;intStream(java.util.function.Supplier, int, boolean)&lt;/code&gt;&lt;/a&gt; should be used to reduce the scope of potential interference with the source. See &lt;a href=&quot;package-summary#NonInterference&quot;&gt;Non-Interference&lt;/a&gt; for more details.</source>
          <target state="translated">強くspliteratorが特徴の報告をお勧めし &lt;code&gt;IMMUTABLE&lt;/code&gt; または &lt;code&gt;CONCURRENT&lt;/code&gt; を、またはことが&lt;a href=&quot;../spliterator#binding&quot;&gt;遅延バインディング&lt;/a&gt;。それ以外の場合は、&lt;a href=&quot;#intStream(java.util.function.Supplier,int,boolean)&quot;&gt; &lt;code&gt;intStream(java.util.function.Supplier, int, boolean)&lt;/code&gt; &lt;/a&gt;を使用して、ソースとの潜在的な干渉の範囲を減らす必要があります。詳細については、&lt;a href=&quot;package-summary#NonInterference&quot;&gt;非干渉&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="bf4de97eb2e0218141e3d30850de5be10a8636d3" translate="yes" xml:space="preserve">
          <source>It is strongly recommended the spliterator report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or be &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;. Otherwise, &lt;a href=&quot;#longStream(java.util.function.Supplier,int,boolean)&quot;&gt;&lt;code&gt;longStream(java.util.function.Supplier, int, boolean)&lt;/code&gt;&lt;/a&gt; should be used to reduce the scope of potential interference with the source. See &lt;a href=&quot;package-summary#NonInterference&quot;&gt;Non-Interference&lt;/a&gt; for more details.</source>
          <target state="translated">強くspliteratorが特徴の報告をお勧めし &lt;code&gt;IMMUTABLE&lt;/code&gt; または &lt;code&gt;CONCURRENT&lt;/code&gt; を、またはことが&lt;a href=&quot;../spliterator#binding&quot;&gt;遅延バインディング&lt;/a&gt;。それ以外の場合は、&lt;a href=&quot;#longStream(java.util.function.Supplier,int,boolean)&quot;&gt; &lt;code&gt;longStream(java.util.function.Supplier, int, boolean)&lt;/code&gt; &lt;/a&gt;を使用して、ソースとの潜在的な干渉の範囲を減らす必要があります。詳細については、&lt;a href=&quot;package-summary#NonInterference&quot;&gt;非干渉&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="cc106049528fc06aa90532d46e424455e88cbe97" translate="yes" xml:space="preserve">
          <source>It is strongly recommended the spliterator report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or be &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;. Otherwise, &lt;a href=&quot;#stream(java.util.function.Supplier,int,boolean)&quot;&gt;&lt;code&gt;stream(java.util.function.Supplier, int, boolean)&lt;/code&gt;&lt;/a&gt; should be used to reduce the scope of potential interference with the source. See &lt;a href=&quot;package-summary#NonInterference&quot;&gt;Non-Interference&lt;/a&gt; for more details.</source>
          <target state="translated">強くspliteratorが特徴の報告をお勧めし &lt;code&gt;IMMUTABLE&lt;/code&gt; または &lt;code&gt;CONCURRENT&lt;/code&gt; を、またはことが&lt;a href=&quot;../spliterator#binding&quot;&gt;遅延バインディング&lt;/a&gt;。それ以外の場合は、&lt;a href=&quot;#stream(java.util.function.Supplier,int,boolean)&quot;&gt; &lt;code&gt;stream(java.util.function.Supplier, int, boolean)&lt;/code&gt; &lt;/a&gt;を使用して、ソースとの潜在的な干渉の範囲を減らす必要があります。詳細については、&lt;a href=&quot;package-summary#NonInterference&quot;&gt;非干渉&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ce2fbc35bb9c60878cd72898898d35660133cae3" translate="yes" xml:space="preserve">
          <source>It is strongly recommended the spliterator report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or be &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;. Otherwise, &lt;a href=&quot;streamsupport#doubleStream-java.util.function.Supplier-int-boolean-&quot;&gt;&lt;code&gt;doubleStream(java.util.function.Supplier, int, boolean)&lt;/code&gt;&lt;/a&gt; should be used to reduce the scope of potential interference with the source. See &lt;a href=&quot;package-summary#NonInterference&quot;&gt;Non-Interference&lt;/a&gt; for more details.</source>
          <target state="translated">強くspliteratorが特徴の報告をお勧めし &lt;code&gt;IMMUTABLE&lt;/code&gt; または &lt;code&gt;CONCURRENT&lt;/code&gt; を、またはことが&lt;a href=&quot;../spliterator#binding&quot;&gt;遅延バインディング&lt;/a&gt;。それ以外の場合は、&lt;a href=&quot;streamsupport#doubleStream-java.util.function.Supplier-int-boolean-&quot;&gt; &lt;code&gt;doubleStream(java.util.function.Supplier, int, boolean)&lt;/code&gt; &lt;/a&gt;を使用して、ソースとの潜在的な干渉の範囲を減らす必要があります。詳細については、&lt;a href=&quot;package-summary#NonInterference&quot;&gt;非干渉&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="281a0a9f4c1efdfbb556ff1a86d752eb63888850" translate="yes" xml:space="preserve">
          <source>It is strongly recommended the spliterator report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or be &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;. Otherwise, &lt;a href=&quot;streamsupport#intStream-java.util.function.Supplier-int-boolean-&quot;&gt;&lt;code&gt;intStream(java.util.function.Supplier, int, boolean)&lt;/code&gt;&lt;/a&gt; should be used to reduce the scope of potential interference with the source. See &lt;a href=&quot;package-summary#NonInterference&quot;&gt;Non-Interference&lt;/a&gt; for more details.</source>
          <target state="translated">強くspliteratorが特徴の報告をお勧めし &lt;code&gt;IMMUTABLE&lt;/code&gt; または &lt;code&gt;CONCURRENT&lt;/code&gt; を、またはことが&lt;a href=&quot;../spliterator#binding&quot;&gt;遅延バインディング&lt;/a&gt;。それ以外の場合は、&lt;a href=&quot;streamsupport#intStream-java.util.function.Supplier-int-boolean-&quot;&gt; &lt;code&gt;intStream(java.util.function.Supplier, int, boolean)&lt;/code&gt; &lt;/a&gt;を使用して、ソースとの潜在的な干渉の範囲を減らす必要があります。詳細については、&lt;a href=&quot;package-summary#NonInterference&quot;&gt;非干渉&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3beda09f6a5ecbc3c00deb8125eaea67a4d39409" translate="yes" xml:space="preserve">
          <source>It is strongly recommended the spliterator report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or be &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;. Otherwise, &lt;a href=&quot;streamsupport#longStream-java.util.function.Supplier-int-boolean-&quot;&gt;&lt;code&gt;longStream(java.util.function.Supplier, int, boolean)&lt;/code&gt;&lt;/a&gt; should be used to reduce the scope of potential interference with the source. See &lt;a href=&quot;package-summary#NonInterference&quot;&gt;Non-Interference&lt;/a&gt; for more details.</source>
          <target state="translated">強くspliteratorが特徴の報告をお勧めし &lt;code&gt;IMMUTABLE&lt;/code&gt; または &lt;code&gt;CONCURRENT&lt;/code&gt; を、またはことが&lt;a href=&quot;../spliterator#binding&quot;&gt;遅延バインディング&lt;/a&gt;。それ以外の場合は、&lt;a href=&quot;streamsupport#longStream-java.util.function.Supplier-int-boolean-&quot;&gt; &lt;code&gt;longStream(java.util.function.Supplier, int, boolean)&lt;/code&gt; &lt;/a&gt;を使用して、ソースとの潜在的な干渉の範囲を減らす必要があります。詳細については、&lt;a href=&quot;package-summary#NonInterference&quot;&gt;非干渉&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="02da1e9bb595d554e0f4a9c47db5a7aa2e813133" translate="yes" xml:space="preserve">
          <source>It is strongly recommended the spliterator report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or be &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;. Otherwise, &lt;a href=&quot;streamsupport#stream-java.util.function.Supplier-int-boolean-&quot;&gt;&lt;code&gt;stream(java.util.function.Supplier, int, boolean)&lt;/code&gt;&lt;/a&gt; should be used to reduce the scope of potential interference with the source. See &lt;a href=&quot;package-summary#NonInterference&quot;&gt;Non-Interference&lt;/a&gt; for more details.</source>
          <target state="translated">強くspliteratorが特徴の報告をお勧めし &lt;code&gt;IMMUTABLE&lt;/code&gt; または &lt;code&gt;CONCURRENT&lt;/code&gt; を、またはことが&lt;a href=&quot;../spliterator#binding&quot;&gt;遅延バインディング&lt;/a&gt;。それ以外の場合は、&lt;a href=&quot;streamsupport#stream-java.util.function.Supplier-int-boolean-&quot;&gt; &lt;code&gt;stream(java.util.function.Supplier, int, boolean)&lt;/code&gt; &lt;/a&gt;を使用して、ソースとの潜在的な干渉の範囲を減らす必要があります。詳細については、&lt;a href=&quot;package-summary#NonInterference&quot;&gt;非干渉&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4f77c1bf497cff77e5cba2c284403f33bbef040b" translate="yes" xml:space="preserve">
          <source>It is strongly recommended, but</source>
          <target state="translated">強くお勧めしますが</target>
        </trans-unit>
        <trans-unit id="06524b3ad577ccada6f530c9499c301e1b844084" translate="yes" xml:space="preserve">
          <source>It is the header renderers responsibility to render the sorting indicator. If you are using sorting and specify a renderer your renderer must render the sorting indication.</source>
          <target state="translated">ソート表示をレンダリングするのはヘッダーのレンダラーの責任です。ソートを使用していてレンダラーを指定する場合は、レンダラーがソート表示をレンダリングしなければなりません。</target>
        </trans-unit>
        <trans-unit id="a5d9d220f593c2c193f96a4e0714fe5240f843cc" translate="yes" xml:space="preserve">
          <source>It is the responsibility of the invoker of this method to make sure the output byte array &lt;code&gt;dst&lt;/code&gt; has enough space for decoding all bytes from the input byte array. No bytes will be be written to the output byte array if the output byte array is not big enough.</source>
          <target state="translated">このメソッドの呼び出し側は、出力バイト配列 &lt;code&gt;dst&lt;/code&gt; に、入力バイト配列からすべてのバイトをデコードするための十分なスペースがあることを確認する必要があります。出力バイト配列が十分に大きくない場合、バイトは出力バイト配列に書き込まれません。</target>
        </trans-unit>
        <trans-unit id="c7dd6de28d7dfe402cea163f7c72d140efa13648" translate="yes" xml:space="preserve">
          <source>It is the responsibility of the invoker of this method to make sure the output byte array &lt;code&gt;dst&lt;/code&gt; has enough space for decoding all bytes from the input byte array. No bytes will be written to the output byte array if the output byte array is not big enough.</source>
          <target state="translated">このメソッドの呼び出し元は、出力バイト配列 &lt;code&gt;dst&lt;/code&gt; に、入力バイト配列からすべてのバイトをデコードするための十分なスペースがあることを確認する必要があります。出力バイト配列が十分に大きくない場合、出力バイト配列にバイトは書き込まれません。</target>
        </trans-unit>
        <trans-unit id="473e6aed4725895e3aaed34d39ccb386beeb7c5d" translate="yes" xml:space="preserve">
          <source>It is the responsibility of the invoker of this method to make sure the output byte array &lt;code&gt;dst&lt;/code&gt; has enough space for encoding all bytes from the input byte array. No bytes will be written to the output byte array if the output byte array is not big enough.</source>
          <target state="translated">このメソッドの呼び出し側は、出力バイト配列 &lt;code&gt;dst&lt;/code&gt; に、入力バイト配列のすべてのバイトをエンコードするための十分なスペースがあることを確認する必要があります。出力バイト配列が十分に大きくない場合、バイトは出力バイト配列に書き込まれません。</target>
        </trans-unit>
        <trans-unit id="5041ec562b98d6b70cc66a809ec472ff2993190b" translate="yes" xml:space="preserve">
          <source>It is the responsibility of the provider of the concrete &lt;code&gt;LoggerFinder&lt;/code&gt; implementation to ensure that these loggers are not configured by untrusted code without proper permission checks, as configuration performed on such loggers usually affects all applications in the same Java Runtime.</source>
          <target state="translated">これらのロガーで実行される構成は通常、同じJavaランタイム内のすべてのアプリケーションに影響するため、これらのロガーが信頼できないコードによって適切な権限チェックなしで構成されないようにするのは、具体的な &lt;code&gt;LoggerFinder&lt;/code&gt; 実装のプロバイダーの責任です。</target>
        </trans-unit>
        <trans-unit id="18b11af6dc2eda2907dedd68584cc20227ed3bae" translate="yes" xml:space="preserve">
          <source>It is thread-safe.</source>
          <target state="translated">スレッドセーフです。</target>
        </trans-unit>
        <trans-unit id="69d61c70cb8bd82c0845015c8e65550df4d0471c" translate="yes" xml:space="preserve">
          <source>It is unspecified and platform-dependent how decorated windows operate in full-screen mode. For this reason, it is recommended to turn off the decorations in a &lt;code&gt;Frame&lt;/code&gt; or &lt;code&gt;Dialog&lt;/code&gt; object by using the &lt;code&gt;setUndecorated&lt;/code&gt; method.</source>
          <target state="translated">装飾されたウィンドウがフルスクリーンモードでどのように動作するかは、指定されておらず、プラットフォームによって異なります。このため、 &lt;code&gt;setUndecorated&lt;/code&gt; メソッドを使用して、 &lt;code&gt;Frame&lt;/code&gt; または &lt;code&gt;Dialog&lt;/code&gt; オブジェクトの装飾をオフにすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a91229443b428b8678621075c3bbc12226b69f6a" translate="yes" xml:space="preserve">
          <source>It is up to each collection to determine its own synchronization policy. In the absence of a stronger guarantee by the implementation, undefined behavior may result from the invocation of any method on a collection that is being mutated by another thread; this includes direct invocations, passing the collection to a method that might perform invocations, and using an existing iterator to examine the collection.</source>
          <target state="translated">各コレクションが独自の同期化ポリシーを決定するのは、各コレクション次第です。実装によるより強力な保証がない場合、他のスレッドによって突然変異されているコレクション上の任意のメソッドを呼び出した場合、未定義の動作が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="d38dbb092258d670616e55e5a4df3e4e00622f3c" translate="yes" xml:space="preserve">
          <source>It is up to the application to record the notation for later reference, if necessary; notations may appear as attribute values and in unparsed entity declarations, and are sometime used with processing instruction target names.</source>
          <target state="translated">記法は、必要に応じて、後で参照するために記録するのはアプリケーション次第です。</target>
        </trans-unit>
        <trans-unit id="23460a7ac3742542403c74c734f7d9bf3eeaa183" translate="yes" xml:space="preserve">
          <source>It is up to the application to store the information for future use (perhaps in a hash table or object tree). If the application encounters attributes of type &quot;NOTATION&quot;, &quot;ENTITY&quot;, or &quot;ENTITIES&quot;, it can use the information that it obtained through this interface to find the entity and/or notation corresponding with the attribute value.</source>
          <target state="translated">将来の使用のために情報を保存するかどうかはアプリケーション次第です(おそらくハッシュテーブルやオブジェクトツリーに)。アプリケーションが &quot;NOTATION&quot;、&quot;ENTITY&quot;、または &quot;ENTITIES &quot;タイプの属性に遭遇した場合、このインタフェースを通して得られた情報を使用して、属性値に対応するエンティティおよび/または表記法を見つけることができます。</target>
        </trans-unit>
        <trans-unit id="ad5af3d5cb5948ffeed993339f503679639b8b34" translate="yes" xml:space="preserve">
          <source>It is up to the developer to decide if and how they wish to handle the &lt;code&gt;null&lt;/code&gt; case.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; の場合を処理するかどうか、およびどのように処理するかを決定するのは開発者の責任です。</target>
        </trans-unit>
        <trans-unit id="0d3e80cd032b215836a85657cf636103cc355447" translate="yes" xml:space="preserve">
          <source>It is up to the implementation to take into account the &lt;code&gt;URI&lt;/code&gt; and the cookies attributes and security settings to determine which ones should be returned.</source>
          <target state="translated">&lt;code&gt;URI&lt;/code&gt; とCookie属性、およびセキュリティ設定を考慮に入れて、どの属性を返すかを決定するのは、実装次第です。</target>
        </trans-unit>
        <trans-unit id="1823e7e3087956fe2e5b66cef31ab7f1739349d2" translate="yes" xml:space="preserve">
          <source>It is up to the look and feel to honor this property, some may choose to ignore it.</source>
          <target state="translated">それは、このプロパティを尊重するために外観と感じ次第ですが、一部の人はそれを無視することを選択するかもしれません。</target>
        </trans-unit>
        <trans-unit id="ee037843357d2027afb503e1fbea62c5bc3dbf19" translate="yes" xml:space="preserve">
          <source>It is up to the unpacker implementation to take action to suitably set the modification time of each element of its output file.</source>
          <target state="translated">出力ファイルの各要素の修正時間を適切に設定するための行動をとるのはアンパッカーの実装次第です。</target>
        </trans-unit>
        <trans-unit id="8e088e04fc86ca9d604630e6e3c5740718496e6e" translate="yes" xml:space="preserve">
          <source>It is up to the unpacker implementation to take action upon the hint to suitably compress the elements of the resulting unpacked jar.</source>
          <target state="translated">結果として得られるアンパッカーされたjarの要素を適切に圧縮するためのヒントに基づいてアクションを取るのはアンパッカーの実装にかかっています。</target>
        </trans-unit>
        <trans-unit id="15fb2c2b88dd450cc222fe8447643ec8415a7efd" translate="yes" xml:space="preserve">
          <source>It is used by the &lt;code&gt;URL&lt;/code&gt; class to create a &lt;code&gt;URLStreamHandler&lt;/code&gt; for a specific protocol.</source>
          <target state="translated">これは、特定のプロトコルの &lt;code&gt;URLStreamHandler&lt;/code&gt; を作成するために &lt;code&gt;URL&lt;/code&gt; クラスによって使用されます。</target>
        </trans-unit>
        <trans-unit id="d374a26b8ac3059a20e1e979a33cdef8f2dd012f" translate="yes" xml:space="preserve">
          <source>It is usually better for classes that simply represent a collection of data to be &lt;em&gt;immutable&lt;/em&gt;. An instance of an immutable class cannot be changed after it has been constructed. Notice that &lt;code&gt;CompositeData&lt;/code&gt; itself is immutable. Immutability has many advantages, notably with regard to thread-safety and security. So the approach using setters should generally be avoided if possible.</source>
          <target state="translated">通常、データのコレクションを単に表すクラスの方が&lt;em&gt;不変&lt;/em&gt;である方が良いでしょう。不変クラスのインスタンスは、作成後に変更することはできません。 &lt;code&gt;CompositeData&lt;/code&gt; 自体は不変であることに注意してください。不変性には、特にスレッドの安全性とセキュリティに関して多くの利点があります。したがって、可能であれば、セッターを使用するアプローチは一般に避けられるべきです。</target>
        </trans-unit>
        <trans-unit id="b3f2a887ce7a7c2eeead283d6dad855182857119" translate="yes" xml:space="preserve">
          <source>It is very dangerous to allow access to a private key; private keys are supposed to be kept secret. Otherwise, code can use the private key to sign various files and claim the signature came from the Signer.</source>
          <target state="translated">秘密鍵へのアクセスを許可するのは非常に危険です。そうでなければ、コードは秘密鍵を使って様々なファイルに署名し、署名は署名者から来たものだと主張することができます。</target>
        </trans-unit>
        <trans-unit id="5ba3ff4b9343c57651813d2cbf10450d1178cc4c" translate="yes" xml:space="preserve">
          <source>It is worth noting that the terms</source>
          <target state="translated">注目すべきは、用語</target>
        </trans-unit>
        <trans-unit id="1108ebfaf608a09ea4a649d37981baed219196a2" translate="yes" xml:space="preserve">
          <source>It it implementation specific if the file owner can be a &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;group&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ファイルの所有者が&lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;group&lt;/code&gt; &lt;/a&gt;場合、それは実装固有です。</target>
        </trans-unit>
        <trans-unit id="5fbeb2b190518784bf959a5890b4282812edad1c" translate="yes" xml:space="preserve">
          <source>It it implementation specific if the file owner can be a &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;group&lt;/code&gt;&lt;/a&gt;. To ensure consistent and correct behavior across platforms it is recommended that this method should only be used to set the file owner to a user principal that is not a group.</source>
          <target state="translated">ファイルの所有者が&lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;group&lt;/code&gt; &lt;/a&gt;場合、それは実装固有です。プラットフォーム全体で一貫した正しい動作を保証するには、このメソッドを使用して、ファイル所有者をグループではないユーザープリンシパルに設定することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="35d7448b5829a392970adf857411421c92ab4755" translate="yes" xml:space="preserve">
          <source>It manages a list of enabled attribute names. A method allows users to enable/disable as many attribute names as required.</source>
          <target state="translated">有効化された属性名のリストを管理します。メソッドは、ユーザーが必要な数だけ属性名を有効化/無効化することを可能にします。</target>
        </trans-unit>
        <trans-unit id="df659b958e9cf03c00f9dbfddad7f68f85641555" translate="yes" xml:space="preserve">
          <source>It may be more convenient to use one of the &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; factory methods instead of this general purpose constructor.</source>
          <target state="translated">この汎用コンストラクターの代わりに、&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;ファクトリメソッドの1つを使用する方が便利な場合があります。</target>
        </trans-unit>
        <trans-unit id="95b3cf256dcae8456c1a8958e2db48e8a5617945" translate="yes" xml:space="preserve">
          <source>It may be more efficient to reuse an existing object rather than constantly allocating new ones.</source>
          <target state="translated">常に新しいオブジェクトを割り当てるよりも、既存のオブジェクトを再利用する方が効率的かもしれません。</target>
        </trans-unit>
        <trans-unit id="d127a6472e45cb74085803f6a7c1556ce9cd9629" translate="yes" xml:space="preserve">
          <source>It means that &lt;a href=&quot;plaf/layerui#eventDispatched(java.awt.AWTEvent,javax.swing.JLayer)&quot;&gt;&lt;code&gt;LayerUI.eventDispatched(AWTEvent, JLayer)&lt;/code&gt;&lt;/a&gt; method will only receive events that match the event mask.</source>
          <target state="translated">これは、&lt;a href=&quot;plaf/layerui#eventDispatched(java.awt.AWTEvent,javax.swing.JLayer)&quot;&gt; &lt;code&gt;LayerUI.eventDispatched(AWTEvent, JLayer)&lt;/code&gt; &lt;/a&gt;メソッドが、イベントマスクに一致するイベントのみを受信することを意味します。</target>
        </trans-unit>
        <trans-unit id="e86364a75e278cb7e243ebfaece9e0cb34b029d6" translate="yes" xml:space="preserve">
          <source>It might be necessary for the application to be granted a &lt;a href=&quot;../../../../../java.base/javax/security/auth/privatecredentialpermission&quot;&gt;&lt;code&gt;PrivateCredentialPermission&lt;/code&gt;&lt;/a&gt; if it needs to access a &lt;code&gt;KerberosTicket&lt;/code&gt; instance from a &lt;code&gt;Subject&lt;/code&gt;. This permission is not needed when the application depends on the default JGSS Kerberos mechanism to access the &lt;code&gt;KerberosTicket&lt;/code&gt;. In that case, however, the application will need an appropriate &lt;a href=&quot;servicepermission&quot;&gt;&lt;code&gt;ServicePermission&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Subject&lt;/code&gt; から &lt;code&gt;KerberosTicket&lt;/code&gt; インスタンスにアクセスする必要がある場合は、アプリケーションに&lt;a href=&quot;../../../../../java.base/javax/security/auth/privatecredentialpermission&quot;&gt; &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; を&lt;/a&gt;付与する必要がある場合があります。アプリケーションがアクセスするのにデフォルトのJGSS Kerberos機構に依存する場合、この許可は必要ありません &lt;code&gt;KerberosTicket&lt;/code&gt; のを。ただし、その場合、アプリケーションには適切な&lt;a href=&quot;servicepermission&quot;&gt; &lt;code&gt;ServicePermission&lt;/code&gt; &lt;/a&gt;が必要です。</target>
        </trans-unit>
        <trans-unit id="cc21c8aac6e7eeb9275cc8469a8a6a474cc831b9" translate="yes" xml:space="preserve">
          <source>It might be necessary for the application to be granted a &lt;a href=&quot;../../../../../java.base/javax/security/auth/privatecredentialpermission&quot;&gt;&lt;code&gt;PrivateCredentialPermission&lt;/code&gt;&lt;/a&gt; if it needs to access the &lt;code&gt;KerberosKey&lt;/code&gt; instance from a Subject. This permission is not needed when the application depends on the default JGSS Kerberos mechanism to access the &lt;code&gt;KerberosKey&lt;/code&gt;. In that case, however, the application will need an appropriate &lt;a href=&quot;servicepermission&quot;&gt;&lt;code&gt;ServicePermission&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブジェクトから &lt;code&gt;KerberosKey&lt;/code&gt; インスタンスにアクセスする必要がある場合は、アプリケーションに&lt;a href=&quot;../../../../../java.base/javax/security/auth/privatecredentialpermission&quot;&gt; &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; を&lt;/a&gt;付与する必要がある場合があります。アプリケーションがアクセスするのにデフォルトのJGSS Kerberos機構に依存する場合、この許可は必要ありません &lt;code&gt;KerberosKey&lt;/code&gt; 。ただし、その場合、アプリケーションには適切な&lt;a href=&quot;servicepermission&quot;&gt; &lt;code&gt;ServicePermission&lt;/code&gt; &lt;/a&gt;が必要です。</target>
        </trans-unit>
        <trans-unit id="b02a552d143831ab92e89f1a5620b24c84fa9876" translate="yes" xml:space="preserve">
          <source>It might be necessary for the application to be granted a &lt;a href=&quot;../../../../../java.base/javax/security/auth/privatecredentialpermission&quot;&gt;&lt;code&gt;PrivateCredentialPermission&lt;/code&gt;&lt;/a&gt; if it needs to access the &lt;code&gt;KeyTab&lt;/code&gt; instance from a &lt;code&gt;Subject&lt;/code&gt;. This permission is not needed when the application depends on the default JGSS Kerberos mechanism to access the &lt;code&gt;KeyTab&lt;/code&gt;. In that case, however, the application will need an appropriate &lt;a href=&quot;servicepermission&quot;&gt;&lt;code&gt;ServicePermission&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Subject&lt;/code&gt; から &lt;code&gt;KeyTab&lt;/code&gt; インスタンスにアクセスする必要がある場合は、アプリケーションに&lt;a href=&quot;../../../../../java.base/javax/security/auth/privatecredentialpermission&quot;&gt; &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; を&lt;/a&gt;付与する必要がある場合があります。アプリケーションが &lt;code&gt;KeyTab&lt;/code&gt; にアクセスするためにデフォルトのJGSSKerberosメカニズムに依存している場合、この権限は必要ありません。ただし、その場合、アプリケーションには適切な&lt;a href=&quot;servicepermission&quot;&gt; &lt;code&gt;ServicePermission&lt;/code&gt; &lt;/a&gt;が必要です。</target>
        </trans-unit>
        <trans-unit id="f1b1880fb6f2f8dfd0085dc88a78c84bf46512ce" translate="yes" xml:space="preserve">
          <source>It might be necessary for the application to be granted a &lt;a href=&quot;../privatecredentialpermission&quot;&gt;&lt;code&gt;PrivateCredentialPermission&lt;/code&gt;&lt;/a&gt; if it needs to access a KerberosTicket instance from a Subject. This permission is not needed when the application depends on the default JGSS Kerberos mechanism to access the KerberosTicket. In that case, however, the application will need an appropriate &lt;a href=&quot;servicepermission&quot;&gt;&lt;code&gt;ServicePermission&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブジェクトからKerberosTicketインスタンスにアクセスする必要がある場合は、アプリケーションに&lt;a href=&quot;../privatecredentialpermission&quot;&gt; &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; を&lt;/a&gt;付与する必要がある場合があります。アプリケーションがKerberosTicketにアクセスするためにデフォルトのJGSS Kerberosメカニズムに依存している場合、この権限は必要ありません。ただしその場合、アプリケーションには適切な&lt;a href=&quot;servicepermission&quot;&gt; &lt;code&gt;ServicePermission&lt;/code&gt; &lt;/a&gt;が必要です。</target>
        </trans-unit>
        <trans-unit id="dded1117c888781b47807efea81d1e2aad1878ba" translate="yes" xml:space="preserve">
          <source>It might be necessary for the application to be granted a &lt;a href=&quot;../privatecredentialpermission&quot;&gt;&lt;code&gt;PrivateCredentialPermission&lt;/code&gt;&lt;/a&gt; if it needs to access the KerberosKey instance from a Subject. This permission is not needed when the application depends on the default JGSS Kerberos mechanism to access the KerberosKey. In that case, however, the application will need an appropriate &lt;a href=&quot;servicepermission&quot;&gt;&lt;code&gt;ServicePermission&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブジェクトからKerberosKeyインスタンスにアクセスする必要がある場合は、アプリケーションに&lt;a href=&quot;../privatecredentialpermission&quot;&gt; &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; を&lt;/a&gt;付与する必要がある場合があります。アプリケーションがKerberosKeyにアクセスするためにデフォルトのJGSS Kerberosメカニズムに依存している場合、この権限は必要ありません。ただしその場合、アプリケーションには適切な&lt;a href=&quot;servicepermission&quot;&gt; &lt;code&gt;ServicePermission&lt;/code&gt; &lt;/a&gt;が必要です。</target>
        </trans-unit>
        <trans-unit id="159b886614cc479bceccd5519263c45bf0712c45" translate="yes" xml:space="preserve">
          <source>It might be necessary for the application to be granted a &lt;a href=&quot;../privatecredentialpermission&quot;&gt;&lt;code&gt;PrivateCredentialPermission&lt;/code&gt;&lt;/a&gt; if it needs to access the KeyTab instance from a Subject. This permission is not needed when the application depends on the default JGSS Kerberos mechanism to access the KeyTab. In that case, however, the application will need an appropriate &lt;a href=&quot;servicepermission&quot;&gt;&lt;code&gt;ServicePermission&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブジェクトからKeyTabインスタンスにアクセスする必要がある場合は、アプリケーションに&lt;a href=&quot;../privatecredentialpermission&quot;&gt; &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; を&lt;/a&gt;付与する必要がある場合があります。アプリケーションがKeyTabにアクセスするためにデフォルトのJGSS Kerberosメカニズムに依存している場合、この権限は必要ありません。ただしその場合、アプリケーションには適切な&lt;a href=&quot;servicepermission&quot;&gt; &lt;code&gt;ServicePermission&lt;/code&gt; &lt;/a&gt;が必要です。</target>
        </trans-unit>
        <trans-unit id="a3c19fee5a2e3e0fe116bf466a1b0a9d29aeca45" translate="yes" xml:space="preserve">
          <source>It might not coincide exactly with the ascent, descent, origin or advance of the &lt;code&gt;TextLayout&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TextLayout&lt;/code&gt; の上昇、下降、原点、または前進と正確に一致しない場合があります。</target>
        </trans-unit>
        <trans-unit id="6dcf79d2f1a758a1ea747f40292143a13049a4fb" translate="yes" xml:space="preserve">
          <source>It might seem fairly obvious that a plug-in for JEditorPane should provide editing support, but that fact has several design considerations. There are a substantial number of HTML documents that don't properly conform to an HTML specification. These must be normalized somewhat into a correct form if one is to edit them. Additionally, users don't like to be presented with an excessive amount of structure editing, so using traditional text editing gestures is preferred over using the HTML structure exactly as defined in the HTML document.</source>
          <target state="translated">JEditorPane 用のプラグインが編集サポートを提供すべきであることは明らかなように思われるかもしれませんが、その事実にはいくつかの設計上の考慮事項があります。HTML 仕様に正しく準拠していない HTML ドキュメントがかなりの数存在します。これらの文書を編集するためには、ある程度正しい形に正規化されていなければなりません。さらに、ユーザーは過剰な量の構造編集を提示されるのを好まないので、HTML文書で定義されている通りのHTML構造を正確に使用するよりも、伝統的なテキスト編集ジェスチャーを使用する方が好ましいです。</target>
        </trans-unit>
        <trans-unit id="763f3a6620d69b1b824c613e8b4831be6eb7ee18" translate="yes" xml:space="preserve">
          <source>It must be that &lt;code&gt;Vn == Bn&lt;/code&gt; for &lt;code&gt;n = 1..min(X,Q)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;n = 1..min(X,Q)&lt;/code&gt; 場合、 &lt;code&gt;Vn == Bn&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="da3c4c7a030661a4e826771903ef82d188dc45f8" translate="yes" xml:space="preserve">
          <source>It must read each of the attributes or elements of the SQL type from the given input stream. This is done by calling a method of the input stream to read each item, in the order that they appear in the SQL definition of the type.</source>
          <target state="translated">これは,与えられた入力ストリームからSQL型の各属性または要素を読み込まなければならない.これは、入力ストリームのメソッドを呼び出して、各項目を、型のSQL定義に現れる順に読み取ることで行われます。</target>
        </trans-unit>
        <trans-unit id="261c94188e6dcdf1d0aa8752f6ce8515e918619a" translate="yes" xml:space="preserve">
          <source>It must write each of the attributes of the SQL type to the given output stream. This is done by calling a method of the output stream to write each item, in the order that they appear in the SQL definition of the type. Specifically, it must call the appropriate &lt;code&gt;SQLOutput&lt;/code&gt; writer method(s) (&lt;code&gt;writeInt&lt;/code&gt;, &lt;code&gt;writeString&lt;/code&gt;, and so on) to do the following: for a Distinct Type, write its single data element; for a Structured Type, write a value for each attribute of the SQL type.</source>
          <target state="translated">SQLタイプの各属性を指定された出力ストリームに書き込む必要があります。これは、出力ストリームのメソッドを呼び出して、タイプのSQL定義に表示される順序で各項目を書き込むことによって行われます。具体的には、適切な &lt;code&gt;SQLOutput&lt;/code&gt; ライターメソッド（ &lt;code&gt;writeInt&lt;/code&gt; 、 &lt;code&gt;writeString&lt;/code&gt; など）を呼び出して、次のことを行う必要があります。DistinctTypeの場合、単一のデータ要素を書き込みます。構造化タイプの場合は、SQLタイプの各属性に値を書き込みます。</target>
        </trans-unit>
        <trans-unit id="a9e853dc56bf3e2f9258d7f57d58a457bf441035" translate="yes" xml:space="preserve">
          <source>It provides an immutable object used by sockets for binding, connecting, or as returned values.</source>
          <target state="translated">ソケットがバインド、接続、または戻り値として使用する不変オブジェクトを提供します。</target>
        </trans-unit>
        <trans-unit id="03db269e85ebe37f49a586262496899b0627b760" translate="yes" xml:space="preserve">
          <source>It provides the following capabilities:</source>
          <target state="translated">以下の機能を提供します。</target>
        </trans-unit>
        <trans-unit id="eb34f67d20bf35efcc37abb210978c0d0e196d7e" translate="yes" xml:space="preserve">
          <source>It reads characters from the input sequence, starting at the append position, and appends them to the given string buffer. It stops after reading the last character preceding the previous match, that is, the character at index &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;-&lt;/code&gt;&lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">追加位置から開始して入力シーケンスから文字を読み取り、指定された文字列バッファに追加します。前の一致に先行する最後の文字、つまりインデックス&lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;-&lt;/code&gt; &lt;code&gt;1&lt;/code&gt; の文字を読み取った後に停止します。</target>
        </trans-unit>
        <trans-unit id="c91967887bab45e100ef9336c9a3dccc3362edae" translate="yes" xml:space="preserve">
          <source>It reads characters from the input sequence, starting at the append position, and appends them to the given string buffer. It stops after reading the last character preceding the previous match, that is, the character at index &lt;a href=&quot;matcher#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;-&lt;/code&gt;&lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">追加シーケンスから入力シーケンスから文字を読み取り、指定された文字列バッファーに追加します。前の一致に先行する最後の文字、つまりインデックス&lt;a href=&quot;matcher#start--&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;-&lt;/code&gt; &lt;code&gt;1&lt;/code&gt; の文字を読み取った後、停止します。</target>
        </trans-unit>
        <trans-unit id="9f7ab7479c5183f96945f4a855751d3ed1821d17" translate="yes" xml:space="preserve">
          <source>It reads characters from the input sequence, starting at the append position, and appends them to the given string builder. It stops after reading the last character preceding the previous match, that is, the character at index &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;-&lt;/code&gt;&lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">追加位置から開始して入力シーケンスから文字を読み取り、指定された文字列ビルダーに追加します。前の一致に先行する最後の文字、つまりインデックス&lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;-&lt;/code&gt; &lt;code&gt;1&lt;/code&gt; の文字を読み取った後に停止します。</target>
        </trans-unit>
        <trans-unit id="9e6c560eb19cbee547df9776cd4af5293c912b2f" translate="yes" xml:space="preserve">
          <source>It represents a relation type, providing role information for each role expected to be supported in every relation of that type.</source>
          <target state="translated">これはリレーション型を表し、その型のすべてのリレーションでサポートされることが期待される各ロールのロール情報を提供します。</target>
        </trans-unit>
        <trans-unit id="5959cc58821c488eb7be26b401497bd1b9ab2011" translate="yes" xml:space="preserve">
          <source>It represents the following Oid value:</source>
          <target state="translated">以下のOid値を表します。</target>
        </trans-unit>
        <trans-unit id="5341d85928b32f11b917a585843b586666c1ffb4" translate="yes" xml:space="preserve">
          <source>It returns a non-null &lt;code&gt;DirStateFactory.Result&lt;/code&gt; instance containing the object to be bound, and the attributes to accompany the binding. Either the object or the attributes may be null.</source>
          <target state="translated">バインドされるオブジェクトとバインドに付随する属性を含むnull &lt;code&gt;DirStateFactory.Result&lt;/code&gt; インスタンスを返します。オブジェクトまたは属性がnullの可能性があります。</target>
        </trans-unit>
        <trans-unit id="c45a6655340f219d633ecc31064b7151a3f8a894" translate="yes" xml:space="preserve">
          <source>It sets the append position of this matcher to the index of the last character matched, plus one, that is, to &lt;a href=&quot;#end()&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このマッチャーの追加位置を、最後に一致した文字のインデックスに1を加えたもの、つまり&lt;a href=&quot;#end()&quot;&gt; &lt;code&gt;end()&lt;/code&gt; に設定し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="f28624e7b2c1c92e353c2792e91de96b859d7bf9" translate="yes" xml:space="preserve">
          <source>It sets the append position of this matcher to the index of the last character matched, plus one, that is, to &lt;a href=&quot;matcher#end--&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、この正規表現エンジンの追加位置を、一致した最後の文字のインデックスに1を加えたインデックス、つまり&lt;a href=&quot;matcher#end--&quot;&gt; &lt;code&gt;end()&lt;/code&gt; に設定し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="5028d416053c0a510d2aaf36f880b2c9f2c35edd" translate="yes" xml:space="preserve">
          <source>It should be noted that a URLConnection instance does not establish the actual network connection on creation. This will happen only when calling &lt;a href=&quot;urlconnection#connect()&quot;&gt;URLConnection.connect()&lt;/a&gt;.</source>
          <target state="translated">URLConnectionインスタンスは、作成時に実際のネットワーク接続を確立しないことに注意してください。これは、&lt;a href=&quot;urlconnection#connect()&quot;&gt;URLConnection.connect（）を&lt;/a&gt;呼び出す場合にのみ発生します。</target>
        </trans-unit>
        <trans-unit id="e76f77e34968c856fae3173c9cf422521e429099" translate="yes" xml:space="preserve">
          <source>It should be noted that a URLConnection instance does not establish the actual network connection on creation. This will happen only when calling &lt;a href=&quot;urlconnection#connect--&quot;&gt;URLConnection.connect()&lt;/a&gt;.</source>
          <target state="translated">URLConnectionインスタンスは、作成時に実際のネットワーク接続を確立しないことに注意してください。これは、&lt;a href=&quot;urlconnection#connect--&quot;&gt;URLConnection.connect（）を&lt;/a&gt;呼び出したときにのみ発生します。</target>
        </trans-unit>
        <trans-unit id="03d41b34c385692b430b2fdb155206c91fd6a322" translate="yes" xml:space="preserve">
          <source>It should not be called from application code.</source>
          <target state="translated">アプリケーションコードから呼び出されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="28da0c1c79c14991b1bf5de630f965817bbe695f" translate="yes" xml:space="preserve">
          <source>It specifies first the critical controls for creating the initial context (&lt;code&gt;critConnCtls&lt;/code&gt;), and then sets the context's request controls (&lt;code&gt;critModCtls&lt;/code&gt;) for the context operation. If for some reason &lt;code&gt;lctx&lt;/code&gt; needs to reconnect to the server, it will use &lt;code&gt;critConnCtls&lt;/code&gt;. See the &lt;code&gt;LdapContext&lt;/code&gt; interface for more discussion about request controls.</source>
          <target state="translated">まず、初期コンテキストを作成するための重要なコントロール（ &lt;code&gt;critConnCtls&lt;/code&gt; ）を指定し、次にコンテキスト操作のコンテキストの要求コントロール（ &lt;code&gt;critModCtls&lt;/code&gt; ）を設定します。何らかの理由で &lt;code&gt;lctx&lt;/code&gt; がサーバーに再接続する必要がある場合、それは &lt;code&gt;critConnCtls&lt;/code&gt; を使用します。リクエストコントロールの詳細については、 &lt;code&gt;LdapContext&lt;/code&gt; インターフェースをご覧ください。</target>
        </trans-unit>
        <trans-unit id="d543bf725aa9865b2e5f70ef4e13c530a6bd8521" translate="yes" xml:space="preserve">
          <source>It supports some common information that can be set and retrieved for any of the introspection descriptors.</source>
          <target state="translated">内観記述子のいずれかを設定して検索することができる、いくつかの共通情報をサポートしています。</target>
        </trans-unit>
        <trans-unit id="8ac5c68ee59534b2a5d1d79fccfcea69b47f57e6" translate="yes" xml:space="preserve">
          <source>It will always be true that</source>
          <target state="translated">いつの時代も</target>
        </trans-unit>
        <trans-unit id="86da4d14a7cbaf86e3c9c6bf64564637d8b04ced" translate="yes" xml:space="preserve">
          <source>It will return 200 and 401 respectively. Returns -1 if no code can be discerned from the response (i.e., the response is not valid HTTP).</source>
          <target state="translated">それぞれ 200 と 401 を返します。レスポンスからコードが判別できない場合 (つまり、レスポンスが有効な HTTP ではない場合)は -1 を返します。</target>
        </trans-unit>
        <trans-unit id="14cd7513a0b74b155fa143c2d47ffc18cc507efb" translate="yes" xml:space="preserve">
          <source>It's also possible to create an &lt;code&gt;EventHandler&lt;/code&gt; that just passes the incoming event object to the target's action. If the fourth &lt;code&gt;EventHandler.create&lt;/code&gt; argument is an empty string, then the event is just passed along:</source>
          <target state="translated">着信イベントオブジェクトをターゲットのアクションに渡すだけの &lt;code&gt;EventHandler&lt;/code&gt; を作成することもできます。4番目の &lt;code&gt;EventHandler.create&lt;/code&gt; 引数が空の文字列の場合、イベントは単に渡されます。</target>
        </trans-unit>
        <trans-unit id="57e35862240d1d60a58ab4c2c4912d4974ad9077" translate="yes" xml:space="preserve">
          <source>It's easy to display an array or Vector of objects, using the &lt;code&gt;JList&lt;/code&gt; constructor that automatically builds a read-only &lt;code&gt;ListModel&lt;/code&gt; instance for you:</source>
          <target state="translated">読み取り専用の &lt;code&gt;ListModel&lt;/code&gt; インスタンスを自動的に構築する &lt;code&gt;JList&lt;/code&gt; コンストラクターを使用すると、オブジェクトの配列またはベクターを簡単に表示できます。</target>
        </trans-unit>
        <trans-unit id="530dc5bdd7fcfe1e14833e7bad181a31ba12d91f" translate="yes" xml:space="preserve">
          <source>It's important to note that &lt;code&gt;getDefaults&lt;/code&gt; returns a custom instance of &lt;code&gt;UIDefaults&lt;/code&gt; with this resolution logic built into it. For example, &lt;code&gt;UIManager.getDefaults().getString(&quot;Table.foreground&quot;)&lt;/code&gt; is equivalent to &lt;code&gt;UIManager.getString(&quot;Table.foreground&quot;)&lt;/code&gt;. Both resolve using the algorithm just described. In many places the documentation uses the word defaults to refer to the custom instance of &lt;code&gt;UIDefaults&lt;/code&gt; with the resolution logic as previously described.</source>
          <target state="translated">&lt;code&gt;getDefaults&lt;/code&gt; は、この解決ロジックが組み込まれた &lt;code&gt;UIDefaults&lt;/code&gt; のカスタムインスタンスを返すことに注意することが重要です。例えば、 &lt;code&gt;UIManager.getDefaults().getString(&quot;Table.foreground&quot;)&lt;/code&gt; と等価である &lt;code&gt;UIManager.getString(&quot;Table.foreground&quot;)&lt;/code&gt; 。どちらも、今説明したアルゴリズムを使用して解決します。多くの場所で、ドキュメントではdefaultsという単語を使用して、前述の解決ロジックで &lt;code&gt;UIDefaults&lt;/code&gt; のカスタムインスタンスを参照しています。</target>
        </trans-unit>
        <trans-unit id="d3e40be96c416734368abadd8842b0b762df0807" translate="yes" xml:space="preserve">
          <source>It's rarely necessary to call this method. In most cases it's more efficient to call repaint, which defers the actual painting and can collapse redundant requests into a single paint call. This method is useful if one needs to update the display while the current event is being dispatched.</source>
          <target state="translated">このメソッドを呼び出す必要はほとんどありません。ほとんどの場合、実際の描画を延期し、冗長なリクエストを単一の paint 呼び出しにまとめることができる repaint を呼び出した方が効率的です。このメソッドは、現在のイベントがディスパッチされている間にディスプレイを更新する必要がある場合に便利です。</target>
        </trans-unit>
        <trans-unit id="2bfe0188487f986eb2135360f100504c01c8e367" translate="yes" xml:space="preserve">
          <source>It's up to the MBean owning the attribute of interest to create and send attribute change notifications when the attribute change occurs. So the &lt;code&gt;NotificationBroadcaster&lt;/code&gt; interface has to be implemented by any MBean for which an attribute change is of interest.</source>
          <target state="translated">属性変更が発生したときに属性変更通知を作成して送信するのは、対象の属性を所有するMBeanです。したがって、 &lt;code&gt;NotificationBroadcaster&lt;/code&gt; インターフェースは、属性の変更が関係するMBeanによって実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="1616e2e5405e69c4e3914c67c644a9bd3ac00956" translate="yes" xml:space="preserve">
          <source>Italic</source>
          <target state="translated">Italic</target>
        </trans-unit>
        <trans-unit id="d784dcd1a081535b092e5c13443b7db349676234" translate="yes" xml:space="preserve">
          <source>ItalicAction</source>
          <target state="translated">ItalicAction</target>
        </trans-unit>
        <trans-unit id="042bf18f058c5fa964d6758889b9a92420889be9" translate="yes" xml:space="preserve">
          <source>Italy envelope size .</source>
          <target state="translated">イタリアの封筒のサイズ。</target>
        </trans-unit>
        <trans-unit id="93eefb08700016e4204e66b34c57ca1f290bf26f" translate="yes" xml:space="preserve">
          <source>Italy envelope size.</source>
          <target state="translated">イタリアの封筒サイズ。</target>
        </trans-unit>
        <trans-unit id="497c978bc23e248ed2bce11b5cf53ae55becfabe" translate="yes" xml:space="preserve">
          <source>Item Name</source>
          <target state="translated">項目名</target>
        </trans-unit>
        <trans-unit id="a9fc13b3e434d94d54f72bb3e08df74924bb6fb9" translate="yes" xml:space="preserve">
          <source>Item Type</source>
          <target state="translated">アイテムタイプ</target>
        </trans-unit>
        <trans-unit id="45cc25cd16b8450daf0276e7e08280b84a45ae39" translate="yes" xml:space="preserve">
          <source>Item events are enabled via &lt;code&gt;enableEvents&lt;/code&gt;.</source>
          <target state="translated">アイテムイベントは、 &lt;code&gt;enableEvents&lt;/code&gt; を介して有効になります。</target>
        </trans-unit>
        <trans-unit id="0e6b0aaf4eec679be6e8deb669db3747be5052ad" translate="yes" xml:space="preserve">
          <source>ItemEvent</source>
          <target state="translated">ItemEvent</target>
        </trans-unit>
        <trans-unit id="55078b83c85b569af6566bce7f5c04ec92d3f2b1" translate="yes" xml:space="preserve">
          <source>ItemHandler</source>
          <target state="translated">ItemHandler</target>
        </trans-unit>
        <trans-unit id="191c8ad6592e0cd04d90e68112c5f81c508483f8" translate="yes" xml:space="preserve">
          <source>ItemListener</source>
          <target state="translated">ItemListener</target>
        </trans-unit>
        <trans-unit id="f69a00650c912caa7540bb22c0adb8b26e7cf4e4" translate="yes" xml:space="preserve">
          <source>ItemSelectable</source>
          <target state="translated">ItemSelectable</target>
        </trans-unit>
        <trans-unit id="b13a8770bce830833ff48c417a28f3880f73b81e" translate="yes" xml:space="preserve">
          <source>Items run left to right and lines flow top to bottom Examples: English, French.</source>
          <target state="translated">項目は左から右へ、線は上から下へと流れていきます。英語、フランス語</target>
        </trans-unit>
        <trans-unit id="d3e83db2edc1ee8cca3ebd616aee5ba7c446b408" translate="yes" xml:space="preserve">
          <source>Items run right to left and lines flow top to bottom Examples: Arabic, Hebrew.</source>
          <target state="translated">項目は右から左へ、線は上から下へ流れます。アラビア語、ヘブライ語</target>
        </trans-unit>
        <trans-unit id="08ca6a3da933ca6826a2f4d3fcc919af71d7e380" translate="yes" xml:space="preserve">
          <source>Iterable</source>
          <target state="translated">Iterable</target>
        </trans-unit>
        <trans-unit id="ef43f418eedd848161ce90962d81b3368bb81cfb" translate="yes" xml:space="preserve">
          <source>Iterable.forEach()</source>
          <target state="translated">Iterable.forEach()</target>
        </trans-unit>
        <trans-unit id="267f460cfa9d3bfe2791d937d97710dce1ede9b7" translate="yes" xml:space="preserve">
          <source>Iterable.iterator()</source>
          <target state="translated">Iterable.iterator()</target>
        </trans-unit>
        <trans-unit id="9ea34ce71385f0a3bc919de66e4d326bb3ed15d9" translate="yes" xml:space="preserve">
          <source>Iterable.spliterator()</source>
          <target state="translated">Iterable.spliterator()</target>
        </trans-unit>
        <trans-unit id="12b64a094b26d9885b5177e651b55872e6594f67" translate="yes" xml:space="preserve">
          <source>Iterates over the Element tree and controls the writing out of all the tags and its attributes.</source>
          <target state="translated">要素ツリーを反復処理し、すべてのタグとその属性の書き出しを制御します。</target>
        </trans-unit>
        <trans-unit id="9f14ca0be90db4b98d0f003728352d3e80572aef" translate="yes" xml:space="preserve">
          <source>Iterates over the elements in the document and processes elements based on whether they are branch elements or leaf elements.</source>
          <target state="translated">文書内の要素を繰り返し処理し、枝要素か葉要素かに基づいて要素を処理します。</target>
        </trans-unit>
        <trans-unit id="64a43aafcc502a083887d82e6e8375d028c6c5bb" translate="yes" xml:space="preserve">
          <source>Iterates over the elements in the document and processes elements based on whether they are branch elements or leaf elements. This method specially handles leaf elements that are text.</source>
          <target state="translated">文書内の要素を反復処理し、それが枝要素か葉要素かに基づいて要素を処理します。このメソッドは、テキストであるリーフ要素を特別に処理します。</target>
        </trans-unit>
        <trans-unit id="95a5d9eaf22c6aaf9ca8eed66096ef7e3f363934" translate="yes" xml:space="preserve">
          <source>Iterates over the given elements and calls &lt;a href=&quot;#scan(javax.lang.model.element.Element,P)&quot;&gt;&lt;code&gt;scan(Element, P)&lt;/code&gt;&lt;/a&gt; on each one.</source>
          <target state="translated">指定された要素を反復処理し、各&lt;a href=&quot;#scan(javax.lang.model.element.Element,P)&quot;&gt; &lt;code&gt;scan(Element, P)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="b5d6f54edec0147a36176b3423eec90d5cd181e1" translate="yes" xml:space="preserve">
          <source>Iterates over the given elements and calls &lt;a href=&quot;#scan(javax.lang.model.element.Element,P)&quot;&gt;&lt;code&gt;scan(Element, P)&lt;/code&gt;&lt;/a&gt; on each one. Returns the result of the last call to &lt;code&gt;scan&lt;/code&gt; or &lt;code&gt;
 DEFAULT_VALUE&lt;/code&gt; for an empty iterable.</source>
          <target state="translated">指定された要素を反復処理し、各&lt;a href=&quot;#scan(javax.lang.model.element.Element,P)&quot;&gt; &lt;code&gt;scan(Element, P)&lt;/code&gt; &lt;/a&gt;を呼び出します。最後に &lt;code&gt;scan&lt;/code&gt; 呼び出した結果、または空のイテラブルの &lt;code&gt; DEFAULT_VALUE&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7096fc25f38538dc30ee1b4130be21575083bbc8" translate="yes" xml:space="preserve">
          <source>Iterates over the given elements and calls &lt;a href=&quot;elementscanner6#scan-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;scan(Element, P)&lt;/code&gt;&lt;/a&gt; on each one. Returns the result of the last call to &lt;code&gt;scan&lt;/code&gt; or &lt;code&gt;DEFAULT_VALUE&lt;/code&gt; for an empty iterable.</source>
          <target state="translated">指定された要素を反復処理し、各&lt;a href=&quot;elementscanner6#scan-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;scan(Element, P)&lt;/code&gt; &lt;/a&gt;を呼び出します。 &lt;code&gt;scan&lt;/code&gt; の最後の呼び出しの結果を返すか、空のイテラブルの &lt;code&gt;DEFAULT_VALUE&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8afe2bc2d743d836be68137d1b34e80cedd0eb49" translate="yes" xml:space="preserve">
          <source>Iteration of primitive values using boxing-based methods &lt;a href=&quot;iterator#next()&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator#forEachRemaining(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEachRemaining()&lt;/code&gt;&lt;/a&gt;, does not affect the order in which the values, transformed to boxed values, are encountered.</source>
          <target state="translated">ボックスベースのメソッド&lt;a href=&quot;iterator#next()&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;iterator#forEachRemaining(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEachRemaining()&lt;/code&gt; &lt;/a&gt;を使用したプリミティブ値の反復は、ボックス化された値に変換された値が検出される順序には影響しません。</target>
        </trans-unit>
        <trans-unit id="44d88cfe0e4180e6da2767f9294af8ec89ac45e5" translate="yes" xml:space="preserve">
          <source>Iteration of primitive values using boxing-based methods &lt;a href=&quot;iterator#next--&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator#forEachRemaining-java.util.function.Consumer-&quot;&gt;&lt;code&gt;forEachRemaining()&lt;/code&gt;&lt;/a&gt;, does not affect the order in which the values, transformed to boxed values, are encountered.</source>
          <target state="translated">ボックス化ベースのメソッド&lt;a href=&quot;iterator#next--&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;iterator#forEachRemaining-java.util.function.Consumer-&quot;&gt; &lt;code&gt;forEachRemaining()&lt;/code&gt; &lt;/a&gt;を使用したプリミティブ値の反復は、ボックス化された値に変換された値が出現する順序には影響しません。</target>
        </trans-unit>
        <trans-unit id="e37a3c5afbec7e4c5ee2e536894a77c21db12a9c" translate="yes" xml:space="preserve">
          <source>Iteration over this queue is &lt;em&gt;not&lt;/em&gt; guaranteed to traverse tasks in the order in which they will execute.</source>
          <target state="translated">このキューでの反復は、タスクが実行される順序でタスクをトラバースすることが保証されて&lt;em&gt;いませ&lt;/em&gt;ん。</target>
        </trans-unit>
        <trans-unit id="bae8809b2429231a50c28ba87cecc038aac88855" translate="yes" xml:space="preserve">
          <source>Iterator</source>
          <target state="translated">Iterator</target>
        </trans-unit>
        <trans-unit id="b0628f8f0c03155427f08e84a5c0d735d3a54730" translate="yes" xml:space="preserve">
          <source>Iterator.forEachRemaining()</source>
          <target state="translated">Iterator.forEachRemaining()</target>
        </trans-unit>
        <trans-unit id="b988d194cf1a284c44207987379b50ca5d2d3ecd" translate="yes" xml:space="preserve">
          <source>Iterator.hasNext()</source>
          <target state="translated">Iterator.hasNext()</target>
        </trans-unit>
        <trans-unit id="998f38b51ea45889d523b65844f1bb755807c2f4" translate="yes" xml:space="preserve">
          <source>Iterator.next()</source>
          <target state="translated">Iterator.next()</target>
        </trans-unit>
        <trans-unit id="7b17f1a9016d3772c10076d120fecc33211761bd" translate="yes" xml:space="preserve">
          <source>Iterator.remove()</source>
          <target state="translated">Iterator.remove()</target>
        </trans-unit>
        <trans-unit id="90f9c37adf7cbba6996a1c703ef35c4c7e394446" translate="yes" xml:space="preserve">
          <source>Iterators allow the caller to remove elements from the underlying collection during the iteration with well-defined semantics.</source>
          <target state="translated">イテレータを使うと、呼び出し側は、十分に定義されたセマンティクスを使って、反復の間に基礎となるコレクションから要素を削除することができます。</target>
        </trans-unit>
        <trans-unit id="fa2adc05b3776a91a9f6ab9d5aca60fdbe0c3ca7" translate="yes" xml:space="preserve">
          <source>Iterators and spliterators are &lt;a href=&quot;package-summary#Weakly&quot;&gt;&lt;i&gt;weakly consistent&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">イテレータとスプリッタは、&lt;a href=&quot;package-summary#Weakly&quot;&gt;&lt;i&gt;一貫性&lt;/i&gt;&lt;/a&gt;が&lt;i&gt;弱い&lt;/i&gt;です。</target>
        </trans-unit>
        <trans-unit id="04ce5929eb3d589af66886c044f6232b6bea5277" translate="yes" xml:space="preserve">
          <source>Iterators are</source>
          <target state="translated">イテレータは</target>
        </trans-unit>
        <trans-unit id="15ce4c41270b8a022d61dc6060b020321a6dd4bb" translate="yes" xml:space="preserve">
          <source>Iterators do not support the mutative &lt;code&gt;remove&lt;/code&gt; operation.</source>
          <target state="translated">イテレータは、変更による &lt;code&gt;remove&lt;/code&gt; 操作をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="2ee6fc06e322da3ac8d05630b1e8ef82c5a1a8bc" translate="yes" xml:space="preserve">
          <source>Iterators maintain a current character index, whose valid range is from getBeginIndex() to getEndIndex(); the value getEndIndex() is included to allow handling of zero-length text ranges and for historical reasons. The current index can be retrieved by calling getIndex() and set directly by calling setIndex(), first(), and last().</source>
          <target state="translated">その有効範囲は getBeginIndex()から getEndIndex()までです。現在のインデックスは getIndex()をコールして取得し、 setIndex()、first()、last()をコールして直接設定することができます。</target>
        </trans-unit>
        <trans-unit id="ddfefc762a3e4584070aa44fb11fc583b7ad6725" translate="yes" xml:space="preserve">
          <source>Iterators returned by the collection views are</source>
          <target state="translated">コレクションビューから返されるイテレータは</target>
        </trans-unit>
        <trans-unit id="fe91627af74e64446d21d1b9d18323d12a3a4104" translate="yes" xml:space="preserve">
          <source>Its &lt;a href=&quot;#getMBeanName()&quot;&gt;MBean name&lt;/a&gt; is an ObjectName pattern that selects the set (or a superset) of the MBeans being registered or unregistered</source>
          <target state="translated">その&lt;a href=&quot;#getMBeanName()&quot;&gt;MBean名&lt;/a&gt;は、登録中または未登録のMBeanのセット（またはスーパーセット）を選択するObjectNameパターンです。</target>
        </trans-unit>
        <trans-unit id="ec1333406494f367e6b5314a35b0aec4aa8b8a35" translate="yes" xml:space="preserve">
          <source>Its &lt;a href=&quot;mbeanservernotification#getMBeanName--&quot;&gt;MBean name&lt;/a&gt; is an ObjectName pattern that selects the set (or a superset) of the MBeans being registered or unregistered</source>
          <target state="translated">その&lt;a href=&quot;mbeanservernotification#getMBeanName--&quot;&gt;MBean名&lt;/a&gt;は、登録または登録解除されるMBeanのセット（またはスーパーセット）を選択するObjectNameパターンです</target>
        </trans-unit>
        <trans-unit id="f1796f1e0c70dc643f5893f82783f42a6de9aa6b" translate="yes" xml:space="preserve">
          <source>Its &lt;a href=&quot;notification#getType()&quot;&gt;notification type&lt;/a&gt; is &lt;code&gt;&quot;JMX.mbean.registered.group&quot;&lt;/code&gt; or &lt;code&gt;&quot;JMX.mbean.unregistered.group&quot;&lt;/code&gt;, which can also be written &lt;a href=&quot;#REGISTRATION_NOTIFICATION&quot;&gt;&lt;code&gt;REGISTRATION_NOTIFICATION&lt;/code&gt;&lt;/a&gt;&lt;code&gt;+ &quot;.group&quot;&lt;/code&gt; or &lt;a href=&quot;#UNREGISTRATION_NOTIFICATION&quot;&gt;&lt;code&gt;UNREGISTRATION_NOTIFICATION&lt;/code&gt;&lt;/a&gt;&lt;code&gt;+ &quot;.group&quot;&lt;/code&gt;.</source>
          <target state="translated">その&lt;a href=&quot;notification#getType()&quot;&gt;通知タイプ&lt;/a&gt;は &lt;code&gt;&quot;JMX.mbean.registered.group&quot;&lt;/code&gt; または &lt;code&gt;&quot;JMX.mbean.unregistered.group&quot;&lt;/code&gt; であり、これは&lt;a href=&quot;#REGISTRATION_NOTIFICATION&quot;&gt; &lt;code&gt;REGISTRATION_NOTIFICATION&lt;/code&gt; &lt;/a&gt; &lt;code&gt;+ &quot;.group&quot;&lt;/code&gt; または&lt;a href=&quot;#UNREGISTRATION_NOTIFICATION&quot;&gt; &lt;code&gt;UNREGISTRATION_NOTIFICATION&lt;/code&gt; &lt;/a&gt; &lt;code&gt;+ &quot;.group&quot;&lt;/code&gt; 。group」と書くこともできます。</target>
        </trans-unit>
        <trans-unit id="a2d79b5e1584f4085bfcf82e6c820b94daa1edaa" translate="yes" xml:space="preserve">
          <source>Its &lt;a href=&quot;notification#getType--&quot;&gt;notification type&lt;/a&gt; is &lt;code&gt;&quot;JMX.mbean.registered.group&quot;&lt;/code&gt; or &lt;code&gt;&quot;JMX.mbean.unregistered.group&quot;&lt;/code&gt;, which can also be written &lt;a href=&quot;mbeanservernotification#REGISTRATION_NOTIFICATION&quot;&gt;&lt;code&gt;REGISTRATION_NOTIFICATION&lt;/code&gt;&lt;/a&gt;&lt;code&gt;+ &quot;.group&quot;&lt;/code&gt; or &lt;a href=&quot;mbeanservernotification#UNREGISTRATION_NOTIFICATION&quot;&gt;&lt;code&gt;UNREGISTRATION_NOTIFICATION&lt;/code&gt;&lt;/a&gt;&lt;code&gt;+ &quot;.group&quot;&lt;/code&gt;.</source>
          <target state="translated">その&lt;a href=&quot;notification#getType--&quot;&gt;通知タイプ&lt;/a&gt;は &lt;code&gt;&quot;JMX.mbean.registered.group&quot;&lt;/code&gt; または &lt;code&gt;&quot;JMX.mbean.unregistered.group&quot;&lt;/code&gt; であり、&lt;a href=&quot;mbeanservernotification#REGISTRATION_NOTIFICATION&quot;&gt; &lt;code&gt;REGISTRATION_NOTIFICATION&lt;/code&gt; &lt;/a&gt; &lt;code&gt;+ &quot;.group&quot;&lt;/code&gt; または&lt;a href=&quot;mbeanservernotification#UNREGISTRATION_NOTIFICATION&quot;&gt; &lt;code&gt;UNREGISTRATION_NOTIFICATION&lt;/code&gt; &lt;/a&gt; &lt;code&gt;+ &quot;.group&quot;&lt;/code&gt; と書くこともできます。</target>
        </trans-unit>
        <trans-unit id="ecb10966686d064f8b52dc9a6454e6cfea89ea83" translate="yes" xml:space="preserve">
          <source>Its &lt;a href=&quot;notification#getUserData()&quot;&gt;user data&lt;/a&gt; can optionally be set to an array of ObjectNames containing the names of all MBeans being registered or unregistered.</source>
          <target state="translated">その&lt;a href=&quot;notification#getUserData()&quot;&gt;ユーザーデータ&lt;/a&gt;は、オプションで、登録中または未登録のすべてのMBeanの名前を含むObjectNamesの配列に設定できます。</target>
        </trans-unit>
        <trans-unit id="af5c4415826e7c7a5efec9609fa1af0db0d2fd8c" translate="yes" xml:space="preserve">
          <source>Its &lt;a href=&quot;notification#getUserData--&quot;&gt;user data&lt;/a&gt; can optionally be set to an array of ObjectNames containing the names of all MBeans being registered or unregistered.</source>
          <target state="translated">その&lt;a href=&quot;notification#getUserData--&quot;&gt;ユーザーデータ&lt;/a&gt;は、オプションで、登録または登録解除されるすべてのMBeanの名前を含むObjectNameの配列に設定できます。</target>
        </trans-unit>
        <trans-unit id="663b50e7d1ca1e2fda2a2b70a01ac05a61cc1c60" translate="yes" xml:space="preserve">
          <source>Its ASN.1 definition in PKCS#1 standard is described below:</source>
          <target state="translated">PKCS#1規格におけるASN.1の定義を以下に示す。</target>
        </trans-unit>
        <trans-unit id="bd5d493f47aa7d0c2e9954244b1f2fb98d768c28" translate="yes" xml:space="preserve">
          <source>Its ASN.1 definition is as follows:</source>
          <target state="translated">そのASN.1の定義は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="53b6ec2e7c82b80ba86bdd7ffda03fbff342a04c" translate="yes" xml:space="preserve">
          <source>Its default value is based on the value of the static followRedirects at HttpURLConnection construction time.</source>
          <target state="translated">既定値は、HttpURLConnectionの構築時に静的なfollowRedirectsの値に基づいています。</target>
        </trans-unit>
        <trans-unit id="afad979ae7b68fa9f1f15430cfad8a0b5181d4ea" translate="yes" xml:space="preserve">
          <source>Its default value is the value given in the last invocation of the &lt;code&gt;setDefaultUseCaches&lt;/code&gt; method.</source>
          <target state="translated">そのデフォルト値は、 &lt;code&gt;setDefaultUseCaches&lt;/code&gt; メソッドの最後の呼び出しで指定された値です。</target>
        </trans-unit>
        <trans-unit id="3c868086bb9e5cd7abb0b90728136e2500bdf502" translate="yes" xml:space="preserve">
          <source>Its fields ERA, YEAR, MONTH, DAY_OF_MONTH, HOUR_OF_DAY, MINUTE, SECOND and MILLISECOND are set using the method &lt;code&gt;Calendar.set(int,int)&lt;/code&gt;</source>
          <target state="translated">そのフィールドERA、YEAR、MONTH、DAY_OF_MONTH、HOUR_OF_DAY、MINUTE、SECOND、およびMILLISECONDは、 &lt;code&gt;Calendar.set(int,int)&lt;/code&gt; メソッドを使用して設定されます。</target>
        </trans-unit>
        <trans-unit id="6748d6e8700a6979a63c6a7eda0e57025d8296e5" translate="yes" xml:space="preserve">
          <source>Its representation is an InputStream, an 8-bit based representation, while Unicode is a 16-bit character set</source>
          <target state="translated">表現は8ビットベースのInputStreamで、Unicodeは16ビットの文字セットです。</target>
        </trans-unit>
        <trans-unit id="2a78de64f7ef020ba01f4483eba3410522d85026" translate="yes" xml:space="preserve">
          <source>IvParameterSpec</source>
          <target state="translated">IvParameterSpec</target>
        </trans-unit>
        <trans-unit id="b4974c38d19baf1cc0ddd82791d7f36a6c37f441" translate="yes" xml:space="preserve">
          <source>IvParameterSpec.getIV()</source>
          <target state="translated">IvParameterSpec.getIV()</target>
        </trans-unit>
        <trans-unit id="58668e7669fd564d99db5d581fcdb6a5618440b5" translate="yes" xml:space="preserve">
          <source>J</source>
          <target state="translated">J</target>
        </trans-unit>
        <trans-unit id="e22d2077c5e61e529fa073dfed96aabde1e30957" translate="yes" xml:space="preserve">
          <source>J2SE 5 adds methods to &lt;code&gt;JTable&lt;/code&gt; to provide convenient access to some common printing needs. Simple new &lt;a href=&quot;#print()&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; methods allow for quick and easy addition of printing support to your application. In addition, a new &lt;a href=&quot;#getPrintable(javax.swing.JTable.PrintMode,java.text.MessageFormat,java.text.MessageFormat)&quot;&gt;&lt;code&gt;getPrintable(javax.swing.JTable.PrintMode, java.text.MessageFormat, java.text.MessageFormat)&lt;/code&gt;&lt;/a&gt; method is available for more advanced printing needs.</source>
          <target state="translated">J2SE 5は、 &lt;code&gt;JTable&lt;/code&gt; にメソッドを追加して、いくつかの一般的な印刷ニーズへの便利なアクセスを提供します。シンプルな新しい&lt;a href=&quot;#print()&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt;メソッドにより、アプリケーションに印刷サポートをすばやく簡単に追加できます。さらに、新しい&lt;a href=&quot;#getPrintable(javax.swing.JTable.PrintMode,java.text.MessageFormat,java.text.MessageFormat)&quot;&gt; &lt;code&gt;getPrintable(javax.swing.JTable.PrintMode, java.text.MessageFormat, java.text.MessageFormat)&lt;/code&gt; &lt;/a&gt;メソッドが、より高度な印刷ニーズに対応できるようになりました。</target>
        </trans-unit>
        <trans-unit id="c99abd753ab671821f2534397ad5e89a2ea624e6" translate="yes" xml:space="preserve">
          <source>JANUARY</source>
          <target state="translated">JANUARY</target>
        </trans-unit>
        <trans-unit id="acc0b63c0bf638236a330717ebd2292cf7455513" translate="yes" xml:space="preserve">
          <source>JAPAN</source>
          <target state="translated">JAPAN</target>
        </trans-unit>
        <trans-unit id="8a59efab94dfe49fcd0f669c3e07098126fd61fa" translate="yes" xml:space="preserve">
          <source>JAPANESE</source>
          <target state="translated">JAPANESE</target>
        </trans-unit>
        <trans-unit id="9a5501bbe64ad1a06e9ee31d153cda3e39357dcd" translate="yes" xml:space="preserve">
          <source>JAPANESE_DOUBLE_POSTCARD</source>
          <target state="translated">JAPANESE_DOUBLE_POSTCARD</target>
        </trans-unit>
        <trans-unit id="d6a6ca1f17b3c7d2b1dbecbb033ff333c1ba06bf" translate="yes" xml:space="preserve">
          <source>JAPANESE_POSTCARD</source>
          <target state="translated">JAPANESE_POSTCARD</target>
        </trans-unit>
        <trans-unit id="c7d237dbd0bc879ba87ec4bf95365a3d2b5bcb60" translate="yes" xml:space="preserve">
          <source>JAR file specification</source>
          <target state="translated">JARファイル指定</target>
        </trans-unit>
        <trans-unit id="c8622813435ca218d841dfaf1581e66262e159d6" translate="yes" xml:space="preserve">
          <source>JAVANESE</source>
          <target state="translated">JAVANESE</target>
        </trans-unit>
        <trans-unit id="21ac12455497edbb0b0a6b879e74a578efc00bd4" translate="yes" xml:space="preserve">
          <source>JAVA_OBJECT</source>
          <target state="translated">JAVA_OBJECT</target>
        </trans-unit>
        <trans-unit id="4839b119d4d1f6d174ddd11705716f4267119619" translate="yes" xml:space="preserve">
          <source>JAXP XML Processor Support</source>
          <target state="translated">JAXP XML プロセッサのサポート</target>
        </trans-unit>
        <trans-unit id="ba68353d65853fa1ce6cc1ba3abb49e472c365c6" translate="yes" xml:space="preserve">
          <source>JApplet</source>
          <target state="translated">JApplet</target>
        </trans-unit>
        <trans-unit id="49a5ed533a7c295e4dedc19a3c0857b81c492648" translate="yes" xml:space="preserve">
          <source>JApplet.AccessibleJApplet</source>
          <target state="translated">JApplet.AccessibleJApplet</target>
        </trans-unit>
        <trans-unit id="dad863a409f751977bc88e2565db9d2ce8f8bfc7" translate="yes" xml:space="preserve">
          <source>JButton</source>
          <target state="translated">JButton</target>
        </trans-unit>
        <trans-unit id="f47a2ff841990f8d418cd84b614ec67f6ed14327" translate="yes" xml:space="preserve">
          <source>JButton object for Metal scrollbar arrows.</source>
          <target state="translated">メタルスクロールバーの矢印用のJButtonオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="82ab84ef64bac9d276eaa16af135002fbc778731" translate="yes" xml:space="preserve">
          <source>JButton object that draws a scaled Arrow in one of the cardinal directions.</source>
          <target state="translated">スケーリングされた矢印を基軸方向のいずれかの方向に描画するJButtonオブジェクト。</target>
        </trans-unit>
        <trans-unit id="3583659e0c31805cd1c761357227239dfc644beb" translate="yes" xml:space="preserve">
          <source>JButton subclass to help out MetalComboBoxUI</source>
          <target state="translated">MetalComboBoxUIを助けるためのJButtonサブクラス</target>
        </trans-unit>
        <trans-unit id="4a87e33cf535b9c80223e4d1edcbe6578bd278a4" translate="yes" xml:space="preserve">
          <source>JButton.AccessibleJButton</source>
          <target state="translated">JButton.AccessibleJButton</target>
        </trans-unit>
        <trans-unit id="e4325df8bcfb7ea44c1781212de6461a3713e461" translate="yes" xml:space="preserve">
          <source>JCE1.2</source>
          <target state="translated">JCE1.2</target>
        </trans-unit>
        <trans-unit id="f1f743ea69b22a9a201729541b3c468d7f1c353f" translate="yes" xml:space="preserve">
          <source>JCOMPONENT_UI</source>
          <target state="translated">JCOMPONENT_UI</target>
        </trans-unit>
        <trans-unit id="68fba88dea6acfa893f5b2fd200d5d7b299ea3eb" translate="yes" xml:space="preserve">
          <source>JCheckBox</source>
          <target state="translated">JCheckBox</target>
        </trans-unit>
        <trans-unit id="d342cf301f8ccfac36987744f09b1841352c2f03" translate="yes" xml:space="preserve">
          <source>JCheckBox.AccessibleJCheckBox</source>
          <target state="translated">JCheckBox.AccessibleJCheckBox</target>
        </trans-unit>
        <trans-unit id="213c5f6155c3204b8c71a9741917047c55e5f669" translate="yes" xml:space="preserve">
          <source>JCheckBoxMenuItem</source>
          <target state="translated">JCheckBoxMenuItem</target>
        </trans-unit>
        <trans-unit id="eca4a811044c3de547f9242b34f2633af9a9dec7" translate="yes" xml:space="preserve">
          <source>JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem</source>
          <target state="translated">JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem</target>
        </trans-unit>
        <trans-unit id="44292fcf0e9d9024a77ce3cb6ffeff7b59054a98" translate="yes" xml:space="preserve">
          <source>JColorChooser</source>
          <target state="translated">JColorChooser</target>
        </trans-unit>
        <trans-unit id="a4e9f1c371200259f101436ccf0eb3374bec7919" translate="yes" xml:space="preserve">
          <source>JColorChooser this BasicColorChooserUI is installed on.</source>
          <target state="translated">JColorChooser このBasicColorChooserUIがインストールされているJColorChooser。</target>
        </trans-unit>
        <trans-unit id="5024424767647e090ae2576a519b4cd34404626b" translate="yes" xml:space="preserve">
          <source>JColorChooser.AccessibleJColorChooser</source>
          <target state="translated">JColorChooser.AccessibleJColorChooser</target>
        </trans-unit>
        <trans-unit id="a7c67925ac81bbc640903dba7d462c066f87974e" translate="yes" xml:space="preserve">
          <source>JComboBox</source>
          <target state="translated">JComboBox</target>
        </trans-unit>
        <trans-unit id="a30fa136f2a236d900bfaad76b8aa77c150dc833" translate="yes" xml:space="preserve">
          <source>JComboBox.AccessibleJComboBox</source>
          <target state="translated">JComboBox.AccessibleJComboBox</target>
        </trans-unit>
        <trans-unit id="ebc7aab809b69bcec13f54363d80b5b777956cc7" translate="yes" xml:space="preserve">
          <source>JComboBox.KeySelectionManager</source>
          <target state="translated">JComboBox.KeySelectionManager</target>
        </trans-unit>
        <trans-unit id="92be5872e9418d97eb5f4b7294888893e0b22a8e" translate="yes" xml:space="preserve">
          <source>JComponent</source>
          <target state="translated">JComponent</target>
        </trans-unit>
        <trans-unit id="59a91625e9896b4cc49676354b7e1d90770c2a05" translate="yes" xml:space="preserve">
          <source>JComponent provide for input if optionPane.getWantsInput() returns true.</source>
          <target state="translated">JComponentは、optionPane.getWantsInput()がtrueを返した場合に入力を提供します。</target>
        </trans-unit>
        <trans-unit id="e279734f24f6d3ac38ca55b2493ca43da1ef1520" translate="yes" xml:space="preserve">
          <source>JComponent.AccessibleJComponent</source>
          <target state="translated">JComponent.AccessibleJComponent</target>
        </trans-unit>
        <trans-unit id="ca6d92bd50f4c1833e5cf2f948947b54864639c4" translate="yes" xml:space="preserve">
          <source>JComponent.AccessibleJComponent.AccessibleContainerHandler</source>
          <target state="translated">JComponent.AccessibleJComponent.AccessibleContainerHandler</target>
        </trans-unit>
        <trans-unit id="3cf16a72ad2f4d386b46d6c6c3f7c93f06429caf" translate="yes" xml:space="preserve">
          <source>JComponent.AccessibleJComponent.AccessibleFocusHandler</source>
          <target state="translated">JComponent.AccessibleJComponent.AccessibleFocusHandler</target>
        </trans-unit>
        <trans-unit id="22014dee839e4c053a08d4898d8ddb92b89973a4" translate="yes" xml:space="preserve">
          <source>JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT</source>
          <target state="translated">JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT</target>
        </trans-unit>
        <trans-unit id="97251f01014d2230e893bb51a63257f735cad376" translate="yes" xml:space="preserve">
          <source>JComponent.WHEN_FOCUSED</source>
          <target state="translated">JComponent.WHEN_FOCUSED</target>
        </trans-unit>
        <trans-unit id="39fc78544b20a38c839cd840a0b40f89bb8c48a5" translate="yes" xml:space="preserve">
          <source>JComponent.WHEN_IN_FOCUSED_WINDOW</source>
          <target state="translated">JComponent.WHEN_IN_FOCUSED_WINDOW</target>
        </trans-unit>
        <trans-unit id="27483bf6654b6111c0a0db19648a6b176c04935d" translate="yes" xml:space="preserve">
          <source>JDBC 4.3 Specification</source>
          <target state="translated">JDBC 4.3仕様</target>
        </trans-unit>
        <trans-unit id="69d9ccd45e8bb38376239924b4a64b11133762a2" translate="yes" xml:space="preserve">
          <source>JDBC RowSet Tutorial</source>
          <target state="translated">JDBC RowSetチュートリアル</target>
        </trans-unit>
        <trans-unit id="5708cf1b1cd737522848ef158075effe6b043a75" translate="yes" xml:space="preserve">
          <source>JDBC compliance requires full support for the JDBC API and full support for SQL 92 Entry Level. It is expected that JDBC compliant drivers will be available for all the major commercial databases.</source>
          <target state="translated">JDBC準拠には、JDBC APIのフルサポートとSQL 92エントリーレベルのフルサポートが必要です。JDBC準拠のドライバは、すべての主要な商用データベースで利用できるようになることが期待されています。</target>
        </trans-unit>
        <trans-unit id="e0b484e91e2b7e6c89443e7f87e9d3b338ffc392" translate="yes" xml:space="preserve">
          <source>JDBC driver implementations may also choose to support the &lt;code&gt;setNetworkTimeout&lt;/code&gt; method to impose a limit on database response time, in environments where no network is present.</source>
          <target state="translated">JDBCドライバーの実装では、ネットワークが存在しない環境で、 &lt;code&gt;setNetworkTimeout&lt;/code&gt; メソッドをサポートしてデータベースの応答時間に制限を課すこともできます。</target>
        </trans-unit>
        <trans-unit id="98ef48754f2e9b123a3f878ad7f2006add8a4d9c" translate="yes" xml:space="preserve">
          <source>JDBC driver implementations may need to provide their own implementation of this method in order to meet the requirements of the underlying datasource.</source>
          <target state="translated">JDBC ドライバの実装では、基礎となるデータソースの要件を満たすために、このメソッドの独自の実装を提供する必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="f5be5aef99f52a47fca5e7e9624a9186d4b5796b" translate="yes" xml:space="preserve">
          <source>JDBC driver implementations may need to provide their own implementation of this method in order to meet the requirements of the underlying datasource. An implementation of enquoteNCharLiteral may accept a different set of characters than that accepted by the same drivers implementation of enquoteLiteral.</source>
          <target state="translated">JDBCドライバの実装は、基礎となるデータソースの要件を満たすために、このメソッドの独自の実装を提供する必要があるかもしれません。enquoteNCharLiteral の実装は、同じドライバの enquoteLiteral の実装で受け入れられる文字セットとは異なる文字セットを受け入れることがあります。</target>
        </trans-unit>
        <trans-unit id="ec590c6b4274220581b1a12c55d19f192f0b2909" translate="yes" xml:space="preserve">
          <source>JDBC driver major version</source>
          <target state="translated">JDBCドライバのメジャーバージョン</target>
        </trans-unit>
        <trans-unit id="83b0190c81513a13f673a91a02e089bb8f70a876" translate="yes" xml:space="preserve">
          <source>JDBC driver minor version number</source>
          <target state="translated">JDBCドライバのマイナーバージョン番号</target>
        </trans-unit>
        <trans-unit id="37fddfd467abcef1328f0810ceefa7af5af9d150" translate="yes" xml:space="preserve">
          <source>JDBC driver name</source>
          <target state="translated">JDBC ドライバ名</target>
        </trans-unit>
        <trans-unit id="5d11c3e786629e721aff05043ae2e31a6f079e21" translate="yes" xml:space="preserve">
          <source>JDBC driver version</source>
          <target state="translated">JDBC ドライバのバージョン</target>
        </trans-unit>
        <trans-unit id="7e2ac72f6aa746490462d9e81e647329766b0554" translate="yes" xml:space="preserve">
          <source>JDBC version major number</source>
          <target state="translated">JDBCバージョンのメジャー番号</target>
        </trans-unit>
        <trans-unit id="01e4bc7f73a3829d0e28d3a170c684ff5ee27bcb" translate="yes" xml:space="preserve">
          <source>JDBC version minor number</source>
          <target state="translated">JDBCバージョンのマイナー番号</target>
        </trans-unit>
        <trans-unit id="fe453b9407a1b324aadcd47a66d960b63d9af663" translate="yes" xml:space="preserve">
          <source>JDBCType</source>
          <target state="translated">JDBCType</target>
        </trans-unit>
        <trans-unit id="3661e01260ca18f0d63822b0799f09d0fef21db6" translate="yes" xml:space="preserve">
          <source>JDIALOG_UI</source>
          <target state="translated">JDIALOG_UI</target>
        </trans-unit>
        <trans-unit id="df166e05ff5f1bcaa7d86f0cc79664b4e0239cfb" translate="yes" xml:space="preserve">
          <source>JDK</source>
          <target state="translated">JDK</target>
        </trans-unit>
        <trans-unit id="8b9d9df83461ad759876456d6ed8b50851d655be" translate="yes" xml:space="preserve">
          <source>JDK 1.0.2</source>
          <target state="translated">JDK 1.0.2</target>
        </trans-unit>
        <trans-unit id="aeb69f89fb847566e415375abeca9314c0542fdf" translate="yes" xml:space="preserve">
          <source>JDK 1.1</source>
          <target state="translated">JDK 1.1</target>
        </trans-unit>
        <trans-unit id="fb436bbe1a9d53f10d1299c60539ff606352a21f" translate="yes" xml:space="preserve">
          <source>JDK1.0</source>
          <target state="translated">JDK1.0</target>
        </trans-unit>
        <trans-unit id="12c1b1433d6945678df6ffe8ba1a7fe8f2085e5a" translate="yes" xml:space="preserve">
          <source>JDK1.0.</source>
          <target state="translated">JDK1.0.</target>
        </trans-unit>
        <trans-unit id="6433e4487814c2a303032689029b99e1b6f395ad" translate="yes" xml:space="preserve">
          <source>JDK1.0.2</source>
          <target state="translated">JDK1.0.2</target>
        </trans-unit>
        <trans-unit id="e7b0242934d4c9d737cf2f353404ee9ac2cac9c7" translate="yes" xml:space="preserve">
          <source>JDK1.1</source>
          <target state="translated">JDK1.1</target>
        </trans-unit>
        <trans-unit id="28fe9f30e739a0692affc1fde13d76ff608fe46f" translate="yes" xml:space="preserve">
          <source>JDK1.1, JDK1.1</source>
          <target state="translated">JDK1.1、JDK1.1</target>
        </trans-unit>
        <trans-unit id="27387f1f6c06128a4f27adc7e4d341d909008bb0" translate="yes" xml:space="preserve">
          <source>JDK1.4</source>
          <target state="translated">JDK1.4</target>
        </trans-unit>
        <trans-unit id="9ef88d0d4ccaa428c708513be8bfcb68c666acd4" translate="yes" xml:space="preserve">
          <source>JDK1.5</source>
          <target state="translated">JDK1.5</target>
        </trans-unit>
        <trans-unit id="9720db5a53f99a1c5805be3c71317b6229840abb" translate="yes" xml:space="preserve">
          <source>JDK1.8</source>
          <target state="translated">JDK1.8</target>
        </trans-unit>
        <trans-unit id="23abb5563376a280ed7c98151a7e3d5b2b1b2e8f" translate="yes" xml:space="preserve">
          <source>JDesktopIcon</source>
          <target state="translated">JDesktopIcon</target>
        </trans-unit>
        <trans-unit id="12f986c0392d7612558204ad48cfa8de0705ad31" translate="yes" xml:space="preserve">
          <source>JDesktopPane</source>
          <target state="translated">JDesktopPane</target>
        </trans-unit>
        <trans-unit id="388c9ef95d78ccc07aa2e19ba627e41e402dde3c" translate="yes" xml:space="preserve">
          <source>JDesktopPane.AccessibleJDesktopPane</source>
          <target state="translated">JDesktopPane.AccessibleJDesktopPane</target>
        </trans-unit>
        <trans-unit id="daf0de6793e7d7b25f9859638cb21a3f2ed67e19" translate="yes" xml:space="preserve">
          <source>JDialog</source>
          <target state="translated">JDialog</target>
        </trans-unit>
        <trans-unit id="68b640e8763f9f95314ea8e59a6456216a88dd78" translate="yes" xml:space="preserve">
          <source>JDialog.AccessibleJDialog</source>
          <target state="translated">JDialog.AccessibleJDialog</target>
        </trans-unit>
        <trans-unit id="3a7a9c513d5eb36e855cbb1b9a41eb34b0eafc31" translate="yes" xml:space="preserve">
          <source>JEditorPane</source>
          <target state="translated">JEditorPane</target>
        </trans-unit>
        <trans-unit id="1960da42a06fadddfdc0ed2146b36a4482b757c1" translate="yes" xml:space="preserve">
          <source>JEditorPane.AccessibleJEditorPane</source>
          <target state="translated">JEditorPane.AccessibleJEditorPane</target>
        </trans-unit>
        <trans-unit id="15d0829ea6504b390ef246d11291623a25942288" translate="yes" xml:space="preserve">
          <source>JEditorPane.AccessibleJEditorPaneHTML</source>
          <target state="translated">JEditorPane.AccessibleJEditorPaneHTML</target>
        </trans-unit>
        <trans-unit id="4e8dcd0c7514972a2c38845274bbd73111542e1b" translate="yes" xml:space="preserve">
          <source>JEditorPane.JEditorPaneAccessibleHypertextSupport</source>
          <target state="translated">JEditorPane.JEditorPaneAccessibleHypertextSupport</target>
        </trans-unit>
        <trans-unit id="3e3dfc33b446afe0644ed39f34a093537e21acf9" translate="yes" xml:space="preserve">
          <source>JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink</source>
          <target state="translated">JEditorPane.JEditorPaneAccessibleHypertextSupport.HTMLLink</target>
        </trans-unit>
        <trans-unit id="26a98d64502a475bab34f91a91b46e17380daa14" translate="yes" xml:space="preserve">
          <source>JEditorPaneAccessibleHypertextSupport</source>
          <target state="translated">JEditorPaneAccessibleHypertextSupport</target>
        </trans-unit>
        <trans-unit id="635247d1b5579efe5906b4dee902522468c4e9d6" translate="yes" xml:space="preserve">
          <source>JFileChooser</source>
          <target state="translated">JFileChooser</target>
        </trans-unit>
        <trans-unit id="b7832785dfe0b361a9b7937d96e0b079f2d075aa" translate="yes" xml:space="preserve">
          <source>JFileChooser.APPROVE_OPTION</source>
          <target state="translated">JFileChooser.APPROVE_OPTION</target>
        </trans-unit>
        <trans-unit id="ed35514d3c7a5bd11463425f3729450487e2987c" translate="yes" xml:space="preserve">
          <source>JFileChooser.AccessibleJFileChooser</source>
          <target state="translated">JFileChooser.AccessibleJFileChooser</target>
        </trans-unit>
        <trans-unit id="69cb1fa128cf2d5a87a4dde8d983372c3736873f" translate="yes" xml:space="preserve">
          <source>JFileChooser.CANCEL_OPTION</source>
          <target state="translated">JFileChooser.CANCEL_OPTION</target>
        </trans-unit>
        <trans-unit id="d1b0dbb7841eb28c6c06a7fe390cfd32853de6ed" translate="yes" xml:space="preserve">
          <source>JFileChooser.CUSTOM_DIALOG</source>
          <target state="translated">JFileChooser.CUSTOM_DIALOG</target>
        </trans-unit>
        <trans-unit id="898b8b256c587780fda0bd98fafa7463fc0243d3" translate="yes" xml:space="preserve">
          <source>JFileChooser.DIRECTORIES_ONLY</source>
          <target state="translated">JFileChooser.DIRECTORIES_ONLY</target>
        </trans-unit>
        <trans-unit id="09aec74d9368a37f57077413c730ed5d32c54b4a" translate="yes" xml:space="preserve">
          <source>JFileChooser.ERROR_OPTION if an error occurs or the dialog is dismissed</source>
          <target state="translated">JFileChooser.ERROR_OPTION エラーが発生した場合、またはダイアログが終了した場合。</target>
        </trans-unit>
        <trans-unit id="66f81875f47989e544494bb07dd3afaf96dba09e" translate="yes" xml:space="preserve">
          <source>JFileChooser.FILES_AND_DIRECTORIES</source>
          <target state="translated">JFileChooser.FILES_AND_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="197d160b3ee63f47b164b0cb21b107107ec66000" translate="yes" xml:space="preserve">
          <source>JFileChooser.FILES_ONLY</source>
          <target state="translated">JFileChooser.FILES_ONLY</target>
        </trans-unit>
        <trans-unit id="fdbb8f5397b46f7be68b07f11119deb2b6826d0b" translate="yes" xml:space="preserve">
          <source>JFileChooser.OPEN_DIALOG</source>
          <target state="translated">JFileChooser.OPEN_DIALOG</target>
        </trans-unit>
        <trans-unit id="963e6bf8d8308dc45cd52b91c7bf888ff7bb5f05" translate="yes" xml:space="preserve">
          <source>JFileChooser.SAVE_DIALOG</source>
          <target state="translated">JFileChooser.SAVE_DIALOG</target>
        </trans-unit>
        <trans-unit id="edd60079040ee2ec3fdb104b7311ffdf47e39508" translate="yes" xml:space="preserve">
          <source>JFormattedTextField</source>
          <target state="translated">JFormattedTextField</target>
        </trans-unit>
        <trans-unit id="1da99f075433ef0d9b159d0a8f8cd31038c38706" translate="yes" xml:space="preserve">
          <source>JFormattedTextField formatting for.</source>
          <target state="translated">JFormattedTextField のフォーマットを行います。</target>
        </trans-unit>
        <trans-unit id="56ff8000484b36471efbcd1200bf61b0ed90ce7c" translate="yes" xml:space="preserve">
          <source>JFormattedTextField.AbstractFormatter</source>
          <target state="translated">JFormattedTextField.AbstractFormatter</target>
        </trans-unit>
        <trans-unit id="5902cfc49362b97affcefb2ff5fd33356d30ab8e" translate="yes" xml:space="preserve">
          <source>JFormattedTextField.AbstractFormatter to handle formatting duties.</source>
          <target state="translated">JFormattedTextField.AbstractFormatter を使用してフォーマットの処理を行います。</target>
        </trans-unit>
        <trans-unit id="be759b1b8c758dcd2157c55efc9f4bee80b2009b" translate="yes" xml:space="preserve">
          <source>JFormattedTextField.AbstractFormatter to use when the JFormattedTextField does not have focus</source>
          <target state="translated">JFormattedTextField.AbstractFormatter を使用して、 JFormattedTextField にフォーカスがない場合に使用します。</target>
        </trans-unit>
        <trans-unit id="cd5bc60a2016184a19fcaacf661b9011578b5788" translate="yes" xml:space="preserve">
          <source>JFormattedTextField.AbstractFormatter to use when the component has focus</source>
          <target state="translated">コンポーネントにフォーカスがある場合に使用する JFormattedTextField.AbstractFormatter</target>
        </trans-unit>
        <trans-unit id="9fb3ec05809b19a2998f0d2a9521e8e10bd258fb" translate="yes" xml:space="preserve">
          <source>JFormattedTextField.AbstractFormatter to use when the value is null</source>
          <target state="translated">値が null の場合に使用する JFormattedTextField.AbstractFormatter</target>
        </trans-unit>
        <trans-unit id="ca5c870fe4cf059caca2b99812921fa5cd642504" translate="yes" xml:space="preserve">
          <source>JFormattedTextField.AbstractFormatter used if a more specific one is not specified.</source>
          <target state="translated">より具体的なものが指定されていない場合に使用する JFormattedTextField.AbstractFormatter</target>
        </trans-unit>
        <trans-unit id="b847fd33427888e87115ea486d80303512d80dd8" translate="yes" xml:space="preserve">
          <source>JFormattedTextField.AbstractFormatterFactory</source>
          <target state="translated">JFormattedTextField.AbstractFormatterFactory</target>
        </trans-unit>
        <trans-unit id="8be12c31e8ad184aec59a2a7b4af2df86eabb495" translate="yes" xml:space="preserve">
          <source>JFormattedTextField.COMMIT</source>
          <target state="translated">JFormattedTextField.COMMIT</target>
        </trans-unit>
        <trans-unit id="08628f1bab2f3101471fe2cf89fddbbdac3e2795" translate="yes" xml:space="preserve">
          <source>JFormattedTextField.COMMIT_OR_REVERT</source>
          <target state="translated">JFormattedTextField.COMMIT_OR_REVERT</target>
        </trans-unit>
        <trans-unit id="35b0f8ac1211eeb74bec1077c53e1ee0450b2be8" translate="yes" xml:space="preserve">
          <source>JFormattedTextField.PERSIST</source>
          <target state="translated">JFormattedTextField.PERSIST</target>
        </trans-unit>
        <trans-unit id="d65b4c281361c241338b64f582606fac2deac0aa" translate="yes" xml:space="preserve">
          <source>JFormattedTextField.REVERT</source>
          <target state="translated">JFormattedTextField.REVERT</target>
        </trans-unit>
        <trans-unit id="4732b3aa76de2b2b10b21b57369834ad053fa8a3" translate="yes" xml:space="preserve">
          <source>JFrame</source>
          <target state="translated">JFrame</target>
        </trans-unit>
        <trans-unit id="e92a38a6d2f8bd73f1ef1f727fc75b900e22a59e" translate="yes" xml:space="preserve">
          <source>JFrame.AccessibleJFrame</source>
          <target state="translated">JFrame.AccessibleJFrame</target>
        </trans-unit>
        <trans-unit id="63d48f828f947162cc55cb75aa653ae1fa6ce52d" translate="yes" xml:space="preserve">
          <source>JIS B0 size.</source>
          <target state="translated">JIS B0サイズ。</target>
        </trans-unit>
        <trans-unit id="467ee85ca0616951e7a2ccf88b26286c600a1f37" translate="yes" xml:space="preserve">
          <source>JIS B1 size.</source>
          <target state="translated">JIS B1サイズ。</target>
        </trans-unit>
        <trans-unit id="d415f9471016a239954bf8fb21a9bdadac050b34" translate="yes" xml:space="preserve">
          <source>JIS B10 size.</source>
          <target state="translated">JIS B10サイズ。</target>
        </trans-unit>
        <trans-unit id="f5811eb67f005dcca41293df5fb89aadc0f86e8b" translate="yes" xml:space="preserve">
          <source>JIS B2 size.</source>
          <target state="translated">JIS B2サイズ。</target>
        </trans-unit>
        <trans-unit id="0cf3d8a4c6a8c64670047ccb33f9c05716ac408c" translate="yes" xml:space="preserve">
          <source>JIS B3 size.</source>
          <target state="translated">JIS B3サイズ。</target>
        </trans-unit>
        <trans-unit id="5e0c7a0de2b93f4304b2c29a5fa14ef01c84c4fe" translate="yes" xml:space="preserve">
          <source>JIS B4 size.</source>
          <target state="translated">JIS B4サイズ。</target>
        </trans-unit>
        <trans-unit id="1b0b4bf2c06c5d8b6dfbd6f245f917852700384a" translate="yes" xml:space="preserve">
          <source>JIS B5 size.</source>
          <target state="translated">JIS B5サイズ。</target>
        </trans-unit>
        <trans-unit id="b0988431e7269f3b01664dccc65a4af12cd8aa69" translate="yes" xml:space="preserve">
          <source>JIS B6 size.</source>
          <target state="translated">JIS B6サイズ。</target>
        </trans-unit>
        <trans-unit id="8392abd36124e24ce8f04b76825711c44236f7af" translate="yes" xml:space="preserve">
          <source>JIS B7 size.</source>
          <target state="translated">JIS B7サイズ。</target>
        </trans-unit>
        <trans-unit id="14993283a0dc528349b5db15e477f6420f650e13" translate="yes" xml:space="preserve">
          <source>JIS B8 size.</source>
          <target state="translated">JIS B8サイズ。</target>
        </trans-unit>
        <trans-unit id="731e7dda49af3d6ba1252fd00d9807cf05896c92" translate="yes" xml:space="preserve">
          <source>JIS B9 size.</source>
          <target state="translated">JIS B9サイズ。</target>
        </trans-unit>
        <trans-unit id="a596724c3d467280c10bebe1870fcb1717d46a90" translate="yes" xml:space="preserve">
          <source>JIS_B0</source>
          <target state="translated">JIS_B0</target>
        </trans-unit>
        <trans-unit id="4fc6c3441b69789af64a6135d04aa7f13c2d4d3e" translate="yes" xml:space="preserve">
          <source>JIS_B1</source>
          <target state="translated">JIS_B1</target>
        </trans-unit>
        <trans-unit id="05e79e83a31a775e75f6a90c32aa9c5d533d136c" translate="yes" xml:space="preserve">
          <source>JIS_B10</source>
          <target state="translated">JIS_B10</target>
        </trans-unit>
        <trans-unit id="cd6a968f80372a09db9ab520d2133f28e0c9e1c1" translate="yes" xml:space="preserve">
          <source>JIS_B2</source>
          <target state="translated">JIS_B2</target>
        </trans-unit>
        <trans-unit id="c4715a134e0f648e5b3c3fb280926878fa1a5d99" translate="yes" xml:space="preserve">
          <source>JIS_B3</source>
          <target state="translated">JIS_B3</target>
        </trans-unit>
        <trans-unit id="e1ac50635ee37bd96cb5bc2f46c05ebc1d893c64" translate="yes" xml:space="preserve">
          <source>JIS_B4</source>
          <target state="translated">JIS_B4</target>
        </trans-unit>
        <trans-unit id="2503ccdde6755a8373666f5540016eef499f72ab" translate="yes" xml:space="preserve">
          <source>JIS_B5</source>
          <target state="translated">JIS_B5</target>
        </trans-unit>
        <trans-unit id="f60e5cb80e55f91ae98ecdcbfeb36f3472a6e72c" translate="yes" xml:space="preserve">
          <source>JIS_B6</source>
          <target state="translated">JIS_B6</target>
        </trans-unit>
        <trans-unit id="ad6d0ebff18027cb3798f86606cb22cc799f5dcd" translate="yes" xml:space="preserve">
          <source>JIS_B7</source>
          <target state="translated">JIS_B7</target>
        </trans-unit>
        <trans-unit id="890c0c53c60fbd3640cfe9c4049565062a97e94b" translate="yes" xml:space="preserve">
          <source>JIS_B8</source>
          <target state="translated">JIS_B8</target>
        </trans-unit>
        <trans-unit id="0d89ccab33d2b6b33e769c266bcc31b67090d14a" translate="yes" xml:space="preserve">
          <source>JIS_B9</source>
          <target state="translated">JIS_B9</target>
        </trans-unit>
        <trans-unit id="df38ee95d92213a50ce9557b960d2cdab1cda14a" translate="yes" xml:space="preserve">
          <source>JIT compilers and their technologies vary too widely to be controlled effectively by a standardized interface.</source>
          <target state="translated">JITコンパイラとその技術は、標準化されたインタフェースで効果的に制御するには、あまりにも多岐にわたっています。</target>
        </trans-unit>
        <trans-unit id="e5b29922611ce5d5aaa2b407051c4c8e6ab9785c" translate="yes" xml:space="preserve">
          <source>JIT compilers and their technologies vary too widely to be controlled effectively by a standardized interface. As such, many JIT compiler implementations ignore this interface, and are instead controllable by implementation-specific mechanisms such as command-line options. This class is subject to removal in a future version of Java SE.</source>
          <target state="translated">JIT コンパイラとその技術は、標準化されたインタフェースで効果的に制御するにはあまりにも広範囲にわたっています。そのため、多くのJITコンパイラの実装では、このインターフェイスを無視し、代わりにコマンドライン・オプションなどの実装固有のメカニズムによって制御することができます。このクラスはJava SEの将来のバージョンで削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="78b1742c13cb24a3fb9bab0b260269f589d8f1a6" translate="yes" xml:space="preserve">
          <source>JInternalFrame</source>
          <target state="translated">JInternalFrame</target>
        </trans-unit>
        <trans-unit id="2dead2acfca4aa0b2dbb88ca1c340bec1b60b91c" translate="yes" xml:space="preserve">
          <source>JInternalFrame.AccessibleJInternalFrame</source>
          <target state="translated">JInternalFrame.AccessibleJInternalFrame</target>
        </trans-unit>
        <trans-unit id="b72fac71d6adf139f64a5f212b25b97a6584c338" translate="yes" xml:space="preserve">
          <source>JInternalFrame.JDesktopIcon</source>
          <target state="translated">JInternalFrame.JDesktopIcon</target>
        </trans-unit>
        <trans-unit id="b057cc39664aac80711524af0e6c07935f0e74e2" translate="yes" xml:space="preserve">
          <source>JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon</source>
          <target state="translated">JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon</target>
        </trans-unit>
        <trans-unit id="bfbdc0108fba90967f1a9fa34934db66cf837269" translate="yes" xml:space="preserve">
          <source>JLabel</source>
          <target state="translated">JLabel</target>
        </trans-unit>
        <trans-unit id="5f203039a271385c945f0685ba724246f1873571" translate="yes" xml:space="preserve">
          <source>JLabel.AccessibleJLabel</source>
          <target state="translated">JLabel.AccessibleJLabel</target>
        </trans-unit>
        <trans-unit id="14efa3c24d60b1608a75b8eb9df4c4f663981712" translate="yes" xml:space="preserve">
          <source>JLayer</source>
          <target state="translated">JLayer</target>
        </trans-unit>
        <trans-unit id="465f2c084b00f6d25ffb0195b2c91b9796c26c54" translate="yes" xml:space="preserve">
          <source>JLayeredPane</source>
          <target state="translated">JLayeredPane</target>
        </trans-unit>
        <trans-unit id="f87c00c27bc7e9fa72406a288c58e81805d525ec" translate="yes" xml:space="preserve">
          <source>JLayeredPane.AccessibleJLayeredPane</source>
          <target state="translated">JLayeredPane.AccessibleJLayeredPane</target>
        </trans-unit>
        <trans-unit id="162dd58d2756b29aa439ae2369af65cf32d3b7a7" translate="yes" xml:space="preserve">
          <source>JList</source>
          <target state="translated">JList</target>
        </trans-unit>
        <trans-unit id="dcb98d76ead9e184305481faceff19a6e2c5a20e" translate="yes" xml:space="preserve">
          <source>JList and JTable</source>
          <target state="translated">JListとJTable</target>
        </trans-unit>
        <trans-unit id="9d678f10fa2464a657ed77666d61b6f88e7b939c" translate="yes" xml:space="preserve">
          <source>JList in a JScrollPane</source>
          <target state="translated">JScrollPane内のJList</target>
        </trans-unit>
        <trans-unit id="9aae79b8b6ad816022bf167c4e245214fde75ce7" translate="yes" xml:space="preserve">
          <source>JList.AccessibleJList</source>
          <target state="translated">JList.AccessibleJList</target>
        </trans-unit>
        <trans-unit id="743f0d3377ff0df882cb7cd1f790bc987af64360" translate="yes" xml:space="preserve">
          <source>JList.AccessibleJList.AccessibleJListChild</source>
          <target state="translated">JList.AccessibleJList.AccessibleJListChild</target>
        </trans-unit>
        <trans-unit id="9b821e54f03b00ba2e309f7ece6a368e8c39b579" translate="yes" xml:space="preserve">
          <source>JList.DropLocation</source>
          <target state="translated">JList.DropLocation</target>
        </trans-unit>
        <trans-unit id="c004b1d67b128f3b89cf3b3a9ae51cc394231928" translate="yes" xml:space="preserve">
          <source>JList.HORIZONTAL_WRAP</source>
          <target state="translated">JList.HORIZONTAL_WRAP</target>
        </trans-unit>
        <trans-unit id="6fdf3c6680a73b7b7b8af78aa3eb308f623c8858" translate="yes" xml:space="preserve">
          <source>JList.VERTICAL</source>
          <target state="translated">JList.VERTICAL</target>
        </trans-unit>
        <trans-unit id="04e056d233ac49dd45b4f260ec3f5dabc338aa53" translate="yes" xml:space="preserve">
          <source>JList.VERTICAL_WRAP</source>
          <target state="translated">JList.VERTICAL_WRAP</target>
        </trans-unit>
        <trans-unit id="30bac449297b30f793716d65a9da5498e2ed22a4" translate="yes" xml:space="preserve">
          <source>JMException</source>
          <target state="translated">JMException</target>
        </trans-unit>
        <trans-unit id="00c75186cd2ca2d37febe77b9af99b3eaeff3efe" translate="yes" xml:space="preserve">
          <source>JMImplementation:type=MBeanServerDelegate</source>
          <target state="translated">JMImplementation:type=MBeanServerDelegate</target>
        </trans-unit>
        <trans-unit id="2aec436089a2346422c1946456f40208ed755513" translate="yes" xml:space="preserve">
          <source>JMRuntimeException</source>
          <target state="translated">JMRuntimeException</target>
        </trans-unit>
        <trans-unit id="2b8bd7f0cfe36bbd5d2714b1db91c558851c9311" translate="yes" xml:space="preserve">
          <source>JMX</source>
          <target state="translated">JMX</target>
        </trans-unit>
        <trans-unit id="61138aeaf55367dc88bb1246ee6955cc145fcd90" translate="yes" xml:space="preserve">
          <source>JMX Specification, version 1.4</source>
          <target state="translated">JMX仕様書、バージョン1.4</target>
        </trans-unit>
        <trans-unit id="8923c3936a9d5fabad2764f4c718a0db87d98c44" translate="yes" xml:space="preserve">
          <source>JMX Specification.</source>
          <target state="translated">JMX仕様。</target>
        </trans-unit>
        <trans-unit id="e93432aa276d66934a4a422501ccc904f180bff3" translate="yes" xml:space="preserve">
          <source>JMX.isMXBeanInterface()</source>
          <target state="translated">JMX.isMXBeanInterface()</target>
        </trans-unit>
        <trans-unit id="70ec053b54aa7aec173dd775c25be7589ef5b180" translate="yes" xml:space="preserve">
          <source>JMX.newMBeanProxy()</source>
          <target state="translated">JMX.newMBeanProxy()</target>
        </trans-unit>
        <trans-unit id="94bf0951c45c42e6f87986c9844748795d39745d" translate="yes" xml:space="preserve">
          <source>JMX.newMXBeanProxy()</source>
          <target state="translated">JMX.newMXBeanProxy()</target>
        </trans-unit>
        <trans-unit id="d6988b3ccb23064fb608fd95bd12f1b4cf35eb96" translate="yes" xml:space="preserve">
          <source>JMXAddressable</source>
          <target state="translated">JMXAddressable</target>
        </trans-unit>
        <trans-unit id="33114954075bdd088fd2ed03e555fc89aacc92d6" translate="yes" xml:space="preserve">
          <source>JMXAddressable.getAddress()</source>
          <target state="translated">JMXAddressable.getAddress()</target>
        </trans-unit>
        <trans-unit id="425e419d3f918b3a1c82114f6729e7ee4db40978" translate="yes" xml:space="preserve">
          <source>JMXAuthenticator</source>
          <target state="translated">JMXAuthenticator</target>
        </trans-unit>
        <trans-unit id="0b13f32fd9b0b6487993283d69d06f3509973bd5" translate="yes" xml:space="preserve">
          <source>JMXAuthenticator.authenticate()</source>
          <target state="translated">JMXAuthenticator.authenticate()</target>
        </trans-unit>
        <trans-unit id="238863be6dcab73a963bcbbef58d29df8b7baa67" translate="yes" xml:space="preserve">
          <source>JMXConnectionNotification</source>
          <target state="translated">JMXConnectionNotification</target>
        </trans-unit>
        <trans-unit id="1c6cba5c820145049bc9dc9fd6ebe7de0663455e" translate="yes" xml:space="preserve">
          <source>JMXConnectionNotification Types</source>
          <target state="translated">JMXConnectionNotificationの種類</target>
        </trans-unit>
        <trans-unit id="9e0ccad5aec0327a6dadc7fbfb9eb70b8913ecbb" translate="yes" xml:space="preserve">
          <source>JMXConnectionNotification.getConnectionId()</source>
          <target state="translated">JMXConnectionNotification.getConnectionId()</target>
        </trans-unit>
        <trans-unit id="a52143241e0687f0e2ae929fc6d4f7203b9fedf8" translate="yes" xml:space="preserve">
          <source>JMXConnector</source>
          <target state="translated">JMXConnector</target>
        </trans-unit>
        <trans-unit id="cfbd275f058d535409c2bbd74b14ca2815e85428" translate="yes" xml:space="preserve">
          <source>JMXConnector.addConnectionNotificationListener()</source>
          <target state="translated">JMXConnector.addConnectionNotificationListener()</target>
        </trans-unit>
        <trans-unit id="1e0196d01d7914d4030e4059ef072a091f0bc022" translate="yes" xml:space="preserve">
          <source>JMXConnector.close()</source>
          <target state="translated">JMXConnector.close()</target>
        </trans-unit>
        <trans-unit id="d979ce8d24cefd70cf34c4d82b656d2becd09bde" translate="yes" xml:space="preserve">
          <source>JMXConnector.connect()</source>
          <target state="translated">JMXConnector.connect()</target>
        </trans-unit>
        <trans-unit id="d824d55e5238809df8b88bcf1aa424f4d7898daf" translate="yes" xml:space="preserve">
          <source>JMXConnector.getConnectionId()</source>
          <target state="translated">JMXConnector.getConnectionId()</target>
        </trans-unit>
        <trans-unit id="b93799e5f24743affa3053f732cbe19d15e1cdab" translate="yes" xml:space="preserve">
          <source>JMXConnector.getMBeanServerConnection()</source>
          <target state="translated">JMXConnector.getMBeanServerConnection()</target>
        </trans-unit>
        <trans-unit id="5a38c9bc21d6ecbc47dac820b4ff6ba395a99d65" translate="yes" xml:space="preserve">
          <source>JMXConnector.removeConnectionNotificationListener()</source>
          <target state="translated">JMXConnector.removeConnectionNotificationListener()</target>
        </trans-unit>
        <trans-unit id="f8490865ba2b904dcfc03b3c91c301e8eb85a614" translate="yes" xml:space="preserve">
          <source>JMXConnectorFactory</source>
          <target state="translated">JMXConnectorFactory</target>
        </trans-unit>
        <trans-unit id="a779aff769ece8f875423b533d6e5113d93a924c" translate="yes" xml:space="preserve">
          <source>JMXConnectorFactory.connect()</source>
          <target state="translated">JMXConnectorFactory.connect()</target>
        </trans-unit>
        <trans-unit id="cd1643688c508fe52933012e6293c66bdc330807" translate="yes" xml:space="preserve">
          <source>JMXConnectorFactory.newJMXConnector()</source>
          <target state="translated">JMXConnectorFactory.newJMXConnector()</target>
        </trans-unit>
        <trans-unit id="3f859aa0a0030d3248f6e00aea68cc8902878935" translate="yes" xml:space="preserve">
          <source>JMXConnectorProvider</source>
          <target state="translated">JMXConnectorProvider</target>
        </trans-unit>
        <trans-unit id="043282374b06e8c1d70e70e5a1cc049e36818092" translate="yes" xml:space="preserve">
          <source>JMXConnectorProvider.newJMXConnector()</source>
          <target state="translated">JMXConnectorProvider.newJMXConnector()</target>
        </trans-unit>
        <trans-unit id="dcf6fb7a4954c04eac8c6ce61c2b8f6fff687ae5" translate="yes" xml:space="preserve">
          <source>JMXConnectorServer</source>
          <target state="translated">JMXConnectorServer</target>
        </trans-unit>
        <trans-unit id="fa30802d7104d790e9884ec738df29b81fc871b8" translate="yes" xml:space="preserve">
          <source>JMXConnectorServer.connectionClosed()</source>
          <target state="translated">JMXConnectorServer.connectionClosed()</target>
        </trans-unit>
        <trans-unit id="1215ff80b7827cd9dd1f1045229c1a92414be838" translate="yes" xml:space="preserve">
          <source>JMXConnectorServer.connectionFailed()</source>
          <target state="translated">JMXConnectorServer.connectionFailed()</target>
        </trans-unit>
        <trans-unit id="57f4a55f02f1dcaecaa432e9cfaf9bdb5917e9c7" translate="yes" xml:space="preserve">
          <source>JMXConnectorServer.connectionOpened()</source>
          <target state="translated">JMXConnectorServer.connectionOpened()</target>
        </trans-unit>
        <trans-unit id="37f67bf0607a4f6bebb508af4bd7f081390ee88b" translate="yes" xml:space="preserve">
          <source>JMXConnectorServer.getConnectionIds()</source>
          <target state="translated">JMXConnectorServer.getConnectionIds()</target>
        </trans-unit>
        <trans-unit id="31f7221b03c92b2ea7ba70f05cfc2a734912000a" translate="yes" xml:space="preserve">
          <source>JMXConnectorServer.getMBeanServer()</source>
          <target state="translated">JMXConnectorServer.getMBeanServer()</target>
        </trans-unit>
        <trans-unit id="84b5d7b78854769f4a56a501095e2333efb51f1e" translate="yes" xml:space="preserve">
          <source>JMXConnectorServer.getNotificationInfo()</source>
          <target state="translated">JMXConnectorServer.getNotificationInfo()</target>
        </trans-unit>
        <trans-unit id="3404d1046baaa7eb501d2dc4594edc6aab366444" translate="yes" xml:space="preserve">
          <source>JMXConnectorServer.postDeregister()</source>
          <target state="translated">JMXConnectorServer.postDeregister()</target>
        </trans-unit>
        <trans-unit id="86c6b1a9d433e30cce3482567de0908ac2e12abb" translate="yes" xml:space="preserve">
          <source>JMXConnectorServer.postRegister()</source>
          <target state="translated">JMXConnectorServer.postRegister()</target>
        </trans-unit>
        <trans-unit id="0fb967dc26af7031dc278c14f0d21ca2b5fe59f6" translate="yes" xml:space="preserve">
          <source>JMXConnectorServer.preDeregister()</source>
          <target state="translated">JMXConnectorServer.preDeregister()</target>
        </trans-unit>
        <trans-unit id="92ec675b3c4f270da6144b2f73f13b57dc55c97b" translate="yes" xml:space="preserve">
          <source>JMXConnectorServer.preRegister()</source>
          <target state="translated">JMXConnectorServer.preRegister()</target>
        </trans-unit>
        <trans-unit id="b2244a2eb2e775761b700f78b793edca869636fe" translate="yes" xml:space="preserve">
          <source>JMXConnectorServer.setMBeanServerForwarder()</source>
          <target state="translated">JMXConnectorServer.setMBeanServerForwarder()</target>
        </trans-unit>
        <trans-unit id="ca7190f03b6c81e4199e3d1752f12e4dfdd7d9e3" translate="yes" xml:space="preserve">
          <source>JMXConnectorServer.toJMXConnector()</source>
          <target state="translated">JMXConnectorServer.toJMXConnector()</target>
        </trans-unit>
        <trans-unit id="6e816c02c981a8cd907e8ff0cefb5004209a6ba9" translate="yes" xml:space="preserve">
          <source>JMXConnectorServerFactory</source>
          <target state="translated">JMXConnectorServerFactory</target>
        </trans-unit>
        <trans-unit id="c37af519d608f047dd170561fb2f93914718ca70" translate="yes" xml:space="preserve">
          <source>JMXConnectorServerFactory.newJMXConnectorServer()</source>
          <target state="translated">JMXConnectorServerFactory.newJMXConnectorServer()</target>
        </trans-unit>
        <trans-unit id="5a52fdb417ef8f35cc44cf3aa6e2ff4d10276ca5" translate="yes" xml:space="preserve">
          <source>JMXConnectorServerMBean</source>
          <target state="translated">JMXConnectorServerMBean</target>
        </trans-unit>
        <trans-unit id="eb70276909a4af23f482175f58e7f2a9e5eb25e7" translate="yes" xml:space="preserve">
          <source>JMXConnectorServerMBean.getAddress()</source>
          <target state="translated">JMXConnectorServerMBean.getAddress()</target>
        </trans-unit>
        <trans-unit id="a73c806a687d08a863ce0f3c29eba1c44cbf6cfc" translate="yes" xml:space="preserve">
          <source>JMXConnectorServerMBean.getAttributes()</source>
          <target state="translated">JMXConnectorServerMBean.getAttributes()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
