<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="a2dd4f78315099e308c08fd5aaaa09ec49864bdd" translate="yes" xml:space="preserve">
          <source>Disposes of any system resources or security-sensitive information the SaslServer might be using.</source>
          <target state="translated">SaslServer が使用している可能性のあるシステムリソースやセキュリティ上の機密情報を破棄します。</target>
        </trans-unit>
        <trans-unit id="45cc672822ffe592a5f84ddb55adcbd6149b37a9" translate="yes" xml:space="preserve">
          <source>Disposes of any system resources or security-sensitive information the SaslServer might be using. Invoking this method invalidates the SaslServer instance. This method is idempotent.</source>
          <target state="translated">SaslServer が使用しているかもしれないシステムリソースやセキュリティ上の機密情報を破棄します。このメソッドを呼び出すと、SaslServer インスタンスが無効になります。このメソッドは無意味です。</target>
        </trans-unit>
        <trans-unit id="746e0c4cafdcda50c95c34b0b7ab9d9b62aeca7b" translate="yes" xml:space="preserve">
          <source>Disposes of system resources associated with this &lt;code&gt;ColorModel&lt;/code&gt; once this &lt;code&gt;ColorModel&lt;/code&gt; is no longer referenced.</source>
          <target state="translated">この &lt;code&gt;ColorModel&lt;/code&gt; が参照されなくなったら、この &lt;code&gt;ColorModel&lt;/code&gt; に関連付けられているシステムリソースを破棄します。</target>
        </trans-unit>
        <trans-unit id="a509c0648c61468f659a2405ce5103be36077b83" translate="yes" xml:space="preserve">
          <source>Disposes of this graphics context and releases any system resources that it is using.</source>
          <target state="translated">このグラフィックスコンテキストを破棄し、使用しているシステムリソースを解放します。</target>
        </trans-unit>
        <trans-unit id="5cf4c1e67bdacd438ef7218409f2508827a9f7ee" translate="yes" xml:space="preserve">
          <source>Disposes of this graphics context and releases any system resources that it is using. A &lt;code&gt;Graphics&lt;/code&gt; object cannot be used after &lt;code&gt;dispose&lt;/code&gt; has been called.</source>
          <target state="translated">このグラフィックスコンテキストを破棄し、使用しているシステムリソースを解放します。 &lt;code&gt;Graphics&lt;/code&gt; の後にオブジェクトが使用できない &lt;code&gt;dispose&lt;/code&gt; 呼ばれてきました。</target>
        </trans-unit>
        <trans-unit id="61f4f7256ca1bbf168061e917f7f708f569c4254" translate="yes" xml:space="preserve">
          <source>Disposes of this graphics context once it is no longer referenced.</source>
          <target state="translated">このグラフィックスコンテキストが参照されなくなったら、そのコンテキストを破棄します。</target>
        </trans-unit>
        <trans-unit id="6dfd646bce70d12078833ed4481c1ed14273c794" translate="yes" xml:space="preserve">
          <source>Disposes this &lt;code&gt;StreamPrintService&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;StreamPrintService&lt;/code&gt; を破棄します。</target>
        </trans-unit>
        <trans-unit id="9f6fa2db90700dc6bb3e66bba45f4e7f32a69783" translate="yes" xml:space="preserve">
          <source>Disposes this &lt;code&gt;StreamPrintService&lt;/code&gt;. If a stream service cannot be re-used, it must be disposed to indicate this. Typically the client will call this method. Services which write data which cannot meaningfully be appended to may also dispose the stream. This does not close the stream. It just marks it as not for further use by this service.</source>
          <target state="translated">この &lt;code&gt;StreamPrintService&lt;/code&gt; を破棄します。ストリームサービスを再利用できない場合は、そのことを示すために破棄する必要があります。通常、クライアントはこのメソッドを呼び出します。意味のある形で追加できないデータを書き込むサービスもストリームを破棄する場合があります。これはストリームを閉じません。このサービスで今後使用されないようにマークするだけです。</target>
        </trans-unit>
        <trans-unit id="8a3f4d6f8b8b632767e3dedbaaa6c4d3b6259c6d" translate="yes" xml:space="preserve">
          <source>Distance between left margin and where vertical dashes will be drawn.</source>
          <target state="translated">左マージンから垂直方向のダッシュが描画される位置までの距離。</target>
        </trans-unit>
        <trans-unit id="5310245a989a696ffbfa2bf9bd03d6433f660c41" translate="yes" xml:space="preserve">
          <source>Distance between the decrement button and the track.</source>
          <target state="translated">デクリメントボタンからトラックまでの距離。</target>
        </trans-unit>
        <trans-unit id="f9a611a03de2fea80d1bc6280878092c6289f7ed" translate="yes" xml:space="preserve">
          <source>Distance between the decrement button and the track. This may be a negative number. If negative, then an overlap between the button and track will occur, which is useful for shaped buttons.</source>
          <target state="translated">デクリメントボタンとトラックの間の距離。これは負の数になるかもしれません。負数の場合、ボタンとトラックの間に重なりが生じます。</target>
        </trans-unit>
        <trans-unit id="5f9a3995a7e904f8b763c371eb47364a5fea609d" translate="yes" xml:space="preserve">
          <source>Distance between the increment button and the track.</source>
          <target state="translated">インクリメントボタンからトラックまでの距離。</target>
        </trans-unit>
        <trans-unit id="16b498545648143e6653fd8c78a73efe07a452b5" translate="yes" xml:space="preserve">
          <source>Distance between the increment button and the track. This may be a negative number. If negative, then an overlap between the button and track will occur, which is useful for shaped buttons.</source>
          <target state="translated">インクリメントボタンとトラックの間の距離。これは負の数を指定します。負数の場合は、ボタンとトラックの間にオーバーラップが発生します。</target>
        </trans-unit>
        <trans-unit id="8a35e4091f0311e702a6065975e1eabadbb77bb6" translate="yes" xml:space="preserve">
          <source>Distance to add to leftChildIndent to determine where cell contents will be drawn.</source>
          <target state="translated">セルの内容がどこに描画されるかを決定するためにleftChildIndentに追加する距離。</target>
        </trans-unit>
        <trans-unit id="ee575c8aed0c01ffde7a17873be297f83415ed79" translate="yes" xml:space="preserve">
          <source>Distribute the weights and min sizes among the rows/columns.</source>
          <target state="translated">重みと最小サイズを行/列の間で分配します。</target>
        </trans-unit>
        <trans-unit id="a54975bf4b471d31af78520e301821b91a834792" translate="yes" xml:space="preserve">
          <source>Distributed Transactions</source>
          <target state="translated">分散取引</target>
        </trans-unit>
        <trans-unit id="30060a659fb2ded1763f0c53025df6e6a4f719d9" translate="yes" xml:space="preserve">
          <source>Distributed transaction implementation -- produces a &lt;code&gt;Connection&lt;/code&gt; object that may be used for distributed transactions and almost always participates in connection pooling. This implementation works with a middle-tier transaction manager and almost always with a connection pooling manager.</source>
          <target state="translated">分散トランザクションの実装-分散トランザクションに使用できる &lt;code&gt;Connection&lt;/code&gt; オブジェクトを生成し、ほとんどの場合、接続プーリングに参加します。この実装は、中間層のトランザクションマネージャーで機能し、ほとんどの場合、接続プールマネージャーで機能します。</target>
        </trans-unit>
        <trans-unit id="6cbc6731faa2df2068c9271593b97811e4563e41" translate="yes" xml:space="preserve">
          <source>Distributed transactions</source>
          <target state="translated">分散型トランザクション</target>
        </trans-unit>
        <trans-unit id="d47ba6bf26494c03eb096edcfc8c05fc01fa66f7" translate="yes" xml:space="preserve">
          <source>Distributed transactions -- allowing a transaction to span diverse DBMS servers</source>
          <target state="translated">分散トランザクション --トランザクションが多様な DBMS サーバにまたがることを可能にします。</target>
        </trans-unit>
        <trans-unit id="f6fab3008b5729c36c3bd307e0b85d971381e931" translate="yes" xml:space="preserve">
          <source>Distributing the delta</source>
          <target state="translated">デルタの分配</target>
        </trans-unit>
        <trans-unit id="385df870ed02ebf8e869d8a50f705202fae83792" translate="yes" xml:space="preserve">
          <source>Dithering hint key.</source>
          <target state="translated">ディザリングヒントキー。</target>
        </trans-unit>
        <trans-unit id="1948cc1946b75dd46083522758750dcb800598d6" translate="yes" xml:space="preserve">
          <source>Dithering hint key. The &lt;code&gt;DITHERING&lt;/code&gt; hint controls how closely to approximate a color when storing into a destination with limited color resolution.</source>
          <target state="translated">ディザリングヒントキー。 &lt;code&gt;DITHERING&lt;/code&gt; 限られた色解像度と先に格納するときに色を近似する方法密接にヒントを制御します。</target>
        </trans-unit>
        <trans-unit id="3f20862fada90c6b991c915944b57bf79f1e318d" translate="yes" xml:space="preserve">
          <source>Dithering hint value -- dither when rendering geometry, if needed.</source>
          <target state="translated">ディザリングヒント値 --必要に応じてジオメトリをレンダリングする際にディザをかけます。</target>
        </trans-unit>
        <trans-unit id="58d8055fec250506fc9721ab9e5a2b61c92d509e" translate="yes" xml:space="preserve">
          <source>Dithering hint value -- do not dither when rendering geometry.</source>
          <target state="translated">ディザリングヒント値 --ジオメトリをレンダリングする際にディザリングしない。</target>
        </trans-unit>
        <trans-unit id="3ae0ae07fa2264eba561c7e81aa5e05d9877dbe0" translate="yes" xml:space="preserve">
          <source>Dithering hint value -- use a default for dithering chosen by the implementation.</source>
          <target state="translated">ディザリングヒントの値 --実装によって選択されたディザリングのデフォルト値を使用します。</target>
        </trans-unit>
        <trans-unit id="104ed7c21cfc9b8ba11824e5729cef81f421e172" translate="yes" xml:space="preserve">
          <source>Divide</source>
          <target state="translated">Divide</target>
        </trans-unit>
        <trans-unit id="79d511245584f6af0fa8e605bdcccee6a5bd2ee0" translate="yes" xml:space="preserve">
          <source>Divider of the SplitPane.</source>
          <target state="translated">SplitPaneのディバイダです。</target>
        </trans-unit>
        <trans-unit id="1d7098f12e0e61623593927fa789c83d350ac2e2" translate="yes" xml:space="preserve">
          <source>Divider of the SplitPane. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;SplitPaneDivider&lt;/code&gt;.</source>
          <target state="translated">SplitPaneの仕切り。スタイルをこの &lt;code&gt;Region&lt;/code&gt; バインドするには、 &lt;code&gt;SplitPaneDivider&lt;/code&gt; という名前を使用します。</target>
        </trans-unit>
        <trans-unit id="4f215eed02ed5e0dd5acf34013749b61bb1ee354" translate="yes" xml:space="preserve">
          <source>Divider that is used for noncontinuous layout mode.</source>
          <target state="translated">非連続レイアウトモードで使用する分割器です。</target>
        </trans-unit>
        <trans-unit id="a13f3fa736c7e9932e2ea24234007e33fe103b00" translate="yes" xml:space="preserve">
          <source>Divider used by BasicSplitPaneUI.</source>
          <target state="translated">BasicSplitPaneUIで使用する分割器です。</target>
        </trans-unit>
        <trans-unit id="5c1401c365b1b2b125fa572350985ad55b8d213f" translate="yes" xml:space="preserve">
          <source>Divider used by BasicSplitPaneUI. Subclassers may wish to override paint to do something more interesting. The border effect is drawn in BasicSplitPaneUI, so if you don't like that border, reset it there. To conditionally drag from certain areas subclass mousePressed and call super when you wish the dragging to begin.</source>
          <target state="translated">BasicSplitPaneUI で使用される分割器。サブクラスターは paint をオーバーライドしてもっと面白いことをしたいと思うかもしれません。ボーダー効果はBasicSplitPaneUIで描画されるので、ボーダーが気に入らない場合はそこでリセットしてください。特定の領域から条件付きでドラッグするには、mousePressed をサブクラス化し、ドラッグを開始したいときに super を呼び出します。</target>
        </trans-unit>
        <trans-unit id="9cf140751e10cd73f959aa19c72296e26587a6c1" translate="yes" xml:space="preserve">
          <source>DividerLayout</source>
          <target state="translated">DividerLayout</target>
        </trans-unit>
        <trans-unit id="b1f34601835ca541657d9b0fb263e7eebf458b6a" translate="yes" xml:space="preserve">
          <source>DnDConstants</source>
          <target state="translated">DnDConstants</target>
        </trans-unit>
        <trans-unit id="af43a637f93723ff40b843e0695572df168ea9ad" translate="yes" xml:space="preserve">
          <source>Do not adjust column widths automatically; use a horizontal scrollbar instead.</source>
          <target state="translated">列の幅を自動的に調整するのではなく、代わりに水平スクロールバーを使用してください。</target>
        </trans-unit>
        <trans-unit id="5c954674ccd7c57f2cdb5f6723821913ef5d5bc2" translate="yes" xml:space="preserve">
          <source>Do not allow the line to be justified.</source>
          <target state="translated">ラインを正当化させてはいけません。</target>
        </trans-unit>
        <trans-unit id="4344bee544f182903c321fa6fd3c438859ee7b41" translate="yes" xml:space="preserve">
          <source>Do not collect suffixes from step, pred, and fini parameter lists that do not begin with all the iteration variable types. (These types will be checked in step 2, along with all the clause function types.)</source>
          <target state="translated">step、pred、fini のパラメータ・リストから、すべての反復変数型で始まらないサフィックスを収集しないでください。(これらの型は、すべての節関数型と一緒にステップ2でチェックされます)。</target>
        </trans-unit>
        <trans-unit id="13cd56fa0b9d1c42da293c60d7304e5536848f4a" translate="yes" xml:space="preserve">
          <source>Do not create or display any scrollbars for the text area.</source>
          <target state="translated">テキストエリアにスクロールバーを作成したり、表示したりしないでください。</target>
        </trans-unit>
        <trans-unit id="6b0f29e59bcc50564f3f048d8e88888162616049" translate="yes" xml:space="preserve">
          <source>Do not draw any visual indication between nodes.</source>
          <target state="translated">ノード間に視覚的な表示をしないでください。</target>
        </trans-unit>
        <trans-unit id="6b14a8623bd79d5566b70284fab6927b12d0ae3d" translate="yes" xml:space="preserve">
          <source>Do not follow symbolic links.</source>
          <target state="translated">シンボリックリンクをたどってはいけません。</target>
        </trans-unit>
        <trans-unit id="3a6cd03ed3bfa8aed20cbec382bd02bb748b4d7e" translate="yes" xml:space="preserve">
          <source>Do not override this method if the implementation does not support reseeding.</source>
          <target state="translated">実装が再シードをサポートしていない場合は、このメソッドをオーバーライドしないでください。</target>
        </trans-unit>
        <trans-unit id="858620ea4b03f150f9ff0f97ed259db49bbcf6bd" translate="yes" xml:space="preserve">
          <source>Do not override this method. This makes the subclass use the default implementation, which is to forward the request to the indicated &lt;code&gt;ImageProducer&lt;/code&gt; using this filter as the requesting &lt;code&gt;ImageConsumer&lt;/code&gt;. This behavior is appropriate if the filter can determine that it will forward the pixels in TDLR order if its upstream producer object sends them in TDLR order.</source>
          <target state="translated">このメソッドをオーバーライドしないでください。これにより、サブクラスはデフォルトの実装を使用します。これは、このフィルターを要求元の &lt;code&gt;ImageConsumer&lt;/code&gt; として使用して、指定された &lt;code&gt;ImageProducer&lt;/code&gt; に要求を転送することです。この動作は、アップストリームのプロデューサーオブジェクトがピクセルをTDLRの順序で送信した場合に、フィルターがピクセルをTDLRの順序で転送すると判断できる場合に適しています。</target>
        </trans-unit>
        <trans-unit id="c2145c1da6d6c6a37aa50bf0bdaff7bd8867e6d4" translate="yes" xml:space="preserve">
          <source>Do not resize the component.</source>
          <target state="translated">コンポーネントのサイズを変更しないでください。</target>
        </trans-unit>
        <trans-unit id="ed6031703064d3a8e58e19131a799f9b0d036bf0" translate="yes" xml:space="preserve">
          <source>Do not store the MBean if 'persistPolicy' field is:</source>
          <target state="translated">persistPolicy' フィールドがある場合は MBean を保存しない。</target>
        </trans-unit>
        <trans-unit id="681d7b707a8e14d198413a5d4297af006f19a579" translate="yes" xml:space="preserve">
          <source>Do not use the &lt;code&gt;equals&lt;/code&gt; method for making access control decisions; use the &lt;code&gt;implies&lt;/code&gt; method.</source>
          <target state="translated">アクセス制御の決定には、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用しないでください。 &lt;code&gt;implies&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="1dce2595dc965bfa174cc14503e026fa20ddebc1" translate="yes" xml:space="preserve">
          <source>Do not use this shared component, which is used to track image loading. It is left for backward compatibility only.</source>
          <target state="translated">画像の読み込みを追跡するために使用されるこの共有コンポーネントは使用しないでください。これは下位互換性のためだけに残されています。</target>
        </trans-unit>
        <trans-unit id="8a76023851d4ca30e4f8b631d637a652069d7657" translate="yes" xml:space="preserve">
          <source>Do not use this shared media tracker, which is used to load images. It is left for backward compatibility only.</source>
          <target state="translated">画像の読み込みに使用する共有メディアトラッカーは使用しないでください。下位互換性のためだけに残されています。</target>
        </trans-unit>
        <trans-unit id="cd32c09cd2aa0b0898ae962960c68cfac92cbabf" translate="yes" xml:space="preserve">
          <source>Do not use.</source>
          <target state="translated">使用しないでください。</target>
        </trans-unit>
        <trans-unit id="1d7b467f7fcdc7ddbdea47d25be38f97973fd165" translate="yes" xml:space="preserve">
          <source>Do nothing, don't obtain a new &lt;code&gt;AbstractFormatter&lt;/code&gt;, and don't update the value.</source>
          <target state="translated">何もせず、新しい &lt;code&gt;AbstractFormatter&lt;/code&gt; を取得したり、値を更新したりしないでください。</target>
        </trans-unit>
        <trans-unit id="a67fea06909b076f286d378300c93d985eb094c6" translate="yes" xml:space="preserve">
          <source>Do nothing. This requires the program to handle the operation in the &lt;code&gt;internalFrameClosing&lt;/code&gt; method of a registered &lt;code&gt;InternalFrameListener&lt;/code&gt; object.</source>
          <target state="translated">何もしない。これには、登録された &lt;code&gt;InternalFrameListener&lt;/code&gt; オブジェクトの &lt;code&gt;internalFrameClosing&lt;/code&gt; メソッドで操作を処理するプログラムが必要です。</target>
        </trans-unit>
        <trans-unit id="abe6cbf632bd9c4fde3f3a4a97006a3981f758d5" translate="yes" xml:space="preserve">
          <source>Do whatever it takes to execute the call.</source>
          <target state="translated">呼び出しを実行するために必要なことは何でもやってください。</target>
        </trans-unit>
        <trans-unit id="cdba60a525e91017acace2575a32341fe23198be" translate="yes" xml:space="preserve">
          <source>Doc</source>
          <target state="translated">Doc</target>
        </trans-unit>
        <trans-unit id="6a246c1927f7ed79b1d3f57b9fef232ddad7727f" translate="yes" xml:space="preserve">
          <source>Doc Attributes</source>
          <target state="translated">ドキュメント属性</target>
        </trans-unit>
        <trans-unit id="06b18007dbc66f37fb7daa70d4c171b87e55e3d7" translate="yes" xml:space="preserve">
          <source>Doc attributes specify the characteristics of an individual doc and the print job settings to be applied to an individual doc. A doc attribute class implements interface &lt;a href=&quot;../docattribute&quot;&gt;DocAttribute&lt;/a&gt;. A doc attribute can appear in a &lt;a href=&quot;../docattributeset&quot;&gt; DocAttributeSet&lt;/a&gt;.</source>
          <target state="translated">ドキュメント属性は、個々のドキュメントの特性と、個々のドキュメントに適用される印刷ジョブ設定を指定します。doc属性クラスは、インターフェース&lt;a href=&quot;../docattribute&quot;&gt;DocAttributeを&lt;/a&gt;実装します。doc属性は&lt;a href=&quot;../docattributeset&quot;&gt;DocAttributeSetに&lt;/a&gt;表示できます。</target>
        </trans-unit>
        <trans-unit id="500000e987bc3b0bfd26c3b1771723ab2197ba59" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="d646c855f11011dcf6738d6dc5f56dafaa408aab" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array). The client must determine that data described using this &lt;code&gt;DocFlavor&lt;/code&gt; is valid for the printer.</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のドキュメントフレーバー。クライアントは、この &lt;code&gt;DocFlavor&lt;/code&gt; を使用して記述されたデータがプリンターに対して有効であることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="385822a1107e6ffe330e78ada88fb7e520d68d57" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array). The client must determine that data described using this DocFlavor is valid for the printer.</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のdocフレーバー クライアントは、このDocFlavorを使用して記述されたデータがプリンターに対して有効であることを判断する必要があります。</target>
        </trans-unit>
        <trans-unit id="c935630fb6c0c9f5b26d3dc1041914cf07923c94" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="9216d780ffe78cbd9f23ea9d215b29d479f6ddd6" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream). The client must determine that data described using this &lt;code&gt;DocFlavor&lt;/code&gt; is valid for the printer.</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。クライアントは、この &lt;code&gt;DocFlavor&lt;/code&gt; を使用して記述されたデータがプリンターに対して有効であることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="40d11b6e80255f69d5cda30a442c16ab3ef41dff" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream). The client must determine that data described using this DocFlavor is valid for the printer.</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のDocフレーバー。クライアントは、このDocFlavorを使用して記述されたデータがプリンターに対して有効であることを判断する必要があります。</target>
        </trans-unit>
        <trans-unit id="8e38554bf31e170bd297c615d053a61c5eaeb27a" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt;.</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="87d74f3093d8408904a9a6b3a09c0072cbc33370" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt;. The client must determine that data described using this &lt;code&gt;DocFlavor&lt;/code&gt; is valid for the printer.</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; のドキュメントフレーバー。クライアントは、この &lt;code&gt;DocFlavor&lt;/code&gt; を使用して記述されたデータがプリンターに対して有効であることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="ee9aeca4fb1780e669b8f78c586b05820a7804e7" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt;. The client must determine that data described using this DocFlavor is valid for the printer.</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; のドキュメントフレーバー。クライアントは、このDocFlavorを使用して記述されたデータがプリンターに対して有効であることを判断する必要があります。</target>
        </trans-unit>
        <trans-unit id="356730d30eb03f9d4fb7c56da40b4f6e52b5ae6c" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/pdf&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;application/pdf&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="9ff91a84292244807044f8bc97c10fb2eeceb96b" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/pdf&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;application/pdf&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="41e10ee7b71539f7d3db711ff15f12078553ccce" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/pdf&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt;.</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;application/pdf&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="e070b7bf2439b81a87e1f291fc2d8f354450bc71" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のdocフレーバー</target>
        </trans-unit>
        <trans-unit id="670b30e5aee6a46c923a6073c91d32e1f843b5df" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のdocフレーバー。</target>
        </trans-unit>
        <trans-unit id="573553883d98c59b9a4b2e0239fe736db1bebfa9" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt;.</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="769c40d342e04c686549ac7342a6b87738ce5baf" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/vnd.hp-PCL&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;application/vnd.hp-PCL&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="2c69d222569d866e72a6abd84911d889b5cd7036" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/vnd.hp-PCL&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;application/vnd.hp-PCL&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="d7981273b06a1402881d2beba943987dfd0cf455" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;application/vnd.hp-PCL&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt;.</source>
          <target state="translated">MIMEタイプ= docフレーバ &lt;code&gt;&quot;application/vnd.hp-PCL&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05b18c4cf8217971183647094e15dbdf3a16850e" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;image/gif&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;image/gif&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="8a86055b6a25630f3ba05a2fc0d72a98fb0dcf72" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;image/gif&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;image/gif&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="3a6be7835bb8d263b3dfed954146e29c7e095800" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;image/gif&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt;.</source>
          <target state="translated">MIMEタイプ= docフレーバ &lt;code&gt;&quot;image/gif&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b05d684302b472c32de2e0603c00d9fd6669bc9f" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;image/jpeg&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;image/jpeg&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="ef4c2a78e0ad592b8a93efb6de21b99cbe584a5a" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;image/jpeg&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;image/jpeg&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="8a6511967e5e9e216a2a9de4e5570dfbd04a204d" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;image/jpeg&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt;.</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;image/jpeg&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="b941984970601758c5b43fde3509acfe6f55e820" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;image/png&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;image/png&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="039dbc142b15e272fdfc0724932843a3864ee993" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;image/png&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;image/png&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="5a6c26c64dd755c6662ff99576f9c0ae455d2027" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;image/png&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt;.</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;image/png&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="8c3d0b3fbee0ba17acb5944214152443955122c7" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html&quot;&lt;/code&gt;, encoded in the host platform encoding.</source>
          <target state="translated">ホストプラットフォームエンコーディングでエンコードされたMIMEタイプ= &lt;code&gt;&quot;text/html&quot;&lt;/code&gt; のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="0d2ea73b763b59cb6d6ef25fffc10cc0fc424844" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html&quot;&lt;/code&gt;, encoded in the host platform encoding. See &lt;a href=&quot;docflavor#hostEncoding&quot;&gt;&lt;code&gt;hostEncoding&lt;/code&gt;&lt;/a&gt; Print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">ホストプラットフォームエンコーディングでエンコードされたMIMEタイプ= &lt;code&gt;&quot;text/html&quot;&lt;/code&gt; の docフレーバー &lt;a href=&quot;docflavor#hostEncoding&quot;&gt; &lt;code&gt;hostEncoding&lt;/code&gt; &lt;/a&gt;印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）を参照してください。</target>
        </trans-unit>
        <trans-unit id="4476352083bdaa7326fc1e3b9eaa2ce7bf4642cb" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html&quot;&lt;/code&gt;, encoded in the host platform encoding. See &lt;a href=&quot;docflavor#hostEncoding&quot;&gt;&lt;code&gt;hostEncoding&lt;/code&gt;&lt;/a&gt; Print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">ホストプラットフォームエンコーディングでエンコードされたMIMEタイプ= &lt;code&gt;&quot;text/html&quot;&lt;/code&gt; の docフレーバー &lt;a href=&quot;docflavor#hostEncoding&quot;&gt; &lt;code&gt;hostEncoding&lt;/code&gt; &lt;/a&gt;印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）を参照してください。</target>
        </trans-unit>
        <trans-unit id="394a6066d6ac3555dc4a3f87c2d9962b3d0cdb7b" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html&quot;&lt;/code&gt;, encoded in the host platform encoding. See &lt;a href=&quot;docflavor#hostEncoding&quot;&gt;&lt;code&gt;hostEncoding&lt;/code&gt;&lt;/a&gt; Print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">ホストプラットフォームエンコーディングでエンコードされたMIMEタイプ= &lt;code&gt;&quot;text/html&quot;&lt;/code&gt; の docフレーバー &lt;a href=&quot;docflavor#hostEncoding&quot;&gt; &lt;code&gt;hostEncoding&lt;/code&gt; &lt;/a&gt;印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; （バイトストリーム）を参照してください。</target>
        </trans-unit>
        <trans-unit id="b116bdf98be1103947eef53d5d944a15466ba8d1" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html&quot;&lt;/code&gt;, encoded in the host platform encoding. See &lt;a href=&quot;docflavor#hostEncoding&quot;&gt;&lt;code&gt;hostEncoding&lt;/code&gt;&lt;/a&gt;. Print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">ホストプラットフォームエンコーディングでエンコードされたMIMEタイプ= &lt;code&gt;&quot;text/html&quot;&lt;/code&gt; のドキュメントフレーバー。&lt;a href=&quot;docflavor#hostEncoding&quot;&gt; &lt;code&gt;hostEncoding&lt;/code&gt; を&lt;/a&gt;参照してください。印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）。</target>
        </trans-unit>
        <trans-unit id="2197765b471568cde8db726bb881767c68d85d09" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html&quot;&lt;/code&gt;, encoded in the host platform encoding. See &lt;a href=&quot;docflavor#hostEncoding&quot;&gt;&lt;code&gt;hostEncoding&lt;/code&gt;&lt;/a&gt;. Print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">ホストプラットフォームエンコーディングでエンコードされたMIMEタイプ= &lt;code&gt;&quot;text/html&quot;&lt;/code&gt; のドキュメントフレーバー。&lt;a href=&quot;docflavor#hostEncoding&quot;&gt; &lt;code&gt;hostEncoding&lt;/code&gt; を&lt;/a&gt;参照してください。印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）。</target>
        </trans-unit>
        <trans-unit id="35b4d6bf9a913ab9df2e3818e79c6061c4d74962" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html&quot;&lt;/code&gt;, encoded in the host platform encoding. See &lt;a href=&quot;docflavor#hostEncoding&quot;&gt;&lt;code&gt;hostEncoding&lt;/code&gt;&lt;/a&gt;. Print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">ホストプラットフォームエンコーディングでエンコードされたMIMEタイプ= &lt;code&gt;&quot;text/html&quot;&lt;/code&gt; のドキュメントフレーバー。&lt;a href=&quot;docflavor#hostEncoding&quot;&gt; &lt;code&gt;hostEncoding&lt;/code&gt; を&lt;/a&gt;参照してください。印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; （バイトストリーム）。</target>
        </trans-unit>
        <trans-unit id="b50788dd033c8f286eb811db2a52c375c18b8be1" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=us-ascii&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=us-ascii&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="66dfc5f6a809db20ff1acc52e836dafcdf6f4df9" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=us-ascii&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=us-ascii&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="c58860b763b1b93b2ea77d5d9ddf5808a16404a5" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=us-ascii&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=us-ascii&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="92b051f423dfc6d42c100ea7c22081ef78ad2fa8" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=utf-16&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=utf-16&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="e92c1eadd464867e844c5d0ef42f08a29643b047" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=utf-16&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;[C&quot;&lt;/code&gt; (character array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=utf-16&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;[C&quot;&lt;/code&gt; （文字配列）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="115da393053e91ef421f1617e48802e4642fcd29" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=utf-16&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=utf-16&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="6fc7cb8785d57d672bf1e71aa63113015e576f45" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=utf-16&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.io.Reader&quot;&lt;/code&gt; (character stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=utf-16&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.Reader&quot;&lt;/code&gt; （文字ストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="498ce2f0efcd2133e6f3b23af2b8c82da3024dc0" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=utf-16&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.lang.String&quot;&lt;/code&gt;.</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=utf-16&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.lang.String&quot;&lt;/code&gt; のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="ff1e9c8f01f4538a0830a9a12efdcabe8d1b7f04" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=utf-16&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=utf-16&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="8deaa07d191ba3d39672cd15cfce78b1277d4aa3" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=utf-16be&quot;&lt;/code&gt; (big-endian byte ordering), print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=utf-16be&quot;&lt;/code&gt; （ビッグエンディアンのバイト順）、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="6c6f684412450e4280f5aff95e1024a43c59e475" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=utf-16be&quot;&lt;/code&gt; (big-endian byte ordering), print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=utf-16be&quot;&lt;/code&gt; （ビッグエンディアンのバイト順）、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="d4dd8c08967407e32f3a27920f7ccac52270f0ed" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=utf-16be&quot;&lt;/code&gt; (big-endian byte ordering), print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=utf-16be&quot;&lt;/code&gt; （ビッグエンディアンのバイト順）、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="d2adc98236bf528fdef3f6541651145235da4fc3" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=utf-16le&quot;&lt;/code&gt; (little-endian byte ordering), print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=utf-16le&quot;&lt;/code&gt; （リトルエンディアンのバイト順）、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="00d3de56e7576354260a37db847ded3ca058591c" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=utf-16le&quot;&lt;/code&gt; (little-endian byte ordering), print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=utf-16le&quot;&lt;/code&gt; （リトルエンディアンのバイト順）、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="fad87a0ce1bc5182ffae0f2a94b2050dd3a4bd12" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=utf-16le&quot;&lt;/code&gt; (little-endian byte ordering), print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=utf-16le&quot;&lt;/code&gt; （リトルエンディアンのバイト順）、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="8138c52391a4de1e2ce563774ddb0d3ebe803d42" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=utf-8&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=utf-8&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="334f93009a90444b6fa5159cdcac33fb90a4fee1" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=utf-8&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=utf-8&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="0a98c0badcf54b21d2cf23e924f4957f11cb5c30" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/html; charset=utf-8&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/html; charset=utf-8&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="a0e541440fbce8b72eee1ee9881a9e36a8cd54f8" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt;, encoded in the host platform encoding.</source>
          <target state="translated">ホストプラットフォームエンコーディングでエンコードされたMIMEタイプ= &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="a06ded1ddcb0fe06d5e0dd2ed7f1cbb8f29b23e6" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt;, encoded in the host platform encoding. See &lt;a href=&quot;docflavor#hostEncoding&quot;&gt;&lt;code&gt;hostEncoding&lt;/code&gt;&lt;/a&gt; Print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">ホストプラットフォームエンコーディングでエンコードされたMIMEタイプ= &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; のドキュメントフレーバー &lt;a href=&quot;docflavor#hostEncoding&quot;&gt; &lt;code&gt;hostEncoding&lt;/code&gt; &lt;/a&gt;印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）を参照してください。</target>
        </trans-unit>
        <trans-unit id="003cda0d8717e9c5884d79c1f77c8edc7479dfb8" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt;, encoded in the host platform encoding. See &lt;a href=&quot;docflavor#hostEncoding&quot;&gt;&lt;code&gt;hostEncoding&lt;/code&gt;&lt;/a&gt; Print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">ホストプラットフォームエンコーディングでエンコードされたMIMEタイプ= &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; のドキュメントフレーバー &lt;a href=&quot;docflavor#hostEncoding&quot;&gt; &lt;code&gt;hostEncoding&lt;/code&gt; &lt;/a&gt;印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）を参照してください。</target>
        </trans-unit>
        <trans-unit id="81fe13025e3100099b30884fb3f211d5ede01d55" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt;, encoded in the host platform encoding. See &lt;a href=&quot;docflavor#hostEncoding&quot;&gt;&lt;code&gt;hostEncoding&lt;/code&gt;&lt;/a&gt; Print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">ホストプラットフォームエンコーディングでエンコードされたMIMEタイプ= &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; のドキュメントフレーバー &lt;a href=&quot;docflavor#hostEncoding&quot;&gt; &lt;code&gt;hostEncoding&lt;/code&gt; &lt;/a&gt;印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; （バイトストリーム）を参照してください。</target>
        </trans-unit>
        <trans-unit id="2907e03ee5bbcd1443ee3f5d698680aba00dc052" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt;, encoded in the host platform encoding. See &lt;a href=&quot;docflavor#hostEncoding&quot;&gt;&lt;code&gt;hostEncoding&lt;/code&gt;&lt;/a&gt;. Print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">ホストプラットフォームエンコーディングでエンコードされたMIMEタイプ= &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; のドキュメントフレーバー。&lt;a href=&quot;docflavor#hostEncoding&quot;&gt; &lt;code&gt;hostEncoding&lt;/code&gt; を&lt;/a&gt;参照してください。印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）。</target>
        </trans-unit>
        <trans-unit id="c9d4a661a3c40de28040f2efa45e39f485129f1a" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt;, encoded in the host platform encoding. See &lt;a href=&quot;docflavor#hostEncoding&quot;&gt;&lt;code&gt;hostEncoding&lt;/code&gt;&lt;/a&gt;. Print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">ホストプラットフォームエンコーディングでエンコードされたMIMEタイプ= &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; のドキュメントフレーバー。&lt;a href=&quot;docflavor#hostEncoding&quot;&gt; &lt;code&gt;hostEncoding&lt;/code&gt; を&lt;/a&gt;参照してください。印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）。</target>
        </trans-unit>
        <trans-unit id="6c1e694169907683eba336ae0d783eda25e44048" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt;, encoded in the host platform encoding. See &lt;a href=&quot;docflavor#hostEncoding&quot;&gt;&lt;code&gt;hostEncoding&lt;/code&gt;&lt;/a&gt;. Print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">ホストプラットフォームエンコーディングでエンコードされたMIMEタイプ= &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; のドキュメントフレーバー。&lt;a href=&quot;docflavor#hostEncoding&quot;&gt; &lt;code&gt;hostEncoding&lt;/code&gt; を&lt;/a&gt;参照してください。印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; （バイトストリーム）。</target>
        </trans-unit>
        <trans-unit id="5d2262c5efefa0e4adfe31ad3970c6f5719bfd31" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=us-ascii&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/plain; charset=us-ascii&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="a63cea4666a52299d4cac13c33a5a634cdba3f1d" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=us-ascii&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/plain; charset=us-ascii&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="02a59db9966b1082c03c1e76e0a2f4129005a9af" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=us-ascii&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/plain; charset=us-ascii&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="b7b67340f79474a2dbfb5d5d0c5bdb5528e62bd0" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=utf-16&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/plain; charset=utf-16&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="74e692cd5865d39dbb7bcf855b263f68b435a6c3" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=utf-16&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;[C&quot;&lt;/code&gt; (character array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/plain; charset=utf-16&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;[C&quot;&lt;/code&gt; （文字配列）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="fc509e667a830fdd4c1f939cbac37ab76d5ebc16" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=utf-16&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプのdocフレーバ= &lt;code&gt;&quot;text/plain; charset=utf-16&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）。</target>
        </trans-unit>
        <trans-unit id="b95f3896773f1daf42ff2a27cf5111be49a994ec" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=utf-16&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.io.Reader&quot;&lt;/code&gt; (character stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/plain; charset=utf-16&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.Reader&quot;&lt;/code&gt; （文字ストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="cf11049920b4acfe3c8a1c32fde9409de793bbee" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=utf-16&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.lang.String&quot;&lt;/code&gt;.</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/plain; charset=utf-16&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.lang.String&quot;&lt;/code&gt; のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="555c74f0754c85889ea6f769bcc55e66807d119a" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=utf-16&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;java.net.URL&quot;&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/plain; charset=utf-16&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;java.net.URL&quot;&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="2c54185e65f6d3c4c477c3ead2eb443553be05df" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=utf-16be&quot;&lt;/code&gt; (big-endian byte ordering), print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/plain; charset=utf-16be&quot;&lt;/code&gt; （ビッグエンディアンバイト順）、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="7d542a453d792062da944565aaf5df9261ec6f15" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=utf-16be&quot;&lt;/code&gt; (big-endian byte ordering), print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/plain; charset=utf-16be&quot;&lt;/code&gt; （ビッグエンディアンのバイト順）、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="1af2d98853ca78eea53ebedd0594468e59bdc60f" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=utf-16be&quot;&lt;/code&gt; (big-endian byte ordering), print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/plain; charset=utf-16be&quot;&lt;/code&gt; （ビッグエンディアンバイト順）、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="dafe6aaf6885301ecedffd85a756afd94fbe2482" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=utf-16le&quot;&lt;/code&gt; (little-endian byte ordering), print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/plain; charset=utf-16le&quot;&lt;/code&gt; （リトルエンディアンのバイト順）、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="c310fc3191033590712d0e7cca49cab905e0b8ee" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=utf-16le&quot;&lt;/code&gt; (little-endian byte ordering), print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/plain; charset=utf-16le&quot;&lt;/code&gt; （リトルエンディアンのバイト順）、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="df4c6f7d233ee5bf8dcb541893c3be7d8b5602e1" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=utf-16le&quot;&lt;/code&gt; (little-endian byte ordering), print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/plain; charset=utf-16le&quot;&lt;/code&gt; （リトルエンディアンのバイト順）、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="1dea0128ce5d6ece2da0e61d72e2505aa72347b3" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=utf-8&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;[B&quot;&lt;/code&gt; (byte array).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/plain; charset=utf-8&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;[B&quot;&lt;/code&gt; （バイト配列）のドキュメントフレーバー</target>
        </trans-unit>
        <trans-unit id="9239f67f4925157132c6792e3ef6ba641e2bb91e" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=utf-8&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/plain; charset=utf-8&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.io.InputStream&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="efea52618eab396a1cf70f8a12282c1afeda9b1a" translate="yes" xml:space="preserve">
          <source>Doc flavor with MIME type = &lt;code&gt;&quot;text/plain; charset=utf-8&quot;&lt;/code&gt;, print data representation class name = &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; (byte stream).</source>
          <target state="translated">MIMEタイプ= &lt;code&gt;&quot;text/plain; charset=utf-8&quot;&lt;/code&gt; 、印刷データ表現クラス名= &lt;code&gt;&quot;java.net.URL&quot;&lt;/code&gt; （バイトストリーム）のドキュメントフレーバー。</target>
        </trans-unit>
        <trans-unit id="fcf94cc67bedd2d37f16ef217a65c121a4bd7efe" translate="yes" xml:space="preserve">
          <source>Doc flavor.</source>
          <target state="translated">ドク味。</target>
        </trans-unit>
        <trans-unit id="89b5be88d7ad7dcca7b4df2ca2015afed97fc600" translate="yes" xml:space="preserve">
          <source>Doc.getAttributes()</source>
          <target state="translated">Doc.getAttributes()</target>
        </trans-unit>
        <trans-unit id="23a40768992a1ff199db784c3d12ab5415b621b1" translate="yes" xml:space="preserve">
          <source>Doc.getDocFlavor()</source>
          <target state="translated">Doc.getDocFlavor()</target>
        </trans-unit>
        <trans-unit id="52de2083bd03f2c03f6135f41f3e1fe201f86a77" translate="yes" xml:space="preserve">
          <source>Doc.getPrintData()</source>
          <target state="translated">Doc.getPrintData()</target>
        </trans-unit>
        <trans-unit id="f2a22a29d6d5680372e975f0150240f9ec0a054e" translate="yes" xml:space="preserve">
          <source>Doc.getReaderForText()</source>
          <target state="translated">Doc.getReaderForText()</target>
        </trans-unit>
        <trans-unit id="b8acabd1197e6fc2ab30133c3d14ec204c64bf00" translate="yes" xml:space="preserve">
          <source>Doc.getStreamForBytes()</source>
          <target state="translated">Doc.getStreamForBytes()</target>
        </trans-unit>
        <trans-unit id="c62b74caf03eb7c88879edd6eb8f20cc91e576d8" translate="yes" xml:space="preserve">
          <source>DocAttribute</source>
          <target state="translated">DocAttribute</target>
        </trans-unit>
        <trans-unit id="4e9c07b5c27a828b1f13e2efe961aa823d0e04b2" translate="yes" xml:space="preserve">
          <source>DocAttributeSet</source>
          <target state="translated">DocAttributeSet</target>
        </trans-unit>
        <trans-unit id="5641e99227e96d8d972f458fff28ea07f7cc2e46" translate="yes" xml:space="preserve">
          <source>DocAttributeSet.add()</source>
          <target state="translated">DocAttributeSet.add()</target>
        </trans-unit>
        <trans-unit id="36be40a589a2df900bb0c882115cfe892d0f608c" translate="yes" xml:space="preserve">
          <source>DocAttributeSet.addAll()</source>
          <target state="translated">DocAttributeSet.addAll()</target>
        </trans-unit>
        <trans-unit id="696428e3a14142a195ba2564fed3a661d2b0b4cc" translate="yes" xml:space="preserve">
          <source>DocFlavor</source>
          <target state="translated">DocFlavor</target>
        </trans-unit>
        <trans-unit id="ff9cded225bde1fb54d3f9d62fc31759e99372aa" translate="yes" xml:space="preserve">
          <source>DocFlavor.BYTE_ARRAY</source>
          <target state="translated">DocFlavor.BYTE_ARRAY</target>
        </trans-unit>
        <trans-unit id="c1bc7bd04e2b87071422bd7ba6e7fe087849c370" translate="yes" xml:space="preserve">
          <source>DocFlavor.CHAR_ARRAY</source>
          <target state="translated">DocFlavor.CHAR_ARRAY</target>
        </trans-unit>
        <trans-unit id="f1b7b27c6a02b39e8fab5d44b467d605edaef770" translate="yes" xml:space="preserve">
          <source>DocFlavor.INPUT_STREAM</source>
          <target state="translated">DocFlavor.INPUT_STREAM</target>
        </trans-unit>
        <trans-unit id="8cc3ab14c4b12f053d11e3fd09aa07c01d9d3920" translate="yes" xml:space="preserve">
          <source>DocFlavor.READER</source>
          <target state="translated">DocFlavor.READER</target>
        </trans-unit>
        <trans-unit id="29ff1d6a1db08d2603515fed11c5d407186ffd6e" translate="yes" xml:space="preserve">
          <source>DocFlavor.SERVICE_FORMATTED</source>
          <target state="translated">DocFlavor.SERVICE_FORMATTED</target>
        </trans-unit>
        <trans-unit id="9d50ce800c7272d9ee7d1bd402e6c27073cc4b3a" translate="yes" xml:space="preserve">
          <source>DocFlavor.STRING</source>
          <target state="translated">DocFlavor.STRING</target>
        </trans-unit>
        <trans-unit id="d995241e6ac5d097c3046f6573fc20e2377dd363" translate="yes" xml:space="preserve">
          <source>DocFlavor.URL</source>
          <target state="translated">DocFlavor.URL</target>
        </trans-unit>
        <trans-unit id="cc89143369ed6bc813ffb580c43f4aa9e18ceb2e" translate="yes" xml:space="preserve">
          <source>DocFlavor.equals()</source>
          <target state="translated">DocFlavor.equals()</target>
        </trans-unit>
        <trans-unit id="d46a92f7de58c83456f5be55c8c53fb60847a080" translate="yes" xml:space="preserve">
          <source>DocFlavor.getMediaSubtype()</source>
          <target state="translated">DocFlavor.getMediaSubtype()</target>
        </trans-unit>
        <trans-unit id="df04fb91f89f0c605d19036f07774c887d195f68" translate="yes" xml:space="preserve">
          <source>DocFlavor.getMediaType()</source>
          <target state="translated">DocFlavor.getMediaType()</target>
        </trans-unit>
        <trans-unit id="5d3a846a1bd7a3fff6e110602e8a84eab8278616" translate="yes" xml:space="preserve">
          <source>DocFlavor.getMimeType()</source>
          <target state="translated">DocFlavor.getMimeType()</target>
        </trans-unit>
        <trans-unit id="ac402fce2a13be90831c4f98ad561c3d24447b0e" translate="yes" xml:space="preserve">
          <source>DocFlavor.getParameter()</source>
          <target state="translated">DocFlavor.getParameter()</target>
        </trans-unit>
        <trans-unit id="00b6bcc44f5f26a214f3c3456b061c42cfd24e38" translate="yes" xml:space="preserve">
          <source>DocFlavor.getRepresentationClassName()</source>
          <target state="translated">DocFlavor.getRepresentationClassName()</target>
        </trans-unit>
        <trans-unit id="6441ee47939bfd4f3953fce297fc8a7826a9de78" translate="yes" xml:space="preserve">
          <source>DocFlavor.hashCode()</source>
          <target state="translated">DocFlavor.hashCode()</target>
        </trans-unit>
        <trans-unit id="4983a39d6198c4da121ed51e3f7c70ebafeef6fe" translate="yes" xml:space="preserve">
          <source>DocFlavor.toString()</source>
          <target state="translated">DocFlavor.toString()</target>
        </trans-unit>
        <trans-unit id="bde489df9b073bf793692f203ac10e46017f6cca" translate="yes" xml:space="preserve">
          <source>DocPrintJob</source>
          <target state="translated">DocPrintJob</target>
        </trans-unit>
        <trans-unit id="138bf7e6c6e223afccb6ce5f824dba5b9400a707" translate="yes" xml:space="preserve">
          <source>DocPrintJob.addPrintJobAttributeListener()</source>
          <target state="translated">DocPrintJob.addPrintJobAttributeListener()</target>
        </trans-unit>
        <trans-unit id="4a047f56cb13f38fc8aebb5d359dfbc30318796d" translate="yes" xml:space="preserve">
          <source>DocPrintJob.addPrintJobListener()</source>
          <target state="translated">DocPrintJob.addPrintJobListener()</target>
        </trans-unit>
        <trans-unit id="03cda91c84e3abc08bff5818fcea0a99c4bb9699" translate="yes" xml:space="preserve">
          <source>DocPrintJob.getAttributes()</source>
          <target state="translated">DocPrintJob.getAttributes()</target>
        </trans-unit>
        <trans-unit id="5d341a782bfc7e3604628c35b4ff226518dce25f" translate="yes" xml:space="preserve">
          <source>DocPrintJob.getPrintService()</source>
          <target state="translated">DocPrintJob.getPrintService()</target>
        </trans-unit>
        <trans-unit id="7dbe7d67b70fe59424d0aedc96201522bd32be15" translate="yes" xml:space="preserve">
          <source>DocPrintJob.print()</source>
          <target state="translated">DocPrintJob.print()</target>
        </trans-unit>
        <trans-unit id="5378170e1c46eecc1d1051287327b4df6e022232" translate="yes" xml:space="preserve">
          <source>DocPrintJob.removePrintJobAttributeListener()</source>
          <target state="translated">DocPrintJob.removePrintJobAttributeListener()</target>
        </trans-unit>
        <trans-unit id="5efc6c9a78a3e752cc3d713c470d0b8e1f1dc4bb" translate="yes" xml:space="preserve">
          <source>DocPrintJob.removePrintJobListener()</source>
          <target state="translated">DocPrintJob.removePrintJobListener()</target>
        </trans-unit>
        <trans-unit id="300784a590ee556b582171701b4c165e724a880e" translate="yes" xml:space="preserve">
          <source>DockingListener</source>
          <target state="translated">DockingListener</target>
        </trans-unit>
        <trans-unit id="e214b8a29923056887b7edf6635d90dcbb2abe88" translate="yes" xml:space="preserve">
          <source>Document</source>
          <target state="translated">Document</target>
        </trans-unit>
        <trans-unit id="6be2ce90f6e0398537ee671de98726b9a59795a4" translate="yes" xml:space="preserve">
          <source>Document Object Model (DOM) Level 2 Specification</source>
          <target state="translated">ドキュメントオブジェクトモデル(DOM)レベル2仕様</target>
        </trans-unit>
        <trans-unit id="246efeeaa5917477cb016d0fb653fbf015c0ca75" translate="yes" xml:space="preserve">
          <source>Document Size</source>
          <target state="translated">ドキュメントサイズ</target>
        </trans-unit>
        <trans-unit id="4b588225282584240a09893a4e07cd876e26e3b9" translate="yes" xml:space="preserve">
          <source>Document Type Specification</source>
          <target state="translated">ドキュメントタイプ仕様</target>
        </trans-unit>
        <trans-unit id="d5dba5ed8f33f7e61e8cc2d51f5abb344746f624" translate="yes" xml:space="preserve">
          <source>Document implementations will generally have some set of properties associated with them at runtime. Two well known properties are the &lt;a href=&quot;#StreamDescriptionProperty&quot;&gt;StreamDescriptionProperty&lt;/a&gt;, which can be used to describe where the &lt;code&gt;Document&lt;/code&gt; came from, and the &lt;a href=&quot;#TitleProperty&quot;&gt;TitleProperty&lt;/a&gt;, which can be used to name the &lt;code&gt;Document&lt;/code&gt;. The methods related to the properties are:</source>
          <target state="translated">ドキュメントの実装には、通常、実行時にいくつかのプロパティのセットが関連付けられています。2つのよく知られた特性がある&lt;a href=&quot;#StreamDescriptionProperty&quot;&gt;StreamDescriptionProperty&lt;/a&gt;どこ記述するために使用することができ、 &lt;code&gt;Document&lt;/code&gt; から来て、&lt;a href=&quot;#TitleProperty&quot;&gt;TitleProperty&lt;/a&gt;名前を付けるために使用することができ、 &lt;code&gt;Document&lt;/code&gt; 。プロパティに関連するメソッドは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7ba43b19f3c78ff1ec23ce6ad36b904fefddf3c4" translate="yes" xml:space="preserve">
          <source>Document property key value.</source>
          <target state="translated">ドキュメントプロパティのキーの値。</target>
        </trans-unit>
        <trans-unit id="5e81f5b81cd20503904764b7227be981839291cb" translate="yes" xml:space="preserve">
          <source>Document property key value. The value for the key will be a Vector of Strings that are comments not found in the body.</source>
          <target state="translated">ドキュメントプロパティのキーの値。キーの値は、本文にはないコメントである文字列のVectorになります。</target>
        </trans-unit>
        <trans-unit id="7a105c456f0b5a465e22dcfe818307c67ecf55f5" translate="yes" xml:space="preserve">
          <source>Document that remove/insertString will operate on</source>
          <target state="translated">remove/insertString が操作されるドキュメント</target>
        </trans-unit>
        <trans-unit id="2c10ebe388e1b4055b37c0a45ad7ddd6540b5385" translate="yes" xml:space="preserve">
          <source>DocumentBuilder</source>
          <target state="translated">DocumentBuilder</target>
        </trans-unit>
        <trans-unit id="5df53df65834165995f7935dac4eaffcd23a0b9e" translate="yes" xml:space="preserve">
          <source>DocumentBuilderFactory</source>
          <target state="translated">DocumentBuilderFactory</target>
        </trans-unit>
        <trans-unit id="9f4e08e10d649dc6e5f77613b66e75c52f042538" translate="yes" xml:space="preserve">
          <source>DocumentEvent</source>
          <target state="translated">DocumentEvent</target>
        </trans-unit>
        <trans-unit id="837dcffcd6515ee9e1939ddc4cbabbfa7fc10d4c" translate="yes" xml:space="preserve">
          <source>DocumentEvent.ElementChange</source>
          <target state="translated">DocumentEvent.ElementChange</target>
        </trans-unit>
        <trans-unit id="c76e3c5aaef6f1038f8eb0099d79b29580b5dc74" translate="yes" xml:space="preserve">
          <source>DocumentEvent.EventType</source>
          <target state="translated">DocumentEvent.EventType</target>
        </trans-unit>
        <trans-unit id="8f1068d8f9454f562647f35d449e8cd8894b64d3" translate="yes" xml:space="preserve">
          <source>DocumentFilter</source>
          <target state="translated">DocumentFilter</target>
        </trans-unit>
        <trans-unit id="4edeb498a503d41a27d28786e3aaf05a5fa5df94" translate="yes" xml:space="preserve">
          <source>DocumentFilter to restrict edits</source>
          <target state="translated">編集を制限するDocumentFilter</target>
        </trans-unit>
        <trans-unit id="6c97d39c18aee53126c6b7c8656868a8f8ed4da9" translate="yes" xml:space="preserve">
          <source>DocumentFilter.FilterBypass</source>
          <target state="translated">DocumentFilter.FilterBypass</target>
        </trans-unit>
        <trans-unit id="3efe3cdccfc92307308665352a4731afaca82058" translate="yes" xml:space="preserve">
          <source>DocumentFragment</source>
          <target state="translated">DocumentFragment</target>
        </trans-unit>
        <trans-unit id="817cd4901c8033d09385d39bbbcde483570e43ff" translate="yes" xml:space="preserve">
          <source>DocumentHandler</source>
          <target state="translated">DocumentHandler</target>
        </trans-unit>
        <trans-unit id="4537ccff3bd7b38be15b8cd32d8293b8eb2704f2" translate="yes" xml:space="preserve">
          <source>DocumentListener</source>
          <target state="translated">DocumentListener</target>
        </trans-unit>
        <trans-unit id="d926ebfa514d22c7e74231d412e7e2a44e3f70a6" translate="yes" xml:space="preserve">
          <source>DocumentName</source>
          <target state="translated">DocumentName</target>
        </trans-unit>
        <trans-unit id="2e277faf88d78da961de10fb6d46411ee617c90b" translate="yes" xml:space="preserve">
          <source>DocumentName.equals()</source>
          <target state="translated">DocumentName.equals()</target>
        </trans-unit>
        <trans-unit id="9af3d2ef94f6cf96b62c514bd848b0e77752c303" translate="yes" xml:space="preserve">
          <source>DocumentName.getCategory()</source>
          <target state="translated">DocumentName.getCategory()</target>
        </trans-unit>
        <trans-unit id="5b8507ecf9fdcad3d13b70e8ecd61b5fda479644" translate="yes" xml:space="preserve">
          <source>DocumentName.getName()</source>
          <target state="translated">DocumentName.getName()</target>
        </trans-unit>
        <trans-unit id="133277c3d85540475d10800512380f03c4d5f85e" translate="yes" xml:space="preserve">
          <source>DocumentParser</source>
          <target state="translated">DocumentParser</target>
        </trans-unit>
        <trans-unit id="e1a50a3e8dd4a83faa36c6bd3be0ea66ea85df09" translate="yes" xml:space="preserve">
          <source>DocumentRange</source>
          <target state="translated">DocumentRange</target>
        </trans-unit>
        <trans-unit id="aa0aeb5b5956124e644bcaa5141b55904f14747d" translate="yes" xml:space="preserve">
          <source>DocumentTraversal</source>
          <target state="translated">DocumentTraversal</target>
        </trans-unit>
        <trans-unit id="6a21429d57f8871b1fffedfe4b441dcca436246b" translate="yes" xml:space="preserve">
          <source>DocumentType</source>
          <target state="translated">DocumentType</target>
        </trans-unit>
        <trans-unit id="507140782e73a855e2b118378e0322c37bd93251" translate="yes" xml:space="preserve">
          <source>DocumentView</source>
          <target state="translated">DocumentView</target>
        </trans-unit>
        <trans-unit id="57f28d6e42a8147caf3ba78bfeacb7d9b0ecf90d" translate="yes" xml:space="preserve">
          <source>Documentation extracted from Debian's OpenJDK Development Kit package.</source>
          <target state="translated">Debian の OpenJDK Development Kit パッケージから抜粋したドキュメントです。</target>
        </trans-unit>
        <trans-unit id="842bb6b7c9b0dbd0fa0e0961136e914bf9e75316" translate="yes" xml:space="preserve">
          <source>DocumentationTool</source>
          <target state="translated">DocumentationTool</target>
        </trans-unit>
        <trans-unit id="543f30ffcd5d1dd414953456f16565e2e3b466ae" translate="yes" xml:space="preserve">
          <source>DocumentationTool.DocumentationTask</source>
          <target state="translated">DocumentationTool.DocumentationTask</target>
        </trans-unit>
        <trans-unit id="0715a6591e2dc0383fef20d281c1fed26cfa7425" translate="yes" xml:space="preserve">
          <source>DocumentationTool.DocumentationTask.call()</source>
          <target state="translated">DocumentationTool.DocumentationTask.call()</target>
        </trans-unit>
        <trans-unit id="d716916cf9678ea9f5b81e589cdc304c159f9d4f" translate="yes" xml:space="preserve">
          <source>DocumentationTool.DocumentationTask.setLocale()</source>
          <target state="translated">DocumentationTool.DocumentationTask.setLocale()</target>
        </trans-unit>
        <trans-unit id="dd306595188726c53bd66853f38b127e7e7e8720" translate="yes" xml:space="preserve">
          <source>DocumentationTool.Location</source>
          <target state="translated">DocumentationTool.Location</target>
        </trans-unit>
        <trans-unit id="49d92b09754435cc37646885b65c7bbf960ee0f1" translate="yes" xml:space="preserve">
          <source>DocumentationTool.Location.getName()</source>
          <target state="translated">DocumentationTool.Location.getName()</target>
        </trans-unit>
        <trans-unit id="664ce2c723ed2d87724c39f4cfb55cb19408bf2e" translate="yes" xml:space="preserve">
          <source>DocumentationTool.Location.isOutputLocation()</source>
          <target state="translated">DocumentationTool.Location.isOutputLocation()</target>
        </trans-unit>
        <trans-unit id="8968a3411df8ba1929c02d97e7da1204bbe1b93d" translate="yes" xml:space="preserve">
          <source>DocumentationTool.Location.valueOf()</source>
          <target state="translated">DocumentationTool.Location.valueOf()</target>
        </trans-unit>
        <trans-unit id="71b2cf4eef7384c13d9c211a7675f9907b6e1941" translate="yes" xml:space="preserve">
          <source>DocumentationTool.Location.values()</source>
          <target state="translated">DocumentationTool.Location.values()</target>
        </trans-unit>
        <trans-unit id="c66e921cf64b6eb34e088a401af882b192ea6fcd" translate="yes" xml:space="preserve">
          <source>DocumentationTool.getStandardFileManager()</source>
          <target state="translated">DocumentationTool.getStandardFileManager()</target>
        </trans-unit>
        <trans-unit id="5d6d575eaaea6e5dbca95c483ecb8b150f945673" translate="yes" xml:space="preserve">
          <source>DocumentationTool.getTask()</source>
          <target state="translated">DocumentationTool.getTask()</target>
        </trans-unit>
        <trans-unit id="9681edd3b5414380bd4cacae8c4781bb4cd5ec20" translate="yes" xml:space="preserve">
          <source>Documented</source>
          <target state="translated">Documented</target>
        </trans-unit>
        <trans-unit id="cb90e4a083fe62456b5ece64587711d278c0a403" translate="yes" xml:space="preserve">
          <source>Does a read unlock.</source>
          <target state="translated">読み込みは解除されますか?</target>
        </trans-unit>
        <trans-unit id="b1a4a057db716a48af46aa7a58183e6279e6436e" translate="yes" xml:space="preserve">
          <source>Does a read unlock. This signals that one of the readers is done. If there are no more readers then writing can begin again. This should be balanced with a readLock, and should occur in a finally statement so that the balance is guaranteed. The following is an example.</source>
          <target state="translated">読み込みのロックを解除します。これは、読み手の一人が終わったことを示しています。読み手がいなくなれば、書き込みを再開することができます。これはreadLockとのバランスをとる必要があり、バランスが保証されるように、最後の文の中で発生させる必要があります。以下に例を示します。</target>
        </trans-unit>
        <trans-unit id="a2daa9d57f9ede2bac4aa6a390eb6346b736e86f" translate="yes" xml:space="preserve">
          <source>Does indentation.</source>
          <target state="translated">インデントをします。</target>
        </trans-unit>
        <trans-unit id="75414dff5b1651007e747c73269d3ea98fb6c869" translate="yes" xml:space="preserve">
          <source>Does indentation. The number of spaces written out is indent level times the space to map mapping. If the current line is empty, this will not make it so that the current line is still considered empty.</source>
          <target state="translated">インデントを行います。書き出したスペースの数は、インデントレベルにマッピングするスペースを掛けたものです。現在の行が空行の場合、これでは現在の行が空行のままとみなされるようにはなりません。</target>
        </trans-unit>
        <trans-unit id="b3cd3d36cd97ce83465e2cb5b45b99549d9aa2f2" translate="yes" xml:space="preserve">
          <source>Does no drawing by default.</source>
          <target state="translated">デフォルトでは描画しません。</target>
        </trans-unit>
        <trans-unit id="df7d99f23c5f33c343cc4f0edf887af656d5ffbf" translate="yes" xml:space="preserve">
          <source>Does not close its output. (The output can accumulate more elements.)</source>
          <target state="translated">出力を閉じない。(出力はより多くの要素を蓄積することができます)。</target>
        </trans-unit>
        <trans-unit id="df9d9de18bff3ae3872fdfe2e58c55fb981e2ec5" translate="yes" xml:space="preserve">
          <source>Does not show rows that have been deleted.</source>
          <target state="translated">削除された行は表示されません。</target>
        </trans-unit>
        <trans-unit id="f50f16218fd97663a45c472537eb6e91155605ad" translate="yes" xml:space="preserve">
          <source>Does not yet handle recursion (where the substituted strings contain {n} references.)</source>
          <target state="translated">再帰(置換された文字列が{n}参照を含む場合)をまだ扱っていません。</target>
        </trans-unit>
        <trans-unit id="ee924836f25f96cf39d97dfc8d181159f2e9be58" translate="yes" xml:space="preserve">
          <source>Does nothing because &lt;code&gt;JInternalFrame&lt;/code&gt;s must always be roots of a focus traversal cycle.</source>
          <target state="translated">&lt;code&gt;JInternalFrame&lt;/code&gt; は常にフォーカストラバーサルサイクルのルートでなければならないため、何もしません。</target>
        </trans-unit>
        <trans-unit id="efe8bef76c0c6b87745a1a1a4e5965cb1db70d13" translate="yes" xml:space="preserve">
          <source>Does nothing because Windows must always be roots of a focus traversal cycle.</source>
          <target state="translated">Windows は常にフォーカストラバーサルサイクルのルーツでなければならないので、何もしません。</target>
        </trans-unit>
        <trans-unit id="23cb9ee681f34de959f695cc37d788c7ff76becb" translate="yes" xml:space="preserve">
          <source>Does nothing because Windows must always be roots of a focus traversal cycle. The passed-in value is ignored.</source>
          <target state="translated">Windows は常にフォーカストラバーサルサイクルのルートでなければならないので、何もしません。パスインされた値は無視されます。</target>
        </trans-unit>
        <trans-unit id="885d227f5e3342b5c8dc21f1ad66cb39330204fe" translate="yes" xml:space="preserve">
          <source>Does nothing, FixedHeightLayoutCache doesn't cache width, and that is all that could change.</source>
          <target state="translated">何もしません。FixedHeightLayoutCacheは幅をキャッシュしません。</target>
        </trans-unit>
        <trans-unit id="eec930ae48d669f149485e43a908680f926b1e28" translate="yes" xml:space="preserve">
          <source>Does nothing, since &lt;code&gt;IIOMetadataNode&lt;/code&gt;s do not contain &lt;code&gt;Text&lt;/code&gt; children.</source>
          <target state="translated">&lt;code&gt;IIOMetadataNode&lt;/code&gt; には &lt;code&gt;Text&lt;/code&gt; の子が含まれていないため、何もしません。</target>
        </trans-unit>
        <trans-unit id="0cb56e42df4f0c5f00217c387e2c70ead6d56c01" translate="yes" xml:space="preserve">
          <source>Does nothing, since namespaces are not supported.</source>
          <target state="translated">名前空間はサポートされていないので、何もしません。</target>
        </trans-unit>
        <trans-unit id="dcdbb3bf88b06c1af2b4450e1d5237743544275b" translate="yes" xml:space="preserve">
          <source>Does nothing, which has the effect of discarding task r.</source>
          <target state="translated">何もせず、タスクrを破棄する効果があります。</target>
        </trans-unit>
        <trans-unit id="ba0fbc930c6e3020b850bcdf93ff4cec216cd367" translate="yes" xml:space="preserve">
          <source>Does nothing.</source>
          <target state="translated">何もしない</target>
        </trans-unit>
        <trans-unit id="0a45814d524be1a0a01f5d16554f9a6a6d2d4179" translate="yes" xml:space="preserve">
          <source>Does nothing. A &lt;code&gt;SynchronousQueue&lt;/code&gt; has no internal capacity.</source>
          <target state="translated">何もしません。A &lt;code&gt;SynchronousQueue&lt;/code&gt; は何の内部容量がありません。</target>
        </trans-unit>
        <trans-unit id="fb9984cfe05beb137cef69e2fa66a61ed475528a" translate="yes" xml:space="preserve">
          <source>Does nothing. If the developer really wants to change the size of one of the views JSplitPane.resetToPreferredSizes should be messaged.</source>
          <target state="translated">何もしません。開発者が本当にビューのサイズを変更したい場合は、JSplitPane.resetToPreferredSizesをメッセージしてください。</target>
        </trans-unit>
        <trans-unit id="d44941f219ee4bbb7cf12966d7ed70bcddceb2e4" translate="yes" xml:space="preserve">
          <source>Does the &lt;code&gt;DataFlavor&lt;/code&gt; represent a &lt;code&gt;java.io.InputStream&lt;/code&gt;?</source>
          <target state="translated">ん &lt;code&gt;DataFlavor&lt;/code&gt; が表現する &lt;code&gt;java.io.InputStream&lt;/code&gt; をしますか？</target>
        </trans-unit>
        <trans-unit id="7ce828fdc6ae9ab31bce64e0998ea61b31f71dba" translate="yes" xml:space="preserve">
          <source>Does the &lt;code&gt;DataFlavor&lt;/code&gt; represent a serialized object?</source>
          <target state="translated">ん &lt;code&gt;DataFlavor&lt;/code&gt; が直列化されたオブジェクトを表しますか？</target>
        </trans-unit>
        <trans-unit id="5aaa1ece818109b34bfe7a60b0042505341a4d81" translate="yes" xml:space="preserve">
          <source>Does the &lt;code&gt;JFormattedTextField&lt;/code&gt; have focus? Use the edit formatter.</source>
          <target state="translated">ん &lt;code&gt;JFormattedTextField&lt;/code&gt; フォーカスを持っていますか？編集フォーマッタを使用します。</target>
        </trans-unit>
        <trans-unit id="3d3f8ef4db42202e44226745e6dd405c0c21c5f6" translate="yes" xml:space="preserve">
          <source>Does the actual layout.</source>
          <target state="translated">実際のレイアウトをする。</target>
        </trans-unit>
        <trans-unit id="f3b0e21730bf9e2f82fd742a299a366ef5dd8e30" translate="yes" xml:space="preserve">
          <source>Does the this &lt;code&gt;JTree&lt;/code&gt; have children?</source>
          <target state="translated">この &lt;code&gt;JTree&lt;/code&gt; には子供がいますか？</target>
        </trans-unit>
        <trans-unit id="9c23cbb40f0f1ca78877c73aeb53eecfb159ffd3" translate="yes" xml:space="preserve">
          <source>Does the this &lt;code&gt;JTree&lt;/code&gt; have children? This property is currently not implemented.</source>
          <target state="translated">この &lt;code&gt;JTree&lt;/code&gt; には子供がいますか？このプロパティは現在実装されていません。</target>
        </trans-unit>
        <trans-unit id="f5294ef5a87b51311c937b88e58a0104456696ae" translate="yes" xml:space="preserve">
          <source>Does this constant correspond to a nested type element?</source>
          <target state="translated">この定数は入れ子になった型要素に対応していますか?</target>
        </trans-unit>
        <trans-unit id="29a220542c0911005394b1b97dc366588fd185a4" translate="yes" xml:space="preserve">
          <source>Does this constant correspond to a nested type element? A</source>
          <target state="translated">この定数は入れ子になった型要素に対応していますか?A</target>
        </trans-unit>
        <trans-unit id="9b6eb17f10f64d8de6fe0fd1a48fda3f45ccadcc" translate="yes" xml:space="preserve">
          <source>Does this transition represent a gap in the local time-line.</source>
          <target state="translated">この変遷は、ローカルな時間軸のギャップを表しているのでしょうか。</target>
        </trans-unit>
        <trans-unit id="6cf49748dd9d3c11d84744d42c35af42d17ac820" translate="yes" xml:space="preserve">
          <source>Does this transition represent an overlap in the local time-line.</source>
          <target state="translated">この遷移は、ローカルな時間軸の重なりを表しているのでしょうか。</target>
        </trans-unit>
        <trans-unit id="fe738d061b0e897742bc5eb43dc4793537f6a2e8" translate="yes" xml:space="preserve">
          <source>DomainCombiner</source>
          <target state="translated">DomainCombiner</target>
        </trans-unit>
        <trans-unit id="4ba3afb26af5bfe2f39a2d822dc68fdfdbdb4e6b" translate="yes" xml:space="preserve">
          <source>DomainCombiner.combine()</source>
          <target state="translated">DomainCombiner.combine()</target>
        </trans-unit>
        <trans-unit id="890f43359356bf131751c198676defdcae08d8e0" translate="yes" xml:space="preserve">
          <source>DomainLoadStoreParameter</source>
          <target state="translated">DomainLoadStoreParameter</target>
        </trans-unit>
        <trans-unit id="2ccfba266cdeadfee1bd446e45f0dde882e4c46a" translate="yes" xml:space="preserve">
          <source>DomainLoadStoreParameter.getConfiguration()</source>
          <target state="translated">DomainLoadStoreParameter.getConfiguration()</target>
        </trans-unit>
        <trans-unit id="a0d958c52c6feadf11107cdf71b649678337734b" translate="yes" xml:space="preserve">
          <source>DomainLoadStoreParameter.getProtectionParameter()</source>
          <target state="translated">DomainLoadStoreParameter.getProtectionParameter()</target>
        </trans-unit>
        <trans-unit id="7255a9277d0a58fe461f717beea2f5b37560b0d6" translate="yes" xml:space="preserve">
          <source>DomainLoadStoreParameter.getProtectionParams()</source>
          <target state="translated">DomainLoadStoreParameter.getProtectionParams()</target>
        </trans-unit>
        <trans-unit id="f04a62b6412d0ebd8b5a7b0d9674a75f56d5e272" translate="yes" xml:space="preserve">
          <source>Don't confuse the &lt;code&gt;ColorSupported&lt;/code&gt; attribute with the &lt;a href=&quot;chromaticity&quot;&gt;&lt;code&gt;Chromaticity&lt;/code&gt;&lt;/a&gt; attribute. &lt;a href=&quot;chromaticity&quot;&gt;&lt;code&gt;Chromaticity&lt;/code&gt;&lt;/a&gt; is an attribute the client can specify for a job to tell the printer whether to print a document in monochrome or color, possibly causing the printer to print a color document in monochrome. &lt;code&gt;ColorSupported&lt;/code&gt; is a printer description attribute that tells whether the printer can print in color regardless of how the client specifies to print any particular document.</source>
          <target state="translated">&lt;code&gt;ColorSupported&lt;/code&gt; 属性を&lt;a href=&quot;chromaticity&quot;&gt; &lt;code&gt;Chromaticity&lt;/code&gt; &lt;/a&gt;属性と混同しないでください。&lt;a href=&quot;chromaticity&quot;&gt; &lt;code&gt;Chromaticity&lt;/code&gt; &lt;/a&gt;は、クライアントがジョブに対して指定できる属性であり、ドキュメントをモノクロで印刷するかカラーで印刷するかをプリンターに指示します。これにより、プリンターはカラードキュメントをモノクロで印刷する可能性があります。 &lt;code&gt;ColorSupported&lt;/code&gt; は、クライアントが特定のドキュメントの印刷を指定する方法に関係なく、プリンターがカラーで印刷できるかどうかを示すプリンター記述属性です。</target>
        </trans-unit>
        <trans-unit id="f903e1ad9df296211f775a807e1aa8460a7f46c0" translate="yes" xml:space="preserve">
          <source>Don't confuse the ColorSupported attribute with the &lt;a href=&quot;chromaticity&quot;&gt;&lt;code&gt;Chromaticity&lt;/code&gt;&lt;/a&gt; attribute. &lt;a href=&quot;chromaticity&quot;&gt;&lt;code&gt;Chromaticity&lt;/code&gt;&lt;/a&gt; is an attribute the client can specify for a job to tell the printer whether to print a document in monochrome or color, possibly causing the printer to print a color document in monochrome. ColorSupported is a printer description attribute that tells whether the printer can print in color regardless of how the client specifies to print any particular document.</source>
          <target state="translated">ColorSupported属性と&lt;a href=&quot;chromaticity&quot;&gt; &lt;code&gt;Chromaticity&lt;/code&gt; &lt;/a&gt;属性を混同しないでください。&lt;a href=&quot;chromaticity&quot;&gt; &lt;code&gt;Chromaticity&lt;/code&gt; &lt;/a&gt;は、ドキュメントをモノクロまたはカラーのどちらで印刷するかをプリンタに指示するためにクライアントがジョブに指定できる属性であり、プリンタでカラードキュメントをモノクロで印刷する可能性があります。ColorSupportedは、クライアントが特定のドキュメントを印刷するように指定する方法に関係なく、プリンターがカラーで印刷できるかどうかを示すプリンターの説明属性です。</target>
        </trans-unit>
        <trans-unit id="6aeee4b947de2272ec4e3fcf8c215eca74fc02af" translate="yes" xml:space="preserve">
          <source>Don't debug graphics operations.</source>
          <target state="translated">グラフィック操作をデバッグしないでください。</target>
        </trans-unit>
        <trans-unit id="f623eb6d006fb49774a1b4caea8f718c1ee24476" translate="yes" xml:space="preserve">
          <source>DosFileAttributeView</source>
          <target state="translated">DosFileAttributeView</target>
        </trans-unit>
        <trans-unit id="5622adb0dc328c03cde2c22b7575e5cd0b607df3" translate="yes" xml:space="preserve">
          <source>DosFileAttributeView.name()</source>
          <target state="translated">DosFileAttributeView.name()</target>
        </trans-unit>
        <trans-unit id="1dc64619211b712604161e6a7c7923be7dc98de1" translate="yes" xml:space="preserve">
          <source>DosFileAttributeView.readAttributes()</source>
          <target state="translated">DosFileAttributeView.readAttributes()</target>
        </trans-unit>
        <trans-unit id="d480cdd05224f39dd35a35740399fdf3c2d8e301" translate="yes" xml:space="preserve">
          <source>DosFileAttributeView.setArchive()</source>
          <target state="translated">DosFileAttributeView.setArchive()</target>
        </trans-unit>
        <trans-unit id="5eb6e4a403ba96118569aab99fe5a60f7d8cbe89" translate="yes" xml:space="preserve">
          <source>DosFileAttributeView.setHidden()</source>
          <target state="translated">DosFileAttributeView.setHidden()</target>
        </trans-unit>
        <trans-unit id="e33afeee8537c64ef5580e6cab2cb45297db023f" translate="yes" xml:space="preserve">
          <source>DosFileAttributeView.setReadOnly()</source>
          <target state="translated">DosFileAttributeView.setReadOnly()</target>
        </trans-unit>
        <trans-unit id="5c932a198d702d567b0432f51d8d83192366ac20" translate="yes" xml:space="preserve">
          <source>DosFileAttributeView.setSystem()</source>
          <target state="translated">DosFileAttributeView.setSystem()</target>
        </trans-unit>
        <trans-unit id="7289861873c88e0661dfb6a2daa00b78a1ad36e9" translate="yes" xml:space="preserve">
          <source>DosFileAttributes</source>
          <target state="translated">DosFileAttributes</target>
        </trans-unit>
        <trans-unit id="2bd59b5c46ea8f5e76e5dcf294edeea4d572b00c" translate="yes" xml:space="preserve">
          <source>DosFileAttributes.isArchive()</source>
          <target state="translated">DosFileAttributes.isArchive()</target>
        </trans-unit>
        <trans-unit id="e3f268c2bd7319492e6195f2371ee43654987231" translate="yes" xml:space="preserve">
          <source>DosFileAttributes.isHidden()</source>
          <target state="translated">DosFileAttributes.isHidden()</target>
        </trans-unit>
        <trans-unit id="e67481ffec8b33835447e7f1fc40c7835cf1a755" translate="yes" xml:space="preserve">
          <source>DosFileAttributes.isReadOnly()</source>
          <target state="translated">DosFileAttributes.isReadOnly()</target>
        </trans-unit>
        <trans-unit id="f1c9245115bcfd49ef353efc573e1e4f3bcb63f1" translate="yes" xml:space="preserve">
          <source>DosFileAttributes.isSystem()</source>
          <target state="translated">DosFileAttributes.isSystem()</target>
        </trans-unit>
        <trans-unit id="0b941e421cbd4d23450d904cd2bd8f01c7463707" translate="yes" xml:space="preserve">
          <source>DotStar</source>
          <target state="translated">DotStar</target>
        </trans-unit>
        <trans-unit id="933b9cdd989e6b35331ff1dca0ea4a9203458806" translate="yes" xml:space="preserve">
          <source>DotStar:</source>
          <target state="translated">DotStar:</target>
        </trans-unit>
        <trans-unit id="2ce515649cd3527025514bad0b6116667cc775ae" translate="yes" xml:space="preserve">
          <source>Dotall mode can also be enabled via the embedded flag expression &lt;code&gt;(?s)&lt;/code&gt;. (The &lt;code&gt;s&lt;/code&gt; is a mnemonic for &quot;single-line&quot; mode, which is what this is called in Perl.)</source>
          <target state="translated">Dotallモードは、埋め込まれたフラグ式 &lt;code&gt;(?s)&lt;/code&gt; を介して有効にすることもできます。（ &lt;code&gt;s&lt;/code&gt; は、 &quot;single-line&quot;モードのニーモニックです。これは、Perlではこれが呼ばれています。）</target>
        </trans-unit>
        <trans-unit id="81581597044514bf54d4f97266022fc991f3915e" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="translated">Double</target>
        </trans-unit>
        <trans-unit id="5f1b1f71fab3a9a2109cf4f8b4f4a17c2077341a" translate="yes" xml:space="preserve">
          <source>Double buffers can be created either by &lt;a href=&quot;#allocate(int)&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, by &lt;a href=&quot;#wrap(double%5B%5D)&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing double array into a buffer, or by creating a &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;view&lt;/i&gt;&lt;/a&gt; of an existing byte buffer.</source>
          <target state="translated">ダブルバッファは、バッファのコンテンツにスペースを割り当てる&lt;a href=&quot;#allocate(int)&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;によって、既存のダブル配列をバッファに&lt;a href=&quot;#wrap(double%5B%5D)&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;することによって、または既存のバイトバッファの&lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;ビュー&lt;/i&gt;&lt;/a&gt;を作成する&lt;i&gt;こと&lt;/i&gt;によって作成できます。</target>
        </trans-unit>
        <trans-unit id="471b4510429fd6b0e265807ed327c1b0856d844b" translate="yes" xml:space="preserve">
          <source>Double buffers can be created either by &lt;a href=&quot;doublebuffer#allocate-int-&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, by &lt;a href=&quot;doublebuffer#wrap-double:A-&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing double array into a buffer, or by creating a &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;view&lt;/i&gt;&lt;/a&gt; of an existing byte buffer.</source>
          <target state="translated">ダブルバッファーは、バッファーのコンテンツにスペースを割り当てる&lt;a href=&quot;doublebuffer#allocate-int-&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;、既存のdouble配列をバッファーに&lt;a href=&quot;doublebuffer#wrap-double:A-&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;する、または既存のバイトバッファーの&lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;ビュー&lt;/i&gt;&lt;/a&gt;を作成する&lt;i&gt;こと&lt;/i&gt;によって作成できます。</target>
        </trans-unit>
        <trans-unit id="04083f411102214404c755c1ebc193b4639c694f" translate="yes" xml:space="preserve">
          <source>Double pixel gray low underline.</source>
          <target state="translated">ダブルピクセルグレーの低下線。</target>
        </trans-unit>
        <trans-unit id="970a6ab5e9c0093decab8ebb74105a9be2d59e3c" translate="yes" xml:space="preserve">
          <source>Double pixel solid low underline.</source>
          <target state="translated">ダブルピクセルのソリッドローアンダーライン。</target>
        </trans-unit>
        <trans-unit id="20fab79fb0cc00732e23ac02f86f59ac37a33266" translate="yes" xml:space="preserve">
          <source>Double.byteValue()</source>
          <target state="translated">Double.byteValue()</target>
        </trans-unit>
        <trans-unit id="a1bdef407a92bfbe303ec1fd85c251540f7d467b" translate="yes" xml:space="preserve">
          <source>Double.compare()</source>
          <target state="translated">Double.compare()</target>
        </trans-unit>
        <trans-unit id="7a6465dc5c79b570f2111f15a2c4f2a86b39f867" translate="yes" xml:space="preserve">
          <source>Double.compareTo()</source>
          <target state="translated">Double.compareTo()</target>
        </trans-unit>
        <trans-unit id="4278d64a07c31f844fa3523d4e74773beedfb78a" translate="yes" xml:space="preserve">
          <source>Double.doubleToLongBits()</source>
          <target state="translated">Double.doubleToLongBits()</target>
        </trans-unit>
        <trans-unit id="48c87135e57e961284084311d491f1023cee30c1" translate="yes" xml:space="preserve">
          <source>Double.doubleToRawLongBits()</source>
          <target state="translated">Double.doubleToRawLongBits()</target>
        </trans-unit>
        <trans-unit id="4a571c76c08c51213b2113ef3acd40865520c0f3" translate="yes" xml:space="preserve">
          <source>Double.doubleValue()</source>
          <target state="translated">Double.doubleValue()</target>
        </trans-unit>
        <trans-unit id="1ca2e2c8aaf6bad317cb16100c9f678645166ee3" translate="yes" xml:space="preserve">
          <source>Double.equals()</source>
          <target state="translated">Double.equals()</target>
        </trans-unit>
        <trans-unit id="24f8a80720ad118ecd4831ad950cce665e86ef3f" translate="yes" xml:space="preserve">
          <source>Double.floatValue()</source>
          <target state="translated">Double.floatValue()</target>
        </trans-unit>
        <trans-unit id="261fa86120f7e9d254ba3a90f2d90525d8020192" translate="yes" xml:space="preserve">
          <source>Double.hashCode()</source>
          <target state="translated">Double.hashCode()</target>
        </trans-unit>
        <trans-unit id="dce9b3706a160fcd3530dc5b7ebb7d52d94c69a5" translate="yes" xml:space="preserve">
          <source>Double.intValue()</source>
          <target state="translated">Double.intValue()</target>
        </trans-unit>
        <trans-unit id="c4659212f482426bc08fce5b753890aa2e8ea08f" translate="yes" xml:space="preserve">
          <source>Double.isFinite()</source>
          <target state="translated">Double.isFinite()</target>
        </trans-unit>
        <trans-unit id="84694204a05fef32a4b432f653abca5c317893ab" translate="yes" xml:space="preserve">
          <source>Double.isInfinite()</source>
          <target state="translated">Double.isInfinite()</target>
        </trans-unit>
        <trans-unit id="873de5aadbff3a74a2839d984ec6100aa497cd6a" translate="yes" xml:space="preserve">
          <source>Double.isNaN()</source>
          <target state="translated">Double.isNaN()</target>
        </trans-unit>
        <trans-unit id="c8565f7074027af28c034dc7a39ce1f7d23954d2" translate="yes" xml:space="preserve">
          <source>Double.longBitsToDouble()</source>
          <target state="translated">Double.longBitsToDouble()</target>
        </trans-unit>
        <trans-unit id="6911b69d5d25800ee8b53d6e671c878b44a9135a" translate="yes" xml:space="preserve">
          <source>Double.longValue()</source>
          <target state="translated">Double.longValue()</target>
        </trans-unit>
        <trans-unit id="4c1addbacf53923ac5263685ca22cbae70eab6ab" translate="yes" xml:space="preserve">
          <source>Double.max()</source>
          <target state="translated">Double.max()</target>
        </trans-unit>
        <trans-unit id="6384309de9a67db7853a70be2778f1db5479e5f5" translate="yes" xml:space="preserve">
          <source>Double.min()</source>
          <target state="translated">Double.min()</target>
        </trans-unit>
        <trans-unit id="88baaecda45616add207a7af2202abe5b43ec080" translate="yes" xml:space="preserve">
          <source>Double.parseDouble()</source>
          <target state="translated">Double.parseDouble()</target>
        </trans-unit>
        <trans-unit id="e85355b8741558d29291457e2e50d92fa7ae7c02" translate="yes" xml:space="preserve">
          <source>Double.shortValue()</source>
          <target state="translated">Double.shortValue()</target>
        </trans-unit>
        <trans-unit id="43a32ed46fb0db3ad2aa3b29df14f41b75a336c5" translate="yes" xml:space="preserve">
          <source>Double.sum()</source>
          <target state="translated">Double.sum()</target>
        </trans-unit>
        <trans-unit id="4c23f6a2ddfe12c06f513bfcc46e13dd5282b90c" translate="yes" xml:space="preserve">
          <source>Double.toHexString()</source>
          <target state="translated">Double.toHexString()</target>
        </trans-unit>
        <trans-unit id="f3ca12617e85372f9eed6514946cd93bae846840" translate="yes" xml:space="preserve">
          <source>Double.toString()</source>
          <target state="translated">Double.toString()</target>
        </trans-unit>
        <trans-unit id="1acd5d0eef604e64945919bd2e15f70d69af4f1e" translate="yes" xml:space="preserve">
          <source>Double.valueOf()</source>
          <target state="translated">Double.valueOf()</target>
        </trans-unit>
        <trans-unit id="3c74513f006c865ae01427c3c9199a125624e94f" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator</source>
          <target state="translated">DoubleAccumulator</target>
        </trans-unit>
        <trans-unit id="4923813deeb846347cd2d8375690aa1f59bf6ce0" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.accumulate()</source>
          <target state="translated">DoubleAccumulator.accumulate()</target>
        </trans-unit>
        <trans-unit id="8e94d286949d1bfed0262794c31fe8aa08fcd0fd" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.doubleValue()</source>
          <target state="translated">DoubleAccumulator.doubleValue()</target>
        </trans-unit>
        <trans-unit id="9f2a21492c809a66e63f7d309e5baef39c447d8e" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.floatValue()</source>
          <target state="translated">DoubleAccumulator.floatValue()</target>
        </trans-unit>
        <trans-unit id="df9a1ba5a4e103203b9b855b0b817b1ec94dc79c" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.get()</source>
          <target state="translated">DoubleAccumulator.get()</target>
        </trans-unit>
        <trans-unit id="64f5856f1ae2779fb024b3eeb22e9aa11ad2c8a2" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.getThenReset()</source>
          <target state="translated">DoubleAccumulator.getThenReset()</target>
        </trans-unit>
        <trans-unit id="733d21edbdff59d7f293965c0afb0a7740b18b8c" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.intValue()</source>
          <target state="translated">DoubleAccumulator.intValue()</target>
        </trans-unit>
        <trans-unit id="e2523cf268bbbfbc74f9f7f7ac9fefcff353a9e4" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.longValue()</source>
          <target state="translated">DoubleAccumulator.longValue()</target>
        </trans-unit>
        <trans-unit id="9097540092c9fdbd1876ebe1ae1dbb4b26a62c1c" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.reset()</source>
          <target state="translated">DoubleAccumulator.reset()</target>
        </trans-unit>
        <trans-unit id="94a4bdb17bf6b067828e1d03526ebadffb34efdc" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.toString()</source>
          <target state="translated">DoubleAccumulator.toString()</target>
        </trans-unit>
        <trans-unit id="8e2f0d1d98e72449d18ebe91d906b2f3f4d57a9b" translate="yes" xml:space="preserve">
          <source>DoubleAdder</source>
          <target state="translated">DoubleAdder</target>
        </trans-unit>
        <trans-unit id="907409b4a5e496c53f89a45e54ffd30c254c1113" translate="yes" xml:space="preserve">
          <source>DoubleAdder.add()</source>
          <target state="translated">DoubleAdder.add()</target>
        </trans-unit>
        <trans-unit id="9e8799af6965acaf0b9d649e8685527b3525ed63" translate="yes" xml:space="preserve">
          <source>DoubleAdder.doubleValue()</source>
          <target state="translated">DoubleAdder.doubleValue()</target>
        </trans-unit>
        <trans-unit id="5758e4acc740b74f1820a1cc1655834eef9e05a3" translate="yes" xml:space="preserve">
          <source>DoubleAdder.floatValue()</source>
          <target state="translated">DoubleAdder.floatValue()</target>
        </trans-unit>
        <trans-unit id="9d5526a5e41a4832883ce052486746b09e4fb64d" translate="yes" xml:space="preserve">
          <source>DoubleAdder.intValue()</source>
          <target state="translated">DoubleAdder.intValue()</target>
        </trans-unit>
        <trans-unit id="142493c040dddccba370f4cde9b20e7dbf466fc9" translate="yes" xml:space="preserve">
          <source>DoubleAdder.longValue()</source>
          <target state="translated">DoubleAdder.longValue()</target>
        </trans-unit>
        <trans-unit id="c3cf3ddb50f206795678a2bfbdf041251a8c8f83" translate="yes" xml:space="preserve">
          <source>DoubleAdder.reset()</source>
          <target state="translated">DoubleAdder.reset()</target>
        </trans-unit>
        <trans-unit id="4812637cd65c155d17f0d4e2df9496278ec3a4d1" translate="yes" xml:space="preserve">
          <source>DoubleAdder.sum()</source>
          <target state="translated">DoubleAdder.sum()</target>
        </trans-unit>
        <trans-unit id="6963d57010b167f1d8de8659cfc24c675a331c76" translate="yes" xml:space="preserve">
          <source>DoubleAdder.sumThenReset()</source>
          <target state="translated">DoubleAdder.sumThenReset()</target>
        </trans-unit>
        <trans-unit id="2110fe9402f25dc6578e74f50e79aae09a88faf8" translate="yes" xml:space="preserve">
          <source>DoubleAdder.toString()</source>
          <target state="translated">DoubleAdder.toString()</target>
        </trans-unit>
        <trans-unit id="1ca0dcb104e15c0b1249f7ee647403d29508b158" translate="yes" xml:space="preserve">
          <source>DoubleBinaryOperator</source>
          <target state="translated">DoubleBinaryOperator</target>
        </trans-unit>
        <trans-unit id="913684db31c7a6554613b3f143812fb2d4f1e00b" translate="yes" xml:space="preserve">
          <source>DoubleBinaryOperator.applyAsDouble()</source>
          <target state="translated">DoubleBinaryOperator.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="b5af989083591cc73e1414b330d66540c69780d4" translate="yes" xml:space="preserve">
          <source>DoubleBuffer</source>
          <target state="translated">DoubleBuffer</target>
        </trans-unit>
        <trans-unit id="3d7a4e834d124304441b258db237fe0c233be6f1" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.allocate()</source>
          <target state="translated">DoubleBuffer.allocate()</target>
        </trans-unit>
        <trans-unit id="c8759dd3b63108768e9d1f2734532e3fd2e03cc5" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.array()</source>
          <target state="translated">DoubleBuffer.array()</target>
        </trans-unit>
        <trans-unit id="06d4f39fd2a8164e79adc16a88df99f8556ad32d" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.arrayOffset()</source>
          <target state="translated">DoubleBuffer.arrayOffset()</target>
        </trans-unit>
        <trans-unit id="45d2cf6694ef38f19926aed3e26419c58cfd98ad" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.asReadOnlyBuffer()</source>
          <target state="translated">DoubleBuffer.asReadOnlyBuffer()</target>
        </trans-unit>
        <trans-unit id="5e203c9288b71a1402984aeb8d0eb663a7d82ad2" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.compact()</source>
          <target state="translated">DoubleBuffer.compact()</target>
        </trans-unit>
        <trans-unit id="005b8cacfb4200478e0f37db7e280427d4bfab6e" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.compareTo()</source>
          <target state="translated">DoubleBuffer.compareTo()</target>
        </trans-unit>
        <trans-unit id="9b3dbf154c8ab62dff3147448e007415ebf8e94b" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.duplicate()</source>
          <target state="translated">DoubleBuffer.duplicate()</target>
        </trans-unit>
        <trans-unit id="71bbb725c95e2e18c019ea4982ac1d0635fdd35b" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.equals()</source>
          <target state="translated">DoubleBuffer.equals()</target>
        </trans-unit>
        <trans-unit id="e36daed43a73817908cade21b2cb9e8d6b6edd47" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.get()</source>
          <target state="translated">DoubleBuffer.get()</target>
        </trans-unit>
        <trans-unit id="ea47b1d620ffccdee11a2a1ab6aedccfef648b7d" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.hasArray()</source>
          <target state="translated">DoubleBuffer.hasArray()</target>
        </trans-unit>
        <trans-unit id="ba066900eaa0ed8b3f373b35bb114196a7a52a5f" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.hashCode()</source>
          <target state="translated">DoubleBuffer.hashCode()</target>
        </trans-unit>
        <trans-unit id="0d08d5751432bdff8203ceb7d97b2c177ddab11e" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.isDirect()</source>
          <target state="translated">DoubleBuffer.isDirect()</target>
        </trans-unit>
        <trans-unit id="33235656f9fe11047efbed642984cfb4e4cb5f1d" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.order()</source>
          <target state="translated">DoubleBuffer.order()</target>
        </trans-unit>
        <trans-unit id="17b611228eba5152bd77f4b28ae6c56fb7dfe0b7" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.put()</source>
          <target state="translated">DoubleBuffer.put()</target>
        </trans-unit>
        <trans-unit id="e86767c664c27368aecbc4a4bd67faced922e2d9" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.slice()</source>
          <target state="translated">DoubleBuffer.slice()</target>
        </trans-unit>
        <trans-unit id="be60e0897bdae267b9e57771928ab54839a5c4d8" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.toString()</source>
          <target state="translated">DoubleBuffer.toString()</target>
        </trans-unit>
        <trans-unit id="2f0eeeb9b69e187c0afd1c752a6b11191e84111c" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.wrap()</source>
          <target state="translated">DoubleBuffer.wrap()</target>
        </trans-unit>
        <trans-unit id="cc79403bb79070a94ab372df6608d22f1d420477" translate="yes" xml:space="preserve">
          <source>DoubleClickListener</source>
          <target state="translated">DoubleClickListener</target>
        </trans-unit>
        <trans-unit id="0c6c7e402f35d32dd0077c4d3e4467def7ca73f1" translate="yes" xml:space="preserve">
          <source>DoubleConsumer</source>
          <target state="translated">DoubleConsumer</target>
        </trans-unit>
        <trans-unit id="ba51b6c6c6777507e8531c32932c0212f4bf249f" translate="yes" xml:space="preserve">
          <source>DoubleConsumer.accept()</source>
          <target state="translated">DoubleConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="814b6e9045add9f8435e7a598dc5388543b38474" translate="yes" xml:space="preserve">
          <source>DoubleConsumer.andThen()</source>
          <target state="translated">DoubleConsumer.andThen()</target>
        </trans-unit>
        <trans-unit id="430d3ed0ddf93f256728b2e9bce18def0b626aa9" translate="yes" xml:space="preserve">
          <source>DoubleFunction</source>
          <target state="translated">DoubleFunction</target>
        </trans-unit>
        <trans-unit id="37e0f6cd29dae6e60c6e13b967693fe8d9730d3f" translate="yes" xml:space="preserve">
          <source>DoubleFunction.apply()</source>
          <target state="translated">DoubleFunction.apply()</target>
        </trans-unit>
        <trans-unit id="02d79a48ac4c9ccd71c9226deac3a8f25fe5bd3f" translate="yes" xml:space="preserve">
          <source>DoublePredicate</source>
          <target state="translated">DoublePredicate</target>
        </trans-unit>
        <trans-unit id="d8ebd507bffed795545c3129f0a9cb36e828ff83" translate="yes" xml:space="preserve">
          <source>DoublePredicate.and()</source>
          <target state="translated">DoublePredicate.and()</target>
        </trans-unit>
        <trans-unit id="4e0bb14f2f6c1591aa05cfd518c44a47dd090cd4" translate="yes" xml:space="preserve">
          <source>DoublePredicate.negate()</source>
          <target state="translated">DoublePredicate.negate()</target>
        </trans-unit>
        <trans-unit id="31dbde5705c19b394009825c03e61698b70a033a" translate="yes" xml:space="preserve">
          <source>DoublePredicate.or()</source>
          <target state="translated">DoublePredicate.or()</target>
        </trans-unit>
        <trans-unit id="3831d05d1e7a7049eeac2ec0a5a0ec920fde157c" translate="yes" xml:space="preserve">
          <source>DoublePredicate.test()</source>
          <target state="translated">DoublePredicate.test()</target>
        </trans-unit>
        <trans-unit id="d194a8a1841c87485fc5f515f503898570fe2b82" translate="yes" xml:space="preserve">
          <source>DoubleStream</source>
          <target state="translated">DoubleStream</target>
        </trans-unit>
        <trans-unit id="92d5d6c0a0a3fae9b0b0f40221f72b7952bb5e80" translate="yes" xml:space="preserve">
          <source>DoubleStream.Builder</source>
          <target state="translated">DoubleStream.Builder</target>
        </trans-unit>
        <trans-unit id="e0f7f84ba01c8785806a5b5bbf0ba64109c8fdde" translate="yes" xml:space="preserve">
          <source>DoubleStream.Builder.accept()</source>
          <target state="translated">DoubleStream.Builder.accept()</target>
        </trans-unit>
        <trans-unit id="a40b48cb1943b58dc661a85ca45d4e1ca94397ba" translate="yes" xml:space="preserve">
          <source>DoubleStream.Builder.add()</source>
          <target state="translated">DoubleStream.Builder.add()</target>
        </trans-unit>
        <trans-unit id="942c9aa1ce23dc401c83ab7d7c116bbb23952d4c" translate="yes" xml:space="preserve">
          <source>DoubleStream.Builder.build()</source>
          <target state="translated">DoubleStream.Builder.build()</target>
        </trans-unit>
        <trans-unit id="3c0a05c6d718743c031112de7d583c1e9bf1aa09" translate="yes" xml:space="preserve">
          <source>DoubleStream.allMatch()</source>
          <target state="translated">DoubleStream.allMatch()</target>
        </trans-unit>
        <trans-unit id="6f6c246f1f1d6127d7f64fb43013cbfa5b46a46c" translate="yes" xml:space="preserve">
          <source>DoubleStream.anyMatch()</source>
          <target state="translated">DoubleStream.anyMatch()</target>
        </trans-unit>
        <trans-unit id="9ac3b12b54f092c132d9752dd1b99a11a7a82eeb" translate="yes" xml:space="preserve">
          <source>DoubleStream.average()</source>
          <target state="translated">DoubleStream.average()</target>
        </trans-unit>
        <trans-unit id="8d4a9276ec8472b367d0074624b99444f502f30f" translate="yes" xml:space="preserve">
          <source>DoubleStream.boxed()</source>
          <target state="translated">DoubleStream.boxed()</target>
        </trans-unit>
        <trans-unit id="9c04b079091dfddc603a15c3a2f8fb58d2f508ec" translate="yes" xml:space="preserve">
          <source>DoubleStream.builder()</source>
          <target state="translated">DoubleStream.builder()</target>
        </trans-unit>
        <trans-unit id="e5e510278104ba8544458c4519a08c2573224a7b" translate="yes" xml:space="preserve">
          <source>DoubleStream.collect()</source>
          <target state="translated">DoubleStream.collect()</target>
        </trans-unit>
        <trans-unit id="98e7d511189018ebd0b2e13aaf32d7486d08fd6f" translate="yes" xml:space="preserve">
          <source>DoubleStream.concat()</source>
          <target state="translated">DoubleStream.concat()</target>
        </trans-unit>
        <trans-unit id="4890af299a0160a645f5c88d0fbf0f83cf59400c" translate="yes" xml:space="preserve">
          <source>DoubleStream.count()</source>
          <target state="translated">DoubleStream.count()</target>
        </trans-unit>
        <trans-unit id="2d8d2486cc746b41d79d2ce4864dc8aa2eda6472" translate="yes" xml:space="preserve">
          <source>DoubleStream.distinct()</source>
          <target state="translated">DoubleStream.distinct()</target>
        </trans-unit>
        <trans-unit id="9b2adcc7ebe172dc1614fe37d85406cfeeff0352" translate="yes" xml:space="preserve">
          <source>DoubleStream.empty()</source>
          <target state="translated">DoubleStream.empty()</target>
        </trans-unit>
        <trans-unit id="29c5d558354a42815c0e7882c6f4f373b18aacfc" translate="yes" xml:space="preserve">
          <source>DoubleStream.filter()</source>
          <target state="translated">DoubleStream.filter()</target>
        </trans-unit>
        <trans-unit id="c723abe220e435262a0a2915537f5e5a79afb793" translate="yes" xml:space="preserve">
          <source>DoubleStream.findAny()</source>
          <target state="translated">DoubleStream.findAny()</target>
        </trans-unit>
        <trans-unit id="1667a63bc92ca3095450ff4091cc6b3eeccd47c2" translate="yes" xml:space="preserve">
          <source>DoubleStream.findFirst()</source>
          <target state="translated">DoubleStream.findFirst()</target>
        </trans-unit>
        <trans-unit id="69180ea2e365c283876162118041e282459e59a1" translate="yes" xml:space="preserve">
          <source>DoubleStream.flatMap()</source>
          <target state="translated">DoubleStream.flatMap()</target>
        </trans-unit>
        <trans-unit id="fa0a853385b02401e5fc9314c6c8e3976293632c" translate="yes" xml:space="preserve">
          <source>DoubleStream.forEach()</source>
          <target state="translated">DoubleStream.forEach()</target>
        </trans-unit>
        <trans-unit id="ee9ea3b82bd25138fbfc9530cf4de9e1b6fcb593" translate="yes" xml:space="preserve">
          <source>DoubleStream.forEachOrdered()</source>
          <target state="translated">DoubleStream.forEachOrdered()</target>
        </trans-unit>
        <trans-unit id="b33dbcc58d61e3346248e35759e4b6c968a6e798" translate="yes" xml:space="preserve">
          <source>DoubleStream.generate()</source>
          <target state="translated">DoubleStream.generate()</target>
        </trans-unit>
        <trans-unit id="59b75b22be5e7bc7a7484417b45d6c53a121e559" translate="yes" xml:space="preserve">
          <source>DoubleStream.iterate()</source>
          <target state="translated">DoubleStream.iterate()</target>
        </trans-unit>
        <trans-unit id="61f83e114c613791d2c399efc4aadc88239ecb8e" translate="yes" xml:space="preserve">
          <source>DoubleStream.iterator()</source>
          <target state="translated">DoubleStream.iterator()</target>
        </trans-unit>
        <trans-unit id="13361b8ca873639804330351fd0f70d531bbcfe8" translate="yes" xml:space="preserve">
          <source>DoubleStream.limit()</source>
          <target state="translated">DoubleStream.limit()</target>
        </trans-unit>
        <trans-unit id="b1608ce21096d935302d6ed179b1969c0a0458eb" translate="yes" xml:space="preserve">
          <source>DoubleStream.map()</source>
          <target state="translated">DoubleStream.map()</target>
        </trans-unit>
        <trans-unit id="9a2984416c24e437433e4fc7df0f8c2242f3cb09" translate="yes" xml:space="preserve">
          <source>DoubleStream.mapToInt()</source>
          <target state="translated">DoubleStream.mapToInt()</target>
        </trans-unit>
        <trans-unit id="fcb6a01a61a6e17b14c86ba04382fb46ea1dce6e" translate="yes" xml:space="preserve">
          <source>DoubleStream.mapToLong()</source>
          <target state="translated">DoubleStream.mapToLong()</target>
        </trans-unit>
        <trans-unit id="354c79c5b9d2fd8863d5261776bff3d5b153fedc" translate="yes" xml:space="preserve">
          <source>DoubleStream.mapToObj()</source>
          <target state="translated">DoubleStream.mapToObj()</target>
        </trans-unit>
        <trans-unit id="10435a09e12946c07c8f2659c9f45c41db315077" translate="yes" xml:space="preserve">
          <source>DoubleStream.max()</source>
          <target state="translated">DoubleStream.max()</target>
        </trans-unit>
        <trans-unit id="73ad2d16bb3340cf6ac5bd61d0134cb4c7e9ba8a" translate="yes" xml:space="preserve">
          <source>DoubleStream.min()</source>
          <target state="translated">DoubleStream.min()</target>
        </trans-unit>
        <trans-unit id="3607d6ad8e1333cb80fcc61521d1821d028a0f65" translate="yes" xml:space="preserve">
          <source>DoubleStream.noneMatch()</source>
          <target state="translated">DoubleStream.noneMatch()</target>
        </trans-unit>
        <trans-unit id="32571f821b4f1ef643f89b3adb34b0eabfd24ceb" translate="yes" xml:space="preserve">
          <source>DoubleStream.of()</source>
          <target state="translated">DoubleStream.of()</target>
        </trans-unit>
        <trans-unit id="7fc75e6de2d8afd545d9e1ed5054146a75e1fa8b" translate="yes" xml:space="preserve">
          <source>DoubleStream.parallel()</source>
          <target state="translated">DoubleStream.parallel()</target>
        </trans-unit>
        <trans-unit id="3a3ff26342a5035086bff0bcdaf3ceffdfa6f6a2" translate="yes" xml:space="preserve">
          <source>DoubleStream.peek()</source>
          <target state="translated">DoubleStream.peek()</target>
        </trans-unit>
        <trans-unit id="7e9bd0d1c82727e23affad716f34cbb9ad3676b2" translate="yes" xml:space="preserve">
          <source>DoubleStream.reduce()</source>
          <target state="translated">DoubleStream.reduce()</target>
        </trans-unit>
        <trans-unit id="465811de0bd7e1346de947d1a98d97366615c581" translate="yes" xml:space="preserve">
          <source>DoubleStream.sequential()</source>
          <target state="translated">DoubleStream.sequential()</target>
        </trans-unit>
        <trans-unit id="e08f09bc8d42c7f33c030d2a51b0914fe4dda01c" translate="yes" xml:space="preserve">
          <source>DoubleStream.skip()</source>
          <target state="translated">DoubleStream.skip()</target>
        </trans-unit>
        <trans-unit id="0299b97a4e5320933a51c0eb2d38981ae9c74141" translate="yes" xml:space="preserve">
          <source>DoubleStream.sorted()</source>
          <target state="translated">DoubleStream.sorted()</target>
        </trans-unit>
        <trans-unit id="5f47d2b1f2a9fb5f25f82f1c36d9eff69a6a02f7" translate="yes" xml:space="preserve">
          <source>DoubleStream.spliterator()</source>
          <target state="translated">DoubleStream.spliterator()</target>
        </trans-unit>
        <trans-unit id="2b7f4777996cf701db43c8dd0bba0c178b21c89a" translate="yes" xml:space="preserve">
          <source>DoubleStream.sum()</source>
          <target state="translated">DoubleStream.sum()</target>
        </trans-unit>
        <trans-unit id="32371d44fa192af4db1beeaf6b07724f3dee1bbe" translate="yes" xml:space="preserve">
          <source>DoubleStream.summaryStatistics()</source>
          <target state="translated">DoubleStream.summaryStatistics()</target>
        </trans-unit>
        <trans-unit id="b82c9d43db9c6ca497abe8b79304c2697e355890" translate="yes" xml:space="preserve">
          <source>DoubleStream.toArray()</source>
          <target state="translated">DoubleStream.toArray()</target>
        </trans-unit>
        <trans-unit id="7dab5923a94c0589ac7475aec25970cf67d124c2" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics</source>
          <target state="translated">DoubleSummaryStatistics</target>
        </trans-unit>
        <trans-unit id="338be86fedb3e7e75f237c85db663dd33225fb82" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.accept()</source>
          <target state="translated">DoubleSummaryStatistics.accept()</target>
        </trans-unit>
        <trans-unit id="4f6e3d4d65aa57ae072a769c6729757eb10844db" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.combine()</source>
          <target state="translated">DoubleSummaryStatistics.combine()</target>
        </trans-unit>
        <trans-unit id="1899ba9ed77b014529574a455deb54ad93aa7853" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getAverage()</source>
          <target state="translated">DoubleSummaryStatistics.getAverage()</target>
        </trans-unit>
        <trans-unit id="510a920db10155fcbc9e7fda7501acdf5ac24b92" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getCount()</source>
          <target state="translated">DoubleSummaryStatistics.getCount()</target>
        </trans-unit>
        <trans-unit id="a714e4ebfaf37c4c07216ac3a018689fb85396a4" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getMax()</source>
          <target state="translated">DoubleSummaryStatistics.getMax()</target>
        </trans-unit>
        <trans-unit id="0d6a6ad97fbe07d76a010f46c2b424b63c88b045" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getMin()</source>
          <target state="translated">DoubleSummaryStatistics.getMin()</target>
        </trans-unit>
        <trans-unit id="afcd83df2f6cd4eca266ea2afa6647f5f3c71699" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getSum()</source>
          <target state="translated">DoubleSummaryStatistics.getSum()</target>
        </trans-unit>
        <trans-unit id="646a70972ca082c518bca932c96535819d629106" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.toString()</source>
          <target state="translated">DoubleSummaryStatistics.toString()</target>
        </trans-unit>
        <trans-unit id="528a21f044bb846434c701b5d9feffc8beed49ed" translate="yes" xml:space="preserve">
          <source>DoubleSupplier</source>
          <target state="translated">DoubleSupplier</target>
        </trans-unit>
        <trans-unit id="ed377b0d1122d9418827e82671473c1372164177" translate="yes" xml:space="preserve">
          <source>DoubleSupplier.getAsDouble()</source>
          <target state="translated">DoubleSupplier.getAsDouble()</target>
        </trans-unit>
        <trans-unit id="0f24012c09999d4eb07dd33fd48b2e39bf22d65e" translate="yes" xml:space="preserve">
          <source>DoubleToIntFunction</source>
          <target state="translated">DoubleToIntFunction</target>
        </trans-unit>
        <trans-unit id="7d2ed9699057c1f9c13e504e4779536fa44d1770" translate="yes" xml:space="preserve">
          <source>DoubleToIntFunction.applyAsInt()</source>
          <target state="translated">DoubleToIntFunction.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="ea24ed983005ef2c44289f69d8352c8050658ad1" translate="yes" xml:space="preserve">
          <source>DoubleToLongFunction</source>
          <target state="translated">DoubleToLongFunction</target>
        </trans-unit>
        <trans-unit id="a083addc7768bdb2808b637dbb44f82aa0cc4ac7" translate="yes" xml:space="preserve">
          <source>DoubleToLongFunction.applyAsLong()</source>
          <target state="translated">DoubleToLongFunction.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="39432ca436cbaa15b5b576f20b33b2a3cbd6174e" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator</source>
          <target state="translated">DoubleUnaryOperator</target>
        </trans-unit>
        <trans-unit id="5a4adcb9c50257f6a018ae22fb36209f50688fbb" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator.andThen()</source>
          <target state="translated">DoubleUnaryOperator.andThen()</target>
        </trans-unit>
        <trans-unit id="173bd7bbaf1b9e6b4b6c6faa529fa2638bc697ba" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator.applyAsDouble()</source>
          <target state="translated">DoubleUnaryOperator.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="754bcda204e3be18d6194aa5bf3096b71202370e" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator.compose()</source>
          <target state="translated">DoubleUnaryOperator.compose()</target>
        </trans-unit>
        <trans-unit id="5ee39d0585da9927ad895c8a77288133c0a5233f" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator.identity()</source>
          <target state="translated">DoubleUnaryOperator.identity()</target>
        </trans-unit>
        <trans-unit id="126f3fb9c62f7dac514e41acbfdeb939833f7b5c" translate="yes" xml:space="preserve">
          <source>Doubly-linked list implementation of the &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;Deque&lt;/code&gt; interfaces.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; インターフェイスと &lt;code&gt;Deque&lt;/code&gt; インターフェイスの二重リンクリストの実装。</target>
        </trans-unit>
        <trans-unit id="d9709afd00d9e37c56908202de053e0eab2bab79" translate="yes" xml:space="preserve">
          <source>Doubly-linked list implementation of the &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;Deque&lt;/code&gt; interfaces. Implements all optional list operations, and permits all elements (including &lt;code&gt;null&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; インターフェイスと &lt;code&gt;Deque&lt;/code&gt; インターフェイスの二重リンクリストの実装。オプションのリスト操作をすべて実装し、すべての要素（ &lt;code&gt;null&lt;/code&gt; を含む）を許可します。</target>
        </trans-unit>
        <trans-unit id="970666664f0682081c6db36368e177996ff5a0dd" translate="yes" xml:space="preserve">
          <source>Drag and Drop is a direct manipulation gesture found in many Graphical User Interface systems that provides a mechanism to transfer information between two entities logically associated with presentation elements in the GUI.</source>
          <target state="translated">ドラッグ&amp;ドロップは、多くのグラフィカル・ユーザー・インターフェース・システムで見られる直接操作のジェスチャーで、GUI内のプレゼンテーション要素に論理的に関連付けられた2つのエンティティ間で情報を転送するメカニズムを提供します。</target>
        </trans-unit>
        <trans-unit id="ffaf880ee9646d44e8c9639ac94d14f31860d1cf" translate="yes" xml:space="preserve">
          <source>Drag and Drop is a direct manipulation gesture found in many Graphical User Interface systems that provides a mechanism to transfer information between two entities logically associated with presentation elements in the GUI. Normally driven by a physical gesture of a human user using an appropriate input device, Drag and Drop provides both a mechanism to enable continuous feedback regarding the possible outcome of any subsequent data transfer to the user during navigation over the presentation elements in the GUI, and the facilities to provide for any subsequent data negotiation and transfer.</source>
          <target state="translated">ドラッグ&amp;ドロップは、GUI内のプレゼンテーション要素に論理的に関連付けられた2つのエンティティ間で情報を転送するメカニズムを提供する多くのグラフィカル・ユーザー・インターフェース・システムに見られる直接操作ジェスチャーです。通常、適切な入力デバイスを使用して人間のユーザが物理的なジェスチャーを行うことによって駆動されますが、ドラッグ・アンド・ドロップは、GUI内のプレゼンテーション要素をナビゲーションしている間に、その後のデータ転送の結果がユーザに継続的にフィードバックされることを可能にするメカニズムと、その後のデータのネゴシエーションと転送を可能にする機能の両方を提供します。</target>
        </trans-unit>
        <trans-unit id="76ef4bda9fa5a3722a737898506f1b63ead2f56d" translate="yes" xml:space="preserve">
          <source>Drag gesture recognizers created with &lt;a href=&quot;dragsource#createDefaultDragGestureRecognizer(java.awt.Component,int,java.awt.dnd.DragGestureListener)&quot;&gt;&lt;code&gt;DragSource.createDefaultDragGestureRecognizer(java.awt.Component, int, java.awt.dnd.DragGestureListener)&lt;/code&gt;&lt;/a&gt; follow this convention.</source>
          <target state="translated">&lt;a href=&quot;dragsource#createDefaultDragGestureRecognizer(java.awt.Component,int,java.awt.dnd.DragGestureListener)&quot;&gt; &lt;code&gt;DragSource.createDefaultDragGestureRecognizer(java.awt.Component, int, java.awt.dnd.DragGestureListener)&lt;/code&gt; &lt;/a&gt;作成されたドラッグジェスチャレコグナイザーは、この規則に従います。</target>
        </trans-unit>
        <trans-unit id="78a9ce90e1a72abb920d42217869d9954a64f055" translate="yes" xml:space="preserve">
          <source>DragController</source>
          <target state="translated">DragController</target>
        </trans-unit>
        <trans-unit id="4a069f3a56085d2ddb3ee53e1d2819a6fc37070a" translate="yes" xml:space="preserve">
          <source>DragGestureEvent</source>
          <target state="translated">DragGestureEvent</target>
        </trans-unit>
        <trans-unit id="c2c69e2fe400932ec9e3b8055b86d7cfae22d75d" translate="yes" xml:space="preserve">
          <source>DragGestureListener</source>
          <target state="translated">DragGestureListener</target>
        </trans-unit>
        <trans-unit id="33f22e68fe2b1687e8680582f9edeaf31d9da6cb" translate="yes" xml:space="preserve">
          <source>DragGestureRecognizer</source>
          <target state="translated">DragGestureRecognizer</target>
        </trans-unit>
        <trans-unit id="fb419315856c90666fdef3b2b604e40267f0d6cd" translate="yes" xml:space="preserve">
          <source>DragSource</source>
          <target state="translated">DragSource</target>
        </trans-unit>
        <trans-unit id="3146d4f0d74277233fb8255e702a1733253d5e13" translate="yes" xml:space="preserve">
          <source>DragSourceAdapter</source>
          <target state="translated">DragSourceAdapter</target>
        </trans-unit>
        <trans-unit id="6a2ea01aab9e06f57cfb694acde83606abec66ab" translate="yes" xml:space="preserve">
          <source>DragSourceContext</source>
          <target state="translated">DragSourceContext</target>
        </trans-unit>
        <trans-unit id="3e36de2c8929b60cf7d40f24bd7a1b04f6be994c" translate="yes" xml:space="preserve">
          <source>DragSourceDragEvent</source>
          <target state="translated">DragSourceDragEvent</target>
        </trans-unit>
        <trans-unit id="8f6e45a6f5205b364c8211bfcc23b6fb6b887a8e" translate="yes" xml:space="preserve">
          <source>DragSourceDropEvent</source>
          <target state="translated">DragSourceDropEvent</target>
        </trans-unit>
        <trans-unit id="e9d989887bc2ff21915ef6d364e23cb96622d147" translate="yes" xml:space="preserve">
          <source>DragSourceEvent</source>
          <target state="translated">DragSourceEvent</target>
        </trans-unit>
        <trans-unit id="dd31766ae77950f8382b86962b51f185c738c5fa" translate="yes" xml:space="preserve">
          <source>DragSourceListener</source>
          <target state="translated">DragSourceListener</target>
        </trans-unit>
        <trans-unit id="94dcee91857688ad6631993beee2d2f00208fa39" translate="yes" xml:space="preserve">
          <source>DragSourceMotionListener</source>
          <target state="translated">DragSourceMotionListener</target>
        </trans-unit>
        <trans-unit id="b5f5d1cbecc589c4ec577e9ffa50a5654a1b9b55" translate="yes" xml:space="preserve">
          <source>Dragging</source>
          <target state="translated">Dragging</target>
        </trans-unit>
        <trans-unit id="8e9122c5ccb5a38c18ded8a347be799080116989" translate="yes" xml:space="preserve">
          <source>Drain any buffered data in ObjectOutputStream.</source>
          <target state="translated">ObjectOutputStream内のバッファリングされたデータをドレインします。</target>
        </trans-unit>
        <trans-unit id="85bc07ab2148597e58cde588340a55d4100fd913" translate="yes" xml:space="preserve">
          <source>Drain any buffered data in ObjectOutputStream. Similar to flush but does not propagate the flush to the underlying stream.</source>
          <target state="translated">ObjectOutputStream内のバッファリングされたデータをすべてドレインします。flushと似ていますが、フラッシュは基になるストリームには伝搬しません。</target>
        </trans-unit>
        <trans-unit id="bb3cfd24181783fccd4b8fb62c5b8877921805f4" translate="yes" xml:space="preserve">
          <source>Drains queued data from the line by continuing data I/O until the data line's internal buffer has been emptied.</source>
          <target state="translated">データラインの内部バッファが空になるまでデータI/Oを継続することで、ラインからキューに入っていたデータを削除します。</target>
        </trans-unit>
        <trans-unit id="0f09410a3fe6ab85f1ee56e1e295692105ab4e1a" translate="yes" xml:space="preserve">
          <source>Drains queued data from the line by continuing data I/O until the data line's internal buffer has been emptied. This method blocks until the draining is complete. Because this is a blocking method, it should be used with care. If &lt;code&gt;drain()&lt;/code&gt; is invoked on a stopped line that has data in its queue, the method will block until the line is running and the data queue becomes empty. If &lt;code&gt;drain()&lt;/code&gt; is invoked by one thread, and another continues to fill the data queue, the operation will not complete. This method always returns when the data line is closed.</source>
          <target state="translated">データラインの内部バッファが空になるまでデータI / Oを継続することにより、キューに入れられたデータをラインから排出します。このメソッドは、排出が完了するまでブロックします。これはブロッキング方法であるため、注意して使用する必要があります。場合 &lt;code&gt;drain()&lt;/code&gt; そのキュー内のデータを有している停止線上に呼び出される行が実行され、データ待ち行列が空になるまで、方法はブロックされます。場合は &lt;code&gt;drain()&lt;/code&gt; 一つのスレッドによって呼び出され、別のデータキューを埋めるために続けている、操作は完了しません。このメソッドは、データ行が閉じられると常に戻ります。</target>
        </trans-unit>
        <trans-unit id="87f821ad9088cce666d93ed9cdac16693909c17c" translate="yes" xml:space="preserve">
          <source>Draw a string with the graphics &lt;code&gt;g&lt;/code&gt; at location (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) just like &lt;code&gt;g.drawString&lt;/code&gt; would.</source>
          <target state="translated">&lt;code&gt;g.drawString&lt;/code&gt; と同じように、位置（ &lt;code&gt;x&lt;/code&gt; 、 &lt;code&gt;y&lt;/code&gt; ）にグラフィックス &lt;code&gt;g&lt;/code&gt; を使用して文字列を描画します。</target>
        </trans-unit>
        <trans-unit id="09d9b75f578c0b461b6ef2ed70b83d8d5f08dc00" translate="yes" xml:space="preserve">
          <source>Draw a string with the graphics &lt;code&gt;g&lt;/code&gt; at location (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) just like &lt;code&gt;g.drawString&lt;/code&gt; would. The character at index &lt;code&gt;underlinedIndex&lt;/code&gt; in text will be underlined. If &lt;code&gt;index&lt;/code&gt; is beyond the bounds of &lt;code&gt;text&lt;/code&gt; (including &amp;lt; 0), nothing will be underlined.</source>
          <target state="translated">&lt;code&gt;g.drawString&lt;/code&gt; と同じように、位置（ &lt;code&gt;x&lt;/code&gt; 、 &lt;code&gt;y&lt;/code&gt; ）にグラフィックス &lt;code&gt;g&lt;/code&gt; を使用して文字列を描画します。テキスト内のインデックス &lt;code&gt;underlinedIndex&lt;/code&gt; の文字には下線が引かれます。 &lt;code&gt;index&lt;/code&gt; が &lt;code&gt;text&lt;/code&gt; の境界を超えている場合（&amp;lt;0を含む）、下線は引かれません。</target>
        </trans-unit>
        <trans-unit id="bf914af2efcd2c4a45212445a8bbc6bb4b454c81" translate="yes" xml:space="preserve">
          <source>Draw a string with the graphics &lt;code&gt;g&lt;/code&gt; at location (x,y) just like &lt;code&gt;g.drawString&lt;/code&gt; would.</source>
          <target state="translated">&lt;code&gt;g.drawString&lt;/code&gt; と同じように、位置（x、y）にグラフィックス &lt;code&gt;g&lt;/code&gt; を使用して文字列を描画します。</target>
        </trans-unit>
        <trans-unit id="fc1f4542d36e29642f5708cd63e016f171d526bc" translate="yes" xml:space="preserve">
          <source>Draw a string with the graphics &lt;code&gt;g&lt;/code&gt; at location (x,y) just like &lt;code&gt;g.drawString&lt;/code&gt; would. The first occurrence of &lt;code&gt;underlineChar&lt;/code&gt; in text will be underlined. The matching algorithm is not case sensitive.</source>
          <target state="translated">&lt;code&gt;g.drawString&lt;/code&gt; と同じように、位置（x、y）にグラフィックス &lt;code&gt;g&lt;/code&gt; を使用して文字列を描画します。テキスト内で最初に出現する &lt;code&gt;underlineChar&lt;/code&gt; には下線が引かれます。マッチングアルゴリズムでは大文字と小文字は区別されません。</target>
        </trans-unit>
        <trans-unit id="d6a65d494817282835f69d2929594bd0aa1a06b9" translate="yes" xml:space="preserve">
          <source>Draw the icon at the specified location.</source>
          <target state="translated">指定した位置にアイコンを描画します。</target>
        </trans-unit>
        <trans-unit id="1a4913a695e8fce6a410ed8610991c5735b30fb2" translate="yes" xml:space="preserve">
          <source>Draw the icon at the specified location. Icon implementations may use the Component argument to get properties useful for painting, e.g. the foreground or background color.</source>
          <target state="translated">指定した場所にアイコンを描画します。アイコンの実装では、Component 引数を使用して、前景や背景色などの描画に便利なプロパティを取得することができます。</target>
        </trans-unit>
        <trans-unit id="b95caa13f2f237f42e9b5a77b5196372b545103c" translate="yes" xml:space="preserve">
          <source>Drawing a selection range corresponding to a substring in the source text. The selected area may not be visually contiguous:</source>
          <target state="translated">原文の部分文字列に対応する選択範囲を描画する。選択範囲は視覚的に連続していなくてもよい。</target>
        </trans-unit>
        <trans-unit id="6fc565185dc5d7c44a2ac9c612fd8358b5f6134e" translate="yes" xml:space="preserve">
          <source>Drawing a visually contiguous selection range. The selection range may correspond to more than one substring in the source text. The ranges of the corresponding source text substrings can be obtained with &lt;code&gt;getLogicalRangesForVisualSelection()&lt;/code&gt;:</source>
          <target state="translated">視覚的に連続した選択範囲を描画します。選択範囲は、ソーステキスト内の複数の部分文字列に対応する場合があります。対応するソーステキストの部分文字列の範囲は、 &lt;code&gt;getLogicalRangesForVisualSelection()&lt;/code&gt; で取得できます。</target>
        </trans-unit>
        <trans-unit id="95071c0d98ca484b091ea9c10c0675c6cf4912b3" translate="yes" xml:space="preserve">
          <source>Draws a 3-D highlighted outline of the specified rectangle.</source>
          <target state="translated">指定した矩形の3Dハイライトされた輪郭を描画します。</target>
        </trans-unit>
        <trans-unit id="3e369bf318906ed43ed4f74cb99b66a149b976ff" translate="yes" xml:space="preserve">
          <source>Draws a 3-D highlighted outline of the specified rectangle. The edges of the rectangle are highlighted so that they appear to be beveled and lit from the upper left corner.</source>
          <target state="translated">指定した矩形の3Dハイライトされたアウトラインを描画します。矩形の縁は、左上隅からベベルがかかって光っているように見えるようにハイライトされます。</target>
        </trans-unit>
        <trans-unit id="234897383235f25e64f30723ca0c04d6f2983909" translate="yes" xml:space="preserve">
          <source>Draws a bezel.</source>
          <target state="translated">ベゼルを描く。</target>
        </trans-unit>
        <trans-unit id="54559b1589edcc7dc12f1c90a1e03397ce2833c9" translate="yes" xml:space="preserve">
          <source>Draws a bit of special highlighting on the progress bar and bouncing box.</source>
          <target state="translated">プログレスバーとバウンシングボックスに少し特殊なハイライトを描画します。</target>
        </trans-unit>
        <trans-unit id="bc90df1f686c95900f0f65a5acb1542dbedfde81" translate="yes" xml:space="preserve">
          <source>Draws a bit of special highlighting on the progress bar and bouncing box. The core painting is deferred to the BasicProgressBar's &lt;code&gt;paintIndeterminate&lt;/code&gt; method.</source>
          <target state="translated">プログレスバーとバウンスボックスに少し特別なハイライトを描画します。コアペインティングは、BasicProgressBarの &lt;code&gt;paintIndeterminate&lt;/code&gt; メソッドに延期されます。</target>
        </trans-unit>
        <trans-unit id="07500c2b5f8af40b34df7c928ca22fe503ae06de" translate="yes" xml:space="preserve">
          <source>Draws a bit of special highlighting on the progress bar.</source>
          <target state="translated">プログレスバーに少し特殊なハイライトを描画します。</target>
        </trans-unit>
        <trans-unit id="c7dd3f799f4c92ab96c9bc8f72a5e957fe1c888b" translate="yes" xml:space="preserve">
          <source>Draws a bit of special highlighting on the progress bar. The core painting is deferred to the BasicProgressBar's &lt;code&gt;paintDeterminate&lt;/code&gt; method.</source>
          <target state="translated">プログレスバーに特別なハイライトを少し描画します。コアペインティングは、BasicProgressBarの &lt;code&gt;paintDeterminate&lt;/code&gt; メソッドに延期されます。</target>
        </trans-unit>
        <trans-unit id="c4f526ee0fae5ff30584f87f76c8734518731aaa" translate="yes" xml:space="preserve">
          <source>Draws a border around a button.</source>
          <target state="translated">ボタンの周囲に境界線を描画します。</target>
        </trans-unit>
        <trans-unit id="5a7efb400ac61cdda183de8f794a8d4d2e3dc5ed" translate="yes" xml:space="preserve">
          <source>Draws a closed polygon defined by arrays of</source>
          <target state="translated">の配列で定義された閉じた多角形を描画します.</target>
        </trans-unit>
        <trans-unit id="a41851454264c88591d4a334cc62c97c885b0e76" translate="yes" xml:space="preserve">
          <source>Draws a groove.</source>
          <target state="translated">溝を描く。</target>
        </trans-unit>
        <trans-unit id="ba8d428dabfae2f48be8c1920caf12d2675ae27d" translate="yes" xml:space="preserve">
          <source>Draws a horizontal dashed line.</source>
          <target state="translated">水平方向の破線を描画します。</target>
        </trans-unit>
        <trans-unit id="a3f726aec2ca29b609c2a11497385357448d3ddf" translate="yes" xml:space="preserve">
          <source>Draws a horizontal dashed line. It is assumed &lt;code&gt;x1&lt;/code&gt; &amp;lt;= &lt;code&gt;x2&lt;/code&gt;. If &lt;code&gt;x1&lt;/code&gt; is greater than &lt;code&gt;x2&lt;/code&gt;, the method draws nothing.</source>
          <target state="translated">水平の破線を描画します。 &lt;code&gt;x1&lt;/code&gt; &amp;lt;= &lt;code&gt;x2&lt;/code&gt; と想定されます。 &lt;code&gt;x1&lt;/code&gt; が &lt;code&gt;x2&lt;/code&gt; より大きい場合、メソッドは何も描画しません。</target>
        </trans-unit>
        <trans-unit id="fc1dd82aab0bd733646557fe5432a9c5e7599a78" translate="yes" xml:space="preserve">
          <source>Draws a line between the two end points.</source>
          <target state="translated">2つの端点の間に線を引きます。</target>
        </trans-unit>
        <trans-unit id="b33e9b10a9e8d22431815efba6c6ccc2de04ba71" translate="yes" xml:space="preserve">
          <source>Draws a line, using the current color, between the points &lt;code&gt;(x1,&amp;nbsp;y1)&lt;/code&gt; and &lt;code&gt;(x2,&amp;nbsp;y2)&lt;/code&gt; in this graphics context's coordinate system.</source>
          <target state="translated">このグラフィックスコンテキストの座標系の点 &lt;code&gt;(x1,&amp;nbsp;y1)&lt;/code&gt; と &lt;code&gt;(x2,&amp;nbsp;y2)&lt;/code&gt; 間に、現在の色を使用して線を描画します。</target>
        </trans-unit>
        <trans-unit id="257981447d4ca34a396d1b046c50f3479d698b50" translate="yes" xml:space="preserve">
          <source>Draws a lowered bezel.</source>
          <target state="translated">下げられたベゼルを描画します。</target>
        </trans-unit>
        <trans-unit id="a322c1a301711f870315cf2fb1efaf446199b2d1" translate="yes" xml:space="preserve">
          <source>Draws a sequence of connected lines defined by arrays of</source>
          <target state="translated">の配列で定義された接続された線のシーケンスを描画します.</target>
        </trans-unit>
        <trans-unit id="cc5495539b1521c1d8e934838df1d5da74723874" translate="yes" xml:space="preserve">
          <source>Draws a vertical dashed line.</source>
          <target state="translated">縦の破線を描画します。</target>
        </trans-unit>
        <trans-unit id="25e2f732d2d1f53250aa93d908bf2888d16a78a5" translate="yes" xml:space="preserve">
          <source>Draws a vertical dashed line. It is assumed &lt;code&gt;y1&lt;/code&gt; &amp;lt;= &lt;code&gt;y2&lt;/code&gt;. If &lt;code&gt;y1&lt;/code&gt; is greater than &lt;code&gt;y2&lt;/code&gt;, the method draws nothing.</source>
          <target state="translated">垂直の破線を描画します。 &lt;code&gt;y1&lt;/code&gt; &amp;lt;= &lt;code&gt;y2&lt;/code&gt; と想定されます。 &lt;code&gt;y1&lt;/code&gt; が &lt;code&gt;y2&lt;/code&gt; より大きい場合、メソッドは何も描画しません。</target>
        </trans-unit>
        <trans-unit id="43c68851897cea741a21eee76659a5e69e019146" translate="yes" xml:space="preserve">
          <source>Draws an etched rectangle.</source>
          <target state="translated">エッチングされた矩形を描画します。</target>
        </trans-unit>
        <trans-unit id="9e9cee04d9ec105131e58dab0865fba139dbf595" translate="yes" xml:space="preserve">
          <source>Draws an outlined round-cornered rectangle using this graphics context's current color.</source>
          <target state="translated">このグラフィックスコンテキストの現在の色を使って、丸みを帯びた四角形を描画します。</target>
        </trans-unit>
        <trans-unit id="c5df9f2feef480c5067da7bee36db7a425752fa6" translate="yes" xml:space="preserve">
          <source>Draws an outlined round-cornered rectangle using this graphics context's current color. The left and right edges of the rectangle are at &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;x&amp;nbsp;+&amp;nbsp;width&lt;/code&gt;, respectively. The top and bottom edges of the rectangle are at &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;y&amp;nbsp;+&amp;nbsp;height&lt;/code&gt;.</source>
          <target state="translated">このグラフィックスコンテキストの現在の色を使用して、輪郭が描かれた角の丸い長方形を描画します。長方形の左端と右端は、それぞれ &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;x&amp;nbsp;+&amp;nbsp;width&lt;/code&gt; にあります。長方形の上端と下端は &lt;code&gt;y&lt;/code&gt; と &lt;code&gt;y&amp;nbsp;+&amp;nbsp;height&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="19135d1781c569032439c63575da5261f05e3f88" translate="yes" xml:space="preserve">
          <source>Draws as much of the specified area of the specified image as is currently available, scaling it on the fly to fit inside the specified area of the destination drawable surface.</source>
          <target state="translated">指定された画像の指定された領域を、現在利用可能な範囲内である限り描画し、描画先の描画可能面の指定された領域内に収まるようにその場で拡大縮小します。</target>
        </trans-unit>
        <trans-unit id="fc95a42d9bb642fef41353a7e3a2dc39bdce1f50" translate="yes" xml:space="preserve">
          <source>Draws as much of the specified area of the specified image as is currently available, scaling it on the fly to fit inside the specified area of the destination drawable surface. Transparent pixels do not affect whatever pixels are already there.</source>
          <target state="translated">指定された画像の指定された領域のうち、現在利用可能な範囲内であれば、その場で拡大縮小して描画先の描画可能面の指定された領域内に収まるように描画します。透過ピクセルは既にあるピクセルに影響を与えません。</target>
        </trans-unit>
        <trans-unit id="ffb21aecc4d6a22268a31f2a968fe9f0d141a989" translate="yes" xml:space="preserve">
          <source>Draws as much of the specified image as has already been scaled to fit inside the specified rectangle.</source>
          <target state="translated">指定された矩形内に収まるように既に拡大縮小されている画像を、指定された数だけ描画します。</target>
        </trans-unit>
        <trans-unit id="0640f19bc43d38b10a828a228fcf6dcd96b2231e" translate="yes" xml:space="preserve">
          <source>Draws as much of the specified image as is currently available.</source>
          <target state="translated">指定した画像のうち、現在利用可能なものをできるだけ多く描画します。</target>
        </trans-unit>
        <trans-unit id="541b19515d316d98d26be3dc8d1837344f3cdc12" translate="yes" xml:space="preserve">
          <source>Draws as much of the specified image as is currently available. The image is drawn with its top-left corner at (</source>
          <target state="translated">指定された画像を現在利用可能な範囲で描画します。画像は左上の角を (</target>
        </trans-unit>
        <trans-unit id="8b1f3793072ce00d9b4131219759b2885d9df8e4" translate="yes" xml:space="preserve">
          <source>Draws dashed rectangle.</source>
          <target state="translated">破線の矩形を描画します。</target>
        </trans-unit>
        <trans-unit id="65cf0d8da2dcec97ca47d734dbb7d853262a2a4e" translate="yes" xml:space="preserve">
          <source>Draws inverted.</source>
          <target state="translated">倒立した状態で描画します。</target>
        </trans-unit>
        <trans-unit id="83f61985737ebcf80cf6fa1f9cbe7e2c3f631061" translate="yes" xml:space="preserve">
          <source>Draws the &lt;code&gt;icon&lt;/code&gt; centered at (x,y).</source>
          <target state="translated">Draws the &lt;code&gt;icon&lt;/code&gt; centered at (x,y).</target>
        </trans-unit>
        <trans-unit id="8cde15eeaf89a9c019a7cc9f62b8e78cf954f652" translate="yes" xml:space="preserve">
          <source>Draws the background of the menu item.</source>
          <target state="translated">メニュー項目の背景を描画します。</target>
        </trans-unit>
        <trans-unit id="51e950bfaec894d80682f79a5b2be24351fb18f1" translate="yes" xml:space="preserve">
          <source>Draws the border around a field.</source>
          <target state="translated">フィールドの周囲に境界線を描画します。</target>
        </trans-unit>
        <trans-unit id="4f3020e226403eddf6aaa0be37a70a2158cdc403" translate="yes" xml:space="preserve">
          <source>Draws the border around a menu bar.</source>
          <target state="translated">メニューバーの周囲に境界線を描画します。</target>
        </trans-unit>
        <trans-unit id="d16c53a43356afa023830b17d95b046805829131" translate="yes" xml:space="preserve">
          <source>Draws the border around a radio button.</source>
          <target state="translated">ラジオボタンの周囲に境界線を描画します。</target>
        </trans-unit>
        <trans-unit id="9029f5cb5be5e3a89fc6ba64ba606e7098aa3d75" translate="yes" xml:space="preserve">
          <source>Draws the border around a toggle button.</source>
          <target state="translated">トグルボタンの周囲に境界線を描画します。</target>
        </trans-unit>
        <trans-unit id="507af9a59509b07ae73262904580bbd145614b50" translate="yes" xml:space="preserve">
          <source>Draws the border around components which support margins.</source>
          <target state="translated">余白をサポートするコンポーネントの周りに境界線を描きます。</target>
        </trans-unit>
        <trans-unit id="ab7eb731a20b55b43294f61707d1ec65ba05bf74" translate="yes" xml:space="preserve">
          <source>Draws the border around the splitpane.</source>
          <target state="translated">スプリットペインの周囲に境界線を描画します。</target>
        </trans-unit>
        <trans-unit id="6f7bf435399cf270f30ce15024d79562590adcbc" translate="yes" xml:space="preserve">
          <source>Draws the border around the splitpane. To work correctly you should also install a border on the divider (property SplitPaneDivider.border).</source>
          <target state="translated">スプリットペインの周囲に境界線を描画します。正しく動作させるためには、スプリットパネルにもボーダーを設置する必要があります (property SplitPaneDivider.border)。</target>
        </trans-unit>
        <trans-unit id="055964daf051dc5f6f4422424e7b6ff99027876d" translate="yes" xml:space="preserve">
          <source>Draws the given string at the specified location underlining the specified character.</source>
          <target state="translated">指定された文字列を指定された位置に下線を引いて描画します。</target>
        </trans-unit>
        <trans-unit id="4823cc68b74f9a78ae590a0de111d0302057fec0" translate="yes" xml:space="preserve">
          <source>Draws the given string at the specified location underlining the specified character. The provided component is used to query text properties and anti-aliasing hints.</source>
          <target state="translated">指定された文字列を、指定された文字に下線を引いて指定された場所に描画します。提供されるコンポーネントは、テキストのプロパティとアンチエイリアシングヒントを問い合わせるために使用されます。</target>
        </trans-unit>
        <trans-unit id="0449d259283fe63bed4d54e42293b389d1a337c4" translate="yes" xml:space="preserve">
          <source>Draws the given string at the specified location using text properties and anti-aliasing hints from the provided component.</source>
          <target state="translated">指定された文字列を、指定されたコンポーネントのテキストプロパティとアンチエイリアスヒントを使用して指定された場所に描画します。</target>
        </trans-unit>
        <trans-unit id="5da2af70cf175f9606c28ea7565ca46313dc9454" translate="yes" xml:space="preserve">
          <source>Draws the given string at the specified location using text properties and anti-aliasing hints from the provided component. Nothing is drawn for the null string.</source>
          <target state="translated">指定された文字列を、指定されたコンポーネントのテキストプロパティとアンチエイリアシングヒントを使用して指定された場所に描画します。ヌル文字列の場合は何も描画されません。</target>
        </trans-unit>
        <trans-unit id="7b7ed5092fb7f15a53627dd879cff4a73ad72fd1" translate="yes" xml:space="preserve">
          <source>Draws the given text, expanding any tabs that are contained using the given tab expansion technique.</source>
          <target state="translated">指定されたテキストを描画し、指定されたタブ展開テクニックを使用して含まれているタブをすべて展開します。</target>
        </trans-unit>
        <trans-unit id="91706b17d9fda6d6d08a83ff9f1fc8e3e28ab351" translate="yes" xml:space="preserve">
          <source>Draws the given text, expanding any tabs that are contained using the given tab expansion technique. This particular implementation renders in a 1.1 style coordinate system where ints are used and 72dpi is assumed.</source>
          <target state="translated">与えられたテキストを描画し、その中に含まれるタブを、与えられたタブ展開技法を用いて展開します。この実装では、1.1 スタイルの座標系でレンダリングします。</target>
        </trans-unit>
        <trans-unit id="94f868d317eb93aba1edc0af2351907ad3abc1f3" translate="yes" xml:space="preserve">
          <source>Draws the outline of a circular or elliptical arc covering the specified rectangle.</source>
          <target state="translated">指定した矩形を覆う円弧または楕円弧の輪郭を描画します。</target>
        </trans-unit>
        <trans-unit id="39bc6d5a1aa4bb60c455f50ea945eee5e1c909e7" translate="yes" xml:space="preserve">
          <source>Draws the outline of a polygon defined by the specified &lt;code&gt;Polygon&lt;/code&gt; object.</source>
          <target state="translated">Draws the outline of a polygon defined by the specified &lt;code&gt;Polygon&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="39fe24514d3bd2babff1a57836c50364214b59f9" translate="yes" xml:space="preserve">
          <source>Draws the outline of an oval.</source>
          <target state="translated">楕円の輪郭を描きます。</target>
        </trans-unit>
        <trans-unit id="b6e7314676b82f166674549f7335348dc3b70e68" translate="yes" xml:space="preserve">
          <source>Draws the outline of an oval. The result is a circle or ellipse that fits within the rectangle specified by the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, and &lt;code&gt;height&lt;/code&gt; arguments.</source>
          <target state="translated">Draws the outline of an oval. The result is a circle or ellipse that fits within the rectangle specified by the &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; , &lt;code&gt;width&lt;/code&gt; , and &lt;code&gt;height&lt;/code&gt; arguments.</target>
        </trans-unit>
        <trans-unit id="c41be87e464ffd8b6d6a6235aed13478d6896e8f" translate="yes" xml:space="preserve">
          <source>Draws the outline of the specified rectangle.</source>
          <target state="translated">指定した矩形の輪郭を描画します。</target>
        </trans-unit>
        <trans-unit id="a30da8446472625283e72714d4d0e490d5187bd4" translate="yes" xml:space="preserve">
          <source>Draws the outline of the specified rectangle. The left and right edges of the rectangle are at &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;x&amp;nbsp;+&amp;nbsp;width&lt;/code&gt;. The top and bottom edges are at &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;y&amp;nbsp;+&amp;nbsp;height&lt;/code&gt;. The rectangle is drawn using the graphics context's current color.</source>
          <target state="translated">Draws the outline of the specified rectangle. The left and right edges of the rectangle are at &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;x&amp;nbsp;+&amp;nbsp;width&lt;/code&gt; . The top and bottom edges are at &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;y&amp;nbsp;+&amp;nbsp;height&lt;/code&gt; . The rectangle is drawn using the graphics context's current color.</target>
        </trans-unit>
        <trans-unit id="5de5181a542816afd5f665a955ca52a861cf05c8" translate="yes" xml:space="preserve">
          <source>Draws the panel.</source>
          <target state="translated">パネルを描画します。</target>
        </trans-unit>
        <trans-unit id="580c4f65049aa60ec93ecd1801e70461c9a6efa7" translate="yes" xml:space="preserve">
          <source>Draws the text given by the specified byte array, using this graphics context's current font and color.</source>
          <target state="translated">指定したバイト配列で与えられたテキストを、このグラフィックスコンテキストの現在のフォントと色を使って描画します。</target>
        </trans-unit>
        <trans-unit id="c80d250372a74b083d5310c781ea6b60b4532fd3" translate="yes" xml:space="preserve">
          <source>Draws the text given by the specified byte array, using this graphics context's current font and color. The baseline of the first character is at position (</source>
          <target state="translated">指定したバイト配列で与えられたテキストを、このグラフィックスコンテキストのカレントフォントと色を使って描画します。最初の文字のベースラインは位置 (</target>
        </trans-unit>
        <trans-unit id="b91b1684a9a2172d2f1755c85329d45e3a3460fd" translate="yes" xml:space="preserve">
          <source>Draws the text given by the specified character array, using this graphics context's current font and color.</source>
          <target state="translated">指定した文字配列で与えられたテキストを、このグラフィックスコンテキストの現在のフォントと色を使って描画します。</target>
        </trans-unit>
        <trans-unit id="42dbe37fd7f6ac6b8e390e948c2414a5205a753d" translate="yes" xml:space="preserve">
          <source>Draws the text given by the specified character array, using this graphics context's current font and color. The baseline of the first character is at position (</source>
          <target state="translated">指定した文字配列で与えられたテキストを、このグラフィックスコンテキストのカレントフォントと色を使って描画します。最初の文字のベースラインは、位置 (</target>
        </trans-unit>
        <trans-unit id="2b5f4303190fb82a068297551922647ef54b2f7a" translate="yes" xml:space="preserve">
          <source>Draws the text given by the specified string, using this graphics context's current font and color.</source>
          <target state="translated">指定した文字列で与えられたテキストを、このグラフィックスコンテキストの現在のフォントと色を使って描画します。</target>
        </trans-unit>
        <trans-unit id="24c9c1041c39c8cda860f68ff9e54eb96369a570" translate="yes" xml:space="preserve">
          <source>Draws the text given by the specified string, using this graphics context's current font and color. The baseline of the leftmost character is at position (</source>
          <target state="translated">指定した文字列で与えられたテキストを、このグラフィックスコンテキストのカレントフォントと色を使って描画します。左端の文字のベースラインは、位置 (</target>
        </trans-unit>
        <trans-unit id="05cfea612b3dac13dd007a4bb96ca2f77cb5fe77" translate="yes" xml:space="preserve">
          <source>Draws viewport contents into an offscreen image.</source>
          <target state="translated">ビューポートの内容を画面外の画像に描画します。</target>
        </trans-unit>
        <trans-unit id="c11d57183cef4b2ec57c869adce881a2bcb5297e" translate="yes" xml:space="preserve">
          <source>Draws viewport contents into an offscreen image. This was previously the default mode for &lt;code&gt;JTable&lt;/code&gt;. This mode may offer advantages over &quot;blit mode&quot; in some cases, but it requires a large chunk of extra RAM.</source>
          <target state="translated">Draws viewport contents into an offscreen image. This was previously the default mode for &lt;code&gt;JTable&lt;/code&gt; . This mode may offer advantages over &quot;blit mode&quot; in some cases, but it requires a large chunk of extra RAM.</target>
        </trans-unit>
        <trans-unit id="47489a0a5deebea80b60c1319e1f53b3fbd1683e" translate="yes" xml:space="preserve">
          <source>DrbgParameters</source>
          <target state="translated">DrbgParameters</target>
        </trans-unit>
        <trans-unit id="8a28876a9688a9b760fbbdf456836637a810b083" translate="yes" xml:space="preserve">
          <source>DrbgParameters.Capability</source>
          <target state="translated">DrbgParameters.Capability</target>
        </trans-unit>
        <trans-unit id="4b9cbb4a7a823ebc4861ec4b41729e1b3df3422d" translate="yes" xml:space="preserve">
          <source>DrbgParameters.Instantiation</source>
          <target state="translated">DrbgParameters.Instantiation</target>
        </trans-unit>
        <trans-unit id="3120f46f9cc449bf771b916e97a6792cb2d979fe" translate="yes" xml:space="preserve">
          <source>DrbgParameters.NextBytes</source>
          <target state="translated">DrbgParameters.NextBytes</target>
        </trans-unit>
        <trans-unit id="a856fcd62b59d41bce2f8b35ad504e0f9c14d0d2" translate="yes" xml:space="preserve">
          <source>DrbgParameters.Reseed</source>
          <target state="translated">DrbgParameters.Reseed</target>
        </trans-unit>
        <trans-unit id="b5c7d8b545ea7fdba609234ce2324aa0c0d6dbb0" translate="yes" xml:space="preserve">
          <source>Driver</source>
          <target state="translated">Driver</target>
        </trans-unit>
        <trans-unit id="98e0c8c4f91f3ef58457fe013db3e0e1add244ea" translate="yes" xml:space="preserve">
          <source>Driver properties for making a connection.</source>
          <target state="translated">接続を行うためのドライバのプロパティです。</target>
        </trans-unit>
        <trans-unit id="00abe68067d73dae5db23f80c436ed2438963b23" translate="yes" xml:space="preserve">
          <source>Driver properties for making a connection. The &lt;code&gt;DriverPropertyInfo&lt;/code&gt; class is of interest only to advanced programmers who need to interact with a Driver via the method &lt;code&gt;getDriverProperties&lt;/code&gt; to discover and supply properties for connections.</source>
          <target state="translated">Driver properties for making a connection. The &lt;code&gt;DriverPropertyInfo&lt;/code&gt; class is of interest only to advanced programmers who need to interact with a Driver via the method &lt;code&gt;getDriverProperties&lt;/code&gt; to discover and supply properties for connections.</target>
        </trans-unit>
        <trans-unit id="bb72c04da7ef20a3b62e9fa8638ad961ce8f9126" translate="yes" xml:space="preserve">
          <source>Driver vendors provide &lt;code&gt;DataSource&lt;/code&gt; implementations. A particular &lt;code&gt;DataSource&lt;/code&gt; object represents a particular physical data source, and each connection the &lt;code&gt;DataSource&lt;/code&gt; object creates is a connection to that physical data source.</source>
          <target state="translated">Driver vendors provide &lt;code&gt;DataSource&lt;/code&gt; implementations. A particular &lt;code&gt;DataSource&lt;/code&gt; object represents a particular physical data source, and each connection the &lt;code&gt;DataSource&lt;/code&gt; object creates is a connection to that physical data source.</target>
        </trans-unit>
        <trans-unit id="05ba0a412564529f5550e15aa337146d7acc7541" translate="yes" xml:space="preserve">
          <source>DriverAction</source>
          <target state="translated">DriverAction</target>
        </trans-unit>
        <trans-unit id="048eef25d2703204a07f1643650e8b094105c83e" translate="yes" xml:space="preserve">
          <source>DriverManager</source>
          <target state="translated">DriverManager</target>
        </trans-unit>
        <trans-unit id="97a1c662cb81c6a6e12b2f7d1a4d37876c84da24" translate="yes" xml:space="preserve">
          <source>DriverPropertyInfo</source>
          <target state="translated">DriverPropertyInfo</target>
        </trans-unit>
        <trans-unit id="821528e4f3f9d1a3561c3c21872bafdb2f068aaa" translate="yes" xml:space="preserve">
          <source>Drivers may internally implement some or all of their API calls with multiple internal driver-database transmissions, and it is left to the driver implementation to determine whether the limit will be applied always to the response to the API call, or to any single request made during the API call.</source>
          <target state="translated">ドライバは、APIコールの一部またはすべてを複数の内部ドライバデータベース送信で内部的に実装することができ、制限を常にAPIコールに対する応答に適用するか、またはAPIコール中に行われた単一のリクエストに適用するかは、ドライバの実装に委ねられる。</target>
        </trans-unit>
        <trans-unit id="817217f9c1770621b60c66faa1d175943608aad7" translate="yes" xml:space="preserve">
          <source>Drivers that support the JDBC 3.0 API will create &lt;code&gt;Connection&lt;/code&gt; objects with an associated type map. This type map, which is initially empty, can contain one or more fully-qualified SQL names and &lt;code&gt;Class&lt;/code&gt; objects indicating the class to which the named SQL value will be mapped. The type mapping specified in the connection's type map is used for custom type mapping when no other type map supersedes it.</source>
          <target state="translated">Drivers that support the JDBC 3.0 API will create &lt;code&gt;Connection&lt;/code&gt; objects with an associated type map. This type map, which is initially empty, can contain one or more fully-qualified SQL names and &lt;code&gt;Class&lt;/code&gt; objects indicating the class to which the named SQL value will be mapped. The type mapping specified in the connection's type map is used for custom type mapping when no other type map supersedes it.</target>
        </trans-unit>
        <trans-unit id="cd12066e84b4f03d7fb3bbe72e97f25ce4490562" translate="yes" xml:space="preserve">
          <source>Drop membership.</source>
          <target state="translated">メンバーシップを削除します。</target>
        </trans-unit>
        <trans-unit id="e874be86b7fa3c9b150683e785df9daa09c7d8fb" translate="yes" xml:space="preserve">
          <source>Drop modes, used to determine the method by which a component tracks and indicates a drop location during drag and drop.</source>
          <target state="translated">ドロップモード。ドラッグ&amp;ドロップ時にコンポーネントがドロップ位置を追跡して表示する方法を決定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="0a5fef8d342e961cec250f6e08e4007d3174e2eb" translate="yes" xml:space="preserve">
          <source>DropLocation</source>
          <target state="translated">DropLocation</target>
        </trans-unit>
        <trans-unit id="5332d3da8899d0b649610735b998ca391b65f9e1" translate="yes" xml:space="preserve">
          <source>DropMode</source>
          <target state="translated">DropMode</target>
        </trans-unit>
        <trans-unit id="9595e5c6b9a170ec15dfec6f69366ec5b8b6c3a6" translate="yes" xml:space="preserve">
          <source>DropTarget</source>
          <target state="translated">DropTarget</target>
        </trans-unit>
        <trans-unit id="23b75a6c62be0dd0383ad97fae352e81f4f3ce4a" translate="yes" xml:space="preserve">
          <source>DropTarget.DropTargetAutoScroller</source>
          <target state="translated">DropTarget.DropTargetAutoScroller</target>
        </trans-unit>
        <trans-unit id="0cc89ec6982289cd76149333ebe6f83dbaf44c09" translate="yes" xml:space="preserve">
          <source>DropTargetAdapter</source>
          <target state="translated">DropTargetAdapter</target>
        </trans-unit>
        <trans-unit id="83cc843a304652f3cf598b93ab23f561246e260b" translate="yes" xml:space="preserve">
          <source>DropTargetAutoScroller</source>
          <target state="translated">DropTargetAutoScroller</target>
        </trans-unit>
        <trans-unit id="ac42c24405c5fab2e1351a68ea580f933f94c04c" translate="yes" xml:space="preserve">
          <source>DropTargetContext</source>
          <target state="translated">DropTargetContext</target>
        </trans-unit>
        <trans-unit id="05494920e0bc86b07cf584041be9d1cfde5d3cd2" translate="yes" xml:space="preserve">
          <source>DropTargetContext.TransferableProxy</source>
          <target state="translated">DropTargetContext.TransferableProxy</target>
        </trans-unit>
        <trans-unit id="701114c10c37dbc7982b5c3608e71d113acb9708" translate="yes" xml:space="preserve">
          <source>DropTargetDragEvent</source>
          <target state="translated">DropTargetDragEvent</target>
        </trans-unit>
        <trans-unit id="78a04779d0925b0ccc08e0718be42d6da7a3eeb8" translate="yes" xml:space="preserve">
          <source>DropTargetDropEvent</source>
          <target state="translated">DropTargetDropEvent</target>
        </trans-unit>
        <trans-unit id="8071cbab6daa8e02ff9057f8a82b92a7eb6a715c" translate="yes" xml:space="preserve">
          <source>DropTargetEvent</source>
          <target state="translated">DropTargetEvent</target>
        </trans-unit>
        <trans-unit id="a33be412230cc020ee9084d28783780c73e8a43b" translate="yes" xml:space="preserve">
          <source>DropTargetListener</source>
          <target state="translated">DropTargetListener</target>
        </trans-unit>
        <trans-unit id="2344a954abca9d2ee9cc4c6e9c4befacdc6f6e79" translate="yes" xml:space="preserve">
          <source>Dst</source>
          <target state="translated">Dst</target>
        </trans-unit>
        <trans-unit id="8510fa5b75a1e31df1c18ad29773dbebfe45cd88" translate="yes" xml:space="preserve">
          <source>DstAtop</source>
          <target state="translated">DstAtop</target>
        </trans-unit>
        <trans-unit id="8feb4744471b1a5f2bf4e9d7341774acb47e7401" translate="yes" xml:space="preserve">
          <source>DstIn</source>
          <target state="translated">DstIn</target>
        </trans-unit>
        <trans-unit id="1f4beabd039fcaebb90964d02dd3ed2b9f81845f" translate="yes" xml:space="preserve">
          <source>DstOut</source>
          <target state="translated">DstOut</target>
        </trans-unit>
        <trans-unit id="51c6ddafcedd45d27612b48c81ea561d82858f08" translate="yes" xml:space="preserve">
          <source>DstOver</source>
          <target state="translated">DstOver</target>
        </trans-unit>
        <trans-unit id="a7b111439738afbf5aa384d3fd1522a0b94c685d" translate="yes" xml:space="preserve">
          <source>Due to platform-dependent Drag&amp;amp;Drop implementations, &lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; events may not be delivered during a native Drag&amp;amp;Drop operation.</source>
          <target state="translated">Due to platform-dependent Drag&amp;amp;Drop implementations, &lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; events may not be delivered during a native Drag&amp;amp;Drop operation.</target>
        </trans-unit>
        <trans-unit id="56d82ff49c8bbfbd7b3e4f4ffa2789b0203b85d6" translate="yes" xml:space="preserve">
          <source>Due to polymorphism of both factories and sockets, different kinds of sockets can be used by the same application code just by passing it different kinds of factories.</source>
          <target state="translated">ファクトリーとソケットのポリモーフィズムにより、異なる種類のファクトリーを渡すだけで、同じアプリケーションコードで異なる種類のソケットを使用することができます。</target>
        </trans-unit>
        <trans-unit id="5c8209dddfa9c02fedf68e643c9eae1743d58096" translate="yes" xml:space="preserve">
          <source>Due to rasterization effects, this bounds might not enclose all of the pixels rendered by the TextLayout.</source>
          <target state="translated">ラスタライズ効果のため、この境界線は、TextLayout でレンダリングされたすべてのピクセルを囲むわけではない場合があります。</target>
        </trans-unit>
        <trans-unit id="12a38894d57d3b3784bfa765fc5e5f802d04979e" translate="yes" xml:space="preserve">
          <source>Due to some methods of allocating certain styles of IPv6 addresses, it will be common for addresses to contain long strings of zero bits. In order to make writing addresses containing zero bits easier, a special syntax is available to compress the zeros. The use of &quot;::&quot; indicates multiple groups of 16-bits of zeros. The &quot;::&quot; can only appear once in an address. The &quot;::&quot; can also be used to compress the leading and/or trailing zeros in an address. For example,</source>
          <target state="translated">IPv6アドレスの特定のスタイルの割り当て方法があるため、ゼロビットの長い文字列を含むアドレスが一般的になります。ゼロビットを含むアドレスの書き込みを容易にするために、ゼロを圧縮するための特別な構文が利用できます。&quot;::&quot;の使用は、16ビットのゼロの複数のグループを示します。は、アドレスの中で一度だけ出現することができます。は、アドレスの先頭および/または末尾のゼロを圧縮するために使用することもできます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="e3c516a2e5fbbeb4b04ec1a82dd449e53d53be7f" translate="yes" xml:space="preserve">
          <source>Due to the asynchronous nature of native event handling, the results returned by &lt;code&gt;getBounds&lt;/code&gt;, &lt;code&gt;getLocation&lt;/code&gt;, &lt;code&gt;getLocationOnScreen&lt;/code&gt;, and &lt;code&gt;getSize&lt;/code&gt; might not reflect the actual geometry of the Window on screen until the last request has been processed. During the processing of subsequent requests these values might change accordingly while the window management system fulfills the requests.</source>
          <target state="translated">Due to the asynchronous nature of native event handling, the results returned by &lt;code&gt;getBounds&lt;/code&gt; , &lt;code&gt;getLocation&lt;/code&gt; , &lt;code&gt;getLocationOnScreen&lt;/code&gt; , and &lt;code&gt;getSize&lt;/code&gt; might not reflect the actual geometry of the Window on screen until the last request has been processed. During the processing of subsequent requests these values might change accordingly while the window management system fulfills the requests.</target>
        </trans-unit>
        <trans-unit id="5c4bc115b1e9c1328de95504e68d846f7345c320" translate="yes" xml:space="preserve">
          <source>Due to the asynchronous nature of native event handling, this method can return outdated values (for instance, after several calls of &lt;code&gt;setLocation()&lt;/code&gt; in rapid succession). For this reason, the recommended method of obtaining a component's position is within &lt;code&gt;java.awt.event.ComponentListener.componentMoved()&lt;/code&gt;, which is called after the operating system has finished moving the component.</source>
          <target state="translated">Due to the asynchronous nature of native event handling, this method can return outdated values (for instance, after several calls of &lt;code&gt;setLocation()&lt;/code&gt; in rapid succession). For this reason, the recommended method of obtaining a component's position is within &lt;code&gt;java.awt.event.ComponentListener.componentMoved()&lt;/code&gt; , which is called after the operating system has finished moving the component.</target>
        </trans-unit>
        <trans-unit id="5f59e2aa8400f166eee066b3a5286b653bae771b" translate="yes" xml:space="preserve">
          <source>Due to the differences between the &lt;code&gt;Timestamp&lt;/code&gt; class and the &lt;code&gt;java.util.Date&lt;/code&gt; class mentioned above, it is recommended that code not view &lt;code&gt;Timestamp&lt;/code&gt; values generically as an instance of &lt;code&gt;java.util.Date&lt;/code&gt;. The inheritance relationship between &lt;code&gt;Timestamp&lt;/code&gt; and &lt;code&gt;java.util.Date&lt;/code&gt; really denotes implementation inheritance, and not type inheritance.</source>
          <target state="translated">Due to the differences between the &lt;code&gt;Timestamp&lt;/code&gt; class and the &lt;code&gt;java.util.Date&lt;/code&gt; class mentioned above, it is recommended that code not view &lt;code&gt;Timestamp&lt;/code&gt; values generically as an instance of &lt;code&gt;java.util.Date&lt;/code&gt; . The inheritance relationship between &lt;code&gt;Timestamp&lt;/code&gt; and &lt;code&gt;java.util.Date&lt;/code&gt; really denotes implementation inheritance, and not type inheritance.</target>
        </trans-unit>
        <trans-unit id="c221b3b5d45aa6f2b51d2ff7ad772006b7992fe4" translate="yes" xml:space="preserve">
          <source>Due to the inherent delay between key cancellation and channel deregistration, a channel may remain registered for some time after all of its keys have been cancelled. A channel may also remain registered for some time after it is closed.</source>
          <target state="translated">キーのキャンセルとチャンネルの登録解除の間には、固有の遅延があるため、全てのキーがキャンセルされた後も、チャンネルはしばらくの間登録されたままになることがあります。また、チャンネルが閉じられた後も、しばらくの間登録されたままになることがあります。</target>
        </trans-unit>
        <trans-unit id="74d5cf48b69cd525a6a5e34930693c1ebc22c7ef" translate="yes" xml:space="preserve">
          <source>Due to the inherent race condition in this method, it is recommended that the method only be used for debugging and monitoring purposes.</source>
          <target state="translated">このメソッドには固有の競合状態があるため、このメソッドはデバッグおよびモニタリング目的でのみ使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="0d5c41631d2e02100d3f60e0121c626e70082bd1" translate="yes" xml:space="preserve">
          <source>Due to the mouse wheel's special relationship to scrolling Components, MouseWheelEvents are delivered somewhat differently than other MouseEvents. This is because while other MouseEvents usually affect a change on the Component directly under the mouse cursor (for instance, when clicking a button), MouseWheelEvents often have an effect away from the mouse cursor (moving the wheel while over a Component inside a ScrollPane should scroll one of the Scrollbars on the ScrollPane).</source>
          <target state="translated">マウスホイールとスクロールするコンポーネントとの特別な関係のため、MouseWheelEventsは他のMouseEventsとは少し違った形で配信されます。これは、他の MouseEvents が通常マウスカーソルの直下にあるコンポーネントの変更に影響を与えるのに対し (例えば、ボタンをクリックしたときなど)、MouseWheelEvents はマウスカーソルから離れた場所に影響を与えることが多いからです (ScrollPane 内のコンポーネントの上でホイールを動かすと、ScrollPane 上の ScrollBars の 1 つをスクロールする必要があります)。</target>
        </trans-unit>
        <trans-unit id="ce9b8e61ee744cc30663ea7690cda15d17521ec4" translate="yes" xml:space="preserve">
          <source>Due to the platform-dependent nature of the behavior of this constructor, extreme care should be exercised in its use. The thread stack size necessary to perform a given computation will likely vary from one JRE implementation to another. In light of this variation, careful tuning of the stack size parameter may be required, and the tuning may need to be repeated for each JRE implementation on which an application is to run.</source>
          <target state="translated">このコンストラクタの動作はプラットフォームに依存しているため、その使用には細心の注意を払う必要があります。与えられた計算を実行するのに必要なスレッドスタックサイズは、JRE の実装によって異なる可能性があります。この変化を考慮して、スタックサイズパラメータの調整を慎重に行う必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="c7f52ea5e07bef9556fc372d0063a2aae55fab6f" translate="yes" xml:space="preserve">
          <source>Dumps a debugging representation of the element hierarchy.</source>
          <target state="translated">要素階層のデバッグ表現をダンプします。</target>
        </trans-unit>
        <trans-unit id="ef947e3aef3170e26167c58d17a81acc82301605" translate="yes" xml:space="preserve">
          <source>Dungeon</source>
          <target state="translated">Dungeon</target>
        </trans-unit>
        <trans-unit id="25fd58ae8466e85b0fd7fbf082f5d29ceb5c69fb" translate="yes" xml:space="preserve">
          <source>Duplicate credential element requested.</source>
          <target state="translated">クレデンシャル要素の重複が要求されました。</target>
        </trans-unit>
        <trans-unit id="611f9b90ae8fc0f6a7d8b85d23b7994ad4acd078" translate="yes" xml:space="preserve">
          <source>DuplicateFormatFlagsException</source>
          <target state="translated">DuplicateFormatFlagsException</target>
        </trans-unit>
        <trans-unit id="3c356dce20032bdfcd696e3cb6b670fd68285914" translate="yes" xml:space="preserve">
          <source>DuplicateFormatFlagsException.getFlags()</source>
          <target state="translated">DuplicateFormatFlagsException.getFlags()</target>
        </trans-unit>
        <trans-unit id="d9312f6a6f29fc77bb6453b2c755fe17639eb33f" translate="yes" xml:space="preserve">
          <source>DuplicateFormatFlagsException.getMessage()</source>
          <target state="translated">DuplicateFormatFlagsException.getMessage()</target>
        </trans-unit>
        <trans-unit id="f6ddd2fde866bddce835f6c59d2fe34ed8ce8579" translate="yes" xml:space="preserve">
          <source>Duplicates the contents of a Range</source>
          <target state="translated">レンジの内容を複製します。</target>
        </trans-unit>
        <trans-unit id="1370004da76fa4f3b7a5180fd5436065ef4c7d5b" translate="yes" xml:space="preserve">
          <source>Duration</source>
          <target state="translated">Duration</target>
        </trans-unit>
        <trans-unit id="20d3cd81bdaf7a38fc3afa3981772c301586ef37" translate="yes" xml:space="preserve">
          <source>Duration X is &quot;longer&quot; than Y if and only if X &amp;gt; Y as defined in the section 3.2.6.2 of the XML Schema 1.0 specification.</source>
          <target state="translated">Duration X is &quot;longer&quot; than Y if and only if X &amp;gt; Y as defined in the section 3.2.6.2 of the XML Schema 1.0 specification.</target>
        </trans-unit>
        <trans-unit id="a402b7257cf520473a41ae91eabd3bfc34ce3e53" translate="yes" xml:space="preserve">
          <source>Duration X is equal to Y if and only if time instant t+X and t+Y are the same for all the test time instants specified in the section 3.2.6.2 of the XML Schema 1.0 specification.</source>
          <target state="translated">XML Schema 1.0仕様の3.2.6.2節で指定されたすべてのテスト時間インスタンスについて、時間インスタンスt+Xとt+Yが同じである場合に限り、持続時間XはYに等しい。</target>
        </trans-unit>
        <trans-unit id="7df11f943d5f539171b9117f82e494d1ad59e377" translate="yes" xml:space="preserve">
          <source>Duration and Period</source>
          <target state="translated">期間と期間</target>
        </trans-unit>
        <trans-unit id="eddd4c3d0caf90c33f22779aedf18514d38569ef" translate="yes" xml:space="preserve">
          <source>Duration objects only have partial order, where two values A and B maybe either:</source>
          <target state="translated">期間オブジェクトは部分的な順序のみを持ち、2つの値AとBはどちらか一方である可能性があります。</target>
        </trans-unit>
        <trans-unit id="cd9025826b1cd7e702cbe93176d1b668d05effb5" translate="yes" xml:space="preserve">
          <source>Duration.abs()</source>
          <target state="translated">Duration.abs()</target>
        </trans-unit>
        <trans-unit id="aa312e8a098ab875b809bf9534b814af64a9759e" translate="yes" xml:space="preserve">
          <source>Duration.addTo()</source>
          <target state="translated">Duration.addTo()</target>
        </trans-unit>
        <trans-unit id="b840cd969d2dd313bb6373719b36c365b3b2b244" translate="yes" xml:space="preserve">
          <source>Duration.between()</source>
          <target state="translated">Duration.between()</target>
        </trans-unit>
        <trans-unit id="23435c649b87c9dcf280ac63f198540368cc5231" translate="yes" xml:space="preserve">
          <source>Duration.compareTo()</source>
          <target state="translated">Duration.compareTo()</target>
        </trans-unit>
        <trans-unit id="2d2a660b05a6946f7e8d68d3f0777b4f3ce04748" translate="yes" xml:space="preserve">
          <source>Duration.dividedBy()</source>
          <target state="translated">Duration.dividedBy()</target>
        </trans-unit>
        <trans-unit id="2497f0dd453a7e9b0dfcff8deeafd55f16abef7a" translate="yes" xml:space="preserve">
          <source>Duration.equals()</source>
          <target state="translated">Duration.equals()</target>
        </trans-unit>
        <trans-unit id="f3398ac63a7ecd9599e44f8ad8c1ad4b2d38f41f" translate="yes" xml:space="preserve">
          <source>Duration.from()</source>
          <target state="translated">Duration.from()</target>
        </trans-unit>
        <trans-unit id="b9300aa117c5a95374dea29a47351a829433f32d" translate="yes" xml:space="preserve">
          <source>Duration.get()</source>
          <target state="translated">Duration.get()</target>
        </trans-unit>
        <trans-unit id="fb5a4179ef4d6e29d337caeaa92d865aa31d3bec" translate="yes" xml:space="preserve">
          <source>Duration.getNano()</source>
          <target state="translated">Duration.getNano()</target>
        </trans-unit>
        <trans-unit id="1491e6edfd8090740291ea563d04af0851984351" translate="yes" xml:space="preserve">
          <source>Duration.getSeconds()</source>
          <target state="translated">Duration.getSeconds()</target>
        </trans-unit>
        <trans-unit id="4fd70e5cd0d11b8f6084016b3d267af614d8071e" translate="yes" xml:space="preserve">
          <source>Duration.getUnits()</source>
          <target state="translated">Duration.getUnits()</target>
        </trans-unit>
        <trans-unit id="affe8075b36dabdb8d118abc7742ad8e66347796" translate="yes" xml:space="preserve">
          <source>Duration.hashCode()</source>
          <target state="translated">Duration.hashCode()</target>
        </trans-unit>
        <trans-unit id="cf9408c9312f0888ff5e9afe3420e94b8e3e64b4" translate="yes" xml:space="preserve">
          <source>Duration.isNegative()</source>
          <target state="translated">Duration.isNegative()</target>
        </trans-unit>
        <trans-unit id="f92190a9658d0f1f4dbc1ceddd1fb62c3a26a136" translate="yes" xml:space="preserve">
          <source>Duration.isZero()</source>
          <target state="translated">Duration.isZero()</target>
        </trans-unit>
        <trans-unit id="9aa7c6d3eb42b70a0c389e693126098f8700dabb" translate="yes" xml:space="preserve">
          <source>Duration.minus()</source>
          <target state="translated">Duration.minus()</target>
        </trans-unit>
        <trans-unit id="d5fdcf8e2c10a9e72d3bc61eedc971b6e94f20a9" translate="yes" xml:space="preserve">
          <source>Duration.minusDays()</source>
          <target state="translated">Duration.minusDays()</target>
        </trans-unit>
        <trans-unit id="cbf93ca0303206b6934c54d2880c361f65e3c9f7" translate="yes" xml:space="preserve">
          <source>Duration.minusHours()</source>
          <target state="translated">Duration.minusHours()</target>
        </trans-unit>
        <trans-unit id="714723ec633026c398af7e42f32a875f8b421957" translate="yes" xml:space="preserve">
          <source>Duration.minusMillis()</source>
          <target state="translated">Duration.minusMillis()</target>
        </trans-unit>
        <trans-unit id="9e4aaa71aae9a99d50359ee427e3d219527a94de" translate="yes" xml:space="preserve">
          <source>Duration.minusMinutes()</source>
          <target state="translated">Duration.minusMinutes()</target>
        </trans-unit>
        <trans-unit id="45f2d8c7184ad62253756e68abae7f2a1f55c5b1" translate="yes" xml:space="preserve">
          <source>Duration.minusNanos()</source>
          <target state="translated">Duration.minusNanos()</target>
        </trans-unit>
        <trans-unit id="8dc28039173039b68b02be72df57ce37329dc7cd" translate="yes" xml:space="preserve">
          <source>Duration.minusSeconds()</source>
          <target state="translated">Duration.minusSeconds()</target>
        </trans-unit>
        <trans-unit id="1d5bfcef31cdc402c2b155550b5a9f42d4618485" translate="yes" xml:space="preserve">
          <source>Duration.multipliedBy()</source>
          <target state="translated">Duration.multipliedBy()</target>
        </trans-unit>
        <trans-unit id="b7c29c0849121b016118709e833f51b8f58413c0" translate="yes" xml:space="preserve">
          <source>Duration.negated()</source>
          <target state="translated">Duration.negated()</target>
        </trans-unit>
        <trans-unit id="d6a2a258e1c6b5872b5f596a5b086b2a95999bba" translate="yes" xml:space="preserve">
          <source>Duration.of()</source>
          <target state="translated">Duration.of()</target>
        </trans-unit>
        <trans-unit id="258409e04ff6722fe76b29a1178060ae2a778710" translate="yes" xml:space="preserve">
          <source>Duration.ofDays()</source>
          <target state="translated">Duration.ofDays()</target>
        </trans-unit>
        <trans-unit id="09d0b0487dc8b6d21930a5b1a36c98c6ca059d4a" translate="yes" xml:space="preserve">
          <source>Duration.ofHours()</source>
          <target state="translated">Duration.ofHours()</target>
        </trans-unit>
        <trans-unit id="ed9ca18062becd1d5cfda9cd3b3243cea165327d" translate="yes" xml:space="preserve">
          <source>Duration.ofMillis()</source>
          <target state="translated">Duration.ofMillis()</target>
        </trans-unit>
        <trans-unit id="50f5f4c2e0db0f082fa09cdc5fb70ef41b1f29b8" translate="yes" xml:space="preserve">
          <source>Duration.ofMinutes()</source>
          <target state="translated">Duration.ofMinutes()</target>
        </trans-unit>
        <trans-unit id="04acb65dc39265ee5d19cf41cf7db19811c52d34" translate="yes" xml:space="preserve">
          <source>Duration.ofNanos()</source>
          <target state="translated">Duration.ofNanos()</target>
        </trans-unit>
        <trans-unit id="838a4fa4ad925136a1d4d5402b3efbf8c14b0850" translate="yes" xml:space="preserve">
          <source>Duration.ofSeconds()</source>
          <target state="translated">Duration.ofSeconds()</target>
        </trans-unit>
        <trans-unit id="84eb67d030f05fe14d70c639d648fe64c4dfbffc" translate="yes" xml:space="preserve">
          <source>Duration.parse()</source>
          <target state="translated">Duration.parse()</target>
        </trans-unit>
        <trans-unit id="f8651625c717f1a7818151031436eac646482f4e" translate="yes" xml:space="preserve">
          <source>Duration.plus()</source>
          <target state="translated">Duration.plus()</target>
        </trans-unit>
        <trans-unit id="5fdd8a38b49ccd1f28d316e21294be7e70d9d3a2" translate="yes" xml:space="preserve">
          <source>Duration.plusDays()</source>
          <target state="translated">Duration.plusDays()</target>
        </trans-unit>
        <trans-unit id="faa749810ff2ba6c49fe432ba0ae6e0828d83ffc" translate="yes" xml:space="preserve">
          <source>Duration.plusHours()</source>
          <target state="translated">Duration.plusHours()</target>
        </trans-unit>
        <trans-unit id="116ae90cecb7c256944073754d8f498218cf3f96" translate="yes" xml:space="preserve">
          <source>Duration.plusMillis()</source>
          <target state="translated">Duration.plusMillis()</target>
        </trans-unit>
        <trans-unit id="7281e3ae17670a7a4f033392e1454ec6d2f0eda6" translate="yes" xml:space="preserve">
          <source>Duration.plusMinutes()</source>
          <target state="translated">Duration.plusMinutes()</target>
        </trans-unit>
        <trans-unit id="307fb9852b8a8d087ba24ae7a3819d8ecdc47b0e" translate="yes" xml:space="preserve">
          <source>Duration.plusNanos()</source>
          <target state="translated">Duration.plusNanos()</target>
        </trans-unit>
        <trans-unit id="5bdb5ae4ad6b604723db04eaeff74c85ed28f7a6" translate="yes" xml:space="preserve">
          <source>Duration.plusSeconds()</source>
          <target state="translated">Duration.plusSeconds()</target>
        </trans-unit>
        <trans-unit id="f9c05a96f7833b65df679ed69f4f6bbba84b55c1" translate="yes" xml:space="preserve">
          <source>Duration.subtractFrom()</source>
          <target state="translated">Duration.subtractFrom()</target>
        </trans-unit>
        <trans-unit id="fca97be59853ebe5716f826aec5de090bd060154" translate="yes" xml:space="preserve">
          <source>Duration.toDays()</source>
          <target state="translated">Duration.toDays()</target>
        </trans-unit>
        <trans-unit id="d022b07e8f4e7cc5b0776021b84e5644805d00e2" translate="yes" xml:space="preserve">
          <source>Duration.toHours()</source>
          <target state="translated">Duration.toHours()</target>
        </trans-unit>
        <trans-unit id="ea2713ff82ff0496b7fb1aef3f5eca7927287c72" translate="yes" xml:space="preserve">
          <source>Duration.toMillis()</source>
          <target state="translated">Duration.toMillis()</target>
        </trans-unit>
        <trans-unit id="fcf5200687fb4cf46a5c2d5187012eee190cf30f" translate="yes" xml:space="preserve">
          <source>Duration.toMinutes()</source>
          <target state="translated">Duration.toMinutes()</target>
        </trans-unit>
        <trans-unit id="09e88c4380b27b903b1943dca4ed67bacbe28633" translate="yes" xml:space="preserve">
          <source>Duration.toNanos()</source>
          <target state="translated">Duration.toNanos()</target>
        </trans-unit>
        <trans-unit id="7537209aeb73ea3454c97bc3b1dcba218d2b40ba" translate="yes" xml:space="preserve">
          <source>Duration.toString()</source>
          <target state="translated">Duration.toString()</target>
        </trans-unit>
        <trans-unit id="f716f82136ea9ad147dce8cd37dcb5fd69fc3e57" translate="yes" xml:space="preserve">
          <source>Duration.withNanos()</source>
          <target state="translated">Duration.withNanos()</target>
        </trans-unit>
        <trans-unit id="ee62ef8ea389fa2590ee0c39af18c07b20503601" translate="yes" xml:space="preserve">
          <source>Duration.withSeconds()</source>
          <target state="translated">Duration.withSeconds()</target>
        </trans-unit>
        <trans-unit id="110302dac043c24a9c4b17beddaccf3e8d190652" translate="yes" xml:space="preserve">
          <source>Durations and periods differ in their treatment of daylight savings time when added to &lt;a href=&quot;zoneddatetime&quot;&gt;&lt;code&gt;ZonedDateTime&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;Duration&lt;/code&gt; will add an exact number of seconds, thus a duration of one day is always exactly 24 hours. By contrast, a &lt;code&gt;Period&lt;/code&gt; will add a conceptual day, trying to maintain the local time.</source>
          <target state="translated">期間と期間は、&lt;a href=&quot;zoneddatetime&quot;&gt; &lt;code&gt;ZonedDateTime&lt;/code&gt; &lt;/a&gt;に追加された場合の夏時間の扱いが異なります。 &lt;code&gt;Duration&lt;/code&gt; これ一日の期間は、常に正確に24時間で、秒の正確な数を追加します。対照的に、 &lt;code&gt;Period&lt;/code&gt; は現地時間を維持しようとする概念的な日を追加します。</target>
        </trans-unit>
        <trans-unit id="920c0358c4559e1a16ebcdc0d1dd4a13bc58e091" translate="yes" xml:space="preserve">
          <source>During DnD operations it is possible that a user may wish to drop the subject of the operation on a region of a scrollable GUI control that is not currently visible to the user.</source>
          <target state="translated">DnD操作の間、ユーザがスクロール可能なGUIコントロールの現在ユーザには見えない領域に操作の対象をドロップしたいと思うことがあり得る。</target>
        </trans-unit>
        <trans-unit id="d3f9b36481d7df7c5af1384647f5f1661cd1c663" translate="yes" xml:space="preserve">
          <source>During UI adjustment, change subsequent columns to preserve the total width; this is the default behavior.</source>
          <target state="translated">UI調整中に、後続の列を変更して全体の幅を維持します。</target>
        </trans-unit>
        <trans-unit id="05142e54b237e53bb40f7d42bb6f40209d438ef3" translate="yes" xml:space="preserve">
          <source>During a printing operation, this method will be called with &lt;code&gt;isSelected&lt;/code&gt; and &lt;code&gt;hasFocus&lt;/code&gt; values of &lt;code&gt;false&lt;/code&gt; to prevent selection and focus from appearing in the printed output. To do other customization based on whether or not the table is being printed, check the return value from &lt;a href=&quot;../jcomponent#isPaintingForPrint()&quot;&gt;&lt;code&gt;JComponent.isPaintingForPrint()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">印刷操作中に、このメソッドは &lt;code&gt;isSelected&lt;/code&gt; および &lt;code&gt;hasFocus&lt;/code&gt; 値が &lt;code&gt;false&lt;/code&gt; の場合に呼び出され、選択とフォーカスが印刷出力に表示されないようにします。テーブルが印刷されているかどうかに基づいて他のカスタマイズを行うには、&lt;a href=&quot;../jcomponent#isPaintingForPrint()&quot;&gt; &lt;code&gt;JComponent.isPaintingForPrint()&lt;/code&gt; &lt;/a&gt;からの戻り値を確認してください。</target>
        </trans-unit>
        <trans-unit id="5ebc10f1b16ef0bd5eda41ba033320ab965eb4a8" translate="yes" xml:space="preserve">
          <source>During a printing operation, this method will configure the renderer without indicating selection or focus, to prevent them from appearing in the printed output. To do other customizations based on whether or not the table is being printed, you can check the value of &lt;a href=&quot;jcomponent#isPaintingForPrint()&quot;&gt;&lt;code&gt;JComponent.isPaintingForPrint()&lt;/code&gt;&lt;/a&gt;, either here or within custom renderers.</source>
          <target state="translated">印刷操作中に、このメソッドは、選択またはフォーカスを示さずにレンダラーを構成して、それらが印刷出力に表示されないようにします。テーブルが印刷されているかどうかに基づいて他のカスタマイズを行うには、ここまたはカスタムレンダラー内で&lt;a href=&quot;jcomponent#isPaintingForPrint()&quot;&gt; &lt;code&gt;JComponent.isPaintingForPrint()&lt;/code&gt; の&lt;/a&gt;値を確認できます。</target>
        </trans-unit>
        <trans-unit id="dd9e7305d6169e832a8666decf5e9435a990d998" translate="yes" xml:space="preserve">
          <source>During activation, this &lt;code&gt;exportObject&lt;/code&gt; method should be invoked explicitly by an &quot;activatable&quot; object, that does not extend the &lt;code&gt;Activatable&lt;/code&gt; class. There is no need for objects that do extend the &lt;code&gt;Activatable&lt;/code&gt; class to invoke this method directly because the object is exported during construction.</source>
          <target state="translated">アクティベーション中、本 &lt;code&gt;exportObject&lt;/code&gt; メソッドは、拡張しない「起動可能」オブジェクトによって明示的に呼び出されるべき &lt;code&gt;Activatable&lt;/code&gt; クラスを。オブジェクトは構築中にエクスポートされるため、 &lt;code&gt;Activatable&lt;/code&gt; クラスを拡張するオブジェクトがこのメソッドを直接呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="d7430c68778e764878f75c32d9dc9dc282112593" translate="yes" xml:space="preserve">
          <source>During all resize operations, apply adjustments to the last column only.</source>
          <target state="translated">すべてのリサイズ操作の間、最後の列にのみ調整を適用します。</target>
        </trans-unit>
        <trans-unit id="0114beb6fe87f447442305a0692be122c46f0992" translate="yes" xml:space="preserve">
          <source>During all resize operations, proportionately resize all columns.</source>
          <target state="translated">すべてのリサイズ操作の間、すべての列のサイズを比例して変更します。</target>
        </trans-unit>
        <trans-unit id="5baaeef5b81524f57c1b5477112c0d961d0ffae1" translate="yes" xml:space="preserve">
          <source>During annotation processing, operating on incomplete or erroneous programs is necessary; however, there are fewer guarantees about the nature of the resulting model. If the source code is not syntactically well-formed or has some other irrecoverable error that could not be removed by the generation of new types, a model may or may not be provided as a quality of implementation issue. If a program is syntactically valid but erroneous in some other fashion, any returned model must have no less information than if all the method bodies in the program were replaced by &lt;code&gt;&quot;throw
 new RuntimeException();&quot;&lt;/code&gt;. If a program refers to a missing type XYZ, the returned model must contain no less information than if the declaration of type XYZ were assumed to be &lt;code&gt;&quot;class XYZ {}&quot;&lt;/code&gt;, &lt;code&gt;&quot;interface XYZ {}&quot;&lt;/code&gt;, &lt;code&gt;&quot;enum XYZ {}&quot;&lt;/code&gt;, or &lt;code&gt;&quot;@interface XYZ {}&quot;&lt;/code&gt;. If a program refers to a missing type &lt;code&gt;XYZ&amp;lt;K1, ... ,Kn&amp;gt;&lt;/code&gt;, the returned model must contain no less information than if the declaration of XYZ were assumed to be &lt;code&gt;&quot;class XYZ&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt; or &lt;code&gt;&quot;interface XYZ&amp;lt;T1,
 ... ,Tn&amp;gt; {}&quot;&lt;/code&gt;</source>
          <target state="translated">注釈処理中に、不完全または誤ったプログラムでの操作が必要です。ただし、結果のモデルの性質に関する保証は少なくなります。ソースコードが構文的に整形式でない場合、または新しい型の生成で削除できないその他の回復不可能なエラーがある場合、モデルは実装品質の問題として提供される場合と提供されない場合があります。プログラムが構文的に有効であるが他の方法でエラーがある場合、返されるモデルには、プログラム内のすべてのメソッド本体が &lt;code&gt;&quot;throw new RuntimeException();&quot;&lt;/code&gt; 置き換えられた場合よりも多くの情報が含まれている必要があります。。プログラムが欠落しているタイプXYZ​​を参照する場合、返されるモデルには、タイプXYZ​​の宣言が &lt;code&gt;&quot;class XYZ {}&quot;&lt;/code&gt; であると想定された場合よりも多くの情報が含まれている必要があります。 &lt;code&gt;&quot;interface XYZ {}&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;enum XYZ {}&quot;&lt;/code&gt; 、または &lt;code&gt;&quot;@interface XYZ {}&quot;&lt;/code&gt; 。プログラムが欠落している型 &lt;code&gt;XYZ&amp;lt;K1, ... ,Kn&amp;gt;&lt;/code&gt; 場合、返されるモデルには、XYZの宣言が &lt;code&gt;&quot;class XYZ&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt; または &lt;code&gt;&quot;interface XYZ&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8958d784830ce6a200c7dfa6475c25bbad993fb7" translate="yes" xml:space="preserve">
          <source>During annotation processing, operating on incomplete or erroneous programs is necessary; however, there are fewer guarantees about the nature of the resulting model. If the source code is not syntactically well-formed or has some other irrecoverable error that could not be removed by the generation of new types, a model may or may not be provided as a quality of implementation issue. If a program is syntactically valid but erroneous in some other fashion, any returned model must have no less information than if all the method bodies in the program were replaced by &lt;code&gt;&quot;throw
 new RuntimeException();&quot;&lt;/code&gt;. If a program refers to a missing type Xyz, the returned model must contain no less information than if the declaration of type Xyz were assumed to be &lt;code&gt;&quot;class Xyz {}&quot;&lt;/code&gt;, &lt;code&gt;&quot;interface Xyz {}&quot;&lt;/code&gt;, &lt;code&gt;&quot;enum Xyz {}&quot;&lt;/code&gt;, or &lt;code&gt;
 &quot;@interface Xyz {}&quot;&lt;/code&gt;. If a program refers to a missing type &lt;code&gt;
 Xyz&amp;lt;K1, ... ,Kn&amp;gt;&lt;/code&gt;, the returned model must contain no less information than if the declaration of Xyz were assumed to be &lt;code&gt;&quot;class Xyz&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt; or &lt;code&gt;&quot;interface Xyz&amp;lt;T1,
 ... ,Tn&amp;gt; {}&quot;&lt;/code&gt;</source>
          <target state="translated">注釈処理中は、不完全または誤ったプログラムを操作する必要があります。ただし、結果のモデルの性質に関する保証はほとんどありません。ソースコードが構文的に整形式でない場合、または新しいタイプの生成では削除できないその他の回復不能なエラーがある場合、モデルは実装品質の問題として提供される場合と提供されない場合があります。プログラムが構文的には有効であるが、他の方法でエラーがある場合、返されるモデルには、プログラム内のすべてのメソッド本体が &lt;code&gt;&quot;throw new RuntimeException();&quot;&lt;/code&gt; 置き換えられた場合と同じ情報が含まれている必要があります。。プログラムが欠落しているタイプXyzを参照している場合、返されるモデルには、タイプXyzの宣言が &lt;code&gt;&quot;class Xyz {}&quot;&lt;/code&gt; であると想定されている場合と同じくらいの情報が含まれている必要があります。 &lt;code&gt;&quot;interface Xyz {}&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;enum Xyz {}&quot;&lt;/code&gt; 、または &lt;code&gt; &quot;@interface Xyz {}&quot;&lt;/code&gt; 。プログラムが欠落しているタイプ &lt;code&gt; Xyz&amp;lt;K1, ... ,Kn&amp;gt;&lt;/code&gt; 場合、返されるモデルには、Xyzの宣言が &lt;code&gt;&quot;class Xyz&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt; と想定される場合と同じ情報が含まれている必要があります。 } &quot;または &lt;code&gt;&quot;interface Xyz&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ad63436fe53870079ebcacc9ae838ad488776b8" translate="yes" xml:space="preserve">
          <source>During class loading, this method may be called by the &lt;code&gt;loadClass&lt;/code&gt; method of class loaders and by the Java Virtual Machine to ensure that the caller is allowed to access the package of the class that is being loaded.</source>
          <target state="translated">クラスのロード中に、このメソッドは、クラスローダーの &lt;code&gt;loadClass&lt;/code&gt; メソッドおよびJava仮想マシンによって呼び出され、ロードされているクラスのパッケージへのアクセスが呼び出し元に許可されるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="73c68ded4bdace8585d879839684caafefa0d673" translate="yes" xml:space="preserve">
          <source>During construction a provider may safely access files associated with the default provider but care needs to be taken to avoid circular loading of other installed providers. If circular loading of installed providers is detected then an unspecified error is thrown.</source>
          <target state="translated">構築中のプロバイダは、デフォルトのプロバイダに関連付けられたファイルに安全にアクセスすることができますが、インストールされている他のプロバイダが循環ロードされないように注意する必要があります。インストールされているプロバイダのサーキュラーロードが検出された場合は、指定されていないエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="aab994d11cc97346f4de77f9ddf9299dcb995a3b" translate="yes" xml:space="preserve">
          <source>During construction of the call site, the &lt;code&gt;createTargetHook&lt;/code&gt; is invoked to produce the actual target, as if by a call of the form &lt;code&gt;(MethodHandle) createTargetHook.invoke(this)&lt;/code&gt;.</source>
          <target state="translated">呼び出しサイトの構築中に、フォーム &lt;code&gt;(MethodHandle) createTargetHook.invoke(this)&lt;/code&gt; 呼び出しのように、実際のターゲットを作成するために &lt;code&gt;createTargetHook&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2ee3bdf7216945802928da957e4f64abef1a8bbd" translate="yes" xml:space="preserve">
          <source>During deserialization, readResolve adds extensions as described in &lt;a href=&quot;#special_cases_constructor&quot;&gt;Special Cases&lt;/a&gt;, only for the two cases th_TH_TH and ja_JP_JP.</source>
          <target state="translated">逆シリアル化中に、readResolveは、&lt;a href=&quot;#special_cases_constructor&quot;&gt;特殊なケース&lt;/a&gt;で説明されているように、th_TH_THとja_JP_JPの2つのケースに対してのみ拡張機能を追加します。</target>
        </trans-unit>
        <trans-unit id="5bfd28f5cdef20bd56b959fde27381521c4de273" translate="yes" xml:space="preserve">
          <source>During deserialization, the fields of non-serializable classes will be initialized using the public or protected no-arg constructor of the class. A no-arg constructor must be accessible to the subclass that is serializable. The fields of serializable subclasses will be restored from the stream.</source>
          <target state="translated">デシリアライズの間、シリアライズ不可能なクラスのフィールドは、クラスの public または protected の no-arg コンストラクタを使用して初期化されます。no-arg コンストラクタは、シリアライズ可能なサブクラスにアクセス可能でなければなりません。シリアライズ可能なサブクラスのフィールドは、ストリームから復元されます。</target>
        </trans-unit>
        <trans-unit id="ceb751d5e03d16820dfaa9405c9d350874e914b8" translate="yes" xml:space="preserve">
          <source>During each run of an annotation processing tool, a file with a given pathname may be created only once. If that file already exists before the first attempt to create it, the old contents will be deleted. Any subsequent attempt to create the same file during a run will throw a &lt;a href=&quot;filerexception&quot;&gt;&lt;code&gt;FilerException&lt;/code&gt;&lt;/a&gt;, as will attempting to create both a class file and source file for the same type name or same package name. The &lt;a href=&quot;processor&quot;&gt;initial inputs&lt;/a&gt; to the tool are considered to be created by the zeroth round; therefore, attempting to create a source or class file corresponding to one of those inputs will result in a &lt;a href=&quot;filerexception&quot;&gt;&lt;code&gt;FilerException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注釈処理ツールの各実行中に、指定されたパス名を持つファイルは1回だけ作成できます。最初に作成しようとする前にそのファイルが既に存在する場合は、古い内容が削除されます。実行中に同じファイルを作成しようとすると、同じタイプ名または同じパッケージ名のクラスファイルとソースファイルの両方を作成しようとすると、&lt;a href=&quot;filerexception&quot;&gt; &lt;code&gt;FilerException&lt;/code&gt; &lt;/a&gt;がスローされます。ツールへの&lt;a href=&quot;processor&quot;&gt;初期入力&lt;/a&gt;は、0番目のラウンドによって作成されたと見なされます。したがって、これらの入力の1つに対応するソースファイルまたはクラスファイルを作成しようとすると、&lt;a href=&quot;filerexception&quot;&gt; &lt;code&gt;FilerException&lt;/code&gt; が発生し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="3f3ada5a92d2551334675e5e215cd9285f9b8513" translate="yes" xml:space="preserve">
          <source>During each selection operation, keys may be added to and removed from a selector's selected-key set and may be removed from its key and cancelled-key sets. Selection is performed by the &lt;a href=&quot;#select()&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#select(long)&quot;&gt;&lt;code&gt;select(long)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#selectNow()&quot;&gt;&lt;code&gt;selectNow()&lt;/code&gt;&lt;/a&gt; methods, and involves three steps:</source>
          <target state="translated">各選択操作中に、キーはセレクターの選択されたキーセットに追加および削除され、キーおよびキャンセルされたキーセットから削除される場合があります。選択は、&lt;a href=&quot;#select()&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#select(long)&quot;&gt; &lt;code&gt;select(long)&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#selectNow()&quot;&gt; &lt;code&gt;selectNow()&lt;/code&gt; &lt;/a&gt;メソッドによって実行され、次の3つのステップが含まれます。</target>
        </trans-unit>
        <trans-unit id="6cf3cfdd5430b93d98f5fbd3648fab52ea500d64" translate="yes" xml:space="preserve">
          <source>During each selection operation, keys may be added to and removed from a selector's selected-key set and may be removed from its key and cancelled-key sets. Selection is performed by the &lt;a href=&quot;selector#select--&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;selector#select-long-&quot;&gt;&lt;code&gt;select(long)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;selector#selectNow--&quot;&gt;&lt;code&gt;selectNow()&lt;/code&gt;&lt;/a&gt; methods, and involves three steps:</source>
          <target state="translated">各選択操作中に、セレクターの選択されたキーセットにキーを追加したり、選択したキーセットからキーを削除したり、キーおよびキャンセルされたキーセットからキーを削除したりできます。選択は、&lt;a href=&quot;selector#select--&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;selector#select-long-&quot;&gt; &lt;code&gt;select(long)&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;selector#selectNow--&quot;&gt; &lt;code&gt;selectNow()&lt;/code&gt; &lt;/a&gt;メソッドによって実行され、3つのステップが含まれます。</target>
        </trans-unit>
        <trans-unit id="526fc8a940a28d229a1e6941a46252450e0f279a" translate="yes" xml:space="preserve">
          <source>During each selection operation, keys may be removed from the selector's key, selected-key, and cancelled-key sets. Selection is performed by the &lt;a href=&quot;#select(java.util.function.Consumer)&quot;&gt;&lt;code&gt;select(Consumer)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#select(java.util.function.Consumer,long)&quot;&gt;&lt;code&gt;select(Consumer,long)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#selectNow(java.util.function.Consumer)&quot;&gt;&lt;code&gt;selectNow(Consumer)&lt;/code&gt;&lt;/a&gt; methods, and involves three steps:</source>
          <target state="translated">各選択操作中に、キーはセレクターのキー、選択されたキー、およびキャンセルされたキーのセットから削除される場合があります。選択は、&lt;a href=&quot;#select(java.util.function.Consumer)&quot;&gt; &lt;code&gt;select(Consumer)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#select(java.util.function.Consumer,long)&quot;&gt; &lt;code&gt;select(Consumer,long)&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#selectNow(java.util.function.Consumer)&quot;&gt; &lt;code&gt;selectNow(Consumer)&lt;/code&gt; &lt;/a&gt;メソッドによって実行され、次の3つのステップが含まれます。</target>
        </trans-unit>
        <trans-unit id="7d9e243c16cda77441eb0ed9e930e56f1971cc38" translate="yes" xml:space="preserve">
          <source>During formatting, if the source logger has a localization ResourceBundle and if that ResourceBundle has an entry for this message string, then the message string is replaced with the localized value.</source>
          <target state="translated">フォーマット中、ソース ロガーにローカライズ リソース バンドルがあり、そのリソース バンドルにこのメッセージ文字列のエントリがある場合、メッセージ文字列はローカライズされた値に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="f04fb4b29df71846a3f149bba037dad9efa195df" translate="yes" xml:space="preserve">
          <source>During formatting, the chronology is obtained from the temporal object being formatted, which may have been overridden by &lt;a href=&quot;datetimeformatter#withChronology(java.time.chrono.Chronology)&quot;&gt;&lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;FULL&lt;/code&gt; and &lt;code&gt;LONG&lt;/code&gt; styles typically require a time-zone. When formatting using these styles, a &lt;code&gt;ZoneId&lt;/code&gt; must be available, either by using &lt;code&gt;ZonedDateTime&lt;/code&gt; or &lt;a href=&quot;datetimeformatter#withZone(java.time.ZoneId)&quot;&gt;&lt;code&gt;DateTimeFormatter.withZone(java.time.ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">書式設定中に、年代順は、書式設定されている時間オブジェクトから取得されます。これは、&lt;a href=&quot;datetimeformatter#withChronology(java.time.chrono.Chronology)&quot;&gt; &lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt; &lt;/a&gt;によってオーバーライドされている可能性があります。 &lt;code&gt;FULL&lt;/code&gt; と &lt;code&gt;LONG&lt;/code&gt; スタイルは、通常時間帯が必要です。これらのスタイルを使用してフォーマットする場合、 &lt;code&gt;ZoneId&lt;/code&gt; 使用するか、利用可能でなければならない &lt;code&gt;ZonedDateTime&lt;/code&gt; または&lt;a href=&quot;datetimeformatter#withZone(java.time.ZoneId)&quot;&gt; &lt;code&gt;DateTimeFormatter.withZone(java.time.ZoneId)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b6963c06744c4cb921f8204e451cdd87da55bf7d" translate="yes" xml:space="preserve">
          <source>During formatting, the chronology is obtained from the temporal object being formatted, which may have been overridden by &lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt;&lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">書式設定中、日付順は、書式設定される一時オブジェクトから取得されます。これは、&lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt; &lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt; &lt;/a&gt;によってオーバーライドされた可能性があります。</target>
        </trans-unit>
        <trans-unit id="74fba356e520df89aabe92afe5884eb28f5d1d8a" translate="yes" xml:space="preserve">
          <source>During formatting, the chronology is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#chronology()&quot;&gt;&lt;code&gt;TemporalQueries.chronology()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../chrono/chronology#getId()&quot;&gt;&lt;code&gt;Chronology.getId()&lt;/code&gt;&lt;/a&gt;. If the chronology cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">書式設定中に、&lt;a href=&quot;../temporal/temporalqueries#chronology()&quot;&gt; &lt;code&gt;TemporalQueries.chronology()&lt;/code&gt; &lt;/a&gt;でテンポラルをクエリするのと同等のメカニズムを使用して年表が取得されます。&lt;a href=&quot;../chrono/chronology#getId()&quot;&gt; &lt;code&gt;Chronology.getId()&lt;/code&gt; の&lt;/a&gt;結果を使用して出力されます。年表を取得できない場合、フォーマッタのセクションがオプションでない限り、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="3fe08a816cee454a7061ca9b0c45783e70300ef1" translate="yes" xml:space="preserve">
          <source>During formatting, the chronology is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#chronology--&quot;&gt;&lt;code&gt;TemporalQueries.chronology()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../chrono/chronology#getId--&quot;&gt;&lt;code&gt;Chronology.getId()&lt;/code&gt;&lt;/a&gt;. If the chronology cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">フォーマット中、年代は&lt;a href=&quot;../temporal/temporalqueries#chronology--&quot;&gt; &lt;code&gt;TemporalQueries.chronology()&lt;/code&gt; &lt;/a&gt;で時相をクエリするのと同等のメカニズムを使用して取得されます。&lt;a href=&quot;../chrono/chronology#getId--&quot;&gt; &lt;code&gt;Chronology.getId()&lt;/code&gt; の&lt;/a&gt;結果を使用して出力されます。年代を取得できない場合、フォーマッターのセクションがオプションでない限り、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="f2ec18985e92563f7bff4cbe40bd1216047db6f6" translate="yes" xml:space="preserve">
          <source>During formatting, the decorated element will be output and then padded to the specified width. An exception will be thrown during formatting if the pad width is exceeded.</source>
          <target state="translated">書式化の際には、装飾された要素が出力され、指定された幅にパッドされます。パッド幅を超えた場合は、フォーマット中に例外が発生します。</target>
        </trans-unit>
        <trans-unit id="ff13468242ddc1c4613967e184702ea8b0dc5fa7" translate="yes" xml:space="preserve">
          <source>During formatting, the offset is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#offset()&quot;&gt;&lt;code&gt;TemporalQueries.offset()&lt;/code&gt;&lt;/a&gt;. If the offset cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">フォーマット中に、&lt;a href=&quot;../temporal/temporalqueries#offset()&quot;&gt; &lt;code&gt;TemporalQueries.offset()&lt;/code&gt; &lt;/a&gt;でテンポラルをクエリするのと同等のメカニズムを使用してオフセットが取得されます。オフセットを取得できない場合、フォーマッタのセクションがオプションでない限り、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="de60ee907a416e3af160df16e30ced3594b5afe6" translate="yes" xml:space="preserve">
          <source>During formatting, the offset is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#offset()&quot;&gt;&lt;code&gt;TemporalQueries.offset()&lt;/code&gt;&lt;/a&gt;. It will be printed using the format defined below. If the offset cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">フォーマット中に、&lt;a href=&quot;../temporal/temporalqueries#offset()&quot;&gt; &lt;code&gt;TemporalQueries.offset()&lt;/code&gt; &lt;/a&gt;でテンポラルをクエリするのと同等のメカニズムを使用してオフセットが取得されます。以下に定義するフォーマットを使用して印刷されます。オフセットを取得できない場合、フォーマッタのセクションがオプションでない限り、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="8ac3f1128556516e29fb027d1ef90561f196b709" translate="yes" xml:space="preserve">
          <source>During formatting, the offset is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#offset--&quot;&gt;&lt;code&gt;TemporalQueries.offset()&lt;/code&gt;&lt;/a&gt;. If the offset cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">フォーマット中に、&lt;a href=&quot;../temporal/temporalqueries#offset--&quot;&gt; &lt;code&gt;TemporalQueries.offset()&lt;/code&gt; &lt;/a&gt;を使用してテンポラルをクエリするのと同等のメカニズムを使用してオフセットが取得されます。オフセットを取得できない場合、フォーマッタのセクションがオプションでない限り、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="85927a4e03a6fbb6585d9de9788314d845c99776" translate="yes" xml:space="preserve">
          <source>During formatting, the offset is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#offset--&quot;&gt;&lt;code&gt;TemporalQueries.offset()&lt;/code&gt;&lt;/a&gt;. It will be printed using the format defined below. If the offset cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">フォーマット中に、&lt;a href=&quot;../temporal/temporalqueries#offset--&quot;&gt; &lt;code&gt;TemporalQueries.offset()&lt;/code&gt; &lt;/a&gt;を使用してテンポラルをクエリするのと同等のメカニズムを使用してオフセットが取得されます。以下で定義されたフォーマットを使用して印刷されます。オフセットを取得できない場合、フォーマッタのセクションがオプションでない限り、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="c857ac6bff4d5a1296b0a77002e3ec1931ab0b57" translate="yes" xml:space="preserve">
          <source>During formatting, the value is obtained and checked that it is in the valid range. If text is not available for the value then it is output as a number. During parsing, the parser will match against the map of text and numeric values.</source>
          <target state="translated">フォーマット中に、値が取得され、それが有効な範囲内にあるかどうかがチェックされます。テキストが値に利用できない場合は、数値として出力されます。解析中、パーサはテキストと数値のマップと一致します。</target>
        </trans-unit>
        <trans-unit id="ad699c5ee7b8d28dfde1713b1d32205b21703bae" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zone()&quot;&gt;&lt;code&gt;TemporalQueries.zone()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../zoneid#getId()&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">フォーマット中に、&lt;a href=&quot;../temporal/temporalqueries#zone()&quot;&gt; &lt;code&gt;TemporalQueries.zone()&lt;/code&gt; &lt;/a&gt;でテンポラルをクエリするのと同等のメカニズムを使用してゾーンが取得されます。&lt;a href=&quot;../zoneid#getId()&quot;&gt; &lt;code&gt;ZoneId.getId()&lt;/code&gt; の&lt;/a&gt;結果を使用して出力されます。ゾーンを取得できない場合、フォーマッタのセクションがオプションでない限り、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="6328c4cece7134fad021cacd94431ba5256de481" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zone--&quot;&gt;&lt;code&gt;TemporalQueries.zone()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">フォーマット時に、ゾーンは&lt;a href=&quot;../temporal/temporalqueries#zone--&quot;&gt; &lt;code&gt;TemporalQueries.zone()&lt;/code&gt; &lt;/a&gt;を使用して一時を照会するのと同等のメカニズムを使用して取得されます。&lt;a href=&quot;../zoneid#getId--&quot;&gt; &lt;code&gt;ZoneId.getId()&lt;/code&gt; の&lt;/a&gt;結果を使用して出力されます。ゾーンを取得できない場合、フォーマッタのセクションがオプションでない限り、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="216da154816a11e1dbbd0448af0b02ede1c88f3b" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. If the zone is a &lt;code&gt;ZoneOffset&lt;/code&gt; it will be printed using the result of &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;ZoneOffset.getId()&lt;/code&gt;&lt;/a&gt;. If the zone is not an offset, the textual name will be looked up for the locale set in the &lt;a href=&quot;datetimeformatter&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt;. If the lookup for text does not find any suitable result, then the &lt;a href=&quot;../zoneid#getId()&quot;&gt;&lt;code&gt;ID&lt;/code&gt;&lt;/a&gt; will be printed. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">フォーマット中に、&lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt;でテンポラルをクエリするのと同等のメカニズムを使用してゾーンが取得されます。ゾーンが &lt;code&gt;ZoneOffset&lt;/code&gt; の場合、&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;ZoneOffset.getId()&lt;/code&gt; の&lt;/a&gt;結果を使用して出力されます。ゾーンがオフセットでない場合、テキスト名は&lt;a href=&quot;datetimeformatter&quot;&gt; &lt;code&gt;DateTimeFormatter&lt;/code&gt; で&lt;/a&gt;設定されたロケールを検索します。テキストを検索しても適切な結果が見つからない場合は、&lt;a href=&quot;../zoneid#getId()&quot;&gt; &lt;code&gt;ID&lt;/code&gt; &lt;/a&gt;が出力されます。ゾーンを取得できない場合、フォーマッタのセクションがオプションでない限り、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="0b6aa3354127a44f90e045461c83eb875d4e93f4" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. If the zone is a &lt;code&gt;ZoneOffset&lt;/code&gt; it will be printed using the result of &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;ZoneOffset.getId()&lt;/code&gt;&lt;/a&gt;. If the zone is not an offset, the textual name will be looked up for the locale set in the &lt;a href=&quot;datetimeformatter&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt;. If the temporal object being printed represents an instant, or if it is a local date-time that is not in a daylight saving gap or overlap then the text will be the summer or winter time text as appropriate. If the lookup for text does not find any suitable result, then the &lt;a href=&quot;../zoneid#getId()&quot;&gt;&lt;code&gt;ID&lt;/code&gt;&lt;/a&gt; will be printed. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">フォーマット中に、&lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt;でテンポラルをクエリするのと同等のメカニズムを使用してゾーンが取得されます。ゾーンが &lt;code&gt;ZoneOffset&lt;/code&gt; の場合、&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;ZoneOffset.getId()&lt;/code&gt; の&lt;/a&gt;結果を使用して出力されます。ゾーンがオフセットでない場合、テキスト名は&lt;a href=&quot;datetimeformatter&quot;&gt; &lt;code&gt;DateTimeFormatter&lt;/code&gt; で&lt;/a&gt;設定されたロケールを検索します。印刷される時間オブジェクトが瞬間を表す場合、または夏時間のギャップやオーバーラップにないローカル日時である場合、テキストは必要に応じて夏時間または冬時間のテキストになります。テキストを検索しても適切な結果が見つからない場合は、&lt;a href=&quot;../zoneid#getId()&quot;&gt; &lt;code&gt;ID&lt;/code&gt; &lt;/a&gt;印刷されます。ゾーンを取得できない場合、フォーマッタのセクションがオプションでない限り、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="d1ef018ba281e8f169e3ca2ca76db9f9da00b97d" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. If the zone is a &lt;code&gt;ZoneOffset&lt;/code&gt; it will be printed using the result of &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;ZoneOffset.getId()&lt;/code&gt;&lt;/a&gt;. If the zone is not an offset, the textual name will be looked up for the locale set in the &lt;a href=&quot;datetimeformatter&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt;. If the temporal object being printed represents an instant, or if it is a local date-time that is not in a daylight saving gap or overlap, then the text will be the summer or winter time text as appropriate. If the lookup for text does not find any suitable result, then the &lt;a href=&quot;../zoneid#getId()&quot;&gt;&lt;code&gt;ID&lt;/code&gt;&lt;/a&gt; will be printed. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">フォーマット中に、&lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt;でテンポラルをクエリするのと同等のメカニズムを使用してゾーンが取得されます。ゾーンが &lt;code&gt;ZoneOffset&lt;/code&gt; の場合、&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;ZoneOffset.getId()&lt;/code&gt; の&lt;/a&gt;結果を使用して出力されます。ゾーンがオフセットでない場合、テキスト名は&lt;a href=&quot;datetimeformatter&quot;&gt; &lt;code&gt;DateTimeFormatter&lt;/code&gt; で&lt;/a&gt;設定されたロケールを検索します。印刷される時間オブジェクトが瞬間を表す場合、または夏時間のギャップやオーバーラップにないローカル日時である場合、テキストは必要に応じて夏時間または冬時間のテキストになります。テキストを検索しても適切な結果が見つからない場合は、&lt;a href=&quot;../zoneid#getId()&quot;&gt; &lt;code&gt;ID&lt;/code&gt; &lt;/a&gt;印刷されます。ゾーンを取得できない場合、フォーマッタのセクションがオプションでない限り、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="a3713c35347517f9330778e8fd5cfc4ae24cfb0a" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. If the zone is a &lt;code&gt;ZoneOffset&lt;/code&gt; or it cannot be obtained then an exception is thrown unless the section of the formatter is optional. If the zone is not an offset, then the zone will be printed using the zone ID from &lt;a href=&quot;../zoneid#getId()&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フォーマット中に、&lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt;でテンポラルをクエリするのと同等のメカニズムを使用してゾーンが取得されます。ゾーンが &lt;code&gt;ZoneOffset&lt;/code&gt; であるか、取得できない場合、フォーマッターのセクションがオプションでない限り、例外がスローされます。ゾーンがオフセットでない場合、ゾーンは&lt;a href=&quot;../zoneid#getId()&quot;&gt; &lt;code&gt;ZoneId.getId()&lt;/code&gt; の&lt;/a&gt;ゾーンIDを使用して印刷されます。</target>
        </trans-unit>
        <trans-unit id="5dcc104caca1c87b9ebc120049e93638c8e87174" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../zoneid#getId()&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">フォーマット中に、&lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt;でテンポラルをクエリするのと同等のメカニズムを使用してゾーンが取得されます。&lt;a href=&quot;../zoneid#getId()&quot;&gt; &lt;code&gt;ZoneId.getId()&lt;/code&gt; の&lt;/a&gt;結果を使用して出力されます。ゾーンを取得できない場合、フォーマッタのセクションがオプションでない限り、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="7ae95362869ef373f422eeea5fbbfb739c07fd82" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. If the zone is a &lt;code&gt;ZoneOffset&lt;/code&gt; it will be printed using the result of &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;ZoneOffset.getId()&lt;/code&gt;&lt;/a&gt;. If the zone is not an offset, the textual name will be looked up for the locale set in the &lt;a href=&quot;datetimeformatter&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt;. If the temporal object being printed represents an instant, then the text will be the summer or winter time text as appropriate. If the lookup for text does not find any suitable result, then the &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;ID&lt;/code&gt;&lt;/a&gt; will be printed instead. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">フォーマット時に、ゾーンは&lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt;を使用して一時をクエリするのと同等のメカニズムを使用して取得されます。ゾーンが &lt;code&gt;ZoneOffset&lt;/code&gt; の場合、&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;ZoneOffset.getId()&lt;/code&gt; の&lt;/a&gt;結果を使用して出力されます。ゾーンがオフセットでない場合、テキスト名は、&lt;a href=&quot;datetimeformatter&quot;&gt; &lt;code&gt;DateTimeFormatter&lt;/code&gt; で&lt;/a&gt;設定されたロケールに対して検索されます。印刷される一時オブジェクトがインスタントを表す場合、テキストは適切に夏時間または冬時間のテキストになります。テキストの検索で適切な結果が見つからない場合は、代わりに&lt;a href=&quot;../zoneid#getId--&quot;&gt; &lt;code&gt;ID&lt;/code&gt; &lt;/a&gt;が出力されます。ゾーンを取得できない場合、フォーマッタのセクションがオプションでない限り、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="d3b90c96a7fcf7a451966988e3a176ba0847ac13" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. If the zone is a &lt;code&gt;ZoneOffset&lt;/code&gt; or it cannot be obtained then an exception is thrown unless the section of the formatter is optional. If the zone is not an offset, then the zone will be printed using the zone ID from &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フォーマット時に、ゾーンは&lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt;を使用して一時をクエリするのと同等のメカニズムを使用して取得されます。ゾーンが &lt;code&gt;ZoneOffset&lt;/code&gt; であるか取得できない場合、フォーマッタのセクションがオプションでない限り、例外がスローされます。ゾーンがオフセットでない場合、ゾーンは&lt;a href=&quot;../zoneid#getId--&quot;&gt; &lt;code&gt;ZoneId.getId()&lt;/code&gt; の&lt;/a&gt;ゾーンIDを使用して印刷されます。</target>
        </trans-unit>
        <trans-unit id="2aa240fcbe863a7ef78f61d18a24054e27225dc2" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">フォーマット時に、ゾーンは&lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt;を使用して一時をクエリするのと同等のメカニズムを使用して取得されます。&lt;a href=&quot;../zoneid#getId--&quot;&gt; &lt;code&gt;ZoneId.getId()&lt;/code&gt; の&lt;/a&gt;結果を使用して出力されます。ゾーンを取得できない場合、フォーマッタのセクションがオプションでない限り、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="4c7804966f6935eab96626a07987e4d2d482291f" translate="yes" xml:space="preserve">
          <source>During formatting, this method has no effect.</source>
          <target state="translated">フォーマット中は、このメソッドは何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="2d396df68a68a3f28ecd5b773a14e9ffc2a19267" translate="yes" xml:space="preserve">
          <source>During handshaking, if the URL's hostname and the server's identification hostname mismatch, the verification mechanism can call back to implementers of this interface to determine if this connection should be allowed.</source>
          <target state="translated">ハンドシェイク中に、URL のホスト名とサーバの識別ホスト名が不一致の場合、検証メカニズムは、この接続が許可されるべきかどうかを判断するために、このインターフェイスの実装者にコールバックすることができます。</target>
        </trans-unit>
        <trans-unit id="3823e4f42960cf811d86c35e7313859bfd3657ea" translate="yes" xml:space="preserve">
          <source>During mouse events caused by the depression or release of a mouse button, &lt;code&gt;button&lt;/code&gt; is used to indicate which mouse button changed state.</source>
          <target state="translated">マウスボタンの押下または離しによって引き起こされるマウスイベント中に、 &lt;code&gt;button&lt;/code&gt; はどのマウスボタンが状態を変更したかを示すために使用されます。</target>
        </trans-unit>
        <trans-unit id="f0dd78a4d0c5a2b8f2f8358f44f6e1f64d6c419e" translate="yes" xml:space="preserve">
          <source>During mouse events caused by the depression or release of a mouse button, &lt;code&gt;button&lt;/code&gt; is used to indicate which mouse button changed state. The values for &lt;code&gt;button&lt;/code&gt; range from zero to indicate the left button of the mouse, one to indicate the middle button if present, and two to indicate the right button. For mice configured for left handed use in which the button actions are reversed the values are instead read from right to left.</source>
          <target state="translated">マウスボタンの押下または離しによって引き起こされるマウスイベント中に、 &lt;code&gt;button&lt;/code&gt; はどのマウスボタンが状態を変更したかを示すために使用されます。 &lt;code&gt;button&lt;/code&gt; の値の範囲は、マウスの左ボタンを示すゼロ、存在する場合は中央のボタンを示す1、右ボタンを示す2です。ボタンの動作が逆になる左利き用に構成されたマウスの場合、値は代わりに右から左に読み取られます。</target>
        </trans-unit>
        <trans-unit id="0eb8b734c98b923f91249267c6bd8f5f84416330" translate="yes" xml:space="preserve">
          <source>During object input, convert this deserialized enumeration instance to the proper enumeration value defined in the enumeration attribute class.</source>
          <target state="translated">オブジェクト入力時に、このデシリアライズされた列挙インスタンスを列挙属性クラスで定義された適切な列挙値に変換します。</target>
        </trans-unit>
        <trans-unit id="dd4918c0179f00ea2f3e61a3ac5fbc6f82bb13ac" translate="yes" xml:space="preserve">
          <source>During parsing, either the textual zone name, the zone ID or the offset is accepted. Many textual zone names are not unique, such as CST can be for both &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;. In this situation, the zone id will be determined by the region information from formatter's &lt;a href=&quot;datetimeformatter#getLocale()&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; and the standard zone id for that area, for example, America/New_York for the America Eastern zone. The &lt;a href=&quot;#appendGenericZoneText(java.time.format.TextStyle,java.util.Set)&quot;&gt;&lt;code&gt;appendGenericZoneText(TextStyle, Set)&lt;/code&gt;&lt;/a&gt; may be used to specify a set of preferred &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt; in this situation.</source>
          <target state="translated">解析中に、テキストのゾーン名、ゾーンID、またはオフセットのいずれかが受け入れられます。 CSTは「中部標準時」と「中国標準時」の両方に対応できるなど、多くのテキストゾーン名は一意ではありません。この状況では、ゾーンIDは、フォーマッタの&lt;a href=&quot;datetimeformatter#getLocale()&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt;からのリージョン情報と、そのエリアの標準ゾーンID（たとえば、アメリカ東部ゾーンの場合はAmerica / New_York）によって決定されます。&lt;a href=&quot;#appendGenericZoneText(java.time.format.TextStyle,java.util.Set)&quot;&gt; &lt;code&gt;appendGenericZoneText(TextStyle, Set)&lt;/code&gt; &lt;/a&gt;の好ましいセットを指定するために使用され得る&lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; &lt;/a&gt;この状況で。</target>
        </trans-unit>
        <trans-unit id="464d388c1316b85fd38a83731987300f5156e587" translate="yes" xml:space="preserve">
          <source>During parsing, either the textual zone name, the zone ID or the offset is accepted. Many textual zone names are not unique, such as CST can be for both &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;. In this situation, the zone id will be determined by the region information from formatter's &lt;a href=&quot;datetimeformatter#getLocale()&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; and the standard zone id for that area, for example, America/New_York for the America Eastern zone. The &lt;a href=&quot;#appendZoneText(java.time.format.TextStyle,java.util.Set)&quot;&gt;&lt;code&gt;appendZoneText(TextStyle, Set)&lt;/code&gt;&lt;/a&gt; may be used to specify a set of preferred &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt; in this situation.</source>
          <target state="translated">解析中に、テキストのゾーン名、ゾーンID、またはオフセットのいずれかが受け入れられます。 CSTは「中部標準時」と「中国標準時」の両方に対応できるなど、多くのテキストゾーン名は一意ではありません。この状況では、ゾーンIDは、フォーマッタの&lt;a href=&quot;datetimeformatter#getLocale()&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt;からのリージョン情報と、そのエリアの標準ゾーンID（たとえば、アメリカ東部ゾーンの場合はAmerica / New_York）によって決定されます。&lt;a href=&quot;#appendZoneText(java.time.format.TextStyle,java.util.Set)&quot;&gt; &lt;code&gt;appendZoneText(TextStyle, Set)&lt;/code&gt; &lt;/a&gt;の好ましいセットを指定するために使用され得る&lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; &lt;/a&gt;この状況で。</target>
        </trans-unit>
        <trans-unit id="25665e8e548e7823762f251b6c1b60c45aaf0213" translate="yes" xml:space="preserve">
          <source>During parsing, either the textual zone name, the zone ID or the offset is accepted. Many textual zone names are not unique, such as CST can be for both &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;. In this situation, the zone id will be determined by the region information from formatter's &lt;a href=&quot;datetimeformatter#getLocale()&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; and the standard zone id for that area, for example, America/New_York for the America Eastern zone. This method also allows a set of preferred &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt; to be specified for parsing. The matched preferred zone id will be used if the textural zone name being parsed is not unique.</source>
          <target state="translated">解析中に、テキストのゾーン名、ゾーンID、またはオフセットのいずれかが受け入れられます。 CSTは「中部標準時」と「中国標準時」の両方に対応できるなど、多くのテキストゾーン名は一意ではありません。この状況では、ゾーンIDは、フォーマッタの&lt;a href=&quot;datetimeformatter#getLocale()&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt;からのリージョン情報と、そのエリアの標準ゾーンID（たとえば、アメリカ東部ゾーンの場合はAmerica / New_York）によって決定されます。このメソッドでは、解析用に優先&lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; の&lt;/a&gt;セットを指定することもできます。解析されるテクスチャゾーン名が一意でない場合、一致した優先ゾーンIDが使用されます。</target>
        </trans-unit>
        <trans-unit id="6aa0d719c8817b3e1d8fc50c109dd5db59b9f750" translate="yes" xml:space="preserve">
          <source>During parsing, either the textual zone name, the zone ID or the offset is accepted. Many textual zone names are not unique, such as CST can be for both &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;. In this situation, the zone id will be determined by the region information from formatter's &lt;a href=&quot;datetimeformatter#getLocale--&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; and the standard zone id for that area, for example, America/New_York for the America Eastern zone. The &lt;a href=&quot;datetimeformatterbuilder#appendZoneText-java.time.format.TextStyle-java.util.Set-&quot;&gt;&lt;code&gt;appendZoneText(TextStyle, Set)&lt;/code&gt;&lt;/a&gt; may be used to specify a set of preferred &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt; in this situation.</source>
          <target state="translated">解析中、テキストのゾーン名、ゾーンID、またはオフセットのいずれかが受け入れられます。 CSTは「中央標準時」と「中国標準時」の両方に使用できるなど、多くのテキストゾーン名は一意ではありません。この場合、ゾーンIDは、フォーマッターの&lt;a href=&quot;datetimeformatter#getLocale--&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt;からの地域情報とそのエリアの標準ゾーンID によって決定されます（たとえば、アメリカ東部ゾーンの場合はAmerica / New_York）。&lt;a href=&quot;datetimeformatterbuilder#appendZoneText-java.time.format.TextStyle-java.util.Set-&quot;&gt; &lt;code&gt;appendZoneText(TextStyle, Set)&lt;/code&gt; &lt;/a&gt;の好ましいセットを指定するために使用され得る&lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; &lt;/a&gt;この状況で。</target>
        </trans-unit>
        <trans-unit id="58a86560617fc9e4897a0988ef62e3f71d9b264c" translate="yes" xml:space="preserve">
          <source>During parsing, either the textual zone name, the zone ID or the offset is accepted. Many textual zone names are not unique, such as CST can be for both &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;. In this situation, the zone id will be determined by the region information from formatter's &lt;a href=&quot;datetimeformatter#getLocale--&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; and the standard zone id for that area, for example, America/New_York for the America Eastern zone. This method also allows a set of preferred &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt; to be specified for parsing. The matched preferred zone id will be used if the textural zone name being parsed is not unique.</source>
          <target state="translated">解析中、テキストのゾーン名、ゾーンID、またはオフセットのいずれかが受け入れられます。 CSTは「中央標準時」と「中国標準時」の両方に使用できるなど、多くのテキストゾーン名は一意ではありません。この場合、ゾーンIDは、フォーマッターの&lt;a href=&quot;datetimeformatter#getLocale--&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt;からの地域情報とそのエリアの標準ゾーンID によって決定されます（たとえば、アメリカ東部ゾーンの場合はAmerica / New_York）。このメソッドでは、解析用に一連の優先&lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; &lt;/a&gt;を指定することもできます。一致する優先ゾーンIDは、解析されるテクスチャゾーン名が一意でない場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="c0a9a1ba277c0d7094f6f5184deccbe7b259db3f" translate="yes" xml:space="preserve">
          <source>During parsing, if a chronology has already been parsed, then it is used. Otherwise the default from &lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt; is used, with &lt;code&gt;IsoChronology&lt;/code&gt; as the fallback.</source>
          <target state="translated">解析中に、年表がすでに解析されている場合は、それが使用されます。それ以外の場合は、 &lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt; のデフォルトが使用され、 &lt;code&gt;IsoChronology&lt;/code&gt; がフォールバックとして使用されます。</target>
        </trans-unit>
        <trans-unit id="716feed90ddcbbb95f038e15ce310e6d17f6f0c2" translate="yes" xml:space="preserve">
          <source>During parsing, the chronology is parsed and must match one of the chronologies in &lt;a href=&quot;../chrono/chronology#getAvailableChronologies()&quot;&gt;&lt;code&gt;Chronology.getAvailableChronologies()&lt;/code&gt;&lt;/a&gt;. If the chronology cannot be parsed then an exception is thrown unless the section of the formatter is optional. The parser uses the &lt;a href=&quot;#parseCaseInsensitive()&quot;&gt;case sensitive&lt;/a&gt; setting.</source>
          <target state="translated">解析中に、年表が解析され、&lt;a href=&quot;../chrono/chronology#getAvailableChronologies()&quot;&gt; &lt;code&gt;Chronology.getAvailableChronologies()&lt;/code&gt; の年表の&lt;/a&gt;1つと一致する必要があります。年表を解析できない場合、フォーマッターのセクションがオプションでない限り、例外がスローされます。パーサーは&lt;a href=&quot;#parseCaseInsensitive()&quot;&gt;大文字と小文字を区別する&lt;/a&gt;設定を使用します。</target>
        </trans-unit>
        <trans-unit id="191ca3d4cfb9916eb4775c37f1204bfe60f75597" translate="yes" xml:space="preserve">
          <source>During parsing, the chronology is parsed and must match one of the chronologies in &lt;a href=&quot;../chrono/chronology#getAvailableChronologies--&quot;&gt;&lt;code&gt;Chronology.getAvailableChronologies()&lt;/code&gt;&lt;/a&gt;. If the chronology cannot be parsed then an exception is thrown unless the section of the formatter is optional. The parser uses the &lt;a href=&quot;datetimeformatterbuilder#parseCaseInsensitive--&quot;&gt;case sensitive&lt;/a&gt; setting.</source>
          <target state="translated">解析中に、年表が解析され、&lt;a href=&quot;../chrono/chronology#getAvailableChronologies--&quot;&gt; &lt;code&gt;Chronology.getAvailableChronologies()&lt;/code&gt; の年表の&lt;/a&gt;いずれかに一致する必要があります。年代が解析できない場合、フォーマッターのセクションがオプションでない限り、例外がスローされます。パーサーは&lt;a href=&quot;datetimeformatterbuilder#parseCaseInsensitive--&quot;&gt;大文字と小文字を区別する&lt;/a&gt;設定を使用します。</target>
        </trans-unit>
        <trans-unit id="660a719637845b5f2477a0ff69b5b7ccfa7eb52f" translate="yes" xml:space="preserve">
          <source>During parsing, the current state of the parse is inspected. If the specified field has no associated value, because it has not been parsed successfully at that point, then the specified value is injected into the parse result. Injection is immediate, thus the field-value pair will be visible to any subsequent elements in the formatter. As such, this method is normally called at the end of the builder.</source>
          <target state="translated">パース中、現在の状態が検査されます。指定されたフィールドに関連する値がない場合、その時点では正常に解析されていないため、指定された値が解析結果に注入されます。インジェクションは即時に行われるため、フィールドと値のペアはフォーマッタ内の後続の要素から見えるようになります。そのため、このメソッドは通常ビルダの最後に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="b193b91f8dbd49a4c7e7c7de8ece0cf96f1a1eaf" translate="yes" xml:space="preserve">
          <source>During parsing, the offset is parsed using the format defined above. If the offset cannot be parsed then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">解析中に、オフセットは上記で定義したフォーマットを用いて解析されます。オフセットが解析できなかった場合は、フォーマッタのセクションがオプションでない限り例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="93d6ed2e246953d5d73452dbaf6d05a817ddc751" translate="yes" xml:space="preserve">
          <source>During parsing, the offset is parsed using the format defined below. If the offset cannot be parsed then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">解析中に、 オフセットは以下に定義されている形式を用いて解析されます。オフセットが解析できなかった場合は、フォーマッタのセクションがオプションでない限り例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="72e8de8e6e843fddb564fc8660d359fd8bc5f946" translate="yes" xml:space="preserve">
          <source>During parsing, the padding and decorated element are parsed. If parsing is lenient, then the pad width is treated as a maximum. If parsing is case insensitive, then the pad character is matched ignoring case. The padding is parsed greedily. Thus, if the decorated element starts with the pad character, it will not be parsed.</source>
          <target state="translated">解析中に、パディングと装飾された要素が解析されます。解析が甘い場合、パッド幅は最大値として扱われます。解析が大文字小文字を区別しない場合、パッド文字は大文字小文字を無視してマッチします。パディングは貪欲に解析されます。したがって、装飾された要素がパッド文字で始まる場合、それは解析されません。</target>
        </trans-unit>
        <trans-unit id="051e7e637f0a79d80fda592f79caa0cc6df65da5" translate="yes" xml:space="preserve">
          <source>During parsing, the padding and decorated element are parsed. If parsing is lenient, then the pad width is treated as a maximum. The padding is parsed greedily. Thus, if the decorated element starts with the pad character, it will not be parsed.</source>
          <target state="translated">解析中に、パディングと装飾された要素が解析されます。解析が甘い場合は、パッドの幅は最大値として扱われます。パディングは貪欲に解析されます。したがって、装飾された要素がパッド文字で始まる場合、それは解析されません。</target>
        </trans-unit>
        <trans-unit id="de57d38f94fd5df94b547b34daa02eafb099fa7f" translate="yes" xml:space="preserve">
          <source>During parsing, the text must match a known zone or offset. There are two types of zone ID, offset-based, such as '+01:30' and region-based, such as 'Europe/London'. These are parsed differently. If the parse starts with '+', '-', 'UT', 'UTC' or 'GMT', then the parser expects an offset-based zone and will not match region-based zones. The offset ID, such as '+02:30', may be at the start of the parse, or prefixed by 'UT', 'UTC' or 'GMT'. The offset ID parsing is equivalent to using &lt;a href=&quot;#appendOffset(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;appendOffset(String, String)&lt;/code&gt;&lt;/a&gt; using the arguments 'HH:MM:ss' and the no offset string '0'. If the parse starts with 'UT', 'UTC' or 'GMT', and the parser cannot match a following offset ID, then &lt;a href=&quot;../zoneoffset#UTC&quot;&gt;&lt;code&gt;ZoneOffset.UTC&lt;/code&gt;&lt;/a&gt; is selected. In all other cases, the list of known region-based zones is used to find the longest available match. If no match is found, and the parse starts with 'Z', then &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; is selected. The parser uses the &lt;a href=&quot;#parseCaseInsensitive()&quot;&gt;case sensitive&lt;/a&gt; setting.</source>
          <target state="translated">解析中、テキストは既知のゾーンまたはオフセットと一致する必要があります。ゾーンIDには、「+ 01：30」などのオフセットベースと「ヨーロッパ/ロンドン」などのリージョンベースの2種類があります。これらは異なる方法で解析されます。解析が「+」、「-」、「UT」、「UTC」、または「GMT」で始まる場合、パーサーはオフセットベースのゾーンを予期し、リージョンベースのゾーンとは一致しません。 「+02：30」などのオフセットIDは、解析の開始時にあるか、「UT」、「UTC」、または「GMT」のプレフィックスが付いている場合があります。オフセットIDの解析は、引数「HH：MM：ss」とオフセットなしの文字列「0」を使用して&lt;a href=&quot;#appendOffset(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;appendOffset(String, String)&lt;/code&gt; &lt;/a&gt;を使用するのと同じです。解析が「UT」、「UTC」、または「GMT」で始まり、パーサーが次のオフセットIDと一致しない場合、&lt;a href=&quot;../zoneoffset#UTC&quot;&gt; &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; &lt;/a&gt;が選択されています。他のすべての場合、既知のリージョンベースのゾーンのリストを使用して、使用可能な最長の一致が検索されます。一致するものが見つからず、解析が「Z」で始まる場合、 &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; が選択されます。パーサーは&lt;a href=&quot;#parseCaseInsensitive()&quot;&gt;大文字と小文字を区別する&lt;/a&gt;設定を使用します。</target>
        </trans-unit>
        <trans-unit id="2afa73df0d5f6aa582b13dfbcefba4da345c228d" translate="yes" xml:space="preserve">
          <source>During parsing, the text must match a known zone or offset. There are two types of zone ID, offset-based, such as '+01:30' and region-based, such as 'Europe/London'. These are parsed differently. If the parse starts with '+', '-', 'UT', 'UTC' or 'GMT', then the parser expects an offset-based zone and will not match region-based zones. The offset ID, such as '+02:30', may be at the start of the parse, or prefixed by 'UT', 'UTC' or 'GMT'. The offset ID parsing is equivalent to using &lt;a href=&quot;datetimeformatterbuilder#appendOffset-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;appendOffset(String, String)&lt;/code&gt;&lt;/a&gt; using the arguments 'HH:MM:ss' and the no offset string '0'. If the parse starts with 'UT', 'UTC' or 'GMT', and the parser cannot match a following offset ID, then &lt;a href=&quot;../zoneoffset#UTC&quot;&gt;&lt;code&gt;ZoneOffset.UTC&lt;/code&gt;&lt;/a&gt; is selected. In all other cases, the list of known region-based zones is used to find the longest available match. If no match is found, and the parse starts with 'Z', then &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; is selected. The parser uses the &lt;a href=&quot;datetimeformatterbuilder#parseCaseInsensitive--&quot;&gt;case sensitive&lt;/a&gt; setting.</source>
          <target state="translated">解析中、テキストは既知のゾーンまたはオフセットと一致する必要があります。 「+01：30」などのオフセットベースと「ヨーロッパ/ロンドン」などのリージョンベースの2種類のゾーンIDがあります。これらは異なる方法で解析されます。解析が「+」、「-」、「UT」、「UTC」、または「GMT」で始まる場合、パーサーはオフセットベースのゾーンを予期し、リージョンベースのゾーンと一致しません。 '+02：30'などのオフセットIDは、解析の開始時か、 'UT'、 'UTC'、または 'GMT'が前に付いている場合があります。オフセットIDの解析は、引数 'HH：MM：ss'とオフセットなしの文字列 '0' を使用して&lt;a href=&quot;datetimeformatterbuilder#appendOffset-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;appendOffset(String, String)&lt;/code&gt; &lt;/a&gt;を使用することと同等です。解析が「UT」、「UTC」、または「GMT」で始まり、パーサーが後続のオフセットIDと一致できない場合は、&lt;a href=&quot;../zoneoffset#UTC&quot;&gt; &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; &lt;/a&gt;選択されています。他のすべての場合では、既知の地域ベースのゾーンのリストを使用して、利用可能な最長の一致を見つけます。一致が見つからず、解析が「Z」で始まる場合、 &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; が選択されます。パーサーは&lt;a href=&quot;datetimeformatterbuilder#parseCaseInsensitive--&quot;&gt;大文字と小文字を区別する&lt;/a&gt;設定を使用します。</target>
        </trans-unit>
        <trans-unit id="01765f14af868b8b1aeb62907856eea430bbb176" translate="yes" xml:space="preserve">
          <source>During secure socket negotiations, implementations call methods in this interface to:</source>
          <target state="translated">セキュアソケットネゴシエーションの間、実装者はこのインタフェースのメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="033e5031d233d516e8f61663b0beee851fa0d4a8" translate="yes" xml:space="preserve">
          <source>During secure socket negotiations, implentations call methods in this interface to:</source>
          <target state="translated">セキュアソケットの交渉中に、インペンテーションはこのインタフェースのメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="68b8a55bc054d889921736425f1e68d260a17b12" translate="yes" xml:space="preserve">
          <source>During serialization of XML data, namespace fixup is done as defined in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOM Level 3 Core&lt;/a&gt;] , Appendix B. [&lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113&quot;&gt;DOM Level 2 Core&lt;/a&gt;] allows empty strings as a real namespace URI. If the &lt;code&gt;namespaceURI&lt;/code&gt; of a &lt;code&gt;Node&lt;/code&gt; is empty string, the serialization will treat them as &lt;code&gt;null&lt;/code&gt;, ignoring the prefix if any.</source>
          <target state="translated">XMLデータのシリアル化中に、名前空間の修正は[ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOMレベル3コア&lt;/a&gt;]の付録Bで定義されているように行われます。[ &lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113&quot;&gt;DOMレベル2コア&lt;/a&gt;]では、実際の名前空間URIとして空の文字列を使用できます。場合は &lt;code&gt;namespaceURI&lt;/code&gt; の &lt;code&gt;Node&lt;/code&gt; 空の文字列で、シリアライズはとして扱います &lt;code&gt;null&lt;/code&gt; のいずれかの場合には接頭辞を無視して、。</target>
        </trans-unit>
        <trans-unit id="ca3d5b9d1e4e5b96a2bd9661fa1be631b78ef705" translate="yes" xml:space="preserve">
          <source>During serialization, writeObject writes all fields to the output stream, including extensions.</source>
          <target state="translated">シリアライズ中、writeObject は拡張子を含むすべてのフィールドを出力ストリームに書き込みます。</target>
        </trans-unit>
        <trans-unit id="b5470469aab3a236c58b1b5447cd21d8ef4cc0eb" translate="yes" xml:space="preserve">
          <source>During the context establishment phase, the &lt;a href=&quot;#isProtReady()&quot;&gt;&lt;code&gt;isProtReady&lt;/code&gt;&lt;/a&gt; method may be called to determine if the context can be used for the per-message operations of &lt;a href=&quot;#wrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;wrap&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getMIC(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;getMIC&lt;/code&gt;&lt;/a&gt;. This allows applications to use per-message operations on contexts which aren't yet fully established.</source>
          <target state="translated">コンテキスト確立フェーズ中に、&lt;a href=&quot;#isProtReady()&quot;&gt; &lt;code&gt;isProtReady&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、コンテキストを&lt;a href=&quot;#wrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;wrap&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#getMIC(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;getMIC&lt;/code&gt; の&lt;/a&gt;メッセージごとの操作に使用できるかどうかを判別できます。これにより、アプリケーションは、まだ完全に確立されていないコンテキストでメッセージごとの操作を使用できます。</target>
        </trans-unit>
        <trans-unit id="1ed988ff4f033e76e1664f162d4b67a760c09d65" translate="yes" xml:space="preserve">
          <source>During the drag, the data associated with the current drag operation can be retrieved by calling &lt;code&gt;getTransferable()&lt;/code&gt; on &lt;code&gt;DropTargetDragEvent&lt;/code&gt; instances passed to the listener's methods.</source>
          <target state="translated">ドラッグ中に、リスナーのメソッドに渡された &lt;code&gt;DropTargetDragEvent&lt;/code&gt; インスタンスで &lt;code&gt;getTransferable()&lt;/code&gt; を呼び出すことにより、現在のドラッグ操作に関連付けられたデータを取得できます。</target>
        </trans-unit>
        <trans-unit id="14a3d059cb74ef9c2712cb1356287deee2a37b42" translate="yes" xml:space="preserve">
          <source>During the parse, the XMLReader will provide information about the XML document through the registered event handlers.</source>
          <target state="translated">パースの間、XMLReader は登録されたイベント ハンドラを通じて XML ドキュメントに関する情報を提供します。</target>
        </trans-unit>
        <trans-unit id="f8b3d2fb3dd4754dbcd9d713eed5e8418bcfd115" translate="yes" xml:space="preserve">
          <source>During the resource bundle loading process above, this factory method looks up the cache before calling the &lt;a href=&quot;resourcebundle.control#newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)&quot;&gt;&lt;code&gt;control.newBundle&lt;/code&gt;&lt;/a&gt; method. If the time-to-live period of the resource bundle found in the cache has expired, the factory method calls the &lt;a href=&quot;resourcebundle.control#needsReload(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,java.util.ResourceBundle,long)&quot;&gt;&lt;code&gt;control.needsReload&lt;/code&gt;&lt;/a&gt; method to determine whether the resource bundle needs to be reloaded. If reloading is required, the factory method calls &lt;code&gt;control.newBundle&lt;/code&gt; to reload the resource bundle. If &lt;code&gt;control.newBundle&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;, the factory method puts a dummy resource bundle in the cache as a mark of nonexistent resource bundles in order to avoid lookup overhead for subsequent requests. Such dummy resource bundles are under the same expiration control as specified by &lt;code&gt;control&lt;/code&gt;.</source>
          <target state="translated">上記のリソースバンドルのロードプロセス中に、このファクトリメソッドは&lt;a href=&quot;resourcebundle.control#newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)&quot;&gt; &lt;code&gt;control.newBundle&lt;/code&gt; &lt;/a&gt;メソッドを呼び出す前にキャッシュを検索します。キャッシュで見つかったリソースバンドルの有効期間が終了した場合、ファクトリメソッドは&lt;a href=&quot;resourcebundle.control#needsReload(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,java.util.ResourceBundle,long)&quot;&gt; &lt;code&gt;control.needsReload&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、リソースバンドルをリロードする必要があるかどうかを判断します。リロードが必要な場合、ファクトリメソッドは &lt;code&gt;control.newBundle&lt;/code&gt; を呼び出してリソースバンドルをリロードします。 &lt;code&gt;control.newBundle&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; を返す場合、ファクトリメソッドは、後続のリクエストのルックアップオーバーヘッドを回避するために、存在しないリソースバンドルのマークとしてダミーのリソースバンドルをキャッシュに配置します。このようなダミーリソースバンドルは、によって指定されたものと同じ有効期限制御下にあります。 &lt;code&gt;control&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6f3bb08de84932901388d0c83861d8f431122f6" translate="yes" xml:space="preserve">
          <source>During the resource bundle loading process above, this factory method looks up the cache before calling the &lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt;&lt;code&gt;control.newBundle&lt;/code&gt;&lt;/a&gt; method. If the time-to-live period of the resource bundle found in the cache has expired, the factory method calls the &lt;a href=&quot;resourcebundle.control#needsReload-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-java.util.ResourceBundle-long-&quot;&gt;&lt;code&gt;control.needsReload&lt;/code&gt;&lt;/a&gt; method to determine whether the resource bundle needs to be reloaded. If reloading is required, the factory method calls &lt;code&gt;control.newBundle&lt;/code&gt; to reload the resource bundle. If &lt;code&gt;control.newBundle&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;, the factory method puts a dummy resource bundle in the cache as a mark of nonexistent resource bundles in order to avoid lookup overhead for subsequent requests. Such dummy resource bundles are under the same expiration control as specified by &lt;code&gt;control&lt;/code&gt;.</source>
          <target state="translated">上記のリソースバンドルのロードプロセス中に、このファクトリメソッドは、&lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt; &lt;code&gt;control.newBundle&lt;/code&gt; &lt;/a&gt;メソッドを呼び出す前にキャッシュを検索します。キャッシュ内で見つかったリソースバンドルの存続期間が満了した場合、ファクトリメソッドは&lt;a href=&quot;resourcebundle.control#needsReload-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-java.util.ResourceBundle-long-&quot;&gt; &lt;code&gt;control.needsReload&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、リソースバンドルを再ロードする必要があるかどうかを判断します。再ロードが必要な場合、ファクトリメソッドは &lt;code&gt;control.newBundle&lt;/code&gt; を呼び出してリソースバンドルを再ロードします。 &lt;code&gt;control.newBundle&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; を返す場合、ファクトリメソッドは、後続のリクエストのルックアップオーバーヘッドを回避するために、存在しないリソースバンドルのマークとしてダミーのリソースバンドルをキャッシュに入れます。このようなダミーのリソースバンドルは、 &lt;code&gt;control&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="298d9d8d5744f92e432401693309d1bbe3ff6074" translate="yes" xml:space="preserve">
          <source>Dynamic Access</source>
          <target state="translated">動的アクセス</target>
        </trans-unit>
        <trans-unit id="c78e4505384decd4038b612ae0d0f30e8b5bddee" translate="yes" xml:space="preserve">
          <source>Dynamic MBeans</source>
          <target state="translated">ダイナミックMBeans</target>
        </trans-unit>
        <trans-unit id="4e97c5f24ead91c30ca718451dbc049525f2b3d6" translate="yes" xml:space="preserve">
          <source>Dynamic Modules</source>
          <target state="translated">ダイナミックモジュール</target>
        </trans-unit>
        <trans-unit id="7e0f8efcd345f2ea502e218faee30da89844583e" translate="yes" xml:space="preserve">
          <source>Dynamic code downloading</source>
          <target state="translated">動的コードのダウンロード</target>
        </trans-unit>
        <trans-unit id="88aec902f9a10d023d00343fd43acb6f84eaf46b" translate="yes" xml:space="preserve">
          <source>Dynamic linking of the specified library</source>
          <target state="translated">指定したライブラリの動的リンク</target>
        </trans-unit>
        <trans-unit id="7c787ebaf18e8857eb9ac6e68769b4e2afbac264" translate="yes" xml:space="preserve">
          <source>Dynamic resolution of call sites and constants</source>
          <target state="translated">コールサイトと定数の動的解決</target>
        </trans-unit>
        <trans-unit id="c534d3bb735c63a8d1a1ba181ce17b3c3817e747" translate="yes" xml:space="preserve">
          <source>Dynamic update of rules is a complex problem and most applications should not use this method or dynamic rules. To achieve dynamic rules, a provider implementation will have to be written as per the specification of this class. In addition, instances of &lt;code&gt;ZoneRules&lt;/code&gt; must not be cached in the application as they will become stale. However, the boolean flag on &lt;a href=&quot;#provideRules(java.lang.String,boolean)&quot;&gt;&lt;code&gt;provideRules(String, boolean)&lt;/code&gt;&lt;/a&gt; allows provider implementations to control the caching of &lt;code&gt;ZoneId&lt;/code&gt;, potentially ensuring that all objects in the system see the new rules. Note that there is likely to be a cost in performance of a dynamic rules provider. Note also that no dynamic rules provider is in this specification.</source>
          <target state="translated">ルールの動的更新は複雑な問題であり、ほとんどのアプリケーションはこの方法または動的ルールを使用しないでください。動的ルールを実現するには、このクラスの仕様に従ってプロバイダーの実装を作成する必要があります。さらに、 &lt;code&gt;ZoneRules&lt;/code&gt; のインスタンスは古くなるため、アプリケーションにキャッシュしないでください。ただし、&lt;a href=&quot;#provideRules(java.lang.String,boolean)&quot;&gt; &lt;code&gt;provideRules(String, boolean)&lt;/code&gt; &lt;/a&gt;のブールフラグを使用すると、プロバイダーの実装で &lt;code&gt;ZoneId&lt;/code&gt; のキャッシュを制御できるため、システム内のすべてのオブジェクトに新しいルールが表示される可能性があります。動的ルールプロバイダーのパフォーマンスにはコストがかかる可能性があることに注意してください。この仕様には動的ルールプロバイダーが含まれていないことにも注意してください。</target>
        </trans-unit>
        <trans-unit id="c0a4c142a61f88983312715c4d27e6f5e339313a" translate="yes" xml:space="preserve">
          <source>Dynamic update of rules is a complex problem and most applications should not use this method or dynamic rules. To achieve dynamic rules, a provider implementation will have to be written as per the specification of this class. In addition, instances of &lt;code&gt;ZoneRules&lt;/code&gt; must not be cached in the application as they will become stale. However, the boolean flag on &lt;a href=&quot;zonerulesprovider#provideRules-java.lang.String-boolean-&quot;&gt;&lt;code&gt;provideRules(String, boolean)&lt;/code&gt;&lt;/a&gt; allows provider implementations to control the caching of &lt;code&gt;ZoneId&lt;/code&gt;, potentially ensuring that all objects in the system see the new rules. Note that there is likely to be a cost in performance of a dynamic rules provider. Note also that no dynamic rules provider is in this specification.</source>
          <target state="translated">ルールの動的更新は複雑な問題であり、ほとんどのアプリケーションはこのメソッドまたは動的ルールを使用するべきではありません。動的ルールを実現するには、このクラスの仕様に従ってプロバイダー実装を作成する必要があります。さらに、 &lt;code&gt;ZoneRules&lt;/code&gt; のインスタンスは古くなるため、アプリケーションにキャッシュしないでください。ただし、&lt;a href=&quot;zonerulesprovider#provideRules-java.lang.String-boolean-&quot;&gt; &lt;code&gt;provideRules(String, boolean)&lt;/code&gt; &lt;/a&gt;のブールフラグを使用すると、プロバイダーの実装で &lt;code&gt;ZoneId&lt;/code&gt; のキャッシュを制御できるため、システム内のすべてのオブジェクトが新しいルールを確実に参照できるようになります。動的ルールプロバイダーのパフォーマンスにはコストがかかる可能性があることに注意してください。また、この仕様には動的ルールプロバイダーがないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="fc8a231a2cdc7c41dc1c6e0395464730ea4cecaa" translate="yes" xml:space="preserve">
          <source>DynamicMBean</source>
          <target state="translated">DynamicMBean</target>
        </trans-unit>
        <trans-unit id="2bcfc50ea42917ec195e96de1ced48702c3a988a" translate="yes" xml:space="preserve">
          <source>DynamicMBean.getAttribute()</source>
          <target state="translated">DynamicMBean.getAttribute()</target>
        </trans-unit>
        <trans-unit id="89a7cd259515ecc091c9e50aee6df33b908fa20d" translate="yes" xml:space="preserve">
          <source>DynamicMBean.getAttributes()</source>
          <target state="translated">DynamicMBean.getAttributes()</target>
        </trans-unit>
        <trans-unit id="46a1c4e1954a38579a347affdf6a1643540ce392" translate="yes" xml:space="preserve">
          <source>DynamicMBean.getMBeanInfo()</source>
          <target state="translated">DynamicMBean.getMBeanInfo()</target>
        </trans-unit>
        <trans-unit id="a991f9655da18f8237eb99cd0a2a59bfbc8d4ff4" translate="yes" xml:space="preserve">
          <source>DynamicMBean.invoke()</source>
          <target state="translated">DynamicMBean.invoke()</target>
        </trans-unit>
        <trans-unit id="4a25bc0cc715918dae1a446cddea115342d71b01" translate="yes" xml:space="preserve">
          <source>DynamicMBean.setAttribute()</source>
          <target state="translated">DynamicMBean.setAttribute()</target>
        </trans-unit>
        <trans-unit id="5a5fee6c935edcd5c1e56d373445a1d430f7626b" translate="yes" xml:space="preserve">
          <source>DynamicMBean.setAttributes()</source>
          <target state="translated">DynamicMBean.setAttributes()</target>
        </trans-unit>
        <trans-unit id="5e1abe5044d45b11d2a08e92d6e861f5e4e71857" translate="yes" xml:space="preserve">
          <source>DynamicUtilTreeNode</source>
          <target state="translated">DynamicUtilTreeNode</target>
        </trans-unit>
        <trans-unit id="2aa731cc6975d875276d6dcbc7e9224e988e8bcf" translate="yes" xml:space="preserve">
          <source>Dynamically-computed call sites</source>
          <target state="translated">動的に計算されたコールサイト</target>
        </trans-unit>
        <trans-unit id="7f205af4dc7dcad3178e9eeb94a30c6c4f8a7cef" translate="yes" xml:space="preserve">
          <source>Dynamically-computed constants</source>
          <target state="translated">動的に計算された定数</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="37556bd5ed42df76f73ebe653563aeeb143ba50e" translate="yes" xml:space="preserve">
          <source>E size .</source>
          <target state="translated">Eサイズ。</target>
        </trans-unit>
        <trans-unit id="8a92f0023efe9b353b01416a728a7984891d4c5a" translate="yes" xml:space="preserve">
          <source>E size.</source>
          <target state="translated">Eサイズです。</target>
        </trans-unit>
        <trans-unit id="8dbc38b8d7f71098f025b909fc27200ee056784a" translate="yes" xml:space="preserve">
          <source>E.g. from HTML: &amp;lt;a href=&quot;http://openjdk.java.net&quot;&amp;gt;OpenJDK&amp;lt;/a&amp;gt; this method would return a String containing the text: 'OpenJDK'.</source>
          <target state="translated">例：HTMLから：&amp;lt;a href=&quot;http://openjdk.java.net&quot;&amp;gt; OpenJDK &amp;lt;/a&amp;gt;このメソッドは、テキスト「OpenJDK」を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="e9a79b53c210686429e07eab42107c7ffa067363" translate="yes" xml:space="preserve">
          <source>EARLY_DYNASTIC_CUNEIFORM</source>
          <target state="translated">EARLY_DYNASTIC_CUNEIFORM</target>
        </trans-unit>
        <trans-unit id="b03384b19cd327b19be4776119e100541f0a86bd" translate="yes" xml:space="preserve">
          <source>EAST</source>
          <target state="translated">EAST</target>
        </trans-unit>
        <trans-unit id="8ae8894790377450360a86386acbf86bfcaf5e38" translate="yes" xml:space="preserve">
          <source>EASTERN_ARABIC</source>
          <target state="translated">EASTERN_ARABIC</target>
        </trans-unit>
        <trans-unit id="e4b06f6b152e160765eb34203c1de7ada0bb7b64" translate="yes" xml:space="preserve">
          <source>EAT - Africa/Addis_Ababa</source>
          <target state="translated">EAT-アフリカ/アディスアベバ</target>
        </trans-unit>
        <trans-unit id="601f2e6dfccb9827ca507e4f4f4f72b0a822f61d" translate="yes" xml:space="preserve">
          <source>ECB</source>
          <target state="translated">ECB</target>
        </trans-unit>
        <trans-unit id="4c486ca702baf7892ef9decd0d5ff6d6b246e424" translate="yes" xml:space="preserve">
          <source>ECDSA_SHA1</source>
          <target state="translated">ECDSA_SHA1</target>
        </trans-unit>
        <trans-unit id="e1b8ac1c994698c89907dfbef6d02a2529fa5099" translate="yes" xml:space="preserve">
          <source>ECDSA_SHA224</source>
          <target state="translated">ECDSA_SHA224</target>
        </trans-unit>
        <trans-unit id="8c28cde841e465433ac448b295c8ab7e946b833b" translate="yes" xml:space="preserve">
          <source>ECDSA_SHA256</source>
          <target state="translated">ECDSA_SHA256</target>
        </trans-unit>
        <trans-unit id="5f622c5bcace6e5729aec9505be779e805b60dc3" translate="yes" xml:space="preserve">
          <source>ECDSA_SHA384</source>
          <target state="translated">ECDSA_SHA384</target>
        </trans-unit>
        <trans-unit id="f0a3e40855b15e4f7673a92061d2a9ca7cc8cf1c" translate="yes" xml:space="preserve">
          <source>ECDSA_SHA512</source>
          <target state="translated">ECDSA_SHA512</target>
        </trans-unit>
        <trans-unit id="484c0540c6bfcedac6849997e5e0766ff2e2acdc" translate="yes" xml:space="preserve">
          <source>ECField</source>
          <target state="translated">ECField</target>
        </trans-unit>
        <trans-unit id="2658a01429323ad39737999b3b7142a3d5d8e196" translate="yes" xml:space="preserve">
          <source>ECField.getFieldSize()</source>
          <target state="translated">ECField.getFieldSize()</target>
        </trans-unit>
        <trans-unit id="d9898f316485620be7b173c694c2ed72e1f5adab" translate="yes" xml:space="preserve">
          <source>ECFieldF2m</source>
          <target state="translated">ECFieldF2m</target>
        </trans-unit>
        <trans-unit id="36e7f19e6ba8f565ca993ca66fd6e17fe7eb308b" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.equals()</source>
          <target state="translated">ECFieldF2m.equals()</target>
        </trans-unit>
        <trans-unit id="8937926871f18b31c7d6d622d6b5e0452f2bb503" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.getFieldSize()</source>
          <target state="translated">ECFieldF2m.getFieldSize()</target>
        </trans-unit>
        <trans-unit id="7ebafde21ad6778e6e4ac34e6eba9db320ad8684" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.getM()</source>
          <target state="translated">ECFieldF2m.getM()</target>
        </trans-unit>
        <trans-unit id="f1cea3791239dc1bf411a7147dece3df618f498c" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.getMidTermsOfReductionPolynomial()</source>
          <target state="translated">ECFieldF2m.getMidTermsOfReductionPolynomial()</target>
        </trans-unit>
        <trans-unit id="63101533955a9be37909b63f6f24e1bcba0bc441" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.getReductionPolynomial()</source>
          <target state="translated">ECFieldF2m.getReductionPolynomial()</target>
        </trans-unit>
        <trans-unit id="3976abd2e6fa17305016254a33c95386394d881b" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.hashCode()</source>
          <target state="translated">ECFieldF2m.hashCode()</target>
        </trans-unit>
        <trans-unit id="bc872885a9855575e40017c153cab5632890dc61" translate="yes" xml:space="preserve">
          <source>ECFieldFp</source>
          <target state="translated">ECFieldFp</target>
        </trans-unit>
        <trans-unit id="53d60f64c65a0d8219fefcc720e2ccf509009a68" translate="yes" xml:space="preserve">
          <source>ECFieldFp.equals()</source>
          <target state="translated">ECFieldFp.equals()</target>
        </trans-unit>
        <trans-unit id="30d1b94dcc58f11b131d3bf43cd966ded02a0fc9" translate="yes" xml:space="preserve">
          <source>ECFieldFp.getFieldSize()</source>
          <target state="translated">ECFieldFp.getFieldSize()</target>
        </trans-unit>
        <trans-unit id="02e8256e1c66bbdf141519e024e9e7ff04c16a91" translate="yes" xml:space="preserve">
          <source>ECFieldFp.getP()</source>
          <target state="translated">ECFieldFp.getP()</target>
        </trans-unit>
        <trans-unit id="65b421ba691a3a68e75d58f81c156cbd493f642d" translate="yes" xml:space="preserve">
          <source>ECFieldFp.hashCode()</source>
          <target state="translated">ECFieldFp.hashCode()</target>
        </trans-unit>
        <trans-unit id="1e9830d00f8ec3259613f4dff1281a7adff4f6af" translate="yes" xml:space="preserve">
          <source>ECGenParameterSpec</source>
          <target state="translated">ECGenParameterSpec</target>
        </trans-unit>
        <trans-unit id="d37406af3bf01864f0a6c55240b87e21b1b5b189" translate="yes" xml:space="preserve">
          <source>ECGenParameterSpec.getName()</source>
          <target state="translated">ECGenParameterSpec.getName()</target>
        </trans-unit>
        <trans-unit id="a95d0a39c7a64e9695e6bd117f38673380c9eb3c" translate="yes" xml:space="preserve">
          <source>ECKey</source>
          <target state="translated">ECKey</target>
        </trans-unit>
        <trans-unit id="26f1460fd392ab6278f38275c90b71e9401e7015" translate="yes" xml:space="preserve">
          <source>ECKey.getParams()</source>
          <target state="translated">ECKey.getParams()</target>
        </trans-unit>
        <trans-unit id="5c71332cc2e4953624e755826970d2fc1a95245b" translate="yes" xml:space="preserve">
          <source>ECParameterSpec</source>
          <target state="translated">ECParameterSpec</target>
        </trans-unit>
        <trans-unit id="aa125d60e4d36280fae87072658c9123a763bcdc" translate="yes" xml:space="preserve">
          <source>ECParameterSpec.getCofactor()</source>
          <target state="translated">ECParameterSpec.getCofactor()</target>
        </trans-unit>
        <trans-unit id="dcd57c7482bcf9c8923cc59195564b8010899383" translate="yes" xml:space="preserve">
          <source>ECParameterSpec.getCurve()</source>
          <target state="translated">ECParameterSpec.getCurve()</target>
        </trans-unit>
        <trans-unit id="4a45e378dc788609ce75184339098e2b7c75ccfd" translate="yes" xml:space="preserve">
          <source>ECParameterSpec.getGenerator()</source>
          <target state="translated">ECParameterSpec.getGenerator()</target>
        </trans-unit>
        <trans-unit id="66c081bfcece1f9d25bb87afd25936de90028129" translate="yes" xml:space="preserve">
          <source>ECParameterSpec.getOrder()</source>
          <target state="translated">ECParameterSpec.getOrder()</target>
        </trans-unit>
        <trans-unit id="131f0aca4fc7fbb9781dca63d6626d89d5db8fa5" translate="yes" xml:space="preserve">
          <source>ECPoint</source>
          <target state="translated">ECPoint</target>
        </trans-unit>
        <trans-unit id="7383fa4bf2e59ad882a32ae14ae81d683e482091" translate="yes" xml:space="preserve">
          <source>ECPoint.equals()</source>
          <target state="translated">ECPoint.equals()</target>
        </trans-unit>
        <trans-unit id="7d350700f06a34948120bb0632a8c123ac1fb971" translate="yes" xml:space="preserve">
          <source>ECPoint.getAffineX()</source>
          <target state="translated">ECPoint.getAffineX()</target>
        </trans-unit>
        <trans-unit id="4ecd3cff17d418a53e0d7cb8aa03a39da734ee30" translate="yes" xml:space="preserve">
          <source>ECPoint.getAffineY()</source>
          <target state="translated">ECPoint.getAffineY()</target>
        </trans-unit>
        <trans-unit id="7e3d647204a9e7b0889041c1399c6d8ed9b1c47f" translate="yes" xml:space="preserve">
          <source>ECPoint.hashCode()</source>
          <target state="translated">ECPoint.hashCode()</target>
        </trans-unit>
        <trans-unit id="7e9a73ec4defdbf0d1961ffb46ae295c5f1339ab" translate="yes" xml:space="preserve">
          <source>ECPrivateKey</source>
          <target state="translated">ECPrivateKey</target>
        </trans-unit>
        <trans-unit id="f11daf09d2ce19a720d760fccebcc0cc1fe0a68b" translate="yes" xml:space="preserve">
          <source>ECPrivateKey.getS()</source>
          <target state="translated">ECPrivateKey.getS()</target>
        </trans-unit>
        <trans-unit id="a01ce6d3172a87d1f54d00877245e24bb7f90413" translate="yes" xml:space="preserve">
          <source>ECPrivateKeySpec</source>
          <target state="translated">ECPrivateKeySpec</target>
        </trans-unit>
        <trans-unit id="2b99934ce584b5dbb0802cc004496c1265e31810" translate="yes" xml:space="preserve">
          <source>ECPrivateKeySpec.getParams()</source>
          <target state="translated">ECPrivateKeySpec.getParams()</target>
        </trans-unit>
        <trans-unit id="36bdb0730aaaaa72a7ffc35fcfae08b77d615237" translate="yes" xml:space="preserve">
          <source>ECPrivateKeySpec.getS()</source>
          <target state="translated">ECPrivateKeySpec.getS()</target>
        </trans-unit>
        <trans-unit id="d1776a7027dff3e5917cb3cebf94fd8101974337" translate="yes" xml:space="preserve">
          <source>ECPublicKey</source>
          <target state="translated">ECPublicKey</target>
        </trans-unit>
        <trans-unit id="af6a51f7b98fb87be1c59401b98b892e8c69ff96" translate="yes" xml:space="preserve">
          <source>ECPublicKey.getW()</source>
          <target state="translated">ECPublicKey.getW()</target>
        </trans-unit>
        <trans-unit id="9f0a498aa9c90edb4329c8a660aeb384742d6781" translate="yes" xml:space="preserve">
          <source>ECPublicKeySpec</source>
          <target state="translated">ECPublicKeySpec</target>
        </trans-unit>
        <trans-unit id="7f82aaa3c1b53eec25a273be77a538d0c2ec3969" translate="yes" xml:space="preserve">
          <source>ECPublicKeySpec.getParams()</source>
          <target state="translated">ECPublicKeySpec.getParams()</target>
        </trans-unit>
        <trans-unit id="fb1af6c34d1ba0faae90738c011291744c98e2f9" translate="yes" xml:space="preserve">
          <source>ECPublicKeySpec.getW()</source>
          <target state="translated">ECPublicKeySpec.getW()</target>
        </trans-unit>
        <trans-unit id="23b9898e476dcc4add4efc0ed7ddb21640c0f19e" translate="yes" xml:space="preserve">
          <source>ECT - Europe/Paris</source>
          <target state="translated">ECT-ヨーロッパ/パリ</target>
        </trans-unit>
        <trans-unit id="cd348329dbd8b9ba037d93f0520c47012b1fe1e7" translate="yes" xml:space="preserve">
          <source>EDGE_NO_OP</source>
          <target state="translated">EDGE_NO_OP</target>
        </trans-unit>
        <trans-unit id="4c6cb1e40abd19f5ecac8d88f42efa4e5eafe942" translate="yes" xml:space="preserve">
          <source>EDGE_SPACING</source>
          <target state="translated">EDGE_SPACING</target>
        </trans-unit>
        <trans-unit id="402016f21d03e839e24e660b0cf6c79f311ae840" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH</source>
          <target state="translated">EDGE_STITCH</target>
        </trans-unit>
        <trans-unit id="6bbbc6534d75c412ef17b08bd13748b994075f5f" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH_BOTTOM</source>
          <target state="translated">EDGE_STITCH_BOTTOM</target>
        </trans-unit>
        <trans-unit id="ee0dae08682963b6c4ca700b5fcd840f3e2da188" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH_LEFT</source>
          <target state="translated">EDGE_STITCH_LEFT</target>
        </trans-unit>
        <trans-unit id="43c15148aa09100c39cdf6aa78755316addcd9fb" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH_RIGHT</source>
          <target state="translated">EDGE_STITCH_RIGHT</target>
        </trans-unit>
        <trans-unit id="0dde2bed2e929721c8a19a054425e8326cf52ec8" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH_TOP</source>
          <target state="translated">EDGE_STITCH_TOP</target>
        </trans-unit>
        <trans-unit id="328e0b14f6c8e641982cb916a9538871ce205a01" translate="yes" xml:space="preserve">
          <source>EDGE_ZERO_FILL</source>
          <target state="translated">EDGE_ZERO_FILL</target>
        </trans-unit>
        <trans-unit id="17865bdb9110d432d4f2295eb32ab17883d404dc" translate="yes" xml:space="preserve">
          <source>EDIT</source>
          <target state="translated">EDIT</target>
        </trans-unit>
        <trans-unit id="d77c2b04b6e034cbb5a227d25c98ce3d27383559" translate="yes" xml:space="preserve">
          <source>EDITABLE</source>
          <target state="translated">EDITABLE</target>
        </trans-unit>
        <trans-unit id="852af4fbfdbf886b62acf713cf53e6baf9724f7b" translate="yes" xml:space="preserve">
          <source>EDITABLE_PROPERTY</source>
          <target state="translated">EDITABLE_PROPERTY</target>
        </trans-unit>
        <trans-unit id="3c18c89016187dce1b33db75826aba104d6c7d98" translate="yes" xml:space="preserve">
          <source>EDITBAR</source>
          <target state="translated">EDITBAR</target>
        </trans-unit>
        <trans-unit id="503b9b4dae69e65f416c83be926e4a90cbd4afd2" translate="yes" xml:space="preserve">
          <source>EDITOR_PANE</source>
          <target state="translated">EDITOR_PANE</target>
        </trans-unit>
        <trans-unit id="660752e786b88b1d9b2dfbef6bb0a1fef020b836" translate="yes" xml:space="preserve">
          <source>EFFORT</source>
          <target state="translated">EFFORT</target>
        </trans-unit>
        <trans-unit id="6ba33a7b25ec924e3c7cdea49ff5d10a73abcd7d" translate="yes" xml:space="preserve">
          <source>EGYPTIAN_HIEROGLYPHS</source>
          <target state="translated">EGYPTIAN_HIEROGLYPHS</target>
        </trans-unit>
        <trans-unit id="13fb114cac59f7042bce5e1c98ffb2793504c015" translate="yes" xml:space="preserve">
          <source>ELBASAN</source>
          <target state="translated">ELBASAN</target>
        </trans-unit>
        <trans-unit id="322c7797aa1f7293df51eeda49bad8fb9cb4701f" translate="yes" xml:space="preserve">
          <source>ELEMENT_NODE</source>
          <target state="translated">ELEMENT_NODE</target>
        </trans-unit>
        <trans-unit id="03b6d8aecd8803c252a6b4d0b0f8d7a86683b932" translate="yes" xml:space="preserve">
          <source>ELEMENT_NODE, ATTRIBUTE_NODE, ENTITY_NODE, ENTITY_REFERENCE_NODE, DOCUMENT_FRAGMENT_NODE</source>
          <target state="translated">ELEMENT_NODE、ATTRIBUTE_NODE、ENTITY_NODE、ENTITY_REFERENCE_NODE、DOCUMENT_FRAGMENT_NODE</target>
        </trans-unit>
        <trans-unit id="9a6a49a5317fa046854fc275333125dc46e38d5d" translate="yes" xml:space="preserve">
          <source>EM</source>
          <target state="translated">EM</target>
        </trans-unit>
        <trans-unit id="96c40210ca5730cfe8e945177ee7d257d537dc5f" translate="yes" xml:space="preserve">
          <source>EMBEDDED_BY</source>
          <target state="translated">EMBEDDED_BY</target>
        </trans-unit>
        <trans-unit id="a659eeb20a8006559b0bce59eaab83094810bf7d" translate="yes" xml:space="preserve">
          <source>EMBEDDED_BY_PROPERTY</source>
          <target state="translated">EMBEDDED_BY_PROPERTY</target>
        </trans-unit>
        <trans-unit id="56a2af61868ca322a7708b82661a57c5b1bdf392" translate="yes" xml:space="preserve">
          <source>EMBEDS</source>
          <target state="translated">EMBEDS</target>
        </trans-unit>
        <trans-unit id="eec0cd379a73c242ff7ffc18c59fc4f309a40922" translate="yes" xml:space="preserve">
          <source>EMBEDS_PROPERTY</source>
          <target state="translated">EMBEDS_PROPERTY</target>
        </trans-unit>
        <trans-unit id="aa891ea05dd88d34c7bc0f90160ef08ac7326076" translate="yes" xml:space="preserve">
          <source>EMOTICONS</source>
          <target state="translated">EMOTICONS</target>
        </trans-unit>
        <trans-unit id="5bc604777adb22ae457a5473c397202e00689e23" translate="yes" xml:space="preserve">
          <source>EMPTY</source>
          <target state="translated">EMPTY</target>
        </trans-unit>
        <trans-unit id="3a6d67ab2fcaa4996ea55c9897e1e3cae775fff8" translate="yes" xml:space="preserve">
          <source>EMPTY_DESCRIPTOR</source>
          <target state="translated">EMPTY_DESCRIPTOR</target>
        </trans-unit>
        <trans-unit id="fea3b169de7d82824fd128ad809b57f1e9ed83fc" translate="yes" xml:space="preserve">
          <source>EMPTY_ENUMERATION</source>
          <target state="translated">EMPTY_ENUMERATION</target>
        </trans-unit>
        <trans-unit id="dfc809a8ebf4b81e691b32975c5035f21e16fd2c" translate="yes" xml:space="preserve">
          <source>EMPTY_LIST</source>
          <target state="translated">EMPTY_LIST</target>
        </trans-unit>
        <trans-unit id="2e8cdc469d0d7230be597797efd2ed063ada7cae" translate="yes" xml:space="preserve">
          <source>EMPTY_MAP</source>
          <target state="translated">EMPTY_MAP</target>
        </trans-unit>
        <trans-unit id="10621e09be025015f2a0097a6fba7fa1f19ac9b8" translate="yes" xml:space="preserve">
          <source>EMPTY_SET</source>
          <target state="translated">EMPTY_SET</target>
        </trans-unit>
        <trans-unit id="e22fb092b5dc81b96c7d8908ff61bfb7e9b3cd2a" translate="yes" xml:space="preserve">
          <source>ENABLED</source>
          <target state="translated">ENABLED</target>
        </trans-unit>
        <trans-unit id="491b3a1cdd9a73aeeef2e2f7ce0522c4ac95684d" translate="yes" xml:space="preserve">
          <source>ENCLOSED_ALPHANUMERICS</source>
          <target state="translated">ENCLOSED_ALPHANUMERICS</target>
        </trans-unit>
        <trans-unit id="5b355594a8d1825c7bb8f59ad5f33b3daa288ed1" translate="yes" xml:space="preserve">
          <source>ENCLOSED_ALPHANUMERIC_SUPPLEMENT</source>
          <target state="translated">ENCLOSED_ALPHANUMERIC_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="4ec78e05d6223330ee2332780376af9b9f64b029" translate="yes" xml:space="preserve">
          <source>ENCLOSED_CJK_LETTERS_AND_MONTHS</source>
          <target state="translated">ENCLOSED_CJK_LETTERS_AND_MONTHS</target>
        </trans-unit>
        <trans-unit id="e8519b58a50233517f3c5d275538bafbc83a8613" translate="yes" xml:space="preserve">
          <source>ENCLOSED_IDEOGRAPHIC_SUPPLEMENT</source>
          <target state="translated">ENCLOSED_IDEOGRAPHIC_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="889059f5218ab9af9e50be715febbbf437573234" translate="yes" xml:space="preserve">
          <source>ENCLOSING_MARK</source>
          <target state="translated">ENCLOSING_MARK</target>
        </trans-unit>
        <trans-unit id="1e306f9d0fec9dc9a627cd5c3b6dd9bb1770a21e" translate="yes" xml:space="preserve">
          <source>ENCODING</source>
          <target state="translated">ENCODING</target>
        </trans-unit>
        <trans-unit id="55bd7a4274c967a0d40bdf3a19b0a8faff1857ed" translate="yes" xml:space="preserve">
          <source>ENCRYPT</source>
          <target state="translated">ENCRYPT</target>
        </trans-unit>
        <trans-unit id="e75d2afc0ed3d23703380d1e72696098ff6dabb6" translate="yes" xml:space="preserve">
          <source>ENCRYPT_MODE</source>
          <target state="translated">ENCRYPT_MODE</target>
        </trans-unit>
        <trans-unit id="0d66009f5bef872d6104b346b77ebe4b6114ce03" translate="yes" xml:space="preserve">
          <source>ENCTYPE</source>
          <target state="translated">ENCTYPE</target>
        </trans-unit>
        <trans-unit id="d205abee3d2a71688a6b66568be289a94050031c" translate="yes" xml:space="preserve">
          <source>END</source>
          <target state="translated">END</target>
        </trans-unit>
        <trans-unit id="393a28fda214136f4aec6cb4d5e4360f2f046e43" translate="yes" xml:space="preserve">
          <source>ENDCOM</source>
          <target state="translated">ENDCOM</target>
        </trans-unit>
        <trans-unit id="b7e65914167d75e1013bd288e846628e8bbb73bf" translate="yes" xml:space="preserve">
          <source>ENDHDR</source>
          <target state="translated">ENDHDR</target>
        </trans-unit>
        <trans-unit id="8b2e5bd2a1a74bacd3940fd3569815719099b391" translate="yes" xml:space="preserve">
          <source>ENDOFF</source>
          <target state="translated">ENDOFF</target>
        </trans-unit>
        <trans-unit id="8aed026f99b127492256fe494fa85697e5488920" translate="yes" xml:space="preserve">
          <source>ENDSIG</source>
          <target state="translated">ENDSIG</target>
        </trans-unit>
        <trans-unit id="b143fee6e7c46f8dfc60a3eeb0ece1e6ccae10b9" translate="yes" xml:space="preserve">
          <source>ENDSIZ</source>
          <target state="translated">ENDSIZ</target>
        </trans-unit>
        <trans-unit id="dc06790ab72abd8ee1c03b84dcf3f268ae4fa511" translate="yes" xml:space="preserve">
          <source>ENDSUB</source>
          <target state="translated">ENDSUB</target>
        </trans-unit>
        <trans-unit id="a681742bdd54768b5a1a883e90fdd2dbfb0993fb" translate="yes" xml:space="preserve">
          <source>ENDTAG</source>
          <target state="translated">ENDTAG</target>
        </trans-unit>
        <trans-unit id="3d528274c7d29305fe76c5d34bcc42a830b08b3b" translate="yes" xml:space="preserve">
          <source>ENDTOT</source>
          <target state="translated">ENDTOT</target>
        </trans-unit>
        <trans-unit id="21e0f190192239a641a40c34cfe7ac6e04163f65" translate="yes" xml:space="preserve">
          <source>END_DOCUMENT</source>
          <target state="translated">END_DOCUMENT</target>
        </trans-unit>
        <trans-unit id="ba67108ef1ee9acb0047b9074bb27c6f8adf3ecc" translate="yes" xml:space="preserve">
          <source>END_ELEMENT</source>
          <target state="translated">END_ELEMENT</target>
        </trans-unit>
        <trans-unit id="3e11a998bc0323c14e989b22d66120389efdae55" translate="yes" xml:space="preserve">
          <source>END_OF_EXCLUSIVE</source>
          <target state="translated">END_OF_EXCLUSIVE</target>
        </trans-unit>
        <trans-unit id="2c9d04702f9d8be59da552603a90ac3e455ad308" translate="yes" xml:space="preserve">
          <source>END_PUNCTUATION</source>
          <target state="translated">END_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="af51d4c1c38ed298c0f9350a493c547baedc761a" translate="yes" xml:space="preserve">
          <source>END_TO_END</source>
          <target state="translated">END_TO_END</target>
        </trans-unit>
        <trans-unit id="9c0f35a2dd4297b471bcb649848abbe8947f5436" translate="yes" xml:space="preserve">
          <source>END_TO_START</source>
          <target state="translated">END_TO_START</target>
        </trans-unit>
        <trans-unit id="983e5366e4eea9b037be5e23f216579d19fc4609" translate="yes" xml:space="preserve">
          <source>ENGINE</source>
          <target state="translated">ENGINE</target>
        </trans-unit>
        <trans-unit id="349f2678344b9b0a2523d795d5fb6b827a8c0785" translate="yes" xml:space="preserve">
          <source>ENGINE_SCOPE</source>
          <target state="translated">ENGINE_SCOPE</target>
        </trans-unit>
        <trans-unit id="699f2d4f0cdb276b958015dc5dca45acab251e76" translate="yes" xml:space="preserve">
          <source>ENGINE_VERSION</source>
          <target state="translated">ENGINE_VERSION</target>
        </trans-unit>
        <trans-unit id="4a2b354b77f946e12e0e5b81b3239cc8efcbe278" translate="yes" xml:space="preserve">
          <source>ENGLISH</source>
          <target state="translated">ENGLISH</target>
        </trans-unit>
        <trans-unit id="54febf31399865b922c143850536b3c8103720f9" translate="yes" xml:space="preserve">
          <source>ENTER</source>
          <target state="translated">ENTER</target>
        </trans-unit>
        <trans-unit id="e81736da4db98e3e416d7a1d7bc799db11434391" translate="yes" xml:space="preserve">
          <source>ENTERED</source>
          <target state="translated">ENTERED</target>
        </trans-unit>
        <trans-unit id="c94604a8f316df2ba13181d92d05f0aee9d95acd" translate="yes" xml:space="preserve">
          <source>ENTITIES</source>
          <target state="translated">ENTITIES</target>
        </trans-unit>
        <trans-unit id="06e71220e447ac7e5931ca6d88c2302747d2cf69" translate="yes" xml:space="preserve">
          <source>ENTITY</source>
          <target state="translated">ENTITY</target>
        </trans-unit>
        <trans-unit id="5da3f187b960372168de4f4bfb909151ff410187" translate="yes" xml:space="preserve">
          <source>ENTITY_DECLARATION</source>
          <target state="translated">ENTITY_DECLARATION</target>
        </trans-unit>
        <trans-unit id="6262b5d712e6a2b6f4a97a3d3916b07475648991" translate="yes" xml:space="preserve">
          <source>ENTITY_NODE</source>
          <target state="translated">ENTITY_NODE</target>
        </trans-unit>
        <trans-unit id="6a2e22cda59a6934696f97929d8af2aaa2618235" translate="yes" xml:space="preserve">
          <source>ENTITY_REFERENCE</source>
          <target state="translated">ENTITY_REFERENCE</target>
        </trans-unit>
        <trans-unit id="7b552c2729f60d24bac9bf07873875151243cc88" translate="yes" xml:space="preserve">
          <source>ENTITY_REFERENCE_NODE</source>
          <target state="translated">ENTITY_REFERENCE_NODE</target>
        </trans-unit>
        <trans-unit id="ef991d5c4cde33653d2665b6c13fc11c56eb3f5b" translate="yes" xml:space="preserve">
          <source>ENTRY_CREATE</source>
          <target state="translated">ENTRY_CREATE</target>
        </trans-unit>
        <trans-unit id="e1a74e12d659227c84ef7223e000cabff2b54fb7" translate="yes" xml:space="preserve">
          <source>ENTRY_DELETE</source>
          <target state="translated">ENTRY_DELETE</target>
        </trans-unit>
        <trans-unit id="4b7934ace8e8fd618f6a5e0481147c47c29eabb8" translate="yes" xml:space="preserve">
          <source>ENTRY_MODIFY</source>
          <target state="translated">ENTRY_MODIFY</target>
        </trans-unit>
        <trans-unit id="507ccbdaf83ab03c2929498330b7d2836e4c06b2" translate="yes" xml:space="preserve">
          <source>ENUM</source>
          <target state="translated">ENUM</target>
        </trans-unit>
        <trans-unit id="68475bec775f8b9b380a0e04a912508dc18dcd0b" translate="yes" xml:space="preserve">
          <source>ENUM_CONSTANT</source>
          <target state="translated">ENUM_CONSTANT</target>
        </trans-unit>
        <trans-unit id="5a1314ccd8e6a487c3b381d66baf0dd1803fa1cf" translate="yes" xml:space="preserve">
          <source>ENVELOPE</source>
          <target state="translated">ENVELOPE</target>
        </trans-unit>
        <trans-unit id="d5cda10decad38cea58e0c971be53d4f6cc2ef19" translate="yes" xml:space="preserve">
          <source>ENVELOPED</source>
          <target state="translated">ENVELOPED</target>
        </trans-unit>
        <trans-unit id="ce87a664cbc46a5a8d32d4c6375254869c208c6f" translate="yes" xml:space="preserve">
          <source>ENV_10</source>
          <target state="translated">ENV_10</target>
        </trans-unit>
        <trans-unit id="fbd621c378baf7090ca217019a967c29b0791c93" translate="yes" xml:space="preserve">
          <source>ENV_10X13</source>
          <target state="translated">ENV_10X13</target>
        </trans-unit>
        <trans-unit id="11781b33abb566cebd50918511d8bd91687c91eb" translate="yes" xml:space="preserve">
          <source>ENV_10X14</source>
          <target state="translated">ENV_10X14</target>
        </trans-unit>
        <trans-unit id="36b2e38a71bc97b7dd252a6f5b75abe16e4ca736" translate="yes" xml:space="preserve">
          <source>ENV_10X15</source>
          <target state="translated">ENV_10X15</target>
        </trans-unit>
        <trans-unit id="eb6a16c83b8ddbf215ea073db55ff04d5ee3d64b" translate="yes" xml:space="preserve">
          <source>ENV_11</source>
          <target state="translated">ENV_11</target>
        </trans-unit>
        <trans-unit id="95285a108f914eceaee79ed1e5db088a6ec5e2ce" translate="yes" xml:space="preserve">
          <source>ENV_12</source>
          <target state="translated">ENV_12</target>
        </trans-unit>
        <trans-unit id="1c02ad18edbbc695341db54c1e956c19449ea1e4" translate="yes" xml:space="preserve">
          <source>ENV_14</source>
          <target state="translated">ENV_14</target>
        </trans-unit>
        <trans-unit id="264e5587a8822f1917ddb42d3d17623a9c1fe0e9" translate="yes" xml:space="preserve">
          <source>ENV_6X9</source>
          <target state="translated">ENV_6X9</target>
        </trans-unit>
        <trans-unit id="dc0985227af89356db7d775107e665f66ef5c87f" translate="yes" xml:space="preserve">
          <source>ENV_7X9</source>
          <target state="translated">ENV_7X9</target>
        </trans-unit>
        <trans-unit id="15e6c9dcbb7754254fa20683f451332282d0d7fa" translate="yes" xml:space="preserve">
          <source>ENV_9</source>
          <target state="translated">ENV_9</target>
        </trans-unit>
        <trans-unit id="92d6be03eba11ed0bdf0bb0e8a651965911c2e79" translate="yes" xml:space="preserve">
          <source>ENV_9X11</source>
          <target state="translated">ENV_9X11</target>
        </trans-unit>
        <trans-unit id="61fff7c4035b90326e87d38ac2181890fee68155" translate="yes" xml:space="preserve">
          <source>ENV_9X12</source>
          <target state="translated">ENV_9X12</target>
        </trans-unit>
        <trans-unit id="425ee36792e6bec332851f47b37eadb6d15d873c" translate="yes" xml:space="preserve">
          <source>ENV_INVITE</source>
          <target state="translated">ENV_INVITE</target>
        </trans-unit>
        <trans-unit id="4483babd72fb051506ad3f798ffd84b4a2cd14e5" translate="yes" xml:space="preserve">
          <source>ENV_ITALY</source>
          <target state="translated">ENV_ITALY</target>
        </trans-unit>
        <trans-unit id="d094ac5a289f9596fd25c87d05a4f3d962e0b42c" translate="yes" xml:space="preserve">
          <source>ENV_MONARCH</source>
          <target state="translated">ENV_MONARCH</target>
        </trans-unit>
        <trans-unit id="4e59fa0d0f39bf16f522bcc159feae9e9b196c4c" translate="yes" xml:space="preserve">
          <source>ENV_PERSONAL</source>
          <target state="translated">ENV_PERSONAL</target>
        </trans-unit>
        <trans-unit id="c6bf2c7899e6331223de4ae9f50d76a0f8fe3c52" translate="yes" xml:space="preserve">
          <source>EOFException</source>
          <target state="translated">EOFException</target>
        </trans-unit>
        <trans-unit id="180f4ca1eb6f7e228940831c3ed7caa720e87779" translate="yes" xml:space="preserve">
          <source>EPOCH</source>
          <target state="translated">EPOCH</target>
        </trans-unit>
        <trans-unit id="1fcc7a3122a5f8c4140f007182abe0fade082e65" translate="yes" xml:space="preserve">
          <source>EPOCH_DAY</source>
          <target state="translated">EPOCH_DAY</target>
        </trans-unit>
        <trans-unit id="c41a4b4ae13ef007bf159e37752b1d297454b600" translate="yes" xml:space="preserve">
          <source>EQ</source>
          <target state="translated">EQ</target>
        </trans-unit>
        <trans-unit id="988d431198d2495602e3d8a4ab698f1499c93e9b" translate="yes" xml:space="preserve">
          <source>EQUAL</source>
          <target state="translated">EQUAL</target>
        </trans-unit>
        <trans-unit id="47adbfcf54b9ab1b1b54eea502241843be28c71d" translate="yes" xml:space="preserve">
          <source>ERA</source>
          <target state="translated">ERA</target>
        </trans-unit>
        <trans-unit id="e4aa96e435fce45d0d56b2b0019620a16eed5688" translate="yes" xml:space="preserve">
          <source>ERAS</source>
          <target state="translated">ERAS</target>
        </trans-unit>
        <trans-unit id="077bb97a54f149834bd40c1ad3ab8141b7e634d4" translate="yes" xml:space="preserve">
          <source>ERA_FIELD</source>
          <target state="translated">ERA_FIELD</target>
        </trans-unit>
        <trans-unit id="0b99cebe565822c64ac5d84aecb00fe40e59cbd3" translate="yes" xml:space="preserve">
          <source>ERROR</source>
          <target state="translated">ERROR</target>
        </trans-unit>
        <trans-unit id="651b9fb242d78b288546cebe26106d3d3f3b246f" translate="yes" xml:space="preserve">
          <source>ERROR message type.</source>
          <target state="translated">ERROR標準メッセージ。</target>
        </trans-unit>
        <trans-unit id="b62771d0367b66fd9b2d8a2fdb142ebf8bf2ae6b" translate="yes" xml:space="preserve">
          <source>ERRORED</source>
          <target state="translated">ERRORED</target>
        </trans-unit>
        <trans-unit id="6612bce860682c3ec5aaea49933d7336d76173df" translate="yes" xml:space="preserve">
          <source>ERROR_DIALOG</source>
          <target state="translated">ERROR_DIALOG</target>
        </trans-unit>
        <trans-unit id="6a154c64247831d8a7c51b455b6b6b0d10aaf15d" translate="yes" xml:space="preserve">
          <source>ERROR_MESSAGE</source>
          <target state="translated">ERROR_MESSAGE</target>
        </trans-unit>
        <trans-unit id="0d7c8aea238a7dcb2091bade76911d4c7adcf6e1" translate="yes" xml:space="preserve">
          <source>ERROR_OPTION</source>
          <target state="translated">ERROR_OPTION</target>
        </trans-unit>
        <trans-unit id="ac47189c9768197d8574c8f14988b8ef7e5d8f6d" translate="yes" xml:space="preserve">
          <source>ESCAPE</source>
          <target state="translated">ESCAPE</target>
        </trans-unit>
        <trans-unit id="fd484dbbc827b7622686956381db36daef7f712b" translate="yes" xml:space="preserve">
          <source>EST - -05:00</source>
          <target state="translated">EST--05:00</target>
        </trans-unit>
        <trans-unit id="46c27e93c556dbe00ef891baf86b3418d50553fd" translate="yes" xml:space="preserve">
          <source>ETHIOPIC</source>
          <target state="translated">ETHIOPIC</target>
        </trans-unit>
        <trans-unit id="a15a2079da08e3a30c732b3350dafe3bf6305b9f" translate="yes" xml:space="preserve">
          <source>ETHIOPIC_EXTENDED</source>
          <target state="translated">ETHIOPIC_EXTENDED</target>
        </trans-unit>
        <trans-unit id="4e601c4ffe07965449feba2058f2c6a512e892b1" translate="yes" xml:space="preserve">
          <source>ETHIOPIC_EXTENDED_A</source>
          <target state="translated">ETHIOPIC_EXTENDED_A</target>
        </trans-unit>
        <trans-unit id="e7f1c3b504601965ec63c3c5738199dc6e01741d" translate="yes" xml:space="preserve">
          <source>ETHIOPIC_SUPPLEMENT</source>
          <target state="translated">ETHIOPIC_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="b396600e5857bc2a45a4993ebc34394cd7943854" translate="yes" xml:space="preserve">
          <source>EUROPEAN</source>
          <target state="translated">EUROPEAN</target>
        </trans-unit>
        <trans-unit id="fce39c68ed65f718ed283533e549dce3a865f962" translate="yes" xml:space="preserve">
          <source>EXCEEDS_PAD</source>
          <target state="translated">EXCEEDS_PAD</target>
        </trans-unit>
        <trans-unit id="c8a13c755c402a64971d4b98652a6f4e8e3ab1f5" translate="yes" xml:space="preserve">
          <source>EXCEPTION_PARAMETER</source>
          <target state="translated">EXCEPTION_PARAMETER</target>
        </trans-unit>
        <trans-unit id="6a142f6999680571fa05b1a87552e101c1e3b874" translate="yes" xml:space="preserve">
          <source>EXCLUSIVE</source>
          <target state="translated">EXCLUSIVE</target>
        </trans-unit>
        <trans-unit id="85b4313ae6183cace21094761807cbeccf2d5f3a" translate="yes" xml:space="preserve">
          <source>EXCLUSIVE_WITH_COMMENTS</source>
          <target state="translated">EXCLUSIVE_WITH_COMMENTS</target>
        </trans-unit>
        <trans-unit id="03534e945b5d675d412aa5ef2987348d732061fd" translate="yes" xml:space="preserve">
          <source>EXECUTABLE</source>
          <target state="translated">EXECUTABLE</target>
        </trans-unit>
        <trans-unit id="790392d6b839abbb5b061152b6a3114de84502b4" translate="yes" xml:space="preserve">
          <source>EXECUTE</source>
          <target state="translated">EXECUTE</target>
        </trans-unit>
        <trans-unit id="21e0242b95d07993cab09796e508fc8f99d2f69c" translate="yes" xml:space="preserve">
          <source>EXECUTE_FAILED</source>
          <target state="translated">EXECUTE_FAILED</target>
        </trans-unit>
        <trans-unit id="1731ffba0ee4baab452bcabda551595bf603c3b5" translate="yes" xml:space="preserve">
          <source>EXECUTIVE</source>
          <target state="translated">EXECUTIVE</target>
        </trans-unit>
        <trans-unit id="265f8ccfdbf128782bb6e1b613287c8fb4285ac3" translate="yes" xml:space="preserve">
          <source>EXIF_VERSION_2_1</source>
          <target state="translated">EXIF_VERSION_2_1</target>
        </trans-unit>
        <trans-unit id="765b1af0c38f17a0139e81e22884fbf42b7d3819" translate="yes" xml:space="preserve">
          <source>EXIF_VERSION_2_2</source>
          <target state="translated">EXIF_VERSION_2_2</target>
        </trans-unit>
        <trans-unit id="7741ee63e8b7308da71204656ef6eb360ec25a7a" translate="yes" xml:space="preserve">
          <source>EXITED</source>
          <target state="translated">EXITED</target>
        </trans-unit>
        <trans-unit id="d602272f80ba3a8084ea183039ec301de0a74acd" translate="yes" xml:space="preserve">
          <source>EXIT_ON_CLOSE</source>
          <target state="translated">EXIT_ON_CLOSE</target>
        </trans-unit>
        <trans-unit id="6a542797a9d0def7950c1ca477d8e47dd91511c8" translate="yes" xml:space="preserve">
          <source>EXPANDABLE</source>
          <target state="translated">EXPANDABLE</target>
        </trans-unit>
        <trans-unit id="21cae3b0fd89260bfbf57631aa97d32cfd961e4c" translate="yes" xml:space="preserve">
          <source>EXPANDED</source>
          <target state="translated">EXPANDED</target>
        </trans-unit>
        <trans-unit id="8e50b8fc3c383858d56a6418c56bf50dcdf6e4b5" translate="yes" xml:space="preserve">
          <source>EXPANDS_SELECTED_PATHS_PROPERTY</source>
          <target state="translated">EXPANDS_SELECTED_PATHS_PROPERTY</target>
        </trans-unit>
        <trans-unit id="72c0bb5a2c016bd8fd0870d3850d52a2c48c2800" translate="yes" xml:space="preserve">
          <source>EXPIRED</source>
          <target state="translated">EXPIRED</target>
        </trans-unit>
        <trans-unit id="c0c45b9f7e7e985fdee868b380dba9d6e4c82edb" translate="yes" xml:space="preserve">
          <source>EXPLICIT</source>
          <target state="translated">EXPLICIT</target>
        </trans-unit>
        <trans-unit id="b217ce5e2f5a84693915f65137b50128a2d93ecf" translate="yes" xml:space="preserve">
          <source>EXPONENT</source>
          <target state="translated">EXPONENT</target>
        </trans-unit>
        <trans-unit id="4d05c12014f8617e34cf49b2b6521fd877c48bc7" translate="yes" xml:space="preserve">
          <source>EXPONENT_SIGN</source>
          <target state="translated">EXPONENT_SIGN</target>
        </trans-unit>
        <trans-unit id="c2bcab92bdc244db609a58e049f5cefc054387e2" translate="yes" xml:space="preserve">
          <source>EXPONENT_SYMBOL</source>
          <target state="translated">EXPONENT_SYMBOL</target>
        </trans-unit>
        <trans-unit id="e9e012170f2df7cb18fa26019e2b46cbf4a91319" translate="yes" xml:space="preserve">
          <source>EXPORTS</source>
          <target state="translated">EXPORTS</target>
        </trans-unit>
        <trans-unit id="1cb81bbefb95ab841ad090ad64790c70ec0555fb" translate="yes" xml:space="preserve">
          <source>EXPOSURE_MODE_AUTO_BRACKET</source>
          <target state="translated">EXPOSURE_MODE_AUTO_BRACKET</target>
        </trans-unit>
        <trans-unit id="88918aeadd8180bf0b8e46f39ba3957c755aef24" translate="yes" xml:space="preserve">
          <source>EXPOSURE_MODE_AUTO_EXPOSURE</source>
          <target state="translated">EXPOSURE_MODE_AUTO_EXPOSURE</target>
        </trans-unit>
        <trans-unit id="0e123aadfd6077d49774eb5acb2052aeb1ab6cec" translate="yes" xml:space="preserve">
          <source>EXPOSURE_MODE_MANUAL_EXPOSURE</source>
          <target state="translated">EXPOSURE_MODE_MANUAL_EXPOSURE</target>
        </trans-unit>
        <trans-unit id="4ca7e239429054de5a52591d35dbcb769617cec4" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_ACTION_PROGRAM</source>
          <target state="translated">EXPOSURE_PROGRAM_ACTION_PROGRAM</target>
        </trans-unit>
        <trans-unit id="560fd1045a64d1cfd5045f2bd364df1eb414deef" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_APERTURE_PRIORITY</source>
          <target state="translated">EXPOSURE_PROGRAM_APERTURE_PRIORITY</target>
        </trans-unit>
        <trans-unit id="492a0f53ce9dba35566d20e65a7f0607fb38a5d4" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_CREATIVE_PROGRAM</source>
          <target state="translated">EXPOSURE_PROGRAM_CREATIVE_PROGRAM</target>
        </trans-unit>
        <trans-unit id="813c27de2197086f8e0bf370dd8adef414711379" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_LANDSCAPE_MODE</source>
          <target state="translated">EXPOSURE_PROGRAM_LANDSCAPE_MODE</target>
        </trans-unit>
        <trans-unit id="99beb87991699e7ac7624b769c61e8cb5bd5451f" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_MANUAL</source>
          <target state="translated">EXPOSURE_PROGRAM_MANUAL</target>
        </trans-unit>
        <trans-unit id="4cb11f65480f0ea1968f9764a168e780aae9f2a7" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_MAX_RESERVED</source>
          <target state="translated">EXPOSURE_PROGRAM_MAX_RESERVED</target>
        </trans-unit>
        <trans-unit id="41408dddb1dfb37f1f4a74291b7609974069a32c" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_NORMAL_PROGRAM</source>
          <target state="translated">EXPOSURE_PROGRAM_NORMAL_PROGRAM</target>
        </trans-unit>
        <trans-unit id="4850260cac761733bd738f7300d381382c9ff07c" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_NOT_DEFINED</source>
          <target state="translated">EXPOSURE_PROGRAM_NOT_DEFINED</target>
        </trans-unit>
        <trans-unit id="3e81b5d24204352f21ef0d6f60feaa2172d794a9" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_PORTRAIT_MODE</source>
          <target state="translated">EXPOSURE_PROGRAM_PORTRAIT_MODE</target>
        </trans-unit>
        <trans-unit id="47375b028192697d6d3ade74cb997f5a313696b7" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_SHUTTER_PRIORITY</source>
          <target state="translated">EXPOSURE_PROGRAM_SHUTTER_PRIORITY</target>
        </trans-unit>
        <trans-unit id="26a2fbfc322563a8440845ba951ca490ee30369d" translate="yes" xml:space="preserve">
          <source>EXTCRC</source>
          <target state="translated">EXTCRC</target>
        </trans-unit>
        <trans-unit id="cb537b8baaa53b3f29896a0373eaa7d0333a79eb" translate="yes" xml:space="preserve">
          <source>EXTENDED_FILTERING</source>
          <target state="translated">EXTENDED_FILTERING</target>
        </trans-unit>
        <trans-unit id="4db927d43d61b35fff54bd6c323b8710b34c3d99" translate="yes" xml:space="preserve">
          <source>EXTENSION_INSTALLATION</source>
          <target state="translated">EXTENSION_INSTALLATION</target>
        </trans-unit>
        <trans-unit id="41eb60c34fe710529f77d955b275d64c5915a5de" translate="yes" xml:space="preserve">
          <source>EXTENSION_LIST</source>
          <target state="translated">EXTENSION_LIST</target>
        </trans-unit>
        <trans-unit id="6857c1686c9ac8872c8c0399e4cf9dc0375c2608" translate="yes" xml:space="preserve">
          <source>EXTENSION_NAME</source>
          <target state="translated">EXTENSION_NAME</target>
        </trans-unit>
        <trans-unit id="5773fcd27b5d64b8c5e2a344515db52b928e31a2" translate="yes" xml:space="preserve">
          <source>EXTHDR</source>
          <target state="translated">EXTHDR</target>
        </trans-unit>
        <trans-unit id="a45713b57586e6acc311c72dac2275618c96be2c" translate="yes" xml:space="preserve">
          <source>EXTLEN</source>
          <target state="translated">EXTLEN</target>
        </trans-unit>
        <trans-unit id="55d13329c000a46c7b56f6e6e0dd304192c5d8df" translate="yes" xml:space="preserve">
          <source>EXTRA_SAMPLES_ASSOCIATED_ALPHA</source>
          <target state="translated">EXTRA_SAMPLES_ASSOCIATED_ALPHA</target>
        </trans-unit>
        <trans-unit id="9367576f95ed5badaa7d392d92d839aab3058eaa" translate="yes" xml:space="preserve">
          <source>EXTRA_SAMPLES_UNASSOCIATED_ALPHA</source>
          <target state="translated">EXTRA_SAMPLES_UNASSOCIATED_ALPHA</target>
        </trans-unit>
        <trans-unit id="c92e8254ff0e94e0e91f28a83fe73b5d8ae2c479" translate="yes" xml:space="preserve">
          <source>EXTRA_SAMPLES_UNSPECIFIED</source>
          <target state="translated">EXTRA_SAMPLES_UNSPECIFIED</target>
        </trans-unit>
        <trans-unit id="d898f6ff8fc917535a2d6319379be4322d743dc2" translate="yes" xml:space="preserve">
          <source>EXTSIG</source>
          <target state="translated">EXTSIG</target>
        </trans-unit>
        <trans-unit id="4b242b26c327d4a78a810fa263c50adc3f2ef775" translate="yes" xml:space="preserve">
          <source>EXTSIZ</source>
          <target state="translated">EXTSIZ</target>
        </trans-unit>
        <trans-unit id="bfcd7ad573aecb8012c07a6e30382c23b73f59d3" translate="yes" xml:space="preserve">
          <source>E_RESIZE_CURSOR</source>
          <target state="translated">E_RESIZE_CURSOR</target>
        </trans-unit>
        <trans-unit id="cfbf2c29538c8d5e46b5f7ccfd1a51dccd28488c" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;../componentui&quot;&gt;&lt;code&gt;ComponentUI&lt;/code&gt;&lt;/a&gt; implementation in Synth associates itself with one &lt;a href=&quot;synthstyle&quot;&gt;&lt;code&gt;SynthStyle&lt;/code&gt;&lt;/a&gt; per &lt;a href=&quot;region&quot;&gt;&lt;code&gt;Region&lt;/code&gt;&lt;/a&gt;, most &lt;code&gt;Components&lt;/code&gt; only have one &lt;code&gt;Region&lt;/code&gt; and therefor only one &lt;code&gt;SynthStyle&lt;/code&gt;. &lt;code&gt;SynthStyle&lt;/code&gt; is used to access all style related properties: fonts, colors and other &lt;code&gt;Component&lt;/code&gt; properties. In addition &lt;code&gt;SynthStyle&lt;/code&gt;s are used to obtain &lt;a href=&quot;synthpainter&quot;&gt;&lt;code&gt;SynthPainter&lt;/code&gt;&lt;/a&gt;s for painting the background, border, focus and other portions of a &lt;code&gt;Component&lt;/code&gt;. The &lt;code&gt;ComponentUI&lt;/code&gt;s obtain &lt;code&gt;SynthStyle&lt;/code&gt;s from a &lt;a href=&quot;synthstylefactory&quot;&gt;&lt;code&gt;SynthStyleFactory&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;SynthStyleFactory&lt;/code&gt; can be provided directly by way of &lt;a href=&quot;synthlookandfeel#setStyleFactory(javax.swing.plaf.synth.SynthStyleFactory)&quot;&gt;&lt;code&gt;SynthLookAndFeel.setStyleFactory(javax.swing.plaf.synth.SynthStyleFactory)&lt;/code&gt;&lt;/a&gt;, or indirectly by way of &lt;a href=&quot;synthlookandfeel#load(java.io.InputStream,java.lang.Class)&quot;&gt;&lt;code&gt;SynthLookAndFeel.load(java.io.InputStream, java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt;. The following example uses the &lt;code&gt;SynthLookAndFeel.load()&lt;/code&gt; method to configure a &lt;code&gt;SynthLookAndFeel&lt;/code&gt; and sets it as the current look and feel:</source>
          <target state="translated">Synthの各&lt;a href=&quot;../componentui&quot;&gt; &lt;code&gt;ComponentUI&lt;/code&gt; &lt;/a&gt;実装は、&lt;a href=&quot;region&quot;&gt; &lt;code&gt;Region&lt;/code&gt; &lt;/a&gt;ごとに1つの&lt;a href=&quot;synthstyle&quot;&gt; &lt;code&gt;SynthStyle&lt;/code&gt; に&lt;/a&gt;関連付けられます。ほとんどの &lt;code&gt;Components&lt;/code&gt; は、 &lt;code&gt;Region&lt;/code&gt; が1つしかないため、 &lt;code&gt;SynthStyle&lt;/code&gt; は1つだけです。 &lt;code&gt;SynthStyle&lt;/code&gt; は、フォント、色、その他の &lt;code&gt;Component&lt;/code&gt; プロパティなど、スタイルに関連するすべてのプロパティにアクセスするために使用されます。さらに、 &lt;code&gt;SynthStyle&lt;/code&gt; は、 &lt;code&gt;Component&lt;/code&gt; の背景、境界線、フォーカス、およびその他の部分をペイントするための&lt;a href=&quot;synthpainter&quot;&gt; &lt;code&gt;SynthPainter&lt;/code&gt; &lt;/a&gt;を取得するために使用されます。 &lt;code&gt;ComponentUI&lt;/code&gt; のsの取得 &lt;code&gt;SynthStyle&lt;/code&gt; のから秒&lt;a href=&quot;synthstylefactory&quot;&gt; &lt;code&gt;SynthStyleFactory&lt;/code&gt; &lt;/a&gt;。 A &lt;code&gt;SynthStyleFactory&lt;/code&gt; は、&lt;a href=&quot;synthlookandfeel#setStyleFactory(javax.swing.plaf.synth.SynthStyleFactory)&quot;&gt; &lt;code&gt;SynthLookAndFeel.setStyleFactory(javax.swing.plaf.synth.SynthStyleFactory)&lt;/code&gt; &lt;/a&gt;を介して直接提供することも、&lt;a href=&quot;synthlookandfeel#load(java.io.InputStream,java.lang.Class)&quot;&gt; &lt;code&gt;SynthLookAndFeel.load(java.io.InputStream, java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;を介して間接的に提供することもできます。次の例では、 &lt;code&gt;SynthLookAndFeel.load()&lt;/code&gt; メソッドを使用して &lt;code&gt;SynthLookAndFeel&lt;/code&gt; を構成し、それを現在のルックアンドフィールとして設定します。</target>
        </trans-unit>
        <trans-unit id="da248787a223916e361a85d5182392daac8dc025" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;../modulelayer&quot;&gt;&lt;code&gt;layer&lt;/code&gt;&lt;/a&gt; of modules in the Java virtual machine is created from a configuration. The configuration for the &lt;a href=&quot;../modulelayer#boot()&quot;&gt;&lt;code&gt;boot&lt;/code&gt;&lt;/a&gt; layer is obtained by invoking &lt;code&gt;
 ModuleLayer.boot().configuration()&lt;/code&gt;. The configuration for the boot layer will often be the parent when creating new configurations.</source>
          <target state="translated">Java仮想マシンのモジュールの各&lt;a href=&quot;../modulelayer&quot;&gt; &lt;code&gt;layer&lt;/code&gt; &lt;/a&gt;は、構成から作成されます。&lt;a href=&quot;../modulelayer#boot()&quot;&gt; &lt;code&gt;boot&lt;/code&gt; &lt;/a&gt;レイヤーの構成は、 &lt;code&gt; ModuleLayer.boot().configuration()&lt;/code&gt; を呼び出すことによって取得されます。多くの場合、ブートレイヤーの構成は、新しい構成を作成するときに親になります。</target>
        </trans-unit>
        <trans-unit id="a6d0cff754314713de966651f47bf73018de3040" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ArrayList&lt;/code&gt; instance has a</source>
          <target state="translated">各 &lt;code&gt;ArrayList&lt;/code&gt; インスタンスには、</target>
        </trans-unit>
        <trans-unit id="0ac481ea2ac49d007102ab13a142c47741576701" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CachedRowSet&lt;/code&gt; method that moves the cursor or changes data also notifies registered listeners of the changes, so &lt;code&gt;table&lt;/code&gt; and &lt;code&gt;barGraph&lt;/code&gt; will be notified when there is a change in &lt;code&gt;crs&lt;/code&gt;.</source>
          <target state="translated">カーソルを移動したりデータを変更したりする各 &lt;code&gt;CachedRowSet&lt;/code&gt; メソッドは、登録済みのリスナーにも変更を通知するため、 &lt;code&gt;crs&lt;/code&gt; に変更があった場合は &lt;code&gt;table&lt;/code&gt; と &lt;code&gt;barGraph&lt;/code&gt; に通知されます。</target>
        </trans-unit>
        <trans-unit id="642186babe02b4786c0913c6a080f938964519d8" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CachedRowSet&lt;/code&gt; object's &lt;code&gt;SyncProvider&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it's constructors.</source>
          <target state="translated">各 &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトの &lt;code&gt;SyncProvider&lt;/code&gt; には、コンストラクターに渡される &lt;code&gt;ResultSet&lt;/code&gt; またはJDBCプロパティからの &lt;code&gt;Connection&lt;/code&gt; オブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="b8899455cc12cf2a5280f0b59f353f4d1c15ff7a" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CachedRowSet&lt;/code&gt; object's &lt;code&gt;SyncProvider&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it's constructors. This method wraps the &lt;code&gt;Connection&lt;/code&gt; commit method to allow flexible auto commit or non auto commit transactional control support.</source>
          <target state="translated">各 &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトの &lt;code&gt;SyncProvider&lt;/code&gt; には、コンストラクターに渡される &lt;code&gt;ResultSet&lt;/code&gt; またはJDBCプロパティからの &lt;code&gt;Connection&lt;/code&gt; オブジェクトが含まれています。このメソッドは、 &lt;code&gt;Connection&lt;/code&gt; コミットメソッドをラップして、柔軟な自動コミットまたは非自動コミットのトランザクション制御のサポートを可能にします。</target>
        </trans-unit>
        <trans-unit id="6222a085166204e6c59bd3a50dd9571efba94026" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CachedRowSet&lt;/code&gt; object's &lt;code&gt;SyncProvider&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the original &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it.</source>
          <target state="translated">各 &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトの &lt;code&gt;SyncProvider&lt;/code&gt; には、渡された元の &lt;code&gt;ResultSet&lt;/code&gt; またはJDBCプロパティからの &lt;code&gt;Connection&lt;/code&gt; オブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="ca13a52b641d900d061b51017f19f5986654d83b" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CertPath&lt;/code&gt; object must support one or more encodings so that the object can be translated into a byte array for storage or transmission to other parties. Preferably, these encodings should be well-documented standards (such as PKCS#7). One of the encodings supported by a &lt;code&gt;CertPath&lt;/code&gt; is considered the default encoding. This encoding is used if no encoding is explicitly requested (for the &lt;a href=&quot;#getEncoded()&quot;&gt;&lt;code&gt;getEncoded()&lt;/code&gt;&lt;/a&gt; method, for instance).</source>
          <target state="translated">各 &lt;code&gt;CertPath&lt;/code&gt; オブジェクトは、オブジェクトをバイト配列に変換して保存したり、他の関係者に送信したりできるように、1つ以上のエンコーディングをサポートする必要があります。できれば、これらのエンコーディングは十分に文書化された標準（PKCS＃7など）である必要があります。 &lt;code&gt;CertPath&lt;/code&gt; でサポートされているエンコーディングの1つは、デフォルトのエンコーディングと見なされます。このエンコーディングは、エンコーディングが明示的に要求されていない場合に使用されます&lt;a href=&quot;#getEncoded()&quot;&gt; &lt;code&gt;getEncoded()&lt;/code&gt; &lt;/a&gt;たとえば、getEncoded（）メソッドの場合）。</target>
        </trans-unit>
        <trans-unit id="a840f61339005907763e96498f0cf96263613394" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CertPath&lt;/code&gt; object must support one or more encodings so that the object can be translated into a byte array for storage or transmission to other parties. Preferably, these encodings should be well-documented standards (such as PKCS#7). One of the encodings supported by a &lt;code&gt;CertPath&lt;/code&gt; is considered the default encoding. This encoding is used if no encoding is explicitly requested (for the &lt;a href=&quot;certpath#getEncoded--&quot;&gt;&lt;code&gt;getEncoded()&lt;/code&gt;&lt;/a&gt; method, for instance).</source>
          <target state="translated">各 &lt;code&gt;CertPath&lt;/code&gt; オブジェクトは1つ以上のエンコーディングをサポートしている必要があります。これにより、オブジェクトをバイト配列に変換して、格納したり、他のパーティに送信したりできます。できれば、これらのエンコーディングは十分に文書化された標準（PKCS＃7など）である必要があります。 &lt;code&gt;CertPath&lt;/code&gt; でサポートされているエンコーディングの1つは、デフォルトのエンコーディングと見なされます。このエンコードは、エンコードが明示的に要求されていない場合に使用されます&lt;a href=&quot;certpath#getEncoded--&quot;&gt; &lt;code&gt;getEncoded()&lt;/code&gt; &lt;/a&gt;たとえば、getEncoded（）メソッドの場合）。</target>
        </trans-unit>
        <trans-unit id="149fca2b607196a4885c857e57aa928b14d4cd95" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CompiledScript&lt;/code&gt; is associated with a &lt;code&gt;ScriptEngine&lt;/code&gt; -- A call to an &lt;code&gt;eval&lt;/code&gt; method of the &lt;code&gt;CompiledScript&lt;/code&gt; causes the execution of the script by the &lt;code&gt;ScriptEngine&lt;/code&gt;. Changes in the state of the &lt;code&gt;ScriptEngine&lt;/code&gt; caused by execution of the &lt;code&gt;CompiledScript&lt;/code&gt; may visible during subsequent executions of scripts by the engine.</source>
          <target state="translated">各 &lt;code&gt;CompiledScript&lt;/code&gt; が関連付けられている &lt;code&gt;ScriptEngine&lt;/code&gt; -への呼び出し &lt;code&gt;eval&lt;/code&gt; の方法 &lt;code&gt;CompiledScript&lt;/code&gt; は、によってスクリプトの実行原因となる &lt;code&gt;ScriptEngine&lt;/code&gt; 。 &lt;code&gt;CompiledScript&lt;/code&gt; の実行によって引き起こされる &lt;code&gt;ScriptEngine&lt;/code&gt; の状態の変化は、エンジンによる後続のスクリプトの実行中に表示される場合があります。</target>
        </trans-unit>
        <trans-unit id="b920b9e6c102afcda71f6cb71988e34314718a46" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Component&lt;/code&gt; object is limited in its maximum size and its location because the values are stored as an integer. Also, a platform may further restrict maximum size and location coordinates. The exact maximum values are dependent on the platform. There is no way to change these maximum values, either in Java code or in native code. These limitations also impose restrictions on component layout. If the bounds of a Component object exceed a platform limit, there is no way to properly arrange them within a Container object. The object's bounds are defined by any object's coordinate in combination with its size on a respective axis.</source>
          <target state="translated">値は整数として格納されるため、各 &lt;code&gt;Component&lt;/code&gt; オブジェクトの最大サイズと場所は制限されています。また、プラットフォームは最大サイズと位置座標をさらに制限する場合があります。正確な最大値はプラットフォームによって異なります。 Javaコードでもネイティブコードでも、これらの最大値を変更する方法はありません。これらの制限により、コンポーネントのレイアウトにも制限が課せられます。 Componentオブジェクトの境界がプラットフォームの制限を超える場合、Containerオブジェクト内でそれらを適切に配置する方法はありません。オブジェクトの境界は、オブジェクトの座標とそれぞれの軸上のサイズの組み合わせによって定義されます。</target>
        </trans-unit>
        <trans-unit id="80a759c144e71d923e5bd491612f86b2cacc7fc0" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Document&lt;/code&gt; has a &lt;code&gt;doctype&lt;/code&gt; attribute whose value is either &lt;code&gt;null&lt;/code&gt; or a &lt;code&gt;DocumentType&lt;/code&gt; object.</source>
          <target state="translated">各 &lt;code&gt;Document&lt;/code&gt; は、値が &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;DocumentType&lt;/code&gt; オブジェクトのいずれかである &lt;code&gt;doctype&lt;/code&gt; 属性があります。</target>
        </trans-unit>
        <trans-unit id="71bead5ee53ca6876dc26d5c977691e6c014ef1c" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Document&lt;/code&gt; has a &lt;code&gt;doctype&lt;/code&gt; attribute whose value is either &lt;code&gt;null&lt;/code&gt; or a &lt;code&gt;DocumentType&lt;/code&gt; object. The &lt;code&gt;DocumentType&lt;/code&gt; interface in the DOM Core provides an interface to the list of entities that are defined for the document, and little else because the effect of namespaces and the various XML schema efforts on DTD representation are not clearly understood as of this writing.</source>
          <target state="translated">各 &lt;code&gt;Document&lt;/code&gt; は、値が &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;DocumentType&lt;/code&gt; オブジェクトのいずれかである &lt;code&gt;doctype&lt;/code&gt; 属性があります。DOM Coreの &lt;code&gt;DocumentType&lt;/code&gt; インターフェイスは、ドキュメントに定義されているエンティティのリストへのインターフェイスを提供しますが、この記事の執筆時点では、名前空間とさまざまなXMLスキーマの取り組みがDTD表現に与える影響が明確に理解されていないためです。</target>
        </trans-unit>
        <trans-unit id="d194b42595de95b78001024663c0ae1838ff88e9" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;DropTarget&lt;/code&gt; is associated with a &lt;code&gt;FlavorMap&lt;/code&gt;. The default &lt;code&gt;FlavorMap&lt;/code&gt; hereafter designates the &lt;code&gt;FlavorMap&lt;/code&gt; returned by &lt;code&gt;SystemFlavorMap.getDefaultFlavorMap()&lt;/code&gt;.</source>
          <target state="translated">各 &lt;code&gt;DropTarget&lt;/code&gt; は &lt;code&gt;FlavorMap&lt;/code&gt; に関連付けられています。デフォルト &lt;code&gt;FlavorMap&lt;/code&gt; 以下を指定 &lt;code&gt;FlavorMap&lt;/code&gt; で返さ &lt;code&gt;SystemFlavorMap.getDefaultFlavorMap()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65a0e6bd3b1d57e14b8350f6e0fc41469416cad5" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;GlyphJustificationInfo&lt;/code&gt; represents two sets of metrics, which are</source>
          <target state="translated">各 &lt;code&gt;GlyphJustificationInfo&lt;/code&gt; は、2セットのメトリックを表します。</target>
        </trans-unit>
        <trans-unit id="f27124d10894e68d1709bed5e29c408a3fa942eb" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ImageReaderSpi&lt;/code&gt; provides several types of information about the &lt;code&gt;ImageReader&lt;/code&gt; class with which it is associated.</source>
          <target state="translated">各 &lt;code&gt;ImageReaderSpi&lt;/code&gt; は、関連付けられている &lt;code&gt;ImageReader&lt;/code&gt; クラスに関するいくつかのタイプの情報を提供します。</target>
        </trans-unit>
        <trans-unit id="72ee52ae769db4712131ca37095c4dc2f78ce671" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ImageWriterSpi&lt;/code&gt; provides several types of information about the &lt;code&gt;ImageWriter&lt;/code&gt; class with which it is associated.</source>
          <target state="translated">各 &lt;code&gt;ImageWriterSpi&lt;/code&gt; は、関連付けられている &lt;code&gt;ImageWriter&lt;/code&gt; クラスに関するいくつかのタイプの情報を提供します。</target>
        </trans-unit>
        <trans-unit id="d94383be3f3f0c163a098b317ea993f35beddc58" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;JdbcRowSet&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it's constructors.</source>
          <target state="translated">各 &lt;code&gt;JdbcRowSet&lt;/code&gt; には、コンストラクターに渡された &lt;code&gt;ResultSet&lt;/code&gt; またはJDBCプロパティからの &lt;code&gt;Connection&lt;/code&gt; オブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="1a6bbe06a6aa7adbe0032e618ddb49fb8b853378" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;JdbcRowSet&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it's constructors. This method wraps the &lt;code&gt;Connection&lt;/code&gt; commit method to allow flexible auto commit or non auto commit transactional control support.</source>
          <target state="translated">各 &lt;code&gt;JdbcRowSet&lt;/code&gt; には、コンストラクターに渡された &lt;code&gt;ResultSet&lt;/code&gt; またはJDBCプロパティからの &lt;code&gt;Connection&lt;/code&gt; オブジェクトが含まれています。このメソッドは、 &lt;code&gt;Connection&lt;/code&gt; コミットメソッドをラップして、柔軟な自動コミットまたは非自動コミットのトランザクション制御のサポートを可能にします。</target>
        </trans-unit>
        <trans-unit id="1d1b258ca61b6513923027b00f6a85f3a58fd590" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;JdbcRowSet&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the original &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it.</source>
          <target state="translated">各 &lt;code&gt;JdbcRowSet&lt;/code&gt; には、渡された元の &lt;code&gt;ResultSet&lt;/code&gt; またはJDBCプロパティからの &lt;code&gt;Connection&lt;/code&gt; オブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="1349b19f9931758b2ece8a2b18929e659b373a65" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;JdbcRowSet&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the original &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it. This method wraps the &lt;code&gt;Connection&lt;/code&gt;'s &lt;code&gt;getAutoCommit&lt;/code&gt; method to allow an application to determine the &lt;code&gt;JdbcRowSet&lt;/code&gt; transaction behavior.</source>
          <target state="translated">各 &lt;code&gt;JdbcRowSet&lt;/code&gt; には、渡された元の &lt;code&gt;ResultSet&lt;/code&gt; またはJDBCプロパティからの &lt;code&gt;Connection&lt;/code&gt; オブジェクトが含まれています。このメソッドは、 &lt;code&gt;Connection&lt;/code&gt; の &lt;code&gt;getAutoCommit&lt;/code&gt; メソッドをラップして、アプリケーションが &lt;code&gt;JdbcRowSet&lt;/code&gt; トランザクションの動作を決定できるようにします。</target>
        </trans-unit>
        <trans-unit id="37e567af0037708b3e1feaced1154c834fbacf12" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;JdbcRowSet&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the original &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it. This method wraps the &lt;code&gt;Connection&lt;/code&gt;'s &lt;code&gt;getAutoCommit&lt;/code&gt; method to allow an application to set the &lt;code&gt;JdbcRowSet&lt;/code&gt; transaction behavior.</source>
          <target state="translated">各 &lt;code&gt;JdbcRowSet&lt;/code&gt; には、渡された元の &lt;code&gt;ResultSet&lt;/code&gt; またはJDBCプロパティからの &lt;code&gt;Connection&lt;/code&gt; オブジェクトが含まれています。このメソッドは、 &lt;code&gt;Connection&lt;/code&gt; の &lt;code&gt;getAutoCommit&lt;/code&gt; メソッドをラップして、アプリケーションが &lt;code&gt;JdbcRowSet&lt;/code&gt; トランザクションの動作を設定できるようにします。</target>
        </trans-unit>
        <trans-unit id="1e70e16bd676858c2d8523762ce1e197ced896a2" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;JdbcRowSet&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the original &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it. Undoes all changes made in the current transaction and releases any database locks currently held by this &lt;code&gt;Connection&lt;/code&gt; object. This method should be used only when auto-commit mode has been disabled.</source>
          <target state="translated">各 &lt;code&gt;JdbcRowSet&lt;/code&gt; には、渡された元の &lt;code&gt;ResultSet&lt;/code&gt; またはJDBCプロパティからの &lt;code&gt;Connection&lt;/code&gt; オブジェクトが含まれています。現在のトランザクションで行われたすべての変更を元に戻し、この &lt;code&gt;Connection&lt;/code&gt; オブジェクトによって現在保持されているデータベースロックを解放します。この方法は、自動コミットモードが無効になっている場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="759fb3f91fa9dcc58dd0f0848c7ea4410a0acdc6" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;JdbcRowSet&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the original &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it. Undoes all changes made in the current transaction to the last set savepoint and releases any database locks currently held by this &lt;code&gt;Connection&lt;/code&gt; object. This method should be used only when auto-commit mode has been disabled.</source>
          <target state="translated">各 &lt;code&gt;JdbcRowSet&lt;/code&gt; には、渡された元の &lt;code&gt;ResultSet&lt;/code&gt; またはJDBCプロパティからの &lt;code&gt;Connection&lt;/code&gt; オブジェクトが含まれています。現在のトランザクションで最後に設定されたセーブポイントに対して行われたすべての変更を元に戻し、この &lt;code&gt;Connection&lt;/code&gt; オブジェクトによって現在保持されているデータベースロックを解放します。この方法は、自動コミットモードが無効になっている場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="344e5b514a3f5acb4c353bb4e3260d470718742d" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;LookAndFeel&lt;/code&gt; implementation must provide an implementation of the appropriate &lt;code&gt;ComponentUI&lt;/code&gt; subclass by specifying a value for each of Swing's ui class ids in the &lt;code&gt;
 UIDefaults&lt;/code&gt; object returned from &lt;code&gt;getDefaults&lt;/code&gt;. For example, &lt;code&gt;BasicLookAndFeel&lt;/code&gt; uses &lt;code&gt;BasicTreeUI&lt;/code&gt; as the concrete implementation for &lt;code&gt;TreeUI&lt;/code&gt;. This is accomplished by &lt;code&gt;
 BasicLookAndFeel&lt;/code&gt; providing the key-value pair &lt;code&gt;
 &quot;TreeUI&quot;-&quot;javax.swing.plaf.basic.BasicTreeUI&quot;&lt;/code&gt;, in the &lt;code&gt;UIDefaults&lt;/code&gt; returned from &lt;code&gt;getDefaults&lt;/code&gt;. Refer to &lt;a href=&quot;uidefaults#getUI(javax.swing.JComponent)&quot;&gt;&lt;code&gt;UIDefaults.getUI(JComponent)&lt;/code&gt;&lt;/a&gt; for details on how the implementation of the &lt;code&gt;ComponentUI&lt;/code&gt; subclass is obtained.</source>
          <target state="translated">各 &lt;code&gt;LookAndFeel&lt;/code&gt; 実装は、 &lt;code&gt;getDefaults&lt;/code&gt; から返される &lt;code&gt; UIDefaults&lt;/code&gt; オブジェクトでSwingの各uiクラスIDの値を指定することにより、適切な &lt;code&gt;ComponentUI&lt;/code&gt; サブクラスの実装を提供する必要があります。たとえば、 &lt;code&gt;BasicLookAndFeel&lt;/code&gt; は、TreeUIの具体的な実装として &lt;code&gt;BasicTreeUI&lt;/code&gt; を使用し &lt;code&gt;TreeUI&lt;/code&gt; 。これは、によって達成される &lt;code&gt; BasicLookAndFeel&lt;/code&gt; キーと値のペア提供 &lt;code&gt; &quot;TreeUI&quot;-&quot;javax.swing.plaf.basic.BasicTreeUI&quot;&lt;/code&gt; 、内 &lt;code&gt;UIDefaults&lt;/code&gt; から返さ &lt;code&gt;getDefaults&lt;/code&gt; を。&lt;a href=&quot;uidefaults#getUI(javax.swing.JComponent)&quot;&gt; &lt;code&gt;UIDefaults.getUI(JComponent)&lt;/code&gt; を&lt;/a&gt;参照してください &lt;code&gt;ComponentUI&lt;/code&gt; サブクラスの実装を取得する方法の詳細については。</target>
        </trans-unit>
        <trans-unit id="1ef2b1fff42323fb4c5c06f1cc5fc73781997d14" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Module&lt;/code&gt; in a layer is created so that it &lt;a href=&quot;module#isExported(java.lang.String)&quot;&gt;&lt;code&gt;exports&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;module#isOpen(java.lang.String)&quot;&gt;&lt;code&gt;opens&lt;/code&gt;&lt;/a&gt; the packages described by its &lt;a href=&quot;module/moduledescriptor&quot;&gt;&lt;code&gt;ModuleDescriptor&lt;/code&gt;&lt;/a&gt;. Qualified exports (where a package is exported to a set of target modules rather than all modules) are reified when creating the layer as follows:</source>
          <target state="translated">レイヤー内の各 &lt;code&gt;Module&lt;/code&gt; は、&lt;a href=&quot;module/moduledescriptor&quot;&gt; &lt;code&gt;ModuleDescriptor&lt;/code&gt; &lt;/a&gt;によって記述されたパッケージを&lt;a href=&quot;module#isExported(java.lang.String)&quot;&gt; &lt;code&gt;exports&lt;/code&gt; &lt;/a&gt;して&lt;a href=&quot;module#isOpen(java.lang.String)&quot;&gt; &lt;code&gt;opens&lt;/code&gt; &lt;/a&gt;ように作成されます。修飾されたエクスポート（パッケージがすべてのモジュールではなくターゲットモジュールのセットにエクスポートされる場合）は、次のようにレイヤーを作成するときに具体化されます。</target>
        </trans-unit>
        <trans-unit id="9fd3cc0500b20ea7e632cc10c3d71e047b6e2776" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; specified implements additional checks on a certificate. Typically, these are checks to process and verify private extensions contained in certificates. Each &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; should be instantiated with any initialization parameters needed to execute the check.</source>
          <target state="translated">指定された各 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; は、証明書に追加のチェックを実装します。通常、これらは証明書に含まれるプライベート拡張を処理および検証するためのチェックです。各 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; は、チェックの実行に必要な初期化パラメーターを使用してインスタンス化する必要があります。</target>
        </trans-unit>
        <trans-unit id="c4bc814f0442e2a365e1984e9a9ac3e17be723aa" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; must be able to check the revocation status of certificates with OCSP and CRLs. By default, OCSP is the preferred mechanism for checking revocation status, with CRLs as the fallback mechanism. However, this preference can be switched to CRLs with the &lt;a href=&quot;pkixrevocationchecker.option#PREFER_CRLS&quot;&gt;&lt;code&gt;PREFER_CRLS&lt;/code&gt;&lt;/a&gt; option. In addition, the fallback mechanism can be disabled with the &lt;a href=&quot;pkixrevocationchecker.option#NO_FALLBACK&quot;&gt;&lt;code&gt;NO_FALLBACK&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">各 &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; は、OCSPおよびCRLを使用して証明書の失効ステータスをチェックできる必要があります。デフォルトでは、OCSPが失効ステータスをチェックするための推奨メカニズムであり、CRLがフォールバックメカニズムとして使用されます。ただし、この設定は&lt;a href=&quot;pkixrevocationchecker.option#PREFER_CRLS&quot;&gt; &lt;code&gt;PREFER_CRLS&lt;/code&gt; &lt;/a&gt;オプションを使用してCRLに切り替えることができます。さらに、&lt;a href=&quot;pkixrevocationchecker.option#NO_FALLBACK&quot;&gt; &lt;code&gt;NO_FALLBACK&lt;/code&gt; &lt;/a&gt;オプションを使用してフォールバックメカニズムを無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="8c13d441d014f6148c9d1a63f34c97fb8c5c06dc" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ProcessBuilder&lt;/code&gt; instance manages a collection of process attributes. The &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method creates a new &lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; instance with those attributes. The &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method can be invoked repeatedly from the same instance to create new subprocesses with identical or related attributes.</source>
          <target state="translated">各 &lt;code&gt;ProcessBuilder&lt;/code&gt; インスタンスは、プロセス属性のコレクションを管理します。&lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;メソッドは、新しい作成&lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;それらの属性を持つインスタンス。&lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;メソッドは、同一または関連する属性を持つ新しいサブプロセスを作成するために、同一のインスタンスから、繰り返し呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="6f3faea01a84f93ced762c58f36c9ec3c5d9f8eb" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ProcessBuilder&lt;/code&gt; instance manages a collection of process attributes. The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method creates a new &lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; instance with those attributes. The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method can be invoked repeatedly from the same instance to create new subprocesses with identical or related attributes.</source>
          <target state="translated">各 &lt;code&gt;ProcessBuilder&lt;/code&gt; インスタンスは、プロセス属性のコレクションを管理します。&lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;メソッドは、新しい作成&lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;それらの属性を持つインスタンス。&lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;メソッドは、同一または関連する属性を持つ新しいサブプロセスを作成するために、同一のインスタンスから、繰り返し呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="7c21cf863134c04fb1b1210002465ea769c2dcb2" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;SQLException&lt;/code&gt; provides several kinds of information:</source>
          <target state="translated">各 &lt;code&gt;SQLException&lt;/code&gt; は、いくつかの種類の情報を提供します。</target>
        </trans-unit>
        <trans-unit id="17fc51fd2d609f948524d4b3dd28d15a7f87f9d7" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;SynthStyle&lt;/code&gt; has a set of &lt;code&gt;ColorType&lt;/code&gt;s that are accessed by way of the &lt;a href=&quot;synthstyle#getColor(javax.swing.plaf.synth.SynthContext,javax.swing.plaf.synth.ColorType)&quot;&gt;&lt;code&gt;SynthStyle.getColor(SynthContext, ColorType)&lt;/code&gt;&lt;/a&gt; method. &lt;code&gt;SynthStyle&lt;/code&gt;'s &lt;code&gt;installDefaults&lt;/code&gt; will install the &lt;code&gt;FOREGROUND&lt;/code&gt; color as the foreground of the Component, and the &lt;code&gt;BACKGROUND&lt;/code&gt; color to the background of the component (assuming that you have not explicitly specified a foreground and background color). Some components support more color based properties, for example &lt;code&gt;JList&lt;/code&gt; has the property &lt;code&gt;selectionForeground&lt;/code&gt; which will be mapped to &lt;code&gt;FOREGROUND&lt;/code&gt; with a component state of &lt;code&gt;SynthConstants.SELECTED&lt;/code&gt;.</source>
          <target state="translated">各 &lt;code&gt;SynthStyle&lt;/code&gt; には、&lt;a href=&quot;synthstyle#getColor(javax.swing.plaf.synth.SynthContext,javax.swing.plaf.synth.ColorType)&quot;&gt; &lt;code&gt;SynthStyle.getColor(SynthContext, ColorType)&lt;/code&gt; &lt;/a&gt;メソッドを介してアクセスされる &lt;code&gt;ColorType&lt;/code&gt; のセットがあります。 &lt;code&gt;SynthStyle&lt;/code&gt; の &lt;code&gt;installDefaults&lt;/code&gt; は、コンポーネントの前景色として &lt;code&gt;FOREGROUND&lt;/code&gt; 色をインストールし、コンポーネントの背景に &lt;code&gt;BACKGROUND&lt;/code&gt; 色をインストールします（前景色と背景色を明示的に指定していない場合）。一部のコンポーネントは、より多くの色ベースのプロパティをサポートします。たとえば、 &lt;code&gt;JList&lt;/code&gt; には、 &lt;code&gt;SynthConstants.SELECTED&lt;/code&gt; のコンポーネント状態で &lt;code&gt;FOREGROUND&lt;/code&gt; にマップされるプロパティ &lt;code&gt;selectionForeground&lt;/code&gt; があります。。</target>
        </trans-unit>
        <trans-unit id="70a825afc410be57f11b3140618489849a3eca76" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ThreadGroup&lt;/code&gt; will receive its own instance; this allows different &lt;code&gt;Applet&lt;/code&gt;s in the same browser (for example) to each have their own registry.</source>
          <target state="translated">各 &lt;code&gt;ThreadGroup&lt;/code&gt; は独自のインスタンスを受け取ります。これにより、たとえば同じブラウザ内の異なる &lt;code&gt;Applet&lt;/code&gt; がそれぞれ独自のレジストリを持つことができます。</target>
        </trans-unit>
        <trans-unit id="d8c28e32fe582759ca72c38dccf1b5a1ad1a4858" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;XMLSignature&lt;/code&gt; created by the factory can also be marshalled to an XML representation and signed, by invoking the &lt;a href=&quot;xmlsignature#sign(javax.xml.crypto.dsig.XMLSignContext)&quot;&gt;&lt;code&gt;sign&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; object and passing it a mechanism-specific &lt;a href=&quot;xmlsigncontext&quot;&gt;&lt;code&gt;XMLSignContext&lt;/code&gt;&lt;/a&gt; object containing the signing key and marshalling parameters (see &lt;a href=&quot;dom/domsigncontext&quot;&gt;&lt;code&gt;DOMSignContext&lt;/code&gt;&lt;/a&gt;). For example:</source>
          <target state="translated">ファクトリによって作成された各 &lt;code&gt;XMLSignature&lt;/code&gt; は、&lt;a href=&quot;xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;xmlsignature#sign(javax.xml.crypto.dsig.XMLSignContext)&quot;&gt; &lt;code&gt;sign&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、署名キーとマーシャリングパラメータを含むメカニズム固有の&lt;a href=&quot;xmlsigncontext&quot;&gt; &lt;code&gt;XMLSignContext&lt;/code&gt; &lt;/a&gt;オブジェクトを渡すことにより、XML表現にマーシャリングして署名することもできます（&lt;a href=&quot;dom/domsigncontext&quot;&gt; &lt;code&gt;DOMSignContext&lt;/code&gt; を&lt;/a&gt;参照）。例えば：</target>
        </trans-unit>
        <trans-unit id="2ac1f0b84eb7c736f7b6a2b6fe9393c3da9813b8" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;XMLSignatureFactory&lt;/code&gt; must support the required &lt;code&gt;XMLValidateContext&lt;/code&gt; types for that factory type, but may support others. A DOM &lt;code&gt;XMLSignatureFactory&lt;/code&gt; must support &lt;a href=&quot;dom/domvalidatecontext&quot;&gt;&lt;code&gt;DOMValidateContext&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">各 &lt;code&gt;XMLSignatureFactory&lt;/code&gt; は、そのファクトリタイプに必要な &lt;code&gt;XMLValidateContext&lt;/code&gt; タイプをサポートする必要がありますが、他のタイプをサポートする場合もあります。DOM &lt;code&gt;XMLSignatureFactory&lt;/code&gt; は、&lt;a href=&quot;dom/domvalidatecontext&quot;&gt; &lt;code&gt;DOMValidateContext&lt;/code&gt; &lt;/a&gt;オブジェクトをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="619b708c71fa97acd169df488ae705d3dfc98335" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;byte&lt;/code&gt; in the subarray is converted to a &lt;code&gt;char&lt;/code&gt; as specified in the &lt;a href=&quot;#%3Cinit%3E(byte%5B%5D,int)&quot;&gt;&lt;code&gt;String(byte[],int)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">各 &lt;code&gt;byte&lt;/code&gt; サブアレイには、に変換され &lt;code&gt;char&lt;/code&gt; で指定されるように&lt;a href=&quot;#%3Cinit%3E(byte%5B%5D,int)&quot;&gt; &lt;code&gt;String(byte[],int)&lt;/code&gt; &lt;/a&gt;コンストラクタ。</target>
        </trans-unit>
        <trans-unit id="ead1ca17c6d920968eacad59c4f36582e117a902" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;byte&lt;/code&gt; in the subarray is converted to a &lt;code&gt;char&lt;/code&gt; as specified in the method above.</source>
          <target state="translated">サブアレイの各 &lt;code&gt;byte&lt;/code&gt; は、上記のメソッドで指定されたとおりに &lt;code&gt;char&lt;/code&gt; 変換されます。</target>
        </trans-unit>
        <trans-unit id="b7d4cbe8023a80b2c2a8860e8d316e49318ead98" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;invokedynamic&lt;/code&gt; instruction statically specifies its own bootstrap method as a constant pool reference. The constant pool reference also specifies the call site's name and type descriptor, just like &lt;code&gt;invokevirtual&lt;/code&gt; and the other invoke instructions.</source>
          <target state="translated">各 &lt;code&gt;invokedynamic&lt;/code&gt; 命令は、独自のブートストラップメソッドを定数プール参照として静的に指定します。定数プール参照は、 &lt;code&gt;invokevirtual&lt;/code&gt; およびその他の呼び出し命令と同様に、呼び出しサイトの名前とタイプ記述子も指定します。</target>
        </trans-unit>
        <trans-unit id="b2b5e3afcd79dd56a7ba41aea1bc588e8050a51d" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;invokedynamic&lt;/code&gt; instruction statically specifies its own bootstrap method as a constant pool reference. The constant pool reference also specifies the invocation's name and method type descriptor, just like &lt;code&gt;invokestatic&lt;/code&gt; and the other invoke instructions.</source>
          <target state="translated">各 &lt;code&gt;invokedynamic&lt;/code&gt; 命令は、定数プール参照として独自のブートストラップメソッドを静的に指定します。定数プール参照は、 &lt;code&gt;invokestatic&lt;/code&gt; や他のinvoke命令と同様に、呼び出しの名前とメソッド型記述子も指定します。</target>
        </trans-unit>
        <trans-unit id="ea0ce09c4af09947386ad8cc81d2d4762a70f4c5" translate="yes" xml:space="preserve">
          <source>Each &lt;em&gt;key&lt;/em&gt; is a nonempty string of characters which may not contain any of the characters comma (&lt;code&gt;,&lt;/code&gt;), equals (&lt;code&gt;=&lt;/code&gt;), colon, asterisk, or question mark. The same key may not occur twice in a given ObjectName.</source>
          <target state="translated">各&lt;em&gt;キー&lt;/em&gt;は空ではない文字列であり、カンマ（ &lt;code&gt;,&lt;/code&gt; ）、等号（ &lt;code&gt;=&lt;/code&gt; ）、コロン、アスタリスク、または疑問符を含めることはできません。特定のObjectNameで同じキーが2回発生することはありません。</target>
        </trans-unit>
        <trans-unit id="5a8216429331768e0b4417c39ef6544205df56fd" translate="yes" xml:space="preserve">
          <source>Each &lt;em&gt;value&lt;/em&gt; associated with a key is a string of characters that is either unquoted or quoted.</source>
          <target state="translated">キーに関連付けられた各&lt;em&gt;値&lt;/em&gt;は、引用符で囲まれていないか、または引用符で囲まれた文字列です。</target>
        </trans-unit>
        <trans-unit id="63200ade0ddff96018a1d34e2c186a641ed81ded" translate="yes" xml:space="preserve">
          <source>Each Hijrah variant is configured individually. Each variant is defined by a property resource that defines the &lt;code&gt;ID&lt;/code&gt;, the &lt;code&gt;calendar type&lt;/code&gt;, the start of the calendar, the alignment with the ISO calendar, and the length of each month for a range of years. The variants are identified in the &lt;code&gt;calendars.properties&lt;/code&gt; file. The new properties are prefixed with &lt;code&gt;&quot;calendars.hijrah.&quot;&lt;/code&gt;:</source>
          <target state="translated">各ヒジュラバリアントは個別に構成されます。各バリアントは、 &lt;code&gt;ID&lt;/code&gt; 、 &lt;code&gt;calendar type&lt;/code&gt; 、カレンダーの開始、ISOカレンダーとの整合、および年の範囲の各月の長さを定義するプロパティリソースによって定義されます。バリアントは &lt;code&gt;calendars.properties&lt;/code&gt; ファイルで識別されます。新しいプロパティには &lt;code&gt;&quot;calendars.hijrah.&quot;&lt;/code&gt; というプレフィックスが付いています。：</target>
        </trans-unit>
        <trans-unit id="518e6bd3e102293fd6f511c42a740303254307df" translate="yes" xml:space="preserve">
          <source>Each Hijrah variant is configured individually. Each variant is defined by a property resource that defines the &lt;code&gt;ID&lt;/code&gt;, the &lt;code&gt;calendar type&lt;/code&gt;, the start of the calendar, the alignment with the ISO calendar, and the length of each month for a range of years. The variants are loaded by HijrahChronology as a resource from hijrah-config-&amp;lt;calendar type&amp;gt;.properties.</source>
          <target state="translated">各Hijrahバリアントは個別に構成されます。各バリアントは、 &lt;code&gt;ID&lt;/code&gt; 、 &lt;code&gt;calendar type&lt;/code&gt; 、カレンダの開始、ISOカレンダとの配置、および年の範囲の各月の長さを定義するプロパティリソースによって定義されます。バリアントは、Hijrah-config- &amp;lt;calendar type&amp;gt; .propertiesからリソースとしてHijrahChronologyによってロードされます。</target>
        </trans-unit>
        <trans-unit id="4f3e9f4eaf3f51b06c2df388bb21b1f3fed4d446" translate="yes" xml:space="preserve">
          <source>Each HijrahDate is created bound to a particular HijrahChronology, The same chronology is propagated to each HijrahDate computed from the date. To use a different Hijrah variant, its HijrahChronology can be used to create new HijrahDate instances. Alternatively, the &lt;a href=&quot;#withVariant(java.time.chrono.HijrahChronology)&quot;&gt;&lt;code&gt;withVariant(java.time.chrono.HijrahChronology)&lt;/code&gt;&lt;/a&gt; method can be used to convert to a new HijrahChronology.</source>
          <target state="translated">各HijrahDateは、特定のHijrahChronologyにバインドされて作成されます。同じ年表が、日付から計算された各HijrahDateに伝播されます。別のHijrahバリアントを使用するには、そのHijrahChronologyを使用して新しいHijrahDateインスタンスを作成できます。または、&lt;a href=&quot;#withVariant(java.time.chrono.HijrahChronology)&quot;&gt; &lt;code&gt;withVariant(java.time.chrono.HijrahChronology)&lt;/code&gt; &lt;/a&gt;メソッドを使用して、新しいHijrahChronologyに変換することもできます。</target>
        </trans-unit>
        <trans-unit id="55c1e383d0a9ffc65595adce6358af59c57f36b2" translate="yes" xml:space="preserve">
          <source>Each HijrahDate is created bound to a particular HijrahChronology, The same chronology is propagated to each HijrahDate computed from the date. To use a different Hijrah variant, its HijrahChronology can be used to create new HijrahDate instances. Alternatively, the &lt;a href=&quot;hijrahdate#withVariant-java.time.chrono.HijrahChronology-&quot;&gt;&lt;code&gt;withVariant(java.time.chrono.HijrahChronology)&lt;/code&gt;&lt;/a&gt; method can be used to convert to a new HijrahChronology.</source>
          <target state="translated">各HijrahDateは、特定のHijrahChronologyにバインドして作成されます。同じ年表が、日付から計算された各HijrahDateに伝達されます。別のHijrahバリアントを使用するには、そのHijrahChronologyを使用して新しいHijrahDateインスタンスを作成できます。または、&lt;a href=&quot;hijrahdate#withVariant-java.time.chrono.HijrahChronology-&quot;&gt; &lt;code&gt;withVariant(java.time.chrono.HijrahChronology)&lt;/code&gt; &lt;/a&gt;メソッドを使用して、新しいHijrahChronologyに変換することもできます。</target>
        </trans-unit>
        <trans-unit id="cc1c16ba9d553f616b5d2859beee5990afc805d9" translate="yes" xml:space="preserve">
          <source>Each HttpURLConnection instance is used to make a single request but the underlying network connection to the HTTP server may be transparently shared by other instances. Calling the close() methods on the InputStream or OutputStream of an HttpURLConnection after a request may free network resources associated with this instance but has no effect on any shared persistent connection. Calling the disconnect() method may close the underlying socket if a persistent connection is otherwise idle at that time.</source>
          <target state="translated">各 HttpURLConnection インスタンスは単一の要求を行うために使用されますが、HTTP サーバへの基礎となるネットワーク接続は、他のインスタンスで透過的に共有される場合があります。リクエスト後に HttpURLConnection の InputStream または OutputStream で close()メソッドを呼び出すと、このインスタンスに関連付けられたネットワーク・リソースが解放されることがありますが、共有された永続的な接続には影響しません。その時点で永続接続がアイドル状態である場合、disconnect()メソッドを呼び出すと、基礎となるソケットを閉じることができます。</target>
        </trans-unit>
        <trans-unit id="db30d9a58fa9a7fc324f1e68bab8617024f37c0e" translate="yes" xml:space="preserve">
          <source>Each Logger and each Handler can have a filter associated with it. The Logger or Handler will call the isLoggable method to check if a given LogRecord should be published. If isLoggable returns false, the LogRecord will be discarded.</source>
          <target state="translated">各ロガーと各ハンドラは、それに関連付けられたフィルタを持つことができます。ロガーやハンドラは isLoggable メソッドを呼び出して、与えられた LogRecord が公開されるべきかどうかをチェックします。isLoggable が false を返した場合、その LogRecord は破棄されます。</target>
        </trans-unit>
        <trans-unit id="b4b441776e0dfacc09dbb8e4364d83bf2d0985f0" translate="yes" xml:space="preserve">
          <source>Each Logger has a &quot;Level&quot; associated with it. This reflects a minimum Level that this logger cares about. If a Logger's level is set to &lt;code&gt;null&lt;/code&gt;, then its effective level is inherited from its parent, which may in turn obtain it recursively from its parent, and so on up the tree.</source>
          <target state="translated">各ロガーには「レベル」が関連付けられています。これは、このロガーが気にする最小レベルを反映しています。ロガーのレベルが &lt;code&gt;null&lt;/code&gt; に設定されている場合、その有効レベルは親から継承され、親から再帰的に取得される場合があります。</target>
        </trans-unit>
        <trans-unit id="0539a3e314b03b3ea9a0cbb43e0f8610ddc537c5" translate="yes" xml:space="preserve">
          <source>Each Logger keeps track of a &quot;parent&quot; Logger, which is its nearest existing ancestor in the Logger namespace.</source>
          <target state="translated">各ロガーは &quot;親&quot; ロガーを追跡します。これは、ロガー ネームスペース内で最も近い既存の祖先です。</target>
        </trans-unit>
        <trans-unit id="32ba008a6bf5acdfc4aa839c35c87a6bbbc08dca" translate="yes" xml:space="preserve">
          <source>Each Logger may have a &lt;code&gt;ResourceBundle&lt;/code&gt; associated with it. The &lt;code&gt;ResourceBundle&lt;/code&gt; may be specified by name, using the &lt;a href=&quot;#getLogger(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;getLogger(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt; factory method, or by value - using the &lt;a href=&quot;#setResourceBundle(java.util.ResourceBundle)&quot;&gt;&lt;code&gt;setResourceBundle&lt;/code&gt;&lt;/a&gt; method. This bundle will be used for localizing logging messages. If a Logger does not have its own &lt;code&gt;ResourceBundle&lt;/code&gt; or resource bundle name, then it will inherit the &lt;code&gt;ResourceBundle&lt;/code&gt; or resource bundle name from its parent, recursively up the tree.</source>
          <target state="translated">各ロガーには、 &lt;code&gt;ResourceBundle&lt;/code&gt; が関連付けられている場合があります。 &lt;code&gt;ResourceBundle&lt;/code&gt; を使用し、名前で指定することができる&lt;a href=&quot;#getLogger(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;getLogger(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt;使用-ファクトリメソッド、または値によって&lt;a href=&quot;#setResourceBundle(java.util.ResourceBundle)&quot;&gt; &lt;code&gt;setResourceBundle&lt;/code&gt; &lt;/a&gt;方法。このバンドルは、ログメッセージのローカライズに使用されます。ロガーが独自の &lt;code&gt;ResourceBundle&lt;/code&gt; またはリソースバンドル名を持っていない場合、ロガーはその親から &lt;code&gt;ResourceBundle&lt;/code&gt; またはリソースバンドル名を継承し、ツリーを再帰的に上に移動します。</target>
        </trans-unit>
        <trans-unit id="b96a7dd0055962446eaf1a58405a8ea9dd09ba04" translate="yes" xml:space="preserve">
          <source>Each Logger may have a &lt;code&gt;ResourceBundle&lt;/code&gt; associated with it. The &lt;code&gt;ResourceBundle&lt;/code&gt; may be specified by name, using the &lt;a href=&quot;logger#getLogger-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;getLogger(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt; factory method, or by value - using the &lt;a href=&quot;logger#setResourceBundle-java.util.ResourceBundle-&quot;&gt;&lt;code&gt;setResourceBundle&lt;/code&gt;&lt;/a&gt; method. This bundle will be used for localizing logging messages. If a Logger does not have its own &lt;code&gt;ResourceBundle&lt;/code&gt; or resource bundle name, then it will inherit the &lt;code&gt;ResourceBundle&lt;/code&gt; or resource bundle name from its parent, recursively up the tree.</source>
          <target state="translated">各ロガーには &lt;code&gt;ResourceBundle&lt;/code&gt; が関連付けられている場合があります。 &lt;code&gt;ResourceBundle&lt;/code&gt; を使用し、名前で指定することができる&lt;a href=&quot;logger#getLogger-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;getLogger(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt;使用-ファクトリメソッド、または値によって&lt;a href=&quot;logger#setResourceBundle-java.util.ResourceBundle-&quot;&gt; &lt;code&gt;setResourceBundle&lt;/code&gt; &lt;/a&gt;方法。このバンドルは、ログメッセージのローカライズに使用されます。ロガーが独自の &lt;code&gt;ResourceBundle&lt;/code&gt; またはリソースバンドル名を持たない場合、Loggerは親から &lt;code&gt;ResourceBundle&lt;/code&gt; またはリソースバンドル名を継承し、ツリーを再帰的に再帰します。</target>
        </trans-unit>
        <trans-unit id="bcd6ebda729df082abf18e65f38b772aa8d0e579" translate="yes" xml:space="preserve">
          <source>Each ProcessHandle identifies and allows control of a process in the native system. ProcessHandles are returned from the factory methods &lt;a href=&quot;#current()&quot;&gt;&lt;code&gt;current()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#of(long)&quot;&gt;&lt;code&gt;of(long)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#children()&quot;&gt;&lt;code&gt;children()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#descendants()&quot;&gt;&lt;code&gt;descendants()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#parent()&quot;&gt;&lt;code&gt;parent()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#allProcesses()&quot;&gt;&lt;code&gt;allProcesses()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">各ProcessHandleは、ネイティブシステム内のプロセスを識別し、制御できるようにします。 ProcessHandlesは、ファクトリメソッド&lt;a href=&quot;#current()&quot;&gt; &lt;code&gt;current()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#of(long)&quot;&gt; &lt;code&gt;of(long)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#children()&quot;&gt; &lt;code&gt;children()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#descendants()&quot;&gt; &lt;code&gt;descendants()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#parent()&quot;&gt; &lt;code&gt;parent()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#allProcesses()&quot;&gt; &lt;code&gt;allProcesses()&lt;/code&gt; &lt;/a&gt;から返されます。</target>
        </trans-unit>
        <trans-unit id="45cd0cc22b239c187710f4ce2bcccac9b6d7dc99" translate="yes" xml:space="preserve">
          <source>Each PropertyEditor should have a null constructor.</source>
          <target state="translated">各PropertyEditorはnullのコンストラクタを持つべきです。</target>
        </trans-unit>
        <trans-unit id="58dd6b68d2a52f4d25d07ee4f763280ce9fd2773" translate="yes" xml:space="preserve">
          <source>Each SSL/TLS connection must have one client and one server, thus each endpoint must decide which role to assume. This choice determines who begins the handshaking process as well as which type of messages should be sent by each party. The method &lt;a href=&quot;sslengine#setUseClientMode-boolean-&quot;&gt;&lt;code&gt;setUseClientMode(boolean)&lt;/code&gt;&lt;/a&gt; configures the mode. Once the initial handshaking has started, an &lt;code&gt;SSLEngine&lt;/code&gt; can not switch between client and server modes, even when performing renegotiations.</source>
          <target state="translated">各SSL / TLS接続には1つのクライアントと1つのサーバーが必要です。したがって、各エンドポイントは、どの役割を引き受けるかを決定する必要があります。この選択により、誰がハンドシェイクプロセスを開始するか、各当事者がどのタイプのメッセージを送信するかが決まります。メソッド&lt;a href=&quot;sslengine#setUseClientMode-boolean-&quot;&gt; &lt;code&gt;setUseClientMode(boolean)&lt;/code&gt; &lt;/a&gt;はモードを構成します。最初のハンドシェイクが開始されると、再ネゴシエーションを実行している場合でも、 &lt;code&gt;SSLEngine&lt;/code&gt; はクライアントモードとサーバーモードを切り替えることができません。</target>
        </trans-unit>
        <trans-unit id="bae7798821f541c34acf4864f48a8c940fb474aa" translate="yes" xml:space="preserve">
          <source>Each SSL/TLS/DTLS connection must have one client and one server, thus each endpoint must decide which role to assume. This choice determines who begins the handshaking process as well as which type of messages should be sent by each party. The method &lt;a href=&quot;#setUseClientMode(boolean)&quot;&gt;&lt;code&gt;setUseClientMode(boolean)&lt;/code&gt;&lt;/a&gt; configures the mode. Note that the default mode for a new &lt;code&gt;SSLEngine&lt;/code&gt; is provider-specific. Applications should set the mode explicitly before invoking other methods of the &lt;code&gt;SSLEngine&lt;/code&gt;. Once the initial handshaking has started, an &lt;code&gt;SSLEngine&lt;/code&gt; can not switch between client and server modes, even when performing renegotiations.</source>
          <target state="translated">各SSL / TLS / DTLS接続には1つのクライアントと1つのサーバーが必要であるため、各エンドポイントはどの役割を引き受けるかを決定する必要があります。この選択により、誰がハンドシェイクプロセスを開始するか、および各パーティがどのタイプのメッセージを送信するかが決まります。メソッド&lt;a href=&quot;#setUseClientMode(boolean)&quot;&gt; &lt;code&gt;setUseClientMode(boolean)&lt;/code&gt; &lt;/a&gt;は、モードを構成します。新しい &lt;code&gt;SSLEngine&lt;/code&gt; のデフォルトモードはプロバイダー固有であることに注意してください。アプリケーションは、 &lt;code&gt;SSLEngine&lt;/code&gt; の他のメソッドを呼び出す前に、モードを明示的に設定する必要があります。最初のハンドシェイクが開始されると、 &lt;code&gt;SSLEngine&lt;/code&gt; は、再ネゴシエーションを実行している場合でも、クライアントモードとサーバーモードを切り替えることができません。</target>
        </trans-unit>
        <trans-unit id="73898cfbabfe511dab97005abc423f20eb079fb7" translate="yes" xml:space="preserve">
          <source>Each SizeRequirements object contains information about either the width (and X alignment) or height (and Y alignment) of a single component or a group of components:</source>
          <target state="translated">各SizeRequirementsオブジェクトは、単一のコンポーネントまたはコンポーネントのグループの幅(およびXアライメント)または高さ(およびYアライメント)のいずれかに関する情報を含んでいます。</target>
        </trans-unit>
        <trans-unit id="65b4dd558748b2ead02c202dc9e9ffdc03970678" translate="yes" xml:space="preserve">
          <source>Each TerminalFactory has a &lt;code&gt;type&lt;/code&gt; indicating how it was implemented. It must be specified when the implementation is obtained using a &lt;a href=&quot;#getInstance(java.lang.String,java.lang.Object)&quot;&gt;getInstance()&lt;/a&gt; method and can be retrieved via the &lt;a href=&quot;#getType()&quot;&gt;getType()&lt;/a&gt; method.</source>
          <target state="translated">各TerminalFactoryには、実装方法を示す &lt;code&gt;type&lt;/code&gt; があります。&lt;a href=&quot;#getInstance(java.lang.String,java.lang.Object)&quot;&gt;getInstance（）&lt;/a&gt;メソッドを使用して実装を取得するときに指定する必要があり、&lt;a href=&quot;#getType()&quot;&gt;getType（）&lt;/a&gt;メソッドを介して取得できます。</target>
        </trans-unit>
        <trans-unit id="b0ebd53ce2a77fe511750e5d5d22b92b05c82777" translate="yes" xml:space="preserve">
          <source>Each access mode is associated with one &lt;em&gt;access mode method&lt;/em&gt;, a &lt;a href=&quot;methodhandle#sigpoly&quot;&gt;signature polymorphic&lt;/a&gt; method named for the access mode. When an access mode method is invoked on a VarHandle instance, the initial arguments to the invocation are coordinate expressions that indicate in precisely which object the variable is to be accessed. Trailing arguments to the invocation represent values of importance to the access mode. For example, the various compare-and-set or compare-and-exchange access modes require two trailing arguments for the variable's expected value and new value.</source>
          <target state="translated">各アクセスモードは、アクセスモードにちなんで名付けられた&lt;a href=&quot;methodhandle#sigpoly&quot;&gt;署名ポリモーフィック&lt;/a&gt;メソッドである1つの&lt;em&gt;アクセスモードメソッドに&lt;/em&gt;関連付けられています。 VarHandleインスタンスでアクセスモードメソッドが呼び出されると、呼び出しの最初の引数は、変数にアクセスするオブジェクトを正確に示す座標式になります。呼び出しの末尾の引数は、アクセスモードにとって重要な値を表します。たとえば、さまざまなコンペアアンドセットまたはコンペアアンドエクスチェンジアクセスモードでは、変数の期待値と新しい値に対して2つの末尾の引数が必要です。</target>
        </trans-unit>
        <trans-unit id="dfee108b90e259b3bdecf55d6cbeb3c5f9c291d0" translate="yes" xml:space="preserve">
          <source>Each action in a thread</source>
          <target state="translated">スレッド内の各アクション</target>
        </trans-unit>
        <trans-unit id="ab945bb477e4c661cdb87606596d4fcdc3d5ffe3" translate="yes" xml:space="preserve">
          <source>Each actual implementation of this method should first check if there is a security manager installed. If there is, the method should call the security manager's &lt;a href=&quot;../../../java.base/java/lang/securitymanager#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method to check &lt;code&gt;AWTPermission(&quot;accessClipboard&quot;)&lt;/code&gt;.</source>
          <target state="translated">このメソッドを実際に実装するたびに、最初にセキュリティマネージャがインストールされているかどうかを確認する必要があります。存在する場合、メソッドはセキュリティマネージャの&lt;a href=&quot;../../../java.base/java/lang/securitymanager#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;メソッドを &lt;code&gt;AWTPermission(&quot;accessClipboard&quot;)&lt;/code&gt; をチェックする必要があります。</target>
        </trans-unit>
        <trans-unit id="85ade237cb92365873dddf9dbcccdd695df5481a" translate="yes" xml:space="preserve">
          <source>Each actual implementation of this method should first check if there is a security manager installed. If there is, the method should call the security manager's &lt;code&gt;checkPrintJobAccess&lt;/code&gt; method to ensure initiation of a print operation is allowed. If the default implementation of &lt;code&gt;checkPrintJobAccess&lt;/code&gt; is used (that is, that method is not overriden), then this results in a call to the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with a &lt;code&gt;RuntimePermission(&quot;queuePrintJob&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドを実際に実装するたびに、最初にセキュリティマネージャがインストールされているかどうかを確認する必要があります。存在する場合、メソッドはセキュリティマネージャの &lt;code&gt;checkPrintJobAccess&lt;/code&gt; メソッドを呼び出して、印刷操作の開始が許可されていることを確認する必要があります。 &lt;code&gt;checkPrintJobAccess&lt;/code&gt; のデフォルトの実装が使用されている場合（つまり、そのメソッドがオーバーライドされていない場合）、 &lt;code&gt;RuntimePermission(&quot;queuePrintJob&quot;)&lt;/code&gt; 権限を持つセキュリティマネージャーの &lt;code&gt;checkPermission&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="cf57af6813d2347ad8cdb271130fc2cef65f053e" translate="yes" xml:space="preserve">
          <source>Each agent is passed its agent options via the &lt;code&gt;agentArgs&lt;/code&gt; parameter. The agent options are passed as a single string, any additional parsing should be performed by the agent itself.</source>
          <target state="translated">各エージェントには、 &lt;code&gt;agentArgs&lt;/code&gt; パラメーターを介してエージェントオプションが渡されます。エージェントオプションは単一の文字列として渡されます。追加の解析はエージェント自体が実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="f22835e80cd2b663031fbea21b671773b92c12f8" translate="yes" xml:space="preserve">
          <source>Each attribute class implements one or more of these tagging subinterfaces to indicate where the attribute can be used in the API. If an attribute class implements multiple tagging subinterfaces, the attribute can be used in multiple contexts. For example, the media attribute can apply to one document in a print job as a &lt;code&gt;DocAttribute&lt;/code&gt; or to an entire print job as a &lt;code&gt;PrintRequestAttribute&lt;/code&gt;. Certain low-level attributes are never used on their own but are always aggregated into higher-level attributes. These low-level attribute classes only implement interface &lt;a href=&quot;attribute&quot;&gt;Attribute&lt;/a&gt;, not any of the tagging subinterfaces.</source>
          <target state="translated">各属性クラスは、これらのタグ付けサブインターフェイスの1つ以上を実装して、APIで属性を使用できる場所を示します。属性クラスが複数のタグ付けサブインターフェースを実装する場合、属性は複数のコンテキストで使用できます。たとえば、メディア属性は、印刷ジョブ内の1つのドキュメントに &lt;code&gt;DocAttribute&lt;/code&gt; として、または印刷ジョブ全体に &lt;code&gt;PrintRequestAttribute&lt;/code&gt; として適用できます。特定の低レベルの属性が単独で使用されることはなく、常に高レベルの属性に集約されます。これらの低レベル属性クラスは、インターフェース&lt;a href=&quot;attribute&quot;&gt;Attribute&lt;/a&gt;のみを実装し、タグ付けサブインターフェースは実装しません。</target>
        </trans-unit>
        <trans-unit id="bdc4f018d78ba26ff9dc9ce389eb162a1bc736da" translate="yes" xml:space="preserve">
          <source>Each attribute class implements the &lt;code&gt;Attribute&lt;/code&gt; interface, either directly or indirectly, to mark it as a printing attribute. An attribute class that can appear in restricted attribute sets in certain contexts also implements one or more subinterfaces of &lt;code&gt;Attribute&lt;/code&gt;. Most attribute classes also extend the appropriate abstract syntax class to get the implementation. Consider the &lt;code&gt;Sides&lt;/code&gt; attribute class:</source>
          <target state="translated">各属性クラスは、直接または間接的に &lt;code&gt;Attribute&lt;/code&gt; インターフェースを実装して、印刷属性としてマークします。特定のコンテキストで制限された属性セットに表示できる属性クラスは、 &lt;code&gt;Attribute&lt;/code&gt; の 1つ以上のサブインターフェースも実装します。ほとんどの属性クラスは、適切な抽象構文クラスを拡張して実装を取得します。 &lt;code&gt;Sides&lt;/code&gt; 属性クラスを考えてみます。</target>
        </trans-unit>
        <trans-unit id="1cf4053aa46bfb1c3e5e89ba0fab4d494a89a713" translate="yes" xml:space="preserve">
          <source>Each attribute key of the AttributedCharacterIterator will be of type &lt;code&gt;DateFormat.Field&lt;/code&gt;, with the corresponding attribute value being the same as the attribute key.</source>
          <target state="translated">AttributedCharacterIteratorの各属性キーは &lt;code&gt;DateFormat.Field&lt;/code&gt; タイプであり、対応する属性値は属性キーと同じです。</target>
        </trans-unit>
        <trans-unit id="5713dda8efda83aaf04914a5b85a2f542a3aa4d2" translate="yes" xml:space="preserve">
          <source>Each attribute key of the AttributedCharacterIterator will be of type &lt;code&gt;Field&lt;/code&gt;. It is up to each &lt;code&gt;Format&lt;/code&gt; implementation to define what the legal values are for each attribute in the &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;, but typically the attribute key is also used as the attribute value.</source>
          <target state="translated">AttributedCharacterIteratorの各属性キーは &lt;code&gt;Field&lt;/code&gt; 型になります。 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; の各属性に有効な値を定義するのは、各 &lt;code&gt;Format&lt;/code&gt; 実装次第ですが、通常、属性キーは属性値としても使用されます。</target>
        </trans-unit>
        <trans-unit id="170153981068eb46095e70fc8e45a9ab4b3358c2" translate="yes" xml:space="preserve">
          <source>Each attribute key of the AttributedCharacterIterator will be of type &lt;code&gt;NumberFormat.Field&lt;/code&gt;, with the attribute value being the same as the attribute key.</source>
          <target state="translated">AttributedCharacterIteratorの各属性キーは &lt;code&gt;NumberFormat.Field&lt;/code&gt; タイプであり、属性値は属性キーと同じです。</target>
        </trans-unit>
        <trans-unit id="5ee2047cab7c974ace281bd2ac217169d97bf32a" translate="yes" xml:space="preserve">
          <source>Each byte read from the input stream is regarded as a character in the range &lt;code&gt;'\u0000'&lt;/code&gt; through &lt;code&gt;'\u00FF'&lt;/code&gt;. The character value is used to look up five possible attributes of the character:</source>
          <target state="translated">入力ストリームから読み取られた各バイトは、 &lt;code&gt;'\u0000'&lt;/code&gt; から &lt;code&gt;'\u00FF'&lt;/code&gt; の範囲の文字と見なされます。文字値は、文字の5つの可能な属性を検索するために使用されます。</target>
        </trans-unit>
        <trans-unit id="c488eefdcedb528cd3d36bce554ca5f1fd5e0c56" translate="yes" xml:space="preserve">
          <source>Each call to &lt;a href=&quot;#readObject()&quot;&gt;&lt;code&gt;readObject&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#readUnshared()&quot;&gt;&lt;code&gt;readUnshared&lt;/code&gt;&lt;/a&gt; increases the depth by 1 before reading an object and decreases by 1 before returning normally or exceptionally. The depth starts at &lt;code&gt;1&lt;/code&gt; and increases for each nested object and decrements when each nested call returns. The count of references in the stream starts at &lt;code&gt;1&lt;/code&gt; and is increased before reading an object.</source>
          <target state="translated">&lt;a href=&quot;#readObject()&quot;&gt; &lt;code&gt;readObject&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#readUnshared()&quot;&gt; &lt;code&gt;readUnshared&lt;/code&gt; を&lt;/a&gt;呼び出すたびに、オブジェクトを読み取る前に深度が1ずつ増加し、通常または例外的に戻る前に1ずつ減少します。深さは &lt;code&gt;1&lt;/code&gt; から始まり、ネストされたオブジェクトごとに増加し、ネストされた呼び出しが戻るたびに減少します。ストリーム内の参照の数は &lt;code&gt;1&lt;/code&gt; から始まり、オブジェクトを読み取る前に増加します。</target>
        </trans-unit>
        <trans-unit id="b0d110f5467f34e4ed3151e5c56d7e84c466cde9" translate="yes" xml:space="preserve">
          <source>Each call to the &lt;a href=&quot;#getKeyStore()&quot;&gt;&lt;code&gt;getKeyStore()&lt;/code&gt;&lt;/a&gt; method on the returned builder will return a new KeyStore object of type &lt;code&gt;type&lt;/code&gt;. Its &lt;a href=&quot;keystore#load(java.security.KeyStore.LoadStoreParameter)&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; method is invoked using a &lt;code&gt;LoadStoreParameter&lt;/code&gt; that encapsulates &lt;code&gt;protection&lt;/code&gt;.</source>
          <target state="translated">返されたビルダーで&lt;a href=&quot;#getKeyStore()&quot;&gt; &lt;code&gt;getKeyStore()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すたびに、タイプ &lt;code&gt;type&lt;/code&gt; 新しいKeyStoreオブジェクトが返されます。その&lt;a href=&quot;keystore#load(java.security.KeyStore.LoadStoreParameter)&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;メソッドは、 &lt;code&gt;protection&lt;/code&gt; をカプセル化する &lt;code&gt;LoadStoreParameter&lt;/code&gt; を使用して呼び出されます。</target>
        </trans-unit>
        <trans-unit id="565935ca5a7a8dff2c75d40a78fe34cbc9914ba0" translate="yes" xml:space="preserve">
          <source>Each call to the &lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt;&lt;code&gt;getKeyStore()&lt;/code&gt;&lt;/a&gt; method on the returned builder will return a new KeyStore object of type &lt;code&gt;type&lt;/code&gt;. Its &lt;a href=&quot;keystore#load-java.security.KeyStore.LoadStoreParameter-&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; method is invoked using a &lt;code&gt;LoadStoreParameter&lt;/code&gt; that encapsulates &lt;code&gt;protection&lt;/code&gt;.</source>
          <target state="translated">返されたビルダーで&lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt; &lt;code&gt;getKeyStore()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すたびに、type &lt;code&gt;type&lt;/code&gt; 新しいKeyStoreオブジェクトが返されます。その&lt;a href=&quot;keystore#load-java.security.KeyStore.LoadStoreParameter-&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;メソッドは、 &lt;code&gt;protection&lt;/code&gt; をカプセル化する &lt;code&gt;LoadStoreParameter&lt;/code&gt; を使用して呼び出されます。</target>
        </trans-unit>
        <trans-unit id="32d094e5b72387ceb5cfa4ba8d22254eb005c99f" translate="yes" xml:space="preserve">
          <source>Each call to this method returns a fresh &lt;code&gt;PathIterator&lt;/code&gt; object that traverses the &lt;code&gt;Shape&lt;/code&gt; object geometry independently from any other &lt;code&gt;PathIterator&lt;/code&gt; objects in use at the same time.</source>
          <target state="translated">このメソッドを呼び出すたびに、同時に使用されている他の &lt;code&gt;PathIterator&lt;/code&gt; オブジェクトから独立して &lt;code&gt;Shape&lt;/code&gt; オブジェクトのジオメトリをトラバースする新しい &lt;code&gt;PathIterator&lt;/code&gt; オブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="7d3025ca4cca91ec1e1aa155dbcded76694b96ec" translate="yes" xml:space="preserve">
          <source>Each call to this method returns a fresh &lt;code&gt;PathIterator&lt;/code&gt; object that traverses the geometry of the &lt;code&gt;Shape&lt;/code&gt; object independently from any other &lt;code&gt;PathIterator&lt;/code&gt; objects in use at the same time.</source>
          <target state="translated">このメソッドを呼び出すたびに、同時に使用されている他の &lt;code&gt;PathIterator&lt;/code&gt; オブジェクトから独立して &lt;code&gt;Shape&lt;/code&gt; オブジェクトのジオメトリをトラバースする新しい &lt;code&gt;PathIterator&lt;/code&gt; オブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="62a2b8eb8432d2bb19b62991410a2d367b2cdc90" translate="yes" xml:space="preserve">
          <source>Each category of events is handled by a corresponding listener: &lt;code&gt;NamespaceChangeListener&lt;/code&gt;, &lt;code&gt;ObjectChangeListener&lt;/code&gt;.</source>
          <target state="translated">イベントの各カテゴリは、対応するリスナー（ &lt;code&gt;NamespaceChangeListener&lt;/code&gt; 、 &lt;code&gt;ObjectChangeListener&lt;/code&gt; )によって処理されます。</target>
        </trans-unit>
        <trans-unit id="415096700b0f811e1c654bf65b30052bf2302aff" translate="yes" xml:space="preserve">
          <source>Each chronology must define a chronology ID that is unique within the system. If the chronology represents a calendar system defined by the CLDR specification then the calendar type is the concatenation of the CLDR type and, if applicable, the CLDR variant,</source>
          <target state="translated">各クロノロジーは、システム内で一意のクロノロジー ID を定義しなければならない。クロノロジーが CLDR 仕様で定義されたカレンダシステムを表す場合、カレンダタイプは CLDR タイプと、該当する場合は CLDR バリアントを連結したものになります。</target>
        </trans-unit>
        <trans-unit id="68e6cd0db506e8288cb2666f7ad6f004b81bca6f" translate="yes" xml:space="preserve">
          <source>Each chronology must define a chronology ID that is unique within the system. If the chronology represents a calendar system defined by the CLDR specification then the calendar type is the concatenation of the CLDR type and, if applicable, the CLDR variant.</source>
          <target state="translated">各クロノロジーは、システム内で一意のクロノロジー ID を定義しなければならない。クロノロジーが CLDR 仕様で定義されたカレンダシステムを表す場合、カレンダタイプは CLDR タイプと、該当する場合は CLDR バリアントを連結したものになります。</target>
        </trans-unit>
        <trans-unit id="ae2d6cc6afa42e50b69369bd84b9bdddfa4ee6b9" translate="yes" xml:space="preserve">
          <source>Each cipher suite in the &lt;code&gt;suites&lt;/code&gt; parameter must have been listed by getSupportedCipherSuites(), or the method will fail. Following a successful call to this method, only suites listed in the &lt;code&gt;suites&lt;/code&gt; parameter are enabled for use.</source>
          <target state="translated">&lt;code&gt;suites&lt;/code&gt; パラメータの各暗号スイートは、getSupportedCipherSuites（）によってリストされている必要があります。そうでない場合、メソッドは失敗します。このメソッドの呼び出しが成功すると、 &lt;code&gt;suites&lt;/code&gt; パラメーターにリストされているスイートのみが使用可能になります。</target>
        </trans-unit>
        <trans-unit id="c9c3b451a2d3ee3d8844988245d012190589a542" translate="yes" xml:space="preserve">
          <source>Each class implementing &lt;code&gt;ScriptEngine&lt;/code&gt; has a corresponding factory that exposes metadata describing the engine class.</source>
          <target state="translated">&lt;code&gt;ScriptEngine&lt;/code&gt; を実装する各クラスには、エンジンクラスを説明するメタデータを公開する対応するファクトリがあります。</target>
        </trans-unit>
        <trans-unit id="7a91d31af8f03563292751345aae397335abb093" translate="yes" xml:space="preserve">
          <source>Each class named by &lt;code&gt;markerInterfaces&lt;/code&gt; is subject to the same restrictions as &lt;code&gt;Rd&lt;/code&gt;, the return type of &lt;code&gt;invokedType&lt;/code&gt;, as described &lt;a href=&quot;lambdametafactory&quot;&gt;&lt;code&gt;above&lt;/code&gt;&lt;/a&gt;. Each &lt;code&gt;MethodType&lt;/code&gt; named by &lt;code&gt;bridges&lt;/code&gt; is subject to the same restrictions as &lt;code&gt;samMethodType&lt;/code&gt;, as described &lt;a href=&quot;lambdametafactory&quot;&gt;&lt;code&gt;above&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;markerInterfaces&lt;/code&gt; によって名前が付けられた各クラスには、&lt;a href=&quot;lambdametafactory&quot;&gt; &lt;code&gt;above&lt;/code&gt; &lt;/a&gt; &lt;code&gt;invokedType&lt;/code&gt; れたタイプの戻り型である &lt;code&gt;Rd&lt;/code&gt; と同じ制限が適用されます。 &lt;code&gt;bridges&lt;/code&gt; によって名前が付けられた各 &lt;code&gt;MethodType&lt;/code&gt; には、&lt;a href=&quot;lambdametafactory&quot;&gt; &lt;code&gt;above&lt;/code&gt; &lt;/a&gt; &lt;code&gt;samMethodType&lt;/code&gt; と同じ制限が適用されます。</target>
        </trans-unit>
        <trans-unit id="184595c909d9e12155729e9aa086cc9b5b9fb380" translate="yes" xml:space="preserve">
          <source>Each clause is treated as a four-tuple of functions, called &quot;init&quot;, &quot;step&quot;, &quot;pred&quot;, and &quot;fini&quot;.</source>
          <target state="translated">各節は、&quot;init&quot;、&quot;step&quot;、&quot;pred&quot;、&quot;fini &quot;と呼ばれる関数の4つのタプルとして扱われます。</target>
        </trans-unit>
        <trans-unit id="7b9ac24a6e2ab6737b3e9c0084cab8135e7af1cd" translate="yes" xml:space="preserve">
          <source>Each cleaner operates independently, managing the pending cleaning actions and handling threading and termination when the cleaner is no longer in use. Registering an object reference and corresponding cleaning action returns a &lt;a href=&quot;cleaner.cleanable&quot;&gt;&lt;code&gt;Cleanable&lt;/code&gt;&lt;/a&gt;. The most efficient use is to explicitly invoke the &lt;a href=&quot;cleaner.cleanable#clean()&quot;&gt;&lt;code&gt;clean&lt;/code&gt;&lt;/a&gt; method when the object is closed or no longer needed. The cleaning action is a &lt;a href=&quot;../runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; to be invoked at most once when the object has become phantom reachable unless it has already been explicitly cleaned. Note that the cleaning action must not refer to the object being registered. If so, the object will not become phantom reachable and the cleaning action will not be invoked automatically.</source>
          <target state="translated">各クリーナーは独立して動作し、保留中のクリーニングアクションを管理し、クリーナーが使用されなくなったときのスレッド化と終了を処理します。オブジェクト参照と対応するクリーニングアクションを登録すると、&lt;a href=&quot;cleaner.cleanable&quot;&gt; &lt;code&gt;Cleanable&lt;/code&gt; &lt;/a&gt;が返されます。最も効率的な使用法は、オブジェクトが閉じられたとき、または不要になったときに、&lt;a href=&quot;cleaner.cleanable#clean()&quot;&gt; &lt;code&gt;clean&lt;/code&gt; &lt;/a&gt;メソッドを明示的に呼び出すことです。洗浄作用がある&lt;a href=&quot;../runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt;それはすでに明示的に清掃されていない限り、オブジェクトがファントム到達可能になったときに一度だけ呼び出されます。クリーニングアクションは、登録されているオブジェクトを参照してはならないことに注意してください。その場合、オブジェクトはファントムに到達可能にならず、クリーニングアクションは自動的に呼び出されません。</target>
        </trans-unit>
        <trans-unit id="6d60b28ad1f9a5d1a9d51e8f7b9a52c84ed48aae" translate="yes" xml:space="preserve">
          <source>Each client is created by an instance of &lt;a href=&quot;jmxconnectorprovider&quot;&gt;&lt;code&gt;JMXConnectorProvider&lt;/code&gt;&lt;/a&gt;. This instance is found as follows. Suppose the given &lt;a href=&quot;jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt; looks like &lt;code&gt;&quot;service:jmx:&lt;em&gt;protocol&lt;/em&gt;:&lt;em&gt;remainder&lt;/em&gt;&quot;&lt;/code&gt;. Then the factory will attempt to find the appropriate &lt;a href=&quot;jmxconnectorprovider&quot;&gt;&lt;code&gt;JMXConnectorProvider&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt;. Each occurrence of the character &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; in &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; is replaced by &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt;, respectively.</source>
          <target state="translated">各クライアントは、&lt;a href=&quot;jmxconnectorprovider&quot;&gt; &lt;code&gt;JMXConnectorProvider&lt;/code&gt; の&lt;/a&gt;インスタンスによって作成されます。このインスタンスは次のように見つかります。与えられた&lt;a href=&quot;jmxserviceurl&quot;&gt; &lt;code&gt;JMXServiceURL&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;&quot;service:jmx:&lt;em&gt;protocol&lt;/em&gt;:&lt;em&gt;remainder&lt;/em&gt;&quot;&lt;/code&gt; ます。次に、ファクトリは &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; 適切な&lt;a href=&quot;jmxconnectorprovider&quot;&gt; &lt;code&gt;JMXConnectorProvider&lt;/code&gt; &lt;/a&gt;を見つけようとし&lt;em&gt;ます&lt;/em&gt;。 &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; 内の文字 &lt;code&gt;+&lt;/code&gt; または &lt;code&gt;-&lt;/code&gt; が出現するたびに、に置き換えられ &lt;code&gt;.&lt;/code&gt; または &lt;code&gt;_&lt;/code&gt; 、それぞれ。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="422f83ece01fb48d8d51d8739208166443856a03" translate="yes" xml:space="preserve">
          <source>Each column description has the following columns:</source>
          <target state="translated">各カラムの説明には、以下のカラムがあります。</target>
        </trans-unit>
        <trans-unit id="5a4a9b25133b5474decd08c11d66dbf1140352ad" translate="yes" xml:space="preserve">
          <source>Each component in the &lt;code&gt;parent&lt;/code&gt; container is reshaped to be the size of the container, minus space for surrounding insets, horizontal gaps, and vertical gaps.</source>
          <target state="translated">&lt;code&gt;parent&lt;/code&gt; コンテナの各コンポーネントは、コンテナのサイズから、周囲のはめ込み、水平方向のギャップ、および垂直方向のギャップを差し引いたサイズになるように再形成されます。</target>
        </trans-unit>
        <trans-unit id="dc81b358652b50a3ccd5fbf45dd13f2ad5691a0b" translate="yes" xml:space="preserve">
          <source>Each component managed by a &lt;code&gt;GridBagLayout&lt;/code&gt; is associated with an instance of &lt;a href=&quot;gridbagconstraints&quot;&gt;&lt;code&gt;GridBagConstraints&lt;/code&gt;&lt;/a&gt;. The constraints object specifies where a component's display area should be located on the grid and how the component should be positioned within its display area. In addition to its constraints object, the &lt;code&gt;GridBagLayout&lt;/code&gt; also considers each component's minimum and preferred sizes in order to determine a component's size.</source>
          <target state="translated">管理される各成分 &lt;code&gt;GridBagLayout&lt;/code&gt; インスタンスに関連付けられている&lt;a href=&quot;gridbagconstraints&quot;&gt; &lt;code&gt;GridBagConstraints&lt;/code&gt; &lt;/a&gt;。制約オブジェクトは、コンポーネントの表示領域をグリッド上のどこに配置するか、およびコンポーネントをその表示領域内にどのように配置するかを指定します。 &lt;code&gt;GridBagLayout&lt;/code&gt; は、その制約オブジェクトに加えて、コンポーネントのサイズを決定するために、各コンポーネントの最小サイズと優先サイズも考慮します。</target>
        </trans-unit>
        <trans-unit id="8000ceb2cb5760f446a63dd9dff4d11a4e8ec2d3" translate="yes" xml:space="preserve">
          <source>Each configuration file should contain a list of fully-qualified class names, one per line. Space and tab characters surrounding each name, as well as blank lines, are ignored. The comment character is &lt;code&gt;'#'&lt;/code&gt; (&lt;code&gt;0x23&lt;/code&gt;); on each line all characters following the first comment character are ignored. The file must be encoded in UTF-8.</source>
          <target state="translated">各構成ファイルには、完全修飾クラス名のリストが1行に1つ含まれている必要があります。各名前を囲むスペースとタブ文字、および空白行は無視されます。コメント文字は &lt;code&gt;'#'&lt;/code&gt; （ &lt;code&gt;0x23&lt;/code&gt; ）です。各行で、最初のコメント文字に続くすべての文字は無視されます。ファイルはUTF-8でエンコードする必要があります。</target>
        </trans-unit>
        <trans-unit id="782519cfed22f6e5630e1de515f995c9b7d02625" translate="yes" xml:space="preserve">
          <source>Each connector server is created by an instance of &lt;a href=&quot;jmxconnectorserverprovider&quot;&gt;&lt;code&gt;JMXConnectorServerProvider&lt;/code&gt;&lt;/a&gt;. This instance is found as follows. Suppose the given &lt;a href=&quot;jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt; looks like &lt;code&gt;&quot;service:jmx:&lt;em&gt;protocol&lt;/em&gt;:&lt;em&gt;remainder&lt;/em&gt;&quot;&lt;/code&gt;. Then the factory will attempt to find the appropriate &lt;a href=&quot;jmxconnectorserverprovider&quot;&gt;&lt;code&gt;JMXConnectorServerProvider&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt;. Each occurrence of the character &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; in &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; is replaced by &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt;, respectively.</source>
          <target state="translated">各コネクタサーバーは、&lt;a href=&quot;jmxconnectorserverprovider&quot;&gt; &lt;code&gt;JMXConnectorServerProvider&lt;/code&gt; の&lt;/a&gt;インスタンスによって作成されます。このインスタンスは次のように見つかります。与えられた&lt;a href=&quot;jmxserviceurl&quot;&gt; &lt;code&gt;JMXServiceURL&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;&quot;service:jmx:&lt;em&gt;protocol&lt;/em&gt;:&lt;em&gt;remainder&lt;/em&gt;&quot;&lt;/code&gt; ます。次に、ファクトリは &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; 適した&lt;a href=&quot;jmxconnectorserverprovider&quot;&gt; &lt;code&gt;JMXConnectorServerProvider&lt;/code&gt; &lt;/a&gt;を見つけようとし&lt;em&gt;ます&lt;/em&gt;。 &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; 内の文字 &lt;code&gt;+&lt;/code&gt; または &lt;code&gt;-&lt;/code&gt; が出現するたびに、に置き換えられ &lt;code&gt;.&lt;/code&gt; または &lt;code&gt;_&lt;/code&gt; 、それぞれ。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6541e8c9ab7eed02383f5cde11342bacc7556ee4" translate="yes" xml:space="preserve">
          <source>Each constraint, represented by a &lt;code&gt;Spring&lt;/code&gt; object, controls the vertical or horizontal distance between two component edges. The edges can belong to any child of the container, or to the container itself. For example, the allowable width of a component can be expressed using a constraint that controls the distance between the west (left) and east (right) edges of the component. The allowable &lt;em&gt;y&lt;/em&gt; coordinates for a component can be expressed by constraining the distance between the north (top) edge of the component and the north edge of its container.</source>
          <target state="translated">&lt;code&gt;Spring&lt;/code&gt; オブジェクトで表される各拘束は、2つのコンポーネントエッジ間の垂直距離または水平距離を制御します。エッジは、コンテナの任意の子、またはコンテナ自体に属することができます。たとえば、コンポーネントの許容幅は、コンポーネントの西（左）エッジと東（右）エッジの間の距離を制御する制約を使用して表すことができます。コンポーネントの許容&lt;em&gt;y&lt;/em&gt;座標は、コンポーネントの北（上端）エッジとそのコンテナの北エッジの間の距離を制限することで表すことができます。</target>
        </trans-unit>
        <trans-unit id="57bc38c8f6c57bd6e23990238c181815f876d6f0" translate="yes" xml:space="preserve">
          <source>Each customizer should have a null constructor.</source>
          <target state="translated">各カスタマイザーは、NULL コンストラクタを持つべきです。</target>
        </trans-unit>
        <trans-unit id="47ecc95f5a6c3bf69dcc6fd7a4ebe68db660d248" translate="yes" xml:space="preserve">
          <source>Each customizer should inherit from the java.awt.Component class so it can be instantiated inside an AWT dialog or panel.</source>
          <target state="translated">各カスタマイザはjava.awt.Componentクラスを継承して、AWTダイアログやパネルの中でインスタンス化できるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="d01b68dad2676514cbe7be058ccbd40bc1155394" translate="yes" xml:space="preserve">
          <source>Each date time instance is composed of fields that are conveniently made available by the APIs. For lower level access to the fields refer to the &lt;code&gt;java.time.temporal&lt;/code&gt; package. Each class includes support for printing and parsing all manner of dates and times. Refer to the &lt;code&gt;java.time.format&lt;/code&gt; package for customization options.</source>
          <target state="translated">各日時インスタンスは、APIによって便利に使用できるようになっているフィールドで構成されています。フィールドへの低レベルのアクセスについては、 &lt;code&gt;java.time.temporal&lt;/code&gt; パッケージを参照してください。各クラスには、あらゆる種類の日付と時刻の出力と解析のサポートが含まれています。カスタマイズオプションについては、 &lt;code&gt;java.time.format&lt;/code&gt; パッケージを参照してください。</target>
        </trans-unit>
        <trans-unit id="a11cc35a89643391e6013e902ac7edeaaeae3d1a" translate="yes" xml:space="preserve">
          <source>Each digit character</source>
          <target state="translated">各桁文字</target>
        </trans-unit>
        <trans-unit id="439734a3da9088e6a6c7a455014e759a9ff0721d" translate="yes" xml:space="preserve">
          <source>Each driver should supply a class that implements the Driver interface.</source>
          <target state="translated">各ドライバは、ドライバインターフェイスを実装したクラスを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="4b39eb0020b55f7217398b3c88064ccde0bd175b" translate="yes" xml:space="preserve">
          <source>Each dynamically-computed constant statically specifies its own bootstrap method as a constant pool reference. The constant pool reference also specifies the constant's name and field type descriptor, just like &lt;code&gt;getstatic&lt;/code&gt; and the other field reference instructions. (Roughly speaking, a dynamically-computed constant is to a dynamically-computed call site as a &lt;code&gt;CONSTANT_Fieldref&lt;/code&gt; is to a &lt;code&gt;CONSTANT_Methodref&lt;/code&gt;.)</source>
          <target state="translated">動的に計算される各定数は、定数プール参照として独自のブートストラップメソッドを静的に指定します。定数プール参照は、 &lt;code&gt;getstatic&lt;/code&gt; や他のフィールド参照命令と同様に、定数の名前とフィールドタイプ記述子も指定します。（として大雑把に言えば、動的に計算された定数は、動的に計算された呼び出しサイトにある &lt;code&gt;CONSTANT_Fieldref&lt;/code&gt; がである &lt;code&gt;CONSTANT_Methodref&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e111bd4bc65f1905bd4e7e655775cb3ed0d50729" translate="yes" xml:space="preserve">
          <source>Each element in the array that is returned is an &lt;code&gt;Object&lt;/code&gt; instance that contains the values of the parameters supplied to a setter method. The order of the elements is determined by the value supplied for</source>
          <target state="translated">返される配列の各要素は、setterメソッドに提供されたパラメーターの値を含む &lt;code&gt;Object&lt;/code&gt; インスタンスです。要素の順序は、に提供された値によって決定されます</target>
        </trans-unit>
        <trans-unit id="e36a7868cff2665d84aa03b66df21807197680ce" translate="yes" xml:space="preserve">
          <source>Each element in this array corresponds to an observed object in the vector. It contains a bit mask of the flags &lt;a href=&quot;#OBSERVED_OBJECT_ERROR_NOTIFIED&quot;&gt;&lt;code&gt;OBSERVED_OBJECT_ERROR_NOTIFIED&lt;/code&gt;&lt;/a&gt; etc, indicating whether the corresponding notification has already been sent for the MBean being monitored.</source>
          <target state="translated">この配列の各要素は、ベクトル内の観測されたオブジェクトに対応します。これには、フラグ&lt;a href=&quot;#OBSERVED_OBJECT_ERROR_NOTIFIED&quot;&gt; &lt;code&gt;OBSERVED_OBJECT_ERROR_NOTIFIED&lt;/code&gt; &lt;/a&gt;などのビットマスクが含まれており、監視対象のMBeanに対応する通知がすでに送信されているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="6d1d6f4796b80a8ad203ea5c5b68aef2c7309166" translate="yes" xml:space="preserve">
          <source>Each element in this array corresponds to an observed object in the vector. It contains a bit mask of the flags &lt;a href=&quot;monitor#OBSERVED_OBJECT_ERROR_NOTIFIED&quot;&gt;&lt;code&gt;OBSERVED_OBJECT_ERROR_NOTIFIED&lt;/code&gt;&lt;/a&gt; etc, indicating whether the corresponding notification has already been sent for the MBean being monitored.</source>
          <target state="translated">この配列の各要素は、ベクター内の監視対象オブジェクトに対応しています。これには、フラグ&lt;a href=&quot;monitor#OBSERVED_OBJECT_ERROR_NOTIFIED&quot;&gt; &lt;code&gt;OBSERVED_OBJECT_ERROR_NOTIFIED&lt;/code&gt; &lt;/a&gt;などのビットマスクが含まれており、対応する通知が監視対象のMBeanに対してすでに送信されているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="3f87dde92d31d6810a3ee06f461b787634d6bd98" translate="yes" xml:space="preserve">
          <source>Each element is a &lt;code&gt;CompositeData&lt;/code&gt; representing StackTraceElement containing the following attributes:</source>
          <target state="translated">各要素は、次の属性を含むStackTraceElementを表す &lt;code&gt;CompositeData&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c9b486ced08a371da2db28809fa38c445c9f90c5" translate="yes" xml:space="preserve">
          <source>Each element of the array should be a set of three &lt;code&gt;Strings&lt;/code&gt; containing the name, the type, and a description. For example:</source>
          <target state="translated">配列の各要素は、名前、タイプ、および説明を含む3つの &lt;code&gt;Strings&lt;/code&gt; 列のセットである必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="1f6bf4d0adf1bf11f2e3b8671e73113281627f53" translate="yes" xml:space="preserve">
          <source>Each element of the set is a &lt;code&gt;String&lt;/code&gt; representing the Object Identifier (OID) of the X.509 extension that is supported. The OID is represented by a set of nonnegative integers separated by periods.</source>
          <target state="translated">セットの各要素は、サポートされるX.509拡張機能のオブジェクト識別子（OID）を表す &lt;code&gt;String&lt;/code&gt; です。OIDは、ピリオドで区切られた負でない整数のセットで表されます。</target>
        </trans-unit>
        <trans-unit id="0ccad0c61ca3cfcebb99a67ead0c1161822d4188" translate="yes" xml:space="preserve">
          <source>Each element of this queue is a &lt;a href=&quot;scheduledfuture&quot;&gt;&lt;code&gt;ScheduledFuture&lt;/code&gt;&lt;/a&gt;. For tasks submitted via one of the &lt;code&gt;schedule&lt;/code&gt; methods, the element will be identical to the returned &lt;code&gt;ScheduledFuture&lt;/code&gt;. For tasks submitted using &lt;a href=&quot;#execute(java.lang.Runnable)&quot;&gt;&lt;code&gt;execute&lt;/code&gt;&lt;/a&gt;, the element will be a zero-delay &lt;code&gt;ScheduledFuture&lt;/code&gt;.</source>
          <target state="translated">このキューの各要素は&lt;a href=&quot;scheduledfuture&quot;&gt; &lt;code&gt;ScheduledFuture&lt;/code&gt; &lt;/a&gt;です。 &lt;code&gt;schedule&lt;/code&gt; メソッドの1つを介して送信されたタスクの場合、要素は返された &lt;code&gt;ScheduledFuture&lt;/code&gt; と同じになります。&lt;a href=&quot;#execute(java.lang.Runnable)&quot;&gt; &lt;code&gt;execute&lt;/code&gt; &lt;/a&gt;を使用して送信されたタスクの場合、要素はゼロ遅延の &lt;code&gt;ScheduledFuture&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="2dac62c065c1000a9a51697be436335502f33e84" translate="yes" xml:space="preserve">
          <source>Each element represents a method call.</source>
          <target state="translated">各要素はメソッド呼び出しを表します。</target>
        </trans-unit>
        <trans-unit id="d19220aee7d71656e00ce6276767f27bb53aaaf2" translate="yes" xml:space="preserve">
          <source>Each entry in a keystore is identified by an &quot;alias&quot; string. In the case of private keys and their associated certificate chains, these strings distinguish among the different ways in which the entity may authenticate itself. For example, the entity may authenticate itself using different certificate authorities, or using different public key algorithms.</source>
          <target state="translated">鍵ストアの各エントリは、「エイリアス」文字列によって識別される。秘密鍵とそれに関連する証明書チェーンの場合、これらの文字列は、エンティティが自己認証を行 うさまざまな方法を区別する。例えば、エンティティは、異なる証明書局を使用したり、異なる公開鍵アルゴリズムを使用したりして、 自分自身を認証することができる。</target>
        </trans-unit>
        <trans-unit id="088d514368fa29cc6091cc91bcf119d3b0a2d2d3" translate="yes" xml:space="preserve">
          <source>Each entry in the &lt;code&gt;Configuration&lt;/code&gt; is indexed via an application name,</source>
          <target state="translated">&lt;code&gt;Configuration&lt;/code&gt; 各エントリには、アプリケーション名を介してインデックスが付けられます。</target>
        </trans-unit>
        <trans-unit id="da1f5b3e98b650d15b6fcc93e098064f4007429c" translate="yes" xml:space="preserve">
          <source>Each entry in the &lt;code&gt;Policy&lt;/code&gt; is represented as a &lt;b&gt;&lt;i&gt;grant&lt;/i&gt;&lt;/b&gt; entry. Each &lt;b&gt;&lt;i&gt;grant&lt;/i&gt;&lt;/b&gt; entry specifies a codebase, code signers, and Principals triplet, as well as the Permissions granted to that triplet.</source>
          <target state="translated">&lt;code&gt;Policy&lt;/code&gt; 各エントリは、&lt;b&gt;&lt;i&gt;付与&lt;/i&gt;&lt;/b&gt;エントリとして表されます。各&lt;b&gt;&lt;i&gt;付与&lt;/i&gt;&lt;/b&gt;エントリは、コードベース、コード署名者、プリンシパルのトリプレット、およびそのトリプレットに付与される権限を指定します。</target>
        </trans-unit>
        <trans-unit id="53bca0a226db60f720e5b307655be1aef2e67c09" translate="yes" xml:space="preserve">
          <source>Each entry in the &lt;code&gt;Vector&lt;/code&gt; represents an &lt;code&gt;AccessibleRelation&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Vector&lt;/code&gt; の各エントリは、 &lt;code&gt;AccessibleRelation&lt;/code&gt; を表します。</target>
        </trans-unit>
        <trans-unit id="1b7361658c24a672ba18ff02cf80be317972d726" translate="yes" xml:space="preserve">
          <source>Each entry in the &lt;code&gt;Vector&lt;/code&gt; represents an &lt;code&gt;AccessibleState&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Vector&lt;/code&gt; の各エントリは、 &lt;code&gt;AccessibleState&lt;/code&gt; を表します。</target>
        </trans-unit>
        <trans-unit id="2550370ed13c7f4ac08a6a67450eb8b55df82cad" translate="yes" xml:space="preserve">
          <source>Each extension contains an object identifier, a criticality setting indicating whether it is a critical or a non-critical extension, and and an ASN.1 DER-encoded value. Its ASN.1 definition is:</source>
          <target state="translated">各拡張子は、オブジェクト識別子、クリティカルか非クリティカルかを示すクリティカル設定、およびASN.1 DERでエンコードされた値を含みます。そのASN.1の定義は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="743a4bde1183aedc0cbc8935c3fa92ce0cd4f60b" translate="yes" xml:space="preserve">
          <source>Each extension in a certificate/CRL may be designated as critical or non-critical. A certificate/CRL-using system (an application validating a certificate/CRL) must reject the certificate/CRL if it encounters a critical extension it does not recognize. A non-critical extension may be ignored if it is not recognized.</source>
          <target state="translated">証明書/CRL の各拡張子は、クリティカルまたは非クリティカルとして指定することができる。証明書/CRLを使用するシステム(証明書/CRLを検証するアプリケーション)は、認識できないクリティカルな拡張子に遭遇した場合、その証明書/CRLを拒否しなければならない。クリティカルでない拡張は、認識されない場合、無視されてもよい。</target>
        </trans-unit>
        <trans-unit id="b7069adeee248e2073c9ff4ae57f7c6095f03187" translate="yes" xml:space="preserve">
          <source>Each file must be separated from the one that follows it by a comma (,).</source>
          <target state="translated">各ファイルは、後続のファイルとコンマ(,)で区切らなければなりません。</target>
        </trans-unit>
        <trans-unit id="d0338ed9d4b01109c0fece6add20ad8441fea588" translate="yes" xml:space="preserve">
          <source>Each foreign key column description has the following columns:</source>
          <target state="translated">各外部キー列の記述には、以下の列があります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
