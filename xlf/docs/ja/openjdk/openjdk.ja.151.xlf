<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="9b7835d6c2897bc03547bef50d2e8ccef489fee5" translate="yes" xml:space="preserve">
          <source>The padding value.</source>
          <target state="translated">パディング値。</target>
        </trans-unit>
        <trans-unit id="5254cf384974df4bf22cb621e6eb98fe1516e0c5" translate="yes" xml:space="preserve">
          <source>The paged-results control's assigned object identifier is 1.2.840.113556.1.4.319.</source>
          <target state="translated">ページ結果コントロールに割り当てられたオブジェクト識別子は、1.2.840.113556.1.4.319です。</target>
        </trans-unit>
        <trans-unit id="866b80818a098f96114ee08abb23a44885090886" translate="yes" xml:space="preserve">
          <source>The paged-results response control's assigned object identifier is 1.2.840.113556.1.4.319.</source>
          <target state="translated">ページ結果応答コントロールに割り当てられたオブジェクト識別子は、1.2.840.11356.1.4.319です。</target>
        </trans-unit>
        <trans-unit id="b266460db97939c24d673ede02a200ebb6755934" translate="yes" xml:space="preserve">
          <source>The paint event type.</source>
          <target state="translated">塗りのイベントタイプ。</target>
        </trans-unit>
        <trans-unit id="67aa960c4b671a24ef5b1e0c2ea9ff270cfe200e" translate="yes" xml:space="preserve">
          <source>The painting architecture of Swing requires an opaque &lt;code&gt;JComponent&lt;/code&gt; to exist in the containment hierarchy above all other components. This is typically provided by way of the content pane. If you replace the content pane, it is recommended that you make the content pane opaque by way of &lt;code&gt;setOpaque(true)&lt;/code&gt;. Additionally, if the content pane overrides &lt;code&gt;paintComponent&lt;/code&gt;, it will need to completely fill in the background in an opaque color in &lt;code&gt;paintComponent&lt;/code&gt;.</source>
          <target state="translated">The painting architecture of Swing requires an opaque &lt;code&gt;JComponent&lt;/code&gt; to exist in the containment hierarchy above all other components. This is typically provided by way of the content pane. If you replace the content pane, it is recommended that you make the content pane opaque by way of &lt;code&gt;setOpaque(true)&lt;/code&gt; . Additionally, if the content pane overrides &lt;code&gt;paintComponent&lt;/code&gt; , it will need to completely fill in the background in an opaque color in &lt;code&gt;paintComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49dbe49dc69592f6524d7ca2b444c01fc630b182" translate="yes" xml:space="preserve">
          <source>The palette close icon.</source>
          <target state="translated">パレットを閉じるアイコンです。</target>
        </trans-unit>
        <trans-unit id="1b15c609d33b642b1ba463e5d2a1471d0d9df721" translate="yes" xml:space="preserve">
          <source>The palette layer sits over the default layer. Useful for floating toolbars and palettes, so they can be positioned above other components.</source>
          <target state="translated">パレットレイヤーはデフォルトレイヤーの上に配置されます。フローティングツールバーやパレットを他のコンポーネントの上に配置するのに便利です。</target>
        </trans-unit>
        <trans-unit id="a054a114f906605bc80876fd63d7712ff1b761b8" translate="yes" xml:space="preserve">
          <source>The paragraph attributes form the definition of a paragraph to be rendered. All sizes are specified in points (such as found in postscript), a device independent measure.</source>
          <target state="translated">段落属性は,レンダリングされる段落の定義を形成する。すべてのサイズは、デバイスに依存しない尺度であるポイント(postscriptで見られるような)で指定されます。</target>
        </trans-unit>
        <trans-unit id="4707bb85a1366f3abad509af71baadf574140ddd" translate="yes" xml:space="preserve">
          <source>The paragraph left indent action identifier</source>
          <target state="translated">段落左インデント アクション識別子</target>
        </trans-unit>
        <trans-unit id="16cfceed724273e5b7e0f3fabbd803cacb348ced" translate="yes" xml:space="preserve">
          <source>The paragraph right indent action identifier</source>
          <target state="translated">段落右インデントアクション識別子</target>
        </trans-unit>
        <trans-unit id="7b4511c60fee63fc5dd606de36079b10244d82e8" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;item&lt;/code&gt; represents the context the XPath expression will be operated on. The type of the context is implementation-dependent. If the value is &lt;code&gt;null&lt;/code&gt;, the operation must have no dependency on the context, otherwise an XPathExpressionException will be thrown.</source>
          <target state="translated">The parameter &lt;code&gt;item&lt;/code&gt; represents the context the XPath expression will be operated on. The type of the context is implementation-dependent. If the value is &lt;code&gt;null&lt;/code&gt; , the operation must have no dependency on the context, otherwise an XPathExpressionException will be thrown.</target>
        </trans-unit>
        <trans-unit id="50af5226ec29660988fc56fada491b71c9083bd4" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;n&lt;/code&gt; must be in the range 0 through 999999999, inclusive. &lt;code&gt;ZERO.pow(0)&lt;/code&gt; returns &lt;a href=&quot;#ONE&quot;&gt;&lt;code&gt;ONE&lt;/code&gt;&lt;/a&gt;. Note that future releases may expand the allowable exponent range of this method.</source>
          <target state="translated">The parameter &lt;code&gt;n&lt;/code&gt; must be in the range 0 through 999999999, inclusive. &lt;code&gt;ZERO.pow(0)&lt;/code&gt; returns &lt;a href=&quot;#ONE&quot;&gt; &lt;code&gt;ONE&lt;/code&gt; &lt;/a&gt;. Note that future releases may expand the allowable exponent range of this method.</target>
        </trans-unit>
        <trans-unit id="24552a8980b41276ccd5905a6aaeeb53f392d59d" translate="yes" xml:space="preserve">
          <source>The parameter &lt;code&gt;n&lt;/code&gt; must be in the range 0 through 999999999, inclusive. &lt;code&gt;ZERO.pow(0)&lt;/code&gt; returns &lt;a href=&quot;bigdecimal#ONE&quot;&gt;&lt;code&gt;ONE&lt;/code&gt;&lt;/a&gt;. Note that future releases may expand the allowable exponent range of this method.</source>
          <target state="translated">パラメーター &lt;code&gt;n&lt;/code&gt; は、0から999999999までの範囲でなければなりません。 &lt;code&gt;ZERO.pow(0)&lt;/code&gt; は&lt;a href=&quot;bigdecimal#ONE&quot;&gt; &lt;code&gt;ONE&lt;/code&gt; を&lt;/a&gt;返します。今後のリリースでは、このメソッドの許容指数範囲が拡張される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="225f6eef89aa234e726279199c17142bb293790d" translate="yes" xml:space="preserve">
          <source>The parameter count in &lt;code&gt;concatType&lt;/code&gt; equals to number of \1 tags in &lt;code&gt;recipe&lt;/code&gt;</source>
          <target state="translated">The parameter count in &lt;code&gt;concatType&lt;/code&gt; equals to number of \1 tags in &lt;code&gt;recipe&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d5ec5b0fc9d2ee85f8e3be945c5875b1eb128c88" translate="yes" xml:space="preserve">
          <source>The parameter factoryId defined here is inconsistent with that of other JAXP factories where the first parameter is fully qualified factory class name that provides implementation of the factory.</source>
          <target state="translated">ここで定義されているパラメータ factoryId は、最初のパラメータがファクトリーの実装を提供する完全修飾されたファクトリークラス名である他の JAXP ファクトリのそれと矛盾しています。</target>
        </trans-unit>
        <trans-unit id="06f41071ad9d7621be55ce2931fc7d18a329dcd8" translate="yes" xml:space="preserve">
          <source>The parameter list &lt;code&gt;(V A...)&lt;/code&gt; of the body is called the &lt;em&gt;internal parameter list&lt;/em&gt;. It will constrain the parameter lists of the other loop parts.</source>
          <target state="translated">The parameter list &lt;code&gt;(V A...)&lt;/code&gt; of the body is called the &lt;em&gt;internal parameter list&lt;/em&gt;. It will constrain the parameter lists of the other loop parts.</target>
        </trans-unit>
        <trans-unit id="7fd62c7a8f8c15bfb268fbf63a8a0194acc8a533" translate="yes" xml:space="preserve">
          <source>The parameter list &lt;code&gt;(V I A...)&lt;/code&gt; of the body contributes to a list of types called the &lt;em&gt;internal parameter list&lt;/em&gt;. It will constrain the parameter lists of the other loop parts.</source>
          <target state="translated">The parameter list &lt;code&gt;(V I A...)&lt;/code&gt; of the body contributes to a list of types called the &lt;em&gt;internal parameter list&lt;/em&gt;. It will constrain the parameter lists of the other loop parts.</target>
        </trans-unit>
        <trans-unit id="e58b0b6e022c4ee1aa6339bb336b514c909a5f9d" translate="yes" xml:space="preserve">
          <source>The parameter list &lt;code&gt;(V T A...)&lt;/code&gt; of the body contributes to a list of types called the &lt;em&gt;internal parameter list&lt;/em&gt;. It will constrain the parameter lists of the other loop parts.</source>
          <target state="translated">The parameter list &lt;code&gt;(V T A...)&lt;/code&gt; of the body contributes to a list of types called the &lt;em&gt;internal parameter list&lt;/em&gt;. It will constrain the parameter lists of the other loop parts.</target>
        </trans-unit>
        <trans-unit id="474a5af5a3f8d227ed70f57da563f8b86bc54e3c" translate="yes" xml:space="preserve">
          <source>The parameter list for every non-omitted, non-init (step, pred, and fini) function must be effectively identical to the internal parameter list &lt;code&gt;(V... A...)&lt;/code&gt;.</source>
          <target state="translated">The parameter list for every non-omitted, non-init (step, pred, and fini) function must be effectively identical to the internal parameter list &lt;code&gt;(V... A...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53432ad7282ec815dfa60a54e056f22aa428efcb" translate="yes" xml:space="preserve">
          <source>The parameter list for init functions will be adjusted to the external parameter list. (Note that their parameter lists are already effectively identical to this list.)</source>
          <target state="translated">init関数のパラメータリストは、外部パラメータリストに合わせて調整されます。(それらのパラメータリストはすでにこのリストと事実上同じであることに注意してください)。</target>
        </trans-unit>
        <trans-unit id="8e16a7cb9882736edeb02f61ab4586e18b7cca61" translate="yes" xml:space="preserve">
          <source>The parameter list for the resulting loop handle will be the external parameter list &lt;code&gt;(A...)&lt;/code&gt;.</source>
          <target state="translated">The parameter list for the resulting loop handle will be the external parameter list &lt;code&gt;(A...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b118da091f6db3ab3ac720df6e05ded63f2e75c7" translate="yes" xml:space="preserve">
          <source>The parameter list of &lt;code&gt;iterations&lt;/code&gt; (of some form &lt;code&gt;(A*)&lt;/code&gt;) must be effectively identical to the external parameter list &lt;code&gt;(A...)&lt;/code&gt;.</source>
          <target state="translated">The parameter list of &lt;code&gt;iterations&lt;/code&gt; (of some form &lt;code&gt;(A*)&lt;/code&gt; ) must be effectively identical to the external parameter list &lt;code&gt;(A...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30a082bbd95089d21ab808594316f3f108f9a062" translate="yes" xml:space="preserve">
          <source>The parameter list of &lt;code&gt;start&lt;/code&gt; (of some form &lt;code&gt;(A*)&lt;/code&gt;) must be effectively identical to the external parameter list &lt;code&gt;(A...)&lt;/code&gt;.</source>
          <target state="translated">The parameter list of &lt;code&gt;start&lt;/code&gt; (of some form &lt;code&gt;(A*)&lt;/code&gt; ) must be effectively identical to the external parameter list &lt;code&gt;(A...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9d60d133de9d4d6e4fd09cf41a4b92be03c10f9" translate="yes" xml:space="preserve">
          <source>The parameter list of an &lt;code&gt;iterator&lt;/code&gt; that is non-&lt;code&gt;null&lt;/code&gt; (of some form &lt;code&gt;(A*)&lt;/code&gt;) must be effectively identical to the external parameter list &lt;code&gt;(A...)&lt;/code&gt;.</source>
          <target state="translated">The parameter list of an &lt;code&gt;iterator&lt;/code&gt; that is non- &lt;code&gt;null&lt;/code&gt; (of some form &lt;code&gt;(A*)&lt;/code&gt; ) must be effectively identical to the external parameter list &lt;code&gt;(A...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c4b12867b1f840ab46a64f2a284a7b84dba7590" translate="yes" xml:space="preserve">
          <source>The parameter names used by the &lt;code&gt;DOMConfiguration&lt;/code&gt; object are defined throughout the DOM Level 3 specifications. Names are case-insensitive. To avoid possible conflicts, as a convention, names referring to parameters defined outside the DOM specification should be made unique. Because parameters are exposed as properties in names are recommended to follow the section 5.16 Identifiers of [Unicode] with the addition of the character '-' (HYPHEN-MINUS) but it is not enforced by the DOM implementation. DOM Level 3 Core Implementations are required to recognize all parameters defined in this specification. Some parameter values may also be required to be supported by the implementation. Refer to the definition of the parameter to know if a value must be supported or not.</source>
          <target state="translated">The parameter names used by the &lt;code&gt;DOMConfiguration&lt;/code&gt; object are defined throughout the DOM Level 3 specifications. Names are case-insensitive. To avoid possible conflicts, as a convention, names referring to parameters defined outside the DOM specification should be made unique. Because parameters are exposed as properties in names are recommended to follow the section 5.16 Identifiers of [Unicode] with the addition of the character '-' (HYPHEN-MINUS) but it is not enforced by the DOM implementation. DOM Level 3 Core Implementations are required to recognize all parameters defined in this specification. Some parameter values may also be required to be supported by the implementation. Refer to the definition of the parameter to know if a value must be supported or not.</target>
        </trans-unit>
        <trans-unit id="bcdb80d85de039f3e18bb3b5fc1d902bb8edad88" translate="yes" xml:space="preserve">
          <source>The parameter of this method is the number of invocations being requested from this WebSocket to the associated listener, not the number of messages. Sometimes a message may be delivered to the listener in a single invocation, but not always. For example, Ping, Pong and Close messages are delivered in a single invocation of &lt;code&gt;onPing&lt;/code&gt;, &lt;code&gt;onPong&lt;/code&gt; and &lt;code&gt;onClose&lt;/code&gt; methods respectively. However, whether or not Text and Binary messages are delivered in a single invocation of &lt;code&gt;onText&lt;/code&gt; and &lt;code&gt;onBinary&lt;/code&gt; methods depends on the boolean argument (&lt;code&gt;last&lt;/code&gt;) of these methods. If &lt;code&gt;last&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, then there is more to a message than has been delivered to the invocation.</source>
          <target state="translated">The parameter of this method is the number of invocations being requested from this WebSocket to the associated listener, not the number of messages. Sometimes a message may be delivered to the listener in a single invocation, but not always. For example, Ping, Pong and Close messages are delivered in a single invocation of &lt;code&gt;onPing&lt;/code&gt; , &lt;code&gt;onPong&lt;/code&gt; and &lt;code&gt;onClose&lt;/code&gt; methods respectively. However, whether or not Text and Binary messages are delivered in a single invocation of &lt;code&gt;onText&lt;/code&gt; and &lt;code&gt;onBinary&lt;/code&gt; methods depends on the boolean argument ( &lt;code&gt;last&lt;/code&gt; ) of these methods. If &lt;code&gt;last&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; , then there is more to a message than has been delivered to the invocation.</target>
        </trans-unit>
        <trans-unit id="44e6fab6d9ac4719240ec0b3727c954e51d89ce9" translate="yes" xml:space="preserve">
          <source>The parameter types &lt;code&gt;Vn&lt;/code&gt; will be interpreted as loop-local state elements &lt;code&gt;(V...)&lt;/code&gt;.</source>
          <target state="translated">The parameter types &lt;code&gt;Vn&lt;/code&gt; will be interpreted as loop-local state elements &lt;code&gt;(V...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e373695ec6d41c303c83799483b80fd014fe746" translate="yes" xml:space="preserve">
          <source>The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this &lt;code&gt;RowSet&lt;/code&gt; object's command when the method &lt;code&gt;execute&lt;/code&gt; is called. Calls made to the method &lt;code&gt;getParams&lt;/code&gt; after &lt;code&gt;setUnicodeStream&lt;/code&gt; has been called will return an array containing the parameter values that have been set. In that array, the element that represents the values set with this method will itself be an array. The first element of that array is the given &lt;code&gt;java.io.InputStream&lt;/code&gt; object. The second element is the value set for</source>
          <target state="translated">The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this &lt;code&gt;RowSet&lt;/code&gt; object's command when the method &lt;code&gt;execute&lt;/code&gt; is called. Calls made to the method &lt;code&gt;getParams&lt;/code&gt; after &lt;code&gt;setUnicodeStream&lt;/code&gt; has been called will return an array containing the parameter values that have been set. In that array, the element that represents the values set with this method will itself be an array. The first element of that array is the given &lt;code&gt;java.io.InputStream&lt;/code&gt; object. The second element is the value set for</target>
        </trans-unit>
        <trans-unit id="5b1d686a30e89e20a67cce69f88fe14f6a1d46c4" translate="yes" xml:space="preserve">
          <source>The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this &lt;code&gt;RowSet&lt;/code&gt; object's command when the method &lt;code&gt;execute&lt;/code&gt; is called. Methods such as &lt;code&gt;execute&lt;/code&gt; and &lt;code&gt;populate&lt;/code&gt; must be provided in any class that extends this class and implements one or more of the standard JSR-114 &lt;code&gt;RowSet&lt;/code&gt; interfaces.</source>
          <target state="translated">The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this &lt;code&gt;RowSet&lt;/code&gt; object's command when the method &lt;code&gt;execute&lt;/code&gt; is called. Methods such as &lt;code&gt;execute&lt;/code&gt; and &lt;code&gt;populate&lt;/code&gt; must be provided in any class that extends this class and implements one or more of the standard JSR-114 &lt;code&gt;RowSet&lt;/code&gt; interfaces.</target>
        </trans-unit>
        <trans-unit id="dfb052ee0c1e5966878d2245fe418bfa8a8bdef9" translate="yes" xml:space="preserve">
          <source>The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this &lt;code&gt;RowSet&lt;/code&gt; object's command when the method &lt;code&gt;execute&lt;/code&gt; is called. Methods such as &lt;code&gt;execute&lt;/code&gt; and &lt;code&gt;populate&lt;/code&gt; must be provided in any class that extends this class and implements one or more of the standard JSR-114 &lt;code&gt;RowSet&lt;/code&gt; interfaces. NOTE: &lt;code&gt;JdbcRowSet&lt;/code&gt; does not require the &lt;code&gt;populate&lt;/code&gt; method as it is undefined in this class.</source>
          <target state="translated">The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this &lt;code&gt;RowSet&lt;/code&gt; object's command when the method &lt;code&gt;execute&lt;/code&gt; is called. Methods such as &lt;code&gt;execute&lt;/code&gt; and &lt;code&gt;populate&lt;/code&gt; must be provided in any class that extends this class and implements one or more of the standard JSR-114 &lt;code&gt;RowSet&lt;/code&gt; interfaces. NOTE: &lt;code&gt;JdbcRowSet&lt;/code&gt; does not require the &lt;code&gt;populate&lt;/code&gt; method as it is undefined in this class.</target>
        </trans-unit>
        <trans-unit id="305a02d1aa1ebc36991c6f5311b0ec8b4872c30b" translate="yes" xml:space="preserve">
          <source>The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this &lt;code&gt;RowSet&lt;/code&gt; object's command when the method &lt;code&gt;execute&lt;/code&gt; is called. Methods such as &lt;code&gt;execute&lt;/code&gt;, &lt;code&gt;populate&lt;/code&gt; must be provided in any class that extends this class and implements one or more of the standard JSR-114 &lt;code&gt;RowSet&lt;/code&gt; interfaces.</source>
          <target state="translated">The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this &lt;code&gt;RowSet&lt;/code&gt; object's command when the method &lt;code&gt;execute&lt;/code&gt; is called. Methods such as &lt;code&gt;execute&lt;/code&gt; , &lt;code&gt;populate&lt;/code&gt; must be provided in any class that extends this class and implements one or more of the standard JSR-114 &lt;code&gt;RowSet&lt;/code&gt; interfaces.</target>
        </trans-unit>
        <trans-unit id="b8ef4f0e5646bef0741f18b4f02a8cea83921ea8" translate="yes" xml:space="preserve">
          <source>The parameter values retain their original case, except a charset parameter value for a text media type is converted to lowercase.</source>
          <target state="translated">パラメータ値は元の大文字小文字を保持しますが、テキスト・メディア・タイプのcharsetパラメータ値が小文字に変換されることを除いては、パラメータ値は元の大文字小文字を保持します。</target>
        </trans-unit>
        <trans-unit id="bb39ffff0d8075952f90c8c237468e1f45f1c684" translate="yes" xml:space="preserve">
          <source>The parameters are arranged in ascending order of parameter name.</source>
          <target state="translated">パラメータはパラメータ名の昇順に並んでいます。</target>
        </trans-unit>
        <trans-unit id="11e0d4edf362f7c76332fc4450bc63049b256eb3" translate="yes" xml:space="preserve">
          <source>The parameters are not authenticated by the &lt;code&gt;SSLEngine&lt;/code&gt;.</source>
          <target state="translated">パラメータは &lt;code&gt;SSLEngine&lt;/code&gt; によって認証されません。</target>
        </trans-unit>
        <trans-unit id="fb65f692e7e1455e31c885605739ad78cecb430f" translate="yes" xml:space="preserve">
          <source>The parameters are not order dependent. That is, &lt;code&gt;
 addSelectionInterval(x, y)&lt;/code&gt; is equivalent to &lt;code&gt;addSelectionInterval(y, x)&lt;/code&gt;.</source>
          <target state="translated">The parameters are not order dependent. That is, &lt;code&gt; addSelectionInterval(x, y)&lt;/code&gt; is equivalent to &lt;code&gt;addSelectionInterval(y, x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f7d66b2c4cec0965399997b2bce2a3097afb6c1" translate="yes" xml:space="preserve">
          <source>The parameters are not order dependent. That is, &lt;code&gt;
 getPathBetweenRows(x, y)&lt;/code&gt; is equivalent to &lt;code&gt;getPathBetweenRows(y, x)&lt;/code&gt;.</source>
          <target state="translated">The parameters are not order dependent. That is, &lt;code&gt; getPathBetweenRows(x, y)&lt;/code&gt; is equivalent to &lt;code&gt;getPathBetweenRows(y, x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71fdccbc419bc28fc08830c8d380f76d2f332f40" translate="yes" xml:space="preserve">
          <source>The parameters are not order dependent. That is, &lt;code&gt;
 removeSelectionInterval(x, y)&lt;/code&gt; is equivalent to &lt;code&gt;removeSelectionInterval(y, x)&lt;/code&gt;.</source>
          <target state="translated">The parameters are not order dependent. That is, &lt;code&gt; removeSelectionInterval(x, y)&lt;/code&gt; is equivalent to &lt;code&gt;removeSelectionInterval(y, x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8392c9e26a22dc79ccde9fbc210a6e58f6f0e6de" translate="yes" xml:space="preserve">
          <source>The parameters are not order dependent. That is, &lt;code&gt;
 setSelectionInterval(x, y)&lt;/code&gt; is equivalent to &lt;code&gt;setSelectionInterval(y, x)&lt;/code&gt;.</source>
          <target state="translated">The parameters are not order dependent. That is, &lt;code&gt; setSelectionInterval(x, y)&lt;/code&gt; is equivalent to &lt;code&gt;setSelectionInterval(y, x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aff2143fd57f0fff307229e418484b901b5de2b1" translate="yes" xml:space="preserve">
          <source>The parameters consist of a 12-byte nonce and an initial counter value expressed as a 32-bit integer.</source>
          <target state="translated">パラメータは、12 バイトの nonce と 32 ビットの整数で表されるカウンタの初期値で構成されています。</target>
        </trans-unit>
        <trans-unit id="a4ae335f84321e13f212ee4b121568c174875cb3" translate="yes" xml:space="preserve">
          <source>The parameters consist of a version number, a rounds count, a word size, and optionally an initialization vector (IV) (only in feedback mode).</source>
          <target state="translated">パラメータは、バージョン番号、ラウンド数、ワードサイズ、オプションで初期化ベクトル(IV)から構成されます(フィードバックモードのみ)。</target>
        </trans-unit>
        <trans-unit id="a9f8d6f3c8b03d8da1385862cfad5502762462d5" translate="yes" xml:space="preserve">
          <source>The parameters consist of an effective key size and optionally an 8-byte initialization vector (IV) (only in feedback mode).</source>
          <target state="translated">パラメータは、有効鍵サイズとオプションで8バイトの初期化ベクトル(IV)で構成される(フィードバックモード時のみ)。</target>
        </trans-unit>
        <trans-unit id="0b947091ed01239ac2c63710914b838d30a607d9" translate="yes" xml:space="preserve">
          <source>The parameters of the underlying executable do not necessarily have unique names, or names that are legal identifiers in the Java programming language (JLS 3.8).</source>
          <target state="translated">基底となる実行ファイルのパラメータには、必ずしも一意の名前や、Java プログラミング言語(JLS 3.8)における法的な識別子である名前が含まれているとは限りません。</target>
        </trans-unit>
        <trans-unit id="76d53ff74b412d6d37047d16013d75e50df36de2" translate="yes" xml:space="preserve">
          <source>The parameters represent the two parts of a phrase like '6 Hours'. For example:</source>
          <target state="translated">パラメータは、「6時間」のようなフレーズの2つの部分を表します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="ad7182414b3d2ec2fdd16dc0fcb2c6566049a62c" translate="yes" xml:space="preserve">
          <source>The parameters specified by an &lt;code&gt;ImageReadParam&lt;/code&gt; are applied to an image as follows. First, if a rendering size has been set by &lt;code&gt;setSourceRenderSize&lt;/code&gt;, the entire decoded image is rendered at the size given by &lt;code&gt;getSourceRenderSize&lt;/code&gt;. Otherwise, the image has its natural size given by &lt;code&gt;ImageReader.getWidth&lt;/code&gt; and &lt;code&gt;ImageReader.getHeight&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageReadParam&lt;/code&gt; で指定されたパラメーターは、次のように画像に適用されます。まず、レンダリングサイズが &lt;code&gt;setSourceRenderSize&lt;/code&gt; で設定されている場合、デコードされた画像全体が &lt;code&gt;getSourceRenderSize&lt;/code&gt; で指定されたサイズでレンダリングされます。それ以外の場合、画像は &lt;code&gt;ImageReader.getWidth&lt;/code&gt; および &lt;code&gt;ImageReader.getHeight&lt;/code&gt; で指定された本来のサイズになります。</target>
        </trans-unit>
        <trans-unit id="71e0836126bfdf6c19dabd14a10861299a8d46d0" translate="yes" xml:space="preserve">
          <source>The parameters supplied to this constructor are subject to the constraints described in &lt;a href=&quot;#setValues(int,int,int,int)&quot;&gt;&lt;code&gt;setValues(int, int, int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The parameters supplied to this constructor are subject to the constraints described in &lt;a href=&quot;#setValues(int,int,int,int)&quot;&gt; &lt;code&gt;setValues(int, int, int, int)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a0eb52dcb0a07ffe222d0a4187fb174042c35c23" translate="yes" xml:space="preserve">
          <source>The parameters to &lt;code&gt;Printable.print(..)&lt;/code&gt; include a &lt;code&gt;PageFormat&lt;/code&gt; which describes the printable area of the page, needed for calculating the contents that will fit the page, and the page index, which specifies the zero-based print stream index of the requested page.</source>
          <target state="translated">The parameters to &lt;code&gt;Printable.print(..)&lt;/code&gt; include a &lt;code&gt;PageFormat&lt;/code&gt; which describes the printable area of the page, needed for calculating the contents that will fit the page, and the page index, which specifies the zero-based print stream index of the requested page.</target>
        </trans-unit>
        <trans-unit id="adce7a8e02b2dbab7543097404b50ae2e2f2c0d3" translate="yes" xml:space="preserve">
          <source>The parameters to these methods follow consistent patterns:</source>
          <target state="translated">これらのメソッドのパラメータは一貫したパターンに従います。</target>
        </trans-unit>
        <trans-unit id="64f3c4e11f9c88a8f6edb02c85c8a7f5a133e45c" translate="yes" xml:space="preserve">
          <source>The parameters used to construct the common pool may be controlled by setting the following &lt;a href=&quot;../../lang/system#getProperty(java.lang.String)&quot;&gt;system properties&lt;/a&gt;:</source>
          <target state="translated">The parameters used to construct the common pool may be controlled by setting the following &lt;a href=&quot;../../lang/system#getProperty(java.lang.String)&quot;&gt;system properties&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="cbf95408183e18e8026be8d135af97a9475df373" translate="yes" xml:space="preserve">
          <source>The parameters will always have the ciphersuite and protocols arrays set to non-null values.</source>
          <target state="translated">パラメータは常に ciphersuite と protocols 配列が非 null 値に設定されています。</target>
        </trans-unit>
        <trans-unit id="b52384d72a0f4af8de4f042358cf9996bbe18cf1" translate="yes" xml:space="preserve">
          <source>The parameters will always have the ciphersuites and protocols arrays set to non-null values.</source>
          <target state="translated">パラメータには常にサイファースイートとプロトコルの配列が NULL 以外の値に設定されます。</target>
        </trans-unit>
        <trans-unit id="fbc871c3368e0f342532a2f5e48a852376491cab" translate="yes" xml:space="preserve">
          <source>The parent &lt;code&gt;ClassLoader&lt;/code&gt;</source>
          <target state="translated">親 &lt;code&gt;ClassLoader&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e0f70c146a15a9633f15da82c69e002a0f572e9c" translate="yes" xml:space="preserve">
          <source>The parent &lt;code&gt;TIFFTag&lt;/code&gt; of this &lt;code&gt;TIFFDiectory&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">The parent &lt;code&gt;TIFFTag&lt;/code&gt; of this &lt;code&gt;TIFFDiectory&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d74755cef612aee13f4b446f05e5c5a94e3a7a37" translate="yes" xml:space="preserve">
          <source>The parent Preferences node whose child was added or removed</source>
          <target state="translated">子が追加または削除された親環境設定ノード</target>
        </trans-unit>
        <trans-unit id="33ac4d46f58c647e6c28b3a88eaca5814b56ebef" translate="yes" xml:space="preserve">
          <source>The parent XML reader, or null if none is set.</source>
          <target state="translated">親XMLリーダー、または設定されていない場合はnull。</target>
        </trans-unit>
        <trans-unit id="cd9fa36300939772a8d4ba38942d9a6d934d8ad7" translate="yes" xml:space="preserve">
          <source>The parent bundle of this bundle.</source>
          <target state="translated">このバンドルの親バンドル。</target>
        </trans-unit>
        <trans-unit id="e7f2fe8682b735add36e45bdef4d5db06770add9" translate="yes" xml:space="preserve">
          <source>The parent bundle of this bundle. The parent bundle is searched by &lt;a href=&quot;#getObject(java.lang.String)&quot;&gt;&lt;code&gt;getObject&lt;/code&gt;&lt;/a&gt; when this bundle does not contain a particular resource.</source>
          <target state="translated">The parent bundle of this bundle. The parent bundle is searched by &lt;a href=&quot;#getObject(java.lang.String)&quot;&gt; &lt;code&gt;getObject&lt;/code&gt; &lt;/a&gt; when this bundle does not contain a particular resource.</target>
        </trans-unit>
        <trans-unit id="f994dff1510a6e8c2918e9b6d01ec794ebf2150e" translate="yes" xml:space="preserve">
          <source>The parent bundle of this bundle. The parent bundle is searched by &lt;a href=&quot;resourcebundle#getObject-java.lang.String-&quot;&gt;&lt;code&gt;getObject&lt;/code&gt;&lt;/a&gt; when this bundle does not contain a particular resource.</source>
          <target state="translated">このバンドルの親バンドル。このバンドルに特定のリソースが含まれていない場合、親バンドルは&lt;a href=&quot;resourcebundle#getObject-java.lang.String-&quot;&gt; &lt;code&gt;getObject&lt;/code&gt; &lt;/a&gt;によって検索されます。</target>
        </trans-unit>
        <trans-unit id="1a8a8c799fe8db426e27940a42162ee878964a8c" translate="yes" xml:space="preserve">
          <source>The parent filter, or null if none has been set.</source>
          <target state="translated">親フィルタ、あるいは設定されていない場合は null。</target>
        </trans-unit>
        <trans-unit id="2ad67599d600504152ce7c1281d25a4bda96e309" translate="yes" xml:space="preserve">
          <source>The parent of this Raster, or null.</source>
          <target state="translated">このラスタの親、またはnull。</target>
        </trans-unit>
        <trans-unit id="6ead187d94bbfc9668d1eb5e36e9dd0eef0b1804" translate="yes" xml:space="preserve">
          <source>The parent of this node.</source>
          <target state="translated">このノードの親。</target>
        </trans-unit>
        <trans-unit id="cc6d14ed40ff1babb894dcdc578652bb681cdd1e" translate="yes" xml:space="preserve">
          <source>The parent of this node. All nodes, except &lt;code&gt;Attr&lt;/code&gt;, &lt;code&gt;Document&lt;/code&gt;, &lt;code&gt;DocumentFragment&lt;/code&gt;, &lt;code&gt;Entity&lt;/code&gt;, and &lt;code&gt;Notation&lt;/code&gt; may have a parent. However, if a node has just been created and not yet added to the tree, or if it has been removed from the tree, this is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">The parent of this node. All nodes, except &lt;code&gt;Attr&lt;/code&gt; , &lt;code&gt;Document&lt;/code&gt; , &lt;code&gt;DocumentFragment&lt;/code&gt; , &lt;code&gt;Entity&lt;/code&gt; , and &lt;code&gt;Notation&lt;/code&gt; may have a parent. However, if a node has just been created and not yet added to the tree, or if it has been removed from the tree, this is &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33e9e67cecfddb7bcbfe15f096f52a88a0f4abac" translate="yes" xml:space="preserve">
          <source>The parent of this path object consists of this path's root component, if any, and each element in the path except for the &lt;em&gt;farthest&lt;/em&gt; from the root in the directory hierarchy. This method does not access the file system; the path or its parent may not exist. Furthermore, this method does not eliminate special names such as &quot;.&quot; and &quot;..&quot; that may be used in some implementations. On UNIX for example, the parent of &quot;&lt;code&gt;/a/b/c&lt;/code&gt;&quot; is &quot;&lt;code&gt;/a/b&lt;/code&gt;&quot;, and the parent of &lt;code&gt;&quot;x/y/.&lt;/code&gt;&quot; is &quot;&lt;code&gt;x/y&lt;/code&gt;&quot;. This method may be used with the &lt;a href=&quot;#normalize()&quot;&gt;&lt;code&gt;normalize&lt;/code&gt;&lt;/a&gt; method, to eliminate redundant names, for cases where &lt;em&gt;shell-like&lt;/em&gt; navigation is required.</source>
          <target state="translated">The parent of this path object consists of this path's root component, if any, and each element in the path except for the &lt;em&gt;farthest&lt;/em&gt; from the root in the directory hierarchy. This method does not access the file system; the path or its parent may not exist. Furthermore, this method does not eliminate special names such as &quot;.&quot; and &quot;..&quot; that may be used in some implementations. On UNIX for example, the parent of &quot; &lt;code&gt;/a/b/c&lt;/code&gt; &quot; is &quot; &lt;code&gt;/a/b&lt;/code&gt; &quot;, and the parent of &lt;code&gt;&quot;x/y/.&lt;/code&gt; &quot; is &quot; &lt;code&gt;x/y&lt;/code&gt; &quot;. This method may be used with the &lt;a href=&quot;#normalize()&quot;&gt; &lt;code&gt;normalize&lt;/code&gt; &lt;/a&gt; method, to eliminate redundant names, for cases where &lt;em&gt;shell-like&lt;/em&gt; navigation is required.</target>
        </trans-unit>
        <trans-unit id="3ecda3b1f4f94be292091c923d129f7d53c68915" translate="yes" xml:space="preserve">
          <source>The parent of this path object consists of this path's root component, if any, and each element in the path except for the &lt;em&gt;farthest&lt;/em&gt; from the root in the directory hierarchy. This method does not access the file system; the path or its parent may not exist. Furthermore, this method does not eliminate special names such as &quot;.&quot; and &quot;..&quot; that may be used in some implementations. On UNIX for example, the parent of &quot;&lt;code&gt;/a/b/c&lt;/code&gt;&quot; is &quot;&lt;code&gt;/a/b&lt;/code&gt;&quot;, and the parent of &lt;code&gt;&quot;x/y/.&lt;/code&gt;&quot; is &quot;&lt;code&gt;x/y&lt;/code&gt;&quot;. This method may be used with the &lt;a href=&quot;path#normalize--&quot;&gt;&lt;code&gt;normalize&lt;/code&gt;&lt;/a&gt; method, to eliminate redundant names, for cases where &lt;em&gt;shell-like&lt;/em&gt; navigation is required.</source>
          <target state="translated">このパスオブジェクトの親は、このパスのルートコンポーネント（存在する場合）と、ディレクトリ階層内のルートから&lt;em&gt;最も遠いもの&lt;/em&gt;を除くパスの各要素で構成されます。このメソッドはファイルシステムにアクセスしません。パスまたはその親が存在しない可能性があります。さらに、この方法では、「。」などの特殊な名前は削除されません。および「..」は、一部の実装で使用される場合があります。たとえばUNIXでは、「 &lt;code&gt;/a/b/c&lt;/code&gt; 」の親は「 &lt;code&gt;/a/b&lt;/code&gt; 」であり、 &lt;code&gt;&quot;x/y/.&lt;/code&gt; 」の親は「 &lt;code&gt;x/y&lt;/code&gt; 」です。このメソッドは、&lt;em&gt;シェルのような&lt;/em&gt;ナビゲーションが必要&lt;em&gt;な&lt;/em&gt;場合に、冗長な名前を排除するために、&lt;a href=&quot;path#normalize--&quot;&gt; &lt;code&gt;normalize&lt;/code&gt; &lt;/a&gt;メソッドと一緒に使用できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8eec86ed61bb41b453fe46f696b36fc01364efd8" translate="yes" xml:space="preserve">
          <source>The parentX, parentY, width and height parameters form a Rectangle in this Raster's coordinate space, indicating the area of pixels to be shared. An error will be thrown if this Rectangle is not contained with the bounds of the current Raster.</source>
          <target state="translated">parentX,parentY,width,height パラメータは、このラスタの座標空間内で矩形を形成し、共有するピクセルの領域を示します。この矩形が現在のラスターの境界に含まれていない場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="a015d5afd091b8ea8039b136a7b37b297cf71397" translate="yes" xml:space="preserve">
          <source>The parentX, parentY, width and height parameters form a Rectangle in this WritableRaster's coordinate space, indicating the area of pixels to be shared. An error will be thrown if this Rectangle is not contained with the bounds of the current WritableRaster.</source>
          <target state="translated">parentX,parentY,width,height パラメータは、この WritableRaster の座標空間内で矩形を形成し、共有するピクセルの領域を示します。このRectangleが現在のWritableRasterの境界に含まれていない場合、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="a34ccef159a0d71e1f63c70bb6fe8aedb77a7a54" translate="yes" xml:space="preserve">
          <source>The parsed value. Passing an integer that corresponds to a known name (e.g., 700) will return the associated name (e.g., &lt;code&gt;CONFIG&lt;/code&gt;). Passing an integer that does not (e.g., 1) will return a new level name initialized to that value.</source>
          <target state="translated">解析された値。既知の名前（700など）に対応する整数を渡すと、関連付けられた名前（ &lt;code&gt;CONFIG&lt;/code&gt; など）が返されます。ない整数（例：1）を渡すと、その値に初期化された新しいレベル名が返されます。</target>
        </trans-unit>
        <trans-unit id="c80c4671a6882e49c3c95f5d8d0a916dc52dfeed" translate="yes" xml:space="preserve">
          <source>The parser drives the ParserCallback, which is provided by HTMLDocument. To change the callback, subclass HTMLDocument and reimplement the createDefaultDocument method to return document that produces a different reader. The reader controls how the document is structured. Although the Document provides HTML support by default, there is nothing preventing support of non-HTML tags that result in alternative element structures.</source>
          <target state="translated">パーサは HTMLDocument によって提供される ParserCallback を駆動します。コールバックを変更するには、HTMLDocument をサブクラス化し、異なるリーダーを生成するドキュメントを返す createDefaultDocument メソッドを再実装します。リーダーは、ドキュメントがどのように構造化されるかを制御します。Document はデフォルトで HTML をサポートしていますが、代替の要素構造をもたらす非 HTML タグのサポートを妨げるものは何もありません。</target>
        </trans-unit>
        <trans-unit id="0958e538d194ee775ec5a4fae0f7ef159a0e04df" translate="yes" xml:space="preserve">
          <source>The parser for a variable width value such as this normally behaves greedily, accepting as many digits as possible. This behavior can be affected by 'adjacent value parsing'. See &lt;a href=&quot;#appendValue(java.time.temporal.TemporalField,int)&quot;&gt;&lt;code&gt;appendValue(java.time.temporal.TemporalField, int)&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">The parser for a variable width value such as this normally behaves greedily, accepting as many digits as possible. This behavior can be affected by 'adjacent value parsing'. See &lt;a href=&quot;#appendValue(java.time.temporal.TemporalField,int)&quot;&gt; &lt;code&gt;appendValue(java.time.temporal.TemporalField, int)&lt;/code&gt; &lt;/a&gt; for full details.</target>
        </trans-unit>
        <trans-unit id="21ff5f3cdc66539833c1fbafaf60db7a54685bb2" translate="yes" xml:space="preserve">
          <source>The parser for a variable width value such as this normally behaves greedily, accepting as many digits as possible. This behavior can be affected by 'adjacent value parsing'. See &lt;a href=&quot;datetimeformatterbuilder#appendValue-java.time.temporal.TemporalField-int-&quot;&gt;&lt;code&gt;appendValue(java.time.temporal.TemporalField, int)&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">このような可変幅の値のパーサーは、通常、貪欲に動作し、できるだけ多くの桁を受け入れます。この動作は、「隣接する値の解析」の影響を受ける可能性があります。詳細については、&lt;a href=&quot;datetimeformatterbuilder#appendValue-java.time.temporal.TemporalField-int-&quot;&gt; &lt;code&gt;appendValue(java.time.temporal.TemporalField, int)&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="0c09eecf6e6b5152ce4eaa50a2e9cb6e5669cb3d" translate="yes" xml:space="preserve">
          <source>The parser for a variable width value such as this normally behaves greedily, requiring one digit, but accepting as many digits as possible. This behavior can be affected by 'adjacent value parsing'. See &lt;a href=&quot;#appendValue(java.time.temporal.TemporalField,int)&quot;&gt;&lt;code&gt;appendValue(java.time.temporal.TemporalField, int)&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">The parser for a variable width value such as this normally behaves greedily, requiring one digit, but accepting as many digits as possible. This behavior can be affected by 'adjacent value parsing'. See &lt;a href=&quot;#appendValue(java.time.temporal.TemporalField,int)&quot;&gt; &lt;code&gt;appendValue(java.time.temporal.TemporalField, int)&lt;/code&gt; &lt;/a&gt; for full details.</target>
        </trans-unit>
        <trans-unit id="9f6b73693478a0455ddabfd20c4e13a83419854e" translate="yes" xml:space="preserve">
          <source>The parser for a variable width value such as this normally behaves greedily, requiring one digit, but accepting as many digits as possible. This behavior can be affected by 'adjacent value parsing'. See &lt;a href=&quot;datetimeformatterbuilder#appendValue-java.time.temporal.TemporalField-int-&quot;&gt;&lt;code&gt;appendValue(java.time.temporal.TemporalField, int)&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">このような可変幅の値のパーサーは通常、貪欲に動作し、1桁を必要としますが、できるだけ多くの桁を受け入れます。この動作は、「隣接する値の解析」の影響を受ける可能性があります。詳細については、&lt;a href=&quot;datetimeformatterbuilder#appendValue-java.time.temporal.TemporalField-int-&quot;&gt; &lt;code&gt;appendValue(java.time.temporal.TemporalField, int)&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2b2566f1d573d8a0c323846050643ae43f48e34c" translate="yes" xml:space="preserve">
          <source>The parser is replaceable. The default parser is the Hot Java parser which is DTD based. A different DTD can be used, or an entirely different parser can be used. To change the parser, reimplement the getParser method. The default parser is dynamically loaded when first asked for, so the class files will never be loaded if an alternative parser is used. The default parser is in a separate package called parser below this package.</source>
          <target state="translated">パーサは交換可能です。デフォルトのパーサーは、DTD ベースの Hot Java パーサーです。別のDTDを使用するか、全く別のパーサを使用することができます。パーサを変更するには、getParserメソッドを再実装してください。デフォルトのパーサは、最初に要求されたときに動的にロードされますので、代替のパーサが使用されてもクラスファイルはロードされません。デフォルトのパーサは、このパッケージの下にある parser という別のパッケージにあります。</target>
        </trans-unit>
        <trans-unit id="1db896e88ea1524b86eec66607087c03e131c1fe" translate="yes" xml:space="preserve">
          <source>The parser treats \r and \r\n as \n. Newlines after starttags and before end tags are ignored just as specified in the SGML/HTML specification.</source>
          <target state="translated">パーサーは、「\r」と「\r\r\n」を「\n」として扱います。starttagsの後とendタグの前の改行は、SGML/HTML仕様と同様に無視されます。</target>
        </trans-unit>
        <trans-unit id="f79566e8db3ace95b06a78c81cfb5c3a069df4ea" translate="yes" xml:space="preserve">
          <source>The parser will call this method after each &lt;code&gt;Element&lt;/code&gt; start tag has been scanned, but before the remainder of the &lt;code&gt;Element&lt;/code&gt; is processed.</source>
          <target state="translated">The parser will call this method after each &lt;code&gt;Element&lt;/code&gt; start tag has been scanned, but before the remainder of the &lt;code&gt;Element&lt;/code&gt; is processed.</target>
        </trans-unit>
        <trans-unit id="89bb0dda1c5e645ee858d42db8076dbafa59d5c5" translate="yes" xml:space="preserve">
          <source>The parser will call this method after each &lt;code&gt;Element&lt;/code&gt; start tag has been scanned, but before the remainder of the &lt;code&gt;Element&lt;/code&gt; is processed. The intent is to allow the element, including any children, to be efficiently skipped. Note that only element nodes are passed to the &lt;code&gt;startElement&lt;/code&gt; function.</source>
          <target state="translated">The parser will call this method after each &lt;code&gt;Element&lt;/code&gt; start tag has been scanned, but before the remainder of the &lt;code&gt;Element&lt;/code&gt; is processed. The intent is to allow the element, including any children, to be efficiently skipped. Note that only element nodes are passed to the &lt;code&gt;startElement&lt;/code&gt; function.</target>
        </trans-unit>
        <trans-unit id="25bb83472b4f57122efa4cb36da17a7150c525d7" translate="yes" xml:space="preserve">
          <source>The parser will call this method before opening any external entity except the top-level document entity. Such entities include the external DTD subset and external parameter entities referenced within the DTD (in either case, only if the parser reads external parameter entities), and external general entities referenced within the document element (if the parser reads external general entities). The application may request that the parser locate the entity itself, that it use an alternative URI, or that it use data provided by the application (as a character or byte input stream).</source>
          <target state="translated">パーサは、トップレベルのドキュメントエンティティ以外の外部エンティティを開く前に、このメソッドを呼び出します。このようなエンティティには、外部 DTD サブセットと DTD 内で参照される外部パラメータエンティティ(いずれの場合も、パーサが外部パラメータエンティティを読み込む場合のみ)、およびドキュメント要素内で参照される外部一般エンティティ(パーサが外部一般エンティティを読み込む場合)が含まれます。アプリケーションは、パーサがエンティティ自体を検索するように要求したり、別の URI を使用したり、アプリケーションから提供されたデータ(文字またはバイト入力ストリーム)を使用するように要求したりすることができます。</target>
        </trans-unit>
        <trans-unit id="0ee7fce3ce38754400a5fb2ffa707a2159a2a86a" translate="yes" xml:space="preserve">
          <source>The parsing and conversion to a path object is inherently implementation dependent. In the simplest case, the path string is rejected, and &lt;a href=&quot;invalidpathexception&quot;&gt;&lt;code&gt;InvalidPathException&lt;/code&gt;&lt;/a&gt; thrown, if the path string contains characters that cannot be converted to characters that are &lt;em&gt;legal&lt;/em&gt; to the file store. For example, on UNIX systems, the NUL (\u0000) character is not allowed to be present in a path. An implementation may choose to reject path strings that contain names that are longer than those allowed by any file store, and where an implementation supports a complex path syntax, it may choose to reject path strings that are &lt;em&gt;badly formed&lt;/em&gt;.</source>
          <target state="translated">構文解析とパスオブジェクトへの変換は、本質的に実装に依存します。最も単純なケースでは、パス文字列が拒否され、パス文字列にファイルストアで&lt;em&gt;有効な&lt;/em&gt;文字に変換できない文字が含まれていると、&lt;a href=&quot;invalidpathexception&quot;&gt; &lt;code&gt;InvalidPathException&lt;/code&gt; が&lt;/a&gt;スローされます。たとえば、UNIXシステムでは、NUL（\ u0000）文字をパスに含めることはできません。実装は任意のファイルストアによって許可されたものより長い名を含むパス文字列を拒否することを選択することができ、実装が複雑なパス構文をサポートしている、それがされているパス文字列拒否することもできます&lt;em&gt;ひどく形成を&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="58366cc3fc3392a36ac4de8d54ae2345f03badf0" translate="yes" xml:space="preserve">
          <source>The parsing is done field by field so that the following holds for any lexically correct String x:</source>
          <target state="translated">構文解析はフィールドごとに行われるので、字句的に正しい文字列 x に対しては以下のようになります。</target>
        </trans-unit>
        <trans-unit id="70a1b9684ff0e071a82a4339efad58504e82add3" translate="yes" xml:space="preserve">
          <source>The part of the destination lying inside of the source is composited over the source and replaces the destination (Porter-Duff Destination Atop Source rule).</source>
          <target state="translated">ソースの内側に横たわっているデスティネーションの部分がソースの上に合成され、デスティネーションに置き換わります(ポーターダフデスティネーション・アトープ・ソース・ルール)。</target>
        </trans-unit>
        <trans-unit id="1da589b57f7260e6e37c7640ceeaac089943225b" translate="yes" xml:space="preserve">
          <source>The part of the destination lying inside of the source replaces the destination (Porter-Duff Destination In Source rule).</source>
          <target state="translated">ソースの内側に横たわっているデスティネーションの部分がデスティネーションを置き換えます(ポーターダフデスティネーションインソースルール)。</target>
        </trans-unit>
        <trans-unit id="dcfe0a22ae97cb137aea5a3bbe6c1a59738245d0" translate="yes" xml:space="preserve">
          <source>The part of the destination lying outside of the source replaces the destination (Porter-Duff Destination Held Out By Source rule).</source>
          <target state="translated">ソースの外側にあるデスティネーションの部分がデスティネーションを置き換えます(Porter-Duff Destination Held Out By Sourceルール)。</target>
        </trans-unit>
        <trans-unit id="0514c11ef515545f2db88b599f4ee46a343c496c" translate="yes" xml:space="preserve">
          <source>The part of the link name that has not been resolved. It is a composite name. It can be null, which means the link remaining name field has not been set.</source>
          <target state="translated">リンク名の中で解決していない部分。これは合成名です。nullにすることもできますが、これはリンク残名フィールドが設定されていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="47baf3ca1b3134d4434d6cb4c6eec321ec81a768" translate="yes" xml:space="preserve">
          <source>The part of the link name that was resolved successfully. It is a composite name. It can be null, which means the link resolved name field has not been set.</source>
          <target state="translated">リンク名の解決に成功した部分。これは合成名です。これは、リンク解決された名前フィールドが設定されていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="32726d1c2037f095bb11ef491521f5e2b8d6ac95" translate="yes" xml:space="preserve">
          <source>The part of the name that has not been resolved. It is a composite name. It can be null, which means the remaining name field has not been set.</source>
          <target state="translated">名前の中で解決していない部分。これは合成名です。nullにすることもできますが、これは残りの名前フィールドが設定されていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="ec9433b1d02006377972147afe60dd9073ccb8e0" translate="yes" xml:space="preserve">
          <source>The part of the name that was resolved successfully. It is a composite name. It can be null, which means the resolved name field has not been set.</source>
          <target state="translated">名前の解決に成功した部分。これは合成名です。nullにすることもできますが、これは解決された名前フィールドが設定されていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="6d1c09fb04aadbb62a7a9fde5b33cff4c271e44c" translate="yes" xml:space="preserve">
          <source>The part of the source lying inside of the destination is composited onto the destination (Porter-Duff Source Atop Destination rule).</source>
          <target state="translated">デスティネーションの内側に横たわっているソースの部分をデスティネーションに合成します(Porter-Duff Source Atop Destinationルール)。</target>
        </trans-unit>
        <trans-unit id="40baec417b1738d9f463750ccea01809d5a85bba" translate="yes" xml:space="preserve">
          <source>The part of the source lying inside of the destination replaces the destination (Porter-Duff Source In Destination rule).</source>
          <target state="translated">デスティネーションの内側に横たわっているソースの部分がデスティネーションに置き換わる(Porter-Duff Source In Destinationルール)。</target>
        </trans-unit>
        <trans-unit id="0edd66952700232dfab5dd336b9d5a21df59003b" translate="yes" xml:space="preserve">
          <source>The part of the source lying outside of the destination replaces the destination (Porter-Duff Source Held Out By Destination rule).</source>
          <target state="translated">デスティネーションの外側にあるソースの部分がデスティネーションに置き換わります(Porter-Duff Source Held Out By Destinationルール)。</target>
        </trans-unit>
        <trans-unit id="76bc3c459fb6e604ce60cb4e6b1d79dd10a65b80" translate="yes" xml:space="preserve">
          <source>The part of the source that lies outside of the destination is combined with the part of the destination that lies outside of the source (Porter-Duff Source Xor Destination rule).</source>
          <target state="translated">宛先の外側にあるソースの部分は、ソースの外側にある宛先の部分と結合されます(ポーターダフソースXor宛先ルール)。</target>
        </trans-unit>
        <trans-unit id="a0ccdd4edd6b9daa6601aef32f68b66801d49f2d" translate="yes" xml:space="preserve">
          <source>The particular &lt;code&gt;ImageReader&lt;/code&gt; implementation may choose how often to provide updates. Each update specifies that a given region of the image has been updated since the last update. A region is described by its spatial bounding box (&lt;code&gt;minX&lt;/code&gt;, &lt;code&gt;minY&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, and &lt;code&gt;height&lt;/code&gt;); X and Y subsampling factors (&lt;code&gt;periodX&lt;/code&gt; and &lt;code&gt;periodY&lt;/code&gt;); and a set of updated bands (&lt;code&gt;bands&lt;/code&gt;). For example, the update:</source>
          <target state="translated">特定の &lt;code&gt;ImageReader&lt;/code&gt; 実装では、更新を提供する頻度を選択できます。各更新は、画像の特定の領域が最後の更新以降に更新されたことを示します。領域は、その空間境界ボックス（ &lt;code&gt;minX&lt;/code&gt; 、 &lt;code&gt;minY&lt;/code&gt; 、 &lt;code&gt;width&lt;/code&gt; 、および &lt;code&gt;height&lt;/code&gt; ）によって記述されます。 XおよびYサブサンプリング係数（ &lt;code&gt;periodX&lt;/code&gt; および &lt;code&gt;periodY&lt;/code&gt; ）;更新されたバンドのセット（ &lt;code&gt;bands&lt;/code&gt; ）。たとえば、更新：</target>
        </trans-unit>
        <trans-unit id="2d05bd905575708b902adb79797980be7e49876a" translate="yes" xml:space="preserve">
          <source>The particular compression scheme to be used can be specified by using the &lt;code&gt;setCompressionType()&lt;/code&gt; method with the appropriate type string. The compression scheme specified will be honored if and only if it is compatible with the type of image being written. If the specified compression scheme is not compatible with the type of image being written then the &lt;code&gt;IOException&lt;/code&gt; will be thrown by the BMP image writer. If the compression type is not set explicitly then &lt;code&gt;getCompressionType()&lt;/code&gt; will return &lt;code&gt;null&lt;/code&gt;. In this case the BMP image writer will select a compression type that supports encoding of the given image without loss of the color resolution.</source>
          <target state="translated">使用する特定の圧縮方式は、適切なタイプ文字列を指定した &lt;code&gt;setCompressionType()&lt;/code&gt; メソッドを使用して指定できます。指定された圧縮スキームは、書き込まれるイメージのタイプと互換性がある場合にのみ適用されます。指定された圧縮方式が書き込まれるイメージのタイプと互換性がない &lt;code&gt;IOException&lt;/code&gt; 、BMPイメージライターによってIOExceptionがスローされます。圧縮タイプが明示的に設定されていない場合、 &lt;code&gt;getCompressionType()&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; を返します。この場合、BMP画像ライターは、カラー解像度を失うことなく、特定の画像のエンコードをサポートする圧縮タイプを選択します。</target>
        </trans-unit>
        <trans-unit id="d678e3b47db28315a51c9392f3290d72efd52628" translate="yes" xml:space="preserve">
          <source>The passed in &lt;code&gt;Graphics&lt;/code&gt; object might have a transform other than the identify transform installed on it. In this case, you might get unexpected results if you cumulatively apply another transform.</source>
          <target state="translated">渡された &lt;code&gt;Graphics&lt;/code&gt; オブジェクトには、identifyトランスフォーム以外のトランスフォームがインストールされている可能性があります。この場合、別の変換を累積的に適用すると、予期しない結果が生じる可能性があります。</target>
        </trans-unit>
        <trans-unit id="e8241d354a88f83dd6e313eef3dc68fb3e944175" translate="yes" xml:space="preserve">
          <source>The password can be viewed as some kind of raw key material, from which the encryption mechanism that uses it derives a cryptographic key.</source>
          <target state="translated">パスワードは、それを使用する暗号化機構が暗号鍵を導出する、ある種の生の鍵材料として見ることができます。</target>
        </trans-unit>
        <trans-unit id="820e2577f359bf6935013e53ac3bf2a5b32541fa" translate="yes" xml:space="preserve">
          <source>The past notifications sending on/off flag value.</source>
          <target state="translated">過去の通知送信オンオフフラグの値。</target>
        </trans-unit>
        <trans-unit id="2dff58ea6e8968b95e225bc5373e375d5474c33c" translate="yes" xml:space="preserve">
          <source>The path</source>
          <target state="translated">道のり</target>
        </trans-unit>
        <trans-unit id="34dc364ae2dbeed42a8b0e59b6b7f50e29642280" translate="yes" xml:space="preserve">
          <source>The path component of a URI, if defined, only contains the slash character (&lt;code&gt;'/'&lt;/code&gt;), the commercial-at character (&lt;code&gt;'@'&lt;/code&gt;), and characters in the</source>
          <target state="translated">URIのパスコンポーネントは、定義されている場合、スラッシュ文字（ &lt;code&gt;'/'&lt;/code&gt; ）、コマーシャルアット文字（ &lt;code&gt;'@'&lt;/code&gt; ）、および</target>
        </trans-unit>
        <trans-unit id="ce374624d095692df597972be967a92da604ae1f" translate="yes" xml:space="preserve">
          <source>The path component of a hierarchical URI is itself said to be absolute if it begins with a slash character (&lt;code&gt;'/'&lt;/code&gt;); otherwise it is relative. The path of a hierarchical URI that is either absolute or specifies an authority is always absolute.</source>
          <target state="translated">階層URIのパスコンポーネントは、スラッシュ文字（ &lt;code&gt;'/'&lt;/code&gt; ）で始まる場合、それ自体が絶対パスと呼ばれます。それ以外の場合は相対的です。絶対であるか、または権限を指定する階層URIのパスは常に絶対です。</target>
        </trans-unit>
        <trans-unit id="984a1006edcb13d7a44e0aa4a2152ea60b272a92" translate="yes" xml:space="preserve">
          <source>The path component of this URI, or &lt;code&gt;null&lt;/code&gt; if the path is undefined</source>
          <target state="translated">このURIのパスコンポーネント。パスが定義されていない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a70f79521a69bb3942223fa682e3262fee7ae26f" translate="yes" xml:space="preserve">
          <source>The path length constraint has been violated.</source>
          <target state="translated">パス長制約に違反しています。</target>
        </trans-unit>
        <trans-unit id="5c2d067f7af76e2b06945d71f3ec990142c7f99d" translate="yes" xml:space="preserve">
          <source>The pathname string of the parent directory named by this abstract pathname, or &lt;code&gt;null&lt;/code&gt; if this pathname does not name a parent</source>
          <target state="translated">この抽象パス名で指定された親ディレクトリのパス名文字列、またはこのパス名が親を指定していない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="36815dfa099a2085beea9c4219c1336efe128f00" translate="yes" xml:space="preserve">
          <source>The paths returned from &lt;code&gt;getSelectionPaths&lt;/code&gt; are in the same order as those supplied to this method.</source>
          <target state="translated">&lt;code&gt;getSelectionPaths&lt;/code&gt; から返されるパスは、このメソッドに提供されるパスと同じ順序です。</target>
        </trans-unit>
        <trans-unit id="44bfbe0740e4812ab2ebef01403857fd4763cbc0" translate="yes" xml:space="preserve">
          <source>The pattern for which this matcher was created</source>
          <target state="translated">このマッチャーが作成されたパターン</target>
        </trans-unit>
        <trans-unit id="df695ca495032754cb1e1d72664b6f7e2ce057b1" translate="yes" xml:space="preserve">
          <source>The pen width, measured perpendicularly to the pen trajectory.</source>
          <target state="translated">ペンの幅は、ペンの軌跡に対して垂直に測定されます。</target>
        </trans-unit>
        <trans-unit id="228163f26ece9e76769fe19d43640bb8467f3d60" translate="yes" xml:space="preserve">
          <source>The period added is a multiple of this unit. For example, this method could be used to add &quot;3 days&quot; to a date by calling this method on the instance representing &quot;days&quot;, passing the date and the period &quot;3&quot;. The period to be added may be negative, which is equivalent to subtraction.</source>
          <target state="translated">追加される期間は、この単位の倍数です。例えば、&quot;days &quot;を表すインスタンス上でこのメソッドを呼び出し、日付と期間 &quot;3 &quot;を渡すことで、日付に &quot;3日 &quot;を追加することができます。追加される期間は負の値であってもよく、これは減算と同じです。</target>
        </trans-unit>
        <trans-unit id="9fdc88c8af0c7b558ba1c4c23f7e65140ebfa762" translate="yes" xml:space="preserve">
          <source>The period character &lt;code&gt;'.'&lt;/code&gt; (&lt;code&gt;'\u002e'&lt;/code&gt;, &lt;small&gt;FULL STOP&lt;/small&gt;),</source>
          <target state="translated">ピリオド文字 &lt;code&gt;'.'&lt;/code&gt; （ &lt;code&gt;'\u002e'&lt;/code&gt; 、&lt;small&gt;完全停止&lt;/small&gt;）、</target>
        </trans-unit>
        <trans-unit id="8a43a4749a0092ff01f681602eba4d1752639395" translate="yes" xml:space="preserve">
          <source>The period is defined by the chronology. It controls the supported units and restricts addition/subtraction to &lt;code&gt;ChronoLocalDate&lt;/code&gt; instances of the same chronology.</source>
          <target state="translated">期間は年代順に定義されています。サポートされている単位を制御し、同じ &lt;code&gt;ChronoLocalDate&lt;/code&gt; インスタンスへの加算/減算を制限します。</target>
        </trans-unit>
        <trans-unit id="1a70990b9e6545d7eddd1d2d67af5b8ba6080247" translate="yes" xml:space="preserve">
          <source>The period is modeled as a directed amount of time, meaning that individual parts of the period may be negative.</source>
          <target state="translated">期間は、期間の個々の部分が負の値になる可能性があることを意味し、時間が指示された量としてモデル化されています。</target>
        </trans-unit>
        <trans-unit id="582b9e9609272bc13dc68aa8a72ae7a31ac8a03b" translate="yes" xml:space="preserve">
          <source>The permission for which the &lt;code&gt;SecurityManager&lt;/code&gt; will check when code that is running an application with a &lt;code&gt;SecurityManager&lt;/code&gt; enabled, calls the &lt;code&gt;DriverManager.deregisterDriver&lt;/code&gt; method, &lt;code&gt;DriverManager.setLogWriter&lt;/code&gt; method, &lt;code&gt;DriverManager.setLogStream&lt;/code&gt; (deprecated) method, &lt;code&gt;SyncFactory.setJNDIContext&lt;/code&gt; method, &lt;code&gt;SyncFactory.setLogger&lt;/code&gt; method, &lt;code&gt;Connection.setNetworkTimeout&lt;/code&gt; method, or the &lt;code&gt;Connection.abort&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;SecurityManager&lt;/code&gt; が有効になっているアプリケーションを実行しているコードが &lt;code&gt;DriverManager.deregisterDriver&lt;/code&gt; メソッド、 &lt;code&gt;DriverManager.setLogWriter&lt;/code&gt; メソッド、 &lt;code&gt;DriverManager.setLogStream&lt;/code&gt; （非推奨）メソッド、 &lt;code&gt;SyncFactory.setJNDIContext&lt;/code&gt; メソッド、 &lt;code&gt;SyncFactory.setLogger&lt;/code&gt; メソッドを呼び出すときに、 &lt;code&gt;SecurityManager&lt;/code&gt; がチェックする権限。 &lt;code&gt;Connection.setNetworkTimeout&lt;/code&gt; メソッド、または &lt;code&gt;Connection.abort&lt;/code&gt; メソッド。</target>
        </trans-unit>
        <trans-unit id="7596472c88903a656ba2e77a47db428db58c9b86" translate="yes" xml:space="preserve">
          <source>The permission for which the &lt;code&gt;SecurityManager&lt;/code&gt; will check when code that is running an application with a &lt;code&gt;SecurityManager&lt;/code&gt; enabled, calls the &lt;code&gt;DriverManager.deregisterDriver&lt;/code&gt; method, &lt;code&gt;DriverManager.setLogWriter&lt;/code&gt; method, &lt;code&gt;DriverManager.setLogStream&lt;/code&gt; (deprecated) method, &lt;code&gt;SyncFactory.setJNDIContext&lt;/code&gt; method, &lt;code&gt;SyncFactory.setLogger&lt;/code&gt; method, &lt;code&gt;Connection.setNetworkTimeout&lt;/code&gt; method, or the &lt;code&gt;Connection.abort&lt;/code&gt; method. If there is no &lt;code&gt;SQLPermission&lt;/code&gt; object, these methods throw a &lt;code&gt;java.lang.SecurityException&lt;/code&gt; as a runtime exception.</source>
          <target state="translated">&lt;code&gt;SecurityManager&lt;/code&gt; が有効になっているアプリケーションを実行しているコードが &lt;code&gt;DriverManager.deregisterDriver&lt;/code&gt; メソッド、 &lt;code&gt;DriverManager.setLogWriter&lt;/code&gt; メソッド、 &lt;code&gt;DriverManager.setLogStream&lt;/code&gt; （非推奨）メソッド、 &lt;code&gt;SyncFactory.setJNDIContext&lt;/code&gt; メソッド、 &lt;code&gt;SyncFactory.setLogger&lt;/code&gt; メソッドを呼び出すときに、 &lt;code&gt;SecurityManager&lt;/code&gt; がチェックする権限。 &lt;code&gt;Connection.setNetworkTimeout&lt;/code&gt; メソッド、または &lt;code&gt;Connection.abort&lt;/code&gt; メソッド。 &lt;code&gt;SQLPermission&lt;/code&gt; オブジェクトがない場合、これらのメソッドは実行時例外として &lt;code&gt;java.lang.SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="905e0e83c9c4d3f7868b0477d055820ab11f5e8d" translate="yes" xml:space="preserve">
          <source>The permission returned may dependent upon the state of the connection. For example, the permission before connecting may be different from that after connecting. For example, an HTTP sever, say foo.com, may redirect the connection to a different host, say bar.com. Before connecting the permission returned by the connection will represent the permission needed to connect to foo.com, while the permission returned after connecting will be to bar.com.</source>
          <target state="translated">返されるパーミッションは接続の状態に依存している可能性があります。例えば、接続前のパーミッションと接続後のパーミッションは異なるかもしれません。例えば、HTTP サーバが foo.com のような場合、接続を別のホスト、例えば bar.com にリダイレクトするかもしれません。接続前のパーミッションは foo.com に接続するために必要なパーミッションを表し、 接続後のパーミッションは bar.com に接続するために必要なパーミッションを表します。</target>
        </trans-unit>
        <trans-unit id="9aec82e1b8e6d992b0690a908ac3aedc9b31e177" translate="yes" xml:space="preserve">
          <source>The permission which the SecurityManager will check when code that is running with a SecurityManager calls methods defined in the management interface for the Java platform.</source>
          <target state="translated">SecurityManagerで実行中のコードが、Javaプラットフォームの管理インタフェースで定義されたメソッドを呼び出すときに、SecurityManagerがチェックする権限。</target>
        </trans-unit>
        <trans-unit id="e5faa7a6949030f63d05138d5d40aa6ac04a730d" translate="yes" xml:space="preserve">
          <source>The permission which the SecurityManager will check when code that is running with a SecurityManager calls one of the logging control methods (such as Logger.setLevel).</source>
          <target state="translated">SecurityManager で実行中のコードがロギング制御メソッド(Logger.setLevel など)のいずれかを呼び出したときに SecurityManager がチェックするパーミッション。</target>
        </trans-unit>
        <trans-unit id="67f61541f09f163aad875955ec40973cb856f479" translate="yes" xml:space="preserve">
          <source>The permissions granted to this domain are dynamic, i.e. invoking the &lt;a href=&quot;#staticPermissionsOnly()&quot;&gt;&lt;code&gt;staticPermissionsOnly()&lt;/code&gt;&lt;/a&gt; method returns false. They include both the static permissions passed to this constructor, and any permissions granted to this domain by the current Policy at the time a permission is checked.</source>
          <target state="translated">このドメインに付与された権限は動的です。つまり、&lt;a href=&quot;#staticPermissionsOnly()&quot;&gt; &lt;code&gt;staticPermissionsOnly()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すとfalseが返されます。これらには、このコンストラクターに渡される静的アクセス許可と、アクセス許可がチェックされたときに現在のポリシーによってこのドメインに付与されたアクセス許可の両方が含まれます。</target>
        </trans-unit>
        <trans-unit id="c63c09e1919a0b385305981a2835a097860b9eda" translate="yes" xml:space="preserve">
          <source>The permissions granted to this domain are static, i.e. invoking the &lt;a href=&quot;#staticPermissionsOnly()&quot;&gt;&lt;code&gt;staticPermissionsOnly()&lt;/code&gt;&lt;/a&gt; method returns true. They contain only the ones passed to this constructor and the current Policy will not be consulted.</source>
          <target state="translated">このドメインに付与された権限は静的です。つまり、&lt;a href=&quot;#staticPermissionsOnly()&quot;&gt; &lt;code&gt;staticPermissionsOnly()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すとtrueが返されます。これらには、このコンストラクターに渡されたもののみが含まれ、現在のポリシーは参照されません。</target>
        </trans-unit>
        <trans-unit id="89058a6566fae0c8d5c5fdda2b2372f796569fb3" translate="yes" xml:space="preserve">
          <source>The physical connection is not closed until the connection pool manager calls the &lt;code&gt;PooledConnection&lt;/code&gt; method &lt;code&gt;close&lt;/code&gt;. This method is generally called to have an orderly shutdown of the server or if a fatal error has made the connection unusable.</source>
          <target state="translated">物理接続は、接続プールマネージャが &lt;code&gt;PooledConnection&lt;/code&gt; メソッド &lt;code&gt;close&lt;/code&gt; を呼び出すまで閉じられません。このメソッドは通常、サーバーを正常にシャットダウンするため、または致命的なエラーによって接続が使用できなくなった場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="63cef99a21c3ce784ef3880657559d49f21aea55" translate="yes" xml:space="preserve">
          <source>The pixel (0, 0) in the coordinate space of the graphics context corresponds to the origin of the splash screen native window bounds (see &lt;a href=&quot;#getBounds()&quot;&gt;&lt;code&gt;getBounds()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">グラフィックスコンテキストの座標空間のピクセル（0、0）は、スプラッシュ画面のネイティブウィンドウ境界の原点に対応します（&lt;a href=&quot;#getBounds()&quot;&gt; &lt;code&gt;getBounds()&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="500d2293e97237119e1983a5c3e9a605e180c0c9" translate="yes" xml:space="preserve">
          <source>The pixels of the image are delivered using one or more calls to the setPixels method.</source>
          <target state="translated">画像のピクセルは、1つ以上のsetPixelsメソッドの呼び出しを使用して配信されます。</target>
        </trans-unit>
        <trans-unit id="b32a76182c825641c5cc61b6489eb4335615b5b4" translate="yes" xml:space="preserve">
          <source>The pixels of the image are delivered using one or more calls to the setPixels method. Each call specifies the location and size of the rectangle of source pixels that are contained in the array of pixels. The specified ColorModel object should be used to convert the pixels into their corresponding color and alpha components. Pixel (m,n) is stored in the pixels array at index (n * scansize + m + off). The pixels delivered using this method are all stored as ints. this method are all stored as ints.</source>
          <target state="translated">画像のピクセルは、setPixelsメソッドへの1つ以上の呼び出しを使用して配信されます。それぞれの呼び出しは、ピクセルの配列に含まれるソースピクセルの矩形の位置とサイズを指定します。指定されたColorModelオブジェクトは、ピクセルを対応する色とアルファ成分に変換するために使用されなければなりません。ピクセル(m,n)は、インデックス(n*scansize+m+off)でピクセル配列に格納されます。このメソッドを使用して配信されたピクセルはすべて ints として格納されます。</target>
        </trans-unit>
        <trans-unit id="f611275393252bc802d72fdd641a2615171a85f6" translate="yes" xml:space="preserve">
          <source>The pixels will be delivered in (multiples of) complete scanlines at a time.</source>
          <target state="translated">ピクセルは、一度に(倍数の)完全なスキャンラインで配信されます。</target>
        </trans-unit>
        <trans-unit id="2fece7997ef4b9cf1e323d0a1efd50cb013153b0" translate="yes" xml:space="preserve">
          <source>The pixels will be delivered in a random order.</source>
          <target state="translated">画素はランダムに配信されます。</target>
        </trans-unit>
        <trans-unit id="cf16e6291c890f1d381931538f7295e2f5706d87" translate="yes" xml:space="preserve">
          <source>The pixels will be delivered in a random order. This tells the ImageConsumer not to use any optimizations that depend on the order of pixel delivery, which should be the default assumption in the absence of any call to the setHints method.</source>
          <target state="translated">ピクセルはランダムな順序で配信されます。これは、ピクセルの配信順序に依存する最適化を使用しないよう ImageConsumer に指示します。</target>
        </trans-unit>
        <trans-unit id="9c2099a9c74f962fd6a4d8576f2e1d315893b01f" translate="yes" xml:space="preserve">
          <source>The pixels will be delivered in a single pass.</source>
          <target state="translated">画素は1パスで配信されます。</target>
        </trans-unit>
        <trans-unit id="92bb6ee63ae68c3bc426e959c05f0f0b4310d5a1" translate="yes" xml:space="preserve">
          <source>The pixels will be delivered in a single pass. Each pixel will appear in only one call to any of the setPixels methods. An example of an image format which does not meet this criterion is a progressive JPEG image which defines pixels in multiple passes, each more refined than the previous.</source>
          <target state="translated">ピクセルは単一のパスで配信されます。各ピクセルは1回のsetPixelsメソッドの呼び出しだけで表示されます。この基準を満たさない画像フォーマットの例としては、複数のパスでピクセルを定義し、それぞれが前のパスよりも洗練されているプログレッシブJPEG画像があります。</target>
        </trans-unit>
        <trans-unit id="6310f53f396133fc271c197615afe20c6a96988b" translate="yes" xml:space="preserve">
          <source>The pixels will be delivered in top-down, left-to-right order.</source>
          <target state="translated">画素はトップダウン、左から右への順で配信されます。</target>
        </trans-unit>
        <trans-unit id="9d90b3b0c7f4fd76e2cdd5db2a7c785664e9f012" translate="yes" xml:space="preserve">
          <source>The placeholder parameters set with the &lt;code&gt;BaseRowSet&lt;/code&gt; setter methods are stored as objects in an internal &lt;code&gt;Hashtable&lt;/code&gt; object. Primitives are stored as their &lt;code&gt;Object&lt;/code&gt; type. For example, &lt;code&gt;byte&lt;/code&gt; is stored as &lt;code&gt;Byte&lt;/code&gt; object, and &lt;code&gt;int&lt;/code&gt; is stored as an &lt;code&gt;Integer&lt;/code&gt; object. When the method &lt;code&gt;execute&lt;/code&gt; is called, the values in the &lt;code&gt;Hashtable&lt;/code&gt; object are substituted for the appropriate placeholder parameters in the command.</source>
          <target state="translated">&lt;code&gt;BaseRowSet&lt;/code&gt; セッターメソッドで設定されたプレースホルダーパラメーターは、オブジェクトとして内部 &lt;code&gt;Hashtable&lt;/code&gt; オブジェクトに格納されます。プリミティブは、 &lt;code&gt;Object&lt;/code&gt; タイプとして格納されます。たとえば、 &lt;code&gt;byte&lt;/code&gt; は &lt;code&gt;Byte&lt;/code&gt; オブジェクトとして格納され、 &lt;code&gt;int&lt;/code&gt; は &lt;code&gt;Integer&lt;/code&gt; オブジェクトとして格納されます。メソッド &lt;code&gt;execute&lt;/code&gt; が呼び出されると、 &lt;code&gt;Hashtable&lt;/code&gt; オブジェクトの値が、コマンドの適切なプレースホルダーパラメーターに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="a342a1ca910ba03ac856dd3cb6b496330e72e4ed" translate="yes" xml:space="preserve">
          <source>The placement of the scrollbars is controlled by platform-specific properties set by the user outside of the program.</source>
          <target state="translated">スクロールバーの配置は、ユーザーがプログラムの外部で設定したプラットフォーム固有のプロパティによって制御されます。</target>
        </trans-unit>
        <trans-unit id="75c5e59d7fc130499537b22ca3f6a19ddfdef68a" translate="yes" xml:space="preserve">
          <source>The plain style constant.</source>
          <target state="translated">プレーンなスタイルの定数。</target>
        </trans-unit>
        <trans-unit id="5a84f21cac12242c01031819d62ec386192e9637" translate="yes" xml:space="preserve">
          <source>The platform &lt;code&gt;ClassLoader&lt;/code&gt;.</source>
          <target state="translated">プラットフォーム &lt;code&gt;ClassLoader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d191e3661c045abc37d149ffba48109cff4ab5bb" translate="yes" xml:space="preserve">
          <source>The platform uses signed two's complement integer arithmetic with int and long primitive types. The developer should choose the primitive type to ensure that arithmetic operations consistently produce correct results, which in some cases means the operations will not overflow the range of values of the computation. The best practice is to choose the primitive type and algorithm to avoid overflow. In cases where the size is &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;long&lt;/code&gt; and overflow errors need to be detected, the methods &lt;code&gt;addExact&lt;/code&gt;, &lt;code&gt;subtractExact&lt;/code&gt;, &lt;code&gt;multiplyExact&lt;/code&gt;, and &lt;code&gt;toIntExact&lt;/code&gt; throw an &lt;code&gt;ArithmeticException&lt;/code&gt; when the results overflow. For other arithmetic operations such as divide, absolute value, increment by one, decrement by one, and negation overflow occurs only with a specific minimum or maximum value and should be checked against the minimum or maximum as appropriate.</source>
          <target state="translated">プラットフォームは、intおよびlongプリミティブ型で符号付き2の補数整数演算を使用します。開発者は、算術演算が一貫して正しい結果を生成するようにプリミティブ型を選択する必要があります。これは、場合によっては、演算が計算値の範囲をオーバーフローしないことを意味します。ベストプラクティスは、オーバーフローを回避するためにプリミティブ型とアルゴリズムを選択することです。サイズが &lt;code&gt;int&lt;/code&gt; または &lt;code&gt;long&lt;/code&gt; で、オーバーフローエラーを検出する必要がある場合、メソッド &lt;code&gt;addExact&lt;/code&gt; 、 &lt;code&gt;subtractExact&lt;/code&gt; 、 &lt;code&gt;multiplyExact&lt;/code&gt; 、および &lt;code&gt;toIntExact&lt;/code&gt; は &lt;code&gt;ArithmeticException&lt;/code&gt; をスローします。結果がオーバーフローしたとき。除算、絶対値、1ずつインクリメント、1ずつデクリメント、否定オーバーフローなどの他の算術演算では、特定の最小値または最大値でのみ発生するため、必要に応じて最小値または最大値と照合する必要があります。</target>
        </trans-unit>
        <trans-unit id="2ceb5ca739bd037a631c6a8df267fc3ed5ce1040" translate="yes" xml:space="preserve">
          <source>The platform uses signed two's complement integer arithmetic with int and long primitive types. The developer should choose the primitive type to ensure that arithmetic operations consistently produce correct results, which in some cases means the operations will not overflow the range of values of the computation. The best practice is to choose the primitive type and algorithm to avoid overflow. In cases where the size is &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;long&lt;/code&gt; and overflow errors need to be detected, the methods &lt;code&gt;addExact&lt;/code&gt;, &lt;code&gt;subtractExact&lt;/code&gt;, &lt;code&gt;multiplyExact&lt;/code&gt;, and &lt;code&gt;toIntExact&lt;/code&gt; throw an &lt;code&gt;ArithmeticException&lt;/code&gt; when the results overflow. For other arithmetic operations such as divide, absolute value, increment by one, decrement by one, and negation, overflow occurs only with a specific minimum or maximum value and should be checked against the minimum or maximum as appropriate.</source>
          <target state="translated">プラットフォームは、intおよびlongプリミティブ型で符号付き2の補数整数演算を使用します。開発者は、算術演算が一貫して正しい結果を生成するようにプリミティブ型を選択する必要があります。これは、場合によっては、演算が計算値の範囲をオーバーフローしないことを意味します。ベストプラクティスは、オーバーフローを回避するためにプリミティブ型とアルゴリズムを選択することです。サイズが &lt;code&gt;int&lt;/code&gt; または &lt;code&gt;long&lt;/code&gt; で、オーバーフローエラーを検出する必要がある場合、メソッド &lt;code&gt;addExact&lt;/code&gt; 、 &lt;code&gt;subtractExact&lt;/code&gt; 、 &lt;code&gt;multiplyExact&lt;/code&gt; 、および &lt;code&gt;toIntExact&lt;/code&gt; は &lt;code&gt;ArithmeticException&lt;/code&gt; をスローします。結果がオーバーフローしたとき。除算、絶対値、1ずつインクリメント、1ずつデクリメント、否定などの他の算術演算の場合、オーバーフローは特定の最小値または最大値でのみ発生するため、必要に応じて最小値または最大値と照合する必要があります。</target>
        </trans-unit>
        <trans-unit id="3ddf2138bdbeea3a72c2017234d8cedbfdba2c4d" translate="yes" xml:space="preserve">
          <source>The platform uses signed two's complement integer arithmetic with int and long primitive types. The developer should choose the primitive type to ensure that arithmetic operations consistently produce correct results, which in some cases means the operations will not overflow the range of values of the computation. The best practice is to choose the primitive type and algorithm to avoid overflow. In cases where the size is &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;long&lt;/code&gt; and overflow errors need to be detected, the methods &lt;code&gt;addExact&lt;/code&gt;, &lt;code&gt;subtractExact&lt;/code&gt;, &lt;code&gt;multiplyExact&lt;/code&gt;, and &lt;code&gt;toIntExact&lt;/code&gt; throw an &lt;code&gt;ArithmeticException&lt;/code&gt; when the results overflow. For other arithmetic operations such as divide, absolute value, increment, decrement, and negation overflow occurs only with a specific minimum or maximum value and should be checked against the minimum or maximum as appropriate.</source>
          <target state="translated">プラットフォームは、intおよびlongプリミティブ型で符号付き2の補数整数演算を使用します。開発者は、プリミティブ型を選択して、算術演算が常に正しい結果を生成するようにします。これは、場合によっては、演算が計算の値の範囲をオーバーフローしないことを意味します。ベストプラクティスは、プリミティブタイプとアルゴリズムを選択してオーバーフローを回避することです。サイズが &lt;code&gt;int&lt;/code&gt; または &lt;code&gt;long&lt;/code&gt; でオーバーフローエラーを検出する必要がある場合、メソッド &lt;code&gt;addExact&lt;/code&gt; 、 &lt;code&gt;subtractExact&lt;/code&gt; 、 &lt;code&gt;multiplyExact&lt;/code&gt; 、および &lt;code&gt;toIntExact&lt;/code&gt; は &lt;code&gt;ArithmeticException&lt;/code&gt; をスローします。結果がオーバーフローしたとき。除算、絶対値、増分、減分、否定などの他の算術演算では、特定の最小値または最大値でのみオーバーフローが発生し、必要に応じて最小値または最大値に対してチェックする必要があります。</target>
        </trans-unit>
        <trans-unit id="f7521e50eec810dafda8ec390ca964f1fb534790" translate="yes" xml:space="preserve">
          <source>The plus character &lt;code&gt;'+'&lt;/code&gt; (&lt;code&gt;'\u002b'&lt;/code&gt;, &lt;small&gt;PLUS SIGN&lt;/small&gt;),</source>
          <target state="translated">プラス文字 &lt;code&gt;'+'&lt;/code&gt; （ &lt;code&gt;'\u002b'&lt;/code&gt; 、&lt;small&gt;PLUS SIGN&lt;/small&gt;）、</target>
        </trans-unit>
        <trans-unit id="8de422a879c63cd1d08f600a6e2474b68479ffa1" translate="yes" xml:space="preserve">
          <source>The plus sign &quot;&lt;code&gt;+&lt;/code&gt;&quot; is converted into a space character &quot; &quot; .</source>
          <target state="translated">プラス記号「 &lt;code&gt;+&lt;/code&gt; 」はスペース文字「」に変換されます。</target>
        </trans-unit>
        <trans-unit id="e85f9897d05dda5c28cb4704b1031cfc583d8bdb" translate="yes" xml:space="preserve">
          <source>The point size of this &lt;code&gt;Font&lt;/code&gt; in &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">こののポイントサイズ &lt;code&gt;Font&lt;/code&gt; で &lt;code&gt;float&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e05bc968c4e3e94ec2209d4abaf443fe21787fa" translate="yes" xml:space="preserve">
          <source>The point size of this &lt;code&gt;Font&lt;/code&gt;, rounded to integer.</source>
          <target state="translated">この &lt;code&gt;Font&lt;/code&gt; のポイントサイズ。整数に丸められます。</target>
        </trans-unit>
        <trans-unit id="770068703e30a0ae5899254519c58354757383e7" translate="yes" xml:space="preserve">
          <source>The policies can be certificate-based or may depend on other authentication schemes.</source>
          <target state="translated">ポリシーは、証明書ベースのものであってもよいし、他の認証スキームに依存するものであってもよい。</target>
        </trans-unit>
        <trans-unit id="0e9410b63b7333b991d16e974b0ea1ae55586212" translate="yes" xml:space="preserve">
          <source>The policy constraints have been violated.</source>
          <target state="translated">政策的制約に違反している。</target>
        </trans-unit>
        <trans-unit id="1b63ad61faf90a50a857b840faad61a57d9a475d" translate="yes" xml:space="preserve">
          <source>The policy for a Java runtime (specifying which permissions are available for code from various principals) is represented by a Policy object. Whenever a Policy is initialized or refreshed, Permission objects of appropriate classes are created for all permissions allowed by the Policy.</source>
          <target state="translated">Javaランタイムのポリシー(様々なプリンシパルからのコードに対して利用可能なパーミッションを指定する)は、Policyオブジェクトで表されます。ポリシーが初期化または更新されるたびに、適切なクラスのPermissionオブジェクトが、ポリシーによって許可されたすべてのパーミッションのために作成されます。</target>
        </trans-unit>
        <trans-unit id="744c3ae06df1c4965a33f02db62c6df02c922313" translate="yes" xml:space="preserve">
          <source>The poolable value of a statement is applicable to both internal statement caches implemented by the driver and external statement caches implemented by application servers and other applications.</source>
          <target state="translated">ステートメントのプーリング可能な値は、ドライバによって実装された内部ステートメントキャッシュと、アプリケーションサーバや他のアプリケーションによって実装された外部ステートメントキャッシュの両方に適用されます。</target>
        </trans-unit>
        <trans-unit id="82fae92e0d4dd371e91f2864a390bac7d0eb3216" translate="yes" xml:space="preserve">
          <source>The pooled connection closed by the application</source>
          <target state="translated">アプリケーションによって閉じられたプールされた接続</target>
        </trans-unit>
        <trans-unit id="dfaf71328abec9e71a671eccc845d3121c2b0845" translate="yes" xml:space="preserve">
          <source>The pooling manager does not need to call &lt;code&gt;beginRequest&lt;/code&gt; if:</source>
          <target state="translated">次の場合、プーリングマネージャーは &lt;code&gt;beginRequest&lt;/code&gt; を呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="92fa2d336d7c8160e103bf987c4391a790f21b4b" translate="yes" xml:space="preserve">
          <source>The pooling manager does not need to call &lt;code&gt;endRequest&lt;/code&gt; if:</source>
          <target state="translated">次の場合、プーリングマネージャーは &lt;code&gt;endRequest&lt;/code&gt; を呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="e90b45718cda98d6bea32baefe82cd6640d8dea0" translate="yes" xml:space="preserve">
          <source>The pooling manager should call &lt;code&gt;beginRequest&lt;/code&gt; on the underlying connection prior to returning a connection to the caller.</source>
          <target state="translated">プーリングマネージャーは、呼び出し元に接続を返す前に、基になる接続で &lt;code&gt;beginRequest&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="167dc5ab45ec38b0cd73d7df03608399509bba35" translate="yes" xml:space="preserve">
          <source>The pooling manager should call &lt;code&gt;endRequest&lt;/code&gt; on the underlying connection when the applications returns the connection back to the connection pool.</source>
          <target state="translated">プーリングマネージャは、アプリケーションが接続を接続プールに戻すときに、基になる接続で &lt;code&gt;endRequest&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="6926313f48d16c7d56d1e2313f5a4569737b892b" translate="yes" xml:space="preserve">
          <source>The popup layer displays above dialogs. That way, the popup windows associated with combo boxes, tooltips, and other help text will appear above the component, palette, or dialog that generated them.</source>
          <target state="translated">ポップアップレイヤーはダイアログの上に表示されます。これにより、コンボボックス、ツールチップ、その他のヘルプテキストに関連付けられたポップアップウィンドウが、それらを生成したコンポーネント、パレット、またはダイアログの上に表示されます。</target>
        </trans-unit>
        <trans-unit id="2fdaf80d95e0f5e31151be71383e818b9ccadd36" translate="yes" xml:space="preserve">
          <source>The port component of a URI, if defined, is a non-negative integer.</source>
          <target state="translated">URIのportコンポーネントが定義されている場合は、非負の整数である。</target>
        </trans-unit>
        <trans-unit id="465e20b5e3d6b616ff936762b108d3831a17ee64" translate="yes" xml:space="preserve">
          <source>The port component of this URI, or &lt;code&gt;-1&lt;/code&gt; if the port is undefined</source>
          <target state="translated">このURIのポートコンポーネント。ポートが未定義の場合は &lt;code&gt;-1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2770c496726c2c6a1fb08bb232925adc856e5e7f" translate="yes" xml:space="preserve">
          <source>The port number on the remote host to which this socket is connected.</source>
          <target state="translated">このソケットが接続されているリモートホストのポート番号。</target>
        </trans-unit>
        <trans-unit id="771f8b79eb7ead72cd42f8874261ce51d5e9642c" translate="yes" xml:space="preserve">
          <source>The port of the Service URL.</source>
          <target state="translated">サービスURLのポート。</target>
        </trans-unit>
        <trans-unit id="17cb13d2105c7d415ffa295626d4a87fddb85329" translate="yes" xml:space="preserve">
          <source>The port of the Service URL. If no port was specified, the returned value is 0.</source>
          <target state="translated">サービスURLのポートです。ポートが指定されていない場合は 0 が返されます。</target>
        </trans-unit>
        <trans-unit id="356c1293f756ffbef5fc572bed0d988e81455650" translate="yes" xml:space="preserve">
          <source>The port or portrange is optional. A port specification of the form &quot;N-&quot;, where</source>
          <target state="translated">ポートまたはポートレンジは任意である。N-&quot; の形式のポート指定で、ここでは</target>
        </trans-unit>
        <trans-unit id="f7a3255c4428117efb808f78d07d1a509a065fee" translate="yes" xml:space="preserve">
          <source>The port to lookup the activation system.</source>
          <target state="translated">活性化システムを検索するポート。</target>
        </trans-unit>
        <trans-unit id="a50d6c96a3e4d969a207bbe35ece3c77d64fdbff" translate="yes" xml:space="preserve">
          <source>The portion of a private use subtag prefixed by &quot;lvariant&quot;, if any, is removed and appended to the variant field in the result locale (without case normalization). If it is then empty, the private use subtag is discarded:</source>
          <target state="translated">プライベート使用サブタグの先頭に &quot;lvariant&quot; がある場合は、その部分が削除され、結果ロケールの variant フィールドに追加されます (大文字小文字の正規化は行われません)。空の場合は、プライベート使用サブタグは破棄されます。</target>
        </trans-unit>
        <trans-unit id="dade22179ed59dcfbad33f06553c3e366962e9c8" translate="yes" xml:space="preserve">
          <source>The position</source>
          <target state="translated">位置</target>
        </trans-unit>
        <trans-unit id="be4c1197eaffc124cfb0f83a9e8a33d8b6aa4a29" translate="yes" xml:space="preserve">
          <source>The position argument will indicate the start of the tag, comment or text. Similar to arrays, the first character in the stream has a position of 0. For tags that are implied the position will indicate the location of the next encountered tag. In the first example, the implied start body and html tags will have the same position as the p tag, and the implied end p, html and body tags will all have the same position.</source>
          <target state="translated">position 引数は、タグ、コメント、またはテキストの開始位置を示します。配列と同様に、ストリームの最初の文字の位置は0です。 暗黙のタグの場合、位置は次に遭遇したタグの位置を示します。最初の例では、暗黙の開始タグであるbodyタグとhtmlタグはpタグと同じ位置にあり、暗黙の終了タグであるpタグ、htmlタグ、bodyタグはすべて同じ位置にあります。</target>
        </trans-unit>
        <trans-unit id="e928e79ce165a52965e64d8e1b2549cc6465990b" translate="yes" xml:space="preserve">
          <source>The position for the title.</source>
          <target state="translated">タイトルのポジションです。</target>
        </trans-unit>
        <trans-unit id="9d1f5a30624f167466c9de353c1c87fe46188eb5" translate="yes" xml:space="preserve">
          <source>The position of a component within a layer can also be specified directly. Valid positions range from 0 up to one less than the number of components in that layer. A value of -1 indicates the bottommost position. A value of 0 indicates the topmost position. Unlike layer numbers, higher position values are</source>
          <target state="translated">レイヤー内のコンポーネントの位置を直接指定することもできます。有効な位置は0からそのレイヤー内のコンポーネントの数より1つ少ない位置までの範囲です。値 -1 は最下段の位置を示します。値が0の場合は最上段の位置を示します。レイヤー番号とは異なり、高い位置の値は</target>
        </trans-unit>
        <trans-unit id="9aa972c882e959af5cfa74686b743fa2cca90fbe" translate="yes" xml:space="preserve">
          <source>The position of mark in buffer.</source>
          <target state="translated">バッファ内のマークの位置。</target>
        </trans-unit>
        <trans-unit id="5a10a32b9ba1b850952eb01a2dac5b8e40ece025" translate="yes" xml:space="preserve">
          <source>The position of this buffer</source>
          <target state="translated">このバッファの位置</target>
        </trans-unit>
        <trans-unit id="e14f14e3eeac65815857675924c0f85fa97086c5" translate="yes" xml:space="preserve">
          <source>The position prior to which data may be discarded.</source>
          <target state="translated">データが廃棄される可能性がある前の位置。</target>
        </trans-unit>
        <trans-unit id="c4ecb0a7945551375751ca2e25e871a33f35f2b7" translate="yes" xml:space="preserve">
          <source>The position prior to which data may be discarded. Seeking to a smaller position is not allowed. &lt;code&gt;flushedPos&lt;/code&gt; will always be &amp;gt;= 0.</source>
          <target state="translated">データが破棄される前の位置。小さい位置へのシークは許可されていません。 &lt;code&gt;flushedPos&lt;/code&gt; は常に&amp;gt; = 0になります。</target>
        </trans-unit>
        <trans-unit id="b019f8134a25cd17d205f23f036ec08fa24eb150" translate="yes" xml:space="preserve">
          <source>The position within the pushback buffer from which the next byte will be read.</source>
          <target state="translated">次のバイトが読み込まれるプッシュバックバッファ内の位置。</target>
        </trans-unit>
        <trans-unit id="ce0957d483aceb3b45553d641f8c629ba289ca24" translate="yes" xml:space="preserve">
          <source>The position within the pushback buffer from which the next byte will be read. When the buffer is empty, &lt;code&gt;pos&lt;/code&gt; is equal to &lt;code&gt;buf.length&lt;/code&gt;; when the buffer is full, &lt;code&gt;pos&lt;/code&gt; is equal to zero.</source>
          <target state="translated">次のバイトが読み取られるプッシュバックバッファー内の位置。バッファーが空の場合、 &lt;code&gt;pos&lt;/code&gt; は &lt;code&gt;buf.length&lt;/code&gt; と等しくなります。バッファがいっぱいになると、 &lt;code&gt;pos&lt;/code&gt; はゼロになります。</target>
        </trans-unit>
        <trans-unit id="2697068a8ce2370b45252b0381024224e1a033b6" translate="yes" xml:space="preserve">
          <source>The positions tracking change are also generally cheap to maintain. The Position implementations (marks) store the array index and can easily calculate the sequential position from the current gap location. Changes only require update to the the marks between the old and new gap boundaries when the gap is moved, so generally updating the marks is pretty cheap. The marks are stored sorted so they can be located quickly with a binary search. This increases the cost of adding a mark, and decreases the cost of keeping the mark updated.</source>
          <target state="translated">また、位置追跡変化は、一般的には維持費が安いです。位置の実装(マーク)は配列のインデックスを格納しており、現在のギャップの位置から連続した位置を簡単に計算できます。変更は、ギャップが移動したときに、古いギャップ境界と新しいギャップ境界の間のマークを更新する必要があるだけなので、一般的にマークの更新はかなり安く済みます。マークはソートされて保存されているので、バイナリ検索で素早く位置を特定することができます。これにより、マークを追加するコストが増加し、マークを更新し続けるコストが減少します。</target>
        </trans-unit>
        <trans-unit id="7548ff65d5ee10f38621f470acbd0447c4140b54" translate="yes" xml:space="preserve">
          <source>The possible actions are these:</source>
          <target state="translated">考えられる行動はこれらです。</target>
        </trans-unit>
        <trans-unit id="30057bbd133f892768abece91c4328fc6c016d37" translate="yes" xml:space="preserve">
          <source>The possible actions are:</source>
          <target state="translated">考えられる行動は</target>
        </trans-unit>
        <trans-unit id="07e57a756aabf195e2b55eca8c76dad211c93a86" translate="yes" xml:space="preserve">
          <source>The possible attribute values</source>
          <target state="translated">可能な属性値</target>
        </trans-unit>
        <trans-unit id="cf6fa0c1ab6538a58254ad393e6c38d337097a65" translate="yes" xml:space="preserve">
          <source>The possible constraints objects (Strings) are:</source>
          <target state="translated">可能な制約オブジェクト(文字列)は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="35dfa121a2fd6c8bb8d45be45d834b7cd54ad632" translate="yes" xml:space="preserve">
          <source>The possible implementations and return values have been modified in the Java 2 SDK, Standard Edition, version 1.3 to accommodate the option of continuing to process commands in a batch update after a &lt;code&gt;BatchUpdateException&lt;/code&gt; object has been thrown.</source>
          <target state="translated">可能な実装と戻り値は、Java 2 SDK、Standard Edition、バージョン1.3で変更され、 &lt;code&gt;BatchUpdateException&lt;/code&gt; オブジェクトがスローされた後、バッチ更新でコマンドを処理し続けるオプションに対応しています。</target>
        </trans-unit>
        <trans-unit id="b36238ad8a3ea91b1260f9601a23cb5d54279a3f" translate="yes" xml:space="preserve">
          <source>The possible return values for this method were modified for the Java 2 SDK, Standard Edition, version 1.3. This was done to accommodate the new option of continuing to process commands in a batch update after a &lt;code&gt;BatchUpdateException&lt;/code&gt; object has been thrown.</source>
          <target state="translated">このメソッドの可能な戻り値は、Java 2 SDK、Standard Edition、バージョン1.3用に変更されました。これは、 &lt;code&gt;BatchUpdateException&lt;/code&gt; オブジェクトがスローされた後、バッチ更新でコマンドを処理し続けるという新しいオプションに対応するために行われました。</target>
        </trans-unit>
        <trans-unit id="7b7bd960ee00d4b00678a55c5cbb406785c27c39" translate="yes" xml:space="preserve">
          <source>The possible target names for an Authentication Permission are:</source>
          <target state="translated">認証許可の対象となる名前は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="8a3e78cdd39c4f87760b3390e7efcd189cdc7308" translate="yes" xml:space="preserve">
          <source>The possible ways to connect to the host are</source>
          <target state="translated">ホストへの接続方法として考えられるのは</target>
        </trans-unit>
        <trans-unit id="080f48b0aa6b32cedd5af01121bd7b1bfc958102" translate="yes" xml:space="preserve">
          <source>The possibly null ID of the bad attribute.</source>
          <target state="translated">不良属性のヌルの可能性のあるID。</target>
        </trans-unit>
        <trans-unit id="9b7991f6067c19c449119e08d159087dc4972217" translate="yes" xml:space="preserve">
          <source>The possibly null address contents.</source>
          <target state="translated">ヌルの可能性があるアドレスの内容。</target>
        </trans-unit>
        <trans-unit id="4ed5af77681adda9a6ccec629fa59a1a47e0566d" translate="yes" xml:space="preserve">
          <source>The possibly null attribute value at index &lt;code&gt;ix&lt;/code&gt; that was removed; null if the attribute value is null.</source>
          <target state="translated">削除されたインデックス &lt;code&gt;ix&lt;/code&gt; の nullの可能性がある属性値。属性値がnullの場合はnull。</target>
        </trans-unit>
        <trans-unit id="75e1e093b3b31beab3f725db1a7a97f735291ed2" translate="yes" xml:space="preserve">
          <source>The possibly null attribute value at index &lt;code&gt;ix&lt;/code&gt;; null if the attribute value is null.</source>
          <target state="translated">nullの可能性がある、インデックス &lt;code&gt;ix&lt;/code&gt; の属性値。属性値がnullの場合はnull。</target>
        </trans-unit>
        <trans-unit id="01e53a4583b8b632e31e23e545835d7fb151953e" translate="yes" xml:space="preserve">
          <source>The possibly null attribute value at index ix that was replaced. Null if the attribute value was null.</source>
          <target state="translated">置換されたインデックスixのヌルの可能性のある属性値。属性値がNULLの場合はNULL。</target>
        </trans-unit>
        <trans-unit id="77bb1fce5266fd4ed13f0e3a64b2e033cc88d05b" translate="yes" xml:space="preserve">
          <source>The possibly null attributes to be bound.</source>
          <target state="translated">バインドされる可能性のあるヌル属性。</target>
        </trans-unit>
        <trans-unit id="71f9a1ed0e575411b69d0a23112e14cf08307845" translate="yes" xml:space="preserve">
          <source>The possibly null binding of the object after the change.</source>
          <target state="translated">変更後のオブジェクトのヌルの可能性のあるバインディング。</target>
        </trans-unit>
        <trans-unit id="303282c69dc7d698ff760f2ed06dfbbad81206cb" translate="yes" xml:space="preserve">
          <source>The possibly null binding of the object before the change.</source>
          <target state="translated">変更前のオブジェクトのヌルの可能性があるバインディング。</target>
        </trans-unit>
        <trans-unit id="be200430acab3902acee3be25723c5883a236b4b" translate="yes" xml:space="preserve">
          <source>The possibly null challenge to send to the client. It is null if the authentication has succeeded and there is no more challenge data to be sent to the client.</source>
          <target state="translated">クライアントに送信するチャレンジデータが NULL の可能性があります。認証に成功し、クライアントに送信するチャレンジデータがなくなった場合は null となります。</target>
        </trans-unit>
        <trans-unit id="288430f98d1d8dc902d6cd0f841e573864bef168" translate="yes" xml:space="preserve">
          <source>The possibly null change information of this event.</source>
          <target state="translated">このイベントのヌルの可能性のある変更情報。</target>
        </trans-unit>
        <trans-unit id="ef5328e9a2c12269fc3c9790ffb3bdf7b904c77d" translate="yes" xml:space="preserve">
          <source>The possibly null class name of object bound. It is null if the object bound is null.</source>
          <target state="translated">object boundのnullの可能性のあるクラス名。オブジェクトバウンドがNULLの場合はNULLです。</target>
        </trans-unit>
        <trans-unit id="ffd8994818808e7044f5a7bd47401c36f2d57625" translate="yes" xml:space="preserve">
          <source>The possibly null detail string explaining more about the problem with resolving a link. If null, it means there is no link detail message for this exception.</source>
          <target state="translated">null の可能性がある詳細文字列で、リンクの解決に関する問題の詳細を説明します。null の場合は、この例外に対するリンク詳細メッセージがないことを意味します。</target>
        </trans-unit>
        <trans-unit id="67a7663ef453f501bcf8141dc78d296c77c8d264" translate="yes" xml:space="preserve">
          <source>The possibly null detail string explaining more about this exception. If null, it means there is no detail message for this exception.</source>
          <target state="translated">null の可能性がある詳細文字列で、この例外についての詳細を説明します。null の場合は、この例外の詳細メッセージがないことを意味します。</target>
        </trans-unit>
        <trans-unit id="2dbbcea44ff699506e27e77c0ad6dc0d7cd34a86" translate="yes" xml:space="preserve">
          <source>The possibly null element in the enumeration. null is only valid for enumerations that can return null (e.g. Attribute.getAll() returns an enumeration of attribute values, and an attribute value can be null).</source>
          <target state="translated">列挙の中のnullの可能性のある要素。 nullは、nullを返すことができる列挙に対してのみ有効です(例:Attribute.getAll()は属性値の列挙を返し、属性値はnullにすることができます)。</target>
        </trans-unit>
        <trans-unit id="50e6ea1bbf4d3d242e0442515defbd02966a7734" translate="yes" xml:space="preserve">
          <source>The possibly null exception that caused this naming exception. If null, it means no root cause has been set for this naming exception.</source>
          <target state="translated">この命名例外の原因となった null の可能性のある例外。null の場合は、この命名例外に根本原因が設定されていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="ce85339be4b00e60548e7a67ece14ecc99dfce86" translate="yes" xml:space="preserve">
          <source>The possibly null fully-qualified class name of the factory. (e.g. &quot;java.lang.String&quot;)</source>
          <target state="translated">ファクトリーのヌルの可能性のある完全修飾クラス名。(例:&quot;java.lang.String&quot;)</target>
        </trans-unit>
        <trans-unit id="53819d8f2ff0666381a9127d62f2914f015d222f" translate="yes" xml:space="preserve">
          <source>The possibly null matching rule ID. If null then the ordering matching rule defined for the sort key attribute is used.</source>
          <target state="translated">nullの可能性のあるマッチングルールID。nullの場合は、ソートキー属性に定義されている順序付けマッチングルールが使用されます。</target>
        </trans-unit>
        <trans-unit id="ac7693eebba3b1d8e8aed9065f755c90ca9438ca" translate="yes" xml:space="preserve">
          <source>The possibly null object that was resolved so far. If null, it means the link resolved object field has not been set.</source>
          <target state="translated">これまでに解決されたNULLの可能性のあるオブジェクト。nullの場合は、リンク解決済みオブジェクトフィールドが設定されていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="97169d9b8c4d89f8a301ca6eb28fad9af6f33b5c" translate="yes" xml:space="preserve">
          <source>The possibly null object that was resolved so far. null means that the resolved object field has not been set.</source>
          <target state="translated">これまでに解決されたNULLの可能性のあるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="2ce6afd310045ea10e313ef96d7542591a1cd218" translate="yes" xml:space="preserve">
          <source>The possibly null object to be bound.</source>
          <target state="translated">バインドされる可能性のあるnullオブジェクト。</target>
        </trans-unit>
        <trans-unit id="644a895b0ec7420afe1f7206497a62be42cccfd6" translate="yes" xml:space="preserve">
          <source>The possibly null part of the new name that has not been resolved. It is a composite name. It can be null, which means the remaining new name field has not been set.</source>
          <target state="translated">解決されていない新しい名前のヌルの可能性がある部分。これは合成名です。nullになる可能性がありますが、これは残りの新しい名前フィールドが設定されていないことを意味します。</target>
        </trans-unit>
        <trans-unit id="227b72d26062a0a4a65406d6b2400d858977938f" translate="yes" xml:space="preserve">
          <source>The possibly null response of the operation. null means the operation did not generate any response.</source>
          <target state="translated">nullの可能性がある操作のレスポンス。</target>
        </trans-unit>
        <trans-unit id="95751c0e2100386276d5fbab10fec9eadc434b68" translate="yes" xml:space="preserve">
          <source>The possibly null response to send to the server. It is null if the challenge accompanied a &quot;SUCCESS&quot; status and the challenge only contains data for the client to update its state and no response needs to be sent to the server. The response is a zero-length byte array if the client is to send a response with no data.</source>
          <target state="translated">サーバーに送信する応答がヌルの可能性があります。チャレンジが「SUCCESS」ステータスを伴っており、チャレンジにはクライアントが状態を更新するためのデータのみが含まれており、サーバーに応答を送信する必要がない場合は、NULLとなります。クライアントがデータなしで応答を送信する場合、応答はゼロ長のバイト配列です。</target>
        </trans-unit>
        <trans-unit id="a9f4959d404525b8010782edbbb82d1a4a73f2c7" translate="yes" xml:space="preserve">
          <source>The possibly null string containing the location for loading in the factory's class.</source>
          <target state="translated">ファクトリーのクラスでロードする場所を含むヌル文字列の可能性があります。</target>
        </trans-unit>
        <trans-unit id="598464a1b17e0cdd4775fa1d87fe9e6f6f313e36" translate="yes" xml:space="preserve">
          <source>The possibly null unexecuted modification list.</source>
          <target state="translated">ヌルの可能性がある未実行の修正リスト。</target>
        </trans-unit>
        <trans-unit id="594289587491331d8018893d276e66cdd5175334" translate="yes" xml:space="preserve">
          <source>The possibly-empty unmodifiable set of the services that this module provides</source>
          <target state="translated">このモジュールが提供するサービスの可能性のある空の変更不可能なセット</target>
        </trans-unit>
        <trans-unit id="701dd4005bf758fa7ad450f4118b0095191d7b33" translate="yes" xml:space="preserve">
          <source>The pre-processing is performed by &lt;code&gt;combiner&lt;/code&gt;, a second method handle. Of the arguments passed to the adapter, the first &lt;code&gt;N&lt;/code&gt; arguments are copied to the combiner, which is then called. (Here, &lt;code&gt;N&lt;/code&gt; is defined as the parameter count of the combiner.) After this, control passes to the target, with any result from the combiner inserted before the original &lt;code&gt;N&lt;/code&gt; incoming arguments.</source>
          <target state="translated">前処理は、2番目のメソッドハンドルである &lt;code&gt;combiner&lt;/code&gt; によって実行されます。アダプターに渡される引数のうち、最初の &lt;code&gt;N&lt;/code&gt; 個の引数がコンバイナーにコピーされ、次に呼び出されます。（ここでは、 &lt;code&gt;N&lt;/code&gt; はコンバイナのパラメータカウントとして定義されています。）この後、制御はターゲットに渡され、コンバイナからの結果が元の &lt;code&gt;N&lt;/code&gt; 個の入力引数の前に挿入されます。</target>
        </trans-unit>
        <trans-unit id="7c240ae7a898a6847f515e8d7157c3336476bbff" translate="yes" xml:space="preserve">
          <source>The pre-processing is performed by one or more method handles, specified in the elements of the &lt;code&gt;filters&lt;/code&gt; array. The first element of the filter array corresponds to the &lt;code&gt;pos&lt;/code&gt; argument of the target, and so on in sequence.</source>
          <target state="translated">前処理は、 &lt;code&gt;filters&lt;/code&gt; 配列の要素で指定された1つ以上のメソッドハンドルによって実行されます。フィルター配列の最初の要素は、ターゲットの &lt;code&gt;pos&lt;/code&gt; 引数に対応し、以下同様に続きます。</target>
        </trans-unit>
        <trans-unit id="0c8d7cd21b52b86ec589875400da932885d18951" translate="yes" xml:space="preserve">
          <source>The pre-processing is performed by one or more method handles, specified in the elements of the &lt;code&gt;filters&lt;/code&gt; array. The first element of the filter array corresponds to the &lt;code&gt;pos&lt;/code&gt; argument of the target, and so on in sequence. The filter functions are invoked in left to right order.</source>
          <target state="translated">前処理は、 &lt;code&gt;filters&lt;/code&gt; 配列の要素で指定された1つ以上のメソッドハンドルによって実行されます。フィルタ配列の最初の要素は、ターゲットの &lt;code&gt;pos&lt;/code&gt; 引数に対応し、以下同様に順番に対応します。フィルタ関数は、左から右の順序で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="54fba175e25513934ae6e0c928d834995d59017b" translate="yes" xml:space="preserve">
          <source>The precedence of character-class operators is as follows, from highest to lowest:</source>
          <target state="translated">文字クラス演算子の優先順位は、高いものから順に以下のようになります。</target>
        </trans-unit>
        <trans-unit id="a932d6aca64396e330c14caa731cd2e97c2efee4" translate="yes" xml:space="preserve">
          <source>The preceding code fragments give an idea of what goes on behind the scenes; they would not appear in an application, which would not invoke methods like &lt;code&gt;readData&lt;/code&gt; and &lt;code&gt;decodeParams&lt;/code&gt;. In contrast, the following code fragment shows what an application might do. It sets the rowset's command, sets the command's parameters, and executes the command. Simply by calling the &lt;code&gt;execute&lt;/code&gt; method, &lt;code&gt;crs&lt;/code&gt; populates itself with the requested data from the table &lt;code&gt;CUSTOMERS&lt;/code&gt;.</source>
          <target state="translated">上記のコードフラグメントは、舞台裏で何が起こっているのかを示しています。これらは、 &lt;code&gt;readData&lt;/code&gt; や &lt;code&gt;decodeParams&lt;/code&gt; などのメソッドを呼び出さないアプリケーションには表示されません。対照的に、次のコードフラグメントは、アプリケーションが実行する可能性のあることを示しています。行セットのコマンドを設定し、コマンドのパラメーターを設定して、コマンドを実行します。 &lt;code&gt;execute&lt;/code&gt; メソッドを呼び出すだけで、 &lt;code&gt;crs&lt;/code&gt; はテーブル &lt;code&gt;CUSTOMERS&lt;/code&gt; から要求されたデータを自分自身に入力します。</target>
        </trans-unit>
        <trans-unit id="d4b22a75a19cc8184d8d42eb3e0cea459d833bd7" translate="yes" xml:space="preserve">
          <source>The preceding element or null if &lt;code&gt;value&lt;/code&gt; is the first element of the sequence.</source>
          <target state="translated">前の要素。 &lt;code&gt;value&lt;/code&gt; がシーケンスの最初の要素の場合はnull 。</target>
        </trans-unit>
        <trans-unit id="1662793d099b9cf5e31bcba731e92de7d3a9c837" translate="yes" xml:space="preserve">
          <source>The precise definition of &quot;equality&quot; used in comparing attribute values is defined by the underlying directory service. It might use the &lt;code&gt;Object.equals&lt;/code&gt; method, for example, or might use a schema to specify a different equality operation. For matching based on operations other than equality (such as substring comparison) use the version of the &lt;code&gt;search&lt;/code&gt; method that takes a filter argument.</source>
          <target state="translated">属性値の比較に使用される「同等」の正確な定義は、基礎となるディレクトリサービスによって定義されます。これは、使用する可能性があります &lt;code&gt;Object.equals&lt;/code&gt; 例えば、方法、または別の平等の操作を指定するには、スキーマを使用する場合があります。等価以外の操作（部分文字列の比較など）に基づくマッチングでは、フィルター引数を取るバージョンの &lt;code&gt;search&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="bb4614fd577d896554af4208ae33226e3eddd8ad" translate="yes" xml:space="preserve">
          <source>The precise definition of this method is implementation dependent but in general it derives from this path, a path that does not contain &lt;em&gt;redundant&lt;/em&gt; name elements. In many file systems, the &quot;&lt;code&gt;.&lt;/code&gt;&quot; and &quot;&lt;code&gt;..&lt;/code&gt;&quot; are special names used to indicate the current directory and parent directory. In such file systems all occurrences of &quot;&lt;code&gt;.&lt;/code&gt;&quot; are considered redundant. If a &quot;&lt;code&gt;..&lt;/code&gt;&quot; is preceded by a non-&quot;&lt;code&gt;..&lt;/code&gt;&quot; name then both names are considered redundant (the process to identify such names is repeated until it is no longer applicable).</source>
          <target state="translated">このメソッドの正確な定義は実装に依存しますが、一般に、このパスは&lt;em&gt;冗長な&lt;/em&gt;名前要素を含まないパスから派生します。多くのファイルシステムでは、「 &lt;code&gt;.&lt;/code&gt; 」と「 &lt;code&gt;..&lt;/code&gt; 」は、現在のディレクトリと親ディレクトリを示すために使用される特別な名前です。このようなファイルシステムでは、「 &lt;code&gt;.&lt;/code&gt; 」はすべて冗長であると見なされます。 「 &lt;code&gt;..&lt;/code&gt; 」の前に「 &lt;code&gt;..&lt;/code&gt; 」以外の名前が付いている場合、両方の名前は冗長と見なされます（このような名前を識別するプロセスは、適用されなくなるまで繰り返されます）。</target>
        </trans-unit>
        <trans-unit id="29fe6f024b67a56fd1534c416c02d84229593b97" translate="yes" xml:space="preserve">
          <source>The precise definition of this method is implementation dependent but in general it derives from this path, an &lt;a href=&quot;#isAbsolute()&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; path that locates the &lt;a href=&quot;files#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt;&lt;code&gt;same&lt;/code&gt;&lt;/a&gt; file as this path, but with name elements that represent the actual name of the directories and the file. For example, where filename comparisons on a file system are case insensitive then the name elements represent the names in their actual case. Additionally, the resulting path has redundant name elements removed.</source>
          <target state="translated">このメソッドの正確な定義は実装に依存しますが、一般に、このパス、つまりこのパス&lt;a href=&quot;files#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt; &lt;code&gt;same&lt;/code&gt; &lt;/a&gt;ファイルを見つける&lt;a href=&quot;#isAbsolute()&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt;パスから派生しますが、ディレクトリとファイルの実際の名前を表す名前要素があります。たとえば、ファイルシステムでのファイル名の比較で大文字と小文字が区別されない場合、name要素は実際の場合の名前を表します。さらに、結果のパスでは冗長な名前要素が削除されています。</target>
        </trans-unit>
        <trans-unit id="f156f4742b28783fc176e2435a927cffa5913867" translate="yes" xml:space="preserve">
          <source>The precise definition of this method is implementation dependent but in general it derives from this path, an &lt;a href=&quot;path#isAbsolute--&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; path that locates the &lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt;&lt;code&gt;same&lt;/code&gt;&lt;/a&gt; file as this path, but with name elements that represent the actual name of the directories and the file. For example, where filename comparisons on a file system are case insensitive then the name elements represent the names in their actual case. Additionally, the resulting path has redundant name elements removed.</source>
          <target state="translated">このメソッドの正確な定義は実装に依存しますが、一般的にはこのパスから派生します。このパス&lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt; &lt;code&gt;same&lt;/code&gt; &lt;/a&gt;ファイルを見つける&lt;a href=&quot;path#isAbsolute--&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt;パスですが、ディレクトリとファイルの実際の名前を表す名前要素があります。たとえば、ファイルシステムでのファイル名の比較で大文字と小文字が区別されない場合、name要素は実際の大文字小文字の名前を表します。さらに、結果のパスでは、冗長な名前要素が削除されています。</target>
        </trans-unit>
        <trans-unit id="f29514735dff4eb9875c567e3c77c10d0798a36a" translate="yes" xml:space="preserve">
          <source>The precise meaning of &quot;copy&quot; may depend on the class of the &lt;code&gt;CertStoreParameters&lt;/code&gt; object. A typical implementation performs a &quot;deep copy&quot; of this object, but this is not an absolute requirement. Some implementations may perform a &quot;shallow copy&quot; of some or all of the fields of this object.</source>
          <target state="translated">「コピー」の正確な意味は、 &lt;code&gt;CertStoreParameters&lt;/code&gt; オブジェクトのクラスによって異なります。典型的な実装では、このオブジェクトの「ディープコピー」を実行しますが、これは絶対的な要件ではありません。一部の実装では、このオブジェクトの一部またはすべてのフィールドの「浅いコピー」を実行できます。</target>
        </trans-unit>
        <trans-unit id="20a518f78db20ec1e8e63802d6b81b3e5afc2d6f" translate="yes" xml:space="preserve">
          <source>The precise string returned is unspecified, although the following example can be considered typical:</source>
          <target state="translated">返される正確な文字列は特定されていませんが、以下の例が典型的なものと考えられます。</target>
        </trans-unit>
        <trans-unit id="bc7760cf2ead29811d5a4f7919c808536944042d" translate="yes" xml:space="preserve">
          <source>The precision</source>
          <target state="translated">精度</target>
        </trans-unit>
        <trans-unit id="7f3d6ffd25563b48e926ec811735bc2c49c338dd" translate="yes" xml:space="preserve">
          <source>The precision is not applicable. If precision is specified then an &lt;a href=&quot;illegalformatprecisionexception&quot;&gt;&lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">精度は適用されません。精度が指定されている場合、&lt;a href=&quot;illegalformatprecisionexception&quot;&gt; &lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="8b627f68a8d6aaaef844dc471dec6b871f7b4415" translate="yes" xml:space="preserve">
          <source>The precision is not applicable. If the precision is specified an &lt;a href=&quot;illegalformatprecisionexception&quot;&gt;&lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">精度は適用されません。精度を指定すると、&lt;a href=&quot;illegalformatprecisionexception&quot;&gt; &lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="73c2e0008148d7f138652dae3090ecc94203eec5" translate="yes" xml:space="preserve">
          <source>The precision is not applicable. If the precision is specified then an &lt;a href=&quot;illegalformatprecisionexception&quot;&gt;&lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">精度は適用されません。精度が指定されている場合、&lt;a href=&quot;illegalformatprecisionexception&quot;&gt; &lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="9f948c10e382d2f7768291cb8552af2625096c3e" translate="yes" xml:space="preserve">
          <source>The precision is the maximum number of characters to be written to the output. The precision is applied before the width, thus the output will be truncated to &lt;code&gt;precision&lt;/code&gt; characters even if the width is greater than the precision. If the precision is not specified then there is no explicit limit on the number of characters.</source>
          <target state="translated">精度は、出力に書き込まれる最大文字数です。精度は幅の前に適用されるため、幅が精度よりも大きい場合でも、出力は &lt;code&gt;precision&lt;/code&gt; 文字に切り捨てられます。精度が指定されていない場合、文字数に明示的な制限はありません。</target>
        </trans-unit>
        <trans-unit id="5b1e32fea1577f6299edbb4af566a671877a6a6c" translate="yes" xml:space="preserve">
          <source>The precision of a Timestamp object is calculated to be either:</source>
          <target state="translated">Timestampオブジェクトの精度は、どちらかになるように計算されます。</target>
        </trans-unit>
        <trans-unit id="011a0b906162939e49578d08e8c1662e56c9f51a" translate="yes" xml:space="preserve">
          <source>The precision of a zero value is 1.</source>
          <target state="translated">ゼロ値の精度は1です。</target>
        </trans-unit>
        <trans-unit id="7e82e7810d2a873bd46b845642c3dcb0365960ec" translate="yes" xml:space="preserve">
          <source>The predicate set on a &lt;code&gt;FilteredRowSet&lt;/code&gt; object applies a criterion on all rows in a &lt;code&gt;RowSet&lt;/code&gt; object to manage a subset of rows in a &lt;code&gt;RowSet&lt;/code&gt; object. This criterion governs the subset of rows that are visible and also defines which rows can be modified, deleted or inserted.</source>
          <target state="translated">上の述語セット &lt;code&gt;FilteredRowSet&lt;/code&gt; オブジェクトは、内のすべての行に基準を適用 &lt;code&gt;RowSet&lt;/code&gt; 内の行のサブセットを管理するためのオブジェクト &lt;code&gt;RowSet&lt;/code&gt; オブジェクト。この基準は、表示される行のサブセットを管理し、変更、削除、または挿入できる行も定義します。</target>
        </trans-unit>
        <trans-unit id="fa7e902fc875b9d16b011208a78c742ef3d3df14" translate="yes" xml:space="preserve">
          <source>The predicate which can be used for finding a match on a subsequence of a string</source>
          <target state="translated">文字列の部分列にマッチするものを見つけるために使用できる述語</target>
        </trans-unit>
        <trans-unit id="17aa8f7febdaa3dd39b9259abe1f54bf9f0bebab" translate="yes" xml:space="preserve">
          <source>The predicate which can be used for matching an input string against this pattern.</source>
          <target state="translated">このパターンに対して入力文字列をマッチングさせるために使用できる述語。</target>
        </trans-unit>
        <trans-unit id="4f4b2728c2d9fd894664edd48acbeb413a1af02a" translate="yes" xml:space="preserve">
          <source>The predicate which can be used for matching on a string</source>
          <target state="translated">文字列のマッチングに使用できる述語</target>
        </trans-unit>
        <trans-unit id="93d5400fe79116558dbb225fbe571b21c4ae79c8" translate="yes" xml:space="preserve">
          <source>The preference node that emitted the event.</source>
          <target state="translated">イベントを発生させたプリファレンスノード。</target>
        </trans-unit>
        <trans-unit id="01203bc40cdd0fc728a1cb94001dc99438b063b0" translate="yes" xml:space="preserve">
          <source>The preferred (natural) size.</source>
          <target state="translated">好ましい(自然な)サイズ。</target>
        </trans-unit>
        <trans-unit id="668f70b2a4daaa09d8171ffcd2d7649a4140024b" translate="yes" xml:space="preserve">
          <source>The preferred (natural) size. For a component &lt;code&gt;comp&lt;/code&gt;, this should be equal to either &lt;code&gt;comp.getPreferredSize().width&lt;/code&gt; or &lt;code&gt;comp.getPreferredSize().height&lt;/code&gt;.</source>
          <target state="translated">推奨される（自然な）サイズ。コンポーネント &lt;code&gt;comp&lt;/code&gt; の場合、これは &lt;code&gt;comp.getPreferredSize().width&lt;/code&gt; または &lt;code&gt;comp.getPreferredSize().height&lt;/code&gt; いずれかと等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="bee2604a2c9080ffc366e1be25ae9500c7ea3565" translate="yes" xml:space="preserve">
          <source>The preferred alternative to this method is &lt;a href=&quot;#orElseThrow()&quot;&gt;&lt;code&gt;orElseThrow()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドの推奨される代替手段は&lt;a href=&quot;#orElseThrow()&quot;&gt; &lt;code&gt;orElseThrow()&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="d6e11d6aa454b661b4e798d0b01d95991a0663d3" translate="yes" xml:space="preserve">
          <source>The preferred form is the official IANA primary name for an encoding. Applications which stream text data should always specify the charset in the mime type, which necessitates obtaining the encoding of the host platform for data (eg files) stored in that platform's encoding. A &lt;code&gt;CharSet&lt;/code&gt; which corresponds to this and is suitable for use in a mime-type for a &lt;code&gt;DocFlavor&lt;/code&gt; can be obtained from &lt;a href=&quot;#hostEncoding&quot;&gt;&lt;code&gt;DocFlavor.hostEncoding&lt;/code&gt;&lt;/a&gt; This may not always be the primary IANA name but is guaranteed to be understood by this VM. For common flavors, the pre-defined *HOST &lt;code&gt;DocFlavors&lt;/code&gt; may be used.</source>
          <target state="translated">推奨される形式は、エンコーディングの公式IANAプライマリ名です。テキストデータをストリーミングするアプリケーションは、常にmimeタイプの文字セットを指定する必要があります。そのため、ホストプラットフォームのエンコーディングで保存されているデータ（ファイルなど）のエンコーディングを取得する必要があります。これに対応し、 &lt;code&gt;DocFlavor&lt;/code&gt; のmimeタイプでの使用に適した &lt;code&gt;CharSet&lt;/code&gt; は、DocFlavor.hostEncodingから取得でき&lt;a href=&quot;#hostEncoding&quot;&gt; &lt;code&gt;DocFlavor.hostEncoding&lt;/code&gt; &lt;/a&gt;これは常にプライマリIANA名であるとは限りませんが、このVMによって理解されることが保証されています。一般的なフレーバーの場合、事前定義された* &lt;code&gt;DocFlavors&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="795459da550b399518e8f16108cfa6f315f51f3c" translate="yes" xml:space="preserve">
          <source>The preferred form is the official IANA primary name for an encoding. Applications which stream text data should always specify the charset in the mime type, which necessitates obtaining the encoding of the host platform for data (eg files) stored in that platform's encoding. A CharSet which corresponds to this and is suitable for use in a mime-type for a DocFlavor can be obtained from &lt;a href=&quot;docflavor#hostEncoding&quot;&gt;&lt;code&gt;DocFlavor.hostEncoding&lt;/code&gt;&lt;/a&gt; This may not always be the primary IANA name but is guaranteed to be understood by this VM. For common flavors, the pre-defined *HOST DocFlavors may be used.</source>
          <target state="translated">推奨される形式は、エンコーディングの正式なIANAプライマリ名です。テキストデータをストリーミングするアプリケーションでは、常にMIMEタイプの文字セットを指定する必要があります。これにより、プラットフォームのエンコーディングに格納されているデータ（ファイルなど）のホストプラットフォームのエンコーディングを取得する必要があります。これに対応し、DocFlavorのMIMEタイプでの使用に適したCharSetは、DocFlavor.hostEncodingから取得でき&lt;a href=&quot;docflavor#hostEncoding&quot;&gt; &lt;code&gt;DocFlavor.hostEncoding&lt;/code&gt; &lt;/a&gt;これは、常にプライマリIANA名であるとは限りませんが、このVMによって理解されることが保証されています。一般的なフレーバーの場合、事前定義された* HOST DocFlavorsを使用できます。</target>
        </trans-unit>
        <trans-unit id="9d4fefc085f821e9d3a5fbae52dac81c3effbc7e" translate="yes" xml:space="preserve">
          <source>The preferred grid size that can be laid out by the grid bag layout.</source>
          <target state="translated">グリッドバッグのレイアウトでレイアウトできる好ましいグリッドサイズ。</target>
        </trans-unit>
        <trans-unit id="05d8afb011f2d6aa97450b5eeed5331327e17a1b" translate="yes" xml:space="preserve">
          <source>The preferred height of a grid layout is the largest preferred height of all of the components in the container times the number of rows, plus the vertical padding times the number of rows minus one, plus the top and bottom insets of the target container.</source>
          <target state="translated">グリッドレイアウトの好ましい高さは、コンテナ内のすべてのコンポーネントの最大の好ましい高さに行数を乗じたものに、垂直方向のパディングを行数から1を引いた値に加えて、ターゲットコンテナの上下のインセットを加えたものである。</target>
        </trans-unit>
        <trans-unit id="c8a8514ae55eb27d43368a36b34b29a4a95ecea4" translate="yes" xml:space="preserve">
          <source>The preferred scale of the returned result is equal to &lt;code&gt;this.scale()/2&lt;/code&gt;. The value of the returned result is always within one ulp of the exact decimal value for the precision in question. If the rounding mode is &lt;a href=&quot;roundingmode#HALF_UP&quot;&gt;&lt;code&gt;HALF_UP&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;roundingmode#HALF_DOWN&quot;&gt;&lt;code&gt;HALF_DOWN&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;roundingmode#HALF_EVEN&quot;&gt;&lt;code&gt;HALF_EVEN&lt;/code&gt;&lt;/a&gt;, the result is within one half an ulp of the exact decimal value.</source>
          <target state="translated">返される結果の優先スケールは &lt;code&gt;this.scale()/2&lt;/code&gt; に等しくなります。返される結果の値は、問題の精度の正確な10進値の1ulp以内に常にあります。丸めモードが&lt;a href=&quot;roundingmode#HALF_UP&quot;&gt; &lt;code&gt;HALF_UP&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;roundingmode#HALF_DOWN&quot;&gt; &lt;code&gt;HALF_DOWN&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;roundingmode#HALF_EVEN&quot;&gt; &lt;code&gt;HALF_EVEN&lt;/code&gt; の&lt;/a&gt;場合、結果は正確な10進値の2分の1ulp以内になります。</target>
        </trans-unit>
        <trans-unit id="97d21f85809a776457475782a29383e91f9fd0e0" translate="yes" xml:space="preserve">
          <source>The preferred size of a &lt;code&gt;ScrollPane&lt;/code&gt; is the size of the insets, plus the preferred size of the viewport, plus the preferred size of the visible headers, plus the preferred size of the scrollbars that will appear given the current view and the current scrollbar displayPolicies.</source>
          <target state="translated">&lt;code&gt;ScrollPane&lt;/code&gt; の推奨サイズは、インセットのサイズ、ビューポートの推奨サイズ、表示されるヘッダーの推奨サイズ、および現在のビューと現在のスクロールバーのdisplayPoliciesで表示されるスクロールバーの推奨サイズです。</target>
        </trans-unit>
        <trans-unit id="7e0c9711b77e17c2c4489dd5f3a52974aebe48d6" translate="yes" xml:space="preserve">
          <source>The preferred size of the radio button</source>
          <target state="translated">ラジオボタンの好ましいサイズ</target>
        </trans-unit>
        <trans-unit id="5e6038f90eeaa8ca2ee7e55f1a245305b2c41a38" translate="yes" xml:space="preserve">
          <source>The preferred way to listen for changes in list selection is to add &lt;code&gt;ListSelectionListener&lt;/code&gt;s directly to the &lt;code&gt;JList&lt;/code&gt;. &lt;code&gt;JList&lt;/code&gt; then takes care of listening to the selection model and notifying your listeners of change.</source>
          <target state="translated">リスト選択の変更をリッスンするための推奨される方法は、 &lt;code&gt;ListSelectionListener&lt;/code&gt; を &lt;code&gt;JList&lt;/code&gt; に直接追加することです。 &lt;code&gt;JList&lt;/code&gt; 、JListは、選択モデルをリッスンし、リスナーに変更を通知します。</target>
        </trans-unit>
        <trans-unit id="48639e84ad6bcbf4597e147d7f6d16619a7c0136" translate="yes" xml:space="preserve">
          <source>The preferred width of a grid layout is the largest preferred width of all of the components in the container times the number of columns, plus the horizontal padding times the number of columns minus one, plus the left and right insets of the target container.</source>
          <target state="translated">グリッドレイアウトの好ましい幅は、コンテナ内のすべての構成要素の最大の好ましい幅に列数を掛けたものに、水平方向のパディングを掛けたものに列数から1を引いたものを加えたものに、対象コンテナの左右のインセットを加えたものである。</target>
        </trans-unit>
        <trans-unit id="b2b470a8c702b5603e9fd56840aa453b3eb2223e" translate="yes" xml:space="preserve">
          <source>The preferredSize of a JViewport whose view is this Scrollable.</source>
          <target state="translated">このビューがScrollableであるJViewportのpreferredSize。</target>
        </trans-unit>
        <trans-unit id="0845b5b36ca2d4a9b8425c1235452d096e88e50c" translate="yes" xml:space="preserve">
          <source>The preferredSize of the list depends upon the layout orientation.</source>
          <target state="translated">リストのpreferredSizeは、レイアウトの向きに依存します。</target>
        </trans-unit>
        <trans-unit id="9f1ee0aa7a4e77fdaf06191164b7988a841284af" translate="yes" xml:space="preserve">
          <source>The preferredSize of the list is total height of the rows and the maximum width of the cells. If JList.fixedCellHeight is specified then the total height of the rows is just (cellVerticalMargins + fixedCellHeight) * model.getSize() where rowVerticalMargins is the space we allocate for drawing the yellow focus outline. Similarly if fixedCellWidth is specified then we just use that.</source>
          <target state="translated">リストのpreferredSizeは、行の高さとセルの最大幅の合計です。JList.fixedCellHeightが指定されている場合、行の全高は(cellVerticalMargins+fixedCellHeight)*model.getSize()となります。同様に、fixedCellWidthが指定されている場合は、それを使用します。</target>
        </trans-unit>
        <trans-unit id="4eac60dfdfde299257ae10fdc0b835ebccd24913" translate="yes" xml:space="preserve">
          <source>The prefix assigned to a &lt;code&gt;QName&lt;/code&gt; might &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; be valid in a different context. For example, a &lt;code&gt;QName&lt;/code&gt; may be assigned a prefix in the context of parsing a document but that prefix may be invalid in the context of a different document.</source>
          <target state="translated">割り当てられたプレフィックス &lt;code&gt;QName&lt;/code&gt; あります&lt;strong&gt;&lt;em&gt;しないで&lt;/em&gt;&lt;/strong&gt;別のコンテキストで有効です。たとえば、 &lt;code&gt;QName&lt;/code&gt; には、ドキュメントの解析のコンテキストでプレフィックスが割り当てられている場合がありますが、そのプレフィックスは別のドキュメントのコンテキストでは無効である可能性があります。</target>
        </trans-unit>
        <trans-unit id="1623642ae83456ebc262cddb280ef298b22cf43d" translate="yes" xml:space="preserve">
          <source>The prefix concept is used to handle root directories on UNIX platforms, and drive specifiers, root directories and UNC pathnames on Microsoft Windows platforms, as follows:</source>
          <target state="translated">プレフィックスの概念は、UNIXプラットフォームではルートディレクトリ、Microsoft Windowsプラットフォームではドライブ指定子、ルートディレクトリ、UNCパス名を以下のように扱うために使用されます。</target>
        </trans-unit>
        <trans-unit id="83c74b98c1c103adeb72e47f23638fe0c6b5dd97" translate="yes" xml:space="preserve">
          <source>The prefix is included in &lt;code&gt;QName&lt;/code&gt; to retain lexical information &lt;strong&gt;&lt;em&gt;when present&lt;/em&gt;&lt;/strong&gt; in an &lt;a href=&quot;../transform/source&quot;&gt;&lt;code&gt;XML input source&lt;/code&gt;&lt;/a&gt;. The prefix is &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; used in &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;QName.equals(Object)&lt;/code&gt;&lt;/a&gt; or to compute the &lt;a href=&quot;#hashCode()&quot;&gt;&lt;code&gt;QName.hashCode()&lt;/code&gt;&lt;/a&gt;. Equality and the hash code are defined using &lt;strong&gt;&lt;em&gt;only&lt;/em&gt;&lt;/strong&gt; the Namespace URI and local part.</source>
          <target state="translated">プレフィックスは &lt;code&gt;QName&lt;/code&gt; に含まれており、&lt;a href=&quot;../transform/source&quot;&gt; &lt;code&gt;XML input source&lt;/code&gt; &lt;/a&gt;&lt;strong&gt;&lt;em&gt;に存在&lt;/em&gt;&lt;/strong&gt;する&lt;strong&gt;&lt;em&gt;場合に&lt;/em&gt;&lt;/strong&gt;字句情報を保持します。プレフィックスは、&lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;QName.equals(Object)&lt;/code&gt; で、&lt;/a&gt;または&lt;a href=&quot;#hashCode()&quot;&gt; &lt;code&gt;QName.hashCode()&lt;/code&gt; &lt;/a&gt;を計算するために使用され&lt;strong&gt;&lt;em&gt;ません&lt;/em&gt;&lt;/strong&gt;。等価性とハッシュコードは、名前空間URIとローカル部分&lt;strong&gt;&lt;em&gt;のみ&lt;/em&gt;&lt;/strong&gt;を使用して定義されます。&lt;strong&gt;&lt;em&gt;&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;&lt;/em&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f0a33b763f461c55c714ee683f971a7242fb300" translate="yes" xml:space="preserve">
          <source>The prefix value &lt;strong&gt;&lt;em&gt;CANNOT&lt;/em&gt;&lt;/strong&gt; be represented in the &lt;code&gt;String&lt;/code&gt; and will be set to &lt;a href=&quot;../xmlconstants#DEFAULT_NS_PREFIX&quot;&gt;&lt;code&gt;XMLConstants.DEFAULT_NS_PREFIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プレフィックス値は&lt;strong&gt;&lt;em&gt;ことはできません&lt;/em&gt;&lt;/strong&gt;で表現することが &lt;code&gt;String&lt;/code&gt; とに設定されます&lt;a href=&quot;../xmlconstants#DEFAULT_NS_PREFIX&quot;&gt; &lt;code&gt;XMLConstants.DEFAULT_NS_PREFIX&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e1c1be1011e46771e6c940b6b8fa6d5e62a87e1" translate="yes" xml:space="preserve">
          <source>The prefixes, suffixes, and various symbols used for infinity, digits, thousands separators, decimal separators, etc. may be set to arbitrary values, and they will appear properly during formatting. However, care must be taken that the symbols and strings do not conflict, or parsing will be unreliable. For example, either the positive and negative prefixes or the suffixes must be distinct for &lt;code&gt;DecimalFormat.parse()&lt;/code&gt; to be able to distinguish positive from negative values. (If they are identical, then &lt;code&gt;DecimalFormat&lt;/code&gt; will behave as if no negative subpattern was specified.) Another example is that the decimal separator and thousands separator should be distinct characters, or parsing will be impossible.</source>
          <target state="translated">接頭辞、接尾辞、および無限、数字、桁区切り記号、小数点記号などに使用されるさまざまな記号は、任意の値に設定でき、フォーマット中に正しく表示されます。ただし、記号と文字列が競合しないように注意する必要があります。そうしないと、解析が信頼できなくなります。たとえば、 &lt;code&gt;DecimalFormat.parse()&lt;/code&gt; が正の値と負の値を区別できるようにするには、正と負の接頭辞または接尾辞を区別する必要があります。 （それらが同一の場合、 &lt;code&gt;DecimalFormat&lt;/code&gt; は、負のサブパターンが指定されなかったかのように動作します。）別の例は、小数点と3桁ごとの区切り文字が異なる文字である必要があります。そうしないと、解析ができなくなります。</target>
        </trans-unit>
        <trans-unit id="dfe9500d76701215dda5f0694197cf9ce7cabc59" translate="yes" xml:space="preserve">
          <source>The preprocessing operations &lt;code&gt;\l&lt;/code&gt;&lt;code&gt;\u&lt;/code&gt;, &lt;code&gt;\L&lt;/code&gt;, and &lt;code&gt;\U&lt;/code&gt;.</source>
          <target state="translated">前処理操作 &lt;code&gt;\l&lt;/code&gt; &lt;code&gt;\u&lt;/code&gt; 、 &lt;code&gt;\L&lt;/code&gt; 、および &lt;code&gt;\U&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c9c9b0afc43dff8f62f02bd5e510a84044b62add" translate="yes" xml:space="preserve">
          <source>The presence of a &quot;throws TooManyListenersException&quot; clause on any given concrete implementation of the normally multicast &quot;void addXyzEventListener&quot; event listener registration pattern is used to annotate that interface as implementing a unicast Listener special case, that is, that one and only one Listener may be registered on the particular event listener source concurrently.</source>
          <target state="translated">通常マルチキャストの &quot;void addXyzEventListener&quot; イベント・リスナー登録パターンの任意の具体的な実装に &quot;throwsTooManyListenersException&quot; 節が存在することは、ユニキャスト・リスナーの特殊なケースを実装しているインターフェイスに注釈を付けるために使用されます。</target>
        </trans-unit>
        <trans-unit id="bcfe2fa218fb85c049078854e31cba9eb33712aa" translate="yes" xml:space="preserve">
          <source>The presence of the &lt;code&gt;setProduct&lt;/code&gt; method now means that the &lt;code&gt;Product&lt;/code&gt; attribute is read/write. As before, the value of this attribute is an &lt;code&gt;ObjectName&lt;/code&gt;. When the attribute is set, the &lt;code&gt;ObjectName&lt;/code&gt; must be converted into the &lt;code&gt;ProductMXBean&lt;/code&gt; object that the &lt;code&gt;setProduct&lt;/code&gt; method expects. This object will be an MXBean proxy for the given &lt;code&gt;ObjectName&lt;/code&gt; in the same MBean Server.</source>
          <target state="translated">&lt;code&gt;setProduct&lt;/code&gt; メソッドの存在は、 &lt;code&gt;Product&lt;/code&gt; 属性が読み取り/書き込みであることを意味します。前と同じように、この属性の値は &lt;code&gt;ObjectName&lt;/code&gt; です。属性が設定されている場合、 &lt;code&gt;ObjectName&lt;/code&gt; は、 &lt;code&gt;setProduct&lt;/code&gt; メソッドが予期する &lt;code&gt;ProductMXBean&lt;/code&gt; オブジェクトに変換する必要があります。このオブジェクトは、同じMBeanサーバー内の指定された &lt;code&gt;ObjectName&lt;/code&gt; の MXBeanプロキシになります。</target>
        </trans-unit>
        <trans-unit id="95fd8050fdd45b3295eab4ae02a17e8850afef7c" translate="yes" xml:space="preserve">
          <source>The preview panel property name.</source>
          <target state="translated">プレビューパネルのプロパティ名です。</target>
        </trans-unit>
        <trans-unit id="f3c1a6d5e06c70c525e18d6c292218418c439f71" translate="yes" xml:space="preserve">
          <source>The previous &lt;code&gt;Node&lt;/code&gt; in the set being iterated over, or &lt;code&gt;null&lt;/code&gt; if there are no more members in that set.</source>
          <target state="translated">セット内の前の &lt;code&gt;Node&lt;/code&gt; が繰り返されるか、そのセットにメンバーがもうない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6099ffaa8e5a95edca2a939c252763b26b2f5933" translate="yes" xml:space="preserve">
          <source>The previous example assumes you have not enabled filtering. If you have enabled filtering &lt;code&gt;convertRowIndexToView&lt;/code&gt; will return -1 for locations that are not visible in the view.</source>
          <target state="translated">前の例では、フィルタリングが有効になっていないことを前提としています。フィルタリングを有効にしている場合、 &lt;code&gt;convertRowIndexToView&lt;/code&gt; は、ビューに表示されていない場所に対して-1を返します。</target>
        </trans-unit>
        <trans-unit id="70c0c9bb4cb63f228dd9dcd36da40d2bf9a2afb1" translate="yes" xml:space="preserve">
          <source>The previous interest set</source>
          <target state="translated">前々からの関心事セット</target>
        </trans-unit>
        <trans-unit id="f7113d8eb1505536f0ceef50cb4ab773d8857fa3" translate="yes" xml:space="preserve">
          <source>The previously-attached object, if any, otherwise &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">以前にアタッチされたオブジェクト（ある場合）、それ以外の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3eace7397efd4ce2c5bc4bde921c89ec3d4523a0" translate="yes" xml:space="preserve">
          <source>The primary API of interest in this class for 3rd party component authors are the three methods which retrieve painters: #getBackgroundPainter, #getForegroundPainter, and #getBorderPainter.</source>
          <target state="translated">サードパーティコンポーネントの作者にとってこのクラスの主なAPIは、ペインターを取得する3つのメソッドです。それは #getBackgroundPainter,#getForegroundPainter,そして #getBorderPainter です。</target>
        </trans-unit>
        <trans-unit id="3ab68026a150f7949b7b1dc414949fb8e8e07d81" translate="yes" xml:space="preserve">
          <source>The primary alternative to using this interface throughout your application is as follows.</source>
          <target state="translated">アプリケーション全体でこのインターフェイスを使用する第一の選択肢は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="bf540bb867becf7faa8d8a8f6a3aafda966d70ed" translate="yes" xml:space="preserve">
          <source>The primary distinction of an &lt;code&gt;SSLEngine&lt;/code&gt; is that it operates on inbound and outbound byte streams, independent of the transport mechanism. It is the responsibility of the &lt;code&gt;SSLEngine&lt;/code&gt; user to arrange for reliable I/O transport to the peer. By separating the SSL/TLS abstraction from the I/O transport mechanism, the &lt;code&gt;SSLEngine&lt;/code&gt; can be used for a wide variety of I/O types, such as &lt;a href=&quot;../../../java/nio/channels/spi/abstractselectablechannel#configureBlocking-boolean-&quot;&gt;&lt;code&gt;non-blocking I/O (polling)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../java/nio/channels/selector&quot;&gt;&lt;code&gt;selectable non-blocking I/O&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../java/net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; and the traditional Input/OutputStreams, local &lt;a href=&quot;../../../java/nio/bytebuffer&quot;&gt;&lt;code&gt;ByteBuffers&lt;/code&gt;&lt;/a&gt; or byte arrays, &lt;a href=&quot;http://www.jcp.org/en/jsr/detail?id=203&quot;&gt; future asynchronous I/O models &lt;/a&gt;, and so on.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; の主な違いは、トランスポートメカニズムに関係なく、インバウンドとアウトバウンドのバイトストリームで動作することです。ピアへの信頼性の高いI / Oトランスポートを準備するのは、 &lt;code&gt;SSLEngine&lt;/code&gt; ユーザーの責任です。 SSL / TLSの抽象化をI / Oトランスポートメカニズムから分離することにより、 &lt;code&gt;SSLEngine&lt;/code&gt; は、&lt;a href=&quot;../../../java/nio/channels/spi/abstractselectablechannel#configureBlocking-boolean-&quot;&gt; &lt;code&gt;non-blocking I/O (polling)&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../../../java/nio/channels/selector&quot;&gt; &lt;code&gt;selectable non-blocking I/O&lt;/code&gt; &lt;/a&gt;など、さまざまなI / Oタイプに使用できます。&lt;a href=&quot;../../../java/net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt;と従来の入出力ストリーム、ローカル&lt;a href=&quot;../../../java/nio/bytebuffer&quot;&gt; &lt;code&gt;ByteBuffers&lt;/code&gt; &lt;/a&gt;またはバイト配列、&lt;a href=&quot;http://www.jcp.org/en/jsr/detail?id=203&quot;&gt;将来の非同期I / Oモデル&lt;/a&gt;など。</target>
        </trans-unit>
        <trans-unit id="f9ee17cce91342ad50a57f1b7253427e39e222db" translate="yes" xml:space="preserve">
          <source>The primary distinction of an &lt;code&gt;SSLEngine&lt;/code&gt; is that it operates on inbound and outbound byte streams, independent of the transport mechanism. It is the responsibility of the &lt;code&gt;SSLEngine&lt;/code&gt; user to arrange for reliable I/O transport to the peer. By separating the SSL/TLS/DTLS abstraction from the I/O transport mechanism, the &lt;code&gt;SSLEngine&lt;/code&gt; can be used for a wide variety of I/O types, such as &lt;a href=&quot;../../../java/nio/channels/spi/abstractselectablechannel#configureBlocking(boolean)&quot;&gt;&lt;code&gt;non-blocking I/O (polling)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../java/nio/channels/selector&quot;&gt;&lt;code&gt;selectable non-blocking I/O&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../java/net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; and the traditional Input/OutputStreams, local &lt;a href=&quot;../../../java/nio/bytebuffer&quot;&gt;&lt;code&gt;ByteBuffers&lt;/code&gt;&lt;/a&gt; or byte arrays, &lt;a href=&quot;http://www.jcp.org/en/jsr/detail?id=203&quot;&gt; future asynchronous I/O models &lt;/a&gt;, and so on.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; の主な違いは、トランスポートメカニズムとは関係なく、インバウンドとアウトバウンドのバイトストリームで動作することです。ピアへの信頼性の高いI / Oトランスポートを手配するのは、 &lt;code&gt;SSLEngine&lt;/code&gt; ユーザーの責任です。 SSL / TLS / DTLS抽象化をI / Oトランスポートメカニズムから分離することにより、 &lt;code&gt;SSLEngine&lt;/code&gt; は、&lt;a href=&quot;../../../java/nio/channels/spi/abstractselectablechannel#configureBlocking(boolean)&quot;&gt; &lt;code&gt;non-blocking I/O (polling)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../java/nio/channels/selector&quot;&gt; &lt;code&gt;selectable non-blocking I/O&lt;/code&gt; &lt;/a&gt;など、さまざまなI / Oタイプに使用できます。O、&lt;a href=&quot;../../../java/net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt;および従来のInput / OutputStreams、ローカル&lt;a href=&quot;../../../java/nio/bytebuffer&quot;&gt; &lt;code&gt;ByteBuffers&lt;/code&gt; &lt;/a&gt;またはバイト配列、&lt;a href=&quot;http://www.jcp.org/en/jsr/detail?id=203&quot;&gt;将来の非同期I / Oモデル&lt;/a&gt;など。</target>
        </trans-unit>
        <trans-unit id="5ca999a61a413f3228e3e710618f31b417d296f9" translate="yes" xml:space="preserve">
          <source>The primary entry point for HTML View implementations to get their attributes is the &lt;a href=&quot;#getViewAttributes(javax.swing.text.View)&quot;&gt;&lt;code&gt;getViewAttributes&lt;/code&gt;&lt;/a&gt; method. This should be implemented to establish the desired policy used to associate attributes with the view. Each HTMLEditorKit (i.e. and therefore each associated JEditorPane) can have its own StyleSheet, but by default one sheet will be shared by all of the HTMLEditorKit instances. HTMLDocument instance can also have a StyleSheet, which holds the document-specific CSS specifications.</source>
          <target state="translated">HTMLビュー実装が属性を取得するための主要なエントリポイントは、&lt;a href=&quot;#getViewAttributes(javax.swing.text.View)&quot;&gt; &lt;code&gt;getViewAttributes&lt;/code&gt; &lt;/a&gt;メソッドです。これは、属性をビューに関連付けるために使用される目的のポリシーを確立するために実装する必要があります。各HTMLEditorKit（つまり、関連する各JEditorPane）は独自のStyleSheetを持つことができますが、デフォルトでは、1つのシートがすべてのHTMLEditorKitインスタンスによって共有されます。 HTMLDocumentインスタンスには、ドキュメント固有のCSS仕様を保持するStyleSheetを含めることもできます。</target>
        </trans-unit>
        <trans-unit id="853c2b2cc138799245561165af6aeca2d462a6c9" translate="yes" xml:space="preserve">
          <source>The primary intent is to support scaling and skewing, though other effects are possible.</source>
          <target state="translated">主な目的は、スケーリングとスキューイングをサポートすることですが、他の効果も可能です。</target>
        </trans-unit>
        <trans-unit id="4616eb214fb3d1763d1d2d39382e94401c0c6dd6" translate="yes" xml:space="preserve">
          <source>The primary method for awaiting completion and extracting results of a task is &lt;a href=&quot;#join()&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;, but there are several variants: The &lt;a href=&quot;future#get()&quot;&gt;&lt;code&gt;Future.get()&lt;/code&gt;&lt;/a&gt; methods support interruptible and/or timed waits for completion and report results using &lt;code&gt;Future&lt;/code&gt; conventions. Method &lt;a href=&quot;#invoke()&quot;&gt;&lt;code&gt;invoke()&lt;/code&gt;&lt;/a&gt; is semantically equivalent to &lt;code&gt;fork(); join()&lt;/code&gt; but always attempts to begin execution in the current thread. The &quot;&lt;em&gt;quiet&lt;/em&gt;&quot; forms of these methods do not extract results or report exceptions. These may be useful when a set of tasks are being executed, and you need to delay processing of results or exceptions until all complete. Method &lt;code&gt;invokeAll&lt;/code&gt; (available in multiple versions) performs the most common form of parallel invocation: forking a set of tasks and joining them all.</source>
          <target state="translated">完了を待ってタスクの結果を抽出するための主要なメソッドは&lt;a href=&quot;#join()&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;ですが、いくつかのバリエーションがあります&lt;a href=&quot;future#get()&quot;&gt; &lt;code&gt;Future.get()&lt;/code&gt; &lt;/a&gt;メソッドは、中断可能または時間指定の完了待機をサポートし、 &lt;code&gt;Future&lt;/code&gt; 規則を使用して結果を報告します。メソッド&lt;a href=&quot;#invoke()&quot;&gt; &lt;code&gt;invoke()&lt;/code&gt; &lt;/a&gt;は、意味的に &lt;code&gt;fork(); join()&lt;/code&gt; と同等です。 join（）ですが、常に現在のスレッドで実行を開始しようとします。これらのメソッドの「&lt;em&gt;クワイエット&lt;/em&gt;」形式は、結果を抽出したり、例外を報告したりしません。これらは、一連のタスクが実行されているときに役立つ場合があり、すべてが完了するまで結果または例外の処理を遅らせる必要があります。メソッド &lt;code&gt;invokeAll&lt;/code&gt; （複数のバージョンで利用可能）は、並列呼び出しの最も一般的な形式を実行します。一連のタスクをフォークし、それらすべてを結合します。</target>
        </trans-unit>
        <trans-unit id="5aa8250cbbb0c762aa091de1f6729c7a726f2772" translate="yes" xml:space="preserve">
          <source>The primary method for awaiting completion and extracting results of a task is &lt;a href=&quot;forkjointask#join--&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;, but there are several variants: The &lt;a href=&quot;future#get--&quot;&gt;&lt;code&gt;Future.get()&lt;/code&gt;&lt;/a&gt; methods support interruptible and/or timed waits for completion and report results using &lt;code&gt;Future&lt;/code&gt; conventions. Method &lt;a href=&quot;forkjointask#invoke--&quot;&gt;&lt;code&gt;invoke()&lt;/code&gt;&lt;/a&gt; is semantically equivalent to &lt;code&gt;fork(); join()&lt;/code&gt; but always attempts to begin execution in the current thread. The &quot;&lt;em&gt;quiet&lt;/em&gt;&quot; forms of these methods do not extract results or report exceptions. These may be useful when a set of tasks are being executed, and you need to delay processing of results or exceptions until all complete. Method &lt;code&gt;invokeAll&lt;/code&gt; (available in multiple versions) performs the most common form of parallel invocation: forking a set of tasks and joining them all.</source>
          <target state="translated">タスクの完了を待ち、結果を抽出するための主要なメソッドは&lt;a href=&quot;forkjointask#join--&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;ですが、いくつかのバリアントがあります&lt;a href=&quot;future#get--&quot;&gt; &lt;code&gt;Future.get()&lt;/code&gt; &lt;/a&gt;メソッドは、割り込みの待機や時間による完了の待機をサポートし、 &lt;code&gt;Future&lt;/code&gt; 規則を使用して結果を報告します。メソッド&lt;a href=&quot;forkjointask#invoke--&quot;&gt; &lt;code&gt;invoke()&lt;/code&gt; &lt;/a&gt;は、意味的には &lt;code&gt;fork(); join()&lt;/code&gt; と同等です。 join（）ですが、常に現在のスレッドで実行を開始しようとします。これらのメソッドの「&lt;em&gt;静かな&lt;/em&gt;」形式は、結果を抽出したり、例外を報告したりしません。これらは、一連のタスクが実行されており、すべてが完了するまで結果または例外の処理を遅らせる必要がある場合に役立ちます。メソッド &lt;code&gt;invokeAll&lt;/code&gt; （複数のバージョンで利用可能）は、最も一般的な形式の並列呼び出しを実行します。タスクのセットをforkし、それらすべてを結合します。</target>
        </trans-unit>
        <trans-unit id="00886361fc8e5debb687daae7baa2873e040b957" translate="yes" xml:space="preserve">
          <source>The primary purpose of this method is for testing frameworks. Per-request headers can be set through one of the &lt;code&gt;HttpRequest&lt;/code&gt;&lt;a href=&quot;httprequest.builder#header(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;headers&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">この方法の主な目的は、フレームワークをテストすることです。リクエストごとのヘッダーは、 &lt;code&gt;HttpRequest&lt;/code&gt; &lt;a href=&quot;httprequest.builder#header(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;headers&lt;/code&gt; &lt;/a&gt;メソッドの1つを介して設定できます。</target>
        </trans-unit>
        <trans-unit id="e7ff3a60b668a9b4f8ca3f3d80ba5d198b1e81f9" translate="yes" xml:space="preserve">
          <source>The primary purpose of this method is to allow callers to specify additional input parameters and options specific to revocation checking. See the class description for an example.</source>
          <target state="translated">このメソッドの主な目的は、呼び出し元が失効チェックに特有の追加の入力パラメータやオプションを指定できるようにすることです。例については、クラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="99d4de701d15e3c0f3d5abd8f5d765bb2d14afb5" translate="yes" xml:space="preserve">
          <source>The primary purpose of this method is to allow callers to specify additional input parameters and options specific to revocation checking. See the class description of &lt;code&gt;CertPathBuilder&lt;/code&gt; for an example.</source>
          <target state="translated">このメソッドの主な目的は、呼び出し元が失効チェックに固有の追加の入力パラメーターとオプションを指定できるようにすることです。例については、 &lt;code&gt;CertPathBuilder&lt;/code&gt; のクラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="9bfe43c7ad82b7b062c6a1e827670b3dcd56247c" translate="yes" xml:space="preserve">
          <source>The primary purpose of this method is to allow callers to specify additional input parameters and options specific to revocation checking. See the class description of &lt;code&gt;CertPathValidator&lt;/code&gt; for an example.</source>
          <target state="translated">このメソッドの主な目的は、呼び出し元が失効チェックに固有の追加の入力パラメーターとオプションを指定できるようにすることです。例については、 &lt;code&gt;CertPathValidator&lt;/code&gt; のクラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="1f3e653a9912f2fb83d0c6901343dcf8706cee3d" translate="yes" xml:space="preserve">
          <source>The primary purpose of this method is to allow programmatic examination of the reasons behind the failure of the opening handshake. Some of these reasons might allow recovery.</source>
          <target state="translated">この方法の第一の目的は、オープニング握手が失敗した理由をプログラム的に検討できるようにすることである。これらの理由のいくつかは、回復を可能にするかもしれない。</target>
        </trans-unit>
        <trans-unit id="0f492c04efa6c01604221d247f621ebc339b6f64" translate="yes" xml:space="preserve">
          <source>The primitive type &lt;code&gt;boolean&lt;/code&gt;.</source>
          <target state="translated">プリミティブ型 &lt;code&gt;boolean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83fc8baed5ef78ca23821a13e04a9d8ddd10f762" translate="yes" xml:space="preserve">
          <source>The primitive type &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">プリミティブ型 &lt;code&gt;byte&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f471c30cb2c84f70470f03c585738bdc64b599e" translate="yes" xml:space="preserve">
          <source>The primitive type &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">プリミティブ型 &lt;code&gt;char&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e44aee72206b87354d815ff88a92f784a937e888" translate="yes" xml:space="preserve">
          <source>The primitive type &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">プリミティブ型 &lt;code&gt;double&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd515036f97bf6ba858fdf01810f65a40a4f0c9c" translate="yes" xml:space="preserve">
          <source>The primitive type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">プリミティブ型 &lt;code&gt;float&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa3a71348ea0fed210633648dce17501818f0109" translate="yes" xml:space="preserve">
          <source>The primitive type &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">プリミティブ型 &lt;code&gt;int&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0dbfb61247c4fbf66782c11b9ea7234fee3f4c1e" translate="yes" xml:space="preserve">
          <source>The primitive type &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">プリミティブ型 &lt;code&gt;long&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbd45dce2a86e7713945fe9ae4375a42101fb99a" translate="yes" xml:space="preserve">
          <source>The primitive type &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">プリミティブ型の &lt;code&gt;short&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13f1d1c5a513be9280a101289705bc830feffc07" translate="yes" xml:space="preserve">
          <source>The principal methods are defined to allow the throwing of an exception. In normal use, no exceptions will be thrown, however one possible implementation would be to obtain the time from a central time server across the network. Obviously, in this case the lookup could fail, and so the method is permitted to throw an exception.</source>
          <target state="translated">主なメソッドは、例外のスローを許可するために定義されています。通常の使用では、例外はスローされませんが、1つの可能性としては、ネットワーク上の中央のタイムサーバから時刻を取得することが考えられます。明らかに、この場合はルックアップに失敗する可能性があるので、このメソッドは例外を投げることが許されています。</target>
        </trans-unit>
        <trans-unit id="00414fce4c7455a893959b39576e22c2ae5eafaa" translate="yes" xml:space="preserve">
          <source>The principal operations on a &lt;code&gt;StringBuffer&lt;/code&gt; are the &lt;code&gt;append&lt;/code&gt; and &lt;code&gt;insert&lt;/code&gt; methods, which are overloaded so as to accept data of any type. Each effectively converts a given datum to a string and then appends or inserts the characters of that string to the string buffer. The &lt;code&gt;append&lt;/code&gt; method always adds these characters at the end of the buffer; the &lt;code&gt;insert&lt;/code&gt; method adds the characters at a specified point.</source>
          <target state="translated">&lt;code&gt;StringBuffer&lt;/code&gt; の主な操作は、 &lt;code&gt;append&lt;/code&gt; メソッドと &lt;code&gt;insert&lt;/code&gt; メソッドです。これらのメソッドは、任意のタイプのデータを受け入れるためにオーバーロードされます。それぞれが特定のデータを文字列に効果的に変換し、その文字列の文字を文字列バッファーに追加または挿入します。 &lt;code&gt;append&lt;/code&gt; メソッドは常に、バッファの末尾にこれらの文字を追加します。 &lt;code&gt;insert&lt;/code&gt; 方法は、指定された時点で文字を追加します。</target>
        </trans-unit>
        <trans-unit id="8d9eb8cbf18b97db213dc84e3622468146efcc16" translate="yes" xml:space="preserve">
          <source>The principal operations on a &lt;code&gt;StringBuilder&lt;/code&gt; are the &lt;code&gt;append&lt;/code&gt; and &lt;code&gt;insert&lt;/code&gt; methods, which are overloaded so as to accept data of any type. Each effectively converts a given datum to a string and then appends or inserts the characters of that string to the string builder. The &lt;code&gt;append&lt;/code&gt; method always adds these characters at the end of the builder; the &lt;code&gt;insert&lt;/code&gt; method adds the characters at a specified point.</source>
          <target state="translated">&lt;code&gt;StringBuilder&lt;/code&gt; の主な操作は、 &lt;code&gt;append&lt;/code&gt; メソッドと &lt;code&gt;insert&lt;/code&gt; メソッドです。これらのメソッドは、任意のタイプのデータを受け入れるようにオーバーロードされます。それぞれが特定のデータを文字列に効果的に変換し、その文字列の文字を文字列ビルダーに追加または挿入します。 &lt;code&gt;append&lt;/code&gt; 方法は、常にビルダーの最後にこれらの文字を追加します。 &lt;code&gt;insert&lt;/code&gt; 方法は、指定された時点で文字を追加します。</target>
        </trans-unit>
        <trans-unit id="cdd711677992dcb1524f6e2386709d058ae3ac67" translate="yes" xml:space="preserve">
          <source>The principal purpose of these additions is to allow the specification of tables to use in encoding abbreviated streams. The built-in JPEG writer will also accept an ordinary &lt;code&gt;ImageWriteParam&lt;/code&gt;, in which case the writer will construct the necessary tables internally.</source>
          <target state="translated">これらの追加の主な目的は、省略されたストリームのエンコードに使用するテーブルの仕様を許可することです。組み込みのJPEGライターは、通常の &lt;code&gt;ImageWriteParam&lt;/code&gt; も受け入れます。この場合、ライターは必要なテーブルを内部的に構築します。</target>
        </trans-unit>
        <trans-unit id="79e1de7f953be5214dc8046cee3435b263a6bc9b" translate="yes" xml:space="preserve">
          <source>The print data and the processing instructions are separate entities. This means that:</source>
          <target state="translated">印刷データと処理命令は別体である。ということになります。</target>
        </trans-unit>
        <trans-unit id="87fa994137d2af295902c75d6d1e468277e6adf3" translate="yes" xml:space="preserve">
          <source>The print data format is unspecified (just an octet stream)</source>
          <target state="translated">印刷データのフォーマットは未指定(単なるオクテットストリーム)</target>
        </trans-unit>
        <trans-unit id="2887ef4584b4a46b117c104e5d5bafd49277b4db" translate="yes" xml:space="preserve">
          <source>The print service indicates that a - possibly transient - problem may require external intervention before the print service can continue.</source>
          <target state="translated">このプリントサービスは、プリントサービスを継続する前に、一時的な問題の可能性があり、外部からの介入を必要とする可能性があることを示しています。</target>
        </trans-unit>
        <trans-unit id="87d74c41b031f63a36b535b9f8f87b980e7f4993" translate="yes" xml:space="preserve">
          <source>The print service indicates that a - possibly transient - problem may require external intervention before the print service can continue. One example of an event that can generate this message is when the printer runs out of paper.</source>
          <target state="translated">このプリントサービスは、プリントサービスを継続する前に、過渡的な問題が発生し、外部からの介入が必要になる可能性があることを示しています。このメッセージを生成するイベントの例としては、プリンタの用紙が不足している場合があります。</target>
        </trans-unit>
        <trans-unit id="8c9efeedc8343f07e9cac56c5db7dfd99892ddd9" translate="yes" xml:space="preserve">
          <source>The print service reports that the job cannot be completed.</source>
          <target state="translated">印刷サービスでは、ジョブを完了できないと報告されています。</target>
        </trans-unit>
        <trans-unit id="6ffca2a80baec343c1fe37408ec848806e832a04" translate="yes" xml:space="preserve">
          <source>The print service reports that the job cannot be completed. The application must resubmit the job.</source>
          <target state="translated">プリントサービスからジョブを完了できないとの報告があります。このアプリケーションでは、ジョブを再送信する必要があります。</target>
        </trans-unit>
        <trans-unit id="ee3379a27f4d6bd5aea086e7d040f37f1b4e28e0" translate="yes" xml:space="preserve">
          <source>The printable area is specified to be a rectangle, within the overall dimensions of a media.</source>
          <target state="translated">印刷可能な領域は、メディアの全体寸法の範囲内で、矩形であることが指定されています。</target>
        </trans-unit>
        <trans-unit id="4a424ad159a01af0ae87f7797a6b6f5420eea6d5" translate="yes" xml:space="preserve">
          <source>The printer attempts to make the external job attribute values take precedence over embedded instructions in the documents' print data, however there is no guarantee.</source>
          <target state="translated">プリンタは、外部ジョブ属性値を文書の印刷データに埋め込まれた命令よりも優先させようとしますが、保証はありません。</target>
        </trans-unit>
        <trans-unit id="c845bc5a10dc5d6856a87ec303fc2db4c49089d3" translate="yes" xml:space="preserve">
          <source>The printer could not access one or more documents passed by reference (i.e., the print data representation object is a &lt;code&gt;URL&lt;/code&gt;).</source>
          <target state="translated">プリンターは、参照によって渡された1つ以上のドキュメントにアクセスできませんでした（つまり、印刷データ表現オブジェクトは &lt;code&gt;URL&lt;/code&gt; です）。</target>
        </trans-unit>
        <trans-unit id="481ecce0067802bcb30b2bcd366ca961b211a6bb" translate="yes" xml:space="preserve">
          <source>The printer could not access one or more documents passed by reference (i.e., the print data representation object is a &lt;code&gt;URL&lt;/code&gt;). This reason is intended to cover any file access problem,including file does not exist and access denied because of an access control problem. Whether the printer aborts the job and moves the job to the &lt;code&gt;ABORTED&lt;/code&gt; job state or prints all documents that are accessible and moves the job to the &lt;code&gt;COMPLETED&lt;/code&gt; job state and adds the &lt;code&gt;COMPLETED_WITH_ERRORS&lt;/code&gt; reason to the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute depends on implementation and/or site policy. This value should be supported if the printer supports doc flavors with &lt;code&gt;URL&lt;/code&gt; print data representation objects.</source>
          <target state="translated">プリンターは、参照によって渡された1つ以上のドキュメントにアクセスできませんでした（つまり、印刷データ表現オブジェクトは &lt;code&gt;URL&lt;/code&gt; です）。この理由は、ファイルが存在せず、アクセス制御の問題のためにアクセスが拒否された場合など、ファイルアクセスの問題をカバーすることを目的としています。プリンターがジョブを中止してジョブを &lt;code&gt;ABORTED&lt;/code&gt; ジョブ状態に移動するか、アクセス可能なすべてのドキュメントを印刷してジョブを &lt;code&gt;COMPLETED&lt;/code&gt; ジョブ状態に移動し、 &lt;code&gt;COMPLETED_WITH_ERRORS&lt;/code&gt; 理由をジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性に追加するかは、実装やサイトポリシーによって異なります。プリンタが &lt;code&gt;URL&lt;/code&gt; 印刷データ表現オブジェクトを含むドキュメントフレーバーをサポートしている場合、この値をサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="22182d19201ff4051207c19a5ee208fd4a5a1b2f" translate="yes" xml:space="preserve">
          <source>The printer decides how to interpret the print data; the way this &quot;autosensing&quot; works is implementation dependent. In general, preformatted autosense print data is provided in a byte oriented representation class (byte array, &lt;code&gt;InputStream&lt;/code&gt;, &lt;code&gt;URL&lt;/code&gt;).</source>
          <target state="translated">プリンタは、印刷データの解釈方法を決定します。この「自動検知」が機能する方法は、実装によって異なります。一般に、事前にフォーマットされたオートセンス印刷データは、バイト指向の表現クラス（バイト配列、 &lt;code&gt;InputStream&lt;/code&gt; 、 &lt;code&gt;URL&lt;/code&gt; ）で提供されます。</target>
        </trans-unit>
        <trans-unit id="420689a193f1513253aa8f7350cd70790dfdb9dd" translate="yes" xml:space="preserve">
          <source>The printer decides how to interpret the print data; the way this &quot;autosensing&quot; works is implementation dependent. In general, preformatted autosense print data is provided in a byte oriented representation class (byte array, InputStream, URL).</source>
          <target state="translated">プリンタは印刷データをどのように解釈するかを決定する;この「オートセンス」の動作方法は実装に依存する。一般的に、あらかじめフォーマットされたオートセンス印刷データは、バイト指向の表現クラス(バイト配列、InputStream、URL)で提供されます。</target>
        </trans-unit>
        <trans-unit id="b8d27c6ece8fd59adc7c9db5b4829fd7026afa41" translate="yes" xml:space="preserve">
          <source>The printer has created the Print Job, but the printer has not finished accessing or accepting all the print data yet.</source>
          <target state="translated">プリンタはプリントジョブを作成しましたが、すべてのプリントデータへのアクセスまたは受け入れがまだ完了していません。</target>
        </trans-unit>
        <trans-unit id="5b838c048d7373b6f5fece71927c2c6d92736461" translate="yes" xml:space="preserve">
          <source>The printer has created the Print Job, but the printer is expecting additional print data before it can move the job into the &lt;code&gt;PROCESSING&lt;/code&gt; state.</source>
          <target state="translated">プリンタは印刷ジョブを作成しましたが、ジョブを &lt;code&gt;PROCESSING&lt;/code&gt; 状態に移行する前に、追加の印刷データを期待しています。</target>
        </trans-unit>
        <trans-unit id="f5116fa6c6a863806c7589febab48774aa25fcd4" translate="yes" xml:space="preserve">
          <source>The printer has created the Print Job, but the printer is expecting additional print data before it can move the job into the &lt;code&gt;PROCESSING&lt;/code&gt; state. If a printer starts processing before it has received all data, the printer removes the &lt;code&gt;JOB_DATA_INSUFFICIENT&lt;/code&gt; reason, but the &lt;code&gt;JOB_INCOMING&lt;/code&gt; reason remains. If a printer starts processing after it has received all data, the printer removes the &lt;code&gt;JOB_DATA_INSUFFICIENT&lt;/code&gt; and &lt;code&gt;JOB_INCOMING&lt;/code&gt; reasons at the same time.</source>
          <target state="translated">プリンタは印刷ジョブを作成しましたが、ジョブを &lt;code&gt;PROCESSING&lt;/code&gt; 状態に移行する前に、追加の印刷データを期待しています。プリンターがすべてのデータを受信する前に処理を開始した場合、プリンターは &lt;code&gt;JOB_DATA_INSUFFICIENT&lt;/code&gt; 理由を削除しますが、 &lt;code&gt;JOB_INCOMING&lt;/code&gt; 理由は残ります。プリンターがすべてのデータを受信した後に処理を開始すると、プリンターは &lt;code&gt;JOB_DATA_INSUFFICIENT&lt;/code&gt; と &lt;code&gt;JOB_INCOMING&lt;/code&gt; の理由を同時に削除します。</target>
        </trans-unit>
        <trans-unit id="2c6e9c3b42f4bb17ba7645de0aa8f126f95272d5" translate="yes" xml:space="preserve">
          <source>The printer has created the Print Job, but the printer is expecting additional print data before it can move the job into the PROCESSING state. If a printer starts processing before it has received all data, the printer removes the JOB_DATA_INSUFFICIENT reason, but the JOB_INCOMING reason remains. If a printer starts processing after it has received all data, the printer removes the JOB_DATA_INSUFFICIENT and JOB_INCOMING reasons at the same time.</source>
          <target state="translated">プリンタは印刷ジョブを作成しましたが、ジョブを処理中の状態に移行する前に、プリンタは追加の印刷データを期待しています。プリンタがすべてのデータを受信する前に処理を開始した場合、プリンタは JOB_DATA_INSUFFICIENT の理由を削除しますが、JOB_INCOMING の理由は残ります。すべてのデータを受信した後にプリンタが処理を開始した場合、プリンタは JOB_DATA_INSUFFICIENT の理由と JOB_INCOMING の理由を同時に削除します。</target>
        </trans-unit>
        <trans-unit id="26f86c1fd10f95e2e1ce6d73964c40d138b16512" translate="yes" xml:space="preserve">
          <source>The printer has detected an error other than ones listed below.</source>
          <target state="translated">プリンタが下記以外のエラーを検出しました。</target>
        </trans-unit>
        <trans-unit id="ee4d72184cd18cc72c7888278ace0c6fd62b60fb" translate="yes" xml:space="preserve">
          <source>The printer has made the job ready for printing, but the output device is not yet printing it, either because the job hasn't reached the output device or because the job is queued in the output device or some other spooler, awaiting the output device to print it.</source>
          <target state="translated">これは、ジョブが出力装置に到達していないか、またはジョブが出力装置や他のスプーラにキューに入っていて、出力装置が印刷するのを待っているためです。</target>
        </trans-unit>
        <trans-unit id="bb06ac1489baa54ea2bee8733b418deb9986e56c" translate="yes" xml:space="preserve">
          <source>The printer has scheduled a job on the output device and is in the process of connecting to a shared network output device (and might not be able to actually start printing the job for an arbitrarily long time depending on the usage of the output device by other servers on the network).</source>
          <target state="translated">プリンタが出力デバイスにジョブをスケジュールしており、共有ネットワークの出力デバイスに接続している最中である(ネットワーク上の他のサーバによる出力デバイスの使用状況によっては、任意の時間、実際にジョブの印刷を開始できない可能性がある)。</target>
        </trans-unit>
        <trans-unit id="8e0bf3607b8e2970cff88cf552730d6f2d8d625d" translate="yes" xml:space="preserve">
          <source>The printer is capable of some type of color printing, such as highlight color or full process color.</source>
          <target state="translated">プリンターは、ハイライトカラーやフルプロセスカラーなど、何らかのカラー印刷が可能です。</target>
        </trans-unit>
        <trans-unit id="c005cdea131511c73720a6f53d9a8366cf1ca01d" translate="yes" xml:space="preserve">
          <source>The printer is currently accepting jobs.</source>
          <target state="translated">現在、プリンターはジョブを受け付けています。</target>
        </trans-unit>
        <trans-unit id="03c387e9c6647fb266c1648f1dc120f6cc016ad4" translate="yes" xml:space="preserve">
          <source>The printer is currently rejecting any jobs sent to it.</source>
          <target state="translated">現在、プリンタに送信されたジョブはすべて拒否されています。</target>
        </trans-unit>
        <trans-unit id="05b2fabb7aa801e323b9d634f91b48efaabae0c1" translate="yes" xml:space="preserve">
          <source>The printer is in the process of stopping the device and will be stopped in a while.</source>
          <target state="translated">プリンターが停止している最中なので、しばらくしてから停止します。</target>
        </trans-unit>
        <trans-unit id="a53658e3838a5dc4333bc6672baea14965848810" translate="yes" xml:space="preserve">
          <source>The printer is in the process of stopping the device and will be stopped in a while. When the device is stopped, the printer will change the &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;STOPPED&lt;/code&gt;. The &lt;code&gt;STOPPING&lt;/code&gt; reason is never an error, even for a printer with a single output device. When an output device ceases accepting jobs, the printer's &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; will have this reason while the output device completes printing.</source>
          <target state="translated">プリンタはデバイスを停止中です。しばらくすると停止します。デバイスが停止すると、プリンターは&lt;a href=&quot;printerstate&quot;&gt; &lt;code&gt;PrinterState&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;STOPPED&lt;/code&gt; に変更します。 &lt;code&gt;STOPPING&lt;/code&gt; の理由は、1つでも出力デバイスとプリンターのため、エラーになることはありません。出力デバイスがジョブの受け入れを停止すると、出力デバイスが印刷を完了する間、プリンターの&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; &lt;/a&gt;にこの理由があります。</target>
        </trans-unit>
        <trans-unit id="c8b0ff98c2f13c970471be7702bd134d6dbdc6cc" translate="yes" xml:space="preserve">
          <source>The printer is in the process of stopping the device and will be stopped in a while. When the device is stopped, the printer will change the &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; to STOPPED. The STOPPING reason is never an error, even for a printer with a single output device. When an output device ceases accepting jobs, the printer's &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; will have this reason while the output device completes printing.</source>
          <target state="translated">プリンターはデバイスの停止処理中であり、しばらくして停止します。デバイスが停止すると、プリンターは&lt;a href=&quot;printerstate&quot;&gt; &lt;code&gt;PrinterState&lt;/code&gt; &lt;/a&gt;をSTOPPEDに変更します。 STOPPING理由は、単一の出力デバイスを持つプリンターであっても、決してエラーではありません。出力デバイスがジョブの受け入れを停止すると、出力デバイスが印刷を完了する間、プリンターの&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; &lt;/a&gt;にこの理由があります。</target>
        </trans-unit>
        <trans-unit id="54f62f72799c6d5e9a37cf0c00f4e1b535987780" translate="yes" xml:space="preserve">
          <source>The printer is not capable of any type of color printing.</source>
          <target state="translated">このプリンターは、どのようなカラー印刷にも対応していません。</target>
        </trans-unit>
        <trans-unit id="7b38e5fa5b8409dddee614ca089cd0362c79f47f" translate="yes" xml:space="preserve">
          <source>The printer is off-line and accepting no jobs.</source>
          <target state="translated">プリンタがオフラインで、ジョブを受け付けていません。</target>
        </trans-unit>
        <trans-unit id="1afe6d85c12a8a8b5a7f1edd564ce3193ddf2261" translate="yes" xml:space="preserve">
          <source>The printer is off-line and accepting no jobs. All &lt;code&gt;PENDING&lt;/code&gt; jobs are put into the &lt;code&gt;PENDING_HELD&lt;/code&gt; state. This situation could be true if the service's or document transform's input is impaired or broken.</source>
          <target state="translated">プリンタはオフラインであり、ジョブを受け入れていません。すべての &lt;code&gt;PENDING&lt;/code&gt; ジョブは &lt;code&gt;PENDING_HELD&lt;/code&gt; 状態になります。この状況は、サービスまたはドキュメント変換の入力が損なわれている、または壊れている場合に当てはまる可能性があります。</target>
        </trans-unit>
        <trans-unit id="a76ccbd08fd7ed213da23153a2832c1f11f3ddb7" translate="yes" xml:space="preserve">
          <source>The printer is off-line and accepting no jobs. All PENDING jobs are put into the PENDING_HELD state. This situation could be true if the service's or document transform's input is impaired or broken.</source>
          <target state="translated">プリンタはオフラインで、ジョブを受け付けていません。すべての保留中のジョブは PENDING_HELD 状態になります。この状況は、サービスまたはドキュメントトランスフォームの入力が障害または破損している場合に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="84ea5b5a51cabfc6ce87f4bba805d145bf23c69d" translate="yes" xml:space="preserve">
          <source>The printer is transmitting the job to the output device.</source>
          <target state="translated">プリンタは出力装置にジョブを送信しています。</target>
        </trans-unit>
        <trans-unit id="5e1b431e7082d79aa73c78295a787c0420e076b7" translate="yes" xml:space="preserve">
          <source>The printer makes no attempt to make the external job attribute values take precedence over embedded instructions in the documents' print data.</source>
          <target state="translated">プリンタは、外部ジョブ属性値を、文書の印刷データに埋め込まれた指示よりも優先させようとはしない。</target>
        </trans-unit>
        <trans-unit id="fc15b2e767f5374c6b094a0dfd57a256c58156f6" translate="yes" xml:space="preserve">
          <source>The printer should make reasonable attempts to print the job, even if it cannot print it exactly as specified.</source>
          <target state="translated">プリンタは、ジョブを指定通りに印刷できない場合でも、合理的な方法で印刷を試みなければなりません。</target>
        </trans-unit>
        <trans-unit id="e18a8686bb628a68a2eaf4c30403e4349bfe5fcd" translate="yes" xml:space="preserve">
          <source>The printer state is unknown.</source>
          <target state="translated">プリンタの状態は不明です。</target>
        </trans-unit>
        <trans-unit id="95f20fd944e4a43232c41915ad9d367576e3c214" translate="yes" xml:space="preserve">
          <source>The printing system may request a page index more than once. On each occasion equal PageFormat parameters will be supplied.</source>
          <target state="translated">印刷シ ス テ ムは、 ページ イ ンデ ッ ク ス を複数回要求す る こ と がで き ます。その都度,同じ PageFormat パラ メータが与えられます。</target>
        </trans-unit>
        <trans-unit id="63d426c5363736a80887b7073605a6606087a1b4" translate="yes" xml:space="preserve">
          <source>The printing system will call &lt;code&gt;Printable.print(..)&lt;/code&gt; with page indexes which increase monotonically, although as noted above, the &lt;code&gt;Printable&lt;/code&gt; should expect multiple calls for a page index and that page indexes may be skipped, when page ranges are specified by the client, or by a user through a print dialog.</source>
          <target state="translated">印刷システムは、単調に増加するページインデックスを使用して &lt;code&gt;Printable.print(..)&lt;/code&gt; を呼び出しますが、上記のように、 &lt;code&gt;Printable&lt;/code&gt; はページインデックスの複数の呼び出しを予期する必要があり、ページ範囲がクライアントによって指定されている場合、ページインデックスはスキップされる可能性があります、またはユーザーが印刷ダイアログを介して。</target>
        </trans-unit>
        <trans-unit id="08bc056d9ef081c3233d58a84e37a59beef78d75" translate="yes" xml:space="preserve">
          <source>The printwriter associated with this console</source>
          <target state="translated">このコンソールに関連付けられたプリントライタ</target>
        </trans-unit>
        <trans-unit id="42f954696c5f60bbc139b566f392ccb1636872f4" translate="yes" xml:space="preserve">
          <source>The priority level of this glyph as it is growing.</source>
          <target state="translated">このグリフの優先度は成長しているので、優先度が高いです。</target>
        </trans-unit>
        <trans-unit id="628a678ead91170d2283b79dc824cb7b5316e893" translate="yes" xml:space="preserve">
          <source>The priority level of this glyph as it is shrinking.</source>
          <target state="translated">縮小しているので、このグリフの優先度。</target>
        </trans-unit>
        <trans-unit id="6701aac4c822d072a47e34f47ed4c1b355734957" translate="yes" xml:space="preserve">
          <source>The priority of the newly created thread is set equal to the priority of the thread creating it, that is, the currently running thread. The method &lt;a href=&quot;#setPriority(int)&quot;&gt;setPriority&lt;/a&gt; may be used to change the priority to a new value.</source>
          <target state="translated">新しく作成されたスレッドの優先度は、それを作成したスレッド、つまり現在実行中のスレッドの優先度と同じに設定されます。メソッド&lt;a href=&quot;#setPriority(int)&quot;&gt;setPriority&lt;/a&gt;を使用して、優先度を新しい値に変更できます。</target>
        </trans-unit>
        <trans-unit id="97a7ef6f1e3cb3a0aaedfb170ff09b511361e6da" translate="yes" xml:space="preserve">
          <source>The priority of the newly created thread is set equal to the priority of the thread creating it, that is, the currently running thread. The method &lt;a href=&quot;thread#setPriority-int-&quot;&gt;setPriority&lt;/a&gt; may be used to change the priority to a new value.</source>
          <target state="translated">新しく作成されたスレッドの優先度は、それを作成したスレッド、つまり現在実行中のスレッドの優先度と同じに設定されます。メソッド&lt;a href=&quot;thread#setPriority-int-&quot;&gt;setPriority&lt;/a&gt;を使用して、優先度を新しい値に変更できます。</target>
        </trans-unit>
        <trans-unit id="ad67cfc9e7ec6a73ea73ab912679bd94c7119e41" translate="yes" xml:space="preserve">
          <source>The priority of the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;ThreadInfo&lt;/code&gt; に関連付けられているスレッドの優先度。</target>
        </trans-unit>
        <trans-unit id="c66994c2e5565d62182013ffae28875f5cf6f391" translate="yes" xml:space="preserve">
          <source>The probe result is the string form of the value of a Multipurpose Internet Mail Extension (MIME) content type as defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;&lt;i&gt;RFC 2045: Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies&lt;/i&gt;&lt;/a&gt;. The string must be parsable according to the grammar in the RFC 2045.</source>
          <target state="translated">プローブの結果は、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;&lt;i&gt;RFC 2045：Multipurpose Internet Mail Extensions（MIME）Part One：Format of Internet Message Bodiesで&lt;/i&gt;&lt;/a&gt;定義され&lt;i&gt;て&lt;/i&gt;いる多目的インターネットメール拡張（MIME）コンテンツタイプの値の文字列形式です。文字列は、RFC 2045の文法に従って解析可能である必要があります。</target>
        </trans-unit>
        <trans-unit id="2212334559e7a887fc928254facb62421de92a5a" translate="yes" xml:space="preserve">
          <source>The process is not killed when there are no more references to the &lt;code&gt;Process&lt;/code&gt; object, but rather the process continues executing asynchronously.</source>
          <target state="translated">The process is not killed when there are no more references to the &lt;code&gt;Process&lt;/code&gt; object, but rather the process continues executing asynchronously.</target>
        </trans-unit>
        <trans-unit id="b41ea041545c20c101d2c5766605f8c26aba0a1d" translate="yes" xml:space="preserve">
          <source>The process may be observed to have terminated with &lt;a href=&quot;#isAlive()&quot;&gt;&lt;code&gt;isAlive()&lt;/code&gt;&lt;/a&gt; before the ComputableFuture is completed and dependent actions are invoked.</source>
          <target state="translated">The process may be observed to have terminated with &lt;a href=&quot;#isAlive()&quot;&gt; &lt;code&gt;isAlive()&lt;/code&gt; &lt;/a&gt; before the ComputableFuture is completed and dependent actions are invoked.</target>
        </trans-unit>
        <trans-unit id="006b08040b73f5d34fb2e71fc14a1d7d47de63f1" translate="yes" xml:space="preserve">
          <source>The process may not terminate immediately. i.e. &lt;code&gt;isAlive()&lt;/code&gt; may return true for a brief period after &lt;code&gt;destroyForcibly()&lt;/code&gt; is called. This method may be chained to &lt;code&gt;waitFor()&lt;/code&gt; if needed.</source>
          <target state="translated">The process may not terminate immediately. i.e. &lt;code&gt;isAlive()&lt;/code&gt; may return true for a brief period after &lt;code&gt;destroyForcibly()&lt;/code&gt; is called. This method may be chained to &lt;code&gt;waitFor()&lt;/code&gt; if needed.</target>
        </trans-unit>
        <trans-unit id="880dec8515b711c27c013e6c9697d99218ffed43" translate="yes" xml:space="preserve">
          <source>The process of implementing a set by extending this class is identical to that of implementing a Collection by extending AbstractCollection, except that all of the methods and constructors in subclasses of this class must obey the additional constraints imposed by the &lt;code&gt;Set&lt;/code&gt; interface (for instance, the add method must not permit addition of multiple instances of an object to a set).</source>
          <target state="translated">このクラスを拡張してセットを実装するプロセスは、AbstractCollectionを拡張してコレクションを実装するプロセスと同じですが、このクラスのサブクラス内のすべてのメソッドとコンストラクターは、 &lt;code&gt;Set&lt;/code&gt; インターフェースによって課される追加の制約に従う必要があります（たとえば、 addメソッドでは、オブジェクトの複数のインスタンスをセットに追加できません。</target>
        </trans-unit>
        <trans-unit id="e1ec3b94c22e460ebbbb042de3db1027d96793ab" translate="yes" xml:space="preserve">
          <source>The process of normalization is specific to each calendar system. For example, in the ISO calendar system, the years and months are normalized but the days are not, such that &quot;15 months&quot; would be normalized to &quot;1 year and 3 months&quot;.</source>
          <target state="translated">正規化のプロセスは、各カレンダーシステムに特有のものです。例えば、ISOカレンダーシステムでは、年と月は正規化されますが、日は正規化されません。</target>
        </trans-unit>
        <trans-unit id="a0880060c6bd165f58bb9740e5b98b10e7366b11" translate="yes" xml:space="preserve">
          <source>The process of writing changes in a &lt;code&gt;RowSet&lt;/code&gt; object to its data source is known as</source>
          <target state="translated">The process of writing changes in a &lt;code&gt;RowSet&lt;/code&gt; object to its data source is known as</target>
        </trans-unit>
        <trans-unit id="cf7301191430bba9ec8368d5ffbc647fac0cf73d" translate="yes" xml:space="preserve">
          <source>The process that looks for a class name in the &lt;code&gt;META-INF/services/org.xml.sax.driver&lt;/code&gt; file in a jar file does not conform to the specification of the service-provider loading facility as defined in &lt;a href=&quot;../../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; and therefore does not support modularization. It is deprecated as of Java SE 9 and subject to removal in a future release.</source>
          <target state="translated">The process that looks for a class name in the &lt;code&gt;META-INF/services/org.xml.sax.driver&lt;/code&gt; file in a jar file does not conform to the specification of the service-provider loading facility as defined in &lt;a href=&quot;../../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; and therefore does not support modularization. It is deprecated as of Java SE 9 and subject to removal in a future release.</target>
        </trans-unit>
        <trans-unit id="455f1746aa3e2b37c23f02cccc11f1194c2bd1f7" translate="yes" xml:space="preserve">
          <source>The processing instruction does not specify how the print job processes the request; each processing instruction is only a description of the results of a print job. The print job determines the manner in which it achieves the results specified by the processing instructions. Representing processing instructions as descriptive items provides more flexibility for implementing print jobs.</source>
          <target state="translated">処理命令は、プリントジョブが要求をどのように処理するかを特定するものではなく、各処理命令はプリントジョブの結果を記述したものに過ぎない。各処理命令は印刷ジョブの結果を記述したものに過ぎず、印刷ジョブは処理命令によって指定された結果をどのように達成するかを決定する。処理命令を記述項目として表現することで、プリントジョブの実装の柔軟性が向上する。</target>
        </trans-unit>
        <trans-unit id="f21c5292c5f0f85748710a360b9fb4d2c8ebb894" translate="yes" xml:space="preserve">
          <source>The processor may choose to continue, but will not normally proceed to a successful completion.</source>
          <target state="translated">プロセッサーは続行を選択することができますが、通常は正常に完了するまで進みません。</target>
        </trans-unit>
        <trans-unit id="6f696f02deb8ba447238e7b0ba963cade3056181" translate="yes" xml:space="preserve">
          <source>The profile includes the &lt;code&gt;redColorantTag&lt;/code&gt;, &lt;code&gt;greenColorantTag&lt;/code&gt;, &lt;code&gt;blueColorantTag&lt;/code&gt;, &lt;code&gt;redTRCTag&lt;/code&gt;, &lt;code&gt;greenTRCTag&lt;/code&gt;, &lt;code&gt;blueTRCTag&lt;/code&gt;, and &lt;code&gt;mediaWhitePointTag&lt;/code&gt; tags.</source>
          <target state="translated">The profile includes the &lt;code&gt;redColorantTag&lt;/code&gt; , &lt;code&gt;greenColorantTag&lt;/code&gt; , &lt;code&gt;blueColorantTag&lt;/code&gt; , &lt;code&gt;redTRCTag&lt;/code&gt; , &lt;code&gt;greenTRCTag&lt;/code&gt; , &lt;code&gt;blueTRCTag&lt;/code&gt; , and &lt;code&gt;mediaWhitePointTag&lt;/code&gt; tags.</target>
        </trans-unit>
        <trans-unit id="fd8dfde5161913039fba723df9c9b90bc3017769" translate="yes" xml:space="preserve">
          <source>The profile's color space type is RGB.</source>
          <target state="translated">プロファイルの色空間タイプはRGBです。</target>
        </trans-unit>
        <trans-unit id="b21468901598e18762161fbe3cf811efedaec007" translate="yes" xml:space="preserve">
          <source>The program</source>
          <target state="translated">プログラム</target>
        </trans-unit>
        <trans-unit id="345c1d3616f08664463e96baa7a67e8da0786160" translate="yes" xml:space="preserve">
          <source>The program number is zero-based (expressed from 0 to 127). Note that MIDI hardware displays and literature about MIDI typically use the range 1 to 128 instead.</source>
          <target state="translated">プログラム番号はゼロベース(0 から 127 で表されます)です。MIDI ハードウェアの表示や MIDI に関する文献では、一般的に 1 から 128 の範囲を使用していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="76dfc7088829bdbf1569fb6f72d786a2251045f0" translate="yes" xml:space="preserve">
          <source>The program number is zero-based (expressed from 0 to 127). Note that MIDI hardware displays and literature about MIDI typically use the range 1 to 128 instead. It is possible that the underlying synthesizer does not support a specific program. In order to verify that a call to &lt;code&gt;programChange&lt;/code&gt; was successful, use &lt;code&gt;getProgram&lt;/code&gt;.</source>
          <target state="translated">プログラム番号はゼロベースです（0から127で表されます）。MIDIハードウェアの表示とMIDIに関する文献では、通常、代わりに1〜128の範囲を使用していることに注意してください。基礎となるシンセサイザが特定のプログラムをサポートしていない可能性があります。 &lt;code&gt;programChange&lt;/code&gt; の呼び出しが成功したことを確認するには、 &lt;code&gt;getProgram&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="962e35562a0df5666bf7aad07b776ace67ab18a8" translate="yes" xml:space="preserve">
          <source>The program number of the instrument that this voice is currently using.</source>
          <target state="translated">この声が現在使用している楽器のプログラム番号です。</target>
        </trans-unit>
        <trans-unit id="4155d56e171215de9c7037e45d7bce8a1282da2c" translate="yes" xml:space="preserve">
          <source>The program number of the instrument that this voice is currently using. The value ranges from 0 to 127 if the voice is active, and is unspecified if the voice is inactive.</source>
          <target state="translated">この音色が現在使用している楽器のプログラム番号。この値の範囲は、ボイスがアクティブの場合は0から127までで、ボイスが非アクティブの場合は指定されません。</target>
        </trans-unit>
        <trans-unit id="f1be1f5399b975af8c707420333db180e0981d19" translate="yes" xml:space="preserve">
          <source>The programmatic name of the property that was changed. May be null if multiple properties have changed.</source>
          <target state="translated">変更されたプロパティのプログラム名。複数のプロパティが変更されている場合は、NULLにすることができます。</target>
        </trans-unit>
        <trans-unit id="ad93de22f765c96c57d8527107c09122268deb2d" translate="yes" xml:space="preserve">
          <source>The programmatic name of the property/method/event</source>
          <target state="translated">プロパティ/メソッド/イベントのプログラム名</target>
        </trans-unit>
        <trans-unit id="4a4ca8c0566e76e0bda81fc2154a3dd169f21dfd" translate="yes" xml:space="preserve">
          <source>The programmer should generally provide a void (no argument) and &lt;code&gt;Collection&lt;/code&gt; constructor, as per the recommendation in the &lt;code&gt;Collection&lt;/code&gt; interface specification.</source>
          <target state="translated">プログラマーは、 &lt;code&gt;Collection&lt;/code&gt; インターフェース仕様の推奨に従って、一般にvoid（引数なし）および &lt;code&gt;Collection&lt;/code&gt; コンストラクターを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="61075cdab1eeb6f09db5bfab67efc96a9fe1b4d1" translate="yes" xml:space="preserve">
          <source>The programmer should generally provide a void (no argument) and collection constructor, as per the recommendation in the &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; interface specification.</source>
          <target state="translated">プログラマーは、&lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;インターフェース仕様の推奨に従って、一般にvoid（引数なし）およびコレクションコンストラクターを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="37e4fc3e466260a434320ff485db7412afec1305" translate="yes" xml:space="preserve">
          <source>The programmer should generally provide a void (no argument) and collection constructor, as per the recommendation in the &lt;code&gt;Collection&lt;/code&gt; interface specification.</source>
          <target state="translated">プログラマーは、 &lt;code&gt;Collection&lt;/code&gt; インターフェース仕様の推奨に従って、一般にvoid（引数なし）およびコレクションコンストラクターを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="92e053e057575398190a0ac956a5817f3e0304d3" translate="yes" xml:space="preserve">
          <source>The programmer should generally provide a void (no argument) and map constructor, as per the recommendation in the &lt;code&gt;Map&lt;/code&gt; interface specification.</source>
          <target state="translated">プログラマーは、 &lt;code&gt;Map&lt;/code&gt; インターフェース仕様の推奨に従って、一般にvoid（引数なし）およびマップコンストラクターを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="f01bb378f182b23e8ed67c381eb92c51c702d451" translate="yes" xml:space="preserve">
          <source>The progress bar changes to determinate</source>
          <target state="translated">プログレスバーは、決定するために変更されます。</target>
        </trans-unit>
        <trans-unit id="4b5b62e95c0464429469a4601f4eedbff960af77" translate="yes" xml:space="preserve">
          <source>The progress bar is determinate and becomes displayable</source>
          <target state="translated">プログレスバーが確定して表示可能になる</target>
        </trans-unit>
        <trans-unit id="e367352ef18d207387d0a16384a607086a84bf3e" translate="yes" xml:space="preserve">
          <source>The progress bar is displayable and becomes determinate</source>
          <target state="translated">プログレスバーが表示され、確定的になります。</target>
        </trans-unit>
        <trans-unit id="ff7b207dcad61e50dde5ee3a8d51e2a89562a740" translate="yes" xml:space="preserve">
          <source>The progress bar is displayable and determinate and this UI is installed</source>
          <target state="translated">プログレスバーが表示可能で確定しており、このUIがインストールされています。</target>
        </trans-unit>
        <trans-unit id="0b58ada95969c7cc2b96e1fd97a909c42b180449" translate="yes" xml:space="preserve">
          <source>The progress bar is no longer part of a displayable hierarchy</source>
          <target state="translated">プログレスバーは表示可能な階層の一部ではなくなりました。</target>
        </trans-unit>
        <trans-unit id="7db88831546fb954fc3d5d9710f6e0ab2f4739c8" translate="yes" xml:space="preserve">
          <source>The progress indicator displays activity without specifying what proportion of the progress is complete.</source>
          <target state="translated">進捗インジケータは、進捗の割合を指定せずにアクティビティを表示します。</target>
        </trans-unit>
        <trans-unit id="26c5212b411b32f2f4fb4ac337ae0a4ad3976b99" translate="yes" xml:space="preserve">
          <source>The progress indicator displays with normal color and determinate mode.</source>
          <target state="translated">進捗状況表示は、通常の色と確定モードで表示されます。</target>
        </trans-unit>
        <trans-unit id="f47f32edf9816a4f888b251afa36f949fce0846c" translate="yes" xml:space="preserve">
          <source>The progress string is painted only if the &lt;code&gt;isStringPainted&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">The progress string is painted only if the &lt;code&gt;isStringPainted&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="391c694a427ff64d8dedbc35ef6300a0d16bfa8a" translate="yes" xml:space="preserve">
          <source>The proleptic year, such as 2012.</source>
          <target state="translated">2012年などのプロレプティックイヤー。</target>
        </trans-unit>
        <trans-unit id="2f8941a3eade121ced3151a4fbe9a184aa501fb3" translate="yes" xml:space="preserve">
          <source>The proleptic-month based, counting months sequentially from year 0.</source>
          <target state="translated">プロレプティック月をベースに、0年から順次月をカウントしていきます。</target>
        </trans-unit>
        <trans-unit id="4a56a02d5a817b1dc30304481e16ea69bcff2062" translate="yes" xml:space="preserve">
          <source>The properties for loggers and Handlers will have names starting with the dot-separated name for the handler or logger.</source>
          <target state="translated">ロガーとハンドラのプロパティは、ハンドラまたはロガーのドット区切りの名前で始まる名前を持ちます。</target>
        </trans-unit>
        <trans-unit id="53b4cc1bbc02ad93af5b4e56711266aa46d88a87" translate="yes" xml:space="preserve">
          <source>The properties returned should contain properties set by the stylesheet, and these properties are &quot;defaulted&quot; by default properties specified by &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;&gt;section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a&gt;. The properties that were specifically set by the stylesheet should be in the base Properties list, while the XSLT default properties that were not specifically set should be in the &quot;default&quot; Properties list. Thus, getOutputProperties().getProperty(String key) will obtain any property in that was set by the stylesheet, &lt;em&gt;or&lt;/em&gt; the default properties, while getOutputProperties().get(String key) will only retrieve properties that were explicitly set in the stylesheet.</source>
          <target state="translated">The properties returned should contain properties set by the stylesheet, and these properties are &quot;defaulted&quot; by default properties specified by &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;&gt;section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a&gt;. The properties that were specifically set by the stylesheet should be in the base Properties list, while the XSLT default properties that were not specifically set should be in the &quot;default&quot; Properties list. Thus, getOutputProperties().getProperty(String key) will obtain any property in that was set by the stylesheet, &lt;em&gt;or&lt;/em&gt; the default properties, while getOutputProperties().get(String key) will only retrieve properties that were explicitly set in the stylesheet.</target>
        </trans-unit>
        <trans-unit id="924030f16e4e6790ddf29e1281d8ffc937efbad3" translate="yes" xml:space="preserve">
          <source>The properties returned should contain properties set by the user, and properties set by the stylesheet, and these properties are &quot;defaulted&quot; by default properties specified by &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;&gt;section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a&gt;. The properties that were specifically set by the user or the stylesheet should be in the base Properties list, while the XSLT default properties that were not specifically set should be the default Properties list. Thus, getOutputProperties().getProperty(String key) will obtain any property in that was set by &lt;a href=&quot;#setOutputProperty(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;setOutputProperty(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setOutputProperties(java.util.Properties)&quot;&gt;&lt;code&gt;setOutputProperties(java.util.Properties)&lt;/code&gt;&lt;/a&gt;, in the stylesheet, &lt;em&gt;or&lt;/em&gt; the default properties, while getOutputProperties().get(String key) will only retrieve properties that were explicitly set by &lt;a href=&quot;#setOutputProperty(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;setOutputProperty(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setOutputProperties(java.util.Properties)&quot;&gt;&lt;code&gt;setOutputProperties(java.util.Properties)&lt;/code&gt;&lt;/a&gt;, or in the stylesheet.</source>
          <target state="translated">The properties returned should contain properties set by the user, and properties set by the stylesheet, and these properties are &quot;defaulted&quot; by default properties specified by &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;&gt;section 16 of the XSL Transformations (XSLT) W3C Recommendation&lt;/a&gt;. The properties that were specifically set by the user or the stylesheet should be in the base Properties list, while the XSLT default properties that were not specifically set should be the default Properties list. Thus, getOutputProperties().getProperty(String key) will obtain any property in that was set by &lt;a href=&quot;#setOutputProperty(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;setOutputProperty(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#setOutputProperties(java.util.Properties)&quot;&gt; &lt;code&gt;setOutputProperties(java.util.Properties)&lt;/code&gt; &lt;/a&gt;, in the stylesheet, &lt;em&gt;or&lt;/em&gt; the default properties, while getOutputProperties().get(String key) will only retrieve properties that were explicitly set by &lt;a href=&quot;#setOutputProperty(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;setOutputProperty(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#setOutputProperties(java.util.Properties)&quot;&gt; &lt;code&gt;setOutputProperties(java.util.Properties)&lt;/code&gt; &lt;/a&gt;, or in the stylesheet.</target>
        </trans-unit>
        <trans-unit id="27f833fe6fa37acd5e76ba0606a69897f0ed235c" translate="yes" xml:space="preserve">
          <source>The properties-only format &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;.</source>
          <target state="translated">The properties-only format &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="daa8bdb84e81154bc80370cc5e9727f554ff3e32" translate="yes" xml:space="preserve">
          <source>The properties-only format &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;. This &lt;code&gt;List&lt;/code&gt; is &lt;a href=&quot;collections#unmodifiableList-java.util.List-&quot;&gt;unmodifiable&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; を含むプロパティのみの形式の &lt;code&gt;List&lt;/code&gt; 。この &lt;code&gt;List&lt;/code&gt; は&lt;a href=&quot;collections#unmodifiableList-java.util.List-&quot;&gt;変更できません&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5d2cff9c6617a0baba314ee31c1929597466d86" translate="yes" xml:space="preserve">
          <source>The properties-only format &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;. This &lt;code&gt;List&lt;/code&gt; is unmodifiable.</source>
          <target state="translated">The properties-only format &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; . This &lt;code&gt;List&lt;/code&gt; is unmodifiable.</target>
        </trans-unit>
        <trans-unit id="edbaf52dc9114c17a17b8e7f6f915d29977216eb" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;JInternalFrame.isPalette&lt;/code&gt;.</source>
          <target state="translated">The property &lt;code&gt;JInternalFrame.isPalette&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf5373aab850e2de634fb8554a90fb179e5380fa" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;JScrollBar.isFreeStanding&lt;/code&gt;.</source>
          <target state="translated">The property &lt;code&gt;JScrollBar.isFreeStanding&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be6722df6ec5a2e75cae3fda33dde1100cbb76cd" translate="yes" xml:space="preserve">
          <source>The property can be set with the following code line: &lt;code&gt;setProperty(&quot;javax.xml.stream.isRepairingNamespaces&quot;, new Boolean(true|false));&lt;/code&gt;</source>
          <target state="translated">The property can be set with the following code line: &lt;code&gt;setProperty(&quot;javax.xml.stream.isRepairingNamespaces&quot;, new Boolean(true|false));&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90ef13d5a715c58badd6aeb3009b5ac9131a03a4" translate="yes" xml:space="preserve">
          <source>The property map may contain pre-defined implementation specific and default properties. Users are encouraged to read the information and fully understand the implications, before modifying pre-existing properties.</source>
          <target state="translated">プロパティマップには、事前に定義された実装固有のプロパティとデフォルトのプロパティが含まれている場合があります。ユーザーは、既存のプロパティを変更する前に、情報を読み、その意味を十分に理解することが推奨されます。</target>
        </trans-unit>
        <trans-unit id="216631b6a2b26fcac5c37473e2eaf40759dbb441" translate="yes" xml:space="preserve">
          <source>The property name &lt;code&gt;&quot;comment&quot;&lt;/code&gt; should be used to store an optional comment which can be presented to the application as a description of the image, its source, or its author.</source>
          <target state="translated">The property name &lt;code&gt;&quot;comment&quot;&lt;/code&gt; should be used to store an optional comment which can be presented to the application as a description of the image, its source, or its author.</target>
        </trans-unit>
        <trans-unit id="05614fb918268cb256ef8ff9c79e7c509c6ff6a3" translate="yes" xml:space="preserve">
          <source>The property name for the description of the stream used to initialize the document.</source>
          <target state="translated">文書の初期化に用いられたストリームの記述のためのプロパティ名。</target>
        </trans-unit>
        <trans-unit id="65d307effbfb6738fbc49652b7df00c768e32304" translate="yes" xml:space="preserve">
          <source>The property name for the description of the stream used to initialize the document. This should be used if the document was initialized from a stream and anything is known about the stream.</source>
          <target state="translated">文書の初期化に用いたストリームの説明のためのプロパティ名。これは、文書がストリームから初期化され、ストリームについて何かがわかっている場合に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="55766c1c4623c812c3048cdf08c9f6f33926a54f" translate="yes" xml:space="preserve">
          <source>The property name for the title of the document, if there is one.</source>
          <target state="translated">ドキュメントのタイトルのプロパティ名(ある場合)。</target>
        </trans-unit>
        <trans-unit id="491a849b11e4c2c0acd318273c6a61f63270a3d9" translate="yes" xml:space="preserve">
          <source>The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; to recognize a property name but temporarily be unable to return its value.</source>
          <target state="translated">The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt; to recognize a property name but temporarily be unable to return its value.</target>
        </trans-unit>
        <trans-unit id="b04117b905a55eae82549e4e3a2b723556877a5c" translate="yes" xml:space="preserve">
          <source>The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; to recognize a property name but to be unable to change the current value.</source>
          <target state="translated">The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt; to recognize a property name but to be unable to change the current value.</target>
        </trans-unit>
        <trans-unit id="765dd3a32bda74de713a08c9e42bf1083b24e6ca" translate="yes" xml:space="preserve">
          <source>The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validator&quot;&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;/a&gt; to recognize a property name but temporarily be unable to return its value. Some property values may be available only in specific contexts, such as before, during, or after a validation.</source>
          <target state="translated">The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validator&quot;&gt; &lt;code&gt;Validator&lt;/code&gt; &lt;/a&gt; to recognize a property name but temporarily be unable to return its value. Some property values may be available only in specific contexts, such as before, during, or after a validation.</target>
        </trans-unit>
        <trans-unit id="f6fa366af3cd654c1c35b4f151e2781b11c57e03" translate="yes" xml:space="preserve">
          <source>The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validator&quot;&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;/a&gt; to recognize a property name but to be unable to change the current value. Some property values may be immutable or mutable only in specific contexts, such as before, during, or after a validation.</source>
          <target state="translated">The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validator&quot;&gt; &lt;code&gt;Validator&lt;/code&gt; &lt;/a&gt; to recognize a property name but to be unable to change the current value. Some property values may be immutable or mutable only in specific contexts, such as before, during, or after a validation.</target>
        </trans-unit>
        <trans-unit id="a9efd0eeaa6302fa4fd979a20db22dc2dc37765c" translate="yes" xml:space="preserve">
          <source>The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; to recognize a property name but temporarily be unable to return its value. Some property values may be available only in specific contexts, such as before, during, or after a validation.</source>
          <target state="translated">The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt; to recognize a property name but temporarily be unable to return its value. Some property values may be available only in specific contexts, such as before, during, or after a validation.</target>
        </trans-unit>
        <trans-unit id="c26b08882aefe98ea2b359c6337181f87d358da5" translate="yes" xml:space="preserve">
          <source>The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; to recognize a property name but to be unable to change the current value. Some property values may be immutable or mutable only in specific contexts, such as before, during, or after a validation.</source>
          <target state="translated">The property name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt; to recognize a property name but to be unable to change the current value. Some property values may be immutable or mutable only in specific contexts, such as before, during, or after a validation.</target>
        </trans-unit>
        <trans-unit id="9f21d91a82fc4c162b2dfd34fcdb2d44e94f0d92" translate="yes" xml:space="preserve">
          <source>The property name is any fully-qualified URI. It is possible for an XMLReader to recognize a property name but temporarily be unable to return its value. Some property values may be available only in specific contexts, such as before, during, or after a parse.</source>
          <target state="translated">プロパティ名は、任意の完全修飾 URI です。XMLReader がプロパティ名を認識しても、一時的にその値を返すことができないことがあります。プロパティ値の中には、パース前、パース中、パース後などの特定のコンテキストでのみ利用可能なものがあります。</target>
        </trans-unit>
        <trans-unit id="7593858905d16bae87d6ea5c763c7dd7603e0f00" translate="yes" xml:space="preserve">
          <source>The property name is any fully-qualified URI. It is possible for an XMLReader to recognize a property name but to be unable to change the current value. Some property values may be immutable or mutable only in specific contexts, such as before, during, or after a parse.</source>
          <target state="translated">プロパティ名は、任意の完全修飾 URI です。XMLReader がプロパティ名を認識しても、現在の値を変更できないことがあります。プロパティ値の中には、パース前、パース中、パース後などの特定のコンテキストでのみ不変または変更可能なものがあります。</target>
        </trans-unit>
        <trans-unit id="5a44166bbcf01d577f1354b0551d5aad5a3ef464" translate="yes" xml:space="preserve">
          <source>The property resource defining the &lt;code&gt;{ID}&lt;/code&gt; variant</source>
          <target state="translated">&lt;code&gt;{ID}&lt;/code&gt; バリアントを定義するプロパティリソース</target>
        </trans-unit>
        <trans-unit id="af5b082804d7c2dde6ea05c46a90e42cc6381e7f" translate="yes" xml:space="preserve">
          <source>The property resource is located with the &lt;code&gt;calendars.properties&lt;/code&gt; file</source>
          <target state="translated">プロパティリソースは &lt;code&gt;calendars.properties&lt;/code&gt; ファイルにあります</target>
        </trans-unit>
        <trans-unit id="1f758999ea110228277da4c8ec83f3970f50ce67" translate="yes" xml:space="preserve">
          <source>The property that requires the parser to coalesce adjacent character data sections</source>
          <target state="translated">隣接する文字データセクションを合体させることをパーサに要求するプロパティです。</target>
        </trans-unit>
        <trans-unit id="e265780daa42ecc2e0802b3158af0dcc9a3d2876" translate="yes" xml:space="preserve">
          <source>The property that requires the parser to resolve external parsed entities</source>
          <target state="translated">パーサが外部解析されたエンティティの解決を要求するプロパティです。</target>
        </trans-unit>
        <trans-unit id="13afb556feceeb83a36d49a0460475a7e85ddb79" translate="yes" xml:space="preserve">
          <source>The property that requires the parser to support DTDs</source>
          <target state="translated">パーサがDTDをサポートすることを要求するプロパティです。</target>
        </trans-unit>
        <trans-unit id="f462c466c77ecb8aecc01f7fc097bd0ef7bee433" translate="yes" xml:space="preserve">
          <source>The property used to set/get the implementation of the XMLReporter interface</source>
          <target state="translated">XMLReporter インターフェースの実装を設定/取得するために使用するプロパティです。</target>
        </trans-unit>
        <trans-unit id="4325235510b04660062df652bfe8ef53233412c5" translate="yes" xml:space="preserve">
          <source>The property used to set/get the implementation of the XMLResolver</source>
          <target state="translated">XMLResolverの実装を設定/取得するために使用するプロパティです。</target>
        </trans-unit>
        <trans-unit id="50c756a437d7d9476e61751578d130ff92ae44bf" translate="yes" xml:space="preserve">
          <source>The property used to set/get the implementation of the allocator</source>
          <target state="translated">アロケータの実装を設定/取得するために使用されるプロパティ</target>
        </trans-unit>
        <trans-unit id="99399b40e8299eb71e8be6c59cb3bbd8473d04ed" translate="yes" xml:space="preserve">
          <source>The property used to turn on/off implementation specific validation</source>
          <target state="translated">実装固有の検証をオン/オフするために使用されるプロパティです。</target>
        </trans-unit>
        <trans-unit id="df5033615f0d4c5aa6046366f6f557d55da8ce89" translate="yes" xml:space="preserve">
          <source>The property used to turn on/off namespace support, this is to support XML 1.0 documents, only the true setting must be supported</source>
          <target state="translated">これは XML 1.0 ドキュメントをサポートするためのもので、true の設定のみがサポートされている必要があります。</target>
        </trans-unit>
        <trans-unit id="bb305a13af061bdafc684dce06c7fea083824a3c" translate="yes" xml:space="preserve">
          <source>The property value as a human editable string.</source>
          <target state="translated">プロパティの値を人間が編集可能な文字列として指定します。</target>
        </trans-unit>
        <trans-unit id="928506a8e906ccfdc133220356a75d90280830ec" translate="yes" xml:space="preserve">
          <source>The property value as a string suitable for presentation to a human to edit.</source>
          <target state="translated">プロパティの値を、人間が編集するために提示するのに適した文字列として指定します。</target>
        </trans-unit>
        <trans-unit id="73101b28e30a36efb57859ac5d834112bb90605f" translate="yes" xml:space="preserve">
          <source>The property value consists of the provider class name and the device name, separated by the hash mark (&quot;#&quot;). The provider class name is the fully-qualified name of a concrete &lt;a href=&quot;spi/midideviceprovider&quot;&gt;&lt;code&gt;MIDI device provider&lt;/code&gt;&lt;/a&gt; class. The device name is matched against the &lt;code&gt;String&lt;/code&gt; returned by the &lt;code&gt;getName&lt;/code&gt; method of &lt;code&gt;MidiDevice.Info&lt;/code&gt;. Either the class name, or the device name may be omitted. If only the class name is specified, the trailing hash mark is optional.</source>
          <target state="translated">プロパティ値は、ハッシュマーク（ &quot;＃&quot;）で区切られたプロバイダークラス名とデバイス名で構成されます。プロバイダークラス名は、具体的な&lt;a href=&quot;spi/midideviceprovider&quot;&gt; &lt;code&gt;MIDI device provider&lt;/code&gt; &lt;/a&gt;クラスの完全修飾名です。デバイス名は、 &lt;code&gt;MidiDevice.Info&lt;/code&gt; の &lt;code&gt;getName&lt;/code&gt; メソッドによって返される &lt;code&gt;String&lt;/code&gt; と照合されます。クラス名またはデバイス名は省略できます。クラス名のみが指定されている場合、末尾のハッシュマークはオプションです。</target>
        </trans-unit>
        <trans-unit id="0fda51bd535de894365d52df1f5e4d52b33dd40e" translate="yes" xml:space="preserve">
          <source>The property value consists of the provider class name and the mixer name, separated by the hash mark (&quot;#&quot;). The provider class name is the fully-qualified name of a concrete &lt;a href=&quot;spi/mixerprovider&quot;&gt;&lt;code&gt;mixer provider&lt;/code&gt;&lt;/a&gt; class. The mixer name is matched against the &lt;code&gt;String&lt;/code&gt; returned by the &lt;code&gt;getName&lt;/code&gt; method of &lt;code&gt;Mixer.Info&lt;/code&gt;. Either the class name, or the mixer name may be omitted. If only the class name is specified, the trailing hash mark is optional.</source>
          <target state="translated">プロパティ値は、ハッシュマーク（ &quot;＃&quot;）で区切られたプロバイダークラス名とミキサー名で構成されます。プロバイダークラス名は、具象&lt;a href=&quot;spi/mixerprovider&quot;&gt; &lt;code&gt;mixer provider&lt;/code&gt; &lt;/a&gt;クラスの完全修飾名です。ミキサー名は、 &lt;code&gt;Mixer.Info&lt;/code&gt; の &lt;code&gt;getName&lt;/code&gt; メソッドによって返される &lt;code&gt;String&lt;/code&gt; と照合されます。クラス名またはミキサー名は省略できます。クラス名のみが指定されている場合、末尾のハッシュマークはオプションです。</target>
        </trans-unit>
        <trans-unit id="839344a2affd2c29010b14b6d381310744ba6f63" translate="yes" xml:space="preserve">
          <source>The property value should be one of the forms accepted by &lt;code&gt;Font.decode(String)&lt;/code&gt; If the specified property is not found, or the executing code does not have permission to read the property, the &lt;code&gt;font&lt;/code&gt; argument is returned instead.</source>
          <target state="translated">The property value should be one of the forms accepted by &lt;code&gt;Font.decode(String)&lt;/code&gt; If the specified property is not found, or the executing code does not have permission to read the property, the &lt;code&gt;font&lt;/code&gt; argument is returned instead.</target>
        </trans-unit>
        <trans-unit id="253fede9392a1c0b18e0b9824d151fca7a0e3b9d" translate="yes" xml:space="preserve">
          <source>The property value.</source>
          <target state="translated">プロパティの値。</target>
        </trans-unit>
        <trans-unit id="a934d82554d845420400459f6c0dabc8ba77a442" translate="yes" xml:space="preserve">
          <source>The protected &lt;code&gt;EditorDelegate&lt;/code&gt; class.</source>
          <target state="translated">The protected &lt;code&gt;EditorDelegate&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="374ba4813aef129e3eb1f2074ac73df714237dfe" translate="yes" xml:space="preserve">
          <source>The protocol handler calls this method after a resource has been retrieved, and the ResponseCache must decide whether or not to store the resource in its cache.</source>
          <target state="translated">リソースが取得された後、プロトコルハンドラはこのメソッドを呼び出し、ResponseCache はリソースをキャッシュに保存するかどうかを決定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="8bca8021794336ac922184238ff13cedd04b4c6c" translate="yes" xml:space="preserve">
          <source>The protocol handler calls this method after a resource has been retrieved, and the ResponseCache must decide whether or not to store the resource in its cache. If the resource is to be cached, then put() must return a CacheRequest object which contains an OutputStream that the protocol handler will use to write the resource into the cache. If the resource is not to be cached, then put must return null.</source>
          <target state="translated">リソースが取得された後、プロトコル ハンドラはこのメソッドを呼び出し、ResponseCache はそのリソースをキャッシュに保存するかどうかを決定する必要があります。リソースをキャッシュする場合、put()は、プロトコル ハンドラがリソースをキャッシュに書き込むために使用する OutputStream を含む CacheRequest オブジェクトを返す必要があります。リソースをキャッシュしない場合は、put は null を返さなければなりません。</target>
        </trans-unit>
        <trans-unit id="4be2401bbc033d02d77ae8d018dde89f5a6c5180" translate="yes" xml:space="preserve">
          <source>The protocol part of the Service URL.</source>
          <target state="translated">サービスURLのプロトコル部分です。</target>
        </trans-unit>
        <trans-unit id="a28e98c099c58a5bda5e715045862d609dda783c" translate="yes" xml:space="preserve">
          <source>The protocol-specific requirements are defined in the &lt;a href=&quot;https://tools.ietf.org/html/rfc7540&quot;&gt;Hypertext Transfer Protocol Version 2 (HTTP/2)&lt;/a&gt;, the &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt; Hypertext Transfer Protocol (HTTP/1.1)&lt;/a&gt;, and &lt;a href=&quot;https://tools.ietf.org/html/rfc6455&quot;&gt;The WebSocket Protocol&lt;/a&gt;.</source>
          <target state="translated">The protocol-specific requirements are defined in the &lt;a href=&quot;https://tools.ietf.org/html/rfc7540&quot;&gt;Hypertext Transfer Protocol Version 2 (HTTP/2)&lt;/a&gt;, the &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt; Hypertext Transfer Protocol (HTTP/1.1)&lt;/a&gt;, and &lt;a href=&quot;https://tools.ietf.org/html/rfc6455&quot;&gt;The WebSocket Protocol&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="37c5465d2ff8a6fe16f37629d0bc86289e7d279a" translate="yes" xml:space="preserve">
          <source>The protocols must have been listed by &lt;code&gt;getSupportedProtocols()&lt;/code&gt; as being supported. Following a successful call to this method, only protocols listed in the &lt;code&gt;protocols&lt;/code&gt; parameter are enabled for use.</source>
          <target state="translated">プロトコルは、サポートされているものとして &lt;code&gt;getSupportedProtocols()&lt;/code&gt; によってリストされている必要があります。このメソッドの呼び出しが成功すると、 &lt;code&gt;protocols&lt;/code&gt; パラメーターにリストされているプロトコルのみが使用可能になります。</target>
        </trans-unit>
        <trans-unit id="3ceb4dc01f774ca073a268387a29e005c274c187" translate="yes" xml:space="preserve">
          <source>The protocols must have been listed by getSupportedProtocols() as being supported. Following a successful call to this method, only protocols listed in the &lt;code&gt;protocols&lt;/code&gt; parameter are enabled for use.</source>
          <target state="translated">プロトコルは、サポートされているものとしてgetSupportedProtocols（）によってリストされている必要があります。このメソッドの呼び出しが成功すると、 &lt;code&gt;protocols&lt;/code&gt; パラメーターにリストされているプロトコルのみが使用可能になります。</target>
        </trans-unit>
        <trans-unit id="9210c3071d14625b46a43f122fc15299c196c44c" translate="yes" xml:space="preserve">
          <source>The provided &lt;code&gt;LocalDate&lt;/code&gt; is interpreted as the local date in the local time zone.</source>
          <target state="translated">指定された &lt;code&gt;LocalDate&lt;/code&gt; は、ローカルタイムゾーンのローカル日付として解釈されます。</target>
        </trans-unit>
        <trans-unit id="276032490e07e1dda2172dc0392e83bfa40a5cb8" translate="yes" xml:space="preserve">
          <source>The provided &lt;code&gt;LocalDateTime&lt;/code&gt; is interpreted as the local date-time in the local time zone.</source>
          <target state="translated">指定された &lt;code&gt;LocalDateTime&lt;/code&gt; は、ローカルタイムゾーンのローカル日時として解釈されます。</target>
        </trans-unit>
        <trans-unit id="39ea298e1ed9cecc5248c7addf960c07d300fb1e" translate="yes" xml:space="preserve">
          <source>The provider class must be visible to the class loader.</source>
          <target state="translated">プロバイダクラスは、クラスローダから見えるようにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="b819aa1e87112cebc844a816e2d9cca7e54bfec7" translate="yes" xml:space="preserve">
          <source>The provider package list is a string that is interpreted as a list of non-empty Java package names separated by vertical bars (&lt;code&gt;|&lt;/code&gt;). If the string is empty, then so is the provider package list. If the provider package list is not a String, or if it contains an element that is an empty string, a &lt;a href=&quot;jmxproviderexception&quot;&gt;&lt;code&gt;JMXProviderException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">プロバイダーパッケージリストは、縦棒（ &lt;code&gt;|&lt;/code&gt; ）で区切られた空でないJavaパッケージ名のリストとして解釈される文字列です。文字列が空の場合、プロバイダーパッケージリストも空になります。プロバイダーパッケージリストが文字列でない場合、または空の文字列である要素が含まれている場合は、&lt;a href=&quot;jmxproviderexception&quot;&gt; &lt;code&gt;JMXProviderException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="81ff5f0c2ed16bdcde6df10f629ec05f4f76b747" translate="yes" xml:space="preserve">
          <source>The provider properties each specify the name and location of a particular service implemented by the provider. By granting this permission, you let code replace the service specification with another one, thereby specifying a different implementation.</source>
          <target state="translated">プロバイダのプロパティは、それぞれプロバイダによって実装された特定のサービスの名前と場所を指定します。この許可を与えることで、コードがサービスの指定を別のものに置き換えることができ、それによって異なる実装を指定することができます。</target>
        </trans-unit>
        <trans-unit id="7bfdec86c531152b897fae56fc5431156beb1192" translate="yes" xml:space="preserve">
          <source>The provider relies on a &lt;code&gt;CallbackHandler&lt;/code&gt; to obtain authentication information from the caller (a PIN, for example). If the caller passes a &lt;code&gt;null&lt;/code&gt; handler to this method, the provider uses the handler set in the &lt;code&gt;setCallbackHandler&lt;/code&gt; method. If no handler was set in that method, the provider queries the</source>
          <target state="translated">プロバイダーは、 &lt;code&gt;CallbackHandler&lt;/code&gt; を使用して、呼び出し元（PINなど）から認証情報を取得します。呼び出し元がこのメソッドに &lt;code&gt;null&lt;/code&gt; ハンドラーを渡すと、プロバイダーは &lt;code&gt;setCallbackHandler&lt;/code&gt; メソッドで設定されたハンドラーを使用します。そのメソッドにハンドラーが設定されていない場合、プロバイダーは</target>
        </trans-unit>
        <trans-unit id="1c17253044a3e06989e7d90ee41703431073eb01" translate="yes" xml:space="preserve">
          <source>The provider resource file (&lt;code&gt;jndiprovider.properties&lt;/code&gt;) for the context being operated on.</source>
          <target state="translated">操作対象のコンテキストのプロバイダーリソースファイル（ &lt;code&gt;jndiprovider.properties&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7e7c1d350031806c332b9c24a137dd3c90b8b811" translate="yes" xml:space="preserve">
          <source>The provider that created this channel</source>
          <target state="translated">このチャンネルを作成したプロバイダ</target>
        </trans-unit>
        <trans-unit id="77a39cfcc4e9fe4e8ca3afc28026bfc41ca77e69" translate="yes" xml:space="preserve">
          <source>The provider that created this channel group</source>
          <target state="translated">このチャネルグループを作成したプロバイダ</target>
        </trans-unit>
        <trans-unit id="bd0273ec6d54c15dbfb4d880d2bc546ddaf6772d" translate="yes" xml:space="preserve">
          <source>The provider that created this file system.</source>
          <target state="translated">このファイルシステムを作成したプロバイダ。</target>
        </trans-unit>
        <trans-unit id="1d3d88e815a75e16ffb4c1ab7a620700614562f3" translate="yes" xml:space="preserve">
          <source>The provider type</source>
          <target state="translated">プロバイダの種類</target>
        </trans-unit>
        <trans-unit id="e97bc8d34251d21b62200936e722253994322277" translate="yes" xml:space="preserve">
          <source>The provider typically uses a KeyStore as a basis for making trust decisions.</source>
          <target state="translated">プロバイダは、通常、信頼関係を決定するための基礎としてKeyStoreを使用しています。</target>
        </trans-unit>
        <trans-unit id="8eb1ab0ca4032f625e2e248a88d341a2ea149e6e" translate="yes" xml:space="preserve">
          <source>The provider typically uses a KeyStore for obtaining key material for use during secure socket negotiations. The KeyStore is generally password-protected.</source>
          <target state="translated">プロバイダは、セキュアなソケットネゴシエーションの際に使用する鍵情報を取得するために、通常 KeyStore を使用する。KeyStoreは通常、パスワードで保護されている。</target>
        </trans-unit>
        <trans-unit id="e6ee7c51b3de3d00b80da9b5d57be36f861ae7af" translate="yes" xml:space="preserve">
          <source>The provider uses this handler if one is not passed to the &lt;code&gt;login&lt;/code&gt; method. The provider also uses this handler if it invokes &lt;code&gt;login&lt;/code&gt; on behalf of callers. In either case if a handler is not set via this method, the provider queries the</source>
          <target state="translated">&lt;code&gt;login&lt;/code&gt; メソッドに渡されない場合、プロバイダーはこのハンドラーを使用します。プロバイダーは、呼び出し元に代わって &lt;code&gt;login&lt;/code&gt; を呼び出す場合にもこのハンドラーを使用します。どちらの場合も、このメソッドを介してハンドラーが設定されていない場合、プロバイダーは</target>
        </trans-unit>
        <trans-unit id="9a14653f68a78cf5317ff6c4d28abc9bf7e7ffec" translate="yes" xml:space="preserve">
          <source>The proxy forwards all requests to the encapsulated transferable and automatically performs additional conversion on the data returned by the encapsulated transferable in case of local transfer.</source>
          <target state="translated">プロキシは、すべてのリクエストをカプセル化された転送装置に転送し、ローカル転送の場合にカプセル化された転送装置によって返されたデータに対して自動的に追加の変換を行う。</target>
        </trans-unit>
        <trans-unit id="b50d88e8c90fab7f40e58f79439f226bc1b3f211" translate="yes" xml:space="preserve">
          <source>The proxy implements all the remote interfaces implemented by the remote object's class.</source>
          <target state="translated">プロキシはリモートオブジェクトのクラスによって実装されたすべてのリモートインターフェースを実装します。</target>
        </trans-unit>
        <trans-unit id="5fb92df931a046e4e96ec8a961568a0710597d9c" translate="yes" xml:space="preserve">
          <source>The proxy's class is defined according to the specifications for the &lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy#membership&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; class, using the class loader of the remote object's class.</source>
          <target state="translated">プロキシのクラスは、リモートオブジェクトのクラスのクラスローダーを使用して、&lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy#membership&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt;クラスの仕様に従って定義されます。</target>
        </trans-unit>
        <trans-unit id="09deea942a6e744cdc803da8c6c2dfa4a09a0e5d" translate="yes" xml:space="preserve">
          <source>The proxy's invocation handler is a &lt;a href=&quot;remoteobjectinvocationhandler&quot;&gt;&lt;code&gt;RemoteObjectInvocationHandler&lt;/code&gt;&lt;/a&gt; instance constructed with a &lt;a href=&quot;remoteref&quot;&gt;&lt;code&gt;RemoteRef&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プロキシの呼び出しハンドラーは、&lt;a href=&quot;remoteref&quot;&gt; &lt;code&gt;RemoteRef&lt;/code&gt; で&lt;/a&gt;構築された&lt;a href=&quot;remoteobjectinvocationhandler&quot;&gt; &lt;code&gt;RemoteObjectInvocationHandler&lt;/code&gt; &lt;/a&gt;インスタンスです。</target>
        </trans-unit>
        <trans-unit id="b083456a4a9c6284da1cf31e08008817ef68ed33" translate="yes" xml:space="preserve">
          <source>The pseudo code for the rescaling operation is as follows:</source>
          <target state="translated">リスケーリング演算の疑似コードは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="6cbb75c3c1cc6c2af9021f9f5e045df931d8ccd5" translate="yes" xml:space="preserve">
          <source>The pseudo-type corresponding to the keyword &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">キーワード &lt;code&gt;void&lt;/code&gt; に対応する疑似型。</target>
        </trans-unit>
        <trans-unit id="94f0a25ea40a5d8f1223e160a1f04a7a4b183b85" translate="yes" xml:space="preserve">
          <source>The pseudo/hidden column may only be used in a SELECT list.</source>
          <target state="translated">擬似/非表示の列は、SELECTリストでのみ使用することができます。</target>
        </trans-unit>
        <trans-unit id="ca6478c62d3dc1f97483e29223ff3d12797f8b7c" translate="yes" xml:space="preserve">
          <source>The pseudo/hidden column may only be used in a WHERE clause.</source>
          <target state="translated">擬似/非表示のカラムは、WHERE句でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="4812bd2f1ef82113d348414069707122f4719cd1" translate="yes" xml:space="preserve">
          <source>The pseudocode for the resulting adapter looks as follows. In the code, &lt;code&gt;V&lt;/code&gt; represents the result type of the &lt;code&gt;try/finally&lt;/code&gt; construct; &lt;code&gt;A&lt;/code&gt;/&lt;code&gt;a&lt;/code&gt;, the types and values of arguments to the resulting handle consumed by the cleanup; and &lt;code&gt;B&lt;/code&gt;/&lt;code&gt;b&lt;/code&gt;, those of arguments to the resulting handle discarded by the cleanup.</source>
          <target state="translated">結果のアダプターの擬似コードは次のようになります。コードでは、 &lt;code&gt;V&lt;/code&gt; は &lt;code&gt;try/finally&lt;/code&gt; コンストラクトの結果タイプを表します。 &lt;code&gt;A&lt;/code&gt; / &lt;code&gt;a&lt;/code&gt; 、クリーンアップによって消費される結果のハンドルへの引数のタイプと値。および &lt;code&gt;B&lt;/code&gt; / &lt;code&gt;b&lt;/code&gt; 、クリーンアップによって破棄された結果のハンドルへの引数の引数。</target>
        </trans-unit>
        <trans-unit id="f1c0bbc66bdb6ee141f8f29a8594a0f7f7c26d71" translate="yes" xml:space="preserve">
          <source>The public exponent-value F4 = 65537.</source>
          <target state="translated">公開指数値F4=65537。</target>
        </trans-unit>
        <trans-unit id="889b7ac5748f9ffaedc89e0966ff01f02908492a" translate="yes" xml:space="preserve">
          <source>The public identifier and system identifier are &lt;code&gt;null&lt;/code&gt;, and byte and character stream are either &lt;code&gt;null&lt;/code&gt; or contain no byte or character.</source>
          <target state="translated">パブリック識別子とシステム識別子が &lt;code&gt;null&lt;/code&gt; であり、バイトと文字ストリームが &lt;code&gt;null&lt;/code&gt; であるか、バイトまたは文字が含まれていません。</target>
        </trans-unit>
        <trans-unit id="607a67c14bf23bd75e74af63fd58a783d5e8e1e8" translate="yes" xml:space="preserve">
          <source>The public identifier as a string, or null if none is available.</source>
          <target state="translated">公開識別子を文字列で指定します。</target>
        </trans-unit>
        <trans-unit id="666d68a6bc57f9864e5a56565fbc5a900e031826" translate="yes" xml:space="preserve">
          <source>The public identifier associated with the entity if specified, and &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">指定されている場合はエンティティに関連付けられているパブリック識別子、それ以外の場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3641e2bf5da57b5d4d6f8981fd5ba25936de99d5" translate="yes" xml:space="preserve">
          <source>The public identifier for the XML Schema definition that defines the XML tags and their valid values for a &lt;code&gt;WebRowSet&lt;/code&gt; implementation.</source>
          <target state="translated">&lt;code&gt;WebRowSet&lt;/code&gt; 実装のXMLタグとその有効な値を定義するXMLスキーマ定義のパブリック識別子。</target>
        </trans-unit>
        <trans-unit id="6082fcf3b4787c7e3fa7e05f8cd01a60bcc96655" translate="yes" xml:space="preserve">
          <source>The public identifier for this input source.</source>
          <target state="translated">この入力ソースの公開識別子。</target>
        </trans-unit>
        <trans-unit id="306fe0d5ecd3a197943ce9157ab37545b45833fc" translate="yes" xml:space="preserve">
          <source>The public identifier for this input source. This may be mapped to an input source using an implementation dependent mechanism (such as catalogues or other mappings). The public identifier, if specified, may also be reported as part of the location information when errors are reported.</source>
          <target state="translated">この入力ソースの公開識別子。これは、実装依存のメカニズム(カタログや他のマッピングなど)を使用して入力ソースにマッピングされてもよい。指定された場合、この公開識別子は、エラーが報告されるときに位置情報の一部として報告されることもあります。</target>
        </trans-unit>
        <trans-unit id="8616cf097304d23ed9bdee5a10da665d66f611aa" translate="yes" xml:space="preserve">
          <source>The public identifier is always optional: if the application writer includes one, it will be provided as part of the location information.</source>
          <target state="translated">公開識別子は常にオプションです:アプリケーションライターがそれを含む場合、それは位置情報の一部として提供されます。</target>
        </trans-unit>
        <trans-unit id="084fd15bde5749cac40870c17b4a07ccada3bfac" translate="yes" xml:space="preserve">
          <source>The public identifier of the external subset.</source>
          <target state="translated">外部サブセットの公開識別子。</target>
        </trans-unit>
        <trans-unit id="e59aa7e65372678aa563cfbbb9d944fcecc85ead" translate="yes" xml:space="preserve">
          <source>The public identifier of this notation.</source>
          <target state="translated">この記法の公開識別子。</target>
        </trans-unit>
        <trans-unit id="af89db99417a364a5ed02edd579e71607f09ad52" translate="yes" xml:space="preserve">
          <source>The public identifier of this notation. If the public identifier was not specified, this is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">この表記の公開識別子。公開識別子が指定されていない場合、これは &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="452a322725b189c1bd9848c6035428fa8271f855" translate="yes" xml:space="preserve">
          <source>The public identifier that was set with setPublicId, or null if setPublicId was not called.</source>
          <target state="translated">setPublicId で設定されたパブリック識別子、または setPublicId が呼び出されなかった場合は null。</target>
        </trans-unit>
        <trans-unit id="1d7f2c29e78db86abe70e3052b6a63ed7f102e04" translate="yes" xml:space="preserve">
          <source>The public identifier, or null if none was supplied.</source>
          <target state="translated">公開識別子、または何も与えられなかった場合はnull。</target>
        </trans-unit>
        <trans-unit id="f26be22251f1ffca01d91cc5cb358dc14cdbbb9d" translate="yes" xml:space="preserve">
          <source>The public key or the signature algorithm has been constrained.</source>
          <target state="translated">公開鍵または署名アルゴリズムが制約されています。</target>
        </trans-unit>
        <trans-unit id="c28eb2aa6086a8572e42d5f820ee00606327026e" translate="yes" xml:space="preserve">
          <source>The public methods of all &lt;code&gt;CertStoreSpi&lt;/code&gt; objects must be thread-safe. That is, multiple threads may concurrently invoke these methods on a single &lt;code&gt;CertStoreSpi&lt;/code&gt; object (or more than one) with no ill effects. This allows a &lt;code&gt;CertPathBuilder&lt;/code&gt; to search for a CRL while simultaneously searching for further certificates, for instance.</source>
          <target state="translated">すべての &lt;code&gt;CertStoreSpi&lt;/code&gt; オブジェクトのパブリックメソッドはスレッドセーフでなければなりません。つまり、複数のスレッドが単一の &lt;code&gt;CertStoreSpi&lt;/code&gt; オブジェクト（または複数）でこれらのメソッドを同時に呼び出しても、悪影響はありません。これにより、たとえば、 &lt;code&gt;CertPathBuilder&lt;/code&gt; はCRLを検索すると同時に、他の証明書を検索できます。</target>
        </trans-unit>
        <trans-unit id="a02308f567fb58540f6ccefee2675e6a72ad544b" translate="yes" xml:space="preserve">
          <source>The public-exponent value F0 = 3.</source>
          <target state="translated">公開指数値F0=3である。</target>
        </trans-unit>
        <trans-unit id="ffd416e4ee6aca89b81f63e35d9c17c738fb2e7a" translate="yes" xml:space="preserve">
          <source>The publisher returned by the &lt;a href=&quot;httpresponse#body()&quot;&gt;&lt;code&gt;body&lt;/code&gt;&lt;/a&gt; method can be subscribed to only once. The first subscriber will receive the body response bytes if successfully subscribed, or will cause the subscription to be cancelled otherwise. If more subscriptions are attempted, the subsequent subscribers will be immediately subscribed with an empty subscription and their &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt;&lt;code&gt;onError&lt;/code&gt;&lt;/a&gt; method will be invoked with an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;httpresponse#body()&quot;&gt; &lt;code&gt;body&lt;/code&gt; &lt;/a&gt;メソッドによって返される発行元は、1回だけサブスクライブできます。最初のサブスクライバーは、正常にサブスクライブされた場合は本文応答バイトを受信します。それ以外の場合は、サブスクリプションがキャンセルされます。さらにサブスクリプションが試行されると、後続のサブスクライバーはすぐに空のサブスクリプションでサブスクライブされ、それらの&lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt; &lt;code&gt;onError&lt;/code&gt; &lt;/a&gt;メソッドは &lt;code&gt;IllegalStateException&lt;/code&gt; で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="70b9b090e2e3af4d5dc6ecafb7583d4cc88b82f8" translate="yes" xml:space="preserve">
          <source>The purpose of the key that is to be selected.</source>
          <target state="translated">選ばれるべき鍵の目的。</target>
        </trans-unit>
        <trans-unit id="0a218ad17fd93df6b98634337c4e7514b88c3517" translate="yes" xml:space="preserve">
          <source>The purpose of the methods to transform to/from the well-defined CIEXYZ color space is to support conversions between any two color spaces at a reasonably high degree of accuracy. It is expected that particular implementations of subclasses of ColorSpace (e.g. ICC_ColorSpace) will support high performance conversion based on underlying platform color management systems.</source>
          <target state="translated">よく定義されたCIEXYZ色空間へ/から変換する方法の目的は、任意の2つの色空間間の変換を合理的に高い精度でサポートすることである。ColorSpaceのサブクラス(例えばICC_ColorSpace)の特定の実装が、基礎となるプラットフォームのカラーマネジメントシステムに基づいた高性能変換をサポートすることが期待されています。</target>
        </trans-unit>
        <trans-unit id="58212aee8e35283834dfaea45dcaab9b066bc5e9" translate="yes" xml:space="preserve">
          <source>The purpose of this interface is to group (and provide type safety for) all &lt;code&gt;CertStore&lt;/code&gt; parameter specifications. All &lt;code&gt;CertStore&lt;/code&gt; parameter specifications must implement this interface.</source>
          <target state="translated">このインタフェースの目的は、すべての &lt;code&gt;CertStore&lt;/code&gt; パラメータ仕様をグループ化（およびタイプセーフを提供）することです。すべての &lt;code&gt;CertStore&lt;/code&gt; パラメータ仕様は、このインターフェースを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="497084f3740257fa01928dfab9f2a8bd92f16644" translate="yes" xml:space="preserve">
          <source>The purpose of this interface is to group (and provide type safety for) all certification path validator results. All results returned by the &lt;a href=&quot;certpathvalidator#validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)&quot;&gt;&lt;code&gt;CertPathValidator.validate&lt;/code&gt;&lt;/a&gt; method must implement this interface.</source>
          <target state="translated">このインターフェースの目的は、すべての認証パスバリデーターの結果をグループ化（およびタイプセーフティを提供）することです。&lt;a href=&quot;certpathvalidator#validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)&quot;&gt; &lt;code&gt;CertPathValidator.validate&lt;/code&gt; &lt;/a&gt;メソッドによって返されるすべての結果は、このインターフェイスを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="8f81245615bb3902dc0ddd73189d74b0875c911f" translate="yes" xml:space="preserve">
          <source>The purpose of this interface is to group (and provide type safety for) all certification path validator results. All results returned by the &lt;a href=&quot;certpathvalidator#validate-java.security.cert.CertPath-java.security.cert.CertPathParameters-&quot;&gt;&lt;code&gt;CertPathValidator.validate&lt;/code&gt;&lt;/a&gt; method must implement this interface.</source>
          <target state="translated">このインターフェイスの目的は、すべての証明書パス検証の結果をグループ化（およびタイプセーフを提供）することです。&lt;a href=&quot;certpathvalidator#validate-java.security.cert.CertPath-java.security.cert.CertPathParameters-&quot;&gt; &lt;code&gt;CertPathValidator.validate&lt;/code&gt; &lt;/a&gt;メソッドによって返されるすべての結果は、このインターフェースを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="f40bfb04d6225f59e5f6ed15eef633d42be0d88d" translate="yes" xml:space="preserve">
          <source>The pushback buffer.</source>
          <target state="translated">プッシュバックバッファです。</target>
        </trans-unit>
        <trans-unit id="c4aab08f812dbdbd1e2f17d2f57df09ad2f9651a" translate="yes" xml:space="preserve">
          <source>The quality of implementation specifications concern two properties, accuracy of the returned result and monotonicity of the method. Accuracy of the floating-point &lt;code&gt;Math&lt;/code&gt; methods is measured in terms of</source>
          <target state="translated">実装仕様の品質は、返される結果の精度とメソッドの単調性という2つのプロパティに関係します。浮動小数点 &lt;code&gt;Math&lt;/code&gt; メソッドの精度は、</target>
        </trans-unit>
        <trans-unit id="f5cb0e2e965fe133bfc4b502b0d3bcf943a71b82" translate="yes" xml:space="preserve">
          <source>The quarter-of-year can only be calculated if the month-of-year is available.</source>
          <target state="translated">半期分は、その月の月数がある場合にのみ計算できます。</target>
        </trans-unit>
        <trans-unit id="dddac52873ee50d0b150f5774b33d3171bd12498" translate="yes" xml:space="preserve">
          <source>The query can be used as follows:</source>
          <target state="translated">クエリは以下のように使用できます。</target>
        </trans-unit>
        <trans-unit id="70bb5883a481eb39ca30783c6a7918ebefc04d35" translate="yes" xml:space="preserve">
          <source>The query component of a URI, if defined, only contains legal URI characters.</source>
          <target state="translated">URIのクエリコンポーネントは、定義されている場合、合法的なURI文字のみを含む。</target>
        </trans-unit>
        <trans-unit id="e864d8346a749cfdd6a77c410e2c3f6c279670bc" translate="yes" xml:space="preserve">
          <source>The query implementation examines the &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt; field and uses it to create a &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">クエリ実装は&lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;EPOCH_DAY&lt;/code&gt; &lt;/a&gt;フィールドを調べ、それを使用して &lt;code&gt;LocalDate&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="6043cc3fa8c882b0feedaeddf7526a1d1132efc5" translate="yes" xml:space="preserve">
          <source>The query implementation examines the &lt;a href=&quot;chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; field and uses it to create a &lt;code&gt;LocalTime&lt;/code&gt;.</source>
          <target state="translated">クエリ実装は&lt;a href=&quot;chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;NANO_OF_DAY&lt;/code&gt; &lt;/a&gt;フィールドを調べ、それを使用して &lt;code&gt;LocalTime&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="b5e706d8394f50472ebf16e28898a8a1e6a58887" translate="yes" xml:space="preserve">
          <source>The query implementation examines the &lt;a href=&quot;chronofield#OFFSET_SECONDS&quot;&gt;&lt;code&gt;OFFSET_SECONDS&lt;/code&gt;&lt;/a&gt; field and uses it to create a &lt;code&gt;ZoneOffset&lt;/code&gt;.</source>
          <target state="translated">クエリ実装は&lt;a href=&quot;chronofield#OFFSET_SECONDS&quot;&gt; &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; &lt;/a&gt;フィールドを調べ、それを使用して &lt;code&gt;ZoneOffset&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="a9d533d67b796aabaca7323db73ec2da2a5567db" translate="yes" xml:space="preserve">
          <source>The query submitted by the driver to validate the connection shall be executed in the context of the current transaction.</source>
          <target state="translated">接続を検証するためにドライバが提出したクエリは、現在のトランザクションのコンテキストで実行されなければならない。</target>
        </trans-unit>
        <trans-unit id="b701fffe515ad54c8901b8edcc958e95fc0863c4" translate="yes" xml:space="preserve">
          <source>The quotes surrounding a quoted value, and any backslashes within that value, are considered to be part of the value.</source>
          <target state="translated">引用された値を囲む引用符、およびその値内のバックスラッシュは、値の一部とみなされます。</target>
        </trans-unit>
        <trans-unit id="a7d974dd7e85a61e651a1f194908d0947c9c72a3" translate="yes" xml:space="preserve">
          <source>The radix is either smaller than &lt;a href=&quot;character#MIN_RADIX&quot;&gt;&lt;code&gt;Character.MIN_RADIX&lt;/code&gt;&lt;/a&gt; or larger than &lt;a href=&quot;character#MAX_RADIX&quot;&gt;&lt;code&gt;Character.MAX_RADIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">基数はいずれよりも小さい&lt;a href=&quot;character#MIN_RADIX&quot;&gt; &lt;code&gt;Character.MIN_RADIX&lt;/code&gt; &lt;/a&gt;又はより大きい&lt;a href=&quot;character#MAX_RADIX&quot;&gt; &lt;code&gt;Character.MAX_RADIX&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1aff07d7777d5b73265b5ea3b6fd0d12004a2b97" translate="yes" xml:space="preserve">
          <source>The range is never null. For example, the 'Year' field is shorthand for 'YearOfForever'. It therefore has a unit of 'Years' and a range of 'Forever'.</source>
          <target state="translated">範囲は決してnullではありません。例えば、'Year' フィールドは 'YearOfForever' の略語です。したがって、'Year' の単位と 'Forever' の範囲を持ちます。</target>
        </trans-unit>
        <trans-unit id="28c3676b410b66174f1db5ce3adf03537f612813" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This date is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この日付は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="3be0f1078a3bff28a13de38bf87eb44d5f6cfd7c" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This date-time is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この日付時間は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="91574718820af02ba334ca5d2fcaa8ec6eaea0fc" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This day-of-week is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この曜日の指定は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="49564c5fdd906eee0231c2e097092a4591ff74b8" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This era is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この時代は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="d7949501ac98f64cd52d82177d9b4791e0d319f3" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This instant is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この瞬間は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="8a75a30588e66efcb4e03e0edc195ee3a6dc4a14" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This month is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この月は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="e107332e6198f288dc13a1a398312820086bba7b" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This month-day is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この月日は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="014329a030e2ab6f6b560564601eb56834e5e981" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This offset is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。このオフセットは、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="f8e7e158ec4085c5caa0000a57a4cf2e6742dd0c" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This time is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この時間は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="735932a1888a19dccb3e713207eb70618d6c1110" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This year is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この年は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="461a26e4d72a556581a55b26af7476b03a89d671" translate="yes" xml:space="preserve">
          <source>The range object expresses the minimum and maximum valid values for a field. This year-month is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown.</source>
          <target state="translated">rangeオブジェクトは、フィールドの有効な最小値と最大値を表現します。この年月は、返される範囲の精度を高めるために使用されます。フィールドがサポートされていないなどの理由で範囲を返すことができない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="85b6f271b8e9dbcfec00b32e847d50024b09f127" translate="yes" xml:space="preserve">
          <source>The range of a duration requires the storage of a number larger than a &lt;code&gt;long&lt;/code&gt;. To achieve this, the class stores a &lt;code&gt;long&lt;/code&gt; representing seconds and an &lt;code&gt;int&lt;/code&gt; representing nanosecond-of-second, which will always be between 0 and 999,999,999. The model is of a directed duration, meaning that the duration may be negative.</source>
          <target state="translated">期間の範囲では、 &lt;code&gt;long&lt;/code&gt; よりも大きい数値を格納する必要があります。これを実現するために、クラスは &lt;code&gt;long&lt;/code&gt; を表す秒とnanosecond-of-secondを表す &lt;code&gt;int&lt;/code&gt; を格納します。これは常に0から999,999,999の間です。モデルは有向期間です。つまり、期間は負になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="32e38d37e14ca58b0618d587028515e73e2533f4" translate="yes" xml:space="preserve">
          <source>The range of an instant requires the storage of a number larger than a &lt;code&gt;long&lt;/code&gt;. To achieve this, the class stores a &lt;code&gt;long&lt;/code&gt; representing epoch-seconds and an &lt;code&gt;int&lt;/code&gt; representing nanosecond-of-second, which will always be between 0 and 999,999,999. The epoch-seconds are measured from the standard Java epoch of &lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt; where instants after the epoch have positive values, and earlier instants have negative values. For both the epoch-second and nanosecond parts, a larger value is always later on the time-line than a smaller value.</source>
          <target state="translated">インスタントの範囲には、 &lt;code&gt;long&lt;/code&gt; よりも大きい数のストレージが必要です。これを実現するために、クラスはエポック秒を表す &lt;code&gt;long&lt;/code&gt; とナノ秒を表す &lt;code&gt;int&lt;/code&gt; を格納します。これは常に0から999,999,999の間です。エポック秒は、 &lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt; の標準Javaエポックから測定されます。エポックの後の瞬間は正の値を持ち、それ以前の瞬間は負の値を持ちます。エポック秒とナノ秒の両方の部分で、大きい値は常に小さい値よりタイムライン上で遅くなります。</target>
        </trans-unit>
        <trans-unit id="9c4be6accb9dad9be6efe2a2837d3150210f72f4" translate="yes" xml:space="preserve">
          <source>The range of the field is the period that the field varies within. For example, in the field 'MonthOfYear', the range is 'Years'. See also &lt;a href=&quot;#getBaseUnit()&quot;&gt;&lt;code&gt;getBaseUnit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールドの範囲は、フィールドが変化する期間です。たとえば、フィールド「MonthOfYear」の範囲は「Years」です。&lt;a href=&quot;#getBaseUnit()&quot;&gt; &lt;code&gt;getBaseUnit()&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="679d54d91b72b6e361f360707cfcab80ec107617" translate="yes" xml:space="preserve">
          <source>The range of the field is the period that the field varies within. For example, in the field 'MonthOfYear', the range is 'Years'. See also &lt;a href=&quot;temporalfield#getBaseUnit--&quot;&gt;&lt;code&gt;TemporalField.getBaseUnit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールドの範囲は、フィールドが変化する期間です。たとえば、フィールド 'MonthOfYear'では、範囲は 'Years'です。&lt;a href=&quot;temporalfield#getBaseUnit--&quot;&gt; &lt;code&gt;TemporalField.getBaseUnit()&lt;/code&gt; &lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="8d54476f03a91c05aa619016f50c3163119ec639" translate="yes" xml:space="preserve">
          <source>The range of the field is the period that the field varies within. For example, in the field 'MonthOfYear', the range is 'Years'. See also &lt;a href=&quot;temporalfield#getBaseUnit--&quot;&gt;&lt;code&gt;getBaseUnit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールドの範囲は、フィールドが変化する期間です。たとえば、フィールド 'MonthOfYear'では、範囲は 'Years'です。&lt;a href=&quot;temporalfield#getBaseUnit--&quot;&gt; &lt;code&gt;getBaseUnit()&lt;/code&gt; &lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="bb9262661e91ed7bef2f4dcc6a38ba0c83ed604f" translate="yes" xml:space="preserve">
          <source>The range of valid Japanese eras can change over time due to the nature of the Japanese calendar system.</source>
          <target state="translated">日本の暦の性質上、日本の有効な年の範囲は時間の経過とともに変化することがあります。</target>
        </trans-unit>
        <trans-unit id="0bed82254a2488e57b5e72ee8db8066e750b8a42" translate="yes" xml:space="preserve">
          <source>The range of valid values for a date-time field.</source>
          <target state="translated">日付時間フィールドの有効な値の範囲。</target>
        </trans-unit>
        <trans-unit id="f74c7503d6071b30c8c61a8b75f2f1ec45dd13e0" translate="yes" xml:space="preserve">
          <source>The raw authority component of this URI, or &lt;code&gt;null&lt;/code&gt; if the authority is undefined</source>
          <target state="translated">このURIの未加工の権限コンポーネント。権限が未定義の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca0f93a7d9b2a593cc73021049a4babe847f8e5a" translate="yes" xml:space="preserve">
          <source>The raw fragment component of this URI, or &lt;code&gt;null&lt;/code&gt; if the fragment is undefined</source>
          <target state="translated">このURIの生のフラグメントコンポーネント。フラグメントが未定義の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="08a189753abac31378f32795de3236540870ae3b" translate="yes" xml:space="preserve">
          <source>The raw query component of this URI, or &lt;code&gt;null&lt;/code&gt; if the query is undefined</source>
          <target state="translated">このURIの生のクエリコンポーネント。クエリが未定義の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05172f64d4d3b180d734e94e231efb1e5ba69223" translate="yes" xml:space="preserve">
          <source>The raw scheme-specific part of this URI (never &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">このURIのスキーマ固有部分（ &lt;code&gt;null&lt;/code&gt; にはならない）</target>
        </trans-unit>
        <trans-unit id="5e87c817a622606571e558fb125257b7d14ba713" translate="yes" xml:space="preserve">
          <source>The raw user-information component of this URI, or &lt;code&gt;null&lt;/code&gt; if the user information is undefined</source>
          <target state="translated">このURIの生のユーザー情報コンポーネント。ユーザー情報が未定義の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f41303d8fd6ce5aa0821756418e069b981b7b161" translate="yes" xml:space="preserve">
          <source>The read end of a pipe</source>
          <target state="translated">パイプのリードエンド</target>
        </trans-unit>
        <trans-unit id="2f625a725ca986b919f09071c8736ca180edd0b0" translate="yes" xml:space="preserve">
          <source>The read lock and write lock both support interruption during lock acquisition.</source>
          <target state="translated">リードロックとライトロックは、ロック取得中の割り込みをサポートしています。</target>
        </trans-unit>
        <trans-unit id="1910ace8ec568ce21c0234fca6b9fc966c9cfd9a" translate="yes" xml:space="preserve">
          <source>The read lock does not support a &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;readLock().newCondition()&lt;/code&gt; throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">読み取りロックは&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;をサポートせず、 &lt;code&gt;readLock().newCondition()&lt;/code&gt; は &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="2ef8ece400c68c93f9421b6ba44a9c57dd5cbaa4" translate="yes" xml:space="preserve">
          <source>The read lock is acquired by the current thread; or</source>
          <target state="translated">読み取りロックは、現在のスレッドで取得されます。</target>
        </trans-unit>
        <trans-unit id="c9ea905530375593b0c66214e6790341afceb692" translate="yes" xml:space="preserve">
          <source>The read operation may read up to</source>
          <target state="translated">読み取り操作では、最大</target>
        </trans-unit>
        <trans-unit id="2865a10b019911b5946864d5522b0a72162698af" translate="yes" xml:space="preserve">
          <source>The read position of the input stream is positioned to the next available byte after the encoded distinguished name.</source>
          <target state="translated">入力ストリームの読み出し位置は、符号化された識別名の次の利用可能なバイトに配置される。</target>
        </trans-unit>
        <trans-unit id="634db75a4e5ec4659af37c3e0e8afa693c0276b7" translate="yes" xml:space="preserve">
          <source>The readObject method is responsible for reading and restoring the state of the object for its particular class using data written to the stream by the corresponding writeObject method. The method does not need to concern itself with the state belonging to its superclasses or subclasses. State is restored by reading data from the ObjectInputStream for the individual fields and making assignments to the appropriate fields of the object. Reading primitive data types is supported by DataInput.</source>
          <target state="translated">readObject メソッドは、対応する writeObject メソッドによってストリームに書き込まれたデータを使用して、その特定のクラスのオブジェクトの状態を読み込んで復元します。このメソッドは、そのスーパークラスまたはサブクラスに属する状態を気にする必要はありません。状態は、個々のフィールドの ObjectInputStream からデータを読み取り、オブジェクトの適切なフィールドに代入することで復元されます。プリミティブ・データ型の読み取りは、DataInput によってサポートされています。</target>
        </trans-unit>
        <trans-unit id="8520a1a1ecaa0cf4e920c8fe17c0f626c164c35d" translate="yes" xml:space="preserve">
          <source>The readObject method is responsible for reading from the stream and restoring the classes fields. It may call in.defaultReadObject to invoke the default mechanism for restoring the object's non-static and non-transient fields. The defaultReadObject method uses information in the stream to assign the fields of the object saved in the stream with the correspondingly named fields in the current object. This handles the case when the class has evolved to add new fields. The method does not need to concern itself with the state belonging to its superclasses or subclasses. State is restored by reading data from the ObjectInputStream for the individual fields and making assignments to the appropriate fields of the object. Reading primitive data types is supported by DataInput.</source>
          <target state="translated">readObject メソッドは、ストリームからの読み込みとクラスのフィールドの復元を担当します。これは in.defaultReadObject を呼び出して、オブジェクトの非静的および非一時的なフィールドを復元するためのデフォルトのメカニズムを呼び出すことができます。defaultReadObject メソッドは、ストリーム内の情報を使用して、ストリーム内に保存されたオブジェクトのフィールドを、現在のオブジェクト内の対応する名前のフィールドに割り当てます。これは、クラスが新しいフィールドを追加するために進化した場合を処理します。このメソッドは、そのスーパークラスやサブクラスに属する状態を気にする必要はありません。状態は、個々のフィールドの ObjectInputStream からデータを読み取り、オブジェクトの適切なフィールドへの割り当てを行うことで復元されます。プリミティブ・データ型の読み取りは、DataInput によってサポートされています。</target>
        </trans-unit>
        <trans-unit id="d20e6c840d9627a8eaa7891d9565907ed4a7abbb" translate="yes" xml:space="preserve">
          <source>The readObject method is responsible for reading from the stream and restoring the classes fields. It may call in.defaultReadObject to invoke the default mechanism for restoring the object's non-static and non-transient fields. The defaultReadObject method uses information in the stream to assign the fields of the object saved in the stream with the correspondingly named fields in the current object. This handles the case when the class has evolved to add new fields. The method does not need to concern itself with the state belonging to its superclasses or subclasses. State is saved by writing the individual fields to the ObjectOutputStream using the writeObject method or by using the methods for primitive data types supported by DataOutput.</source>
          <target state="translated">readObject メソッドは、ストリームからの読み込みとクラスのフィールドの復元を担当します。これは in.defaultReadObject を呼び出して、オブジェクトの非静的および非一時的なフィールドを復元するためのデフォルトのメカニズムを呼び出すことができます。defaultReadObject メソッドは、ストリーム内の情報を使用して、ストリーム内に保存されたオブジェクトのフィールドを、現在のオブジェクト内の対応する名前のフィールドに割り当てます。これは、クラスが新しいフィールドを追加するために進化した場合を処理します。このメソッドは、そのスーパークラスやサブクラスに属する状態を気にする必要はありません。状態は、個々のフィールドを writeObject メソッドを使用して ObjectOutputStream に書き込むか、DataOutput でサポートされているプリミティブ・データ型のメソッドを使用して保存されます。</target>
        </trans-unit>
        <trans-unit id="1a89c7b63eeec0e71ccea53ce7c51271148781b8" translate="yes" xml:space="preserve">
          <source>The readObjectNoData method is responsible for initializing the state of the object for its particular class in the event that the serialization stream does not list the given class as a superclass of the object being deserialized. This may occur in cases where the receiving party uses a different version of the deserialized instance's class than the sending party, and the receiver's version extends classes that are not extended by the sender's version. This may also occur if the serialization stream has been tampered; hence, readObjectNoData is useful for initializing deserialized objects properly despite a &quot;hostile&quot; or incomplete source stream.</source>
          <target state="translated">readObjectNoDataメソッドは、シリアル化ストリームが、デシリアライズされるオブジェクトのスーパークラスとして指定されたクラスをリストしない場合に、その特定のクラスのオブジェクトの状態を初期化する責任があります。これは、受信側が送信側とは異なるバージョンのデシリアライズされたインスタンスのクラスを使用し、受信側のバージョンが送信側のバージョンでは拡張されていないクラスを拡張している場合に発生する可能性があります。これは、シリアライズストリームが改ざんされた場合にも発生する可能性があります。 そのため、readObjectNoDataは、ソースストリームが「敵対的」または不完全であるにもかかわらず、デシリアライズされたオブジェクトを適切に初期化するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="db45e6393a0e6e733dd17719a250e994558a12bb" translate="yes" xml:space="preserve">
          <source>The readStreamHeader method is provided to allow subclasses to read and verify their own stream headers.</source>
          <target state="translated">readStreamHeader メソッドは、サブクラスが自分のストリームヘッダを読み込んで検証できるようにするために提供されています。</target>
        </trans-unit>
        <trans-unit id="f02ead4cd4d703a4fc4aec1b89640970265ef72c" translate="yes" xml:space="preserve">
          <source>The readStreamHeader method is provided to allow subclasses to read and verify their own stream headers. It reads and verifies the magic number and version number.</source>
          <target state="translated">readStreamHeaderメソッドは、サブクラスが自分のストリームヘッダを読み込んで検証できるようにするために提供されています。これは、マジックナンバーとバージョン番号を読み込んで検証します。</target>
        </trans-unit>
        <trans-unit id="b8970b91121ef6350ebd73016d3cfaeca16ee503" translate="yes" xml:space="preserve">
          <source>The reader associated with this console</source>
          <target state="translated">このコンソールに関連付けられたリーダー</target>
        </trans-unit>
        <trans-unit id="34e5f7ec6cf4640a064600b8a13abb578ea1e6fd" translate="yes" xml:space="preserve">
          <source>The reader can be configured by registering actions (of type &lt;code&gt;HTMLDocument.HTMLReader.TagAction&lt;/code&gt;) that describe how to handle the action. The idea behind the actions provided is that the most natural text editing operations can be provided if the element structure boils down to paragraphs with runs of some kind of style in them. Some things are more naturally specified structurally, so arbitrary structure should be allowed above the paragraphs, but will need to be edited with structural actions. The implication of this is that some of the HTML elements specified in the stream being parsed will be collapsed into attributes, and in some cases paragraphs will be synthesized. When HTML elements have been converted to attributes, the attribute key will be of type HTML.Tag, and the value will be of type AttributeSet so that no information is lost. This enables many of the existing actions to work so that the user can type input, hit the return key, backspace, delete, etc and have a reasonable result. Selections can be created, and attributes applied or removed, etc. With this in mind, the work done by the reader can be categorized into the following kinds of tasks:</source>
          <target state="translated">リーダーは、アクション（ &lt;code&gt;HTMLDocument.HTMLReader.TagAction&lt;/code&gt; タイプ）を登録することで構成できます。）アクションの処理方法を説明します。提供されるアクションの背後にある考え方は、要素構造が、ある種のスタイルの実行を含む段落に要約される場合に、最も自然なテキスト編集操作を提供できるということです。より自然に構造的に指定されるものもあるため、段落の上で任意の構造を許可する必要がありますが、構造アクションで編集する必要があります。これは、解析されるストリームで指定されたHTML要素の一部が属性に折りたたまれ、場合によっては段落が合成されることを意味します。 HTML要素が属性に変換されると、属性キーはHTML.Tagタイプになり、値はAttributeSetタイプになるため、情報が失われることはありません。これにより、既存のアクションの多くが機能するようになり、ユーザーは入力を入力してリターンキーを押し、バックスペース、削除など、妥当な結果が得られます。選択範囲を作成したり、属性を適用または削除したりすることができます。これを念頭に置いて、読者が行う作業は、次の種類のタスクに分類できます。</target>
        </trans-unit>
        <trans-unit id="cf210785560df5e3fd9338a81e883e6a91061562" translate="yes" xml:space="preserve">
          <source>The reader for this &lt;code&gt;CachedRowSet&lt;/code&gt; object will use</source>
          <target state="translated">この &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトのリーダーは</target>
        </trans-unit>
        <trans-unit id="6c69219580471766868b9f3ba0f7605623a45c33" translate="yes" xml:space="preserve">
          <source>The reader must not be operated on during the execution of the terminal stream operation. Otherwise, the result of the terminal stream operation is undefined.</source>
          <target state="translated">端末ストリーム操作の実行中にリーダを操作してはならない。そうでなければ、ターミナルストリーム操作の結果は未定義である。</target>
        </trans-unit>
        <trans-unit id="5ae6624a403eb2ed6a2939e1c276174b1b68bae0" translate="yes" xml:space="preserve">
          <source>The reader's default action for malformed-input and unmappable-character errors is to &lt;a href=&quot;../charset/codingerroraction#REPORT&quot;&gt;report&lt;/a&gt; them. When more control over the error handling is required, the constructor that takes a &lt;a href=&quot;../charset/charsetdecoder&quot;&gt;CharsetDecoder&lt;/a&gt; should be used.</source>
          <target state="translated">不正な入力およびマップ不可能な文字のエラーに対する読者のデフォルトのアクションは、それらを&lt;a href=&quot;../charset/codingerroraction#REPORT&quot;&gt;報告&lt;/a&gt;することです。エラー処理をさらに制御する必要がある場合は、&lt;a href=&quot;../charset/charsetdecoder&quot;&gt;CharsetDecoder&lt;/a&gt;を使用するコンストラクターを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="453ec519eda3fcb734a7ed183e48753d77c803a1" translate="yes" xml:space="preserve">
          <source>The reader/writer facility provided by the &lt;code&gt;SyncProvider&lt;/code&gt; class is pluggable, allowing for the customization of data retrieval and updating. If a different concurrency control mechanism is desired, a different implementation of &lt;code&gt;SyncProvider&lt;/code&gt; can be plugged in using the method &lt;code&gt;setSyncProvider&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SyncProvider&lt;/code&gt; クラスによって提供されるリーダー/ライター機能はプラグイン可能であり、データの取得と更新をカスタマイズできます。別の同時実行制御メカニズムが必要な場合は、メソッド &lt;code&gt;setSyncProvider&lt;/code&gt; を使用して &lt;code&gt;SyncProvider&lt;/code&gt; の別の実装をプラグインできます。</target>
        </trans-unit>
        <trans-unit id="8998e48671432cbbcd265dfa2ebdacbf0a22841c" translate="yes" xml:space="preserve">
          <source>The real paint behavior occurs naturally from the association that the component has with its parent container (the same container hosting this view).</source>
          <target state="translated">実際のペイント動作は、コンポーネントがその親コンテナ(このビューをホストしている同じコンテナ)との関連付けから自然に発生します。</target>
        </trans-unit>
        <trans-unit id="6634676b2a3890f259f108b85e360b357783a624" translate="yes" xml:space="preserve">
          <source>The real paint behavior occurs naturally from the association that the component has with its parent container (the same container hosting this view). This is implemented to do nothing.</source>
          <target state="translated">実際のペイント動作は、コンポーネントがその親コンテナ(このビューをホストしている同じコンテナ)との関連付けから自然に発生します。これは何もしないように実装されています。</target>
        </trans-unit>
        <trans-unit id="1937fc02231b146a373cfbbd353a2e3a9bef7353" translate="yes" xml:space="preserve">
          <source>The real source.</source>
          <target state="translated">本当のソース。</target>
        </trans-unit>
        <trans-unit id="b9d32ae3ca8a166a78d846fc7aad0c5b1d696a11" translate="yes" xml:space="preserve">
          <source>The reason string</source>
          <target state="translated">理由の文字列</target>
        </trans-unit>
        <trans-unit id="c02940838e2a0e7c78ef96311f0f4a5d64f9e4e9" translate="yes" xml:space="preserve">
          <source>The reason that listeners created with &lt;code&gt;EventHandler&lt;/code&gt; have such a small footprint is that the &lt;code&gt;Proxy&lt;/code&gt; class, on which the &lt;code&gt;EventHandler&lt;/code&gt; relies, shares implementations of identical interfaces. For example, if you use the &lt;code&gt;EventHandler create&lt;/code&gt; methods to make all the &lt;code&gt;ActionListener&lt;/code&gt;s in an application, all the action listeners will be instances of a single class (one created by the &lt;code&gt;Proxy&lt;/code&gt; class). In general, listeners based on the &lt;code&gt;Proxy&lt;/code&gt; class require one listener class to be created per &lt;em&gt;listener type&lt;/em&gt; (interface), whereas the inner class approach requires one class to be created per &lt;em&gt;listener&lt;/em&gt; (object that implements the interface).</source>
          <target state="translated">&lt;code&gt;EventHandler&lt;/code&gt; で作成されたリスナーのフットプリントが非常に小さい理由は、 &lt;code&gt;EventHandler&lt;/code&gt; が依存する &lt;code&gt;Proxy&lt;/code&gt; クラスが、同一のインターフェースの実装を共有するためです。たとえば、 &lt;code&gt;EventHandler create&lt;/code&gt; メソッドを使用してアプリケーション内のすべての &lt;code&gt;ActionListener&lt;/code&gt; を作成する場合、すべてのアクションリスナーは単一のクラス（ &lt;code&gt;Proxy&lt;/code&gt; クラスによって作成されたもの）のインスタンスになります。一般に、 &lt;code&gt;Proxy&lt;/code&gt; クラスに基づくリスナーでは、&lt;em&gt;リスナータイプ&lt;/em&gt;（インターフェイス）ごとに1つのリスナークラスを作成する必要がありますが、内部クラスアプローチでは、&lt;em&gt;リスナー&lt;/em&gt;ごとに1つのクラスを作成する必要があり&lt;em&gt;ます。&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt; （インターフェースを実装するオブジェクト）。</target>
        </trans-unit>
        <trans-unit id="343e073c1a04a45f15bfaa37758a836c0b9ae1dd" translate="yes" xml:space="preserve">
          <source>The reason that listeners created with &lt;code&gt;EventHandler&lt;/code&gt; have such a small footprint is that the &lt;code&gt;Proxy&lt;/code&gt; class, on which the &lt;code&gt;EventHandler&lt;/code&gt; relies, shares implementations of identical interfaces. For example, if you use the &lt;code&gt;EventHandler&lt;/code&gt;&lt;code&gt;create&lt;/code&gt; methods to make all the &lt;code&gt;ActionListener&lt;/code&gt;s in an application, all the action listeners will be instances of a single class (one created by the &lt;code&gt;Proxy&lt;/code&gt; class). In general, listeners based on the &lt;code&gt;Proxy&lt;/code&gt; class require one listener class to be created per &lt;em&gt;listener type&lt;/em&gt; (interface), whereas the inner class approach requires one class to be created per &lt;em&gt;listener&lt;/em&gt; (object that implements the interface).</source>
          <target state="translated">&lt;code&gt;EventHandler&lt;/code&gt; で作成されたリスナーのフットプリントが非常に小さいのは、 &lt;code&gt;EventHandler&lt;/code&gt; が依存する &lt;code&gt;Proxy&lt;/code&gt; クラスが同一のインターフェースの実装を共有するためです。たとえば、 &lt;code&gt;EventHandler&lt;/code&gt; &lt;code&gt;create&lt;/code&gt; メソッドを使用してアプリケーション内のすべての &lt;code&gt;ActionListener&lt;/code&gt; を作成する場合、すべてのアクションリスナーは単一のクラス（ &lt;code&gt;Proxy&lt;/code&gt; クラスによって作成されたもの）のインスタンスになります。一般に、 &lt;code&gt;Proxy&lt;/code&gt; クラスに基づくリスナーでは、&lt;em&gt;リスナータイプ&lt;/em&gt;（インターフェース）ごとに1つのリスナークラスを作成する必要がありますが、内部クラスアプローチでは、&lt;em&gt;リスナー&lt;/em&gt;ごとに1つのクラスを作成する必要があり&lt;em&gt;ます&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt; （インターフェースを実装するオブジェクト）。</target>
        </trans-unit>
        <trans-unit id="4bcf2d174d6450c449f0d4b03a4ca6b52b25a266" translate="yes" xml:space="preserve">
          <source>The reason the validation algorithm failed.</source>
          <target state="translated">検証アルゴリズムが失敗した理由。</target>
        </trans-unit>
        <trans-unit id="fad799b782c71b721e74eb716a062272a08611cd" translate="yes" xml:space="preserve">
          <source>The reason to deny access can vary. For example, the requested permission might be of an incorrect type, contain an invalid value, or request access that is not allowed according to the security policy. Such information should be given whenever possible at the time the exception is thrown.</source>
          <target state="translated">アクセスを拒否する理由はさまざまです。例えば、要求されたアクセス許可の型が間違っていたり、無効な値を含んでいたり、セキュリティポリシーに従って許可されていないアクセスを要求したりすることがあります。このような情報は、例外が発生したときに可能な限り与えなければなりません。</target>
        </trans-unit>
        <trans-unit id="1aeeb073ceae77eaa12f37a803ff57f9b6861457" translate="yes" xml:space="preserve">
          <source>The receiving interface of &lt;code&gt;WebSocket&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WebSocket&lt;/code&gt; の受信インターフェース。</target>
        </trans-unit>
        <trans-unit id="19aa33a5763e532698ec85898ffde7fa19da36dd" translate="yes" xml:space="preserve">
          <source>The recommended approach to waiting is to check the condition being awaited in a &lt;code&gt;while&lt;/code&gt; loop around the call to &lt;code&gt;wait&lt;/code&gt;, as shown in the example below. Among other things, this approach avoids problems that can be caused by spurious wakeups.</source>
          <target state="translated">待機するための推奨されるアプローチは、以下の例に示すように、 &lt;code&gt;wait&lt;/code&gt; する呼び出しの周りの &lt;code&gt;while&lt;/code&gt; ループで待機されている条件を確認することです。とりわけ、このアプローチは、誤ったウェイクアップによって引き起こされる可能性のある問題を回避します。</target>
        </trans-unit>
        <trans-unit id="8b540068386b3455f296a75095372235296b6e2b" translate="yes" xml:space="preserve">
          <source>The recommended usage is to use &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; to identify resources, then convert it into a &lt;a href=&quot;url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; when it is time to access the resource. From that URL, you can either get the &lt;a href=&quot;urlconnection&quot;&gt;&lt;code&gt;URLConnection&lt;/code&gt;&lt;/a&gt; for fine control, or get directly the InputStream.</source>
          <target state="translated">推奨される使用法は、&lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;を使用してリソースを識別し、リソースにアクセスするときに&lt;a href=&quot;url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;に変換することです。そのURLから、詳細な制御のために&lt;a href=&quot;urlconnection&quot;&gt; &lt;code&gt;URLConnection&lt;/code&gt; &lt;/a&gt;を取得するか、InputStreamを直接取得できます。</target>
        </trans-unit>
        <trans-unit id="a02d456a5b72dc15bc50cf4cbcbe8e2427ba00e2" translate="yes" xml:space="preserve">
          <source>The rectangular printable area is defined thus: The (x,y) origin is positioned at the top-left of the paper in portrait mode regardless of the orientation specified in the requesting context. For example a printable area for A4 paper in portrait or landscape orientation will have height &amp;gt; width.</source>
          <target state="translated">長方形の印刷可能領域は次のように定義されます。（x、y）原点は、要求するコンテキストで指定された向きに関係なく、縦長モードで用紙の左上に配置されます。たとえば、縦向きまたは横向きのA4用紙の印刷可能領域は、高さ&amp;gt;幅になります。</target>
        </trans-unit>
        <trans-unit id="078eace4dd337040ba2ae72d27be838bc237864c" translate="yes" xml:space="preserve">
          <source>The red color component for the specified pixel, as an int.</source>
          <target state="translated">指定されたピクセルの赤色成分をintで表します.</target>
        </trans-unit>
        <trans-unit id="98a309e25e6dab75aafbad36b2cae3eb6daac137" translate="yes" xml:space="preserve">
          <source>The redefinition may change method bodies, the constant pool and attributes (unless explicitly prohibited). The redefinition must not add, remove or rename fields or methods, change the signatures of methods, or change inheritance. The redefinition must not change the &lt;code&gt;NestHost&lt;/code&gt; or &lt;code&gt;NestMembers&lt;/code&gt; attributes. These restrictions may be lifted in future versions. The class file bytes are not checked, verified and installed until after the transformations have been applied, if the resultant bytes are in error this method will throw an exception.</source>
          <target state="translated">再定義により、メソッド本体、定数プール、および属性が変更される場合があります（明示的に禁止されている場合を除く）。再定義では、フィールドまたはメソッドを追加、削除、または名前変更したり、メソッドのシグネチャを変更したり、継承を変更したりしてはなりません。再定義によって、 &lt;code&gt;NestHost&lt;/code&gt; または &lt;code&gt;NestMembers&lt;/code&gt; 属性を変更してはなりません。これらの制限は、将来のバージョンで解除される可能性があります。クラスファイルのバイトは、変換が適用されるまでチェック、検証、およびインストールされません。結果のバイトにエラーがある場合、このメソッドは例外をスローします。</target>
        </trans-unit>
        <trans-unit id="6cf742cf21d433441fd0b0bc61621152f8db92ae" translate="yes" xml:space="preserve">
          <source>The redefinition may change method bodies, the constant pool and attributes. The redefinition must not add, remove or rename fields or methods, change the signatures of methods, or change inheritance. These restrictions maybe be lifted in future versions. The class file bytes are not checked, verified and installed until after the transformations have been applied, if the resultant bytes are in error this method will throw an exception.</source>
          <target state="translated">再定義では、メソッド本体、定数プール、および属性を変更することができます。再定義では、フィールドやメソッドの追加、削除、名前の変更、メソッドのシグネチャの変更、継承の変更はできません。これらの制限は将来のバージョンで解除されるかもしれません。クラスファイルのバイトは、変換が適用されるまでチェック、検証、インストールされません。</target>
        </trans-unit>
        <trans-unit id="6f19c83b6a43c97e8d1cefd627e0b3c8dadfded2" translate="yes" xml:space="preserve">
          <source>The reference &lt;code&gt;x&lt;/code&gt; must be convertible to the first parameter type of the target.</source>
          <target state="translated">参照 &lt;code&gt;x&lt;/code&gt; は、ターゲットの最初のパラメーター型に変換可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="44017fc6a35a5f9dd8fcf726c29aa2e0e60bb2ce" translate="yes" xml:space="preserve">
          <source>The reference implementation (RI) provides two synchronization providers.</source>
          <target state="translated">参照実装(RI)は2つの同期プロバイダを提供します。</target>
        </trans-unit>
        <trans-unit id="5409eeca3c33981649af20f4b7e7f4d34b54dae8" translate="yes" xml:space="preserve">
          <source>The reference implementation is targeted to ship with J2SE 1.5, which will include an additional resource file that may be edited by hand. Here is an example of the properties file included in the reference implementation:</source>
          <target state="translated">リファレンス実装はJ2SE 1.5での出荷を目標としており、手編集可能なリソースファイルを追加で同梱する予定です。ここでは、リファレンス実装に含まれるプロパティファイルの例を示します。</target>
        </trans-unit>
        <trans-unit id="60999b6f0306efbef13e0ce2d4acd07ba041bfaf" translate="yes" xml:space="preserve">
          <source>The reference implementation of the &lt;code&gt;CachedRowSet&lt;/code&gt; interface provided by Oracle Corporation is a standard implementation. Developers may use this implementation just as it is, they may extend it, or they may choose to write their own implementations of this interface.</source>
          <target state="translated">Oracle Corporationが提供する &lt;code&gt;CachedRowSet&lt;/code&gt; インターフェースのリファレンス実装は、標準の実装です。開発者は、この実装をそのまま使用することも、拡張することも、このインターフェイスの独自の実装を作成することを選択することもできます。</target>
        </trans-unit>
        <trans-unit id="cdbc6f393391fdc2aa74409e53d076bab2c56284" translate="yes" xml:space="preserve">
          <source>The reference implementation of the &lt;code&gt;JdbcRowSet&lt;/code&gt; interface, &lt;code&gt;JdbcRowSetImpl&lt;/code&gt;, provides an implementation of the default constructor. A new instance is initialized with default values, which can be set with new values as needed. A new instance is not really functional until its &lt;code&gt;execute&lt;/code&gt; method is called. In general, this method does the following:</source>
          <target state="translated">リファレンス実装 &lt;code&gt;JdbcRowSet&lt;/code&gt; のインターフェース、 &lt;code&gt;JdbcRowSetImpl&lt;/code&gt; は、デフォルトコンストラクタの実装を提供します。新しいインスタンスはデフォルト値で初期化され、必要に応じて新しい値で設定できます。新しいインスタンスは、 &lt;code&gt;execute&lt;/code&gt; メソッドが呼び出されるまで実際には機能しません。一般に、このメソッドは次のことを行います。</target>
        </trans-unit>
        <trans-unit id="1bef56dc5a152e5cab8e0b183e0324bc9dbed6ee" translate="yes" xml:space="preserve">
          <source>The reference implementation of this method returns the MIME type &lt;code&gt;String&lt;/code&gt; of the specified &lt;code&gt;DataFlavor&lt;/code&gt; prefixed with &lt;code&gt;JAVA_DATAFLAVOR:&lt;/code&gt;.</source>
          <target state="translated">このメソッドのリファレンス実装は、 &lt;code&gt;JAVA_DATAFLAVOR:&lt;/code&gt; というプレフィックスが付いた指定された &lt;code&gt;DataFlavor&lt;/code&gt; のMIMEタイプ &lt;code&gt;String&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0db6d72998455f6d8d159947d15deb882e4e6208" translate="yes" xml:space="preserve">
          <source>The reference implementation of this method returns the specified MIME type &lt;code&gt;String&lt;/code&gt; prefixed with &lt;code&gt;JAVA_DATAFLAVOR:&lt;/code&gt;.</source>
          <target state="translated">このメソッドのリファレンス実装は、 &lt;code&gt;JAVA_DATAFLAVOR:&lt;/code&gt; というプレフィックスが付いた指定されたMIMEタイプの &lt;code&gt;String&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3c96b6a18efdd8f02c853b851fa382edd202cc59" translate="yes" xml:space="preserve">
          <source>The reference is parsed into the scheme, authority, path, query and fragment parts. If the path component is empty and the scheme, authority, and query components are undefined, then the new URL is a reference to the current document. Otherwise, the fragment and query parts present in the spec are used in the new URL.</source>
          <target state="translated">参照は、スキーム、オーソリティ、パス、クエリ、フラグメントの各部分に解析されます。pathコンポーネントが空で、スキーム、オーソリティ、クエリコンポーネントが未定義の場合、新しいURLは現在のドキュメントへの参照となります。それ以外の場合は、仕様に存在するフラグメントとクエリの部分が新しいURLで使用されます。</target>
        </trans-unit>
        <trans-unit id="1e1b7f522e51adfd670896cc10d510ac4a355747" translate="yes" xml:space="preserve">
          <source>The reference to the module's content</source>
          <target state="translated">モジュールのコンテンツへの参照</target>
        </trans-unit>
        <trans-unit id="2cf99cd156e1535ee0739b3761f44ba4ad8f59a0" translate="yes" xml:space="preserve">
          <source>The reference type definition is derived by extension from the other type definition if the other type definition can be reached recursively following the {base type definition} property from the reference type definition, and at least one of the &lt;em&gt;derivation methods&lt;/em&gt; involved is an extension.</source>
          <target state="translated">参照型定義の{基本型定義}プロパティに従って他の型定義に再帰的に到達でき、関連する&lt;em&gt;派生メソッドの&lt;/em&gt;少なくとも1つが拡張である場合、参照型定義は他の型定義からの拡張によって&lt;em&gt;派生します&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="d289101b23ccf25d80de6a72dd72816e3bcb1157" translate="yes" xml:space="preserve">
          <source>The reference type definition is derived by list from the other type definition if there exists two type definitions T1 and T2 such as the reference type definition is derived from T1 by &lt;code&gt;DERIVATION_RESTRICTION&lt;/code&gt; or &lt;code&gt;DERIVATION_EXTENSION&lt;/code&gt;, T2 is derived from the other type definition by &lt;code&gt;DERIVATION_RESTRICTION&lt;/code&gt;, T1 has {variety} &lt;em&gt;list&lt;/em&gt;, and T2 is the {item type definition}. Note that T1 could be the same as the reference type definition, and T2 could be the same as the other type definition.</source>
          <target state="translated">参照型定義が &lt;code&gt;DERIVATION_RESTRICTION&lt;/code&gt; または &lt;code&gt;DERIVATION_EXTENSION&lt;/code&gt; によってT1から派生し、T2が &lt;code&gt;DERIVATION_RESTRICTION&lt;/code&gt; によって他の型定義から派生しているなど、2つの型定義T1とT2が存在する場合、参照型定義は他の型定義からリストによって派生します。 {variety}&lt;em&gt;リスト&lt;/em&gt;、T2は{item typedefinition}です。 T1は参照型定義と同じであり、T2は他の型定義と同じである可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="dffb6e6d8b2d6f55eafb2e232eb84ee4de39afa8" translate="yes" xml:space="preserve">
          <source>The reference type definition is derived by restriction from the other type definition if the other type definition is the same as the reference type definition, or if the other type definition can be reached recursively following the {base type definition} property from the reference type definition, and all the &lt;em&gt;derivation methods&lt;/em&gt; involved are restriction.</source>
          <target state="translated">参照型定義は、他の型定義が参照型定義と同じである場合、または参照型定義の{base typedefinition}プロパティに従って他の型定義に再帰的に到達できる場合に他の型定義からの制限によって導出されます。 、および関連するすべての&lt;em&gt;導出方法&lt;/em&gt;は制限です。</target>
        </trans-unit>
        <trans-unit id="16ef2fe88de2d7e30fdc46db81d300b65bcac937" translate="yes" xml:space="preserve">
          <source>The reference type definition is derived by union from the other type definition if there exists two type definitions T1 and T2 such as the reference type definition is derived from T1 by &lt;code&gt;DERIVATION_RESTRICTION&lt;/code&gt; or &lt;code&gt;DERIVATION_EXTENSION&lt;/code&gt;, T2 is derived from the other type definition by &lt;code&gt;DERIVATION_RESTRICTION&lt;/code&gt;, T1 has {variety} &lt;em&gt;union&lt;/em&gt;, and one of the {member type definitions} is T2. Note that T1 could be the same as the reference type definition, and T2 could be the same as the other type definition.</source>
          <target state="translated">参照型定義が &lt;code&gt;DERIVATION_RESTRICTION&lt;/code&gt; または &lt;code&gt;DERIVATION_EXTENSION&lt;/code&gt; によってT1から派生し、T2が &lt;code&gt;DERIVATION_RESTRICTION&lt;/code&gt; によって他の型定義から派生しているなど、2つの型定義T1とT2が存在する場合、参照型定義は他の型定義から結合によって派生します。 {variety}&lt;em&gt;ユニオン&lt;/em&gt;、および{メンバータイプ定義}の1つはT2です。T1は参照型定義と同じであり、T2は他の型定義と同じである可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="27a0672b9281e7b40b24731935d7c4c815d57f66" translate="yes" xml:space="preserve">
          <source>The referral context is created using &lt;code&gt;env&lt;/code&gt; as its environment properties. This method should be used instead of the no-arg overloaded form when the caller needs to use different environment properties for the referral context. It might need to do this, for example, when it needs to supply different authentication information to the referred server in order to create the referral context.</source>
          <target state="translated">参照コンテキストは、 &lt;code&gt;env&lt;/code&gt; を環境プロパティとして使用して作成されます。このメソッドは、呼び出し元が参照コンテキストに異なる環境プロパティを使用する必要がある場合、引数なしのオーバーロードされたフォームの代わりに使用する必要があります。たとえば、参照コンテキストを作成するために、参照先のサーバーに異なる認証情報を提供する必要がある場合に、これを行う必要があります。</target>
        </trans-unit>
        <trans-unit id="a4ce274ab6ae3f0c9ee72f8b65f07fb79d7e2a06" translate="yes" xml:space="preserve">
          <source>The region of interest is defined by the bounding box of the source &lt;code&gt;Image&lt;/code&gt;. This bounding box is specified in Image Space, which is the &lt;code&gt;Image&lt;/code&gt; object's local coordinate system.</source>
          <target state="translated">関心のある領域は、ソース &lt;code&gt;Image&lt;/code&gt; バウンディングボックスによって定義されます。この境界ボックスは、 &lt;code&gt;Image&lt;/code&gt; オブジェクトのローカル座標系であるImageSpaceで指定されます。</target>
        </trans-unit>
        <trans-unit id="2ae7c56b2cdef8fa8f60172c89227929f50be69e" translate="yes" xml:space="preserve">
          <source>The region of the image to be written is determined by first intersecting the actual bounds of the image with the rectangle specified by &lt;code&gt;IIOParam.setSourceRegion&lt;/code&gt;, if any. If the resulting rectangle has a width or height of zero, the writer will throw an &lt;code&gt;IIOException&lt;/code&gt;. If the intersection is non-empty, writing will commence with the first subsampled pixel and include additional pixels within the intersected bounds according to the horizontal and vertical subsampling factors specified by &lt;a href=&quot;iioparam#setSourceSubsampling(int,int,int,int)&quot;&gt;&lt;code&gt;IIOParam.setSourceSubsampling&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">書き込まれる画像の領域は、最初に画像の実際の境界を &lt;code&gt;IIOParam.setSourceRegion&lt;/code&gt; （存在する場合）で指定された長方形と交差させることによって決定されます。結果の長方形の幅または高さがゼロの場合、ライターは &lt;code&gt;IIOException&lt;/code&gt; をスローします。交差が空でない場合、書き込みは最初のサブサンプリングされたピクセルから開始され、&lt;a href=&quot;iioparam#setSourceSubsampling(int,int,int,int)&quot;&gt; &lt;code&gt;IIOParam.setSourceSubsampling&lt;/code&gt; で&lt;/a&gt;指定された水平および垂直のサブサンプリング係数に従って、交差した境界内に追加のピクセルが含まれます。</target>
        </trans-unit>
        <trans-unit id="d0ee23ed794b80c251d3a1fe843993862775ce5a" translate="yes" xml:space="preserve">
          <source>The region of the image to be written is determined by first intersecting the actual bounds of the image with the rectangle specified by &lt;code&gt;IIOParam.setSourceRegion&lt;/code&gt;, if any. If the resulting rectangle has a width or height of zero, the writer will throw an &lt;code&gt;IIOException&lt;/code&gt;. If the intersection is non-empty, writing will commence with the first subsampled pixel and include additional pixels within the intersected bounds according to the horizontal and vertical subsampling factors specified by &lt;a href=&quot;iioparam#setSourceSubsampling-int-int-int-int-&quot;&gt;&lt;code&gt;IIOParam.setSourceSubsampling&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">書き込まれる画像の領域は、最初に画像の実際の境界を &lt;code&gt;IIOParam.setSourceRegion&lt;/code&gt; で指定された長方形と交差させます。結果の四角形の幅または高さが0の場合、ライターは &lt;code&gt;IIOException&lt;/code&gt; をスローします。交差が空でない場合、書き込みは最初のサブサンプリングされたピクセルから開始され、&lt;a href=&quot;iioparam#setSourceSubsampling-int-int-int-int-&quot;&gt; &lt;code&gt;IIOParam.setSourceSubsampling&lt;/code&gt; で&lt;/a&gt;指定された水平および垂直サブサンプリングファクターに従って交差した境界内に追加のピクセルが含まれます。</target>
        </trans-unit>
        <trans-unit id="bf75c137f4d08f499b676efedda08b261ecc10e0" translate="yes" xml:space="preserve">
          <source>The region specified by the &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; parameters need not be contained within, or even overlap, the actual underlying file. Lock regions are fixed in size; if a locked region initially contains the end of the file and the file grows beyond the region then the new portion of the file will not be covered by the lock. If a file is expected to grow in size and a lock on the entire file is required then a region starting at zero, and no smaller than the expected maximum size of the file, should be locked. The two-argument &lt;a href=&quot;#lock(A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;lock(Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method simply locks a region of size &lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt;&lt;code&gt;Long.MAX_VALUE&lt;/code&gt;&lt;/a&gt;. If a lock that overlaps the requested region is already held by this Java virtual machine, or this method has been invoked to lock an overlapping region and that operation has not completed, then this method throws &lt;a href=&quot;overlappingfilelockexception&quot;&gt;&lt;code&gt;OverlappingFileLockException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; と &lt;code&gt;size&lt;/code&gt; パラメーターで指定された領域は、実際の基になるファイル内に含まれている必要はなく、重複している必要もありません。ロック領域のサイズは固定されています。ロックされた領域に最初にファイルの終わりが含まれていて、ファイルがその領域を超えて大きくなる場合、ファイルの新しい部分はロックの対象になりません。ファイルのサイズが大きくなることが予想され、ファイル全体をロックする必要がある場合は、ゼロから始まり、ファイルの予想される最大サイズ以上の領域をロックする必要があります。 2つの引数の&lt;a href=&quot;#lock(A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;lock(Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt;メソッドは、サイズが&lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt; &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の&lt;/a&gt;領域をロックするだけです。。要求された領域と重複するロックがこのJava仮想マシンによってすでに保持されている場合、またはこのメソッドが呼び出されて重複領域をロックし、その操作が完了していない場合、このメソッドは&lt;a href=&quot;overlappingfilelockexception&quot;&gt; &lt;code&gt;OverlappingFileLockException&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="412cd087a882e3390f6eb99cb3444e0f99865817" translate="yes" xml:space="preserve">
          <source>The region specified by the &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; parameters need not be contained within, or even overlap, the actual underlying file. Lock regions are fixed in size; if a locked region initially contains the end of the file and the file grows beyond the region then the new portion of the file will not be covered by the lock. If a file is expected to grow in size and a lock on the entire file is required then a region starting at zero, and no smaller than the expected maximum size of the file, should be locked. The two-argument &lt;a href=&quot;asynchronousfilechannel#lock-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;lock(Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method simply locks a region of size &lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt;&lt;code&gt;Long.MAX_VALUE&lt;/code&gt;&lt;/a&gt;. If a lock that overlaps the requested region is already held by this Java virtual machine, or this method has been invoked to lock an overlapping region and that operation has not completed, then this method throws &lt;a href=&quot;overlappingfilelockexception&quot;&gt;&lt;code&gt;OverlappingFileLockException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; と &lt;code&gt;size&lt;/code&gt; パラメータで指定された領域は、実際の基本ファイル内に含まれていたり、実際に重なっている必要はありません。ロック領域のサイズは固定されています。ロックされた領域が最初にファイルの終わりを含み、ファイルが領域を超えて大きくなる場合、ファイルの新しい部分はロックによってカバーされません。ファイルのサイズが大きくなることが予想され、ファイル全体のロックが必要な場合は、ゼロから始まり、ファイルの予想最大サイズ以上の領域をロックする必要があります。 2つの引数を持つ&lt;a href=&quot;asynchronousfilechannel#lock-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;lock(Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt;メソッドは、サイズが&lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt; &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の&lt;/a&gt;領域をロックするだけです。。要求された領域と重複するロックがこのJava仮想マシンによってすでに保持されている場合、またはこのメソッドが呼び出されて重複領域をロックし、その操作が完了していない場合、このメソッドは&lt;a href=&quot;overlappingfilelockexception&quot;&gt; &lt;code&gt;OverlappingFileLockException&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="7f8ccadc40b179a069619b37209e7a82323388a3" translate="yes" xml:space="preserve">
          <source>The region specified by the &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; parameters need not be contained within, or even overlap, the actual underlying file. Lock regions are fixed in size; if a locked region initially contains the end of the file and the file grows beyond the region then the new portion of the file will not be covered by the lock. If a file is expected to grow in size and a lock on the entire file is required then a region starting at zero, and no smaller than the expected maximum size of the file, should be locked. The zero-argument &lt;a href=&quot;#lock()&quot;&gt;&lt;code&gt;lock()&lt;/code&gt;&lt;/a&gt; method simply locks a region of size &lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt;&lt;code&gt;Long.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; と &lt;code&gt;size&lt;/code&gt; パラメーターで指定された領域は、実際の基になるファイル内に含まれている必要はなく、重複している必要もありません。ロック領域のサイズは固定されています。ロックされた領域に最初にファイルの終わりが含まれていて、ファイルがその領域を超えて大きくなる場合、ファイルの新しい部分はロックの対象になりません。ファイルのサイズが大きくなることが予想され、ファイル全体をロックする必要がある場合は、ゼロから始まり、ファイルの予想される最大サイズ以上の領域をロックする必要があります。引数がゼロの&lt;a href=&quot;#lock()&quot;&gt; &lt;code&gt;lock()&lt;/code&gt; &lt;/a&gt;メソッドは、サイズが&lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt; &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の&lt;/a&gt;領域をロックするだけです。</target>
        </trans-unit>
        <trans-unit id="6cff2d7fbc06e1a140db665b0a54e775297aaed1" translate="yes" xml:space="preserve">
          <source>The region specified by the &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; parameters need not be contained within, or even overlap, the actual underlying file. Lock regions are fixed in size; if a locked region initially contains the end of the file and the file grows beyond the region then the new portion of the file will not be covered by the lock. If a file is expected to grow in size and a lock on the entire file is required then a region starting at zero, and no smaller than the expected maximum size of the file, should be locked. The zero-argument &lt;a href=&quot;#tryLock()&quot;&gt;&lt;code&gt;tryLock()&lt;/code&gt;&lt;/a&gt; method simply locks a region of size &lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt;&lt;code&gt;Long.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; と &lt;code&gt;size&lt;/code&gt; パラメーターで指定された領域は、実際の基になるファイル内に含まれている必要はなく、重複している必要もありません。ロック領域のサイズは固定されています。ロックされた領域に最初にファイルの終わりが含まれていて、ファイルがその領域を超えて大きくなる場合、ファイルの新しい部分はロックの対象になりません。ファイルのサイズが大きくなることが予想され、ファイル全体をロックする必要がある場合は、ゼロから始まり、ファイルの予想される最大サイズ以上の領域をロックする必要があります。引数がゼロの&lt;a href=&quot;#tryLock()&quot;&gt; &lt;code&gt;tryLock()&lt;/code&gt; &lt;/a&gt;メソッドは、サイズが&lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt; &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の&lt;/a&gt;領域をロックするだけです。</target>
        </trans-unit>
        <trans-unit id="813d5453cbb41f59eb6e5e97b38357b9ea00bdde" translate="yes" xml:space="preserve">
          <source>The region specified by the &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; parameters need not be contained within, or even overlap, the actual underlying file. Lock regions are fixed in size; if a locked region initially contains the end of the file and the file grows beyond the region then the new portion of the file will not be covered by the lock. If a file is expected to grow in size and a lock on the entire file is required then a region starting at zero, and no smaller than the expected maximum size of the file, should be locked. The zero-argument &lt;a href=&quot;filechannel#lock--&quot;&gt;&lt;code&gt;lock()&lt;/code&gt;&lt;/a&gt; method simply locks a region of size &lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt;&lt;code&gt;Long.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; と &lt;code&gt;size&lt;/code&gt; パラメータで指定された領域は、実際の基本ファイル内に含まれていたり、実際に重なっている必要はありません。ロック領域のサイズは固定されています。ロックされた領域が最初にファイルの終わりを含み、ファイルが領域を超えて大きくなる場合、ファイルの新しい部分はロックによってカバーされません。ファイルのサイズが大きくなることが予想され、ファイル全体のロックが必要な場合は、ゼロから始まり、予想されるファイルの最大サイズ以上の領域をロックする必要があります。引数なしの&lt;a href=&quot;filechannel#lock--&quot;&gt; &lt;code&gt;lock()&lt;/code&gt; &lt;/a&gt;メソッドは、サイズが&lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt; &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の&lt;/a&gt;領域をロックするだけです。</target>
        </trans-unit>
        <trans-unit id="617ac4e34e018358f5e81a33f698a400aa0685af" translate="yes" xml:space="preserve">
          <source>The region specified by the &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; parameters need not be contained within, or even overlap, the actual underlying file. Lock regions are fixed in size; if a locked region initially contains the end of the file and the file grows beyond the region then the new portion of the file will not be covered by the lock. If a file is expected to grow in size and a lock on the entire file is required then a region starting at zero, and no smaller than the expected maximum size of the file, should be locked. The zero-argument &lt;a href=&quot;filechannel#tryLock--&quot;&gt;&lt;code&gt;tryLock()&lt;/code&gt;&lt;/a&gt; method simply locks a region of size &lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt;&lt;code&gt;Long.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; と &lt;code&gt;size&lt;/code&gt; パラメータで指定された領域は、実際の基本ファイル内に含まれていたり、実際に重なっている必要はありません。ロック領域のサイズは固定されています。ロックされた領域が最初にファイルの終わりを含み、ファイルが領域を超えて大きくなる場合、ファイルの新しい部分はロックによってカバーされません。ファイルのサイズが大きくなることが予想され、ファイル全体のロックが必要な場合は、ゼロから始まり、ファイルの予想最大サイズ以上の領域をロックする必要があります。引数&lt;a href=&quot;filechannel#tryLock--&quot;&gt; &lt;code&gt;tryLock()&lt;/code&gt; &lt;/a&gt;メソッドは、サイズが&lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt; &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の&lt;/a&gt;領域をロックするだけです。</target>
        </trans-unit>
        <trans-unit id="2018bb0b35a071dd77f0537c6308e64613671b58" translate="yes" xml:space="preserve">
          <source>The registered &lt;a href=&quot;#addConfigurationListener(java.lang.Runnable)&quot;&gt;configuration listeners&lt;/a&gt; will be invoked after the configuration is successfully updated.</source>
          <target state="translated">登録された&lt;a href=&quot;#addConfigurationListener(java.lang.Runnable)&quot;&gt;構成リスナー&lt;/a&gt;は、構成が正常に更新された後に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="3d0fc73493ecda447bb85c445c6e4f953b759f7f" translate="yes" xml:space="preserve">
          <source>The registration/deregistration methods accept an instance of &lt;code&gt;NamingListener&lt;/code&gt;. There are subinterfaces of &lt;code&gt;NamingListener&lt;/code&gt; for different of event types of &lt;code&gt;NamingEvent&lt;/code&gt;. For example, the &lt;code&gt;ObjectChangeListener&lt;/code&gt; interface is for the &lt;code&gt;NamingEvent.OBJECT_CHANGED&lt;/code&gt; event type. To register interest in multiple event types, the listener implementation should implement multiple &lt;code&gt;NamingListener&lt;/code&gt; subinterfaces and use a single invocation of &lt;code&gt;addNamingListener()&lt;/code&gt;. In addition to reducing the number of method calls and possibly the code size of the listeners, this allows some service providers to optimize the registration.</source>
          <target state="translated">登録/登録 &lt;code&gt;NamingListener&lt;/code&gt; メソッドは、NamingListenerのインスタンスを受け入れます。 &lt;code&gt;NamingListener&lt;/code&gt; のさまざまなイベントタイプに &lt;code&gt;NamingEvent&lt;/code&gt; サブインターフェイスがあります。たとえば、 &lt;code&gt;ObjectChangeListener&lt;/code&gt; インターフェイスは、 &lt;code&gt;NamingEvent.OBJECT_CHANGED&lt;/code&gt; イベントタイプ用です。複数のイベントタイプへの関心を登録するには、リスナー実装が複数の &lt;code&gt;NamingListener&lt;/code&gt; サブインターフェースを実装し、 &lt;code&gt;addNamingListener()&lt;/code&gt; の単一の呼び出しを使用する必要があります。メソッド呼び出しの数を減らし、場合によってはリスナーのコードサイズを減らすことに加えて、一部のサービスプロバイダーは登録を最適化できます。</target>
        </trans-unit>
        <trans-unit id="6005af0d0e955fa02a5ecc341d6d2cbed8810f0c" translate="yes" xml:space="preserve">
          <source>The regular expression &lt;code&gt;.&lt;/code&gt; matches any character except a line terminator unless the &lt;a href=&quot;#DOTALL&quot;&gt;&lt;code&gt;DOTALL&lt;/code&gt;&lt;/a&gt; flag is specified.</source>
          <target state="translated">正規表現 &lt;code&gt;.&lt;/code&gt; &lt;a href=&quot;#DOTALL&quot;&gt; &lt;code&gt;DOTALL&lt;/code&gt; &lt;/a&gt;フラグが指定されていない限り、行末記号以外のすべての文字に一致します。</target>
        </trans-unit>
        <trans-unit id="d4b28ceb290f94f79d557bc3e4312d5d5404a206" translate="yes" xml:space="preserve">
          <source>The regular expression &lt;code&gt;.&lt;/code&gt; matches any character except a line terminator unless the &lt;a href=&quot;pattern#DOTALL&quot;&gt;&lt;code&gt;DOTALL&lt;/code&gt;&lt;/a&gt; flag is specified.</source>
          <target state="translated">正規表現 &lt;code&gt;.&lt;/code&gt; &lt;a href=&quot;pattern#DOTALL&quot;&gt; &lt;code&gt;DOTALL&lt;/code&gt; &lt;/a&gt;フラグが指定されていない限り、行末記号以外の任意の文字に一致します。</target>
        </trans-unit>
        <trans-unit id="06c07dbec7777602883d6500283e28c86a80e923" translate="yes" xml:space="preserve">
          <source>The related &lt;code&gt;DOMError.type&lt;/code&gt; dependent data if any.</source>
          <target state="translated">関連する &lt;code&gt;DOMError.type&lt;/code&gt; 依存データ（存在する場合）。</target>
        </trans-unit>
        <trans-unit id="92e8bde63f8804130f51216402f7e58eed8b42f4" translate="yes" xml:space="preserve">
          <source>The related platform dependent exception if any.</source>
          <target state="translated">もしあれば、関連するプラットフォーム依存の例外。</target>
        </trans-unit>
        <trans-unit id="6e4b1af8982753fca149df2aa7452224b647d528" translate="yes" xml:space="preserve">
          <source>The relation objects of that type will be removed from the Relation Service.</source>
          <target state="translated">そのタイプのリレーションオブジェクトは、リレーションサービスから削除されます。</target>
        </trans-unit>
        <trans-unit id="aa44fb4b73ba3a7eb0fa699a55544e1d6fb4e2cf" translate="yes" xml:space="preserve">
          <source>The relationship between &lt;code&gt;floorDiv&lt;/code&gt; and &lt;code&gt;floorMod&lt;/code&gt; is such that:</source>
          <target state="translated">&lt;code&gt;floorDiv&lt;/code&gt; と &lt;code&gt;floorMod&lt;/code&gt; の関係は次のようなものです。</target>
        </trans-unit>
        <trans-unit id="6427ac31d87ab27b06603a0df3c2ae4a7cbf6dfa" translate="yes" xml:space="preserve">
          <source>The relationship between &lt;code&gt;this&lt;/code&gt;&lt;code&gt;XMLGregorianCalendar&lt;/code&gt; and the specified &lt;code&gt;xmlGregorianCalendar&lt;/code&gt; as &lt;a href=&quot;datatypeconstants#LESSER&quot;&gt;&lt;code&gt;DatatypeConstants.LESSER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypeconstants#EQUAL&quot;&gt;&lt;code&gt;DatatypeConstants.EQUAL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypeconstants#GREATER&quot;&gt;&lt;code&gt;DatatypeConstants.GREATER&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;datatypeconstants#INDETERMINATE&quot;&gt;&lt;code&gt;DatatypeConstants.INDETERMINATE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">関係 &lt;code&gt;this&lt;/code&gt; &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; 、指定 &lt;code&gt;xmlGregorianCalendar&lt;/code&gt; として&lt;a href=&quot;datatypeconstants#LESSER&quot;&gt; &lt;code&gt;DatatypeConstants.LESSER&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;datatypeconstants#EQUAL&quot;&gt; &lt;code&gt;DatatypeConstants.EQUAL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;datatypeconstants#GREATER&quot;&gt; &lt;code&gt;DatatypeConstants.GREATER&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;datatypeconstants#INDETERMINATE&quot;&gt; &lt;code&gt;DatatypeConstants.INDETERMINATE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5c08d18f5dc47b416f3b07369175323c6d88f7a" translate="yes" xml:space="preserve">
          <source>The relationship between a WebSocket and the associated Listener is analogous to that of a Subscription and the associated Subscriber of type &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow&quot;&gt;&lt;code&gt;Flow&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">WebSocketと関連するリスナーの関係は、サブスクリプションと&lt;a href=&quot;../../../../java.base/java/util/concurrent/flow&quot;&gt; &lt;code&gt;Flow&lt;/code&gt; &lt;/a&gt;タイプの関連するサブスクライバーの関係に類似しています。</target>
        </trans-unit>
        <trans-unit id="1d34477c420fd977fd8f945aedd832fb3f7c9dfd" translate="yes" xml:space="preserve">
          <source>The relative URL need not specify all the components of a URL. If the protocol, host name, or port number is missing, the value is inherited from the fully specified URL. The file component must be specified. The optional fragment is not inherited.</source>
          <target state="translated">相対 URL は、URL のすべての構成要素を指定する必要はありません。プロトコル、ホスト名、ポート番号が指定されていない場合、その値は完全に指定されたURLから継承されます。ファイルの構成要素を指定する必要があります。オプションのフラグメントは継承されません。</target>
        </trans-unit>
        <trans-unit id="2f061ca1fba773cc35eb218fcd97124e40600f26" translate="yes" xml:space="preserve">
          <source>The relative index of the first mismatch between this and the given buffer, otherwise -1 if no mismatch.</source>
          <target state="translated">このバッファと指定されたバッファとの間の最初の不一致の相対インデックス。</target>
        </trans-unit>
        <trans-unit id="c5c5f181f6e29a7276bf6337e3a4edd8b847077a" translate="yes" xml:space="preserve">
          <source>The relativization of the given URI against this URI is computed as follows:</source>
          <target state="translated">このURIに対する与えられたURIの相対化は次のように計算される。</target>
        </trans-unit>
        <trans-unit id="e707cc2158f347f5aab8350d2339ff22d2e3b87b" translate="yes" xml:space="preserve">
          <source>The reliability of this method is important for the ability to use it to make security decisions, so its implementation should not just test if the class in question extends &lt;code&gt;Proxy&lt;/code&gt;.</source>
          <target state="translated">このメソッドの信頼性は、このメソッドを使用してセキュリティの決定を行う機能にとって重要であるため、問題のクラスが &lt;code&gt;Proxy&lt;/code&gt; を拡張するかどうかをテストするだけではありません。</target>
        </trans-unit>
        <trans-unit id="f22668315e9121681e1e68864a75519fe9de5684" translate="yes" xml:space="preserve">
          <source>The remainder is given by &lt;code&gt;this.subtract(this.divideToIntegralValue(divisor).multiply(divisor))&lt;/code&gt;. Note that this is &lt;em&gt;not&lt;/em&gt; the modulo operation (the result can be negative).</source>
          <target state="translated">余りは &lt;code&gt;this.subtract(this.divideToIntegralValue(divisor).multiply(divisor))&lt;/code&gt; で与えられます。これはモジュロ演算では&lt;em&gt;ない&lt;/em&gt;ことに注意してください（結果は負になる可能性があります）。</target>
        </trans-unit>
        <trans-unit id="8b7ae0cdf8ad17c67c6a33deb5e3ca85d6e010c4" translate="yes" xml:space="preserve">
          <source>The remainder is given by &lt;code&gt;this.subtract(this.divideToIntegralValue(divisor).multiply(divisor))&lt;/code&gt;. Note that this is not the modulo operation (the result can be negative).</source>
          <target state="translated">残りは &lt;code&gt;this.subtract(this.divideToIntegralValue(divisor).multiply(divisor))&lt;/code&gt; によって与えられます。これはモジュロ演算ではないことに注意してください（結果が負になる場合があります）。</target>
        </trans-unit>
        <trans-unit id="e82e7847d0c5f7329094a894a4727d5cc71d2c00" translate="yes" xml:space="preserve">
          <source>The remainder is given by &lt;code&gt;this.subtract(this.divideToIntegralValue(divisor,
 mc).multiply(divisor))&lt;/code&gt;. Note that this is not the modulo operation (the result can be negative).</source>
          <target state="translated">残りは &lt;code&gt;this.subtract(this.divideToIntegralValue(divisor, mc).multiply(divisor))&lt;/code&gt; によって与えられます。これはモジュロ演算ではないことに注意してください（結果が負になる場合があります）。</target>
        </trans-unit>
        <trans-unit id="cbccf12ec336d37bab08d7866f9df36a1069a2aa" translate="yes" xml:space="preserve">
          <source>The remaining SPI methods &lt;a href=&quot;#putSpi(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;putSpi(String,String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#removeSpi(java.lang.String)&quot;&gt;&lt;code&gt;removeSpi(String)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; have more complicated exception behavior. They are not specified to throw &lt;code&gt;BackingStoreException&lt;/code&gt;, as they can generally obey their contracts even if the backing store is unavailable. This is true because they return no information and their effects are not required to become permanent until a subsequent call to &lt;a href=&quot;preferences#flush()&quot;&gt;&lt;code&gt;Preferences.flush()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;preferences#sync()&quot;&gt;&lt;code&gt;Preferences.sync()&lt;/code&gt;&lt;/a&gt;. Generally speaking, these SPI methods should not throw exceptions. In some implementations, there may be circumstances under which these calls cannot even enqueue the requested operation for later processing. Even under these circumstances it is generally better to simply ignore the invocation and return, rather than throwing an exception. Under these circumstances, however, subsequently invoking &lt;code&gt;flush()&lt;/code&gt; or &lt;code&gt;sync&lt;/code&gt; would not imply that all previous operations had successfully been made permanent.</source>
          <target state="translated">残りのSPIメソッド&lt;a href=&quot;#putSpi(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;putSpi(String,String)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#removeSpi(java.lang.String)&quot;&gt; &lt;code&gt;removeSpi(String)&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; に&lt;/a&gt;は、より複雑な例外動作があります。バッキングストアが利用できない場合でも、通常はコントラクトに従うことができる &lt;code&gt;BackingStoreException&lt;/code&gt; 、BackingStoreExceptionをスローするように指定されていません。これは、情報を返さず、&lt;a href=&quot;preferences#flush()&quot;&gt; &lt;code&gt;Preferences.flush()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;preferences#sync()&quot;&gt; &lt;code&gt;Preferences.sync()&lt;/code&gt; を&lt;/a&gt;後で呼び出すまで、その効果を永続的にする必要がないためです。。一般的に、これらのSPIメソッドは例外をスローするべきではありません。一部の実装では、これらの呼び出しが、後で処理するために要求された操作をキューに入れることさえできない状況が存在する場合があります。このような状況でも、例外をスローするのではなく、呼び出しを無視して返す方が一般的には優れています。ただし、これらの状況では、その後 &lt;code&gt;flush()&lt;/code&gt; または &lt;code&gt;sync&lt;/code&gt; を呼び出しても、以前のすべての操作が正常に永続化されたことを意味するわけではありません。</target>
        </trans-unit>
        <trans-unit id="47da9e589f25b7bfcd11328b7b51fd360a0d60ec" translate="yes" xml:space="preserve">
          <source>The remaining SPI methods &lt;a href=&quot;abstractpreferences#putSpi-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;putSpi(String,String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;abstractpreferences#removeSpi-java.lang.String-&quot;&gt;&lt;code&gt;removeSpi(String)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; have more complicated exception behavior. They are not specified to throw &lt;code&gt;BackingStoreException&lt;/code&gt;, as they can generally obey their contracts even if the backing store is unavailable. This is true because they return no information and their effects are not required to become permanent until a subsequent call to &lt;a href=&quot;preferences#flush--&quot;&gt;&lt;code&gt;Preferences.flush()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;preferences#sync--&quot;&gt;&lt;code&gt;Preferences.sync()&lt;/code&gt;&lt;/a&gt;. Generally speaking, these SPI methods should not throw exceptions. In some implementations, there may be circumstances under which these calls cannot even enqueue the requested operation for later processing. Even under these circumstances it is generally better to simply ignore the invocation and return, rather than throwing an exception. Under these circumstances, however, all subsequent invocations of &lt;code&gt;flush()&lt;/code&gt; and &lt;code&gt;sync&lt;/code&gt; should return &lt;code&gt;false&lt;/code&gt;, as returning &lt;code&gt;true&lt;/code&gt; would imply that all previous operations had successfully been made permanent.</source>
          <target state="translated">残りのSPIメソッド&lt;a href=&quot;abstractpreferences#putSpi-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;putSpi(String,String)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;abstractpreferences#removeSpi-java.lang.String-&quot;&gt; &lt;code&gt;removeSpi(String)&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; に&lt;/a&gt;は、より複雑な例外動作があります。通常、バッキングストアが利用できない場合でもコントラクトに従うことができる &lt;code&gt;BackingStoreException&lt;/code&gt; 、BackingStoreExceptionをスローするように指定されていません。これは、それらが情報を返さず、その後の&lt;a href=&quot;preferences#flush--&quot;&gt; &lt;code&gt;Preferences.flush()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;preferences#sync--&quot;&gt; &lt;code&gt;Preferences.sync()&lt;/code&gt; の&lt;/a&gt;呼び出しまで永続化する必要がないためです。。一般的に言って、これらのSPIメソッドは例外をスローすべきではありません。一部の実装では、これらの呼び出しが、要求された操作を後で処理するためにエンキューすることさえできない状況があるかもしれません。このような状況下でも、例外をスローするよりも、呼び出しと戻りを単に無視する方が一般的には適切です。ただし、これらの状況では、後続のすべての &lt;code&gt;flush()&lt;/code&gt; および &lt;code&gt;sync&lt;/code&gt; の呼び出しは &lt;code&gt;false&lt;/code&gt; を返す必要があり &lt;code&gt;true&lt;/code&gt; を返すことは、以前のすべての操作が正常に永続化されたことを意味します。</target>
        </trans-unit>
        <trans-unit id="04a436b0f38850e482765bfe8b244ada2271191c" translate="yes" xml:space="preserve">
          <source>The remaining characters of the result represent the magnitude of the first argument. If the magnitude is zero, it is represented by a single zero character &lt;code&gt;'0'&lt;/code&gt; (&lt;code&gt;'\u0030'&lt;/code&gt;); otherwise, the first character of the representation of the magnitude will not be the zero character. The following ASCII characters are used as digits:</source>
          <target state="translated">結果の残りの文字は、最初の引数の大きさを表します。マグニチュードがゼロの場合、単一のゼロ文字 &lt;code&gt;'0'&lt;/code&gt; （ &lt;code&gt;'\u0030'&lt;/code&gt; ）で表されます。そうでない場合、絶対値の表現の最初の文字はゼロ文字にはなりません。次のASCII文字が数字として使用されます。</target>
        </trans-unit>
        <trans-unit id="b031f20190ca11166d6c7b1f498a8021f1fd8160" translate="yes" xml:space="preserve">
          <source>The remaining details of the &lt;code&gt;MBeanInfo&lt;/code&gt; for a Standard MBean are not specified. This includes the description of any contained constructors, and notifications; the names of parameters to constructors and operations; and the descriptions of constructor parameters.</source>
          <target state="translated">標準MBeanの &lt;code&gt;MBeanInfo&lt;/code&gt; の残りの詳細は指定されていません。これには、含まれているコンストラクターの説明と通知が含まれます。コンストラクタと操作に対するパラメータの名前。コンストラクタパラメータの説明。</target>
        </trans-unit>
        <trans-unit id="c7f4b12e2049eb0d2dbae4e0935da9f089467437" translate="yes" xml:space="preserve">
          <source>The remaining unresolved portion of the name. Cannot be null but empty OK.</source>
          <target state="translated">名前の未解決の残りの部分。nullにすることはできませんが、空であればOKです。</target>
        </trans-unit>
        <trans-unit id="7050822aac2eaeaa73f4b961d1cb35d5d5e11578" translate="yes" xml:space="preserve">
          <source>The remapping function should not modify this map during computation.</source>
          <target state="translated">リマッピング関数は、計算中にこのマップを変更してはいけません。</target>
        </trans-unit>
        <trans-unit id="bc31c724cb4c9ebbaec1ed20f6acbd3909843172" translate="yes" xml:space="preserve">
          <source>The remote address; &lt;code&gt;null&lt;/code&gt; if the channel's socket is not connected</source>
          <target state="translated">リモートアドレス。チャネルのソケットが接続されていない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e7bc56b939ee7935299e6e6d043373f7df2f25b" translate="yes" xml:space="preserve">
          <source>The remote object becomes available. The header fields and the contents of the remote object can be accessed.</source>
          <target state="translated">リモートオブジェクトが利用可能になります。ヘッダフィールドとリモートオブジェクトの内容にアクセスできるようになります。</target>
        </trans-unit>
        <trans-unit id="5e100a0f6c2f94294ad6e3cd0c330ac89e4c13e0" translate="yes" xml:space="preserve">
          <source>The removal is not guaranteed to be persistent until the &lt;code&gt;flush&lt;/code&gt; method is called on this node (or an ancestor).</source>
          <target state="translated">このノード（または祖先）で &lt;code&gt;flush&lt;/code&gt; メソッドが呼び出されるまで、削除は永続的であることが保証されません。</target>
        </trans-unit>
        <trans-unit id="a80e61fbbbe10c51d6c88507a5031484ad5e8f17" translate="yes" xml:space="preserve">
          <source>The removal may or may not cause a reduction in the actual file size.</source>
          <target state="translated">削除すると実際のファイルサイズが小さくなる場合とそうでない場合があります。</target>
        </trans-unit>
        <trans-unit id="d723447722497695e77f4caccb3c9a5c643a12a5" translate="yes" xml:space="preserve">
          <source>The removal of a node needn't become persistent until the &lt;code&gt;flush&lt;/code&gt; method is invoked on this node (or an ancestor).</source>
          <target state="translated">ノードの削除は、このノード（または祖先）で &lt;code&gt;flush&lt;/code&gt; メソッドが呼び出されるまで持続する必要はありません。</target>
        </trans-unit>
        <trans-unit id="b282c26f23a8ff63876d094fed5b0b9dceb07331" translate="yes" xml:space="preserve">
          <source>The remove operation is not supported by this implementation of &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="translated">削除操作は、この &lt;code&gt;Iterator&lt;/code&gt; の実装ではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="3c4efa145e520c4a7598346c393df2dbbefdc968" translate="yes" xml:space="preserve">
          <source>The removed value.</source>
          <target state="translated">削除された値。</target>
        </trans-unit>
        <trans-unit id="6ff8f9058796bef90ed321ab88ccf0d012f42526" translate="yes" xml:space="preserve">
          <source>The renamed node. This is either the specified node or the new node that was created to replace the specified node.</source>
          <target state="translated">名前が変更されたノード。これは、指定されたノードか、指定されたノードを置き換えるために作成された新しいノードのいずれかです。</target>
        </trans-unit>
        <trans-unit id="fb9b7cdcd454dd83954d48a119b69fc6d29f5c43" translate="yes" xml:space="preserve">
          <source>The renderer used to draw the data cells of the column.</source>
          <target state="translated">列のデータセルを描画するために使用されるレンダラーです。</target>
        </trans-unit>
        <trans-unit id="713971eadcf5411214bfe63ca9c0cd65073e7a98" translate="yes" xml:space="preserve">
          <source>The renderer used to draw the header of the column.</source>
          <target state="translated">列のヘッダーを描画するために使用されるレンダラーです。</target>
        </trans-unit>
        <trans-unit id="ac7f1cf8057b8bea9aa3a7381065318220564c73" translate="yes" xml:space="preserve">
          <source>The reordering array need not specify an actual permutation. An incoming argument will be duplicated if its index appears more than once in the array, and an incoming argument will be dropped if its index does not appear in the array. As in the case of &lt;a href=&quot;#dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)&quot;&gt;&lt;code&gt;dropArguments&lt;/code&gt;&lt;/a&gt;, incoming arguments which are not mentioned in the reordering array may be of any type, as determined only by &lt;code&gt;newType&lt;/code&gt;.</source>
          <target state="translated">並べ替え配列は、実際の順列を指定する必要はありません。インデックスが配列に複数回出現する場合、着信引数は複製され、インデックスが配列に出現しない場合、着信引数はドロップされます。&lt;a href=&quot;#dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)&quot;&gt; &lt;code&gt;dropArguments&lt;/code&gt; &lt;/a&gt;の場合と同様に、並べ替え配列に記載されていない着信引数は、 &lt;code&gt;newType&lt;/code&gt; によってのみ決定されるように、任意のタイプにすることができます。</target>
        </trans-unit>
        <trans-unit id="7ee9a68c9011522398b40024ebeb43b4a5fda590" translate="yes" xml:space="preserve">
          <source>The reordering array need not specify an actual permutation. An incoming argument will be duplicated if its index appears more than once in the array, and an incoming argument will be dropped if its index does not appear in the array. As in the case of &lt;a href=&quot;methodhandles#dropArguments-java.lang.invoke.MethodHandle-int-java.util.List-&quot;&gt;&lt;code&gt;dropArguments&lt;/code&gt;&lt;/a&gt;, incoming arguments which are not mentioned in the reordering array are may be any type, as determined only by &lt;code&gt;newType&lt;/code&gt;.</source>
          <target state="translated">並べ替え配列は、実際の順列を指定する必要はありません。着信引数は、そのインデックスが配列に複数回出現する場合は複製され、その引数が配列に出現しない場合は削除されます。&lt;a href=&quot;methodhandles#dropArguments-java.lang.invoke.MethodHandle-int-java.util.List-&quot;&gt; &lt;code&gt;dropArguments&lt;/code&gt; &lt;/a&gt;の場合と同様に、並べ替え配列で言及されていない入力引数は、 &lt;code&gt;newType&lt;/code&gt; によってのみ決定される任意のタイプにすることができます。</target>
        </trans-unit>
        <trans-unit id="f51e74f5d8487e855f129611f92abf36e6a28994" translate="yes" xml:space="preserve">
          <source>The replacement string may contain references to subsequences captured during the previous match: Each occurrence of &lt;code&gt;$&lt;/code&gt;</source>
          <target state="translated">置換文字列は、前の試合中に捕獲サブへの参照が含まれる場合があります。それぞれの発生 &lt;code&gt;$&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="11b366ce3d5519585e67264e9f68f215e953b69e" translate="yes" xml:space="preserve">
          <source>The replacement string may contain references to subsequences captured during the previous match: Each occurrence of &lt;code&gt;${&lt;/code&gt;</source>
          <target state="translated">置換文字列は、前の試合中に取り込まサブシーケンスへの参照を含むことができる：各発生 &lt;code&gt;${&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49ab89b061a41906c8763945c85297d70e2bd282" translate="yes" xml:space="preserve">
          <source>The replacement text of the entity.</source>
          <target state="translated">実体の置換テキスト。</target>
        </trans-unit>
        <trans-unit id="75ec87cf75e7574e625f69514e58b5152817990b" translate="yes" xml:space="preserve">
          <source>The replacement text of the entity. This method will only return non-null if this is an internal entity.</source>
          <target state="translated">エンティティの置換テキスト。このメソッドは、これが内部エンティティである場合にのみ、非 null を返します。</target>
        </trans-unit>
        <trans-unit id="cf33c4bd273f01e0c22bc67185a111143ddb62b3" translate="yes" xml:space="preserve">
          <source>The replacer function should not modify this matcher's state during replacement. This method will, on a best-effort basis, throw a &lt;a href=&quot;../concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt; if such modification is detected.</source>
          <target state="translated">置換関数は、置換中にこのマッチャーの状態を変更しないでください。このメソッドは、ベストエフォートベースで、そのような変更が検出された場合に&lt;a href=&quot;../concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="3a325ac974e7b645dae1cacad32338ebd82736bc" translate="yes" xml:space="preserve">
          <source>The reported coordinates for mouse drag events are clipped to fit within the bounds of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; associated with the &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">マウスドラッグイベントについて報告された座標は、 &lt;code&gt;Component&lt;/code&gt; 関連付けられた &lt;code&gt;GraphicsConfiguration&lt;/code&gt; の境界内に収まるようにクリップされます。</target>
        </trans-unit>
        <trans-unit id="eb6b8031115b561f37eb9a4d7da91ed0656b375b" translate="yes" xml:space="preserve">
          <source>The reported coordinates for mouse drag events are clipped to fit within the bounds of the virtual device associated with the &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">マウスドラッグイベントについて報告された座標は、 &lt;code&gt;Component&lt;/code&gt; 関連付けられた仮想デバイスの境界内に収まるようにクリップされます。</target>
        </trans-unit>
        <trans-unit id="288c5e2c9b272e95a0d7c59900658548e9747ef2" translate="yes" xml:space="preserve">
          <source>The reporter that will be set on any XMLStreamReader or XMLEventReader created by this factory instance.</source>
          <target state="translated">このファクトリ インスタンスによって作成された XMLStreamReader または XMLEventReader に設定されるレポーター。</target>
        </trans-unit>
        <trans-unit id="55f25e93574df5310447cf5bb1c8796f989fc6ae" translate="yes" xml:space="preserve">
          <source>The reporting of parameter entities (including the external DTD subset) is optional, and SAX2 drivers that report LexicalHandler events may not implement it; you can use the &lt;code&gt;http://xml.org/sax/features/lexical-handler/parameter-entities&lt;/code&gt; feature to query or control the reporting of parameter entities.</source>
          <target state="translated">パラメータエンティティ（外部DTDサブセットを含む）のレポートはオプションであり、LexicalHandlerイベントをレポートするSAX2ドライバはそれを実装しない場合があります。 &lt;code&gt;http://xml.org/sax/features/lexical-handler/parameter-entities&lt;/code&gt; 機能を使用して、パラメーターエンティティのレポートを照会または制御できます。</target>
        </trans-unit>
        <trans-unit id="6083e0509485bc16d1b67f9cd0c180d1fac35b49" translate="yes" xml:space="preserve">
          <source>The representation (mapping) in the Java programming language of an SQL ROWID value.</source>
          <target state="translated">SQL ROWID値のJavaプログラミング言語での表現(マッピング)。</target>
        </trans-unit>
        <trans-unit id="0acb89110741064b366cdd1922c5e4764ac516a3" translate="yes" xml:space="preserve">
          <source>The representation (mapping) in the Java programming language of an SQL ROWID value. An SQL ROWID is a built-in type, a value of which can be thought of as an address for its identified row in a database table. Whether that address is logical or, in any respects, physical is determined by its originating data source.</source>
          <target state="translated">SQL ROWID値のJavaプログラミング言語での表現(マッピング)。SQL ROWIDは組み込み型で、その値はデータベース・テーブル内で識別された行のアドレスと考えることができます。そのアドレスが論理的なものであるか、物理的なものであるかは、元のデータソースによって決定されます。</target>
        </trans-unit>
        <trans-unit id="a5a234babedabfce29cc4aa701cb753ce00ac220" translate="yes" xml:space="preserve">
          <source>The representation (mapping) in the Java&amp;trade; programming language of an SQL &lt;code&gt;BLOB&lt;/code&gt; value.</source>
          <target state="translated">SQL &lt;code&gt;BLOB&lt;/code&gt; 値のJava&amp;trade;プログラミング言語での表現（マッピング）。</target>
        </trans-unit>
        <trans-unit id="4d77c9a7464d84c1e1a1e7121b389a8cb2d1668e" translate="yes" xml:space="preserve">
          <source>The representation (mapping) in the Java&amp;trade; programming language of an SQL &lt;code&gt;BLOB&lt;/code&gt; value. An SQL &lt;code&gt;BLOB&lt;/code&gt; is a built-in type that stores a Binary Large Object as a column value in a row of a database table. By default drivers implement &lt;code&gt;Blob&lt;/code&gt; using an SQL &lt;code&gt;locator(BLOB)&lt;/code&gt;, which means that a &lt;code&gt;Blob&lt;/code&gt; object contains a logical pointer to the SQL &lt;code&gt;BLOB&lt;/code&gt; data rather than the data itself. A &lt;code&gt;Blob&lt;/code&gt; object is valid for the duration of the transaction in which is was created.</source>
          <target state="translated">SQL &lt;code&gt;BLOB&lt;/code&gt; 値のJava&amp;trade;プログラミング言語での表現（マッピング）。SQL &lt;code&gt;BLOB&lt;/code&gt; は、データベーステーブルの行の列値としてバイナリラージオブジェクトを格納する組み込み型です。デフォルトでは、ドライバーはSQL &lt;code&gt;locator(BLOB)&lt;/code&gt; を使用して &lt;code&gt;Blob&lt;/code&gt; を実装します。つまり、 &lt;code&gt;Blob&lt;/code&gt; オブジェクトには、データ自体ではなく、 &lt;code&gt;BLOB&lt;/code&gt; データへの論理ポインターが含まれます。A &lt;code&gt;Blob&lt;/code&gt; オブジェクトが作成されたされたトランザクションの期間中に有効です。</target>
        </trans-unit>
        <trans-unit id="3b478ac46ccb7d878a2f5619e7d5a35540bff2b2" translate="yes" xml:space="preserve">
          <source>The representation class associated with this &lt;code&gt;DataFlavor&lt;/code&gt; identifies the Java type of an object returned as a reference from an invocation &lt;code&gt;java.awt.datatransfer.getTransferData&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;DataFlavor&lt;/code&gt; に関連付けられた表現クラスは、呼び出し &lt;code&gt;java.awt.datatransfer.getTransferData&lt;/code&gt; から参照として返されるオブジェクトのJavaタイプを識別します。</target>
        </trans-unit>
        <trans-unit id="2b778106af4a2d34f18fd72da9905b02ac996017" translate="yes" xml:space="preserve">
          <source>The representation is exactly the one returned by the &lt;code&gt;Double.toString&lt;/code&gt; method of one argument.</source>
          <target state="translated">表現は、1 つの引数の &lt;code&gt;Double.toString&lt;/code&gt; メソッドによって返されるものとまったく同じです。</target>
        </trans-unit>
        <trans-unit id="58244bdf257d357f8d92e2421ad210e0d7962bd1" translate="yes" xml:space="preserve">
          <source>The representation is exactly the one returned by the &lt;code&gt;Float.toString&lt;/code&gt; method of one argument.</source>
          <target state="translated">表現は、1 つの引数の &lt;code&gt;Float.toString&lt;/code&gt; メソッドによって返されるものとまったく同じです。</target>
        </trans-unit>
        <trans-unit id="ded2585e0b6c084c04a4f0859a53141f76d123ae" translate="yes" xml:space="preserve">
          <source>The representation is exactly the one returned by the &lt;code&gt;Integer.toString&lt;/code&gt; method of one argument.</source>
          <target state="translated">この表現は、1 つの引数の &lt;code&gt;Integer.toString&lt;/code&gt; メソッドによって返されるものとまったく同じです。</target>
        </trans-unit>
        <trans-unit id="6aab087f6a2f2da33d64c153ee96c99fa034a1e7" translate="yes" xml:space="preserve">
          <source>The representation is exactly the one returned by the &lt;code&gt;Long.toString&lt;/code&gt; method of one argument.</source>
          <target state="translated">表現は、1 つの引数の &lt;code&gt;Long.toString&lt;/code&gt; メソッドによって返されるものとまったく同じです。</target>
        </trans-unit>
        <trans-unit id="b9a0adc7cc916f3011d7fe2d1b1539f1d22e7cd4" translate="yes" xml:space="preserve">
          <source>The representation of a savepoint, which is a point within the current transaction that can be referenced from the &lt;code&gt;Connection.rollback&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;Connection.rollback&lt;/code&gt; メソッドから参照できる現在のトランザクション内のポイントであるセーブポイントの表現。</target>
        </trans-unit>
        <trans-unit id="16e0f89431331e3c19f8e9168d79da480c3ea351" translate="yes" xml:space="preserve">
          <source>The representation of a savepoint, which is a point within the current transaction that can be referenced from the &lt;code&gt;Connection.rollback&lt;/code&gt; method. When a transaction is rolled back to a savepoint all changes made after that savepoint are undone.</source>
          <target state="translated">&lt;code&gt;Connection.rollback&lt;/code&gt; メソッドから参照できる現在のトランザクション内のポイントであるセーブポイントの表現。トランザクションがセーブポイントにロールバックされると、そのセーブポイント以降に行われたすべての変更が取り消されます。</target>
        </trans-unit>
        <trans-unit id="c10c8df535a59f66cf15a0bfa27c32d6f30bfdb3" translate="yes" xml:space="preserve">
          <source>The representation of an SGML DTD.</source>
          <target state="translated">SGML DTD の表現。</target>
        </trans-unit>
        <trans-unit id="f354ab4341294adf05dcc226d6afe0dd75fdc477" translate="yes" xml:space="preserve">
          <source>The representation of an SGML DTD. DTD describes a document syntax and is used in parsing of HTML documents. It contains a list of elements and their attributes as well as a list of entities defined in the DTD.</source>
          <target state="translated">SGMLのDTDを表現したもの。DTDは、文書の構文を記述したもので、HTML文書の解析に用いられる。DTDには、要素とその属性のリストと、DTDで定義された実体のリストが含まれている。</target>
        </trans-unit>
        <trans-unit id="0d60a9c0e70768f0432c0076bb2b850f773e5a83" translate="yes" xml:space="preserve">
          <source>The request controls supplied to the initial context constructor are &lt;em&gt;not&lt;/em&gt; used as the context request controls for subsequent context operations such as searches and lookups. Context request controls are set and updated by using &lt;code&gt;setRequestControls()&lt;/code&gt;.</source>
          <target state="translated">初期コンテキストコンストラクターに提供された要求コントロールは、検索やルックアップなどの後続のコンテキスト操作のコンテキスト要求コントロールとしては使用され&lt;em&gt;ません&lt;/em&gt;。コンテキスト要求コントロールは、 &lt;code&gt;setRequestControls()&lt;/code&gt; を使用して設定および更新されます。</target>
        </trans-unit>
        <trans-unit id="3c538826a3a1f2f420e3436c5b667643e5f793cd" translate="yes" xml:space="preserve">
          <source>The request-host is a HDN (not IP address) and has the form HD, where D is the value of the Domain attribute, and H is a string that contains one or more dots.</source>
          <target state="translated">リクエストホストはHDN(IPアドレスではない)であり、HDの形をしており、DはDomain属性の値であり、Hは1つ以上のドットを含む文字列である。</target>
        </trans-unit>
        <trans-unit id="a57362ff710e86a82bac45526ef9e2b2169857b3" translate="yes" xml:space="preserve">
          <source>The requested &lt;code&gt;Locale&lt;/code&gt; may contain an &lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt; extension&lt;/a&gt; for specifying the desired numbering system. For example, &lt;code&gt;&quot;ar-u-nu-arab&quot;&lt;/code&gt; (in the BCP 47 language tag form) specifies Arabic with the Arabic-Indic digits and symbols, while &lt;code&gt;&quot;ar-u-nu-latn&quot;&lt;/code&gt; specifies Arabic with the Latin digits and symbols. Refer to the &lt;em&gt;Unicode Locale Data Markup Language (LDML)&lt;/em&gt; specification for numbering systems.</source>
          <target state="translated">要求された &lt;code&gt;Locale&lt;/code&gt; は、目的の番号付けシステムを指定するための&lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt;拡張子&lt;/a&gt;が含まれている場合があります。たとえば、 &lt;code&gt;&quot;ar-u-nu-arab&quot;&lt;/code&gt; （BCP 47言語タグ形式）はアラビア語をアラビア語とインドの数字と記号で指定し、 &lt;code&gt;&quot;ar-u-nu-latn&quot;&lt;/code&gt; はアラビア語とラテン語の数字と記号を指定します。 。ナンバリングシステムについては、&lt;em&gt;Unicode Locale Data Markup Language（LDML）&lt;/em&gt;仕様を参照してください。</target>
        </trans-unit>
        <trans-unit id="e4313d8db2408961b8c6e4e788b166da71d191f7" translate="yes" xml:space="preserve">
          <source>The requested coder-result object</source>
          <target state="translated">要求されたコーダ-結果オブジェクト</target>
        </trans-unit>
        <trans-unit id="c473246769f43aa19b3ba4b2ef431369ba324d78" translate="yes" xml:space="preserve">
          <source>The requested data array element as an integer.</source>
          <target state="translated">要求されたデータ配列要素を整数で指定します。</target>
        </trans-unit>
        <trans-unit id="bc4af42dc723a89b139169dad6f6ac48341fa317" translate="yes" xml:space="preserve">
          <source>The requested type is any line that matches the description in the provided &lt;code&gt;Line.Info&lt;/code&gt; object. For example, if the info object represents a speaker port, and the mixer supports exactly one speaker port, this method should return 1. If the info object represents a source data line and the mixer supports the use of 32 source data lines simultaneously, the return value should be 32. If there is no limit, this function returns &lt;a href=&quot;audiosystem#NOT_SPECIFIED&quot;&gt;&lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要求されたタイプは、提供された &lt;code&gt;Line.Info&lt;/code&gt; オブジェクトの説明に一致する任意の行です。たとえば、infoオブジェクトがスピーカーポートを表し、ミキサーが1つのスピーカーポートのみをサポートする場合、このメソッドは1を返す必要があります。infoオブジェクトがソースデータラインを表し、ミキサーが32のソースデータラインの使用を同時にサポートする場合、戻り値は32である必要があります。制限がない場合、この関数は&lt;a href=&quot;audiosystem#NOT_SPECIFIED&quot;&gt; &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="248e76eb2ee596cc71b6a4da144a1ff22287b387" translate="yes" xml:space="preserve">
          <source>The requested type must have a return type of &lt;code&gt;void&lt;/code&gt;. (This is consistent with the JVM's treatment of constructor type descriptors.)</source>
          <target state="translated">要求されたタイプには、戻りタイプの &lt;code&gt;void&lt;/code&gt; が必要です。（これは、JVMのコンストラクター型記述子の扱いと一致しています。）</target>
        </trans-unit>
        <trans-unit id="516805460907e538d55b063de2a7d8a474251df4" translate="yes" xml:space="preserve">
          <source>The requester has canceled the job or the printer has aborted the job, but the printer is still performing some actions on the job until a specified stop point occurs or job termination/cleanup is completed.</source>
          <target state="translated">依頼元がジョブをキャンセルしたか、プリンタがジョブを中止したが、プリンタは指定された停止ポイントが発生するか、ジョブの終了/クリーンアップが完了するまで、ジョブの一部の動作を継続しています。</target>
        </trans-unit>
        <trans-unit id="6f22f6979881830731d65c0765a1fe0d7c814e17" translate="yes" xml:space="preserve">
          <source>The required</source>
          <target state="translated">必要な</target>
        </trans-unit>
        <trans-unit id="745e1e490c53f8464a11eebd65e0f35408648502" translate="yes" xml:space="preserve">
          <source>The required &lt;code&gt;hashCode&lt;/code&gt; behavior for Permission Objects is the following:</source>
          <target state="translated">権限オブジェクトに必要な &lt;code&gt;hashCode&lt;/code&gt; の動作は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="0b8bab1511c52f5ddaa9f2aab1201197de8e2410" translate="yes" xml:space="preserve">
          <source>The requirement of lookup object matching provides a &quot;fast fail&quot; behavior for programs which may otherwise trust erroneous revelation of a method handle with symbolic information (or caller binding) from an unexpected scope. Use &lt;a href=&quot;methodhandles#reflectAs(java.lang.Class,java.lang.invoke.MethodHandle)&quot;&gt;&lt;code&gt;MethodHandles.reflectAs(java.lang.Class&amp;lt;T&amp;gt;, java.lang.invoke.MethodHandle)&lt;/code&gt;&lt;/a&gt; to override this limitation.</source>
          <target state="translated">ルックアップオブジェクトマッチングの要件は、予期しないスコープからのシンボリック情報（または呼び出し元バインディング）を使用したメソッドハンドルの誤った公開を信頼する可能性のあるプログラムに「高速失敗」動作を提供します。&lt;a href=&quot;methodhandles#reflectAs(java.lang.Class,java.lang.invoke.MethodHandle)&quot;&gt; &lt;code&gt;MethodHandles.reflectAs(java.lang.Class&amp;lt;T&amp;gt;, java.lang.invoke.MethodHandle)&lt;/code&gt; &lt;/a&gt;を使用して、この制限をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="55d02efa54b09ebdcdd937fdc51b7ffc1d272c16" translate="yes" xml:space="preserve">
          <source>The requirement of lookup object matching provides a &quot;fast fail&quot; behavior for programs which may otherwise trust erroneous revelation of a method handle with symbolic information (or caller binding) from an unexpected scope. Use &lt;a href=&quot;methodhandles#reflectAs-java.lang.Class-java.lang.invoke.MethodHandle-&quot;&gt;&lt;code&gt;MethodHandles.reflectAs(java.lang.Class&amp;lt;T&amp;gt;, java.lang.invoke.MethodHandle)&lt;/code&gt;&lt;/a&gt; to override this limitation.</source>
          <target state="translated">ルックアップオブジェクトマッチングの要件は、予期しないスコープからのシンボリック情報（または呼び出し元のバインディング）によるメソッドハンドルの誤った開示を信頼するプログラムに「高速失敗」動作を提供します。この制限をオーバーライドするには、&lt;a href=&quot;methodhandles#reflectAs-java.lang.Class-java.lang.invoke.MethodHandle-&quot;&gt; &lt;code&gt;MethodHandles.reflectAs(java.lang.Class&amp;lt;T&amp;gt;, java.lang.invoke.MethodHandle)&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="0cbf46ff6901cb358f2bf2adf82f26fea12aff47" translate="yes" xml:space="preserve">
          <source>The reseedable and prediction resistance capabilities of a DRBG.</source>
          <target state="translated">DRBGのリシード可能性と予測耐性。</target>
        </trans-unit>
        <trans-unit id="88faedd860fdc4cb6207174dad3840e3bf7612c6" translate="yes" xml:space="preserve">
          <source>The reserved method name &quot;new&quot; may be used to call a class's constructor as if all classes defined static &quot;new&quot; methods. Constructor invocations are typically considered &lt;code&gt;Expression&lt;/code&gt;s rather than &lt;code&gt;Statement&lt;/code&gt;s as they return a value.</source>
          <target state="translated">予約されたメソッド名「new」は、すべてのクラスが静的な「new」メソッドを定義しているかのように、クラスのコンストラクターを呼び出すために使用できます。コンストラクターの呼び出しは、値を返すため、通常、 &lt;code&gt;Statement&lt;/code&gt; ではなく &lt;code&gt;Expression&lt;/code&gt; と見なされます。</target>
        </trans-unit>
        <trans-unit id="754706891133e7ad865e654b5b80f53d473f0298" translate="yes" xml:space="preserve">
          <source>The reset &lt;code&gt;DocumentBuilder&lt;/code&gt; is not guaranteed to have the same &lt;a href=&quot;../../../org/xml/sax/entityresolver&quot;&gt;&lt;code&gt;EntityResolver&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Object&lt;/code&gt;s, e.g. &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object obj)&lt;/code&gt;&lt;/a&gt;. It is guaranteed to have a functionally equal &lt;code&gt;EntityResolver&lt;/code&gt; and &lt;code&gt;ErrorHandler&lt;/code&gt;.</source>
          <target state="translated">リセット &lt;code&gt;DocumentBuilder&lt;/code&gt; 同じ持つことが保証されていない&lt;a href=&quot;../../../org/xml/sax/entityresolver&quot;&gt; &lt;code&gt;EntityResolver&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;Object&lt;/code&gt; 、秒など&lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object obj)&lt;/code&gt; &lt;/a&gt;。機能的に等しい &lt;code&gt;EntityResolver&lt;/code&gt; と &lt;code&gt;ErrorHandler&lt;/code&gt; を持つことが保証されています。</target>
        </trans-unit>
        <trans-unit id="f7e567940636717249f219f15560c4ebd13f7896" translate="yes" xml:space="preserve">
          <source>The reset &lt;code&gt;SAXParser&lt;/code&gt; is not guaranteed to have the same &lt;a href=&quot;../validation/schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Object&lt;/code&gt;, e.g. &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object obj)&lt;/code&gt;&lt;/a&gt;. It is guaranteed to have a functionally equal &lt;code&gt;Schema&lt;/code&gt;.</source>
          <target state="translated">リセット &lt;code&gt;SAXParser&lt;/code&gt; のは、同じ持つことが保証されていない&lt;a href=&quot;../validation/schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Object&lt;/code&gt; 、例えば&lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object obj)&lt;/code&gt; &lt;/a&gt;。機能的に等しい &lt;code&gt;Schema&lt;/code&gt; を持つことが保証されています。</target>
        </trans-unit>
        <trans-unit id="c30f2a2b35a74fb90b7aae0cc5ec8665873d5df5" translate="yes" xml:space="preserve">
          <source>The reset &lt;code&gt;Transformer&lt;/code&gt; is not guaranteed to have the same &lt;a href=&quot;uriresolver&quot;&gt;&lt;code&gt;URIResolver&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;errorlistener&quot;&gt;&lt;code&gt;ErrorListener&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Object&lt;/code&gt;s, e.g. &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object obj)&lt;/code&gt;&lt;/a&gt;. It is guaranteed to have a functionally equal &lt;code&gt;URIResolver&lt;/code&gt; and &lt;code&gt;ErrorListener&lt;/code&gt;.</source>
          <target state="translated">リセット &lt;code&gt;Transformer&lt;/code&gt; 同じ持つことが保証されていない&lt;a href=&quot;uriresolver&quot;&gt; &lt;code&gt;URIResolver&lt;/code&gt; &lt;/a&gt;か&lt;a href=&quot;errorlistener&quot;&gt; &lt;code&gt;ErrorListener&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Object&lt;/code&gt; 、秒など&lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object obj)&lt;/code&gt; &lt;/a&gt;。機能的に等しい &lt;code&gt;URIResolver&lt;/code&gt; と &lt;code&gt;ErrorListener&lt;/code&gt; を持つことが保証されています。</target>
        </trans-unit>
        <trans-unit id="01b3d7c853e31dc0a7995e2fca623c0cc7a8afec" translate="yes" xml:space="preserve">
          <source>The reset &lt;code&gt;Validator&lt;/code&gt; is not guaranteed to have the same &lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt;&lt;code&gt;LSResourceResolver&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Object&lt;/code&gt;s, e.g. &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object obj)&lt;/code&gt;&lt;/a&gt;. It is guaranteed to have a functionally equal &lt;code&gt;LSResourceResolver&lt;/code&gt; and &lt;code&gt;ErrorHandler&lt;/code&gt;.</source>
          <target state="translated">リセット &lt;code&gt;Validator&lt;/code&gt; は同じ持つことが保証されていない&lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt; &lt;code&gt;LSResourceResolver&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;Object&lt;/code&gt; 、秒など&lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object obj)&lt;/code&gt; &lt;/a&gt;。機能的に等しい &lt;code&gt;LSResourceResolver&lt;/code&gt; と &lt;code&gt;ErrorHandler&lt;/code&gt; を持つことが保証されています。</target>
        </trans-unit>
        <trans-unit id="5f47dccbff991860b05f0ad7e168ff6056c8b397" translate="yes" xml:space="preserve">
          <source>The reset &lt;code&gt;XPath&lt;/code&gt; is not guaranteed to have the same &lt;a href=&quot;xpathfunctionresolver&quot;&gt;&lt;code&gt;XPathFunctionResolver&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;xpathvariableresolver&quot;&gt;&lt;code&gt;XPathVariableResolver&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../namespace/namespacecontext&quot;&gt;&lt;code&gt;NamespaceContext&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Object&lt;/code&gt;s, e.g. &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object obj)&lt;/code&gt;&lt;/a&gt;. It is guaranteed to have a functionally equal &lt;code&gt;XPathFunctionResolver&lt;/code&gt;, &lt;code&gt;XPathVariableResolver&lt;/code&gt; and &lt;code&gt;NamespaceContext&lt;/code&gt;.</source>
          <target state="translated">リセット &lt;code&gt;XPath&lt;/code&gt; 同じ持つことが保証されていない&lt;a href=&quot;xpathfunctionresolver&quot;&gt; &lt;code&gt;XPathFunctionResolver&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;xpathvariableresolver&quot;&gt; &lt;code&gt;XPathVariableResolver&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../namespace/namespacecontext&quot;&gt; &lt;code&gt;NamespaceContext&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Object&lt;/code&gt; の、例えば&lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object obj)&lt;/code&gt; &lt;/a&gt;。機能的に等しい &lt;code&gt;XPathFunctionResolver&lt;/code&gt; 、 &lt;code&gt;XPathVariableResolver&lt;/code&gt; 、および &lt;code&gt;NamespaceContext&lt;/code&gt; を持つことが保証されています。</target>
        </trans-unit>
        <trans-unit id="df87b115c664fd653afbf26bb11c0fc8970cab09" translate="yes" xml:space="preserve">
          <source>The resolution of the system identifiers associated with entities is done using &lt;code&gt;Document.documentURI&lt;/code&gt;. However, when the feature &quot;LS&quot; defined in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407&quot;&gt;DOM Level 3 Load and Save&lt;/a&gt;] is supported by the DOM implementation, the parameter &quot;resource-resolver&quot; can also be used on &lt;code&gt;DOMConfiguration&lt;/code&gt; objects attached to &lt;code&gt;Document&lt;/code&gt; nodes. If this parameter is set, &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; will invoke the resource resolver instead of using &lt;code&gt;Document.documentURI&lt;/code&gt;.</source>
          <target state="translated">エンティティに関連付けられたシステム識別子の解決は、 &lt;code&gt;Document.documentURI&lt;/code&gt; を使用して行われます。ただし、[ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407&quot;&gt;DOMレベル3のロードと保存&lt;/a&gt;]で定義された機能「LS」がDOM実装でサポートされている場合、パラメータ「resource-resolver」は &lt;code&gt;Document&lt;/code&gt; ノードにアタッチされた &lt;code&gt;DOMConfiguration&lt;/code&gt; オブジェクトでも使用できます。このパラメータが設定されている場合、 &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; 代わりに使用するリソースリゾルバを呼び出す &lt;code&gt;Document.documentURI&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="1022ae785514449efe40f2c8963abb11d2504058" translate="yes" xml:space="preserve">
          <source>The resolve phase is controlled by two parameters, set on this class.</source>
          <target state="translated">解決位相は、このクラスに設定された2つのパラメータによって制御されます。</target>
        </trans-unit>
        <trans-unit id="6ad35174cec491d7c90515cea6438bbe6eeb865e" translate="yes" xml:space="preserve">
          <source>The resolved module with the given name or an empty &lt;code&gt;
         Optional&lt;/code&gt; if there isn't a module with this name in this configuration or any parent configurations</source>
          <target state="translated">指定された名前または空の解決されたモジュールこの構成または親構成にこの名前のモジュールがない場合は &lt;code&gt; Optional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a888b0082bf1bba928794b9e262d95500605aec" translate="yes" xml:space="preserve">
          <source>The resolved type descriptor at the call site of &lt;code&gt;invoke&lt;/code&gt; must be a valid argument to the receivers &lt;code&gt;asType&lt;/code&gt; method. In particular, the caller must specify the same argument arity as the callee's type, if the callee is not a &lt;a href=&quot;#asVarargsCollector(java.lang.Class)&quot;&gt;variable arity collector&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;invoke&lt;/code&gt; の呼び出しサイトで解決された型記述子は、レシーバーの &lt;code&gt;asType&lt;/code&gt; メソッドに対する有効な引数である必要があります。特に、呼び出し先が&lt;a href=&quot;#asVarargsCollector(java.lang.Class)&quot;&gt;可変アリティコレクターで&lt;/a&gt;ない場合、呼び出し元は呼び出し先のタイプと同じ引数アリティを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="c2a61f04ea30a79177449a58b04a28b104802818" translate="yes" xml:space="preserve">
          <source>The resolved type descriptor at the call site of &lt;code&gt;invoke&lt;/code&gt; must be a valid argument to the receivers &lt;code&gt;asType&lt;/code&gt; method. In particular, the caller must specify the same argument arity as the callee's type, if the callee is not a &lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;variable arity collector&lt;/a&gt;.</source>
          <target state="translated">呼び出しサイトで解決型記述子 &lt;code&gt;invoke&lt;/code&gt; レシーバへの有効な引数でなければなりません &lt;code&gt;asType&lt;/code&gt; の方法。特に、呼び出し先が&lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;可変アリティコレクターで&lt;/a&gt;ない場合、呼び出し元は呼び出し先のタイプと同じ引数アリティを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="eea421ae13a64e1dbdbe93927bc945b3bf0f2116" translate="yes" xml:space="preserve">
          <source>The resolver that will be set on any XMLStreamReader or XMLEventReader created by this factory instance.</source>
          <target state="translated">このファクトリ インスタンスによって作成された XMLStreamReader または XMLEventReader に設定されるリゾルバ。</target>
        </trans-unit>
        <trans-unit id="adc8b5b806ac4d1ec6811f56446ced5b92623119" translate="yes" xml:space="preserve">
          <source>The resolver will first search the system-type of entries with the specified &lt;code&gt;systemId&lt;/code&gt;. The system entries include &lt;code&gt;system&lt;/code&gt;, &lt;code&gt;rewriteSystem&lt;/code&gt; and &lt;code&gt;systemSuffix&lt;/code&gt; entries.</source>
          <target state="translated">リゾルバーは最初に、指定された &lt;code&gt;systemId&lt;/code&gt; を持つエントリのシステムタイプを検索します。システムエントリには、 &lt;code&gt;system&lt;/code&gt; 、 &lt;code&gt;rewriteSystem&lt;/code&gt; 、および &lt;code&gt;systemSuffix&lt;/code&gt; エントリが含まれます。</target>
        </trans-unit>
        <trans-unit id="043a5d4e92d9440bd14303d4b664c8b6162aa2d5" translate="yes" xml:space="preserve">
          <source>The resource manager is doing work outside a global transaction.</source>
          <target state="translated">リソースマネージャーはグローバル取引の外で仕事をしています。</target>
        </trans-unit>
        <trans-unit id="3a78066f6d7d65570a29e16f616bfab963bff0e5" translate="yes" xml:space="preserve">
          <source>The resource manager returns zero or more XIDs of the transaction branches that are currently in a prepared or heuristically completed state. If an error occurs during the operation, the resource manager should throw the appropriate XAException.</source>
          <target state="translated">リソースマネージャは、現在準備された状態またはヒューリスティックに完了した状態にあるトランザクションブランチのゼロまたはそれ以上のXIDを返す。操作中にエラーが発生した場合、リソースマネージャは適切な XAException をスローしなければなりません。</target>
        </trans-unit>
        <trans-unit id="71062e973d41f6ccd0f7868eee574273010d7036" translate="yes" xml:space="preserve">
          <source>The resource manager rolled back the transaction branch for a reason not on this list.</source>
          <target state="translated">リソースマネージャは、このリストにない理由でトランザクションブランチをロールバックしました。</target>
        </trans-unit>
        <trans-unit id="9ef095cc8f8eb9deb63e621a30579efd048e54dd" translate="yes" xml:space="preserve">
          <source>The resource requested or null.</source>
          <target state="translated">要求されたリソースまたはヌル。</target>
        </trans-unit>
        <trans-unit id="4cdbf0e8f46078714d3bc07542a4974803f2d6c4" translate="yes" xml:space="preserve">
          <source>The resources will be located when the returned stream is evaluated. If the evaluation results in an &lt;code&gt;IOException&lt;/code&gt; then the I/O exception is wrapped in an &lt;a href=&quot;../io/uncheckedioexception&quot;&gt;&lt;code&gt;UncheckedIOException&lt;/code&gt;&lt;/a&gt; that is then thrown.</source>
          <target state="translated">返されたストリームが評価されるときに、リソースが配置されます。評価の結果が &lt;code&gt;IOException&lt;/code&gt; になった場合、I / O例外は&lt;a href=&quot;../io/uncheckedioexception&quot;&gt; &lt;code&gt;UncheckedIOException&lt;/code&gt; に&lt;/a&gt;ラップされ、その後スローされます。</target>
        </trans-unit>
        <trans-unit id="c3d61363b6633b0d99e034696664c54cea2da612" translate="yes" xml:space="preserve">
          <source>The response body can be discarded using one of &lt;a href=&quot;httpresponse.bodyhandlers#discarding()&quot;&gt;&lt;code&gt;discarding&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;httpresponse.bodyhandlers#replacing(U)&quot;&gt;&lt;code&gt;replacing&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">応答本文は、&lt;a href=&quot;httpresponse.bodyhandlers#discarding()&quot;&gt; &lt;code&gt;discarding&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;httpresponse.bodyhandlers#replacing(U)&quot;&gt; &lt;code&gt;replacing&lt;/code&gt; &lt;/a&gt;いずれかを使用して破棄できます。</target>
        </trans-unit>
        <trans-unit id="e89a0946db3ad76329915dbe1fb2d058415e9c15" translate="yes" xml:space="preserve">
          <source>The response body is not available through this, or the &lt;code&gt;
 HttpResponse&lt;/code&gt; API, but instead all response body is forwarded to the given &lt;code&gt;subscriber&lt;/code&gt;, which should make it available, if appropriate, through some other mechanism, e.g. an entry in a database, etc.</source>
          <target state="translated">応答本文は、これまたは &lt;code&gt; HttpResponse&lt;/code&gt; APIを介して利用できませんが、代わりにすべての応答本文が特定の &lt;code&gt;subscriber&lt;/code&gt; 転送されます。これにより、必要に応じて、データベースのエントリなど、他のメカニズムを介して応答本文を利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="6dd06ecc31472bc0ffa478932d69394294897b00" translate="yes" xml:space="preserve">
          <source>The restore button text property.</source>
          <target state="translated">復元ボタンのテキスト プロパティ。</target>
        </trans-unit>
        <trans-unit id="99b6d2884fc55c38d82210c2985b9069bbb9d028" translate="yes" xml:space="preserve">
          <source>The result code. A zero value indicates success.</source>
          <target state="translated">結果コード。ゼロの値は成功を示します。</target>
        </trans-unit>
        <trans-unit id="8613290fff9e558c87a48402abefab9874ccc8e4" translate="yes" xml:space="preserve">
          <source>The result does not depend on the local time zone.</source>
          <target state="translated">結果は現地の時間帯に依存しません。</target>
        </trans-unit>
        <trans-unit id="921d7223769295c006da8a5575b7156fcaa03cc8" translate="yes" xml:space="preserve">
          <source>The result from JDK classes implementing &lt;code&gt;TemporalAccessor&lt;/code&gt; is as follows:</source>
          <target state="translated">&lt;code&gt;TemporalAccessor&lt;/code&gt; を実装するJDKクラスの結果は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="295420590a431895b0a9587ea2bb7cf9aa9bc5d8" translate="yes" xml:space="preserve">
          <source>The result is &lt;code&gt;true&lt;/code&gt; if and only if the argument is not &lt;code&gt;
 null&lt;/code&gt; and is a &lt;code&gt;FileTime&lt;/code&gt; that represents the same time. This method satisfies the general contract of the &lt;code&gt;Object.equals&lt;/code&gt; method.</source>
          <target state="translated">引数が &lt;code&gt; null&lt;/code&gt; でなく、同じ時刻を表す &lt;code&gt;FileTime&lt;/code&gt; で &lt;code&gt;true&lt;/code&gt; 場合にのみ、結果はtrueになります。このメソッドは、 &lt;code&gt;Object.equals&lt;/code&gt; メソッドの一般的なコントラクトを満たします。</target>
        </trans-unit>
        <trans-unit id="f6bd1c0a2aca7f162dd073e90d5740cb1616d84f" translate="yes" xml:space="preserve">
          <source>The result is &lt;code&gt;true&lt;/code&gt; if and only if the argument is not &lt;code&gt;null&lt;/code&gt; and is a &lt;code&gt;Color&lt;/code&gt; object that has the same red, green, blue, and alpha values as this object.</source>
          <target state="translated">結果は、引数が &lt;code&gt;null&lt;/code&gt; でなく、このオブジェクトと同じ赤、緑、青、およびアルファ値を持つ &lt;code&gt;Color&lt;/code&gt; オブジェクトで &lt;code&gt;true&lt;/code&gt; 場合にのみtrueになります。</target>
        </trans-unit>
        <trans-unit id="17e6a87b8d0781fae57ea50faf6f5b7a370d70bb" translate="yes" xml:space="preserve">
          <source>The result is &lt;code&gt;true&lt;/code&gt; if and only if the argument is not &lt;code&gt;null&lt;/code&gt; and is a &lt;code&gt;FileTime&lt;/code&gt; that represents the same time. This method satisfies the general contract of the &lt;code&gt;Object.equals&lt;/code&gt; method.</source>
          <target state="translated">結果は &lt;code&gt;true&lt;/code&gt; と引数がない場合にのみ場合 &lt;code&gt;null&lt;/code&gt; とある &lt;code&gt;FileTime&lt;/code&gt; 同じ時間を表しています。このメソッドは、 &lt;code&gt;Object.equals&lt;/code&gt; メソッドの一般規約を満たします。</target>
        </trans-unit>
        <trans-unit id="5e94f4c32498ea093ba8d30e7750bbbc7e9c3bb7" translate="yes" xml:space="preserve">
          <source>The result is &lt;code&gt;true&lt;/code&gt; if and only if the argument is not &lt;code&gt;null&lt;/code&gt; and is a &lt;code&gt;Rectangle&lt;/code&gt; object that has the same upper-left corner, width, and height as this &lt;code&gt;Rectangle&lt;/code&gt;.</source>
          <target state="translated">結果は、引数が &lt;code&gt;null&lt;/code&gt; でなく、この &lt;code&gt;Rectangle&lt;/code&gt; と同じ左上隅、幅、および高さを持つ &lt;code&gt;Rectangle&lt;/code&gt; オブジェクトで &lt;code&gt;true&lt;/code&gt; 場合にのみtrueになります。</target>
        </trans-unit>
        <trans-unit id="5ad28501616ab98234ec816e4489d80b5e85181f" translate="yes" xml:space="preserve">
          <source>The result is &lt;code&gt;true&lt;/code&gt; if and only if the argument is not &lt;code&gt;null&lt;/code&gt; and is an &lt;code&gt;AlphaComposite&lt;/code&gt; object that has the same compositing rule and alpha value as this object.</source>
          <target state="translated">引数が &lt;code&gt;null&lt;/code&gt; でなく、このオブジェクトと同じ合成ルールとアルファ値を持つ &lt;code&gt;AlphaComposite&lt;/code&gt; オブジェクトで &lt;code&gt;true&lt;/code&gt; 場合にのみ、結果はtrueになります。</target>
        </trans-unit>
        <trans-unit id="b0dee0b193f5269aef268cfda1e03af61caf65f1" translate="yes" xml:space="preserve">
          <source>The result is &lt;code&gt;true&lt;/code&gt; only if two cookies come from same domain (case-insensitive), have same name (case-insensitive), and have same path (case-sensitive).</source>
          <target state="translated">2つのCookieが同じドメイン（大文字と小文字を区別しない）からのもので、名前が同じ（大文字と小文字を区別しない）、パスが同じ（大文字と小文字を区別する）の場合にのみ、結果は &lt;code&gt;true&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="838dc70d106c3ae54e71b7f7448a352db88afffd" translate="yes" xml:space="preserve">
          <source>The result is a Unicode character</source>
          <target state="translated">その結果、ユニコード文字</target>
        </trans-unit>
        <trans-unit id="432ed2e9a36f0af4da6066cc56714de8ffa1b599" translate="yes" xml:space="preserve">
          <source>The result is a lexical representation generated by &lt;a href=&quot;#toXMLFormat()&quot;&gt;&lt;code&gt;toXMLFormat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">結果は、&lt;a href=&quot;#toXMLFormat()&quot;&gt; &lt;code&gt;toXMLFormat()&lt;/code&gt; &lt;/a&gt;によって生成された字句表現です。</target>
        </trans-unit>
        <trans-unit id="35b56830c2c27888962f73364e19ecf38d296dd4" translate="yes" xml:space="preserve">
          <source>The result is a literal &lt;code&gt;'%'&lt;/code&gt; (&lt;code&gt;'\u0025'&lt;/code&gt;)</source>
          <target state="translated">結果はリテラル &lt;code&gt;'%'&lt;/code&gt; （ &lt;code&gt;'\u0025'&lt;/code&gt; ）です</target>
        </trans-unit>
        <trans-unit id="ef02a3668d69ce2348a1bc4508f08e4804908b1b" translate="yes" xml:space="preserve">
          <source>The result is a string that represents the sign and magnitude (absolute value) of the argument</source>
          <target state="translated">結果は、引数の符号と大きさ(絶対値)を表す文字列です。</target>
        </trans-unit>
        <trans-unit id="50a9d6bfa24192970ed8fb8258874aefd0c97173" translate="yes" xml:space="preserve">
          <source>The result is a string that represents the sign and magnitude (absolute value) of the argument. The formatting of the sign is described in the &lt;a href=&quot;#L10nAlgorithm&quot;&gt;localization algorithm&lt;/a&gt;. The formatting of the magnitude</source>
          <target state="translated">結果は、引数の符号と大きさ（絶対値）を表す文字列です。符号のフォーマットについては、&lt;a href=&quot;#L10nAlgorithm&quot;&gt;ローカライズアルゴリズムで&lt;/a&gt;説明しています。マグニチュードのフォーマット</target>
        </trans-unit>
        <trans-unit id="f2cfd2a95bfe92fd8ecc073d54de4e5f2a29bf7c" translate="yes" xml:space="preserve">
          <source>The result is associated with the first type that successfully parses. Normally, applications will use &lt;code&gt;instanceof&lt;/code&gt; to check the result. For example:</source>
          <target state="translated">結果は、正常に解析された最初のタイプに関連付けられています。通常、アプリケーションは &lt;code&gt;instanceof&lt;/code&gt; を使用して結果を確認します。例えば：</target>
        </trans-unit>
        <trans-unit id="2603fe8103afc50e2378d77be85a45908bf61f3a" translate="yes" xml:space="preserve">
          <source>The result is formatted according to the XML Schema 1.0 spec and can be always parsed back later into the equivalent &lt;code&gt;Duration Object&lt;/code&gt; by &lt;a href=&quot;datatypefactory#newDuration(java.lang.String)&quot;&gt;&lt;code&gt;DatatypeFactory.newDuration(String  lexicalRepresentation)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">結果はXMLスキーマ1.0仕様に従ってフォーマットされ、&lt;a href=&quot;datatypefactory#newDuration(java.lang.String)&quot;&gt; &lt;code&gt;DatatypeFactory.newDuration(String lexicalRepresentation)&lt;/code&gt; &lt;/a&gt;によって、後でいつでも同等の &lt;code&gt;Duration Object&lt;/code&gt; 解析して戻すことができます。</target>
        </trans-unit>
        <trans-unit id="6c479cf3264a2832bd0cd79a44afc9492a7822f3" translate="yes" xml:space="preserve">
          <source>The result is formatted as a decimal integer</source>
          <target state="translated">結果は10進整数としてフォーマットされます。</target>
        </trans-unit>
        <trans-unit id="1baf7d104748e0c4f8533df16bd664f663e30ad1" translate="yes" xml:space="preserve">
          <source>The result is formatted as a decimal number</source>
          <target state="translated">結果は10進数で表示されます。</target>
        </trans-unit>
        <trans-unit id="5f14b19f3b75abbc59e057304d121d6548d56189" translate="yes" xml:space="preserve">
          <source>The result is formatted as a decimal number in computerized scientific notation</source>
          <target state="translated">結果は、コンピュータ化された科学的表記法で10進数としてフォーマットされています。</target>
        </trans-unit>
        <trans-unit id="5ab4d798c9eeb9edc29f6dcdd7b9bd66fea5cc6a" translate="yes" xml:space="preserve">
          <source>The result is formatted as a hexadecimal floating-point number with a significand and an exponent. This conversion is &lt;b&gt;not&lt;/b&gt; supported for the &lt;code&gt;BigDecimal&lt;/code&gt; type despite the latter's being in the</source>
          <target state="translated">結果は、仮数と指数を含む16進浮動小数点数としてフォーマットされます。この変換は &lt;code&gt;BigDecimal&lt;/code&gt; タイプで&lt;b&gt;は&lt;/b&gt;サポートされて&lt;b&gt;いません。&lt;/b&gt;後者は</target>
        </trans-unit>
        <trans-unit id="42563538eaee038d859706aa7ad8dd76aaba6a51" translate="yes" xml:space="preserve">
          <source>The result is formatted as a hexadecimal integer</source>
          <target state="translated">結果は16進整数でフォーマットされます。</target>
        </trans-unit>
        <trans-unit id="5e4dac5beac66ef686eb3d95b633320454953615" translate="yes" xml:space="preserve">
          <source>The result is formatted as an octal integer</source>
          <target state="translated">結果は8進整数としてフォーマットされます。</target>
        </trans-unit>
        <trans-unit id="b924acf7a536ce1992d3ebe1342457a6f36dca7a" translate="yes" xml:space="preserve">
          <source>The result is formatted using computerized scientific notation or decimal format, depending on the precision and the value after rounding.</source>
          <target state="translated">結果は、精度と四捨五入後の値に応じて、コンピュータ化された科学表記法または10進法を使用してフォーマットされます。</target>
        </trans-unit>
        <trans-unit id="9909e6819bf8d3b2b56ef5ec3cec62f6ed40ce7e" translate="yes" xml:space="preserve">
          <source>The result is obtained by invoking &lt;code&gt;Integer.toHexString(arg.hashCode())&lt;/code&gt;.</source>
          <target state="translated">結果は、 &lt;code&gt;Integer.toHexString(arg.hashCode())&lt;/code&gt; を呼び出すことによって取得されます。</target>
        </trans-unit>
        <trans-unit id="9bb45f182258a186b18790c8b6cad368f2f9319d" translate="yes" xml:space="preserve">
          <source>The result is returned in an enumeration of &lt;code&gt;SearchResult&lt;/code&gt;s. Each &lt;code&gt;SearchResult&lt;/code&gt; contains the name of the object and other information about the object (see SearchResult). The name is either relative to the target context of the search (which is named by the &lt;code&gt;name&lt;/code&gt; parameter), or it is a URL string. If the target context is included in the enumeration (as is possible when &lt;code&gt;cons&lt;/code&gt; specifies a search scope of &lt;code&gt;SearchControls.OBJECT_SCOPE&lt;/code&gt; or &lt;code&gt;SearchControls.SUBSTREE_SCOPE&lt;/code&gt;), its name is the empty string. The &lt;code&gt;SearchResult&lt;/code&gt; may also contain attributes of the matching object if the &lt;code&gt;cons&lt;/code&gt; argument specified that attributes be returned.</source>
          <target state="translated">結果は &lt;code&gt;SearchResult&lt;/code&gt; の列挙で返されます。各 &lt;code&gt;SearchResult&lt;/code&gt; には、オブジェクトの名前とオブジェクトに関するその他の情報が含まれます（SearchResultを参照）。名前は、検索のターゲットコンテキスト（ &lt;code&gt;name&lt;/code&gt; パラメーターによって名前が付けられます）に関連するか、URL文字列です。ターゲットコンテキストが列挙に含まれている場合（ &lt;code&gt;cons&lt;/code&gt; が &lt;code&gt;SearchControls.OBJECT_SCOPE&lt;/code&gt; または &lt;code&gt;SearchControls.SUBSTREE_SCOPE&lt;/code&gt; の検索範囲を指定している場合に可能）、その名前は空の文字列です。 &lt;code&gt;SearchResult&lt;/code&gt; は、場合も、一致するオブジェクトの属性を含むことが &lt;code&gt;cons&lt;/code&gt; 引数は属性が返されることを指定しました。</target>
        </trans-unit>
        <trans-unit id="06f5e6bd8fe2e41c0946b6e4854fa774421e66fe" translate="yes" xml:space="preserve">
          <source>The result is that two threads are running concurrently: the current thread (which returns from the call to the &lt;code&gt;start&lt;/code&gt; method) and the other thread (which executes its &lt;code&gt;run&lt;/code&gt; method).</source>
          <target state="translated">その結果、2つのスレッドが同時に実行されます。現在のスレッド（ &lt;code&gt;start&lt;/code&gt; メソッドへの呼び出しから戻る）ともう1つのスレッド（ &lt;code&gt;run&lt;/code&gt; メソッドを実行する）です。</target>
        </trans-unit>
        <trans-unit id="d28d29bf955a0a2e562abe4616fe55325dd93e91" translate="yes" xml:space="preserve">
          <source>The result is the platform-specific line separator</source>
          <target state="translated">その結果、プラットフォーム固有のラインセパレータ</target>
        </trans-unit>
        <trans-unit id="41412fe4e863ea723be458262dd0cc609691ec90" translate="yes" xml:space="preserve">
          <source>The result is undefined if a given argument is out of bounds.</source>
          <target state="translated">与えられた引数が範囲外の場合、結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="058151d93a1ffc55deb73095cbeeabd4b91f7162" translate="yes" xml:space="preserve">
          <source>The result may be the same object or a different object. If the requested target view isn't available then the given bean is returned.</source>
          <target state="translated">結果は同じオブジェクトか異なるオブジェクトになります。要求されたターゲットビューが利用できない場合は、与えられたビーンが返されます。</target>
        </trans-unit>
        <trans-unit id="d71f2225914f95f63b3119e8410020da3a87b63a" translate="yes" xml:space="preserve">
          <source>The result must be a concrete subclass of StartTlsResponse and must have a public zero-argument constructor.</source>
          <target state="translated">結果は StartTlsResponse の具体的なサブクラスであり、パブリックなゼロ引数のコンストラクタを持たなければなりません。</target>
        </trans-unit>
        <trans-unit id="77ef281b848eda832ef63d0cbb4b3167978fdaff" translate="yes" xml:space="preserve">
          <source>The result of a match operation.</source>
          <target state="translated">マッチ操作の結果。</target>
        </trans-unit>
        <trans-unit id="16ff2b07c82c6850565061f19a2fba35ea83719e" translate="yes" xml:space="preserve">
          <source>The result of any attempt to modify a node passed to a &lt;code&gt;LSSerializerFilter&lt;/code&gt; is implementation dependent.</source>
          <target state="translated">&lt;code&gt;LSSerializerFilter&lt;/code&gt; に渡されたノードを変更しようとした結果は、実装に依存します。</target>
        </trans-unit>
        <trans-unit id="86cbe802aaee405937142c5c8477e8e564f921ce" translate="yes" xml:space="preserve">
          <source>The result of applying this method to these arguments.</source>
          <target state="translated">このメソッドをこれらの引数に適用した結果です。</target>
        </trans-unit>
        <trans-unit id="b31380d4fb2e0fe70212e83955d24c3b92a4b2b8" translate="yes" xml:space="preserve">
          <source>The result of dereferencing a &lt;code&gt;URIReference&lt;/code&gt; is either an instance of &lt;a href=&quot;octetstreamdata&quot;&gt;&lt;code&gt;OctetStreamData&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;nodesetdata&quot;&gt;&lt;code&gt;NodeSetData&lt;/code&gt;&lt;/a&gt;. Unless the &lt;code&gt;URIReference&lt;/code&gt; is a</source>
          <target state="translated">&lt;code&gt;URIReference&lt;/code&gt; を逆参照した結果は、&lt;a href=&quot;octetstreamdata&quot;&gt; &lt;code&gt;OctetStreamData&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;nodesetdata&quot;&gt; &lt;code&gt;NodeSetData&lt;/code&gt; の&lt;/a&gt;インスタンスのいずれかです。ない限り &lt;code&gt;URIReference&lt;/code&gt; のです</target>
        </trans-unit>
        <trans-unit id="57688b2e9247501954c4e97e1843bbe216d0db07" translate="yes" xml:space="preserve">
          <source>The result of evaluating an XPath expression as a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">XPath式を &lt;code&gt;String&lt;/code&gt; として評価した結果。</target>
        </trans-unit>
        <trans-unit id="187dde591e1a356faf91de53b761157c44b78684" translate="yes" xml:space="preserve">
          <source>The result of evaluating an XPath expression as an &lt;code&gt;Object&lt;/code&gt; of &lt;code&gt;returnType&lt;/code&gt;.</source>
          <target state="translated">XPath式を &lt;code&gt;returnType&lt;/code&gt; の &lt;code&gt;Object&lt;/code&gt; として評価した結果。</target>
        </trans-unit>
        <trans-unit id="06c9132221a6a96dee79b4ca2f11200dc474b3d2" translate="yes" xml:space="preserve">
          <source>The result of evaluating the &lt;code&gt;XPath&lt;/code&gt; function as an &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XPath&lt;/code&gt; 関数を &lt;code&gt;Object&lt;/code&gt; として評価した結果。</target>
        </trans-unit>
        <trans-unit id="0fbfd9ab10f2fcfc0e43605231238f6c0ded7faf" translate="yes" xml:space="preserve">
          <source>The result of evaluating the expression.</source>
          <target state="translated">式を評価した結果。</target>
        </trans-unit>
        <trans-unit id="5429cf36c8fd7a2562aad20c9d7f000fb4661122" translate="yes" xml:space="preserve">
          <source>The result of invoking &lt;code&gt;toString()&lt;/code&gt; on the destination for the output</source>
          <target state="translated">出力の宛先で &lt;code&gt;toString()&lt;/code&gt; を呼び出した結果</target>
        </trans-unit>
        <trans-unit id="f10bfc6a52d64bcc34aea2bf2ebde23c53dfafd9" translate="yes" xml:space="preserve">
          <source>The result of parsing drives these callback methods.</source>
          <target state="translated">解析の結果がこれらのコールバックメソッドを駆動します。</target>
        </trans-unit>
        <trans-unit id="73d45b66d9ffa1146363db71d3dd68e129484be6" translate="yes" xml:space="preserve">
          <source>The result of parsing drives these callback methods. The open and close actions should be balanced. The &lt;code&gt;flush&lt;/code&gt; method will be the last method called, to give the receiver a chance to flush any pending data into the document.</source>
          <target state="translated">解析の結果は、これらのコールバックメソッドを駆動します。オープンアクションとクローズアクションのバランスをとる必要があります。 &lt;code&gt;flush&lt;/code&gt; 方法は、受信機に文書に保留中のデータをフラッシュする機会を与えるために、最後に呼び出されたメソッドになります。</target>
        </trans-unit>
        <trans-unit id="44e206b266ba20a6d4c2e1a04be2e9225595f101" translate="yes" xml:space="preserve">
          <source>The result of processing a given input is not a function of the presence or absence of other inputs (orthogonality).</source>
          <target state="translated">与えられた入力を処理した結果は、他の入力の有無の関数ではありません(直交性)。</target>
        </trans-unit>
        <trans-unit id="fe195ae57fa315bdb0e05f0a54cdd78c21fbbf3c" translate="yes" xml:space="preserve">
          <source>The result of this algorithm is chosen arbitrarily from the methods with most specific return type among all selected methods from step 3. Let R be a return type of a method M from the set of all selected methods from step 3. M is a method with most specific return type if there is no such method N != M from the same set, having return type S != R, such that S is a subtype of R as determined by R.class.&lt;a href=&quot;#isAssignableFrom(java.lang.Class)&quot;&gt;&lt;code&gt;isAssignableFrom(java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt;(S.class).</source>
          <target state="translated">このアルゴリズムの結果は、ステップ3で選択したすべてのメソッドの中で最も特定の戻り値の型を持つメソッドから任意に選択されます。Rをステップ3で選択したすべてのメソッドのセットからのメソッドMの戻り値の型とします。Mは次のメソッドです。同じセットからそのようなメソッドN！= Mがなく、戻り値の型S！= Rを持ち、SがR.classによって決定されるRのサブタイプである場合の最も具体的な戻り値の型。&lt;a href=&quot;#isAssignableFrom(java.lang.Class)&quot;&gt; &lt;code&gt;isAssignableFrom(java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;（S.class）。</target>
        </trans-unit>
        <trans-unit id="e7fdb4e83c0852b667620524f411ba48b7948b95" translate="yes" xml:space="preserve">
          <source>The result of this algorithm is the union of all selected methods from step 3.</source>
          <target state="translated">このアルゴリズムの結果は、ステップ3から選択されたすべてのメソッドの和となります。</target>
        </trans-unit>
        <trans-unit id="53dcb69ac17959659b0334122a358f8985fa05ac" translate="yes" xml:space="preserve">
          <source>The result of this method can be a negative period if the end is before the start. In most cases, the positive/negative sign will be the same in each of the supported fields.</source>
          <target state="translated">このメソッドの結果は、終了が開始よりも前であれば、負の期間になることがあります。ほとんどの場合、サポートされているフィールドのそれぞれで正負の符号は同じになります。</target>
        </trans-unit>
        <trans-unit id="7daa711ab9261153416c162a0aec24648bdcf12b" translate="yes" xml:space="preserve">
          <source>The result of this method can be a negative period if the end is before the start. The negative sign will be the same in each of year, month and day.</source>
          <target state="translated">この方法の結果、終了が開始よりも前であれば、マイナス期間になることもあります。年、月、日のそれぞれでマイナスの符号は同じになります。</target>
        </trans-unit>
        <trans-unit id="70f2097d3f2bdbf3980ebc845ba5296b4a7310cf" translate="yes" xml:space="preserve">
          <source>The result of this method can be a negative period if the end is before the start. To guarantee to obtain a positive duration call &lt;a href=&quot;#abs()&quot;&gt;&lt;code&gt;abs()&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">この方法の結果は、終了が開始の前である場合、負の期間になる可能性があります。正の期間を確実に取得するには、結果に対して&lt;a href=&quot;#abs()&quot;&gt; &lt;code&gt;abs()&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="84fc9d37222c832e8afbf150d8f6699253efda20" translate="yes" xml:space="preserve">
          <source>The result of this method can be a negative period if the end is before the start. To guarantee to obtain a positive duration call &lt;a href=&quot;duration#abs--&quot;&gt;&lt;code&gt;abs()&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">このメソッドの結果は、終了が開始の前にある場合、負の期間になる可能性があります。正の期間を確実に取得するには、結果に対して&lt;a href=&quot;duration#abs--&quot;&gt; &lt;code&gt;abs()&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="fdc023462e3c1d38fa0fae3a92e16cba6d2639d7" translate="yes" xml:space="preserve">
          <source>The result of this method is &lt;code&gt;TemporalAccessor&lt;/code&gt; which represents the data as seen in the input. Values are not validated, thus parsing a date string of '2012-00-65' would result in a temporal with three fields - year of '2012', month of '0' and day-of-month of '65'.</source>
          <target state="translated">このメソッドの結果は、入力に表示されるデータを表す &lt;code&gt;TemporalAccessor&lt;/code&gt; です。値は検証されないため、「2012-00-65」の日付文字列を解析すると、「2012」の年、「0」の月、「65」の月の3つのフィールドを持つ一時データが生成されます。</target>
        </trans-unit>
        <trans-unit id="52fc7eddd6f4fde58aa8d10634dec95344d469b7" translate="yes" xml:space="preserve">
          <source>The result of this method is absolute if, and only if, either this URI is absolute or the given URI is absolute.</source>
          <target state="translated">このメソッドの結果は、このURIが絶対的であるか、与えられたURIが絶対的である場合にのみ、絶対的なものとなります。</target>
        </trans-unit>
        <trans-unit id="09c0c8baacc8b26a7914b1dbea349839039a03cd" translate="yes" xml:space="preserve">
          <source>The result of this method is exactly the same as if it were an invocation of this object's &lt;a href=&quot;#insert(int,java.lang.CharSequence,int,int)&quot;&gt;&lt;code&gt;insert&lt;/code&gt;&lt;/a&gt;(dstOffset, s, 0, s.length()) method.</source>
          <target state="translated">このメソッドの結果は、このオブジェクトの&lt;a href=&quot;#insert(int,java.lang.CharSequence,int,int)&quot;&gt; &lt;code&gt;insert&lt;/code&gt; &lt;/a&gt;（dstOffset、s、0、s.length（））メソッドの呼び出しである場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="33f42a4bb7c7ad421307948fd84808d9ca5b7265" translate="yes" xml:space="preserve">
          <source>The result of this method is exactly the same as if it were an invocation of this object's &lt;a href=&quot;stringbuffer#insert-int-java.lang.CharSequence-int-int-&quot;&gt;&lt;code&gt;insert&lt;/code&gt;&lt;/a&gt;(dstOffset, s, 0, s.length()) method.</source>
          <target state="translated">このメソッドの結果は、このオブジェクトの&lt;a href=&quot;stringbuffer#insert-int-java.lang.CharSequence-int-int-&quot;&gt; &lt;code&gt;insert&lt;/code&gt; &lt;/a&gt;（dstOffset、s、0、s.length（））メソッドを呼び出した場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="e72a2494b9f2adf3a9c829328a4201155a935ee8" translate="yes" xml:space="preserve">
          <source>The result of this method is exactly the same as if it were an invocation of this object's &lt;a href=&quot;stringbuilder#insert-int-java.lang.CharSequence-int-int-&quot;&gt;&lt;code&gt;insert&lt;/code&gt;&lt;/a&gt;(dstOffset, s, 0, s.length()) method.</source>
          <target state="translated">このメソッドの結果は、このオブジェクトの&lt;a href=&quot;stringbuilder#insert-int-java.lang.CharSequence-int-int-&quot;&gt; &lt;code&gt;insert&lt;/code&gt; &lt;/a&gt;（dstOffset、s、0、s.length（））メソッドを呼び出した場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="8aac06f8f47a270c52f5af0438f30546f8c15210" translate="yes" xml:space="preserve">
          <source>The result of this method is exactly the same as if it were an invocation of this.append(s, 0, s.length());</source>
          <target state="translated">このメソッドの結果は、this.append(s,0,s.length())の呼び出しと全く同じです。</target>
        </trans-unit>
        <trans-unit id="7b7539ebe1108c837cb3ebf5e22050282d869cda" translate="yes" xml:space="preserve">
          <source>The result of this method is never null. This method only associates the returned &lt;code&gt;KeyTab&lt;/code&gt; object with the default keytab file and does not read it.</source>
          <target state="translated">このメソッドの結果がnullになることはありません。このメソッドは、返された &lt;code&gt;KeyTab&lt;/code&gt; オブジェクトをデフォルトのキータブファイルに関連付けるだけで、それを読み取りません。</target>
        </trans-unit>
        <trans-unit id="7001452e9a69f2ce57bba98f6683a9cf75e695fd" translate="yes" xml:space="preserve">
          <source>The result of this method is never null. This method only associates the returned &lt;code&gt;KeyTab&lt;/code&gt; object with the file and does not read it.</source>
          <target state="translated">このメソッドの結果がnullになることはありません。このメソッドは、返された &lt;code&gt;KeyTab&lt;/code&gt; オブジェクトのみをファイルに関連付け、それを読み取りません。</target>
        </trans-unit>
        <trans-unit id="c5dddf426eb8badc7192516892b3925d64fec814" translate="yes" xml:space="preserve">
          <source>The result of this method is obtained by invoking the &lt;a href=&quot;../temporal/temporalquery#queryFrom(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;TemporalQuery.queryFrom(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; method on the specified query passing &lt;code&gt;this&lt;/code&gt; as the argument.</source>
          <target state="translated">この方法の結果を呼び出すことによって得られる&lt;a href=&quot;../temporal/temporalquery#queryFrom(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;TemporalQuery.queryFrom(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;通過指定されたクエリのメソッドを &lt;code&gt;this&lt;/code&gt; 引数として。</target>
        </trans-unit>
        <trans-unit id="c493abfdae35894af24f4901c426e667b33769ca" translate="yes" xml:space="preserve">
          <source>The result of this method is obtained by invoking the &lt;a href=&quot;../temporal/temporalquery#queryFrom-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;TemporalQuery.queryFrom(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; method on the specified query passing &lt;code&gt;this&lt;/code&gt; as the argument.</source>
          <target state="translated">このメソッドの結果は、指定されたクエリで&lt;a href=&quot;../temporal/temporalquery#queryFrom-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;TemporalQuery.queryFrom(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、 &lt;code&gt;this&lt;/code&gt; を引数として渡します。</target>
        </trans-unit>
        <trans-unit id="cf14aaf159e93918c79f0986121a7011b52fe97e" translate="yes" xml:space="preserve">
          <source>The result of this method is obtained by invoking the &lt;a href=&quot;temporal/temporaladjuster#adjustInto(java.time.temporal.Temporal)&quot;&gt;&lt;code&gt;TemporalAdjuster.adjustInto(Temporal)&lt;/code&gt;&lt;/a&gt; method on the specified adjuster passing &lt;code&gt;this&lt;/code&gt; as the argument.</source>
          <target state="translated">この方法の結果を呼び出すことによって得られる&lt;a href=&quot;temporal/temporaladjuster#adjustInto(java.time.temporal.Temporal)&quot;&gt; &lt;code&gt;TemporalAdjuster.adjustInto(Temporal)&lt;/code&gt; &lt;/a&gt;通過指定アジャスタのメソッドを &lt;code&gt;this&lt;/code&gt; 引数として。</target>
        </trans-unit>
        <trans-unit id="c9079bf22411247394dc7e14291f74d7e689d317" translate="yes" xml:space="preserve">
          <source>The result of this method is obtained by invoking the &lt;a href=&quot;temporal/temporaladjuster#adjustInto-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAdjuster.adjustInto(Temporal)&lt;/code&gt;&lt;/a&gt; method on the specified adjuster passing &lt;code&gt;this&lt;/code&gt; as the argument.</source>
          <target state="translated">このメソッドの結果は、指定されたアジャスターで&lt;a href=&quot;temporal/temporaladjuster#adjustInto-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAdjuster.adjustInto(Temporal)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、 &lt;code&gt;this&lt;/code&gt; を引数として渡します。</target>
        </trans-unit>
        <trans-unit id="952caf818a8c4cd6663bea809ef9d640be5e151b" translate="yes" xml:space="preserve">
          <source>The result of this method is obtained by invoking the &lt;a href=&quot;temporal/temporalquery#queryFrom(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;TemporalQuery.queryFrom(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; method on the specified query passing &lt;code&gt;this&lt;/code&gt; as the argument.</source>
          <target state="translated">この方法の結果を呼び出すことによって得られる&lt;a href=&quot;temporal/temporalquery#queryFrom(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;TemporalQuery.queryFrom(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;通過指定されたクエリのメソッドを &lt;code&gt;this&lt;/code&gt; 引数として。</target>
        </trans-unit>
        <trans-unit id="ed9634345d8412156512a42500e34a894cf4c2f5" translate="yes" xml:space="preserve">
          <source>The result of this method is obtained by invoking the &lt;a href=&quot;temporal/temporalquery#queryFrom-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;TemporalQuery.queryFrom(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; method on the specified query passing &lt;code&gt;this&lt;/code&gt; as the argument.</source>
          <target state="translated">このメソッドの結果は、指定されたクエリで&lt;a href=&quot;temporal/temporalquery#queryFrom-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;TemporalQuery.queryFrom(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、 &lt;code&gt;this&lt;/code&gt; を引数として渡します。</target>
        </trans-unit>
        <trans-unit id="9b7fc7cadcbbb563002dfc29694594763d5fe98f" translate="yes" xml:space="preserve">
          <source>The result of this method will make up the contents of the SASL buffer as defined in RFC 2222 without the leading four octet field that represents the length. &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; specify the portion of &lt;code&gt;outgoing&lt;/code&gt; to use.</source>
          <target state="translated">このメソッドの結果は、長さを表す先頭の4オクテットフィールドなしで、RFC 2222で定義されているSASLバッファーのコンテンツを構成します。 &lt;code&gt;offset&lt;/code&gt; および &lt;code&gt;len&lt;/code&gt; は、使用する &lt;code&gt;outgoing&lt;/code&gt; の部分を指定します。</target>
        </trans-unit>
        <trans-unit id="1b8cb5fb0da99e3e289350d5c66fac89988702d0" translate="yes" xml:space="preserve">
          <source>The result returned by the &lt;a href=&quot;keyselector#select(javax.xml.crypto.dsig.keyinfo.KeyInfo,javax.xml.crypto.KeySelector.Purpose,javax.xml.crypto.AlgorithmMethod,javax.xml.crypto.XMLCryptoContext)&quot;&gt;&lt;code&gt;KeySelector.select&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;keyselector#select(javax.xml.crypto.dsig.keyinfo.KeyInfo,javax.xml.crypto.KeySelector.Purpose,javax.xml.crypto.AlgorithmMethod,javax.xml.crypto.XMLCryptoContext)&quot;&gt; &lt;code&gt;KeySelector.select&lt;/code&gt; &lt;/a&gt;メソッドによって返される結果。</target>
        </trans-unit>
        <trans-unit id="9369d2fab7f01eadc45cae17b70a104674f355e1" translate="yes" xml:space="preserve">
          <source>The result returned by the call is boxed if it is a primitive, or forced to null if the return type is void.</source>
          <target state="translated">呼び出しによって返された結果は、それがプリミティブであれば箱形になり、戻り値の型が void であれば強制的に null になります。</target>
        </trans-unit>
        <trans-unit id="806535d76174a264f9b4ff6d7c99faca08eddf1e" translate="yes" xml:space="preserve">
          <source>The result returned by the hook must be a method handle of exactly the same type as the call site.</source>
          <target state="translated">フックが返す結果は、コールサイトと全く同じ型のメソッドハンドルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="ab16e8f218d193e2ac56d5cea7e3ab465621608f" translate="yes" xml:space="preserve">
          <source>The result set contains one row for each array element, with two columns in each row. The second column stores the element value; the first column stores the index into the array for that element (with the first array element being at index 1). The rows are in ascending order corresponding to the order of the indices.</source>
          <target state="translated">結果集合は,各配列要素に対して1行ずつ,各行には2つの列が含まれます.2 番目のカラムには要素の値が格納され,1 番目のカラムにはその要素の配列へのインデックスが格納されます(最初の配列要素はインデックス 1 です).行は,インデックスの順序に対応する昇順に並べられます.</target>
        </trans-unit>
        <trans-unit id="c7fbca7853e7e584b81e78e65665e66e2c6c2224" translate="yes" xml:space="preserve">
          <source>The result set has one row for each element of the SQL array designated by this object, with the first row containing the element at index &lt;code&gt;index&lt;/code&gt;. The result set has up to &lt;code&gt;count&lt;/code&gt; rows in ascending order based on the indices. Each row has two columns: The second column stores the element value; the first column stores the index into the array for that element.</source>
          <target state="translated">結果セットには、このオブジェクトによって指定されたSQL配列の要素ごとに1つの行があり、最初の行にはインデックス &lt;code&gt;index&lt;/code&gt; 要素が含まれています。結果セットには、インデックスに基づいて昇順で行を &lt;code&gt;count&lt;/code&gt; することができます。各行には2つの列があります。2番目の列には要素値が格納されます。最初の列は、その要素の配列にインデックスを格納します。</target>
        </trans-unit>
        <trans-unit id="59d025c7c37030729df1da6ef20378d1c89b991c" translate="yes" xml:space="preserve">
          <source>The result should use a conversion-dependent alternate form</source>
          <target state="translated">結果は変換に依存する代替形式を使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="8f5827a90eb65856b4b89ffb933882240c216cc7" translate="yes" xml:space="preserve">
          <source>The result type of a &lt;a href=&quot;filevisitor&quot;&gt;&lt;code&gt;FileVisitor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;filevisitor&quot;&gt; &lt;code&gt;FileVisitor&lt;/code&gt; &lt;/a&gt;の結果タイプ。</target>
        </trans-unit>
        <trans-unit id="2d7644c465280fb43e327f5847a1469aaa7aec19" translate="yes" xml:space="preserve">
          <source>The result will always include a sign</source>
          <target state="translated">結果には必ず記号が含まれます。</target>
        </trans-unit>
        <trans-unit id="c5f0ab9813b2497b6aace9d0a659cb51a7b9e650" translate="yes" xml:space="preserve">
          <source>The result will be left-justified.</source>
          <target state="translated">結果は左寄せになります。</target>
        </trans-unit>
        <trans-unit id="5cd03f8040d572a14698fa4790b45d2dea79538f" translate="yes" xml:space="preserve">
          <source>The result will be null if it is called on the root Logger in the namespace.</source>
          <target state="translated">名前空間のルート ロガーで呼び出された場合、結果は null になります。</target>
        </trans-unit>
        <trans-unit id="eebffb3b7f508dfd870235eaedb8bd617c34fb42" translate="yes" xml:space="preserve">
          <source>The result will be zero-padded</source>
          <target state="translated">結果はゼロパッドになります。</target>
        </trans-unit>
        <trans-unit id="ac5d38a04d258f50b2e728006d792d84ec797c12" translate="yes" xml:space="preserve">
          <source>The result will enclose negative numbers in parentheses</source>
          <target state="translated">結果は負の数値を括弧で囲みます。</target>
        </trans-unit>
        <trans-unit id="b60dbdb0c739a0db71280a2d5057407b2907dcbf" translate="yes" xml:space="preserve">
          <source>The result will include a leading space for positive values</source>
          <target state="translated">その結果、ポジティブな価値観のリーディングスペースを含む</target>
        </trans-unit>
        <trans-unit id="99b73d58b5f8e32d7a839a384b8c3e4612121e9f" translate="yes" xml:space="preserve">
          <source>The result will include locale-specific &lt;a href=&quot;../text/decimalformatsymbols#getGroupingSeparator()&quot;&gt;grouping separators&lt;/a&gt;</source>
          <target state="translated">結果には、ロケール固有の&lt;a href=&quot;../text/decimalformatsymbols#getGroupingSeparator()&quot;&gt;グループ化区切り文字&lt;/a&gt;が含まれます</target>
        </trans-unit>
        <trans-unit id="86565ee42252b8d90b6fc4f6a7e56b8ff7846015" translate="yes" xml:space="preserve">
          <source>The result will include locale-specific &lt;a href=&quot;../text/decimalformatsymbols#getGroupingSeparator--&quot;&gt;grouping separators&lt;/a&gt;</source>
          <target state="translated">結果には、ロケール固有の&lt;a href=&quot;../text/decimalformatsymbols#getGroupingSeparator--&quot;&gt;グループ化区切り文字&lt;/a&gt;が含まれます</target>
        </trans-unit>
        <trans-unit id="da36d6b79c4c033f7a27b28c533a4819c6e58026" translate="yes" xml:space="preserve">
          <source>The resultant byte array</source>
          <target state="translated">結果のバイト配列</target>
        </trans-unit>
        <trans-unit id="094bc7c12af1c9c170e626d26c061113ab22168d" translate="yes" xml:space="preserve">
          <source>The resulting &lt;code&gt;Class&lt;/code&gt; object</source>
          <target state="translated">結果の &lt;code&gt;Class&lt;/code&gt; オブジェクト</target>
        </trans-unit>
        <trans-unit id="776a2beb758c091693ee57d4a8d599511a9379bd" translate="yes" xml:space="preserve">
          <source>The resulting &lt;code&gt;Class&lt;/code&gt; object, or &lt;code&gt;null&lt;/code&gt; if the class could not be found.</source>
          <target state="translated">結果の &lt;code&gt;Class&lt;/code&gt; オブジェクト、またはクラスが見つからなかった場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="04d7e541442907c4718e4aa6df8cb95ea6facb8b" translate="yes" xml:space="preserve">
          <source>The resulting &lt;code&gt;Path&lt;/code&gt;</source>
          <target state="translated">結果の &lt;code&gt;Path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d9cee928349ecad8207afb80abfb3ac1e49b7c6" translate="yes" xml:space="preserve">
          <source>The resulting &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">結果の &lt;code&gt;String&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9c998e00f65f9ad466e49086e9abcbd51c428c9" translate="yes" xml:space="preserve">
          <source>The resulting &lt;code&gt;Version&lt;/code&gt;</source>
          <target state="translated">結果の &lt;code&gt;Version&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2eb30aecd9ce3fd342fd1fb862917adbede7e62" translate="yes" xml:space="preserve">
          <source>The resulting Class object.</source>
          <target state="translated">結果として得られるクラスオブジェクト。</target>
        </trans-unit>
        <trans-unit id="64fd0e638650ed8a264bb09d0464e8bdf66b1c52" translate="yes" xml:space="preserve">
          <source>The resulting URI</source>
          <target state="translated">結果として得られるURI</target>
        </trans-unit>
        <trans-unit id="f09e99077085a93a3362b510af059c6626ecc325" translate="yes" xml:space="preserve">
          <source>The resulting URI string is then parsed as if by invoking the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;URI(String)&lt;/code&gt;&lt;/a&gt; constructor and then invoking the &lt;a href=&quot;#parseServerAuthority()&quot;&gt;&lt;code&gt;parseServerAuthority()&lt;/code&gt;&lt;/a&gt; method upon the result; this may cause a &lt;a href=&quot;urisyntaxexception&quot;&gt;&lt;code&gt;URISyntaxException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">結果のURI文字列は、&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;URI(String)&lt;/code&gt; &lt;/a&gt;コンストラクターを呼び出してから、結果&lt;a href=&quot;#parseServerAuthority()&quot;&gt; &lt;code&gt;parseServerAuthority()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すかのように解析されます。これにより、&lt;a href=&quot;urisyntaxexception&quot;&gt; &lt;code&gt;URISyntaxException&lt;/code&gt; &lt;/a&gt;がスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="7419fc69db0c5232d5bde59115b8e8bbc2a129ee" translate="yes" xml:space="preserve">
          <source>The resulting URI string is then parsed as if by invoking the &lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt;&lt;code&gt;URI(String)&lt;/code&gt;&lt;/a&gt; constructor and then invoking the &lt;a href=&quot;uri#parseServerAuthority--&quot;&gt;&lt;code&gt;parseServerAuthority()&lt;/code&gt;&lt;/a&gt; method upon the result; this may cause a &lt;a href=&quot;urisyntaxexception&quot;&gt;&lt;code&gt;URISyntaxException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">次に、結果のURI文字列は、&lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt; &lt;code&gt;URI(String)&lt;/code&gt; &lt;/a&gt;コンストラクターを呼び出してから、結果&lt;a href=&quot;uri#parseServerAuthority--&quot;&gt; &lt;code&gt;parseServerAuthority()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すようにして解析されます。これにより、&lt;a href=&quot;urisyntaxexception&quot;&gt; &lt;code&gt;URISyntaxException&lt;/code&gt; &lt;/a&gt;がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="e0092d38cbcba375e121b4dfada28b43109355f6" translate="yes" xml:space="preserve">
          <source>The resulting URI string is then parsed in order to create the new URI instance as if by invoking the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;URI(String)&lt;/code&gt;&lt;/a&gt; constructor; this may cause a &lt;a href=&quot;urisyntaxexception&quot;&gt;&lt;code&gt;URISyntaxException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">次に、結果のURI文字列が解析され、&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;URI(String)&lt;/code&gt; &lt;/a&gt;コンストラクターを呼び出すかのように新しいURIインスタンスが作成されます。これにより、&lt;a href=&quot;urisyntaxexception&quot;&gt; &lt;code&gt;URISyntaxException&lt;/code&gt; &lt;/a&gt;がスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="5a50f9807a1fa543061a71bf50d779ccfe528067" translate="yes" xml:space="preserve">
          <source>The resulting URI string is then parsed in order to create the new URI instance as if by invoking the &lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt;&lt;code&gt;URI(String)&lt;/code&gt;&lt;/a&gt; constructor; this may cause a &lt;a href=&quot;urisyntaxexception&quot;&gt;&lt;code&gt;URISyntaxException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">次に、結果のURI文字列が解析され、&lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt; &lt;code&gt;URI(String)&lt;/code&gt; &lt;/a&gt;コンストラクターが呼び出されたかのように新しいURIインスタンスが作成されます。これにより、&lt;a href=&quot;urisyntaxexception&quot;&gt; &lt;code&gt;URISyntaxException&lt;/code&gt; &lt;/a&gt;がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="f1cbbe9ae02dde33f88ed9dbc263ec8e5ac65206" translate="yes" xml:space="preserve">
          <source>The resulting adapter is the same type as the target, except that the first parameter type is dropped, if it corresponds to the result of the combiner.</source>
          <target state="translated">結果として得られるアダプタはターゲットと同じ型になりますが、 コンバイナの結果に対応するものであれば、最初のパラメータの型は削除されます。</target>
        </trans-unit>
        <trans-unit id="0492a8e1954857252e9e87bc20c1aba15bfe6e4d" translate="yes" xml:space="preserve">
          <source>The resulting arc begins at &lt;code&gt;startAngle&lt;/code&gt; and extends for &lt;code&gt;arcAngle&lt;/code&gt; degrees, using the current color. Angles are interpreted such that 0 degrees is at the 3 o'clock position. A positive value indicates a counter-clockwise rotation while a negative value indicates a clockwise rotation.</source>
          <target state="translated">結果の円弧は &lt;code&gt;startAngle&lt;/code&gt; で始まり、現在の色を使用して &lt;code&gt;arcAngle&lt;/code&gt; 度まで拡張します。角度は、0度が3時の位置になるように解釈されます。正の値は反時計回りの回転を示し、負の値は時計回りの回転を示します。</target>
        </trans-unit>
        <trans-unit id="43e6530ff8fe5ba50d8fda3e44fc6556cf949d6b" translate="yes" xml:space="preserve">
          <source>The resulting arc begins at &lt;code&gt;startAngle&lt;/code&gt; and extends for &lt;code&gt;arcAngle&lt;/code&gt; degrees. Angles are interpreted such that 0 degrees is at the 3 o'clock position. A positive value indicates a counter-clockwise rotation while a negative value indicates a clockwise rotation.</source>
          <target state="translated">結果の円弧は &lt;code&gt;startAngle&lt;/code&gt; で始まり、 &lt;code&gt;arcAngle&lt;/code&gt; 度まで伸びます。角度は、0度が3時の位置になるように解釈されます。正の値は反時計回りの回転を示し、負の値は時計回りの回転を示します。</target>
        </trans-unit>
        <trans-unit id="f03fd98b1be6d4bac23f1b8c056fc776f2b93ba7" translate="yes" xml:space="preserve">
          <source>The resulting arc covers an area &lt;code&gt;width&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; pixels wide by &lt;code&gt;height&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; pixels tall.</source>
          <target state="translated">結果の円弧は、領域の &lt;code&gt;width&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; ピクセル幅x &lt;code&gt;height&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; ピクセルの高さをカバーします。</target>
        </trans-unit>
        <trans-unit id="6c786abb2aba329e942d81e1d06f1d11b97967b9" translate="yes" xml:space="preserve">
          <source>The resulting array is of exactly the same class as the original array.</source>
          <target state="translated">結果として得られる配列は,元の配列と全く同じクラスの配列となります.</target>
        </trans-unit>
        <trans-unit id="c5a1157b9f760855069d2f10df624ea637e64ca4" translate="yes" xml:space="preserve">
          <source>The resulting asynchronous channel group reuses a fixed number of threads. At any point, at most &lt;code&gt;nThreads&lt;/code&gt; threads will be active processing tasks that are submitted to handle I/O events and dispatch completion results for operations initiated on asynchronous channels in the group.</source>
          <target state="translated">結果の非同期チャネルグループは、固定数のスレッドを再利用します。任意の時点で、最大で &lt;code&gt;nThreads&lt;/code&gt; スレッドがアクティブな処理タスクとなり、I / Oイベントを処理し、グループ内の非同期チャネルで開始された操作の完了結果をディスパッチします。</target>
        </trans-unit>
        <trans-unit id="2e1c0df7b54fbf773f3c4b5bcdbc4bfa62115cb7" translate="yes" xml:space="preserve">
          <source>The resulting attribute has the set difference of its prior value set and the specified value set. If no values are specified, deletes the entire attribute. If the attribute does not exist, or if some or all members of the specified value set do not exist, this absence may be ignored and the operation succeeds, or a NamingException may be thrown to indicate the absence. Removal of the last value will remove the attribute if the attribute is required to have at least one value.</source>
          <target state="translated">結果として得られる属性は、その前の値のセットと指定された値のセットの差を持つ。値が指定されていない場合は、属性全体を削除する。属性が存在しない場合、または指定された値集合の一部またはすべてのメンバが存在しない場合、この不在は無視されて操作が成功するか、不在を示すNamingExceptionがスローされることがあります。最後の値の削除は、属性が少なくとも一つの値を持つことが要求されている場合に、その属性を削除します。</target>
        </trans-unit>
        <trans-unit id="8a8b051c029a9cb257557ce55a86701099f33ad0" translate="yes" xml:space="preserve">
          <source>The resulting channel is associated with default thread pool to which tasks are submitted to handle I/O events and dispatch to completion handlers that consume the result of asynchronous operations performed on the resulting channel.</source>
          <target state="translated">結果のチャネルは、I/O イベントを処理するためにタスクが投入され、結果のチャネルで実行された非同期操作の結果を消費する補完ハンドラにディスパッチされるデフォルトのスレッドプールに関連付けられます。</target>
        </trans-unit>
        <trans-unit id="2e0477159a435eb4c7b6e87913d4947dad931600" translate="yes" xml:space="preserve">
          <source>The resulting channel will not be buffered; it will simply redirect its I/O operations to the given stream. Closing the channel will in turn cause the stream to be closed.</source>
          <target state="translated">結果として得られるチャネルはバッファリングされず、単にその I/O 操作を指定されたストリームにリダイレクトします。チャネルを閉じると、そのストリームも閉じられます。</target>
        </trans-unit>
        <trans-unit id="2e7f4afa7fa2b1530937581bdba920189b54b7a0" translate="yes" xml:space="preserve">
          <source>The resulting context is for resolving URLs of the scheme &lt;code&gt;scheme&lt;/code&gt;. The resulting context is not tied to a specific URL. It is able to handle arbitrary URLs with the specified scheme.</source>
          <target state="translated">結果のコンテキストは、スキーム &lt;code&gt;scheme&lt;/code&gt; の URLを解決するためのものです。結果のコンテキストは、特定のURLに関連付けられていません。指定されたスキームで任意のURLを処理できます。</target>
        </trans-unit>
        <trans-unit id="b4ed36145c18184a4c0192876b36f57186eb11b9" translate="yes" xml:space="preserve">
          <source>The resulting file attribute view can be used to read or update the attributes of file in this directory. The &lt;code&gt;type&lt;/code&gt; parameter specifies the type of the attribute view and the method returns an instance of that type if supported. Invoking this method to obtain a &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; always returns an instance of that class that is bound to the file in the directory.</source>
          <target state="translated">結果のファイル属性ビューを使用して、このディレクトリ内のファイルの属性を読み取りまたは更新できます。 &lt;code&gt;type&lt;/code&gt; パラメータは、属性ビューのタイプを指定し、サポートされている場合の方法は、そのタイプのインスタンスを返します。このメソッドを&lt;a href=&quot;attribute/basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;を取得すると、常に、ディレクトリ内のファイルにバインドされているそのクラスのインスタンスが返されます。</target>
        </trans-unit>
        <trans-unit id="d791ce15a89946bb449aad309d10e2028011d0e0" translate="yes" xml:space="preserve">
          <source>The resulting file attribute view can be used to read or update the attributes of this (open) directory. The &lt;code&gt;type&lt;/code&gt; parameter specifies the type of the attribute view and the method returns an instance of that type if supported. Invoking this method to obtain a &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; always returns an instance of that class that is bound to this open directory.</source>
          <target state="translated">結果のファイル属性ビューを使用して、この（開いている）ディレクトリの属性を読み取りまたは更新できます。 &lt;code&gt;type&lt;/code&gt; パラメータは、属性ビューのタイプを指定し、サポートされている場合の方法は、そのタイプのインスタンスを返します。このメソッドを&lt;a href=&quot;attribute/basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;を取得すると、常にこの開いているディレクトリにバインドされているそのクラスのインスタンスが返されます。</target>
        </trans-unit>
        <trans-unit id="1c0268e4ebd731468a02d197d2029a7d6d6cfbfc" translate="yes" xml:space="preserve">
          <source>The resulting file names must match exactly as strings with their occurrences in the JAR file.</source>
          <target state="translated">結果として得られるファイル名は、JARファイル内で発生したものと文字列として正確に一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="3d48fd783d3474da2a240f1521be0f07a0215d13" translate="yes" xml:space="preserve">
          <source>The resulting filter performs the limit checks and then tries to match the class, if any. If any of the limits are exceeded, the filter returns &lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt;&lt;code&gt;Status.REJECTED&lt;/code&gt;&lt;/a&gt;. If the class is an array type, the class to be matched is the element type. Arrays of any number of dimensions are treated the same as the element type. For example, a pattern of &quot;&lt;code&gt;!example.Foo&lt;/code&gt;&quot;, rejects creation of any instance or array of &lt;code&gt;example.Foo&lt;/code&gt;. The first pattern that matches, working from left to right, determines the &lt;a href=&quot;objectinputfilter.status#ALLOWED&quot;&gt;&lt;code&gt;Status.ALLOWED&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt;&lt;code&gt;Status.REJECTED&lt;/code&gt;&lt;/a&gt; result. If the limits are not exceeded and no pattern matches the class, the result is &lt;a href=&quot;objectinputfilter.status#UNDECIDED&quot;&gt;&lt;code&gt;Status.UNDECIDED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">結果のフィルターは、制限チェックを実行してから、クラスがある場合はそれを照合しようとします。制限のいずれかを超えると、フィルターは&lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt; &lt;code&gt;Status.REJECTED&lt;/code&gt; を&lt;/a&gt;返します。クラスが配列型の場合、照合されるクラスは要素型です。任意の数の次元の配列は、要素タイプと同じように扱われます。たとえば、「 &lt;code&gt;!example.Foo&lt;/code&gt; 」のパターンは、 &lt;code&gt;example.Foo&lt;/code&gt; のインスタンスまたは配列の作成を拒否します。一致する最初のパターンは、左から右に機能して、&lt;a href=&quot;objectinputfilter.status#ALLOWED&quot;&gt; &lt;code&gt;Status.ALLOWED&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt; &lt;code&gt;Status.REJECTED&lt;/code&gt; の&lt;/a&gt;結果を決定します。制限を超えておらず、クラスに一致するパターンがない場合、結果は&lt;a href=&quot;objectinputfilter.status#UNDECIDED&quot;&gt; &lt;code&gt;Status.UNDECIDED&lt;/code&gt; になり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="39b37f06bbf698636d93a2ea1a9e0ccaad0b21fe" translate="yes" xml:space="preserve">
          <source>The resulting formatted String will normally include a localized and formatted version of the LogRecord's message field. It is recommended to use the &lt;a href=&quot;#formatMessage(java.util.logging.LogRecord)&quot;&gt;&lt;code&gt;formatMessage(java.util.logging.LogRecord)&lt;/code&gt;&lt;/a&gt; convenience method to localize and format the message field.</source>
          <target state="translated">結果のフォーマットされた文字列には、通常、LogRecordのメッセージフィールドのローカライズおよびフォーマットされたバージョンが含まれます。&lt;a href=&quot;#formatMessage(java.util.logging.LogRecord)&quot;&gt; &lt;code&gt;formatMessage(java.util.logging.LogRecord)&lt;/code&gt; &lt;/a&gt;コンビニエンスメソッドを使用して、メッセージフィールドをローカライズおよびフォーマットすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c1dd0222947bfa0316d9b432e87769219a094695" translate="yes" xml:space="preserve">
          <source>The resulting formatted String will normally include a localized and formatted version of the LogRecord's message field. It is recommended to use the &lt;a href=&quot;formatter#formatMessage-java.util.logging.LogRecord-&quot;&gt;&lt;code&gt;formatMessage(java.util.logging.LogRecord)&lt;/code&gt;&lt;/a&gt; convenience method to localize and format the message field.</source>
          <target state="translated">結果としてフォーマットされた文字列には、通常、ローカライズされフォーマットされたバージョンのLogRecordのメッセージフィールドが含まれます。メッセージフィールドをローカライズしてフォーマットするには、&lt;a href=&quot;formatter#formatMessage-java.util.logging.LogRecord-&quot;&gt; &lt;code&gt;formatMessage(java.util.logging.LogRecord)&lt;/code&gt; &lt;/a&gt;コンビニエンスメソッドを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a440b10bec8baf92c276afc34bf461c3ea93f484" translate="yes" xml:space="preserve">
          <source>The resulting handle will have the same return type as the target handle.</source>
          <target state="translated">結果として得られるハンドルは、ターゲットハンドルと同じ戻り値の型になります。</target>
        </trans-unit>
        <trans-unit id="f9b393261c3425d386d8251817252af6f14e85a9" translate="yes" xml:space="preserve">
          <source>The resulting instance of the required type will respond to invocation of the type's uniquely named method by calling the given target on the incoming arguments, and returning or throwing whatever the target returns or throws. The invocation will be as if by &lt;code&gt;target.invoke&lt;/code&gt;. The target's type will be checked before the instance is created, as if by a call to &lt;code&gt;asType&lt;/code&gt;, which may result in a &lt;code&gt;WrongMethodTypeException&lt;/code&gt;.</source>
          <target state="translated">必要なタイプの結果のインスタンスは、着信引数で指定されたターゲットを呼び出し、ターゲットが返すまたはスローするものをすべて返すまたはスローすることにより、タイプの一意に名前が付けられたメソッドの呼び出しに応答します。呼び出しは、 &lt;code&gt;target.invoke&lt;/code&gt; によるかのようになります。ターゲットのタイプは、インスタンスが作成される前に、 &lt;code&gt;asType&lt;/code&gt; の呼び出しのようにチェックされ、その結果、 &lt;code&gt;WrongMethodTypeException&lt;/code&gt; が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="7de4b752490153330ced19eb1636ec25661fe14d" translate="yes" xml:space="preserve">
          <source>The resulting list is &lt;code&gt;[a, c, d, b, e]&lt;/code&gt;.</source>
          <target state="translated">結果のリストは &lt;code&gt;[a, c, d, b, e]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c292f8233ecc218c4ef8e408a4e751545e0593e6" translate="yes" xml:space="preserve">
          <source>The resulting list would contain &lt;code&gt;&quot;abc&quot;&lt;/code&gt;, &lt;code&gt;&quot;def&quot;&lt;/code&gt;, the empty string, and &lt;code&gt;&quot;ghi&quot;&lt;/code&gt;.</source>
          <target state="translated">結果のリストには、 &lt;code&gt;&quot;abc&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;def&quot;&lt;/code&gt; 、空の文字列、および &lt;code&gt;&quot;ghi&quot;&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="2678a315bb7b0ca19efcf39c01d949c69b6ab3c7" translate="yes" xml:space="preserve">
          <source>The resulting lookup's capabilities for loading classes (used during &lt;a href=&quot;#findClass(java.lang.String)&quot;&gt;&lt;code&gt;findClass(java.lang.String)&lt;/code&gt;&lt;/a&gt; invocations) are determined by the lookup class' loader, which may change due to this operation.</source>
          <target state="translated">クラスをロードするための結果のルックアップの機能（&lt;a href=&quot;#findClass(java.lang.String)&quot;&gt; &lt;code&gt;findClass(java.lang.String)&lt;/code&gt; の&lt;/a&gt;呼び出し中に使用される）は、ルックアップクラスのローダーによって決定されます。ローダーはこの操作によって変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="bf2be7ac8c067fddb839990370820b0eb8d4e56d" translate="yes" xml:space="preserve">
          <source>The resulting loop handle's result type and parameter signature are determined as follows:</source>
          <target state="translated">結果として得られるループハンドルの結果タイプとパラメータシグネチャは、以下のように決定されます。</target>
        </trans-unit>
        <trans-unit id="1884f6b5e1183ba90dbd15f7cef2ddc5936af5e3" translate="yes" xml:space="preserve">
          <source>The resulting metadata object is only responsible for returning documents in the format named by &lt;code&gt;formatName&lt;/code&gt;. Within any documents that are returned, only nodes whose names are members of &lt;code&gt;nodeNames&lt;/code&gt; are required to be returned. In this way, the amount of metadata processing done by the reader may be kept to a minimum, based on what information is actually needed.</source>
          <target state="translated">結果のメタデータオブジェクトは、 &lt;code&gt;formatName&lt;/code&gt; で指定された形式でドキュメントを返すことのみを担当します。返されるドキュメント内では、 &lt;code&gt;nodeNames&lt;/code&gt; のメンバーである名前を持つノードのみを返す必要があります。このようにして、実際に必要な情報に基づいて、リーダーによって実行されるメタデータ処理の量を最小限に抑えることができます。</target>
        </trans-unit>
        <trans-unit id="9c5c220cd80df632d39ecb3d8b6a70f850252346" translate="yes" xml:space="preserve">
          <source>The resulting period will be day-based, with the amount of days equal to the number of weeks multiplied by 7. The years and months units will be zero.</source>
          <target state="translated">結果として得られる期間は日ベースとなり、日数は週数に7を掛けたものとなります。 年と月の単位はゼロとなります。</target>
        </trans-unit>
        <trans-unit id="a6b95edf4e81e9e6b6619e37b7ddbb8faf120000" translate="yes" xml:space="preserve">
          <source>The resulting period will have the specified days. The years and months units will be zero.</source>
          <target state="translated">結果として得られる期間は、指定された日数を持つことになります。年と月の単位はゼロになります。</target>
        </trans-unit>
        <trans-unit id="9ed86d9dd063303868aa5b67521032ff19d3dd44" translate="yes" xml:space="preserve">
          <source>The resulting period will have the specified months. The years and days units will be zero.</source>
          <target state="translated">結果として得られる期間は、指定された月を持つことになります。年と日の単位はゼロになります。</target>
        </trans-unit>
        <trans-unit id="29d3631062d098fb17c4652fb16c3cf33dfe26c4" translate="yes" xml:space="preserve">
          <source>The resulting period will have the specified years. The months and days units will be zero.</source>
          <target state="translated">結果として得られる期間は、指定された年を持つことになります。月と日の単位はゼロになります。</target>
        </trans-unit>
        <trans-unit id="95444b5a8c83dcd2572f1e1d42e1076adc4c44ce" translate="yes" xml:space="preserve">
          <source>The resulting proxy class must not exceed any limits imposed on classes by the virtual machine. For example, the VM may limit the number of interfaces that a class may implement to 65535; in that case, the size of the &lt;code&gt;interfaces&lt;/code&gt; array must not exceed 65535.</source>
          <target state="translated">結果のプロキシクラスは、仮想マシンによってクラスに課される制限を超えてはなりません。たとえば、VMは、クラスが実装できるインターフェイスの数を65535に制限する場合があります。その場合、 &lt;code&gt;interfaces&lt;/code&gt; 配列のサイズは65535を超えてはなりません。</target>
        </trans-unit>
        <trans-unit id="6387f721ca72aada5ca623b823df6496720b727a" translate="yes" xml:space="preserve">
          <source>The resulting reader will start reading at the given &lt;code&gt;offset&lt;/code&gt;. The total number of &lt;code&gt;char&lt;/code&gt; values that can be read from this reader will be either &lt;code&gt;length&lt;/code&gt; or &lt;code&gt;buf.length-offset&lt;/code&gt;, whichever is smaller.</source>
          <target state="translated">結果のリーダーは、指定 &lt;code&gt;offset&lt;/code&gt; れたオフセットで読み取りを開始します。このリーダーから読み取ることができる &lt;code&gt;char&lt;/code&gt; 値の総数は、 &lt;code&gt;length&lt;/code&gt; または &lt;code&gt;buf.length-offset&lt;/code&gt; のいずれか小さい方になります。</target>
        </trans-unit>
        <trans-unit id="913ac6b499d59e4b63e4cdaa10016b85296c4fef" translate="yes" xml:space="preserve">
          <source>The resulting region is then subsampled according to the factors given in &lt;a href=&quot;iioparam#setSourceSubsampling(int,int,int,int)&quot;&gt;&lt;code&gt;IIOParam.setSourceSubsampling&lt;/code&gt;&lt;/a&gt;. The first pixel, the number of pixels per row, and the number of rows all depend on the subsampling settings. Call the minimum X and Y coordinates of the resulting rectangle (&lt;code&gt;minX&lt;/code&gt;, &lt;code&gt;minY&lt;/code&gt;), its width &lt;code&gt;w&lt;/code&gt; and its height &lt;code&gt;h&lt;/code&gt;.</source>
          <target state="translated">結果の領域は、&lt;a href=&quot;iioparam#setSourceSubsampling(int,int,int,int)&quot;&gt; &lt;code&gt;IIOParam.setSourceSubsampling&lt;/code&gt; で&lt;/a&gt;指定された係数に従ってサブサンプリングされます。最初のピクセル、1行あたりのピクセル数、および行数はすべて、サブサンプリング設定によって異なります。結果の長方形の最小X座標とY座標（ &lt;code&gt;minX&lt;/code&gt; 、 &lt;code&gt;minY&lt;/code&gt; ）、その幅 &lt;code&gt;w&lt;/code&gt; 、およびその高さ &lt;code&gt;h&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="ebf284259891b966795d0320eaa89a9efa9f184a" translate="yes" xml:space="preserve">
          <source>The resulting region is then subsampled according to the factors given in &lt;a href=&quot;iioparam#setSourceSubsampling-int-int-int-int-&quot;&gt;&lt;code&gt;IIOParam.setSourceSubsampling&lt;/code&gt;&lt;/a&gt;. The first pixel, the number of pixels per row, and the number of rows all depend on the subsampling settings. Call the minimum X and Y coordinates of the resulting rectangle (&lt;code&gt;minX&lt;/code&gt;, &lt;code&gt;minY&lt;/code&gt;), its width &lt;code&gt;w&lt;/code&gt; and its height &lt;code&gt;h&lt;/code&gt;.</source>
          <target state="translated">結果の領域は、&lt;a href=&quot;iioparam#setSourceSubsampling-int-int-int-int-&quot;&gt; &lt;code&gt;IIOParam.setSourceSubsampling&lt;/code&gt; で&lt;/a&gt;指定された係数に従ってサブサンプリングされます。最初のピクセル、行ごとのピクセル数、および行数はすべて、サブサンプリング設定に依存します。結果の四角形（ &lt;code&gt;minX&lt;/code&gt; 、 &lt;code&gt;minY&lt;/code&gt; ）の最小のXおよびY座標、その幅 &lt;code&gt;w&lt;/code&gt; および高さ &lt;code&gt;h&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="a3bd1f6e9cb9121d8ce0c043ff1f95fd3d713991" translate="yes" xml:space="preserve">
          <source>The resulting schema contains components from the specified sources. The same result would be achieved if all these sources were imported, using appropriate values for schemaLocation and namespace, into a single schema document with a different targetNamespace and no components of its own, if the import elements were given in the same order as the sources. Section 4.2.3 of the XML Schema recommendation describes the options processors have in this regard. While a processor should be consistent in its treatment of JAXP schema sources and XML Schema imports, the behaviour between JAXP-compliant parsers may vary; in particular, parsers may choose to ignore all but the first &lt;code&gt;&amp;lt;import&amp;gt;&lt;/code&gt; for a given namespace, regardless of information provided in schemaLocation.</source>
          <target state="translated">結果のスキーマには、指定されたソースからのコンポーネントが含まれます。インポート要素がソースと同じ順序で指定されている場合、schemaLocationとnamespaceの適切な値を使用して、これらすべてのソースが異なるtargetNamespaceを持ち、独自のコンポーネントがない単一のスキーマドキュメントにインポートされた場合、同じ結果が得られます。 。 XMLスキーマ推奨のセクション4.2.3は、この点に関してプロセッサーが持つオプションについて説明しています。プロセッサはJAXPスキーマソースとXMLスキーマインポートの処理に一貫性がある必要がありますが、JAXP準拠のパーサー間の動作は異なる場合があります。特に、パーサーは、schemaLocationで提供される情報に関係なく、特定の名前空間の最初の &lt;code&gt;&amp;lt;import&amp;gt;&lt;/code&gt; を除くすべてを無視することを選択できます。</target>
        </trans-unit>
        <trans-unit id="d5fb5a6cf150b79c1760d1a0a2b75c334f95c52c" translate="yes" xml:space="preserve">
          <source>The resulting sequence may be empty if the &lt;code&gt;hasNext&lt;/code&gt; predicate does not hold on the seed value. Otherwise the first element will be the supplied &lt;code&gt;seed&lt;/code&gt; value, the next element (if present) will be the result of applying the &lt;code&gt;next&lt;/code&gt; function to the &lt;code&gt;seed&lt;/code&gt; value, and so on iteratively until the &lt;code&gt;hasNext&lt;/code&gt; predicate indicates that the stream should terminate.</source>
          <target state="translated">&lt;code&gt;hasNext&lt;/code&gt; 述部がシード値を保持していない場合、結果のシーケンスは空になる可能性があります。それ以外の場合、最初の要素は指定された &lt;code&gt;seed&lt;/code&gt; 値になり、次の要素（存在する場合）は &lt;code&gt;next&lt;/code&gt; 関数を &lt;code&gt;seed&lt;/code&gt; 値に適用した結果になります。 &lt;code&gt;hasNext&lt;/code&gt; 、hasNext述語がストリームの終了を示すまで繰り返します。</target>
        </trans-unit>
        <trans-unit id="59cf2006f3357a0978267c2dafbd40a8eb21f662" translate="yes" xml:space="preserve">
          <source>The resulting stream is sequential and ordered. All stream elements are non-null.</source>
          <target state="translated">結果として得られるストリームは、シーケンシャルで順序付けられています。すべてのストリーム要素は非 null です。</target>
        </trans-unit>
        <trans-unit id="fc6e671adbb8a182924f1ac35bcd56e979e41944" translate="yes" xml:space="preserve">
          <source>The resulting stream will contain an internal input buffer of at least &lt;code&gt;minBufferCap&lt;/code&gt; bytes. The stream's &lt;code&gt;read&lt;/code&gt; methods will, as needed, fill the buffer by reading bytes from the underlying channel; if the channel is in non-blocking mode when bytes are to be read then an &lt;a href=&quot;illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt; will be thrown. The resulting stream will not otherwise be buffered, and it will not support the &lt;a href=&quot;../../io/reader#mark(int)&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../io/reader#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; methods. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">結果のストリームには、少なくとも &lt;code&gt;minBufferCap&lt;/code&gt; バイトの内部入力バッファーが含まれます。ストリームの &lt;code&gt;read&lt;/code&gt; メソッドは、必要に応じて、基になるチャネルからバイトを読み取ることによってバッファーを満たします。バイトを読み取るときにチャネルが非ブロッキングモードの場合、&lt;a href=&quot;illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt;がスローされます。結果のストリームは他の方法ではバッファリングされず、&lt;a href=&quot;../../io/reader#mark(int)&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/reader#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;メソッドをサポートしません。ストリームを閉じると、チャネルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="7927acc85bf7485dc11e63b36c81bfd277412443" translate="yes" xml:space="preserve">
          <source>The resulting stream will contain an internal input buffer of at least &lt;code&gt;minBufferCap&lt;/code&gt; bytes. The stream's &lt;code&gt;read&lt;/code&gt; methods will, as needed, fill the buffer by reading bytes from the underlying channel; if the channel is in non-blocking mode when bytes are to be read then an &lt;a href=&quot;illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt; will be thrown. The resulting stream will not otherwise be buffered, and it will not support the &lt;a href=&quot;../../io/reader#mark-int-&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../io/reader#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; methods. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">結果のストリームには、少なくとも &lt;code&gt;minBufferCap&lt;/code&gt; バイトの内部入力バッファーが含まれます。ストリームの &lt;code&gt;read&lt;/code&gt; メソッドは、必要に応じて、基になるチャネルからバイトを読み取ることにより、バッファーを満たします。バイトが読み取られるときにチャネルが非ブロッキングモードの場合、&lt;a href=&quot;illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt;がスローされます。結果のストリームは、他の方法ではバッファリングされず、&lt;a href=&quot;../../io/reader#mark-int-&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/reader#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;メソッドをサポートしません。ストリームを閉じると、チャネルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="0d580035bd2b566457432a5e4d925677447d221a" translate="yes" xml:space="preserve">
          <source>The resulting stream will contain an internal output buffer of at least &lt;code&gt;minBufferCap&lt;/code&gt; bytes. The stream's &lt;code&gt;write&lt;/code&gt; methods will, as needed, flush the buffer by writing bytes to the underlying channel; if the channel is in non-blocking mode when bytes are to be written then an &lt;a href=&quot;illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt; will be thrown. The resulting stream will not otherwise be buffered. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">結果のストリームには、少なくとも &lt;code&gt;minBufferCap&lt;/code&gt; バイトの内部出力バッファーが含まれます。ストリームの &lt;code&gt;write&lt;/code&gt; メソッドは、必要に応じて、基になるチャネルにバイトを書き込むことにより、バッファーをフラッシュします。バイトが書き込まれるときにチャネルが非ブロッキングモードの場合、&lt;a href=&quot;illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt;がスローされます。結果のストリームは、他の方法ではバッファリングされません。ストリームを閉じると、チャネルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="b5709861225c7ba3b6865800d13497f86bd85df6" translate="yes" xml:space="preserve">
          <source>The resulting string</source>
          <target state="translated">結果として得られる文字列</target>
        </trans-unit>
        <trans-unit id="7323183be989f820aa6475e0d8caa99ce479a4fb" translate="yes" xml:space="preserve">
          <source>The resulting string may vary depending on the platform's default encoding.</source>
          <target state="translated">結果として得られる文字列は、プラットフォームのデフォルトのエンコーディングに応じて変化する可能性があります。</target>
        </trans-unit>
        <trans-unit id="3ec362e72494de8b3c1c872dc58fe0a8f261890f" translate="yes" xml:space="preserve">
          <source>The resulting string may vary depending on the platform's default encoding. Instead, use the decode(String,String) method to specify the encoding.</source>
          <target state="translated">結果として得られる文字列は、プラットフォームのデフォルトのエンコーディングによって異なる可能性があります。その代わりに、 decode(String,String)メソッドを使用してエンコーディングを指定します。</target>
        </trans-unit>
        <trans-unit id="b48d31f1fb8209f2d9205d68efebbcc7c9cbd82b" translate="yes" xml:space="preserve">
          <source>The resulting string may vary depending on the platform's default encoding. Instead, use the encode(String,String) method to specify the encoding.</source>
          <target state="translated">結果として得られる文字列は、プラットフォームのデフォルトのエンコーディングに依存して変化する可能性があります。その代わり、エンコーディングを指定するには encode(String,String)メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="0242c011bc55e1252b1407ded7fa2f64f005fdf7" translate="yes" xml:space="preserve">
          <source>The resulting value for these property will be stored in the LogManager properties, but &lt;code&gt;updateConfiguration&lt;/code&gt; will not parse or process their values.</source>
          <target state="translated">これらのプロパティの結果の値はLogManagerプロパティに格納されますが、 &lt;code&gt;updateConfiguration&lt;/code&gt; はそれらの値を解析または処理しません。</target>
        </trans-unit>
        <trans-unit id="74bf552fafa0986a788039357cfc15a0f6c622fd" translate="yes" xml:space="preserve">
          <source>The results of this constructor can be somewhat unpredictable and its use is generally not recommended; see the notes under the &lt;a href=&quot;#%3Cinit%3E(double)&quot;&gt;&lt;code&gt;BigDecimal(double)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">このコンストラクターの結果は多少予測できない可能性があり、通常、その使用は推奨されません。&lt;a href=&quot;#%3Cinit%3E(double)&quot;&gt; &lt;code&gt;BigDecimal(double)&lt;/code&gt; &lt;/a&gt;コンストラクターの下の注記を参照してください。</target>
        </trans-unit>
        <trans-unit id="65db06e467299c29537ab9336bf47bbbf5cdbd84" translate="yes" xml:space="preserve">
          <source>The results of this constructor can be somewhat unpredictable and its use is generally not recommended; see the notes under the &lt;a href=&quot;bigdecimal#BigDecimal-double-&quot;&gt;&lt;code&gt;BigDecimal(double)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">このコンストラクターの結果は多少予測不可能になる可能性があり、その使用は一般に推奨されません。&lt;a href=&quot;bigdecimal#BigDecimal-double-&quot;&gt; &lt;code&gt;BigDecimal(double)&lt;/code&gt; &lt;/a&gt;コンストラクターの下のメモを参照してください。</target>
        </trans-unit>
        <trans-unit id="cbb3bb7280c618deda0717f345ca0d0a3e5a617a" translate="yes" xml:space="preserve">
          <source>The results of this constructor can be somewhat unpredictable. One might assume that writing &lt;code&gt;new BigDecimal(0.1)&lt;/code&gt; in Java creates a &lt;code&gt;BigDecimal&lt;/code&gt; which is exactly equal to 0.1 (an unscaled value of 1, with a scale of 1), but it is actually equal to 0.1000000000000000055511151231257827021181583404541015625. This is because 0.1 cannot be represented exactly as a &lt;code&gt;double&lt;/code&gt; (or, for that matter, as a binary fraction of any finite length). Thus, the value that is being passed</source>
          <target state="translated">このコンストラクタの結果は、いくらか予測できない場合があります。Javaで &lt;code&gt;new BigDecimal(0.1)&lt;/code&gt; を書き込むと、正確に0.1（スケールなしの1、スケール1）に等しい &lt;code&gt;BigDecimal&lt;/code&gt; が作成されますが、実際には0.1000000000000000055511151231257827021181583404541015625に等しいと想定する人もいます。これは、0.1を &lt;code&gt;double&lt;/code&gt; として正確に表すことができないためです（つまり、有限の長さの2進数の小数として）。したがって、渡される値は</target>
        </trans-unit>
        <trans-unit id="a60e1eda493280339b2d07bf3ec089112f276d07" translate="yes" xml:space="preserve">
          <source>The results of this constructor can be somewhat unpredictable. One might assume that writing &lt;code&gt;new BigDecimal(0.1)&lt;/code&gt; in Java creates a &lt;code&gt;BigDecimal&lt;/code&gt; which is exactly equal to 0.1 (an unscaled value of 1, with a scale of 1), but it is actually equal to 0.1000000000000000055511151231257827021181583404541015625. This is because 0.1 cannot be represented exactly as a &lt;code&gt;double&lt;/code&gt; (or, for that matter, as a binary fraction of any finite length). Thus, the value that is being passed &lt;em&gt;in&lt;/em&gt; to the constructor is not exactly equal to 0.1, appearances notwithstanding.</source>
          <target state="translated">このコンストラクターの結果は、多少予測できない場合があります。Javaで &lt;code&gt;new BigDecimal(0.1)&lt;/code&gt; を書き込むと、0.1（スケールなしの値1、スケール1）に正確に等しい &lt;code&gt;BigDecimal&lt;/code&gt; が作成されると思われるかもしれませんが、実際には0.1000000000000000055511151231257827021181583404541015625に等しくなります。これは、0.1を正確に &lt;code&gt;double&lt;/code&gt; として（または、さらに言えば、任意の有限長の2進分数として）表すことができないためです。したがって、コンストラクターに渡さ&lt;em&gt;れる&lt;/em&gt;値は、外観にもかかわらず、0.1と正確に等しくはありません。</target>
        </trans-unit>
        <trans-unit id="93760e92a1fc812ab19b0ed28984ff85fa220322" translate="yes" xml:space="preserve">
          <source>The results only need to be adjusted if they are to be stored back into a destination buffer that holds data that is not premultiplied, using the following equations:</source>
          <target state="translated">結果を調整する必要があるのは、次の式を使用して、予積されていないデータを保持しているデスティネーションバッファに格納し直す場合だけです。</target>
        </trans-unit>
        <trans-unit id="1e7164f77665270f67e8f397eca3785e4e6b5066" translate="yes" xml:space="preserve">
          <source>The results should be the same as obtaining all the &lt;code&gt;PrintServices&lt;/code&gt; and querying each one individually on its support for the specified attributes and flavors, but the process can be more efficient by taking advantage of the capabilities of lookup services for the print services.</source>
          <target state="translated">結果は、すべての &lt;code&gt;PrintServices&lt;/code&gt; を取得し、指定された属性とフレーバーのサポートについてそれぞれを個別にクエリするのと同じであるはずですが、印刷サービスのルックアップサービスの機能を利用することで、プロセスをより効率的にすることができます。</target>
        </trans-unit>
        <trans-unit id="72b26f2b5e9e76c38d5206ceaa707fac001defe0" translate="yes" xml:space="preserve">
          <source>The results should be the same as obtaining all the PrintServices and querying each one individually on its support for the specified attributes and flavors, but the process can be more efficient by taking advantage of the capabilities of lookup services for the print services.</source>
          <target state="translated">結果は、すべてのPrintServicesを取得し、指定された属性やフレーバーに対するサポートについて個別に問い合わせを行うのと同じであるべきですが、プリントサービスのルックアップサービスの機能を活用することで、プロセスをより効率的にすることができます。</target>
        </trans-unit>
        <trans-unit id="e3cf3e1fd73a22414ddca5e3fb189a104cf44e85" translate="yes" xml:space="preserve">
          <source>The retransformation may change method bodies, the constant pool and attributes (unless explicitly prohibited). The retransformation must not add, remove or rename fields or methods, change the signatures of methods, or change inheritance. The retransformation must not change the &lt;code&gt;NestHost&lt;/code&gt; or &lt;code&gt;NestMembers&lt;/code&gt; attributes. These restrictions may be lifted in future versions. The class file bytes are not checked, verified and installed until after the transformations have been applied, if the resultant bytes are in error this method will throw an exception.</source>
          <target state="translated">再変換により、メソッド本体、定数プール、および属性が変更される場合があります（明示的に禁止されている場合を除く）。再変換では、フィールドまたはメソッドを追加、削除、名前変更したり、メソッドのシグネチャを変更したり、継承を変更したりしてはなりません。再変換によって、 &lt;code&gt;NestHost&lt;/code&gt; または &lt;code&gt;NestMembers&lt;/code&gt; 属性を変更してはなりません。これらの制限は、将来のバージョンで解除される可能性があります。クラスファイルのバイトは、変換が適用されるまでチェック、検証、およびインストールされません。結果のバイトにエラーがある場合、このメソッドは例外をスローします。</target>
        </trans-unit>
        <trans-unit id="2f2a2d456b1fe7f946cf6afcde99facfbb1b054d" translate="yes" xml:space="preserve">
          <source>The retransformation may change method bodies, the constant pool and attributes. The retransformation must not add, remove or rename fields or methods, change the signatures of methods, or change inheritance. These restrictions maybe be lifted in future versions. The class file bytes are not checked, verified and installed until after the transformations have been applied, if the resultant bytes are in error this method will throw an exception.</source>
          <target state="translated">再変換は、メソッド本体、定数プール、属性を変更することができます。再変換は、フィールドやメソッドの追加、削除、名前の変更、メソッドのシグネチャの変更、継承の変更を行ってはいけません。これらの制限は将来のバージョンで解除されるかもしれません。クラスファイルのバイトは、変換が適用されるまでチェック、検証、インストールされません。</target>
        </trans-unit>
        <trans-unit id="62fd7b2e815ada1d9ad838170833576f45e44251" translate="yes" xml:space="preserve">
          <source>The return of a &lt;code&gt;false&lt;/code&gt; value for a given access mode indicates that an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; is thrown on invocation of the corresponding access mode method.</source>
          <target state="translated">特定のアクセスモードに対して &lt;code&gt;false&lt;/code&gt; 値が返される場合は、対応するアクセスモードメソッドの呼び出し時に &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされることを示します。</target>
        </trans-unit>
        <trans-unit id="ca960eb615ad53bc0b3135b373d2036434995b22" translate="yes" xml:space="preserve">
          <source>The return type Rt is void, or the return type Ra is not void and is adaptable to Rt</source>
          <target state="translated">戻り値の型Rtがvoidであるか、または戻り値の型Raがvoidではなく、Rtに適応しています。</target>
        </trans-unit>
        <trans-unit id="0a90f1198e5deb5b2534122b1f369aa219e8f116" translate="yes" xml:space="preserve">
          <source>The return type in &lt;code&gt;concatType&lt;/code&gt; is assignable from &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;concatType&lt;/code&gt; の戻り値の型は&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;から割り当て可能です</target>
        </trans-unit>
        <trans-unit id="9fa2e82a8911ac326301fece552df2e83f13bdc2" translate="yes" xml:space="preserve">
          <source>The return type in &lt;code&gt;concatType&lt;/code&gt; is assignable from &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, and matches the return type of the returned &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;concatType&lt;/code&gt; の戻り値の型は、&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;から割り当て可能であり、返された&lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;の戻り値の型と一致します。</target>
        </trans-unit>
        <trans-unit id="08c7dcac11b655355c8f407e5172d1bcf0c4208a" translate="yes" xml:space="preserve">
          <source>The return type is specified by a &lt;a href=&quot;../namespace/qname&quot;&gt;&lt;code&gt;QName&lt;/code&gt;&lt;/a&gt; parameter in method call used to evaluate the expression, which is either a call to &lt;code&gt;XPathExpression.evalute(...)&lt;/code&gt; or &lt;code&gt;XPath.evaluate(...)&lt;/code&gt; methods.</source>
          <target state="translated">戻り値の型は、式の評価に使用されるメソッド呼び出しの&lt;a href=&quot;../namespace/qname&quot;&gt; &lt;code&gt;QName&lt;/code&gt; &lt;/a&gt;パラメーターによって指定されます。これは、 &lt;code&gt;XPathExpression.evalute(...)&lt;/code&gt; または &lt;code&gt;XPath.evaluate(...)&lt;/code&gt; メソッドの呼び出しです。</target>
        </trans-unit>
        <trans-unit id="92c09d015f75e8bee39bac035a68343e43b9f9d8" translate="yes" xml:space="preserve">
          <source>The return type of the filter replaces the return type of the target in the resulting adapted method handle. The argument type of the filter (if any) must be identical to the return type of the target.</source>
          <target state="translated">フィルタの戻り値の型は,結果として適応されたメソッドハンドル内のターゲットの戻り値の型に置き換わります。フィルタの引数の型 (もしあれば)は,ターゲットの戻り値の型と同じでなければなりません.</target>
        </trans-unit>
        <trans-unit id="c6a026e7ef017e49a86ae81d83b570e4f3b988ce" translate="yes" xml:space="preserve">
          <source>The return value from &lt;code&gt;eval(Reader, ScriptContext)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;eval(Reader, ScriptContext)&lt;/code&gt; からの戻り値</target>
        </trans-unit>
        <trans-unit id="d250b67419c015be49448c5b2b4064b04039b13f" translate="yes" xml:space="preserve">
          <source>The return value from &lt;code&gt;eval(String, ScriptContext)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;eval(String, ScriptContext)&lt;/code&gt; からの戻り値</target>
        </trans-unit>
        <trans-unit id="18c586324069b76d67cca48a59dcffb8f32f65de" translate="yes" xml:space="preserve">
          <source>The return value from the script execution</source>
          <target state="translated">スクリプト実行時の戻り値</target>
        </trans-unit>
        <trans-unit id="3e87c8c10ff310371a9f3d96d03e6c0bad31b37f" translate="yes" xml:space="preserve">
          <source>The return value here is a hint, it is ultimately up to the look and feel to honor the return value in some meaningful way.</source>
          <target state="translated">ここでの戻り値はヒントであり、最終的には何らかの意味のある方法で戻り値を尊重するかどうかは見た目にかかっています。</target>
        </trans-unit>
        <trans-unit id="339d740994f90a652ddcc5a1527a27502fd12e3d" translate="yes" xml:space="preserve">
          <source>The return value here is a hint, it is ultimately up to the look and feel to honor the return value in some meaningful way. For example, a look and feel may wish to render each &lt;code&gt;AbstractColorChooserPanel&lt;/code&gt; in a &lt;code&gt;JTabbedPane&lt;/code&gt;, and further use this return value to underline a character in the &lt;code&gt;getDisplayName&lt;/code&gt;.</source>
          <target state="translated">ここでの戻り値はヒントです。意味のある方法で戻り値を尊重するかどうかは、最終的にはルックアンドフィール次第です。たとえば、ルックアンドフィールでは、各 &lt;code&gt;AbstractColorChooserPanel&lt;/code&gt; を &lt;code&gt;JTabbedPane&lt;/code&gt; でレンダリングし、さらにこの戻り値を使用して &lt;code&gt;getDisplayName&lt;/code&gt; の文字に下線を付けることができます。</target>
        </trans-unit>
        <trans-unit id="d7e61cce8a603e1ed7dd41104b64452e72191f66" translate="yes" xml:space="preserve">
          <source>The return value indicates whether the deadline has elapsed, which can be used as follows:</source>
          <target state="translated">戻り値は、期限が経過したかどうかを示すもので、以下のように使用することができます。</target>
        </trans-unit>
        <trans-unit id="7b117098b5c546c14491ff8cf89569aadc8a2ea4" translate="yes" xml:space="preserve">
          <source>The return value is a constant for the lifetime of the implementing instance</source>
          <target state="translated">戻り値は、実装インスタンスの有効期間中の定数です。</target>
        </trans-unit>
        <trans-unit id="ef240b9287f693729ee8736cf3b50be17225bd35" translate="yes" xml:space="preserve">
          <source>The return value is an approximation of the column number in the document entity or external parsed entity where the markup that triggered the event appears.</source>
          <target state="translated">戻り値は、イベントのトリガーとなったマークアップが表示されるドキュメントエンティティまたは外部解析されたエンティティのカラム番号の近似値です。</target>
        </trans-unit>
        <trans-unit id="1b239c60495bf8042c7d3c6cd2a1059554bfa5e2" translate="yes" xml:space="preserve">
          <source>The return value is an approximation of the column number in the document entity or external parsed entity where the markup triggering the event appears.</source>
          <target state="translated">戻り値は、イベントのトリガーとなるマークアップが表示されているドキュメントエンティティまたは外部解析されたエンティティのカラム番号の近似値です。</target>
        </trans-unit>
        <trans-unit id="8ffa6dc5a63793e0cd89ca59a2500e0682da449a" translate="yes" xml:space="preserve">
          <source>The return value is an approximation of the line number in the document entity or external parsed entity where the markup that triggered the event appears.</source>
          <target state="translated">戻り値は、イベントのトリガーとなったマークアップが表示されるドキュメントエンティティまたは外部解析されたエンティティの行番号の近似値です。</target>
        </trans-unit>
        <trans-unit id="df14b7af1f8f1168f052f357a4d4d570216b0e96" translate="yes" xml:space="preserve">
          <source>The return value is an approximation of the line number in the document entity or external parsed entity where the markup triggering the event appears.</source>
          <target state="translated">戻り値は、イベントのトリガーとなるマークアップが表示されているドキュメントエンティティまたは外部解析されたエンティティの行番号の近似値です。</target>
        </trans-unit>
        <trans-unit id="57e62b909f604f540851de4e9220c29855a3c379" translate="yes" xml:space="preserve">
          <source>The return value is not intended to take into account the current size and position of &lt;code&gt;component2&lt;/code&gt; or &lt;code&gt;component1&lt;/code&gt;. The return value may take into consideration various properties of the components. For example, the space may vary based on font size, or the preferred size of the component.</source>
          <target state="translated">戻り値は、 &lt;code&gt;component2&lt;/code&gt; または &lt;code&gt;component1&lt;/code&gt; の現在のサイズと位置を考慮に入れることを意図したものではありません。戻り値は、コンポーネントのさまざまなプロパティを考慮に入れる場合があります。たとえば、スペースはフォントサイズやコンポーネントの推奨サイズによって異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="6862bdbf23c8a75ce946b35c34fe4f5784a92cab" translate="yes" xml:space="preserve">
          <source>The return value is reassigned to the variable &lt;code&gt;y&lt;/code&gt;, because a new array will be allocated and returned if the collection &lt;code&gt;x&lt;/code&gt; has too many elements to fit into the existing array &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">コレクション &lt;code&gt;x&lt;/code&gt; の要素が多すぎて既存の配列 &lt;code&gt;y&lt;/code&gt; に収まらない場合は、新しい配列が割り当てられて返されるため、戻り値は変数 &lt;code&gt;y&lt;/code&gt; に再割り当てされます。</target>
        </trans-unit>
        <trans-unit id="cf5abc13dd7f11ea0e437763bb82152d9c9c44c6" translate="yes" xml:space="preserve">
          <source>The return value is the public identifier of the document entity or of the external parsed entity in which the markup that triggered the event appears.</source>
          <target state="translated">戻り値は、イベントのトリガーとなったマークアップが表示されているドキュメントエンティティまたは外部解析されたエンティティの公開識別子です。</target>
        </trans-unit>
        <trans-unit id="4eab4f2d235e9eb1c2ee1b4d56bb6a0656d5046f" translate="yes" xml:space="preserve">
          <source>The return value is the public identifier of the document entity or of the external parsed entity in which the markup triggering the event appears.</source>
          <target state="translated">戻り値は、イベントのトリガーとなるマークアップが表示されているドキュメントエンティティまたは外部解析されたエンティティの公開識別子です。</target>
        </trans-unit>
        <trans-unit id="79298db5b9ecefcf08a93ac7001f8247745f88be" translate="yes" xml:space="preserve">
          <source>The return value is the same as the return value for getType(int).</source>
          <target state="translated">戻り値はgetType(int)の戻り値と同じです。</target>
        </trans-unit>
        <trans-unit id="ad228ac22a92c30a5a17bbe1cc5511d3e6d6efe6" translate="yes" xml:space="preserve">
          <source>The return value is the same as the return value for getValue(int).</source>
          <target state="translated">戻り値はgetValue(int)の戻り値と同じです。</target>
        </trans-unit>
        <trans-unit id="305fb729cefceff62bd86eeab21b84fdfc657b36" translate="yes" xml:space="preserve">
          <source>The return value is the system identifier of the document entity or of the external parsed entity in which the markup that triggered the event appears.</source>
          <target state="translated">戻り値は、イベントのトリガーとなったマークアップが表示されているドキュメントエンティティまたは外部解析されたエンティティのシステム識別子です。</target>
        </trans-unit>
        <trans-unit id="157a1ea5a78e25b7b7edb134a522fe0ad73f0731" translate="yes" xml:space="preserve">
          <source>The return value is the system identifier of the document entity or of the external parsed entity in which the markup triggering the event appears.</source>
          <target state="translated">戻り値は、イベントのトリガーとなるマークアップが表示されているドキュメントエンティティまたは外部解析されたエンティティのシステム識別子です。</target>
        </trans-unit>
        <trans-unit id="d5e42cb5bf57e4282c3a4431545a3164ae31c157" translate="yes" xml:space="preserve">
          <source>The return value of &lt;code&gt;dispatchEvent&lt;/code&gt; indicates whether any of the listeners which handled the event called &lt;code&gt;preventDefault&lt;/code&gt;. If &lt;code&gt;preventDefault&lt;/code&gt; was called the value is false, else the value is true.</source>
          <target state="translated">&lt;code&gt;dispatchEvent&lt;/code&gt; の戻り値は、 &lt;code&gt;preventDefault&lt;/code&gt; と呼ばれるイベントを処理したリスナーがあるかどうかを示します。場合 &lt;code&gt;preventDefault&lt;/code&gt; 値がfalseであると呼ばれていた、それ以外の値はtrueです。</target>
        </trans-unit>
        <trans-unit id="4219f41ab6bb669a3af2e1f70f85e439bc1d24f1" translate="yes" xml:space="preserve">
          <source>The return value of this method is the string form of the value of a Multipurpose Internet Mail Extension (MIME) content type as defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;&lt;i&gt;RFC 2045: Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies&lt;/i&gt;&lt;/a&gt;. The string is guaranteed to be parsable according to the grammar in the RFC.</source>
          <target state="translated">このメソッドの戻り値は、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;&lt;i&gt;RFC 2045：多目的インターネットメール拡張（MIME）パート1：インターネットメッセージ本文の形式で&lt;/i&gt;&lt;/a&gt;定義され&lt;i&gt;て&lt;/i&gt;いる多目的インターネットメール拡張（MIME）コンテンツタイプの値の文字列形式です。文字列は、RFCの文法に従って解析可能であることが保証されています。</target>
        </trans-unit>
        <trans-unit id="59d6884c96ab13575074a3fd88c171169562433f" translate="yes" xml:space="preserve">
          <source>The return value will always meet this requirement. A request to read a number of bytes representing a non-integral number of sample frames cannot be fulfilled and may result in an IllegalArgumentException.</source>
          <target state="translated">戻り値は常にこの要件を満たします。非積分数のサンプルフレームを表すバイト数を読み取る要求を満たすことはできず、IllegalArgumentExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="bab3d5729e7a670151bb1fa0f6d52b4a1a2b1601" translate="yes" xml:space="preserve">
          <source>The return value will always meet this requirement. A request to write a number of bytes representing a non-integral number of sample frames cannot be fulfilled and may result in an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">戻り値は常にこの要件を満たします。非整数のサンプルフレームを表すバイト数を書き込むリクエストは実行できず、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="fb820cab50d0998d1ebde65dd99e143bc7773114" translate="yes" xml:space="preserve">
          <source>The return value will be a PageFormat equivalent to the selections in the PrintRequestAttributeSet. If the user cancels the dialog, the attributes will not reflect any changes made by the user, and the return value will be null.</source>
          <target state="translated">戻り値は、PrintRequestAttributeSet内の選択内容と同等のPageFormatとなります。ユーザーがダイアログをキャンセルした場合、属性にはユーザーによる変更は反映されず、戻り値はNULLとなります。</target>
        </trans-unit>
        <trans-unit id="7a1cb10291ece8ab0cb0d59c17a95c5985d00fc8" translate="yes" xml:space="preserve">
          <source>The return value will be one of &lt;a href=&quot;#INITIATE_ONLY&quot;&gt;&lt;code&gt;INITIATE_ONLY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ACCEPT_ONLY&quot;&gt;&lt;code&gt;ACCEPT_ONLY&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#INITIATE_AND_ACCEPT&quot;&gt;&lt;code&gt;INITIATE_AND_ACCEPT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">戻り値は、&lt;a href=&quot;#INITIATE_ONLY&quot;&gt; &lt;code&gt;INITIATE_ONLY&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ACCEPT_ONLY&quot;&gt; &lt;code&gt;ACCEPT_ONLY&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#INITIATE_AND_ACCEPT&quot;&gt; &lt;code&gt;INITIATE_AND_ACCEPT&lt;/code&gt; の&lt;/a&gt;いずれかになります。</target>
        </trans-unit>
        <trans-unit id="f6bfc96df054b19c8bae5f8772d6621a71f8e532" translate="yes" xml:space="preserve">
          <source>The return values of navigation methods may be ambiguous in implementations that permit &lt;code&gt;null&lt;/code&gt; elements. However, even in this case the result can be disambiguated by checking &lt;code&gt;contains(null)&lt;/code&gt;. To avoid such issues, implementations of this interface are encouraged to &lt;em&gt;not&lt;/em&gt; permit insertion of &lt;code&gt;null&lt;/code&gt; elements. (Note that sorted sets of &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; elements intrinsically do not permit &lt;code&gt;null&lt;/code&gt;.)</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 要素を許可する実装では、ナビゲーションメソッドの戻り値があいまいになる場合があります。ただし、この場合でも、 &lt;code&gt;contains(null)&lt;/code&gt; をチェックすることで結果を明確にすることができます。このような問題を回避するには、このインターフェイスの実装で &lt;code&gt;null&lt;/code&gt; 要素の挿入を許可し&lt;em&gt;ない&lt;/em&gt;ことをお勧めします。（ソート&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;要素のセットは、本質的に &lt;code&gt;null&lt;/code&gt; を許可しないことに注意してください。）</target>
        </trans-unit>
        <trans-unit id="c185003fa3929e25d997e006634131e9b1d47337" translate="yes" xml:space="preserve">
          <source>The returned &lt;a href=&quot;../../text/format&quot;&gt;&lt;code&gt;Format&lt;/code&gt;&lt;/a&gt; instance will format any &lt;a href=&quot;../temporal/temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt; and parses to a resolved &lt;a href=&quot;../temporal/temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返された&lt;a href=&quot;../../text/format&quot;&gt; &lt;code&gt;Format&lt;/code&gt; &lt;/a&gt;インスタンスは、&lt;a href=&quot;../temporal/temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; &lt;/a&gt;をフォーマットし、解決された&lt;a href=&quot;../temporal/temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; に&lt;/a&gt;解析します。</target>
        </trans-unit>
        <trans-unit id="75a801763a5d854e8d95b623a5d3a94dcbfe58f1" translate="yes" xml:space="preserve">
          <source>The returned &lt;a href=&quot;../../text/format&quot;&gt;&lt;code&gt;Format&lt;/code&gt;&lt;/a&gt; instance will format any &lt;a href=&quot;../temporal/temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt; and parses to the type specified. The type must be one that is supported by &lt;a href=&quot;#parse(java.lang.CharSequence)&quot;&gt;&lt;code&gt;parse(java.lang.CharSequence)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返された&lt;a href=&quot;../../text/format&quot;&gt; &lt;code&gt;Format&lt;/code&gt; &lt;/a&gt;インスタンスは、&lt;a href=&quot;../temporal/temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; &lt;/a&gt;をフォーマットし、指定されたタイプに解析します。タイプは、&lt;a href=&quot;#parse(java.lang.CharSequence)&quot;&gt; &lt;code&gt;parse(java.lang.CharSequence)&lt;/code&gt; で&lt;/a&gt;サポートされているタイプである必要があります。</target>
        </trans-unit>
        <trans-unit id="b4d4661665beda529a4501a1035be4de025066b7" translate="yes" xml:space="preserve">
          <source>The returned &lt;a href=&quot;../../text/format&quot;&gt;&lt;code&gt;Format&lt;/code&gt;&lt;/a&gt; instance will format any &lt;a href=&quot;../temporal/temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt; and parses to the type specified. The type must be one that is supported by &lt;a href=&quot;datetimeformatter#parse-java.lang.CharSequence-&quot;&gt;&lt;code&gt;parse(java.lang.CharSequence)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返された&lt;a href=&quot;../../text/format&quot;&gt; &lt;code&gt;Format&lt;/code&gt; &lt;/a&gt;インスタンスは、&lt;a href=&quot;../temporal/temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; &lt;/a&gt;をフォーマットし、指定されたタイプに解析します。タイプは、&lt;a href=&quot;datetimeformatter#parse-java.lang.CharSequence-&quot;&gt; &lt;code&gt;parse(java.lang.CharSequence)&lt;/code&gt; で&lt;/a&gt;サポートされているタイプである必要があります。</target>
        </trans-unit>
        <trans-unit id="6130888b3d4f3e79271a0f0fd2b1121269c73460" translate="yes" xml:space="preserve">
          <source>The returned &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; instance supports the same usages as do the &lt;a href=&quot;../../../lang/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; monitor methods (&lt;a href=&quot;../../../lang/object#wait()&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../lang/object#notify()&quot;&gt;&lt;code&gt;notify&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../../lang/object#notifyAll()&quot;&gt;&lt;code&gt;notifyAll&lt;/code&gt;&lt;/a&gt;) when used with the built-in monitor lock.</source>
          <target state="translated">返される&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;インスタンスは、組み込みのモニターロックとともに使用した場合、&lt;a href=&quot;../../../lang/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;モニターメソッド（&lt;a href=&quot;../../../lang/object#wait()&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../lang/object#notify()&quot;&gt; &lt;code&gt;notify&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../lang/object#notifyAll()&quot;&gt; &lt;code&gt;notifyAll&lt;/code&gt; &lt;/a&gt;）と同じ使用法をサポートします。</target>
        </trans-unit>
        <trans-unit id="5e5dd44d28dfbc6bc47cbc61187f37930a55da27" translate="yes" xml:space="preserve">
          <source>The returned &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; instance supports the same usages as do the &lt;a href=&quot;../../../lang/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; monitor methods (&lt;a href=&quot;../../../lang/object#wait--&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../lang/object#notify--&quot;&gt;&lt;code&gt;notify&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../../lang/object#notifyAll--&quot;&gt;&lt;code&gt;notifyAll&lt;/code&gt;&lt;/a&gt;) when used with the built-in monitor lock.</source>
          <target state="translated">返された&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;インスタンスは、組み込みのモニターロックで使用される場合、&lt;a href=&quot;../../../lang/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;モニターメソッド（&lt;a href=&quot;../../../lang/object#wait--&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../lang/object#notify--&quot;&gt; &lt;code&gt;notify&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../../../lang/object#notifyAll--&quot;&gt; &lt;code&gt;notifyAll&lt;/code&gt; &lt;/a&gt;）と同じ使用法をサポートします。</target>
        </trans-unit>
        <trans-unit id="903fab1dd6031a929646339ff8331ce972297982" translate="yes" xml:space="preserve">
          <source>The returned &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; object assumes that if documents refer to the same URL in the schema location hints, they will always resolve to the same schema document. This asusmption allows implementations to reuse parsed results of schema documents so that multiple validations against the same schema will run faster.</source>
          <target state="translated">返される&lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;オブジェクトは、ドキュメントがスキーマロケーションヒントで同じURLを参照している場合、それらは常に同じスキーマドキュメントに解決されると想定しています。この仮定により、実装はスキーマドキュメントの解析結果を再利用できるため、同じスキーマに対する複数の検証がより高速に実行されます。</target>
        </trans-unit>
        <trans-unit id="1bdefa0087b8327c86ac80a033c0a312632ffe64" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;ActionMap&lt;/code&gt; contains &lt;code&gt;Actions&lt;/code&gt; that embody the ability to render an auditory cue. These auditory cues map onto user and system activities that may be useful for an end user to know about (such as a dialog box appearing).</source>
          <target state="translated">返される &lt;code&gt;ActionMap&lt;/code&gt; には、聴覚キューをレンダリングする機能を具体化する &lt;code&gt;Actions&lt;/code&gt; が含まれています。これらの聴覚的手がかりは、エンドユーザーが知るのに役立つ可能性のあるユーザーおよびシステムのアクティビティ（ダイアログボックスの表示など）にマッピングされます。</target>
        </trans-unit>
        <trans-unit id="6e7d12400bfb4401dc47af91d14c791db925e333" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If it is not required that results are inserted into the &lt;code&gt;Map&lt;/code&gt; in encounter order, using &lt;a href=&quot;#toConcurrentMap(java.util.function.Function,java.util.function.Function)&quot;&gt;&lt;code&gt;toConcurrentMap(Function, Function)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 機能は、あるマップから別のマップにキーをマージすることによって動作しますが、これはコストのかかる操作になる可能性があります。結果を遭遇順に &lt;code&gt;Map&lt;/code&gt; に挿入する必要がない場合は、&lt;a href=&quot;#toConcurrentMap(java.util.function.Function,java.util.function.Function)&quot;&gt; &lt;code&gt;toConcurrentMap(Function, Function)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="1bc1730d912a2f1b769dce259c025673a7214e32" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If it is not required that results are inserted into the &lt;code&gt;Map&lt;/code&gt; in encounter order, using &lt;a href=&quot;collectors#toConcurrentMap-java.util.function.Function-java.util.function.Function-&quot;&gt;&lt;code&gt;toConcurrentMap(Function, Function)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 関数は1つのマップから別のマップにキーをマージすることによって動作しますが、これは負荷の高い操作になる可能性があります。結果が遭遇順に &lt;code&gt;Map&lt;/code&gt; に挿入される必要がない場合は、&lt;a href=&quot;collectors#toConcurrentMap-java.util.function.Function-java.util.function.Function-&quot;&gt; &lt;code&gt;toConcurrentMap(Function, Function)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="455cc87f0f7a7b7d3bd10e8e76906fe2717f5568" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If it is not required that results are merged into the &lt;code&gt;Map&lt;/code&gt; in encounter order, using &lt;a href=&quot;#toConcurrentMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)&quot;&gt;&lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 機能は、あるマップから別のマップにキーをマージすることによって動作しますが、これはコストのかかる操作になる可能性があります。結果を遭遇順に &lt;code&gt;Map&lt;/code&gt; にマージする必要がない場合は、&lt;a href=&quot;#toConcurrentMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)&quot;&gt; &lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="dce3945a38794bedbeea1ec896b627af457c67f5" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If it is not required that results are merged into the &lt;code&gt;Map&lt;/code&gt; in encounter order, using &lt;a href=&quot;#toConcurrentMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator,java.util.function.Supplier)&quot;&gt;&lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator, Supplier)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 機能は、あるマップから別のマップにキーをマージすることによって動作しますが、これはコストのかかる操作になる可能性があります。結果を遭遇順に &lt;code&gt;Map&lt;/code&gt; にマージする必要がない場合は、&lt;a href=&quot;#toConcurrentMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator,java.util.function.Supplier)&quot;&gt; &lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator, Supplier)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="5f7e9e01d3dfa3cb980421cf908b620f48d72c26" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If it is not required that results are merged into the &lt;code&gt;Map&lt;/code&gt; in encounter order, using &lt;a href=&quot;collectors#toConcurrentMap-java.util.function.Function-java.util.function.Function-java.util.function.BinaryOperator-&quot;&gt;&lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 関数は1つのマップから別のマップにキーをマージすることによって動作しますが、これは負荷の高い操作になる可能性があります。結果が遭遇順に &lt;code&gt;Map&lt;/code&gt; にマージされる必要がない場合、&lt;a href=&quot;collectors#toConcurrentMap-java.util.function.Function-java.util.function.Function-java.util.function.BinaryOperator-&quot;&gt; &lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="43da3d7de62b7245f65cab710cfb2f032f89515e" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If it is not required that results are merged into the &lt;code&gt;Map&lt;/code&gt; in encounter order, using &lt;a href=&quot;collectors#toConcurrentMap-java.util.function.Function-java.util.function.Function-java.util.function.BinaryOperator-java.util.function.Supplier-&quot;&gt;&lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator, Supplier)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 関数は1つのマップから別のマップにキーをマージすることによって動作しますが、これは負荷の高い操作になる可能性があります。結果が &lt;code&gt;Map&lt;/code&gt; にマージされる必要がない場合は、&lt;a href=&quot;collectors#toConcurrentMap-java.util.function.Function-java.util.function.Function-java.util.function.BinaryOperator-java.util.function.Supplier-&quot;&gt; &lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator, Supplier)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="57c6b99569016327c62bebb7ad77957c25e8eed6" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If preservation of the order in which elements appear in the resulting &lt;code&gt;Map&lt;/code&gt; collector is not required, using &lt;a href=&quot;#groupingByConcurrent(java.util.function.Function)&quot;&gt;&lt;code&gt;groupingByConcurrent(Function)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 機能は、あるマップから別のマップにキーをマージすることによって動作しますが、これはコストのかかる操作になる可能性があります。結果の &lt;code&gt;Map&lt;/code&gt; コレクターに要素が表示される順序を保持する必要がない場合は、&lt;a href=&quot;#groupingByConcurrent(java.util.function.Function)&quot;&gt; &lt;code&gt;groupingByConcurrent(Function)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="f0cbd679a1ec8205268de13a97a9624457c2a964" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If preservation of the order in which elements appear in the resulting &lt;code&gt;Map&lt;/code&gt; collector is not required, using &lt;a href=&quot;collectors#groupingByConcurrent-java.util.function.Function-&quot;&gt;&lt;code&gt;groupingByConcurrent(Function)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 関数は1つのマップから別のマップにキーをマージすることによって動作しますが、これは負荷の高い操作になる可能性があります。結果の &lt;code&gt;Map&lt;/code&gt; コレクターに表示される要素の順序を維持する必要がない場合は、&lt;a href=&quot;collectors#groupingByConcurrent-java.util.function.Function-&quot;&gt; &lt;code&gt;groupingByConcurrent(Function)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="0a6ca58a5af4a56d396c6a6e708ba41db7d674a1" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If preservation of the order in which elements are presented to the downstream collector is not required, using &lt;a href=&quot;#groupingByConcurrent(java.util.function.Function,java.util.function.Supplier,java.util.stream.Collector)&quot;&gt;&lt;code&gt;groupingByConcurrent(Function, Supplier, Collector)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 機能は、あるマップから別のマップにキーをマージすることによって動作しますが、これはコストのかかる操作になる可能性があります。要素がダウンストリームコレクターに提示される順序を保持する必要がない場合は、&lt;a href=&quot;#groupingByConcurrent(java.util.function.Function,java.util.function.Supplier,java.util.stream.Collector)&quot;&gt; &lt;code&gt;groupingByConcurrent(Function, Supplier, Collector)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="45a9fc109957eb2a04aabfd7fb897648b56499d3" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If preservation of the order in which elements are presented to the downstream collector is not required, using &lt;a href=&quot;#groupingByConcurrent(java.util.function.Function,java.util.stream.Collector)&quot;&gt;&lt;code&gt;groupingByConcurrent(Function, Collector)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 機能は、あるマップから別のマップにキーをマージすることによって動作しますが、これはコストのかかる操作になる可能性があります。要素がダウンストリームコレクターに提示される順序を保持する必要がない場合は、&lt;a href=&quot;#groupingByConcurrent(java.util.function.Function,java.util.stream.Collector)&quot;&gt; &lt;code&gt;groupingByConcurrent(Function, Collector)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="7ac6dd6552e8a0aeddbedc87ca5a64e77ba22719" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If preservation of the order in which elements are presented to the downstream collector is not required, using &lt;a href=&quot;collectors#groupingByConcurrent-java.util.function.Function-java.util.function.Supplier-java.util.stream.Collector-&quot;&gt;&lt;code&gt;groupingByConcurrent(Function, Supplier, Collector)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 関数は1つのマップから別のマップにキーをマージすることによって動作しますが、これは負荷の高い操作になる可能性があります。要素がダウンストリームコレクターに提示される順序を維持する必要がない場合は、&lt;a href=&quot;collectors#groupingByConcurrent-java.util.function.Function-java.util.function.Supplier-java.util.stream.Collector-&quot;&gt; &lt;code&gt;groupingByConcurrent(Function, Supplier, Collector)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="dbaf8d671c4e4b5aa32fa0703a9603589a87b608" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If preservation of the order in which elements are presented to the downstream collector is not required, using &lt;a href=&quot;collectors#groupingByConcurrent-java.util.function.Function-java.util.stream.Collector-&quot;&gt;&lt;code&gt;groupingByConcurrent(Function, Collector)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 関数は1つのマップから別のマップにキーをマージすることによって動作しますが、これは負荷の高い操作になる可能性があります。要素がダウンストリームコレクターに提示される順序を維持する必要がない場合は、&lt;a href=&quot;collectors#groupingByConcurrent-java.util.function.Function-java.util.stream.Collector-&quot;&gt; &lt;code&gt;groupingByConcurrent(Function, Collector)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="592e2671cbce0f06db4108a4c9a20ac5ff26eb80" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;DataFlavor&lt;/code&gt; will have the following characteristics:</source>
          <target state="translated">返される &lt;code&gt;DataFlavor&lt;/code&gt; には、次の特性があります。</target>
        </trans-unit>
        <trans-unit id="641ba86405285a860416ed87151b9ce572461645" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;HttpRequest&lt;/code&gt; may not be the initiating request provided when &lt;a href=&quot;httpclient#send(java.net.http.HttpRequest,java.net.http.HttpResponse.BodyHandler)&quot;&gt;sending&lt;/a&gt;. For example, if the initiating request was redirected, then the request returned by this method will have the redirected URI, which will be different from the initiating request URI.</source>
          <target state="translated">返される &lt;code&gt;HttpRequest&lt;/code&gt; は、を&lt;a href=&quot;httpclient#send(java.net.http.HttpRequest,java.net.http.HttpResponse.BodyHandler)&quot;&gt;送信&lt;/a&gt;するときに提供される開始要求ではない場合があります。たとえば、開始リクエストがリダイレクトされた場合、このメソッドによって返されるリクエストにはリダイレクトされたURIが含まれます。これは、開始リクエストURIとは異なります。</target>
        </trans-unit>
        <trans-unit id="b59f34697c17be29d15a67dae37118e8cb592e3b" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Map&lt;/code&gt; always contains mappings for both &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;true&lt;/code&gt; keys. There are no guarantees on the type, mutability, serializability, or thread-safety of the &lt;code&gt;Map&lt;/code&gt; returned.</source>
          <target state="translated">返される &lt;code&gt;Map&lt;/code&gt; 常に &lt;code&gt;false&lt;/code&gt; キーと &lt;code&gt;true&lt;/code&gt; キーの両方のマッピングが含まれています。返される &lt;code&gt;Map&lt;/code&gt; のタイプ、可変性、直列化可能性、またはスレッドセーフについての保証はありません。</target>
        </trans-unit>
        <trans-unit id="d858b7e7a502a697faadc883094465ade5ac1148" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Printable&lt;/code&gt; can be printed on any thread.</source>
          <target state="translated">返された &lt;code&gt;Printable&lt;/code&gt; は、任意のスレッドに印刷できます。</target>
        </trans-unit>
        <trans-unit id="3084584bbfa81c3dd9e5d128a1532aa3f6cd7c81" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Printable&lt;/code&gt; shares the &lt;code&gt;document&lt;/code&gt; with this &lt;code&gt;JTextComponent&lt;/code&gt;. It is the responsibility of the developer to ensure that the &lt;code&gt;document&lt;/code&gt; is not mutated while this &lt;code&gt;Printable&lt;/code&gt; is used. Printing behavior is undefined when the &lt;code&gt;document&lt;/code&gt; is mutated during printing.</source>
          <target state="translated">返された &lt;code&gt;Printable&lt;/code&gt; は、 &lt;code&gt;document&lt;/code&gt; をこの &lt;code&gt;JTextComponent&lt;/code&gt; と共有します。この &lt;code&gt;Printable&lt;/code&gt; の使用中に &lt;code&gt;document&lt;/code&gt; が変更されないようにするのは、開発者の責任です。印刷中に &lt;code&gt;document&lt;/code&gt; が変更された場合の印刷動作は定義されていません。</target>
        </trans-unit>
        <trans-unit id="22281dd911bd249a01a74dd9023a085760102f82" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Printable&lt;/code&gt; when printed, formats the document content appropriately for the page size. For correct line wrapping the &lt;code&gt;imageable width&lt;/code&gt; of all pages must be the same. See &lt;a href=&quot;../../../java/awt/print/pageformat#getImageableWidth()&quot;&gt;&lt;code&gt;PageFormat.getImageableWidth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Printable&lt;/code&gt; 時に返されるPrintableは、ドキュメントのコンテンツをページサイズに合わせて適切にフォーマットします。正しい行の折り返しを行うには、すべてのページの &lt;code&gt;imageable width&lt;/code&gt; が同じである必要があります。&lt;a href=&quot;../../../java/awt/print/pageformat#getImageableWidth()&quot;&gt; &lt;code&gt;PageFormat.getImageableWidth()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="25ddc39787057b4a5d98836cd1d91a3011cd8509" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Set&lt;/code&gt; is backed by this Subject's internal &lt;code&gt;Principal&lt;/code&gt;&lt;code&gt;Set&lt;/code&gt;. Any modification to the returned &lt;code&gt;Set&lt;/code&gt; affects the internal &lt;code&gt;Principal&lt;/code&gt;&lt;code&gt;Set&lt;/code&gt; as well.</source>
          <target state="translated">返された &lt;code&gt;Set&lt;/code&gt; は、このサブジェクトの内部 &lt;code&gt;Principal&lt;/code&gt; &lt;code&gt;Set&lt;/code&gt; によってサポートされています。返された &lt;code&gt;Set&lt;/code&gt; への変更は、内部の &lt;code&gt;Principal&lt;/code&gt; &lt;code&gt;Set&lt;/code&gt; にも影響します。</target>
        </trans-unit>
        <trans-unit id="5d4e1626c242857a248f0940fc4963421f11cce0" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Set&lt;/code&gt; is backed by this Subject's internal private Credential &lt;code&gt;Set&lt;/code&gt;. Any modification to the returned &lt;code&gt;Set&lt;/code&gt; affects the internal private Credential &lt;code&gt;Set&lt;/code&gt; as well.</source>
          <target state="translated">返された &lt;code&gt;Set&lt;/code&gt; は、このサブジェクトの内部プライベートクレデンシャル &lt;code&gt;Set&lt;/code&gt; によってサポートされています。返された &lt;code&gt;Set&lt;/code&gt; への変更は、内部のプライベート資格情報 &lt;code&gt;Set&lt;/code&gt; にも影響します。</target>
        </trans-unit>
        <trans-unit id="92eab9cfd3076bb306b67853f4acd835335f8a36" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Set&lt;/code&gt; is backed by this Subject's internal public Credential &lt;code&gt;Set&lt;/code&gt;. Any modification to the returned &lt;code&gt;Set&lt;/code&gt; affects the internal public Credential &lt;code&gt;Set&lt;/code&gt; as well.</source>
          <target state="translated">返された &lt;code&gt;Set&lt;/code&gt; は、このサブジェクトの内部公開資格 &lt;code&gt;Set&lt;/code&gt; によって裏付けられています。返された &lt;code&gt;Set&lt;/code&gt; への変更は、内部の公開資格 &lt;code&gt;Set&lt;/code&gt; にも影響します。</target>
        </trans-unit>
        <trans-unit id="615020d8b91ea3150d89b8eb5df521518f2bf0e3" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Set&lt;/code&gt; is not backed by this Subject's internal &lt;code&gt;Principal&lt;/code&gt;&lt;code&gt;Set&lt;/code&gt;. A new &lt;code&gt;Set&lt;/code&gt; is created and returned for each method invocation. Modifications to the returned &lt;code&gt;Set&lt;/code&gt; will not affect the internal &lt;code&gt;Principal&lt;/code&gt;&lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">返された &lt;code&gt;Set&lt;/code&gt; は、このサブジェクトの内部 &lt;code&gt;Principal&lt;/code&gt; &lt;code&gt;Set&lt;/code&gt; によってサポートされていません。メソッドの呼び出しごとに新しい &lt;code&gt;Set&lt;/code&gt; が作成されて返されます。返された &lt;code&gt;Set&lt;/code&gt; を変更しても、内部の &lt;code&gt;Principal&lt;/code&gt; &lt;code&gt;Set&lt;/code&gt; は影響しません。</target>
        </trans-unit>
        <trans-unit id="60e6e37a29504c686a29d93cf1b8a805cadab51b" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Set&lt;/code&gt; is not backed by this Subject's internal private Credential &lt;code&gt;Set&lt;/code&gt;. A new &lt;code&gt;Set&lt;/code&gt; is created and returned for each method invocation. Modifications to the returned &lt;code&gt;Set&lt;/code&gt; will not affect the internal private Credential &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">返された &lt;code&gt;Set&lt;/code&gt; は、このサブジェクトの内部プライベートクレデンシャル &lt;code&gt;Set&lt;/code&gt; によってサポートされていません。メソッドの呼び出しごとに新しい &lt;code&gt;Set&lt;/code&gt; が作成されて返されます。返された &lt;code&gt;Set&lt;/code&gt; を変更しても、内部のプライベート資格情報 &lt;code&gt;Set&lt;/code&gt; は影響しません。</target>
        </trans-unit>
        <trans-unit id="4a692bd81d1139698e9955f1301dc1ea4476c6cb" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Set&lt;/code&gt; is not backed by this Subject's internal public Credential &lt;code&gt;Set&lt;/code&gt;. A new &lt;code&gt;Set&lt;/code&gt; is created and returned for each method invocation. Modifications to the returned &lt;code&gt;Set&lt;/code&gt; will not affect the internal public Credential &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">返された &lt;code&gt;Set&lt;/code&gt; は、このサブジェクトの内部の公開資格 &lt;code&gt;Set&lt;/code&gt; によってサポートされていません。メソッドの呼び出しごとに新しい &lt;code&gt;Set&lt;/code&gt; が作成されて返されます。返された &lt;code&gt;Set&lt;/code&gt; を変更しても、内部の公開資格 &lt;code&gt;Set&lt;/code&gt; は影響しません。</target>
        </trans-unit>
        <trans-unit id="e6ee6fed903cbcc5abb5de7f51ad1081371937c6" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;SourceDataLine&lt;/code&gt;'s default audio format will be initialized with &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="translated">返される &lt;code&gt;SourceDataLine&lt;/code&gt; のデフォルトのオーディオ形式は、 &lt;code&gt;format&lt;/code&gt; で初期化されます。</target>
        </trans-unit>
        <trans-unit id="10e5de58fd5281c7858b3f0d4c85924e449e2f2d" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;TargetDataLine&lt;/code&gt;'s default audio format will be initialized with &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="translated">返された &lt;code&gt;TargetDataLine&lt;/code&gt; のデフォルトのオーディオ形式は、 &lt;code&gt;format&lt;/code&gt; で初期化されます。</target>
        </trans-unit>
        <trans-unit id="5203d861af68a72a81fc4a8395381f4dbaed35cd" translate="yes" xml:space="preserve">
          <source>The returned Collector disallows null keys and values. If either mapping function returns null, &lt;code&gt;NullPointerException&lt;/code&gt; will be thrown.</source>
          <target state="translated">返されたコレクターは、nullキーと値を許可しません。いずれかのマッピング関数がnullを返す場合、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="1fd9c231706d0da0d4eddb1a0ac608bee0a7ed4e" translate="yes" xml:space="preserve">
          <source>The returned SecureRandom object has not been seeded. To seed the returned object, call the &lt;code&gt;setSeed&lt;/code&gt; method. If &lt;code&gt;setSeed&lt;/code&gt; is not called, the first call to &lt;code&gt;nextBytes&lt;/code&gt; will force the SecureRandom object to seed itself. This self-seeding will not occur if &lt;code&gt;setSeed&lt;/code&gt; was previously called.</source>
          <target state="translated">返されたSecureRandomオブジェクトはシードされていません。返されたオブジェクトをシードするには、 &lt;code&gt;setSeed&lt;/code&gt; メソッドを呼び出します。場合 &lt;code&gt;setSeed&lt;/code&gt; 呼び出されない、の最初の呼び出し &lt;code&gt;nextBytes&lt;/code&gt; 自分自身をシードするSecureRandomオブジェクトを強制します。 &lt;code&gt;setSeed&lt;/code&gt; が以前に呼び出された場合、この自己シードは発生しません。</target>
        </trans-unit>
        <trans-unit id="f4f45b323d8e60fb385aaaddf4bf5212cf5012ca" translate="yes" xml:space="preserve">
          <source>The returned array comprises all the code signers that have signed this entry.</source>
          <target state="translated">返される配列は、このエントリに署名したすべてのコード署名者から構成されます。</target>
        </trans-unit>
        <trans-unit id="90a2eb89a967b2512d9881060ad43029b93df120" translate="yes" xml:space="preserve">
          <source>The returned array contains the MIDI controller numbers for which the listener will now receive events. Some sequencers might not support controller event notification, in which case the array has a length of 0. Other sequencers might support notification for some controllers but not all. This method may be invoked repeatedly. Each time, the returned array indicates all the controllers that the listener will be notified about, not only the controllers requested in that particular invocation.</source>
          <target state="translated">返される配列には、リスナーがイベントを受信する MIDI コントローラ番号が含まれます。シーケンサによっては、コントローラのイベント通知をサポートしていない場合、配列の長さは 0 になります。 その他のシーケンサは、いくつかのコントローラの通知をサポートしているかもしれませんが、すべてのコントローラの通知をサポートしているわけではありません。このメソッドは繰り返し実行される可能性があります。そのたびに返される配列は、その特定の呼び出しでリクエストされたコントローラだけではなく、 リスナーに通知されるすべてのコントローラを表します。</target>
        </trans-unit>
        <trans-unit id="77ab42c8180b6e9c1c6e98009e4ce02c9ee2fc2b" translate="yes" xml:space="preserve">
          <source>The returned array includes cipher suites from the list of standard cipher suite names in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#jsse-cipher-suite-names&quot;&gt; JSSE Cipher Suite Names&lt;/a&gt; section of the Java Cryptography Architecture Standard Algorithm Name Documentation, and may also include other cipher suites that the provider supports.</source>
          <target state="translated">返される配列には、Java Cryptography Architecture Standard Algorithm &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#jsse-cipher-suite-names&quot;&gt;NameDocumentationのJSSECipher Suite Names&lt;/a&gt;セクションにある標準暗号スイート名のリストからの暗号スイートが含まれ、プロバイダーがサポートする他の暗号スイートも含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="47f2116b38feb165a5a7fcbeabdd2f6355db1df7" translate="yes" xml:space="preserve">
          <source>The returned array is a copy of the actual array and may be modified in any way without affecting the system tray. To remove a &lt;code&gt;TrayIcon&lt;/code&gt; from the &lt;code&gt;SystemTray&lt;/code&gt;, use the &lt;a href=&quot;#remove(java.awt.TrayIcon)&quot;&gt;&lt;code&gt;remove(TrayIcon)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返される配列は実際の配列のコピーであり、システムトレイに影響を与えることなく任意の方法で変更できます。 &lt;code&gt;SystemTray&lt;/code&gt; から &lt;code&gt;TrayIcon&lt;/code&gt; を削除するには、&lt;a href=&quot;#remove(java.awt.TrayIcon)&quot;&gt; &lt;code&gt;remove(TrayIcon)&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="3624c3e8b713f9750ee56a62c2997bd2cc1b21d9" translate="yes" xml:space="preserve">
          <source>The returned array is a shallow copy of the internal array, which means that it is a copy of the internal array of references to the &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; objects but that each referenced &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; object is not copied.</source>
          <target state="translated">返される配列は内部配列の浅いコピーです。つまり、 &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; オブジェクトへの参照の内部配列のコピーですが、参照される各 &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; オブジェクトはコピーされません。</target>
        </trans-unit>
        <trans-unit id="2fcde0250fbd9f37a68a63dc986de2a345538306" translate="yes" xml:space="preserve">
          <source>The returned array is a shallow copy of the internal array, which means that it is a copy of the internal array of references to the &lt;code&gt;MBeanParameterInfo&lt;/code&gt; objects but that each referenced &lt;code&gt;MBeanParameterInfo&lt;/code&gt; object is not copied.</source>
          <target state="translated">返される配列は内部配列の浅いコピーです。つまり、これは &lt;code&gt;MBeanParameterInfo&lt;/code&gt; オブジェクトへの参照の内部配列のコピーですが、参照される各 &lt;code&gt;MBeanParameterInfo&lt;/code&gt; オブジェクトはコピーされません。</target>
        </trans-unit>
        <trans-unit id="05ba6a5f60e0641d1235e4005ef40904baaa60b1" translate="yes" xml:space="preserve">
          <source>The returned array never contains methods with names &quot;&lt;code&gt;&amp;lt;init&amp;gt;&lt;/code&gt;&quot; or &quot;&lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt;&quot;.</source>
          <target state="translated">返される配列には、「 &lt;code&gt;&amp;lt;init&amp;gt;&lt;/code&gt; 」または「 &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt; 」という名前のメソッドが含まれることはありません。</target>
        </trans-unit>
        <trans-unit id="f6c37647bf61a5b5c430747eb2b5e030dc0e7ee8" translate="yes" xml:space="preserve">
          <source>The returned array will be &quot;safe&quot; in that no references to it are maintained by this collection. (In other words, this method must allocate a new array even if this collection is backed by an array). The caller is thus free to modify the returned array.</source>
          <target state="translated">返される配列は、このコレクションによってその配列への参照が保持されないという意味で「安全な」配列となります(言い換えれば、このコレクションが配列によってバックアップされている場合でも、このメソッドは新しい配列を確保しなければなりません)。(言い換えれば、このメソッドは、たとえこのコレクションが配列によってバックアップされていたとしても、新しい配列を割り当てなければなりません)。このように、呼び出し元は返された配列を自由に変更することができます。</target>
        </trans-unit>
        <trans-unit id="2c7b12233cde488615989699afe78dcad6ed4384" translate="yes" xml:space="preserve">
          <source>The returned array will be &quot;safe&quot; in that no references to it are maintained by this deque. (In other words, this method must allocate a new array). The caller is thus free to modify the returned array.</source>
          <target state="translated">返される配列は、このdequeによってその配列への参照が保持されないという意味で &quot;安全な &quot;配列となります (言い換えれば、このメソッドは新しい配列を確保しなければなりません)。(言い換えれば、このメソッドは新しい配列を確保しなければなりません)。このように、呼び出し元は返された配列を自由に変更することができます。</target>
        </trans-unit>
        <trans-unit id="15b26c8c7a310fbb9e54174ebdb2dbcf36348363" translate="yes" xml:space="preserve">
          <source>The returned array will be &quot;safe&quot; in that no references to it are maintained by this list. (In other words, this method must allocate a new array even if this list is backed by an array). The caller is thus free to modify the returned array.</source>
          <target state="translated">返される配列は、このリストによってその配列への参照が保持されないという意味で「安全な」配列となります (言い換えれば、このリストが配列によってバックアップされている場合でも、このメソッドは新しい配列を確保しなければなりません)。(言い換えれば、このリストが配列によってバックアップされている場合でも、このメソッドは新しい配列を確保しなければなりません)。このように、呼び出し元は返された配列を自由に変更することができます。</target>
        </trans-unit>
        <trans-unit id="9957755e8c40fe5adbd7d7d8d5843d2e55923750" translate="yes" xml:space="preserve">
          <source>The returned array will be &quot;safe&quot; in that no references to it are maintained by this list. (In other words, this method must allocate a new array). The caller is thus free to modify the returned array.</source>
          <target state="translated">返される配列は、このリストによってその配列への参照が保持されないという意味で「安全な」配列となります (言い換えれば、このメソッドは新しい配列を確保しなければなりません)。(言い換えれば、このメソッドは新しい配列を確保しなければなりません)。このように、呼び出し元は返された配列を自由に変更することができます。</target>
        </trans-unit>
        <trans-unit id="9e282460816c42a0ccd3dcea485b9239559bb18e" translate="yes" xml:space="preserve">
          <source>The returned array will be &quot;safe&quot; in that no references to it are maintained by this queue. (In other words, this method must allocate a new array). The caller is thus free to modify the returned array.</source>
          <target state="translated">返される配列は、このキューによってそれへの参照が保持されないという意味で「安全な」配列となります。(言い換えれば、このメソッドは新しい配列を割り当てなければなりません)。このように、呼び出し元は返された配列を自由に変更することができます。</target>
        </trans-unit>
        <trans-unit id="6e87afccdc8466069c7b753215ae2cacd201fd10" translate="yes" xml:space="preserve">
          <source>The returned array will be &quot;safe&quot; in that no references to it are maintained by this set. (In other words, this method must allocate a new array even if this set is backed by an array). The caller is thus free to modify the returned array.</source>
          <target state="translated">返される配列は、このセットによってそれへの参照が保持されないという意味で「安全な」配列となります(言い換えれば、このメソッドは、このセットが配列によってバックアップされていたとしても、新しい配列を確保しなければなりません)。(言い換えれば、このメソッドは、たとえこのセットが配列によってバックアップされていたとしても、新しい配列を割り当てなければなりません)。このように、呼び出し元は返された配列を自由に変更することができます。</target>
        </trans-unit>
        <trans-unit id="8651aa449d701f684570ddf36fba5191566388d6" translate="yes" xml:space="preserve">
          <source>The returned attribute information is limited to runs that contain the current character.</source>
          <target state="translated">返される属性情報は、現在の文字を含むランに限定されます。</target>
        </trans-unit>
        <trans-unit id="dd3d33c31d474f6dd046417604a6a9ae4803e6b9" translate="yes" xml:space="preserve">
          <source>The returned certificate array comprises all the signer certificates that were used to verify this entry. Each signer certificate is followed by its supporting certificate chain (which may be empty). Each signer certificate and its supporting certificate chain are ordered bottom-to-top (i.e., with the signer certificate first and the (root) certificate authority last).</source>
          <target state="translated">返される証明書の配列は、このエントリの検証に使用されたすべての署名者証明書で構成されます。各署名者証明書の後には、サポートする証明書チェインが続きます (空の場合もあります)。各署名者証明書とそれをサポートする証明書チェインは、下から上に順番に並べられます (つまり、署名者証明書が最初で、(ルートの)証明書局が最後になります)。</target>
        </trans-unit>
        <trans-unit id="61c3a6711385606db98b86cc4dc71d68bdea4436" translate="yes" xml:space="preserve">
          <source>The returned clip must be opened with the &lt;code&gt;open(AudioFormat)&lt;/code&gt; or &lt;code&gt;open(AudioInputStream)&lt;/code&gt; method.</source>
          <target state="translated">返されたクリップは、 &lt;code&gt;open(AudioFormat)&lt;/code&gt; または &lt;code&gt;open(AudioInputStream)&lt;/code&gt; メソッドで開く必要があります。</target>
        </trans-unit>
        <trans-unit id="ceb417aa63a35568772d2ba08459a4d0f57ffbee" translate="yes" xml:space="preserve">
          <source>The returned collection does</source>
          <target state="translated">返されたコレクションは</target>
        </trans-unit>
        <trans-unit id="b07c416f52316fbf6c7d40a634719186c13469b3" translate="yes" xml:space="preserve">
          <source>The returned collection will be serializable if the specified collection is serializable.</source>
          <target state="translated">返されたコレクションは、指定されたコレクションがシリアライズ可能な場合、シリアライズ可能になります。</target>
        </trans-unit>
        <trans-unit id="3be1f1672220475d8271f6e01c1f720a84f08e5b" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable (assuming the specified comparator is also serializable or &lt;code&gt;null&lt;/code&gt;).</source>
          <target state="translated">返されるコンパレータはシリアル化可能です（指定されたコンパレータもシリアル化可能または &lt;code&gt;null&lt;/code&gt; であると想定）。</target>
        </trans-unit>
        <trans-unit id="2812de92165ec02fbb836f9148b615e9ccc3b5b2" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable and throws &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; when comparing &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">返されるコンパレータはシリアライズ可能であり、 &lt;code&gt;null&lt;/code&gt; を比較するときに&lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="77a6f4be0bfa1c8aa5aedc5a42831ad20378a870" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable and throws &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; when comparing an entry with a null key.</source>
          <target state="translated">返されたコンパレータはシリアル化可能であり、エントリをnullキーと比較すると&lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="22bf28f66c9f612e083df0a59239e3c46c04c933" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable and throws &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; when comparing an entry with null values.</source>
          <target state="translated">返されたコンパレータはシリアル化可能であり、エントリをnull値と比較するときに&lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="51644083b4b8fda187f5a628a6258b22d611a598" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable if the specified comparator is also serializable.</source>
          <target state="translated">返されるコンパレータは、指定されたコンパレータもシリアライズ可能な場合はシリアライズ可能です。</target>
        </trans-unit>
        <trans-unit id="d69bb8caf8d86905d98a11aab0d0a3baa774bad3" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable if the specified comparator is serializable.</source>
          <target state="translated">返されたコンパレータは、指定されたコンパレータがシリアライズ可能な場合はシリアライズ可能です。</target>
        </trans-unit>
        <trans-unit id="f0576c7aa360de3b65d8c8efe158571eec213ab2" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable if the specified function and comparator are both serializable.</source>
          <target state="translated">指定された関数とコンパレータの両方がシリアライズ可能な場合、返されるコンパレータはシリアライズ可能です。</target>
        </trans-unit>
        <trans-unit id="ba917226177854af620439263d809c330c5d69cf" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable if the specified function is also serializable.</source>
          <target state="translated">返されるコンパレータは、指定された関数もシリアライズ可能な場合はシリアライズ可能です。</target>
        </trans-unit>
        <trans-unit id="0334b290d5844794dff470460f3065bc09010f74" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable.</source>
          <target state="translated">返されるコンパレータはシリアライズ可能です。</target>
        </trans-unit>
        <trans-unit id="84b94e59406a95c4ca5a8d11de2db0b0bbe9f7c0" translate="yes" xml:space="preserve">
          <source>The returned completable future completes exceptionally with:</source>
          <target state="translated">返された完成可能な未来は、例外的にそれで完成します。</target>
        </trans-unit>
        <trans-unit id="c615624e02206189b87ea763df189e93fca46655" translate="yes" xml:space="preserve">
          <source>The returned completable future, if completed successfully, completes with an &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&lt;/code&gt; that contains the response status, headers, and body ( as handled by given response body handler ).</source>
          <target state="translated">返される完了可能なfutureは、正常に完了すると、応答ステータス、ヘッダー、および本文（指定された応答本文ハンドラーによって処理される）を含む&lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;T&amp;gt;&lt;/code&gt; で完了します。</target>
        </trans-unit>
        <trans-unit id="c5d33135e5a1f395b41fad98d6b20e99dae320a6" translate="yes" xml:space="preserve">
          <source>The returned era will be a singleton capable of being compared with the constants in &lt;a href=&quot;chrono/isochronology&quot;&gt;&lt;code&gt;IsoChronology&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;==&lt;/code&gt; operator.</source>
          <target state="translated">返される時代は、 &lt;code&gt;==&lt;/code&gt; 演算子を使用して&lt;a href=&quot;chrono/isochronology&quot;&gt; &lt;code&gt;IsoChronology&lt;/code&gt; &lt;/a&gt;の定数と比較できるシングルトンになります。</target>
        </trans-unit>
        <trans-unit id="8932377dd8e02a84a648c771d6426ce831a87e6f" translate="yes" xml:space="preserve">
          <source>The returned filter uses &lt;a href=&quot;../../../java.base/java/util/regex/matcher#find()&quot;&gt;&lt;code&gt;Matcher.find()&lt;/code&gt;&lt;/a&gt; to test for inclusion. To test for exact matches use the characters '^' and '$' to match the beginning and end of the string respectively. For example, &quot;^foo$&quot; includes only rows whose string is exactly &quot;foo&quot; and not, for example, &quot;food&quot;. See &lt;a href=&quot;../../../java.base/java/util/regex/pattern&quot;&gt;&lt;code&gt;Pattern&lt;/code&gt;&lt;/a&gt; for a complete description of the supported regular-expression constructs.</source>
          <target state="translated">返されたフィルターは、&lt;a href=&quot;../../../java.base/java/util/regex/matcher#find()&quot;&gt; &lt;code&gt;Matcher.find()&lt;/code&gt; &lt;/a&gt;を使用して包含をテストします。完全一致をテストするには、文字「^」と「$」を使用して、それぞれ文字列の最初と最後に一致させます。たとえば、「^ foo $」には、文字列が正確に「foo」であり、たとえば「food」ではない行のみが含まれます。サポートされている正規表現構造の完全な説明については、&lt;a href=&quot;../../../java.base/java/util/regex/pattern&quot;&gt; &lt;code&gt;Pattern&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="685a6e900daf413e8d8765bf083707c3fc12c8e0" translate="yes" xml:space="preserve">
          <source>The returned formatter has a chronology of ISO set to ensure dates in other calendar systems are correctly converted. It has no override zone and uses the &lt;a href=&quot;resolverstyle#SMART&quot;&gt;&lt;code&gt;SMART&lt;/code&gt;&lt;/a&gt; resolver style.</source>
          <target state="translated">返されるフォーマッターには、他のカレンダーシステムの日付が正しく変換されるように、ISOの年表が設定されています。オーバーライドゾーンはなく、&lt;a href=&quot;resolverstyle#SMART&quot;&gt; &lt;code&gt;SMART&lt;/code&gt; &lt;/a&gt;リゾルバースタイルを使用します。</target>
        </trans-unit>
        <trans-unit id="617ab648dccda8ea4bfed9ff5c0e4dca48843eb4" translate="yes" xml:space="preserve">
          <source>The returned formatter has a chronology of ISO set to ensure dates in other calendar systems are correctly converted. It has no override zone and uses the &lt;a href=&quot;resolverstyle#SMART&quot;&gt;&lt;code&gt;SMART&lt;/code&gt;&lt;/a&gt; resolver style. The &lt;code&gt;FULL&lt;/code&gt; and &lt;code&gt;LONG&lt;/code&gt; styles typically require a time-zone. When formatting using these styles, a &lt;code&gt;ZoneId&lt;/code&gt; must be available, either by using &lt;code&gt;ZonedDateTime&lt;/code&gt; or &lt;a href=&quot;#withZone(java.time.ZoneId)&quot;&gt;&lt;code&gt;withZone(java.time.ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるフォーマッタには、他のカレンダーシステムの日付が正しく変換されるようにISOの年表が設定されています。オーバーライドゾーンはなく、&lt;a href=&quot;resolverstyle#SMART&quot;&gt; &lt;code&gt;SMART&lt;/code&gt; &lt;/a&gt;リゾルバースタイルを使用します。 &lt;code&gt;FULL&lt;/code&gt; と &lt;code&gt;LONG&lt;/code&gt; スタイルは、通常時間帯が必要です。これらのスタイルを使用してフォーマットする場合、 &lt;code&gt;ZonedDateTime&lt;/code&gt; または&lt;a href=&quot;#withZone(java.time.ZoneId)&quot;&gt; &lt;code&gt;withZone(java.time.ZoneId)&lt;/code&gt; &lt;/a&gt;を使用して、 &lt;code&gt;ZoneId&lt;/code&gt; が使用可能である必要があります。</target>
        </trans-unit>
        <trans-unit id="c7747f70640f1e4a45424ed0c1270bbc9549330f" translate="yes" xml:space="preserve">
          <source>The returned formatter has a chronology of ISO set to ensure dates in other calendar systems are correctly converted. It has no override zone and uses the &lt;a href=&quot;resolverstyle#STRICT&quot;&gt;&lt;code&gt;STRICT&lt;/code&gt;&lt;/a&gt; resolver style.</source>
          <target state="translated">返されるフォーマッターには、他のカレンダーシステムの日付が正しく変換されるように、ISOの年表が設定されています。オーバーライドゾーンはなく、&lt;a href=&quot;resolverstyle#STRICT&quot;&gt; &lt;code&gt;STRICT&lt;/code&gt; &lt;/a&gt;リゾルバースタイルを使用します。</target>
        </trans-unit>
        <trans-unit id="c3dda27b1c2af94aa2edb7b9c334041c2040aee1" translate="yes" xml:space="preserve">
          <source>The returned formatter has no override chronology or zone. It uses &lt;a href=&quot;resolverstyle#SMART&quot;&gt;&lt;code&gt;SMART&lt;/code&gt;&lt;/a&gt; resolver style.</source>
          <target state="translated">返されるフォーマッターには、年表やゾーンのオーバーライドはありません。&lt;a href=&quot;resolverstyle#SMART&quot;&gt; &lt;code&gt;SMART&lt;/code&gt; &lt;/a&gt;リゾルバスタイルを使用します。</target>
        </trans-unit>
        <trans-unit id="65f23c4bdba155d972d5a5c334ace90811627c2f" translate="yes" xml:space="preserve">
          <source>The returned formatter has no override chronology or zone. It uses the &lt;a href=&quot;resolverstyle#STRICT&quot;&gt;&lt;code&gt;STRICT&lt;/code&gt;&lt;/a&gt; resolver style.</source>
          <target state="translated">返されるフォーマッターには、年表やゾーンのオーバーライドはありません。&lt;a href=&quot;resolverstyle#STRICT&quot;&gt; &lt;code&gt;STRICT&lt;/code&gt; &lt;/a&gt;リゾルバースタイルを使用します。</target>
        </trans-unit>
        <trans-unit id="93e620ed0c6b2f581405e4ca186e0d0c26a039f0" translate="yes" xml:space="preserve">
          <source>The returned implementation is immutable, thread-safe and &lt;code&gt;Serializable&lt;/code&gt; providing that the base clock is.</source>
          <target state="translated">返される実装は不変でスレッドセーフであり、ベースクロックがそうであれば &lt;code&gt;Serializable&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1ebf894963bb17de1c19228a9892a378efc764d2" translate="yes" xml:space="preserve">
          <source>The returned implementation is immutable, thread-safe and &lt;code&gt;Serializable&lt;/code&gt;.</source>
          <target state="translated">返される実装は、不変で、スレッドセーフで、 &lt;code&gt;Serializable&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="16aec74c31404fdf24dbc2481edc9947ae28ae7f" translate="yes" xml:space="preserve">
          <source>The returned implementation is immutable, thread-safe and &lt;code&gt;Serializable&lt;/code&gt;. It is equivalent to &lt;code&gt;system(ZoneId.systemDefault())&lt;/code&gt;.</source>
          <target state="translated">返される実装は、不変で、スレッドセーフで、 &lt;code&gt;Serializable&lt;/code&gt; です。 &lt;code&gt;system(ZoneId.systemDefault())&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="28e83331df05c75aa0965f68cf383b4fa1ce4775" translate="yes" xml:space="preserve">
          <source>The returned implementation is immutable, thread-safe and &lt;code&gt;Serializable&lt;/code&gt;. It is equivalent to &lt;code&gt;system(ZoneOffset.UTC)&lt;/code&gt;.</source>
          <target state="translated">返される実装は、不変で、スレッドセーフで、 &lt;code&gt;Serializable&lt;/code&gt; です。 &lt;code&gt;system(ZoneOffset.UTC)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="256a067cbdccb5e2e330ac00c3dcdb3f79fff5d2" translate="yes" xml:space="preserve">
          <source>The returned implementation is immutable, thread-safe and &lt;code&gt;Serializable&lt;/code&gt;. It is equivalent to &lt;code&gt;tick(system(zone), Duration.ofMillis(1))&lt;/code&gt;.</source>
          <target state="translated">返される実装は、不変で、スレッドセーフで、 &lt;code&gt;Serializable&lt;/code&gt; です。これは、 &lt;code&gt;tick(system(zone), Duration.ofMillis(1))&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="39695b971886168cd9e28cf54007c2987d52ae31" translate="yes" xml:space="preserve">
          <source>The returned implementation is immutable, thread-safe and &lt;code&gt;Serializable&lt;/code&gt;. It is equivalent to &lt;code&gt;tick(system(zone), Duration.ofMinutes(1))&lt;/code&gt;.</source>
          <target state="translated">返される実装は、不変で、スレッドセーフで、 &lt;code&gt;Serializable&lt;/code&gt; です。 &lt;code&gt;tick(system(zone), Duration.ofMinutes(1))&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="b0d8edb2d119f60ce6b547f8aeea62c8bb10250e" translate="yes" xml:space="preserve">
          <source>The returned implementation is immutable, thread-safe and &lt;code&gt;Serializable&lt;/code&gt;. It is equivalent to &lt;code&gt;tick(system(zone), Duration.ofSeconds(1))&lt;/code&gt;.</source>
          <target state="translated">返される実装は、不変で、スレッドセーフで、 &lt;code&gt;Serializable&lt;/code&gt; です。 &lt;code&gt;tick(system(zone), Duration.ofSeconds(1))&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="2ab8e6a2c1e29941612774d35818b8817f708321" translate="yes" xml:space="preserve">
          <source>The returned index is the largest value</source>
          <target state="translated">返されるインデックスは最大値</target>
        </trans-unit>
        <trans-unit id="324947fcc7f39d43c0a0080101a27650dcd91d17" translate="yes" xml:space="preserve">
          <source>The returned index is the largest value &lt;code&gt;k&lt;/code&gt; for which:</source>
          <target state="translated">返されるインデックスは、次の最大値 &lt;code&gt;k&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1010f5a375a5d3f29e20face9e80371d4a90f440" translate="yes" xml:space="preserve">
          <source>The returned index is the smallest value</source>
          <target state="translated">返されるインデックスは最小値</target>
        </trans-unit>
        <trans-unit id="b96444254cceb87f3cb7ff9401f1b082c1d382c7" translate="yes" xml:space="preserve">
          <source>The returned index is the smallest value &lt;code&gt;k&lt;/code&gt; for which:</source>
          <target state="translated">返されるインデックスは、次のような最小値 &lt;code&gt;k&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="30fb35855f9641f7209a86fa609966716cae03af" translate="yes" xml:space="preserve">
          <source>The returned indexes are limited to the range of the iterator.</source>
          <target state="translated">返されるインデックスは、イテレータの範囲に制限されます。</target>
        </trans-unit>
        <trans-unit id="e45bc891e1f438dd01ea7196d9842b794781ae4f" translate="yes" xml:space="preserve">
          <source>The returned instants from &lt;code&gt;Clock&lt;/code&gt; work on a time-scale that ignores leap seconds, as described in &lt;a href=&quot;instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt;. If the implementation wraps a source that provides leap second information, then a mechanism should be used to &quot;smooth&quot; the leap second. The Java Time-Scale mandates the use of UTC-SLS, however clock implementations may choose how accurate they are with the time-scale so long as they document how they work. Implementations are therefore not required to actually perform the UTC-SLS slew or to otherwise be aware of leap seconds.</source>
          <target state="translated">&lt;code&gt;Clock&lt;/code&gt; から返されるインスタントは、「&lt;a href=&quot;instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; &lt;/a&gt;説明されているように、うるう秒を無視する時間スケールで動作します。うるう秒情報を提供するソースを実装がラップする場合、うるう秒を「スムーズ」にするメカニズムを使用する必要があります。 Java Time-ScaleはUTC-SLSの使用を義務付けていますが、クロックの実装は、それらがどのように機能するかを文書化している限り、タイムスケールでの正確さを選択できます。したがって、実装ではUTC-SLSスルーを実際に実行したり、うるう秒を認識したりする必要はありません。</target>
        </trans-unit>
        <trans-unit id="7dfea46346d425f47431ab48a0b9973f65d3a3d0" translate="yes" xml:space="preserve">
          <source>The returned iterator is &lt;a href=&quot;#fail-fast&quot;&gt;&lt;i&gt;fail-fast&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるイテレータは&lt;a href=&quot;#fail-fast&quot;&gt;&lt;i&gt;フェイルファスト&lt;/i&gt;&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="4d825a47643cf28fa3b87aadae1a13cf5b1f8bb0" translate="yes" xml:space="preserve">
          <source>The returned iterator is &lt;a href=&quot;package-summary#Weakly&quot;&gt;&lt;i&gt;weakly consistent&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるイテレータは&lt;a href=&quot;package-summary#Weakly&quot;&gt;&lt;i&gt;一貫性&lt;/i&gt;&lt;/a&gt;が&lt;i&gt;弱い&lt;/i&gt;です。</target>
        </trans-unit>
        <trans-unit id="9ef6fd11db72e67c90473d6e296ebd844318cf20" translate="yes" xml:space="preserve">
          <source>The returned iterator provides a snapshot of the state of the list when the iterator was constructed. No synchronization is needed while traversing the iterator. The iterator does &lt;em&gt;NOT&lt;/em&gt; support the &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">返された反復子は、反復子が作成されたときのリストの状態のスナップショットを提供します。イテレーターをトラバースする間、同期は必要ありません。イテレータは、 &lt;code&gt;remove&lt;/code&gt; メソッドをサポートしてい&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="dd06f34d84c884510eb2daefd756631c982e6784" translate="yes" xml:space="preserve">
          <source>The returned iterator provides a snapshot of the state of the list when the iterator was constructed. No synchronization is needed while traversing the iterator. The iterator does &lt;em&gt;NOT&lt;/em&gt; support the &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;add&lt;/code&gt; methods.</source>
          <target state="translated">返された反復子は、反復子が作成されたときのリストの状態のスナップショットを提供します。イテレーターをトラバースする間、同期は必要ありません。イテレータは、 &lt;code&gt;remove&lt;/code&gt; 、 &lt;code&gt;set&lt;/code&gt; 、または &lt;code&gt;add&lt;/code&gt; メソッドをサポートしてい&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6c8995a19beeeaa38d931dd04ead46af4bf6aeaf" translate="yes" xml:space="preserve">
          <source>The returned iterator provides a snapshot of the state of the set when the iterator was constructed. No synchronization is needed while traversing the iterator. The iterator does &lt;em&gt;NOT&lt;/em&gt; support the &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">返された反復子は、反復子が作成されたときのセットの状態のスナップショットを提供します。イテレーターをトラバースする間、同期は必要ありません。イテレータは、 &lt;code&gt;remove&lt;/code&gt; メソッドをサポートしてい&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b28ef914634dbd42c57b4fb798bc270a1b137343" translate="yes" xml:space="preserve">
          <source>The returned line should be opened with the &lt;code&gt;open(AudioFormat)&lt;/code&gt; or &lt;code&gt;open(AudioFormat, int)&lt;/code&gt; method.</source>
          <target state="translated">返された行は、 &lt;code&gt;open(AudioFormat)&lt;/code&gt; または &lt;code&gt;open(AudioFormat, int)&lt;/code&gt; メソッドで開く必要があります。</target>
        </trans-unit>
        <trans-unit id="603df59fcea4e98e66008bfad2caba193eee7e62" translate="yes" xml:space="preserve">
          <source>The returned list consists of language ranges from the given &lt;code&gt;ranges&lt;/code&gt; and their equivalents found in the IANA Language Subtag Registry. For example, if the given &lt;code&gt;ranges&lt;/code&gt; is &lt;code&gt;&quot;Accept-Language: iw,en-us;q=0.7,en;q=0.3&quot;&lt;/code&gt;, the elements in the list to be returned are:</source>
          <target state="translated">返されたリストは、与えられたから、言語の範囲で構成されてい &lt;code&gt;ranges&lt;/code&gt; およびその同等物は、IANA言語サブタグレジストリで見つかりました。たとえば、指定された &lt;code&gt;ranges&lt;/code&gt; が &lt;code&gt;&quot;Accept-Language: iw,en-us;q=0.7,en;q=0.3&quot;&lt;/code&gt; 場合、返されるリストの要素は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e4e4b3e38d248cd7e5998a34d9a87596fd1c1fda" translate="yes" xml:space="preserve">
          <source>The returned list is modifiable so as to facilitate changes to the existing ACL. The &lt;a href=&quot;#setAcl(java.util.List)&quot;&gt;&lt;code&gt;setAcl&lt;/code&gt;&lt;/a&gt; method is used to update the file's ACL attribute.</source>
          <target state="translated">返されるリストは、既存のACLへの変更を容易にするために変更可能です。&lt;a href=&quot;#setAcl(java.util.List)&quot;&gt; &lt;code&gt;setAcl&lt;/code&gt; &lt;/a&gt;方法は、ファイルのACL属性を更新するために使用されます。</target>
        </trans-unit>
        <trans-unit id="afce95588c0380c39f79771261da47a2d309e9a8" translate="yes" xml:space="preserve">
          <source>The returned list is modifiable so as to facilitate changes to the existing ACL. The &lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt;&lt;code&gt;setAcl&lt;/code&gt;&lt;/a&gt; method is used to update the file's ACL attribute.</source>
          <target state="translated">返されるリストは、既存のACLへの変更を容易にするために変更可能です。&lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt; &lt;code&gt;setAcl&lt;/code&gt; &lt;/a&gt;方法は、ファイルのACL属性を更新するために使用されます。</target>
        </trans-unit>
        <trans-unit id="c503093f4e0ea3beb8f9f47ec55e6810f3e4744d" translate="yes" xml:space="preserve">
          <source>The returned list is not necessarily exhaustive. That is, the MBean may have a public constructor that is not in the list. In this case, the MBean server can construct another instance of this MBean's class using that constructor, even though it is not listed here.</source>
          <target state="translated">返されるリストは必ずしも全てを網羅しているわけではありません。つまり、MBean にはリストにないパブリック コンストラクタがあるかもしれません。この場合、MBean サーバは、リストにはないが、そのコンストラクタを使用して、この MBean クラスの別のインスタンスを作成することができます。</target>
        </trans-unit>
        <trans-unit id="6c4ba1a6fc0e1176884c27c61e7f3010f2b892f0" translate="yes" xml:space="preserve">
          <source>The returned list iterator is &lt;a href=&quot;#fail-fast&quot;&gt;&lt;i&gt;fail-fast&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるリストイテレータは&lt;a href=&quot;#fail-fast&quot;&gt;&lt;i&gt;フェイルファスト&lt;/i&gt;&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="ca9df76291579b501b3fdfee2f39774c2720a485" translate="yes" xml:space="preserve">
          <source>The returned list will be serializable if the specified list is serializable.</source>
          <target state="translated">返されたリストは、指定されたリストがシリアライズ可能な場合はシリアライズ可能になります。</target>
        </trans-unit>
        <trans-unit id="b51e7cf95fea371d30e6037819047e729ec2ba1c" translate="yes" xml:space="preserve">
          <source>The returned list will be serializable if the specified list is serializable. Similarly, the returned list will implement &lt;a href=&quot;randomaccess&quot;&gt;&lt;code&gt;RandomAccess&lt;/code&gt;&lt;/a&gt; if the specified list does.</source>
          <target state="translated">指定されたリストが直列化可能である場合、返されるリストは直列化可能です。同様に、返されたリストは、指定されたリストが実装している場合、&lt;a href=&quot;randomaccess&quot;&gt; &lt;code&gt;RandomAccess&lt;/code&gt; &lt;/a&gt;を実装します。</target>
        </trans-unit>
        <trans-unit id="bf755a47227812109e329812c17f2e30f9fb6597" translate="yes" xml:space="preserve">
          <source>The returned logger will perform message localization as specified by &lt;a href=&quot;system.loggerfinder#getLocalizedLogger(java.lang.String,java.util.ResourceBundle,java.lang.Module)&quot;&gt;&lt;code&gt;LoggerFinder.getLocalizedLogger(name, bundle, module)&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;module&lt;/code&gt; is the caller's module. In cases where &lt;code&gt;System.getLogger&lt;/code&gt; is called from a context where there is no caller frame on the stack (e.g when called directly from a JNI attached thread), &lt;code&gt;IllegalCallerException&lt;/code&gt; is thrown. To obtain a logger in such a context, use an auxiliary class that will implicitly be identified as the caller, or use the system &lt;a href=&quot;system.loggerfinder#getLoggerFinder()&quot;&gt;&lt;code&gt;LoggerFinder&lt;/code&gt;&lt;/a&gt; to obtain a logger instead. Note that doing the latter may eagerly initialize the underlying logging system.</source>
          <target state="translated">返されたロガーは、&lt;a href=&quot;system.loggerfinder#getLocalizedLogger(java.lang.String,java.util.ResourceBundle,java.lang.Module)&quot;&gt; &lt;code&gt;LoggerFinder.getLocalizedLogger(name, bundle, module)&lt;/code&gt; &lt;/a&gt;で指定されたメッセージのローカリゼーションを実行します。ここで、 &lt;code&gt;module&lt;/code&gt; は呼び出し元のモジュールです。ケースで &lt;code&gt;System.getLogger&lt;/code&gt; が（直接JNI添付のスレッドから呼び出された場合など）、スタックには、発信者のフレームが存在しないコンテキストから呼び出され、 &lt;code&gt;IllegalCallerException&lt;/code&gt; がスローされます。このようなコンテキストでロガーを取得するには、呼び出し元として暗黙的に識別される補助クラスを使用するか、代わりにシステム&lt;a href=&quot;system.loggerfinder#getLoggerFinder()&quot;&gt; &lt;code&gt;LoggerFinder&lt;/code&gt; &lt;/a&gt;を使用してロガーを取得します。後者を実行すると、基盤となるロギングシステムが熱心に初期化される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a3cf87e163405abbca1ef35f4f6b362d57c5c392" translate="yes" xml:space="preserve">
          <source>The returned map and its collection views may not obey the general contract of the &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">返されるマップとそのコレクションビューは、&lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;とObject.hashCode（）メソッドの一般的なコントラクトに従わない場合があります。</target>
        </trans-unit>
        <trans-unit id="04550933f42e1b20dd67a722e85a83b892d29e8b" translate="yes" xml:space="preserve">
          <source>The returned map and its collection views may not obey the general contract of the &lt;a href=&quot;object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">返されたマップとそのコレクションビューは、&lt;a href=&quot;object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;メソッドの一般規約に従っていない場合があります。</target>
        </trans-unit>
        <trans-unit id="bd8d64063c7ed0ea19647d547170466cdf6c7ae7" translate="yes" xml:space="preserve">
          <source>The returned map does not permit null keys or values. Attempting to insert or query the presence of a null key or value will throw a &lt;a href=&quot;nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt;. Attempting to query the presence of a key or value which is not of type &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; will throw a &lt;a href=&quot;classcastexception&quot;&gt;&lt;code&gt;ClassCastException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されたマップはnullキーまたは値を許可しません。nullキーまたは値の存在を挿入または照会しようとすると、&lt;a href=&quot;nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;型ではないキーまたは値の存在を照会しようとすると、&lt;a href=&quot;classcastexception&quot;&gt; &lt;code&gt;ClassCastException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="6adecd8da1fa6d74979ab4b71410df2ad020d787" translate="yes" xml:space="preserve">
          <source>The returned map has an ordering equivalent to &lt;a href=&quot;../collections#reverseOrder(java.util.Comparator)&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(comparator())&lt;/code&gt;. The expression &lt;code&gt;m.descendingMap().descendingMap()&lt;/code&gt; returns a view of &lt;code&gt;m&lt;/code&gt; essentially equivalent to &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">返されるマップには、&lt;a href=&quot;../collections#reverseOrder(java.util.Comparator)&quot;&gt; &lt;code&gt;Collections.reverseOrder&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(comparator())&lt;/code&gt; と同等の順序があります。式 &lt;code&gt;m.descendingMap().descendingMap()&lt;/code&gt; は、本質的に &lt;code&gt;m&lt;/code&gt; と同等の &lt;code&gt;m&lt;/code&gt; のビューを返します。</target>
        </trans-unit>
        <trans-unit id="de626c9a4a06c5beb2eb08bc7e1023f6785c4bcc" translate="yes" xml:space="preserve">
          <source>The returned map has an ordering equivalent to &lt;a href=&quot;../collections#reverseOrder-java.util.Comparator-&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(comparator())&lt;/code&gt;. The expression &lt;code&gt;m.descendingMap().descendingMap()&lt;/code&gt; returns a view of &lt;code&gt;m&lt;/code&gt; essentially equivalent to &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">返されるマップには、&lt;a href=&quot;../collections#reverseOrder-java.util.Comparator-&quot;&gt; &lt;code&gt;Collections.reverseOrder&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(comparator())&lt;/code&gt; と同等の順序があります。式 &lt;code&gt;m.descendingMap().descendingMap()&lt;/code&gt; は、本質的に &lt;code&gt;m&lt;/code&gt; と同等の &lt;code&gt;m&lt;/code&gt; のビューを返します。</target>
        </trans-unit>
        <trans-unit id="c6e78c6f35b029ca60ae6001c0f097568236673e" translate="yes" xml:space="preserve">
          <source>The returned map has an ordering equivalent to &lt;a href=&quot;collections#reverseOrder(java.util.Comparator)&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(comparator())&lt;/code&gt;. The expression &lt;code&gt;m.descendingMap().descendingMap()&lt;/code&gt; returns a view of &lt;code&gt;m&lt;/code&gt; essentially equivalent to &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">返されるマップには、&lt;a href=&quot;collections#reverseOrder(java.util.Comparator)&quot;&gt; &lt;code&gt;Collections.reverseOrder&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(comparator())&lt;/code&gt; と同等の順序があります。式 &lt;code&gt;m.descendingMap().descendingMap()&lt;/code&gt; は、本質的に &lt;code&gt;m&lt;/code&gt; と同等の &lt;code&gt;m&lt;/code&gt; のビューを返します。</target>
        </trans-unit>
        <trans-unit id="47af6d18a03dd37ca75973b55abf606e91a20528" translate="yes" xml:space="preserve">
          <source>The returned map has an ordering equivalent to &lt;code&gt;&lt;a href=&quot;collections#reverseOrder-java.util.Comparator-&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;(comparator())&lt;/code&gt;. The expression &lt;code&gt;m.descendingMap().descendingMap()&lt;/code&gt; returns a view of &lt;code&gt;m&lt;/code&gt; essentially equivalent to &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">返されるマップには、 &lt;code&gt;&lt;a href=&quot;collections#reverseOrder-java.util.Comparator-&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;(comparator())&lt;/code&gt; と同等の順序があります。式 &lt;code&gt;m.descendingMap().descendingMap()&lt;/code&gt; は、本質的に &lt;code&gt;m&lt;/code&gt; と同等の &lt;code&gt;m&lt;/code&gt; のビューを返します。</target>
        </trans-unit>
        <trans-unit id="2a6919fc63dffbd2b665571fbe3d0e62befa5d6f" translate="yes" xml:space="preserve">
          <source>The returned map implements all optional &lt;a href=&quot;../sortedmap&quot;&gt;&lt;code&gt;SortedMap&lt;/code&gt;&lt;/a&gt; operations</source>
          <target state="translated">返されたマップは、すべてのオプションの&lt;a href=&quot;../sortedmap&quot;&gt; &lt;code&gt;SortedMap&lt;/code&gt; &lt;/a&gt;操作を実装します</target>
        </trans-unit>
        <trans-unit id="3e60ce6cdb39e55f6aea0270ae6050c5d468141c" translate="yes" xml:space="preserve">
          <source>The returned map is typically case-sensitive on all platforms.</source>
          <target state="translated">返されるマップは通常、すべてのプラットフォームで大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="ebb8ac95b0820624300e6c51aa32adf9bf40ac27" translate="yes" xml:space="preserve">
          <source>The returned map will be serializable if the specified map is serializable.</source>
          <target state="translated">返されたマップは、指定されたマップがシリアライズ可能な場合、シリアライズ可能になります。</target>
        </trans-unit>
        <trans-unit id="3580abdef3f87a6bd80d4bea2b490670bec97aa7" translate="yes" xml:space="preserve">
          <source>The returned map will never contain null keys or values. Attempting to query the presence of a null key or value will throw a &lt;a href=&quot;nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt;. Attempting to query the presence of a key or value which is not of type &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; will throw a &lt;a href=&quot;classcastexception&quot;&gt;&lt;code&gt;ClassCastException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるマップには、nullキーまたは値が含まれることはありません。nullキーまたは値の存在をクエリしようとすると、&lt;a href=&quot;nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;型ではないキーまたは値の存在を照会しようとすると、&lt;a href=&quot;classcastexception&quot;&gt; &lt;code&gt;ClassCastException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="186b57fc3142be2ab7c06b068233e86af34426e7" translate="yes" xml:space="preserve">
          <source>The returned map will throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; on an attempt to insert a key outside its range.</source>
          <target state="translated">返されたマップは、その範囲外にキーを挿入しようとすると &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="38495ee31c82f624af115d8608382ab49eee4275" translate="yes" xml:space="preserve">
          <source>The returned map will throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; on an attempt to insert a key outside of its range, or to construct a submap either of whose endpoints lie outside its range.</source>
          <target state="translated">返されたマップは、範囲外にキーを挿入しようとしたり、エンドポイントが範囲外にあるサブマップを作成したりしようとすると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="3b7da5ac39ea912d89eb86cf1f58a17a89487bae" translate="yes" xml:space="preserve">
          <source>The returned method handle is equivalent to &lt;code&gt;dropArguments(zero(type.returnType()), 0, type.parameterList())&lt;/code&gt;.</source>
          <target state="translated">返されるメソッドハンドルは、 &lt;code&gt;dropArguments(zero(type.returnType()), 0, type.parameterList())&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="be839b6e9781e2a92a16b75b05df60ab61f8f103" translate="yes" xml:space="preserve">
          <source>The returned method handle is equivalent to &lt;code&gt;empty(methodType(type))&lt;/code&gt;. It is also equivalent to &lt;code&gt;explicitCastArguments(constant(Object.class, null), methodType(type))&lt;/code&gt;, since &lt;code&gt;explicitCastArguments&lt;/code&gt; converts &lt;code&gt;null&lt;/code&gt; to default values.</source>
          <target state="translated">返されるメソッドハンドルは、 &lt;code&gt;empty(methodType(type))&lt;/code&gt; と同等です。また、 &lt;code&gt;explicitCastArguments&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; をデフォルト値に変換するため、 &lt;code&gt;explicitCastArguments(constant(Object.class, null), methodType(type))&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="bf341b930019b986feaa3025d94588cbf0b07082" translate="yes" xml:space="preserve">
          <source>The returned method handle is equivalent to &lt;code&gt;identity(type).bindTo(value)&lt;/code&gt;.</source>
          <target state="translated">返されるメソッドハンドルは、 &lt;code&gt;identity(type).bindTo(value)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="08c6e093f65426cb1d1abfa5dcc5c30c713506d0" translate="yes" xml:space="preserve">
          <source>The returned method handle will have &lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt;variable arity&lt;/a&gt; if and only if the constructor's variable arity modifier bit (&lt;code&gt;0x0080&lt;/code&gt;) is set.</source>
          <target state="translated">返されるメソッドハンドルは、コンストラクターの可変アリティ修飾子ビット（ &lt;code&gt;0x0080&lt;/code&gt; ）が設定されている場合にのみ、&lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt;可変アリティ&lt;/a&gt;を持ちます。</target>
        </trans-unit>
        <trans-unit id="68be879cb87a23db36e0a68951f564309bd3df0e" translate="yes" xml:space="preserve">
          <source>The returned method handle will have &lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt;variable arity&lt;/a&gt; if and only if the method's variable arity modifier bit (&lt;code&gt;0x0080&lt;/code&gt;) is set &lt;em&gt;and&lt;/em&gt; the trailing array argument is not the only argument. (If the trailing array argument is the only argument, the given receiver value will be bound to it.)</source>
          <target state="translated">返されるメソッドハンドルは、メソッドの可変アリティ修飾子ビット（ &lt;code&gt;0x0080&lt;/code&gt; ）が設定され&lt;em&gt;ていて&lt;/em&gt;、末尾の配列引数が唯一の引数ではない場合にのみ、&lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt;可変アリティ&lt;/a&gt;を持ちます。（末尾の配列引数が唯一の引数である場合、指定されたレシーバー値がそれにバインドされます。）&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="97d70a1480f82e4e58a7bae7833050abcbcd7b02" translate="yes" xml:space="preserve">
          <source>The returned method handle will have &lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt;variable arity&lt;/a&gt; if and only if the method's variable arity modifier bit (&lt;code&gt;0x0080&lt;/code&gt;) is set.</source>
          <target state="translated">返されるメソッドハンドルは、メソッドの可変アリティ修飾子ビット（ &lt;code&gt;0x0080&lt;/code&gt; ）が設定されている場合にのみ、&lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt;可変アリティ&lt;/a&gt;を持ちます。</target>
        </trans-unit>
        <trans-unit id="cf12e977e77f8c538e96bf14109eaad3316041c8" translate="yes" xml:space="preserve">
          <source>The returned method handle will have &lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;variable arity&lt;/a&gt; if and only if the constructor's variable arity modifier bit (&lt;code&gt;0x0080&lt;/code&gt;) is set.</source>
          <target state="translated">返されるメソッドハンドルは、コンストラクターの可変アリティ修飾子ビット（ &lt;code&gt;0x0080&lt;/code&gt; ）が設定されている場合にのみ、&lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;可変アリティ&lt;/a&gt;を持ちます。</target>
        </trans-unit>
        <trans-unit id="3b84ac4232d79eefcfa3e985c888ae7cb52f78ae" translate="yes" xml:space="preserve">
          <source>The returned method handle will have &lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;variable arity&lt;/a&gt; if and only if the method's variable arity modifier bit (&lt;code&gt;0x0080&lt;/code&gt;) is set &lt;em&gt;and&lt;/em&gt; the trailing array argument is not the only argument. (If the trailing array argument is the only argument, the given receiver value will be bound to it.)</source>
          <target state="translated">返されるメソッドハンドルは、メソッドの可変アリティ修飾子ビット（ &lt;code&gt;0x0080&lt;/code&gt; ）が設定され&lt;em&gt;ていて&lt;/em&gt;、末尾の配列引数が唯一の引数ではない場合にのみ、&lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;可変アリティ&lt;/a&gt;を持ちます。（末尾の配列引数が唯一の引数である場合、指定されたレシーバー値がそれにバインドされます。）&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fdb52f5efb367c3a0c6f85b8e5a561c3fd955c91" translate="yes" xml:space="preserve">
          <source>The returned method handle will have &lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;variable arity&lt;/a&gt; if and only if the method's variable arity modifier bit (&lt;code&gt;0x0080&lt;/code&gt;) is set.</source>
          <target state="translated">返されるメソッドハンドルは、メソッドの可変アリティ修飾子ビット（ &lt;code&gt;0x0080&lt;/code&gt; ）が設定されている場合にのみ、&lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;可変アリティ&lt;/a&gt;を持ちます。</target>
        </trans-unit>
        <trans-unit id="b7fc53c29677f5d1950f8b1cceaed84e97f9c71b" translate="yes" xml:space="preserve">
          <source>The returned multicaster contains all the listeners in this multicaster with the exception of all occurrences of &lt;code&gt;oldl&lt;/code&gt;. If the resulting multicaster contains only one regular listener the regular listener may be returned. If the resulting multicaster is empty, then &lt;code&gt;null&lt;/code&gt; may be returned instead.</source>
          <target state="translated">返されるマルチキャストには、 &lt;code&gt;oldl&lt;/code&gt; のすべてのオカレンスを除いて、このマルチキャストのすべてのリスナーが含まれます。結果のマルチキャストに通常のリスナーが1つしかない場合は、通常のリスナーが返されることがあります。結果のマルチキャストが空の場合、代わりに &lt;code&gt;null&lt;/code&gt; が返される場合があります。</target>
        </trans-unit>
        <trans-unit id="b799c087978df49d2fe6286478b6ecedece7b2a8" translate="yes" xml:space="preserve">
          <source>The returned navigable map will be serializable if the specified navigable map is serializable.</source>
          <target state="translated">指定されたナビゲータブル・マップがシリアライズ可能な場合、返されたナビゲータブル・マップはシリアライズ可能になります。</target>
        </trans-unit>
        <trans-unit id="63e22369ffd2f4700f3d4c6318fbd029fc94516b" translate="yes" xml:space="preserve">
          <source>The returned navigable set will be serializable if the specified navigable set is serializable.</source>
          <target state="translated">指定されたナビゲーブル・セットがシリアライズ可能な場合、返されたナビゲーブル・セットはシリアライズ可能になります。</target>
        </trans-unit>
        <trans-unit id="22109190c7021a569021e7447b7b84963fc23137" translate="yes" xml:space="preserve">
          <source>The returned number of available bytes is a hint, but not a guarantee, that it is possible to use most or any of these bytes. The number of unallocated bytes is most likely to be accurate immediately after this call. It is likely to be made inaccurate by any external I/O operations including those made on the system outside of this virtual machine. This method makes no guarantee that write operations to this file system will succeed.</source>
          <target state="translated">返される利用可能なバイト数は、これらのバイトのほとんどまたはいずれかを使用することが可能であるというヒントですが、保証するものではありません。割り当てられていないバイト数は、この呼び出しの直後に正確になる可能性が高いです。この仮想マシン以外のシステム上で行われたものも含め、外部からの I/O 操作によって不正確になる可能性があります。このメソッドは、このファイルシステムへの書き込み操作が成功することを保証するものではありません。</target>
        </trans-unit>
        <trans-unit id="37078f56cceda1a46ec4284d20998d8403b393be" translate="yes" xml:space="preserve">
          <source>The returned number of available bytes is a hint, but not a guarantee, that it is possible to use most or any of these bytes. The number of usable bytes is most likely to be accurate immediately after the space attributes are obtained. It is likely to be made inaccurate by any external I/O operations including those made on the system outside of this Java virtual machine.</source>
          <target state="translated">返される使用可能バイト数は、これらのバイトのほとんどまたはいずれかを使用可能であるというヒントであり、保証するものではありません。使用可能なバイト数は、スペース属性を取得した直後に正確になる可能性が高い。このJava仮想マシン以外のシステム上で行われたものも含め、外部のI/O操作によって不正確になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="c9ec8ab1c6179c271d12fffbe706c3b736240a28" translate="yes" xml:space="preserve">
          <source>The returned number of unallocated bytes is a hint, but not a guarantee, that it is possible to use most or any of these bytes. The number of unallocated bytes is most likely to be accurate immediately after the space attributes are obtained. It is likely to be made inaccurate by any external I/O operations including those made on the system outside of this virtual machine.</source>
          <target state="translated">返される未割り当てバイト数はヒントであり、これらのバイトのほとんどまたはいずれかを使用できることを保証するものではありません。未割り当てバイト数は、スペース属性を取得した直後に正確になる可能性が高いです。この仮想マシン以外のシステム上で行われたものも含め、外部のI/O操作によって不正確になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="4abb292a819da63fe264f4077cd386242fe657dd" translate="yes" xml:space="preserve">
          <source>The returned number of unallocated bytes is a hint, but not a guarantee, that it is possible to use most or any of these bytes. The number of unallocated bytes is most likely to be accurate immediately after this call. It is likely to be made inaccurate by any external I/O operations including those made on the system outside of this virtual machine. This method makes no guarantee that write operations to this file system will succeed.</source>
          <target state="translated">返される未割り当てバイト数はヒントであり、これらのバイトのほとんどまたはいずれかを使用できることを保証するものではありません。未割り当てバイト数は、この呼び出しの直後に正確になる可能性が高いです。この仮想マシン以外のシステム上で行われたものも含め、外部からの I/O 操作によって不正確になる可能性があります。このメソッドは、このファイルシステムへの書き込み操作が成功することを保証するものではありません。</target>
        </trans-unit>
        <trans-unit id="9bf3ae18f78108540f59e74bf023c42294fa7cf2" translate="yes" xml:space="preserve">
          <source>The returned object is unmodifiable and contains the tag names of all &lt;code&gt;TIFFTag&lt;/code&gt;s in this &lt;code&gt;TIFFTagSet&lt;/code&gt; sorted into ascending order according to &lt;a href=&quot;../../../../../java.base/java/lang/comparable#compareTo(T)&quot;&gt;&lt;code&gt;Comparable.compareTo(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるオブジェクトは変更できず、&lt;a href=&quot;../../../../../java.base/java/lang/comparable#compareTo(T)&quot;&gt; &lt;code&gt;Comparable.compareTo(Object)&lt;/code&gt; &lt;/a&gt;に従って昇順でソートされたこの &lt;code&gt;TIFFTagSet&lt;/code&gt; 内のすべての &lt;code&gt;TIFFTag&lt;/code&gt; のタグ名が含まれています。</target>
        </trans-unit>
        <trans-unit id="9e796af45c9611651ce65ec6c4b30604165ccfde" translate="yes" xml:space="preserve">
          <source>The returned object is unmodifiable and contains the tag numbers of all &lt;code&gt;TIFFTag&lt;/code&gt;s in this &lt;code&gt;TIFFTagSet&lt;/code&gt; sorted into ascending order according to &lt;a href=&quot;../../../../../java.base/java/lang/comparable#compareTo(T)&quot;&gt;&lt;code&gt;Comparable.compareTo(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるオブジェクトは変更できず、&lt;a href=&quot;../../../../../java.base/java/lang/comparable#compareTo(T)&quot;&gt; &lt;code&gt;Comparable.compareTo(Object)&lt;/code&gt; &lt;/a&gt;に従って昇順でソートされたこの &lt;code&gt;TIFFTagSet&lt;/code&gt; 内のすべての &lt;code&gt;TIFFTag&lt;/code&gt; のタグ番号が含まれています。</target>
        </trans-unit>
        <trans-unit id="492c119dd4628b39858412c60847fb3a194906f2" translate="yes" xml:space="preserve">
          <source>The returned object may be modified using ordinary &lt;a href=&quot;../util/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; operations. These modifications will be visible to subprocesses started via the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method. Two &lt;code&gt;ProcessBuilder&lt;/code&gt; instances always contain independent process environments, so changes to the returned map will never be reflected in any other &lt;code&gt;ProcessBuilder&lt;/code&gt; instance or the values returned by &lt;a href=&quot;system#getenv(java.lang.String)&quot;&gt;&lt;code&gt;System.getenv&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されたオブジェクトは、通常の&lt;a href=&quot;../util/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;操作を使用して変更できます。これらの変更は、&lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;メソッドを介して開始されたサブプロセスに表示されます。2つの &lt;code&gt;ProcessBuilder&lt;/code&gt; インスタンスには常に独立したプロセス環境が含まれているため、返されるマップへの変更が他の &lt;code&gt;ProcessBuilder&lt;/code&gt; インスタンスや&lt;a href=&quot;system#getenv(java.lang.String)&quot;&gt; &lt;code&gt;System.getenv&lt;/code&gt; &lt;/a&gt;によって返される値に反映されることはありません。</target>
        </trans-unit>
        <trans-unit id="c0e131d9f7c12cd49d0e3def257a8126d1849784" translate="yes" xml:space="preserve">
          <source>The returned object may be modified using ordinary &lt;a href=&quot;../util/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; operations. These modifications will be visible to subprocesses started via the &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method. Two &lt;code&gt;ProcessBuilder&lt;/code&gt; instances always contain independent process environments, so changes to the returned map will never be reflected in any other &lt;code&gt;ProcessBuilder&lt;/code&gt; instance or the values returned by &lt;a href=&quot;system#getenv-java.lang.String-&quot;&gt;&lt;code&gt;System.getenv&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されたオブジェクトは、通常の&lt;a href=&quot;../util/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;操作を使用して変更できます。これらの変更は、&lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;メソッドを介して開始されたサブプロセスに表示されます。2つの &lt;code&gt;ProcessBuilder&lt;/code&gt; インスタンスには常に独立したプロセス環境が含まれているため、返されたマップへの変更が他の &lt;code&gt;ProcessBuilder&lt;/code&gt; インスタンスや&lt;a href=&quot;system#getenv-java.lang.String-&quot;&gt; &lt;code&gt;System.getenv&lt;/code&gt; &lt;/a&gt;によって返された値に反映されることはありません。</target>
        </trans-unit>
        <trans-unit id="10758f1a6b50ea2e6c130aeb5c0b77e0c66fbab0" translate="yes" xml:space="preserve">
          <source>The returned object will not declare any public methods that are not declared in the &lt;a href=&quot;../../net/datagramsocket&quot;&gt;&lt;code&gt;DatagramSocket&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">返されたオブジェクトは、&lt;a href=&quot;../../net/datagramsocket&quot;&gt; &lt;code&gt;DatagramSocket&lt;/code&gt; &lt;/a&gt;クラスで宣言されていないパブリックメソッドを宣言しません。</target>
        </trans-unit>
        <trans-unit id="6661a89d64621663c740fc5bd7a203767c62c2b9" translate="yes" xml:space="preserve">
          <source>The returned object will not declare any public methods that are not declared in the &lt;a href=&quot;../../net/serversocket&quot;&gt;&lt;code&gt;ServerSocket&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">返されたオブジェクトは、&lt;a href=&quot;../../net/serversocket&quot;&gt; &lt;code&gt;ServerSocket&lt;/code&gt; &lt;/a&gt;クラスで宣言されていないパブリックメソッドを宣言しません。</target>
        </trans-unit>
        <trans-unit id="b4f4ca2ce4cf8222c87458553d37b2d17a03fa4b" translate="yes" xml:space="preserve">
          <source>The returned object will not declare any public methods that are not declared in the &lt;a href=&quot;../../net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">返されたオブジェクトは、&lt;a href=&quot;../../net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt;クラスで宣言されていないパブリックメソッドを宣言しません。</target>
        </trans-unit>
        <trans-unit id="0472b263351c4d126d5ea013a83e7af5df81b296" translate="yes" xml:space="preserve">
          <source>The returned parameter object must be initialized via a call to &lt;code&gt;init&lt;/code&gt;, using an appropriate parameter specification or parameter encoding.</source>
          <target state="translated">返されたパラメーターオブジェクトは、適切なパラメーター仕様またはパラメーターエンコーディングを使用して、 &lt;code&gt;init&lt;/code&gt; の呼び出しを介して初期化する必要があります。</target>
        </trans-unit>
        <trans-unit id="47dc492778d2d3b5a2a328f21d3d9313d13e099e" translate="yes" xml:space="preserve">
          <source>The returned parameters can be typecast to a &lt;a href=&quot;spec/c14nmethodparameterspec&quot;&gt;&lt;code&gt;C14NMethodParameterSpec&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">返されるパラメーターは、&lt;a href=&quot;spec/c14nmethodparameterspec&quot;&gt; &lt;code&gt;C14NMethodParameterSpec&lt;/code&gt; &lt;/a&gt;オブジェクトにタイプキャストできます。</target>
        </trans-unit>
        <trans-unit id="3ddc417851bcf3ea126e833b688c0a6913e44637" translate="yes" xml:space="preserve">
          <source>The returned parameters can be typecast to a &lt;a href=&quot;spec/digestmethodparameterspec&quot;&gt;&lt;code&gt;DigestMethodParameterSpec&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">返されるパラメーターは、&lt;a href=&quot;spec/digestmethodparameterspec&quot;&gt; &lt;code&gt;DigestMethodParameterSpec&lt;/code&gt; &lt;/a&gt;オブジェクトにタイプキャストできます。</target>
        </trans-unit>
        <trans-unit id="83acc9ac6764336702eb89931e745c9306c55b1b" translate="yes" xml:space="preserve">
          <source>The returned parameters can be typecast to a &lt;a href=&quot;spec/signaturemethodparameterspec&quot;&gt;&lt;code&gt;SignatureMethodParameterSpec&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">返されるパラメーターは、&lt;a href=&quot;spec/signaturemethodparameterspec&quot;&gt; &lt;code&gt;SignatureMethodParameterSpec&lt;/code&gt; &lt;/a&gt;オブジェクトにタイプキャストできます。</target>
        </trans-unit>
        <trans-unit id="27e366a23cd79e1859b47622e908ca1f0d6b5314" translate="yes" xml:space="preserve">
          <source>The returned parameters can be typecast to a &lt;a href=&quot;spec/transformparameterspec&quot;&gt;&lt;code&gt;TransformParameterSpec&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">返されるパラメーターは、&lt;a href=&quot;spec/transformparameterspec&quot;&gt; &lt;code&gt;TransformParameterSpec&lt;/code&gt; &lt;/a&gt;オブジェクトにタイプキャストできます。</target>
        </trans-unit>
        <trans-unit id="4df3bd992ed9cf08b8043aa23cc9ef35cfb0d899" translate="yes" xml:space="preserve">
          <source>The returned parameters may be the same that were used to initialize this cipher, or may contain a combination of default and random parameter values used by the underlying cipher implementation if this cipher requires algorithm parameters but was not initialized with any.</source>
          <target state="translated">返されるパラメータは、この暗号の初期化に使用されたものと同じか、この暗号がアルゴリズムパラメータを必要としているにもかかわらず初期化されていない場合は、基礎となる暗号の実装で使用されるデフォルトパラメータとランダムパラメータの組み合わせが含まれているかもしれません。</target>
        </trans-unit>
        <trans-unit id="752ffb538b7e9750a71c7c4cf9e60e4eee90c425" translate="yes" xml:space="preserve">
          <source>The returned parameters may be the same that were used to initialize this signature engine, or may contain a combination of default and randomly generated parameter values used by the underlying signature implementation if this signature engine requires algorithm parameters but was not initialized with any.</source>
          <target state="translated">返されるパラメータは、このシグネチャエンジンの初期化に使用されたものと同じであってもよいし、このシグネチャエンジンがアルゴリズムパラメータを必要とするが、何も初期化されていない場合には、基礎となるシグネチャ実装によって使用されるデフォルトのパラメータ値とランダムに生成されたパラメータ値の組み合わせを含んでいてもよい。</target>
        </trans-unit>
        <trans-unit id="e45bd612510ae15a9437f55deeaebac11cc09c8c" translate="yes" xml:space="preserve">
          <source>The returned parameters may be the same that were used to initialize this signature, or may contain a combination of default and randomly generated parameter values used by the underlying signature implementation if this signature requires algorithm parameters but was not initialized with any.</source>
          <target state="translated">返されるパラメータは、このシグネチャを初期化するために使用されたものと同じであってもよいし、このシグネチャがアルゴリズムパラメータを必要とするが、何も初期化されていない場合には、基礎となるシグネチャの実装で使用されるデフォルトのパラメータ値とランダムに生成されたパラメータ値の組み合わせを含んでいてもよい。</target>
        </trans-unit>
        <trans-unit id="1c3309fd588c4ac6caa981d38e4c41575c42f8ec" translate="yes" xml:space="preserve">
          <source>The returned path string uses the default name &lt;a href=&quot;filesystem#getSeparator()&quot;&gt;&lt;code&gt;separator&lt;/code&gt;&lt;/a&gt; to separate names in the path.</source>
          <target state="translated">返されるパス文字列は、デフォルトの名前&lt;a href=&quot;filesystem#getSeparator()&quot;&gt; &lt;code&gt;separator&lt;/code&gt; &lt;/a&gt;文字を使用して、パス内の名前を区切ります。</target>
        </trans-unit>
        <trans-unit id="31a706d9a79d6d8447286cc51c0dbac2857f3fb0" translate="yes" xml:space="preserve">
          <source>The returned path string uses the default name &lt;a href=&quot;filesystem#getSeparator--&quot;&gt;&lt;code&gt;separator&lt;/code&gt;&lt;/a&gt; to separate names in the path.</source>
          <target state="translated">返されるパス文字列は、デフォルトの名前&lt;a href=&quot;filesystem#getSeparator--&quot;&gt; &lt;code&gt;separator&lt;/code&gt; &lt;/a&gt;文字を使用してパス内の名前を区切ります。</target>
        </trans-unit>
        <trans-unit id="adf31a0a552eb3e572f95b3b75985ef817599500" translate="yes" xml:space="preserve">
          <source>The returned period is immutable and thread-safe.</source>
          <target state="translated">返される期間は不変であり、スレッドセーフです。</target>
        </trans-unit>
        <trans-unit id="0fc1b4afe410c4184d3ee0067023a81a530b2ac3" translate="yes" xml:space="preserve">
          <source>The returned queue will be serializable if the specified queue is serializable.</source>
          <target state="translated">返されたキューは、指定されたキューがシリアライズ可能な場合、シリアライズ可能になります。</target>
        </trans-unit>
        <trans-unit id="be45c831c6cb6ad3b20e650176014c1026fccd42" translate="yes" xml:space="preserve">
          <source>The returned set has an ordering equivalent to &lt;a href=&quot;../collections#reverseOrder(java.util.Comparator)&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(comparator())&lt;/code&gt;. The expression &lt;code&gt;s.descendingSet().descendingSet()&lt;/code&gt; returns a view of &lt;code&gt;s&lt;/code&gt; essentially equivalent to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">返されるセットには、&lt;a href=&quot;../collections#reverseOrder(java.util.Comparator)&quot;&gt; &lt;code&gt;Collections.reverseOrder&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(comparator())&lt;/code&gt; と同等の順序があります。式 &lt;code&gt;s.descendingSet().descendingSet()&lt;/code&gt; は、本質的に &lt;code&gt;s&lt;/code&gt; と同等の &lt;code&gt;s&lt;/code&gt; のビューを返します。</target>
        </trans-unit>
        <trans-unit id="4e3b490a0b68921e5f2d54982954ae5db0e3015e" translate="yes" xml:space="preserve">
          <source>The returned set has an ordering equivalent to &lt;a href=&quot;../collections#reverseOrder-java.util.Comparator-&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(comparator())&lt;/code&gt;. The expression &lt;code&gt;s.descendingSet().descendingSet()&lt;/code&gt; returns a view of &lt;code&gt;s&lt;/code&gt; essentially equivalent to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">返されるセットには、&lt;a href=&quot;../collections#reverseOrder-java.util.Comparator-&quot;&gt; &lt;code&gt;Collections.reverseOrder&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(comparator())&lt;/code&gt; と同等の順序があります。式 &lt;code&gt;s.descendingSet().descendingSet()&lt;/code&gt; は、本質的に &lt;code&gt;s&lt;/code&gt; と同等の &lt;code&gt;s&lt;/code&gt; のビューを返します。</target>
        </trans-unit>
        <trans-unit id="377684bc5b679d5593f89c67fdae0d1615f86030" translate="yes" xml:space="preserve">
          <source>The returned set has an ordering equivalent to &lt;a href=&quot;collections#reverseOrder(java.util.Comparator)&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(comparator())&lt;/code&gt;. The expression &lt;code&gt;s.descendingSet().descendingSet()&lt;/code&gt; returns a view of &lt;code&gt;s&lt;/code&gt; essentially equivalent to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">返されるセットには、&lt;a href=&quot;collections#reverseOrder(java.util.Comparator)&quot;&gt; &lt;code&gt;Collections.reverseOrder&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(comparator())&lt;/code&gt; と同等の順序があります。式 &lt;code&gt;s.descendingSet().descendingSet()&lt;/code&gt; は、本質的に &lt;code&gt;s&lt;/code&gt; と同等の &lt;code&gt;s&lt;/code&gt; のビューを返します。</target>
        </trans-unit>
        <trans-unit id="f3e0a450b88e9e02addbc6c115aa54b248453093" translate="yes" xml:space="preserve">
          <source>The returned set has an ordering equivalent to &lt;code&gt;&lt;a href=&quot;collections#reverseOrder-java.util.Comparator-&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;(comparator())&lt;/code&gt;. The expression &lt;code&gt;s.descendingSet().descendingSet()&lt;/code&gt; returns a view of &lt;code&gt;s&lt;/code&gt; essentially equivalent to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">返されるセットには、 &lt;code&gt;&lt;a href=&quot;collections#reverseOrder-java.util.Comparator-&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;(comparator())&lt;/code&gt; と同等の順序があります。式 &lt;code&gt;s.descendingSet().descendingSet()&lt;/code&gt; は、本質的に &lt;code&gt;s&lt;/code&gt; と同等の &lt;code&gt;s&lt;/code&gt; のビューを返します。</target>
        </trans-unit>
        <trans-unit id="220883a1d6410f4ba7ef330e4aa7ccfbc79da085" translate="yes" xml:space="preserve">
          <source>The returned set is a modifiable copy of the flags.</source>
          <target state="translated">返されるセットは、フラグの変更可能なコピーです。</target>
        </trans-unit>
        <trans-unit id="c5cb0f1cda390591cbbfdd982f4f651a475f6f50" translate="yes" xml:space="preserve">
          <source>The returned set is a modifiable copy of the permissions.</source>
          <target state="translated">返されるセットは、パーミッションの変更可能なコピーです。</target>
        </trans-unit>
        <trans-unit id="130457322e83b65d75a40390b0669abbd4a7d5d4" translate="yes" xml:space="preserve">
          <source>The returned set is not backed by the &lt;code&gt;Properties&lt;/code&gt; object. Changes to this &lt;code&gt;Properties&lt;/code&gt; are not reflected in the set, or vice versa.</source>
          <target state="translated">返されたセットは、 &lt;code&gt;Properties&lt;/code&gt; オブジェクトによってサポートされていません。この &lt;code&gt;Properties&lt;/code&gt; への変更はセットに反映されず、その逆も同様です。</target>
        </trans-unit>
        <trans-unit id="109db5fe06aff8f3e5ce1040e372e7064c0c41dd" translate="yes" xml:space="preserve">
          <source>The returned set is not backed by this &lt;code&gt;Properties&lt;/code&gt; object. Changes to this &lt;code&gt;Properties&lt;/code&gt; object are not reflected in the returned set.</source>
          <target state="translated">返されたセットは、この &lt;code&gt;Properties&lt;/code&gt; オブジェクトによってサポートされていません。この &lt;code&gt;Properties&lt;/code&gt; オブジェクトへの変更は、返されるセットには反映されません。</target>
        </trans-unit>
        <trans-unit id="3e9bbc6259b7b305420033286153988e609e2dfe" translate="yes" xml:space="preserve">
          <source>The returned set will be serializable if the specified set is serializable.</source>
          <target state="translated">返されたセットは、指定されたセットがシリアライズ可能な場合、シリアライズ可能なセットになります。</target>
        </trans-unit>
        <trans-unit id="6add43a3d565273146ff21959e52c46e37133f8b" translate="yes" xml:space="preserve">
          <source>The returned set will throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; on an attempt to insert an element outside its range.</source>
          <target state="translated">返されたセットは、その範囲外に要素を挿入しようとすると &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="08dbebf4ee48b0815ada6801ab8ff9946c69da0f" translate="yes" xml:space="preserve">
          <source>The returned socket is configured using the socket options established for this factory, and is set to use server mode when handshaking (see &lt;a href=&quot;sslsocket#setUseClientMode(boolean)&quot;&gt;&lt;code&gt;SSLSocket.setUseClientMode(boolean)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">返されるソケットは、このファクトリ用に確立されたソケットオプションを使用して構成され、ハンドシェイク時にサーバーモードを使用するように設定されます（&lt;a href=&quot;sslsocket#setUseClientMode(boolean)&quot;&gt; &lt;code&gt;SSLSocket.setUseClientMode(boolean)&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="36ef4c7e56e059e7cc6ecb7f25266519a33c9874" translate="yes" xml:space="preserve">
          <source>The returned socket is configured using the socket options established for this factory, and is set to use server mode when handshaking (see &lt;a href=&quot;sslsocket#setUseClientMode-boolean-&quot;&gt;&lt;code&gt;SSLSocket.setUseClientMode(boolean)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">返されるソケットは、このファクトリ用に確立されたソケットオプションを使用して構成され、ハンドシェイク時にサーバーモードを使用するように設定されます（&lt;a href=&quot;sslsocket#setUseClientMode-boolean-&quot;&gt; &lt;code&gt;SSLSocket.setUseClientMode(boolean)&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="8f90f95fa6a4a814b30bb64a73971367f5cea036" translate="yes" xml:space="preserve">
          <source>The returned sorted map will be serializable if the specified sorted map is serializable.</source>
          <target state="translated">返されたソートマップは、指定されたソートマップがシリアライズ可能な場合にシリアライズ可能になります。</target>
        </trans-unit>
        <trans-unit id="84b2dfe035ba12d83875affd06b6d4712350f778" translate="yes" xml:space="preserve">
          <source>The returned sorted set will be serializable if the specified sorted set is serializable.</source>
          <target state="translated">返されたソートセットは、指定されたソートセットがシリアライズ可能な場合にシリアライズ可能になります。</target>
        </trans-unit>
        <trans-unit id="0daff3577dae1f88c6b38a7fd8e4b3abd97adeb1" translate="yes" xml:space="preserve">
          <source>The returned spliterator always reports the characteristics &lt;code&gt;SIZED&lt;/code&gt; and &lt;code&gt;SUBSIZED&lt;/code&gt;. The caller may provide additional characteristics for the spliterator to report. (For example, if it is known the array will not be further modified, specify &lt;code&gt;IMMUTABLE&lt;/code&gt;; if the array data is considered to have an an encounter order, specify &lt;code&gt;ORDERED&lt;/code&gt;). The method &lt;a href=&quot;arrays#spliterator-long:A-int-int-&quot;&gt;&lt;code&gt;Arrays.spliterator(long[], int, int)&lt;/code&gt;&lt;/a&gt; can often be used instead, which returns a spliterator that reports &lt;code&gt;SIZED&lt;/code&gt;, &lt;code&gt;SUBSIZED&lt;/code&gt;, &lt;code&gt;IMMUTABLE&lt;/code&gt;, and &lt;code&gt;ORDERED&lt;/code&gt;.</source>
          <target state="translated">返されたスプリッターは常に特性 &lt;code&gt;SIZED&lt;/code&gt; および &lt;code&gt;SUBSIZED&lt;/code&gt; を報告します。呼び出し元は、スプリテレーターが報告する追加の特性を提供できます。 （たとえば、配列がさらに変更されないことがわかっている場合は、 &lt;code&gt;IMMUTABLE&lt;/code&gt; を指定します。配列データが遭遇順序を持つと見なされる場合は、 &lt;code&gt;ORDERED&lt;/code&gt; を指定します）。&lt;a href=&quot;arrays#spliterator-long:A-int-int-&quot;&gt; &lt;code&gt;Arrays.spliterator(long[], int, int)&lt;/code&gt; &lt;/a&gt;メソッドがよく使用され、 &lt;code&gt;SIZED&lt;/code&gt; 、 &lt;code&gt;SUBSIZED&lt;/code&gt; 、 &lt;code&gt;IMMUTABLE&lt;/code&gt; 、 &lt;code&gt;ORDERED&lt;/code&gt; を報告するスプリッターを返します。</target>
        </trans-unit>
        <trans-unit id="e608e572bf2565a5091c6b2b59f30af46dea54ce" translate="yes" xml:space="preserve">
          <source>The returned spliterator always reports the characteristics &lt;code&gt;SIZED&lt;/code&gt; and &lt;code&gt;SUBSIZED&lt;/code&gt;. The caller may provide additional characteristics for the spliterator to report. (For example, if it is known the array will not be further modified, specify &lt;code&gt;IMMUTABLE&lt;/code&gt;; if the array data is considered to have an encounter order, specify &lt;code&gt;ORDERED&lt;/code&gt;). The method &lt;a href=&quot;arrays#spliterator(long%5B%5D,int,int)&quot;&gt;&lt;code&gt;Arrays.spliterator(long[], int, int)&lt;/code&gt;&lt;/a&gt; can often be used instead, which returns a spliterator that reports &lt;code&gt;SIZED&lt;/code&gt;, &lt;code&gt;SUBSIZED&lt;/code&gt;, &lt;code&gt;IMMUTABLE&lt;/code&gt;, and &lt;code&gt;ORDERED&lt;/code&gt;.</source>
          <target state="translated">返されるスプリッターは、常に特性 &lt;code&gt;SIZED&lt;/code&gt; および &lt;code&gt;SUBSIZED&lt;/code&gt; を報告します。呼び出し元は、スプリッターが報告する追加の特性を提供する場合があります。（たとえば、配列がそれ以上変更されないことがわかっている場合は、 &lt;code&gt;IMMUTABLE&lt;/code&gt; を指定します。配列データに遭遇順序があると見なされる場合は、 &lt;code&gt;ORDERED&lt;/code&gt; を指定します）。&lt;a href=&quot;arrays#spliterator(long%5B%5D,int,int)&quot;&gt; &lt;code&gt;Arrays.spliterator(long[], int, int)&lt;/code&gt; &lt;/a&gt;メソッドを代わりに使用できることがよくあり &lt;code&gt;ORDERED&lt;/code&gt; 。この &lt;code&gt;IMMUTABLE&lt;/code&gt; 、 &lt;code&gt;SIZED&lt;/code&gt; 、 &lt;code&gt;SUBSIZED&lt;/code&gt; 、IMMUTABLE、およびORDEREDを報告するスプリッターを返します。</target>
        </trans-unit>
        <trans-unit id="3f1d245446dcb633ef538a6c950f3a6bc13a27b6" translate="yes" xml:space="preserve">
          <source>The returned spliterator always reports the characteristics &lt;code&gt;SIZED&lt;/code&gt; and &lt;code&gt;SUBSIZED&lt;/code&gt;. The caller may provide additional characteristics for the spliterator to report; it is common to additionally specify &lt;code&gt;IMMUTABLE&lt;/code&gt; and &lt;code&gt;ORDERED&lt;/code&gt;.</source>
          <target state="translated">返されたスプリッターは常に特性 &lt;code&gt;SIZED&lt;/code&gt; および &lt;code&gt;SUBSIZED&lt;/code&gt; を報告します。呼び出し元は、スプリテレーターが報告する追加の特性を提供できます。さらに、 &lt;code&gt;IMMUTABLE&lt;/code&gt; および &lt;code&gt;ORDERED&lt;/code&gt; を指定するのが一般的です。</target>
        </trans-unit>
        <trans-unit id="448ee2ba55f195d0baa345b55208a1fe5ff52b70" translate="yes" xml:space="preserve">
          <source>The returned spliterator is &lt;a href=&quot;package-summary#Weakly&quot;&gt;&lt;i&gt;weakly consistent&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">返されたスプリッターは&lt;a href=&quot;package-summary#Weakly&quot;&gt;&lt;i&gt;一貫性&lt;/i&gt;&lt;/a&gt;が&lt;i&gt;弱い&lt;/i&gt;です。</target>
        </trans-unit>
        <trans-unit id="6f2400d7a2aaaa17fc5812d2a385fbf8098fa7b6" translate="yes" xml:space="preserve">
          <source>The returned spliterator should report the set of characteristics derived from the stream pipeline (namely the characteristics derived from the stream source spliterator and the intermediate operations). Implementations may report a sub-set of those characteristics. For example, it may be too expensive to compute the entire set for some or all possible stream pipelines.</source>
          <target state="translated">返されたスプリッタは、ストリームパイプラインに由来する特性のセット(すなわち、ストリームソーススプリッタと中間演算に由来する特性)を報告することが望ましい。実装は、それらの特性のサブセットを報告してもよい。例えば、いくつかまたはすべての可能性のあるストリームパイプラインのためにセット全体を計算するのはコストがかかりすぎるかもしれない。</target>
        </trans-unit>
        <trans-unit id="39320309f6acb1e293c4b0f88be30f7d21cd9419" translate="yes" xml:space="preserve">
          <source>The returned stream contains a reference to an open directory. The directory is closed by closing the stream.</source>
          <target state="translated">返されるストリームには、開いているディレクトリへの参照が含まれています。ディレクトリはストリームを閉じることで閉じられます。</target>
        </trans-unit>
        <trans-unit id="7b8591462e635ab93bf50430fdf54a1ccdf66f0b" translate="yes" xml:space="preserve">
          <source>The returned stream contains a reference to an open file. The file is closed by closing the stream.</source>
          <target state="translated">返されるストリームには、開いているファイルへの参照が含まれています。ファイルはストリームを閉じることで閉じられます。</target>
        </trans-unit>
        <trans-unit id="d2ceba9dd83dd39b4220abff8b7e79783a77866b" translate="yes" xml:space="preserve">
          <source>The returned stream contains references to one or more open directories. The directories are closed by closing the stream.</source>
          <target state="translated">返されるストリームには、1 つ以上の開いているディレクトリへの参照が含まれます。ディレクトリは、ストリームを閉じることで閉じられます。</target>
        </trans-unit>
        <trans-unit id="17f6fef10c7c1d7faa5f4bb6d1cad19315fbac4b" translate="yes" xml:space="preserve">
          <source>The returned stream encapsulates a &lt;a href=&quot;../../io/reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt;. If timely disposal of file system resources is required, the try-with-resources construct should be used to ensure that the stream's &lt;a href=&quot;../../util/stream/basestream#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method is invoked after the stream operations are completed.</source>
          <target state="translated">返されたストリームは&lt;a href=&quot;../../io/reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; を&lt;/a&gt;カプセル化します。ファイルシステムリソースをタイムリーに破棄する必要がある場合は、try-with-resourcesコンストラクトを使用して、ストリーム操作の完了後にストリームの&lt;a href=&quot;../../util/stream/basestream#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="1ddd602fbd78f0cc6b843db33e616208261076d4" translate="yes" xml:space="preserve">
          <source>The returned stream encapsulates a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt;. If timely disposal of file system resources is required, the &lt;code&gt;try&lt;/code&gt;-with-resources construct should be used to ensure that the stream's &lt;a href=&quot;../../util/stream/basestream#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method is invoked after the stream operations are completed.</source>
          <target state="translated">返されたストリームは&lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; を&lt;/a&gt;カプセル化します。ファイルシステムリソースをタイムリーに破棄する必要がある場合は、 &lt;code&gt;try&lt;/code&gt; -with-resourcesコンストラクトを使用して、ストリーム操作の完了後にストリームの&lt;a href=&quot;../../util/stream/basestream#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="5d94964406c818caac85b35a4e7cb8afabde4f74" translate="yes" xml:space="preserve">
          <source>The returned stream encapsulates one or more &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt;s. If timely disposal of file system resources is required, the &lt;code&gt;try&lt;/code&gt;-with-resources construct should be used to ensure that the stream's &lt;a href=&quot;../../util/stream/basestream#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method is invoked after the stream operations are completed. Operating on a closed stream will result in an &lt;a href=&quot;../../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されたストリームは、1つ以上の&lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; を&lt;/a&gt;カプセル化します。ファイルシステムリソースをタイムリーに破棄する必要がある場合は、 &lt;code&gt;try&lt;/code&gt; -with-resourcesコンストラクトを使用して、ストリーム操作の完了後にストリームの&lt;a href=&quot;../../util/stream/basestream#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されるようにする必要があります。閉じたストリームを操作すると、&lt;a href=&quot;../../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="0a3477259359f64c96ff7a386ac7319ab96e368d" translate="yes" xml:space="preserve">
          <source>The returned string corresponds to the single-string representation of a Kerberos Principal name as specified in Section 2.1 of &lt;a href=&quot;http://www.ietf.org/rfc/rfc1964.txt&quot;&gt;RFC 1964&lt;/a&gt;.</source>
          <target state="translated">返される文字列は、&lt;a href=&quot;http://www.ietf.org/rfc/rfc1964.txt&quot;&gt;RFC 1964の&lt;/a&gt;セクション2.1で指定されているKerberosプリンシパル名の単一文字列表現に対応しています。</target>
        </trans-unit>
        <trans-unit id="f1a1f202277c175f03aecd904b2c2e11e846fece" translate="yes" xml:space="preserve">
          <source>The returned subscriber delegates its &lt;a href=&quot;httpresponse.bodysubscriber#getBody()&quot;&gt;&lt;code&gt;getBody()&lt;/code&gt;&lt;/a&gt; method to the downstream subscriber.</source>
          <target state="translated">返されたサブスクライバーは、&lt;a href=&quot;httpresponse.bodysubscriber#getBody()&quot;&gt; &lt;code&gt;getBody()&lt;/code&gt; &lt;/a&gt;メソッドをダウンストリームサブスクライバーに委任します。</target>
        </trans-unit>
        <trans-unit id="65a647177496c8d5054ff3cb3925fa8f89b66ac7" translate="yes" xml:space="preserve">
          <source>The returned system identifier is always &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">返されるシステム識別子は常に &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e0df4196fa6df65f0d8f0e826fb8a455f9827860" translate="yes" xml:space="preserve">
          <source>The returned value can be different from the &lt;code&gt;SecureRandomParameters&lt;/code&gt; object passed into a &lt;code&gt;getInstance&lt;/code&gt; method, but it cannot change during the lifetime of this &lt;code&gt;SecureRandom&lt;/code&gt; object.</source>
          <target state="translated">戻り値は、 &lt;code&gt;getInstance&lt;/code&gt; メソッドに渡される &lt;code&gt;SecureRandomParameters&lt;/code&gt; オブジェクトとは異なる場合がありますが、この &lt;code&gt;SecureRandom&lt;/code&gt; オブジェクトの存続期間中は変更できません。</target>
        </trans-unit>
        <trans-unit id="655c3437b11ed617a579abf2fa9ff34b511b4b98" translate="yes" xml:space="preserve">
          <source>The returned value consists of a quote ('&quot;'), a sequence of characters corresponding to the characters of &lt;code&gt;s&lt;/code&gt;, and another quote. Characters in &lt;code&gt;s&lt;/code&gt; appear unchanged within the returned value except:</source>
          <target state="translated">戻り値は、引用符（ '&quot;'）、 &lt;code&gt;s&lt;/code&gt; の文字に対応する文字のシーケンス、および別の引用符で構成されます。sの文字は、次 &lt;code&gt;s&lt;/code&gt; 場合を除いて、戻り値内で変更されずに表示されます。</target>
        </trans-unit>
        <trans-unit id="e492071d6dc92885ae84e7ac0ea668a268c3161b" translate="yes" xml:space="preserve">
          <source>The returned value is a hint, rather than a guarantee, because the underlying operating system may have paged out some of the buffer's data by the time that an invocation of this method returns.</source>
          <target state="translated">このメソッドの呼び出しが返されるまでに、 オペレーティングシステムがバッファのデータの一部をページアウトしている可能性があるため、 返される値は保証ではなくヒントです。</target>
        </trans-unit>
        <trans-unit id="87f3edcf1a031a34eab7ff35463ec7ac1c19de38" translate="yes" xml:space="preserve">
          <source>The returned value may be unmodifiable. If it is modifiable, changing it has no effect on this ObjectName.</source>
          <target state="translated">返される値は変更できない場合があります。変更可能な場合、それを変更してもこの ObjectName には何の影響もありません。</target>
        </trans-unit>
        <trans-unit id="2ea1bfc4ee9b99c8f427dd634732ade255abe11d" translate="yes" xml:space="preserve">
          <source>The returned value may or may not be identical to &lt;code&gt;name&lt;/code&gt;. Calling this method twice with the same parameters may return the same object or two equal but not identical objects.</source>
          <target state="translated">戻り値は &lt;code&gt;name&lt;/code&gt; と同じ場合も、そうでない場合もあります。同じパラメーターでこのメソッドを2回呼び出すと、同じオブジェクトまたは2つの等しいが同一ではないオブジェクトが返される場合があります。</target>
        </trans-unit>
        <trans-unit id="0d51a48610ecce7391c6a83d6ba1a127d5dea1ff" translate="yes" xml:space="preserve">
          <source>The returned value represents the maximum column size for the given parameter. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. 0 is returned for data types where the column size is not applicable.</source>
          <target state="translated">返される値は、指定されたパラメータの最大列サイズを表します。数値データの場合、これは最大精度です。文字データの場合、これは文字単位の長さです。データ型が時刻データ型の場合、これは文字列表現の長さです(小数の秒成分の最大許容精度を想定しています)。バイナリ・データの場合、これはバイト単位の長さです。ROWIDデータ型の場合、これはバイト単位の長さです。列サイズが適用されないデータ型の場合、0 が返されます。</target>
        </trans-unit>
        <trans-unit id="f40fbf63a5d2b277e35cf6ac3daf6ae7ec5474ac" translate="yes" xml:space="preserve">
          <source>The returned versions remain available and valid for the lifetime of the application. A dynamic provider may increase the set of versions as more data becomes available.</source>
          <target state="translated">返されたバージョンは、利用可能なままで、アプリケーションの有効期間中は有効です。動的なプロバイダは、より多くのデータが利用可能になるとバージョンのセットを増やすことができます。</target>
        </trans-unit>
        <trans-unit id="37fa82a55b240bd660f3e3d8cef39a1191e27f3f" translate="yes" xml:space="preserve">
          <source>The returned zone IDs remain available and valid for the lifetime of the application. A dynamic provider may increase the set of IDs as more data becomes available.</source>
          <target state="translated">返されたゾーンIDは、利用可能なままであり、アプリケーションの有効期間中は有効である。動的なプロバイダは、利用可能なデータが増えれば、IDのセットを増やすことができます。</target>
        </trans-unit>
        <trans-unit id="ce5b7000f5b21a055cbac4854384a1e8094660e0" translate="yes" xml:space="preserve">
          <source>The returns a normalized &lt;code&gt;ZoneId&lt;/code&gt; that can be used in place of this ID. The result will have &lt;code&gt;ZoneRules&lt;/code&gt; equivalent to those returned by this object, however the ID returned by &lt;code&gt;getId()&lt;/code&gt; may be different.</source>
          <target state="translated">は、このIDの代わりに使用できる正規化された &lt;code&gt;ZoneId&lt;/code&gt; を返します。結果には、このオブジェクトによって返されるものと同等の &lt;code&gt;ZoneRules&lt;/code&gt; がありますが、 &lt;code&gt;getId()&lt;/code&gt; によって返されるIDは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="36bbd913f2a35dc1f4e96953ef2e235b576a9f17" translate="yes" xml:space="preserve">
          <source>The reverberation parameters provided by &lt;code&gt;ReverbType&lt;/code&gt; consist of the delay time and intensity of early reflections, the delay time and intensity of late reflections, and an overall decay time. Early reflections are the initial individual low-order reflections of the direct signal off the surfaces in the room. The late Reflections are the dense, high-order reflections that characterize the room's reverberation. The delay times for the start of these two reflection types give the listener a sense of the overall size and complexity of the room's shape and contents. The larger the room, the longer the reflection delay times. The early and late reflections' intensities define the gain (in decibels) of the reflected signals as compared to the direct signal. These intensities give the listener an impression of the absorptive nature of the surfaces and objects in the room. The decay time defines how long the reverberation takes to exponentially decay until it is no longer perceptible (&quot;effective zero&quot;). The larger and less absorbent the surfaces, the longer the decay time.</source>
          <target state="translated">&lt;code&gt;ReverbType&lt;/code&gt; によって提供される残響パラメーターは、初期反射の遅延時間と強度、遅延反射の遅延時間と強度、および全体的な減衰時間で構成されます。初期反射は、部屋の表面からの直接信号の最初の個々の低次反射です。後期リフレクションは、部屋の残響を特徴付ける高密度の高次のリフレクションです。これら2つの反射タイプの開始の遅延時間は、部屋の形状と内容の全体的なサイズと複雑さの感覚をリスナーに提供します。部屋が大きいほど、反射遅延時間が長くなります。初期反射と後期反射の強度は、直接信号と比較した反射信号のゲイン（デシベル単位）を定義します。これらの強度は、リスナーに部屋の表面とオブジェクトの吸収性の性質の印象を与えます。減衰時間は、残響が知覚できなくなるまで（「実効ゼロ」）、残響が指数関数的に減衰するのにかかる時間を定義します。表面が大きく、吸収性が低いほど、減衰時間は長くなります。</target>
        </trans-unit>
        <trans-unit id="b9b984f130a384b4996712c3a39651b3107b8463" translate="yes" xml:space="preserve">
          <source>The reverberation parameters provided by &lt;code&gt;ReverbType&lt;/code&gt; consist of the delay time and intensity of early reflections, the delay time and intensity of late reflections, and an overall decay time. Early reflections are the initial individual low-order reflections of the direct signal off the surfaces in the room. The late reflections are the dense, high-order reflections that characterize the room's reverberation. The delay times for the start of these two reflection types give the listener a sense of the overall size and complexity of the room's shape and contents. The larger the room, the longer the reflection delay times. The early and late reflections' intensities define the gain (in decibels) of the reflected signals as compared to the direct signal. These intensities give the listener an impression of the absorptive nature of the surfaces and objects in the room. The decay time defines how long the reverberation takes to exponentially decay until it is no longer perceptible (&quot;effective zero&quot;). The larger and less absorbent the surfaces, the longer the decay time.</source>
          <target state="translated">&lt;code&gt;ReverbType&lt;/code&gt; によって提供される残響パラメーター初期反射の遅延時間と強度、後期反射の遅延時間と強度、および全体的な減衰時間で構成されます。初期反射は、部屋の表面からの直接信号の最初の個々の低次反射です。遅い反射は、部屋の残響を特徴付ける高密度の高次反射です。これら2つの反射タイプの開始の遅延時間は、リスナーに部屋の形状と内容の全体的なサイズと複雑さの感覚を与えます。部屋が大きいほど、反射遅延時間が長くなります。初期反射と後期反射の強度は、直接信号と比較した場合の反射信号のゲイン（デシベル単位）を定義します。これらの強度は、リスナーに部屋の表面や物体の吸収性の印象を与えます。減衰時間は、残響が知覚できなくなるまで指数関数的に減衰するまでにかかる時間を定義します（「実効ゼロ」）。表面が大きく吸収性が低いほど、減衰時間が長くなります。</target>
        </trans-unit>
        <trans-unit id="2c7630f4923d39844ce7c44d0bac8d9004f68f3b" translate="yes" xml:space="preserve">
          <source>The reverse mapping is illustrated by the following change to the &lt;code&gt;ModuleMXBean&lt;/code&gt; interface:</source>
          <target state="translated">逆のマッピングは、 &lt;code&gt;ModuleMXBean&lt;/code&gt; インターフェースに対する次の変更によって示されています。</target>
        </trans-unit>
        <trans-unit id="4492356e6ba71c3c852cf9939e4f74a8d7a573fe" translate="yes" xml:space="preserve">
          <source>The revocation status of the certificate could not be determined.</source>
          <target state="translated">証明書の失効状況を判断することはできませんでした。</target>
        </trans-unit>
        <trans-unit id="119ef6d6012154c68b97d88f0635440451102e2a" translate="yes" xml:space="preserve">
          <source>The right inset of the border.</source>
          <target state="translated">ボーダーの右インセット。</target>
        </trans-unit>
        <trans-unit id="898927d0724755ab7db22d60f2744e42ca622381" translate="yes" xml:space="preserve">
          <source>The right or bottom component.</source>
          <target state="translated">右側または下側の成分。</target>
        </trans-unit>
        <trans-unit id="315fe5d039365e7227ec2a4b72b363b039df2bd0" translate="yes" xml:space="preserve">
          <source>The root class from which all event state objects shall be derived.</source>
          <target state="translated">すべてのイベント状態オブジェクトが派生するルートクラス。</target>
        </trans-unit>
        <trans-unit id="f75abe063c2e29766eb9c4fdf22b1d6554824455" translate="yes" xml:space="preserve">
          <source>The root event class for all AWT events.</source>
          <target state="translated">すべてのAWTイベントのルートイベントクラス。</target>
        </trans-unit>
        <trans-unit id="7d1ec967c823196dca7258196b828781578926c4" translate="yes" xml:space="preserve">
          <source>The root event class for all AWT events. This class and its subclasses supersede the original java.awt.Event class. Subclasses of this root AWTEvent class defined outside of the java.awt.event package should define event ID values greater than the value defined by RESERVED_ID_MAX.</source>
          <target state="translated">すべてのAWTイベントのルートイベントクラスです。このクラスとそのサブクラスは、オリジナルのjava.awt.Eventクラスよりも優先されます。java.awt.eventパッケージの外で定義されたこのルートAWTEventクラスのサブクラスは、RESERVEDED_ID_MAXで定義された値よりも大きいイベントIDを定義しなければなりません。</target>
        </trans-unit>
        <trans-unit id="8aa66cdd224b61725fb7c7f0951cf9aec6e9c9d4" translate="yes" xml:space="preserve">
          <source>The root event class for all component-level input events.</source>
          <target state="translated">すべてのコンポーネントレベルの入力イベントのルートイベントクラス。</target>
        </trans-unit>
        <trans-unit id="1b9b7f573454243c391475013425ee8ac3d59559" translate="yes" xml:space="preserve">
          <source>The root event class for all component-level input events. Input events are delivered to listeners before they are processed normally by the source where they originated. This allows listeners and component subclasses to &quot;consume&quot; the event so that the source will not process them in their default manner. For example, consuming mousePressed events on a Button component will prevent the Button from being activated.</source>
          <target state="translated">すべてのコンポーネントレベルの入力イベントのルートイベントクラス。入力イベントは、それらが発生したソースによって通常処理される前にリスナーに配信されます。これにより、リスナーとコンポーネントのサブクラスはイベントを「消費」し、ソースがデフォルトの方法で処理しないようにすることができます。例えば、Button コンポーネントで mousePressed イベントを消費すると、Button がアクティブにならないようにします。</target>
        </trans-unit>
        <trans-unit id="e57f0a87b56114c25a3425b649a0fc72c9816ae3" translate="yes" xml:space="preserve">
          <source>The root interface in the</source>
          <target state="translated">のルートインターフェースは</target>
        </trans-unit>
        <trans-unit id="d09865ec5ef96bb1232174ca8eb33da20d24915d" translate="yes" xml:space="preserve">
          <source>The root is a leaf node</source>
          <target state="translated">ルートはリーフノード</target>
        </trans-unit>
        <trans-unit id="72cdacd0ec76595acc856611a3b1130c6dda01a1" translate="yes" xml:space="preserve">
          <source>The root is collapsed</source>
          <target state="translated">根元が崩れている</target>
        </trans-unit>
        <trans-unit id="59bb7a92b878735bfc6bdf6731b3391ad71122f8" translate="yes" xml:space="preserve">
          <source>The root node has a node name of the empty string (&quot;&quot;). Every other node has an arbitrary node name, specified at the time it is created. The only restrictions on this name are that it cannot be the empty string, and it cannot contain the slash character ('/').</source>
          <target state="translated">ルート・ノードには、空文字列(&quot;&quot;)のノード名が付けられます。他のすべてのノードは、作成時に指定された任意のノード名を持ちます。この名前の唯一の制限は、空文字列にすることができず、スラッシュ文字 ('/')を含めることができないということです。</target>
        </trans-unit>
        <trans-unit id="7c4a2a95c5adac20299823e2ab805439c46a7560" translate="yes" xml:space="preserve">
          <source>The root node has an absolute path name of &lt;code&gt;&quot;/&quot;&lt;/code&gt;. Children of the root node have absolute path names of &lt;code&gt;&quot;/&quot; + &lt;/code&gt;</source>
          <target state="translated">ルートノードの絶対パス名は &lt;code&gt;&quot;/&quot;&lt;/code&gt; です。ルートノードの子には、 &lt;code&gt;&quot;/&quot; + &lt;/code&gt; 絶対パス名があります。</target>
        </trans-unit>
        <trans-unit id="3d033ca267a4e43656fa30a33c122a68a94a7f29" translate="yes" xml:space="preserve">
          <source>The root node of the &lt;code&gt;NodeIterator&lt;/code&gt;, as specified when it was created.</source>
          <target state="translated">The root node of the &lt;code&gt;NodeIterator&lt;/code&gt; , as specified when it was created.</target>
        </trans-unit>
        <trans-unit id="d6f015d10efdbb0ad4a1e372a60c869566bb49e0" translate="yes" xml:space="preserve">
          <source>The root object is completely restored when all of its fields and the objects it references are completely restored. At this point the object validation callbacks are executed in order based on their registered priorities. The callbacks are registered by objects (in the readObject special methods) as they are individually restored.</source>
          <target state="translated">ルート・オブジェクトは、そのフィールドと参照するオブジェクトのすべてが完全にリストアされると、完全にリストアされます。この時点で、オブジェクト検証コールバックは、登録された優先度に基づいて順番に実行されます。コールバックは、オブジェクトが個別にリストアされると、(readObject 特別メソッドで)オブジェクトによって登録されます。</target>
        </trans-unit>
        <trans-unit id="a2dd63def1d3b47ca894c952456612a156d812ba" translate="yes" xml:space="preserve">
          <source>The row header child.</source>
          <target state="translated">行のヘッダーの子。</target>
        </trans-unit>
        <trans-unit id="7abd29b02efd947317ce37795d7811a15d2cbbad" translate="yes" xml:space="preserve">
          <source>The row header child. Default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">The row header child. Default is &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2605996690cb3e7a1bcd3ac39232dc16f382f39c" translate="yes" xml:space="preserve">
          <source>The row header, if present and visible, gets its preferred width and the viewport's height.</source>
          <target state="translated">行ヘッダが存在し、表示されている場合、その行の幅とビューポートの高さを取得します。</target>
        </trans-unit>
        <trans-unit id="638fc291740e16e3557281ff224cfb954c40e4a5" translate="yes" xml:space="preserve">
          <source>The rules about the first class defined in a package determining the set of certificates for the package, and the restrictions on class names are identical to those specified in the documentation for &lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-java.security.ProtectionDomain-&quot;&gt;&lt;code&gt;defineClass(String, byte[], int, int, ProtectionDomain)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パッケージの証明書のセットを決定するパッケージで定義された最初のクラスに関するルール、およびクラス名の制限は、&lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-java.security.ProtectionDomain-&quot;&gt; &lt;code&gt;defineClass(String, byte[], int, int, ProtectionDomain)&lt;/code&gt; &lt;/a&gt;のドキュメントで指定されているものと同じです。</target>
        </trans-unit>
        <trans-unit id="c634f0f52823012e70f8192869edd96115163537" translate="yes" xml:space="preserve">
          <source>The rules about the first class defined in a package determining the set of certificates for the package, the restrictions on class names, and the defined package of the class are identical to those specified in the documentation for &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt;&lt;code&gt;defineClass(String, byte[], int, int, ProtectionDomain)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The rules about the first class defined in a package determining the set of certificates for the package, the restrictions on class names, and the defined package of the class are identical to those specified in the documentation for &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt; &lt;code&gt;defineClass(String, byte[], int, int, ProtectionDomain)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
