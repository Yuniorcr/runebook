<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="f214719abbe3a0f490a16da532d965a4ed7ccf8b" translate="yes" xml:space="preserve">
          <source>To prevent man-in-the-middle attacks, hostname checks can be done to verify that the hostname in an end-entity certificate matches the targeted hostname. TLS does not require such checks, but some protocols over TLS (such as HTTPS) do. In earlier versions of the JDK, the certificate chain checks were done at the SSL/TLS layer, and the hostname verification checks were done at the layer over TLS. This class allows for the checking to be done during a single call to this class.</source>
          <target state="translated">中間者攻撃を防ぐために、エンドエンティティ証明書のホスト名がターゲットのホスト名と一致することを確認するために、ホスト名チェックを行うことができます。TLS ではこのようなチェックは必要ありませんが、TLS 上のいくつかのプロトコル(HTTPS など)ではチェックが行われます。JDK の以前のバージョンでは、証明書チェーンのチェックは SSL/TLS 層で行われ、ホスト名の検証チェックは TLS 上の層で行われていました。このクラスでは、このクラスへの一回の呼び出しでチェックを行うことができます。</target>
        </trans-unit>
        <trans-unit id="1a7964f839fde9c329bbebbe3ef6c39e9309fba2" translate="yes" xml:space="preserve">
          <source>To prevent man-in-the-middle attacks, hostname checks can be done to verify that the hostname in an end-entity certificate matches the targeted hostname. TLS/DTLS does not require such checks, but some protocols over TLS/DTLS (such as HTTPS) do. In earlier versions of the JDK, the certificate chain checks were done at the SSL/TLS/DTLS layer, and the hostname verification checks were done at the layer over TLS/DTLS. This class allows for the checking to be done during a single call to this class.</source>
          <target state="translated">中間者攻撃を防ぐために、エンドエンティティ証明書のホスト名がターゲットのホスト名と一致していることを確認するために、ホスト名チェックを行うことができます。TLS/DTLS ではこのようなチェックは必要ありませんが、TLS/DTLS 上のプロトコル(HTTPS など)ではチェックが必要なものもあります。以前のバージョンの JDK では、証明書チェーンのチェックは SSL/TLS/DTLS 層で、ホスト名の検証チェックは TLS/DTLS 上の層で行われていました。このクラスでは、このクラスへの一回の呼び出しでチェックを行うことができます。</target>
        </trans-unit>
        <trans-unit id="32759b75b7b379af9cef519bb934c3cedf6194e3" translate="yes" xml:space="preserve">
          <source>To produce a view of the document that has entity references expanded and does not expose the entity reference node itself, use the &lt;code&gt;whatToShow&lt;/code&gt; flags to hide the entity reference node and set &lt;code&gt;expandEntityReferences&lt;/code&gt; to true when creating the &lt;code&gt;NodeIterator&lt;/code&gt;. To produce a view of the document that has entity reference nodes but no entity expansion, use the &lt;code&gt;whatToShow&lt;/code&gt; flags to show the entity reference node and set &lt;code&gt;expandEntityReferences&lt;/code&gt; to false.</source>
          <target state="translated">実体参照が拡大しているとエンティティ参照ノード自体が露出しない文書のビューを生成するために、使用 &lt;code&gt;whatToShow&lt;/code&gt; フラグがエンティティ参照ノードとセット非表示に &lt;code&gt;expandEntityReferences&lt;/code&gt; 作成するときにtrueに &lt;code&gt;NodeIterator&lt;/code&gt; 。エンティティ参照ノードはあるがエンティティ拡張がないドキュメントのビューを作成するには、 &lt;code&gt;whatToShow&lt;/code&gt; フラグを使用してエンティティ参照ノードを表示し、 &lt;code&gt;expandEntityReferences&lt;/code&gt; をfalseに設定します。</target>
        </trans-unit>
        <trans-unit id="c08e589fde0cdd5f5f74ea9ccac4de62b52fc67d" translate="yes" xml:space="preserve">
          <source>To produce a view of the document that has entity references expanded and does not expose the entity reference node itself, use the &lt;code&gt;whatToShow&lt;/code&gt; flags to hide the entity reference node and set &lt;code&gt;expandEntityReferences&lt;/code&gt; to true when creating the &lt;code&gt;TreeWalker&lt;/code&gt;. To produce a view of the document that has entity reference nodes but no entity expansion, use the &lt;code&gt;whatToShow&lt;/code&gt; flags to show the entity reference node and set &lt;code&gt;expandEntityReferences&lt;/code&gt; to false.</source>
          <target state="translated">エンティティ参照が展開され、エンティティ参照ノード自体を公開しないドキュメントのビューを作成するには、 &lt;code&gt;whatToShow&lt;/code&gt; フラグを使用してエンティティ参照ノードを非表示にし、 &lt;code&gt;TreeWalker&lt;/code&gt; の作成時に &lt;code&gt;expandEntityReferences&lt;/code&gt; をtrueに設定します。エンティティ参照ノードはあるがエンティティ拡張がないドキュメントのビューを作成するには、 &lt;code&gt;whatToShow&lt;/code&gt; フラグを使用してエンティティ参照ノードを表示し、 &lt;code&gt;expandEntityReferences&lt;/code&gt; をfalseに設定します。</target>
        </trans-unit>
        <trans-unit id="d933d1cf5a699b5b72fcdb8c2df4420bbc6bedf4" translate="yes" xml:space="preserve">
          <source>To properly update the logging configuration, use the &lt;a href=&quot;#updateConfiguration(java.util.function.Function)&quot;&gt;&lt;code&gt;updateConfiguration(java.util.function.Function)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#updateConfiguration(java.io.InputStream,java.util.function.Function)&quot;&gt;&lt;code&gt;updateConfiguration(java.io.InputStream, java.util.function.Function)&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="translated">ロギング構成を適切に更新するには、代わりに&lt;a href=&quot;#updateConfiguration(java.util.function.Function)&quot;&gt; &lt;code&gt;updateConfiguration(java.util.function.Function)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#updateConfiguration(java.io.InputStream,java.util.function.Function)&quot;&gt; &lt;code&gt;updateConfiguration(java.io.InputStream, java.util.function.Function)&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="399d941ce49c9a5bc658465a614e310c74442731" translate="yes" xml:space="preserve">
          <source>To properly update the logging configuration, use the &lt;a href=&quot;#updateConfiguration(java.util.function.Function)&quot;&gt;&lt;code&gt;updateConfiguration(java.util.function.Function)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#updateConfiguration(java.io.InputStream,java.util.function.Function)&quot;&gt;&lt;code&gt;updateConfiguration(java.io.InputStream, java.util.function.Function)&lt;/code&gt;&lt;/a&gt; methods instead.</source>
          <target state="translated">ロギング構成を適切に更新するには、代わりに&lt;a href=&quot;#updateConfiguration(java.util.function.Function)&quot;&gt; &lt;code&gt;updateConfiguration(java.util.function.Function)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#updateConfiguration(java.io.InputStream,java.util.function.Function)&quot;&gt; &lt;code&gt;updateConfiguration(java.io.InputStream, java.util.function.Function)&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="8c0f2cbf694f3313c16fa7613b5e6dd577e4074f" translate="yes" xml:space="preserve">
          <source>To provide a specific keystore type:</source>
          <target state="translated">特定のキーストアタイプを提供する。</target>
        </trans-unit>
        <trans-unit id="06444bab1b7f00b33dec7e627e504fcc33b7cf1a" translate="yes" xml:space="preserve">
          <source>To provide concrete classes for the user, the API defines specializations of the interfaces found at the root level. These interfaces are found in &lt;a href=&quot;sax/package-summary&quot;&gt;&lt;code&gt;javax.xml.transform.sax&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dom/package-summary&quot;&gt;&lt;code&gt;javax.xml.transform.dom&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stax/package-summary&quot;&gt;&lt;code&gt;javax.xml.transform.stax&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;stream/package-summary&quot;&gt;&lt;code&gt;javax.xml.transform.stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ユーザーに具体的なクラスを提供するために、APIはルートレベルで検出されたインターフェイスの特殊化を定義します。これらのインターフェースは、&lt;a href=&quot;sax/package-summary&quot;&gt; &lt;code&gt;javax.xml.transform.sax&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;dom/package-summary&quot;&gt; &lt;code&gt;javax.xml.transform.dom&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stax/package-summary&quot;&gt; &lt;code&gt;javax.xml.transform.stax&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;stream/package-summary&quot;&gt; &lt;code&gt;javax.xml.transform.stream&lt;/code&gt; にあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="f7219f8cfdecc44e00d38199242b9ed5d1ad8cd2" translate="yes" xml:space="preserve">
          <source>To provide customized error handling, implement this interface and use the &lt;code&gt;setErrorListener&lt;/code&gt; method to register an instance of the implementation with the &lt;a href=&quot;transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">カスタマイズされたエラー処理を提供するには、このインターフェイスを実装し、 &lt;code&gt;setErrorListener&lt;/code&gt; メソッドを使用して実装のインスタンスを&lt;a href=&quot;transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; &lt;/a&gt;に登録します。</target>
        </trans-unit>
        <trans-unit id="6bc35adcddbc8519fc0eb13cd050998eeaa0c101" translate="yes" xml:space="preserve">
          <source>To provide customized error handling, implement this interface and use the &lt;code&gt;setErrorListener&lt;/code&gt; method to register an instance of the implementation with the &lt;a href=&quot;transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Transformer&lt;/code&gt; then reports all errors and warnings through this interface.</source>
          <target state="translated">カスタマイズされたエラー処理を提供するには、このインターフェイスを実装し、 &lt;code&gt;setErrorListener&lt;/code&gt; メソッドを使用して実装のインスタンスを&lt;a href=&quot;transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; &lt;/a&gt;に登録します。次に、 &lt;code&gt;Transformer&lt;/code&gt; は、このインターフェイスを介してすべてのエラーと警告を報告します。</target>
        </trans-unit>
        <trans-unit id="4d9625ba45405bf286365f8f2c76772c2e50d084" translate="yes" xml:space="preserve">
          <source>To quantify the color characteristics of a device such as a printer or monitor, measurements of XYZ values for particular device colors are typically made. For purposes of this discussion, the term device XYZ values is used to mean the XYZ values that would be measured from device colors using current CIE recommended practices.</source>
          <target state="translated">プリンタやモニタなどのデバイスのカラー特性を定量化するために、特定のデバイスカラーのXYZ値の測定が一般的に行われます。ここでは、デバイスのXYZ値という用語は、現在のCIE推奨プラクティスを使用してデバイスの色から測定されるXYZ値を意味するために使用されています。</target>
        </trans-unit>
        <trans-unit id="f2c7dc36ed85076024b694930f5b7d29edac3f37" translate="yes" xml:space="preserve">
          <source>To query for the printable area, a client must supply a suitable context. Without specifying at the very least the size of the media being used no meaningful value for printable area can be obtained.</source>
          <target state="translated">印刷可能領域を取得するためには、 ク ラ イ ア ン ト は適切な コ ン テ キ ス ト を与え る 必要があ り ます。少なくとも使用しているメディアのサイズを指定しなければ、印刷可能領域の意味のある値を得ることはできません。</target>
        </trans-unit>
        <trans-unit id="475859fe217528460be16e143a4e1805e7c0d925" translate="yes" xml:space="preserve">
          <source>To read all data for a recording, invoke this method repeatedly until &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263c5b92a194433ee16767a9bc877843ab4b7dc8" translate="yes" xml:space="preserve">
          <source>To receive MBeanServerNotifications, you need to register a listener with the &lt;a href=&quot;mbeanserverdelegate&quot;&gt;&lt;code&gt;MBeanServerDelegate&lt;/code&gt;&lt;/a&gt; MBean that represents the MBeanServer. The ObjectName of the MBeanServerDelegate is &lt;a href=&quot;mbeanserverdelegate#DELEGATE_NAME&quot;&gt;&lt;code&gt;MBeanServerDelegate.DELEGATE_NAME&lt;/code&gt;&lt;/a&gt;, which is &lt;code&gt;JMImplementation:type=MBeanServerDelegate&lt;/code&gt;.</source>
          <target state="translated">MBeanServerNotificationsを受信するには、&lt;a href=&quot;mbeanserverdelegate&quot;&gt; &lt;code&gt;MBeanServerDelegate&lt;/code&gt; &lt;/a&gt;を表すMBeanServerDelegate MBeanにリスナーを登録する必要があります。MBeanServerDelegateのObjectNameは&lt;a href=&quot;mbeanserverdelegate#DELEGATE_NAME&quot;&gt; &lt;code&gt;MBeanServerDelegate.DELEGATE_NAME&lt;/code&gt; で&lt;/a&gt;、これは &lt;code&gt;JMImplementation:type=MBeanServerDelegate&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b82fca8e38b404ee9428dab358796f99cd1b2379" translate="yes" xml:space="preserve">
          <source>To receive a notification when an event arrives, register an action using the &lt;a href=&quot;#onEvent(java.util.function.Consumer)&quot;&gt;&lt;code&gt;onEvent(Consumer)&lt;/code&gt;&lt;/a&gt; method. To filter the stream for an event with a specific name, use &lt;a href=&quot;#onEvent(java.lang.String,java.util.function.Consumer)&quot;&gt;&lt;code&gt;onEvent(String, Consumer)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50bf1c56e905455d076027f4b0616b3cbbe8a50" translate="yes" xml:space="preserve">
          <source>To refer to locations within the sequence, the coordinates used are the location between two characters. As the diagram below shows, a location in a text document can be referred to as a position, or an offset. This position is zero-based.</source>
          <target state="translated">シーケンス内の位置を参照するために使用される座標は、2 文字間の位置です。下の図に示すように、テキスト文書内の位置は、位置、またはオフセットと呼ぶことができます。この位置はゼロベースです。</target>
        </trans-unit>
        <trans-unit id="0734a315a1881596d375b5f9fcde16e40f4fc639" translate="yes" xml:space="preserve">
          <source>To register for status change events use &lt;a href=&quot;jshell#onSnippetEvent(java.util.function.Consumer)&quot;&gt;&lt;code&gt;JShell.onSnippetEvent(java.util.function.Consumer)&lt;/code&gt;&lt;/a&gt;. These events are only generated by &lt;code&gt;eval&lt;/code&gt; and &lt;code&gt;drop&lt;/code&gt;, the return values of these methods are the list of events generated by that call. So, as in the example above, events can be used without registering to receive events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f470a0bd4b226ae17cf266889b087c40813603e" translate="yes" xml:space="preserve">
          <source>To reinforce that each axis is treated independently the diagram shows the range of each group and element along each axis. The range of each component has been projected onto the axes, and the groups are rendered in blue (horizontal) and red (vertical). For readability there is a gap between each of the elements in the sequential group.</source>
          <target state="translated">各軸が独立して扱われることを補強するために、図は各軸に沿った各グループと要素の範囲を示しています。各要素の範囲は軸に投影され、グループは青(水平)と赤(垂直)でレンダリングされています。読みやすさのために、連続したグループの各要素の間には隙間があります。</target>
        </trans-unit>
        <trans-unit id="974e2b9641b4896627a5643d8e942465194e9954" translate="yes" xml:space="preserve">
          <source>To release resources used by this &lt;code&gt;Deflater&lt;/code&gt;, the &lt;a href=&quot;#end()&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt; method should be called explicitly. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;#finalize()&quot;&gt;&lt;code&gt;finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="translated">この &lt;code&gt;Deflater&lt;/code&gt; で使用されているリソースを解放するには、&lt;a href=&quot;#end()&quot;&gt; &lt;code&gt;end()&lt;/code&gt; &lt;/a&gt;メソッドを明示的に呼び出す必要があります。サブクラスは、サブクラスによって取得されたリソースのクリーンアップを担当します。クリーンアップを実行するために&lt;a href=&quot;#finalize()&quot;&gt; &lt;code&gt;finalize()&lt;/code&gt; &lt;/a&gt;をオーバーライドするサブクラスは、&lt;a href=&quot;../../lang/ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt;などの代替のクリーンアップメカニズムを使用し、オーバーライドする &lt;code&gt;finalize&lt;/code&gt; メソッドを削除するように変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="3ecfbdef70a716bdef9e42e4d897d9914e72eeb6" translate="yes" xml:space="preserve">
          <source>To release resources used by this &lt;code&gt;Deflater&lt;/code&gt;, the &lt;a href=&quot;#end()&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt; method should be called explicitly. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;../../lang/object#finalize()&quot;&gt;&lt;code&gt;Object.finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e236ec7e71d2574877083662b30d529f50a301d7" translate="yes" xml:space="preserve">
          <source>To release resources used by this &lt;code&gt;Inflater&lt;/code&gt;, the &lt;a href=&quot;#end()&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt; method should be called explicitly. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;#finalize()&quot;&gt;&lt;code&gt;finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="translated">この &lt;code&gt;Inflater&lt;/code&gt; で使用されているリソースを解放するには、&lt;a href=&quot;#end()&quot;&gt; &lt;code&gt;end()&lt;/code&gt; &lt;/a&gt;メソッドを明示的に呼び出す必要があります。サブクラスは、サブクラスによって取得されたリソースのクリーンアップを担当します。クリーンアップを実行するために&lt;a href=&quot;#finalize()&quot;&gt; &lt;code&gt;finalize()&lt;/code&gt; &lt;/a&gt;をオーバーライドするサブクラスは、&lt;a href=&quot;../../lang/ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt;などの代替のクリーンアップメカニズムを使用し、オーバーライドする &lt;code&gt;finalize&lt;/code&gt; メソッドを削除するように変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="4aa8d5918738d70b18174ffbb201b2aea8792d69" translate="yes" xml:space="preserve">
          <source>To release resources used by this &lt;code&gt;Inflater&lt;/code&gt;, the &lt;a href=&quot;#end()&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt; method should be called explicitly. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;../../lang/object#finalize()&quot;&gt;&lt;code&gt;Object.finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d6f38ed252f674914f889667d817984fd3a412" translate="yes" xml:space="preserve">
          <source>To release resources used by this &lt;code&gt;ZipFile&lt;/code&gt;, the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method should be called explicitly or by try-with-resources. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;#finalize()&quot;&gt;&lt;code&gt;finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="translated">この &lt;code&gt;ZipFile&lt;/code&gt; で使用されているリソースを解放するには、&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドを明示的に呼び出すか、try-with-resourcesで呼び出す必要があります。サブクラスは、サブクラスによって取得されたリソースのクリーンアップを担当します。クリーンアップを実行するために&lt;a href=&quot;#finalize()&quot;&gt; &lt;code&gt;finalize()&lt;/code&gt; &lt;/a&gt;をオーバーライドするサブクラスは、&lt;a href=&quot;../../lang/ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt;などの代替のクリーンアップメカニズムを使用し、オーバーライドする &lt;code&gt;finalize&lt;/code&gt; メソッドを削除するように変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="58599bd78912685d196879bee828b7253d0ece1c" translate="yes" xml:space="preserve">
          <source>To release resources used by this &lt;code&gt;ZipFile&lt;/code&gt;, the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method should be called explicitly or by try-with-resources. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;../../lang/object#finalize()&quot;&gt;&lt;code&gt;Object.finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58cde6640f925625e3bb78442215bd8b5a8cc5e8" translate="yes" xml:space="preserve">
          <source>To release resources used by this stream &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; should be called directly or by try-with-resources.</source>
          <target state="translated">このストリームで使用されているリソースを解放するには、&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;を直接呼び出すか、try-with-resourcesで呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="17085a7c42bc8ba04a89b22173da18e8dfbd6aeb" translate="yes" xml:space="preserve">
          <source>To release resources used by this stream &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; should be called directly or by try-with-resources. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;#finalize()&quot;&gt;&lt;code&gt;finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="translated">このストリームで使用されているリソースを解放するには、&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;を直接呼び出すか、try-with-resourcesで呼び出す必要があります。サブクラスは、サブクラスによって取得されたリソースのクリーンアップを担当します。クリーンアップを実行するために&lt;a href=&quot;#finalize()&quot;&gt; &lt;code&gt;finalize()&lt;/code&gt; &lt;/a&gt;をオーバーライドするサブクラスは、&lt;a href=&quot;../lang/ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt;などの代替のクリーンアップメカニズムを使用し、オーバーライドする &lt;code&gt;finalize&lt;/code&gt; メソッドを削除するように変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="7f968f0a8894301500681d593b4361e7b28d0441" translate="yes" xml:space="preserve">
          <source>To release resources used by this stream &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; should be called directly or by try-with-resources. Subclasses are responsible for the cleanup of resources acquired by the subclass. Subclasses that override &lt;a href=&quot;../lang/object#finalize()&quot;&gt;&lt;code&gt;Object.finalize()&lt;/code&gt;&lt;/a&gt; in order to perform cleanup should be modified to use alternative cleanup mechanisms such as &lt;a href=&quot;../lang/ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and remove the overriding &lt;code&gt;finalize&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f583fb3f20043b03ba3a2a6406effbeae1eccf6a" translate="yes" xml:space="preserve">
          <source>To rely on the default type:</source>
          <target state="translated">デフォルトの型に依存すること。</target>
        </trans-unit>
        <trans-unit id="91f9cda7b431d0791931992a65a62beb1c70ea1a" translate="yes" xml:space="preserve">
          <source>To remove an attribute by local name and namespace URI, use the &lt;code&gt;removeAttributeNS&lt;/code&gt; method.</source>
          <target state="translated">ローカル名と名前空間URIで属性を削除するには、 &lt;code&gt;removeAttributeNS&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="4f2f47f1e44b85ff762285f2c5a88392990bee0a" translate="yes" xml:space="preserve">
          <source>To remove the render size setting, pass in a value of &lt;code&gt;null&lt;/code&gt; for &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">レンダリングサイズの設定を削除するには、の値を渡し &lt;code&gt;null&lt;/code&gt; のための &lt;code&gt;size&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d2c956991d58c4d59d572d47c59760548a6c093" translate="yes" xml:space="preserve">
          <source>To resize the &lt;code&gt;Component&lt;/code&gt;s to their preferred sizes invoke &lt;code&gt;resetToPreferredSizes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; のサイズを &lt;code&gt;resetToPreferredSizes&lt;/code&gt; サイズに変更するには、resetToPreferredSizesを呼び出します。</target>
        </trans-unit>
        <trans-unit id="3d75120333640b4d1d4805bc00d87a16aaa41463" translate="yes" xml:space="preserve">
          <source>To retrieve a number, use the following code:</source>
          <target state="translated">数値を取得するには、以下のコードを使用します。</target>
        </trans-unit>
        <trans-unit id="dbf8b81ecf37a1973c4e33082f309e1de3fee8e2" translate="yes" xml:space="preserve">
          <source>To retrieve all the Principals associated with a &lt;code&gt;Subject&lt;/code&gt;, invoke the &lt;code&gt;getPrincipals&lt;/code&gt; method. To retrieve all the public or private credentials belonging to a &lt;code&gt;Subject&lt;/code&gt;, invoke the &lt;code&gt;getPublicCredentials&lt;/code&gt; method or &lt;code&gt;getPrivateCredentials&lt;/code&gt; method, respectively. To modify the returned &lt;code&gt;Set&lt;/code&gt; of Principals and credentials, use the methods defined in the &lt;code&gt;Set&lt;/code&gt; class. For example:</source>
          <target state="translated">&lt;code&gt;Subject&lt;/code&gt; に関連付けられているすべてのプリンシパルを取得するには、 &lt;code&gt;getPrincipals&lt;/code&gt; メソッドを呼び出します。 &lt;code&gt;Subject&lt;/code&gt; に属するすべてのパブリックまたはプライベート資格情報を取得するには、それぞれ &lt;code&gt;getPublicCredentials&lt;/code&gt; メソッドまたは &lt;code&gt;getPrivateCredentials&lt;/code&gt; メソッドを呼び出します。返されたプリンシパルと資格情報の &lt;code&gt;Set&lt;/code&gt; を変更するには、 &lt;code&gt;Set&lt;/code&gt; クラスで定義されているメソッドを使用します。例えば：</target>
        </trans-unit>
        <trans-unit id="cd7c59a4a30c4a9f9ade76ab24ca6203b8101d8d" translate="yes" xml:space="preserve">
          <source>To retrieve an attribute node by qualified name and namespace URI, use the &lt;code&gt;getAttributeNodeNS&lt;/code&gt; method.</source>
          <target state="translated">修飾名と名前空間URIで属性ノードを取得するには、 &lt;code&gt;getAttributeNodeNS&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="ffccbd13dfb2daf73f4f42560bc59770446ca868" translate="yes" xml:space="preserve">
          <source>To retrieve current cookie store.</source>
          <target state="translated">現在のクッキーストアを取得します。</target>
        </trans-unit>
        <trans-unit id="ec2ce31a9359110a7a91f426462698246d114fe4" translate="yes" xml:space="preserve">
          <source>To see an example which sets this property, see the &lt;a href=&quot;#prototype_example&quot;&gt;class description&lt;/a&gt; above.</source>
          <target state="translated">このプロパティを設定する例を確認するには、上記の&lt;a href=&quot;#prototype_example&quot;&gt;クラスの説明を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="74c90b4c8111fa16e71742d605c41f24836eef5d" translate="yes" xml:space="preserve">
          <source>To select what instrument should play the notes on a particular MIDI channel, two kinds of MIDI message are used that specify a patch location: a bank-select command, and a program-change channel command. The Java Sound equivalent is the &lt;a href=&quot;midichannel#programChange(int,int)&quot;&gt;&lt;code&gt;programChange(int, int)&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;MidiChannel&lt;/code&gt;.</source>
          <target state="translated">特定のMIDIチャンネルでノートを演奏する楽器を選択するには、パッチの場所を指定する2種類のMIDIメッセージを使用します。バンク選択コマンドとプログラム変更チャンネルコマンドです。Java Soundに相当するものは、 &lt;code&gt;MidiChannel&lt;/code&gt; の&lt;a href=&quot;midichannel#programChange(int,int)&quot;&gt; &lt;code&gt;programChange(int, int)&lt;/code&gt; &lt;/a&gt;メソッドです。</target>
        </trans-unit>
        <trans-unit id="dafe7f14b12f045174019ecf0206f06223d238c3" translate="yes" xml:space="preserve">
          <source>To select what instrument should play the notes on a particular MIDI channel, two kinds of MIDI message are used that specify a patch location: a bank-select command, and a program-change channel command. The Java Sound equivalent is the &lt;a href=&quot;midichannel#programChange-int-int-&quot;&gt;&lt;code&gt;programChange(int, int)&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;MidiChannel&lt;/code&gt;.</source>
          <target state="translated">特定のMIDIチャネルでノートを再生する楽器を選択するには、パッチの場所を指定する2種類のMIDIメッセージを使用します。バンク選択コマンドとプログラム変更チャネルコマンドです。対応するJava Soundは、 &lt;code&gt;MidiChannel&lt;/code&gt; の&lt;a href=&quot;midichannel#programChange-int-int-&quot;&gt; &lt;code&gt;programChange(int, int)&lt;/code&gt; &lt;/a&gt;メソッドです。</target>
        </trans-unit>
        <trans-unit id="1f07255a778509d637268f559910dc6e481f25e8" translate="yes" xml:space="preserve">
          <source>To set an attribute with a qualified name and namespace URI, use the &lt;code&gt;setAttributeNS&lt;/code&gt; method.</source>
          <target state="translated">修飾名と名前空間URIを使用して属性を設定するには、 &lt;code&gt;setAttributeNS&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="8aa6d3851320ddcb0024e3cd57b86fda3434f003" translate="yes" xml:space="preserve">
          <source>To set the DeclHandler for an XML reader, use the &lt;a href=&quot;../xmlreader#setProperty(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;setProperty&lt;/code&gt;&lt;/a&gt; method with the property name &lt;code&gt;http://xml.org/sax/properties/declaration-handler&lt;/code&gt; and an object implementing this interface (or null) as the value. If the reader does not report declaration events, it will throw a &lt;a href=&quot;../saxnotrecognizedexception&quot;&gt;&lt;code&gt;SAXNotRecognizedException&lt;/code&gt;&lt;/a&gt; when you attempt to register the handler.</source>
          <target state="translated">XMLリーダーのDeclHandlerを設定するには、プロパティ名 &lt;code&gt;http://xml.org/sax/properties/declaration-handler&lt;/code&gt; を指定した&lt;a href=&quot;../xmlreader#setProperty(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;setProperty&lt;/code&gt; &lt;/a&gt;メソッドと、このインターフェイス（またはnull）を値として実装するオブジェクトを使用します。リーダーが宣言イベントを報告しない場合、ハンドラーを登録しようとすると、&lt;a href=&quot;../saxnotrecognizedexception&quot;&gt; &lt;code&gt;SAXNotRecognizedException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="731d23be64e7d2248cfbcbe3e7340e8355ff2ce9" translate="yes" xml:space="preserve">
          <source>To set the LexicalHandler for an XML reader, use the &lt;a href=&quot;../xmlreader#setProperty(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;setProperty&lt;/code&gt;&lt;/a&gt; method with the property name &lt;code&gt;http://xml.org/sax/properties/lexical-handler&lt;/code&gt; and an object implementing this interface (or null) as the value. If the reader does not report lexical events, it will throw a &lt;a href=&quot;../saxnotrecognizedexception&quot;&gt;&lt;code&gt;SAXNotRecognizedException&lt;/code&gt;&lt;/a&gt; when you attempt to register the handler.</source>
          <target state="translated">XMLリーダーのLexicalHandlerを設定するには、プロパティ名 &lt;code&gt;http://xml.org/sax/properties/lexical-handler&lt;/code&gt; とこのインターフェイス（またはnull）を値として実装するオブジェクトを指定して&lt;a href=&quot;../xmlreader#setProperty(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;setProperty&lt;/code&gt; &lt;/a&gt;メソッドを使用します。リーダーが字句イベントを報告しない場合、ハンドラーを登録しようとすると、&lt;a href=&quot;../saxnotrecognizedexception&quot;&gt; &lt;code&gt;SAXNotRecognizedException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="44594b4ee0834a754cf5916d75ab0d57ac18a9e1" translate="yes" xml:space="preserve">
          <source>To set the XML value to be the result of an XSLT transform:</source>
          <target state="translated">XSLT 変換の結果となる XML 値を設定します。</target>
        </trans-unit>
        <trans-unit id="6abe598d39804a927c2ced4346e73a14a3784062" translate="yes" xml:space="preserve">
          <source>To set the cookie policy of this cookie manager.</source>
          <target state="translated">このクッキー管理者のクッキーポリシーを設定します。</target>
        </trans-unit>
        <trans-unit id="95efc3684b4472a3b7cbc30ceb1ddfceedcfd2a8" translate="yes" xml:space="preserve">
          <source>To set the orientation of a single component, use this method. To set the orientation of an entire component hierarchy, use &lt;a href=&quot;#applyComponentOrientation(java.awt.ComponentOrientation)&quot;&gt;&lt;code&gt;applyComponentOrientation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">単一のコンポーネントの方向を設定するには、この方法を使用します。コンポーネント階層全体の方向を設定するには、&lt;a href=&quot;#applyComponentOrientation(java.awt.ComponentOrientation)&quot;&gt; &lt;code&gt;applyComponentOrientation&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="3c402a91a51f63ce884a93deaad542e147d4280a" translate="yes" xml:space="preserve">
          <source>To simplify the task of setting up the environment required by a JNDI application, application components and service providers may be distributed along with &lt;em&gt;resource files.&lt;/em&gt; A JNDI resource file is a file in the properties file format (see &lt;a href=&quot;../../../java.base/java/util/properties#load(java.io.Reader)&quot;&gt;&lt;code&gt;java.util.Properties&lt;/code&gt;&lt;/a&gt;), containing a list of key/value pairs. The key is the name of the property (e.g. &quot;java.naming.factory.object&quot;) and the value is a string in the format defined for that property. Here is an example of a JNDI resource file:</source>
          <target state="translated">JNDIアプリケーションに必要な環境をセットアップするタスクを簡素化するために、アプリケーションコンポーネントとサービスプロバイダーを&lt;em&gt;リソースファイル&lt;/em&gt;とともに配布&lt;em&gt;できます。&lt;/em&gt;JNDIリソースファイルは、プロパティファイル形式（&lt;a href=&quot;../../../java.base/java/util/properties#load(java.io.Reader)&quot;&gt; &lt;code&gt;java.util.Properties&lt;/code&gt; を&lt;/a&gt;参照）のファイルであり、キーと値のペアのリストが含まれています。キーはプロパティの名前（「java.naming.factory.object」など）であり、値はそのプロパティに定義された形式の文字列です。JNDIリソースファイルの例を次に示します。</target>
        </trans-unit>
        <trans-unit id="eeb6a793892d451fecc2449a02eb99c7e627a351" translate="yes" xml:space="preserve">
          <source>To simplify the task of setting up the environment required by a JNDI application, application components and service providers may be distributed along with &lt;em&gt;resource files.&lt;/em&gt; A JNDI resource file is a file in the properties file format (see &lt;a href=&quot;../../java/util/properties#load-java.io.Reader-&quot;&gt;&lt;code&gt;&lt;code&gt;java.util.Properties&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;), containing a list of key/value pairs. The key is the name of the property (e.g. &quot;java.naming.factory.object&quot;) and the value is a string in the format defined for that property. Here is an example of a JNDI resource file:</source>
          <target state="translated">JNDIアプリケーションが必要とする環境をセットアップするタスクを簡略化するために、アプリケーションコンポーネントとサービスプロバイダーを&lt;em&gt;リソースファイル&lt;/em&gt;とともに配布&lt;em&gt;できます。&lt;/em&gt; JNDIリソースファイルは、プロパティファイル形式（&lt;a href=&quot;../../java/util/properties#load-java.io.Reader-&quot;&gt; &lt;code&gt;&lt;code&gt;java.util.Properties&lt;/code&gt;&lt;/code&gt; を&lt;/a&gt;参照）のファイルであり、キーと値のペアのリストが含まれています。キーはプロパティの名前（「java.naming.factory.object」など）で、値はそのプロパティに定義された形式の文字列です。 JNDIリソースファイルの例を次に示します。</target>
        </trans-unit>
        <trans-unit id="b3ac2a7a9cb0bb2873abefd7d35bc80945dadb53" translate="yes" xml:space="preserve">
          <source>To specify a custom closure code or reason code the &lt;code&gt;sendClose&lt;/code&gt; method may be invoked from inside the &lt;code&gt;onClose&lt;/code&gt; invocation:</source>
          <target state="translated">カスタムクロージャコードまたは理由コードを指定するには、 &lt;code&gt;sendClose&lt;/code&gt; メソッドを &lt;code&gt;onClose&lt;/code&gt; 呼び出し内から呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="cb7dcfade2357e76eeab66e5023506d61009553b" translate="yes" xml:space="preserve">
          <source>To specify a day of the week on or before an exact day of the month, set &lt;em&gt;day-of-month&lt;/em&gt; and &lt;em&gt;day-of-week&lt;/em&gt; to a negative value. For example, to specify the last Wednesday on or before the 21st of March, set &lt;em&gt;month&lt;/em&gt; to &lt;a href=&quot;calendar#MARCH&quot;&gt;&lt;code&gt;MARCH&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;day-of-month&lt;/em&gt; is -21 and &lt;em&gt;day-of-week&lt;/em&gt; is &lt;code&gt;-&lt;/code&gt;&lt;a href=&quot;calendar#WEDNESDAY&quot;&gt;&lt;code&gt;WEDNESDAY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">、セット上または月の正確な日の前に曜日を指定するには、&lt;em&gt;日の-月&lt;/em&gt;と&lt;em&gt;曜日の&lt;/em&gt;負の値に設定します。例えば、セット、月の21日にまたはの前に先週の水曜日を指定するために&lt;em&gt;月&lt;/em&gt;に&lt;a href=&quot;calendar#MARCH&quot;&gt; &lt;code&gt;MARCH&lt;/code&gt; &lt;/a&gt;、&lt;em&gt;日の-月は&lt;/em&gt; -21とある&lt;em&gt;曜日は&lt;/em&gt;ある &lt;code&gt;-&lt;/code&gt; &lt;a href=&quot;calendar#WEDNESDAY&quot;&gt; &lt;code&gt;WEDNESDAY&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="600c1d56e2bfbab8d400f99a6f9b01cc9657e004" translate="yes" xml:space="preserve">
          <source>To specify a day of week on or after an exact day of month, set the &lt;em&gt;month&lt;/em&gt; to an exact month value, &lt;em&gt;day-of-month&lt;/em&gt; to the day on or after which the rule is applied, and &lt;em&gt;day-of-week&lt;/em&gt; to a negative &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field value. For example, to specify the second Sunday of April, set &lt;em&gt;month&lt;/em&gt; to &lt;a href=&quot;calendar#APRIL&quot;&gt;&lt;code&gt;APRIL&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;day-of-month&lt;/em&gt; to 8, and &lt;em&gt;day-of-week&lt;/em&gt; to &lt;code&gt;-&lt;/code&gt;&lt;a href=&quot;calendar#SUNDAY&quot;&gt;&lt;code&gt;SUNDAY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">月の正確な日以降に曜日を指定するには、設定&lt;em&gt;月&lt;/em&gt;の正確な月の値に&lt;em&gt;日のヶ月&lt;/em&gt;ルールが適用されているか翌日に、そして&lt;em&gt;曜日&lt;/em&gt;負へ&lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt;フィールド値。たとえば、4月の第2日曜日、セットを指定するには&lt;em&gt;、月を&lt;/em&gt;へ&lt;a href=&quot;calendar#APRIL&quot;&gt; &lt;code&gt;APRIL&lt;/code&gt; &lt;/a&gt;、&lt;em&gt;日の-月&lt;/em&gt; 8、および&lt;em&gt;曜日&lt;/em&gt;に &lt;code&gt;-&lt;/code&gt; &lt;a href=&quot;calendar#SUNDAY&quot;&gt; &lt;code&gt;SUNDAY&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0f2993ffeb347d9d1df326129e16ea808f4f2dd" translate="yes" xml:space="preserve">
          <source>To specify alternate caret policies, subclass &lt;code&gt;CaretPolicy&lt;/code&gt; and override &lt;code&gt;getStrongCaret&lt;/code&gt;. &lt;code&gt;getStrongCaret&lt;/code&gt; should inspect the two &lt;code&gt;TextHitInfo&lt;/code&gt; arguments and choose one of them as the strong caret.</source>
          <target state="translated">、代替キャレットポリシーを指定するには、サブクラス &lt;code&gt;CaretPolicy&lt;/code&gt; はと上書き &lt;code&gt;getStrongCaret&lt;/code&gt; を。 &lt;code&gt;getStrongCaret&lt;/code&gt; は、2つの &lt;code&gt;TextHitInfo&lt;/code&gt; 引数を検査し、そのうちの1つを強力なキャレットとして選択する必要があります。</target>
        </trans-unit>
        <trans-unit id="ab173dd70ae21fda06597bf33b09fae0f077dfa3" translate="yes" xml:space="preserve">
          <source>To specify an attribute by local name and namespace URI, use the &lt;code&gt;setIdAttributeNS&lt;/code&gt; method.</source>
          <target state="translated">ローカル名と名前空間URIで属性を指定するには、 &lt;code&gt;setIdAttributeNS&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="cff0db5d830da38e5dab22f343491d41223cf96f" translate="yes" xml:space="preserve">
          <source>To specify an exact day of month, set the &lt;em&gt;month&lt;/em&gt; and &lt;em&gt;day-of-month&lt;/em&gt; to an exact value, and &lt;em&gt;day-of-week&lt;/em&gt; to zero. For example, to specify March 1, set the &lt;em&gt;month&lt;/em&gt; to &lt;a href=&quot;calendar#MARCH&quot;&gt;&lt;code&gt;MARCH&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;day-of-month&lt;/em&gt; to 1, and &lt;em&gt;day-of-week&lt;/em&gt; to 0.</source>
          <target state="translated">正確な日を指定するには、&lt;em&gt;月&lt;/em&gt;と&lt;em&gt;日を&lt;/em&gt;正確な値に設定し、&lt;em&gt;曜日&lt;/em&gt;をゼロに設定します。たとえば、3月1日を指定するには、&lt;em&gt;月&lt;/em&gt;を&lt;a href=&quot;calendar#MARCH&quot;&gt; &lt;code&gt;MARCH&lt;/code&gt; に&lt;/a&gt;、&lt;em&gt;日&lt;/em&gt;を1に、&lt;em&gt;曜日&lt;/em&gt;を0に設定します。</target>
        </trans-unit>
        <trans-unit id="a13182c264e97f96fa818419b7644ee38ec128fd" translate="yes" xml:space="preserve">
          <source>To specify an existing keystore file:</source>
          <target state="translated">既存のキーストアファイルを指定するには</target>
        </trans-unit>
        <trans-unit id="ebef5d1fda4022cf205594fb36709781cf042e4a" translate="yes" xml:space="preserve">
          <source>To specify an unlimited cardinality.</source>
          <target state="translated">無制限のカーディナリティを指定する。</target>
        </trans-unit>
        <trans-unit id="a08abe91e36bf8e0e40db14d1c5e3a4854cb4606" translate="yes" xml:space="preserve">
          <source>To specify other hint values, use the constructor which specifies the rendering hint values as parameters : &lt;a href=&quot;#%3Cinit%3E(java.awt.geom.AffineTransform,java.lang.Object,java.lang.Object)&quot;&gt;&lt;code&gt;FontRenderContext(AffineTransform, Object, Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">他のヒント値を指定するには、レンダリングヒント値をパラメーターとして指定するコンストラクターを使用します：&lt;a href=&quot;#%3Cinit%3E(java.awt.geom.AffineTransform,java.lang.Object,java.lang.Object)&quot;&gt; &lt;code&gt;FontRenderContext(AffineTransform, Object, Object)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="346177fca6fdf62142f8d6109cf3044e28c817e9" translate="yes" xml:space="preserve">
          <source>To specify the local machine, use &quot;localhost&quot; as the</source>
          <target state="translated">ローカルマシンを指定するには、&quot;localhost &quot;を</target>
        </trans-unit>
        <trans-unit id="71610a41fcfd2431be44a9737e9e5d35ee635b42" translate="yes" xml:space="preserve">
          <source>To specify, the last day-of-week of the month, set &lt;em&gt;day-of-week&lt;/em&gt; to a &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; value and &lt;em&gt;day-of-month&lt;/em&gt; to -1. For example, to specify the last Sunday of October, set &lt;em&gt;month&lt;/em&gt; to &lt;a href=&quot;calendar#OCTOBER&quot;&gt;&lt;code&gt;OCTOBER&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;day-of-week&lt;/em&gt; to &lt;a href=&quot;calendar#SUNDAY&quot;&gt;&lt;code&gt;SUNDAY&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;day-of-month&lt;/em&gt; to -1.</source>
          <target state="translated">月の最後の曜日を指定するには、&lt;em&gt;曜日&lt;/em&gt;を&lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt;値に設定し、&lt;em&gt;曜日&lt;/em&gt;を-1に設定します。たとえば、10月の最後の日曜日を指定するには、&lt;em&gt;月&lt;/em&gt;を&lt;a href=&quot;calendar#OCTOBER&quot;&gt; &lt;code&gt;OCTOBER&lt;/code&gt; に&lt;/a&gt;、&lt;em&gt;曜日&lt;/em&gt;を&lt;a href=&quot;calendar#SUNDAY&quot;&gt; &lt;code&gt;SUNDAY&lt;/code&gt; に&lt;/a&gt;、&lt;em&gt;月の日&lt;/em&gt;を-1に設定します。</target>
        </trans-unit>
        <trans-unit id="dcd96f7bcb124f560aa1419e0165a26c8730f085" translate="yes" xml:space="preserve">
          <source>To start a process with an explicit set of environment variables, first call &lt;a href=&quot;../util/map#clear()&quot;&gt;&lt;code&gt;Map.clear()&lt;/code&gt;&lt;/a&gt; before adding environment variables.</source>
          <target state="translated">環境変数の明示的なセットを使用してプロセスを開始するには、環境変数を追加する前に、まず&lt;a href=&quot;../util/map#clear()&quot;&gt; &lt;code&gt;Map.clear()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="dabced04ee8980ac3351cf7550967d78cbcac1de" translate="yes" xml:space="preserve">
          <source>To start a process with an explicit set of environment variables, first call &lt;a href=&quot;../util/map#clear--&quot;&gt;&lt;code&gt;Map.clear()&lt;/code&gt;&lt;/a&gt; before adding environment variables.</source>
          <target state="translated">明示的な環境変数のセットでプロセスを開始するには、環境変数を追加する前に、まず&lt;a href=&quot;../util/map#clear--&quot;&gt; &lt;code&gt;Map.clear()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="109df4c1c76c287e2a350cef10089ce448f57153" translate="yes" xml:space="preserve">
          <source>To start recording together with the stream, see &lt;a href=&quot;recordingstream&quot;&gt;&lt;code&gt;RecordingStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e0bc9d899b18cf9a55f9502fac886b934ba436" translate="yes" xml:space="preserve">
          <source>To start the doclet, pass &lt;code&gt;-doclet&lt;/code&gt; followed by the fully-qualified name of the entry point class (i.e. the implementation of this interface) on the javadoc tool command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92252c4bdd5f6217699cb0901a5e8755053eea3e" translate="yes" xml:space="preserve">
          <source>To statically define events, see &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30bd69c938fd7da58dad1c0549149453e6091cfa" translate="yes" xml:space="preserve">
          <source>To stop the stream, use the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f5af18360f155ca853cd312d1697693e68e5cb" translate="yes" xml:space="preserve">
          <source>To stop the stream, use the &lt;a href=&quot;eventstream#close()&quot;&gt;&lt;code&gt;EventStream.close()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58629dec74d32767f98759bd723d2f2301a534af" translate="yes" xml:space="preserve">
          <source>To successfully store and retrieve objects from a hashtable, the objects used as keys must implement the &lt;code&gt;hashCode&lt;/code&gt; method and the &lt;code&gt;equals&lt;/code&gt; method.</source>
          <target state="translated">ハッシュテーブルからオブジェクトを正常に保存および取得するには、キーとして使用されるオブジェクトが &lt;code&gt;hashCode&lt;/code&gt; メソッドと &lt;code&gt;equals&lt;/code&gt; メソッドを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="61ba1f124775d658e582d1b9c65013ec1fb595ed" translate="yes" xml:space="preserve">
          <source>To support the most common use cases, the default implementation of this method returns &lt;code&gt;true&lt;/code&gt; when the number of registered parties has become zero as the result of a party invoking &lt;code&gt;arriveAndDeregister&lt;/code&gt;. You can disable this behavior, thus enabling continuation upon future registrations, by overriding this method to always return &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">最も一般的な使用例をサポートするために、パーティが &lt;code&gt;arriveAndDeregister&lt;/code&gt; を呼び出した結果、登録済みパーティの数がゼロになった場合、このメソッドのデフォルト実装は &lt;code&gt;true&lt;/code&gt; を返します。このメソッドをオーバーライドして常に &lt;code&gt;false&lt;/code&gt; を返すことにより、この動作を無効にして、将来の登録での継続を有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="f368d4ccd74fcc91bcd332a750b4a6a26da1a44d" translate="yes" xml:space="preserve">
          <source>To take into account the difference between the offsets, and adjust the time fields, use &lt;a href=&quot;#withOffsetSameInstant(java.time.ZoneOffset)&quot;&gt;&lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オフセット間の違いを考慮し、時間フィールドを調整するには、&lt;a href=&quot;#withOffsetSameInstant(java.time.ZoneOffset)&quot;&gt; &lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="93c821be0e5b126c40cf4d122a421ae1c3b72506" translate="yes" xml:space="preserve">
          <source>To take into account the difference between the offsets, and adjust the time fields, use &lt;a href=&quot;offsetdatetime#withOffsetSameInstant-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オフセット間の違いを考慮し、時間フィールドを調整するには、&lt;a href=&quot;offsetdatetime#withOffsetSameInstant-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="c9c0200631901a83fac6a3cbd77dd17954ef0002" translate="yes" xml:space="preserve">
          <source>To take into account the difference between the offsets, and adjust the time fields, use &lt;a href=&quot;offsettime#withOffsetSameInstant-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オフセット間の違いを考慮し、時間フィールドを調整するには、&lt;a href=&quot;offsettime#withOffsetSameInstant-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;withOffsetSameInstant(java.time.ZoneOffset)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="9e2b9b7d47904152052072084a26e05664421080" translate="yes" xml:space="preserve">
          <source>To test is frame is maximized in &lt;em&gt;some&lt;/em&gt; direction use</source>
          <target state="translated">フレームをテストするには、&lt;em&gt;ある&lt;/em&gt;方向で最大化されます。</target>
        </trans-unit>
        <trans-unit id="998c3e1c979aa5e96d08fb1fc19acbddd8d58112" translate="yes" xml:space="preserve">
          <source>To the greatest extent possible, side-effects should be avoided in the definition of extension functions. The implementation evaluating an XPath expression is under no obligation to call extension functions in any particular order or any particular number of times.</source>
          <target state="translated">可能な限り、拡張関数の定義では副作用は避けなければなりません。XPath 式を評価する実装は、特定の順序や回数で拡張関数を呼び出す義務はありません。</target>
        </trans-unit>
        <trans-unit id="da5f689d392b60a5f765c1fd511f388a660b7d15" translate="yes" xml:space="preserve">
          <source>To transfer a list of files to/from Java (and the underlying platform) a &lt;code&gt;DataFlavor&lt;/code&gt; of this type/subtype and representation class of &lt;code&gt;java.util.List&lt;/code&gt; is used.</source>
          <target state="translated">Java（および基盤となるプラットフォーム）との間でファイルのリストを転送するには、このタイプ/サブタイプの &lt;code&gt;DataFlavor&lt;/code&gt; と &lt;code&gt;java.util.List&lt;/code&gt; の表現クラスを使用します。</target>
        </trans-unit>
        <trans-unit id="f461a15833bc38974edc9b81e41a6968b7bb41e3" translate="yes" xml:space="preserve">
          <source>To transfer a list of files to/from Java (and the underlying platform) a &lt;code&gt;DataFlavor&lt;/code&gt; of this type/subtype and representation class of &lt;code&gt;java.util.List&lt;/code&gt; is used. Each element of the list is required/guaranteed to be of type &lt;code&gt;java.io.File&lt;/code&gt;.</source>
          <target state="translated">Java（および基盤となるプラットフォーム）との間でファイルのリストを転送するには、このタイプ/サブタイプの &lt;code&gt;DataFlavor&lt;/code&gt; と &lt;code&gt;java.util.List&lt;/code&gt; の表現クラスを使用します。リストの各要素は、 &lt;code&gt;java.io.File&lt;/code&gt; タイプである必要があります/保証されています。</target>
        </trans-unit>
        <trans-unit id="8877e6d413405c951311656b4041e67d0ae4d3dd" translate="yes" xml:space="preserve">
          <source>To transfer a reference to an arbitrary Java object reference that has no associated MIME Content-type, across a &lt;code&gt;Transferable&lt;/code&gt; interface WITHIN THE SAME JVM, a &lt;code&gt;DataFlavor&lt;/code&gt; with this type/subtype is used, with a &lt;code&gt;representationClass&lt;/code&gt; equal to the type of the class/interface being passed across the &lt;code&gt;Transferable&lt;/code&gt;.</source>
          <target state="translated">MIMEコンテンツタイプが関連付けられていない任意のJavaオブジェクト参照への参照を転送するには、同じJVM内の &lt;code&gt;Transferable&lt;/code&gt; インターフェイスを介して、このタイプ/サブタイプの &lt;code&gt;DataFlavor&lt;/code&gt; が使用され、 &lt;code&gt;representationClass&lt;/code&gt; はクラス/インターフェイスのタイプと同じです。 &lt;code&gt;Transferable&lt;/code&gt; を介して渡されます。</target>
        </trans-unit>
        <trans-unit id="f5de0e4e24c7ca092b00bfdc400cadfeb27ea717" translate="yes" xml:space="preserve">
          <source>To transform from a GRAY device profile color space to the CIEXYZ Profile Connection Space, the device gray component is transformed by a lookup through the tone reproduction curve (TRC). The result is treated as the achromatic component of the PCS.</source>
          <target state="translated">GRAYデバイスプロファイル色空間からCIEXYZプロファイル接続空間に変換するために、デバイスのグレー成分は、トーン再生曲線(TRC)を介したルックアップによって変換される。その結果はPCSの無彩色成分として扱われる。</target>
        </trans-unit>
        <trans-unit id="5a07174d7d9a875abd26ef06df41fb77d752de07" translate="yes" xml:space="preserve">
          <source>To transform from a device profile color space to the CIEXYZ Profile Connection Space, each device color component is first linearized by a lookup through the corresponding tone reproduction curve (TRC). The resulting linear RGB components are converted to the CIEXYZ PCS using a a 3x3 matrix constructed from the RGB colorants.</source>
          <target state="translated">デバイスプロファイル色空間からCIEXYZプロファイル接続空間に変換するには、各デバイスの色成分は、まず、対応する階調再現曲線(TRC)を参照して線形化されます。結果として得られる線形RGB成分は、RGB着色剤から構築された3x3マトリックスを使用してCIEXYZ PCSに変換されます。</target>
        </trans-unit>
        <trans-unit id="541dce2eb8e5e65dd208932059455efbbbdd5166" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;JTree&lt;/code&gt; to display compound nodes (for example, nodes containing both a graphic icon and text), subclass &lt;a href=&quot;tree/treecellrenderer&quot;&gt;&lt;code&gt;TreeCellRenderer&lt;/code&gt;&lt;/a&gt; and use &lt;a href=&quot;#setCellRenderer(javax.swing.tree.TreeCellRenderer)&quot;&gt;&lt;code&gt;setCellRenderer(javax.swing.tree.TreeCellRenderer)&lt;/code&gt;&lt;/a&gt; to tell the tree to use it. To edit such nodes, subclass &lt;a href=&quot;tree/treecelleditor&quot;&gt;&lt;code&gt;TreeCellEditor&lt;/code&gt;&lt;/a&gt; and use &lt;a href=&quot;#setCellEditor(javax.swing.tree.TreeCellEditor)&quot;&gt;&lt;code&gt;setCellEditor(javax.swing.tree.TreeCellEditor)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;JTree&lt;/code&gt; を使用して複合ノード（たとえば、グラフィックアイコンとテキストの両方を含むノード）を表示するには、&lt;a href=&quot;tree/treecellrenderer&quot;&gt; &lt;code&gt;TreeCellRenderer&lt;/code&gt; &lt;/a&gt;をサブクラス化し、&lt;a href=&quot;#setCellRenderer(javax.swing.tree.TreeCellRenderer)&quot;&gt; &lt;code&gt;setCellRenderer(javax.swing.tree.TreeCellRenderer)&lt;/code&gt; &lt;/a&gt;を使用してツリーに使用するように指示します。このようなノードを編集するには、&lt;a href=&quot;tree/treecelleditor&quot;&gt; &lt;code&gt;TreeCellEditor&lt;/code&gt; &lt;/a&gt;をサブクラス化し、&lt;a href=&quot;#setCellEditor(javax.swing.tree.TreeCellEditor)&quot;&gt; &lt;code&gt;setCellEditor(javax.swing.tree.TreeCellEditor)&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="ced88a9229c08f23f786d188d536e8a5f37bcd79" translate="yes" xml:space="preserve">
          <source>To use a grid bag layout effectively, you must customize one or more of the &lt;code&gt;GridBagConstraints&lt;/code&gt; objects that are associated with its components. You customize a &lt;code&gt;GridBagConstraints&lt;/code&gt; object by setting one or more of its instance variables:</source>
          <target state="translated">グリッドバッグレイアウトを効果的に使用するには、そのコンポーネントに関連付けられている1つ以上の &lt;code&gt;GridBagConstraints&lt;/code&gt; オブジェクトをカスタマイズする必要があります。1つ以上のインスタンス変数を設定して、 &lt;code&gt;GridBagConstraints&lt;/code&gt; オブジェクトをカスタマイズします。</target>
        </trans-unit>
        <trans-unit id="8623c13d42d340af760abb5fc3f9546ca597d4cb" translate="yes" xml:space="preserve">
          <source>To use a media tracker, create an instance of &lt;code&gt;MediaTracker&lt;/code&gt; and call its &lt;code&gt;addImage&lt;/code&gt; method for each image to be tracked. In addition, each image can be assigned a unique identifier. This identifier controls the priority order in which the images are fetched. It can also be used to identify unique subsets of the images that can be waited on independently. Images with a lower ID are loaded in preference to those with a higher ID number.</source>
          <target state="translated">メディアトラッカーを使用するには、 &lt;code&gt;MediaTracker&lt;/code&gt; のインスタンスを作成し、追跡する画像ごとにその &lt;code&gt;addImage&lt;/code&gt; メソッドを呼び出します。さらに、各画像に一意の識別子を割り当てることができます。この識別子は、画像がフェッチされる優先順位を制御します。また、個別に待機できる画像の一意のサブセットを識別するためにも使用できます。ID番号が大きい画像よりもIDが小さい画像が優先的に読み込まれます。</target>
        </trans-unit>
        <trans-unit id="edc7310fe4ff06c8c4cd624845fa7121ff8cdef0" translate="yes" xml:space="preserve">
          <source>To use a method which takes an inner class type, pass a reference to one of the constant fields of the inner class. Client code cannot create new instances of the inner class types because none of those classes has a public constructor. For example, to set the color state to monochrome, use the following code:</source>
          <target state="translated">内部クラスの型を取るメソッドを使用するには、内部クラスの定数フィールドの 1 つへの参照を渡します。クライアント・コードは、内部クラスの型の新しいインスタンスを作成することはできません。例えば、色の状態をモノクロに設定するには、次のコードを使用します。</target>
        </trans-unit>
        <trans-unit id="4650ff308c006c3b337c7bf0332402913ce48c5c" translate="yes" xml:space="preserve">
          <source>To use a method which takes an inner class type, pass a reference to one of the constant fields of the inner class. Client code cannot create new instances of the inner class types because none of those classes has a public constructor. For example, to set the print dialog type to the cross-platform, pure Java print dialog, use the following code:</source>
          <target state="translated">内部クラスの型を取るメソッドを使用するには、内部クラスの定数フィールドの 1 つへの参照を渡します。クライアント・コードは、内部クラス・タイプの新しいインスタンスを作成することはできません。例えば、印刷ダイアログ・タイプをクロスプラットフォームの純粋な Java 印刷ダイアログに設定するには、次のコードを使用します。</target>
        </trans-unit>
        <trans-unit id="d27436e6d9d22024446b03c458eb94deba75bfcf" translate="yes" xml:space="preserve">
          <source>To use a particular &lt;a href=&quot;../../../../java.base/java/nio/charset/charset&quot;&gt;charset&lt;/a&gt; to encode the contents of the file, an &lt;code&gt;OutputStreamWriter&lt;/code&gt; with the chosen charset can be created from the &lt;code&gt;OutputStream&lt;/code&gt; from the returned object. If the &lt;code&gt;Writer&lt;/code&gt; from the returned object is directly used for writing, its charset is determined by the implementation. An annotation processing tool may have an &lt;code&gt;-encoding&lt;/code&gt; flag or analogous option for specifying this; otherwise, it will typically be the platform's default encoding.</source>
          <target state="translated">特定の&lt;a href=&quot;../../../../java.base/java/nio/charset/charset&quot;&gt;文字セット&lt;/a&gt;を使用してファイルの内容をエンコードするには、返されたオブジェクトの &lt;code&gt;OutputStream&lt;/code&gt; から、選択した文字セットを &lt;code&gt;OutputStreamWriter&lt;/code&gt; してOutputStreamWriterを作成できます。場合 &lt;code&gt;Writer&lt;/code&gt; 返されたオブジェクトからは直接書き込みに使用され、その文字セットは実装によって決定されます。注釈処理ツールには、これを指定するための &lt;code&gt;-encoding&lt;/code&gt; フラグまたは類似のオプションがあります。それ以外の場合は、通常、プラットフォームのデフォルトのエンコーディングになります。</target>
        </trans-unit>
        <trans-unit id="c066df81cd98c1d1365b59e66604a023a6ca69df" translate="yes" xml:space="preserve">
          <source>To use a setting control with an event, add a method that returns a &lt;code&gt;boolean&lt;/code&gt; value and takes the setting control as a parameter. Annotate the method with the &lt;code&gt;@SettingDefinition&lt;/code&gt; annotation. By default, the method name is used as the setting name, but the name can be set explicitly by using the &lt;code&gt;@Name&lt;/code&gt; annotation. If the method returns &lt;code&gt;true&lt;/code&gt;, the event will be committed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a678ea08a784c36df7ea29c59f97b488cdde224" translate="yes" xml:space="preserve">
          <source>To use glue, call &lt;code&gt;Box.createGlue&lt;/code&gt; and add the returned component to a container. The glue component has no minimum or preferred size, so it takes no space unless excess space is available. If excess space is available, then the glue component takes its share of available horizontal or vertical space, just like any other component that has no maximum width or height.</source>
          <target state="translated">To use glue, call &lt;code&gt;Box.createGlue&lt;/code&gt; and add the returned component to a container. The glue component has no minimum or preferred size, so it takes no space unless excess space is available. If excess space is available, then the glue component takes its share of available horizontal or vertical space, just like any other component that has no maximum width or height.</target>
        </trans-unit>
        <trans-unit id="1ad49767bf4a1c0e3e2a5e9df64439a945f9f2cb" translate="yes" xml:space="preserve">
          <source>To use modern schema languages such as W3C XML Schema or RELAX NG instead of DTD, you can configure your parser to be a non-validating parser by leaving the &lt;a href=&quot;#setValidating(boolean)&quot;&gt;&lt;code&gt;setValidating(boolean)&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;false&lt;/code&gt;, then use the &lt;a href=&quot;#setSchema(javax.xml.validation.Schema)&quot;&gt;&lt;code&gt;setSchema(Schema)&lt;/code&gt;&lt;/a&gt; method to associate a schema to a parser.</source>
          <target state="translated">To use modern schema languages such as W3C XML Schema or RELAX NG instead of DTD, you can configure your parser to be a non-validating parser by leaving the &lt;a href=&quot;#setValidating(boolean)&quot;&gt; &lt;code&gt;setValidating(boolean)&lt;/code&gt; &lt;/a&gt; method &lt;code&gt;false&lt;/code&gt; , then use the &lt;a href=&quot;#setSchema(javax.xml.validation.Schema)&quot;&gt; &lt;code&gt;setSchema(Schema)&lt;/code&gt; &lt;/a&gt; method to associate a schema to a parser.</target>
        </trans-unit>
        <trans-unit id="c89e2157b7e93a7bcebfbc9728b5bc211336c765" translate="yes" xml:space="preserve">
          <source>To use this class as the basis of a synchronizer, redefine the following methods, as applicable, by inspecting and/or modifying the synchronization state using &lt;a href=&quot;#getState()&quot;&gt;&lt;code&gt;getState()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setState(int)&quot;&gt;&lt;code&gt;setState(int)&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#compareAndSetState(int,int)&quot;&gt;&lt;code&gt;compareAndSetState(int, int)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">To use this class as the basis of a synchronizer, redefine the following methods, as applicable, by inspecting and/or modifying the synchronization state using &lt;a href=&quot;#getState()&quot;&gt; &lt;code&gt;getState()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#setState(int)&quot;&gt; &lt;code&gt;setState(int)&lt;/code&gt; &lt;/a&gt; and/or &lt;a href=&quot;#compareAndSetState(int,int)&quot;&gt; &lt;code&gt;compareAndSetState(int, int)&lt;/code&gt; &lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="8b5faa256a72bd87ad66902ce359b5fa4dc07a0c" translate="yes" xml:space="preserve">
          <source>To use this class as the basis of a synchronizer, redefine the following methods, as applicable, by inspecting and/or modifying the synchronization state using &lt;a href=&quot;abstractqueuedsynchronizer#getState--&quot;&gt;&lt;code&gt;getState()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;abstractqueuedsynchronizer#setState-int-&quot;&gt;&lt;code&gt;setState(int)&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;abstractqueuedsynchronizer#compareAndSetState-int-int-&quot;&gt;&lt;code&gt;compareAndSetState(int, int)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">このクラスをシンクロナイザーのベースとして使用するには、&lt;a href=&quot;abstractqueuedsynchronizer#getState--&quot;&gt; &lt;code&gt;getState()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;abstractqueuedsynchronizer#setState-int-&quot;&gt; &lt;code&gt;setState(int)&lt;/code&gt; &lt;/a&gt;、および/または&lt;a href=&quot;abstractqueuedsynchronizer#compareAndSetState-int-int-&quot;&gt; &lt;code&gt;compareAndSetState(int, int)&lt;/code&gt; &lt;/a&gt;を使用して同期状態を検査および/または変更することにより、必要に応じて次のメソッドを再定義します。</target>
        </trans-unit>
        <trans-unit id="7e6cc05498813ffdab066eef69ac8d90cae6e1cb" translate="yes" xml:space="preserve">
          <source>To use this interface, a developer creating a new editor can have the new component implement the interface. Or the developer can choose a wrapper based approach and provide a companion object which implements the &lt;code&gt;CellEditor&lt;/code&gt; interface (See &lt;code&gt;DefaultCellEditor&lt;/code&gt; for example). The wrapper approach is particularly useful if the user want to use a 3rd party ISV editor with &lt;code&gt;JTable&lt;/code&gt;, but the ISV didn't implement the &lt;code&gt;CellEditor&lt;/code&gt; interface. The user can simply create an object that contains an instance of the 3rd party editor object and &quot;translate&quot; the &lt;code&gt;CellEditor&lt;/code&gt; API into the 3rd party editor's API.</source>
          <target state="translated">To use this interface, a developer creating a new editor can have the new component implement the interface. Or the developer can choose a wrapper based approach and provide a companion object which implements the &lt;code&gt;CellEditor&lt;/code&gt; interface (See &lt;code&gt;DefaultCellEditor&lt;/code&gt; for example). The wrapper approach is particularly useful if the user want to use a 3rd party ISV editor with &lt;code&gt;JTable&lt;/code&gt; , but the ISV didn't implement the &lt;code&gt;CellEditor&lt;/code&gt; interface. The user can simply create an object that contains an instance of the 3rd party editor object and &quot;translate&quot; the &lt;code&gt;CellEditor&lt;/code&gt; API into the 3rd party editor's API.</target>
        </trans-unit>
        <trans-unit id="67b95c888473f7898537a4595e5794a82d55cc67" translate="yes" xml:space="preserve">
          <source>To validate one &lt;code&gt;Source&lt;/code&gt; into another kind of &lt;code&gt;Result&lt;/code&gt;, use the identity transformer (see &lt;a href=&quot;../transform/transformerfactory#newTransformer()&quot;&gt;&lt;code&gt;TransformerFactory.newTransformer()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">To validate one &lt;code&gt;Source&lt;/code&gt; into another kind of &lt;code&gt;Result&lt;/code&gt; , use the identity transformer (see &lt;a href=&quot;../transform/transformerfactory#newTransformer()&quot;&gt; &lt;code&gt;TransformerFactory.newTransformer()&lt;/code&gt; &lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="b737e8d7cd0749fe7af3cbdde2df593c22290739" translate="yes" xml:space="preserve">
          <source>To write the contents of a Source to standard output:</source>
          <target state="translated">ソースの内容を標準出力に書き込む。</target>
        </trans-unit>
        <trans-unit id="b3957b540892debf6dc1ef8d89f9aa2666b7352b" translate="yes" xml:space="preserve">
          <source>ToASCII operation can fail. ToASCII fails if any step of it fails. If ToASCII operation fails, an IllegalArgumentException will be thrown. In this case, the input string should not be used in an internationalized domain name.</source>
          <target state="translated">ToASCIIの操作に失敗することがあります。ToASCII操作のいずれかのステップに失敗すると失敗します。ToASCII操作に失敗すると、IllegalArgumentExceptionがスローされます。この場合、国際化されたドメイン名で入力文字列を使用してはならない。</target>
        </trans-unit>
        <trans-unit id="ba0a3f3c82b6a5fc5288edead51ddf50d3b0d1e9" translate="yes" xml:space="preserve">
          <source>ToDoubleBiFunction</source>
          <target state="translated">ToDoubleBiFunction</target>
        </trans-unit>
        <trans-unit id="0318cdbb2b34e80a79e890127925ce52072d7f3c" translate="yes" xml:space="preserve">
          <source>ToDoubleBiFunction.applyAsDouble()</source>
          <target state="translated">ToDoubleBiFunction.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="09f750600a104a44d78135d5e870412f3c7805b5" translate="yes" xml:space="preserve">
          <source>ToDoubleFunction</source>
          <target state="translated">ToDoubleFunction</target>
        </trans-unit>
        <trans-unit id="4e2d379b77935a919a92841c689e185cb4a21cb2" translate="yes" xml:space="preserve">
          <source>ToDoubleFunction.applyAsDouble()</source>
          <target state="translated">ToDoubleFunction.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="32c237c8ac27995aa55b0864b8fe91bf8f438790" translate="yes" xml:space="preserve">
          <source>ToIntBiFunction</source>
          <target state="translated">ToIntBiFunction</target>
        </trans-unit>
        <trans-unit id="05cf5723dc4be71476d90209a69fb5b6d835eec9" translate="yes" xml:space="preserve">
          <source>ToIntBiFunction.applyAsInt()</source>
          <target state="translated">ToIntBiFunction.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="91a9b9d60fbf777890e4726e3100e8b9ba66b566" translate="yes" xml:space="preserve">
          <source>ToIntFunction</source>
          <target state="translated">ToIntFunction</target>
        </trans-unit>
        <trans-unit id="f55d62bed2d4830e1e8b4d4e6a85cecdb300e5cd" translate="yes" xml:space="preserve">
          <source>ToIntFunction.applyAsInt()</source>
          <target state="translated">ToIntFunction.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="4949a89642588c0be35330ecc2f3ae51fd705ac1" translate="yes" xml:space="preserve">
          <source>ToLongBiFunction</source>
          <target state="translated">ToLongBiFunction</target>
        </trans-unit>
        <trans-unit id="4bd64f065ed2902bbcd8f76d6e44881bc4118d44" translate="yes" xml:space="preserve">
          <source>ToLongBiFunction.applyAsLong()</source>
          <target state="translated">ToLongBiFunction.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="41f13cd58fc6b1fa34ead7945815dddba3add0bd" translate="yes" xml:space="preserve">
          <source>ToLongFunction</source>
          <target state="translated">ToLongFunction</target>
        </trans-unit>
        <trans-unit id="e56d9ac1d48e88ffbac75f7e19702347c5e304ad" translate="yes" xml:space="preserve">
          <source>ToLongFunction.applyAsLong()</source>
          <target state="translated">ToLongFunction.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="3eaca1a8d0cf29b74a258f818fe7e8e50c017801" translate="yes" xml:space="preserve">
          <source>ToUnicode never fails. In case of any error, the input string is returned unmodified.</source>
          <target state="translated">ToUnicodeは決して失敗しません。エラーが発生した場合、入力文字列は変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="226fb00dcae85857dd8afacc31a7c3741fdc264f" translate="yes" xml:space="preserve">
          <source>Together these two values allow a year or month to be divided into weeks.</source>
          <target state="translated">この2つの値を合わせると、1年または1ヶ月を週単位で区切ることができます。</target>
        </trans-unit>
        <trans-unit id="a8a9868f04561e5997b3c2f342bb195894290ad9" translate="yes" xml:space="preserve">
          <source>Together, spatial and temporal safety ensure that each memory access operation either succeeds - and accesses a valid memory location - or fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c757412827fb84e9636802c567ddc1c67ea694f" translate="yes" xml:space="preserve">
          <source>ToggleButton region.</source>
          <target state="translated">ToggleButton 領域。</target>
        </trans-unit>
        <trans-unit id="d68b831ce922a8ef149f2f1c62214c6482970637" translate="yes" xml:space="preserve">
          <source>ToggleButton region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ToggleButton&lt;/code&gt;.</source>
          <target state="translated">ToggleButton region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ToggleButton&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b78bbf8008c03e4730565193264e3e64a6997b94" translate="yes" xml:space="preserve">
          <source>ToggleButtonBorder</source>
          <target state="translated">ToggleButtonBorder</target>
        </trans-unit>
        <trans-unit id="d220a922b1e915dbdac75c19d1818c1645d9cc06" translate="yes" xml:space="preserve">
          <source>ToggleButtonModel</source>
          <target state="translated">ToggleButtonModel</target>
        </trans-unit>
        <trans-unit id="683bf79e4fdddefcaa45e5500933ac85bb229ea7" translate="yes" xml:space="preserve">
          <source>Toggles the Underline attribute.</source>
          <target state="translated">下線属性をトグルします。</target>
        </trans-unit>
        <trans-unit id="1b872d26ed9a37d0cb1b6a84ab2e42dae55a77c9" translate="yes" xml:space="preserve">
          <source>Toggles the bold attribute.</source>
          <target state="translated">太字属性をトグルします。</target>
        </trans-unit>
        <trans-unit id="bd730c4fe08f8ff532e0dfc8edaf4aeb3bbccc5a" translate="yes" xml:space="preserve">
          <source>Toggles the italic attribute.</source>
          <target state="translated">斜体属性をトグルします。</target>
        </trans-unit>
        <trans-unit id="00892eaa163e9c57aecf80ab165bf3f566fe3e1e" translate="yes" xml:space="preserve">
          <source>Token had invalid integrity check.</source>
          <target state="translated">トークンの整合性チェックが無効でした。</target>
        </trans-unit>
        <trans-unit id="5b099a72141eb62ad771b99b713aebac10a2db2e" translate="yes" xml:space="preserve">
          <source>TooManyListenersException</source>
          <target state="translated">TooManyListenersException</target>
        </trans-unit>
        <trans-unit id="9a830c714bb2b52b8f817649335855437ebcb701" translate="yes" xml:space="preserve">
          <source>Tool</source>
          <target state="translated">Tool</target>
        </trans-unit>
        <trans-unit id="5b3ce5d1fc3d8b463b2dc92627e5537e7110ca7a" translate="yes" xml:space="preserve">
          <source>Tool Guides:</source>
          <target state="translated">ツールガイド。</target>
        </trans-unit>
        <trans-unit id="fbf98d3475cd8e7ce0023df6b5ecf8c149cbff36" translate="yes" xml:space="preserve">
          <source>Tool providers are normally located using the service-provider loading facility defined by &lt;a href=&quot;../serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt;. Each provider must provide a name, and a method to run an instance of the corresponding tool. When a tool is run, it will be provided with an array of string arguments, and a pair of streams: one for normal (or expected) output and the other for reporting any errors that may occur. The interpretation of the string arguments will normally be defined by each individual tool provider, but will generally correspond to the arguments that could be provided to the tool when invoking the tool from the command line.</source>
          <target state="translated">Tool providers are normally located using the service-provider loading facility defined by &lt;a href=&quot;../serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;. Each provider must provide a name, and a method to run an instance of the corresponding tool. When a tool is run, it will be provided with an array of string arguments, and a pair of streams: one for normal (or expected) output and the other for reporting any errors that may occur. The interpretation of the string arguments will normally be defined by each individual tool provider, but will generally correspond to the arguments that could be provided to the tool when invoking the tool from the command line.</target>
        </trans-unit>
        <trans-unit id="2465964821ffab0f30173adb50e18b4b07c33308" translate="yes" xml:space="preserve">
          <source>Tool.getSourceVersions()</source>
          <target state="translated">Tool.getSourceVersions()</target>
        </trans-unit>
        <trans-unit id="ca44d4b0cd3f5970bb01aa99598f074dd8256704" translate="yes" xml:space="preserve">
          <source>Tool.run()</source>
          <target state="translated">Tool.run()</target>
        </trans-unit>
        <trans-unit id="15070d24707f510b804c6c45feb278d713ed5452" translate="yes" xml:space="preserve">
          <source>ToolBar region.</source>
          <target state="translated">ツールバーの領域。</target>
        </trans-unit>
        <trans-unit id="ee5eff586a94b2471a79447c828f2a335f0f6606" translate="yes" xml:space="preserve">
          <source>ToolBar region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ToolBar&lt;/code&gt;.</source>
          <target state="translated">ToolBar region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ToolBar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef038e2879004ebd9b53c4cf5bd6bbe3aa4c6da7" translate="yes" xml:space="preserve">
          <source>ToolBar separator region.</source>
          <target state="translated">ツールバーのセパレータ領域。</target>
        </trans-unit>
        <trans-unit id="aacd928505acec22915958108a213be277a8855a" translate="yes" xml:space="preserve">
          <source>ToolBar separator region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ToolBarSeparator&lt;/code&gt;.</source>
          <target state="translated">ToolBar separator region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ToolBarSeparator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d2829e6ea7527ded1454c815a88515eaaf8044d" translate="yes" xml:space="preserve">
          <source>ToolBarBorder</source>
          <target state="translated">ToolBarBorder</target>
        </trans-unit>
        <trans-unit id="086db6083632a387a5bd08783e3bec2e0ab48904" translate="yes" xml:space="preserve">
          <source>ToolBarContListener</source>
          <target state="translated">ToolBarContListener</target>
        </trans-unit>
        <trans-unit id="956e3ed8e195a0e920adc9e8821bed22baf407c7" translate="yes" xml:space="preserve">
          <source>ToolBarFocusListener</source>
          <target state="translated">ToolBarFocusListener</target>
        </trans-unit>
        <trans-unit id="b2df69df3be31703b142b58640f415306119eb39" translate="yes" xml:space="preserve">
          <source>ToolBarUI</source>
          <target state="translated">ToolBarUI</target>
        </trans-unit>
        <trans-unit id="9db5d55f0a18fe16f909e9161136b5b2187f90ab" translate="yes" xml:space="preserve">
          <source>ToolProvider</source>
          <target state="translated">ToolProvider</target>
        </trans-unit>
        <trans-unit id="125c22c4e79d3f1aaa4ff4818affaaa630c94b27" translate="yes" xml:space="preserve">
          <source>ToolProvider.getSystemDocumentationTool()</source>
          <target state="translated">ToolProvider.getSystemDocumentationTool()</target>
        </trans-unit>
        <trans-unit id="5a85c700b447e10795dd82b2c999d7b683f2201d" translate="yes" xml:space="preserve">
          <source>ToolProvider.getSystemJavaCompiler()</source>
          <target state="translated">ToolProvider.getSystemJavaCompiler()</target>
        </trans-unit>
        <trans-unit id="adebd288935819a43f9fa88aef37e1f86d705eb0" translate="yes" xml:space="preserve">
          <source>ToolProvider.getSystemToolClassLoader()</source>
          <target state="translated">ToolProvider.getSystemToolClassLoader()</target>
        </trans-unit>
        <trans-unit id="7adb07c19770cc3b61f6a8a2460accfe9f8e907e" translate="yes" xml:space="preserve">
          <source>ToolTip region.</source>
          <target state="translated">ToolTipの領域。</target>
        </trans-unit>
        <trans-unit id="39f49b28ed2b84b6736d7c3fed882c5f9be9f023" translate="yes" xml:space="preserve">
          <source>ToolTip region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ToolTip&lt;/code&gt;.</source>
          <target state="translated">ToolTip region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ToolTip&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38d3412530cce9dcc79ca575d1f0aaee689f4f88" translate="yes" xml:space="preserve">
          <source>ToolTipManager</source>
          <target state="translated">ToolTipManager</target>
        </trans-unit>
        <trans-unit id="568f809ff3e935085ad4022d1c63e42de4db81a4" translate="yes" xml:space="preserve">
          <source>ToolTipManager contains numerous properties for configuring how long it will take for the tooltips to become visible, and how long till they hide. Consider a component that has a different tooltip based on where the mouse is, such as JTree. When the mouse moves into the JTree and over a region that has a valid tooltip, the tooltip will become visible after &lt;code&gt;initialDelay&lt;/code&gt; milliseconds. After &lt;code&gt;dismissDelay&lt;/code&gt; milliseconds the tooltip will be hidden. If the mouse is over a region that has a valid tooltip, and the tooltip is currently visible, when the mouse moves to a region that doesn't have a valid tooltip the tooltip will be hidden. If the mouse then moves back into a region that has a valid tooltip within &lt;code&gt;reshowDelay&lt;/code&gt; milliseconds, the tooltip will immediately be shown, otherwise the tooltip will be shown again after &lt;code&gt;initialDelay&lt;/code&gt; milliseconds.</source>
          <target state="translated">ToolTipManager contains numerous properties for configuring how long it will take for the tooltips to become visible, and how long till they hide. Consider a component that has a different tooltip based on where the mouse is, such as JTree. When the mouse moves into the JTree and over a region that has a valid tooltip, the tooltip will become visible after &lt;code&gt;initialDelay&lt;/code&gt; milliseconds. After &lt;code&gt;dismissDelay&lt;/code&gt; milliseconds the tooltip will be hidden. If the mouse is over a region that has a valid tooltip, and the tooltip is currently visible, when the mouse moves to a region that doesn't have a valid tooltip the tooltip will be hidden. If the mouse then moves back into a region that has a valid tooltip within &lt;code&gt;reshowDelay&lt;/code&gt; milliseconds, the tooltip will immediately be shown, otherwise the tooltip will be shown again after &lt;code&gt;initialDelay&lt;/code&gt; milliseconds.</target>
        </trans-unit>
        <trans-unit id="6600982cb7e4358db50baf5b187ed289429d1f18" translate="yes" xml:space="preserve">
          <source>ToolTipManager.insideTimerAction</source>
          <target state="translated">ToolTipManager.insideTimerAction</target>
        </trans-unit>
        <trans-unit id="2316939116e9d0469815a70f03ba93e66d2314d6" translate="yes" xml:space="preserve">
          <source>ToolTipManager.outsideTimerAction</source>
          <target state="translated">ToolTipManager.outsideTimerAction</target>
        </trans-unit>
        <trans-unit id="e863f01069ef272e5960e81e2d6838690abc5d1f" translate="yes" xml:space="preserve">
          <source>ToolTipManager.stillInsideTimerAction</source>
          <target state="translated">ToolTipManager.stillInsideTimerAction</target>
        </trans-unit>
        <trans-unit id="e951ef37536109b81eb0be66b5d6a1a4024fb5db" translate="yes" xml:space="preserve">
          <source>ToolTipUI</source>
          <target state="translated">ToolTipUI</target>
        </trans-unit>
        <trans-unit id="8dc50da42e7d05864e72d6daf9f4b16c0ae24a43" translate="yes" xml:space="preserve">
          <source>Toolkit</source>
          <target state="translated">Toolkit</target>
        </trans-unit>
        <trans-unit id="94ac7ee6ec8c72608b921e020505b99a237e8057" translate="yes" xml:space="preserve">
          <source>Tools can be located using &lt;a href=&quot;../../../java.base/java/util/serviceloader#load(java.lang.Class)&quot;&gt;&lt;code&gt;ServiceLoader.load(Class)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tools can be located using &lt;a href=&quot;../../../java.base/java/util/serviceloader#load(java.lang.Class)&quot;&gt; &lt;code&gt;ServiceLoader.load(Class)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d0860f604b36747580272753c6007388c2eb7dbf" translate="yes" xml:space="preserve">
          <source>Tools can be located using &lt;a href=&quot;../../java/util/serviceloader#load-java.lang.Class-&quot;&gt;&lt;code&gt;ServiceLoader.load(Class)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ツールは&lt;a href=&quot;../../java/util/serviceloader#load-java.lang.Class-&quot;&gt; &lt;code&gt;ServiceLoader.load(Class)&lt;/code&gt; &lt;/a&gt;を使用して見つけることができます。</target>
        </trans-unit>
        <trans-unit id="6c010b505391b31007eb90bfdce58c4e24d5a65c" translate="yes" xml:space="preserve">
          <source>Tools can visualize data in a meaningful way when annotations are used (for example, &lt;code&gt;Label&lt;/code&gt;, &lt;code&gt;Description&lt;/code&gt;, and &lt;code&gt;Timespan&lt;/code&gt;). Annotations applied to an &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; class or its fields are included if they are present (indirectly, directly, or associated), have the &lt;code&gt;MetadataDefinition&lt;/code&gt; annotation, and they do not contain enums, arrays, or classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994e2419403c75aa5d17ef3f957a1d7e69efb722" translate="yes" xml:space="preserve">
          <source>TopLevelWindowListener</source>
          <target state="translated">TopLevelWindowListener</target>
        </trans-unit>
        <trans-unit id="962a55582a58549b015b01f77b02304c255caf89" translate="yes" xml:space="preserve">
          <source>Total distance that will be indented.</source>
          <target state="translated">インデントされる総距離。</target>
        </trans-unit>
        <trans-unit id="3804f76629833c58abdf20e0ebc34b97e73dfaeb" translate="yes" xml:space="preserve">
          <source>Total distance that will be indented. The sum of leftChildIndent and rightChildIndent.</source>
          <target state="translated">インデントされる距離の合計。leftChildIndentとrightChildIndentの合計。</target>
        </trans-unit>
        <trans-unit id="0feecb8e14733606175a5040ce0de446187536bb" translate="yes" xml:space="preserve">
          <source>Traces the activities performed by the com.sun.jdi implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028d61362e64e62f1cd4e2aeaeff3a1113fd20ea" translate="yes" xml:space="preserve">
          <source>Traces the activities performed by the com.sun.jdi implementation. All trace information is output to System.err. The given trace flags are used to limit the output to only the information desired. The given flags are in effect and the corresponding trace will continue until the next call to this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c6cb80e9280eef1127b133e1dde0e7812ea696" translate="yes" xml:space="preserve">
          <source>Tracing enabled for JDWP packets received from target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2266261726b960588064460dc6807683a804d0f5" translate="yes" xml:space="preserve">
          <source>Tracing enabled for JDWP packets sent to target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f54777a4828a9544b4c6b15cc216e5ad2871c7" translate="yes" xml:space="preserve">
          <source>Tracing enabled for internal event handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4dac284d3f376cb8b39ed31096f14a30fe99f5" translate="yes" xml:space="preserve">
          <source>Tracing enabled for internal management of object references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb046aea55d429a00dca32abb0ca036844887f75" translate="yes" xml:space="preserve">
          <source>Tracing enabled for internal managment of reference types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0447f045426fcf17f6cf18cce5f12edd9cfb6f" translate="yes" xml:space="preserve">
          <source>Tracing of this class may be enabled by setting the System property &lt;code&gt;javax.sql.rowset.RowSetFactory.debug&lt;/code&gt; to any value but &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Tracing of this class may be enabled by setting the System property &lt;code&gt;javax.sql.rowset.RowSetFactory.debug&lt;/code&gt; to any value but &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1c5a7af06ba8c911bcfd11f72d7463fed9a472d" translate="yes" xml:space="preserve">
          <source>Track</source>
          <target state="translated">Track</target>
        </trans-unit>
        <trans-unit id="a96b5091f38daf8068bd9ac0a37b2decbe465021" translate="yes" xml:space="preserve">
          <source>Track changes of a column moving due to margin changes.</source>
          <target state="translated">マージンの変更による列の移動の変化を追跡します。</target>
        </trans-unit>
        <trans-unit id="9a40c3d92d113c1ac04c41389c6b999faee59a99" translate="yes" xml:space="preserve">
          <source>Track changes of a column repositioning.</source>
          <target state="translated">カラムの再配置の変更を追跡します。</target>
        </trans-unit>
        <trans-unit id="a66a12c603b3fbbf86b46bf90bf5fd54b23ee71b" translate="yes" xml:space="preserve">
          <source>Track changes to a cell's contents.</source>
          <target state="translated">セルの内容の変更を追跡します。</target>
        </trans-unit>
        <trans-unit id="0717b512caa4830e4107db5c9f9faec9c6e3bb63" translate="yes" xml:space="preserve">
          <source>Track changes to a cell's contents. Invoked when editing is finished. The changes are saved, the editor object is discarded, and the cell is rendered once again.</source>
          <target state="translated">セルの内容の変更を追跡します。編集が終了したときに呼び出されます。変更は保存され、エディタオブジェクトは破棄され、セルは再びレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="d625e49ec5cc65508b784b51f3d1a03d13b72768" translate="yes" xml:space="preserve">
          <source>Track changes to selection model, column model, etc. so as to be able to re-place listeners on those in order to pass on information to the Accessibility PropertyChange mechanism</source>
          <target state="translated">選択モデルやカラムモデルなどの変更を追跡し、アクセシビリティのプロパティ変更メカニズムに情報を渡すためにリスナーを再配置できるようにします。</target>
        </trans-unit>
        <trans-unit id="6eb099e7387de6bf85a8d40f06c034d92ac6ecd2" translate="yes" xml:space="preserve">
          <source>Track changes to table cell selections</source>
          <target state="translated">テーブルセル選択の変更を追跡</target>
        </trans-unit>
        <trans-unit id="c66b7f009b0167742d640fa262f51cfe24f7e1b6" translate="yes" xml:space="preserve">
          <source>Track changes to the table contents</source>
          <target state="translated">テーブルの内容の変更を追跡する</target>
        </trans-unit>
        <trans-unit id="65e0a87c099a65a91db2db4f58962627743249c9" translate="yes" xml:space="preserve">
          <source>Track changes to the table contents (column deletions)</source>
          <target state="translated">テーブルの内容の変更(列の削除)を追跡する</target>
        </trans-unit>
        <trans-unit id="1d342438d211067e35724d0a677edc142443b8f5" translate="yes" xml:space="preserve">
          <source>Track changes to the table contents (column insertions)</source>
          <target state="translated">表の内容の変更(列の挿入)を追跡する</target>
        </trans-unit>
        <trans-unit id="50ccbc484c00663890f1f795f217c92c24c3737f" translate="yes" xml:space="preserve">
          <source>Track changes to the table contents (row deletions)</source>
          <target state="translated">テーブルの内容の変更(行の削除)を追跡する</target>
        </trans-unit>
        <trans-unit id="446c13e903ffb2354471305b15a558b362c4fd92" translate="yes" xml:space="preserve">
          <source>Track changes to the table contents (row insertions)</source>
          <target state="translated">テーブルの内容の変更を追跡する(行の挿入</target>
        </trans-unit>
        <trans-unit id="c5c5e13e2b305456a9dec987c2f6f2dca26195a2" translate="yes" xml:space="preserve">
          <source>Track color</source>
          <target state="translated">トラックカラー</target>
        </trans-unit>
        <trans-unit id="a7b34541c4884c191419a8069a7262444064fc43" translate="yes" xml:space="preserve">
          <source>Track highlight</source>
          <target state="translated">トラックハイライト</target>
        </trans-unit>
        <trans-unit id="4e1c4ca37774d9f37a8d64e698f33ad40e088877" translate="yes" xml:space="preserve">
          <source>Track highlight color</source>
          <target state="translated">トラックハイライトカラー</target>
        </trans-unit>
        <trans-unit id="5b9a3bdff598e81fc2ed4beeeb4183ada9f91af7" translate="yes" xml:space="preserve">
          <source>Track listener</source>
          <target state="translated">トラックリスナー</target>
        </trans-unit>
        <trans-unit id="326e5181e6e5a0c5b463c0729cae4b3c6fa659be" translate="yes" xml:space="preserve">
          <source>Track mouse drags.</source>
          <target state="translated">マウスのドラッグを追跡します。</target>
        </trans-unit>
        <trans-unit id="c6da43d20337b4308ab27a0b80c9c5792dcbfcc6" translate="yes" xml:space="preserve">
          <source>Track mouse movements.</source>
          <target state="translated">マウスの動きを追跡します。</target>
        </trans-unit>
        <trans-unit id="f0223993d591b54255d8e2534e81ee02cfdbffbf" translate="yes" xml:space="preserve">
          <source>Track mouse movements. This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of &lt;code&gt;Foo&lt;/code&gt;.</source>
          <target state="translated">Track mouse movements. This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of &lt;code&gt;Foo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d5b26e00df8696f1e65aa8c0001685e90232117" translate="yes" xml:space="preserve">
          <source>Track of the ScrollBar.</source>
          <target state="translated">スクロールバーの軌跡。</target>
        </trans-unit>
        <trans-unit id="7c4baa95635b1a5b70844da0e070e5c3d8aacc62" translate="yes" xml:space="preserve">
          <source>Track of the ScrollBar. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ScrollBarTrack&lt;/code&gt;.</source>
          <target state="translated">Track of the ScrollBar. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ScrollBarTrack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ac81aad025c15ece6f73ede5d9be10ce3ff9b50" translate="yes" xml:space="preserve">
          <source>Track of the Slider.</source>
          <target state="translated">スライダーの軌跡。</target>
        </trans-unit>
        <trans-unit id="0277e933fe63e7b985d75afe995bbe8cbe043c54" translate="yes" xml:space="preserve">
          <source>Track of the Slider. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;SliderTrack&lt;/code&gt;.</source>
          <target state="translated">Track of the Slider. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;SliderTrack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3110b2f188f3db708f8492160a1bb7dbd45632ab" translate="yes" xml:space="preserve">
          <source>Track rectangle</source>
          <target state="translated">トラック矩形</target>
        </trans-unit>
        <trans-unit id="d2dd7dd67b1998d5b835c2ba1538a4bde306f083" translate="yes" xml:space="preserve">
          <source>Track that the selection model of the TableColumnModel changed.</source>
          <target state="translated">TableColumnModelの選択モデルが変更されたことを追跡する。</target>
        </trans-unit>
        <trans-unit id="6039ae3bec62ee58d46239c85708e58980430f4a" translate="yes" xml:space="preserve">
          <source>Track.add()</source>
          <target state="translated">Track.add()</target>
        </trans-unit>
        <trans-unit id="c383eb9ec76a8558da2ada8319656f778db25dca" translate="yes" xml:space="preserve">
          <source>Track.get()</source>
          <target state="translated">Track.get()</target>
        </trans-unit>
        <trans-unit id="f06a16518df4333b85e639ec34c445659ec8dcbe" translate="yes" xml:space="preserve">
          <source>Track.remove()</source>
          <target state="translated">Track.remove()</target>
        </trans-unit>
        <trans-unit id="d7cf50c20f4790528323ec22a2123ff40f267630" translate="yes" xml:space="preserve">
          <source>Track.size()</source>
          <target state="translated">Track.size()</target>
        </trans-unit>
        <trans-unit id="c0a1198b7666cb2d73a3a3104c49ade8c53119a2" translate="yes" xml:space="preserve">
          <source>Track.ticks()</source>
          <target state="translated">Track.ticks()</target>
        </trans-unit>
        <trans-unit id="74ea56daea08ea921e0d5a468118b8ca0fbbabb1" translate="yes" xml:space="preserve">
          <source>TrackListener</source>
          <target state="translated">TrackListener</target>
        </trans-unit>
        <trans-unit id="a5b4c1faa7d0457537d0a576a4e1051518a92c7c" translate="yes" xml:space="preserve">
          <source>Tracking an animated image might not always be useful due to the multi-part nature of animated image loading and painting, but it is supported. &lt;code&gt;MediaTracker&lt;/code&gt; treats an animated image as completely loaded when the first frame is completely loaded. At that point, the &lt;code&gt;MediaTracker&lt;/code&gt; signals any waiters that the image is completely loaded. If no &lt;code&gt;ImageObserver&lt;/code&gt;s are observing the image when the first frame has finished loading, the image might flush itself to conserve resources (see &lt;a href=&quot;image#flush()&quot;&gt;&lt;code&gt;Image.flush()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Tracking an animated image might not always be useful due to the multi-part nature of animated image loading and painting, but it is supported. &lt;code&gt;MediaTracker&lt;/code&gt; treats an animated image as completely loaded when the first frame is completely loaded. At that point, the &lt;code&gt;MediaTracker&lt;/code&gt; signals any waiters that the image is completely loaded. If no &lt;code&gt;ImageObserver&lt;/code&gt; s are observing the image when the first frame has finished loading, the image might flush itself to conserve resources (see &lt;a href=&quot;image#flush()&quot;&gt; &lt;code&gt;Image.flush()&lt;/code&gt; &lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="a58efd8405db46a290d75d073d8104640ac8bf79" translate="yes" xml:space="preserve">
          <source>Tracking.</source>
          <target state="translated">Tracking.</target>
        </trans-unit>
        <trans-unit id="85320a08907c821c231cad80916218bbb079cb9c" translate="yes" xml:space="preserve">
          <source>Tracking. Table tag &quot;trak&quot; in the Open Type Specification.</source>
          <target state="translated">トラッキング。オープン型仕様のテーブルタグ「trak」。</target>
        </trans-unit>
        <trans-unit id="983312cae3602bfa06b732c390303d224ae2865c" translate="yes" xml:space="preserve">
          <source>TransactionalWriter</source>
          <target state="translated">TransactionalWriter</target>
        </trans-unit>
        <trans-unit id="6efc1f00062bdc418e52e7a45e8270db5d27a38d" translate="yes" xml:space="preserve">
          <source>TransferHandler</source>
          <target state="translated">TransferHandler</target>
        </trans-unit>
        <trans-unit id="4d39024bf5c0508d93c96f07106cef75e1d3c705" translate="yes" xml:space="preserve">
          <source>TransferHandler.DropLocation</source>
          <target state="translated">TransferHandler.DropLocation</target>
        </trans-unit>
        <trans-unit id="efe59c40447ef80e8562d9b0a2e2377bbef471b6" translate="yes" xml:space="preserve">
          <source>TransferHandler.TransferSupport</source>
          <target state="translated">TransferHandler.TransferSupport</target>
        </trans-unit>
        <trans-unit id="bb5bfba786b0eae0218a1983e05a5411de1d4796" translate="yes" xml:space="preserve">
          <source>TransferQueue</source>
          <target state="translated">TransferQueue</target>
        </trans-unit>
        <trans-unit id="573907bd24612ac4bd00872c28366e83deb01854" translate="yes" xml:space="preserve">
          <source>TransferQueue.getWaitingConsumerCount()</source>
          <target state="translated">TransferQueue.getWaitingConsumerCount()</target>
        </trans-unit>
        <trans-unit id="ca2f116faa0f32c42170a0967ec26a5841ddf432" translate="yes" xml:space="preserve">
          <source>TransferQueue.hasWaitingConsumer()</source>
          <target state="translated">TransferQueue.hasWaitingConsumer()</target>
        </trans-unit>
        <trans-unit id="4323aaff7adee58e9b2c8e02d952d56b56c5ef81" translate="yes" xml:space="preserve">
          <source>TransferQueue.transfer()</source>
          <target state="translated">TransferQueue.transfer()</target>
        </trans-unit>
        <trans-unit id="2e238bfd7c98c64fd2c433c149b7961c4585de03" translate="yes" xml:space="preserve">
          <source>TransferQueue.tryTransfer()</source>
          <target state="translated">TransferQueue.tryTransfer()</target>
        </trans-unit>
        <trans-unit id="f16cd76b3f85cd12bd0f7828042a4912460d34cb" translate="yes" xml:space="preserve">
          <source>TransferSupport</source>
          <target state="translated">TransferSupport</target>
        </trans-unit>
        <trans-unit id="6990335dee7c8275a45849c6fbbf2d43ebf36e28" translate="yes" xml:space="preserve">
          <source>Transferable</source>
          <target state="translated">Transferable</target>
        </trans-unit>
        <trans-unit id="a048d6e6d7ce25b1e50aa81a5c5db3185a0bfb6f" translate="yes" xml:space="preserve">
          <source>Transferring data</source>
          <target state="translated">データの転送</target>
        </trans-unit>
        <trans-unit id="e885c1d9baf8cbb3c0238784b38da3846bd64021" translate="yes" xml:space="preserve">
          <source>Transfers bytes from this channel's file to the given writable byte channel.</source>
          <target state="translated">このチャンネルのファイルから、指定された書き込み可能なバイトチャンネルにバイトを転送します。</target>
        </trans-unit>
        <trans-unit id="db6a55b55707a8b2cb4c137d52447d234470548e" translate="yes" xml:space="preserve">
          <source>Transfers bytes into this channel's file from the given readable byte channel.</source>
          <target state="translated">指定された読み取り可能なバイトチャネルからこのチャネルのファイルにバイトを転送します。</target>
        </trans-unit>
        <trans-unit id="ae25d2bdbba02d1a038ead90f2f5efded3e23d52" translate="yes" xml:space="preserve">
          <source>Transfers the contents of the system clipboard into the associated text model.</source>
          <target state="translated">システムクリップボードの内容を関連するテキストモデルに転送します。</target>
        </trans-unit>
        <trans-unit id="cbd15e68a1ad437641a8f2ad30e88c56745602c4" translate="yes" xml:space="preserve">
          <source>Transfers the contents of the system clipboard into the associated text model. If there is a selection in the associated view, it is replaced with the contents of the clipboard. If there is no selection, the clipboard contents are inserted in front of the current insert position in the associated view. If the clipboard is empty, does nothing.</source>
          <target state="translated">システムクリップボードの内容を関連するテキストモデルに転送します。関連するビューに選択範囲がある場合、その選択範囲はクリップボードの内容で置き換えられます。選択範囲がない場合は、クリップボードの内容が関連ビューの現在の挿入位置の前に挿入されます。クリップボードが空の場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="2fa6a81f068210dfbaf40e9bfed692ea6ec54d86" translate="yes" xml:space="preserve">
          <source>Transfers the currently selected range in the associated text model to the system clipboard, leaving the contents in the text model.</source>
          <target state="translated">関連するテキストモデルで現在選択されている範囲を、テキストモデルの内容を残してシステムのクリップボードに転送します。</target>
        </trans-unit>
        <trans-unit id="611d1de5340d1e073cceb44e30ed19f5b5770680" translate="yes" xml:space="preserve">
          <source>Transfers the currently selected range in the associated text model to the system clipboard, leaving the contents in the text model. The current selection remains intact. Does nothing for &lt;code&gt;null&lt;/code&gt; selections.</source>
          <target state="translated">Transfers the currently selected range in the associated text model to the system clipboard, leaving the contents in the text model. The current selection remains intact. Does nothing for &lt;code&gt;null&lt;/code&gt; selections.</target>
        </trans-unit>
        <trans-unit id="35e25f804b7837b202524af028aaad9b7dcb33bd" translate="yes" xml:space="preserve">
          <source>Transfers the currently selected range in the associated text model to the system clipboard, removing the contents from the model.</source>
          <target state="translated">関連するテキストモデルで現在選択されている範囲をシステムのクリップボードに転送し、モデルから内容を削除します。</target>
        </trans-unit>
        <trans-unit id="03b51f11a99e68f0930490fe297cbd6581d1ea4c" translate="yes" xml:space="preserve">
          <source>Transfers the currently selected range in the associated text model to the system clipboard, removing the contents from the model. The current selection is reset. Does nothing for &lt;code&gt;null&lt;/code&gt; selections.</source>
          <target state="translated">Transfers the currently selected range in the associated text model to the system clipboard, removing the contents from the model. The current selection is reset. Does nothing for &lt;code&gt;null&lt;/code&gt; selections.</target>
        </trans-unit>
        <trans-unit id="b125d8a36092938479dcc7ee49adeb6009285170" translate="yes" xml:space="preserve">
          <source>Transfers the element to a consumer if it is possible to do so before the timeout elapses.</source>
          <target state="translated">タイムアウトが経過する前に要素をコンシューマに転送することが可能であれば、その要素をコンシューマに転送します。</target>
        </trans-unit>
        <trans-unit id="5c9d10af3f672647b4fdfa21f16fbfe5ed54a2b9" translate="yes" xml:space="preserve">
          <source>Transfers the element to a consumer, waiting if necessary to do so.</source>
          <target state="translated">要素を消費者に転送し、必要に応じて待機します。</target>
        </trans-unit>
        <trans-unit id="1d93f2dc771c77d1c7018c91e84fbb34bc2155df" translate="yes" xml:space="preserve">
          <source>Transfers the element to a waiting consumer immediately, if possible.</source>
          <target state="translated">可能であれば、すぐに待機中の消費者に要素を転送します。</target>
        </trans-unit>
        <trans-unit id="d95d473f4ddddcca073b620f2f4dfda901926428" translate="yes" xml:space="preserve">
          <source>Transfers the focus down one focus traversal cycle.</source>
          <target state="translated">フォーカスを1つ下に移動します。</target>
        </trans-unit>
        <trans-unit id="a649438f3466bfde1245186d107e8aa131a9ed6a" translate="yes" xml:space="preserve">
          <source>Transfers the focus down one focus traversal cycle. If this Container is a focus cycle root, then the focus owner is set to this Container's default Component to focus, and the current focus cycle root is set to this Container. If this Container is not a focus cycle root, then no focus traversal operation occurs.</source>
          <target state="translated">フォーカスを1つ下のフォーカストラバーサルサイクルに転送します。このコンテナがフォーカス サイクル ルートである場合、フォーカスの所有者はこのコンテナのデフォルトのフォーカスするコンポーネントに設定され、現在のフォーカス サイクル ルートはこのコンテナに設定されます。このコンテナがフォーカス サイクル ルートでない場合は、フォーカス トラバーサル操作は発生しません。</target>
        </trans-unit>
        <trans-unit id="4cf02048d56af57db62ca74e366715fef64714da" translate="yes" xml:space="preserve">
          <source>Transfers the focus to the next component, as though this Component were the focus owner.</source>
          <target state="translated">このコンポーネントがフォーカスの所有者であるかのように、フォーカスを次のコンポーネントに転送します。</target>
        </trans-unit>
        <trans-unit id="e9d0e96733f538b88f5ddd0ff90dca81a309953d" translate="yes" xml:space="preserve">
          <source>Transfers the focus to the previous component, as though this Component were the focus owner.</source>
          <target state="translated">このコンポーネントがフォーカスの所有者であるかのように、フォーカスを前のコンポーネントに転送します。</target>
        </trans-unit>
        <trans-unit id="4fbf7be553929793707f38c164d9b63a19aeb555" translate="yes" xml:space="preserve">
          <source>Transfers the focus up one focus traversal cycle.</source>
          <target state="translated">フォーカスを1つ上に移動します。</target>
        </trans-unit>
        <trans-unit id="39f0ea168130f6ab76321469b3ad2f4afb4a2d4c" translate="yes" xml:space="preserve">
          <source>Transfers the focus up one focus traversal cycle. Typically, the focus owner is set to this Component's focus cycle root, and the current focus cycle root is set to the new focus owner's focus cycle root. If, however, this Component's focus cycle root is a Window, then the focus owner is set to the focus cycle root's default Component to focus, and the current focus cycle root is unchanged.</source>
          <target state="translated">フォーカスを1つ上のフォーカス トラバーサル サイクルに移動します。通常、フォーカスの所有者はこのコンポーネントのフォーカス サイクル ルートに設定され、現在のフォーカス サイクル ルートは新しいフォーカス所有者のフォーカス サイクル ルートに設定されます。ただし、このコンポーネントのフォーカス サイクル ルートが Window の場合、フォーカスの所有者はフォーカス サイクル ルートのデフォルトのフォーカス対象コンポーネントに設定され、現在のフォーカス サイクル ルートは変更されません。</target>
        </trans-unit>
        <trans-unit id="dea51bb13a4467c505ee6181171375f497334d54" translate="yes" xml:space="preserve">
          <source>Transform</source>
          <target state="translated">Transform</target>
        </trans-unit>
        <trans-unit id="e5d5967af8a0915223a35c2324e5a798377e0823" translate="yes" xml:space="preserve">
          <source>Transform the XML &lt;code&gt;Source&lt;/code&gt; to a &lt;code&gt;Result&lt;/code&gt;.</source>
          <target state="translated">Transform the XML &lt;code&gt;Source&lt;/code&gt; to a &lt;code&gt;Result&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e14559c0bfb9053549b9bac805b4a2bdde7b122a" translate="yes" xml:space="preserve">
          <source>Transform the XML &lt;code&gt;Source&lt;/code&gt; to a &lt;code&gt;Result&lt;/code&gt;. Specific transformation behavior is determined by the settings of the &lt;code&gt;TransformerFactory&lt;/code&gt; in effect when the &lt;code&gt;Transformer&lt;/code&gt; was instantiated and any modifications made to the &lt;code&gt;Transformer&lt;/code&gt; instance.</source>
          <target state="translated">Transform the XML &lt;code&gt;Source&lt;/code&gt; to a &lt;code&gt;Result&lt;/code&gt; . Specific transformation behavior is determined by the settings of the &lt;code&gt;TransformerFactory&lt;/code&gt; in effect when the &lt;code&gt;Transformer&lt;/code&gt; was instantiated and any modifications made to the &lt;code&gt;Transformer&lt;/code&gt; instance.</target>
        </trans-unit>
        <trans-unit id="f16b98c3656818419f9d10d1f16a20949fc0eef8" translate="yes" xml:space="preserve">
          <source>TransformAttribute</source>
          <target state="translated">TransformAttribute</target>
        </trans-unit>
        <trans-unit id="293722d19cfd51e2e5a09dd2550f71abd35c1f40" translate="yes" xml:space="preserve">
          <source>TransformAttribute.IDENTITY</source>
          <target state="translated">TransformAttribute.IDENTITY</target>
        </trans-unit>
        <trans-unit id="6ee4f327b7aa70652e2e446a2c4d3af120dcf41a" translate="yes" xml:space="preserve">
          <source>TransformException</source>
          <target state="translated">TransformException</target>
        </trans-unit>
        <trans-unit id="d199c2bf6323a8eb70bed703a7c121e6a826146e" translate="yes" xml:space="preserve">
          <source>TransformParameterSpec</source>
          <target state="translated">TransformParameterSpec</target>
        </trans-unit>
        <trans-unit id="825c096160931774c002c019a4ad0fbc2477fc69" translate="yes" xml:space="preserve">
          <source>TransformService</source>
          <target state="translated">TransformService</target>
        </trans-unit>
        <trans-unit id="6d60e9f2523110ca1d5308c2a24383c6f841f9e8" translate="yes" xml:space="preserve">
          <source>Transformation warnings and errors are sent to an &lt;a href=&quot;errorlistener&quot;&gt;&lt;code&gt;ErrorListener&lt;/code&gt;&lt;/a&gt;, at which point the application may decide to report the error or warning, and may decide to throw an &lt;code&gt;Exception&lt;/code&gt; for a non-fatal error. The &lt;code&gt;ErrorListener&lt;/code&gt; may be set via &lt;a href=&quot;transformerfactory#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt;&lt;code&gt;TransformerFactory.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt;&lt;/a&gt; for reporting errors that have to do with syntax errors in the transformation instructions, or via &lt;a href=&quot;transformer#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt;&lt;code&gt;Transformer.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt;&lt;/a&gt; to report errors that occur during the transformation. The &lt;code&gt;ErrorListener&lt;/code&gt; on both objects will always be valid and non-&lt;code&gt;null&lt;/code&gt;, whether set by the application or a default implementation provided by the processor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d280e1b48229addd9449adbb6dcaefe36078d8" translate="yes" xml:space="preserve">
          <source>Transformation warnings and errors are sent to an &lt;a href=&quot;errorlistener&quot;&gt;&lt;code&gt;ErrorListener&lt;/code&gt;&lt;/a&gt;, at which point the application may decide to report the error or warning, and may decide to throw an &lt;code&gt;Exception&lt;/code&gt; for a non-fatal error. The &lt;code&gt;ErrorListener&lt;/code&gt; may be set via &lt;a href=&quot;transformerfactory#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt;&lt;code&gt;TransformerFactory.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt;&lt;/a&gt; for reporting errors that have to do with syntax errors in the transformation instructions, or via &lt;a href=&quot;transformer#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt;&lt;code&gt;Transformer.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt;&lt;/a&gt; to report errors that occur during the transformation. The &lt;code&gt;ErrorListener&lt;/code&gt; on both objects will always be valid and non-&lt;code&gt;null&lt;/code&gt;, whether set by the application or a default implementation provided by the processor. The default implementation provided by the processor will report all warnings and errors to &lt;code&gt;System.err&lt;/code&gt; and does not throw any &lt;code&gt;Exception&lt;/code&gt;s. Applications are &lt;em&gt;strongly&lt;/em&gt; encouraged to register and use &lt;code&gt;ErrorListener&lt;/code&gt;s that insure proper behavior for warnings and errors.</source>
          <target state="translated">Transformation warnings and errors are sent to an &lt;a href=&quot;errorlistener&quot;&gt; &lt;code&gt;ErrorListener&lt;/code&gt; &lt;/a&gt;, at which point the application may decide to report the error or warning, and may decide to throw an &lt;code&gt;Exception&lt;/code&gt; for a non-fatal error. The &lt;code&gt;ErrorListener&lt;/code&gt; may be set via &lt;a href=&quot;transformerfactory#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt; &lt;code&gt;TransformerFactory.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt; &lt;/a&gt; for reporting errors that have to do with syntax errors in the transformation instructions, or via &lt;a href=&quot;transformer#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt; &lt;code&gt;Transformer.setErrorListener(javax.xml.transform.ErrorListener)&lt;/code&gt; &lt;/a&gt; to report errors that occur during the transformation. The &lt;code&gt;ErrorListener&lt;/code&gt; on both objects will always be valid and non- &lt;code&gt;null&lt;/code&gt; , whether set by the application or a default implementation provided by the processor. The default implementation provided by the processor will report all warnings and errors to &lt;code&gt;System.err&lt;/code&gt; and does not throw any &lt;code&gt;Exception&lt;/code&gt; s. Applications are &lt;em&gt;strongly&lt;/em&gt; encouraged to register and use &lt;code&gt;ErrorListener&lt;/code&gt; s that insure proper behavior for warnings and errors.</target>
        </trans-unit>
        <trans-unit id="ca4d4304cb107b1cd7b72652d0bb4f5b52d6a971" translate="yes" xml:space="preserve">
          <source>Transformations are applied in the following order:</source>
          <target state="translated">変形は、以下の順序で適用されます。</target>
        </trans-unit>
        <trans-unit id="68c170c0011cf476eed353d994b12887940cfc96" translate="yes" xml:space="preserve">
          <source>Transformer</source>
          <target state="translated">Transformer</target>
        </trans-unit>
        <trans-unit id="2789b5cbd9a2821e99e6a150ac992d10d7316d62" translate="yes" xml:space="preserve">
          <source>TransformerConfigurationException</source>
          <target state="translated">TransformerConfigurationException</target>
        </trans-unit>
        <trans-unit id="883af90d3c9644bced4d5e367780c04a85944999" translate="yes" xml:space="preserve">
          <source>TransformerException</source>
          <target state="translated">TransformerException</target>
        </trans-unit>
        <trans-unit id="e1a68aedb7058709ad3ea45966483e59a98fb00d" translate="yes" xml:space="preserve">
          <source>TransformerFactory</source>
          <target state="translated">TransformerFactory</target>
        </trans-unit>
        <trans-unit id="4542b1eb7fb62d74207fd1d6219436a78ac325f3" translate="yes" xml:space="preserve">
          <source>TransformerFactoryConfigurationError</source>
          <target state="translated">TransformerFactoryConfigurationError</target>
        </trans-unit>
        <trans-unit id="fb2dc21dd896d6d0a0c563c36760eec9b21f031c" translate="yes" xml:space="preserve">
          <source>TransformerHandler</source>
          <target state="translated">TransformerHandler</target>
        </trans-unit>
        <trans-unit id="371c312d7f3d482b6fc14ab5d03492d9b7229384" translate="yes" xml:space="preserve">
          <source>TransformerHandler ready to transform SAX events.</source>
          <target state="translated">TransformerHandler SAX イベントを変換する準備ができています。</target>
        </trans-unit>
        <trans-unit id="427f8149763a71f58d01809ed2f00fbc5d4a7482" translate="yes" xml:space="preserve">
          <source>Transforms a JAR file to or from a packed stream in Pack200 format.</source>
          <target state="translated">JARファイルをPack200形式でパックされたストリームに変換します。</target>
        </trans-unit>
        <trans-unit id="6b0dfed1f0918a8c74073e271ac82b12aec57541" translate="yes" xml:space="preserve">
          <source>Transforms a JAR file to or from a packed stream in Pack200 format. Please refer to &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/pack-spec.html&quot;&gt;Network Transfer Format JSR 200 Specification&lt;/a&gt;</source>
          <target state="translated">Transforms a JAR file to or from a packed stream in Pack200 format. Please refer to &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/pack-spec.html&quot;&gt;Network Transfer Format JSR 200 Specification&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bfa2086e372da8c2a99ed28990f49bfe633f06b9" translate="yes" xml:space="preserve">
          <source>Transforms a JAR file to or from a packed stream in Pack200 format. Please refer to Network Transfer Format JSR 200 Specification at &lt;a href=&quot;http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html&quot;&gt;http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html&lt;/a&gt;</source>
          <target state="translated">JARファイルをPack200形式のパックされたストリームとの間で変換します。&lt;a href=&quot;http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html&quot;&gt;http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html&lt;/a&gt;にあるネットワーク転送フォーマットJSR 200仕様を参照してください。</target>
        </trans-unit>
        <trans-unit id="ce1a8750249deed19897510d6e0bbdf519c54278" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in the &lt;code&gt;CS_CIEXYZ&lt;/code&gt; conversion color space into this &lt;code&gt;ColorSpace&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef28ab73c441083405e486cd1979ef28ae809b8" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in the &lt;code&gt;CS_CIEXYZ&lt;/code&gt; conversion color space into this ColorSpace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964d11dff9a0989a4149f3c67f66af739120fa89" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in the CS_CIEXYZ conversion color space into this ColorSpace.</source>
          <target state="translated">CS_CIEXYZ変換色空間にあると仮定した色値をこのColorSpaceに変換します。</target>
        </trans-unit>
        <trans-unit id="2542311544384b6fa30356588091b1be6a554772" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in the default &lt;code&gt;CS_sRGB&lt;/code&gt; color space into this &lt;code&gt;ColorSpace&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa9fd51cb460bec26ff5242e0db8ea6b0a6ac83" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in the default CS_sRGB color space into this ColorSpace.</source>
          <target state="translated">デフォルトのCS_sRGB色空間にあると想定される色の値を本ColorSpaceに変換します。</target>
        </trans-unit>
        <trans-unit id="dc045311aecd68f69f1dba3f4f42efe9eddea537" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in this &lt;code&gt;ColorSpace&lt;/code&gt; into a value in the default &lt;code&gt;CS_sRGB&lt;/code&gt; color space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d88d6d2015b4b3ee02cfb9ba5d6238bdff1e98e" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in this &lt;code&gt;ColorSpace&lt;/code&gt; into the &lt;code&gt;CS_CIEXYZ&lt;/code&gt; conversion color space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008d412030a72f05f0293bc6570d816095b1aa78" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in this ColorSpace into a value in the default CS_sRGB color space.</source>
          <target state="translated">このColorSpaceにあると仮定した色の値を、デフォルトのCS_sRGB色空間の値に変換します。</target>
        </trans-unit>
        <trans-unit id="1ea7bb6bdbb4bfdea703d87698316907483d75ac" translate="yes" xml:space="preserve">
          <source>Transforms a color value assumed to be in this ColorSpace into the CS_CIEXYZ conversion color space.</source>
          <target state="translated">このColorSpaceにあると仮定した色値をCS_CIEXYZ変換色空間に変換します。</target>
        </trans-unit>
        <trans-unit id="729ae80f9396d0d5109584099c42768ea904cc0d" translate="yes" xml:space="preserve">
          <source>Transforms a method handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8097dc874352f4cc9957266ecd2d1a92fba37bd5" translate="yes" xml:space="preserve">
          <source>Transforms an array of double precision coordinates by this transform and stores the results into an array of floats.</source>
          <target state="translated">倍精度座標の配列をこの変換で変換し、その結果をfloatの配列に格納します。</target>
        </trans-unit>
        <trans-unit id="73e8f01ee5be617d9598539b50d8cc74c29c90e2" translate="yes" xml:space="preserve">
          <source>Transforms an array of double precision coordinates by this transform and stores the results into an array of floats. The coordinates are stored in the arrays starting at the specified offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt;.</source>
          <target state="translated">Transforms an array of double precision coordinates by this transform and stores the results into an array of floats. The coordinates are stored in the arrays starting at the specified offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e4717fc7623f7c6e00900f73d4f9266a97fa7f9" translate="yes" xml:space="preserve">
          <source>Transforms an array of double precision coordinates by this transform.</source>
          <target state="translated">倍精度座標の配列を変換します。</target>
        </trans-unit>
        <trans-unit id="3a2fd7f74a967d647de81bb0c6f63a449d8179b7" translate="yes" xml:space="preserve">
          <source>Transforms an array of double precision coordinates by this transform. The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the indicated offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt;.</source>
          <target state="translated">Transforms an array of double precision coordinates by this transform. The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the indicated offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ef140d9661d2dc0e577f7a0436ff72089c61235" translate="yes" xml:space="preserve">
          <source>Transforms an array of floating point coordinates by this transform and stores the results into an array of doubles.</source>
          <target state="translated">浮動小数点座標の配列をこの変換で変換し、その結果を倍数の配列に格納します。</target>
        </trans-unit>
        <trans-unit id="65af84b8e48fadd9fc23c790fb7e4f9cd44e6477" translate="yes" xml:space="preserve">
          <source>Transforms an array of floating point coordinates by this transform and stores the results into an array of doubles. The coordinates are stored in the arrays starting at the specified offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt;.</source>
          <target state="translated">Transforms an array of floating point coordinates by this transform and stores the results into an array of doubles. The coordinates are stored in the arrays starting at the specified offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="056bd2fe87e741967309ff6b6dc50db449abb6bc" translate="yes" xml:space="preserve">
          <source>Transforms an array of floating point coordinates by this transform.</source>
          <target state="translated">浮動小数点座標の配列を変換します。</target>
        </trans-unit>
        <trans-unit id="ae68447ea2bac8c95899c3c56271dfc25c3bd649" translate="yes" xml:space="preserve">
          <source>Transforms an array of floating point coordinates by this transform. The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the specified offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt;.</source>
          <target state="translated">Transforms an array of floating point coordinates by this transform. The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the specified offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a189d1395e14c8a46d648c528c1c49627d536ccf" translate="yes" xml:space="preserve">
          <source>Transforms an array of point objects by this transform.</source>
          <target state="translated">点オブジェクトの配列を変換します。</target>
        </trans-unit>
        <trans-unit id="eba70e5caa5fbc35bab3fd2051fc0975d4383aeb" translate="yes" xml:space="preserve">
          <source>Transforms an array of point objects by this transform. If any element of the &lt;code&gt;ptDst&lt;/code&gt; array is &lt;code&gt;null&lt;/code&gt;, a new &lt;code&gt;Point2D&lt;/code&gt; object is allocated and stored into that element before storing the results of the transformation.</source>
          <target state="translated">Transforms an array of point objects by this transform. If any element of the &lt;code&gt;ptDst&lt;/code&gt; array is &lt;code&gt;null&lt;/code&gt; , a new &lt;code&gt;Point2D&lt;/code&gt; object is allocated and stored into that element before storing the results of the transformation.</target>
        </trans-unit>
        <trans-unit id="927fa967b55d72a90538c5c3704ad73f24ffc275" translate="yes" xml:space="preserve">
          <source>Transforms an array of relative distance vectors by this transform.</source>
          <target state="translated">相対距離ベクトルの配列を変換します。</target>
        </trans-unit>
        <trans-unit id="2e4e88dc726d980f33c725b2bd63d5e396026965" translate="yes" xml:space="preserve">
          <source>Transforms an array of relative distance vectors by this transform. A relative distance vector is transformed without applying the translation components of the affine transformation matrix using the following equations:</source>
          <target state="translated">この変換により,相対距離ベクトルの配列を変換します.相対距離ベクトルは,次の式を用いて,アフィン変換行列の並進成分を適用せずに変換されます.</target>
        </trans-unit>
        <trans-unit id="4a878cef0e487de3222b24a281cfa14ea24046d7" translate="yes" xml:space="preserve">
          <source>Transforms the &lt;code&gt;Raster&lt;/code&gt; using the matrix specified in the constructor.</source>
          <target state="translated">Transforms the &lt;code&gt;Raster&lt;/code&gt; using the matrix specified in the constructor.</target>
        </trans-unit>
        <trans-unit id="0fb30d4e21a4ac5cde40c7f16df8ad43727628d0" translate="yes" xml:space="preserve">
          <source>Transforms the &lt;code&gt;Raster&lt;/code&gt; using the matrix specified in the constructor. An &lt;code&gt;IllegalArgumentException&lt;/code&gt; may be thrown if the number of bands in the source or destination is incompatible with the matrix. See the class comments for more details.</source>
          <target state="translated">Transforms the &lt;code&gt;Raster&lt;/code&gt; using the matrix specified in the constructor. An &lt;code&gt;IllegalArgumentException&lt;/code&gt; may be thrown if the number of bands in the source or destination is incompatible with the matrix. See the class comments for more details.</target>
        </trans-unit>
        <trans-unit id="1082a333ba612da8e14e625574a4e3c3b0154137" translate="yes" xml:space="preserve">
          <source>Transforms the String into a series of bits that can be compared bitwise to other CollationKeys.</source>
          <target state="translated">文字列を、他のCollationKeysとビット単位で比較できる一連のビットに変換します。</target>
        </trans-unit>
        <trans-unit id="25bdaf180ce67e68f08941f5090cebffa74a9d8b" translate="yes" xml:space="preserve">
          <source>Transforms the String into a series of bits that can be compared bitwise to other CollationKeys. CollationKeys provide better performance than Collator.compare when Strings are involved in multiple comparisons. See the Collator class description for an example using CollationKeys.</source>
          <target state="translated">文字列を、他のCollationKeysとビット単位で比較できる一連のビットに変換します。文字列が複数の比較に関与している場合、CollationKeys は Collator.compare よりも優れたパフォーマンスを提供します。CollationKeys を使用した例については、Collator クラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="39892d12a2cc739beb6cae6a1582a3e317dae888" translate="yes" xml:space="preserve">
          <source>Transforms the geometry of this &lt;code&gt;Area&lt;/code&gt; using the specified &lt;a href=&quot;affinetransform&quot;&gt;&lt;code&gt;AffineTransform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Transforms the geometry of this &lt;code&gt;Area&lt;/code&gt; using the specified &lt;a href=&quot;affinetransform&quot;&gt; &lt;code&gt;AffineTransform&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a69e24c911fcf21af2ea7d86a1d9889bceed5e87" translate="yes" xml:space="preserve">
          <source>Transforms the geometry of this &lt;code&gt;Area&lt;/code&gt; using the specified &lt;a href=&quot;affinetransform&quot;&gt;&lt;code&gt;AffineTransform&lt;/code&gt;&lt;/a&gt;. The geometry is transformed in place, which permanently changes the enclosed area defined by this object.</source>
          <target state="translated">Transforms the geometry of this &lt;code&gt;Area&lt;/code&gt; using the specified &lt;a href=&quot;affinetransform&quot;&gt; &lt;code&gt;AffineTransform&lt;/code&gt; &lt;/a&gt;. The geometry is transformed in place, which permanently changes the enclosed area defined by this object.</target>
        </trans-unit>
        <trans-unit id="51e20dc7854c10e46249bbdcbae2d2f0add8734c" translate="yes" xml:space="preserve">
          <source>Transforms the geometry of this path using the specified &lt;a href=&quot;affinetransform&quot;&gt;&lt;code&gt;AffineTransform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Transforms the geometry of this path using the specified &lt;a href=&quot;affinetransform&quot;&gt; &lt;code&gt;AffineTransform&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fd83e59f39ae4b46235f81fec2901e6bba013680" translate="yes" xml:space="preserve">
          <source>Transforms the geometry of this path using the specified &lt;a href=&quot;affinetransform&quot;&gt;&lt;code&gt;AffineTransform&lt;/code&gt;&lt;/a&gt;. The geometry is transformed in place, which permanently changes the boundary defined by this object.</source>
          <target state="translated">Transforms the geometry of this path using the specified &lt;a href=&quot;affinetransform&quot;&gt; &lt;code&gt;AffineTransform&lt;/code&gt; &lt;/a&gt;. The geometry is transformed in place, which permanently changes the boundary defined by this object.</target>
        </trans-unit>
        <trans-unit id="ced2110be06fab21a481c73f884b4972282935cb" translate="yes" xml:space="preserve">
          <source>Transforms the given class file and returns a new replacement class file.</source>
          <target state="translated">与えられたクラスファイルを変換し、新しい置換クラスファイルを返します。</target>
        </trans-unit>
        <trans-unit id="081792ed831d101332b96e13241445d5aa8798ab" translate="yes" xml:space="preserve">
          <source>Transforms the given class file and returns a new replacement class file. This method is invoked when the &lt;a href=&quot;../../../../java.base/java/lang/module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt; bearing &lt;a href=&quot;#transform(java.lang.Module,java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte%5B%5D)&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt; is not overridden.</source>
          <target state="translated">Transforms the given class file and returns a new replacement class file. This method is invoked when the &lt;a href=&quot;../../../../java.base/java/lang/module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt; bearing &lt;a href=&quot;#transform(java.lang.Module,java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte%5B%5D)&quot;&gt; &lt;code&gt;transform&lt;/code&gt; &lt;/a&gt; is not overridden.</target>
        </trans-unit>
        <trans-unit id="62dfaa310d0a1828c5ee1b085e0538a7560d6840" translate="yes" xml:space="preserve">
          <source>Transforms the relative distance vector specified by &lt;code&gt;ptSrc&lt;/code&gt; and stores the result in &lt;code&gt;ptDst&lt;/code&gt;.</source>
          <target state="translated">Transforms the relative distance vector specified by &lt;code&gt;ptSrc&lt;/code&gt; and stores the result in &lt;code&gt;ptDst&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9f8d61813a3e293b4ca94f7bb45f8ad3bc5e7b6" translate="yes" xml:space="preserve">
          <source>Transforms the relative distance vector specified by &lt;code&gt;ptSrc&lt;/code&gt; and stores the result in &lt;code&gt;ptDst&lt;/code&gt;. A relative distance vector is transformed without applying the translation components of the affine transformation matrix using the following equations:</source>
          <target state="translated">Transforms the relative distance vector specified by &lt;code&gt;ptSrc&lt;/code&gt; and stores the result in &lt;code&gt;ptDst&lt;/code&gt; . A relative distance vector is transformed without applying the translation components of the affine transformation matrix using the following equations:</target>
        </trans-unit>
        <trans-unit id="bd1e29595d66356b0ed3f41bfe07285b0309a762" translate="yes" xml:space="preserve">
          <source>Transforms the source &lt;code&gt;BufferedImage&lt;/code&gt; and stores the results in the destination &lt;code&gt;BufferedImage&lt;/code&gt;.</source>
          <target state="translated">Transforms the source &lt;code&gt;BufferedImage&lt;/code&gt; and stores the results in the destination &lt;code&gt;BufferedImage&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77f14ea4e39e560eedc22a9f9212197bab2c5835" translate="yes" xml:space="preserve">
          <source>Transforms the source &lt;code&gt;BufferedImage&lt;/code&gt; and stores the results in the destination &lt;code&gt;BufferedImage&lt;/code&gt;. If the color models for the two images do not match, a color conversion into the destination color model is performed. If the destination image is null, a &lt;code&gt;BufferedImage&lt;/code&gt; is created with the source &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">Transforms the source &lt;code&gt;BufferedImage&lt;/code&gt; and stores the results in the destination &lt;code&gt;BufferedImage&lt;/code&gt; . If the color models for the two images do not match, a color conversion into the destination color model is performed. If the destination image is null, a &lt;code&gt;BufferedImage&lt;/code&gt; is created with the source &lt;code&gt;ColorModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65488e918a1f2eb2eedf027c1cf798535690c673" translate="yes" xml:space="preserve">
          <source>Transforms the source &lt;code&gt;Raster&lt;/code&gt; and stores the results in the destination &lt;code&gt;Raster&lt;/code&gt;.</source>
          <target state="translated">Transforms the source &lt;code&gt;Raster&lt;/code&gt; and stores the results in the destination &lt;code&gt;Raster&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c77a56fe300a99482502db75293aa9630b0d7583" translate="yes" xml:space="preserve">
          <source>Transforms the source &lt;code&gt;Raster&lt;/code&gt; and stores the results in the destination &lt;code&gt;Raster&lt;/code&gt;. This operation performs the transform band by band.</source>
          <target state="translated">Transforms the source &lt;code&gt;Raster&lt;/code&gt; and stores the results in the destination &lt;code&gt;Raster&lt;/code&gt; . This operation performs the transform band by band.</target>
        </trans-unit>
        <trans-unit id="fa3c1bea1212da2ae4065a3397a955cf429226b5" translate="yes" xml:space="preserve">
          <source>Transforms the specified &lt;code&gt;ptSrc&lt;/code&gt; and stores the result in &lt;code&gt;ptDst&lt;/code&gt;.</source>
          <target state="translated">Transforms the specified &lt;code&gt;ptSrc&lt;/code&gt; and stores the result in &lt;code&gt;ptDst&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9661b85c478517849c21312551c6078efe16afb" translate="yes" xml:space="preserve">
          <source>Transforms the specified &lt;code&gt;ptSrc&lt;/code&gt; and stores the result in &lt;code&gt;ptDst&lt;/code&gt;. If &lt;code&gt;ptDst&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a new &lt;a href=&quot;point2d&quot;&gt;&lt;code&gt;Point2D&lt;/code&gt;&lt;/a&gt; object is allocated and then the result of the transformation is stored in this object. In either case, &lt;code&gt;ptDst&lt;/code&gt;, which contains the transformed point, is returned for convenience. If &lt;code&gt;ptSrc&lt;/code&gt; and &lt;code&gt;ptDst&lt;/code&gt; are the same object, the input point is correctly overwritten with the transformed point.</source>
          <target state="translated">指定された &lt;code&gt;ptSrc&lt;/code&gt; を変換し、結果を &lt;code&gt;ptDst&lt;/code&gt; に格納します。場合 &lt;code&gt;ptDst&lt;/code&gt; がある &lt;code&gt;null&lt;/code&gt; 、新しい&lt;a href=&quot;point2d&quot;&gt; &lt;code&gt;Point2D&lt;/code&gt; &lt;/a&gt;オブジェクトが割り当てられ、その後、変換の結果は、このオブジェクトに格納されています。いずれの場合も、 &lt;code&gt;ptDst&lt;/code&gt; 、変換されたポイントを含むptDstが返されます。場合 &lt;code&gt;ptSrc&lt;/code&gt; と &lt;code&gt;ptDst&lt;/code&gt; が同じオブジェクトであり、入力点が正しく変換された点で上書きされます。</target>
        </trans-unit>
        <trans-unit id="8f82ebbda17c9e759e1ffad7e1dff30303e7764b" translate="yes" xml:space="preserve">
          <source>Transforms the specified data using the underlying transform algorithm.</source>
          <target state="translated">指定されたデータを、基礎となる変換アルゴリズムを用いて変換します。</target>
        </trans-unit>
        <trans-unit id="d0e12033b419cf785ff5ab24a812834715d6cad1" translate="yes" xml:space="preserve">
          <source>Transforms the specified data using the underlying transform algorithm. If the output of this transform is an &lt;code&gt;OctetStreamData&lt;/code&gt;, then this method returns &lt;code&gt;null&lt;/code&gt; and the bytes are written to the specified &lt;code&gt;OutputStream&lt;/code&gt;. Otherwise, the &lt;code&gt;OutputStream&lt;/code&gt; is ignored and the method behaves as if &lt;a href=&quot;#transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)&quot;&gt;&lt;code&gt;transform(Data, XMLCryptoContext)&lt;/code&gt;&lt;/a&gt; were invoked.</source>
          <target state="translated">基礎となる変換アルゴリズムを使用して、指定されたデータを変換します。この変換の出力が &lt;code&gt;OctetStreamData&lt;/code&gt; の場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返し、バイトは指定された &lt;code&gt;OutputStream&lt;/code&gt; に書き込まれます。それ以外の場合、 &lt;code&gt;OutputStream&lt;/code&gt; は無視され、メソッドは&lt;a href=&quot;#transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)&quot;&gt; &lt;code&gt;transform(Data, XMLCryptoContext)&lt;/code&gt; &lt;/a&gt;が呼び出されたかのように動作します。</target>
        </trans-unit>
        <trans-unit id="cf5e050a3dfff0a2329b3531d492cc2c81c2d218" translate="yes" xml:space="preserve">
          <source>Transforms the string into a series of characters that can be compared with CollationKey.compareTo.</source>
          <target state="translated">文字列を、CollationKey.compareToで比較できる一連の文字に変換します。</target>
        </trans-unit>
        <trans-unit id="eb7e25ddf8badb13d9a1bb027a938b890559b651" translate="yes" xml:space="preserve">
          <source>Transforms the string into a series of characters that can be compared with CollationKey.compareTo. This overrides java.text.Collator.getCollationKey. It can be overridden in a subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fefb842e9f6899ce3a4d4c1995c23d512c00dce" translate="yes" xml:space="preserve">
          <source>Transforms the string into a series of characters that can be compared with CollationKey.compareTo. This overrides java.text.Collator.getCollationKey. It can be overriden in a subclass.</source>
          <target state="translated">文字列を、CollationKey.compareToで比較できる一連の文字に変換します。これは java.text.Collator.getCollationKey をオーバーライドします。サブクラスでオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="45d5bc5a6500f8488347501d41f5194f063eae68" translate="yes" xml:space="preserve">
          <source>Transient</source>
          <target state="translated">Transient</target>
        </trans-unit>
        <trans-unit id="5b601527b30341f6dd29e898feb7eeba79792b68" translate="yes" xml:space="preserve">
          <source>Transient.value</source>
          <target state="translated">Transient.value</target>
        </trans-unit>
        <trans-unit id="3edb1aa25222ceabd4103d1cb4361d6ac1cc99a5" translate="yes" xml:space="preserve">
          <source>TransitionFrom</source>
          <target state="translated">TransitionFrom</target>
        </trans-unit>
        <trans-unit id="c4d7deea75bf8cc2ff5a46ca2f3c5d3d536dd601" translate="yes" xml:space="preserve">
          <source>TransitionTo</source>
          <target state="translated">TransitionTo</target>
        </trans-unit>
        <trans-unit id="0a0f35f6c482d64e9d2eb22a05cded782e23ff82" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt; rounding according to the context settings.</source>
          <target state="translated">コンテキスト設定に従って、 &lt;code&gt;BigInteger&lt;/code&gt; を &lt;code&gt;BigDecimal&lt;/code&gt; 丸めに変換します。</target>
        </trans-unit>
        <trans-unit id="d03eb4f7f8405fdb8867dacd161044d034bbc665" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt; rounding according to the context settings. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is zero.</source>
          <target state="translated">コンテキスト設定に従って、 &lt;code&gt;BigInteger&lt;/code&gt; を &lt;code&gt;BigDecimal&lt;/code&gt; 丸めに変換します。 &lt;code&gt;BigDecimal&lt;/code&gt; のスケールはゼロです。</target>
        </trans-unit>
        <trans-unit id="12a1e718ac7aa795a8fe3696b9a40666dda52764" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BigInteger&lt;/code&gt; を &lt;code&gt;BigDecimal&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="6105c018fcff9985e0750ac22252585e51ec7b62" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is zero.</source>
          <target state="translated">&lt;code&gt;BigInteger&lt;/code&gt; を &lt;code&gt;BigDecimal&lt;/code&gt; に変換します。 &lt;code&gt;BigDecimal&lt;/code&gt; のスケールはゼロです。</target>
        </trans-unit>
        <trans-unit id="dd5b4b1af80992eef5e16c9b39f97b4f3e1f5a36" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings.</source>
          <target state="translated">変換 &lt;code&gt;BigInteger&lt;/code&gt; のスケールなしの値と &lt;code&gt;int&lt;/code&gt; 型にスケールを &lt;code&gt;BigDecimal&lt;/code&gt; のコンテキスト設定に従った丸めと、。</target>
        </trans-unit>
        <trans-unit id="be0411dfa667d534a22c4a53a6be0938d5e800dc" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings. The value of the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;(unscaledVal &amp;times;
 10&lt;sup&gt;-scale&lt;/sup&gt;)&lt;/code&gt;, rounded according to the &lt;code&gt;precision&lt;/code&gt; and rounding mode settings.</source>
          <target state="translated">変換 &lt;code&gt;BigInteger&lt;/code&gt; のスケールなしの値と &lt;code&gt;int&lt;/code&gt; 型にスケールを &lt;code&gt;BigDecimal&lt;/code&gt; のコンテキスト設定に従った丸めと、。 &lt;code&gt;BigDecimal&lt;/code&gt; の値は &lt;code&gt;(unscaledVal &amp;times; 10&lt;sup&gt;-scale&lt;/sup&gt;)&lt;/code&gt; であり、 &lt;code&gt;precision&lt;/code&gt; と丸めモードの設定に従って丸められます。</target>
        </trans-unit>
        <trans-unit id="1b6def0029fa16478fe3115503d9cb59ebbc8d78" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">変換し &lt;code&gt;BigInteger&lt;/code&gt; のスケールなしの値と &lt;code&gt;int&lt;/code&gt; 型にスケールを &lt;code&gt;BigDecimal&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="26956240efce2987468795621b24536f8bca2a27" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;BigInteger&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;. The value of the &lt;code&gt;BigDecimal&lt;/code&gt; is &lt;code&gt;(unscaledVal &amp;times; 10&lt;sup&gt;-scale&lt;/sup&gt;)&lt;/code&gt;.</source>
          <target state="translated">変換し &lt;code&gt;BigInteger&lt;/code&gt; のスケールなしの値と &lt;code&gt;int&lt;/code&gt; 型にスケールを &lt;code&gt;BigDecimal&lt;/code&gt; を。 &lt;code&gt;BigDecimal&lt;/code&gt; の値は &lt;code&gt;(unscaledVal &amp;times; 10&lt;sup&gt;-scale&lt;/sup&gt;)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4ce05032fd1867eae5c0441d1bd7e85e76c57578" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt; which is the exact decimal representation of the &lt;code&gt;double&lt;/code&gt;'s binary floating-point value.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; を &lt;code&gt;BigDecimal&lt;/code&gt; に変換します。これは、 &lt;code&gt;double&lt;/code&gt; の2進浮動小数点値の正確な10進表現です。</target>
        </trans-unit>
        <trans-unit id="9f9c3eca67395def6a8eea8b965b84bdef922b01" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt; which is the exact decimal representation of the &lt;code&gt;double&lt;/code&gt;'s binary floating-point value. The scale of the returned &lt;code&gt;BigDecimal&lt;/code&gt; is the smallest value such that &lt;code&gt;(10&lt;sup&gt;scale&lt;/sup&gt; &amp;times; val)&lt;/code&gt; is an integer.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; を &lt;code&gt;BigDecimal&lt;/code&gt; に変換します。これは、 &lt;code&gt;double&lt;/code&gt; の2進浮動小数点値の正確な10進数表現です。返される &lt;code&gt;BigDecimal&lt;/code&gt; のスケールは、 &lt;code&gt;(10&lt;sup&gt;scale&lt;/sup&gt; &amp;times; val)&lt;/code&gt; が整数になるような最小値です。</target>
        </trans-unit>
        <trans-unit id="3d72a49bc7047a382617061e3d1cf87143912ad0" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, using the &lt;code&gt;double&lt;/code&gt;'s canonical string representation provided by the &lt;a href=&quot;../lang/double#toString(double)&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">変換 &lt;code&gt;double&lt;/code&gt; へ &lt;code&gt;BigDecimal&lt;/code&gt; 使用して、 &lt;code&gt;double&lt;/code&gt; によって提供の標準的な文字列表現&lt;a href=&quot;../lang/double#toString(double)&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt;法。</target>
        </trans-unit>
        <trans-unit id="850828fbab0c584297016129b6722ea3ab1becd2" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, using the &lt;code&gt;double&lt;/code&gt;'s canonical string representation provided by the &lt;a href=&quot;../lang/double#toString-double-&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">変換 &lt;code&gt;double&lt;/code&gt; へ &lt;code&gt;BigDecimal&lt;/code&gt; 使用して、 &lt;code&gt;double&lt;/code&gt; によって提供の標準的な文字列表現&lt;a href=&quot;../lang/double#toString-double-&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt;法。</target>
        </trans-unit>
        <trans-unit id="0b0acdda1ea4473fe3d2e28e8fe67dcd75753e77" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings.</source>
          <target state="translated">コンテキスト設定に従って丸めて、 &lt;code&gt;double&lt;/code&gt; を &lt;code&gt;BigDecimal&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="07b6f09a046e9531f0736348533520c9c60bef0b" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;double&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is the smallest value such that &lt;code&gt;(10&lt;sup&gt;scale&lt;/sup&gt; &amp;times; val)&lt;/code&gt; is an integer.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; を &lt;code&gt;BigDecimal&lt;/code&gt; に変換し、コンテキスト設定に従って丸めます。 &lt;code&gt;BigDecimal&lt;/code&gt; のスケールは、 &lt;code&gt;(10&lt;sup&gt;scale&lt;/sup&gt; &amp;times; val)&lt;/code&gt; が整数になるような最小値です。</target>
        </trans-unit>
        <trans-unit id="6608f31e8495f9aa50255dc68e03f3834b162382" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; を &lt;code&gt;BigDecimal&lt;/code&gt; に変換し、コンテキスト設定に従って丸めます。</target>
        </trans-unit>
        <trans-unit id="fbb9ae3fa6eeea7b936665101ff5f4c0736effcd" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt;, before any rounding, is zero.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; を &lt;code&gt;BigDecimal&lt;/code&gt; に変換し、コンテキスト設定に従って丸めます。丸め前の &lt;code&gt;BigDecimal&lt;/code&gt; のスケールはゼロです。</target>
        </trans-unit>
        <trans-unit id="635f4745b71682203a5238c5e6bfa042b0063cc0" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; を &lt;code&gt;BigDecimal&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="562116b88884d3bfcedf2a8b9d640829218018e9" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is zero.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; を &lt;code&gt;BigDecimal&lt;/code&gt; に変換します。 &lt;code&gt;BigDecimal&lt;/code&gt; のスケールはゼロです。</target>
        </trans-unit>
        <trans-unit id="b907c82bf66d3ce6d264268bcbff642f7fedf705" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">スケーリングされていない &lt;code&gt;long&lt;/code&gt; 値と &lt;code&gt;int&lt;/code&gt; スケールを &lt;code&gt;BigDecimal&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="e2d198ea04a92dbcd6d06acdc6325462bd68c515" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; unscaled value and an &lt;code&gt;int&lt;/code&gt; scale into a &lt;code&gt;BigDecimal&lt;/code&gt;. This &quot;static factory method&quot; is provided in preference to a (&lt;code&gt;long&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;) constructor because it allows for reuse of frequently used &lt;code&gt;BigDecimal&lt;/code&gt; values..</source>
          <target state="translated">スケーリングされていない &lt;code&gt;long&lt;/code&gt; 値と &lt;code&gt;int&lt;/code&gt; スケールを &lt;code&gt;BigDecimal&lt;/code&gt; に変換します。この「静的ファクトリメソッド」は、頻繁に使用される &lt;code&gt;BigDecimal&lt;/code&gt; 値の再利用を可能にするため、（ &lt;code&gt;long&lt;/code&gt; 、 &lt;code&gt;int&lt;/code&gt; ）コンストラクタよりも優先されます。</target>
        </trans-unit>
        <trans-unit id="328cb54a56130646d7b0d65aacc06ab3c98893f6" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; value into a &lt;code&gt;BigDecimal&lt;/code&gt; with a scale of zero.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; 値をスケールがゼロの &lt;code&gt;BigDecimal&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="a87266ba09f203dfab987bd4aae1f2f0a54ea17f" translate="yes" xml:space="preserve">
          <source>Translates a &lt;code&gt;long&lt;/code&gt; value into a &lt;code&gt;BigDecimal&lt;/code&gt; with a scale of zero. This &quot;static factory method&quot; is provided in preference to a (&lt;code&gt;long&lt;/code&gt;) constructor because it allows for reuse of frequently used &lt;code&gt;BigDecimal&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; 値をゼロのスケールを持つ &lt;code&gt;BigDecimal&lt;/code&gt; に変換します。この「静的ファクトリーメソッド」は、頻繁に使用される &lt;code&gt;BigDecimal&lt;/code&gt; 値の再利用を可能にするため、（ &lt;code&gt;long&lt;/code&gt; ）コンストラクターに優先して提供されます。</target>
        </trans-unit>
        <trans-unit id="293fe29f9465e4541236a2a683d8def15ba05e59" translate="yes" xml:space="preserve">
          <source>Translates a CSS declaration to an AttributeSet that represents the CSS declaration.</source>
          <target state="translated">CSS宣言をCSS宣言を表すAttributeSetに変換します。</target>
        </trans-unit>
        <trans-unit id="a2038b8e0a8d2a88746d0944bc0680e5c4225d55" translate="yes" xml:space="preserve">
          <source>Translates a CSS declaration to an AttributeSet that represents the CSS declaration. Typically this would be called as a result of encountering an HTML style attribute.</source>
          <target state="translated">CSS 宣言を、CSS 宣言を表す AttributeSet に変換します。通常、これは HTML スタイル属性に遭遇した結果として呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ba1acd76cd3eea42897bda6d064b7ff4157cf75a" translate="yes" xml:space="preserve">
          <source>Translates a byte array containing the two's-complement binary representation of a BigInteger into a BigInteger.</source>
          <target state="translated">BigIntegerの2の補数バイナリ表現を含むバイト配列をBigIntegerに変換します。</target>
        </trans-unit>
        <trans-unit id="ffc7d4cdbf5c8bddb6c6be1496ec23afbf00d8df" translate="yes" xml:space="preserve">
          <source>Translates a byte array containing the two's-complement binary representation of a BigInteger into a BigInteger. The input array is assumed to be in</source>
          <target state="translated">BigIntegerの2's-complementバイナリ表現を含むバイト配列をBigIntegerに変換します。入力配列は</target>
        </trans-unit>
        <trans-unit id="f6e9ef09a1e840c594581eca9c0f1f810823f760" translate="yes" xml:space="preserve">
          <source>Translates a byte sub-array containing the two's-complement binary representation of a BigInteger into a BigInteger.</source>
          <target state="translated">BigIntegerの2の補数2進表現を含むバイト部分配列をBigIntegerに変換します。</target>
        </trans-unit>
        <trans-unit id="fb40a58c27fbf7574f2d1a942c0afe8577489941" translate="yes" xml:space="preserve">
          <source>Translates a byte sub-array containing the two's-complement binary representation of a BigInteger into a BigInteger. The sub-array is specified via an offset into the array and a length. The sub-array is assumed to be in</source>
          <target state="translated">BigInteger の 2 の補数 2 進表現を含むバイト部分配列を BigInteger に変換します。部分配列は配列へのオフセットと長さで指定されます。部分配列は</target>
        </trans-unit>
        <trans-unit id="9b3629c62a2274b286689ce1b5d3d88452dff8ed" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor and with rounding according to the context settings.</source>
          <target state="translated">文字列表現変換 &lt;code&gt;BigDecimal&lt;/code&gt; に &lt;code&gt;BigDecimal&lt;/code&gt; のと同じ文字列を受け入れ、&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt;コンストラクタとコンテキスト設定に従って丸めと。</target>
        </trans-unit>
        <trans-unit id="66f3db73a74de24506c7866e399005f8c48e2675" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, while allowing a sub-array to be specified and with rounding according to the context settings.</source>
          <target state="translated">文字列表現変換 &lt;code&gt;BigDecimal&lt;/code&gt; に &lt;code&gt;BigDecimal&lt;/code&gt; のと同じ文字列を受け入れ、&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt;のサブ配列は、指定して、コンテキストの設定に応じて丸めるとされることを可能にしながら、コンストラクタ。</target>
        </trans-unit>
        <trans-unit id="ddeef8af0afe04fb79f071516822c06333c6d754" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, while allowing a sub-array to be specified.</source>
          <target state="translated">文字列表現変換 &lt;code&gt;BigDecimal&lt;/code&gt; に &lt;code&gt;BigDecimal&lt;/code&gt; のと同じ文字列を受け入れ、&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt;サブアレイを指定することを可能にしながら、コンストラクタ。</target>
        </trans-unit>
        <trans-unit id="302e91b8e2e2d67f864740967f0d29da445a4655" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">文字列表現変換 &lt;code&gt;BigDecimal&lt;/code&gt; に &lt;code&gt;BigDecimal&lt;/code&gt; のと同じ文字列を受け入れ、&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt;コンストラクタ。</target>
        </trans-unit>
        <trans-unit id="e95a387e37c7d74dbc7c9f0331125aee98e460c5" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor and with rounding according to the context settings.</source>
          <target state="translated">文字列表現変換 &lt;code&gt;BigDecimal&lt;/code&gt; に &lt;code&gt;BigDecimal&lt;/code&gt; のと同じ文字列を受け入れ、&lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt;コンストラクタとコンテキスト設定に従って丸めと。</target>
        </trans-unit>
        <trans-unit id="bda463fe5a4d05c22f4655928b6f483669d25433" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, while allowing a sub-array to be specified and with rounding according to the context settings.</source>
          <target state="translated">文字列表現変換 &lt;code&gt;BigDecimal&lt;/code&gt; に &lt;code&gt;BigDecimal&lt;/code&gt; のと同じ文字列を受け入れ、&lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt;のサブ配列は、指定して、コンテキストの設定に応じて丸めるとされることを可能にしながら、コンストラクタ。</target>
        </trans-unit>
        <trans-unit id="5367af291d1dad8cf8aee053e94387ebe41d59db" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, while allowing a sub-array to be specified.</source>
          <target state="translated">文字列表現変換 &lt;code&gt;BigDecimal&lt;/code&gt; に &lt;code&gt;BigDecimal&lt;/code&gt; のと同じ文字列を受け入れ、&lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt;サブアレイを指定することを可能にしながら、コンストラクタ。</target>
        </trans-unit>
        <trans-unit id="a6cbb8f1f8949120d165c79b502c88af315638ba" translate="yes" xml:space="preserve">
          <source>Translates a character array representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same sequence of characters as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">文字列表現変換 &lt;code&gt;BigDecimal&lt;/code&gt; に &lt;code&gt;BigDecimal&lt;/code&gt; のと同じ文字列を受け入れ、&lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt;コンストラクタ。</target>
        </trans-unit>
        <trans-unit id="caaec521da0f0769da2d9ee6de81cb7b5c669360" translate="yes" xml:space="preserve">
          <source>Translates a key object, whose provider may be unknown or potentially untrusted, into a corresponding key object of this key factory.</source>
          <target state="translated">プロバイダが不明であったり、潜在的に信頼されていない可能性のある鍵オブジェクトを、この鍵ファクトリの対応する鍵オブジェクトに変換する。</target>
        </trans-unit>
        <trans-unit id="d2aff912a8bf73e171f624f60eac67132e23fef3" translate="yes" xml:space="preserve">
          <source>Translates a key object, whose provider may be unknown or potentially untrusted, into a corresponding key object of this secret-key factory.</source>
          <target state="translated">プロバイダが不明であったり、潜在的に信頼されていない可能性のある鍵オブジェクトを、この秘密鍵ファクトリの対応する鍵オブジェクトに変換します。</target>
        </trans-unit>
        <trans-unit id="d55036512c3d06de57f540a3a010abfa06e4e9a7" translate="yes" xml:space="preserve">
          <source>Translates a string from ASCII Compatible Encoding (ACE) to Unicode, as defined by the ToUnicode operation of &lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490の&lt;/a&gt; ToUnicode操作で定義されているように、文字列をASCII互換エンコーディング（ACE）からUnicodeに変換します。</target>
        </trans-unit>
        <trans-unit id="66cd75f6dd22c7f795ae20a14841ef264f9d61cb" translate="yes" xml:space="preserve">
          <source>Translates a string from ASCII Compatible Encoding (ACE) to Unicode, as defined by the ToUnicode operation of &lt;a href=&quot;https://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b943d5a14e4888451ba8fa6215b0e7f72d3762c5" translate="yes" xml:space="preserve">
          <source>Translates a string from Unicode to ASCII Compatible Encoding (ACE), as defined by the ToASCII operation of &lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490の&lt;/a&gt; ToASCII操作で定義されているように、文字列をUnicodeからASCII互換エンコーディング（ACE）に変換します。</target>
        </trans-unit>
        <trans-unit id="5248c95e2507be872658bd65e7738e6129b9da8e" translate="yes" xml:space="preserve">
          <source>Translates a string from Unicode to ASCII Compatible Encoding (ACE), as defined by the ToASCII operation of &lt;a href=&quot;https://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a147b9376f1199d2ad88e123d0e96fd830257c" translate="yes" xml:space="preserve">
          <source>Translates a string into &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format using a specific &lt;a href=&quot;../nio/charset/charset&quot;&gt;Charset&lt;/a&gt;.</source>
          <target state="translated">特定の&lt;a href=&quot;../nio/charset/charset&quot;&gt;文字セット&lt;/a&gt;を使用して、文字列を &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 形式に変換します。</target>
        </trans-unit>
        <trans-unit id="18e640a882167656e723f728e2f4de3476500cb4" translate="yes" xml:space="preserve">
          <source>Translates a string into &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format using a specific &lt;a href=&quot;../nio/charset/charset&quot;&gt;Charset&lt;/a&gt;. This method uses the supplied charset to obtain the bytes for unsafe characters.</source>
          <target state="translated">特定の&lt;a href=&quot;../nio/charset/charset&quot;&gt;文字セット&lt;/a&gt;を使用して、文字列を &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 形式に変換します。このメソッドは、提供された文字セットを使用して、安全でない文字のバイトを取得します。</target>
        </trans-unit>
        <trans-unit id="41331656369c1cf815ba99b496333f69b723fb9d" translate="yes" xml:space="preserve">
          <source>Translates a string into &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format using a specific encoding scheme.</source>
          <target state="translated">特定のエンコードスキームを使用して、文字列を &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 形式に変換します。</target>
        </trans-unit>
        <trans-unit id="4d59a776cc2656bd77a8e0f9b385251da96dd1ab" translate="yes" xml:space="preserve">
          <source>Translates a string into &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format using a specific encoding scheme. This method uses the supplied encoding scheme to obtain the bytes for unsafe characters.</source>
          <target state="translated">特定のエンコードスキームを使用して、文字列を &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 形式に変換します。このメソッドは、提供されたエンコードスキームを使用して、安全でない文字のバイトを取得します。</target>
        </trans-unit>
        <trans-unit id="e047b85bd71414efc578845b6d8e1d90059ffd0f" translate="yes" xml:space="preserve">
          <source>Translates a string into &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; format. This method uses the platform's default encoding as the encoding scheme to obtain the bytes for unsafe characters.</source>
          <target state="translated">文字列を &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; 形式に変換します。このメソッドは、プラットフォームのデフォルトのエンコーディングをエンコーディングスキームとして使用して、安全でない文字のバイトを取得します。</target>
        </trans-unit>
        <trans-unit id="3d6fdd19cff492d724611c02c4f9915d3d318b42" translate="yes" xml:space="preserve">
          <source>Translates a string to a &lt;code&gt;CSS.Attribute&lt;/code&gt; object.</source>
          <target state="translated">文字列を &lt;code&gt;CSS.Attribute&lt;/code&gt; オブジェクトに変換します。</target>
        </trans-unit>
        <trans-unit id="6523b46dfee14cc5ccfd08c4844f372114c8c964" translate="yes" xml:space="preserve">
          <source>Translates a string to a &lt;code&gt;CSS.Attribute&lt;/code&gt; object. This will return &lt;code&gt;null&lt;/code&gt; if there is no attribute by the given name.</source>
          <target state="translated">文字列を &lt;code&gt;CSS.Attribute&lt;/code&gt; オブジェクトに変換します。指定された名前の属性がない場合、これは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1a03634ded790fbc32d129461d25a7e0c735ef3c" translate="yes" xml:space="preserve">
          <source>Translates an &lt;code&gt;int&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings.</source>
          <target state="translated">コンテキスト設定に従って丸めて、 &lt;code&gt;int&lt;/code&gt; を &lt;code&gt;BigDecimal&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="50f92eea2ff33d3a5a4c74ff1405a8ec3381c5c3" translate="yes" xml:space="preserve">
          <source>Translates an &lt;code&gt;int&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, with rounding according to the context settings. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt;, before any rounding, is zero.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; を &lt;code&gt;BigDecimal&lt;/code&gt; に変換し、コンテキスト設定に従って丸めます。丸め前の &lt;code&gt;BigDecimal&lt;/code&gt; のスケールはゼロです。</target>
        </trans-unit>
        <trans-unit id="f70d3f5cc72a85aa103ea23194ec6e6ddb1f1544" translate="yes" xml:space="preserve">
          <source>Translates an &lt;code&gt;int&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; を &lt;code&gt;BigDecimal&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="e229a02a15acf36cd72ba5270b9512fadf9ab47a" translate="yes" xml:space="preserve">
          <source>Translates an &lt;code&gt;int&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;. The scale of the &lt;code&gt;BigDecimal&lt;/code&gt; is zero.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; を &lt;code&gt;BigDecimal&lt;/code&gt; に変換します。 &lt;code&gt;BigDecimal&lt;/code&gt; のスケールはゼロです。</target>
        </trans-unit>
        <trans-unit id="5631a32fbfb0916283f5cdb861387eaa63bcf18e" translate="yes" xml:space="preserve">
          <source>Translates an offset into the components text to a line number.</source>
          <target state="translated">コンポーネントテキストへのオフセットを行番号に変換します。</target>
        </trans-unit>
        <trans-unit id="6133237a8ef8f8b52216fd6d50731b5e67e119a6" translate="yes" xml:space="preserve">
          <source>Translates the String representation of a BigInteger in the specified radix into a BigInteger.</source>
          <target state="translated">指定された基数のBigIntegerの文字列表現をBigIntegerに変換します。</target>
        </trans-unit>
        <trans-unit id="774d5f6f79524d7cd4c3b2adafefd8cab0c033bc" translate="yes" xml:space="preserve">
          <source>Translates the String representation of a BigInteger in the specified radix into a BigInteger. The String representation consists of an optional minus or plus sign followed by a sequence of one or more digits in the specified radix. The character-to-digit mapping is provided by &lt;code&gt;
 Character.digit&lt;/code&gt;. The String may not contain any extraneous characters (whitespace, for example).</source>
          <target state="translated">指定された基数のBigIntegerの文字列表現をBigIntegerに変換します。文字列表現は、オプションのマイナス記号またはプラス記号と、それに続く指定された基数の1つ以上の数字のシーケンスで構成されます。文字から数字へのマッピングは、 &lt;code&gt; Character.digit&lt;/code&gt; によって提供されます。文字列には、無関係な文字（空白など）を含めることはできません。</target>
        </trans-unit>
        <trans-unit id="1b727c4bb71d79e76c3eeaf58bdc8ae8accde65d" translate="yes" xml:space="preserve">
          <source>Translates the String representation of a BigInteger in the specified radix into a BigInteger. The String representation consists of an optional minus or plus sign followed by a sequence of one or more digits in the specified radix. The character-to-digit mapping is provided by &lt;code&gt;Character.digit&lt;/code&gt;. The String may not contain any extraneous characters (whitespace, for example).</source>
          <target state="translated">指定された基数のBigIntegerの文字列表現をBigIntegerに変換します。文字列表現は、オプションのマイナス記号またはプラス記号と、それに続く指定された基数内の一連の1つ以上の数字で構成されます。文字から数字へのマッピングは、 &lt;code&gt;Character.digit&lt;/code&gt; によって提供されます。文字列には無関係な文字（空白など）を含めることはできません。</target>
        </trans-unit>
        <trans-unit id="5235128334345d97ca02078e3dfaf9a0e7f162b8" translate="yes" xml:space="preserve">
          <source>Translates the decimal String representation of a BigInteger into a BigInteger.</source>
          <target state="translated">BigIntegerの10進文字列表現をBigIntegerに変換します。</target>
        </trans-unit>
        <trans-unit id="1971dfcab7363ad427f03f6ddc91d2aaa314e6a6" translate="yes" xml:space="preserve">
          <source>Translates the decimal String representation of a BigInteger into a BigInteger. The String representation consists of an optional minus sign followed by a sequence of one or more decimal digits. The character-to-digit mapping is provided by &lt;code&gt;Character.digit&lt;/code&gt;. The String may not contain any extraneous characters (whitespace, for example).</source>
          <target state="translated">BigIntegerの10進数のString表現をBigIntegerに変換します。文字列表現は、オプションのマイナス記号とそれに続く1つ以上の10進数の数字で構成されます。文字から数字へのマッピングは、 &lt;code&gt;Character.digit&lt;/code&gt; によって提供されます。文字列には無関係な文字（空白など）を含めることはできません。</target>
        </trans-unit>
        <trans-unit id="4e4b5a0e5ddb018c2a9f03778e101a4b6fc363de" translate="yes" xml:space="preserve">
          <source>Translates the event's coordinates to a new position by adding specified &lt;code&gt;x&lt;/code&gt; (horizontal) and &lt;code&gt;y&lt;/code&gt; (vertical) offsets.</source>
          <target state="translated">指定された &lt;code&gt;x&lt;/code&gt; （水平）および &lt;code&gt;y&lt;/code&gt; （垂直）オフセットを追加することにより、イベントの座標を新しい位置に変換します。</target>
        </trans-unit>
        <trans-unit id="825c354d4bccc25c0da888574a518292c54f37fd" translate="yes" xml:space="preserve">
          <source>Translates the immutable allocation given to the view to a mutable allocation that represents the interior allocation (i.e. the bounds of the given allocation with the top, left, bottom, and right insets removed.</source>
          <target state="translated">ビューに与えられた不変割付を、内部割付を表すミューータブル割付に変換します(つまり、上、左、下、右のインセットを削除した割付の境界を表します)。</target>
        </trans-unit>
        <trans-unit id="4c18d709462554d0d0dd4fe5adf3ed3f272379fc" translate="yes" xml:space="preserve">
          <source>Translates the immutable allocation given to the view to a mutable allocation that represents the interior allocation (i.e. the bounds of the given allocation with the top, left, bottom, and right insets removed. It is expected that the returned value would be further mutated to represent an allocation to a child view. This is implemented to reuse an instance variable so it avoids creating excessive Rectangles. Typically the result of calling this method would be fed to the &lt;code&gt;childAllocation&lt;/code&gt; method.</source>
          <target state="translated">ビューに与えられた不変の割り当てを、内部の割り当てを表す可変の割り当てに変換します（つまり、上、左、下、右のインセットが削除された、指定された割り当ての境界。戻り値はさらに次のように変更されると予想されます。子ビューへの割り当てを表します。これは、インスタンス変数を再利用して過剰な長方形の作成を回避するために実装されます。通常、このメソッドを呼び出した結果は、 &lt;code&gt;childAllocation&lt;/code&gt; メソッドに送られます。</target>
        </trans-unit>
        <trans-unit id="e2b96aa4a9a451d5f3418522e608339a89afd3ce" translate="yes" xml:space="preserve">
          <source>Translates the origin of the &lt;code&gt;Graphics2D&lt;/code&gt; context to the point (</source>
          <target state="translated">&lt;code&gt;Graphics2D&lt;/code&gt; コンテキストの原点をポイントに変換します（</target>
        </trans-unit>
        <trans-unit id="e02760b95babe4406d2b07cde966f6f51edd7199" translate="yes" xml:space="preserve">
          <source>Translates the origin of the graphics context to the point (</source>
          <target state="translated">グラフィックスコンテキストの原点を点に変換します (</target>
        </trans-unit>
        <trans-unit id="e18a6a440e04dedd2123054e87140f4662bf95e4" translate="yes" xml:space="preserve">
          <source>Translates the sign-magnitude representation of a BigInteger into a BigInteger.</source>
          <target state="translated">BigIntegerの符号-大きさ表現をBigIntegerに変換します。</target>
        </trans-unit>
        <trans-unit id="5c52de63addaade59e66530488f1741aa06fc2ff" translate="yes" xml:space="preserve">
          <source>Translates the sign-magnitude representation of a BigInteger into a BigInteger. The sign is represented as an integer signum value: -1 for negative, 0 for zero, or 1 for positive. The magnitude is a byte array in</source>
          <target state="translated">BigIntegerの符号と大きさの表現をBigIntegerに変換します。符号は、負の場合は -1、0 の場合は 0、正の場合は 1 の整数の符号値で表されます。マグニチュードは</target>
        </trans-unit>
        <trans-unit id="7839f0a5c8b7933f3cc78940cb3dd38bec3ff253" translate="yes" xml:space="preserve">
          <source>Translates the sign-magnitude representation of a BigInteger into a BigInteger. The sign is represented as an integer signum value: -1 for negative, 0 for zero, or 1 for positive. The magnitude is a sub-array of a byte array in</source>
          <target state="translated">BigIntegerの符号と大きさの表現をBigIntegerに変換します。符号は、負の場合は -1、0 の場合は 0、正の場合は 1 の整数の符号値で表されます。マグニチュードは</target>
        </trans-unit>
        <trans-unit id="b1f7d86aa97c232e1e86505ef8d3a7fa730bd5df" translate="yes" xml:space="preserve">
          <source>Translates the string representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same strings as the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, with rounding according to the context settings.</source>
          <target state="translated">文字列表現変換 &lt;code&gt;BigDecimal&lt;/code&gt; に &lt;code&gt;BigDecimal&lt;/code&gt; を同じストリング受け入れ、&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt;コンテキスト設定に従った丸めと、コンストラクタ。</target>
        </trans-unit>
        <trans-unit id="eaeb644e5e369708ac477fe488962acceba1548c" translate="yes" xml:space="preserve">
          <source>Translates the string representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;, accepting the same strings as the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, with rounding according to the context settings.</source>
          <target state="translated">文字列表現変換 &lt;code&gt;BigDecimal&lt;/code&gt; に &lt;code&gt;BigDecimal&lt;/code&gt; を同じストリング受け入れ、&lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt;コンテキスト設定に従った丸めと、コンストラクタ。</target>
        </trans-unit>
        <trans-unit id="499a30efe9e4830de1212247e149232625720a07" translate="yes" xml:space="preserve">
          <source>Translates the string representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">文字列表現変換し &lt;code&gt;BigDecimal&lt;/code&gt; の中 &lt;code&gt;BigDecimal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f81c6b37d85c35c397c7c1fc049f4a6cba771b7" translate="yes" xml:space="preserve">
          <source>Translates the string representation of a &lt;code&gt;BigDecimal&lt;/code&gt; into a &lt;code&gt;BigDecimal&lt;/code&gt;. The string representation consists of an optional sign, &lt;code&gt;'+'&lt;/code&gt; (&lt;code&gt; '\u002B'&lt;/code&gt;) or &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002D'&lt;/code&gt;), followed by a sequence of zero or more decimal digits (&quot;the integer&quot;), optionally followed by a fraction, optionally followed by an exponent.</source>
          <target state="translated">文字列表現変換し &lt;code&gt;BigDecimal&lt;/code&gt; の中 &lt;code&gt;BigDecimal&lt;/code&gt; 。文字列表現は、オプションの符号 &lt;code&gt;'+'&lt;/code&gt; （ &lt;code&gt; '\u002B'&lt;/code&gt; ）または &lt;code&gt;'-'&lt;/code&gt; （ &lt;code&gt;'\u002D'&lt;/code&gt; ）と、その後に続く0個以上の10進数（「整数」）のシーケンス、およびオプションで続く分数。オプションで指数が続きます。</target>
        </trans-unit>
        <trans-unit id="eb8964ccdde4738d7a6c1a21ebccb3df525f2317" translate="yes" xml:space="preserve">
          <source>Translates the vertices of the &lt;code&gt;Polygon&lt;/code&gt; by &lt;code&gt;deltaX&lt;/code&gt; along the x axis and by &lt;code&gt;deltaY&lt;/code&gt; along the y axis.</source>
          <target state="translated">頂点変換 &lt;code&gt;Polygon&lt;/code&gt; によって &lt;code&gt;deltaX&lt;/code&gt; x軸に沿っによって &lt;code&gt;deltaY&lt;/code&gt; 移動、Y軸に沿っています。</target>
        </trans-unit>
        <trans-unit id="c9b81f4434072ae8317cd4881eb72a78c28abadf" translate="yes" xml:space="preserve">
          <source>Translates this &lt;code&gt;Rectangle&lt;/code&gt; the indicated distance, to the right along the X coordinate axis, and downward along the Y coordinate axis.</source>
          <target state="translated">この &lt;code&gt;Rectangle&lt;/code&gt; 、指定された距離をX座標軸に沿って右に、Y座標軸に沿って下に移動します。</target>
        </trans-unit>
        <trans-unit id="bd3490e9dcb882736aa1fbe75fa8cbd7e5c2871a" translate="yes" xml:space="preserve">
          <source>Translates this event so that its</source>
          <target state="translated">このイベントを</target>
        </trans-unit>
        <trans-unit id="46afa636b8197327993eaf1b49aab96d5b3f07c3" translate="yes" xml:space="preserve">
          <source>Translates this point, at location &lt;code&gt;(x,y)&lt;/code&gt;, by &lt;code&gt;dx&lt;/code&gt; along the &lt;code&gt;x&lt;/code&gt; axis and &lt;code&gt;dy&lt;/code&gt; along the &lt;code&gt;y&lt;/code&gt; axis so that it now represents the point &lt;code&gt;(x+dx,y+dy)&lt;/code&gt;.</source>
          <target state="translated">この点を位置 &lt;code&gt;(x,y)&lt;/code&gt; で、 &lt;code&gt;x&lt;/code&gt; 軸に沿って &lt;code&gt;dx&lt;/code&gt; 、 &lt;code&gt;y&lt;/code&gt; 軸に沿って &lt;code&gt;dy&lt;/code&gt; で変換し、点 &lt;code&gt;(x+dx,y+dy)&lt;/code&gt; 表すようにします。</target>
        </trans-unit>
        <trans-unit id="ac26a7a94ea2e66490f932b6415a09ef6f2a913c" translate="yes" xml:space="preserve">
          <source>Translation</source>
          <target state="translated">Translation</target>
        </trans-unit>
        <trans-unit id="1fafc51374f712ba586dcd4ca179bb592b7dbf3b" translate="yes" xml:space="preserve">
          <source>Translator</source>
          <target state="translated">Translator</target>
        </trans-unit>
        <trans-unit id="27f9f90a8562e3a6daa8604c9d65472f00705484" translate="yes" xml:space="preserve">
          <source>Transmits a control command to the terminal device.</source>
          <target state="translated">端末装置に制御コマンドを送信します。</target>
        </trans-unit>
        <trans-unit id="2eb84afc4984bf8539bbea8f41cfe6586118788c" translate="yes" xml:space="preserve">
          <source>Transmits the command APDU stored in the command ByteBuffer and receives the response APDU in the response ByteBuffer.</source>
          <target state="translated">コマンド ByteBuffer に格納されたコマンド APDU を送信し、レスポンス ByteBuffer に格納されたレスポンス APDU を受信する。</target>
        </trans-unit>
        <trans-unit id="804af4a2759c5a01aa7066cf79da999eddc4160a" translate="yes" xml:space="preserve">
          <source>Transmits the specified command APDU to the Smart Card and returns the response APDU.</source>
          <target state="translated">指定されたコマンドAPDUをスマートカードに送信し、応答APDUを返します。</target>
        </trans-unit>
        <trans-unit id="da34ba9de444c96ddc1a3bae0850b2622a0572d5" translate="yes" xml:space="preserve">
          <source>Transmitter</source>
          <target state="translated">Transmitter</target>
        </trans-unit>
        <trans-unit id="51450f02a2587b281bcd471db6d893f369739bf2" translate="yes" xml:space="preserve">
          <source>Transmitter.close()</source>
          <target state="translated">Transmitter.close()</target>
        </trans-unit>
        <trans-unit id="f9cb2258b1778d8c3bc3517121ceaaa1554dff9f" translate="yes" xml:space="preserve">
          <source>Transmitter.getReceiver()</source>
          <target state="translated">Transmitter.getReceiver()</target>
        </trans-unit>
        <trans-unit id="9331c814a22fa32349ceb6cda3994482fea2c369" translate="yes" xml:space="preserve">
          <source>Transmitter.setReceiver()</source>
          <target state="translated">Transmitter.setReceiver()</target>
        </trans-unit>
        <trans-unit id="7cb338a916152e13525f9822a4d915c168c521f0" translate="yes" xml:space="preserve">
          <source>Transparency</source>
          <target state="translated">Transparency</target>
        </trans-unit>
        <trans-unit id="d2c3637cb4e43ccc217a82837601b3bc7345e10c" translate="yes" xml:space="preserve">
          <source>Transparent pixels are drawn in the specified background color. This operation is equivalent to filling a rectangle of the width and height of the specified image with the given color and then drawing the image on top of it, but possibly more efficient.</source>
          <target state="translated">透過ピクセルは指定された背景色で描画されます。この操作は、指定された画像の幅と高さの矩形を指定された色で塗りつぶし、その上に画像を描画するのと同等ですが、おそらくより効率的です。</target>
        </trans-unit>
        <trans-unit id="c10d76c9a4b81c39c13a3bbf7cdb7a157dfb1551" translate="yes" xml:space="preserve">
          <source>Transport</source>
          <target state="translated">Transport</target>
        </trans-unit>
        <trans-unit id="d24879f1d01418d9df5ecb549e094f0e42c0d34d" translate="yes" xml:space="preserve">
          <source>TransportService</source>
          <target state="translated">TransportService</target>
        </trans-unit>
        <trans-unit id="31557bc6c207cdf20c668d43a3247271db89c616" translate="yes" xml:space="preserve">
          <source>TransportService.Capabilities</source>
          <target state="translated">TransportService.Capabilities</target>
        </trans-unit>
        <trans-unit id="7825d984dd448035daaa60a9190a09e0e6e93975" translate="yes" xml:space="preserve">
          <source>TransportService.ListenKey</source>
          <target state="translated">TransportService.ListenKey</target>
        </trans-unit>
        <trans-unit id="5cd86747f14d0cef7caa4dd722a820c10cc2edb0" translate="yes" xml:space="preserve">
          <source>TransportTimeoutException</source>
          <target state="translated">TransportTimeoutException</target>
        </trans-unit>
        <trans-unit id="8173e5a0ab0d66651e0708a8bcbefeef2dd3831c" translate="yes" xml:space="preserve">
          <source>Traversal of elements should be accomplished through the iterator. The behaviour of traversal is undefined if the spliterator is operated after the iterator is returned.</source>
          <target state="translated">要素のトラバーサルはイテレータを介して達成されるべきである。イテレータが返された後にスプリッタが操作された場合、トラバーサルの動作は不定です。</target>
        </trans-unit>
        <trans-unit id="30d46763ec7881d4f58abae3049a96683c8f9143" translate="yes" xml:space="preserve">
          <source>Traversal of elements should be accomplished through the spliterator. The behaviour of splitting and traversal is undefined if the iterator is operated on after the spliterator is returned, or the initially reported size is not equal to the actual number of elements in the source.</source>
          <target state="translated">要素のトラバーサルは spliterator を通して達成されるべきです。スプリテレータが返された後にイテレータが操作された場合や、最初に報告されたサイズがソース内の実際の要素数と一致しない場合、分割とトラバーサルの動作は未定義です。</target>
        </trans-unit>
        <trans-unit id="00ca3dda7684f8348bfee89b641a056d672651d3" translate="yes" xml:space="preserve">
          <source>Traversal of elements should be accomplished through the spliterator. The behaviour of splitting and traversal is undefined if the iterator is operated on after the spliterator is returned.</source>
          <target state="translated">要素のトラバーサルは spliterator を通して達成されるべきである。スプリテレータが返された後にイテレータが操作された場合、分割とトラバーサルの動作は未定義です。</target>
        </trans-unit>
        <trans-unit id="0387bf3d77b5fef9a75cac2dd19feeffbcd116dd" translate="yes" xml:space="preserve">
          <source>Traversal via iterators is fast and cannot encounter interference from other threads. Iterators rely on unchanging snapshots of the array at the time the iterators were constructed.</source>
          <target state="translated">イテレータを介したトラバーサルは高速であり、他のスレッドからの干渉を受けることはありません。イテレータは、イテレータが構築された時点での配列の不変のスナップショットに依存しています。</target>
        </trans-unit>
        <trans-unit id="1ba08ab52cde7420cbd3c26bc714af709c837cd8" translate="yes" xml:space="preserve">
          <source>Traverse both forward and backward from a given position in the text. Calls to notBoundary() in this example represents some additional stopping criteria.</source>
          <target state="translated">テキスト内の指定された位置から前方と後方の両方をなぞります。この例の notBoundary()の呼び出しは、いくつかの追加の停止基準を表しています。</target>
        </trans-unit>
        <trans-unit id="d3b823617556e185dfc8f7708a19dd8b14580a0b" translate="yes" xml:space="preserve">
          <source>Traverse the text backwards, from end to start</source>
          <target state="translated">テキストを最後から最後まで、後ろになぞっていく</target>
        </trans-unit>
        <trans-unit id="b0fa76c6202418f069b17f36977c45c010c2e7cc" translate="yes" xml:space="preserve">
          <source>Traverse the text from start to finish</source>
          <target state="translated">最初から最後までテキストをなぞる</target>
        </trans-unit>
        <trans-unit id="6cfb3f423da6f9b668b3796ce211f04c5664f3c4" translate="yes" xml:space="preserve">
          <source>TrayIcon</source>
          <target state="translated">TrayIcon</target>
        </trans-unit>
        <trans-unit id="1f2519f8ce9c84631c047f73037eaba4b5b2a85a" translate="yes" xml:space="preserve">
          <source>TrayIcon.MessageType</source>
          <target state="translated">TrayIcon.MessageType</target>
        </trans-unit>
        <trans-unit id="99f5ff6378a0b48f815677894306b090ee036726" translate="yes" xml:space="preserve">
          <source>Tree</source>
          <target state="translated">Tree</target>
        </trans-unit>
        <trans-unit id="36e87512c1528662310d7885077c416b4a4b1f33" translate="yes" xml:space="preserve">
          <source>Tree Collapsed notification.</source>
          <target state="translated">ツリーが倒れたことの通知。</target>
        </trans-unit>
        <trans-unit id="2742401606d0c8f96325af9e2b138701c56e746b" translate="yes" xml:space="preserve">
          <source>Tree Model Expansion notification.</source>
          <target state="translated">ツリーモデル拡大のお知らせ。</target>
        </trans-unit>
        <trans-unit id="4161bfebed9f9c960bd7ab5e0e6e0237d88cbbc6" translate="yes" xml:space="preserve">
          <source>Tree Model Node change notification.</source>
          <target state="translated">ツリーモデルノードの変更通知</target>
        </trans-unit>
        <trans-unit id="4ffa74fc39b536118d1cc2aa97633b9e229589c6" translate="yes" xml:space="preserve">
          <source>Tree Model structure change change notification.</source>
          <target state="translated">ツリーモデルの構造変更の変更通知。</target>
        </trans-unit>
        <trans-unit id="dba7d2fe0afcc2586ca1bb70318055eecdc7653f" translate="yes" xml:space="preserve">
          <source>Tree Selection Listener value change method.</source>
          <target state="translated">ツリー選択リスナーの値変更方法。</target>
        </trans-unit>
        <trans-unit id="c09795dc71146147df1abd8c557a58c68572f224" translate="yes" xml:space="preserve">
          <source>Tree Selection Listener value change method. Used to fire the property change</source>
          <target state="translated">ツリー選択リスナーの値変更メソッド。プロパティ変更を実行するために使用します。</target>
        </trans-unit>
        <trans-unit id="da176591218d6b9413574c9a3c9b92a3503156c2" translate="yes" xml:space="preserve">
          <source>Tree region.</source>
          <target state="translated">木の地域。</target>
        </trans-unit>
        <trans-unit id="a3a4c2daddaad45d3cbd017025ec1a7fdd2624c8" translate="yes" xml:space="preserve">
          <source>Tree region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;Tree&lt;/code&gt;.</source>
          <target state="translated">ツリー領域。スタイルをこの &lt;code&gt;Region&lt;/code&gt; バインドするには、 &lt;code&gt;Tree&lt;/code&gt; という名前を使用します。</target>
        </trans-unit>
        <trans-unit id="fa6026c7289a8d41855d24b11ab60e606d3358c6" translate="yes" xml:space="preserve">
          <source>Tree.Kind</source>
          <target state="translated">Tree.Kind</target>
        </trans-unit>
        <trans-unit id="9c1e40ca554c47c4abe17a3bcfbb15f5c6c3e0e5" translate="yes" xml:space="preserve">
          <source>TreeCancelEditingAction</source>
          <target state="translated">TreeCancelEditingAction</target>
        </trans-unit>
        <trans-unit id="054d73668141f4e34f9710ddedd10497b8f50b27" translate="yes" xml:space="preserve">
          <source>TreeCellEditor</source>
          <target state="translated">TreeCellEditor</target>
        </trans-unit>
        <trans-unit id="77de7b283bcdd9c976fda44057abde6f646e8916" translate="yes" xml:space="preserve">
          <source>TreeCellRenderer</source>
          <target state="translated">TreeCellRenderer</target>
        </trans-unit>
        <trans-unit id="0b4426777e99bdd48c1a82720ccd9ceabfbe6ede" translate="yes" xml:space="preserve">
          <source>TreeControlIcon</source>
          <target state="translated">TreeControlIcon</target>
        </trans-unit>
        <trans-unit id="937af705941240aed800cf993fd9f77225b9348d" translate="yes" xml:space="preserve">
          <source>TreeExpansionEvent</source>
          <target state="translated">TreeExpansionEvent</target>
        </trans-unit>
        <trans-unit id="10cf5f6e68fc62c4e28263d60bad5955143dee33" translate="yes" xml:space="preserve">
          <source>TreeExpansionHandler</source>
          <target state="translated">TreeExpansionHandler</target>
        </trans-unit>
        <trans-unit id="1fec3f09f2646363bd1c554062bba38bc5c3b066" translate="yes" xml:space="preserve">
          <source>TreeExpansionListener</source>
          <target state="translated">TreeExpansionListener</target>
        </trans-unit>
        <trans-unit id="e929cdbba53a6b37d4bed5873ccda9277e611aaa" translate="yes" xml:space="preserve">
          <source>TreeFolderIcon</source>
          <target state="translated">TreeFolderIcon</target>
        </trans-unit>
        <trans-unit id="993a4151015481e9dd7bf7595b3b33dc7c0d807f" translate="yes" xml:space="preserve">
          <source>TreeHomeAction</source>
          <target state="translated">TreeHomeAction</target>
        </trans-unit>
        <trans-unit id="204b15c46ad5165b7272ae5297180b25fdcf169f" translate="yes" xml:space="preserve">
          <source>TreeHomeAction is used to handle end/home actions.</source>
          <target state="translated">TreeHomeActionは、エンド/ホームアクションを処理するために使用されます。</target>
        </trans-unit>
        <trans-unit id="238a1e05032e91f500826fc61db222b303e81a74" translate="yes" xml:space="preserve">
          <source>TreeHomeAction is used to handle end/home actions. Scrolls either the first or last cell to be visible based on direction.</source>
          <target state="translated">TreeHomeActionは、終了/ホームアクションを処理するために使用されます。方向に応じて最初か最後のセルをスクロールして表示します。</target>
        </trans-unit>
        <trans-unit id="72607d837d74f0558f12e29788b1ea23dfbc3ab5" translate="yes" xml:space="preserve">
          <source>TreeIncrementAction</source>
          <target state="translated">TreeIncrementAction</target>
        </trans-unit>
        <trans-unit id="38c8915984b93a85a1c5fafebc1d5e55681aec05" translate="yes" xml:space="preserve">
          <source>TreeIncrementAction is used to handle up/down actions.</source>
          <target state="translated">TreeIncrementActionは、アップ/ダウンアクションを処理するために使用されます。</target>
        </trans-unit>
        <trans-unit id="8191d246418261f34e79c650a33afec67223d0c5" translate="yes" xml:space="preserve">
          <source>TreeIncrementAction is used to handle up/down actions. Selection is moved up or down based on direction.</source>
          <target state="translated">TreeIncrementActionは、上下のアクションを処理するために使用されます。選択範囲は方向に応じて上下に移動します。</target>
        </trans-unit>
        <trans-unit id="8b4349d9ab1f617e5d9b005f80e6099098643baa" translate="yes" xml:space="preserve">
          <source>TreeLeafIcon</source>
          <target state="translated">TreeLeafIcon</target>
        </trans-unit>
        <trans-unit id="f5b2faff4d9b4cc3e53f74c54f2316fc6c676530" translate="yes" xml:space="preserve">
          <source>TreeMap</source>
          <target state="translated">TreeMap</target>
        </trans-unit>
        <trans-unit id="e5316ea688f0da29e1f65fed0da1b46ebcdbda8a" translate="yes" xml:space="preserve">
          <source>TreeMap.ceilingEntry()</source>
          <target state="translated">TreeMap.ceilingEntry()</target>
        </trans-unit>
        <trans-unit id="4928da85f4b361e5d085411df925eb6355d02ccd" translate="yes" xml:space="preserve">
          <source>TreeMap.ceilingKey()</source>
          <target state="translated">TreeMap.ceilingKey()</target>
        </trans-unit>
        <trans-unit id="d821816e6e966f8b3d1577edaf8405a54a8bac65" translate="yes" xml:space="preserve">
          <source>TreeMap.clear()</source>
          <target state="translated">TreeMap.clear()</target>
        </trans-unit>
        <trans-unit id="6dd69679a95980cc913012d3d49d57d3438052ba" translate="yes" xml:space="preserve">
          <source>TreeMap.clone()</source>
          <target state="translated">TreeMap.clone()</target>
        </trans-unit>
        <trans-unit id="132e0fac0be392849749eb7187695583f3c1bae4" translate="yes" xml:space="preserve">
          <source>TreeMap.comparator()</source>
          <target state="translated">TreeMap.comparator()</target>
        </trans-unit>
        <trans-unit id="aba73b51f5749ac86a5825ad48589ad82de9c9d0" translate="yes" xml:space="preserve">
          <source>TreeMap.containsKey()</source>
          <target state="translated">TreeMap.containsKey()</target>
        </trans-unit>
        <trans-unit id="65d0bbe349fb657486fc3ca8727106a6f76375d8" translate="yes" xml:space="preserve">
          <source>TreeMap.containsValue()</source>
          <target state="translated">TreeMap.containsValue()</target>
        </trans-unit>
        <trans-unit id="2066f4d1d87cf54e4201d5b6b43810901a60a09e" translate="yes" xml:space="preserve">
          <source>TreeMap.descendingKeySet()</source>
          <target state="translated">TreeMap.descendingKeySet()</target>
        </trans-unit>
        <trans-unit id="496fa6003029e1da671d7cd46af7012c714a278e" translate="yes" xml:space="preserve">
          <source>TreeMap.descendingMap()</source>
          <target state="translated">TreeMap.descendingMap()</target>
        </trans-unit>
        <trans-unit id="1b90293c4f5f34694a779c50db391ac5a1a15f98" translate="yes" xml:space="preserve">
          <source>TreeMap.entrySet()</source>
          <target state="translated">TreeMap.entrySet()</target>
        </trans-unit>
        <trans-unit id="91cd659b9bb4df3b20daa3c36cf5b06f78bf28e0" translate="yes" xml:space="preserve">
          <source>TreeMap.firstEntry()</source>
          <target state="translated">TreeMap.firstEntry()</target>
        </trans-unit>
        <trans-unit id="e24b9ff84913f700271a226cb98f89024ca00c9e" translate="yes" xml:space="preserve">
          <source>TreeMap.firstKey()</source>
          <target state="translated">TreeMap.firstKey()</target>
        </trans-unit>
        <trans-unit id="bfa45d75312c5aad42c5173c03f70f8a06bf61e1" translate="yes" xml:space="preserve">
          <source>TreeMap.floorEntry()</source>
          <target state="translated">TreeMap.floorEntry()</target>
        </trans-unit>
        <trans-unit id="b57c465a9ed8fce97e6d108abf55a1b758a876a3" translate="yes" xml:space="preserve">
          <source>TreeMap.floorKey()</source>
          <target state="translated">TreeMap.floorKey()</target>
        </trans-unit>
        <trans-unit id="32b815d8822cc010b2dea7e47dd49ef655559b7e" translate="yes" xml:space="preserve">
          <source>TreeMap.forEach()</source>
          <target state="translated">TreeMap.forEach()</target>
        </trans-unit>
        <trans-unit id="e4278be43e238f656122e5f83d909caa4e0058c2" translate="yes" xml:space="preserve">
          <source>TreeMap.get()</source>
          <target state="translated">TreeMap.get()</target>
        </trans-unit>
        <trans-unit id="d795a70cfa4017d4e2580575fc584f8bda1e8bf5" translate="yes" xml:space="preserve">
          <source>TreeMap.headMap()</source>
          <target state="translated">TreeMap.headMap()</target>
        </trans-unit>
        <trans-unit id="4605c36878c64b5c5a9b1ae5cec8221cfb870071" translate="yes" xml:space="preserve">
          <source>TreeMap.higherEntry()</source>
          <target state="translated">TreeMap.higherEntry()</target>
        </trans-unit>
        <trans-unit id="88ebbb98630e8d6f0aa2a442fdd87e6b5f192d94" translate="yes" xml:space="preserve">
          <source>TreeMap.higherKey()</source>
          <target state="translated">TreeMap.higherKey()</target>
        </trans-unit>
        <trans-unit id="3524629c1674ca5bee3777a687eb14c89812771e" translate="yes" xml:space="preserve">
          <source>TreeMap.keySet()</source>
          <target state="translated">TreeMap.keySet()</target>
        </trans-unit>
        <trans-unit id="2427b56045488e13ed88595150f52b76439edafe" translate="yes" xml:space="preserve">
          <source>TreeMap.lastEntry()</source>
          <target state="translated">TreeMap.lastEntry()</target>
        </trans-unit>
        <trans-unit id="2fc0327a416b90d08c9d8fadeb6bb0a9fa2603c5" translate="yes" xml:space="preserve">
          <source>TreeMap.lastKey()</source>
          <target state="translated">TreeMap.lastKey()</target>
        </trans-unit>
        <trans-unit id="dd05595fa1313aec4d7ebf40d7dab6809c7095d7" translate="yes" xml:space="preserve">
          <source>TreeMap.lowerEntry()</source>
          <target state="translated">TreeMap.lowerEntry()</target>
        </trans-unit>
        <trans-unit id="b550fa2027fb6c3ed211c79fab553f2af410eb80" translate="yes" xml:space="preserve">
          <source>TreeMap.lowerKey()</source>
          <target state="translated">TreeMap.lowerKey()</target>
        </trans-unit>
        <trans-unit id="7915d610e74e7c65de3ec87fe86176cbb154fcd5" translate="yes" xml:space="preserve">
          <source>TreeMap.navigableKeySet()</source>
          <target state="translated">TreeMap.navigableKeySet()</target>
        </trans-unit>
        <trans-unit id="b0f48e4c5aaa86462d2495a34296faf0204d020a" translate="yes" xml:space="preserve">
          <source>TreeMap.pollFirstEntry()</source>
          <target state="translated">TreeMap.pollFirstEntry()</target>
        </trans-unit>
        <trans-unit id="3ba1c7d5e824634ea0aba4a0fd44feb73f14dcc1" translate="yes" xml:space="preserve">
          <source>TreeMap.pollLastEntry()</source>
          <target state="translated">TreeMap.pollLastEntry()</target>
        </trans-unit>
        <trans-unit id="4be22808d79589f0c4911f86861c59bda925d960" translate="yes" xml:space="preserve">
          <source>TreeMap.put()</source>
          <target state="translated">TreeMap.put()</target>
        </trans-unit>
        <trans-unit id="113ed1243333d0ec7328427f6dd19f0b4f7e8528" translate="yes" xml:space="preserve">
          <source>TreeMap.putAll()</source>
          <target state="translated">TreeMap.putAll()</target>
        </trans-unit>
        <trans-unit id="a8c243296a0e84bd175e472f5f0a0e5273229663" translate="yes" xml:space="preserve">
          <source>TreeMap.remove()</source>
          <target state="translated">TreeMap.remove()</target>
        </trans-unit>
        <trans-unit id="5c7fa55653c3471f3a6af4dd608d43540da07784" translate="yes" xml:space="preserve">
          <source>TreeMap.replace()</source>
          <target state="translated">TreeMap.replace()</target>
        </trans-unit>
        <trans-unit id="4d0e299e3ba998c2dcf0ec34621e331722934c5f" translate="yes" xml:space="preserve">
          <source>TreeMap.replaceAll()</source>
          <target state="translated">TreeMap.replaceAll()</target>
        </trans-unit>
        <trans-unit id="336677cb1fe98f23e75d163b974930002fd8cd27" translate="yes" xml:space="preserve">
          <source>TreeMap.size()</source>
          <target state="translated">TreeMap.size()</target>
        </trans-unit>
        <trans-unit id="552ea32c982c18811875853860337db0aad1d967" translate="yes" xml:space="preserve">
          <source>TreeMap.subMap()</source>
          <target state="translated">TreeMap.subMap()</target>
        </trans-unit>
        <trans-unit id="274005151bd94300a52eb1ead3c9e76df7d91b66" translate="yes" xml:space="preserve">
          <source>TreeMap.tailMap()</source>
          <target state="translated">TreeMap.tailMap()</target>
        </trans-unit>
        <trans-unit id="2f8809dc68a09b62cc6461a42ec84b65d1f332c3" translate="yes" xml:space="preserve">
          <source>TreeMap.values()</source>
          <target state="translated">TreeMap.values()</target>
        </trans-unit>
        <trans-unit id="ba62fb3f971f3ef904295175c5fa43e88e3416a0" translate="yes" xml:space="preserve">
          <source>TreeModel</source>
          <target state="translated">TreeModel</target>
        </trans-unit>
        <trans-unit id="ed645b927cdc5a3a1c7d6528116a934aa19e041b" translate="yes" xml:space="preserve">
          <source>TreeModelEvent</source>
          <target state="translated">TreeModelEvent</target>
        </trans-unit>
        <trans-unit id="841fc71bc09dfd294141702b1ba2b1dae1117e1b" translate="yes" xml:space="preserve">
          <source>TreeModelHandler</source>
          <target state="translated">TreeModelHandler</target>
        </trans-unit>
        <trans-unit id="115ac5ea27156f6ad2ab2aa70c9841a084eb40a8" translate="yes" xml:space="preserve">
          <source>TreeModelListener</source>
          <target state="translated">TreeModelListener</target>
        </trans-unit>
        <trans-unit id="878d05c035daada0368b104f222e3a6643da8d5e" translate="yes" xml:space="preserve">
          <source>TreeMouseListener is responsible for updating the selection based on mouse events.</source>
          <target state="translated">TreeMouseListener は、マウスイベントに基づいて選択範囲を更新する役割を担っています。</target>
        </trans-unit>
        <trans-unit id="599955de5374dfa5279b21f4f4e42d2e26d4cdfa" translate="yes" xml:space="preserve">
          <source>TreeNode</source>
          <target state="translated">TreeNode</target>
        </trans-unit>
        <trans-unit id="745987ea45f41d8ae79665810dc9f818e552fe77" translate="yes" xml:space="preserve">
          <source>TreePageAction</source>
          <target state="translated">TreePageAction</target>
        </trans-unit>
        <trans-unit id="bd8345bed5902bc471cf89979240292f40306390" translate="yes" xml:space="preserve">
          <source>TreePageAction handles page up and page down events.</source>
          <target state="translated">TreePageActionは、ページアップとページダウンのイベントを処理します。</target>
        </trans-unit>
        <trans-unit id="573289f14ad820aee44479334a939242d852c7bd" translate="yes" xml:space="preserve">
          <source>TreePath</source>
          <target state="translated">TreePath</target>
        </trans-unit>
        <trans-unit id="60875764b067074237751917594332da00de4564" translate="yes" xml:space="preserve">
          <source>TreePathScanner</source>
          <target state="translated">TreePathScanner</target>
        </trans-unit>
        <trans-unit id="396c09384906e5c97f0ec2e52ae92ada3e9c6c7b" translate="yes" xml:space="preserve">
          <source>TreeScanner</source>
          <target state="translated">TreeScanner</target>
        </trans-unit>
        <trans-unit id="b9e43b3298bcb6866497b1c4ace19cd0143d3b8c" translate="yes" xml:space="preserve">
          <source>TreeSelectionEvent</source>
          <target state="translated">TreeSelectionEvent</target>
        </trans-unit>
        <trans-unit id="a2ed8927d5106bc63f3fc0c0e994713481d8f954" translate="yes" xml:space="preserve">
          <source>TreeSelectionHandler</source>
          <target state="translated">TreeSelectionHandler</target>
        </trans-unit>
        <trans-unit id="c62bce5af6134919a2a9b02a8b37d54aa11ac752" translate="yes" xml:space="preserve">
          <source>TreeSelectionListener</source>
          <target state="translated">TreeSelectionListener</target>
        </trans-unit>
        <trans-unit id="1775c7784131afde67d509df3a48fe608cbb79d3" translate="yes" xml:space="preserve">
          <source>TreeSelectionModel</source>
          <target state="translated">TreeSelectionModel</target>
        </trans-unit>
        <trans-unit id="a9f4894072ebd3917e2efcdf50c731fa0ee44e35" translate="yes" xml:space="preserve">
          <source>TreeSelectionRedirector</source>
          <target state="translated">TreeSelectionRedirector</target>
        </trans-unit>
        <trans-unit id="d9aca827286e61a4a205b918bf7138319000ed98" translate="yes" xml:space="preserve">
          <source>TreeSet</source>
          <target state="translated">TreeSet</target>
        </trans-unit>
        <trans-unit id="4c58b66af81f57dd8b2ae479f65b088a968c2890" translate="yes" xml:space="preserve">
          <source>TreeSet.add()</source>
          <target state="translated">TreeSet.add()</target>
        </trans-unit>
        <trans-unit id="e53f2301ea65fb9f94c8616cd01d0e870eaa58ae" translate="yes" xml:space="preserve">
          <source>TreeSet.addAll()</source>
          <target state="translated">TreeSet.addAll()</target>
        </trans-unit>
        <trans-unit id="4eeaf14d40be2a768f5551ac3ceab30c7eb5c11d" translate="yes" xml:space="preserve">
          <source>TreeSet.ceiling()</source>
          <target state="translated">TreeSet.ceiling()</target>
        </trans-unit>
        <trans-unit id="33ebc3a6fc05e0db15894a991bd5c6cfa684a2e6" translate="yes" xml:space="preserve">
          <source>TreeSet.clear()</source>
          <target state="translated">TreeSet.clear()</target>
        </trans-unit>
        <trans-unit id="b5ee84bff6e39a16be8fd9c8497e9d38405dc8e7" translate="yes" xml:space="preserve">
          <source>TreeSet.clone()</source>
          <target state="translated">TreeSet.clone()</target>
        </trans-unit>
        <trans-unit id="9a0eaadb461d069d2b062edc6cf1eaa5a8efb5c2" translate="yes" xml:space="preserve">
          <source>TreeSet.comparator()</source>
          <target state="translated">TreeSet.comparator()</target>
        </trans-unit>
        <trans-unit id="c40aeedbffe9e8c8b5e88e273fa9325e9604f055" translate="yes" xml:space="preserve">
          <source>TreeSet.contains()</source>
          <target state="translated">TreeSet.contains()</target>
        </trans-unit>
        <trans-unit id="4742b925b108b32534598f4493ff8334c0f0dffc" translate="yes" xml:space="preserve">
          <source>TreeSet.descendingIterator()</source>
          <target state="translated">TreeSet.descendingIterator()</target>
        </trans-unit>
        <trans-unit id="4e18a772039f604f6721b3d8dc2df28eb7f3d8fd" translate="yes" xml:space="preserve">
          <source>TreeSet.descendingSet()</source>
          <target state="translated">TreeSet.descendingSet()</target>
        </trans-unit>
        <trans-unit id="6560ec38319181f093c1ff9d0ac085bcefa40a74" translate="yes" xml:space="preserve">
          <source>TreeSet.first()</source>
          <target state="translated">TreeSet.first()</target>
        </trans-unit>
        <trans-unit id="72bae8ffa692e55ba3e7651d893967f363699e1d" translate="yes" xml:space="preserve">
          <source>TreeSet.floor()</source>
          <target state="translated">TreeSet.floor()</target>
        </trans-unit>
        <trans-unit id="d3cf600d3331960e00c525f3d569c97d03638b9e" translate="yes" xml:space="preserve">
          <source>TreeSet.headSet()</source>
          <target state="translated">TreeSet.headSet()</target>
        </trans-unit>
        <trans-unit id="1302632331c72e3e587859613e6504465a6156df" translate="yes" xml:space="preserve">
          <source>TreeSet.higher()</source>
          <target state="translated">TreeSet.higher()</target>
        </trans-unit>
        <trans-unit id="71529bc00e790a7a7b58d4cb8582a66c121ed166" translate="yes" xml:space="preserve">
          <source>TreeSet.isEmpty()</source>
          <target state="translated">TreeSet.isEmpty()</target>
        </trans-unit>
        <trans-unit id="71b02e64e43f1219a1d83f8105cf88dfebac5b2d" translate="yes" xml:space="preserve">
          <source>TreeSet.iterator()</source>
          <target state="translated">TreeSet.iterator()</target>
        </trans-unit>
        <trans-unit id="016f9951ee6b0476df52517da0ba1ff18acee328" translate="yes" xml:space="preserve">
          <source>TreeSet.last()</source>
          <target state="translated">TreeSet.last()</target>
        </trans-unit>
        <trans-unit id="28c8df1cca624a201d466b664b9817f9cd9e5dcf" translate="yes" xml:space="preserve">
          <source>TreeSet.lower()</source>
          <target state="translated">TreeSet.lower()</target>
        </trans-unit>
        <trans-unit id="7d8bdd7fd5daa61a0159cb57387f3d97f5080aa1" translate="yes" xml:space="preserve">
          <source>TreeSet.pollFirst()</source>
          <target state="translated">TreeSet.pollFirst()</target>
        </trans-unit>
        <trans-unit id="559c468def30ad4e10a37a70cbb1afcebac3f873" translate="yes" xml:space="preserve">
          <source>TreeSet.pollLast()</source>
          <target state="translated">TreeSet.pollLast()</target>
        </trans-unit>
        <trans-unit id="ddba668430ede9a4d1ee3b337e536df9ef952dd4" translate="yes" xml:space="preserve">
          <source>TreeSet.remove()</source>
          <target state="translated">TreeSet.remove()</target>
        </trans-unit>
        <trans-unit id="10adc5b62fe4ed759fad5f5fd2950555d482584f" translate="yes" xml:space="preserve">
          <source>TreeSet.size()</source>
          <target state="translated">TreeSet.size()</target>
        </trans-unit>
        <trans-unit id="9fe7c6a88052085baa4980aad72125fc3520c547" translate="yes" xml:space="preserve">
          <source>TreeSet.spliterator()</source>
          <target state="translated">TreeSet.spliterator()</target>
        </trans-unit>
        <trans-unit id="83d63aba3929098f734092786887fdf3ce00ad2f" translate="yes" xml:space="preserve">
          <source>TreeSet.subSet()</source>
          <target state="translated">TreeSet.subSet()</target>
        </trans-unit>
        <trans-unit id="424cfeb57b6d89969ea19e90d0edf198f1f866dc" translate="yes" xml:space="preserve">
          <source>TreeSet.tailSet()</source>
          <target state="translated">TreeSet.tailSet()</target>
        </trans-unit>
        <trans-unit id="7d6bc4b0ef62588dae24242de7605959c54d0e4d" translate="yes" xml:space="preserve">
          <source>TreeToggleAction</source>
          <target state="translated">TreeToggleAction</target>
        </trans-unit>
        <trans-unit id="aaf6a1f6a411baa929e59c084d2ecba773c8dbfe" translate="yes" xml:space="preserve">
          <source>TreeTraverseAction</source>
          <target state="translated">TreeTraverseAction</target>
        </trans-unit>
        <trans-unit id="53a1735324f35d7fe6311c8bc39e381006fe3b13" translate="yes" xml:space="preserve">
          <source>TreeUI</source>
          <target state="translated">TreeUI</target>
        </trans-unit>
        <trans-unit id="c5549ac8b888e22b01fa637b7351d8e5201d7fba" translate="yes" xml:space="preserve">
          <source>TreeWalker</source>
          <target state="translated">TreeWalker</target>
        </trans-unit>
        <trans-unit id="76d99bf12a81ac2490e7599279ebf4c321df4dd7" translate="yes" xml:space="preserve">
          <source>TreeWillExpandListener</source>
          <target state="translated">TreeWillExpandListener</target>
        </trans-unit>
        <trans-unit id="1e7081d736f43ad30574ac906d26acdd03c38ed9" translate="yes" xml:space="preserve">
          <source>Trees</source>
          <target state="translated">Trees</target>
        </trans-unit>
        <trans-unit id="e41bca377f8f8f87e1a2264fce85e2323929941d" translate="yes" xml:space="preserve">
          <source>Tries other providers in sequence until one works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c7280b9181471e06faf9e56f85095fd79828a1" translate="yes" xml:space="preserve">
          <source>Tries to break this view on the given axis.</source>
          <target state="translated">指定された軸上でこのビューを分割しようとします。</target>
        </trans-unit>
        <trans-unit id="a120001a26dcf3d4c4868072fcfe43b0b155d0cf" translate="yes" xml:space="preserve">
          <source>Tries to break this view on the given axis. Refer to &lt;a href=&quot;../view#breakView(int,int,float,float)&quot;&gt;&lt;code&gt;View.breakView(int, int, float, float)&lt;/code&gt;&lt;/a&gt; for a complete description of this method.</source>
          <target state="translated">指定された軸でこのビューを壊そうとします。このメソッドの完全な説明については&lt;a href=&quot;../view#breakView(int,int,float,float)&quot;&gt; &lt;code&gt;View.breakView(int, int, float, float)&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b4d0e9ff9fd4cb2b70b3af1677ee544242fa9934" translate="yes" xml:space="preserve">
          <source>Tries to break this view on the given axis. This is called by views that try to do formatting of their children. For example, a view of a paragraph will typically try to place its children into row and views representing chunks of text can sometimes be broken down into smaller pieces.</source>
          <target state="translated">与えられた軸上でこのビューを分割しようとします。これは、子の書式設定をしようとするビューによって呼び出されます。例えば、段落のビューは通常、その子を行に配置しようとします。また、テキストの塊を表すビューは、時々、より小さな断片に分解されることがあります。</target>
        </trans-unit>
        <trans-unit id="9feb731c5925bd1a0cdf44b2e198ff85480f0d4f" translate="yes" xml:space="preserve">
          <source>Tries to determine the content type of an object, based on the specified &quot;file&quot; component of a URL.</source>
          <target state="translated">URLの指定された &quot;file &quot;コンポーネントに基づいて、オブジェクトのコンテンツタイプを判定します。</target>
        </trans-unit>
        <trans-unit id="d18f5d6a0e37e1be1c95c5b83dec2805e4973064" translate="yes" xml:space="preserve">
          <source>Tries to determine the content type of an object, based on the specified &quot;file&quot; component of a URL. This is a convenience method that can be used by subclasses that override the &lt;code&gt;getContentType&lt;/code&gt; method.</source>
          <target state="translated">URLの指定された「ファイル」コンポーネントに基づいて、オブジェクトのコンテンツタイプを決定しようとします。これは、 &lt;code&gt;getContentType&lt;/code&gt; メソッドをオーバーライドするサブクラスで使用できる便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="2cd3b3739a33e1f9d49c52e14b932b8920b15285" translate="yes" xml:space="preserve">
          <source>Tries to determine the type of an input stream based on the characters at the beginning of the input stream.</source>
          <target state="translated">入力ストリームの先頭の文字に基づいて、入力ストリームの種類を判定します。</target>
        </trans-unit>
        <trans-unit id="8136b251085567de41730b0cf3c283337bf62ab5" translate="yes" xml:space="preserve">
          <source>Tries to determine the type of an input stream based on the characters at the beginning of the input stream. This method can be used by subclasses that override the &lt;code&gt;getContentType&lt;/code&gt; method.</source>
          <target state="translated">入力ストリームの先頭の文字に基づいて、入力ストリームのタイプを判別しようとします。このメソッドは、 &lt;code&gt;getContentType&lt;/code&gt; メソッドをオーバーライドするサブクラスで使用できます。</target>
        </trans-unit>
        <trans-unit id="af683792930635e02e564482bbf6187621651aa9" translate="yes" xml:space="preserve">
          <source>Tries to load a class from: the bootstrap loader, the system loader, the context loader (if one is present) and finally the loader specified.</source>
          <target state="translated">ブートストラップローダ、システムローダ、コンテキストローダ (存在する場合)、そして最後に指定されたローダからクラスをロードしようとします。</target>
        </trans-unit>
        <trans-unit id="f7c738617eeba1cf8821e51be4db964d6bb62259" translate="yes" xml:space="preserve">
          <source>Tries to move the position of the caret from the coordinates of a mouse event, using viewToModel().</source>
          <target state="translated">viewToModel()を使用して、マウスイベントの座標からカレットの位置を移動しようとします。</target>
        </trans-unit>
        <trans-unit id="dda827baba0f90a09175688b0d5b26236806a87d" translate="yes" xml:space="preserve">
          <source>Tries to move the position of the caret from the coordinates of a mouse event, using viewToModel(). This will cause a selection if the dot and mark are different.</source>
          <target state="translated">viewToModel()を使用して、マウスイベントの座標からキャレットの位置を移動しようとします。これにより、ドットとマークが異なる場合に選択が発生します。</target>
        </trans-unit>
        <trans-unit id="e3e6ad4f3b7b8c7b7bba1ef233d3cca69a38f764" translate="yes" xml:space="preserve">
          <source>Tries to remove from the work queue all &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; tasks that have been cancelled.</source>
          <target state="translated">キャンセルされたすべての&lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;タスクをワークキューから削除しようとします。</target>
        </trans-unit>
        <trans-unit id="94e3f7802063463730ee0a659237dc66ff598c52" translate="yes" xml:space="preserve">
          <source>Tries to remove from the work queue all &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; tasks that have been cancelled. This method can be useful as a storage reclamation operation, that has no other impact on functionality. Cancelled tasks are never executed, but may accumulate in work queues until worker threads can actively remove them. Invoking this method instead tries to remove them now. However, this method may fail to remove tasks in the presence of interference by other threads.</source>
          <target state="translated">キャンセルされたすべての&lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;タスクをワークキューから削除しようとします。このメソッドは、機能に他の影響を与えないストレージ再利用操作として役立ちます。キャンセルされたタスクは決して実行されませんが、ワーカースレッドがアクティブに削除できるまで、ワークキューに蓄積される可能性があります。代わりに、このメソッドを呼び出すと、それらをすぐに削除しようとします。ただし、この方法では、他のスレッドによる干渉がある場合、タスクの削除に失敗することがあります。</target>
        </trans-unit>
        <trans-unit id="9a29eaace0c6cbd8e7de7750cfa789737ac73458" translate="yes" xml:space="preserve">
          <source>Tries to set the position of the caret from the coordinates of a mouse event, using viewToModel().</source>
          <target state="translated">viewToModel()を使用して、マウスイベントの座標からカレットの位置を設定しようとします。</target>
        </trans-unit>
        <trans-unit id="6fd258922851a204153a1d9f41e2626521bcd04f" translate="yes" xml:space="preserve">
          <source>Tries to unschedule this task for execution.</source>
          <target state="translated">このタスクを実行するためにスケジュールを外そうとします。</target>
        </trans-unit>
        <trans-unit id="7536ae3390a11ff355e55fac0b2beec700d3bbf7" translate="yes" xml:space="preserve">
          <source>Tries to unschedule this task for execution. This method will typically (but is not guaranteed to) succeed if this task is the most recently forked task by the current thread, and has not commenced executing in another thread. This method may be useful when arranging alternative local processing of tasks that could have been, but were not, stolen.</source>
          <target state="translated">このタスクの実行スケジュールを解除しようとします。このメソッドは通常、このタスクが現在のスレッドで最も最近フォークされたタスクであり、他のスレッドで実行を開始していない場合に成功します(保証はしませんが)。このメソッドは、盗まれたかもしれないが盗まれていないタスクの代替処理をローカルで手配する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="f758a24d09cfe388256c88c84eee859e3cdad015" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this &lt;code&gt;ArrayList&lt;/code&gt; instance to be the list's current size.</source>
          <target state="translated">この &lt;code&gt;ArrayList&lt;/code&gt; インスタンスの容量を、リストの現在のサイズにトリミングします。</target>
        </trans-unit>
        <trans-unit id="956a4e9adf25eb2b061b86bbe5a36cf9bc435e58" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this &lt;code&gt;ArrayList&lt;/code&gt; instance to be the list's current size. An application can use this operation to minimize the storage of an &lt;code&gt;ArrayList&lt;/code&gt; instance.</source>
          <target state="translated">この &lt;code&gt;ArrayList&lt;/code&gt; インスタンスの容量をリストの現在のサイズにトリミングします。アプリケーションはこの操作を使用して、 &lt;code&gt;ArrayList&lt;/code&gt; インスタンスのストレージを最小限に抑えることができます。</target>
        </trans-unit>
        <trans-unit id="4ee0fb6649b35e9c0d996610dde2b366a73e0208" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this Path2D instance to its current size.</source>
          <target state="translated">この Path2D インスタンスの容量を現在のサイズにトリミングします。</target>
        </trans-unit>
        <trans-unit id="89473f2a70d0579548e43b33915e1beacb1b07ec" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this Path2D instance to its current size. An application can use this operation to minimize the storage of a path.</source>
          <target state="translated">この Path2D インスタンスの容量を現在のサイズに切り詰めます。アプリケーションは、この操作を使用してパスのストレージを最小化することができます。</target>
        </trans-unit>
        <trans-unit id="59ff6098257d1f99634e3a4b950a8ef7c2bc2df3" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this list to be the list's current size.</source>
          <target state="translated">このリストの容量をトリミングして、リストの現在のサイズにします。</target>
        </trans-unit>
        <trans-unit id="bd1fa28fc491870035bccb5217ea8759963c0432" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this vector to be the vector's current size.</source>
          <target state="translated">このベクタの容量をベクタの現在のサイズになるようにトリミングします。</target>
        </trans-unit>
        <trans-unit id="409e26f80653b9a0477fcbaf5528851c8694d8ca" translate="yes" xml:space="preserve">
          <source>Trims the capacity of this vector to be the vector's current size. If the capacity of this vector is larger than its current size, then the capacity is changed to equal the size by replacing its internal data array, kept in the field &lt;code&gt;elementData&lt;/code&gt;, with a smaller one. An application can use this operation to minimize the storage of a vector.</source>
          <target state="translated">このベクターの容量をベクターの現在のサイズにトリミングします。このベクトルの容量が現在のサイズより大きい場合、フィールド &lt;code&gt;elementData&lt;/code&gt; に保持されている内部データ配列をより小さいものに置き換えることにより、容量はサイズと同じになるように変更されます。アプリケーションはこの操作を使用して、ベクトルのストレージを最小限に抑えることができます。</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">True</target>
        </trans-unit>
        <trans-unit id="232a258e2d7a30d4d0831b671c1c85daf22199bd" translate="yes" xml:space="preserve">
          <source>True (required) / False (optional)</source>
          <target state="translated">True (必須)/False (オプション)</target>
        </trans-unit>
        <trans-unit id="5f688424f288d45fabbee9eb9cda452d378327ec" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;fields[]&lt;/code&gt; are in sync with the currently set time.</source>
          <target state="translated">&lt;code&gt;fields[]&lt;/code&gt; が現在設定されている時刻と同期している場合はTrue 。</target>
        </trans-unit>
        <trans-unit id="f9008b59944e474716b6c279855a4c78603b9e73" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;fields[]&lt;/code&gt; are in sync with the currently set time. If false, then the next attempt to get the value of a field will force a recomputation of all fields from the current value of &lt;code&gt;time&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fields[]&lt;/code&gt; が現在設定されている時刻と同期している場合はtrue 。falseの場合、次にフィールドの値を取得しようとすると、現在の &lt;code&gt;time&lt;/code&gt; の値からすべてのフィールドが再計算されます。</target>
        </trans-unit>
        <trans-unit id="316d6a9546a69f4fa93b8e29ea71be29825c4055" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;name&lt;/code&gt; matches this ObjectName.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; このObjectNameと一致する場合はTrue 。</target>
        </trans-unit>
        <trans-unit id="7d74cdbb58b6ecbcac3a0ef765cee10ee5e0d7b3" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is an ObjectName whose canonical form is equal to that of this ObjectName.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; が、正規形がこのObjectNameの正規形と等しいObjectNameである場合はtrue 。</target>
        </trans-unit>
        <trans-unit id="c8d0f539ec0cef070a91f358f1a2c15c74d970da" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this PrinterURI attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのPrinterURI属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="f5ff83a5171e1f22fe9bd1d647c63c57c7f7c621" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this URI attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのURI属性と等しい場合はtrue、それ以外の場合はfalse。</target>
        </trans-unit>
        <trans-unit id="78a517787d59bde4667e895c1101649344c15ca0" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this copies attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのコピー属性と同等の場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="debd04af9459fa14193dd46af30fee5f7051260a" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this copies supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのコピーされたサポートされる属性と同等である場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="c78a6f27610d5e65cb2064729eff898ea0e03070" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this date-time at completed attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこの完了日時属性に等しい場合はtrue、それ以外の場合はfalse。</target>
        </trans-unit>
        <trans-unit id="a5d2dea2d175c00ba7a0c624cb1fac6db752ac44" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this date-time at creation attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこの作成日時属性に等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="a123332ed042028561a571511e8ffdcee65617d2" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this date-time at processing attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; が処理時のこの日時に等しい場合はtrue、それ以外の場合はfalse。</target>
        </trans-unit>
        <trans-unit id="042d32b64be9612eac1597129d3d8b62758db782" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this date-time attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこの日時属性に等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="32eeb754a247b34f3f4c6ac9ef3263d83fbfb6e9" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this destination attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこの宛先属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="a73062b2bf78d86898ca309f5e37bfb78b6a80d1" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this document name attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのドキュメント名属性に等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="ca3ca75d2887858d161d619559ce0b9cf2aa315d" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this integer attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこの整数属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="c0660c0d541c5bae8b10462386bd955c3dbe965c" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job K octets attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのジョブのKオクテット属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="30180f68b47f9549353326a0c11ec0d0aecaae28" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job K octets processed attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのジョブのKオクテット処理属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="2b7d3e78b96c18bf47929ef0d2a080e154430969" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job K octets supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのジョブのKオクテットサポート属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="b53f332594b109ee4e955770ca84c8d643a8f8e6" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job hold until attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのジョブの保持属性と等しい場合はtrue、それ以外の場合はfalse。</target>
        </trans-unit>
        <trans-unit id="370648e0de26abf3709fa30cba89a4b44e622167" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job impressions attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこの求人の属性と同等の場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="a4314844386a074052274b8fe7e0b100ecf3ee83" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job impressions completed attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのジョブインプレッション完了属性と同等の場合はtrue、それ以外の場合はfalse。</target>
        </trans-unit>
        <trans-unit id="a45af18ce0944078a918753b891fdadd163731c0" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job impressions supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこの求人のインプレッションサポート属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="3d5dc84fe5210c7beab4cb2b2a3f5d6582023d42" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job media sheets attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのジョブメディアシート属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="7378ee2254d9fa4f8e56e76757701609934a9ab9" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job media sheets completed attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのジョブメディアシートの完了属性に相当する場合はtrue、それ以外の場合はfalse。</target>
        </trans-unit>
        <trans-unit id="06f9d9ac3992c96fefc1e4fef8dafc528c43d8dc" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job media sheets supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのジョブメディアシートのサポートされる属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="f08b3a579d9e48ac23f20d1ab42098114f2bf095" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job message from operator attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がオペレーター属性からのこのジョブメッセージに等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="6b8822239f6df81c6840ab3a71c620a84a417af6" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job name attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのジョブ名属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="1ea04e73ea945f7c8ace36a30b0cb140f8056780" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job originating user name attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのジョブの発信元ユーザー名属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="db83998c8ad28006baf27710d7bfce52d68901c7" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job priority attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのジョブ優先度属性と同等の場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="7bdc113edf8fe71105dda622c453eaab1fd529d6" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this job priority supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのジョブ優先度サポート属性と同等の場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="54dce3d84390b3568ca1685ed8c8ae7c237c9bce" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this media attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのメディア属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="67c4f98614d7b7c70dfeadd19988c94145ad1042" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this media margins attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのメディアマージン属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="9226fd0b3150904362e91003b8c4244c4b7ab5de" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this media size attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのメディアサイズ属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="a8c5b719128af1553dd3c3499e432bd7ec3bd852" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this number of documents attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのドキュメント数属性に等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="5515b1ced5d5eed6cc4c583237af880d0dbd9743" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this number of intervening jobs attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこの介在するジョブ属性の数と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="a7c15690962ce5e2e364a518d284a8b0f51c2f28" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this number up attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこの数値アップ属性に等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="62b718244bedd7caae1e8b5714f47ee65e724019" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this number up supported attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がサポートされているこの属性番号と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="40d9c1c96c4ce710cdaa6bc2276979da01564190" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this output device assigned attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこの出力デバイスに割り当てられた属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="a0c8ca6c59834aa1cf1480fc9e9fa72f5bcd02e5" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this page ranges attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのページ範囲属性と同等の場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="79e421205af1ffead2e903264c2ea38c1328cca8" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this pages per minute attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこの分のページ属性に等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="a77bddaac82f96f88fec398e45568f7e0f4f502b" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this pages per minute color attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; が1分あたりのこのページの色属性に等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="936e58366635010bf4cbc88e6bb441dd16bd6cf5" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer info attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのプリンター情報属性に相当する場合はtrue、それ以外の場合はfalse。</target>
        </trans-unit>
        <trans-unit id="a3869ad738e829e22b6ad1b283619a6803e635fb" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer location attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのプリンターの場所属性に等しい場合はtrue、それ以外の場合はfalse。</target>
        </trans-unit>
        <trans-unit id="2e502f9d426a99490cb924f10d484d2b50384927" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer make and model attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのプリンターのメーカーとモデルの属性に等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="230db4c8c5525351a3158ca1d3bd3850c4830d64" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer message from operator attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がオペレーター属性からのこのプリンターメッセージに等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="0b3b19272ee08b8dc7e38895e029afb3fa43b400" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer more info attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのプリンターの詳細情報属性と同等の場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="8158bbe8285598be830ae5cf794358ad1e6985a6" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer more info manufacturer attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのプリンタの詳細情報メーカーの属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="d4eaafce4348aa10f440d6b9e7e1fe59139f46b8" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer name attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのプリンター名属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="8645ab04f082af554745c1d06d925e857de95c0e" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this printer resolution attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのプリンター解像度属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="07097e5a6dbc1780b24ae505e30115c6a7b8cafb" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this queued job count attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのキュージョブ数属性と等しい場合はtrue、それ以外の場合はfalse。</target>
        </trans-unit>
        <trans-unit id="7f41558e522e714a78e7e2bf7aafd89786bf37a5" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this requesting user name attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのリクエストしているユーザー名属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="b4cd45ae7096b6fa068eb9ee274f9ec6f50848ba" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this resolution attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこの解像度属性に等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="c8150784974576b67a6ade27c52d4ba6dde1081f" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this set-of-integer attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこの整数セット属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="f03142c60449edb750c330936fd47e74eccd904e" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this text attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこのテキスト属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="09115d70f2459084f4b16056c586c3bca86b875d" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;object&lt;/code&gt; is equivalent to this two-dimensional size attribute, false otherwise.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; がこの2次元のサイズ属性と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="9979ae6f6f66da1bee0cd1bcaf8bca4868417cc6" translate="yes" xml:space="preserve">
          <source>True if a viewport should force the Scrollables height to match its own.</source>
          <target state="translated">ビューポートがScrollablesの高さを強制的に自分の高さに合わせるかどうかを指定する場合に真を指定します。</target>
        </trans-unit>
        <trans-unit id="59440881f789a805ea62d7f1c418f478248d46ff" translate="yes" xml:space="preserve">
          <source>True if a viewport should force the Scrollables width to match its own.</source>
          <target state="translated">ビューポートがScrollablesの幅を強制的に自分の幅に合わせるかどうかを指定する場合に真を指定します。</target>
        </trans-unit>
        <trans-unit id="d84529ce46c0b99b343bc272a1269269cb24f977" translate="yes" xml:space="preserve">
          <source>True if an equivalent copy of &lt;code&gt;newInstance&lt;/code&gt; may be created by applying a series of mutations to &lt;code&gt;oldInstance&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;oldInstance&lt;/code&gt; に一連のミューテーションを適用することにより、 &lt;code&gt;newInstance&lt;/code&gt; の同等のコピーを作成できる場合はtrue 。</target>
        </trans-unit>
        <trans-unit id="4abd6da7ee44770d3198f4caee0c6799a01360a6" translate="yes" xml:space="preserve">
          <source>True if doing optimizations for a largeModel.</source>
          <target state="translated">largeModel の最適化を行っている場合に真。</target>
        </trans-unit>
        <trans-unit id="80b67f43c04bb5ff42e816f2ed21ceadbd471ab3" translate="yes" xml:space="preserve">
          <source>True if doing optimizations for a largeModel. Subclasses that don't support this may wish to override createLayoutCache to not return a FixedHeightLayoutCache instance.</source>
          <target state="translated">largeModel で最適化を行う場合に真。これをサポートしていないサブクラスは createLayoutCache をオーバーライドして FixedHeightLayoutCache インスタンスを返さないようにするとよいでしょう。</target>
        </trans-unit>
        <trans-unit id="48f09e9f1164b8534140c5dbd220e84e813f94ab" translate="yes" xml:space="preserve">
          <source>True if handles are displayed at the topmost level of the tree.</source>
          <target state="translated">ツリーの最上段にハンドルが表示されている場合は真。</target>
        </trans-unit>
        <trans-unit id="085fcf6ce1d70c67792dd95a0c6eeb018ebf8020" translate="yes" xml:space="preserve">
          <source>True if has focus.</source>
          <target state="translated">フォーカスがあれば真。</target>
        </trans-unit>
        <trans-unit id="c2d803ec851da5ad274b0b29bf9b789b13d1550d" translate="yes" xml:space="preserve">
          <source>True if literal characters in mask should be returned in stringToValue</source>
          <target state="translated">マスク内のリテラル文字が stringToValue で返されるべきかどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="6aeae7d598be2ce7ff587386b3e53fb639666085" translate="yes" xml:space="preserve">
          <source>True if row selection is allowed in this table.</source>
          <target state="translated">このテーブルで行の選択が許可されている場合は真。</target>
        </trans-unit>
        <trans-unit id="72acd669a5bae0f9027566fa8f540689c159adec" translate="yes" xml:space="preserve">
          <source>True if the MBean is already registered in the MBean server, false otherwise.</source>
          <target state="translated">MBean が既に MBean サーバに登録されている場合は True、そうでない場合は false。</target>
        </trans-unit>
        <trans-unit id="d9e2b8a6231cfbc9b04840d1f2a8c52b47e58e7c" translate="yes" xml:space="preserve">
          <source>True if the annotated interface is an MXBean interface.</source>
          <target state="translated">アノテーションされたインターフェイスがMXBeanインターフェイスの場合は真。</target>
        </trans-unit>
        <trans-unit id="5e0678e798c9adf3be1ca57c92b6d28f2a9876fe" translate="yes" xml:space="preserve">
          <source>True if the attribute can be read, false otherwise.</source>
          <target state="translated">属性が読み込める場合は真、そうでない場合は偽。</target>
        </trans-unit>
        <trans-unit id="430eefc3f193cd471d08a7b3fad3a3c7a4e81b03" translate="yes" xml:space="preserve">
          <source>True if the attribute can be written to, false otherwise.</source>
          <target state="translated">属性が書き込める場合は真、そうでない場合は偽。</target>
        </trans-unit>
        <trans-unit id="0262528c6862f2163255b62c3a42780edb6a145e" translate="yes" xml:space="preserve">
          <source>True if the bean absolutely needs a GUI available in order to get its work done.</source>
          <target state="translated">ビーンが作業を完了させるために利用可能なGUIが絶対的に必要な場合は真です。</target>
        </trans-unit>
        <trans-unit id="b3e69cc2f740789146636c3d61d6e12ac29475d5" translate="yes" xml:space="preserve">
          <source>True if the border selection color should be drawn.</source>
          <target state="translated">境界線の選択色を描画する場合は真。</target>
        </trans-unit>
        <trans-unit id="871d7e256eb6be73fc624c05f8c5efeae35a22a1" translate="yes" xml:space="preserve">
          <source>True if the class will honor the paintValue method.</source>
          <target state="translated">クラスが paintValue メソッドを使用する場合は真。</target>
        </trans-unit>
        <trans-unit id="4621f74235ec7cf97b2c8929084931baf757c70a" translate="yes" xml:space="preserve">
          <source>True if the diagnostic command is enabled, false otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2610a91028db8e665ce846b0abcdd873a1d0b0" translate="yes" xml:space="preserve">
          <source>True if the given &lt;code&gt;obj&lt;/code&gt; is the same as this &lt;code&gt;SimpleTimeZone&lt;/code&gt; object; false otherwise.</source>
          <target state="translated">指定された &lt;code&gt;obj&lt;/code&gt; がこの &lt;code&gt;SimpleTimeZone&lt;/code&gt; オブジェクトと同じである場合はtrue 。それ以外の場合はfalse。</target>
        </trans-unit>
        <trans-unit id="91a0286d93f75bfbf7e8ea933781e954a6586e48" translate="yes" xml:space="preserve">
          <source>True if the name is a domain pattern, otherwise false.</source>
          <target state="translated">名前がドメインパターンの場合は真、そうでない場合は偽。</target>
        </trans-unit>
        <trans-unit id="d295faae8d543ae95cae46c595b4fceb692cdf20" translate="yes" xml:space="preserve">
          <source>True if the name is a pattern, otherwise false.</source>
          <target state="translated">名前がパターンの場合は真、そうでない場合は偽。</target>
        </trans-unit>
        <trans-unit id="e10ca211f228b3c5db003c3fea2a477c6338c590" translate="yes" xml:space="preserve">
          <source>True if the name is a property list pattern, otherwise false.</source>
          <target state="translated">名前がプロパティ・リスト・パターンの場合は真、そうでない場合は偽。</target>
        </trans-unit>
        <trans-unit id="58593912db01af7865de5913714994c5ee75873b" translate="yes" xml:space="preserve">
          <source>True if the name is a property pattern, otherwise false.</source>
          <target state="translated">名前がプロパティパターンの場合は真、そうでない場合は偽。</target>
        </trans-unit>
        <trans-unit id="3c82e798826072fe1750a71d55e463b72e564ecc" translate="yes" xml:space="preserve">
          <source>True if the name is a property value pattern, otherwise false.</source>
          <target state="translated">名前がプロパティ値パターンの場合は真、そうでない場合は偽。</target>
        </trans-unit>
        <trans-unit id="296ddb6e0bfc97c39454a7352e9f5c4f06ff26e0" translate="yes" xml:space="preserve">
          <source>True if the next read() is guaranteed not to block for input</source>
          <target state="translated">次の read()が入力に対してブロックされないことが保証されている場合は真。</target>
        </trans-unit>
        <trans-unit id="72177c90484795271749cc0029b51961fb02402d" translate="yes" xml:space="preserve">
          <source>True if the next read() is guaranteed not to block for input, false otherwise. Note that returning false does not guarantee that the next read will block.</source>
          <target state="translated">次の read()が入力に対してブロックしないことが保証されている場合は True、そうでない場合は false を返します。false を返しても、次の読み込みがブロックされることは保証されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="e54ac9c8535cc38a8224b4aa1522f499f1cec117" translate="yes" xml:space="preserve">
          <source>True if the parameter can be specified several times, false otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb912dfd27b1d484e29e06c975b601edbb666f2" translate="yes" xml:space="preserve">
          <source>True if the parameter is an option, false if it is an argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bade106b8255ae3de9b18e539eec22468e53e825" translate="yes" xml:space="preserve">
          <source>True if the parameter is mandatory, false otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d5fc75f48f05ea99011b3c8bdee26e5f9c97e2" translate="yes" xml:space="preserve">
          <source>True if the propertyEditor can provide a custom editor.</source>
          <target state="translated">propertyEditorがカスタムエディタを提供できる場合は真。</target>
        </trans-unit>
        <trans-unit id="67371c8f68701530943732be85e883f939c9ad90" translate="yes" xml:space="preserve">
          <source>True if the query was successfully applied to the MBean, false otherwise</source>
          <target state="translated">クエリがMBeanに正常に適用された場合はTrue、そうでない場合はFalse</target>
        </trans-unit>
        <trans-unit id="31e4c3234ce98dea898ccbb4c47e0354743cda4e" translate="yes" xml:space="preserve">
          <source>True if the root node is displayed, false if its children are the highest visible nodes.</source>
          <target state="translated">ルートノードが表示されている場合はTrue、その子ノードが表示されている最も高いノードである場合はFalseです。</target>
        </trans-unit>
        <trans-unit id="e80ddea7ca051d50120966df009c7766bbda8ec9" translate="yes" xml:space="preserve">
          <source>True if the scrollbar knob is being dragged.</source>
          <target state="translated">スクロールバーのノブがドラッグされている場合は True。</target>
        </trans-unit>
        <trans-unit id="b78db768fb19408b18c571000941a62f2f3d3a67" translate="yes" xml:space="preserve">
          <source>True if the two Attribute objects are equal, otherwise false.</source>
          <target state="translated">2つの属性オブジェクトが等しい場合は真、そうでない場合は偽。</target>
        </trans-unit>
        <trans-unit id="fdce3816caf0c099b4f01a9f4518db4ae50dcf6c" translate="yes" xml:space="preserve">
          <source>True if the two object instances are equal, otherwise false.</source>
          <target state="translated">2つのオブジェクトインスタンスが等しい場合は真、そうでない場合は偽。</target>
        </trans-unit>
        <trans-unit id="a3b98ad5f49e1c1d38080f2110048b734b37b56b" translate="yes" xml:space="preserve">
          <source>True if the value associated with the given key property is a pattern, otherwise false.</source>
          <target state="translated">指定されたキー・プロパティに関連付けられた値がパターンの場合は真、そうでない場合は偽。</target>
        </trans-unit>
        <trans-unit id="480e3bc436601c86e007f68526dfe91decb99d10" translate="yes" xml:space="preserve">
          <source>True if the value was set.</source>
          <target state="translated">値が設定されていれば真。</target>
        </trans-unit>
        <trans-unit id="b7aabe8b66f27e0a9726d05be3f92428183cce1e" translate="yes" xml:space="preserve">
          <source>True if the value was set; else False</source>
          <target state="translated">値が設定されていれば真、そうでなければ偽</target>
        </trans-unit>
        <trans-unit id="74d60426c7ba57c327752e9ce02363321b815ba8" translate="yes" xml:space="preserve">
          <source>True if then the value of &lt;code&gt;time&lt;/code&gt; is valid.</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; の値が有効な場合はtrue 。</target>
        </trans-unit>
        <trans-unit id="c83441fff2b565ae55b322b2e62426a67e8b1525" translate="yes" xml:space="preserve">
          <source>True if then the value of &lt;code&gt;time&lt;/code&gt; is valid. The time is made invalid by a change to an item of &lt;code&gt;field[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; の値が有効な場合は真。 &lt;code&gt;field[]&lt;/code&gt; アイテムを変更すると、時間が無効になります。</target>
        </trans-unit>
        <trans-unit id="673e66a932927c766564f59e6def50c88e451ac7" translate="yes" xml:space="preserve">
          <source>True if there is no more data in the buffered part of the stream.</source>
          <target state="translated">ストリームのバッファリングされた部分にもうデータがない場合は真。</target>
        </trans-unit>
        <trans-unit id="513e47a5017cdb24e4f4d20fc6b1ee63de51a72f" translate="yes" xml:space="preserve">
          <source>True if this Print Service supports specifying &lt;code&gt;attrval&lt;/code&gt; as a doc-level or job-level attribute in a Print Request, false if it doesn't.</source>
          <target state="translated">この印刷サービスが &lt;code&gt;attrval&lt;/code&gt; を印刷要求のドキュメントレベルまたはジョブレベルの属性として指定できる場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="1d9ba50b3b690a8e0ac10e13867c2ac4cd8a38a5" translate="yes" xml:space="preserve">
          <source>True if this doc flavor object equals &lt;code&gt;obj&lt;/code&gt;, false otherwise.</source>
          <target state="translated">このdocフレーバーオブジェクトが &lt;code&gt;obj&lt;/code&gt; と等しい場合はtrue、そうでない場合はfalse。</target>
        </trans-unit>
        <trans-unit id="bc87f0b14529d6c96922d61e011d56a6033bc5de" translate="yes" xml:space="preserve">
          <source>True if this feature is intended for use by experts only.</source>
          <target state="translated">この機能が専門家のみが使用することを意図している場合は真です。</target>
        </trans-unit>
        <trans-unit id="936c0c8748822696fa2238857c6da82d450d8769" translate="yes" xml:space="preserve">
          <source>True if this feature should be hidden from human users.</source>
          <target state="translated">この機能を人間のユーザーから隠すべきかどうかを判定します。</target>
        </trans-unit>
        <trans-unit id="9a2c9fbca019ccf921c07920b82ddcdd62c16f88" translate="yes" xml:space="preserve">
          <source>True if this feature should be preferentially shown to human users.</source>
          <target state="translated">この機能を人間のユーザーに優先的に表示する場合は真。</target>
        </trans-unit>
        <trans-unit id="e81ae2ca658cccbae8b207880ff384cb9c71c187" translate="yes" xml:space="preserve">
          <source>True if this is a bound property.</source>
          <target state="translated">これがバインドされたプロパティであれば真。</target>
        </trans-unit>
        <trans-unit id="0384f2901c32d82f6dfeb7f8437c9cc22bf77e8f" translate="yes" xml:space="preserve">
          <source>True if this is a constrained property.</source>
          <target state="translated">これが制約付きプロパティであれば真。</target>
        </trans-unit>
        <trans-unit id="0f20d043d01d9ed0dbe792a1c6b003c8f3f6fdec" translate="yes" xml:space="preserve">
          <source>True if this resolution attribute is less than or equal to the &lt;code&gt;other&lt;/code&gt; resolution attribute, false otherwise.</source>
          <target state="translated">この解像度属性が &lt;code&gt;other&lt;/code&gt; 解像度属性以下の場合はtrue、それ以外の場合はfalse。</target>
        </trans-unit>
        <trans-unit id="b5d41f16126553b7a6db77032569b772a6cfca64" translate="yes" xml:space="preserve">
          <source>True if this set-of-integer attribute contains &lt;code&gt;theAttribute&lt;/code&gt;'s value, false otherwise.</source>
          <target state="translated">この整数型の属性に &lt;code&gt;theAttribute&lt;/code&gt; の値が含まれている場合はtrue、それ以外の場合はfalse。</target>
        </trans-unit>
        <trans-unit id="5ae279aab85e79b566f26af99b478fad1647c9e2" translate="yes" xml:space="preserve">
          <source>True if this set-of-integer attribute contains the value &lt;code&gt;x&lt;/code&gt;, false otherwise.</source>
          <target state="translated">この整数セットの属性に値 &lt;code&gt;x&lt;/code&gt; が含まれている場合はtrue、それ以外の場合はfalse。</target>
        </trans-unit>
        <trans-unit id="8c75a6bf7e61e4ed9b2807469a60c3f85451248b" translate="yes" xml:space="preserve">
          <source>True if we are running in an application construction environment.</source>
          <target state="translated">アプリケーションの構築環境で実行している場合は真です。</target>
        </trans-unit>
        <trans-unit id="01159a5439382c7219f5ad2557c8b74a5012df3f" translate="yes" xml:space="preserve">
          <source>True if we are running in an environment where beans can assume that an interactive GUI is available, so they can pop up dialog boxes, etc. This will normally return true in a windowing environment, and will normally return false in a server environment or if an application is running as part of a batch job.</source>
          <target state="translated">対話的なGUIが利用可能で、ダイアログボックスなどをポップアップさせることができるとビーンズが想定できる環境で実行している場合に真を返します。これは、ウィンドウ環境では通常trueを返し、サーバ環境や、アプリケーションがバッチジョブの一部として実行されている場合は通常falseを返します。</target>
        </trans-unit>
        <trans-unit id="e047319c4a28fa47382a8e8136ad99486ffe9139" translate="yes" xml:space="preserve">
          <source>True when the viewport dimensions have been determined.</source>
          <target state="translated">ビューポートの寸法が決定されている場合に真。</target>
        </trans-unit>
        <trans-unit id="e1267039cd9948ec4147d3d54f1f53f09322a0c7" translate="yes" xml:space="preserve">
          <source>True when the viewport dimensions have been determined. The default is false.</source>
          <target state="translated">ビューポートの寸法が決定されている場合は真です。デフォルトは false です。</target>
        </trans-unit>
        <trans-unit id="f162ea11b0d1750db8489a0816184c4b47d38184" translate="yes" xml:space="preserve">
          <source>True when this viewport is maintaining an offscreen image of its contents, so that some scrolling can take place using fast &quot;bit-blit&quot; operations instead of by accessing the view object to construct the display. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">このビューポートがコンテンツのオフスクリーンイメージを維持している場合はTrueであるため、ビューオブジェクトにアクセスして表示を構築する代わりに、高速の「ビットブリット」操作を使用してスクロールを実行できます。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="af345ec9c24b9fc6fe235d4ba49a4123f3376ae5" translate="yes" xml:space="preserve">
          <source>TrueType fonts typically provide this information in the 'gasp' table. In the absence of this information, the behaviour for a particular font and size is determined by implementation defaults.</source>
          <target state="translated">TrueType フ ォ ン ト は通常、 こ の情報を 「gasp」 テーブルで提供 し てい ます。この情報がない場合、特定のフォントとサイズに対する動作は、実装のデフォルトによって決定されます。</target>
        </trans-unit>
        <trans-unit id="71c1ef867208ae9b80b1c1103182a8385cfd1e50" translate="yes" xml:space="preserve">
          <source>Truncates the &lt;code&gt;BLOB&lt;/code&gt; value that this &lt;code&gt;Blob&lt;/code&gt; object represents to be &lt;code&gt;len&lt;/code&gt; bytes in length.</source>
          <target state="translated">この &lt;code&gt;Blob&lt;/code&gt; オブジェクトが表す &lt;code&gt;BLOB&lt;/code&gt; 値を、長さが &lt;code&gt;len&lt;/code&gt; バイトになるように切り捨てます。</target>
        </trans-unit>
        <trans-unit id="8ff473282a1857f09f1061d0eb9cf1f77c0769c3" translate="yes" xml:space="preserve">
          <source>Truncates the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;Clob&lt;/code&gt; designates to have a length of &lt;code&gt;len&lt;/code&gt; characters.</source>
          <target state="translated">この &lt;code&gt;CLOB&lt;/code&gt; が &lt;code&gt;len&lt;/code&gt; 文字の長さを持つように指定したCLOB値を切り捨て &lt;code&gt;Clob&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe6c335e97860eef78d5b3e57afb036c5e7b3032" translate="yes" xml:space="preserve">
          <source>Truncates the &lt;code&gt;CLOB&lt;/code&gt; value that this &lt;code&gt;SerialClob&lt;/code&gt; object represents so that it has a length of &lt;code&gt;len&lt;/code&gt; characters.</source>
          <target state="translated">この &lt;code&gt;SerialClob&lt;/code&gt; オブジェクトが表す &lt;code&gt;CLOB&lt;/code&gt; 値を切り捨てて、長さが &lt;code&gt;len&lt;/code&gt; 文字になるようにします。</target>
        </trans-unit>
        <trans-unit id="ff6d79205307304ccbe04a5cfb0c6bd0adec8d8e" translate="yes" xml:space="preserve">
          <source>Truncates the entity, to which this channel is connected, to the given size.</source>
          <target state="translated">このチャネルが接続されているエンティティを、指定されたサイズに切り詰めます。</target>
        </trans-unit>
        <trans-unit id="ad6547800e3cc053297a9a2f061b6284a1c42184" translate="yes" xml:space="preserve">
          <source>Truncates this channel's file to the given size.</source>
          <target state="translated">このチャンネルのファイルを指定したサイズに切り詰めます。</target>
        </trans-unit>
        <trans-unit id="8f1f97247a5e2fbe4c50794c4ca0e63e0c699f44" translate="yes" xml:space="preserve">
          <source>Truncating a &lt;code&gt;SerialClob&lt;/code&gt; object to length 0 has the effect of clearing its contents.</source>
          <target state="translated">&lt;code&gt;SerialClob&lt;/code&gt; オブジェクトを長さ0に切り捨てると、その内容がクリアされます。</target>
        </trans-unit>
        <trans-unit id="89e89d74270afb12e09729da4590a98e87eac88e" translate="yes" xml:space="preserve">
          <source>Truncating the duration returns a copy of the original with conceptual fields smaller than the specified unit set to zero. For example, truncating with the &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt;&lt;code&gt;MINUTES&lt;/code&gt;&lt;/a&gt; unit will round down towards zero to the nearest minute, setting the seconds and nanoseconds to zero.</source>
          <target state="translated">期間を切り捨てると、指定された単位よりも小さい概念フィールドがゼロに設定された元のコピーが返されます。たとえば、&lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt; &lt;code&gt;MINUTES&lt;/code&gt; &lt;/a&gt;単位で切り捨てると、ゼロに向かって最も近い分に切り捨てられ、秒とナノ秒がゼロに設定されます。</target>
        </trans-unit>
        <trans-unit id="79a3f99a7603cf1991a756cae56124de8247db87" translate="yes" xml:space="preserve">
          <source>Truncating the instant returns a copy of the original with fields smaller than the specified unit set to zero. The fields are calculated on the basis of using a UTC offset as seen in &lt;code&gt;toString&lt;/code&gt;. For example, truncating with the &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt;&lt;code&gt;MINUTES&lt;/code&gt;&lt;/a&gt; unit will round down to the nearest minute, setting the seconds and nanoseconds to zero.</source>
          <target state="translated">インスタントを切り捨てると、指定された単位よりも小さいフィールドがゼロに設定された元のコピーが返されます。フィールドは、 &lt;code&gt;toString&lt;/code&gt; にあるUTCオフセットを使用して計算されます。たとえば、&lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt; &lt;code&gt;MINUTES&lt;/code&gt; &lt;/a&gt;単位で切り捨てると、最も近い分に切り捨てられ、秒とナノ秒がゼロに設定されます。</target>
        </trans-unit>
        <trans-unit id="46728e78399c2ef4201c30b70feba7f32a425954" translate="yes" xml:space="preserve">
          <source>Truncation returns a copy of the original date-time with fields smaller than the specified unit set to zero. For example, truncating with the &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt;&lt;code&gt;minutes&lt;/code&gt;&lt;/a&gt; unit will set the second-of-minute and nano-of-second field to zero.</source>
          <target state="translated">切り捨ては、指定された単位よりも小さいフィールドがゼロに設定された、元の日時のコピーを返します。たとえば、&lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt; &lt;code&gt;minutes&lt;/code&gt; &lt;/a&gt;単位で切り捨てると、秒のフィールドと秒のフィールドがゼロに設定されます。</target>
        </trans-unit>
        <trans-unit id="1f29e0520ca15424c75fc5c7c1e020e8b57e547d" translate="yes" xml:space="preserve">
          <source>Truncation returns a copy of the original time with fields smaller than the specified unit set to zero. For example, truncating with the &lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt;&lt;code&gt;minutes&lt;/code&gt;&lt;/a&gt; unit will set the second-of-minute and nano-of-second field to zero.</source>
          <target state="translated">切り捨ては、指定された単位よりも小さいフィールドがゼロに設定された、元の時間のコピーを返します。たとえば、&lt;a href=&quot;temporal/chronounit#MINUTES&quot;&gt; &lt;code&gt;minutes&lt;/code&gt; &lt;/a&gt;単位で切り捨てると、秒のフィールドと秒のフィールドがゼロに設定されます。</target>
        </trans-unit>
        <trans-unit id="9ff1fa71f94fa80ea032f012d9275d9d960ef7bf" translate="yes" xml:space="preserve">
          <source>TrustAnchor</source>
          <target state="translated">TrustAnchor</target>
        </trans-unit>
        <trans-unit id="e1198f03c160dcee02f250da582eacc5135d366c" translate="yes" xml:space="preserve">
          <source>TrustAnchor.getCA()</source>
          <target state="translated">TrustAnchor.getCA()</target>
        </trans-unit>
        <trans-unit id="962dc9f9ba08469e8bc4b06894f7ed9ab8a27904" translate="yes" xml:space="preserve">
          <source>TrustAnchor.getCAName()</source>
          <target state="translated">TrustAnchor.getCAName()</target>
        </trans-unit>
        <trans-unit id="edfbf18d143b7b10b5f8635b31c3dd8efeeb1a7c" translate="yes" xml:space="preserve">
          <source>TrustAnchor.getCAPublicKey()</source>
          <target state="translated">TrustAnchor.getCAPublicKey()</target>
        </trans-unit>
        <trans-unit id="e0619f9daa82cad2de4c96355d9e952cf6db60a8" translate="yes" xml:space="preserve">
          <source>TrustAnchor.getNameConstraints()</source>
          <target state="translated">TrustAnchor.getNameConstraints()</target>
        </trans-unit>
        <trans-unit id="3a73962db8321c7bb663d99d968fa08492487ae3" translate="yes" xml:space="preserve">
          <source>TrustAnchor.getTrustedCert()</source>
          <target state="translated">TrustAnchor.getTrustedCert()</target>
        </trans-unit>
        <trans-unit id="2d12bf7262a60b66f9ef0c4aed5e014369200002" translate="yes" xml:space="preserve">
          <source>TrustAnchor.toString()</source>
          <target state="translated">TrustAnchor.toString()</target>
        </trans-unit>
        <trans-unit id="cf170153db4f3bf87be22cf4d6df3d50bf346cf1" translate="yes" xml:space="preserve">
          <source>TrustManager</source>
          <target state="translated">TrustManager</target>
        </trans-unit>
        <trans-unit id="b38b25686e83f7263c127858a07ef41818b4e939" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory</source>
          <target state="translated">TrustManagerFactory</target>
        </trans-unit>
        <trans-unit id="4e7970986e1c932f399b3bc4fb5a4b57bdc309c6" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.getAlgorithm()</source>
          <target state="translated">TrustManagerFactory.getAlgorithm()</target>
        </trans-unit>
        <trans-unit id="5f4d699ddce6bf46800f2e8b97a808b5737b53c0" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.getDefaultAlgorithm()</source>
          <target state="translated">TrustManagerFactory.getDefaultAlgorithm()</target>
        </trans-unit>
        <trans-unit id="b10571068827658b3b755d6e3f3cecb9a46661f5" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.getInstance()</source>
          <target state="translated">TrustManagerFactory.getInstance()</target>
        </trans-unit>
        <trans-unit id="9e62d2c8eca05e38e204da2a35189b4f1200f9a1" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.getProvider()</source>
          <target state="translated">TrustManagerFactory.getProvider()</target>
        </trans-unit>
        <trans-unit id="2d10fdf7767f1f64ab4cc0d93331c4f79ff7011e" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.getTrustManagers()</source>
          <target state="translated">TrustManagerFactory.getTrustManagers()</target>
        </trans-unit>
        <trans-unit id="e324560c6bc2ca29aedabe0ff28b3a7845588ff8" translate="yes" xml:space="preserve">
          <source>TrustManagerFactory.init()</source>
          <target state="translated">TrustManagerFactory.init()</target>
        </trans-unit>
        <trans-unit id="3fb8699eb45c86babcb3771077865c43dd636f5a" translate="yes" xml:space="preserve">
          <source>TrustManagerFactorySpi</source>
          <target state="translated">TrustManagerFactorySpi</target>
        </trans-unit>
        <trans-unit id="8c67faa49913e7372282549efd20ca5804ac76ac" translate="yes" xml:space="preserve">
          <source>TrustManagerFactorySpi.engineGetTrustManagers()</source>
          <target state="translated">TrustManagerFactorySpi.engineGetTrustManagers()</target>
        </trans-unit>
        <trans-unit id="59664be8fdddfb869d86416b222fcac7ca15dec5" translate="yes" xml:space="preserve">
          <source>TrustManagerFactorySpi.engineInit()</source>
          <target state="translated">TrustManagerFactorySpi.engineInit()</target>
        </trans-unit>
        <trans-unit id="85a5c0ad6b1cbb5deac6e76b7268202bd210aff9" translate="yes" xml:space="preserve">
          <source>TrustedCertificateEntry</source>
          <target state="translated">TrustedCertificateEntry</target>
        </trans-unit>
        <trans-unit id="6a1710b761422dee5a93a2051bd124d4c19f7016" translate="yes" xml:space="preserve">
          <source>Try to receieve another message or notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051e3db63c5f4e3f2583d9180b61c8a7c6e0b07b" translate="yes" xml:space="preserve">
          <source>TryTree</source>
          <target state="translated">TryTree</target>
        </trans-unit>
        <trans-unit id="ff23fb7ffbe3db8e73acfd8369f40dc54385ba74" translate="yes" xml:space="preserve">
          <source>Tue; Tuesday; T</source>
          <target state="translated">火曜・火曜・火曜・T</target>
        </trans-unit>
        <trans-unit id="df39c6b0ac9b9b3fdb7c850a7a5dd416cd1c6fde" translate="yes" xml:space="preserve">
          <source>Turn continuous layout on/off.</source>
          <target state="translated">連続レイアウトのオン/オフを切り替えます。</target>
        </trans-unit>
        <trans-unit id="91ce767ce3ed3a0ee4a2081bf9c312d31a58fee7" translate="yes" xml:space="preserve">
          <source>Turns local control on or off.</source>
          <target state="translated">ローカル制御のオン/オフを切り替えます。</target>
        </trans-unit>
        <trans-unit id="ebb42ab3958f13b91f530184c472d059675c2a3c" translate="yes" xml:space="preserve">
          <source>Turns local control on or off. The default is for local control to be on. The &quot;on&quot; setting means that if a device is capable of both synthesizing sound and transmitting MIDI messages, it will synthesize sound in response to the note-on and note-off messages that it itself transmits. It will also respond to messages received from other transmitting devices. The &quot;off&quot; setting means that the synthesizer will ignore its own transmitted MIDI messages, but not those received from other devices.</source>
          <target state="translated">ローカル制御をオンまたはオフにします。デフォルトではローカルコントロールがオンになっています。オン」の設定は、サウンドの合成とMIDIメッセージの送信の両方が可能なデバイスであれば、それ自身が送信するノートオンとノートオフのメッセージに反応してサウンドを合成することを意味します。また、他の送信デバイスから受信したメッセージにも応答します。オフ」の設定は、シンセサイザーが自分の送信したMIDIメッセージを無視することを意味しますが、他のデバイスから受信したメッセージは無視しません。</target>
        </trans-unit>
        <trans-unit id="7072217a4d4e0b86b0b43ee21814c1ae891bbde1" translate="yes" xml:space="preserve">
          <source>Turns local control on or off. The default is for local control to be on. The &quot;on&quot; setting means that if a device is capable of both synthesizing sound and transmitting MIDI messages, it will synthesize sound in response to the note-on and note-off messages that it itself transmits. It will also respond to messages received from other transmitting devices. The &quot;off&quot; setting means that the synthesizer will ignore its own transmitted MIDI messages, but not those received from other devices. It is possible that the underlying synthesizer does not support local control. In order to verify that a call to &lt;code&gt;localControl&lt;/code&gt; was successful, check the return value.</source>
          <target state="translated">ローカル制御をオンまたはオフにします。デフォルトでは、ローカル制御がオンになっています。 「オン」設定は、デバイスがサウンドの合成とMIDIメッセージの送信の両方が可能な場合、デバイス自体が送信するノートオンメッセージとノートオフメッセージに応じてサウンドを合成することを意味します。また、他の送信デバイスから受信したメッセージにも応答します。 「オフ」の設定は、シンセサイザが送信したMIDIメッセージを無視するが、他のデバイスから受信したメッセージは無視しないことを意味します。基になるシンセサイザがローカル制御をサポートしていない可能性があります。 &lt;code&gt;localControl&lt;/code&gt; の呼び出しが成功したことを確認するには、戻り値を確認します。</target>
        </trans-unit>
        <trans-unit id="a788f6e3859d6bdc7eb80baf0c9b04e8e2014c15" translate="yes" xml:space="preserve">
          <source>Turns mono mode on or off.</source>
          <target state="translated">モノラルモードのオン/オフを切り替えます。</target>
        </trans-unit>
        <trans-unit id="5ce9559f4b22fd455c3313b028b1ce2207e86a26" translate="yes" xml:space="preserve">
          <source>Turns mono mode on or off. In mono mode, the channel synthesizes only one note at a time. In poly mode (identical to mono mode off), the channel can synthesize multiple notes simultaneously. The default is mono off (poly mode on).</source>
          <target state="translated">モノラルモードのオン/オフを切り替えます。モノラルモードでは、チャンネルは一度に 1 つのノートのみを合成します。ポリモード(モノモードオフと同じ)では、複数のノートを同時に合成することができます。デフォルトはモノモードオフ(ポリモードオン)です。</target>
        </trans-unit>
        <trans-unit id="b4f8243d4bac990db2eb1b88fb07c3d3ced0f0c2" translate="yes" xml:space="preserve">
          <source>Turns off all notes that are currently sounding on this channel.</source>
          <target state="translated">現在このチャンネルで鳴っている音をすべてオフにします。</target>
        </trans-unit>
        <trans-unit id="3e2ea67556cf4452b0acd08c573d0f6235c18834" translate="yes" xml:space="preserve">
          <source>Turns off all notes that are currently sounding on this channel. The notes might not die away instantaneously; their decay rate is determined by the internals of the &lt;code&gt;Instrument&lt;/code&gt;. If the Hold Pedal controller (see &lt;a href=&quot;#controlChange(int,int)&quot;&gt;&lt;code&gt;controlChange&lt;/code&gt;&lt;/a&gt;) is down, the effect of this method is deferred until the pedal is released.</source>
          <target state="translated">このチャンネルで現在鳴っているすべてのノートをオフにします。ノートはすぐには消えないかもしれません。それらの減衰率は、 &lt;code&gt;Instrument&lt;/code&gt; 内部によって決定されます。Hold Pedalコントローラー（&lt;a href=&quot;#controlChange(int,int)&quot;&gt; &lt;code&gt;controlChange&lt;/code&gt; を&lt;/a&gt;参照）がダウンしている場合、このメソッドの効果はペダルが離されるまで延期されます。</target>
        </trans-unit>
        <trans-unit id="e1cb764c3fc90ec12c04780c545174c2e044a33b" translate="yes" xml:space="preserve">
          <source>Turns off all notes that are currently sounding on this channel. The notes might not die away instantaneously; their decay rate is determined by the internals of the &lt;code&gt;Instrument&lt;/code&gt;. If the Hold Pedal controller (see &lt;a href=&quot;midichannel#controlChange-int-int-&quot;&gt;&lt;code&gt;controlChange&lt;/code&gt;&lt;/a&gt;) is down, the effect of this method is deferred until the pedal is released.</source>
          <target state="translated">現在このチャンネルで鳴っているすべてのノートをオフにします。ノートはすぐに消えないかもしれません。それらの減衰率は、 &lt;code&gt;Instrument&lt;/code&gt; 内部によって決定されます。Hold Pedalコントローラー（&lt;a href=&quot;midichannel#controlChange-int-int-&quot;&gt; &lt;code&gt;controlChange&lt;/code&gt; を&lt;/a&gt;参照）がダウンしている場合、このメソッドの効果はペダルが離されるまで延期されます。</target>
        </trans-unit>
        <trans-unit id="e93cd6e957269008eed2366ab803e79886117f7d" translate="yes" xml:space="preserve">
          <source>Turns omni mode on or off.</source>
          <target state="translated">オムニモードのオン/オフを切り替えます。</target>
        </trans-unit>
        <trans-unit id="68b63ed6f95c0c13473caef4b53ab0d0aaab42b7" translate="yes" xml:space="preserve">
          <source>Turns omni mode on or off. In omni mode, the channel responds to messages sent on all channels. When omni is off, the channel responds only to messages sent on its channel number. The default is omni off.</source>
          <target state="translated">オムニモードをオンまたはオフにします。オムニモードでは、チャネルはすべてのチャネルで送信されたメッセージに応答します。omniがオフの場合、チャネルはそのチャネル番号で送信されたメッセージにのみ応答します。デフォルトは omni off です。</target>
        </trans-unit>
        <trans-unit id="b69131d82a65694e0dc5e7f5a0f9f802953cfea2" translate="yes" xml:space="preserve">
          <source>Turns omni mode on or off. In omni mode, the channel responds to messages sent on all channels. When omni is off, the channel responds only to messages sent on its channel number. The default is omni off. It is possible that the underlying synthesizer does not support omni mode. In order to verify that &lt;code&gt;setOmni&lt;/code&gt; was successful, use &lt;code&gt;getOmni&lt;/code&gt;.</source>
          <target state="translated">オムニモードをオンまたはオフにします。オムニモードでは、チャネルはすべてのチャネルで送信されたメッセージに応答します。オムニがオフの場合、チャネルはそのチャネル番号で送信されたメッセージにのみ応答します。デフォルトはオムニオフです。基になるシンセサイザがオムニモードをサポートしていない可能性があります。 &lt;code&gt;setOmni&lt;/code&gt; が成功したことを確認するには、getOmniを使用し &lt;code&gt;getOmni&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0539d58ba1f558b9ccab44c2e0ade1c30c5f11d9" translate="yes" xml:space="preserve">
          <source>Turns on or off automatic drag handling.</source>
          <target state="translated">自動ドラッグハンドリングのオン/オフを切り替えます。</target>
        </trans-unit>
        <trans-unit id="a8b7bce45a1d53871692bf738f2fe649d2e51e04" translate="yes" xml:space="preserve">
          <source>Turns on or off automatic drag handling. In order to enable automatic drag handling, this property should be set to &lt;code&gt;true&lt;/code&gt;, and the component's &lt;code&gt;TransferHandler&lt;/code&gt; needs to be &lt;code&gt;non-null&lt;/code&gt;. The default value of the &lt;code&gt;dragEnabled&lt;/code&gt; property is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">自動ドラッグ処理をオンまたはオフにします。自動ドラッグ処理を有効にするには、このプロパティを &lt;code&gt;true&lt;/code&gt; に設定し、コンポーネントの &lt;code&gt;TransferHandler&lt;/code&gt; を &lt;code&gt;non-null&lt;/code&gt; する必要があります。 &lt;code&gt;dragEnabled&lt;/code&gt; プロパティのデフォルト値は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="60f603afabbe22b7e8e27f8bb4f47d17e696b4bd" translate="yes" xml:space="preserve">
          <source>Turns on or off automatic drag handling. In order to enable automatic drag handling, this property should be set to &lt;code&gt;true&lt;/code&gt;, and the list's &lt;code&gt;TransferHandler&lt;/code&gt; needs to be &lt;code&gt;non-null&lt;/code&gt;. The default value of the &lt;code&gt;dragEnabled&lt;/code&gt; property is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">自動ドラッグ処理をオンまたはオフにします。自動ドラッグ処理を有効にするには、このプロパティを &lt;code&gt;true&lt;/code&gt; に設定し、リストの &lt;code&gt;TransferHandler&lt;/code&gt; を &lt;code&gt;non-null&lt;/code&gt; する必要があります。 &lt;code&gt;dragEnabled&lt;/code&gt; プロパティのデフォルト値は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1ee74680c25c446a236fa302b096261e279e3aaa" translate="yes" xml:space="preserve">
          <source>Turns on or off automatic drag handling. In order to enable automatic drag handling, this property should be set to &lt;code&gt;true&lt;/code&gt;, and the table's &lt;code&gt;TransferHandler&lt;/code&gt; needs to be &lt;code&gt;non-null&lt;/code&gt;. The default value of the &lt;code&gt;dragEnabled&lt;/code&gt; property is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">自動ドラッグ処理をオンまたはオフにします。自動ドラッグ処理を有効にするには、このプロパティを &lt;code&gt;true&lt;/code&gt; に設定し、テーブルの &lt;code&gt;TransferHandler&lt;/code&gt; を &lt;code&gt;non-null&lt;/code&gt; する必要があります。 &lt;code&gt;dragEnabled&lt;/code&gt; プロパティのデフォルト値は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f496f53bfbc4ce71ff58ce24079ee185b191a5d7" translate="yes" xml:space="preserve">
          <source>Turns on or off automatic drag handling. In order to enable automatic drag handling, this property should be set to &lt;code&gt;true&lt;/code&gt;, and the tree's &lt;code&gt;TransferHandler&lt;/code&gt; needs to be &lt;code&gt;non-null&lt;/code&gt;. The default value of the &lt;code&gt;dragEnabled&lt;/code&gt; property is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">自動ドラッグ処理をオンまたはオフにします。自動ドラッグ処理を有効にするには、このプロパティを &lt;code&gt;true&lt;/code&gt; に設定し、ツリーの &lt;code&gt;TransferHandler&lt;/code&gt; を &lt;code&gt;non-null&lt;/code&gt; する必要があります。 &lt;code&gt;dragEnabled&lt;/code&gt; プロパティのデフォルト値は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="233609026ab4041d80992e5ced4db5288ab3c61d" translate="yes" xml:space="preserve">
          <source>Turns on/off implementation specific DTD validation</source>
          <target state="translated">実装固有のDTD検証のオン/オフを切り替えます。</target>
        </trans-unit>
        <trans-unit id="92fd7b9e9ad96e695decbf8aef59ba92ef4b7afc" translate="yes" xml:space="preserve">
          <source>Turns on/off namespace processing for XML 1.0 support</source>
          <target state="translated">XML 1.0 サポートの名前空間処理のオン/オフを設定します。</target>
        </trans-unit>
        <trans-unit id="7dca574f5cbb4fb549ff8537f300c7d9266f8589" translate="yes" xml:space="preserve">
          <source>Turns the digest function on or off.</source>
          <target state="translated">ダイジェスト機能のオン/オフを切り替えます。</target>
        </trans-unit>
        <trans-unit id="b41b6160386def9c3b24b59d70a186f5f05cd9d0" translate="yes" xml:space="preserve">
          <source>Turns the digest function on or off. The default is on. When it is on, a call to one of the &lt;code&gt;read&lt;/code&gt; methods results in an update on the message digest. But when it is off, the message digest is not updated.</source>
          <target state="translated">ダイジェスト機能をオンまたはオフにします。デフォルトはオンです。オンの場合、 &lt;code&gt;read&lt;/code&gt; メソッドの1つを呼び出すと、メッセージダイジェストが更新されます。ただし、オフの場合、メッセージダイジェストは更新されません。</target>
        </trans-unit>
        <trans-unit id="82f2258b914e31cbffa36e7b526ce6ed41c142e1" translate="yes" xml:space="preserve">
          <source>Turns the digest function on or off. The default is on. When it is on, a call to one of the &lt;code&gt;write&lt;/code&gt; methods results in an update on the message digest. But when it is off, the message digest is not updated.</source>
          <target state="translated">ダイジェスト機能をオンまたはオフにします。デフォルトはオンです。オンの場合、 &lt;code&gt;write&lt;/code&gt; メソッドの1つを呼び出すと、メッセージダイジェストが更新されます。ただし、オフの場合、メッセージダイジェストは更新されません。</target>
        </trans-unit>
        <trans-unit id="00229f015752c0881b83f9e6f7a6ac3a52a1d247" translate="yes" xml:space="preserve">
          <source>Turns the specified note off.</source>
          <target state="translated">指定したノートをオフにします。</target>
        </trans-unit>
        <trans-unit id="7a4d6c3ffeea013bc7c9e2428fbd36232e6dd525" translate="yes" xml:space="preserve">
          <source>Turns the specified note off. The key-up velocity, if not ignored, can be used to affect how quickly the note decays. In any case, the note might not die away instantaneously; its decay rate is determined by the internals of the &lt;code&gt;Instrument&lt;/code&gt;. If the Hold Pedal (a controller; see &lt;a href=&quot;#controlChange(int,int)&quot;&gt;&lt;code&gt;controlChange&lt;/code&gt;&lt;/a&gt;) is down, the effect of this method is deferred until the pedal is released.</source>
          <target state="translated">指定したノートをオフにします。キーアップベロシティは、無視しない場合は、ノートの減衰速度に影響を与えるために使用できます。いずれにせよ、音符はすぐには消えないかもしれません。その減衰率は、 &lt;code&gt;Instrument&lt;/code&gt; 内部によって決定されます。ホールドペダル（コントローラー&lt;a href=&quot;#controlChange(int,int)&quot;&gt; &lt;code&gt;controlChange&lt;/code&gt; &lt;/a&gt;参照）がダウンしている場合、このメソッドの効果はペダルが離されるまで延期されます。</target>
        </trans-unit>
        <trans-unit id="be797f59792eace5578bb5bd17367f2fcd155546" translate="yes" xml:space="preserve">
          <source>Turns the specified note off. The key-up velocity, if not ignored, can be used to affect how quickly the note decays. In any case, the note might not die away instantaneously; its decay rate is determined by the internals of the &lt;code&gt;Instrument&lt;/code&gt;. If the Hold Pedal (a controller; see &lt;a href=&quot;midichannel#controlChange-int-int-&quot;&gt;&lt;code&gt;controlChange&lt;/code&gt;&lt;/a&gt;) is down, the effect of this method is deferred until the pedal is released.</source>
          <target state="translated">指定されたノートをオフにします。キーアップ速度は、無視されない場合、ノートの減衰速度に影響を与えるために使用できます。いずれにせよ、メモはすぐに消えないかもしれません。その減衰率は、 &lt;code&gt;Instrument&lt;/code&gt; 内部構造によって決まります。ホールドペダル（コントローラー&lt;a href=&quot;midichannel#controlChange-int-int-&quot;&gt; &lt;code&gt;controlChange&lt;/code&gt; &lt;/a&gt;参照）が押されている場合、このメソッドの効果はペダルが離されるまで延期されます。</target>
        </trans-unit>
        <trans-unit id="486ab448f3499d0baf649cc5bac397b3cd137ed4" translate="yes" xml:space="preserve">
          <source>Turns this &lt;code&gt;UndoManager&lt;/code&gt; into a normal &lt;code&gt;CompoundEdit&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;UndoManager&lt;/code&gt; を通常の &lt;code&gt;CompoundEdit&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="19b88d9d774ecd7cadc8654a377f96d9750fd11f" translate="yes" xml:space="preserve">
          <source>Turns this &lt;code&gt;UndoManager&lt;/code&gt; into a normal &lt;code&gt;CompoundEdit&lt;/code&gt;. This removes all edits that have been undone.</source>
          <target state="translated">この &lt;code&gt;UndoManager&lt;/code&gt; を通常の &lt;code&gt;CompoundEdit&lt;/code&gt; に変換します。これにより、元に戻されたすべての編集が削除されます。</target>
        </trans-unit>
        <trans-unit id="3cbf4957811d182a140c60394c9d804e7be71f2f" translate="yes" xml:space="preserve">
          <source>Twice the old capacity, plus &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">二回古い能力、プラス &lt;code&gt;2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3963b2bdc52d8c572907a77d154125a67fb6430c" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;ArrayType&lt;/code&gt; instances are equal if and only if they describe array instances which have the same dimension, elements' open type and primitive array flag.</source>
          <target state="translated">2つの &lt;code&gt;ArrayType&lt;/code&gt; インスタンスが等しいのは、それらが同じ次元、要素のオープンタイプ、およびプリミティブ配列フラグを持つ配列インスタンスを記述している場合だけです。</target>
        </trans-unit>
        <trans-unit id="7393bf9d05310d00acc183e1ca7d39763b45e0ae" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;CompositeType&lt;/code&gt; instances are equal if and only if all of the following statements are true:</source>
          <target state="translated">2つの &lt;code&gt;CompositeType&lt;/code&gt; インスタンスが等しいのは、次のステートメントがすべて当てはまる場合だけです。</target>
        </trans-unit>
        <trans-unit id="bb0675f8ba3f77cac2364197ffbb564d511eb1b1" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Exports&lt;/code&gt; objects are compared by comparing the package names lexicographically. Where the packages names are equal then the sets of modifiers are compared in the same way that module modifiers are compared (see &lt;a href=&quot;moduledescriptor#compareTo(java.lang.module.ModuleDescriptor)&quot;&gt;&lt;code&gt;ModuleDescriptor.compareTo&lt;/code&gt;&lt;/a&gt;). Where the package names are equal and the set of modifiers are equal then the set of target modules are compared. This is done by sorting the names of the target modules in ascending order, and according to their natural ordering, and then comparing the corresponding elements lexicographically. Where the sets differ in size, and the larger set contains all elements of the smaller set, then the larger set is considered to succeed the smaller set.</source>
          <target state="translated">パッケージ名を辞書式に比較することにより、2つの &lt;code&gt;Exports&lt;/code&gt; オブジェクトが比較されます。パッケージ名が等しい場合、修飾子のセットは、モジュール修飾子が比較されるのと同じ方法で比較されます（&lt;a href=&quot;moduledescriptor#compareTo(java.lang.module.ModuleDescriptor)&quot;&gt; &lt;code&gt;ModuleDescriptor.compareTo&lt;/code&gt; を&lt;/a&gt;参照）。パッケージ名が等しく、修飾子のセットが等しい場合、ターゲットモジュールのセットが比較されます。これは、ターゲットモジュールの名前を昇順で、自然順序に従って並べ替え、対応する要素を辞書式に比較することによって行われます。セットのサイズが異なり、大きいセットに小さいセットのすべての要素が含まれている場合、大きいセットは小さいセットの後継と見なされます。</target>
        </trans-unit>
        <trans-unit id="654898b748c63eb5f7e8749d8eb27a61fb220d13" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;ModuleDescriptor&lt;/code&gt; objects are compared by comparing their module names lexicographically. Where the module names are equal then the module versions are compared. When comparing the module versions then a module descriptor with a version is considered to succeed a module descriptor that does not have a version. If both versions are &lt;a href=&quot;moduledescriptor.version#parse(java.lang.String)&quot;&gt;unparseable&lt;/a&gt; then the &lt;a href=&quot;#rawVersion()&quot;&gt;raw version strings&lt;/a&gt; are compared lexicographically. Where the module names are equal and the versions are equal (or not present in both), then the set of modifiers are compared. Sets of modifiers are compared by comparing a &lt;em&gt;binary value&lt;/em&gt; computed for each set. If a modifier is present in the set then the bit at the position of its ordinal is &lt;code&gt;1&lt;/code&gt; in the binary value, otherwise &lt;code&gt;0&lt;/code&gt;. If the two set of modifiers are also equal then the other components of the module descriptors are compared in a manner that is consistent with &lt;code&gt;equals&lt;/code&gt;.</source>
          <target state="translated">2つの &lt;code&gt;ModuleDescriptor&lt;/code&gt; オブジェクトは、それらのモジュール名を辞書式に比較することによって比較されます。モジュール名が等しい場合、モジュールのバージョンが比較されます。モジュールのバージョンを比較する場合、バージョンのあるモジュール記述子は、バージョンのないモジュール記述子の後継と見なされます。両方のバージョンが&lt;a href=&quot;moduledescriptor.version#parse(java.lang.String)&quot;&gt;解析できない&lt;/a&gt;場合、&lt;a href=&quot;#rawVersion()&quot;&gt;生のバージョン文字列&lt;/a&gt;が辞書式に比較されます。モジュール名が等しく、バージョンが等しい（または両方に存在しない）場合、修飾子のセットが比較されます。修飾子のセットは、各セット&lt;em&gt;に対して&lt;/em&gt;計算された&lt;em&gt;バイナリ値を&lt;/em&gt;比較することによって比較されます。セットに修飾子が存在する場合、その序数の位置のビットは &lt;code&gt;1&lt;/code&gt; です。バイナリ値、それ以外の場合は &lt;code&gt;0&lt;/code&gt; 。修飾子の2つのセットも等しい場合、モジュール記述子の他のコンポーネントは、 &lt;code&gt;equals&lt;/code&gt; と一致する方法で比較されます。</target>
        </trans-unit>
        <trans-unit id="32bb3e7672898a9625c84b090a0e505f91ae5f55" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Opens&lt;/code&gt; objects are compared by comparing the package names lexicographically. Where the packages names are equal then the sets of modifiers are compared in the same way that module modifiers are compared (see &lt;a href=&quot;moduledescriptor#compareTo(java.lang.module.ModuleDescriptor)&quot;&gt;&lt;code&gt;ModuleDescriptor.compareTo&lt;/code&gt;&lt;/a&gt;). Where the package names are equal and the set of modifiers are equal then the set of target modules are compared. This is done by sorting the names of the target modules in ascending order, and according to their natural ordering, and then comparing the corresponding elements lexicographically. Where the sets differ in size, and the larger set contains all elements of the smaller set, then the larger set is considered to succeed the smaller set.</source>
          <target state="translated">パッケージ名を辞書式に比較することにより、2つの &lt;code&gt;Opens&lt;/code&gt; オブジェクトが比較されます。パッケージ名が等しい場合、修飾子のセットは、モジュール修飾子が比較されるのと同じ方法で比較されます（&lt;a href=&quot;moduledescriptor#compareTo(java.lang.module.ModuleDescriptor)&quot;&gt; &lt;code&gt;ModuleDescriptor.compareTo&lt;/code&gt; を&lt;/a&gt;参照）。パッケージ名が等しく、修飾子のセットが等しい場合、ターゲットモジュールのセットが比較されます。これは、ターゲットモジュールの名前を昇順で、自然順序に従って並べ替え、対応する要素を辞書式に比較することによって行われます。セットのサイズが異なり、大きいセットに小さいセットのすべての要素が含まれている場合、大きいセットは小さいセットの後継と見なされます。</target>
        </trans-unit>
        <trans-unit id="224c72cc410415550d5b578bf2e9da28a7137a85" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Provides&lt;/code&gt; objects are compared by comparing the fully qualified class name of the service type lexicographically. Where the class names are equal then the list of the provider class names are compared by comparing the corresponding elements of both lists lexicographically and in sequence. Where the lists differ in size, &lt;code&gt;N&lt;/code&gt; is the size of the shorter list, and the first &lt;code&gt;N&lt;/code&gt; corresponding elements are equal, then the longer list is considered to succeed the shorter list.</source>
          <target state="translated">2つの &lt;code&gt;Provides&lt;/code&gt; オブジェクトは、サービスタイプの完全修飾クラス名を辞書式に比較することによって比較されます。クラス名が等しい場合、プロバイダークラス名のリストは、両方のリストの対応する要素を辞書式順序で比較することによって比較されます。リストのサイズが異なり、 &lt;code&gt;N&lt;/code&gt; は短いリストのサイズであり、最初の &lt;code&gt;N&lt;/code&gt; 個の対応する要素が等しい場合、長いリストは短いリストの後継と見なされます。</target>
        </trans-unit>
        <trans-unit id="7f2b3a6a46eddcf3971934ae9d375562862b1a7d" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;QName&lt;/code&gt;s are considered equal if and only if both the Namespace URI and local part are equal. This method uses &lt;code&gt;String.equals()&lt;/code&gt; to check equality of the Namespace URI and local part. The prefix is &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; used to determine equality.</source>
          <target state="translated">2つの &lt;code&gt;QName&lt;/code&gt; は、名前空間URIとローカル部分の両方が等しい場合にのみ等しいと見なされます。このメソッドは、 &lt;code&gt;String.equals()&lt;/code&gt; を使用して、名前空間URIとローカル部分の同等性をチェックします。接頭辞は、同等性を判断するために使用され&lt;strong&gt;&lt;em&gt;ません&lt;/em&gt;&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="b09b287b749c6a644571f947e807f4e89ed3c5e0" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Requires&lt;/code&gt; objects are compared by comparing their module names lexicographically. Where the module names are equal then the sets of modifiers are compared in the same way that module modifiers are compared (see &lt;a href=&quot;moduledescriptor#compareTo(java.lang.module.ModuleDescriptor)&quot;&gt;&lt;code&gt;ModuleDescriptor.compareTo&lt;/code&gt;&lt;/a&gt;). Where the module names are equal and the set of modifiers are equal then the version of the modules recorded at compile-time are compared. When comparing the versions recorded at compile-time then a dependence that has a recorded version is considered to succeed a dependence that does not have a recorded version. If both recorded versions are &lt;a href=&quot;moduledescriptor.version#parse(java.lang.String)&quot;&gt;unparseable&lt;/a&gt; then the &lt;a href=&quot;#rawCompiledVersion()&quot;&gt;raw version strings&lt;/a&gt; are compared lexicographically.</source>
          <target state="translated">2つの &lt;code&gt;Requires&lt;/code&gt; オブジェクトは、モジュール名を辞書式に比較することによって比較されます。モジュール名が等しい場合、修飾子のセットは、モジュール修飾子が比較されるのと同じ方法で比較されます（&lt;a href=&quot;moduledescriptor#compareTo(java.lang.module.ModuleDescriptor)&quot;&gt; &lt;code&gt;ModuleDescriptor.compareTo&lt;/code&gt; を&lt;/a&gt;参照）。モジュール名が等しく、修飾子のセットが等しい場合、コンパイル時に記録されたモジュールのバージョンが比較されます。コンパイル時に記録されたバージョンを比較すると、バージョンが記録されている依存関係は、バージョンが記録されていない依存関係の後継と見なされます。記録された両方のバージョンが&lt;a href=&quot;moduledescriptor.version#parse(java.lang.String)&quot;&gt;解析できない&lt;/a&gt;場合、&lt;a href=&quot;#rawCompiledVersion()&quot;&gt;生のバージョンの文字列&lt;/a&gt;が辞書式に比較されます。</target>
        </trans-unit>
        <trans-unit id="22447ad5295e8689224953c67a3065e9e41c6088" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;SimpleType&lt;/code&gt; instances are equal if and only if their &lt;a href=&quot;opentype#getClassName()&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; methods return the same value.</source>
          <target state="translated">2つの &lt;code&gt;SimpleType&lt;/code&gt; インスタンスは、&lt;a href=&quot;opentype#getClassName()&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt;メソッドが同じ値を返す場合にのみ等しくなります。</target>
        </trans-unit>
        <trans-unit id="e95dadfba4aba0b5ed81d95cc373094049834066" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;SimpleType&lt;/code&gt; instances are equal if and only if their &lt;a href=&quot;opentype#getClassName--&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; methods return the same value.</source>
          <target state="translated">2つの &lt;code&gt;SimpleType&lt;/code&gt; インスタンスが等しいのは、それらの&lt;a href=&quot;opentype#getClassName--&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt;メソッドが同じ値を返す場合だけです。</target>
        </trans-unit>
        <trans-unit id="152ff79dd8aa2eb37a9a1a5789d2a777e8d5c2d8" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;SslRMIServerSocketFactory&lt;/code&gt; objects are equal if they have been constructed with the same SSL context and SSL socket configuration parameters.</source>
          <target state="translated">2つの &lt;code&gt;SslRMIServerSocketFactory&lt;/code&gt; オブジェクトは、同じSSLコンテキストとSSLソケット構成パラメーターで構築されている場合は同じです。</target>
        </trans-unit>
        <trans-unit id="4355266a57a804e19a61b7283d511c8c0f567e5d" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;TabularType&lt;/code&gt; instances are equal if and only if all of the following statements are true:</source>
          <target state="translated">2つの &lt;code&gt;TabularType&lt;/code&gt; インスタンスが等しいのは、次のステートメントがすべて当てはまる場合だけです。</target>
        </trans-unit>
        <trans-unit id="e97f2fc096c4b275ef1444457d74320306daca91" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Version&lt;/code&gt;s are equal if and only if they represent the same version string disregarding the optional build information.</source>
          <target state="translated">2つの &lt;code&gt;Version&lt;/code&gt; は、オプションのビルド情報を無視して同じバージョン文字列を表す場合にのみ等しくなります。</target>
        </trans-unit>
        <trans-unit id="8a903b3666cfaf89534a4ddfb99c7b163b79e729" translate="yes" xml:space="preserve">
          <source>Two &lt;code&gt;Version&lt;/code&gt;s are equal if and only if they represent the same version string.</source>
          <target state="translated">2つの &lt;code&gt;Version&lt;/code&gt; は、それらが同じバージョン文字列を表す場合にのみ等しくなります。</target>
        </trans-unit>
        <trans-unit id="73a77fb5a46cef2494e3f215053010fdc6720025" translate="yes" xml:space="preserve">
          <source>Two Java security properties control the TTL values used for positive and negative host name resolution caching:</source>
          <target state="translated">2つのJavaセキュリティ・プロパティは、正負のホスト名解決キャッシングに使用されるTTL値を制御します。</target>
        </trans-unit>
        <trans-unit id="c8f23035319ffb3a0b27009e24b7ff32b59d90f0" translate="yes" xml:space="preserve">
          <source>Two JobAttributes are equal if and only if each of their attributes are equal. Attributes of enumeration type are equal if and only if the fields refer to the same unique enumeration object. A set of page ranges is equal if and only if the sets are of equal length, each range enumerates the same pages, and the ranges are in the same order.</source>
          <target state="translated">2つのJobAttributesは、それぞれの属性が等しい場合にのみ等しい。列挙型の属性は、フィールドが同じ一意の列挙オブジェクトを参照している場合にのみ等しい。ページ範囲のセットは、セットの長さが等しく、各範囲が同じページを列挙し、範囲が同じ順序である場合にのみ等しくなります。</target>
        </trans-unit>
        <trans-unit id="75ab59f5fb30967e984ffaee0bbe9b320f734275" translate="yes" xml:space="preserve">
          <source>Two LDAP names are equal if each RDN in one is equal to the corresponding RDN in the other. This implies both have the same number of RDNs, and each RDN's equals() test against the corresponding RDN in the other name returns true. See &lt;a href=&quot;rdn#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Rdn.equals(Object obj)&lt;/code&gt;&lt;/a&gt; for a definition of RDN equality.</source>
          <target state="translated">一方の各RDNがもう一方の対応するRDNと等しい場合、2つのLDAP名は等しくなります。これは、両方が同じ数のRDNを持ち、他の名前の対応するRDNに対する各RDNのequals（）テストがtrueを返すことを意味します。RDNの同等性の定義については、&lt;a href=&quot;rdn#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Rdn.equals(Object obj)&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="82f73f1dfe8bdd02baba316fe916c320a724de55" translate="yes" xml:space="preserve">
          <source>Two LDAP names are equal if each RDN in one is equal to the corresponding RDN in the other. This implies both have the same number of RDNs, and each RDN's equals() test against the corresponding RDN in the other name returns true. See &lt;a href=&quot;rdn#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Rdn.equals(Object obj)&lt;/code&gt;&lt;/a&gt; for a definition of RDN equality.</source>
          <target state="translated">一方の各RDNが他方の対応するRDNと等しい場合、2つのLDAP名は同じです。これは、両方のRDNの数が同じであり、他の名前の対応するRDNに対する各RDNのequals（）テストがtrueを返すことを意味します。RDNの等価性の定義については、&lt;a href=&quot;rdn#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Rdn.equals(Object obj)&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c47ca85a453f45e608b5cb2128b87a6203d4ad39" translate="yes" xml:space="preserve">
          <source>Two PageAttributes are equal if and only if each of their attributes are equal. Attributes of enumeration type are equal if and only if the fields refer to the same unique enumeration object. This means that an aliased media is equal to its underlying unique media. Printer resolutions are equal if and only if the feed resolution, cross feed resolution, and units are equal.</source>
          <target state="translated">2 つの PageAttributes は、それぞれの属性が等しい場合にのみ等しい。列挙型の属性は、フィールドが同じ一意の列挙オブジェクトを参照している場合にのみ、等しくなります。これは、エイリアスメディアは、その根底にある一意のメディアと等しいことを意味します。プリンタの解像度は,フィード解像度,クロスフィード解像度,単位が等しい場合にのみ等しい。</target>
        </trans-unit>
        <trans-unit id="32e588338ba77efabef38aa557b887e65faea8ac" translate="yes" xml:space="preserve">
          <source>Two URIs with different schemes are ordered according the ordering of their schemes, without regard to case.</source>
          <target state="translated">スキームの異なる2つのURIは、大文字小文字を問わず、そのスキームの順序に従って順序付けされます。</target>
        </trans-unit>
        <trans-unit id="3da8e84c94c7ef795c80dec53e06bb0d8e4519fa" translate="yes" xml:space="preserve">
          <source>Two URL objects are equal if they have the same protocol, reference equivalent hosts, have the same port number on the host, and the same file and fragment of the file.</source>
          <target state="translated">2つのURLオブジェクトは、同じプロトコルを持ち、同等のホストを参照し、ホスト上のポート番号が同じで、ファイルとフラグメントが同じであれば等しくなります。</target>
        </trans-unit>
        <trans-unit id="b3f1dafe4e26516f76225ee43807f52c8780fc4b" translate="yes" xml:space="preserve">
          <source>Two array references are considered deeply equal if both are &lt;code&gt;null&lt;/code&gt;, or if they refer to arrays that contain the same number of elements and all corresponding pairs of elements in the two arrays are deeply equal.</source>
          <target state="translated">2つの配列参照は、両方が &lt;code&gt;null&lt;/code&gt; である場合、または同じ数の要素を含む配列を参照し、2つの配列内の対応するすべての要素のペアが完全に等しい場合、深く等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="8eceedd213c2f4dee09c46e2324e84e048eafbd2" translate="yes" xml:space="preserve">
          <source>Two arrays are considered equal if both arrays contain the same number of elements, and all corresponding pairs of elements in the two arrays are equal. In other words, the two arrays are equal if they contain the same elements in the same order. Also, two array references are considered equal if both are &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">両方の配列に同じ数の要素が含まれ、2つの配列の対応する要素のペアがすべて等しい場合、2つの配列は等しいと見なされます。つまり、2つの配列に同じ要素が同じ順序で含まれている場合、2つの配列は等しくなります。また、両方が &lt;code&gt;null&lt;/code&gt; の場合、2つの配列参照は等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="5310c9c93290800bae86c37fd35bb1cb5846b3c4" translate="yes" xml:space="preserve">
          <source>Two arrays are considered equal if the number of elements covered by each range is the same, and all corresponding pairs of elements over the specified ranges in the two arrays are equal. In other words, two arrays are equal if they contain, over the specified ranges, the same elements in the same order.</source>
          <target state="translated">2 つの配列は,それぞれの範囲でカバーされる要素の数が同じであり,2 つの配列の指定された範囲に対応するすべての要素のペアが等しい場合には,等しいとみなされます.言い換えれば,2つの配列は,指定された範囲にわたって同じ要素を同じ順序で含む場合には等しいと考えられます.</target>
        </trans-unit>
        <trans-unit id="13be6c281a56812732b8b5c4a38df3d02d2a550d" translate="yes" xml:space="preserve">
          <source>Two buttons, each with a baseline-resize behavior of &lt;code&gt;CENTER_OFFSET&lt;/code&gt; and an anchor of &lt;code&gt;BASELINE&lt;/code&gt;.</source>
          <target state="translated">2つのボタンのベースラインサイズ変更動作と各 &lt;code&gt;CENTER_OFFSET&lt;/code&gt; とのアンカー &lt;code&gt;BASELINE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fed1cc51a4e0b56ad61507ef1b9b92b11aa8b0c2" translate="yes" xml:space="preserve">
          <source>Two byte buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;byte&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/byte#compare(byte,byte)&quot;&gt;&lt;code&gt;Byte.compare(byte,byte)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2バイトのバッファは、対応するバッファ内の各シーケンスの開始位置に関係なく、残りの要素のシーケンスを辞書式に比較することによって比較されます。 &lt;code&gt;byte&lt;/code&gt; 要素のペアは&lt;a href=&quot;../lang/byte#compare(byte,byte)&quot;&gt; &lt;code&gt;Byte.compare(byte,byte)&lt;/code&gt; &lt;/a&gt;を呼び出すかのように比較されます。</target>
        </trans-unit>
        <trans-unit id="ffdee623c9463604338d995b03212cf5f1a12f2b" translate="yes" xml:space="preserve">
          <source>Two byte buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;byte&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/byte#compare-byte-byte-&quot;&gt;&lt;code&gt;Byte.compare(byte,byte)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2バイトのバッファーは、対応するバッファー内の各シーケンスの開始位置に関係なく、残りの要素のシーケンスを辞書順に比較することによって比較されます。 &lt;code&gt;byte&lt;/code&gt; 要素のペアは&lt;a href=&quot;../lang/byte#compare-byte-byte-&quot;&gt; &lt;code&gt;Byte.compare(byte,byte)&lt;/code&gt; &lt;/a&gt;を呼び出した場合と同じように比較されます。</target>
        </trans-unit>
        <trans-unit id="828fd46b4b2eb2d1a9a761d4546a648fd204b699" translate="yes" xml:space="preserve">
          <source>Two byte buffers are equal if, and only if,</source>
          <target state="translated">2つのバイトバッファが等しくなるのは、以下の場合のみです。</target>
        </trans-unit>
        <trans-unit id="320534074932bd09c255edba6d0926f12d5b5ee4" translate="yes" xml:space="preserve">
          <source>Two channels that form a unidirectional pipe</source>
          <target state="translated">一方向パイプを形成する2つのチャンネル</target>
        </trans-unit>
        <trans-unit id="d4d7dd311252218fe9547b1ca599a9f0e31849d3" translate="yes" xml:space="preserve">
          <source>Two char buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;char&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/character#compare(char,char)&quot;&gt;&lt;code&gt;Character.compare(char,char)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つのcharバッファーは、対応するバッファー内の各シーケンスの開始位置に関係なく、残りの要素のシーケンスを辞書式順序で比較することによって比較されます。 &lt;code&gt;char&lt;/code&gt; 要素のペアは&lt;a href=&quot;../lang/character#compare(char,char)&quot;&gt; &lt;code&gt;Character.compare(char,char)&lt;/code&gt; &lt;/a&gt;を呼び出すかのように比較されます。</target>
        </trans-unit>
        <trans-unit id="15f33adc6e8f5895ac7434f58d64ef4dfb852ea3" translate="yes" xml:space="preserve">
          <source>Two char buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;char&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/character#compare-char-char-&quot;&gt;&lt;code&gt;Character.compare(char,char)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つのcharバッファーは、対応するバッファー内の各シーケンスの開始位置に関係なく、残りの要素のシーケンスを辞書順に比較することによって比較されます。 &lt;code&gt;char&lt;/code&gt; 要素のペアは&lt;a href=&quot;../lang/character#compare-char-char-&quot;&gt; &lt;code&gt;Character.compare(char,char)&lt;/code&gt; &lt;/a&gt;を呼び出した場合と同じように比較されます。</target>
        </trans-unit>
        <trans-unit id="bb9c1fccb8ffead1f642a071e83ff69e521384af" translate="yes" xml:space="preserve">
          <source>Two char buffers are equal if, and only if,</source>
          <target state="translated">2つの文字バッファが等しくなるのは、もしもの場合であり、もしもの場合のみです。</target>
        </trans-unit>
        <trans-unit id="1255ac3931ad4204469ef90364f16617e4241739" translate="yes" xml:space="preserve">
          <source>Two characters &lt;code&gt;c1&lt;/code&gt; and &lt;code&gt;c2&lt;/code&gt; are considered the same ignoring case if at least one of the following is true:</source>
          <target state="translated">2つの文字 &lt;code&gt;c1&lt;/code&gt; と &lt;code&gt;c2&lt;/code&gt; は、次の少なくとも1つが当てはまる場合、大文字と小文字を区別せずに同じと見なされます。</target>
        </trans-unit>
        <trans-unit id="70eac33f370d438cd2d849d987bb139e150c76ab" translate="yes" xml:space="preserve">
          <source>Two charsets are equal if, and only if, they have the same canonical names. A charset is never equal to any other type of object.</source>
          <target state="translated">2 つの文字セットは、同じ正規名を持つ場合にのみ、等しくなります。文字セットは、他のどのタイプのオブジェクトとも等しくなることはありません。</target>
        </trans-unit>
        <trans-unit id="60d2d47003b86bb7c7c7cbc5311165c518197ed4" translate="yes" xml:space="preserve">
          <source>Two constant values are provided, &lt;a href=&quot;#POSTURE_REGULAR&quot;&gt;&lt;code&gt;POSTURE_REGULAR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#POSTURE_OBLIQUE&quot;&gt;&lt;code&gt;POSTURE_OBLIQUE&lt;/code&gt;&lt;/a&gt;. The value &lt;code&gt;POSTURE_OBLIQUE&lt;/code&gt; corresponds to the style value &lt;code&gt;Font.ITALIC&lt;/code&gt; as passed to the &lt;code&gt;Font&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;a href=&quot;#POSTURE_REGULAR&quot;&gt; &lt;code&gt;POSTURE_REGULAR&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#POSTURE_OBLIQUE&quot;&gt; &lt;code&gt;POSTURE_OBLIQUE&lt;/code&gt; の&lt;/a&gt;2つの定数値が提供されます。値 &lt;code&gt;POSTURE_OBLIQUE&lt;/code&gt; のスタイル値に対応する &lt;code&gt;Font.ITALIC&lt;/code&gt; に渡される &lt;code&gt;Font&lt;/code&gt; コンストラクタ。</target>
        </trans-unit>
        <trans-unit id="324c627b78a621f7d76783cd3b0d6b5098b492ff" translate="yes" xml:space="preserve">
          <source>Two constant values are provided, see &lt;a href=&quot;#SUPERSCRIPT_SUPER&quot;&gt;&lt;code&gt;SUPERSCRIPT_SUPER&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#SUPERSCRIPT_SUB&quot;&gt;&lt;code&gt;SUPERSCRIPT_SUB&lt;/code&gt;&lt;/a&gt;. These have the values 1 and -1 respectively. Values of greater magnitude define greater levels of superscript or subscripting, for example, 2 corresponds to super-superscript, 3 to super-super-superscript, and similarly for negative values and subscript, up to a level of 7 (or -7). Values beyond this range are reserved; behavior is platform-dependent.</source>
          <target state="translated">2つの定数値が提供されています&lt;a href=&quot;#SUPERSCRIPT_SUPER&quot;&gt; &lt;code&gt;SUPERSCRIPT_SUPER&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#SUPERSCRIPT_SUB&quot;&gt; &lt;code&gt;SUPERSCRIPT_SUB&lt;/code&gt; を&lt;/a&gt;参照してください。これらの値はそれぞれ1と-1です。より大きな値は、より高いレベルの上付き文字または下付き文字を定義します。たとえば、2は上付き文字に対応し、3は上付き文字に対応し、負の値および下付き文字についても同様に、レベル7（または-7）までです。この範囲を超える値は予約されています。動作はプラットフォームに依存します。</target>
        </trans-unit>
        <trans-unit id="b658c2892dc5a68b396e9cc96727ddfa17470887" translate="yes" xml:space="preserve">
          <source>Two corresponding &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Class&lt;/code&gt;, enum, or annotation typed members whose values are &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are considered equal if &lt;code&gt;x.equals(y)&lt;/code&gt;. (Note that this definition is recursive for annotation typed members.)</source>
          <target state="translated">&lt;code&gt;x.equals(y)&lt;/code&gt; の場合、値が &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; である2つの対応する &lt;code&gt;String&lt;/code&gt; 、 &lt;code&gt;Class&lt;/code&gt; 、enum、または注釈型のメンバーは等しいと見なされます。（この定義は注釈型付きメンバーに対して再帰的であることに注意してください。）</target>
        </trans-unit>
        <trans-unit id="7f9446391cf829fc996ed9387bf8ae2aaf6c1766" translate="yes" xml:space="preserve">
          <source>Two corresponding &lt;code&gt;double&lt;/code&gt; members whose values are &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are considered equal if &lt;code&gt;Double.valueOf(x).equals(Double.valueOf(y))&lt;/code&gt;. (Unlike the &lt;code&gt;==&lt;/code&gt; operator, NaN is considered equal to itself, and &lt;code&gt;0.0&lt;/code&gt; unequal to &lt;code&gt;-0.0&lt;/code&gt;.)</source>
          <target state="translated">&lt;code&gt;Double.valueOf(x).equals(Double.valueOf(y))&lt;/code&gt; の場合、値が &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; である2つの対応する &lt;code&gt;double&lt;/code&gt; メンバーは等しいと見なされます。（ &lt;code&gt;==&lt;/code&gt; 演算子とは異なり、NaNはそれ自体と等しく、 &lt;code&gt;0.0&lt;/code&gt; は &lt;code&gt;-0.0&lt;/code&gt; と等しくないと見なされます。）</target>
        </trans-unit>
        <trans-unit id="7b4157aa85e4495185b272adb91fa68959fca9a7" translate="yes" xml:space="preserve">
          <source>Two corresponding &lt;code&gt;float&lt;/code&gt; members whose values are &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are considered equal if &lt;code&gt;Float.valueOf(x).equals(Float.valueOf(y))&lt;/code&gt;. (Unlike the &lt;code&gt;==&lt;/code&gt; operator, NaN is considered equal to itself, and &lt;code&gt;0.0f&lt;/code&gt; unequal to &lt;code&gt;-0.0f&lt;/code&gt;.)</source>
          <target state="translated">&lt;code&gt;Float.valueOf(x).equals(Float.valueOf(y))&lt;/code&gt; の場合、値が &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; である2つの対応する &lt;code&gt;float&lt;/code&gt; メンバーは等しいと見なされます。（ &lt;code&gt;==&lt;/code&gt; 演算子とは異なり、NaNはそれ自体と等しく、 &lt;code&gt;0.0f&lt;/code&gt; は-と等しくないと &lt;code&gt;-0.0f&lt;/code&gt; ます。）</target>
        </trans-unit>
        <trans-unit id="5ed17e7ef60681fe476ac04108b18dcd476a9863" translate="yes" xml:space="preserve">
          <source>Two corresponding array typed members &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are considered equal if &lt;code&gt;Arrays.equals(x, y)&lt;/code&gt;, for the appropriate overloading of &lt;a href=&quot;../../util/arrays#equals(long%5B%5D,long%5B%5D)&quot;&gt;&lt;code&gt;Arrays.equals(long[], long[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../util/arrays#equals(long%5B%5D,long%5B%5D)&quot;&gt; &lt;code&gt;Arrays.equals(long[], long[])&lt;/code&gt; &lt;/a&gt;の適切なオーバーロードのために &lt;code&gt;Arrays.equals(x, y)&lt;/code&gt; 場合、対応する2つの配列型付きメンバー &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; は等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="02ed45a3d9ac87a4d6fa229ca8c0b8493e038c63" translate="yes" xml:space="preserve">
          <source>Two corresponding array typed members &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are considered equal if &lt;code&gt;Arrays.equals(x, y)&lt;/code&gt;, for the appropriate overloading of &lt;a href=&quot;../../util/arrays#equals-long:A-long:A-&quot;&gt;&lt;code&gt;Arrays.equals(long[], long[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../util/arrays#equals-long:A-long:A-&quot;&gt; &lt;code&gt;Arrays.equals(long[], long[])&lt;/code&gt; &lt;/a&gt;の適切なオーバーロードのために &lt;code&gt;Arrays.equals(x, y)&lt;/code&gt; 場合、対応する2つの配列型付きメンバー &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; は等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="7f37fe1c0cd073bed6a3d8167750817a9a3b3e11" translate="yes" xml:space="preserve">
          <source>Two corresponding primitive typed members whose values are &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are considered equal if &lt;code&gt;x == y&lt;/code&gt;, unless their type is &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">値が &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; である2つの対応するプリミティブ型付きメンバーは、型が &lt;code&gt;float&lt;/code&gt; または &lt;code&gt;double&lt;/code&gt; でない限り、 &lt;code&gt;x == y&lt;/code&gt; 場合に等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="78efe36ca860b207cc926e61aa19241248835f18" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/chronofield#DAY_OF_MONTH&quot;&gt;&lt;code&gt;day-of-month&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure two digits.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#DAY_OF_MONTH&quot;&gt; &lt;code&gt;day-of-month&lt;/code&gt; &lt;/a&gt; 2桁。これは、2桁になるようにゼロが事前に埋め込まれています。</target>
        </trans-unit>
        <trans-unit id="f6f818a4014fb3ec08d68c4244c331a7b03adbb4" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/chronofield#HOUR_OF_DAY&quot;&gt;&lt;code&gt;hour-of-day&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure two digits.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#HOUR_OF_DAY&quot;&gt; &lt;code&gt;hour-of-day&lt;/code&gt; &lt;/a&gt; 2桁。これは、2桁になるようにゼロが事前に埋め込まれています。</target>
        </trans-unit>
        <trans-unit id="031dd940536a454024b57a3eb7f0ea3967700728" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/chronofield#MINUTE_OF_HOUR&quot;&gt;&lt;code&gt;minute-of-hour&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure two digits.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#MINUTE_OF_HOUR&quot;&gt; &lt;code&gt;minute-of-hour&lt;/code&gt; &lt;/a&gt;表す2桁の数字。これは、2桁になるようにゼロが事前に埋め込まれています。</target>
        </trans-unit>
        <trans-unit id="260c79d2746b062c0631f4c19ac19986dea55e22" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;month-of-year&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure two digits.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;month-of-year&lt;/code&gt; &lt;/a&gt; 2桁。これは、2桁になるようにゼロが事前に埋め込まれています。</target>
        </trans-unit>
        <trans-unit id="d7c0583466a4505eb8649c3e513fa06e4de68123" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/chronofield#SECOND_OF_MINUTE&quot;&gt;&lt;code&gt;second-of-minute&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure two digits.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#SECOND_OF_MINUTE&quot;&gt; &lt;code&gt;second-of-minute&lt;/code&gt; &lt;/a&gt; 2桁。これは、2桁になるようにゼロが事前に埋め込まれています。</target>
        </trans-unit>
        <trans-unit id="0b3c6bcc0384e99e1c250290b576b84394198430" translate="yes" xml:space="preserve">
          <source>Two digits for the &lt;a href=&quot;../temporal/isofields#WEEK_OF_WEEK_BASED_YEAR&quot;&gt;&lt;code&gt;week-of-week-based-year&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure three digits.</source>
          <target state="translated">&lt;a href=&quot;../temporal/isofields#WEEK_OF_WEEK_BASED_YEAR&quot;&gt; &lt;code&gt;week-of-week-based-year&lt;/code&gt; &lt;/a&gt; 2桁。これは、3桁を確保するためにゼロが事前に埋め込まれます。</target>
        </trans-unit>
        <trans-unit id="8d36c205c9328ff44d88115ffe8f31bf796f2391" translate="yes" xml:space="preserve">
          <source>Two double buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;double&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/double#compare(double,double)&quot;&gt;&lt;code&gt;Double.compare(double,double)&lt;/code&gt;&lt;/a&gt;, except that &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;0.0&lt;/code&gt; are considered to be equal. &lt;code&gt;Double.NaN&lt;/code&gt; is considered by this method to be equal to itself and greater than all other &lt;code&gt;double&lt;/code&gt; values (including &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">2つのダブルバッファは、対応するバッファ内の各シーケンスの開始位置に関係なく、辞書式順序で残りの要素のシーケンスを比較することによって比較されます。 &lt;code&gt;double&lt;/code&gt; 要素のペアは、 &lt;code&gt;-0.0&lt;/code&gt; と &lt;code&gt;0.0&lt;/code&gt; が等しいと見なされることを除いて&lt;a href=&quot;../lang/double#compare(double,double)&quot;&gt; &lt;code&gt;Double.compare(double,double)&lt;/code&gt; &lt;/a&gt;を呼び出す場合と同じように比較されます。 &lt;code&gt;Double.NaN&lt;/code&gt; は、このメソッドによって、それ自体と等しく、他のすべての &lt;code&gt;double&lt;/code&gt; 値（ &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt; を含む）よりも大きいと見なされます。</target>
        </trans-unit>
        <trans-unit id="81275db60144c060dec068367d7aa73a2913bf64" translate="yes" xml:space="preserve">
          <source>Two double buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;double&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/double#compare-double-double-&quot;&gt;&lt;code&gt;Double.compare(double,double)&lt;/code&gt;&lt;/a&gt;, except that &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;0.0&lt;/code&gt; are considered to be equal. &lt;code&gt;Double.NaN&lt;/code&gt; is considered by this method to be equal to itself and greater than all other &lt;code&gt;double&lt;/code&gt; values (including &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">2つのダブルバッファーは、対応するバッファー内の各シーケンスの開始位置に関係なく、残りの要素のシーケンスを辞書順に比較することによって比較されます。 &lt;code&gt;double&lt;/code&gt; 要素のペアは&lt;a href=&quot;../lang/double#compare-double-double-&quot;&gt; &lt;code&gt;Double.compare(double,double)&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じように比較されますが、 &lt;code&gt;-0.0&lt;/code&gt; と &lt;code&gt;0.0&lt;/code&gt; は等しいと見なされます。このメソッドでは、 &lt;code&gt;Double.NaN&lt;/code&gt; はそれ自体と等しく、他のすべての &lt;code&gt;double&lt;/code&gt; 値（ &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt; を含む）よりも大きいと見なされます。</target>
        </trans-unit>
        <trans-unit id="cc1fbd4f57c34fae7e58834caea565d67450878c" translate="yes" xml:space="preserve">
          <source>Two double buffers are equal if, and only if,</source>
          <target state="translated">2つのダブルバッファが等しくなるのは、もしもの場合であり、もしもの場合のみです。</target>
        </trans-unit>
        <trans-unit id="b2c6a7b0a40e89f2d5eef1f68a05b982f6ad559e" translate="yes" xml:space="preserve">
          <source>Two doubles &lt;code&gt;d1&lt;/code&gt; and &lt;code&gt;d2&lt;/code&gt; are considered equal if:</source>
          <target state="translated">2つのdouble &lt;code&gt;d1&lt;/code&gt; と &lt;code&gt;d2&lt;/code&gt; は、次の場合に等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="20d484f84f1ca3155bca060bfd11e9dd910f5cb5" translate="yes" xml:space="preserve">
          <source>Two factory methods, &lt;a href=&quot;#getControl(java.util.List)&quot;&gt;&lt;code&gt;getControl(List)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getNoFallbackControl(java.util.List)&quot;&gt;&lt;code&gt;getNoFallbackControl(List)&lt;/code&gt;&lt;/a&gt;, provide &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instances that implement common variations of the default bundle loading process.</source>
          <target state="translated">&lt;a href=&quot;#getControl(java.util.List)&quot;&gt; &lt;code&gt;getControl(List)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#getNoFallbackControl(java.util.List)&quot;&gt; &lt;code&gt;getNoFallbackControl(List)&lt;/code&gt; の&lt;/a&gt;2つのファクトリメソッドは、デフォルトのバンドルロードプロセスの一般的なバリエーションを実装する &lt;code&gt;ResourceBundle.Control&lt;/code&gt; インスタンスを提供します。</target>
        </trans-unit>
        <trans-unit id="790cbd91130d9bfeeeae9a1f57903936a9c8548f" translate="yes" xml:space="preserve">
          <source>Two factory methods, &lt;a href=&quot;resourcebundle.control#getControl-java.util.List-&quot;&gt;&lt;code&gt;getControl(List)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;resourcebundle.control#getNoFallbackControl-java.util.List-&quot;&gt;&lt;code&gt;getNoFallbackControl(List)&lt;/code&gt;&lt;/a&gt;, provide &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instances that implement common variations of the default bundle loading process.</source>
          <target state="translated">2つのファクトリメソッド&lt;a href=&quot;resourcebundle.control#getControl-java.util.List-&quot;&gt; &lt;code&gt;getControl(List)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;resourcebundle.control#getNoFallbackControl-java.util.List-&quot;&gt; &lt;code&gt;getNoFallbackControl(List)&lt;/code&gt; &lt;/a&gt;は、デフォルトのバンドル読み込みプロセスの一般的なバリエーションを実装する &lt;code&gt;ResourceBundle.Control&lt;/code&gt; インスタンスを提供します。</target>
        </trans-unit>
        <trans-unit id="e0a29734cc4ad0dc762fea82f8d8daefcd153546" translate="yes" xml:space="preserve">
          <source>Two fields are used for week-based-year, one for the &lt;a href=&quot;#weekOfWeekBasedYear()&quot;&gt;&lt;code&gt;week-of-week-based-year&lt;/code&gt;&lt;/a&gt; and one for &lt;a href=&quot;#weekBasedYear()&quot;&gt;&lt;code&gt;week-based-year&lt;/code&gt;&lt;/a&gt;. In a week-based-year, each week belongs to only a single year. Week 1 of a year is the first week that starts on the first day-of-week and has at least the minimum number of days. The first and last weeks of a year may contain days from the previous calendar year or next calendar year respectively.</source>
          <target state="translated">2つのフィールドが週ベースの年に使用されます。1つは&lt;a href=&quot;#weekOfWeekBasedYear()&quot;&gt; &lt;code&gt;week-of-week-based-year&lt;/code&gt; &lt;/a&gt;、もう1つは&lt;a href=&quot;#weekBasedYear()&quot;&gt; &lt;code&gt;week-based-year&lt;/code&gt; &lt;/a&gt;です。週ベースの年では、各週は1年のみに属します。1年の第1週は、最初の曜日から始まり、少なくとも最小日数を持つ最初の週です。年の最初と最後の週には、それぞれ前暦年または次暦年の日が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="94f969c3f1c5266dac27819cb6f7c1da1174a51f" translate="yes" xml:space="preserve">
          <source>Two fields are used for week-based-year, one for the &lt;a href=&quot;weekfields#weekOfWeekBasedYear--&quot;&gt;&lt;code&gt;week-of-week-based-year&lt;/code&gt;&lt;/a&gt; and one for &lt;a href=&quot;weekfields#weekBasedYear--&quot;&gt;&lt;code&gt;week-based-year&lt;/code&gt;&lt;/a&gt;. In a week-based-year, each week belongs to only a single year. Week 1 of a year is the first week that starts on the first day-of-week and has at least the minimum number of days. The first and last weeks of a year may contain days from the previous calendar year or next calendar year respectively.</source>
          <target state="translated">2つのフィールドが週ベースの年に使用され、1つは&lt;a href=&quot;weekfields#weekOfWeekBasedYear--&quot;&gt; &lt;code&gt;week-of-week-based-year&lt;/code&gt; &lt;/a&gt;ベースの年に使用され、もう1つは&lt;a href=&quot;weekfields#weekBasedYear--&quot;&gt; &lt;code&gt;week-based-year&lt;/code&gt; &lt;/a&gt;ます。週ベースの年では、各週は1つの年にのみ属します。年の第1週は、最初の曜日から始まり、少なくとも最小日数がある最初の週です。年の最初と最後の週には、それぞれ前暦年または翌暦年からの日が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="d0bd37ad5bf07161ea31cafe95c35d6d0e74d095" translate="yes" xml:space="preserve">
          <source>Two files are considered to match if they satisfy one of the following conditions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729bfb71cc2a5eee48bb4e4a6b48fed07d2e937c" translate="yes" xml:space="preserve">
          <source>Two float buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;float&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/float#compare(float,float)&quot;&gt;&lt;code&gt;Float.compare(float,float)&lt;/code&gt;&lt;/a&gt;, except that &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;0.0&lt;/code&gt; are considered to be equal. &lt;code&gt;Float.NaN&lt;/code&gt; is considered by this method to be equal to itself and greater than all other &lt;code&gt;float&lt;/code&gt; values (including &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">2つのフロートバッファーは、対応するバッファー内の各シーケンスの開始位置に関係なく、残りの要素のシーケンスを辞書式順序で比較することによって比較されます。 &lt;code&gt;float&lt;/code&gt; 要素のペアは、 &lt;code&gt;-0.0&lt;/code&gt; と &lt;code&gt;0.0&lt;/code&gt; が等しいと見なされることを除いて&lt;a href=&quot;../lang/float#compare(float,float)&quot;&gt; &lt;code&gt;Float.compare(float,float)&lt;/code&gt; &lt;/a&gt;を呼び出す場合と同じように比較されます。 &lt;code&gt;Float.NaN&lt;/code&gt; は、このメソッドによって、それ自体と等しく、他のすべての &lt;code&gt;float&lt;/code&gt; 値（ &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt; を含む）よりも大きいと見なされます。</target>
        </trans-unit>
        <trans-unit id="1f856d53c5409354b424a6b88872025e64ea40cc" translate="yes" xml:space="preserve">
          <source>Two float buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;float&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/float#compare-float-float-&quot;&gt;&lt;code&gt;Float.compare(float,float)&lt;/code&gt;&lt;/a&gt;, except that &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;0.0&lt;/code&gt; are considered to be equal. &lt;code&gt;Float.NaN&lt;/code&gt; is considered by this method to be equal to itself and greater than all other &lt;code&gt;float&lt;/code&gt; values (including &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">2つのfloatバッファーは、対応するバッファー内の各シーケンスの開始位置に関係なく、残りの要素のシーケンスを辞書順に比較することによって比較されます。 &lt;code&gt;float&lt;/code&gt; 要素のペアは、 &lt;code&gt;-0.0&lt;/code&gt; と &lt;code&gt;0.0&lt;/code&gt; が等しいと見なされることを除いて&lt;a href=&quot;../lang/float#compare-float-float-&quot;&gt; &lt;code&gt;Float.compare(float,float)&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じように比較されます。このメソッドでは、 &lt;code&gt;Float.NaN&lt;/code&gt; はそれ自体と等しく、他のすべての &lt;code&gt;float&lt;/code&gt; 値（ &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt; を含む）よりも大きいと見なされます。</target>
        </trans-unit>
        <trans-unit id="ab5aaf9dda16dddecde94392b8de1659ec944d53" translate="yes" xml:space="preserve">
          <source>Two float buffers are equal if, and only if,</source>
          <target state="translated">2つのフロートバッファが等しくなるのは、もしもの場合で、もしもの場合のみです。</target>
        </trans-unit>
        <trans-unit id="0f7529428614cd74b61525d183cd15ac20ea3382" translate="yes" xml:space="preserve">
          <source>Two floats &lt;code&gt;f1&lt;/code&gt; and &lt;code&gt;f2&lt;/code&gt; are considered equal if:</source>
          <target state="translated">2つのフロート &lt;code&gt;f1&lt;/code&gt; と &lt;code&gt;f2&lt;/code&gt; は、次の場合に等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="3ec7c4685fbb6e0cd82151a82b1856e783298e58" translate="yes" xml:space="preserve">
          <source>Two hierarchical URIs with identical schemes are ordered according to the ordering of their authority components:</source>
          <target state="translated">同一のスキームを持つ2つの階層型URIは、その権限構成要素の順序に従って順序付けられている。</target>
        </trans-unit>
        <trans-unit id="9456e8128eea79cf44263ed1c3e02c15485da4d1" translate="yes" xml:space="preserve">
          <source>Two hosts are considered equivalent if both host names can be resolved into the same IP addresses; else if either host name can't be resolved, the host names must be equal without regard to case; or both host names equal to null.</source>
          <target state="translated">2 つのホストは、両方のホスト名が同じ IP アドレスに解決できる場合には等価とみなされます。</target>
        </trans-unit>
        <trans-unit id="f3f5469340d8a203d30f3b1f4bca04b9e2cd70cb" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;InetAddress&lt;/code&gt; represent the same IP address if the length of the byte arrays returned by &lt;code&gt;getAddress&lt;/code&gt; is the same for both, and each of the array components is the same for the byte arrays.</source>
          <target state="translated">&lt;code&gt;InetAddress&lt;/code&gt; の 2つのインスタンスは、 &lt;code&gt;getAddress&lt;/code&gt; によって返されるバイト配列の長さが両方で同じで、各配列コンポーネントがバイト配列で同じである場合、同じIPアドレスを表します。</target>
        </trans-unit>
        <trans-unit id="d53ae396b1d69ae511021d6ecc99a9bfe4ea1851" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;InetSocketAddress&lt;/code&gt; represent the same address if both the InetAddresses (or hostnames if it is unresolved) and port numbers are equal. If both addresses are unresolved, then the hostname and the port number are compared. Note: Hostnames are case insensitive. e.g. &quot;FooBar&quot; and &quot;foobar&quot; are considered equal.</source>
          <target state="translated">&lt;code&gt;InetSocketAddress&lt;/code&gt; の 2つのインスタンスは、InetAddresses（または、解決されていない場合はホスト名）とポート番号の両方が等しい場合、同じアドレスを表します。両方のアドレスが解決されない場合、ホスト名とポート番号が比較されます。注：ホスト名は大文字と小文字を区別しません。たとえば、「FooBar」と「foobar」は等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="97b13973b11b6b04063de8e03fd3ecc4239481db" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;InterfaceAddress&lt;/code&gt; represent the same address if the InetAddress, the prefix length and the broadcast are the same for both.</source>
          <target state="translated">InetAddress、プレフィックス長、およびブロードキャストが両方とも同じ場合、 &lt;code&gt;InterfaceAddress&lt;/code&gt; の 2つのインスタンスは同じアドレスを表します。</target>
        </trans-unit>
        <trans-unit id="4b996d3889c3b875c55ca3ae310956b714b115ac" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;NetworkInterface&lt;/code&gt; represent the same NetworkInterface if both name and addrs are the same for both.</source>
          <target state="translated">名前とアドレスの両方が同じ場合、 &lt;code&gt;NetworkInterface&lt;/code&gt; の 2つのインスタンスは同じNetworkInterfaceを表します。</target>
        </trans-unit>
        <trans-unit id="ed538e957b9c55e905ab3db97902c2a61f180d1d" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;NetworkInterface&lt;/code&gt; represent the same NetworkInterface if both the name and the set of &lt;code&gt;InetAddress&lt;/code&gt;es bound to the interfaces are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1c2e993d8d2f8ab36ba6b41f124760050317c8" translate="yes" xml:space="preserve">
          <source>Two instances of &lt;code&gt;Proxy&lt;/code&gt; represent the same address if both the SocketAddresses and type are equal.</source>
          <target state="translated">SocketAddressesとタイプの両方が等しい場合、 &lt;code&gt;Proxy&lt;/code&gt; の 2つのインスタンスは同じアドレスを表します。</target>
        </trans-unit>
        <trans-unit id="3803eb7c4641b19a95e0a3e15ba6754916467c86" translate="yes" xml:space="preserve">
          <source>Two int buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;int&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/integer#compare(int,int)&quot;&gt;&lt;code&gt;Integer.compare(int,int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つのintバッファーは、対応するバッファー内の各シーケンスの開始位置に関係なく、残りの要素のシーケンスを辞書式順序で比較することによって比較されます。 &lt;code&gt;int&lt;/code&gt; 要素のペアは&lt;a href=&quot;../lang/integer#compare(int,int)&quot;&gt; &lt;code&gt;Integer.compare(int,int)&lt;/code&gt; &lt;/a&gt;を呼び出すかのように比較されます。</target>
        </trans-unit>
        <trans-unit id="1ef72b659250c65bf74ac7f0e0e43c90b4dbda63" translate="yes" xml:space="preserve">
          <source>Two int buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;int&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/integer#compare-int-int-&quot;&gt;&lt;code&gt;Integer.compare(int,int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つのintバッファーは、対応するバッファー内の各シーケンスの開始位置に関係なく、残りの要素のシーケンスを辞書式順序で比較することによって比較されます。 &lt;code&gt;int&lt;/code&gt; 要素のペアは&lt;a href=&quot;../lang/integer#compare-int-int-&quot;&gt; &lt;code&gt;Integer.compare(int,int)&lt;/code&gt; &lt;/a&gt;を呼び出すかのように比較されます。</target>
        </trans-unit>
        <trans-unit id="cb4e364b400dcaea531f35acc3fbff8db2fedfa4" translate="yes" xml:space="preserve">
          <source>Two int buffers are equal if, and only if,</source>
          <target state="translated">2つのintバッファが等しくなるのは、もしもの時だけです。</target>
        </trans-unit>
        <trans-unit id="151a1969bd049994387ddc880aca5512134efc88" translate="yes" xml:space="preserve">
          <source>Two kinds of validators can be created from a &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; object. One is &lt;a href=&quot;validator&quot;&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;/a&gt;, which provides highly-level validation operations that cover typical use cases. The other is &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt;, which works on top of SAX for better modularity.</source>
          <target state="translated">&lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;オブジェクトから2種類のバリデーターを作成できます。1つは&lt;a href=&quot;validator&quot;&gt; &lt;code&gt;Validator&lt;/code&gt; で&lt;/a&gt;、一般的なユースケースをカバーする高レベルの検証操作を提供します。もう1つは&lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; で&lt;/a&gt;、SAX上で動作してモジュール性を向上させます。</target>
        </trans-unit>
        <trans-unit id="ef16d0364abe5e4f58dba4f94de905b5517ef114" translate="yes" xml:space="preserve">
          <source>Two language ranges, &lt;code&gt;&quot;iw&quot;&lt;/code&gt; and &lt;code&gt;&quot;he&quot;&lt;/code&gt;, have the same highest priority in the list. By adding &lt;code&gt;&quot;he&quot;&lt;/code&gt; to the user's Language Priority List, locale-matching method can find Hebrew as a matching locale (or language tag) even if the application or system offers only &lt;code&gt;&quot;he&quot;&lt;/code&gt; as a supported locale (or language tag).</source>
          <target state="translated">2つの言語範囲 &lt;code&gt;&quot;iw&quot;&lt;/code&gt; と &lt;code&gt;&quot;he&quot;&lt;/code&gt; は、リスト内で同じ最高の優先順位を持っています。ユーザーの言語優先リストに &lt;code&gt;&quot;he&quot;&lt;/code&gt; を追加することにより、アプリケーションまたはシステムがサポートされているロケール（または言語タグ）として &lt;code&gt;&quot;he&quot;&lt;/code&gt; のみを提供する場合でも、ロケール一致メソッドは一致するロケール（または言語タグ）としてヘブライ語を見つけることができます。</target>
        </trans-unit>
        <trans-unit id="937bba9104d354d011329909a78043a7d961d25a" translate="yes" xml:space="preserve">
          <source>Two long buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;long&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/long#compare(long,long)&quot;&gt;&lt;code&gt;Long.compare(long,long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つの長いバッファーは、対応するバッファー内の各シーケンスの開始位置に関係なく、残りの要素のシーケンスを辞書式順序で比較することによって比較されます。 &lt;code&gt;long&lt;/code&gt; 要素のペアは&lt;a href=&quot;../lang/long#compare(long,long)&quot;&gt; &lt;code&gt;Long.compare(long,long)&lt;/code&gt; &lt;/a&gt;を呼び出すかのように比較されます。</target>
        </trans-unit>
        <trans-unit id="563eba67f158dd6d851a49f32b865a37f108fae1" translate="yes" xml:space="preserve">
          <source>Two long buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;long&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/long#compare-long-long-&quot;&gt;&lt;code&gt;Long.compare(long,long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つの長いバッファーは、対応するバッファー内の各シーケンスの開始位置に関係なく、残りの要素のシーケンスを辞書順に比較することによって比較されます。 &lt;code&gt;long&lt;/code&gt; 要素のペアは&lt;a href=&quot;../lang/long#compare-long-long-&quot;&gt; &lt;code&gt;Long.compare(long,long)&lt;/code&gt; &lt;/a&gt;を呼び出すかのように比較されます。</target>
        </trans-unit>
        <trans-unit id="5705efd986e39e3f93e960d33bcd6c77fb79107d" translate="yes" xml:space="preserve">
          <source>Two long buffers are equal if, and only if,</source>
          <target state="translated">2つの長いバッファが等しくなるのは、もしもの場合と、もしもの場合のみです。</target>
        </trans-unit>
        <trans-unit id="8cab0805e2cd5cfc8c5ff5bb7248fdaf4741fdb7" translate="yes" xml:space="preserve">
          <source>Two method forms (&lt;a href=&quot;#handle(java.util.function.BiFunction)&quot;&gt;&lt;code&gt;handle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#whenComplete(java.util.function.BiConsumer)&quot;&gt;&lt;code&gt;whenComplete&lt;/code&gt;&lt;/a&gt;) support unconditional computation whether the triggering stage completed normally or exceptionally. Method &lt;a href=&quot;#exceptionally(java.util.function.Function)&quot;&gt;&lt;code&gt;exceptionally&lt;/code&gt;&lt;/a&gt; supports computation only when the triggering stage completes exceptionally, computing a replacement result, similarly to the java &lt;code&gt;catch&lt;/code&gt; keyword. In all other cases, if a stage's computation terminates abruptly with an (unchecked) exception or error, then all dependent stages requiring its completion complete exceptionally as well, with a &lt;a href=&quot;completionexception&quot;&gt;&lt;code&gt;CompletionException&lt;/code&gt;&lt;/a&gt; holding the exception as its cause. If a stage is dependent on &lt;em&gt;both&lt;/em&gt; of two stages, and both complete exceptionally, then the CompletionException may correspond to either one of these exceptions. If a stage is dependent on &lt;em&gt;either&lt;/em&gt; of two others, and only one of them completes exceptionally, no guarantees are made about whether the dependent stage completes normally or exceptionally. In the case of method &lt;code&gt;whenComplete&lt;/code&gt;, when the supplied action itself encounters an exception, then the stage completes exceptionally with this exception unless the source stage also completed exceptionally, in which case the exceptional completion from the source stage is given preference and propagated to the dependent stage.</source>
          <target state="translated">2つのメソッド形式（&lt;a href=&quot;#handle(java.util.function.BiFunction)&quot;&gt; &lt;code&gt;handle&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#whenComplete(java.util.function.BiConsumer)&quot;&gt; &lt;code&gt;whenComplete&lt;/code&gt; &lt;/a&gt;）は、トリガー段階が正常に完了したか例外的に完了したかに関係なく、無条件の計算をサポートします。メソッドは、java &lt;code&gt;catch&lt;/code&gt; キーワードと同様に、トリガーステージが例外的に完了した場合にのみ計算を&lt;a href=&quot;#exceptionally(java.util.function.Function)&quot;&gt; &lt;code&gt;exceptionally&lt;/code&gt; &lt;/a&gt;サポートし、置換結果を計算します。他のすべての場合、ステージの計算が（チェックされていない）例外またはエラーで突然終了した場合、その完了を必要とするすべての依存ステージも例外的に完了し、&lt;a href=&quot;completionexception&quot;&gt; &lt;code&gt;CompletionException&lt;/code&gt; &lt;/a&gt;が例外を原因として保持します。ステージが&lt;em&gt;両方に&lt;/em&gt;依存している場合&lt;em&gt;&lt;/em&gt;2つのステージがあり、両方が例外的に完了する場合、CompletionExceptionはこれらの例外のいずれかに対応する可能性があります。ステージが他の2つのステージの&lt;em&gt;いずれか&lt;/em&gt;に依存していて、そのうちの1つだけが例外的に完了する場合、依存するステージが正常に完了するか例外的に完了するかについての保証はありません。メソッド &lt;code&gt;whenComplete&lt;/code&gt; の場合、指定されたアクション自体が例外に遭遇すると、ソースステージも例外的に完了しない限り、ステージはこの例外で例外的に完了します。例外的に完了した場合、ソースステージからの例外的な完了が優先され、依存関係に伝播されます。ステージ。</target>
        </trans-unit>
        <trans-unit id="765caf736393b1447e3dedc3e6859f322e2c0332" translate="yes" xml:space="preserve">
          <source>Two method forms support processing whether the triggering stage completed normally or exceptionally: Method &lt;a href=&quot;completionstage#whenComplete-java.util.function.BiConsumer-&quot;&gt;&lt;code&gt;whenComplete&lt;/code&gt;&lt;/a&gt; allows injection of an action regardless of outcome, otherwise preserving the outcome in its completion. Method &lt;a href=&quot;completionstage#handle-java.util.function.BiFunction-&quot;&gt;&lt;code&gt;handle&lt;/code&gt;&lt;/a&gt; additionally allows the stage to compute a replacement result that may enable further processing by other dependent stages. In all other cases, if a stage's computation terminates abruptly with an (unchecked) exception or error, then all dependent stages requiring its completion complete exceptionally as well, with a &lt;a href=&quot;completionexception&quot;&gt;&lt;code&gt;CompletionException&lt;/code&gt;&lt;/a&gt; holding the exception as its cause. If a stage is dependent on &lt;em&gt;both&lt;/em&gt; of two stages, and both complete exceptionally, then the CompletionException may correspond to either one of these exceptions. If a stage is dependent on &lt;em&gt;either&lt;/em&gt; of two others, and only one of them completes exceptionally, no guarantees are made about whether the dependent stage completes normally or exceptionally. In the case of method &lt;code&gt;whenComplete&lt;/code&gt;, when the supplied action itself encounters an exception, then the stage exceptionally completes with this exception if not already completed exceptionally.</source>
          <target state="translated">方法：二つの方法の形態は、トリガステージが正常または例外的に完了したかどうかの処理サポート&lt;a href=&quot;completionstage#whenComplete-java.util.function.BiConsumer-&quot;&gt; &lt;code&gt;whenComplete&lt;/code&gt; は、&lt;/a&gt;そうでなければ、その完了に結果を保存し、結果にかかわらず作用の注入を可能にします。さらに、メソッド&lt;a href=&quot;completionstage#handle-java.util.function.BiFunction-&quot;&gt; &lt;code&gt;handle&lt;/code&gt; &lt;/a&gt;により、ステージは置換結果を計算できるようになり、他の依存ステージによるさらなる処理が可能になる場合があります。それ以外の場合はすべて、ステージの計算が（チェックされていない）例外またはエラーで突然終了すると、完了を必要とするすべての依存ステージも例外的に完了し、&lt;a href=&quot;completionexception&quot;&gt; &lt;code&gt;CompletionException&lt;/code&gt; &lt;/a&gt;が例外を原因として保持します。ステージが&lt;em&gt;両方に&lt;/em&gt;依存している場合&lt;em&gt;&lt;/em&gt;2つのステージがあり、どちらも例外的に完了している場合、CompletionExceptionはこれらの例外のいずれかに対応します。ステージが他の2つの&lt;em&gt;いずれか&lt;/em&gt;に依存していて、そのうちの1つだけが例外的に完了する場合、依存するステージが正常に完了するか例外的に完了するかは保証されません。メソッド &lt;code&gt;whenComplete&lt;/code&gt; の場合、指定されたアクション自体が例外に遭遇すると、ステージは、まだ例外的に完了していない場合でも、この例外で例外的に完了します。</target>
        </trans-unit>
        <trans-unit id="c6e22f3e8a52297a0d091d18890097d4bf3bccd2" translate="yes" xml:space="preserve">
          <source>Two method handles whose argument lists are &quot;effectively identical&quot; (i.e., identical in a common prefix) may be mutually converted to a common type by two calls to &lt;code&gt;dropArgumentsToMatch&lt;/code&gt;, as follows:</source>
          <target state="translated">引数リストが「実質的に同一」である（つまり、共通のプレフィックスで同一である）2つのメソッドハンドルは、次のように、 &lt;code&gt;dropArgumentsToMatch&lt;/code&gt; を2回呼び出すことで、相互に共通の型に変換できます。</target>
        </trans-unit>
        <trans-unit id="321658d83681cd685b5028c7c9cd03220094cf85" translate="yes" xml:space="preserve">
          <source>Two nodes are equal if and only if the following conditions are satisfied:</source>
          <target state="translated">2つのノードが等しいのは、以下の条件が満たされている場合に限ります。</target>
        </trans-unit>
        <trans-unit id="f65f85b3d18d03a1d4e8285839b0271c0e8bb049" translate="yes" xml:space="preserve">
          <source>Two non-&lt;code&gt;null&lt;/code&gt; arrays, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively, share a common prefix of length &lt;code&gt;pl&lt;/code&gt; if the following expression is true:</source>
          <target state="translated">次の式が真の場合、指定された範囲[ &lt;code&gt;aFromIndex&lt;/code&gt; 、 &lt;code&gt;atoIndex&lt;/code&gt; ）および[ &lt;code&gt;bFromIndex&lt;/code&gt; 、 &lt;code&gt;btoIndex&lt;/code&gt; ）を持つ2つの非 &lt;code&gt;null&lt;/code&gt; 配列 &lt;code&gt;a&lt;/code&gt; および &lt;code&gt;b&lt;/code&gt; は、長さ &lt;code&gt;pl&lt;/code&gt; の共通プレフィックスを共有します。</target>
        </trans-unit>
        <trans-unit id="0dd8a13aecc2b9351ea6f73e6666c7e86965557e" translate="yes" xml:space="preserve">
          <source>Two non-&lt;code&gt;null&lt;/code&gt; arrays, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively, share a proper if the following expression is true:</source>
          <target state="translated">次の式が真の場合、それぞれ指定された範囲[ &lt;code&gt;aFromIndex&lt;/code&gt; 、 &lt;code&gt;atoIndex&lt;/code&gt; ）および[ &lt;code&gt;bFromIndex&lt;/code&gt; 、 &lt;code&gt;btoIndex&lt;/code&gt; ）を持つ2つの非 &lt;code&gt;null&lt;/code&gt; 配列 &lt;code&gt;a&lt;/code&gt; および &lt;code&gt;b&lt;/code&gt; は、適切な配列を共有します。</target>
        </trans-unit>
        <trans-unit id="ebe3ff0b83f6a9faffdcedf878e974b7f04d9289" translate="yes" xml:space="preserve">
          <source>Two non-&lt;code&gt;null&lt;/code&gt; arrays, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; with specified ranges [&lt;code&gt;aFromIndex&lt;/code&gt;, &lt;code&gt;atoIndex&lt;/code&gt;) and [&lt;code&gt;bFromIndex&lt;/code&gt;, &lt;code&gt;btoIndex&lt;/code&gt;) respectively, share a proper prefix if the following expression is true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29126b80981f2442f313e05ac3a1cb507c30adf7" translate="yes" xml:space="preserve">
          <source>Two non-&lt;code&gt;null&lt;/code&gt; arrays, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, share a common prefix of length &lt;code&gt;pl&lt;/code&gt; if the following expression is true:</source>
          <target state="translated">次の式が真の場合、2つの &lt;code&gt;null&lt;/code&gt; 以外の配列 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; は、長さ &lt;code&gt;pl&lt;/code&gt; の共通のプレフィックスを共有します。</target>
        </trans-unit>
        <trans-unit id="059448e95fa06e821c398c4bb9304fe79583d60e" translate="yes" xml:space="preserve">
          <source>Two non-&lt;code&gt;null&lt;/code&gt; arrays, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, share a proper prefix if the following expression is true:</source>
          <target state="translated">次の式が真の場合、2つの &lt;code&gt;null&lt;/code&gt; 以外の配列 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; は、適切なプレフィックスを共有します。</target>
        </trans-unit>
        <trans-unit id="5550f0652dc4eb165692e012bf1a6c259f1794c5" translate="yes" xml:space="preserve">
          <source>Two objects &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; are considered</source>
          <target state="translated">2つのオブジェクト &lt;code&gt;e1&lt;/code&gt; と &lt;code&gt;e2&lt;/code&gt; が考慮されます</target>
        </trans-unit>
        <trans-unit id="7605eae3d98d28d6062311241e63da1518e1a157" translate="yes" xml:space="preserve">
          <source>Two opaque URIs with identical schemes and scheme-specific parts are ordered according to the ordering of their fragments.</source>
          <target state="translated">同一のスキームとスキーマ固有の部分を持つ2つの不透明なURIは、そのフラグメントの順序に従って順序付けられます。</target>
        </trans-unit>
        <trans-unit id="d473d0f256cea49ed96dc67be37016b899731d09" translate="yes" xml:space="preserve">
          <source>Two opaque URIs with identical schemes are ordered according to the ordering of their scheme-specific parts.</source>
          <target state="translated">同一のスキームを持つ2つの不透明なURIは、それらのスキーム固有の部分の順序に従って順序付けられる。</target>
        </trans-unit>
        <trans-unit id="04660a3bfcc08a9316557a93d2e0ad00c0c51b43" translate="yes" xml:space="preserve">
          <source>Two operations that remain O(N) in the number of entries are the &lt;code&gt;insertEntries&lt;/code&gt; and &lt;code&gt;removeEntries&lt;/code&gt; methods, both of which are implemented by converting the internal array to a set of integer sizes, copying it into the new array, and then reforming the hybrid representation in place.</source>
          <target state="translated">エントリ数がO（N）のままである2つの操作は、 &lt;code&gt;insertEntries&lt;/code&gt; メソッドと &lt;code&gt;removeEntries&lt;/code&gt; メソッドです。どちらも、内部配列を整数サイズのセットに変換し、それを新しい配列にコピーしてから、ハイブリッド表現を再作成することによって実装されます。所定の位置に。</target>
        </trans-unit>
        <trans-unit id="27cd5df654ef91f708e9f74138d8c2b65cc92c2d" translate="yes" xml:space="preserve">
          <source>Two or more modules export a package with the same name to a module that &quot;reads&quot; both. This includes the case where a module M containing package p &quot;reads&quot; another module that exports p to M.</source>
          <target state="translated">2つ以上のモジュールが同じ名前のパッケージを、両方を「読む」モジュールにエクスポートします。これには、パッケージ p を含むモジュール M が、p を M にエクスポートする別のモジュールを「読む」場合も含まれます。</target>
        </trans-unit>
        <trans-unit id="4c6968d37e06c9c6386c7a208b2f5e36ba4a5f43" translate="yes" xml:space="preserve">
          <source>Two or more modules in the configuration export the same package to a module that reads both. This includes the case where a module &lt;code&gt;M&lt;/code&gt; containing package &lt;code&gt;p&lt;/code&gt; reads another module that exports &lt;code&gt;p&lt;/code&gt; to &lt;code&gt;M&lt;/code&gt;.</source>
          <target state="translated">構成内の2つ以上のモジュールが、同じパッケージを両方を読み取るモジュールにエクスポートします。これには、パッケージ &lt;code&gt;p&lt;/code&gt; を含むモジュール &lt;code&gt;M&lt;/code&gt; が、 &lt;code&gt;p&lt;/code&gt; を &lt;code&gt;M&lt;/code&gt; にエクスポートする別のモジュールを読み取る場合が含まれます。</target>
        </trans-unit>
        <trans-unit id="7156525b315d98f5a04e2b8bdada0b108dbad72f" translate="yes" xml:space="preserve">
          <source>Two or more modules with the same package are mapped to the same class loader.</source>
          <target state="translated">同じパッケージを持つ2つ以上のモジュールが、同じクラスローダにマッピングされます。</target>
        </trans-unit>
        <trans-unit id="24028619361d92dbdf027e988437278ab739570c" translate="yes" xml:space="preserve">
          <source>Two pieces of date/time information cannot be represented by numbers, the &lt;a href=&quot;../chrono/chronology&quot;&gt;chronology&lt;/a&gt; and the &lt;a href=&quot;../zoneid&quot;&gt;time-zone&lt;/a&gt;. These can be accessed via &lt;a href=&quot;#query(java.time.temporal.TemporalQuery)&quot;&gt;queries&lt;/a&gt; using the static methods defined on &lt;a href=&quot;temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つの日付/時刻情報は、&lt;a href=&quot;../chrono/chronology&quot;&gt;年表&lt;/a&gt;と&lt;a href=&quot;../zoneid&quot;&gt;タイムゾーンの&lt;/a&gt;数字で表すことはできません。これらは、&lt;a href=&quot;temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; で&lt;/a&gt;定義された静的メソッドを使用した&lt;a href=&quot;#query(java.time.temporal.TemporalQuery)&quot;&gt;クエリ&lt;/a&gt;を介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="07f53d16493ad2b5c5ee0413e288894ce12d7ac9" translate="yes" xml:space="preserve">
          <source>Two pieces of date/time information cannot be represented by numbers, the &lt;a href=&quot;../chrono/chronology&quot;&gt;chronology&lt;/a&gt; and the &lt;a href=&quot;../zoneid&quot;&gt;time-zone&lt;/a&gt;. These can be accessed via &lt;a href=&quot;temporalaccessor#query(java.time.temporal.TemporalQuery)&quot;&gt;&lt;code&gt;queries&lt;/code&gt;&lt;/a&gt; using the static methods defined on &lt;a href=&quot;temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つの日付/時刻情報は、&lt;a href=&quot;../chrono/chronology&quot;&gt;年表&lt;/a&gt;と&lt;a href=&quot;../zoneid&quot;&gt;タイムゾーンの&lt;/a&gt;数字で表すことはできません。これらは、&lt;a href=&quot;temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; で&lt;/a&gt;定義された静的メソッドを使用した&lt;a href=&quot;temporalaccessor#query(java.time.temporal.TemporalQuery)&quot;&gt; &lt;code&gt;queries&lt;/code&gt; &lt;/a&gt;を介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="85b07d5e140ce2cc6d820c15a44356fd530a45ae" translate="yes" xml:space="preserve">
          <source>Two pieces of date/time information cannot be represented by numbers, the &lt;a href=&quot;../chrono/chronology&quot;&gt;chronology&lt;/a&gt; and the &lt;a href=&quot;../zoneid&quot;&gt;time-zone&lt;/a&gt;. These can be accessed via &lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt;&lt;code&gt;queries&lt;/code&gt;&lt;/a&gt; using the static methods defined on &lt;a href=&quot;temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">日付と時刻の2つの情報は、&lt;a href=&quot;../chrono/chronology&quot;&gt;年表&lt;/a&gt;と&lt;a href=&quot;../zoneid&quot;&gt;時間帯&lt;/a&gt;という数値では表現できません。これらは、&lt;a href=&quot;temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; で&lt;/a&gt;定義された静的メソッドを使用した&lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt; &lt;code&gt;queries&lt;/code&gt; &lt;/a&gt;を介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="e05778c54f992a5b6114c3e9fe56ad4e25fbad09" translate="yes" xml:space="preserve">
          <source>Two pieces of date/time information cannot be represented by numbers, the &lt;a href=&quot;../chrono/chronology&quot;&gt;chronology&lt;/a&gt; and the &lt;a href=&quot;../zoneid&quot;&gt;time-zone&lt;/a&gt;. These can be accessed via &lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt;queries&lt;/a&gt; using the static methods defined on &lt;a href=&quot;temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">日付と時刻の2つの情報は、&lt;a href=&quot;../chrono/chronology&quot;&gt;年表&lt;/a&gt;と&lt;a href=&quot;../zoneid&quot;&gt;時間帯&lt;/a&gt;という数値では表現できません。これらは、&lt;a href=&quot;temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; で&lt;/a&gt;定義された静的メソッドを使用した&lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt;クエリ&lt;/a&gt;を介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="3c94d69790e1ec838959829076066d6897764fdf" translate="yes" xml:space="preserve">
          <source>Two possibly &lt;code&gt;null&lt;/code&gt; elements &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; are deeply equal if any of the following conditions hold:</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; の可能性がある2つの要素 &lt;code&gt;e1&lt;/code&gt; と &lt;code&gt;e2&lt;/code&gt; は、次の条件のいずれかに当てはまる場合、完全に等しくなります。</target>
        </trans-unit>
        <trans-unit id="e737b2c512ad189e678d92bf45b1d83ff5c03037" translate="yes" xml:space="preserve">
          <source>Two rule sets are equal if they will always result in the same output for any given input instant or local date-time. Rules from two different groups may return false even if they are in fact the same.</source>
          <target state="translated">2つのルールセットは、与えられた入力の瞬間またはローカルの日付時間に対して、常に同じ出力になる場合には等しいです。2つの異なるグループのルールは、実際には同じであってもfalseを返すことがあります。</target>
        </trans-unit>
        <trans-unit id="b6439bad8ce4e40abf7e9d22bfb08c2b6c5b2b25" translate="yes" xml:space="preserve">
          <source>Two short buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;short&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/short#compare(short,short)&quot;&gt;&lt;code&gt;Short.compare(short,short)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つの短いバッファーは、対応するバッファー内の各シーケンスの開始位置に関係なく、辞書式順序で残りの要素のシーケンスを比較することによって比較されます。 &lt;code&gt;short&lt;/code&gt; 要素のペアは&lt;a href=&quot;../lang/short#compare(short,short)&quot;&gt; &lt;code&gt;Short.compare(short,short)&lt;/code&gt; &lt;/a&gt;を呼び出すかのように比較されます。</target>
        </trans-unit>
        <trans-unit id="d74931762644a8874ec6ca8b382ffa83e63855b9" translate="yes" xml:space="preserve">
          <source>Two short buffers are compared by comparing their sequences of remaining elements lexicographically, without regard to the starting position of each sequence within its corresponding buffer. Pairs of &lt;code&gt;short&lt;/code&gt; elements are compared as if by invoking &lt;a href=&quot;../lang/short#compare-short-short-&quot;&gt;&lt;code&gt;Short.compare(short,short)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つの短いバッファーは、対応するバッファー内の各シーケンスの開始位置に関係なく、残りの要素のシーケンスを辞書順に比較することによって比較されます。 &lt;code&gt;short&lt;/code&gt; 要素のペアは&lt;a href=&quot;../lang/short#compare-short-short-&quot;&gt; &lt;code&gt;Short.compare(short,short)&lt;/code&gt; &lt;/a&gt;を呼び出すかのように比較されます。</target>
        </trans-unit>
        <trans-unit id="92e271d05453aef061bbc3509e2fc83770af674e" translate="yes" xml:space="preserve">
          <source>Two short buffers are equal if, and only if,</source>
          <target state="translated">2つの短いバッファが等しくなるのは、もしもの場合であり、もしもの場合のみです。</target>
        </trans-unit>
        <trans-unit id="ac2cec36d9681b0bee2bfd6b426164a08d5af5a6" translate="yes" xml:space="preserve">
          <source>Two types of operations are provided for manipulating the scale of a &lt;code&gt;BigDecimal&lt;/code&gt;: scaling/rounding operations and decimal point motion operations. Scaling/rounding operations (&lt;a href=&quot;#setScale(int,java.math.RoundingMode)&quot;&gt;&lt;code&gt;setScale&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#round(java.math.MathContext)&quot;&gt;&lt;code&gt;round&lt;/code&gt;&lt;/a&gt;) return a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is approximately (or exactly) equal to that of the operand, but whose scale or precision is the specified value; that is, they increase or decrease the precision of the stored number with minimal effect on its value. Decimal point motion operations (&lt;a href=&quot;#movePointLeft(int)&quot;&gt;&lt;code&gt;movePointLeft&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#movePointRight(int)&quot;&gt;&lt;code&gt;movePointRight&lt;/code&gt;&lt;/a&gt;) return a &lt;code&gt;BigDecimal&lt;/code&gt; created from the operand by moving the decimal point a specified distance in the specified direction.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; のスケールを操作するために、スケーリング/丸め操作と小数点モーション操作の2種類の操作が用意されています。スケーリング/丸め操作（&lt;a href=&quot;#setScale(int,java.math.RoundingMode)&quot;&gt; &lt;code&gt;setScale&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#round(java.math.MathContext)&quot;&gt; &lt;code&gt;round&lt;/code&gt; &lt;/a&gt;）は、値がオペランドの値とほぼ（または正確に）等しいが、スケールまたは精度が指定された値である &lt;code&gt;BigDecimal&lt;/code&gt; を返します。つまり、値への影響を最小限に抑えながら、格納されている数値の精度を増減します。小数点モーション操作（&lt;a href=&quot;#movePointLeft(int)&quot;&gt; &lt;code&gt;movePointLeft&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#movePointRight(int)&quot;&gt; &lt;code&gt;movePointRight&lt;/code&gt; &lt;/a&gt;）は、指定された方向に指定された距離だけ小数点を移動することにより、オペランドから作成された &lt;code&gt;BigDecimal&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="840bcd21edbcd6c45b75d11fb8d1eb8bd409a790" translate="yes" xml:space="preserve">
          <source>Two types of operations are provided for manipulating the scale of a &lt;code&gt;BigDecimal&lt;/code&gt;: scaling/rounding operations and decimal point motion operations. Scaling/rounding operations (&lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt;&lt;code&gt;setScale&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;bigdecimal#round-java.math.MathContext-&quot;&gt;&lt;code&gt;round&lt;/code&gt;&lt;/a&gt;) return a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is approximately (or exactly) equal to that of the operand, but whose scale or precision is the specified value; that is, they increase or decrease the precision of the stored number with minimal effect on its value. Decimal point motion operations (&lt;a href=&quot;bigdecimal#movePointLeft-int-&quot;&gt;&lt;code&gt;movePointLeft&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;bigdecimal#movePointRight-int-&quot;&gt;&lt;code&gt;movePointRight&lt;/code&gt;&lt;/a&gt;) return a &lt;code&gt;BigDecimal&lt;/code&gt; created from the operand by moving the decimal point a specified distance in the specified direction.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; のスケールを操作するために、スケーリング/丸め操作と小数点モーション操作の2つのタイプの操作が提供されています。スケーリング/丸め操作（&lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt; &lt;code&gt;setScale&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;bigdecimal#round-java.math.MathContext-&quot;&gt; &lt;code&gt;round&lt;/code&gt; &lt;/a&gt;）は、値がオペランドの値とほぼ（または正確に）等しいが、スケールまたは精度が指定された値である &lt;code&gt;BigDecimal&lt;/code&gt; を返します。つまり、値への影響を最小限に抑えて、格納された数値の精度を増減します。小数点モーション操作（&lt;a href=&quot;bigdecimal#movePointLeft-int-&quot;&gt; &lt;code&gt;movePointLeft&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;bigdecimal#movePointRight-int-&quot;&gt; &lt;code&gt;movePointRight&lt;/code&gt; &lt;/a&gt;）は、指定された方向に指定された距離で小数点を移動することにより、オペランドから作成された &lt;code&gt;BigDecimal&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2c4fab8dffe592a084c365e457388a74faaba12b" translate="yes" xml:space="preserve">
          <source>Two versions are compared by examining the version string as described in &lt;a href=&quot;#compareTo(java.lang.Runtime.Version)&quot;&gt;&lt;code&gt;compareTo(Version)&lt;/code&gt;&lt;/a&gt; with the exception that the optional build information is always ignored.</source>
          <target state="translated">オプションのビルド情報が常に無視されることを除いて、&lt;a href=&quot;#compareTo(java.lang.Runtime.Version)&quot;&gt; &lt;code&gt;compareTo(Version)&lt;/code&gt; &lt;/a&gt;で説明されているように、バージョン文字列を調べることによって2つのバージョンが比較されます。</target>
        </trans-unit>
        <trans-unit id="3dd96db0b8fdb5ec29bc75110364487fd08afe3f" translate="yes" xml:space="preserve">
          <source>TwoDigitHours</source>
          <target state="translated">TwoDigitHours</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="5aa68e063e7ea81b31ba68936799f05471feb948" translate="yes" xml:space="preserve">
          <source>Type Mapping Rules</source>
          <target state="translated">タイプマッピングのルール</target>
        </trans-unit>
        <trans-unit id="47f39d80096c89d119a7202ce0aa5f0bce9d98cd" translate="yes" xml:space="preserve">
          <source>Type Names</source>
          <target state="translated">タイプ名</target>
        </trans-unit>
        <trans-unit id="6a6611d567cb2f36519ceaec8099760e8d3871d3" translate="yes" xml:space="preserve">
          <source>Type Parameters:</source>
          <target state="translated">タイプパラメータ。</target>
        </trans-unit>
        <trans-unit id="fecc28dda84b2d001dce080aebed61aa8adf2ceb" translate="yes" xml:space="preserve">
          <source>Type String</source>
          <target state="translated">タイプ文字列</target>
        </trans-unit>
        <trans-unit id="29a202322290c41693f4d3d1ecfd33271e248f35" translate="yes" xml:space="preserve">
          <source>Type and value equality matching is done as below:</source>
          <target state="translated">型と値の一致は以下のように行われます。</target>
        </trans-unit>
        <trans-unit id="c27432a69b51a6a36d7ca1e539bf1229c7c526d0" translate="yes" xml:space="preserve">
          <source>Type declared in target as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e170f317f6425c9243d39bf9a2960d77905802e" translate="yes" xml:space="preserve">
          <source>Type description for a file, directory, or folder as it would be displayed in a system file browser.</source>
          <target state="translated">システムファイルブラウザで表示されるようなファイル、ディレクトリ、またはフォルダの説明を入力します。</target>
        </trans-unit>
        <trans-unit id="1dafbc13c8cb4e164d170a3b395d07f28c2c4494" translate="yes" xml:space="preserve">
          <source>Type description for a file, directory, or folder as it would be displayed in a system file browser. Example from Windows: the &quot;Desktop&quot; folder is described as &quot;Desktop&quot;. Override for platforms with native ShellFolder implementations.</source>
          <target state="translated">システムのファイルブラウザで表示されるようなファイル、ディレクトリ、またはフォルダの説明を入力します。Windows の例:&quot;Desktop&quot; フォルダは &quot;Desktop&quot; と記述されます。ShellFolderのネイティブ実装を持つプラットフォームではオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="9abaed5a4fee3a84c132511e464e39d0e2015cac" translate="yes" xml:space="preserve">
          <source>Type for an update of an internal relation.</source>
          <target state="translated">内部関係を更新するための型。</target>
        </trans-unit>
        <trans-unit id="9b0911379bab618c3ca8a02dd5468d7f6fc9d0cd" translate="yes" xml:space="preserve">
          <source>Type for private keys.</source>
          <target state="translated">秘密鍵のタイプ。</target>
        </trans-unit>
        <trans-unit id="a43434f2b4ba91c827a66d3dea3fb82db7c68968" translate="yes" xml:space="preserve">
          <source>Type for public keys.</source>
          <target state="translated">公開鍵のタイプ。</target>
        </trans-unit>
        <trans-unit id="c05b29592a901917c665933e4af5a98552bb0a36" translate="yes" xml:space="preserve">
          <source>Type for secret keys.</source>
          <target state="translated">秘密鍵を入力します。</target>
        </trans-unit>
        <trans-unit id="d4def0c1ec8dd2ec9d5988d983aae91de603bde6" translate="yes" xml:space="preserve">
          <source>Type for the creation of an internal relation.</source>
          <target state="translated">内部関係を作成するためのタイプです。</target>
        </trans-unit>
        <trans-unit id="711f460ec0af76d4dd67b882900ac195c361a8f7" translate="yes" xml:space="preserve">
          <source>Type for the relation MBean added into the Relation Service.</source>
          <target state="translated">リレーションサービスに追加されたリレーションMBeanのタイプ。</target>
        </trans-unit>
        <trans-unit id="a5da08a49b0d9e8ba1122bf89572a0805a2818ab" translate="yes" xml:space="preserve">
          <source>Type for the removal from the Relation Service of a relation MBean.</source>
          <target state="translated">リレーションMBeanをリレーションサービスから削除するためのタイプです。</target>
        </trans-unit>
        <trans-unit id="e2fdd3bfdc86204fa1c97bf98ce5b54c3508745e" translate="yes" xml:space="preserve">
          <source>Type for the removal from the Relation Service of an internal relation.</source>
          <target state="translated">内部関係をリレーションサービスから削除するタイプです。</target>
        </trans-unit>
        <trans-unit id="c8d98b51d69372823b9b8567bac9ec3e64421f25" translate="yes" xml:space="preserve">
          <source>Type for the update of a relation MBean.</source>
          <target state="translated">リレーションMBeanを更新するための型です。</target>
        </trans-unit>
        <trans-unit id="aed2c219e25eff0ad10e7f04bc3e58f3f626c08c" translate="yes" xml:space="preserve">
          <source>Type is the common superinterface for all types in the Java programming language.</source>
          <target state="translated">型は、Javaプログラミング言語のすべての型に共通のスーパーインターフェースです。</target>
        </trans-unit>
        <trans-unit id="5fc0e2d3160b7d91982c2ed8ec79bf17e0ac1b46" translate="yes" xml:space="preserve">
          <source>Type is the common superinterface for all types in the Java programming language. These include raw types, parameterized types, array types, type variables and primitive types.</source>
          <target state="translated">型は、Javaプログラミング言語におけるすべての型のための共通のスーパーインターフェースです。これらには、生の型、パラメータ化された型、配列型、型変数、プリミティブ型が含まれます。</target>
        </trans-unit>
        <trans-unit id="c6ec621ecbf5fcd4c27ed13185ac289b46b52d55" translate="yes" xml:space="preserve">
          <source>Type mapping rules</source>
          <target state="translated">タイプマッピングのルール</target>
        </trans-unit>
        <trans-unit id="65792dc4278a971590055a748672395f35550847" translate="yes" xml:space="preserve">
          <source>Type meaning Look and Feel should not supply any options -- only use the options from the &lt;code&gt;JOptionPane&lt;/code&gt;.</source>
          <target state="translated">ルックアンドフィールはオプションを提供しないことを意味するタイプ &lt;code&gt;JOptionPane&lt;/code&gt; オプションのみを使用します。</target>
        </trans-unit>
        <trans-unit id="d45cba8a21920a8210285abd1be6831a6888dd62" translate="yes" xml:space="preserve">
          <source>Type of descriptor, &quot;mbean&quot;, &quot;attribute&quot;, &quot;constructor&quot;, &quot;operation&quot;, or &quot;notification&quot;.</source>
          <target state="translated">記述子の種類、&quot;mbean&quot;、&quot;属性&quot;、&quot;コンストラクタ&quot;、&quot;操作&quot;、または &quot;通知&quot;。</target>
        </trans-unit>
        <trans-unit id="2968ec5a80e062120c695b9df2574943d2c1c7b6" translate="yes" xml:space="preserve">
          <source>Type of tag this iterator represents.</source>
          <target state="translated">このイテレータが表すタグの種類。</target>
        </trans-unit>
        <trans-unit id="af6660a65a8439039083e73a99cc635888fb076f" translate="yes" xml:space="preserve">
          <source>Type of the array used to represent pixel values.</source>
          <target state="translated">ピクセル値を表現するために使用される配列の型.</target>
        </trans-unit>
        <trans-unit id="21a2f3ca561e3342520659100d92a43c0d1ae625" translate="yes" xml:space="preserve">
          <source>Type of the expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e658f420bfb4dac53261b3dc212156822b65f826" translate="yes" xml:space="preserve">
          <source>Type of transparency like Opaque, Bitmask or Translucent.</source>
          <target state="translated">Opaque、Bitmask、Translucentのような透明度のタイプ。</target>
        </trans-unit>
        <trans-unit id="108497ad4df6837d5bfdccaa8d930f21cd3240d7" translate="yes" xml:space="preserve">
          <source>Type parameter declaration</source>
          <target state="translated">型パラメータ宣言</target>
        </trans-unit>
        <trans-unit id="3b6542b78cc1cbb76a295d173e0073cdf159b82f" translate="yes" xml:space="preserve">
          <source>Type parameters of functional interfaces can be specialized to primitives with additional type prefixes. To specialize the return type for a type that has both generic return type and generic arguments, we prefix &lt;code&gt;ToXxx&lt;/code&gt;, as in &lt;a href=&quot;tointfunction&quot;&gt;&lt;code&gt;ToIntFunction&lt;/code&gt;&lt;/a&gt;. Otherwise, type arguments are specialized left-to-right, as in &lt;a href=&quot;doubleconsumer&quot;&gt;&lt;code&gt;DoubleConsumer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;objintconsumer&quot;&gt;&lt;code&gt;ObjIntConsumer&lt;/code&gt;&lt;/a&gt;. (The type prefix &lt;code&gt;Obj&lt;/code&gt; is used to indicate that we don't want to specialize this parameter, but want to move on to the next parameter, as in &lt;a href=&quot;objintconsumer&quot;&gt;&lt;code&gt;ObjIntConsumer&lt;/code&gt;&lt;/a&gt;.) These schemes can be combined, as in &lt;code&gt;IntToDoubleFunction&lt;/code&gt;.</source>
          <target state="translated">関数型インターフェースのタイプパラメータは、追加のタイププレフィックスを持つプリミティブに特化できます。一般的な戻り値の型とジェネリック引数の両方を持っているタイプの戻り値の型を特化するために、我々は接頭辞 &lt;code&gt;ToXxx&lt;/code&gt; はのように、&lt;a href=&quot;tointfunction&quot;&gt; &lt;code&gt;ToIntFunction&lt;/code&gt; &lt;/a&gt;。それ以外の場合、型引数は&lt;a href=&quot;doubleconsumer&quot;&gt; &lt;code&gt;DoubleConsumer&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;objintconsumer&quot;&gt; &lt;code&gt;ObjIntConsumer&lt;/code&gt; の&lt;/a&gt;ように左から右に特殊化されます。（型プレフィックス &lt;code&gt;Obj&lt;/code&gt; は、このパラメーターを特殊化するのではなく、&lt;a href=&quot;objintconsumer&quot;&gt; &lt;code&gt;ObjIntConsumer&lt;/code&gt; の&lt;/a&gt;ように次のパラメーターに移動することを示すために使用されます。）これらのスキームは、 &lt;code&gt;IntToDoubleFunction&lt;/code&gt; のように組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="f67615ab32736dce29c3910397612786cbc8e363" translate="yes" xml:space="preserve">
          <source>Type used for &lt;code&gt;showConfirmDialog&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;showConfirmDialog&lt;/code&gt; に使用されるタイプ。</target>
        </trans-unit>
        <trans-unit id="e8a6ced1a9abf3469b6d1ac6a219d4a5a145ca54" translate="yes" xml:space="preserve">
          <source>Type value indicating that the &lt;code&gt;JFileChooser&lt;/code&gt; supports a &quot;Save&quot; file operation.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; が「保存」ファイル操作をサポートすることを示す値を入力します。</target>
        </trans-unit>
        <trans-unit id="2d51eb2bccb0b73366cea3617289e3ca24da16b9" translate="yes" xml:space="preserve">
          <source>Type value indicating that the &lt;code&gt;JFileChooser&lt;/code&gt; supports a developer-specified file operation.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; が開発者指定のファイル操作をサポートすることを示す値を入力します。</target>
        </trans-unit>
        <trans-unit id="e8589e1631b642d3d06ef2d794431ce28773689f" translate="yes" xml:space="preserve">
          <source>Type value indicating that the &lt;code&gt;JFileChooser&lt;/code&gt; supports an &quot;Open&quot; file operation.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; が「開く」ファイル操作をサポートすることを示す値を入力します。</target>
        </trans-unit>
        <trans-unit id="b3c5c7c693fb422a84a383de08d28b9f490b4218" translate="yes" xml:space="preserve">
          <source>Type-Import-on-Demand Declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f3e8ac8d614d87753533a9736e07e8ef5fc8ad" translate="yes" xml:space="preserve">
          <source>Type-Import-on-Demand Declaration. A non-static &quot;star&quot; import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee59cee9ec6a0c6a404a28fbcedb81cbab9ab9de" translate="yes" xml:space="preserve">
          <source>Type-safe enum class that represents six fields of the &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;クラスの6つのフィールドを表すタイプセーフな列挙型クラス。</target>
        </trans-unit>
        <trans-unit id="6f1c0c8436758afef89c1765b93559fc1c76f2f3" translate="yes" xml:space="preserve">
          <source>Type.</source>
          <target state="translated">Type.</target>
        </trans-unit>
        <trans-unit id="0b786b1fb8589261b95a3a411226bf70605fd256" translate="yes" xml:space="preserve">
          <source>Type. Either '*', '?', '+', ',', '|', '&amp;amp;'.</source>
          <target state="translated">タイプ。'*'、 '？'、 '+'、 '、'、 '|'、 '＆'のいずれか。</target>
        </trans-unit>
        <trans-unit id="2f8294383485abed352067f227b79009adf3c167" translate="yes" xml:space="preserve">
          <source>Type.PRIVATE/&quot;PKCS#8&quot; - gets a KeyFactory instance for the key algorithm, constructs a PKCS8EncodedKeySpec with the encoded key bytes, and generates a private key from the spec</source>
          <target state="translated">Type.PRIVATE/&quot;PKCS#8&quot;-鍵アルゴリズム用のKeyFactoryインスタンスを取得し、エンコードされた鍵バイトでPKCS8EncodedKeySpecを構築し、そのSpecから秘密鍵を生成します。</target>
        </trans-unit>
        <trans-unit id="15b906813731146468dfa298adc84c9da494f96f" translate="yes" xml:space="preserve">
          <source>Type.PUBLIC/&quot;X.509&quot; - gets a KeyFactory instance for the key algorithm, constructs an X509EncodedKeySpec with the encoded key bytes, and generates a public key from the spec</source>
          <target state="translated">Type.PUBLIC/&quot;X.509&quot;-鍵アルゴリズム用のKeyFactoryインスタンスを取得し、エンコードされた鍵バイトでX509EncodedKeySpecを構築し、そのSpecから公開鍵を生成します。</target>
        </trans-unit>
        <trans-unit id="dcadb89f135202adf7519224af015ac2f9066835" translate="yes" xml:space="preserve">
          <source>Type.SECRET/&quot;RAW&quot; - returns a SecretKeySpec object constructed using encoded key bytes and algorithm</source>
          <target state="translated">Type.SECRET/&quot;RAW&quot;-エンコードされたキーバイトとアルゴリズムを用いて構築された SecretKeySpec オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="922b714e8a60a9b8371bbfa4e5aa962ee018783d" translate="yes" xml:space="preserve">
          <source>Type.getTypeName()</source>
          <target state="translated">Type.getTypeName()</target>
        </trans-unit>
        <trans-unit id="986f418c6113d611bb2033fa15cb77dbd9b53b9b" translate="yes" xml:space="preserve">
          <source>TypeBasedGuardingDynamicLinker</source>
          <target state="translated">TypeBasedGuardingDynamicLinker</target>
        </trans-unit>
        <trans-unit id="81f971b9f28b2fb10c6304d60f7807d14e5f58d8" translate="yes" xml:space="preserve">
          <source>TypeCastTree</source>
          <target state="translated">TypeCastTree</target>
        </trans-unit>
        <trans-unit id="d08b1cab007be25f00b4001e09f2ae7f842a9bf9" translate="yes" xml:space="preserve">
          <source>TypeComponent</source>
          <target state="translated">TypeComponent</target>
        </trans-unit>
        <trans-unit id="b0d97ee04d6c48af8ecd556fb3fa4513100e9243" translate="yes" xml:space="preserve">
          <source>TypeDeclSnippet</source>
          <target state="translated">TypeDeclSnippet</target>
        </trans-unit>
        <trans-unit id="79292189b5c0a7b6de3bda58667e26472826017e" translate="yes" xml:space="preserve">
          <source>TypeDescriptor</source>
          <target state="translated">TypeDescriptor</target>
        </trans-unit>
        <trans-unit id="c1b9a00d5c9fe3e2f619f664a098f04d08687ef3" translate="yes" xml:space="preserve">
          <source>TypeElement</source>
          <target state="translated">TypeElement</target>
        </trans-unit>
        <trans-unit id="b64a644106759ff55f140758a0f7850c79005783" translate="yes" xml:space="preserve">
          <source>TypeElement.getEnclosedElements()</source>
          <target state="translated">TypeElement.getEnclosedElements()</target>
        </trans-unit>
        <trans-unit id="556a6c6cf67bd5e900e2b331b74ddb186847980d" translate="yes" xml:space="preserve">
          <source>TypeElement.getEnclosingElement()</source>
          <target state="translated">TypeElement.getEnclosingElement()</target>
        </trans-unit>
        <trans-unit id="bc967cc0397f942223b06f856d7b96af8640be4c" translate="yes" xml:space="preserve">
          <source>TypeElement.getInterfaces()</source>
          <target state="translated">TypeElement.getInterfaces()</target>
        </trans-unit>
        <trans-unit id="03403f85e463d34632b915bd485058f7373ea9eb" translate="yes" xml:space="preserve">
          <source>TypeElement.getNestingKind()</source>
          <target state="translated">TypeElement.getNestingKind()</target>
        </trans-unit>
        <trans-unit id="c30bd2e348d148383d0794372f6001eca19f1b6e" translate="yes" xml:space="preserve">
          <source>TypeElement.getQualifiedName()</source>
          <target state="translated">TypeElement.getQualifiedName()</target>
        </trans-unit>
        <trans-unit id="a705bbcbc2931abff53dbe6d64843f2eb6083b7d" translate="yes" xml:space="preserve">
          <source>TypeElement.getSimpleName()</source>
          <target state="translated">TypeElement.getSimpleName()</target>
        </trans-unit>
        <trans-unit id="435931ca94a8e7a74c66397bc58303d12f4608be" translate="yes" xml:space="preserve">
          <source>TypeElement.getSuperclass()</source>
          <target state="translated">TypeElement.getSuperclass()</target>
        </trans-unit>
        <trans-unit id="23289c0ae2106e74322b0223e0e821b8ba78c6f8" translate="yes" xml:space="preserve">
          <source>TypeElement.getTypeParameters()</source>
          <target state="translated">TypeElement.getTypeParameters()</target>
        </trans-unit>
        <trans-unit id="e31aa519e181d0d28623b42b4c2d9e559f68b9af" translate="yes" xml:space="preserve">
          <source>TypeInfo</source>
          <target state="translated">TypeInfo</target>
        </trans-unit>
        <trans-unit id="cca3ca2a6c4b6a01daff7944c2c1b05c200066c0" translate="yes" xml:space="preserve">
          <source>TypeInfoProvider</source>
          <target state="translated">TypeInfoProvider</target>
        </trans-unit>
        <trans-unit id="4d0bad4e8d6be3bb83a36ca4e24be27b0caed088" translate="yes" xml:space="preserve">
          <source>TypeKind</source>
          <target state="translated">TypeKind</target>
        </trans-unit>
        <trans-unit id="023690b532be6d5660bf06163ead725dc9988193" translate="yes" xml:space="preserve">
          <source>TypeKind.isPrimitive()</source>
          <target state="translated">TypeKind.isPrimitive()</target>
        </trans-unit>
        <trans-unit id="ceafbe7a47ac4951f0ccfc31a6fa456bfc90b450" translate="yes" xml:space="preserve">
          <source>TypeKind.valueOf()</source>
          <target state="translated">TypeKind.valueOf()</target>
        </trans-unit>
        <trans-unit id="1f5e07b79978ad60eb9bd84ff3c264917a686d61" translate="yes" xml:space="preserve">
          <source>TypeKind.values()</source>
          <target state="translated">TypeKind.values()</target>
        </trans-unit>
        <trans-unit id="d52179e1f57e2ab0ae6a5cd24538eeeeaf655921" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor14</source>
          <target state="translated">TypeKindVisitor14</target>
        </trans-unit>
        <trans-unit id="e93e42fbad68836a1d5ae1990b903da543837054" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6</source>
          <target state="translated">TypeKindVisitor6</target>
        </trans-unit>
        <trans-unit id="29818e0ef0e0b101e77e7a4ad562e73f643500d5" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitNoType()</source>
          <target state="translated">TypeKindVisitor6.visitNoType()</target>
        </trans-unit>
        <trans-unit id="b1adf8c1e39ca0c87e92a181504ab90673aa6163" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitNoTypeAsNone()</source>
          <target state="translated">TypeKindVisitor6.visitNoTypeAsNone()</target>
        </trans-unit>
        <trans-unit id="263d4ba34a6c279c498c27503925db92866f684c" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitNoTypeAsPackage()</source>
          <target state="translated">TypeKindVisitor6.visitNoTypeAsPackage()</target>
        </trans-unit>
        <trans-unit id="c89e8714fabbbc2b7e76fd4de8f39a9e5a98f037" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitNoTypeAsVoid()</source>
          <target state="translated">TypeKindVisitor6.visitNoTypeAsVoid()</target>
        </trans-unit>
        <trans-unit id="ca8111277455079790839208148e76690fa72f1a" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitive()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitive()</target>
        </trans-unit>
        <trans-unit id="7a14bcf9f18f2f6a7c790ba144ce2ff1c8a6791f" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsBoolean()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsBoolean()</target>
        </trans-unit>
        <trans-unit id="c30ff91000c210630c7370b3a51664daeefbb22d" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsByte()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsByte()</target>
        </trans-unit>
        <trans-unit id="dfd902b66123a7dcc18ee50e5cccc35635252524" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsChar()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsChar()</target>
        </trans-unit>
        <trans-unit id="fb55ec4494cd19d7a488990f63db5ab09f5dfaf2" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsDouble()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsDouble()</target>
        </trans-unit>
        <trans-unit id="c7efd0276b7557b398a87fe8b0248a82887324d7" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsFloat()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsFloat()</target>
        </trans-unit>
        <trans-unit id="ee2478b126427392ca8446c7cd41165c75858cbc" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsInt()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsInt()</target>
        </trans-unit>
        <trans-unit id="687e0c3141db3901bdf44a33eed5ed93e0e0086a" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsLong()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsLong()</target>
        </trans-unit>
        <trans-unit id="ace897553f996f09a086d5420408990571d11a7c" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor6.visitPrimitiveAsShort()</source>
          <target state="translated">TypeKindVisitor6.visitPrimitiveAsShort()</target>
        </trans-unit>
        <trans-unit id="b8824112ecd54db42a3ad0aebbd8d4aedb80ca07" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor7</source>
          <target state="translated">TypeKindVisitor7</target>
        </trans-unit>
        <trans-unit id="3ee3f96aa4cc0d570047b984f8a50690278c62cd" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor7.visitUnion()</source>
          <target state="translated">TypeKindVisitor7.visitUnion()</target>
        </trans-unit>
        <trans-unit id="8bc2fa014d3f6f5521e608186d6bd02d29585e13" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor8</source>
          <target state="translated">TypeKindVisitor8</target>
        </trans-unit>
        <trans-unit id="8786b5fc0cd948201b7e8e2de386108a15afd543" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor8.visitIntersection()</source>
          <target state="translated">TypeKindVisitor8.visitIntersection()</target>
        </trans-unit>
        <trans-unit id="750000ddb22533afe5ad7ee759c5bf42c3b7d59f" translate="yes" xml:space="preserve">
          <source>TypeKindVisitor9</source>
          <target state="translated">TypeKindVisitor9</target>
        </trans-unit>
        <trans-unit id="722d9d65e4cd952d0238c827b82facc7fe84912f" translate="yes" xml:space="preserve">
          <source>TypeMirror</source>
          <target state="translated">TypeMirror</target>
        </trans-unit>
        <trans-unit id="5ff9038187ec4605eaabd92b366b0a4c3a8bf8d7" translate="yes" xml:space="preserve">
          <source>TypeMirror.accept()</source>
          <target state="translated">TypeMirror.accept()</target>
        </trans-unit>
        <trans-unit id="d891e78ad8b0895fa35fc937d6b8a3b0152935b3" translate="yes" xml:space="preserve">
          <source>TypeMirror.equals()</source>
          <target state="translated">TypeMirror.equals()</target>
        </trans-unit>
        <trans-unit id="db041740887a264fd31f915f9d084c08f10ec941" translate="yes" xml:space="preserve">
          <source>TypeMirror.getKind()</source>
          <target state="translated">TypeMirror.getKind()</target>
        </trans-unit>
        <trans-unit id="a576f524851b4db32a9820cb6c5bc3a181786af6" translate="yes" xml:space="preserve">
          <source>TypeMirror.hashCode()</source>
          <target state="translated">TypeMirror.hashCode()</target>
        </trans-unit>
        <trans-unit id="91fe331ed89f52e8a8b5c6d525fe66535a64a629" translate="yes" xml:space="preserve">
          <source>TypeMirror.toString()</source>
          <target state="translated">TypeMirror.toString()</target>
        </trans-unit>
        <trans-unit id="9e430f17eb96d796bf49c46584b98c497f8ae559" translate="yes" xml:space="preserve">
          <source>TypeName</source>
          <target state="translated">TypeName</target>
        </trans-unit>
        <trans-unit id="52a705d1c7165c704537e82d674a10a3224930fd" translate="yes" xml:space="preserve">
          <source>TypeNotPresentException</source>
          <target state="translated">TypeNotPresentException</target>
        </trans-unit>
        <trans-unit id="e04827ae30cd68204292b58743e61d1ed65b8a16" translate="yes" xml:space="preserve">
          <source>TypeNotPresentException.typeName()</source>
          <target state="translated">TypeNotPresentException.typeName()</target>
        </trans-unit>
        <trans-unit id="727b7f929ccf50c30982875f9e48598c393efef3" translate="yes" xml:space="preserve">
          <source>TypeParameterElement</source>
          <target state="translated">TypeParameterElement</target>
        </trans-unit>
        <trans-unit id="c960aaf11c27121321d2c1d95a2625ac340b8e25" translate="yes" xml:space="preserve">
          <source>TypeParameterElement.getBounds()</source>
          <target state="translated">TypeParameterElement.getBounds()</target>
        </trans-unit>
        <trans-unit id="1906530225ac0cad013869d6611bb815974f1d56" translate="yes" xml:space="preserve">
          <source>TypeParameterElement.getEnclosingElement()</source>
          <target state="translated">TypeParameterElement.getEnclosingElement()</target>
        </trans-unit>
        <trans-unit id="6fc1b0383b2f21cff4d222c1c2afc5014cec15cf" translate="yes" xml:space="preserve">
          <source>TypeParameterElement.getGenericElement()</source>
          <target state="translated">TypeParameterElement.getGenericElement()</target>
        </trans-unit>
        <trans-unit id="05d61c3e960cc560e3fb775cb7e3393779e24416" translate="yes" xml:space="preserve">
          <source>TypeParameterTree</source>
          <target state="translated">TypeParameterTree</target>
        </trans-unit>
        <trans-unit id="8a86204b396a833b2a197df0c26149f6aa902365" translate="yes" xml:space="preserve">
          <source>TypeUtilities</source>
          <target state="translated">TypeUtilities</target>
        </trans-unit>
        <trans-unit id="1382a88c5310fa44afdc93ad2337d61cbbf8897c" translate="yes" xml:space="preserve">
          <source>TypeVariable</source>
          <target state="translated">TypeVariable</target>
        </trans-unit>
        <trans-unit id="0625b00c19877f1f2e82d82b52ab4cce23556b13" translate="yes" xml:space="preserve">
          <source>TypeVariable is the common superinterface for type variables of kinds.</source>
          <target state="translated">TypeVariableは、種類の型変数のための共通のスーパーインターフェースです。</target>
        </trans-unit>
        <trans-unit id="bd47e3f07cb3692d1c38a4f5212749aafef3341d" translate="yes" xml:space="preserve">
          <source>TypeVariable is the common superinterface for type variables of kinds. A type variable is created the first time it is needed by a reflective method, as specified in this package. If a type variable t is referenced by a type (i.e, class, interface or annotation type) T, and T is declared by the nth enclosing class of T (see JLS 8.1.2), then the creation of t requires the resolution (see JVMS 5) of the ith enclosing class of T, for i = 0 to n, inclusive. Creating a type variable must not cause the creation of its bounds. Repeated creation of a type variable has no effect.</source>
          <target state="translated">TypeVariable は、種類の型変数のための共通のスーパーインターフェースです。型変数は、このパッケージで指定されているように、反射メソッドによって最初に必要とされるときに作成されます。型変数 t が型(すなわち、クラス、インタフェース、注釈型)T によって参照され、T が T の n 番目の包含クラスによって宣言されている場合(JLS 8.1.2 を参照)、t の作成には、i=0 から n までの間で、T の i 番目の包含クラスの解決(JVMS 5 を参照)が必要となります。型変数の作成は、その境界の作成を引き起こしてはなりません。型変数を繰り返し作成しても何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="53f8e1483f0754d9e109f4b6d2212c7e0ded41e8" translate="yes" xml:space="preserve">
          <source>TypeVariable.asElement()</source>
          <target state="translated">TypeVariable.asElement()</target>
        </trans-unit>
        <trans-unit id="02efb8237ca64580805be12b7533aa15a1136243" translate="yes" xml:space="preserve">
          <source>TypeVariable.getAnnotatedBounds()</source>
          <target state="translated">TypeVariable.getAnnotatedBounds()</target>
        </trans-unit>
        <trans-unit id="b9199d614efc47488f5aeb4d1cba227bdf89f957" translate="yes" xml:space="preserve">
          <source>TypeVariable.getBounds()</source>
          <target state="translated">TypeVariable.getBounds()</target>
        </trans-unit>
        <trans-unit id="bd477ab31bb6bd5d32910a1e49aa5214ee95b4e5" translate="yes" xml:space="preserve">
          <source>TypeVariable.getGenericDeclaration()</source>
          <target state="translated">TypeVariable.getGenericDeclaration()</target>
        </trans-unit>
        <trans-unit id="2d79f2287b2cb839b31eda576b3e66bcfdd31865" translate="yes" xml:space="preserve">
          <source>TypeVariable.getLowerBound()</source>
          <target state="translated">TypeVariable.getLowerBound()</target>
        </trans-unit>
        <trans-unit id="69a7ffd4c332358d063d5f7c16a6723e156b1cb9" translate="yes" xml:space="preserve">
          <source>TypeVariable.getName()</source>
          <target state="translated">TypeVariable.getName()</target>
        </trans-unit>
        <trans-unit id="c4e65862937f0fd6bb6994952b6ff637fbe3192b" translate="yes" xml:space="preserve">
          <source>TypeVariable.getUpperBound()</source>
          <target state="translated">TypeVariable.getUpperBound()</target>
        </trans-unit>
        <trans-unit id="138dd7e4f4ddfae7cd580ff8a959c44c045ac7b0" translate="yes" xml:space="preserve">
          <source>TypeVisitor</source>
          <target state="translated">TypeVisitor</target>
        </trans-unit>
        <trans-unit id="85f77c8f09b72001be291ac6bb020d543cc7aaca" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visit()</source>
          <target state="translated">TypeVisitor.visit()</target>
        </trans-unit>
        <trans-unit id="950da07f4dee6a891ffdc3a2705e48a919a48af1" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitArray()</source>
          <target state="translated">TypeVisitor.visitArray()</target>
        </trans-unit>
        <trans-unit id="f63f6225b784b2e1d45baf5671f011975645eedc" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitDeclared()</source>
          <target state="translated">TypeVisitor.visitDeclared()</target>
        </trans-unit>
        <trans-unit id="8a8537178dfddc00d50ddb0a6252813875dd7155" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitError()</source>
          <target state="translated">TypeVisitor.visitError()</target>
        </trans-unit>
        <trans-unit id="070e9ab5efeeabd2e8d10c4cdc8ea67203380085" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitExecutable()</source>
          <target state="translated">TypeVisitor.visitExecutable()</target>
        </trans-unit>
        <trans-unit id="ee46cfd1d5521db0f52a433b792445f0409700f1" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitIntersection()</source>
          <target state="translated">TypeVisitor.visitIntersection()</target>
        </trans-unit>
        <trans-unit id="b79b61306db2c372ca0510717ee2e084d2f6ab32" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitNoType()</source>
          <target state="translated">TypeVisitor.visitNoType()</target>
        </trans-unit>
        <trans-unit id="c81264a6e7c64a90524036038ec07a7a439645c4" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitNull()</source>
          <target state="translated">TypeVisitor.visitNull()</target>
        </trans-unit>
        <trans-unit id="a15341fd876101cd6711165b1632a0811cee3a20" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitPrimitive()</source>
          <target state="translated">TypeVisitor.visitPrimitive()</target>
        </trans-unit>
        <trans-unit id="1dc019ede96c158711b7f14a6ccbcb92cd4cb275" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitTypeVariable()</source>
          <target state="translated">TypeVisitor.visitTypeVariable()</target>
        </trans-unit>
        <trans-unit id="99a4d3d3c10f041a4c35d7a26f873cfeac49e5ae" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitUnion()</source>
          <target state="translated">TypeVisitor.visitUnion()</target>
        </trans-unit>
        <trans-unit id="e62d0fa3a69f58b973d8f3152d55fcb4d81ba713" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitUnknown()</source>
          <target state="translated">TypeVisitor.visitUnknown()</target>
        </trans-unit>
        <trans-unit id="fd6b2cd0c518cc165b4f8f66612f31456baa0149" translate="yes" xml:space="preserve">
          <source>TypeVisitor.visitWildcard()</source>
          <target state="translated">TypeVisitor.visitWildcard()</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="d004e1e4b2a9feed4ab7038a839438ad26b2fdee" translate="yes" xml:space="preserve">
          <source>Types and hierarchies of packages comprising a &lt;span id=&quot;Javalanguagemodel&quot;&gt;Java language model&lt;/span&gt;, a model of the declarations and types of the Java programming language. The members of this package and its subpackages are for use in language modeling and language processing tasks and APIs including, but not limited to, the &lt;a href=&quot;../../annotation/processing/package-summary&quot;&gt;annotation processing&lt;/a&gt; framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20840bd724900976291e2e1d19395680bf2ce1e5" translate="yes" xml:space="preserve">
          <source>Types and hierarchies of packages comprising a Java language model, a model of the declarations and types of the Java programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000dafb254d0e804a33aa2922c4e5a5cb70aef05" translate="yes" xml:space="preserve">
          <source>Types of &lt;a href=&quot;memorypoolmxbean&quot;&gt;&lt;code&gt;memory pools&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;memorypoolmxbean&quot;&gt; &lt;code&gt;memory pools&lt;/code&gt; &lt;/a&gt;タイプ。</target>
        </trans-unit>
        <trans-unit id="3acfbb386d055f0ad6c6a635a2fc6270536ecd13" translate="yes" xml:space="preserve">
          <source>Types of bootstrap methods</source>
          <target state="translated">ブートストラップメソッドの種類</target>
        </trans-unit>
        <trans-unit id="418a4179b6ddeec6a531a348f7b4974385430d62" translate="yes" xml:space="preserve">
          <source>Types should be compared using the utility methods in &lt;a href=&quot;../util/types&quot;&gt;&lt;code&gt;Types&lt;/code&gt;&lt;/a&gt;. There is no guarantee that any particular type will always be represented by the same object.</source>
          <target state="translated">タイプは、&lt;a href=&quot;../util/types&quot;&gt; &lt;code&gt;Types&lt;/code&gt; &lt;/a&gt;のユーティリティメソッドを使用して比較する必要があります。特定のタイプが常に同じオブジェクトによって表されるという保証はありません。</target>
        </trans-unit>
        <trans-unit id="8220da2395cbfc761a19f5ca198c14679339c682" translate="yes" xml:space="preserve">
          <source>Types.asElement()</source>
          <target state="translated">Types.asElement()</target>
        </trans-unit>
        <trans-unit id="db52ef7f7c75252d3808023cc21bb5abf4bd3ee1" translate="yes" xml:space="preserve">
          <source>Types.asMemberOf()</source>
          <target state="translated">Types.asMemberOf()</target>
        </trans-unit>
        <trans-unit id="17e90de4ae399d6e6bb2f6d195302e439560b448" translate="yes" xml:space="preserve">
          <source>Types.boxedClass()</source>
          <target state="translated">Types.boxedClass()</target>
        </trans-unit>
        <trans-unit id="a98adefefd3f0a12bd2b8a5a2b42d54383902a60" translate="yes" xml:space="preserve">
          <source>Types.capture()</source>
          <target state="translated">Types.capture()</target>
        </trans-unit>
        <trans-unit id="8a7e05a41446973611bd347a8f958db745c41342" translate="yes" xml:space="preserve">
          <source>Types.contains()</source>
          <target state="translated">Types.contains()</target>
        </trans-unit>
        <trans-unit id="d6165ccf668177971997e9ec543238a1834a737a" translate="yes" xml:space="preserve">
          <source>Types.directSupertypes()</source>
          <target state="translated">Types.directSupertypes()</target>
        </trans-unit>
        <trans-unit id="57eaddf0baaecc7cfda1ccacce29deacddabd942" translate="yes" xml:space="preserve">
          <source>Types.erasure()</source>
          <target state="translated">Types.erasure()</target>
        </trans-unit>
        <trans-unit id="18707c83c605fac0d25fd1e0c6b603f48c79bf1a" translate="yes" xml:space="preserve">
          <source>Types.getArrayType()</source>
          <target state="translated">Types.getArrayType()</target>
        </trans-unit>
        <trans-unit id="d150e05f8c46d06a1ed28723bda2a56ff359a1d1" translate="yes" xml:space="preserve">
          <source>Types.getDeclaredType()</source>
          <target state="translated">Types.getDeclaredType()</target>
        </trans-unit>
        <trans-unit id="1a6b0cb731c5c2681831057524e2944c3daf1d4a" translate="yes" xml:space="preserve">
          <source>Types.getNoType()</source>
          <target state="translated">Types.getNoType()</target>
        </trans-unit>
        <trans-unit id="7fffda90e7c9be2459e97b02cf86bebd69e620d2" translate="yes" xml:space="preserve">
          <source>Types.getNullType()</source>
          <target state="translated">Types.getNullType()</target>
        </trans-unit>
        <trans-unit id="165368d1d4affa266ad19e5d6ec1fb0a3b87b788" translate="yes" xml:space="preserve">
          <source>Types.getPrimitiveType()</source>
          <target state="translated">Types.getPrimitiveType()</target>
        </trans-unit>
        <trans-unit id="db0d4ada18bb9ba24f46124427704fd1849ffb3f" translate="yes" xml:space="preserve">
          <source>Types.getWildcardType()</source>
          <target state="translated">Types.getWildcardType()</target>
        </trans-unit>
        <trans-unit id="69b739efe9dae818854f6e591c6b3802740397c0" translate="yes" xml:space="preserve">
          <source>Types.isAssignable()</source>
          <target state="translated">Types.isAssignable()</target>
        </trans-unit>
        <trans-unit id="9b4006a927e8e1a8767f9c70bd27b86ce8ca03a8" translate="yes" xml:space="preserve">
          <source>Types.isSameType()</source>
          <target state="translated">Types.isSameType()</target>
        </trans-unit>
        <trans-unit id="75fe72db59db66cd0b499e600304400aac8ed891" translate="yes" xml:space="preserve">
          <source>Types.isSubsignature()</source>
          <target state="translated">Types.isSubsignature()</target>
        </trans-unit>
        <trans-unit id="321dcd6539aaa7bcea5e1210c364a6e8185a5a0c" translate="yes" xml:space="preserve">
          <source>Types.isSubtype()</source>
          <target state="translated">Types.isSubtype()</target>
        </trans-unit>
        <trans-unit id="3087fe2df77509ff542e831fb9ce0a8c0dd03340" translate="yes" xml:space="preserve">
          <source>Types.unboxedType()</source>
          <target state="translated">Types.unboxedType()</target>
        </trans-unit>
        <trans-unit id="5070c31b23373b6b71399f14819893c424722db5" translate="yes" xml:space="preserve">
          <source>Typesafe enumeration for an HTML tag.</source>
          <target state="translated">HTMLタグのタイプセーフ列挙。</target>
        </trans-unit>
        <trans-unit id="5c18ebd5b89259c2ef7467807003692d1c7b1997" translate="yes" xml:space="preserve">
          <source>Typesafe enumeration for an HTML tag. Although the set of HTML tags is a closed set, we have left the set open so that people can add their own tag types to their custom parser and still communicate to the reader.</source>
          <target state="translated">HTMLタグのタイプセーフ列挙。HTMLタグのセットはクローズドなセットですが、カスタムパーサに独自のタグタイプを追加しても読者との通信ができるように、セットはオープンなままにしています。</target>
        </trans-unit>
        <trans-unit id="f9c14fcf11cec686c23544b61ae8e945b8987811" translate="yes" xml:space="preserve">
          <source>Typesafe enumeration for byte orders</source>
          <target state="translated">バイトオーダーのためのタイプセーフ列挙</target>
        </trans-unit>
        <trans-unit id="90d6e038cc2348ec9ea9c7964cb915d6af9b512f" translate="yes" xml:space="preserve">
          <source>Typesafe enumeration representing an HTML attribute.</source>
          <target state="translated">HTML属性を表すタイプセーフの列挙。</target>
        </trans-unit>
        <trans-unit id="318ac366c231a84014a3fcd2405ee25e46686356" translate="yes" xml:space="preserve">
          <source>Typical IPv6 values would be 128 (::1/128) or 10 (fe80::203:baff:fe27:1243/10)</source>
          <target state="translated">典型的な IPv6 の値は 128 (::1/128)か 10 (fe80::203:baff:fe27:1243/10)です。</target>
        </trans-unit>
        <trans-unit id="408a8910f401eef2d04111a0e4f9e18ae7c515fc" translate="yes" xml:space="preserve">
          <source>Typical Swing applications do processing in response to an event generated from a user gesture. For example, clicking on a &lt;code&gt;JButton&lt;/code&gt; notifies all &lt;code&gt;ActionListeners&lt;/code&gt; added to the &lt;code&gt;JButton&lt;/code&gt;. As all events generated from a user gesture are dispatched on the event dispatching thread, most developers are not impacted by the restriction.</source>
          <target state="translated">一般的なSwingアプリケーションは、ユーザージェスチャから生成されたイベントに応答して処理を行います。たとえば、上のクリック &lt;code&gt;JButton&lt;/code&gt; 、すべての通知 &lt;code&gt;ActionListeners&lt;/code&gt; に追加 &lt;code&gt;JButton&lt;/code&gt; 。ユーザージェスチャから生成されたすべてのイベントはイベントディスパッチスレッドでディスパッチされるため、ほとんどの開発者は制限の影響を受けません。</target>
        </trans-unit>
        <trans-unit id="069f410a31514fbf132278cac286b5140b1f9b9b" translate="yes" xml:space="preserve">
          <source>Typical callers of &lt;code&gt;SecureRandom&lt;/code&gt; invoke the following methods to retrieve random bytes:</source>
          <target state="translated">&lt;code&gt;SecureRandom&lt;/code&gt; の一般的な呼び出し元は、次のメソッドを呼び出してランダムバイトを取得します。</target>
        </trans-unit>
        <trans-unit id="1b366285be7b47faacd4c4f7eadf81503801a02d" translate="yes" xml:space="preserve">
          <source>Typical callers of SecureRandom invoke the following methods to retrieve random bytes:</source>
          <target state="translated">SecureRandom の一般的な呼び出し元は、ランダムバイトを取得するために以下のメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="745acda069b7dd6df062268fa4a9fbf083c6b5c1" translate="yes" xml:space="preserve">
          <source>Typical causes include not being able to map a string class name to a Class object, not being able to resolve a string method name, or specifying a method name that has the wrong type signature for its intended use.</source>
          <target state="translated">典型的な原因としては、文字列のクラス名をクラス・オブジェクトにマッピングできない、文字列のメソッド名を解決できない、または使用目的のために間違った型シグネチャを持つメソッド名を指定するなどがあります。</target>
        </trans-unit>
        <trans-unit id="6d09f9193879e5b47f46ee5ca152f3019da4bf67" translate="yes" xml:space="preserve">
          <source>Typical clients of this class first set up the syntax tables and then sit in a loop calling nextToken to parse successive tokens until TT_EOF is returned.</source>
          <target state="translated">このクラスの典型的なクライアントは、最初に構文テーブルをセットアップしてから、TT_EOF が返されるまでの間、連続するトークンを解析するために nextToken を呼び出すループに座っています。</target>
        </trans-unit>
        <trans-unit id="2ecae194561833029542c22333813db0b374a9fc" translate="yes" xml:space="preserve">
          <source>Typical return values might include &lt;code&gt;InputStream.class&lt;/code&gt; or &lt;code&gt;URL.class&lt;/code&gt;, but any class may be used.</source>
          <target state="translated">一般的な戻り値には &lt;code&gt;InputStream.class&lt;/code&gt; または &lt;code&gt;URL.class&lt;/code&gt; が含まれますが、任意のクラスを使用できます。</target>
        </trans-unit>
        <trans-unit id="3617e7faa01f94a7aa656c678fe2abcdc4c6f0d4" translate="yes" xml:space="preserve">
          <source>Typical return values might include &lt;code&gt;OutputStream.class&lt;/code&gt; or &lt;code&gt;File.class&lt;/code&gt;, but any class may be used.</source>
          <target state="translated">一般的な戻り値には、 &lt;code&gt;OutputStream.class&lt;/code&gt; または &lt;code&gt;File.class&lt;/code&gt; が含まれますが、任意のクラスを使用できます。</target>
        </trans-unit>
        <trans-unit id="f5923579a2f763bc4a1cbed46ea28e073e3a0b38" translate="yes" xml:space="preserve">
          <source>Typical usage is something like this:</source>
          <target state="translated">典型的な使い方はこんな感じです。</target>
        </trans-unit>
        <trans-unit id="51cbca273bef572c4de516645906d6baa6d6cb8e" translate="yes" xml:space="preserve">
          <source>Typical usage would be for presentation to a user for selection of a particular family name. An application can then specify this name when creating a font, in conjunction with a style, such as bold or italic, giving the font system flexibility in choosing its own best match among multiple fonts in the same font family.</source>
          <target state="translated">典型的な使用法は、特定のファミリ名を選択するためにユーザーに提示することでしょう。アプ リ ケーシ ョ ンは、 フ ォ ン ト を作成す る 際に こ の名前を、 太字や斜体な ど の ス タ イ ル と 組み合わせて指定す る こ と がで き 、 フ ォ ン ト シ ス テ ムは同じ フ ォ ン ト フ ァ ミ リ 内の複数の フ ォ ン ト の中か ら 独自の最適な フ ォ ン ト を柔軟に選択す る こ と が可能です。</target>
        </trans-unit>
        <trans-unit id="692c6ce74ab5a39f646b5b2b823bae5efe92dcea" translate="yes" xml:space="preserve">
          <source>Typical ways to request a KeyStore object include relying on the default type and providing a specific keystore type.</source>
          <target state="translated">KeyStoreオブジェクトを要求する典型的な方法としては、デフォルトの型に依存する方法と、特定のKeyStore型を提供する方法があります。</target>
        </trans-unit>
        <trans-unit id="d961e55701c1de53cd0f2ff081f21b19397de4a4" translate="yes" xml:space="preserve">
          <source>Typical ways to request a KeyStore object include specifying an existing keystore file, relying on the default type and providing a specific keystore type.</source>
          <target state="translated">KeyStoreオブジェクトを要求する典型的な方法としては、既存のキーストアファイルを指定する方法、デフォルトのタイプに依存する方法、特定のキーストアタイプを提供する方法などがあります。</target>
        </trans-unit>
        <trans-unit id="721b8c16db5dc0f9c361e43e504f2b76855d14fe" translate="yes" xml:space="preserve">
          <source>Typically INFO messages will be written to the console or its equivalent. So the INFO level should only be used for reasonably significant messages that will make sense to end users and system administrators. This level is initialized to &lt;code&gt;800&lt;/code&gt;.</source>
          <target state="translated">通常、INFOメッセージはコンソールまたは同等のものに書き込まれます。したがって、INFOレベルは、エンドユーザーとシステム管理者にとって意味のあるかなり重要なメッセージにのみ使用する必要があります。このレベルは &lt;code&gt;800&lt;/code&gt; に初期化されます。</target>
        </trans-unit>
        <trans-unit id="9fc4eb90219c169f9add22cc101b8b40520e419a" translate="yes" xml:space="preserve">
          <source>Typically an edit is killed when it is consolidated by another edit's &lt;code&gt;addEdit&lt;/code&gt; or &lt;code&gt;replaceEdit&lt;/code&gt; method, or when it is dequeued from an &lt;code&gt;UndoManager&lt;/code&gt;.</source>
          <target state="translated">通常、編集は、別の編集の &lt;code&gt;addEdit&lt;/code&gt; または &lt;code&gt;replaceEdit&lt;/code&gt; メソッドによって統合されたとき、または &lt;code&gt;UndoManager&lt;/code&gt; からデキューされたときに強制終了されます。</target>
        </trans-unit>
        <trans-unit id="ecd2d77fc88fa9db518f0ce9afc83ea4d704d76c" translate="yes" xml:space="preserve">
          <source>Typically characters correspond to one char, but in certain languages this is not the case. The mask is on a per character basis, and will thus adjust to fit as many chars as are needed.</source>
          <target state="translated">通常、文字は1文字に対応しますが、言語によってはそうではありません。マスクは文字ごとに設定されているため、必要な文字数に合わせて調整されます。</target>
        </trans-unit>
        <trans-unit id="2734d91430975e9303efb7386525c21798b51d92" translate="yes" xml:space="preserve">
          <source>Typically each logging Handler will have a Formatter associated with it. The Formatter takes a LogRecord and converts it to a string.</source>
          <target state="translated">通常、各ロギングハンドラはそれに関連付けられた Formatter を持ちます。Formatter は LogRecord を受け取り、それを文字列に変換します。</target>
        </trans-unit>
        <trans-unit id="e1e682834d18cf8f30fd9a3ed95c08b1f63f37ab" translate="yes" xml:space="preserve">
          <source>Typically the integer values are related to the floating point values in such a way that the integer 0 is equated to the floating point value 0.0 and the integer 2^&lt;em&gt;n&lt;/em&gt;-1 (where &lt;em&gt;n&lt;/em&gt; is the number of bits in the representation) is equated to 1.0. For 8-bit representations, this means that 0x00 represents 0.0 and 0xff represents 1.0.</source>
          <target state="translated">通常、整数値は、整数0が浮動小数点値0.0に等しく、整数2 ^ &lt;em&gt;n&lt;/em&gt; -1（&lt;em&gt;n&lt;/em&gt;は表現のビット数）が次のように等しくなるように、浮動小数点値に関連付けられます。1.0。8ビット表現の場合、これは0x00が0.0を表し、0xffが1.0を表すことを意味します。</target>
        </trans-unit>
        <trans-unit id="dcfb0d2563482618c96dbe72cc919b03a2b95aee" translate="yes" xml:space="preserve">
          <source>Typically the packer engine is used by application developers to deploy or host JAR files on a website. The unpacker engine is used by deployment applications to transform the byte-stream back to JAR format.</source>
          <target state="translated">一般的に、パッカーエンジンはアプリケーション開発者がウェブサイト上に JAR ファイルをデプロイしたりホストしたりするために使用されます。アンパッカーエンジンは、デプロイメントアプリケーションでバイトストリームをJARフォーマットに戻すために使用されます。</target>
        </trans-unit>
        <trans-unit id="f5a4cad2b44eee93ff8dc13b9a02e9632765378e" translate="yes" xml:space="preserve">
          <source>Typically the receiver is already in the queue of a &lt;code&gt;UndoManager&lt;/code&gt; (or other &lt;code&gt;UndoableEditListener&lt;/code&gt;), and is being given a chance to incorporate &lt;code&gt;anEdit&lt;/code&gt; rather than letting it be added to the queue in turn.</source>
          <target state="translated">通常、レシーバーはすでに &lt;code&gt;UndoManager&lt;/code&gt; （または他の &lt;code&gt;UndoableEditListener&lt;/code&gt; ）のキューにあり、順番にキューに追加するのではなく、 &lt;code&gt;anEdit&lt;/code&gt; を組み込む機会が与えられています。</target>
        </trans-unit>
        <trans-unit id="7988f75a4b590c999ac4f38cb8abbc11bb913533" translate="yes" xml:space="preserve">
          <source>Typically there will be only one document structure, but the interface supports building an arbitrary number of structural projections over the text data. The document can have multiple root elements to support multiple document structures. Some examples might be:</source>
          <target state="translated">通常は一つの文書構造しかありませんが、インターフェイスは、テキストデータの上に任意の数の構造投影を構築することをサポートしています。文書は、複数の文書構造をサポートするために、複数のルート要素を持つことができます。いくつかの例があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="0eab352af6f44c80747bf79aa2d064c4f2be1fac" translate="yes" xml:space="preserve">
          <source>Typically this method is called from the &lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;stop&lt;/code&gt;, to consult loaders that appear before it in the &lt;code&gt;ClassLoaderRepository&lt;/code&gt;. By stopping the search as soon as &lt;code&gt;stop&lt;/code&gt; is reached, a potential deadlock with concurrent class loading is avoided.</source>
          <target state="translated">通常、このメソッドは、 &lt;code&gt;stop&lt;/code&gt; の&lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt;メソッドから呼び出され、 &lt;code&gt;ClassLoaderRepository&lt;/code&gt; でその前に表示されるローダーを調べます。すぐに検索を停止することによって &lt;code&gt;stop&lt;/code&gt; 到達し、同時クラスロードの潜在的なデッドロックを回避することができます。</target>
        </trans-unit>
        <trans-unit id="f20b6994432dd69c94ae0272a5ae9e15094084bb" translate="yes" xml:space="preserve">
          <source>Typically this method is called from the &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;stop&lt;/code&gt;, to consult loaders that appear before it in the &lt;code&gt;ClassLoaderRepository&lt;/code&gt;. By stopping the search as soon as &lt;code&gt;stop&lt;/code&gt; is reached, a potential deadlock with concurrent class loading is avoided.</source>
          <target state="translated">通常、このメソッドは &lt;code&gt;stop&lt;/code&gt; の&lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt;メソッドから呼び出され、 &lt;code&gt;ClassLoaderRepository&lt;/code&gt; でその前に表示されるローダーに問い合わせます。停止に到達 &lt;code&gt;stop&lt;/code&gt; とすぐに検索を停止することにより、クラスの同時ロードによる潜在的なデッドロックが回避されます。</target>
        </trans-unit>
        <trans-unit id="78f345a13b14c644324d7d9ab36f024a8381a97d" translate="yes" xml:space="preserve">
          <source>Typically this method will be called by &lt;code&gt;dispatchEvent&lt;/code&gt; if no other KeyEventDispatcher in the dispatcher chain dispatched the KeyEvent, or if no other KeyEventDispatchers are registered.</source>
          <target state="translated">典型的には、この方法は、によって呼び出される &lt;code&gt;dispatchEvent&lt;/code&gt; ディスパッチャチェーン内の他のKeyEventDispatcherがたKeyEventをディスパッチしない場合、または他のKeyEventDispatcherが登録されていない場合。</target>
        </trans-unit>
        <trans-unit id="8da5e27c7754bb71a4ffb6c45646fb187b30c086" translate="yes" xml:space="preserve">
          <source>Typically this method will be called by &lt;code&gt;dispatchEvent&lt;/code&gt; if no other KeyEventDispatcher in the dispatcher chain dispatched the KeyEvent, or if no other KeyEventDispatchers are registered. If an implementation of this method returns &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;dispatchEvent&lt;/code&gt; may try to dispatch the KeyEvent itself, or may simply return &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt; is returned, &lt;code&gt;dispatchEvent&lt;/code&gt; should return &lt;code&gt;true&lt;/code&gt; as well.</source>
          <target state="translated">典型的には、この方法は、によって呼び出される &lt;code&gt;dispatchEvent&lt;/code&gt; ディスパッチャチェーン内の他のKeyEventDispatcherがたKeyEventをディスパッチしない場合、または他のKeyEventDispatcherが登録されていない場合。このメソッドが返すの実装した場合 &lt;code&gt;false&lt;/code&gt; 、 &lt;code&gt;dispatchEvent&lt;/code&gt; KeyEvent自体をディスパッチしようと、あるいは単に返すことが &lt;code&gt;false&lt;/code&gt; 。 &lt;code&gt;true&lt;/code&gt; が返された場合、 &lt;code&gt;dispatchEvent&lt;/code&gt; も &lt;code&gt;true&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="a50a8bfe222ed54c9c2a578417aca0e0faf56f2a" translate="yes" xml:space="preserve">
          <source>Typically this method would be overridden to wrap the editor with a container with a custom border, since one can't assume that the editors border can be set directly.</source>
          <target state="translated">エディタの境界線を直接設定できるとは思えないので、通常はこのメソッドをオーバーライドしてカスタム境界線を持つコンテナでエディタをラップします。</target>
        </trans-unit>
        <trans-unit id="83b6304495a8e4db5fdb893ce345f76b60aa0b11" translate="yes" xml:space="preserve">
          <source>Typically this property is a &lt;code&gt;Date&lt;/code&gt; however it's possible to use &lt;code&gt;Comparable&lt;/code&gt; with a &lt;code&gt;compareTo&lt;/code&gt; method for &lt;code&gt;Date&lt;/code&gt;s. See &lt;code&gt;setStart&lt;/code&gt; for an example.</source>
          <target state="translated">通常、このプロパティは、ある &lt;code&gt;Date&lt;/code&gt; 、それは使用することが可能ですが &lt;code&gt;Comparable&lt;/code&gt; と &lt;code&gt;compareTo&lt;/code&gt; ための方法 &lt;code&gt;Date&lt;/code&gt; の。例については、 &lt;code&gt;setStart&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="a56bf7ae2a0c57781c295d01a98f13413413a4da" translate="yes" xml:space="preserve">
          <source>Typically this property is a &lt;code&gt;Date&lt;/code&gt; however it's possible to use a &lt;code&gt;Comparable&lt;/code&gt; with a &lt;code&gt;compareTo&lt;/code&gt; method for Dates. For example &lt;code&gt;start&lt;/code&gt; might be an instance of a class like this:</source>
          <target state="translated">通常、このプロパティは &lt;code&gt;Date&lt;/code&gt; ですが、Datesに対して &lt;code&gt;compareTo&lt;/code&gt; メソッドと &lt;code&gt;Comparable&lt;/code&gt; を使用することもできます。たとえば、 &lt;code&gt;start&lt;/code&gt; は次のようなクラスのインスタンスである可能性があります。</target>
        </trans-unit>
        <trans-unit id="93fa5ccfb67abd92170958d30d3e11f8d980e7a1" translate="yes" xml:space="preserve">
          <source>Typically this property is a &lt;code&gt;Number&lt;/code&gt; of the same type as the &lt;code&gt;value&lt;/code&gt; however it's possible to use any &lt;code&gt;Comparable&lt;/code&gt; with a &lt;code&gt;compareTo&lt;/code&gt; method for a &lt;code&gt;Number&lt;/code&gt; with the same type as the value. For example if value was a &lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;minimum&lt;/code&gt; might be a Date subclass defined like this:</source>
          <target state="translated">典型的には、このプロパティは、 &lt;code&gt;Number&lt;/code&gt; と同じタイプの &lt;code&gt;value&lt;/code&gt; が任意に使用することが可能だが &lt;code&gt;Comparable&lt;/code&gt; と &lt;code&gt;compareTo&lt;/code&gt; 方法 &lt;code&gt;Number&lt;/code&gt; 値と同じタイプで。たとえば、値が &lt;code&gt;Long&lt;/code&gt; の場合、 &lt;code&gt;minimum&lt;/code&gt; は次のように定義されたDateサブクラスになります。</target>
        </trans-unit>
        <trans-unit id="b171c04f6765bc5afd13e583b7669c3c7617a2bf" translate="yes" xml:space="preserve">
          <source>Typically this property is a &lt;code&gt;Number&lt;/code&gt; of the same type as the &lt;code&gt;value&lt;/code&gt; however it's possible to use any &lt;code&gt;Comparable&lt;/code&gt; with a &lt;code&gt;compareTo&lt;/code&gt; method for a &lt;code&gt;Number&lt;/code&gt; with the same type as the value. See &lt;a href=&quot;#setMinimum(java.lang.Comparable)&quot;&gt;&lt;code&gt;setMinimum(Comparable)&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="translated">典型的には、このプロパティは、 &lt;code&gt;Number&lt;/code&gt; と同じタイプの &lt;code&gt;value&lt;/code&gt; が任意に使用することが可能だが &lt;code&gt;Comparable&lt;/code&gt; と &lt;code&gt;compareTo&lt;/code&gt; 方法 &lt;code&gt;Number&lt;/code&gt; 値と同じタイプで。例については、&lt;a href=&quot;#setMinimum(java.lang.Comparable)&quot;&gt; &lt;code&gt;setMinimum(Comparable)&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8a0ae6e1c0caa53230a3bceb9425d1aab42b1e7e" translate="yes" xml:space="preserve">
          <source>Typically this stream corresponds to display output or another output destination specified by the host environment or user. By convention, this output stream is used to display error messages or other information that should come to the immediate attention of a user even if the principal output stream, the value of the variable &lt;code&gt;out&lt;/code&gt;, has been redirected to a file or other destination that is typically not continuously monitored.</source>
          <target state="translated">通常、このストリームは、ホスト環境またはユーザーによって指定されたディスプレイ出力または別の出力先に対応します。慣例により、この出力ストリームは、主要な出力ストリームである変数 &lt;code&gt;out&lt;/code&gt; の値がファイルまたはその他の宛先にリダイレクトされている場合でも、ユーザーがすぐに気にするエラーメッセージまたはその他の情報を表示するために使用されます。通常は継続的に監視されません。</target>
        </trans-unit>
        <trans-unit id="003f8d1f6f4dc10d08d4844a18a991aed53f0781" translate="yes" xml:space="preserve">
          <source>Typically you shouldn't use &lt;code&gt;DateFormatSymbols&lt;/code&gt; directly. Rather, you are encouraged to create a date-time formatter with the &lt;code&gt;DateFormat&lt;/code&gt; class's factory methods: &lt;code&gt;getTimeInstance&lt;/code&gt;, &lt;code&gt;getDateInstance&lt;/code&gt;, or &lt;code&gt;getDateTimeInstance&lt;/code&gt;. These methods automatically create a &lt;code&gt;DateFormatSymbols&lt;/code&gt; for the formatter so that you don't have to. After the formatter is created, you may modify its format pattern using the &lt;code&gt;setPattern&lt;/code&gt; method. For more information about creating formatters using &lt;code&gt;DateFormat&lt;/code&gt;'s factory methods, see &lt;a href=&quot;dateformat&quot;&gt;&lt;code&gt;DateFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通常、 &lt;code&gt;DateFormatSymbols&lt;/code&gt; を直接使用しないでください。むしろ、 &lt;code&gt;DateFormat&lt;/code&gt; クラスのファクトリメソッド（ &lt;code&gt;getTimeInstance&lt;/code&gt; 、 &lt;code&gt;getDateInstance&lt;/code&gt; 、または &lt;code&gt;getDateTimeInstance&lt;/code&gt; )を使用して日時フォーマッタを作成することをお勧めします。これらのメソッドは、フォーマッター用の &lt;code&gt;DateFormatSymbols&lt;/code&gt; を自動的に作成するので、必要はありません。フォーマッタを作成した後、 &lt;code&gt;setPattern&lt;/code&gt; メソッドを使用してフォーマットパターンを変更できます。 &lt;code&gt;DateFormat&lt;/code&gt; のファクトリメソッドを使用してフォーマッタを作成する方法の詳細については、&lt;a href=&quot;dateformat&quot;&gt; &lt;code&gt;DateFormat&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="121e94298a66156863123ae4de4ded2129f1599c" translate="yes" xml:space="preserve">
          <source>Typically, &lt;code&gt;ctl&lt;/code&gt; is a &quot;basic&quot; control containing BER encoded data. The factory is used to create a specialized control implementation, usually by decoding the BER encoded data, that provides methods to access that data in a type-safe and friendly manner.</source>
          <target state="translated">通常、 &lt;code&gt;ctl&lt;/code&gt; はBERエンコードされたデータを含む「基本的な」コントロールです。ファクトリは、通常はBERでエンコードされたデータをデコードすることにより、タイプセーフで使いやすい方法でそのデータにアクセスするためのメソッドを提供する、特殊な制御実装を作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="20888d9b86f3ad34616ed3db36154cddbf12ba40" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;code&gt;CertStoreParameters&lt;/code&gt; object is passed as a parameter to one of the &lt;a href=&quot;certstore#getInstance(java.lang.String,java.security.cert.CertStoreParameters)&quot;&gt;&lt;code&gt;CertStore.getInstance&lt;/code&gt;&lt;/a&gt; methods. The &lt;code&gt;getInstance&lt;/code&gt; method returns a &lt;code&gt;CertStore&lt;/code&gt; that is used for retrieving &lt;code&gt;Certificate&lt;/code&gt;s and &lt;code&gt;CRL&lt;/code&gt;s. The &lt;code&gt;CertStore&lt;/code&gt; that is returned is initialized with the specified parameters. The type of parameters needed may vary between different types of &lt;code&gt;CertStore&lt;/code&gt;s.</source>
          <target state="translated">通常、 &lt;code&gt;CertStoreParameters&lt;/code&gt; オブジェクトは、パラメーターとして&lt;a href=&quot;certstore#getInstance(java.lang.String,java.security.cert.CertStoreParameters)&quot;&gt; &lt;code&gt;CertStore.getInstance&lt;/code&gt; &lt;/a&gt;メソッドの1つに渡されます。 &lt;code&gt;getInstance&lt;/code&gt; メソッドが返し &lt;code&gt;CertStore&lt;/code&gt; 取得するために使用される &lt;code&gt;Certificate&lt;/code&gt; sおよび &lt;code&gt;CRL&lt;/code&gt; 秒。 &lt;code&gt;CertStore&lt;/code&gt; が返され、指定されたパラメータで初期化されます。必要なパラメータのタイプは、 &lt;code&gt;CertStore&lt;/code&gt; のタイプによって異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="0f8148a3227c5af2f0ea63a8ae87fdb6a21d07f4" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;code&gt;CertStoreParameters&lt;/code&gt; object is passed as a parameter to one of the &lt;a href=&quot;certstore#getInstance-java.lang.String-java.security.cert.CertStoreParameters-&quot;&gt;&lt;code&gt;CertStore.getInstance&lt;/code&gt;&lt;/a&gt; methods. The &lt;code&gt;getInstance&lt;/code&gt; method returns a &lt;code&gt;CertStore&lt;/code&gt; that is used for retrieving &lt;code&gt;Certificate&lt;/code&gt;s and &lt;code&gt;CRL&lt;/code&gt;s. The &lt;code&gt;CertStore&lt;/code&gt; that is returned is initialized with the specified parameters. The type of parameters needed may vary between different types of &lt;code&gt;CertStore&lt;/code&gt;s.</source>
          <target state="translated">通常、 &lt;code&gt;CertStoreParameters&lt;/code&gt; オブジェクトは、パラメーターとして&lt;a href=&quot;certstore#getInstance-java.lang.String-java.security.cert.CertStoreParameters-&quot;&gt; &lt;code&gt;CertStore.getInstance&lt;/code&gt; &lt;/a&gt;メソッドの1つに渡されます。 &lt;code&gt;getInstance&lt;/code&gt; メソッドが返し &lt;code&gt;CertStore&lt;/code&gt; 取得するために使用される &lt;code&gt;Certificate&lt;/code&gt; sおよび &lt;code&gt;CRL&lt;/code&gt; 秒。 &lt;code&gt;CertStore&lt;/code&gt; が返され、指定されたパラメータで初期化されます。必要なパラメータのタイプは、 &lt;code&gt;CertStore&lt;/code&gt; のタイプによって異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="3e169845123b9e0749c9de5dc20d1916a7bd81ce" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;code&gt;Color&lt;/code&gt; or &lt;code&gt;ColorModel&lt;/code&gt; would be associated with an ICC Profile which is either an input, display, or output profile (see the ICC specification). There are other types of ICC Profiles, e.g. abstract profiles, device link profiles, and named color profiles, which do not contain information appropriate for representing the color space of a color, image, or device (see &lt;code&gt;ICC_Profile&lt;/code&gt;). Attempting to create an &lt;code&gt;ICC_ColorSpace&lt;/code&gt; object from an inappropriate ICC Profile is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e263966e00e1bea9563954e017ba4e7d3bc9611" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;code&gt;CompletionService&lt;/code&gt; relies on a separate &lt;a href=&quot;executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; to actually execute the tasks, in which case the &lt;code&gt;CompletionService&lt;/code&gt; only manages an internal completion queue. The &lt;a href=&quot;executorcompletionservice&quot;&gt;&lt;code&gt;ExecutorCompletionService&lt;/code&gt;&lt;/a&gt; class provides an implementation of this approach.</source>
          <target state="translated">通常、 &lt;code&gt;CompletionService&lt;/code&gt; は実際にタスクを実行するために別の&lt;a href=&quot;executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;に依存します。この場合、 &lt;code&gt;CompletionService&lt;/code&gt; は内部完了キューのみを管理します。&lt;a href=&quot;executorcompletionservice&quot;&gt; &lt;code&gt;ExecutorCompletionService&lt;/code&gt; の&lt;/a&gt;クラスは、このアプローチの実装を提供します。</target>
        </trans-unit>
        <trans-unit id="0dd7758f6369a4aa3f9fa4c5cdd3dcff3e015ac5" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;code&gt;SQLData&lt;/code&gt; implementation will define a field for each attribute of an SQL structured type or a single field for an SQL &lt;code&gt;DISTINCT&lt;/code&gt; type. When the UDT is retrieved from a data source with the &lt;code&gt;ResultSet.getObject&lt;/code&gt; method, it will be mapped as an instance of this class. A programmer can operate on this class instance just as on any other object in the Java programming language and then store any changes made to it by calling the &lt;code&gt;PreparedStatement.setObject&lt;/code&gt; method, which will map it back to the SQL type.</source>
          <target state="translated">通常、 &lt;code&gt;SQLData&lt;/code&gt; 実装は、SQL構造化タイプの各属性のフィールドまたは &lt;code&gt;DISTINCT&lt;/code&gt; タイプの単一フィールドを定義します。UDTが &lt;code&gt;ResultSet.getObject&lt;/code&gt; メソッドを使用してデータソースから取得されると、UDTはこのクラスのインスタンスとしてマップされます。プログラマーは、Javaプログラミング言語の他のオブジェクトと同じようにこのクラスインスタンスを操作し、 &lt;code&gt;PreparedStatement.setObject&lt;/code&gt; メソッドを呼び出すことで変更を保存できます。これにより、SQLタイプにマップされます。</target>
        </trans-unit>
        <trans-unit id="bb93e535bc8b198c639f0c88b3fd6f72457ed5c8" translate="yes" xml:space="preserve">
          <source>Typically, a Color or ColorModel would be associated with an ICC Profile which is either an input, display, or output profile (see the ICC specification). There are other types of ICC Profiles, e.g. abstract profiles, device link profiles, and named color profiles, which do not contain information appropriate for representing the color space of a color, image, or device (see ICC_Profile). Attempting to create an ICC_ColorSpace object from an inappropriate ICC Profile is an error.</source>
          <target state="translated">通常、 Color または ColorModel は、 入力 ・ 表示 ・ 出力プ ロ フ ァ イ ルのいずれかであ る ICC プ ロ フ ァ イ ルに関連づけ ら れます (ICC 仕様を参照)。ICCプロファイルには他の種類があり、例えば抽象プロファイル、デバイスリンクプロファイル、名前付きカラープロファイルなどがありますが、これらはカラー、画像、デバイスの色空間を表現するのに適した情報を含んでいません(ICC_Profileを参照)。不適切な ICC プ ロ フ ァ イ ルから ICC_ColorSpace オブジ ェ ク ト を作成しよう と する と エ ラ ーにな り ます。</target>
        </trans-unit>
        <trans-unit id="f0e810068a3e83f4fbccb129817a1c93bcdae442" translate="yes" xml:space="preserve">
          <source>Typically, a connector server has an address, represented by the class &lt;a href=&quot;jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt;. An address for the RMI Connector can look like this:</source>
          <target state="translated">通常、コネクタサーバーには、クラス&lt;a href=&quot;jmxserviceurl&quot;&gt; &lt;code&gt;JMXServiceURL&lt;/code&gt; &lt;/a&gt;で表されるアドレスがあります。RMIコネクタのアドレスは次のようになります。</target>
        </trans-unit>
        <trans-unit id="3fa2f828613a1214e8113b1763d0e324471c0613" translate="yes" xml:space="preserve">
          <source>Typically, a connector server is associated with an MBean server either by registering it in that MBean server, or by supplying the MBean server as a parameter when creating the connector server.</source>
          <target state="translated">通常、コネクタ・サーバは、MBean サーバに登録するか、コネクタ・サーバを作成する際に MBean サーバをパラメータとして指定することで、MBean サーバに関連付けられます。</target>
        </trans-unit>
        <trans-unit id="e54663e3058ecb0cc03e3e1f408c4e8f1ff6652d" translate="yes" xml:space="preserve">
          <source>Typically, a custom filter should check if a process-wide filter is configured and defer to it if so. For example,</source>
          <target state="translated">通常、カスタムフィルタはプロセス全体のフィルタが設定されているかどうかをチェックし、設定されている場合はそれに従うべきです。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="542579665f67752cf18e601a907b6ec8914edc34" translate="yes" xml:space="preserve">
          <source>Typically, a custom filter should check if a system-wide filter is configured and defer to it if so. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc97893cfa85101d7bf2cbcc6717bc6e85e4bf1a" translate="yes" xml:space="preserve">
          <source>Typically, a plug-in will implement this method using code such as &lt;code&gt;return new MyImageReader(this)&lt;/code&gt;.</source>
          <target state="translated">通常、プラグインは &lt;code&gt;return new MyImageReader(this)&lt;/code&gt; などのコードを使用してこのメ​​ソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="0fc9f7a92b1bed3cc8b20f055c7b0992147a8329" translate="yes" xml:space="preserve">
          <source>Typically, a plug-in will implement this method using code such as &lt;code&gt;return new MyImageWriter(this)&lt;/code&gt;.</source>
          <target state="translated">通常、プラグインは &lt;code&gt;return new MyImageWriter(this)&lt;/code&gt; などのコードを使用してこのメ​​ソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="7f504f63f77e35a4284f7c92acaee4012adbbe4a" translate="yes" xml:space="preserve">
          <source>Typically, as the position of the knob in the scrollbar changes a corresponding change is made to the position of the JViewport on the underlying view, changing the contents of the JViewport.</source>
          <target state="translated">一般的に、スクロールバーのノブの位置が変わると、それに対応する変更がビュー上のJViewportの位置に行われ、JViewportの内容が変更されます。</target>
        </trans-unit>
        <trans-unit id="7179a1c3fb676702cf42d135adf1fe49a790acf8" translate="yes" xml:space="preserve">
          <source>Typically, fonts will not be transformed. Clients generally should call &lt;a href=&quot;#isTransformed()&quot;&gt;&lt;code&gt;isTransformed()&lt;/code&gt;&lt;/a&gt; first, and only call this method if &lt;code&gt;isTransformed&lt;/code&gt; returns true.</source>
          <target state="translated">通常、フォントは変換されません。通常、クライアントは最初に&lt;a href=&quot;#isTransformed()&quot;&gt; &lt;code&gt;isTransformed()&lt;/code&gt; を&lt;/a&gt;呼び出し、 &lt;code&gt;isTransformed&lt;/code&gt; がtrueを返した場合にのみこのメソッドを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="b0224dfcf9383ee6b39590169eb90efd6f5f259c" translate="yes" xml:space="preserve">
          <source>Typically, if exactly one annotation of type</source>
          <target state="translated">典型的には、タイプ</target>
        </trans-unit>
        <trans-unit id="380e42ac1d1901bf8f602caef507dd1612efd216" translate="yes" xml:space="preserve">
          <source>Typically, implementations of this method invoke &lt;code&gt;
 subscription.request&lt;/code&gt; to enable receiving items.</source>
          <target state="translated">通常、このメソッドの実装は、 &lt;code&gt; subscription.request&lt;/code&gt; を呼び出して、アイテムの受信を有効にします。</target>
        </trans-unit>
        <trans-unit id="a6a383681a435974714032b99217be2e2c27fb31" translate="yes" xml:space="preserve">
          <source>Typically, instances of &lt;code&gt;FontRenderContext&lt;/code&gt; are obtained from a &lt;a href=&quot;../graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; object. A &lt;code&gt;FontRenderContext&lt;/code&gt; which is directly constructed will most likely not represent any actual graphics device, and may lead to unexpected or incorrect results.</source>
          <target state="translated">通常、 &lt;code&gt;FontRenderContext&lt;/code&gt; のインスタンスは&lt;a href=&quot;../graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt;オブジェクトから取得されます。直接構築された &lt;code&gt;FontRenderContext&lt;/code&gt; は、実際のグラフィックデバイスを表していない可能性が高く、予期しない結果や誤った結果をもたらす可能性があります。</target>
        </trans-unit>
        <trans-unit id="11a0281f2b8a35df21a0c083491659003cc47cf5" translate="yes" xml:space="preserve">
          <source>Typically, not all command-line options to the 'java' command are passed to the Java virtual machine. Thus, the returned input arguments may not include all command-line options.</source>
          <target state="translated">通常、'java' コマンドに対するすべてのコマンドライン・オプションが Java 仮想マシンに渡されるわけではありません。したがって、返される入力引数には、すべてのコマンドライン・オプションが含まれているわけではありません。</target>
        </trans-unit>
        <trans-unit id="8c4b0fbcfb227505f9ff9bec714e31409af99584" translate="yes" xml:space="preserve">
          <source>Typically, only one of the notify high and notify low flags is set. The other threshold is used to provide a &lt;em&gt;hysteresis&lt;/em&gt; mechanism to avoid the repeated triggering of notifications when an attribute makes small oscillations around the threshold value.</source>
          <target state="translated">通常、高通知フラグと低通知フラグのいずれか1つのみが設定されます。もう1つのしきい値は、&lt;em&gt;ヒステリシス&lt;/em&gt;メカニズムを提供するために使用されます。これにより、属性がしきい値の周囲で小さな変動を起こしたときに、通知が繰り返しトリガーされるのを回避できます。</target>
        </trans-unit>
        <trans-unit id="e885d36f5dfa3c386874c2a925756d4f5306e832" translate="yes" xml:space="preserve">
          <source>Typically, programmers do not create &lt;code&gt;FlightRecorderPermission&lt;/code&gt; objects directly. Instead the objects are created by the security policy code that is based on reading the security policy file.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
