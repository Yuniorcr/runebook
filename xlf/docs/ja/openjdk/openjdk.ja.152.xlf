<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="6d45a10a6e24eaa7c3cdfde29bd66f6b11f5bc37" translate="yes" xml:space="preserve">
          <source>The rules are loaded via &lt;a href=&quot;zonerulesprovider&quot;&gt;&lt;code&gt;ZoneRulesProvider&lt;/code&gt;&lt;/a&gt; using a &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt;. The same rules may be shared internally between multiple zone IDs.</source>
          <target state="translated">ルールは、&lt;a href=&quot;zonerulesprovider&quot;&gt; &lt;code&gt;ZoneRulesProvider&lt;/code&gt; &lt;/a&gt;を使用して&lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; &lt;/a&gt;経由でロードされます。同じルールが複数のゾーンID間で内部的に共有される場合があります。</target>
        </trans-unit>
        <trans-unit id="b7d29710bebc6dfb854d9319d167bdaa66f76644" translate="yes" xml:space="preserve">
          <source>The rules are stored as named styles, and other information is stored to translate the context of an element to a rule quickly. The following code fragment will display the named styles, and therefore the CSS rules contained.</source>
          <target state="translated">ルールは名前付きスタイルとして格納され、その他の情報は要素のコンテキストを素早くルールに変換するために格納されます。次のコード断片は、名前付きスタイル、したがって含まれるCSSルールを表示します。</target>
        </trans-unit>
        <trans-unit id="4c558d54ff2e89b5ae0559dc27450ddadbb740a9" translate="yes" xml:space="preserve">
          <source>The rules are supplied by &lt;a href=&quot;zone/zonerulesprovider&quot;&gt;&lt;code&gt;ZoneRulesProvider&lt;/code&gt;&lt;/a&gt;. An advanced provider may support dynamic updates to the rules without restarting the Java Runtime. If so, then the result of this method may change over time. Each individual call will be still remain thread-safe.</source>
          <target state="translated">ルールは&lt;a href=&quot;zone/zonerulesprovider&quot;&gt; &lt;code&gt;ZoneRulesProvider&lt;/code&gt; &lt;/a&gt;によって提供されます。高度なプロバイダーは、Javaランタイムを再起動せずにルールの動的更新をサポートする場合があります。その場合、このメソッドの結果は時間とともに変化する可能性があります。個々の呼び出しは引き続きスレッドセーフのままです。</target>
        </trans-unit>
        <trans-unit id="1bccb89406bfb2d00bc457815b4e62d2470b7af9" translate="yes" xml:space="preserve">
          <source>The rules defining how the zone offset varies for a single time-zone.</source>
          <target state="translated">1つのタイムゾーンに対して、ゾーンオフセットがどのように変化するかを定義するルール。</target>
        </trans-unit>
        <trans-unit id="1b49d1af7b23bfa9889a2696229a5d15447e0c34" translate="yes" xml:space="preserve">
          <source>The rules for &lt;code&gt;get&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; and &lt;code&gt;is&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; collectively define the notion of a &lt;em&gt;getter&lt;/em&gt;. The rule for &lt;code&gt;set&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; defines the notion of a &lt;em&gt;setter&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;get&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; および &lt;code&gt;is&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; のルールは、&lt;em&gt;ゲッターの&lt;/em&gt;概念を集合的に定義します。 &lt;code&gt;set&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; のルールは、&lt;em&gt;セッターの&lt;/em&gt;概念を定義します。</target>
        </trans-unit>
        <trans-unit id="23679fbbad04df1e812f689c70ce1d6ec4726cea" translate="yes" xml:space="preserve">
          <source>The rules for addition add the number of week-based-years to the existing value for the week-based-year field retaining the week-of-week-based-year and day-of-week, unless the week number it too large for the target year. In that case, the week is set to the last week of the year with the same day-of-week.</source>
          <target state="translated">追加のルールでは、週数が対象の年に対して大きすぎる場合を除き、週ベースの年の週と曜日を保持したまま、週ベースの年フィールドの既存の値に週ベースの年の数を追加します。その場合、週は同じ曜日でその年の最終週に設定されます。</target>
        </trans-unit>
        <trans-unit id="9fe755e8390c62eea10e1546677bdab04050afb0" translate="yes" xml:space="preserve">
          <source>The rules for addition add the number of week-based-years to the existing value for the week-based-year field. If the resulting week-based-year only has 52 weeks, then the date will be in week 1 of the following week-based-year.</source>
          <target state="translated">追加のルールは、週ベースの年フィールドの既存の値に週ベースの年の数を追加します。結果として得られる週ベースの年が52週しかない場合、日付は次の週ベースの年の第1週になります。</target>
        </trans-unit>
        <trans-unit id="b8227871731be6c3964a85ded8d67582566b32f1" translate="yes" xml:space="preserve">
          <source>The rules for using quotes within message format patterns unfortunately have shown to be somewhat confusing. In particular, it isn't always obvious to localizers whether single quotes need to be doubled or not. Make sure to inform localizers about the rules, and tell them (for example, by using comments in resource bundle source files) which strings will be processed by &lt;code&gt;MessageFormat&lt;/code&gt;. Note that localizers may need to use single quotes in translated strings where the original version doesn't have them.</source>
          <target state="translated">メッセージ形式のパターン内で引用符を使用するためのルールは、残念ながらやや混乱を招くことがわかっています。特に、ローカライザにとって、一重引用符を二重にする必要があるかどうかは必ずしも明らかではありません。ルールについてローカライザに通知し、（たとえば、リソースバンドルソースファイルのコメントを使用して） &lt;code&gt;MessageFormat&lt;/code&gt; によって処理される文字列を伝えてください。ローカライザは、元のバージョンにない単一引用符を翻訳文字列で使用する必要がある場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="38de80f84a46f228ca25c1f0d5e10459bf313f19" translate="yes" xml:space="preserve">
          <source>The rules model all the historic and future transitions for a time-zone. &lt;a href=&quot;zoneoffsettransition&quot;&gt;&lt;code&gt;ZoneOffsetTransition&lt;/code&gt;&lt;/a&gt; is used for known transitions, typically historic. &lt;a href=&quot;zoneoffsettransitionrule&quot;&gt;&lt;code&gt;ZoneOffsetTransitionRule&lt;/code&gt;&lt;/a&gt; is used for future transitions that are based on the result of an algorithm.</source>
          <target state="translated">ルールは、タイムゾーンのすべての履歴および将来の遷移をモデル化します。&lt;a href=&quot;zoneoffsettransition&quot;&gt; &lt;code&gt;ZoneOffsetTransition&lt;/code&gt; &lt;/a&gt;は、通常は歴史的な既知の遷移に使用されます。&lt;a href=&quot;zoneoffsettransitionrule&quot;&gt; &lt;code&gt;ZoneOffsetTransitionRule&lt;/code&gt; &lt;/a&gt;は、アルゴリズムの結果に基づく将来の遷移に使用されます。</target>
        </trans-unit>
        <trans-unit id="dca1ae5cccdb05f3a9c9df600b491c9af1bbd005" translate="yes" xml:space="preserve">
          <source>The rules on special characters and quoting apply regardless of which constructor is used to make an ObjectName.</source>
          <target state="translated">特殊文字と引用符の規則は、どのコンストラクタを使用して ObjectName を作成するかに関係なく適用されます。</target>
        </trans-unit>
        <trans-unit id="1083994538afe151cee646e2eddf1109ecd48eef" translate="yes" xml:space="preserve">
          <source>The rules provide the functionality associated with a time-zone, such as finding the offset for a given instant or local date-time.</source>
          <target state="translated">このルールは、特定の瞬間やローカルの日付時間のオフセットを見つけるなど、タイムゾーンに関連した機能を提供します。</target>
        </trans-unit>
        <trans-unit id="1a48b9196407480649d1d001e180f9ae21afeae3" translate="yes" xml:space="preserve">
          <source>The rules used to interpret an &lt;code&gt;ObservedAttribute&lt;/code&gt; like &lt;code&gt;&quot;HeapMemoryUsage.used&quot;&lt;/code&gt; are as follows. Suppose the string is</source>
          <target state="translated">&lt;code&gt;&quot;HeapMemoryUsage.used&quot;&lt;/code&gt; ような &lt;code&gt;ObservedAttribute&lt;/code&gt; を解釈するために使用されるルールは次のとおりです。文字列が</target>
        </trans-unit>
        <trans-unit id="b9da9e1a0bb979727268d68de18fe949fd2aa76a" translate="yes" xml:space="preserve">
          <source>The rules will always return this offset when queried. The implementation class is immutable, thread-safe and serializable.</source>
          <target state="translated">ルールは、問い合わせの際には常にこのオフセットを返します。実装クラスは不変で、スレッドセーフ、シリアル化可能です。</target>
        </trans-unit>
        <trans-unit id="3470726a7bfc514d0ba03c927d548da38eafa9b5" translate="yes" xml:space="preserve">
          <source>The runnable method for this class.</source>
          <target state="translated">このクラスの実行可能なメソッド。</target>
        </trans-unit>
        <trans-unit id="a744db65793d8a5bd6e364f10507f38a106bc516" translate="yes" xml:space="preserve">
          <source>The runnable method for this class. This will produce an image using the current RenderableImage and RenderContext and send it to all the ImageConsumer currently registered with this class.</source>
          <target state="translated">このクラスの実行可能なメソッドです。これは、現在のRenderableImageとRenderContextを使用して画像を生成し、このクラスに現在登録されているすべてのImageConsumerに送信します。</target>
        </trans-unit>
        <trans-unit id="033cb38b43d17b8786bafc897bec4b3c4ae8e783" translate="yes" xml:space="preserve">
          <source>The sRGB color space defined at &lt;a href=&quot;http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html&quot;&gt; http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html &lt;/a&gt;.</source>
          <target state="translated">The sRGB color space defined at &lt;a href=&quot;http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html&quot;&gt; http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a0b7df0e9c02bba95c1b1a33d5e13601bd0ce3f8" translate="yes" xml:space="preserve">
          <source>The same call site may be used in several places at once.</source>
          <target state="translated">同じコールサイトを一度に複数の場所で利用することができます。</target>
        </trans-unit>
        <trans-unit id="bfba385507e5c958ec5cdd390b4ae7ee0ff23620" translate="yes" xml:space="preserve">
          <source>The same conversions are allowed as for &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;MethodHandle.asType&lt;/code&gt;&lt;/a&gt;, and some additional conversions are also applied if those conversions fail. Given types &lt;em&gt;T0&lt;/em&gt;, &lt;em&gt;T1&lt;/em&gt;, one of the following conversions is applied if possible, before or instead of any conversions done by &lt;code&gt;asType&lt;/code&gt;:</source>
          <target state="translated">The same conversions are allowed as for &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;MethodHandle.asType&lt;/code&gt; &lt;/a&gt;, and some additional conversions are also applied if those conversions fail. Given types &lt;em&gt;T0&lt;/em&gt;, &lt;em&gt;T1&lt;/em&gt;, one of the following conversions is applied if possible, before or instead of any conversions done by &lt;code&gt;asType&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="28bec6c576b1271de1ae3d70fc04df24e271a729" translate="yes" xml:space="preserve">
          <source>The same conversions are allowed as for &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;MethodHandle.asType&lt;/code&gt;&lt;/a&gt;, and some additional conversions are also applied if those conversions fail. Given types &lt;em&gt;T0&lt;/em&gt;, &lt;em&gt;T1&lt;/em&gt;, one of the following conversions is applied if possible, before or instead of any conversions done by &lt;code&gt;asType&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;MethodHandle.asType&lt;/code&gt; の&lt;/a&gt;場合と同じ変換が許可され、それらの変換が失敗した場合は、いくつかの追加の変換も適用されます。タイプ&lt;em&gt;T0&lt;/em&gt;、&lt;em&gt;T1が&lt;/em&gt;与えられると、 &lt;code&gt;asType&lt;/code&gt; によって行われる変換の前または代わりに、可能であれば、次の変換のいずれかが適用されます。</target>
        </trans-unit>
        <trans-unit id="a6ab80d33fa4b7f4a321447e169ab216836d5a87" translate="yes" xml:space="preserve">
          <source>The same example, dropping arguments and using combinators:</source>
          <target state="translated">同じ例で、引数を落としたり、コンビネーターを使ったりしています。</target>
        </trans-unit>
        <trans-unit id="3156cf800cbaf487594e90d4f19f68e8ba277657" translate="yes" xml:space="preserve">
          <source>The same listener object may be added more than once, and will be called as many times as it is added. If &lt;code&gt;listener&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is taken.</source>
          <target state="translated">同じリスナーオブジェクトは複数回追加される可能性があり、追加された回数だけ呼び出されます。 &lt;code&gt;listener&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、例外はスローされず、アクションは実行されません。</target>
        </trans-unit>
        <trans-unit id="791680086f6d9e78094100fb9300338027ea15fa" translate="yes" xml:space="preserve">
          <source>The same naming conventions are applied to the methods in an MXBean as in a Standard MBean:</source>
          <target state="translated">MXBeanのメソッドには、標準MBeanと同じ命名規則が適用されます。</target>
        </trans-unit>
        <trans-unit id="681f3cced20ba9e0fb93240854ee9634fa1a6146" translate="yes" xml:space="preserve">
          <source>The same output can be generated with this code, which uses a regular expression to parse all four tokens at once:</source>
          <target state="translated">このコードでは、正規表現を使用して4つのトークンを一度に解析することで、同じ出力を生成することができます。</target>
        </trans-unit>
        <trans-unit id="1aca9034c5ce7f0103f2b633705ed622da3b779f" translate="yes" xml:space="preserve">
          <source>The same principle holds true for setting layout managers, removing components, listing children, etc. All these methods are invoked on the &lt;code&gt;contentPane&lt;/code&gt; instead of on the &lt;code&gt;JRootPane&lt;/code&gt;.</source>
          <target state="translated">The same principle holds true for setting layout managers, removing components, listing children, etc. All these methods are invoked on the &lt;code&gt;contentPane&lt;/code&gt; instead of on the &lt;code&gt;JRootPane&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7706c997f0206204d48e6784227fbc2dcd70a39c" translate="yes" xml:space="preserve">
          <source>The same rules are used for locating the configuration properties as are used at startup. So normally the logging properties will be re-read from the same file that was used at startup.</source>
          <target state="translated">起動時に使用されるのと同じルールで設定プロパティを検索します。そのため、通常、ロギングプロパティは起動時に使用されたのと同じファイルから再読み込みされます。</target>
        </trans-unit>
        <trans-unit id="40c696d758a9065648ff0c79befb43bf73945edb" translate="yes" xml:space="preserve">
          <source>The same value</source>
          <target state="translated">同一の値</target>
        </trans-unit>
        <trans-unit id="457dd191617eea60f8880ece3469c77e1ea4e638" translate="yes" xml:space="preserve">
          <source>The sample chrominance quantization table given in the JPEG specification, table K.1, with all elements divided by 2.</source>
          <target state="translated">JPEG仕様の表K.1に与えられたサンプルクロミナンス量子化テーブルで、全要素を2で割ったもの。</target>
        </trans-unit>
        <trans-unit id="66abdaa3d456aeedbf328a69ececa50ab9fd015c" translate="yes" xml:space="preserve">
          <source>The sample chrominance quantization table given in the JPEG specification, table K.1, with all elements divided by 2. According to the specification, these values produce &quot;very good&quot; quality output. This is the table usually used for &quot;visually lossless&quot; encoding, and is the default chrominance table used if the default tables and quality settings are used.</source>
          <target state="translated">JPEG仕様の表K.1で与えられたサンプルのクロミナンス量子化テーブルで、すべての要素を2で割ったものです。 仕様によると、これらの値は &quot;非常に良い &quot;品質の出力を生成します。これは通常、&quot;視覚的にロスのない &quot;エンコーディングに使用されるテーブルであり、デフォルトのテーブルと品質設定が使用されている場合に使用されるデフォルトのクロミナンステーブルです。</target>
        </trans-unit>
        <trans-unit id="b5e23252dc7982b61ec60d6fa4b1c02b4d854c18" translate="yes" xml:space="preserve">
          <source>The sample chrominance quantization table given in the JPEG specification, table K.2.</source>
          <target state="translated">JPEG仕様の表K.2で与えられたサンプルクロミナンス量子化テーブル。</target>
        </trans-unit>
        <trans-unit id="1cb7bb906bae31a02cfce6b8aa3fb45b84e3040c" translate="yes" xml:space="preserve">
          <source>The sample chrominance quantization table given in the JPEG specification, table K.2. According to the specification, these values produce &quot;good&quot; quality output.</source>
          <target state="translated">JPEG仕様で与えられたサンプルクロミナンス量子化テーブル、表K.2。仕様によれば、これらの値は &quot;良い &quot;品質の出力を生成します。</target>
        </trans-unit>
        <trans-unit id="25c651e5098644d6cd24f42dc03c0a707b13d70d" translate="yes" xml:space="preserve">
          <source>The sample luminance quantization table given in the JPEG specification, table K.1, with all elements divided by 2.</source>
          <target state="translated">JPEG仕様で与えられたサンプル輝度量子化テーブル、表K.</target>
        </trans-unit>
        <trans-unit id="e37dceb33c264c204dc116d8ce75114c90f4c7a3" translate="yes" xml:space="preserve">
          <source>The sample luminance quantization table given in the JPEG specification, table K.1, with all elements divided by 2. According to the specification, these values produce &quot;very good&quot; quality output. This is the table usually used for &quot;visually lossless&quot; encoding, and is the default luminance table used if the default tables and quality settings are used.</source>
          <target state="translated">JPEG仕様の表K.1で与えられているサンプル輝度量子化テーブルで、すべての要素を2で割ったもの。 仕様によると、これらの値は「非常に良い」品質の出力を生成する。これは通常、&quot;視覚的にロスのない &quot;エンコードに使用されるテーブルであり、デフォルトのテーブルと品質設定が使用されている場合に使用されるデフォルトの輝度テーブルである。</target>
        </trans-unit>
        <trans-unit id="d0b62fba0a5289bbc7385bf5f89b4ca6d49b2768" translate="yes" xml:space="preserve">
          <source>The sample luminance quantization table given in the JPEG specification, table K.1.</source>
          <target state="translated">JPEG仕様で与えられたサンプル輝度量子化テーブル、表K.</target>
        </trans-unit>
        <trans-unit id="41d6745b125ca8d196d6a79815800d21e82cdffb" translate="yes" xml:space="preserve">
          <source>The sample luminance quantization table given in the JPEG specification, table K.1. According to the specification, these values produce &quot;good&quot; quality output.</source>
          <target state="translated">JPEG仕様で与えられたサンプル輝度量子化テーブル、表K.仕様によれば,これらの値は &quot;良い &quot;品質の出力を生成する。</target>
        </trans-unit>
        <trans-unit id="b999ec10517f908ef6af8dfcfecb7806f54e48fb" translate="yes" xml:space="preserve">
          <source>The scale of the returned &lt;code&gt;BigDecimal&lt;/code&gt; will be the number of digits in the fraction, or zero if the string contains no decimal point, subject to adjustment for any exponent; if the string contains an exponent, the exponent is subtracted from the scale. The value of the resulting scale must lie between &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt; and &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;, inclusive.</source>
          <target state="translated">返される &lt;code&gt;BigDecimal&lt;/code&gt; のスケールは、小数部の桁数、または文字列に小数点が含まれていない場合はゼロになり、指数の調整に従います。文字列に指数が含まれている場合、その指数はスケールから減算されます。結果のスケールの値は、 &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt; と &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; の間にある必要があります。</target>
        </trans-unit>
        <trans-unit id="7396cf813336a30d0a1bab52aed3246ae5a6aefb" translate="yes" xml:space="preserve">
          <source>The scanner can also use delimiters other than whitespace. This example reads several items in from a string:</source>
          <target state="translated">スキャナは、空白以外の区切り文字を使用することもできます。この例では、文字列からいくつかの項目を読み込みます。</target>
        </trans-unit>
        <trans-unit id="a4947ea8b0c611076ba187f044654968e3ab9ec3" translate="yes" xml:space="preserve">
          <source>The scheduling policy of StampedLock does not consistently prefer readers over writers or vice versa. All &quot;try&quot; methods are best-effort and do not necessarily conform to any scheduling or fairness policy. A zero return from any &quot;try&quot; method for acquiring or converting locks does not carry any information about the state of the lock; a subsequent invocation may succeed.</source>
          <target state="translated">StampedLockのスケジューリングポリシーは、一貫してライターよりも読者を優先するものではありませんし、その逆もあります。すべての &quot;try &quot;メソッドはベストエフォートであり、スケジューリングポリシーや公平性のポリシーに従う必要はありません。ロックを取得または変換するための &quot;try &quot;メソッドからのゼロリターンは、ロックの状態に関する情報を持ちません。</target>
        </trans-unit>
        <trans-unit id="b03631e0a864ad17eff8a3140236f245127ccd24" translate="yes" xml:space="preserve">
          <source>The schema columns are:</source>
          <target state="translated">スキーマのカラムは</target>
        </trans-unit>
        <trans-unit id="8e88c8d4c87637576e7f0f88b7eb8972efe2f3f6" translate="yes" xml:space="preserve">
          <source>The schema definition describes the internal data of a &lt;code&gt;RowSet&lt;/code&gt; object in three distinct areas:</source>
          <target state="translated">The schema definition describes the internal data of a &lt;code&gt;RowSet&lt;/code&gt; object in three distinct areas:</target>
        </trans-unit>
        <trans-unit id="0bb86dfd7dd2cb7c7dabbe5b9afa0ca86ee85837" translate="yes" xml:space="preserve">
          <source>The scheme component of a URI cannot contain escaped octets, hence this method does not perform any decoding.</source>
          <target state="translated">URIのスキームコンポーネントはエスケープされたオクテットを含むことができないので、このメソッドはデコードを行いません。</target>
        </trans-unit>
        <trans-unit id="03f4421d79610120278b2b05c4ad70853ae92f0a" translate="yes" xml:space="preserve">
          <source>The scheme component of a URI, if defined, only contains characters in the</source>
          <target state="translated">URIのスキームコンポーネントが定義されている場合、そのURIは</target>
        </trans-unit>
        <trans-unit id="552a02db11e3a965b8192d8915eaba47a77bf1a7" translate="yes" xml:space="preserve">
          <source>The scheme component of this URI, or &lt;code&gt;null&lt;/code&gt; if the scheme is undefined</source>
          <target state="translated">このURIのスキーマコンポーネント。スキーマが未定義の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="347507e3914af1d8c1191601bb5aa53cb19b0fe4" translate="yes" xml:space="preserve">
          <source>The scheme-specific part of a URI only contains legal URI characters.</source>
          <target state="translated">URIのスキーマ固有の部分は、合法的なURI文字のみを含む。</target>
        </trans-unit>
        <trans-unit id="786e33a9934f50290255272a6f6e5a002f9a8ca7" translate="yes" xml:space="preserve">
          <source>The scope that is printed out may be a filename, in which case it may convey local system information. For example, here's a sample printout of an identity named &quot;carol&quot;, who is marked not trusted in the user's identity database:</source>
          <target state="translated">プリントアウトされるスコープは、ファイル名であってもよいが、その場合はローカルシステム情報を伝えることができる。例えば、ユーザの ID データベースで信頼されていないとマークされている「carol」という名前の ID のプリントアウトのサンプルを以下に示します。</target>
        </trans-unit>
        <trans-unit id="b44f515dc7972f5ec50a61a5a4b5d182cf8f1fa1" translate="yes" xml:space="preserve">
          <source>The scope, returningObj flag, and returningAttributes flag from the search controls &lt;code&gt;ctls&lt;/code&gt; are used to control the selection of objects that the listener is interested in, and determines what information is returned in the eventual &lt;code&gt;NamingEvent&lt;/code&gt; object. Note that the requested information to be returned might not be present in the &lt;code&gt;NamingEvent&lt;/code&gt; object if they are unavailable or could not be obtained by the service provider or service.</source>
          <target state="translated">検索コントロール &lt;code&gt;ctls&lt;/code&gt; のスコープ、returningObjフラグ、returningAttributesフラグを使用して、リスナーが関心を持つオブジェクトの選択を制御し、最終的な &lt;code&gt;NamingEvent&lt;/code&gt; オブジェクトで返される情報を決定します。返されるように要求された情報は、それらが利用できない場合、またはサービスプロバイダーまたはサービスによって取得できない場合、 &lt;code&gt;NamingEvent&lt;/code&gt; オブジェクトに存在しない可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4e7ec0bc18757e2695eb1c71f854b0d45664eafa" translate="yes" xml:space="preserve">
          <source>The script code, or the empty string if none is defined.</source>
          <target state="translated">スクリプトコード、または定義されていない場合は空文字列。</target>
        </trans-unit>
        <trans-unit id="f9cd18270d845ffc1ce9a3c3c4df5a00249e7be6" translate="yes" xml:space="preserve">
          <source>The script names supported by &lt;code&gt;Pattern&lt;/code&gt; are the valid script names accepted and defined by &lt;a href=&quot;../../lang/character.unicodescript#forName(java.lang.String)&quot;&gt;&lt;code&gt;UnicodeScript.forName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The script names supported by &lt;code&gt;Pattern&lt;/code&gt; are the valid script names accepted and defined by &lt;a href=&quot;../../lang/character.unicodescript#forName(java.lang.String)&quot;&gt; &lt;code&gt;UnicodeScript.forName&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ef23874ea1d91d27f386b1f20ccc288696d91d71" translate="yes" xml:space="preserve">
          <source>The script names supported by &lt;code&gt;Pattern&lt;/code&gt; are the valid script names accepted and defined by &lt;a href=&quot;../../lang/character.unicodescript#forName-java.lang.String-&quot;&gt;&lt;code&gt;UnicodeScript.forName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Pattern&lt;/code&gt; サポートされているスクリプト名は、&lt;a href=&quot;../../lang/character.unicodescript#forName-java.lang.String-&quot;&gt; &lt;code&gt;UnicodeScript.forName&lt;/code&gt; で&lt;/a&gt;受け入れられ、定義されている有効なスクリプト名です。</target>
        </trans-unit>
        <trans-unit id="afafae7f294d0de7bc87bb9a26199785990e9648" translate="yes" xml:space="preserve">
          <source>The scripting API consists of interfaces and classes that define Java &lt;sup&gt;TM&lt;/sup&gt; Scripting Engines and provides a framework for their use in Java applications.</source>
          <target state="translated">スクリプトAPIは、Java &lt;sup&gt;TM&lt;/sup&gt;スクリプトエンジンを定義するインターフェイスとクラスで構成され、Javaアプリケーションで使用するためのフレームワークを提供します。</target>
        </trans-unit>
        <trans-unit id="c9c43eef002cb23064cdf0bd61ad8d93fd63d843" translate="yes" xml:space="preserve">
          <source>The scripting API consists of interfaces and classes that define Java &lt;sup&gt;TM&lt;/sup&gt; Scripting Engines and provides a framework for their use in Java applications. This API is intended for use by application programmers who wish to execute programs written in scripting languages in their Java applications. The scripting language programs are usually provided by the end-users of the applications.</source>
          <target state="translated">スクリプトAPIは、Java &lt;sup&gt;TM&lt;/sup&gt;スクリプトエンジンを定義するインターフェイスとクラスで構成され、Javaアプリケーションで使用するためのフレームワークを提供します。このAPIは、Javaアプリケーションでスクリプト言語で記述されたプログラムを実行したいアプリケーションプログラマによる使用を目的としています。スクリプト言語プログラムは通常、アプリケーションのエンドユーザーによって提供されます。</target>
        </trans-unit>
        <trans-unit id="91a09023d6539d10b0c1f584fa294076db23ca2e" translate="yes" xml:space="preserve">
          <source>The scripting API consists of interfaces and classes that define Java&amp;trade; Scripting Engines and provides a framework for their use in Java applications.</source>
          <target state="translated">The scripting API consists of interfaces and classes that define Java&amp;trade; Scripting Engines and provides a framework for their use in Java applications.</target>
        </trans-unit>
        <trans-unit id="dbb04c3cbf16a517019ff0d16573062dacfefe7e" translate="yes" xml:space="preserve">
          <source>The scripting API consists of interfaces and classes that define Java&amp;trade; Scripting Engines and provides a framework for their use in Java applications. This API is intended for use by application programmers who wish to execute programs written in scripting languages in their Java applications. The scripting language programs are usually provided by the end-users of the applications.</source>
          <target state="translated">The scripting API consists of interfaces and classes that define Java&amp;trade; Scripting Engines and provides a framework for their use in Java applications. This API is intended for use by application programmers who wish to execute programs written in scripting languages in their Java applications. The scripting language programs are usually provided by the end-users of the applications.</target>
        </trans-unit>
        <trans-unit id="1874cbc91889750bd4ed8944d7e77907c076a39f" translate="yes" xml:space="preserve">
          <source>The scroll bar's bubble may not be displayed when it is not moveable (e.g. when it takes up the entire length of the scroll bar's track, or when the scroll bar is disabled). Whether the bubble is displayed or not will not affect the value returned by &lt;code&gt;getVisibleAmount&lt;/code&gt;.</source>
          <target state="translated">The scroll bar's bubble may not be displayed when it is not moveable (e.g. when it takes up the entire length of the scroll bar's track, or when the scroll bar is disabled). Whether the bubble is displayed or not will not affect the value returned by &lt;code&gt;getVisibleAmount&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97033424809eec61b4328169ae2d5e8590d94a71" translate="yes" xml:space="preserve">
          <source>The scroll begin event.</source>
          <target state="translated">スクロール開始イベント。</target>
        </trans-unit>
        <trans-unit id="bbde2811daac4486a0d468cb8007d4cb47236d0e" translate="yes" xml:space="preserve">
          <source>The scroll end event.</source>
          <target state="translated">スクロール終了イベント。</target>
        </trans-unit>
        <trans-unit id="004e7fbf09f50fe4e8b7ac9e967dfbe4024d2b0c" translate="yes" xml:space="preserve">
          <source>The scrollbar is flexible along it's scrolling axis and rigid along the other axis.</source>
          <target state="translated">スクロールバーはスクロール軸に沿って柔軟性があり、他の軸に沿って剛性があります。</target>
        </trans-unit>
        <trans-unit id="382eadecc4f037382eec5e741ad0ea680bcfcb6e" translate="yes" xml:space="preserve">
          <source>The scrollpane's horizontal scrollbar child.</source>
          <target state="translated">スクロールペインの水平スクロールバーの子。</target>
        </trans-unit>
        <trans-unit id="1e11140820d076c7d796e1e85149749c745f6fe9" translate="yes" xml:space="preserve">
          <source>The scrollpane's horizontal scrollbar child. Default is a &lt;code&gt;JScrollBar&lt;/code&gt;.</source>
          <target state="translated">The scrollpane's horizontal scrollbar child. Default is a &lt;code&gt;JScrollBar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c8de2f0f7fbe23e6af5b111099c0e258b48a689" translate="yes" xml:space="preserve">
          <source>The scrollpane's vertical scrollbar child.</source>
          <target state="translated">スクロールペインの垂直スクロールバーの子。</target>
        </trans-unit>
        <trans-unit id="9ede92af942aaedafaf8414479c489583940b562" translate="yes" xml:space="preserve">
          <source>The scrollpane's vertical scrollbar child. Default is a &lt;code&gt;JScrollBar&lt;/code&gt;.</source>
          <target state="translated">The scrollpane's vertical scrollbar child. Default is a &lt;code&gt;JScrollBar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed6800d98f16995f5770b6c60e908abcfe32f1d9" translate="yes" xml:space="preserve">
          <source>The scrollpane's viewport child.</source>
          <target state="translated">スクロールペインのビューポートの子。</target>
        </trans-unit>
        <trans-unit id="0e686b1765e2793e43fa880f8aa01f46c51c762b" translate="yes" xml:space="preserve">
          <source>The scrollpane's viewport child. Default is an empty &lt;code&gt;JViewport&lt;/code&gt;.</source>
          <target state="translated">The scrollpane's viewport child. Default is an empty &lt;code&gt;JViewport&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1adc17dbde6a6617e4245b5f40d3e5c15d6310c1" translate="yes" xml:space="preserve">
          <source>The search is started in the current catalog. If a match is found, no further attempt will be made. Only if there is no match in the current catalog, will alternate catalogs including delegate and next catalogs be considered.</source>
          <target state="translated">検索は現在のカタログから開始されます。一致するものが見つかった場合は、それ以上の試みは行われません。現在のカタログに一致するものがない場合にのみ、デリゲートやネクストカタログを含む代替カタログが検討されます。</target>
        </trans-unit>
        <trans-unit id="234d2029591ee11c919d4dd5c206f5910e43d339" translate="yes" xml:space="preserve">
          <source>The search order is described in the documentation for &lt;a href=&quot;#getResource(java.lang.String)&quot;&gt;&lt;code&gt;getResource(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The search order is described in the documentation for &lt;a href=&quot;#getResource(java.lang.String)&quot;&gt; &lt;code&gt;getResource(String)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="81db3c5442cb31038e49ee8d70757fa89532101d" translate="yes" xml:space="preserve">
          <source>The search order is described in the documentation for &lt;a href=&quot;#getSystemResource(java.lang.String)&quot;&gt;&lt;code&gt;getSystemResource(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The search order is described in the documentation for &lt;a href=&quot;#getSystemResource(java.lang.String)&quot;&gt; &lt;code&gt;getSystemResource(String)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5785d6097b7d16726e6bb2855b1f1eebb4a0faba" translate="yes" xml:space="preserve">
          <source>The search order is described in the documentation for &lt;a href=&quot;../lang/classloader#getResource(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.getResource(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The search order is described in the documentation for &lt;a href=&quot;../lang/classloader#getResource(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.getResource(String)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6cbe5e391a79ef4fb56cc4fe90eb28db84ba088c" translate="yes" xml:space="preserve">
          <source>The search order is described in the documentation for &lt;a href=&quot;../lang/classloader#getResource-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.getResource(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">検索順序は&lt;a href=&quot;../lang/classloader#getResource-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.getResource(String)&lt;/code&gt; の&lt;/a&gt;ドキュメントに記載されています。</target>
        </trans-unit>
        <trans-unit id="14a9f3a688129049dc155e8aa96211ff37a84c5a" translate="yes" xml:space="preserve">
          <source>The search order is described in the documentation for &lt;a href=&quot;classloader#getResource-java.lang.String-&quot;&gt;&lt;code&gt;getResource(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">検索順序は、&lt;a href=&quot;classloader#getResource-java.lang.String-&quot;&gt; &lt;code&gt;getResource(String)&lt;/code&gt; の&lt;/a&gt;ドキュメントに記載されています。</target>
        </trans-unit>
        <trans-unit id="7b1a2e358f079002238a405e9b7e93cabc439a00" translate="yes" xml:space="preserve">
          <source>The search order is described in the documentation for &lt;a href=&quot;classloader#getSystemResource-java.lang.String-&quot;&gt;&lt;code&gt;getSystemResource(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">検索順序は、&lt;a href=&quot;classloader#getSystemResource-java.lang.String-&quot;&gt; &lt;code&gt;getSystemResource(String)&lt;/code&gt; の&lt;/a&gt;ドキュメントで説明されています。</target>
        </trans-unit>
        <trans-unit id="08ee7f2ec763cae105fa5de7897720ebb90d644f" translate="yes" xml:space="preserve">
          <source>The search order of locale sensitive services can be configured by using the &quot;java.locale.providers&quot; system property. This system property declares the user's preferred order for looking up the locale sensitive services separated by a comma. It is only read at the Java runtime startup, so the later call to System.setProperty() won't affect the order.</source>
          <target state="translated">ロケールに依存するサービスの検索順は、システムプロパティ &quot;java.locale.providers&quot; を使用して設定することができます。このシステムプロパティは、ロケールに依存するサービスをカンマで区切って検索する際に、ユーザが希望する検索順序を宣言します。このプロパティは、Java 実行時の起動時にのみ読み込まれるので、後から System.setProperty()を呼び出しても順序には影響しません。</target>
        </trans-unit>
        <trans-unit id="3a60b10d749f6decd1a4f3bf2354bd215518658a" translate="yes" xml:space="preserve">
          <source>The search scope of this SearchControls.</source>
          <target state="translated">この SearchControls の検索スコープ。</target>
        </trans-unit>
        <trans-unit id="8c894820daeb9009f19e3e0e441e8caf2831e1c8" translate="yes" xml:space="preserve">
          <source>The search will not cross naming system boundaries.</source>
          <target state="translated">検索はネーミングシステムの境界を越えることはありません。</target>
        </trans-unit>
        <trans-unit id="71dac0f2a283224db1975250180f8302d951ec94" translate="yes" xml:space="preserve">
          <source>The searched-for class definition existed when the currently executing class was compiled, but the definition can no longer be found.</source>
          <target state="translated">現在実行中のクラスがコンパイルされたときに検索されたクラス定義が存在しましたが、定義が見つからなくなりました。</target>
        </trans-unit>
        <trans-unit id="19f0094b2e54dfb70b25925659062cdceddabfdd" translate="yes" xml:space="preserve">
          <source>The second argument is the default value. A &lt;code&gt;Long&lt;/code&gt; object that represents the value of the second argument is returned if there is no property of the specified name, if the property does not have the correct numeric format, or if the specified name is empty or null.</source>
          <target state="translated">2番目の引数はデフォルト値です。A &lt;code&gt;Long&lt;/code&gt; 指定された名前のプロパティがない場合プロパティが正しい数値形式を持っていない場合、または指定された名前が空またはnullの場合は、2番目の引数の値を表すオブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="6fd52e585e241819acf494d6ce4e0623d9e9bbc2" translate="yes" xml:space="preserve">
          <source>The second argument is the default value. An &lt;code&gt;Integer&lt;/code&gt; object that represents the value of the second argument is returned if there is no property of the specified name, if the property does not have the correct numeric format, or if the specified name is empty or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">2番目の引数はデフォルト値です。アン &lt;code&gt;Integer&lt;/code&gt; 指定された名前のプロパティがない場合プロパティが正しい数値形式を持っていない場合、または指定した名前が空かである場合は、2番目の引数の値を表すオブジェクトは、返される &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f48b892ab5983e62a64c20f51aeb4852a6d40d4" translate="yes" xml:space="preserve">
          <source>The second argument is the default value. The default value is returned if there is no property of the specified name, if the property does not have the correct numeric format, or if the specified name is empty or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">2番目の引数はデフォルト値です。指定された名前のプロパティがない場合、プロパティの数値形式が正しくない場合、または指定された名前が空または &lt;code&gt;null&lt;/code&gt; の場合は、デフォルト値が返されます。</target>
        </trans-unit>
        <trans-unit id="b41fe98f3d794287cf7faede901c217eb147c5f5" translate="yes" xml:space="preserve">
          <source>The second highest justification priority.</source>
          <target state="translated">正当化の優先順位が2番目に高い。</target>
        </trans-unit>
        <trans-unit id="846dd73201fada82f56344da711130e328206130" translate="yes" xml:space="preserve">
          <source>The second is a completion signal that allows the driver to wait until all workers have completed.</source>
          <target state="translated">つ目は、全ての作業者が完了するまで待つことができる完了信号です。</target>
        </trans-unit>
        <trans-unit id="84e48120fa361c307626734228e297300ca0735a" translate="yes" xml:space="preserve">
          <source>The second lowest justification priority.</source>
          <target state="translated">正当化の優先順位が2番目に低い</target>
        </trans-unit>
        <trans-unit id="9c74ca16e8df45ce54eac3795a7c789ada4f5436" translate="yes" xml:space="preserve">
          <source>The second model is that attributes are associated with a name (typically an atomic name) in a DirContext. In this model, an attribute operation on the named object is roughly equivalent to a lookup on the name of the parent DirContext of the named object, followed by the attribute operation invoked on the parent in which the caller supplies the terminal atomic name. The attributes can be viewed as being stored in the parent DirContext (again, this does not imply that the implementation must do so). Objects that are not DirContexts can have attributes, as long as their parents are DirContexts.</source>
          <target state="translated">2 番目のモデルは、属性が DirContext 内の名前 (通常はアトミック名)に関連付けられているというものです。このモデルでは、名前のついたオブジェクトに対する属性操作は、名前のついたオブジェクトの親の DirContext の名前を検索することとほぼ同等であり、その後、親に対して呼び出された属性操作が行われ、呼び出し元が端末の原子名を提供します。属性は親の DirContext に格納されていると見ることができます(ここでも、実装がそうしなければならないことを意味するものではありません)。DirContexts でないオブジェクトは、親が DirContexts である限り、属性を持つことができます。</target>
        </trans-unit>
        <trans-unit id="08627207b7124af34d47a11be9d4eb35f89c3aa4" translate="yes" xml:space="preserve">
          <source>The second node precedes the reference node.</source>
          <target state="translated">2番目のノードは、参照ノードの前に配置されます。</target>
        </trans-unit>
        <trans-unit id="e114c9855232da640f7bcf88369ff012eb0d38ce" translate="yes" xml:space="preserve">
          <source>The second of minute of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;, from 0 to 59.</source>
          <target state="translated">The second of minute of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; , from 0 to 59.</target>
        </trans-unit>
        <trans-unit id="a1a191dfba3988b37aebbbf772bf95fd6c7c5ef5" translate="yes" xml:space="preserve">
          <source>The second-of-day.</source>
          <target state="translated">二日目のこと。</target>
        </trans-unit>
        <trans-unit id="0e870041b0c18ce21d4cc73d1cbae5e1e2aeb07b" translate="yes" xml:space="preserve">
          <source>The second-of-minute.</source>
          <target state="translated">分のうちの2分。</target>
        </trans-unit>
        <trans-unit id="f6efcc10b579d40e24ab34cc216d6d80435a8d31" translate="yes" xml:space="preserve">
          <source>The seconds and nanoseconds are extracted from the specified milliseconds.</source>
          <target state="translated">指定したミリ秒から秒とナノ秒を抽出します。</target>
        </trans-unit>
        <trans-unit id="23a2616566fd816bf2a993165e25281f4a18c7b6" translate="yes" xml:space="preserve">
          <source>The seconds and nanoseconds are extracted from the specified nanoseconds.</source>
          <target state="translated">指定したナノ秒から秒とナノ秒を抽出します。</target>
        </trans-unit>
        <trans-unit id="7a0383fffb7779acd5ef652edbc25f76897e0327" translate="yes" xml:space="preserve">
          <source>The seconds are calculated based on the standard definition of a day, where each day is 86400 seconds which implies a 24 hour day. The nanosecond in second field is set to zero.</source>
          <target state="translated">秒は1日の標準的な定義に基づいて計算され、各日は86400秒であり、これは24時間の1日を意味します。秒フィールドのナノ秒はゼロに設定されています。</target>
        </trans-unit>
        <trans-unit id="18dafaf48750adbb9e664a9c182377f5852b8936" translate="yes" xml:space="preserve">
          <source>The seconds are calculated based on the standard definition of a minute, where each minute is 60 seconds. The nanosecond in second field is set to zero.</source>
          <target state="translated">秒は、1分が60秒である標準的な1分の定義に基づいて計算されます。秒フィールドのナノ秒はゼロに設定されています。</target>
        </trans-unit>
        <trans-unit id="2bdf17cabd8f715fb436e568230500a070a9d89b" translate="yes" xml:space="preserve">
          <source>The seconds are calculated based on the standard definition of an hour, where each hour is 3600 seconds. The nanosecond in second field is set to zero.</source>
          <target state="translated">秒は1時間の標準的な定義に基づいて計算され、1時間は3600秒です。秒フィールドのナノ秒はゼロに設定されています。</target>
        </trans-unit>
        <trans-unit id="a48467f35f4c20748fa3acc00c4bb7c44e6d23fb" translate="yes" xml:space="preserve">
          <source>The secure communications modes include:</source>
          <target state="translated">安全な通信モードには、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="eb1ed30a436bf227420125540bd43fdab515b945" translate="yes" xml:space="preserve">
          <source>The security consideration is important with respect to internationalization domain name support. For example, English domain names may be</source>
          <target state="translated">国際化ドメイン名対応に関しては、セキュリティへの配慮が重要です。例えば、英語のドメイン名は</target>
        </trans-unit>
        <trans-unit id="8754c4a5e5f52f313c5ec7c42a10eeb348a2de09" translate="yes" xml:space="preserve">
          <source>The security manager is a class that allows applications to implement a security policy.</source>
          <target state="translated">セキュリティマネージャは、アプリケーションがセキュリティポリシーを実装するためのクラスです。</target>
        </trans-unit>
        <trans-unit id="5f541439356895d1a7b18c9420f1d7b1125db20e" translate="yes" xml:space="preserve">
          <source>The security manager is a class that allows applications to implement a security policy. Granting the setSecurityManager permission would allow code to change which security manager is used by installing a different, possibly less restrictive security manager, thereby bypassing checks that would have been enforced by the original security manager.</source>
          <target state="translated">セキュリティマネージャは、アプリケーションがセキュリティポリシーを実装するためのクラスです。setSecurityManager 権限を付与することで、コードは別の、制限が少ない可能性のあるセキュリティマネージャをインストールすることで、使用するセキュリティマネージャを変更することができ、それによって、元のセキュリティマネージャによって実施されていたであろうチェックをバイパスすることができます。</target>
        </trans-unit>
        <trans-unit id="ea632fc690ffe8730861707a2c56b33a9b6867d2" translate="yes" xml:space="preserve">
          <source>The security manager is a class that allows applications to implement a security policy. It allows an application to determine, before performing a possibly unsafe or sensitive operation, what the operation is and whether it is being attempted in a security context that allows the operation to be performed. The application can allow or disallow the operation.</source>
          <target state="translated">セキュリティマネージャは、アプリケーションがセキュリティポリシーを実装するためのクラスです。これにより、アプリケーションは、安全でない可能性のある操作や機密性の高い操作を実行する前に、 その操作が何であるか、また、その操作を可能にするセキュリティコンテキストで実行しようとしているかどうかを判断することができます。アプリケーションは、操作を許可したり、許可しなかったりすることができます。</target>
        </trans-unit>
        <trans-unit id="77cdd2014731846d35b1ae24ee942e1177ba673e" translate="yes" xml:space="preserve">
          <source>The security manager is thereby given an opportunity to prevent completion of the operation by throwing an exception. A security manager routine simply returns if the operation is permitted, but throws a &lt;code&gt;SecurityException&lt;/code&gt; if the operation is not permitted.</source>
          <target state="translated">The security manager is thereby given an opportunity to prevent completion of the operation by throwing an exception. A security manager routine simply returns if the operation is permitted, but throws a &lt;code&gt;SecurityException&lt;/code&gt; if the operation is not permitted.</target>
        </trans-unit>
        <trans-unit id="c0ed1fb6cefbd737d506d963693aa54fe70100ed" translate="yes" xml:space="preserve">
          <source>The security manager is thereby given an opportunity to prevent completion of the operation by throwing an exception. A security manager routine simply returns if the operation is permitted, but throws a &lt;code&gt;SecurityException&lt;/code&gt; if the operation is not permitted. The only exception to this convention is &lt;code&gt;checkTopLevelWindow&lt;/code&gt;, which returns a &lt;code&gt;boolean&lt;/code&gt; value.</source>
          <target state="translated">これにより、セキュリティマネージャは、例外をスローすることで操作の完了を防ぐ機会が与えられます。操作が許可されている場合、セキュリティマネージャルーチンは単純に戻りますが、操作が許可されていない場合は &lt;code&gt;SecurityException&lt;/code&gt; をスローします。この規則の唯一の例外は、 &lt;code&gt;boolean&lt;/code&gt; 値を返す &lt;code&gt;checkTopLevelWindow&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a67c38f887b66e32ea2617d5a99442f063242dfe" translate="yes" xml:space="preserve">
          <source>The security provider framework uses this method with some types of services to quickly exclude non-matching implementations for consideration. Applications will typically not need to call it.</source>
          <target state="translated">セキュリティプロバイダのフレームワークでは、このメソッドをいくつかのタイプのサービスで使用して、非一致の実装を素早く除外して検討します。アプリケーションは通常、このメソッドを呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="741ac520b2873a175ac0092c4d1afb002e856fbf" translate="yes" xml:space="preserve">
          <source>The segment type constant for a point that specifies the end point of a line to be drawn from the most recently specified point.</source>
          <target state="translated">直近で指定した点から引く線の終点を指定する点のセグメント型定数です。</target>
        </trans-unit>
        <trans-unit id="3973bcf55ac17cd3ee487605b4f605a51f7088ed" translate="yes" xml:space="preserve">
          <source>The segment type constant for a point that specifies the starting location for a new subpath.</source>
          <target state="translated">新しいサブパスの開始位置を指定する点のセグメント型定数。</target>
        </trans-unit>
        <trans-unit id="80aba145fc2824f9bd007706a9f479370c0b4eb2" translate="yes" xml:space="preserve">
          <source>The segment type constant for the pair of points that specify a quadratic parametric curve to be drawn from the most recently specified point.</source>
          <target state="translated">直近に指定された点から描画される二次パラメトリック曲線を指定する点の組のセグメント型定数。</target>
        </trans-unit>
        <trans-unit id="c18a9968e10da3d03ea7eda9a64c42aeb83bb165" translate="yes" xml:space="preserve">
          <source>The segment type constant for the pair of points that specify a quadratic parametric curve to be drawn from the most recently specified point. The curve is interpolated by solving the parametric control equation in the range &lt;code&gt;(t=[0..1])&lt;/code&gt; using the most recently specified (current) point (CP), the first control point (P1), and the final interpolated control point (P2). The parametric control equation for this curve is:</source>
          <target state="translated">The segment type constant for the pair of points that specify a quadratic parametric curve to be drawn from the most recently specified point. The curve is interpolated by solving the parametric control equation in the range &lt;code&gt;(t=[0..1])&lt;/code&gt; using the most recently specified (current) point (CP), the first control point (P1), and the final interpolated control point (P2). The parametric control equation for this curve is:</target>
        </trans-unit>
        <trans-unit id="87af03fe4753c3d0fd37c06a404fc52727178751" translate="yes" xml:space="preserve">
          <source>The segment type constant for the set of 3 points that specify a cubic parametric curve to be drawn from the most recently specified point.</source>
          <target state="translated">直近に指定された点から描画される立方パラメトリック曲線を指定する3点の集合のセグメント型定数。</target>
        </trans-unit>
        <trans-unit id="0339b07d46a1df3c557c177f88fe1e9060e280d6" translate="yes" xml:space="preserve">
          <source>The segment type constant for the set of 3 points that specify a cubic parametric curve to be drawn from the most recently specified point. The curve is interpolated by solving the parametric control equation in the range &lt;code&gt;(t=[0..1])&lt;/code&gt; using the most recently specified (current) point (CP), the first control point (P1), the second control point (P2), and the final interpolated control point (P3). The parametric control equation for this curve is:</source>
          <target state="translated">The segment type constant for the set of 3 points that specify a cubic parametric curve to be drawn from the most recently specified point. The curve is interpolated by solving the parametric control equation in the range &lt;code&gt;(t=[0..1])&lt;/code&gt; using the most recently specified (current) point (CP), the first control point (P1), the second control point (P2), and the final interpolated control point (P3). The parametric control equation for this curve is:</target>
        </trans-unit>
        <trans-unit id="cb56a94440f8726332fb64d2dd4609e5fa3a2ec8" translate="yes" xml:space="preserve">
          <source>The segment type constant that specifies that the preceding subpath should be closed by appending a line segment back to the point corresponding to the most recent SEG_MOVETO.</source>
          <target state="translated">直近のSEG_MOVETOに対応する点に戻る線分を追加することで、先行するサブパスを閉じることを指定するセグメント型定数。</target>
        </trans-unit>
        <trans-unit id="f99f7b7b77b1d24238b1a7159cfaaf7109131828" translate="yes" xml:space="preserve">
          <source>The selected item may not necessarily be managed by the underlying &lt;code&gt;ListModel&lt;/code&gt;. This disjoint behavior allows for the temporary storage and retrieval of a selected item in the model.</source>
          <target state="translated">The selected item may not necessarily be managed by the underlying &lt;code&gt;ListModel&lt;/code&gt; . This disjoint behavior allows for the temporary storage and retrieval of a selected item in the model.</target>
        </trans-unit>
        <trans-unit id="72d6ad2310e85fb1d6829a4a5954408f8cdc0c95" translate="yes" xml:space="preserve">
          <source>The selected item or &lt;code&gt;null&lt;/code&gt; if there is no selection</source>
          <target state="translated">The selected item or &lt;code&gt;null&lt;/code&gt; if there is no selection</target>
        </trans-unit>
        <trans-unit id="980a17db139f93c4be1dbeca6c1ec98c6a583f36" translate="yes" xml:space="preserve">
          <source>The selected-key set is &lt;a href=&quot;#ksc&quot;&gt;not thread-safe&lt;/a&gt;.</source>
          <target state="translated">選択されたキーセットは&lt;a href=&quot;#ksc&quot;&gt;スレッドセーフで&lt;/a&gt;はありません。</target>
        </trans-unit>
        <trans-unit id="cf5971d519d788492de5d5d81d0e5637fab2e9f3" translate="yes" xml:space="preserve">
          <source>The selected-key set is &lt;a href=&quot;#sksc&quot;&gt;not thread-safe&lt;/a&gt;.</source>
          <target state="translated">The selected-key set is &lt;a href=&quot;#sksc&quot;&gt;not thread-safe&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2853e7255aa0a673fced6a6df84b0254f3157771" translate="yes" xml:space="preserve">
          <source>The selection can be discontiguous on lines with mixed-direction text. Only those characters in the logical range between start and limit appear selected. For example, consider the text 'ABCdef' where capital letters indicate right-to-left text, rendered on a right-to-left line, with a logical selection from 0 to 4 ('ABCd'). The text appears as follows, with bold standing in for the selection, and underlining for the extension:</source>
          <target state="translated">方向が混在するテ キ ス ト を持つ行では、 選択範囲が不連続にな る こ と があ り ます。開始と制限の間の論理範囲内の文字だけが選択されて表示されます。例えば、テキスト 'ABCdef' を考えてみましょう。大文字は右から左へのテキストを示し、右から左への行で表示され、0 から 4 までの論理的な選択範囲 ('ABCd')があります。テキストは次のように表示され、太字が選択範囲を、下線が拡張範囲を表しています。</target>
        </trans-unit>
        <trans-unit id="ee377636b8b2866aeab5296e00c6c54b19e71ed5" translate="yes" xml:space="preserve">
          <source>The selection criteria are represented by a map. Each map entry represents a selection criterion. A provider is selected iff it satisfies all selection criteria. The key for any entry in such a map must be in one of the following two formats:</source>
          <target state="translated">選択基準はマップで表されます。各マップの項目は選択基準を表している。プロバイダは、すべての選択基準を満たす場合に選択される。このようなマップ内のエントリのキーは、以下の 2 つの形式のいずれかでなければならない。</target>
        </trans-unit>
        <trans-unit id="e44ffedc1f376eadaacdab4f99049fa47e9e98b9" translate="yes" xml:space="preserve">
          <source>The selection criterion must be specified in one of the following two formats:</source>
          <target state="translated">選択基準は、次の 2 つの形式のいずれかで指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="74c7112680921edb20e3d4d4f9eaa109f3c9a083" translate="yes" xml:space="preserve">
          <source>The selection is discontiguous because the selected characters are visually discontiguous. Also note that since the range includes the first logical character (A), the selection is extended to the portion of the &lt;code&gt;bounds&lt;/code&gt; before the start of the layout, which in this case (a right-to-left line) is the right portion of the &lt;code&gt;bounds&lt;/code&gt;.</source>
          <target state="translated">The selection is discontiguous because the selected characters are visually discontiguous. Also note that since the range includes the first logical character (A), the selection is extended to the portion of the &lt;code&gt;bounds&lt;/code&gt; before the start of the layout, which in this case (a right-to-left line) is the right portion of the &lt;code&gt;bounds&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f8f3e58fee457f743d90cb3a11b275bb0e5c734" translate="yes" xml:space="preserve">
          <source>The selection model property name.</source>
          <target state="translated">選択モデルのプロパティ名。</target>
        </trans-unit>
        <trans-unit id="5b8e52c4dc1170658ac68079e913b9282a57c2c8" translate="yes" xml:space="preserve">
          <source>The selection operations synchronize on the selector itself, on the key set, and on the selected-key set, in that order. They also synchronize on the cancelled-key set during steps (1) and (3) above.</source>
          <target state="translated">選択操作は、セレクタ自体、キーセット、選択されたキーセットの順に同期します。また、上記(1)と(3)の手順では、キャンセルされたキーセットでも同期します。</target>
        </trans-unit>
        <trans-unit id="a904ff842ccfcf481664d94ff854e457ba5bfb75" translate="yes" xml:space="preserve">
          <source>The selection operations synchronize on the selector itself, on the selected-key set, in that order. They also synchronize on the cancelled-key set during steps (1) and (3) above.</source>
          <target state="translated">選択操作は、セレクタ自身と選択されたキーセットの順に同期します。また、上記の (1)と (3)の手順の間にキャンセルされたキーセットでも同期します。</target>
        </trans-unit>
        <trans-unit id="f0fdc28581457a5d51859c43f5da1f56889794b2" translate="yes" xml:space="preserve">
          <source>The selection state of a &lt;code&gt;JList&lt;/code&gt; is managed by another separate model, an instance of &lt;code&gt;ListSelectionModel&lt;/code&gt;. &lt;code&gt;JList&lt;/code&gt; is initialized with a selection model on construction, and also contains methods to query or set this selection model. Additionally, &lt;code&gt;JList&lt;/code&gt; provides convenient methods for easily managing the selection. These methods, such as &lt;code&gt;setSelectedIndex&lt;/code&gt; and &lt;code&gt;getSelectedValue&lt;/code&gt;, are cover methods that take care of the details of interacting with the selection model. By default, &lt;code&gt;JList&lt;/code&gt;'s selection model is configured to allow any combination of items to be selected at a time; selection mode &lt;code&gt;MULTIPLE_INTERVAL_SELECTION&lt;/code&gt;. The selection mode can be changed on the selection model directly, or via &lt;code&gt;JList&lt;/code&gt;'s cover method. Responsibility for updating the selection model in response to user gestures lies with the list's &lt;code&gt;ListUI&lt;/code&gt;.</source>
          <target state="translated">The selection state of a &lt;code&gt;JList&lt;/code&gt; is managed by another separate model, an instance of &lt;code&gt;ListSelectionModel&lt;/code&gt; . &lt;code&gt;JList&lt;/code&gt; is initialized with a selection model on construction, and also contains methods to query or set this selection model. Additionally, &lt;code&gt;JList&lt;/code&gt; provides convenient methods for easily managing the selection. These methods, such as &lt;code&gt;setSelectedIndex&lt;/code&gt; and &lt;code&gt;getSelectedValue&lt;/code&gt; , are cover methods that take care of the details of interacting with the selection model. By default, &lt;code&gt;JList&lt;/code&gt; 's selection model is configured to allow any combination of items to be selected at a time; selection mode &lt;code&gt;MULTIPLE_INTERVAL_SELECTION&lt;/code&gt; . The selection mode can be changed on the selection model directly, or via &lt;code&gt;JList&lt;/code&gt; 's cover method. Responsibility for updating the selection model in response to user gestures lies with the list's &lt;code&gt;ListUI&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac9f90ca688127c456774524ecd9188f16470783" translate="yes" xml:space="preserve">
          <source>The semantics for when a CSS style should overide visual attributes defined by an element are not well defined. For example, the html &lt;code&gt;&amp;lt;body bgcolor=red&amp;gt;&lt;/code&gt; makes the body have a red background. But if the html file also contains the CSS rule &lt;code&gt;body { background: blue }&lt;/code&gt; it becomes less clear as to what color the background of the body should be. The current implementation gives visual attributes defined in the element the highest precedence, that is they are always checked before any styles. Therefore, in the previous example the background would have a red color as the body element defines the background color to be red.</source>
          <target state="translated">The semantics for when a CSS style should overide visual attributes defined by an element are not well defined. For example, the html &lt;code&gt;&amp;lt;body bgcolor=red&amp;gt;&lt;/code&gt; makes the body have a red background. But if the html file also contains the CSS rule &lt;code&gt;body { background: blue }&lt;/code&gt; it becomes less clear as to what color the background of the body should be. The current implementation gives visual attributes defined in the element the highest precedence, that is they are always checked before any styles. Therefore, in the previous example the background would have a red color as the body element defines the background color to be red.</target>
        </trans-unit>
        <trans-unit id="95202ca438f08b9e0031b9c4bfdeb9b4df852c33" translate="yes" xml:space="preserve">
          <source>The semantics of the List returned by this method become undefined if the backing list (i.e., this List) is</source>
          <target state="translated">このメソッドが返すリストのセマンティクスは、バッキング・リスト (すなわち、このリスト)が</target>
        </trans-unit>
        <trans-unit id="453d2ffd1b3b134c5fd9217f7532df9b822182d8" translate="yes" xml:space="preserve">
          <source>The semantics of the beanName parameter are defined by java.beans.Beans.instantiate.</source>
          <target state="translated">BeanNameパラメータのセマンティクスはjava.bean.Beans.instantiateで定義されています。</target>
        </trans-unit>
        <trans-unit id="384632fa38dae55d93e0e907e62e3a2804bb5387" translate="yes" xml:space="preserve">
          <source>The semantics of the list returned by this method become undefined if the backing list (i.e., this list) is</source>
          <target state="translated">このメソッドが返すリストのセマンティクスは、バッキングリスト(すなわち、このリスト)が</target>
        </trans-unit>
        <trans-unit id="6eb76390f1c14aef2312c3b26cdfb1a9faf1c0d3" translate="yes" xml:space="preserve">
          <source>The semantics of the list returned by this method become undefined if the backing list (i.e., this list) is modified in any way other than via the returned list.</source>
          <target state="translated">このメソッドによって返されたリストのセマンティクスは、返されたリスト以外の方法でバッキング・リスト (すなわち、このリスト)が変更された場合、不定となります。</target>
        </trans-unit>
        <trans-unit id="d20ea275f88276269e77c1a6a3f0a0a12013fb0a" translate="yes" xml:space="preserve">
          <source>The semantics of this method are unspecified if the arguments could not have been produced by an instance of some valid dynamic proxy class containing this invocation handler.</source>
          <target state="translated">このメソッドのセマンティクスは、この呼び出しハンドラを含む有効な動的プロキシクラスの インスタンスによって引数が生成されなかった場合には不定です。</target>
        </trans-unit>
        <trans-unit id="b8513f09b48ac39c6481ad6003d15d1ff8cbf1f1" translate="yes" xml:space="preserve">
          <source>The semantics of this method may differ from those of the other &lt;code&gt;read&lt;/code&gt; methods in several ways. First, any destination image and/or image type set in the &lt;code&gt;ImageReadParam&lt;/code&gt; may be ignored. Second, the usual listener calls are not guaranteed to be made, or to be meaningful if they are. This is because the returned image may not be fully populated with pixel data at the time it is returned, or indeed at any time.</source>
          <target state="translated">このメソッドのセマンティクスは、他の &lt;code&gt;read&lt;/code&gt; メソッドのセマンティクスといくつかの点で異なる場合があります。まず、 &lt;code&gt;ImageReadParam&lt;/code&gt; に設定されている宛先イメージやイメージタイプは無視されます。第2に、通常のリスナー呼び出しが行われること、または行われる場合に意味があることが保証されていません。これは、返された画像が返されたとき、または実際にはいつでも、返された画像にピクセルデータが完全に入力されていない可能性があるためです。</target>
        </trans-unit>
        <trans-unit id="1cc6107a3ab38aa44b20de1eca06580ad330b25d" translate="yes" xml:space="preserve">
          <source>The sentinel value is chosen so that reflective queries can be made directly against the result value. The sentinel value cannot be confused with a real parameter, since &lt;code&gt;void&lt;/code&gt; is never acceptable as a parameter type. For variable arity invocation modes, the expression &lt;a href=&quot;../class#getComponentType()&quot;&gt;&lt;code&gt;lastParameterType().getComponentType()&lt;/code&gt;&lt;/a&gt; is useful to query the type of the &quot;varargs&quot; parameter.</source>
          <target state="translated">The sentinel value is chosen so that reflective queries can be made directly against the result value. The sentinel value cannot be confused with a real parameter, since &lt;code&gt;void&lt;/code&gt; is never acceptable as a parameter type. For variable arity invocation modes, the expression &lt;a href=&quot;../class#getComponentType()&quot;&gt; &lt;code&gt;lastParameterType().getComponentType()&lt;/code&gt; &lt;/a&gt; is useful to query the type of the &quot;varargs&quot; parameter.</target>
        </trans-unit>
        <trans-unit id="161693ca410ae026e19d3b93be91d521d736f95e" translate="yes" xml:space="preserve">
          <source>The separator between a keystore name prefix and an entry name. When specified, it applies to all the entries in a domain. Its default value is a space.</source>
          <target state="translated">キーストア名の接頭辞とエントリ名の間の区切り文字。指定すると、ドメイン内のすべてのエントリに適用される。デフォルト値はスペースです。</target>
        </trans-unit>
        <trans-unit id="c33bef4fc18f12b61dd742c406adeaac8d64a82d" translate="yes" xml:space="preserve">
          <source>The sequence may be of arbitrary length but the first four elements are assigned specific meanings, as follows:</source>
          <target state="translated">シーケンスは任意の長さであってもよいが、最初の4つの要素には、以下のように特定の意味が割り当てられている。</target>
        </trans-unit>
        <trans-unit id="fddaff8ebac1c2c5c7b43da5bf7781d174bd01f1" translate="yes" xml:space="preserve">
          <source>The sequence number of the earliest notification still in the buffer.</source>
          <target state="translated">バッファに残っている最も古い通知のシーケンス番号。</target>
        </trans-unit>
        <trans-unit id="a4b01bb88787366b6d9e829887a4ae25a588e430" translate="yes" xml:space="preserve">
          <source>The sequence number of the next notification available for querying. This will be the starting sequence number for the next notification query.</source>
          <target state="translated">クエリ可能な次の通知のシーケンス番号。これは、次の通知クエリの開始シーケンス番号になります。</target>
        </trans-unit>
        <trans-unit id="bf0008ac9d1317707e44c068d027348ed859c00f" translate="yes" xml:space="preserve">
          <source>The sequence of characters following an optional sign and/or radix specifier (&quot;&lt;code&gt;0x&lt;/code&gt;&quot;, &quot;&lt;code&gt;0X&lt;/code&gt;&quot;, &quot;&lt;code&gt;#&lt;/code&gt;&quot;, or leading zero) is parsed as by the &lt;code&gt;
 Byte.parseByte&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt;&lt;code&gt;NumberFormatException&lt;/code&gt;&lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">The sequence of characters following an optional sign and/or radix specifier (&quot; &lt;code&gt;0x&lt;/code&gt; &quot;, &quot; &lt;code&gt;0X&lt;/code&gt; &quot;, &quot; &lt;code&gt;#&lt;/code&gt; &quot;, or leading zero) is parsed as by the &lt;code&gt; Byte.parseByte&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt; &lt;code&gt;NumberFormatException&lt;/code&gt; &lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04a5cebfd92c347160af912e87639fade424841a" translate="yes" xml:space="preserve">
          <source>The sequence of characters following an optional sign and/or radix specifier (&quot;&lt;code&gt;0x&lt;/code&gt;&quot;, &quot;&lt;code&gt;0X&lt;/code&gt;&quot;, &quot;&lt;code&gt;#&lt;/code&gt;&quot;, or leading zero) is parsed as by the &lt;code&gt;
 Integer.parseInt&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt;&lt;code&gt;NumberFormatException&lt;/code&gt;&lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;
 String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">The sequence of characters following an optional sign and/or radix specifier (&quot; &lt;code&gt;0x&lt;/code&gt; &quot;, &quot; &lt;code&gt;0X&lt;/code&gt; &quot;, &quot; &lt;code&gt;#&lt;/code&gt; &quot;, or leading zero) is parsed as by the &lt;code&gt; Integer.parseInt&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt; &lt;code&gt;NumberFormatException&lt;/code&gt; &lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt; String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f47a3f697e9bed49511091c71b4c3caa8900d5a" translate="yes" xml:space="preserve">
          <source>The sequence of characters following an optional sign and/or radix specifier (&quot;&lt;code&gt;0x&lt;/code&gt;&quot;, &quot;&lt;code&gt;0X&lt;/code&gt;&quot;, &quot;&lt;code&gt;#&lt;/code&gt;&quot;, or leading zero) is parsed as by the &lt;code&gt;
 Long.parseLong&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt;&lt;code&gt;NumberFormatException&lt;/code&gt;&lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">The sequence of characters following an optional sign and/or radix specifier (&quot; &lt;code&gt;0x&lt;/code&gt; &quot;, &quot; &lt;code&gt;0X&lt;/code&gt; &quot;, &quot; &lt;code&gt;#&lt;/code&gt; &quot;, or leading zero) is parsed as by the &lt;code&gt; Long.parseLong&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt; &lt;code&gt;NumberFormatException&lt;/code&gt; &lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a8c9c139a21299d680c43bec3c9a7c26de6811f" translate="yes" xml:space="preserve">
          <source>The sequence of characters following an optional sign and/or radix specifier (&quot;&lt;code&gt;0x&lt;/code&gt;&quot;, &quot;&lt;code&gt;0X&lt;/code&gt;&quot;, &quot;&lt;code&gt;#&lt;/code&gt;&quot;, or leading zero) is parsed as by the &lt;code&gt;
 Short.parseShort&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt;&lt;code&gt;NumberFormatException&lt;/code&gt;&lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;
 String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">The sequence of characters following an optional sign and/or radix specifier (&quot; &lt;code&gt;0x&lt;/code&gt; &quot;, &quot; &lt;code&gt;0X&lt;/code&gt; &quot;, &quot; &lt;code&gt;#&lt;/code&gt; &quot;, or leading zero) is parsed as by the &lt;code&gt; Short.parseShort&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt; &lt;code&gt;NumberFormatException&lt;/code&gt; &lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt; String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed0c9428f6e0126963f745de2465f141332a6026" translate="yes" xml:space="preserve">
          <source>The sequence of characters following an optional sign and/or radix specifier (&quot;&lt;code&gt;0x&lt;/code&gt;&quot;, &quot;&lt;code&gt;0X&lt;/code&gt;&quot;, &quot;&lt;code&gt;#&lt;/code&gt;&quot;, or leading zero) is parsed as by the &lt;code&gt;Byte.parseByte&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt;&lt;code&gt;NumberFormatException&lt;/code&gt;&lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">オプションの符号または基数指定子（ &quot; &lt;code&gt;0x&lt;/code&gt; &quot;、 &quot; &lt;code&gt;0X&lt;/code&gt; &quot;、 &quot; &lt;code&gt;#&lt;/code&gt; &quot;、または先行ゼロ）に続く文字のシーケンスは、指定された基数（ &lt;code&gt;Byte.parseByte&lt;/code&gt; 、または8 ）を使用してByte.parseByteメソッドによって解析されます。 ）。この文字シーケンスは正の値を表す必要があり&lt;a href=&quot;numberformatexception&quot;&gt; &lt;code&gt;NumberFormatException&lt;/code&gt; &lt;/a&gt;。そうしないと、NumberFormatExceptionがスローされます。指定された &lt;code&gt;String&lt;/code&gt; 最初の文字がマイナス記号の場合、結果は否定されます。 &lt;code&gt;String&lt;/code&gt; で空白文字を使用することはできません。</target>
        </trans-unit>
        <trans-unit id="2c063e5411741f160ae6a46bec35b7a73c1e07d1" translate="yes" xml:space="preserve">
          <source>The sequence of characters following an optional sign and/or radix specifier (&quot;&lt;code&gt;0x&lt;/code&gt;&quot;, &quot;&lt;code&gt;0X&lt;/code&gt;&quot;, &quot;&lt;code&gt;#&lt;/code&gt;&quot;, or leading zero) is parsed as by the &lt;code&gt;Integer.parseInt&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt;&lt;code&gt;NumberFormatException&lt;/code&gt;&lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">オプションの符号または基数指定子（ &quot; &lt;code&gt;0x&lt;/code&gt; &quot;、 &quot; &lt;code&gt;0X&lt;/code&gt; &quot;、 &quot; &lt;code&gt;#&lt;/code&gt; &quot;、または先行ゼロ）に続く文字のシーケンスは、指定された基数（ &lt;code&gt;Integer.parseInt&lt;/code&gt; 、または8 ）を使用してInteger.parseIntメソッドによって解析されます。）。この文字シーケンスは正の値を表す必要があり&lt;a href=&quot;numberformatexception&quot;&gt; &lt;code&gt;NumberFormatException&lt;/code&gt; &lt;/a&gt;。そうしないと、NumberFormatExceptionがスローされます。指定された &lt;code&gt;String&lt;/code&gt; 最初の文字がマイナス記号の場合、結果は否定されます。 &lt;code&gt;String&lt;/code&gt; で空白文字を使用することはできません。</target>
        </trans-unit>
        <trans-unit id="7ce5c427a4177226515b1b8cfab424168d32e788" translate="yes" xml:space="preserve">
          <source>The sequence of characters following an optional sign and/or radix specifier (&quot;&lt;code&gt;0x&lt;/code&gt;&quot;, &quot;&lt;code&gt;0X&lt;/code&gt;&quot;, &quot;&lt;code&gt;#&lt;/code&gt;&quot;, or leading zero) is parsed as by the &lt;code&gt;Long.parseLong&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt;&lt;code&gt;NumberFormatException&lt;/code&gt;&lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">オプションの符号または基数指定子（ &quot; &lt;code&gt;0x&lt;/code&gt; &quot;、 &quot; &lt;code&gt;0X&lt;/code&gt; &quot;、 &quot; &lt;code&gt;#&lt;/code&gt; &quot;、または先行ゼロ）に続く文字のシーケンスは、指定された基数（ &lt;code&gt;Long.parseLong&lt;/code&gt; 、または8 ）を使用してLong.parseLongメソッドによって解析されます。 ）。この文字シーケンスは正の値を表す必要があり&lt;a href=&quot;numberformatexception&quot;&gt; &lt;code&gt;NumberFormatException&lt;/code&gt; &lt;/a&gt;。そうしないと、NumberFormatExceptionがスローされます。指定された &lt;code&gt;String&lt;/code&gt; 最初の文字がマイナス記号の場合、結果は否定されます。 &lt;code&gt;String&lt;/code&gt; で空白文字を使用することはできません。</target>
        </trans-unit>
        <trans-unit id="f4974fa4ef44b513af1028ff49c4b453f94609bd" translate="yes" xml:space="preserve">
          <source>The sequence of characters following an optional sign and/or radix specifier (&quot;&lt;code&gt;0x&lt;/code&gt;&quot;, &quot;&lt;code&gt;0X&lt;/code&gt;&quot;, &quot;&lt;code&gt;#&lt;/code&gt;&quot;, or leading zero) is parsed as by the &lt;code&gt;Short.parseShort&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt;&lt;code&gt;NumberFormatException&lt;/code&gt;&lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">オプションの符号または基数指定子（ &quot; &lt;code&gt;0x&lt;/code&gt; &quot;、 &quot; &lt;code&gt;0X&lt;/code&gt; &quot;、 &quot; &lt;code&gt;#&lt;/code&gt; &quot;、または先行ゼロ）に続く文字のシーケンスは、指定された基数（ &lt;code&gt;Short.parseShort&lt;/code&gt; 、または8 ）を使用してShort.parseShortメソッドによって解析されます。 ）。この文字シーケンスは正の値を表す必要があり&lt;a href=&quot;numberformatexception&quot;&gt; &lt;code&gt;NumberFormatException&lt;/code&gt; &lt;/a&gt;。そうしないと、NumberFormatExceptionがスローされます。指定された &lt;code&gt;String&lt;/code&gt; 最初の文字がマイナス記号の場合、結果は否定されます。 &lt;code&gt;String&lt;/code&gt; で空白文字を使用することはできません。</target>
        </trans-unit>
        <trans-unit id="405b55aaa46e13a89f534b404603b82ce083cf31" translate="yes" xml:space="preserve">
          <source>The sequence of numerals in a version number is compared to another such sequence in numerical, pointwise fashion; &lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;
 10.0.4&lt;/code&gt; is less than &lt;code&gt;10.1.2&lt;/code&gt;. If one sequence is shorter than another then the missing elements of the shorter sequence are considered to be less than the corresponding elements of the longer sequence; &lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;10.0.2&lt;/code&gt; is less than &lt;code&gt;10.0.2.1&lt;/code&gt;.</source>
          <target state="translated">The sequence of numerals in a version number is compared to another such sequence in numerical, pointwise fashion; &lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt; 10.0.4&lt;/code&gt; is less than &lt;code&gt;10.1.2&lt;/code&gt; . If one sequence is shorter than another then the missing elements of the shorter sequence are considered to be less than the corresponding elements of the longer sequence; &lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;10.0.2&lt;/code&gt; is less than &lt;code&gt;10.0.2.1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b7e641ecc2ddbeb716b792bb33db3785fdea384" translate="yes" xml:space="preserve">
          <source>The sequence of task executions continues indefinitely until one of the following exceptional completions occur:</source>
          <target state="translated">タスクの実行シーケンスは、以下の例外的な完了のいずれかが発生するまで無期限に継続します。</target>
        </trans-unit>
        <trans-unit id="e434dd3150cc80ca7cae2f8b8eaeb4038c9e904c" translate="yes" xml:space="preserve">
          <source>The sequence of the candidate locales also corresponds to the runtime resource lookup path (also known as the</source>
          <target state="translated">候補ロケールのシーケンスは、ランタイムリソースのルックアップパス(別名</target>
        </trans-unit>
        <trans-unit id="f7e487534567beaaaf886a79c2a34b214dbcb31b" translate="yes" xml:space="preserve">
          <source>The sequence property will be initialized with a new unique value. These sequence values are allocated in increasing order within a VM.</source>
          <target state="translated">シーケンスプロパティは、新しい一意の値で初期化されます。これらのシーケンス値は、VM内で順番に割り当てられます。</target>
        </trans-unit>
        <trans-unit id="a7cd757d66959c5ea95a29c3e377f5ce005f6f9a" translate="yes" xml:space="preserve">
          <source>The sequential group along the horizontal axis is rendered as a solid blue line. Notice the sequential group is the sum of the children elements it contains.</source>
          <target state="translated">横軸に沿った連続したグループは、青の実線で表示されます。シーケンシャルグループは、それが含む子要素の合計であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c00ff75511a0de0a28d3c3e6f1b65b2b2cd9a528" translate="yes" xml:space="preserve">
          <source>The serial version of the class does not match that of the class descriptor read from the stream</source>
          <target state="translated">クラスのシリアル・バージョンが、ストリームから読み込んだクラス記述子と一致しません。</target>
        </trans-unit>
        <trans-unit id="1bb17ac47a0c237bc15ecd3f6d7915bd46810b1f" translate="yes" xml:space="preserve">
          <source>The serialization filter is initialized to the value of &lt;a href=&quot;objectinputfilter.config#getSerialFilter()&quot;&gt;&lt;code&gt;ObjectInputFilter.Config.getSerialFilter&lt;/code&gt;&lt;/a&gt; when the &lt;code&gt; ObjectInputStream&lt;/code&gt; is constructed and can be set to a custom filter only once.</source>
          <target state="translated">The serialization filter is initialized to the value of &lt;a href=&quot;objectinputfilter.config#getSerialFilter()&quot;&gt; &lt;code&gt;ObjectInputFilter.Config.getSerialFilter&lt;/code&gt; &lt;/a&gt; when the &lt;code&gt; ObjectInputStream&lt;/code&gt; is constructed and can be set to a custom filter only once.</target>
        </trans-unit>
        <trans-unit id="c8b47e4393e9fad0dd6a3358b5377e4c805ad3c8" translate="yes" xml:space="preserve">
          <source>The serialization filter is initialized to the value of &lt;a href=&quot;objectinputfilter.config#getSerialFilter()&quot;&gt;the process-wide filter&lt;/a&gt;.</source>
          <target state="translated">The serialization filter is initialized to the value of &lt;a href=&quot;objectinputfilter.config#getSerialFilter()&quot;&gt;the process-wide filter&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4d3a14fa4f45c6e41704c2ee36ac6cb02bf7a515" translate="yes" xml:space="preserve">
          <source>The serialization filter, when not &lt;code&gt;null&lt;/code&gt;, is invoked for each object (regular or class) read to reconstruct the root object. See &lt;a href=&quot;#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt;&lt;code&gt;setObjectInputFilter&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">The serialization filter, when not &lt;code&gt;null&lt;/code&gt; , is invoked for each object (regular or class) read to reconstruct the root object. See &lt;a href=&quot;#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt; &lt;code&gt;setObjectInputFilter&lt;/code&gt; &lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="bd73bf37e348582139983df9cefa4606f813c326" translate="yes" xml:space="preserve">
          <source>The serialization runtime associates with each serializable class a version number, called a serialVersionUID, which is used during deserialization to verify that the sender and receiver of a serialized object have loaded classes for that object that are compatible with respect to serialization. If the receiver has loaded a class for the object that has a different serialVersionUID than that of the corresponding sender's class, then deserialization will result in an &lt;a href=&quot;invalidclassexception&quot;&gt;&lt;code&gt;InvalidClassException&lt;/code&gt;&lt;/a&gt;. A serializable class can declare its own serialVersionUID explicitly by declaring a field named &lt;code&gt;&quot;serialVersionUID&quot;&lt;/code&gt; that must be static, final, and of type &lt;code&gt;long&lt;/code&gt;:</source>
          <target state="translated">シリアル化ランタイムは、シリアル化可能な各クラスに、serialVersionUIDと呼ばれるバージョン番号を関連付けます。これは、シリアル化されたオブジェクトの送信者と受信者が、そのオブジェクトに対して、シリアル化に関して互換性のあるクラスを読み込んだことを確認するために使用されます。レシーバーが、対応するセンダーのクラスとは異なるserialVersionUIDを持つオブジェクトのクラスをロードした場合、デシリアライズは&lt;a href=&quot;invalidclassexception&quot;&gt; &lt;code&gt;InvalidClassException&lt;/code&gt; になり&lt;/a&gt;ます。直列化可能クラスは、名前のフィールド宣言することにより、独自のserialVersionUIDを明示的に宣言することができ &lt;code&gt;&quot;serialVersionUID&quot;&lt;/code&gt; 静的、最終的でなければならない、とタイプの &lt;code&gt;long&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ae097a868679cbc698e55bf19085a91cd00d50c7" translate="yes" xml:space="preserve">
          <source>The serialver tool</source>
          <target state="translated">シリアルバーツール</target>
        </trans-unit>
        <trans-unit id="72c82fbb03fb7e60a420ba06895a6063d87792bd" translate="yes" xml:space="preserve">
          <source>The server side might use the following variation of this source:</source>
          <target state="translated">サーバー側では、このソースを以下のようなバリエーションで使用することがあります。</target>
        </trans-unit>
        <trans-unit id="c6b7ba8d6780756feb02181d1f3b8e6bc1232ed3" translate="yes" xml:space="preserve">
          <source>The server was able to connect to the output device (or is always connected), but was unable to get a response from the output device.</source>
          <target state="translated">サーバは出力装置に接続できた(または常時接続されている)が、出力装置からの応答を得ることができなかった。</target>
        </trans-unit>
        <trans-unit id="7fc00d2c6bd145d9268cc5b5645d6faef5160f5c" translate="yes" xml:space="preserve">
          <source>The server-side sort control's assigned object identifier is 1.2.840.113556.1.4.473.</source>
          <target state="translated">サーバー側のソートコントロールに割り当てられたオブジェクト識別子は1.2.840.11356.1.4.473です。</target>
        </trans-unit>
        <trans-unit id="683960c5bca78c73afa4105fa8def718cb10bbd7" translate="yes" xml:space="preserve">
          <source>The server-side sort response control's assigned object identifier is 1.2.840.113556.1.4.474.</source>
          <target state="translated">サーバ側ソート応答制御の割り当てられたオブジェクト識別子は、1.2.840.113566.1.4.474です。</target>
        </trans-unit>
        <trans-unit id="99ea3539e9368c270061c3ac165425c2cc085eda" translate="yes" xml:space="preserve">
          <source>The service class must be one of the service types listed in the class specification. If it is not, &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown.</source>
          <target state="translated">The service class must be one of the service types listed in the class specification. If it is not, &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown.</target>
        </trans-unit>
        <trans-unit id="339bce1745ff0ddf550af41337f79c273e458f7f" translate="yes" xml:space="preserve">
          <source>The service named has been registered. getService requests for this service may now be made.</source>
          <target state="translated">指定したサービスが登録されました。</target>
        </trans-unit>
        <trans-unit id="7df31dfe1040963f739d9dbd1f8945217536f695" translate="yes" xml:space="preserve">
          <source>The service named has been revoked. getService requests for this service will no longer be satisfied.</source>
          <target state="translated">指定されたサービスは無効になりました。このサービスに対する getService 要求は、もはや満たされません。</target>
        </trans-unit>
        <trans-unit id="2312f997c09c219c1c3cc983985a51f259efd5c0" translate="yes" xml:space="preserve">
          <source>The service principal name is the canonical name of the &lt;code&gt;KerberosPrincipal&lt;/code&gt; supplying the service, that is the KerberosPrincipal represents a Kerberos service principal. This name is treated in a case sensitive manner. An asterisk may appear by itself, to signify any service principal.</source>
          <target state="translated">サービスプリンシパル名は、サービスを提供する &lt;code&gt;KerberosPrincipal&lt;/code&gt; の正規名です。つまり、KerberosPrincipalはKerberosサービスプリンシパルを表します。この名前は大文字と小文字を区別して扱われます。サービスプリンシパルを示すために、アスタリスクが単独で表示される場合があります。</target>
        </trans-unit>
        <trans-unit id="3eb5c3ef3ec84e9aaec370cd0ee1bf641ca69144" translate="yes" xml:space="preserve">
          <source>The service provider cannot be loaded.</source>
          <target state="translated">サービス提供者の読み込みができません。</target>
        </trans-unit>
        <trans-unit id="82991bdbc004754a76d1b3ab1788eba153946852" translate="yes" xml:space="preserve">
          <source>The service provider class file has more than one public static no-args method named &quot;&lt;code&gt;provider&lt;/code&gt;&quot;.</source>
          <target state="translated">The service provider class file has more than one public static no-args method named &quot; &lt;code&gt;provider&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="6747b4a2a337f04bdc6c20288be6a874d897923c" translate="yes" xml:space="preserve">
          <source>The service provider classes are intended to be lightweight and quick to load. Implementations of these interfaces should avoid complex dependencies on other classes and on native code.</source>
          <target state="translated">サービスプロバイダクラスは、軽量かつ高速にロードできるように設計されています。これらのインタフェースの実装は、他のクラスやネイティブコードへの複雑な依存関係を避けなければなりません。</target>
        </trans-unit>
        <trans-unit id="c3138211b8863e1d6bc3cf853dd276be24d5ca1e" translate="yes" xml:space="preserve">
          <source>The service provider classes should be lightweight and quick to load. Implementations of these interfaces should avoid complex dependencies on other classes and on native code. The usual pattern for more complex services is to register a lightweight proxy for the heavyweight service.</source>
          <target state="translated">サービスプロバイダクラスは、軽量で読み込みが速いものでなければなりません。これらのインタフェースの実装は、他のクラスやネイティブコードへの複雑な依存関係を避けるべきです。より複雑なサービスのための通常のパターンは、ヘビーウェイトサービスのために軽量なプロキシを登録することです。</target>
        </trans-unit>
        <trans-unit id="f444b1559da4e9d86d6d648069e2d0a6eeb225b7" translate="yes" xml:space="preserve">
          <source>The service provider classes should be to be lightweight and quick to load. Implementations of these interfaces should avoid complex dependencies on other classes and on native code. The usual pattern for more complex services is to register a lightweight proxy for the heavyweight service.</source>
          <target state="translated">サービスプロバイダクラスは、軽量かつ高速にロードできるようにしなければなりません。これらのインタフェースの実装は、他のクラスやネイティブコードへの複雑な依存関係を避けるべきです。より複雑なサービスのための通常のパターンは、ヘビーウェイトサービスのために軽量なプロキシを登録することです。</target>
        </trans-unit>
        <trans-unit id="608ee288ee27216e454b0a3a685e8712eeefa3ae" translate="yes" xml:space="preserve">
          <source>The service provider declares a provider method and it fails by returning &lt;code&gt;null&lt;/code&gt; or throwing an exception.</source>
          <target state="translated">The service provider declares a provider method and it fails by returning &lt;code&gt;null&lt;/code&gt; or throwing an exception.</target>
        </trans-unit>
        <trans-unit id="76904639c98eb74089f8e96e6ac7feed61ec1c9f" translate="yes" xml:space="preserve">
          <source>The service provider declares a public static no-args method named &quot;provider&quot; with a return type that is not assignable to the service's interface or class.</source>
          <target state="translated">サービスプロバイダは、サービスのインターフェイスやクラスに割り当てられない戻り値の型を持つ「プロバイダ」という名前のパブリックな静的無引数メソッドを宣言しています。</target>
        </trans-unit>
        <trans-unit id="e899262ca235e8c71b29084806db99b3aa3bd13b" translate="yes" xml:space="preserve">
          <source>The service provider does not declare a provider method, and either it is not assignable to the service's interface/class or does not have a provider constructor.</source>
          <target state="translated">サービス・プロバイダがプロバイダ・メソッドを宣言しておらず、サービスのインターフェイス/クラスに割り当てられていないか、プロバイダ・コンストラクタを持っていません。</target>
        </trans-unit>
        <trans-unit id="5cd0a169a020016b59c9011b24d88a2afce8a08a" translate="yes" xml:space="preserve">
          <source>The service provider does not declare a provider method, and its provider constructor fails by throwing an exception.</source>
          <target state="translated">サービスプロバイダがプロバイダメソッドを宣言しておらず、プロバイダのコンストラクタが例外を投げて失敗しています。</target>
        </trans-unit>
        <trans-unit id="39722a75ad6a5d7f9c535e0c0bae2bb029dadcb9" translate="yes" xml:space="preserve">
          <source>The service provider for &lt;code&gt;ctx&lt;/code&gt; uses a state factory to obtain the state of &lt;code&gt;printer&lt;/code&gt; for binding into its namespace. A state factory for the &lt;code&gt;Printer&lt;/code&gt; type object might return a more compact object for storage in the naming system.</source>
          <target state="translated">&lt;code&gt;ctx&lt;/code&gt; のサービスプロバイダーは、状態ファクトリを使用して、その名前空間にバインドするための &lt;code&gt;printer&lt;/code&gt; の状態を取得します。 &lt;code&gt;Printer&lt;/code&gt; タイプオブジェクトの状態ファクトリは、ネーミングシステムに格納するためのよりコンパクトなオブジェクトを返す場合があります。</target>
        </trans-unit>
        <trans-unit id="ec2f45b96a8af4cfac898c3be7b94db00df1c82f" translate="yes" xml:space="preserve">
          <source>The service provider instance is chosen as follows:</source>
          <target state="translated">サービスプロバイダのインスタンスは以下のように選択されます。</target>
        </trans-unit>
        <trans-unit id="38127cd4aa0815400585c455d9b08bc1a04388ab" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageInputStream&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageInputStream&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。</target>
        </trans-unit>
        <trans-unit id="1f43b817f684f623aff5dad130484f2da8b725fa" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageInputStream&lt;/code&gt;s. For more information on service provider interfaces, see the class comment for the &lt;code&gt;IIORegistry&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;ImageInputStream&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。サービスプロバイダーインターフェイスの詳細については、 &lt;code&gt;IIORegistry&lt;/code&gt; クラスのコメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="4a256fe03be1948fb7463bd5c25f91b70d8bb367" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageOutputStream&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageOutputStream&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。</target>
        </trans-unit>
        <trans-unit id="baa871f87fb50e99d06890cf145ed5a968d9d468" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageOutputStream&lt;/code&gt;s. For more information on service provider interfaces, see the class comment for the &lt;code&gt;IIORegistry&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;ImageOutputStream&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。サービスプロバイダーインターフェイスの詳細については、 &lt;code&gt;IIORegistry&lt;/code&gt; クラスのコメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="237770f3170d2d602f3c067509f29ea8083b1e81" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageReader&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。</target>
        </trans-unit>
        <trans-unit id="45ed743b0330766c9e4bf1587f45b4bca8c763dd" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageReader&lt;/code&gt;s. For more information on service provider classes, see the class comment for the &lt;code&gt;IIORegistry&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。サービスプロバイダークラスの詳細については、 &lt;code&gt;IIORegistry&lt;/code&gt; クラスのコメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="cdf130a89b8ecdd0fc56c8841a6256d234f7b1d5" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageTranscoder&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageTranscoder&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。</target>
        </trans-unit>
        <trans-unit id="4e56bbbc7919ab4d22d10e83ee3380885f3821d8" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageTranscoder&lt;/code&gt;s. For more information on service provider classes, see the class comment for the &lt;code&gt;IIORegistry&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;ImageTranscoder&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。サービスプロバイダークラスの詳細については、 &lt;code&gt;IIORegistry&lt;/code&gt; クラスのコメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="967704522c5f16add19f7f3f928885832f2dc066" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageWriter&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。</target>
        </trans-unit>
        <trans-unit id="59d3345b89b02c0a3b5eb368b40b37277fb4680d" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageWriter&lt;/code&gt;s. For more information on service provider classes, see the class comment for the &lt;code&gt;IIORegistry&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。サービスプロバイダークラスの詳細については、 &lt;code&gt;IIORegistry&lt;/code&gt; クラスのコメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="d312587539e81ed58f42177944ea87bb18494524" translate="yes" xml:space="preserve">
          <source>The service provider package allows different implementations to be plugged in dynamically. These different implementations include those for the &lt;em&gt;initial context&lt;/em&gt;, and implementations for contexts that can be reached from the initial context.</source>
          <target state="translated">The service provider package allows different implementations to be plugged in dynamically. These different implementations include those for the &lt;em&gt;initial context&lt;/em&gt;, and implementations for contexts that can be reached from the initial context.</target>
        </trans-unit>
        <trans-unit id="a98e2ef3c24a3f8bc1edb7be60c8b0ba1c2ff65d" translate="yes" xml:space="preserve">
          <source>The service provider package provides support for implementors of the &lt;code&gt;javax.naming.Context.lookup()&lt;/code&gt; method and related methods to return Java objects that are natural and intuitive for the Java programmer. For example, when looking up a printer name from the directory, it is natural for you to expect to get back a printer object on which to operate.</source>
          <target state="translated">The service provider package provides support for implementors of the &lt;code&gt;javax.naming.Context.lookup()&lt;/code&gt; method and related methods to return Java objects that are natural and intuitive for the Java programmer. For example, when looking up a printer name from the directory, it is natural for you to expect to get back a printer object on which to operate.</target>
        </trans-unit>
        <trans-unit id="81e08ce13e4bc1e787c03d053631be4ab8564f41" translate="yes" xml:space="preserve">
          <source>The service provider.</source>
          <target state="translated">サービス提供者です。</target>
        </trans-unit>
        <trans-unit id="37af36e76b9cf4fce8d917861e80abd5df5d0dad" translate="yes" xml:space="preserve">
          <source>The service type &lt;code&gt;Provider&lt;/code&gt; is reserved for use by the security framework. Services of this type cannot be added, removed, or modified by applications. The following attributes are automatically placed in each Provider object:</source>
          <target state="translated">サービスタイプ &lt;code&gt;Provider&lt;/code&gt; は、セキュリティフレームワークで使用するために予約されています。このタイプのサービスは、アプリケーションによって追加、削除、または変更することはできません。次の属性は、各プロバイダーオブジェクトに自動的に配置されます。</target>
        </trans-unit>
        <trans-unit id="b78ad8bf21cd550da7623c37d70d45b0515dd961" translate="yes" xml:space="preserve">
          <source>The service type is in a &lt;code&gt;spi&lt;/code&gt; subpackage as it may be packaged in a module separate from the resource bundle providers. For example, the service for a resource bundle named &lt;code&gt;com.example.app.MyResources&lt;/code&gt; must be &lt;code&gt;com.example.app.spi.MyResourcesProvider&lt;/code&gt;:</source>
          <target state="translated">The service type is in a &lt;code&gt;spi&lt;/code&gt; subpackage as it may be packaged in a module separate from the resource bundle providers. For example, the service for a resource bundle named &lt;code&gt;com.example.app.MyResources&lt;/code&gt; must be &lt;code&gt;com.example.app.spi.MyResourcesProvider&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="462d23cf2b980e00ea9308bfd5172025ae0208b0" translate="yes" xml:space="preserve">
          <source>The service will throw a &lt;code&gt;PrintException&lt;/code&gt; if the cancellation did not succeed. A job which has not yet been submitted for printing should throw this exception. Cancelling an already successfully cancelled Print Job is not considered an error and will always succeed.</source>
          <target state="translated">The service will throw a &lt;code&gt;PrintException&lt;/code&gt; if the cancellation did not succeed. A job which has not yet been submitted for printing should throw this exception. Cancelling an already successfully cancelled Print Job is not considered an error and will always succeed.</target>
        </trans-unit>
        <trans-unit id="3e064776c20c4d1bdfca5a291b86a1d978043bc3" translate="yes" xml:space="preserve">
          <source>The service will throw a PrintException if the cancellation did not succeed. A job which has not yet been submitted for printing should throw this exception. Cancelling an already successfully cancelled Print Job is not considered an error and will always succeed.</source>
          <target state="translated">キャンセルが成功しなかった場合、サービスは PrintException をスローします。まだ印刷のために投入されていないジョブは、この例外をスローする必要があります。すでにキャンセルに成功した印刷ジョブのキャンセルはエラーとはみなされず、常に成功します。</target>
        </trans-unit>
        <trans-unit id="7d9cc09e14462c6647d9a6c4a38c382e9755d701" translate="yes" xml:space="preserve">
          <source>The session has been locked/unlocked.</source>
          <target state="translated">セッションがロックされました/ロック解除されました。</target>
        </trans-unit>
        <trans-unit id="00fd623a86061c4531c2be6803ace8d3954aef8e" translate="yes" xml:space="preserve">
          <source>The session was connected/disconnected to the console terminal.</source>
          <target state="translated">コンソールターミナルにセッションが接続/切断されました。</target>
        </trans-unit>
        <trans-unit id="a3cfa1527f162db4e68a86de541d7adab335ef3f" translate="yes" xml:space="preserve">
          <source>The session was connected/disconnected to the remote terminal.</source>
          <target state="translated">セッションがリモート端末に接続/切断されました。</target>
        </trans-unit>
        <trans-unit id="5c8bbfd75efcc20ccff9db728df43aa79026640f" translate="yes" xml:space="preserve">
          <source>The set includes a dependency on &quot;&lt;code&gt;java.base&lt;/code&gt;&quot; when this module is not named &quot;&lt;code&gt;java.base&lt;/code&gt;&quot;. If this module is an automatic module then it does not have a dependency on any module other than &quot;&lt;code&gt;java.base&lt;/code&gt;&quot;.</source>
          <target state="translated">The set includes a dependency on &quot; &lt;code&gt;java.base&lt;/code&gt; &quot; when this module is not named &quot; &lt;code&gt;java.base&lt;/code&gt; &quot;. If this module is an automatic module then it does not have a dependency on any module other than &quot; &lt;code&gt;java.base&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="b64d278b964f5fb0f174b56402a1688783011c63" translate="yes" xml:space="preserve">
          <source>The set is &lt;a href=&quot;#ksc&quot;&gt;safe&lt;/a&gt; for use by multiple concurrent threads.</source>
          <target state="translated">The set is &lt;a href=&quot;#ksc&quot;&gt;safe&lt;/a&gt; for use by multiple concurrent threads.</target>
        </trans-unit>
        <trans-unit id="939369237a0093ae8b76203fbafeae8ecee1df1c" translate="yes" xml:space="preserve">
          <source>The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. If the map is modified while an iteration over the set is in progress (except through the iterator's own &lt;code&gt;remove&lt;/code&gt; operation), the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the map, via the &lt;code&gt;Iterator.remove&lt;/code&gt;, &lt;code&gt;Set.remove&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt;, and &lt;code&gt;clear&lt;/code&gt; operations. It does not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;addAll&lt;/code&gt; operations.</source>
          <target state="translated">セットはマップによってサポートされているため、マップへの変更はセットに反映され、その逆も同様です。セットの反復処理の進行中にマップが変更された場合（イテレータ自体の &lt;code&gt;remove&lt;/code&gt; 操作を除く）、反復の結果は未定義です。セットは、 &lt;code&gt;Iterator.remove&lt;/code&gt; 、 &lt;code&gt;Set.remove&lt;/code&gt; 、 &lt;code&gt;removeAll&lt;/code&gt; 、 &lt;code&gt;retainAll&lt;/code&gt; 、および &lt;code&gt;clear&lt;/code&gt; オペレーションを介して、対応するマッピングをマップから削除する要素の削除をサポートしています。 &lt;code&gt;add&lt;/code&gt; または &lt;code&gt;addAll&lt;/code&gt; 操作はサポートしていません。</target>
        </trans-unit>
        <trans-unit id="08401de134cf52abcaf1f8af2a1683d7c74313a4" translate="yes" xml:space="preserve">
          <source>The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. If the map is modified while an iteration over the set is in progress (except through the iterator's own &lt;code&gt;remove&lt;/code&gt; operation, or through the &lt;code&gt;setValue&lt;/code&gt; operation on a map entry returned by the iterator) the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the map, via the &lt;code&gt;Iterator.remove&lt;/code&gt;, &lt;code&gt;Set.remove&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt; and &lt;code&gt;clear&lt;/code&gt; operations. It does not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;addAll&lt;/code&gt; operations.</source>
          <target state="translated">セットはマップによってサポートされているため、マップへの変更はセットに反映され、その逆も同様です。セットの反復処理中にマップが変更された場合（イテレータ自体の &lt;code&gt;remove&lt;/code&gt; 操作、またはイテレータから返されたマップエントリの &lt;code&gt;setValue&lt;/code&gt; 操作を除く）、反復の結果は未定義です。セットは、 &lt;code&gt;Iterator.remove&lt;/code&gt; 、 &lt;code&gt;Set.remove&lt;/code&gt; 、 &lt;code&gt;removeAll&lt;/code&gt; 、 &lt;code&gt;retainAll&lt;/code&gt; 、および &lt;code&gt;clear&lt;/code&gt; オペレーションを介して、対応するマッピングをマップから削除する要素の削除をサポートします。 &lt;code&gt;add&lt;/code&gt; または &lt;code&gt;addAll&lt;/code&gt; 操作はサポートしていません。</target>
        </trans-unit>
        <trans-unit id="852ef9de08250d48c0d0fc367b3fbed7a9bf4099" translate="yes" xml:space="preserve">
          <source>The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. The set supports element removal, which removes the corresponding mapping from the map, via the &lt;code&gt;Iterator.remove&lt;/code&gt;, &lt;code&gt;Set.remove&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt; and &lt;code&gt;clear&lt;/code&gt; operations. It does not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;addAll&lt;/code&gt; operations.</source>
          <target state="translated">セットはマップによってサポートされているため、マップへの変更はセットに反映され、その逆も同様です。セットは、 &lt;code&gt;Iterator.remove&lt;/code&gt; 、 &lt;code&gt;Set.remove&lt;/code&gt; 、 &lt;code&gt;removeAll&lt;/code&gt; 、 &lt;code&gt;retainAll&lt;/code&gt; 、および &lt;code&gt;clear&lt;/code&gt; オペレーションを介して、対応するマッピングをマップから削除する要素の削除をサポートします。 &lt;code&gt;add&lt;/code&gt; または &lt;code&gt;addAll&lt;/code&gt; 操作はサポートしていません。</target>
        </trans-unit>
        <trans-unit id="335b178dce95c35bddb6f9a6dfbb5dbd684f0d11" translate="yes" xml:space="preserve">
          <source>The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. The set supports element removal, which removes the corresponding mapping from the map, via the &lt;code&gt;Iterator.remove&lt;/code&gt;, &lt;code&gt;Set.remove&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt;, and &lt;code&gt;clear&lt;/code&gt; operations. It does not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;addAll&lt;/code&gt; operations.</source>
          <target state="translated">セットはマップによってサポートされているため、マップへの変更はセットに反映され、その逆も同様です。セットは、 &lt;code&gt;Iterator.remove&lt;/code&gt; 、 &lt;code&gt;Set.remove&lt;/code&gt; 、 &lt;code&gt;removeAll&lt;/code&gt; 、 &lt;code&gt;retainAll&lt;/code&gt; 、および &lt;code&gt;clear&lt;/code&gt; オペレーションを介して、対応するマッピングをマップから削除する要素の削除をサポートしています。 &lt;code&gt;add&lt;/code&gt; または &lt;code&gt;addAll&lt;/code&gt; 操作はサポートしていません。</target>
        </trans-unit>
        <trans-unit id="6f4f2cfd47ef65402bf2cd171ee3694a2946949e" translate="yes" xml:space="preserve">
          <source>The set is created the first time this method is called, and returned in response to all subsequent calls. No synchronization is performed, so there is a slight chance that multiple calls to this method will not all return the same set.</source>
          <target state="translated">セットは、このメソッドが最初に呼び出されたときに作成され、その後のすべての呼び出しに応答して返されます。同期は行われないので、このメソッドを複数回呼び出してもすべて同じセットが返ってこない可能性が少しあります。</target>
        </trans-unit>
        <trans-unit id="5c6dbb0140fcb03f42d68d9b039f3ccf70fab2f5" translate="yes" xml:space="preserve">
          <source>The set of Unicode locale keys, or the empty set if this locale has no Unicode locale keywords.</source>
          <target state="translated">Unicode ロケールキーの集合、あるいはこのロケールが Unicode ロケールキーワードを持たない場合は空の集合。</target>
        </trans-unit>
        <trans-unit id="420b44f1196d7d8713b274baff300cd1830c3000" translate="yes" xml:space="preserve">
          <source>The set of access modes that specify how a variable, referenced by a VarHandle, is accessed.</source>
          <target state="translated">VarHandle によって参照される変数がどのようにアクセスされるかを指定するアクセスモードのセット。</target>
        </trans-unit>
        <trans-unit id="03d9f1bf0b7313c94bfc617aaf5a0c81cfb6185f" translate="yes" xml:space="preserve">
          <source>The set of all legal URI characters consists of the</source>
          <target state="translated">すべての合法的なURI文字の集合は</target>
        </trans-unit>
        <trans-unit id="6452b41f9aa8aa9467f2200dc381d1cdeab705b6" translate="yes" xml:space="preserve">
          <source>The set of all module references that this finder locates</source>
          <target state="translated">このファインダーが検索するすべてのモジュール参照のセット</target>
        </trans-unit>
        <trans-unit id="621a29c69b103747e0b5a4f9c4564c47401600b9" translate="yes" xml:space="preserve">
          <source>The set of attributes.</source>
          <target state="translated">属性の集合体。</target>
        </trans-unit>
        <trans-unit id="3f9639f8c60c46f82dff9817fb5e46940cb7b600" translate="yes" xml:space="preserve">
          <source>The set of available chronologies can be extended by applications. Adding a new calendar system requires the writing of an implementation of &lt;code&gt;Chronology&lt;/code&gt;, &lt;code&gt;ChronoLocalDate&lt;/code&gt; and &lt;code&gt;Era&lt;/code&gt;. The majority of the logic specific to the calendar system will be in the &lt;code&gt;ChronoLocalDate&lt;/code&gt; implementation. The &lt;code&gt;Chronology&lt;/code&gt; implementation acts as a factory.</source>
          <target state="translated">利用可能な暦のセットは、アプリケーションによって拡張できます。新しいカレンダーシステムを追加するには、 &lt;code&gt;Chronology&lt;/code&gt; 、 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 、および &lt;code&gt;Era&lt;/code&gt; の実装を作成する必要があります。カレンダーシステムに固有のロジックの大部分は、 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 実装にあります。 &lt;code&gt;Chronology&lt;/code&gt; 実装では、工場として機能します。</target>
        </trans-unit>
        <trans-unit id="f2e9447eb9ee970654c805a676dce29fdcfb735b" translate="yes" xml:space="preserve">
          <source>The set of bindings used to create the keymap is fetched from the UIManager using a key formed by combining the &lt;a href=&quot;#getPropertyPrefix()&quot;&gt;&lt;code&gt;getPropertyPrefix()&lt;/code&gt;&lt;/a&gt; method and the string &lt;code&gt;.keyBindings&lt;/code&gt;. The type is expected to be &lt;code&gt;JTextComponent.KeyBinding[]&lt;/code&gt;.</source>
          <target state="translated">The set of bindings used to create the keymap is fetched from the UIManager using a key formed by combining the &lt;a href=&quot;#getPropertyPrefix()&quot;&gt; &lt;code&gt;getPropertyPrefix()&lt;/code&gt; &lt;/a&gt; method and the string &lt;code&gt;.keyBindings&lt;/code&gt; . The type is expected to be &lt;code&gt;JTextComponent.KeyBinding[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="681a49f0545cead8f88402e7d9a0b8bf02da8310" translate="yes" xml:space="preserve">
          <source>The set of categories supported by this class is limited to the following standard Image I/O service types:</source>
          <target state="translated">このクラスでサポートされるカテゴリのセットは、以下の標準画像 I/O サービスタイプに限定される。</target>
        </trans-unit>
        <trans-unit id="b989013791c04777bdc8434807fe06cb2e6445b2" translate="yes" xml:space="preserve">
          <source>The set of classes that make up the package may implement a particular specification and if so the specification title, version number, and vendor strings identify that specification. An application can ask if the package is compatible with a particular version, see the &lt;a href=&quot;package#isCompatibleWith-java.lang.String-&quot;&gt;&lt;code&gt;isCompatibleWith&lt;/code&gt;&lt;/a&gt; method for details.</source>
          <target state="translated">パッケージを構成する一連のクラスは特定の仕様を実装する場合があり、実装する場合は、仕様のタイトル、バージョン番号、およびベンダー文字列がその仕様を識別します。アプリケーションは、パッケージが特定のバージョンと互換性があるかどうかを尋ねることができます。詳細については、&lt;a href=&quot;package#isCompatibleWith-java.lang.String-&quot;&gt; &lt;code&gt;isCompatibleWith&lt;/code&gt; &lt;/a&gt;メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="2e76b0b3c09cccc2eda6d0f3d42ddad87d8c8d18" translate="yes" xml:space="preserve">
          <source>The set of classes that make up the run-time package may implement a particular specification. The specification title, version, and vendor (indicating the owner/maintainer of the specification) can be provided when the &lt;code&gt;Package&lt;/code&gt; is defined. An application can ask if the &lt;code&gt;Package&lt;/code&gt; is compatible with a particular specification version by using the &lt;a href=&quot;#isCompatibleWith(java.lang.String)&quot;&gt;&lt;code&gt;Package.isCompatibleWith(String)&lt;/code&gt;&lt;/a&gt; method. In addition, information about the actual classes that make up the run-time package can be provided when the Package is defined. This information consists of an implementation title, version, and vendor (indicating the supplier of the classes).</source>
          <target state="translated">The set of classes that make up the run-time package may implement a particular specification. The specification title, version, and vendor (indicating the owner/maintainer of the specification) can be provided when the &lt;code&gt;Package&lt;/code&gt; is defined. An application can ask if the &lt;code&gt;Package&lt;/code&gt; is compatible with a particular specification version by using the &lt;a href=&quot;#isCompatibleWith(java.lang.String)&quot;&gt; &lt;code&gt;Package.isCompatibleWith(String)&lt;/code&gt; &lt;/a&gt; method. In addition, information about the actual classes that make up the run-time package can be provided when the Package is defined. This information consists of an implementation title, version, and vendor (indicating the supplier of the classes).</target>
        </trans-unit>
        <trans-unit id="bd487059260b770e35e4c25b3c8267f64420d5bc" translate="yes" xml:space="preserve">
          <source>The set of defaults a particular look and feel supports is defined and documented by that look and feel. In addition, each look and feel, or &lt;code&gt;ComponentUI&lt;/code&gt; provided by a look and feel, may access the defaults at different times in their life cycle. Some look and feels may aggressively look up defaults, so that changing a default may not have an effect after installing the look and feel. Other look and feels may lazily access defaults so that a change to the defaults may effect an existing look and feel. Finally, other look and feels might not configure themselves from the defaults table in any way. None-the-less it is usually the case that a look and feel expects certain defaults, so that in general a &lt;code&gt;ComponentUI&lt;/code&gt; provided by one look and feel will not work with another look and feel.</source>
          <target state="translated">The set of defaults a particular look and feel supports is defined and documented by that look and feel. In addition, each look and feel, or &lt;code&gt;ComponentUI&lt;/code&gt; provided by a look and feel, may access the defaults at different times in their life cycle. Some look and feels may aggressively look up defaults, so that changing a default may not have an effect after installing the look and feel. Other look and feels may lazily access defaults so that a change to the defaults may effect an existing look and feel. Finally, other look and feels might not configure themselves from the defaults table in any way. None-the-less it is usually the case that a look and feel expects certain defaults, so that in general a &lt;code&gt;ComponentUI&lt;/code&gt; provided by one look and feel will not work with another look and feel.</target>
        </trans-unit>
        <trans-unit id="8566d5bad5a6af80ccaae4ebc526f12877ada443" translate="yes" xml:space="preserve">
          <source>The set of delimiters (the characters that separate tokens) may be specified either at creation time or on a per-token basis.</source>
          <target state="translated">区切り文字(トークンを区切る文字)のセットは、作成時に指定することも、トークンごとに指定することもできます。</target>
        </trans-unit>
        <trans-unit id="6cfc5f58aa65a6eb138573039e7e6c8ed576bdaf" translate="yes" xml:space="preserve">
          <source>The set of destination bands to be used, as an array of &lt;code&gt;int&lt;/code&gt;s.</source>
          <target state="translated">The set of destination bands to be used, as an array of &lt;code&gt;int&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="7bdff17e6129a79d93316f1c821db4d8f82ede91" translate="yes" xml:space="preserve">
          <source>The set of destination bands to be used, as an array of &lt;code&gt;int&lt;/code&gt;s. By default, the value is &lt;code&gt;null&lt;/code&gt;, indicating all destination bands should be written in order.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; の配列として使用される宛先バンドのセット。デフォルトでは、値は &lt;code&gt;null&lt;/code&gt; で、すべての宛先バンドが順番に書き込まれることを示します。</target>
        </trans-unit>
        <trans-unit id="5b084606f5dbb7234dbaaff078b54b1db5148b15" translate="yes" xml:space="preserve">
          <source>The set of elements that can occur inside the element</source>
          <target state="translated">要素の内部で発生しうる要素の集合</target>
        </trans-unit>
        <trans-unit id="b6dca056975449aabae25e6f632010d1fc2e0826" translate="yes" xml:space="preserve">
          <source>The set of elements that must not occur inside the element</source>
          <target state="translated">要素内で発生してはならない要素の集合</target>
        </trans-unit>
        <trans-unit id="729a1180bc7c2901cd889e8f040bc5045cacfb92" translate="yes" xml:space="preserve">
          <source>The set of events may include additional implementation specific event that are not defined by the enum &lt;a href=&quot;standardwatcheventkinds&quot;&gt;&lt;code&gt;StandardWatchEventKinds&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">イベントのセットには、列挙型&lt;a href=&quot;standardwatcheventkinds&quot;&gt; &lt;code&gt;StandardWatchEventKinds&lt;/code&gt; で&lt;/a&gt;定義されていない、実装固有の追加イベントが含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="5c728dd3ce97aa1a197697a57af717e73be26f0b" translate="yes" xml:space="preserve">
          <source>The set of extension keys, or the empty set if this locale has no extensions.</source>
          <target state="translated">拡張子キーのセット、あるいはこのロケールが拡張子を持たない場合は空のセット。</target>
        </trans-unit>
        <trans-unit id="1ca105b2eec11893f8655aa15ad8f33d78fa091c" translate="yes" xml:space="preserve">
          <source>The set of formats may differ according to the particular images being read or written; this method should indicate all the additional formats supported by the plug-in under any circumstances.</source>
          <target state="translated">フォーマットのセットは、読み書きされる特定の画像によって異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="d6298735c68384e5ce50faeb99e64508afa7e2cb" translate="yes" xml:space="preserve">
          <source>The set of icons and colors used by &lt;code&gt;DefaultTreeCellRenderer&lt;/code&gt; can be configured using the various setter methods. The value for each property is initialized from the defaults table. When the look and feel changes (&lt;code&gt;updateUI&lt;/code&gt; is invoked), any properties that have a value of type &lt;code&gt;UIResource&lt;/code&gt; are refreshed from the defaults table. The following table lists the mapping between &lt;code&gt;DefaultTreeCellRenderer&lt;/code&gt; property and defaults table key:</source>
          <target state="translated">&lt;code&gt;DefaultTreeCellRenderer&lt;/code&gt; で使用されるアイコンと色のセットは、さまざまなセッターメソッドを使用して構成できます。各プロパティの値は、デフォルトのテーブルから初期化されます。ルックアンドフィールが変更されると（ &lt;code&gt;updateUI&lt;/code&gt; が呼び出されると）、 &lt;code&gt;UIResource&lt;/code&gt; 型の値を持つすべてのプロパティがデフォルトテーブルから更新されます。次の表に、 &lt;code&gt;DefaultTreeCellRenderer&lt;/code&gt; プロパティとデフォルトのテーブルキーの間のマッピングを示します。</target>
        </trans-unit>
        <trans-unit id="c3d89520f73d19bfe68e399e47cbe902639a37fe" translate="yes" xml:space="preserve">
          <source>The set of observable modules at both compile-time and run-time is determined by searching several different paths, and also by searching the compiled modules built in to the environment. The search order is as follows:</source>
          <target state="translated">コンパイル時と実行時の両方で観測可能なモジュールのセットは、いくつかの異なるパスを検索し、環境に組み込まれたコンパイル済みモジュールを検索することで決定されます。検索順序は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="6d0d29b95d763e2af0d05f2e532dc0d00a275aa0" translate="yes" xml:space="preserve">
          <source>The set of packages in the module are accumulated by the &lt;code&gt;
 Builder&lt;/code&gt; as the &lt;a href=&quot;#exports(java.lang.String)&quot;&gt;&lt;code&gt;exports&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#opens(java.lang.String)&quot;&gt;&lt;code&gt;opens&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#packages(java.util.Set)&quot;&gt;&lt;code&gt;packages&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#provides(java.lang.String,java.util.List)&quot;&gt;&lt;code&gt;provides&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#mainClass(java.lang.String)&quot;&gt;&lt;code&gt;mainClass&lt;/code&gt;&lt;/a&gt; methods are invoked.</source>
          <target state="translated">モジュール内のパッケージのセットはによって蓄積されている &lt;code&gt; Builder&lt;/code&gt; として&lt;a href=&quot;#exports(java.lang.String)&quot;&gt; &lt;code&gt;exports&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#opens(java.lang.String)&quot;&gt; &lt;code&gt;opens&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#packages(java.util.Set)&quot;&gt; &lt;code&gt;packages&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#provides(java.lang.String,java.util.List)&quot;&gt; &lt;code&gt;provides&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#mainClass(java.lang.String)&quot;&gt; &lt;code&gt;mainClass&lt;/code&gt; の&lt;/a&gt;メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="af1c485e3af079d0e0b924f990daf5f80d7e2329" translate="yes" xml:space="preserve">
          <source>The set of packages in the module is derived from the non-directory entries in the JAR file that have names ending in &quot;&lt;code&gt;.class&lt;/code&gt;&quot;. A candidate package name is derived from the name using the characters up to, but not including, the last forward slash. All remaining forward slashes are replaced with dot (&lt;code&gt;&quot;.&quot;&lt;/code&gt;). If the resulting string is a legal package name then it is assumed to be a package name. For example, if the JAR file contains the entry &quot;&lt;code&gt;p/q/Foo.class&lt;/code&gt;&quot; then the package name derived is &quot;&lt;code&gt;p.q&lt;/code&gt;&quot;.</source>
          <target state="translated">モジュール内のパッケージのセットは、名前が「 &lt;code&gt;.class&lt;/code&gt; 」で終わるJARファイル内の非ディレクトリエントリから派生します。候補パッケージ名は、最後のスラッシュまでの文字を使用した名前から派生しますが、最後のスラッシュは含まれません。残りのすべてのスラッシュはドット（ &lt;code&gt;&quot;.&quot;&lt;/code&gt; ）に置き換えられます。結果の文字列が有効なパッケージ名である場合、それはパッケージ名であると見なされます。たとえば、JARファイルにエントリ「 &lt;code&gt;p/q/Foo.class&lt;/code&gt; 」が含まれている場合、派生するパッケージ名は「 &lt;code&gt;p.q&lt;/code&gt; 」です。</target>
        </trans-unit>
        <trans-unit id="bb27f124976a9cb1da8caffebba927a6c5a0a2ee" translate="yes" xml:space="preserve">
          <source>The set of packages includes all exported and open packages, as well as the packages of any service providers, and the package for the main class.</source>
          <target state="translated">パッケージのセットには、すべてのエクスポートされたパッケージとオープンなパッケージ、サービスプロバイダのパッケージ、メインクラスのパッケージが含まれます。</target>
        </trans-unit>
        <trans-unit id="10d94f3aa7e712fbe40291f913b08a2062951f72" translate="yes" xml:space="preserve">
          <source>The set of parameters defined here may not include all aspects of reverberation as specified by some systems. For example, the Midi Manufacturer's Association (MMA) has an Interactive Audio Special Interest Group (IASIG), which has a 3-D Working Group that has defined a Level 2 Spec (I3DL2). I3DL2 supports filtering of reverberation and control of reverb density. These properties are not included in the JavaSound 1.0 definition of a reverb control. In such a case, the implementing system should either extend the defined reverb control to include additional parameters, or else interpret the system's additional capabilities in a way that fits the model described here.</source>
          <target state="translated">ここで定義されているパラメータのセットは、いくつかのシステムで規定されている残響のすべての側面を含んでいない場合があります。例えば、Midi Manufacturer's Association (MMA)にはInteractive Audio Special Interest Group (IASIG)があり、その中に3-D Working Groupがあり、Level 2 Spec (I3DL2)を定義しています。I3DL2は、残響のフィルタリングと残響密度の制御をサポートしています。これらの特性は、JavaSound 1.0の残響コントロールの定義には含まれていません。このような場合、実装システムは、定義された残響制御を拡張して追加のパラメータを含むようにするか、ここで説明されているモデルに適合するようにシステムの追加機能を解釈しなければなりません。</target>
        </trans-unit>
        <trans-unit id="68d403ff4ac7d3e26edbaf2a349d84bb408ad098" translate="yes" xml:space="preserve">
          <source>The set of permissions evaluated is a function of whether the ProtectionDomain was constructed with a static set of permissions or it was bound to a dynamically mapped set of permissions.</source>
          <target state="translated">評価されるパーミッションのセットは、ProtectionDomainが静的なパーミッションのセットで構築されたか、動的にマップされたパーミッションのセットにバインドされたかの関数です。</target>
        </trans-unit>
        <trans-unit id="0b9b26c8c7dd24de7fa7e0a2e0ee1b1f709f4d4b" translate="yes" xml:space="preserve">
          <source>The set of permissions granted to the principal is then calculated using the simple rule that individual permissions always override the group permissions. That is, the principal's individual negative permission set (specific denial of permissions) overrides the group positive permission set, and the principal's individual positive permission set overrides the group negative permission set.</source>
          <target state="translated">次に、校長に付与された許可のセットは、個々の許可が常にグループの許可を上書きするという単純なルールを使用して計算されます。つまり、校長の個々の否定的な許可セット(許可の特定の拒否)は、グループの肯定的な許可セットを上書きし、校長の個々の肯定的な許可セットは、グループの否定的な許可セットを上書きします。</target>
        </trans-unit>
        <trans-unit id="7c5293b4016e691dbff48573988eed608f1e59b6" translate="yes" xml:space="preserve">
          <source>The set of root modules at compile-time is usually the set of modules being compiled. At run-time, the set of root modules is usually the application module specified to the 'java' launcher. When compiling code in the unnamed module, or at run-time when the main application class is loaded from the class path, then the default set of root modules is implementation specific. In the JDK the default set of root modules contains every module that is observable on the upgrade module path or among the system modules, and that exports at least one package without qualification.</source>
          <target state="translated">コンパイル時のルートモジュールのセットは、通常、コンパイル中のモジュールのセットです。ランタイムでは、ルートモジュールのセットは通常、'java'ランチャーに指定されたアプリケーションモジュールです。名前のないモジュールのコードをコンパイルするとき、または、メインのアプリケーションクラスがクラスパスからロードされたときの実行時には、ルートモジュールのデフォルトセットは実装固有のものになります。JDK では、ルートモジュールのデフォルトセットには、アップグレードモジュールのパス上またはシステムモジュールの中で観測可能で、資格なしで少なくとも 1 つのパッケージをエクスポートするすべてのモジュールが含まれています。</target>
        </trans-unit>
        <trans-unit id="c855c2b33fa2f72b9413d964ffae18f1b08660a6" translate="yes" xml:space="preserve">
          <source>The set of root modules, whose names are the initial input to this algorithm, is determined in an implementation specific manner. The set of root modules may include automatic modules.</source>
          <target state="translated">名前がこのアルゴリズムへの初期入力であるルートモジュールのセットは、実装固有の方法で決定される。ルートモジュールのセットは、自動モジュールを含んでもよい。</target>
        </trans-unit>
        <trans-unit id="1c5e4eed3c1a6ad50555dc5a120636aac05d2d14" translate="yes" xml:space="preserve">
          <source>The set of source bands to be read and destination bands to be written is determined by calling &lt;code&gt;getSourceBands&lt;/code&gt; and &lt;code&gt;getDestinationBands&lt;/code&gt; on the supplied &lt;code&gt;ImageReadParam&lt;/code&gt;. If the lengths of the arrays returned by these methods differ, the set of source bands contains an index larger that the largest available source index, or the set of destination bands contains an index larger than the largest legal destination index, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">読み取られるソースバンドと書き込まれる宛先バンドのセットは、提供された &lt;code&gt;ImageReadParam&lt;/code&gt; で &lt;code&gt;getSourceBands&lt;/code&gt; と &lt;code&gt;getDestinationBands&lt;/code&gt; を呼び出すことによって決定されます。これらのメソッドによって返される配列の長さが異なる場合、ソースバンドのセットに、利用可能な最大のソースインデックスより大きいインデックスが含まれるか、宛先バンドのセットに最大の有効な宛先インデックスより大きいインデックスが含まれる場合、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="c6c7711952ed69b023e8f9dad86209b75e9faa4e" translate="yes" xml:space="preserve">
          <source>The set of supported fields is defined by the chronology and normally includes all &lt;code&gt;ChronoField&lt;/code&gt; date and time fields.</source>
          <target state="translated">サポートされるフィールドのセットは年代順に定義され、通常、すべての &lt;code&gt;ChronoField&lt;/code&gt; の日付と時刻のフィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="17f958194f63b45fb85cee1d1ff860e19a4ebff9" translate="yes" xml:space="preserve">
          <source>The set of supported fields is defined by the chronology and normally includes all &lt;code&gt;ChronoField&lt;/code&gt; date fields.</source>
          <target state="translated">サポートされるフィールドのセットは年代順に定義され、通常はすべての &lt;code&gt;ChronoField&lt;/code&gt; 日付フィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="7b87b275acd5b0bbff5b52b9d09fd971743dbb82" translate="yes" xml:space="preserve">
          <source>The set of supported fields is defined by the chronology and normally includes all &lt;code&gt;ChronoField&lt;/code&gt; fields.</source>
          <target state="translated">サポートされているフィールドのセットは年代順に定義され、通常はすべての &lt;code&gt;ChronoField&lt;/code&gt; フィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="0cd5b52cb97e9595d03bfd112aa6100ad3af1552" translate="yes" xml:space="preserve">
          <source>The set of supported units is defined by the chronology and normally includes all &lt;code&gt;ChronoUnit&lt;/code&gt; date units except &lt;code&gt;FOREVER&lt;/code&gt;.</source>
          <target state="translated">サポートされる単位のセットは年代順に定義され、通常は &lt;code&gt;FOREVER&lt;/code&gt; を除くすべての &lt;code&gt;ChronoUnit&lt;/code&gt; 日付単位が含まれます。</target>
        </trans-unit>
        <trans-unit id="cf91e64de9db3a085379dbaade3e6f6c15d84327" translate="yes" xml:space="preserve">
          <source>The set of supported units is defined by the chronology and normally includes all &lt;code&gt;ChronoUnit&lt;/code&gt; units except &lt;code&gt;FOREVER&lt;/code&gt;.</source>
          <target state="translated">サポートされているユニットのセットは年代順に定義され、通常は &lt;code&gt;FOREVER&lt;/code&gt; を除くすべての &lt;code&gt;ChronoUnit&lt;/code&gt; ユニットが含まれます。</target>
        </trans-unit>
        <trans-unit id="a8ac334c4e2b7db89d71bf277bf47b78996510f3" translate="yes" xml:space="preserve">
          <source>The set of target module names or for an unqualified export, an empty set</source>
          <target state="translated">ターゲットモジュール名のセット、または修飾されていないエクスポートの場合は空のセット</target>
        </trans-unit>
        <trans-unit id="6411c296dc3589a36374e8f730a51bc836538d36" translate="yes" xml:space="preserve">
          <source>The set of target module names or for an unqualified opens, an empty set</source>
          <target state="translated">対象となるモジュール名のセット、または修飾されていないオープンの場合は空のセット</target>
        </trans-unit>
        <trans-unit id="5cec8d2be735850abe92747462139ac2c64dc724" translate="yes" xml:space="preserve">
          <source>The set of terminals supported by a TerminalFactory.</source>
          <target state="translated">TerminalFactoryがサポートする端末の集合です。</target>
        </trans-unit>
        <trans-unit id="1eb0b192e307c8d6408074ffabaad779d8fef889" translate="yes" xml:space="preserve">
          <source>The set of terminals supported by a TerminalFactory. This class allows applications to enumerate the available CardTerminals, obtain a specific CardTerminal, or wait for the insertion or removal of cards.</source>
          <target state="translated">TerminalFactoryがサポートする端末のセット。このクラスは、アプリケーションが利用可能なCardTerminalを列挙したり、特定のCardTerminalを取得したり、カードの挿抜を待ったりすることを可能にします。</target>
        </trans-unit>
        <trans-unit id="921bf8ce163fe63c69e39a66bfba8aae02a1cc6f" translate="yes" xml:space="preserve">
          <source>The set of warnings that are to be suppressed by the compiler in the annotated element.</source>
          <target state="translated">アノテーションされた要素でコンパイラが抑制する警告のセット。</target>
        </trans-unit>
        <trans-unit id="fe5205d619c2546cedc0aae80e2949df5b42d127" translate="yes" xml:space="preserve">
          <source>The set of warnings that are to be suppressed by the compiler in the annotated element. Duplicate names are permitted. The second and successive occurrences of a name are ignored. The presence of unrecognized warning names is</source>
          <target state="translated">アノテーションされた要素の中でコンパイラが抑制する警告のセット。名前の重複を許可します。名前の2回目以降の出現は無視されます。認識されていない警告名の存在は</target>
        </trans-unit>
        <trans-unit id="cf50745559139179ac02ea11a6006ec30ea95b4e" translate="yes" xml:space="preserve">
          <source>The set of zone IDs can increase over time, although in a typical application the set of IDs is fixed. Each call to this method is thread-safe.</source>
          <target state="translated">典型的なアプリケーションではIDのセットは固定ですが、ゾーンIDのセットは時間の経過とともに増加することがあります。このメソッドを呼び出すたびにスレッドセーフになります。</target>
        </trans-unit>
        <trans-unit id="b28e0ecb07f1416bf310fc7c1fb31a72ea753196" translate="yes" xml:space="preserve">
          <source>The set's iterator returns the entries in ascending key order. The set's spliterator additionally reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, with an encounter order that is ascending key order.</source>
          <target state="translated">セットの反復子は、エントリをキーの昇順で返します。セットのspliteratorはさらに報告&lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; を&lt;/a&gt;キーの昇順された出会いのために、。</target>
        </trans-unit>
        <trans-unit id="f353985651bff15e75e3ef09bec38c15d74624a5" translate="yes" xml:space="preserve">
          <source>The set's iterator returns the entries in ascending key order. The set's spliterator is &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;fail-fast&lt;/em&gt;, and additionally reports &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt; with an encounter order that is ascending key order.</source>
          <target state="translated">セットのイテレータは、キーの昇順でエントリを返します。セットのスプリッターは&lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;遅延バインディングであり&lt;/a&gt;&lt;/em&gt;、&lt;em&gt;フェイルファスト&lt;/em&gt;であり、さらに、キーの昇順である遭遇順序で&lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;を報告します。</target>
        </trans-unit>
        <trans-unit id="499442b22634bbf31c6cc45cc4b266d5e35f872c" translate="yes" xml:space="preserve">
          <source>The set's iterator returns the entries in ascending key order. The sets's spliterator is &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;fail-fast&lt;/em&gt;, and additionally reports &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt; with an encounter order that is ascending key order.</source>
          <target state="translated">セットの反復子は、エントリをキーの昇順で返します。セットのスプリッターは&lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;遅延バインディング&lt;/a&gt;&lt;/em&gt;、&lt;em&gt;フェイルファスト&lt;/em&gt;であり、さらに、キーの昇順であるエンカウンター順序で&lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;を報告します。</target>
        </trans-unit>
        <trans-unit id="57326adf471d0608ffe63f3c2ada3c27d35abf46" translate="yes" xml:space="preserve">
          <source>The set's iterator returns the keys in ascending order. The set's spliterator additionally reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, with an encounter order that is ascending key order.</source>
          <target state="translated">セットのイテレータは、キーを昇順で返します。セットのspliteratorはさらに報告&lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; を&lt;/a&gt;キーの昇順された出会いのために、。</target>
        </trans-unit>
        <trans-unit id="4685b0d5732f702ab85c0ed76d92a22ff9945c14" translate="yes" xml:space="preserve">
          <source>The set's iterator returns the keys in ascending order. The set's spliterator additionally reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, with an encounter order that is ascending key order. The spliterator's comparator (see &lt;a href=&quot;../spliterator#getComparator--&quot;&gt;&lt;code&gt;Spliterator.getComparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt; if the map's comparator (see &lt;a href=&quot;concurrentskiplistmap#comparator--&quot;&gt;&lt;code&gt;comparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the map's comparator.</source>
          <target state="translated">セットの反復子は、キーを昇順で返します。セットのspliteratorはさらに報告&lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; を&lt;/a&gt;キーの昇順された出会いのために、。マップのコンパレーター（&lt;a href=&quot;concurrentskiplistmap#comparator--&quot;&gt; &lt;code&gt;comparator()&lt;/code&gt; を&lt;/a&gt;参照）が &lt;code&gt;null&lt;/code&gt; の場合、スプリッターのコンパレーター（&lt;a href=&quot;../spliterator#getComparator--&quot;&gt; &lt;code&gt;Spliterator.getComparator()&lt;/code&gt; &lt;/a&gt;参照）は &lt;code&gt;null&lt;/code&gt; です。それ以外の場合、スプリッターのコンパレーターは、マップのコンパレーターと同じか、同じ合計順序付けを課します。</target>
        </trans-unit>
        <trans-unit id="2714c6b13a1764a93e6b5af72f255c2219e07aa4" translate="yes" xml:space="preserve">
          <source>The set's iterator returns the keys in ascending order. The set's spliterator is &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;fail-fast&lt;/em&gt;, and additionally reports &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt; with an encounter order that is ascending key order. The spliterator's comparator (see &lt;a href=&quot;spliterator#getComparator()&quot;&gt;&lt;code&gt;Spliterator.getComparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt; if the tree map's comparator (see &lt;a href=&quot;sortedmap#comparator()&quot;&gt;&lt;code&gt;SortedMap.comparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the tree map's comparator.</source>
          <target state="translated">セットのイテレータは、キーを昇順で返します。セットのスプリッターは&lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;遅延バインディングであり&lt;/a&gt;&lt;/em&gt;、&lt;em&gt;フェイルファスト&lt;/em&gt;であり、さらに、キーの昇順である遭遇順序で&lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;を報告します。ツリーマップのコンパレーター（&lt;a href=&quot;sortedmap#comparator()&quot;&gt; &lt;code&gt;SortedMap.comparator()&lt;/code&gt; を&lt;/a&gt;参照）が &lt;code&gt;null&lt;/code&gt; の場合、スプリッターのコンパレーター（&lt;a href=&quot;spliterator#getComparator()&quot;&gt; &lt;code&gt;Spliterator.getComparator()&lt;/code&gt; &lt;/a&gt;参照）は &lt;code&gt;null&lt;/code&gt; になります。それ以外の場合、スプリッターのコンパレーターは、ツリーマップのコンパレーターと同じであるか、同じ全順序を課します。</target>
        </trans-unit>
        <trans-unit id="46790b7f24e0bc5b45cc4e19d698ecf9c001e4f2" translate="yes" xml:space="preserve">
          <source>The set's iterator returns the keys in ascending order. The set's spliterator is &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;fail-fast&lt;/em&gt;, and additionally reports &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt; with an encounter order that is ascending key order. The spliterator's comparator (see &lt;a href=&quot;spliterator#getComparator--&quot;&gt;&lt;code&gt;Spliterator.getComparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt; if the tree map's comparator (see &lt;a href=&quot;treemap#comparator--&quot;&gt;&lt;code&gt;comparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the tree map's comparator.</source>
          <target state="translated">セットの反復子は、キーを昇順で返します。セットのスプリッターは&lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;遅延バインディング&lt;/a&gt;&lt;/em&gt;、&lt;em&gt;フェイルファスト&lt;/em&gt;であり、さらに、キーの昇順であるエンカウンター順序で&lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;を報告します。ツリーマップのコンパレータ（&lt;a href=&quot;treemap#comparator--&quot;&gt; &lt;code&gt;comparator()&lt;/code&gt; を&lt;/a&gt;参照）が &lt;code&gt;null&lt;/code&gt; の場合、スプリッタのコンパレータ（&lt;a href=&quot;spliterator#getComparator--&quot;&gt; &lt;code&gt;Spliterator.getComparator()&lt;/code&gt; &lt;/a&gt;参照）は &lt;code&gt;null&lt;/code&gt; です。それ以外の場合、スプリッターのコンパレーターは、ツリーマップのコンパレーターと同じか、または同じ合計順序付けを課します。</target>
        </trans-unit>
        <trans-unit id="a4aff37df53c764fa75784f9af7cc154baaca8cd" translate="yes" xml:space="preserve">
          <source>The setColorModel method is part of the ImageConsumer API which this class must implement to retrieve the pixels.</source>
          <target state="translated">setColorModelメソッドは、このクラスがピクセルを取得するために実装しなければならないImageConsumer APIの一部です。</target>
        </trans-unit>
        <trans-unit id="669f9b373a4883c6affe2d61f4ab478337d861f6" translate="yes" xml:space="preserve">
          <source>The setDimensions method is part of the ImageConsumer API which this class must implement to retrieve the pixels.</source>
          <target state="translated">setDimensions メソッドは、このクラスがピクセルを取得するために実装しなければならない ImageConsumer API の一部です。</target>
        </trans-unit>
        <trans-unit id="c2516eb73a401a0d51802b1215cb53ea3fcb29df" translate="yes" xml:space="preserve">
          <source>The setHints method is part of the ImageConsumer API which this class must implement to retrieve the pixels.</source>
          <target state="translated">setHintsメソッドは、このクラスがピクセルを取得するために実装しなければならないImageConsumer APIの一部です。</target>
        </trans-unit>
        <trans-unit id="0a7737011ca3b4f6d30e5001bcd5a5d682f03093" translate="yes" xml:space="preserve">
          <source>The setPixels method is part of the ImageConsumer API which this class must implement to retrieve the pixels.</source>
          <target state="translated">setPixelsメソッドは、このクラスがピクセルを取得するために実装しなければならないImageConsumer APIの一部です。</target>
        </trans-unit>
        <trans-unit id="253bd9282184644a5e60303ce0fbf43d67f6a7dd" translate="yes" xml:space="preserve">
          <source>The setProperties method is part of the ImageConsumer API which this class must implement to retrieve the pixels.</source>
          <target state="translated">setPropertiesメソッドは、このクラスがピクセルを取得するために実装しなければならないImageConsumer APIの一部です。</target>
        </trans-unit>
        <trans-unit id="780812be2038ec016303466bdffb453d52a56bf6" translate="yes" xml:space="preserve">
          <source>The sets of bindings and actions may be empty but must be non-&lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">バインディングとアクションのセットは空の場合がありますが、 &lt;code&gt;null&lt;/code&gt; 以外である必要があります。</target>
        </trans-unit>
        <trans-unit id="f060c2185618cf2a6c32ef4425c5bbd1f9463f3a" translate="yes" xml:space="preserve">
          <source>The setup parameters and general request properties are manipulated.</source>
          <target state="translated">セットアップパラメータと一般的なリクエストプロパティを操作します。</target>
        </trans-unit>
        <trans-unit id="e45a6b9c2d290d870eaa0f880a9a918246e71542" translate="yes" xml:space="preserve">
          <source>The setup parameters are modified using the following methods:</source>
          <target state="translated">設定パラメータは以下の方法で変更します。</target>
        </trans-unit>
        <trans-unit id="3cd13c7488ba25ddcfcc26fab92f485990ee6b61" translate="yes" xml:space="preserve">
          <source>The seven one-argument public constructors provided by this class ensure that the assertion error returned by the invocation:</source>
          <target state="translated">このクラスが提供する7つの1引数のパブリック・コンストラクタは、呼び出しによって返されるアサーション・エラーを確実にします。</target>
        </trans-unit>
        <trans-unit id="c50586a794dd2d03708cb38eeaec0dfc03ceb15a" translate="yes" xml:space="preserve">
          <source>The severity of the error described by the &lt;code&gt;DOMError&lt;/code&gt; is error.</source>
          <target state="translated">&lt;code&gt;DOMError&lt;/code&gt; によって記述されたエラーの重大度はerrorです。</target>
        </trans-unit>
        <trans-unit id="cbfb5b21f94b1f39201ec64311f786525c788517" translate="yes" xml:space="preserve">
          <source>The severity of the error described by the &lt;code&gt;DOMError&lt;/code&gt; is error. A &lt;code&gt;SEVERITY_ERROR&lt;/code&gt; may not cause the processing to stop if the error can be recovered, unless &lt;code&gt;DOMErrorHandler.handleError()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMError&lt;/code&gt; によって記述されたエラーの重大度はerrorです。A &lt;code&gt;SEVERITY_ERROR&lt;/code&gt; は、エラーが回復することができる場合はしない限り、処理は、停止しない場合があります原因 &lt;code&gt;DOMErrorHandler.handleError()&lt;/code&gt; が返す &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3090b59cda4a3cfaaada15e1b142bdc3aab39edc" translate="yes" xml:space="preserve">
          <source>The severity of the error described by the &lt;code&gt;DOMError&lt;/code&gt; is fatal error.</source>
          <target state="translated">&lt;code&gt;DOMError&lt;/code&gt; によって記述されるエラーの重大度は致命的なエラーです。</target>
        </trans-unit>
        <trans-unit id="c3466b748260d572fcdcf4e5af7a15d80687e823" translate="yes" xml:space="preserve">
          <source>The severity of the error described by the &lt;code&gt;DOMError&lt;/code&gt; is fatal error. A &lt;code&gt;SEVERITY_FATAL_ERROR&lt;/code&gt; will cause the normal processing to stop. The return value of &lt;code&gt;DOMErrorHandler.handleError()&lt;/code&gt; is ignored unless the implementation chooses to continue, in which case the behavior becomes undefined.</source>
          <target state="translated">&lt;code&gt;DOMError&lt;/code&gt; によって記述されるエラーの重大度は致命的なエラーです。A &lt;code&gt;SEVERITY_FATAL_ERROR&lt;/code&gt; は、通常の処理を停止します。実装が続行することを選択しない限り、 &lt;code&gt;DOMErrorHandler.handleError()&lt;/code&gt; の戻り値は無視されます。続行することを選択した場合、動作は未定義になります。</target>
        </trans-unit>
        <trans-unit id="4dce1e66e356c13f39b0e1da4baf5b92e91bdf40" translate="yes" xml:space="preserve">
          <source>The severity of the error described by the &lt;code&gt;DOMError&lt;/code&gt; is warning.</source>
          <target state="translated">&lt;code&gt;DOMError&lt;/code&gt; によって記述されたエラーの重大度は警告です。</target>
        </trans-unit>
        <trans-unit id="faecc9cb5575ec0247ec8c48b1fbdcc24296de12" translate="yes" xml:space="preserve">
          <source>The severity of the error described by the &lt;code&gt;DOMError&lt;/code&gt; is warning. A &lt;code&gt;SEVERITY_WARNING&lt;/code&gt; will not cause the processing to stop, unless &lt;code&gt;DOMErrorHandler.handleError()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMError&lt;/code&gt; によって記述されたエラーの重大度は警告です。 &lt;code&gt;SEVERITY_WARNING&lt;/code&gt; がない限り、停止する処理が発生することはありません &lt;code&gt;DOMErrorHandler.handleError()&lt;/code&gt; が返す &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6683228de459fdaf28b8a641613d107e9fd7efe" translate="yes" xml:space="preserve">
          <source>The severity of the error, either &lt;code&gt;SEVERITY_WARNING&lt;/code&gt;, &lt;code&gt;SEVERITY_ERROR&lt;/code&gt;, or &lt;code&gt;SEVERITY_FATAL_ERROR&lt;/code&gt;.</source>
          <target state="translated">エラーの重大度 &lt;code&gt;SEVERITY_WARNING&lt;/code&gt; 、 &lt;code&gt;SEVERITY_ERROR&lt;/code&gt; 、または &lt;code&gt;SEVERITY_FATAL_ERROR&lt;/code&gt; のいずれかです。</target>
        </trans-unit>
        <trans-unit id="8d1d146216a151be9f0ea1c3654e3497f9a52dbb" translate="yes" xml:space="preserve">
          <source>The severity of this notification. It can be 0 to mean unknown severity or a value from 1 to 6 representing decreasing levels of severity. It can be represented as a decimal string or an &lt;code&gt;Integer&lt;/code&gt;.</source>
          <target state="translated">この通知の重大度。不明な重大度を意味する0か、重大度のレベルの低下を表す1から6の値です。10進文字列または &lt;code&gt;Integer&lt;/code&gt; として表すことができます。</target>
        </trans-unit>
        <trans-unit id="b0eccb8cc0e921de7917ea0c1ada9687bb891455" translate="yes" xml:space="preserve">
          <source>The shaper assumes EUROPEAN as the starting context, that is, if EUROPEAN digits are encountered before any strong directional text in the string, the context is presumed to be EUROPEAN, and so the digits will not shape.</source>
          <target state="translated">シェーパは、開始コンテキストとして EUROPEAN を想定しています。つまり、文字列内の強い方向性のあるテキストの前に EUROPEAN の数字があった場合、そのコンテキストは EUROPEAN であると想定されるため、数字はシェイプされません。</target>
        </trans-unit>
        <trans-unit id="7c0ee07626a06ec319c5fa6dda80e5cd02b895c5" translate="yes" xml:space="preserve">
          <source>The shift modifier.</source>
          <target state="translated">シフト修飾子です。</target>
        </trans-unit>
        <trans-unit id="71c1d09d15500daa94744a275e60c6c2939bb498" translate="yes" xml:space="preserve">
          <source>The shift modifier. An indicator that the shift key was held down during the event.</source>
          <target state="translated">シフト修飾子。イベント中にシフトキーが押されたことを示すインジケータ。</target>
        </trans-unit>
        <trans-unit id="a66fafeb6fbab36159ed0d7cb6e57d97215745bd" translate="yes" xml:space="preserve">
          <source>The short at the buffer's current position</source>
          <target state="translated">バッファの現在位置でのショート</target>
        </trans-unit>
        <trans-unit id="576f2f40fa40978110faae7dddc7b0f100fba9e6" translate="yes" xml:space="preserve">
          <source>The short at the given index</source>
          <target state="translated">指定されたインデックスでのショート</target>
        </trans-unit>
        <trans-unit id="66f18505d5b42c405be6d263a2a68a91ad1ba54c" translate="yes" xml:space="preserve">
          <source>The short value at the buffer's current position</source>
          <target state="translated">バッファの現在位置でのショート値</target>
        </trans-unit>
        <trans-unit id="445cdd9d7081047dd595fe2a9c000aec02dddce0" translate="yes" xml:space="preserve">
          <source>The short value at the given index</source>
          <target state="translated">指定されたインデックスでの短い値</target>
        </trans-unit>
        <trans-unit id="d44b2f7b9945d3e00f503b32d73edd3c18066dda" translate="yes" xml:space="preserve">
          <source>The shorts between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the short at index</source>
          <target state="translated">バッファの現在位置とリミットの間のショートは、もしあればバッファの先頭にコピーされます。つまり、インデックス</target>
        </trans-unit>
        <trans-unit id="e6144db94e8f968200473ae365392fcfc5ce0cb6" translate="yes" xml:space="preserve">
          <source>The should be of the format 'BaseOfRange', such as 'MonthOfYear', unless the field has a range of &lt;code&gt;FOREVER&lt;/code&gt;, when only the base unit is mentioned, such as 'Year' or 'Era'.</source>
          <target state="translated">フィールドの範囲が &lt;code&gt;FOREVER&lt;/code&gt; でない限り、「Year」や「Era」などの基本単位のみが言及されている場合は、「MonthOfYear」などの「BaseOfRange」の形式にする必要があります。</target>
        </trans-unit>
        <trans-unit id="3add085de9aaf5d9e08da4a23124aa74c77dac0e" translate="yes" xml:space="preserve">
          <source>The side input tray.</source>
          <target state="translated">側面の入力トレイです。</target>
        </trans-unit>
        <trans-unit id="32380dd36b39ecdac95d6475271f9fd1eac8171d" translate="yes" xml:space="preserve">
          <source>The sign of the hours and minutes components must match. Thus, if the hours is negative, the minutes must be negative or zero. If the hours is zero, the minutes may be positive, negative or zero.</source>
          <target state="translated">時間成分と分成分の符号は一致しなければなりません。したがって、時間が負の場合、分は負またはゼロでなければなりません。時間がゼロの場合、分は正、負、ゼロのいずれかになります。</target>
        </trans-unit>
        <trans-unit id="dc2a7170814ac7bf2d717ef435fa78b42211f6f7" translate="yes" xml:space="preserve">
          <source>The sign of the hours, minutes and seconds components must match. Thus, if the hours is negative, the minutes and seconds must be negative or zero.</source>
          <target state="translated">時間、分、秒の成分の符号は一致しなければなりません。したがって、時が負の場合、分と秒は負またはゼロでなければなりません。</target>
        </trans-unit>
        <trans-unit id="ee96bcfbe6567e84f1f76ed99e4ecc836a96fca7" translate="yes" xml:space="preserve">
          <source>The sign of the years and months units will be the same after normalization. For example, a period of &quot;1 year and -25 months&quot; will be normalized to &quot;-1 year and -1 month&quot;.</source>
          <target state="translated">年月単位の符号は正規化後も同じになります。例えば、「1年-25ヶ月」の期間は「-1年-1ヶ月」に正規化されます。</target>
        </trans-unit>
        <trans-unit id="63a67b56142738f69b16820d1365a14f5a4ee3f6" translate="yes" xml:space="preserve">
          <source>The signature algorithm can be, among others, the NIST standard DSA, using DSA and SHA-1. The DSA algorithm using the SHA-1 message digest algorithm can be specified as &lt;code&gt;SHA1withDSA&lt;/code&gt;. In the case of RSA, there are multiple choices for the message digest algorithm, so the signing algorithm could be specified as, for example, &lt;code&gt;MD2withRSA&lt;/code&gt;, &lt;code&gt;MD5withRSA&lt;/code&gt;, or &lt;code&gt;SHA1withRSA&lt;/code&gt;. The algorithm name must be specified, as there is no default.</source>
          <target state="translated">署名アルゴリズムは、とりわけ、DSAおよびSHA-1を使用するNIST標準DSAです。SHA-1メッセージダイジェストアルゴリズムを使用するDSAアルゴリズムは、 &lt;code&gt;SHA1withDSA&lt;/code&gt; として指定できます。RSAの場合、メッセージダイジェストアルゴリズムには複数の選択肢があるため、署名アルゴリズムは、たとえば、 &lt;code&gt;MD2withRSA&lt;/code&gt; 、 &lt;code&gt;MD5withRSA&lt;/code&gt; 、または &lt;code&gt;SHA1withRSA&lt;/code&gt; として指定できます。デフォルトがないため、アルゴリズム名を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="9a3f13d175903d19542fafe1776e926f2289f74d" translate="yes" xml:space="preserve">
          <source>The signature algorithm can be, among others, the NIST standard DSA, using DSA and SHA-1. The algorithm is specified using the same convention as that for signatures. The DSA algorithm using the SHA-1 message digest algorithm can be specified, for example, as &quot;SHA/DSA&quot; or &quot;SHA-1/DSA&quot; (they are equivalent). In the case of RSA, there are multiple choices for the message digest algorithm, so the signing algorithm could be specified as, for example, &quot;MD2/RSA&quot;, &quot;MD5/RSA&quot; or &quot;SHA-1/RSA&quot;. The algorithm name must be specified, as there is no default.</source>
          <target state="translated">署名アルゴリズムは、とりわけ、DSAおよびSHA-1を使用して、NIST標準のDSAとすることができる。アルゴリズムは、署名の場合と同じ規約を用いて指定される。SHA-1メッセージダイジェストアルゴリズムを用いたDSAアルゴリズムは、例えば、「SHA/DSA」または「SHA-1/DSA」として指定することができる(これらは等価である)。RSAの場合、メッセージダイジェストアルゴリズムには複数の選択肢があるため、署名アルゴリズムは、例えば、「MD2/RSA」、「MD5/RSA」、または「SHA-1/RSA」のように指定することができる。デフォルトではないので、アルゴリズム名を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="a4580befbe651a07f41f435d90006b6e04a4a69a" translate="yes" xml:space="preserve">
          <source>The signature algorithm can be, among others, the NIST standard DSA, using DSA and SHA-256. The DSA algorithm using the SHA-256 message digest algorithm can be specified as &lt;code&gt;SHA256withDSA&lt;/code&gt;. In the case of RSA the signing algorithm could be specified as, for example, &lt;code&gt;SHA256withRSA&lt;/code&gt;. The algorithm name must be specified, as there is no default.</source>
          <target state="translated">署名アルゴリズムは、とりわけ、DSAおよびSHA-256を使用するNIST標準DSAにすることができます。SHA-256メッセージダイジェストアルゴリズムを使用するDSAアルゴリズムは、 &lt;code&gt;SHA256withDSA&lt;/code&gt; として指定できます。RSAの場合、署名アルゴリズムは、たとえば、 &lt;code&gt;SHA256withRSA&lt;/code&gt; として指定できます。デフォルトがないため、アルゴリズム名を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="b6ff0462ece74d8c29d34b7ea3288f3bf76eb9da" translate="yes" xml:space="preserve">
          <source>The signature algorithm can be, among others, the NIST standard DSA, using DSA and SHA-256. The algorithm is specified using the same convention as that for signatures. The DSA algorithm using the SHA-256 message digest algorithm can be specified, for example, as &quot;SHA256withDSA&quot;. In the case of RSA the signing algorithm could be specified as, for example, &quot;SHA256withRSA&quot;. The algorithm name must be specified, as there is no default.</source>
          <target state="translated">署名アルゴリズムは、とりわけ、DSAおよびSHA-256を使用して、NIST標準のDSAとすることができる。アルゴリズムは、署名の場合と同じ規約を用いて指定される。SHA-256メッセージダイジェストアルゴリズムを使用するDSAアルゴリズムは、例えば「SHA256withDSA」として指定できる。RSA の場合、署名アルゴリズムは、例えば「SHA256withRSA」と指定できる。既定値がないので、アルゴリズム名を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="ff39bceb78bb23fcbbe70e1f5873034144eb781f" translate="yes" xml:space="preserve">
          <source>The signature algorithm name must be a standard Java Security name (such as &quot;SHA1withRSA&quot;, &quot;SHA256withECDSA&quot;, and so on). See Appendix A in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/crypto/CryptoSpec.html#AppA&quot;&gt; Java Cryptography Architecture API Specification &amp;amp; Reference &lt;/a&gt; for information about standard algorithm names.</source>
          <target state="translated">署名アルゴリズム名は、標準のJavaセキュリティー名でなければなりません（「SHA1withRSA」、「SHA256withECDSA」など）。標準アルゴリズム名については、&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/crypto/CryptoSpec.html#AppA&quot;&gt;Java暗号化アーキテクチャAPI仕様＆リファレンスの&lt;/a&gt;付録Aを参照してください。</target>
        </trans-unit>
        <trans-unit id="54dcf510ed19a2b7f8be77cd8487aba2b8f5418c" translate="yes" xml:space="preserve">
          <source>The signature algorithm name must be a standard Java Security name (such as &quot;SHA1withRSA&quot;, &quot;SHA256withECDSA&quot;, and so on). See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html&quot;&gt; Java Security Standard Algorithm Names&lt;/a&gt; document for information about standard algorithm names.</source>
          <target state="translated">署名アルゴリズム名は、標準のJavaセキュリティ名（「SHA1withRSA」、「SHA256withECDSA」など）である必要があります。&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html&quot;&gt;標準アルゴリズム名&lt;/a&gt;については、Javaセキュリティの標準アルゴリズム名のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="abb3f7329a67b3d4fbdda3d73c3b635eb5d93e29" translate="yes" xml:space="preserve">
          <source>The signature implementation is reset to its initial state (the state it was in after a call to one of the &lt;code&gt;engineInitSign&lt;/code&gt; methods) and can be reused to generate further signatures with the same private key. This method should be abstract, but we leave it concrete for binary compatibility. Knowledgeable providers should override this method.</source>
          <target state="translated">署名の実装は初期状態（ &lt;code&gt;engineInitSign&lt;/code&gt; メソッドの1つを呼び出した後の状態）にリセットされ、同じ秘密鍵でさらに署名を生成するために再利用できます。このメソッドは抽象的である必要がありますが、バイナリ互換性のために具体化します。知識のあるプロバイダーは、このメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="045f0d9e22ad722e6aac3627bd8e3b08a1c1d73b" translate="yes" xml:space="preserve">
          <source>The signature is invalid.</source>
          <target state="translated">署名は無効です。</target>
        </trans-unit>
        <trans-unit id="1ded27c36fe5ab7411d3e61933f2340152846415" translate="yes" xml:space="preserve">
          <source>The signed object is a &quot;deep copy&quot; (in serialized form) of an original object. Once the copy is made, further manipulation of the original object has no side effect on the copy.</source>
          <target state="translated">署名されたオブジェクトは、オリジナルのオブジェクトの「ディープコピー」(シリアル化された形で)です。一度コピーが作成されると、元のオブジェクトをそれ以上操作してもコピーには何の副作用もありません。</target>
        </trans-unit>
        <trans-unit id="f0a59c44048f0e255610b14982004df77ebcfed2" translate="yes" xml:space="preserve">
          <source>The simple name of an array is the simple name of the component type with &quot;[]&quot; appended. In particular the simple name of an array whose component type is anonymous is &quot;[]&quot;.</source>
          <target state="translated">配列の単純名は、コンポーネント型の単純名に「[]」を付加したものです。特にコンポーネント型が無名の配列の単純名は&quot;[]&quot;です。</target>
        </trans-unit>
        <trans-unit id="4856758e2bc679598150b5beb9072d5658f18a73" translate="yes" xml:space="preserve">
          <source>The simplest implementation of this interface is just:</source>
          <target state="translated">このインターフェイスの最もシンプルな実装は、ただのものです。</target>
        </trans-unit>
        <trans-unit id="2790b740b20a089db3044ca3bea2a585feabf923" translate="yes" xml:space="preserve">
          <source>The simplest method is XYZ scaling. In this method each device XYZ value is converted to a PCS XYZ value by multiplying it by the ratio of the PCS white point (D50) to the device white point.</source>
          <target state="translated">最も単純な方法は XYZ スケーリングである。この方法では、各デバイスの XYZ 値を PCS の白点とデバイスの白点の比(D50)を乗じて PCS の XYZ 値に変換する。</target>
        </trans-unit>
        <trans-unit id="7601d63e6d779f847c6607714e8ec53d040dbbd9" translate="yes" xml:space="preserve">
          <source>The simplest type of ID is that from &lt;code&gt;ZoneOffset&lt;/code&gt;. This consists of 'Z' and IDs starting with '+' or '-'.</source>
          <target state="translated">最も単純なタイプのIDは、 &lt;code&gt;ZoneOffset&lt;/code&gt; からのものです。これは、「Z」と「+」または「-」で始まるIDで構成されます。</target>
        </trans-unit>
        <trans-unit id="c4705f5b2ef8f72b3f9ee11b55f079122ada80e7" translate="yes" xml:space="preserve">
          <source>The simplest use of &lt;code&gt;EventHandler&lt;/code&gt; is to install a listener that calls a method on the target object with no arguments. In the following example we create an &lt;code&gt;ActionListener&lt;/code&gt; that invokes the &lt;code&gt;toFront&lt;/code&gt; method on an instance of &lt;code&gt;javax.swing.JFrame&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EventHandler&lt;/code&gt; の最も簡単な使用法は、引数なしでターゲットオブジェクトのメソッドを呼び出すリスナーをインストールすることです。次の例では、 &lt;code&gt;javax.swing.JFrame&lt;/code&gt; のインスタンスで &lt;code&gt;toFront&lt;/code&gt; メソッドを呼び出す &lt;code&gt;ActionListener&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="ddd983cd346b58b2aaf0f326494e8259d55fa6b4" translate="yes" xml:space="preserve">
          <source>The simulated full-screen mode places and resizes the window to the maximum possible visible area of the screen. However, the native windowing system may modify the requested geometry-related data, so that the &lt;code&gt;Window&lt;/code&gt; object is placed and sized in a way that corresponds closely to the desktop settings.</source>
          <target state="translated">シミュレートされた全画面モードでは、ウィンドウが画面の可能な最大表示領域に配置およびサイズ変更されます。ただし、ネイティブウィンドウシステムは、要求されたジオメトリ関連データを変更する場合があるため、デスクトップ設定に厳密に対応する方法で &lt;code&gt;Window&lt;/code&gt; オブジェクトが配置およびサイズ変更されます。</target>
        </trans-unit>
        <trans-unit id="72ac5c657bc308d65c18c1fea6c9f1bba77d6a25" translate="yes" xml:space="preserve">
          <source>The single instance of &lt;code&gt;EmptySelectionModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EmptySelectionModel&lt;/code&gt; の単一インスタンス。</target>
        </trans-unit>
        <trans-unit id="37fb3690360544e839a41fbd8b8e5c5a45340b29" translate="yes" xml:space="preserve">
          <source>The singleton instance for the 'Heisei' era (1989-01-08 - 2019-04-30) which has the value 2.</source>
          <target state="translated">値2を持つ「平成」時代(1989-01-08~2019-04-30)のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="e33d8bb98b0a97976f391846111c47207f038c46" translate="yes" xml:space="preserve">
          <source>The singleton instance for the 'Heisei' era (1989-01-08 - current) which has the value 2.</source>
          <target state="translated">平成の時代(1989-01-08-現在)のシングルトンインスタンスで、値は2です。</target>
        </trans-unit>
        <trans-unit id="2ad53a43c41fc711e9fc765c7a76f4717f283334" translate="yes" xml:space="preserve">
          <source>The singleton instance for the 'Meiji' era (1868-01-01 - 1912-07-29) which has the value -1.</source>
          <target state="translated">値 -1 を持つ '明治' 時代 (1868-01-01-1912-07-29)のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="d90af347fd6251915ffab61ea28205da8ea6f749" translate="yes" xml:space="preserve">
          <source>The singleton instance for the 'Showa' era (1926-12-25 - 1989-01-07) which has the value 1.</source>
          <target state="translated">値1を持つ「昭和」時代のシングルトンインスタンス(1926-12-25-1989-01-07)。</target>
        </trans-unit>
        <trans-unit id="374b989066c6a8b313cd532f43d4978a478afb4f" translate="yes" xml:space="preserve">
          <source>The singleton instance for the 'Taisho' era (1912-07-30 - 1926-12-24) which has the value 0.</source>
          <target state="translated">大正時代(1912-07-30~1926-12-24)のシングルトンインスタンスで、値は0です。</target>
        </trans-unit>
        <trans-unit id="d1b649d3aca82f1b585114b89db8e7c3dce97afa" translate="yes" xml:space="preserve">
          <source>The singleton instance for the current era, 'Anno Hegirae', which has the numeric value 1.</source>
          <target state="translated">現在の時代のシングルトンインスタンス 'Anno Hegirae' は数値 1 を持っています。</target>
        </trans-unit>
        <trans-unit id="33553f68eda534c6d7ec7b5b2097412f8aa169ef" translate="yes" xml:space="preserve">
          <source>The singleton instance for the current era, 'Buddhist Era', which has the numeric value 1.</source>
          <target state="translated">現在の時代、'仏教時代'のシングルトンインスタンスで、数値は1です。</target>
        </trans-unit>
        <trans-unit id="18e0a9282dc09dc3f8d780bd88319f70049b3bc8" translate="yes" xml:space="preserve">
          <source>The singleton instance for the current era, 'Current Era', which has the numeric value 1.</source>
          <target state="translated">現在の時代のシングルトンインスタンスである'Current Era'は、数値1を持っています。</target>
        </trans-unit>
        <trans-unit id="a9078c5f2b2fb0c83101cd2aab438d63e4d37967" translate="yes" xml:space="preserve">
          <source>The singleton instance for the current era, 'Republic of China Era', which has the numeric value 1.</source>
          <target state="translated">現在の時代、'Republic of China Era'のシングルトンインスタンスで、数値は1です。</target>
        </trans-unit>
        <trans-unit id="37056cb4b1f3c2ee07efbc354ac2f5400ad2df63" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Friday.</source>
          <target state="translated">金曜日の曜日のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="831fb5e46d4c1ddc036d82d37411d75aecf60668" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Friday. This has the numeric value of &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">金曜日のシングルトンインスタンス。これの数値は &lt;code&gt;5&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2ec9586cccb6a778352e7a8dd8a12d2579e4859d" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Monday.</source>
          <target state="translated">月曜日の曜日のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="854466f9d7677acbef6b426929908eeaea0c0ac9" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Monday. This has the numeric value of &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">月曜日の曜日のシングルトンインスタンス。これの数値は &lt;code&gt;1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="95b6e13ea6c89b236812e595ea75de12418330ff" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Saturday.</source>
          <target state="translated">土曜日の曜日のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="6eec5084ed707e201918c7bb81e4ef4045f48ec1" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Saturday. This has the numeric value of &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">土曜日の曜日のシングルトンインスタンス。これの数値は &lt;code&gt;6&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="78d35379c7acd7ced1ce07f8a02d53fa46868e5c" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Sunday.</source>
          <target state="translated">日曜日の曜日のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="ec410919ffc74e6ed0841570a165d1ab4f8518b3" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Sunday. This has the numeric value of &lt;code&gt;7&lt;/code&gt;.</source>
          <target state="translated">日曜日の曜日のシングルトンインスタンス。これの数値は &lt;code&gt;7&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="44f30fc5690e19a76a107f962afc755c430f1fa8" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Thursday.</source>
          <target state="translated">木曜日の曜日のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="1b47f4c269ae66d8d89624e16dab12fae314b4ae" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Thursday. This has the numeric value of &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">木曜日の曜日のシングルトンインスタンス。これの数値は &lt;code&gt;4&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9f862e8dc4406d39bdc49daea39643bfd67e82cc" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Tuesday.</source>
          <target state="translated">火曜日の曜日のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="8710ed5941f516f24bb8dc09854d8cbc78a468d6" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Tuesday. This has the numeric value of &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">火曜日の曜日のシングルトンインスタンス。これの数値は &lt;code&gt;2&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4203c1fdd0478946eb06f1dc84aca7d5d14b634f" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Wednesday.</source>
          <target state="translated">水曜日の曜日のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="74f5d636b9653c07ec4dfb5343c1209f6f45dee7" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Wednesday. This has the numeric value of &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">水曜日の曜日のシングルトンインスタンス。これの数値は &lt;code&gt;3&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d7713ef876ec0d0ff70d52271f9980dec01c333d" translate="yes" xml:space="preserve">
          <source>The singleton instance for the era before the current one, 'Before Buddhist Era', which has the numeric value 0.</source>
          <target state="translated">現在の時代よりも前の時代である「仏教時代以前」のシングルトンインスタンスで、数値は0です。</target>
        </trans-unit>
        <trans-unit id="b7f42f3144aa34fcb5eacd6614462e8933d9e7c5" translate="yes" xml:space="preserve">
          <source>The singleton instance for the era before the current one, 'Before Current Era', which has the numeric value 0.</source>
          <target state="translated">現在の時代よりも前の時代、'Before Current Era'のシングルトンインスタンスで、数値は0です。</target>
        </trans-unit>
        <trans-unit id="4b5ed684b1759647e9750f9a4982ba3a88602d2a" translate="yes" xml:space="preserve">
          <source>The singleton instance for the era before the current one, 'Before Republic of China Era', which has the numeric value 0.</source>
          <target state="translated">現在の時代よりも前の時代、'Before Republic of China Era'のシングルトンインスタンスで、数値は0です。</target>
        </trans-unit>
        <trans-unit id="41eacb4f52ecff4535c6e0cd6e7596d3c29916cb" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of April with 30 days.</source>
          <target state="translated">30日の4月の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="3498e33856b3bc1fa91dfe207455e4d516871a4f" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of April with 30 days. This has the numeric value of &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">30日の4月のシングルトンインスタンス。これの数値は &lt;code&gt;4&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="70bb761c71fbabd2f2c266b82d999a1f7068ff4d" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of August with 31 days.</source>
          <target state="translated">8月の31日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="a0dc754b17787f96f2b3260ec04194b05222744d" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of August with 31 days. This has the numeric value of &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="translated">31日の8月のシングルトンインスタンス。これの数値は &lt;code&gt;8&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d30a73566a6e9dbf9efa2a653e803caa4ad5d73d" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of December with 31 days.</source>
          <target state="translated">12月の31日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="afeded1a61c1256c947b92fd91be8f38f688ade2" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of December with 31 days. This has the numeric value of &lt;code&gt;12&lt;/code&gt;.</source>
          <target state="translated">31日の12月のシングルトンインスタンス。これの数値は &lt;code&gt;12&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="806b6cb116e04b29f83c29dc9e3bdcb40a592e14" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of February with 28 days, or 29 in a leap year.</source>
          <target state="translated">2月の28日、うるう年の29日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="58ce16c9d66eb0950d2e8d8a844af1f67a40ea2b" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of February with 28 days, or 29 in a leap year. This has the numeric value of &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">2月の28日のシングルトンインスタンス、またはうるう年の29日。これの数値は &lt;code&gt;2&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="74e203bb14a07d04b6220cd4725722658def7d5a" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of January with 31 days.</source>
          <target state="translated">1月の31日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="dbbaed2d99f6b4a91bd5a263c15920ce26db8422" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of January with 31 days. This has the numeric value of &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">31日の1月のシングルトンインスタンス。これの数値は &lt;code&gt;1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="84a201e965918b73f6f0a51fb95d40167274284d" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of July with 31 days.</source>
          <target state="translated">7月の31日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="dbf8150d5e374559752b5a4144a24f8a49cc43d5" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of July with 31 days. This has the numeric value of &lt;code&gt;7&lt;/code&gt;.</source>
          <target state="translated">31日の7月のシングルトンインスタンス。これの数値は &lt;code&gt;7&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9d2ece5339a8942535bba2423c8f2d06bdcec0c3" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of June with 30 days.</source>
          <target state="translated">6月の30日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="171ab07a731170963fee5c54879a243aba461820" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of June with 30 days. This has the numeric value of &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">6月の30日間のシングルトンインスタンス。これの数値は &lt;code&gt;6&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5b1f2132810b846baf93a7cbba2b98223085cec9" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of March with 31 days.</source>
          <target state="translated">3月の31日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="c44b47253f5146f50a56c9c4736034ad855145f6" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of March with 31 days. This has the numeric value of &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">3月の31日間のシングルトンインスタンス。これの数値は &lt;code&gt;3&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e931f22dda40194f4e445071e6bc03593a7d73b9" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of May with 31 days.</source>
          <target state="translated">31日の5月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="695b98cf8bd88f36fe7a8d59e7b014104eb39c42" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of May with 31 days. This has the numeric value of &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">5月の31日のシングルトンインスタンス。これの数値は &lt;code&gt;5&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="573cb230de428c272b4736649c6a3825e16254bc" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of November with 30 days.</source>
          <target state="translated">30日の11月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="5e6f9285c59d2cfa11644efd29aaef36209c76e3" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of November with 30 days. This has the numeric value of &lt;code&gt;11&lt;/code&gt;.</source>
          <target state="translated">11月の30日間のシングルトンインスタンス。これの数値は &lt;code&gt;11&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d5882f0e70b11a8c3279fc0103861f8c7c5df376" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of October with 31 days.</source>
          <target state="translated">10月の31日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="77d17e30353cc1d8703e4ac383dfbcf24f64b2d7" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of October with 31 days. This has the numeric value of &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">31日の10月のシングルトンインスタンス。これの数値は &lt;code&gt;10&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="680e4d7736cb5471597da49f9edf29e6acb2f15a" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of September with 30 days.</source>
          <target state="translated">9月の30日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="cd70f2cccb7c35228c39eb4016b4bd39aab9ea64" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of September with 30 days. This has the numeric value of &lt;code&gt;9&lt;/code&gt;.</source>
          <target state="translated">9月の30日間のシングルトンインスタンス。これの数値は &lt;code&gt;9&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a73fac7de9937b7c2c258ee59ea1bff17d0831e6" translate="yes" xml:space="preserve">
          <source>The size button text property.</source>
          <target state="translated">size ボタンのテキストプロパティです。</target>
        </trans-unit>
        <trans-unit id="2d53c63b615a428bc85b992b7c04eed456185922" translate="yes" xml:space="preserve">
          <source>The size of &lt;code&gt;JOptionPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JOptionPane&lt;/code&gt; のサイズ。</target>
        </trans-unit>
        <trans-unit id="af1f4f7f642c922c1567312119a5e4ad52a0724a" translate="yes" xml:space="preserve">
          <source>The size of a doc is computed based on the print data representation class as specified by the doc's &lt;a href=&quot;../../docflavor&quot;&gt;&lt;code&gt;DocFlavor&lt;/code&gt;&lt;/a&gt;, as shown in the table below.</source>
          <target state="translated">次の表に示すように、ドキュメントのサイズは、ドキュメントの&lt;a href=&quot;../../docflavor&quot;&gt; &lt;code&gt;DocFlavor&lt;/code&gt; &lt;/a&gt;で指定された印刷データ表現クラスに基づいて計算されます。</target>
        </trans-unit>
        <trans-unit id="23d732c5b294224e6c7bc0db0723f73dec9504a9" translate="yes" xml:space="preserve">
          <source>The size of components.</source>
          <target state="translated">部品の大きさ。</target>
        </trans-unit>
        <trans-unit id="2b33100b39966e88e8e151f1b8c55dcbceae0f08" translate="yes" xml:space="preserve">
          <source>The size of each frame, in bytes.</source>
          <target state="translated">各フレームのサイズをバイト単位で指定します。</target>
        </trans-unit>
        <trans-unit id="8f9034f1b6e8e551c9315d1f020fa1ede6c673ba" translate="yes" xml:space="preserve">
          <source>The size of each segment is estimated by counting the size of each input file to be transmitted in the segment, along with the size of its name and other transmitted properties.</source>
          <target state="translated">各セグメントのサイズは、セグメント内で送信される各入力ファイルのサイズを、その名前やその他の送信プロパティのサイズとともにカウントすることで推定される。</target>
        </trans-unit>
        <trans-unit id="6945db6b9aaec59e9a237996f6de7fd4d6e01473" translate="yes" xml:space="preserve">
          <source>The size of the attribute value, in bytes.</source>
          <target state="translated">属性値のサイズをバイト単位で指定します。</target>
        </trans-unit>
        <trans-unit id="d377fbc634cb1fcaa6d6aeebdf8a7126697e9a7f" translate="yes" xml:space="preserve">
          <source>The size of the divider while the dragging session is valid.</source>
          <target state="translated">ドラッグセッションが有効な間の仕切りのサイズ。</target>
        </trans-unit>
        <trans-unit id="2babd81935a68bc574cf140a8ed25e62a8a4ddfe" translate="yes" xml:space="preserve">
          <source>The size of the frame includes any area designated for the border. The dimensions of the border area may be obtained using the &lt;code&gt;getInsets&lt;/code&gt; method, however, since these dimensions are platform-dependent, a valid insets value cannot be obtained until the frame is made displayable by either calling &lt;code&gt;pack&lt;/code&gt; or &lt;code&gt;show&lt;/code&gt;. Since the border area is included in the overall size of the frame, the border effectively obscures a portion of the frame, constraining the area available for rendering and/or displaying subcomponents to the rectangle which has an upper-left corner location of &lt;code&gt;(insets.left, insets.top)&lt;/code&gt;, and has a size of &lt;code&gt;width - (insets.left + insets.right)&lt;/code&gt; by &lt;code&gt;height - (insets.top + insets.bottom)&lt;/code&gt;.</source>
          <target state="translated">フレームのサイズには、境界線用に指定された領域が含まれます。境界領域の寸法は &lt;code&gt;getInsets&lt;/code&gt; メソッドを使用して取得できますが、これらの寸法はプラットフォームに依存するため、 &lt;code&gt;pack&lt;/code&gt; または &lt;code&gt;show&lt;/code&gt; を呼び出してフレームを表示できるようになるまで、有効なインセット値を取得できません。境界領域はフレームの全体的なサイズに含まれるため、境界はフレームの一部を効果的に覆い隠し、サブコンポーネントのレンダリングや表示に使用できる領域を、左上隅の位置が &lt;code&gt;(insets.left, insets.top)&lt;/code&gt; の長方形に制限します。 、左insets.top） 、及びサイズ有する &lt;code&gt;width - (insets.left + insets.right)&lt;/code&gt; することにより &lt;code&gt;height - (insets.top + insets.bottom)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aef354301526547b65cbdbff808019ed00981550" translate="yes" xml:space="preserve">
          <source>The size of the locked region</source>
          <target state="translated">ロック領域のサイズ</target>
        </trans-unit>
        <trans-unit id="ffd49f5a54a05c0e211000f48c06808a4e45ab2a" translate="yes" xml:space="preserve">
          <source>The size of the socket receive buffer</source>
          <target state="translated">ソケット受信バッファのサイズ</target>
        </trans-unit>
        <trans-unit id="b93eb1ff5703dad725f268be21bfebee369e1241" translate="yes" xml:space="preserve">
          <source>The size of the socket receive buffer.</source>
          <target state="translated">ソケット受信バッファのサイズ。</target>
        </trans-unit>
        <trans-unit id="ac94f9348a7ec8ca8eb5a0577c7a3672cb67beac" translate="yes" xml:space="preserve">
          <source>The size of the socket send buffer</source>
          <target state="translated">ソケット送信バッファのサイズ</target>
        </trans-unit>
        <trans-unit id="afb9a30fb21697b87a94f349ade50c4c64721e5a" translate="yes" xml:space="preserve">
          <source>The size of the socket send buffer.</source>
          <target state="translated">ソケット送信バッファのサイズ。</target>
        </trans-unit>
        <trans-unit id="f546bdf38de152c096164ced3cb3faeef1188d54" translate="yes" xml:space="preserve">
          <source>The size, in bytes, of the partition or &lt;code&gt;0L&lt;/code&gt; if this abstract pathname does not name a partition</source>
          <target state="translated">パーティションのサイズ（バイト単位）、またはこの抽象パス名がパーティションを指定していない場合は &lt;code&gt;0L&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="77e7580d4eabd26a16573da1f1e6884d637aaaa9" translate="yes" xml:space="preserve">
          <source>The slider can show both major tick marks, and minor tick marks between the major ones. The number of values between the tick marks is controlled with &lt;code&gt;setMajorTickSpacing&lt;/code&gt; and &lt;code&gt;setMinorTickSpacing&lt;/code&gt;. Painting of tick marks is controlled by &lt;code&gt;setPaintTicks&lt;/code&gt;.</source>
          <target state="translated">スライダーには、メジャー目盛りとメジャー目盛りの間のマイナー目盛りの両方を表示できます。目盛り間の値の数は、 &lt;code&gt;setMajorTickSpacing&lt;/code&gt; および &lt;code&gt;setMinorTickSpacing&lt;/code&gt; で制御されます。目盛りのペイントは、 &lt;code&gt;setPaintTicks&lt;/code&gt; によって制御されます。</target>
        </trans-unit>
        <trans-unit id="eb6ffd0649eec316588f1e098e996254023ca6c5" translate="yes" xml:space="preserve">
          <source>The smallest acceptable size for the thumb.</source>
          <target state="translated">親指の許容最小サイズ。</target>
        </trans-unit>
        <trans-unit id="608588a6ce7faa309c72f3d591de7b6a527d1475" translate="yes" xml:space="preserve">
          <source>The smallest grid that can be laid out by the grid bag layout.</source>
          <target state="translated">グリッドバッグのレイアウトでレイアウトできる最小のグリッド。</target>
        </trans-unit>
        <trans-unit id="eccc9011507e2f8d69cd68d30db124741a00ce17" translate="yes" xml:space="preserve">
          <source>The smallest integer in this set-of-integer attribute that is greater than &lt;code&gt;x&lt;/code&gt;, or &lt;code&gt;-1&lt;/code&gt; if no integer in this set-of-integer attribute is greater than &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">より大きい整数型セットの属性の中で最小の整数 &lt;code&gt;x&lt;/code&gt; 、または &lt;code&gt;-1&lt;/code&gt; この整数型セットの属性には整数がより大きくない場合 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9839a314b20b78f9253b406fd33020bc5eeae4df" translate="yes" xml:space="preserve">
          <source>The smallest reasonable width/height of the component or component group, in pixels.</source>
          <target state="translated">コンポーネントまたはコンポーネントグループの最小の妥当な幅/高さをピクセル単位で指定します。</target>
        </trans-unit>
        <trans-unit id="d29505ba6327a428e6ada6e998db00c29198a04c" translate="yes" xml:space="preserve">
          <source>The smallest valid index for reading, initially 0.</source>
          <target state="translated">読み取りに有効な最小のインデックス、初期値は0です。</target>
        </trans-unit>
        <trans-unit id="cc3e306f7c43f12a0cd31a1e11f56ee1c06bddfe" translate="yes" xml:space="preserve">
          <source>The smallest valid index for reading, initially 0. When &lt;code&gt;seekForwardOnly&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, various methods may throw an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; on an attempt to access data associate with an image having a lower index.</source>
          <target state="translated">読み取りに有効な最小のインデックスで、最初は0です &lt;code&gt;seekForwardOnly&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、インデックスが低い画像に関連付けられているデータにアクセスしようとすると、さまざまなメソッドが &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="d34a10ed96641b907e1eb213e81431652411700a" translate="yes" xml:space="preserve">
          <source>The socket address that the socket is bound to, or &lt;code&gt;null&lt;/code&gt; if the channel's socket is not bound</source>
          <target state="translated">ソケットがバインドされているソケットアドレス、またはチャネルのソケットがバインドされていない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="004c4bf3ac859ce08e79a8b3e914c8cf5426cb22" translate="yes" xml:space="preserve">
          <source>The socket channel for the new connection, or &lt;code&gt;null&lt;/code&gt; if this channel is in non-blocking mode and no connection is available to be accepted</source>
          <target state="translated">新しい接続のソケットチャネル。このチャネルが非ブロッキングモードであり、接続を受け入れることができない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="72330096ca60d13bfb3300d243f2b2b77e32b537" translate="yes" xml:space="preserve">
          <source>The socket channel returned by this method, if any, will be in blocking mode regardless of the blocking mode of this channel.</source>
          <target state="translated">このメソッドが返すソケットチャンネルがある場合、このチャンネルのブロッキングモードに関係なくブロッキングモードになります。</target>
        </trans-unit>
        <trans-unit id="0916495727f93025eff6a66cbf7b722521e11aa1" translate="yes" xml:space="preserve">
          <source>The socket factories are used when creating sockets for secure https URL connections.</source>
          <target state="translated">ソケットファクトリーは、セキュアなhttps URL接続用のソケットを作成する際に使用します。</target>
        </trans-unit>
        <trans-unit id="b9b1dacea19873875bd394d1604a0e5a5d30890d" translate="yes" xml:space="preserve">
          <source>The sockets returned to the application can be subclasses of java.net.Socket, so that they can directly expose new APIs for features such as compression, security, record marking, statistics collection, or firewall tunneling.</source>
          <target state="translated">アプリケーションに返されるソケットは、java.net.Socketのサブクラスにすることができ、圧縮、セキュリティ、レコードマーキング、統計収集、ファイアウォール・トンネリングなどの機能のための新しいAPIを直接公開することができます。</target>
        </trans-unit>
        <trans-unit id="e877bbc8bfc38843765b0308b8332044317fbf2a" translate="yes" xml:space="preserve">
          <source>The sole constructor.</source>
          <target state="translated">唯一のコンストラクター。</target>
        </trans-unit>
        <trans-unit id="d5d133be61491e0ac1417ab0eba748b3aa345615" translate="yes" xml:space="preserve">
          <source>The sole purpose of these additions is to allow the specification of tables for use in decoding abbreviated streams. The built-in JPEG reader will also accept an ordinary &lt;code&gt;ImageReadParam&lt;/code&gt;, which is sufficient for decoding non-abbreviated streams.</source>
          <target state="translated">これらの追加の唯一の目的は、省略されたストリームのデコードに使用するテーブルを指定できるようにすることです。組み込みのJPEGリーダーは、通常の &lt;code&gt;ImageReadParam&lt;/code&gt; も受け入れます。これは、省略されていないストリームをデコードするのに十分です。</target>
        </trans-unit>
        <trans-unit id="89b93c3df541630653c18e1886ceb597afae62a2" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(byte%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(byte%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(byte%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(byte%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。このアルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="784cdcae362dc5581521030a458ea9926ba3223b" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(byte%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(byte%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(byte%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(byte%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="7ff5d937d432a11ea2a201ecc58034dd5441a852" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(char%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(char%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(char%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(char%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。このアルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2e5b7af711e48ed5dc89614218be16edbd43e49c" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(char%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(char%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(char%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(char%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2fddd1310d77bbe7f9dfe3d3aa01ae962a906b1b" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(double%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(double%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(double%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(double%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。このアルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="02eeb024eac83701cb3dab1984790a4264154db6" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(double%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(double%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(double%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(double%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="4f90425a9cfcd671163aa3ba4f42ed3b9d2bc3a4" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(float%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(float%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(float%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(float%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。このアルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="275540cfb6a8e26c5b313f0e391cacb2ad9d0076" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(float%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(float%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(float%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(float%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="94b575be4e8e24c03f457815c4ac16e5b75c882e" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(int%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(int%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(int%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(int%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。このアルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="6ee0d5b8c7e0d8151809c5f26bb13f06d5c6f2a1" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(int%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(int%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(int%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(int%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="5e68b55659f65572149d90497e01649faf00e021" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。このアルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="be292033b578af0efd8258008b00c522a942cd0c" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="4939742092d60ecdc9f5ff5d5d17f5c9210da4ff" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(long%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(long%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(long%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(long%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。このアルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="311db9e136afe682fa40514c417dc4d15f8e69c5" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(long%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(long%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(long%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(long%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="1fde7bfb5ab47c4ddc5c959bc79b4e7eb9f4030c" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(short%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(short%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(short%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(short%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。このアルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="c9a68b6c5882885166c6b5b6d4f8f9f68a7f939b" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(short%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(short%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(short%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(short%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="38844e94f41cc1969fb62e4894696634a14fe20b" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-byte:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-byte:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-byte:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-byte:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="75b2a84749a330a1c0b895e2bdf2312622f71cb8" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-byte:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-byte:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-byte:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-byte:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="20a31ccdaba6cb746cb91c886a84a8c2d7c538b7" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-char:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-char:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-char:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-char:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="48b9a8628a4883f257650b1adf775491c8f08839" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-char:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-char:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-char:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-char:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="d3cac5983cf37dcfe292291f746e0459fd7e8669" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-double:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-double:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-double:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-double:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="08eda0222f2f9308c70c208bbdafe98a9e736807" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-double:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-double:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-double:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-double:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="1b5efb4aa3ea50144cc0394f060b745aadbd838e" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-float:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-float:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-float:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-float:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b9ac2ce61dcea76b147223bff87472496593df2a" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-float:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-float:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-float:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-float:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="ff09cbb5362e1360ac15f00a55f46a71d4e41ca1" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-int:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-int:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-int:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-int:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="edc68fa2b5db74746879cf023d506ffd46c30425" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-int:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-int:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-int:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-int:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="839592e0ded3d9de75771fbf4886b637ea10acea" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-java.lang.Object:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-java.lang.Object:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-java.lang.Object:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-java.lang.Object:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="614e7b8df8741ffaa018e919714cf7473694c642" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-java.lang.Object:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-java.lang.Object:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-java.lang.Object:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-java.lang.Object:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="648b93b50bbd09b1605688594b8660ecbbb90d1b" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-long:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-long:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-long:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-long:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="0247ed33cde4f71d592e6d7daa37c7760b936d47" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-long:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-long:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-long:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-long:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="777d40468912737a83340f22bc67c6f77af71aaf" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-short:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-short:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-short:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-short:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="e41f68150d548775a312ef7c6bad1b753c9c647c" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-short:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-short:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-short:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-short:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b4ca5b611518435cd08b1d3ce800c9c8f468a67f" translate="yes" xml:space="preserve">
          <source>The source &lt;code&gt;DocumentView&lt;/code&gt; of which this is an &lt;code&gt;AbstractView&lt;/code&gt;.</source>
          <target state="translated">これが &lt;code&gt;AbstractView&lt;/code&gt; であるソース &lt;code&gt;DocumentView&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55944b789daff6ef5841d9434f11985f49ff23c4" translate="yes" xml:space="preserve">
          <source>The source actions represent the set of actions supported by the source of this transfer, and are represented as some bitwise-OR combination of &lt;code&gt;COPY&lt;/code&gt;, &lt;code&gt;MOVE&lt;/code&gt; and &lt;code&gt;LINK&lt;/code&gt;. You may wish to query this in &lt;code&gt;TransferHandler&lt;/code&gt;'s &lt;code&gt;canImport&lt;/code&gt; method when determining the suitability of a drop or when deciding on a drop action to explicitly choose. To determine if a particular action is supported by the source, bitwise-AND the action with the source drop actions, and then compare the result against the original action. For example:</source>
          <target state="translated">ソースアクションは、この転送のソースによってサポートされるアクションのセットを表し、 &lt;code&gt;COPY&lt;/code&gt; 、 &lt;code&gt;MOVE&lt;/code&gt; 、および &lt;code&gt;LINK&lt;/code&gt; のビット単位のORの組み合わせとして表されます。ドロップの適合性を判断するとき、またはドロップアクションを明示的に選択することを決定するときに、 &lt;code&gt;TransferHandler&lt;/code&gt; の &lt;code&gt;canImport&lt;/code&gt; メソッドでこれを照会することをお勧めします。特定のアクションがソースでサポートされているかどうかを判断するには、アクションとソースドロップアクションをビット単位でANDし、結果を元のアクションと比較します。例えば：</target>
        </trans-unit>
        <trans-unit id="368f0e5364e526b1a62ff1d9e84b032a4799d112" translate="yes" xml:space="preserve">
          <source>The source address if this membership key is source-specific, otherwise &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">このメンバーシップキーが送信元固有の場合は送信元アドレス、それ以外の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49ef1bc740369619f8b5584da49f9c3ff9ac10f5" translate="yes" xml:space="preserve">
          <source>The source and destination must be different.</source>
          <target state="translated">送信元と送信先が異なる必要があります。</target>
        </trans-unit>
        <trans-unit id="1c54b79003a5eb4cba89a06459605f65bd7f13fd" translate="yes" xml:space="preserve">
          <source>The source bean is used as the source of events for the property changes. This source should be used for information purposes only and should not be modified by the PropertyEditor.</source>
          <target state="translated">ソースビーンは、プロパティの変更のためのイベントのソースとして使用されます。このソースは情報提供のみを目的として使用されるべきであり、PropertyEditorによって変更されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="d614f9d4f31f56431b30829db0ada88a1526496a" translate="yes" xml:space="preserve">
          <source>The source cannot be structurally interfered with.</source>
          <target state="translated">ソースは構造的に干渉できません。</target>
        </trans-unit>
        <trans-unit id="61689ca13fa0754b0dac1fef1851f1593b2946cb" translate="yes" xml:space="preserve">
          <source>The source format represents the format of the incoming audio data, which will be converted.</source>
          <target state="translated">ソースフォーマットは、入力されるオーディオデータのフォーマットを表し、変換されます。</target>
        </trans-unit>
        <trans-unit id="46df136cd9cc4668c308b326cb05d7ed6808c192" translate="yes" xml:space="preserve">
          <source>The source increases the likelihood of throwing &lt;code&gt;ConcurrentModificationException&lt;/code&gt; since the window of potential interference is larger.</source>
          <target state="translated">潜在的な干渉のウィンドウが大きいため、ソースは &lt;code&gt;ConcurrentModificationException&lt;/code&gt; をスローする可能性を高めます。</target>
        </trans-unit>
        <trans-unit id="c1f61cf74a08642c4ff7ee4b8bc3cda7829bff8b" translate="yes" xml:space="preserve">
          <source>The source increases the risk of arbitrary, non-deterministic behavior since non-detected interference may occur after construction.</source>
          <target state="translated">建設後に非検出干渉が発生する可能性があるため、ソースは恣意的で非決定論的な行動のリスクを高める。</target>
        </trans-unit>
        <trans-unit id="03d33500fcd4a667ea73efed98252841199edc27" translate="yes" xml:space="preserve">
          <source>The source is composited over the destination (Porter-Duff Source Over Destination rule).</source>
          <target state="translated">ソースはデスティネーションの上に合成されます(Porter-Duff Source Over Destinationルール)。</target>
        </trans-unit>
        <trans-unit id="dfdd906a9cfc82513a491834d2af899dcb03b222" translate="yes" xml:space="preserve">
          <source>The source is copied to the destination (Porter-Duff Source rule).</source>
          <target state="translated">ソースは宛先にコピーされます(ポーターダフソースルール)。</target>
        </trans-unit>
        <trans-unit id="29c343852025e2139effd2803766c6065e489fe6" translate="yes" xml:space="preserve">
          <source>The source is copied to the destination (Porter-Duff Source rule). The destination is not used as input.</source>
          <target state="translated">ソースは宛先にコピーされます(ポーターダフソースルール)。宛先は入力としては使用されません。</target>
        </trans-unit>
        <trans-unit id="7f5e35322fb74527344b994cfeb8d4a21c655439" translate="yes" xml:space="preserve">
          <source>The source manages concurrent modifications.</source>
          <target state="translated">ソースは同時進行の変更を管理します。</target>
        </trans-unit>
        <trans-unit id="8a5d1008eaa1af299fb1410c7693c63aa92311bc" translate="yes" xml:space="preserve">
          <source>The source object is the Relation Service itself.</source>
          <target state="translated">ソースオブジェクトは Relation Service 自体です。</target>
        </trans-unit>
        <trans-unit id="aa58c7b11a77f180bde4263ee0c9af48ad826837" translate="yes" xml:space="preserve">
          <source>The source of the event can be retrieved with the method &lt;code&gt;event.getSource&lt;/code&gt;.</source>
          <target state="translated">イベントのソースは、メソッド &lt;code&gt;event.getSource&lt;/code&gt; を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="4b758d7983ddc60e8668a83198491ca7fd663319" translate="yes" xml:space="preserve">
          <source>The source of the event can be retrieved with the method event.getSource.</source>
          <target state="translated">イベントのソースは、event.getSourceメソッドで取得できます。</target>
        </trans-unit>
        <trans-unit id="ba472d8058ce42e7759745b4cd537b6da4c0628f" translate="yes" xml:space="preserve">
          <source>The source of this event is the SSLSocket on which handshaking just completed.</source>
          <target state="translated">このイベントの発生源は、ハンドシェイクが完了したばかりのSSLSocketです。</target>
        </trans-unit>
        <trans-unit id="34b28226ae9b0c9b05be3b2b72d0f78f8a72db57" translate="yes" xml:space="preserve">
          <source>The source of this pattern</source>
          <target state="translated">このパターンの元になったのは</target>
        </trans-unit>
        <trans-unit id="9d040b79148889dda3be3cace827402195b26754" translate="yes" xml:space="preserve">
          <source>The source region of interest specified by this method will be clipped as needed to fit within the source bounds, as well as the destination offsets, width, and height at the time of actual I/O.</source>
          <target state="translated">このメソッドで指定された関心のあるソース領域は、実際のI/O時のデスティネーションのオフセット、幅、高さと同様に、ソースの境界内に収まるように必要に応じて切り取られます。</target>
        </trans-unit>
        <trans-unit id="6c425edd2b72c5bd49ce0000e1e9c0d010d1b680" translate="yes" xml:space="preserve">
          <source>The source region, on &lt;code&gt;null&lt;/code&gt; if none is set.</source>
          <target state="translated">ソース領域。何も設定されていない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79992770a23d8083e338e39d04240948297bfa86" translate="yes" xml:space="preserve">
          <source>The source risks arbitrary, non-deterministic behavior after traversal has commenced since interference is not detected.</source>
          <target state="translated">干渉が検出されないため、トラバーサルが開始された後の恣意的で非決定論的な振る舞いがソースリスクとなります。</target>
        </trans-unit>
        <trans-unit id="3d10c68f89f90c7178d019f1f4c1c12f009d6876" translate="yes" xml:space="preserve">
          <source>The south layout constraint (bottom of container).</source>
          <target state="translated">南側のレイアウト制約(コンテナの底部)。</target>
        </trans-unit>
        <trans-unit id="e68ddcb7c0e62435f6fe1696214e8145cd3b4f3c" translate="yes" xml:space="preserve">
          <source>The south-east-resize cursor type.</source>
          <target state="translated">南東リサイズカーソルタイプです。</target>
        </trans-unit>
        <trans-unit id="73fec64518a4d7b3dec25260b8298e0b9bed5f17" translate="yes" xml:space="preserve">
          <source>The south-resize cursor type.</source>
          <target state="translated">南リサイズカーソルタイプです。</target>
        </trans-unit>
        <trans-unit id="3b088fa20b66361bda186416ad335eb99b17d70b" translate="yes" xml:space="preserve">
          <source>The south-west-resize cursor type.</source>
          <target state="translated">南西リサイズのカーソルタイプです。</target>
        </trans-unit>
        <trans-unit id="b1f69a5894aacc09dd4212a4b7863d5992a5dd30" translate="yes" xml:space="preserve">
          <source>The space between strings.</source>
          <target state="translated">文字列と文字列の間の空間。</target>
        </trans-unit>
        <trans-unit id="7900bed2b0d5a0428294adba3589eaef49b81ef4" translate="yes" xml:space="preserve">
          <source>The space character &quot; &quot; is converted into a plus sign &quot;&lt;code&gt;+&lt;/code&gt;&quot;.</source>
          <target state="translated">スペース文字「」はプラス記号「 &lt;code&gt;+&lt;/code&gt; 」に変換されます。</target>
        </trans-unit>
        <trans-unit id="507149f00d63c959176bee1f4d30e062fc83fdd7" translate="yes" xml:space="preserve">
          <source>The special characters &quot;&lt;code&gt;.&lt;/code&gt;&quot;, &quot;&lt;code&gt;-&lt;/code&gt;&quot;, &quot;&lt;code&gt;*&lt;/code&gt;&quot;, and &quot;&lt;code&gt;_&lt;/code&gt;&quot; remain the same.</source>
          <target state="translated">特殊文字「 &lt;code&gt;.&lt;/code&gt; 」、「 &lt;code&gt;-&lt;/code&gt; 」、「 &lt;code&gt;*&lt;/code&gt; 」、および「 &lt;code&gt;_&lt;/code&gt; 」は変わりません。</target>
        </trans-unit>
        <trans-unit id="554ae3414c670a7436c25a4064ec6ae6a231747b" translate="yes" xml:space="preserve">
          <source>The special method &lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission(java.security.Permission)&lt;/code&gt;&lt;/a&gt; determines whether an access request indicated by a specified permission should be granted or denied. The default implementation calls</source>
          <target state="translated">特別なメソッド&lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission(java.security.Permission)&lt;/code&gt; &lt;/a&gt;は、指定されたアクセス許可によって示されるアクセス要求を許可するか拒否するかを決定します。デフォルトの実装呼び出し</target>
        </trans-unit>
        <trans-unit id="a9d1df01fb5b8d33027995ef22465c9c621f1abe" translate="yes" xml:space="preserve">
          <source>The special method &lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt;&lt;code&gt;checkPermission(java.security.Permission)&lt;/code&gt;&lt;/a&gt; determines whether an access request indicated by a specified permission should be granted or denied. The default implementation calls</source>
          <target state="translated">特別なメソッド&lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt; &lt;code&gt;checkPermission(java.security.Permission)&lt;/code&gt; &lt;/a&gt;は、指定されたアクセス権によって示されるアクセス要求を許可するか拒否するかを決定します。デフォルトの実装呼び出し</target>
        </trans-unit>
        <trans-unit id="0f63e638f0c9b18504ea41e24439a23387628a9a" translate="yes" xml:space="preserve">
          <source>The special strings &lt;a href=&quot;#ERROR&quot;&gt;&lt;code&gt;ERROR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#STRIP&quot;&gt;&lt;code&gt;STRIP&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#PASS&quot;&gt;&lt;code&gt;PASS&lt;/code&gt;&lt;/a&gt; are also allowed, with the same meaning as &lt;a href=&quot;#UNKNOWN_ATTRIBUTE&quot;&gt;&lt;code&gt;UNKNOWN_ATTRIBUTE&lt;/code&gt;&lt;/a&gt;. This provides a way for users to request that specific attributes be refused, stripped, or passed bitwise (with no class compression).</source>
          <target state="translated">&lt;a href=&quot;#UNKNOWN_ATTRIBUTE&quot;&gt; &lt;code&gt;UNKNOWN_ATTRIBUTE&lt;/code&gt; &lt;/a&gt;と同じ意味で、特別な文字列&lt;a href=&quot;#ERROR&quot;&gt; &lt;code&gt;ERROR&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#STRIP&quot;&gt; &lt;code&gt;STRIP&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#PASS&quot;&gt; &lt;code&gt;PASS&lt;/code&gt; &lt;/a&gt;も許可されます。これにより、ユーザーは特定の属性を拒否、削除、またはビット単位で渡すように要求できます（クラス圧縮なし）。</target>
        </trans-unit>
        <trans-unit id="32010eba7b4259d4453391d1922bfa0e43808b88" translate="yes" xml:space="preserve">
          <source>The special strings &lt;a href=&quot;pack200.packer#ERROR&quot;&gt;&lt;code&gt;ERROR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pack200.packer#STRIP&quot;&gt;&lt;code&gt;STRIP&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;pack200.packer#PASS&quot;&gt;&lt;code&gt;PASS&lt;/code&gt;&lt;/a&gt; are also allowed, with the same meaning as &lt;a href=&quot;pack200.packer#UNKNOWN_ATTRIBUTE&quot;&gt;&lt;code&gt;UNKNOWN_ATTRIBUTE&lt;/code&gt;&lt;/a&gt;. This provides a way for users to request that specific attributes be refused, stripped, or passed bitwise (with no class compression).</source>
          <target state="translated">&lt;a href=&quot;pack200.packer#UNKNOWN_ATTRIBUTE&quot;&gt; &lt;code&gt;UNKNOWN_ATTRIBUTE&lt;/code&gt; &lt;/a&gt;と同じ意味で、特別な文字列&lt;a href=&quot;pack200.packer#ERROR&quot;&gt; &lt;code&gt;ERROR&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;pack200.packer#STRIP&quot;&gt; &lt;code&gt;STRIP&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;pack200.packer#PASS&quot;&gt; &lt;code&gt;PASS&lt;/code&gt; &lt;/a&gt;も許可されます。これにより、ユーザーは特定の属性を拒否、削除、またはビット単位で渡すように要求できます（クラス圧縮なし）。</target>
        </trans-unit>
        <trans-unit id="6a13bd69809d0a0a05735ac36655ba584ce36412" translate="yes" xml:space="preserve">
          <source>The special value 0 instructs the packer to copy through the original JAR file directly, with no compression. The JSR 200 standard requires any unpacker to understand this special case as a pass-through of the entire archive.</source>
          <target state="translated">特別な値 0 は、圧縮なしで元の JAR ファイルを直接コピーするようにパッカーに指示します。JSR 200 標準では、どのアンパッカーもこの特殊なケースをアーカイブ全体のパススルーとして理解することを要求しています。</target>
        </trans-unit>
        <trans-unit id="d43aa293b92f885948dfdec9b93e9f6263ba164c" translate="yes" xml:space="preserve">
          <source>The specialized subtype default implementations of &lt;a href=&quot;iterator#next()&quot;&gt;&lt;code&gt;Iterator.next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator#forEachRemaining(java.util.function.Consumer)&quot;&gt;&lt;code&gt;Iterator.forEachRemaining(java.util.function.Consumer)&lt;/code&gt;&lt;/a&gt; box primitive values to instances of their corresponding wrapper class. Such boxing may offset any advantages gained when using the primitive specializations. To avoid boxing, the corresponding primitive-based methods should be used. For example, &lt;a href=&quot;primitiveiterator.ofint#nextInt()&quot;&gt;&lt;code&gt;PrimitiveIterator.OfInt.nextInt()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;primitiveiterator.ofint#forEachRemaining(java.util.function.IntConsumer)&quot;&gt;&lt;code&gt;PrimitiveIterator.OfInt.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt; should be used in preference to &lt;a href=&quot;primitiveiterator.ofint#next()&quot;&gt;&lt;code&gt;PrimitiveIterator.OfInt.next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;primitiveiterator.ofint#forEachRemaining(java.util.function.Consumer)&quot;&gt;&lt;code&gt;PrimitiveIterator.OfInt.forEachRemaining(java.util.function.Consumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;iterator#next()&quot;&gt; &lt;code&gt;Iterator.next()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;iterator#forEachRemaining(java.util.function.Consumer)&quot;&gt; &lt;code&gt;Iterator.forEachRemaining(java.util.function.Consumer)&lt;/code&gt; &lt;/a&gt;の特殊なサブタイプのデフォルト実装は、対応するラッパークラスのインスタンスにプリミティブ値をボックス化します。このようなボクシングは、プリミティブスペシャライゼーションを使用するときに得られる利点を相殺する可能性があります。ボクシングを回避するには、対応するプリミティブベースのメソッドを使用する必要があります。例えば、&lt;a href=&quot;primitiveiterator.ofint#nextInt()&quot;&gt; &lt;code&gt;PrimitiveIterator.OfInt.nextInt()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;primitiveiterator.ofint#forEachRemaining(java.util.function.IntConsumer)&quot;&gt; &lt;code&gt;PrimitiveIterator.OfInt.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt;に優先して使用されるべきである&lt;a href=&quot;primitiveiterator.ofint#next()&quot;&gt; &lt;code&gt;PrimitiveIterator.OfInt.next()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;primitiveiterator.ofint#forEachRemaining(java.util.function.Consumer)&quot;&gt; &lt;code&gt;PrimitiveIterator.OfInt.forEachRemaining(java.util.function.Consumer)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb3de17aa29974030176e4818ff90fa588d4cccd" translate="yes" xml:space="preserve">
          <source>The specialized subtype default implementations of &lt;a href=&quot;iterator#next--&quot;&gt;&lt;code&gt;Iterator.next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator#forEachRemaining-java.util.function.Consumer-&quot;&gt;&lt;code&gt;Iterator.forEachRemaining(java.util.function.Consumer)&lt;/code&gt;&lt;/a&gt; box primitive values to instances of their corresponding wrapper class. Such boxing may offset any advantages gained when using the primitive specializations. To avoid boxing, the corresponding primitive-based methods should be used. For example, &lt;a href=&quot;primitiveiterator.ofint#nextInt--&quot;&gt;&lt;code&gt;PrimitiveIterator.OfInt.nextInt()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;primitiveiterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;PrimitiveIterator.OfInt.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt; should be used in preference to &lt;a href=&quot;primitiveiterator.ofint#next--&quot;&gt;&lt;code&gt;PrimitiveIterator.OfInt.next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;primitiveiterator.ofint#forEachRemaining-java.util.function.Consumer-&quot;&gt;&lt;code&gt;PrimitiveIterator.OfInt.forEachRemaining(java.util.function.Consumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;iterator#next--&quot;&gt; &lt;code&gt;Iterator.next()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;iterator#forEachRemaining-java.util.function.Consumer-&quot;&gt; &lt;code&gt;Iterator.forEachRemaining(java.util.function.Consumer)&lt;/code&gt; &lt;/a&gt;ボックスプリミティブ値の対応するラッパークラスのインスタンスへの特殊なサブタイプデフォルト実装。このようなボクシングは、プリミティブ特化を使用するときに得られる利点を相殺する可能性があります。ボクシングを回避するには、対応するプリミティブベースのメソッドを使用する必要があります。例えば、&lt;a href=&quot;primitiveiterator.ofint#nextInt--&quot;&gt; &lt;code&gt;PrimitiveIterator.OfInt.nextInt()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;primitiveiterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt; &lt;code&gt;PrimitiveIterator.OfInt.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt;に優先して使用されるべきである&lt;a href=&quot;primitiveiterator.ofint#next--&quot;&gt; &lt;code&gt;PrimitiveIterator.OfInt.next()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;primitiveiterator.ofint#forEachRemaining-java.util.function.Consumer-&quot;&gt; &lt;code&gt;PrimitiveIterator.OfInt.forEachRemaining(java.util.function.Consumer)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="50f407aa7fac51cbfd7197c06936b8340a15f9e5" translate="yes" xml:space="preserve">
          <source>The specification and implementation titles, versions, and vendors are unspecified.</source>
          <target state="translated">仕様や実装のタイトル、バージョン、ベンダーは不特定。</target>
        </trans-unit>
        <trans-unit id="d6f9034bc2b0e9e47c35477b9b0c1050884a6e58" translate="yes" xml:space="preserve">
          <source>The specification of &lt;a href=&quot;#floatDWidth&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;#floatDPrec&quot;&gt;precision&lt;/a&gt; is the same as defined for Float and Double.</source>
          <target state="translated">仕様&lt;a href=&quot;#floatDWidth&quot;&gt;幅&lt;/a&gt;と&lt;a href=&quot;#floatDPrec&quot;&gt;精度は&lt;/a&gt; floatとdoubleと同義です。</target>
        </trans-unit>
        <trans-unit id="fa9ee937f65b438b3e28d90ed076c5fb130b0ebe" translate="yes" xml:space="preserve">
          <source>The specification of &lt;a href=&quot;#intWidth&quot;&gt;width&lt;/a&gt; is the same as defined for Byte, Short, Integer, and Long.</source>
          <target state="translated">&lt;a href=&quot;#intWidth&quot;&gt;幅&lt;/a&gt;の指定は、Byte、Short、Integer、およびLongの定義と同じです。</target>
        </trans-unit>
        <trans-unit id="a10ca3cba79e422f1740bb3e0934c522a4f1925b" translate="yes" xml:space="preserve">
          <source>The specification of the &lt;a href=&quot;../nio/charset/charset&quot;&gt;&lt;code&gt;java.nio.charset.Charset&lt;/code&gt;&lt;/a&gt; class describes the naming conventions for character encodings as well as the set of standard encodings that must be supported by every implementation of the Java platform.</source>
          <target state="translated">&lt;a href=&quot;../nio/charset/charset&quot;&gt; &lt;code&gt;java.nio.charset.Charset&lt;/code&gt; &lt;/a&gt;クラスの仕様は、文字エンコーディングの命名規則と、Javaプラットフォームのすべての実装でサポートする必要がある標準エンコーディングのセットを記述しています。</target>
        </trans-unit>
        <trans-unit id="5bc479f4b94e6ed3adb52c78855a8eaf971be4f5" translate="yes" xml:space="preserve">
          <source>The specifications of these methods enable implementations to employ efficient machine-level atomic instructions that are available on contemporary processors. However on some platforms, support may entail some form of internal locking. Thus the methods are not strictly guaranteed to be non-blocking -- a thread may block transiently before performing the operation.</source>
          <target state="translated">これらのメソッドの仕様により、現代のプロセッサで利用可能な効率的なマシンレベルのアトミック命令を実装することができます。しかし、プラットフォームによっては、何らかの形式の内部ロックを必要とする場合があります。したがって、これらのメソッドはノンブロッキングであることが厳密に保証されているわけではありません --演算を実行する前にスレッドが一時的にブロックすることがあります。</target>
        </trans-unit>
        <trans-unit id="5249ead0cea582438ce306dee2ff065c9121394e" translate="yes" xml:space="preserve">
          <source>The specified</source>
          <target state="translated">指定された</target>
        </trans-unit>
        <trans-unit id="62478b55800b13e9edc844048f06d81a5395c823" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;attributes&lt;/code&gt; is cloned before it is stored in the new &lt;code&gt;SecretKeyEntry&lt;/code&gt; object.</source>
          <target state="translated">指定された &lt;code&gt;attributes&lt;/code&gt; は、新しい &lt;code&gt;SecretKeyEntry&lt;/code&gt; オブジェクトに格納される前に複製されます。</target>
        </trans-unit>
        <trans-unit id="ce6192f33f7b86e9ead09fddf2eb53ecad7d96e2" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;attributes&lt;/code&gt; is cloned before it is stored in the new &lt;code&gt;TrustedCertificateEntry&lt;/code&gt; object.</source>
          <target state="translated">指定された &lt;code&gt;attributes&lt;/code&gt; は、新しい &lt;code&gt;TrustedCertificateEntry&lt;/code&gt; オブジェクトに格納される前に複製されます。</target>
        </trans-unit>
        <trans-unit id="d471977883e3ea29098c508c72fa94025049aa80" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;chain&lt;/code&gt; and &lt;code&gt;attributes&lt;/code&gt; are cloned before they are stored in the new &lt;code&gt;PrivateKeyEntry&lt;/code&gt; object.</source>
          <target state="translated">指定された &lt;code&gt;chain&lt;/code&gt; と &lt;code&gt;attributes&lt;/code&gt; は、新しい &lt;code&gt;PrivateKeyEntry&lt;/code&gt; オブジェクトに格納される前に複製されます。</target>
        </trans-unit>
        <trans-unit id="feecfb1f75d3f2369d375a91acbc68cab6f7dc08" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;chain&lt;/code&gt; is cloned before it is stored in the new &lt;code&gt;PrivateKeyEntry&lt;/code&gt; object.</source>
          <target state="translated">指定された &lt;code&gt;chain&lt;/code&gt; は、新しい &lt;code&gt;PrivateKeyEntry&lt;/code&gt; オブジェクトに格納される前に複製されます。</target>
        </trans-unit>
        <trans-unit id="91787ab6a545bac8438e8b3009f062a3b8a33372" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;name&lt;/code&gt; cannot begin with &quot;&lt;code&gt;java.&lt;/code&gt;&quot;, since all classes in the &quot;&lt;code&gt;java.*&lt;/code&gt; packages can only be defined by the bootstrap class loader. If &lt;code&gt;name&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, it must be equal to the &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt; of the class specified by the byte array &quot;&lt;code&gt;b&lt;/code&gt;&quot;, otherwise a &lt;a href=&quot;noclassdeffounderror&quot;&gt;&lt;code&gt;&lt;code&gt;NoClassDefFoundError&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">指定された &lt;code&gt;name&lt;/code&gt; で始めることはできません「 &lt;code&gt;java.&lt;/code&gt; 」、 &quot;内のすべてのクラス以来 &lt;code&gt;java.*&lt;/code&gt; パッケージは唯一のブートストラップクラスローダによって定義することができます。場合は &lt;code&gt;name&lt;/code&gt; ない &lt;code&gt;null&lt;/code&gt; 、それは等しくなければなりません&lt;a href=&quot;#name&quot;&gt;バイナリ名&lt;/a&gt;で指定したクラスのバイト配列「 &lt;code&gt;b&lt;/code&gt; 」。それ以外の場合は&lt;a href=&quot;noclassdeffounderror&quot;&gt; &lt;code&gt;&lt;code&gt;NoClassDefFoundError&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="eaef74f38f0fefbf6b797c4d769b36b62a96e610" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;password&lt;/code&gt; is cloned before it is stored in the new &lt;code&gt;PasswordProtection&lt;/code&gt; object.</source>
          <target state="translated">指定された &lt;code&gt;password&lt;/code&gt; は、新しい &lt;code&gt;PasswordProtection&lt;/code&gt; オブジェクトに格納される前に複製されます。</target>
        </trans-unit>
        <trans-unit id="c18dc4bf1e553fd51a6ef779b53c94ede909086a" translate="yes" xml:space="preserve">
          <source>The specified MBean does not exist in the repository.</source>
          <target state="translated">指定されたMBeanがリポジトリに存在しません。</target>
        </trans-unit>
        <trans-unit id="1da5f575f6552b129ebced03a3fcca62b2e49042" translate="yes" xml:space="preserve">
          <source>The specified MBean listener does not exist in the repository.</source>
          <target state="translated">指定された MBean リスナーがリポジトリに存在しません。</target>
        </trans-unit>
        <trans-unit id="af5fc804aa4841cb6f3309cca620e06c665f28ff" translate="yes" xml:space="preserve">
          <source>The specified amount is typically an instance of &lt;code&gt;Period&lt;/code&gt;. Other types are interpreted using &lt;a href=&quot;#from(java.time.temporal.TemporalAmount)&quot;&gt;&lt;code&gt;from(TemporalAmount)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された金額は通常、 &lt;code&gt;Period&lt;/code&gt; のインスタンスです。他のタイプは&lt;a href=&quot;#from(java.time.temporal.TemporalAmount)&quot;&gt; &lt;code&gt;from(TemporalAmount)&lt;/code&gt; &lt;/a&gt;を使用して解釈されます。</target>
        </trans-unit>
        <trans-unit id="190c4561e923b6d02247206d09c8f34b9f935a7d" translate="yes" xml:space="preserve">
          <source>The specified amount is typically an instance of &lt;code&gt;Period&lt;/code&gt;. Other types are interpreted using &lt;a href=&quot;period#from-java.time.temporal.TemporalAmount-&quot;&gt;&lt;code&gt;from(TemporalAmount)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された金額は通常、 &lt;code&gt;Period&lt;/code&gt; のインスタンスです。他のタイプは&lt;a href=&quot;period#from-java.time.temporal.TemporalAmount-&quot;&gt; &lt;code&gt;from(TemporalAmount)&lt;/code&gt; &lt;/a&gt;を使用して解釈されます。</target>
        </trans-unit>
        <trans-unit id="9f3bf406b8fb479bb6ba897f4dfcf1ddc3eae351" translate="yes" xml:space="preserve">
          <source>The specified amount of real time has elapsed, more or less. If &lt;code&gt;timeout&lt;/code&gt; is zero, however, then real time is not taken into consideration and the thread simply waits until notified.</source>
          <target state="translated">指定された量のリアルタイムが経過しました。場合は &lt;code&gt;timeout&lt;/code&gt; ゼロである、しかし、その後、実際の時間は考慮していないと通知されるまで、スレッドは単に待ちます。</target>
        </trans-unit>
        <trans-unit id="00452a58dccb117675d49a429b178f798add4786" translate="yes" xml:space="preserve">
          <source>The specified amount of real time has elapsed, more or less. The amount of real time, in nanoseconds, is given by the expression &lt;code&gt;1000000 * timeoutMillis + nanos&lt;/code&gt;. If &lt;code&gt;timeoutMillis&lt;/code&gt; and &lt;code&gt;nanos&lt;/code&gt; are both zero, then real time is not taken into consideration and the thread waits until awakened by one of the other causes.</source>
          <target state="translated">指定された量のリアルタイムが多かれ少なかれ経過しました。ナノ秒単位のリアルタイムの量は、式 &lt;code&gt;1000000 * timeoutMillis + nanos&lt;/code&gt; 与えられます。場合 &lt;code&gt;timeoutMillis&lt;/code&gt; と &lt;code&gt;nanos&lt;/code&gt; 値が両方ともゼロである他の原因のいずれかによって起こされるまで、その後、リアルタイムではない考慮し、スレッドが待機中に取り込まれます。</target>
        </trans-unit>
        <trans-unit id="2fb0d14ec3b91bd96d9fc6ab5161cd7aea17ba63" translate="yes" xml:space="preserve">
          <source>The specified attribute does not exist or cannot be retrieved.</source>
          <target state="translated">指定された属性が存在しないか、取得できません。</target>
        </trans-unit>
        <trans-unit id="3c4052d464c8f6871afa7336bc62a9e77ae7434b" translate="yes" xml:space="preserve">
          <source>The specified comparator is used to determine if two array elements from the each array are not equal.</source>
          <target state="translated">指定されたコンパレータは,各配列からの2つの配列要素が等しくないかどうかを判定するために使用されます.</target>
        </trans-unit>
        <trans-unit id="7b8d3e0653b6d1561f69a4fc51247490be2c9fff" translate="yes" xml:space="preserve">
          <source>The specified deadline elapses; or</source>
          <target state="translated">指定された期限が経過した場合</target>
        </trans-unit>
        <trans-unit id="dfc1facec1624a9e49107544937a16179ab58cc9" translate="yes" xml:space="preserve">
          <source>The specified deadline passes; or</source>
          <target state="translated">指定された期限を過ぎた場合</target>
        </trans-unit>
        <trans-unit id="5247131e5691f2b17d264ef1c3dfc670058c9a69" translate="yes" xml:space="preserve">
          <source>The specified default value.</source>
          <target state="translated">指定されたデフォルト値。</target>
        </trans-unit>
        <trans-unit id="5b4866a14164fbbb9168f172b4e6e8d7dc395270" translate="yes" xml:space="preserve">
          <source>The specified dimensions are used to locate a matching &lt;code&gt;MediaSize&lt;/code&gt; instance from amongst all the standard &lt;code&gt;MediaSize&lt;/code&gt; instances.</source>
          <target state="translated">指定されたディメンションは、すべての標準 &lt;code&gt;MediaSize&lt;/code&gt; インスタンスの中から一致する &lt;code&gt;MediaSize&lt;/code&gt; インスタンスを見つけるために使用されます。</target>
        </trans-unit>
        <trans-unit id="f68d5b41f2fafda46b89738c8f86f8e066852d0c" translate="yes" xml:space="preserve">
          <source>The specified dimensions are used to locate a matching &lt;code&gt;MediaSize&lt;/code&gt; instance from amongst all the standard &lt;code&gt;MediaSize&lt;/code&gt; instances. If there is no exact match, the closest match is used.</source>
          <target state="translated">指定されたディメンションは、すべての標準 &lt;code&gt;MediaSize&lt;/code&gt; インスタンスの中から一致する &lt;code&gt;MediaSize&lt;/code&gt; インスタンスを見つけるために使用されます。完全に一致するものがない場合は、最も近い一致が使用されます。</target>
        </trans-unit>
        <trans-unit id="310ae4a82260e2743fd9957091b33702914d499e" translate="yes" xml:space="preserve">
          <source>The specified dimensions are used to locate a matching MediaSize instance from amongst all the standard MediaSize instances. If there is no exact match, the closest match is used.</source>
          <target state="translated">指定されたディメンジョンは、すべての標準的な MediaSize インスタンスの中から一致する MediaSize インスタンスを見つけるために使用されます。完全に一致するものがない場合は、最も近いものが使用されます。</target>
        </trans-unit>
        <trans-unit id="104dce0f8cf047aa941594c95f88524f18e28ce2" translate="yes" xml:space="preserve">
          <source>The specified list must be modifiable, but need not be resizable.</source>
          <target state="translated">指定されたリストは変更可能でなければなりませんが、リサイズ可能である必要はありません。</target>
        </trans-unit>
        <trans-unit id="8f09ffd7e81a93fd6948e5a765fff32edb59db61" translate="yes" xml:space="preserve">
          <source>The specified map contains the current state of the parse. The map is mutable and must be mutated to resolve the field and any related fields. This method will only be invoked during parsing if the map contains this field, and implementations should therefore assume this field is present.</source>
          <target state="translated">指定されたマップには、パースの現在の状態が含まれています。マップは変異可能であり、フィールドと関連するフィールドを解決するために変異させる必要があります。このメソッドは、マップにこのフィールドが含まれている場合にのみ解析中に呼び出され、実装ではこのフィールドが存在すると仮定する必要があります。</target>
        </trans-unit>
        <trans-unit id="493032b220120145406a2c95c31eb22182fdc14e" translate="yes" xml:space="preserve">
          <source>The specified map must be empty at the time this method is invoked, and should not be accessed directly after this method returns. These conditions are ensured if the map is created empty, passed directly to this method, and no reference to the map is retained, as illustrated in the following code fragment:</source>
          <target state="translated">指定されたマップは、このメソッドが呼び出された時点で空でなければならず、このメソッドが戻ってきた後に直接アクセスしてはいけません。これらの条件は、マップが空の状態で作成され、このメソッドに直接渡され、マップへの参照が保持されていない場合に保証されます。</target>
        </trans-unit>
        <trans-unit id="e8d2949ab1852b4adf83258648df2f3d3aea9bdc" translate="yes" xml:space="preserve">
          <source>The specified number of bytes have been read,</source>
          <target state="translated">指定したバイト数が読み込まれました。</target>
        </trans-unit>
        <trans-unit id="04268be0844ec6f86b3371c45be5d6b167be71f6" translate="yes" xml:space="preserve">
          <source>The specified number of characters have been read,</source>
          <target state="translated">指定した文字数が読み込まれました。</target>
        </trans-unit>
        <trans-unit id="8b6cc3dc228a55bbb5be0ad0c4aa456b38c93c73" translate="yes" xml:space="preserve">
          <source>The specified stream is closed after this method returns.</source>
          <target state="translated">指定されたストリームは、このメソッドが戻ってきた後に閉じられます。</target>
        </trans-unit>
        <trans-unit id="51786fb87bcf180e4b0079696fd451f32baf2367" translate="yes" xml:space="preserve">
          <source>The specified stream remains open after this method returns.</source>
          <target state="translated">指定されたストリームは、このメソッドが戻った後もオープンされたままです。</target>
        </trans-unit>
        <trans-unit id="7526737a0fdb5c1ec28cb0f7e645a738da9f21ee" translate="yes" xml:space="preserve">
          <source>The specified string</source>
          <target state="translated">指定された文字列</target>
        </trans-unit>
        <trans-unit id="020eb4b0a71ae7c3e458a5afa3348d57de83d3bc" translate="yes" xml:space="preserve">
          <source>The specified substring. If the sum of &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; exceeds the &lt;code&gt;length&lt;/code&gt;, then all 16-bit units to the end of the data are returned.</source>
          <target state="translated">指定された部分文字列。 &lt;code&gt;offset&lt;/code&gt; と &lt;code&gt;count&lt;/code&gt; 合計が &lt;code&gt;length&lt;/code&gt; を超える場合、データの最後までのすべての16ビット単位が返されます。</target>
        </trans-unit>
        <trans-unit id="2615e62cfbfda5abfd51b12dbda35048bb40079b" translate="yes" xml:space="preserve">
          <source>The specified temporal must have the same chronology as this period. This returns a temporal with the non-zero supported units added.</source>
          <target state="translated">指定されたテンポラリは、この期間と同じ年表を持っていなければなりません。これは、サポートされている0以外の単位が追加されたテンポラリを返します。</target>
        </trans-unit>
        <trans-unit id="157250d9b4b02aeb6925cbf93c8ae0c1bd6e00ac" translate="yes" xml:space="preserve">
          <source>The specified temporal must have the same chronology as this period. This returns a temporal with the non-zero supported units subtracted.</source>
          <target state="translated">指定された時間軸は、この期間と同じ年表を持っていなければなりません。これは、0以外のサポートされている単位を差し引いた時間軸を返します。</target>
        </trans-unit>
        <trans-unit id="cc9a505a8f5c31216ff0ecff5662a313bc10a9ec" translate="yes" xml:space="preserve">
          <source>The specified temporal objects must support the &lt;a href=&quot;temporal/chronounit#SECONDS&quot;&gt;&lt;code&gt;SECONDS&lt;/code&gt;&lt;/a&gt; unit. For full accuracy, either the &lt;a href=&quot;temporal/chronounit#NANOS&quot;&gt;&lt;code&gt;NANOS&lt;/code&gt;&lt;/a&gt; unit or the &lt;a href=&quot;temporal/chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; field should be supported.</source>
          <target state="translated">指定された一時オブジェクトは&lt;a href=&quot;temporal/chronounit#SECONDS&quot;&gt; &lt;code&gt;SECONDS&lt;/code&gt; &lt;/a&gt;ユニットをサポートする必要があります。完全な精度を得るには、&lt;a href=&quot;temporal/chronounit#NANOS&quot;&gt; &lt;code&gt;NANOS&lt;/code&gt; &lt;/a&gt;ユニットまたは&lt;a href=&quot;temporal/chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;NANO_OF_SECOND&lt;/code&gt; &lt;/a&gt;フィールドのいずれかをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="9126ea58e2571bc036db8beb3f6e7cb81714d752" translate="yes" xml:space="preserve">
          <source>The specified timeout elapses; or</source>
          <target state="translated">指定されたタイムアウトが経過した場合</target>
        </trans-unit>
        <trans-unit id="77816529a97b17e719694d443a16cc6eb0b2358f" translate="yes" xml:space="preserve">
          <source>The specified value is used for components that do not have an explicit visibility specified.</source>
          <target state="translated">指定された値は、明示的な可視性が指定されていないコンポーネントに使用されます。</target>
        </trans-unit>
        <trans-unit id="b837498e4f5bfb7ecf362b5a40901bb42bb72876" translate="yes" xml:space="preserve">
          <source>The specified waiting time elapses</source>
          <target state="translated">指定した待ち時間が経過すると</target>
        </trans-unit>
        <trans-unit id="2e16f4e41d2bec157ff32585a40c8df18c39455f" translate="yes" xml:space="preserve">
          <source>The specified waiting time elapses.</source>
          <target state="translated">指定した待ち時間が経過します。</target>
        </trans-unit>
        <trans-unit id="f6172c989e04cb91e71e97089eeadbcfd41054bf" translate="yes" xml:space="preserve">
          <source>The specified waiting time elapses; or</source>
          <target state="translated">指定された待ち時間が経過した場合</target>
        </trans-unit>
        <trans-unit id="bcb09cd9d5c1d9cff3d8db3594d6e42aab3b0b8d" translate="yes" xml:space="preserve">
          <source>The spinner that we're a UI delegate for.</source>
          <target state="translated">UIの代表格であるスピナーを</target>
        </trans-unit>
        <trans-unit id="97f64657e5f059399930d54a08e9b83baa27ae28" translate="yes" xml:space="preserve">
          <source>The spinner that we're a UI delegate for. Initialized by the &lt;code&gt;installUI&lt;/code&gt; method, and reset to null by &lt;code&gt;uninstallUI&lt;/code&gt;.</source>
          <target state="translated">私たちがUIデリゲートであるスピナー。 &lt;code&gt;installUI&lt;/code&gt; メソッドによって初期化され、 &lt;code&gt;uninstallUI&lt;/code&gt; によってnullにリセットされます。</target>
        </trans-unit>
        <trans-unit id="d585405edcff8efbfeceb28b75b5f670d57bbe62" translate="yes" xml:space="preserve">
          <source>The splash screen can be displayed at application startup, before the Java Virtual Machine (JVM) starts.</source>
          <target state="translated">Java Virtual Machine(JVM)が起動する前に、アプリケーション起動時にスプラッシュ画面を表示することができます。</target>
        </trans-unit>
        <trans-unit id="799c8129c9adc3cde63003661b566735c720a9dc" translate="yes" xml:space="preserve">
          <source>The splash screen can be displayed at application startup, before the Java Virtual Machine (JVM) starts. The splash screen is displayed as an undecorated window containing an image. You can use GIF, JPEG, or PNG files for the image. Animation is supported for the GIF format, while transparency is supported both for GIF and PNG. The window is positioned at the center of the screen. The position on multi-monitor systems is not specified. It is platform and implementation dependent. The splash screen window is closed automatically as soon as the first window is displayed by Swing/AWT (may be also closed manually using the Java API, see below).</source>
          <target state="translated">スプラッシュ画面は、アプリケーションの起動時に、Java仮想マシン(JVM)が起動する前に表示することができます。スプラッシュ画面は、画像を含む装飾されていないウィンドウとして表示されます。画像には、GIF、JPEG、PNG ファイルを使用できます。GIF フォーマットではアニメーションがサポートされていますが、透明度は GIF と PNG の両方でサポートされています。ウィンドウは画面の中央に配置されます。マルチモニタシステム上での位置は指定しません。プラットフォームや実装に依存します。スプラッシュスクリーンのウィンドウは、Swing/AWT によって最初のウィンドウが表示されるとすぐに自動的に閉じられます (Java API を使って手動で閉じることもできます。)</target>
        </trans-unit>
        <trans-unit id="b1c8f20ff40da3f5e74a84ba6b16f559f12b32df" translate="yes" xml:space="preserve">
          <source>The splash screen will be displayed as faithfully as possible to present the whole splash screen image given the limitations of the target platform and display.</source>
          <target state="translated">スプラッシュ画面は、ターゲットプラットフォームとディスプレイの制限を考慮して、スプラッシュ画面全体の画像を可能な限り忠実に表示します。</target>
        </trans-unit>
        <trans-unit id="358fe8f4c03c65db9f92645925be98830ef03da4" translate="yes" xml:space="preserve">
          <source>The spliterator is &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;, inherits the &lt;em&gt;fail-fast&lt;/em&gt; properties of the collection's iterator, and implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism.</source>
          <target state="translated">spliteratorは&lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;遅延バインディング&lt;/a&gt;&lt;/em&gt;であり、コレクションの反復子の&lt;em&gt;fail-fast&lt;/em&gt;プロパティを継承し、 &lt;code&gt;trySplit&lt;/code&gt; を実装して制限された並列処理を許可します。</target>
        </trans-unit>
        <trans-unit id="5c3d939c98fbccf6b0709b1993b6b3ad3fbfd412" translate="yes" xml:space="preserve">
          <source>The spliterator is not &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;, inherits the &lt;em&gt;fail-fast&lt;/em&gt; properties of the iterator, and implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism.</source>
          <target state="translated">スプリテレーターは&lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;レイトバインディング&lt;/a&gt;&lt;/em&gt;ではなく、イテレーターの&lt;em&gt;フェイルファスト&lt;/em&gt;プロパティを継承し、 &lt;code&gt;trySplit&lt;/code&gt; を実装して並列処理を制限します。</target>
        </trans-unit>
        <trans-unit id="c89136b191a7ef1fb716259822efc70d2b8982ba" translate="yes" xml:space="preserve">
          <source>The spliterator is only traversed, split, or queried for estimated size after the terminal operation of the stream pipeline commences.</source>
          <target state="translated">スプリレータは、ストリームパイプラインの終端操作が開始された後にのみ、トラバース、スプリット、または推定サイズの問い合わせを行います。</target>
        </trans-unit>
        <trans-unit id="2e796cc75190234b6abcae4603bbe835004bc5ff" translate="yes" xml:space="preserve">
          <source>The spliterator provides a snapshot of the state of the list when the spliterator was constructed. No synchronization is needed while operating on the spliterator.</source>
          <target state="translated">spliterator は、spliterator が構築されたときのリストの状態のスナップショットを提供します。スプリテレータを操作している間は同期は必要ありません。</target>
        </trans-unit>
        <trans-unit id="cb6fc47357accd5ef236f3f5c242ba1b0d8c1cb4" translate="yes" xml:space="preserve">
          <source>The spliterator provides a snapshot of the state of the set when the spliterator was constructed. No synchronization is needed while operating on the spliterator.</source>
          <target state="translated">スプリテータは、スプリテータが構築されたときのセットの状態のスナップショットを提供します。スプリテレータで操作している間は同期は必要ありません。</target>
        </trans-unit>
        <trans-unit id="8c63ef1d32be1189c32d967974dfe2fc9a2f274a" translate="yes" xml:space="preserve">
          <source>The spliterator reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator#IMMUTABLE&quot;&gt;&lt;code&gt;Spliterator.IMMUTABLE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">spliteratorは、&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;spliterator#IMMUTABLE&quot;&gt; &lt;code&gt;Spliterator.IMMUTABLE&lt;/code&gt; を報告し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c0e1fd6ad7e570320cb5c4dec58534b0c8203896" translate="yes" xml:space="preserve">
          <source>The spliterator's comparator (see &lt;a href=&quot;../spliterator#getComparator--&quot;&gt;&lt;code&gt;Spliterator.getComparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt; if the set's comparator (see &lt;a href=&quot;concurrentskiplistset#comparator--&quot;&gt;&lt;code&gt;comparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the set's comparator.</source>
          <target state="translated">セットのコンパレーター（&lt;a href=&quot;concurrentskiplistset#comparator--&quot;&gt; &lt;code&gt;comparator()&lt;/code&gt; を&lt;/a&gt;参照）が &lt;code&gt;null&lt;/code&gt; の場合、スプリッターのコンパレーター（&lt;a href=&quot;../spliterator#getComparator--&quot;&gt; &lt;code&gt;Spliterator.getComparator()&lt;/code&gt; &lt;/a&gt;参照）は &lt;code&gt;null&lt;/code&gt; です。それ以外の場合、スプリッターのコンパレーターは、セットのコンパレーターと同じか、または同じ合計順序付けを課します。</target>
        </trans-unit>
        <trans-unit id="fe057f9948defb315751a3ca1f88f4994c9e14dd" translate="yes" xml:space="preserve">
          <source>The spliterator's comparator (see &lt;a href=&quot;spliterator#getComparator()&quot;&gt;&lt;code&gt;Spliterator.getComparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt; if the tree set's comparator (see &lt;a href=&quot;sortedset#comparator()&quot;&gt;&lt;code&gt;SortedSet.comparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the tree set's comparator.</source>
          <target state="translated">ツリーセットのコンパレーター（&lt;a href=&quot;sortedset#comparator()&quot;&gt; &lt;code&gt;SortedSet.comparator()&lt;/code&gt; を&lt;/a&gt;参照）が &lt;code&gt;null&lt;/code&gt; の場合、スプリッターのコンパレーター（&lt;a href=&quot;spliterator#getComparator()&quot;&gt; &lt;code&gt;Spliterator.getComparator()&lt;/code&gt; &lt;/a&gt;参照）は &lt;code&gt;null&lt;/code&gt; になります。それ以外の場合、スプリッターのコンパレーターは、ツリーセットのコンパレーターと同じであるか、同じ全順序を課します。</target>
        </trans-unit>
        <trans-unit id="f6b692dffef505c29f727633715bcaa25d9f58af" translate="yes" xml:space="preserve">
          <source>The spliterator's comparator (see &lt;a href=&quot;spliterator#getComparator()&quot;&gt;&lt;code&gt;Spliterator.getComparator()&lt;/code&gt;&lt;/a&gt;) must be &lt;code&gt;null&lt;/code&gt; if the sorted set's comparator (see &lt;a href=&quot;#comparator()&quot;&gt;&lt;code&gt;comparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator must be the same as or impose the same total ordering as the sorted set's comparator.</source>
          <target state="translated">ソートされたセットのコンパレータ（&lt;a href=&quot;#comparator()&quot;&gt; &lt;code&gt;comparator()&lt;/code&gt; を&lt;/a&gt;参照）が &lt;code&gt;null&lt;/code&gt; の場合、スプリッタのコンパレータ（&lt;a href=&quot;spliterator#getComparator()&quot;&gt; &lt;code&gt;Spliterator.getComparator()&lt;/code&gt; &lt;/a&gt;参照）はnullである必要があり &lt;code&gt;null&lt;/code&gt; 。それ以外の場合、スプリッターのコンパレーターは、ソートされたセットのコンパレーターと同じであるか、同じ全順序を課す必要があります。</target>
        </trans-unit>
        <trans-unit id="48dde829f5e209bbf80a37d8886c87c609c3d85b" translate="yes" xml:space="preserve">
          <source>The spliterator's comparator (see &lt;a href=&quot;spliterator#getComparator--&quot;&gt;&lt;code&gt;Spliterator.getComparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt; if the tree set's comparator (see &lt;a href=&quot;treeset#comparator--&quot;&gt;&lt;code&gt;comparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the tree set's comparator.</source>
          <target state="translated">ツリーセットのコンパレーター（&lt;a href=&quot;treeset#comparator--&quot;&gt; &lt;code&gt;comparator()&lt;/code&gt; を&lt;/a&gt;参照）が &lt;code&gt;null&lt;/code&gt; の場合、スプリッターのコンパレーター（&lt;a href=&quot;spliterator#getComparator--&quot;&gt; &lt;code&gt;Spliterator.getComparator()&lt;/code&gt; &lt;/a&gt;参照）は &lt;code&gt;null&lt;/code&gt; です。それ以外の場合、スプリッターのコンパレーターは、ツリーセットのコンパレーターと同じか、または同じ合計順序付けを課します。</target>
        </trans-unit>
        <trans-unit id="5d0a078e5e6eab06b16fc00059f9764476f503fd" translate="yes" xml:space="preserve">
          <source>The spliterator's comparator (see &lt;a href=&quot;spliterator#getComparator--&quot;&gt;&lt;code&gt;Spliterator.getComparator()&lt;/code&gt;&lt;/a&gt;) must be &lt;code&gt;null&lt;/code&gt; if the sorted set's comparator (see &lt;a href=&quot;sortedset#comparator--&quot;&gt;&lt;code&gt;comparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator must be the same as or impose the same total ordering as the sorted set's comparator.</source>
          <target state="translated">spliteratorのコンパレータは、（参照&lt;a href=&quot;spliterator#getComparator--&quot;&gt; &lt;code&gt;Spliterator.getComparator()&lt;/code&gt; &lt;/a&gt;でなければならない） &lt;code&gt;null&lt;/code&gt; ソートセットのコンパレータ場合（参照&lt;a href=&quot;sortedset#comparator--&quot;&gt; &lt;code&gt;comparator()&lt;/code&gt; &lt;/a&gt;）である &lt;code&gt;null&lt;/code&gt; 。それ以外の場合、スプリッターのコンパレーターは、ソート済みセットのコンパレーターと同じであるか、同じ合計順序付けを課す必要があります。</target>
        </trans-unit>
        <trans-unit id="81c6f54339613405ef47fa4cf7fd2cfc6963fe4e" translate="yes" xml:space="preserve">
          <source>The spliterators for &lt;code&gt;Collection&lt;/code&gt; classes in the JDK that implement &lt;a href=&quot;navigableset&quot;&gt;&lt;code&gt;NavigableSet&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; report &lt;code&gt;SORTED&lt;/code&gt;.</source>
          <target state="translated">用spliterators &lt;code&gt;Collection&lt;/code&gt; 実装JDKのクラス&lt;a href=&quot;navigableset&quot;&gt; &lt;code&gt;NavigableSet&lt;/code&gt; &lt;/a&gt;か&lt;a href=&quot;sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; &lt;/a&gt;レポート &lt;code&gt;SORTED&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="cd697bf3371b30cc43133d20204f9b133ffb8c0e" translate="yes" xml:space="preserve">
          <source>The spliterators returned by the spliterator method of the collections returned by all of this class's collection view methods are &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;fail-fast&lt;/em&gt;, and additionally report &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このクラスのすべてのコレクションビューメソッドによって返されるコレクションのspliteratorメソッドによって返されるスプリッターは、遅延&lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;バインディングで&lt;/a&gt;&lt;/em&gt;、&lt;em&gt;フェイルファスト&lt;/em&gt;であり、さらに&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; を&lt;/a&gt;報告します。</target>
        </trans-unit>
        <trans-unit id="3f5421d4c1a6fd2ddf5564c1dd18506c0df41358" translate="yes" xml:space="preserve">
          <source>The spliterators returned by the spliterator method of the collections returned by all of this class's collection view methods are created from the iterators of the corresponding collections.</source>
          <target state="translated">このクラスのすべてのコレクションビューメソッドによって返されるコレクションの spliterator メソッドによって返される spliterator は、対応するコレクションのイテレータから作成されます。</target>
        </trans-unit>
        <trans-unit id="9f0eea49dd34a9dc6611340a54bee1813909e27a" translate="yes" xml:space="preserve">
          <source>The square root of a number numerically equal to &lt;code&gt;
 ZERO&lt;/code&gt; is numerically equal to &lt;code&gt;ZERO&lt;/code&gt; with a preferred scale according to the general rule above. In particular, for &lt;code&gt;ZERO&lt;/code&gt;, &lt;code&gt;ZERO.sqrt(mc).equals(ZERO)&lt;/code&gt; is true with any &lt;code&gt;MathContext&lt;/code&gt; as an argument.</source>
          <target state="translated">数値的に等しい数の平方根 &lt;code&gt; ZERO&lt;/code&gt; に数値的に等しい &lt;code&gt;ZERO&lt;/code&gt; 上記原則による好ましい尺度です。特に、 &lt;code&gt;ZERO&lt;/code&gt; の場合、 &lt;code&gt;ZERO.sqrt(mc).equals(ZERO)&lt;/code&gt; は、引数として任意の &lt;code&gt;MathContext&lt;/code&gt; で真になります。</target>
        </trans-unit>
        <trans-unit id="97a32597a130645adffb584e7165020d15f080bc" translate="yes" xml:space="preserve">
          <source>The standard &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; values are:</source>
          <target state="translated">標準の &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; 値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ec658a969bcb92aa1baad080b6a1974cf0ea66e2" translate="yes" xml:space="preserve">
          <source>The standard AC chrominance Huffman table.</source>
          <target state="translated">定番のACクロミナンスハフマンテーブル。</target>
        </trans-unit>
        <trans-unit id="de7f2a4797f9371ba730de4782f10f7289878bf4" translate="yes" xml:space="preserve">
          <source>The standard AC luminance Huffman table.</source>
          <target state="translated">標準的なAC輝度のハフマンテーブル。</target>
        </trans-unit>
        <trans-unit id="c018ce1af2d766ca3e1a4abc0ceaf42164f207ce" translate="yes" xml:space="preserve">
          <source>The standard DC chrominance Huffman table.</source>
          <target state="translated">標準的なDCクロミナンスハフマンテーブル。</target>
        </trans-unit>
        <trans-unit id="a329f8b4144b879c7b6f5ae550949bccdbf73f49" translate="yes" xml:space="preserve">
          <source>The standard DC luminance Huffman table.</source>
          <target state="translated">標準的なDC輝度のハフマンテーブル。</target>
        </trans-unit>
        <trans-unit id="db8c6341d94f5edfcecbdce8b46d6840a2f9998a" translate="yes" xml:space="preserve">
          <source>The standard MultipleDocumentHandling values are:</source>
          <target state="translated">MultipleDocumentHandlingの標準的な値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="cea92758ea1f357e469fa3131a98d496ed04fb3d" translate="yes" xml:space="preserve">
          <source>The standard WebRowSet XML Schema definition is available at the following URI:</source>
          <target state="translated">標準のWebRowSet XML Schemaの定義は、以下のURIから入手できます。</target>
        </trans-unit>
        <trans-unit id="92cab317859f368c1aae7d7671cb740196644a9d" translate="yes" xml:space="preserve">
          <source>The standard astronomical definition uses a fraction to indicate the time-of-day, thus 3.25 would represent the time 18:00, since days start at midday. This implementation uses an integer and days starting at midnight. The integer value for the Julian Day Number is the astronomical Julian Day value at midday of the date in question. This amounts to the astronomical Julian Day, rounded to an integer &lt;code&gt;JDN = floor(JD + 0.5)&lt;/code&gt;.</source>
          <target state="translated">標準の天文定義では、分数を使用して時刻を示します。したがって、日は正午から始まるため、3.25は時刻18:00を表します。この実装は、真夜中から始まる整数と日数を使用します。ユリウス日番号の整数値は、問題の日付の正午の天文上のユリウス日値です。これは天文学的なユリウス日に相当し、整数 &lt;code&gt;JDN = floor(JD + 0.5)&lt;/code&gt; に丸められます。</target>
        </trans-unit>
        <trans-unit id="880ecebc89a3bd9ce7264ab7dfc0e29562f0f35f" translate="yes" xml:space="preserve">
          <source>The standard astronomical definition uses a fraction to indicate the time-of-day, where each day is counted from midday to midday. For example, a fraction of 0 represents midday, a fraction of 0.25 represents 18:00, a fraction of 0.5 represents midnight and a fraction of 0.75 represents 06:00.</source>
          <target state="translated">標準的な天文学の定義では、1日の時間を示すために端数を使用しており、それぞれの日を正午から正午まで数えます。例えば、0の端数は真昼を、0.25の端数は18時を、0.5の端数は真夜中を、0.75の端数は6時を表します。</target>
        </trans-unit>
        <trans-unit id="13ecff8dc7f4fb8e1c0a2ecc7b63b91ab8bf3498" translate="yes" xml:space="preserve">
          <source>The standard bold weight.</source>
          <target state="translated">定番のボールドウェイト。</target>
        </trans-unit>
        <trans-unit id="87015164736bf1cd9c8bbb4ea24b900496c33f69" translate="yes" xml:space="preserve">
          <source>The standard class for rendering (displaying) individual cells in a &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 内の個々のセルをレンダリング（表示）するための標準クラス。</target>
        </trans-unit>
        <trans-unit id="42ca28b6f9992a10a95b6a95ebf901f9b15239be" translate="yes" xml:space="preserve">
          <source>The standard classes and interfaces that a third party vendor has to use in its implementation of a synchronization provider.</source>
          <target state="translated">サードパーティベンダーが同期プロバイダの実装で使用しなければならない標準クラスとインタフェース。</target>
        </trans-unit>
        <trans-unit id="f20e3d89b127e95d58c2061d7d4c9dd74ba0ee75" translate="yes" xml:space="preserve">
          <source>The standard classes and interfaces that a third party vendor has to use in its implementation of a synchronization provider. These classes and interfaces are referred to as the Service Provider Interface (SPI). To make it possible for a &lt;code&gt;RowSet&lt;/code&gt; object to use an implementation, the vendor must register it with the &lt;code&gt;SyncFactory&lt;/code&gt; singleton. (See the class comment for &lt;code&gt;SyncProvider&lt;/code&gt; for a full explanation of the registration process and the naming convention to be used.)</source>
          <target state="translated">サードパーティベンダーが同期プロバイダーの実装で使用する必要のある標準のクラスとインターフェイス。これらのクラスとインターフェイスは、サービスプロバイダーインターフェイス（SPI）と呼ばれます。 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトが実装を使用できるようにするには、ベンダーはそれを &lt;code&gt;SyncFactory&lt;/code&gt; シングルトンに登録する必要があります。（登録プロセスと使用される命名規則の完全な説明については、 &lt;code&gt;SyncProvider&lt;/code&gt; のクラスコメントを参照してください。）</target>
        </trans-unit>
        <trans-unit id="b131b8a4797ef2827907440045a418e64b3fbf06" translate="yes" xml:space="preserve">
          <source>The standard column-handler for a &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; の標準の列ハンドラー。</target>
        </trans-unit>
        <trans-unit id="ebd97f6234307a116f96853fd3903e56b9d40331" translate="yes" xml:space="preserve">
          <source>The standard default domain name is &lt;code&gt;DefaultDomain&lt;/code&gt;.</source>
          <target state="translated">標準のデフォルトドメイン名は &lt;code&gt;DefaultDomain&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ef55295fde5154a258f26679975fa232098fcdbf" translate="yes" xml:space="preserve">
          <source>The standard file manager serves two purposes:</source>
          <target state="translated">標準のファイルマネージャは2つの目的を果たします。</target>
        </trans-unit>
        <trans-unit id="6b7ea3f0338f77cf538431691011f031baff3b34" translate="yes" xml:space="preserve">
          <source>The standard file manager will be automatically reopened if it is accessed after calls to &lt;code&gt;flush&lt;/code&gt; or &lt;code&gt;close&lt;/code&gt;. The standard file manager must be usable with other tools.</source>
          <target state="translated">標準のファイルマネージャは、 &lt;code&gt;flush&lt;/code&gt; または &lt;code&gt;close&lt;/code&gt; の呼び出し後にアクセスされた場合、自動的に再度開かれます。標準のファイルマネージャは、他のツールで使用できる必要があります。</target>
        </trans-unit>
        <trans-unit id="d899fd7b1f2ffca29d5ec4be5ab688999a5e0e42" translate="yes" xml:space="preserve">
          <source>The standard interface that all implementations of a &lt;code&gt;WebRowSet&lt;/code&gt; must implement.</source>
          <target state="translated">&lt;code&gt;WebRowSet&lt;/code&gt; のすべての実装が実装する必要がある標準インターフェース。</target>
        </trans-unit>
        <trans-unit id="68aac4cc5c3cf5132e5aff63b1695213f60c720d" translate="yes" xml:space="preserve">
          <source>The standard interface that all standard implementations of &lt;code&gt;FilteredRowSet&lt;/code&gt; must implement.</source>
          <target state="translated">&lt;code&gt;FilteredRowSet&lt;/code&gt; のすべての標準実装が実装する必要がある標準インターフェース。</target>
        </trans-unit>
        <trans-unit id="247ee5b52f4343f5290a6af4a99cb5a09ea9f68c" translate="yes" xml:space="preserve">
          <source>The standard interface that all standard implementations of &lt;code&gt;FilteredRowSet&lt;/code&gt; must implement. The &lt;code&gt;FilteredRowSetImpl&lt;/code&gt; class provides the reference implementation which may be extended if required. Alternatively, a vendor is free to implement its own version by implementing this interface.</source>
          <target state="translated">&lt;code&gt;FilteredRowSet&lt;/code&gt; のすべての標準実装が実装する必要がある標準インターフェース。 &lt;code&gt;FilteredRowSetImpl&lt;/code&gt; のクラスは、必要に応じて延長することができるリファレンス実装を提供します。または、ベンダーはこのインターフェイスを実装することにより、独自のバージョンを自由に実装できます。</target>
        </trans-unit>
        <trans-unit id="4179729038e158c2938276999d2a0f8a9a828d40" translate="yes" xml:space="preserve">
          <source>The standard interface that all standard implementations of &lt;code&gt;JdbcRowSet&lt;/code&gt; must implement.</source>
          <target state="translated">&lt;code&gt;JdbcRowSet&lt;/code&gt; のすべての標準実装が実装する必要のある標準インターフェース。</target>
        </trans-unit>
        <trans-unit id="bbf8d9d8dbd72ecf1f4215ba8e97cd7badb383b6" translate="yes" xml:space="preserve">
          <source>The standard interface that provides the framework for all &lt;code&gt;FilteredRowSet&lt;/code&gt; objects to describe their filters.</source>
          <target state="translated">すべての &lt;code&gt;FilteredRowSet&lt;/code&gt; オブジェクトがフィルターを記述するためのフレームワークを提供する標準インターフェース。</target>
        </trans-unit>
        <trans-unit id="f8f169d2bb832c35eba59bc410c0b85f0003b6f8" translate="yes" xml:space="preserve">
          <source>The standard interface to a DSA private key.</source>
          <target state="translated">DSA 秘密鍵の標準インターフェイスです。</target>
        </trans-unit>
        <trans-unit id="be4242d6a22a82129b32c761e9b997ab8bdb7b76" translate="yes" xml:space="preserve">
          <source>The standard interface to a DSA private key. DSA (Digital Signature Algorithm) is defined in NIST's FIPS-186.</source>
          <target state="translated">DSA 秘密鍵の標準インターフェースです。DSA(デジタル署名アルゴリズム)は、NISTのFIPS-186で定義されています。</target>
        </trans-unit>
        <trans-unit id="0aee232c28f9de3b58df1a19a8e2a72c95efd9f7" translate="yes" xml:space="preserve">
          <source>The standard italic posture.</source>
          <target state="translated">標準的なイタリック体勢。</target>
        </trans-unit>
        <trans-unit id="265e9fc158c49896c41933585c842cef5b8e987f" translate="yes" xml:space="preserve">
          <source>The standard layer, where most components go. This the bottommost layer.</source>
          <target state="translated">ほとんどのコンポーネントが入る標準レイヤー。これが一番下のレイヤーです。</target>
        </trans-unit>
        <trans-unit id="7b2b71d5aa7e1b0b260acaadc43d3221dce05731" translate="yes" xml:space="preserve">
          <source>The standard light weight.</source>
          <target state="translated">定番の軽量化。</target>
        </trans-unit>
        <trans-unit id="a8d8726b4a5a07328b176cca7d74f5e2a761a964" translate="yes" xml:space="preserve">
          <source>The standard mapping in the Java programming language for an SQL structured type.</source>
          <target state="translated">Javaプログラミング言語におけるSQL構造化型の標準的なマッピング。</target>
        </trans-unit>
        <trans-unit id="c2eeb32dafb015f6f93305e7066122591f181fc8" translate="yes" xml:space="preserve">
          <source>The standard mapping in the Java programming language for an SQL structured type. A &lt;code&gt;Struct&lt;/code&gt; object contains a value for each attribute of the SQL structured type that it represents. By default, an instance of&lt;code&gt;Struct&lt;/code&gt; is valid as long as the application has a reference to it.</source>
          <target state="translated">SQL構造化タイプのJavaプログラミング言語での標準マッピング。 &lt;code&gt;Struct&lt;/code&gt; オブジェクトは、それが表すSQL構造化型の各属性の値を含みます。デフォルトでは、 &lt;code&gt;Struct&lt;/code&gt; のインスタンスは、アプリケーションがそれを参照している限り有効です。</target>
        </trans-unit>
        <trans-unit id="c927c0ada9cba1ad53c2c1bf1aa34f20c5ec2c56" translate="yes" xml:space="preserve">
          <source>The standard mental model for a date is based on three concepts - year, month and day. These map onto the &lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; and &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; fields. Note that there is no reference to eras. The full model for a date requires four concepts - era, year, month and day. These map onto the &lt;code&gt;ERA&lt;/code&gt;, &lt;code&gt;YEAR_OF_ERA&lt;/code&gt;, &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; and &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; fields. Whether this field or &lt;code&gt;YEAR&lt;/code&gt; is used depends on which mental model is being used. See &lt;a href=&quot;../chrono/chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt; for more discussion on this topic.</source>
          <target state="translated">日付の標準メンタルモデルは、年、月、日の3つの概念に基づいています。これらは、 &lt;code&gt;YEAR&lt;/code&gt; 、 &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; および &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; フィールドにマッピングされます。時代への言及がないことに注意してください。日付の完全なモデルには、時代、年、月、日という4つの概念が必要です。これらは、 &lt;code&gt;ERA&lt;/code&gt; 、 &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; 、 &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; 、 &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; フィールドにマッピングされます。このフィールドまたは &lt;code&gt;YEAR&lt;/code&gt; のどちらを使用するかは、使用されているメンタルモデルによって異なります。このトピックの詳細については、&lt;a href=&quot;../chrono/chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="552969cac10043f5eb1e8db38405b389d7505393" translate="yes" xml:space="preserve">
          <source>The standard mental model for a date is based on three concepts - year, month and day. These map onto the &lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; and &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; fields. Note that there is no reference to eras. The full model for a date requires four concepts - era, year, month and day. These map onto the &lt;code&gt;ERA&lt;/code&gt;, &lt;code&gt;YEAR_OF_ERA&lt;/code&gt;, &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; and &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; fields. Whether this field or &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; is used depends on which mental model is being used. See &lt;a href=&quot;../chrono/chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt; for more discussion on this topic.</source>
          <target state="translated">日付の標準メンタルモデルは、年、月、日の3つの概念に基づいています。これらは、 &lt;code&gt;YEAR&lt;/code&gt; 、 &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; および &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; フィールドにマッピングされます。時代への言及がないことに注意してください。日付の完全なモデルには、時代、年、月、日という4つの概念が必要です。これらは、 &lt;code&gt;ERA&lt;/code&gt; 、 &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; 、 &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; 、 &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; フィールドにマッピングされます。このフィールドまたは &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; が使用されるかどうかは、使用されているメンタルモデルによって異なります。このトピックの詳細については、&lt;a href=&quot;../chrono/chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3661c18690ae34088219c95d1f642f9094ca6650" translate="yes" xml:space="preserve">
          <source>The standard posture, upright.</source>
          <target state="translated">標準的な姿勢、直立姿勢。</target>
        </trans-unit>
        <trans-unit id="bcac68430abf1f9b59c3fc0c0ced10c89898d656" translate="yes" xml:space="preserve">
          <source>The standard posture, upright. This is the default value for &lt;code&gt;POSTURE&lt;/code&gt;.</source>
          <target state="translated">標準姿勢、直立。これは &lt;code&gt;POSTURE&lt;/code&gt; のデフォルト値です。</target>
        </trans-unit>
        <trans-unit id="4204acbf3d5f3f85ee9f30f3059d6be897c6a196" translate="yes" xml:space="preserve">
          <source>The standard property-id for a synchronization provider implementation name.</source>
          <target state="translated">同期化プロバイダの実装名の標準プロパティID。</target>
        </trans-unit>
        <trans-unit id="80bb8e7243eb06e9dd0a04e994954134803a7ab1" translate="yes" xml:space="preserve">
          <source>The standard property-id for a synchronization provider implementation vendor name.</source>
          <target state="translated">同期化プロバイダ実装ベンダー名の標準プロパティID。</target>
        </trans-unit>
        <trans-unit id="f3300fc7bb9dd6b49894aeba609ac649a7e0edb1" translate="yes" xml:space="preserve">
          <source>The standard property-id for a synchronization provider implementation version tag.</source>
          <target state="translated">同期化プロバイダの実装バージョンタグの標準プロパティID。</target>
        </trans-unit>
        <trans-unit id="f924447dc30c0a207a7a8dd003998719d641a65d" translate="yes" xml:space="preserve">
          <source>The standard reference implementation for the &lt;code&gt;CachedRowSet&lt;/code&gt; interface uses a &lt;code&gt;TreeMap&lt;/code&gt; object for the rowset, with the values in each row being contained in &lt;code&gt;Vector&lt;/code&gt; objects. It is expected that most implementations will do the same.</source>
          <target state="translated">&lt;code&gt;CachedRowSet&lt;/code&gt; インターフェイスの標準リファレンス実装では、行セットに &lt;code&gt;TreeMap&lt;/code&gt; オブジェクトを使用し、各行の値は &lt;code&gt;Vector&lt;/code&gt; オブジェクトに含まれています。ほとんどの実装で同じことが行われると予想されます。</target>
        </trans-unit>
        <trans-unit id="44003f488ebc1e70329a9b7e5361903f72e0de08" translate="yes" xml:space="preserve">
          <source>The standard reference implementation uses a &lt;code&gt;Vector&lt;/code&gt; object to contain the column values, and it is expected that most implementations will do the same. If a &lt;code&gt;Vector&lt;/code&gt; object is used, it size must be exactly equal to the number of rows in this &lt;code&gt;CachedRowSet&lt;/code&gt; object.</source>
          <target state="translated">標準のリファレンス実装では、 &lt;code&gt;Vector&lt;/code&gt; オブジェクトを使用して列の値が含まれ、ほとんどの実装でも同じことが期待されます。 &lt;code&gt;Vector&lt;/code&gt; オブジェクトを使用する場合、そのサイズは、この &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトの行数と正確に等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="5a269f562c7ddcb5223b4c729ca3aacff15045f7" translate="yes" xml:space="preserve">
          <source>The standard set of non-localized decimal style symbols.</source>
          <target state="translated">ローカライズされていない10進スタイルのシンボルの標準セット。</target>
        </trans-unit>
        <trans-unit id="2aa618fb16592d9504ead37dd1498e07dc1eb2fd" translate="yes" xml:space="preserve">
          <source>The standard target names for an Authentication Permission are:</source>
          <target state="translated">認証許可の標準的なターゲット名は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="085376bdd00c3589b2477d9a9b7e25e5aa764bdf" translate="yes" xml:space="preserve">
          <source>The standard text outputting methods use the localized text in the JDK. This method allows that text to be specified directly. The supplied map is not validated by the builder to ensure that formatting or parsing is possible, thus an invalid map may throw an error during later use.</source>
          <target state="translated">標準のテキスト出力方法では、JDK内のローカライズされたテキストを使用します。このメソッドでは、そのテキストを直接指定することができます。提供されたマップは、フォーマットやパースが可能であることを確認するためにビルダによって検証されないため、無効なマップは後で使用する際にエラーを投げる可能性があります。</target>
        </trans-unit>
        <trans-unit id="ace8ff3c243593fda8f90cc8a3f288d71a11483d" translate="yes" xml:space="preserve">
          <source>The standard value of the propertyName as fired from a BeanContext or other source of PropertyChangeEvents.</source>
          <target state="translated">BeanContextまたは他のPropertyChangeEventsのソースから発行されるPropertyNameの標準値。</target>
        </trans-unit>
        <trans-unit id="49ec7e4579c545f03b2dbae2595c4136e74f5f2a" translate="yes" xml:space="preserve">
          <source>The standard weight.</source>
          <target state="translated">標準的な重さです。</target>
        </trans-unit>
        <trans-unit id="062b0e97b7470f28f4677451830d828c09857342" translate="yes" xml:space="preserve">
          <source>The standard weight. This is the default value for &lt;code&gt;WEIGHT&lt;/code&gt;.</source>
          <target state="translated">標準重量。これは、 &lt;code&gt;WEIGHT&lt;/code&gt; のデフォルト値です。</target>
        </trans-unit>
        <trans-unit id="5fa2e7b7afa217d5160022594a1240084ec90835" translate="yes" xml:space="preserve">
          <source>The standard width.</source>
          <target state="translated">標準的な幅です。</target>
        </trans-unit>
        <trans-unit id="1ec1dd1d6de288f3d7a0a8ac09f8cd6fa6f29d04" translate="yes" xml:space="preserve">
          <source>The standard width. This is the default value for &lt;code&gt;WIDTH&lt;/code&gt;.</source>
          <target state="translated">標準幅。これは &lt;code&gt;WIDTH&lt;/code&gt; のデフォルト値です。</target>
        </trans-unit>
        <trans-unit id="f3bed9164e92a7973b9cbcd9ad79594c005f0947" translate="yes" xml:space="preserve">
          <source>The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified date. The result will be negative if the end is before the start. The negative sign will be the same in each of year, month and day.</source>
          <target state="translated">開始点と終了点は &lt;code&gt;this&lt;/code&gt; と指定された日付です。終了が開始の前にある場合、結果は負になります。負の符号は、年、月、日で同じになります。</target>
        </trans-unit>
        <trans-unit id="3c2d246e90e00803aeb29283b1b8bc16d249d5bc" translate="yes" xml:space="preserve">
          <source>The start argument must be nonnegative, and not greater than &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="translated">開始引数は負ではなく、 &lt;code&gt;end&lt;/code&gt; 以下でなければなりません。</target>
        </trans-unit>
        <trans-unit id="a4ddf7bb81f0c34d9260c89803dda3e7e413e128" translate="yes" xml:space="preserve">
          <source>The start date is included, but the end date is not. The period is calculated by removing complete months, then calculating the remaining number of days, adjusting to ensure that both have the same sign. The number of months is then normalized into years and months based on a 12 month year. A month is considered to be complete if the end day-of-month is greater than or equal to the start day-of-month. For example, from &lt;code&gt;2010-01-15&lt;/code&gt; to &lt;code&gt;2011-03-18&lt;/code&gt; is &quot;1 year, 2 months and 3 days&quot;.</source>
          <target state="translated">開始日は含まれますが、終了日は含まれません。期間は、完全な月を削除してから残りの日数を計算し、両方が同じ符号になるように調整して計算されます。月数は、12か月の年に基づいて年と月に正規化されます。終了日が開始日以上の場合、月は完全であると見なされます。たとえば、 &lt;code&gt;2010-01-15&lt;/code&gt; から &lt;code&gt;2011-03-18&lt;/code&gt; は「1年2か月3日」です。</target>
        </trans-unit>
        <trans-unit id="6620cb9be5fc56436fc3a7c1b18ff6874dd29e0c" translate="yes" xml:space="preserve">
          <source>The start date is included, but the end date is not. The period is calculated by removing complete months, then calculating the remaining number of days, adjusting to ensure that both have the same sign. The number of months is then split into years and months based on a 12 month year. A month is considered if the end day-of-month is greater than or equal to the start day-of-month. For example, from &lt;code&gt;2010-01-15&lt;/code&gt; to &lt;code&gt;2011-03-18&lt;/code&gt; is one year, two months and three days.</source>
          <target state="translated">開始日は含まれますが、終了日は含まれません。期間は、完全な月を削除してから残りの日数を計算し、両方が同じ符号になるように調整して計算されます。月数は、12か月の年に基づいて年と月に分割されます。終了日が開始日以上の場合、月が考慮されます。たとえば、 &lt;code&gt;2010-01-15&lt;/code&gt; から &lt;code&gt;2011-03-18&lt;/code&gt; は、1年、2か月、3日です。</target>
        </trans-unit>
        <trans-unit id="7220f597737d970989890a2427aecffcbf28c9bf" translate="yes" xml:space="preserve">
          <source>The start date is included, but the end date is not. The period is calculated using &lt;a href=&quot;chronolocaldate#until(java.time.chrono.ChronoLocalDate)&quot;&gt;&lt;code&gt;ChronoLocalDate.until(ChronoLocalDate)&lt;/code&gt;&lt;/a&gt;. As such, the calculation is chronology specific.</source>
          <target state="translated">開始日は含まれていますが、終了日は含まれていません。期間は、&lt;a href=&quot;chronolocaldate#until(java.time.chrono.ChronoLocalDate)&quot;&gt; &lt;code&gt;ChronoLocalDate.until(ChronoLocalDate)&lt;/code&gt; &lt;/a&gt;を使用して計算されます。そのため、計算は年表に固有です。</target>
        </trans-unit>
        <trans-unit id="9238c2af9e0839f3491092fc2fe2b2c12cadecf1" translate="yes" xml:space="preserve">
          <source>The start date is included, but the end date is not. The period is calculated using &lt;a href=&quot;chronolocaldate#until-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;ChronoLocalDate.until(ChronoLocalDate)&lt;/code&gt;&lt;/a&gt;. As such, the calculation is chronology specific.</source>
          <target state="translated">開始日は含まれますが、終了日は含まれません。期間は&lt;a href=&quot;chronolocaldate#until-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;ChronoLocalDate.until(ChronoLocalDate)&lt;/code&gt; &lt;/a&gt;を使用して計算されます。そのため、計算は年表に固有です。</target>
        </trans-unit>
        <trans-unit id="4616505c5d1d5433c8afbd259a8f16eac5343c68" translate="yes" xml:space="preserve">
          <source>The start index of the text sequence.</source>
          <target state="translated">テキストシーケンスの開始インデックス。</target>
        </trans-unit>
        <trans-unit id="6becf8d53264f434379756115b0b786e11e4f8c2" translate="yes" xml:space="preserve">
          <source>The startDrag() method invokes the createDragSourceContext() method to instantiate an appropriate &lt;code&gt;DragSourceContext&lt;/code&gt; and associate the &lt;code&gt;DragSourceContextPeer&lt;/code&gt; with that.</source>
          <target state="translated">startDrag（）メソッドは、適切なインスタンス化するcreateDragSourceContext（）メソッド呼び出し &lt;code&gt;DragSourceContext&lt;/code&gt; のと関連付ける &lt;code&gt;DragSourceContextPeer&lt;/code&gt; それとを。</target>
        </trans-unit>
        <trans-unit id="82e2ccda6d83bc11eba880fd5d75e0aa357c29cd" translate="yes" xml:space="preserve">
          <source>The starting angle of the arc in degrees.</source>
          <target state="translated">弧の開始角度を度単位で表したものです。</target>
        </trans-unit>
        <trans-unit id="2264eaa8f12a8a3d18c204a6414263d50eec329f" translate="yes" xml:space="preserve">
          <source>The starting point of this matcher's region</source>
          <target state="translated">このマッチャーの領域の出発点</target>
        </trans-unit>
        <trans-unit id="711145c27ccf3166aa36ebb810ced05b44da407a" translate="yes" xml:space="preserve">
          <source>The state factories tried must each implement either &lt;code&gt;StateFactory&lt;/code&gt; or &lt;code&gt;DirStateFactory&lt;/code&gt;. If it implements &lt;code&gt;DirStateFactory&lt;/code&gt;, then &lt;code&gt;DirStateFactory.getStateToBind()&lt;/code&gt; is called; otherwise, &lt;code&gt;StateFactory.getStateToBind()&lt;/code&gt; is called.</source>
          <target state="translated">試行される状態ファクトリは、それぞれ &lt;code&gt;StateFactory&lt;/code&gt; または &lt;code&gt;DirStateFactory&lt;/code&gt; を実装する必要があります。 &lt;code&gt;DirStateFactory&lt;/code&gt; を実装している場合は、 &lt;code&gt;DirStateFactory.getStateToBind()&lt;/code&gt; が呼び出されます。それ以外の場合は、 &lt;code&gt;StateFactory.getStateToBind()&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="069364d5e2bc01251c39eefbdac8ec561989f08f" translate="yes" xml:space="preserve">
          <source>The state information after the edit</source>
          <target state="translated">編集後の状態情報</target>
        </trans-unit>
        <trans-unit id="78b85e5c07d69b00d4a00829691f1844f46ca899" translate="yes" xml:space="preserve">
          <source>The state information prior to the edit</source>
          <target state="translated">編集前の状態情報</target>
        </trans-unit>
        <trans-unit id="b4b4593a62342b2b46d5d7ee91609ae7dd334526" translate="yes" xml:space="preserve">
          <source>The state maintained by an instance of &lt;code&gt;ImageReadParam&lt;/code&gt; is independent of any particular image being decoded. When actual decoding takes place, the values set in the read param are combined with the actual properties of the image being decoded from the stream and the destination &lt;code&gt;BufferedImage&lt;/code&gt; that will receive the decoded pixel data. For example, the source region set using &lt;code&gt;setSourceRegion&lt;/code&gt; will first be intersected with the actual valid source area. The result will be translated by the value returned by &lt;code&gt;getDestinationOffset&lt;/code&gt;, and the resulting rectangle intersected with the actual valid destination area to yield the destination area that will be written.</source>
          <target state="translated">&lt;code&gt;ImageReadParam&lt;/code&gt; のインスタンスによって維持される状態は、デコードされる特定の画像とは無関係です。実際のデコードが行われると、読み取りパラメーターに設定された値が、ストリームからデコードされる画像の実際のプロパティと、デコードされたピクセルデータを受け取る宛先の &lt;code&gt;BufferedImage&lt;/code&gt; と組み合わされます。たとえば、 &lt;code&gt;setSourceRegion&lt;/code&gt; を使用して設定されたソース領域は、最初に実際の有効なソース領域と交差します。結果は &lt;code&gt;getDestinationOffset&lt;/code&gt; によって返された値によって変換され、結果の長方形は実際の有効な宛先領域と交差して、書き込まれる宛先領域を生成します。</target>
        </trans-unit>
        <trans-unit id="3a932e6e75d4e4ee973a0e76a7f43125497f0c01" translate="yes" xml:space="preserve">
          <source>The state moves from readable to not readable once free() or any of the reading APIs are called: getBinaryStream(), getCharacterStream(), getSource(), and getString(). Implementations may also change the state to not writable when this occurs.</source>
          <target state="translated">free()または getBinaryStream()、getCharacterStream()、getSource()、および getString()のいずれかの読み取り API が呼び出されると、状態は読み取り可能な状態から読み取り不可能な状態に移行します。これが発生した場合、実装は状態を書き込み不可に変更することもできます。</target>
        </trans-unit>
        <trans-unit id="5f6f7bffc98d1e8352d937b1d9d3e6a929292204" translate="yes" xml:space="preserve">
          <source>The state moves from writable to not writable once free() or any of the writing APIs are called: setBinaryStream(), setCharacterStream(), setResult(), and setString(). Implementations may also change the state to not readable when this occurs.</source>
          <target state="translated">free()または setBinaryStream()、setCharacterStream()、setResult()、および setString()のいずれかの書き込み API が呼び出されると、状態は書き込み可能な状態から書き込み不可能な状態に移行します。これが発生した場合、実装は状態を書き込み不可に変更することもできます。</target>
        </trans-unit>
        <trans-unit id="5f123d14f73abf8b927161bc953361f29bebc2d2" translate="yes" xml:space="preserve">
          <source>The state of each match result passed to the replacer function is guaranteed to be constant only for the duration of the replacer function call and only if the replacer function does not modify this matcher's state.</source>
          <target state="translated">置換関数に渡された各マッチ結果の状態は、置換関数が呼び出されている間のみ一定であることが保証されており、置換関数がこのマッチャの状態を変更しなかった場合に限ります。</target>
        </trans-unit>
        <trans-unit id="67f87189b7cffe5c4bdbf9a74576a5752597c030" translate="yes" xml:space="preserve">
          <source>The state of resulting file attribute view is intimately connected to this directory stream. Once the directory stream &lt;a href=&quot;../../io/closeable#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then all methods to read or update attributes will throw &lt;a href=&quot;closeddirectorystreamexception&quot;&gt;&lt;code&gt;ClosedDirectoryStreamException&lt;/code&gt;&lt;/a&gt;. The file is not required to exist at the time that the file attribute view is created but methods to read or update attributes of the file will fail when invoked and the file does not exist.</source>
          <target state="translated">結果のファイル属性ビューの状態は、このディレクトリストリームに密接に関連しています。ディレクトリストリームが&lt;a href=&quot;../../io/closeable#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;、属性を読み取ったり更新したりするすべてのメソッドが&lt;a href=&quot;closeddirectorystreamexception&quot;&gt; &lt;code&gt;ClosedDirectoryStreamException&lt;/code&gt; &lt;/a&gt;をスローします。ファイル属性ビューの作成時にファイルが存在する必要はありませんが、ファイルの属性を読み取ったり更新したりするメソッドは、呼び出されたときに失敗し、ファイルは存在しません。</target>
        </trans-unit>
        <trans-unit id="31371db7bcedb5e6ef0fa2a822080261021c1cbf" translate="yes" xml:space="preserve">
          <source>The state of resulting file attribute view is intimately connected to this directory stream. Once the directory stream &lt;a href=&quot;../../io/closeable#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then all methods to read or update attributes will throw &lt;a href=&quot;closeddirectorystreamexception&quot;&gt;&lt;code&gt;ClosedDirectoryStreamException&lt;/code&gt;&lt;/a&gt;. The file is not required to exist at the time that the file attribute view is created but methods to read or update attributes of the file will fail when invoked and the file does not exist.</source>
          <target state="translated">結果のファイル属性ビューの状態は、このディレクトリストリームと密接に関連しています。ディレクトリストリームが&lt;a href=&quot;../../io/closeable#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;、属性を読み取りまたは更新するすべてのメソッドが&lt;a href=&quot;closeddirectorystreamexception&quot;&gt; &lt;code&gt;ClosedDirectoryStreamException&lt;/code&gt; &lt;/a&gt;をスローします。ファイルは、ファイル属性ビューの作成時に存在している必要はありませんが、ファイルの属性を読み取りまたは更新するメソッドは、呼び出されたときに失敗し、ファイルが存在しません。</target>
        </trans-unit>
        <trans-unit id="5387502d22d451f2fcf83887e20653a2840e5163" translate="yes" xml:space="preserve">
          <source>The state of resulting file attribute view is intimately connected to this directory stream. Once the directory stream is &lt;a href=&quot;../../io/closeable#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then all methods to read or update attributes will throw &lt;a href=&quot;closeddirectorystreamexception&quot;&gt;&lt;code&gt;ClosedDirectoryStreamException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">結果のファイル属性ビューの状態は、このディレクトリストリームに密接に関連しています。ディレクトリストリームが&lt;a href=&quot;../../io/closeable#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;、属性を読み取ったり更新したりするすべてのメソッドが&lt;a href=&quot;closeddirectorystreamexception&quot;&gt; &lt;code&gt;ClosedDirectoryStreamException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="6e75ea05d69038d832d8131b3848e4927b08478a" translate="yes" xml:space="preserve">
          <source>The state of resulting file attribute view is intimately connected to this directory stream. Once the directory stream is &lt;a href=&quot;../../io/closeable#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then all methods to read or update attributes will throw &lt;a href=&quot;closeddirectorystreamexception&quot;&gt;&lt;code&gt;ClosedDirectoryStreamException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">結果のファイル属性ビューの状態は、このディレクトリストリームと密接に関連しています。ディレクトリストリームが&lt;a href=&quot;../../io/closeable#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;、属性の読み取りまたは更新を行うすべてのメソッドが&lt;a href=&quot;closeddirectorystreamexception&quot;&gt; &lt;code&gt;ClosedDirectoryStreamException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="5cfab20243a8ae6cc96b634df30cc6e006330263" translate="yes" xml:space="preserve">
          <source>The state of the horizontal and vertical scrollbars is represented by two &lt;code&gt;ScrollPaneAdjustable&lt;/code&gt; objects (one for each dimension) which implement the &lt;code&gt;Adjustable&lt;/code&gt; interface. The API provides methods to access those objects such that the attributes on the Adjustable object (such as unitIncrement, value, etc.) can be manipulated.</source>
          <target state="translated">水平スクロールバーと垂直スクロールバーの状態は、 &lt;code&gt;Adjustable&lt;/code&gt; インターフェイスを実装する2つの &lt;code&gt;ScrollPaneAdjustable&lt;/code&gt; オブジェクト（各ディメンションに1つ）で表されます。APIは、Adjustableオブジェクトの属性（unitIncrement、valueなど）を操作できるように、これらのオブジェクトにアクセスするためのメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="996e9184ffea209eb07129d46d0cbe21a541d384" translate="yes" xml:space="preserve">
          <source>The state of the match result passed to the replacer function is guaranteed to be constant only for the duration of the replacer function call and only if the replacer function does not modify this matcher's state.</source>
          <target state="translated">置換関数に渡されたマッチ結果の状態は、置換関数が呼び出されている間のみ一定であることが保証されており、置換関数がこのマッチャの状態を変更しない場合に限ります。</target>
        </trans-unit>
        <trans-unit id="5df4fed0eb737b7e2f38a8fe3aee9d1a9f382989" translate="yes" xml:space="preserve">
          <source>The state of the modifier keys.</source>
          <target state="translated">修飾キーの状態。</target>
        </trans-unit>
        <trans-unit id="98da643dc29593f616d4b328dffe394f8b15ab99" translate="yes" xml:space="preserve">
          <source>The state of the modifier keys. This is replaced with InputEvent.getModifiers() In java 1.1 MouseEvent and KeyEvent are subclasses of InputEvent.</source>
          <target state="translated">モディファイアのキーの状態を表します。これはInputEvent.getModifiers()に置き換えられます。 java 1.1では、MouseEventとKeyEventはInputEventのサブクラスです。</target>
        </trans-unit>
        <trans-unit id="e2b4f9494871b832aa6cdc89d8afd5085d887c4d" translate="yes" xml:space="preserve">
          <source>The state of the tree selection is characterized by a set of TreePaths, and optionally a set of integers. The mapping from TreePath to integer is done by way of an instance of RowMapper. It is not necessary for a TreeSelectionModel to have a RowMapper to correctly operate, but without a RowMapper &lt;code&gt;getSelectionRows&lt;/code&gt; will return null.</source>
          <target state="translated">ツリー選択の状態は、TreePathのセット、およびオプションで整数のセットによって特徴付けられます。TreePathから整数へのマッピングは、RowMapperのインスタンスを介して行われます。TreeSelectionModelが正しく動作するためにRowMapperを持っている必要はありませんが、RowMapperがないと &lt;code&gt;getSelectionRows&lt;/code&gt; はnullを返します。</target>
        </trans-unit>
        <trans-unit id="1dd113847fce5d615aef061976b5b5490ed246b1" translate="yes" xml:space="preserve">
          <source>The static methods of this class are also guaranteed to be thread-safe. Multiple threads may concurrently invoke the static methods defined in this class with no ill effects.</source>
          <target state="translated">このクラスの静的メソッドはスレッドセーフであることも保証されています。複数のスレッドがこのクラスで定義されている静的メソッドを同時に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="cd0f94f9998daea410fa7e45671e8cee561746d9" translate="yes" xml:space="preserve">
          <source>The static methods of this class are guaranteed to be thread-safe. Multiple threads may concurrently invoke the static methods defined in this class with no ill effects.</source>
          <target state="translated">このクラスの静的メソッドはスレッドセーフであることが保証されています。複数のスレッドがこのクラスで定義されている静的メソッドを同時に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="453f0a5aaaeaa1b3ec705217a056ecbeb4f2af9e" translate="yes" xml:space="preserve">
          <source>The status is allowed.</source>
          <target state="translated">ステータスが認められています。</target>
        </trans-unit>
        <trans-unit id="b19b7fa28bfd0ac50416748ffc0c43c6c19d76ee" translate="yes" xml:space="preserve">
          <source>The status is rejected.</source>
          <target state="translated">状態は却下されています。</target>
        </trans-unit>
        <trans-unit id="43acb129e0f044bbc46043461b48630e54dab85d" translate="yes" xml:space="preserve">
          <source>The status is undecided, not allowed and not rejected.</source>
          <target state="translated">状態は未決定で、許されず、却下されることもない。</target>
        </trans-unit>
        <trans-unit id="c8c42310ccefa275fea074e407b370d922b16a8c" translate="yes" xml:space="preserve">
          <source>The status of a check on the class, array length, number of references, depth, and stream size.</source>
          <target state="translated">クラス、配列の長さ、参照数、深さ、ストリームサイズのチェックの状態。</target>
        </trans-unit>
        <trans-unit id="0914f7bca27a68099a07b4e6076d13b547cbe3fd" translate="yes" xml:space="preserve">
          <source>The stax.properties file is read only once by the implementation and its values are then cached for future use. If the file does not exist when the first attempt is made to read from it, no further attempts are made to check for its existence. It is not possible to change the value of any property in stax.properties after it has been read for the first time.</source>
          <target state="translated">stax.propertiesファイルはインプリメンテーションによって一度だけ読み取られ、その値は将来の使用のためにキャッシュされます。ファイルからの読み取りを最初に試みたときにファイルが存在しない場合、その存在を確認するためにそれ以上の試みは行われません。初めて読み込まれた後に、stax.propertiesのプロパティの値を変更することはできません。</target>
        </trans-unit>
        <trans-unit id="b80b91b73f97f322ab33c92b0bd0b2d998475afe" translate="yes" xml:space="preserve">
          <source>The step and pred functions are then executed, in clause order (step before pred), until a pred function returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">次に、step関数とpred関数が、pred関数が &lt;code&gt;false&lt;/code&gt; を返すまで、句の順序（predの前のステップ）で実行されます。</target>
        </trans-unit>
        <trans-unit id="894a59007f0696d713a79c9ba3e2b5d5cb14c470" translate="yes" xml:space="preserve">
          <source>The steps in the rendering process are:</source>
          <target state="translated">レンダリングプロセスのステップは</target>
        </trans-unit>
        <trans-unit id="c14f9f8f60727625d22b3850782fe64ea87452ab" translate="yes" xml:space="preserve">
          <source>The stipulation above does not imply that sets must accept all elements; sets may refuse to add any particular element, including &lt;code&gt;null&lt;/code&gt;, and throw an exception, as described in the specification for &lt;a href=&quot;collection#add(E)&quot;&gt;&lt;code&gt;Collection.add&lt;/code&gt;&lt;/a&gt;. Individual set implementations should clearly document any restrictions on the elements that they may contain.</source>
          <target state="translated">上記の規定は、セットがすべての要素を受け入れる必要があることを意味するものではありません。&lt;a href=&quot;collection#add(E)&quot;&gt; &lt;code&gt;Collection.add&lt;/code&gt; &lt;/a&gt;の仕様で説明されているように、セットは &lt;code&gt;null&lt;/code&gt; を含む特定の要素の追加を拒否し、例外をスローする場合があります。個々のセットの実装では、含まれる可能性のある要素に対する制限を明確に文書化する必要があります。</target>
        </trans-unit>
        <trans-unit id="8af2436810c570bd5737c0e2bb02a5d795441443" translate="yes" xml:space="preserve">
          <source>The stipulation above does not imply that sets must accept all elements; sets may refuse to add any particular element, including &lt;code&gt;null&lt;/code&gt;, and throw an exception, as described in the specification for &lt;a href=&quot;collection#add-E-&quot;&gt;&lt;code&gt;Collection.add&lt;/code&gt;&lt;/a&gt;. Individual set implementations should clearly document any restrictions on the elements that they may contain.</source>
          <target state="translated">上記の規定は、セットがすべての要素を受け入れなければならないことを意味しません。&lt;a href=&quot;collection#add-E-&quot;&gt; &lt;code&gt;Collection.add&lt;/code&gt; &lt;/a&gt;の仕様で説明されているように、セットは &lt;code&gt;null&lt;/code&gt; を含む特定の要素の追加を拒否し、例外をスローする場合があります。個々のセットの実装では、含まれる可能性のある要素に対する制限を明確に文書化する必要があります。</target>
        </trans-unit>
        <trans-unit id="18eb68b1ed315d63fa4df9e04e256a50303f9665" translate="yes" xml:space="preserve">
          <source>The stored chain is cloned before being returned.</source>
          <target state="translated">保存されたチェーンは、返却される前にクローン化されます。</target>
        </trans-unit>
        <trans-unit id="34211847f3a2164208058d0523645bdef1169daa" translate="yes" xml:space="preserve">
          <source>The stored derived color</source>
          <target state="translated">保存されている派生色</target>
        </trans-unit>
        <trans-unit id="59fa77a75631a5fd04013364bcf5c35eed6bf5bc" translate="yes" xml:space="preserve">
          <source>The strategy used to shut down the application, if Sudden Termination is not enabled.</source>
          <target state="translated">Sudden Termination が有効になっていない場合に、アプリケーションをシャットダウンするために使用されるストラテジー。</target>
        </trans-unit>
        <trans-unit id="6a20537f8d5d92c9cff89f8fb6c2858031b1dd68" translate="yes" xml:space="preserve">
          <source>The stream binds to this bit set when the terminal stream operation commences (specifically, the spliterator for the stream is &lt;a href=&quot;spliterator#binding&quot;&gt;&lt;em&gt;late-binding&lt;/em&gt;&lt;/a&gt;). If the bit set is modified during that operation then the result is undefined.</source>
          <target state="translated">ストリームは、ターミナルストリーム操作の開始時にこのビットセットにバインドされます（具体的には、ストリームのスプリッターは&lt;a href=&quot;spliterator#binding&quot;&gt;&lt;em&gt;遅延バインディングです&lt;/em&gt;&lt;/a&gt;）。その操作中にビットセットが変更された場合、結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="b503c50c6ec2a853d246bef99b17e237b1f62fe3" translate="yes" xml:space="preserve">
          <source>The stream binds to this sequence when the terminal stream operation commences (specifically, for mutable sequences the spliterator for the stream is &lt;a href=&quot;../util/spliterator#binding&quot;&gt;&lt;em&gt;late-binding&lt;/em&gt;&lt;/a&gt;). If the sequence is modified during that operation then the result is undefined.</source>
          <target state="translated">ストリームは、ターミナルストリーム操作の開始時にこのシーケンスにバインドします（具体的には、可変シーケンスの場合、ストリームのスプリッターは&lt;a href=&quot;../util/spliterator#binding&quot;&gt;&lt;em&gt;遅延バインディングです&lt;/em&gt;&lt;/a&gt;）。その操作中にシーケンスが変更された場合、結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="284a200aa5c754806caf07fbf13e99a88b0c7015" translate="yes" xml:space="preserve">
          <source>The stream is</source>
          <target state="translated">流れは</target>
        </trans-unit>
        <trans-unit id="0f4127d1899727942c90922302e4fcbdc49bed7d" translate="yes" xml:space="preserve">
          <source>The stream is parallel;</source>
          <target state="translated">流れは平行しています。</target>
        </trans-unit>
        <trans-unit id="18c2dad420890c0c93e56bc71847c1ffc91d517a" translate="yes" xml:space="preserve">
          <source>The stream is written using the ISO 8859-1 character encoding.</source>
          <target state="translated">ストリームは、ISO 8859-1 文字エンコーディングを使用して書き込まれます。</target>
        </trans-unit>
        <trans-unit id="40953f480e1f2608bd2829d4c5ca6a88b49f29cb" translate="yes" xml:space="preserve">
          <source>The stream of strings computed by splitting the input around matches of this pattern</source>
          <target state="translated">このパターンにマッチする入力を中心に分割して計算される文字列のストリーム.</target>
        </trans-unit>
        <trans-unit id="0278f0c3b2832857f3b5d471e56fa1f750974135" translate="yes" xml:space="preserve">
          <source>The stream position is left at its prior position upon exit from this method.</source>
          <target state="translated">このメソッドを終了すると、ストリームの位置は前の位置のままになります。</target>
        </trans-unit>
        <trans-unit id="0c88da049e966b7fa1b0336d227d0469c10d044c" translate="yes" xml:space="preserve">
          <source>The stream returned by this method contains each substring of the input sequence that is terminated by another subsequence that matches this pattern or is terminated by the end of the input sequence. The substrings in the stream are in the order in which they occur in the input. Trailing empty strings will be discarded and not encountered in the stream.</source>
          <target state="translated">このメソッドによって返されるストリームは、入力シーケンスの各部分文字列を含み、このパターンにマッチする別の部分文字列によって終端されるか、または入力シーケンスの終端によって終端される。ストリームに含まれる部分文字列は、入力の中で出現した順に並べられます。後続の空の文字列は破棄され、ストリームには含まれません。</target>
        </trans-unit>
        <trans-unit id="b6f6114953487ace92dd1c168418f7e9f095d3d0" translate="yes" xml:space="preserve">
          <source>The stream returned by this method contains the lines from this string in the order in which they occur.</source>
          <target state="translated">このメソッドが返すストリームには、この文字列の行が出現した順に含まれます。</target>
        </trans-unit>
        <trans-unit id="cc5a36b07837d8684881fc09793cf7774af9e41a" translate="yes" xml:space="preserve">
          <source>The stream will not be buffered, and it will not support the &lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../io/inputstream#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; methods. The stream will be safe for access by multiple concurrent threads. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">ストリームはバッファリングされず、&lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/inputstream#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;メソッドをサポートしません。ストリームは、複数の同時スレッドによるアクセスに対して安全になります。ストリームを閉じると、チャネルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="8035d3c148eb320bea2a1229c6025747c0adc1f8" translate="yes" xml:space="preserve">
          <source>The stream will not be buffered, and it will not support the &lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../io/inputstream#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; methods. The stream will be safe for access by multiple concurrent threads. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">ストリームはバッファリングされず、&lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/inputstream#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;メソッドをサポートしません。ストリームは、複数の同時スレッドによるアクセスに対して安全になります。ストリームを閉じると、チャネルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="bc7063010775a8a4dfbf6ea7c3f4fd8168851da4" translate="yes" xml:space="preserve">
          <source>The stream will not be buffered. The stream will be safe for access by multiple concurrent threads. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">ストリームはバッファリングされません。ストリームは、複数のスレッドが同時にアクセスしても安全です。ストリームを閉じると、チャンネルも閉じられます。</target>
        </trans-unit>
        <trans-unit id="635eea582878c3cee66666dcef47dae09ac40dc8" translate="yes" xml:space="preserve">
          <source>The stream-based methods have been removed from RFC 8353.</source>
          <target state="translated">ストリームベースのメソッドはRFC 8353から削除されました。</target>
        </trans-unit>
        <trans-unit id="1e0b7738c3889e14f5b400112462983b88473f42" translate="yes" xml:space="preserve">
          <source>The stream-based methods have been removed from RFC 8353. Use &lt;a href=&quot;#acceptSecContext(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;acceptSecContext(byte[], int, int)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">ストリームベースのメソッドはRFC8353から削除されました。代わりに&lt;a href=&quot;#acceptSecContext(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;acceptSecContext(byte[], int, int)&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="fdd1e4fc8cc236e807967eab1defe58a2d7fb81c" translate="yes" xml:space="preserve">
          <source>The stream-based methods have been removed from RFC 8353. Use &lt;a href=&quot;#getMIC(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;getMIC(byte[], int, int, MessageProp)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">ストリームベースのメソッドはRFC8353から削除されました。代わりに&lt;a href=&quot;#getMIC(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;getMIC(byte[], int, int, MessageProp)&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="75a1f54ce108d9e7d4e20f8e2e55c349191efa71" translate="yes" xml:space="preserve">
          <source>The stream-based methods have been removed from RFC 8353. Use &lt;a href=&quot;#initSecContext(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;initSecContext(byte[], int, int)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">ストリームベースのメソッドはRFC8353から削除されました。代わりに&lt;a href=&quot;#initSecContext(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;initSecContext(byte[], int, int)&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="837beaf6b0fd108bd6761b7a930f749f93c98a2f" translate="yes" xml:space="preserve">
          <source>The stream-based methods have been removed from RFC 8353. Use &lt;a href=&quot;#unwrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;unwrap(byte[], int, int, MessageProp)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">ストリームベースのメソッドはRFC8353から削除されました。代わりに&lt;a href=&quot;#unwrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;unwrap(byte[], int, int, MessageProp)&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="20e163f975ddc90067dad425a1a8436ac6312c00" translate="yes" xml:space="preserve">
          <source>The stream-based methods have been removed from RFC 8353. Use &lt;a href=&quot;#verifyMIC(byte%5B%5D,int,int,byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;verifyMIC(byte[], int, int, byte[], int, int, MessageProp)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">ストリームベースのメソッドはRFC8353から削除されました。代わりに&lt;a href=&quot;#verifyMIC(byte%5B%5D,int,int,byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;verifyMIC(byte[], int, int, byte[], int, int, MessageProp)&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="3311a132a16f8c1f01912c04e4d437b623872dab" translate="yes" xml:space="preserve">
          <source>The stream-based methods have been removed from RFC 8353. Use &lt;a href=&quot;#wrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;wrap(byte[], int, int, MessageProp)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">ストリームベースのメソッドはRFC8353から削除されました。代わりに&lt;a href=&quot;#wrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;wrap(byte[], int, int, MessageProp)&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="6e7c1e2a83cde4b74baace6a01266e9922cbc527" translate="yes" xml:space="preserve">
          <source>The stream-based methods of &lt;code&gt;GSSContext&lt;/code&gt; have been deprecated in Java SE 11. These methods have also been removed from &lt;a href=&quot;http://tools.ietf.org/html/rfc8353&quot;&gt; RFC 8353: Generic Security Service API Version 2: Java Bindings Update&lt;/a&gt; for the following reasons (see section 11): &quot;The overloaded methods of GSSContext that use input and output streams as the means to convey authentication and per-message GSS-API tokens as described in Section 5.15 of RFC 5653 are removed in this update as the wire protocol should be defined by an application and not a library. It's also impossible to implement these methods correctly when the token has no self-framing (where the end cannot be determined), or the library has no knowledge of the token format (for example, as a bridge talking to another GSS library)&quot;. These methods include &lt;a href=&quot;#initSecContext(java.io.InputStream,java.io.OutputStream)&quot;&gt;&lt;code&gt;initSecContext(InputStream, OutputStream)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#acceptSecContext(java.io.InputStream,java.io.OutputStream)&quot;&gt;&lt;code&gt;acceptSecContext(InputStream, OutputStream)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#wrap(java.io.InputStream,java.io.OutputStream,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;wrap(InputStream, OutputStream, MessageProp)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unwrap(java.io.InputStream,java.io.OutputStream,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;unwrap(InputStream, OutputStream, MessageProp)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getMIC(java.io.InputStream,java.io.OutputStream,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;getMIC(InputStream, OutputStream, MessageProp)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#verifyMIC(java.io.InputStream,java.io.InputStream,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;verifyMIC(InputStream, InputStream, MessageProp)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GSSContext&lt;/code&gt; のストリームベースのメソッドはJavaSE 11で非推奨になりました。これらのメソッドは、&lt;a href=&quot;http://tools.ietf.org/html/rfc8353&quot;&gt;RFC 8353&lt;/a&gt;からも削除されました。GenericSecurityServiceAPIバージョン2：Java Bindings Updateは、次の理由で更新されます（セクション11を参照）。 RFC 5653のセクション5.15で説明されているように認証およびメッセージごとのGSS-APIトークンを伝達する手段として入力ストリームと出力ストリームを使用するGSSContextは、ワイヤープロトコルがライブラリではなくアプリケーションによって定義される必要があるため、このアップデートでは削除されています。また、トークンにセルフフレーミングがない場合（終了を判別できない場合）、またはライブラリにトークン形式の知識がない場合（たとえば、別のGSSライブラリと通信するブリッジとして）、これらのメソッドを正しく実装することは不可能です。これらの方法には以下が含まれます&lt;a href=&quot;#initSecContext(java.io.InputStream,java.io.OutputStream)&quot;&gt; &lt;code&gt;initSecContext(InputStream, OutputStream)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#acceptSecContext(java.io.InputStream,java.io.OutputStream)&quot;&gt; &lt;code&gt;acceptSecContext(InputStream, OutputStream)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#wrap(java.io.InputStream,java.io.OutputStream,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;wrap(InputStream, OutputStream, MessageProp)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#unwrap(java.io.InputStream,java.io.OutputStream,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;unwrap(InputStream, OutputStream, MessageProp)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getMIC(java.io.InputStream,java.io.OutputStream,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;getMIC(InputStream, OutputStream, MessageProp)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#verifyMIC(java.io.InputStream,java.io.InputStream,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;verifyMIC(InputStream, InputStream, MessageProp)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b3196486e12ee1ceae179dd2a0073d0d87998aba" translate="yes" xml:space="preserve">
          <source>The strict sequential order of invocations from &lt;code&gt;WebSocket&lt;/code&gt; to &lt;code&gt;Listener&lt;/code&gt; means, in particular, that the &lt;code&gt;Listener&lt;/code&gt;'s methods are treated as non-reentrant. This means that &lt;code&gt;Listener&lt;/code&gt; implementations do not need to be concerned with possible recursion or the order in which they invoke &lt;code&gt;WebSocket.request&lt;/code&gt; in relation to their processing logic.</source>
          <target state="translated">&lt;code&gt;WebSocket&lt;/code&gt; から &lt;code&gt;Listener&lt;/code&gt; への呼び出しの厳密な順序は、特に、 &lt;code&gt;Listener&lt;/code&gt; のメソッドが非再入可能として扱われることを意味します。つまり、 &lt;code&gt;Listener&lt;/code&gt; 実装は、処理ロジックに関連して、再帰の可能性や &lt;code&gt;WebSocket.request&lt;/code&gt; を呼び出す順序を考慮する必要がありません。</target>
        </trans-unit>
        <trans-unit id="677e924344268647b9f4c33bebdbd774bffeedb1" translate="yes" xml:space="preserve">
          <source>The strikethrough affects both the visual bounds and the outline of the text.</source>
          <target state="translated">ストライクスルーは、視覚的な境界線とテキストのアウトラインの両方に影響を与えます。</target>
        </trans-unit>
        <trans-unit id="08ace5725b5a326d5041f65d175699034a1c1db6" translate="yes" xml:space="preserve">
          <source>The string &quot;error&quot;, a possible value for certain properties.</source>
          <target state="translated">特定のプロパティで可能な値である文字列 &quot;error&quot;。</target>
        </trans-unit>
        <trans-unit id="bfc3fe82f3ff5835f163f82fa9c6c4dba766b9ab" translate="yes" xml:space="preserve">
          <source>The string &quot;false&quot;, a possible value for certain properties.</source>
          <target state="translated">文字列 &quot;false&quot;、特定のプロパティで可能な値。</target>
        </trans-unit>
        <trans-unit id="e30c0643390c5dc7ebd25358b9755769e7551051" translate="yes" xml:space="preserve">
          <source>The string &quot;keep&quot;, a possible value for certain properties.</source>
          <target state="translated">文字列 &quot;keep&quot;、特定のプロパティで可能な値。</target>
        </trans-unit>
        <trans-unit id="1f0cf467ff107c2e23c66f6d76abd1c756e88c98" translate="yes" xml:space="preserve">
          <source>The string &quot;latest&quot;, a possible value for certain properties.</source>
          <target state="translated">文字列 &quot;latest&quot;、特定のプロパティで可能な値。</target>
        </trans-unit>
        <trans-unit id="108f1155e473064ee5869a10046f49c5f28678dc" translate="yes" xml:space="preserve">
          <source>The string &quot;pass&quot;, a possible value for certain properties.</source>
          <target state="translated">特定のプロパティで可能な値である文字列 &quot;pass&quot;。</target>
        </trans-unit>
        <trans-unit id="558ef0c8eaf4af89eed40f1773ec89e05db3ff2d" translate="yes" xml:space="preserve">
          <source>The string &quot;strip&quot;, a possible value for certain properties.</source>
          <target state="translated">特定のプロパティで可能な値である文字列 &quot;strip&quot;。</target>
        </trans-unit>
        <trans-unit id="465f99ea7628c0edb2cf953567db0aafbc5f0067" translate="yes" xml:space="preserve">
          <source>The string &quot;true&quot;, a possible value for certain properties.</source>
          <target state="translated">文字列 &quot;true &quot;は、特定のプロパティに対して可能な値です。</target>
        </trans-unit>
        <trans-unit id="22c0cd468531813dfe7dcaa04b8b2d76bff20d6f" translate="yes" xml:space="preserve">
          <source>The string &lt;a href=&quot;#ERROR&quot;&gt;&lt;code&gt;ERROR&lt;/code&gt;&lt;/a&gt; means that the pack operation as a whole will fail, with an exception of type &lt;code&gt;IOException&lt;/code&gt;. The string &lt;a href=&quot;#STRIP&quot;&gt;&lt;code&gt;STRIP&lt;/code&gt;&lt;/a&gt; means that the attribute will be dropped. The string &lt;a href=&quot;#PASS&quot;&gt;&lt;code&gt;PASS&lt;/code&gt;&lt;/a&gt; means that the whole class-file will be passed through (as if it were a resource file) without compression, with a suitable warning. This is the default value for this property.</source>
          <target state="translated">文字列&lt;a href=&quot;#ERROR&quot;&gt; &lt;code&gt;ERROR&lt;/code&gt; &lt;/a&gt;は、タイプ &lt;code&gt;IOException&lt;/code&gt; を除いて、パック操作全体が失敗することを意味します。文字列&lt;a href=&quot;#STRIP&quot;&gt; &lt;code&gt;STRIP&lt;/code&gt; &lt;/a&gt;は、属性が削除されることを意味します。文字列&lt;a href=&quot;#PASS&quot;&gt; &lt;code&gt;PASS&lt;/code&gt; &lt;/a&gt;は、適切な警告とともに、クラスファイル全体が（リソースファイルであるかのように）圧縮されずに渡されることを意味します。これは、このプロパティのデフォルト値です。</target>
        </trans-unit>
        <trans-unit id="b7d2fbb70acb3059d5c5bbd79c4294963cdbf352" translate="yes" xml:space="preserve">
          <source>The string &lt;a href=&quot;pack200.packer#ERROR&quot;&gt;&lt;code&gt;ERROR&lt;/code&gt;&lt;/a&gt; means that the pack operation as a whole will fail, with an exception of type &lt;code&gt;IOException&lt;/code&gt;. The string &lt;a href=&quot;pack200.packer#STRIP&quot;&gt;&lt;code&gt;STRIP&lt;/code&gt;&lt;/a&gt; means that the attribute will be dropped. The string &lt;a href=&quot;pack200.packer#PASS&quot;&gt;&lt;code&gt;PASS&lt;/code&gt;&lt;/a&gt; means that the whole class-file will be passed through (as if it were a resource file) without compression, with a suitable warning. This is the default value for this property.</source>
          <target state="translated">文字列&lt;a href=&quot;pack200.packer#ERROR&quot;&gt; &lt;code&gt;ERROR&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;IOException&lt;/code&gt; タイプの例外を除いて、パック操作が全体として失敗することを意味します。文字列&lt;a href=&quot;pack200.packer#STRIP&quot;&gt; &lt;code&gt;STRIP&lt;/code&gt; &lt;/a&gt;は、属性が削除されることを意味します。文字列&lt;a href=&quot;pack200.packer#PASS&quot;&gt; &lt;code&gt;PASS&lt;/code&gt; &lt;/a&gt;は、クラスファイル全体が（リソースファイルであるかのように）圧縮されずに適切な警告付きで渡されることを意味します。これは、このプロパティのデフォルト値です。</target>
        </trans-unit>
        <trans-unit id="ad02c3d243be4e9c61737e03ba9c0bf8b38dbb60" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt;, for example, yields the following results with these expressions:</source>
          <target state="translated">たとえば、文字列 &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt; は、これらの式で次の結果を生成します。</target>
        </trans-unit>
        <trans-unit id="0a75a6f894f0ae1c44cee0d9fcd6514b9f78e1dd" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt;, for example, yields the following results with these parameters:</source>
          <target state="translated">たとえば、文字列 &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt; は、これらのパラメーターを使用して次の結果を生成します。</target>
        </trans-unit>
        <trans-unit id="1565ac3867c9c20773f4cb4feb587c3d597a0245" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;precision=&quot;&lt;/code&gt;, immediately followed by the value of the precision setting as a numeric string as if generated by the &lt;a href=&quot;../lang/integer#toString(int)&quot;&gt;&lt;code&gt;Integer.toString&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">文字列 &lt;code&gt;&quot;precision=&quot;&lt;/code&gt; 直後に、&lt;a href=&quot;../lang/integer#toString(int)&quot;&gt; &lt;code&gt;Integer.toString&lt;/code&gt; &lt;/a&gt;メソッドによって生成されたかのように数値文字列として精度設定の値が続きます。</target>
        </trans-unit>
        <trans-unit id="6550e9f9888c201023a4fc7c4d06f985451147bf" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;precision=&quot;&lt;/code&gt;, immediately followed by the value of the precision setting as a numeric string as if generated by the &lt;a href=&quot;../lang/integer#toString-int-&quot;&gt;&lt;code&gt;Integer.toString&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">文字列 &lt;code&gt;&quot;precision=&quot;&lt;/code&gt; 、直後に&lt;a href=&quot;../lang/integer#toString-int-&quot;&gt; &lt;code&gt;Integer.toString&lt;/code&gt; &lt;/a&gt;メソッドで生成されたかのように数値文字列としての精度設定の値。</target>
        </trans-unit>
        <trans-unit id="62905723a8ac431fa9dccaf628bb9c07af02e5dd" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;roundingMode=&quot;&lt;/code&gt;, immediately followed by the value of the &lt;code&gt;roundingMode&lt;/code&gt; setting as a word. This word will be the same as the name of the corresponding public constant in the &lt;a href=&quot;roundingmode&quot;&gt;&lt;code&gt;RoundingMode&lt;/code&gt;&lt;/a&gt; enum.</source>
          <target state="translated">文字列 &lt;code&gt;&quot;roundingMode=&quot;&lt;/code&gt; 、直後に単語としての &lt;code&gt;roundingMode&lt;/code&gt; 設定の値。この単語は、&lt;a href=&quot;roundingmode&quot;&gt; &lt;code&gt;RoundingMode&lt;/code&gt; &lt;/a&gt;列挙型の対応するパブリック定数の名前と同じになります。</target>
        </trans-unit>
        <trans-unit id="a056f3c02b144a1272485d342c4c2a38f8a60c41" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;true&quot;&lt;/code&gt; or &lt;code&gt;&quot;false&quot;&lt;/code&gt; according as this MBean is an &lt;a href=&quot;mxbean&quot;&gt;&lt;code&gt;MXBean&lt;/code&gt;&lt;/a&gt;. A Standard MBean or MXBean registered directly with the MBean Server or created using the &lt;a href=&quot;standardmbean&quot;&gt;&lt;code&gt;StandardMBean&lt;/code&gt;&lt;/a&gt; class will have this field in its MBeanInfo Descriptor.</source>
          <target state="translated">このMBeanは&lt;a href=&quot;mxbean&quot;&gt; &lt;code&gt;MXBean&lt;/code&gt; で&lt;/a&gt;あるため、文字列 &lt;code&gt;&quot;true&quot;&lt;/code&gt; または &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。MBeanサーバーに直接登録された、または&lt;a href=&quot;standardmbean&quot;&gt; &lt;code&gt;StandardMBean&lt;/code&gt; &lt;/a&gt;クラスを使用して作成された標準MBeanまたはMXBean は、MBeanInfo記述子にこのフィールドを持ちます。</target>
        </trans-unit>
        <trans-unit id="fa3bdb340e93ffe54892a6e3894a1d8cb94a703a" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;true&quot;&lt;/code&gt; or &lt;code&gt;&quot;false&quot;&lt;/code&gt; according as this MBean's MBeanInfo is &lt;em&gt;immutable&lt;/em&gt;. When this field is true, the MBeanInfo for the given MBean is guaranteed not to change over the lifetime of the MBean. Hence, a client can read it once and cache the read value. When this field is false or absent, there is no such guarantee, although that does not mean that the MBeanInfo will necessarily change. See also the &lt;a href=&quot;mbeaninfo#info-changed&quot;&gt;&lt;code&gt;&quot;jmx.mbean.info.changed&quot;&lt;/code&gt;&lt;/a&gt; notification.</source>
          <target state="translated">このMBeanのMBeanInfoは&lt;em&gt;不変であるため&lt;/em&gt;、文字列 &lt;code&gt;&quot;true&quot;&lt;/code&gt; または &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。このフィールドがtrueの場合、指定されたMBeanのMBeanInfoは、MBeanの存続期間を通じて変更されないことが保証されます。したがって、クライアントはそれを1回読み取り、読み取った値をキャッシュできます。このフィールドがfalseまたは存在しない場合、そのような保証はありませんが、MBeanInfoが必ず変更されるわけではありません。&lt;a href=&quot;mbeaninfo#info-changed&quot;&gt; &lt;code&gt;&quot;jmx.mbean.info.changed&quot;&lt;/code&gt; &lt;/a&gt;通知も参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="58cf603470519c5b5e195c25d45c63e85fd34cc0" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;true&quot;&lt;/code&gt; or &lt;code&gt;&quot;false&quot;&lt;/code&gt; according as this item is enabled. When an attribute or operation is not enabled, it exists but cannot currently be accessed. A user interface might present it as a greyed-out item. For example, an attribute might only be meaningful after the &lt;code&gt;start()&lt;/code&gt; method of an MBean has been called, and is otherwise disabled. Likewise, a notification might be disabled if it cannot currently be emitted but could be in other circumstances.</source>
          <target state="translated">このアイテムが有効になっているため、文字列 &lt;code&gt;&quot;true&quot;&lt;/code&gt; または &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。属性または操作が有効でない場合、それは存在しますが、現在アクセスできません。ユーザーインターフェイスは、それを淡色表示のアイテムとして表示する場合があります。たとえば、属性はMBeanの &lt;code&gt;start()&lt;/code&gt; メソッドが呼び出された後にのみ意味を持ち、それ以外の場合は無効になります。同様に、現在発行されていないが他の状況にある可能性がある場合、通知は無効になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="631ed054c3067658cc3a118e7936d64f51bfad09" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;unchecked&quot;&lt;/code&gt; is used to suppress unchecked warnings. Compiler vendors should document the additional warning names they support in conjunction with this annotation type. They are encouraged to cooperate to ensure that the same names work across multiple compilers.</source>
          <target state="translated">文字列 &lt;code&gt;&quot;unchecked&quot;&lt;/code&gt; は、チェックされていない警告を抑制するために使用されます。コンパイラベンダーは、この注釈タイプとともにサポートする追加の警告名を文書化する必要があります。同じ名前が複数のコンパイラで機能するように協力することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="69491b7b47334ee084c1c31f631a979ba7599e82" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;s&lt;/code&gt; is processed from left to right, looking for data of interest. Any material in &lt;code&gt;s&lt;/code&gt; that is within the ASCII parenthesis characters &lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; is ignored. Parentheses may be nested. Otherwise, the only characters permitted within &lt;code&gt;s&lt;/code&gt; are these ASCII characters:</source>
          <target state="translated">文字列 &lt;code&gt;s&lt;/code&gt; は左から右に処理され、目的のデータを探します。ASCII括弧文字 &lt;code&gt;(&lt;/code&gt; および &lt;code&gt;)&lt;/code&gt; 内にある &lt;code&gt;s&lt;/code&gt; 内の素材はすべて無視されます。括弧は入れ子にすることができます。それ以外の場合、 &lt;code&gt;s&lt;/code&gt; 内で許可される文字は次のASCII文字のみです。</target>
        </trans-unit>
        <trans-unit id="fa07a44e85f7b0960fe0afe9cd1bc3596bb25ceb" translate="yes" xml:space="preserve">
          <source>The string NULL (not enclosed in quotes) - if NULL was specified as the default value</source>
          <target state="translated">文字列 NULL (引用符で囲まれていない)-デフォルト値として NULL が指定されている場合</target>
        </trans-unit>
        <trans-unit id="919c5615e88a8576efe725aa5581160688478bfe" translate="yes" xml:space="preserve">
          <source>The string attribute values are not interpreted as &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; formatted RDN strings. That is, the values are used literally (not parsed) and assumed to be unescaped.</source>
          <target state="translated">文字列属性値は、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;形式のRDN文字列として解釈されません。つまり、値は文字どおりに（解析されずに）使用され、エスケープされていないと見なされます。</target>
        </trans-unit>
        <trans-unit id="fad0ec093c3f0998c8bdd918a0718e5eab967d10" translate="yes" xml:space="preserve">
          <source>The string constructed by replacing each matching subsequence by the replacement string, substituting captured subsequences as needed</source>
          <target state="translated">各マッチする部分集合を置換文字列で置き換え、必要に応じて捕捉された部分集合を置換することで構築された文字列</target>
        </trans-unit>
        <trans-unit id="afda6d3703500c7f92e7b1f7f59b56df33958ed8" translate="yes" xml:space="preserve">
          <source>The string constructed by replacing each matching subsequence with the result of applying the replacer function to that matched subsequence, substituting captured subsequences as needed.</source>
          <target state="translated">必要に応じてキャプチャされた部分集合を置換し、そのマッチした部分集合にリプレッサー関数を適用した結果で各マッチした部分集合を置き換えることで構築された文字列。</target>
        </trans-unit>
        <trans-unit id="c64ffe780cf31db4996cccb5e0b7a94f8f71ac12" translate="yes" xml:space="preserve">
          <source>The string constructed by replacing the first matching subsequence by the replacement string, substituting captured subsequences as needed</source>
          <target state="translated">最初のマッチする部分集合を置換文字列で置き換え、必要に応じて捕捉された部分集合を置換することで構築される文字列</target>
        </trans-unit>
        <trans-unit id="e0bec6f730c0449ee38f585e3dde0d82f697b3cb" translate="yes" xml:space="preserve">
          <source>The string constructed by replacing the first matching subsequence with the result of applying the replacer function to the matched subsequence, substituting captured subsequences as needed.</source>
          <target state="translated">必要に応じてキャプチャされた部分文を置換し、マッチした部分文にリプレッサー関数を適用した結果で、最初のマッチした部分文を置き換えることで構築された文字列。</target>
        </trans-unit>
        <trans-unit id="57510220bfaf470419bb00af78884a6462f36070" translate="yes" xml:space="preserve">
          <source>The string containing the version of the module if recorded at compile-time, or an empty &lt;code&gt;Optional&lt;/code&gt; if no version was recorded</source>
          <target state="translated">コンパイル時に記録された場合はモジュールのバージョンを含む文字列、バージョンが記録されなかった場合は空の &lt;code&gt;Optional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a584ad3952c728ec28d3c26b8f0d57ad4cd86d7a" translate="yes" xml:space="preserve">
          <source>The string containing the version of the module or an empty &lt;code&gt;Optional&lt;/code&gt; if the module does not have a version</source>
          <target state="translated">モジュールのバージョンを含む文字列、またはモジュールにバージョンがない場合は空の &lt;code&gt;Optional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c31beff83674da5e332dc00712cbbbdd5562206f" translate="yes" xml:space="preserve">
          <source>The string form of the compound name follows the syntax described above. When the components of the compound name are turned into their string representation, the reserved syntax rules described above are applied (e.g. embedded separators are escaped or quoted) so that when the same string is parsed, it will yield the same components of the original compound name.</source>
          <target state="translated">複合名の文字列形式は、上述の構文に従います。複合名の構成要素を文字列表現に変換する際には、上記で説明した予約構文ルールが適用されます (例えば、埋め込みセパレータはエスケープされたり、引用符で囲まれたりします)。</target>
        </trans-unit>
        <trans-unit id="f10938b9c9c0c8797b9503b58353064a7df27786" translate="yes" xml:space="preserve">
          <source>The string form of this URI</source>
          <target state="translated">このURIの文字列形式</target>
        </trans-unit>
        <trans-unit id="2fdc4bee66cbffe9f8926f8d8bb6b3ff409dbcc9" translate="yes" xml:space="preserve">
          <source>The string form of this URI, encoded as needed so that it only contains characters in the US-ASCII charset</source>
          <target state="translated">US-ASCII文字セットの文字のみを含むように必要に応じてエンコードされたこのURIの文字列形式。</target>
        </trans-unit>
        <trans-unit id="04761903fd7cc565bcc1b3b493f9a4d9ad183aaa" translate="yes" xml:space="preserve">
          <source>The string form of this abstract pathname</source>
          <target state="translated">この抽象パス名の文字列形式</target>
        </trans-unit>
        <trans-unit id="a6a48b95d9bb03c06186693a1e56c1d93fae2d7c" translate="yes" xml:space="preserve">
          <source>The string from which bytes are read.</source>
          <target state="translated">バイトが読み込まれる文字列。</target>
        </trans-unit>
        <trans-unit id="63b46307980099765e658cf440f0d03747b95b05" translate="yes" xml:space="preserve">
          <source>The string from which this version was parsed.</source>
          <target state="translated">このバージョンが解析された文字列。</target>
        </trans-unit>
        <trans-unit id="b6724bb79c3c33d31e86e0f46c7de30b21951061" translate="yes" xml:space="preserve">
          <source>The string is between 1 and 128 characters in length inclusive</source>
          <target state="translated">文字列の長さは1~128文字です。</target>
        </trans-unit>
        <trans-unit id="15fa0640f7a89ad0499dc7372318874d0f8a6949" translate="yes" xml:space="preserve">
          <source>The string is not enclosed in double quotes</source>
          <target state="translated">文字列は二重引用符で囲まれていません</target>
        </trans-unit>
        <trans-unit id="2361fc0fcc98f34cf7707bd58c3a48311a40b445" translate="yes" xml:space="preserve">
          <source>The string must match exactly the name of the era. (Extraneous whitespace characters are not permitted.)</source>
          <target state="translated">文字列は、時代の名前と正確に一致しなければなりません。(空白文字は使用できません)。</target>
        </trans-unit>
        <trans-unit id="528b474b80585c5bde4792fd2aaffc2f3fc1d745" translate="yes" xml:space="preserve">
          <source>The string must represent a valid date and is parsed using &lt;a href=&quot;format/datetimeformatter#ISO_LOCAL_DATE&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_LOCAL_DATE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列は有効な日付を表す必要があり、&lt;a href=&quot;format/datetimeformatter#ISO_LOCAL_DATE&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_LOCAL_DATE&lt;/code&gt; &lt;/a&gt;を使用して解析されます。</target>
        </trans-unit>
        <trans-unit id="a92bea7fe20a26d29fc02f1b18cfeb4a64f2befc" translate="yes" xml:space="preserve">
          <source>The string must represent a valid date-time and is parsed using &lt;a href=&quot;format/datetimeformatter#ISO_LOCAL_DATE_TIME&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_LOCAL_DATE_TIME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列は有効な日時を表す必要があり、&lt;a href=&quot;format/datetimeformatter#ISO_LOCAL_DATE_TIME&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_LOCAL_DATE_TIME&lt;/code&gt; &lt;/a&gt;を使用して解析されます。</target>
        </trans-unit>
        <trans-unit id="9546955f3024f065c5daeea861e41048af02e3a1" translate="yes" xml:space="preserve">
          <source>The string must represent a valid date-time and is parsed using &lt;a href=&quot;format/datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列は有効な日時を表す必要があり、&lt;a href=&quot;format/datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;を使用して解析されます。</target>
        </trans-unit>
        <trans-unit id="ea655be45604489e8a988f1f62775445f297e35d" translate="yes" xml:space="preserve">
          <source>The string must represent a valid date-time and is parsed using &lt;a href=&quot;format/datetimeformatter#ISO_ZONED_DATE_TIME&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_ZONED_DATE_TIME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列は有効な日時を表す必要があり、&lt;a href=&quot;format/datetimeformatter#ISO_ZONED_DATE_TIME&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_ZONED_DATE_TIME&lt;/code&gt; &lt;/a&gt;を使用して解析されます。</target>
        </trans-unit>
        <trans-unit id="b639943db6958d9063503c47072cf422d9417cda" translate="yes" xml:space="preserve">
          <source>The string must represent a valid instant in UTC and is parsed using &lt;a href=&quot;format/datetimeformatter#ISO_INSTANT&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_INSTANT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列はUTCで有効なインスタントを表す必要があり、&lt;a href=&quot;format/datetimeformatter#ISO_INSTANT&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_INSTANT&lt;/code&gt; &lt;/a&gt;を使用して解析されます。</target>
        </trans-unit>
        <trans-unit id="5d2f552261c78dde5773d5eb748ea70d7ae99393" translate="yes" xml:space="preserve">
          <source>The string must represent a valid month-day. The format is &lt;code&gt;--MM-dd&lt;/code&gt;.</source>
          <target state="translated">文字列は有効な月日を表す必要があります。形式は &lt;code&gt;--MM-dd&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0f5fc471abeddd2fc10059070b03a26ea0e4f0e6" translate="yes" xml:space="preserve">
          <source>The string must represent a valid time and is parsed using &lt;a href=&quot;format/datetimeformatter#ISO_LOCAL_TIME&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_LOCAL_TIME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列は有効な時間を表す必要があり、&lt;a href=&quot;format/datetimeformatter#ISO_LOCAL_TIME&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_LOCAL_TIME&lt;/code&gt; &lt;/a&gt;を使用して解析されます。</target>
        </trans-unit>
        <trans-unit id="4834d95eb10fdeb7855ef1f3b7f1815cd5f315de" translate="yes" xml:space="preserve">
          <source>The string must represent a valid time and is parsed using &lt;a href=&quot;format/datetimeformatter#ISO_OFFSET_TIME&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_OFFSET_TIME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列は有効な時間を表す必要があり、&lt;a href=&quot;format/datetimeformatter#ISO_OFFSET_TIME&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_OFFSET_TIME&lt;/code&gt; &lt;/a&gt;を使用して解析されます。</target>
        </trans-unit>
        <trans-unit id="522d37a5cb0dea2932c0223382f776eae3acb124" translate="yes" xml:space="preserve">
          <source>The string must represent a valid year-month. The format must be &lt;code&gt;uuuu-MM&lt;/code&gt;. Years outside the range 0000 to 9999 must be prefixed by the plus or minus symbol.</source>
          <target state="translated">文字列は有効な年月を表す必要があります。形式は &lt;code&gt;uuuu-MM&lt;/code&gt; でなければなりません。0000から9999の範囲外の年には、プラス記号またはマイナス記号を前に付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="68fe36aa287218182684aa7a85b5b9b1977bc3ca" translate="yes" xml:space="preserve">
          <source>The string must represent a valid year. Years outside the range 0000 to 9999 must be prefixed by the plus or minus symbol.</source>
          <target state="translated">文字列は有効な年を表す必要があります。0000から9999の範囲外の年は、プラスまたはマイナスの記号を前に付けなければなりません。</target>
        </trans-unit>
        <trans-unit id="137a5254a87fa6e0ce4c1568f6ddf435ae99c22b" translate="yes" xml:space="preserve">
          <source>The string only contains alphanumeric characters or the character &quot;_&quot;</source>
          <target state="translated">文字列には英数字または文字 &quot;_&quot; のみが含まれます。</target>
        </trans-unit>
        <trans-unit id="abbf179f85853b351778a26629eb5657fc8e8fab" translate="yes" xml:space="preserve">
          <source>The string produced for a given number is always the same; it is not affected by locale. This means that it can be used as a canonical string representation for exchanging decimal data, or as a key for a Hashtable, etc. Locale-sensitive number formatting and parsing is handled by the &lt;a href=&quot;../text/numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; class and its subclasses.</source>
          <target state="translated">指定された数値に対して生成される文字列は常に同じです。ロケールの影響を受けません。これは、10進データを交換するための正規の文字列表現として、またはHashtableなどのキーとして使用できることを意味します。ロケールに依存する数値のフォーマットと解析は、&lt;a href=&quot;../text/numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt;クラスとそのサブクラスによって処理されます。</target>
        </trans-unit>
        <trans-unit id="3fe8bf77d08eee400f8eacfe6cb5d936ae0a4f48" translate="yes" xml:space="preserve">
          <source>The string representation consists of a list of the array's elements, enclosed in square brackets (&lt;code&gt;&quot;[]&quot;&lt;/code&gt;). Adjacent elements are separated by the characters &lt;code&gt;&quot;, &quot;&lt;/code&gt; (a comma followed by a space). Elements are converted to strings as by &lt;code&gt;String.valueOf(Object)&lt;/code&gt;, unless they are themselves arrays.</source>
          <target state="translated">文字列表現は、角括弧（ &lt;code&gt;&quot;[]&quot;&lt;/code&gt; ）で囲まれた配列の要素のリストで構成されます。隣接する要素は、文字 &lt;code&gt;&quot;, &quot;&lt;/code&gt; （コンマの後にスペースが続く）で区切られます。要素自体が配列でない限り、要素は &lt;code&gt;String.valueOf(Object)&lt;/code&gt; によって文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="3b44741f71d142966f86ccc32acede59a84d445d" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of the implementing class, and the tabular type of this instance.</source>
          <target state="translated">文字列表現は、実装クラスの名前と、このインスタンスの表形式で構成されます。</target>
        </trans-unit>
        <trans-unit id="53d83a239c2a7be1cb8fe5f1423384d5522b995b" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of the implementing class, the string representation of the composite type of this instance, and the string representation of the contents (ie list the itemName=itemValue mappings).</source>
          <target state="translated">文字列表現は、実装クラスの名前、このインスタンスの複合型の文字列表現、およびコンテンツの文字列表現から構成されます(つまり、itemName=itemValueのマッピングをリストアップします)。</target>
        </trans-unit>
        <trans-unit id="9ce6c605327807271ff809bf8c3e33f72c8d71fb" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (i.e. &lt;code&gt;javax.management.openmbean.ArrayType&lt;/code&gt;), the type name, the dimension, the elements' open type and the primitive array flag defined for this instance.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.ArrayType&lt;/code&gt; ）、型名、次元、要素の公開型、およびこのインスタンスに定義されたプリミティブ配列フラグで構成されます。</target>
        </trans-unit>
        <trans-unit id="2883eec75a628ef99c332dc7e2aaea10651f3902" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (i.e. &lt;code&gt;javax.management.openmbean.OpenMBeanAttributeInfoSupport&lt;/code&gt;), the string representation of the name and open type of the described parameter, the string representation of its default, min, max and legal values and the string representation of its descriptor.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanAttributeInfoSupport&lt;/code&gt; ）、名前の文字列表現、および記述されたパラメータのオープンタイプ、そのデフォルトの文字列表現、最小値、最大値、有効な値、およびその記述子の文字列表現。</target>
        </trans-unit>
        <trans-unit id="8a2464b0766b9e81e51253aa84918715aa0cd068" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (i.e. &lt;code&gt;javax.management.openmbean.OpenMBeanParameterInfoSupport&lt;/code&gt;), the string representation of the name and open type of the described parameter, the string representation of its default, min, max and legal values and the string representation of its descriptor.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanParameterInfoSupport&lt;/code&gt; ）、説明されたパラメータの名前とオープンタイプの文字列表現、デフォルトの文字列表現、最小値、最大値、および正当な値と、その記述子の文字列表現。</target>
        </trans-unit>
        <trans-unit id="4d29a8e6e5f83180a9a2655eeeb086d4d8e9f13e" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;
 javax.management.openmbean.OpenMBeanConstructorInfoSupport&lt;/code&gt;), the name and signature of the described constructor and the string representation of its descriptor.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt; javax.management.openmbean.OpenMBeanConstructorInfoSupport&lt;/code&gt; ）、記述されたコンストラクターの名前と署名、およびその記述子の文字列表現で構成されます。</target>
        </trans-unit>
        <trans-unit id="ac01ca9000354d194b07d70a4e1b8028f60f9f3e" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;
 javax.management.openmbean.OpenMBeanOperationInfoSupport&lt;/code&gt;), and the name, signature, return open type and impact of the described operation and the string representation of its descriptor.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt; javax.management.openmbean.OpenMBeanOperationInfoSupport&lt;/code&gt; ）、名前、署名、戻り値のオープンタイプ、記述された操作の影響、およびその記述子の文字列表現で構成されます。</target>
        </trans-unit>
        <trans-unit id="9b6002a9339d22eed93f555f1481a07a002e5091" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.CompositeDataSupport&lt;/code&gt;), the string representation of the composite type of this instance, and the string representation of the contents (ie list the itemName=itemValue mappings).</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり &lt;code&gt;javax.management.openmbean.CompositeDataSupport&lt;/code&gt; ）、このインスタンスの複合型の文字列表現、およびコンテンツの文字列表現（つまり、itemName = itemValueマッピングのリスト）で構成されます。</target>
        </trans-unit>
        <trans-unit id="789eed41269dc56a9082ac2a97089c1d128afaf4" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.CompositeType&lt;/code&gt;), the type name for this instance, and the list of the items names and types string representation of this instance.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.CompositeType&lt;/code&gt; ）、このインスタンスのタイプ名、およびこのインスタンスのアイテム名とタイプの文字列表現のリストで構成されます。</target>
        </trans-unit>
        <trans-unit id="a4e6ec5ac6aa3e0627edbc16f7c6430eb6a8d1d8" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanAttributeInfo&lt;/code&gt;), the string representation of the name and open type of the described attribute, and the string representation of its default, min, max and legal values.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanAttributeInfo&lt;/code&gt; ）、説明された属性の名前とオープンタイプの文字列表現、およびそのデフォルト、最小、最大、有効な値の文字列表現で構成されます。</target>
        </trans-unit>
        <trans-unit id="d7b716744f9ffc637689b371f05e304eff7af2a9" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanConstructorInfo&lt;/code&gt;), and the name and signature of the described constructor.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanConstructorInfo&lt;/code&gt; ）と、記述されたコンストラクタの名前とシグネチャで構成されます。</target>
        </trans-unit>
        <trans-unit id="6ad27ad5ebd129c3ea4d4956977533104d272e95" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanConstructorInfoSupport&lt;/code&gt;), the name and signature of the described constructor and the string representation of its descriptor.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanConstructorInfoSupport&lt;/code&gt; ）、記述されたコンストラクタの名前と署名、およびその記述子の文字列表現で構成されます。</target>
        </trans-unit>
        <trans-unit id="56f0f9a9629656eb5921de1b1b2280b717218bf7" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanInfo&lt;/code&gt;), the MBean class name, and the string representation of infos on attributes, constructors, operations and notifications of the described MBean.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanInfo&lt;/code&gt; ）、MBeanクラス名、および記述されたMBeanの属性、コンストラクタ、操作、通知に関する情報の文字列表現で構成されます。</target>
        </trans-unit>
        <trans-unit id="f9d79b194f6330817e69226b3c9fd464f3f27be2" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanInfoSupport&lt;/code&gt;), the MBean class name, the string representation of infos on attributes, constructors, operations and notifications of the described MBean and the string representation of the descriptor.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanInfoSupport&lt;/code&gt; ）、MBeanクラス名、属性に関する情報の文字列表現、コンストラクタ、操作、および記述されたMBeanの通知、および記述子の文字列表現で構成されます。 。</target>
        </trans-unit>
        <trans-unit id="4ab6a7c24f824a223fbd8a3831c0c3e6970b8c12" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanOperationInfo&lt;/code&gt;), and the name, signature, return open type and impact of the described operation.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanOperationInfo&lt;/code&gt; ）と、名前、シグネチャ、戻り値のオープンタイプ、および説明されている操作の影響で構成されます。</target>
        </trans-unit>
        <trans-unit id="640c583f5e5f932dc18d233947e5f9f45c18d88c" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanOperationInfoSupport&lt;/code&gt;), and the name, signature, return open type and impact of the described operation and the string representation of its descriptor.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanOperationInfoSupport&lt;/code&gt; ）と、名前、シグネチャ、返される公開タイプ、および説明されている操作の影響とその記述子の文字列表現で構成されます。</target>
        </trans-unit>
        <trans-unit id="56372f3341ed9c622ba1dff09dfa80ed9847d82f" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanParameterInfo&lt;/code&gt;), the string representation of the name and open type of the described parameter, and the string representation of its default, min, max and legal values.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanParameterInfo&lt;/code&gt; ）、説明されたパラメータの名前とオープンタイプの文字列表現、およびそのデフォルト、最小、最大、および正当な値の文字列表現で構成されます。</target>
        </trans-unit>
        <trans-unit id="5e847596a7e03c71180c8216bb4f964ac80c8ce4" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.SimpleType&lt;/code&gt;) and the type name for this instance (which is the java class name of the values this &lt;code&gt;SimpleType&lt;/code&gt; instance represents).</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.SimpleType&lt;/code&gt; ）とこのインスタンスの型名（この &lt;code&gt;SimpleType&lt;/code&gt; インスタンスが表す値のJavaクラス名）で構成されます。</target>
        </trans-unit>
        <trans-unit id="cdd41d530879d983b77fc6d88438a6e273a7cdec" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.TabularDataSupport&lt;/code&gt;), the string representation of the tabular type of this instance, and the string representation of the contents (ie list the key=value mappings as returned by a call to &lt;code&gt;dataMap.&lt;/code&gt;&lt;a href=&quot;../../../../java.base/java/util/abstractmap#toString()&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.TabularDataSupport&lt;/code&gt; ）、このインスタンスの表形式の文字列表現、およびコンテンツの文字列表現（つまり、によって返されるkey = valueマッピングのリスト）で構成されます。 &lt;code&gt;dataMap.&lt;/code&gt; 呼び出し。toString &lt;a href=&quot;../../../../java.base/java/util/abstractmap#toString()&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="574dc6c379e8e51bf167c7fea2d4d1304ca21c2f" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.TabularDataSupport&lt;/code&gt;), the string representation of the tabular type of this instance, and the string representation of the contents (ie list the key=value mappings as returned by a call to &lt;code&gt;dataMap.&lt;/code&gt;&lt;a href=&quot;../../../java/util/abstractmap#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり &lt;code&gt;javax.management.openmbean.TabularDataSupport&lt;/code&gt; ）、このインスタンスの表形式の文字列表現、および内容の文字列表現（つまり、 &lt;code&gt;dataMap.&lt;/code&gt; &lt;a href=&quot;../../../java/util/abstractmap#toString--&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt;）への呼び出し。</target>
        </trans-unit>
        <trans-unit id="807fbdd5da5244bfb18ce040224682952e87d826" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.TabularType&lt;/code&gt;), the type name for this instance, the row type string representation of this instance, and the index names of this instance.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.TabularType&lt;/code&gt; ）、このインスタンスの型名、このインスタンスの行型文字列表現、およびこのインスタンスのインデックス名で構成されています。</target>
        </trans-unit>
        <trans-unit id="fbc5fe65d5ab420dbf5b6b9fae291dad1f8925ed" translate="yes" xml:space="preserve">
          <source>The string representation for this &lt;code&gt;X500Principal&lt;/code&gt; can be obtained by calling the &lt;code&gt;getName&lt;/code&gt; methods.</source>
          <target state="translated">この &lt;code&gt;X500Principal&lt;/code&gt; の文字列表現は、 &lt;code&gt;getName&lt;/code&gt; メソッドを呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="cfa9c547b94d4a8505b4496d10852764a147d91f" translate="yes" xml:space="preserve">
          <source>The string representation may not have any leading and trailing whitespaces.</source>
          <target state="translated">文字列表現は、先頭と末尾に空白があってはいけません。</target>
        </trans-unit>
        <trans-unit id="6b612d9c02babd7e1408d7e8d784cf99d9d55260" translate="yes" xml:space="preserve">
          <source>The string representation of the LdapName.</source>
          <target state="translated">LdapNameの文字列表現。</target>
        </trans-unit>
        <trans-unit id="a420c385cddda341e69db0764ebb091c11a4a7be" translate="yes" xml:space="preserve">
          <source>The string representation of the Rdn.</source>
          <target state="translated">Rdnの文字列表現。</target>
        </trans-unit>
        <trans-unit id="06141090c2bbeee203d15ec52d1050014ee8d75b" translate="yes" xml:space="preserve">
          <source>The string representation of the attribute.</source>
          <target state="translated">属性の文字列表現。</target>
        </trans-unit>
        <trans-unit id="acdd753dd59a9a0afe3c3ebf5bba1d1c8f5326bd" translate="yes" xml:space="preserve">
          <source>The string representation of the attribute. This should exactly match the string specified in the CSS specification.</source>
          <target state="translated">属性の文字列表現。これは CSS 仕様で指定された文字列と正確に一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="6de482475e09c2eeff30bcc77f9f20ef06b16b86" translate="yes" xml:space="preserve">
          <source>The string representation of this SearchResult. Cannot be null.</source>
          <target state="translated">この SearchResult の文字列表現。nullにすることはできません。</target>
        </trans-unit>
        <trans-unit id="9095c816b4ff2b939ed38e5ec4c8dd104708dcc0" translate="yes" xml:space="preserve">
          <source>The string representation of this Service URL.</source>
          <target state="translated">このサービス URL の文字列表現。</target>
        </trans-unit>
        <trans-unit id="19b1dc6e3c56c1f7d2c94a2810b048ff86117b35" translate="yes" xml:space="preserve">
          <source>The string representation of this Service URL. If the value returned by this method is supplied to the &lt;code&gt;JMXServiceURL&lt;/code&gt; constructor, the resultant object is equal to this one.</source>
          <target state="translated">このサービスURLの文字列表現。このメソッドによって返される値が &lt;code&gt;JMXServiceURL&lt;/code&gt; コンストラクターに提供される場合、結果のオブジェクトはこれと同じになります。</target>
        </trans-unit>
        <trans-unit id="06f159652db61335f5666a5cf825b7a69627ed8c" translate="yes" xml:space="preserve">
          <source>The string representation of this exception consists of information about where the error occurred, and the first unexecuted modification.</source>
          <target state="translated">この例外の文字列表現は、エラーが発生した場所に関する情報と、最初に実行されなかった修正から構成されます。</target>
        </trans-unit>
        <trans-unit id="16f1d37b61e149769d5bb45d2d6b123bd696fbda" translate="yes" xml:space="preserve">
          <source>The string representation of this exception consists of information about where the error occurred, and the first unexecuted modification. This string is meant for debugging and not mean to be interpreted programmatically.</source>
          <target state="translated">この例外の文字列表現は、エラーが発生した場所と、最初に実行されなかった修正に関する情報で構成されています。この文字列はデバッグ用であり、プログラム的に解釈されることを意図したものではありません。</target>
        </trans-unit>
        <trans-unit id="c7de16e9df6affa420db9ce81302405c1dfefd55" translate="yes" xml:space="preserve">
          <source>The string representation of this matcher</source>
          <target state="translated">このマッチャの文字列表現</target>
        </trans-unit>
        <trans-unit id="bb74ce786b3d545de3a84f33214617b02d5c2940" translate="yes" xml:space="preserve">
          <source>The string representation of this module</source>
          <target state="translated">このモジュールの文字列表現</target>
        </trans-unit>
        <trans-unit id="09eba65afc610d538d65c263d07c4a3212fcfe45" translate="yes" xml:space="preserve">
          <source>The string representation of this name/class pair.</source>
          <target state="translated">この名前とクラスのペアの文字列表現。</target>
        </trans-unit>
        <trans-unit id="053f914091e9887aaa58bf39744d8861af29fc0d" translate="yes" xml:space="preserve">
          <source>The string representation of this pattern</source>
          <target state="translated">このパターンの文字列表現</target>
        </trans-unit>
        <trans-unit id="c2acdbf9130b5c1f31215890014846c808d3f0b0" translate="yes" xml:space="preserve">
          <source>The string representation of this scanner</source>
          <target state="translated">このスキャナの文字列表現</target>
        </trans-unit>
        <trans-unit id="f450b24ffb7d9483210505aa1ae5491f8f1973d0" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;#getRawAuthority()&quot;&gt;&lt;code&gt;getRawAuthority&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;#getRawAuthority()&quot;&gt; &lt;code&gt;getRawAuthority&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="17b139befffb2c60f26b6e3ef4ef71139b888633" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;#getRawFragment()&quot;&gt;&lt;code&gt;getRawFragment&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;#getRawFragment()&quot;&gt; &lt;code&gt;getRawFragment&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="d13f16b94787c0c530d775e02f176898aa8709aa" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;#getRawPath()&quot;&gt;&lt;code&gt;getRawPath&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;#getRawPath()&quot;&gt; &lt;code&gt;getRawPath&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="49ceecc3a0a7b0c628428ecb824a9a4733fe10bc" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;#getRawQuery()&quot;&gt;&lt;code&gt;getRawQuery&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;#getRawQuery()&quot;&gt; &lt;code&gt;getRawQuery&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="950adaee23e256f95ac7d75c80da01a153533597" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;#getRawSchemeSpecificPart()&quot;&gt;&lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;#getRawSchemeSpecificPart()&quot;&gt; &lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="da24186777164723ddd293bab7dd828e99e48a24" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;#getRawUserInfo()&quot;&gt;&lt;code&gt;getRawUserInfo&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;#getRawUserInfo()&quot;&gt; &lt;code&gt;getRawUserInfo&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="0428783f6a2a4ed333a95d1448a2bc32086c9f46" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;uri#getRawAuthority--&quot;&gt;&lt;code&gt;getRawAuthority&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;uri#getRawAuthority--&quot;&gt; &lt;code&gt;getRawAuthority&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="99f4ef96c814a7c3937663953ec5ac06f173ebb2" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;uri#getRawFragment--&quot;&gt;&lt;code&gt;getRawFragment&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;uri#getRawFragment--&quot;&gt; &lt;code&gt;getRawFragment&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="a732cb50bbec78c973952b48ad9babe398c8380c" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;uri#getRawPath--&quot;&gt;&lt;code&gt;getRawPath&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;uri#getRawPath--&quot;&gt; &lt;code&gt;getRawPath&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="ddd6a70f437a36a8a334d3aa1a18560bd5c5720e" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;uri#getRawQuery--&quot;&gt;&lt;code&gt;getRawQuery&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;uri#getRawQuery--&quot;&gt; &lt;code&gt;getRawQuery&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="bc1a87d2cf19c437c64a305afdb85f728af90351" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;uri#getRawSchemeSpecificPart--&quot;&gt;&lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープオクテットのすべてのシーケンスが&lt;a href=&quot;#decode&quot;&gt;デコードさ&lt;/a&gt;れることを除いて、&lt;a href=&quot;uri#getRawSchemeSpecificPart--&quot;&gt; &lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="fc4374f3d0ad6e121222206c9e637bf592e8f4f3" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;uri#getRawUserInfo--&quot;&gt;&lt;code&gt;getRawUserInfo&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;uri#getRawUserInfo--&quot;&gt; &lt;code&gt;getRawUserInfo&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="15003a859c5ec3a6cdfdb74230384f43324ebc22" translate="yes" xml:space="preserve">
          <source>The string returned by this method is not a JNDI composite name and should not be passed directly to context methods.</source>
          <target state="translated">このメソッドが返す文字列はJNDIの合成名ではなく、コンテキストメソッドに直接渡すべきではありません。</target>
        </trans-unit>
        <trans-unit id="720d46b0678e4b58ffd12635e35e8f669c782484" translate="yes" xml:space="preserve">
          <source>The string returned by this method may differ from the string returned by the &lt;a href=&quot;../../lang/object#toString()&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドによって返される文字列は、&lt;a href=&quot;../../lang/object#toString()&quot;&gt; &lt;code&gt;toString&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列とは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="f2d86e2c12a8b526574d8ed3d4f0ad084aa1496f" translate="yes" xml:space="preserve">
          <source>The string returned by this method may differ from the string returned by the &lt;a href=&quot;../../lang/object#toString--&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドによって返される文字列は、&lt;a href=&quot;../../lang/object#toString--&quot;&gt; &lt;code&gt;toString&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="edba6dbdeab519bfb2488ac8fa5d24d1d5096a05" translate="yes" xml:space="preserve">
          <source>The string returned is made of the text content of this node depending on its type, as defined below:</source>
          <target state="translated">返される文字列は、以下に定義されるように、このノードの型に応じたテキスト内容で構成されています。</target>
        </trans-unit>
        <trans-unit id="a98b16691a6548a5f40d785a69cfe7819a08aa9f" translate="yes" xml:space="preserve">
          <source>The string starts with an optional sign, denoted by the ASCII negative or positive symbol. If negative, the whole period is negated. The ASCII letter &quot;P&quot; is next in upper or lower case. There are then four sections, each consisting of a number and a suffix. At least one of the four sections must be present. The sections have suffixes in ASCII of &quot;Y&quot;, &quot;M&quot;, &quot;W&quot; and &quot;D&quot; for years, months, weeks and days, accepted in upper or lower case. The suffixes must occur in order. The number part of each section must consist of ASCII digits. The number may be prefixed by the ASCII negative or positive symbol. The number must parse to an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">文字列はオプションの符号で始まり、ASCIIの負または正の記号で示されます。負の場合、期間全体が否定されます。 ASCII文字「P」は、大文字または小文字で次にあります。次に、4つのセクションがあり、それぞれ番号とサフィックスで構成されています。 4つのセクションのうち少なくとも1つが存在する必要があります。セクションには、年、月、週、日を表す「Y」、「M」、「W」、および「D」のASCIIのサフィックスがあり、大文字または小文字で受け入れられます。接尾辞は順番に出現する必要があります。各セクションの番号部分は、ASCII数字で構成する必要があります。番号の前には、ASCIIの負または正の記号を付けることができます。数値は &lt;code&gt;int&lt;/code&gt; に解析される必要があります。</target>
        </trans-unit>
        <trans-unit id="d0a3cf68706224b4e1564938792fbbb36cb2a5f2" translate="yes" xml:space="preserve">
          <source>The string starts with an optional sign, denoted by the ASCII negative or positive symbol. If negative, the whole period is negated. The ASCII letter &quot;P&quot; is next in upper or lower case. There are then four sections, each consisting of a number and a suffix. The sections have suffixes in ASCII of &quot;D&quot;, &quot;H&quot;, &quot;M&quot; and &quot;S&quot; for days, hours, minutes and seconds, accepted in upper or lower case. The suffixes must occur in order. The ASCII letter &quot;T&quot; must occur before the first occurrence, if any, of an hour, minute or second section. At least one of the four sections must be present, and if &quot;T&quot; is present there must be at least one section after the &quot;T&quot;. The number part of each section must consist of one or more ASCII digits. The number may be prefixed by the ASCII negative or positive symbol. The number of days, hours and minutes must parse to a &lt;code&gt;long&lt;/code&gt;. The number of seconds must parse to a &lt;code&gt;long&lt;/code&gt; with optional fraction. The decimal point may be either a dot or a comma. The fractional part may have from zero to 9 digits.</source>
          <target state="translated">文字列は、ASCIIの負または正の記号で示されるオプションの記号で始まります。負の場合、期間全体が否定されます。次に、ASCII文字「P」が大文字または小文字で表示されます。その場合、4つのセクションがあり、それぞれが数字と接尾辞で構成されます。セクションには、ASCIIで「D」、「H」、「M」、「S」の接尾辞があり、日、時間、分、秒が大文字または小文字で使用できます。接尾辞は順番に出現する必要があります。 ASCII文字「T」は、時間、分、または2番目のセクションが最初に出現する場合はその前に出現する必要があります。 4つのセクションの少なくとも1つが存在する必要があり、「T」が存在する場合は、「T」の後に少なくとも1つのセクションが存在する必要があります。各セクションの数字部分は、1つ以上のASCII数字で構成されている必要があります。番号の前には、ASCIIの負または正の記号を付けることができます。日、時間、分を解析する必要がある数 &lt;code&gt;long&lt;/code&gt; 。秒数は、オプションの小数部を使用して &lt;code&gt;long&lt;/code&gt; に解析する必要があります。小数点はドットまたはコンマのいずれかです。小数部分は0から9桁まで持つことができます。</target>
        </trans-unit>
        <trans-unit id="89a747d82990c6aea3987f68f6f2f3b3b15c1eff" translate="yes" xml:space="preserve">
          <source>The string starts with an optional sign, denoted by the ASCII negative or positive symbol. If negative, the whole period is negated. The ASCII letter &quot;P&quot; is next in upper or lower case. There are then four sections, each consisting of a number and a suffix. The sections have suffixes in ASCII of &quot;D&quot;, &quot;H&quot;, &quot;M&quot; and &quot;S&quot; for days, hours, minutes and seconds, accepted in upper or lower case. The suffixes must occur in order. The ASCII letter &quot;T&quot; must occur before the first occurrence, if any, of an hour, minute or second section. At least one of the four sections must be present, and if &quot;T&quot; is present there must be at least one section after the &quot;T&quot;. The number part of each section must consist of one or more ASCII digits. The number may be prefixed by the ASCII negative or positive symbol. The number of days, hours and minutes must parse to an &lt;code&gt;long&lt;/code&gt;. The number of seconds must parse to an &lt;code&gt;long&lt;/code&gt; with optional fraction. The decimal point may be either a dot or a comma. The fractional part may have from zero to 9 digits.</source>
          <target state="translated">文字列はオプションの符号で始まり、ASCIIの負または正の記号で示されます。負の場合、期間全体が否定されます。 ASCII文字「P」は、大文字または小文字で次にあります。次に、4つのセクションがあり、それぞれ番号とサフィックスで構成されています。セクションには、日、時、分、秒の「D」、「H」、「M」、および「S」のASCIIのサフィックスがあり、大文字または小文字で受け入れられます。接尾辞は順番に出現する必要があります。 ASCII文字「T」は、時間、分、または秒のセクションが最初に出現する場合、その前に出現する必要があります。 4つのセクションのうち少なくとも1つが存在する必要があり、「T」が存在する場合、「T」の後に少なくとも1つのセクションが存在する必要があります。各セクションの番号部分は、1つ以上のASCII数字で構成する必要があります。番号の前には、ASCIIの負または正の記号を付けることができます。日数、時間数、分数を解析して、 &lt;code&gt;long&lt;/code&gt; 。秒数は、オプションの小数部を使用して &lt;code&gt;long&lt;/code&gt; に解析する必要があります。小数点はドットまたはコンマのいずれかです。小数部は、0から9桁にすることができます。</target>
        </trans-unit>
        <trans-unit id="4685a9bbdb9380ea8c94c58ff588b3c8fbe09edf" translate="yes" xml:space="preserve">
          <source>The string that appears after a negative number (may be empty),</source>
          <target state="translated">負の数の後に表示される文字列(空の場合もあります)。</target>
        </trans-unit>
        <trans-unit id="121fd276daa28030f6a820cb1573874d3a75d6c9" translate="yes" xml:space="preserve">
          <source>The string that appears after a positive number (may be empty),</source>
          <target state="translated">正の数の後に表示される文字列(空の場合もあります)。</target>
        </trans-unit>
        <trans-unit id="5bdb1009de16112ed78878cf54efa430f792f9b9" translate="yes" xml:space="preserve">
          <source>The string that appears before a negative number (may be empty),</source>
          <target state="translated">負の数の前に現れる文字列(空の場合もあります)。</target>
        </trans-unit>
        <trans-unit id="ca10167dd9b711a6fe69878b203a07e7493844d5" translate="yes" xml:space="preserve">
          <source>The string that appears before a positive number (may be empty),</source>
          <target state="translated">正の数の前に現れる文字列(空の場合もあります)。</target>
        </trans-unit>
        <trans-unit id="1230518d13d5910243029a9e67f1cba26841e687" translate="yes" xml:space="preserve">
          <source>The string that represents infinity for floating-point values,</source>
          <target state="translated">浮動小数点値の無限大を表す文字列。</target>
        </trans-unit>
        <trans-unit id="0ef60f4fe5623badec9511506d8c3e9aab99fce8" translate="yes" xml:space="preserve">
          <source>The string that represents not-a-number for floating-point values,</source>
          <target state="translated">浮動小数点値の非数を表す文字列。</target>
        </trans-unit>
        <trans-unit id="a78a098297ed979ec8fd87a13cc391ae93c8972a" translate="yes" xml:space="preserve">
          <source>The string tokenizer class allows an application to break a string into tokens.</source>
          <target state="translated">文字列トークン化クラスは、アプリケーションが文字列をトークンに分割することを可能にします。</target>
        </trans-unit>
        <trans-unit id="04fb2cffb71f257048052d20b8fe56a4f66e790f" translate="yes" xml:space="preserve">
          <source>The string tokenizer class allows an application to break a string into tokens. The tokenization method is much simpler than the one used by the &lt;code&gt;StreamTokenizer&lt;/code&gt; class. The &lt;code&gt;StringTokenizer&lt;/code&gt; methods do not distinguish among identifiers, numbers, and quoted strings, nor do they recognize and skip comments.</source>
          <target state="translated">文字列トークナイザークラスを使用すると、アプリケーションで文字列をトークンに分割できます。トークン化メソッドは、 &lt;code&gt;StreamTokenizer&lt;/code&gt; クラスで使用されるメソッドよりもはるかに単純です。 &lt;code&gt;StringTokenizer&lt;/code&gt; はの方法は、識別子、数字、および引用符で囲まれた文字列を区別せず、また、コメントを認識してスキップします。</target>
        </trans-unit>
        <trans-unit id="53fa55c105fb0b4c765bc0d34087bf552da7b9c4" translate="yes" xml:space="preserve">
          <source>The string used to display the String in the syntax of the scripting language.</source>
          <target state="translated">スクリプト言語の構文で文字列を表示するために使用される文字列です。</target>
        </trans-unit>
        <trans-unit id="c78459f86d1f255e120d7d995d1329b245c41ee8" translate="yes" xml:space="preserve">
          <source>The string value of the output property, or null if no property was found.</source>
          <target state="translated">出力プロパティの文字列値、またはプロパティが見つからなかった場合はnull。</target>
        </trans-unit>
        <trans-unit id="6b860b97ae2648994958ff5f145b7575c2d21991" translate="yes" xml:space="preserve">
          <source>The string value.</source>
          <target state="translated">文字列の値。</target>
        </trans-unit>
        <trans-unit id="f11c947d653626328bad48f1c4cdf9159acc0a3b" translate="yes" xml:space="preserve">
          <source>The strings that can be parsed as numbers by an instance of this class are specified in terms of the following regular-expression grammar, where Rmax is the highest digit in the radix being used (for example, Rmax is 9 in base 10).</source>
          <target state="translated">このクラスのインスタンスによって数値として解析できる文字列は、以下の正規表現文法によって指定されます。</target>
        </trans-unit>
        <trans-unit id="192956733edd06bdd0c654a6ba995e1bcee04c0f" translate="yes" xml:space="preserve">
          <source>The structure and contents of the &quot;native&quot; metadata format are defined by the plug-in that created this &lt;code&gt;IIOMetadata&lt;/code&gt; object. Plug-ins for simple formats will usually create a dummy node for the root, and then a series of child nodes representing individual tags, chunks, or keyword/value pairs. A plug-in may choose whether or not to document its native format.</source>
          <target state="translated">「ネイティブ」メタデータ形式の構造とコンテンツは、この &lt;code&gt;IIOMetadata&lt;/code&gt; オブジェクトを作成したプラグインによって定義されます。単純なフォーマットのプラグインは通常、ルートのダミーノードを作成し、次に個々のタグ、チャンク、またはキーワードと値のペアを表す一連の子ノードを作成します。プラグインは、そのネイティブ形式を文書化するかどうかを選択できます。</target>
        </trans-unit>
        <trans-unit id="0d00af5b5c0dfb3866ccfa55c912f873c782dbff" translate="yes" xml:space="preserve">
          <source>The structure and encoding of Oids is defined in ISOIEC-8824 and ISOIEC-8825. For example the Oid representation of Kerberos V5 mechanism is &quot;1.2.840.113554.1.2.2&quot;</source>
          <target state="translated">Oid の構造とエンコーディングは ISOIEC-8824 と ISOIEC-8825 で定義されています。例えば、Kerberos V5メカニズムのOid表現は &quot;1.2.840.113554.1.2.2 &quot;です。</target>
        </trans-unit>
        <trans-unit id="cb2c5dc909eef768d7f9cd7e34bb554bcaaaebaa" translate="yes" xml:space="preserve">
          <source>The structure is a return type accompanied by any number of parameter types. The types (primitive, &lt;code&gt;void&lt;/code&gt;, and reference) are represented by &lt;a href=&quot;../class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; objects. (For ease of exposition, we treat &lt;code&gt;void&lt;/code&gt; as if it were a type. In fact, it denotes the absence of a return type.)</source>
          <target state="translated">構造体は、任意の数のパラメーター型を伴う戻り型です。タイプ（プリミティブ、 &lt;code&gt;void&lt;/code&gt; 、および参照）は&lt;a href=&quot;../class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;オブジェクトによって表されます。（説明を簡単にするために、 &lt;code&gt;void&lt;/code&gt; を型であるかのように扱います。実際には、戻り型がないことを示しています。）</target>
        </trans-unit>
        <trans-unit id="fdfbb9e2e84d666d2a855ee7c1631508d148c17f" translate="yes" xml:space="preserve">
          <source>The structures that may be described by this class are a subset of those expressible using XML document type definitions (DTDs), with the addition of some basic information on the datatypes of attributes and the ability to store an &lt;code&gt;Object&lt;/code&gt; reference within a node. In the future, XML Schemas could be used to represent these structures, and many others.</source>
          <target state="translated">このクラスで記述できる構造は、XML文書型定義（DTD）を使用して表現可能な構造のサブセットであり、属性のデータ型に関するいくつかの基本情報と、ノード内に &lt;code&gt;Object&lt;/code&gt; 参照を格納する機能が追加されています。将来的には、XMLスキーマを使用して、これらの構造やその他の多くの構造を表すことができます。</target>
        </trans-unit>
        <trans-unit id="bc1300b7e4fbbe647c420f08d4ea464e607a0b93" translate="yes" xml:space="preserve">
          <source>The stub class is loaded by name using the class loader of the root class. The stub class must be public, it must extend &lt;a href=&quot;remotestub&quot;&gt;&lt;code&gt;RemoteStub&lt;/code&gt;&lt;/a&gt;, it must reside in a package that is exported to at least the &lt;code&gt;java.rmi&lt;/code&gt; module, and it must have a public constructor that has one parameter of type &lt;a href=&quot;remoteref&quot;&gt;&lt;code&gt;RemoteRef&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">スタブクラスは、ルートクラスのクラスローダーを使用して名前でロードされます。スタブクラスはパブリックである必要が&lt;a href=&quot;remotestub&quot;&gt; &lt;code&gt;RemoteStub&lt;/code&gt; &lt;/a&gt;、RemoteStubを拡張する必要があり、少なくとも &lt;code&gt;java.rmi&lt;/code&gt; モジュールにエクスポートされるパッケージに存在する必要があり、&lt;a href=&quot;remoteref&quot;&gt; &lt;code&gt;RemoteRef&lt;/code&gt; &lt;/a&gt;タイプのパラメーターを1つ持つパブリックコンストラクターを持っている必要があります。</target>
        </trans-unit>
        <trans-unit id="a232a3677fbba52c761d261392a47c4a403e95f0" translate="yes" xml:space="preserve">
          <source>The stub might not yet be connected to the ORB. The stub will be serializable only if it is connected to the ORB.</source>
          <target state="translated">スタブはまだORBに接続されていないかもしれません。スタブはORBに接続されている場合のみシリアライズ可能です。</target>
        </trans-unit>
        <trans-unit id="7ed2b6144ace5c60a1401e5428a1fc3686ffe408" translate="yes" xml:space="preserve">
          <source>The style of this &lt;code&gt;Font&lt;/code&gt;, as passed to the constructor.</source>
          <target state="translated">コンストラクターに渡されるこの &lt;code&gt;Font&lt;/code&gt; のスタイル。</target>
        </trans-unit>
        <trans-unit id="498a3c78ad0c0604083f3769f1ef9e8b0c526e13" translate="yes" xml:space="preserve">
          <source>The style of this &lt;code&gt;Font&lt;/code&gt;, as passed to the constructor. This style can be PLAIN, BOLD, ITALIC, or BOLD+ITALIC.</source>
          <target state="translated">コンストラクターに渡されるこの &lt;code&gt;Font&lt;/code&gt; のスタイル。このスタイルは、PLAIN、BOLD、ITALIC、またはBOLD + ITALICにすることができます。</target>
        </trans-unit>
        <trans-unit id="aff2ab664c61a826342f48467d919591b7be5528" translate="yes" xml:space="preserve">
          <source>The sub-range is defined to be out of bounds if any of the following inequalities is true:</source>
          <target state="translated">サブレンジは、以下の不等式のいずれかが真であれば圏外と定義される。</target>
        </trans-unit>
        <trans-unit id="e5c879c6bdae17e077ece202d05c591a659999bb" translate="yes" xml:space="preserve">
          <source>The subclass may supply a different base name for the resource bundles using the &lt;code&gt;setResourceBaseName&lt;/code&gt; method.</source>
          <target state="translated">サブクラスは、 &lt;code&gt;setResourceBaseName&lt;/code&gt; メソッドを使用して、リソースバンドルに異なるベース名を提供する場合があります。</target>
        </trans-unit>
        <trans-unit id="527c0a0960cc0fe34b4ce860e5a1c2222c46e968" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; for the SQLState class value '</source>
          <target state="translated">SQLStateクラス値の&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラス'</target>
        </trans-unit>
        <trans-unit id="7713c2f78de0d5ff78645f34f1aa9c89839a8b5a" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; is thrown in situations where a previously failed operation might be able to succeed when the operation is retried without any intervention by application-level functionality.</source>
          <target state="translated">&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラスは、アプリケーションレベルの機能による介入なしに操作が再試行されたときに、以前に失敗した操作が成功する可能性がある状況でスローされます。</target>
        </trans-unit>
        <trans-unit id="80f483f7072263836c5107593eb17db254d36bf4" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; is thrown when one or more client info properties could not be set on a &lt;code&gt;Connection&lt;/code&gt;.</source>
          <target state="translated">1つ以上のクライアント情報プロパティを &lt;code&gt;Connection&lt;/code&gt; に設定できなかった場合、&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラスがスローされます。</target>
        </trans-unit>
        <trans-unit id="7b3fc8fd4fb26a88d9f95ef4851700e0411e08a2" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; is thrown when one or more client info properties could not be set on a &lt;code&gt;Connection&lt;/code&gt;. In addition to the information provided by &lt;code&gt;SQLException&lt;/code&gt;, a &lt;code&gt;SQLClientInfoException&lt;/code&gt; provides a list of client info properties that were not set. Some databases do not allow multiple client info properties to be set atomically. For those databases, it is possible that some of the client info properties had been set even though the &lt;code&gt;Connection.setClientInfo&lt;/code&gt; method threw an exception. An application can use the &lt;code&gt;getFailedProperties &lt;/code&gt; method to retrieve a list of client info properties that were not set. The properties are identified by passing a &lt;code&gt;Map&amp;lt;String,ClientInfoStatus&amp;gt;&lt;/code&gt; to the appropriate &lt;code&gt;SQLClientInfoException&lt;/code&gt; constructor.</source>
          <target state="translated">1つ以上のクライアント情報プロパティを &lt;code&gt;Connection&lt;/code&gt; に設定できなかった場合、&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラスがスローされます。提供される情報に加えて &lt;code&gt;SQLException&lt;/code&gt; 、 &lt;code&gt;SQLClientInfoException&lt;/code&gt; 設定されていなかったクライアント情報プロパティーのリストを提供します。一部のデータベースでは、複数のクライアント情報プロパティをアトミックに設定できません。これらのデータベースでは、 &lt;code&gt;Connection.setClientInfo&lt;/code&gt; メソッドが例外をスローした場合でも、一部のクライアント情報プロパティが設定されている可能性があります。アプリケーションは、 &lt;code&gt;getFailedProperties &lt;/code&gt; メソッドを使用して、設定されていないクライアント情報プロパティのリストを取得できます。プロパティは、 &lt;code&gt;Map&amp;lt;String,ClientInfoStatus&amp;gt;&lt;/code&gt; を適切な &lt;code&gt;SQLClientInfoException&lt;/code&gt; コンストラクターにマップします。</target>
        </trans-unit>
        <trans-unit id="6717effbf2eae66083ee44deed5d8b60c5c6fe2d" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; thrown for the SQLState class value '</source>
          <target state="translated">SQLStateクラス値に対してスローされた&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラス'</target>
        </trans-unit>
        <trans-unit id="8607beac95f1d4cb0f607da7d63685d6dfbf8d4c" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; thrown in situations where a previously failed operation might be able to succeed if the application performs some recovery steps and retries the entire transaction or in the case of a distributed transaction, the transaction branch.</source>
          <target state="translated">アプリケーションがいくつかの回復手順を実行してトランザクション全体を再試行した場合、または分散トランザクションの場合はトランザクションブランチを再試行した場合に、以前に失敗した操作が成功する可能性がある状況でスローされる&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラス。</target>
        </trans-unit>
        <trans-unit id="bbb8274ee2db6a0201b391b30cdfd8adbecfb841" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; thrown in situations where a previously failed operation might be able to succeed if the application performs some recovery steps and retries the entire transaction or in the case of a distributed transaction, the transaction branch. At a minimum, the recovery operation must include closing the current connection and getting a new connection.</source>
          <target state="translated">アプリケーションがいくつかの回復手順を実行してトランザクション全体を再試行した場合、または分散トランザクションの場合はトランザクションブランチを再試行した場合に、以前に失敗した操作が成功する可能性がある状況でスローされる&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラス。少なくとも、リカバリ操作には、現在の接続を閉じて新しい接続を取得することが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="a54587a45ff8b2645e125fd0b8ffb8307a8ef66b" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; thrown when an error occurs during a batch update operation.</source>
          <target state="translated">バッチ更新操作中にエラーが発生したときにスローされる&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラス。</target>
        </trans-unit>
        <trans-unit id="803499fb5061ae4d61cec028a03de443ffd7786f" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; thrown when an error occurs during a batch update operation. In addition to the information provided by &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt;, a &lt;code&gt;BatchUpdateException&lt;/code&gt; provides the update counts for all commands that were executed successfully during the batch update, that is, all commands that were executed before the error occurred. The order of elements in an array of update counts corresponds to the order in which commands were added to the batch.</source>
          <target state="translated">バッチ更新操作中にエラーが発生したときにスローされる&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラス。提供される情報に加えて&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;BatchUpdateException&lt;/code&gt; のは、エラーが発生する前に実行されたすべてのコマンドでバッチ更新中に正常に実行されたすべてのコマンドの更新カウントを提供します。更新カウントの配列内の要素の順序は、コマンドがバッチに追加された順序に対応しています。</target>
        </trans-unit>
        <trans-unit id="72d539ca6fdd4b7c88bd110f4dcd389de1ff790c" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; thrown when an instance where a retry of the same operation would fail unless the cause of the &lt;code&gt;SQLException&lt;/code&gt; is corrected.</source>
          <target state="translated">サブクラス&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;の原因がない限り同じ操作の再試行が失敗する場合にスロー &lt;code&gt;SQLException&lt;/code&gt; が修正されます。</target>
        </trans-unit>
        <trans-unit id="040505f7787304a32e3c75ae93a27084235243c1" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; thrown when the SQLState class value is '</source>
          <target state="translated">SQLStateクラス値が 'の&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;スローされるSQLExceptionのサブクラス</target>
        </trans-unit>
        <trans-unit id="ccf2e655300c92dbbb85b4f642a0803f74b73233" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; thrown when the timeout specified by &lt;code&gt;Statement.setQueryTimeout&lt;/code&gt;, &lt;code&gt;DriverManager.setLoginTimeout&lt;/code&gt;, &lt;code&gt;DataSource.setLoginTimeout&lt;/code&gt;,&lt;code&gt;XADataSource.setLoginTimeout&lt;/code&gt; has expired.</source>
          <target state="translated">&lt;code&gt;Statement.setQueryTimeout&lt;/code&gt; 、 &lt;code&gt;DriverManager.setLoginTimeout&lt;/code&gt; 、 &lt;code&gt;DataSource.setLoginTimeout&lt;/code&gt; 、 &lt;code&gt;XADataSource.setLoginTimeout&lt;/code&gt; で指定されたタイムアウトが期限切れになったときにスローされる&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラス。</target>
        </trans-unit>
        <trans-unit id="62072bc327b8cecfe4f10440c7fba64d72ceae2d" translate="yes" xml:space="preserve">
          <source>The subclass returned depends on the value of &lt;a href=&quot;#isParseBigDecimal()&quot;&gt;&lt;code&gt;isParseBigDecimal()&lt;/code&gt;&lt;/a&gt; as well as on the string being parsed.</source>
          <target state="translated">返されるサブクラスは、&lt;a href=&quot;#isParseBigDecimal()&quot;&gt; &lt;code&gt;isParseBigDecimal()&lt;/code&gt; の&lt;/a&gt;値と、解析される文字列によって異なります。</target>
        </trans-unit>
        <trans-unit id="bac1d40c541f2bc78282b5fcf04be8326df2e993" translate="yes" xml:space="preserve">
          <source>The subclass returned depends on the value of &lt;a href=&quot;decimalformat#isParseBigDecimal--&quot;&gt;&lt;code&gt;isParseBigDecimal()&lt;/code&gt;&lt;/a&gt; as well as on the string being parsed.</source>
          <target state="translated">返されるサブクラスは、&lt;a href=&quot;decimalformat#isParseBigDecimal--&quot;&gt; &lt;code&gt;isParseBigDecimal()&lt;/code&gt; の&lt;/a&gt;値と解析される文字列によって異なります。</target>
        </trans-unit>
        <trans-unit id="b79749f58cf1bfcecb1d563bcce417c79a3f48ee" translate="yes" xml:space="preserve">
          <source>The subclass's &lt;code&gt;set(int, E)&lt;/code&gt;, &lt;code&gt;get(int)&lt;/code&gt;, &lt;code&gt;add(int, E)&lt;/code&gt;, &lt;code&gt;remove(int)&lt;/code&gt;, &lt;code&gt;addAll(int,
 Collection)&lt;/code&gt; and &lt;code&gt;removeRange(int, int)&lt;/code&gt; methods all delegate to the corresponding methods on the backing abstract list, after bounds-checking the index and adjusting for the offset. The &lt;code&gt;addAll(Collection c)&lt;/code&gt; method merely returns &lt;code&gt;addAll(size,
 c)&lt;/code&gt;.</source>
          <target state="translated">サブクラスの &lt;code&gt;set(int, E)&lt;/code&gt; 、 &lt;code&gt;get(int)&lt;/code&gt; 、 &lt;code&gt;add(int, E)&lt;/code&gt; 、 &lt;code&gt;remove(int)&lt;/code&gt; 、 &lt;code&gt;addAll(int, Collection)&lt;/code&gt; および &lt;code&gt;removeRange(int, int)&lt;/code&gt; メソッドはすべて、バッキングアブストラクトの対応するメソッドに委譲しますリスト、インデックスの境界チェックとオフセットの調整後。 &lt;code&gt;addAll(Collection c)&lt;/code&gt; 方法は、単に返す &lt;code&gt;addAll(size, c)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="729c3d64219547cb810998bd0f169dacbb67b1a4" translate="yes" xml:space="preserve">
          <source>The subclasses of &lt;code&gt;LayerUI&lt;/code&gt; can either be stateless and shareable by multiple &lt;code&gt;JLayer&lt;/code&gt;s or not shareable.</source>
          <target state="translated">&lt;code&gt;LayerUI&lt;/code&gt; のサブクラスは、ステートレスで複数の &lt;code&gt;JLayer&lt;/code&gt; によって共有可能であるか、共有不可能である可能性があります。</target>
        </trans-unit>
        <trans-unit id="41754262853cd8dda8e7145fb4fe6436a4d4ac99" translate="yes" xml:space="preserve">
          <source>The subprocess is not killed when there are no more references to the &lt;code&gt;Process&lt;/code&gt; object, but rather the subprocess continues executing asynchronously.</source>
          <target state="translated">これ以上の言及がない場合、サブプロセスが殺されていない &lt;code&gt;Process&lt;/code&gt; オブジェクトはではなく、サブプロセスは、非同期的に実行を続けます。</target>
        </trans-unit>
        <trans-unit id="7c7df4f8cdb60df8a1704c9b01b240279889a753" translate="yes" xml:space="preserve">
          <source>The subscriber returned by this handler is not flow controlled. Therefore, the supplied consumer must be able to process whatever amount of data is delivered in a timely fashion.</source>
          <target state="translated">このハンドラによって返されるサブスクライバはフロー制御されない。したがって、供給されたコンシューマは、どのような量のデータであっても、タイムリーに配信されたデータを処理することができなければならない。</target>
        </trans-unit>
        <trans-unit id="24df0de55c6e5cbab8a446a4d7da62cab861430c" translate="yes" xml:space="preserve">
          <source>The subsequence of the argument &lt;code&gt;s&lt;/code&gt; specified by &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are inserted, in order, into this sequence at the specified destination offset, moving up any characters originally above that position. The length of this sequence is increased by &lt;code&gt;end - start&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; で指定された引数 &lt;code&gt;s&lt;/code&gt; のサブシーケンスが、このシーケンスの指定された宛先オフセットに順番に挿入され、その位置より上にある文字が上に移動します。このシーケンスの長さは、 &lt;code&gt;end - start&lt;/code&gt; によって増加します。</target>
        </trans-unit>
        <trans-unit id="98347390f1f0edc351744b3bec1803d66b95c900" translate="yes" xml:space="preserve">
          <source>The subtract filter operation.</source>
          <target state="translated">減算フィルタの操作です。</target>
        </trans-unit>
        <trans-unit id="9bb649597713d07a6a3f68ef4b622114bd9bb42f" translate="yes" xml:space="preserve">
          <source>The sum returned can vary depending upon the order in which values are recorded, due to accumulated rounding error in addition of values of differing magnitudes. Values sorted by increasing absolute magnitude tend to yield more accurate results. If any recorded value is a &lt;code&gt;NaN&lt;/code&gt; or the sum is at any point a &lt;code&gt;NaN&lt;/code&gt; then the sum will be &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">返される合計は、異なる大きさの値に加えて累積された丸め誤差が原因で、値が記録される順序によって異なる場合があります。絶対値を大きくしてソートした値は、より正確な結果をもたらす傾向があります。記録された値が &lt;code&gt;NaN&lt;/code&gt; である場合、または合計が任意の時点で &lt;code&gt;NaN&lt;/code&gt; である場合、合計は &lt;code&gt;NaN&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="b5b109e54c81cacf004fb931535e7f7c5e9a6ad4" translate="yes" xml:space="preserve">
          <source>The super class of all menu related containers.</source>
          <target state="translated">メニュー関連のすべてのコンテナのスーパークラス。</target>
        </trans-unit>
        <trans-unit id="2edd5140cff4220974aa4530adeee309c448831e" translate="yes" xml:space="preserve">
          <source>The superclass behavior will try to update the child views which is not desired in this case, since the children are zones and not directly effected by the changes to the associated element.</source>
          <target state="translated">スーパークラスの動作は子ビューを更新しようとしますが、子はゾーンであり、関連する要素への変更によって直接影響を受けないため、この場合は望ましくありません。</target>
        </trans-unit>
        <trans-unit id="223c3b7c239c5d80bf9c6472a205737e2c00d21b" translate="yes" xml:space="preserve">
          <source>The superclass behavior will try to update the child views which is not desired in this case, since the children are zones and not directly effected by the changes to the associated element. This is reimplemented to do nothing and return false.</source>
          <target state="translated">スーパークラスの動作は子ビューを更新しようとしますが、子はゾーンであり、関連する要素への変更によって直接影響を受けないため、この場合は望ましくありません。これは、何もせずに false を返すように再実装されています。</target>
        </trans-unit>
        <trans-unit id="602000e37c0a2e549407c0c276a26b61377db86f" translate="yes" xml:space="preserve">
          <source>The supertypes (both class and interface types) of a declared type may be found using the &lt;a href=&quot;../util/types#directSupertypes(javax.lang.model.type.TypeMirror)&quot;&gt;&lt;code&gt;Types.directSupertypes(TypeMirror)&lt;/code&gt;&lt;/a&gt; method. This returns the supertypes with any type arguments substituted in.</source>
          <target state="translated">宣言された型のスーパータイプ（クラス型とインターフェイス型の両方）は、&lt;a href=&quot;../util/types#directSupertypes(javax.lang.model.type.TypeMirror)&quot;&gt; &lt;code&gt;Types.directSupertypes(TypeMirror)&lt;/code&gt; &lt;/a&gt;メソッドを使用して見つけることができます。これにより、で置換された型引数を持つスーパータイプが返されます。</target>
        </trans-unit>
        <trans-unit id="8b4fd272478c2bf5755a6c3fbfac56931cb9665d" translate="yes" xml:space="preserve">
          <source>The supertypes (both class and interface types) of a declared type may be found using the &lt;a href=&quot;../util/types#directSupertypes-javax.lang.model.type.TypeMirror-&quot;&gt;&lt;code&gt;Types.directSupertypes(TypeMirror)&lt;/code&gt;&lt;/a&gt; method. This returns the supertypes with any type arguments substituted in.</source>
          <target state="translated">宣言されたタイプのスーパータイプ（クラスタイプとインターフェイスタイプの両方）は、&lt;a href=&quot;../util/types#directSupertypes-javax.lang.model.type.TypeMirror-&quot;&gt; &lt;code&gt;Types.directSupertypes(TypeMirror)&lt;/code&gt; &lt;/a&gt;メソッドを使用して見つけることができます。これは、置換された型引数を持つスーパータイプを返します。</target>
        </trans-unit>
        <trans-unit id="14dfb8fa2619f0e88128d788e30861e3728092dc" translate="yes" xml:space="preserve">
          <source>The supplied accumulator function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. For predictable results, the accumulator function should be commutative and associative within the floating point tolerance required in usage contexts. The function is applied with an existing value (or identity) as one argument, and a given update as the other argument. For example, to maintain a running maximum value, you could supply &lt;code&gt;Double::max&lt;/code&gt; along with &lt;code&gt;Double.NEGATIVE_INFINITY&lt;/code&gt; as the identity. The order of accumulation within or across threads is not guaranteed. Thus, this class may not be applicable if numerical stability is required, especially when combining values of substantially different orders of magnitude.</source>
          <target state="translated">提供されているアキュムレータ関数は、スレッド間の競合が原因で更新の試行が失敗した場合に再適用される可能性があるため、副作用がない必要があります。予測可能な結果を​​得るには、アキュムレータ関数は、使用状況で必要な浮動小数点の許容範囲内で可換かつ結合的である必要があります。この関数は、既存の値（またはID）を1つの引数として適用し、特定の更新をもう1つの引数として適用します。たとえば、実行中の最大値を維持するには、IDとして &lt;code&gt;Double.NEGATIVE_INFINITY&lt;/code&gt; とともに &lt;code&gt;Double::max&lt;/code&gt; を指定できます。スレッド内またはスレッド間での累積の順序は保証されません。したがって、数値的安定性が必要な場合、特に実質的に異なる桁の値を組み合わせる場合、このクラスは適用できない可能性があります。</target>
        </trans-unit>
        <trans-unit id="6acd237472bddb6f88b28a9f2fd993ab87094ddb" translate="yes" xml:space="preserve">
          <source>The supplied accumulator function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value as its first argument, and the given update as the second argument. For example, to maintain a running maximum value, you could supply &lt;code&gt;Double::max&lt;/code&gt; along with &lt;code&gt;Double.NEGATIVE_INFINITY&lt;/code&gt; as the identity. The order of accumulation within or across threads is not guaranteed. Thus, this class may not be applicable if numerical stability is required, especially when combining values of substantially different orders of magnitude.</source>
          <target state="translated">提供されたアキュムレータ関数は、スレッド間の競合により更新の試行が失敗したときに再適用される可能性があるため、副作用がないはずです。関数は、現在の値を最初の引数として、指定された更新を2番目の引数として適用されます。たとえば、実行中の最大値を維持するには、 &lt;code&gt;Double::max&lt;/code&gt; と &lt;code&gt;Double.NEGATIVE_INFINITY&lt;/code&gt; としてDouble.NEGATIVE_INFINITYを指定できます。スレッド内またはスレッド間の累積の順序は保証されません。したがって、特に実質的に異なる桁の値を組み合わせる場合など、数値の安定性が必要な場合、このクラスは適用できない場合があります。</target>
        </trans-unit>
        <trans-unit id="6025b666165a1f5fda89da5a8e8ee1de31444459" translate="yes" xml:space="preserve">
          <source>The supplied array holding three internalized strings representing the Namespace URI (or empty string), the local name, and the XML qualified name; or null if there is an undeclared prefix.</source>
          <target state="translated">与えられた配列は、名前空間 URI (または空文字列)、ローカル名、XML修飾名を表す3つの内部化された文字列を保持します。</target>
        </trans-unit>
        <trans-unit id="7ad24e24ba3ab22cd4ef21994274386c9cd69325" translate="yes" xml:space="preserve">
          <source>The supplied object parameter acts as an optional configuration argument. For example, it could be of type &lt;code&gt;Component&lt;/code&gt;. A &lt;code&gt;Painter&lt;/code&gt; that expected it could then read state from that &lt;code&gt;Component&lt;/code&gt; and use the state for painting. For example, an implementation may read the backgroundColor and use that.</source>
          <target state="translated">指定されたオブジェクトパラメータは、オプションの構成引数として機能します。たとえば、タイプが &lt;code&gt;Component&lt;/code&gt; である可能性があります。次に、その &lt;code&gt;Component&lt;/code&gt; から状態を読み取り、その状態をペイントに使用できることを期待していた &lt;code&gt;Painter&lt;/code&gt; 。たとえば、実装はbackgroundColorを読み取ってそれを使用する場合があります。</target>
        </trans-unit>
        <trans-unit id="b84e7dcea201cffacdcbf9be7a2353ff95d845a5" translate="yes" xml:space="preserve">
          <source>The supplied thumbnails will be resized if needed, and any thumbnails in excess of the supported number will be ignored. If the format requires additional thumbnails that are not provided, the writer should generate them internally.</source>
          <target state="translated">提供されたサムネイルは必要に応じてサイズ変更され、サポートされている数を超えるサムネイルは無視されます。フォーマットが提供されていない追加のサムネイルを必要とする場合は、ライターは内部的にサムネイルを生成する必要があります。</target>
        </trans-unit>
        <trans-unit id="753904bcbd3964af858d18cda3d913205d84b5e6" translate="yes" xml:space="preserve">
          <source>The supplied thumbnails will be resized if needed, and any thumbnails in excess of the supported number will be ignored. If the format requires additional thumbnails that are not provided, the writer will generate them internally.</source>
          <target state="translated">提供されたサムネイルは必要に応じてサイズ変更され、サポートされている数を超えるサムネイルは無視されます。フォーマットが提供されていない追加のサムネイルを必要とする場合、ライターは内部的にサムネイルを生成します。</target>
        </trans-unit>
        <trans-unit id="bce2b22d14479cd69e56124d69d47db8b57076ba" translate="yes" xml:space="preserve">
          <source>The support for this is provided by the &lt;code&gt;StyleSheet&lt;/code&gt; class. The presentation of the HTML can be heavily influenced by the setting of the StyleSheet property on the EditorKit.</source>
          <target state="translated">これのサポートは、 &lt;code&gt;StyleSheet&lt;/code&gt; クラスによって提供されます。HTMLの表示は、EditorKitのStyleSheetプロパティの設定に大きく影響される可能性があります。</target>
        </trans-unit>
        <trans-unit id="cc15d8eee723cd7e4ccfbd5a0f0bd59ce88d1002" translate="yes" xml:space="preserve">
          <source>The supported &lt;code&gt;ChronoField&lt;/code&gt; instances are:</source>
          <target state="translated">サポートされている &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="8b2cd39555d2c728a665b32d4100c19f45b92402" translate="yes" xml:space="preserve">
          <source>The supported calendar systems includes:</source>
          <target state="translated">対応しているカレンダーシステムは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="83bd48a0eac4e9b358a53d73d8f0c393f28dcfbc" translate="yes" xml:space="preserve">
          <source>The supported categories are those of &lt;a href=&quot;http://www.unicode.org/unicode/standard/standard.html&quot;&gt; &lt;i&gt;The Unicode Standard&lt;/i&gt;&lt;/a&gt; in the version specified by the &lt;a href=&quot;../../lang/character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt; class. The category names are those defined in the Standard, both normative and informative.</source>
          <target state="translated">サポートされるカテゴリは、&lt;a href=&quot;../../lang/character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; &lt;/a&gt;クラスで指定されたバージョン&lt;a href=&quot;http://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;のUnicode標準の&lt;/i&gt;&lt;/a&gt;カテゴリです。カテゴリ名は、規格で定義されているものであり、規範的であり、有益です。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="27c2737ecb716851489499e7d8287bbcd13402f5" translate="yes" xml:space="preserve">
          <source>The supported component types (variables types) are &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">サポートされているコンポーネントタイプ（変数タイプ）は、 &lt;code&gt;short&lt;/code&gt; 、 &lt;code&gt;char&lt;/code&gt; 、 &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt;long&lt;/code&gt; 、 &lt;code&gt;float&lt;/code&gt; 、および &lt;code&gt;double&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1f2e9acf0920ea9550ff69da281e2ea26f2481f3" translate="yes" xml:space="preserve">
          <source>The supported syntax is:</source>
          <target state="translated">サポートされている構文は</target>
        </trans-unit>
        <trans-unit id="8d6a5bc82895e1be1c598d816a928419e077fb62" translate="yes" xml:space="preserve">
          <source>The supported units are &lt;a href=&quot;temporal/chronounit#SECONDS&quot;&gt;&lt;code&gt;SECONDS&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;temporal/chronounit#NANOS&quot;&gt;&lt;code&gt;NANOS&lt;/code&gt;&lt;/a&gt;. They are returned in the order seconds, nanos.</source>
          <target state="translated">サポートされる単位は&lt;a href=&quot;temporal/chronounit#SECONDS&quot;&gt; &lt;code&gt;SECONDS&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;temporal/chronounit#NANOS&quot;&gt; &lt;code&gt;NANOS&lt;/code&gt; &lt;/a&gt;です。秒単位のナノで返されます。</target>
        </trans-unit>
        <trans-unit id="50995038a878ce286701de766382bef69778b604" translate="yes" xml:space="preserve">
          <source>The supported units are &lt;a href=&quot;temporal/chronounit#YEARS&quot;&gt;&lt;code&gt;YEARS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;temporal/chronounit#MONTHS&quot;&gt;&lt;code&gt;MONTHS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt;. They are returned in the order years, months, days.</source>
          <target state="translated">サポートされている単位は、&lt;a href=&quot;temporal/chronounit#YEARS&quot;&gt; &lt;code&gt;YEARS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;temporal/chronounit#MONTHS&quot;&gt; &lt;code&gt;MONTHS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; &lt;/a&gt;です。年、月、日の順序で返品されます。</target>
        </trans-unit>
        <trans-unit id="7618ee46d4016ebcae2e5cbf1a065473c760968b" translate="yes" xml:space="preserve">
          <source>The supported units are chronology specific. They will typically be &lt;a href=&quot;../temporal/chronounit#YEARS&quot;&gt;&lt;code&gt;YEARS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../temporal/chronounit#MONTHS&quot;&gt;&lt;code&gt;MONTHS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt;. Requesting an unsupported unit will throw an exception.</source>
          <target state="translated">サポートされている単位は、年表に固有です。彼らは一般的になります&lt;a href=&quot;../temporal/chronounit#YEARS&quot;&gt; &lt;code&gt;YEARS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../temporal/chronounit#MONTHS&quot;&gt; &lt;code&gt;MONTHS&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; &lt;/a&gt;。サポートされていないユニットを要求すると、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="b30d06d3ef729bd157ab81214e7e89bcf4f23fd7" translate="yes" xml:space="preserve">
          <source>The supported units are chronology specific. They will typically be &lt;a href=&quot;../temporal/chronounit#YEARS&quot;&gt;&lt;code&gt;YEARS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../temporal/chronounit#MONTHS&quot;&gt;&lt;code&gt;MONTHS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt;. They are returned in order from largest to smallest.</source>
          <target state="translated">サポートされているユニットは、年代順です。彼らは一般的になります&lt;a href=&quot;../temporal/chronounit#YEARS&quot;&gt; &lt;code&gt;YEARS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../temporal/chronounit#MONTHS&quot;&gt; &lt;code&gt;MONTHS&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; &lt;/a&gt;。大きいものから小さいものの順に返されます。</target>
        </trans-unit>
        <trans-unit id="612ea5ebf89d96a0eba935a9ea4b0154afc481ad" translate="yes" xml:space="preserve">
          <source>The supported units of a period are &lt;a href=&quot;temporal/chronounit#YEARS&quot;&gt;&lt;code&gt;YEARS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;temporal/chronounit#MONTHS&quot;&gt;&lt;code&gt;MONTHS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt;. All three fields are always present, but may be set to zero.</source>
          <target state="translated">サポートされている期間の単位は、&lt;a href=&quot;temporal/chronounit#YEARS&quot;&gt; &lt;code&gt;YEARS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;temporal/chronounit#MONTHS&quot;&gt; &lt;code&gt;MONTHS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; &lt;/a&gt;です。3つのフィールドはすべて常に存在しますが、ゼロに設定することもできます。</target>
        </trans-unit>
        <trans-unit id="ba6f6bccc56ef3d310dd0f60418a50729535d8d9" translate="yes" xml:space="preserve">
          <source>The suppression behavior is enabled &lt;em&gt;unless&lt;/em&gt; disabled &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;via a constructor&lt;/a&gt;. When suppression is disabled, this method does nothing other than to validate its argument.</source>
          <target state="translated">&lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;コンストラクターで&lt;/a&gt;無効にし&lt;em&gt;ない限り&lt;/em&gt;、抑制動作は有効になります。抑制が無効になっている場合、このメソッドは引数を検証する以外に何もしません。</target>
        </trans-unit>
        <trans-unit id="f5be801d8d7c141429eb2a06d10b0aef903302c4" translate="yes" xml:space="preserve">
          <source>The suppression behavior is enabled &lt;em&gt;unless&lt;/em&gt; disabled &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;via a constructor&lt;/a&gt;. When suppression is disabled, this method does nothing other than to validate its argument.</source>
          <target state="translated">抑制動作は&lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;、コンストラクタで&lt;/a&gt;無効にし&lt;em&gt;ない限り&lt;/em&gt;有効です。抑制が無効になっている場合、このメソッドは引数を検証する以外に何もしません。</target>
        </trans-unit>
        <trans-unit id="2d792cc659c3710e68412ad26001e0365e4fe31b" translate="yes" xml:space="preserve">
          <source>The swing text components provide some support of thread safe operations. Because of the high level of configurability of the text components, it is possible to circumvent the protection provided. The protection primarily comes from the model, so the documentation of &lt;code&gt;AbstractDocument&lt;/code&gt; describes the assumptions of the protection provided. The methods that are safe to call asynchronously are marked with comments.</source>
          <target state="translated">スイングテキストコンポーネントは、スレッドセーフ操作のサポートを提供します。テキストコンポーネントの構成可能性が高いため、提供される保護を回避することができます。保護は主にモデルに由来するため、 &lt;code&gt;AbstractDocument&lt;/code&gt; のドキュメントには、提供される保護の前提条件が記載されています。非同期で安全に呼び出すことができるメソッドには、コメントが付いています。</target>
        </trans-unit>
        <trans-unit id="841ed2261b840ee034e2fc667a839f1eea97e56b" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;
 compareAndExchange&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.COMPARE_AND_EXCHANGE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt; compareAndExchange&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.COMPARE_AND_EXCHANGE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="80c4a3b73d48513a6615b83f39f27edf617e75d0" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;
 compareAndExchangeAcquire&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.COMPARE_AND_EXCHANGE_ACQUIRE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt; compareAndExchangeAcquire&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.COMPARE_AND_EXCHANGE_ACQUIRE)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="6fd514eb09ba3f8f2597220841a1a986e13cd4bc" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;
 compareAndExchangeRelease&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.COMPARE_AND_EXCHANGE_RELEASE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt; compareAndExchangeRelease&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.COMPARE_AND_EXCHANGE_RELEASE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="d8383b8927a886acbd2d87b4f789aa3cd1800f65" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;
 compareAndSet&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.COMPARE_AND_SET)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt; compareAndSet&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.COMPARE_AND_SET)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="0fc1fe303a671f659dfcb75ed69ad915a0b9cf34" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;
 weakCompareAndSet&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.WEAK_COMPARE_AND_SET)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt; weakCompareAndSet&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.WEAK_COMPARE_AND_SET)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="a2d6fc33cce92819cac6f3c0aae23a1e0f658baf" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;
 weakCompareAndSetAcquire&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.WEAK_COMPARE_AND_SET_ACQUIRE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt; weakCompareAndSetAcquire&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.WEAK_COMPARE_AND_SET_ACQUIRE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="c238fc4ba306a85bf1a7b6a1059990d27fd23416" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;
 weakCompareAndSetPlain&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.WEAK_COMPARE_AND_SET_PLAIN)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt; weakCompareAndSetPlain&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.WEAK_COMPARE_AND_SET_PLAIN)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="3caa02cdc85af699be3da720087d3b254a1e0d14" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;
 weakCompareAndSetRelease&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.WEAK_COMPARE_AND_SET_RELEASE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt; weakCompareAndSetRelease&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.WEAK_COMPARE_AND_SET_RELEASE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="d92d0c26fd0ceacd6a22912f8e08a2af1144ac03" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;get&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="785e11e22d0e4f59f3c358dd707d0c8bb9c45c5d" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAcquire&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_ACQUIRE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAcquire&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_ACQUIRE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="3909d7fd71a3ce0d45b42b91b83a4cb3a38cc4c7" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndAdd&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_ADD)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndAdd&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_ADD)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="b8c1e07e45f3df0e3f4c7960f4689cc7ff853fb5" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndAddAcquire&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_ADD_ACQUIRE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndAddAcquire&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_ADD_ACQUIRE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="bb3556eafa083c922f5ddc536ef70abc23d8064c" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndAddRelease&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_ADD_RELEASE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndAddRelease&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_ADD_RELEASE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="aab207cd06c5ec5d7499697ca6ba7769359b6579" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseAnd&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_AND)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseAnd&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_AND)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="836795e8bc56b921c84886828b4ff0823073d2b0" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseAndAcquire&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_AND_ACQUIRE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseAndAcquire&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_AND_ACQUIRE)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="78cc40ca583a385f170594f785f938d9b667b6eb" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseAndRelease&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_AND_RELEASE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseAndRelease&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_AND_RELEASE)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="845f2ed88bc26c3452225eb1d4ee813e31903cab" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseOr&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_OR)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseOr&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_OR)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="2ddd9f837d79fd41f1a93fe6a1f1e69fb4737c0f" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseOrAcquire&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_OR_ACQUIRE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseOrAcquire&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_OR_ACQUIRE)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="b92e606932a5540d338db4148a4c5b8e213940b9" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseOrRelease&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_OR_RELEASE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseOrRelease&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_OR_RELEASE)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="248d840d1056e103e71ed4367a20a6f5c5c6b14b" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseXor&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_XOR)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseXor&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_XOR)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="6603458f74711c546450ff99c0fa6a4f391bc1ad" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseXorAcquire&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_XOR_ACQUIRE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseXorAcquire&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_XOR_ACQUIRE)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="582cd1e29d747ef96d86945b9cc3596d644def63" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseXorRelease&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_XOR_RELEASE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseXorRelease&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_XOR_RELEASE)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="0b49e84c3b73b7c67f75202b8dcf68959c3b67df" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndSet&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_SET)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndSet&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_SET)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="726283d34708064e448798ed7558fd26056194bc" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndSetAcquire&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_SET_ACQUIRE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndSetAcquire&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_SET_ACQUIRE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="d72b516be7afed65c7b9b32c7e234a778cc590e8" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndSetRelease&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_SET_RELEASE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndSetRelease&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_SET_RELEASE)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="4a3f7c47047a21314dc4bcc3cfef336f2dea3704" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getOpaque&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_OPAQUE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getOpaque&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_OPAQUE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="80d17bb7d7e04c4f675b8b6a6964580c44801bf2" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getVolatile&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_VOLATILE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getVolatile&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_VOLATILE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="94be2d0c54621beaec5e232a04f1856df457acaf" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;set&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.SET)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.SET)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="158dfc3921c96e11341de806f439c35a94497773" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;setOpaque&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.SET_OPAQUE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;setOpaque&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.SET_OPAQUE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="342170d52a224940f39c38e69957aa300beeb148" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;setRelease&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.SET_RELEASE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;setRelease&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.SET_RELEASE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="68ed9d8b4bcd184b8baaaf811374d5c92f6c83db" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;setVolatile&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.SET_VOLATILE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;setVolatile&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.SET_VOLATILE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="52423f32e1b10ddbf83308406995a99e390cdeaf" translate="yes" xml:space="preserve">
          <source>The synchronization mechanism that provides reader/writer capabilities for disconnected &lt;code&gt;RowSet&lt;/code&gt; objects.</source>
          <target state="translated">切断された &lt;code&gt;RowSet&lt;/code&gt; オブジェクトにリーダー/ライター機能を提供する同期メカニズム。</target>
        </trans-unit>
        <trans-unit id="711ab65736cb44038b84d447045e9ee485fba83d" translate="yes" xml:space="preserve">
          <source>The synchronization mechanism that provides reader/writer capabilities for disconnected &lt;code&gt;RowSet&lt;/code&gt; objects. A &lt;code&gt;SyncProvider&lt;/code&gt; implementation is a class that extends the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class.</source>
          <target state="translated">切断された &lt;code&gt;RowSet&lt;/code&gt; オブジェクトにリーダー/ライター機能を提供する同期メカニズム。 &lt;code&gt;SyncProvider&lt;/code&gt; 実装は、拡張するクラスである &lt;code&gt;SyncProvider&lt;/code&gt; 抽象クラスを。</target>
        </trans-unit>
        <trans-unit id="4e55e499a6fc5c1dbd4e8b7511cc0424a80a9f71" translate="yes" xml:space="preserve">
          <source>The syntactic locations where annotations may appear are split into &lt;em&gt;declaration contexts&lt;/em&gt; , where annotations apply to declarations, and &lt;em&gt;type contexts&lt;/em&gt; , where annotations apply to types used in declarations and expressions.</source>
          <target state="translated">注釈が表示されることが構文位置はに分割され&lt;em&gt;宣言コンテキスト&lt;/em&gt;注釈は宣言、およびに適用さ、&lt;em&gt;タイプコンテキスト&lt;/em&gt;注釈が宣言および式で使用されるタイプに適用され、。</target>
        </trans-unit>
        <trans-unit id="00a77c038c4619155739ddefe087cb77c766d025" translate="yes" xml:space="preserve">
          <source>The syntax of &lt;code&gt;URL&lt;/code&gt; is defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;&lt;i&gt;RFC 2396: Uniform Resource Identifiers (URI): Generic Syntax&lt;/i&gt;&lt;/a&gt;, amended by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;RFC 2732: Format for Literal IPv6 Addresses in URLs&lt;/i&gt;&lt;/a&gt;. The Literal IPv6 address format also supports scope_ids. The syntax and usage of scope_ids is described &lt;a href=&quot;inet6address#scoped&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;URL&lt;/code&gt; の構文は&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;&lt;i&gt;RFC 2396：Uniform Resource Identifiers（URI）：Generic Syntax&lt;/i&gt;&lt;/a&gt;、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;RFC 2732：Formats for Literal IPv6 Addresses in &lt;/i&gt;&lt;/a&gt;&lt;i&gt;URLsで&lt;/i&gt;定義され&lt;i&gt;てい&lt;/i&gt;&lt;i&gt;ます&lt;/i&gt;。リテラルIPv6アドレス形式は、scope_idもサポートしています。&lt;a href=&quot;inet6address#scoped&quot;&gt;ここで&lt;/a&gt;は、scope_idsの構文と使用法について説明します。</target>
        </trans-unit>
        <trans-unit id="449145cc99d61f1de8faac0f36747e42eeda60f0" translate="yes" xml:space="preserve">
          <source>The syntax of a JAR URL is:</source>
          <target state="translated">JAR URLの構文は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="08fb1f0d6774918d6dc928c999a8c810bc3e1cf4" translate="yes" xml:space="preserve">
          <source>The syntax of a compound name is specified using a set of properties:</source>
          <target state="translated">複合名の構文は、一連のプロパティを使用して指定します。</target>
        </trans-unit>
        <trans-unit id="4fb2ecb6c058b701542fac5ca88a96aa5fb606b8" translate="yes" xml:space="preserve">
          <source>The system &lt;code&gt;ClassLoader&lt;/code&gt;</source>
          <target state="translated">システム &lt;code&gt;ClassLoader&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="74f5647e4732b56055ffb73b5ef679c9f6b0e018" translate="yes" xml:space="preserve">
          <source>The system &lt;code&gt;ClassLoader&lt;/code&gt; for delegation, or &lt;code&gt;null&lt;/code&gt; if none</source>
          <target state="translated">委任用のシステム &lt;code&gt;ClassLoader&lt;/code&gt; 。存在しない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09bd470fb008a04d052a9d37972d68c9fb1da6a5" translate="yes" xml:space="preserve">
          <source>The system can interpolate the provided value.</source>
          <target state="translated">システムは、提供された値を補間することができます。</target>
        </trans-unit>
        <trans-unit id="e53b892170425a40e4822de5a8c352ee0cdcdd75" translate="yes" xml:space="preserve">
          <source>The system class loader supports adding a JAR file to be searched if it implements a method named &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; which takes a single parameter of type &lt;code&gt;java.lang.String&lt;/code&gt;. The method is not required to have &lt;code&gt;public&lt;/code&gt; access. The name of the JAR file is obtained by invoking the &lt;a href=&quot;../../../../java.base/java/util/zip/zipfile#getName()&quot;&gt;&lt;code&gt;getName()&lt;/code&gt;&lt;/a&gt; method on the &lt;code&gt;jarfile&lt;/code&gt; and this is provided as the parameter to the &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; method.</source>
          <target state="translated">システムクラスローダーは、 &lt;code&gt;java.lang.String&lt;/code&gt; 型の単一パラメーターを &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; という名前のメソッドを実装している場合、検索対象のJARファイルの追加をサポートします。このメソッドは、 &lt;code&gt;public&lt;/code&gt; アクセスを持つ必要はありません。 JARファイルの名前を呼び出すことによって得られる&lt;a href=&quot;../../../../java.base/java/util/zip/zipfile#getName()&quot;&gt; &lt;code&gt;getName()&lt;/code&gt; &lt;/a&gt;のメソッド &lt;code&gt;jarfile&lt;/code&gt; 、これは、パラメータとして提供される &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; の方法。</target>
        </trans-unit>
        <trans-unit id="74a5a2feb3472fb9649c9e133c6a12917cacd2aa" translate="yes" xml:space="preserve">
          <source>The system class loader supports adding a JAR file to be searched if it implements a method named &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; which takes a single parameter of type &lt;code&gt;java.lang.String&lt;/code&gt;. The method is not required to have &lt;code&gt;public&lt;/code&gt; access. The name of the JAR file is obtained by invoking the &lt;a href=&quot;../../util/zip/zipfile#getName--&quot;&gt;&lt;code&gt;getName()&lt;/code&gt;&lt;/a&gt; method on the &lt;code&gt;jarfile&lt;/code&gt; and this is provided as the parameter to the &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; method.</source>
          <target state="translated">システムクラスローダーは、タイプ &lt;code&gt;java.lang.String&lt;/code&gt; の単一のパラメーターを &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; という名前のメソッドを実装する場合、検索するJARファイルの追加をサポートします。このメソッドは、 &lt;code&gt;public&lt;/code&gt; アクセスを持つ必要はありません。JARファイルの名前は、 &lt;code&gt;jarfile&lt;/code&gt; の&lt;a href=&quot;../../util/zip/zipfile#getName--&quot;&gt; &lt;code&gt;getName()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得されます。これは、 &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; メソッドのパラメーターとして提供されます。</target>
        </trans-unit>
        <trans-unit id="e7007628b7373da2f3acc46dea4b6fc181e177f3" translate="yes" xml:space="preserve">
          <source>The system console, if any, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">システムコンソール（ある場合）、それ以外の場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="990083cbffe223d7dee670ed0f3eec843ed8520d" translate="yes" xml:space="preserve">
          <source>The system default &lt;code&gt;LoggerFinder&lt;/code&gt; implementation uses &lt;code&gt;java.util.logging&lt;/code&gt; as the backend framework when the &lt;code&gt;java.logging&lt;/code&gt; module is present. It returns a &lt;a href=&quot;system.logger&quot;&gt;logger&lt;/a&gt; instance that will route log messages to a &lt;a href=&quot;../../../java.logging/java/util/logging/logger&quot;&gt;&lt;code&gt;java.util.logging.Logger&lt;/code&gt;&lt;/a&gt;. Otherwise, if &lt;code&gt;java.logging&lt;/code&gt; is not present, the default implementation will return a simple logger instance that will route log messages of &lt;code&gt;INFO&lt;/code&gt; level and above to the console (&lt;code&gt;System.err&lt;/code&gt;).</source>
          <target state="translated">システムのデフォルトの &lt;code&gt;LoggerFinder&lt;/code&gt; 実装は、 &lt;code&gt;java.logging&lt;/code&gt; モジュールが存在する場合、バックエンドフレームワークとして &lt;code&gt;java.util.logging&lt;/code&gt; を使用します。ログメッセージを&lt;a href=&quot;../../../java.logging/java/util/logging/logger&quot;&gt; &lt;code&gt;java.util.logging.Logger&lt;/code&gt; に&lt;/a&gt;ルーティングする&lt;a href=&quot;system.logger&quot;&gt;ロガー&lt;/a&gt;インスタンスを返します。それ以外の場合、 &lt;code&gt;java.logging&lt;/code&gt; が存在しない場合、デフォルトの実装は、 &lt;code&gt;INFO&lt;/code&gt; レベル以上のログメッセージをコンソール（ &lt;code&gt;System.err&lt;/code&gt; ）にルーティングする単純なロガーインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="3cf101b78cd06413158b1ec4f8db88795dfdf0e0" translate="yes" xml:space="preserve">
          <source>The system does not provide a reason for a session change.</source>
          <target state="translated">システムはセッション変更の理由を提供していません。</target>
        </trans-unit>
        <trans-unit id="d37ff3b03f83b416aeccd9836d23dd0072998488" translate="yes" xml:space="preserve">
          <source>The system identifier as a string, or null if none is available.</source>
          <target state="translated">システム識別子を文字列で指定します。</target>
        </trans-unit>
        <trans-unit id="c9d316b1fe86ec8261312bc65a64ba6fd6ecd9f6" translate="yes" xml:space="preserve">
          <source>The system identifier associated with the entity if specified, and &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">指定されている場合はエンティティに関連付けられているシステム識別子、それ以外の場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df19c9feca0d6dc04cc43c03e2d1251edf9e4510" translate="yes" xml:space="preserve">
          <source>The system identifier associated with the entity if specified, and &lt;code&gt;null&lt;/code&gt; otherwise. This may be an absolute URI or not.</source>
          <target state="translated">指定されている場合はエンティティに関連付けられているシステム識別子、それ以外の場合は &lt;code&gt;null&lt;/code&gt; 。これは絶対URIである場合とそうでない場合があります。</target>
        </trans-unit>
        <trans-unit id="b32fa52354502a426e561283736887788b3252db" translate="yes" xml:space="preserve">
          <source>The system identifier is optional if the source does not get its data from a URL, but it may still be useful to provide one. The application can use a system identifier, for example, to resolve relative URIs and to include in error messages and warnings.</source>
          <target state="translated">システム識別子は、ソースがURLからデータを取得しない場合はオプションですが、システム識別子を提供することは有用かもしれません。アプリケーションはシステム識別子を使用して、例えば相対URIを解決したり、エラーメッセージや警告に含めることができます。</target>
        </trans-unit>
        <trans-unit id="2364c05ce4f7479bebd35fee2edf0a7d214455de" translate="yes" xml:space="preserve">
          <source>The system identifier is optional if there is a byte stream or a character stream, but it is still useful to provide one, since the application can use it to resolve relative URIs and can include it in error messages and warnings (the parser will attempt to open a connection to the URI only if no byte stream or character stream is specified).</source>
          <target state="translated">システム識別子は、バイトストリームや文字ストリームがある場合にはオプションですが、アプリケーションが相対URIを解決するために使用したり、エラーメッセージや警告に含めることができるので、提供しておくと便利です(パーサは、バイトストリームや文字ストリームが指定されていない場合にのみ、URIへの接続を開こうとします)。</target>
        </trans-unit>
        <trans-unit id="c83b9a58a230a52e3ca07250c92629dfdd6df1bf" translate="yes" xml:space="preserve">
          <source>The system identifier is optional if there is a byte stream or a character stream, but it is still useful to provide one, since the application can use it to resolve relative URIs and can include it in error messages and warnings (the parser will attempt to open a connection to the URI only if there is no byte stream or character stream specified).</source>
          <target state="translated">システム識別子は、バイトストリームや文字ストリームがある場合はオプションですが、アプリケーションが相対URIを解決するために使用したり、エラーメッセージや警告に含めることができるので、システム識別子を提供することは有用です(パーサは、バイトストリームや文字ストリームが指定されていない場合にのみ、URIへの接続を開こうとします)。</target>
        </trans-unit>
        <trans-unit id="3cef073d95130421d24f48582c3ee6a831095599" translate="yes" xml:space="preserve">
          <source>The system identifier may be &lt;code&gt;null&lt;/code&gt; or an empty &lt;code&gt;&quot;&quot;&lt;/code&gt;&lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">システム識別子は、 &lt;code&gt;null&lt;/code&gt; または空の &lt;code&gt;&quot;&quot;&lt;/code&gt; &lt;code&gt;String&lt;/code&gt; 場合があります。</target>
        </trans-unit>
        <trans-unit id="ff7e558528664a0592a67c50fde5c5a005f60b33" translate="yes" xml:space="preserve">
          <source>The system identifier of the external subset.</source>
          <target state="translated">外部サブセットのシステム識別子。</target>
        </trans-unit>
        <trans-unit id="5b27a3eb89c729d7e642ff92ff95e3dac820f59c" translate="yes" xml:space="preserve">
          <source>The system identifier of the external subset. This may be an absolute URI or not.</source>
          <target state="translated">外部サブセットのシステム識別子。これは絶対 URI である場合とそうでない場合がある。</target>
        </trans-unit>
        <trans-unit id="ff0c997f101dd04693253ebc52fe8874df3b5062" translate="yes" xml:space="preserve">
          <source>The system identifier of this notation.</source>
          <target state="translated">この記法のシステム識別子。</target>
        </trans-unit>
        <trans-unit id="54b96c3bc9ebc5adfe89119951cb415cb6d98e20" translate="yes" xml:space="preserve">
          <source>The system identifier of this notation. If the system identifier was not specified, this is &lt;code&gt;null&lt;/code&gt;. This may be an absolute URI or not.</source>
          <target state="translated">この表記のシステム識別子。システム識別子が指定されていない場合、これは &lt;code&gt;null&lt;/code&gt; です。これは絶対URIである場合とそうでない場合があります。</target>
        </trans-unit>
        <trans-unit id="e0dc421d48b89f1f1bd983b514fa401be307f95f" translate="yes" xml:space="preserve">
          <source>The system identifier that was set with setSystemId, or null if setSystemId was not called.</source>
          <target state="translated">setSystemId で設定されたシステム識別子、または setSystemId が呼び出されなかった場合は null。</target>
        </trans-unit>
        <trans-unit id="a1ce02ce7ff2b78b9dae3fc1cf570c0f7333877f" translate="yes" xml:space="preserve">
          <source>The system identifier, a URI reference [&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC 2396&lt;/a&gt;], for this input source.</source>
          <target state="translated">この入力ソースのシステム識別子、URI参照[ &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC2396&lt;/a&gt; ]。</target>
        </trans-unit>
        <trans-unit id="257e29fd1c5d73c7e7ae227aff860a12a6b60071" translate="yes" xml:space="preserve">
          <source>The system identifier, a URI reference [&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC 2396&lt;/a&gt;], for this input source. The system identifier is optional if there is a byte stream, a character stream, or string data. It is still useful to provide one, since the application will use it to resolve any relative URIs and can include it in error messages and warnings. (The LSParser will only attempt to fetch the resource identified by the URI reference if there is no other input available in the input source.)</source>
          <target state="translated">この入力ソースのシステム識別子、URI参照[ &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC2396&lt;/a&gt; ]。バイトストリーム、文字ストリーム、または文字列データがある場合、システム識別子はオプションです。アプリケーションはそれを使用して相対URIを解決し、エラーメッセージや警告に含めることができるため、これを提供することは依然として有用です。（LSParserは、入力ソースに使用可能な他の入力がない場合にのみ、URI参照によって識別されるリソースをフェッチしようとします。）</target>
        </trans-unit>
        <trans-unit id="9aecaed599272a3cd0476ff61a2a3b31138ead77" translate="yes" xml:space="preserve">
          <source>The system identifier, a URI reference [&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC 2396&lt;/a&gt;], for this output destination.</source>
          <target state="translated">この出力先のシステム識別子、URI参照[ &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC2396&lt;/a&gt; ]。</target>
        </trans-unit>
        <trans-unit id="9ac19f96242350b7673acfdd7d4b02b017a83550" translate="yes" xml:space="preserve">
          <source>The system identifier, or null if none was supplied.</source>
          <target state="translated">システム識別子、または何も与えられなかった場合はnull。</target>
        </trans-unit>
        <trans-unit id="9432be2aa85292b809c263d55400ca2c13bb187f" translate="yes" xml:space="preserve">
          <source>The system identifier.</source>
          <target state="translated">システム識別子です。</target>
        </trans-unit>
        <trans-unit id="33154309f44b1f3e4b9b63aa2db5ffb66d8d5f1d" translate="yes" xml:space="preserve">
          <source>The system modules, which are the compiled definitions built in to the environment.</source>
          <target state="translated">環境に組み込まれたコンパイルされた定義であるシステムモジュール。</target>
        </trans-unit>
        <trans-unit id="84fb25c617804e775187a1ef35381adde7a462d2" translate="yes" xml:space="preserve">
          <source>The system property that controls which Factory implementation to create is named &lt;code&gt;&quot;javax.xml.parsers.SAXParserFactory&quot;&lt;/code&gt;. This property names a class that is a concrete subclass of this abstract class. If no property is defined, a platform default will be used.</source>
          <target state="translated">作成するファクトリ実装を制御するシステムプロパティの名前は &lt;code&gt;&quot;javax.xml.parsers.SAXParserFactory&quot;&lt;/code&gt; です。このプロパティは、この抽象クラスの具象サブクラスであるクラスに名前を付けます。プロパティが定義されていない場合は、プラットフォームのデフォルトが使用されます。</target>
        </trans-unit>
        <trans-unit id="7d513879bd2964703d8728b1b4c20e907f2382f9" translate="yes" xml:space="preserve">
          <source>The system property that determines which Factory implementation to create is named &lt;code&gt;&quot;javax.xml.transform.TransformerFactory&quot;&lt;/code&gt;. This property names a concrete subclass of the &lt;code&gt;TransformerFactory&lt;/code&gt; abstract class. If the property is not defined, a platform default is be used.</source>
          <target state="translated">作成するファクトリ実装を決定するシステムプロパティは、 &lt;code&gt;&quot;javax.xml.transform.TransformerFactory&quot;&lt;/code&gt; という名前です。このプロパティは、 &lt;code&gt;TransformerFactory&lt;/code&gt; 抽象クラスの具象サブクラスに名前を付けます。プロパティが定義されていない場合は、プラットフォームのデフォルトが使用されます。</target>
        </trans-unit>
        <trans-unit id="305047c960aad4ed37ebc14427e984473ca4e5f9" translate="yes" xml:space="preserve">
          <source>The system property to override the system class loader is not examined until the VM is almost fully initialized. Code that executes this method during startup should take care not to cache the return value until the system is fully initialized.</source>
          <target state="translated">システムクラスローダをオーバーライドするためのシステムプロパティは、VMがほぼ完全に初期化されるまで検査されません。起動時にこのメソッドを実行するコードは、システムが完全に初期化されるまで戻り値をキャッシュしないように注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="1f722c038ba46377c26c7b3d111ee938421ee539" translate="yes" xml:space="preserve">
          <source>The system property to specify the DOMImplementationSource class names.</source>
          <target state="translated">DOMImplementationSource のクラス名を指定するシステムプロパティです。</target>
        </trans-unit>
        <trans-unit id="78a2fb8c1adaa830a99ae7c2ad610a98649d150e" translate="yes" xml:space="preserve">
          <source>The system will probe the specified file to determine its keystore type and return a keystore implementation with its entries already loaded. When this approach is used there is no need to call the keystore's &lt;a href=&quot;#load(java.io.InputStream,char%5B%5D)&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">システムは、指定されたファイルをプローブしてそのキーストアタイプを判別し、エントリがすでにロードされたキーストア実装を返します。このアプローチを使用する場合、キーストアの&lt;a href=&quot;#load(java.io.InputStream,char%5B%5D)&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt;メソッドを呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="7923449f8c0c0791eb5aa081bc5a65fcb2555819" translate="yes" xml:space="preserve">
          <source>The system will return a keystore implementation for the default type.</source>
          <target state="translated">システムは、デフォルト型のキーストアの実装を返します。</target>
        </trans-unit>
        <trans-unit id="00bc1824cf3bd5ca4947f7d237f20eddafbb842c" translate="yes" xml:space="preserve">
          <source>The system will return the most preferred implementation of the specified keystore type available in the environment.</source>
          <target state="translated">システムは、環境で利用可能な指定されたキーストア型の最も好ましい実装を返します。</target>
        </trans-unit>
        <trans-unit id="bf575b9617841369bd0654ef25dcbd4387d7d8b2" translate="yes" xml:space="preserve">
          <source>The system-dependent default name-separator character, represented as a string for convenience.</source>
          <target state="translated">システム依存のデフォルトの名前区切り文字。</target>
        </trans-unit>
        <trans-unit id="a94fecc52deafc39728c10e86b4031f2cc84b1c9" translate="yes" xml:space="preserve">
          <source>The system-dependent default name-separator character, represented as a string for convenience. This string contains a single character, namely &lt;a href=&quot;#separatorChar&quot;&gt;&lt;code&gt;separatorChar&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">便宜上文字列として表される、システムに依存するデフォルトの名前区切り文字。この文字列には、&lt;a href=&quot;#separatorChar&quot;&gt; &lt;code&gt;separatorChar&lt;/code&gt; &lt;/a&gt;という1つの文字が含まれています。</target>
        </trans-unit>
        <trans-unit id="db9af4ad444ca84eeeac9fb19764f73c768a1db0" translate="yes" xml:space="preserve">
          <source>The system-dependent default name-separator character, represented as a string for convenience. This string contains a single character, namely &lt;code&gt;&lt;a href=&quot;file#separatorChar&quot;&gt;&lt;code&gt;separatorChar&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">システムに依存するデフォルトの名前区切り文字。便宜上、文字列として表されます。この文字列には単一の文字、つまり &lt;code&gt;&lt;a href=&quot;file#separatorChar&quot;&gt;&lt;code&gt;separatorChar&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; が含まれています。</target>
        </trans-unit>
        <trans-unit id="23edeff72c72b6eac94037a43840bbb8e7b551b6" translate="yes" xml:space="preserve">
          <source>The system-dependent default name-separator character.</source>
          <target state="translated">システムに依存するデフォルトの名前区切り文字。</target>
        </trans-unit>
        <trans-unit id="06c823441fa92d743c30c7c0a19a1d4b758a3865" translate="yes" xml:space="preserve">
          <source>The system-dependent default name-separator character. This field is initialized to contain the first character of the value of the system property &lt;code&gt;file.separator&lt;/code&gt;. On UNIX systems the value of this field is &lt;code&gt;'/'&lt;/code&gt;; on Microsoft Windows systems it is &lt;code&gt;'\\'&lt;/code&gt;.</source>
          <target state="translated">システムに依存するデフォルトの名前区切り文字。このフィールドは、システムプロパティ &lt;code&gt;file.separator&lt;/code&gt; の値の最初の文字を含むように初期化されます。UNIXシステムでは、このフィールドの値は &lt;code&gt;'/'&lt;/code&gt; です。Microsoft Windowsシステムでは &lt;code&gt;'\\'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8793c76c9da5710b62dc7c9e42c8f2cdc86a36b3" translate="yes" xml:space="preserve">
          <source>The system-dependent path-separator character, represented as a string for convenience.</source>
          <target state="translated">システム依存のパス区切り文字で、便宜上文字列として表現されます。</target>
        </trans-unit>
        <trans-unit id="1f14bf8cb7ba1cb6fe8976b4d14659286d00de2c" translate="yes" xml:space="preserve">
          <source>The system-dependent path-separator character, represented as a string for convenience. This string contains a single character, namely &lt;a href=&quot;#pathSeparatorChar&quot;&gt;&lt;code&gt;pathSeparatorChar&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">便宜上文字列として表される、システムに依存するパス区切り文字。この文字列には、&lt;a href=&quot;#pathSeparatorChar&quot;&gt; &lt;code&gt;pathSeparatorChar&lt;/code&gt; &lt;/a&gt;という1つの文字が含まれています。</target>
        </trans-unit>
        <trans-unit id="a67c3801f69a10a5f6ee1400db51f1a4d991731c" translate="yes" xml:space="preserve">
          <source>The system-dependent path-separator character, represented as a string for convenience. This string contains a single character, namely &lt;code&gt;&lt;a href=&quot;file#pathSeparatorChar&quot;&gt;&lt;code&gt;pathSeparatorChar&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">システムに依存するパス区切り文字。便宜上文字列として表されます。この文字列には、1つの文字、つまり &lt;code&gt;&lt;a href=&quot;file#pathSeparatorChar&quot;&gt;&lt;code&gt;pathSeparatorChar&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; が含まれています。</target>
        </trans-unit>
        <trans-unit id="56704d0b0a7bdab899863fa1d0c2f23658372f6a" translate="yes" xml:space="preserve">
          <source>The system-dependent path-separator character.</source>
          <target state="translated">システム依存のパス区切り文字。</target>
        </trans-unit>
        <trans-unit id="79dc28fe296e6f9a3e10386e77dffcce367aaf90" translate="yes" xml:space="preserve">
          <source>The system-dependent path-separator character. This field is initialized to contain the first character of the value of the system property &lt;code&gt;path.separator&lt;/code&gt;. This character is used to separate filenames in a sequence of files given as a &lt;em&gt;path list&lt;/em&gt;. On UNIX systems, this character is &lt;code&gt;':'&lt;/code&gt;; on Microsoft Windows systems it is &lt;code&gt;';'&lt;/code&gt;.</source>
          <target state="translated">システム依存のパス区切り文字。このフィールドは、システムプロパティ &lt;code&gt;path.separator&lt;/code&gt; の値の最初の文字を含むように初期化されます。この文字は、&lt;em&gt;パスリスト&lt;/em&gt;として指定された一連のファイルでファイル名を区切るために使用されます。 UNIXシステムでは、この文字は &lt;code&gt;':'&lt;/code&gt; です。 Microsoft Windowsシステムでは &lt;code&gt;';'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="518a2fc9a68e3f3d5382e5d1a00ce498fcc2e594" translate="yes" xml:space="preserve">
          <source>The system-wide default AsynchronousChannel provider</source>
          <target state="translated">システム全体のデフォルトの AsynchronousChannel プロバイダ</target>
        </trans-unit>
        <trans-unit id="0f461893764b32c9834282b1f614f9186ccf0cf0" translate="yes" xml:space="preserve">
          <source>The system-wide default provider is used by the static &lt;code&gt;open&lt;/code&gt; methods of the &lt;a href=&quot;../datagramchannel#open()&quot;&gt;&lt;code&gt;DatagramChannel&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../pipe#open()&quot;&gt;&lt;code&gt;Pipe&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../selector#open()&quot;&gt;&lt;code&gt;Selector&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../serversocketchannel#open()&quot;&gt;&lt;code&gt;ServerSocketChannel&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../socketchannel#open()&quot;&gt;&lt;code&gt;SocketChannel&lt;/code&gt;&lt;/a&gt; classes. It is also used by the &lt;a href=&quot;../../../lang/system#inheritedChannel()&quot;&gt;&lt;code&gt;System.inheritedChannel()&lt;/code&gt;&lt;/a&gt; method. A program may make use of a provider other than the default provider by instantiating that provider and then directly invoking the &lt;code&gt;open&lt;/code&gt; methods defined in this class.</source>
          <target state="translated">システム全体のデフォルトプロバイダーは、&lt;a href=&quot;../datagramchannel#open()&quot;&gt; &lt;code&gt;DatagramChannel&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../pipe#open()&quot;&gt; &lt;code&gt;Pipe&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../selector#open()&quot;&gt; &lt;code&gt;Selector&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../serversocketchannel#open()&quot;&gt; &lt;code&gt;ServerSocketChannel&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../socketchannel#open()&quot;&gt; &lt;code&gt;SocketChannel&lt;/code&gt; &lt;/a&gt;クラスの静的 &lt;code&gt;open&lt;/code&gt; メソッドによって使用されます。&lt;a href=&quot;../../../lang/system#inheritedChannel()&quot;&gt; &lt;code&gt;System.inheritedChannel()&lt;/code&gt; &lt;/a&gt;メソッドでも使用されます。プログラムは、デフォルトプロバイダー以外のプロバイダーをインスタンス化してから、このクラスで定義されている &lt;code&gt;open&lt;/code&gt; メソッドを直接呼び出すことにより、そのプロバイダーを利用できます。</target>
        </trans-unit>
        <trans-unit id="7e7874d4b84773bdddf3caf1a22fc6b1ddcdb68c" translate="yes" xml:space="preserve">
          <source>The system-wide default provider is used by the static &lt;code&gt;open&lt;/code&gt; methods of the &lt;a href=&quot;../datagramchannel#open--&quot;&gt;&lt;code&gt;DatagramChannel&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../pipe#open--&quot;&gt;&lt;code&gt;Pipe&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../selector#open--&quot;&gt;&lt;code&gt;Selector&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../serversocketchannel#open--&quot;&gt;&lt;code&gt;ServerSocketChannel&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../socketchannel#open--&quot;&gt;&lt;code&gt;SocketChannel&lt;/code&gt;&lt;/a&gt; classes. It is also used by the &lt;a href=&quot;../../../lang/system#inheritedChannel--&quot;&gt;&lt;code&gt;System.inheritedChannel()&lt;/code&gt;&lt;/a&gt; method. A program may make use of a provider other than the default provider by instantiating that provider and then directly invoking the &lt;code&gt;open&lt;/code&gt; methods defined in this class.</source>
          <target state="translated">システム全体のデフォルトプロバイダーは、&lt;a href=&quot;../datagramchannel#open--&quot;&gt; &lt;code&gt;DatagramChannel&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../pipe#open--&quot;&gt; &lt;code&gt;Pipe&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../selector#open--&quot;&gt; &lt;code&gt;Selector&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../serversocketchannel#open--&quot;&gt; &lt;code&gt;ServerSocketChannel&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../socketchannel#open--&quot;&gt; &lt;code&gt;SocketChannel&lt;/code&gt; &lt;/a&gt;クラスの静的な &lt;code&gt;open&lt;/code&gt; メソッドによって使用されます。また、&lt;a href=&quot;../../../lang/system#inheritedChannel--&quot;&gt; &lt;code&gt;System.inheritedChannel()&lt;/code&gt; &lt;/a&gt;メソッドでも使用されます。プログラムは、デフォルトのプロバイダー以外のプロバイダーを利用する場合があります。そのプロバイダーをインスタンス化し、このクラスで定義されている &lt;code&gt;open&lt;/code&gt; メソッドを直接呼び出します。</target>
        </trans-unit>
        <trans-unit id="1854b090241392edcc60935113761df6965da7c2" translate="yes" xml:space="preserve">
          <source>The system-wide default selector provider</source>
          <target state="translated">システム全体のデフォルトセレクタプロバイダ</target>
        </trans-unit>
        <trans-unit id="95bf3ad30c8dc77c99ea4e641b49758e0b289c1f" translate="yes" xml:space="preserve">
          <source>The system-wide default values are retrieved at the time the &lt;code&gt;HttpClient&lt;/code&gt; instance is constructed. Changing the system-wide values after an &lt;code&gt;HttpClient&lt;/code&gt; instance has been built, for instance, by calling &lt;a href=&quot;../../../../java.base/java/net/proxyselector#setDefault(java.net.ProxySelector)&quot;&gt;&lt;code&gt;ProxySelector.setDefault(ProxySelector)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslcontext#setDefault(javax.net.ssl.SSLContext)&quot;&gt;&lt;code&gt;SSLContext.setDefault(SSLContext)&lt;/code&gt;&lt;/a&gt;, has no effect on already built instances.</source>
          <target state="translated">システム全体のデフォルト値は、 &lt;code&gt;HttpClient&lt;/code&gt; インスタンスの構築時に取得されます。たとえば、&lt;a href=&quot;../../../../java.base/java/net/proxyselector#setDefault(java.net.ProxySelector)&quot;&gt; &lt;code&gt;ProxySelector.setDefault(ProxySelector)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../../../java.base/javax/net/ssl/sslcontext#setDefault(javax.net.ssl.SSLContext)&quot;&gt; &lt;code&gt;SSLContext.setDefault(SSLContext)&lt;/code&gt; を&lt;/a&gt;呼び出して、 &lt;code&gt;HttpClient&lt;/code&gt; インスタンスが構築された後にシステム全体の値を変更しても、すでに構築されているインスタンスには影響しません。</target>
        </trans-unit>
        <trans-unit id="b245a40ab8beba1018593de4068b70324a8a9b7f" translate="yes" xml:space="preserve">
          <source>The systemID of the Result is implementation dependent.</source>
          <target state="translated">結果の systemID は実装に依存します。</target>
        </trans-unit>
        <trans-unit id="03cfd5043423fd52868491470982807b0134453d" translate="yes" xml:space="preserve">
          <source>The systemID that was set with &lt;a href=&quot;#setSystemId(java.lang.String)&quot;&gt;&lt;code&gt;setSystemId(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#setSystemId(java.lang.String)&quot;&gt; &lt;code&gt;setSystemId(java.lang.String)&lt;/code&gt; で&lt;/a&gt;設定されたsystemID。</target>
        </trans-unit>
        <trans-unit id="a1045e7af40ef3b112d277437311ac29c399a948" translate="yes" xml:space="preserve">
          <source>The tab character (&lt;code&gt;'\u0009'&lt;/code&gt;)</source>
          <target state="translated">タブ文字（ &lt;code&gt;'\u0009'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="724f41c531f5aa59b222eabf7abf5a6c43d9e2c4" translate="yes" xml:space="preserve">
          <source>The tab layout policy for wrapping tabs in multiple runs when all tabs will not fit within a single run.</source>
          <target state="translated">すべてのタブが1つのラン内に収まらない場合に、複数のラン内でタブをラップするためのタブレイアウトポリシー。</target>
        </trans-unit>
        <trans-unit id="199233d8422b6532357239677c0d77118df3b357" translate="yes" xml:space="preserve">
          <source>The tab pane</source>
          <target state="translated">タブペイン</target>
        </trans-unit>
        <trans-unit id="50f511f50ec79dac8854d97e6e1fc6b46ec9821b" translate="yes" xml:space="preserve">
          <source>The tab title can be rendered by a &lt;code&gt;Component&lt;/code&gt;. For example, the following produce similar results:</source>
          <target state="translated">タブタイトルは、 &lt;code&gt;Component&lt;/code&gt; によってレンダリングできます。たとえば、次の場合も同様の結果が得られます。</target>
        </trans-unit>
        <trans-unit id="70b6d74a75747576812470d4e1829a1958e25ff9" translate="yes" xml:space="preserve">
          <source>The table below defines the mapping between XML Schema 1.0 date/time datatype fields and this class' fields. It also summarizes the value constraints for the date and time fields defined in &lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#isoformats&quot;&gt;W3C XML Schema 1.0 Part 2, Appendix D, &lt;i&gt;ISO 8601 Date and Time Formats&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">次の表は、XMLスキーマ1.0の日付/時刻データ型フィールドとこのクラスのフィールドの間のマッピングを定義しています。また、&lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#isoformats&quot;&gt;W3C XMLスキーマ1.0パート2、付録D、&lt;i&gt;ISO8601の日付と時刻の形式で&lt;/i&gt;&lt;/a&gt;定義されている日付と時刻のフィールドの値の制約についても要約します。</target>
        </trans-unit>
        <trans-unit id="956c09a6d0ea87af6414b81e63f37ed614bbe89f" translate="yes" xml:space="preserve">
          <source>The table below lists all the printing attributes. The table shows the tagging interfaces each attribute class implements in addition to interface &lt;a href=&quot;../attribute&quot;&gt; Attribute&lt;/a&gt;, thus indicating how each attribute is used in the API. For each doc attribute and print request attribute, the column marked &quot;SupportedValuesAttribute&quot; lists the supported-values attribute class, if any, with which a print service indicates the supported values for that attribute category.</source>
          <target state="translated">次の表に、すべての印刷属性を示します。この表は、インターフェース&lt;a href=&quot;../attribute&quot;&gt;Attribute&lt;/a&gt;に加えて、各属性クラスが実装するタグ付けインターフェースを示しています。したがって、各属性がAPIでどのように使用されるかを示しています。各doc属性および印刷要求属性について、「SupportedValuesAttribute」とマークされた列には、サポートされている値の属性クラスが一覧表示されます。</target>
        </trans-unit>
        <trans-unit id="287f71a5c4a7b8e7e0742c0ff2ef999a33855d9e" translate="yes" xml:space="preserve">
          <source>The table below lists possible effective values if a certain capability is requested, i.e.</source>
          <target state="translated">以下の表は、特定のケイパビリティが要求された場合の有効な値を示しています。</target>
        </trans-unit>
        <trans-unit id="cf06ceead298594cb308f75d4760c64b1d7032fe" translate="yes" xml:space="preserve">
          <source>The table below shows the effects of specifying a Chromaticity attribute of &lt;a href=&quot;#MONOCHROME&quot;&gt;&lt;code&gt;MONOCHROME&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#COLOR&quot;&gt;&lt;code&gt;COLOR&lt;/code&gt;&lt;/a&gt; for a monochrome or color document.</source>
          <target state="translated">次の表は、モノクロまたはカラーのドキュメントに&lt;a href=&quot;#MONOCHROME&quot;&gt; &lt;code&gt;MONOCHROME&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#COLOR&quot;&gt; &lt;code&gt;COLOR&lt;/code&gt; の&lt;/a&gt;色度属性を指定した場合の影響を示しています。</target>
        </trans-unit>
        <trans-unit id="93b17809af88bed6b165bc41c7cce6b651c3dd33" translate="yes" xml:space="preserve">
          <source>The table below shows the effects of specifying a Chromaticity attribute of &lt;a href=&quot;chromaticity#MONOCHROME&quot;&gt;&lt;code&gt;MONOCHROME&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;chromaticity#COLOR&quot;&gt;&lt;code&gt;COLOR&lt;/code&gt;&lt;/a&gt; for a monochrome or color document.</source>
          <target state="translated">次の表は、モノクロまたはカラーのドキュメントに対して&lt;a href=&quot;chromaticity#MONOCHROME&quot;&gt; &lt;code&gt;MONOCHROME&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;chromaticity#COLOR&quot;&gt; &lt;code&gt;COLOR&lt;/code&gt; の&lt;/a&gt;色度属性を指定した場合の効果を示しています。</target>
        </trans-unit>
        <trans-unit id="6550573ca0506c03709606c1bdd17da7666522cf" translate="yes" xml:space="preserve">
          <source>The table below summarizes which kind of annotation presence different methods in this interface examine.</source>
          <target state="translated">以下の表は、このインターフェイスの異なるメソッドがどのようなアノテーションの存在を示すかをまとめたものです。</target>
        </trans-unit>
        <trans-unit id="0785827f1aca709e13a4cfacab1b11dec6fe1d51" translate="yes" xml:space="preserve">
          <source>The table draws horizontal lines between cells if &lt;code&gt;showHorizontalLines&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;showHorizontalLines&lt;/code&gt; がtrueの場合、テーブルはセル間に水平線を描画します。</target>
        </trans-unit>
        <trans-unit id="cc764edbccef2f5a651977b7ffdec182e128fba7" translate="yes" xml:space="preserve">
          <source>The table draws vertical lines between cells if &lt;code&gt;showVerticalLines&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;showVerticalLines&lt;/code&gt; がtrueの場合、テーブルはセル間に垂直線を描画します。</target>
        </trans-unit>
        <trans-unit id="d46376b57361e34cc862402a3ff75bfa5957b99c" translate="yes" xml:space="preserve">
          <source>The table for which this object is the header; the default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このオブジェクトがヘッダーであるテーブル。デフォルトは &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="affe517f34332866171ca57d9e9e5b23870e7f83" translate="yes" xml:space="preserve">
          <source>The table is dynamically expanded when there are too many collisions (i.e., keys that have distinct hash codes but fall into the same slot modulo the table size), with the expected average effect of maintaining roughly two bins per mapping (corresponding to a 0.75 load factor threshold for resizing). There may be much variance around this average as mappings are added and removed, but overall, this maintains a commonly accepted time/space tradeoff for hash tables. However, resizing this or any other kind of hash table may be a relatively slow operation. When possible, it is a good idea to provide a size estimate as an optional &lt;code&gt;
 initialCapacity&lt;/code&gt; constructor argument. An additional optional &lt;code&gt;loadFactor&lt;/code&gt; constructor argument provides a further means of customizing initial table capacity by specifying the table density to be used in calculating the amount of space to allocate for the given number of elements. Also, for compatibility with previous versions of this class, constructors may optionally specify an expected &lt;code&gt;concurrencyLevel&lt;/code&gt; as an additional hint for internal sizing. Note that using many keys with exactly the same &lt;code&gt;hashCode()&lt;/code&gt; is a sure way to slow down performance of any hash table. To ameliorate impact, when keys are &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;, this class may use comparison order among keys to help break ties.</source>
          <target state="translated">衝突が多すぎる場合（つまり、異なるハッシュコードを持つが、テーブルサイズを法として同じスロットに分類されるキー）、テーブルは動的に拡張され、マッピングごとに約2つのビンを維持するという期待される平均効果（0.75の負荷に対応）サイズ変更の係数しきい値）。マッピングが追加および削除されると、この平均の周りに多くの変動がある可能性がありますが、全体として、これはハッシュテーブルの一般的に受け入れられている時間/空間のトレードオフを維持します。ただし、このハッシュテーブルまたは他の種類のハッシュテーブルのサイズを変更すると、操作が比較的遅くなる可能性があります。可能であれば、オプションの &lt;code&gt; initialCapacity&lt;/code&gt; コンストラクター引数としてサイズの見積もりを提供することをお勧めします。追加のオプションの &lt;code&gt;loadFactor&lt;/code&gt; コンストラクター引数は、指定された数の要素に割り当てるスペースの量を計算する際に使用されるテーブル密度を指定することにより、初期テーブル容量をカスタマイズするためのさらなる手段を提供します。また、このクラスの以前のバージョンとの互換性のために、コンストラクターはオプションで、内部サイズ設定の追加ヒントとして予想される &lt;code&gt;concurrencyLevel&lt;/code&gt; を指定できます。まったく同じ &lt;code&gt;hashCode()&lt;/code&gt; で多くのキーを使用することは、ハッシュテーブルのパフォーマンスを低下させる確実な方法であることに注意してください。影響を改善するために、キーが&lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; の&lt;/a&gt;場合、このクラスはキー間の比較順序を使用して、関係を解消するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="abdfbcd8569ed822dbb9b0566e80bdcdfb0ce663" translate="yes" xml:space="preserve">
          <source>The table is dynamically expanded when there are too many collisions (i.e., keys that have distinct hash codes but fall into the same slot modulo the table size), with the expected average effect of maintaining roughly two bins per mapping (corresponding to a 0.75 load factor threshold for resizing). There may be much variance around this average as mappings are added and removed, but overall, this maintains a commonly accepted time/space tradeoff for hash tables. However, resizing this or any other kind of hash table may be a relatively slow operation. When possible, it is a good idea to provide a size estimate as an optional &lt;code&gt;initialCapacity&lt;/code&gt; constructor argument. An additional optional &lt;code&gt;loadFactor&lt;/code&gt; constructor argument provides a further means of customizing initial table capacity by specifying the table density to be used in calculating the amount of space to allocate for the given number of elements. Also, for compatibility with previous versions of this class, constructors may optionally specify an expected &lt;code&gt;concurrencyLevel&lt;/code&gt; as an additional hint for internal sizing. Note that using many keys with exactly the same &lt;code&gt;hashCode()&lt;/code&gt; is a sure way to slow down performance of any hash table. To ameliorate impact, when keys are &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;, this class may use comparison order among keys to help break ties.</source>
          <target state="translated">衝突が多すぎる場合（つまり、異なるハッシュコードを持っているが、テーブルサイズと同じスロットに該当するキー）、マッピングごとにおよそ2つのビンを維持することで期待される平均効果（0.75の負荷に対応）がある場合、テーブルは動的に拡張されます。サイズ変更の係数しきい値）。マッピングが追加および削除されると、この平均の周りに大きな差異が生じる可能性がありますが、全体として、これはハッシュテーブルの一般的に受け入れられている時間/空間のトレードオフを維持します。ただし、このハッシュテーブルまたは他の種類のハッシュテーブルのサイズを変更すると、処理が比較的遅くなる場合があります。可能であれば、オプションの &lt;code&gt;initialCapacity&lt;/code&gt; コンストラクター引数としてサイズの見積もりを提供することをお勧めします。追加のオプションの &lt;code&gt;loadFactor&lt;/code&gt; コンストラクター引数は、指定された数の要素に割り当てるスペースの量を計算する際に使用されるテーブル密度を指定することにより、初期テーブル容量をカスタマイズするさらなる手段を提供します。また、このクラスの以前のバージョンとの互換性のために、コンストラクターはオプションで、予想される &lt;code&gt;concurrencyLevel&lt;/code&gt; を内部サイジングの追加のヒントとして指定できます。まったく同じ &lt;code&gt;hashCode()&lt;/code&gt; で多くのキーを使用することは、ハッシュテーブルのパフォーマンスを低下させる確実な方法であることに注意してください。インパクトを改善するために、キーが&lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; の&lt;/a&gt;場合、このクラスはキー間の比較順序を使用して、結びつきを解消することができます。</target>
        </trans-unit>
        <trans-unit id="807c7f2278f08fd9a560612599a053ac4a77aa0b" translate="yes" xml:space="preserve">
          <source>The table of key properties.</source>
          <target state="translated">キープロパティの表です。</target>
        </trans-unit>
        <trans-unit id="29c2e665a3b18a1ce29ba700eb12bfe8ef2d57b7" translate="yes" xml:space="preserve">
          <source>The table type is:</source>
          <target state="translated">テーブルタイプです。</target>
        </trans-unit>
        <trans-unit id="e72d6ec95379480e6ddcff8a30f3ae018d25f5a5" translate="yes" xml:space="preserve">
          <source>The table will query the &lt;code&gt;TableModel&lt;/code&gt; to build the default set of columns if this is true.</source>
          <target state="translated">これがtrueの場合、テーブルは &lt;code&gt;TableModel&lt;/code&gt; にクエリを実行して、デフォルトの列セットを作成します。</target>
        </trans-unit>
        <trans-unit id="4b683043db5214bb3bb29c225b881df7d62a7411" translate="yes" xml:space="preserve">
          <source>The tag number.</source>
          <target state="translated">タグの番号です。</target>
        </trans-unit>
        <trans-unit id="e3034177648d7a592ed4b995252076ff2a379e97" translate="yes" xml:space="preserve">
          <source>The tag values for this property. May be null if this property cannot be represented as a tagged value.</source>
          <target state="translated">このプロパティのタグ値。このプロパティをタグ付きの値として表現できない場合は、null にすることができます。</target>
        </trans-unit>
        <trans-unit id="b446899d309ae9229be1541a42b9d0cf00a0ac6b" translate="yes" xml:space="preserve">
          <source>The target and cleanup must return the same type, even if the cleanup always throws. To create such a throwing cleanup, compose the cleanup logic with &lt;a href=&quot;#throwException(java.lang.Class,java.lang.Class)&quot;&gt;&lt;code&gt;throwException&lt;/code&gt;&lt;/a&gt;, in order to create a method handle of the correct return type.</source>
          <target state="translated">クリーンアップが常にスローされる場合でも、ターゲットとクリーンアップは同じタイプを返す必要があります。このようなスロークリーンアップを作成するには、&lt;a href=&quot;#throwException(java.lang.Class,java.lang.Class)&quot;&gt; &lt;code&gt;throwException&lt;/code&gt; &lt;/a&gt;を使用してクリーンアップロジックを作成し、正しい戻り値の型のメソッドハンドルを作成します。</target>
        </trans-unit>
        <trans-unit id="02cefdef6f6fd1cf2781c5dd156f06c3b67ffe8b" translate="yes" xml:space="preserve">
          <source>The target and fallback must be of exactly the same method type, and the resulting combined method handle will also be of this type.</source>
          <target state="translated">ターゲットとフォールバックは全く同じメソッドタイプでなければならず、結果として結合されたメソッドハンドルもこのタイプになります。</target>
        </trans-unit>
        <trans-unit id="f42cc55413084526e1a3b93e74bf70c3317cb6fa" translate="yes" xml:space="preserve">
          <source>The target and handler must have the same corresponding argument and return types, except that handler may omit trailing arguments (similarly to the predicate in &lt;a href=&quot;#guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)&quot;&gt;&lt;code&gt;guardWithTest&lt;/code&gt;&lt;/a&gt;). Also, the handler must have an extra leading parameter of &lt;code&gt;exType&lt;/code&gt; or a supertype.</source>
          <target state="translated">ターゲットとハンドラーは、対応する引数と戻り値の型が同じである必要があります。ただし、ハンドラーは末尾の引数を省略できます（&lt;a href=&quot;#guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)&quot;&gt; &lt;code&gt;guardWithTest&lt;/code&gt; &lt;/a&gt;の述語と同様）。また、ハンドラーには、 &lt;code&gt;exType&lt;/code&gt; またはスーパータイプの追加の先行パラメーターが必要です。</target>
        </trans-unit>
        <trans-unit id="cfe18dce3e23910cc798ebbf8a13a2dd958ea48f" translate="yes" xml:space="preserve">
          <source>The target and handler must have the same corresponding argument and return types, except that handler may omit trailing arguments (similarly to the predicate in &lt;a href=&quot;methodhandles#guardWithTest-java.lang.invoke.MethodHandle-java.lang.invoke.MethodHandle-java.lang.invoke.MethodHandle-&quot;&gt;&lt;code&gt;guardWithTest&lt;/code&gt;&lt;/a&gt;). Also, the handler must have an extra leading parameter of &lt;code&gt;exType&lt;/code&gt; or a supertype.</source>
          <target state="translated">ターゲットとハンドラーは、対応する引数と戻り値の型が同じでなければなりませんが、ハンドラーは末尾の引数を省略できる場合があります（&lt;a href=&quot;methodhandles#guardWithTest-java.lang.invoke.MethodHandle-java.lang.invoke.MethodHandle-java.lang.invoke.MethodHandle-&quot;&gt; &lt;code&gt;guardWithTest&lt;/code&gt; &lt;/a&gt;の述語と同様）。また、ハンドラーには、 &lt;code&gt;exType&lt;/code&gt; またはスーパータイプの追加の先行パラメーターが必要です。</target>
        </trans-unit>
        <trans-unit id="e01418ac4cb37a5ae8fb9a819eaaca5266eb99c3" translate="yes" xml:space="preserve">
          <source>The target and handler must return the same type, even if the handler always throws. (This might happen, for instance, because the handler is simulating a &lt;code&gt;finally&lt;/code&gt; clause). To create such a throwing handler, compose the handler creation logic with &lt;a href=&quot;#throwException(java.lang.Class,java.lang.Class)&quot;&gt;&lt;code&gt;throwException&lt;/code&gt;&lt;/a&gt;, in order to create a method handle of the correct return type.</source>
          <target state="translated">ハンドラーが常にスローする場合でも、ターゲットとハンドラーは同じタイプを返す必要があります。（これは、たとえば、ハンドラーが &lt;code&gt;finally&lt;/code&gt; 節をシミュレートしているために発生する可能性があります）。このようなスローハンドラーを作成するには、正しい戻り値の型のメソッドハンドルを作成するために、&lt;a href=&quot;#throwException(java.lang.Class,java.lang.Class)&quot;&gt; &lt;code&gt;throwException&lt;/code&gt; &lt;/a&gt;を使用してハンドラー作成ロジックを作成します。</target>
        </trans-unit>
        <trans-unit id="44e11701adb06063c652521aa85aae71912799bf" translate="yes" xml:space="preserve">
          <source>The target and handler must return the same type, even if the handler always throws. (This might happen, for instance, because the handler is simulating a &lt;code&gt;finally&lt;/code&gt; clause). To create such a throwing handler, compose the handler creation logic with &lt;a href=&quot;methodhandles#throwException-java.lang.Class-java.lang.Class-&quot;&gt;&lt;code&gt;throwException&lt;/code&gt;&lt;/a&gt;, in order to create a method handle of the correct return type.</source>
          <target state="translated">ハンドラーが常にスローする場合でも、ターゲットとハンドラーは同じ型を返す必要があります。（これは、例えば、ハンドラーが &lt;code&gt;finally&lt;/code&gt; 節をシミュレートしているために発生する可能性があります）。このようなスローハンドラーを作成するには、&lt;a href=&quot;methodhandles#throwException-java.lang.Class-java.lang.Class-&quot;&gt; &lt;code&gt;throwException&lt;/code&gt; &lt;/a&gt;を使用してハンドラー作成ロジックを作成し、正しい戻りの型のメソッドハンドルを作成します。</target>
        </trans-unit>
        <trans-unit id="6331eb65cfaeb17d610de47a1492d63404554822" translate="yes" xml:space="preserve">
          <source>The target component.</source>
          <target state="translated">対象となるコンポーネント。</target>
        </trans-unit>
        <trans-unit id="a48909c6d391288fca7020961e9c52b23bc4c69d" translate="yes" xml:space="preserve">
          <source>The target component. This indicates the component over which the event occurred or with which the event is associated. This object has been replaced by AWTEvent.getSource()</source>
          <target state="translated">対象となるコンポーネント。これは、イベントが発生したコンポーネント、またはイベントが関連付けられたコンポーネントを示します。このオブジェクトはAWTEvent.getSource()で置き換えられました。</target>
        </trans-unit>
        <trans-unit id="41cfd1c3c3da57cda5880021b389e8ff6e52178e" translate="yes" xml:space="preserve">
          <source>The target data line can be obtained from a mixer by invoking the &lt;a href=&quot;mixer#getLine(javax.sound.sampled.Line.Info)&quot;&gt;&lt;code&gt;getLine&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Mixer&lt;/code&gt; with an appropriate &lt;a href=&quot;dataline.info&quot;&gt;&lt;code&gt;DataLine.Info&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">ターゲットデータラインは、適切な&lt;a href=&quot;dataline.info&quot;&gt; &lt;code&gt;DataLine.Info&lt;/code&gt; &lt;/a&gt;オブジェクトを使用して &lt;code&gt;Mixer&lt;/code&gt; の&lt;a href=&quot;mixer#getLine(javax.sound.sampled.Line.Info)&quot;&gt; &lt;code&gt;getLine&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、ミキサーから取得できます。</target>
        </trans-unit>
        <trans-unit id="294becfa926713ae4f4611aad1c89088d4f17efe" translate="yes" xml:space="preserve">
          <source>The target data line can be obtained from a mixer by invoking the &lt;code&gt;&lt;a href=&quot;mixer#getLine-javax.sound.sampled.Line.Info-&quot;&gt;&lt;code&gt;getLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;Mixer&lt;/code&gt; with an appropriate &lt;code&gt;&lt;a href=&quot;dataline.info&quot;&gt;&lt;code&gt;DataLine.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">ターゲットデータラインは、適切な &lt;code&gt;&lt;a href=&quot;dataline.info&quot;&gt;&lt;code&gt;DataLine.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; オブジェクトを使用して &lt;code&gt;Mixer&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;mixer#getLine-javax.sound.sampled.Line.Info-&quot;&gt;&lt;code&gt;getLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドを呼び出すことにより、ミキサーから取得できます。</target>
        </trans-unit>
        <trans-unit id="2e92be738dd320065c504e7c597383304da41f9b" translate="yes" xml:space="preserve">
          <source>The target format represents the format of the processed, converted audio data. This is the format of the data that can be read from the stream returned by one of the &lt;code&gt;getAudioInputStream&lt;/code&gt; methods.</source>
          <target state="translated">ターゲットフォーマットは、処理され、変換されたオーディオデータのフォーマットを表します。これは、いずれかの &lt;code&gt;getAudioInputStream&lt;/code&gt; メソッドによって返されたストリームから読み取ることができるデータの形式です。</target>
        </trans-unit>
        <trans-unit id="e7de801befb3afea6c0cedebce5ac02cc3cf8db7" translate="yes" xml:space="preserve">
          <source>The target handle has the parameter type list &lt;code&gt;S..., M...&lt;/code&gt;, with as many types in &lt;code&gt;S&lt;/code&gt; as indicated by &lt;code&gt;skip&lt;/code&gt;. The &lt;code&gt;M&lt;/code&gt; types are those that are supposed to match part of the given type list, &lt;code&gt;newTypes&lt;/code&gt;.</source>
          <target state="translated">ターゲットハンドルには、パラメータタイプリスト &lt;code&gt;S..., M...&lt;/code&gt; 、 &lt;code&gt;S&lt;/code&gt; で &lt;code&gt;skip&lt;/code&gt; 示される数のタイプがあります。 &lt;code&gt;M&lt;/code&gt; の種類は、特定のタイプのリストの一部、一致することになっているものである &lt;code&gt;newTypes&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="03b0fb3903bf8315a0952c04b4865416cb3c9b29" translate="yes" xml:space="preserve">
          <source>The target height to scale the image.</source>
          <target state="translated">画像を拡大縮小するための目標の高さ。</target>
        </trans-unit>
        <trans-unit id="61ee1882c6fbd7985ddaac74fcc91b429f418e8c" translate="yes" xml:space="preserve">
          <source>The target name is of the form &quot;&lt;code&gt;className#member[objectName]&lt;/code&gt;&quot; where each part is optional. It must not be empty or null.</source>
          <target state="translated">ターゲット名の形式は「 &lt;code&gt;className#member[objectName]&lt;/code&gt; 」で、各部分はオプションです。空またはnullであってはなりません。</target>
        </trans-unit>
        <trans-unit id="ce62a8e103e81312eae100e20ed400ca3da9c713" translate="yes" xml:space="preserve">
          <source>The target name is the name of a security configuration parameter (see below). Currently the &lt;code&gt;AuthPermission&lt;/code&gt; object is used to guard access to the &lt;a href=&quot;subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;login/logincontext&quot;&gt;&lt;code&gt;LoginContext&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;login/configuration&quot;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">ターゲット名は、セキュリティ構成パラメーターの名前です（以下を参照）。現在、 &lt;code&gt;AuthPermission&lt;/code&gt; オブジェクトは、&lt;a href=&quot;subject&quot;&gt; &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;login/logincontext&quot;&gt; &lt;code&gt;LoginContext&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;login/configuration&quot;&gt; &lt;code&gt;Configuration&lt;/code&gt; &lt;/a&gt;オブジェクトへのアクセスを保護するために使用されています。</target>
        </trans-unit>
        <trans-unit id="c855fc5f9080ecc03acfbcb7e0983b870dcc2a70" translate="yes" xml:space="preserve">
          <source>The target name is the name of a security configuration parameter (see below). Currently the &lt;code&gt;SecurityPermission&lt;/code&gt; object is used to guard access to the &lt;a href=&quot;accesscontrolcontext&quot;&gt;&lt;code&gt;AccessControlContext&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;provider&quot;&gt;&lt;code&gt;Provider&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;security&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;signer&quot;&gt;&lt;code&gt;Signer&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;identity&quot;&gt;&lt;code&gt;Identity&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">ターゲット名は、セキュリティ構成パラメーターの名前です（以下を参照）。現在、 &lt;code&gt;SecurityPermission&lt;/code&gt; オブジェクトは、&lt;a href=&quot;accesscontrolcontext&quot;&gt; &lt;code&gt;AccessControlContext&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;provider&quot;&gt; &lt;code&gt;Provider&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;security&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;signer&quot;&gt; &lt;code&gt;Signer&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;identity&quot;&gt; &lt;code&gt;Identity&lt;/code&gt; &lt;/a&gt;オブジェクトへのアクセスを保護するために使用されています。</target>
        </trans-unit>
        <trans-unit id="7928d48cbde0bd5806a16e749b843ab056e2bff2" translate="yes" xml:space="preserve">
          <source>The target name is the name of a security configuration parameter (see below). Currently the AuthPermission object is used to guard access to the Policy, Subject, LoginContext, and Configuration objects.</source>
          <target state="translated">ターゲット名は、セキュリティ構成パラメータの名前です (後述)。現在、AuthPermission オブジェクトは、Policy、Subject、LoginContext、および Configuration オブジェクトへのアクセスを保護するために使用されています。</target>
        </trans-unit>
        <trans-unit id="2890f709a91749b2fe10e52fd580bddb149e0444" translate="yes" xml:space="preserve">
          <source>The target name is the name of a security configuration parameter (see below). Currently the SecurityPermission object is used to guard access to the Policy, Security, Provider, Signer, and Identity objects.</source>
          <target state="translated">ターゲット名は、セキュリティ構成パラメータの名前です (以下を参照)。現在、SecurityPermission オブジェクトは、Policy、Security、Provider、Signer、および Identity オブジェクトへのアクセスを保護するために使用されます。</target>
        </trans-unit>
        <trans-unit id="17f38fb0c6986e5e7a83073a2ad1774730542b07" translate="yes" xml:space="preserve">
          <source>The target name is the name of the AWT permission (see below). The naming convention follows the hierarchical property naming convention. Also, an asterisk could be used to represent all AWT permissions.</source>
          <target state="translated">ターゲット名は、AWTパーミッションの名前です(後述)。命名規則は、階層的なプロパティの命名規則に従います。また、すべてのAWTパーミッションを表すためにアスタリスクを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="9e139ec2f3c65e0160a69e0966a9e12f3721fc07" translate="yes" xml:space="preserve">
          <source>The target name is the name of the Serializable permission (see below).</source>
          <target state="translated">ターゲット名は、Serializableパーミッションの名前です(後述)。</target>
        </trans-unit>
        <trans-unit id="1d4510b6174912a740c895643371245def2a4d9e" translate="yes" xml:space="preserve">
          <source>The target name is the name of the audio permission (see the table below). The names follow the hierarchical property-naming convention. Also, an asterisk can be used to represent all the audio permissions.</source>
          <target state="translated">ターゲット名は、オーディオパーミッションの名前です(下の表を参照)。名前は階層的なプロパティ命名規則に従います。また、すべてのオーディオパーミッションを表すためにアスタリスクを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="d8645249d279e7c3cf29a83a9b3bb1e507d282b4" translate="yes" xml:space="preserve">
          <source>The target name is the name of the authorization principal classname followed by a period and the authorization principal name, that is &lt;code&gt;&quot;&lt;em&gt;PrincipalClassName&lt;/em&gt;.&lt;em&gt;PrincipalName&lt;/em&gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">ターゲット名はピリオド承認主要なクラス名と認証プリンシパル名の名前である &lt;code&gt;&quot;&lt;em&gt;PrincipalClassName&lt;/em&gt;.&lt;em&gt;PrincipalName&lt;/em&gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1de21a429ece939c67b7e50829885099ad2d45eb" translate="yes" xml:space="preserve">
          <source>The target name is the name of the network permission (see below). The naming convention follows the hierarchical property naming convention. Also, an asterisk may appear at the end of the name, following a &quot;.&quot;, or by itself, to signify a wildcard match. For example: &quot;foo.*&quot; and &quot;*&quot; signify a wildcard match, while &quot;*foo&quot; and &quot;a*b&quot; do not.</source>
          <target state="translated">ターゲット名は、ネットワークパーミッションの名前です(後述)。この命名規則は、階層的なプロパティの命名規則に従います。また、名前の最後にアスタリスクを付ける場合は、「...」の後に付けるか、またはそれ自体でワイルドカード一致を示すためにアスタリスクを付けることができます。例えば、以下のようになります。&quot;foo.*&quot; と &quot;*&quot; はワイルドカードマッチを意味しますが、&quot;*foo&quot; と &quot;a*b&quot; はワイルドカードマッチを意味しません。</target>
        </trans-unit>
        <trans-unit id="35aa664b77bc8ac5af633fd3abfe001e77f837cd" translate="yes" xml:space="preserve">
          <source>The target name is the name of the runtime permission (see below). The naming convention follows the hierarchical property naming convention. Also, an asterisk may appear at the end of the name, following a &quot;.&quot;, or by itself, to signify a wildcard match. For example: &quot;loadLibrary.*&quot; and &quot;*&quot; signify a wildcard match, while &quot;*loadLibrary&quot; and &quot;a*b&quot; do not.</source>
          <target state="translated">ターゲット名は、ランタイムパーミッションの名前です(後述)。命名規則は、階層的なプロパティの命名規則に従う。また、名前の最後に「.」の後にアスタリスクを付けるか、またはそれ自体でワイルドカードの一致を示すためにアスタリスクを付けることができます。例えば、以下のようになります。&quot;loadLibrary.*&quot;と &quot;*&quot;はワイルドカード一致を意味しますが、&quot;*loadLibrary &quot;と &quot;a*b &quot;はワイルドカード一致を意味しません。</target>
        </trans-unit>
        <trans-unit id="d958abd00740d8b81aa7e7e8a7237d717e401b13" translate="yes" xml:space="preserve">
          <source>The target name of this &lt;code&gt;Permission&lt;/code&gt; specifies a Credential class name, and a Set of Principals. The only valid value for this Permission's actions is, &quot;read&quot;. The target name must abide by the following syntax:</source>
          <target state="translated">この &lt;code&gt;Permission&lt;/code&gt; のターゲット名は、資格情報クラス名とプリンシパルのセットを指定します。この権限のアクションの唯一の有効な値は、「読み取り」です。ターゲット名は、次の構文に従う必要があります。</target>
        </trans-unit>
        <trans-unit id="91a399d1980f8a6ccc96217289bf0be48ee37eb6" translate="yes" xml:space="preserve">
          <source>The target name of this &lt;code&gt;Permission&lt;/code&gt; specifies a pair of kerberos service principals. The first is the subordinate service principal being entrusted to use the TGT. The second service principal designates the target service the subordinate service principal is to interact with on behalf of the initiating KerberosPrincipal. This latter service principal is specified to restrict the use of a proxiable ticket.</source>
          <target state="translated">この &lt;code&gt;Permission&lt;/code&gt; のターゲット名は、Kerberosサービスプリンシパルのペアを指定します。1つ目は、TGTの使用を委託されている下位のサービスプリンシパルです。2番目のサービスプリンシパルは、下位のサービスプリンシパルが開始側のKerberosPrincipalの代わりに対話するターゲットサービスを指定します。この後者のサービスプリンシパルは、プロキシ可能なチケットの使用を制限するために指定されています。</target>
        </trans-unit>
        <trans-unit id="a69bc10fa3486dc0c871c21c9260fdc72fa60465" translate="yes" xml:space="preserve">
          <source>The target of the symbolic link</source>
          <target state="translated">シンボリックリンクの対象</target>
        </trans-unit>
        <trans-unit id="2c722da0815ce9e96b3f893e4617b9ba63277f4a" translate="yes" xml:space="preserve">
          <source>The target of this processing instruction.</source>
          <target state="translated">この処理命令の対象。</target>
        </trans-unit>
        <trans-unit id="161ea52ef7deec6ab2b397da40779879d17b9eba" translate="yes" xml:space="preserve">
          <source>The target of this processing instruction. XML defines this as being the first token following the markup that begins the processing instruction.</source>
          <target state="translated">この処理命令のターゲット。XMLでは、処理命令を開始するマークアップに続く最初のトークンとして定義されています。</target>
        </trans-unit>
        <trans-unit id="0fba2a96aca3512f3b2fa2ec8c997febf4ea99a4" translate="yes" xml:space="preserve">
          <source>The target property may also be &quot;qualified&quot; with an arbitrary number of property prefixs delimited with the &quot;.&quot; character. For example, the following action listener:</source>
          <target state="translated">ターゲットプロパティは、「...」文字で区切られた任意の数のプロパティ接頭辞で「修飾」することもできます。例えば、次のようなアクションリスナー。</target>
        </trans-unit>
        <trans-unit id="1d3891a04d782b20001436f81be88566164c49f9" translate="yes" xml:space="preserve">
          <source>The target screen mentioned below is a screen to which the window should be placed after the setLocationRelativeTo method is called.</source>
          <target state="translated">以下のターゲット画面は、setLocationRelativeToメソッドを呼び出した後にウィンドウを配置する画面です。</target>
        </trans-unit>
        <trans-unit id="c97110c6e47104527f8b4580cb3b4fa2f5426ed0" translate="yes" xml:space="preserve">
          <source>The target section of the processing instruction</source>
          <target state="translated">処理命令のターゲット部</target>
        </trans-unit>
        <trans-unit id="8a356eae8e68f37248d1a45a231f374ef9c3a79c" translate="yes" xml:space="preserve">
          <source>The target string buffer</source>
          <target state="translated">対象となる文字列バッファ</target>
        </trans-unit>
        <trans-unit id="ce314a2a38875a9da27cad30daa60b7f939567ca" translate="yes" xml:space="preserve">
          <source>The target string builder</source>
          <target state="translated">対象となる文字列ビルダー</target>
        </trans-unit>
        <trans-unit id="90b7bab6e96d93a1672aed421456af62833a888b" translate="yes" xml:space="preserve">
          <source>The target width to scale the image.</source>
          <target state="translated">画像を拡大縮小する対象の幅。</target>
        </trans-unit>
        <trans-unit id="0a63b487811a4aecdd285055ad083a6242c879eb" translate="yes" xml:space="preserve">
          <source>The task is &lt;a href=&quot;future#cancel(boolean)&quot;&gt;explicitly cancelled&lt;/a&gt; via the returned future.</source>
          <target state="translated">タスクは、返されたfutureを介して&lt;a href=&quot;future#cancel(boolean)&quot;&gt;明示的にキャンセルされ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ac13bf867264e56e3d64038eb74fe1bea028918f" translate="yes" xml:space="preserve">
          <source>The tc &lt;b&gt;must&lt;/b&gt; be in the range &lt;code&gt;0 &amp;lt;= tc &amp;lt;=
 255&lt;/code&gt; or an IllegalArgumentException will be thrown.</source>
          <target state="translated">tc &lt;b&gt;は&lt;/b&gt; &lt;code&gt;0 &amp;lt;= tc &amp;lt;= 255&lt;/code&gt; の範囲内で&lt;b&gt;なければなりません。&lt;/b&gt;そうで&lt;b&gt;ない&lt;/b&gt;場合、IllegalArgumentExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="351d171d0044484a95b6580add4a8d56a0b09177" translate="yes" xml:space="preserve">
          <source>The tempo-based timing type, for which the resolution is expressed in pulses (ticks) per quarter note.</source>
          <target state="translated">テンポベースのタイミングタイプで、分解能は4分音符あたりのパルス(ティック)で表されます。</target>
        </trans-unit>
        <trans-unit id="92a16bca2794be2e4d981e961e77157c978a16e0" translate="yes" xml:space="preserve">
          <source>The term &quot;blit&quot; is the pronounced version of the PDP-10 BLT (BLock Transfer) instruction, which copied a block of bits. (In case you were curious.)</source>
          <target state="translated">blit」という言葉は、PDP-10のBLT(BLock Transfer)命令の発音版で、ビットのブロックをコピーしたものです。(気になった方は念のため)。</target>
        </trans-unit>
        <trans-unit id="f2ec5ccb70e544f59fa930934598819b7960048f" translate="yes" xml:space="preserve">
          <source>The terms &lt;em&gt;directly present&lt;/em&gt;, &lt;em&gt;indirectly present&lt;/em&gt;, &lt;em&gt;present&lt;/em&gt;, and &lt;em&gt;associated&lt;/em&gt; are used throughout this interface to describe precisely which annotations are returned by methods:</source>
          <target state="translated">&lt;em&gt;直接存在する&lt;/em&gt;、&lt;em&gt;間接的に存在する&lt;/em&gt;、&lt;em&gt;存在する&lt;/em&gt;、および&lt;em&gt;関連&lt;/em&gt;するという用語は、メソッドによって返される注釈を正確に説明するために、このインターフェース全体で使用されています。</target>
        </trans-unit>
        <trans-unit id="7bc919453997f5f639ef67c31f748841da8f874b" translate="yes" xml:space="preserve">
          <source>The text attributes.</source>
          <target state="translated">テキストの属性です。</target>
        </trans-unit>
        <trans-unit id="5e5bbe231cb2211cfe2a7c06f4bc2ee771bc88c2" translate="yes" xml:space="preserve">
          <source>The text boundary returned from the above methods, first or last text boundary.</source>
          <target state="translated">上記のメソッドから返されたテキスト境界、最初のテキスト境界または最後のテキスト境界。</target>
        </trans-unit>
        <trans-unit id="8858d11b87b0f0a3e19ee86a888321a1258f017b" translate="yes" xml:space="preserve">
          <source>The text components have a model-view split. A text component pulls together the objects used to represent the model, view, and controller. The text document model may be shared by other views which act as observers of the model (e.g. a document may be shared by multiple components).</source>
          <target state="translated">テキストコンポーネントは、モデルとビューが分割されています。テキストコンポーネントは、モデル、ビュー、コントローラを表現するために使用されるオブジェクトをまとめています。テキスト文書モデルは、モデルのオブザーバーとして動作する他のビューによって共有されることがあります(例えば、文書は複数のコンポーネントによって共有されることがあります)。</target>
        </trans-unit>
        <trans-unit id="9f88b97ebbe499c00fc788624ded865b62c2d07e" translate="yes" xml:space="preserve">
          <source>The text components support flexible and internationalized text input, using keymaps and the input method framework, while maintaining compatibility with the AWT listener model.</source>
          <target state="translated">テキストコンポーネントは、AWTリスナーモデルとの互換性を維持しながら、キーマップと入力メソッドフレームワークを使用して、柔軟で国際化されたテキスト入力をサポートします。</target>
        </trans-unit>
        <trans-unit id="bb4bc96683614ed09586bda7da975dbd546cc010" translate="yes" xml:space="preserve">
          <source>The text cursor type.</source>
          <target state="translated">テキストカーソルタイプです。</target>
        </trans-unit>
        <trans-unit id="792c37abc4943eebd3bef907dbd09262f47b21d8" translate="yes" xml:space="preserve">
          <source>The text editing component also has to provide an input method event listener.</source>
          <target state="translated">テキスト編集コンポーネントは、入力メソッドのイベントリスナーも提供しなければなりません。</target>
        </trans-unit>
        <trans-unit id="68f58f74d3780f9460b9207f3ef04661f0ea9185" translate="yes" xml:space="preserve">
          <source>The text editing component also has to provide an instance of InputMethodRequests.</source>
          <target state="translated">また、テキスト編集コンポーネントはInputMethodRequestsのインスタンスを提供しなければなりません。</target>
        </trans-unit>
        <trans-unit id="abe46b84ee53a236c2700231fa5bd7581d2fd49f" translate="yes" xml:space="preserve">
          <source>The text included with the input method event consists of two parts: committed text and composed text. Either part may be empty. The two parts together replace any uncommitted composed text sent in previous events, or the currently selected committed text. Committed text should be integrated into the text component's persistent data, it will not be sent again. Composed text may be sent repeatedly, with changes to reflect the user's editing operations. Committed text always precedes composed text.</source>
          <target state="translated">入力メソッドイベントに含まれるテキストは、コミットされたテキストと構成されたテキストの 2 つの部分から構成されます。どちらの部分も空であっても構いません。この2つの部分は、以前のイベントで送信されたコミットされていない構成されたテキスト、または現在選択されているコミットされたテキストに置き換えられます。コミットされたテキストは、テキストコンポーネントの永続的なデータに統合されている必要があり、それが再び送信されることはありません。構成されたテキストは、ユーザの編集操作を反映して変更された状態で繰り返し送信されることがあります。コミットされたテキストは、常に構成されたテキストの前に置かれます。</target>
        </trans-unit>
        <trans-unit id="1899b3e37537fc1d6b9f560d72d02ead7717a9d2" translate="yes" xml:space="preserve">
          <source>The text is parsed using the formatter, returning a date-time.</source>
          <target state="translated">テキストはフォーマッタを使用して解析され、日付時刻を返します。</target>
        </trans-unit>
        <trans-unit id="119fbb383bccf4eac0375adfb016d1b3f8304e40" translate="yes" xml:space="preserve">
          <source>The text is parsed using the formatter, returning a date.</source>
          <target state="translated">テキストはフォーマッタを使用して解析され、日付を返します。</target>
        </trans-unit>
        <trans-unit id="fc611f16d1b6999b1ff7fa074c651bc88768faa1" translate="yes" xml:space="preserve">
          <source>The text is parsed using the formatter, returning a month-day.</source>
          <target state="translated">テキストはフォーマッタを使用して解析され、月日を返します。</target>
        </trans-unit>
        <trans-unit id="2408a1b2fa16fded0ccd21134505f7a2dfa87a20" translate="yes" xml:space="preserve">
          <source>The text is parsed using the formatter, returning a time.</source>
          <target state="translated">テキストはフォーマッタを使用して解析され、時間を返します。</target>
        </trans-unit>
        <trans-unit id="8aa28741c1cf5a7ab0d06ececd2ac50c4950d93d" translate="yes" xml:space="preserve">
          <source>The text is parsed using the formatter, returning a year-month.</source>
          <target state="translated">テキストはフォーマッタを使用して解析され、年月を返します。</target>
        </trans-unit>
        <trans-unit id="1700b19da145b2d61543e5a3e6060e9ee5311e75" translate="yes" xml:space="preserve">
          <source>The text is parsed using the formatter, returning a year.</source>
          <target state="translated">テキストはフォーマッタを使用して解析され、年を返します。</target>
        </trans-unit>
        <trans-unit id="714efd5fdbdc7a0051ac3528e30febfdfcc4d3b6" translate="yes" xml:space="preserve">
          <source>The text of the field will be output during a format. The value must be within the valid range of the field. If the value cannot be obtained then an exception will be thrown. If the field has no textual representation, then the numeric value will be used.</source>
          <target state="translated">フィールドのテキストは、フォーマット中に出力されます。値はフィールドの有効範囲内でなければなりません。値を取得できない場合は例外がスローされます。フィールドにテキスト表現がない場合は、数値が使用されます。</target>
        </trans-unit>
        <trans-unit id="994a75acb429e80d94201f4b7fd1307dd3c02908" translate="yes" xml:space="preserve">
          <source>The text of the returned &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; is the same that would be returned by</source>
          <target state="translated">返される &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; のテキストは、次のように返されます。</target>
        </trans-unit>
        <trans-unit id="8d32f65f9358481d68c26733468e9f5827be3bb9" translate="yes" xml:space="preserve">
          <source>The text range that the attribute is applied to is critical to the semantics of the range. That means, the attribute cannot be applied to subranges of the text range that it applies to, and, if two adjacent text ranges have the same value for this attribute, the attribute still cannot be applied to the combined range as a whole with this value.</source>
          <target state="translated">その属性が適用されるテキスト範囲は、その範囲のセマンティクスにとって重要です。つまり、その属性は、その属性が適用されるテキスト範囲のサブレンジには適用できず、また、二つの隣接するテキスト範囲がこの属性に対して同じ値を持っている場合、その属性は、この値を持つ結合された範囲全体にはまだ適用できません。</target>
        </trans-unit>
        <trans-unit id="7c3f83472e562d9215e150160baafa85452b5724" translate="yes" xml:space="preserve">
          <source>The text representation of each constant UnicodeBlock identifier. For example, this method will return the &lt;a href=&quot;#BASIC_LATIN&quot;&gt;&lt;code&gt;BASIC_LATIN&lt;/code&gt;&lt;/a&gt; block if provided with the &quot;BASIC_LATIN&quot; name. This form replaces all spaces and hyphens in the canonical name with underscores.</source>
          <target state="translated">各定数UnicodeBlock識別子のテキスト表現。たとえば、このメソッドは、「BASIC_LATIN」名が指定されている場合、&lt;a href=&quot;#BASIC_LATIN&quot;&gt; &lt;code&gt;BASIC_LATIN&lt;/code&gt; &lt;/a&gt;ブロックを返します。このフォームは、正規名のすべてのスペースとハイフンをアンダースコアに置き換えます。</target>
        </trans-unit>
        <trans-unit id="1b53d1b9f2d6a1ffec39094319a28b6fff2de1b3" translate="yes" xml:space="preserve">
          <source>The text representation of each constant UnicodeBlock identifier. For example, this method will return the &lt;a href=&quot;character.unicodeblock#BASIC_LATIN&quot;&gt;&lt;code&gt;BASIC_LATIN&lt;/code&gt;&lt;/a&gt; block if provided with the &quot;BASIC_LATIN&quot; name. This form replaces all spaces and hyphens in the canonical name with underscores.</source>
          <target state="translated">各定数UnicodeBlock識別子のテキスト表現。たとえば、このメソッドは、「BASIC_LATIN」という名前を指定すると、&lt;a href=&quot;character.unicodeblock#BASIC_LATIN&quot;&gt; &lt;code&gt;BASIC_LATIN&lt;/code&gt; &lt;/a&gt;ブロックを返します。このフォームは、正規名のすべてのスペースとハイフンをアンダースコアに置き換えます。</target>
        </trans-unit>
        <trans-unit id="77b9d7619830528efce6f7817705037fc5acc9d6" translate="yes" xml:space="preserve">
          <source>The text substituted for the individual format elements is derived from the current subformat of the format element and the &lt;code&gt;arguments&lt;/code&gt; element at the format element's argument index as indicated by the first matching line of the following table. An argument is</source>
          <target state="translated">個々のフォーマット要素の代わりに使用されるテキストは、次の表の最初の一致する行で示されているように、フォーマット要素の現在のサブフォーマットと、フォーマット要素の引数インデックスにある &lt;code&gt;arguments&lt;/code&gt; 要素から得られます。引数は</target>
        </trans-unit>
        <trans-unit id="9207fb7b3a8409b78131b80ed0af5df70aca6d6f" translate="yes" xml:space="preserve">
          <source>The text will be parsed from the specified start &lt;code&gt;ParsePosition&lt;/code&gt;. The entire length of the text does not have to be parsed, the &lt;code&gt;ParsePosition&lt;/code&gt; will be updated with the index at the end of parsing.</source>
          <target state="translated">テキストは、指定された開始 &lt;code&gt;ParsePosition&lt;/code&gt; から解析されます。テキスト全体を解析する必要はありません &lt;code&gt;ParsePosition&lt;/code&gt; は、解析の最後にインデックスで更新されます。</target>
        </trans-unit>
        <trans-unit id="ef359eb63a3e4e2e83b93c0386e4232cb9ad999c" translate="yes" xml:space="preserve">
          <source>The text.</source>
          <target state="translated">テキストです。</target>
        </trans-unit>
        <trans-unit id="1448b4199b12055b6e038925f7a2322eace6c39d" translate="yes" xml:space="preserve">
          <source>The textual representation of IPv6 addresses as described above can be extended to specify IPv6 scoped addresses. This extension to the basic addressing architecture is described in [draft-ietf-ipngwg-scoping-arch-04.txt].</source>
          <target state="translated">上記のようなIPv6アドレスのテキスト表現は、IPv6のスコープ付きアドレスを指定するために拡張することができます。基本的なアドレッシングアーキテクチャへのこの拡張は、[draft-ietf-ipngwg-scoping-arch-04.txt]に記述されています。</target>
        </trans-unit>
        <trans-unit id="619857d696535395d9a9e6e85c75cbda308cd69b" translate="yes" xml:space="preserve">
          <source>The textual representation of an IP address is address family specific.</source>
          <target state="translated">IPアドレスのテキスト表現は、アドレスファミリ固有のものです。</target>
        </trans-unit>
        <trans-unit id="a243b35a93201c218afa01a0732e236f52dc54db" translate="yes" xml:space="preserve">
          <source>The third rule means for example that if the attribute &lt;code&gt;HeapMemoryUsage&lt;/code&gt; is a &lt;code&gt;MemoryUsage&lt;/code&gt;, monitoring &lt;code&gt;&quot;HeapMemoryUsage.used&quot;&lt;/code&gt; will obtain the observed value by calling &lt;code&gt;MemoryUsage.getUsed()&lt;/code&gt;.</source>
          <target state="translated">3番目のルールは、たとえば、属性 &lt;code&gt;HeapMemoryUsage&lt;/code&gt; がMemoryUsageである &lt;code&gt;MemoryUsage&lt;/code&gt; 、 &lt;code&gt;&quot;HeapMemoryUsage.used&quot;&lt;/code&gt; を監視すると、 &lt;code&gt;MemoryUsage.getUsed()&lt;/code&gt; を呼び出して監視値を取得することを意味します。</target>
        </trans-unit>
        <trans-unit id="1524da4ee526fb66e2dfa2fc314cd6b0009b09e7" translate="yes" xml:space="preserve">
          <source>The third statement above returns a &lt;code&gt;SecureRandom&lt;/code&gt; object of the specific algorithm supporting the specific instantiate parameters. The implementation's effective instantiated parameters must match this minimum request but is not necessarily the same. For example, even if the request does not require a certain feature, the actual instantiation can provide the feature. An implementation may lazily instantiate a &lt;code&gt;SecureRandom&lt;/code&gt; until it's actually used, but the effective instantiate parameters must be determined right after it's created and &lt;a href=&quot;#getParameters()&quot;&gt;&lt;code&gt;getParameters()&lt;/code&gt;&lt;/a&gt; should always return the same result unchanged.</source>
          <target state="translated">上記の3番目のステートメントは、特定のインスタンス化パラメーターをサポートする特定のアルゴリズムの &lt;code&gt;SecureRandom&lt;/code&gt; オブジェクトを返します。実装の有効なインスタンス化されたパラメーターは、この最小要求と一致する必要がありますが、必ずしも同じである必要はありません。たとえば、リクエストに特定の機能が必要ない場合でも、実際のインスタンス化でその機能を提供できます。実装は、実際に使用されるまで &lt;code&gt;SecureRandom&lt;/code&gt; を遅延インスタンス化する場合がありますが、有効なインスタンス化パラメーターは作成直後に決定する必要があり、&lt;a href=&quot;#getParameters()&quot;&gt; &lt;code&gt;getParameters()&lt;/code&gt; &lt;/a&gt;は常に同じ結果を変更せずに返す必要があります。</target>
        </trans-unit>
        <trans-unit id="cd8c7b9c1c14ab7ee8912062724df6f9139f499d" translate="yes" xml:space="preserve">
          <source>The third type of ID are region-based IDs. A region-based ID must be of two or more characters, and not start with 'UTC', 'GMT', 'UT' '+' or '-'. Region-based IDs are defined by configuration, see &lt;a href=&quot;zone/zonerulesprovider&quot;&gt;&lt;code&gt;ZoneRulesProvider&lt;/code&gt;&lt;/a&gt;. The configuration focuses on providing the lookup from the ID to the underlying &lt;code&gt;ZoneRules&lt;/code&gt;.</source>
          <target state="translated">3番目のタイプのIDは、地域ベースのIDです。地域ベースのIDは2文字以上である必要があり、「UTC」、「GMT」、「UT」、「+」、または「-」で開始することはできません。リージョンベースのIDは構成によって定義されます&lt;a href=&quot;zone/zonerulesprovider&quot;&gt; &lt;code&gt;ZoneRulesProvider&lt;/code&gt; &lt;/a&gt;参照してください。この構成は、IDから基になる &lt;code&gt;ZoneRules&lt;/code&gt; へのルックアップを提供することに重点を置いています。</target>
        </trans-unit>
        <trans-unit id="7b2d5ce3a5a55711a2ea3b6fec5e3843d8b5a85a" translate="yes" xml:space="preserve">
          <source>The thread &lt;var&gt;T&lt;/var&gt; is then removed from the wait set for this object and re-enabled for thread scheduling. It competes in the usual manner with other threads for the right to synchronize on the object; once it has regained control of the object, all its synchronization claims on the object are restored to the status quo ante - that is, to the situation as of the time that the &lt;code&gt;wait&lt;/code&gt; method was invoked. Thread &lt;var&gt;T&lt;/var&gt; then returns from the invocation of the &lt;code&gt;wait&lt;/code&gt; method. Thus, on return from the &lt;code&gt;wait&lt;/code&gt; method, the synchronization state of the object and of thread &lt;code&gt;T&lt;/code&gt; is exactly as it was when the &lt;code&gt;wait&lt;/code&gt; method was invoked.</source>
          <target state="translated">次に、スレッド &lt;var&gt;T&lt;/var&gt; は、このオブジェクトの待機セットから削除され、スレッドスケジューリングが再度有効になります。オブジェクト上で同期する権利について、通常の方法で他のスレッドと競合します。オブジェクトの制御を取り戻すと、オブジェクトに対するすべての同期要求は、現状維持、つまり、 &lt;code&gt;wait&lt;/code&gt; メソッドが呼び出された時点の状況に復元されます。次に、スレッド &lt;var&gt;T&lt;/var&gt; は &lt;code&gt;wait&lt;/code&gt; メソッドの呼び出しから戻ります。したがって、 &lt;code&gt;wait&lt;/code&gt; メソッドから戻ると、オブジェクトとスレッド &lt;code&gt;T&lt;/code&gt; の同期状態は、 &lt;code&gt;wait&lt;/code&gt; メソッドが呼び出されたときとまったく同じになります。</target>
        </trans-unit>
        <trans-unit id="798fb3ab3b700a8b0974f49f646feb0adf6c0b98" translate="yes" xml:space="preserve">
          <source>The thread &lt;var&gt;T&lt;/var&gt; is then removed from the wait set for this object and re-enabled for thread scheduling. It then competes in the usual manner with other threads for the right to synchronize on the object; once it has gained control of the object, all its synchronization claims on the object are restored to the status quo ante - that is, to the situation as of the time that the &lt;code&gt;wait&lt;/code&gt; method was invoked. Thread &lt;var&gt;T&lt;/var&gt; then returns from the invocation of the &lt;code&gt;wait&lt;/code&gt; method. Thus, on return from the &lt;code&gt;wait&lt;/code&gt; method, the synchronization state of the object and of thread &lt;code&gt;T&lt;/code&gt; is exactly as it was when the &lt;code&gt;wait&lt;/code&gt; method was invoked.</source>
          <target state="translated">次に、スレッド &lt;var&gt;T&lt;/var&gt; はこのオブジェクトの待機セットから削除され、スレッドのスケジューリングが再び可​​能になります。次に、通常の方法で他のスレッドと競合して、オブジェクトで同期する権利を獲得します。オブジェクトの制御権を取得すると、オブジェクトに対するすべての同期要求は、現状（つまり、 &lt;code&gt;wait&lt;/code&gt; メソッドが呼び出された時点の状況）に復元されます。その後、スレッド &lt;var&gt;T&lt;/var&gt; は &lt;code&gt;wait&lt;/code&gt; メソッドの呼び出しから戻ります。したがって、 &lt;code&gt;wait&lt;/code&gt; メソッドから戻ると、オブジェクトとスレッド &lt;code&gt;T&lt;/code&gt; の同期状態は、 &lt;code&gt;wait&lt;/code&gt; メソッドが呼び出されたときとまったく同じになります。</target>
        </trans-unit>
        <trans-unit id="3886d03f704e9f4661772e22e536d051a2540f61" translate="yes" xml:space="preserve">
          <source>The thread ID property will be initialized with a unique ID for the current thread.</source>
          <target state="translated">スレッドIDプロパティは、現在のスレッドの一意のIDで初期化されます。</target>
        </trans-unit>
        <trans-unit id="3224cdeecc04e300e6f6eb5dd7b0f464a0f08ee9" translate="yes" xml:space="preserve">
          <source>The thread is in the &lt;a href=&quot;../../../../java.base/java/lang/thread.state#BLOCKED&quot;&gt;&lt;code&gt;BLOCKED&lt;/code&gt;&lt;/a&gt; state waiting to enter the &lt;code&gt;synchronized&lt;/code&gt; statement or method.</source>
          <target state="translated">スレッドは&lt;a href=&quot;../../../../java.base/java/lang/thread.state#BLOCKED&quot;&gt; &lt;code&gt;BLOCKED&lt;/code&gt; &lt;/a&gt;状態にあり、 &lt;code&gt;synchronized&lt;/code&gt; ステートメントまたはメソッドに入るのを待っています。</target>
        </trans-unit>
        <trans-unit id="f6a7e6fbe217b20213591b29b1d875c85171794a" translate="yes" xml:space="preserve">
          <source>The thread is in the &lt;a href=&quot;../../../../java.base/java/lang/thread.state#WAITING&quot;&gt;&lt;code&gt;WAITING&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/lang/thread.state#TIMED_WAITING&quot;&gt;&lt;code&gt;TIMED_WAITING&lt;/code&gt;&lt;/a&gt; state due to a call to the &lt;a href=&quot;../../../../java.base/java/lang/object#wait()&quot;&gt;&lt;code&gt;Object.wait&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../../../../java.base/java/lang/object#wait()&quot;&gt; &lt;code&gt;Object.wait&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたため、スレッドは&lt;a href=&quot;../../../../java.base/java/lang/thread.state#WAITING&quot;&gt; &lt;code&gt;WAITING&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../../../java.base/java/lang/thread.state#TIMED_WAITING&quot;&gt; &lt;code&gt;TIMED_WAITING&lt;/code&gt; &lt;/a&gt;状態になっています。</target>
        </trans-unit>
        <trans-unit id="87a5145ea7018df714b4f0182c383913942e6f12" translate="yes" xml:space="preserve">
          <source>The thread is in the &lt;a href=&quot;../../../../java.base/java/lang/thread.state#WAITING&quot;&gt;&lt;code&gt;WAITING&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/lang/thread.state#TIMED_WAITING&quot;&gt;&lt;code&gt;TIMED_WAITING&lt;/code&gt;&lt;/a&gt; state due to a call to the &lt;a href=&quot;../../../../java.base/java/util/concurrent/locks/locksupport#park(java.lang.Object)&quot;&gt;&lt;code&gt;LockSupport.park&lt;/code&gt;&lt;/a&gt; method. The synchronization object is the object returned from &lt;a href=&quot;../../../../java.base/java/util/concurrent/locks/locksupport#getBlocker(java.lang.Thread)&quot;&gt;&lt;code&gt;LockSupport.getBlocker&lt;/code&gt;&lt;/a&gt; method. Typically it is an &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt; ownable synchronizer&lt;/a&gt; or a &lt;a href=&quot;../../../../java.base/java/util/concurrent/locks/condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../../java.base/java/util/concurrent/locks/locksupport#park(java.lang.Object)&quot;&gt; &lt;code&gt;LockSupport.park&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたため、スレッドは&lt;a href=&quot;../../../../java.base/java/lang/thread.state#WAITING&quot;&gt; &lt;code&gt;WAITING&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../../../java.base/java/lang/thread.state#TIMED_WAITING&quot;&gt; &lt;code&gt;TIMED_WAITING&lt;/code&gt; &lt;/a&gt;状態になっています。同期オブジェクトは、&lt;a href=&quot;../../../../java.base/java/util/concurrent/locks/locksupport#getBlocker(java.lang.Thread)&quot;&gt; &lt;code&gt;LockSupport.getBlocker&lt;/code&gt; &lt;/a&gt;メソッドから返されるオブジェクトです。通常、これは&lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;所有可能なシンクロナイザー&lt;/a&gt;または&lt;a href=&quot;../../../../java.base/java/util/concurrent/locks/condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="4b9cc25b45a652d2428c1ca7ad40c7f0ae634fb0" translate="yes" xml:space="preserve">
          <source>The thread is in the &lt;a href=&quot;../thread.state#BLOCKED&quot;&gt;&lt;code&gt;BLOCKED&lt;/code&gt;&lt;/a&gt; state waiting to enter the &lt;code&gt;synchronized&lt;/code&gt; statement or method.</source>
          <target state="translated">スレッドは&lt;a href=&quot;../thread.state#BLOCKED&quot;&gt; &lt;code&gt;BLOCKED&lt;/code&gt; &lt;/a&gt;状態にあり、 &lt;code&gt;synchronized&lt;/code&gt; ステートメントまたはメソッドに入るのを待っています。</target>
        </trans-unit>
        <trans-unit id="77e59a24e2fff88b3f72bac70df76f307ccbec5b" translate="yes" xml:space="preserve">
          <source>The thread is in the &lt;a href=&quot;../thread.state#WAITING&quot;&gt;&lt;code&gt;WAITING&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../thread.state#TIMED_WAITING&quot;&gt;&lt;code&gt;TIMED_WAITING&lt;/code&gt;&lt;/a&gt; state due to a call to the &lt;a href=&quot;../../util/concurrent/locks/locksupport#park-java.lang.Object-&quot;&gt;&lt;code&gt;LockSupport.park&lt;/code&gt;&lt;/a&gt; method. The synchronization object is the object returned from &lt;a href=&quot;../../util/concurrent/locks/locksupport#getBlocker-java.lang.Thread-&quot;&gt;&lt;code&gt;LockSupport.getBlocker&lt;/code&gt;&lt;/a&gt; method. Typically it is an &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt; ownable synchronizer&lt;/a&gt; or a &lt;a href=&quot;../../util/concurrent/locks/condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../util/concurrent/locks/locksupport#park-java.lang.Object-&quot;&gt; &lt;code&gt;LockSupport.park&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しにより、スレッドは&lt;a href=&quot;../thread.state#WAITING&quot;&gt; &lt;code&gt;WAITING&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../thread.state#TIMED_WAITING&quot;&gt; &lt;code&gt;TIMED_WAITING&lt;/code&gt; &lt;/a&gt;状態になっています。同期オブジェクトは、&lt;a href=&quot;../../util/concurrent/locks/locksupport#getBlocker-java.lang.Thread-&quot;&gt; &lt;code&gt;LockSupport.getBlocker&lt;/code&gt; &lt;/a&gt;メソッドから返されるオブジェクトです。通常、これは&lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;所有可能なシンクロナイザー&lt;/a&gt;または&lt;a href=&quot;../../util/concurrent/locks/condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="d7b971951034e25a9cbf8c4a7520b71c76ce7c9c" translate="yes" xml:space="preserve">
          <source>The thread is in the &lt;a href=&quot;../thread.state#WAITING&quot;&gt;&lt;code&gt;WAITING&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../thread.state#TIMED_WAITING&quot;&gt;&lt;code&gt;TIMED_WAITING&lt;/code&gt;&lt;/a&gt; state due to a call to the &lt;a href=&quot;../object#wait-long-&quot;&gt;&lt;code&gt;Object.wait&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../object#wait-long-&quot;&gt; &lt;code&gt;Object.wait&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しが原因で、スレッドは&lt;a href=&quot;../thread.state#WAITING&quot;&gt; &lt;code&gt;WAITING&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../thread.state#TIMED_WAITING&quot;&gt; &lt;code&gt;TIMED_WAITING&lt;/code&gt; &lt;/a&gt;状態になっています。</target>
        </trans-unit>
        <trans-unit id="1cae8d80c59d4da83095fa5ad01a12ad0e9b0377" translate="yes" xml:space="preserve">
          <source>The thread represented by this thread is forced to stop whatever it is doing abnormally and to throw a newly created &lt;code&gt;ThreadDeath&lt;/code&gt; object as an exception.</source>
          <target state="translated">このスレッドによって表されるスレッドは、異常な動作を強制的に停止し、新しく作成された &lt;code&gt;ThreadDeath&lt;/code&gt; オブジェクトを例外としてスローします。</target>
        </trans-unit>
        <trans-unit id="0b3e60ed90635a926c08dd344792b7dde7c9298f" translate="yes" xml:space="preserve">
          <source>The thread then waits until it can re-obtain ownership of the monitor and resumes execution.</source>
          <target state="translated">その後、スレッドはモニターの所有権を再取得するまで待機し、実行を再開します。</target>
        </trans-unit>
        <trans-unit id="25b717a3fa1cf9d27360f778068bc0905b1e3681" translate="yes" xml:space="preserve">
          <source>The threads may be executing while this method is called. The stack trace of each thread only represents a snapshot and each stack trace may be obtained at different time. A zero-length array will be returned in the map value if the virtual machine has no stack trace information about a thread.</source>
          <target state="translated">このメソッドが呼ばれている間、スレッドが実行されている可能性があります。各スレッドのスタックトレースはスナップショットを表しているに過ぎず、それぞれのスタックトレースは異なる時間に取得される可能性があります。仮想マシンにスレッドに関するスタックトレース情報がない場合は、マップ値にゼロ長の配列が返されます。</target>
        </trans-unit>
        <trans-unit id="f6e3ff0b6b3a8faf4f1e95b0c706e80d227c4311" translate="yes" xml:space="preserve">
          <source>The three aspects of &lt;code&gt;collect&lt;/code&gt; -- supplier, accumulator, and combiner -- are tightly coupled. We can use the abstraction of a &lt;a href=&quot;collector&quot;&gt;&lt;code&gt;Collector&lt;/code&gt;&lt;/a&gt; to capture all three aspects. The above example for collecting strings into a &lt;code&gt;List&lt;/code&gt; can be rewritten using a standard &lt;code&gt;Collector&lt;/code&gt; as:</source>
          <target state="translated">&lt;code&gt;collect&lt;/code&gt; の3つの側面（サプライヤ、アキュムレータ、コンバイナ）は密接に結合されています。&lt;a href=&quot;collector&quot;&gt; &lt;code&gt;Collector&lt;/code&gt; &lt;/a&gt;の抽象化を使用して、3つすべての側面をキャプチャできます。文字列を &lt;code&gt;List&lt;/code&gt; 収集する上記の例は、標準の &lt;code&gt;Collector&lt;/code&gt; を使用して次のように書き直すことができます。</target>
        </trans-unit>
        <trans-unit id="ac4e5d34586392cc6376d13f3ac41b119993fff0" translate="yes" xml:space="preserve">
          <source>The three forms of &lt;code&gt;park&lt;/code&gt; each also support a &lt;code&gt;blocker&lt;/code&gt; object parameter. This object is recorded while the thread is blocked to permit monitoring and diagnostic tools to identify the reasons that threads are blocked. (Such tools may access blockers using method &lt;a href=&quot;#getBlocker(java.lang.Thread)&quot;&gt;&lt;code&gt;getBlocker(Thread)&lt;/code&gt;&lt;/a&gt;.) The use of these forms rather than the original forms without this parameter is strongly encouraged. The normal argument to supply as a &lt;code&gt;blocker&lt;/code&gt; within a lock implementation is &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;park&lt;/code&gt; の3つの形式は、それぞれ &lt;code&gt;blocker&lt;/code&gt; オブジェクトパラメーターもサポートします。このオブジェクトは、スレッドがブロックされている間に記録され、監視および診断ツールがスレッドがブロックされた理由を識別できるようにします。 （このようなツールは、メソッド&lt;a href=&quot;#getBlocker(java.lang.Thread)&quot;&gt; &lt;code&gt;getBlocker(Thread)&lt;/code&gt; &lt;/a&gt;を使用してブロッカーにアクセスできます。）このパラメーターのない元のフォームではなく、これらのフォームを使用することを強くお勧めします。ロック実装内で &lt;code&gt;blocker&lt;/code&gt; として提供する通常の引数は &lt;code&gt;this&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ccdf2eb66d2e71f34a919a596f65bb338f795c35" translate="yes" xml:space="preserve">
          <source>The three forms of &lt;code&gt;park&lt;/code&gt; each also support a &lt;code&gt;blocker&lt;/code&gt; object parameter. This object is recorded while the thread is blocked to permit monitoring and diagnostic tools to identify the reasons that threads are blocked. (Such tools may access blockers using method &lt;a href=&quot;locksupport#getBlocker-java.lang.Thread-&quot;&gt;&lt;code&gt;getBlocker(Thread)&lt;/code&gt;&lt;/a&gt;.) The use of these forms rather than the original forms without this parameter is strongly encouraged. The normal argument to supply as a &lt;code&gt;blocker&lt;/code&gt; within a lock implementation is &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">3つの形式の &lt;code&gt;park&lt;/code&gt; それぞれ、 &lt;code&gt;blocker&lt;/code&gt; オブジェクトパラメーターもサポートします。このオブジェクトは、スレッドがブロックされている間に記録され、監視および診断ツールがスレッドがブロックされている理由を特定できるようにします。 （このようなツールは、メソッド&lt;a href=&quot;locksupport#getBlocker-java.lang.Thread-&quot;&gt; &lt;code&gt;getBlocker(Thread)&lt;/code&gt; &lt;/a&gt;を使用してブロッカーにアクセスする場合があります。）このパラメーターのない元のフォームではなく、これらのフォームを使用することを強くお勧めします。ロック実装内で &lt;code&gt;blocker&lt;/code&gt; として提供する通常の引数は &lt;code&gt;this&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="df00dd95000e60bd282d65d477e94c0a82461152" translate="yes" xml:space="preserve">
          <source>The three forms of condition waiting (interruptible, non-interruptible, and timed) may differ in their ease of implementation on some platforms and in their performance characteristics. In particular, it may be difficult to provide these features and maintain specific semantics such as ordering guarantees. Further, the ability to interrupt the actual suspension of the thread may not always be feasible to implement on all platforms.</source>
          <target state="translated">条件待ちの3つの形態(割込み可能、非割込み可能、および時限付き)は、いくつかのプラットフォーム上での実装の容易さと、その性能特性とで異なる場合がある。特に、これらの機能を提供し、順序保証のような特定のセマンティクスを維持することは難しいかもしれない。さらに、スレッドの実際の中断を中断する機能は、すべてのプラットフォームで実装することが必ずしも実現可能ではないかもしれません。</target>
        </trans-unit>
        <trans-unit id="db29ad82518a2ee6d7ddfaf1a9c7b34c8ecf4057" translate="yes" xml:space="preserve">
          <source>The three forms of lock acquisition (interruptible, non-interruptible, and timed) may differ in their performance characteristics, ordering guarantees, or other implementation qualities. Further, the ability to interrupt the &lt;em&gt;ongoing&lt;/em&gt; acquisition of a lock may not be available in a given &lt;code&gt;Lock&lt;/code&gt; class. Consequently, an implementation is not required to define exactly the same guarantees or semantics for all three forms of lock acquisition, nor is it required to support interruption of an ongoing lock acquisition. An implementation is required to clearly document the semantics and guarantees provided by each of the locking methods. It must also obey the interruption semantics as defined in this interface, to the extent that interruption of lock acquisition is supported: which is either totally, or only on method entry.</source>
          <target state="translated">ロック取得の3つの形式（割り込み可能、​​非割り込み不可能、時限）は、パフォーマンス特性、順序の保証、または他の実装品質が異なる場合があります。さらに、&lt;em&gt;進行中&lt;/em&gt;のロックの取得を中断する機能は、特定の &lt;code&gt;Lock&lt;/code&gt; では使用できない場合があります。クラス。その結果、実装は、3つの形式のロック取得すべてに対してまったく同じ保証またはセマンティクスを定義する必要はなく、進行中のロック取得の中断をサポートする必要もありません。各ロックメソッドによって提供されるセマンティクスと保証を明確に文書化するには、実装が必要です。また、ロックの取得の中断がサポートされている限り、このインターフェースで定義されている中断のセマンティクスに従う必要があります。これは、完全に、またはメソッドのエントリでのみ可能です。</target>
        </trans-unit>
        <trans-unit id="bb65090e22ab8912d71a3b4c421185f9239fb8c9" translate="yes" xml:space="preserve">
          <source>The three types of rendering operations, along with details of each of their particular rendering processes are:</source>
          <target state="translated">3種類のレンダリング操作と、それぞれのレンダリング処理の詳細は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="b1243cf17aa93cee91f50c4b5f0c4dfc5e1efee1" translate="yes" xml:space="preserve">
          <source>The three values for decomposition mode are:</source>
          <target state="translated">分解モードの値は3つです。</target>
        </trans-unit>
        <trans-unit id="eca35f7b2afddf8594835c4c8f46728d1529fce5" translate="yes" xml:space="preserve">
          <source>The three-argument form is a generalization of the two-argument form, incorporating a mapping step into the accumulation step. We could re-cast the simple sum-of-weights example using the more general form as follows:</source>
          <target state="translated">3引数形式は、2引数形式を一般化したもので、蓄積ステップにマッピングステップを組み込んでいます。より一般的な形式を使用して、単純な重さの和の例を以下のように再キャストすることができます。</target>
        </trans-unit>
        <trans-unit id="e2e826b013ebf5d13455251fda42b4b52a0a40d6" translate="yes" xml:space="preserve">
          <source>The threshold high or threshold low are not of the same type as the gauge (gauge monitors).</source>
          <target state="translated">スレッショルドハイやスレッショルドローは、ゲージ(ゲージモニター)と同じ種類のものではありません。</target>
        </trans-unit>
        <trans-unit id="618cf78884b8f69aa1ff4f548c236bef8d448a10" translate="yes" xml:space="preserve">
          <source>The threshold or the offset or the modulus are not of the same type as the counter (counter monitors).</source>
          <target state="translated">しきい値やオフセットやモジュラスは、カウンタ(カウンタモニタ)と同じ種類ではありません。</target>
        </trans-unit>
        <trans-unit id="5b761c49c0df6550fd9288c6d950a41463038892" translate="yes" xml:space="preserve">
          <source>The threshold value for the specified MBean if this MBean is in the set of observed MBeans, or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">このMBeanが監視対象のMBeanのセットに含まれている場合は、指定されたMBeanのしきい値。それ以外の場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4abbaad922146601ba46b4fe49f8e578a3e9883a" translate="yes" xml:space="preserve">
          <source>The threshold value of the specified object.</source>
          <target state="translated">指定されたオブジェクトの閾値。</target>
        </trans-unit>
        <trans-unit id="93ccc78354f36ab6014746446d9124e4c9a55c8e" translate="yes" xml:space="preserve">
          <source>The threshold value.</source>
          <target state="translated">閾値です。</target>
        </trans-unit>
        <trans-unit id="c8421d23d14f7481a0d1af497cd30f15efc9c681" translate="yes" xml:space="preserve">
          <source>The tick duration must be positive. If it has a part smaller than a whole millisecond, then the whole duration must divide into one second without leaving a remainder. All normal tick durations will match these criteria, including any multiple of hours, minutes, seconds and milliseconds, and sensible nanosecond durations, such as 20ns, 250,000ns and 500,000ns.</source>
          <target state="translated">目盛りの持続時間は正の値でなければなりません。全ミリ秒よりも小さい部分がある場合は、全体の持続時間は残りを残さずに1秒に分割されなければなりません。時間、分、秒、ミリ秒の倍数、20ns、250,000ns、500,000nsのようなナノ秒の感覚的な持続時間を含む、すべての通常の目盛りの持続時間は、これらの基準に一致します。</target>
        </trans-unit>
        <trans-unit id="3d7a7f884123f38061b4f01b40f6fca44848eb92" translate="yes" xml:space="preserve">
          <source>The time and offset do not affect the calculation and will be the same in the result. If the day-of-month is invalid for the year, it will be changed to the last valid day of the month.</source>
          <target state="translated">時間とオフセットは計算に影響を与えず、結果は同じになります。月の日がその年に無効な場合は、その月の最後に有効な日に変更されます。</target>
        </trans-unit>
        <trans-unit id="cf65733067f037d5f7c0913c18befc5a4452eae3" translate="yes" xml:space="preserve">
          <source>The time and offset do not affect the calculation and will be the same in the result. If the resulting &lt;code&gt;OffsetDateTime&lt;/code&gt; is invalid, an exception is thrown.</source>
          <target state="translated">時間とオフセットは計算に影響を与えず、結果は同じになります。結果の &lt;code&gt;OffsetDateTime&lt;/code&gt; が無効な場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="6c06ad7fab5af0cf4e31869a72aaa8c0967814aa" translate="yes" xml:space="preserve">
          <source>The time does not affect the calculation and will be the same in the result. If the day-of-month is invalid for the year, it will be changed to the last valid day of the month.</source>
          <target state="translated">時間は計算に影響を与えず、結果も同じになります。年間で月の日が無効な場合は、その月の最終的に有効な日に変更されます。</target>
        </trans-unit>
        <trans-unit id="4106b4f9e69339c1872abca12ca2da7faed9666a" translate="yes" xml:space="preserve">
          <source>The time in milli-seconds that the MBeanInfo can reasonably be expected to be unchanged. The value can be a &lt;code&gt;Long&lt;/code&gt; or a decimal string. This provides a hint from a DynamicMBean or any MBean that does not define &lt;code&gt;immutableInfo&lt;/code&gt; as &lt;code&gt;true&lt;/code&gt; that the MBeanInfo is not likely to change within this period and therefore can be cached. When this field is missing or has the value zero, it is not recommended to cache the MBeanInfo unless it has the &lt;code&gt;immutableInfo&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; or it has &lt;a href=&quot;mbeaninfo#info-changed&quot;&gt;&lt;code&gt;&quot;jmx.mbean.info.changed&quot;&lt;/code&gt;&lt;/a&gt; in its &lt;a href=&quot;mbeannotificationinfo&quot;&gt;&lt;code&gt;MBeanNotificationInfo&lt;/code&gt;&lt;/a&gt; array.</source>
          <target state="translated">MBeanInfoが変更されないと合理的に期待できるミリ秒単位の時間。値は、 &lt;code&gt;Long&lt;/code&gt; または10進文字列です。これにより、DynamicMBeanまたは &lt;code&gt;immutableInfo&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; として定義していないMBeanから、MBeanInfoがこの期間内に変更される可能性が低く、したがってキャッシュできるというヒントが提供されます。このフィールドがないか、値がゼロの場合、 &lt;code&gt;immutableInfo&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; に設定されているか、&lt;a href=&quot;mbeannotificationinfo&quot;&gt; &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; &lt;/a&gt;配列に&lt;a href=&quot;mbeaninfo#info-changed&quot;&gt; &lt;code&gt;&quot;jmx.mbean.info.changed&quot;&lt;/code&gt; &lt;/a&gt;れていない限り、MBeanInfoをキャッシュすることはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="acbf0fbbf2519547cc43bc06b63a9e4515272ec9" translate="yes" xml:space="preserve">
          <source>The time is converted into an instant using the time definition.</source>
          <target state="translated">時間の定義を利用して瞬時に換算しています。</target>
        </trans-unit>
        <trans-unit id="5996955378dd36992f5dee7922b6ee64c4396fe3" translate="yes" xml:space="preserve">
          <source>The time limit of these SearchControls in milliseconds.</source>
          <target state="translated">これらの SearchControls の制限時間をミリ秒単位で指定します。</target>
        </trans-unit>
        <trans-unit id="526444c169e427c129c525d4df96c1420c7a51f7" translate="yes" xml:space="preserve">
          <source>The time of midnight at the start of the day, '00:00'.</source>
          <target state="translated">1日の始まりの深夜0時の時間、'00:00'です。</target>
        </trans-unit>
        <trans-unit id="8f833517ae6c82bdf28f4d07f70897fd379d4f67" translate="yes" xml:space="preserve">
          <source>The time of noon in the middle of the day, '12:00'.</source>
          <target state="translated">中日の正午の時間帯の「12時」。</target>
        </trans-unit>
        <trans-unit id="64a643ca048518ba71b10504256b6f2db499384f" translate="yes" xml:space="preserve">
          <source>The time of the day at which daylight saving time starts or ends is specified by a millisecond value within the day. There are three kinds of &lt;em&gt;mode&lt;/em&gt;s to specify the time: &lt;a href=&quot;#WALL_TIME&quot;&gt;&lt;code&gt;WALL_TIME&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#STANDARD_TIME&quot;&gt;&lt;code&gt;STANDARD_TIME&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#UTC_TIME&quot;&gt;&lt;code&gt;UTC_TIME&lt;/code&gt;&lt;/a&gt;. For example, if daylight saving time ends at 2:00 am in the wall clock time, it can be specified by 7200000 milliseconds in the &lt;a href=&quot;#WALL_TIME&quot;&gt;&lt;code&gt;WALL_TIME&lt;/code&gt;&lt;/a&gt; mode. In this case, the wall clock time for an &lt;em&gt;end-rule&lt;/em&gt; means the same thing as the daylight time.</source>
          <target state="translated">夏時間が開始または終了する時刻は、その日のミリ秒値で指定されます。時刻を指定する&lt;em&gt;モード&lt;/em&gt;には、&lt;a href=&quot;#WALL_TIME&quot;&gt; &lt;code&gt;WALL_TIME&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#STANDARD_TIME&quot;&gt; &lt;code&gt;STANDARD_TIME&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#UTC_TIME&quot;&gt; &lt;code&gt;UTC_TIME&lt;/code&gt; の&lt;/a&gt;3種類があり&lt;em&gt;ます&lt;/em&gt;。たとえば、夏時間が壁時計時刻の午前2時に終了する場合、&lt;a href=&quot;#WALL_TIME&quot;&gt; &lt;code&gt;WALL_TIME&lt;/code&gt; &lt;/a&gt;モードでは7200000ミリ秒で指定できます。この場合、&lt;em&gt;エンドルールの実&lt;/em&gt;時間は夏時間と同じ意味になります。</target>
        </trans-unit>
        <trans-unit id="8f963cde5781a47df760ad32650d381c8f0dbe75" translate="yes" xml:space="preserve">
          <source>The time of the day at which daylight saving time starts or ends is specified by a millisecond value within the day. There are three kinds of &lt;em&gt;mode&lt;/em&gt;s to specify the time: &lt;a href=&quot;simpletimezone#WALL_TIME&quot;&gt;&lt;code&gt;WALL_TIME&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;simpletimezone#STANDARD_TIME&quot;&gt;&lt;code&gt;STANDARD_TIME&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;simpletimezone#UTC_TIME&quot;&gt;&lt;code&gt;UTC_TIME&lt;/code&gt;&lt;/a&gt;. For example, if daylight saving time ends at 2:00 am in the wall clock time, it can be specified by 7200000 milliseconds in the &lt;a href=&quot;simpletimezone#WALL_TIME&quot;&gt;&lt;code&gt;WALL_TIME&lt;/code&gt;&lt;/a&gt; mode. In this case, the wall clock time for an &lt;em&gt;end-rule&lt;/em&gt; means the same thing as the daylight time.</source>
          <target state="translated">夏時間が開始または終了する時刻は、その日のミリ秒の値で指定されます。時間を指定する&lt;em&gt;モード&lt;/em&gt;には、&lt;a href=&quot;simpletimezone#WALL_TIME&quot;&gt; &lt;code&gt;WALL_TIME&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;simpletimezone#STANDARD_TIME&quot;&gt; &lt;code&gt;STANDARD_TIME&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;simpletimezone#UTC_TIME&quot;&gt; &lt;code&gt;UTC_TIME&lt;/code&gt; の&lt;/a&gt; 3種類があり&lt;em&gt;ます&lt;/em&gt;。たとえば、夏時間がウォールクロック時間の午前2時に終了する場合、&lt;a href=&quot;simpletimezone#WALL_TIME&quot;&gt; &lt;code&gt;WALL_TIME&lt;/code&gt; &lt;/a&gt;モードでは7200000ミリ秒で指定できます。この場合、&lt;em&gt;エンドルールの実&lt;/em&gt;時間は夏時間と同じことを意味します。</target>
        </trans-unit>
        <trans-unit id="3f682fddb863e7c5b381d42cd6be2e0499225644" translate="yes" xml:space="preserve">
          <source>The time stamp.</source>
          <target state="translated">タイムスタンプです。</target>
        </trans-unit>
        <trans-unit id="3cb58d5d8003015620c159da03ce3e4d5619a359" translate="yes" xml:space="preserve">
          <source>The time stamp. Replaced by InputEvent.getWhen().</source>
          <target state="translated">タイムスタンプ。InputEvent.getWhen()で置き換えられます。</target>
        </trans-unit>
        <trans-unit id="422a6a0727efc668eadfab588f39e7901af76990" translate="yes" xml:space="preserve">
          <source>The time-to-live constant for disabling the expiration control for loaded resource bundle instances in the cache.</source>
          <target state="translated">キャッシュにロードされたリソースバンドルインスタンスの期限切れ制御を無効にするための有効期限の定数。</target>
        </trans-unit>
        <trans-unit id="c09406968aca987adec6afd3d870562c13c5226c" translate="yes" xml:space="preserve">
          <source>The time-to-live constant for not caching loaded resource bundle instances.</source>
          <target state="translated">ロードされたリソースバンドルインスタンスをキャッシュしないための生存時間の定数。</target>
        </trans-unit>
        <trans-unit id="2948afa6c507e96db7157cef9cbb050870dbd00b" translate="yes" xml:space="preserve">
          <source>The time-zone offset for UTC, with an ID of 'Z'.</source>
          <target state="translated">UTC のタイムゾーンオフセット、ID は 'Z' です。</target>
        </trans-unit>
        <trans-unit id="1dfd324cfb41000f9d3aba1f9dad090939b1b93f" translate="yes" xml:space="preserve">
          <source>The timeout period, specified by &lt;code&gt;timeout&lt;/code&gt; milliseconds plus &lt;code&gt;nanos&lt;/code&gt; nanoseconds arguments, has elapsed.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; ミリ秒と &lt;code&gt;nanos&lt;/code&gt; ナノ秒の引数で指定されたタイムアウト期間が経過しました。</target>
        </trans-unit>
        <trans-unit id="e87dd73958b4c331aa3b482b31ba9b3bb70f0291" translate="yes" xml:space="preserve">
          <source>The timeout value, in milliseconds, indicates the maximum amount of time the try should take. If the operation times out before getting an answer, the host is deemed unreachable. A negative value will result in an IllegalArgumentException being thrown.</source>
          <target state="translated">タイムアウト値は、試行に要する最大時間をミリ秒単位で示します。応答を得る前に操作がタイムアウトした場合、ホストは到達不可能とみなされます。負の値を指定すると、IllegalArgumentExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="5a3c7016b356d85ab2005993ec546da2021f5da3" translate="yes" xml:space="preserve">
          <source>The timer notification detailed message or null if the identifier is not mapped to any timer notification registered for this timer MBean.</source>
          <target state="translated">識別子がこのタイマーMBeanに登録されているタイマー通知にマッピングされていない場合は、タイマー通知の詳細メッセージ、またはNULL。</target>
        </trans-unit>
        <trans-unit id="e45c48a5b2ba20c62b4614e6273292d7390eb1e1" translate="yes" xml:space="preserve">
          <source>The timer notification type or null if the identifier is not mapped to any timer notification registered for this timer MBean.</source>
          <target state="translated">識別子がこのタイマーMBeanに登録されているタイマー通知にマッピングされていない場合は、タイマー通知のタイプ、またはnullを指定します。</target>
        </trans-unit>
        <trans-unit id="23967f54cac8eb8b003d2fc196f922e43be03fd3" translate="yes" xml:space="preserve">
          <source>The timer notification user data object or null if the identifier is not mapped to any timer notification registered for this timer MBean.</source>
          <target state="translated">タイマー通知のユーザデータオブジェクト、または識別子がこのタイマーMBeanに登録されたタイマー通知にマッピングされていない場合はNULL。</target>
        </trans-unit>
        <trans-unit id="d238facacd1f3d07587721542ed70d70cb4c4775" translate="yes" xml:space="preserve">
          <source>The timer notification will be handled once at the specified date.</source>
          <target state="translated">タイマー通知は指定された日に1回処理されます。</target>
        </trans-unit>
        <trans-unit id="414f37292531292150b0ccb1cad0625336e616e7" translate="yes" xml:space="preserve">
          <source>The timer notification will repeat continuously using the timer period using a</source>
          <target state="translated">を使用してタイマー通知をタイマー期間を使用して連続的に繰り返します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
