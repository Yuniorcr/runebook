<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="9ea172b7eec3f5f0b81470ae67435f6d468e7665" translate="yes" xml:space="preserve">
          <source>Find a resource of the specified name from the search path used to load classes. This method locates the resource through the system class loader (see &lt;a href=&quot;classloader#getSystemClassLoader--&quot;&gt;&lt;code&gt;getSystemClassLoader()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">クラスのロードに使用される検索パスから、指定された名前のリソースを見つけます。このメソッドは、システムクラスローダー（&lt;a href=&quot;classloader#getSystemClassLoader--&quot;&gt; &lt;code&gt;getSystemClassLoader()&lt;/code&gt; を&lt;/a&gt;参照）を介してリソースを見つけます。</target>
        </trans-unit>
        <trans-unit id="06def4f824d0101f792b8087f4312c30c14cbc81" translate="yes" xml:space="preserve">
          <source>Find a variable in the set of available variables.</source>
          <target state="translated">利用可能な変数の集合から変数を探します。</target>
        </trans-unit>
        <trans-unit id="38c82c92e8e61b769291664f51f72ff64a91c33e" translate="yes" xml:space="preserve">
          <source>Find an MBeanServer with a given name, or all MBeanServers in this JVM, using the method &lt;a href=&quot;mbeanserverfactory#findMBeanServer(java.lang.String)&quot;&gt;&lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;mbeanserverfactory#findMBeanServer(java.lang.String)&quot;&gt; &lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt; &lt;/a&gt;を使用して、指定された名前のMBeanServer、またはこのJVM内のすべてのMBeanServerを検索します。</target>
        </trans-unit>
        <trans-unit id="143fb3b0f3014eb3a425dfc9e1d72174ef6e3fc1" translate="yes" xml:space="preserve">
          <source>Find an MBeanServer with a given name, or all MBeanServers in this JVM, using the method &lt;a href=&quot;mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt;&lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;mbeanserverfactory#findMBeanServer-java.lang.String-&quot;&gt; &lt;code&gt;MBeanServerFactory.findMBeanServer(java.lang.String)&lt;/code&gt; &lt;/a&gt;を使用して、指定された名前のMBeanServerまたはこのJVM内のすべてのMBeanServerを検索します。</target>
        </trans-unit>
        <trans-unit id="23c95a684a4ef6e95365fe5d05112bed0124d8b9" translate="yes" xml:space="preserve">
          <source>Find or create a logger for a named subsystem.</source>
          <target state="translated">名前付きサブシステムのロガーを検索または作成します。</target>
        </trans-unit>
        <trans-unit id="e25e1d08d5edcf5ee65c41a7c10f2e97a4afc61e" translate="yes" xml:space="preserve">
          <source>Find or create a logger for a named subsystem. If a logger has already been created with the given name it is returned. Otherwise a new logger is created.</source>
          <target state="translated">指定されたサブシステムのロガーを検索または作成します。指定した名前で既にロガーが作成されている場合は、それが返されます。そうでない場合は、新しいロガーが作成されます。</target>
        </trans-unit>
        <trans-unit id="bb8d1805e4876c9e126c966285fe34d4e505b938" translate="yes" xml:space="preserve">
          <source>Find the descriptor for a class that can be serialized.</source>
          <target state="translated">シリアライズできるクラスの記述子を探します。</target>
        </trans-unit>
        <trans-unit id="83b0dfddf9a03c8956ac68d15dfc528830ca8054" translate="yes" xml:space="preserve">
          <source>Find the descriptor for a class that can be serialized. Creates an ObjectStreamClass instance if one does not exist yet for class. Null is returned if the specified class does not implement java.io.Serializable or java.io.Externalizable.</source>
          <target state="translated">シリアライズ可能なクラスの記述子を探します。クラスに ObjectStreamClass インスタンスがまだ存在しない場合は、ObjectStreamClass インスタンスを作成します。指定されたクラスが java.io.Serializable または java.io.Externalizable を実装していない場合は、Null が返されます。</target>
        </trans-unit>
        <trans-unit id="69f8e8e772d56be479b5fc7ce318dc12a215d5ee" translate="yes" xml:space="preserve">
          <source>Find the next word:</source>
          <target state="translated">次の単語を探します。</target>
        </trans-unit>
        <trans-unit id="695a17bec2c9c6b5a2b8a6612b97264614ce5a20" translate="yes" xml:space="preserve">
          <source>FindException</source>
          <target state="translated">FindException</target>
        </trans-unit>
        <trans-unit id="59de19c8479dabc7fdf16a0df24bc55ce7c4027a" translate="yes" xml:space="preserve">
          <source>Finders created by this method are lazy and do not eagerly check that the given file paths are directories or packaged modules. Consequently, the &lt;code&gt;find&lt;/code&gt; or &lt;code&gt;findAll&lt;/code&gt; methods will only fail if invoking these methods results in searching a directory or packaged module and an error is encountered.</source>
          <target state="translated">この方法で作成されたファインダーは遅延しており、指定されたファイルパスがディレクトリまたはパッケージ化されたモジュールであることを熱心にチェックしません。したがって、 &lt;code&gt;find&lt;/code&gt; または &lt;code&gt;findAll&lt;/code&gt; メソッドは、これらのメソッドを呼び出すとディレクトリまたはパッケージ化されたモジュールが検索され、エラーが発生した場合にのみ失敗します。</target>
        </trans-unit>
        <trans-unit id="9fd148aa9f1739c5e301cba94aad1904591987a4" translate="yes" xml:space="preserve">
          <source>Finds a &lt;a href=&quot;varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; for a static field.</source>
          <target state="translated">静的フィールドの&lt;a href=&quot;varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt;を検索します。</target>
        </trans-unit>
        <trans-unit id="2cbf3eee5b6a50f18be9366ec2e9b62b83fee66c" translate="yes" xml:space="preserve">
          <source>Finds a &lt;a href=&quot;varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; for an array type.</source>
          <target state="translated">配列型の&lt;a href=&quot;varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt;を検索します。</target>
        </trans-unit>
        <trans-unit id="ae431bcde51fb5aba1c248b30622ac84b2cd1502" translate="yes" xml:space="preserve">
          <source>Finds a &lt;a href=&quot;varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; for an instance field.</source>
          <target state="translated">インスタンスフィールドの&lt;a href=&quot;varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt;を検索します。</target>
        </trans-unit>
        <trans-unit id="1fad7c1cd7647785389946cd154feb4d731b87ea" translate="yes" xml:space="preserve">
          <source>Finds a class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;, loading it if necessary.</source>
          <target state="translated">指定された&lt;a href=&quot;#binary-name&quot;&gt;バイナリ名の&lt;/a&gt;クラスを検索し、必要に応じてロードします。</target>
        </trans-unit>
        <trans-unit id="e26ddf6d350805d46a4eababd014f4909e7b7f70" translate="yes" xml:space="preserve">
          <source>Finds a class with the specified &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt;, loading it if necessary.</source>
          <target state="translated">指定された&lt;a href=&quot;#name&quot;&gt;バイナリ名を&lt;/a&gt;持つクラスを検索し、必要に応じてそれをロードします。</target>
        </trans-unit>
        <trans-unit id="af57f9d6d3fad481c4e24d676d0af5fff1455505" translate="yes" xml:space="preserve">
          <source>Finds a color in the system properties.</source>
          <target state="translated">システムのプロパティで色を見つけます。</target>
        </trans-unit>
        <trans-unit id="6d14b2650a84a8bb8e450bd9dab3317e7299564c" translate="yes" xml:space="preserve">
          <source>Finds a package by &lt;a href=&quot;#binary-name&quot;&gt;name&lt;/a&gt; in this class loader and its ancestors.</source>
          <target state="translated">このクラスローダーとその祖先で&lt;a href=&quot;#binary-name&quot;&gt;名前&lt;/a&gt;でパッケージを検索します。</target>
        </trans-unit>
        <trans-unit id="bc3c065513369b108e136f6ac6676bbd9f9ed1ef" translate="yes" xml:space="preserve">
          <source>Finds a package by name in the caller's class loader and its ancestors.</source>
          <target state="translated">呼び出し元のクラスローダ内のパッケージとその祖先の名前で検索します。</target>
        </trans-unit>
        <trans-unit id="5e28f68c44bc53461701f2bc09fdd27d2ead26e3" translate="yes" xml:space="preserve">
          <source>Finds a reference to a module of a given name.</source>
          <target state="translated">指定された名前のモジュールへの参照を見つけます。</target>
        </trans-unit>
        <trans-unit id="9e3215b349d72286642469e7aa8b6255181f6da6" translate="yes" xml:space="preserve">
          <source>Finds a resolved module in this configuration, or if not in this configuration, the &lt;a href=&quot;#parents()&quot;&gt;parent&lt;/a&gt; configurations.</source>
          <target state="translated">この構成で解決されたモジュールを検索します。この構成にない場合は、&lt;a href=&quot;#parents()&quot;&gt;親&lt;/a&gt;構成を検索します。</target>
        </trans-unit>
        <trans-unit id="a897b351634179262b62bd1ff305280ca2957a51" translate="yes" xml:space="preserve">
          <source>Finds a resolved module in this configuration, or if not in this configuration, the &lt;a href=&quot;#parents()&quot;&gt;parent&lt;/a&gt; configurations. Finding a module in parent configurations is equivalent to invoking &lt;code&gt;findModule&lt;/code&gt; on each parent, in search order, until the module is found or all parents have been searched. In a &lt;em&gt;tree of configurations&lt;/em&gt; then this is equivalent to a depth-first search.</source>
          <target state="translated">この構成で解決されたモジュールを検索します。この構成にない場合は、&lt;a href=&quot;#parents()&quot;&gt;親&lt;/a&gt;構成を検索します。親構成でモジュールを検索することは、モジュールが見つかるか、すべての親が検索されるまで、検索順に各親で &lt;code&gt;findModule&lt;/code&gt; を呼び出すことと同じです。で&lt;em&gt;構成ツリー&lt;/em&gt;これは深さ優先探索と同等です。</target>
        </trans-unit>
        <trans-unit id="7011250bbf1d68f0ad3f18892e0e52dea53b38ac" translate="yes" xml:space="preserve">
          <source>Finds a resource with a given name.</source>
          <target state="translated">指定された名前のリソースを検索します。</target>
        </trans-unit>
        <trans-unit id="5970b75c030be5858ee00a25ea7e6d0137d03f22" translate="yes" xml:space="preserve">
          <source>Finds a resource with a given name. The rules for searching resources associated with a given class are implemented by the defining &lt;a href=&quot;classloader&quot;&gt;class loader&lt;/a&gt; of the class. This method delegates to this object's class loader. If this object was loaded by the bootstrap class loader, the method delegates to &lt;a href=&quot;classloader#getSystemResource-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.getSystemResource(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された名前のリソースを検索します。特定のクラスに関連付けられているリソースを検索するためのルールは、クラスの定義&lt;a href=&quot;classloader&quot;&gt;クラスローダー&lt;/a&gt;によって実装されます。このメソッドは、このオブジェクトのクラスローダーに委譲します。このオブジェクトがブートストラップクラスローダーによってロードされた場合、メソッドは&lt;a href=&quot;classloader#getSystemResource-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.getSystemResource(java.lang.String)&lt;/code&gt; に&lt;/a&gt;委譲します。</target>
        </trans-unit>
        <trans-unit id="b8c457aaf68742eb22c2c958d2a00771c3d3a2af" translate="yes" xml:space="preserve">
          <source>Finds a resource with a given name. The rules for searching resources associated with a given class are implemented by the defining &lt;a href=&quot;classloader&quot;&gt;class loader&lt;/a&gt; of the class. This method delegates to this object's class loader. If this object was loaded by the bootstrap class loader, the method delegates to &lt;a href=&quot;classloader#getSystemResourceAsStream-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.getSystemResourceAsStream(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された名前のリソースを検索します。特定のクラスに関連付けられているリソースを検索するためのルールは、クラスの定義&lt;a href=&quot;classloader&quot;&gt;クラスローダー&lt;/a&gt;によって実装されます。このメソッドは、このオブジェクトのクラスローダーに委譲します。このオブジェクトがブートストラップクラスローダーによってロードされた場合、メソッドは&lt;a href=&quot;classloader#getSystemResourceAsStream-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.getSystemResourceAsStream(java.lang.String)&lt;/code&gt; に&lt;/a&gt;委譲します。</target>
        </trans-unit>
        <trans-unit id="8b5372a55ce3d26862d39626b3b9d3b969ad0169" translate="yes" xml:space="preserve">
          <source>Finds a resource, returning a URI to the resource in the module.</source>
          <target state="translated">リソースを見つけ、モジュール内のリソースへのURIを返します。</target>
        </trans-unit>
        <trans-unit id="ed8cb43bcaeb95ee97efb8215e1cda76cf74e245" translate="yes" xml:space="preserve">
          <source>Finds all resources of the specified name from the search path used to load classes.</source>
          <target state="translated">クラスをロードするために使用される検索パスから、指定された名前のすべてのリソースを検索します。</target>
        </trans-unit>
        <trans-unit id="c9f19df81fb6e096d5d9f2e170ac68ddf1f51e15" translate="yes" xml:space="preserve">
          <source>Finds all resources of the specified name from the search path used to load classes. The resources thus found are returned as an &lt;a href=&quot;../util/enumeration&quot;&gt;&lt;code&gt;&lt;code&gt;Enumeration&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">クラスのロードに使用される検索パスから、指定された名前のすべてのリソースを検索します。このようにして見つかったリソースは、&lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;../util/enumeration&quot;&gt; &lt;code&gt;&lt;code&gt;Enumeration&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;として返されます。</target>
        </trans-unit>
        <trans-unit id="6db65724c0dcdf134606fcdb6f8d33703eea8aaf" translate="yes" xml:space="preserve">
          <source>Finds all resources of the specified name from the search path used to load classes. The resources thus found are returned as an &lt;a href=&quot;../util/enumeration&quot;&gt;&lt;code&gt;Enumeration&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">クラスのロードに使用される検索パスから、指定された名前のすべてのリソースを検索します。このようにして見つかったリソースは、&lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;../util/enumeration&quot;&gt; &lt;code&gt;Enumeration&lt;/code&gt; &lt;/a&gt;として返されます。</target>
        </trans-unit>
        <trans-unit id="55a4bac4e50df2c17deef8eb3caf2d5ba110c183" translate="yes" xml:space="preserve">
          <source>Finds all the applets in the document represented by this applet context.</source>
          <target state="translated">このアプレットコンテキストで表されるドキュメント内のすべてのアプレットを検索します。</target>
        </trans-unit>
        <trans-unit id="1b5321ba487dd1a106c9c22d79eb3596b75366a1" translate="yes" xml:space="preserve">
          <source>Finds all the keys of the streams in this applet context.</source>
          <target state="translated">このアプレットコンテキスト内のストリームのすべてのキーを見つけます。</target>
        </trans-unit>
        <trans-unit id="39f5d82eb3d7b11a3d8ac86b88d2a2df6ee8cef9" translate="yes" xml:space="preserve">
          <source>Finds all the resources with the given name.</source>
          <target state="translated">指定された名前のリソースをすべて検索します。</target>
        </trans-unit>
        <trans-unit id="d5124138e515f2e5c141692f1b3bc3ccb6938cee" translate="yes" xml:space="preserve">
          <source>Finds all the resources with the given name. A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is independent of the location of the code.</source>
          <target state="translated">与えられた名前を持つすべてのリソースを検索します。リソースとは、コードの場所に依存しない方法でクラスコードによってアクセスできるいくつかのデータ(画像、音声、テキストなど)のことです。</target>
        </trans-unit>
        <trans-unit id="38436b42de21930361f85514ca109e320b5247b6" translate="yes" xml:space="preserve">
          <source>Finds all the resources with the given name. A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is independent of the location of the code. The name of a resource is a &quot;/&quot;-separated path name that identifies the resource.</source>
          <target state="translated">与えられた名前を持つすべてのリソースを検索します。リソースとは、コードの場所に依存しない方法でクラスコードによってアクセスできるデータ(画像、音声、テキストなど)のことです。リソースの名前は、リソースを識別する&quot;/&quot;で区切られたパス名です。</target>
        </trans-unit>
        <trans-unit id="4b1ce48837e6850260c79968ed0b2269cf2e69f8" translate="yes" xml:space="preserve">
          <source>Finds and loads the class with the specified name from the URL search path.</source>
          <target state="translated">URL検索パスから指定した名前のクラスを検索して読み込みます。</target>
        </trans-unit>
        <trans-unit id="df29b59cb9718467c1be69b8d2b3d351189ed29b" translate="yes" xml:space="preserve">
          <source>Finds and loads the class with the specified name from the URL search path. Any URLs referring to JAR files are loaded and opened as needed until the class is found.</source>
          <target state="translated">URLの検索パスから指定した名前のクラスを検索して読み込みます。JARファイルを参照しているURLは、クラスが見つかるまで必要に応じて読み込まれ、開かれます。</target>
        </trans-unit>
        <trans-unit id="734fb3f929fe6c595373476e9b396277ea9acb50" translate="yes" xml:space="preserve">
          <source>Finds and returns the applet in the document represented by this applet context with the given name.</source>
          <target state="translated">このアプレットコンテキストで表されるドキュメント内のアプレットを、指定された名前で検索して返します。</target>
        </trans-unit>
        <trans-unit id="6efa1c7133de00c902292f849e42cab66c2bf30f" translate="yes" xml:space="preserve">
          <source>Finds and returns the applet in the document represented by this applet context with the given name. The name can be set in the HTML tag by setting the &lt;code&gt;name&lt;/code&gt; attribute.</source>
          <target state="translated">指定された名前のこのアプレットコンテキストによって表されるドキュメント内のアプレットを検索して返します。名前は、 &lt;code&gt;name&lt;/code&gt; 属性を設定することでHTMLタグに設定できます。</target>
        </trans-unit>
        <trans-unit id="826006ce6b0bfbc05eef882e73ef3f4a88a02467" translate="yes" xml:space="preserve">
          <source>Finds and returns the first leaf that is a descendant of this node -- either this node or its first child's first leaf.</source>
          <target state="translated">このノードの子孫である最初のリーフ(このノードまたはその最初の子の最初のリーフ)を見つけて返します。</target>
        </trans-unit>
        <trans-unit id="2e81f88949c37c07f3655207654c6f1ff02ea557" translate="yes" xml:space="preserve">
          <source>Finds and returns the first leaf that is a descendant of this node -- either this node or its first child's first leaf. Returns this node if it is a leaf.</source>
          <target state="translated">このノードの子孫である最初のリーフ(このノードまたはその最初の子の最初のリーフ)を見つけて返します。このノードがリーフの場合は、このノードを返します。</target>
        </trans-unit>
        <trans-unit id="0dfe7ea429e898df4747e82380842367dfe7822a" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;Object&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">2つの &lt;code&gt;Object&lt;/code&gt; 配列間の最初の不一致のインデックスを見つけて返します。不一致が見つからない場合は-1を返します。</target>
        </trans-unit>
        <trans-unit id="a1de64908a138ac2b969512261217a2f9b89a4c4" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;Object&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">2つの &lt;code&gt;Object&lt;/code&gt; 配列間の最初の不一致のインデックスを見つけて返します。不一致が見つからない場合は-1を返します。インデックスは、0（両端を含む）から小さい方の配列の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="471824617a02d7401e06edbf2cba89621eaf157b" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;boolean&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">2つの &lt;code&gt;boolean&lt;/code&gt; 配列間の最初の不一致のインデックスを見つけて返します。不一致が見つからない場合は-1を返します。</target>
        </trans-unit>
        <trans-unit id="16bd850905ee68a007cb8a2024360fbc0a2e3b9c" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;boolean&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">2つの &lt;code&gt;boolean&lt;/code&gt; 配列間の最初の不一致のインデックスを見つけて返します。不一致が見つからない場合は-1を返します。インデックスは、0（両端を含む）から小さい方の配列の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="8af1b65e52b521319028673f12e78182856f0d7f" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;byte&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">2つの &lt;code&gt;byte&lt;/code&gt; 配列間の最初の不一致のインデックスを見つけて返します。不一致が見つからない場合は-1を返します。</target>
        </trans-unit>
        <trans-unit id="6c23c8b7c711b2ffaae82ef10428489bad839b8d" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;byte&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">2つの &lt;code&gt;byte&lt;/code&gt; 配列間の最初の不一致のインデックスを見つけて返します。不一致が見つからない場合は-1を返します。インデックスは、0（両端を含む）から小さい方の配列の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="eaed9c61269fc091d9f1c226a2ff5394434efe0f" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;char&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">2つの &lt;code&gt;char&lt;/code&gt; 配列間の最初の不一致のインデックスを検索して返します。不一致が見つからない場合は、-1を返します。</target>
        </trans-unit>
        <trans-unit id="feaf4fa9a9c4db3540e98915c5fbb1133c126fd4" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;char&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">2つの &lt;code&gt;char&lt;/code&gt; 配列間の最初の不一致のインデックスを検索して返します。不一致が見つからない場合は、-1を返します。インデックスは、0（両端を含む）から小さい方の配列の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="77caa5c4612949a9484309e089874cf165c4944b" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;double&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">2つの &lt;code&gt;double&lt;/code&gt; 配列間の最初の不一致のインデックスを検索して返します。不一致が見つからない場合は、-1を返します。</target>
        </trans-unit>
        <trans-unit id="3ca55a946dae5d5567dd9ab37dc5bfea350cb56f" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;double&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">2つの &lt;code&gt;double&lt;/code&gt; 配列間の最初の不一致のインデックスを検索して返します。不一致が見つからない場合は、-1を返します。インデックスは、0（両端を含む）から小さい方の配列の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="405070cadac309cec50ee953e8534c2a521e2ed6" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;float&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">2つの &lt;code&gt;float&lt;/code&gt; 配列間の最初の不一致のインデックスを検索して返します。不一致が見つからない場合は、-1を返します。</target>
        </trans-unit>
        <trans-unit id="ab12e15abef69acc8cb421ab25f399e2bf479ddf" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;float&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">2つの &lt;code&gt;float&lt;/code&gt; 配列間の最初の不一致のインデックスを検索して返します。不一致が見つからない場合は、-1を返します。インデックスは、0（両端を含む）から小さい方の配列の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="6bb2edff1699617616a3a6252b05db8339216864" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;int&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">2つの &lt;code&gt;int&lt;/code&gt; 配列間の最初の不一致のインデックスを検索して返します。不一致が見つからない場合は、-1を返します。</target>
        </trans-unit>
        <trans-unit id="cf2cd8f73e9f0df443831e4decf67e8302ceca44" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;int&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">2つの &lt;code&gt;int&lt;/code&gt; 配列間の最初の不一致のインデックスを検索して返します。不一致が見つからない場合は、-1を返します。インデックスは、0（両端を含む）から小さい方の配列の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="7640ecb391799ea47ce0a05fac90ebd2d4406e33" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;long&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">2つの &lt;code&gt;long&lt;/code&gt; 配列間の最初の不一致のインデックスを検索して返します。不一致が見つからない場合は、-1を返します。</target>
        </trans-unit>
        <trans-unit id="c387d49b98f035053dbb5044ea3928e42d130094" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;long&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">2つの &lt;code&gt;long&lt;/code&gt; 配列間の最初の不一致のインデックスを検索して返します。不一致が見つからない場合は、-1を返します。インデックスは、0（両端を含む）から小さい方の配列の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="31d349f985f332d3adfc72eabc82e0873a2cff72" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;short&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">2つの &lt;code&gt;short&lt;/code&gt; 配列間の最初の不一致のインデックスを検索して返します。不一致が見つからない場合は、-1を返します。</target>
        </trans-unit>
        <trans-unit id="83efe8766b037cf2dbedd5ee02ebda531c264b9e" translate="yes" xml:space="preserve">
          <source>Finds and returns the index of the first mismatch between two &lt;code&gt;short&lt;/code&gt; arrays, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller array.</source>
          <target state="translated">2つの &lt;code&gt;short&lt;/code&gt; 配列間の最初の不一致のインデックスを検索して返します。不一致が見つからない場合は、-1を返します。インデックスは、0（両端を含む）から小さい方の配列の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="cd6ce7ae94e00786707c70ed422726fd0ba20fd1" translate="yes" xml:space="preserve">
          <source>Finds and returns the last leaf that is a descendant of this node -- either this node or its last child's last leaf.</source>
          <target state="translated">このノードの子孫である最後のリーフを見つけて返します。</target>
        </trans-unit>
        <trans-unit id="164439e198c3039e6e880a85f9d4d01631fd6809" translate="yes" xml:space="preserve">
          <source>Finds and returns the last leaf that is a descendant of this node -- either this node or its last child's last leaf. Returns this node if it is a leaf.</source>
          <target state="translated">このノードの子孫である最後のリーフを探して返します。このノードがリーフの場合は、このノードを返します。</target>
        </trans-unit>
        <trans-unit id="647b2a16f025254fb0bd9e745f4cc24e8cdef324" translate="yes" xml:space="preserve">
          <source>Finds and returns the next complete token from this scanner.</source>
          <target state="translated">このスキャナから次の完全なトークンを検索して返します。</target>
        </trans-unit>
        <trans-unit id="b536d4be1e6419e284bb6980b9f4ac3ede52c086" translate="yes" xml:space="preserve">
          <source>Finds and returns the next complete token from this scanner. A complete token is preceded and followed by input that matches the delimiter pattern. This method may block while waiting for input to scan, even if a previous invocation of &lt;a href=&quot;#hasNext()&quot;&gt;&lt;code&gt;hasNext()&lt;/code&gt;&lt;/a&gt; returned &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このスキャナーから次の完全なトークンを見つけて返します。完全なトークンの前後には、区切り文字パターンに一致する入力があります。このメソッドは、&lt;a href=&quot;#hasNext()&quot;&gt; &lt;code&gt;hasNext()&lt;/code&gt; の&lt;/a&gt;前の呼び出しが &lt;code&gt;true&lt;/code&gt; を返した場合でも、入力がスキャンされるのを待っている間にブロックする可能性があります。</target>
        </trans-unit>
        <trans-unit id="e03192b0758390c8721c03d454b5a28fca29e38d" translate="yes" xml:space="preserve">
          <source>Finds and returns the next complete token from this scanner. A complete token is preceded and followed by input that matches the delimiter pattern. This method may block while waiting for input to scan, even if a previous invocation of &lt;a href=&quot;scanner#hasNext--&quot;&gt;&lt;code&gt;hasNext()&lt;/code&gt;&lt;/a&gt; returned &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このスキャナーから次の完全なトークンを見つけて返します。完全なトークンの前後に区切り文字パターンに一致する入力が続きます。以前に&lt;a href=&quot;scanner#hasNext--&quot;&gt; &lt;code&gt;hasNext()&lt;/code&gt; を&lt;/a&gt;呼び出して &lt;code&gt;true&lt;/code&gt; が返された場合でも、このメソッドは入力のスキャンを待機している間、ブロックする場合があります。</target>
        </trans-unit>
        <trans-unit id="36999fe6ae7c20759462e855faabaf02188c07bc" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between this buffer and a given buffer.</source>
          <target state="translated">このバッファと指定されたバッファとの間の最初の不一致の相対インデックスを見つけて返します。</target>
        </trans-unit>
        <trans-unit id="3dd73180deca8608e4e6d7c807bfba4d221faed7" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between this buffer and a given buffer. The index is relative to the &lt;a href=&quot;buffer#position()&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of each buffer and will be in the range of 0 (inclusive) up to the smaller of the &lt;a href=&quot;buffer#remaining()&quot;&gt;&lt;code&gt;remaining&lt;/code&gt;&lt;/a&gt; elements in each buffer (exclusive).</source>
          <target state="translated">このバッファと指定されたバッファ間の最初の不一致の相対インデックスを検索して返します。インデックスは各バッファの&lt;a href=&quot;buffer#position()&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;を基準にしており、0（両端を含む）から各バッファの&lt;a href=&quot;buffer#remaining()&quot;&gt; &lt;code&gt;remaining&lt;/code&gt; &lt;/a&gt;要素（排他的）の小さい方までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="b58da2a9789bc8ef8f638d1ca6b0c57fbb5c55a7" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;Object&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;Object&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は-1を返します。</target>
        </trans-unit>
        <trans-unit id="1a0287ca1c0041aa1ca56d3a6a48fc095e7d1c1a" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;Object&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;Object&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は-1を返します。インデックスは、0（両端を含む）から小さい範囲の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="f051a554b3f50c21a3b76df3a905f6eec0fd69d0" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;boolean&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;boolean&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は-1を返します。</target>
        </trans-unit>
        <trans-unit id="2115d772c75d3acca93c1ec517a5903ec1a651fe" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;boolean&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;boolean&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は-1を返します。インデックスは、0（両端を含む）から小さい範囲の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="37734ee09887b82545bc12a1e9b1548f34118173" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;byte&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;byte&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は-1を返します。</target>
        </trans-unit>
        <trans-unit id="4b5c861244fdb5c6bb8bad1d921aaeae48027e21" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;byte&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;byte&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は-1を返します。インデックスは、0（両端を含む）から小さい範囲の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="888c8c8641d8a0e9e3dd78a08743e472d3744da6" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;char&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;char&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は、-1を返します。</target>
        </trans-unit>
        <trans-unit id="c0d2939699ae0c46ba0d1082748bf6759200f74e" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;char&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;char&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は、-1を返します。インデックスは、0（両端を含む）から小さい範囲の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="2879008d864fe91c23b3c64742d0bb06a08d3b01" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;double&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;double&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は、-1を返します。</target>
        </trans-unit>
        <trans-unit id="aa3650596a381c8ee41386b2e78ed1fdceea72b6" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;double&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;double&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は、-1を返します。インデックスは、0（両端を含む）から小さい範囲の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="f49404472cb21761bc1db025594e532d93fe8461" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;float&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;float&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は、-1を返します。</target>
        </trans-unit>
        <trans-unit id="5db3c7377d896994590d3861d19d256ba1ccc519" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;float&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;float&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は、-1を返します。インデックスは、0（両端を含む）から小さい範囲の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="206d0d2b16198bfdacaabdc35dd27611dc40b8a4" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;int&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;int&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は、-1を返します。</target>
        </trans-unit>
        <trans-unit id="5afb6c2e85e54ec1129faad09602f0734b2a9584" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;int&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;int&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は、-1を返します。インデックスは、0（両端を含む）から小さい範囲の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="575f005b6d315f1e0df25da7400db2dd886d9510" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;long&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;long&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は-1を返します。</target>
        </trans-unit>
        <trans-unit id="b8b2370ccc8193c2d134a36e7241bd91f7ed4b57" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;long&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;long&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は-1を返します。インデックスは、0（両端を含む）から小さい範囲の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="7285d0a8c39c024e8f8c609d179d28652b3b6a12" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;short&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;short&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は-1を返します。</target>
        </trans-unit>
        <trans-unit id="d69fabd445a4c966dbdcfd85252fd55dc9ba46eb" translate="yes" xml:space="preserve">
          <source>Finds and returns the relative index of the first mismatch between two &lt;code&gt;short&lt;/code&gt; arrays over the specified ranges, otherwise return -1 if no mismatch is found. The index will be in the range of 0 (inclusive) up to the length (inclusive) of the smaller range.</source>
          <target state="translated">指定された範囲にわたる2つの &lt;code&gt;short&lt;/code&gt; 配列間の最初の不一致の相対インデックスを検索して返します。不一致が見つからない場合は-1を返します。インデックスは、0（両端を含む）から小さい範囲の長さ（両端を含む）までの範囲になります。</target>
        </trans-unit>
        <trans-unit id="651f0b1588d16672d6f790bc02ce852d03f535f0" translate="yes" xml:space="preserve">
          <source>Finds cycles of threads that are in deadlock waiting to acquire object monitors or &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;ownable synchronizers&lt;/a&gt;.</source>
          <target state="translated">オブジェクトモニターまたは&lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;所有可能なシンクロナイザーの&lt;/a&gt;取得を待機しているデッドロック状態にあるスレッドのサイクルを検索します。</target>
        </trans-unit>
        <trans-unit id="234d87c20314c8931be84d95b143bc1fe38bcb98" translate="yes" xml:space="preserve">
          <source>Finds cycles of threads that are in deadlock waiting to acquire object monitors or &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;ownable synchronizers&lt;/a&gt;. Threads are &lt;em&gt;deadlocked&lt;/em&gt; in a cycle waiting for a lock of these two types if each thread owns one lock while trying to acquire another lock already held by another thread in the cycle.</source>
          <target state="translated">オブジェクトモニタまたは&lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;所有可能なシンクロナイザの&lt;/a&gt;取得を待機しているデッドロック状態のスレッドのサイクルを検索します。スレッドがされている&lt;em&gt;デッドロックし&lt;/em&gt;、すでにサイクル内の別のスレッドが保持している別のロックを取得しようとしているときに、各スレッドが1つのロックを所有している場合、これらの2つのタイプのロックを待機サイクルで。</target>
        </trans-unit>
        <trans-unit id="bb4e00b92009f6d879bb1b9b7ae8ae9bc1457107" translate="yes" xml:space="preserve">
          <source>Finds cycles of threads that are in deadlock waiting to acquire object monitors.</source>
          <target state="translated">デッドロック状態でオブジェクトモニタの取得を待っているスレッドのサイクルを見つけます。</target>
        </trans-unit>
        <trans-unit id="f54f22922dc2809f07bd2d19da5ead6188f6a3c4" translate="yes" xml:space="preserve">
          <source>Finds cycles of threads that are in deadlock waiting to acquire object monitors. That is, threads that are blocked waiting to enter a synchronization block or waiting to reenter a synchronization block after an &lt;a href=&quot;../../../../java.base/java/lang/object#wait()&quot;&gt;&lt;code&gt;Object.wait&lt;/code&gt;&lt;/a&gt; call, where each thread owns one monitor while trying to obtain another monitor already held by another thread in a cycle.</source>
          <target state="translated">オブジェクトモニターの取得を待機しているデッドロック状態にあるスレッドのサイクルを検索します。つまり、同期ブロックに入るのを待っている、または&lt;a href=&quot;../../../../java.base/java/lang/object#wait()&quot;&gt; &lt;code&gt;Object.wait&lt;/code&gt; &lt;/a&gt;呼び出しの後に同期ブロックに再び入るのを待っているブロックされたスレッド。各スレッドは、サイクル内で別のスレッドによってすでに保持されている別のモニターを取得しようとしているときに、1つのモニターを所有します。</target>
        </trans-unit>
        <trans-unit id="31a84b61eb1780643e1cf34b4b4c9457428f23fb" translate="yes" xml:space="preserve">
          <source>Finds cycles of threads that are in deadlock waiting to acquire object monitors. That is, threads that are blocked waiting to enter a synchronization block or waiting to reenter a synchronization block after an &lt;a href=&quot;../object#wait-long-&quot;&gt;&lt;code&gt;Object.wait&lt;/code&gt;&lt;/a&gt; call, where each thread owns one monitor while trying to obtain another monitor already held by another thread in a cycle.</source>
          <target state="translated">オブジェクトモニターの取得を待機しているデッドロック状態のスレッドのサイクルを検索します。つまり、ブロックされているスレッドは、&lt;a href=&quot;../object#wait-long-&quot;&gt; &lt;code&gt;Object.wait&lt;/code&gt; &lt;/a&gt;呼び出しの後に同期ブロックに入るのを待っているか、同期ブロックに再び入るのを待っています。この場合、各スレッドは1つのモニターを所有し、サイクル内の別のスレッドによってすでに保持されている別のモニターを取得しようとします。</target>
        </trans-unit>
        <trans-unit id="ba7611e54b6204b2f8a3dec3bf1df20fc07ecbe1" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are &lt;code&gt;Object&lt;/code&gt; with an optional trailing &lt;code&gt;Object[]&lt;/code&gt; array.</source>
          <target state="translated">コンポーネントが &lt;code&gt;Object&lt;/code&gt; であり、オプションの末尾の &lt;code&gt;Object[]&lt;/code&gt; 配列を持つメソッドタイプを検索または作成します。</target>
        </trans-unit>
        <trans-unit id="3ff7a212ff7f7a09ea59a45a827e4ffe7a5f3f5d" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are &lt;code&gt;Object&lt;/code&gt; with an optional trailing &lt;code&gt;Object[]&lt;/code&gt; array. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. All parameters and the return type will be &lt;code&gt;Object&lt;/code&gt;, except the final array parameter if any, which will be &lt;code&gt;Object[]&lt;/code&gt;.</source>
          <target state="translated">コンポーネントが &lt;code&gt;Object&lt;/code&gt; であり、オプションの末尾の &lt;code&gt;Object[]&lt;/code&gt; 配列を持つメソッドタイプを検索または作成します。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;便利なメソッド。すべてのパラメーターと戻り値の型は &lt;code&gt;Object&lt;/code&gt; になりますが、最後の配列パラメーターがある場合は &lt;code&gt;Object[]&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="45d3ea261afc387a1647f2c5b77dc8ed3332e8fb" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are &lt;code&gt;Object&lt;/code&gt; with an optional trailing &lt;code&gt;Object[]&lt;/code&gt; array. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. All parameters and the return type will be &lt;code&gt;Object&lt;/code&gt;, except the final array parameter if any, which will be &lt;code&gt;Object[]&lt;/code&gt;.</source>
          <target state="translated">オプションの後続の &lt;code&gt;Object[]&lt;/code&gt; 配列を持つコンポーネントが &lt;code&gt;Object&lt;/code&gt; であるメソッドタイプを検索または作成します。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;簡易メソッド。すべてのパラメーターと戻り値の型は &lt;code&gt;Object&lt;/code&gt; になりますが、最後の配列パラメーターがある場合は &lt;code&gt;Object[]&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="755a8a94c7a9ab2907842e0dfee1f16e4d53df3e" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are all &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">コンポーネントがすべて &lt;code&gt;Object&lt;/code&gt; であるメソッドタイプを検索または作成します。</target>
        </trans-unit>
        <trans-unit id="0d6b3c78bbcb4400626c4bfa63f2c773c0deb337" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are all &lt;code&gt;Object&lt;/code&gt;. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. All parameters and the return type will be Object.</source>
          <target state="translated">コンポーネントがすべて &lt;code&gt;Object&lt;/code&gt; であるメソッドタイプを検索または作成します。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;便利なメソッド。すべてのパラメーターと戻り値の型はObjectになります。</target>
        </trans-unit>
        <trans-unit id="caec14e6ef50c8bf4fe8d7fb1bcde78604a44123" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type whose components are all &lt;code&gt;Object&lt;/code&gt;. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. All parameters and the return type will be Object.</source>
          <target state="translated">コンポーネントがすべて &lt;code&gt;Object&lt;/code&gt; であるメソッドタイプを検索または作成します。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;簡易メソッド。すべてのパラメーターと戻り値の型はObjectになります。</target>
        </trans-unit>
        <trans-unit id="f824399e52e4632197517ead0221bb98a004c902" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a different return type.</source>
          <target state="translated">異なる戻り値型を持つメソッド・タイプを検索または作成します。</target>
        </trans-unit>
        <trans-unit id="f3c0b789090627249297e2ae876e09afa0acb458" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a different return type. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">戻り値の型が異なるメソッド型を検索または作成します。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;便利なメソッド。</target>
        </trans-unit>
        <trans-unit id="0a9a1f5d26c21c354b1653b215b25e0546272e13" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a different return type. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">戻り値の型が異なるメソッド型を検索または作成します。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;簡易メソッド。</target>
        </trans-unit>
        <trans-unit id="eac98585bca72a958f2f37bc86968d2acc943624" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a single different parameter type.</source>
          <target state="translated">1 つの異なるパラメータ・タイプを持つメソッド・タイプを検索または作成します。</target>
        </trans-unit>
        <trans-unit id="8028b74b7f92e3122ccb97bc0336386637297566" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a single different parameter type. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">単一の異なるパラメータータイプを持つメソッドタイプを検索または作成します。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;便利なメソッド。</target>
        </trans-unit>
        <trans-unit id="2dd68a0e1c7f55f2ff719c1d2dddb6aaa215bd79" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with a single different parameter type. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">単一の異なるパラメータータイプを持つメソッドタイプを検索または作成します。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;簡易メソッド。</target>
        </trans-unit>
        <trans-unit id="a1c99958d01f0f97cb10abd374a0167e0d21f888" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with additional parameter types.</source>
          <target state="translated">追加のパラメータ・タイプを持つメソッド・タイプを検索または作成します。</target>
        </trans-unit>
        <trans-unit id="e5c6a19c8f2602a136a7293cd2b2f3b131a424fd" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with additional parameter types. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">追加のパラメータータイプを使用してメソッドタイプを検索または作成します。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;便利なメソッド。</target>
        </trans-unit>
        <trans-unit id="bbd506dbecbb276790f829d0e64de83eba036633" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with additional parameter types. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">追加のパラメーター型を持つメソッド型を検索または作成します。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;簡易メソッド。</target>
        </trans-unit>
        <trans-unit id="7b98e7dffd01824793c8528912738e7b4124b6c6" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with some parameter types omitted.</source>
          <target state="translated">いくつかのパラメータ・タイプが省略されたメソッド・タイプを検索または作成します。</target>
        </trans-unit>
        <trans-unit id="bf0c0da371470fb5e60e235a385e8402c62509f3" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with some parameter types omitted. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一部のパラメータータイプが省略されたメソッドタイプを検索または作成します。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;便利なメソッド。</target>
        </trans-unit>
        <trans-unit id="54b87d121a8607e43933bceecb002602a25badd9" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with some parameter types omitted. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一部のパラメーター型が省略されたメソッド型を検索または作成します。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;簡易メソッド。</target>
        </trans-unit>
        <trans-unit id="f884b03a5b33b1e32bad90a97235a0de49081b82" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components.</source>
          <target state="translated">指定されたコンポーネントを持つメソッド・タイプを検索または作成します。</target>
        </trans-unit>
        <trans-unit id="1b02e6de98c28a9037e421b9fa1490b2feb2fa1d" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定されたコンポーネントを使用してメソッドタイプを検索または作成します。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;便利なメソッド。</target>
        </trans-unit>
        <trans-unit id="e5af1ab6ed6484b3382fc7cd88a58813fbd016bf" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The leading parameter type is prepended to the remaining array.</source>
          <target state="translated">指定されたコンポーネントを使用してメソッドタイプを検索または作成します。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;便利なメソッド。先頭のパラメータータイプは、残りの配列の前に付加されます。</target>
        </trans-unit>
        <trans-unit id="4675fcda352ad3f6aeeae071dd9a837bb7671506" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has no parameter types.</source>
          <target state="translated">指定されたコンポーネントを使用してメソッドタイプを検索または作成します。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;便利なメソッド。結果のメソッドにはパラメータータイプがありません。</target>
        </trans-unit>
        <trans-unit id="41506aaeb882e9ec798c68b65f2e56a0ab0331db" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has the same parameter types as &lt;code&gt;ptypes&lt;/code&gt;, and the specified return type.</source>
          <target state="translated">指定されたコンポーネントを使用してメソッドタイプを検索または作成します。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;便利なメソッド。結果のメソッドは、 &lt;code&gt;ptypes&lt;/code&gt; と同じパラメーター型と、指定された戻り値の型を持ちます。</target>
        </trans-unit>
        <trans-unit id="8611060ff08d24c9119ef98b7f64fb7d05825946" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has the single given parameter type.</source>
          <target state="translated">指定されたコンポーネントを使用してメソッドタイプを検索または作成します。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;便利なメソッド。結果のメソッドには、指定された単一のパラメーター型があります。</target>
        </trans-unit>
        <trans-unit id="1c0153e37c9ed7069a0bb24c0086ac2d215a54ea" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定されたコンポーネントを持つメソッドタイプを検索または作成します。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;簡易メソッド。</target>
        </trans-unit>
        <trans-unit id="c751ba9d98f6a923a0919f62d20a3afdd914b9eb" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The leading parameter type is prepended to the remaining array.</source>
          <target state="translated">指定されたコンポーネントを持つメソッドタイプを検索または作成します。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;簡易メソッド。先行するパラメータタイプが残りの配列の前に追加されます。</target>
        </trans-unit>
        <trans-unit id="f9889c23b91b52f3101495e7cded108684d8c29b" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has no parameter types.</source>
          <target state="translated">指定されたコンポーネントを持つメソッドタイプを検索または作成します。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;簡易メソッド。結果のメソッドにはパラメータタイプがありません。</target>
        </trans-unit>
        <trans-unit id="6de7eea09a64e013bd0a48c8be64c9529b3cc848" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has the same parameter types as &lt;code&gt;ptypes&lt;/code&gt;, and the specified return type.</source>
          <target state="translated">指定されたコンポーネントを持つメソッドタイプを検索または作成します。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;簡易メソッド。結果のメソッドには、 &lt;code&gt;ptypes&lt;/code&gt; と同じパラメーター型、および指定された戻り型があります。</target>
        </trans-unit>
        <trans-unit id="ced68f4971421ced1d3f730ac43b178eec70ffde" translate="yes" xml:space="preserve">
          <source>Finds or creates a method type with the given components. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. The resulting method has the single given parameter type.</source>
          <target state="translated">指定されたコンポーネントを持つメソッドタイプを検索または作成します。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;簡易メソッド。結果のメソッドには、指定された単一のパラメーター型があります。</target>
        </trans-unit>
        <trans-unit id="e0054a38edd4bfc307f8a3961f084d14173e32b7" translate="yes" xml:space="preserve">
          <source>Finds or creates an instance of a method type, given the spelling of its bytecode descriptor.</source>
          <target state="translated">バイトコード記述子のスペルを指定して、メソッド型のインスタンスを検索または作成します。</target>
        </trans-unit>
        <trans-unit id="153a9dcaa8d7c983c86317eabbd8828f54846cea" translate="yes" xml:space="preserve">
          <source>Finds or creates an instance of a method type, given the spelling of its bytecode descriptor. Convenience method for &lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. Any class or interface name embedded in the descriptor string will be resolved by calling &lt;a href=&quot;../classloader#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.loadClass(java.lang.String)&lt;/code&gt;&lt;/a&gt; on the given loader (or if it is null, on the system class loader).</source>
          <target state="translated">バイトコード記述子のスペルを指定して、メソッドタイプのインスタンスを検索または作成します。&lt;a href=&quot;#methodType(java.lang.Class,java.lang.Class%5B%5D)&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;便利なメソッド。記述子文字列に埋め込まれているクラスまたはインターフェイス名は、指定されたローダー（またはnullの場合はシステムクラスローダー）で&lt;a href=&quot;../classloader#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.loadClass(java.lang.String)&lt;/code&gt; &lt;/a&gt;を呼び出すことによって解決されます。</target>
        </trans-unit>
        <trans-unit id="a14ed07f8800d1efe9366408a9e41bdecbbcd3dd" translate="yes" xml:space="preserve">
          <source>Finds or creates an instance of a method type, given the spelling of its bytecode descriptor. Convenience method for &lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt;&lt;code&gt;methodType&lt;/code&gt;&lt;/a&gt;. Any class or interface name embedded in the descriptor string will be resolved by calling &lt;a href=&quot;../classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.loadClass(java.lang.String)&lt;/code&gt;&lt;/a&gt; on the given loader (or if it is null, on the system class loader).</source>
          <target state="translated">バイトコード記述子のスペルを指定して、メソッドタイプのインスタンスを検索または作成します。&lt;a href=&quot;methodtype#methodType-java.lang.Class-java.lang.Class:A-&quot;&gt; &lt;code&gt;methodType&lt;/code&gt; の&lt;/a&gt;簡易メソッド。記述子文字列に埋め込まれたクラス名またはインターフェイス名は、指定されたローダー（またはシステムクラスローダーでnullの場合&lt;a href=&quot;../classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.loadClass(java.lang.String)&lt;/code&gt; &lt;/a&gt;でClassLoader.loadClass（java.lang.String）を呼び出すことによって解決されます。</target>
        </trans-unit>
        <trans-unit id="d93f29ea75efef748d866f0da49f213c0e9f5ac7" translate="yes" xml:space="preserve">
          <source>Finds or creates an instance of the given method type.</source>
          <target state="translated">指定されたメソッド・タイプのインスタンスを検索または作成します。</target>
        </trans-unit>
        <trans-unit id="569e9b52ae1ebdf9aa57f2038fa2d8126ed7ae0a" translate="yes" xml:space="preserve">
          <source>Finds the class with the given &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt; in a module defined to this class loader.</source>
          <target state="translated">このクラスローダーに定義されたモジュールで、指定された&lt;a href=&quot;#binary-name&quot;&gt;バイナリ名の&lt;/a&gt;クラスを検索します。</target>
        </trans-unit>
        <trans-unit id="9c718b496a10f106690a3ed497808864ed26f125" translate="yes" xml:space="preserve">
          <source>Finds the class with the given &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt; in a module defined to this class loader. Class loader implementations that support loading from modules should override this method.</source>
          <target state="translated">このクラスローダーに定義されたモジュールで、指定された&lt;a href=&quot;#binary-name&quot;&gt;バイナリ名の&lt;/a&gt;クラスを検索します。モジュールからのロードをサポートするクラスローダーの実装は、このメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="bd05c7e1ea365c2fd6afc2000bf12d4d55a3ec91" translate="yes" xml:space="preserve">
          <source>Finds the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;#binary-name&quot;&gt;バイナリ名の&lt;/a&gt;クラスを検索します。</target>
        </trans-unit>
        <trans-unit id="16dea6a554a463b648694922297ca1a5e84ce68b" translate="yes" xml:space="preserve">
          <source>Finds the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;. This method should be overridden by class loader implementations that follow the delegation model for loading classes, and will be invoked by the &lt;a href=&quot;#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method after checking the parent class loader for the requested class.</source>
          <target state="translated">指定された&lt;a href=&quot;#binary-name&quot;&gt;バイナリ名の&lt;/a&gt;クラスを検索します。このメソッドは、クラスをロードするための委任モデルに従うクラスローダーの実装によってオーバーライドされる必要があり、要求されたクラスの親クラスローダーをチェックした後に&lt;a href=&quot;#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt;メソッドによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f5a871460eb19c436997b177615c5e7039668f5e" translate="yes" xml:space="preserve">
          <source>Finds the class with the specified &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt;. This method should be overridden by class loader implementations that follow the delegation model for loading classes, and will be invoked by the &lt;a href=&quot;classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method after checking the parent class loader for the requested class. The default implementation throws a &lt;code&gt;ClassNotFoundException&lt;/code&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;#name&quot;&gt;バイナリ名を&lt;/a&gt;持つクラスを検索します。このメソッドは、クラスをロードするための委任モデルに従うクラスローダー実装によってオーバーライドされる必要があり、要求されたクラスの親クラスローダーをチェックした後、&lt;a href=&quot;classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドによって呼び出されます。デフォルトの実装は &lt;code&gt;ClassNotFoundException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="a8c6ec34de5c0fbb0d83a91eba95b2eea61b8e53" translate="yes" xml:space="preserve">
          <source>Finds the greatest double less than &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; よりも小さい最大のdoubleを見つけます。</target>
        </trans-unit>
        <trans-unit id="a8df7423e6f70ccdd28b0c907eca102e98c4984e" translate="yes" xml:space="preserve">
          <source>Finds the greatest double less than &lt;code&gt;d&lt;/code&gt;. If &lt;code&gt;NaN&lt;/code&gt;, returns same value.</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; よりも小さい最大のdoubleを見つけます。 &lt;code&gt;NaN&lt;/code&gt; の場合、同じ値を返します。</target>
        </trans-unit>
        <trans-unit id="18a3710ff91d58cbca313d6f1f004f0b7bb471b7" translate="yes" xml:space="preserve">
          <source>Finds the least double greater than &lt;code&gt;d&lt;/code&gt; (if &lt;code&gt;positive&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;), or the greatest double less than &lt;code&gt;d&lt;/code&gt; (if &lt;code&gt;positive&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; より大きい最小のdouble （ &lt;code&gt;positive&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合）、または &lt;code&gt;d&lt;/code&gt; より小さい最大のdouble （ &lt;code&gt;positive&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合）を検索します。</target>
        </trans-unit>
        <trans-unit id="2eb38973e2c36f4d61719edd6f74236d73c6d18d" translate="yes" xml:space="preserve">
          <source>Finds the least double greater than &lt;code&gt;d&lt;/code&gt; (if &lt;code&gt;positive&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;), or the greatest double less than &lt;code&gt;d&lt;/code&gt; (if &lt;code&gt;positive&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;). If &lt;code&gt;NaN&lt;/code&gt;, returns same value. Does not affect floating-point flags, provided these member functions do not: Double.longBitsToDouble(long) Double.doubleToLongBits(double) Double.isNaN(double)</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; よりも大きい最小のdouble （ &lt;code&gt;positive&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合）、または &lt;code&gt;d&lt;/code&gt; よりも小さい最大のdouble （ &lt;code&gt;positive&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合）を検索します。 &lt;code&gt;NaN&lt;/code&gt; の場合、同じ値を返します。これらのメンバー関数が影響を与えない限り、浮動小数点フラグには影響しません：Double.longBitsToDouble（long）Double.doubleToLongBits（double）Double.isNaN（double）</target>
        </trans-unit>
        <trans-unit id="fbe1e5e36b4f252382813559f64ee9ed227ae281" translate="yes" xml:space="preserve">
          <source>Finds the least double greater than &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; より大きい最小のdoubleを見つけます。</target>
        </trans-unit>
        <trans-unit id="5a9b77e9ccd9b30fd33d9d77ccc1bda8c29689f9" translate="yes" xml:space="preserve">
          <source>Finds the least double greater than &lt;code&gt;d&lt;/code&gt;. If &lt;code&gt;NaN&lt;/code&gt;, returns same value.</source>
          <target state="translated">&lt;code&gt;d&lt;/code&gt; より大きい最小のdoubleを見つけます。 &lt;code&gt;NaN&lt;/code&gt; の場合、同じ値を返します。</target>
        </trans-unit>
        <trans-unit id="2f44af75d9a63cc78ef7a212aaff2e3ec7ac94a9" translate="yes" xml:space="preserve">
          <source>Finds the next character in the document with a character in &lt;code&gt;string&lt;/code&gt;, starting at offset &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="translated">オフセット &lt;code&gt;start&lt;/code&gt; から始まる、 &lt;code&gt;string&lt;/code&gt; 内の文字を含むドキュメント内の次の文字を検索します。</target>
        </trans-unit>
        <trans-unit id="2303bad62024759df50ac8556ea8880a8bd8bb9b" translate="yes" xml:space="preserve">
          <source>Finds the next character in the document with a character in &lt;code&gt;string&lt;/code&gt;, starting at offset &lt;code&gt;start&lt;/code&gt;. If there are no characters found, -1 will be returned.</source>
          <target state="translated">オフセット &lt;code&gt;start&lt;/code&gt; から始まる、 &lt;code&gt;string&lt;/code&gt; 内の文字を含むドキュメント内の次の文字を検索します。文字が見つからない場合は、-1が返されます。</target>
        </trans-unit>
        <trans-unit id="a9bad9d05a61ad1610d085ed42eeeebc9ca3099d" translate="yes" xml:space="preserve">
          <source>Finds the resource with the given name.</source>
          <target state="translated">指定された名前のリソースを検索します。</target>
        </trans-unit>
        <trans-unit id="f95713d67a08f050d9ae3fd6ef313052ef9a316e" translate="yes" xml:space="preserve">
          <source>Finds the resource with the given name. A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is independent of the location of the code.</source>
          <target state="translated">与えられた名前のリソースを見つけます。リソースとは、コードの場所に依存しない方法でクラスコードによってアクセスできるいくつかのデータ(画像、音声、テキストなど)のことです。</target>
        </trans-unit>
        <trans-unit id="781d4b515ca95fefadfde75c483c77560536603b" translate="yes" xml:space="preserve">
          <source>Finds the resource with the given name. A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is independent of the location of the code. The name of a resource is a &quot;/&quot;-separated path name that identifies the resource.</source>
          <target state="translated">与えられた名前のリソースを見つけます。リソースとは、コードの場所に依存しない方法でクラスコードによってアクセスできるデータ(画像、音声、テキストなど)のことです。リソースの名前は、リソースを識別する&quot;/&quot;で区切られたパス名です。</target>
        </trans-unit>
        <trans-unit id="e48458ef6aafb5d40a3929be0d4826c7d1c93d2b" translate="yes" xml:space="preserve">
          <source>Finds the resource with the given name. Class loader implementations should override this method to specify where to find resources.</source>
          <target state="translated">指定した名前のリソースを見つけます。クラスローダの実装では、このメソッドをオーバーライドしてリソースを見つける場所を指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="eb9a8a55a872ddd255aa5b300065d4935a31d282" translate="yes" xml:space="preserve">
          <source>Finds the resource with the given name. Class loader implementations should override this method.</source>
          <target state="translated">指定した名前のリソースを見つけます。クラスローダの実装はこのメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="cb6e13171ee3f9ef6b8e543d5e324426393d3511" translate="yes" xml:space="preserve">
          <source>Finds the resource with the specified name on the URL search path.</source>
          <target state="translated">URL検索パスで指定した名前のリソースを検索します。</target>
        </trans-unit>
        <trans-unit id="4ac987e36c94cd1a424c394fd2e53f3d45f6c901" translate="yes" xml:space="preserve">
          <source>Finer control over gaps and overlaps is available in two ways. If you simply want to use the later offset at overlaps then call &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap()&quot;&gt;&lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; immediately after this method.</source>
          <target state="translated">ギャップとオーバーラップをより細かく制御するには、2つの方法があります。オーバーラップで後のオフセットを使用するだけの場合は、このメソッドの直後に&lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap()&quot;&gt; &lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="44c6084b01b445cf12e7e4c28f535b70a5b3a288" translate="yes" xml:space="preserve">
          <source>Finer control over gaps and overlaps is available in two ways. If you simply want to use the later offset at overlaps then call &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt;&lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; immediately after this method.</source>
          <target state="translated">ギャップとオーバーラップをより細かく制御するには、2つの方法があります。オーバーラップで後のオフセットを使用するだけの場合は、このメソッドの直後に&lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt; &lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="5c29493a34a4dd5c58c02ca32396105a6340fd8a" translate="yes" xml:space="preserve">
          <source>Finer control over the WebSocket Opening Handshake can be achieved by using a custom &lt;code&gt;HttpClient&lt;/code&gt;.</source>
          <target state="translated">カスタム &lt;code&gt;HttpClient&lt;/code&gt; を使用すると、WebSocketオープニングハンドシェイクをより細かく制御できます。</target>
        </trans-unit>
        <trans-unit id="7d6315fcd4e1f21d6c5e8ddfedb5c0d2367da837" translate="yes" xml:space="preserve">
          <source>Finishes a multiple-part encryption or decryption operation, depending on how this cipher was initialized.</source>
          <target state="translated">この暗号がどのように初期化されたかに応じて、複数パートの暗号化または復号化処理を終了します。</target>
        </trans-unit>
        <trans-unit id="5ac0306b0ad5993f87d84296e6e19b711bd7f410" translate="yes" xml:space="preserve">
          <source>Finishes the MAC operation.</source>
          <target state="translated">MAC操作を終了します。</target>
        </trans-unit>
        <trans-unit id="3b39857f6b67ccd1155138cd5b904de0cf317e58" translate="yes" xml:space="preserve">
          <source>Finishes the process of connecting a socket channel.</source>
          <target state="translated">ソケットチャンネルの接続処理を終了します。</target>
        </trans-unit>
        <trans-unit id="0c5e8e9fdc708156343f8313826cac87b252a6b0" translate="yes" xml:space="preserve">
          <source>Finishes the signature operation and stores the resulting signature bytes in the provided buffer &lt;code&gt;outbuf&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">署名操作を終了し、結果の署名バイトを、 &lt;code&gt;offset&lt;/code&gt; で開始して、提供されたバッファー &lt;code&gt;outbuf&lt;/code&gt; に格納します。</target>
        </trans-unit>
        <trans-unit id="55822bdee2f9fef91204ece6141d244e5a1799c3" translate="yes" xml:space="preserve">
          <source>Finishes the signature operation and stores the resulting signature bytes in the provided buffer &lt;code&gt;outbuf&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt;. The format of the signature depends on the underlying signature scheme.</source>
          <target state="translated">署名操作を終了し、結果の署名バイトを提供されたバッファー &lt;code&gt;outbuf&lt;/code&gt; に &lt;code&gt;offset&lt;/code&gt; から格納します。署名の形式は、基になる署名スキームによって異なります。</target>
        </trans-unit>
        <trans-unit id="fdd7ec97e8964605068427812b100a1e9dac6121" translate="yes" xml:space="preserve">
          <source>Finishes this signature operation and stores the resulting signature bytes in the provided buffer &lt;code&gt;outbuf&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">この署名操作を終了し、結果の署名バイトを、 &lt;code&gt;offset&lt;/code&gt; で開始して、提供されたバッファー &lt;code&gt;outbuf&lt;/code&gt; に格納します。</target>
        </trans-unit>
        <trans-unit id="664444316115d431c1788278996ab50a5022028c" translate="yes" xml:space="preserve">
          <source>Finishes this signature operation and stores the resulting signature bytes in the provided buffer &lt;code&gt;outbuf&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt;. The format of the signature depends on the underlying signature scheme.</source>
          <target state="translated">この署名操作を終了し、結果の署名バイトを提供されたバッファー &lt;code&gt;outbuf&lt;/code&gt; に &lt;code&gt;offset&lt;/code&gt; から格納します。署名の形式は、基になる署名スキームによって異なります。</target>
        </trans-unit>
        <trans-unit id="84838ca2a969d7b013a01fee8917ab060f79232d" translate="yes" xml:space="preserve">
          <source>Finishes writing compressed data to the output stream without closing the underlying stream.</source>
          <target state="translated">圧縮されたデータを、基になるストリームを閉じることなく、出力ストリームへの書き込みを終了します。</target>
        </trans-unit>
        <trans-unit id="c78d72a268ed639674d9989dffe4bab9dbd346f3" translate="yes" xml:space="preserve">
          <source>Finishes writing compressed data to the output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream.</source>
          <target state="translated">圧縮データの出力ストリームへの書き込みを終了します。同じ出力ストリームに複数のフィルタを連続して適用する場合は、このメソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="f8adba988e7c013ccb0eb762f6cf5eeed903e3f8" translate="yes" xml:space="preserve">
          <source>Finishes writing the contents of the ZIP output stream without closing the underlying stream.</source>
          <target state="translated">ZIP 出力ストリームの内容の書き込みを終了します。</target>
        </trans-unit>
        <trans-unit id="ad1b71c11246b0b6713d9ea2eb36b6cf4f329a8e" translate="yes" xml:space="preserve">
          <source>Finishes writing the contents of the ZIP output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream.</source>
          <target state="translated">ZIP 出力ストリームの内容を、下のストリームを閉じずに書き込みを終了します。同じ出力ストリームに複数のフィルタを連続して適用する場合は、このメソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="f5bb460836a561078aab2dda62c0c063c0f8bd42" translate="yes" xml:space="preserve">
          <source>Finishes writing uncompressed data to the output stream without closing the underlying stream.</source>
          <target state="translated">圧縮されていないデータを、基になるストリームを閉じることなく、出力ストリームへの書き込みを終了します。</target>
        </trans-unit>
        <trans-unit id="26f022245e2c68d8c1c43250ca56653f380f197f" translate="yes" xml:space="preserve">
          <source>Finishes writing uncompressed data to the output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream.</source>
          <target state="translated">圧縮されていないデータの出力ストリームへの書き込みを、基になるストリームを閉じることなく終了します。同じ出力ストリームに複数のフィルタを連続して適用する場合は、このメソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="47bf70ea26f1d56954d9d56dceffc42023159f37" translate="yes" xml:space="preserve">
          <source>Finishings</source>
          <target state="translated">Finishings</target>
        </trans-unit>
        <trans-unit id="613845f04d4258d53ec965e5ad21bbe27e9b3457" translate="yes" xml:space="preserve">
          <source>Finishings.getCategory()</source>
          <target state="translated">Finishings.getCategory()</target>
        </trans-unit>
        <trans-unit id="e267c2aa2ff11c4414aa4d45d764b04da2288d05" translate="yes" xml:space="preserve">
          <source>Finishings.getEnumValueTable()</source>
          <target state="translated">Finishings.getEnumValueTable()</target>
        </trans-unit>
        <trans-unit id="aaa82961c4da64e927622cf2142e00c401f42f81" translate="yes" xml:space="preserve">
          <source>Finishings.getName()</source>
          <target state="translated">Finishings.getName()</target>
        </trans-unit>
        <trans-unit id="5b15b4c91296746e3b2afd503a32d07b02cd825c" translate="yes" xml:space="preserve">
          <source>Finishings.getOffset()</source>
          <target state="translated">Finishings.getOffset()</target>
        </trans-unit>
        <trans-unit id="c3ae27c44b2b5d021db8ee2080b698465cc55fe5" translate="yes" xml:space="preserve">
          <source>Finishings.getStringTable()</source>
          <target state="translated">Finishings.getStringTable()</target>
        </trans-unit>
        <trans-unit id="7eef80d93d788314330426331bc223ed843e0b0e" translate="yes" xml:space="preserve">
          <source>Fire &lt;code&gt;PropertyChange&lt;/code&gt; listener, if one is registered, when children are added or removed.</source>
          <target state="translated">火災 &lt;code&gt;PropertyChange&lt;/code&gt; リスナー、子が追加または削除されたときに1が、登録されている場合。</target>
        </trans-unit>
        <trans-unit id="57ad4ef75f7f2853dc5f7ec8695be63b2c37c0e1" translate="yes" xml:space="preserve">
          <source>Fire PropertyChange listener, if one is registered, when children added/removed.</source>
          <target state="translated">PropertyChangeリスナーが登録されていれば、子が追加・削除されたときに、PropertyChangeリスナーを起動します。</target>
        </trans-unit>
        <trans-unit id="31ba180507c66427d34679b2fbf4e571699f61b4" translate="yes" xml:space="preserve">
          <source>Fire PropertyChange listener, if one is registered, when focus events happen</source>
          <target state="translated">フォーカスイベントが発生したとき、登録されていればPropertyChangeリスナーを起動します。</target>
        </trans-unit>
        <trans-unit id="fcb8d557480a7ee672901611680f258737cf3936" translate="yes" xml:space="preserve">
          <source>Fire PropertyChange listener, if one is registered, when shown/hidden..</source>
          <target state="translated">PropertyChangeリスナーが登録されている場合は、表示/非表示時にFireします。</target>
        </trans-unit>
        <trans-unit id="09c71b029c9bf07168317bfb4ae358cc9e8148dd" translate="yes" xml:space="preserve">
          <source>Fire a BeanContextshipEvent on the BeanContextMembershipListener interface</source>
          <target state="translated">BeanContextMembershipリスナインタフェースでBeanContextshipEventを実行します。</target>
        </trans-unit>
        <trans-unit id="0aa3a904c5ae23735f848b24a71f336108a09eee" translate="yes" xml:space="preserve">
          <source>Fire a visible data property change notification.</source>
          <target state="translated">可視データプロパティ変更通知を発行します。</target>
        </trans-unit>
        <trans-unit id="72e5526ef5cbbe55f1ef6e3b276cadbf88924a85" translate="yes" xml:space="preserve">
          <source>Fire a visible data property change notification. A 'visible' data property is one that represents something about the way the component appears on the display, where that appearance isn't bound to any other property. It notifies screen readers that the visual appearance of the component has changed, so they can notify the user.</source>
          <target state="translated">可視データ プロパティ変更通知を発行します。表示される」データプロパティとは、コンポーネントがディスプレイ上に表示される方法について何かを表すもので、その外観は他のプロパティに縛られていません。これは、コンポーネントの視覚的な外観が変更されたことをスクリーンリーダに通知するので、ユーザに通知することができます。</target>
        </trans-unit>
        <trans-unit id="103cdcb81226678781c9b0730e47e90332c7adf2" translate="yes" xml:space="preserve">
          <source>Fire accessible property change events when the state of the toggle button changes.</source>
          <target state="translated">トグルボタンの状態が変化したときに、アクセス可能なプロパティ変更イベントを発生させます。</target>
        </trans-unit>
        <trans-unit id="f14775246233654a4a799ecb2452e052e32512ad" translate="yes" xml:space="preserve">
          <source>Fires a &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; indicating that a new service has become available.</source>
          <target state="translated">新しいサービスが利用可能になったことを示す &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="06abccd3849a5f91d1b6a7e9ac89b35962c48a5d" translate="yes" xml:space="preserve">
          <source>Fires a &lt;code&gt;BeanContextServiceEvent&lt;/code&gt; notifying of a new service.</source>
          <target state="translated">新しいサービスを通知する &lt;code&gt;BeanContextServiceEvent&lt;/code&gt; を起動します。</target>
        </trans-unit>
        <trans-unit id="503df8a64c51c652c242e07836048d4e0b429689" translate="yes" xml:space="preserve">
          <source>Fires a &lt;code&gt;BeanContextServiceEvent&lt;/code&gt; notifying of a service being revoked.</source>
          <target state="translated">取り消されるサービスを通知する &lt;code&gt;BeanContextServiceEvent&lt;/code&gt; をトリガーします。</target>
        </trans-unit>
        <trans-unit id="bd34decd0218e3d4c1125508671afd92c9d2e750" translate="yes" xml:space="preserve">
          <source>Fires a &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; indicating that a particular service is no longer available.</source>
          <target state="translated">特定のサービスが利用できなくなったことを示す &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; を起動します。</target>
        </trans-unit>
        <trans-unit id="3f3d2a19df8052d9da98f7fd62dc3439975abed1" translate="yes" xml:space="preserve">
          <source>Fires a PropertyChangeEvent in response to a change in a bound property.</source>
          <target state="translated">バインドされたプロパティの変更に応答して、PropertyChangeEvent を発生させます。</target>
        </trans-unit>
        <trans-unit id="e9446dd2a1169cbdbaecb1f508d827a91e6ae858" translate="yes" xml:space="preserve">
          <source>Fires a PropertyChangeEvent in response to a change in a bound property. The event will be delivered to all registered PropertyChangeListeners. No event will be delivered if oldValue and newValue are the same.</source>
          <target state="translated">バインドされたプロパティの変更に応答して PropertyChangeEvent を発生させます。このイベントは、登録されているすべてのPropertyChangeListenersに配信されます。oldValueとnewValueが同じ場合は、イベントは配信されません。</target>
        </trans-unit>
        <trans-unit id="a957a72b34aec00b972da201a946e1431607e82f" translate="yes" xml:space="preserve">
          <source>Fires a PropertyChangeEvent in response to a change in a vetoable property.</source>
          <target state="translated">拒否可能なプロパティの変更に応答して、PropertyChangeEvent を発生させます。</target>
        </trans-unit>
        <trans-unit id="986cd3a235352958182fd166c7bf37c930dc945e" translate="yes" xml:space="preserve">
          <source>Fires a PropertyChangeEvent in response to a change in a vetoable property. The event will be delivered to all registered VetoableChangeListeners. If a VetoableChangeListener throws a PropertyVetoException, a new event is fired reverting all VetoableChangeListeners to the old value and the exception is then rethrown. No event will be delivered if oldValue and newValue are the same.</source>
          <target state="translated">拒否可能なプロパティの変更に応答して、PropertyChangeEvent を発生させます。このイベントは、登録されているすべての VetoableChangeListeners に配信されます。VetoableChangeListener が PropertyVetoException をスローした場合、新しいイベントが発生し、すべての VetoableChangeListener が古い値に戻され、例外が再スローされます。oldValue と newValue が同じ場合はイベントは発生しません。</target>
        </trans-unit>
        <trans-unit id="0272e05986be98da0beab49be185a4045f3b55f6" translate="yes" xml:space="preserve">
          <source>Fires a property change event to listeners that have been registered to track updates of all properties or a property with the specified name.</source>
          <target state="translated">すべてのプロパティまたは指定された名前のプロパティの更新を追跡するために登録されているリスナーに対して、プロパティ変更イベントを発生させます。</target>
        </trans-unit>
        <trans-unit id="fb3b178ed64e3669aa41e0d31c4e41b078ca585c" translate="yes" xml:space="preserve">
          <source>Fires a property change for the INVOKES_STOP_CELL_EDITING_PROPERTY.</source>
          <target state="translated">INVOKES_STOP_CELL_EDITING_PROPERTYのプロパティ変更を発生させます。</target>
        </trans-unit>
        <trans-unit id="2ab9d718e99020efac9e65bbfce54a784c540be5" translate="yes" xml:space="preserve">
          <source>Fires an &lt;code&gt;INTERNAL_FRAME_CLOSING&lt;/code&gt; event and then performs the action specified by the internal frame's default close operation.</source>
          <target state="translated">&lt;code&gt;INTERNAL_FRAME_CLOSING&lt;/code&gt; イベントを発生させてから、内部フレームのデフォルトのクローズ操作で指定されたアクションを実行します。</target>
        </trans-unit>
        <trans-unit id="968363cc64c7c990ddd76a14502d95e3f36c269c" translate="yes" xml:space="preserve">
          <source>Fires an &lt;code&gt;INTERNAL_FRAME_CLOSING&lt;/code&gt; event and then performs the action specified by the internal frame's default close operation. This method is typically invoked by the look-and-feel-implemented action handler for the internal frame's close button.</source>
          <target state="translated">&lt;code&gt;INTERNAL_FRAME_CLOSING&lt;/code&gt; イベントを発生させてから、内部フレームのデフォルトのクローズ操作で指定されたアクションを実行します。このメソッドは通常、内部フレームの閉じるボタンのルックアンドフィールで実装されたアクションハンドラーによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="b02cae2b2657360ceee054992ea59480141cb69c" translate="yes" xml:space="preserve">
          <source>Fires an internal frame event.</source>
          <target state="translated">内部フレームイベントを発生させます。</target>
        </trans-unit>
        <trans-unit id="89c568029389405c57e9dea492e5cd3bb5c9b9f1" translate="yes" xml:space="preserve">
          <source>Fires one or more &lt;code&gt;ActionEvent&lt;/code&gt;s at specified intervals.</source>
          <target state="translated">指定された間隔で1つ以上の &lt;code&gt;ActionEvent&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="559c22a99a880d37fdcacb440db810f4efae3bc8" translate="yes" xml:space="preserve">
          <source>Fires one or more &lt;code&gt;ActionEvent&lt;/code&gt;s at specified intervals. An example use is an animation object that uses a &lt;code&gt;Timer&lt;/code&gt; as the trigger for drawing its frames.</source>
          <target state="translated">指定された間隔で1つ以上の &lt;code&gt;ActionEvent&lt;/code&gt; を発生させます。使用例は、フレームを描画するためのトリガーとして &lt;code&gt;Timer&lt;/code&gt; を使用するアニメーションオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="aff8f470ff4d85acb0ffa60c7430fe9d00f9abd6" translate="yes" xml:space="preserve">
          <source>First Element (Head)</source>
          <target state="translated">第一要素(ヘッド</target>
        </trans-unit>
        <trans-unit id="c00bead1c81e91e54625c2709aaa9b013a2b0de5" translate="yes" xml:space="preserve">
          <source>First Week</source>
          <target state="translated">第一週目</target>
        </trans-unit>
        <trans-unit id="a4976839981b7259ef12f8c95835462246377c8c" translate="yes" xml:space="preserve">
          <source>First a list is created consisting of two strings: &quot;one&quot;; and &quot;two&quot;. Then a stream is created from that list. Next the list is modified by adding a third string: &quot;three&quot;. Finally the elements of the stream are collected and joined together. Since the list was modified before the terminal &lt;code&gt;collect&lt;/code&gt; operation commenced the result will be a string of &quot;one two three&quot;. All the streams returned from JDK collections, and most other JDK classes, are well-behaved in this manner; for streams generated by other libraries, see &lt;a href=&quot;package-summary#StreamSources&quot;&gt;Low-level stream construction&lt;/a&gt; for requirements for building well-behaved streams.</source>
          <target state="translated">最初に、2つの文字列で構成されるリストが作成されます。そして「二人」。次に、そのリストからストリームが作成されます。次に、3番目の文字列 &quot;three&quot;を追加してリストを変更します。最後に、ストリームの要素が収集され、結合されます。端末の &lt;code&gt;collect&lt;/code&gt; 操作が開始する前にリストが変更されたため、結果は「1 2 3」の文字列になります。 JDKコレクションから返されるすべてのストリーム、および他のほとんどのJDKクラスは、この方法で正常に動作します。他のライブラリーによって生成されたストリームの場合、正常に動作するストリームを&lt;a href=&quot;package-summary#StreamSources&quot;&gt;構築する&lt;/a&gt;ための要件については、低レベルのストリーム構築を参照してください。</target>
        </trans-unit>
        <trans-unit id="39b07f53f07df567f05d16e0e9893b4691140fd1" translate="yes" xml:space="preserve">
          <source>First day: Monday</source>
          <target state="translated">初日。月曜日</target>
        </trans-unit>
        <trans-unit id="4e19c31cb79791e4145b98235bbf3558ea85be48" translate="yes" xml:space="preserve">
          <source>First it finds any custom &lt;code&gt;LoggerFinder&lt;/code&gt; provider using the &lt;a href=&quot;../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; facility with the &lt;a href=&quot;classloader#getSystemClassLoader()&quot;&gt;system class loader&lt;/a&gt;.</source>
          <target state="translated">まず、&lt;a href=&quot;classloader#getSystemClassLoader()&quot;&gt;システムクラスローダーで&lt;/a&gt;&lt;a href=&quot;../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;機能を使用してカスタム &lt;code&gt;LoggerFinder&lt;/code&gt; プロバイダーを検索します。</target>
        </trans-unit>
        <trans-unit id="d4c478e34da09cdfa9e1505ccf9f2c5cb7d8a64d" translate="yes" xml:space="preserve">
          <source>First tag value.</source>
          <target state="translated">最初のタグの値。</target>
        </trans-unit>
        <trans-unit id="1029f6b364a8a29e356b09dc711eef15ac82d32a" translate="yes" xml:space="preserve">
          <source>First the &lt;code&gt;checkAccess&lt;/code&gt; method of this thread is called with no arguments. This may result in throwing a &lt;code&gt;SecurityException&lt;/code&gt;.</source>
          <target state="translated">最初に、このスレッドの &lt;code&gt;checkAccess&lt;/code&gt; メソッドが引数なしで呼び出されます。これにより、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="758ee2de5be3bc458e3bd5ada5df83a699dc7690" translate="yes" xml:space="preserve">
          <source>First the value of the attribute</source>
          <target state="translated">最初に属性の値</target>
        </trans-unit>
        <trans-unit id="41d531b50057258f52a83c10f4ebe55993a48c35" translate="yes" xml:space="preserve">
          <source>First wire handle to be assigned.</source>
          <target state="translated">最初に割り当てられるワイヤーハンドル。</target>
        </trans-unit>
        <trans-unit id="60c563401af656126385313287022f70e55351b3" translate="yes" xml:space="preserve">
          <source>First, &lt;code&gt;getBundle&lt;/code&gt; tries loading a resource bundle in the following sequence.</source>
          <target state="translated">最初に、 &lt;code&gt;getBundle&lt;/code&gt; は次の順序でリソースバンドルのロードを試みます。</target>
        </trans-unit>
        <trans-unit id="a54b1c1f9ec4ef87f59dee759620de770d67eb72" translate="yes" xml:space="preserve">
          <source>First, an object of a subclass of &lt;a href=&quot;rmiserverimpl&quot;&gt;&lt;code&gt;RMIServerImpl&lt;/code&gt;&lt;/a&gt; is required, to export the connector server through RMI:</source>
          <target state="translated">まず、RMIを介してコネクタサーバーをエクスポートするには、&lt;a href=&quot;rmiserverimpl&quot;&gt; &lt;code&gt;RMIServerImpl&lt;/code&gt; の&lt;/a&gt;サブクラスのオブジェクトが必要です。</target>
        </trans-unit>
        <trans-unit id="9461c5c263d4215758929229f19d75328b0ed69e" translate="yes" xml:space="preserve">
          <source>First, if a security manager exists, its &lt;code&gt;SecurityManager.checkPermission&lt;/code&gt; method is called with a &lt;code&gt;PropertyPermission(key, &quot;write&quot;)&lt;/code&gt; permission. This may result in a SecurityException being thrown. If no exception is thrown, the specified property is removed.</source>
          <target state="translated">まず、セキュリティマネージャーが存在する場合、その &lt;code&gt;SecurityManager.checkPermission&lt;/code&gt; メソッドが &lt;code&gt;PropertyPermission(key, &quot;write&quot;)&lt;/code&gt; 権限で呼び出されます。これにより、SecurityExceptionがスローされる場合があります。例外がスローされない場合、指定されたプロパティは削除されます。</target>
        </trans-unit>
        <trans-unit id="5919a9ab86c2bfa79c63f16130d9e204af75ed76" translate="yes" xml:space="preserve">
          <source>First, if a security manager exists, its &lt;code&gt;SecurityManager.checkPermission&lt;/code&gt; method is called with a &lt;code&gt;PropertyPermission(key, &quot;write&quot;)&lt;/code&gt; permission. This may result in a SecurityException being thrown. If no exception is thrown, the specified property is set to the given value.</source>
          <target state="translated">まず、セキュリティマネージャーが存在する場合、その &lt;code&gt;SecurityManager.checkPermission&lt;/code&gt; メソッドが &lt;code&gt;PropertyPermission(key, &quot;write&quot;)&lt;/code&gt; 権限で呼び出されます。これにより、SecurityExceptionがスローされる場合があります。例外がスローされない場合、指定されたプロパティは指定された値に設定されます。</target>
        </trans-unit>
        <trans-unit id="630cec87c3fe44b8627bf17e36681c50123374a9" translate="yes" xml:space="preserve">
          <source>First, if the parent is not &lt;code&gt;null&lt;/code&gt;, the &lt;code&gt;checkAccess&lt;/code&gt; method of the parent thread group is called with no arguments; this may result in a security exception.</source>
          <target state="translated">まず、親が &lt;code&gt;null&lt;/code&gt; でない場合、親スレッドグループの &lt;code&gt;checkAccess&lt;/code&gt; メソッドが引数なしで呼び出されます。これにより、セキュリティ例外が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="7532f9af652d35ab51ddf5cb2ea52ae6efb5b3dd" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkLink&lt;/code&gt; method is called with the &lt;code&gt;filename&lt;/code&gt; as its argument. This may result in a security exception.</source>
          <target state="translated">まず、セキュリティマネージャーがある場合、 &lt;code&gt;filename&lt;/code&gt; を引数として &lt;code&gt;checkLink&lt;/code&gt; メソッドが呼び出されます。これにより、セキュリティ例外が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="5a538643b35041ff23eafe84a5ba6a62d3f17d2c" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkLink&lt;/code&gt; method is called with the &lt;code&gt;libname&lt;/code&gt; as its argument. This may result in a security exception.</source>
          <target state="translated">まず、セキュリティマネージャーが存在する場合、 &lt;code&gt;libname&lt;/code&gt; を引数として &lt;code&gt;checkLink&lt;/code&gt; メソッドが呼び出されます。これにより、セキュリティ例外が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="da67ed31dd77ca2507f91362c6d50c04b87cc285" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;NetPermission(&quot;requestPasswordAuthentication&quot;)&lt;/code&gt; permission. This may result in a java.lang.SecurityException.</source>
          <target state="translated">まず、セキュリティマネージャーがある場合、その &lt;code&gt;checkPermission&lt;/code&gt; メソッドは、 &lt;code&gt;NetPermission(&quot;requestPasswordAuthentication&quot;)&lt;/code&gt; 権限で呼び出されます。これにより、java.lang.SecurityExceptionが発生する場合があります。</target>
        </trans-unit>
        <trans-unit id="e92bf33f401e22ad0ecd59d2145290ed31c93e94" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;NetPermission(&quot;setDefaultAuthenticator&quot;)&lt;/code&gt; permission. This may result in a java.lang.SecurityException.</source>
          <target state="translated">まず、セキュリティマネージャーがある場合、その &lt;code&gt;checkPermission&lt;/code&gt; メソッドは、 &lt;code&gt;NetPermission(&quot;setDefaultAuthenticator&quot;)&lt;/code&gt; 権限で呼び出されます。これにより、java.lang.SecurityExceptionが発生する場合があります。</target>
        </trans-unit>
        <trans-unit id="7df8a0d0b6353e40a34478ed736682764f8e4215" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;ReflectPermission(&quot;suppressAccessChecks&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">まず、セキュリティマネージャーがある場合、その &lt;code&gt;checkPermission&lt;/code&gt; メソッドは &lt;code&gt;ReflectPermission(&quot;suppressAccessChecks&quot;)&lt;/code&gt; 権限で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a0db3136da99e70ab98ef55d4f04adf040acbbf0" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; permission to see if it's ok to reassign the &quot;standard&quot; error output stream.</source>
          <target state="translated">最初に、セキュリティマネージャーがある場合、その &lt;code&gt;checkPermission&lt;/code&gt; メソッドが &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; 権限で呼び出され、「標準」エラー出力ストリームを再割り当てしてもよいかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="3286657453eb5380ab0e600fb164deee9c401b19" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; permission to see if it's ok to reassign the &quot;standard&quot; input stream.</source>
          <target state="translated">まず、セキュリティマネージャーが存在する場合、その &lt;code&gt;checkPermission&lt;/code&gt; メソッドが &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; 権限で呼び出され、「標準」入力ストリームを再割り当てしてもよいかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="8f14129c78c7cdc361a044b07bb94220d3ada946" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; permission to see if it's ok to reassign the &quot;standard&quot; output stream.</source>
          <target state="translated">まず、セキュリティマネージャーがある場合、その &lt;code&gt;checkPermission&lt;/code&gt; メソッドが &lt;code&gt;RuntimePermission(&quot;setIO&quot;)&lt;/code&gt; 権限で呼び出され、「標準」出力ストリームを再割り当てしてもよいかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="b817255be7810ed41874fb7dcec80f29e4821283" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;java.security.SecurityPermission(&quot;getProperty.&quot;+key)&lt;/code&gt; permission to see if it's ok to retrieve the specified security property value..</source>
          <target state="translated">まず、セキュリティマネージャーが存在する場合、 &lt;code&gt;java.security.SecurityPermission(&quot;getProperty.&quot;+key)&lt;/code&gt; 権限を使用して &lt;code&gt;checkPermission&lt;/code&gt; メソッドが呼び出され、指定されたセキュリティプロパティ値を取得してもよいかどうかが確認されます。</target>
        </trans-unit>
        <trans-unit id="4940590aa7a1771db205809b7f83aab538ac2e95" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;java.security.SecurityPermission(&quot;setProperty.&quot;+key)&lt;/code&gt; permission to see if it's ok to set the specified security property value.</source>
          <target state="translated">まず、セキュリティマネージャーが存在する場合は、 &lt;code&gt;java.security.SecurityPermission(&quot;setProperty.&quot;+key)&lt;/code&gt; 権限を使用して &lt;code&gt;checkPermission&lt;/code&gt; メソッドが呼び出され、指定されたセキュリティプロパティ値を設定してもよいかどうかが確認されます。</target>
        </trans-unit>
        <trans-unit id="7c9a3e471a0ae2be601b4ce824281ae03928419f" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with an &lt;code&gt;AWTPermission(&quot;listenToAllAWTEvents&quot;)&lt;/code&gt; permission. This may result in a SecurityException.</source>
          <target state="translated">まず、セキュリティマネージャが存在する場合、その &lt;code&gt;checkPermission&lt;/code&gt; メソッドは &lt;code&gt;AWTPermission(&quot;listenToAllAWTEvents&quot;)&lt;/code&gt; 権限で呼び出されます。これにより、SecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="194e4ab2ae30c7d0955502c66727b6b7e5e58bd7" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPropertiesAccess&lt;/code&gt; method is called with no arguments. This may result in a security exception.</source>
          <target state="translated">まず、セキュリティマネージャーがある場合、その &lt;code&gt;checkPropertiesAccess&lt;/code&gt; メソッドが引数なしで呼び出されます。これにより、セキュリティ例外が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="99dc959cc03b1ab4772a53690e57b6c39ceb865d" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPropertiesAccess&lt;/code&gt; method is called. This could result in a SecurityException.</source>
          <target state="translated">まず、セキュリティマネージャーがある場合は、その &lt;code&gt;checkPropertiesAccess&lt;/code&gt; メソッドが呼び出されます。これにより、SecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="b2519f0af4c0bcba466e23def0138c59b105fbcf" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPropertyAccess&lt;/code&gt; method is called with the &lt;code&gt;key&lt;/code&gt; as its argument.</source>
          <target state="translated">まず、セキュリティマネージャーがある場合は、その &lt;code&gt;checkPropertyAccess&lt;/code&gt; メソッドが、 &lt;code&gt;key&lt;/code&gt; を引数として呼び出されます。</target>
        </trans-unit>
        <trans-unit id="630da8e247c9d17ef272d4b3fa1fb7ed11938729" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkPropertyAccess&lt;/code&gt; method is called with the key as its argument. This may result in a SecurityException.</source>
          <target state="translated">まず、セキュリティマネージャーがある場合は、その &lt;code&gt;checkPropertyAccess&lt;/code&gt; メソッドが、キーを引数として呼び出されます。これにより、SecurityExceptionが発生する場合があります。</target>
        </trans-unit>
        <trans-unit id="657cb1cbf04c321e29cc58b264339b9d12a9d4a1" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkRead&lt;/code&gt; method is called with the &lt;code&gt;name&lt;/code&gt; argument as its argument to ensure the read is allowed.</source>
          <target state="translated">まず、セキュリティマネージャーが存在する場合、読み取りが許可されるように、引数として &lt;code&gt;name&lt;/code&gt; 引数を使用して &lt;code&gt;checkRead&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="52905e51dc583591ba87eca8817ee992cbffb075" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkRead&lt;/code&gt; method is called with the &lt;code&gt;name&lt;/code&gt; argument as its argument.</source>
          <target state="translated">まず、セキュリティマネージャーが存在する場合、 &lt;code&gt;name&lt;/code&gt; 引数を引数として &lt;code&gt;checkRead&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="473d56a2bda4b3966a1d72f9b1c60220f588cdea" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkRead&lt;/code&gt; method is called with the path represented by the &lt;code&gt;file&lt;/code&gt; argument as its argument.</source>
          <target state="translated">まず、セキュリティマネージャーがある場合、その &lt;code&gt;checkRead&lt;/code&gt; メソッドは、 &lt;code&gt;file&lt;/code&gt; 引数によって表されるパスを引数として呼び出されます。</target>
        </trans-unit>
        <trans-unit id="94e9e5d9e9067f29b5dd912c5fdcac71153c9d3c" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;addIdentityCertificate&quot;&lt;/code&gt; as its argument to see if it's ok to add a certificate.</source>
          <target state="translated">まず、セキュリティマネージャーがある場合、その &lt;code&gt;checkSecurityAccess&lt;/code&gt; メソッドが &lt;code&gt;&quot;addIdentityCertificate&quot;&lt;/code&gt; を引数として呼び出され、証明書を追加してもよいかどうかが確認されます。</target>
        </trans-unit>
        <trans-unit id="38bceb007d596b6a72fc43c8cf3b1a3304e72e21" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;getSignerPrivateKey&quot;&lt;/code&gt; as its argument to see if it's ok to return the private key.</source>
          <target state="translated">まず、セキュリティマネージャーがある場合は、その &lt;code&gt;checkSecurityAccess&lt;/code&gt; メソッドが &lt;code&gt;&quot;getSignerPrivateKey&quot;&lt;/code&gt; を引数として呼び出され、秘密鍵を返すことができるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="59acb77573a122551f3db25d0017430c0b9b30b8" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;printIdentity&quot;&lt;/code&gt; as its argument to see if it's ok to return the string.</source>
          <target state="translated">まず、セキュリティマネージャーが存在する場合、その文字列を返すことができるかどうかを確認するために、引数として &lt;code&gt;&quot;printIdentity&quot;&lt;/code&gt; を指定して &lt;code&gt;checkSecurityAccess&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="cf73e1d184a9d2367a5bb8fcc91d574de2a00b1d" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;removeIdentityCertificate&quot;&lt;/code&gt; as its argument to see if it's ok to remove a certificate.</source>
          <target state="translated">まず、セキュリティマネージャーが存在する場合、その &lt;code&gt;checkSecurityAccess&lt;/code&gt; メソッドは、 &lt;code&gt;&quot;removeIdentityCertificate&quot;&lt;/code&gt; を引数として呼び出され、証明書を削除してもよいかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="f793765cb10d48ed64717ce7cbb51d56b767abda" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;setIdentityInfo&quot;&lt;/code&gt; as its argument to see if it's ok to specify the information string.</source>
          <target state="translated">まず、セキュリティマネージャーがある場合は、その &lt;code&gt;checkSecurityAccess&lt;/code&gt; メソッドを引数として &lt;code&gt;&quot;setIdentityInfo&quot;&lt;/code&gt; を指定して呼び出し、情報文字列を指定してもよいかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="c87c263023a59975761f675bdcedffbfe57062f5" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;setIdentityPublicKey&quot;&lt;/code&gt; as its argument to see if it's ok to set the public key.</source>
          <target state="translated">まず、セキュリティマネージャーが存在する場合、その &lt;code&gt;checkSecurityAccess&lt;/code&gt; メソッドが引数として &lt;code&gt;&quot;setIdentityPublicKey&quot;&lt;/code&gt; を指定して呼び出され、公開鍵を設定してもよいかどうかが確認されます。</target>
        </trans-unit>
        <trans-unit id="952d106b7ff29e446761b2d68c0a6f473fe5d171" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;setSignerKeyPair&quot;&lt;/code&gt; as its argument to see if it's ok to set the key pair.</source>
          <target state="translated">まず、セキュリティマネージャーが存在する場合は、 &lt;code&gt;&quot;setSignerKeyPair&quot;&lt;/code&gt; を引数として &lt;code&gt;checkSecurityAccess&lt;/code&gt; メソッドを呼び出し、キーペアを設定してもよいかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="b0ac355f70651dacb8131ceb59db569ac54740ea" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with &lt;code&gt;&quot;setSystemScope&quot;&lt;/code&gt; as its argument to see if it's ok to set the identity scope.</source>
          <target state="translated">まず、セキュリティマネージャーが存在する場合、IDスコープを設定してもよいかどうかを確認するために、引数として &lt;code&gt;&quot;setSystemScope&quot;&lt;/code&gt; を使用して &lt;code&gt;checkSecurityAccess&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7d0bf73da91d8cfc94d82050edfe45f9d01b3614" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with the string &lt;code&gt;&quot;removeProvider.&quot;+name&lt;/code&gt; to see if it's ok to remove the provider. If the default implementation of &lt;code&gt;checkSecurityAccess&lt;/code&gt; is used (i.e., that method is not overriden), then this will result in a call to the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with a &lt;code&gt;SecurityPermission(&quot;removeProvider.&quot;+name)&lt;/code&gt; permission.</source>
          <target state="translated">まず、セキュリティマネージャーが存在する場合は、文字列 &lt;code&gt;&quot;removeProvider.&quot;+name&lt;/code&gt; を使用して &lt;code&gt;checkSecurityAccess&lt;/code&gt; メソッドを呼び出し、プロバイダーを削除してもよいかどうかを確認します。 &lt;code&gt;checkSecurityAccess&lt;/code&gt; のデフォルト実装が使用されている場合（つまり、そのメソッドがオーバーライドされていない場合）、これにより、 &lt;code&gt;SecurityPermission(&quot;removeProvider.&quot;+name)&lt;/code&gt; 権限を持つセキュリティマネージャーの &lt;code&gt;checkPermission&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="22a4113dc4a14a2306af36babbe1bc3ff089e43b" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkWrite&lt;/code&gt; method is called with &lt;code&gt;name&lt;/code&gt; as its argument.</source>
          <target state="translated">まず、セキュリティマネージャーが存在する場合、その &lt;code&gt;checkWrite&lt;/code&gt; メソッドは、 &lt;code&gt;name&lt;/code&gt; を引数として呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f305859298b74b0523f1f7783b57d1fea6765597" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkWrite&lt;/code&gt; method is called with the file descriptor &lt;code&gt;fdObj&lt;/code&gt; argument as its argument.</source>
          <target state="translated">まず、セキュリティマネージャーがある場合、ファイル記述子 &lt;code&gt;fdObj&lt;/code&gt; 引数を引数として、その &lt;code&gt;checkWrite&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c91cf76104035d5f20d39bf441da9990fe191720" translate="yes" xml:space="preserve">
          <source>First, if there is a security manager, its &lt;code&gt;checkWrite&lt;/code&gt; method is called with the path represented by the &lt;code&gt;file&lt;/code&gt; argument as its argument.</source>
          <target state="translated">まず、セキュリティマネージャーが存在する場合、 &lt;code&gt;file&lt;/code&gt; 引数で表されるパスを引数として、その &lt;code&gt;checkWrite&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="49d686dae693880915d81f78ccfb7ef226a56f6e" translate="yes" xml:space="preserve">
          <source>First, if there is no security manager (&lt;a href=&quot;../../../java.base/java/lang/system#getSecurityManager()&quot;&gt;&lt;code&gt;System.getSecurityManager()&lt;/code&gt;&lt;/a&gt; is null), then an implementation of this interface is free not to make any checks.</source>
          <target state="translated">まず、セキュリティマネージャがない場合（&lt;a href=&quot;../../../java.base/java/lang/system#getSecurityManager()&quot;&gt; &lt;code&gt;System.getSecurityManager()&lt;/code&gt; &lt;/a&gt;がnullの場合）、このインターフェイスの実装はチェックを行わずに自由に実行できます。</target>
        </trans-unit>
        <trans-unit id="5ff6bcbc69f646bb306774a8ae8cabbf8883fe7a" translate="yes" xml:space="preserve">
          <source>First, if there is no security manager (&lt;a href=&quot;../../java/lang/system#getSecurityManager--&quot;&gt;&lt;code&gt;System.getSecurityManager()&lt;/code&gt;&lt;/a&gt; is null), then an implementation of this interface is free not to make any checks.</source>
          <target state="translated">まず、セキュリティマネージャーがない場合（&lt;a href=&quot;../../java/lang/system#getSecurityManager--&quot;&gt; &lt;code&gt;System.getSecurityManager()&lt;/code&gt; &lt;/a&gt;がnullの場合）、このインターフェイスの実装はチェックを行わなくてもかまいません。</target>
        </trans-unit>
        <trans-unit id="f35979a367457b1544d5cf7bd4da6b524097b0ef" translate="yes" xml:space="preserve">
          <source>First, it attempts to load a class using the generated class name. If such a class can be found and loaded using the specified class loader, is assignment compatible with ResourceBundle, is accessible from ResourceBundle, and can be instantiated, &lt;code&gt;getBundle&lt;/code&gt; creates a new instance of this class and uses it as the &lt;em&gt;result resource bundle&lt;/em&gt;.</source>
          <target state="translated">まず、生成されたクラス名を使用してクラスをロードしようとします。そのようなクラスが、指定されたクラスローダーを使用して検索およびロードでき、ResourceBundleとの割り当て互換性があり、ResourceBundleからアクセスでき、インスタンス化できる場合、 &lt;code&gt;getBundle&lt;/code&gt; はこのクラスの新しいインスタンスを作成し、それを&lt;em&gt;結果のリソースバンドル&lt;/em&gt;として使用します。</target>
        </trans-unit>
        <trans-unit id="944986d74c391d612b43a794fce1f8a9dcb3f396" translate="yes" xml:space="preserve">
          <source>First, readability is determined by the 'requires' directives of the enumerated modules, disregarding any 'transitive' modifiers:</source>
          <target state="translated">最初に、可読性は列挙されたモジュールの 'require' ディレクティブによって決定され、 'transitive' 修飾子は無視されます。</target>
        </trans-unit>
        <trans-unit id="d99765296e192a63c910f44512f4635e342a8286" translate="yes" xml:space="preserve">
          <source>First, the &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;ServiceLoader&lt;/a&gt; mechanism tries to locate an &lt;code&gt;InitialContextFactory&lt;/code&gt; provider using the current thread's context class loader</source>
          <target state="translated">まず、&lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;ServiceLoader&lt;/a&gt;メカニズムは、現在のスレッドのコンテキストクラスローダーを使用して &lt;code&gt;InitialContextFactory&lt;/code&gt; プロバイダーを見つけようとします。</target>
        </trans-unit>
        <trans-unit id="66bf81650c523b8db8eea22c47f21929bf349b8f" translate="yes" xml:space="preserve">
          <source>First, the &lt;code&gt;checkAccess&lt;/code&gt; method of this thread group is called with no arguments; this may result in a security exception.</source>
          <target state="translated">まず、このスレッドグループの &lt;code&gt;checkAccess&lt;/code&gt; メソッドが引数なしで呼び出されます。これにより、セキュリティ例外が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="c38ee250de2500fd72f5925088d85d9d33e0f785" translate="yes" xml:space="preserve">
          <source>First, the &lt;code&gt;checkAccess&lt;/code&gt; method of this thread is called with no arguments. This may result in throwing a &lt;code&gt;SecurityException &lt;/code&gt;(in the current thread).</source>
          <target state="translated">まず、このスレッドの &lt;code&gt;checkAccess&lt;/code&gt; メソッドが引数なしで呼び出されます。これにより、（現在のスレッドで） &lt;code&gt;SecurityException &lt;/code&gt; がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="cc35e5ec48d279e2585b81784dce722712712473" translate="yes" xml:space="preserve">
          <source>First, the &lt;code&gt;checkAccess&lt;/code&gt; method of this thread is called with no arguments. This may result in throwing a &lt;code&gt;SecurityException&lt;/code&gt; (in the current thread).</source>
          <target state="translated">まず、このスレッドの &lt;code&gt;checkAccess&lt;/code&gt; メソッドが引数なしで呼び出されます。これにより、（現在のスレッドで） &lt;code&gt;SecurityException&lt;/code&gt; がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="a2f75f91b664508cf39891be5690ca58a1eda8ff" translate="yes" xml:space="preserve">
          <source>First, the total number of bytes needed to represent all the characters of &lt;code&gt;s&lt;/code&gt; is calculated. If this number is larger than &lt;code&gt;65535&lt;/code&gt;, then a &lt;code&gt;UTFDataFormatException&lt;/code&gt; is thrown. Otherwise, this length is written to the output stream in exactly the manner of the &lt;code&gt;writeShort&lt;/code&gt; method; after this, the one-, two-, or three-byte representation of each character in the string &lt;code&gt;s&lt;/code&gt; is written.</source>
          <target state="translated">最初に、 &lt;code&gt;s&lt;/code&gt; のすべての文字を表すために必要な合計バイト数が計算されます。この数値が &lt;code&gt;65535&lt;/code&gt; より大きい場合、 &lt;code&gt;UTFDataFormatException&lt;/code&gt; がスローされます。それ以外の場合、この長さは &lt;code&gt;writeShort&lt;/code&gt; メソッドとまったく同じ方法で出力ストリームに書き込まれます。この後、文字列 &lt;code&gt;s&lt;/code&gt; の各文字の1バイト、2バイト、または3バイト表現が書き込まれます。</target>
        </trans-unit>
        <trans-unit id="5576952ad05c79cdff45ccd75bd727bb61e387db" translate="yes" xml:space="preserve">
          <source>First, two bytes are read and used to construct an unsigned 16-bit integer in exactly the manner of the &lt;code&gt;readUnsignedShort&lt;/code&gt; method . This integer value is called the</source>
          <target state="translated">最初に、2バイトが読み取られ、 &lt;code&gt;readUnsignedShort&lt;/code&gt; メソッドとまったく同じ方法で符号なし16ビット整数を構築するために使用されます。この整数値は、</target>
        </trans-unit>
        <trans-unit id="3310c837424fc2a64773f638b21cd61d75246a54" translate="yes" xml:space="preserve">
          <source>First, two bytes are read and used to construct an unsigned 16-bit integer in the manner of the &lt;code&gt;readUnsignedShort&lt;/code&gt; method, using network byte order (regardless of the current byte order setting). This integer value is called the</source>
          <target state="translated">最初に、2バイトが読み取られ、 &lt;code&gt;readUnsignedShort&lt;/code&gt; メソッドの方法でネットワークバイトオーダーを使用して（現在のバイトオーダーの設定に関係なく）符号なし16ビット整数を構築するために使用されます。この整数値は、</target>
        </trans-unit>
        <trans-unit id="f7bf74e719e176a13a50c8569b4ca65a8258806f" translate="yes" xml:space="preserve">
          <source>First, two bytes are written to the file, starting at the current file pointer, as if by the &lt;code&gt;writeShort&lt;/code&gt; method giving the number of bytes to follow. This value is the number of bytes actually written out, not the length of the string. Following the length, each character of the string is output, in sequence, using the modified UTF-8 encoding for each character.</source>
          <target state="translated">最初の2つのバイトは、によってかのように、現在のファイルポインタから開始して、ファイルに書き込まれる &lt;code&gt;writeShort&lt;/code&gt; 従うべきバイトの数を与える方法。この値は、実際に書き出されるバイト数であり、文字列の長さではありません。長さに続いて、文字列の各文字が、各文字に変更されたUTF-8エンコーディングを使用して順番に出力されます。</target>
        </trans-unit>
        <trans-unit id="6924aef3403af6247bca950768385f32f61338e7" translate="yes" xml:space="preserve">
          <source>First, two bytes are written to the output stream as if by the &lt;code&gt;writeShort&lt;/code&gt; method giving the number of bytes to follow. This value is the number of bytes actually written out, not the length of the string. Following the length, each character of the string is output, in sequence, using the modified UTF-8 encoding for the character. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by the total number of bytes written to the output stream. This will be at least two plus the length of &lt;code&gt;str&lt;/code&gt;, and at most two plus thrice the length of &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">最初に、2バイトが、後続のバイト数を指定する &lt;code&gt;writeShort&lt;/code&gt; メソッドによるかのように、出力ストリームに書き込まれます。この値は、実際に書き出されるバイト数であり、文字列の長さではありません。長さに続いて、文字列の各文字が、変更されたUTF-8エンコーディングを使用して順番に出力されます。例外がスローされない場合、 &lt;code&gt;written&lt;/code&gt; たカウンタは、出力ストリームに書き込まれたバイトの総数だけ増加します。これは、少なくとも2と &lt;code&gt;str&lt;/code&gt; の長さの和、最大で2と3倍の長さの &lt;code&gt;str&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="d97044dedbadf530d0bd6da36ba87b841638467d" translate="yes" xml:space="preserve">
          <source>FirstLineIndent</source>
          <target state="translated">FirstLineIndent</target>
        </trans-unit>
        <trans-unit id="ef75ab4cef3bee225daeae7c84fa629260137b77" translate="yes" xml:space="preserve">
          <source>Firstly, we can assume that two &lt;code&gt;Duration&lt;/code&gt;s to be added are both positive without losing generality (i.e., &lt;code&gt;(-X)+Y=Y-X&lt;/code&gt;, &lt;code&gt;X+(-Y)=X-Y&lt;/code&gt;, &lt;code&gt;(-X)+(-Y)=-(X+Y)&lt;/code&gt;)</source>
          <target state="translated">まず、追加される2つの &lt;code&gt;Duration&lt;/code&gt; は、一般性を失うことなく両方とも正であると想定できます（つまり、 &lt;code&gt;(-X)+Y=Y-X&lt;/code&gt; 、 &lt;code&gt;X+(-Y)=X-Y&lt;/code&gt; 、 &lt;code&gt;(-X)+(-Y)=-(X+Y)&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="03fb6987ef6f416132f91721e60bb320ad4e9758" translate="yes" xml:space="preserve">
          <source>Five classes aid common special-purpose synchronization idioms.</source>
          <target state="translated">5つのクラスは、一般的な特殊目的の同期の慣用句を支援します。</target>
        </trans-unit>
        <trans-unit id="c499dc3174957bc11f63a94cd3b51f32f168868c" translate="yes" xml:space="preserve">
          <source>Five implementations in &lt;code&gt;java.util.concurrent&lt;/code&gt; support the extended &lt;a href=&quot;blockingqueue&quot;&gt;&lt;code&gt;BlockingQueue&lt;/code&gt;&lt;/a&gt; interface, that defines blocking versions of put and take: &lt;a href=&quot;linkedblockingqueue&quot;&gt;&lt;code&gt;LinkedBlockingQueue&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;arrayblockingqueue&quot;&gt;&lt;code&gt;ArrayBlockingQueue&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;synchronousqueue&quot;&gt;&lt;code&gt;SynchronousQueue&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;priorityblockingqueue&quot;&gt;&lt;code&gt;PriorityBlockingQueue&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;delayqueue&quot;&gt;&lt;code&gt;DelayQueue&lt;/code&gt;&lt;/a&gt;. The different classes cover the most common usage contexts for producer-consumer, messaging, parallel tasking, and related concurrent designs.</source>
          <target state="translated">&lt;code&gt;java.util.concurrent&lt;/code&gt; の 5つの実装は、プットアンドテイクのブロッキングバージョンを定義する拡張&lt;a href=&quot;blockingqueue&quot;&gt; &lt;code&gt;BlockingQueue&lt;/code&gt; &lt;/a&gt;インターフェースをサポートしています：&lt;a href=&quot;linkedblockingqueue&quot;&gt; &lt;code&gt;LinkedBlockingQueue&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;arrayblockingqueue&quot;&gt; &lt;code&gt;ArrayBlockingQueue&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;synchronousqueue&quot;&gt; &lt;code&gt;SynchronousQueue&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;priorityblockingqueue&quot;&gt; &lt;code&gt;PriorityBlockingQueue&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;delayqueue&quot;&gt; &lt;code&gt;DelayQueue&lt;/code&gt; &lt;/a&gt;。さまざまなクラスが、プロデューサー/コンシューマー、メッセージング、並列タスク、および関連する並行設計の最も一般的な使用状況をカバーしています。</target>
        </trans-unit>
        <trans-unit id="30c899a6368172355aa4e751e2b43b474a43498b" translate="yes" xml:space="preserve">
          <source>Five parsing methods are supplied by this class. Four of these perform both the parse and resolve phases. The fifth method, &lt;a href=&quot;#parseUnresolved(java.lang.CharSequence,java.text.ParsePosition)&quot;&gt;&lt;code&gt;parseUnresolved(CharSequence, ParsePosition)&lt;/code&gt;&lt;/a&gt;, only performs the first phase, leaving the result unresolved. As such, it is essentially a low-level operation.</source>
          <target state="translated">このクラスでは、5つの解析メソッドが提供されています。これらのうち4つは、解析フェーズと解決フェーズの両方を実行します。5番目のメソッド&lt;a href=&quot;#parseUnresolved(java.lang.CharSequence,java.text.ParsePosition)&quot;&gt; &lt;code&gt;parseUnresolved(CharSequence, ParsePosition)&lt;/code&gt; &lt;/a&gt;は、最初のフェーズのみを実行し、結果を未解決のままにします。そのため、基本的には低レベルの操作です。</target>
        </trans-unit>
        <trans-unit id="266d742b034f86cdbf1e3af6d7aa446a4d5fa143" translate="yes" xml:space="preserve">
          <source>Five parsing methods are supplied by this class. Four of these perform both the parse and resolve phases. The fifth method, &lt;a href=&quot;datetimeformatter#parseUnresolved-java.lang.CharSequence-java.text.ParsePosition-&quot;&gt;&lt;code&gt;parseUnresolved(CharSequence, ParsePosition)&lt;/code&gt;&lt;/a&gt;, only performs the first phase, leaving the result unresolved. As such, it is essentially a low-level operation.</source>
          <target state="translated">このクラスには、5つの解析メソッドが用意されています。これらのうち4つは、解析フェーズと解決フェーズの両方を実行します。5番目のメソッド&lt;a href=&quot;datetimeformatter#parseUnresolved-java.lang.CharSequence-java.text.ParsePosition-&quot;&gt; &lt;code&gt;parseUnresolved(CharSequence, ParsePosition)&lt;/code&gt; &lt;/a&gt;は、最初のフェーズのみを実行し、結果は未解決のままです。したがって、これは本質的に低レベルの操作です。</target>
        </trans-unit>
        <trans-unit id="3cd49b1790f8f462c34f62232f2e710068d65a5f" translate="yes" xml:space="preserve">
          <source>Fixed offsets - a fully resolved offset from UTC/Greenwich, that uses the same offset for all local date-times</source>
          <target state="translated">固定オフセット-UTC/グリニッジからの完全に解決されたオフセット。</target>
        </trans-unit>
        <trans-unit id="17b625c3f165dbce3544c5563f571a11c9e6772c" translate="yes" xml:space="preserve">
          <source>Fixed sizes.</source>
          <target state="translated">サイズを固定しています。</target>
        </trans-unit>
        <trans-unit id="4936236b35e1a80fafa0b7f11bec661a7570a9f2" translate="yes" xml:space="preserve">
          <source>Fixed-delay execution is appropriate for recurring activities that require &quot;smoothness.&quot; In other words, it is appropriate for activities where it is more important to keep the frequency accurate in the short run than in the long run. This includes most animation tasks, such as blinking a cursor at regular intervals. It also includes tasks wherein regular activity is performed in response to human input, such as automatically repeating a character as long as a key is held down.</source>
          <target state="translated">固定遅延実行は、&quot;滑らかさ &quot;を必要とする反復的なアクティビティに適しています。言い換えれば、長期的に正確な頻度を維持するよりも、短期的に正確な頻度を維持することが重要なアクティビティに適しています。これには、一定の間隔でカーソルを点滅させるような、ほとんどのアニメーションタスクが含まれます。また、キーを押している間は自動的に文字を繰り返すなど、人間の入力に反応して規則的な活動が行われるタスクも含まれる。</target>
        </trans-unit>
        <trans-unit id="e73111ec10a33d7de6d320af72b7ff5790705b65" translate="yes" xml:space="preserve">
          <source>Fixed-rate execution is appropriate for recurring activities that are sensitive to</source>
          <target state="translated">定額執行は、次のような影響を受けやすい経常的な活動に適しています。</target>
        </trans-unit>
        <trans-unit id="06ca7b5e1b7d5713ec8c7a2e35f2930732d9d2f2" translate="yes" xml:space="preserve">
          <source>FixedHeightLayoutCache</source>
          <target state="translated">FixedHeightLayoutCache</target>
        </trans-unit>
        <trans-unit id="a774409a00c21de377cf8ed5c6a56b8547973042" translate="yes" xml:space="preserve">
          <source>Flag</source>
          <target state="translated">Flag</target>
        </trans-unit>
        <trans-unit id="249e37d98641310b76b95040cb8b584e80b7cbe4" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed attribute.</source>
          <target state="translated">観測された属性を変更した後に通知が発生したことを示すフラグ。</target>
        </trans-unit>
        <trans-unit id="8f3fc560d56c36d9c10087965b68e233893310b1" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed attribute. This flag is used to check that the new observed attribute belongs to the observed object at the time of the first notification.</source>
          <target state="translated">観測された属性を変更した後に通知が発生したことを示すフラグ。このフラグは、最初の通知が発生した時点で、新しい観測属性が観測対象に属するかどうかを確認するために使用されます。</target>
        </trans-unit>
        <trans-unit id="442675306660e623c00f3a09c60d6e132dfae5ba" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed object or the observed attribute.</source>
          <target state="translated">観測されたオブジェクトまたは観測された属性を変更した後に通知が発生したことを示すフラグ。</target>
        </trans-unit>
        <trans-unit id="f9663640a984c89bbddc90d68957a27398238f04" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed object or the observed attribute. This flag is used to check that the observed attribute type is correct (depending on the monitor in use) at the time of the first notification.</source>
          <target state="translated">観測対象物または観測属性を変更した後に通知が発生したことを示すフラグです。このフラグは、最初の通知が発生した時点で、観測された属性の種類が正しいことを確認するために使用されます(使用中のモニタに依存します)。</target>
        </trans-unit>
        <trans-unit id="9a244019aa93d00c6e861311b0bafe3d482fd5d3" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed object or the observed attribute. This flag is used to notify any exception (except the cases described above) when trying to get the value of the observed attribute at the time of the first notification.</source>
          <target state="translated">観測されたオブジェクトまたは観測された属性を変更した後に通知が発生したことを示すフラグ。このフラグは、最初の通知時に観測された属性の値を取得しようとしたときに、例外(上記の場合を除く)を通知するために使用されます。</target>
        </trans-unit>
        <trans-unit id="66289b852a66954ad44c7d84ba15a80fdcf1bc6f" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed object.</source>
          <target state="translated">観測対象の変更後に通知が発生したことを示すフラグ。</target>
        </trans-unit>
        <trans-unit id="6b097f053bc3a7a8cd11507e5b8a3b26f9a35af0" translate="yes" xml:space="preserve">
          <source>Flag denoting that a notification has occurred after changing the observed object. This flag is used to check that the new observed object is registered in the MBean server at the time of the first notification.</source>
          <target state="translated">観測されたオブジェクトを変更した後に通知が発生したことを示すフラグです。このフラグは、最初の通知時に新しい観測オブジェクトが MBean サーバに登録されていることを確認するために使用されます。</target>
        </trans-unit>
        <trans-unit id="954537201eea2efcfc35f04f2d76a1caffce234a" translate="yes" xml:space="preserve">
          <source>Flag for 16 bit signed integers.</source>
          <target state="translated">16ビット符号付き整数のフラグ。</target>
        </trans-unit>
        <trans-unit id="eec33029a243bcf359f53a00fdeb45ab9b4ff1bb" translate="yes" xml:space="preserve">
          <source>Flag for 16 bit unsigned integers.</source>
          <target state="translated">16ビット符号なし整数のフラグ。</target>
        </trans-unit>
        <trans-unit id="4f489196890a50c07effdaf77c5df7115980a1db" translate="yes" xml:space="preserve">
          <source>Flag for 32 bit IEEE floats.</source>
          <target state="translated">32ビットIEEEフロートのフラグです。</target>
        </trans-unit>
        <trans-unit id="355d8427312503b299a143e7a1a2e402cae7d00c" translate="yes" xml:space="preserve">
          <source>Flag for 32 bit signed integers.</source>
          <target state="translated">32ビット符号付き整数のフラグ。</target>
        </trans-unit>
        <trans-unit id="09c3f8131183712e4fb56e5256b793ef6e3230d3" translate="yes" xml:space="preserve">
          <source>Flag for 32 bit unsigned integers.</source>
          <target state="translated">32ビット符号なし整数のフラグ。</target>
        </trans-unit>
        <trans-unit id="a38456224796dd1803e946331b5901bc52a9f1aa" translate="yes" xml:space="preserve">
          <source>Flag for 64 bit IEEE doubles.</source>
          <target state="translated">64ビットIEEEダブルスのフラグ。</target>
        </trans-unit>
        <trans-unit id="07c7475f89607142580cf1aad5e9548d5a40d7c4" translate="yes" xml:space="preserve">
          <source>Flag for 8 bit signed integers.</source>
          <target state="translated">8ビット符号付き整数のフラグ。</target>
        </trans-unit>
        <trans-unit id="8dd24db9b4ea3b54f8a363ae0a45a302ba23d056" translate="yes" xml:space="preserve">
          <source>Flag for 8 bit uninterpreted bytes.</source>
          <target state="translated">8 ビットの未解釈バイトのフラグです。</target>
        </trans-unit>
        <trans-unit id="9aa0a4d96516a68f4c4738ccf1b78f0802d63adb" translate="yes" xml:space="preserve">
          <source>Flag for 8 bit unsigned integers.</source>
          <target state="translated">8ビット符号なし整数のフラグ。</target>
        </trans-unit>
        <trans-unit id="d34298b953abbece38110be10aa932e48f484838" translate="yes" xml:space="preserve">
          <source>Flag for IFD pointer defined in TIFF Tech Note 1 in TIFF Specification Supplement 1.</source>
          <target state="translated">TIFF Specification Supplement 1 の TIFF Tech Note 1 で定義されている IFD ポインタのフラグ。</target>
        </trans-unit>
        <trans-unit id="a3e8f2fa2b4ac8aedc7938d7924194e939449d09" translate="yes" xml:space="preserve">
          <source>Flag for alternate metafactories indicating the lambda object implements other marker interfaces besides Serializable</source>
          <target state="translated">ラムダオブジェクトがSerializable以外のマーカーインターフェースを実装していることを示す代替メタファクタリのフラグ</target>
        </trans-unit>
        <trans-unit id="dbea46ad84ceef99f2d91ffa5461c277a9aa9151" translate="yes" xml:space="preserve">
          <source>Flag for alternate metafactories indicating the lambda object must be serializable</source>
          <target state="translated">ラムダオブジェクトがシリアライズ可能でなければならないことを示す代替メタファクタリのフラグ</target>
        </trans-unit>
        <trans-unit id="638d813638a6d21acd50c749b8bc4c2fa5a98c91" translate="yes" xml:space="preserve">
          <source>Flag for alternate metafactories indicating the lambda object requires additional bridge methods</source>
          <target state="translated">ラムダオブジェクトが追加のブリッジメソッドを必要とすることを示す代替メタファクタリのフラグ</target>
        </trans-unit>
        <trans-unit id="b87b1fab3b9826f8c44a4e32136cc53d33d9d85f" translate="yes" xml:space="preserve">
          <source>Flag for null-terminated ASCII strings.</source>
          <target state="translated">ヌル文字で終端するASCII文字列のフラグ。</target>
        </trans-unit>
        <trans-unit id="d05feadaf04fed5d12a57886c799171c5d646b0e" translate="yes" xml:space="preserve">
          <source>Flag for pairs of 32 bit signed integers.</source>
          <target state="translated">32ビット符号付き整数のペアのフラグ。</target>
        </trans-unit>
        <trans-unit id="f3c53c4a8530a3fd149885cfcae3313ba7e8c1e0" translate="yes" xml:space="preserve">
          <source>Flag for pairs of 32 bit unsigned integers.</source>
          <target state="translated">32ビット符号なし整数のペアのフラグ。</target>
        </trans-unit>
        <trans-unit id="bcd9de13d9aa1fde04840c1edc10361e2986703b" translate="yes" xml:space="preserve">
          <source>Flag indicating that media is currently being loaded.</source>
          <target state="translated">メディアが現在ロード中であることを示すフラグ。</target>
        </trans-unit>
        <trans-unit id="d18e467bafc4a6a9285385b8c6e81ee569155390" translate="yes" xml:space="preserve">
          <source>Flag indicating that the downloading of media encountered an error.</source>
          <target state="translated">メディアのダウンロードにエラーが発生したことを示すフラグ。</target>
        </trans-unit>
        <trans-unit id="65f311700d8e5e80070126f0ce1837723d2ef826" translate="yes" xml:space="preserve">
          <source>Flag indicating that the downloading of media was aborted.</source>
          <target state="translated">メディアのダウンロードが中止されたことを示すフラグ。</target>
        </trans-unit>
        <trans-unit id="6fc6da142d7edcc6088f06230a800d9b1ecb7a71" translate="yes" xml:space="preserve">
          <source>Flag indicating that the downloading of media was completed successfully.</source>
          <target state="translated">メディアのダウンロードが正常に完了したことを示すフラグ。</target>
        </trans-unit>
        <trans-unit id="2dd7d1ada841526baea309912fd29b956955ea29" translate="yes" xml:space="preserve">
          <source>Flag to allow processing of unassigned code points</source>
          <target state="translated">未割り当てのコードポイントの処理を許可するフラグ</target>
        </trans-unit>
        <trans-unit id="488d7de1ac571f1cf63434bf32b98bc636da9568" translate="yes" xml:space="preserve">
          <source>Flag to indicate that partial returns are valid.</source>
          <target state="translated">部分的なリターンが有効であることを示すフラグ。</target>
        </trans-unit>
        <trans-unit id="5f2f04fca4158f80583f1781008f7805fdabc4a6" translate="yes" xml:space="preserve">
          <source>Flag to indicate that partial returns are valid. If the flag is true, an implementation of the interface method Document.getText(position,length,Segment) should return as much text as possible without making a copy. The default state of the flag is false which will cause Document.getText(position,length,Segment) to provide the same return behavior it always had, which may or may not make a copy of the text depending upon the request.</source>
          <target state="translated">部分的な戻り値が有効であることを示すフラグ。フラグが真の場合、インターフェイスメソッドDocument.getText(position,length,Segment)の実装は、コピーを行わずに可能な限り多くのテキストを返すべきです。フラグのデフォルトの状態は false で、Document.getText(position,length,Segment)は常に持っていたのと同じリターン動作を提供し、リクエストに応じてテキストのコピーを作成するかしないかを決定します。</target>
        </trans-unit>
        <trans-unit id="0234fbef2f85a75951f2544e11df24a613e63a88" translate="yes" xml:space="preserve">
          <source>Flag to indicate to ignore all beaninfo.</source>
          <target state="translated">すべての beaninfo を無視することを示すフラグ。</target>
        </trans-unit>
        <trans-unit id="83d2e548861ebc37b92cd79d10945dd5d180fc5f" translate="yes" xml:space="preserve">
          <source>Flag to indicate to ignore immediate beaninfo.</source>
          <target state="translated">即時のBeaninfoを無視することを示すフラグ。</target>
        </trans-unit>
        <trans-unit id="6f194e90d75868e9a43492eb79e6a19ed441b674" translate="yes" xml:space="preserve">
          <source>Flag to indicate to use of all beaninfo.</source>
          <target state="translated">すべてのBeaninfoを使用することを示すフラグ。</target>
        </trans-unit>
        <trans-unit id="b811657548f08b33bd13bfd325e5cca70894c154" translate="yes" xml:space="preserve">
          <source>Flag to turn on the check against STD-3 ASCII rules</source>
          <target state="translated">STD-3のASCIIルールに対するチェックをオンにするフラグ</target>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="aa433aa09aacf9ddc26d2b3a4aba3c0064a0b701" translate="yes" xml:space="preserve">
          <source>Flags model changes.</source>
          <target state="translated">フラグモデルの変更</target>
        </trans-unit>
        <trans-unit id="7d908299c4184636b8f4f67a3426cb40d26ee9c1" translate="yes" xml:space="preserve">
          <source>Flags model changes. This is called whenever the model has changed. It is implemented to rebuild the view hierarchy to represent the default root element of the associated model.</source>
          <target state="translated">モデルの変更をフラグします。モデルが変更されるたびに呼び出されます。これは、関連するモデルのデフォルトのルート要素を表現するためにビュー階層を再構築するために実装されています。</target>
        </trans-unit>
        <trans-unit id="9556f1a2ab6b3547bf6cc9e60e3683854b4e0a84" translate="yes" xml:space="preserve">
          <source>Flags, width, and precision are not applicable. If any are provided an &lt;a href=&quot;illegalformatflagsexception&quot;&gt;&lt;code&gt;IllegalFormatFlagsException&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;illegalformatwidthexception&quot;&gt;&lt;code&gt;IllegalFormatWidthException&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;illegalformatprecisionexception&quot;&gt;&lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt;&lt;/a&gt;, respectively will be thrown.</source>
          <target state="translated">フラグ、幅、および精度は適用されません。いずれかが提供されている場合&lt;a href=&quot;illegalformatflagsexception&quot;&gt; &lt;code&gt;IllegalFormatFlagsException&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;illegalformatwidthexception&quot;&gt; &lt;code&gt;IllegalFormatWidthException&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;illegalformatprecisionexception&quot;&gt; &lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt; を&lt;/a&gt;、それぞれスローされます。</target>
        </trans-unit>
        <trans-unit id="317a87f9a0b4a7214175a593b098e52ee141ad05" translate="yes" xml:space="preserve">
          <source>Flash graphics operations.</source>
          <target state="translated">フラッシュグラフィックスの操作。</target>
        </trans-unit>
        <trans-unit id="5671b22f9860283a7ec69bec60c6c9daccbb3e97" translate="yes" xml:space="preserve">
          <source>FlatteningPathIterator</source>
          <target state="translated">FlatteningPathIterator</target>
        </trans-unit>
        <trans-unit id="aa4003618da66550bf758dea6f56a1d3d0c246bf" translate="yes" xml:space="preserve">
          <source>FlavorEvent</source>
          <target state="translated">FlavorEvent</target>
        </trans-unit>
        <trans-unit id="38d0037690897042dd388136b25b7841186bfeef" translate="yes" xml:space="preserve">
          <source>FlavorException</source>
          <target state="translated">FlavorException</target>
        </trans-unit>
        <trans-unit id="566fa480303e91c572631ff49631693221c1fefa" translate="yes" xml:space="preserve">
          <source>FlavorException. If the document has a flavor not supported by this print job.</source>
          <target state="translated">FlavorException。文書にこの印刷ジョブでサポートされていないフレーバーがある場合。</target>
        </trans-unit>
        <trans-unit id="b24a23c59215ce28b4ca8c6dcfeadd5f56f89079" translate="yes" xml:space="preserve">
          <source>FlavorException.getUnsupportedFlavors()</source>
          <target state="translated">FlavorException.getUnsupportedFlavors()</target>
        </trans-unit>
        <trans-unit id="d7c6c7593242c9e771c51f7eec4a0b504eb7f5a8" translate="yes" xml:space="preserve">
          <source>FlavorListener</source>
          <target state="translated">FlavorListener</target>
        </trans-unit>
        <trans-unit id="dd0434f5851357e0820262e82da2a06e4fdf9b9d" translate="yes" xml:space="preserve">
          <source>FlavorMap</source>
          <target state="translated">FlavorMap</target>
        </trans-unit>
        <trans-unit id="77d5bbdf49e3bfddf3da4f172a6230e1665cb5a1" translate="yes" xml:space="preserve">
          <source>FlavorTable</source>
          <target state="translated">FlavorTable</target>
        </trans-unit>
        <trans-unit id="d30feb154c9bd8eb5ccd426ea112b69dcfddca54" translate="yes" xml:space="preserve">
          <source>Flavors are first sorted by their MIME types in the following order:</source>
          <target state="translated">フレーバーは、最初に MIME タイプによって次の順序で並べ替えられます。</target>
        </trans-unit>
        <trans-unit id="78ff5508778116114853e80c61596b58b8492efe" translate="yes" xml:space="preserve">
          <source>FlipBufferStrategy</source>
          <target state="translated">FlipBufferStrategy</target>
        </trans-unit>
        <trans-unit id="9fd658f5f9af419891bcb5665f27d4a97af8b92f" translate="yes" xml:space="preserve">
          <source>Flipping moves the contents of the back buffer to the front buffer, either by copying or by moving the video pointer.</source>
          <target state="translated">フリッピングは、コピーまたはビデオポインタの移動により、バックバッファの内容をフロントバッファに移動させます。</target>
        </trans-unit>
        <trans-unit id="f9430f5d4c5f00efa95596f2c28edf9f7f97924b" translate="yes" xml:space="preserve">
          <source>Flips this buffer.</source>
          <target state="translated">このバッファを反転させます。</target>
        </trans-unit>
        <trans-unit id="4383afa5e388392dcdacdb218541d78e4b31a225" translate="yes" xml:space="preserve">
          <source>Flips this buffer. The limit is set to the current position and then the position is set to zero. If the mark is defined then it is discarded.</source>
          <target state="translated">このバッファを反転させます。リミットは現在の位置に設定され、その後、位置はゼロに設定されます。マークが定義されている場合は破棄されます。</target>
        </trans-unit>
        <trans-unit id="9a10d9eeec807f5e5b91db35d6c151a38e18b245" translate="yes" xml:space="preserve">
          <source>Flips to the component that was added to this layout with the specified &lt;code&gt;name&lt;/code&gt;, using &lt;code&gt;addLayoutComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;addLayoutComponent&lt;/code&gt; を使用して、指定された &lt;code&gt;name&lt;/code&gt; でこのレイアウトに追加されたコンポーネントにフリップします。</target>
        </trans-unit>
        <trans-unit id="d2926c8b85048e10b722e6e88fe2d7ba43f41c82" translate="yes" xml:space="preserve">
          <source>Flips to the component that was added to this layout with the specified &lt;code&gt;name&lt;/code&gt;, using &lt;code&gt;addLayoutComponent&lt;/code&gt;. If no such component exists, then nothing happens.</source>
          <target state="translated">&lt;code&gt;addLayoutComponent&lt;/code&gt; を使用して、指定された &lt;code&gt;name&lt;/code&gt; でこのレイアウトに追加されたコンポーネントにフリップします。そのようなコンポーネントが存在しない場合、何も起こりません。</target>
        </trans-unit>
        <trans-unit id="d237a00563f45f4632208fd4843dad681898ab10" translate="yes" xml:space="preserve">
          <source>Flips to the first card of the container.</source>
          <target state="translated">容器の1枚目のカードにフリップします。</target>
        </trans-unit>
        <trans-unit id="48817d06d0818a52115a2864ec45eda0ae67a11f" translate="yes" xml:space="preserve">
          <source>Flips to the last card of the container.</source>
          <target state="translated">容器の最後のカードにフリップします。</target>
        </trans-unit>
        <trans-unit id="3784a77751abbd2726c05b89792e383c343f533b" translate="yes" xml:space="preserve">
          <source>Flips to the next card of the specified container.</source>
          <target state="translated">指定されたコンテナの次のカードにフリップします。</target>
        </trans-unit>
        <trans-unit id="ca9583200f86339e03ecc0a76903ab746059c3cf" translate="yes" xml:space="preserve">
          <source>Flips to the next card of the specified container. If the currently visible card is the last one, this method flips to the first card in the layout.</source>
          <target state="translated">指定したコンテナの次のカードにフリップします。現在表示されているカードが最後のカードの場合、このメソッドはレイアウトの最初のカードにフリップします。</target>
        </trans-unit>
        <trans-unit id="1e8099358aa9de9d6b784f6f8333b1eee02eefba" translate="yes" xml:space="preserve">
          <source>Flips to the previous card of the specified container.</source>
          <target state="translated">指定されたコンテナの前のカードにフリップします。</target>
        </trans-unit>
        <trans-unit id="c091724bf1722dece68013b73b36a1b94fbc6c31" translate="yes" xml:space="preserve">
          <source>Flips to the previous card of the specified container. If the currently visible card is the first one, this method flips to the last card in the layout.</source>
          <target state="translated">指定したコンテナの前のカードにフリップします。現在表示されているカードが最初のカードの場合、このメソッドはレイアウトの最後のカードにフリップします。</target>
        </trans-unit>
        <trans-unit id="64435fd82de7b1d614dfb9844848a48b14c6cd2c" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="translated">Float</target>
        </trans-unit>
        <trans-unit id="81bec51e308dda0147ad093a32f7aa270f1a51a4" translate="yes" xml:space="preserve">
          <source>Float buffers can be created either by &lt;a href=&quot;#allocate(int)&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, by &lt;a href=&quot;#wrap(float%5B%5D)&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing float array into a buffer, or by creating a &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;view&lt;/i&gt;&lt;/a&gt; of an existing byte buffer.</source>
          <target state="translated">フロートバッファは、バッファのコンテンツにスペースを割り当てる&lt;a href=&quot;#allocate(int)&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;によって、既存のフロート配列をバッファに&lt;a href=&quot;#wrap(float%5B%5D)&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;することによって、または既存のバイトバッファの&lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;ビュー&lt;/i&gt;&lt;/a&gt;を作成する&lt;i&gt;こと&lt;/i&gt;によって作成できます。</target>
        </trans-unit>
        <trans-unit id="8ddcdd0a33166329f127772cf3793ed300f93806" translate="yes" xml:space="preserve">
          <source>Float buffers can be created either by &lt;a href=&quot;floatbuffer#allocate-int-&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, by &lt;a href=&quot;floatbuffer#wrap-float:A-&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing float array into a buffer, or by creating a &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;view&lt;/i&gt;&lt;/a&gt; of an existing byte buffer.</source>
          <target state="translated">フロートバッファーは、バッファーのコンテンツにスペースを割り当てる&lt;a href=&quot;floatbuffer#allocate-int-&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;、既存のfloat配列をバッファーに&lt;a href=&quot;floatbuffer#wrap-float:A-&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;する、または既存のバイトバッファーの&lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;ビュー&lt;/i&gt;&lt;/a&gt;を作成する&lt;i&gt;こと&lt;/i&gt;によって作成できます。</target>
        </trans-unit>
        <trans-unit id="c30b25cd724ad3cf3629d8549e8ac93931d38bc6" translate="yes" xml:space="preserve">
          <source>Float.byteValue()</source>
          <target state="translated">Float.byteValue()</target>
        </trans-unit>
        <trans-unit id="14b1c6d8e92795f3e38f41e2194c4effe03cfef2" translate="yes" xml:space="preserve">
          <source>Float.compare()</source>
          <target state="translated">Float.compare()</target>
        </trans-unit>
        <trans-unit id="4bc244a2f30dfa6752cad0eff6199ead3c60d367" translate="yes" xml:space="preserve">
          <source>Float.compareTo()</source>
          <target state="translated">Float.compareTo()</target>
        </trans-unit>
        <trans-unit id="ec9afe0390d115a5afd1ec29015a1115800da905" translate="yes" xml:space="preserve">
          <source>Float.doubleValue()</source>
          <target state="translated">Float.doubleValue()</target>
        </trans-unit>
        <trans-unit id="0a7435636ce70fa2140b15f815285bfb690253ba" translate="yes" xml:space="preserve">
          <source>Float.equals()</source>
          <target state="translated">Float.equals()</target>
        </trans-unit>
        <trans-unit id="89174f0a622d0819abf8079639212bcf61b17fb3" translate="yes" xml:space="preserve">
          <source>Float.floatToIntBits()</source>
          <target state="translated">Float.floatToIntBits()</target>
        </trans-unit>
        <trans-unit id="f88ceba2288dd52ad7c83a84d4a8ee6924a83a8e" translate="yes" xml:space="preserve">
          <source>Float.floatToRawIntBits()</source>
          <target state="translated">Float.floatToRawIntBits()</target>
        </trans-unit>
        <trans-unit id="1df4bc67926f07271c6e77d1bf2588ee71ad7dc6" translate="yes" xml:space="preserve">
          <source>Float.floatValue()</source>
          <target state="translated">Float.floatValue()</target>
        </trans-unit>
        <trans-unit id="978fe295cde8b13e1c69d5e8345f4503ecc63712" translate="yes" xml:space="preserve">
          <source>Float.hashCode()</source>
          <target state="translated">Float.hashCode()</target>
        </trans-unit>
        <trans-unit id="367885fdf1b04be5f3fd45725a9878b9e0d1e3ce" translate="yes" xml:space="preserve">
          <source>Float.intBitsToFloat()</source>
          <target state="translated">Float.intBitsToFloat()</target>
        </trans-unit>
        <trans-unit id="a678b5dc633d9584f35b1b48dacf0088197519be" translate="yes" xml:space="preserve">
          <source>Float.intValue()</source>
          <target state="translated">Float.intValue()</target>
        </trans-unit>
        <trans-unit id="7a5a879567b1e23dc5e85b7048f9b91bab834e2f" translate="yes" xml:space="preserve">
          <source>Float.isFinite()</source>
          <target state="translated">Float.isFinite()</target>
        </trans-unit>
        <trans-unit id="ecb53d5b3ddb28521550db45d7061cfc41458bb2" translate="yes" xml:space="preserve">
          <source>Float.isInfinite()</source>
          <target state="translated">Float.isInfinite()</target>
        </trans-unit>
        <trans-unit id="4cbb87ead6e58d9373ac3b0711d0f263c2cb8d7a" translate="yes" xml:space="preserve">
          <source>Float.isNaN()</source>
          <target state="translated">Float.isNaN()</target>
        </trans-unit>
        <trans-unit id="a88a671253565394fa2d74a24f8b69442ff0a7c5" translate="yes" xml:space="preserve">
          <source>Float.longValue()</source>
          <target state="translated">Float.longValue()</target>
        </trans-unit>
        <trans-unit id="60f2fbd103f521349406f2c47ac8dee00f9c12b0" translate="yes" xml:space="preserve">
          <source>Float.max()</source>
          <target state="translated">Float.max()</target>
        </trans-unit>
        <trans-unit id="deec23bf69ee572670f0db6ac40a04bbc01b9eed" translate="yes" xml:space="preserve">
          <source>Float.min()</source>
          <target state="translated">Float.min()</target>
        </trans-unit>
        <trans-unit id="b2b8cb2c905a03e7c15da392a38007b972a25f64" translate="yes" xml:space="preserve">
          <source>Float.parseFloat()</source>
          <target state="translated">Float.parseFloat()</target>
        </trans-unit>
        <trans-unit id="01755d4d59dcf64b32a407cde1adc7736197ef11" translate="yes" xml:space="preserve">
          <source>Float.shortValue()</source>
          <target state="translated">Float.shortValue()</target>
        </trans-unit>
        <trans-unit id="8d78998e2c129f04c590030d31e46539b4b14d3c" translate="yes" xml:space="preserve">
          <source>Float.sum()</source>
          <target state="translated">Float.sum()</target>
        </trans-unit>
        <trans-unit id="af8bf58af43421e316889dd37bb4f7bc400e32b5" translate="yes" xml:space="preserve">
          <source>Float.toHexString()</source>
          <target state="translated">Float.toHexString()</target>
        </trans-unit>
        <trans-unit id="c0e7194c54ad276ebd3053d684640de11b132a6b" translate="yes" xml:space="preserve">
          <source>Float.toString()</source>
          <target state="translated">Float.toString()</target>
        </trans-unit>
        <trans-unit id="5a3257a4ed6bcce8ba7f697ab53f02cf94112a97" translate="yes" xml:space="preserve">
          <source>Float.valueOf()</source>
          <target state="translated">Float.valueOf()</target>
        </trans-unit>
        <trans-unit id="a078475bd3c3f6681da8efeea5d12fc88f1442ca" translate="yes" xml:space="preserve">
          <source>FloatBuffer</source>
          <target state="translated">FloatBuffer</target>
        </trans-unit>
        <trans-unit id="662469c7c30b5a90e6232907decc04e1f1ae6180" translate="yes" xml:space="preserve">
          <source>FloatBuffer.allocate()</source>
          <target state="translated">FloatBuffer.allocate()</target>
        </trans-unit>
        <trans-unit id="0e6a9f838eeb6a6192fa21a6d8450eee8624406f" translate="yes" xml:space="preserve">
          <source>FloatBuffer.array()</source>
          <target state="translated">FloatBuffer.array()</target>
        </trans-unit>
        <trans-unit id="e8afa6a7790440e6c43800ad9e6f37d4a1a72902" translate="yes" xml:space="preserve">
          <source>FloatBuffer.arrayOffset()</source>
          <target state="translated">FloatBuffer.arrayOffset()</target>
        </trans-unit>
        <trans-unit id="23110c414735803cb2e9524b09c1d614546ddba4" translate="yes" xml:space="preserve">
          <source>FloatBuffer.asReadOnlyBuffer()</source>
          <target state="translated">FloatBuffer.asReadOnlyBuffer()</target>
        </trans-unit>
        <trans-unit id="c90275a459bf6eea63b763ff19741fb75697405c" translate="yes" xml:space="preserve">
          <source>FloatBuffer.compact()</source>
          <target state="translated">FloatBuffer.compact()</target>
        </trans-unit>
        <trans-unit id="d65614aa06519f781803884867cd2eaf4031dd89" translate="yes" xml:space="preserve">
          <source>FloatBuffer.compareTo()</source>
          <target state="translated">FloatBuffer.compareTo()</target>
        </trans-unit>
        <trans-unit id="032b9be98aa33e7c3465da1e4e6c0714d073f0d9" translate="yes" xml:space="preserve">
          <source>FloatBuffer.duplicate()</source>
          <target state="translated">FloatBuffer.duplicate()</target>
        </trans-unit>
        <trans-unit id="d983005f4d3313b2bde165553c781812b0583600" translate="yes" xml:space="preserve">
          <source>FloatBuffer.equals()</source>
          <target state="translated">FloatBuffer.equals()</target>
        </trans-unit>
        <trans-unit id="3bfbbfd6d48123dc19850f18a86ea1363e254c70" translate="yes" xml:space="preserve">
          <source>FloatBuffer.get()</source>
          <target state="translated">FloatBuffer.get()</target>
        </trans-unit>
        <trans-unit id="09d679c6857fd82d096421671c9824a2002dd733" translate="yes" xml:space="preserve">
          <source>FloatBuffer.hasArray()</source>
          <target state="translated">FloatBuffer.hasArray()</target>
        </trans-unit>
        <trans-unit id="17eb569ec3032a73b52f1c117117780618f0b862" translate="yes" xml:space="preserve">
          <source>FloatBuffer.hashCode()</source>
          <target state="translated">FloatBuffer.hashCode()</target>
        </trans-unit>
        <trans-unit id="4ef712753b6ddb07edec569f32b38756195ead3d" translate="yes" xml:space="preserve">
          <source>FloatBuffer.isDirect()</source>
          <target state="translated">FloatBuffer.isDirect()</target>
        </trans-unit>
        <trans-unit id="15f8cb8b9426afcbc2b92ee89ce25893a13cb85a" translate="yes" xml:space="preserve">
          <source>FloatBuffer.order()</source>
          <target state="translated">FloatBuffer.order()</target>
        </trans-unit>
        <trans-unit id="31a814ac430f94178b07082da2f86be6868e03b0" translate="yes" xml:space="preserve">
          <source>FloatBuffer.put()</source>
          <target state="translated">FloatBuffer.put()</target>
        </trans-unit>
        <trans-unit id="51aef77aa749b14b9a34a0aebb89749f822b2bec" translate="yes" xml:space="preserve">
          <source>FloatBuffer.slice()</source>
          <target state="translated">FloatBuffer.slice()</target>
        </trans-unit>
        <trans-unit id="ebe57cd70a949001ab9a64844e2ce614bb6f66ee" translate="yes" xml:space="preserve">
          <source>FloatBuffer.toString()</source>
          <target state="translated">FloatBuffer.toString()</target>
        </trans-unit>
        <trans-unit id="2af868fa3d593cc47c448727ae6561f7d00e8998" translate="yes" xml:space="preserve">
          <source>FloatBuffer.wrap()</source>
          <target state="translated">FloatBuffer.wrap()</target>
        </trans-unit>
        <trans-unit id="b9940e4d919de9a734b46912d8d615ccc47b17b9" translate="yes" xml:space="preserve">
          <source>FloatControl</source>
          <target state="translated">FloatControl</target>
        </trans-unit>
        <trans-unit id="b95bb0034e6d73bf3676fed52f5c11865577dce9" translate="yes" xml:space="preserve">
          <source>FloatControl.Type</source>
          <target state="translated">FloatControl.Type</target>
        </trans-unit>
        <trans-unit id="2cdb3cc6753dd220a35bf2ae855aba619dc1835d" translate="yes" xml:space="preserve">
          <source>FloatControl.getMaxLabel()</source>
          <target state="translated">FloatControl.getMaxLabel()</target>
        </trans-unit>
        <trans-unit id="9ea1faa0323c70342cb4d8b492ec6d96f3a8ec52" translate="yes" xml:space="preserve">
          <source>FloatControl.getMaximum()</source>
          <target state="translated">FloatControl.getMaximum()</target>
        </trans-unit>
        <trans-unit id="ec2b847e81332eaba5e13170625befe227eb347c" translate="yes" xml:space="preserve">
          <source>FloatControl.getMidLabel()</source>
          <target state="translated">FloatControl.getMidLabel()</target>
        </trans-unit>
        <trans-unit id="4544578bac83afd097f4e5d619f0286265315efa" translate="yes" xml:space="preserve">
          <source>FloatControl.getMinLabel()</source>
          <target state="translated">FloatControl.getMinLabel()</target>
        </trans-unit>
        <trans-unit id="b195afe07fd542779f317c908aa20edbbf9a9b55" translate="yes" xml:space="preserve">
          <source>FloatControl.getMinimum()</source>
          <target state="translated">FloatControl.getMinimum()</target>
        </trans-unit>
        <trans-unit id="11adf7d9747a6f021f96d453e1a764264d54266d" translate="yes" xml:space="preserve">
          <source>FloatControl.getPrecision()</source>
          <target state="translated">FloatControl.getPrecision()</target>
        </trans-unit>
        <trans-unit id="25c6e16344b81f3e918c181f49797b653dbd72bc" translate="yes" xml:space="preserve">
          <source>FloatControl.getUnits()</source>
          <target state="translated">FloatControl.getUnits()</target>
        </trans-unit>
        <trans-unit id="7ce8918f337e55babf56437630f4c87202d3c05d" translate="yes" xml:space="preserve">
          <source>FloatControl.getUpdatePeriod()</source>
          <target state="translated">FloatControl.getUpdatePeriod()</target>
        </trans-unit>
        <trans-unit id="ceb190f8b30bd5e90e3af329a4ac8d095ba92573" translate="yes" xml:space="preserve">
          <source>FloatControl.getValue()</source>
          <target state="translated">FloatControl.getValue()</target>
        </trans-unit>
        <trans-unit id="866c81043de2591d960891a0ba063b3d3224d3c4" translate="yes" xml:space="preserve">
          <source>FloatControl.setValue()</source>
          <target state="translated">FloatControl.setValue()</target>
        </trans-unit>
        <trans-unit id="44c641254be897c8d35dfa2ac9368d4249302fd5" translate="yes" xml:space="preserve">
          <source>FloatControl.shift()</source>
          <target state="translated">FloatControl.shift()</target>
        </trans-unit>
        <trans-unit id="e58b80cd394c1080c32f50afff5b493b00de7aaf" translate="yes" xml:space="preserve">
          <source>FloatControl.toString()</source>
          <target state="translated">FloatControl.toString()</target>
        </trans-unit>
        <trans-unit id="9b89761c1275fbd86f5d8bdac914c12c58e930fa" translate="yes" xml:space="preserve">
          <source>FloatTypeSuffix</source>
          <target state="translated">FloatTypeSuffix</target>
        </trans-unit>
        <trans-unit id="c519d710264ca57131c8c72af46f62f0392a4fb0" translate="yes" xml:space="preserve">
          <source>FloatValue</source>
          <target state="translated">FloatValue</target>
        </trans-unit>
        <trans-unit id="47bbc397e99f332b6e509e454f6ed930e81824fb" translate="yes" xml:space="preserve">
          <source>FloatValue:</source>
          <target state="translated">FloatValue:</target>
        </trans-unit>
        <trans-unit id="f980f6669a99ae97aa471b598c62ac0c3e1f823b" translate="yes" xml:space="preserve">
          <source>Floating Point</source>
          <target state="translated">浮動小数点</target>
        </trans-unit>
        <trans-unit id="b8800852afd836b0863fdad8639bae3a755b7144" translate="yes" xml:space="preserve">
          <source>Floating-point Value</source>
          <target state="translated">浮動小数点値</target>
        </trans-unit>
        <trans-unit id="a212716cbe7ed0298003bab7a55d994d07404503" translate="yes" xml:space="preserve">
          <source>FloatingPointLiteral</source>
          <target state="translated">FloatingPointLiteral</target>
        </trans-unit>
        <trans-unit id="95289a2227c75696577d36f038adc0563446af93" translate="yes" xml:space="preserve">
          <source>Floppy drive icon</source>
          <target state="translated">フロッピードライブアイコン</target>
        </trans-unit>
        <trans-unit id="86eff8eb789b097ddca83f2c9c4617ed23605105" translate="yes" xml:space="preserve">
          <source>Flow</source>
          <target state="translated">Flow</target>
        </trans-unit>
        <trans-unit id="1fbdd67b9ee3d58b6bcf4dadfff2bdda23adb642" translate="yes" xml:space="preserve">
          <source>Flow layouts are typically used to arrange buttons in a panel. It arranges buttons horizontally until no more buttons fit on the same line. The line alignment is determined by the &lt;code&gt;align&lt;/code&gt; property. The possible values are:</source>
          <target state="translated">フローレイアウトは通常、パネル内のボタンを配置するために使用されます。同じ行にボタンが収まらなくなるまで、ボタンを水平に配置します。線の配置は、 &lt;code&gt;align&lt;/code&gt; プロパティによって決定されます。可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="2199b0cc3ce6827177790e92c8dfd87f12245232" translate="yes" xml:space="preserve">
          <source>Flow.Processor</source>
          <target state="translated">Flow.Processor</target>
        </trans-unit>
        <trans-unit id="b4b853b62f1db0fa10f778a5f431231badd0cc9b" translate="yes" xml:space="preserve">
          <source>Flow.Publisher</source>
          <target state="translated">Flow.Publisher</target>
        </trans-unit>
        <trans-unit id="8eb46e10251c4a40e3fef81fc36b45494ff273ab" translate="yes" xml:space="preserve">
          <source>Flow.Subscriber</source>
          <target state="translated">Flow.Subscriber</target>
        </trans-unit>
        <trans-unit id="ade1c535401a1a8ca35c509f3d865c6bb7293372" translate="yes" xml:space="preserve">
          <source>Flow.Subscription</source>
          <target state="translated">Flow.Subscription</target>
        </trans-unit>
        <trans-unit id="a8c8dce78b088d35b593f92e653757928bd6950e" translate="yes" xml:space="preserve">
          <source>FlowLayout</source>
          <target state="translated">FlowLayout</target>
        </trans-unit>
        <trans-unit id="048463aa094e8a9922d49cb85017526021c9deb1" translate="yes" xml:space="preserve">
          <source>FlowStrategy</source>
          <target state="translated">FlowStrategy</target>
        </trans-unit>
        <trans-unit id="4b826e5a95cf8b9714b4859644ecf5d31fabfb59" translate="yes" xml:space="preserve">
          <source>FlowView</source>
          <target state="translated">FlowView</target>
        </trans-unit>
        <trans-unit id="1ebfb4f924dcfdd9aedd4771c15c8e117f0bb6c8" translate="yes" xml:space="preserve">
          <source>FlowView.FlowStrategy</source>
          <target state="translated">FlowView.FlowStrategy</target>
        </trans-unit>
        <trans-unit id="59037e28fcb90ff90d7b474f438663c6b045f64d" translate="yes" xml:space="preserve">
          <source>Flush all of the Introspector's internal caches.</source>
          <target state="translated">Introspectorの内部キャッシュをすべて消去してください。</target>
        </trans-unit>
        <trans-unit id="cf3ee4aa344fd9439d7a23eed724ed1c7b819697" translate="yes" xml:space="preserve">
          <source>Flush all of the Introspector's internal caches. This method is not normally required. It is normally only needed by advanced tools that update existing &quot;Class&quot; objects in-place and need to make the Introspector re-analyze existing Class objects.</source>
          <target state="translated">Introspectorの内部キャッシュをすべてフラッシュします。このメソッドは通常は必要ありません。通常は、既存の &quot;Class &quot;オブジェクトをその場で更新し、Introspectorに既存のClassオブジェクトを再解析させる必要があるような高度なツールでのみ必要とされます。</target>
        </trans-unit>
        <trans-unit id="58ca7a5d25df440512599cf0142b9f49cb875f4c" translate="yes" xml:space="preserve">
          <source>Flush any buffered messages.</source>
          <target state="translated">バッファリングされたメッセージをすべてフラッシュします。</target>
        </trans-unit>
        <trans-unit id="cbdbf4f52aca9b56567adba9fa2a32b0f8f121bf" translate="yes" xml:space="preserve">
          <source>Flush any buffered output.</source>
          <target state="translated">バッファされた出力をすべてフラッシュします。</target>
        </trans-unit>
        <trans-unit id="f2a37ad75daf9994928e4a49c47e338e6a246bf3" translate="yes" xml:space="preserve">
          <source>Flush the Introspector's internal cached information for a given class.</source>
          <target state="translated">指定したクラスのIntrospectorの内部キャッシュ情報をフラッシュします。</target>
        </trans-unit>
        <trans-unit id="dd43b9352fe5975b1d492527a9453c5ad462ec1d" translate="yes" xml:space="preserve">
          <source>Flush the Introspector's internal cached information for a given class. This method is not normally required. It is normally only needed by advanced tools that update existing &quot;Class&quot; objects in-place and need to make the Introspector re-analyze an existing Class object. Note that only the direct state associated with the target Class object is flushed. We do not flush state for other Class objects with the same name, nor do we flush state for any related Class objects (such as subclasses), even though their state may include information indirectly obtained from the target Class object.</source>
          <target state="translated">指定されたクラスのIntrospectorの内部キャッシュ情報をフラッシュします。このメソッドは通常は必要ありません。通常は、既存の &quot;Class &quot;オブジェクトをその場で更新し、Introspectorに既存のClassオブジェクトを再解析させる必要があるような高度なツールでのみ必要とされます。ターゲット・クラス・オブジェクトに関連付けられた直接状態のみがフラッシュされることに注意してください。同じ名前の他のクラス・オブジェクトの状態をフラッシュすることはありませんし、関連するクラス・オブジェクト(サブクラスなど)の状態をフラッシュすることもありません(例:ターゲット・クラス・オブジェクトから間接的に取得した情報が含まれている場合でも)。</target>
        </trans-unit>
        <trans-unit id="edc3fd57810a894c7625b9a523573427c6dd958a" translate="yes" xml:space="preserve">
          <source>Flush the stream.</source>
          <target state="translated">流れを流す。</target>
        </trans-unit>
        <trans-unit id="32abf43af3e0eb214d706849ff8f9b42087c2a4a" translate="yes" xml:space="preserve">
          <source>Flush3DBorder</source>
          <target state="translated">Flush3DBorder</target>
        </trans-unit>
        <trans-unit id="1d9f36d8dcf7e660b911e13417de562962fae133" translate="yes" xml:space="preserve">
          <source>Flushable</source>
          <target state="translated">Flushable</target>
        </trans-unit>
        <trans-unit id="0d8e5de7e8be561cedb7fbaca801fd5980979d91" translate="yes" xml:space="preserve">
          <source>Flushable.flush()</source>
          <target state="translated">Flushable.flush()</target>
        </trans-unit>
        <trans-unit id="42875ff7501e0088b91534939ee2eb7e7e2a0d54" translate="yes" xml:space="preserve">
          <source>Flushes all data prior to the given position to the underlying destination, such as an &lt;code&gt;OutputStream&lt;/code&gt; or &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">指定された位置より前のすべてのデータを、 &lt;code&gt;OutputStream&lt;/code&gt; や &lt;code&gt;File&lt;/code&gt; などの基になる宛先にフラッシュします。</target>
        </trans-unit>
        <trans-unit id="4e03356e53cd4b45d147e1714ac4698e16f5f4e5" translate="yes" xml:space="preserve">
          <source>Flushes all data prior to the given position to the underlying destination, such as an &lt;code&gt;OutputStream&lt;/code&gt; or &lt;code&gt;File&lt;/code&gt;. Attempting to seek to the flushed portion of the stream will result in an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt;.</source>
          <target state="translated">指定された位置の前にあるすべてのデータを、 &lt;code&gt;OutputStream&lt;/code&gt; や &lt;code&gt;File&lt;/code&gt; などの基になる宛先にフラッシュします。ストリームのフラッシュされた部分をシークしようとすると、 &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="0ae8e631c0fc5969fe26283b445f1116611ef1f0" translate="yes" xml:space="preserve">
          <source>Flushes all reconstructable resources being used by this Image object.</source>
          <target state="translated">この画像オブジェクトで使用されているすべての再構築可能なリソースをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="3e25942a94de4bb3ad34202a7dcfcd620755f6ce" translate="yes" xml:space="preserve">
          <source>Flushes all reconstructable resources being used by this Image object. This includes any pixel data that is being cached for rendering to the screen as well as any system resources that are being used to store data or pixels for the image if they can be recreated. The image is reset to a state similar to when it was first created so that if it is again rendered, the image data will have to be recreated or fetched again from its source.</source>
          <target state="translated">この画像オブジェクトで使用されているすべての再構築可能なリソースをフラッシュします。これには、画面へのレンダリング用にキャッシュされているピクセルデータや、画像のデータやピクセルを保存するために使用されているシステムリソースが含まれます。画像は最初に作成されたときと同様の状態にリセットされるので、再びレンダリングされた場合は、画像データを再作成するか、ソースから再度取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="a483c218f4ede88511a568ec3515f6a659538396" translate="yes" xml:space="preserve">
          <source>Flushes any resources opened for output by this file manager directly or indirectly.</source>
          <target state="translated">このファイルマネージャが直接または間接的に出力用にオープンしたリソースをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="5c301973568b1010ffc4abeb3890c49223cf556b" translate="yes" xml:space="preserve">
          <source>Flushes any resources opened for output by this file manager directly or indirectly. Flushing a closed file manager has no effect.</source>
          <target state="translated">このファイルマネージャが直接または間接的に出力のために開いているリソースをすべてフラッシュします。閉じたファイルマネージャをフラッシュしても効果はありません。</target>
        </trans-unit>
        <trans-unit id="b41792b8a406dde8752d03242f965cef4652900a" translate="yes" xml:space="preserve">
          <source>Flushes queued data from the line.</source>
          <target state="translated">行からキューに入っているデータをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="e2b40fdd5484676ce39ad94b7bd8775a5ff1c7d2" translate="yes" xml:space="preserve">
          <source>Flushes queued data from the line. The flushed data is discarded. In some cases, not all queued data can be discarded. For example, a mixer can flush data from the buffer for a specific input line, but any unplayed data already in the output buffer (the result of the mix) will still be played. You can invoke this method after pausing a line (the normal case) if you want to skip the &quot;stale&quot; data when you restart playback or capture. (It is legal to flush a line that is not stopped, but doing so on an active line is likely to cause a discontinuity in the data, resulting in a perceptible click.)</source>
          <target state="translated">行からキューに入っているデータをフラッシュします。フラッシュされたデータは破棄されます。場合によっては、キューに入っているすべてのデータを破棄できるわけではありません。例えば、ミキサーは特定の入力ラインのバッファからデータをフラッシュすることができますが、出力バッファにある未再生のデータ(ミックスの結果)はまだ再生されます。再生やキャプチャーを再開したときに「古い」データをスキップしたい場合は、ラインを一時停止した後(通常の場合)にこのメソッドを呼び出すことができます。(停止していないラインをフラッシュすることは合法ですが、アクティブなラインでそれを行うと、データの不連続性が生じてクリック感が発生する可能性があります)。</target>
        </trans-unit>
        <trans-unit id="e2f9819660d4e0302415b9142f9b771239cc2dd4" translate="yes" xml:space="preserve">
          <source>Flushes the compressed output stream.</source>
          <target state="translated">圧縮された出力ストリームをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="923f5d0e0f120941c4098720b1b419ccc25ef8f7" translate="yes" xml:space="preserve">
          <source>Flushes the compressed output stream. If &lt;a href=&quot;#%3Cinit%3E(java.io.OutputStream,java.util.zip.Deflater,int,boolean)&quot;&gt;&lt;code&gt;syncFlush&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; when this compressed output stream is constructed, this method first flushes the underlying &lt;code&gt;compressor&lt;/code&gt; with the flush mode &lt;a href=&quot;deflater#SYNC_FLUSH&quot;&gt;&lt;code&gt;Deflater.SYNC_FLUSH&lt;/code&gt;&lt;/a&gt; to force all pending data to be flushed out to the output stream and then flushes the output stream. Otherwise this method only flushes the output stream without flushing the &lt;code&gt;compressor&lt;/code&gt;.</source>
          <target state="translated">圧縮された出力ストリームをフラッシュします。場合&lt;a href=&quot;#%3Cinit%3E(java.io.OutputStream,java.util.zip.Deflater,int,boolean)&quot;&gt; &lt;code&gt;syncFlush&lt;/code&gt; が&lt;/a&gt;ある &lt;code&gt;true&lt;/code&gt; この圧縮された出力ストリームを構成する場合、この方法は、第1の下地フラッシュ &lt;code&gt;compressor&lt;/code&gt; フラッシュモードと&lt;a href=&quot;deflater#SYNC_FLUSH&quot;&gt; &lt;code&gt;Deflater.SYNC_FLUSH&lt;/code&gt; &lt;/a&gt;出力ストリームにフラッシュされるすべての保留中のデータを強制的にして出力ストリームをフラッシュします。それ以外の場合、このメソッドは &lt;code&gt;compressor&lt;/code&gt; をフラッシュせずに出力ストリームのみをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="22c98069e18f742f97177b77228dbcec905df571" translate="yes" xml:space="preserve">
          <source>Flushes the compressed output stream. If &lt;a href=&quot;deflateroutputstream#DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-int-boolean-&quot;&gt;&lt;code&gt;syncFlush&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; when this compressed output stream is constructed, this method first flushes the underlying &lt;code&gt;compressor&lt;/code&gt; with the flush mode &lt;a href=&quot;deflater#SYNC_FLUSH&quot;&gt;&lt;code&gt;Deflater.SYNC_FLUSH&lt;/code&gt;&lt;/a&gt; to force all pending data to be flushed out to the output stream and then flushes the output stream. Otherwise this method only flushes the output stream without flushing the &lt;code&gt;compressor&lt;/code&gt;.</source>
          <target state="translated">圧縮された出力ストリームをフラッシュします。場合&lt;a href=&quot;deflateroutputstream#DeflaterOutputStream-java.io.OutputStream-java.util.zip.Deflater-int-boolean-&quot;&gt; &lt;code&gt;syncFlush&lt;/code&gt; が&lt;/a&gt;ある &lt;code&gt;true&lt;/code&gt; この圧縮された出力ストリームを構成する場合、この方法は、第1の下地フラッシュ &lt;code&gt;compressor&lt;/code&gt; フラッシュモードと&lt;a href=&quot;deflater#SYNC_FLUSH&quot;&gt; &lt;code&gt;Deflater.SYNC_FLUSH&lt;/code&gt; &lt;/a&gt;出力ストリームにフラッシュされるすべての保留中のデータを強制的にして出力ストリームをフラッシュします。それ以外の場合、このメソッドは、 &lt;code&gt;compressor&lt;/code&gt; をフラッシュせずに出力ストリームのみをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="5b15e249d4b5f7a1e25fae529068f2d7263b626f" translate="yes" xml:space="preserve">
          <source>Flushes the console and forces any buffered output to be written immediately .</source>
          <target state="translated">コンソールをフラッシュし、バッファリングされた出力を直ちに書き込ませます。</target>
        </trans-unit>
        <trans-unit id="172701747f93b1a49565bcb3bd048ea44d742223" translate="yes" xml:space="preserve">
          <source>Flushes the stream and checks its error state.</source>
          <target state="translated">ストリームをフラッシュし、エラー状態をチェックします。</target>
        </trans-unit>
        <trans-unit id="917793f660fae575f902dcfdcd2ad4d72b9730c1" translate="yes" xml:space="preserve">
          <source>Flushes the stream and checks its error state. The internal error state is set to &lt;code&gt;true&lt;/code&gt; when the underlying output stream throws an &lt;code&gt;IOException&lt;/code&gt; other than &lt;code&gt;InterruptedIOException&lt;/code&gt;, and when the &lt;code&gt;setError&lt;/code&gt; method is invoked. If an operation on the underlying output stream throws an &lt;code&gt;InterruptedIOException&lt;/code&gt;, then the &lt;code&gt;PrintStream&lt;/code&gt; converts the exception back into an interrupt by doing:</source>
          <target state="translated">ストリームをフラッシュし、エラー状態を確認します。内部エラー状態は、基になる出力ストリームが &lt;code&gt;InterruptedIOException&lt;/code&gt; 以外の &lt;code&gt;IOException&lt;/code&gt; をスローしたとき、および &lt;code&gt;setError&lt;/code&gt; メソッドが呼び出されたときに &lt;code&gt;true&lt;/code&gt; に設定されます。基本となる出力ストリームでの操作が &lt;code&gt;InterruptedIOException&lt;/code&gt; をスローした場合、 &lt;code&gt;PrintStream&lt;/code&gt; は次のようにして例外を割り込みに変換します。</target>
        </trans-unit>
        <trans-unit id="e1d1a01e00649a56e4be3c6877ec77afc38fdb1a" translate="yes" xml:space="preserve">
          <source>Flushes the stream if it's not closed and checks its error state.</source>
          <target state="translated">ストリームが閉じられていない場合はフラッシュし、エラー状態をチェックします。</target>
        </trans-unit>
        <trans-unit id="4f18707bcfd581256c925c8ceb7a6b0e579c29e8" translate="yes" xml:space="preserve">
          <source>Flushes the stream.</source>
          <target state="translated">流れを流す。</target>
        </trans-unit>
        <trans-unit id="27549ded09a673f27fce36a1c79b36720812fffc" translate="yes" xml:space="preserve">
          <source>Flushes the stream. If the stream has saved any characters from the various write() methods in a buffer, write them immediately to their intended destination. Then, if that destination is another character or byte stream, flush it. Thus one flush() invocation will flush all the buffers in a chain of Writers and OutputStreams.</source>
          <target state="translated">ストリームをフラッシュします。ストリームが様々な write()メソッドからの文字をバッファに保存している場合は、即座にそれらの文字を目的の宛先に書き込みます。そして、その先が別の文字やバイトストリームである場合は、それをフラッシュします。このように、1 回の flush()の呼び出しで、Writer および OutputStream のチェーン内のすべてのバッファがフラッシュされます。</target>
        </trans-unit>
        <trans-unit id="baa04d112254e1b279bc1c47018931f7571ce551" translate="yes" xml:space="preserve">
          <source>Flushes the stream. This is done by writing any buffered output bytes to the underlying output stream and then flushing that stream.</source>
          <target state="translated">ストリームをフラッシュします。これは、バッファリングされた出力バイトを基礎となる出力ストリームに書き込み、そのストリームをフラッシュすることで行われます。</target>
        </trans-unit>
        <trans-unit id="be9d6adb6b1406398b401ae6a4672f858e7a78df" translate="yes" xml:space="preserve">
          <source>Flushes the stream. This will write any buffered output bytes and flush through to the underlying stream.</source>
          <target state="translated">ストリームをフラッシュします。これは、バッファリングされた出力バイトを書き込み、基礎となるストリームをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="7d0c9b5f55e5caf2896bd7d20cc4e2b514cdfdc9" translate="yes" xml:space="preserve">
          <source>Flushes the stream. This will write any buffered output bytes.</source>
          <target state="translated">ストリームをフラッシュします。バッファリングされた出力バイトを書き込みます。</target>
        </trans-unit>
        <trans-unit id="639cf25194be2f753156a201750666c8f0420631" translate="yes" xml:space="preserve">
          <source>Flushes this buffered output stream.</source>
          <target state="translated">このバッファリングされた出力ストリームをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="85496fb5b4f23f6bd6da20fc6355dc0af0445c1a" translate="yes" xml:space="preserve">
          <source>Flushes this buffered output stream. This forces any buffered output bytes to be written out to the underlying output stream.</source>
          <target state="translated">このバッファリングされた出力ストリームをフラッシュします。これは、バッファリングされた出力バイトを、基礎となる出力ストリームに強制的に書き出します。</target>
        </trans-unit>
        <trans-unit id="bcc966acb52d0f68f32a9eb2e2e2acf535260b41" translate="yes" xml:space="preserve">
          <source>Flushes this data output stream.</source>
          <target state="translated">このデータ出力ストリームをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="099deb41fdb7d97c649c6bd0906433b9fd4384a4" translate="yes" xml:space="preserve">
          <source>Flushes this data output stream. This forces any buffered output bytes to be written out to the stream.</source>
          <target state="translated">このデータ出力ストリームをフラッシュします。これは、バッファリングされた出力バイトをストリームに書き出すことを強制します。</target>
        </trans-unit>
        <trans-unit id="b4f55b8f266ef408ebda709c34943453f2920da5" translate="yes" xml:space="preserve">
          <source>Flushes this decoder.</source>
          <target state="translated">このデコーダをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="a58378208cf39afe752e3f5ea5a2b90a44d200fd" translate="yes" xml:space="preserve">
          <source>Flushes this encoder.</source>
          <target state="translated">このエンコーダをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="31d005aeb46638a01a212c34ef8ebcc2e7447e73" translate="yes" xml:space="preserve">
          <source>Flushes this formatter.</source>
          <target state="translated">このフォーマッタをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="324812d4d8236eb7df771889d3aa4cca5bead978" translate="yes" xml:space="preserve">
          <source>Flushes this formatter. If the destination implements the &lt;a href=&quot;../io/flushable&quot;&gt;&lt;code&gt;Flushable&lt;/code&gt;&lt;/a&gt; interface, its &lt;code&gt;flush&lt;/code&gt; method will be invoked.</source>
          <target state="translated">このフォーマッタをフラッシュします。宛先が&lt;a href=&quot;../io/flushable&quot;&gt; &lt;code&gt;Flushable&lt;/code&gt; &lt;/a&gt;インターフェースを実装している場合、その &lt;code&gt;flush&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8a7b8695f698b7994fd7ead006b2734c41a847fd" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output bytes to be written out to the stream.</source>
          <target state="translated">この出力ストリームをフラッシュし、バッファリングされた出力バイトをストリームに書き出します。</target>
        </trans-unit>
        <trans-unit id="db79f82cc6dec498148212763f561f450d0a091c" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output bytes to be written out.</source>
          <target state="translated">この出力ストリームをフラッシュし、バッファリングされた出力バイトを強制的に書き出します。</target>
        </trans-unit>
        <trans-unit id="a7d347580d93037b72c655bbbd27b6c3c4b04c93" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output bytes to be written out. The general contract of &lt;code&gt;flush&lt;/code&gt; is that calling it is an indication that, if any bytes previously written have been buffered by the implementation of the output stream, such bytes should immediately be written to their intended destination.</source>
          <target state="translated">この出力ストリームをフラッシュし、バッファリングされた出力バイトを強制的に書き出します。 &lt;code&gt;flush&lt;/code&gt; の一般的な規約は、それを呼び出すことは、以前に書き込まれたバイトが出力ストリームの実装によってバッファリングされている場合、そのようなバイトが目的の宛先にすぐに書き込まれる必要があることを示すということです。</target>
        </trans-unit>
        <trans-unit id="88a445d926ff76766416fa1d70ac5b897cd48596" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output bytes to be written out. This will notify any readers that bytes are waiting in the pipe.</source>
          <target state="translated">この出力ストリームをフラッシュし、バッファリングされた出力バイトを強制的に書き出します。これは、パイプ内でバイトが待機していることをすべてのリーダに通知します。</target>
        </trans-unit>
        <trans-unit id="c9444a8ef8681cfdf7bc6090df80c2af2cd48913" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output characters to be written out.</source>
          <target state="translated">この出力ストリームをフラッシュし、バッファリングされた出力文字を強制的に書き出します。</target>
        </trans-unit>
        <trans-unit id="a3d361ce221bdc3f10a930aee652587351f2bbe9" translate="yes" xml:space="preserve">
          <source>Flushes this output stream and forces any buffered output characters to be written out. This will notify any readers that characters are waiting in the pipe.</source>
          <target state="translated">この出力ストリームをフラッシュし、バッファリングされた出力文字を強制的に書き出します。これは、パイプ内で文字が待機していることをすべての読者に通知します。</target>
        </trans-unit>
        <trans-unit id="d15ef9dff7afa4e9ffbd2cd4be187394d0163b84" translate="yes" xml:space="preserve">
          <source>Flushes this output stream by forcing any buffered output bytes that have already been processed by the encapsulated cipher object to be written out.</source>
          <target state="translated">カプセル化された暗号オブジェクトによって既に処理されているバッファリングされた出力バイトを強制的に書き出すことで、この出力ストリームをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="1c102df522805bafa3e28cc92589ff2b9b16f37d" translate="yes" xml:space="preserve">
          <source>Flushes this output stream, forcing any pending buffered output bytes to be written.</source>
          <target state="translated">この出力ストリームをフラッシュし、保留中のバッファリングされた出力バイトを強制的に書き込ませます。</target>
        </trans-unit>
        <trans-unit id="ae9c3c6d0ca6e8fa4dc383b3ed1e35dfc088a0ec" translate="yes" xml:space="preserve">
          <source>Flushes this stream by writing any buffered output to the underlying stream.</source>
          <target state="translated">バッファリングされた出力を基にしたストリームに書き込むことで、このストリームをフラッシュします。</target>
        </trans-unit>
        <trans-unit id="db13de4337e3f12fedae33632035682f751d41c8" translate="yes" xml:space="preserve">
          <source>Flushing a formatter writes any buffered output in the destination to the underlying stream.</source>
          <target state="translated">フォーマッタをフラッシングすると、デスティネーション内のバッファリングされた出力がすべて基底ストリームに書き込まれます。</target>
        </trans-unit>
        <trans-unit id="d9d1999ec742ec9c8a7f5a6758157b8951cb525a" translate="yes" xml:space="preserve">
          <source>Focus Specification</source>
          <target state="translated">フォーカス仕様</target>
        </trans-unit>
        <trans-unit id="7ac876985aa1e6c02d04ed096b1e57a1ff3f1aab" translate="yes" xml:space="preserve">
          <source>Focus change listener</source>
          <target state="translated">フォーカスチェンジリスナー</target>
        </trans-unit>
        <trans-unit id="9f5feabe1f193ea4f5922e67f59c5a9c3b66a4ea" translate="yes" xml:space="preserve">
          <source>Focus color</source>
          <target state="translated">フォーカスカラー</target>
        </trans-unit>
        <trans-unit id="636f78d5a4637ec48796807d50f5d7e5046e71c0" translate="yes" xml:space="preserve">
          <source>Focus events are enabled via &lt;code&gt;enableEvents&lt;/code&gt;.</source>
          <target state="translated">フォーカスイベントは、 &lt;code&gt;enableEvents&lt;/code&gt; を介して有効になります。</target>
        </trans-unit>
        <trans-unit id="e2a86206b707c6d81fcdb08c90ca1b33f284a70f" translate="yes" xml:space="preserve">
          <source>Focus insets</source>
          <target state="translated">フォーカスインセット</target>
        </trans-unit>
        <trans-unit id="1173063445e407d3b621d72d2d27d16f243662fd" translate="yes" xml:space="preserve">
          <source>Focus listener</source>
          <target state="translated">フォーカスリスナー</target>
        </trans-unit>
        <trans-unit id="fc12069cb4f4ef4583280f6686a03d0d49ab95ef" translate="yes" xml:space="preserve">
          <source>Focus rectangle</source>
          <target state="translated">フォーカス矩形</target>
        </trans-unit>
        <trans-unit id="e41232b9888cba114762dfe3f2f216b07976808d" translate="yes" xml:space="preserve">
          <source>Focus-change listener.</source>
          <target state="translated">フォーカスチェンジリスナー。</target>
        </trans-unit>
        <trans-unit id="1b0798a755e08db0b68088f32fc9c919423a98a7" translate="yes" xml:space="preserve">
          <source>FocusAdapter</source>
          <target state="translated">FocusAdapter</target>
        </trans-unit>
        <trans-unit id="00f8899238763ba20231d7e00139237ba2f8d7ae" translate="yes" xml:space="preserve">
          <source>FocusEvent</source>
          <target state="translated">FocusEvent</target>
        </trans-unit>
        <trans-unit id="e9975367ce509a5cb25902dfe7396138a21a82e8" translate="yes" xml:space="preserve">
          <source>FocusEvent.Cause</source>
          <target state="translated">FocusEvent.Cause</target>
        </trans-unit>
        <trans-unit id="993d5eb57ad03fe31977653e476ef50f67701c9e" translate="yes" xml:space="preserve">
          <source>FocusHandler</source>
          <target state="translated">FocusHandler</target>
        </trans-unit>
        <trans-unit id="aaaa28970cae06f17f6f2622815b85a3e11f4ed0" translate="yes" xml:space="preserve">
          <source>FocusListener</source>
          <target state="translated">FocusListener</target>
        </trans-unit>
        <trans-unit id="f6162ef30458f0b1d33486fff4233c782b625dd2" translate="yes" xml:space="preserve">
          <source>FocusManager</source>
          <target state="translated">FocusManager</target>
        </trans-unit>
        <trans-unit id="d7e332038b8cf05d9f2268d983c5f779dd00b235" translate="yes" xml:space="preserve">
          <source>FocusTraversalPolicy</source>
          <target state="translated">FocusTraversalPolicy</target>
        </trans-unit>
        <trans-unit id="d58a30daaf93c9d521ed2cf39dc5d9838cd5e47a" translate="yes" xml:space="preserve">
          <source>FocusTraversalPolicy takes into account &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html#FocusTraversalPolicyProviders&quot;&gt;focus traversal policy providers&lt;/a&gt;. When searching for first/last/next/previous Component, if a focus traversal policy provider is encountered, its focus traversal policy is used to perform the search operation.</source>
          <target state="translated">FocusTraversalPolicyは、&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html#FocusTraversalPolicyProviders&quot;&gt;フォーカストラバーサルポリシープロバイダー&lt;/a&gt;を考慮に入れます。最初/最後/次/前のコンポーネントを検索するときに、フォーカストラバーサルポリシープロバイダーが検出されると、そのフォーカストラバーサルポリシーを使用して検索操作が実行されます。</target>
        </trans-unit>
        <trans-unit id="6b04a17bd8b73a2fdb3f249ee6ec2d85b37573c5" translate="yes" xml:space="preserve">
          <source>Focused</source>
          <target state="translated">Focused</target>
        </trans-unit>
        <trans-unit id="85eb876d327e7ad98bdd20df524d4dd17ee968bd" translate="yes" xml:space="preserve">
          <source>Focuses the Component after aComponent, typically based on a FocusTraversalPolicy.</source>
          <target state="translated">通常はFocusTraversalPolicyに基づいて、Componentの後のComponentにフォーカスを当てます。</target>
        </trans-unit>
        <trans-unit id="33d90710892a8435d44964b568a7e1e9d5ddf8ef" translate="yes" xml:space="preserve">
          <source>Focuses the Component after the current focus owner.</source>
          <target state="translated">現在のフォーカスの所有者の後にコンポーネントをフォーカスします。</target>
        </trans-unit>
        <trans-unit id="2346fe180eb8c83a68d5c50b727888f616f591dc" translate="yes" xml:space="preserve">
          <source>Focuses the Component before aComponent, typically based on a FocusTraversalPolicy.</source>
          <target state="translated">通常はFocusTraversalPolicyに基づいて、Componentの前にComponentをフォーカスします。</target>
        </trans-unit>
        <trans-unit id="8965277ff87e0848e3164f24baa01a31bfe9a7ba" translate="yes" xml:space="preserve">
          <source>Focuses the Component before the current focus owner.</source>
          <target state="translated">現在のフォーカスの所有者よりも前のコンポーネントにフォーカスを当てます。</target>
        </trans-unit>
        <trans-unit id="4253cdf20f3655b6e47ffc34dc54e8dcfd8efabd" translate="yes" xml:space="preserve">
          <source>FolderIcon16</source>
          <target state="translated">FolderIcon16</target>
        </trans-unit>
        <trans-unit id="56e2f7fb41aa73be737248418ba5c0e5eb5fc6a8" translate="yes" xml:space="preserve">
          <source>Follow symbolic links.</source>
          <target state="translated">象徴的なリンクをたどってください。</target>
        </trans-unit>
        <trans-unit id="e17dbd79a84a54f559996c59b0712e0b95f8dcb9" translate="yes" xml:space="preserve">
          <source>Following full type-safety to its ultimate conclusion might also argue for a separate class for each field in date-time, such as a class for HourOfDay and another for DayOfMonth. This approach was tried, but was excessively complicated in the Java language, lacking usability. A similar problem occurs with periods. There is a case for a separate class for each period unit, such as a type for Years and a type for Minutes. However, this yields a lot of classes and a problem of type conversion. Thus, the set of date-time types provided is a compromise between purity and practicality.</source>
          <target state="translated">完全な型安全性を最終的な結論まで追求すると、HourOfDayのクラスとDayOfMonthのクラスのような、日付時間の各フィールドのための別のクラスを主張するかもしれません。このアプローチは試みられましたが、Java言語では複雑すぎて使い勝手に欠けていました。同様の問題はピリオドでも発生します。年を表す型と分を表す型のように、周期単位ごとに別々のクラスを用意することもできます。しかし、これでは多くのクラスが生成され、型変換の問題が発生します。したがって、提供されている日付-時刻型のセットは、純粋さと実用性の間の妥協点となります。</target>
        </trans-unit>
        <trans-unit id="8b23f8f2777a10912c1c9e7876566aa3d45b9d0b" translate="yes" xml:space="preserve">
          <source>FomattableFlags are passed to the &lt;a href=&quot;formattable#formatTo-java.util.Formatter-int-int-int-&quot;&gt;&lt;code&gt;Formattable.formatTo()&lt;/code&gt;&lt;/a&gt; method and modify the output format for &lt;a href=&quot;formattable&quot;&gt;Formattables&lt;/a&gt;.</source>
          <target state="translated">FomattableFlagsはに渡され&lt;a href=&quot;formattable#formatTo-java.util.Formatter-int-int-int-&quot;&gt; &lt;code&gt;Formattable.formatTo()&lt;/code&gt; &lt;/a&gt;メソッドとの出力フォーマット変更&lt;a href=&quot;formattable&quot;&gt;Formattablesを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca05bba3a397f29864c65816f78ff6246577d5ea" translate="yes" xml:space="preserve">
          <source>FomattableFlags are passed to the &lt;a href=&quot;formattable#formatTo-java.util.Formatter-int-int-int-&quot;&gt;&lt;code&gt;Formattable.formatTo()&lt;/code&gt;&lt;/a&gt; method and modify the output format for &lt;a href=&quot;formattable&quot;&gt;Formattables&lt;/a&gt;. Implementations of &lt;a href=&quot;formattable&quot;&gt;&lt;code&gt;Formattable&lt;/code&gt;&lt;/a&gt; are responsible for interpreting and validating any flags.</source>
          <target state="translated">FomattableFlagsはに渡され&lt;a href=&quot;formattable#formatTo-java.util.Formatter-int-int-int-&quot;&gt; &lt;code&gt;Formattable.formatTo()&lt;/code&gt; &lt;/a&gt;メソッドとの出力フォーマット変更&lt;a href=&quot;formattable&quot;&gt;Formattablesを&lt;/a&gt;。&lt;a href=&quot;formattable&quot;&gt; &lt;code&gt;Formattable&lt;/code&gt; の&lt;/a&gt;実装は、フラグの解釈と検証を担当します。</target>
        </trans-unit>
        <trans-unit id="b97c4d4cddf23ec47395af460f9e28df2a0f9b04" translate="yes" xml:space="preserve">
          <source>Font</source>
          <target state="translated">Font</target>
        </trans-unit>
        <trans-unit id="a8daab2008e4b169bd06f1ba63fc83f51d45cedf" translate="yes" xml:space="preserve">
          <source>Font Faces and Names</source>
          <target state="translated">フォントの顔と名前</target>
        </trans-unit>
        <trans-unit id="f4480fe27751ad87cd93ceec7f8f841941adf210" translate="yes" xml:space="preserve">
          <source>Font Style</source>
          <target state="translated">フォントスタイル</target>
        </trans-unit>
        <trans-unit id="92d4b24c379731693154f310745277af77d1b97c" translate="yes" xml:space="preserve">
          <source>Font and TextAttribute</source>
          <target state="translated">フォントとテキスト属性</target>
        </trans-unit>
        <trans-unit id="7d370a8d01236c2dfeba295d3a02e1eb3f85d6b5" translate="yes" xml:space="preserve">
          <source>Font descriptors.</source>
          <target state="translated">フォントディスクリプタ。</target>
        </trans-unit>
        <trans-unit id="bcc5e8823531691226582a43485ef3d46f2e4dd1" translate="yes" xml:space="preserve">
          <source>Font descriptors. Table tag &quot;fdsc&quot; in the Open Type Specification.</source>
          <target state="translated">フォント記述子。Open Type Specificationの表タグ &quot;fdsc&quot;。</target>
        </trans-unit>
        <trans-unit id="53263bb8840c65a4ba07f68e7b4c3df7f30eed88" translate="yes" xml:space="preserve">
          <source>Font fractional metrics hint key.</source>
          <target state="translated">フォントのフラクショナルメトリクスのヒントキー。</target>
        </trans-unit>
        <trans-unit id="86d90ee427b44cf4b728975fec68744c1d9a66e2" translate="yes" xml:space="preserve">
          <source>Font fractional metrics hint key. The &lt;code&gt;FRACTIONALMETRICS&lt;/code&gt; hint controls whether the positioning of individual character glyphs takes into account the sub-pixel accuracy of the scaled character advances of the font or whether such advance vectors are rounded to an integer number of whole device pixels. This hint only recommends how much accuracy should be used to position the glyphs and does not specify or recommend whether or not the actual rasterization or pixel bounds of the glyph should be modified to match.</source>
          <target state="translated">フォントの分数メトリックヒントキー。 &lt;code&gt;FRACTIONALMETRICS&lt;/code&gt; は、個々の文字のグリフの位置決め装置全体ピクセルの整数に丸められているアカウントにフォントまたはそのような事前のベクターかスケーリングされた文字の進歩のサブピクセル精度をとるかどうかを制御しヒント。このヒントは、グリフを配置するために使用する精度を推奨するだけであり、グリフの実際のラスタライズまたはピクセル境界を一致するように変更するかどうかを指定または推奨しません。</target>
        </trans-unit>
        <trans-unit id="58a28025d0f6185055c58789557fe5ef5dfcae20" translate="yes" xml:space="preserve">
          <source>Font fractional metrics hint value -- character glyphs are positioned with accuracy chosen by the implementation.</source>
          <target state="translated">Font fractional metrics hint 値 --文字グリフは、実装によって選ばれた精度で配置されます。</target>
        </trans-unit>
        <trans-unit id="300138316b7a5f8f6a7fff691a96f8ada3dc73b5" translate="yes" xml:space="preserve">
          <source>Font fractional metrics hint value -- character glyphs are positioned with advance widths rounded to pixel boundaries.</source>
          <target state="translated">フ ォ ン ト の分数 メ ト リ ッ ク ヒント値 --キ ャ ラ ク タ グ リ フ は、 進み幅を ピ ク セル境界に丸めて配置 さ れます。</target>
        </trans-unit>
        <trans-unit id="0b9a130ab1b845f84cb215be8acab5d36215d38f" translate="yes" xml:space="preserve">
          <source>Font fractional metrics hint value -- character glyphs are positioned with sub-pixel accuracy.</source>
          <target state="translated">フォント分数 メ ト リ ッ ク ヒント値 --文字グ リ フはサブピクセル精度で配置されます。</target>
        </trans-unit>
        <trans-unit id="e085c3b29b8b4669a6ee3c1593d627d5629b9359" translate="yes" xml:space="preserve">
          <source>Font header.</source>
          <target state="translated">フォントヘッダー。</target>
        </trans-unit>
        <trans-unit id="bac1bf70db7d497b27f641cf617f7eaba5acba86" translate="yes" xml:space="preserve">
          <source>Font header. Table tag &quot;head&quot; in the Open Type Specification.</source>
          <target state="translated">フォントのヘッダー。オープンタイプ仕様の表タグ「head」。</target>
        </trans-unit>
        <trans-unit id="9f0283be0b670244684fa95aa1c56632f2a76b79" translate="yes" xml:space="preserve">
          <source>Font metrics are baseline-relative, meaning that they are generally independent of the rotation applied to the font (modulo possible grid hinting effects). See &lt;a href=&quot;font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フォントメトリックはベースラインに相対的です。つまり、フォントに適用される回転とは一般に独立しています（モジュロ可能なグリッドヒント効果）。&lt;a href=&quot;font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7a5d8e030693754f85636095e8997259dbd226a6" translate="yes" xml:space="preserve">
          <source>Font metrics for the current font.</source>
          <target state="translated">カレン ト フ ォ ン ト の フ ォ ン ト メ ト リ ッ ク。</target>
        </trans-unit>
        <trans-unit id="1c76bd5295cfb4df84b2c61817964297f1cc929a" translate="yes" xml:space="preserve">
          <source>Font metrics.</source>
          <target state="translated">フォントメトリクス。</target>
        </trans-unit>
        <trans-unit id="1f037791fcbbd93b36c443328680f7b0cbb50edb" translate="yes" xml:space="preserve">
          <source>Font metrics. Table tag &quot;fmtx&quot; in the Open Type Specification.</source>
          <target state="translated">フォントメトリクス。Open Type Specificationのテーブルタグ &quot;fmtx&quot;。</target>
        </trans-unit>
        <trans-unit id="d3ace9f5c49a90fb92717f303ef978d265c04a22" translate="yes" xml:space="preserve">
          <source>Font name lookup is case insensitive, using the case folding rules of the US locale.</source>
          <target state="translated">フォント名の検索は大文字小文字を区別せず、米国ロケールの大文字小文字の折り返し規則を用いて行われます。</target>
        </trans-unit>
        <trans-unit id="c884ceb423e891c8b4965add2a59a925e8be5f9d" translate="yes" xml:space="preserve">
          <source>Font program.</source>
          <target state="translated">フォントプログラム。</target>
        </trans-unit>
        <trans-unit id="442ef6ea18c9171f76c6672f5fd738e01aec9f5d" translate="yes" xml:space="preserve">
          <source>Font program. Table tag &quot;fpgm&quot; in the Open Type Specification.</source>
          <target state="translated">フォントプログラム。Open Type Specificationの表タグ &quot;fpgm&quot;。</target>
        </trans-unit>
        <trans-unit id="e68d07bfa47a695dcd953b4631287056c134cc34" translate="yes" xml:space="preserve">
          <source>Font to paint with, &lt;code&gt;null&lt;/code&gt; indicates font of renderer is to be used.</source>
          <target state="translated">でペイントするフォント、 &lt;code&gt;null&lt;/code&gt; レンダラーのフォントが使用される示します。</target>
        </trans-unit>
        <trans-unit id="547e23c9c59db6aa511ca8d42984197fe41f24a0" translate="yes" xml:space="preserve">
          <source>Font to render with</source>
          <target state="translated">でレンダリングするフォント</target>
        </trans-unit>
        <trans-unit id="836ebd209b63dd95ce6a6180e309a843624d420a" translate="yes" xml:space="preserve">
          <source>Font variation.</source>
          <target state="translated">フォントのバリエーション。</target>
        </trans-unit>
        <trans-unit id="0de36fe2c09c30a66fefaf954a3b2a7b5dd26157" translate="yes" xml:space="preserve">
          <source>Font variation. Table tag &quot;fvar&quot; in the Open Type Specification.</source>
          <target state="translated">フォントのバリエーション。オープンタイプ仕様の表タグ &quot;fvar&quot;。</target>
        </trans-unit>
        <trans-unit id="9d28b9f6efd3ff57225119df4d0dc37f5c5c5918" translate="yes" xml:space="preserve">
          <source>FontFamily</source>
          <target state="translated">FontFamily</target>
        </trans-unit>
        <trans-unit id="86cae6a7a6beb3715636cd18e086f6111dec9973" translate="yes" xml:space="preserve">
          <source>FontFamilyAction</source>
          <target state="translated">FontFamilyAction</target>
        </trans-unit>
        <trans-unit id="8e7b98069d151f9c3b12f632f7628911a3d3315d" translate="yes" xml:space="preserve">
          <source>FontFormatException</source>
          <target state="translated">FontFormatException</target>
        </trans-unit>
        <trans-unit id="6d1199d6668860b258b5ad7487278035e79808f6" translate="yes" xml:space="preserve">
          <source>FontMetrics</source>
          <target state="translated">FontMetrics</target>
        </trans-unit>
        <trans-unit id="34edf210c152ecc6f10bafa39913598711b2e704" translate="yes" xml:space="preserve">
          <source>FontMetrics are not used for glyph rendering when running in the JDK.</source>
          <target state="translated">FontMetricsは、JDKで実行している場合、グリフのレンダリングには使用されません。</target>
        </trans-unit>
        <trans-unit id="8e5fb10ca665b0aa4182ebc1229225f53d9e682d" translate="yes" xml:space="preserve">
          <source>FontRenderContext</source>
          <target state="translated">FontRenderContext</target>
        </trans-unit>
        <trans-unit id="33447ebba2307df9a3ef38542c564fa066cf782a" translate="yes" xml:space="preserve">
          <source>FontSize</source>
          <target state="translated">FontSize</target>
        </trans-unit>
        <trans-unit id="6966778008f3ff09377d11c8e2f3e839b7585034" translate="yes" xml:space="preserve">
          <source>FontSizeAction</source>
          <target state="translated">FontSizeAction</target>
        </trans-unit>
        <trans-unit id="1d5cf198c7755047ab060c50974f64edba427bae" translate="yes" xml:space="preserve">
          <source>FontUIResource</source>
          <target state="translated">FontUIResource</target>
        </trans-unit>
        <trans-unit id="70731b0e70dbdc40d8ecf45f7123fca5bd9498ad" translate="yes" xml:space="preserve">
          <source>Fonts can have different metrics for different ranges of characters. The &lt;code&gt;getLineMetrics&lt;/code&gt; methods of &lt;a href=&quot;../font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt; take some text as an argument and return a &lt;code&gt;LineMetrics&lt;/code&gt; object describing the metrics of the initial number of characters in that text, as returned by &lt;a href=&quot;#getNumChars()&quot;&gt;&lt;code&gt;getNumChars()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Fonts can have different metrics for different ranges of characters. The &lt;code&gt;getLineMetrics&lt;/code&gt; methods of &lt;a href=&quot;../font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; &lt;/a&gt; take some text as an argument and return a &lt;code&gt;LineMetrics&lt;/code&gt; object describing the metrics of the initial number of characters in that text, as returned by &lt;a href=&quot;#getNumChars()&quot;&gt; &lt;code&gt;getNumChars()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="558e6cd283a156ce5070afa87f014ad813d33f9f" translate="yes" xml:space="preserve">
          <source>FooSocket. On return from implAccept the FooSocket will be connected to a client.</source>
          <target state="translated">FooSocketです。implAccept からの戻り値で FooSocket がクライアントに接続されます。</target>
        </trans-unit>
        <trans-unit id="0678db1b06d3165ac1ff98fac04681f3be01258e" translate="yes" xml:space="preserve">
          <source>For &quot;DOM Walker&quot; style parsers, which ignore their &lt;em&gt;parser.parse()&lt;/em&gt; parameters, this is used to specify the DOM (sub)tree being walked by the parser. The Object must implement the &lt;em&gt;org.w3c.dom.Node&lt;/em&gt; interface.</source>
          <target state="translated">For &quot;DOM Walker&quot; style parsers, which ignore their &lt;em&gt;parser.parse()&lt;/em&gt; parameters, this is used to specify the DOM (sub)tree being walked by the parser. The Object must implement the &lt;em&gt;org.w3c.dom.Node&lt;/em&gt; interface.</target>
        </trans-unit>
        <trans-unit id="8b6a5fead27a8845709947c1be05f584168760eb" translate="yes" xml:space="preserve">
          <source>For &quot;text/&amp;lt;other&amp;gt;&quot; MIME types, the first time the JRE needs to determine whether the MIME type supports the charset parameter, it will check whether the parameter is explicitly listed in an arbitrarily chosen &lt;code&gt;DataFlavor&lt;/code&gt; which uses that MIME type. If so, the JRE will assume from that point on that the MIME type supports the charset parameter and will not check again. If the parameter is not explicitly listed, the JRE will assume from that point on that the MIME type does not support the charset parameter and will not check again. Because this check is performed on an arbitrarily chosen &lt;code&gt;DataFlavor&lt;/code&gt;, developers must ensure that all &lt;code&gt;DataFlavor&lt;/code&gt;s with a &quot;text/&amp;lt;other&amp;gt;&quot; MIME type specify the charset parameter if it is supported by that MIME type. Developers should never rely on the JRE to substitute the platform's default charset for a &quot;text/&amp;lt;other&amp;gt;&quot; DataFlavor. Failure to adhere to this restriction will lead to undefined behavior.</source>
          <target state="translated">For &quot;text/&amp;lt;other&amp;gt;&quot; MIME types, the first time the JRE needs to determine whether the MIME type supports the charset parameter, it will check whether the parameter is explicitly listed in an arbitrarily chosen &lt;code&gt;DataFlavor&lt;/code&gt; which uses that MIME type. If so, the JRE will assume from that point on that the MIME type supports the charset parameter and will not check again. If the parameter is not explicitly listed, the JRE will assume from that point on that the MIME type does not support the charset parameter and will not check again. Because this check is performed on an arbitrarily chosen &lt;code&gt;DataFlavor&lt;/code&gt; , developers must ensure that all &lt;code&gt;DataFlavor&lt;/code&gt; s with a &quot;text/&amp;lt;other&amp;gt;&quot; MIME type specify the charset parameter if it is supported by that MIME type. Developers should never rely on the JRE to substitute the platform's default charset for a &quot;text/&amp;lt;other&amp;gt;&quot; DataFlavor. Failure to adhere to this restriction will lead to undefined behavior.</target>
        </trans-unit>
        <trans-unit id="cb8dab71273657bae02c16971fcf4a6095bcfebb" translate="yes" xml:space="preserve">
          <source>For 1.1, the following font names are deprecated (the replacement name follows):</source>
          <target state="translated">1.1では、以下のフォント名が非推奨となりました(以下に代替名を示します)。</target>
        </trans-unit>
        <trans-unit id="5f2744c30d7556bf3016eca2708da42d9104784e" translate="yes" xml:space="preserve">
          <source>For &lt;b&gt;client formatted print data&lt;/b&gt;, the client determines or knows the print data format. For example the client may have a JPEG encoded image, a &lt;code&gt;URL&lt;/code&gt; for HTML code, or a disk file containing plain text in some encoding, possibly obtained from an external source, and requires a way to describe the data format to the print service.</source>
          <target state="translated">For &lt;b&gt;client formatted print data&lt;/b&gt;, the client determines or knows the print data format. For example the client may have a JPEG encoded image, a &lt;code&gt;URL&lt;/code&gt; for HTML code, or a disk file containing plain text in some encoding, possibly obtained from an external source, and requires a way to describe the data format to the print service.</target>
        </trans-unit>
        <trans-unit id="330234038655b3b67f3184a6e42e55e51f6d8052" translate="yes" xml:space="preserve">
          <source>For &lt;b&gt;client formatted print data&lt;/b&gt;, the client determines or knows the print data format. For example the client may have a JPEG encoded image, a URL for HTML code, or a disk file containing plain text in some encoding, possibly obtained from an external source, and requires a way to describe the data format to the print service.</source>
          <target state="translated">以下のために&lt;b&gt;、クライアント形式の印刷データ&lt;/b&gt;は、クライアントは印刷データ形式を決定するか、または知っています。たとえば、クライアントには、JPEGエンコードされた画像、HTMLコードのURL、または何らかのエンコードでプレーンテキストが含まれているディスクファイルがあり、おそらく外部ソースから取得され、印刷サービスにデータ形式を記述する方法が必要です。</target>
        </trans-unit>
        <trans-unit id="e9d64bb664ba10590a2e753bd93d33d98f8da3b6" translate="yes" xml:space="preserve">
          <source>For &lt;b&gt;service formatted print data&lt;/b&gt;, the Java Print Service instance determines the print data format. The doc flavor's representation class denotes an interface whose methods the &lt;code&gt;DocPrintJob&lt;/code&gt; invokes to determine the content to be printed -- such as a renderable image interface or a Java printable interface. The doc flavor's MIME type is the special value &lt;code&gt;&quot;application/x-java-jvm-local-objectref&quot;&lt;/code&gt; indicating the client will supply a reference to a Java object that implements the interface named as the representation class. This MIME type is just a placeholder; what's important is the print data representation class.</source>
          <target state="translated">以下のために&lt;b&gt;サービス形式の印刷データ&lt;/b&gt;はJava Print Serviceインスタンスが印刷データ形式を決定します。 docフレーバーの表現クラスは、印刷可能なコンテンツを決定するために &lt;code&gt;DocPrintJob&lt;/code&gt; が呼び出すメソッドを持つインターフェース（レンダリング可能な画像インターフェースやJavaの印刷可能なインターフェースなど）を示します。 docフレーバーのMIMEタイプは特別な値 &lt;code&gt;&quot;application/x-java-jvm-local-objectref&quot;&lt;/code&gt; であり、クライアントが表現クラスとして指定されたインターフェースを実装するJavaオブジェクトへの参照を提供することを示します。このMIMEタイプは単なるプレースホルダーです。重要なのは、印刷データ表現クラスです。</target>
        </trans-unit>
        <trans-unit id="a6d170425897997b503b4050b3faa9af6d3eeca9" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;BufferedImages&lt;/code&gt;, the transfer type of its &lt;code&gt;Raster&lt;/code&gt; and of the &lt;code&gt;Raster&lt;/code&gt; object's &lt;code&gt;SampleModel&lt;/code&gt; (available from the &lt;code&gt;getTransferType&lt;/code&gt; methods of these classes) must match that of the &lt;code&gt;ColorModel&lt;/code&gt;. The number of elements in an array representing a pixel for the &lt;code&gt;Raster&lt;/code&gt; and &lt;code&gt;SampleModel&lt;/code&gt; (available from the &lt;code&gt;getNumDataElements&lt;/code&gt; methods of these classes) must match that of the &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">For &lt;code&gt;BufferedImages&lt;/code&gt; , the transfer type of its &lt;code&gt;Raster&lt;/code&gt; and of the &lt;code&gt;Raster&lt;/code&gt; object's &lt;code&gt;SampleModel&lt;/code&gt; (available from the &lt;code&gt;getTransferType&lt;/code&gt; methods of these classes) must match that of the &lt;code&gt;ColorModel&lt;/code&gt; . The number of elements in an array representing a pixel for the &lt;code&gt;Raster&lt;/code&gt; and &lt;code&gt;SampleModel&lt;/code&gt; (available from the &lt;code&gt;getNumDataElements&lt;/code&gt; methods of these classes) must match that of the &lt;code&gt;ColorModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="915b18f26b26ee8c0fd892d4ff7f159ef12fc646" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;CallableStatement&lt;/code&gt; objects or for statements that return multiple results, the statement is complete when all of the associated result sets have been closed, and all update counts and output parameters have been retrieved.</source>
          <target state="translated">For &lt;code&gt;CallableStatement&lt;/code&gt; objects or for statements that return multiple results, the statement is complete when all of the associated result sets have been closed, and all update counts and output parameters have been retrieved.</target>
        </trans-unit>
        <trans-unit id="d1b3c7c7a1f06a3ed25919250a4a526d039ca2eb" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Container&lt;/code&gt;s it returns a non-null value if the mouse is above the &lt;code&gt;Container&lt;/code&gt; itself or above any of its descendants. Use &lt;a href=&quot;container#getMousePosition(boolean)&quot;&gt;&lt;code&gt;Container.getMousePosition(boolean)&lt;/code&gt;&lt;/a&gt; if you need to exclude children.</source>
          <target state="translated">For &lt;code&gt;Container&lt;/code&gt; s it returns a non-null value if the mouse is above the &lt;code&gt;Container&lt;/code&gt; itself or above any of its descendants. Use &lt;a href=&quot;container#getMousePosition(boolean)&quot;&gt; &lt;code&gt;Container.getMousePosition(boolean)&lt;/code&gt; &lt;/a&gt; if you need to exclude children.</target>
        </trans-unit>
        <trans-unit id="6e9a0189efceb380ef7c4d80d50d597dcc0c32e5" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DataLine&lt;/code&gt;'s, if the &lt;code&gt;DataLine.Info&lt;/code&gt; object which was used to retrieve the line, specifies at least one fully qualified audio format, the last one will be used as the default format.</source>
          <target state="translated">以下のため &lt;code&gt;DataLine&lt;/code&gt; の、場合 &lt;code&gt;DataLine.Info&lt;/code&gt; の行を取得するために使用されたオブジェクトが、指定は、少なくとも一つの完全修飾オーディオ形式、最後のものがデフォルトの形式として使用されます。</target>
        </trans-unit>
        <trans-unit id="28598f569638649a3f52c769c3a476bfa89564bc" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;DropMode.ON_OR_INSERT&lt;/code&gt;, this value will be an insert index, as described above, or &lt;code&gt;-1&lt;/code&gt; if the drop occurred over the path itself.</source>
          <target state="translated">For &lt;code&gt;DropMode.ON_OR_INSERT&lt;/code&gt; , this value will be an insert index, as described above, or &lt;code&gt;-1&lt;/code&gt; if the drop occurred over the path itself.</target>
        </trans-unit>
        <trans-unit id="0e3ecd3f62908302c23242217931dd52873e3efb" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Locale(&quot;zh&quot;, &quot;TW&quot;)&lt;/code&gt;, the candidate list will be:</source>
          <target state="translated">&lt;code&gt;Locale(&quot;zh&quot;, &quot;TW&quot;)&lt;/code&gt; 、候補リストは次のようになります。</target>
        </trans-unit>
        <trans-unit id="2ac60fe5573ac88de61af47d357949dfefad31f9" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;MOUSE_DOWN&lt;/code&gt; events, this field indicates the number of consecutive clicks.</source>
          <target state="translated">For &lt;code&gt;MOUSE_DOWN&lt;/code&gt; events, this field indicates the number of consecutive clicks.</target>
        </trans-unit>
        <trans-unit id="e31b88ac7ecb49b2e8afe18460bbc2e01561b3b7" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;MOUSE_DOWN&lt;/code&gt; events, this field indicates the number of consecutive clicks. For other events, its value is &lt;code&gt;0&lt;/code&gt;. This field has been replaced by MouseEvent.getClickCount().</source>
          <target state="translated">For &lt;code&gt;MOUSE_DOWN&lt;/code&gt; events, this field indicates the number of consecutive clicks. For other events, its value is &lt;code&gt;0&lt;/code&gt; . This field has been replaced by MouseEvent.getClickCount().</target>
        </trans-unit>
        <trans-unit id="b1c6c72fc3676c2f9a27372532a0d36dc3dda943" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Raster&lt;/code&gt; objects, the number of bands in the source must be equal to the number of bands in the destination.</source>
          <target state="translated">For &lt;code&gt;Raster&lt;/code&gt; objects, the number of bands in the source must be equal to the number of bands in the destination.</target>
        </trans-unit>
        <trans-unit id="be56eb9397c66564b620cc3c46827a32fec7d1ef" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;RowSet&lt;/code&gt; implementations such as &lt;code&gt;CachedRowSet&lt;/code&gt;, which operate in a disconnected environment, the &lt;code&gt;SyncProvider&lt;/code&gt; object being used may leverage the fetch size to poll the data source and retrieve a number of rows that do not exceed the fetch size and that may form a subset of the actual rows returned by the original query. This is an implementation variance determined by the specific &lt;code&gt;SyncProvider&lt;/code&gt; object employed by the disconnected &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">For &lt;code&gt;RowSet&lt;/code&gt; implementations such as &lt;code&gt;CachedRowSet&lt;/code&gt; , which operate in a disconnected environment, the &lt;code&gt;SyncProvider&lt;/code&gt; object being used may leverage the fetch size to poll the data source and retrieve a number of rows that do not exceed the fetch size and that may form a subset of the actual rows returned by the original query. This is an implementation variance determined by the specific &lt;code&gt;SyncProvider&lt;/code&gt; object employed by the disconnected &lt;code&gt;RowSet&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="51aa56243ca89f0469d553b7cf006c177225d4de" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;RowSet&lt;/code&gt; implementations such as the &lt;code&gt;CachedRowSet&lt;/code&gt; that operate in a disconnected environment, the &lt;code&gt;SyncProvider&lt;/code&gt; object being used offers complementary locking and data integrity options. The options described below are pertinent only to connected &lt;code&gt;RowSet&lt;/code&gt; objects (&lt;code&gt;JdbcRowSet&lt;/code&gt; objects).</source>
          <target state="translated">For &lt;code&gt;RowSet&lt;/code&gt; implementations such as the &lt;code&gt;CachedRowSet&lt;/code&gt; that operate in a disconnected environment, the &lt;code&gt;SyncProvider&lt;/code&gt; object being used offers complementary locking and data integrity options. The options described below are pertinent only to connected &lt;code&gt;RowSet&lt;/code&gt; objects ( &lt;code&gt;JdbcRowSet&lt;/code&gt; objects).</target>
        </trans-unit>
        <trans-unit id="26978a2656b24192291060a84625f6a2943a1afc" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;RowSet&lt;/code&gt; implementations such as the &lt;code&gt;CachedRowSet&lt;/code&gt; that operate in a disconnected environment, the &lt;code&gt;SyncProvider&lt;/code&gt; object offers complementary locking and data integrity options. The options described below are pertinent only to connected &lt;code&gt;RowSet&lt;/code&gt; objects (&lt;code&gt;JdbcRowSet&lt;/code&gt; objects).</source>
          <target state="translated">For &lt;code&gt;RowSet&lt;/code&gt; implementations such as the &lt;code&gt;CachedRowSet&lt;/code&gt; that operate in a disconnected environment, the &lt;code&gt;SyncProvider&lt;/code&gt; object offers complementary locking and data integrity options. The options described below are pertinent only to connected &lt;code&gt;RowSet&lt;/code&gt; objects ( &lt;code&gt;JdbcRowSet&lt;/code&gt; objects).</target>
        </trans-unit>
        <trans-unit id="f7274322aa239a9feb73bcc543b20424608df817" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; events returns the new state of the window.</source>
          <target state="translated">For &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; events returns the new state of the window.</target>
        </trans-unit>
        <trans-unit id="0f8cb0c350a4b682405caf4641d217f32ce5e36a" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; events returns the new state of the window. The state is represented as a bitwise mask.</source>
          <target state="translated">For &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; events returns the new state of the window. The state is represented as a bitwise mask.</target>
        </trans-unit>
        <trans-unit id="d590f99f52cb6c6a2781e8bc61bf20cac84795d0" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; events returns the previous state of the window.</source>
          <target state="translated">For &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; events returns the previous state of the window.</target>
        </trans-unit>
        <trans-unit id="dcfb0529351c9aae11c9ed2812d9fa3bb3932f22" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; events returns the previous state of the window. The state is represented as a bitwise mask.</source>
          <target state="translated">For &lt;code&gt;WINDOW_STATE_CHANGED&lt;/code&gt; events returns the previous state of the window. The state is represented as a bitwise mask.</target>
        </trans-unit>
        <trans-unit id="a260b5b1e1e63f842b8db0f461e7c2eaca7cfec7" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;defaultValue&lt;/code&gt;, &lt;code&gt;minValue&lt;/code&gt;, and &lt;code&gt;
      maxValue&lt;/code&gt;, the associated value must either be of the Java type corresponding to &lt;code&gt;openType&lt;/code&gt;, or be a string that can be converted into that type. The conversion uses the static method &lt;code&gt;valueOf(String)&lt;/code&gt; if it finds one; otherwise a constructor with a single &lt;code&gt;String&lt;/code&gt; parameter if it finds one; otherwise it fails.</source>
          <target state="translated">For &lt;code&gt;defaultValue&lt;/code&gt; , &lt;code&gt;minValue&lt;/code&gt; , and &lt;code&gt; maxValue&lt;/code&gt; , the associated value must either be of the Java type corresponding to &lt;code&gt;openType&lt;/code&gt; , or be a string that can be converted into that type. The conversion uses the static method &lt;code&gt;valueOf(String)&lt;/code&gt; if it finds one; otherwise a constructor with a single &lt;code&gt;String&lt;/code&gt; parameter if it finds one; otherwise it fails.</target>
        </trans-unit>
        <trans-unit id="4530bda67f131f5f34a16a617bdaea1d3f4f7461" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;defaultValue&lt;/code&gt;, &lt;code&gt;minValue&lt;/code&gt;, and &lt;code&gt;maxValue&lt;/code&gt;, the associated value must either be of the Java type corresponding to &lt;code&gt;openType&lt;/code&gt;, or be a string that can be converted into that type. The conversion uses the static method &lt;code&gt;valueOf(String)&lt;/code&gt; if it finds one; otherwise a constructor with a single &lt;code&gt;String&lt;/code&gt; parameter if it finds one; otherwise it fails.</source>
          <target state="translated">以下のために &lt;code&gt;defaultValue&lt;/code&gt; 、 &lt;code&gt;minValue&lt;/code&gt; 、および &lt;code&gt;maxValue&lt;/code&gt; の、関連する値のいずれかに対応するJava型でなければなりません &lt;code&gt;openType&lt;/code&gt; 、またはその型に変換することができる文字列です。変換では、静的メソッド &lt;code&gt;valueOf(String)&lt;/code&gt; が見つかった場合はそれを使用します。それ以外の場合は、単一の &lt;code&gt;String&lt;/code&gt; パラメータを持つコンストラクタ（見つかった場合）それ以外の場合は失敗します。</target>
        </trans-unit>
        <trans-unit id="aa25baeb85527242f11d5e87c3523c6ec25ccebb" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;fill&lt;/code&gt; operations, including &lt;code&gt;fillRect&lt;/code&gt;, &lt;code&gt;fillRoundRect&lt;/code&gt;, &lt;code&gt;fillOval&lt;/code&gt;, &lt;code&gt;fillArc&lt;/code&gt;, &lt;code&gt;fillPolygon&lt;/code&gt;, and &lt;code&gt;clearRect&lt;/code&gt;, &lt;a href=&quot;#fill(java.awt.Shape)&quot;&gt;&lt;code&gt;fill&lt;/code&gt;&lt;/a&gt; can now be called with the desired &lt;code&gt;Shape&lt;/code&gt;. For example, when filling a rectangle:</source>
          <target state="translated">For &lt;code&gt;fill&lt;/code&gt; operations, including &lt;code&gt;fillRect&lt;/code&gt; , &lt;code&gt;fillRoundRect&lt;/code&gt; , &lt;code&gt;fillOval&lt;/code&gt; , &lt;code&gt;fillArc&lt;/code&gt; , &lt;code&gt;fillPolygon&lt;/code&gt; , and &lt;code&gt;clearRect&lt;/code&gt; , &lt;a href=&quot;#fill(java.awt.Shape)&quot;&gt; &lt;code&gt;fill&lt;/code&gt; &lt;/a&gt; can now be called with the desired &lt;code&gt;Shape&lt;/code&gt; . For example, when filling a rectangle:</target>
        </trans-unit>
        <trans-unit id="7735067132e49435c502ac1c91d49e144e93e07f" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;host&lt;/code&gt; specified in</source>
          <target state="translated">で指定された &lt;code&gt;host&lt;/code&gt; 場合</target>
        </trans-unit>
        <trans-unit id="9de1e4d9b868482565745441ba41e44b255f55af" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;host&lt;/code&gt; specified in literal IPv6 address, either the form defined in RFC 2732 or the literal IPv6 address format defined in RFC 2373 is accepted. IPv6 scoped addresses are also supported. See &lt;a href=&quot;inet6address#scoped&quot;&gt;here&lt;/a&gt; for a description of IPv6 scoped addresses.</source>
          <target state="translated">以下のために &lt;code&gt;host&lt;/code&gt; リテラルIPv6アドレスで指定された、いずれかの形態は、RFC 2732で定義されているか、RFC 2373で定義されているリテラルIPv6アドレス形式が受け入れられます。IPv6スコープアドレスもサポートされています。IPv6スコープアドレスの説明については、&lt;a href=&quot;inet6address#scoped&quot;&gt;こちら&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4e38a1a19e5894ccb2cf644282825ddeb0200dfd" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;legalValues&lt;/code&gt;, the associated value must be either an array or a &lt;code&gt;Set&lt;/code&gt;, and the elements of the array or set must be convertible as described for &lt;code&gt;defaultValue&lt;/code&gt; etc.</source>
          <target state="translated">ため &lt;code&gt;legalValues&lt;/code&gt; 、関連する値は、アレイまたはどちらかでなければならない &lt;code&gt;Set&lt;/code&gt; について説明したように、アレイ又は変換可能でなければならないセットの要素 &lt;code&gt;defaultValue&lt;/code&gt; 等</target>
        </trans-unit>
        <trans-unit id="f9f2a700cc13dc4e63747523ce097168cd8536d8" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;line-optimal&lt;/em&gt; charsets the stream source's spliterator has good splitting properties, assuming the file contains a regular sequence of lines. Good splitting properties can result in good parallel stream performance. The spliterator for a &lt;em&gt;line-optimal&lt;/em&gt; charset takes advantage of the charset properties (a line feed or a carriage return being efficient identifiable) such that when splitting it can approximately divide the number of covered lines in half.</source>
          <target state="translated">For &lt;em&gt;line-optimal&lt;/em&gt; charsets the stream source's spliterator has good splitting properties, assuming the file contains a regular sequence of lines. Good splitting properties can result in good parallel stream performance. The spliterator for a &lt;em&gt;line-optimal&lt;/em&gt; charset takes advantage of the charset properties (a line feed or a carriage return being efficient identifiable) such that when splitting it can approximately divide the number of covered lines in half.</target>
        </trans-unit>
        <trans-unit id="88ef468247477df828d66d215450b2eee8434eb7" translate="yes" xml:space="preserve">
          <source>For BufferedImages, if the ColorSpace of the source BufferedImage does not match the requirements of the first profile in the array, the first conversion is to an appropriate ColorSpace. If the requirements of the last profile in the array are not met by the ColorSpace of the destination BufferedImage, the last conversion is to the destination's ColorSpace.</source>
          <target state="translated">BufferedImagesの場合,元のBufferedImageのColorSpaceが配列の最初のプロファイルの要件と一致しない場合,最初の変換は適切なColorSpaceへの変換である。配列の最後のプロファイルの要件が,出力先のBufferedImageのColorSpaceによって満たされない場合,最後の変換は出力先のColorSpaceへの変換である。</target>
        </trans-unit>
        <trans-unit id="0297a3a15e6a2cb9e7e1e8e53b704530f78c54db" translate="yes" xml:space="preserve">
          <source>For BufferedImages, rescaling operates on color and alpha components. The number of sets of scaling constants may be one, in which case the same constants are applied to all color (but not alpha) components. Otherwise, the number of sets of scaling constants may equal the number of Source color components, in which case no rescaling of the alpha component (if present) is performed. If neither of these cases apply, the number of sets of scaling constants must equal the number of Source color components plus alpha components, in which case all color and alpha components are rescaled.</source>
          <target state="translated">BufferedImagesの場合、再スケーリングはカラー成分とアルファ成分に適用されます。スケーリング定数のセット数は1にすることができ、その場合はすべてのカラー(アルファではない)成分に同じ定数が適用されます。そうでない場合は、スケーリング定数のセット数は、ソースカラーコンポーネントの数と等しくなる場合があります。こ れ ら のいずれの場合にも当てはまらない場合は、 ス ケー リ ン グ定数のセット数は、 ソース カラー コ ン ポーネ ン ト と アルファ コ ン ポーネ ン ト の数に等 し く なければな り ません。</target>
        </trans-unit>
        <trans-unit id="12e29238a774ac40b3348e908ea760e7c021ea28" translate="yes" xml:space="preserve">
          <source>For BufferedImages, the lookup operates on color and alpha components. The number of lookup arrays may be one, in which case the same array is applied to all color (but not alpha) components. Otherwise, the number of lookup arrays may equal the number of Source color components, in which case no lookup of the alpha component (if present) is performed. If neither of these cases apply, the number of lookup arrays must equal the number of Source color components plus alpha components, in which case lookup is performed for all color and alpha components. This allows non-uniform rescaling of multi-band BufferedImages.</source>
          <target state="translated">BufferedImagesの場合、ルックアップはカラー成分とアルファ成分に適用されます。ルックアップ配列の数は1つにすることができ、その場合はすべてのカラー成分(アルファ成分ではない)に同じ配列が適用されます。そうでない場合は、ルックアップ配列の数がソースカラーコンポーネントの数と同じになることがあり、その場合はアルファコンポーネントのルックアップは行われません。これらのケースのいずれにも当てはまらない場合、ルックアップ配列の数は、ソースカラーコンポーネントとアルファコンポーネントの数に等しくなければならず、この場合、すべてのカラーコンポーネントとアルファコンポーネントのルックアップが実行されます。これにより、マルチバンドBufferedImagesの不均一な再スケーリングが可能になります。</target>
        </trans-unit>
        <trans-unit id="b1aa9b4cd03568424ee163ee4cf505a41549f961" translate="yes" xml:space="preserve">
          <source>For ByteBuffers backed by an accessible byte array.</source>
          <target state="translated">アクセス可能なバイト配列でバックアップされたByteBuffersの場合。</target>
        </trans-unit>
        <trans-unit id="5e1ca4acc505662eb0ed9a40f901edd46086ef87" translate="yes" xml:space="preserve">
          <source>For ByteBuffers not backed by an accessible byte array.</source>
          <target state="translated">アクセス可能なバイト配列でバックアップされていないバイトバッファの場合。</target>
        </trans-unit>
        <trans-unit id="3c451692bdf99cd8b31e04742a1111ee3757beb5" translate="yes" xml:space="preserve">
          <source>For DML statements, such as Insert, Update or Delete, and DDL statements, the statement is complete as soon as it has finished executing.</source>
          <target state="translated">Insert、Update、DeleteなどのDML文やDDL文では、実行が終了するとすぐに完了します。</target>
        </trans-unit>
        <trans-unit id="4c2df44d14a8ceaf346d4ff6b01e4eddb069d567" translate="yes" xml:space="preserve">
          <source>For DTLS protocols, the first 16 bits of the sequence number is a counter value (epoch) that is incremented on every cipher state change. The remaining 48 bits on the right side of the sequence number represents the sequence of the record, which is maintained separately for each epoch.</source>
          <target state="translated">DTLS プロトコルの場合、シーケンス番号の最初の 16 ビットは、暗号状態が変化するたびにインクリメントされるカウンタ値 (エポック)です。シーケンス番号の右側にある残りの48ビットはレコードのシーケンスを表し、各エポックごとに別々に保持されます。</target>
        </trans-unit>
        <trans-unit id="aae39ae71503d6b0412eb10be75f99287813f3f4" translate="yes" xml:space="preserve">
          <source>For Gaps, the general strategy is that if the local date-time falls in the middle of a Gap, then the resulting zoned date-time will have a local date-time shifted forwards by the length of the Gap, resulting in a date-time in the later offset, typically &quot;summer&quot; time.</source>
          <target state="translated">ギャップについては、一般的な戦略は、ローカルの日付時刻がギャップの途中にある場合、結果として生じるゾーニングされた日付時刻は、ギャップの長さによってローカルの日付時刻を前方にシフトさせ、結果として、後のオフセットの日付時刻、典型的には &quot;夏 &quot;の時刻になるというものである。</target>
        </trans-unit>
        <trans-unit id="47602a4734e43c194873be68402cb62c3ccb993d" translate="yes" xml:space="preserve">
          <source>For IPv4 address format, please refer to &lt;a href=&quot;inet4address#format&quot;&gt;Inet4Address#format&lt;/a&gt;; For IPv6 address format, please refer to &lt;a href=&quot;inet6address#format&quot;&gt;Inet6Address#format&lt;/a&gt;.</source>
          <target state="translated">IPv4アドレスの形式については、&lt;a href=&quot;inet4address#format&quot;&gt;Inet4Address＃format&lt;/a&gt;を参照してください。IPv6アドレス形式については、&lt;a href=&quot;inet6address#format&quot;&gt;Inet6Address＃format&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="32d46c6ea44bdc9156a63d0abe51018483f88d1c" translate="yes" xml:space="preserve">
          <source>For Internet Protocol v4 the value consists of an &lt;code&gt;integer&lt;/code&gt;, the least significant 8 bits of which represent the value of the TOS octet in IP packets sent by the socket. RFC 1349 defines the TOS values as follows:</source>
          <target state="translated">インターネットプロトコルv4の場合、値は &lt;code&gt;integer&lt;/code&gt; で構成されます。その最下位8ビットは、ソケットによって送信されるIPパケットのTOSオクテットの値を表します。RFC 1349では、TOS値を次のように定義しています。</target>
        </trans-unit>
        <trans-unit id="3f2eae4e6dd20e42323be6ff8ab3ddd498ced00a" translate="yes" xml:space="preserve">
          <source>For Internet Protocol v6 &lt;code&gt;tc&lt;/code&gt; is the value that would be placed into the sin6_flowinfo field of the IP header.</source>
          <target state="translated">インターネットプロトコルv6 の場合、 &lt;code&gt;tc&lt;/code&gt; はIPヘッダーのsin6_flowinfoフィールドに配置される値です。</target>
        </trans-unit>
        <trans-unit id="fdd92d08da24ad9dcd084f2963cc368886d94250" translate="yes" xml:space="preserve">
          <source>For Java 2 platform v1.3, a &lt;code&gt;KeyStroke&lt;/code&gt; can be associated with more than one condition. For example, 'a' could be bound for the two conditions &lt;code&gt;WHEN_FOCUSED&lt;/code&gt; and &lt;code&gt;WHEN_IN_FOCUSED_WINDOW&lt;/code&gt; condition.</source>
          <target state="translated">For Java 2 platform v1.3, a &lt;code&gt;KeyStroke&lt;/code&gt; can be associated with more than one condition. For example, 'a' could be bound for the two conditions &lt;code&gt;WHEN_FOCUSED&lt;/code&gt; and &lt;code&gt;WHEN_IN_FOCUSED_WINDOW&lt;/code&gt; condition.</target>
        </trans-unit>
        <trans-unit id="fac8dbfb74c279aab3f0b040bbf12a4e3c5e15cd" translate="yes" xml:space="preserve">
          <source>For MBeans referenced in such relation, nothing will be done,</source>
          <target state="translated">このような関係で参照されるMBeansについては、何もしません。</target>
        </trans-unit>
        <trans-unit id="0df500d83e75a486cc7488acc15cde4c6a58a19f" translate="yes" xml:space="preserve">
          <source>For Microsoft Windows platforms, the prefix of a pathname that contains a drive specifier consists of the drive letter followed by &lt;code&gt;&quot;:&quot;&lt;/code&gt; and possibly followed by &lt;code&gt;&quot;\\&quot;&lt;/code&gt; if the pathname is absolute. The prefix of a UNC pathname is &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt;; the hostname and the share name are the first two names in the name sequence. A relative pathname that does not specify a drive has no prefix.</source>
          <target state="translated">Microsoft Windowsプラットフォームの場合、ドライブ指定子を含むパス名のプレフィックスは、ドライブ文字の後に &lt;code&gt;&quot;:&quot;&lt;/code&gt; が続き、パス名が絶対パスの場合は &lt;code&gt;&quot;\\&quot;&lt;/code&gt; が続く場合があります。 UNCパス名のプレフィックスは &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt; です。ホスト名と共有名は、名前シーケンスの最初の2つの名前です。ドライブを指定しない相対パス名にはプレフィックスがありません。</target>
        </trans-unit>
        <trans-unit id="e28e2ad3a676ea5fec786b5d4f16481efefbbb2d" translate="yes" xml:space="preserve">
          <source>For Overlaps, the general strategy is that if the local date-time falls in the middle of an Overlap, then the previous offset will be retained. If there is no previous offset, or the previous offset is invalid, then the earlier offset is used, typically &quot;summer&quot; time.. Two additional methods, &lt;a href=&quot;#withEarlierOffsetAtOverlap()&quot;&gt;&lt;code&gt;withEarlierOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#withLaterOffsetAtOverlap()&quot;&gt;&lt;code&gt;withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt;, help manage the case of an overlap.</source>
          <target state="translated">For Overlaps, the general strategy is that if the local date-time falls in the middle of an Overlap, then the previous offset will be retained. If there is no previous offset, or the previous offset is invalid, then the earlier offset is used, typically &quot;summer&quot; time.. Two additional methods, &lt;a href=&quot;#withEarlierOffsetAtOverlap()&quot;&gt; &lt;code&gt;withEarlierOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#withLaterOffsetAtOverlap()&quot;&gt; &lt;code&gt;withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt;, help manage the case of an overlap.</target>
        </trans-unit>
        <trans-unit id="a727367a481c4d2b3f8a5feb6fd0dd5c0602e315" translate="yes" xml:space="preserve">
          <source>For Overlaps, the general strategy is that if the local date-time falls in the middle of an Overlap, then the previous offset will be retained. If there is no previous offset, or the previous offset is invalid, then the earlier offset is used, typically &quot;summer&quot; time.. Two additional methods, &lt;a href=&quot;zoneddatetime#withEarlierOffsetAtOverlap--&quot;&gt;&lt;code&gt;withEarlierOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt;&lt;code&gt;withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt;, help manage the case of an overlap.</source>
          <target state="translated">オーバーラップの一般的な戦略は、ローカルの日時がオーバーラップの真ん中にある場合、以前のオフセットが保持されることです。以前のオフセットがない場合、または以前のオフセットが無効な場合は、以前のオフセットが使用されます。通常は「夏」の時間です&lt;a href=&quot;zoneddatetime#withEarlierOffsetAtOverlap--&quot;&gt; &lt;code&gt;withEarlierOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt; &lt;code&gt;withLaterOffsetAtOverlap()&lt;/code&gt; の&lt;/a&gt; 2つの追加メソッドは、オーバーラップのケースの管理に役立ちます。</target>
        </trans-unit>
        <trans-unit id="4784f0d3a9af62eb3ebfc6f737d12c7774e84b6a" translate="yes" xml:space="preserve">
          <source>For RELAX NG, this method must throw &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;schemas.length!=1&lt;/code&gt;.</source>
          <target state="translated">For RELAX NG, this method must throw &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt; if &lt;code&gt;schemas.length!=1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c7fab9d7fe9b663fc7a55e0d1c0fc72d4cab1cdb" translate="yes" xml:space="preserve">
          <source>For Rasters, rescaling operates on bands. The number of sets of scaling constants may be one, in which case the same constants are applied to all bands, or it must equal the number of Source Raster bands.</source>
          <target state="translated">ラスタの場合、再スケーリングはバンドに対して行われます。スケーリング定数のセット数は 1 であることがあり、その場合はすべてのバンドに同じ定数が適用されるか、またはソースラスターのバンド数と等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="92389cc1157ad3878bb7c38e3b8a1bb1c8d06c44" translate="yes" xml:space="preserve">
          <source>For Rasters, the lookup operates on bands. The number of lookup arrays may be one, in which case the same array is applied to all bands, or it must equal the number of Source Raster bands.</source>
          <target state="translated">ラスタの場合、ルックアップはバンドに対して行われる。ルックアップ配列の数は1つで、すべてのバンドに同じ配列が適用される場合と、ソースラスタのバンド数と同じ数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="37a0362b48bdd5ec7bc1b7aa645ebcafbae5eb26" translate="yes" xml:space="preserve">
          <source>For Rasters, the number of bands in the source Raster must match the requirements of the first profile in the array, and the number of bands in the destination Raster must match the requirements of the last profile in the array. The array must have at least two elements or calling the filter method for Rasters will throw an IllegalArgumentException.</source>
          <target state="translated">ラスタの場合、元のラスタのバンドの数は配列の最初のプロファイルの条件と一致していなければならず、送り先のラスタのバンドの数は配列の最後のプロファイルの条件と一致していなければなりません。配列は少なくとも 2 つの要素を持っていなければならず、ラスタの filter メソッドを呼び出すと IllegalArgumentException がスローされます。</target>
        </trans-unit>
        <trans-unit id="9855cbf9d64cd6c04cc435b5d6fc1d9d25c6b203" translate="yes" xml:space="preserve">
          <source>For SSL/TLS connections, the underlying SSL/TLS provider may specify a default value for a certain server name type. In client mode, it is recommended that, by default, providers should include the server name indication whenever the server can be located by a supported server name type.</source>
          <target state="translated">SSL/TLS 接続の場合、基礎となる SSL/TLS プロバイダは、特定のサーバ名タイプのデフォルト値を指定することができます。クライアントモードでは、デフォルトでは、サポートされているサーバ名タイプでサーバの位置を特定できる場合はいつでも、プロバイダはサーバ名の表示を含めることを推奨します。</target>
        </trans-unit>
        <trans-unit id="c55e9f96a30383e78fbd420c04bcb6b5cbc4878f" translate="yes" xml:space="preserve">
          <source>For SSL/TLS/DTLS connections, the underlying SSL/TLS/DTLS provider may specify a default value for a certain server name type. In client mode, it is recommended that, by default, providers should include the server name indication whenever the server can be located by a supported server name type.</source>
          <target state="translated">SSL/TLS/DTLS 接続では、基礎となる SSL/TLS/DTLS プロバイダは、特定のサーバ名タイプのデフォルト値を指定することができます。クライアントモードでは、デフォルトでは、サポートされているサーバ名タイプでサーバの位置を特定できる場合はいつでも、プロバイダはサーバ名の表示を含めることを推奨します。</target>
        </trans-unit>
        <trans-unit id="a76b6379a9426be3b8a70c33a688fc19d56e282f" translate="yes" xml:space="preserve">
          <source>For SSL/TLS/DTLS connections, the underlying provider should calculate and specify the implicit value of the maximum expected network packet size if it is not configured explicitly. For any connection populated object, this method should never return &lt;code&gt;0&lt;/code&gt; so that applications can retrieve the actual implicit size of the underlying implementation.</source>
          <target state="translated">For SSL/TLS/DTLS connections, the underlying provider should calculate and specify the implicit value of the maximum expected network packet size if it is not configured explicitly. For any connection populated object, this method should never return &lt;code&gt;0&lt;/code&gt; so that applications can retrieve the actual implicit size of the underlying implementation.</target>
        </trans-unit>
        <trans-unit id="4215888e3982e3de15d57f415656bd905f924bed" translate="yes" xml:space="preserve">
          <source>For Select statements, the statement is complete when the associated result set is closed.</source>
          <target state="translated">Select文の場合、関連する結果セットが閉じられると文は完了します。</target>
        </trans-unit>
        <trans-unit id="20553bda21b7c5c3be557a2fc22c40bfb8714881" translate="yes" xml:space="preserve">
          <source>For UDP sockets it may be necessary to bind more than one socket to the same socket address. This is typically for the purpose of receiving multicast packets (See &lt;a href=&quot;multicastsocket&quot;&gt;&lt;code&gt;MulticastSocket&lt;/code&gt;&lt;/a&gt;). The &lt;code&gt;SO_REUSEADDR&lt;/code&gt; socket option allows multiple sockets to be bound to the same socket address if the &lt;code&gt;SO_REUSEADDR&lt;/code&gt; socket option is enabled prior to binding the socket using &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind(SocketAddress)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">For UDP sockets it may be necessary to bind more than one socket to the same socket address. This is typically for the purpose of receiving multicast packets (See &lt;a href=&quot;multicastsocket&quot;&gt; &lt;code&gt;MulticastSocket&lt;/code&gt; &lt;/a&gt;). The &lt;code&gt;SO_REUSEADDR&lt;/code&gt; socket option allows multiple sockets to be bound to the same socket address if the &lt;code&gt;SO_REUSEADDR&lt;/code&gt; socket option is enabled prior to binding the socket using &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind(SocketAddress)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ddc210dbbba2ad354a2722f241cf948fa56bd99c" translate="yes" xml:space="preserve">
          <source>For UDP sockets it may be necessary to bind more than one socket to the same socket address. This is typically for the purpose of receiving multicast packets (See &lt;a href=&quot;multicastsocket&quot;&gt;&lt;code&gt;MulticastSocket&lt;/code&gt;&lt;/a&gt;). The &lt;code&gt;SO_REUSEADDR&lt;/code&gt; socket option allows multiple sockets to be bound to the same socket address if the &lt;code&gt;SO_REUSEADDR&lt;/code&gt; socket option is enabled prior to binding the socket using &lt;a href=&quot;datagramsocket#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind(SocketAddress)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">UDPソケットの場合、複数のソケットを同じソケットアドレスにバインドする必要がある場合があります。これは通常、マルチキャストパケットを受信するためのものです（&lt;a href=&quot;multicastsocket&quot;&gt; &lt;code&gt;MulticastSocket&lt;/code&gt; を&lt;/a&gt;参照）。 &lt;code&gt;SO_REUSEADDR&lt;/code&gt; のソケットオプションがあれば、複数のソケットが同じソケットアドレスにバインドされることを可能にする &lt;code&gt;SO_REUSEADDR&lt;/code&gt; のソケットオプションを使用して、ソケットの結合の前にイネーブルされる&lt;a href=&quot;datagramsocket#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind(SocketAddress)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd8c93074e3853223ea38f1e9e8a1bad3535bc99" translate="yes" xml:space="preserve">
          <source>For UNIX platforms, the prefix of an absolute pathname is always &lt;code&gt;&quot;/&quot;&lt;/code&gt;. Relative pathnames have no prefix. The abstract pathname denoting the root directory has the prefix &lt;code&gt;&quot;/&quot;&lt;/code&gt; and an empty name sequence.</source>
          <target state="translated">UNIXプラットフォームの場合、絶対パス名のプレフィックスは常に &lt;code&gt;&quot;/&quot;&lt;/code&gt; です。相対パス名には接頭辞がありません。ルートディレクトリを示す抽象パス名には、プレフィックス &lt;code&gt;&quot;/&quot;&lt;/code&gt; と空の名前シーケンスがあります。</target>
        </trans-unit>
        <trans-unit id="134f568b646f7b9198a3e9b333aae84cf2eb28df" translate="yes" xml:space="preserve">
          <source>For XML 1.0 compliance an XML processor must pass the identifiers of declared unparsed entities, notation declarations and their associated identifiers to the application. This information is provided through the property API on this interface. The following two properties allow access to this information: javax.xml.stream.notations and javax.xml.stream.entities. When the current event is a DTD the following call will return a list of Notations &lt;code&gt;List l = (List) getProperty(&quot;javax.xml.stream.notations&quot;);&lt;/code&gt; The following call will return a list of entity declarations: &lt;code&gt;List l = (List) getProperty(&quot;javax.xml.stream.entities&quot;);&lt;/code&gt; These properties can only be accessed during a DTD event and are defined to return null if the information is not available.</source>
          <target state="translated">For XML 1.0 compliance an XML processor must pass the identifiers of declared unparsed entities, notation declarations and their associated identifiers to the application. This information is provided through the property API on this interface. The following two properties allow access to this information: javax.xml.stream.notations and javax.xml.stream.entities. When the current event is a DTD the following call will return a list of Notations &lt;code&gt;List l = (List) getProperty(&quot;javax.xml.stream.notations&quot;);&lt;/code&gt; The following call will return a list of entity declarations: &lt;code&gt;List l = (List) getProperty(&quot;javax.xml.stream.entities&quot;);&lt;/code&gt; These properties can only be accessed during a DTD event and are defined to return null if the information is not available.</target>
        </trans-unit>
        <trans-unit id="81ee812082aae7f26b9641e21fc97a0bd43f8e91" translate="yes" xml:space="preserve">
          <source>For XML Schema, this method creates a &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; object that performs validation by using location hints specified in documents.</source>
          <target state="translated">For XML Schema, this method creates a &lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt; object that performs validation by using location hints specified in documents.</target>
        </trans-unit>
        <trans-unit id="ac8b5bf5a407d708f91b5f710669495108d4ab3a" translate="yes" xml:space="preserve">
          <source>For XML processing errors, a SAX driver must use this interface in preference to throwing an exception: it is up to the application to decide whether to throw an exception for different types of errors and warnings. Note, however, that there is no requirement that the parser continue to report additional errors after a call to &lt;a href=&quot;#fatalError(org.xml.sax.SAXParseException)&quot;&gt;&lt;code&gt;fatalError&lt;/code&gt;&lt;/a&gt;. In other words, a SAX driver class may throw an exception after reporting any fatalError. Also parsers may throw appropriate exceptions for non-XML errors. For example, &lt;a href=&quot;xmlreader#parse(org.xml.sax.InputSource)&quot;&gt;&lt;code&gt;XMLReader.parse()&lt;/code&gt;&lt;/a&gt; would throw an IOException for errors accessing entities or the document.</source>
          <target state="translated">For XML processing errors, a SAX driver must use this interface in preference to throwing an exception: it is up to the application to decide whether to throw an exception for different types of errors and warnings. Note, however, that there is no requirement that the parser continue to report additional errors after a call to &lt;a href=&quot;#fatalError(org.xml.sax.SAXParseException)&quot;&gt; &lt;code&gt;fatalError&lt;/code&gt; &lt;/a&gt;. In other words, a SAX driver class may throw an exception after reporting any fatalError. Also parsers may throw appropriate exceptions for non-XML errors. For example, &lt;a href=&quot;xmlreader#parse(org.xml.sax.InputSource)&quot;&gt; &lt;code&gt;XMLReader.parse()&lt;/code&gt; &lt;/a&gt; would throw an IOException for errors accessing entities or the document.</target>
        </trans-unit>
        <trans-unit id="97576d9728eb03d27acde72957e208d72ca1b49e" translate="yes" xml:space="preserve">
          <source>For XSLT, &lt;a href=&quot;http://www.w3.org/TR/xslt#attribute-value-templates&quot;&gt;Attribute Value Templates&lt;/a&gt; attribute values will be returned unexpanded (since there is no context at this point). The namespace prefixes inside Attribute Value Templates will be unexpanded, so that they remain valid XPath values.</source>
          <target state="translated">For XSLT, &lt;a href=&quot;http://www.w3.org/TR/xslt#attribute-value-templates&quot;&gt;Attribute Value Templates&lt;/a&gt; attribute values will be returned unexpanded (since there is no context at this point). The namespace prefixes inside Attribute Value Templates will be unexpanded, so that they remain valid XPath values.</target>
        </trans-unit>
        <trans-unit id="6dad4526f56df9fff00c924610d84c66d81a2fd8" translate="yes" xml:space="preserve">
          <source>For a Kerberized server the action is &quot;accept&quot;. For example, the permission necessary to access and use the secret key of the Kerberized &quot;host&quot; service (telnet and the likes) would be constructed as follows:</source>
          <target state="translated">Kerberizedサーバの場合、アクションは「accept」である。例えば、Kerberizedされた &quot;host &quot;サービス(telnetなど)の秘密鍵にアクセスして使用するために必要なパーミッションは、以下のように構成されます。</target>
        </trans-unit>
        <trans-unit id="73f45b640d4ed9d91b00b255631883b34668492f" translate="yes" xml:space="preserve">
          <source>For a channel that is ready for at least one such operation, the ready-operation set of the channel's key is set to identify exactly the operations for which the channel is ready and the</source>
          <target state="translated">少なくとも1つのそのような操作に対して準備ができているチャネルに対して、そのチャネルのキーの準備ができている操作を正確に特定するための準備操作セットと</target>
        </trans-unit>
        <trans-unit id="9f6c2cc7d79d63c1f14bdd18d5f81576c63d58f2" translate="yes" xml:space="preserve">
          <source>For a class to be retransformed, &lt;a href=&quot;#isRetransformClassesSupported()&quot;&gt;&lt;code&gt;isRetransformClassesSupported()&lt;/code&gt;&lt;/a&gt; must also be true. But the value of &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; does not influence the value returned by this function. For a class to be redefined, &lt;a href=&quot;#isRedefineClassesSupported()&quot;&gt;&lt;code&gt;isRedefineClassesSupported()&lt;/code&gt;&lt;/a&gt; must also be true. But the value of &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; does not influence the value returned by this function.</source>
          <target state="translated">For a class to be retransformed, &lt;a href=&quot;#isRetransformClassesSupported()&quot;&gt; &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; &lt;/a&gt; must also be true. But the value of &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; does not influence the value returned by this function. For a class to be redefined, &lt;a href=&quot;#isRedefineClassesSupported()&quot;&gt; &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; &lt;/a&gt; must also be true. But the value of &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; does not influence the value returned by this function.</target>
        </trans-unit>
        <trans-unit id="11846a346d2ab60d036859287229666998ffb89d" translate="yes" xml:space="preserve">
          <source>For a class to be retransformed, &lt;a href=&quot;instrumentation#isRetransformClassesSupported--&quot;&gt;&lt;code&gt;isRetransformClassesSupported()&lt;/code&gt;&lt;/a&gt; must also be true. But the value of &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; does not influence the value returned by this function. For a class to be redefined, &lt;a href=&quot;instrumentation#isRedefineClassesSupported--&quot;&gt;&lt;code&gt;isRedefineClassesSupported()&lt;/code&gt;&lt;/a&gt; must also be true. But the value of &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; does not influence the value returned by this function.</source>
          <target state="translated">クラスを再&lt;a href=&quot;instrumentation#isRetransformClassesSupported--&quot;&gt; &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; &lt;/a&gt;するには、isRetransformClassesSupported（）もtrueでなければなりません。ただし、 &lt;code&gt;isRetransformClassesSupported()&lt;/code&gt; の値は、この関数によって返される値には影響しません。クラスを再定義するには、&lt;a href=&quot;instrumentation#isRedefineClassesSupported--&quot;&gt; &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; &lt;/a&gt;もtrueでなければなりません。ただし、 &lt;code&gt;isRedefineClassesSupported()&lt;/code&gt; の値は、この関数によって返される値には影響しません。</target>
        </trans-unit>
        <trans-unit id="c5b39595c299e68d6c5a7b61856830d8b4761e7e" translate="yes" xml:space="preserve">
          <source>For a classic example, here is a task computing Fibonacci numbers:</source>
          <target state="translated">古典的な例としては、フィボナッチ数を計算するタスクがあります。</target>
        </trans-unit>
        <trans-unit id="048a413e62191e1579b1312264cda5145063d780" translate="yes" xml:space="preserve">
          <source>For a connector client, the source is a reference to the connector client object, an instance of a class implementing &lt;a href=&quot;jmxconnector&quot;&gt;&lt;code&gt;JMXConnector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コネクタクライアントの場合、ソースは&lt;a href=&quot;jmxconnector&quot;&gt; &lt;code&gt;JMXConnector&lt;/code&gt; を&lt;/a&gt;実装するクラスのインスタンスであるコネクタクライアントオブジェクトへの参照です。</target>
        </trans-unit>
        <trans-unit id="e954a136069f610e1d348ed2aae8a3833f52a5f6" translate="yes" xml:space="preserve">
          <source>For a connector server, if it is registered in an MBean server, the source is the &lt;a href=&quot;../objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; under which it is registered. Otherwise, it is a reference to the connector server object itself, an instance of a subclass of &lt;a href=&quot;jmxconnectorserver&quot;&gt;&lt;code&gt;JMXConnectorServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コネクタサーバーの場合、MBeanサーバーに登録されている場合、ソースは登録されている&lt;a href=&quot;../objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;です。それ以外の場合は、&lt;a href=&quot;jmxconnectorserver&quot;&gt; &lt;code&gt;JMXConnectorServer&lt;/code&gt; の&lt;/a&gt;サブクラスのインスタンスである、コネクタサーバーオブジェクト自体への参照です。</target>
        </trans-unit>
        <trans-unit id="2ce500b7d65aa27215f98ffce87929769e912a5b" translate="yes" xml:space="preserve">
          <source>For a custom handler, e.g. com.foo.MyHandler, the properties would be:</source>
          <target state="translated">カスタムハンドラ、例えば com.foo.MyHandler の場合、プロパティは次のようになります。</target>
        </trans-unit>
        <trans-unit id="97e10d9e8ecfe0fa32192fd60cf92de7a07ca3a0" translate="yes" xml:space="preserve">
          <source>For a disconnected &lt;code&gt;RowSet&lt;/code&gt; object, custom mapping can be done only when a &lt;code&gt;Map&lt;/code&gt; object is passed to the method or constructor that will be doing the custom mapping. The situation is different for connected &lt;code&gt;RowSet&lt;/code&gt; objects because they maintain a connection with the data source. A method that does custom mapping and is called by a disconnected &lt;code&gt;RowSet&lt;/code&gt; object may use the &lt;code&gt;Map&lt;/code&gt; object that is associated with the &lt;code&gt;Connection&lt;/code&gt; object being used. So, in other words, if no map is specified, the connection's type map can be used by default.</source>
          <target state="translated">For a disconnected &lt;code&gt;RowSet&lt;/code&gt; object, custom mapping can be done only when a &lt;code&gt;Map&lt;/code&gt; object is passed to the method or constructor that will be doing the custom mapping. The situation is different for connected &lt;code&gt;RowSet&lt;/code&gt; objects because they maintain a connection with the data source. A method that does custom mapping and is called by a disconnected &lt;code&gt;RowSet&lt;/code&gt; object may use the &lt;code&gt;Map&lt;/code&gt; object that is associated with the &lt;code&gt;Connection&lt;/code&gt; object being used. So, in other words, if no map is specified, the connection's type map can be used by default.</target>
        </trans-unit>
        <trans-unit id="48a4faa0d8a364248711da4f681304622c126f91" translate="yes" xml:space="preserve">
          <source>For a discussion of the relative advantages and disadvantages of using physical or logical fonts, see the &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/2d/text/fonts.html#advantages-and-disadvantages&quot;&gt; Physical and Logical Fonts&lt;/a&gt; in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/index.html&quot;&gt;The Java Tutorials&lt;/a&gt; document.</source>
          <target state="translated">For a discussion of the relative advantages and disadvantages of using physical or logical fonts, see the &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/2d/text/fonts.html#advantages-and-disadvantages&quot;&gt; Physical and Logical Fonts&lt;/a&gt; in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/index.html&quot;&gt;The Java Tutorials&lt;/a&gt; document.</target>
        </trans-unit>
        <trans-unit id="3342c591a6453fd80126d968b78a70f1efc1ffac" translate="yes" xml:space="preserve">
          <source>For a discussion on how newlines are handled, see &lt;a href=&quot;defaulteditorkit&quot;&gt;DefaultEditorKit&lt;/a&gt;.</source>
          <target state="translated">For a discussion on how newlines are handled, see &lt;a href=&quot;defaulteditorkit&quot;&gt;DefaultEditorKit&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1a499a77ba116ed68bdb9e3d0de7588f1280289b" translate="yes" xml:space="preserve">
          <source>For a discussion on how newlines are handled, see &lt;a href=&quot;text/defaulteditorkit&quot;&gt;DefaultEditorKit&lt;/a&gt;.</source>
          <target state="translated">For a discussion on how newlines are handled, see &lt;a href=&quot;text/defaulteditorkit&quot;&gt;DefaultEditorKit&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="46276d7f1f5784016e3a29da6b195107485d4658" translate="yes" xml:space="preserve">
          <source>For a dynamically-computed call site, the bootstrap method is invoked with parameter types &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;MethodType&lt;/code&gt;, and the types of any static arguments; the return type is &lt;code&gt;CallSite&lt;/code&gt;.</source>
          <target state="translated">For a dynamically-computed call site, the bootstrap method is invoked with parameter types &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; , &lt;code&gt;String&lt;/code&gt; , &lt;code&gt;MethodType&lt;/code&gt; , and the types of any static arguments; the return type is &lt;code&gt;CallSite&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c910a3cd492312cb98d83bdc46c9ad694abe02a" translate="yes" xml:space="preserve">
          <source>For a dynamically-computed call site, the returned result must be a non-null reference to a &lt;a href=&quot;callsite&quot;&gt;&lt;code&gt;CallSite&lt;/code&gt;&lt;/a&gt;. The type of the call site's target must be exactly equal to the type derived from the invocation's type descriptor and passed to the bootstrap method. If these conditions are not met, a &lt;code&gt;BootstrapMethodError&lt;/code&gt; is thrown. On success the call site then becomes permanently linked to the &lt;code&gt;invokedynamic&lt;/code&gt; instruction.</source>
          <target state="translated">For a dynamically-computed call site, the returned result must be a non-null reference to a &lt;a href=&quot;callsite&quot;&gt; &lt;code&gt;CallSite&lt;/code&gt; &lt;/a&gt;. The type of the call site's target must be exactly equal to the type derived from the invocation's type descriptor and passed to the bootstrap method. If these conditions are not met, a &lt;code&gt;BootstrapMethodError&lt;/code&gt; is thrown. On success the call site then becomes permanently linked to the &lt;code&gt;invokedynamic&lt;/code&gt; instruction.</target>
        </trans-unit>
        <trans-unit id="a470de0ccdda48f11f7b1042a4bc4b15b2fea1aa" translate="yes" xml:space="preserve">
          <source>For a dynamically-computed constant, the bootstrap method is invoked with parameter types &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Class&lt;/code&gt;, and the types of any static arguments; the return type is the type represented by the &lt;code&gt;Class&lt;/code&gt;.</source>
          <target state="translated">For a dynamically-computed constant, the bootstrap method is invoked with parameter types &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; , &lt;code&gt;String&lt;/code&gt; , &lt;code&gt;Class&lt;/code&gt; , and the types of any static arguments; the return type is the type represented by the &lt;code&gt;Class&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3d940c188e2e8b37e7cc38c2c024a1e36e08123" translate="yes" xml:space="preserve">
          <source>For a dynamically-computed constant, the first parameter of the bootstrap method must be assignable to &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;. If this condition is not met, a &lt;code&gt;BootstrapMethodError&lt;/code&gt; is thrown. On success the result of the bootstrap method is cached as the resolved constant value.</source>
          <target state="translated">For a dynamically-computed constant, the first parameter of the bootstrap method must be assignable to &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; . If this condition is not met, a &lt;code&gt;BootstrapMethodError&lt;/code&gt; is thrown. On success the result of the bootstrap method is cached as the resolved constant value.</target>
        </trans-unit>
        <trans-unit id="eb87cd9382f91a25882dc582ffbc03922acc6816" translate="yes" xml:space="preserve">
          <source>For a given abstract pathname</source>
          <target state="translated">与えられた抽象パス名に対して</target>
        </trans-unit>
        <trans-unit id="4467bdb7dd0b7f98749bbc835ec442ee3c213e7c" translate="yes" xml:space="preserve">
          <source>For a high resolution display where there is a scaling transform, the &lt;code&gt;MultiResolutionImage&lt;/code&gt; will have two image variants:</source>
          <target state="translated">For a high resolution display where there is a scaling transform, the &lt;code&gt;MultiResolutionImage&lt;/code&gt; will have two image variants:</target>
        </trans-unit>
        <trans-unit id="941ac0e517a49f3228852350502448606d2c37f8" translate="yes" xml:space="preserve">
          <source>For a list of all grandfathered tags, see the IANA Language Subtag Registry (search for &quot;Type: grandfathered&quot;).</source>
          <target state="translated">すべてのグランドファザリングされたタグのリストは、IANA Language Subtag Registryを参照してください(&quot;Type:grandfathered &quot;で検索してください)。</target>
        </trans-unit>
        <trans-unit id="985f6c1fef14acb945d8f93c159d909201239b40" translate="yes" xml:space="preserve">
          <source>For a matcher</source>
          <target state="translated">マッチャーの場合</target>
        </trans-unit>
        <trans-unit id="fab762ed05291a6e794cbd5c274e121d082536fc" translate="yes" xml:space="preserve">
          <source>For a modifiable list the programmer should additionally implement the list iterator's &lt;code&gt;set&lt;/code&gt; method. For a variable-size list the programmer should additionally implement the list iterator's &lt;code&gt;remove&lt;/code&gt; and &lt;code&gt;add&lt;/code&gt; methods.</source>
          <target state="translated">変更可能なリストの場合、プログラマはリストイテレータの &lt;code&gt;set&lt;/code&gt; メソッドをさらに実装する必要があります。可変サイズのリストの場合、プログラマはリストイテレータの &lt;code&gt;remove&lt;/code&gt; メソッドと &lt;code&gt;add&lt;/code&gt; メソッドを追加で実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="5eec30ef7ebd4eb227c935d9e3da65a08840d5f5" translate="yes" xml:space="preserve">
          <source>For a module-oriented location, a file object is contained in the location if there exists a module that may be obtained by the call:</source>
          <target state="translated">モジュール指向の場所では、呼び出しによって得られるモジュールが存在する場合、その場所にファイルオブジェクトが含まれます。</target>
        </trans-unit>
        <trans-unit id="26155ef85ec3b61790a4ccaeb70b4f7e4e2faec4" translate="yes" xml:space="preserve">
          <source>For a more detailed description of URL parsing, refer to RFC2396.</source>
          <target state="translated">URL 構文解析の詳細については、RFC2396 を参照してください。</target>
        </trans-unit>
        <trans-unit id="34285ef3a4ebc953564eb44fa61313cabbb675e1" translate="yes" xml:space="preserve">
          <source>For a more precise description of the behavior of regular expression constructs, please see &lt;a href=&quot;http://www.oreilly.com/catalog/regex3/&quot;&gt; &lt;i&gt;Mastering Regular Expressions, 3nd Edition&lt;/i&gt;, Jeffrey E. F. Friedl, O'Reilly and Associates, 2006.&lt;/a&gt;</source>
          <target state="translated">正規表現構成の動作のより正確な説明については、&lt;a href=&quot;http://www.oreilly.com/catalog/regex3/&quot;&gt;&lt;i&gt;Mastering Regular Expressions、3nd Edition&lt;/i&gt;&lt;/a&gt;、Jeffrey EF Friedl、O'Reilly and Associates、2006を参照してください。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="bac44005781412fcf2cf3e8a91edf1885c22f18b" translate="yes" xml:space="preserve">
          <source>For a multi-valued RDN, the type/value pairs have no specific order defined on them. In that case, this method returns type of one of the type/value pairs. The &lt;a href=&quot;#getValue()&quot;&gt;&lt;code&gt;getValue()&lt;/code&gt;&lt;/a&gt; method returns the value corresponding to the type returned by this method.</source>
          <target state="translated">For a multi-valued RDN, the type/value pairs have no specific order defined on them. In that case, this method returns type of one of the type/value pairs. The &lt;a href=&quot;#getValue()&quot;&gt; &lt;code&gt;getValue()&lt;/code&gt; &lt;/a&gt; method returns the value corresponding to the type returned by this method.</target>
        </trans-unit>
        <trans-unit id="4c4b6b1cf0941b3a2e1e6929568f2554294cf98a" translate="yes" xml:space="preserve">
          <source>For a multi-valued RDN, the type/value pairs have no specific order defined on them. In that case, this method returns type of one of the type/value pairs. The &lt;a href=&quot;rdn#getValue--&quot;&gt;&lt;code&gt;getValue()&lt;/code&gt;&lt;/a&gt; method returns the value corresponding to the type returned by this method.</source>
          <target state="translated">複数値のRDNの場合、タイプ/値のペアには特定の順序が定義されていません。その場合、このメソッドはタイプ/値のペアのいずれかのタイプを返します。&lt;a href=&quot;rdn#getValue--&quot;&gt; &lt;code&gt;getValue()&lt;/code&gt; &lt;/a&gt;メソッドは、このメソッドによって返されたタイプに対応する値を返します。</target>
        </trans-unit>
        <trans-unit id="3fc02c7aa14808f5d41b6dcefc79adb17372d2bf" translate="yes" xml:space="preserve">
          <source>For a multi-valued RDN, this method returns value corresponding to the type returned by &lt;a href=&quot;#getType()&quot;&gt;&lt;code&gt;getType()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">For a multi-valued RDN, this method returns value corresponding to the type returned by &lt;a href=&quot;#getType()&quot;&gt; &lt;code&gt;getType()&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="ce5a8e611f88fc4a57f454effdea1ddccd2bbcad" translate="yes" xml:space="preserve">
          <source>For a multi-valued RDN, this method returns value corresponding to the type returned by &lt;a href=&quot;rdn#getType--&quot;&gt;&lt;code&gt;getType()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">複数値のRDNの場合、このメソッドは&lt;a href=&quot;rdn#getType--&quot;&gt; &lt;code&gt;getType()&lt;/code&gt; &lt;/a&gt;メソッドによって返されるタイプに対応する値を返します。</target>
        </trans-unit>
        <trans-unit id="e0d49b963fdd1ed27cbb5376de257af68d40bf1b" translate="yes" xml:space="preserve">
          <source>For a non-scaled display, the &lt;code&gt;MultiResolutionImage&lt;/code&gt; will have one image variant:</source>
          <target state="translated">For a non-scaled display, the &lt;code&gt;MultiResolutionImage&lt;/code&gt; will have one image variant:</target>
        </trans-unit>
        <trans-unit id="aebb0baaa40878766cd56c083732376ae8549e67" translate="yes" xml:space="preserve">
          <source>For a one time comparison, this method has the best performance. If a given String will be involved in multiple comparisons, CollationKey.compareTo has the best performance. See the Collator class description for an example using CollationKeys.</source>
          <target state="translated">一度だけの比較の場合は、このメソッドが最も優れたパフォーマンスを発揮します。与えられた文字列が複数の比較に関与する場合は、CollationKey.compareToが最も優れたパフォーマンスを発揮します。CollationKeys を使用する例については、Collator クラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="76c56be1aaa760afea88dffb5f467c4dccf07377" translate="yes" xml:space="preserve">
          <source>For a package-oriented location, a file object is contained in the location if there exist values for</source>
          <target state="translated">パッケージ指向の場所では、ファイルオブジェクトは、その場所に</target>
        </trans-unit>
        <trans-unit id="27e9dd7224fc389b9e7f30eed575e7bda33f40c7" translate="yes" xml:space="preserve">
          <source>For a particular &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt;, g, one can reset the transformation to create such a mapping by using the following pseudocode:</source>
          <target state="translated">For a particular &lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt;, g, one can reset the transformation to create such a mapping by using the following pseudocode:</target>
        </trans-unit>
        <trans-unit id="dba5eed5c622b60caf7ec484699093a1ab22d756" translate="yes" xml:space="preserve">
          <source>For a permission you have, this is either empty or a &lt;em&gt;class name pattern&lt;/em&gt;. A class name pattern is a string following the Java conventions for dot-separated class names. It may end with &quot;&lt;code&gt;.*&lt;/code&gt;&quot; meaning that the permission grants access to any class that begins with the string preceding &quot;&lt;code&gt;.*&lt;/code&gt;&quot;. For instance, &quot;&lt;code&gt;javax.management.*&lt;/code&gt;&quot; grants access to &lt;code&gt;javax.management.MBeanServerDelegate&lt;/code&gt; and &lt;code&gt;javax.management.timer.Timer&lt;/code&gt;, among other classes.</source>
          <target state="translated">あなたが持っている許可の場合、これは空か&lt;em&gt;クラス名パターンの&lt;/em&gt;いずれかです。クラス名パターンは、ドットで区切られたクラス名に関するJavaの規則に従う文字列です。これは、で終わることがあり &lt;code&gt;.*&lt;/code&gt; 」権限は、前の文字列で始まる任意のクラスへのアクセスを許可することを意味します &lt;code&gt;.*&lt;/code&gt; 」。たとえば、「 &lt;code&gt;javax.management.*&lt;/code&gt; 」は、他のクラスの中でも、 &lt;code&gt;javax.management.MBeanServerDelegate&lt;/code&gt; および &lt;code&gt;javax.management.timer.Timer&lt;/code&gt; へのアクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="7bd8e055602b0b09f980c766e8d59803df5383ba" translate="yes" xml:space="preserve">
          <source>For a permission you have, this is either the name of an attribute or operation you can access, or it is empty or the single character &quot;&lt;code&gt;*&lt;/code&gt;&quot;, both of which grant access to any member.</source>
          <target state="translated">所有している権限の場合、これは、アクセスできる属性または操作の名前か、空または単一の文字「 &lt;code&gt;*&lt;/code&gt; 」のいずれかであり、どちらもメンバーにアクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="1acfd8f7dcf69d39ed31ec974c16b00c8bb84748" translate="yes" xml:space="preserve">
          <source>For a permission you have, this is the &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; of the MBean or MBeans you can access. It may be an object name pattern to grant access to all MBeans whose names match the pattern. It may also be empty, which grants access to all MBeans whatever their name.</source>
          <target state="translated">あなたが持っているパーミッションの場合、これはアクセスできるMBean の&lt;a href=&quot;objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;です。名前がパターンに一致するすべてのMBeanへのアクセスを許可するオブジェクト名パターンの場合があります。空の場合もあり、名前に関係なくすべてのMBeanへのアクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="a879233e1d115311b9ab98b47332e72587d921ae" translate="yes" xml:space="preserve">
          <source>For a permission you need, this is the &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; of the MBean you are accessing. For operations that do not reference a single MBean, it is null. It is never an object name pattern.</source>
          <target state="translated">必要な権限の場合、これはアクセスしているMBean の&lt;a href=&quot;objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;です。単一のMBeanを参照しない操作の場合、それはnullです。オブジェクト名のパターンにはなりません。</target>
        </trans-unit>
        <trans-unit id="4392da557e3be8db027e85b72c0308a6ceff3ddf" translate="yes" xml:space="preserve">
          <source>For a permission you need, this is the class name of an MBean you are accessing, as returned by &lt;a href=&quot;mbeanserver#getMBeanInfo-javax.management.ObjectName-&quot;&gt;&lt;code&gt;MBeanServer.getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;mbeaninfo#getClassName--&quot;&gt;&lt;code&gt;getClassName()&lt;/code&gt;&lt;/a&gt;. Certain operations do not reference a class name, in which case the class name is null.</source>
          <target state="translated">必要な権限の場合、これは&lt;a href=&quot;mbeanserver#getMBeanInfo-javax.management.ObjectName-&quot;&gt; &lt;code&gt;MBeanServer.getMBeanInfo(name)&lt;/code&gt; &lt;/a&gt;によって返される、アクセスしているMBeanのクラス名です。&lt;a href=&quot;mbeaninfo#getClassName--&quot;&gt; &lt;code&gt;getClassName()&lt;/code&gt; &lt;/a&gt;。特定の操作はクラス名を参照しません。その場合、クラス名はnullです。</target>
        </trans-unit>
        <trans-unit id="a277b0acb0118e4a7691d55119b800a002dc9cd2" translate="yes" xml:space="preserve">
          <source>For a permission you need, this is the class name of an MBean you are accessing, as returned by &lt;a href=&quot;mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt;&lt;code&gt;MBeanServer.getMBeanInfo(name)&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;mbeaninfo#getClassName()&quot;&gt;&lt;code&gt;getClassName()&lt;/code&gt;&lt;/a&gt;. Certain operations do not reference a class name, in which case the class name is null.</source>
          <target state="translated">For a permission you need, this is the class name of an MBean you are accessing, as returned by &lt;a href=&quot;mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt; &lt;code&gt;MBeanServer.getMBeanInfo(name)&lt;/code&gt; &lt;/a&gt;.&lt;a href=&quot;mbeaninfo#getClassName()&quot;&gt; &lt;code&gt;getClassName()&lt;/code&gt; &lt;/a&gt;. Certain operations do not reference a class name, in which case the class name is null.</target>
        </trans-unit>
        <trans-unit id="8c7845a5b03ddc3c0be5ac844e352635076127bb" translate="yes" xml:space="preserve">
          <source>For a permission you need, this is the name of the attribute or operation you are accessing. For operations that do not reference an attribute or operation, the member is null.</source>
          <target state="translated">必要なパーミッションについては、アクセスしている属性または操作の名前です。属性または操作を参照しない操作については、このメンバは NULL です。</target>
        </trans-unit>
        <trans-unit id="47e6fbe126c9387e2231f2b0971f9007e98fd739" translate="yes" xml:space="preserve">
          <source>For a positive or zero ordinal, the algorithm is equivalent to finding the first day-of-week that matches within the month and then adding a number of weeks to it. For a negative ordinal, the algorithm is equivalent to finding the last day-of-week that matches within the month and then subtracting a number of weeks to it. The ordinal number of weeks is not validated and is interpreted leniently according to this algorithm. This definition means that an ordinal of zero finds the last matching day-of-week in the previous month.</source>
          <target state="translated">正またはゼロの序数の場合、アルゴリズムは、月内にマッチする最初の曜日を見つけて、それに週数を足すことと等価です。負の序数の場合、アルゴリズムは、その月の中でマッチする最後の週の曜日を見つけて、そこから週数を引くことと等価です。序数の週数は検証されておらず、このアルゴリズムに従って優しく解釈されます。この定義は、0の序数が前月に最後にマッチする週の曜日を見つけることを意味します。</target>
        </trans-unit>
        <trans-unit id="8b197eb8130f26084a41da1e9ffc09230536c41b" translate="yes" xml:space="preserve">
          <source>For a qualified export, returns the non-empty and immutable set of the module names to which the package is exported.</source>
          <target state="translated">エクスポート先のモジュール名の空ではない不変なセットを返します。</target>
        </trans-unit>
        <trans-unit id="5706c82c73c3023f7f4226927a159d05f9e75ee6" translate="yes" xml:space="preserve">
          <source>For a qualified export, returns the non-empty and immutable set of the module names to which the package is exported. For an unqualified export, returns an empty set.</source>
          <target state="translated">適格なエクスポートの場合、パッケージがエクスポートされるモジュール名の空ではない不変のセットを返します。資格のないエクスポートの場合は、空のセットを返します。</target>
        </trans-unit>
        <trans-unit id="c3ff2005fc31c61febbd08651a00c2320cd0c323" translate="yes" xml:space="preserve">
          <source>For a qualified opens, returns the non-empty and immutable set of the module names to which the package is open.</source>
          <target state="translated">オープン時には、パッケージがオープンされているモジュール名の空ではない不変なセットを返します。</target>
        </trans-unit>
        <trans-unit id="32606560ede9387413ed7ca5823003a0597fd6d2" translate="yes" xml:space="preserve">
          <source>For a qualified opens, returns the non-empty and immutable set of the module names to which the package is open. For an unqualified opens, returns an empty set.</source>
          <target state="translated">オープン時には、パッケージがオープンされているモジュール名の空ではない不変のセットを返します。非修飾オープンの場合は、空のセットを返します。</target>
        </trans-unit>
        <trans-unit id="312f91b25e7e2207bee0c9dc9628a326d0088cae" translate="yes" xml:space="preserve">
          <source>For a read-only mapping, this channel must have been opened for reading; for a read/write or private mapping, this channel must have been opened for both reading and writing.</source>
          <target state="translated">読み取り専用のマッピングの場合、このチャネルは読み取り用にオープンされている必要があります。</target>
        </trans-unit>
        <trans-unit id="580c9df1ffd5acf062f271b1401c3788f3ddee75" translate="yes" xml:space="preserve">
          <source>For a rotating set of files, as each file reaches a given size limit, it is closed, rotated out, and a new file opened. Successively older files are named by adding &quot;0&quot;, &quot;1&quot;, &quot;2&quot;, etc. into the base filename.</source>
          <target state="translated">ファイルの回転セットについては、各ファイルが所定のサイズ制限に達すると、それは閉じられ、回転され、新しいファイルが開かれます。連続して古いファイルは、ベースファイル名に &quot;0&quot;、&quot;1&quot;、&quot;2&quot; などを追加することで名前が付けられます。</target>
        </trans-unit>
        <trans-unit id="e37bf1d5d080c7425aab6250223dd3753ab4c106" translate="yes" xml:space="preserve">
          <source>For a selection model of &lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt; any time the paths are changed (&lt;code&gt;setSelectionPath&lt;/code&gt;, &lt;code&gt;addSelectionPath&lt;/code&gt; ...) the TreePaths are again checked to make they are contiguous. A check of the TreePaths can also be forced by invoking &lt;code&gt;resetRowSelection&lt;/code&gt;. How a set of discontiguous TreePaths is mapped to a contiguous set is left to implementors of this interface to enforce a particular policy.</source>
          <target state="translated">For a selection model of &lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt; any time the paths are changed ( &lt;code&gt;setSelectionPath&lt;/code&gt; , &lt;code&gt;addSelectionPath&lt;/code&gt; ...) the TreePaths are again checked to make they are contiguous. A check of the TreePaths can also be forced by invoking &lt;code&gt;resetRowSelection&lt;/code&gt; . How a set of discontiguous TreePaths is mapped to a contiguous set is left to implementors of this interface to enforce a particular policy.</target>
        </trans-unit>
        <trans-unit id="1e8a63f99e8e63ed1864a35be23bc90bbbc49e4f" translate="yes" xml:space="preserve">
          <source>For a serializable &lt;code&gt;Entry&lt;/code&gt;, see &lt;a href=&quot;abstractmap.simpleentry&quot;&gt;&lt;code&gt;AbstractMap.SimpleEntry&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;abstractmap.simpleimmutableentry&quot;&gt;&lt;code&gt;AbstractMap.SimpleImmutableEntry&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">For a serializable &lt;code&gt;Entry&lt;/code&gt; , see &lt;a href=&quot;abstractmap.simpleentry&quot;&gt; &lt;code&gt;AbstractMap.SimpleEntry&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;abstractmap.simpleimmutableentry&quot;&gt; &lt;code&gt;AbstractMap.SimpleImmutableEntry&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7f907fd2fa666e4e8e93d91cfed3ef0d634af220" translate="yes" xml:space="preserve">
          <source>For a tutorial and programming guide with examples of use of the collections framework, please see:</source>
          <target state="translated">collections フレームワークの使用例のチュートリアルとプログラミングガイドについては、こちらを参照してください。</target>
        </trans-unit>
        <trans-unit id="cfcb01272d1e879bd2db579e039d3def51787f14" translate="yes" xml:space="preserve">
          <source>For a user-defined parameter, the fully-qualified SQL type name of the parameter should also be given, while a &lt;code&gt;REF&lt;/code&gt; parameter requires that the fully-qualified type name of the referenced type be given. A JDBC driver that does not need the type code and type name information may ignore it. To be portable, however, applications should always provide these values for user-defined and &lt;code&gt;REF&lt;/code&gt; parameters. Although it is intended for user-defined and &lt;code&gt;REF&lt;/code&gt; parameters, this method may be used to register a parameter of any JDBC type. If the parameter does not have a user-defined or &lt;code&gt;REF&lt;/code&gt; type, the</source>
          <target state="translated">For a user-defined parameter, the fully-qualified SQL type name of the parameter should also be given, while a &lt;code&gt;REF&lt;/code&gt; parameter requires that the fully-qualified type name of the referenced type be given. A JDBC driver that does not need the type code and type name information may ignore it. To be portable, however, applications should always provide these values for user-defined and &lt;code&gt;REF&lt;/code&gt; parameters. Although it is intended for user-defined and &lt;code&gt;REF&lt;/code&gt; parameters, this method may be used to register a parameter of any JDBC type. If the parameter does not have a user-defined or &lt;code&gt;REF&lt;/code&gt; type, the</target>
        </trans-unit>
        <trans-unit id="83db4de63f9bc5fb49eb970004951aeb102efaf4" translate="yes" xml:space="preserve">
          <source>For a user-named parameter the fully-qualified SQL type name of the parameter should also be given, while a REF parameter requires that the fully-qualified type name of the referenced type be given. A JDBC driver that does not need the type code and type name information may ignore it. To be portable, however, applications should always provide these values for user-named and REF parameters. Although it is intended for user-named and REF parameters, this method may be used to register a parameter of any JDBC type. If the parameter does not have a user-named or REF type, the typeName parameter is ignored.</source>
          <target state="translated">ユーザ名のパラメータについては、パラメータの完全修飾されたSQL型名も与えられなければならないが、REFパラメータについては、参照される型の完全修飾された型名が与えられる必要がある。型コードと型名情報を必要としないJDBCドライバはそれを無視してもよい。しかし、移植性を高めるために、アプリケーションは常にユーザ名とREFパラメータにこれらの値を提供すべきである。これはユーザ名付きおよびREFパラメータを対象としているが、このメソッドは任意のJDBCタイプのパラメータを登録するために使用することができる。パラメータがユーザ名またはREF型を持たない場合、typeNameパラメータは無視される。</target>
        </trans-unit>
        <trans-unit id="46471aadd599914bd627b9907250a4504ff64e19" translate="yes" xml:space="preserve">
          <source>For access to heterogeneous binary data, that is, sequences of values of different types, this class defines a family of absolute and relative</source>
          <target state="translated">異種バイナリデータ、つまり異なる型の値のシーケンスへのアクセスのために、このクラスは絶対値と相対値のファミリーを定義します。</target>
        </trans-unit>
        <trans-unit id="c7da068617acdf9b7c61fac878688b1af0c7245b" translate="yes" xml:space="preserve">
          <source>For access to homogeneous binary data, that is, sequences of values of the same type, this class defines methods that can create</source>
          <target state="translated">同種のバイナリデータ、つまり同じ型の値のシーケンスにアクセスするために、このクラスでは</target>
        </trans-unit>
        <trans-unit id="0f404a7a6cf52ddd90c2f4ceb0bc31691b95f048" translate="yes" xml:space="preserve">
          <source>For adding specific actions, overide &lt;code&gt;installKeyboardActions&lt;/code&gt; to add actions in response to KeyStroke bindings. See the article &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/keybinding.html&quot;&gt;How to Use Key Bindings&lt;/a&gt;</source>
          <target state="translated">For adding specific actions, overide &lt;code&gt;installKeyboardActions&lt;/code&gt; to add actions in response to KeyStroke bindings. See the article &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/keybinding.html&quot;&gt;How to Use Key Bindings&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4e31f21b77cc61c27c5db3b1c62f525194382db" translate="yes" xml:space="preserve">
          <source>For all arithmetic operators , the operation is carried out as though an exact intermediate result were first calculated and then rounded to the number of digits specified by the precision setting (if necessary), using the selected rounding mode. If the exact result is not returned, some digit positions of the exact result are discarded. When rounding increases the magnitude of the returned result, it is possible for a new digit position to be created by a carry propagating to a leading &quot;9&quot; digit. For example, rounding the value 999.9 to three digits rounding up would be numerically equal to one thousand, represented as 100&amp;times;10&lt;sup&gt;1&lt;/sup&gt;. In such cases, the new &quot;1&quot; is the leading digit position of the returned result.</source>
          <target state="translated">すべての算術演算子について、正確な中間結果が最初に計算され、次に、選択した丸めモードを使用して、（必要に応じて）精度設定で指定された桁数に丸められるかのように演算が実行されます。正確な結果が返されない場合、正確な結果の一部の桁位置は破棄されます。丸めによって返される結果の大きさが大きくなると、先頭の「9」桁に伝搬する桁上げによって新しい桁位置が作成される可能性があります。たとえば、値999.9を3桁に丸めると、数値的には1000に等しくなり、100&amp;times;10 &lt;sup&gt;1&lt;/sup&gt;として表されます。このような場合、新しい「1」は、返された結果の先頭の桁位置です。</target>
        </trans-unit>
        <trans-unit id="ee3fe161c58cb31cfb98f3531662564b65b76541" translate="yes" xml:space="preserve">
          <source>For all directions, components are arranged in the same order as they were added to the container.</source>
          <target state="translated">すべての方向について、コンポーネントは容器に追加された順に配置されています。</target>
        </trans-unit>
        <trans-unit id="9a58862580f80db556a0b45a94eae2108f857b7a" translate="yes" xml:space="preserve">
          <source>For all events, except treeStructureChanged, returns the parent of the changed nodes.</source>
          <target state="translated">treeStructureChanged 以外のすべてのイベントでは、変更されたノードの親を返します。</target>
        </trans-unit>
        <trans-unit id="3a7b4dbead32d2c320fa770520ecd503cf1fe80f" translate="yes" xml:space="preserve">
          <source>For all events, except treeStructureChanged, returns the parent of the changed nodes. For treeStructureChanged events, returns the ancestor of the structure that has changed. This and &lt;code&gt;getChildIndices&lt;/code&gt; are used to get a list of the effected nodes.</source>
          <target state="translated">For all events, except treeStructureChanged, returns the parent of the changed nodes. For treeStructureChanged events, returns the ancestor of the structure that has changed. This and &lt;code&gt;getChildIndices&lt;/code&gt; are used to get a list of the effected nodes.</target>
        </trans-unit>
        <trans-unit id="288ffb6ae2c3c2170584c8e6d3a3fc12ca35cdc2" translate="yes" xml:space="preserve">
          <source>For all named loggers, the reset operation removes and closes all Handlers and (except for the root logger) sets the level to &lt;code&gt;null&lt;/code&gt;. The root logger's level is set to &lt;code&gt;Level.INFO&lt;/code&gt;.</source>
          <target state="translated">For all named loggers, the reset operation removes and closes all Handlers and (except for the root logger) sets the level to &lt;code&gt;null&lt;/code&gt; . The root logger's level is set to &lt;code&gt;Level.INFO&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e82599dd6fcb52a65725f8c6350a2730f871102" translate="yes" xml:space="preserve">
          <source>For all named loggers, the reset operation removes and closes all Handlers and (except for the root logger) sets the level to null. The root logger's level is set to Level.INFO.</source>
          <target state="translated">すべての名前付きロガーについて、リセット操作はすべてのハンドラを削除して閉じ、(ルート ロガーを除く)レベルを NULL に設定します。ルート ロガーのレベルは Level.INFO に設定されます。</target>
        </trans-unit>
        <trans-unit id="dd4038d8d24624f3cd29de1d0e2c4f5451989f5a" translate="yes" xml:space="preserve">
          <source>For all nodes, importing a node creates a node object owned by the importing document, with attribute values identical to the source node's &lt;code&gt;nodeName&lt;/code&gt; and &lt;code&gt;nodeType&lt;/code&gt;, plus the attributes related to namespaces (&lt;code&gt;prefix&lt;/code&gt;, &lt;code&gt;localName&lt;/code&gt;, and &lt;code&gt;namespaceURI&lt;/code&gt;). As in the &lt;code&gt;cloneNode&lt;/code&gt; operation, the source node is not altered. User data associated to the imported node is not carried over. However, if any &lt;code&gt;UserDataHandlers&lt;/code&gt; has been specified along with the associated data these handlers will be called with the appropriate parameters before this method returns.</source>
          <target state="translated">For all nodes, importing a node creates a node object owned by the importing document, with attribute values identical to the source node's &lt;code&gt;nodeName&lt;/code&gt; and &lt;code&gt;nodeType&lt;/code&gt; , plus the attributes related to namespaces ( &lt;code&gt;prefix&lt;/code&gt; , &lt;code&gt;localName&lt;/code&gt; , and &lt;code&gt;namespaceURI&lt;/code&gt; ). As in the &lt;code&gt;cloneNode&lt;/code&gt; operation, the source node is not altered. User data associated to the imported node is not carried over. However, if any &lt;code&gt;UserDataHandlers&lt;/code&gt; has been specified along with the associated data these handlers will be called with the appropriate parameters before this method returns.</target>
        </trans-unit>
        <trans-unit id="fff19286ba16ce8c5ee3fad0096b6268cca888dc" translate="yes" xml:space="preserve">
          <source>For all standard look and feels shipped with Java, the popup list portion of combo box is implemented as a &lt;code&gt;JPopupMenu&lt;/code&gt;. A custom look and feel may not implement it this way and will therefore not receive the notification.</source>
          <target state="translated">For all standard look and feels shipped with Java, the popup list portion of combo box is implemented as a &lt;code&gt;JPopupMenu&lt;/code&gt; . A custom look and feel may not implement it this way and will therefore not receive the notification.</target>
        </trans-unit>
        <trans-unit id="d5f49a747ab61666aaa19b73ef2d730ad3979e34" translate="yes" xml:space="preserve">
          <source>For all the methods in this interface that write bytes, it is generally true that if a byte cannot be written for any reason, an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">バイトを書き込むこのインターフェイスのすべてのメソッドでは、通常、何らかの理由でバイトを書き込むことができない &lt;code&gt;IOException&lt;/code&gt; 、IOExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="a1d8562753037dc3765edd632190008e36ebc975" translate="yes" xml:space="preserve">
          <source>For an enumerated attribute that is not a notation, the parser will report the type as &quot;NMTOKEN&quot;.</source>
          <target state="translated">表記法ではない列挙属性の場合、パーサは &quot;NMTOKEN &quot;として型を報告します。</target>
        </trans-unit>
        <trans-unit id="e639711714e682a35eeaff0dc11893d2ea350fd1" translate="yes" xml:space="preserve">
          <source>For an example implementation of a simple file view, see &lt;code&gt;&lt;i&gt;yourJDK&lt;/i&gt;/demo/jfc/FileChooserDemo/ExampleFileView.java&lt;/code&gt;. For more information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;How to Use File Choosers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">For an example implementation of a simple file view, see &lt;code&gt;&lt;i&gt;yourJDK&lt;/i&gt;/demo/jfc/FileChooserDemo/ExampleFileView.java&lt;/code&gt; . For more information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;How to Use File Choosers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="020289f3dd3403c4bcc33a4ae44e8a65e5d11873" translate="yes" xml:space="preserve">
          <source>For an example of specifying custom bounded range models used by sliders, see &lt;a href=&quot;http://www.oracle.com/technetwork/java/architecture-142923.html#separable&quot;&gt;Separable model architecture&lt;/a&gt; in &lt;em&gt;A Swing Architecture Overview.&lt;/em&gt;</source>
          <target state="translated">For an example of specifying custom bounded range models used by sliders, see &lt;a href=&quot;http://www.oracle.com/technetwork/java/architecture-142923.html#separable&quot;&gt;Separable model architecture&lt;/a&gt; in &lt;em&gt;A Swing Architecture Overview.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06208486ae9eecd5757942a7e65903f3d3de5ea1" translate="yes" xml:space="preserve">
          <source>For an input &lt;code&gt;Locale&lt;/code&gt; with a non-empty script value, append candidate &lt;code&gt;Locale&lt;/code&gt;s by omitting the final component up to language, then append candidates generated from the &lt;code&gt;Locale&lt;/code&gt; with country and variant restored:</source>
          <target state="translated">空でないスクリプト値を持つ入力 &lt;code&gt;Locale&lt;/code&gt; 場合、言語までの最後のコンポーネントを省略して候補 &lt;code&gt;Locale&lt;/code&gt; 追加し、国とバリアントが復元された &lt;code&gt;Locale&lt;/code&gt; から生成された候補を追加します。</target>
        </trans-unit>
        <trans-unit id="f24e11a909288b53c92f020d081b5941027a9a2b" translate="yes" xml:space="preserve">
          <source>For an input &lt;code&gt;Locale&lt;/code&gt; with a variant value consisting of multiple subtags separated by underscore, generate candidate &lt;code&gt;Locale&lt;/code&gt;s by omitting the variant subtags one by one, then insert them after every occurrence of &lt;code&gt; Locale&lt;/code&gt;s with the full variant value in the original list. For example, if the the variant consists of two subtags &lt;em&gt;V1&lt;/em&gt; and &lt;em&gt;V2&lt;/em&gt;:</source>
          <target state="translated">アンダースコアで区切られた複数のサブタグで構成されるバリアント値を持つ入力 &lt;code&gt;Locale&lt;/code&gt; の場合、バリアントサブタグを1つずつ省略して候補 &lt;code&gt;Locale&lt;/code&gt; を生成し、元のリストで完全なバリアント値を持つ &lt;code&gt; Locale&lt;/code&gt; が出現するたびにそれらを挿入します。たとえば、バリアントが2つのサブタグ&lt;em&gt;V1&lt;/em&gt;と&lt;em&gt;V2で&lt;/em&gt;構成されている場合：</target>
        </trans-unit>
        <trans-unit id="d400172b9de026958a8a6177cb13b5b1342bf935" translate="yes" xml:space="preserve">
          <source>For an input &lt;code&gt;Locale&lt;/code&gt; with a variant value consisting of multiple subtags separated by underscore, generate candidate &lt;code&gt;Locale&lt;/code&gt;s by omitting the variant subtags one by one, then insert them after every occurrence of &lt;code&gt; Locale&lt;/code&gt;s with the full variant value in the original list. For example, if the variant consists of two subtags &lt;em&gt;V1&lt;/em&gt; and &lt;em&gt;V2&lt;/em&gt;:</source>
          <target state="translated">For an input &lt;code&gt;Locale&lt;/code&gt; with a variant value consisting of multiple subtags separated by underscore, generate candidate &lt;code&gt;Locale&lt;/code&gt; s by omitting the variant subtags one by one, then insert them after every occurrence of &lt;code&gt; Locale&lt;/code&gt; s with the full variant value in the original list. For example, if the variant consists of two subtags &lt;em&gt;V1&lt;/em&gt; and &lt;em&gt;V2&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="5554f28ba351ad9f2739f3b06ab5e78a02202f66" translate="yes" xml:space="preserve">
          <source>For an input &lt;code&gt;Locale&lt;/code&gt; with an empty script value, append candidate &lt;code&gt;Locale&lt;/code&gt;s by omitting the final component one by one as below:</source>
          <target state="translated">空のスクリプト値を持つ入力 &lt;code&gt;Locale&lt;/code&gt; 場合、次のように最終コンポーネントを1つずつ省略して候補 &lt;code&gt;Locale&lt;/code&gt; 追加します。</target>
        </trans-unit>
        <trans-unit id="31165b31091c89e2fd334bb1aeff719d666b51eb" translate="yes" xml:space="preserve">
          <source>For an invocation of &lt;code&gt;get[Declared]AnnotationsByType( Class &amp;lt;
 T &amp;gt;)&lt;/code&gt;, the order of annotations which are directly or indirectly present on an element</source>
          <target state="translated">&lt;code&gt;get[Declared]AnnotationsByType( Class &amp;lt; T &amp;gt;)&lt;/code&gt; 呼び出しの場合、要素に直接または間接的に存在する注釈の順序</target>
        </trans-unit>
        <trans-unit id="e404249bab7df0d9f0bfdf9d7675a615c61bed52" translate="yes" xml:space="preserve">
          <source>For an object to be selected, each attribute in &lt;code&gt;matchingAttributes&lt;/code&gt; must match some attribute of the object. If &lt;code&gt;matchingAttributes&lt;/code&gt; is empty or null, all objects in the target context are returned.</source>
          <target state="translated">オブジェクトを選択 &lt;code&gt;matchingAttributes&lt;/code&gt; は、matchingAttributesの各属性がオブジェクトの一部の属性と一致する必要があります。 &lt;code&gt;matchingAttributes&lt;/code&gt; が空またはnullの場合、ターゲットコンテキスト内のすべてのオブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="1695e50b38967e03ed9d5f91ca77d368a7c4cc92" translate="yes" xml:space="preserve">
          <source>For an online tutorial on using Java GSS-API, please see &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jgss_tutorial&quot;&gt;Introduction to JAAS and Java GSS-API&lt;/a&gt;.</source>
          <target state="translated">For an online tutorial on using Java GSS-API, please see &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jgss_tutorial&quot;&gt;Introduction to JAAS and Java GSS-API&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="672bc788ec93ca82f67bd27cfd38341ecdffcf48" translate="yes" xml:space="preserve">
          <source>For an option that has a notion of on and off, and requires a non-boolean parameter, setting its value to anything other than</source>
          <target state="translated">オンとオフの概念を持ち、ブーリアン以外のパラメータを必要とするオプションの場合、その値を</target>
        </trans-unit>
        <trans-unit id="47a2e8dcbeb920d5c4463c83794d2144225623e9" translate="yes" xml:space="preserve">
          <source>For an overview of control flow, please refer to the  Java Logging Overview.</source>
          <target state="translated">制御フローの概要については、Javaロギングの概要を参照してください。</target>
        </trans-unit>
        <trans-unit id="2b3cc5049557f2a0ba9631abbd655dc628ca214a" translate="yes" xml:space="preserve">
          <source>For an overview of control flow, please refer to the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=logging_overview&quot;&gt;Java Logging Overview&lt;/a&gt;</source>
          <target state="translated">For an overview of control flow, please refer to the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=logging_overview&quot;&gt;Java Logging Overview&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91e6254ad7f3187beb07deedc7152811a9b226c5" translate="yes" xml:space="preserve">
          <source>For an overview, API outline, and design rationale, please see:</source>
          <target state="translated">概要、API概要、設計根拠については、こちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="dd7ca935a2ead39c5e628b5614647f54e1fa8e1b" translate="yes" xml:space="preserve">
          <source>For any TimeUnit &lt;code&gt;unit&lt;/code&gt;, &lt;code&gt;unit.convert(Duration.ofNanos(n))&lt;/code&gt; is equivalent to &lt;code&gt;unit.convert(n, NANOSECONDS)&lt;/code&gt;, and &lt;code&gt;unit.convert(Duration.of(n, unit.toChronoUnit()))&lt;/code&gt; is equivalent to &lt;code&gt;n&lt;/code&gt; (in the absence of overflow).</source>
          <target state="translated">For any TimeUnit &lt;code&gt;unit&lt;/code&gt; , &lt;code&gt;unit.convert(Duration.ofNanos(n))&lt;/code&gt; is equivalent to &lt;code&gt;unit.convert(n, NANOSECONDS)&lt;/code&gt; , and &lt;code&gt;unit.convert(Duration.of(n, unit.toChronoUnit()))&lt;/code&gt; is equivalent to &lt;code&gt;n&lt;/code&gt; (in the absence of overflow).</target>
        </trans-unit>
        <trans-unit id="f9bb1854efb2037b61a2381563ca86cef944af4f" translate="yes" xml:space="preserve">
          <source>For any URI</source>
          <target state="translated">任意のURIに対して</target>
        </trans-unit>
        <trans-unit id="15869691dfda7153f19720f10e40b12cb9c1361f" translate="yes" xml:space="preserve">
          <source>For any given &lt;code&gt;ZoneRules&lt;/code&gt;, this list contains the transition rules for years beyond those years that have been fully defined. These rules typically refer to future daylight saving time rule changes.</source>
          <target state="translated">特定の &lt;code&gt;ZoneRules&lt;/code&gt; について、このリストには、完全に定義された年を超える年の移行ルールが含まれています。これらのルールは通常、将来の夏時間ルールの変更を参照します。</target>
        </trans-unit>
        <trans-unit id="a5920c7d4c6dce56729e14f9ea7a334529f36c3e" translate="yes" xml:space="preserve">
          <source>For any given &lt;em&gt;J&lt;/em&gt;, the following rules are consulted to determine how to reconstruct instances of &lt;em&gt;J&lt;/em&gt; from &lt;code&gt;CompositeData&lt;/code&gt;. The first applicable rule in the list is the one that will be used.</source>
          <target state="translated">任意の&lt;em&gt;J&lt;/em&gt;について、次のルールを参照して、 &lt;code&gt;CompositeData&lt;/code&gt; から&lt;em&gt;Jの&lt;/em&gt;インスタンスを再構築する方法を決定します。リストの最初の適用可能なルールが使用されます。</target>
        </trans-unit>
        <trans-unit id="f9a3d499ad5719ec12b5122ad9ea8dea7bfd468b" translate="yes" xml:space="preserve">
          <source>For any given caller class &lt;code&gt;C&lt;/code&gt;, the lookup object returned by this call has equivalent capabilities to any lookup object supplied by the JVM to the bootstrap method of an &lt;a href=&quot;package-summary#indyinsn&quot;&gt;invokedynamic instruction&lt;/a&gt; executing in the same caller class &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">特定の呼び出し元クラス &lt;code&gt;C&lt;/code&gt; では、この呼び出しによって返されるルックアップオブジェクトは、同じ呼び出し元クラス &lt;code&gt;C&lt;/code&gt; で実行される&lt;a href=&quot;package-summary#indyinsn&quot;&gt;invokedynamic命令の&lt;/a&gt;ブートストラップメソッドにJVMによって提供される任意のルックアップオブジェクトと同等の機能を備えています。</target>
        </trans-unit>
        <trans-unit id="9c1f31057dd8317785675f53700838ecaa796cec" translate="yes" xml:space="preserve">
          <source>For any non-null reference value &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;x.equals(null)&lt;/code&gt; should return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">null以外の参照値 &lt;code&gt;x&lt;/code&gt; の場合、 &lt;code&gt;x.equals(null)&lt;/code&gt; は &lt;code&gt;false&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="c97665dbad552eb3f7ddd81577b124767987cf43" translate="yes" xml:space="preserve">
          <source>For any operation which may potentially block, the &lt;code&gt;SSLEngine&lt;/code&gt; will create a &lt;a href=&quot;../../../java/lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; delegated task. When &lt;code&gt;SSLEngineResult&lt;/code&gt; indicates that a delegated task result is needed, the application must call &lt;a href=&quot;#getDelegatedTask()&quot;&gt;&lt;code&gt;getDelegatedTask()&lt;/code&gt;&lt;/a&gt; to obtain an outstanding delegated task and call its &lt;a href=&quot;../../../java/lang/runnable#run()&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method (possibly using a different thread depending on the compute strategy). The application should continue obtaining delegated tasks until no more exist, and try the original operation again.</source>
          <target state="translated">For any operation which may potentially block, the &lt;code&gt;SSLEngine&lt;/code&gt; will create a &lt;a href=&quot;../../../java/lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt; delegated task. When &lt;code&gt;SSLEngineResult&lt;/code&gt; indicates that a delegated task result is needed, the application must call &lt;a href=&quot;#getDelegatedTask()&quot;&gt; &lt;code&gt;getDelegatedTask()&lt;/code&gt; &lt;/a&gt; to obtain an outstanding delegated task and call its &lt;a href=&quot;../../../java/lang/runnable#run()&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt; method (possibly using a different thread depending on the compute strategy). The application should continue obtaining delegated tasks until no more exist, and try the original operation again.</target>
        </trans-unit>
        <trans-unit id="d3a43fcb61e7d55a42e559584605cc4e5de48fb5" translate="yes" xml:space="preserve">
          <source>For any operation which may potentially block, the &lt;code&gt;SSLEngine&lt;/code&gt; will create a &lt;a href=&quot;../../../java/lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; delegated task. When &lt;code&gt;SSLEngineResult&lt;/code&gt; indicates that a delegated task result is needed, the application must call &lt;a href=&quot;sslengine#getDelegatedTask--&quot;&gt;&lt;code&gt;getDelegatedTask()&lt;/code&gt;&lt;/a&gt; to obtain an outstanding delegated task and call its &lt;a href=&quot;../../../java/lang/runnable#run--&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method (possibly using a different thread depending on the compute strategy). The application should continue obtaining delegated tasks until no more exist, and try the original operation again.</source>
          <target state="translated">ブロックする可能性のある操作の場合、 &lt;code&gt;SSLEngine&lt;/code&gt; は&lt;a href=&quot;../../../java/lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt;委任タスクを作成します。 &lt;code&gt;SSLEngineResult&lt;/code&gt; が委任されたタスクの結果が必要であることを示している場合、アプリケーションは&lt;a href=&quot;sslengine#getDelegatedTask--&quot;&gt; &lt;code&gt;getDelegatedTask()&lt;/code&gt; &lt;/a&gt;を呼び出して未処理の委任されたタスクを取得し、&lt;a href=&quot;../../../java/lang/runnable#run--&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出す必要があります（計算戦略に応じて異なるスレッドを使用する場合があります）。アプリケーションは、委任されたタスクがなくなるまで引き続き取得し、元の操作を再試行する必要があります。</target>
        </trans-unit>
        <trans-unit id="303f6d979b65ea5b20387f8d0d52177ce7aece89" translate="yes" xml:space="preserve">
          <source>For any possible combination of properties, it must be the case that either (a) there are no applicable constructors, or (b) there is exactly one applicable constructor, or (c) one of the applicable constructors names a proper superset of the properties named by each other applicable constructor. (In other words, there should never be ambiguity over which constructor to choose.) If this condition is not true, then &lt;em&gt;J&lt;/em&gt; is not reconstructible.</source>
          <target state="translated">プロパティの可能な組み合わせについては、（a）該当するコンストラクターがないか、（b）該当するコンストラクターが1つだけあるか、または（c）該当するコンストラクターの1つがプロパティの適切なスーパーセットを指定している必要があります。他の該当するコンストラクターによって名前が付けられます。（言い換えれば、どのコンストラクタを選択するかについてあいまいさがあってはなりません。）この条件が真でない場合、&lt;em&gt;J&lt;/em&gt;は再構築できません。</target>
        </trans-unit>
        <trans-unit id="bddc8af9dd10e096d924d66436e9ef54cc935cc8" translate="yes" xml:space="preserve">
          <source>For any set of member methods of the specified interfaces that have the same signature:</source>
          <target state="translated">同じシグネチャを持つ、指定されたインタフェースのメンバメソッドの任意のセットに対して。</target>
        </trans-unit>
        <trans-unit id="56442df5927179f1a6098b0fb71e28daadccff02" translate="yes" xml:space="preserve">
          <source>For any two &lt;a href=&quot;#normalize()&quot;&gt;&lt;code&gt;normalized&lt;/code&gt;&lt;/a&gt; paths</source>
          <target state="translated">For any two &lt;a href=&quot;#normalize()&quot;&gt; &lt;code&gt;normalized&lt;/code&gt; &lt;/a&gt; paths</target>
        </trans-unit>
        <trans-unit id="3e41f32017f7ee715d47faca8dd77871008af685" translate="yes" xml:space="preserve">
          <source>For any two &lt;a href=&quot;path#normalize--&quot;&gt;&lt;code&gt;normalized&lt;/code&gt;&lt;/a&gt; paths</source>
          <target state="translated">2つの&lt;a href=&quot;path#normalize--&quot;&gt; &lt;code&gt;normalized&lt;/code&gt; &lt;/a&gt;パス</target>
        </trans-unit>
        <trans-unit id="517a45648675ff4a8ec5f16ff462f43183929a6b" translate="yes" xml:space="preserve">
          <source>For any two arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; such that &lt;code&gt;Arrays.deepEquals(a, b)&lt;/code&gt;, it is also the case that &lt;code&gt;Arrays.deepHashCode(a) == Arrays.deepHashCode(b)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Arrays.deepEquals(a, b)&lt;/code&gt; ような2つの配列 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; の場合、これは &lt;code&gt;Arrays.deepHashCode(a) == Arrays.deepHashCode(b)&lt;/code&gt; の場合にも当てはまります。</target>
        </trans-unit>
        <trans-unit id="d7f039f4ee8f8c7899d92fe740d72a7ceecc652f" translate="yes" xml:space="preserve">
          <source>For any two arrays &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; such that &lt;code&gt;Arrays.equals(a, b)&lt;/code&gt;, it is also the case that &lt;code&gt;Arrays.hashCode(a) == Arrays.hashCode(b)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Arrays.equals(a, b)&lt;/code&gt; ような任意の2つの配列 &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; については、 &lt;code&gt;Arrays.hashCode(a) == Arrays.hashCode(b)&lt;/code&gt; の場合もそうです。</target>
        </trans-unit>
        <trans-unit id="50c13d4d9a4a05c66127be14d162123493eb1960" translate="yes" xml:space="preserve">
          <source>For applications that require separate or custom pools, a &lt;code&gt;
 ForkJoinPool&lt;/code&gt; may be constructed with a given target parallelism level; by default, equal to the number of available processors. The pool attempts to maintain enough active (or available) threads by dynamically adding, suspending, or resuming internal worker threads, even if some tasks are stalled waiting to join others. However, no such adjustments are guaranteed in the face of blocked I/O or other unmanaged synchronization. The nested &lt;a href=&quot;forkjoinpool.managedblocker&quot;&gt;&lt;code&gt;ForkJoinPool.ManagedBlocker&lt;/code&gt;&lt;/a&gt; interface enables extension of the kinds of synchronization accommodated. The default policies may be overridden using a constructor with parameters corresponding to those documented in class &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">For applications that require separate or custom pools, a &lt;code&gt; ForkJoinPool&lt;/code&gt; may be constructed with a given target parallelism level; by default, equal to the number of available processors. The pool attempts to maintain enough active (or available) threads by dynamically adding, suspending, or resuming internal worker threads, even if some tasks are stalled waiting to join others. However, no such adjustments are guaranteed in the face of blocked I/O or other unmanaged synchronization. The nested &lt;a href=&quot;forkjoinpool.managedblocker&quot;&gt; &lt;code&gt;ForkJoinPool.ManagedBlocker&lt;/code&gt; &lt;/a&gt; interface enables extension of the kinds of synchronization accommodated. The default policies may be overridden using a constructor with parameters corresponding to those documented in class &lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="38c95ac0e5ee06e24fd22793e2ce4273207b6f1b" translate="yes" xml:space="preserve">
          <source>For applications that require separate or custom pools, a &lt;code&gt;ForkJoinPool&lt;/code&gt; may be constructed with a given target parallelism level; by default, equal to the number of available processors. The pool attempts to maintain enough active (or available) threads by dynamically adding, suspending, or resuming internal worker threads, even if some tasks are stalled waiting to join others. However, no such adjustments are guaranteed in the face of blocked I/O or other unmanaged synchronization. The nested &lt;a href=&quot;forkjoinpool.managedblocker&quot;&gt;&lt;code&gt;ForkJoinPool.ManagedBlocker&lt;/code&gt;&lt;/a&gt; interface enables extension of the kinds of synchronization accommodated.</source>
          <target state="translated">個別のプールまたはカスタムプールを必要とするアプリケーションの場合、 &lt;code&gt;ForkJoinPool&lt;/code&gt; は特定のターゲット並列処理レベルで構築できます。デフォルトでは、使用可能なプロセッサーの数と同じです。プールは、一部のタスクが他のタスクへの参加を待機してストールしている場合でも、内部ワーカースレッドを動的に追加、一時停止、または再開することにより、十分なアクティブ（または使用可能な）スレッドを維持しようとします。ただし、そのような調整は、ブロックされたI / Oまたはその他の管理されていない同期に直面しても保証されません。ネストされた&lt;a href=&quot;forkjoinpool.managedblocker&quot;&gt; &lt;code&gt;ForkJoinPool.ManagedBlocker&lt;/code&gt; &lt;/a&gt;インターフェイスにより、対応する同期の種類を拡張できます。</target>
        </trans-unit>
        <trans-unit id="4f91bee41b9f0f38479a69127829658c3bf0fdc4" translate="yes" xml:space="preserve">
          <source>For attribute deletion, the &lt;code&gt;oldValue&lt;/code&gt; is an &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; specifying the attributes that were deleted and the &lt;code&gt;newValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">For attribute deletion, the &lt;code&gt;oldValue&lt;/code&gt; is an &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; specifying the attributes that were deleted and the &lt;code&gt;newValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de4a1a4fc7bcc7759e5169bb4e3695aebd6d72a1" translate="yes" xml:space="preserve">
          <source>For attribute insertion, the &lt;code&gt;oldValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and the &lt;code&gt;newValue&lt;/code&gt; is an &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; specifying the attributes that were inserted.</source>
          <target state="translated">For attribute insertion, the &lt;code&gt;oldValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and the &lt;code&gt;newValue&lt;/code&gt; is an &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; specifying the attributes that were inserted.</target>
        </trans-unit>
        <trans-unit id="7b797d58d23f752dad3874f09960108a8631712e" translate="yes" xml:space="preserve">
          <source>For attribute replacement, the &lt;code&gt;oldValue&lt;/code&gt; is an &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; specifying the old attributes and the &lt;code&gt;newValue&lt;/code&gt; is an &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; specifying the new attributes.</source>
          <target state="translated">For attribute replacement, the &lt;code&gt;oldValue&lt;/code&gt; is an &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; specifying the old attributes and the &lt;code&gt;newValue&lt;/code&gt; is an &lt;code&gt;AccessibleAttributeSequence&lt;/code&gt; specifying the new attributes.</target>
        </trans-unit>
        <trans-unit id="c1ec5918a6d9f50e0141b230359e5a36edff1550" translate="yes" xml:space="preserve">
          <source>For attributes that do not have a value, eg in the html string &lt;code&gt;&amp;lt;foo blah&amp;gt;&lt;/code&gt; the attribute &lt;code&gt;blah&lt;/code&gt; does not have a value, there are two possible values that will be placed in the AttributeSet's value:</source>
          <target state="translated">For attributes that do not have a value, eg in the html string &lt;code&gt;&amp;lt;foo blah&amp;gt;&lt;/code&gt; the attribute &lt;code&gt;blah&lt;/code&gt; does not have a value, there are two possible values that will be placed in the AttributeSet's value:</target>
        </trans-unit>
        <trans-unit id="95ed3f80aff525e72ff7e832911773bbc97584d8" translate="yes" xml:space="preserve">
          <source>For attributes with simple types like &lt;code&gt;String&lt;/code&gt;, the code is the same. But for attributes with complex types, the Standard MBean code requires the client to know the model-specific class &lt;code&gt;MemoryUsage&lt;/code&gt;, while the MXBean code requires no non-standard classes.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; のような単純なタイプの属性の場合、コードは同じです。ただし、複合型の属性の場合、標準MBeanコードではクライアントがモデル固有のクラス &lt;code&gt;MemoryUsage&lt;/code&gt; を認識する必要がありますが、MXBeanコードでは非標準クラスは必要ありません。</target>
        </trans-unit>
        <trans-unit id="c4fab09feb3e54113c9216a1e3ca7fa7048e7079" translate="yes" xml:space="preserve">
          <source>For automatic resolution, the JVM will attempt:</source>
          <target state="translated">自動解決の場合は、JVMが試行します。</target>
        </trans-unit>
        <trans-unit id="d871cfa6c9c9f6c82792af65fcf7d3606b93ca9e" translate="yes" xml:space="preserve">
          <source>For backward compatibility only.</source>
          <target state="translated">下位互換性のみ。</target>
        </trans-unit>
        <trans-unit id="2dbf16ba6cc26b54f2c6512e1d8ce287b0e62968" translate="yes" xml:space="preserve">
          <source>For backward compatibility reasons, this constructor does not make any syntactic checks on the input.</source>
          <target state="translated">下位互換性の理由から、このコンストラクタは入力に対して構文チェックを行いません。</target>
        </trans-unit>
        <trans-unit id="05c30d7bf617454fd8352c370ce9f9f50b74ec49" translate="yes" xml:space="preserve">
          <source>For backwards compatibility with java.awt.Scrollbar.</source>
          <target state="translated">java.awt.Scrollbarとの下位互換性のため。</target>
        </trans-unit>
        <trans-unit id="8a6bf3c30b081b88a860bdb2bd21000efb904e7f" translate="yes" xml:space="preserve">
          <source>For best effect the array of images should be sorted with each image being both wider and taller than the previous image. The base image need not be the first image in the array. No exception will be thrown if the images are not sorted as suggested.</source>
          <target state="translated">最良の効果を得るためには、画像の配列は、それぞれの画像が前の画像よりも幅と高さの両方を持つようにソートされている必要があります。ベース画像は配列の最初の画像である必要はありません。画像の並べ替えが推奨されていない場合は例外は発生しません。</target>
        </trans-unit>
        <trans-unit id="17835bd9b9354b2892a0048837e748fcfe653316" translate="yes" xml:space="preserve">
          <source>For best performance with DirectByteBuffer and other ByteBuffer implementations without a backing array implementers of this interface should override this method.</source>
          <target state="translated">DirectByteBufferや他のByteBuffer実装でバッキング配列を使用せずに最高のパフォーマンスを得るためには、このインターフェイスの実装者はこのメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="073bbe5e1b66df166e9794a39c7b6f884c662cc0" translate="yes" xml:space="preserve">
          <source>For better interoperability, providers generally will not define default matchers so that by default servers will ignore the SNI extension and continue the handshake.</source>
          <target state="translated">相互運用性を向上させるために、プロバイダは一般的にデフォルトのマッチャを定義しないことが多く、デフォルトではサーバはSNI拡張を無視してハンドシェイクを継続します。</target>
        </trans-unit>
        <trans-unit id="cca08cc09febef93d032435d9c4255a6e6e18ba0" translate="yes" xml:space="preserve">
          <source>For both cases, the</source>
          <target state="translated">どちらの場合も</target>
        </trans-unit>
        <trans-unit id="c4d463bbf2fe5789f5217439ba539c52ab170002" translate="yes" xml:space="preserve">
          <source>For both the glob and regex syntaxes, the matching details, such as whether the matching is case sensitive, are implementation-dependent and therefore not specified.</source>
          <target state="translated">glob 構文と regex 構文の両方で、マッチングが大文字小文字を区別するかどうかなどのマッチングの詳細は実装に依存するため、指定されません。</target>
        </trans-unit>
        <trans-unit id="f4f7996d01312f8239e8f1c9e505592ed105c276" translate="yes" xml:space="preserve">
          <source>For byte print data where the doc flavor's MIME type does not include a &lt;code&gt;charset&lt;/code&gt; parameter, the Java Print Service instance assumes the US-ASCII character set by default. This is in accordance with &lt;a href=&quot;http://www.ietf.org/rfc/rfc2046.txt&quot;&gt;RFC 2046&lt;/a&gt;, which says the default character set is US-ASCII. Note that US-ASCII is a subset of UTF-8, so in the future this may be widened if a future RFC endorses UTF-8 as the default in a compatible manner.</source>
          <target state="translated">docフレーバーのMIMEタイプに &lt;code&gt;charset&lt;/code&gt; パラメーターが含まれていないバイト印刷データの場合、Java印刷サービスインスタンスは、デフォルトでUS-ASCII文字セットを想定しています。これは&lt;a href=&quot;http://www.ietf.org/rfc/rfc2046.txt&quot;&gt;RFC 2046&lt;/a&gt;に準拠しており、デフォルトの文字セットはUS-ASCIIです。US-ASCIIはUTF-8のサブセットであるため、将来のRFCが互換性のある方法でデフォルトとしてUTF-8を承認する場合は、これが拡張される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ac581c88bc40b5cf6864e589bc43b4587632243f" translate="yes" xml:space="preserve">
          <source>For case 1, the standard defines 6 External Identifier Entries:</source>
          <target state="translated">ケース1については、規格では6つの外部識別子エントリを定義している。</target>
        </trans-unit>
        <trans-unit id="2158e4905738669493d41aa356ae5a26a31c5fb5" translate="yes" xml:space="preserve">
          <source>For category</source>
          <target state="translated">カテゴリの場合</target>
        </trans-unit>
        <trans-unit id="493fb455f79d6f5a46952719d20ecc6eeb7f5fdc" translate="yes" xml:space="preserve">
          <source>For changes, the indexes in the model correspond exactly to the indexes of items currently displayed in the UI. As a result, it is not really critical if the indexes are not in their exact order. But after multiple inserts or deletes, the items currently in the UI no longer correspond to the items in the model. It is therefore critical to specify the indexes properly for inserts and deletes.</source>
          <target state="translated">変更の場合、モデル内のインデックスは、現在UIに表示されているアイテムのインデックスに正確に対応します。その結果、インデックスが正確な順序でない場合は、あまり重要ではありません。しかし、複数回の挿入や削除の後、現在UIに表示されているアイテムはモデル内のアイテムとはもはや対応していません。そのため、挿入や削除の際にはインデックスを適切に指定することが重要です。</target>
        </trans-unit>
        <trans-unit id="fef748ac030e30703db542a8e771c10aa0800fe8" translate="yes" xml:space="preserve">
          <source>For character, integral, and date/time argument types and the percent and line separator conversions, the precision is not applicable; if a precision is provided, an exception will be thrown.</source>
          <target state="translated">文字、積分、日付/時刻の引数型、パーセンテージと行区切り文字の変換では、精度は適用されません。</target>
        </trans-unit>
        <trans-unit id="d28b3cb820593d18d0522bb723602638bfcf56b2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Chromaticity&lt;/code&gt;, the category is the class &lt;code&gt;Chromaticity&lt;/code&gt; itself.</source>
          <target state="translated">For class &lt;code&gt;Chromaticity&lt;/code&gt; , the category is the class &lt;code&gt;Chromaticity&lt;/code&gt; itself.</target>
        </trans-unit>
        <trans-unit id="d415c9cccb331a919c9a37503f45b493a42ee157" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Chromaticity&lt;/code&gt;, the category name is &lt;code&gt;&quot;chromaticity&quot;&lt;/code&gt;.</source>
          <target state="translated">For class &lt;code&gt;Chromaticity&lt;/code&gt; , the category name is &lt;code&gt;&quot;chromaticity&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a08bb5776b9cfe8be5d8a3756ef83386fadad9a2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;ColorSupported&lt;/code&gt;, the category is class &lt;code&gt;ColorSupported&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;ColorSupported&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;ColorSupported&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="b0ce571c7a663ed5d52b97d295749ba27179815c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;ColorSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;color-supported&quot;&lt;/code&gt;</source>
          <target state="translated">クラス &lt;code&gt;ColorSupported&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;color-supported&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64ae434f2d5d4a3fff36f72140166915fe0f0670" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Compression&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;Compression&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;Compression&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリはクラス &lt;code&gt;Compression&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="3594b927522dc78dd96dca67fce427013a38c26b" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Compression&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;compression&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;Compression&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;compression&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d9227b8c83270facc8092f5849402e0baf4b41db" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Copies&lt;/code&gt;, the category is class &lt;code&gt;Copies&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;Copies&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;Copies&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="ba4b1762cf51ed962a6816d2e83c8a8782ab842a" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Copies&lt;/code&gt;, the category name is &lt;code&gt;&quot;copies&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;Copies&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;copies&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="60808f90322f0f05d6f6603e8f2eb346176b5e18" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;CopiesSupported&lt;/code&gt;, the category is class &lt;code&gt;CopiesSupported&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;CopiesSupported&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;CopiesSupported&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="1132b95eebdf19ac3a9f165b390a05fff19cff48" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;CopiesSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;copies-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CopiesSupported&lt;/code&gt; クラスの場合、カテゴリ名は &lt;code&gt;&quot;copies-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5e43e6051f2371e24c9a3a4bb6f3e6f735df0db3" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtCompleted&lt;/code&gt;, the category is class &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="655d759164ec3857f08b7fa6d47937f94a784819" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtCompleted&lt;/code&gt;, the category name is &lt;code&gt;&quot;date-time-at-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;date-time-at-completed&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="14656bb248336a5257496932a8eb2cd29b5fd33d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtCreation&lt;/code&gt;, the category is class &lt;code&gt;DateTimeAtCreation&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;DateTimeAtCreation&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;DateTimeAtCreation&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="0792d5ec956eac683ab95ef01d19d3b57855f6e9" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtCreation&lt;/code&gt;, the category name is &lt;code&gt;&quot;date-time-at-creation&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;DateTimeAtCreation&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;date-time-at-creation&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="11c8f45cf11b552c8f2c8a016730c3593e230ca4" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtProcessing&lt;/code&gt;, the category is class &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="3bf5ac1ab73b2e92a88287c9eb0414c6a61e482e" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DateTimeAtProcessing&lt;/code&gt;, the category name is &lt;code&gt;&quot;date-time-at-processing&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;date-time-at-processing&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4942219f21a4207883d87d7930b7431fa3b29072" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Destination&lt;/code&gt;, the category is class &lt;code&gt;Destination&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;Destination&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;Destination&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="deda631a067c22149233cccdffe59c6d75c76dac" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Destination&lt;/code&gt;, the category name is &lt;code&gt;&quot;spool-data-destination&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;Destination&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;spool-data-destination&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cf29dceddc85483e8af252e66f736091d61a382c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DialogOwner&lt;/code&gt;, the category is class &lt;code&gt;DialogOwner&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;DialogOwner&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;DialogOwner&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="03a2149e1712fe5a603a98d083af6dc9c9ed17de" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DialogOwner&lt;/code&gt;, the category name is &lt;code&gt;&quot;dialog-owner&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;DialogOwner&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;dialog-owner&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="acf904161ed76860c0994b62c896138bdf5f4973" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DialogTypeSelection&lt;/code&gt; the category is class &lt;code&gt;DialogTypeSelection&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;DialogTypeSelection&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;DialogTypeSelection&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="04fe5a1fb70f631502839130f0cde6c12cc2e684" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DialogTypeSelection&lt;/code&gt; the category name is &lt;code&gt;&quot;dialog-type-selection&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;DialogTypeSelection&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;dialog-type-selection&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f3df1ed3889799f0cc9000cb73a0aa67f508f66c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DocumentName&lt;/code&gt;, the category is class &lt;code&gt;DocumentName&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;DocumentName&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;DocumentName&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="b384f9bcb81973d3bd2377c3c549638f655ae155" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;DocumentName&lt;/code&gt;, the category name is &lt;code&gt;&quot;document-name&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;DocumentName&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;document-name&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="dffb5f5542b491af975e49f95d2d9bf5cabd7af5" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Fidelity&lt;/code&gt; the category is class &lt;code&gt;Fidelity&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;Fidelity&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;Fidelity&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="20969333ff4d78bf1acc7bbc4fe3839c7ceb38ad" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Fidelity&lt;/code&gt; the category name is &lt;code&gt;&quot;ipp-attribute-fidelity&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;Fidelity&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;ipp-attribute-fidelity&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6bcae80a55ba301caeba9a167edbd76f27ec2cfb" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Finishings&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;Finishings&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;Finishings&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリはクラス &lt;code&gt;Finishings&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="f502df05b02df1a6fad24fdec36a0ba73f4b360f" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Finishings&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;finishings&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;Finishings&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;finishings&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9138edb232c7d25c27fb0cbb8514a33c89e0d4fe" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobHoldUntil&lt;/code&gt;, the category is class &lt;code&gt;JobHoldUntil&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobHoldUntil&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;JobHoldUntil&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="59255afcdf5b62648f96e2d898de04879aca04dc" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobHoldUntil&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-hold-until&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobHoldUntil&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;job-hold-until&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b733eec5c34e5514fce56f36f45c32a1b7621e3d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressions&lt;/code&gt;, the category is class &lt;code&gt;JobImpressions&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobImpressions&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;JobImpressions&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="b22164745904bdffe4012dbef01071d3be958f1c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressions&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-impressions&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobImpressions&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;job-impressions&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9dc34015ab6092445747ed527c8de64f3e6d68b5" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressionsCompleted&lt;/code&gt;, the category is class &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="808bd0a53e48fe942deb6fc6a1395db0c8e956e2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressionsCompleted&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-impressions-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobImpressionsCompleted&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;job-impressions-completed&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="58fb14ac702a12646d5a3f94cbd4e196aed09157" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressionsSupported&lt;/code&gt;, the category is class &lt;code&gt;JobImpressionsSupported&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobImpressionsSupported&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;JobImpressionsSupported&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="fc05e148fb4f5d33943f34ab554bb2ebc93fad13" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobImpressionsSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-impressions-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobImpressionsSupported&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;job-impressions-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2b7866559e50650c0ea85dbe42ae498d16cc3590" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctets&lt;/code&gt;, the category is class &lt;code&gt;JobKOctets&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobKOctets&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;JobKOctets&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="816150e3208cca1801c018306f1a3295f575c31d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctets&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-k-octets&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobKOctets&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;job-k-octets&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="efbba27aa0018ded888c154729d5e098d6b69e94" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctetsProcessed&lt;/code&gt;, the category is class &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="213c08dccfdc04e5d7c6e47adf67da8362fea255" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctetsProcessed&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-k-octets-processed&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobKOctetsProcessed&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;job-k-octets-processed&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="db99a1ab1fb34e0c66669d2d3b6ccfb8953374b6" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctetsSupported&lt;/code&gt;, the category is class &lt;code&gt;JobKOctetsSupported&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobKOctetsSupported&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;JobKOctetsSupported&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="645fa31556f47a99fdd4eb2cf90983ea3450ba2c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobKOctetsSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-k-octets-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobKOctetsSupported&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;job-k-octets-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="83160315cc75fd1c9b5dd70f74d4dcc9daa54ce8" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheets&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;JobMediaSheets&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobMediaSheets&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリはクラス &lt;code&gt;JobMediaSheets&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="c99112f52ab7cb24d955b8bcf5130eb8ac030fe9" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheets&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-media-sheets&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobMediaSheets&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-media-sheets&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ecf4fe34811ac21bd597a213357327f2ba6dc9b4" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt;, the category is class &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="b5630d7c9c62f2e8906936d4aebf54f72936caad" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-media-sheets-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobMediaSheetsCompleted&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;job-media-sheets-completed&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cb328c0c04306f5ee9e8e69fdcd5663001bd35fe" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt;, the category is class &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="0981fc2a2845325cf4fbec85e53a83736471f12f" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-media-sheets-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;job-media-sheets-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7a1f965c47d82a5bd4255b3c08bff75ebe3067cb" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMessageFromOperator&lt;/code&gt;, the category is class &lt;code&gt;JobMessageFromOperator&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobMessageFromOperator&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;JobMessageFromOperator&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="15ca4e1a2ef02625373afb3a8ea48784b55afd51" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobMessageFromOperator&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-message-from-operator&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobMessageFromOperator&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;job-message-from-operator&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7014dc1746ed2d70fbe8eb9e241f0fe183904c57" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobName&lt;/code&gt;, the category is class &lt;code&gt;JobName&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobName&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;JobName&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="7709f8dbe2a0c960b7ea245541c77e973c122773" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobName&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-name&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobName&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;job-name&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e7cc545d10342f25edb19988907e1a3f84a83b37" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobOriginatingUserName&lt;/code&gt;, the category is class &lt;code&gt;JobOriginatingUserName&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobOriginatingUserName&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;JobOriginatingUserName&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="c4c8d6a361320e7c77bd8ca0a37c7de1c3e11651" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobOriginatingUserName&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-originating-user-name&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobOriginatingUserName&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;job-originating-user-name&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3ca3d32dcec276c163dc2bb82a9485e442017910" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobPriority&lt;/code&gt;, the category is class &lt;code&gt;JobPriority&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobPriority&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;JobPriority&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="dbd937057ae3d2e3b6da932fe824766faf8ed666" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobPriority&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-priority&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobPriority&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;job-priority&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="337f5fb950aed492131369272a4028563cc4f5c0" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobPrioritySupported&lt;/code&gt;, the category is class &lt;code&gt;JobPrioritySupported&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobPrioritySupported&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;JobPrioritySupported&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="9909364a2e07ee3d588288da910a3ae210eb639a" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobPrioritySupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;job-priority-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobPrioritySupported&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;job-priority-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5ff202a7cdfa19a262a89fc6db7ccd86dbc9467c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobSheets&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;JobSheets&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobSheets&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリはクラス &lt;code&gt;JobSheets&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="f27538ed1ddb73ce5056ae4bbb1c4e1028ec49c3" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobSheets&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-sheets&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobSheets&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-sheets&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8d6e2bf39b838c441356fb9c2f2a6321554ebdb0" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobState&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;JobState&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobState&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリはクラス &lt;code&gt;JobState&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="7948091150cb89dcf8610ba89354a6f66b6195cb" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobState&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-state&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobState&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-state&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="db5aec678b04c5f093d19482dc31ea3599a71d1d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobStateReason&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;JobStateReason&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;JobStateReason&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリはクラス &lt;code&gt;JobStateReason&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="ddabdfadd6db301e8c14cf75c850b9f73495247d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobStateReason&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-state-reason&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;JobStateReason&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-state-reason&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d2d4c85ced765ba9420d8235aaceec753f47d678" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;JobStateReasons&lt;/code&gt;, the category is class JobStateReasons itself.</source>
          <target state="translated">クラス &lt;code&gt;JobStateReasons&lt;/code&gt; の場合、カテゴリはクラスJobStateReasons自体です。</target>
        </trans-unit>
        <trans-unit id="4ce0bcf24cc33aee46a2745b9353c2ec9699d8cc" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Media&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;Media&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;Media&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリはクラス &lt;code&gt;Media&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="8b9dcb85907a52aa8c61ed87a8d7bfaaeeb7a334" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Media&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;media&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;Media&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;media&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6af424ef24c2cc298a45af9f744641ceb796aa4a" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MediaPrintableArea&lt;/code&gt;, the category is class &lt;code&gt;MediaPrintableArea&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;MediaPrintableArea&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;MediaPrintableArea&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="bd581e9be565e27401828a839897dc8509d3ae60" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MediaPrintableArea&lt;/code&gt;, the category name is &lt;code&gt;&quot;media-printable-area&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;MediaPrintableArea&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;media-printable-area&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f14c05573e4e4e0f005253421a5eea87e5fb21e1" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MediaSize&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;MediaSize&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;MediaSize&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリはクラス &lt;code&gt;MediaSize&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="2e54d922083cba58a63325fada3809515733f0b8" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MediaSize&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;media-size&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;MediaSize&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;media-size&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5f7cdf1a7a906e2bad80da5ed77640a6d4efa70a" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリはクラス &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="88543f947d8d2cac51efea0463708890b1a9d7e7" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;multiple-document-handling&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;multiple-document-handling&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1edde13f7f0675ff291dfa8a2be552a3ac2f9cde" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberOfDocuments&lt;/code&gt;, the category is class &lt;code&gt;NumberOfDocuments&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;NumberOfDocuments&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;NumberOfDocuments&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="65358eb4b3a8d71da5c918602b60db56780bf3d8" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberOfDocuments&lt;/code&gt;, the category name is &lt;code&gt;&quot;number-of-documents&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;NumberOfDocuments&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;number-of-documents&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6b5d1dec37ff2c59ff91b25e4d08c2e91cf29825" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberOfInterveningJobs&lt;/code&gt;, the category is class &lt;code&gt;NumberOfInterveningJobs&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;NumberOfInterveningJobs&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;NumberOfInterveningJobs&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="f4d1c75eddb30112fdcc815455d71357baedf59c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberOfInterveningJobs&lt;/code&gt;, the category name is &lt;code&gt;&quot;number-of-intervening-jobs&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;NumberOfInterveningJobs&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;number-of-intervening-jobs&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="16f9f116d9b8c668a9e4dec8ab4f8f9a123efd81" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberUp&lt;/code&gt;, the category is class &lt;code&gt;NumberUp&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;NumberUp&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;NumberUp&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="cdaea036c5015e82aa6f74ab8b8250e5a90467c0" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberUp&lt;/code&gt;, the category name is &lt;code&gt;&quot;number-up&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;NumberUp&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;number-up&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="db3ad675fb50e8ab6bbb56c5e52ef3fd946d6859" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberUpSupported&lt;/code&gt;, the category is class &lt;code&gt;NumberUpSupported&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;NumberUpSupported&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;NumberUpSupported&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="42d8a46fe7900b17b3e05c3875c84620be08542d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;NumberUpSupported&lt;/code&gt;, the category name is &lt;code&gt;&quot;number-up-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;NumberUpSupported&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;number-up-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="094fbf2a4e844c3c2c32bbeee1b82ff5aba57b90" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;OrientationRequested&lt;/code&gt;, the category is class &lt;code&gt;OrientationRequested&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;OrientationRequested&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;OrientationRequested&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="4b62c93b27193c1b3037d8c97009083498563176" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;OrientationRequested&lt;/code&gt;, the category name is &lt;code&gt;&quot;orientation-requested&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;OrientationRequested&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;orientation-requested&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="320df60bfe89f09ecd197b1122d42da77bc5f614" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;OutputDeviceAssigned&lt;/code&gt;, the category is class &lt;code&gt;OutputDeviceAssigned&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;OutputDeviceAssigned&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;OutputDeviceAssigned&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="dc786fb2a1e0624d80b47c9d7b6ed6b170a60708" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;OutputDeviceAssigned&lt;/code&gt;, the category name is &lt;code&gt;&quot;output-device-assigned&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;OutputDeviceAssigned&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;output-device-assigned&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9c14542e34aa6f9011496e8c6ea0a2b80e155e0c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PDLOverrideSupported&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;PDLOverrideSupported&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PDLOverrideSupported&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリはクラス &lt;code&gt;PDLOverrideSupported&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="956aafd90394517a584b8a6306788fdcbbbcfeda" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PDLOverrideSupported&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;pdl-override-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PDLOverrideSupported&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;pdl-override-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="87a47d44264349bbe07ace50838fc97777fdc2ea" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PageRanges&lt;/code&gt;, the category is class &lt;code&gt;PageRanges&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PageRanges&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;PageRanges&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="c8a339d7d653e44875b291f65edc488d2969009f" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PageRanges&lt;/code&gt;, the category name is &lt;code&gt;&quot;page-ranges&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PageRanges&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;page-ranges&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="115eddcdc42a3b60e89212ee76ad7ff19fd0a780" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PagesPerMinute&lt;/code&gt;, the category is class &lt;code&gt;PagesPerMinute&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PagesPerMinute&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;PagesPerMinute&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="7e622c30e20df7b5298a59ab398e0e9e3e446ce6" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PagesPerMinute&lt;/code&gt;, the category name is &lt;code&gt;&quot;pages-per-minute&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PagesPerMinute&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;pages-per-minute&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="28500e2397d2df5af3f078bfca882ca66ab9b4b1" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PagesPerMinuteColor&lt;/code&gt;, the category is class &lt;code&gt;PagesPerMinuteColor&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PagesPerMinuteColor&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;PagesPerMinuteColor&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="9a9e1ccf0ceca5d1bcdb42b35e5b5e0d52a7c419" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PagesPerMinuteColor&lt;/code&gt;, the category name is &lt;code&gt;&quot;pages-per-minute-color&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PagesPerMinuteColor&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;pages-per-minute-color&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="00959ba0ab72d526bab12adfd055ad63926868d6" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PresentationDirection&lt;/code&gt; the category is class &lt;code&gt;PresentationDirection&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PresentationDirection&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;PresentationDirection&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="6f17f1e5db63d85c5d350134c5ca25284b295805" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PresentationDirection&lt;/code&gt; the category name is &lt;code&gt;&quot;presentation-direction&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PresentationDirection&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;presentation-direction&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="981266fd31ec32217d65c3b871e9dcb8aa2889ec" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrintQuality&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;PrintQuality&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PrintQuality&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリはクラス &lt;code&gt;PrintQuality&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="096e5bfdc0150ee1a32d02b01844bf2eb131775f" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrintQuality&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;print-quality&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PrintQuality&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;print-quality&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2ae9b92f6c62741b602403c234fd05021be6c9f5" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterInfo&lt;/code&gt;, the category is class &lt;code&gt;PrinterInfo&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PrinterInfo&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;PrinterInfo&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="ea4467ffc8eb4e3675540439235243624d532f1e" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterInfo&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-info&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PrinterInfo&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;printer-info&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f52ca5f9b7fa4f1e5c6c014121228c991b611178" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt;, the category is class &lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="04639f95e4cba4098a6af5ece8ed55d54554fdc2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-is-accepting-jobs&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PrinterIsAcceptingJobs&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;printer-is-accepting-jobs&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2bc5fbaaf05325545a21fec29284f6bb18d6e299" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterLocation&lt;/code&gt;, the category is class &lt;code&gt;PrinterLocation&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PrinterLocation&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;PrinterLocation&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="b48061d1d9b4f07e8663e29e12fcc992d280f005" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterLocation&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-location&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PrinterLocation&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;printer-location&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f0466ffcaed2552569f4058ad0aed42632a5904c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMakeAndModel&lt;/code&gt;, the category is class &lt;code&gt;PrinterMakeAndModel&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PrinterMakeAndModel&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;PrinterMakeAndModel&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="bb0209d756a3df05f51dd111c7a97ce67755fa9e" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMakeAndModel&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-make-and-model&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PrinterMakeAndModel&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;printer-make-and-model&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fd37715e5a97491707bc78044ed8560f007c8599" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt;, the category is class &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="59e46641735175bb438057d752641acfbdfc932c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-message-from-operator&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;printer-message-from-operator&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e54e601e49b39715d26242ff2e36a5377c3c10d2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMoreInfo&lt;/code&gt;, the category is class &lt;code&gt;PrinterMoreInfo&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PrinterMoreInfo&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;PrinterMoreInfo&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="562b18dc3df2d86018273600219b9224ee65925d" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMoreInfo&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-more-info&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PrinterMoreInfo&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;printer-more-info&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="87e6261a14b558d62e92a7574730af701e2a77b3" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt;, the category is class &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="b128b3f601d31a9fed02bf997242828c9ef17b9c" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-more-info-manufacturer&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;printer-more-info-manufacturer&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d0177a37ebc3971ca01f3ebc2d7b1a343cd066f1" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterName&lt;/code&gt;, the category is class &lt;code&gt;PrinterName&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PrinterName&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;PrinterName&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="e41cc43259baf0e8d291cc8c60f60063e52bc227" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterName&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-name&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PrinterName&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;printer-name&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="93033efa411651c9c82bb05cbf7b51f7667deac1" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterResolution&lt;/code&gt;, the category is class &lt;code&gt;PrinterResolution&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PrinterResolution&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;PrinterResolution&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="5b71ccef80b2709a36fa21680f1058e357266cef" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterResolution&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-resolution&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PrinterResolution&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;printer-resolution&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="83b314e1253f9fcc958220395220b8d24a7d35b1" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterState&lt;/code&gt;, the category is class &lt;code&gt;PrinterState&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PrinterState&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;PrinterState&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="e4a91740778e2ea8ceb6d494e6b727792db09454" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterState&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-state&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PrinterState&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;printer-state&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="10a9debf4fa883f23ed603ace0c7306c7202c6c8" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterStateReason&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;PrinterStateReason&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PrinterStateReason&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリはクラス &lt;code&gt;PrinterStateReason&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="0ba9247d7b0fd0bcd77a9d48b2c567b1b6596386" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterStateReason&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;printer-state-reason&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PrinterStateReason&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-state-reason&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d45c3e696d17f1d57d2e2b9b8399c52298c0d4e2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterStateReasons&lt;/code&gt;, the category is class &lt;code&gt;PrinterStateReasons&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PrinterStateReasons&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;PrinterStateReasons&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="106d22eb7c0114f9308e920977b99bf643ee60c9" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterStateReasons&lt;/code&gt;, the category name is &lt;code&gt;&quot;printer-state-reasons&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PrinterStateReasons&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;printer-state-reasons&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b046c0ce0226444bbf3a129ac27e3b80e8a258ef" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterURI&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;PrinterURI&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;PrinterURI&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリはクラス &lt;code&gt;PrinterURI&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="b6ebd48868937e30a8d5fcf9f1bb9231109f26eb" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;PrinterURI&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;printer-uri&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PrinterURI&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-uri&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="80d86bdcdc0b6f31ba19a1d809650a5cc19cb95f" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;QueuedJobCount&lt;/code&gt;, the category is class &lt;code&gt;QueuedJobCount&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;QueuedJobCount&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;QueuedJobCount&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="b98309c92978d8e0a9ac179a3faa4a096f1e0038" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;QueuedJobCount&lt;/code&gt;, the category name is &lt;code&gt;&quot;queued-job-count&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;QueuedJobCount&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;queued-job-count&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="30f7aa4e2338e2e7148dabafb81ddbbfd93da7fe" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; and any vendor-defined subclasses, the category is class &lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリはクラス &lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="840fc27a3d9b1d6f704a32a1dddc8f95b096d909" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;reference-uri-schemes-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;ReferenceUriSchemesSupported&lt;/code&gt; およびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;reference-uri-schemes-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d1e7f3b059656d4f2ff6b28b20cc87a142bea915" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;RequestingUserName&lt;/code&gt;, the category is class &lt;code&gt;RequestingUserName&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;RequestingUserName&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;RequestingUserName&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="d20f8a71ccf1e045cf6888df43b41358dec22085" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;RequestingUserName&lt;/code&gt;, the category name is &lt;code&gt;&quot;requesting-user-name&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;RequestingUserName&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;requesting-user-name&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b9ba32caeef489048fa4488170877fd65e1e98e0" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Severity&lt;/code&gt;, the category is class &lt;code&gt;Severity&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;Severity&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;Severity&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="cb18adea534a448a6f7f71636e8e1048df54cba2" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Severity&lt;/code&gt;, the category name is &lt;code&gt;&quot;severity&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;Severity&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;severity&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="068893aaa345b0934cf6b04443696125f0f09efb" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;SheetCollate&lt;/code&gt;, the category is class &lt;code&gt;SheetCollate&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;SheetCollate&lt;/code&gt; クラスの場合、カテゴリは &lt;code&gt;SheetCollate&lt;/code&gt; クラス自体です。</target>
        </trans-unit>
        <trans-unit id="35d7e7b93a1099a46fb8580bcedb8d9fa76e2e18" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;SheetCollate&lt;/code&gt;, the category name is &lt;code&gt;&quot;sheet-collate&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SheetCollate&lt;/code&gt; クラスの場合、カテゴリ名は &lt;code&gt;&quot;sheet-collate&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7f4fffb8875c80f5383599a79b7eebdc442a1514" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Sides&lt;/code&gt;, the category is class &lt;code&gt;Sides&lt;/code&gt; itself.</source>
          <target state="translated">クラス &lt;code&gt;Sides&lt;/code&gt; の場合、カテゴリはクラス &lt;code&gt;Sides&lt;/code&gt; 自体です。</target>
        </trans-unit>
        <trans-unit id="bf931919a6c408dd027cc758002facf190de42d6" translate="yes" xml:space="preserve">
          <source>For class &lt;code&gt;Sides&lt;/code&gt;, the category name is &lt;code&gt;&quot;sides&quot;&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;Sides&lt;/code&gt; の場合、カテゴリ名は &lt;code&gt;&quot;sides&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f5648c3e8105f10d35eb80098924d18a37f7091d" translate="yes" xml:space="preserve">
          <source>For class Chromaticity, the category is the class Chromaticity itself.</source>
          <target state="translated">クラスChromaticityの場合、カテゴリはクラスChromaticityそのものとなります。</target>
        </trans-unit>
        <trans-unit id="108c1dc27fdbdded9fcdf4a1834817f795fb00cd" translate="yes" xml:space="preserve">
          <source>For class Chromaticity, the category name is &lt;code&gt;&quot;chromaticity&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;chromaticity&quot;&lt;/code&gt; クラスの場合、カテゴリ名は&quot;色度&quot;です。</target>
        </trans-unit>
        <trans-unit id="2a39f1eef25f18ccbc61b64eb319f52340e01059" translate="yes" xml:space="preserve">
          <source>For class ColorSupported, the category is class ColorSupported itself.</source>
          <target state="translated">ColorSupported クラスの場合、カテゴリは ColorSupported クラスそのものとなります。</target>
        </trans-unit>
        <trans-unit id="ff00115704149d68dd8049554c74a33a4809381f" translate="yes" xml:space="preserve">
          <source>For class ColorSupported, the category name is &lt;code&gt;&quot;color-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">ColorSupportedクラスの場合、カテゴリ名は &lt;code&gt;&quot;color-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6841c351659dffecdee476f9d976c7bad52f4cfb" translate="yes" xml:space="preserve">
          <source>For class Compression and any vendor-defined subclasses, the category is class Compression itself.</source>
          <target state="translated">クラス圧縮とベンダー定義のサブクラスについては、カテゴリはクラス圧縮そのものです。</target>
        </trans-unit>
        <trans-unit id="d729d0565837f2cbe34af3ab43c8185785856634" translate="yes" xml:space="preserve">
          <source>For class Compression and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;compression&quot;&lt;/code&gt;.</source>
          <target state="translated">クラスCompressionおよびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;compression&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="aa23b4a89f45a7c95055fc175887b5e4546faa1f" translate="yes" xml:space="preserve">
          <source>For class Copies, the category is class Copies itself.</source>
          <target state="translated">クラスコピーの場合、カテゴリはクラスコピーそのものとなります。</target>
        </trans-unit>
        <trans-unit id="1c3b5a32d1d86538da8be3869f27f2f3fae01303" translate="yes" xml:space="preserve">
          <source>For class Copies, the category name is &lt;code&gt;&quot;copies&quot;&lt;/code&gt;.</source>
          <target state="translated">Copiesクラスの場合、カテゴリ名は &lt;code&gt;&quot;copies&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e9ad24ebaa9d2bbd6c6810c848b3f07c9d64ad75" translate="yes" xml:space="preserve">
          <source>For class CopiesSupported, the category is class CopiesSupported itself.</source>
          <target state="translated">クラスCopiesSupportedの場合、カテゴリはクラスCopiesSupported自体になります。</target>
        </trans-unit>
        <trans-unit id="e90e4814b2b84639ae07fb1fa1c5de162ce2633e" translate="yes" xml:space="preserve">
          <source>For class CopiesSupported, the category name is &lt;code&gt;&quot;copies-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">CopiesSupportedクラスの場合、カテゴリ名は &lt;code&gt;&quot;copies-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f9fb488767eb1e03e046cc6b9129359083fd7e81" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtCompleted, the category is class DateTimeAtCompleted itself.</source>
          <target state="translated">クラスDateTimeAtCompletedの場合、カテゴリはクラスDateTimeAtCompleted自体になります。</target>
        </trans-unit>
        <trans-unit id="0aa0c50cf51c142b1338e3884c76c0f4308158cf" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtCompleted, the category name is &lt;code&gt;&quot;date-time-at-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">クラスDateTimeAtCompletedの場合、カテゴリ名は &lt;code&gt;&quot;date-time-at-completed&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d72e63612ff9b0b9e0c5df81b2fbfa5244b420a8" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtCreation, the category is class DateTimeAtCreation itself.</source>
          <target state="translated">クラスDateTimeAtCreationの場合、カテゴリはクラスDateTimeAtCreation自体になります。</target>
        </trans-unit>
        <trans-unit id="9ffdc086db7b7f83c7202ddde482fa984134a1bf" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtCreation, the category name is &lt;code&gt;&quot;date-time-at-creation&quot;&lt;/code&gt;.</source>
          <target state="translated">クラスDateTimeAtCreationの場合、カテゴリ名は &lt;code&gt;&quot;date-time-at-creation&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9bb8163507239d55563a9971e7bef6dcbdf2740d" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtProcessing, the category is class DateTimeAtProcessing itself.</source>
          <target state="translated">クラスDateTimeAtProcessingの場合、カテゴリはクラスDateTimeAtProcessing自体になります。</target>
        </trans-unit>
        <trans-unit id="2df77ccb07ad51751cd6f1ef440abc4db57d994c" translate="yes" xml:space="preserve">
          <source>For class DateTimeAtProcessing, the category name is &lt;code&gt;&quot;date-time-at-processing&quot;&lt;/code&gt;.</source>
          <target state="translated">クラスDateTimeAtProcessingの場合、カテゴリ名は &lt;code&gt;&quot;date-time-at-processing&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fe6e42ec6c63048fdce164f7d6643bdc40fe87bb" translate="yes" xml:space="preserve">
          <source>For class Destination, the category is class Destination itself.</source>
          <target state="translated">クラスデスティネーションの場合、カテゴリーはクラスデスティネーションそのものとなります。</target>
        </trans-unit>
        <trans-unit id="d0d9faf2ddfcd290fafc07e72901de35be14f36d" translate="yes" xml:space="preserve">
          <source>For class Destination, the category name is &lt;code&gt;&quot;spool-data-destination&quot;&lt;/code&gt;.</source>
          <target state="translated">Destinationクラスの場合、カテゴリ名は &lt;code&gt;&quot;spool-data-destination&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="01ee9f15d74d9403c6f26efa52fcb02871b59554" translate="yes" xml:space="preserve">
          <source>For class DialogTypeSelection the category is class DialogTypeSelection itself.</source>
          <target state="translated">クラスDialogTypeSelectionの場合、カテゴリはクラスDialogTypeSelectionそのものです。</target>
        </trans-unit>
        <trans-unit id="642fa2af2eb683de8bcd81a8b9b443fedab0ba84" translate="yes" xml:space="preserve">
          <source>For class DialogTypeSelection the category name is &lt;code&gt;&quot;dialog-type-selection&quot;&lt;/code&gt;.</source>
          <target state="translated">クラスDialogTypeSelectionの場合、カテゴリ名は &lt;code&gt;&quot;dialog-type-selection&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="60f14abbf1de6231274552162be52f779347f3ce" translate="yes" xml:space="preserve">
          <source>For class DocumentName, the category is class DocumentName itself.</source>
          <target state="translated">クラスDocumentNameの場合、カテゴリはクラスDocumentName自体になります。</target>
        </trans-unit>
        <trans-unit id="830ced725afc984767a2835c456e086919af3378" translate="yes" xml:space="preserve">
          <source>For class DocumentName, the category name is &lt;code&gt;&quot;document-name&quot;&lt;/code&gt;.</source>
          <target state="translated">DocumentNameクラスの場合、カテゴリ名は &lt;code&gt;&quot;document-name&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="caed1e6577cea6150d76ee55b8099ae194884ffd" translate="yes" xml:space="preserve">
          <source>For class Fidelity the category is class Fidelity itself.</source>
          <target state="translated">クラス・フィデリティについては、カテゴリーはクラス・フィデリティそのものとなります。</target>
        </trans-unit>
        <trans-unit id="72b5ca593603250a92503220ff5235518e303788" translate="yes" xml:space="preserve">
          <source>For class Fidelity the category name is &lt;code&gt;&quot;ipp-attribute-fidelity&quot;&lt;/code&gt;.</source>
          <target state="translated">クラスFidelityの場合、カテゴリ名は &lt;code&gt;&quot;ipp-attribute-fidelity&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e68a4f3ea42523f4fb43117aeb9975dc9a43c21c" translate="yes" xml:space="preserve">
          <source>For class Finishings and any vendor-defined subclasses, the category is class Finishings itself.</source>
          <target state="translated">クラス・フィニッシングと任意のベンダ定義のサブクラスについては、カテゴリはクラス・フィニッシングそのものです。</target>
        </trans-unit>
        <trans-unit id="072c553018aa7a054a2c949c1715c7c4ebc299a5" translate="yes" xml:space="preserve">
          <source>For class Finishings and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;finishings&quot;&lt;/code&gt;.</source>
          <target state="translated">クラスFinishingsおよびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;finishings&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c1f72f98ea9f48ec133fcad772e4204ccb5d8347" translate="yes" xml:space="preserve">
          <source>For class JobHoldUntil, the category is class JobHoldUntil itself.</source>
          <target state="translated">クラスJobHoldUntilの場合、カテゴリはクラスJobHoldUntil自体になります。</target>
        </trans-unit>
        <trans-unit id="57fc18fed0e561d81a33486ad4422d45550bdad9" translate="yes" xml:space="preserve">
          <source>For class JobHoldUntil, the category name is &lt;code&gt;&quot;job-hold-until&quot;&lt;/code&gt;.</source>
          <target state="translated">JobHoldUntilクラスの場合、カテゴリー名は &lt;code&gt;&quot;job-hold-until&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f87388d84c0cd1cd502b8c68cb111b2c9b91ed2a" translate="yes" xml:space="preserve">
          <source>For class JobImpressions, the category is class JobImpressions itself.</source>
          <target state="translated">クラスJobImpressionsの場合、カテゴリはクラスJobImpressionsそのものです。</target>
        </trans-unit>
        <trans-unit id="a96a56d6666c4e5440f41152ab488f26f2b42211" translate="yes" xml:space="preserve">
          <source>For class JobImpressions, the category name is &lt;code&gt;&quot;job-impressions&quot;&lt;/code&gt;.</source>
          <target state="translated">JobImpressionsクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-impressions&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3dab7fc1f5a61485f3d310a640183120e2ad5dce" translate="yes" xml:space="preserve">
          <source>For class JobImpressionsCompleted, the category is class JobImpressionsCompleted itself.</source>
          <target state="translated">class JobImpressionsCompletedの場合は、class JobImpressionsCompleted自体がカテゴリとなります。</target>
        </trans-unit>
        <trans-unit id="5bb94f9b9e7eb12e2fbdb0554263847e34fd6c7b" translate="yes" xml:space="preserve">
          <source>For class JobImpressionsCompleted, the category name is &lt;code&gt;&quot;job-impressions-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">JobImpressionsCompletedクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-impressions-completed&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2029d43e377c9cd467e1c54f3a31db20467c2f54" translate="yes" xml:space="preserve">
          <source>For class JobImpressionsSupported, the category is class JobImpressionsSupported itself.</source>
          <target state="translated">JobImpressionsSupportedクラスの場合、カテゴリはクラスJobImpressionsSupported自体になります。</target>
        </trans-unit>
        <trans-unit id="1bdb26f5642486fcdce0f7b936a35850818cc5cf" translate="yes" xml:space="preserve">
          <source>For class JobImpressionsSupported, the category name is &lt;code&gt;&quot;job-impressions-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">JobImpressionsSupportedクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-impressions-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8d250895f59ad6e992d0e5d73e1347e9543dea90" translate="yes" xml:space="preserve">
          <source>For class JobKOctets, the category is class JobKOctets itself.</source>
          <target state="translated">クラスJobKOctetsの場合、カテゴリはクラスJobKOctetsそのものとなります。</target>
        </trans-unit>
        <trans-unit id="eeccbba1a19328125b0a65d5e7ac7661f4a7691d" translate="yes" xml:space="preserve">
          <source>For class JobKOctets, the category name is &lt;code&gt;&quot;job-k-octets&quot;&lt;/code&gt;.</source>
          <target state="translated">JobKOctetsクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-k-octets&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5e36add3298154dae97ea9d7edb3d8f9ed151824" translate="yes" xml:space="preserve">
          <source>For class JobKOctetsProcessed, the category is class JobKOctetsProcessed itself.</source>
          <target state="translated">クラスJobKOctetsProcessedの場合、カテゴリはクラスJobKOctetsProcessedそのものとなります。</target>
        </trans-unit>
        <trans-unit id="c7217f2aeb7187b638c8fe9275ce38671a0c54d4" translate="yes" xml:space="preserve">
          <source>For class JobKOctetsProcessed, the category name is &lt;code&gt;&quot;job-k-octets-processed&quot;&lt;/code&gt;.</source>
          <target state="translated">JobKOctetsProcessedクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-k-octets-processed&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="277761b4bb7736fe7d84fc442aa2477e16cadd2e" translate="yes" xml:space="preserve">
          <source>For class JobKOctetsSupported, the category is class JobKOctetsSupported itself.</source>
          <target state="translated">JobKOctetsSupportedクラスの場合、カテゴリはJobKOctetsSupportedクラスそのものとなります。</target>
        </trans-unit>
        <trans-unit id="81f1df5ec312d750080964f5858176ea6699e751" translate="yes" xml:space="preserve">
          <source>For class JobKOctetsSupported, the category name is &lt;code&gt;&quot;job-k-octets-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">JobKOctetsSupportedクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-k-octets-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="83879756c441ec6aa9ec68c5376e07ab19d87175" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheets and any vendor-defined subclasses, the category is class JobMediaSheets itself.</source>
          <target state="translated">クラスJobMediaSheetsとベンダー定義のサブクラスの場合、カテゴリはクラスJobMediaSheetsそのものとなります。</target>
        </trans-unit>
        <trans-unit id="839ddc60e912395e6ec39e66f1d9e8be69ebe9b3" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheets and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-media-sheets&quot;&lt;/code&gt;.</source>
          <target state="translated">JobMediaSheetsクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-media-sheets&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="72031f84675b63fbd5c5611982a0745c20e13834" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheetsCompleted, the category is class JobMediaSheetsCompleted itself.</source>
          <target state="translated">class JobMediaSheetsCompletedの場合、カテゴリはclass JobMediaSheetsCompletedそのものとなります。</target>
        </trans-unit>
        <trans-unit id="d31e00461dae435c9e5673020b363aada5bdb12f" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheetsCompleted, the category name is &lt;code&gt;&quot;job-media-sheets-completed&quot;&lt;/code&gt;.</source>
          <target state="translated">JobMediaSheetsCompletedクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-media-sheets-completed&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2dda8ee7e3c54ebc779b8ce4b0974e5dcf20c93f" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheetsSupported, the category is class JobMediaSheetsSupported itself.</source>
          <target state="translated">JobMediaSheetsSupportedクラスの場合は、カテゴリはJobMediaSheetsSupportedクラスそのものとなります。</target>
        </trans-unit>
        <trans-unit id="3c7de85d18c607ebfca61b06434fe4ca9f17d56a" translate="yes" xml:space="preserve">
          <source>For class JobMediaSheetsSupported, the category name is &lt;code&gt;&quot;job-media-sheets-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">JobMediaSheetsSupportedクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-media-sheets-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b136e5a2b0e75b390435d00967defe1aadb4fcce" translate="yes" xml:space="preserve">
          <source>For class JobMessageFromOperator, the category is class JobMessageFromOperator itself.</source>
          <target state="translated">クラスJobMessageFromOperatorの場合、カテゴリはクラスJobMessageFromOperatorそのものです。</target>
        </trans-unit>
        <trans-unit id="dfd0912c1635fd736d9bd773edea20b754970dab" translate="yes" xml:space="preserve">
          <source>For class JobMessageFromOperator, the category name is &lt;code&gt;&quot;job-message-from-operator&quot;&lt;/code&gt;.</source>
          <target state="translated">JobMessageFromOperatorクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-message-from-operator&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2b26e19c92d09f2a21f892100a4ce3ba1afe7195" translate="yes" xml:space="preserve">
          <source>For class JobName, the category is class JobName itself.</source>
          <target state="translated">クラスJobNameの場合、カテゴリはクラスJobNameそのものとなります。</target>
        </trans-unit>
        <trans-unit id="1ff6b5618e3eea85578b89c260a2d70593970b46" translate="yes" xml:space="preserve">
          <source>For class JobName, the category name is &lt;code&gt;&quot;job-name&quot;&lt;/code&gt;.</source>
          <target state="translated">JobNameクラスの場合、カテゴリー名は &lt;code&gt;&quot;job-name&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9d136061f06a6eb64e17fd79f01a59636540321e" translate="yes" xml:space="preserve">
          <source>For class JobOriginatingUserName, the category is class JobOriginatingUserName itself.</source>
          <target state="translated">JobOriginatingUserNameクラスの場合、カテゴリはクラスJOBOriginatingUserName自体になります。</target>
        </trans-unit>
        <trans-unit id="ae8079d08471672e9fcf735403adad4f4f24c6c7" translate="yes" xml:space="preserve">
          <source>For class JobOriginatingUserName, the category name is &lt;code&gt;&quot;job-originating-user-name&quot;&lt;/code&gt;.</source>
          <target state="translated">JobOriginatingUserNameクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-originating-user-name&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a05f171ac5f709f2cd7d09a32b6a05afc1f6907c" translate="yes" xml:space="preserve">
          <source>For class JobPriority, the category is class JobPriority itself.</source>
          <target state="translated">class JobPriorityの場合、カテゴリはclass JobPriorityそのものです。</target>
        </trans-unit>
        <trans-unit id="8777ec4ed750ff80f83b39defbe79e536f44eb5f" translate="yes" xml:space="preserve">
          <source>For class JobPriority, the category name is &lt;code&gt;&quot;job-priority&quot;&lt;/code&gt;.</source>
          <target state="translated">JobPriorityクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-priority&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ce89f591c0067b7a68b741b72cc42339698a78d7" translate="yes" xml:space="preserve">
          <source>For class JobPrioritySupported, the category is class JobPrioritySupported itself.</source>
          <target state="translated">class JobPrioritySupportedの場合、カテゴリはclass JobPrioritySupportedそのものとなります。</target>
        </trans-unit>
        <trans-unit id="654e506ea040f608f4dc353c2d822c054cc8dceb" translate="yes" xml:space="preserve">
          <source>For class JobPrioritySupported, the category name is &lt;code&gt;&quot;job-priority-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">JobPrioritySupportedクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-priority-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="08635b4d2c31b178cab0dff6331454a2ce0e3829" translate="yes" xml:space="preserve">
          <source>For class JobSheets and any vendor-defined subclasses, the category is class JobSheets itself.</source>
          <target state="translated">クラスJobSheetsと任意のベンダ定義のサブクラスについては、カテゴリはクラスJobSheetsそのものです。</target>
        </trans-unit>
        <trans-unit id="71446d47b48784e7ff553bd8da1658389b5d2f23" translate="yes" xml:space="preserve">
          <source>For class JobSheets and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-sheets&quot;&lt;/code&gt;.</source>
          <target state="translated">JobSheetsクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-sheets&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a8170f7f0ffca7b963fce46f1c79886b100ded91" translate="yes" xml:space="preserve">
          <source>For class JobState and any vendor-defined subclasses, the category is class JobState itself.</source>
          <target state="translated">クラス JobState と任意のベンダ定義のサブクラスの場合、カテゴリはクラス JobState 自体となります。</target>
        </trans-unit>
        <trans-unit id="de1cfc9b5e2eca0387a6cbf6b9671b5e0909f312" translate="yes" xml:space="preserve">
          <source>For class JobState and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-state&quot;&lt;/code&gt;.</source>
          <target state="translated">JobStateクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-state&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="653376caf1a3418e9063f33ff2fe20a57da04c8f" translate="yes" xml:space="preserve">
          <source>For class JobStateReason and any vendor-defined subclasses, the category is class JobStateReason itself.</source>
          <target state="translated">クラス JobStateReason と任意のベンダ定義のサブクラスの場合、カテゴリはクラス JobStateReason 自体となります。</target>
        </trans-unit>
        <trans-unit id="b3ddae2ef6f7432cf73b5be9105ad4ecf53afcd2" translate="yes" xml:space="preserve">
          <source>For class JobStateReason and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-state-reason&quot;&lt;/code&gt;.</source>
          <target state="translated">JobStateReasonクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-state-reason&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="dfbdbe2790acae32d23312b21eddd8d7e025518d" translate="yes" xml:space="preserve">
          <source>For class JobStateReasons, the category is class JobStateReasons itself.</source>
          <target state="translated">class JobStateReasonsの場合、カテゴリはclass JobStateReasonsそのものです。</target>
        </trans-unit>
        <trans-unit id="23baf7c64ea9b95a67a83036824005151d4ee4ad" translate="yes" xml:space="preserve">
          <source>For class JobStateReasons, the category name is &lt;code&gt;&quot;job-state-reasons&quot;&lt;/code&gt;.</source>
          <target state="translated">JobStateReasonsクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-state-reasons&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="76e305ec9df07083f4a03bce58c310f04a069567" translate="yes" xml:space="preserve">
          <source>For class Media and any vendor-defined subclasses, the category is class Media itself.</source>
          <target state="translated">クラス・メディアおよびベンダー定義のサブクラスの場合、カテゴリはクラス・メディアそのものです。</target>
        </trans-unit>
        <trans-unit id="63aac2809d48a40719da92a486aca03ea048211a" translate="yes" xml:space="preserve">
          <source>For class Media and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;media&quot;&lt;/code&gt;.</source>
          <target state="translated">Mediaクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;media&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1eebe8d13bec04bb83fd3cdedb183d88549f7716" translate="yes" xml:space="preserve">
          <source>For class MediaPrintableArea, the category is class MediaPrintableArea itself.</source>
          <target state="translated">クラスMediaPrintableAreaの場合、カテゴリはクラスMediaPrintableAreaそのものです。</target>
        </trans-unit>
        <trans-unit id="6f3383a496f3ced46a73b82b0d97aa06701b296e" translate="yes" xml:space="preserve">
          <source>For class MediaPrintableArea, the category name is &lt;code&gt;&quot;media-printable-area&quot;&lt;/code&gt;.</source>
          <target state="translated">MediaPrintableAreaクラスの場合、カテゴリ名は &lt;code&gt;&quot;media-printable-area&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b16bb9bb31c348614af9361198929e0e4c9e3d75" translate="yes" xml:space="preserve">
          <source>For class MediaSize and any vendor-defined subclasses, the category is class MediaSize itself.</source>
          <target state="translated">クラス MediaSize およびベンダー定義のサブクラスの場合、カテゴリはクラス MediaSize 自体となります。</target>
        </trans-unit>
        <trans-unit id="dcaa0b98dfb736343dba9f90ceee28a35402fb0b" translate="yes" xml:space="preserve">
          <source>For class MediaSize and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;media-size&quot;&lt;/code&gt;.</source>
          <target state="translated">MediaSizeクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;media-size&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c94b84051032fff8f407be040afd8b908718b0e5" translate="yes" xml:space="preserve">
          <source>For class MultipleDocumentHandling and any vendor-defined subclasses, the category is class MultipleDocumentHandling itself.</source>
          <target state="translated">クラスMultipleDocumentHandlingと任意のベンダ定義のサブクラスの場合、カテゴリはクラスMultipleDocumentHandling自体です。</target>
        </trans-unit>
        <trans-unit id="5a15c896684c3bdae21a952fc314bc83e432b65a" translate="yes" xml:space="preserve">
          <source>For class MultipleDocumentHandling and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;multiple-document-handling&quot;&lt;/code&gt;.</source>
          <target state="translated">MultipleDocumentHandlingクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;multiple-document-handling&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9d80aca402535b79315974f7262cb5caf36ece03" translate="yes" xml:space="preserve">
          <source>For class NumberOfDocuments, the category is class NumberOfDocuments itself.</source>
          <target state="translated">クラスNumberOfDocumentsの場合、カテゴリはクラスNumberOfDocumentsそのものとなります。</target>
        </trans-unit>
        <trans-unit id="7a4f4357a00f01b7773082cf51d10e445b0c684e" translate="yes" xml:space="preserve">
          <source>For class NumberOfDocuments, the category name is &lt;code&gt;&quot;number-of-documents&quot;&lt;/code&gt;.</source>
          <target state="translated">NumberOfDocumentsクラスの場合、カテゴリ名は &lt;code&gt;&quot;number-of-documents&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a15143dc5c9eaa5cfb57170f82d6c2c78842dc82" translate="yes" xml:space="preserve">
          <source>For class NumberOfInterveningJobs, the category is class NumberOfInterveningJobs itself.</source>
          <target state="translated">クラスNumberOfInterveningJobsの場合、カテゴリはクラスNumberOfInterveningJobsそのものとなります。</target>
        </trans-unit>
        <trans-unit id="4f64d68c238a1069789d44fdc2461b1b3abfd3f3" translate="yes" xml:space="preserve">
          <source>For class NumberOfInterveningJobs, the category name is &lt;code&gt;&quot;number-of-intervening-jobs&quot;&lt;/code&gt;.</source>
          <target state="translated">NumberOfInterveningJobsクラスの場合、カテゴリ名は &lt;code&gt;&quot;number-of-intervening-jobs&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bbebe8d07517db48f6ceb60ef3eda69a123a4ca6" translate="yes" xml:space="preserve">
          <source>For class NumberUp, the category is class NumberUp itself.</source>
          <target state="translated">クラスNumberUpの場合、カテゴリはクラスNumberUpそのものです。</target>
        </trans-unit>
        <trans-unit id="679d46d1327714f3b8a4ffe2ac56338f3140bd2d" translate="yes" xml:space="preserve">
          <source>For class NumberUp, the category name is &lt;code&gt;&quot;number-up&quot;&lt;/code&gt;.</source>
          <target state="translated">NumberUpクラスの場合、カテゴリ名は &lt;code&gt;&quot;number-up&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="43898aa6f875f8e6510fb0adc64cbe5396f5d910" translate="yes" xml:space="preserve">
          <source>For class NumberUpSupported, the category is class NumberUpSupported itself.</source>
          <target state="translated">NumberUpSupportedクラスの場合、カテゴリはNumberUpSupportedクラスそのものとなります。</target>
        </trans-unit>
        <trans-unit id="84efd2894a327c192bb5f0bdcaa0b6f9b76bb8f9" translate="yes" xml:space="preserve">
          <source>For class NumberUpSupported, the category name is &lt;code&gt;&quot;number-up-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">NumberUpSupportedクラスの場合、カテゴリ名は &lt;code&gt;&quot;number-up-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="565e4c6e7614396692edb4af2f709c35214286d4" translate="yes" xml:space="preserve">
          <source>For class OrientationRequested, the category is class OrientationRequested itself.</source>
          <target state="translated">クラスOrientationRequestedの場合、カテゴリはクラスOrientationRequestedそのものとなります。</target>
        </trans-unit>
        <trans-unit id="52fcaeb0ba5aa93429c5861479086b2d3a01eafd" translate="yes" xml:space="preserve">
          <source>For class OrientationRequested, the category name is &lt;code&gt;&quot;orientation-requested&quot;&lt;/code&gt;.</source>
          <target state="translated">OrientationRequestedクラスの場合、カテゴリ名は &lt;code&gt;&quot;orientation-requested&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="abde76b383658ea382bc59eff2fb0367dfc991de" translate="yes" xml:space="preserve">
          <source>For class OutputDeviceAssigned, the category is class OutputDeviceAssigned itself.</source>
          <target state="translated">クラスOutputDeviceAssignedの場合、カテゴリはクラスOutputDeviceAssigned自体になります。</target>
        </trans-unit>
        <trans-unit id="8c848d24bcfaa87be7b3eaaafab61333297d4de5" translate="yes" xml:space="preserve">
          <source>For class OutputDeviceAssigned, the category name is &lt;code&gt;&quot;output-device-assigned&quot;&lt;/code&gt;.</source>
          <target state="translated">クラスOutputDeviceAssignedの場合、カテゴリ名は &lt;code&gt;&quot;output-device-assigned&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b50e8daad8ee24c6bb2f8f8f02fb8d2ae166cd84" translate="yes" xml:space="preserve">
          <source>For class PDLOverrideSupported and any vendor-defined subclasses, the category is class PDLOverrideSupported itself.</source>
          <target state="translated">クラス PDLOverrideSupported および任意のベンダ定義のサブクラスの場合、カテゴリはクラス PDLOverrideSupported 自体となります。</target>
        </trans-unit>
        <trans-unit id="1862855f9347a76978b17a738e7c5bbb33f59cc0" translate="yes" xml:space="preserve">
          <source>For class PDLOverrideSupported and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;pdl-override-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">クラスPDLOverrideSupportedおよびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;pdl-override-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ce220ceb7741aa95d88a2fe3bc6c7db7d98e7d95" translate="yes" xml:space="preserve">
          <source>For class PageRanges, the category is class PageRanges itself.</source>
          <target state="translated">クラスPageRangesの場合、カテゴリはクラスPageRangesそのものです。</target>
        </trans-unit>
        <trans-unit id="36e6d05319c67769fc3db5bb0ecdbb4b60392f46" translate="yes" xml:space="preserve">
          <source>For class PageRanges, the category name is &lt;code&gt;&quot;page-ranges&quot;&lt;/code&gt;.</source>
          <target state="translated">PageRangesクラスの場合、カテゴリ名は &lt;code&gt;&quot;page-ranges&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c7f01eada40934f6714620dd2a2b554f377c9308" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinute, the category is class PagesPerMinute itself.</source>
          <target state="translated">クラスPagesPerMinuteの場合、カテゴリはクラスPagesPerMinuteそのものとなります。</target>
        </trans-unit>
        <trans-unit id="e14ff0028ffef5fede72d51eb82a6235e41c4323" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinute, the category name is &lt;code&gt;&quot;pages-per-minute&quot;&lt;/code&gt;.</source>
          <target state="translated">PagesPerMinuteクラスの場合、カテゴリ名は &lt;code&gt;&quot;pages-per-minute&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d522346d833c539376b5f07c17f5f72b79dd7f0f" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinuteColor, the category is class PagesPerMinuteColor itself.</source>
          <target state="translated">クラスPagesPerMinuteColorの場合、カテゴリはクラスPagesPerMinuteColorそのものとなります。</target>
        </trans-unit>
        <trans-unit id="7c660c99e02d7c212af35cc7873730d7af2cf120" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinuteColor, the category name is &lt;code&gt;&quot;pages-per-minute-color&quot;&lt;/code&gt;.</source>
          <target state="translated">PagesPerMinuteColorクラスの場合、カテゴリ名は &lt;code&gt;&quot;pages-per-minute-color&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8aaee8c396105cb02829f6cbc1aea2b4ca171041" translate="yes" xml:space="preserve">
          <source>For class PresentationDirection the category is class PresentationDirection itself.</source>
          <target state="translated">クラスPresentationDirectionの場合、カテゴリはクラスPresentationDirection自身です。</target>
        </trans-unit>
        <trans-unit id="09e0c06b664549dedff4cfd3e2b0109f7061132a" translate="yes" xml:space="preserve">
          <source>For class PresentationDirection the category name is &lt;code&gt;&quot;presentation-direction&quot;&lt;/code&gt;.</source>
          <target state="translated">クラスPresentationDirectionの場合、カテゴリ名は &lt;code&gt;&quot;presentation-direction&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="73ab431070b7902f07a4e2eb111942a3d3c89260" translate="yes" xml:space="preserve">
          <source>For class PrintQuality and any vendor-defined subclasses, the category is class PrintQuality itself.</source>
          <target state="translated">クラスPrintQualityおよびベンダー定義のサブクラスについては、カテゴリはクラスPrintQualityそのものとなります。</target>
        </trans-unit>
        <trans-unit id="ad6627e73fffda4d8a63d01e1314eb76d67d38ee" translate="yes" xml:space="preserve">
          <source>For class PrintQuality and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;print-quality&quot;&lt;/code&gt;.</source>
          <target state="translated">PrintQualityクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;print-quality&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fb6f0cc027e88992fdedf39e07582b1430266e3c" translate="yes" xml:space="preserve">
          <source>For class PrinterInfo, the category is class PrinterInfo itself.</source>
          <target state="translated">クラスPrinterInfoの場合、カテゴリはクラスPrinterInfoそのものです。</target>
        </trans-unit>
        <trans-unit id="25b6527a1b2b670e8d591c05cce9bc5e9d9447a2" translate="yes" xml:space="preserve">
          <source>For class PrinterInfo, the category name is &lt;code&gt;&quot;printer-info&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterInfoクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-info&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="06c9256086f531efae796e8d8690666052354d1b" translate="yes" xml:space="preserve">
          <source>For class PrinterIsAcceptingJobs, the category is class PrinterIsAcceptingJobs itself.</source>
          <target state="translated">クラスPrinterIsAcceptingJobsについては、カテゴリはクラスPrinterIsAcceptingJobsそのものです。</target>
        </trans-unit>
        <trans-unit id="3b444196d4a92442d1815635095756fb443b3c8b" translate="yes" xml:space="preserve">
          <source>For class PrinterIsAcceptingJobs, the category name is &lt;code&gt;&quot;printer-is-accepting-jobs&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterIsAcceptingJobsクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-is-accepting-jobs&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f689abe18da853c0516008897c2e59452d205a11" translate="yes" xml:space="preserve">
          <source>For class PrinterLocation, the category is class PrinterLocation itself.</source>
          <target state="translated">クラスPrinterLocationの場合、カテゴリはクラスPrinterLocationそのものです。</target>
        </trans-unit>
        <trans-unit id="cd2fea8becd5eb8189e9b5472dff8986755fda80" translate="yes" xml:space="preserve">
          <source>For class PrinterLocation, the category name is &lt;code&gt;&quot;printer-location&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterLocationクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-location&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4c1dd9a747520f8dbedcf4f13a83a0e4af94e2ba" translate="yes" xml:space="preserve">
          <source>For class PrinterMakeAndModel, the category is class PrinterMakeAndModel itself.</source>
          <target state="translated">クラスPrinterMakeAndModelの場合、カテゴリはクラスPrinterMakeAndModelそのものとなります。</target>
        </trans-unit>
        <trans-unit id="ba4fae7b3cb6c2828fcdbaf1716fd8c108dc1d52" translate="yes" xml:space="preserve">
          <source>For class PrinterMakeAndModel, the category name is &lt;code&gt;&quot;printer-make-and-model&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterMakeAndModelクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-make-and-model&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="25e865fa5a526858929f1ec74db4ddabb2559cfd" translate="yes" xml:space="preserve">
          <source>For class PrinterMessageFromOperator, the category is class PrinterMessageFromOperator itself.</source>
          <target state="translated">クラスPrinterMessageFromOperatorの場合、カテゴリはクラスPrinterMessageFromOperatorそのものです。</target>
        </trans-unit>
        <trans-unit id="63bdaad11dc64623e0b9ad73640ced1a04cd8190" translate="yes" xml:space="preserve">
          <source>For class PrinterMessageFromOperator, the category name is &lt;code&gt;&quot;printer-message-from-operator&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterMessageFromOperatorクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-message-from-operator&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fc38988d14d54c070df510381432956fb04be2b5" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfo, the category is class PrinterMoreInfo itself.</source>
          <target state="translated">クラスPrinterMoreInfoの場合、カテゴリはクラスPrinterMoreInfoそのものです。</target>
        </trans-unit>
        <trans-unit id="07993e08f2f2ff8aca46598c2c607bf8b4f7551b" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfo, the category name is &lt;code&gt;&quot;printer-more-info&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterMoreInfoクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-more-info&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="241cfde9db629abbf16d37ecf1ba0b5701fa39bb" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfoManufacturer, the category is class PrinterMoreInfoManufacturer itself.</source>
          <target state="translated">クラスPrinterMoreInfoManufacturerの場合、カテゴリはクラスPrinterMoreInfoManufacturerそのものです。</target>
        </trans-unit>
        <trans-unit id="48561e0264312aaad1e530ded45d0c142643d71d" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfoManufacturer, the category name is &lt;code&gt;&quot;printer-more-info-manufacturer&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterMoreInfoManufacturerクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-more-info-manufacturer&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3d09189884a718425f1dd44675f4544e703b2dc4" translate="yes" xml:space="preserve">
          <source>For class PrinterName, the category is class PrinterName itself.</source>
          <target state="translated">クラスPrinterNameの場合、カテゴリはクラスPrinterNameそのものです。</target>
        </trans-unit>
        <trans-unit id="f981b8db2489e51ff8a0c52f0213cad136f70214" translate="yes" xml:space="preserve">
          <source>For class PrinterName, the category name is &lt;code&gt;&quot;printer-name&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterNameクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-name&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b653a81213f2676d2a468fbe40f45aeb6bb23eb0" translate="yes" xml:space="preserve">
          <source>For class PrinterResolution, the category is class PrinterResolution itself.</source>
          <target state="translated">クラスPrinterResolutionの場合、カテゴリはクラスPrinterResolutionそのものです。</target>
        </trans-unit>
        <trans-unit id="089c03e6282acc3da250b5bbf8c9b3c0723bc5de" translate="yes" xml:space="preserve">
          <source>For class PrinterResolution, the category name is &lt;code&gt;&quot;printer-resolution&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterResolutionクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-resolution&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9ddf3275c606f2df378612cccd2405b28e94d547" translate="yes" xml:space="preserve">
          <source>For class PrinterState, the category is class PrinterState itself.</source>
          <target state="translated">クラスPrinterStateの場合、カテゴリはクラスPrinterStateそのものです。</target>
        </trans-unit>
        <trans-unit id="cbc846db841ae5c9762311f9887a7ed626d21ac2" translate="yes" xml:space="preserve">
          <source>For class PrinterState, the category name is &lt;code&gt;&quot;printer-state&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterStateクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-state&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f8e4577f59fa87e6b5beb516c568387c170e4b8c" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReason and any vendor-defined subclasses, the category is class PrinterStateReason itself.</source>
          <target state="translated">クラスPrinterStateReasonと任意のベンダ定義のサブクラスについては、カテゴリはクラスPrinterStateReasonそのものです。</target>
        </trans-unit>
        <trans-unit id="faeb3e536e0a737a954b661a24e00e48ef3bcef4" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReason and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;printer-state-reason&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterStateReasonクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-state-reason&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4e808c039b758b2f59db1f7d952b1bf58c1aa4a7" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReasons, the category is class PrinterStateReasons itself.</source>
          <target state="translated">クラスPrinterStateReasonsの場合、カテゴリはクラスPrinterStateReasonsそのものです。</target>
        </trans-unit>
        <trans-unit id="e14e080c82b2595f0ad5da46fffd3e824d0f9490" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReasons, the category name is &lt;code&gt;&quot;printer-state-reasons&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterStateReasonsクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-state-reasons&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7a33b14dd071582edba93515dae6937007a50673" translate="yes" xml:space="preserve">
          <source>For class PrinterURI and any vendor-defined subclasses, the category is class PrinterURI itself.</source>
          <target state="translated">クラスPrinterURIと任意のベンダ定義のサブクラスについては,カテゴリはクラスPrinterURIそのものです。</target>
        </trans-unit>
        <trans-unit id="b5c54c79aa3a2ed3bc26221d866d3bf0414ab4d0" translate="yes" xml:space="preserve">
          <source>For class PrinterURI and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;printer-uri&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterURIクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-uri&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="427bb8ae79ce5ce6305815064eb955898deba35e" translate="yes" xml:space="preserve">
          <source>For class QueuedJobCount, the category is class QueuedJobCount itself.</source>
          <target state="translated">QueuedJobCountクラスの場合、カテゴリはQueuedJobCountクラス自体になります。</target>
        </trans-unit>
        <trans-unit id="8c2032679b33ee7eeab7ea70028fe4a54b11a34b" translate="yes" xml:space="preserve">
          <source>For class QueuedJobCount, the category name is &lt;code&gt;&quot;queued-job-count&quot;&lt;/code&gt;.</source>
          <target state="translated">クラスQueuedJobCountの場合、カテゴリ名は &lt;code&gt;&quot;queued-job-count&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ed9b64b1898dc19b34e09680ab59f290a11180b1" translate="yes" xml:space="preserve">
          <source>For class ReferenceUriSchemesSupported and any vendor-defined subclasses, the category is class ReferenceUriSchemesSupported itself.</source>
          <target state="translated">クラスReferenceUriSchemesSupportedおよびベンダー定義のサブクラスの場合、カテゴリはクラスReferenceUriSchemesSupportedそのものとなります。</target>
        </trans-unit>
        <trans-unit id="936b31b70be0215f64773fb73ec5e86c0ca36d06" translate="yes" xml:space="preserve">
          <source>For class ReferenceUriSchemesSupported and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;reference-uri-schemes-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">ReferenceUriSchemesSupportedクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;reference-uri-schemes-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5468094b261f63f7a851ffdea2ab7b4ba7224051" translate="yes" xml:space="preserve">
          <source>For class RequestingUserName, the category is class RequestingUserName itself.</source>
          <target state="translated">クラスRequestingUserNameの場合、カテゴリはクラスRequestingUserName自身となります。</target>
        </trans-unit>
        <trans-unit id="794b8d2f9a18f1de951bd2a77cf8d9823f430c19" translate="yes" xml:space="preserve">
          <source>For class RequestingUserName, the category name is &lt;code&gt;&quot;requesting-user-name&quot;&lt;/code&gt;.</source>
          <target state="translated">RequestingUserNameクラスの場合、カテゴリ名は &lt;code&gt;&quot;requesting-user-name&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b817b624e8fc642c4c82793be6aece9829795dc5" translate="yes" xml:space="preserve">
          <source>For class Severit, the category name is &lt;code&gt;&quot;severity&quot;&lt;/code&gt;.</source>
          <target state="translated">Severitクラスの場合、カテゴリ名は &lt;code&gt;&quot;severity&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="95cf92446e07a3726f7d683aed39c191dd9dd0f7" translate="yes" xml:space="preserve">
          <source>For class Severity, the category is class Severity itself.</source>
          <target state="translated">クラスSeverityの場合、カテゴリはクラスSeverityそのものである。</target>
        </trans-unit>
        <trans-unit id="1df6ec0b95bed137549c213c42c887235000d710" translate="yes" xml:space="preserve">
          <source>For class SheetCollate, the category is class SheetCollate itself.</source>
          <target state="translated">SheetCollateクラスの場合、カテゴリはSheetCollateクラスそのものです。</target>
        </trans-unit>
        <trans-unit id="eec42e414ddbb008a0160e654bcfebb31c674017" translate="yes" xml:space="preserve">
          <source>For class SheetCollate, the category name is &lt;code&gt;&quot;sheet-collate&quot;&lt;/code&gt;.</source>
          <target state="translated">SheetCollat​​eクラスの場合、カテゴリ名は &lt;code&gt;&quot;sheet-collate&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a54a6c66b3185766ef8980b2b771f7a5145737b9" translate="yes" xml:space="preserve">
          <source>For class Sides, the category is class Sides itself.</source>
          <target state="translated">クラスSidesの場合、カテゴリはクラスSidesそのものとなります。</target>
        </trans-unit>
        <trans-unit id="00e176bee23fa052a123452f97bdfd610c3f76aa" translate="yes" xml:space="preserve">
          <source>For class Sides, the category name is &lt;code&gt;&quot;sides&quot;&lt;/code&gt;.</source>
          <target state="translated">Sidesクラスの場合、カテゴリ名は &lt;code&gt;&quot;sides&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e291d7686d6bf5a610fa7b42648acca9aac4fbe1" translate="yes" xml:space="preserve">
          <source>For client formatted print data, the print data representation class is typically one of the following (although other representation classes are permitted):</source>
          <target state="translated">クライアントフォーマットされた印刷データの場合、印刷データ表現クラスは、通常、以下のいずれかである(ただし、他の表現クラスが許可されている)。</target>
        </trans-unit>
        <trans-unit id="e6d74a7546298ead87242134049dd273d250b2d3" translate="yes" xml:space="preserve">
          <source>For client sockets, setReceiveBufferSize() must be called before connecting the socket to its remote peer.</source>
          <target state="translated">クライアントソケットの場合、ソケットをリモートピアに接続する前に setReceiveBufferSize()を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="b4d07d8b04ebb5bf8cd0d980eb8abf2e92d0b689" translate="yes" xml:space="preserve">
          <source>For collectors that do not have the &lt;code&gt;UNORDERED&lt;/code&gt; characteristic, two accumulated results &lt;code&gt;a1&lt;/code&gt; and &lt;code&gt;a2&lt;/code&gt; are equivalent if &lt;code&gt;finisher.apply(a1).equals(finisher.apply(a2))&lt;/code&gt;. For unordered collectors, equivalence is relaxed to allow for non-equality related to differences in order. (For example, an unordered collector that accumulated elements to a &lt;code&gt;List&lt;/code&gt; would consider two lists equivalent if they contained the same elements, ignoring order.)</source>
          <target state="translated">&lt;code&gt;UNORDERED&lt;/code&gt; 特性を持たないコレクターの場合、 &lt;code&gt;finisher.apply(a1).equals(finisher.apply(a2))&lt;/code&gt; の場合、2つの累積結果 &lt;code&gt;a1&lt;/code&gt; と &lt;code&gt;a2&lt;/code&gt; は同等です。順序付けされていないコレクターの場合、等価性は緩和され、順序の違いに関連する非等価性が考慮されます。 （たとえば、 &lt;code&gt;List&lt;/code&gt; に要素を累積した順序付けされていないコレクターは、順序を無視して、同じ要素が含まれている場合、2つのリストを同等と見なします。</target>
        </trans-unit>
        <trans-unit id="5daebfee18e6210b1df3959fb579eb8ef2b007d1" translate="yes" xml:space="preserve">
          <source>For combo boxes with a non trivial number of items, it is recommended to use a prototype display value to significantly speed up the display size calculation.</source>
          <target state="translated">些細な項目数ではないコンボボックスの場合は、プロトタイプの表示値を使用して表示サイズの計算を大幅に高速化することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="3a2967995857133da00d1565c63fb3be5ba528a4" translate="yes" xml:space="preserve">
          <source>For comparing &lt;code&gt;String&lt;/code&gt;s exactly once, the &lt;code&gt;compare&lt;/code&gt; method provides the best performance. When sorting a list of &lt;code&gt;String&lt;/code&gt;s however, it is generally necessary to compare each &lt;code&gt;String&lt;/code&gt; multiple times. In this case, &lt;code&gt;CollationKey&lt;/code&gt;s provide better performance. The &lt;code&gt;CollationKey&lt;/code&gt; class converts a &lt;code&gt;String&lt;/code&gt; to a series of bits that can be compared bitwise against other &lt;code&gt;CollationKey&lt;/code&gt;s. A &lt;code&gt;CollationKey&lt;/code&gt; is created by a &lt;code&gt;Collator&lt;/code&gt; object for a given &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">比較のために &lt;code&gt;String&lt;/code&gt; を正確に一度のを、 &lt;code&gt;compare&lt;/code&gt; の方法は、最高のパフォーマンスを提供します。ただし、 &lt;code&gt;String&lt;/code&gt; のリストをソートする場合、通常は各 &lt;code&gt;String&lt;/code&gt; を複数回比較する必要があります。この場合、 &lt;code&gt;CollationKey&lt;/code&gt; はより優れたパフォーマンスを提供します。 &lt;code&gt;CollationKey&lt;/code&gt; クラスは、変換 &lt;code&gt;String&lt;/code&gt; 他のに対してビット単位で比較することができる一連のビットへ &lt;code&gt;CollationKey&lt;/code&gt; 秒。 A &lt;code&gt;CollationKey&lt;/code&gt; によって作成された &lt;code&gt;Collator&lt;/code&gt; 特定のオブジェクト &lt;code&gt;String&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af7d1003679e326a588379c3ddd16e561bb257a9" translate="yes" xml:space="preserve">
          <source>For compatibility reasons, it is possible, though highly discouraged, to add objects to an &lt;code&gt;AttributeList&lt;/code&gt; that are not instances of &lt;code&gt;Attribute&lt;/code&gt;. However, an &lt;code&gt;AttributeList&lt;/code&gt; can be made &lt;em&gt;type-safe&lt;/em&gt;, which means that an attempt to add an object that is not an &lt;code&gt;Attribute&lt;/code&gt; will produce an &lt;code&gt;
 IllegalArgumentException&lt;/code&gt;. An &lt;code&gt;AttributeList&lt;/code&gt; becomes type-safe when the method &lt;a href=&quot;#asList()&quot;&gt;&lt;code&gt;asList()&lt;/code&gt;&lt;/a&gt; is called on it.</source>
          <target state="translated">互換性の理由から、それはにオブジェクトを追加するために、非常に落胆しても、可能である &lt;code&gt;AttributeList&lt;/code&gt; のインスタンスではありません &lt;code&gt;Attribute&lt;/code&gt; 。ただし、 &lt;code&gt;AttributeList&lt;/code&gt; は&lt;em&gt;タイプセーフ&lt;/em&gt;にすることができます。つまり、 &lt;code&gt;Attribute&lt;/code&gt; ではないオブジェクトを追加しようとすると、 &lt;code&gt; IllegalArgumentException&lt;/code&gt; が生成されます。アン &lt;code&gt;AttributeList&lt;/code&gt; メソッドの際にタイプセーフになり&lt;a href=&quot;#asList()&quot;&gt; &lt;code&gt;asList()&lt;/code&gt; が&lt;/a&gt;それに呼ばれています。</target>
        </trans-unit>
        <trans-unit id="3bda8af9f3ea2c182bc4edb9c9e7d569970e2c7c" translate="yes" xml:space="preserve">
          <source>For compatibility reasons, it is possible, though highly discouraged, to add objects to an &lt;code&gt;AttributeList&lt;/code&gt; that are not instances of &lt;code&gt;Attribute&lt;/code&gt;. However, an &lt;code&gt;AttributeList&lt;/code&gt; can be made &lt;em&gt;type-safe&lt;/em&gt;, which means that an attempt to add an object that is not an &lt;code&gt;Attribute&lt;/code&gt; will produce an &lt;code&gt;IllegalArgumentException&lt;/code&gt;. An &lt;code&gt;AttributeList&lt;/code&gt; becomes type-safe when the method &lt;a href=&quot;attributelist#asList--&quot;&gt;&lt;code&gt;asList()&lt;/code&gt;&lt;/a&gt; is called on it.</source>
          <target state="translated">互換性の理由から、それはにオブジェクトを追加するために、非常に落胆しても、可能である &lt;code&gt;AttributeList&lt;/code&gt; のインスタンスではありません &lt;code&gt;Attribute&lt;/code&gt; 。ただし、 &lt;code&gt;AttributeList&lt;/code&gt; は&lt;em&gt;タイプセーフ&lt;/em&gt;にすることができます。つまり、 &lt;code&gt;Attribute&lt;/code&gt; ではないオブジェクトを追加しようとすると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; が生成されます。アン &lt;code&gt;AttributeList&lt;/code&gt; メソッドの際にタイプセーフになり&lt;a href=&quot;attributelist#asList--&quot;&gt; &lt;code&gt;asList()&lt;/code&gt; が&lt;/a&gt;それに呼ばれています。</target>
        </trans-unit>
        <trans-unit id="fa3fadeadc9c59b0bb290751e24959992cae4d8a" translate="yes" xml:space="preserve">
          <source>For compatibility reasons, two non-conforming locales are treated as special cases. These are &lt;b&gt;&lt;code&gt;ja_JP_JP&lt;/code&gt;&lt;/b&gt; and &lt;b&gt;&lt;code&gt;th_TH_TH&lt;/code&gt;&lt;/b&gt;. These are ill-formed in BCP 47 since the variants are too short. To ease migration to BCP 47, these are treated specially during construction. These two cases (and only these) cause a constructor to generate an extension, all other values behave exactly as they did prior to Java 7.</source>
          <target state="translated">互換性の理由から、2つの非準拠ロケールは特殊なケースとして扱われます。これらは&lt;b&gt; &lt;code&gt;ja_JP_JP&lt;/code&gt; &lt;/b&gt;と&lt;b&gt; &lt;code&gt;th_TH_TH&lt;/code&gt; &lt;/b&gt;です。バリアントが短すぎるため、BCP 47ではこれらの形式が正しくありません。 BCP 47への移行を容易にするために、これらは建設時に特別に扱われます。これら2つのケース（およびこれらのみ）では、コンストラクターが拡張機能を生成します。他のすべての値は、Java 7より前とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="88ffec9f8f3ececb82205df4b4f1f28ffab318bb" translate="yes" xml:space="preserve">
          <source>For compatibility with JDK 1.1.x, some other three-letter time zone IDs (such as &quot;PST&quot;, &quot;CTT&quot;, &quot;AST&quot;) are also supported. However, &lt;strong&gt;their use is deprecated&lt;/strong&gt; because the same abbreviation is often used for multiple time zones (for example, &quot;CST&quot; could be U.S. &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;), and the Java platform can then only recognize one of them.</source>
          <target state="translated">JDK 1.1.xとの互換性のために、他のいくつかの3文字のタイムゾーンID（「PST」、「CTT」、「AST」など）もサポートされています。ただし、複数のタイムゾーンで同じ省略形がよく使用されるため（たとえば、「CST」は米国の「中央標準時」と「中国標準時」の場合がある）、Javaプラットフォームは次のいずれか1つしか認識できないため、&lt;strong&gt;これらの使用は非推奨&lt;/strong&gt;です。それら。</target>
        </trans-unit>
        <trans-unit id="fd60c878e75d2f5708d5f3e6789fa9e2306f96c1" translate="yes" xml:space="preserve">
          <source>For compatibility with applications developed earlier this method still accepts &lt;code&gt;Frame.NORMAL&lt;/code&gt; and &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; only. The iconic state of the frame is only changed, other aspects of frame state are not affected by this method. If the state passed to this method is neither &lt;code&gt;
 Frame.NORMAL&lt;/code&gt; nor &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; the method performs no actions at all.</source>
          <target state="translated">以前に開発されたアプリケーションとの互換性のために、このメソッドは引き続き &lt;code&gt;Frame.NORMAL&lt;/code&gt; および &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; のみを受け入れます。フレームの象徴的な状態は変更されるだけで、フレーム状態の他の側面はこの方法の影響を受けません。このメソッドに渡される状態が &lt;code&gt; Frame.NORMAL&lt;/code&gt; でも &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; でもない場合、メソッドはアクションをまったく実行しません。</target>
        </trans-unit>
        <trans-unit id="c9eb361e769ed726818ef4786ab9e82032615e2e" translate="yes" xml:space="preserve">
          <source>For compatibility with old parsers, XMLFormatters can be configured to revert to the old format by specifying a &lt;code&gt;&amp;lt;xml-formatter-fully-qualified-class-name&amp;gt;.useInstant = false&lt;/code&gt;&lt;a href=&quot;logmanager#getProperty(java.lang.String)&quot;&gt;property&lt;/a&gt; in the logging configuration. When &lt;code&gt;useInstant&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the old formatting will be preserved. When &lt;code&gt;useInstant&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; (the default), the &lt;code&gt;&amp;lt;nanos&amp;gt;&lt;/code&gt; element will be printed and the &lt;code&gt;&amp;lt;date&amp;gt;&lt;/code&gt; element will contain the &lt;a href=&quot;../../../../java.base/java/time/format/datetimeformatter#ISO_INSTANT&quot;&gt;formatted&lt;/a&gt; instant.</source>
          <target state="translated">古いパーサーとの互換性のために、ロギング構成で &lt;code&gt;&amp;lt;xml-formatter-fully-qualified-class-name&amp;gt;.useInstant = false&lt;/code&gt; &lt;a href=&quot;logmanager#getProperty(java.lang.String)&quot;&gt;プロパティ&lt;/a&gt;を指定することにより、XMLFormatterを古い形式に戻すように構成できます。とき &lt;code&gt;useInstant&lt;/code&gt; がある &lt;code&gt;false&lt;/code&gt; 、古い書式は保持されます。とき &lt;code&gt;useInstant&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; （デフォルト）、 &lt;code&gt;&amp;lt;nanos&amp;gt;&lt;/code&gt; 要素が印刷されますと &lt;code&gt;&amp;lt;date&amp;gt;&lt;/code&gt; 要素が含まれます&lt;a href=&quot;../../../../java.base/java/time/format/datetimeformatter#ISO_INSTANT&quot;&gt;フォーマットされた&lt;/a&gt;瞬間を。</target>
        </trans-unit>
        <trans-unit id="4ae98774e76aff887be754e2a71ca1589d7931b3" translate="yes" xml:space="preserve">
          <source>For compatibility with old programs this method still returns &lt;code&gt;Frame.NORMAL&lt;/code&gt; and &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; but it only reports the iconic state of the frame, other aspects of frame state are not reported by this method.</source>
          <target state="translated">古いプログラムとの互換性のために、このメソッドは引き続き &lt;code&gt;Frame.NORMAL&lt;/code&gt; と &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; を返しますが、フレームのアイコン状態のみを報告し、フレーム状態の他の側面はこのメソッドでは報告されません。</target>
        </trans-unit>
        <trans-unit id="fdb12ba84178516e070cb7e3438381124465f720" translate="yes" xml:space="preserve">
          <source>For compatibility with previous releases, &lt;code&gt;BorderLayout&lt;/code&gt; also includes the relative positioning constants &lt;code&gt;BEFORE_FIRST_LINE&lt;/code&gt;, &lt;code&gt;AFTER_LAST_LINE&lt;/code&gt;, &lt;code&gt;BEFORE_LINE_BEGINS&lt;/code&gt; and &lt;code&gt;AFTER_LINE_ENDS&lt;/code&gt;. These are equivalent to &lt;code&gt;PAGE_START&lt;/code&gt;, &lt;code&gt;PAGE_END&lt;/code&gt;, &lt;code&gt;LINE_START&lt;/code&gt; and &lt;code&gt;LINE_END&lt;/code&gt; respectively. For consistency with the relative positioning constants used by other components, the latter constants are preferred.</source>
          <target state="translated">以前のリリースとの互換性のために、 &lt;code&gt;BorderLayout&lt;/code&gt; には、相対配置定数 &lt;code&gt;BEFORE_FIRST_LINE&lt;/code&gt; 、 &lt;code&gt;AFTER_LAST_LINE&lt;/code&gt; 、 &lt;code&gt;BEFORE_LINE_BEGINS&lt;/code&gt; 、および &lt;code&gt;AFTER_LINE_ENDS&lt;/code&gt; も含まれています。これらは、それぞれ &lt;code&gt;PAGE_START&lt;/code&gt; 、 &lt;code&gt;PAGE_END&lt;/code&gt; 、 &lt;code&gt;LINE_START&lt;/code&gt; 、および &lt;code&gt;LINE_END&lt;/code&gt; と同等です。他のコンポーネントで使用される相対的な位置決め定数との一貫性を保つために、後者の定数が推奨されます。</target>
        </trans-unit>
        <trans-unit id="0b68d1775fb9f96001888959c6d32bec9d0ab9b8" translate="yes" xml:space="preserve">
          <source>For complete details on RMI, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/rmi/index.html&quot;&gt;RMI Specification&lt;/a&gt; which describes the RMI API and system.</source>
          <target state="translated">RMIの詳細については、RMIAPIとシステムについて説明している&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/rmi/index.html&quot;&gt;RMI仕様&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b9423ca6a745439d228e81775dfe1289ff98c768" translate="yes" xml:space="preserve">
          <source>For complete examples and further documentation see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">完全な例と詳細なドキュメントについては&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションである&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;進行状況を監視する方法」を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="426d2bc87f59f5f0cb4ba388ec2d7d4edcc97713" translate="yes" xml:space="preserve">
          <source>For concurrent collectors, an implementation is free to (but not required to) implement reduction concurrently. A concurrent reduction is one where the accumulator function is called concurrently from multiple threads, using the same concurrently-modifiable result container, rather than keeping the result isolated during accumulation. A concurrent reduction should only be applied if the collector has the &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt;&lt;code&gt;Collector.Characteristics.UNORDERED&lt;/code&gt;&lt;/a&gt; characteristics or if the originating data is unordered.</source>
          <target state="translated">並行コレクターの場合、実装は削減を同時に実装することは自由です（必須ではありません）。同時リダクションは、アキュムレータ関数が複数のスレッドから同時に呼び出され、アキュムレーション中に結果を分離したままにするのではなく、同時に変更可能な同じ結果コンテナを使用して行われるリダクションです。同時削減は、&lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt; &lt;code&gt;Collector.Characteristics.UNORDERED&lt;/code&gt; &lt;/a&gt;特性がある場合、または元のデータが順序付けされていない場合にのみ適用する必要があります。</target>
        </trans-unit>
        <trans-unit id="5b77db919dc549d42aa7190b43a492b8ea4ee578" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;code&gt;JLayeredPane&lt;/code&gt; divides the depth-range into several different layers. Putting a component into one of those layers makes it easy to ensure that components overlap properly, without having to worry about specifying numbers for specific depths:</source>
          <target state="translated">便宜上、 &lt;code&gt;JLayeredPane&lt;/code&gt; は深度範囲をいくつかの異なるレイヤーに分割します。コンポーネントをこれらのレイヤーの1つに配置すると、特定の深さの番号を指定することを心配することなく、コンポーネントが適切にオーバーラップすることを簡単に確認できます。</target>
        </trans-unit>
        <trans-unit id="c27fac6ea267b3ee9bd3b0f98727a50d9691f093" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;a href=&quot;#isError()&quot;&gt;&lt;code&gt;isError&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;true&lt;/code&gt; for result objects that describe malformed-input and unmappable-character errors but &lt;code&gt;false&lt;/code&gt; for those that describe underflow or overflow conditions.</source>
          <target state="translated">便宜上、&lt;a href=&quot;#isError()&quot;&gt; &lt;code&gt;isError&lt;/code&gt; &lt;/a&gt;メソッドが返す &lt;code&gt;true&lt;/code&gt; 不正入力やマップ不可文字エラーが、記述結果オブジェクトのための &lt;code&gt;false&lt;/code&gt; アンダーフローやオーバーフロー条件を記述しているもののために。</target>
        </trans-unit>
        <trans-unit id="b87f89f0734b0f681dabea429fae1aace7b8245d" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;a href=&quot;coderresult#isError--&quot;&gt;&lt;code&gt;isError&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;true&lt;/code&gt; for result objects that describe malformed-input and unmappable-character errors but &lt;code&gt;false&lt;/code&gt; for those that describe underflow or overflow conditions.</source>
          <target state="translated">便宜上、&lt;a href=&quot;coderresult#isError--&quot;&gt; &lt;code&gt;isError&lt;/code&gt; &lt;/a&gt;メソッドが返す &lt;code&gt;true&lt;/code&gt; 不正入力やマップ不可文字エラーが、記述結果オブジェクトのための &lt;code&gt;false&lt;/code&gt; アンダーフローやオーバーフロー条件を記述しているもののために。</target>
        </trans-unit>
        <trans-unit id="ebada93ed27c6249289f1e3fb580ab3052fec92c" translate="yes" xml:space="preserve">
          <source>For convenience, this class declares a number of public static final fields that refer to singleton instances returned by the values() method.</source>
          <target state="translated">便宜上、このクラスは、 values()メソッドによって返されるシングルトン・インスタンスを参照する多数のパブリック・スタティック・ファイナル・フィールドを宣言します。</target>
        </trans-unit>
        <trans-unit id="22c5cc62321a61e23fe5e092c90e1a30e44ff7cd" translate="yes" xml:space="preserve">
          <source>For correct printing behaviour, the following points should be observed:</source>
          <target state="translated">正しい印刷動作のためには、以下の点に注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="cb5e8dedd374a70c1c847661490301249aacc703" translate="yes" xml:space="preserve">
          <source>For data in &lt;code&gt;TIFFTag.TIFF_BYTE&lt;/code&gt; format, the application must take care when promoting the data to longer integral types to avoid sign extension.</source>
          <target state="translated">&lt;code&gt;TIFFTag.TIFF_BYTE&lt;/code&gt; 形式のデータの場合、アプリケーションは、データをより長い整数型にプロモートするときに、符号拡張を回避するように注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="1540b9260398a27c20afbc75e79f7e85a69fa272" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets the socket option is used to allow multiple programs bind to the same address. This option should be enabled when the socket is to be used for Internet Protocol (IP) multicasting.</source>
          <target state="translated">データグラム指向のソケットでは、複数のプログラムが同じアドレスにバインドできるようにするために socket オプションを使用します。このオプションは、ソケットがインターネットプロトコル(IP)マルチキャストで使用される場合に有効にしなければなりません。</target>
        </trans-unit>
        <trans-unit id="0f95b5e33b3ee975e827804d3ac17eb2566ce8e5" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets the socket option usually allows multiple UDP sockets to be bound to the same address and port.</source>
          <target state="translated">データグラム指向のソケットでは、 socket オプションは通常、複数の UDP ソケットを同じアドレスとポートにバインドすることを可能にします。</target>
        </trans-unit>
        <trans-unit id="786c72f86388cb950616d047202d32b3eb1c3b0f" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets, the size of the receive buffer may limit the size of the datagrams that can be received. Whether datagrams larger than the buffer size can be received is system dependent. Increasing the socket receive buffer may be important for cases where datagrams arrive in bursts faster than they can be processed.</source>
          <target state="translated">データグラム指向のソケットでは、受信バッファのサイズによって受信可能なデータグラムのサイズが制限されることがあります。バッファサイズよりも大きいデータグラムを受信できるかどうかはシステムに依存します。データグラムがバーストで到着したときに、データグラムの処理速度が速い場合には、ソケットの受信バッファサイズを大きくすることが重要になります。</target>
        </trans-unit>
        <trans-unit id="966cd6f9c064ea098962ea14f75ef3365435e675" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets, the size of the send buffer may limit the size of the datagrams that may be sent by the socket. Whether datagrams larger than the buffer size are sent or discarded is system dependent.</source>
          <target state="translated">データグラム指向のソケットでは、送信バッファのサイズによってソケットから送信できるデータグラムのサイズが制限されることがあります。バッファサイズよりも大きいデータグラムが送信されるか破棄されるかはシステムに依存します。</target>
        </trans-unit>
        <trans-unit id="e144e4de7a25df3ef3b62d81140888932e771f2c" translate="yes" xml:space="preserve">
          <source>For date-times, 'JULIAN_DAY.getFrom()' assumes the same value from midnight until just before the next midnight. When 'JULIAN_DAY.adjustInto()' is applied to a date-time, the time of day portion remains unaltered. 'JULIAN_DAY.adjustInto()' and 'JULIAN_DAY.getFrom()' only apply to &lt;code&gt;Temporal&lt;/code&gt; objects that can be converted into &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;&lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;&lt;/a&gt; is thrown for any other type of object.</source>
          <target state="translated">日時の場合、「JULIAN_DAY.getFrom（）」は真夜中から次の真夜中の直前まで同じ値を想定します。 'JULIAN_DAY.adjustInto（）'が日時に適用される場合、時刻部分は変更されません。 'JULIAN_DAY.adjustInto（）'および 'JULIAN_DAY.getFrom（）'は、&lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt;に変換できる &lt;code&gt;Temporal&lt;/code&gt; オブジェクトにのみ適用されます。アン&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt; &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; は、&lt;/a&gt;オブジェクトの他のタイプのためにスローされます。</target>
        </trans-unit>
        <trans-unit id="0cc6b45ec07db1a8b27e379302a25193156d3ffa" translate="yes" xml:space="preserve">
          <source>For date-times, 'MODIFIED_JULIAN_DAY.getFrom()' assumes the same value from midnight until just before the next midnight. When 'MODIFIED_JULIAN_DAY.adjustInto()' is applied to a date-time, the time of day portion remains unaltered. 'MODIFIED_JULIAN_DAY.adjustInto()' and 'MODIFIED_JULIAN_DAY.getFrom()' only apply to &lt;code&gt;Temporal&lt;/code&gt; objects that can be converted into &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;&lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;&lt;/a&gt; is thrown for any other type of object.</source>
          <target state="translated">日時の場合、「MODIFIED_JULIAN_DAY.getFrom（）」は、真夜中から次の真夜中の直前まで同じ値を想定します。 'MODIFIED_JULIAN_DAY.adjustInto（）'が日時に適用されると、時刻部分は変更されません。 'MODIFIED_JULIAN_DAY.adjustInto（）'および 'MODIFIED_JULIAN_DAY.getFrom（）'は、&lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt;に変換できる &lt;code&gt;Temporal&lt;/code&gt; オブジェクトにのみ適用されます。アン&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt; &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; は、&lt;/a&gt;オブジェクトの他のタイプのためにスローされます。</target>
        </trans-unit>
        <trans-unit id="8cbb52d0e448ae0028f420b523fc0e8fe8889086" translate="yes" xml:space="preserve">
          <source>For date-times, 'RATA_DIE.getFrom()' assumes the same value from midnight until just before the next midnight. When 'RATA_DIE.adjustInto()' is applied to a date-time, the time of day portion remains unaltered. 'RATA_DIE.adjustInto()' and 'RATA_DIE.getFrom()' only apply to &lt;code&gt;Temporal&lt;/code&gt; objects that can be converted into &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;&lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;&lt;/a&gt; is thrown for any other type of object.</source>
          <target state="translated">日時の場合、「RATA_DIE.getFrom（）」は、午前0時から次の午前0時の直前まで同じ値を想定します。'RATA_DIE.adjustInto（）'が日時に適用される場合、時刻部分は変更されません。'RATA_DIE.adjustInto（）'および 'RATA_DIE.getFrom（）'は、&lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt;に変換できる &lt;code&gt;Temporal&lt;/code&gt; オブジェクトにのみ適用されます。アン&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt; &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; は、&lt;/a&gt;オブジェクトの他のタイプのためにスローされます。</target>
        </trans-unit>
        <trans-unit id="5917af1a5a5388259e477975711371546feece14" translate="yes" xml:space="preserve">
          <source>For default values not specified by SAX2, each XMLReader implementation specifies its default, or may choose not to expose the feature flag. Unless otherwise specified here, implementations may support changing current values of these standard feature flags, but not while parsing.</source>
          <target state="translated">SAX2 で指定されていないデフォルト値については、各 XMLReader 実装はそのデフォルト値を指定するか、機能フラグを公開しないことを選択することができる。ここで指定されていない限り、実装はこれらの標準機能フラグの現在の値の変更をサポートすることができますが、解析中はサポートしません。</target>
        </trans-unit>
        <trans-unit id="d21c60d5fb09e760cc030c28677e9de4a9cb8ba5" translate="yes" xml:space="preserve">
          <source>For deletes, the indexes represent the</source>
          <target state="translated">削除の場合、インデックスは</target>
        </trans-unit>
        <trans-unit id="28d681735625cb5b074de969173935dda35c689f" translate="yes" xml:space="preserve">
          <source>For details and the values of parameter that are valid for the various types of services see the top of this class and the  Java Cryptography Architecture API Specification &amp;amp; Reference. Security providers can override it to implement their own test.</source>
          <target state="translated">さまざまなタイプのサービスに有効なパラメーターの詳細と値については、このクラスのトップおよびJava暗号化アーキテクチャーAPI仕様およびリファレンスを参照してください。セキュリティプロバイダーはそれをオーバーライドして、独自のテストを実装できます。</target>
        </trans-unit>
        <trans-unit id="804b34ef3e3e29b6ff0dcdc4e3200775ed24a3f5" translate="yes" xml:space="preserve">
          <source>For details and the values of parameter that are valid for the various types of services see the top of this class and the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca&quot;&gt;Java Cryptography Architecture (JCA) Reference Guide&lt;/a&gt;. Security providers can override it to implement their own test.</source>
          <target state="translated">さまざまなタイプのサービスに有効な詳細とパラメーターの値については、このクラスのトップと&lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca&quot;&gt;Java暗号化アーキテクチャー（JCA）リファレンスガイドを参照してください&lt;/a&gt;。セキュリティプロバイダーは、それをオーバーライドして独自のテストを実装できます。</target>
        </trans-unit>
        <trans-unit id="c68701285e7b960e6e93d95808cdd4a77d317a1f" translate="yes" xml:space="preserve">
          <source>For details on how the widths of columns in the &lt;code&gt;JTable&lt;/code&gt; (and &lt;code&gt;JTableHeader&lt;/code&gt;) are calculated from the &lt;code&gt;preferredWidth&lt;/code&gt;, see the &lt;code&gt;doLayout&lt;/code&gt; method in &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">列の幅方法の詳細については、 &lt;code&gt;JTable&lt;/code&gt; の（および &lt;code&gt;JTableHeader&lt;/code&gt; では）から計算される &lt;code&gt;preferredWidth&lt;/code&gt; 、参照 &lt;code&gt;doLayout&lt;/code&gt; の内のメソッド &lt;code&gt;JTable&lt;/code&gt; のを。</target>
        </trans-unit>
        <trans-unit id="5aab162f3d6513fcbe058868b382f7a560c31fe9" translate="yes" xml:space="preserve">
          <source>For details on the focus subsystem, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt; How to Use the Focus Subsystem&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;, and the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;Focus Specification&lt;/a&gt; for more information.</source>
          <target state="translated">フォーカスサブシステムの詳細については、「フォーカスサブシステムの&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt;使用方法」&lt;/a&gt;、&lt;em&gt;「Javaチュートリアル」の&lt;/em&gt;セクション、および「&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;フォーカス仕様」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="265e8a5599432ddf889d173f21ff483b5caee801" translate="yes" xml:space="preserve">
          <source>For directories that do not use a string representation for some or all of their attributes, the filter argument corresponding to an attribute value may be of a type other than String. Directories that support unstructured binary-valued attributes, for example, should accept byte arrays as filter arguments. The interpretation (if any) of filter arguments of any other type is determined by the service provider for that directory, which maps the filter operations onto operations with corresponding semantics in the underlying directory.</source>
          <target state="translated">属性の一部またはすべてに文字列表現を使用しないディレクトリの場合、属性値に対応するフィルタ引数は String 以外の型になることがあります。例えば、構造化されていないバイナリ値属性をサポートするディレクトリは、フィルタ引数としてバイト配列を受け入れなければなりません。他の型のフィルタ引数の解釈(もしあれば)は、そのディレクトリのサービスプロバイダによって決定され、フィルタ操作をそのディレクトリの対応するセマンティクスを持つ操作にマッピングします。</target>
        </trans-unit>
        <trans-unit id="518376a1f0776715181d384c293e66dd7896f2e6" translate="yes" xml:space="preserve">
          <source>For documentation that includes information about algorithm parameter and key specifications, please see:</source>
          <target state="translated">アルゴリズムのパラメータや主要な仕様に関する情報を含むドキュメントについては、こちらを参照してください。</target>
        </trans-unit>
        <trans-unit id="b6a829f85f8f642a1c89efe627173daa5255f0cb" translate="yes" xml:space="preserve">
          <source>For drop mode &lt;code&gt;DropMode.INSERT&lt;/code&gt;, this index indicates the index at which the data should be inserted into the parent path represented by &lt;code&gt;getPath()&lt;/code&gt;. &lt;code&gt;-1&lt;/code&gt; indicates that the drop occurred over the parent itself, and in most cases should be treated as inserting into either the beginning or the end of the parent's list of children.</source>
          <target state="translated">ドロップモード &lt;code&gt;DropMode.INSERT&lt;/code&gt; の場合、このインデックスは、 &lt;code&gt;getPath()&lt;/code&gt; で表される親パスにデータを挿入する必要があるインデックスを示します。 &lt;code&gt;-1&lt;/code&gt; は、ドロップが親自体で発生したことを示し、ほとんどの場合、親の子リストの最初または最後に挿入するものとして扱われる必要があります。</target>
        </trans-unit>
        <trans-unit id="7fcd28f67347c51882b14015451795cd74b74cd2" translate="yes" xml:space="preserve">
          <source>For drop modes &lt;code&gt;DropMode.USE_SELECTION&lt;/code&gt; and &lt;code&gt;DropMode.ON&lt;/code&gt;, this index is unimportant (and it will always be &lt;code&gt;-1&lt;/code&gt;) as the only interesting data is the path over which the drop operation occurred.</source>
          <target state="translated">ドロップモード &lt;code&gt;DropMode.USE_SELECTION&lt;/code&gt; および &lt;code&gt;DropMode.ON&lt;/code&gt; の場合、興味深いデータはドロップ操作が発生したパスのみであるため、このインデックスは重要ではありません（常に &lt;code&gt;-1&lt;/code&gt; になります）。</target>
        </trans-unit>
        <trans-unit id="5e8ebd7b5b5944d400b4ddb7391f9d645ae1a1ac" translate="yes" xml:space="preserve">
          <source>For each</source>
          <target state="translated">それぞれの</target>
        </trans-unit>
        <trans-unit id="d5e87de10ee00b022602cd0fe8a0bf81b92bb32e" translate="yes" xml:space="preserve">
          <source>For each call of &lt;code&gt;publish&lt;/code&gt; the &lt;code&gt;Handler&lt;/code&gt; will call this &lt;code&gt;Filter&lt;/code&gt; (if it is non-null) to check if the &lt;code&gt;LogRecord&lt;/code&gt; should be published or discarded.</source>
          <target state="translated">&lt;code&gt;publish&lt;/code&gt; 呼び出すたびに、 &lt;code&gt;Handler&lt;/code&gt; はこの &lt;code&gt;Filter&lt;/code&gt; を呼び出し（nullでない場合）、 &lt;code&gt;LogRecord&lt;/code&gt; をパブリッシュするか破棄するかを確認します。</target>
        </trans-unit>
        <trans-unit id="286cc615cc027b7399bc8f36bf03bcc0ce9d8b08" translate="yes" xml:space="preserve">
          <source>For each class &quot;Foo&quot;, explicit information may be available if there exists a corresponding &quot;FooBeanInfo&quot; class that provides a non-null value when queried for the information. We first look for the BeanInfo class by taking the full package-qualified name of the target bean class and appending &quot;BeanInfo&quot; to form a new class name. If this fails, then we take the final classname component of this name, and look for that class in each of the packages specified in the BeanInfo package search path.</source>
          <target state="translated">各クラス &quot;Foo &quot;に対して、情報を問い合わせた際に非 null 値を提供する対応するクラス &quot;FooBeanInfo &quot;が存在する場合、明示的な情報が利用可能な場合があります。最初に、ターゲットBeanクラスの完全なパッケージ修飾名を取り、&quot;BeanInfo &quot;を付加して新しいクラス名を形成することで、BeanInfoクラスを探します。これが失敗した場合は、この名前の最終的なクラス名コンポーネントを取り、BeanInfoパッケージ検索パスで指定された各パッケージでそのクラスを探します。</target>
        </trans-unit>
        <trans-unit id="20256c9d6947200a5e94011138eea8b1897119cf" translate="yes" xml:space="preserve">
          <source>For each combination, the security strength can be requested from 112 up to the highest strength it supports. Both reseeding and prediction resistance are supported.</source>
          <target state="translated">各組み合わせについて、セキュリティ強度は、112からそれがサポートする最高強度まで要求することができます。再シードと予測耐性の両方がサポートされています。</target>
        </trans-unit>
        <trans-unit id="4d952801a5093c12c28f05ad1d4bdd655a37742c" translate="yes" xml:space="preserve">
          <source>For each configuration key in the &lt;a href=&quot;#getProperty(java.lang.String)&quot;&gt;existing configuration&lt;/a&gt; and the given input stream configuration, the given &lt;code&gt;mapper&lt;/code&gt; function is invoked to map from the configuration key to a function,</source>
          <target state="translated">&lt;a href=&quot;#getProperty(java.lang.String)&quot;&gt;既存の構成&lt;/a&gt;および指定された入力ストリーム構成の構成キーごとに、指定された &lt;code&gt;mapper&lt;/code&gt; 関数が呼び出されて、構成キーから関数にマップされます。</target>
        </trans-unit>
        <trans-unit id="b6e30f6a64e00d84dcf684b247b7c04cb7d796f1" translate="yes" xml:space="preserve">
          <source>For each entry of &lt;code&gt;providers&lt;/code&gt; that implements the &lt;code&gt;RegisterableService&lt;/code&gt; interface, its &lt;code&gt;onRegistration&lt;/code&gt; method will be called once for each category it is registered under. Its &lt;code&gt;onDeregistration&lt;/code&gt; method will be called each time it is deregistered from a category or when the registry is finalized.</source>
          <target state="translated">&lt;code&gt;RegisterableService&lt;/code&gt; インターフェースを実装する &lt;code&gt;providers&lt;/code&gt; エントリーごとに、その &lt;code&gt;onRegistration&lt;/code&gt; メソッドは、登録されているカテゴリーごとに1回呼び出されます。その &lt;code&gt;onDeregistration&lt;/code&gt; メソッドは、カテゴリから登録解除されるたび、またはレジストリが確定するときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c516132c3718d7f067332d5c83b439ea451e810e" translate="yes" xml:space="preserve">
          <source>For each enumerated module A that &quot;reads&quot; B:</source>
          <target state="translated">Bを「読む」列挙された各モジュールAに対して</target>
        </trans-unit>
        <trans-unit id="a25403e3f97a5b7ac07a000714e826226e543668" translate="yes" xml:space="preserve">
          <source>For each enumerated module A that 'requires' B: A &quot;reads&quot; B.</source>
          <target state="translated">Bを'require'する列挙された各モジュールAに対して、AはBを'read'します。</target>
        </trans-unit>
        <trans-unit id="35aeee93cde14551d6eade0a0c737d8f9a729564" translate="yes" xml:space="preserve">
          <source>For each enumerated module X that is automatic: X &quot;reads&quot; every other enumerated module (it is &quot;as if&quot; an automatic module has 'requires' directives for every other enumerated module).</source>
          <target state="translated">自動化された各列挙モジュールXに対して X は他のすべての列挙されたモジュールを &quot;読む&quot; (自動モジュールが他のすべての列挙されたモジュールに対して 'require' ディレクティブを持っているかのように &quot;あたかも&quot; 自動モジュールは 'require' ディレクティブを持っています)。</target>
        </trans-unit>
        <trans-unit id="96d2961bb25e716d2f6e80a236a212dd331a8ca6" translate="yes" xml:space="preserve">
          <source>For each file encountered this method attempts to read its &lt;a href=&quot;attribute/basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt;. If the file is not a directory then the &lt;a href=&quot;filevisitor#visitFile(T,java.nio.file.attribute.BasicFileAttributes)&quot;&gt;&lt;code&gt;visitFile&lt;/code&gt;&lt;/a&gt; method is invoked with the file attributes. If the file attributes cannot be read, due to an I/O exception, then the &lt;a href=&quot;filevisitor#visitFileFailed(T,java.io.IOException)&quot;&gt;&lt;code&gt;visitFileFailed&lt;/code&gt;&lt;/a&gt; method is invoked with the I/O exception.</source>
          <target state="translated">検出されたファイルごとに、このメソッドはその&lt;a href=&quot;attribute/basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt;を読み取ろうとします。ファイルがディレクトリでない場合、&lt;a href=&quot;filevisitor#visitFile(T,java.nio.file.attribute.BasicFileAttributes)&quot;&gt; &lt;code&gt;visitFile&lt;/code&gt; &lt;/a&gt;メソッドはファイル属性を使用して呼び出されます。I / O例外が原因でファイル属性を読み取ることができない場合、&lt;a href=&quot;filevisitor#visitFileFailed(T,java.io.IOException)&quot;&gt; &lt;code&gt;visitFileFailed&lt;/code&gt; &lt;/a&gt;メソッドがI / O例外とともに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6ca5a3eb61a3c0a9243e70fdb42a70d21404ae0f" translate="yes" xml:space="preserve">
          <source>For each file encountered this method attempts to read its &lt;a href=&quot;attribute/basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt;. If the file is not a directory then the &lt;a href=&quot;filevisitor#visitFile-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt;&lt;code&gt;visitFile&lt;/code&gt;&lt;/a&gt; method is invoked with the file attributes. If the file attributes cannot be read, due to an I/O exception, then the &lt;a href=&quot;filevisitor#visitFileFailed-T-java.io.IOException-&quot;&gt;&lt;code&gt;visitFileFailed&lt;/code&gt;&lt;/a&gt; method is invoked with the I/O exception.</source>
          <target state="translated">検出されたファイルごとに、このメソッドは&lt;a href=&quot;attribute/basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt;を読み取ろうとします。ファイルがディレクトリでない場合、&lt;a href=&quot;filevisitor#visitFile-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt; &lt;code&gt;visitFile&lt;/code&gt; &lt;/a&gt;メソッドがファイル属性を指定して呼び出されます。I / O例外が原因でファイル属性を読み取ることができない場合、&lt;a href=&quot;filevisitor#visitFileFailed-T-java.io.IOException-&quot;&gt; &lt;code&gt;visitFileFailed&lt;/code&gt; &lt;/a&gt;メソッドがI / O例外で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4d739c9464a9a531eadc74d9ce9305fefe52ff7c" translate="yes" xml:space="preserve">
          <source>For each glyph in the &lt;code&gt;GlyphVector&lt;/code&gt;, you can obtain:</source>
          <target state="translated">&lt;code&gt;GlyphVector&lt;/code&gt; の各グリフについて、次の情報を取得できます。</target>
        </trans-unit>
        <trans-unit id="ddf36bbce577351f24028eda6666f70d941e508b" translate="yes" xml:space="preserve">
          <source>For each listener, the original &lt;code&gt;NotificationListener&lt;/code&gt; and &lt;code&gt;handback&lt;/code&gt; are kept on the client side; in order for the client to be able to identify them, the server generates and returns a unique &lt;code&gt;listenerID&lt;/code&gt;. This &lt;code&gt;listenerID&lt;/code&gt; is forwarded with the &lt;code&gt;Notifications&lt;/code&gt; to the remote client.</source>
          <target state="translated">リスナーごとに、元の &lt;code&gt;NotificationListener&lt;/code&gt; と &lt;code&gt;handback&lt;/code&gt; がクライアント側に保持されます。クライアントがそれらを識別できるようにするために、サーバーは一意の &lt;code&gt;listenerID&lt;/code&gt; を生成して返します。この &lt;code&gt;listenerID&lt;/code&gt; は、 &lt;code&gt;Notifications&lt;/code&gt; とともにリモートクライアントに転送されます。</target>
        </trans-unit>
        <trans-unit id="97a84cf424a476d032f4b6ffd9d39b7dddecc378" translate="yes" xml:space="preserve">
          <source>For each lower bound B :</source>
          <target state="translated">各下界Bについて .</target>
        </trans-unit>
        <trans-unit id="560c97173e52668310a247ab36d49a521c8f9040" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server on behalf of the given delegation subject instead of the authenticated subject. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;../jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">返された &lt;code&gt;MBeanServerConnection&lt;/code&gt; の各メソッドについて、メソッドを呼び出すと、対応するメソッドが、認証されたサブジェクトではなく、指定された委任サブジェクトの代わりにリモートMBeanサーバーで呼び出されます。 MBeanサーバーメソッドによって返される値は、クライアントに返される値です。 MBeanサーバーメソッドが &lt;code&gt;Exception&lt;/code&gt; を生成する場合、同じ &lt;code&gt;Exception&lt;/code&gt; がクライアントに表示されます。 MBeanサーバーメソッドまたはそれを呼び出す試みが &lt;code&gt;Error&lt;/code&gt; を生成する場合、 &lt;code&gt;Error&lt;/code&gt; は&lt;a href=&quot;../jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; &lt;/a&gt;にラップされます。これはクライアントに表示されます。</target>
        </trans-unit>
        <trans-unit id="6cab9b7add9ebb79364ab1771d1e616553c1e6db" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server on behalf of the given delegation subject instead of the authenticated subject. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">返された &lt;code&gt;MBeanServerConnection&lt;/code&gt; の各メソッドについて、メソッドを呼び出すと、対応するメソッドが、認証されたサブジェクトではなく、指定された委任サブジェクトの代わりにリモートMBeanサーバーで呼び出されます。 MBeanサーバーメソッドによって返される値は、クライアントに返される値です。 MBeanサーバーメソッドが &lt;code&gt;Exception&lt;/code&gt; を生成する場合、同じ &lt;code&gt;Exception&lt;/code&gt; がクライアントに表示されます。 MBeanサーバーメソッドまたはそれを呼び出す試みが &lt;code&gt;Error&lt;/code&gt; を生成する場合、 &lt;code&gt;Error&lt;/code&gt; は&lt;a href=&quot;jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; &lt;/a&gt;にラップされます。これはクライアントに表示されます。</target>
        </trans-unit>
        <trans-unit id="b4d1d1cbcb4df50206304dcd7ddd941a7faf1321" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;../jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">返された &lt;code&gt;MBeanServerConnection&lt;/code&gt; の各メソッドについて、メソッドを呼び出すと、対応するメソッドがリモートMBeanサーバーで呼び出されます。 MBeanサーバーメソッドによって返される値は、クライアントに返される値です。 MBeanサーバーメソッドが &lt;code&gt;Exception&lt;/code&gt; を生成する場合、同じ &lt;code&gt;Exception&lt;/code&gt; がクライアントに表示されます。 MBeanサーバーメソッドまたはそれを呼び出す試みが &lt;code&gt;Error&lt;/code&gt; を生成する場合、 &lt;code&gt;Error&lt;/code&gt; は&lt;a href=&quot;../jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; &lt;/a&gt;にラップされます。これはクライアントに表示されます。</target>
        </trans-unit>
        <trans-unit id="af553cdcbe446f41ad75bb0c253ebededf33d396" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">返された &lt;code&gt;MBeanServerConnection&lt;/code&gt; の各メソッドについて、メソッドを呼び出すと、対応するメソッドがリモートMBeanサーバーで呼び出されます。 MBeanサーバーメソッドによって返される値は、クライアントに返される値です。 MBeanサーバーメソッドが &lt;code&gt;Exception&lt;/code&gt; を生成する場合、同じ &lt;code&gt;Exception&lt;/code&gt; がクライアントに表示されます。 MBeanサーバーメソッドまたはそれを呼び出す試みが &lt;code&gt;Error&lt;/code&gt; を生成する場合、 &lt;code&gt;Error&lt;/code&gt; は&lt;a href=&quot;jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; &lt;/a&gt;にラップされます。これはクライアントに表示されます。</target>
        </trans-unit>
        <trans-unit id="719f9f441ad2dee9837b67bc47a02d9badbbe4a3" translate="yes" xml:space="preserve">
          <source>For each non-transient property, an expression is created in which the nullary &quot;getter&quot; method is applied to the &lt;code&gt;oldInstance&lt;/code&gt;. The value of this expression is the value of the property in the instance that is being serialized. If the value of this expression in the cloned environment &lt;code&gt;mutatesTo&lt;/code&gt; the target value, the new value is initialized to make it equivalent to the old value. In this case, because the property value has not changed there is no need to call the corresponding &quot;setter&quot; method and no statement is emitted. If not however, the expression for this value is replaced with another expression (normally a constructor) and the corresponding &quot;setter&quot; method is called to install the new property value in the object. This scheme removes default information from the output produced by streams using this delegate.</source>
          <target state="translated">非一時的なプロパティごとに、nullary &quot;getter&quot;メソッドが &lt;code&gt;oldInstance&lt;/code&gt; に適用される式が作成されます。この式の値は、シリアル化されているインスタンスのプロパティの値です。クローン環境でのこの式の値が &lt;code&gt;mutatesTo&lt;/code&gt; の場合ターゲット値。新しい値は、古い値と同等になるように初期化されます。この場合、プロパティ値は変更されていないため、対応する「setter」メソッドを呼び出す必要はなく、ステートメントは発行されません。ただし、そうでない場合、この値の式は別の式（通常はコンストラクター）に置き換えられ、対応する「setter」メソッドが呼び出されて、オブジェクトに新しいプロパティ値がインストールされます。このスキームは、このデリゲートを使用してストリームによって生成された出力からデフォルト情報を削除します。</target>
        </trans-unit>
        <trans-unit id="b6e68cba9e515c80a86dee74a48fa0652d49385f" translate="yes" xml:space="preserve">
          <source>For each of the correspondents in the key exchange, &lt;code&gt;doPhase&lt;/code&gt; needs to be called. For example, if this key exchange is with one other party, &lt;code&gt;doPhase&lt;/code&gt; needs to be called once, with the &lt;code&gt;lastPhase&lt;/code&gt; flag set to &lt;code&gt;true&lt;/code&gt;. If this key exchange is with two other parties, &lt;code&gt;doPhase&lt;/code&gt; needs to be called twice, the first time setting the &lt;code&gt;lastPhase&lt;/code&gt; flag to &lt;code&gt;false&lt;/code&gt;, and the second time setting it to &lt;code&gt;true&lt;/code&gt;. There may be any number of parties involved in a key exchange.</source>
          <target state="translated">鍵交換の各通信 &lt;code&gt;doPhase&lt;/code&gt; 、doPhaseを呼び出す必要があります。たとえば、この鍵交換が他の1つのパーティと行われる場合、 &lt;code&gt;lastPhase&lt;/code&gt; フラグを &lt;code&gt;true&lt;/code&gt; に設定して、doPhaseを 1回 &lt;code&gt;doPhase&lt;/code&gt; 必要があります。この鍵交換が他の2つのパーティーと行われる場合、最初に &lt;code&gt;lastPhase&lt;/code&gt; フラグを &lt;code&gt;false&lt;/code&gt; に設定し、2回目に &lt;code&gt;true&lt;/code&gt; に設定して、doPhaseを 2回 &lt;code&gt;doPhase&lt;/code&gt; 必要があります。鍵交換に関与する当事者はいくつあってもかまいません。</target>
        </trans-unit>
        <trans-unit id="bf1abc49e05851db66fa969e8d77a4a123b0ee0f" translate="yes" xml:space="preserve">
          <source>For each of the correspondents in the key exchange, &lt;code&gt;engineDoPhase&lt;/code&gt; needs to be called. For example, if the key exchange is with one other party, &lt;code&gt;engineDoPhase&lt;/code&gt; needs to be called once, with the &lt;code&gt;lastPhase&lt;/code&gt; flag set to &lt;code&gt;true&lt;/code&gt;. If the key exchange is with two other parties, &lt;code&gt;engineDoPhase&lt;/code&gt; needs to be called twice, the first time setting the &lt;code&gt;lastPhase&lt;/code&gt; flag to &lt;code&gt;false&lt;/code&gt;, and the second time setting it to &lt;code&gt;true&lt;/code&gt;. There may be any number of parties involved in a key exchange.</source>
          <target state="translated">鍵交換の各通信 &lt;code&gt;engineDoPhase&lt;/code&gt; 、engineDoPhaseを呼び出す必要があります。たとえば、鍵交換が他の1つのパーティとの &lt;code&gt;engineDoPhase&lt;/code&gt; 行われる場合、 &lt;code&gt;lastPhase&lt;/code&gt; フラグを &lt;code&gt;true&lt;/code&gt; に設定してengineDoPhaseを 1回呼び出す必要があります。鍵交換が他の2者とのものである場合、 &lt;code&gt;engineDoPhase&lt;/code&gt; を 2回呼び出す必要があります。最初は &lt;code&gt;lastPhase&lt;/code&gt; フラグを &lt;code&gt;false&lt;/code&gt; に設定し、2回目は &lt;code&gt;true&lt;/code&gt; に設定します。鍵交換に関与する当事者はいくつあってもかまいません。</target>
        </trans-unit>
        <trans-unit id="6705d80531c8f298495e16bdc3ba61df9ab6cbdc" translate="yes" xml:space="preserve">
          <source>For each of those three kinds of information, the Introspector will separately analyze the bean's class and superclasses looking for either explicit or implicit information and use that information to build a BeanInfo object that comprehensively describes the target bean.</source>
          <target state="translated">これら3種類の情報それぞれについて、Introspectorはビーンのクラスとスーパークラスを個別に分析して明示的または暗黙的な情報を探し、その情報を使用してターゲットビーンを包括的に記述するBeanInfoオブジェクトを構築します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
