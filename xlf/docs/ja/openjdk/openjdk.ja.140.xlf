<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="3cef88ec6819399baf39e72e4407c0497fbf9dce" translate="yes" xml:space="preserve">
          <source>StateFactory.getStateToBind()</source>
          <target state="translated">StateFactory.getStateToBind()</target>
        </trans-unit>
        <trans-unit id="8cd06719741256b9a25406984d1e60d96fd9b57c" translate="yes" xml:space="preserve">
          <source>Stateful operations may need to process the entire input before producing a result. For example, one cannot produce any results from sorting a stream until one has seen all elements of the stream. As a result, under parallel computation, some pipelines containing stateful intermediate operations may require multiple passes on the data or may need to buffer significant data. Pipelines containing exclusively stateless intermediate operations can be processed in a single pass, whether sequential or parallel, with minimal data buffering.</source>
          <target state="translated">ステートフル操作は、結果を出す前に入力全体を処理する必要がある場合があります。例えば、ストリームをソートしても、ストリームのすべての要素を見るまで結果を出すことはできません。その結果、並列計算の下では、ステートフルな中間演算を含むいくつかのパイプラインは、データを複数回パスする必要があったり、重要なデータをバッファリングする必要があるかもしれません。ステートレス中間演算のみを含むパイプラインは、シーケンシャルでもパラレルでも、データのバッファリングを最小限に抑えて、1回のパスで処理することができます。</target>
        </trans-unit>
        <trans-unit id="06d3e89dcfa7ce7ac87009b1c9572093cf7760b7" translate="yes" xml:space="preserve">
          <source>Stateless behaviors</source>
          <target state="translated">ステートレスビヘイビア</target>
        </trans-unit>
        <trans-unit id="a72ca256dc49e55a1a57b9a727fbde9834c9a3f7" translate="yes" xml:space="preserve">
          <source>Statement</source>
          <target state="translated">Statement</target>
        </trans-unit>
        <trans-unit id="2acf1000a0cf670b95aaca728c58bc74cd5e7cb3" translate="yes" xml:space="preserve">
          <source>Statement.execute()</source>
          <target state="translated">Statement.execute()</target>
        </trans-unit>
        <trans-unit id="9cffdfba8e42a5128305e728e7000e023a382832" translate="yes" xml:space="preserve">
          <source>Statement.getArguments()</source>
          <target state="translated">Statement.getArguments()</target>
        </trans-unit>
        <trans-unit id="2bd1db9bc986a3a904676af5895f1696ed2a56b6" translate="yes" xml:space="preserve">
          <source>Statement.getMethodName()</source>
          <target state="translated">Statement.getMethodName()</target>
        </trans-unit>
        <trans-unit id="263823304fba97616ef944aa269c25c6c0a1bd3e" translate="yes" xml:space="preserve">
          <source>Statement.getTarget()</source>
          <target state="translated">Statement.getTarget()</target>
        </trans-unit>
        <trans-unit id="dea3cef1b7dfd953090037df99c1511d6b866546" translate="yes" xml:space="preserve">
          <source>Statement.toString()</source>
          <target state="translated">Statement.toString()</target>
        </trans-unit>
        <trans-unit id="53404435c19ebef7a8a5298ab80b61826c0ccfdb" translate="yes" xml:space="preserve">
          <source>StatementEvent</source>
          <target state="translated">StatementEvent</target>
        </trans-unit>
        <trans-unit id="4ac71c4e8f4b4140f6ec456ea3bef6141ad65d45" translate="yes" xml:space="preserve">
          <source>StatementEventListener</source>
          <target state="translated">StatementEventListener</target>
        </trans-unit>
        <trans-unit id="9ea31ab87b567474dcf2f3dd7979eafc493f1420" translate="yes" xml:space="preserve">
          <source>Static &lt;code&gt;from&lt;/code&gt; method:</source>
          <target state="translated">メソッド &lt;code&gt;from&lt;/code&gt; 静的：</target>
        </trans-unit>
        <trans-unit id="6a5813201a4580fe5f1fbb25f1a522d4d505bf2d" translate="yes" xml:space="preserve">
          <source>Static Methods</source>
          <target state="translated">静的メソッド</target>
        </trans-unit>
        <trans-unit id="3a5c22ce6db4a03af653f9e4748c5cc34c28d26b" translate="yes" xml:space="preserve">
          <source>Static argument types</source>
          <target state="translated">静的な引数型</target>
        </trans-unit>
        <trans-unit id="469c99805df2b4a4307f47a671d9586b602270e2" translate="yes" xml:space="preserve">
          <source>Static classes and methods for operating on or creating instances of &lt;a href=&quot;spliterator&quot;&gt;&lt;code&gt;Spliterator&lt;/code&gt;&lt;/a&gt; and its primitive specializations &lt;a href=&quot;spliterator.ofint&quot;&gt;&lt;code&gt;Spliterator.OfInt&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator.oflong&quot;&gt;&lt;code&gt;Spliterator.OfLong&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator.ofdouble&quot;&gt;&lt;code&gt;Spliterator.OfDouble&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;spliterator&quot;&gt; &lt;code&gt;Spliterator&lt;/code&gt; &lt;/a&gt;およびそのプリミティブな特殊化である&lt;a href=&quot;spliterator.ofint&quot;&gt; &lt;code&gt;Spliterator.OfInt&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator.oflong&quot;&gt; &lt;code&gt;Spliterator.OfLong&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;spliterator.ofdouble&quot;&gt; &lt;code&gt;Spliterator.OfDouble&lt;/code&gt; の&lt;/a&gt;インスタンスを操作または作成するための静的クラスおよびメソッド。</target>
        </trans-unit>
        <trans-unit id="b082088f6805112652627c7350df410805d91412" translate="yes" xml:space="preserve">
          <source>Static factory method that returns the unique object describing a malformed-input error of the given length.</source>
          <target state="translated">指定された長さの不正な入力エラーを記述するユニークなオブジェクトを返す静的ファクトリメソッドです。</target>
        </trans-unit>
        <trans-unit id="42a5e95faf64d3c3932281400287dc3adb197129" translate="yes" xml:space="preserve">
          <source>Static factory method that returns the unique result object describing an unmappable-character error of the given length.</source>
          <target state="translated">指定された長さのマッピング不可能な文字エラーを記述した一意の結果オブジェクトを返す静的ファクトリメソッド。</target>
        </trans-unit>
        <trans-unit id="9dd3c6cac9a0543bba3dd93ebf12f1efde4a64ad" translate="yes" xml:space="preserve">
          <source>Static factory to retrieve a type 3 (name based) &lt;code&gt;UUID&lt;/code&gt; based on the specified byte array.</source>
          <target state="translated">指定されたバイト配列に基づいてタイプ3（名前ベース）の &lt;code&gt;UUID&lt;/code&gt; を取得する静的ファクトリー。</target>
        </trans-unit>
        <trans-unit id="aeba45b2cee84ae845f504475b2f9332bacba8e2" translate="yes" xml:space="preserve">
          <source>Static factory to retrieve a type 4 (pseudo randomly generated) UUID.</source>
          <target state="translated">タイプ 4 (擬似ランダム生成)の UUID を取得するためのスタティックファクトリー。</target>
        </trans-unit>
        <trans-unit id="4aa35295b026f404130c78b54555b9b963c124b1" translate="yes" xml:space="preserve">
          <source>Static factory to retrieve a type 4 (pseudo randomly generated) UUID. The &lt;code&gt;UUID&lt;/code&gt; is generated using a cryptographically strong pseudo random number generator.</source>
          <target state="translated">タイプ4（疑似ランダムに生成された）UUIDを取得する静的ファクトリー。 &lt;code&gt;UUID&lt;/code&gt; は、暗号的に強い疑似乱数発生器を使用して生成されます。</target>
        </trans-unit>
        <trans-unit id="8dfa887378d35e0312c162019c09b801afb67941" translate="yes" xml:space="preserve">
          <source>Static field: &lt;code&gt;java.awt.Color.orange&lt;/code&gt;</source>
          <target state="translated">静的フィールド： &lt;code&gt;java.awt.Color.orange&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="01076ed8cfdb67739ed08c6145ffbd16a022801e" translate="yes" xml:space="preserve">
          <source>Static method: &lt;code&gt;javax.swing.Box.createRigidArea(new
                                   java.awt.Dimension(0, 5))&lt;/code&gt;</source>
          <target state="translated">静的メソッド： &lt;code&gt;javax.swing.Box.createRigidArea(new java.awt.Dimension(0, 5))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d43bfbb7037e14a339985625f0b95e7ce71cdc00" translate="yes" xml:space="preserve">
          <source>Static methods declared in superinterfaces of the class or interface represented by this &lt;code&gt;Class&lt;/code&gt; object are not considered members of the class or interface.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトによって表されるクラスまたはインターフェースのスーパーインターフェースで宣言された静的メソッドは、クラスまたはインターフェースのメンバーとは見なされません。</target>
        </trans-unit>
        <trans-unit id="f0d78bb439c0ca80a9f95376b953190d4d14c679" translate="yes" xml:space="preserve">
          <source>Static methods from the JMX API.</source>
          <target state="translated">JMX APIの静的メソッド。</target>
        </trans-unit>
        <trans-unit id="07a2377904982021a58fbb1327a1ef3f22471167" translate="yes" xml:space="preserve">
          <source>Static methods from the JMX API. There are no instances of this class.</source>
          <target state="translated">JMX APIの静的メソッドです。このクラスのインスタンスはありません。</target>
        </trans-unit>
        <trans-unit id="542a8a4cedbfbb8d27750124466f3ce0828731af" translate="yes" xml:space="preserve">
          <source>Static methods may be called by using a class object as the target.</source>
          <target state="translated">静的なメソッドは、クラスオブジェクトをターゲットとして使用して呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="1e802d5ee990381b7b261227d2c9d8d382751834" translate="yes" xml:space="preserve">
          <source>Static methods such as &lt;a href=&quot;#checkIndex(int,int)&quot;&gt;&lt;code&gt;checkIndex(int, int)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#checkFromToIndex(int,int,int)&quot;&gt;&lt;code&gt;checkFromToIndex(int, int, int)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#checkFromIndexSize(int,int,int)&quot;&gt;&lt;code&gt;checkFromIndexSize(int, int, int)&lt;/code&gt;&lt;/a&gt; are provided for the convenience of checking if values corresponding to indexes and sub-ranges are out of bounds. Variations of these static methods support customization of the runtime exception, and corresponding exception detail message, that is thrown when values are out of bounds. Such methods accept a functional interface argument, instances of &lt;code&gt;BiFunction&lt;/code&gt;, that maps out-of-bound values to a runtime exception. Care should be taken when using such methods in combination with an argument that is a lambda expression, method reference or class that capture values. In such cases the cost of capture, related to functional interface allocation, may exceed the cost of checking bounds.</source>
          <target state="translated">&lt;a href=&quot;#checkIndex(int,int)&quot;&gt; &lt;code&gt;checkIndex(int, int)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#checkFromToIndex(int,int,int)&quot;&gt; &lt;code&gt;checkFromToIndex(int, int, int)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#checkFromIndexSize(int,int,int)&quot;&gt; &lt;code&gt;checkFromIndexSize(int, int, int)&lt;/code&gt; &lt;/a&gt;などの静的メソッドは、インデックスとサブ範囲に対応する値が範囲外かどうかをチェックするのに便利なように提供されています。これらの静的メソッドのバリエーションは、実行時例外のカスタマイズ、および値が範囲外の場合にスローされる対応する例外詳細メッセージをサポートします。このようなメソッドは、関数型インターフェース引数、 &lt;code&gt;BiFunction&lt;/code&gt; のインスタンスを受け入れます、範囲外の値を実行時例外にマップします。このようなメソッドをラムダ式、メソッド参照、または値をキャプチャするクラスである引数と組み合わせて使用​​する場合は注意が必要です。このような場合、機能インターフェイスの割り当てに関連するキャプチャのコストは、境界のチェックのコストを超える可能性があります。</target>
        </trans-unit>
        <trans-unit id="6c5e71ab543b8b2278169c39db282fd88d009224" translate="yes" xml:space="preserve">
          <source>Statically generated stubs are deprecated, since stubs are generated dynamically.</source>
          <target state="translated">スタブは動的に生成されるため、静的に生成されたスタブは非推奨です。</target>
        </trans-unit>
        <trans-unit id="1256501fdaa712ae5f1559e0c570473146bf3c3d" translate="yes" xml:space="preserve">
          <source>Statically generated stubs are deprecated, since stubs are generated dynamically. See &lt;a href=&quot;unicastremoteobject&quot;&gt;&lt;code&gt;UnicastRemoteObject&lt;/code&gt;&lt;/a&gt; for information about dynamic stub generation.</source>
          <target state="translated">スタブは動的に生成されるため、静的に生成されたスタブは非推奨になりました。動的スタブ生成については、&lt;a href=&quot;unicastremoteobject&quot;&gt; &lt;code&gt;UnicastRemoteObject&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b955d2e203609512995f791ea338b2fb98921193" translate="yes" xml:space="preserve">
          <source>Statically generated stubs are typically pregenerated from the remote object's class using the &lt;code&gt;rmic&lt;/code&gt; tool. A static stub is loaded and an instance of that stub class is constructed as described below.</source>
          <target state="translated">静的に生成されたスタブは、通常、 &lt;code&gt;rmic&lt;/code&gt; ツールを使用してリモートオブジェクトのクラスから事前に生成されます。静的スタブがロードされ、そのスタブクラスのインスタンスが以下のように構築されます。</target>
        </trans-unit>
        <trans-unit id="78061ebfea6d1ba786496dada0c130a278c3b8fd" translate="yes" xml:space="preserve">
          <source>Status byte for &lt;code&gt;MetaMessage&lt;/code&gt; (0xFF, or 255), which is used in MIDI files.</source>
          <target state="translated">MIDIファイルで使用される &lt;code&gt;MetaMessage&lt;/code&gt; （0xFF、または255）のステータスバイト。</target>
        </trans-unit>
        <trans-unit id="15ae9644867d0f1f8f87245012fcc42218889c16" translate="yes" xml:space="preserve">
          <source>Status byte for &lt;code&gt;MetaMessage&lt;/code&gt; (0xFF, or 255), which is used in MIDI files. It has the same value as &lt;a href=&quot;shortmessage#SYSTEM_RESET&quot;&gt;&lt;code&gt;ShortMessage.SYSTEM_RESET&lt;/code&gt;&lt;/a&gt;, which is used in the real-time &quot;MIDI wire&quot; protocol.</source>
          <target state="translated">MIDIファイルで使用される &lt;code&gt;MetaMessage&lt;/code&gt; （0xFF、または255）のステータスバイト。これは、リアルタイムの「MIDIワイヤー」プロトコルで使用される&lt;a href=&quot;shortmessage#SYSTEM_RESET&quot;&gt; &lt;code&gt;ShortMessage.SYSTEM_RESET&lt;/code&gt; &lt;/a&gt;と同じ値です。</target>
        </trans-unit>
        <trans-unit id="fe10577855afeadc4470f4f25d01735234486aed" translate="yes" xml:space="preserve">
          <source>Status byte for &lt;code&gt;MetaMessage&lt;/code&gt; (0xFF, or 255), which is used in MIDI files. It has the same value as SYSTEM_RESET, which is used in the real-time &quot;MIDI wire&quot; protocol.</source>
          <target state="translated">&lt;code&gt;MetaMessage&lt;/code&gt; のステータスバイト（0xFF、または255）。MIDIファイルで使用されます。これは、リアルタイムの「MIDIワイヤー」プロトコルで使用されるSYSTEM_RESETと同じ値です。</target>
        </trans-unit>
        <trans-unit id="9ad23752a1f1e4ddabf82629a8619ac4183e7be2" translate="yes" xml:space="preserve">
          <source>Status byte for Active Sensing message (0xFE, or 254).</source>
          <target state="translated">アクティブ・センシング・メッセージのステータス・バイト (0xFE、または 254)。</target>
        </trans-unit>
        <trans-unit id="3fb29867de2b7d8a8539684af9650dabcc653091" translate="yes" xml:space="preserve">
          <source>Status byte for Continue message (0xFB, or 251).</source>
          <target state="translated">コンティニューメッセージのステータスバイト(0xFB、または251)。</target>
        </trans-unit>
        <trans-unit id="bfd8220bcb1b73e3f8e9d3578f774da2c809550d" translate="yes" xml:space="preserve">
          <source>Status byte for End of System Exclusive message (0xF7, or 247).</source>
          <target state="translated">システム排他的終了メッセージ(0xF7、または 247)のステータスバイト。</target>
        </trans-unit>
        <trans-unit id="ec21aaf0cc42ebe5312ad3d1149f91afa676ca4b" translate="yes" xml:space="preserve">
          <source>Status byte for MIDI Song Select message (0xF3, or 243).</source>
          <target state="translated">MIDIソングセレクトメッセージのステータスバイト(0xF3、または243)。</target>
        </trans-unit>
        <trans-unit id="0bf39938cbc15f48f2026ba0cad436f9c56dfc05" translate="yes" xml:space="preserve">
          <source>Status byte for MIDI Time Code Quarter Frame message (0xF1, or 241).</source>
          <target state="translated">MIDI タイムコード・クォーター・フレーム・メッセージ(0xF1、または 241)のステータス・バイト。</target>
        </trans-unit>
        <trans-unit id="88ddfd86b1ae354a8ade9afc66f17a3d1fc84be7" translate="yes" xml:space="preserve">
          <source>Status byte for Song Position Pointer message (0xF2, or 242).</source>
          <target state="translated">Song Position Pointer メッセージのステータスバイト(0xF2、または 242)。</target>
        </trans-unit>
        <trans-unit id="5504a56c4c80c8b926ffbee7c696ab54f6fe05e1" translate="yes" xml:space="preserve">
          <source>Status byte for Special System Exclusive message (0xF7, or 247), which is used in MIDI files.</source>
          <target state="translated">MIDI ファイルで使用される Special System Exclusive メッセージ(0xF7、または 247)のステータスバイト。</target>
        </trans-unit>
        <trans-unit id="5f4b6365dd2d02b7958ab640b282f6c110c4f491" translate="yes" xml:space="preserve">
          <source>Status byte for Special System Exclusive message (0xF7, or 247), which is used in MIDI files. It has the same value as END_OF_EXCLUSIVE, which is used in the real-time &quot;MIDI wire&quot; protocol.</source>
          <target state="translated">MIDI ファイルで使用される Special System Exclusive メッセージ(0xF7、または 247)のステータスバイト。リアルタイムの &quot;MIDI Wire &quot;プロトコルで使用されるEND_OF_EXCLUSIVEと同じ値を持ちます。</target>
        </trans-unit>
        <trans-unit id="cfa476a540b006602c87dc9cf9d6c4400f5cf928" translate="yes" xml:space="preserve">
          <source>Status byte for Start message (0xFA, or 250).</source>
          <target state="translated">スタートメッセージのステータスバイト(0xFA、または 250)。</target>
        </trans-unit>
        <trans-unit id="246e36757189d87740980a7d822b6bdfbf956f1b" translate="yes" xml:space="preserve">
          <source>Status byte for Stop message (0xFC, or 252).</source>
          <target state="translated">停止メッセージのステータスバイト(0xFC、または 252)。</target>
        </trans-unit>
        <trans-unit id="42734e5d2d14420b5e5deb296dc9b9b1568148bd" translate="yes" xml:space="preserve">
          <source>Status byte for System Exclusive message (0xF0, or 240).</source>
          <target state="translated">システム排他的メッセージのステータスバイト(0xF0、または240)。</target>
        </trans-unit>
        <trans-unit id="d51f7dcc94575625cb5d6ac1abb75f4a9b82e814" translate="yes" xml:space="preserve">
          <source>Status byte for System Reset message (0xFF, or 255).</source>
          <target state="translated">システムリセットメッセージのステータスバイト(0xFF、または255)。</target>
        </trans-unit>
        <trans-unit id="08482aee38de7288ed8a0cf5732d5de56fccfa75" translate="yes" xml:space="preserve">
          <source>Status byte for Timing Clock message (0xF8, or 248).</source>
          <target state="translated">タイミングクロックメッセージのステータスバイト(0xF8、または248)。</target>
        </trans-unit>
        <trans-unit id="d0bb7cae1d918286880c99e8f646b1621f675036" translate="yes" xml:space="preserve">
          <source>Status byte for Tune Request message (0xF6, or 246).</source>
          <target state="translated">チューンリクエストメッセージのステータスバイト (0xF6、または 246)。</target>
        </trans-unit>
        <trans-unit id="cee757c43a8f253b12d3c0d9a77b957140d89a70" translate="yes" xml:space="preserve">
          <source>StdACChrominance</source>
          <target state="translated">StdACChrominance</target>
        </trans-unit>
        <trans-unit id="758eb63f8a62a38b27a9e620617a7594ce5ae0b6" translate="yes" xml:space="preserve">
          <source>StdACLuminance</source>
          <target state="translated">StdACLuminance</target>
        </trans-unit>
        <trans-unit id="dfd464fa7c1aeb8ba04d5a7901a85a154e3339ed" translate="yes" xml:space="preserve">
          <source>StdDCChrominance</source>
          <target state="translated">StdDCChrominance</target>
        </trans-unit>
        <trans-unit id="317d4ff17e8ac6fd49ec944819c51af1ec691866" translate="yes" xml:space="preserve">
          <source>StdDCLuminance</source>
          <target state="translated">StdDCLuminance</target>
        </trans-unit>
        <trans-unit id="6cd146ba3fdc9056b548099d216cfc8cd3bee420" translate="yes" xml:space="preserve">
          <source>Step 1: Locate providers in named modules.</source>
          <target state="translated">ステップ1:名前のついたモジュールの中からプロバイダを探します。</target>
        </trans-unit>
        <trans-unit id="9d63ef0a5234b82dba008f1577f7494cf9cc125d" translate="yes" xml:space="preserve">
          <source>Step 1: Recursive enumeration</source>
          <target state="translated">ステップ1:再帰的な列挙</target>
        </trans-unit>
        <trans-unit id="66b3aac7f2221d30febfe78d7d19c31f30cbd4b2" translate="yes" xml:space="preserve">
          <source>Step 2: Computing the readability graph</source>
          <target state="translated">ステップ2:可読性グラフの計算</target>
        </trans-unit>
        <trans-unit id="7d018a3c0248cd626d18d0c29f9b186468b7c2d2" translate="yes" xml:space="preserve">
          <source>Step 2: Locate providers in unnamed modules.</source>
          <target state="translated">ステップ2:名前のないモジュール内のプロバイダを探します。</target>
        </trans-unit>
        <trans-unit id="e890c8f198536f8a2914c94c6752a2ecf06852ae" translate="yes" xml:space="preserve">
          <source>Still inside timer action.</source>
          <target state="translated">まだ内側のタイマーアクション。</target>
        </trans-unit>
        <trans-unit id="68b8aa507bda16528a62cef30c3afced4b667c49" translate="yes" xml:space="preserve">
          <source>Stopping a connector server does not unregister it from its MBean server. A connector server once stopped cannot be restarted.</source>
          <target state="translated">コネクタサーバを停止しても、MBean サーバからの登録は解除されません。一度停止したコネクタサーバを再起動することはできません。</target>
        </trans-unit>
        <trans-unit id="611f11cc5462dfcdcdd87e3730c2d68e50069fe3" translate="yes" xml:space="preserve">
          <source>Stopping of threads via calls to the Thread &lt;code&gt;stop&lt;/code&gt; method</source>
          <target state="translated">Thread &lt;code&gt;stop&lt;/code&gt; メソッドの呼び出しによるスレッドの停止</target>
        </trans-unit>
        <trans-unit id="975c27ddfcb36160b7d6f1a143dc4353a93e08ab" translate="yes" xml:space="preserve">
          <source>Stops all threads in this thread group.</source>
          <target state="translated">このスレッドグループのすべてのスレッドを停止します。</target>
        </trans-unit>
        <trans-unit id="4087b8ca63a3af7755002452469d18db062afb0f" translate="yes" xml:space="preserve">
          <source>Stops dispatching events using this &lt;code&gt;EventQueue&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;EventQueue&lt;/code&gt; を使用したイベントのディスパッチを停止します。</target>
        </trans-unit>
        <trans-unit id="ced8a17e59eff0895dd692da6d1842b234e6c626" translate="yes" xml:space="preserve">
          <source>Stops dispatching events using this &lt;code&gt;EventQueue&lt;/code&gt;. Any pending events are transferred to the previous &lt;code&gt;EventQueue&lt;/code&gt; for processing.</source>
          <target state="translated">この &lt;code&gt;EventQueue&lt;/code&gt; を使用したイベントのディスパッチを停止します。保留中のイベントはすべて、処理のために前の &lt;code&gt;EventQueue&lt;/code&gt; に転送されます。</target>
        </trans-unit>
        <trans-unit id="6bbbf6448db3ca487922bc038e503a6c20c4f630" translate="yes" xml:space="preserve">
          <source>Stops displaying the progress.</source>
          <target state="translated">進捗状況の表示を停止します。</target>
        </trans-unit>
        <trans-unit id="59a8612188b1137fc87f7bb80a5b8157823017ae" translate="yes" xml:space="preserve">
          <source>Stops editing and returns true to indicate that editing has stopped.</source>
          <target state="translated">編集を停止し、編集が停止したことを示すtrueを返します。</target>
        </trans-unit>
        <trans-unit id="f45365d2542b92048a042fdbb3adfa72804cfb93" translate="yes" xml:space="preserve">
          <source>Stops editing and returns true to indicate that editing has stopped. This method calls &lt;code&gt;fireEditingStopped&lt;/code&gt;.</source>
          <target state="translated">編集を停止し、trueを返し、編集が停止したことを示します。このメソッドは &lt;code&gt;fireEditingStopped&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="ac4ef69d5d825ba05bfd7f5f256527c1c4e0f05d" translate="yes" xml:space="preserve">
          <source>Stops further processing of a print job.</source>
          <target state="translated">印刷ジョブの処理を停止します。</target>
        </trans-unit>
        <trans-unit id="b768d825ab97ac747baaecdd48cec040c4d8e87c" translate="yes" xml:space="preserve">
          <source>Stops playing this audio clip.</source>
          <target state="translated">このオーディオクリップの再生を停止します。</target>
        </trans-unit>
        <trans-unit id="f9d14bf55682a97e0661fcd3c6c0d8775f168621" translate="yes" xml:space="preserve">
          <source>Stops recording, if active, and playback of the currently loaded sequence, if any.</source>
          <target state="translated">アクティブな場合は録画を停止し、現在ロードされているシーケンスがある場合は再生を停止します。</target>
        </trans-unit>
        <trans-unit id="e958ca40636bca950acaa49dbc6e6a06d8d8303d" translate="yes" xml:space="preserve">
          <source>Stops recording, if active.</source>
          <target state="translated">アクティブな場合は録画を停止します。</target>
        </trans-unit>
        <trans-unit id="c19127d4b0c1b71808ff290795d428e5976b8d60" translate="yes" xml:space="preserve">
          <source>Stops recording, if active. Playback of the current sequence continues.</source>
          <target state="translated">アクティブな場合は、録画を停止します。現在のシーケンスの再生を継続します。</target>
        </trans-unit>
        <trans-unit id="888435d158991ed4f6ea087345cd0c26625bd28e" translate="yes" xml:space="preserve">
          <source>Stops the &lt;code&gt;Timer&lt;/code&gt;, causing it to stop sending action events to its listeners.</source>
          <target state="translated">停止し &lt;code&gt;Timer&lt;/code&gt; し、リスナーへのアクションイベントの送信を停止させます。</target>
        </trans-unit>
        <trans-unit id="8f4847c3dc9ec7f0bc26513a00cd96d36cbf8170" translate="yes" xml:space="preserve">
          <source>Stops the animation thread.</source>
          <target state="translated">アニメーションスレッドを停止します。</target>
        </trans-unit>
        <trans-unit id="5e8842edce56915aabf36fd5c49d3c90d8fdf238" translate="yes" xml:space="preserve">
          <source>Stops the animation thread. This method is invoked when the indeterminate animation should be stopped. Reasons for this may include:</source>
          <target state="translated">アニメーションスレッドを停止します。このメソッドは、不確定なアニメーションを停止すべきときに呼び出されます。その理由としては、以下のようなものが考えられます。</target>
        </trans-unit>
        <trans-unit id="1c1355e0393e240908c361a743bc771c81373b73" translate="yes" xml:space="preserve">
          <source>Stops the counter monitor.</source>
          <target state="translated">カウンターモニターを停止します。</target>
        </trans-unit>
        <trans-unit id="305a24d60a6973e8295ee79de74a5f786b359de6" translate="yes" xml:space="preserve">
          <source>Stops the current editing session.</source>
          <target state="translated">現在の編集セッションを停止します。</target>
        </trans-unit>
        <trans-unit id="470190613b6b2dc7b31ae689f7b9cef7a10823a1" translate="yes" xml:space="preserve">
          <source>Stops the current editing session. This has no effect if the tree isn't being edited. Returns true if the editor allows the editing session to stop.</source>
          <target state="translated">現在の編集セッションを停止します。ツリーが編集されていない場合は何も影響しません。エディタが編集セッションの停止を許可している場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="56f8d874c8d04bf3b845df1ad40f2d38a6e92ed9" translate="yes" xml:space="preserve">
          <source>Stops the editing session.</source>
          <target state="translated">編集セッションを停止します。</target>
        </trans-unit>
        <trans-unit id="9e82294d271658fa329262f9181a04b3cedf10e1" translate="yes" xml:space="preserve">
          <source>Stops the editing session. If &lt;code&gt;messageStop&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; the editor is messaged with &lt;code&gt;stopEditing&lt;/code&gt;, if &lt;code&gt;messageCancel&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; the editor is messaged with &lt;code&gt;cancelEditing&lt;/code&gt;. If &lt;code&gt;messageTree&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; the &lt;code&gt;treeModel&lt;/code&gt; is messaged with &lt;code&gt;valueForPathChanged&lt;/code&gt;.</source>
          <target state="translated">編集セッションを停止します。場合 &lt;code&gt;messageStop&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; エディタを使ってメッセージが送られ &lt;code&gt;stopEditing&lt;/code&gt; 、場合 &lt;code&gt;messageCancel&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; のエディタを使ってメッセージが送られる &lt;code&gt;cancelEditing&lt;/code&gt; 。場合 &lt;code&gt;messageTree&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; &lt;code&gt;treeModel&lt;/code&gt; 使ってメッセージが送られ &lt;code&gt;valueForPathChanged&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1702ab2823981e3816dc2ea153cd03b79f785d9a" translate="yes" xml:space="preserve">
          <source>Stops the gauge monitor.</source>
          <target state="translated">ゲージモニターを停止します。</target>
        </trans-unit>
        <trans-unit id="85d0c5672c033d478469a1d0abd1cb05cdf09e64" translate="yes" xml:space="preserve">
          <source>Stops the line.</source>
          <target state="translated">ラインを止める。</target>
        </trans-unit>
        <trans-unit id="2d3205b60bfc0520589e55602d6fd10b8a95fbcb" translate="yes" xml:space="preserve">
          <source>Stops the line. A stopped line should cease I/O activity. If the line is open and running, however, it should retain the resources required to resume activity. A stopped line should retain any audio data in its buffer instead of discarding it, so that upon resumption the I/O can continue where it left off, if possible. (This doesn't guarantee that there will never be discontinuities beyond the current buffer, of course; if the stopped condition continues for too long, input or output samples might be dropped.) If desired, the retained data can be discarded by invoking the &lt;code&gt;flush&lt;/code&gt; method. When audio capture or playback stops, a &lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt; event is generated.</source>
          <target state="translated">回線を停止します。停止した回線はI / Oアクティビティを停止する必要があります。ただし、回線が開いて実行されている場合は、アクティビティを再開するために必要なリソースを保持する必要があります。停止した回線は、オーディオデータを破棄するのではなく、バッファに保持する必要があります。これにより、再開時に、可能であればI / Oを中断したところから続行できます。 （もちろん、これは現在のバッファーを超えて不連続性が発生しないことを保証するものではありません。停止状態が長すぎると、入力または出力サンプルがドロップされる可能性があります。）必要に応じて、保持されたデータを呼び出すことで破棄できます。 &lt;code&gt;flush&lt;/code&gt; 方式。オーディオのキャプチャまたは再生が停止すると、&lt;a href=&quot;lineevent.type#STOP&quot;&gt; &lt;code&gt;STOP&lt;/code&gt; &lt;/a&gt;イベントが生成されます。</target>
        </trans-unit>
        <trans-unit id="46c66f02d0287f793023a08a65e59dad400e8349" translate="yes" xml:space="preserve">
          <source>Stops the line. A stopped line should cease I/O activity. If the line is open and running, however, it should retain the resources required to resume activity. A stopped line should retain any audio data in its buffer instead of discarding it, so that upon resumption the I/O can continue where it left off, if possible. (This doesn't guarantee that there will never be discontinuities beyond the current buffer, of course; if the stopped condition continues for too long, input or output samples might be dropped.) If desired, the retained data can be discarded by invoking the &lt;code&gt;flush&lt;/code&gt; method. When audio capture or playback stops, a &lt;code&gt;&lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; event is generated.</source>
          <target state="translated">ラインを停止します。停止したラインは、I / Oアクティビティを停止します。ただし、回線が開いていて稼働している場合は、アクティビティを再開するために必要なリソースを保持する必要があります。停止したラインは、オーディオデータを破棄せずにバッファーに保持する必要があります。これにより、再開時に、可能な場合は中断したところからI / Oを続行できます。 （これはもちろん、現在のバッファーを超えて不連続性がなくなることを保証するものではありません。停止状態が長すぎると、入力または出力サンプルが削除される可能性があります。）必要に応じて、保持されているデータを破棄して破棄できます。 &lt;code&gt;flush&lt;/code&gt; メソッド。オーディオのキャプチャまたは再生が停止すると、 &lt;code&gt;&lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; イベントが生成されます。</target>
        </trans-unit>
        <trans-unit id="f57edf442c085f7f0ecf70f94da8a8ae3a444cfb" translate="yes" xml:space="preserve">
          <source>Stops the monitor.</source>
          <target state="translated">モニターを停止させます。</target>
        </trans-unit>
        <trans-unit id="3cfda91860d7075327a1c1edfc1fc29aff4332a7" translate="yes" xml:space="preserve">
          <source>Stops the string monitor.</source>
          <target state="translated">文字列モニターを停止します。</target>
        </trans-unit>
        <trans-unit id="fb0713b3a8e511e95638c9e466e15cdda08a2fea" translate="yes" xml:space="preserve">
          <source>Stops the timer.</source>
          <target state="translated">タイマーを停止します。</target>
        </trans-unit>
        <trans-unit id="51c1df704bafb2160285e8bd44141449ccedf07d" translate="yes" xml:space="preserve">
          <source>Storage for files.</source>
          <target state="translated">ファイル用のストレージ。</target>
        </trans-unit>
        <trans-unit id="9c001d35e213b2c22548da0b00a73e87cd8713fc" translate="yes" xml:space="preserve">
          <source>Storage for files. A &lt;code&gt;FileStore&lt;/code&gt; represents a storage pool, device, partition, volume, concrete file system or other implementation specific means of file storage. The &lt;code&gt;FileStore&lt;/code&gt; for where a file is stored is obtained by invoking the &lt;a href=&quot;files#getFileStore(java.nio.file.Path)&quot;&gt;&lt;code&gt;getFileStore&lt;/code&gt;&lt;/a&gt; method, or all file stores can be enumerated by invoking the &lt;a href=&quot;filesystem#getFileStores()&quot;&gt;&lt;code&gt;getFileStores&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ファイルのストレージ。A &lt;code&gt;FileStore&lt;/code&gt; ストレージ・プール、デバイス、パーティション、ボリューム、具体的なファイル・システムまたはファイル記憶装置の他の実装の特定の手段を表します。 &lt;code&gt;FileStore&lt;/code&gt; ファイルが格納されている場所のためには、呼び出すことによって得られる&lt;a href=&quot;files#getFileStore(java.nio.file.Path)&quot;&gt; &lt;code&gt;getFileStore&lt;/code&gt; の&lt;/a&gt;方法、またはすべてのファイルストアを呼び出すことによって列挙することができる&lt;a href=&quot;filesystem#getFileStores()&quot;&gt; &lt;code&gt;getFileStores&lt;/code&gt; の&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="515635911b42913b826d3e29cce235a6649433c9" translate="yes" xml:space="preserve">
          <source>Storage for files. A &lt;code&gt;FileStore&lt;/code&gt; represents a storage pool, device, partition, volume, concrete file system or other implementation specific means of file storage. The &lt;code&gt;FileStore&lt;/code&gt; for where a file is stored is obtained by invoking the &lt;a href=&quot;files#getFileStore-java.nio.file.Path-&quot;&gt;&lt;code&gt;getFileStore&lt;/code&gt;&lt;/a&gt; method, or all file stores can be enumerated by invoking the &lt;a href=&quot;filesystem#getFileStores--&quot;&gt;&lt;code&gt;getFileStores&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ファイルのストレージ。A &lt;code&gt;FileStore&lt;/code&gt; ストレージ・プール、デバイス、パーティション、ボリューム、具体的なファイル・システムまたはファイル記憶装置の他の実装の特定の手段を表します。 &lt;code&gt;FileStore&lt;/code&gt; ファイルが格納されている場所のためには、呼び出すことによって得られる&lt;a href=&quot;files#getFileStore-java.nio.file.Path-&quot;&gt; &lt;code&gt;getFileStore&lt;/code&gt; の&lt;/a&gt;方法、またはすべてのファイルストアを呼び出すことによって列挙することができる&lt;a href=&quot;filesystem#getFileStores--&quot;&gt; &lt;code&gt;getFileStores&lt;/code&gt; の&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="79e84f15bb2ed5bd2ba9a540d5f2330a9a807522" translate="yes" xml:space="preserve">
          <source>Store a &lt;code&gt;LogRecord&lt;/code&gt; in an internal buffer.</source>
          <target state="translated">保管し &lt;code&gt;LogRecord&lt;/code&gt; 内部バッファに。</target>
        </trans-unit>
        <trans-unit id="2a2c160aba4c99e1f150cb949eb141acf42180b0" translate="yes" xml:space="preserve">
          <source>Store the MBean if 'persistPolicy' field is:</source>
          <target state="translated">persistPolicy' フィールドが有効な場合に MBean を格納します。</target>
        </trans-unit>
        <trans-unit id="5638ed2c7a68a209c98791d550bb0ff88b3936ef" translate="yes" xml:space="preserve">
          <source>Stores an object in the developer defaults.</source>
          <target state="translated">開発者のデフォルトにオブジェクトを格納します。</target>
        </trans-unit>
        <trans-unit id="77dd955df51205af6c65d844fce6c24bba21a78b" translate="yes" xml:space="preserve">
          <source>Stores an object in the developer defaults. This is a cover method for &lt;code&gt;getDefaults().put(key, value)&lt;/code&gt;. This only effects the developer defaults, not the system or look and feel defaults.</source>
          <target state="translated">開発者のデフォルトでオブジェクトを格納します。これは、 &lt;code&gt;getDefaults().put(key, value)&lt;/code&gt; カバーメソッドです。これは開発者のデフォルトにのみ影響し、システムやルックアンドフィールのデフォルトには影響しません。</target>
        </trans-unit>
        <trans-unit id="9449681b810c9187b889d9fef3d946cdb796297d" translate="yes" xml:space="preserve">
          <source>Stores document changes as the document is being modified.</source>
          <target state="translated">ドキュメントの変更を保存します。</target>
        </trans-unit>
        <trans-unit id="d397399f700e237eb49b332032dcf1e473bf74bf" translate="yes" xml:space="preserve">
          <source>Stores document changes as the document is being modified. Can subsequently be used for change notification when done with the document modification transaction. This is used by the AbstractDocument class and its extensions for broadcasting change information to the document listeners.</source>
          <target state="translated">文書が変更されているときに、文書の変更を保存します。その後、文書変更トランザクションで変更が完了したときに、変更通知に使用することができます。これは、AbstractDocument クラスとその拡張機能によって、変更情報を文書リスナーにブロードキャストするために使用されます。</target>
        </trans-unit>
        <trans-unit id="a6f936e0326821dfb9ab55dda952ad49cb2c1134" translate="yes" xml:space="preserve">
          <source>Stores the bounds of the component just before a maximize call.</source>
          <target state="translated">最大化呼び出しの直前にコンポーネントの境界を格納します。</target>
        </trans-unit>
        <trans-unit id="82550edd6655b74065c5fd1433300ecaec521c62" translate="yes" xml:space="preserve">
          <source>Stores the bounds of this component into &quot;return value&quot; &lt;b&gt;rv&lt;/b&gt; and return &lt;b&gt;rv&lt;/b&gt;.</source>
          <target state="translated">「戻り値」に格納し、このコンポーネントの境界を&lt;b&gt;RV&lt;/b&gt;とリターン&lt;b&gt;RV&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="661b742ffd44470554c4921ee4fb90065290ac08" translate="yes" xml:space="preserve">
          <source>Stores the bounds of this component into &quot;return value&quot; &lt;b&gt;rv&lt;/b&gt; and return &lt;b&gt;rv&lt;/b&gt;. If rv is &lt;code&gt;null&lt;/code&gt; a new &lt;code&gt;Rectangle&lt;/code&gt; is allocated. This version of &lt;code&gt;getBounds&lt;/code&gt; is useful if the caller wants to avoid allocating a new &lt;code&gt;Rectangle&lt;/code&gt; object on the heap.</source>
          <target state="translated">「戻り値」に格納し、このコンポーネントの境界を&lt;b&gt;RV&lt;/b&gt;とリターン&lt;b&gt;RV&lt;/b&gt;。rvが &lt;code&gt;null&lt;/code&gt; の場合、新しい &lt;code&gt;Rectangle&lt;/code&gt; が割り当てられます。このバージョンの &lt;code&gt;getBounds&lt;/code&gt; は、呼び出し元がヒープに新しい &lt;code&gt;Rectangle&lt;/code&gt; オブジェクトを割り当てないようにする場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="fd211575309ea81859462d52f8d26c52d176041b" translate="yes" xml:space="preserve">
          <source>Stores the bounds of this component into &quot;return value&quot; &lt;code&gt;rv&lt;/code&gt; and returns &lt;code&gt;rv&lt;/code&gt;.</source>
          <target state="translated">「戻り値」に格納し、このコンポーネントの境界を &lt;code&gt;rv&lt;/code&gt; 戻り &lt;code&gt;rv&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3bbcaa61a108c89b3c1196e05c135a3f8346c84" translate="yes" xml:space="preserve">
          <source>Stores the bounds of this component into &quot;return value&quot; &lt;code&gt;rv&lt;/code&gt; and returns &lt;code&gt;rv&lt;/code&gt;. If &lt;code&gt;rv&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; a new &lt;code&gt;Rectangle&lt;/code&gt; is allocated. This version of &lt;code&gt;getBounds&lt;/code&gt; is useful if the caller wants to avoid allocating a new &lt;code&gt;Rectangle&lt;/code&gt; object on the heap.</source>
          <target state="translated">「戻り値」に格納し、このコンポーネントの境界を &lt;code&gt;rv&lt;/code&gt; 戻り &lt;code&gt;rv&lt;/code&gt; 。 &lt;code&gt;rv&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、新しい &lt;code&gt;Rectangle&lt;/code&gt; が割り当てられます。このバージョンの &lt;code&gt;getBounds&lt;/code&gt; は、呼び出し元がヒープに新しい &lt;code&gt;Rectangle&lt;/code&gt; オブジェクトを割り当てないようにする場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="484e5b4782ee2ba189d198fa24628a61e01d6143" translate="yes" xml:space="preserve">
          <source>Stores the contents of the model into the given stream.</source>
          <target state="translated">モデルの内容を与えられたストリームに格納します。</target>
        </trans-unit>
        <trans-unit id="147c2a7a1ee8e53cc27b7866e44dec4f38c29b21" translate="yes" xml:space="preserve">
          <source>Stores the contents of the model into the given stream. By default this will store the model as plain text.</source>
          <target state="translated">モデルの内容を指定されたストリームに格納します。デフォルトでは、モデルをプレーンテキストとして保存します。</target>
        </trans-unit>
        <trans-unit id="c317f8171a03cc756218dffd1edf172d7ccdf353" translate="yes" xml:space="preserve">
          <source>Stores the listeners on this model.</source>
          <target state="translated">このモデルのリスナーを格納します。</target>
        </trans-unit>
        <trans-unit id="94edd6860003fa192f5bf38f55d84f0ca77e1e35" translate="yes" xml:space="preserve">
          <source>Stores the position and size of the bouncing box that would be painted for the current animation index in &lt;code&gt;r&lt;/code&gt; and returns &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="translated">店舗の位置との現在のアニメーションインデックスのために描かれることになるバウンスボックスの大きさ &lt;code&gt;r&lt;/code&gt; とリターン &lt;code&gt;r&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e1b04df1aaf437922a9c22a3250ee1c5d118c39" translate="yes" xml:space="preserve">
          <source>Stores the position and size of the bouncing box that would be painted for the current animation index in &lt;code&gt;r&lt;/code&gt; and returns &lt;code&gt;r&lt;/code&gt;. Subclasses that add to the painting performed in this class's implementation of &lt;code&gt;paintIndeterminate&lt;/code&gt; -- to draw an outline around the bouncing box, for example -- can use this method to get the location of the bouncing box that was just painted. By overriding this method, you have complete control over the size and position of the bouncing box, without having to reimplement &lt;code&gt;paintIndeterminate&lt;/code&gt;.</source>
          <target state="translated">店舗の位置との現在のアニメーションインデックスのために描かれることになるバウンスボックスの大きさ &lt;code&gt;r&lt;/code&gt; とリターン &lt;code&gt;r&lt;/code&gt; 。このクラスの &lt;code&gt;paintIndeterminate&lt;/code&gt; の実装で実行されるペイントに追加するサブクラス（たとえば、バウンスボックスの周囲にアウトラインを描画するため）は、このメソッドを使用して、ペイントされたばかりのバウンスボックスの場所を取得できます。このメソッドをオーバーライドすることにより、 &lt;code&gt;paintIndeterminate&lt;/code&gt; を再実装することなく、バウンスボックスのサイズと位置を完全に制御できます。</target>
        </trans-unit>
        <trans-unit id="bff27d6f7ca775f281940bbe16028237d5593141" translate="yes" xml:space="preserve">
          <source>Stores the position and size of the inner painting area of the specified component in &lt;code&gt;r&lt;/code&gt; and returns &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="translated">店舗で指定されたコンポーネントの内側塗装領域の位置及び大きさ &lt;code&gt;r&lt;/code&gt; 及びリターン &lt;code&gt;r&lt;/code&gt; は。</target>
        </trans-unit>
        <trans-unit id="7faf7f1c27b63ba2c410145694ffda4c08ea55f5" translate="yes" xml:space="preserve">
          <source>Stores the position and size of the inner painting area of the specified component in &lt;code&gt;r&lt;/code&gt; and returns &lt;code&gt;r&lt;/code&gt;. The position and size specify the bounds of the component, adjusted so as not to include the border area (the insets). This method is useful for classes that implement painting code.</source>
          <target state="translated">店舗で指定されたコンポーネントの内側塗装領域の位置及び大きさ &lt;code&gt;r&lt;/code&gt; 及びリターン &lt;code&gt;r&lt;/code&gt; は。位置とサイズはコンポーネントの境界を指定し、境界領域（挿入図）を含まないように調整されます。このメソッドは、ペイントコードを実装するクラスに役立ちます。</target>
        </trans-unit>
        <trans-unit id="32475afbc6aadff1cc1012e908304bed5c57d059" translate="yes" xml:space="preserve">
          <source>Stores the width/height of this component into &quot;return value&quot; &lt;b&gt;rv&lt;/b&gt; and return &lt;b&gt;rv&lt;/b&gt;.</source>
          <target state="translated">このコンポーネントの幅/高さを「戻り値」&lt;b&gt;rv&lt;/b&gt;と戻り値&lt;b&gt;rvに格納し&lt;/b&gt;ます。</target>
        </trans-unit>
        <trans-unit id="6d71b9a0b89b9f999bf7a7114bfb5c3abd2defd2" translate="yes" xml:space="preserve">
          <source>Stores the width/height of this component into &quot;return value&quot; &lt;b&gt;rv&lt;/b&gt; and return &lt;b&gt;rv&lt;/b&gt;. If rv is &lt;code&gt;null&lt;/code&gt; a new &lt;code&gt;Dimension&lt;/code&gt; object is allocated. This version of &lt;code&gt;getSize&lt;/code&gt; is useful if the caller wants to avoid allocating a new &lt;code&gt;Dimension&lt;/code&gt; object on the heap.</source>
          <target state="translated">このコンポーネントの幅/高さを「戻り値」&lt;b&gt;rv&lt;/b&gt;と戻り値&lt;b&gt;rvに格納し&lt;/b&gt;ます。rvが &lt;code&gt;null&lt;/code&gt; の場合、新しい &lt;code&gt;Dimension&lt;/code&gt; オブジェクトが割り当てられます。このバージョンの &lt;code&gt;getSize&lt;/code&gt; は、呼び出し元がヒープに新しい &lt;code&gt;Dimension&lt;/code&gt; オブジェクトを割り当てないようにする場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="008172ed68e42056fc92898af84b68c8785aca3b" translate="yes" xml:space="preserve">
          <source>Stores the width/height of this component into &quot;return value&quot; &lt;code&gt;rv&lt;/code&gt; and returns &lt;code&gt;rv&lt;/code&gt;.</source>
          <target state="translated">店舗「戻り値」には、このコンポーネントの幅/高さ &lt;code&gt;rv&lt;/code&gt; 戻る &lt;code&gt;rv&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1164fc807a87fc5254004c43ff3d3b4fd8450cdc" translate="yes" xml:space="preserve">
          <source>Stores the width/height of this component into &quot;return value&quot; &lt;code&gt;rv&lt;/code&gt; and returns &lt;code&gt;rv&lt;/code&gt;. If &lt;code&gt;rv&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; a new &lt;code&gt;Dimension&lt;/code&gt; object is allocated. This version of &lt;code&gt;getSize&lt;/code&gt; is useful if the caller wants to avoid allocating a new &lt;code&gt;Dimension&lt;/code&gt; object on the heap.</source>
          <target state="translated">店舗「戻り値」には、このコンポーネントの幅/高さ &lt;code&gt;rv&lt;/code&gt; 戻る &lt;code&gt;rv&lt;/code&gt; 。 &lt;code&gt;rv&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、新しい &lt;code&gt;Dimension&lt;/code&gt; オブジェクトが割り当てられます。このバージョンの &lt;code&gt;getSize&lt;/code&gt; は、呼び出し元がヒープに新しい &lt;code&gt;Dimension&lt;/code&gt; オブジェクトを割り当てないようにする場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="ef079e6d6166f370a87a171da4522c88a10ea3f7" translate="yes" xml:space="preserve">
          <source>Stores the x,y origin of this component into &quot;return value&quot; &lt;b&gt;rv&lt;/b&gt; and return &lt;b&gt;rv&lt;/b&gt;.</source>
          <target state="translated">店舗X、「戻り値」には、このコンポーネントのY原点&lt;b&gt;RV&lt;/b&gt;とリターン&lt;b&gt;RV&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="20631009dd006918f02d18af73e9c1ddac76267c" translate="yes" xml:space="preserve">
          <source>Stores the x,y origin of this component into &quot;return value&quot; &lt;b&gt;rv&lt;/b&gt; and return &lt;b&gt;rv&lt;/b&gt;. If rv is &lt;code&gt;null&lt;/code&gt; a new &lt;code&gt;Point&lt;/code&gt; is allocated. This version of &lt;code&gt;getLocation&lt;/code&gt; is useful if the caller wants to avoid allocating a new &lt;code&gt;Point&lt;/code&gt; object on the heap.</source>
          <target state="translated">店舗X、「戻り値」には、このコンポーネントのY原点&lt;b&gt;RV&lt;/b&gt;とリターン&lt;b&gt;RV&lt;/b&gt;。rvが &lt;code&gt;null&lt;/code&gt; の場合、新しい &lt;code&gt;Point&lt;/code&gt; が割り当てられます。このバージョンの &lt;code&gt;getLocation&lt;/code&gt; は、呼び出し元がヒープに新しい &lt;code&gt;Point&lt;/code&gt; オブジェクトを割り当てないようにする場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="6a7d94358f64f5779194898691529c25f049d30a" translate="yes" xml:space="preserve">
          <source>Stores the x,y origin of this component into &quot;return value&quot; &lt;code&gt;rv&lt;/code&gt; and returns &lt;code&gt;rv&lt;/code&gt;.</source>
          <target state="translated">店舗X、「戻り値」には、このコンポーネントのY原点 &lt;code&gt;rv&lt;/code&gt; 戻る &lt;code&gt;rv&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d076af8287b0dd709e7bfd510351ce5cdadc1f8" translate="yes" xml:space="preserve">
          <source>Stores the x,y origin of this component into &quot;return value&quot; &lt;code&gt;rv&lt;/code&gt; and returns &lt;code&gt;rv&lt;/code&gt;. If &lt;code&gt;rv&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; a new &lt;code&gt;Point&lt;/code&gt; is allocated. This version of &lt;code&gt;getLocation&lt;/code&gt; is useful if the caller wants to avoid allocating a new &lt;code&gt;Point&lt;/code&gt; object on the heap.</source>
          <target state="translated">店舗X、「戻り値」には、このコンポーネントのY原点 &lt;code&gt;rv&lt;/code&gt; 戻る &lt;code&gt;rv&lt;/code&gt; 。 &lt;code&gt;rv&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、新しい &lt;code&gt;Point&lt;/code&gt; が割り当てられます。このバージョンの &lt;code&gt;getLocation&lt;/code&gt; は、呼び出し元がヒープに新しい &lt;code&gt;Point&lt;/code&gt; オブジェクトを割り当てないようにする場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="9a3753fffcdb3deb984b61b8fdc5fd46f9de5c7b" translate="yes" xml:space="preserve">
          <source>Stores this keystore to the given output stream, and protects its integrity with the given password.</source>
          <target state="translated">この鍵ストアを指定された出力ストリームに格納し、指定されたパスワードでその整合性を保護します。</target>
        </trans-unit>
        <trans-unit id="3a512bdf66a54122e1954256af19158e557d8e7f" translate="yes" xml:space="preserve">
          <source>Stores this keystore using the given &lt;code&gt;KeyStore.LoadStoreParmeter&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;KeyStore.LoadStoreParmeter&lt;/code&gt; を使用してこのキーストアを格納します。</target>
        </trans-unit>
        <trans-unit id="804811a8fc6a2b78d7a874f373a5ceced15e66ab" translate="yes" xml:space="preserve">
          <source>Stores this keystore using the given &lt;code&gt;LoadStoreParameter&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;LoadStoreParameter&lt;/code&gt; を使用してこのキーストアを格納します。</target>
        </trans-unit>
        <trans-unit id="97671dc516693be1b2591c6c27e27fab691fe4c3" translate="yes" xml:space="preserve">
          <source>Storing the dimensions internally in common units of &amp;micro;m lets two size attributes be compared without regard to the units in which they were created; for example, 8.5 in will compare equal to 215.9 mm, as they both are stored as 215900 &amp;micro;m. For example, a lookup service can match resolution attributes based on equality of their serialized representations regardless of the units in which they were created. Using integers for internal storage allows precise equality comparisons to be done, which would not be guaranteed if an internal floating point representation were used. Note that if you're looking for &lt;code&gt;U.S. letter&lt;/code&gt; sized media in metric units, you have to search for a media size of 215.9 x 279.4 mm; rounding off to an integral 216 x 279 mm will not match.</source>
          <target state="translated">寸法を&amp;micro;mの一般的な単位で内部的に保存すると、作成された単位に関係なく、2つのサイズ属性を比較できます。たとえば、8.5インチは両方とも215900 &amp;micro;mとして保存されるため、215.9mmに相当します。たとえば、ルックアップサービスは、作成されたユニットに関係なく、シリアル化された表現の同等性に基づいて解決属性を照合できます。内部ストレージに整数を使用すると、正確な等価比較を実行できます。これは、内部浮動小数点表現が使用された場合は保証されません。メートル単位で &lt;code&gt;U.S. letter&lt;/code&gt; サイズのメディアを探している場合は、215.9 x 279.4mmのメディアサイズを検索する必要があることに注意してください。 216 x 279mmの整数に四捨五入しても一致しません。</target>
        </trans-unit>
        <trans-unit id="9b427915b2946ba5414f41f145afd680618835d3" translate="yes" xml:space="preserve">
          <source>Storing the dimensions internally in common units of &amp;micro;m lets two size attributes be compared without regard to the units in which they were created; for example, 8.5 in will compare equal to 215.9 mm, as they both are stored as 215900 &amp;micro;m. For example, a lookup service can match resolution attributes based on equality of their serialized representations regardless of the units in which they were created. Using integers for internal storage allows precise equality comparisons to be done, which would not be guaranteed if an internal floating point representation were used. Note that if you're looking for U.S. letter sized media in metric units, you have to search for a media size of 215.9 x 279.4 mm; rounding off to an integral 216 x 279 mm will not match.</source>
          <target state="translated">寸法を&amp;micro;mの一般的な単位で内部的に保存すると、2つのサイズ属性を、それらが作成された単位に関係なく比較できます。たとえば、8.5インチはどちらも215900 &amp;micro;mとして保存されるため、215.9 mmに相当します。たとえば、検索サービスは、作成された単位に関係なく、シリアル化された表現の同等性に基づいて解決属性を照合できます。内部ストレージに整数を使用すると、正確な等価比較を行うことができます。これは、内部浮動小数点表現が使用された場合には保証されません。米国のレターサイズのメディアをメートル単位で検索する場合は、215.9 x 279.4 mmのメディアサイズを検索する必要があることに注意してください。216 x 279 mmの整数に丸めると一致しません。</target>
        </trans-unit>
        <trans-unit id="db046535c4d92e8e0e5edb978430ee296b3c7d3d" translate="yes" xml:space="preserve">
          <source>Storing the values internally in common units of dphi lets two resolution attributes be compared without regard to the units in which they were created; for example, 300 dpcm will compare equal to 762 dpi, as they both are stored as 76200 dphi. In particular, a lookup service can match resolution attributes based on equality of their serialized representations regardless of the units in which they were created. Again, using integers for internal storage allows precise equality comparisons to be done, which would not be guaranteed if a floating point representation were used.</source>
          <target state="translated">例えば、300 dpcm は 76200 dphi として保存されているため、762 dpi と同等に比較することができる。特に、ルックアップサービスは、作成された単位に関係なく、直列化された表現の等しさに基づいて解像度属性を照合することができます。ここでも、内部ストレージに整数を使用することで、浮動小数点表現が使用されている場合には保証されない正確な等値比較を行うことができます。</target>
        </trans-unit>
        <trans-unit id="8fccd0b5065d791c295f17066b281e9372fb4c92" translate="yes" xml:space="preserve">
          <source>Strategy for adjusting a temporal object.</source>
          <target state="translated">一時的なオブジェクトを調整するための戦略。</target>
        </trans-unit>
        <trans-unit id="d21f9df13e546e14513c9d7c34aa45636eb268a9" translate="yes" xml:space="preserve">
          <source>Strategy for maintaining the physical form of the flow.</source>
          <target state="translated">流れの物理的な形を維持するための戦略。</target>
        </trans-unit>
        <trans-unit id="53edf87c99ba67bcaf2209ab3fc195805ec2a208" translate="yes" xml:space="preserve">
          <source>Strategy for maintaining the physical form of the flow. The default implementation is completely stateless, and recalculates the entire flow if the layout is invalid on the given FlowView. Alternative strategies can be implemented by subclassing, and might perform incremental repair to the layout or alternative breaking behavior.</source>
          <target state="translated">フローの物理的なフォームを維持するための戦略。デフォルトの実装は完全にステートレスで、与えられたFlowView上でレイアウトが無効な場合、フロー全体を再計算する。代替ストラテジーはサブクラス化によって実装され、レイアウトのインクリメンタル修復や代替的なブレーク動作を実行することができます。</target>
        </trans-unit>
        <trans-unit id="c5d7f07080ff7984f9840863d57d67d70998b065" translate="yes" xml:space="preserve">
          <source>Strategy for querying a temporal object.</source>
          <target state="translated">一時的なオブジェクトを問い合わせるためのストラテジー。</target>
        </trans-unit>
        <trans-unit id="df063869e11d7a9aa132cd4a984f7b5eb870d656" translate="yes" xml:space="preserve">
          <source>Stream</source>
          <target state="translated">Stream</target>
        </trans-unit>
        <trans-unit id="6eeaaaa50edaa985a97ad587aea17bd1a04483b2" translate="yes" xml:space="preserve">
          <source>Stream based logging &lt;code&gt;Handler&lt;/code&gt;.</source>
          <target state="translated">ストリームベースのロギング &lt;code&gt;Handler&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="375be10e87160f1e20a6685eed3e63a6f8f4a6b7" translate="yes" xml:space="preserve">
          <source>Stream marks are intended to be used in situations where you need to read ahead a little to see what's in the stream. Often this is most easily done by invoking some general parser. If the stream is of the type handled by the parse, it just chugs along happily. If the stream is not of that type, the parser should toss an exception when it fails. If this happens within readlimit bytes, it allows the outer code to reset the stream and try another parser.</source>
          <target state="translated">ストリームマークは、ストリームの中に何があるのかを少し先に読む必要がある場合に使用することを意図しています。多くの場合、これは一般的なパーサを呼び出すことで簡単にできます。ストリームがパーサで処理されるタイプのものであれば、それは楽しく処理されます。ストリームがそのタイプでない場合、パーサは失敗したときに例外を投げなければなりません。これがリードリミットバイト内で発生した場合、外部コードはストリームをリセットして別のパーサを試すことができます。</target>
        </trans-unit>
        <trans-unit id="5700c62d61b202046b3938e1a4791a619517c5ca" translate="yes" xml:space="preserve">
          <source>Stream marks are intended to be used in situations where you need to read ahead a little to see what's in the stream. Often this is most easily done by invoking some general parser. If the stream is of the type handled by the parser, it just chugs along happily. If the stream is not of that type, the parser should toss an exception when it fails, which, if it happens within readlimit bytes, allows the outer code to reset the stream and try another parser.</source>
          <target state="translated">ストリームマークは、ストリームの中に何があるのかを少し先に読む必要がある場合に使用することを意図しています。多くの場合、これは一般的なパーサを呼び出すことで簡単にできます。ストリームがパーサが扱うタイプのものであれば、それは楽しく処理されます。ストリームがそのタイプではない場合、パーサは失敗したときに例外を投げなければなりません。</target>
        </trans-unit>
        <trans-unit id="f875c81e6ee94c120a6f5957a8c789655ec24cde" translate="yes" xml:space="preserve">
          <source>Stream metadata may optionally be supplied; if it is &lt;code&gt;null&lt;/code&gt;, default stream metadata will be used.</source>
          <target state="translated">ストリームメタデータはオプションで提供できます。 &lt;code&gt;null&lt;/code&gt; の場合、デフォルトのストリームメタデータが使用されます。</target>
        </trans-unit>
        <trans-unit id="83dc0ada989ee56e68c42d6d093ac2bf6b1a3405" translate="yes" xml:space="preserve">
          <source>Stream operations and pipelines</source>
          <target state="translated">渓流の運用とパイプライン</target>
        </trans-unit>
        <trans-unit id="37f659425e860f2b63b40baa118bf663cd5f0e7e" translate="yes" xml:space="preserve">
          <source>Stream operations are divided into &lt;em&gt;intermediate&lt;/em&gt; and &lt;em&gt;terminal&lt;/em&gt; operations, and are combined to form &lt;em&gt;stream pipelines&lt;/em&gt;. A stream pipeline consists of a source (such as a &lt;code&gt;Collection&lt;/code&gt;, an array, a generator function, or an I/O channel); followed by zero or more intermediate operations such as &lt;code&gt;Stream.filter&lt;/code&gt; or &lt;code&gt;Stream.map&lt;/code&gt;; and a terminal operation such as &lt;code&gt;Stream.forEach&lt;/code&gt; or &lt;code&gt;Stream.reduce&lt;/code&gt;.</source>
          <target state="translated">ストリームオペレーションは&lt;em&gt;中間&lt;/em&gt;オペレーションと&lt;em&gt;ターミナル&lt;/em&gt;オペレーションに分割され、組み合わされて&lt;em&gt;ストリームパイプライン&lt;/em&gt;が形成され&lt;em&gt;ます&lt;/em&gt;。ストリームパイプラインは、ソース（ &lt;code&gt;Collection&lt;/code&gt; 、配列、ジェネレーター関数、I / Oチャネルなど）で構成されます。続いて、 &lt;code&gt;Stream.filter&lt;/code&gt; や &lt;code&gt;Stream.map&lt;/code&gt; などの中間操作がゼロ回以上続きます。そして、 &lt;code&gt;Stream.forEach&lt;/code&gt; や &lt;code&gt;Stream.reduce&lt;/code&gt; などのターミナル操作。</target>
        </trans-unit>
        <trans-unit id="5bc795529980114a4f12fb63c1b60c3f1ec9cf68" translate="yes" xml:space="preserve">
          <source>Stream pipeline results may be nondeterministic or incorrect if the behavioral parameters to the stream operations are &lt;em&gt;stateful&lt;/em&gt;. A stateful lambda (or other object implementing the appropriate functional interface) is one whose result depends on any state which might change during the execution of the stream pipeline. An example of a stateful lambda is the parameter to &lt;code&gt;map()&lt;/code&gt; in:</source>
          <target state="translated">ストリーム操作の動作パラメータが&lt;em&gt;ステートフルである&lt;/em&gt;場合、ストリームパイプラインの結果は非決定的または不正確になる可能性があります。ステートフルラムダ（または適切な機能インターフェイスを実装する他のオブジェクト）は、ストリームパイプラインの実行中に変化する可能性のある状態に結果が依存するラムダです。ステートフルラムダの例は、 &lt;code&gt;map()&lt;/code&gt; のパラメーターです。</target>
        </trans-unit>
        <trans-unit id="209378a667d7c77278db551cdad6f575b59c8132" translate="yes" xml:space="preserve">
          <source>Stream pipelines may execute either sequentially or in &lt;a href=&quot;package-summary#Parallelism&quot;&gt;parallel&lt;/a&gt;. This execution mode is a property of the stream. Streams are created with an initial choice of sequential or parallel execution. (For example, &lt;a href=&quot;../collection#stream()&quot;&gt;&lt;code&gt;Collection.stream()&lt;/code&gt;&lt;/a&gt; creates a sequential stream, and &lt;a href=&quot;../collection#parallelStream()&quot;&gt;&lt;code&gt;Collection.parallelStream()&lt;/code&gt;&lt;/a&gt; creates a parallel one.) This choice of execution mode may be modified by the &lt;a href=&quot;basestream#sequential()&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;basestream#parallel()&quot;&gt;&lt;code&gt;BaseStream.parallel()&lt;/code&gt;&lt;/a&gt; methods, and may be queried with the &lt;a href=&quot;basestream#isParallel()&quot;&gt;&lt;code&gt;BaseStream.isParallel()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ストリームパイプラインは、順次または&lt;a href=&quot;package-summary#Parallelism&quot;&gt;並列に&lt;/a&gt;実行できます。この実行モードは、ストリームのプロパティです。ストリームは、順次実行または並列実行を最初に選択して作成されます。 （たとえば、&lt;a href=&quot;../collection#stream()&quot;&gt; &lt;code&gt;Collection.stream()&lt;/code&gt; &lt;/a&gt;はシーケンシャルストリームを作成し、&lt;a href=&quot;../collection#parallelStream()&quot;&gt; &lt;code&gt;Collection.parallelStream()&lt;/code&gt; &lt;/a&gt;はパラレルストリームを作成します。）この実行モードの選択は、&lt;a href=&quot;basestream#sequential()&quot;&gt; &lt;code&gt;BaseStream.sequential()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;basestream#parallel()&quot;&gt; &lt;code&gt;BaseStream.parallel()&lt;/code&gt; &lt;/a&gt;メソッドによって変更できます。&lt;a href=&quot;basestream#isParallel()&quot;&gt; &lt;code&gt;BaseStream.isParallel()&lt;/code&gt; &lt;/a&gt;メソッドを使用してクエリを実行できます。</target>
        </trans-unit>
        <trans-unit id="2285e35c343bd1fa6dfcf2e513b3c6cde94dcbc4" translate="yes" xml:space="preserve">
          <source>Stream pipelines may execute either sequentially or in &lt;a href=&quot;package-summary#Parallelism&quot;&gt;parallel&lt;/a&gt;. This execution mode is a property of the stream. Streams are created with an initial choice of sequential or parallel execution. (For example, &lt;a href=&quot;../collection#stream--&quot;&gt;&lt;code&gt;Collection.stream()&lt;/code&gt;&lt;/a&gt; creates a sequential stream, and &lt;a href=&quot;../collection#parallelStream--&quot;&gt;&lt;code&gt;Collection.parallelStream()&lt;/code&gt;&lt;/a&gt; creates a parallel one.) This choice of execution mode may be modified by the &lt;a href=&quot;basestream#sequential--&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;basestream#parallel--&quot;&gt;&lt;code&gt;BaseStream.parallel()&lt;/code&gt;&lt;/a&gt; methods, and may be queried with the &lt;a href=&quot;basestream#isParallel--&quot;&gt;&lt;code&gt;BaseStream.isParallel()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ストリームパイプラインは、順次または&lt;a href=&quot;package-summary#Parallelism&quot;&gt;並列に&lt;/a&gt;実行できます。この実行モードは、ストリームのプロパティです。ストリームは、順次実行または並列実行を最初に選択して作成されます。 （たとえば、&lt;a href=&quot;../collection#stream--&quot;&gt; &lt;code&gt;Collection.stream()&lt;/code&gt; &lt;/a&gt;は順次ストリームを作成し、&lt;a href=&quot;../collection#parallelStream--&quot;&gt; &lt;code&gt;Collection.parallelStream()&lt;/code&gt; &lt;/a&gt;は並列ストリームを作成します。）この実行モードの選択は、&lt;a href=&quot;basestream#sequential--&quot;&gt; &lt;code&gt;BaseStream.sequential()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;basestream#parallel--&quot;&gt; &lt;code&gt;BaseStream.parallel()&lt;/code&gt; &lt;/a&gt;メソッドによって変更できます。&lt;a href=&quot;basestream#isParallel--&quot;&gt; &lt;code&gt;BaseStream.isParallel()&lt;/code&gt; &lt;/a&gt;メソッドでクエリできます。</target>
        </trans-unit>
        <trans-unit id="3adb7c72172f79a4a3c9e87ffdacac288d8aab3e" translate="yes" xml:space="preserve">
          <source>Stream.Builder</source>
          <target state="translated">Stream.Builder</target>
        </trans-unit>
        <trans-unit id="1b619fe5a3317cd0be72a1d3262d9ed081c69ed6" translate="yes" xml:space="preserve">
          <source>Stream.Builder.accept()</source>
          <target state="translated">Stream.Builder.accept()</target>
        </trans-unit>
        <trans-unit id="c6ddf38238b85cd63faa8e774945e683a20b67fd" translate="yes" xml:space="preserve">
          <source>Stream.Builder.add()</source>
          <target state="translated">Stream.Builder.add()</target>
        </trans-unit>
        <trans-unit id="c04a5b910982f02c53bdfb36985f6867f9da9d6f" translate="yes" xml:space="preserve">
          <source>Stream.Builder.build()</source>
          <target state="translated">Stream.Builder.build()</target>
        </trans-unit>
        <trans-unit id="7126aad4ca96bbe6cda141b346445c08f5da6008" translate="yes" xml:space="preserve">
          <source>Stream.allMatch()</source>
          <target state="translated">Stream.allMatch()</target>
        </trans-unit>
        <trans-unit id="cdc318780d0dc7b78e559133044e8f7a1701b6b3" translate="yes" xml:space="preserve">
          <source>Stream.anyMatch()</source>
          <target state="translated">Stream.anyMatch()</target>
        </trans-unit>
        <trans-unit id="ddc21a6a80df84a206bb3d21d219c853a9a492b6" translate="yes" xml:space="preserve">
          <source>Stream.builder()</source>
          <target state="translated">Stream.builder()</target>
        </trans-unit>
        <trans-unit id="fbd0c2712621755ebe76aa7f2451f9286078c681" translate="yes" xml:space="preserve">
          <source>Stream.collect()</source>
          <target state="translated">Stream.collect()</target>
        </trans-unit>
        <trans-unit id="3baefc34e2fcdc366afbde51c446671e1c5c3cc0" translate="yes" xml:space="preserve">
          <source>Stream.concat()</source>
          <target state="translated">Stream.concat()</target>
        </trans-unit>
        <trans-unit id="269e33de70cf73fbd506c9a9a8ab58953fcedefd" translate="yes" xml:space="preserve">
          <source>Stream.count()</source>
          <target state="translated">Stream.count()</target>
        </trans-unit>
        <trans-unit id="e941eb0e809a86881e08733b314447ce5a624582" translate="yes" xml:space="preserve">
          <source>Stream.distinct()</source>
          <target state="translated">Stream.distinct()</target>
        </trans-unit>
        <trans-unit id="fec578e1f2b9cf215bf02179443d2b9731280e18" translate="yes" xml:space="preserve">
          <source>Stream.empty()</source>
          <target state="translated">Stream.empty()</target>
        </trans-unit>
        <trans-unit id="79439e8493ba6c324ebd8be2e8461e15d33ff95a" translate="yes" xml:space="preserve">
          <source>Stream.filter()</source>
          <target state="translated">Stream.filter()</target>
        </trans-unit>
        <trans-unit id="73ebe0f5d5c670dc76b77ffb9fadbd9dd7507684" translate="yes" xml:space="preserve">
          <source>Stream.findAny()</source>
          <target state="translated">Stream.findAny()</target>
        </trans-unit>
        <trans-unit id="f4a55eb96868040c688a341bd44c95eb822433c9" translate="yes" xml:space="preserve">
          <source>Stream.findFirst()</source>
          <target state="translated">Stream.findFirst()</target>
        </trans-unit>
        <trans-unit id="c2998bb30afa9ffd79f8d8d3c3f5b46a72f51e99" translate="yes" xml:space="preserve">
          <source>Stream.flatMap()</source>
          <target state="translated">Stream.flatMap()</target>
        </trans-unit>
        <trans-unit id="4ed76d629b52c204a19a74c5d37778136a1832d9" translate="yes" xml:space="preserve">
          <source>Stream.flatMapToDouble()</source>
          <target state="translated">Stream.flatMapToDouble()</target>
        </trans-unit>
        <trans-unit id="9630706140c99f7cd64fa5a35610a4a028d25572" translate="yes" xml:space="preserve">
          <source>Stream.flatMapToInt()</source>
          <target state="translated">Stream.flatMapToInt()</target>
        </trans-unit>
        <trans-unit id="66e10c5a6f1d7ec7028c00adb928da5913f97394" translate="yes" xml:space="preserve">
          <source>Stream.flatMapToLong()</source>
          <target state="translated">Stream.flatMapToLong()</target>
        </trans-unit>
        <trans-unit id="80741f74803d5ec1b726af02db3e8a11c0a688db" translate="yes" xml:space="preserve">
          <source>Stream.forEach()</source>
          <target state="translated">Stream.forEach()</target>
        </trans-unit>
        <trans-unit id="f531ed3c77591e791d2919245fac1ce342dda19e" translate="yes" xml:space="preserve">
          <source>Stream.forEachOrdered()</source>
          <target state="translated">Stream.forEachOrdered()</target>
        </trans-unit>
        <trans-unit id="41a1c1e52dc2b092a5d52a8ee1942746d2579b4d" translate="yes" xml:space="preserve">
          <source>Stream.generate()</source>
          <target state="translated">Stream.generate()</target>
        </trans-unit>
        <trans-unit id="02b8cd6d17eb2b9b62885e6e3e79bf86d63d74a8" translate="yes" xml:space="preserve">
          <source>Stream.iterate()</source>
          <target state="translated">Stream.iterate()</target>
        </trans-unit>
        <trans-unit id="df30f21b4659adaab68265d8c750ad14a0cc51a4" translate="yes" xml:space="preserve">
          <source>Stream.limit()</source>
          <target state="translated">Stream.limit()</target>
        </trans-unit>
        <trans-unit id="1d6bcd13b8016867e54e2174b58b9db5c96cd802" translate="yes" xml:space="preserve">
          <source>Stream.map()</source>
          <target state="translated">Stream.map()</target>
        </trans-unit>
        <trans-unit id="f8d0a23b03937df1b9cb38963b20bcd954addac5" translate="yes" xml:space="preserve">
          <source>Stream.mapToDouble()</source>
          <target state="translated">Stream.mapToDouble()</target>
        </trans-unit>
        <trans-unit id="bff332742c3ea17aca5644d706260f622789d651" translate="yes" xml:space="preserve">
          <source>Stream.mapToInt()</source>
          <target state="translated">Stream.mapToInt()</target>
        </trans-unit>
        <trans-unit id="2a8c72bedbf616af0188653334f25fad52075bdb" translate="yes" xml:space="preserve">
          <source>Stream.mapToLong()</source>
          <target state="translated">Stream.mapToLong()</target>
        </trans-unit>
        <trans-unit id="a4956599296d6e87433d2c402ffa2a9e1a61ca53" translate="yes" xml:space="preserve">
          <source>Stream.max()</source>
          <target state="translated">Stream.max()</target>
        </trans-unit>
        <trans-unit id="045e06eea17832dee5ce589ef05340d2ca4ab805" translate="yes" xml:space="preserve">
          <source>Stream.min()</source>
          <target state="translated">Stream.min()</target>
        </trans-unit>
        <trans-unit id="55fe76f1895af66c2927998c1a6e6df0d7dcd37f" translate="yes" xml:space="preserve">
          <source>Stream.noneMatch()</source>
          <target state="translated">Stream.noneMatch()</target>
        </trans-unit>
        <trans-unit id="daf13c146605c7a7f2ba8acfb038284d8d56d41a" translate="yes" xml:space="preserve">
          <source>Stream.of()</source>
          <target state="translated">Stream.of()</target>
        </trans-unit>
        <trans-unit id="0691d7f3904bf0d4638acb3b3e9d98f4b80a6f74" translate="yes" xml:space="preserve">
          <source>Stream.peek()</source>
          <target state="translated">Stream.peek()</target>
        </trans-unit>
        <trans-unit id="441c900eb82181eb1de0ace63b07ad5df18f42ee" translate="yes" xml:space="preserve">
          <source>Stream.reduce()</source>
          <target state="translated">Stream.reduce()</target>
        </trans-unit>
        <trans-unit id="e545e42a89bcdcbe9a596694ae1d0d1717352727" translate="yes" xml:space="preserve">
          <source>Stream.skip()</source>
          <target state="translated">Stream.skip()</target>
        </trans-unit>
        <trans-unit id="3d26432b3c42a5315996e73e8a7db3db79d68acf" translate="yes" xml:space="preserve">
          <source>Stream.sorted()</source>
          <target state="translated">Stream.sorted()</target>
        </trans-unit>
        <trans-unit id="37f296e8312e28ba98c9c129577006cd805ab000" translate="yes" xml:space="preserve">
          <source>Stream.toArray()</source>
          <target state="translated">Stream.toArray()</target>
        </trans-unit>
        <trans-unit id="3b1718dd809013db043eb40a9a6e9ae92f89f5d8" translate="yes" xml:space="preserve">
          <source>StreamCorruptedException</source>
          <target state="translated">StreamCorruptedException</target>
        </trans-unit>
        <trans-unit id="58ad8dfaf38ebb934858287aa90a86a57704845c" translate="yes" xml:space="preserve">
          <source>StreamDescriptionProperty</source>
          <target state="translated">StreamDescriptionProperty</target>
        </trans-unit>
        <trans-unit id="7f25766124539a4fbb7560aac36318e22ec7fef8" translate="yes" xml:space="preserve">
          <source>StreamFilter</source>
          <target state="translated">StreamFilter</target>
        </trans-unit>
        <trans-unit id="0e82e51665d41e14a42a817879e54fc401d36d92" translate="yes" xml:space="preserve">
          <source>StreamHandler</source>
          <target state="translated">StreamHandler</target>
        </trans-unit>
        <trans-unit id="ad06a5638842271058935da38f887d458c06ac49" translate="yes" xml:space="preserve">
          <source>StreamHandler.close()</source>
          <target state="translated">StreamHandler.close()</target>
        </trans-unit>
        <trans-unit id="2518a3b36fd21ff57ee4e94b425177496fe02915" translate="yes" xml:space="preserve">
          <source>StreamHandler.flush()</source>
          <target state="translated">StreamHandler.flush()</target>
        </trans-unit>
        <trans-unit id="4ff69c9b069025b0d4aebc1f9557b3100b7aa008" translate="yes" xml:space="preserve">
          <source>StreamHandler.isLoggable()</source>
          <target state="translated">StreamHandler.isLoggable()</target>
        </trans-unit>
        <trans-unit id="e7c26a4cc8768e0fa41604cdaea26e7fc6a38f43" translate="yes" xml:space="preserve">
          <source>StreamHandler.publish()</source>
          <target state="translated">StreamHandler.publish()</target>
        </trans-unit>
        <trans-unit id="880d83a69a31f0576fb4dc5347f0e02ce8dc38bf" translate="yes" xml:space="preserve">
          <source>StreamHandler.setEncoding()</source>
          <target state="translated">StreamHandler.setEncoding()</target>
        </trans-unit>
        <trans-unit id="0ef444d3f4da02e6376c7eb27110ff3f12b65026" translate="yes" xml:space="preserve">
          <source>StreamHandler.setOutputStream()</source>
          <target state="translated">StreamHandler.setOutputStream()</target>
        </trans-unit>
        <trans-unit id="b3016125357519154dceffb69a341a76dfde95c4" translate="yes" xml:space="preserve">
          <source>StreamPrintService</source>
          <target state="translated">StreamPrintService</target>
        </trans-unit>
        <trans-unit id="72791241acd9756b42c0ef57fb39db8e3f430dd3" translate="yes" xml:space="preserve">
          <source>StreamPrintService.dispose()</source>
          <target state="translated">StreamPrintService.dispose()</target>
        </trans-unit>
        <trans-unit id="02f057c9bab249fc44fc21eb4d1f873303037602" translate="yes" xml:space="preserve">
          <source>StreamPrintService.getOutputFormat()</source>
          <target state="translated">StreamPrintService.getOutputFormat()</target>
        </trans-unit>
        <trans-unit id="c128cf1330f916e8d1b605eaf35aba1cece22305" translate="yes" xml:space="preserve">
          <source>StreamPrintService.getOutputStream()</source>
          <target state="translated">StreamPrintService.getOutputStream()</target>
        </trans-unit>
        <trans-unit id="a1c05a5da0d37b5f3d4230cf1a54303481c70538" translate="yes" xml:space="preserve">
          <source>StreamPrintService.isDisposed()</source>
          <target state="translated">StreamPrintService.isDisposed()</target>
        </trans-unit>
        <trans-unit id="7348d1189468e8cc2d46ed54d12f9bba71c0f275" translate="yes" xml:space="preserve">
          <source>StreamPrintServiceFactory</source>
          <target state="translated">StreamPrintServiceFactory</target>
        </trans-unit>
        <trans-unit id="4a82824a32659ba47f2224879baeef76cecd12fc" translate="yes" xml:space="preserve">
          <source>StreamPrintServiceFactory.getOutputFormat()</source>
          <target state="translated">StreamPrintServiceFactory.getOutputFormat()</target>
        </trans-unit>
        <trans-unit id="bc0612a48abb59e20e9134f4fe943943464acbd2" translate="yes" xml:space="preserve">
          <source>StreamPrintServiceFactory.getPrintService()</source>
          <target state="translated">StreamPrintServiceFactory.getPrintService()</target>
        </trans-unit>
        <trans-unit id="1e844b46e7e0949c6191dff92481acd9cc85223f" translate="yes" xml:space="preserve">
          <source>StreamPrintServiceFactory.getSupportedDocFlavors()</source>
          <target state="translated">StreamPrintServiceFactory.getSupportedDocFlavors()</target>
        </trans-unit>
        <trans-unit id="3e0564158bfbacc4535363cfa4127012e76de5a3" translate="yes" xml:space="preserve">
          <source>StreamPrintServiceFactory.lookupStreamPrintServiceFactories()</source>
          <target state="translated">StreamPrintServiceFactory.lookupStreamPrintServiceFactories()</target>
        </trans-unit>
        <trans-unit id="72a913c433e418e702d7f53aaca494aee75ad37f" translate="yes" xml:space="preserve">
          <source>StreamReaderDelegate</source>
          <target state="translated">StreamReaderDelegate</target>
        </trans-unit>
        <trans-unit id="82e0167be3a437c7a9e92dae2dd32981cfebe9e8" translate="yes" xml:space="preserve">
          <source>StreamResult</source>
          <target state="translated">StreamResult</target>
        </trans-unit>
        <trans-unit id="7a3b5afd40a98ec27f14f458a14082b59959ce46" translate="yes" xml:space="preserve">
          <source>StreamSource</source>
          <target state="translated">StreamSource</target>
        </trans-unit>
        <trans-unit id="7f90c413c2507d7c0681d52b3122f665255c4bd6" translate="yes" xml:space="preserve">
          <source>StreamSupport</source>
          <target state="translated">StreamSupport</target>
        </trans-unit>
        <trans-unit id="a4d7d2d932704f040cde3346f840fe895050ca34" translate="yes" xml:space="preserve">
          <source>StreamSupport.doubleStream()</source>
          <target state="translated">StreamSupport.doubleStream()</target>
        </trans-unit>
        <trans-unit id="6c95961c9721dfa262b35d8865e91a3af0741f69" translate="yes" xml:space="preserve">
          <source>StreamSupport.intStream()</source>
          <target state="translated">StreamSupport.intStream()</target>
        </trans-unit>
        <trans-unit id="18e63090d1f4cca665ca810bceb1aff89b699c00" translate="yes" xml:space="preserve">
          <source>StreamSupport.longStream()</source>
          <target state="translated">StreamSupport.longStream()</target>
        </trans-unit>
        <trans-unit id="db64ba9993ef0e098e07160f2c1f1fa0bdc5c62b" translate="yes" xml:space="preserve">
          <source>StreamSupport.stream()</source>
          <target state="translated">StreamSupport.stream()</target>
        </trans-unit>
        <trans-unit id="6809f40328614f5d624e28972cb2b8009a3bc9c4" translate="yes" xml:space="preserve">
          <source>StreamTokenizer</source>
          <target state="translated">StreamTokenizer</target>
        </trans-unit>
        <trans-unit id="a5b770e04047dbd015867ce2051e9832cbafb0a6" translate="yes" xml:space="preserve">
          <source>StreamTokenizer.commentChar()</source>
          <target state="translated">StreamTokenizer.commentChar()</target>
        </trans-unit>
        <trans-unit id="f1cb78708f6944cbfbb319945fd316bea58656f3" translate="yes" xml:space="preserve">
          <source>StreamTokenizer.eolIsSignificant()</source>
          <target state="translated">StreamTokenizer.eolIsSignificant()</target>
        </trans-unit>
        <trans-unit id="2a97689935ba2e497e893ae6f06f1a1ec29f5382" translate="yes" xml:space="preserve">
          <source>StreamTokenizer.lineno()</source>
          <target state="translated">StreamTokenizer.lineno()</target>
        </trans-unit>
        <trans-unit id="0c7736b7404d5d8adf7615b0d20b9185e30a1a48" translate="yes" xml:space="preserve">
          <source>StreamTokenizer.lowerCaseMode()</source>
          <target state="translated">StreamTokenizer.lowerCaseMode()</target>
        </trans-unit>
        <trans-unit id="cf4144ad90b36ab32ff66851a9db093c4ef40b6a" translate="yes" xml:space="preserve">
          <source>StreamTokenizer.nextToken()</source>
          <target state="translated">StreamTokenizer.nextToken()</target>
        </trans-unit>
        <trans-unit id="b1035006669fa1c1b09cd1d6505e57c127e5f21d" translate="yes" xml:space="preserve">
          <source>StreamTokenizer.ordinaryChar()</source>
          <target state="translated">StreamTokenizer.ordinaryChar()</target>
        </trans-unit>
        <trans-unit id="58c6ecab0cb8e878129fc80f6e29ef4daff1926c" translate="yes" xml:space="preserve">
          <source>StreamTokenizer.ordinaryChars()</source>
          <target state="translated">StreamTokenizer.ordinaryChars()</target>
        </trans-unit>
        <trans-unit id="1c9abefccf439df8b4ed6f99e3573d99bf73ccb1" translate="yes" xml:space="preserve">
          <source>StreamTokenizer.parseNumbers()</source>
          <target state="translated">StreamTokenizer.parseNumbers()</target>
        </trans-unit>
        <trans-unit id="e70126f69c9bf8bcd1341070ff1c6902d57f4cb0" translate="yes" xml:space="preserve">
          <source>StreamTokenizer.pushBack()</source>
          <target state="translated">StreamTokenizer.pushBack()</target>
        </trans-unit>
        <trans-unit id="5d05bf44406486c59ad41c640bcda4931b8313e3" translate="yes" xml:space="preserve">
          <source>StreamTokenizer.quoteChar()</source>
          <target state="translated">StreamTokenizer.quoteChar()</target>
        </trans-unit>
        <trans-unit id="c5f0a888b5b358f8eae90421a4120167466c80bc" translate="yes" xml:space="preserve">
          <source>StreamTokenizer.resetSyntax()</source>
          <target state="translated">StreamTokenizer.resetSyntax()</target>
        </trans-unit>
        <trans-unit id="9b1f580ed5a9899a2da9183e4f157b55abd69554" translate="yes" xml:space="preserve">
          <source>StreamTokenizer.slashSlashComments()</source>
          <target state="translated">StreamTokenizer.slashSlashComments()</target>
        </trans-unit>
        <trans-unit id="07c9b4aec841c27bdf653ab7050d8fa062950502" translate="yes" xml:space="preserve">
          <source>StreamTokenizer.slashStarComments()</source>
          <target state="translated">StreamTokenizer.slashStarComments()</target>
        </trans-unit>
        <trans-unit id="15ceac7a4f6409418d69eccaf4cd127bb5e93038" translate="yes" xml:space="preserve">
          <source>StreamTokenizer.toString()</source>
          <target state="translated">StreamTokenizer.toString()</target>
        </trans-unit>
        <trans-unit id="0dfa2b5a9b96b6c05d7e022e41bd4f46d385206f" translate="yes" xml:space="preserve">
          <source>StreamTokenizer.whitespaceChars()</source>
          <target state="translated">StreamTokenizer.whitespaceChars()</target>
        </trans-unit>
        <trans-unit id="45ee195aae9420937a03a4093a470d19baa0e0c4" translate="yes" xml:space="preserve">
          <source>StreamTokenizer.wordChars()</source>
          <target state="translated">StreamTokenizer.wordChars()</target>
        </trans-unit>
        <trans-unit id="8560f4573f2d5ef6f0437286a2f41c1b20bcfc8a" translate="yes" xml:space="preserve">
          <source>Streaming validator that works on SAX stream.</source>
          <target state="translated">SAXストリームで動作するストリーミングバリデータ。</target>
        </trans-unit>
        <trans-unit id="74985da267c6803b262f117de72af2d02e48029f" translate="yes" xml:space="preserve">
          <source>Streams</source>
          <target state="translated">Streams</target>
        </trans-unit>
        <trans-unit id="7d9355f7f3b08060846dcf5d99c9872a3a1fe89e" translate="yes" xml:space="preserve">
          <source>Streams can be obtained in a number of ways. Some examples include:</source>
          <target state="translated">ストリームは、いくつかの方法で取得することができます。いくつかの例としては、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="2b37a247f14dedb0ab94043e1b91aa61b21824ae" translate="yes" xml:space="preserve">
          <source>Streams enable you to execute possibly-parallel aggregate operations over a variety of data sources, including even non-thread-safe collections such as &lt;code&gt;ArrayList&lt;/code&gt;. This is possible only if we can prevent &lt;em&gt;interference&lt;/em&gt; with the data source during the execution of a stream pipeline. Except for the escape-hatch operations &lt;code&gt;iterator()&lt;/code&gt; and &lt;code&gt;spliterator()&lt;/code&gt;, execution begins when the terminal operation is invoked, and ends when the terminal operation completes. For most data sources, preventing interference means ensuring that the data source is &lt;em&gt;not modified at all&lt;/em&gt; during the execution of the stream pipeline. The notable exception to this are streams whose sources are concurrent collections, which are specifically designed to handle concurrent modification. Concurrent stream sources are those whose &lt;code&gt;Spliterator&lt;/code&gt; reports the &lt;code&gt;CONCURRENT&lt;/code&gt; characteristic.</source>
          <target state="translated">ストリームを使用すると、 &lt;code&gt;ArrayList&lt;/code&gt; などの非スレッドセーフなコレクションを含め、さまざまなデータソースに対して並列処理の可能性がある集約操作を実行できます。これは、ストリームパイプラインの実行中にデータソースとの&lt;em&gt;干渉&lt;/em&gt;を防ぐことができる場合にのみ可能です。エスケープハッチ操作 &lt;code&gt;iterator()&lt;/code&gt; および &lt;code&gt;spliterator()&lt;/code&gt; （）を除き、実行は端末操作が呼び出されたときに始まり、端末操作が完了したときに終了します。ほとんどのデータソースでは、干渉を防ぐことは、データソースが&lt;em&gt;まったく変更されない&lt;/em&gt;ことを保証することを意味&lt;em&gt;します&lt;/em&gt;ストリームパイプラインの実行中。これに対する注目すべき例外は、ソースが並行コレクションであるストリームであり、並行修正を処理するように特別に設計されています。同時ストリームソースは、 &lt;code&gt;Spliterator&lt;/code&gt; が &lt;code&gt;CONCURRENT&lt;/code&gt; 特性を報告するソースです。</target>
        </trans-unit>
        <trans-unit id="747d90ffb206cf25e63302c499f796b3e6204464" translate="yes" xml:space="preserve">
          <source>Streams have a &lt;a href=&quot;basestream#close()&quot;&gt;&lt;code&gt;BaseStream.close()&lt;/code&gt;&lt;/a&gt; method and implement &lt;a href=&quot;../../lang/autocloseable&quot;&gt;&lt;code&gt;AutoCloseable&lt;/code&gt;&lt;/a&gt;. Operating on a stream after it has been closed will throw &lt;a href=&quot;../../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;. Most stream instances do not actually need to be closed after use, as they are backed by collections, arrays, or generating functions, which require no special resource management. Generally, only streams whose source is an IO channel, such as those returned by &lt;a href=&quot;../../nio/file/files#lines(java.nio.file.Path)&quot;&gt;&lt;code&gt;Files.lines(Path)&lt;/code&gt;&lt;/a&gt;, will require closing. If a stream does require closing, it must be opened as a resource within a try-with-resources statement or similar control structure to ensure that it is closed promptly after its operations have completed.</source>
          <target state="translated">ストリームには&lt;a href=&quot;basestream#close()&quot;&gt; &lt;code&gt;BaseStream.close()&lt;/code&gt; &lt;/a&gt;メソッドがあり、AutoCloseableを実装し&lt;a href=&quot;../../lang/autocloseable&quot;&gt; &lt;code&gt;AutoCloseable&lt;/code&gt; &lt;/a&gt;。閉じられた後にストリームを操作すると、&lt;a href=&quot;../../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;がスローされます。ほとんどのストリームインスタンスは、特別なリソース管理を必要としないコレクション、配列、または母関数によってサポートされているため、使用後に実際に閉じる必要はありません。通常、&lt;a href=&quot;../../nio/file/files#lines(java.nio.file.Path)&quot;&gt; &lt;code&gt;Files.lines(Path)&lt;/code&gt; &lt;/a&gt;によって返されるストリームなど、ソースがIOチャネルであるストリームのみを閉じる必要があります。ストリームを閉じる必要がある場合は、try-with-resourcesステートメントまたは同様の制御構造内でリソースとして開いて、操作の完了後すぐに閉じるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="2e23e80021fbe36985e47986ad1098fa81b6dc8c" translate="yes" xml:space="preserve">
          <source>Streams have a &lt;a href=&quot;basestream#close--&quot;&gt;&lt;code&gt;BaseStream.close()&lt;/code&gt;&lt;/a&gt; method and implement &lt;a href=&quot;../../lang/autocloseable&quot;&gt;&lt;code&gt;AutoCloseable&lt;/code&gt;&lt;/a&gt;, but nearly all stream instances do not actually need to be closed after use. Generally, only streams whose source is an IO channel (such as those returned by &lt;a href=&quot;../../nio/file/files#lines-java.nio.file.Path-java.nio.charset.Charset-&quot;&gt;&lt;code&gt;Files.lines(Path, Charset)&lt;/code&gt;&lt;/a&gt;) will require closing. Most streams are backed by collections, arrays, or generating functions, which require no special resource management. (If a stream does require closing, it can be declared as a resource in a &lt;code&gt;try&lt;/code&gt;-with-resources statement.)</source>
          <target state="translated">ストリームは持って&lt;a href=&quot;basestream#close--&quot;&gt; &lt;code&gt;BaseStream.close()&lt;/code&gt; &lt;/a&gt;メソッドを実装して&lt;a href=&quot;../../lang/autocloseable&quot;&gt; &lt;code&gt;AutoCloseable&lt;/code&gt; を&lt;/a&gt;、しかし、ほぼすべてのストリーム・インスタンスは、実際に使用した後に閉じする必要はありません。通常、ソースがIOチャネルであるストリーム（&lt;a href=&quot;../../nio/file/files#lines-java.nio.file.Path-java.nio.charset.Charset-&quot;&gt; &lt;code&gt;Files.lines(Path, Charset)&lt;/code&gt; &lt;/a&gt;によって返されるストリームなど）のみを閉じる必要があります。ほとんどのストリームは、コレクション、配列、または生成関数によってサポートされており、特別なリソース管理は必要ありません。 （ストリームを閉じる必要がある場合は、 &lt;code&gt;try&lt;/code&gt; -with-resourcesステートメントでリソースとして宣言できます。）</target>
        </trans-unit>
        <trans-unit id="85073c9ad6ac94eeaebf5306ba2737ddca67d7f2" translate="yes" xml:space="preserve">
          <source>Streams may or may not have a defined &lt;em&gt;encounter order&lt;/em&gt;. Whether or not a stream has an encounter order depends on the source and the intermediate operations. Certain stream sources (such as &lt;code&gt;List&lt;/code&gt; or arrays) are intrinsically ordered, whereas others (such as &lt;code&gt;HashSet&lt;/code&gt;) are not. Some intermediate operations, such as &lt;code&gt;sorted()&lt;/code&gt;, may impose an encounter order on an otherwise unordered stream, and others may render an ordered stream unordered, such as &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt;. Further, some terminal operations may ignore encounter order, such as &lt;code&gt;forEach()&lt;/code&gt;.</source>
          <target state="translated">ストリームには、定義された&lt;em&gt;遭遇順序&lt;/em&gt;がある場合とない場合があります。ストリームに遭遇順序があるかどうかは、ソースと中間操作によって異なります。特定のストリームソース（ &lt;code&gt;List&lt;/code&gt; や配列など）は本質的に順序付けられていますが、他のソース（ &lt;code&gt;HashSet&lt;/code&gt; など）は順序付けられていません。 &lt;code&gt;sorted()&lt;/code&gt; などの一部の中間操作は、他の方法では順序付けられていないストリームに遭遇順序を課す場合があり、他の操作は、&lt;a href=&quot;basestream#unordered()&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt;などの順序付けられたストリームを順序付けされないようにする場合があります。さらに、 &lt;code&gt;forEach()&lt;/code&gt; など、一部の端末操作は遭遇順序を無視する場合があります。</target>
        </trans-unit>
        <trans-unit id="19c7754ace38cb9dd3227dd9a7330d833465239b" translate="yes" xml:space="preserve">
          <source>Streams may or may not have a defined &lt;em&gt;encounter order&lt;/em&gt;. Whether or not a stream has an encounter order depends on the source and the intermediate operations. Certain stream sources (such as &lt;code&gt;List&lt;/code&gt; or arrays) are intrinsically ordered, whereas others (such as &lt;code&gt;HashSet&lt;/code&gt;) are not. Some intermediate operations, such as &lt;code&gt;sorted()&lt;/code&gt;, may impose an encounter order on an otherwise unordered stream, and others may render an ordered stream unordered, such as &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt;. Further, some terminal operations may ignore encounter order, such as &lt;code&gt;forEach()&lt;/code&gt;.</source>
          <target state="translated">ストリームには、定義された&lt;em&gt;エンカウンター順序&lt;/em&gt;がある場合とない場合があります。ストリームに遭遇順序があるかどうかは、ソースと中間操作に依存します。特定のストリームソース（ &lt;code&gt;List&lt;/code&gt; や配列など）は本質的に順序付けされていますが、その他（ &lt;code&gt;HashSet&lt;/code&gt; など）は順序付けされていません。ようないくつかの中間体の操作、 &lt;code&gt;sorted()&lt;/code&gt; 、そうでない場合は順不同ストリームに遭遇順序を課すこと、およびその他のような、順序付けられたストリームは、順序付けられていないレンダリングすることができる&lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt;。さらに、一部の端末操作では、 &lt;code&gt;forEach()&lt;/code&gt; などの遭遇順序が無視される場合があります。</target>
        </trans-unit>
        <trans-unit id="56ed7a827a2e9fe2bec55703f64e6db31184edbb" translate="yes" xml:space="preserve">
          <source>Streams of file paths can be obtained from methods in &lt;a href=&quot;../../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">ファイルパスのストリームは、&lt;a href=&quot;../../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; の&lt;/a&gt;メソッドから取得できます。</target>
        </trans-unit>
        <trans-unit id="8ced2b0167c447a6b04bf79ed7507d78cc4a0b44" translate="yes" xml:space="preserve">
          <source>Streams of random numbers can be obtained from &lt;a href=&quot;../random#ints()&quot;&gt;&lt;code&gt;Random.ints()&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">乱数のストリームは、&lt;a href=&quot;../random#ints()&quot;&gt; &lt;code&gt;Random.ints()&lt;/code&gt; &lt;/a&gt;から取得できます。</target>
        </trans-unit>
        <trans-unit id="6cecb6b3e1d22344cf35449a8c9c6c39fd862f28" translate="yes" xml:space="preserve">
          <source>Streams of random numbers can be obtained from &lt;a href=&quot;../random#ints--&quot;&gt;&lt;code&gt;Random.ints()&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">乱数のストリームは&lt;a href=&quot;../random#ints--&quot;&gt; &lt;code&gt;Random.ints()&lt;/code&gt; &lt;/a&gt;から取得できます。</target>
        </trans-unit>
        <trans-unit id="d72d481c1c1ff1d2cca277c33b7581e115d86153" translate="yes" xml:space="preserve">
          <source>StrictMath</source>
          <target state="translated">StrictMath</target>
        </trans-unit>
        <trans-unit id="888f94ffc6b319d7970391bb96a7e3e75babb4e0" translate="yes" xml:space="preserve">
          <source>StrictMath.IEEEremainder()</source>
          <target state="translated">StrictMath.IEEEremainder()</target>
        </trans-unit>
        <trans-unit id="be02151a41de428bd03d5ca027df511d51eb499a" translate="yes" xml:space="preserve">
          <source>StrictMath.abs()</source>
          <target state="translated">StrictMath.abs()</target>
        </trans-unit>
        <trans-unit id="f5b04482f5f0690eb255a4d8a80a87655185c07b" translate="yes" xml:space="preserve">
          <source>StrictMath.acos()</source>
          <target state="translated">StrictMath.acos()</target>
        </trans-unit>
        <trans-unit id="9e1f1d725207ec3e0ccc27c51ec3e4dc295c151f" translate="yes" xml:space="preserve">
          <source>StrictMath.addExact()</source>
          <target state="translated">StrictMath.addExact()</target>
        </trans-unit>
        <trans-unit id="18cf46d82aff260322007a196d58ff6e6685ebbf" translate="yes" xml:space="preserve">
          <source>StrictMath.asin()</source>
          <target state="translated">StrictMath.asin()</target>
        </trans-unit>
        <trans-unit id="a0c89e6099e9715e23c19faac15547740a371f58" translate="yes" xml:space="preserve">
          <source>StrictMath.atan()</source>
          <target state="translated">StrictMath.atan()</target>
        </trans-unit>
        <trans-unit id="5c939c4b62f4bcd95efa9a6852e402f171deb95f" translate="yes" xml:space="preserve">
          <source>StrictMath.atan2()</source>
          <target state="translated">StrictMath.atan2()</target>
        </trans-unit>
        <trans-unit id="456b099df9ec83b4dd3bee67e976a0001c2feee6" translate="yes" xml:space="preserve">
          <source>StrictMath.cbrt()</source>
          <target state="translated">StrictMath.cbrt()</target>
        </trans-unit>
        <trans-unit id="29c3e4c1d56fcf8207f432c636911de275839f03" translate="yes" xml:space="preserve">
          <source>StrictMath.ceil()</source>
          <target state="translated">StrictMath.ceil()</target>
        </trans-unit>
        <trans-unit id="f4741a49d112d381892cee8e1066e0e2e40d591d" translate="yes" xml:space="preserve">
          <source>StrictMath.copySign()</source>
          <target state="translated">StrictMath.copySign()</target>
        </trans-unit>
        <trans-unit id="7624cb025c57574387204402ed2af1902a0f91bd" translate="yes" xml:space="preserve">
          <source>StrictMath.cos()</source>
          <target state="translated">StrictMath.cos()</target>
        </trans-unit>
        <trans-unit id="e93a7f9cb108b0e60d6da22044296817ee5174ca" translate="yes" xml:space="preserve">
          <source>StrictMath.cosh()</source>
          <target state="translated">StrictMath.cosh()</target>
        </trans-unit>
        <trans-unit id="f3c17cb769062109c566515eb701510cc16c233d" translate="yes" xml:space="preserve">
          <source>StrictMath.exp()</source>
          <target state="translated">StrictMath.exp()</target>
        </trans-unit>
        <trans-unit id="6c32d4e27889ad8000f9008d7d3e6f3fb4c6c9bc" translate="yes" xml:space="preserve">
          <source>StrictMath.expm1()</source>
          <target state="translated">StrictMath.expm1()</target>
        </trans-unit>
        <trans-unit id="c5182809f8e569d2adbcd2ff0b7b5ace6cb5e7b4" translate="yes" xml:space="preserve">
          <source>StrictMath.floor()</source>
          <target state="translated">StrictMath.floor()</target>
        </trans-unit>
        <trans-unit id="1e45259ded533dcf3147881db15a55f9c203943e" translate="yes" xml:space="preserve">
          <source>StrictMath.floorDiv()</source>
          <target state="translated">StrictMath.floorDiv()</target>
        </trans-unit>
        <trans-unit id="433f3ee9ef4ea3955086270ef0473f6ed00a8bac" translate="yes" xml:space="preserve">
          <source>StrictMath.floorMod()</source>
          <target state="translated">StrictMath.floorMod()</target>
        </trans-unit>
        <trans-unit id="d8a059bd8c417b45608a51eb16614ebe5e7d5804" translate="yes" xml:space="preserve">
          <source>StrictMath.getExponent()</source>
          <target state="translated">StrictMath.getExponent()</target>
        </trans-unit>
        <trans-unit id="2858a41c856a6b61b2ec31e62da6253b0f5b5b8d" translate="yes" xml:space="preserve">
          <source>StrictMath.hypot()</source>
          <target state="translated">StrictMath.hypot()</target>
        </trans-unit>
        <trans-unit id="3fa6aaba65fcc4e28b0d27dc9d7f2ed8d137d922" translate="yes" xml:space="preserve">
          <source>StrictMath.log()</source>
          <target state="translated">StrictMath.log()</target>
        </trans-unit>
        <trans-unit id="26d7b91a294696726ea1b6366050316db682019e" translate="yes" xml:space="preserve">
          <source>StrictMath.log10()</source>
          <target state="translated">StrictMath.log10()</target>
        </trans-unit>
        <trans-unit id="1aa49151478a18e36305aac32e396dbfa0397ece" translate="yes" xml:space="preserve">
          <source>StrictMath.log1p()</source>
          <target state="translated">StrictMath.log1p()</target>
        </trans-unit>
        <trans-unit id="b4db92dd18b1b6ef6c6f2c0fef5470c5a2b114b0" translate="yes" xml:space="preserve">
          <source>StrictMath.max()</source>
          <target state="translated">StrictMath.max()</target>
        </trans-unit>
        <trans-unit id="b50286e6398775e076b480d8fc689826d3a20f30" translate="yes" xml:space="preserve">
          <source>StrictMath.min()</source>
          <target state="translated">StrictMath.min()</target>
        </trans-unit>
        <trans-unit id="2bb6be841d259c9315687695181fd2475674f14b" translate="yes" xml:space="preserve">
          <source>StrictMath.multiplyExact()</source>
          <target state="translated">StrictMath.multiplyExact()</target>
        </trans-unit>
        <trans-unit id="b19574ae9efdad0b4cf49738a7f9067feeed7207" translate="yes" xml:space="preserve">
          <source>StrictMath.nextAfter()</source>
          <target state="translated">StrictMath.nextAfter()</target>
        </trans-unit>
        <trans-unit id="c24f8e3e68261724848dc274fb9087a4b3864461" translate="yes" xml:space="preserve">
          <source>StrictMath.nextDown()</source>
          <target state="translated">StrictMath.nextDown()</target>
        </trans-unit>
        <trans-unit id="9d5e164754e97f5fb8f17053d1b1299ff2635217" translate="yes" xml:space="preserve">
          <source>StrictMath.nextUp()</source>
          <target state="translated">StrictMath.nextUp()</target>
        </trans-unit>
        <trans-unit id="8eb67bac8618e5468eb7a243a8829f0d3f86b17e" translate="yes" xml:space="preserve">
          <source>StrictMath.pow()</source>
          <target state="translated">StrictMath.pow()</target>
        </trans-unit>
        <trans-unit id="2c36ce5e3c6a3faab2c6974710dc191989889101" translate="yes" xml:space="preserve">
          <source>StrictMath.random()</source>
          <target state="translated">StrictMath.random()</target>
        </trans-unit>
        <trans-unit id="b67bbb1e3663f4ce2c0865650e1709a5d2cc3de1" translate="yes" xml:space="preserve">
          <source>StrictMath.rint()</source>
          <target state="translated">StrictMath.rint()</target>
        </trans-unit>
        <trans-unit id="1466feef6b57ad19f5c982c20e244d7139458bf3" translate="yes" xml:space="preserve">
          <source>StrictMath.round()</source>
          <target state="translated">StrictMath.round()</target>
        </trans-unit>
        <trans-unit id="d93b9582cea78e56288362e3cbc8c34a112dfdf7" translate="yes" xml:space="preserve">
          <source>StrictMath.scalb()</source>
          <target state="translated">StrictMath.scalb()</target>
        </trans-unit>
        <trans-unit id="b0a06b99e68c6f7dba4734c0419215f5b09b9456" translate="yes" xml:space="preserve">
          <source>StrictMath.signum()</source>
          <target state="translated">StrictMath.signum()</target>
        </trans-unit>
        <trans-unit id="7430429437c761da0a8e969c58b91801e5f95668" translate="yes" xml:space="preserve">
          <source>StrictMath.sin()</source>
          <target state="translated">StrictMath.sin()</target>
        </trans-unit>
        <trans-unit id="b59926c946eed5aa6e06f6496a51ddae3557046f" translate="yes" xml:space="preserve">
          <source>StrictMath.sinh()</source>
          <target state="translated">StrictMath.sinh()</target>
        </trans-unit>
        <trans-unit id="e64beb7db673cd79ea70fc49955e37df1333ac67" translate="yes" xml:space="preserve">
          <source>StrictMath.sqrt()</source>
          <target state="translated">StrictMath.sqrt()</target>
        </trans-unit>
        <trans-unit id="8af3ce437845f479171531f68c637b9ab524f225" translate="yes" xml:space="preserve">
          <source>StrictMath.subtractExact()</source>
          <target state="translated">StrictMath.subtractExact()</target>
        </trans-unit>
        <trans-unit id="cfb340516d51272397fd4e40ba1a6fd306ebddb1" translate="yes" xml:space="preserve">
          <source>StrictMath.tan()</source>
          <target state="translated">StrictMath.tan()</target>
        </trans-unit>
        <trans-unit id="5099537db12bc44759346668916f2f4ce4991204" translate="yes" xml:space="preserve">
          <source>StrictMath.tanh()</source>
          <target state="translated">StrictMath.tanh()</target>
        </trans-unit>
        <trans-unit id="c91d03b9155a5a67f36077c1d15ab6241c59162b" translate="yes" xml:space="preserve">
          <source>StrictMath.toDegrees()</source>
          <target state="translated">StrictMath.toDegrees()</target>
        </trans-unit>
        <trans-unit id="3ae0ad0cb45868274fd9678060807942c68f7ef9" translate="yes" xml:space="preserve">
          <source>StrictMath.toIntExact()</source>
          <target state="translated">StrictMath.toIntExact()</target>
        </trans-unit>
        <trans-unit id="e593a580e74da59fcf43f7d48f4d306c02c78c39" translate="yes" xml:space="preserve">
          <source>StrictMath.toRadians()</source>
          <target state="translated">StrictMath.toRadians()</target>
        </trans-unit>
        <trans-unit id="e0c86079a8e619ebe856f587e84417317524236d" translate="yes" xml:space="preserve">
          <source>StrictMath.ulp()</source>
          <target state="translated">StrictMath.ulp()</target>
        </trans-unit>
        <trans-unit id="177219174a6ed792b1a744877f98cb0a24806d4e" translate="yes" xml:space="preserve">
          <source>StrikeThrough</source>
          <target state="translated">StrikeThrough</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="b665729ecc472bebb7ece8cc4a7ff4350d44132a" translate="yes" xml:space="preserve">
          <source>String &quot;LabelUI&quot;</source>
          <target state="translated">文字列 &quot;LabelUI&quot;</target>
        </trans-unit>
        <trans-unit id="57255baf920b553ec1072e4092dedbddcaeb930c" translate="yes" xml:space="preserve">
          <source>String &quot;RadioButtonUI&quot;</source>
          <target state="translated">文字列 &quot;RadioButtonUI&quot;</target>
        </trans-unit>
        <trans-unit id="ad6059d574456306eff62e2be171ef085ed4c031" translate="yes" xml:space="preserve">
          <source>String &quot;ToggleButtonUI&quot;</source>
          <target state="translated">文字列 &quot;ToggleButtonUI&quot;</target>
        </trans-unit>
        <trans-unit id="dbc02521ef65a01d72f44591d4c9d5498cb1a235" translate="yes" xml:space="preserve">
          <source>String (&quot;&quot;) is equivalent to &quot;localhost&quot;.</source>
          <target state="translated">文字列(&quot;&quot;)は &quot;localhost &quot;と同等です。</target>
        </trans-unit>
        <trans-unit id="762b6e761b14a4a426e0234031a38ec5afaaf298" translate="yes" xml:space="preserve">
          <source>String DocumentTypeDefinition</source>
          <target state="translated">String DocumentTypeDefinition</target>
        </trans-unit>
        <trans-unit id="115e6d25a50df886080248eb6296676b36c7bffc" translate="yes" xml:space="preserve">
          <source>String Name</source>
          <target state="translated">文字列名</target>
        </trans-unit>
        <trans-unit id="63e26c94b43805b49621cada66367d2eca1bc0de" translate="yes" xml:space="preserve">
          <source>String Names</source>
          <target state="translated">文字列名</target>
        </trans-unit>
        <trans-unit id="a1eb399f12a55faa53f21b28b6206964dd45b38a" translate="yes" xml:space="preserve">
          <source>String a textual explanation of mechanism error code</source>
          <target state="translated">機構エラーコードの文字列説明</target>
        </trans-unit>
        <trans-unit id="2d25522facd612920fc0b308879b7713a3dc0a97" translate="yes" xml:space="preserve">
          <source>String array derived by applying these rules to each element</source>
          <target state="translated">各要素にこれらの規則を適用して得られる文字列配列</target>
        </trans-unit>
        <trans-unit id="bc71f3b468f8dae2ec177fa41cb54ac641419ef0" translate="yes" xml:space="preserve">
          <source>String array of field names. If the descriptor is empty, you will get an empty array.</source>
          <target state="translated">フィールド名の文字列配列。記述子が空の場合は、空の配列を取得します。</target>
        </trans-unit>
        <trans-unit id="873c3ce82a606f16d7ee04bf4492ea67f677a916" translate="yes" xml:space="preserve">
          <source>String array of fields in the format</source>
          <target state="translated">フォーマットのフィールドの文字列配列</target>
        </trans-unit>
        <trans-unit id="dd4f50422e1701d4788d94182fd2bad8cf6013fe" translate="yes" xml:space="preserve">
          <source>String buffers are safe for use by multiple threads. The methods are synchronized where necessary so that all the operations on any particular instance behave as if they occur in some serial order that is consistent with the order of the method calls made by each of the individual threads involved.</source>
          <target state="translated">文字列バッファは複数のスレッドで使用しても安全です。メソッドは必要に応じて同期化されているので、特定のインスタンスに対するすべての操作は、あたかもそれが関係する個々のスレッドが行うメソッド呼び出しの順序と一致するシリアルな順序で行われているかのように振る舞います。</target>
        </trans-unit>
        <trans-unit id="bc11257fd0cf00154d155c13298cdf0702512860" translate="yes" xml:space="preserve">
          <source>String comment</source>
          <target state="translated">文字列コメント</target>
        </trans-unit>
        <trans-unit id="da065e952ea45b898d06fa622a8fa460a8453ada" translate="yes" xml:space="preserve">
          <source>String constant that can be used to identify a property on a RenderedImage obtained via the createRendering or createScaledRendering methods.</source>
          <target state="translated">createRendering または createScaledRendering メソッドで取得した RenderedImage のプロパティを識別するために使用できる文字列定数。</target>
        </trans-unit>
        <trans-unit id="cecee44a12ae048bfca1d8c9e4f2ecf477f8e04f" translate="yes" xml:space="preserve">
          <source>String constant that can be used to identify a property on a RenderedImage obtained via the createRendering or createScaledRendering methods. If such a property exists, the value of the property will be a RenderingHints object specifying which hints were observed in creating the rendering.</source>
          <target state="translated">createRendering メソッドまたは createScaledRendering メソッドで取得した RenderedImage のプロパティを識別するために使用できる文字列定数。このようなプロパティが存在する場合、そのプロパティの値は、レンダリングの作成時にどのヒントが観測されたかを指定する RenderingHints オブジェクトになります。</target>
        </trans-unit>
        <trans-unit id="f0c58f93721bdba0b655a1c3bd5a59e8091a56d0" translate="yes" xml:space="preserve">
          <source>String data to parse.</source>
          <target state="translated">解析する文字列データ。</target>
        </trans-unit>
        <trans-unit id="d231b5e5601878d86c1075df55b370088720b84a" translate="yes" xml:space="preserve">
          <source>String data to parse. If provided, this will always be treated as a sequence of 16-bit units (UTF-16 encoded characters). It is not a requirement to have an XML declaration when using &lt;code&gt;stringData&lt;/code&gt;. If an XML declaration is present, the value of the encoding attribute will be ignored.</source>
          <target state="translated">解析する文字列データ。指定した場合、これは常に16ビットユニット（UTF-16エンコード文字）のシーケンスとして扱われます。 &lt;code&gt;stringData&lt;/code&gt; を使用する場合、XML宣言は必須ではありません。XML宣言が存在する場合、encoding属性の値は無視されます。</target>
        </trans-unit>
        <trans-unit id="93c234da475cb5535f9ad1a524ddf4980b6e00e9" translate="yes" xml:space="preserve">
          <source>String decoded from the buffer's contents.</source>
          <target state="translated">バッファの内容からデコードされた文字列。</target>
        </trans-unit>
        <trans-unit id="1354268fcd393c8e1943972b3ba97f4ac7062c83" translate="yes" xml:space="preserve">
          <source>String delimiting end of quoted string. If present, specifies the string delimiting the end of a quoted string. If not present, use syntax.beginquote as end quote.</source>
          <target state="translated">引用符で囲まれた文字列の末尾を区切る文字列。存在する場合、引用符で囲まれた文字列の末尾を区切る文字列を指定します。存在しない場合は、引用符の終わりとして syntax.beginquote を使用します。</target>
        </trans-unit>
        <trans-unit id="cb0db0d1bc717a9b2e7b90026a2bf04fcd8e1c6d" translate="yes" xml:space="preserve">
          <source>String encoding , boolean standalone, String version</source>
          <target state="translated">文字列エンコーディング,ブーリアンスタンドアロン,文字列バージョン</target>
        </trans-unit>
        <trans-unit id="dd180d2042ce0e84716b7b112f59f64cfea5ff74" translate="yes" xml:space="preserve">
          <source>String explanation string for the major error code</source>
          <target state="translated">メジャーエラーコードの文字列説明文字列</target>
        </trans-unit>
        <trans-unit id="5ce11c0af26fd7e3a9612e491bfe04a26b596f26" translate="yes" xml:space="preserve">
          <source>String monitors only:</source>
          <target state="translated">文字列モニターのみ。</target>
        </trans-unit>
        <trans-unit id="13091644770b233421364097e82f41dcbd057230" translate="yes" xml:space="preserve">
          <source>String names passed to &lt;code&gt;LdapName&lt;/code&gt; or returned by it use the full Unicode character set. They may also contain characters encoded into UTF-8 with each octet represented by a three-character substring such as &quot;\\B4&quot;. They may not, however, contain characters encoded into UTF-8 with each octet represented by a single character in the string: the meaning would be ambiguous.</source>
          <target state="translated">&lt;code&gt;LdapName&lt;/code&gt; に渡される、またはLdapNameによって返される文字列名は、完全なUnicode文字セットを使用します。それらには、UTF-8にエンコードされた文字が含まれている場合があります。各オクテットは、「\\ B4」などの3文字のサブストリングで表されます。ただし、UTF-8にエンコードされた文字が含まれていない場合があり、各オクテットは文字列内の単一の文字で表されます。意味があいまいです。</target>
        </trans-unit>
        <trans-unit id="1d6282abf6efc0efaef2990021094eb019069d1d" translate="yes" xml:space="preserve">
          <source>String prefix, String namespaceURI, boolean isDefaultNamespaceDeclaration</source>
          <target state="translated">String prefix,String namespaceURI,boolean isDefaultNamespaceDeclaration</target>
        </trans-unit>
        <trans-unit id="1f301a39386fa86bc1346c176ce38af33de7d32f" translate="yes" xml:space="preserve">
          <source>String representation is the label.</source>
          <target state="translated">文字列表現はラベルです。</target>
        </trans-unit>
        <trans-unit id="6c86036eb712a99a5b1e01e5f186fc48c4ee159b" translate="yes" xml:space="preserve">
          <source>String representation of the &lt;a href=&quot;../../../../java.management/javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; for the management interface for the logging facility.</source>
          <target state="translated">ロギング機能の管理インターフェースの&lt;a href=&quot;../../../../java.management/javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; の&lt;/a&gt;文字列表現。</target>
        </trans-unit>
        <trans-unit id="55e71fab25e94ba557e2b40c00b883fc159608cf" translate="yes" xml:space="preserve">
          <source>String representation of the &lt;a href=&quot;../../../javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; for the management interface for the logging facility.</source>
          <target state="translated">ロギング機能の管理インターフェースの&lt;a href=&quot;../../../javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; の&lt;/a&gt;ストリング表現。</target>
        </trans-unit>
        <trans-unit id="f2ac35bbf240a0f25bd609c39d62e60ea75333df" translate="yes" xml:space="preserve">
          <source>String representation of the &lt;code&gt;ObjectName&lt;/code&gt; for the &lt;a href=&quot;classloadingmxbean&quot;&gt;&lt;code&gt;ClassLoadingMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列表現 &lt;code&gt;ObjectName&lt;/code&gt; のため&lt;a href=&quot;classloadingmxbean&quot;&gt; &lt;code&gt;ClassLoadingMXBean&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c205a2d6f87dc362e87a296b56821309a41446e2" translate="yes" xml:space="preserve">
          <source>String representation of the &lt;code&gt;ObjectName&lt;/code&gt; for the &lt;a href=&quot;compilationmxbean&quot;&gt;&lt;code&gt;CompilationMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列表現 &lt;code&gt;ObjectName&lt;/code&gt; のため&lt;a href=&quot;compilationmxbean&quot;&gt; &lt;code&gt;CompilationMXBean&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f9e0d97b8ca62746828fd207296efcd4101e161" translate="yes" xml:space="preserve">
          <source>String representation of the &lt;code&gt;ObjectName&lt;/code&gt; for the &lt;a href=&quot;memorymxbean&quot;&gt;&lt;code&gt;MemoryMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列表現 &lt;code&gt;ObjectName&lt;/code&gt; のため&lt;a href=&quot;memorymxbean&quot;&gt; &lt;code&gt;MemoryMXBean&lt;/code&gt; では&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="54578ef8856abea85880ec36cc78efca99860a6e" translate="yes" xml:space="preserve">
          <source>String representation of the &lt;code&gt;ObjectName&lt;/code&gt; for the &lt;a href=&quot;operatingsystemmxbean&quot;&gt;&lt;code&gt;OperatingSystemMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">の文字列表現 &lt;code&gt;ObjectName&lt;/code&gt; のため&lt;a href=&quot;operatingsystemmxbean&quot;&gt; &lt;code&gt;OperatingSystemMXBean&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5561c84df99d843c94448e4504236c9ab48a41e" translate="yes" xml:space="preserve">
          <source>String representation of the &lt;code&gt;ObjectName&lt;/code&gt; for the &lt;a href=&quot;runtimemxbean&quot;&gt;&lt;code&gt;RuntimeMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列表現 &lt;code&gt;ObjectName&lt;/code&gt; のため&lt;a href=&quot;runtimemxbean&quot;&gt; &lt;code&gt;RuntimeMXBean&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b09749d3ff0008682563d2fd63efe25d4be4d2a" translate="yes" xml:space="preserve">
          <source>String representation of the &lt;code&gt;ObjectName&lt;/code&gt; for the &lt;a href=&quot;threadmxbean&quot;&gt;&lt;code&gt;ThreadMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列表現 &lt;code&gt;ObjectName&lt;/code&gt; のための&lt;a href=&quot;threadmxbean&quot;&gt; &lt;code&gt;ThreadMXBean&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c014112b23bc04af7b81dba48eae3cc16828158" translate="yes" xml:space="preserve">
          <source>String representation of this &lt;code&gt;DataFlavor&lt;/code&gt; and its parameters.</source>
          <target state="translated">この &lt;code&gt;DataFlavor&lt;/code&gt; とそのパラメーターの文字列表現。</target>
        </trans-unit>
        <trans-unit id="df9db54e2b7cc43db4d9d47602e3600f7e03147f" translate="yes" xml:space="preserve">
          <source>String representation of this &lt;code&gt;DataFlavor&lt;/code&gt; and its parameters. The resulting &lt;code&gt;String&lt;/code&gt; contains the name of the &lt;code&gt;DataFlavor&lt;/code&gt; class, this flavor's MIME type, and its representation class. If this flavor has a primary MIME type of &quot;text&quot;, supports the charset parameter, and has an encoded representation, the flavor's charset is also included. See &lt;code&gt;selectBestTextFlavor&lt;/code&gt; for a list of text flavors which support the charset parameter.</source>
          <target state="translated">この &lt;code&gt;DataFlavor&lt;/code&gt; とそのパラメーターの文字列表現。結果の &lt;code&gt;String&lt;/code&gt; には、 &lt;code&gt;DataFlavor&lt;/code&gt; クラスの名前、このフレーバーのMIMEタイプ、およびその表現クラスが含まれます。このフレーバーのプライマリMIMEタイプが「text」で、charsetパラメーターをサポートし、エンコードされた表現がある場合、フレーバーのcharsetも含まれます。charsetパラメーターをサポートするテキストフレーバーのリストについては、 &lt;code&gt;selectBestTextFlavor&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="a6103568c183a7f5bc0db4693d91fd9426724cd7" translate="yes" xml:space="preserve">
          <source>String representation of this BigInteger in the given radix.</source>
          <target state="translated">このBigIntegerを指定された基数で文字列表現します。</target>
        </trans-unit>
        <trans-unit id="0ed8187fda691311b012bb4e33227d6a5afd6ca0" translate="yes" xml:space="preserve">
          <source>String representation of value</source>
          <target state="translated">値の文字列表現</target>
        </trans-unit>
        <trans-unit id="2713d22d4c31980fe470a0c2216b30d6d5f20627" translate="yes" xml:space="preserve">
          <source>String representing a mime parameter, or null if that parameter is not in the mime type string.</source>
          <target state="translated">mime パラメータを表す文字列、またはそのパラメータが mime 型文字列にない場合は null。</target>
        </trans-unit>
        <trans-unit id="be5f40adb62a46eead12dcf732700a7531d7d5a1" translate="yes" xml:space="preserve">
          <source>String returned by &lt;code&gt;getRedoPresentationName&lt;/code&gt;; as of Java 2 platform v1.3.1 this field is no longer used.</source>
          <target state="translated">&lt;code&gt;getRedoPresentationName&lt;/code&gt; によって返される文字列; Java 2プラットフォームv1.3.1以降、このフィールドは使用されなくなりました。</target>
        </trans-unit>
        <trans-unit id="e6a1173cefe7deb01d00be5ff9f02e005e100238" translate="yes" xml:space="preserve">
          <source>String returned by &lt;code&gt;getRedoPresentationName&lt;/code&gt;; as of Java 2 platform v1.3.1 this field is no longer used. This value is now localized and comes from the defaults table with key &lt;code&gt;AbstractUndoableEdit.redoText&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getRedoPresentationName&lt;/code&gt; によって返される文字列; Java 2プラットフォームv1.3.1以降、このフィールドは使用されなくなりました。この値はローカライズされ、キー &lt;code&gt;AbstractUndoableEdit.redoText&lt;/code&gt; を持つデフォルトテーブルから取得されます。</target>
        </trans-unit>
        <trans-unit id="ab6e89e71ffa89e3499bfcf81a691d19721b918b" translate="yes" xml:space="preserve">
          <source>String returned by &lt;code&gt;getUndoPresentationName&lt;/code&gt;; as of Java 2 platform v1.3.1 this field is no longer used.</source>
          <target state="translated">&lt;code&gt;getUndoPresentationName&lt;/code&gt; によって返される文字列; Java 2プラットフォームv1.3.1以降、このフィールドは使用されなくなりました。</target>
        </trans-unit>
        <trans-unit id="2a58f3e29a72d12f1d2eaefa026e675d1710755b" translate="yes" xml:space="preserve">
          <source>String returned by &lt;code&gt;getUndoPresentationName&lt;/code&gt;; as of Java 2 platform v1.3.1 this field is no longer used. This value is now localized and comes from the defaults table with key &lt;code&gt;AbstractUndoableEdit.undoText&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getUndoPresentationName&lt;/code&gt; によって返される文字列; Java 2プラットフォームv1.3.1以降、このフィールドは使用されなくなりました。この値はローカライズされ、キー &lt;code&gt;AbstractUndoableEdit.undoText&lt;/code&gt; を持つデフォルトテーブルから取得されます。</target>
        </trans-unit>
        <trans-unit id="7502677023ec03119d537f351946d3c4b63882b1" translate="yes" xml:space="preserve">
          <source>String target, String data</source>
          <target state="translated">文字列ターゲット、文字列データ</target>
        </trans-unit>
        <trans-unit id="1ab0c5fd3e302128d85e4377760707ca1118776b" translate="yes" xml:space="preserve">
          <source>String used when formatting if the value does not completely fill the mask</source>
          <target state="translated">値がマスクを完全に埋めきれない場合にフォーマットする際に使用される文字列</target>
        </trans-unit>
        <trans-unit id="b317a5c54fcf36f42dbec1ca3f9a83a2281cb1af" translate="yes" xml:space="preserve">
          <source>String value of the KeyEvent, unless &lt;code&gt;getKeyChar&lt;/code&gt; returns KeyEvent.CHAR_UNDEFINED..</source>
          <target state="translated">&lt;code&gt;getKeyChar&lt;/code&gt; がKeyEvent.CHAR_UNDEFINED。を返さない限り、KeyEventの文字列値。</target>
        </trans-unit>
        <trans-unit id="055d66db845dc1f513893a75759455658839b818" translate="yes" xml:space="preserve">
          <source>String values with different but equivalent usage of quoting, escaping, or UTF8-hex-encoding are considered equal. The case of the values is ignored during the comparison.</source>
          <target state="translated">クォート、エスケープ、UTF8-hex-encoding の使用法が異なるが同等の文字列値は同等とみなされます。値のケースは比較の際に無視されます。</target>
        </trans-unit>
        <trans-unit id="34ba361c09764787edd72894a141e2a03adaf0d8" translate="yes" xml:space="preserve">
          <source>String version of this resolution attribute.</source>
          <target state="translated">この解像度属性の文字列バージョン。</target>
        </trans-unit>
        <trans-unit id="671b9afab9e15362b82147a6c7983fe2ff2a2cae" translate="yes" xml:space="preserve">
          <source>String version of this two-dimensional size attribute.</source>
          <target state="translated">この二次元サイズ属性の文字列バージョン。</target>
        </trans-unit>
        <trans-unit id="c637ead74346c866f0960b72f372813307712470" translate="yes" xml:space="preserve">
          <source>String.charAt()</source>
          <target state="translated">String.charAt()</target>
        </trans-unit>
        <trans-unit id="f5debbda035a6e550144021c32b55c2065a1eee5" translate="yes" xml:space="preserve">
          <source>String.codePointAt()</source>
          <target state="translated">String.codePointAt()</target>
        </trans-unit>
        <trans-unit id="a3d8a39b3468416aaba14f5ede9b44e6a66237bf" translate="yes" xml:space="preserve">
          <source>String.codePointBefore()</source>
          <target state="translated">String.codePointBefore()</target>
        </trans-unit>
        <trans-unit id="2e6ce91db7542d8d4e2b25d1bdabc7281d99d283" translate="yes" xml:space="preserve">
          <source>String.codePointCount()</source>
          <target state="translated">String.codePointCount()</target>
        </trans-unit>
        <trans-unit id="736998bd7a178fe98466e44cb3a4a4fa3c4f9d43" translate="yes" xml:space="preserve">
          <source>String.compareTo()</source>
          <target state="translated">String.compareTo()</target>
        </trans-unit>
        <trans-unit id="cbca76439514ad0ed9ca477b43dd19d5df35a73d" translate="yes" xml:space="preserve">
          <source>String.compareToIgnoreCase()</source>
          <target state="translated">String.compareToIgnoreCase()</target>
        </trans-unit>
        <trans-unit id="8683c789bb4260c1b8540de932ae14280a64d71d" translate="yes" xml:space="preserve">
          <source>String.concat()</source>
          <target state="translated">String.concat()</target>
        </trans-unit>
        <trans-unit id="6be121cf017a7e70fa67f5b92d83392c834ed03b" translate="yes" xml:space="preserve">
          <source>String.contains()</source>
          <target state="translated">String.contains()</target>
        </trans-unit>
        <trans-unit id="308733b351316270955d5cfc91730e7676733295" translate="yes" xml:space="preserve">
          <source>String.contentEquals()</source>
          <target state="translated">String.contentEquals()</target>
        </trans-unit>
        <trans-unit id="bb006a88224fdffefbe6b10c62bb76098779c264" translate="yes" xml:space="preserve">
          <source>String.copyValueOf()</source>
          <target state="translated">String.copyValueOf()</target>
        </trans-unit>
        <trans-unit id="2a97c0979dabcde442a94de44d6f813864659707" translate="yes" xml:space="preserve">
          <source>String.endsWith()</source>
          <target state="translated">String.endsWith()</target>
        </trans-unit>
        <trans-unit id="534a3f61604240568fe18c93b052be9a44466340" translate="yes" xml:space="preserve">
          <source>String.equals()</source>
          <target state="translated">String.equals()</target>
        </trans-unit>
        <trans-unit id="84e7ef40a1ed4506a1bac6e88d8ddeded50ddb13" translate="yes" xml:space="preserve">
          <source>String.equalsIgnoreCase()</source>
          <target state="translated">String.equalsIgnoreCase()</target>
        </trans-unit>
        <trans-unit id="5194a91e06301a989410337dd217f2c0ed9abd81" translate="yes" xml:space="preserve">
          <source>String.format()</source>
          <target state="translated">String.format()</target>
        </trans-unit>
        <trans-unit id="05b29958fdea921b55ebb097a3affbe8fc081ef4" translate="yes" xml:space="preserve">
          <source>String.getBytes()</source>
          <target state="translated">String.getBytes()</target>
        </trans-unit>
        <trans-unit id="e0ce02027bbb3a71dccdaddef30423997a91e37c" translate="yes" xml:space="preserve">
          <source>String.getChars()</source>
          <target state="translated">String.getChars()</target>
        </trans-unit>
        <trans-unit id="9df6402c3e505c7e556156266592e973fa13f633" translate="yes" xml:space="preserve">
          <source>String.hashCode()</source>
          <target state="translated">String.hashCode()</target>
        </trans-unit>
        <trans-unit id="57cdfc28612baa44d9b801ecdd9786648969ade8" translate="yes" xml:space="preserve">
          <source>String.indexOf()</source>
          <target state="translated">String.indexOf()</target>
        </trans-unit>
        <trans-unit id="749c0ac447e064f6765f973e66d5eb164963f19b" translate="yes" xml:space="preserve">
          <source>String.intern()</source>
          <target state="translated">String.intern()</target>
        </trans-unit>
        <trans-unit id="eda831d9918d54511b6fd9e767610c553ee1834c" translate="yes" xml:space="preserve">
          <source>String.isEmpty()</source>
          <target state="translated">String.isEmpty()</target>
        </trans-unit>
        <trans-unit id="e29acf9ecd6fa9f7fe13c9e4c872502ec5b85122" translate="yes" xml:space="preserve">
          <source>String.join()</source>
          <target state="translated">String.join()</target>
        </trans-unit>
        <trans-unit id="3c71d20886551d61cad75b8b861093ecf093951e" translate="yes" xml:space="preserve">
          <source>String.lastIndexOf()</source>
          <target state="translated">String.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="f778b5d1c974daecaa9938040f21c455d86615a8" translate="yes" xml:space="preserve">
          <source>String.length()</source>
          <target state="translated">String.length()</target>
        </trans-unit>
        <trans-unit id="accc800d6e736c43d87b156fb289f98d39a39837" translate="yes" xml:space="preserve">
          <source>String.matches()</source>
          <target state="translated">String.matches()</target>
        </trans-unit>
        <trans-unit id="13819079a48a2a6a75732d71088d486e8f56e042" translate="yes" xml:space="preserve">
          <source>String.offsetByCodePoints()</source>
          <target state="translated">String.offsetByCodePoints()</target>
        </trans-unit>
        <trans-unit id="20c7e97825d581461f95368169b5f779185cdb9b" translate="yes" xml:space="preserve">
          <source>String.regionMatches()</source>
          <target state="translated">String.regionMatches()</target>
        </trans-unit>
        <trans-unit id="4fa43e6c2bfc99a5d5595026979678898717cba3" translate="yes" xml:space="preserve">
          <source>String.replace()</source>
          <target state="translated">String.replace()</target>
        </trans-unit>
        <trans-unit id="ef0a5eed4a037b3e3b08cb8effa62a3d81616b6c" translate="yes" xml:space="preserve">
          <source>String.replaceAll()</source>
          <target state="translated">String.replaceAll()</target>
        </trans-unit>
        <trans-unit id="1df52ec15697fb26ee6aaf4c266f9db40f7c8ad1" translate="yes" xml:space="preserve">
          <source>String.replaceFirst()</source>
          <target state="translated">String.replaceFirst()</target>
        </trans-unit>
        <trans-unit id="ac4175c194775f4bc4a29cc540d6eb829722928a" translate="yes" xml:space="preserve">
          <source>String.split()</source>
          <target state="translated">String.split()</target>
        </trans-unit>
        <trans-unit id="905a9744794b103424c3041d469b6bb53b5e0923" translate="yes" xml:space="preserve">
          <source>String.startsWith()</source>
          <target state="translated">String.startsWith()</target>
        </trans-unit>
        <trans-unit id="e76e79784e0a20a7b3a05dc705176bb38b409e8b" translate="yes" xml:space="preserve">
          <source>String.subSequence()</source>
          <target state="translated">String.subSequence()</target>
        </trans-unit>
        <trans-unit id="778c766f0211155295dacfdcfe2cfd89e1516b97" translate="yes" xml:space="preserve">
          <source>String.substring()</source>
          <target state="translated">String.substring()</target>
        </trans-unit>
        <trans-unit id="7947103b5503ff5e05a7b5c266b452eeb7f5b860" translate="yes" xml:space="preserve">
          <source>String.toCharArray()</source>
          <target state="translated">String.toCharArray()</target>
        </trans-unit>
        <trans-unit id="9f3e5777bde2c321e3646d9333930d022069936b" translate="yes" xml:space="preserve">
          <source>String.toLowerCase()</source>
          <target state="translated">String.toLowerCase()</target>
        </trans-unit>
        <trans-unit id="302b23bd707c0a79fe8cf9a19faf8fc4777fd369" translate="yes" xml:space="preserve">
          <source>String.toString()</source>
          <target state="translated">String.toString()</target>
        </trans-unit>
        <trans-unit id="751fea106399bd9d2e73e1e2b8d24bf176e4da8c" translate="yes" xml:space="preserve">
          <source>String.toUpperCase()</source>
          <target state="translated">String.toUpperCase()</target>
        </trans-unit>
        <trans-unit id="47188c46f266bae1dc38a2772bdf6d5d6aa70be6" translate="yes" xml:space="preserve">
          <source>String.trim()</source>
          <target state="translated">String.trim()</target>
        </trans-unit>
        <trans-unit id="3a0151fee5a7bb7fe3101011806e1fb29e4faced" translate="yes" xml:space="preserve">
          <source>String.valueOf()</source>
          <target state="translated">String.valueOf()</target>
        </trans-unit>
        <trans-unit id="ec5943b427c8c74931f3968fc7849b654d73c68f" translate="yes" xml:space="preserve">
          <source>StringBuffer</source>
          <target state="translated">StringBuffer</target>
        </trans-unit>
        <trans-unit id="fa330c0a497991efbbb40d6b4ff9d93b9dc978a2" translate="yes" xml:space="preserve">
          <source>StringBuffer holding the current buffer value.</source>
          <target state="translated">現在のバッファ値を保持するStringBuffer。</target>
        </trans-unit>
        <trans-unit id="1a533adf68ce82f2efed8930b2547c2d11f407aa" translate="yes" xml:space="preserve">
          <source>StringBuffer.append()</source>
          <target state="translated">StringBuffer.append()</target>
        </trans-unit>
        <trans-unit id="336780a7ede44f9c3d9d981a70a1930ae6ecf194" translate="yes" xml:space="preserve">
          <source>StringBuffer.appendCodePoint()</source>
          <target state="translated">StringBuffer.appendCodePoint()</target>
        </trans-unit>
        <trans-unit id="51b69fa62d1cf8800fa2bf4f8823ba5976aca93a" translate="yes" xml:space="preserve">
          <source>StringBuffer.capacity()</source>
          <target state="translated">StringBuffer.capacity()</target>
        </trans-unit>
        <trans-unit id="271a5ab2299fde475122af1ea6353e0bc709d03b" translate="yes" xml:space="preserve">
          <source>StringBuffer.charAt()</source>
          <target state="translated">StringBuffer.charAt()</target>
        </trans-unit>
        <trans-unit id="3455b22681a96c017d4c65c7c5734107bd6e4d39" translate="yes" xml:space="preserve">
          <source>StringBuffer.codePointAt()</source>
          <target state="translated">StringBuffer.codePointAt()</target>
        </trans-unit>
        <trans-unit id="16cbc2198ae1f9cf021df81fe7bf18fc60272b40" translate="yes" xml:space="preserve">
          <source>StringBuffer.codePointBefore()</source>
          <target state="translated">StringBuffer.codePointBefore()</target>
        </trans-unit>
        <trans-unit id="30b3833b39626a717933ab753f0eaebd7434ee28" translate="yes" xml:space="preserve">
          <source>StringBuffer.codePointCount()</source>
          <target state="translated">StringBuffer.codePointCount()</target>
        </trans-unit>
        <trans-unit id="cca6ad530c5d38065f821cc6e948e412846ee294" translate="yes" xml:space="preserve">
          <source>StringBuffer.delete()</source>
          <target state="translated">StringBuffer.delete()</target>
        </trans-unit>
        <trans-unit id="817c6fa31221c898d850e8821caebe47fee36ac6" translate="yes" xml:space="preserve">
          <source>StringBuffer.deleteCharAt()</source>
          <target state="translated">StringBuffer.deleteCharAt()</target>
        </trans-unit>
        <trans-unit id="0043196637efd822e7d802e708764fc3eaed735b" translate="yes" xml:space="preserve">
          <source>StringBuffer.ensureCapacity()</source>
          <target state="translated">StringBuffer.ensureCapacity()</target>
        </trans-unit>
        <trans-unit id="f3582aa86a574fd68723c9473a073771eae0cd9d" translate="yes" xml:space="preserve">
          <source>StringBuffer.getChars()</source>
          <target state="translated">StringBuffer.getChars()</target>
        </trans-unit>
        <trans-unit id="71858bf4859f741326cf68eebf2446ad3071ada8" translate="yes" xml:space="preserve">
          <source>StringBuffer.indexOf()</source>
          <target state="translated">StringBuffer.indexOf()</target>
        </trans-unit>
        <trans-unit id="3ae82c8ab585e915162dcce793506f5715fd7c59" translate="yes" xml:space="preserve">
          <source>StringBuffer.insert()</source>
          <target state="translated">StringBuffer.insert()</target>
        </trans-unit>
        <trans-unit id="83c78006d874444132c75104f0d4b8b9cf785df7" translate="yes" xml:space="preserve">
          <source>StringBuffer.lastIndexOf()</source>
          <target state="translated">StringBuffer.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="f1e10d94a445d1d6e43b87c28eb351f939ceb90a" translate="yes" xml:space="preserve">
          <source>StringBuffer.length()</source>
          <target state="translated">StringBuffer.length()</target>
        </trans-unit>
        <trans-unit id="51310daa2cda24c40309da6eda54e76c1fd00d6c" translate="yes" xml:space="preserve">
          <source>StringBuffer.offsetByCodePoints()</source>
          <target state="translated">StringBuffer.offsetByCodePoints()</target>
        </trans-unit>
        <trans-unit id="e7754977729bf49d246cae813d278e4e30e2709e" translate="yes" xml:space="preserve">
          <source>StringBuffer.replace()</source>
          <target state="translated">StringBuffer.replace()</target>
        </trans-unit>
        <trans-unit id="82303dbc55895d776c45dbca23e7d6c2ff2b353b" translate="yes" xml:space="preserve">
          <source>StringBuffer.reverse()</source>
          <target state="translated">StringBuffer.reverse()</target>
        </trans-unit>
        <trans-unit id="c64395946b7966b8cdabd479af3c62222d17fa40" translate="yes" xml:space="preserve">
          <source>StringBuffer.setCharAt()</source>
          <target state="translated">StringBuffer.setCharAt()</target>
        </trans-unit>
        <trans-unit id="d88fdb898310e2fee50626f078c7b5495b68ee40" translate="yes" xml:space="preserve">
          <source>StringBuffer.setLength()</source>
          <target state="translated">StringBuffer.setLength()</target>
        </trans-unit>
        <trans-unit id="dee2c933fd8f4bcf0ea854bb50d1fd75b9a49728" translate="yes" xml:space="preserve">
          <source>StringBuffer.subSequence()</source>
          <target state="translated">StringBuffer.subSequence()</target>
        </trans-unit>
        <trans-unit id="2a3bbad0bdad3626a74bbcadf0bb5694b67489cc" translate="yes" xml:space="preserve">
          <source>StringBuffer.substring()</source>
          <target state="translated">StringBuffer.substring()</target>
        </trans-unit>
        <trans-unit id="be8842e87827ee461bf6ee5af0dd1629144ae9c5" translate="yes" xml:space="preserve">
          <source>StringBuffer.toString()</source>
          <target state="translated">StringBuffer.toString()</target>
        </trans-unit>
        <trans-unit id="981e41fdee764c98924b919e54db024c9b833946" translate="yes" xml:space="preserve">
          <source>StringBuffer.trimToSize()</source>
          <target state="translated">StringBuffer.trimToSize()</target>
        </trans-unit>
        <trans-unit id="1d4e001a26c4a5f32adc3b55bc85b5b35c1dab38" translate="yes" xml:space="preserve">
          <source>StringBufferInputStream</source>
          <target state="translated">StringBufferInputStream</target>
        </trans-unit>
        <trans-unit id="9b2fc06702095d64dc9236460fb981203e46b106" translate="yes" xml:space="preserve">
          <source>StringBufferInputStream.available()</source>
          <target state="translated">StringBufferInputStream.available()</target>
        </trans-unit>
        <trans-unit id="9965e377e8c2a89e88a986d081feb0b8e834dc75" translate="yes" xml:space="preserve">
          <source>StringBufferInputStream.read()</source>
          <target state="translated">StringBufferInputStream.read()</target>
        </trans-unit>
        <trans-unit id="fe345157dcb6ea86a2d515f7f60981682866a51b" translate="yes" xml:space="preserve">
          <source>StringBufferInputStream.reset()</source>
          <target state="translated">StringBufferInputStream.reset()</target>
        </trans-unit>
        <trans-unit id="acab81983832fd815f1218898d13b71d5bcf7d10" translate="yes" xml:space="preserve">
          <source>StringBufferInputStream.skip()</source>
          <target state="translated">StringBufferInputStream.skip()</target>
        </trans-unit>
        <trans-unit id="d8722e7c9e74dd4282c8ddb6aafb6678ffcf1c49" translate="yes" xml:space="preserve">
          <source>StringBuilder</source>
          <target state="translated">StringBuilder</target>
        </trans-unit>
        <trans-unit id="fda0909fc1c14ff1798c4a40f43105c2ae909239" translate="yes" xml:space="preserve">
          <source>StringBuilder.append()</source>
          <target state="translated">StringBuilder.append()</target>
        </trans-unit>
        <trans-unit id="938c906322fa6b29c99172a2228df471cbf310ad" translate="yes" xml:space="preserve">
          <source>StringBuilder.appendCodePoint()</source>
          <target state="translated">StringBuilder.appendCodePoint()</target>
        </trans-unit>
        <trans-unit id="c5c5144b25ccd672e2191836548895032037da04" translate="yes" xml:space="preserve">
          <source>StringBuilder.capacity()</source>
          <target state="translated">StringBuilder.capacity()</target>
        </trans-unit>
        <trans-unit id="63257dae408ad3ac8c460ff29058d6e84ec45526" translate="yes" xml:space="preserve">
          <source>StringBuilder.charAt()</source>
          <target state="translated">StringBuilder.charAt()</target>
        </trans-unit>
        <trans-unit id="85a6407688490c99153e98d4c94fe27431b96852" translate="yes" xml:space="preserve">
          <source>StringBuilder.codePointAt()</source>
          <target state="translated">StringBuilder.codePointAt()</target>
        </trans-unit>
        <trans-unit id="0c4b099abf271ae350826e8d11a908af2a1e8ebe" translate="yes" xml:space="preserve">
          <source>StringBuilder.codePointBefore()</source>
          <target state="translated">StringBuilder.codePointBefore()</target>
        </trans-unit>
        <trans-unit id="d8a562edf62ccb984291e48981be50a7c4e71f69" translate="yes" xml:space="preserve">
          <source>StringBuilder.codePointCount()</source>
          <target state="translated">StringBuilder.codePointCount()</target>
        </trans-unit>
        <trans-unit id="7a65b77e9c5992e9bc5540fa8f1983ab22152efe" translate="yes" xml:space="preserve">
          <source>StringBuilder.delete()</source>
          <target state="translated">StringBuilder.delete()</target>
        </trans-unit>
        <trans-unit id="d79901cdf38e1880b3629f0fa7645f277ad726a4" translate="yes" xml:space="preserve">
          <source>StringBuilder.deleteCharAt()</source>
          <target state="translated">StringBuilder.deleteCharAt()</target>
        </trans-unit>
        <trans-unit id="10534886a456f581e7a78589803788be20d0d08a" translate="yes" xml:space="preserve">
          <source>StringBuilder.ensureCapacity()</source>
          <target state="translated">StringBuilder.ensureCapacity()</target>
        </trans-unit>
        <trans-unit id="a8a31485ba963d6813b199ace493b7215924cd30" translate="yes" xml:space="preserve">
          <source>StringBuilder.getChars()</source>
          <target state="translated">StringBuilder.getChars()</target>
        </trans-unit>
        <trans-unit id="e1f870572a0677c8f8fe564250bca1113989eed5" translate="yes" xml:space="preserve">
          <source>StringBuilder.indexOf()</source>
          <target state="translated">StringBuilder.indexOf()</target>
        </trans-unit>
        <trans-unit id="b0b69ac8c569131e208859f7602f36c6018e13e1" translate="yes" xml:space="preserve">
          <source>StringBuilder.insert()</source>
          <target state="translated">StringBuilder.insert()</target>
        </trans-unit>
        <trans-unit id="566bd1141031f2452406fc663e32c52517d48b07" translate="yes" xml:space="preserve">
          <source>StringBuilder.lastIndexOf()</source>
          <target state="translated">StringBuilder.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="f57b08175e73daaf6bdc08204a057f694733cebb" translate="yes" xml:space="preserve">
          <source>StringBuilder.length()</source>
          <target state="translated">StringBuilder.length()</target>
        </trans-unit>
        <trans-unit id="3d6ff20d4bddac502b971a8372b59a8bb94a85bb" translate="yes" xml:space="preserve">
          <source>StringBuilder.offsetByCodePoints()</source>
          <target state="translated">StringBuilder.offsetByCodePoints()</target>
        </trans-unit>
        <trans-unit id="80921eadd226da76ae5fdba7715f94b59535066f" translate="yes" xml:space="preserve">
          <source>StringBuilder.replace()</source>
          <target state="translated">StringBuilder.replace()</target>
        </trans-unit>
        <trans-unit id="4f4110ef4f0eae0ddc354652971d036b51f12d0a" translate="yes" xml:space="preserve">
          <source>StringBuilder.reverse()</source>
          <target state="translated">StringBuilder.reverse()</target>
        </trans-unit>
        <trans-unit id="32b7b18866357eb1bca39d0ec353f69bc614f010" translate="yes" xml:space="preserve">
          <source>StringBuilder.setCharAt()</source>
          <target state="translated">StringBuilder.setCharAt()</target>
        </trans-unit>
        <trans-unit id="62ec39e3e8986e6767555a5fc9f61c92a245f720" translate="yes" xml:space="preserve">
          <source>StringBuilder.setLength()</source>
          <target state="translated">StringBuilder.setLength()</target>
        </trans-unit>
        <trans-unit id="6c34386afd85394439ec36f55f70fc33e46b1b5a" translate="yes" xml:space="preserve">
          <source>StringBuilder.subSequence()</source>
          <target state="translated">StringBuilder.subSequence()</target>
        </trans-unit>
        <trans-unit id="1f0506fda701f7b74e1fb22fccca53f3b0ce1374" translate="yes" xml:space="preserve">
          <source>StringBuilder.substring()</source>
          <target state="translated">StringBuilder.substring()</target>
        </trans-unit>
        <trans-unit id="5d1aa93625c74f2e78a16d7de5f040f938f661d3" translate="yes" xml:space="preserve">
          <source>StringBuilder.toString()</source>
          <target state="translated">StringBuilder.toString()</target>
        </trans-unit>
        <trans-unit id="3540055e9599547f8c18617dd8f5b630e2816c84" translate="yes" xml:space="preserve">
          <source>StringBuilder.trimToSize()</source>
          <target state="translated">StringBuilder.trimToSize()</target>
        </trans-unit>
        <trans-unit id="eab33bab6ebd3de566ed3cbef549d273c190dab6" translate="yes" xml:space="preserve">
          <source>StringCharacterIterator</source>
          <target state="translated">StringCharacterIterator</target>
        </trans-unit>
        <trans-unit id="23f867772329193491731a4fd93dfa9e6169a664" translate="yes" xml:space="preserve">
          <source>StringCharacterIterator.clone()</source>
          <target state="translated">StringCharacterIterator.clone()</target>
        </trans-unit>
        <trans-unit id="945afd1ed5cbbc39979a02fdbe1deaee58fc2669" translate="yes" xml:space="preserve">
          <source>StringCharacterIterator.current()</source>
          <target state="translated">StringCharacterIterator.current()</target>
        </trans-unit>
        <trans-unit id="3a9e12f1ef9d26a72c76933c95c245df4578f12e" translate="yes" xml:space="preserve">
          <source>StringCharacterIterator.equals()</source>
          <target state="translated">StringCharacterIterator.equals()</target>
        </trans-unit>
        <trans-unit id="37d690198a0765a6b78757bab38d8dd412e3f5a2" translate="yes" xml:space="preserve">
          <source>StringCharacterIterator.first()</source>
          <target state="translated">StringCharacterIterator.first()</target>
        </trans-unit>
        <trans-unit id="bdbb0da14c4e695b3489c289e4ca5621535dda37" translate="yes" xml:space="preserve">
          <source>StringCharacterIterator.getBeginIndex()</source>
          <target state="translated">StringCharacterIterator.getBeginIndex()</target>
        </trans-unit>
        <trans-unit id="0e51c72e2fa7817c16e13118a4c1e1ae537e852e" translate="yes" xml:space="preserve">
          <source>StringCharacterIterator.getEndIndex()</source>
          <target state="translated">StringCharacterIterator.getEndIndex()</target>
        </trans-unit>
        <trans-unit id="f9671eb133ec323567081795acf48a1c767309ec" translate="yes" xml:space="preserve">
          <source>StringCharacterIterator.getIndex()</source>
          <target state="translated">StringCharacterIterator.getIndex()</target>
        </trans-unit>
        <trans-unit id="4376327a9e71f19cfe961d76f42f183a9a00f0be" translate="yes" xml:space="preserve">
          <source>StringCharacterIterator.hashCode()</source>
          <target state="translated">StringCharacterIterator.hashCode()</target>
        </trans-unit>
        <trans-unit id="5e779d58c959c5ce37e0a690a20259d79a78157a" translate="yes" xml:space="preserve">
          <source>StringCharacterIterator.last()</source>
          <target state="translated">StringCharacterIterator.last()</target>
        </trans-unit>
        <trans-unit id="6148d8e6cfa1ab59fc7a6d64d588b1b0a0848d5f" translate="yes" xml:space="preserve">
          <source>StringCharacterIterator.next()</source>
          <target state="translated">StringCharacterIterator.next()</target>
        </trans-unit>
        <trans-unit id="c7dd7af1b48774d4e80590b20070ee3484fc2083" translate="yes" xml:space="preserve">
          <source>StringCharacterIterator.previous()</source>
          <target state="translated">StringCharacterIterator.previous()</target>
        </trans-unit>
        <trans-unit id="50ab041cdf5a768371cbdfc59fd5f9782ea360ac" translate="yes" xml:space="preserve">
          <source>StringCharacterIterator.setIndex()</source>
          <target state="translated">StringCharacterIterator.setIndex()</target>
        </trans-unit>
        <trans-unit id="4855df9f2c20a9c685b113c62710b5fb7220fa3a" translate="yes" xml:space="preserve">
          <source>StringCharacterIterator.setText()</source>
          <target state="translated">StringCharacterIterator.setText()</target>
        </trans-unit>
        <trans-unit id="bf5175daaa1fd00a81dbc6a3d8db779a55a717e7" translate="yes" xml:space="preserve">
          <source>StringConcatException</source>
          <target state="translated">StringConcatException</target>
        </trans-unit>
        <trans-unit id="9aa2abf3f8e16b30551b49a74acff101ac039f0d" translate="yes" xml:space="preserve">
          <source>StringConcatException is thrown by &lt;a href=&quot;stringconcatfactory&quot;&gt;&lt;code&gt;StringConcatFactory&lt;/code&gt;&lt;/a&gt; when linkage invariants are violated.</source>
          <target state="translated">StringConcatExceptionは、リンケージ不変条件に違反した場合に&lt;a href=&quot;stringconcatfactory&quot;&gt; &lt;code&gt;StringConcatFactory&lt;/code&gt; &lt;/a&gt;によってスローされます。</target>
        </trans-unit>
        <trans-unit id="c7bf3e9675f4c579f49f48d403883b21e9b22270" translate="yes" xml:space="preserve">
          <source>StringConcatFactory</source>
          <target state="translated">StringConcatFactory</target>
        </trans-unit>
        <trans-unit id="0b01b8b6ff12812410d3c9b9cd492f0fca6c56b6" translate="yes" xml:space="preserve">
          <source>StringContent</source>
          <target state="translated">StringContent</target>
        </trans-unit>
        <trans-unit id="5c768d687c20ccb918d3229933595184cf420365" translate="yes" xml:space="preserve">
          <source>StringIndexOutOfBoundsException</source>
          <target state="translated">StringIndexOutOfBoundsException</target>
        </trans-unit>
        <trans-unit id="71bc7d99e60c5775e108784fb856ff9b488cf15a" translate="yes" xml:space="preserve">
          <source>StringJoiner</source>
          <target state="translated">StringJoiner</target>
        </trans-unit>
        <trans-unit id="ad16291c3e2332d5dcbb6ba61edb14dc694865ff" translate="yes" xml:space="preserve">
          <source>StringJoiner.add()</source>
          <target state="translated">StringJoiner.add()</target>
        </trans-unit>
        <trans-unit id="99ff7254047ae478478033807bea4ed1171d8aa9" translate="yes" xml:space="preserve">
          <source>StringJoiner.length()</source>
          <target state="translated">StringJoiner.length()</target>
        </trans-unit>
        <trans-unit id="fd535ea065a7f96d7d80d7a0489fb6b65c224b59" translate="yes" xml:space="preserve">
          <source>StringJoiner.merge()</source>
          <target state="translated">StringJoiner.merge()</target>
        </trans-unit>
        <trans-unit id="05358e8d3901c488f381a3b2534ce1335d96bfeb" translate="yes" xml:space="preserve">
          <source>StringJoiner.setEmptyValue()</source>
          <target state="translated">StringJoiner.setEmptyValue()</target>
        </trans-unit>
        <trans-unit id="2b731cc39cd511baf7315429d4ea19a79e9b8770" translate="yes" xml:space="preserve">
          <source>StringJoiner.toString()</source>
          <target state="translated">StringJoiner.toString()</target>
        </trans-unit>
        <trans-unit id="550d7ca1521a8c7dafb5e01f204acad396d3b36b" translate="yes" xml:space="preserve">
          <source>StringMonitor</source>
          <target state="translated">StringMonitor</target>
        </trans-unit>
        <trans-unit id="b1b773d21e4151684351b6e3dccd53ab9b8da26f" translate="yes" xml:space="preserve">
          <source>StringMonitor.getDerivedGauge()</source>
          <target state="translated">StringMonitor.getDerivedGauge()</target>
        </trans-unit>
        <trans-unit id="6b247b01f7a7bbcce7527184ca5d9657fc0dbcfd" translate="yes" xml:space="preserve">
          <source>StringMonitor.getDerivedGaugeTimeStamp()</source>
          <target state="translated">StringMonitor.getDerivedGaugeTimeStamp()</target>
        </trans-unit>
        <trans-unit id="10336380fed8a3d7637e190ac3bb1445b432b235" translate="yes" xml:space="preserve">
          <source>StringMonitor.getNotificationInfo()</source>
          <target state="translated">StringMonitor.getNotificationInfo()</target>
        </trans-unit>
        <trans-unit id="b0e22a971a512be283de41da258ce412687c9823" translate="yes" xml:space="preserve">
          <source>StringMonitor.getNotifyDiffer()</source>
          <target state="translated">StringMonitor.getNotifyDiffer()</target>
        </trans-unit>
        <trans-unit id="dd6bcf7bb2322adcc01d01227a091846c5346144" translate="yes" xml:space="preserve">
          <source>StringMonitor.getNotifyMatch()</source>
          <target state="translated">StringMonitor.getNotifyMatch()</target>
        </trans-unit>
        <trans-unit id="e347baac957a57578dd0a7e24089a566d47b8f4b" translate="yes" xml:space="preserve">
          <source>StringMonitor.getStringToCompare()</source>
          <target state="translated">StringMonitor.getStringToCompare()</target>
        </trans-unit>
        <trans-unit id="b5b28fda423c4db6f7100a6f6e6846f95b6c56e9" translate="yes" xml:space="preserve">
          <source>StringMonitor.setNotifyDiffer()</source>
          <target state="translated">StringMonitor.setNotifyDiffer()</target>
        </trans-unit>
        <trans-unit id="fc7e96b81dade6c546356689a2f724831acdf87e" translate="yes" xml:space="preserve">
          <source>StringMonitor.setNotifyMatch()</source>
          <target state="translated">StringMonitor.setNotifyMatch()</target>
        </trans-unit>
        <trans-unit id="ac6285a93e00a9363a7066a7d4d9c0a7e1811fdb" translate="yes" xml:space="preserve">
          <source>StringMonitor.setStringToCompare()</source>
          <target state="translated">StringMonitor.setStringToCompare()</target>
        </trans-unit>
        <trans-unit id="4034535832d999757e95ff7b6b42e1ce180d6739" translate="yes" xml:space="preserve">
          <source>StringMonitor.start()</source>
          <target state="translated">StringMonitor.start()</target>
        </trans-unit>
        <trans-unit id="9006807435609a36c69caadbd192016733e851b7" translate="yes" xml:space="preserve">
          <source>StringMonitor.stop()</source>
          <target state="translated">StringMonitor.stop()</target>
        </trans-unit>
        <trans-unit id="b3e55b96641b76d60094f0d2b965351c80573c07" translate="yes" xml:space="preserve">
          <source>StringMonitorMBean</source>
          <target state="translated">StringMonitorMBean</target>
        </trans-unit>
        <trans-unit id="93a1c7aa04cacbd882bac4a188bed2df2ded0e91" translate="yes" xml:space="preserve">
          <source>StringMonitorMBean.getDerivedGauge()</source>
          <target state="translated">StringMonitorMBean.getDerivedGauge()</target>
        </trans-unit>
        <trans-unit id="c13ecb469f5d56b814f33fe68923b24e2d66e097" translate="yes" xml:space="preserve">
          <source>StringMonitorMBean.getDerivedGaugeTimeStamp()</source>
          <target state="translated">StringMonitorMBean.getDerivedGaugeTimeStamp()</target>
        </trans-unit>
        <trans-unit id="e3356ee822445fba6e2ba0fe5240452beeb27add" translate="yes" xml:space="preserve">
          <source>StringMonitorMBean.getNotifyDiffer()</source>
          <target state="translated">StringMonitorMBean.getNotifyDiffer()</target>
        </trans-unit>
        <trans-unit id="f4118be345958ec1cb57238b9edfe3eb9c56be76" translate="yes" xml:space="preserve">
          <source>StringMonitorMBean.getNotifyMatch()</source>
          <target state="translated">StringMonitorMBean.getNotifyMatch()</target>
        </trans-unit>
        <trans-unit id="fc72310c04a233148139f6c4fa334855ab1d62ab" translate="yes" xml:space="preserve">
          <source>StringMonitorMBean.getStringToCompare()</source>
          <target state="translated">StringMonitorMBean.getStringToCompare()</target>
        </trans-unit>
        <trans-unit id="9537d8dfb4e06f5b8c90e3e96ffe4b0d867c836d" translate="yes" xml:space="preserve">
          <source>StringMonitorMBean.setNotifyDiffer()</source>
          <target state="translated">StringMonitorMBean.setNotifyDiffer()</target>
        </trans-unit>
        <trans-unit id="28bcd1704070571d129eb8e3eb4f333fdefce4e5" translate="yes" xml:space="preserve">
          <source>StringMonitorMBean.setNotifyMatch()</source>
          <target state="translated">StringMonitorMBean.setNotifyMatch()</target>
        </trans-unit>
        <trans-unit id="cea63a09bfd8f4e805f0cd2642a5104bdf1f70d0" translate="yes" xml:space="preserve">
          <source>StringMonitorMBean.setStringToCompare()</source>
          <target state="translated">StringMonitorMBean.setStringToCompare()</target>
        </trans-unit>
        <trans-unit id="94cafc2b6556d75b65fafc9cbd1ba633ae375cff" translate="yes" xml:space="preserve">
          <source>StringReader</source>
          <target state="translated">StringReader</target>
        </trans-unit>
        <trans-unit id="87cf129de8a4d799474bdc8ad5bf1e0be2ce44eb" translate="yes" xml:space="preserve">
          <source>StringReader.close()</source>
          <target state="translated">StringReader.close()</target>
        </trans-unit>
        <trans-unit id="94323723edcde49d79780c82e5d258600ea0b6ca" translate="yes" xml:space="preserve">
          <source>StringReader.mark()</source>
          <target state="translated">StringReader.mark()</target>
        </trans-unit>
        <trans-unit id="6283b8ca52bb0257f0016fdf5050ef8c7843a04b" translate="yes" xml:space="preserve">
          <source>StringReader.markSupported()</source>
          <target state="translated">StringReader.markSupported()</target>
        </trans-unit>
        <trans-unit id="1639a076c8753721d860b7c1b971dc9bd2fd5098" translate="yes" xml:space="preserve">
          <source>StringReader.read()</source>
          <target state="translated">StringReader.read()</target>
        </trans-unit>
        <trans-unit id="ee468da095908ddc0259a41b13b6df7d16801ec9" translate="yes" xml:space="preserve">
          <source>StringReader.ready()</source>
          <target state="translated">StringReader.ready()</target>
        </trans-unit>
        <trans-unit id="5e32a1839b23ee72b0a8837c2b8c04bd4d45f4e0" translate="yes" xml:space="preserve">
          <source>StringReader.reset()</source>
          <target state="translated">StringReader.reset()</target>
        </trans-unit>
        <trans-unit id="61b2db6bc0ebbada5f0cb1fef996cf094f89ee93" translate="yes" xml:space="preserve">
          <source>StringReader.skip()</source>
          <target state="translated">StringReader.skip()</target>
        </trans-unit>
        <trans-unit id="af3862302b39bb27222611e821dc61dee7489f87" translate="yes" xml:space="preserve">
          <source>StringRefAddr</source>
          <target state="translated">StringRefAddr</target>
        </trans-unit>
        <trans-unit id="57484d79bbe068b45497113813304f0e96ed0689" translate="yes" xml:space="preserve">
          <source>StringRefAddr.getContent()</source>
          <target state="translated">StringRefAddr.getContent()</target>
        </trans-unit>
        <trans-unit id="6bb08e90b357afa58d807f645d5ac573eff3db8a" translate="yes" xml:space="preserve">
          <source>StringSelection</source>
          <target state="translated">StringSelection</target>
        </trans-unit>
        <trans-unit id="1063d4c9d73221d6e27014e73be907c06a649465" translate="yes" xml:space="preserve">
          <source>StringTokenizer</source>
          <target state="translated">StringTokenizer</target>
        </trans-unit>
        <trans-unit id="56d924cadb9fcc942946f34db77a89c006fe8c10" translate="yes" xml:space="preserve">
          <source>StringTokenizer.countTokens()</source>
          <target state="translated">StringTokenizer.countTokens()</target>
        </trans-unit>
        <trans-unit id="7b0015574a7d5abe310a6b2101517c02ea3d37b0" translate="yes" xml:space="preserve">
          <source>StringTokenizer.hasMoreElements()</source>
          <target state="translated">StringTokenizer.hasMoreElements()</target>
        </trans-unit>
        <trans-unit id="1efc48c15a38ffb3ef56d6b2d639aacf6e354494" translate="yes" xml:space="preserve">
          <source>StringTokenizer.hasMoreTokens()</source>
          <target state="translated">StringTokenizer.hasMoreTokens()</target>
        </trans-unit>
        <trans-unit id="a36544a50b7970071b21a1b2b193284866bc8a49" translate="yes" xml:space="preserve">
          <source>StringTokenizer.nextElement()</source>
          <target state="translated">StringTokenizer.nextElement()</target>
        </trans-unit>
        <trans-unit id="89922be60ceeafc13a9a15ab1f7c4030a6087cf9" translate="yes" xml:space="preserve">
          <source>StringTokenizer.nextToken()</source>
          <target state="translated">StringTokenizer.nextToken()</target>
        </trans-unit>
        <trans-unit id="f8efd16ab4f97e638742dd4af24a2ef53a51ec32" translate="yes" xml:space="preserve">
          <source>StringValueExp</source>
          <target state="translated">StringValueExp</target>
        </trans-unit>
        <trans-unit id="f92c5143db65756e68d441adffbc1d2422799320" translate="yes" xml:space="preserve">
          <source>StringValueExp.apply()</source>
          <target state="translated">StringValueExp.apply()</target>
        </trans-unit>
        <trans-unit id="5bee9096c3092b89d992648594874388eeb6fd41" translate="yes" xml:space="preserve">
          <source>StringValueExp.getValue()</source>
          <target state="translated">StringValueExp.getValue()</target>
        </trans-unit>
        <trans-unit id="afabedd643fbd68147bdbd956af45c39446aa49e" translate="yes" xml:space="preserve">
          <source>StringValueExp.setMBeanServer()</source>
          <target state="translated">StringValueExp.setMBeanServer()</target>
        </trans-unit>
        <trans-unit id="0021e54a408fc1df1fc66e3a23524d6dda760ea9" translate="yes" xml:space="preserve">
          <source>StringValueExp.toString()</source>
          <target state="translated">StringValueExp.toString()</target>
        </trans-unit>
        <trans-unit id="901f27604e20208eb2f26a9fe8a04a85ffe2165c" translate="yes" xml:space="preserve">
          <source>StringWriter</source>
          <target state="translated">StringWriter</target>
        </trans-unit>
        <trans-unit id="961b3972b27f62d857bd4c79e34a2c3e28c5ebc2" translate="yes" xml:space="preserve">
          <source>StringWriter.append()</source>
          <target state="translated">StringWriter.append()</target>
        </trans-unit>
        <trans-unit id="ade05bdb45721df6051d63eb3c2c0847e29f2147" translate="yes" xml:space="preserve">
          <source>StringWriter.close()</source>
          <target state="translated">StringWriter.close()</target>
        </trans-unit>
        <trans-unit id="4c375bb6ff2a841aea13a66e20a157cbd4fa9522" translate="yes" xml:space="preserve">
          <source>StringWriter.flush()</source>
          <target state="translated">StringWriter.flush()</target>
        </trans-unit>
        <trans-unit id="3d747d0cd8e49dff8306a653de4ff9f45e47a7fe" translate="yes" xml:space="preserve">
          <source>StringWriter.getBuffer()</source>
          <target state="translated">StringWriter.getBuffer()</target>
        </trans-unit>
        <trans-unit id="ab26924731b2eb51584f9df21815fff445c64ab4" translate="yes" xml:space="preserve">
          <source>StringWriter.toString()</source>
          <target state="translated">StringWriter.toString()</target>
        </trans-unit>
        <trans-unit id="553907fa860256e3906f740b044af9d5cef826f4" translate="yes" xml:space="preserve">
          <source>StringWriter.write()</source>
          <target state="translated">StringWriter.write()</target>
        </trans-unit>
        <trans-unit id="7b320cfede5dfb62207fd258205dec29002ded0b" translate="yes" xml:space="preserve">
          <source>String[]</source>
          <target state="translated">String[]</target>
        </trans-unit>
        <trans-unit id="7c2011d64c46797d7ab929869a89f535982c150a" translate="yes" xml:space="preserve">
          <source>Strings are constant; their values cannot be changed after they are created. String buffers support mutable strings. Because String objects are immutable they can be shared. For example:</source>
          <target state="translated">文字列は不変で、作成後に値を変更することはできません。文字列バッファは、変更可能な文字列をサポートしています。文字列オブジェクトは不変なので、共有することができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="d36bcb0a06202cc5fcc488102afc546d1714d27e" translate="yes" xml:space="preserve">
          <source>Strings that match the &lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;&gt;XSLT specification for xsl:output attributes&lt;/a&gt; can be referenced from the &lt;a href=&quot;outputkeys&quot;&gt;&lt;code&gt;OutputKeys&lt;/code&gt;&lt;/a&gt; class. Other strings can be specified as well. If the transformer does not recognize an output key, a &lt;a href=&quot;../../../../java.base/java/lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; is thrown, unless the key name is &lt;a href=&quot;#qname-delimiter&quot;&gt;namespace qualified&lt;/a&gt;. Output key names that are namespace qualified are always allowed, although they may be ignored by some implementations.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xslt#output&quot;&gt;xsl：output属性&lt;/a&gt;のXSLT仕様に一致する文字&lt;a href=&quot;outputkeys&quot;&gt; &lt;code&gt;OutputKeys&lt;/code&gt; &lt;/a&gt;は、OutputKeysクラスから参照できます。他の文字列も指定できます。トランスフォーマーが出力キーを認識しない場合、キー名が&lt;a href=&quot;#qname-delimiter&quot;&gt;名前空間で修飾されてい&lt;/a&gt;ない限り、&lt;a href=&quot;../../../../java.base/java/lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt;がスローされます。名前空間で修飾された出力キー名は常に許可されますが、一部の実装では無視される場合があります。</target>
        </trans-unit>
        <trans-unit id="9b7d8736d004b4bc91c7306f66b0d709136a12e5" translate="yes" xml:space="preserve">
          <source>Stroke</source>
          <target state="translated">Stroke</target>
        </trans-unit>
        <trans-unit id="64a3d4d9a6fef2aeb74717df42b1d19741bedeaa" translate="yes" xml:space="preserve">
          <source>Stroke normalization control hint key.</source>
          <target state="translated">ストローク正規化制御のヒントキー。</target>
        </trans-unit>
        <trans-unit id="9ed3ce37ee735ae2ed40a746a651b8875353c581" translate="yes" xml:space="preserve">
          <source>Stroke normalization control hint key. The &lt;code&gt;STROKE_CONTROL&lt;/code&gt; hint controls whether a rendering implementation should or is allowed to modify the geometry of rendered shapes for various purposes.</source>
          <target state="translated">ストローク正規化制御ヒントキー。 &lt;code&gt;STROKE_CONTROL&lt;/code&gt; のヒントコントロールレンダリング実装がすべきか、様々な目的のためにレンダリングされた図形の形状を変更できるかどうか。</target>
        </trans-unit>
        <trans-unit id="c48ea72da938bef0ab56623aa83709f2f688cb4a" translate="yes" xml:space="preserve">
          <source>Stroke normalization control hint value -- geometry may be modified or left pure depending on the tradeoffs in a given implementation.</source>
          <target state="translated">ストローク正規化コントロールのヒント値 --所定のインプリメンテーションでのトレードオフに応じて、ジオメトリを変更したり、純粋なままにしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="ee2b4d946d97cb18042575f1fa570eae5a41b814" translate="yes" xml:space="preserve">
          <source>Stroke normalization control hint value -- geometry may be modified or left pure depending on the tradeoffs in a given implementation. Typically this setting allows an implementation to use a fast integer coordinate based platform rendering library, but does not specifically request normalization for uniformity or aesthetics.</source>
          <target state="translated">ストローク正規化コントロールのヒント値 --与えられたインプリメンテーションでのトレードオフに応じて、ジオメトリを変更したり、純粋なままにしたりすることができます。通常、この設定では、高速整数座標ベースのプラットフォームレンダリングライブラリを使用することができますが、均一性や美観のための正規化は特に要求されません。</target>
        </trans-unit>
        <trans-unit id="617b8c9db6b39f5cf97d30870a7bf97f21d1ac4f" translate="yes" xml:space="preserve">
          <source>Stroke normalization control hint value -- geometry should be left unmodified and rendered with sub-pixel accuracy.</source>
          <target state="translated">ストローク正規化コントロールのヒント値 --ジオメトリは変更せず、サブピクセルの精度でレンダリングする必要があります。</target>
        </trans-unit>
        <trans-unit id="089e04ed14c539e9b7812bf3916725a0db984a42" translate="yes" xml:space="preserve">
          <source>Stroke normalization control hint value -- geometry should be normalized to improve uniformity or spacing of lines and overall aesthetics.</source>
          <target state="translated">ストローク正規化コントロールのヒント値 --ジオメトリは、線の均一性や間隔を改善し、全体的な美観を向上させるために正規化されるべきです。</target>
        </trans-unit>
        <trans-unit id="9b7d201e758ade447082c2caf5c275f9c5bae2ee" translate="yes" xml:space="preserve">
          <source>Stroke normalization control hint value -- geometry should be normalized to improve uniformity or spacing of lines and overall aesthetics. Note that different normalization algorithms may be more successful than others for given input paths.</source>
          <target state="translated">ストローク正規化コントロールのヒント値 --ジオメトリは、線の均一性や間隔を改善し、全体的な美観を向上させるために正規化されるべきです。与えられた入力パスに対しては、異なる正規化アルゴリズムが他のアルゴリズムよりも成功する場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d502730b284195991ddc901d6257c3044fddfbff" translate="yes" xml:space="preserve">
          <source>StrokeBorder</source>
          <target state="translated">StrokeBorder</target>
        </trans-unit>
        <trans-unit id="03a5e5acd5480c34067b0e63ecb2a85076c2e172" translate="yes" xml:space="preserve">
          <source>Strokes the outline of a &lt;code&gt;Shape&lt;/code&gt; using the settings of the current &lt;code&gt;Graphics2D&lt;/code&gt; context.</source>
          <target state="translated">現在の &lt;code&gt;Graphics2D&lt;/code&gt; コンテキストの設定を使用して、 &lt;code&gt;Shape&lt;/code&gt; のアウトラインをストロークします。</target>
        </trans-unit>
        <trans-unit id="2b7a52b2181da32d414f7f5429b8439f304d41b3" translate="yes" xml:space="preserve">
          <source>Strokes the outline of a &lt;code&gt;Shape&lt;/code&gt; using the settings of the current &lt;code&gt;Graphics2D&lt;/code&gt; context. The rendering attributes applied include the &lt;code&gt;Clip&lt;/code&gt;, &lt;code&gt;Transform&lt;/code&gt;, &lt;code&gt;Paint&lt;/code&gt;, &lt;code&gt;Composite&lt;/code&gt; and &lt;code&gt;Stroke&lt;/code&gt; attributes.</source>
          <target state="translated">現在の &lt;code&gt;Graphics2D&lt;/code&gt; コンテキストの設定を使用して、 &lt;code&gt;Shape&lt;/code&gt; のアウトラインをストロークします。適用されるレンダリング属性には、 &lt;code&gt;Clip&lt;/code&gt; 、 &lt;code&gt;Transform&lt;/code&gt; 、 &lt;code&gt;Paint&lt;/code&gt; 、 &lt;code&gt;Composite&lt;/code&gt; 、 &lt;code&gt;Stroke&lt;/code&gt; 属性が含まれます。</target>
        </trans-unit>
        <trans-unit id="2684320b57a782ce0439d9845b025f4167f73160" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;AL&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様の強力な双方向性文字型「AL」。</target>
        </trans-unit>
        <trans-unit id="8af8df666f0e8eca9822d09b9b728f2790d43a77" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;L&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様の強力な双方向性文字型「L」。</target>
        </trans-unit>
        <trans-unit id="277bd06a9fb3591003f711495ac46fc89282f28e" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;LRE&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様の強力な双方向性文字型「LRE」。</target>
        </trans-unit>
        <trans-unit id="f0a8c58716e90117a1fa5949bd4edff7bafc489d" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;LRO&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様の強力な双方向性文字型「LRO」。</target>
        </trans-unit>
        <trans-unit id="5c434a125001d98e3d65585f819ed8840b4f8897" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;R&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様の強力な双方向性文字型「R」。</target>
        </trans-unit>
        <trans-unit id="64ad0d6aedac34d34b627e0784d46dea64c2ff5a" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;RLE&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様の強い双方向性文字型「RLE」。</target>
        </trans-unit>
        <trans-unit id="1665148f18e9a39912a6a12baccd3148269f2320" translate="yes" xml:space="preserve">
          <source>Strong bidirectional character type &quot;RLO&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様の強い双方向性文字型「RLO」。</target>
        </trans-unit>
        <trans-unit id="a4ab848fe5c4b2e5f638f279c7f13cc481bac6da" translate="yes" xml:space="preserve">
          <source>Struct</source>
          <target state="translated">Struct</target>
        </trans-unit>
        <trans-unit id="144f6fe6216e5e29c85ee13ee09e86cd28c3e7ec" translate="yes" xml:space="preserve">
          <source>Structural interference of a source can be managed in the following ways (in approximate order of decreasing desirability):</source>
          <target state="translated">ソースの構造的な干渉は、以下の方法で管理することができます(望ましくない順に近似的に)。</target>
        </trans-unit>
        <trans-unit id="3215717cea59bfa4a37e1cb669239fddafdd2b57" translate="yes" xml:space="preserve">
          <source>Stub method for &lt;code&gt;ActivationGroup.newInstance&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ActivationGroup.newInstance&lt;/code&gt; のスタブメソッド。</target>
        </trans-unit>
        <trans-unit id="815e6aa754112416e08747c4f1bed519813f8407" translate="yes" xml:space="preserve">
          <source>Stub method for &lt;code&gt;ActivationGroup.newInstance&lt;/code&gt;. Invokes the &lt;code&gt;invoke&lt;/code&gt; method on this instance's &lt;code&gt;RemoteObject.ref&lt;/code&gt; field, with &lt;code&gt;this&lt;/code&gt; as the first argument, a two-element &lt;code&gt;Object[]&lt;/code&gt; as the second argument (with &lt;code&gt;id&lt;/code&gt; as the first element and &lt;code&gt;desc&lt;/code&gt; as the second element), and -5274445189091581345L as the third argument, and returns the result. If that invocation throws a &lt;code&gt;RuntimeException&lt;/code&gt;, &lt;code&gt;RemoteException&lt;/code&gt;, or an &lt;code&gt;ActivationException&lt;/code&gt;, then that exception is thrown to the caller. If that invocation throws any other &lt;code&gt;java.lang.Exception&lt;/code&gt;, then a &lt;code&gt;java.rmi.UnexpectedException&lt;/code&gt; is thrown to the caller with the original exception as the cause.</source>
          <target state="translated">&lt;code&gt;ActivationGroup.newInstance&lt;/code&gt; のスタブメソッド。このインスタンスの &lt;code&gt;RemoteObject.ref&lt;/code&gt; フィールドで &lt;code&gt;invoke&lt;/code&gt; メソッドを呼び出します。 &lt;code&gt;this&lt;/code&gt; を最初の引数として、2要素の &lt;code&gt;Object[]&lt;/code&gt; を2番目の引数として（ &lt;code&gt;id&lt;/code&gt; を最初の要素として、 &lt;code&gt;desc&lt;/code&gt; を2番目の要素として）、-5274445189091581345Lを3番目の引数であり、結果を返します。その呼び出しが &lt;code&gt;RuntimeException&lt;/code&gt; 、 &lt;code&gt;RemoteException&lt;/code&gt; 、または &lt;code&gt;ActivationException&lt;/code&gt; をスローした場合、その例外は呼び出し元にスローされます。その呼び出しが他の &lt;code&gt;java.lang.Exception&lt;/code&gt; をスローする場合、 &lt;code&gt;java.rmi.UnexpectedException&lt;/code&gt; は、元の例外を原因として呼び出し元にスローされます。</target>
        </trans-unit>
        <trans-unit id="db84fe9e5d0bf2abc3354fd4c17f191a39bd696c" translate="yes" xml:space="preserve">
          <source>StubNotFoundException</source>
          <target state="translated">StubNotFoundException</target>
        </trans-unit>
        <trans-unit id="7254b75b024e2c737a3af8693ae017d913e24e50" translate="yes" xml:space="preserve">
          <source>Stubs are dynamically generated by constructing an instance of a &lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; with the following characteristics:</source>
          <target state="translated">スタブは、次の特性を持つ&lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt;インスタンスを構築することによって動的に生成されます。</target>
        </trans-unit>
        <trans-unit id="99a0efc6cfd85d8ff2732a6718140f822cb90472" translate="yes" xml:space="preserve">
          <source>Style</source>
          <target state="translated">Style</target>
        </trans-unit>
        <trans-unit id="adf496fa37950192e6be1568058af566831f758d" translate="yes" xml:space="preserve">
          <source>Style to always output the sign if the value exceeds the pad width.</source>
          <target state="translated">値がパッド幅を超えた場合、常に符号を出力するスタイル。</target>
        </trans-unit>
        <trans-unit id="53bd4f8367a138efa0caaac5db57057b3d46e3ea" translate="yes" xml:space="preserve">
          <source>Style to always output the sign if the value exceeds the pad width. A negative value will always output the '-' sign.</source>
          <target state="translated">値がパッド幅を超えた場合、常に記号を出力するスタイル。負の値は常に '-' 記号を出力します。</target>
        </trans-unit>
        <trans-unit id="1107d8859ddfe4e4079553ac0d42e88319afaf68" translate="yes" xml:space="preserve">
          <source>Style to always output the sign, where zero will output '+'.</source>
          <target state="translated">常に符号を出力するスタイルで、ゼロは '+' を出力します。</target>
        </trans-unit>
        <trans-unit id="250f0b342a000b63a166e464df237159f5a7d859" translate="yes" xml:space="preserve">
          <source>Style to block negative values, throwing an exception on printing.</source>
          <target state="translated">負の値をブロックするスタイルで、印刷時に例外をスローします。</target>
        </trans-unit>
        <trans-unit id="7a7b02c78159ccf64699113709c8882a48b39f7d" translate="yes" xml:space="preserve">
          <source>Style to never output sign, only outputting the absolute value.</source>
          <target state="translated">符号を出力せず、絶対値のみを出力するスタイル。</target>
        </trans-unit>
        <trans-unit id="541105abcfd2d3f33906a1bd0baf05bc4ec25a7b" translate="yes" xml:space="preserve">
          <source>Style to output the sign only if the value is negative.</source>
          <target state="translated">値が負の場合のみ符号を出力するスタイル。</target>
        </trans-unit>
        <trans-unit id="ce21263496dd893c8c657e5e8ed8a19052e043bb" translate="yes" xml:space="preserve">
          <source>Style to resolve dates and times in a smart, or intelligent, manner.</source>
          <target state="translated">日付や時間をスマートに、または知的に解決するスタイル。</target>
        </trans-unit>
        <trans-unit id="8a1fcab47ebdd06a121816ae8fef9fe77bf82100" translate="yes" xml:space="preserve">
          <source>Style to resolve dates and times leniently.</source>
          <target state="translated">日付と時間を惜しみなく解決するスタイル。</target>
        </trans-unit>
        <trans-unit id="72c36a227190d74f9c6b5bb92e79ee0b7e5a9652" translate="yes" xml:space="preserve">
          <source>Style to resolve dates and times strictly.</source>
          <target state="translated">日時を厳密に解決するスタイル。</target>
        </trans-unit>
        <trans-unit id="9b53936d3a798669ce7f9e9f37d8e9904f22c977" translate="yes" xml:space="preserve">
          <source>StyleAction</source>
          <target state="translated">StyleAction</target>
        </trans-unit>
        <trans-unit id="53e5a3a46c754fdfa19920a744aa3e4d53f87368" translate="yes" xml:space="preserve">
          <source>StyleConstants</source>
          <target state="translated">StyleConstants</target>
        </trans-unit>
        <trans-unit id="2cb15ef4ef52ff21de315e846dacc21cc3ab7fe2" translate="yes" xml:space="preserve">
          <source>StyleConstants.CharacterConstants</source>
          <target state="translated">StyleConstants.CharacterConstants</target>
        </trans-unit>
        <trans-unit id="a0fad2c12b231c2501d8e43ef5a8b2706715685e" translate="yes" xml:space="preserve">
          <source>StyleConstants.ColorConstants</source>
          <target state="translated">StyleConstants.ColorConstants</target>
        </trans-unit>
        <trans-unit id="531a6a460edbea0d027944b067e0c625a9571f8b" translate="yes" xml:space="preserve">
          <source>StyleConstants.ComponentElementName</source>
          <target state="translated">StyleConstants.ComponentElementName</target>
        </trans-unit>
        <trans-unit id="c42047ec77a9814338ca8d27dc3b0f08fa34a7cd" translate="yes" xml:space="preserve">
          <source>StyleConstants.FontConstants</source>
          <target state="translated">StyleConstants.FontConstants</target>
        </trans-unit>
        <trans-unit id="2a0b2b5eda90e90da1daa0bb1ec7b0b477349136" translate="yes" xml:space="preserve">
          <source>StyleConstants.IconElementName</source>
          <target state="translated">StyleConstants.IconElementName</target>
        </trans-unit>
        <trans-unit id="cc94635703afeeaf103a303b03501637cddd38b7" translate="yes" xml:space="preserve">
          <source>StyleConstants.ParagraphConstants</source>
          <target state="translated">StyleConstants.ParagraphConstants</target>
        </trans-unit>
        <trans-unit id="61ab8e5952aba15b85d96beeb3c6cb6aba5fe760" translate="yes" xml:space="preserve">
          <source>StyleContext</source>
          <target state="translated">StyleContext</target>
        </trans-unit>
        <trans-unit id="5b9fe79c8d6ab9d923e5a65ac54cfbbdd5cb8da9" translate="yes" xml:space="preserve">
          <source>StyleContext.NamedStyle</source>
          <target state="translated">StyleContext.NamedStyle</target>
        </trans-unit>
        <trans-unit id="6ec155e4a6ea98b88a900b6f6efdc592d6e36f94" translate="yes" xml:space="preserve">
          <source>StyleContext.SmallAttributeSet</source>
          <target state="translated">StyleContext.SmallAttributeSet</target>
        </trans-unit>
        <trans-unit id="ce867a84f68c1d0cd7e5d2e0a575c394cc078c03" translate="yes" xml:space="preserve">
          <source>StyleSheet</source>
          <target state="translated">StyleSheet</target>
        </trans-unit>
        <trans-unit id="04f98d6b5f30933a01606cec35838a537fb47397" translate="yes" xml:space="preserve">
          <source>StyleSheet.BoxPainter</source>
          <target state="translated">StyleSheet.BoxPainter</target>
        </trans-unit>
        <trans-unit id="6d4b3eb744e47c8cde17098ab045072bee7b2437" translate="yes" xml:space="preserve">
          <source>StyleSheet.ListPainter</source>
          <target state="translated">StyleSheet.ListPainter</target>
        </trans-unit>
        <trans-unit id="0ac89d32aee60ffff05a896ebc5dfa811e22fdac" translate="yes" xml:space="preserve">
          <source>StyledDocument</source>
          <target state="translated">StyledDocument</target>
        </trans-unit>
        <trans-unit id="cf95688ae18a3654cb1c6294e3ec7ab718b84acb" translate="yes" xml:space="preserve">
          <source>StyledEditorKit</source>
          <target state="translated">StyledEditorKit</target>
        </trans-unit>
        <trans-unit id="1042cb198ad48eb76120f7aba075b9ccb4076155" translate="yes" xml:space="preserve">
          <source>StyledEditorKit.AlignmentAction</source>
          <target state="translated">StyledEditorKit.AlignmentAction</target>
        </trans-unit>
        <trans-unit id="3412b7cbd59aa4eb6727e00f637d150db6c05c12" translate="yes" xml:space="preserve">
          <source>StyledEditorKit.BoldAction</source>
          <target state="translated">StyledEditorKit.BoldAction</target>
        </trans-unit>
        <trans-unit id="ae3fba76ec46c92c6ecabe875673de2e77416bfb" translate="yes" xml:space="preserve">
          <source>StyledEditorKit.FontFamilyAction</source>
          <target state="translated">StyledEditorKit.FontFamilyAction</target>
        </trans-unit>
        <trans-unit id="3e08beff8641371ed6f7d8b2896da1dfc239e448" translate="yes" xml:space="preserve">
          <source>StyledEditorKit.FontSizeAction</source>
          <target state="translated">StyledEditorKit.FontSizeAction</target>
        </trans-unit>
        <trans-unit id="8942e6866e1e86935354aebc208c15bc36ddc54b" translate="yes" xml:space="preserve">
          <source>StyledEditorKit.ForegroundAction</source>
          <target state="translated">StyledEditorKit.ForegroundAction</target>
        </trans-unit>
        <trans-unit id="ba307a0ca92e0625f2a33cbe18e9c589dd33b471" translate="yes" xml:space="preserve">
          <source>StyledEditorKit.ItalicAction</source>
          <target state="translated">StyledEditorKit.ItalicAction</target>
        </trans-unit>
        <trans-unit id="fc387429b1b818e816e2bcde03c13424687196c2" translate="yes" xml:space="preserve">
          <source>StyledEditorKit.StyledTextAction</source>
          <target state="translated">StyledEditorKit.StyledTextAction</target>
        </trans-unit>
        <trans-unit id="62edefedeeada1b781efd981700c2c2a057dcfad" translate="yes" xml:space="preserve">
          <source>StyledEditorKit.UnderlineAction</source>
          <target state="translated">StyledEditorKit.UnderlineAction</target>
        </trans-unit>
        <trans-unit id="a5230a39f4874efc51e44b91cb416b7e0e0646fd" translate="yes" xml:space="preserve">
          <source>StyledTextAction</source>
          <target state="translated">StyledTextAction</target>
        </trans-unit>
        <trans-unit id="35a56010d9cc24d3d084744a67fd40833c84e0ff" translate="yes" xml:space="preserve">
          <source>Styles should NOT depend upon this being called, in certain cases it may never be called.</source>
          <target state="translated">スタイルはこれが呼び出されるかどうかに依存してはいけません。</target>
        </trans-unit>
        <trans-unit id="86ef3518f60d64e0772a9b78bd8d17cb20edfa82" translate="yes" xml:space="preserve">
          <source>Sub-interfaces such as the &lt;code&gt;CachedRowSet&lt;/code&gt;&amp;trade; interface define the method &lt;code&gt;CachedRowSet.setKeyColumns&lt;/code&gt;, which allows primary key semantics to be enforced on specific columns. Implementations of the &lt;code&gt;setMatchColumn(int columnIdx)&lt;/code&gt; method should ensure that the constraints on the key columns are maintained when a &lt;code&gt;CachedRowSet&lt;/code&gt; object sets a primary key column as a match column.</source>
          <target state="translated">&lt;code&gt;CachedRowSet&lt;/code&gt; &amp;trade;インターフェースなどのサブインターフェースは、メソッド &lt;code&gt;CachedRowSet.setKeyColumns&lt;/code&gt; を定義します。これにより、特定の列に主キーのセマンティクスを適用できます。 &lt;code&gt;setMatchColumn(int columnIdx)&lt;/code&gt; メソッドの実装では、 &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトが主キー列を一致列として設定するときに、キー列の制約が維持されるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="29e70f63b2cfd5f7e7c44c2918ceadaa523069eb" translate="yes" xml:space="preserve">
          <source>Subclass and override if you wish to provide a &lt;code&gt;DocumentFilter&lt;/code&gt; to restrict what can be input.</source>
          <target state="translated">入力できるものを制限する &lt;code&gt;DocumentFilter&lt;/code&gt; を提供する場合は、サブクラス化してオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="8d42aec40825f37491ff043b1e887e245be8a93f" translate="yes" xml:space="preserve">
          <source>Subclass and override if you wish to provide a &lt;code&gt;DocumentFilter&lt;/code&gt; to restrict what can be input. &lt;code&gt;install&lt;/code&gt; will install the returned value onto the &lt;code&gt;JFormattedTextField&lt;/code&gt;.</source>
          <target state="translated">入力できるものを制限する &lt;code&gt;DocumentFilter&lt;/code&gt; を提供する場合は、サブクラス化してオーバーライドします。 &lt;code&gt;install&lt;/code&gt; は、戻り値を &lt;code&gt;JFormattedTextField&lt;/code&gt; にインストールします。</target>
        </trans-unit>
        <trans-unit id="c7b1512646141bc9d088fa92148612f62e2d1e5f" translate="yes" xml:space="preserve">
          <source>Subclass and override if you wish to provide a custom set of &lt;code&gt;Action&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;Action&lt;/code&gt; のカスタムセットを提供する場合は、サブクラス化してオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="70bc880be68640476c1ca6ebcb87159ee15d6a97" translate="yes" xml:space="preserve">
          <source>Subclass and override if you wish to provide a custom set of &lt;code&gt;Action&lt;/code&gt;s. &lt;code&gt;install&lt;/code&gt; will install these on the &lt;code&gt;JFormattedTextField&lt;/code&gt;'s &lt;code&gt;ActionMap&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Action&lt;/code&gt; のカスタムセットを提供する場合は、サブクラス化してオーバーライドします。 &lt;code&gt;install&lt;/code&gt; は、これらを &lt;code&gt;JFormattedTextField&lt;/code&gt; の &lt;code&gt;ActionMap&lt;/code&gt; にインストールします。</target>
        </trans-unit>
        <trans-unit id="1fbfb79b1446b55cccf6acea536f43104a8eb27e" translate="yes" xml:space="preserve">
          <source>Subclass and override if you wish to provide a filter to restrict where the user can navigate to.</source>
          <target state="translated">ユーザーが移動できる場所を制限するフィルタを提供したい場合は、サブクラスとオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="cc44f652c602ccc2817caa7b78f8cf373955a3e7" translate="yes" xml:space="preserve">
          <source>Subclass and override if you wish to provide a filter to restrict where the user can navigate to. &lt;code&gt;install&lt;/code&gt; will install the returned value onto the &lt;code&gt;JFormattedTextField&lt;/code&gt;.</source>
          <target state="translated">ユーザーが移動できる場所を制限するフィルターを提供する場合は、サブクラス化してオーバーライドします。 &lt;code&gt;install&lt;/code&gt; は、戻り値を &lt;code&gt;JFormattedTextField&lt;/code&gt; にインストールします。</target>
        </trans-unit>
        <trans-unit id="0fde3f85787bcb3870ea42192209ec6833dc9a2a" translate="yes" xml:space="preserve">
          <source>Subclass implementation of ObjectOutputStream or ObjectInputStream to override the default serialization or deserialization, respectively, of objects</source>
          <target state="translated">ObjectOutputStreamまたはObjectInputStreamのサブクラスの実装は、それぞれオブジェクトのデフォルトのシリアライズまたはデシリアライズをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="8c7bae8a522b17abdbf00e566ebef390076fb951" translate="yes" xml:space="preserve">
          <source>Subclass implementation of the thread context class loader methods</source>
          <target state="translated">スレッドコンテキストクラスのローダーメソッドのサブクラス実装</target>
        </trans-unit>
        <trans-unit id="5eca82b722e8f08d67ba6d59ac32c58f305441f7" translate="yes" xml:space="preserve">
          <source>Subclass implementations of PermissionCollection should assume that they may be called simultaneously from multiple threads, and therefore should be synchronized properly. Furthermore, Enumerations returned via the &lt;code&gt;elements&lt;/code&gt; method are not &lt;em&gt;fail-fast&lt;/em&gt;. Modifications to a collection should not be performed while enumerating over that collection.</source>
          <target state="translated">PermissionCollectionのサブクラス実装は、複数のスレッドから同時に呼び出される可能性があることを前提としているため、適切に同期する必要があります。さらに、 &lt;code&gt;elements&lt;/code&gt; メソッドを介して返される列挙型は&lt;em&gt;フェイルファストで&lt;/em&gt;はありませ&lt;em&gt;ん&lt;/em&gt;。コレクションの列挙中に、コレクションの変更を実行しないでください。</target>
        </trans-unit>
        <trans-unit id="0e4de14a60ed5a0bc69ec8dbc9ab55237bc6a7c3" translate="yes" xml:space="preserve">
          <source>Subclass implementations of this abstract class must provide a public constructor that takes a &lt;code&gt;Configuration.Parameters&lt;/code&gt; object as an input parameter. This constructor also must throw an IllegalArgumentException if it does not understand the &lt;code&gt;Configuration.Parameters&lt;/code&gt; input.</source>
          <target state="translated">この抽象クラスのサブクラス実装は、 &lt;code&gt;Configuration.Parameters&lt;/code&gt; オブジェクトを入力パラメーターとして受け取るパブリックコンストラクターを提供する必要があります。このコンストラクターは、 &lt;code&gt;Configuration.Parameters&lt;/code&gt; 入力を理解できない場合、IllegalArgumentExceptionもスローする必要があります。</target>
        </trans-unit>
        <trans-unit id="2220d0dada1c016954a0e0654ecbf57b2f4cfa20" translate="yes" xml:space="preserve">
          <source>Subclass implementations of this abstract class must provide a public constructor that takes a &lt;code&gt;Policy.Parameters&lt;/code&gt; object as an input parameter. This constructor also must throw an IllegalArgumentException if it does not understand the &lt;code&gt;Policy.Parameters&lt;/code&gt; input.</source>
          <target state="translated">この抽象クラスのサブクラス実装は、 &lt;code&gt;Policy.Parameters&lt;/code&gt; オブジェクトを入力パラメーターとして受け取るパブリックコンストラクターを提供する必要があります。また、このコンストラクタは、 &lt;code&gt;Policy.Parameters&lt;/code&gt; 入力を理解できない場合、IllegalArgumentExceptionをスローする必要があります。</target>
        </trans-unit>
        <trans-unit id="1f4d7f3cd599df333ec9d3deaf9c7162f8257921" translate="yes" xml:space="preserve">
          <source>Subclassed to check all the child menus.</source>
          <target state="translated">子メニューをすべてチェックするためのサブクラスです。</target>
        </trans-unit>
        <trans-unit id="cd0b5d9ed3e0645c02bf133bc2f37f33b52e1ac1" translate="yes" xml:space="preserve">
          <source>Subclassed to load the children, if necessary.</source>
          <target state="translated">必要に応じて、子供をロードするためのサブクラスです。</target>
        </trans-unit>
        <trans-unit id="8f93fb5e2342148013c08503072455b24f2ee1b6" translate="yes" xml:space="preserve">
          <source>Subclassed to map &lt;code&gt;ColorUIResource&lt;/code&gt;s to null.</source>
          <target state="translated">&lt;code&gt;ColorUIResource&lt;/code&gt; をnullにマップするためにサブクラス化されています。</target>
        </trans-unit>
        <trans-unit id="a315f555d25abbbf8b53fcd4887cbf6538a551d4" translate="yes" xml:space="preserve">
          <source>Subclassed to map &lt;code&gt;ColorUIResource&lt;/code&gt;s to null. If &lt;code&gt;color&lt;/code&gt; is null, or a &lt;code&gt;ColorUIResource&lt;/code&gt;, this has the effect of letting the background color of the JTree show through. On the other hand, if &lt;code&gt;color&lt;/code&gt; is non-null, and not a &lt;code&gt;ColorUIResource&lt;/code&gt;, the background becomes &lt;code&gt;color&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ColorUIResource&lt;/code&gt; をnullにマップするためにサブクラス化されています。場合は &lt;code&gt;color&lt;/code&gt; ヌルであるか、または &lt;code&gt;ColorUIResource&lt;/code&gt; 、これは通過JTreeのショーの背景色をさせるという効果を有します。一方、 &lt;code&gt;color&lt;/code&gt; がnullでなく、 &lt;code&gt;ColorUIResource&lt;/code&gt; でない場合、背景は &lt;code&gt;color&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="5c2ee44b711aa5a55bd324f5266623f4ee6e095a" translate="yes" xml:space="preserve">
          <source>Subclassed to map &lt;code&gt;FontUIResource&lt;/code&gt;s to null.</source>
          <target state="translated">&lt;code&gt;FontUIResource&lt;/code&gt; をnullにマップするためにサブクラス化されています。</target>
        </trans-unit>
        <trans-unit id="c702cef4fb36fcba05a57c4d6f222849a7a24508" translate="yes" xml:space="preserve">
          <source>Subclassed to map &lt;code&gt;FontUIResource&lt;/code&gt;s to null. If &lt;code&gt;font&lt;/code&gt; is null, or a &lt;code&gt;FontUIResource&lt;/code&gt;, this has the effect of letting the font of the JTree show through. On the other hand, if &lt;code&gt;font&lt;/code&gt; is non-null, and not a &lt;code&gt;FontUIResource&lt;/code&gt;, the font becomes &lt;code&gt;font&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FontUIResource&lt;/code&gt; をnullにマップするためにサブクラス化されています。場合は &lt;code&gt;font&lt;/code&gt; ヌルであるか、または &lt;code&gt;FontUIResource&lt;/code&gt; 、これは通過JTreeのショーのフォントをさせるという効果を有します。一方、 &lt;code&gt;font&lt;/code&gt; がnullでなく、 &lt;code&gt;FontUIResource&lt;/code&gt; でない場合、フォントはfontになり &lt;code&gt;font&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ca5fec96f4acb5820cad6e07b13304c8249cf97" translate="yes" xml:space="preserve">
          <source>Subclassed to message the UI with &lt;code&gt;finishedPaintingChildren&lt;/code&gt; after super has been messaged, as well as painting the border.</source>
          <target state="translated">スーパーがメッセージされた後、 &lt;code&gt;finishedPaintingChildren&lt;/code&gt; でUIにメッセージを送るためにサブクラス化され、境界線をペイントします。</target>
        </trans-unit>
        <trans-unit id="5bb146528177e8b320f1fd7424d66dcfa40ebce4" translate="yes" xml:space="preserve">
          <source>Subclassers can override this to install a different layout manager (or &lt;code&gt;null&lt;/code&gt;) in the constructor.</source>
          <target state="translated">サブクラッサーはこれをオーバーライドして、コンストラクターに別のレイアウトマネージャー（または &lt;code&gt;null&lt;/code&gt; ）をインストールできます。</target>
        </trans-unit>
        <trans-unit id="8505f4ea5ce7c63317a610c5a62de909a00b3774" translate="yes" xml:space="preserve">
          <source>Subclassers can override this to install a different layout manager (or &lt;code&gt;null&lt;/code&gt;) in the constructor. Returns the &lt;code&gt;LayoutManager&lt;/code&gt; to install on the &lt;code&gt;JViewport&lt;/code&gt;.</source>
          <target state="translated">サブクラッサーはこれをオーバーライドして、コンストラクターに別のレイアウトマネージャー（または &lt;code&gt;null&lt;/code&gt; ）をインストールできます。 &lt;code&gt;JViewport&lt;/code&gt; にインストールする &lt;code&gt;LayoutManager&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="97991856584a9c492e7a0ba782d22b7078f2feaf" translate="yes" xml:space="preserve">
          <source>Subclasses are free to override the implementation and specification of any of the methods in this class as long as the general &lt;a href=&quot;processor&quot;&gt;&lt;code&gt;Processor&lt;/code&gt;&lt;/a&gt; contract for that method is obeyed.</source>
          <target state="translated">サブクラスは、そのメソッドの一般的な&lt;a href=&quot;processor&quot;&gt; &lt;code&gt;Processor&lt;/code&gt; &lt;/a&gt;コントラクトが守られている限り、このクラスのメソッドの実装と仕様を自由にオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="e484b78486e405162e4a367a74c90824ab64ada6" translate="yes" xml:space="preserve">
          <source>Subclasses can change this behavior as long as the contract of &lt;a href=&quot;javafileobject&quot;&gt;&lt;code&gt;JavaFileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">&lt;a href=&quot;javafileobject&quot;&gt; &lt;code&gt;JavaFileObject&lt;/code&gt; &lt;/a&gt;の規約に準拠している限り、サブクラスはこの動作を変更できます。</target>
        </trans-unit>
        <trans-unit id="de1437f0fab71cfe14b42604b9709aed691ecdad" translate="yes" xml:space="preserve">
          <source>Subclasses can conditionally call into supers implementation to restrict where the cursor can be placed, or call directly into the &lt;code&gt;FilterBypass&lt;/code&gt;.</source>
          <target state="translated">サブクラスは、条件付きでsupers実装を呼び出して、カーソルを置くことができる場所を制限するか、 &lt;code&gt;FilterBypass&lt;/code&gt; を直接呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="ecc0d48842c4b1bdaf56d588e3d0a826e6388e8d" translate="yes" xml:space="preserve">
          <source>Subclasses can override this method to insert their own subclass of Child without having to override add() or the other Collection methods that add children to the set.</source>
          <target state="translated">サブクラスは、add()やセットに子を追加する他の Collection メソッドをオーバーライドすることなく、このメソッドをオーバーライドして自分自身の Child のサブクラスを挿入することができます。</target>
        </trans-unit>
        <trans-unit id="d2f3b719aebf56597b7b15f653c188b83ea02d06" translate="yes" xml:space="preserve">
          <source>Subclasses may choose to free up some resources here.</source>
          <target state="translated">サブクラスは、ここでいくつかのリソースを解放することを選択することができます。</target>
        </trans-unit>
        <trans-unit id="ba9fd35a0798e51e74acb5c6529cb00d74e69a3d" translate="yes" xml:space="preserve">
          <source>Subclasses may implement this method to allow class data to be stored in the stream.</source>
          <target state="translated">サブクラスはこのメソッドを実装して、クラスデータをストリームに格納できるようにしてもよい。</target>
        </trans-unit>
        <trans-unit id="5eae1c098916a58a3dbc75ff4cb0b1a5e2f28c2d" translate="yes" xml:space="preserve">
          <source>Subclasses may implement this method to allow class data to be stored in the stream. By default this method does nothing. The corresponding method in ObjectInputStream is resolveClass. This method is called exactly once for each unique class in the stream. The class name and signature will have already been written to the stream. This method may make free use of the ObjectOutputStream to save any representation of the class it deems suitable (for example, the bytes of the class file). The resolveClass method in the corresponding subclass of ObjectInputStream must read and use any data or objects written by annotateClass.</source>
          <target state="translated">サブクラスはこのメソッドを実装して、クラスのデータをストリームに格納できるようにすることができます。既定では、このメソッドは何もしません。ObjectInputStream の対応するメソッドは resolveClass です。このメソッドは、ストリーム内の一意のクラスごとに 1 回だけ呼び出されます。クラス名とシグネチャはすでにストリームに書き込まれています。このメソッドは、ObjectOutputStream を自由に使用して、適切と思われるクラスの表現 (例えば、クラス・ファイルのバイト数)を保存することができます。ObjectInputStreamの対応するサブクラスのresolveClassメソッドは、annotateClassによって書き込まれた任意のデータまたはオブジェクトを読み込んで使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="119ea55e037f39d6d7dea9eef000017ea49b7d1a" translate="yes" xml:space="preserve">
          <source>Subclasses may implement this method to store custom data in the stream along with descriptors for dynamic proxy classes.</source>
          <target state="translated">サブクラスはこのメソッドを実装して、動的プロキシクラスのための記述子とともにカスタムデータをストリームに格納することができます。</target>
        </trans-unit>
        <trans-unit id="346a7b4c99267d2563842c4de158790738ed9769" translate="yes" xml:space="preserve">
          <source>Subclasses may override this method to add support for new &lt;code&gt;SpinnerModel&lt;/code&gt; classes. Alternatively one can just replace the editor created here with the &lt;code&gt;setEditor&lt;/code&gt; method. The default mapping from model type to editor is:</source>
          <target state="translated">サブクラスは、このメソッドをオーバーライドして、新しい &lt;code&gt;SpinnerModel&lt;/code&gt; クラスのサポートを追加できます。または、ここで作成した &lt;code&gt;setEditor&lt;/code&gt; メソッドに置き換えることもできます。モデルタイプからエディターへのデフォルトのマッピングは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9488e25d43c0807f49bd991cd04c6b17b6c84c26" translate="yes" xml:space="preserve">
          <source>Subclasses may override this method to return instances of their own ItemEvent handlers.</source>
          <target state="translated">サブクラスは、このメソッドをオーバーライドして、独自の ItemEvent ハンドラのインスタンスを返すことができます。</target>
        </trans-unit>
        <trans-unit id="14ebca93e9569da8b088ad54b9138487c2bd68a0" translate="yes" xml:space="preserve">
          <source>Subclasses may override this with a different implementation, if necessary.</source>
          <target state="translated">サブクラスは、必要に応じて別の実装でこれをオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="b88e230dc0d2c6f1af14e5e67740be2614c9a91d" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to implement their own caching policy. The default implementation stores &lt;code&gt;info&lt;/code&gt; in this instance. A subclass can define other policies, such as not saving &lt;code&gt;info&lt;/code&gt; (so it is reconstructed every time &lt;a href=&quot;#getMBeanInfo()&quot;&gt;&lt;code&gt;getMBeanInfo()&lt;/code&gt;&lt;/a&gt; is called) or sharing a unique &lt;a href=&quot;mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt; object when several &lt;code&gt;StandardMBean&lt;/code&gt; instances have equal &lt;a href=&quot;mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="translated">サブクラスは、独自のキャッシュポリシーを実装するために、このメソッドを再定義できます。デフォルトの実装では、このインスタンスに &lt;code&gt;info&lt;/code&gt; が格納されます。サブクラスは、 &lt;code&gt;info&lt;/code&gt; 保存しない（&lt;a href=&quot;#getMBeanInfo()&quot;&gt; &lt;code&gt;getMBeanInfo()&lt;/code&gt; &lt;/a&gt;が呼び出されるたびに再構築される）、または複数の &lt;code&gt;StandardMBean&lt;/code&gt; インスタンスの&lt;a href=&quot;mbeaninfo&quot;&gt; &lt;code&gt;MBeanInfo&lt;/code&gt; &lt;/a&gt;値が等しい場合に一意の&lt;a href=&quot;mbeaninfo&quot;&gt; &lt;code&gt;MBeanInfo&lt;/code&gt; &lt;/a&gt;オブジェクトを共有するなど、他のポリシーを定義できます。</target>
        </trans-unit>
        <trans-unit id="b2ed35d187a50a95ffbe37e1ecd5e900ec8b5ac3" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to implement their own caching policy. The default implementation stores &lt;code&gt;info&lt;/code&gt; in this instance. A subclass can define other policies, such as not saving &lt;code&gt;info&lt;/code&gt; (so it is reconstructed every time &lt;a href=&quot;standardmbean#getMBeanInfo--&quot;&gt;&lt;code&gt;getMBeanInfo()&lt;/code&gt;&lt;/a&gt; is called) or sharing a unique &lt;a href=&quot;mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt; object when several &lt;code&gt;StandardMBean&lt;/code&gt; instances have equal &lt;a href=&quot;mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="translated">サブクラスは、独自のキャッシングポリシーを実装するためにこのメソッドを再定義できます。デフォルトの実装では、このインスタンスに &lt;code&gt;info&lt;/code&gt; を保存します。サブクラスは、 &lt;code&gt;info&lt;/code&gt; 保存しない（&lt;a href=&quot;standardmbean#getMBeanInfo--&quot;&gt; &lt;code&gt;getMBeanInfo()&lt;/code&gt; &lt;/a&gt;が呼び出されるたびに再構築される）か、いくつかの &lt;code&gt;StandardMBean&lt;/code&gt; インスタンスが同じ&lt;a href=&quot;mbeaninfo&quot;&gt; &lt;code&gt;MBeanInfo&lt;/code&gt; &lt;/a&gt;値を持つ場合に一意の&lt;a href=&quot;mbeaninfo&quot;&gt; &lt;code&gt;MBeanInfo&lt;/code&gt; &lt;/a&gt;オブジェクトを共有するなど、他のポリシーを定義できます。</target>
        </trans-unit>
        <trans-unit id="a5bc5819f357d7573aaf89d3b4dc80c41b3e8e16" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to implement their own caching policy. The default implementation stores one &lt;a href=&quot;mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt; object per instance.</source>
          <target state="translated">サブクラスは、独自のキャッシングポリシーを実装するためにこのメソッドを再定義できます。デフォルトの実装では、インスタンスごとに1 つの&lt;a href=&quot;mbeaninfo&quot;&gt; &lt;code&gt;MBeanInfo&lt;/code&gt; &lt;/a&gt;オブジェクトが格納されます。</target>
        </trans-unit>
        <trans-unit id="f30a17a38d60b7483f897f014d96144c23000334" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to modify this behavior, if needed.</source>
          <target state="translated">サブクラスは、必要に応じてこの動作を変更するために、このメソッドを再定義することができます。</target>
        </trans-unit>
        <trans-unit id="9c949e98ce851eea009f61221cc8590d1e689eac" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to supply their custom MBean description. The default implementation returns &lt;a href=&quot;mbeaninfo#getDescription()&quot;&gt;&lt;code&gt;info.getDescription()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブクラスは、カスタムMBean記述を提供するために、このメソッドを再定義できます。デフォルトの実装は&lt;a href=&quot;mbeaninfo#getDescription()&quot;&gt; &lt;code&gt;info.getDescription()&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="44a8f3cd645dd8be562815070756d3c924008888" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to supply their custom MBean description. The default implementation returns &lt;a href=&quot;mbeaninfo#getDescription--&quot;&gt;&lt;code&gt;info.getDescription()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブクラスは、カスタムMBeanの説明を提供するために、このメソッドを再定義する場合があります。デフォルトの実装は&lt;a href=&quot;mbeaninfo#getDescription--&quot;&gt; &lt;code&gt;info.getDescription()&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="c8ae560547658d3da68b6c9d57c2262a8f5f60a8" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to supply their custom class name. The default implementation returns &lt;a href=&quot;mbeaninfo#getClassName()&quot;&gt;&lt;code&gt;info.getClassName()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブクラスは、カスタムクラス名を提供するために、このメソッドを再定義できます。デフォルトの実装は&lt;a href=&quot;mbeaninfo#getClassName()&quot;&gt; &lt;code&gt;info.getClassName()&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="d4a567495078782f45b0d72a66da11fa9684b8bc" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to supply their custom class name. The default implementation returns &lt;a href=&quot;mbeaninfo#getClassName--&quot;&gt;&lt;code&gt;info.getClassName()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブクラスは、カスタムクラス名を提供するためにこのメソッドを再定義できます。デフォルトの実装は&lt;a href=&quot;mbeaninfo#getClassName--&quot;&gt; &lt;code&gt;info.getClassName()&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="2b9b3461d29d5580fdc6480fe301c9810a376210" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to supply their custom description. The default implementation returns &lt;a href=&quot;#getDescription(javax.management.MBeanFeatureInfo)&quot;&gt;&lt;code&gt;getDescription((MBeanFeatureInfo) info)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブクラスは、カスタム記述を提供するためにこのメソッドを再定義できます。デフォルトの実装は&lt;a href=&quot;#getDescription(javax.management.MBeanFeatureInfo)&quot;&gt; &lt;code&gt;getDescription((MBeanFeatureInfo) info)&lt;/code&gt; &lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="75a7251f023b41640f76e0dbba1b3fdc97dcc92c" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to supply their custom description. The default implementation returns &lt;a href=&quot;mbeanfeatureinfo#getDescription()&quot;&gt;&lt;code&gt;info.getDescription()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブクラスは、カスタム記述を提供するためにこのメソッドを再定義できます。デフォルトの実装は&lt;a href=&quot;mbeanfeatureinfo#getDescription()&quot;&gt; &lt;code&gt;info.getDescription()&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="1e1a2ea7e5c8321cd914ebc6bb4834b314fc02e5" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to supply their custom description. The default implementation returns &lt;a href=&quot;mbeanfeatureinfo#getDescription()&quot;&gt;&lt;code&gt;param.getDescription()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブクラスは、カスタム記述を提供するためにこのメソッドを再定義できます。デフォルトの実装は&lt;a href=&quot;mbeanfeatureinfo#getDescription()&quot;&gt; &lt;code&gt;param.getDescription()&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="9d0161f8585b79e2924d4256c354b6aea198542d" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to supply their custom description. The default implementation returns &lt;a href=&quot;mbeanfeatureinfo#getDescription--&quot;&gt;&lt;code&gt;info.getDescription()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブクラスは、カスタムの説明を提供するためにこのメソッドを再定義できます。デフォルトの実装は&lt;a href=&quot;mbeanfeatureinfo#getDescription--&quot;&gt; &lt;code&gt;info.getDescription()&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="43e717ce0f7b76812439568fa74e18ffcd596aeb" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to supply their custom description. The default implementation returns &lt;a href=&quot;mbeanfeatureinfo#getDescription--&quot;&gt;&lt;code&gt;param.getDescription()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブクラスは、カスタムの説明を提供するためにこのメソッドを再定義できます。デフォルトの実装は&lt;a href=&quot;mbeanfeatureinfo#getDescription--&quot;&gt; &lt;code&gt;param.getDescription()&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="1e7a3e1f0b2708805ead54ed5d06f532192d4ca5" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to supply their custom description. The default implementation returns &lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanFeatureInfo-&quot;&gt;&lt;code&gt;getDescription((MBeanFeatureInfo) info)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブクラスは、カスタムの説明を提供するためにこのメソッドを再定義できます。デフォルトの実装は&lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanFeatureInfo-&quot;&gt; &lt;code&gt;getDescription((MBeanFeatureInfo) info)&lt;/code&gt; &lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="fec267569fd88743cccdc3c3d7a11c6bc4871e6d" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to supply their custom impact flag. The default implementation returns &lt;a href=&quot;mbeanoperationinfo#getImpact()&quot;&gt;&lt;code&gt;info.getImpact()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブクラスは、カスタム影響フラグを提供するために、このメソッドを再定義できます。デフォルトの実装は&lt;a href=&quot;mbeanoperationinfo#getImpact()&quot;&gt; &lt;code&gt;info.getImpact()&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="0075d84eef6b4695fc7a38a39f3ff9cf22c8a475" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to supply their custom impact flag. The default implementation returns &lt;a href=&quot;mbeanoperationinfo#getImpact--&quot;&gt;&lt;code&gt;info.getImpact()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブクラスは、カスタムインパクトフラグを提供するためにこのメソッドを再定義できます。デフォルトの実装は&lt;a href=&quot;mbeanoperationinfo#getImpact--&quot;&gt; &lt;code&gt;info.getImpact()&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="da419931108ab83cfc9da564272831343de684c6" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to supply their custom parameter name. The default implementation returns &lt;a href=&quot;mbeanfeatureinfo#getName()&quot;&gt;&lt;code&gt;param.getName()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブクラスは、カスタムパラメータ名を提供するためにこのメソッドを再定義できます。デフォルトの実装は&lt;a href=&quot;mbeanfeatureinfo#getName()&quot;&gt; &lt;code&gt;param.getName()&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="8c8c5591ea8ba612a2231f5cdbf93c3862e46cb4" translate="yes" xml:space="preserve">
          <source>Subclasses may redefine this method in order to supply their custom parameter name. The default implementation returns &lt;a href=&quot;mbeanfeatureinfo#getName--&quot;&gt;&lt;code&gt;param.getName()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サブクラスは、カスタムパラメータ名を提供するために、このメソッドを再定義する場合があります。デフォルトの実装は&lt;a href=&quot;mbeanfeatureinfo#getName--&quot;&gt; &lt;code&gt;param.getName()&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="44107f671a67fcd62b28d78183683e9d46349d42" translate="yes" xml:space="preserve">
          <source>Subclasses must ensure that their objects are immutable once they are constructed. Mutating a &lt;code&gt;GraphicAttribute&lt;/code&gt; that is used in a &lt;a href=&quot;textlayout&quot;&gt;&lt;code&gt;TextLayout&lt;/code&gt;&lt;/a&gt; results in undefined behavior from the &lt;code&gt;TextLayout&lt;/code&gt;.</source>
          <target state="translated">サブクラスは、構築されたオブジェクトが不変であることを確認する必要があります。&lt;a href=&quot;textlayout&quot;&gt; &lt;code&gt;TextLayout&lt;/code&gt; で&lt;/a&gt;使用される &lt;code&gt;GraphicAttribute&lt;/code&gt; を変更すると、TextLayoutからの未定義の動作が発生し &lt;code&gt;TextLayout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="450e99e9d720750622ae055e92654d2d9adbdf3c" translate="yes" xml:space="preserve">
          <source>Subclasses must override &lt;code&gt;getContents&lt;/code&gt; and provide an array, where each item in the array is a pair of objects. The first element of each pair is the key, which must be a &lt;code&gt;String&lt;/code&gt;, and the second element is the value associated with that key.</source>
          <target state="translated">サブクラスは &lt;code&gt;getContents&lt;/code&gt; をオーバーライドし、配列を提供する必要があります。配列の各項目はオブジェクトのペアです。各ペアの最初の要素はキーであり、これは &lt;code&gt;String&lt;/code&gt; である必要があり、2番目の要素はそのキーに関連付けられた値です。</target>
        </trans-unit>
        <trans-unit id="6b6559ea849c077c2e2ca76bdd72f5a96d7ec64f" translate="yes" xml:space="preserve">
          <source>Subclasses must override the &lt;code&gt;include&lt;/code&gt; method to indicate whether the entry should be shown in the view. The &lt;code&gt;Entry&lt;/code&gt; argument can be used to obtain the values in each of the columns in that entry. The following example shows an &lt;code&gt;include&lt;/code&gt; method that allows only entries containing one or more values starting with the string &quot;a&quot;:</source>
          <target state="translated">サブクラスは、エントリをビューに表示するかどうかを示すために、 &lt;code&gt;include&lt;/code&gt; メソッドをオーバーライドする必要があります。 &lt;code&gt;Entry&lt;/code&gt; 引数は、そのエントリの列のそれぞれの値を得るために使用することができます。次の例は、文字列「a」で始まる1つ以上の値を含むエントリのみを許可する &lt;code&gt;include&lt;/code&gt; メソッドを示しています。</target>
        </trans-unit>
        <trans-unit id="13ab5ba1b088e637d09dd5e96e9cfd34c296a83b" translate="yes" xml:space="preserve">
          <source>Subclasses must override the conversion methods &lt;code&gt;stringToValue&lt;/code&gt; and &lt;code&gt;valueToString&lt;/code&gt;. Optionally they can override &lt;code&gt;getActions&lt;/code&gt;, &lt;code&gt;getNavigationFilter&lt;/code&gt; and &lt;code&gt;getDocumentFilter&lt;/code&gt; to restrict the &lt;code&gt;JFormattedTextField&lt;/code&gt; in a particular way.</source>
          <target state="translated">サブクラスは、変換メソッド &lt;code&gt;stringToValue&lt;/code&gt; および &lt;code&gt;valueToString&lt;/code&gt; をオーバーライドする必要があります。オプションで、 &lt;code&gt;getActions&lt;/code&gt; 、 &lt;code&gt;getNavigationFilter&lt;/code&gt; 、および &lt;code&gt;getDocumentFilter&lt;/code&gt; をオーバーライドして、特定の方法で &lt;code&gt;JFormattedTextField&lt;/code&gt; を制限できます。</target>
        </trans-unit>
        <trans-unit id="a50c359c3f36950c91b1dfb96bf8f045989ecc72" translate="yes" xml:space="preserve">
          <source>Subclasses must provide an implementation for this method. The subclass implementation should update the stream position before exiting.</source>
          <target state="translated">サブクラスは、このメソッドの実装を提供する必要があります。サブクラスの実装は、終了する前にストリームの位置を更新しなければなりません。</target>
        </trans-unit>
        <trans-unit id="046621cab555c8e9afda66d91b3de8a9bcdb0688" translate="yes" xml:space="preserve">
          <source>Subclasses must specify a method to convert a single input pixel in the default RGB ColorModel to a single output pixel.</source>
          <target state="translated">サブクラスは、デフォルトの RGB ColorModel の単一の入力ピクセルを単一の出力ピクセルに変換するメソッドを指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="95c9fe7ed668d1d37c20884e298574f955c998cf" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;code&gt;ClassLoader&lt;/code&gt; are encouraged to override &lt;a href=&quot;#findClass(java.lang.String)&quot;&gt;&lt;code&gt;findClass(String)&lt;/code&gt;&lt;/a&gt;, rather than this method.</source>
          <target state="translated">&lt;code&gt;ClassLoader&lt;/code&gt; のサブクラスは、このメソッドではなく、&lt;a href=&quot;#findClass(java.lang.String)&quot;&gt; &lt;code&gt;findClass(String)&lt;/code&gt; &lt;/a&gt;をオーバーライドすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8d48d4941d64c902d1a6ab9d4ee21755ca478c4b" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;code&gt;ClassLoader&lt;/code&gt; are encouraged to override &lt;a href=&quot;classloader#findClass-java.lang.String-&quot;&gt;&lt;code&gt;findClass(String)&lt;/code&gt;&lt;/a&gt;, rather than this method.</source>
          <target state="translated">&lt;code&gt;ClassLoader&lt;/code&gt; のサブクラスでは、このメソッドではなく&lt;a href=&quot;classloader#findClass-java.lang.String-&quot;&gt; &lt;code&gt;findClass(String)&lt;/code&gt; &lt;/a&gt;をオーバーライドすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="e79e5d6cafbac61f7d3b7ab73935ac39750fe60c" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;code&gt;Format&lt;/code&gt; that allow programmers to create objects for locales (with &lt;code&gt;getInstance(Locale)&lt;/code&gt; for example) must also implement the following class method:</source>
          <target state="translated">プログラマがロケールのオブジェクトを作成できるようにする &lt;code&gt;Format&lt;/code&gt; のサブクラス &lt;code&gt;getInstance(Locale)&lt;/code&gt; たとえば、getInstance（Locale）を使用）は、次のクラスメソッドも実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="a57e78272fae9207271a4528556dbc5e3d110e0b" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;code&gt;LinkageError&lt;/code&gt; indicate that a class has some dependency on another class; however, the latter class has incompatibly changed after the compilation of the former class.</source>
          <target state="translated">&lt;code&gt;LinkageError&lt;/code&gt; のサブクラスは、クラスが別のクラスに依存していることを示します。ただし、後者のクラスは、前者のクラスのコンパイル後に互換性がなくなりました。</target>
        </trans-unit>
        <trans-unit id="604d21a21068103142330dd2e6f823916bb401d2" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;code&gt;OutputStream&lt;/code&gt; must provide an implementation for this method.</source>
          <target state="translated">&lt;code&gt;OutputStream&lt;/code&gt; のサブクラスは、このメソッドの実装を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="3b21fecbf9290f8bcebbb075d87f2c27f0e24940" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;code&gt;Thread&lt;/code&gt; should override this method.</source>
          <target state="translated">&lt;code&gt;Thread&lt;/code&gt; のサブクラスは、このメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="05146d580336c118b2f43acc406bd50b176d914f" translate="yes" xml:space="preserve">
          <source>Subclasses of InputMethod can be loaded by the input method framework; they can then be selected either through the API (&lt;a href=&quot;../inputcontext#selectInputMethod(java.util.Locale)&quot;&gt;&lt;code&gt;InputContext.selectInputMethod&lt;/code&gt;&lt;/a&gt;) or the user interface (the input method selection menu).</source>
          <target state="translated">InputMethodのサブクラスは、inputメソッドフレームワークによってロードできます。次に、API（&lt;a href=&quot;../inputcontext#selectInputMethod(java.util.Locale)&quot;&gt; &lt;code&gt;InputContext.selectInputMethod&lt;/code&gt; &lt;/a&gt;）またはユーザーインターフェイス（入力メソッド選択メニュー）のいずれかを介して選択できます。</target>
        </trans-unit>
        <trans-unit id="356ca088aa2b2d2bcfd8bb1d001d4c0e96f7f923" translate="yes" xml:space="preserve">
          <source>Subclasses of Process should override the &lt;a href=&quot;#onExit()&quot;&gt;&lt;code&gt;onExit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#toHandle()&quot;&gt;&lt;code&gt;toHandle()&lt;/code&gt;&lt;/a&gt; methods to provide a fully functional Process including the &lt;a href=&quot;#pid()&quot;&gt;process id&lt;/a&gt;, &lt;a href=&quot;#info()&quot;&gt;information about the process&lt;/a&gt;, &lt;a href=&quot;#children()&quot;&gt;direct children&lt;/a&gt;, and &lt;a href=&quot;#descendants()&quot;&gt;direct children plus descendants of those children&lt;/a&gt; of the process. Delegating to the underlying Process or ProcessHandle is typically easiest and most efficient.</source>
          <target state="translated">プロセスのサブクラスは、オーバーライドする必要が&lt;a href=&quot;#onExit()&quot;&gt; &lt;code&gt;onExit()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#toHandle()&quot;&gt; &lt;code&gt;toHandle()&lt;/code&gt; &lt;/a&gt;を含む完全に機能するプロセスを提供する方法を&lt;a href=&quot;#pid()&quot;&gt;、プロセスID&lt;/a&gt;、&lt;a href=&quot;#info()&quot;&gt;プロセスに関する情報&lt;/a&gt;、&lt;a href=&quot;#children()&quot;&gt;直接の子&lt;/a&gt;、および&lt;a href=&quot;#descendants()&quot;&gt;直接の子に加えて、これらの子供たちの子孫&lt;/a&gt;プロセスのを。通常、基盤となるProcessまたはProcessHandleに委任するのが最も簡単で、最も効率的です。</target>
        </trans-unit>
        <trans-unit id="79adce392038c3752626cc4c2ce99f7110afb7c8" translate="yes" xml:space="preserve">
          <source>Subclasses of SampleModel specify the types of samples they can represent (e.g. unsigned 8-bit byte, signed 16-bit short, etc.) and may specify how the samples are organized in memory. In the Java 2D(tm) API, built-in image processing operators may not operate on all possible sample types, but generally will work for unsigned integral samples of 16 bits or less. Some operators support a wider variety of sample types.</source>
          <target state="translated">SampleModel のサブクラスは、それが表現できるサンプルのタイプ(例:符号なし 8 ビットバイト、符号付き 16 ビットショートなど)を指定し、サンプルがメモリ内でどのように編成されるかを指定することができます。Java 2D(tm)APIでは、組み込みの画像処理演算子は、すべての可能なサンプルタイプで動作するとは限りませんが、一般的には16ビット以下の符号なし積分サンプルで動作します。演算子によっては、より幅広いサンプルタイプをサポートしているものもあります。</target>
        </trans-unit>
        <trans-unit id="022043a749cfb8085c429987ab4a9bb09bfd00bf" translate="yes" xml:space="preserve">
          <source>Subclasses of ServerSocket use this method to override accept() to return their own subclass of socket.</source>
          <target state="translated">ServerSocket のサブクラスは、このメソッドを使用して accept()をオーバーライドし、独自のソケットのサブクラスを返します。</target>
        </trans-unit>
        <trans-unit id="a7479ac4dbed32a3ef943a06184131fc57e455ad" translate="yes" xml:space="preserve">
          <source>Subclasses of ServerSocket use this method to override accept() to return their own subclass of socket. So a FooServerSocket will typically hand this method an</source>
          <target state="translated">ServerSocket のサブクラスは、このメソッドを使用して accept()をオーバーライドしてソケットのサブクラスを返します。そのため、FooServerSocketは通常、このメソッドに</target>
        </trans-unit>
        <trans-unit id="c724f1f3ab764f55aefd9dc7d0eb38169f4dceae" translate="yes" xml:space="preserve">
          <source>Subclasses of this class are encouraged, but not required, to attempt to read as many bytes as possible in the same fashion.</source>
          <target state="translated">このクラスのサブクラスは、同じ方法で可能な限り多くのバイトを読み込むことを試みることが推奨されますが、必須ではありません。</target>
        </trans-unit>
        <trans-unit id="28194548cf2c5de100c5c5a807ab4da7f0ae7893" translate="yes" xml:space="preserve">
          <source>Subclasses of this class are encouraged, but not required, to attempt to read as many characters as possible in the same fashion.</source>
          <target state="translated">このクラスのサブクラスは、できるだけ多くの文字を同じように読もうとすることが奨励されていますが、必須ではありません。</target>
        </trans-unit>
        <trans-unit id="1fecfd06fb69ae8afd809e82709f8f7a4f6282a1" translate="yes" xml:space="preserve">
          <source>Subclasses of this class may override, or envelope, this method to add validation behavior for the BeanContext to examine child objects immediately prior to their being added to the BeanContext.</source>
          <target state="translated">このクラスのサブクラスは,このメソッドをオーバーライドするか,またはエンベロープして,BeanContextに追加される直前に子オブジェクトを検査するために,BeanContextの検証動作を追加することができます。</target>
        </trans-unit>
        <trans-unit id="5caaa32317f66387865d373e35b97a45bff48139" translate="yes" xml:space="preserve">
          <source>Subclasses of this class may override, or envelope, this method to add validation behavior for the BeanContext to examine child objects immediately prior to their being removed from the BeanContext.</source>
          <target state="translated">このクラスのサブクラスは,このメソッドをオーバーライドするか,またはエンベロープして,BeanContextから子オブジェクトが削除される直前に,BeanContextが子オブジェクトを検査するための検証動作を追加することができます。</target>
        </trans-unit>
        <trans-unit id="7ac0f56f02a0f1b782eca6d903210d77e03c6341" translate="yes" xml:space="preserve">
          <source>Subclasses of this class should normally override the &quot;virtual constructor&quot; method &lt;a href=&quot;#newIncompleteFuture()&quot;&gt;&lt;code&gt;newIncompleteFuture()&lt;/code&gt;&lt;/a&gt;, which establishes the concrete type returned by CompletionStage methods. For example, here is a class that substitutes a different default Executor and disables the &lt;code&gt;obtrude&lt;/code&gt; methods:</source>
          <target state="translated">このクラスのサブクラスは通常、CompletionStageメソッドによって返される具象型を確立する「仮想コンストラクター」メソッド&lt;a href=&quot;#newIncompleteFuture()&quot;&gt; &lt;code&gt;newIncompleteFuture()&lt;/code&gt; を&lt;/a&gt;オーバーライドする必要があります。たとえば、次のクラスは、別のデフォルトのエグゼ &lt;code&gt;obtrude&lt;/code&gt; 、obtrudeメソッドを無効にします。</target>
        </trans-unit>
        <trans-unit id="ecb285780830131030a8ca3d9bc54f28ee4633b4" translate="yes" xml:space="preserve">
          <source>Subclasses should be defined as non-public internal helper classes that are used to implement the synchronization properties of their enclosing class. Class &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; does not implement any synchronization interface. Instead it defines methods such as &lt;a href=&quot;#acquireInterruptibly(int)&quot;&gt;&lt;code&gt;acquireInterruptibly(int)&lt;/code&gt;&lt;/a&gt; that can be invoked as appropriate by concrete locks and related synchronizers to implement their public methods.</source>
          <target state="translated">サブクラスは、それを囲むクラスの同期プロパティを実装するために使用される非公開の内部ヘルパークラスとして定義する必要があります。クラス &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; は、同期インターフェイスを実装していません。代わりに、&lt;a href=&quot;#acquireInterruptibly(int)&quot;&gt; &lt;code&gt;acquireInterruptibly(int)&lt;/code&gt; &lt;/a&gt;などのメソッドを定義します。これらのメソッドは、具象ロックおよび関連するシンクロナイザーによって適切に呼び出され、パブリックメソッドを実装できます。</target>
        </trans-unit>
        <trans-unit id="91e9d7ac3fe024b8df08cafc09cc83779b18b8d2" translate="yes" xml:space="preserve">
          <source>Subclasses should be defined as non-public internal helper classes that are used to implement the synchronization properties of their enclosing class. Class &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; does not implement any synchronization interface. Instead it defines methods such as &lt;a href=&quot;abstractqueuedsynchronizer#acquireInterruptibly-int-&quot;&gt;&lt;code&gt;acquireInterruptibly(int)&lt;/code&gt;&lt;/a&gt; that can be invoked as appropriate by concrete locks and related synchronizers to implement their public methods.</source>
          <target state="translated">サブクラスは、それらを含むクラスの同期プロパティを実装するために使用される非パブリック内部ヘルパークラスとして定義する必要があります。クラス &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; は、同期インターフェースを実装していません。代わりに、具象ロックおよび関連するシンクロナイザがパブリックメソッドを実装するために適切に呼び出すことができる、&lt;a href=&quot;abstractqueuedsynchronizer#acquireInterruptibly-int-&quot;&gt; &lt;code&gt;acquireInterruptibly(int)&lt;/code&gt; &lt;/a&gt;などのメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="8392941aa0d6b26bd686e03858293e6c2200f972" translate="yes" xml:space="preserve">
          <source>Subclasses should consider overriding this method if they can process ByteBuffers more efficiently than byte arrays.</source>
          <target state="translated">サブクラスは、バイト配列よりもバイトバッファを効率的に処理できる場合は、このメソッドをオーバーライドすることを検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="0a3fde3991b1f36bb35626b7de6485d6601264ad" translate="yes" xml:space="preserve">
          <source>Subclasses should ensure that this value is non-negative.</source>
          <target state="translated">サブクラスは、この値が負でないことを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="59b239b8408fe66174d53a969341c43fe450fe76" translate="yes" xml:space="preserve">
          <source>Subclasses should ensure that this value is positive. Additionally, if the value is not &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;, then &lt;code&gt;minProgressivePass + numProgressivePasses - 1&lt;/code&gt; should not exceed &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;.</source>
          <target state="translated">サブクラスは、この値が正であることを確認する必要があります。さらに、値が &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; でない場合、 &lt;code&gt;minProgressivePass + numProgressivePasses - 1&lt;/code&gt; は &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; を超えてはなりません。</target>
        </trans-unit>
        <trans-unit id="dabdfc58a5b575eb81f048c87f440c40a1454a5e" translate="yes" xml:space="preserve">
          <source>Subclasses should initialize this field to a &lt;a href=&quot;../util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; appropriate for the &lt;a href=&quot;../util/locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; associated with this &lt;code&gt;DateFormat&lt;/code&gt;.</source>
          <target state="translated">サブクラスは、このフィールドを、この &lt;code&gt;DateFormat&lt;/code&gt; に関連付けられた&lt;a href=&quot;../util/locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt;適した&lt;a href=&quot;../util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; に&lt;/a&gt;初期化する必要があります。</target>
        </trans-unit>
        <trans-unit id="61f573f3126f1d7fdfcb4209cb476203d42b3db7" translate="yes" xml:space="preserve">
          <source>Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.</source>
          <target state="translated">サブクラスは、標準のメタデータ形式をサポートしたい場合は、このメソッドをオーバーライドして適切なサブツリーを生成しなければなりません。</target>
        </trans-unit>
        <trans-unit id="2603abbb32f69af97a25a4e28c9b6bf080a35f46" translate="yes" xml:space="preserve">
          <source>Subclasses should take care to remove any cached information based on the previous stream, such as header information or partially decoded image data.</source>
          <target state="translated">サブクラスは、ヘッダ情報や部分的にデコードされた画像データなど、前のストリームに基づいてキャッシュされた情報を削除するように注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="1fa0ffd35f36e62b3e186289bee0150ad2ffaa75" translate="yes" xml:space="preserve">
          <source>Subclasses that allow the &lt;code&gt;JFormattedTextField&lt;/code&gt; to be in a temporarily invalid state should invoke &lt;code&gt;setEditValid&lt;/code&gt; at the appropriate times.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; を一時的に無効な状態にすることができるサブクラスは、適切な &lt;code&gt;setEditValid&lt;/code&gt; でsetEditValidを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="d7247fae572342c046888255ef08f9ab17a32ea0" translate="yes" xml:space="preserve">
          <source>Subclasses that do not support compression may ignore this value.</source>
          <target state="translated">圧縮をサポートしていないサブクラスは、この値を無視することができます。</target>
        </trans-unit>
        <trans-unit id="5f0e25e8fc6f96bd14425586a0d9b04f18bbcefe" translate="yes" xml:space="preserve">
          <source>Subclasses that do not support compression must ensure that this value is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">圧縮をサポートしないサブクラスでは、この値が &lt;code&gt;false&lt;/code&gt; に設定されていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="f33e1b9e2d9c1b8a0b9963f8d9a1b710d9f0ac1e" translate="yes" xml:space="preserve">
          <source>Subclasses that do not support offsetting tiles may ignore this value.</source>
          <target state="translated">オフセットタイルをサポートしていないサブクラスは、この値を無視することができます。</target>
        </trans-unit>
        <trans-unit id="89c479a17a5728f51c5407b792f4ca6a79062edc" translate="yes" xml:space="preserve">
          <source>Subclasses that do not support progressive encoding may ignore this value.</source>
          <target state="translated">プログレッシブエンコーディングをサポートしていないサブクラスは、この値を無視することができます。</target>
        </trans-unit>
        <trans-unit id="67c6a278c1aa5dde6a7baf94424a47909ad76164" translate="yes" xml:space="preserve">
          <source>Subclasses that do not support progressive encoding must ensure that this value is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">プログレッシブエンコーディングをサポートしないサブクラスでは、この値が &lt;code&gt;false&lt;/code&gt; に設定されていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="0afe1507c1a16a6d9392fa79fd35940ee0ee90e6" translate="yes" xml:space="preserve">
          <source>Subclasses that do not support tiling may ignore this value.</source>
          <target state="translated">タイリングをサポートしていないサブクラスは、この値を無視することができます。</target>
        </trans-unit>
        <trans-unit id="ae579bae4a724840d2731288b0dd1cec4f5fd503" translate="yes" xml:space="preserve">
          <source>Subclasses that do not support writing tiles may ignore this value.</source>
          <target state="translated">タイルの書き込みをサポートしていないサブクラスは、この値を無視することができます。</target>
        </trans-unit>
        <trans-unit id="89e8797faa7745039647d76e458f320e9f33215d" translate="yes" xml:space="preserve">
          <source>Subclasses that do not support writing tiles should ensure that this value is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">タイルの書き込みをサポートしないサブクラスでは、この値が &lt;code&gt;false&lt;/code&gt; に設定されていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="0f8eeefec6a6569eff363160bfadb7bd5e82c013" translate="yes" xml:space="preserve">
          <source>Subclasses that do not support writing tiles, or that support writing but not offsetting tiles must ensure that this value is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">タイルの書き込みをサポートしていない、またはタイルの書き込みはサポートしているがオフセットはサポートしていないサブクラスでは、この値を &lt;code&gt;false&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="754fc4df4cbf1e0486cbeee4f1036e50f0a66935" translate="yes" xml:space="preserve">
          <source>Subclasses that do not writing tiles may ignore this value.</source>
          <target state="translated">タイルを書かないサブクラスは、この値を無視することができます。</target>
        </trans-unit>
        <trans-unit id="a9b60af8f329c6d4bf48b0ad761ed80b8f9a1f27" translate="yes" xml:space="preserve">
          <source>Subclasses that guarantee to always completely paint their contents should override this method and return true.</source>
          <target state="translated">常に内容を完全にペイントすることを保証するサブクラスは、このメソッドをオーバーライドして true を返すべきです。</target>
        </trans-unit>
        <trans-unit id="d22fa4d54338a3b0611e2a87d533645f530fc73e" translate="yes" xml:space="preserve">
          <source>Subclasses that intend to support efficient single-character input should override this method.</source>
          <target state="translated">効率的な一文字入力をサポートするつもりのサブクラスは、このメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="db1735d491e84763c30282cf998103fadac72533" translate="yes" xml:space="preserve">
          <source>Subclasses that intend to support efficient single-character output should override this method.</source>
          <target state="translated">効率的な一文字出力をサポートするつもりのサブクラスは、このメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="baaf549987e7832404a098798ec35dc0d66a256a" translate="yes" xml:space="preserve">
          <source>Subclasses that make use of extensions should provide a constructor with signature &lt;code&gt;(ImageReaderSpi,
 Object)&lt;/code&gt; in order to retrieve the extension object. If the extension object is unsuitable, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; should be thrown.</source>
          <target state="translated">拡張機能を利用するサブクラスは、拡張機能オブジェクトを取得するために &lt;code&gt;(ImageReaderSpi, Object)&lt;/code&gt; シグネチャ（ImageReaderSpi、Object）を持つコンストラクターを提供する必要があります。拡張オブジェクトが不適切な場合は、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="93ed6a8becea226af869b6456fa7df1d2083a378" translate="yes" xml:space="preserve">
          <source>Subclasses that make use of extensions should provide a constructor with signature &lt;code&gt;(ImageReaderSpi,Object)&lt;/code&gt; in order to retrieve the extension object. If the extension object is unsuitable, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; should be thrown.</source>
          <target state="translated">拡張機能を利用するサブクラスは、拡張機能オブジェクトを取得するために、コンストラクターに署名 &lt;code&gt;(ImageReaderSpi,Object)&lt;/code&gt; を提供する必要があります。拡張オブジェクトが不適切な場合は、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローする必要があります。</target>
        </trans-unit>
        <trans-unit id="c3bc28f839923b3b490a52a7ef36882d9a0e6a50" translate="yes" xml:space="preserve">
          <source>Subclasses that make use of extensions should provide a constructor with signature &lt;code&gt;(ImageWriterSpi, Object)&lt;/code&gt; in order to retrieve the extension object. If the extension object is unsuitable, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; should be thrown.</source>
          <target state="translated">拡張機能を利用するサブクラスは、拡張機能オブジェクトを取得するために、コンストラクターにシグニチャー &lt;code&gt;(ImageWriterSpi, Object)&lt;/code&gt; を提供する必要があります。拡張オブジェクトが不適切な場合は、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="d7ed5c4d02f9bfdada0e5a968885d4985eb54113" translate="yes" xml:space="preserve">
          <source>Subclasses that want to handle &lt;code&gt;ChangeEvent&lt;/code&gt;s from the model differently can override this to return an instance of a custom &lt;code&gt;ChangeListener&lt;/code&gt; implementation.</source>
          <target state="translated">モデルからの &lt;code&gt;ChangeEvent&lt;/code&gt; を異なる方法で処理するサブクラスは、これをオーバーライドして、カスタム &lt;code&gt;ChangeListener&lt;/code&gt; 実装のインスタンスを返すことができます。</target>
        </trans-unit>
        <trans-unit id="bc9545b94b55505df0470c15a361abf94d72ee12" translate="yes" xml:space="preserve">
          <source>Subclasses that want to handle &lt;code&gt;ChangeEvent&lt;/code&gt;s from the model differently can override this to return an instance of a custom &lt;code&gt;ChangeListener&lt;/code&gt; implementation. The default &lt;code&gt;ChangeListener&lt;/code&gt; simply calls the &lt;code&gt;fireStateChanged&lt;/code&gt; method to forward &lt;code&gt;ChangeEvent&lt;/code&gt;s to the &lt;code&gt;ChangeListener&lt;/code&gt;s that have been added directly to the slider.</source>
          <target state="translated">モデルからの &lt;code&gt;ChangeEvent&lt;/code&gt; を異なる方法で処理するサブクラスは、これをオーバーライドして、カスタム &lt;code&gt;ChangeListener&lt;/code&gt; 実装のインスタンスを返すことができます。デフォルトの &lt;code&gt;ChangeListener&lt;/code&gt; は、 &lt;code&gt;fireStateChanged&lt;/code&gt; メソッドを呼び出すだけで、スライダーに直接追加された &lt;code&gt;ChangeListener&lt;/code&gt; に &lt;code&gt;ChangeEvent&lt;/code&gt; を転送します。</target>
        </trans-unit>
        <trans-unit id="ea821a56fba44b55602799fd999a0c81f6363ee3" translate="yes" xml:space="preserve">
          <source>Subclasses that want to handle &lt;code&gt;ChangeEvents&lt;/code&gt; differently can override this to return a subclass of &lt;code&gt;ModelListener&lt;/code&gt; or another &lt;code&gt;ChangeListener&lt;/code&gt; implementation.</source>
          <target state="translated">処理したいサブクラス &lt;code&gt;ChangeEvents&lt;/code&gt; 別々には、のサブクラスを返すためにこのメソッドをオーバーライドすることができます &lt;code&gt;ModelListener&lt;/code&gt; または別 &lt;code&gt;ChangeListener&lt;/code&gt; 実装を。</target>
        </trans-unit>
        <trans-unit id="a006dc9ab4f766aadc90f392f8d62b9f85f5c103" translate="yes" xml:space="preserve">
          <source>Subclasses that want to handle &lt;code&gt;ChangeEvents&lt;/code&gt; differently can override this to return another &lt;code&gt;ChangeListener&lt;/code&gt; implementation.</source>
          <target state="translated">&lt;code&gt;ChangeEvents&lt;/code&gt; を異なる方法で処理したいサブクラスは、これをオーバーライドして、別の &lt;code&gt;ChangeListener&lt;/code&gt; 実装を返すことができます。</target>
        </trans-unit>
        <trans-unit id="1ad6db11211fe646085e8f618fd24730cfcaf568" translate="yes" xml:space="preserve">
          <source>Subclasses that want to handle change events from the model differently can override this to return an instance of a custom &lt;code&gt;ChangeListener&lt;/code&gt; implementation.</source>
          <target state="translated">モデルからの変更イベントを異なる方法で処理するサブクラスは、これをオーバーライドして、カスタム &lt;code&gt;ChangeListener&lt;/code&gt; 実装のインスタンスを返すことができます。</target>
        </trans-unit>
        <trans-unit id="e5739a6281ca0e0c3b984c529a0c2a1567eaf0f7" translate="yes" xml:space="preserve">
          <source>Subclasses that want to handle change events from the model differently can override this to return an instance of a custom &lt;code&gt;ChangeListener&lt;/code&gt; implementation. The default &lt;code&gt;ChangeListener&lt;/code&gt; simply calls the &lt;code&gt;fireStateChanged&lt;/code&gt; method to forward &lt;code&gt;ChangeEvent&lt;/code&gt;s to the &lt;code&gt;ChangeListener&lt;/code&gt;s that have been added directly to the progress bar.</source>
          <target state="translated">モデルからの変更イベントを異なる方法で処理するサブクラスは、これをオーバーライドして、カスタム &lt;code&gt;ChangeListener&lt;/code&gt; 実装のインスタンスを返すことができます。デフォルトの &lt;code&gt;ChangeListener&lt;/code&gt; は、 &lt;code&gt;fireStateChanged&lt;/code&gt; メソッドを呼び出すだけで、ChangeEventをプログレスバーに直接追加された &lt;code&gt;ChangeListener&lt;/code&gt; に転送し &lt;code&gt;ChangeEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3831024dfe70b615724253a3f1bc3d3ce3f0926d" translate="yes" xml:space="preserve">
          <source>Subclasses that wish to render a different flashing caret should override paint and only paint the caret if this method returns true.</source>
          <target state="translated">別の点滅するキャレットをレンダリングしたいサブクラスは paint をオーバーライドし、このメソッドが true を返した場合にのみキャレットをペイントする必要があります。</target>
        </trans-unit>
        <trans-unit id="fb2e4a7e479ff5f68c4bdf801152daa98552f234" translate="yes" xml:space="preserve">
          <source>Subclasses typically need override only &lt;code&gt;
 getLastPathComponent&lt;/code&gt;, and &lt;code&gt;getParentPath&lt;/code&gt;. As &lt;code&gt;JTree&lt;/code&gt; internally creates &lt;code&gt;TreePath&lt;/code&gt;s at various points, it's generally not useful to subclass &lt;code&gt;TreePath&lt;/code&gt; and use with &lt;code&gt;JTree&lt;/code&gt;.</source>
          <target state="translated">サブクラスは通常、 &lt;code&gt; getLastPathComponent&lt;/code&gt; と &lt;code&gt;getParentPath&lt;/code&gt; のみをオーバーライドする必要があります。以下のよう &lt;code&gt;JTree&lt;/code&gt; のは、内部的に作成 &lt;code&gt;TreePath&lt;/code&gt; sがさまざまな点で、それは、サブクラス化し、一般的に有用ではありません &lt;code&gt;TreePath&lt;/code&gt; し、一緒に使用 &lt;code&gt;JTree&lt;/code&gt; の。</target>
        </trans-unit>
        <trans-unit id="3cbe52b4bd49aae53490da85200e57ba0d4ed6da" translate="yes" xml:space="preserve">
          <source>Subclasses which wish to listen to combo box property changes should call the superclass methods to ensure that the combo box ui correctly handles property changes.</source>
          <target state="translated">コンボボックスのプロパティの変更をリッスンしたいサブクラスは、コンボボックス UI がプロパティの変更を正しく処理できるように、スーパークラスのメソッドを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="98d56fe69fb0cf1a30fb5ba994412b91340e72bd" translate="yes" xml:space="preserve">
          <source>Subclasses which wish to listen to combo box property changes should call the superclass methods to ensure that the combo popup correctly handles property changes.</source>
          <target state="translated">コンボボックスのプロパティの変更をリッスンしたいサブクラスは、コンボポップアップがプロパティの変更を正しく処理できるように、スーパークラスのメソッドを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="934cb29592e8ec3643b921ca2c22c1b37435cb10" translate="yes" xml:space="preserve">
          <source>Subclasses will typically only need to override this if they wish to install additional listeners on the &lt;code&gt;JFormattedTextField&lt;/code&gt;.</source>
          <target state="translated">サブクラスは通常、 &lt;code&gt;JFormattedTextField&lt;/code&gt; に追加のリスナーをインストールする場合にのみ、これをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="82494d5df2327066831b19fcbdbc11f57f406da0" translate="yes" xml:space="preserve">
          <source>Subclassing</source>
          <target state="translated">Subclassing</target>
        </trans-unit>
        <trans-unit id="99fa45c4c82d2d692961c2b58d604b7d17c75dcc" translate="yes" xml:space="preserve">
          <source>Subclassing &lt;code&gt;UnicastRemoteObject&lt;/code&gt; and calling the &lt;a href=&quot;#%3Cinit%3E()&quot;&gt;&lt;code&gt;UnicastRemoteObject()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;UnicastRemoteObject&lt;/code&gt; をサブクラス化し、&lt;a href=&quot;#%3Cinit%3E()&quot;&gt; &lt;code&gt;UnicastRemoteObject()&lt;/code&gt; &lt;/a&gt;コンストラクターを呼び出します。</target>
        </trans-unit>
        <trans-unit id="8d60e0f687962aa1cd4cc3c220bd2feadf7ce074" translate="yes" xml:space="preserve">
          <source>Subclassing &lt;code&gt;UnicastRemoteObject&lt;/code&gt; and calling the &lt;a href=&quot;#%3Cinit%3E(int)&quot;&gt;&lt;code&gt;UnicastRemoteObject(port)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;UnicastRemoteObject&lt;/code&gt; をサブクラス化し、&lt;a href=&quot;#%3Cinit%3E(int)&quot;&gt; &lt;code&gt;UnicastRemoteObject(port)&lt;/code&gt; &lt;/a&gt;コンストラクターを呼び出します。</target>
        </trans-unit>
        <trans-unit id="3862cb0b3d0443660a2def6a7ca9c7e9bb913d5f" translate="yes" xml:space="preserve">
          <source>Subclassing &lt;code&gt;UnicastRemoteObject&lt;/code&gt; and calling the &lt;a href=&quot;#%3Cinit%3E(int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt;&lt;code&gt;UnicastRemoteObject(port, csf, ssf)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;UnicastRemoteObject&lt;/code&gt; をサブクラス化し、&lt;a href=&quot;#%3Cinit%3E(int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt; &lt;code&gt;UnicastRemoteObject(port, csf, ssf)&lt;/code&gt; &lt;/a&gt;コンストラクターを呼び出します。</target>
        </trans-unit>
        <trans-unit id="c138e083d9437f90abc82367a80ed5a004cbf848" translate="yes" xml:space="preserve">
          <source>Subclassing StandardMBean:</source>
          <target state="translated">StandardMBeanのサブクラスです。</target>
        </trans-unit>
        <trans-unit id="7b038ac7688e05a49b0704e45f4e5db8eeb34d02" translate="yes" xml:space="preserve">
          <source>Subclassing is not available for overriding the behavior of a standard file manager as it is created by calling a method on a compiler, not by invoking a constructor. Instead forwarding (or delegation) should be used. These classes makes it easy to forward most calls to a given file manager or file object while allowing customizing behavior. For example, consider how to log all calls to &lt;a href=&quot;javafilemanager#flush()&quot;&gt;JavaFileManager.flush()&lt;/a&gt;:</source>
          <target state="translated">サブクラス化は、コンストラクターを呼び出すのではなく、コンパイラーのメソッドを呼び出すことによって作成されるため、標準のファイルマネージャーの動作をオーバーライドするために使用できません。代わりに、転送（または委任）を使用する必要があります。これらのクラスを使用すると、動作をカスタマイズしながら、ほとんどの呼び出しを特定のファイルマネージャーまたはファイルオブジェクトに簡単に転送できます。たとえば、&lt;a href=&quot;javafilemanager#flush()&quot;&gt;JavaFileManager.flush（）&lt;/a&gt;へのすべての呼び出しをログに記録する方法を検討してください。</target>
        </trans-unit>
        <trans-unit id="ea2a6216f26ce8eae0545a72ddfb76ed32af95ed" translate="yes" xml:space="preserve">
          <source>Subclassing is not available for overriding the behavior of a standard file manager as it is created by calling a method on a compiler, not by invoking a constructor. Instead forwarding (or delegation) should be used. These classes makes it easy to forward most calls to a given file manager or file object while allowing customizing behavior. For example, consider how to log all calls to &lt;a href=&quot;javafilemanager#flush--&quot;&gt;JavaFileManager.flush()&lt;/a&gt;:</source>
          <target state="translated">サブクラス化は、コンストラクターを呼び出すのではなく、コンパイラーのメソッドを呼び出すことによって作成されるため、標準ファイルマネージャーの動作をオーバーライドするために使用できません。代わりに、転送（または委任）を使用する必要があります。これらのクラスを使用すると、ほとんどの呼び出しを特定のファイルマネージャーまたはファイルオブジェクトに簡単に転送でき、動作をカスタマイズできます。たとえば、&lt;a href=&quot;javafilemanager#flush--&quot;&gt;JavaFileManager.flush（）&lt;/a&gt;へのすべての呼び出しをログに記録する方法を検討してください。</target>
        </trans-unit>
        <trans-unit id="4ac38907f2e747ed1812d13ba3efbe600cda8201" translate="yes" xml:space="preserve">
          <source>Subdivides the cubic curve specified by the &lt;code&gt;src&lt;/code&gt; parameter and stores the resulting two subdivided curves into the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; curve parameters.</source>
          <target state="translated">細分によって指定次曲線 &lt;code&gt;src&lt;/code&gt; にパラメータ格納得られた二細分化曲線を &lt;code&gt;left&lt;/code&gt; 及び &lt;code&gt;right&lt;/code&gt; 曲線パラメータ。</target>
        </trans-unit>
        <trans-unit id="a41a4d25988b04b6f19bbfe308cb2c48b743d314" translate="yes" xml:space="preserve">
          <source>Subdivides the cubic curve specified by the &lt;code&gt;src&lt;/code&gt; parameter and stores the resulting two subdivided curves into the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; curve parameters. Either or both of the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; objects may be the same as the &lt;code&gt;src&lt;/code&gt; object or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">細分によって指定次曲線 &lt;code&gt;src&lt;/code&gt; にパラメータ格納得られた二細分化曲線を &lt;code&gt;left&lt;/code&gt; 及び &lt;code&gt;right&lt;/code&gt; 曲線パラメータ。いずれかまたは両方の &lt;code&gt;left&lt;/code&gt; と &lt;code&gt;right&lt;/code&gt; オブジェクトは、同じであってもよい &lt;code&gt;src&lt;/code&gt; オブジェクトまたは &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94d80121f386e044105969cfb5c5f13c69149a8f" translate="yes" xml:space="preserve">
          <source>Subdivides the cubic curve specified by the coordinates stored in the &lt;code&gt;src&lt;/code&gt; array at indices &lt;code&gt;srcoff&lt;/code&gt; through (&lt;code&gt;srcoff&lt;/code&gt; + 7) and stores the resulting two subdivided curves into the two result arrays at the corresponding indices.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 配列のインデックス &lt;code&gt;srcoff&lt;/code&gt; から（ &lt;code&gt;srcoff&lt;/code&gt; + 7）に格納されている座標で指定された三次曲線を細分割し、結果の2つの細分割された曲線を対応するインデックスの2つの結果配列に格納します。</target>
        </trans-unit>
        <trans-unit id="7b914f0275f7a745a651a3721d4efa6687a7bf0a" translate="yes" xml:space="preserve">
          <source>Subdivides the cubic curve specified by the coordinates stored in the &lt;code&gt;src&lt;/code&gt; array at indices &lt;code&gt;srcoff&lt;/code&gt; through (&lt;code&gt;srcoff&lt;/code&gt; + 7) and stores the resulting two subdivided curves into the two result arrays at the corresponding indices. Either or both of the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; arrays may be &lt;code&gt;null&lt;/code&gt; or a reference to the same array as the &lt;code&gt;src&lt;/code&gt; array. Note that the last point in the first subdivided curve is the same as the first point in the second subdivided curve. Thus, it is possible to pass the same array for &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; and to use offsets, such as &lt;code&gt;rightoff&lt;/code&gt; equals (&lt;code&gt;leftoff&lt;/code&gt; + 6), in order to avoid allocating extra storage for this common point.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 配列のインデックス &lt;code&gt;srcoff&lt;/code&gt; から（ &lt;code&gt;srcoff&lt;/code&gt; + 7）に格納されている座標で指定された三次曲線を細分割し、結果の2つの細分割された曲線を対応するインデックスの2つの結果配列に格納します。 &lt;code&gt;left&lt;/code&gt; 配列と &lt;code&gt;right&lt;/code&gt; 配列のいずれかまたは両方が &lt;code&gt;null&lt;/code&gt; であるか、 &lt;code&gt;src&lt;/code&gt; 配列と同じ配列への参照である可能性があります。最初の細分割された曲線の最後の点は、2番目の細分割された曲線の最初の点と同じであることに注意してください。したがって、のために同一の配列を渡すことができ &lt;code&gt;left&lt;/code&gt; および &lt;code&gt;right&lt;/code&gt; などとして使用オフセットに &lt;code&gt;rightoff&lt;/code&gt; （等号 &lt;code&gt;leftoff&lt;/code&gt; + 6）、この共通点に余分なストレージを割り当てないようにするため。</target>
        </trans-unit>
        <trans-unit id="1b3d1f61041ed0cfec1edeaf4e90c8855040810e" translate="yes" xml:space="preserve">
          <source>Subdivides the quadratic curve specified by the &lt;code&gt;src&lt;/code&gt; parameter and stores the resulting two subdivided curves into the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; curve parameters.</source>
          <target state="translated">細分によって指定次曲線 &lt;code&gt;src&lt;/code&gt; にパラメータ格納得られた二細分化曲線を &lt;code&gt;left&lt;/code&gt; 及び &lt;code&gt;right&lt;/code&gt; 曲線パラメータ。</target>
        </trans-unit>
        <trans-unit id="22fbd8630b9f5bd4a0b8d157ac57f02bddf2ac6b" translate="yes" xml:space="preserve">
          <source>Subdivides the quadratic curve specified by the &lt;code&gt;src&lt;/code&gt; parameter and stores the resulting two subdivided curves into the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; curve parameters. Either or both of the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; objects can be the same as the &lt;code&gt;src&lt;/code&gt; object or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">細分によって指定次曲線 &lt;code&gt;src&lt;/code&gt; にパラメータ格納得られた二細分化曲線を &lt;code&gt;left&lt;/code&gt; 及び &lt;code&gt;right&lt;/code&gt; 曲線パラメータ。いずれかまたは両方の &lt;code&gt;left&lt;/code&gt; と &lt;code&gt;right&lt;/code&gt; オブジェクトは、同じであってもよい &lt;code&gt;src&lt;/code&gt; オブジェクトまたは &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6db53e3b9623ae3b7c7b721a4da7a1f01ce27cb2" translate="yes" xml:space="preserve">
          <source>Subdivides the quadratic curve specified by the coordinates stored in the &lt;code&gt;src&lt;/code&gt; array at indices &lt;code&gt;srcoff&lt;/code&gt; through &lt;code&gt;srcoff&lt;/code&gt; + 5 and stores the resulting two subdivided curves into the two result arrays at the corresponding indices.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 配列のインデックス &lt;code&gt;srcoff&lt;/code&gt; から &lt;code&gt;srcoff&lt;/code&gt; + 5に格納されている座標で指定された二次曲線を細分割し、結果の2つの細分割された曲線を対応するインデックスの2つの結果配列に格納します。</target>
        </trans-unit>
        <trans-unit id="92e128938ef9f54eb3ec283e36c5de0e49a48681" translate="yes" xml:space="preserve">
          <source>Subdivides the quadratic curve specified by the coordinates stored in the &lt;code&gt;src&lt;/code&gt; array at indices &lt;code&gt;srcoff&lt;/code&gt; through &lt;code&gt;srcoff&lt;/code&gt; + 5 and stores the resulting two subdivided curves into the two result arrays at the corresponding indices. Either or both of the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; arrays can be &lt;code&gt;null&lt;/code&gt; or a reference to the same array and offset as the &lt;code&gt;src&lt;/code&gt; array. Note that the last point in the first subdivided curve is the same as the first point in the second subdivided curve. Thus, it is possible to pass the same array for &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; and to use offsets such that &lt;code&gt;rightoff&lt;/code&gt; equals &lt;code&gt;leftoff&lt;/code&gt; + 4 in order to avoid allocating extra storage for this common point.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 配列のインデックス &lt;code&gt;srcoff&lt;/code&gt; から &lt;code&gt;srcoff&lt;/code&gt; + 5に格納されている座標で指定された二次曲線を細分割し、結果の2つの細分割された曲線を対応するインデックスの2つの結果配列に格納します。 &lt;code&gt;left&lt;/code&gt; 配列と &lt;code&gt;right&lt;/code&gt; 配列のいずれかまたは両方を &lt;code&gt;null&lt;/code&gt; にするか、 &lt;code&gt;src&lt;/code&gt; 配列と同じ配列およびオフセットを参照することができます。最初の細分割された曲線の最後の点は、2番目の細分割された曲線の最初の点と同じであることに注意してください。したがって、のために同一の配列を渡すことができ &lt;code&gt;left&lt;/code&gt; および &lt;code&gt;right&lt;/code&gt; ようにして使用するオフセット &lt;code&gt;rightoff&lt;/code&gt; 等号 &lt;code&gt;leftoff&lt;/code&gt; この共通点に余分なストレージを割り当てないようにするために、leftoff +4。</target>
        </trans-unit>
        <trans-unit id="f396620f6cd8f72d9266e20c4188de970a4d30f7" translate="yes" xml:space="preserve">
          <source>Subdivides this &lt;code&gt;QuadCurve2D&lt;/code&gt; and stores the resulting two subdivided curves into the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; curve parameters.</source>
          <target state="translated">細分この &lt;code&gt;QuadCurve2D&lt;/code&gt; に格納得られた二細分化曲線を &lt;code&gt;left&lt;/code&gt; 及び &lt;code&gt;right&lt;/code&gt; 曲線パラメータ。</target>
        </trans-unit>
        <trans-unit id="18c969a83e89f64ef4fabfb5a22dc30f80a92867" translate="yes" xml:space="preserve">
          <source>Subdivides this &lt;code&gt;QuadCurve2D&lt;/code&gt; and stores the resulting two subdivided curves into the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; curve parameters. Either or both of the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; objects can be the same as this &lt;code&gt;QuadCurve2D&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">細分この &lt;code&gt;QuadCurve2D&lt;/code&gt; に格納得られた二細分化曲線を &lt;code&gt;left&lt;/code&gt; 及び &lt;code&gt;right&lt;/code&gt; 曲線パラメータ。いずれかまたは両方の &lt;code&gt;left&lt;/code&gt; と &lt;code&gt;right&lt;/code&gt; オブジェクトは、これと同じことができる &lt;code&gt;QuadCurve2D&lt;/code&gt; または &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36312dd7aad90cd34f6bf9fc45ea776826d3fd82" translate="yes" xml:space="preserve">
          <source>Subdivides this cubic curve and stores the resulting two subdivided curves into the left and right curve parameters.</source>
          <target state="translated">この三次曲線を細分化し、結果として細分化された2つの曲線を左右の曲線パラメータに格納します。</target>
        </trans-unit>
        <trans-unit id="af666c6ac94c85dd61c8a52ea519ddcc26934257" translate="yes" xml:space="preserve">
          <source>Subdivides this cubic curve and stores the resulting two subdivided curves into the left and right curve parameters. Either or both of the left and right objects may be the same as this object or null.</source>
          <target state="translated">この3次曲線を細分化し、結果として細分化された2つの曲線を左と右の曲線パラメータに格納します。左と右のオブジェクトのどちらか、または両方がこのオブジェクトと同じであるか、NULLである可能性があります。</target>
        </trans-unit>
        <trans-unit id="63084ad01370e771b9c7814605cfa22978b4ad2d" translate="yes" xml:space="preserve">
          <source>Subformat</source>
          <target state="translated">Subformat</target>
        </trans-unit>
        <trans-unit id="6b1b03a4bcdbdc4bca40376a8dc65a8d85cddb7b" translate="yes" xml:space="preserve">
          <source>Subformat Created</source>
          <target state="translated">作成されたサブフォーマット</target>
        </trans-unit>
        <trans-unit id="6322a0a016145b357c92efedb4761a7d8253fd29" translate="yes" xml:space="preserve">
          <source>SubformatPattern</source>
          <target state="translated">SubformatPattern</target>
        </trans-unit>
        <trans-unit id="3c191ca05b1412867171e15c22cbc8a04d9b3bd0" translate="yes" xml:space="preserve">
          <source>Subformats that have already been created are not affected.</source>
          <target state="translated">すでに作成されているサブフォーマットは影響を受けません。</target>
        </trans-unit>
        <trans-unit id="18fb2a6e02e4fdd3fdde98e537c1f3823b9c76bd" translate="yes" xml:space="preserve">
          <source>Subinterfaces such as the &lt;code&gt;CachedRowSet&lt;/code&gt; interface define the method &lt;code&gt;CachedRowSet.setKeyColumns&lt;/code&gt;, which allows primary key semantics to be enforced on specific columns. Implementations of the &lt;code&gt;setMatchColumn(String columnIdx)&lt;/code&gt; method should ensure that the constraints on the key columns are maintained when a &lt;code&gt;CachedRowSet&lt;/code&gt; object sets a primary key column as a match column.</source>
          <target state="translated">&lt;code&gt;CachedRowSet&lt;/code&gt; インターフェースなどのサブインターフェースは、メソッド &lt;code&gt;CachedRowSet.setKeyColumns&lt;/code&gt; を定義します。これにより、特定の列に主キーのセマンティクスを適用できます。 &lt;code&gt;setMatchColumn(String columnIdx)&lt;/code&gt; メソッドの実装では、 &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトが主キー列を一致列として設定するときに、キー列の制約が維持されるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="8d183dbdcea3b29906090bd83fa6fa37923cc8ec" translate="yes" xml:space="preserve">
          <source>Subject</source>
          <target state="translated">Subject</target>
        </trans-unit>
        <trans-unit id="a1f7e4fb837a4fd321fc0ced8c9afae045158f88" translate="yes" xml:space="preserve">
          <source>Subject.doAs()</source>
          <target state="translated">Subject.doAs()</target>
        </trans-unit>
        <trans-unit id="5434dcba6d4b9cda35cbd476ffa75c24a2c97bbc" translate="yes" xml:space="preserve">
          <source>Subject.doAsPrivileged()</source>
          <target state="translated">Subject.doAsPrivileged()</target>
        </trans-unit>
        <trans-unit id="e50ee6a9486d902cd1b66adf72b093bb074bc0eb" translate="yes" xml:space="preserve">
          <source>Subject.equals()</source>
          <target state="translated">Subject.equals()</target>
        </trans-unit>
        <trans-unit id="fc6feb9ca6f95486abcb422b773155fd94d38f95" translate="yes" xml:space="preserve">
          <source>Subject.getPrincipals()</source>
          <target state="translated">Subject.getPrincipals()</target>
        </trans-unit>
        <trans-unit id="f17818d727e398d891f4a3d3d95ebb01dd0fd82d" translate="yes" xml:space="preserve">
          <source>Subject.getPrivateCredentials()</source>
          <target state="translated">Subject.getPrivateCredentials()</target>
        </trans-unit>
        <trans-unit id="46ccef41b916e9b7e2ad286ff933356860cee3f8" translate="yes" xml:space="preserve">
          <source>Subject.getPublicCredentials()</source>
          <target state="translated">Subject.getPublicCredentials()</target>
        </trans-unit>
        <trans-unit id="6859dd2163bdc9e51ecf7e7b63b81ff143c70dcc" translate="yes" xml:space="preserve">
          <source>Subject.getSubject()</source>
          <target state="translated">Subject.getSubject()</target>
        </trans-unit>
        <trans-unit id="2349619c2f418d477db69d7e191669d09b0348fa" translate="yes" xml:space="preserve">
          <source>Subject.hashCode()</source>
          <target state="translated">Subject.hashCode()</target>
        </trans-unit>
        <trans-unit id="54fba497869bafb4f016304c25e9aed7c64abd6d" translate="yes" xml:space="preserve">
          <source>Subject.isReadOnly()</source>
          <target state="translated">Subject.isReadOnly()</target>
        </trans-unit>
        <trans-unit id="42965f7ba3fff0c88f78c8332a2ef49d6c35fb85" translate="yes" xml:space="preserve">
          <source>Subject.setReadOnly()</source>
          <target state="translated">Subject.setReadOnly()</target>
        </trans-unit>
        <trans-unit id="9006aea424a3cc55f3108cb81d728fa172273999" translate="yes" xml:space="preserve">
          <source>Subject.toString()</source>
          <target state="translated">Subject.toString()</target>
        </trans-unit>
        <trans-unit id="c32c2ba97e8469605c9ce616c8f8c477c52558a4" translate="yes" xml:space="preserve">
          <source>SubjectAlternativeName</source>
          <target state="translated">SubjectAlternativeName</target>
        </trans-unit>
        <trans-unit id="6f2a99876850d14ec4a7225741f8bb0aba421a8f" translate="yes" xml:space="preserve">
          <source>SubjectDelegationPermission</source>
          <target state="translated">SubjectDelegationPermission</target>
        </trans-unit>
        <trans-unit id="258892234aab5bb8b07e1a0855d993e98340e452" translate="yes" xml:space="preserve">
          <source>SubjectDomainCombiner</source>
          <target state="translated">SubjectDomainCombiner</target>
        </trans-unit>
        <trans-unit id="7fd4cdd761685b4f329ae5271b38d3e06072f251" translate="yes" xml:space="preserve">
          <source>SubjectDomainCombiner.combine()</source>
          <target state="translated">SubjectDomainCombiner.combine()</target>
        </trans-unit>
        <trans-unit id="6128e1079d24dc11f5b5bb20a523d80eb9f48b41" translate="yes" xml:space="preserve">
          <source>SubjectDomainCombiner.getSubject()</source>
          <target state="translated">SubjectDomainCombiner.getSubject()</target>
        </trans-unit>
        <trans-unit id="fe51c271bf6d946801dc1f1facd8c1193955d109" translate="yes" xml:space="preserve">
          <source>SubjectKeyIdentifier</source>
          <target state="translated">SubjectKeyIdentifier</target>
        </trans-unit>
        <trans-unit id="c70cdd0429704d933c4d2e866e99c4441390332b" translate="yes" xml:space="preserve">
          <source>SubjectPublicKeyInfo</source>
          <target state="translated">SubjectPublicKeyInfo</target>
        </trans-unit>
        <trans-unit id="38a71c7a5645a1281009b01b6a49a3535463bd81" translate="yes" xml:space="preserve">
          <source>Subjects may potentially have multiple identities. Each identity is represented as a &lt;code&gt;Principal&lt;/code&gt; within the &lt;code&gt;Subject&lt;/code&gt;. Principals simply bind names to a &lt;code&gt;Subject&lt;/code&gt;. For example, a &lt;code&gt;Subject&lt;/code&gt; that happens to be a person, Alice, might have two Principals: one which binds &quot;Alice Bar&quot;, the name on her driver license, to the &lt;code&gt;Subject&lt;/code&gt;, and another which binds, &quot;999-99-9999&quot;, the number on her student identification card, to the &lt;code&gt;Subject&lt;/code&gt;. Both Principals refer to the same &lt;code&gt;Subject&lt;/code&gt; even though each has a different name.</source>
          <target state="translated">被験者は複数のアイデンティティを持つ可能性があります。各アイデンティティは、 &lt;code&gt;Subject&lt;/code&gt; 内の &lt;code&gt;Principal&lt;/code&gt; として表されます。プリンシパルは単に名前を &lt;code&gt;Subject&lt;/code&gt; バインドします。たとえば、 &lt;code&gt;Subject&lt;/code&gt; に「アリス・バー」、彼女の運転免許証の名前を、結合するもの：人、アリスであることを起こる、2人のプリンシパルかもしれない &lt;code&gt;Subject&lt;/code&gt; 、および他のバインド、「999-99-9999」を、学生の身分証明書に記載されている番号、 &lt;code&gt;Subject&lt;/code&gt; 。両方のプリンシパルは、それぞれ異なる名前を持っていますが、同じ &lt;code&gt;Subject&lt;/code&gt; 参照しています。</target>
        </trans-unit>
        <trans-unit id="b66975f31e3459ac2e7616e583314468f3130474" translate="yes" xml:space="preserve">
          <source>SubmissionPublisher</source>
          <target state="translated">SubmissionPublisher</target>
        </trans-unit>
        <trans-unit id="edcf433189b041fe1a4d81ec022ad002dd7a9098" translate="yes" xml:space="preserve">
          <source>Submit print jobs to services that support the document type to be printed.</source>
          <target state="translated">印刷する文書の種類をサポートするサービスに印刷ジョブを送信します。</target>
        </trans-unit>
        <trans-unit id="2e9a3497a4b1b42da3b79f2f19b42a6a63f273d6" translate="yes" xml:space="preserve">
          <source>Submits a ForkJoinTask for execution.</source>
          <target state="translated">ForkJoinTaskを実行のためにサブミットします。</target>
        </trans-unit>
        <trans-unit id="3df0f134654949ff786ca2beb12a2ca6629165d1" translate="yes" xml:space="preserve">
          <source>Submits a Runnable task for execution and returns a Future representing that task.</source>
          <target state="translated">実行可能なタスクを実行のためにサブミットし、そのタスクを表すFutureを返します。</target>
        </trans-unit>
        <trans-unit id="ab5f2f768f12ce68a8a1b5395f0467c463c5a6b2" translate="yes" xml:space="preserve">
          <source>Submits a Runnable task for execution and returns a Future representing that task. The Future's &lt;code&gt;get&lt;/code&gt; method will return &lt;code&gt;null&lt;/code&gt; upon &lt;em&gt;successful&lt;/em&gt; completion.</source>
          <target state="translated">Runnableタスクを送信して実行し、そのタスクを表すFutureを返します。Futureの &lt;code&gt;get&lt;/code&gt; メソッドは、&lt;em&gt;正常に&lt;/em&gt;完了すると &lt;code&gt;null&lt;/code&gt; を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f8d52fc24517e6dc0d794e7166e7ad25dd655d3f" translate="yes" xml:space="preserve">
          <source>Submits a Runnable task for execution and returns a Future representing that task. The Future's &lt;code&gt;get&lt;/code&gt; method will return the given result upon successful completion.</source>
          <target state="translated">Runnableタスクを送信して実行し、そのタスクを表すFutureを返します。Futureの &lt;code&gt;get&lt;/code&gt; メソッドは、正常に完了すると、指定された結果を返します。</target>
        </trans-unit>
        <trans-unit id="c7c4de8c492a5bfc4ccdfed8c91d4e4f5f77c359" translate="yes" xml:space="preserve">
          <source>Submits a Runnable task for execution and returns a Future representing that task. Upon completion, this task may be taken or polled.</source>
          <target state="translated">実行可能なタスクを実行のために提出し、そのタスクを表すFutureを返します。完了すると、このタスクを実行したり、ポーリングしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="f276d98bc227e61bd2eb140f59e048375b0001c1" translate="yes" xml:space="preserve">
          <source>Submits a batch of commands to the database for execution and if all commands execute successfully, returns an array of update counts.</source>
          <target state="translated">コマンドのバッチをデータベースに送信して実行し、すべてのコマンドが正常に実行された場合、更新回数の配列を返します。</target>
        </trans-unit>
        <trans-unit id="f23c18fee8686d6c8cbaea98a4ea3227a107559f" translate="yes" xml:space="preserve">
          <source>Submits a batch of commands to the database for execution and if all commands execute successfully, returns an array of update counts. The &lt;code&gt;int&lt;/code&gt; elements of the array that is returned are ordered to correspond to the commands in the batch, which are ordered according to the order in which they were added to the batch. The elements in the array returned by the method &lt;code&gt;executeBatch&lt;/code&gt; may be one of the following:</source>
          <target state="translated">コマンドのバッチをデータベースに送信して実行し、すべてのコマンドが正常に実行された場合は、更新カウントの配列を返します。返される配列の &lt;code&gt;int&lt;/code&gt; 要素は、バッチ内のコマンドに対応するように順序付けられます。これらのコマンドは、バッチに追加された順序に従って順序付けられます。メソッド &lt;code&gt;executeBatch&lt;/code&gt; によって返される配列内の要素は、次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="1dd3dbbf65424603a01aa9cd3e2d757f20ee2311" translate="yes" xml:space="preserve">
          <source>Submits a batch of commands to the database for execution and if all commands execute successfully, returns an array of update counts. The &lt;code&gt;long&lt;/code&gt; elements of the array that is returned are ordered to correspond to the commands in the batch, which are ordered according to the order in which they were added to the batch. The elements in the array returned by the method &lt;code&gt;executeLargeBatch&lt;/code&gt; may be one of the following:</source>
          <target state="translated">コマンドのバッチをデータベースに送信して実行し、すべてのコマンドが正常に実行された場合は、更新カウントの配列を返します。返される配列の &lt;code&gt;long&lt;/code&gt; 要素は、バッチ内のコマンドに対応するように順序付けられます。コマンドは、バッチに追加された順序に従って順序付けられます。メソッド &lt;code&gt;executeLargeBatch&lt;/code&gt; によって返される配列内の要素は、次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="691328479eddc257033f12b2def9121ed18887ce" translate="yes" xml:space="preserve">
          <source>Submits a one-shot task that becomes enabled after the given delay.</source>
          <target state="translated">指定された遅延後に有効になるワンショットタスクを送信します。</target>
        </trans-unit>
        <trans-unit id="21085b7b4b7959df663d3ebacec5fd2177362796" translate="yes" xml:space="preserve">
          <source>Submits a periodic action that becomes enabled first after the given initial delay, and subsequently with the given delay between the termination of one execution and the commencement of the next.</source>
          <target state="translated">与えられた最初の遅延の後に最初に有効になり、その後、1つの実行が終了してから次の実行が開始されるまでの間に与えられた遅延で有効になる周期的なアクションを送信します。</target>
        </trans-unit>
        <trans-unit id="eb64e48c7b1a2ce423d26cbccf818eb128acfe0f" translate="yes" xml:space="preserve">
          <source>Submits a periodic action that becomes enabled first after the given initial delay, and subsequently with the given period; that is, executions will commence after &lt;code&gt;initialDelay&lt;/code&gt;, then &lt;code&gt;initialDelay + period&lt;/code&gt;, then &lt;code&gt;initialDelay + 2 * period&lt;/code&gt;, and so on.</source>
          <target state="translated">指定された初期遅延の後に最初に有効になり、その後指定された期間で有効になる定期的なアクションを送信します。つまり、実行は &lt;code&gt;initialDelay&lt;/code&gt; の後に開始され、次に &lt;code&gt;initialDelay + period&lt;/code&gt; 、次に &lt;code&gt;initialDelay + 2 * period&lt;/code&gt; ように続きます。</target>
        </trans-unit>
        <trans-unit id="4ea3aaab727dd527a4ef70b3eb1ab05ac26c08f9" translate="yes" xml:space="preserve">
          <source>Submits a value-returning one-shot task that becomes enabled after the given delay.</source>
          <target state="translated">指定された遅延後に有効になる値を返すワンショットタスクを送信します。</target>
        </trans-unit>
        <trans-unit id="1713ba86babe8e357bace0f193574cf2b5965033" translate="yes" xml:space="preserve">
          <source>Submits a value-returning task for execution and returns a Future representing the pending results of the task.</source>
          <target state="translated">値を返すタスクを実行のためにサブミットし、タスクの保留中の結果を表すFutureを返します。</target>
        </trans-unit>
        <trans-unit id="c0dd75985eae0d8b657240cd3f4f6e5ec9798183" translate="yes" xml:space="preserve">
          <source>Submits a value-returning task for execution and returns a Future representing the pending results of the task. The Future's &lt;code&gt;get&lt;/code&gt; method will return the task's result upon successful completion.</source>
          <target state="translated">値を返すタスクを実行のために送信し、タスクの保留中の結果を表すFutureを返します。Futureの &lt;code&gt;get&lt;/code&gt; メソッドは、正常に完了するとタスクの結果を返します。</target>
        </trans-unit>
        <trans-unit id="800df5c668c14ff7af90839dbde574fb2ae48938" translate="yes" xml:space="preserve">
          <source>Submits a value-returning task for execution and returns a Future representing the pending results of the task. Upon completion, this task may be taken or polled.</source>
          <target state="translated">値を返すタスクを実行のために提出し、タスクの保留中の結果を表すFutureを返します。タスクが完了すると、このタスクを実行したり、ポーリングしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="62cc964d9281a9202d067fe39829be52bfb171fa" translate="yes" xml:space="preserve">
          <source>Subpattern boundary</source>
          <target state="translated">サブパターン境界</target>
        </trans-unit>
        <trans-unit id="7f30401e087b76452b1d8a121aa7c4f514700cae" translate="yes" xml:space="preserve">
          <source>Subprotocols are specified in the order of preference. The most preferred subprotocol is specified first. If there are any additional subprotocols they are enumerated from the most preferred to the least preferred.</source>
          <target state="translated">サブプロトコルは、優先順位の高い順に指定されます。最も好ましいサブプロトコルが最初に指定されます。追加のサブプロトコルがある場合は、最も好ましいものから最も好ましくないものまで列挙されます。</target>
        </trans-unit>
        <trans-unit id="98ca01712e22c36294df43da58b96fbe214e1ead" translate="yes" xml:space="preserve">
          <source>Subprotocols not conforming to the syntax of subprotocol identifiers are illegal. If this method is not invoked then no subprotocols will be requested.</source>
          <target state="translated">サブプロトコル識別子の構文に従わないサブプロトコルは不正です。このメソッドが呼び出されなかった場合、サブプロトコルは要求されません。</target>
        </trans-unit>
        <trans-unit id="b1bd6eaaf0ebc0fa2da36cbd85120b995ab0f777" translate="yes" xml:space="preserve">
          <source>Subscript</source>
          <target state="translated">Subscript</target>
        </trans-unit>
        <trans-unit id="84a58bdc422a02146acd458cf407174236116cb1" translate="yes" xml:space="preserve">
          <source>Subsequent attempts to modify the Subject's &lt;code&gt;Principal&lt;/code&gt; and credential Sets will result in an &lt;code&gt;IllegalStateException&lt;/code&gt; being thrown. Also, once a &lt;code&gt;Subject&lt;/code&gt; is read-only, it can not be reset to being writable again.</source>
          <target state="translated">サブジェクトの &lt;code&gt;Principal&lt;/code&gt; セットと資格情報セットを変更しようとすると、 &lt;code&gt;IllegalStateException&lt;/code&gt; がスローされます。また、 &lt;code&gt;Subject&lt;/code&gt; が読み取り専用になると、再度書き込み可能にリセットすることはできません。</target>
        </trans-unit>
        <trans-unit id="a3e8d7f1c4346b67d5f2d06cd9ed03259536c57a" translate="yes" xml:space="preserve">
          <source>Subsequent behavior of an iterator is unspecified if the action throws an exception.</source>
          <target state="translated">アクションが例外を投げる場合、イテレータのその後の動作は不定です。</target>
        </trans-unit>
        <trans-unit id="d9a9f97bd1cb824fd1190bfa5dd594293e0ba51d" translate="yes" xml:space="preserve">
          <source>Subsequent calls to &lt;a href=&quot;#getKeyStore()&quot;&gt;&lt;code&gt;getKeyStore()&lt;/code&gt;&lt;/a&gt; return the same object as the initial call. If the initial call failed with a KeyStoreException, subsequent calls also throw a KeyStoreException.</source>
          <target state="translated">その後の&lt;a href=&quot;#getKeyStore()&quot;&gt; &lt;code&gt;getKeyStore()&lt;/code&gt; の&lt;/a&gt;呼び出しは、最初の呼び出しと同じオブジェクトを返します。最初の呼び出しがKeyStoreExceptionで失敗した場合、後続の呼び出しもKeyStoreExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="24d9a50a48e06d3220067ae179dba9810e23786d" translate="yes" xml:space="preserve">
          <source>Subsequent calls to &lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt;&lt;code&gt;getKeyStore()&lt;/code&gt;&lt;/a&gt; return the same object as the initial call. If the initial call to failed with a KeyStoreException, subsequent calls also throw a KeyStoreException.</source>
          <target state="translated">その後&lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt; &lt;code&gt;getKeyStore()&lt;/code&gt; を&lt;/a&gt;呼び出すと、最初の呼び出しと同じオブジェクトが返されます。への最初の呼び出しがKeyStoreExceptionで失敗した場合、後続の呼び出しもKeyStoreExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="e8c524b727c8c75c4c596e9b799fcc34f9c7924e" translate="yes" xml:space="preserve">
          <source>Subsequent changes to &lt;code&gt;name&lt;/code&gt; do not affect the remaining name field in this NamingException and vice versa.</source>
          <target state="translated">その後の &lt;code&gt;name&lt;/code&gt; 変更は、このNamingExceptionの残りの名前フィールドには影響しません。その逆も同様です。</target>
        </trans-unit>
        <trans-unit id="a39e47dd7c07e011f8f2adf67387578d50b0a2c3" translate="yes" xml:space="preserve">
          <source>Subsequent changes to &lt;code&gt;name&lt;/code&gt; does not affect the remaining name field in this NamingException and vice versa.</source>
          <target state="translated">その後の &lt;code&gt;name&lt;/code&gt; 変更は、このNamingExceptionの残りの名前フィールドには影響しません。逆も同様です。</target>
        </trans-unit>
        <trans-unit id="aab796c67af74e2ac9bf025c8234f41fb6539bef" translate="yes" xml:space="preserve">
          <source>Subsequent changes to the sequential/parallel execution mode of the returned stream are not guaranteed to be propagated to the input streams.</source>
          <target state="translated">返されたストリームの逐次/並列実行モードへの後続の変更は、入力ストリームへの伝搬は保証されません。</target>
        </trans-unit>
        <trans-unit id="46ebffad0f7f23083763800fade63d276dec7d37" translate="yes" xml:space="preserve">
          <source>Subsequent crossings of the high threshold value do not cause further notifications unless the attribute value becomes equal to or less than the low threshold value.</source>
          <target state="translated">属性値が低閾値と同じかそれ以下にならない限り、高閾値を越えても、それ以降の通知は発生しません。</target>
        </trans-unit>
        <trans-unit id="702339a32dc2414c216beb11549937ae36d93992" translate="yes" xml:space="preserve">
          <source>Subsequent crossings of the low threshold value do not cause further notifications unless the attribute value becomes equal to or greater than the high threshold value.</source>
          <target state="translated">低いしきい値の後続の交差は、属性値が高いしきい値と同じかそれ以上にならない限り、それ以上の通知を発生させません。</target>
        </trans-unit>
        <trans-unit id="4e2667676722fc907ad7490247658cd0fa651b43" translate="yes" xml:space="preserve">
          <source>Subsequent differences from the string to compare value do not cause further notifications unless the attribute value matches the string to compare value.</source>
          <target state="translated">属性値が比較対象の文字列と一致しない限り、比較対象の文字列からの後続の相違は、それ以上の通知を発生させません。</target>
        </trans-unit>
        <trans-unit id="5ae80ae73dcdb80a8beea1dc7068cd7e728fd4de" translate="yes" xml:space="preserve">
          <source>Subsequent executions are suppressed. Subsequent calls to &lt;a href=&quot;future#isDone()&quot;&gt;&lt;code&gt;isDone()&lt;/code&gt;&lt;/a&gt; on the returned future will return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">以降の実行は抑制されます。返されたfutureで&lt;a href=&quot;future#isDone()&quot;&gt; &lt;code&gt;isDone()&lt;/code&gt; &lt;/a&gt;を後で呼び出すと、 &lt;code&gt;true&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="0f3e31d4ad38db22fe198265b2dbd754a310667f" translate="yes" xml:space="preserve">
          <source>Subsequent invocations of this method return the file system that was returned by the first invocation.</source>
          <target state="translated">このメソッドの後続の呼び出しは、最初の呼び出しで返されたファイル・システムを返します。</target>
        </trans-unit>
        <trans-unit id="650306a826b66b66b1771a92446a219611f5d05a" translate="yes" xml:space="preserve">
          <source>Subsequent invocations of this method return the provider that was returned by the first invocation.</source>
          <target state="translated">このメソッドの後続の呼び出しは、最初の呼び出しで返されたプロバイダを返します。</target>
        </trans-unit>
        <trans-unit id="bb2aa8f54e6420127d06a5f684b74b45b7edfa43" translate="yes" xml:space="preserve">
          <source>Subsequent invocations of this method return the same &lt;code&gt;Path&lt;/code&gt;.</source>
          <target state="translated">このメソッドの後続の呼び出しは、同じ &lt;code&gt;Path&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="847304f4fed64c2e4d34d08b044ed478a7892c61" translate="yes" xml:space="preserve">
          <source>Subsequent match columns may be added as follows to a different &lt;code&gt;Joinable&lt;/code&gt; object (a &lt;code&gt;RowSet&lt;/code&gt; object that has implemented the &lt;code&gt;Joinable&lt;/code&gt; interface).</source>
          <target state="translated">後続の一致列は、次のように別の &lt;code&gt;Joinable&lt;/code&gt; オブジェクト（ &lt;code&gt;Joinable&lt;/code&gt; インターフェイスを実装した &lt;code&gt;RowSet&lt;/code&gt; オブジェクト）に追加できます。</target>
        </trans-unit>
        <trans-unit id="931a1709194f9f7c61bf32bf0685a2605480c434" translate="yes" xml:space="preserve">
          <source>Subsequent matchings of the string to compare values do not cause further notifications unless the attribute value differs from the string to compare value.</source>
          <target state="translated">値を比較する文字列の後続のマッチは、属性値が比較する文字列の値と異なる場合を除いて、それ以上の通知を発生させません。</target>
        </trans-unit>
        <trans-unit id="b35355ae29cd6c00e0ceaa0f3e5576b1b51eca5e" translate="yes" xml:space="preserve">
          <source>Subsequent modifications to this process builder will not affect the returned &lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロセスビルダーに対するその後の変更は、返された&lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;は影響しません。</target>
        </trans-unit>
        <trans-unit id="7e8703dd3a596190fe87e68bbcd42ac7cc4503f8" translate="yes" xml:space="preserve">
          <source>Subsequent to acceptDrop(), but not before, &lt;code&gt;DropTargetDropEvent&lt;/code&gt;'s getTransferable() method may be invoked, and data transfer may be performed via the returned &lt;code&gt;Transferable&lt;/code&gt;'s getTransferData() method.</source>
          <target state="translated">acceptDrop（）に続いて、ただし前ではなく、 &lt;code&gt;DropTargetDropEvent&lt;/code&gt; のgetTransferable（）メソッドが呼び出され、返された &lt;code&gt;Transferable&lt;/code&gt; のgetTransferData（）メソッドを介してデータ転送が実行される場合があります。</target>
        </trans-unit>
        <trans-unit id="30e294ac54561e020b2a3bd981cde3baab7b21dd" translate="yes" xml:space="preserve">
          <source>Subset</source>
          <target state="translated">Subset</target>
        </trans-unit>
        <trans-unit id="eac652a59f03a933e832caf05d306830ee185067" translate="yes" xml:space="preserve">
          <source>Subsets of the source and destination bands may be selected.</source>
          <target state="translated">ソースバンドとデスティネーションバンドのサブセットを選択することができます。</target>
        </trans-unit>
        <trans-unit id="fbc80061fb08d50fb88afad7c3fad78e3b82a146" translate="yes" xml:space="preserve">
          <source>Substitution of one object for another during serialization or deserialization</source>
          <target state="translated">シリアライズまたはデシリアライズ中に、あるオブジェクトを別のオブジェクトに置き換えます。</target>
        </trans-unit>
        <trans-unit id="ae5f61e523ef194692c08eae320b323a03f8bb9b" translate="yes" xml:space="preserve">
          <source>Subtract</source>
          <target state="translated">Subtract</target>
        </trans-unit>
        <trans-unit id="c4441f3d71f355620a4c09eab80afa951e57927c" translate="yes" xml:space="preserve">
          <source>Subtract the input months from the month-of-year field</source>
          <target state="translated">年月欄から入力月を引く</target>
        </trans-unit>
        <trans-unit id="c4132edadffa8a573b6947de4eec4a20c1b28be1" translate="yes" xml:space="preserve">
          <source>Subtract the input years from the year field</source>
          <target state="translated">年欄から入力年を引く</target>
        </trans-unit>
        <trans-unit id="fb08a5971879c06a3d1705e1cb75d03d82788098" translate="yes" xml:space="preserve">
          <source>Subtracting one hour from 01:30+01:00 will result in 01:30+02:00</source>
          <target state="translated">01:30+01:00から1時間を引くと01:30+02:00となります。</target>
        </trans-unit>
        <trans-unit id="5bf4a207c8c2e3a27a4b5aa600ce936f83f790b9" translate="yes" xml:space="preserve">
          <source>Subtracting one hour from 01:30+02:00 will result in 00:30+01:00</source>
          <target state="translated">01:30+02:00から1時間を引くと00:30+01:00となります。</target>
        </trans-unit>
        <trans-unit id="84c6333d38406531a60e745087bcae1398a7a40e" translate="yes" xml:space="preserve">
          <source>Subtracting one hour from 02:30+01:00 will result in 01:30+02:00</source>
          <target state="translated">02:30+01:00から1時間を引くと01:30+02:00となります。</target>
        </trans-unit>
        <trans-unit id="1c25d96b63e11d9116beb454dcb44aeca0d7b520" translate="yes" xml:space="preserve">
          <source>Subtracting one hour from 02:30+01:00 will result in 02:30+02:00 (moving from winter to summer time)</source>
          <target state="translated">02:30+01:00から1時間引くと02:30+02:00になる(冬時間からサマータイムへの移行</target>
        </trans-unit>
        <trans-unit id="30a4e3795ee1a51382f621d0fa9fa6d1383de951" translate="yes" xml:space="preserve">
          <source>Subtracting one hour from 02:30+02:00 will result in 01:30+02:00 (both in summer time)</source>
          <target state="translated">02:30+02:00から1時間引くと01:30+02:00になります(どちらもサマータイムの場合</target>
        </trans-unit>
        <trans-unit id="87365abae3dd6e1f41cd78799da4c52075bf21f5" translate="yes" xml:space="preserve">
          <source>Subtracting one hour from 03:30+01:00 will result in 02:30+01:00 (both in winter time)</source>
          <target state="translated">03:30+01:00から1時間引くと02:30+01:00になります(どちらも冬時間)</target>
        </trans-unit>
        <trans-unit id="f0edb38ff77158958ade63e02003adbc1317f0f6" translate="yes" xml:space="preserve">
          <source>Subtracting three hours from 02:30+01:00 will result in 00:30+02:00</source>
          <target state="translated">02:30+01:00から3時間を引くと00:30+02:00となります。</target>
        </trans-unit>
        <trans-unit id="d30ec3273310f2faeb7e2a427c387a05b433047d" translate="yes" xml:space="preserve">
          <source>Subtracting three hours from 03:30+01:00 will result in 01:30+02:00 (moving from winter to summer time)</source>
          <target state="translated">03:30+01:00から3時間を引くと01:30+02:00になる(冬時間からサマータイムに移行</target>
        </trans-unit>
        <trans-unit id="7d66e0da6d0a2f07b17fa45596e31d6ea488de44" translate="yes" xml:space="preserve">
          <source>Subtracts the amount from the specified temporal object using the logic encapsulated in the implementing class.</source>
          <target state="translated">実装クラスでカプセル化されたロジックを使用して、指定されたテンポラリオブジェクトから金額を減算します。</target>
        </trans-unit>
        <trans-unit id="e2f73065b795e971bd23a0772f290f16af88aea8" translate="yes" xml:space="preserve">
          <source>Subtracts the shape of the specified &lt;code&gt;Area&lt;/code&gt; from the shape of this &lt;code&gt;Area&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Area&lt;/code&gt; 形状から、指定した &lt;code&gt;Area&lt;/code&gt; 形状を減算します。</target>
        </trans-unit>
        <trans-unit id="a6d5f77cdd6b08843b64716a21075e433b7f8ee6" translate="yes" xml:space="preserve">
          <source>Subtracts the shape of the specified &lt;code&gt;Area&lt;/code&gt; from the shape of this &lt;code&gt;Area&lt;/code&gt;. The resulting shape of this &lt;code&gt;Area&lt;/code&gt; will include areas that were contained only in this &lt;code&gt;Area&lt;/code&gt; and not in the specified &lt;code&gt;Area&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Area&lt;/code&gt; 形状から、指定した &lt;code&gt;Area&lt;/code&gt; 形状を減算します。結果として得られるこの &lt;code&gt;Area&lt;/code&gt; 形状には、このエリアにのみ含まれ、指定された &lt;code&gt;Area&lt;/code&gt; は含まれなかった &lt;code&gt;Area&lt;/code&gt; が含まれます。</target>
        </trans-unit>
        <trans-unit id="5edc60846df919545084e44d83ec925655e08a68" translate="yes" xml:space="preserve">
          <source>Subtracts this duration from the specified temporal object.</source>
          <target state="translated">指定されたテンポラリオブジェクトからこの期間を差し引きます。</target>
        </trans-unit>
        <trans-unit id="7dd8f626bbc88794f4df8d37f8d87242bf7f6a87" translate="yes" xml:space="preserve">
          <source>Subtracts this object from the specified temporal object.</source>
          <target state="translated">指定されたテンポラリオブジェクトからこのオブジェクトを減算します。</target>
        </trans-unit>
        <trans-unit id="8a80d2767631a8ccf73fca0ea15d38cd04975624" translate="yes" xml:space="preserve">
          <source>Subtracts this period from the specified temporal object.</source>
          <target state="translated">指定された時間オブジェクトからこの期間を減算します。</target>
        </trans-unit>
        <trans-unit id="5a0c7ff6f29aebb6c94d0bc835c2c9f5d7073a80" translate="yes" xml:space="preserve">
          <source>Subtype-specific subclass of Child without overriding collection methods</source>
          <target state="translated">コレクションメソッドをオーバーライドしない Child のサブタイプ固有のサブクラス</target>
        </trans-unit>
        <trans-unit id="43b67daddbe6fa55087211956f919c56be86db78" translate="yes" xml:space="preserve">
          <source>Successive executions of a periodic task scheduled via &lt;a href=&quot;#scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;scheduleAtFixedRate&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;scheduleWithFixedDelay&lt;/code&gt;&lt;/a&gt; do not overlap. While different executions may be performed by different threads, the effects of prior executions &lt;a href=&quot;package-summary#MemoryVisibility&quot;&gt;&lt;i&gt;happen-before&lt;/i&gt;&lt;/a&gt; those of subsequent ones.</source>
          <target state="translated">&lt;a href=&quot;#scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;scheduleAtFixedRate&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;scheduleWithFixedDelay&lt;/code&gt; &lt;/a&gt;を介してスケジュールされた定期的なタスクの連続実行は重複しません。異なるスレッドによって異なる実行が実行される場合がありますが、前の実行の影響は、後続の実行の影響よりも前に&lt;a href=&quot;package-summary#MemoryVisibility&quot;&gt;&lt;i&gt;発生し&lt;/i&gt;&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="947b882e8311e02eb0de90952b3d9af9e549f567" translate="yes" xml:space="preserve">
          <source>Successive executions of a task scheduled via &lt;code&gt;scheduleAtFixedRate&lt;/code&gt; or &lt;code&gt;scheduleWithFixedDelay&lt;/code&gt; do not overlap. While different executions may be performed by different threads, the effects of prior executions &lt;a href=&quot;package-summary#MemoryVisibility&quot;&gt;&lt;i&gt;happen-before&lt;/i&gt;&lt;/a&gt; those of subsequent ones.</source>
          <target state="translated">&lt;code&gt;scheduleAtFixedRate&lt;/code&gt; または &lt;code&gt;scheduleWithFixedDelay&lt;/code&gt; を介してスケジュールされたタスクの連続実行は重複しません。異なる実行は異なるスレッドによって実行される可能性がありますが、前の実行の影響は後続の実行の影響よりも前に&lt;a href=&quot;package-summary#MemoryVisibility&quot;&gt;&lt;i&gt;発生し&lt;/i&gt;&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="587f2c3038fa734e2fa35f44b80d24cb0a26ce24" translate="yes" xml:space="preserve">
          <source>Such a coordinate transformation can be represented by a 3 row by 3 column matrix with an implied last row of [ 0 0 1 ]. This matrix transforms source coordinates &lt;code&gt;(x,y)&lt;/code&gt; into destination coordinates &lt;code&gt;(x',y')&lt;/code&gt; by considering them to be a column vector and multiplying the coordinate vector by the matrix according to the following process:</source>
          <target state="translated">このような座標変換は、[0 01]の暗黙の最後の行を持つ3行3列の行列で表すことができます。この行列は、ソース座標 &lt;code&gt;(x,y)&lt;/code&gt; を宛先座標 &lt;code&gt;(x',y')&lt;/code&gt; 変換します。これは、それらを列ベクトルと見なし、次のプロセスに従って座標ベクトルに行列を乗算することによって行われます。</target>
        </trans-unit>
        <trans-unit id="58f64ec1aab3a3c8737e251f4f6c893b7f7e3753" translate="yes" xml:space="preserve">
          <source>Such a listener must:</source>
          <target state="translated">そのようなリスナーは必須です。</target>
        </trans-unit>
        <trans-unit id="03f287a097b7dc75ce21f7a6f8c938230118ecec" translate="yes" xml:space="preserve">
          <source>Such parameters are always instances of a &lt;a href=&quot;../function/package-summary&quot;&gt;functional interface&lt;/a&gt; such as &lt;a href=&quot;../function/function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;, and are often lambda expressions or method references. Unless otherwise specified these parameters must be &lt;em&gt;non-null&lt;/em&gt;.</source>
          <target state="translated">このようなパラメーターは常に&lt;a href=&quot;../function/function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;などの&lt;a href=&quot;../function/package-summary&quot;&gt;関数型インターフェースの&lt;/a&gt;インスタンスであり、多くの場合ラムダ式またはメソッド参照です。特に指定のない限り、これらのパラメーターは&lt;em&gt;null以外で&lt;/em&gt;なければなりません。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b0a816e6c5b76cebdeff15887a72e2308708043" translate="yes" xml:space="preserve">
          <source>Such sockets are normal stream sockets, but they add a layer of security protections over the underlying network transport protocol, such as TCP. Those protections include:</source>
          <target state="translated">このようなソケットは通常のストリームソケットですが、TCP のような基礎となるネットワークトランスポートプロトコルの上にセキュリティ保護の層を追加しています。これらの保護には次のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="2aa275941cc53d8450be59e5a592755a8cdad41f" translate="yes" xml:space="preserve">
          <source>Such values do not represent characters by themselves, but are used in the representation of &lt;a href=&quot;#supplementary&quot;&gt;supplementary characters&lt;/a&gt; in the UTF-16 encoding.</source>
          <target state="translated">このような値は、それ自体では文字を表しませんが、UTF-16エンコードの&lt;a href=&quot;#supplementary&quot;&gt;補助文字&lt;/a&gt;の表現で使用されます。</target>
        </trans-unit>
        <trans-unit id="970ce113276755b48ad1dd588c732810a67d9ca5" translate="yes" xml:space="preserve">
          <source>Sufficient</source>
          <target state="translated">Sufficient</target>
        </trans-unit>
        <trans-unit id="d4be52ff594c7cabc8afdc421b95e2aebd7563d7" translate="yes" xml:space="preserve">
          <source>Sufficient &lt;code&gt;LoginModule&lt;/code&gt;.</source>
          <target state="translated">十分な &lt;code&gt;LoginModule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a900bf8e66f07449e85d9371f6cc1b67f42aa542" translate="yes" xml:space="preserve">
          <source>Suites that require authentication information which is not available in this ServerSocket's authentication context will not be used in any case, even if they are enabled.</source>
          <target state="translated">このServerSocketの認証コンテキストで利用できない認証情報を必要とするスイートは、有効にしていてもどのような場合でも利用されません。</target>
        </trans-unit>
        <trans-unit id="624bf1a31a008f804af2efeb029b8d7de9597433" translate="yes" xml:space="preserve">
          <source>Sum, min, max, and average are all special cases of reduction. Summing a stream of numbers can be expressed as:</source>
          <target state="translated">Sum,min,max,and average はすべて削減の特殊なケースです。数の流れを合計すると次のように表すことができます。</target>
        </trans-unit>
        <trans-unit id="5c2e3d419ca5fbcca4a6b8576a6935870c5e9512" translate="yes" xml:space="preserve">
          <source>Sum, min, max, average, and string concatenation are all special cases of reduction. Summing a stream of numbers can be expressed as:</source>
          <target state="translated">Sum,min,max,average,string concatenation は、すべて削減の特殊なケースです。数の流れを合計すると次のように表現できます。</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="6af34d9f096a7e2bb5fe9f57e1dd43c1b56e464b" translate="yes" xml:space="preserve">
          <source>Summary of BlockingDeque methods</source>
          <target state="translated">BlockingDequeメソッドのまとめ</target>
        </trans-unit>
        <trans-unit id="dc33ce9b7bb6491fe2c18bd394e7434f7de0facd" translate="yes" xml:space="preserve">
          <source>Summary of BlockingQueue methods</source>
          <target state="translated">BlockingQueueのメソッドまとめ</target>
        </trans-unit>
        <trans-unit id="12f31f86c8b8020a2f524530d762d52b24cc2c84" translate="yes" xml:space="preserve">
          <source>Summary of Deque methods</source>
          <target state="translated">デキる方法のまとめ</target>
        </trans-unit>
        <trans-unit id="41d15294c0ee0534e9dfa303d27b58e1e71feccd" translate="yes" xml:space="preserve">
          <source>Summary of Queue methods</source>
          <target state="translated">キューメソッドのまとめ</target>
        </trans-unit>
        <trans-unit id="478a6934b4085d9b85cf406e70a6c41071589a9c" translate="yes" xml:space="preserve">
          <source>Summary of attributes</source>
          <target state="translated">属性の概要</target>
        </trans-unit>
        <trans-unit id="b89b4a32eae4e939f3424709e2860975861e1c2e" translate="yes" xml:space="preserve">
          <source>Summary of charsets, decoders, and encoders in this package</source>
          <target state="translated">本パッケージに含まれる文字セット、デコーダ、エンコーダの概要</target>
        </trans-unit>
        <trans-unit id="94beff6cf1822c788fda7e9676bc44ba3c684c64" translate="yes" xml:space="preserve">
          <source>Summary of regular-expression constructs</source>
          <target state="translated">正規表現構成のまとめ</target>
        </trans-unit>
        <trans-unit id="33dad14d804e0aadb71b5df959efbce33c95a645" translate="yes" xml:space="preserve">
          <source>Summary of relevant Java Virtual Machine changes</source>
          <target state="translated">関連するJava仮想マシンの変更点の概要</target>
        </trans-unit>
        <trans-unit id="526edd2c81b2028ce505004af7c4b33b31e031e5" translate="yes" xml:space="preserve">
          <source>Summary of task execution methods</source>
          <target state="translated">タスク実行方法のまとめ</target>
        </trans-unit>
        <trans-unit id="48c98cab7866e606328c99289ed24e339393b5ab" translate="yes" xml:space="preserve">
          <source>Sun</source>
          <target state="translated">Sun</target>
        </trans-unit>
        <trans-unit id="4dc596dad3c8df0cb83f8e2142d0ac24e292b1c3" translate="yes" xml:space="preserve">
          <source>SunOS/sparc/5.7/lib/libstat.so</source>
          <target state="translated">SunOS/sparc/5.7/lib/libstat.so</target>
        </trans-unit>
        <trans-unit id="bc5dd045b8623ddfc4bd0bce98ca5fda42accf88" translate="yes" xml:space="preserve">
          <source>Sunday</source>
          <target state="translated">Sunday</target>
        </trans-unit>
        <trans-unit id="30b8f7a97ea4a56b70e05b418af44ae218f2ce5e" translate="yes" xml:space="preserve">
          <source>Superclass of all exceptions specific to Object Stream classes.</source>
          <target state="translated">オブジェクトストリームクラスに固有のすべての例外のスーパークラス。</target>
        </trans-unit>
        <trans-unit id="2105b4be122191e92326842a0fe9fa372bc40c29" translate="yes" xml:space="preserve">
          <source>Superclass of every connector server.</source>
          <target state="translated">すべてのコネクタサーバのスーパークラス。</target>
        </trans-unit>
        <trans-unit id="58766473e6991f76c655364f528b245895c09fb0" translate="yes" xml:space="preserve">
          <source>Superclass of every connector server. A connector server is attached to an MBean server. It listens for client connection requests and creates a connection for each one.</source>
          <target state="translated">各コネクタ・サーバのスーパークラス。コネクタサーバは MBean サーバに接続されています。クライアントからの接続要求を待ち受け、それぞれの接続を作成します。</target>
        </trans-unit>
        <trans-unit id="658fc942a3fa9e70b52372d6bd1f54875a888f86" translate="yes" xml:space="preserve">
          <source>Superclass of exceptions which indicate that an unknown kind of entity was encountered.</source>
          <target state="translated">未知の種類のエンティティが発生したことを示す例外のスーパークラス。</target>
        </trans-unit>
        <trans-unit id="75265bf56f793ae948b1ed4b2364dad7b246da23" translate="yes" xml:space="preserve">
          <source>Superclass of exceptions which indicate that an unknown kind of entity was encountered. This situation can occur if the language evolves and new kinds of constructs are introduced. Subclasses of this exception may be thrown by visitors to indicate that the visitor was created for a prior version of the language.</source>
          <target state="translated">未知の種類の実体に遭遇したことを示す例外のスーパークラス。この状況は、言語が進化して新しい種類の構成要素が導入された場合に発生する可能性があります。この例外のサブクラスは、訪問者がその訪問者が以前のバージョンの言語用に作成されたことを示すために、訪問者によって投げられることがあります。</target>
        </trans-unit>
        <trans-unit id="0a76ddfc1661c7790ef02bb80eaa7f48eb388239" translate="yes" xml:space="preserve">
          <source>Superclass paints background in an uncontrollable way (i.e. one might want an image tiled into the background).</source>
          <target state="translated">スーパークラスは、制御できない方法で背景を描きます(つまり、背景にタイル状の画像が欲しいと思うかもしれません)。</target>
        </trans-unit>
        <trans-unit id="e5f81df64f8955f4f44374c3e4ab2e305b8b8ff8" translate="yes" xml:space="preserve">
          <source>Superclass paints background in an uncontrollable way (i.e. one might want an image tiled into the background). To prevent this from happening twice, this method is reimplemented to simply paint.</source>
          <target state="translated">Superclassは制御不能な方法で背景を描きます(例えば、画像を背景にタイル状にしたい場合があります)。これを防ぐために、このメソッドは単純にペイントするように再実装されています。</target>
        </trans-unit>
        <trans-unit id="cea3f59bbd44c8af3d3eb78a6c20a18068160d6f" translate="yes" xml:space="preserve">
          <source>Superscript</source>
          <target state="translated">Superscript</target>
        </trans-unit>
        <trans-unit id="55edd462872a4ecd0aa258d3ceb013247715e2e5" translate="yes" xml:space="preserve">
          <source>Supplier</source>
          <target state="translated">Supplier</target>
        </trans-unit>
        <trans-unit id="e80f595f391be5553968c0d495ed1444652834ee" translate="yes" xml:space="preserve">
          <source>Supplier.get()</source>
          <target state="translated">Supplier.get()</target>
        </trans-unit>
        <trans-unit id="17c4155939f2889e1a1a1a3cd2b9637b64edc384" translate="yes" xml:space="preserve">
          <source>Supplies a &lt;code&gt;BufferedImage&lt;/code&gt; to be used as the destination for decoded pixel data.</source>
          <target state="translated">デコードされたピクセルデータの宛先として使用される &lt;code&gt;BufferedImage&lt;/code&gt; を提供します。</target>
        </trans-unit>
        <trans-unit id="fbaeba0437a857acd694564d5180b5f2b2f5c729" translate="yes" xml:space="preserve">
          <source>Supplies a &lt;code&gt;BufferedImage&lt;/code&gt; to be used as the destination for decoded pixel data. The currently set image will be written to by the &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;readAll&lt;/code&gt;, and &lt;code&gt;readRaster&lt;/code&gt; methods, and a reference to it will be returned by those methods.</source>
          <target state="translated">デコードされたピクセルデータの宛先として使用される &lt;code&gt;BufferedImage&lt;/code&gt; を提供します。現在設定されているイメージは、 &lt;code&gt;read&lt;/code&gt; 、 &lt;code&gt;readAll&lt;/code&gt; 、および &lt;code&gt;readRaster&lt;/code&gt; メソッドによって書き込まれ、それらへの参照はこれらのメソッドによって返されます。</target>
        </trans-unit>
        <trans-unit id="e1b6535a24aee7dabe26ec85a8209e46d82a048d" translate="yes" xml:space="preserve">
          <source>Supplies abstract classes for service providers to subclass when offering new audio devices, sound file readers and writers, or audio format converters.</source>
          <target state="translated">新しいオーディオデバイス、サウンドファイルリーダやライタ、オーディオフォーマットコンバータを提供する際に、サービスプロバイダがサブクラス化するための抽象クラスを提供します。</target>
        </trans-unit>
        <trans-unit id="74f8b3a70396c3360c770c449a7050682390cdc3" translate="yes" xml:space="preserve">
          <source>Supplies an &lt;a href=&quot;authenticator&quot;&gt;&lt;code&gt;Authenticator&lt;/code&gt;&lt;/a&gt; to be used when authentication is requested through the HTTP protocol for this &lt;code&gt;HttpURLConnection&lt;/code&gt;.</source>
          <target state="translated">サプライ&lt;a href=&quot;authenticator&quot;&gt; &lt;code&gt;Authenticator&lt;/code&gt; &lt;/a&gt;認証は、このためのHTTPプロトコルを介して要求されたときに使用する &lt;code&gt;HttpURLConnection&lt;/code&gt; の。</target>
        </trans-unit>
        <trans-unit id="c236e0cf0a0413f456b3ccec5c5c5f7c0a94113e" translate="yes" xml:space="preserve">
          <source>Supplies an &lt;a href=&quot;authenticator&quot;&gt;&lt;code&gt;Authenticator&lt;/code&gt;&lt;/a&gt; to be used when authentication is requested through the HTTP protocol for this &lt;code&gt;HttpURLConnection&lt;/code&gt;. If no authenticator is supplied, the &lt;a href=&quot;authenticator#setDefault(java.net.Authenticator)&quot;&gt;default authenticator&lt;/a&gt; will be used.</source>
          <target state="translated">サプライ&lt;a href=&quot;authenticator&quot;&gt; &lt;code&gt;Authenticator&lt;/code&gt; &lt;/a&gt;認証は、このためのHTTPプロトコルを介して要求されたときに使用する &lt;code&gt;HttpURLConnection&lt;/code&gt; の。オーセンティケーターが指定されていない場合は、&lt;a href=&quot;authenticator#setDefault(java.net.Authenticator)&quot;&gt;デフォルトのオーセンティ&lt;/a&gt;ケーターが使用されます。</target>
        </trans-unit>
        <trans-unit id="4964ab63a328b176cc421791e8add938af291407" translate="yes" xml:space="preserve">
          <source>Supplies interfaces for service providers to implement when offering new MIDI devices, MIDI file readers and writers, or sound bank readers.</source>
          <target state="translated">サービスプロバイダが新しいMIDIデバイス、MIDIファイルリーダとライタ、サウンドバンクリーダを提供する際に実装するためのインターフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="88d35c5c1ef9ec651fa38deb3a87f59afd8af3fb" translate="yes" xml:space="preserve">
          <source>Supplying a &lt;code&gt;null&lt;/code&gt; list of bindings (&lt;code&gt;keys&lt;/code&gt;) does not change &lt;code&gt;retMap&lt;/code&gt; in any way.</source>
          <target state="translated">供給 &lt;code&gt;null&lt;/code&gt; バインディング（のリスト &lt;code&gt;keys&lt;/code&gt; ）変更されません &lt;code&gt;retMap&lt;/code&gt; をどのような方法で。</target>
        </trans-unit>
        <trans-unit id="6623041375d573201033508eb61a7bd2e9f07d92" translate="yes" xml:space="preserve">
          <source>Supplying a &lt;code&gt;null&lt;/code&gt; value for either the &lt;code&gt;key&lt;/code&gt; or &lt;code&gt;action&lt;/code&gt; part of the &lt;code&gt;key-action&lt;/code&gt; pair results in creating a &lt;code&gt;KeyBinding&lt;/code&gt; with the corresponding value &lt;code&gt;null&lt;/code&gt;. As other parts of Swing's expect &lt;code&gt;non-null&lt;/code&gt; values in a &lt;code&gt;KeyBinding&lt;/code&gt;, you should avoid supplying &lt;code&gt;null&lt;/code&gt; as either the &lt;code&gt;key&lt;/code&gt; or &lt;code&gt;action&lt;/code&gt; part of the &lt;code&gt;key-action&lt;/code&gt; pair.</source>
          <target state="translated">供給 &lt;code&gt;null&lt;/code&gt; のいずれかの値 &lt;code&gt;key&lt;/code&gt; または &lt;code&gt;action&lt;/code&gt; の一部 &lt;code&gt;key-action&lt;/code&gt; 作成におけるペア結果 &lt;code&gt;KeyBinding&lt;/code&gt; 対応する値を有する &lt;code&gt;null&lt;/code&gt; 。Swingの他の部分は &lt;code&gt;KeyBinding&lt;/code&gt; で &lt;code&gt;non-null&lt;/code&gt; 値を予期するため、 &lt;code&gt;key&lt;/code&gt; または &lt;code&gt;key-action&lt;/code&gt; ペアの &lt;code&gt;action&lt;/code&gt; 部分として &lt;code&gt;null&lt;/code&gt; を指定することは避けてください。</target>
        </trans-unit>
        <trans-unit id="5ee91d5c47f936cc8cad09d90fc1e846f41d176e" translate="yes" xml:space="preserve">
          <source>Supplying the map of text provides considerable flexibility in formatting and parsing. For example, a legacy application might require or supply the months of the year as &quot;JNY&quot;, &quot;FBY&quot;, &quot;MCH&quot; etc. These do not match the standard set of text for localized month names. Using this method, a map can be created which defines the connection between each value and the text:</source>
          <target state="translated">テキストのマップを提供することで、フォーマットや解析にかなりの柔軟性が得られます。例えば、レガシーアプリケーションでは、年の月を「JNY」、「FBY」、「MCH」などと要求したり、提供したりするかもしれません。これらは、ローカライズされた月名の標準テキスト セットとは一致しません。この方法を使用して、各値とテキストの間の接続を定義するマップを作成することができます。</target>
        </trans-unit>
        <trans-unit id="3ae9650eee579a99847415238fe65b535cbe570b" translate="yes" xml:space="preserve">
          <source>Supplying the name of the implementation to the constructor</source>
          <target state="translated">コンストラクタに実装名を与える</target>
        </trans-unit>
        <trans-unit id="10167bfa4b38ff4cb0458761922ab478aec9f6c2" translate="yes" xml:space="preserve">
          <source>Support added for accessing a SQL ROWID</source>
          <target state="translated">SQL ROWIDへのアクセスをサポートしました。</target>
        </trans-unit>
        <trans-unit id="28afc81b896c8866888b58fdb4b86b1d909e8478" translate="yes" xml:space="preserve">
          <source>Support added for the SQL:2003 XML data type</source>
          <target state="translated">SQL:2003 XML データ型のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="8bbd39a417e74026012a975695eef61b4e61054e" translate="yes" xml:space="preserve">
          <source>Support added to &lt;code&gt;CallableStatement&lt;/code&gt; and &lt;code&gt;ResultSet&lt;/code&gt; to specify the Java type to convert to via the &lt;code&gt;getObject&lt;/code&gt; method</source>
          <target state="translated">&lt;code&gt;getObject&lt;/code&gt; メソッドを介して変換するJavaタイプを指定するために、 &lt;code&gt;CallableStatement&lt;/code&gt; および &lt;code&gt;ResultSet&lt;/code&gt; にサポートが追加されました</target>
        </trans-unit>
        <trans-unit id="be83c95bfed888ec9d1861c466bb89d960a42356" translate="yes" xml:space="preserve">
          <source>Support added to allow a JDBC application to access an instance of a JDBC resource that has been wrapped by a vendor, usually in an application server or connection pooling environment.</source>
          <target state="translated">通常はアプリケーションサーバや接続プーリング環境で、ベンダーによってラップされたJDBCリソースのインスタンスにJDBCアプリケーションがアクセスできるようにするためのサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="aee5ac09f895cea03c50195ea138c5853a9ac9c4" translate="yes" xml:space="preserve">
          <source>Support editing</source>
          <target state="translated">サポート編集</target>
        </trans-unit>
        <trans-unit id="87755e015b55a92c2723ad4a6626c47112498885" translate="yes" xml:space="preserve">
          <source>Support for &lt;code&gt;REF CURSORS&lt;/code&gt; in &lt;code&gt;CallableStatement&lt;/code&gt;</source>
          <target state="translated">サポート &lt;code&gt;REF CURSORS&lt;/code&gt; 内 &lt;code&gt;CallableStatement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68e0ae7b637df1baf64c7abe86a77cd275d28728" translate="yes" xml:space="preserve">
          <source>Support for accessibility. &lt;code&gt;JComponent&lt;/code&gt; contains all of the methods in the &lt;code&gt;Accessible&lt;/code&gt; interface, but it doesn't actually implement the interface. That is the responsibility of the individual classes that extend &lt;code&gt;JComponent&lt;/code&gt;.</source>
          <target state="translated">アクセシビリティのサポート。 &lt;code&gt;JComponent&lt;/code&gt; には、 &lt;code&gt;Accessible&lt;/code&gt; インターフェースのすべてのメソッドが含まれていますが、実際にはインターフェースを実装していません。これは、 &lt;code&gt;JComponent&lt;/code&gt; を拡張する個々のクラスの責任です。</target>
        </trans-unit>
        <trans-unit id="3f738b4cc6dfad80ca3bf6b80f9316ffe802f2e0" translate="yes" xml:space="preserve">
          <source>Support for alpha component.</source>
          <target state="translated">αコンポーネントをサポートしています。</target>
        </trans-unit>
        <trans-unit id="f1b6da1d961ca6dd7460337f7d3f91a895bac1ef" translate="yes" xml:space="preserve">
          <source>Support for an edit history mechanism is provided to allow undo/redo operations. The text component does not itself provide the history buffer by default, but does provide the &lt;code&gt;UndoableEdit&lt;/code&gt; records that can be used in conjunction with a history buffer to provide the undo/redo support. The support is provided by the Document model, which allows one to attach UndoableEditListener implementations.</source>
          <target state="translated">元に戻す/やり直し操作を可能にするために、編集履歴メカニズムのサポートが提供されます。テキストコンポーネント自体はデフォルトで履歴バッファを提供しませんが、履歴バッファと組み合わせて使用​​して元に戻す/やり直しのサポートを提供できる &lt;code&gt;UndoableEdit&lt;/code&gt; レコードを提供します。このサポートは、UndoableEditListener実装をアタッチできるドキュメントモデルによって提供されます。</target>
        </trans-unit>
        <trans-unit id="1e2df63eb2b2488cb6b4acb7f2a78969e9401b27" translate="yes" xml:space="preserve">
          <source>Support for component-specific properties. With the &lt;a href=&quot;#putClientProperty(java.lang.Object,java.lang.Object)&quot;&gt;&lt;code&gt;putClientProperty(java.lang.Object, java.lang.Object)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getClientProperty(java.lang.Object)&quot;&gt;&lt;code&gt;getClientProperty(java.lang.Object)&lt;/code&gt;&lt;/a&gt; methods, you can associate name-object pairs with any object that descends from &lt;code&gt;JComponent&lt;/code&gt;.</source>
          <target state="translated">コンポーネント固有のプロパティのサポート。&lt;a href=&quot;#putClientProperty(java.lang.Object,java.lang.Object)&quot;&gt; &lt;code&gt;putClientProperty(java.lang.Object, java.lang.Object)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#getClientProperty(java.lang.Object)&quot;&gt; &lt;code&gt;getClientProperty(java.lang.Object)&lt;/code&gt; メソッド&lt;/a&gt;のメソッド、あなたがから派生する任意のオブジェクトで名前とオブジェクトのペアを関連付けることができます &lt;code&gt;JComponent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7c24e4e7ecba23b85c1ccbc1c591ec268d40646" translate="yes" xml:space="preserve">
          <source>Support for defining the visual characteristics of HTML views being rendered.</source>
          <target state="translated">レンダリングされるHTMLビューの視覚的特性を定義するためのサポート。</target>
        </trans-unit>
        <trans-unit id="73b73f46580d53e6bc4b08f9c7550c284de5eeba" translate="yes" xml:space="preserve">
          <source>Support for defining the visual characteristics of HTML views being rendered. The StyleSheet is used to translate the HTML model into visual characteristics. This enables views to be customized by a look-and-feel, multiple views over the same model can be rendered differently, etc. This can be thought of as a CSS rule repository. The key for CSS attributes is an object of type CSS.Attribute. The type of the value is up to the StyleSheet implementation, but the &lt;code&gt;toString&lt;/code&gt; method is required to return a string representation of CSS value.</source>
          <target state="translated">レンダリングされるHTMLビューの視覚的特性を定義するためのサポート。StyleSheetは、HTMLモデルを視覚的特性に変換するために使用されます。これにより、ビューをルックアンドフィールでカスタマイズしたり、同じモデル上の複数のビューを異なる方法でレンダリングしたりできます。これは、CSSルールリポジトリと考えることができます。CSS属性のキーは、CSS.Attributeタイプのオブジェクトです。値のタイプはStyleSheetの実装次第ですが、CSS値の文字列表現を返すには &lt;code&gt;toString&lt;/code&gt; メソッドが必要です。</target>
        </trans-unit>
        <trans-unit id="b74ecf9d3e965c05b20ef7416f808578e9d3833a" translate="yes" xml:space="preserve">
          <source>Support for encryption includes symmetric, asymmetric, block, and stream ciphers. This package also supports secure streams and sealed objects.</source>
          <target state="translated">暗号化のサポートには、対称暗号、非対称暗号、ブロック暗号、ストリーム暗号があります。また、本パッケージはセキュアストリームとシールドオブジェクトもサポートしています。</target>
        </trans-unit>
        <trans-unit id="6b4de6439fc6a0c6bbf026fe637bc1786359f491" translate="yes" xml:space="preserve">
          <source>Support for new charsets can be made available via the interface defined in the &lt;a href=&quot;spi/charsetprovider&quot;&gt;&lt;code&gt;CharsetProvider&lt;/code&gt;&lt;/a&gt; class in the &lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.nio.charset.spi&lt;/code&gt;&lt;/a&gt; package.</source>
          <target state="translated">新しい文字セットのサポートは、&lt;a href=&quot;spi/package-summary&quot;&gt; &lt;code&gt;java.nio.charset.spi&lt;/code&gt; &lt;/a&gt;パッケージの&lt;a href=&quot;spi/charsetprovider&quot;&gt; &lt;code&gt;CharsetProvider&lt;/code&gt; &lt;/a&gt;クラスで定義されたインターフェースを介して利用可能にすることができます。</target>
        </trans-unit>
        <trans-unit id="653f7ec9a51162eac75a3abf19394f78bda242bf" translate="yes" xml:space="preserve">
          <source>Support for new charsets can be made available via the interface defined in the &lt;a href=&quot;spi/charsetprovider&quot;&gt;&lt;code&gt;CharsetProvider&lt;/code&gt;&lt;/a&gt; class in the &lt;code&gt;&lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.nio.charset.spi&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; package.</source>
          <target state="translated">新しい文字セットのサポートは、 &lt;code&gt;&lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.nio.charset.spi&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; パッケージの&lt;a href=&quot;spi/charsetprovider&quot;&gt; &lt;code&gt;CharsetProvider&lt;/code&gt; &lt;/a&gt;クラスで定義されたインターフェースを介して利用できます。</target>
        </trans-unit>
        <trans-unit id="8b49c6b9c42ce71bbb6056fe62561160ad23769e" translate="yes" xml:space="preserve">
          <source>Support for obtaining the parent logger for a &lt;code&gt;Driver&lt;/code&gt;, &lt;code&gt;DataSource&lt;/code&gt;, &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; and &lt;code&gt;XADataSource&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Driver&lt;/code&gt; 、 &lt;code&gt;DataSource&lt;/code&gt; 、 &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; 、および &lt;code&gt;XADataSource&lt;/code&gt; の親ロガーの取得のサポート</target>
        </trans-unit>
        <trans-unit id="16ec37a74a1995b00d337b676e88fdb0552c77b4" translate="yes" xml:space="preserve">
          <source>Support for providing html views for the swing components.</source>
          <target state="translated">スイングコンポーネントのhtmlビューを提供するためのサポート。</target>
        </trans-unit>
        <trans-unit id="2bd907b6ea6f563ed9b3bdc8fc9f3e1666d24aae" translate="yes" xml:space="preserve">
          <source>Support for providing html views for the swing components. This translates a simple html string to a javax.swing.text.View implementation that can render the html and provide the necessary layout semantics.</source>
          <target state="translated">スイングコンポーネントにhtmlビューを提供するためのサポート。これは、単純なhtml文字列をjavax.swing.text.Viewの実装に変換し、htmlをレンダリングし、必要なレイアウトセマンティクスを提供します。</target>
        </trans-unit>
        <trans-unit id="1528bd6433144b189b0ef233ec142fa4597ee42a" translate="yes" xml:space="preserve">
          <source>Support for reporting bound property changes for Object properties.</source>
          <target state="translated">Objectプロパティのバウンドプロパティ変更のレポートをサポート。</target>
        </trans-unit>
        <trans-unit id="14bb14b2d115ed37f58b096d54c3fa98a34e2923" translate="yes" xml:space="preserve">
          <source>Support for reporting bound property changes for Object properties. This method can be called when a bound property has changed and it will send the appropriate PropertyChangeEvent to any registered PropertyChangeListeners.</source>
          <target state="translated">Object プロパティのバインドされたプロパティの変更を報告するためのサポート。このメソッドは、バインドされたプロパティが変更されたときに呼び出すことができ、登録されている任意の PropertyChangeListeners に適切な PropertyChangeEvent を送信します。</target>
        </trans-unit>
        <trans-unit id="55827c8687341e063958670fa74f3e7b9f860b30" translate="yes" xml:space="preserve">
          <source>Support for reporting bound property changes for boolean properties.</source>
          <target state="translated">ブール値プロパティのバウンドプロパティ変更の報告をサポートしました。</target>
        </trans-unit>
        <trans-unit id="5cf42c379efa167330cf8121949f4b616d7af183" translate="yes" xml:space="preserve">
          <source>Support for reporting bound property changes for boolean properties. This method can be called when a bound property has changed and it will send the appropriate PropertyChangeEvent to any registered PropertyChangeListeners.</source>
          <target state="translated">ブール値プロパティのバインドされたプロパティの変更を報告するためのサポート。このメソッドは、バインドされたプロパティが変更されたときに呼び出すことができ、登録された任意のPropertyChangeListenersに適切なPropertyChangeEventを送信します。</target>
        </trans-unit>
        <trans-unit id="f1909e784e1a370cf30f7ad60c8b81e6c6e03008" translate="yes" xml:space="preserve">
          <source>Support for reporting bound property changes for integer properties.</source>
          <target state="translated">整数プロパティのバウンドプロパティ変更の報告をサポートします。</target>
        </trans-unit>
        <trans-unit id="b3f321c2e3f73faa040c1200e9cbbe56e8d22379" translate="yes" xml:space="preserve">
          <source>Support for reporting bound property changes for integer properties. This method can be called when a bound property has changed and it will send the appropriate PropertyChangeEvent to any registered PropertyChangeListeners.</source>
          <target state="translated">整数プロパティのバインドされたプロパティの変更を報告するためのサポート。このメソッドは、バインドされたプロパティが変更されたときに呼び出すことができ、登録されている任意の PropertyChangeListeners に適切な PropertyChangeEvent を送信します。</target>
        </trans-unit>
        <trans-unit id="42d3c47b62324ce4a645e45a9d0a48d2de98a341" translate="yes" xml:space="preserve">
          <source>Support for reporting bound property changes.</source>
          <target state="translated">バインドプロパティの変更報告をサポートします。</target>
        </trans-unit>
        <trans-unit id="cd6de82ec9ad58b47bce4d4b1b5e0d8a05de816d" translate="yes" xml:space="preserve">
          <source>Support for reporting bound property changes. If &lt;code&gt;oldValue&lt;/code&gt; and &lt;code&gt;newValue&lt;/code&gt; are not equal and the &lt;code&gt;PropertyChangeEvent&lt;/code&gt; listener list is not empty, then fire a &lt;code&gt;PropertyChange&lt;/code&gt; event to each listener. In general, this is for use by the &lt;code&gt;Accessible&lt;/code&gt; objects themselves and should not be called by an application program.</source>
          <target state="translated">バインドされたプロパティの変更のレポートのサポート。場合 &lt;code&gt;oldValue&lt;/code&gt; と &lt;code&gt;newValue&lt;/code&gt; が等しくないと &lt;code&gt;PropertyChangeEvent&lt;/code&gt; リスナーリストが空でない場合、火災 &lt;code&gt;PropertyChange&lt;/code&gt; 各リスナーにイベントを。一般に、これは &lt;code&gt;Accessible&lt;/code&gt; オブジェクト自体が使用するためのものであり、アプリケーションプログラムによって呼び出されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="854dbddd3693cbaade177e38fcdc707ce03f6b32" translate="yes" xml:space="preserve">
          <source>Support for reporting bound property changes. If oldValue and newValue are not equal and the &lt;code&gt;PropertyChangeEvent&lt;/code&gt;x listener list isn't empty, then fire a &lt;code&gt;PropertyChange&lt;/code&gt; event to each listener.</source>
          <target state="translated">バインドされたプロパティの変更のレポートのサポート。oldValueとnewValueが等しくなく、 &lt;code&gt;PropertyChangeEvent&lt;/code&gt; xリスナーリストが空でない場合は、各リスナーに対して &lt;code&gt;PropertyChange&lt;/code&gt; イベントを発生させます。</target>
        </trans-unit>
        <trans-unit id="7e4ee02eb9dbebe7acdbe5c4277e2da9b235809b" translate="yes" xml:space="preserve">
          <source>Support for the above doc flavors is desirable so a printing client can rely on being able to print on any JPS printer, regardless of which doc flavors the printer supports. If the printer doesn't support the client's preferred doc flavor, the client can at least print plain text, or the client can convert its data to a renderable image and print the image.</source>
          <target state="translated">上記のdocフレーバーのサポートは、印刷クライアントがプリンタがどのdocフレーバーをサポートしているかに関わらず、どのJPSプリンタでも印刷できることを信頼できるようにするために望ましい。プリンタがクライアントの好ましいdocフレーバーをサポートしていない場合、クライアントは少なくともプレーンテキストを印刷することができ、またはクライアントはそのデータをレンダリング可能な画像に変換して画像を印刷することができる。</target>
        </trans-unit>
        <trans-unit id="98fc58eb24fd0176febc97d5b48a43409afa541f" translate="yes" xml:space="preserve">
          <source>Support for the default values of the &lt;em&gt;namespaces&lt;/em&gt; and &lt;em&gt;namespace-prefixes&lt;/em&gt; properties is required. Support for any other feature flags is entirely optional.</source>
          <target state="translated">&lt;em&gt;名前空間&lt;/em&gt;および&lt;em&gt;名前空間プレフィックス&lt;/em&gt;プロパティのデフォルト値のサポートが必要です。その他の機能フラグのサポートは完全にオプションです。</target>
        </trans-unit>
        <trans-unit id="e45e2d427fc9c0f3fceabb4df0211172909cd8b1" translate="yes" xml:space="preserve">
          <source>Support for time-zones and their rules.</source>
          <target state="translated">タイムゾーンとそのルールをサポートします。</target>
        </trans-unit>
        <trans-unit id="c3b9d8394fb093f808d8cd4f422113fe0b6a345e" translate="yes" xml:space="preserve">
          <source>Support for tool tips -- short descriptions that pop up when the cursor lingers over a component. See &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tooltip.html&quot;&gt;How to Use Tool Tips&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt; for more information.</source>
          <target state="translated">ツールチップのサポート-カーソルがコンポーネントの上にとどまるときにポップアップする短い説明。詳細については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tooltip.html&quot;&gt;ツールチップの使用方法を&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b8a956130819c9eb3e79cd471dff15fc8dc8ae33" translate="yes" xml:space="preserve">
          <source>Supported Action properties</source>
          <target state="translated">サポートされているアクションプロパティ</target>
        </trans-unit>
        <trans-unit id="4c73a180c6f3881c7deae097116863b177b540d6" translate="yes" xml:space="preserve">
          <source>Supported attributes</source>
          <target state="translated">サポートされている属性</target>
        </trans-unit>
        <trans-unit id="0052c6da5e1f2e0c3c72b88783ebaee75408fbbd" translate="yes" xml:space="preserve">
          <source>Supported operations include:</source>
          <target state="translated">サポートされている業務には以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="8b716436fbb1170338f619d618ffd6a0e138d23c" translate="yes" xml:space="preserve">
          <source>Supported-Values Attributes</source>
          <target state="translated">サポートされている値属性</target>
        </trans-unit>
        <trans-unit id="df6b4d8151d58b09aee2d1baef5d0937c6389678" translate="yes" xml:space="preserve">
          <source>SupportedAnnotationTypeString:</source>
          <target state="translated">SupportedAnnotationTypeString:</target>
        </trans-unit>
        <trans-unit id="a0bce1487df715f0c60cadcb502719db230f4c97" translate="yes" xml:space="preserve">
          <source>SupportedAnnotationTypes</source>
          <target state="translated">SupportedAnnotationTypes</target>
        </trans-unit>
        <trans-unit id="b86a87e3475fe7eadc7d2531d5505ced8c43bc43" translate="yes" xml:space="preserve">
          <source>SupportedAnnotationTypes.value</source>
          <target state="translated">SupportedAnnotationTypes.value</target>
        </trans-unit>
        <trans-unit id="91438072db1d228949a8bf0e5ec6c82e40c085d4" translate="yes" xml:space="preserve">
          <source>SupportedOptionString:</source>
          <target state="translated">SupportedOptionString:</target>
        </trans-unit>
        <trans-unit id="45af5f8c58516133023fa84cf402ae9883f2a6cf" translate="yes" xml:space="preserve">
          <source>SupportedOptions</source>
          <target state="translated">SupportedOptions</target>
        </trans-unit>
        <trans-unit id="b1716b3e0d94170c6c3ba24c49faa612bbd69348" translate="yes" xml:space="preserve">
          <source>SupportedOptions.value</source>
          <target state="translated">SupportedOptions.value</target>
        </trans-unit>
        <trans-unit id="6830a26c04c075f9371bf3855d577adba396748a" translate="yes" xml:space="preserve">
          <source>SupportedSourceVersion</source>
          <target state="translated">SupportedSourceVersion</target>
        </trans-unit>
        <trans-unit id="3b67a146cb73ff83598202ee4df377ac8ef17b7a" translate="yes" xml:space="preserve">
          <source>SupportedSourceVersion.value</source>
          <target state="translated">SupportedSourceVersion.value</target>
        </trans-unit>
        <trans-unit id="639ad50aa5ee5c5740a923b84056afceced5fec0" translate="yes" xml:space="preserve">
          <source>SupportedValuesAttribute</source>
          <target state="translated">SupportedValuesAttribute</target>
        </trans-unit>
        <trans-unit id="e30850c4cf4d8aa6a805aaed31afcd5743779389" translate="yes" xml:space="preserve">
          <source>Supporting classes that the agent arranges to be loaded by the bootstrap class loader (by means of &lt;a href=&quot;instrumentation#appendToBootstrapClassLoaderSearch(java.util.jar.JarFile)&quot;&gt;&lt;code&gt;appendToBootstrapClassLoaderSearch&lt;/code&gt;&lt;/a&gt; or the &lt;code&gt;Boot-Class-Path&lt;/code&gt; attribute specified below), must link only to classes defined to the bootstrap class loader. There is no guarantee that all platform classes can be defined by the boot class loader.</source>
          <target state="translated">エージェントがブートストラップクラスローダーによってロードされるように手配するサポートクラス（&lt;a href=&quot;instrumentation#appendToBootstrapClassLoaderSearch(java.util.jar.JarFile)&quot;&gt; &lt;code&gt;appendToBootstrapClassLoaderSearch&lt;/code&gt; &lt;/a&gt;または以下に指定された &lt;code&gt;Boot-Class-Path&lt;/code&gt; 属性を使用）は、ブートストラップクラスローダーに定義されたクラスにのみリンクする必要があります。すべてのプラットフォームクラスがブートクラスローダーによって定義できるという保証はありません。</target>
        </trans-unit>
        <trans-unit id="5a3dbaf4ac457bdb6e62c1faa252c541e7b5c369" translate="yes" xml:space="preserve">
          <source>Supporting permission and exception classes</source>
          <target state="translated">パーミッションクラスと例外クラスのサポート</target>
        </trans-unit>
        <trans-unit id="4e62d896ce9c57c2099653ded558d9c1c2b00d30" translate="yes" xml:space="preserve">
          <source>Supports asynchronous I/O operations.</source>
          <target state="translated">非同期I/O操作をサポートしています。</target>
        </trans-unit>
        <trans-unit id="c03c1bc4a0231cf70789ac599badfc67a8014ff8" translate="yes" xml:space="preserve">
          <source>Supports deferred automatic layout.</source>
          <target state="translated">遅延自動レイアウトに対応しています。</target>
        </trans-unit>
        <trans-unit id="504ffd8dce33a766335b7f18ff905d9f4b3367a1" translate="yes" xml:space="preserve">
          <source>Supports managing a set of properties.</source>
          <target state="translated">一連のプロパティの管理をサポートします。</target>
        </trans-unit>
        <trans-unit id="eefb4b3fc5a4f8345066638799b827b3e5a860a5" translate="yes" xml:space="preserve">
          <source>Supports managing a set of properties. Callers can use the &lt;code&gt;documentProperties&lt;/code&gt; dictionary to annotate the document with document-wide properties.</source>
          <target state="translated">一連のプロパティの管理をサポートします。呼び出し元は、 &lt;code&gt;documentProperties&lt;/code&gt; ディクショナリを使用して、ドキュメント全体のプロパティでドキュメントに注釈を付けることができます。</target>
        </trans-unit>
        <trans-unit id="77eae3647b9eca81df0fafef7d2575ce9b5689c6" translate="yes" xml:space="preserve">
          <source>Supports reporting bound property changes.</source>
          <target state="translated">バインドプロパティの変更の報告をサポートします。</target>
        </trans-unit>
        <trans-unit id="bcbcdec87857661362f5b28d5c9b9164d5bc37d4" translate="yes" xml:space="preserve">
          <source>Supports reporting bound property changes. This method can be called when a bound property has changed and it will send the appropriate &lt;code&gt;PropertyChangeEvent&lt;/code&gt; to any registered &lt;code&gt;PropertyChangeListeners&lt;/code&gt;.</source>
          <target state="translated">バインドされたプロパティの変更のレポートをサポートします。このメソッドは、バインドされたプロパティが変更されたときに呼び出すことができ、登録されている &lt;code&gt;PropertyChangeListeners&lt;/code&gt; に適切な &lt;code&gt;PropertyChangeEvent&lt;/code&gt; を送信します。</target>
        </trans-unit>
        <trans-unit id="5b41eef7f842032bcc64dc08d171a86638150143" translate="yes" xml:space="preserve">
          <source>Supports reporting constrained property changes.</source>
          <target state="translated">制約のあるプロパティの変更の報告をサポートします。</target>
        </trans-unit>
        <trans-unit id="7c384073a48d7ae34dd8f3ba0b5e30cc1eba9ff7" translate="yes" xml:space="preserve">
          <source>Supports reporting constrained property changes. This method can be called when a constrained property has changed and it will send the appropriate &lt;code&gt;PropertyChangeEvent&lt;/code&gt; to any registered &lt;code&gt;VetoableChangeListeners&lt;/code&gt;.</source>
          <target state="translated">制約されたプロパティの変更のレポートをサポートします。このメソッドは、制約されたプロパティが変更されたときに呼び出すことができ、適切な &lt;code&gt;PropertyChangeEvent&lt;/code&gt; を登録済みの &lt;code&gt;VetoableChangeListeners&lt;/code&gt; に送信します。</target>
        </trans-unit>
        <trans-unit id="e2dfbd0a27e10056e95d6e4c39300709e829267e" translate="yes" xml:space="preserve">
          <source>Supports the change listener interface and fires property changes.</source>
          <target state="translated">変更リスナーインターフェースをサポートし、プロパティの変更を実行します。</target>
        </trans-unit>
        <trans-unit id="f69ecdcfd4275ff58c510187d3d89a94eee5e90d" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;Q&lt;/code&gt; is the count of non-void types &lt;code&gt;Rn&lt;/code&gt;, and &lt;code&gt;(V1...VQ)&lt;/code&gt; is the sequence of those types.</source>
          <target state="translated">&lt;code&gt;Q&lt;/code&gt; が非void型 &lt;code&gt;Rn&lt;/code&gt; の数であり、 &lt;code&gt;(V1...VQ)&lt;/code&gt; がそれらの型のシーケンスであると仮定します。</target>
        </trans-unit>
        <trans-unit id="92bdb536746c8aa8ce39be8da2be82da18ae2afa" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;x&lt;/code&gt; is a collection known to contain only strings. The following code can be used to dump the collection into a newly allocated array of &lt;code&gt;String&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; が文字列のみを含むことがわかっているコレクションであるとします。次のコードを使用して、コレクションを新しく割り当てられた &lt;code&gt;String&lt;/code&gt; の配列にダンプできます。</target>
        </trans-unit>
        <trans-unit id="3647cf0129ea08564f1af215fcaef7a8d8f85076" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;x&lt;/code&gt; is a collection known to contain only strings. The following code can be used to dump the collection into a previously allocated &lt;code&gt;String&lt;/code&gt; array:</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; が文字列のみを含むことがわかっているコレクションであるとします。次のコードを使用して、コレクションを以前に割り当てられた &lt;code&gt;String&lt;/code&gt; 配列にダンプできます。</target>
        </trans-unit>
        <trans-unit id="8f512a18f474f495de77408993f276984c3d7cbb" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;x&lt;/code&gt; is a deque known to contain only strings. The following code can be used to dump the deque into a newly allocated array of &lt;code&gt;String&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; が文字列のみを含むことがわかっている両端キューであるとします。次のコードを使用して、dequeを新しく割り当てられた &lt;code&gt;String&lt;/code&gt; の配列にダンプできます。</target>
        </trans-unit>
        <trans-unit id="d464be1811b8c135efbc2dbfe79f9740b7db14e7" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;x&lt;/code&gt; is a list known to contain only strings. The following code can be used to dump the list into a newly allocated array of &lt;code&gt;String&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; が文字列のみを含むことがわかっているリストであるとします。次のコードを使用して、新しく割り当てられた &lt;code&gt;String&lt;/code&gt; の配列にリストをダンプできます。</target>
        </trans-unit>
        <trans-unit id="8c596d8960e1496151e1995cf231ff9db1e46873" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;x&lt;/code&gt; is a queue known to contain only strings. The following code can be used to dump the queue into a newly allocated array of &lt;code&gt;String&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; が文字列のみを含むことがわかっているキューであるとします。次のコードを使用して、新しく割り当てられた &lt;code&gt;String&lt;/code&gt; の配列にキューをダンプできます。</target>
        </trans-unit>
        <trans-unit id="07fd566007b24269124b9e7b5738b977081fa7f6" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;x&lt;/code&gt; is a set known to contain only strings. The following code can be used to dump the set into a newly allocated array of &lt;code&gt;String&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; が文字列のみを含むことがわかっているセットであるとします。次のコードを使用して、新しく割り当てられた &lt;code&gt;String&lt;/code&gt; の配列にセットをダンプできます。</target>
        </trans-unit>
        <trans-unit id="90c08f5ed230dbc2964e68d215f7cef03a11bf76" translate="yes" xml:space="preserve">
          <source>Suppose an application desired that the provider A always be checked first when any mechanism is needed, it would call:</source>
          <target state="translated">あるアプリケーションが、どのようなメカニズムが必要な場合でも、プロバイダAを常に最初にチェックするようにしたいとしたら、それは呼び出します。</target>
        </trans-unit>
        <trans-unit id="25271f4704ae6f788d805af758a8ca1c6ffd21a4" translate="yes" xml:space="preserve">
          <source>Suppose an application desired that when a mechanism of Oid m1 is needed the system default providers always be checked first, and only when they do not support m1 should a provider A be checked. It would then make the call:</source>
          <target state="translated">あるアプリケーションが、Oid m1 のメカニズムが必要なときに、システムのデフォルトプロバイダを常に最初にチェックし、m1 をサポートしていないときだけプロバイダ A をチェックしたいとします。そうすると、アプリケーションは呼び出しを行います。</target>
        </trans-unit>
        <trans-unit id="bd9ce72997c53f2b9599337b91510f8ba8d9d3bc" translate="yes" xml:space="preserve">
          <source>Suppose at a later time the following call is made to the same GSSManager instance:</source>
          <target state="translated">後日、同じGSSManagerインスタンスに対して以下のような呼び出しが行われたとします。</target>
        </trans-unit>
        <trans-unit id="309f9373774a9b3319690f924eceae61c5580dbd" translate="yes" xml:space="preserve">
          <source>Suppose instead that you would like to use the first non-null result of the set of tasks, ignoring any that encounter exceptions, and cancelling all other tasks when the first one is ready:</source>
          <target state="translated">代わりに、タスクのセットの中で最初の非ヌルでない結果を使い、例外が発生した場合は無視して、最初のタスクが準備できたら他のすべてのタスクをキャンセルするとします。</target>
        </trans-unit>
        <trans-unit id="ff2030c9a258a74582e8cad5ae1efca77fe21622" translate="yes" xml:space="preserve">
          <source>Suppose predicate handles &lt;code&gt;Pn&lt;/code&gt; are either &lt;code&gt;null&lt;/code&gt; or have no parameters. (Only one &lt;code&gt;Pn&lt;/code&gt; has to be non-&lt;code&gt;null&lt;/code&gt;.)</source>
          <target state="translated">述語ハンドル &lt;code&gt;Pn&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; であるか、パラメーターがないとします。（1つの &lt;code&gt;Pn&lt;/code&gt; のみが &lt;code&gt;null&lt;/code&gt; 以外である必要があります。）</target>
        </trans-unit>
        <trans-unit id="9b128de460d325a53b98162d44cf85f60394df5c" translate="yes" xml:space="preserve">
          <source>Suppose step handles &lt;code&gt;Sn&lt;/code&gt; have signatures &lt;code&gt;(B1..BX)Rn&lt;/code&gt;, for some constant &lt;code&gt;X&amp;gt;=N&lt;/code&gt;.</source>
          <target state="translated">ある定数 &lt;code&gt;X&amp;gt;=N&lt;/code&gt; に対して、ステップハンドル &lt;code&gt;Sn&lt;/code&gt; が署名 &lt;code&gt;(B1..BX)Rn&lt;/code&gt; を持っていると仮定します。</target>
        </trans-unit>
        <trans-unit id="bcab07bbca643594a0551ef893e069681b93353e" translate="yes" xml:space="preserve">
          <source>Suppose that a byte sequence of length</source>
          <target state="translated">長さ</target>
        </trans-unit>
        <trans-unit id="16315d3f222c242720067e2402d961229706c89b" translate="yes" xml:space="preserve">
          <source>Suppose that a selection key's interest set contains &lt;code&gt;OP_ACCEPT&lt;/code&gt; at the start of a &lt;a href=&quot;selector#selop&quot;&gt;selection operation&lt;/a&gt;. If the selector detects that the corresponding server-socket channel is ready to accept another connection, or has an error pending, then it will add &lt;code&gt;OP_ACCEPT&lt;/code&gt; to the key's ready set and add the key to its selected-key set.</source>
          <target state="translated">&lt;a href=&quot;selector#selop&quot;&gt;選択操作の&lt;/a&gt;開始時に、選択キーの対象セットに &lt;code&gt;OP_ACCEPT&lt;/code&gt; が含まれているとします。セレクターは、対応するサーバーソケットチャネルが別の接続を受け入れる準備ができているか、保留中のエラーがあることを検出すると、 &lt;code&gt;OP_ACCEPT&lt;/code&gt; をキーのレディセットに追加し、キーをその選択されたキーセットに追加します。</target>
        </trans-unit>
        <trans-unit id="a32164565f402690f2b05ad39c403c380451baf8" translate="yes" xml:space="preserve">
          <source>Suppose that a selection key's interest set contains &lt;code&gt;OP_ACCEPT&lt;/code&gt; at the start of a &lt;a href=&quot;selector#selop&quot;&gt;selection operation&lt;/a&gt;. If the selector detects that the corresponding server-socket channel is ready to accept another connection, or has an error pending, then it will add &lt;code&gt;OP_ACCEPT&lt;/code&gt; to the key's ready set.</source>
          <target state="translated">&lt;a href=&quot;selector#selop&quot;&gt;選択操作の&lt;/a&gt;開始時に、選択キーのインタレストセットに &lt;code&gt;OP_ACCEPT&lt;/code&gt; が含まれているとします。対応するサーバーソケットチャネルが別の接続を受け入れる準備ができていること、または保留中のエラーがあることをセレクターが検出すると、 &lt;code&gt;OP_ACCEPT&lt;/code&gt; がキーの準備完了セットに追加されます。</target>
        </trans-unit>
        <trans-unit id="b8ca5001fe7e96065f526c8f87c6365fe2ffa044" translate="yes" xml:space="preserve">
          <source>Suppose that a selection key's interest set contains &lt;code&gt;OP_CONNECT&lt;/code&gt; at the start of a &lt;a href=&quot;selector#selop&quot;&gt;selection operation&lt;/a&gt;. If the selector detects that the corresponding socket channel is ready to complete its connection sequence, or has an error pending, then it will add &lt;code&gt;OP_CONNECT&lt;/code&gt; to the key's ready set and add the key to its selected-key set.</source>
          <target state="translated">&lt;a href=&quot;selector#selop&quot;&gt;選択操作の&lt;/a&gt;開始時に、選択キーの対象セットに &lt;code&gt;OP_CONNECT&lt;/code&gt; が含まれているとします。セレクターは、対応するソケットチャネルが接続シーケンスを完了する準備ができているか、保留中のエラーがあることを &lt;code&gt;OP_CONNECT&lt;/code&gt; すると、OP_CONNECTをキーのレディセットに追加し、キーをその選択されたキーセットに追加します。</target>
        </trans-unit>
        <trans-unit id="7fd61b8ab5a3547922bc229c71e73f81281b5c26" translate="yes" xml:space="preserve">
          <source>Suppose that a selection key's interest set contains &lt;code&gt;OP_CONNECT&lt;/code&gt; at the start of a &lt;a href=&quot;selector#selop&quot;&gt;selection operation&lt;/a&gt;. If the selector detects that the corresponding socket channel is ready to complete its connection sequence, or has an error pending, then it will add &lt;code&gt;OP_CONNECT&lt;/code&gt; to the key's ready set.</source>
          <target state="translated">&lt;a href=&quot;selector#selop&quot;&gt;選択操作の&lt;/a&gt;開始時に、選択キーのインタレストセットに &lt;code&gt;OP_CONNECT&lt;/code&gt; が含まれているとします。セレクターは、対応するソケットチャネルが接続シーケンスを完了する準備ができていること、または保留中のエラーがあることを &lt;code&gt;OP_CONNECT&lt;/code&gt; すると、キーの準備完了セットにOP_CONNECTを追加します。</target>
        </trans-unit>
        <trans-unit id="64fa87c1342be7adb9d5dc7167955315589bc4a1" translate="yes" xml:space="preserve">
          <source>Suppose that a selection key's interest set contains &lt;code&gt;OP_READ&lt;/code&gt; at the start of a &lt;a href=&quot;selector#selop&quot;&gt;selection operation&lt;/a&gt;. If the selector detects that the corresponding channel is ready for reading, has reached end-of-stream, has been remotely shut down for further reading, or has an error pending, then it will add &lt;code&gt;OP_READ&lt;/code&gt; to the key's ready-operation set and add the key to its selected-key set.</source>
          <target state="translated">&lt;a href=&quot;selector#selop&quot;&gt;選択操作の&lt;/a&gt;開始時に、選択キーの対象セットに &lt;code&gt;OP_READ&lt;/code&gt; が含まれているとします。セレクターは、対応するチャネルが読み取りの準備ができていること、ストリームの終わりに達したこと、さらに読み取るためにリモートでシャットダウンされていること、または保留中のエラーがあることを &lt;code&gt;OP_READ&lt;/code&gt; すると、OP_READをキーの準備完了操作セットに追加して追加します選択された鍵セットへの鍵。</target>
        </trans-unit>
        <trans-unit id="0c9e156a93e99239673d8965fc7c195ff14858f0" translate="yes" xml:space="preserve">
          <source>Suppose that a selection key's interest set contains &lt;code&gt;OP_READ&lt;/code&gt; at the start of a &lt;a href=&quot;selector#selop&quot;&gt;selection operation&lt;/a&gt;. If the selector detects that the corresponding channel is ready for reading, has reached end-of-stream, has been remotely shut down for further reading, or has an error pending, then it will add &lt;code&gt;OP_READ&lt;/code&gt; to the key's ready-operation set.</source>
          <target state="translated">選択キーのインタレストセットに、&lt;a href=&quot;selector#selop&quot;&gt;選択操作の&lt;/a&gt;開始時に &lt;code&gt;OP_READ&lt;/code&gt; が含まれているとします。セレクターは、対応するチャネルが読み取りの準備ができている、ストリームの終わりに到達した、さらに読み取るためにリモートでシャットダウンされた、または保留中のエラーがあることを &lt;code&gt;OP_READ&lt;/code&gt; すると、キーの準備完了セットにOP_READを追加します。</target>
        </trans-unit>
        <trans-unit id="2bdeb6d0e11d42dee6a4085eeed0f6825b4b2d2c" translate="yes" xml:space="preserve">
          <source>Suppose that a selection key's interest set contains &lt;code&gt;OP_WRITE&lt;/code&gt; at the start of a &lt;a href=&quot;selector#selop&quot;&gt;selection operation&lt;/a&gt;. If the selector detects that the corresponding channel is ready for writing, has been remotely shut down for further writing, or has an error pending, then it will add &lt;code&gt;OP_WRITE&lt;/code&gt; to the key's ready set and add the key to its selected-key set.</source>
          <target state="translated">&lt;a href=&quot;selector#selop&quot;&gt;選択操作の&lt;/a&gt;開始時に、選択キーの対象セットに &lt;code&gt;OP_WRITE&lt;/code&gt; が含まれているとします。セレクターは、対応するチャネルが書き込みの準備ができていること、以降の書き込みのためにリモートでシャットダウンされていること、または保留中のエラーがあることを &lt;code&gt;OP_WRITE&lt;/code&gt; すると、OP_WRITEをキーのレディセットに追加し、キーをその選択されたキーセットに追加します。</target>
        </trans-unit>
        <trans-unit id="f6cb7e82635778ff9ff3162ad68173ebe2584e64" translate="yes" xml:space="preserve">
          <source>Suppose that a selection key's interest set contains &lt;code&gt;OP_WRITE&lt;/code&gt; at the start of a &lt;a href=&quot;selector#selop&quot;&gt;selection operation&lt;/a&gt;. If the selector detects that the corresponding channel is ready for writing, has been remotely shut down for further writing, or has an error pending, then it will add &lt;code&gt;OP_WRITE&lt;/code&gt; to the key's ready set.</source>
          <target state="translated">選択キーのインタレストセットに、&lt;a href=&quot;selector#selop&quot;&gt;選択操作の&lt;/a&gt;開始時に &lt;code&gt;OP_WRITE&lt;/code&gt; が含まれているとします。セレクターは、対応するチャネルが書き込みの準備ができていること、さらに書き込むためにリモートでシャットダウンされていること、または保留中のエラーがあることを &lt;code&gt;OP_WRITE&lt;/code&gt; すると、キーの準備完了セットにOP_WRITEを追加します。</target>
        </trans-unit>
        <trans-unit id="b5d6ac8746d20aeff25693f74cc5526cc59b178b" translate="yes" xml:space="preserve">
          <source>Suppose that the garbage collector determines at a certain point in time that an object is &lt;a href=&quot;package-summary#reachability&quot;&gt;softly reachable&lt;/a&gt;. At that time it may choose to clear atomically all soft references to that object and all soft references to any other softly-reachable objects from which that object is reachable through a chain of strong references. At the same time or at some later time it will enqueue those newly-cleared soft references that are registered with reference queues.</source>
          <target state="translated">ガベージコレクタが、ある時点でオブジェクトが&lt;a href=&quot;package-summary#reachability&quot;&gt;ソフトに到達可能で&lt;/a&gt;あると判断したとします。その時点で、そのオブジェクトへのすべてのソフト参照と、強い参照のチェーンを通じてそのオブジェクトに到達できる他のソフト到達可能オブジェクトへのすべてのソフト参照を、アトミックにクリアすることを選択できます。同時に、または後で、参照キューに登録されている新しくクリアされたソフト参照をエンキューします。</target>
        </trans-unit>
        <trans-unit id="9c374c6d20aa6b1ea44c3cb680ff7d32c101254d" translate="yes" xml:space="preserve">
          <source>Suppose that the garbage collector determines at a certain point in time that an object is &lt;a href=&quot;package-summary#reachability&quot;&gt;weakly reachable&lt;/a&gt;. At that time it will atomically clear all weak references to that object and all weak references to any other weakly-reachable objects from which that object is reachable through a chain of strong and soft references. At the same time it will declare all of the formerly weakly-reachable objects to be finalizable. At the same time or at some later time it will enqueue those newly-cleared weak references that are registered with reference queues.</source>
          <target state="translated">ガベージコレクターが、ある時点でオブジェクトへの&lt;a href=&quot;package-summary#reachability&quot;&gt;到達&lt;/a&gt;が弱いと判断したとします。その時点で、そのオブジェクトへのすべての弱い参照と、強い参照と弱い参照の連鎖を通じてそのオブジェクトに到達できる他の弱い到達可能なオブジェクトへのすべての弱い参照が自動的にクリアされます。同時に、以前は弱く到達できなかったすべてのオブジェクトをファイナライズ可能として宣言します。同時に、または後で、参照キューに登録されている新しくクリアされた弱参照をエンキューします。</target>
        </trans-unit>
        <trans-unit id="6703c61d3b40528b58b3e2621bf6b15360e618f6" translate="yes" xml:space="preserve">
          <source>Suppose the garbage collector determines at a certain point in time that an object is &lt;a href=&quot;package-summary#reachability&quot;&gt; phantom reachable&lt;/a&gt;. At that time it will atomically clear all phantom references to that object and all phantom references to any other phantom-reachable objects from which that object is reachable. At the same time or at some later time it will enqueue those newly-cleared phantom references that are registered with reference queues.</source>
          <target state="translated">ガベージコレクターが、ある時点でオブジェクトが&lt;a href=&quot;package-summary#reachability&quot;&gt;ファントム到達可能で&lt;/a&gt;あると判断したとします。その時点で、そのオブジェクトへのすべてのファントム参照と、そのオブジェクトに到達可能な他のファントム到達可能オブジェクトへのすべてのファントム参照がアトミックにクリアされます。同時に、または後で、参照キューに登録されている、新しくクリアされたファントム参照をキューに入れます。</target>
        </trans-unit>
        <trans-unit id="3329fe35cb4ab5a7e0ce159786b9853c357c6d36" translate="yes" xml:space="preserve">
          <source>Suppose, for example, &lt;code&gt;MyMBean&lt;/code&gt; looks like this:</source>
          <target state="translated">たとえば、 &lt;code&gt;MyMBean&lt;/code&gt; が次のようになっているとします。</target>
        </trans-unit>
        <trans-unit id="7da816a864d98a6ff84337434cb21a6e1d8e6a50" translate="yes" xml:space="preserve">
          <source>Suppose, for example, &lt;code&gt;MyMXBean&lt;/code&gt; looks like this:</source>
          <target state="translated">たとえば、 &lt;code&gt;MyMXBean&lt;/code&gt; が次のようになっているとします。</target>
        </trans-unit>
        <trans-unit id="ac965ea47a5cf4f4fb52fc29c1bba20f273b544c" translate="yes" xml:space="preserve">
          <source>Suppose, however, that the result container used in this reduction was a concurrently modifiable collection -- such as a &lt;a href=&quot;../concurrent/concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt;. In that case, the parallel invocations of the accumulator could actually deposit their results concurrently into the same shared result container, eliminating the need for the combiner to merge distinct result containers. This potentially provides a boost to the parallel execution performance. We call this a &lt;em&gt;concurrent&lt;/em&gt; reduction.</source>
          <target state="translated">ただし、この削減で使用される結果コンテナーが、並行変更可能なコレクション（&lt;a href=&quot;../concurrent/concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt;など）だったとします。その場合、アキュムレーターの並列呼び出しにより、実際に結果を同じ共有結果コンテナーに同時にデポジットできるため、コンバイナーが別個の結果コンテナーをマージする必要がなくなります。これにより、並列実行のパフォーマンスが向上する可能性があります。これを&lt;em&gt;同時&lt;/em&gt;削減と呼びます。</target>
        </trans-unit>
        <trans-unit id="719cec490c5f63789989254db519f1c45b62f19e" translate="yes" xml:space="preserve">
          <source>SuppressWarnings</source>
          <target state="translated">SuppressWarnings</target>
        </trans-unit>
        <trans-unit id="d72ebc71a28f24a776388c24031e7d090eed822d" translate="yes" xml:space="preserve">
          <source>SuppressWarnings.value</source>
          <target state="translated">SuppressWarnings.value</target>
        </trans-unit>
        <trans-unit id="bb8761ee6bc2a9512fae78cd073e806d69a36d7d" translate="yes" xml:space="preserve">
          <source>Suspends all threads in this thread group.</source>
          <target state="translated">このスレッドグループのすべてのスレッドを停止します。</target>
        </trans-unit>
        <trans-unit id="818d29e5442fabe0ed3fe3cb648ea03c2b1ee2c1" translate="yes" xml:space="preserve">
          <source>Suspends this thread.</source>
          <target state="translated">このスレッドを中断します。</target>
        </trans-unit>
        <trans-unit id="c27be1dfdc99770fcff1bdf5c1d4b7bda8dfdae6" translate="yes" xml:space="preserve">
          <source>Swap foreground and background.</source>
          <target state="translated">前景と背景を入れ替えます。</target>
        </trans-unit>
        <trans-unit id="1e77a1e103c52ee4e2e9e44095cc1f579c6f7595" translate="yes" xml:space="preserve">
          <source>Swaps the elements at the specified positions in the specified list.</source>
          <target state="translated">指定されたリストの指定された位置の要素を入れ替えます。</target>
        </trans-unit>
        <trans-unit id="a05b39ddf04609264c13e13f647ab072fcdd900c" translate="yes" xml:space="preserve">
          <source>Swaps the elements at the specified positions in the specified list. (If the specified positions are equal, invoking this method leaves the list unchanged.)</source>
          <target state="translated">指定されたリストの指定された位置の要素を入れ替えます。(指定した位置が等しい場合、このメソッドを呼び出すとリストは変更されません)</target>
        </trans-unit>
        <trans-unit id="d0f2720e59d5b742fccbf5501f06fc5863ec07dd" translate="yes" xml:space="preserve">
          <source>Swing Components Supporting &lt;code&gt;Action&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Action&lt;/code&gt; サポートするSwingコンポーネント</target>
        </trans-unit>
        <trans-unit id="dbd9fcebe0ad891a6c38958f8c71e9a2eaac30a7" translate="yes" xml:space="preserve">
          <source>Swing UIs are preferred as they provide a more consistent L&amp;amp;F and can support accessibility APIs.</source>
          <target state="translated">Swing UIは、より一貫したL＆Fを提供し、アクセシビリティAPIをサポートできるため、推奨されます。</target>
        </trans-unit>
        <trans-unit id="dff344a7a4c55b86024fcbcaaac9d482d874ae1e" translate="yes" xml:space="preserve">
          <source>Swing components should be accessed on the</source>
          <target state="translated">スイングコンポーネントには</target>
        </trans-unit>
        <trans-unit id="5380f99301d09c927290d6699c5a2ac741ad316f" translate="yes" xml:space="preserve">
          <source>Swing is built upon the foundation that each &lt;code&gt;JComponent&lt;/code&gt; subclass has an implementation of a specific &lt;code&gt;ComponentUI&lt;/code&gt; subclass. The &lt;code&gt;ComponentUI&lt;/code&gt; is often referred to as &quot;the ui&quot;, &quot;component ui&quot;, or &quot;look and feel delegate&quot;. The &lt;code&gt;ComponentUI&lt;/code&gt; subclass is responsible for providing the look and feel specific functionality of the component. For example, &lt;code&gt;JTree&lt;/code&gt; requires an implementation of the &lt;code&gt;ComponentUI&lt;/code&gt; subclass &lt;code&gt;
 TreeUI&lt;/code&gt;. The implementation of the specific &lt;code&gt;
 ComponentUI&lt;/code&gt; subclass is provided by the &lt;code&gt;LookAndFeel&lt;/code&gt;. Each &lt;code&gt;JComponent&lt;/code&gt; subclass identifies the &lt;code&gt;ComponentUI&lt;/code&gt; subclass it requires by way of the &lt;code&gt;JComponent&lt;/code&gt; method &lt;code&gt;
 getUIClassID&lt;/code&gt;.</source>
          <target state="translated">Swingは、各 &lt;code&gt;JComponent&lt;/code&gt; サブクラスに特定の &lt;code&gt;ComponentUI&lt;/code&gt; サブクラスの実装があるという基盤の上に構築されています。 &lt;code&gt;ComponentUI&lt;/code&gt; のは、多くの場合、「UI」、「コンポーネントUI」、または「ルックアンドフィールデリゲート」と呼ばれています。 &lt;code&gt;ComponentUI&lt;/code&gt; サブクラスは、コンポーネントのルックアンドフィール固有の機能を提供する役割を果たします。たとえば、 &lt;code&gt;JTree&lt;/code&gt; には &lt;code&gt;ComponentUI&lt;/code&gt; サブクラス &lt;code&gt; TreeUI&lt;/code&gt; の実装が必要です。特定の &lt;code&gt; ComponentUI&lt;/code&gt; サブクラスの実装は、 &lt;code&gt;LookAndFeel&lt;/code&gt; によって提供されます。各 &lt;code&gt;JComponent&lt;/code&gt; サブクラスは &lt;code&gt;ComponentUI&lt;/code&gt; を識別します &lt;code&gt;JComponent&lt;/code&gt; メソッド &lt;code&gt; getUIClassID&lt;/code&gt; を介して必要なサブクラス。</target>
        </trans-unit>
        <trans-unit id="dd818dcede3d33fa89b1d6ef19f4c4325e4de208" translate="yes" xml:space="preserve">
          <source>Swing makes use of &lt;a href=&quot;../../javax/swing/event/eventlistenerlist&quot;&gt;&lt;code&gt;EventListenerList&lt;/code&gt;&lt;/a&gt; for similar logic. Refer to it for details.</source>
          <target state="translated">Swingは、同様のロジックに&lt;a href=&quot;../../javax/swing/event/eventlistenerlist&quot;&gt; &lt;code&gt;EventListenerList&lt;/code&gt; &lt;/a&gt;を使用します。詳しくは参考にしてください。</target>
        </trans-unit>
        <trans-unit id="ca9f78761b3c71bc9c2f7430263645ae72e88435" translate="yes" xml:space="preserve">
          <source>Swing's Threading Policy</source>
          <target state="translated">スイングのスレッドポリシー</target>
        </trans-unit>
        <trans-unit id="4133b7ff35408fc5f7777a3ec6abbf3ea2092cc8" translate="yes" xml:space="preserve">
          <source>Swing's painting architecture assumes the children of a &lt;code&gt;JComponent&lt;/code&gt; do not overlap. If a &lt;code&gt;JComponent&lt;/code&gt;'s &lt;code&gt;LayoutManager&lt;/code&gt; allows children to overlap, the &lt;code&gt;JComponent&lt;/code&gt; must override &lt;code&gt;isOptimizedDrawingEnabled&lt;/code&gt; to return false.</source>
          <target state="translated">Swingのペインティングアーキテクチャは、 &lt;code&gt;JComponent&lt;/code&gt; の子がオーバーラップしないことを前提としています。場合 &lt;code&gt;JComponent&lt;/code&gt; の &lt;code&gt;LayoutManager&lt;/code&gt; で重複する子を許可する、 &lt;code&gt;JComponent&lt;/code&gt; のは、オーバーライドする必要があります &lt;code&gt;isOptimizedDrawingEnabled&lt;/code&gt; 偽を返すように。</target>
        </trans-unit>
        <trans-unit id="218d610943e797b20385a8c618737957e1a96dce" translate="yes" xml:space="preserve">
          <source>Swing's painting architecture requires an opaque &lt;code&gt;JComponent&lt;/code&gt; in the containment hierarchy. This is typically provided by the content pane. If you replace the content pane it is recommended you replace it with an opaque &lt;code&gt;JComponent&lt;/code&gt;.</source>
          <target state="translated">Swingのペインティングアーキテクチャでは、包含階層に不透明な &lt;code&gt;JComponent&lt;/code&gt; が必要です。これは通常、コンテンツペインによって提供されます。コンテンツペインを置き換える場合は、不透明な &lt;code&gt;JComponent&lt;/code&gt; に置き換えることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="77bed50f0b4dae0fb81a72e4543c2790ab17f8ae" translate="yes" xml:space="preserve">
          <source>SwingConstants</source>
          <target state="translated">SwingConstants</target>
        </trans-unit>
        <trans-unit id="e2728a315485ce8184d1f5285f11f43d6f9d80ff" translate="yes" xml:space="preserve">
          <source>SwingConstants.EAST</source>
          <target state="translated">SwingConstants.EAST</target>
        </trans-unit>
        <trans-unit id="1587787db7f7b67dc77429768e47c9f9e9b23254" translate="yes" xml:space="preserve">
          <source>SwingConstants.NORTH</source>
          <target state="translated">SwingConstants.NORTH</target>
        </trans-unit>
        <trans-unit id="a73a63033390051f4b1efc1f10084953320afeb3" translate="yes" xml:space="preserve">
          <source>SwingConstants.SOUTH</source>
          <target state="translated">SwingConstants.SOUTH</target>
        </trans-unit>
        <trans-unit id="b71fba008b6a567a30ae2e4272b8c90475660825" translate="yes" xml:space="preserve">
          <source>SwingConstants.WEST</source>
          <target state="translated">SwingConstants.WEST</target>
        </trans-unit>
        <trans-unit id="2aed5614c2dc64fad573a32558b51807f74587f7" translate="yes" xml:space="preserve">
          <source>SwingContainer</source>
          <target state="translated">SwingContainer</target>
        </trans-unit>
        <trans-unit id="7227919033079779401e7b14ea117ebe5c23657f" translate="yes" xml:space="preserve">
          <source>SwingPropertyChangeSupport</source>
          <target state="translated">SwingPropertyChangeSupport</target>
        </trans-unit>
        <trans-unit id="3ab5480ac9c30c4d27650e65a2ed4f997b8f1d2a" translate="yes" xml:space="preserve">
          <source>SwingUtilities</source>
          <target state="translated">SwingUtilities</target>
        </trans-unit>
        <trans-unit id="cb20868bfbed8fbdb42013ee7b8fd30dd0a4d1bf" translate="yes" xml:space="preserve">
          <source>SwingWorker</source>
          <target state="translated">SwingWorker</target>
        </trans-unit>
        <trans-unit id="eef9b1f0ee75df73e8419b788c7c00b259e90e87" translate="yes" xml:space="preserve">
          <source>SwingWorker.StateValue</source>
          <target state="translated">SwingWorker.StateValue</target>
        </trans-unit>
        <trans-unit id="5d2a58dccf174efccf8de70d16ee82be806fc858" translate="yes" xml:space="preserve">
          <source>SwitchPoint</source>
          <target state="translated">SwitchPoint</target>
        </trans-unit>
        <trans-unit id="b4e7654d1497a493590bcceac1358853d1f80f71" translate="yes" xml:space="preserve">
          <source>SwitchPoint.guardWithTest()</source>
          <target state="translated">SwitchPoint.guardWithTest()</target>
        </trans-unit>
        <trans-unit id="13082d23f2d95760e2d802ff0b2309195fce3c00" translate="yes" xml:space="preserve">
          <source>SwitchPoint.hasBeenInvalidated()</source>
          <target state="translated">SwitchPoint.hasBeenInvalidated()</target>
        </trans-unit>
        <trans-unit id="818bf90ef7c7f1d91c3d027193eeecd995ad6896" translate="yes" xml:space="preserve">
          <source>SwitchPoint.invalidateAll()</source>
          <target state="translated">SwitchPoint.invalidateAll()</target>
        </trans-unit>
        <trans-unit id="3f84ef531f9db996694ad09a8fdddbca1440577e" translate="yes" xml:space="preserve">
          <source>Symbol</source>
          <target state="translated">Symbol</target>
        </trans-unit>
        <trans-unit id="37008620b710f26771f72ef684d0d762ce0c312d" translate="yes" xml:space="preserve">
          <source>Symbolic Links</source>
          <target state="translated">シンボリックリンク</target>
        </trans-unit>
        <trans-unit id="6aa2f3a1dabeec09112f56e06ed17a3cf1173848" translate="yes" xml:space="preserve">
          <source>Symbolic links are not followed. If the file is a symbolic link, then the symbolic link itself, not the target of the link, is copied. It is implementation specific if file attributes can be copied to the new link. In other words, the &lt;code&gt;COPY_ATTRIBUTES&lt;/code&gt; option may be ignored when copying a symbolic link.</source>
          <target state="translated">シンボリックリンクはたどられません。ファイルがシンボリックリンクの場合、リンクのターゲットではなく、シンボリックリンク自体がコピーされます。ファイル属性を新しいリンクにコピーできるかどうかは、実装固有です。つまり、シンボリックリンクをコピーする場合、 &lt;code&gt;COPY_ATTRIBUTES&lt;/code&gt; オプションは無視されます。</target>
        </trans-unit>
        <trans-unit id="45a8199fc2d0be2cc81c60cb757fbb19b6e3806a" translate="yes" xml:space="preserve">
          <source>Symmetric primitive: block cipher</source>
          <target state="translated">対称的プリミティブ:ブロック暗号</target>
        </trans-unit>
        <trans-unit id="1e54a5d115a0a69fb973c251b9850ecc69a863e4" translate="yes" xml:space="preserve">
          <source>Symmetric primitive: key wrap</source>
          <target state="translated">対称的なプリミティブ:キーラップ</target>
        </trans-unit>
        <trans-unit id="a8daff9c7991c164f74117bbe35fbeb00adbd68d" translate="yes" xml:space="preserve">
          <source>Symmetric primitive: message authentication code</source>
          <target state="translated">対称プリミティブ:メッセージ認証コード</target>
        </trans-unit>
        <trans-unit id="baccb8268804cb0ba4a92c9b298f8928bd4abb75" translate="yes" xml:space="preserve">
          <source>Symmetric primitive: stream cipher</source>
          <target state="translated">対称的プリミティブ:ストリーム暗号</target>
        </trans-unit>
        <trans-unit id="b8af9a4a4c45ba9e5cd030c3c53ae9ad3b0df022" translate="yes" xml:space="preserve">
          <source>SyncFactory</source>
          <target state="translated">SyncFactory</target>
        </trans-unit>
        <trans-unit id="5d39b0b27abcf111502312bc7a937ea84b59c8bb" translate="yes" xml:space="preserve">
          <source>SyncFactoryException</source>
          <target state="translated">SyncFactoryException</target>
        </trans-unit>
        <trans-unit id="e5ab89fb526fd83e5653e3624399317385e6be68" translate="yes" xml:space="preserve">
          <source>SyncFailedException</source>
          <target state="translated">SyncFailedException</target>
        </trans-unit>
        <trans-unit id="86d1ae6685ce3bea1bbcf47681d32b7d3c111491" translate="yes" xml:space="preserve">
          <source>SyncMode</source>
          <target state="translated">SyncMode</target>
        </trans-unit>
        <trans-unit id="89a983116c3f3a76f0b40412cf36c16fc56123ac" translate="yes" xml:space="preserve">
          <source>SyncProvider</source>
          <target state="translated">SyncProvider</target>
        </trans-unit>
        <trans-unit id="da13ef8c47e0185ee820c5b0f2a2dccb69638e37" translate="yes" xml:space="preserve">
          <source>SyncProvider.DATASOURCE_DB_LOCK</source>
          <target state="translated">SyncProvider.DATASOURCE_DB_LOCK</target>
        </trans-unit>
        <trans-unit id="1e9641c5c5dd4b207349c1ace87a1d5874feb748" translate="yes" xml:space="preserve">
          <source>SyncProvider.DATASOURCE_NO_LOCK</source>
          <target state="translated">SyncProvider.DATASOURCE_NO_LOCK</target>
        </trans-unit>
        <trans-unit id="dc0eb2289b3188dafb36325814150fc5f594b6de" translate="yes" xml:space="preserve">
          <source>SyncProvider.DATASOURCE_ROW_LOCK</source>
          <target state="translated">SyncProvider.DATASOURCE_ROW_LOCK</target>
        </trans-unit>
        <trans-unit id="7b03b971a99b79b83d34d841589d668cda1bb717" translate="yes" xml:space="preserve">
          <source>SyncProvider.DATASOURCE_TABLE_LOCK</source>
          <target state="translated">SyncProvider.DATASOURCE_TABLE_LOCK</target>
        </trans-unit>
        <trans-unit id="b5156063bb5f2db99398d7e95c232e8775e87c1a" translate="yes" xml:space="preserve">
          <source>SyncProvider.GRADE_CHECK_ALL_AT_COMMIT</source>
          <target state="translated">SyncProvider.GRADE_CHECK_ALL_AT_COMMIT</target>
        </trans-unit>
        <trans-unit id="47b67608332e473ed9ec0497157899ef5dadd945" translate="yes" xml:space="preserve">
          <source>SyncProvider.GRADE_LOCK_WHEN_LOADED</source>
          <target state="translated">SyncProvider.GRADE_LOCK_WHEN_LOADED</target>
        </trans-unit>
        <trans-unit id="d63b5fcef04f8a2182105ce93e7195273b49c160" translate="yes" xml:space="preserve">
          <source>SyncProvider.GRADE_LOCK_WHEN_MODIFIED</source>
          <target state="translated">SyncProvider.GRADE_LOCK_WHEN_MODIFIED</target>
        </trans-unit>
        <trans-unit id="14408c91d61812945f919fd84515609e74f84f29" translate="yes" xml:space="preserve">
          <source>SyncProvider.GRADE_MODIFIED_AT_COMMIT</source>
          <target state="translated">SyncProvider.GRADE_MODIFIED_AT_COMMIT</target>
        </trans-unit>
        <trans-unit id="604bf36b3d06c0c9c9f55a8365a7b0bb0b10044c" translate="yes" xml:space="preserve">
          <source>SyncProvider.GRADE_NONE</source>
          <target state="translated">SyncProvider.GRADE_NONE</target>
        </trans-unit>
        <trans-unit id="bee39adbb41d28f68d7bec285452691b0744997a" translate="yes" xml:space="preserve">
          <source>SyncProvider.NONUPDATABLE_VIEW_SYNC</source>
          <target state="translated">SyncProvider.NONUPDATABLE_VIEW_SYNC</target>
        </trans-unit>
        <trans-unit id="bbe56423a505c8a5e12610e88d98088333a47a93" translate="yes" xml:space="preserve">
          <source>SyncProvider.UPDATABLE_VIEW_SYNC</source>
          <target state="translated">SyncProvider.UPDATABLE_VIEW_SYNC</target>
        </trans-unit>
        <trans-unit id="c1f3b250912df7b7d098cf1fb99ea904e2cf0952" translate="yes" xml:space="preserve">
          <source>SyncProviderException</source>
          <target state="translated">SyncProviderException</target>
        </trans-unit>
        <trans-unit id="13995ef6127ec9e5f3e88ebcbb2f9a8014c32613" translate="yes" xml:space="preserve">
          <source>SyncResolver</source>
          <target state="translated">SyncResolver</target>
        </trans-unit>
        <trans-unit id="cbcf7ae51d210c4ce6c53f74b6ecb4c2b26819b4" translate="yes" xml:space="preserve">
          <source>Synchronization</source>
          <target state="translated">Synchronization</target>
        </trans-unit>
        <trans-unit id="3689de12368894b3544eb83e62deda3160534be8" translate="yes" xml:space="preserve">
          <source>Synchronization Information and Deadlock Detection</source>
          <target state="translated">同期情報とデッドロック検出</target>
        </trans-unit>
        <trans-unit id="e8e7808444f9d7ad379d446f27ab1ca1d103d368" translate="yes" xml:space="preserve">
          <source>Synchronization Statistics</source>
          <target state="translated">同期統計</target>
        </trans-unit>
        <trans-unit id="201bc14e3fa96934506d76f511f4b1a84800580e" translate="yes" xml:space="preserve">
          <source>Synchronization and serialization issues that apply to LinkException apply directly here.</source>
          <target state="translated">LinkException に適用される同期化およびシリアライズの問題は、ここで直接適用されます。</target>
        </trans-unit>
        <trans-unit id="428dd7efe489a436705436e79bf64a3b0ca1d464" translate="yes" xml:space="preserve">
          <source>Synchronization and serialization issues that apply to NamingException apply directly here.</source>
          <target state="translated">NamingException に適用される同期化とシリアライズの問題は、ここで直接適用されます。</target>
        </trans-unit>
        <trans-unit id="982425f47d53a0b630e0088c174dbda455870726" translate="yes" xml:space="preserve">
          <source>Synchronization providers bound to a JNDI context can be registered by binding a SyncProvider instance to a JNDI namespace.</source>
          <target state="translated">JNDIコンテキストにバインドされた同期プロバイダは、SyncProviderインスタンスをJNDIネームスペースにバインドすることで登録できます。</target>
        </trans-unit>
        <trans-unit id="8ff347bf918d58bf9d7d011215ced6ecd5be868f" translate="yes" xml:space="preserve">
          <source>Synchronized I/O File Integrity</source>
          <target state="translated">同期I/Oファイル整合性</target>
        </trans-unit>
        <trans-unit id="2072384aea96efd5b30d7409f08901ada1b9d441" translate="yes" xml:space="preserve">
          <source>Synchronized I/O file integrity</source>
          <target state="translated">同期化されたI/Oファイルの整合性</target>
        </trans-unit>
        <trans-unit id="6e2c68cc2f037e10f36d5c17de197817e1d3efe3" translate="yes" xml:space="preserve">
          <source>Synchronized view of &lt;code&gt;attributeSet&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;attributeSet&lt;/code&gt; の同期ビュー。</target>
        </trans-unit>
        <trans-unit id="bc13addadaf1352bbaa7cbf2570ca2e77f7a07d4" translate="yes" xml:space="preserve">
          <source>Synchronizers</source>
          <target state="translated">Synchronizers</target>
        </trans-unit>
        <trans-unit id="11e021c1341bd3d37e3823252f82b814b2df0189" translate="yes" xml:space="preserve">
          <source>Synchronizes the &lt;code&gt;JScrollPane&lt;/code&gt; with &lt;code&gt;Viewport&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JScrollPane&lt;/code&gt; を &lt;code&gt;Viewport&lt;/code&gt; と同期します。</target>
        </trans-unit>
        <trans-unit id="57b206595b05b5c295ba32a40d8eca34d7e8e3f2" translate="yes" xml:space="preserve">
          <source>Synchronizes this toolkit's graphics state.</source>
          <target state="translated">このツールキットのグラフィックスの状態を同期させます。</target>
        </trans-unit>
        <trans-unit id="b936fb7fbedc42ff31ac1d693454a3e476b9ab6c" translate="yes" xml:space="preserve">
          <source>Synchronizes this toolkit's graphics state. Some window systems may do buffering of graphics events.</source>
          <target state="translated">このツールキットのグラフィックスの状態を同期させます。ウィンドウシステムによっては、グラフィックスイベントのバッファリングを行う場合があります。</target>
        </trans-unit>
        <trans-unit id="544e5b0c63034a551061b2b8040413a2a2ebae6d" translate="yes" xml:space="preserve">
          <source>Synchronizes two or more lines.</source>
          <target state="translated">2つ以上の行を同期させます。</target>
        </trans-unit>
        <trans-unit id="735e9be25200920145a3a06d8da12132ce35d474" translate="yes" xml:space="preserve">
          <source>Synchronizes two or more lines. Any subsequent command that starts or stops audio playback or capture for one of these lines will exert the same effect on the other lines in the group, so that they start or stop playing or capturing data simultaneously.</source>
          <target state="translated">2 つ以上のラインを同期させます。これらのラインの1つのオーディオ再生またはキャプチャを開始または停止する後続のコマンドは、グループ内の他のラインにも同じ効果を与え、同時にデータの再生またはキャプチャを開始または停止するようにします。</target>
        </trans-unit>
        <trans-unit id="3dfc30c613b491fcc6360672957793189d9d6f7d" translate="yes" xml:space="preserve">
          <source>Synchronous queues are similar to rendezvous channels used in CSP and Ada. They are well suited for handoff designs, in which an object running in one thread must sync up with an object running in another thread in order to hand it some information, event, or task.</source>
          <target state="translated">同期キューは、CSP や Ada で使用されるランデブーチャネルに似ています。これは、あるスレッドで実行されているオブジェクトが、ある情報やイベント、タスクを渡すために、別のスレッドで実行されているオブジェクトと同期しなければならないようなハンドオフの設計に適しています。</target>
        </trans-unit>
        <trans-unit id="99a52c9f1b419a2a3686e1d783b0087e6052b330" translate="yes" xml:space="preserve">
          <source>SynchronousQueue</source>
          <target state="translated">SynchronousQueue</target>
        </trans-unit>
        <trans-unit id="ac66fe76fa96b5a53a4e8455c0602878f65f53ff" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.clear()</source>
          <target state="translated">SynchronousQueue.clear()</target>
        </trans-unit>
        <trans-unit id="0c0aa76841eff05bb6e9f3d5477428718a8a5683" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.contains()</source>
          <target state="translated">SynchronousQueue.contains()</target>
        </trans-unit>
        <trans-unit id="c04ae5bb190aa9b38629428e423239d1728caaa4" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.containsAll()</source>
          <target state="translated">SynchronousQueue.containsAll()</target>
        </trans-unit>
        <trans-unit id="1b2fde4f32f8f8785f35be800791d37f1de5fcb3" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.drainTo()</source>
          <target state="translated">SynchronousQueue.drainTo()</target>
        </trans-unit>
        <trans-unit id="95e01f95d38d9654994172a16c3543e3a9b8486d" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.isEmpty()</source>
          <target state="translated">SynchronousQueue.isEmpty()</target>
        </trans-unit>
        <trans-unit id="801ddc4562b3c9fabb0f7355cdd10ed347aeac1d" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.iterator()</source>
          <target state="translated">SynchronousQueue.iterator()</target>
        </trans-unit>
        <trans-unit id="9494a6abadc2b88890014b67bb28e7a57a77d2ff" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.offer()</source>
          <target state="translated">SynchronousQueue.offer()</target>
        </trans-unit>
        <trans-unit id="d37774bf1afc55bcff7e2d88b32c170f6fa945e6" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.peek()</source>
          <target state="translated">SynchronousQueue.peek()</target>
        </trans-unit>
        <trans-unit id="17a97c239dc34b417a79596256f941e4a7d3eb04" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.poll()</source>
          <target state="translated">SynchronousQueue.poll()</target>
        </trans-unit>
        <trans-unit id="b9ace5019bf840868ac9f837fdedbeb65a42c99d" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.put()</source>
          <target state="translated">SynchronousQueue.put()</target>
        </trans-unit>
        <trans-unit id="3f11535f3a14cd0a0f8dfc3e64e2994a7b7c751d" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.remainingCapacity()</source>
          <target state="translated">SynchronousQueue.remainingCapacity()</target>
        </trans-unit>
        <trans-unit id="958aee344dfcad4c78e3cae90f527bf779c5c81b" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.remove()</source>
          <target state="translated">SynchronousQueue.remove()</target>
        </trans-unit>
        <trans-unit id="7310c048e623185cf35aa3a380951654e6e6e3a0" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.removeAll()</source>
          <target state="translated">SynchronousQueue.removeAll()</target>
        </trans-unit>
        <trans-unit id="c7e3d4b512997d8adadf448340c41156c1f7573e" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.retainAll()</source>
          <target state="translated">SynchronousQueue.retainAll()</target>
        </trans-unit>
        <trans-unit id="97d90f3610ec79e760d8426fb12e24725f82726d" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.size()</source>
          <target state="translated">SynchronousQueue.size()</target>
        </trans-unit>
        <trans-unit id="f1db87c771aea61927269a605fbe58f2afddea06" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.spliterator()</source>
          <target state="translated">SynchronousQueue.spliterator()</target>
        </trans-unit>
        <trans-unit id="84f3c0bc015f2cf31665ef56c9dacf9c0f29311c" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.take()</source>
          <target state="translated">SynchronousQueue.take()</target>
        </trans-unit>
        <trans-unit id="391464b03ea504c788092c7a8056ceae4d1109a0" translate="yes" xml:space="preserve">
          <source>SynchronousQueue.toArray()</source>
          <target state="translated">SynchronousQueue.toArray()</target>
        </trans-unit>
        <trans-unit id="4d984ac2422f7dbf6fba27d5553d5b295a76d310" translate="yes" xml:space="preserve">
          <source>Synonym for LINE_END.</source>
          <target state="translated">LINE_ENDの同義語。</target>
        </trans-unit>
        <trans-unit id="ac110406e1c37e676345002c4107d595b6c2e782" translate="yes" xml:space="preserve">
          <source>Synonym for LINE_END. Exists for compatibility with previous versions. LINE_END is preferred.</source>
          <target state="translated">LINE_END の同義語。以前のバージョンとの互換性のために存在します。LINE_ENDが好ましい。</target>
        </trans-unit>
        <trans-unit id="1ee518a85cf051d41d9f790e8c8b6bc99c7109ca" translate="yes" xml:space="preserve">
          <source>Synonym for LINE_START.</source>
          <target state="translated">LINE_STARTの同義語。</target>
        </trans-unit>
        <trans-unit id="20bfaa3b247011f0f11e4465861511d40049b3ab" translate="yes" xml:space="preserve">
          <source>Synonym for LINE_START. Exists for compatibility with previous versions. LINE_START is preferred.</source>
          <target state="translated">LINE_START の同義語。以前のバージョンとの互換性のために存在します。LINE_STARTが好ましい。</target>
        </trans-unit>
        <trans-unit id="6d62e8eae00b4119bd7316af3956c856de1a2c41" translate="yes" xml:space="preserve">
          <source>Synonym for PAGE_END.</source>
          <target state="translated">PAGE_ENDの同義語。</target>
        </trans-unit>
        <trans-unit id="baa56eb968620f1db51bd2dce68d5a1c7ad19199" translate="yes" xml:space="preserve">
          <source>Synonym for PAGE_END. Exists for compatibility with previous versions. PAGE_END is preferred.</source>
          <target state="translated">PAGE_END の同義語。以前のバージョンとの互換性のために存在する。PAGE_ENDが好ましい。</target>
        </trans-unit>
        <trans-unit id="f388184988295a03d070c67cf636dc26a92f8697" translate="yes" xml:space="preserve">
          <source>Synonym for PAGE_START.</source>
          <target state="translated">PAGE_STARTの同義語。</target>
        </trans-unit>
        <trans-unit id="2abf82a849a832bb689337dcbe32d097fabf5de6" translate="yes" xml:space="preserve">
          <source>Synonym for PAGE_START. Exists for compatibility with previous versions. PAGE_START is preferred.</source>
          <target state="translated">PAGE_START の同義語。以前のバージョンとの互換性のために存在する。PAGE_STARTが好ましい。</target>
        </trans-unit>
        <trans-unit id="ec2c5e858ffde7455e30b4ae0f178504b4d22098" translate="yes" xml:space="preserve">
          <source>Syntactic identifier, including keywords and literals</source>
          <target state="translated">キーワードやリテラルを含む構文識別子</target>
        </trans-unit>
        <trans-unit id="8eacf304372c20fdf64b52286325ba7f6dd6fe98" translate="yes" xml:space="preserve">
          <source>Syntax properties for this compound name.</source>
          <target state="translated">この化合物名の構文プロパティ。</target>
        </trans-unit>
        <trans-unit id="d4d43ff5400b1fdacd494adcc31dc73a839d221b" translate="yes" xml:space="preserve">
          <source>Syntax properties for this compound name. This field is initialized by the constructors and cannot be null. It should be treated as a read-only variable by subclasses. Any necessary changes to mySyntax should be made within constructors and not after the compound name has been instantiated.</source>
          <target state="translated">この複合名の構文プロパティ。このフィールドはコンストラクタによって初期化され、NULL にすることはできません。サブクラスでは読み取り専用の変数として扱う必要があります。mySyntax に必要な変更はすべてコンストラクタ内で行う必要があり、複合体名がインスタンス化された後ではありません。</target>
        </trans-unit>
        <trans-unit id="eacc406b52752b2b30fb51c6a7fee70196a7f9be" translate="yes" xml:space="preserve">
          <source>Synth</source>
          <target state="translated">Synth</target>
        </trans-unit>
        <trans-unit id="33e52274aaf1f2a2af650318e6bc2168befec1f9" translate="yes" xml:space="preserve">
          <source>Synth is a skinnable look and feel in which all painting is delegated.</source>
          <target state="translated">シンセは全塗装を委任されたスキンシップ的なルックスとフィーリングです。</target>
        </trans-unit>
        <trans-unit id="08605a72820c43ff03702070a9c9b6b9355b18a4" translate="yes" xml:space="preserve">
          <source>Synth is a skinnable look and feel in which all painting is delegated. Synth does not provide a default look. In order to use Synth you need to specify a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;file&lt;/a&gt;, or provide a &lt;a href=&quot;synthstylefactory&quot;&gt;&lt;code&gt;SynthStyleFactory&lt;/code&gt;&lt;/a&gt;. Both configuration options require an understanding of the synth architecture, which is described below, as well as an understanding of Swing's architecture.</source>
          <target state="translated">Synthは、すべてのペイントが委任されたスキン可能なルックアンドフィールです。Synthはデフォルトの外観を提供しません。Synthを使用するには、&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;ファイル&lt;/a&gt;を指定するか、&lt;a href=&quot;synthstylefactory&quot;&gt; &lt;code&gt;SynthStyleFactory&lt;/code&gt; &lt;/a&gt;を指定する必要があります。どちらの構成オプションでも、以下で説明するシンセアーキテクチャーの理解と、Swingのアーキテクチャーの理解が必要です。</target>
        </trans-unit>
        <trans-unit id="f35182a97fbb7b5b11e3ce7e50ad4bc92e8e4799" translate="yes" xml:space="preserve">
          <source>Synth provides a region for the cells of a tree: &lt;code&gt;Region.TREE_CELL&lt;/code&gt;. To specify the colors of the renderer you'll want to provide a style for the &lt;code&gt;TREE_CELL&lt;/code&gt; region. The following illustrates this:</source>
          <target state="translated">Synthは、ツリーのセルに領域を提供します： &lt;code&gt;Region.TREE_CELL&lt;/code&gt; 。レンダラーの色を指定するには、 &lt;code&gt;TREE_CELL&lt;/code&gt; 領域のスタイルを指定する必要があります。以下はこれを示しています。</target>
        </trans-unit>
        <trans-unit id="1360c51b1807c2c7e4695bf45948571a727653da" translate="yes" xml:space="preserve">
          <source>Synth provides several built in states, which are:</source>
          <target state="translated">シンセにはいくつかのステートが組み込まれています。</target>
        </trans-unit>
        <trans-unit id="1d01fdf7417adc45106c1f7996600d6a389abfe1" translate="yes" xml:space="preserve">
          <source>SynthButtonUI</source>
          <target state="translated">SynthButtonUI</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
