<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="b029b525bf5f42458954c7067e973f25aad85180" translate="yes" xml:space="preserve">
          <source>Uniform Resource Locator (&lt;a href=&quot;../../java/net/url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt;) -- The print data consists of the bytes read from the URL location. The bytes are encoded in the character set specified by the doc flavor's MIME type. If the MIME type does not specify a character set, the default character set is US-ASCII.</source>
          <target state="translated">Uniform Resource Locator（&lt;a href=&quot;../../java/net/url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;）-印刷データは、URLの場所から読み取られたバイトで構成されます。バイトは、docフレーバーのMIMEタイプで指定された文字セットでエンコードされます。MIMEタイプで文字セットが指定されていない場合、デフォルトの文字セットはUS-ASCIIです。</target>
        </trans-unit>
        <trans-unit id="72d1bc1786787b9f5cf6f8701a1fb442f4f59285" translate="yes" xml:space="preserve">
          <source>Union</source>
          <target state="translated">Union</target>
        </trans-unit>
        <trans-unit id="2cfef1bfee0e9e671b5120696b51b26567441b4a" translate="yes" xml:space="preserve">
          <source>UnionType</source>
          <target state="translated">UnionType</target>
        </trans-unit>
        <trans-unit id="2526b93dc562a68ed40d7d722f8374200e7e4e25" translate="yes" xml:space="preserve">
          <source>UnionType.getAlternatives()</source>
          <target state="translated">UnionType.getAlternatives()</target>
        </trans-unit>
        <trans-unit id="7553b136bb52617dcd8cd2fc17176cf6e846745f" translate="yes" xml:space="preserve">
          <source>Unique key for message text (to allow translation, analysis).</source>
          <target state="translated">メッセージテキストのためのユニークなキー(翻訳、分析を可能にするため)。</target>
        </trans-unit>
        <trans-unit id="9f9e8ae9a76d0c44c4e06e8c6c489f428f3062a6" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a century. For the ISO calendar system, it is equal to 100 years.</source>
          <target state="translated">世紀の概念を表す単位。ISOカレンダーシステムでは100年に相当する。</target>
        </trans-unit>
        <trans-unit id="aa542cbc7f0b2f05e5de66292062be35167ef3ec" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a day. For the ISO calendar system, it is the standard day from midnight to midnight. The estimated duration of a day is &lt;code&gt;24 Hours&lt;/code&gt;.</source>
          <target state="translated">日の概念を表す単位。ISOカレンダーシステムの場合、午前0時から午前0時までの標準日です。1日の推定所要時間は &lt;code&gt;24 Hours&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="28e3b680a177515dffb29196c9e8b5734714cc06" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a decade. For the ISO calendar system, it is equal to 10 years.</source>
          <target state="translated">10年の概念を表す単位。ISOカレンダーシステムでは10年に相当する。</target>
        </trans-unit>
        <trans-unit id="76cc7298e519e3192d4a51c54374f480794c6751" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a microsecond. For the ISO calendar system, it is equal to the 1,000,000th part of the second unit.</source>
          <target state="translated">マイクロ秒の概念を表す単位。ISOカレンダーシステムでは、2番目の単位の100万分の1に相当します。</target>
        </trans-unit>
        <trans-unit id="2cb2dcbedda16f48962f95f0ab811f7ca7cdc1b0" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a millennium. For the ISO calendar system, it is equal to 1000 years.</source>
          <target state="translated">千年紀の概念を表す単位。ISOカレンダーシステムでは1000年に相当する。</target>
        </trans-unit>
        <trans-unit id="0b222767e0678a279e41981a3a25b41bd33e8807" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a millisecond. For the ISO calendar system, it is equal to the 1000th part of the second unit.</source>
          <target state="translated">ミリ秒の概念を表す単位。ISOカレンダーシステムでは、2番目の単位の1000分の1に相当します。</target>
        </trans-unit>
        <trans-unit id="e5c57d74b7967b443c541c9d347cc933cb52ecd2" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a minute. For the ISO calendar system, it is equal to 60 seconds.</source>
          <target state="translated">分の概念を表す単位。ISOカレンダーシステムでは60秒に相当する。</target>
        </trans-unit>
        <trans-unit id="aae2933dd6d0a216713c2b3265e20d5634df6f13" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a month. For the ISO calendar system, the length of the month varies by month-of-year. The estimated duration of a month is one twelfth of &lt;code&gt;365.2425 Days&lt;/code&gt;.</source>
          <target state="translated">月の概念を表す単位。ISOカレンダーシステムの場合、月の長さは月によって異なります。1か月の推定期間は、 &lt;code&gt;365.2425 Days&lt;/code&gt; 12分の1 です。</target>
        </trans-unit>
        <trans-unit id="10d277a288c3706e5c30644c076d8f49b2d75d31" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a nanosecond, the smallest supported unit of time. For the ISO calendar system, it is equal to the 1,000,000,000th part of the second unit.</source>
          <target state="translated">ナノ秒の概念を表す単位で、時間の最小単位としてサポートされています。ISOカレンダーシステムでは、2番目の単位の1,000,000,000分の1に相当します。</target>
        </trans-unit>
        <trans-unit id="caaefa6443294a2914fef3533cc04cf6083d264b" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a quarter-year. For the ISO calendar system, it is equal to 3 months. The estimated duration of a quarter-year is one quarter of &lt;code&gt;365.2425 Days&lt;/code&gt;.</source>
          <target state="translated">四半期の概念を表す単位。ISOカレンダーシステムの場合、3か月です。四半期の推定期間は、 &lt;code&gt;365.2425 Days&lt;/code&gt; 4分の1 です。</target>
        </trans-unit>
        <trans-unit id="e4fc2298392742d99b347fd01c8cca812f4bb0f3" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a second. For the ISO calendar system, it is equal to the second in the SI system of units, except around a leap-second.</source>
          <target state="translated">秒の概念を表す単位。ISOカレンダーシステムでは、うるう秒付近を除き、SI系の単位系では秒と同じです。</target>
        </trans-unit>
        <trans-unit id="44055e4e12f6a7beb6afade94dfeaffef12b25ba" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a week. For the ISO calendar system, it is equal to 7 days.</source>
          <target state="translated">1週間の概念を表す単位。ISOカレンダーシステムでは、7日に相当します。</target>
        </trans-unit>
        <trans-unit id="dc8981fb3925fefa46782dae431dfb58e2298153" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of a year. For the ISO calendar system, it is equal to 12 months. The estimated duration of a year is &lt;code&gt;365.2425 Days&lt;/code&gt;.</source>
          <target state="translated">年の概念を表す単位。ISOカレンダーシステムの場合、12か月です。1年の推定期間は &lt;code&gt;365.2425 Days&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="de69187eb1d3b4eea3cdbefda5cfb59885860c57" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of an era. The ISO calendar system doesn't have eras thus it is impossible to add an era to a date or date-time. The estimated duration of the era is artificially defined as &lt;code&gt;1,000,000,000 Years&lt;/code&gt;.</source>
          <target state="translated">時代の概念を表す単位。ISOカレンダーシステムには元号がないため、日付または日時に元号を追加することはできません。時代の推定期間は、1, &lt;code&gt;1,000,000,000 Years&lt;/code&gt; , 000 , 000年と人為的に定義されています。</target>
        </trans-unit>
        <trans-unit id="35791b835ccae9dcd3e221885df9649918983922" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of an hour. For the ISO calendar system, it is equal to 60 minutes.</source>
          <target state="translated">1時間の概念を表す単位。ISOカレンダーシステムでは60分に相当する。</target>
        </trans-unit>
        <trans-unit id="8e7dc2b57c647629ad3b2fb9b5d230b46dadcbe9" translate="yes" xml:space="preserve">
          <source>Unit that represents the concept of half a day, as used in AM/PM. For the ISO calendar system, it is equal to 12 hours.</source>
          <target state="translated">AM/PMで使われる半日の概念を表す単位。ISOカレンダーシステムでは、12時間に相当します。</target>
        </trans-unit>
        <trans-unit id="9b92cd16f227b89b79f19e9a392fdaee24d87d84" translate="yes" xml:space="preserve">
          <source>Units of date-time, such as years, months, days and hours</source>
          <target state="translated">年、月、日、時間などの日付時間の単位</target>
        </trans-unit>
        <trans-unit id="6d0576845720c0b1785626c136d2a4a4ca679c74" translate="yes" xml:space="preserve">
          <source>Unix lines mode can also be enabled via the embedded flag expression &lt;code&gt;(?d)&lt;/code&gt;.</source>
          <target state="translated">組み込みフラグ式 &lt;code&gt;(?d)&lt;/code&gt; を使用して、Unix行モードを有効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="4421071f358af3669c1359597f1958a36ab5fc0d" translate="yes" xml:space="preserve">
          <source>UnixLoginModule</source>
          <target state="translated">UnixLoginModule</target>
        </trans-unit>
        <trans-unit id="ce1dcb016aacac559d33e4fc06bae15660291a09" translate="yes" xml:space="preserve">
          <source>Unknown properties may be ignored or rejected with an unspecified error, and invalid entries may cause an unspecified error to be thrown.</source>
          <target state="translated">不明なプロパティは無視されたり、指定されていないエラーで拒否されたり、無効なエントリは指定されていないエラーがスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="1f7164f6f4f45e1d46b8983fa63a16225ada84f8" translate="yes" xml:space="preserve">
          <source>UnknownAnnotationValueException</source>
          <target state="translated">UnknownAnnotationValueException</target>
        </trans-unit>
        <trans-unit id="5ac9f69a437206d3932d5b32cb5f4f85e86d9820" translate="yes" xml:space="preserve">
          <source>UnknownAnnotationValueException.getArgument()</source>
          <target state="translated">UnknownAnnotationValueException.getArgument()</target>
        </trans-unit>
        <trans-unit id="fcf6113e11cec18fbc8430dc017992147a7e9c42" translate="yes" xml:space="preserve">
          <source>UnknownAnnotationValueException.getUnknownAnnotationValue()</source>
          <target state="translated">UnknownAnnotationValueException.getUnknownAnnotationValue()</target>
        </trans-unit>
        <trans-unit id="a3b67977250cdfa6c993a3a26f92bc180e1a1e2e" translate="yes" xml:space="preserve">
          <source>UnknownElementException</source>
          <target state="translated">UnknownElementException</target>
        </trans-unit>
        <trans-unit id="ccbe3cde69c50bd8dad81b9601681d15f3e3d503" translate="yes" xml:space="preserve">
          <source>UnknownElementException.getArgument()</source>
          <target state="translated">UnknownElementException.getArgument()</target>
        </trans-unit>
        <trans-unit id="bcd01e5077d5ddfba17ecd307ccbdbcd273c5659" translate="yes" xml:space="preserve">
          <source>UnknownElementException.getUnknownElement()</source>
          <target state="translated">UnknownElementException.getUnknownElement()</target>
        </trans-unit>
        <trans-unit id="21e2422cc44d784b50a6a1c37ec779fb26fb449b" translate="yes" xml:space="preserve">
          <source>UnknownEntityException</source>
          <target state="translated">UnknownEntityException</target>
        </trans-unit>
        <trans-unit id="149ca90d6675fa5edf8f070374f5e53074792ac2" translate="yes" xml:space="preserve">
          <source>UnknownError</source>
          <target state="translated">UnknownError</target>
        </trans-unit>
        <trans-unit id="612b5d62b7a3a98d70cabb056ef7934e9315be42" translate="yes" xml:space="preserve">
          <source>UnknownFormatConversionException</source>
          <target state="translated">UnknownFormatConversionException</target>
        </trans-unit>
        <trans-unit id="1df6a07d1ea42c57c29578495eae5c55f4616857" translate="yes" xml:space="preserve">
          <source>UnknownFormatConversionException.getConversion()</source>
          <target state="translated">UnknownFormatConversionException.getConversion()</target>
        </trans-unit>
        <trans-unit id="190c79e0f12edfcf0f1628da8f89d20aa6d30c13" translate="yes" xml:space="preserve">
          <source>UnknownFormatConversionException.getMessage()</source>
          <target state="translated">UnknownFormatConversionException.getMessage()</target>
        </trans-unit>
        <trans-unit id="2941b908b349709787fa2ff2f86e8bc3390d2123" translate="yes" xml:space="preserve">
          <source>UnknownFormatFlagsException</source>
          <target state="translated">UnknownFormatFlagsException</target>
        </trans-unit>
        <trans-unit id="46f6286f4525762ee40e9fe2dc150006bb7008e9" translate="yes" xml:space="preserve">
          <source>UnknownFormatFlagsException.getFlags()</source>
          <target state="translated">UnknownFormatFlagsException.getFlags()</target>
        </trans-unit>
        <trans-unit id="07434e7dfdfa80d7d5a5c5966720d3a87f859b25" translate="yes" xml:space="preserve">
          <source>UnknownFormatFlagsException.getMessage()</source>
          <target state="translated">UnknownFormatFlagsException.getMessage()</target>
        </trans-unit>
        <trans-unit id="31e16174700d4708a0b027d1150a223776ccdda6" translate="yes" xml:space="preserve">
          <source>UnknownHostException</source>
          <target state="translated">UnknownHostException</target>
        </trans-unit>
        <trans-unit id="5fea50cbc26e1b02ec050895179d21e343b4cc6c" translate="yes" xml:space="preserve">
          <source>UnknownServiceException</source>
          <target state="translated">UnknownServiceException</target>
        </trans-unit>
        <trans-unit id="873797c1b0ee0748c1292bce602e830f46a75dcd" translate="yes" xml:space="preserve">
          <source>UnknownTypeException</source>
          <target state="translated">UnknownTypeException</target>
        </trans-unit>
        <trans-unit id="adf7c08e5eccbba57d462d622178fbd5ad578c06" translate="yes" xml:space="preserve">
          <source>UnknownTypeException.getArgument()</source>
          <target state="translated">UnknownTypeException.getArgument()</target>
        </trans-unit>
        <trans-unit id="796711a768f6656e1b96b4247b71f745cdaa13da" translate="yes" xml:space="preserve">
          <source>UnknownTypeException.getUnknownType()</source>
          <target state="translated">UnknownTypeException.getUnknownType()</target>
        </trans-unit>
        <trans-unit id="191895e9cf7803718b3f7fa13f3a7b768e363fa9" translate="yes" xml:space="preserve">
          <source>Unless explicitly allowed, all methods in this interface might throw a NullPointerException if given a &lt;code&gt;null&lt;/code&gt; argument.</source>
          <target state="translated">明示的に許可されていない限り、このインターフェイスのすべてのメソッドは、 &lt;code&gt;null&lt;/code&gt; 引数が指定された場合にNullPointerExceptionをスローする可能性があります。</target>
        </trans-unit>
        <trans-unit id="4e4ed9fec0d3c36d524624667d67b1bd1013fcda" translate="yes" xml:space="preserve">
          <source>Unless explicitly allowed, all methods in this package might throw a &lt;a href=&quot;../../java/lang/nullpointerexception&quot;&gt;NullPointerException&lt;/a&gt; if given a &lt;code&gt;null&lt;/code&gt; argument or if given a &lt;a href=&quot;../../java/lang/iterable&quot;&gt;list or collection&lt;/a&gt; containing &lt;code&gt;null&lt;/code&gt; elements. Similarly, no method may return &lt;code&gt;null&lt;/code&gt; unless explicitly allowed.</source>
          <target state="translated">明示的に許可されていない限り、このパッケージのすべてのメソッドは、 &lt;code&gt;null&lt;/code&gt; 引数が指定された場合、&lt;a href=&quot;../../java/lang/iterable&quot;&gt;または&lt;/a&gt; &lt;code&gt;null&lt;/code&gt; 要素を含むリストまたはコレクションが指定された場合、&lt;a href=&quot;../../java/lang/nullpointerexception&quot;&gt;NullPointerExceptionを&lt;/a&gt;スローする場合があります。同様に、明示的に許可されていない限り、メソッドは &lt;code&gt;null&lt;/code&gt; を返しません。</target>
        </trans-unit>
        <trans-unit id="bbbabcfe44237242d52f345fb9c30c21cde2d7aa" translate="yes" xml:space="preserve">
          <source>Unless explicitly qualified, the term &quot;request controls&quot; refers to context request controls.</source>
          <target state="translated">明示的に修飾されない限り、「リクエストコントロール」という用語はコンテキストリクエストコントロールを指します。</target>
        </trans-unit>
        <trans-unit id="2a1c1bc18fb07e2defbf56430d05d5e3a56ba193" translate="yes" xml:space="preserve">
          <source>Unless explicitly stated, null values or empty Strings are not valid parameters for the methods in this package. You may expect to see exceptions if these parameters are used.</source>
          <target state="translated">明示的に指定されていない限り、NULL 値や空の文字列は本パッケージのメソッドでは有効なパラメータではありません。これらのパラメータを使用した場合は例外が発生することが予想されます。</target>
        </trans-unit>
        <trans-unit id="c9568542a81bfe0790866590c77394e1f3cb2977" translate="yes" xml:space="preserve">
          <source>Unless otherwise mentioned, passing a &lt;code&gt;null&lt;/code&gt; parameter into any method of a &lt;code&gt;Scanner&lt;/code&gt; will cause a &lt;code&gt;NullPointerException&lt;/code&gt; to be thrown.</source>
          <target state="translated">特に明記されていない限り、 &lt;code&gt;Scanner&lt;/code&gt; メソッドに &lt;code&gt;null&lt;/code&gt; パラメーターを渡すと、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="78709c7df6da949cdf1d000c975e6cb8a90e37ee" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, invoking a method of any class or interface in this package created by one &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; with a parameter that is an object created by another provider, will throw &lt;a href=&quot;providermismatchexception&quot;&gt;&lt;code&gt;ProviderMismatchException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">特に明記されていない限り、ある&lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;によって作成されたこのパッケージのクラスまたはインターフェイスのメソッドを、別のプロバイダーによって作成されたオブジェクトであるパラメーターを使用して呼び出すと、&lt;a href=&quot;providermismatchexception&quot;&gt; &lt;code&gt;ProviderMismatchException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="575e42d898d9f55e332136f6413aa0ba13ab019f" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, methods that attempt to access the file system will throw &lt;a href=&quot;closedfilesystemexception&quot;&gt;&lt;code&gt;ClosedFileSystemException&lt;/code&gt;&lt;/a&gt; when invoked on objects associated with a &lt;a href=&quot;filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that has been &lt;a href=&quot;filesystem#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;. Additionally, any methods that attempt write access to a file system will throw &lt;a href=&quot;readonlyfilesystemexception&quot;&gt;&lt;code&gt;ReadOnlyFileSystemException&lt;/code&gt;&lt;/a&gt; when invoked on an object associated with a &lt;a href=&quot;filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that only provides read-only access.</source>
          <target state="translated">特に明記されていない限り、ファイルシステムにアクセスしようとするメソッドは、&lt;a href=&quot;filesystem#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;られている&lt;a href=&quot;filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; に&lt;/a&gt;関連付けられているオブジェクトに対して呼び出されると、&lt;a href=&quot;closedfilesystemexception&quot;&gt; &lt;code&gt;ClosedFileSystemException&lt;/code&gt; &lt;/a&gt;をスローします。さらに、ファイルシステムへの書き込みアクセスを試みるメソッドは、読み取り専用アクセスのみを提供する&lt;a href=&quot;filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; に&lt;/a&gt;関連付けられたオブジェクトで呼び出されると、&lt;a href=&quot;readonlyfilesystemexception&quot;&gt; &lt;code&gt;ReadOnlyFileSystemException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="ba4a60eee36e8f2e7e69b165fb211c08a29ffaa3" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">特に明記されていない限り、このパッケージのクラスまたはインターフェイスのコンストラクターまたはメソッドに &lt;code&gt;null&lt;/code&gt; 引数を渡すと、&lt;a href=&quot;../../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="2f28cfcd296be66cf8e454f1da31b3a375a596a3" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">特に明記されていない限り、このパッケージのクラスまたはインターフェイスのコンストラクターまたはメソッドに &lt;code&gt;null&lt;/code&gt; 引数を渡すと、&lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="41fa6596c5425481131a295cd4cbf472eafb631a" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">特に明記されていない限り、このパッケージのクラスまたはインターフェイスのコンストラクターまたはメソッドに &lt;code&gt;null&lt;/code&gt; 引数を渡すと、&lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="3fc07ccda188c601bd06fa95e43277f3ffe17507" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">特に明記されていない限り、このパッケージのクラスまたはインターフェイスのコンストラクターまたはメソッドに &lt;code&gt;null&lt;/code&gt; 引数を渡すと、&lt;a href=&quot;../nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="519217a6ec54d7d7ddf908deb133eddba7a29b2c" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in this class will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">特に明記しない限り、このクラスのコンストラクターまたはメソッドに &lt;code&gt;null&lt;/code&gt; 引数を渡すと、&lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="148943c4bf85ff86b9df78f30a4f5ae82fb4254a" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in this class will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown. If the verify flag is on when opening a signed jar file, the content of the file is verified against its signature embedded inside the file. Please note that the verification process does not include validating the signer's certificate. A caller should inspect the return value of &lt;a href=&quot;jarentry#getCodeSigners--&quot;&gt;&lt;code&gt;JarEntry.getCodeSigners()&lt;/code&gt;&lt;/a&gt; to further determine if the signature can be trusted.</source>
          <target state="translated">特に明記しない限り、このクラスのコンストラクターまたはメソッドに &lt;code&gt;null&lt;/code&gt; 引数を渡すと、&lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。署名されたjarファイルを開くときに検証フラグがオンの場合、ファイルの内容は、ファイル内に埋め込まれた署名と照合されて検証されます。検証プロセスには、署名者の証明書の検証は含まれていないことに注意してください。呼び出し元は、&lt;a href=&quot;jarentry#getCodeSigners--&quot;&gt; &lt;code&gt;JarEntry.getCodeSigners()&lt;/code&gt; の&lt;/a&gt;戻り値を検査して、署名が信頼できるかどうかをさらに判断する必要があります。</target>
        </trans-unit>
        <trans-unit id="da6e36f8047ec489c168eb5c0df5fc37cf73b7de" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in this class will cause a &lt;a href=&quot;nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">特に明記しない限り、このクラスのコンストラクターまたはメソッドに &lt;code&gt;null&lt;/code&gt; 引数を渡すと、&lt;a href=&quot;nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="d03c9f155b5b86733c35fc9ddab778b085ad290a" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method of any class or interface in this package will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown. Additionally, invoking a method with a collection containing a &lt;code&gt;null&lt;/code&gt; element will cause a &lt;code&gt;NullPointerException&lt;/code&gt;, unless otherwise specified.</source>
          <target state="translated">特に明記しない限り、このパッケージのクラスまたはインターフェイスのコンストラクターまたはメソッドに &lt;code&gt;null&lt;/code&gt; 引数を渡すと、&lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。また、特に指定がない限り、 &lt;code&gt;null&lt;/code&gt; 要素を含むコレクションを使用してメソッドを呼び出すと、 &lt;code&gt;NullPointerException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="2dd2f3c2e26b46755d44de7cd577a89aa135ee80" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a method in any class or interface in this package will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">特に明記しない限り、このパッケージのクラスまたはインターフェイスのメソッドに &lt;code&gt;null&lt;/code&gt; 引数を渡すと、&lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="1011613b3cdcfe5ce173a1cfe95d5c657a0b987b" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a method of this class will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">特に記載がない限り、このクラスのメソッドに &lt;code&gt;null&lt;/code&gt; 引数を渡すと、&lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="5897d3035eb14e2aed131d3c8174a4a2265523c0" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a null argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown. The Javadoc &quot;@param&quot; definition is used to summarise the null-behavior. The &quot;@throws &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt;&quot; is not explicitly documented in each method.</source>
          <target state="translated">特に明記しない限り、このパッケージのクラスまたはインターフェースのコンストラクターまたはメソッドにnull引数を渡すと、&lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。Javadocの &quot;@param&quot;定義は、ヌル動作を要約するために使用されます。「@throws &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;」は、各メソッドに明示的に記載されていません。</target>
        </trans-unit>
        <trans-unit id="9e472fbca8edbfea94fc80e5a070253d0e1e683c" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a null argument to a constructor or method in any class or interface in this package will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown. The Javadoc &quot;@param&quot; definition is used to summarise the null-behavior. The &quot;@throws &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt;&quot; is not explicitly documented in each method.</source>
          <target state="translated">特に明記しない限り、このパッケージのクラスまたはインターフェースのコンストラクターまたはメソッドにnull引数を渡すと、&lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。Javadocの &quot;@param&quot;定義は、ヌル動作を要約するために使用されます。「@throws &lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;」は、各メソッドに明示的に記載されていません。</target>
        </trans-unit>
        <trans-unit id="0c4a3636419682b1e8bf8c359ce1aaae4320191f" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, passing a null parameter to any of the methods in a &lt;code&gt;BitSet&lt;/code&gt; will result in a &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">特に明記しない限り、 &lt;code&gt;BitSet&lt;/code&gt; のメソッドのいずれかにnullパラメータを渡すと、 &lt;code&gt;NullPointerException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="c633aef659f1a04ad0d51e61779ab52d9f4a2b68" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, the behavior of passing a null argument to a constructor or method in this class will cause NullPointerException to be thrown.</source>
          <target state="translated">特に断りのない限り、このクラスのコンストラクタやメソッドに null 引数を渡す動作をすると NullPointerException がスローされます。</target>
        </trans-unit>
        <trans-unit id="8b9fb49c5e8ea108da4cccfa5d0e6fabb7af023f" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, the behavior of passing a null argument to a constructor or method in this class will cause a NullPointerException to be thrown.</source>
          <target state="translated">特に指定がない限り、このクラスのコンストラクタやメソッドに null 引数を渡すと NullPointerException がスローされます。</target>
        </trans-unit>
        <trans-unit id="2cad149fe28c03dd42ad8a1db9886016e259c82e" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified in a particular implementation, the collections returned by methods in this package should be expected to be unmodifiable by the caller and unsafe for concurrent access.</source>
          <target state="translated">特定の実装で指定されていない限り、本パッケージのメソッドが返すコレクションは、呼び出し側では変更できず、同時アクセスでは安全ではないことが予想されます。</target>
        </trans-unit>
        <trans-unit id="96310fc9af4ef35b4abe8844b92d70aa17af1438" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, a write operation will return only after writing all of the</source>
          <target state="translated">特に指定がない限り、書き込み操作は</target>
        </trans-unit>
        <trans-unit id="f29a5be5730826396efc89042e91d41df99ac386" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, methods in this package will throw a &lt;code&gt;NullPointerException&lt;/code&gt; if given a &lt;code&gt;null&lt;/code&gt; argument.</source>
          <target state="translated">特に指定されていない限り、このパッケージのメソッドは、 &lt;code&gt;null&lt;/code&gt; 引数が指定された場合に &lt;code&gt;NullPointerException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="86ee7f20bb531477c062e281908d7a13826f2d70" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, passing a &lt;code&gt;null&lt;/code&gt; argument to any method in this class will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">特に指定のない限り、このクラスのメソッドに &lt;code&gt;null&lt;/code&gt; 引数を渡すと、&lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="b4f38a129f007381ecfb87c2b09a592beea0d4cd" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, passing a &lt;code&gt;null&lt;/code&gt; argument to any method in this interface will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">特に指定のない限り、このインターフェイスのメソッドに &lt;code&gt;null&lt;/code&gt; 引数を渡すと、&lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="e7a1569f2ba17f0d68ed6ede84cbaefb83766fda" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, passing a &lt;code&gt;null&lt;/code&gt; argument to any method or constructor in this class will cause a &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">特に指定がない限り、このクラスのメソッドまたはコンストラクターに &lt;code&gt;null&lt;/code&gt; 引数を渡すと、&lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="18e8d60f6f6191b5d343d951ccddd3275d6d82b4" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, the methods defined in this class are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.</source>
          <target state="translated">特に指定がない限り、このクラスで定義されているメソッドはスレッドセーフではありません。一つのオブジェクトに同時にアクセスする必要のある複数のスレッドは、それぞれのスレッド間で同期をとり、必要なロックを提供しなければなりません。複数のスレッドがそれぞれ別のオブジェクトを操作する場合は、同期をとる必要はありません。</target>
        </trans-unit>
        <trans-unit id="13ae8e09057b0719f91a07fb227d5641e1151757" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, the methods defined in this interface are not thread-safe. Multiple threads that need to access a single object concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating separate objects need not synchronize.</source>
          <target state="translated">特に指定がない限り、このインタフェースで定義されたメソッドはスレッドセーフではありません。一つのオブジェクトに同時にアクセスする必要のある複数のスレッドは、それぞれのスレッド間で同期をとり、必要なロックを提供しなければなりません。複数のスレッドがそれぞれ別のオブジェクトを操作する場合は、同期をとる必要はありません。</target>
        </trans-unit>
        <trans-unit id="319eccd3d80767b4a14043234f4a5487bd57fab7" translate="yes" xml:space="preserve">
          <source>Unless overridden, this method re-throws the I/O exception that prevented the file from being visited.</source>
          <target state="translated">オーバーライドされない限り、このメソッドは、ファイルの訪問を妨げたI/O例外を再スローします。</target>
        </trans-unit>
        <trans-unit id="c50b0d2bd56992ce85a536c2dc0e2245e45ed5e3" translate="yes" xml:space="preserve">
          <source>Unless overridden, this method returns &lt;a href=&quot;filevisitresult#CONTINUE&quot;&gt;&lt;code&gt;CONTINUE&lt;/code&gt;&lt;/a&gt; if the directory iteration completes without an I/O exception; otherwise this method re-throws the I/O exception that caused the iteration of the directory to terminate prematurely.</source>
          <target state="translated">オーバーライドされない限り、I / O例外なしでディレクトリの反復が完了すると、このメソッドは&lt;a href=&quot;filevisitresult#CONTINUE&quot;&gt; &lt;code&gt;CONTINUE&lt;/code&gt; を&lt;/a&gt;返します。そうでない場合、このメソッドは、ディレクトリの反復が途中で終了する原因となったI / O例外を再度スローします。</target>
        </trans-unit>
        <trans-unit id="ca43281015c19de71d3001f16859b15bc9ddf4e8" translate="yes" xml:space="preserve">
          <source>Unless overridden, this method returns &lt;a href=&quot;filevisitresult#CONTINUE&quot;&gt;&lt;code&gt;CONTINUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オーバーライドされない限り、このメソッドは&lt;a href=&quot;filevisitresult#CONTINUE&quot;&gt; &lt;code&gt;CONTINUE&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="3fd1f7c65dcf34e673be16c699867c7f3461f8dd" translate="yes" xml:space="preserve">
          <source>Unless overridden, this method synchronizes on the result of &lt;a href=&quot;classloader#getClassLoadingLock-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;getClassLoadingLock&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method during the entire class loading process.</source>
          <target state="translated">オーバーライドされない限り、このメソッドは、クラスの読み込みプロセス全体で&lt;a href=&quot;classloader#getClassLoadingLock-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;getClassLoadingLock&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドの結果と同期します。</target>
        </trans-unit>
        <trans-unit id="584d1058692777c9f126d29d03cd80e6e7d0aade" translate="yes" xml:space="preserve">
          <source>Unless the current thread is interrupting itself, which is always permitted, the &lt;a href=&quot;thread#checkAccess--&quot;&gt;&lt;code&gt;checkAccess&lt;/code&gt;&lt;/a&gt; method of this thread is invoked, which may cause a &lt;a href=&quot;securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">常に許可されている現在のスレッドがそれ自体に割り込みをかけない限り、このスレッドの&lt;a href=&quot;thread#checkAccess--&quot;&gt; &lt;code&gt;checkAccess&lt;/code&gt; &lt;/a&gt;メソッドが呼び出され、これにより&lt;a href=&quot;securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt;がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="3a16f7c973ffd2f08d07a123732165027a06ae15" translate="yes" xml:space="preserve">
          <source>Unless this Spliterator covers an infinite number of elements, repeated calls to &lt;code&gt;trySplit()&lt;/code&gt; must eventually return &lt;code&gt;null&lt;/code&gt;. Upon non-null return:</source>
          <target state="translated">このSpliteratorが無限の数の要素をカバーしない限り、trySplit &lt;code&gt;trySplit()&lt;/code&gt; を繰り返し呼び出すと、最終的に &lt;code&gt;null&lt;/code&gt; が返される必要があります。null以外の戻り値：</target>
        </trans-unit>
        <trans-unit id="c1efa23d90162cc950959c549911fe2a287f1795" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;midichannel#allSoundOff--&quot;&gt;&lt;code&gt;allSoundOff()&lt;/code&gt;&lt;/a&gt;, this method applies to only a specific channel, not to all channels. Further, it silences not only currently sounding notes, but also subsequently received notes. It is possible that the underlying synthesizer does not support muting channels. In order to verify that a call to &lt;code&gt;setMute&lt;/code&gt; was successful, use &lt;code&gt;getMute&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;midichannel#allSoundOff--&quot;&gt; &lt;code&gt;allSoundOff()&lt;/code&gt; &lt;/a&gt;とは異なり、このメソッドは特定のチャネルにのみ適用され、すべてのチャネルには適用されません。さらに、現在鳴っている音だけでなく、後で受信した音も消音します。基になるシンセサイザがミュートチャネルをサポートしていない可能性があります。 &lt;code&gt;setMute&lt;/code&gt; の呼び出しが成功したことを確認するには、getMuteを使用し &lt;code&gt;getMute&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60ae1f36bc32e4f356c6d3deb8eeb0348ec7fd31" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslengine#setNeedClientAuth-boolean-&quot;&gt;&lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if this option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="translated">&lt;a href=&quot;sslengine#setNeedClientAuth-boolean-&quot;&gt; &lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt; &lt;/a&gt;とは異なり、このオプションが設定されていて、クライアントが自身に関する認証情報を提供しないことを選択した場合、</target>
        </trans-unit>
        <trans-unit id="0cb89c58b43228846f62c6aae66a0daa1bf8d799" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslengine#setWantClientAuth-boolean-&quot;&gt;&lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if this option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="translated">&lt;a href=&quot;sslengine#setWantClientAuth-boolean-&quot;&gt; &lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt; &lt;/a&gt;とは異なり、このオプションが設定されていて、クライアントが自身に関する認証情報を提供しないことを選択した場合、</target>
        </trans-unit>
        <trans-unit id="9da7b84d98871dab41e843834d9a44726d60f352" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslserversocket#setNeedClientAuth-boolean-&quot;&gt;&lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if the accepted socket's option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="translated">&lt;a href=&quot;sslserversocket#setNeedClientAuth-boolean-&quot;&gt; &lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt; &lt;/a&gt;とは異なり、受け入れられたソケットのオプションが設定されていて、クライアントが自身に関する認証情報を提供しないことを選択した場合、</target>
        </trans-unit>
        <trans-unit id="92a4efa13c7340a6315dd866755c49dcb3564943" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslserversocket#setWantClientAuth-boolean-&quot;&gt;&lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if the accepted socket's option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="translated">&lt;a href=&quot;sslserversocket#setWantClientAuth-boolean-&quot;&gt; &lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt; &lt;/a&gt;とは異なり、受け入れられたソケットのオプションが設定されていて、クライアントが自身に関する認証情報を提供しないことを選択した場合、</target>
        </trans-unit>
        <trans-unit id="9be2460c8fcabe8ba8908f8cd88a3111899cc59a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslsocket#getSession--&quot;&gt;&lt;code&gt;SSLSocket.getSession()&lt;/code&gt;&lt;/a&gt; this method does not block until handshaking is complete.</source>
          <target state="translated">&lt;a href=&quot;sslsocket#getSession--&quot;&gt; &lt;code&gt;SSLSocket.getSession()&lt;/code&gt; &lt;/a&gt;とは異なり、このメソッドはハンドシェイクが完了するまでブロックしません。</target>
        </trans-unit>
        <trans-unit id="5cd0f644c77b7eb334c747c6648451da46ece2c5" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslsocket#getSession--&quot;&gt;&lt;code&gt;getSession()&lt;/code&gt;&lt;/a&gt;, this method does not initiate the initial handshake and does not block until handshaking is complete.</source>
          <target state="translated">&lt;a href=&quot;sslsocket#getSession--&quot;&gt; &lt;code&gt;getSession()&lt;/code&gt; &lt;/a&gt;とは異なり、このメソッドは初期ハンドシェイクを開始せず、ハンドシェイクが完了するまでブロックしません。</target>
        </trans-unit>
        <trans-unit id="984cefad788e4536a3aa3b7f44ce8a1686f5b115" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslsocket#setNeedClientAuth-boolean-&quot;&gt;&lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if this option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="translated">&lt;a href=&quot;sslsocket#setNeedClientAuth-boolean-&quot;&gt; &lt;code&gt;setNeedClientAuth(boolean)&lt;/code&gt; &lt;/a&gt;とは異なり、このオプションが設定されていて、クライアントが自身に関する認証情報を提供しないことを選択した場合、</target>
        </trans-unit>
        <trans-unit id="a28d8dca14013c04080ef19149f9f9baac7573f4" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;sslsocket#setWantClientAuth-boolean-&quot;&gt;&lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;, if this option is set and the client chooses not to provide authentication information about itself,</source>
          <target state="translated">&lt;a href=&quot;sslsocket#setWantClientAuth-boolean-&quot;&gt; &lt;code&gt;setWantClientAuth(boolean)&lt;/code&gt; &lt;/a&gt;とは異なり、このオプションが設定されていて、クライアントが自身に関する認証情報を提供しないことを選択した場合、</target>
        </trans-unit>
        <trans-unit id="0cbe19a0262394da434d6abc194ec24ce4d07b3e" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;Comparable&lt;/code&gt;, a comparator may optionally permit comparison of null arguments, while maintaining the requirements for an equivalence relation.</source>
          <target state="translated">&lt;code&gt;Comparable&lt;/code&gt; とは異なり、コンパレーターは、等価関係の要件を維持しながら、オプションでnull引数の比較を許可する場合があります。</target>
        </trans-unit>
        <trans-unit id="ad06ca2eed8bc074e3c796515d89bb4334904d1a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;MutableCallSite&lt;/code&gt;, there is no &lt;a href=&quot;mutablecallsite#syncAll-java.lang.invoke.MutableCallSite:A-&quot;&gt;syncAll operation&lt;/a&gt; on volatile call sites, since every write to a volatile variable is implicitly synchronized with reader threads.</source>
          <target state="translated">&lt;code&gt;MutableCallSite&lt;/code&gt; とは異なり、揮発性変数へのすべての書き込みはリーダースレッドと暗黙的に同期されるため、揮発性呼び出しサイトでは&lt;a href=&quot;mutablecallsite#syncAll-java.lang.invoke.MutableCallSite:A-&quot;&gt;syncAll操作&lt;/a&gt;はありません。</target>
        </trans-unit>
        <trans-unit id="070d459702e2b70bdf5928c321926da844b3ef83" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;SSLSocket&lt;/code&gt;, all methods of SSLEngine are non-blocking. &lt;code&gt;SSLEngine&lt;/code&gt; implementations may require the results of tasks that may take an extended period of time to complete, or may even block. For example, a TrustManager may need to connect to a remote certificate validation service, or a KeyManager might need to prompt a user to determine which certificate to use as part of client authentication. Additionally, creating cryptographic signatures and verifying them can be slow, seemingly blocking.</source>
          <target state="translated">&lt;code&gt;SSLSocket&lt;/code&gt; とは異なり、SSLEngineのすべてのメソッドは非ブロッキングです。 &lt;code&gt;SSLEngine&lt;/code&gt; の実装では、タスクの結果が必要になる場合があり、完了までに長時間かかる場合や、ブロックされる場合さえあります。たとえば、TrustManagerがリモートの証明書検証サービスに接続する必要がある場合や、KeyManagerがユーザーにクライアント認証の一部として使用する証明書を決定するように要求する必要がある場合があります。さらに、暗号化署名を作成して検証するのに時間がかかり、ブロックされているように見えます。</target>
        </trans-unit>
        <trans-unit id="366fd30ee70fdf33436603fe43f8caef8124f1c8" translate="yes" xml:space="preserve">
          <source>Unlike a &lt;a href=&quot;../keystore&quot;&gt;&lt;code&gt;KeyStore&lt;/code&gt;&lt;/a&gt;, which provides access to a cache of private keys and trusted certificates, a &lt;code&gt;CertStore&lt;/code&gt; is designed to provide access to a potentially vast repository of untrusted certificates and CRLs. For example, an LDAP implementation of &lt;code&gt;CertStore&lt;/code&gt; provides access to certificates and CRLs stored in one or more directories using the LDAP protocol and the schema as defined in the RFC service attribute.</source>
          <target state="translated">秘密鍵と信頼できる証明書のキャッシュへのアクセスを提供する&lt;a href=&quot;../keystore&quot;&gt; &lt;code&gt;KeyStore&lt;/code&gt; &lt;/a&gt;とは異なり、 &lt;code&gt;CertStore&lt;/code&gt; は、信頼できない証明書とCRLの潜在的に膨大なリポジトリへのアクセスを提供するように設計されています。たとえば、 &lt;code&gt;CertStore&lt;/code&gt; の LDAP実装は、RFCサービス属性で定義されているLDAPプロトコルとスキーマを使用して、1つ以上のディレクトリに格納されている証明書とCRLへのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="7c8bb040cae75de3ac6d4a317642fa2a7e45e882" translate="yes" xml:space="preserve">
          <source>Unlike a standard &lt;code&gt;OutputStream&lt;/code&gt;, ImageOutputStream extends its counterpart, &lt;code&gt;ImageInputStream&lt;/code&gt;. Thus it is possible to read from the stream as it is being written. The same seek and flush positions apply to both reading and writing, although the semantics for dealing with a non-zero bit offset before a byte-aligned write are necessarily different from the semantics for dealing with a non-zero bit offset before a byte-aligned read. When reading bytes, any bit offset is set to 0 before the read; when writing bytes, a non-zero bit offset causes the remaining bits in the byte to be written as 0s. The byte-aligned write then starts at the next byte position.</source>
          <target state="translated">標準とは違っ &lt;code&gt;OutputStream&lt;/code&gt; 、ImageOutputStreamのはその対応、拡張 &lt;code&gt;ImageInputStream&lt;/code&gt; 。したがって、書き込まれているストリームから読み取ることができます。同じシーク位置とフラッシュ位置が読み取りと書き込みの両方に適用されますが、バイト境界整列書き込みの前に非ゼロビットオフセットを処理するためのセマンティクスは、バイト前の非ゼロビットオフセットを処理するためのセマンティクスとは必ずしも異なります。アラインリード。バイトを読み取る場合、ビットオフセットは読み取り前に0に設定されます。バイトを書き込むとき、ゼロ以外のビットオフセットにより、バイトの残りのビットは0として書き込まれます。次に、バイト境界で整列された書き込みは、次のバイト位置から始まります。</target>
        </trans-unit>
        <trans-unit id="58e072cb09b7c8d213ff17bb11b2c4a1806aed52" translate="yes" xml:space="preserve">
          <source>Unlike a weighted list, language ranges in a prioritized list are sorted in the descending order based on its priority. The first language range has the highest priority and meets the user's preference most.</source>
          <target state="translated">重みのあるリストとは異なり、優先順位のあるリストの言語範囲は、優先順位に基づいて降順に並べ替えられます。最初の言語範囲が最も優先度が高く、ユーザーの好みを最も満たしています。</target>
        </trans-unit>
        <trans-unit id="2c3736112be6a7d8484b27d01a88aab8c69d94b5" translate="yes" xml:space="preserve">
          <source>Unlike environment properties, request controls of a context instance &lt;em&gt;are not inherited&lt;/em&gt; by context instances that are derived from it. Derived context instances have &lt;code&gt;null&lt;/code&gt; as their context request controls. You must set the request controls of a derived context instance explicitly using &lt;code&gt;setRequestControls()&lt;/code&gt;.</source>
          <target state="translated">環境プロパティとは異なり、コンテキストインスタンスのリクエストコントロールは、それから派生&lt;em&gt;し&lt;/em&gt;たコンテキストインスタンスによって&lt;em&gt;継承&lt;/em&gt;され&lt;em&gt;ません&lt;/em&gt;。派生したコンテキストインスタンスは、コンテキストリクエストコントロールとして &lt;code&gt;null&lt;/code&gt; を持ちます。 &lt;code&gt;setRequestControls()&lt;/code&gt; を使用して、派生コンテキストインスタンスのリクエストコントロールを明示的に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="102500bfaa775c3d4fc30fa7b2d14dc7a97aaa73" translate="yes" xml:space="preserve">
          <source>Unlike most methods in this class, this method does not throw security exceptions. If a security manager exists and its &lt;a href=&quot;../lang/securitymanager#checkRead-java.lang.String-&quot;&gt;&lt;code&gt;SecurityManager.checkRead(String)&lt;/code&gt;&lt;/a&gt; method denies read access to a particular root directory, then that directory will not appear in the result.</source>
          <target state="translated">このクラスのほとんどのメソッドとは異なり、このメソッドはセキュリティ例外をスローしません。セキュリティーマネージャーが存在し、その&lt;a href=&quot;../lang/securitymanager#checkRead-java.lang.String-&quot;&gt; &lt;code&gt;SecurityManager.checkRead(String)&lt;/code&gt; &lt;/a&gt;メソッドが特定のルートディレクトリへの読み取りアクセスを拒否する場合、そのディレクトリは結果に表示されません。</target>
        </trans-unit>
        <trans-unit id="878e687971411d528990c43760e85c269e3be5b9" translate="yes" xml:space="preserve">
          <source>Unlike most other methods in this class, this method &lt;em&gt;does&lt;/em&gt; close the provided &lt;code&gt;ImageInputStream&lt;/code&gt; after the read operation has completed, unless &lt;code&gt;null&lt;/code&gt; is returned, in which case this method &lt;em&gt;does not&lt;/em&gt; close the stream.</source>
          <target state="translated">このクラスの他のほとんどのメソッドとは異なり、 &lt;code&gt;null&lt;/code&gt; が返されない限り、このメソッド&lt;em&gt;は&lt;/em&gt;読み取り操作の完了後に指定された &lt;code&gt;ImageInputStream&lt;/code&gt; を閉じます。この場合、このメソッド&lt;em&gt;は&lt;/em&gt;ストリームを閉じ&lt;em&gt;ません&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b46cd822496b8f3982f8ff093f808c41c48712b9" translate="yes" xml:space="preserve">
          <source>Unlike most printing attributes which are immutable once constructed, class PrinterStateReasons is designed to be mutable; you can add &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; objects to an existing PrinterStateReasons object and remove them again. However, like class &lt;a href=&quot;../../../../java/util/hashmap&quot;&gt;&lt;code&gt;java.util.HashMap&lt;/code&gt;&lt;/a&gt;, class PrinterStateReasons is not multiple thread safe. If a PrinterStateReasons object will be used by multiple threads, be sure to synchronize its operations (e.g., using a synchronized map view obtained from class &lt;a href=&quot;../../../../java/util/collections&quot;&gt;&lt;code&gt;java.util.Collections&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">一度作成すると不変であるほとんどの印刷属性とは異なり、PrinterStateReasonsクラスは変更可能に設計されています。&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;オブジェクトを既存のPrinterStateReasonsオブジェクトに追加し、それらを再度削除できます。ただし、クラス&lt;a href=&quot;../../../../java/util/hashmap&quot;&gt; &lt;code&gt;java.util.HashMap&lt;/code&gt; の&lt;/a&gt;ように、クラスPrinterStateReasonsはマルチスレッドセーフではありません。 PrinterStateReasonsオブジェクトが複数のスレッドで使用される場合は、必ずその操作を同期してください（たとえば、クラス&lt;a href=&quot;../../../../java/util/collections&quot;&gt; &lt;code&gt;java.util.Collections&lt;/code&gt; &lt;/a&gt;から取得した同期されたマップビューを使用して）。</target>
        </trans-unit>
        <trans-unit id="c7d269bced9c09d6f686a5195b5a4c09fb7cc027" translate="yes" xml:space="preserve">
          <source>Unlike other types of resource bundle, you don't subclass &lt;code&gt;PropertyResourceBundle&lt;/code&gt;. Instead, you supply properties files containing the resource data. &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; will automatically look for the appropriate properties file and create a &lt;code&gt;PropertyResourceBundle&lt;/code&gt; that refers to it. See &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; for a complete description of the search and instantiation strategy.</source>
          <target state="translated">他のタイプのリソースバンドルとは異なり、 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; をサブクラス化する必要はありません。代わりに、リソースデータを含むプロパティファイルを指定します。 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; は、適切なプロパティファイルを自動的に検索し、それを参照する &lt;code&gt;PropertyResourceBundle&lt;/code&gt; を作成します。検索とインスタンス化の戦略の詳細については、&lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="219b990a3e2722a30618f12bcdc2334083d3d781" translate="yes" xml:space="preserve">
          <source>Unlike sets, lists typically allow duplicate elements. More formally, lists typically allow pairs of elements &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; such that &lt;code&gt;e1.equals(e2)&lt;/code&gt;, and they typically allow multiple null elements if they allow null elements at all. It is not inconceivable that someone might wish to implement a list that prohibits duplicates, by throwing runtime exceptions when the user attempts to insert them, but we expect this usage to be rare.</source>
          <target state="translated">セットとは異なり、リストは通常​​、重複する要素を許可します。より正式には、リストは通常、 &lt;code&gt;e1.equals(e2)&lt;/code&gt; のような要素 &lt;code&gt;e1&lt;/code&gt; と &lt;code&gt;e2&lt;/code&gt; のペアを許可し、null要素を許可する場合は通常、複数のnull要素を許可します。ユーザーが重複を挿入しようとしたときにランタイム例外をスローすることにより、重複を禁止するリストを実装したいと考える人も少なくありませんが、このような使用法はまれであると予想されます。</target>
        </trans-unit>
        <trans-unit id="5f5803225dfa74d3c56da4861261faabd555cf07" translate="yes" xml:space="preserve">
          <source>Unlike soft and weak references, phantom references are not automatically cleared by the garbage collector as they are enqueued. An object that is reachable via phantom references will remain so until all such references are cleared or themselves become unreachable.</source>
          <target state="translated">ソフト参照や弱い参照とは異なり、ファントム参照はガベージコレクタによって自動的にクリアされるわけではありません。ファントム参照を介して到達可能なオブジェクトは、そのような参照がすべてクリアされるか、それ自体が到達不可能になるまで、そのままです。</target>
        </trans-unit>
        <trans-unit id="a290522c4fcc049744c3e569008d07ea66088fc1" translate="yes" xml:space="preserve">
          <source>Unlike some of the numeric methods of class &lt;code&gt;StrictMath&lt;/code&gt;, all implementations of the equivalent functions of class &lt;code&gt;Math&lt;/code&gt; are not defined to return the bit-for-bit same results. This relaxation permits better-performing implementations where strict reproducibility is not required.</source>
          <target state="translated">クラス &lt;code&gt;StrictMath&lt;/code&gt; の一部の数値メソッドとは異なり、クラス &lt;code&gt;Math&lt;/code&gt; の同等の関数のすべての実装は、ビットごとに同じ結果を返すように定義されていません。この緩和により、厳密な再現性を必要としない、より優れたパフォーマンスの実装が可能になります。</target>
        </trans-unit>
        <trans-unit id="39a88f70205b960b7a32b11a7de43d60ebd53f17" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;files#delete-java.nio.file.Path-&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method, this method does not first examine the file to determine if the file is a directory. Whether a directory is deleted by this method is system dependent and therefore not specified. If the file is a symbolic link, then the link itself, not the final target of the link, is deleted. When the parameter is a relative path then the file to delete is relative to this open directory.</source>
          <target state="translated">&lt;a href=&quot;files#delete-java.nio.file.Path-&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt;メソッドとは異なり、このメソッドは最初にファイルを調べて、ファイルがディレクトリかどうかを判断しません。この方法でディレクトリが削除されるかどうかはシステムに依存するため、指定されていません。ファイルがシンボリックリンクの場合、リンクの最終的なターゲットではなく、リンク自体が削除されます。パラメータが相対パスの場合、削除するファイルはこの開いているディレクトリからの相対パスです。</target>
        </trans-unit>
        <trans-unit id="e6bae3306a9153178c1bed49d0fccefb5dcab836" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;files#delete-java.nio.file.Path-&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method, this method does not first examine the file to determine if the file is a directory. Whether non-directories are deleted by this method is system dependent and therefore not specified. When the parameter is a relative path then the directory to delete is relative to this open directory.</source>
          <target state="translated">&lt;a href=&quot;files#delete-java.nio.file.Path-&quot;&gt; &lt;code&gt;delete()&lt;/code&gt; &lt;/a&gt;メソッドとは異なり、このメソッドは最初にファイルを調べて、ファイルがディレクトリかどうかを判断しません。この方法でディレクトリ以外が削除されるかどうかはシステムに依存するため、指定されていません。パラメータが相対パスの場合、削除するディレクトリはこの開いているディレクトリからの相対パスです。</target>
        </trans-unit>
        <trans-unit id="e7dba1426e752b9874c2ce36095aaa659fd0d3dd" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;jobkoctets&quot;&gt;&lt;code&gt;JobKOctets&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jobimpressions&quot;&gt;&lt;code&gt;JobImpressions&lt;/code&gt;&lt;/a&gt; attributes, the JobMediaSheets value must include the multiplicative factors contributed by the number of copies specified by the &lt;a href=&quot;copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute and a &quot;number of copies&quot; instruction embedded in the document data, if any. This difference allows the system administrator to control the lower and upper bounds of both (1) the size of the document(s) with &lt;a href=&quot;jobkoctetssupported&quot;&gt;&lt;code&gt;JobKOctetsSupported&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jobimpressionssupported&quot;&gt;&lt;code&gt;JobImpressionsSupported&lt;/code&gt;&lt;/a&gt; and (2) the size of the job with &lt;a href=&quot;jobmediasheetssupported&quot;&gt;&lt;code&gt;JobMediaSheetsSupported&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;jobkoctets&quot;&gt; &lt;code&gt;JobKOctets&lt;/code&gt; &lt;/a&gt;属性と&lt;a href=&quot;jobimpressions&quot;&gt; &lt;code&gt;JobImpressions&lt;/code&gt; &lt;/a&gt;属性とは異なり、JobMediaSheets値には、&lt;a href=&quot;copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt;属性で指定されたコピー数と、ドキュメントデータに埋め込まれている「コピー数」命令がある場合は、それらによってもたらされる乗法係数を含める必要があります。この違いにより、システム管理者は（1）&lt;a href=&quot;jobkoctetssupported&quot;&gt; &lt;code&gt;JobKOctetsSupported&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;jobimpressionssupported&quot;&gt; &lt;code&gt;JobImpressionsSupported&lt;/code&gt; &lt;/a&gt;を使用したドキュメントのサイズ、および（2）&lt;a href=&quot;jobmediasheetssupported&quot;&gt; &lt;code&gt;JobMediaSheetsSupported&lt;/code&gt; &lt;/a&gt;を使用したジョブのサイズの両方の下限と上限を制御できます。</target>
        </trans-unit>
        <trans-unit id="5636c397adab06e521a951b1a28c91c0435d8fe1" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface, this interface does not provide support for indexed access to elements.</source>
          <target state="translated">&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;インターフェイスとは異なり、このインターフェイスは要素へのインデックス付きアクセスをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="6ebed0fc65dd258b9b011292c101cdca62b8db0d" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;printstream&quot;&gt;&lt;code&gt;PrintStream&lt;/code&gt;&lt;/a&gt; class, if automatic flushing is enabled it will be done only when one of the &lt;code&gt;println&lt;/code&gt;, &lt;code&gt;printf&lt;/code&gt;, or &lt;code&gt;format&lt;/code&gt; methods is invoked, rather than whenever a newline character happens to be output. These methods use the platform's own notion of line separator rather than the newline character.</source>
          <target state="translated">&lt;a href=&quot;printstream&quot;&gt; &lt;code&gt;PrintStream&lt;/code&gt; &lt;/a&gt;クラスとは異なり、自動フラッシュが有効になっている場合は、改行文字が出力されたときではなく、 &lt;code&gt;println&lt;/code&gt; 、 &lt;code&gt;printf&lt;/code&gt; 、または &lt;code&gt;format&lt;/code&gt; メソッドのいずれかが呼び出されたときにのみ実行されます。これらのメソッドは、改行文字ではなく、プラットフォーム独自の行区切り記号の概念を使用します。</target>
        </trans-unit>
        <trans-unit id="7f939254fee74cc40565692e311bbf135ecb6d66" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;sslsocket#startHandshake--&quot;&gt;&lt;code&gt;SSLSocket#startHandshake()&lt;/code&gt;&lt;/a&gt; method, this method does not block until handshaking is completed.</source>
          <target state="translated">&lt;a href=&quot;sslsocket#startHandshake--&quot;&gt; &lt;code&gt;SSLSocket#startHandshake()&lt;/code&gt; &lt;/a&gt;メソッドとは異なり、このメソッドはハンドシェイクが完了するまでブロックしません。</target>
        </trans-unit>
        <trans-unit id="c58b3e9b661aeafd4ac33323b13e25cf5e4eb206" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;mark&lt;/code&gt; methods declared by the &lt;code&gt;Reader&lt;/code&gt; and &lt;code&gt;InputStream&lt;/code&gt; interfaces, no &lt;code&gt;readLimit&lt;/code&gt; parameter is used. An arbitrary amount of data may be read following the call to &lt;code&gt;mark&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Reader&lt;/code&gt; および &lt;code&gt;InputStream&lt;/code&gt; インターフェースによって宣言された &lt;code&gt;mark&lt;/code&gt; メソッドとは異なり、 &lt;code&gt;readLimit&lt;/code&gt; パラメーターは使用されません。 &lt;code&gt;mark&lt;/code&gt; の呼び出しに続いて、任意の量のデータを読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="b7d5ce9f1c2ad7fe4e6fa04497ca11c292a5ac29" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;set&lt;/code&gt; method, all of the calendar fields and &lt;code&gt;time&lt;/code&gt; values are calculated upon return.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; メソッドとは異なり、すべてのカレンダフィールドと &lt;code&gt;time&lt;/code&gt; 値は、戻り時に計算されます。</target>
        </trans-unit>
        <trans-unit id="de53b88a525e7d26b740bce7d29bb75a14f928b5" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;set&lt;/code&gt; method, all of the calendar fields and the instant of time value are calculated upon return.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; メソッドとは異なり、すべてのカレンダフィールドと瞬時値は戻り時に計算されます。</target>
        </trans-unit>
        <trans-unit id="da4cc8b1d3dac1cde25f9afa8e0e9eb9575ac13e" translate="yes" xml:space="preserve">
          <source>Unlike the method &lt;a href=&quot;objects#requireNonNull-T-java.lang.String-&quot;&gt;&lt;code&gt;requireNonNull(Object, String)&lt;/code&gt;&lt;/a&gt;, this method allows creation of the message to be deferred until after the null check is made. While this may confer a performance advantage in the non-null case, when deciding to call this method care should be taken that the costs of creating the message supplier are less than the cost of just creating the string message directly.</source>
          <target state="translated">&lt;a href=&quot;objects#requireNonNull-T-java.lang.String-&quot;&gt; &lt;code&gt;requireNonNull(Object, String)&lt;/code&gt; &lt;/a&gt;メソッドとは異なり、このメソッドでは、nullチェックが行われるまでメッセージの作成を延期できます。これにより、null以外の場合にパフォーマンスが向上する可能性がありますが、このメソッドの呼び出しを決定するときは、メッセージサプライヤーを作成するコストが、文字列メッセージを直接作成するコストよりも少ないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="615ed4b5bf6780475400ace8b81c961072be98bc" translate="yes" xml:space="preserve">
          <source>Unlike the other abstract collection implementations, the programmer does</source>
          <target state="translated">他の抽象的なコレクションの実装とは異なり、プログラマは</target>
        </trans-unit>
        <trans-unit id="c51147fec60801e3382da59609aefacd1d8b84a2" translate="yes" xml:space="preserve">
          <source>Unlike the signature polymorphic methods &lt;code&gt;invokeExact&lt;/code&gt; and &lt;code&gt;invoke&lt;/code&gt;, &lt;code&gt;invokeWithArguments&lt;/code&gt; can be accessed normally via the Core Reflection API and JNI. It can therefore be used as a bridge between native or reflective code and method handles.</source>
          <target state="translated">シグネチャポリモーフィックメソッド &lt;code&gt;invokeExact&lt;/code&gt; および &lt;code&gt;invoke&lt;/code&gt; とは異なり、 &lt;code&gt;invokeWithArguments&lt;/code&gt; には、コアリフレクションAPIおよびJNIを介して通常どおりアクセスできます。したがって、ネイティブコードまたはリフレクティブコードとメソッドハンドルの間のブリッジとして使用できます。</target>
        </trans-unit>
        <trans-unit id="fa5977f51a9207b140c7299bfb2b0081772514c7" translate="yes" xml:space="preserve">
          <source>Unlike with the Core Reflection API, where access is checked every time a reflective method is invoked, method handle access checking is performed &lt;a href=&quot;methodhandles.lookup#access&quot;&gt;when the method handle is created&lt;/a&gt;. In the case of &lt;code&gt;ldc&lt;/code&gt; (see below), access checking is performed as part of linking the constant pool entry underlying the constant method handle.</source>
          <target state="translated">Core Reflection APIとは異なり、リフレクトメソッドが呼び出されるたびにアクセスがチェックされますが&lt;a href=&quot;methodhandles.lookup#access&quot;&gt;、メソッドハンドルの作成時に&lt;/a&gt;、メソッドハンドルのアクセスチェックが実行されます。以下の場合に &lt;code&gt;ldc&lt;/code&gt; （下記参照）、アクセスチェックは、一定の方法のハンドルを下にある定数プールエントリをリンクの一部として実行されます。</target>
        </trans-unit>
        <trans-unit id="f9137c244b6c709f10e41d30ed4fc70c0a4d0aa3" translate="yes" xml:space="preserve">
          <source>Unloads a particular instrument.</source>
          <target state="translated">特定の楽器をアンロードします。</target>
        </trans-unit>
        <trans-unit id="0c657143e1b9a1b6b101d699607b42bf38053e0c" translate="yes" xml:space="preserve">
          <source>Unloads all instruments contained in the specified &lt;code&gt;Soundbank&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;Soundbank&lt;/code&gt; に含まれるすべてのインストゥルメントをアンロードします。</target>
        </trans-unit>
        <trans-unit id="30a18489219249ff1ecae0e657716d7febe1023e" translate="yes" xml:space="preserve">
          <source>Unloads the instruments referenced by the specified patches, from the MIDI sound bank specified.</source>
          <target state="translated">指定されたパッチで参照されるインストゥルメントを、指定されたMIDIサウンドバンクからアンロードします。</target>
        </trans-unit>
        <trans-unit id="de4af2e68cb45a5c7b00268a66368ed52615f452" translate="yes" xml:space="preserve">
          <source>UnmappableCharacterException</source>
          <target state="translated">UnmappableCharacterException</target>
        </trans-unit>
        <trans-unit id="bb9686baaf4248ea34bb57c4a3f0b8cc2c27e037" translate="yes" xml:space="preserve">
          <source>UnmappableCharacterException.getInputLength()</source>
          <target state="translated">UnmappableCharacterException.getInputLength()</target>
        </trans-unit>
        <trans-unit id="b907b974d2209627cc2443409c480967a79754c6" translate="yes" xml:space="preserve">
          <source>UnmappableCharacterException.getMessage()</source>
          <target state="translated">UnmappableCharacterException.getMessage()</target>
        </trans-unit>
        <trans-unit id="0981ed31c970e0b0ae65624838150c8fe906dcd8" translate="yes" xml:space="preserve">
          <source>Unmodifiable set of printing attributes for this doc, or null to obtain all attribute values from the job's attribute set.</source>
          <target state="translated">このdocの印刷属性の変更不可能なセット、またはジョブの属性セットからすべての属性値を取得するにはNULL。</target>
        </trans-unit>
        <trans-unit id="33580b9e4f77504a5fb821467b719f26a9f69bcb" translate="yes" xml:space="preserve">
          <source>Unmodifiable snapshot of this Print Service's attribute set. May be empty, but not null.</source>
          <target state="translated">このプリントサービスの属性セットの変更可能でないスナップショット。空の場合もありますが、NULLではありません。</target>
        </trans-unit>
        <trans-unit id="43a3885026e7a22a24013c6cc4c23a47666e45e0" translate="yes" xml:space="preserve">
          <source>Unmodifiable view of &lt;code&gt;attributeSet&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;attributeSet&lt;/code&gt; の変更不可能なビュー。</target>
        </trans-unit>
        <trans-unit id="89249f565a70e980148331a9cb87332823132fb1" translate="yes" xml:space="preserve">
          <source>UnmodifiableClassException</source>
          <target state="translated">UnmodifiableClassException</target>
        </trans-unit>
        <trans-unit id="b0148b4ddc04b861638d9433b81d3e63fc2b1cd3" translate="yes" xml:space="preserve">
          <source>UnmodifiableSetException</source>
          <target state="translated">UnmodifiableSetException</target>
        </trans-unit>
        <trans-unit id="b1f4d182e15c8290ec6ebd664ac962dfb65baccc" translate="yes" xml:space="preserve">
          <source>UnrecoverableEntryException</source>
          <target state="translated">UnrecoverableEntryException</target>
        </trans-unit>
        <trans-unit id="60941909c7b6d513a5a4fa28fa00fc800656ea6e" translate="yes" xml:space="preserve">
          <source>UnrecoverableKeyException</source>
          <target state="translated">UnrecoverableKeyException</target>
        </trans-unit>
        <trans-unit id="c3021c7c9aa6dada630bb1c7b53e4f589444cbab" translate="yes" xml:space="preserve">
          <source>Unregisters an MBean from the MBean server. The MBean is identified by its object name. Once the method has been invoked, the MBean may no longer be accessed by its object name.</source>
          <target state="translated">MBean サーバから MBean の登録を解除します。MBean はオブジェクト名で識別されます。メソッドが呼び出されると、MBean はオブジェクト名でアクセスできなくなります。</target>
        </trans-unit>
        <trans-unit id="a5956613aa795ab5f45aa046e58efe0f302f6d14" translate="yes" xml:space="preserve">
          <source>Unregisters the supplied transformer. Future class definitions will not be shown to the transformer. Removes the most-recently-added matching instance of the transformer. Due to the multi-threaded nature of class loading, it is possible for a transformer to receive calls after it has been removed. Transformers should be written defensively to expect this situation.</source>
          <target state="translated">供給されたトランスの登録を解除します。将来のクラス定義はトランスフォーマーには表示されません。トランスフォーマーの最も最近追加されたマッチング・インスタンスを削除します。クラスのロードはマルチスレッド化されているため、削除された後にトランスが呼び出しを受ける可能性があります。トランスはこのような状況を想定して、防御的に書くべきです。</target>
        </trans-unit>
        <trans-unit id="b7e933af3f14920271cd6e46316876db402bc9fe" translate="yes" xml:space="preserve">
          <source>UnresolvedAddressException</source>
          <target state="translated">UnresolvedAddressException</target>
        </trans-unit>
        <trans-unit id="993f3450a99797343b5c6866214dba99fa98c073" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission</source>
          <target state="translated">UnresolvedPermission</target>
        </trans-unit>
        <trans-unit id="dc8072cff1b6c345dafe8eb713ecc7ce292d7d4a" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.equals()</source>
          <target state="translated">UnresolvedPermission.equals()</target>
        </trans-unit>
        <trans-unit id="8db103911022111a45bf614c0b74b40b6dacbf47" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.getActions()</source>
          <target state="translated">UnresolvedPermission.getActions()</target>
        </trans-unit>
        <trans-unit id="2df2892f625ddd2e1396caeb3e0e53fe16153adb" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.getUnresolvedActions()</source>
          <target state="translated">UnresolvedPermission.getUnresolvedActions()</target>
        </trans-unit>
        <trans-unit id="543fdcb03a6ae15f1bd72dc9195db16ec882cfda" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.getUnresolvedCerts()</source>
          <target state="translated">UnresolvedPermission.getUnresolvedCerts()</target>
        </trans-unit>
        <trans-unit id="857f0597d66e7fb7cc196e42303ba32ba33d1d00" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.getUnresolvedName()</source>
          <target state="translated">UnresolvedPermission.getUnresolvedName()</target>
        </trans-unit>
        <trans-unit id="b2a9bb6ff4a8173382987735162114843e6e799d" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.getUnresolvedType()</source>
          <target state="translated">UnresolvedPermission.getUnresolvedType()</target>
        </trans-unit>
        <trans-unit id="9b6ad3eb817eb73e89c1e5e57d29aeaaa49a214d" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.hashCode()</source>
          <target state="translated">UnresolvedPermission.hashCode()</target>
        </trans-unit>
        <trans-unit id="60a48bb809e7f69080b2da98d8ef5333dbde40df" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.implies()</source>
          <target state="translated">UnresolvedPermission.implies()</target>
        </trans-unit>
        <trans-unit id="fa0446bb36e9a9a2d49b40f9b8902f1cf713a2a7" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.newPermissionCollection()</source>
          <target state="translated">UnresolvedPermission.newPermissionCollection()</target>
        </trans-unit>
        <trans-unit id="b245732f21d55dc5aa33c0df09330fd6937456de" translate="yes" xml:space="preserve">
          <source>UnresolvedPermission.toString()</source>
          <target state="translated">UnresolvedPermission.toString()</target>
        </trans-unit>
        <trans-unit id="65b377a625f4d66d09c2650463b476c87aa2a5ad" translate="yes" xml:space="preserve">
          <source>UnsatisfiedLinkError</source>
          <target state="translated">UnsatisfiedLinkError</target>
        </trans-unit>
        <trans-unit id="639cfe117b0bc5829d5547c75e3345964ebcdf42" translate="yes" xml:space="preserve">
          <source>Unschedules and returns, without executing, the next task queued by the current thread but not yet executed, if the current thread is operating in a ForkJoinPool. This method is designed primarily to support extensions, and is unlikely to be useful otherwise.</source>
          <target state="translated">現在のスレッドが ForkJoinPool で動作している場合、現在のスレッドがキューイングしているがまだ実行されていない次のタスクを、実行せずにアンスケジューリングして返します。このメソッドは主に拡張機能をサポートするために設計されています。</target>
        </trans-unit>
        <trans-unit id="39a78c4938f8ffc64e4175e0e1e41cffd25d5b76" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotification</source>
          <target state="translated">UnsolicitedNotification</target>
        </trans-unit>
        <trans-unit id="0d2c5900e6c156a2f457e00b402bdd255c7f1b73" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotification.getException()</source>
          <target state="translated">UnsolicitedNotification.getException()</target>
        </trans-unit>
        <trans-unit id="de5f2dcc5277860be3d64ea1ece477149eb9099b" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotification.getReferrals()</source>
          <target state="translated">UnsolicitedNotification.getReferrals()</target>
        </trans-unit>
        <trans-unit id="f9ff84b01932b42a4cbd06e74999ae9b32cd541d" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotificationEvent</source>
          <target state="translated">UnsolicitedNotificationEvent</target>
        </trans-unit>
        <trans-unit id="b8522720341d21ef01b893943f78a1300fdcd02f" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotificationEvent.dispatch()</source>
          <target state="translated">UnsolicitedNotificationEvent.dispatch()</target>
        </trans-unit>
        <trans-unit id="83085a8e790f3e72259d9f8640d793c2579e03b8" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotificationEvent.getNotification()</source>
          <target state="translated">UnsolicitedNotificationEvent.getNotification()</target>
        </trans-unit>
        <trans-unit id="28e179f1d4c9926bbaf600c540ec3f8d7ba3e529" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotificationListener</source>
          <target state="translated">UnsolicitedNotificationListener</target>
        </trans-unit>
        <trans-unit id="1adf511acc6589487b17377bc239588209e494dc" translate="yes" xml:space="preserve">
          <source>UnsolicitedNotificationListener.notificationReceived()</source>
          <target state="translated">UnsolicitedNotificationListener.notificationReceived()</target>
        </trans-unit>
        <trans-unit id="916302098d9e96ac5a25f92d7ce6da7c2d30b53d" translate="yes" xml:space="preserve">
          <source>Unspecified option type.</source>
          <target state="translated">指定されていないオプションタイプ。</target>
        </trans-unit>
        <trans-unit id="b032106135075af895dc113efcc9983bc8f4042a" translate="yes" xml:space="preserve">
          <source>Unspecified reason.</source>
          <target state="translated">理由は不明。</target>
        </trans-unit>
        <trans-unit id="856e8a9f01e63cf9f0ffe11f4bed3ace17c8beb8" translate="yes" xml:space="preserve">
          <source>Unsuccessful locking and unlocking operations, and reentrant locking/unlocking operations, do not require any memory synchronization effects.</source>
          <target state="translated">失敗したロックおよびアンロック操作、およびリエントラントロック/アンロック操作は、メモリ同期効果を必要としません。</target>
        </trans-unit>
        <trans-unit id="ce12c7ac2564e86cd53c8de20d527590cfd46dbd" translate="yes" xml:space="preserve">
          <source>UnsupportedAddressTypeException</source>
          <target state="translated">UnsupportedAddressTypeException</target>
        </trans-unit>
        <trans-unit id="62bde61003e236403f48a11ba855dfd0262f1063" translate="yes" xml:space="preserve">
          <source>UnsupportedAudioFileException</source>
          <target state="translated">UnsupportedAudioFileException</target>
        </trans-unit>
        <trans-unit id="ba27428dedd31e88f4f6e6e0624e2677091f7bce" translate="yes" xml:space="preserve">
          <source>UnsupportedCallbackException</source>
          <target state="translated">UnsupportedCallbackException</target>
        </trans-unit>
        <trans-unit id="31ede54fb0271960cfb827c244e26ad4774a9279" translate="yes" xml:space="preserve">
          <source>UnsupportedCallbackException.getCallback()</source>
          <target state="translated">UnsupportedCallbackException.getCallback()</target>
        </trans-unit>
        <trans-unit id="5aaf87d4a23af3d541d8bd2e06904c586d11b6e6" translate="yes" xml:space="preserve">
          <source>UnsupportedCharsetException</source>
          <target state="translated">UnsupportedCharsetException</target>
        </trans-unit>
        <trans-unit id="d8ddfadf3a5141f3204757f25629c90144c81acf" translate="yes" xml:space="preserve">
          <source>UnsupportedCharsetException.getCharsetName()</source>
          <target state="translated">UnsupportedCharsetException.getCharsetName()</target>
        </trans-unit>
        <trans-unit id="34ecc901794367e31d357b69fb8e4a9ac50b45a6" translate="yes" xml:space="preserve">
          <source>UnsupportedClassVersionError</source>
          <target state="translated">UnsupportedClassVersionError</target>
        </trans-unit>
        <trans-unit id="156ae2a23745cd8b01ab1f9ae129dda14ff67809" translate="yes" xml:space="preserve">
          <source>UnsupportedEncodingException</source>
          <target state="translated">UnsupportedEncodingException</target>
        </trans-unit>
        <trans-unit id="d6b9cc70af4626956ac004db8653f110603b7231" translate="yes" xml:space="preserve">
          <source>UnsupportedOperationException</source>
          <target state="translated">UnsupportedOperationException</target>
        </trans-unit>
        <trans-unit id="25b3cdfbf8bda73a3b2da7074e5f77f3a06d5b4d" translate="yes" xml:space="preserve">
          <source>UnsupportedTemporalTypeException</source>
          <target state="translated">UnsupportedTemporalTypeException</target>
        </trans-unit>
        <trans-unit id="7a4bbb6c87d4e0868fa7881db7f5a0dda74bd625" translate="yes" xml:space="preserve">
          <source>UnsupportedTemporalTypeException indicates that a ChronoField or ChronoUnit is not supported for a Temporal class.</source>
          <target state="translated">UnsupportedTemporalTypeException は、Temporal クラスで ChronoField や ChronoUnit がサポートされていないことを示します。</target>
        </trans-unit>
        <trans-unit id="bdd266349196cfa47304ed7ee3fa47009995b710" translate="yes" xml:space="preserve">
          <source>Until that point, a &lt;code&gt;EventContext&lt;/code&gt; instance that has outstanding listeners will continue to exist and be maintained by the service provider.</source>
          <target state="translated">その時点まで、未処理のリスナーを持つ &lt;code&gt;EventContext&lt;/code&gt; インスタンスは存在し続け、サービスプロバイダーによって維持されます。</target>
        </trans-unit>
        <trans-unit id="63771c017a3fb4938c53ebd2d93e7c80855dca74" translate="yes" xml:space="preserve">
          <source>Until the initial handshake has completed, this method returns a session object which reports an invalid cipher suite of &quot;SSL_NULL_WITH_NULL_NULL&quot;.</source>
          <target state="translated">最初のハンドシェイクが完了するまで、このメソッドは無効な暗号スイート &quot;SSL_NULL_WITH_NULL_NULL &quot;を報告するセッションオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="f05ddabacebeb4feaefee26e18f6f2ed12231ee0" translate="yes" xml:space="preserve">
          <source>Unused reason.</source>
          <target state="translated">未使用の理由。</target>
        </trans-unit>
        <trans-unit id="ae0b41f702f02745f38f76067d2c01850f5ea590" translate="yes" xml:space="preserve">
          <source>Unwrap a previously wrapped key.</source>
          <target state="translated">以前にラップされていたキーのラップを解除します。</target>
        </trans-unit>
        <trans-unit id="11b3e1d5ed89d2029a6bfdf3f88d88d2e9569761" translate="yes" xml:space="preserve">
          <source>Unwraps a byte array received from the client. This method can be called only after the authentication exchange has completed (i.e., when &lt;code&gt;isComplete()&lt;/code&gt; returns true) and only if the authentication exchange has negotiated integrity and/or privacy as the quality of protection; otherwise, an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown.</source>
          <target state="translated">クライアントから受信したバイト配列をラップ解除します。このメソッドは、認証交換が完了した後（つまり、 &lt;code&gt;isComplete()&lt;/code&gt; がtrueを返したとき）にのみ、および認証交換が整合性やプライバシーを保護の品質としてネゴシエートした場合にのみ呼び出すことができます。それ以外の場合は、 &lt;code&gt;IllegalStateException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="78550834f59fc38ca607cfc38bdaceb81240f89c" translate="yes" xml:space="preserve">
          <source>Unwraps a byte array received from the server. This method can be called only after the authentication exchange has completed (i.e., when &lt;code&gt;isComplete()&lt;/code&gt; returns true) and only if the authentication exchange has negotiated integrity and/or privacy as the quality of protection; otherwise, an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown.</source>
          <target state="translated">サーバーから受信したバイト配列をラップ解除します。このメソッドは、認証交換が完了した後（つまり、 &lt;code&gt;isComplete()&lt;/code&gt; がtrueを返したとき）にのみ、および認証交換が整合性やプライバシーを保護の品質としてネゴシエートした場合にのみ呼び出すことができます。それ以外の場合は、 &lt;code&gt;IllegalStateException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="7ac07052b6743c76e2afe688bd6960ebbf1093a6" translate="yes" xml:space="preserve">
          <source>Update or extend the validity period for this &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Object&lt;/code&gt; 有効期間を更新または延長します。</target>
        </trans-unit>
        <trans-unit id="015c15fc94e179d73d08ee8528df08ee4c9a777f" translate="yes" xml:space="preserve">
          <source>Update the digest using the specified ByteBuffer. The digest is updated using the &lt;code&gt;input.remaining()&lt;/code&gt; bytes starting at &lt;code&gt;input.position()&lt;/code&gt;. Upon return, the buffer's position will be equal to its limit; its limit will not have changed.</source>
          <target state="translated">指定されたByteBufferを使用してダイジェストを更新します。ダイジェストを使用して更新される &lt;code&gt;input.remaining()&lt;/code&gt; 始まるバイト &lt;code&gt;input.position()&lt;/code&gt; 。戻ったとき、バッファの位置はその制限に等しくなります。その制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="0e90a75f3df5a0961ddd7682d37e6063c32f9dbc" translate="yes" xml:space="preserve">
          <source>Update the relevant ProtectionDomains with the Principals from the &lt;code&gt;Subject&lt;/code&gt; associated with this &lt;code&gt;SubjectDomainCombiner&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; に関連付けられている &lt;code&gt;Subject&lt;/code&gt; のプリンシパルで関連するProtectionDomainを更新します。</target>
        </trans-unit>
        <trans-unit id="08a7f27acfc0fc915fe5793900dbe8acea95a9a5" translate="yes" xml:space="preserve">
          <source>Updates (replace) the access control list.</source>
          <target state="translated">アクセス制御リストを更新(置換)します。</target>
        </trans-unit>
        <trans-unit id="e0084475da4cab72cdc6360b30feaa6f306ab6f7" translate="yes" xml:space="preserve">
          <source>Updates a file's last modified time attribute. The file time is converted to the epoch and precision supported by the file system. Converting from finer to coarser granularities result in precision loss. The behavior of this method when attempting to set the last modified time when it is not supported by the file system or is outside the range supported by the underlying file store is not defined. It may or not fail by throwing an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">ファイルの最終変更時刻属性を更新します。ファイルの時刻は、ファイルシステムでサポートされているエポックと精度に変換されます。より細かい粒度から粗い粒度に変換すると、精度が失われます。ファイルシステムでサポートされていないか、基になるファイルストアでサポートされている範囲外にある最終変更時刻を設定しようとしたときのこのメソッドの動作は定義されていません。 &lt;code&gt;IOException&lt;/code&gt; をスローすることで失敗するかどうかはわかりません。</target>
        </trans-unit>
        <trans-unit id="f38c2deb262128000857c6c4df69c21469bc3743" translate="yes" xml:space="preserve">
          <source>Updates any or all of the file's last modified time, last access time, and create time attributes.</source>
          <target state="translated">ファイルの最終更新時刻、最終アクセス時刻、作成時刻の属性を更新します。</target>
        </trans-unit>
        <trans-unit id="ee020c412f92d97a56c3f40538a8a97333b064cc" translate="yes" xml:space="preserve">
          <source>Updates made to a file may be &lt;a href=&quot;asynchronousfilechannel#force-boolean-&quot;&gt;&lt;code&gt;&lt;i&gt;forced
   out&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; to the underlying storage device, ensuring that data are not lost in the event of a system crash.</source>
          <target state="translated">ファイルに加えられた更新は、基盤となるストレージデバイスに&lt;a href=&quot;asynchronousfilechannel#force-boolean-&quot;&gt; &lt;code&gt;&lt;i&gt;forced out&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;的に送信&lt;i&gt;される&lt;/i&gt;ため、システムがクラッシュした場合でもデータが失われることはありません。</target>
        </trans-unit>
        <trans-unit id="aed5e31389f67cfc5ddf35ddc575417ddb12a4cc" translate="yes" xml:space="preserve">
          <source>Updates made to a file may be &lt;a href=&quot;filechannel#force-boolean-&quot;&gt;&lt;code&gt;&lt;i&gt;forced
   out&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; to the underlying storage device, ensuring that data are not lost in the event of a system crash.</source>
          <target state="translated">ファイルに加えられた更新は、基盤となるストレージデバイスに&lt;a href=&quot;filechannel#force-boolean-&quot;&gt; &lt;code&gt;&lt;i&gt;forced out&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;的に送信&lt;i&gt;される&lt;/i&gt;ため、システムがクラッシュした場合でもデータが失われることはありません。</target>
        </trans-unit>
        <trans-unit id="902b17d91a80789a54572305df06dd47a83ae122" translate="yes" xml:space="preserve">
          <source>Updates the CRC-32 checksum with the specified array of bytes.</source>
          <target state="translated">CRC-32チェックサムを指定されたバイト数の配列で更新します。</target>
        </trans-unit>
        <trans-unit id="e5a613fc7d57442650af52c4062e3960a89bea07" translate="yes" xml:space="preserve">
          <source>Updates the CRC-32 checksum with the specified byte (the low eight bits of the argument b).</source>
          <target state="translated">CRC-32チェックサムを指定されたバイト(引数bの下位8ビット)で更新します。</target>
        </trans-unit>
        <trans-unit id="056b4b8a01f4466ff5c852793ade1003eb4b18f7" translate="yes" xml:space="preserve">
          <source>Updates the array reference that will be returned by subsequent calls to the &lt;code&gt;getData&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;getData&lt;/code&gt; メソッドへの後続の呼び出しで返される配列参照を更新します。</target>
        </trans-unit>
        <trans-unit id="6e6b83ad441814b0380e891aed3a7717fab73d2e" translate="yes" xml:space="preserve">
          <source>Updates the checksum with the bytes from the specified buffer. The checksum is updated using buffer.&lt;a href=&quot;../../nio/buffer#remaining--&quot;&gt;&lt;code&gt;remaining()&lt;/code&gt;&lt;/a&gt; bytes starting at buffer.&lt;a href=&quot;../../nio/buffer#position--&quot;&gt;&lt;code&gt;position()&lt;/code&gt;&lt;/a&gt; Upon return, the buffer's position will be updated to its limit; its limit will not have been changed.</source>
          <target state="translated">指定されたバッファからのバイトでチェックサムを更新します。チェックサムはバッファを使用して更新されます。バッファで始まる&lt;a href=&quot;../../nio/buffer#remaining--&quot;&gt; &lt;code&gt;remaining()&lt;/code&gt; &lt;/a&gt;バイト。&lt;a href=&quot;../../nio/buffer#position--&quot;&gt; &lt;code&gt;position()&lt;/code&gt; &lt;/a&gt;戻ると、バッファの位置はその限界まで更新されます。その制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="13fc4d504289541ba51f2e39a62c1348e40838b5" translate="yes" xml:space="preserve">
          <source>Updates the checksum with the specified array of bytes.</source>
          <target state="translated">指定されたバイト数の配列でチェックサムを更新します。</target>
        </trans-unit>
        <trans-unit id="464cc2ea985b8e80d8bcc575c4f4ce30b34d9721" translate="yes" xml:space="preserve">
          <source>Updates the checksum with the specified byte (the low eight bits of the argument b).</source>
          <target state="translated">指定されたバイト(引数bの下位8ビット)でチェックサムを更新します。</target>
        </trans-unit>
        <trans-unit id="ded7886722b9de75628ffd683faf249b574ddbe9" translate="yes" xml:space="preserve">
          <source>Updates the current checksum with the specified array of bytes.</source>
          <target state="translated">現在のチェックサムを指定されたバイト数の配列で更新します。</target>
        </trans-unit>
        <trans-unit id="7a33fe404b85df1ddbd5e0736dca91a5327146c7" translate="yes" xml:space="preserve">
          <source>Updates the current checksum with the specified byte.</source>
          <target state="translated">現在のチェックサムを指定したバイトで更新します。</target>
        </trans-unit>
        <trans-unit id="843b7fe403b1d0561c5938739833267ad823f1fb" translate="yes" xml:space="preserve">
          <source>Updates the data to be signed or verified by a byte.</source>
          <target state="translated">バイトで署名または検証されるデータを更新します。</target>
        </trans-unit>
        <trans-unit id="3af8c9ed66a94e149f764a292c59e5d9054580da" translate="yes" xml:space="preserve">
          <source>Updates the data to be signed or verified using the specified ByteBuffer. Processes the &lt;code&gt;data.remaining()&lt;/code&gt; bytes starting at at &lt;code&gt;data.position()&lt;/code&gt;. Upon return, the buffer's position will be equal to its limit; its limit will not have changed.</source>
          <target state="translated">指定されたByteBufferを使用して、署名または検証されるデータを更新します。処理 &lt;code&gt;data.remaining()&lt;/code&gt; で始まるバイト &lt;code&gt;data.position()&lt;/code&gt; 。戻ったとき、バッファの位置はその制限に等しくなります。その制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="bd31072336fcfa58a07a668dc351143ede54b3f8" translate="yes" xml:space="preserve">
          <source>Updates the data to be signed or verified using the specified byte.</source>
          <target state="translated">指定したバイトを使用して署名または検証するデータを更新します。</target>
        </trans-unit>
        <trans-unit id="def5ea9c4fd7fca454d7fe8b9e10a7697555b601" translate="yes" xml:space="preserve">
          <source>Updates the data to be signed or verified, using the specified array of bytes, starting at the specified offset.</source>
          <target state="translated">指定されたオフセットから始まる指定されたバイト数の配列を使用して、署名または検証されるデータを更新します。</target>
        </trans-unit>
        <trans-unit id="523ed659eb3e70b5342edceb340e858daf8a1779" translate="yes" xml:space="preserve">
          <source>Updates the data to be signed or verified, using the specified array of bytes.</source>
          <target state="translated">指定されたバイト数の配列を使用して、署名または検証されるデータを更新します。</target>
        </trans-unit>
        <trans-unit id="e036043fb68f08e21d251ef235ba8084932b1f18" translate="yes" xml:space="preserve">
          <source>Updates the digest using the specified array of bytes, starting at the specified offset.</source>
          <target state="translated">指定されたオフセットから始まる指定されたバイト数の配列を使用してダイジェストを更新します。</target>
        </trans-unit>
        <trans-unit id="89712bda4fdbc435613ea0ccd4dc762e4c87a5f9" translate="yes" xml:space="preserve">
          <source>Updates the digest using the specified array of bytes.</source>
          <target state="translated">指定されたバイト数の配列を使用してダイジェストを更新します。</target>
        </trans-unit>
        <trans-unit id="6cf379365cadccbde9d2161109fe08171f04e0e8" translate="yes" xml:space="preserve">
          <source>Updates the digest using the specified byte.</source>
          <target state="translated">指定されたバイトを使用してダイジェストを更新します。</target>
        </trans-unit>
        <trans-unit id="a9aa35c53d822abc7aa1281093b6c033dad1c13b" translate="yes" xml:space="preserve">
          <source>Updates the file group-owner.</source>
          <target state="translated">ファイルグループの所有者を更新します。</target>
        </trans-unit>
        <trans-unit id="ce163aff679e6ccab2155872516dd460b0a9c8ea" translate="yes" xml:space="preserve">
          <source>Updates the file owner.</source>
          <target state="translated">ファイルの所有者を更新します。</target>
        </trans-unit>
        <trans-unit id="7092b9882ade92fc81348c0acf20b9b33494635f" translate="yes" xml:space="preserve">
          <source>Updates the file permissions.</source>
          <target state="translated">ファイルのパーミッションを更新します。</target>
        </trans-unit>
        <trans-unit id="665a6c2eb4809d0a68ace65533b9b60fb2810ec3" translate="yes" xml:space="preserve">
          <source>Updates the message digest (if the digest function is on) using the specified byte, and in any case writes the byte to the output stream. That is, if the digest function is on (see &lt;a href=&quot;digestoutputstream#on-boolean-&quot;&gt;&lt;code&gt;on&lt;/code&gt;&lt;/a&gt;), this method calls &lt;code&gt;update&lt;/code&gt; on the message digest associated with this stream, passing it the byte &lt;code&gt;b&lt;/code&gt;. This method then writes the byte to the output stream, blocking until the byte is actually written.</source>
          <target state="translated">指定されたバイトを使用してメッセージダイジェストを更新し（ダイジェスト機能がオンの場合）、いずれの場合もバイトを出力ストリームに書き込みます。すなわち、ダイジェスト関数は、（参照にある場合&lt;a href=&quot;digestoutputstream#on-boolean-&quot;&gt; &lt;code&gt;on&lt;/code&gt; &lt;/a&gt;）、このメソッド呼び出しの &lt;code&gt;update&lt;/code&gt; メッセージには、そのバイト渡し、このストリームに関連付けられたダイジェスト &lt;code&gt;b&lt;/code&gt; 。次に、このメソッドはバイトを出力ストリームに書き込み、バイトが実際に書き込まれるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="d76ef061bca02656f593041b411ffdd946136db5" translate="yes" xml:space="preserve">
          <source>Updates the message digest (if the digest function is on) using the specified subarray, and in any case writes the subarray to the output stream. That is, if the digest function is on (see &lt;a href=&quot;digestoutputstream#on-boolean-&quot;&gt;&lt;code&gt;on&lt;/code&gt;&lt;/a&gt;), this method calls &lt;code&gt;update&lt;/code&gt; on the message digest associated with this stream, passing it the subarray specifications. This method then writes the subarray bytes to the output stream, blocking until the bytes are actually written.</source>
          <target state="translated">指定されたサブアレイを使用してメッセージダイジェストを更新し（ダイジェスト機能がオンの場合）、いずれの場合もサブアレイを出力ストリームに書き込みます。すなわち、ダイジェスト関数は、（参照にある場合&lt;a href=&quot;digestoutputstream#on-boolean-&quot;&gt; &lt;code&gt;on&lt;/code&gt; &lt;/a&gt;）、このメソッド呼び出しの &lt;code&gt;update&lt;/code&gt; メッセージには、それにサブアレイ仕様を渡し、このストリームに関連付けられたダイジェスト。次に、このメソッドはサブアレイのバイトを出力ストリームに書き込み、バイトが実際に書き込まれるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="97f4c9b27bc886a093b0b21fe1f1cfb787437c2b" translate="yes" xml:space="preserve">
          <source>Updates the target method of this call site, according to the behavior defined by this call site's specific class. The immediate subclasses of &lt;code&gt;CallSite&lt;/code&gt; document the class-specific behaviors of this method.</source>
          <target state="translated">この呼び出しサイトの特定のクラスによって定義された動作に従って、この呼び出しサイトのターゲットメソッドを更新します。 &lt;code&gt;CallSite&lt;/code&gt; の直接のサブクラスは、このメソッドのクラス固有の動作を文書化します。</target>
        </trans-unit>
        <trans-unit id="1c0593e2542db41160c275c01fe179a2e7d7031d" translate="yes" xml:space="preserve">
          <source>Updates the target method of this call site, as a normal variable. The type of the new target must agree with the type of the old target.</source>
          <target state="translated">このコールサイトのターゲット・メソッドを通常の変数として更新します。新しいターゲットの型は、古いターゲットの型と一致していなければなりません。</target>
        </trans-unit>
        <trans-unit id="1c19aab82e517a26aa81e134dc3a2926582cc9cb" translate="yes" xml:space="preserve">
          <source>Updates the target method of this call site, as a volatile variable. The type of the new target must agree with the type of the old target.</source>
          <target state="translated">揮発性変数として、このコールサイトのターゲットメソッドを更新します。新しいターゲットの型は、古いターゲットの型と一致していなければなりません。</target>
        </trans-unit>
        <trans-unit id="96f7b2e45a58ab8c6a3b1ac8082e1374f962d66c" translate="yes" xml:space="preserve">
          <source>Updates the value of the archive attribute.</source>
          <target state="translated">アーカイブ属性の値を更新します。</target>
        </trans-unit>
        <trans-unit id="7f8abd3d2d7ea62278513f2df1379366370940e7" translate="yes" xml:space="preserve">
          <source>Updates the value of the hidden attribute.</source>
          <target state="translated">隠された属性の値を更新します。</target>
        </trans-unit>
        <trans-unit id="284868c6c13c5de355e5c18b93e8001e301ab0d4" translate="yes" xml:space="preserve">
          <source>Updates the value of the read-only attribute.</source>
          <target state="translated">読み取り専用属性の値を更新します。</target>
        </trans-unit>
        <trans-unit id="017b739c1b2acd6c2a03231062ea3fe4db922faf" translate="yes" xml:space="preserve">
          <source>Updates the value of the system attribute.</source>
          <target state="translated">システム属性の値を更新します。</target>
        </trans-unit>
        <trans-unit id="0609bb341c4a78714195e17d57bc3adba33ee916" translate="yes" xml:space="preserve">
          <source>Updates the value that will be returned by subsequent calls to the &lt;code&gt;getLength&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;getLength&lt;/code&gt; メソッドへの後続の呼び出しによって返される値を更新します。</target>
        </trans-unit>
        <trans-unit id="50dc32ded1d630b41066a508f3464a5d76fb1a0a" translate="yes" xml:space="preserve">
          <source>Updates the value that will be returned by subsequent calls to the &lt;code&gt;getOffset&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;getOffset&lt;/code&gt; メソッドへの後続の呼び出しによって返される値を更新します。</target>
        </trans-unit>
        <trans-unit id="aab627edbe363971bb91bd6f428128c46547a3e8" translate="yes" xml:space="preserve">
          <source>Updates to &quot;bound&quot; properties will cause a &quot;PropertyChange&quot; event to get fired when the property is changed.</source>
          <target state="translated">bound」プロパティへの更新は、プロパティが変更されたときに「PropertyChange」イベントが発生します。</target>
        </trans-unit>
        <trans-unit id="9b4ae7f6d4ba9eb03e2c14d9474f1c1161b2a577" translate="yes" xml:space="preserve">
          <source>Updates with the given value.</source>
          <target state="translated">指定された値で更新します。</target>
        </trans-unit>
        <trans-unit id="ec6952e09b9cc6aee90f3110c55ff105e4facbf9" translate="yes" xml:space="preserve">
          <source>Updating</source>
          <target state="translated">Updating</target>
        </trans-unit>
        <trans-unit id="d3699d6d4a7b6d1e97fd9a25d90038c22baf0a18" translate="yes" xml:space="preserve">
          <source>Upon completion of this method, &lt;code&gt;isDone()&lt;/code&gt; reports &lt;code&gt;false&lt;/code&gt;, and &lt;code&gt;getException()&lt;/code&gt; reports &lt;code&gt;null&lt;/code&gt;. However, the value returned by &lt;code&gt;getRawResult&lt;/code&gt; is unaffected. To clear this value, you can invoke &lt;code&gt;setRawResult(null)&lt;/code&gt;.</source>
          <target state="translated">このメソッドが完了すると、 &lt;code&gt;isDone()&lt;/code&gt; は &lt;code&gt;false&lt;/code&gt; を報告し、 &lt;code&gt;getException()&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; を報告します。ただし、 &lt;code&gt;getRawResult&lt;/code&gt; によって返される値は影響を受けません。この値をクリアするには、 &lt;code&gt;setRawResult(null)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="c2e0fbbd4b28ccff9ec588d9207a0093caeab42f" translate="yes" xml:space="preserve">
          <source>Upon finishing, this method resets this cipher object to the state it was in when previously initialized via a call to &lt;code&gt;engineInit&lt;/code&gt;. That is, the object is reset and available to encrypt or decrypt (depending on the operation mode that was specified in the call to &lt;code&gt;engineInit&lt;/code&gt;) more data.</source>
          <target state="translated">終了すると、このメソッドは、この暗号オブジェクトを、 &lt;code&gt;engineInit&lt;/code&gt; の呼び出しによって以前に初期化されたときの状態にリセットします。つまり、オブジェクトはリセットされ、（ &lt;code&gt;engineInit&lt;/code&gt; の呼び出しで指定された操作モードに応じて）より多くのデータを暗号化または復号化できます。</target>
        </trans-unit>
        <trans-unit id="c422f4c2323dc760bb13546606e70f98df8d7fb4" translate="yes" xml:space="preserve">
          <source>Upon finishing, this method resets this cipher object to the state it was in when previously initialized via a call to &lt;code&gt;init&lt;/code&gt;. That is, the object is reset and available to encrypt or decrypt (depending on the operation mode that was specified in the call to &lt;code&gt;init&lt;/code&gt;) more data.</source>
          <target state="translated">終了すると、このメソッドはこの暗号オブジェクトを、以前に &lt;code&gt;init&lt;/code&gt; を呼び出して初期化したときの状態にリセットします。つまり、オブジェクトはリセットされ、（ &lt;code&gt;init&lt;/code&gt; の呼び出しで指定された操作モードに応じて）より多くのデータを暗号化または復号化できます。</target>
        </trans-unit>
        <trans-unit id="32c989991bef2e0ddd1c578a34270b770e84a5e5" translate="yes" xml:space="preserve">
          <source>Upon return, the source buffer's position will be updated to its limit; its limit will not have been changed. The returned output buffer's position will be zero and its limit will be the number of resulting decoded bytes</source>
          <target state="translated">返却時には、ソースバッファの位置はその限界値に更新され、その限界値は変更されません。返された出力バッファの位置はゼロになり、その限界はデコードされたバイト数になります。</target>
        </trans-unit>
        <trans-unit id="29b4ecb3df396f95e69afa93711c30b261696ed7" translate="yes" xml:space="preserve">
          <source>Upon return, this membership object will be &lt;a href=&quot;membershipkey#isValid--&quot;&gt;&lt;code&gt;invalid&lt;/code&gt;&lt;/a&gt;. If the multicast group membership is already invalid then invoking this method has no effect. Once a multicast group membership is invalid, it remains invalid forever.</source>
          <target state="translated">戻ると、このメンバーシップオブジェクトは&lt;a href=&quot;membershipkey#isValid--&quot;&gt; &lt;code&gt;invalid&lt;/code&gt; &lt;/a&gt;になります。マルチキャストグループメンバーシップがすでに無効である場合、このメソッドを呼び出しても効果はありません。マルチキャストグループメンバーシップが無効になると、それは永久に無効のままになります。</target>
        </trans-unit>
        <trans-unit id="2039134eb09ba4af75f970b182d2bc2812b9fbb9" translate="yes" xml:space="preserve">
          <source>Upper Case</source>
          <target state="translated">大文字</target>
        </trans-unit>
        <trans-unit id="83087183cf2fc461034d823bb990cf31750aea63" translate="yes" xml:space="preserve">
          <source>Uppercase</source>
          <target state="translated">Uppercase</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="d17cf28eb7701713654d3a2f67b57093ff517316" translate="yes" xml:space="preserve">
          <source>Usage Details About Controls</source>
          <target state="translated">コントロールについての使用方法の詳細</target>
        </trans-unit>
        <trans-unit id="342c659777997bec12f413246e5e24d6a8317e2a" translate="yes" xml:space="preserve">
          <source>Usage Example</source>
          <target state="translated">使用例</target>
        </trans-unit>
        <trans-unit id="31fdeb34a4f4bc8a7b882018ab434e09d2defd44" translate="yes" xml:space="preserve">
          <source>Usage Examples</source>
          <target state="translated">使用例</target>
        </trans-unit>
        <trans-unit id="0165150b427ee5eba5db30142ff24f84776e081f" translate="yes" xml:space="preserve">
          <source>Usage Information</source>
          <target state="translated">利用情報</target>
        </trans-unit>
        <trans-unit id="f3aea5cca0ddd71189e463baa0c48ce11300d657" translate="yes" xml:space="preserve">
          <source>Usage Note If the class path of a class loader that is used for provider loading includes remote network URLs then those URLs will be dereferenced in the process of searching for provider-configuration files.</source>
          <target state="translated">使用上の注意 プロバイダの読み込みに使用されるクラス・ローダのクラス・パスにリモート・ネットワークの URL が含まれている場合、プロバイダ設定ファイルを検索する際にそれらの URL が参照されます。</target>
        </trans-unit>
        <trans-unit id="c75d28d3a9e20da30a1d6c2c70c33ca260e431d0" translate="yes" xml:space="preserve">
          <source>Usage Threshold</source>
          <target state="translated">使用閾値</target>
        </trans-unit>
        <trans-unit id="9d2e9a122502f7b2db6b82c7ffed057d15d9d207" translate="yes" xml:space="preserve">
          <source>Usage Threshold Notification</source>
          <target state="translated">使用閾値の通知</target>
        </trans-unit>
        <trans-unit id="5a11db1e76075d8af69162b48cf74ba7a785b98c" translate="yes" xml:space="preserve">
          <source>Usage example, based on a typical producer-consumer scenario. Note that a &lt;code&gt;BlockingQueue&lt;/code&gt; can safely be used with multiple producers and multiple consumers.</source>
          <target state="translated">典型的な生産者-消費者シナリオに基づく使用例。 &lt;code&gt;BlockingQueue&lt;/code&gt; は、複数のプロデューサーと複数のコンシューマーで安全に使用できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="950d9c1aee5a0b8ac1664c8a9f40a8cddde14c8b" translate="yes" xml:space="preserve">
          <source>Usage examples</source>
          <target state="translated">使用例</target>
        </trans-unit>
        <trans-unit id="aabc75243121e9e20ceed9101a5f8abb3bab3f5e" translate="yes" xml:space="preserve">
          <source>Usage threshold notification will be emitted by &lt;a href=&quot;memorymxbean&quot;&gt;&lt;code&gt;MemoryMXBean&lt;/code&gt;&lt;/a&gt;. When the Java virtual machine detects that the memory usage of a memory pool has reached or exceeded the usage threshold the virtual machine will trigger the &lt;code&gt;MemoryMXBean&lt;/code&gt; to emit an &lt;a href=&quot;memorynotificationinfo#MEMORY_THRESHOLD_EXCEEDED&quot;&gt;&lt;code&gt;usage threshold exceeded notification&lt;/code&gt;&lt;/a&gt;. Another usage threshold exceeded notification will not be generated until the usage has fallen below the threshold and then exceeded it again.</source>
          <target state="translated">使用量しきい値通知は、&lt;a href=&quot;memorymxbean&quot;&gt; &lt;code&gt;MemoryMXBean&lt;/code&gt; &lt;/a&gt;によって発行されます。 Java仮想マシンは、メモリプールのメモリ使用量が使用量しきい値に達したか超えた &lt;code&gt;MemoryMXBean&lt;/code&gt; を検出すると、MemoryMXBeanをトリガーして&lt;a href=&quot;memorynotificationinfo#MEMORY_THRESHOLD_EXCEEDED&quot;&gt; &lt;code&gt;usage threshold exceeded notification&lt;/code&gt; &lt;/a&gt;送信します。別の使用量しきい値超過通知は、使用量がしきい値を下回ってから再び超過するまで生成されません。</target>
        </trans-unit>
        <trans-unit id="8a5db3849744a6440376b799c94856ec0f6a7d99" translate="yes" xml:space="preserve">
          <source>Usages of this class should typically be of the form: &lt;code&gt;ThreadLocalRandom.current().nextX(...)&lt;/code&gt; (where &lt;code&gt;X&lt;/code&gt; is &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;, etc). When all usages are of this form, it is never possible to accidently share a &lt;code&gt;ThreadLocalRandom&lt;/code&gt; across multiple threads.</source>
          <target state="translated">このクラスの使用法は通常、 &lt;code&gt;ThreadLocalRandom.current().nextX(...)&lt;/code&gt; （ &lt;code&gt;X&lt;/code&gt; は &lt;code&gt;Int&lt;/code&gt; 、 &lt;code&gt;Long&lt;/code&gt; など）の形式である必要があります。すべての使用法がこの形式である場合、誤って複数のスレッド間で &lt;code&gt;ThreadLocalRandom&lt;/code&gt; を共有することは決してありません。</target>
        </trans-unit>
        <trans-unit id="1ea1712940b16ad0cb3634dd44699d59d9d9b97b" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../mbeanserver#getClassLoaderRepository--&quot;&gt;&lt;code&gt;MBeanServer.getClassLoaderRepository()&lt;/code&gt;&lt;/a&gt;} instead.</source>
          <target state="translated">代わりに&lt;a href=&quot;../mbeanserver#getClassLoaderRepository--&quot;&gt; &lt;code&gt;MBeanServer.getClassLoaderRepository()&lt;/code&gt; &lt;/a&gt; }を使用してください。</target>
        </trans-unit>
        <trans-unit id="6d0574ab5aabe590a7863598fc160b49b0616ed4" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;mbeanserver#getClassLoaderRepository--&quot;&gt;&lt;code&gt;MBeanServer.getClassLoaderRepository()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">代わりに&lt;a href=&quot;mbeanserver#getClassLoaderRepository--&quot;&gt; &lt;code&gt;MBeanServer.getClassLoaderRepository()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="d8de16fac3452689c1ca4ef6f6a87d76acd588ed" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;GMT&lt;/code&gt; as the last resort if the given or detected time zone ID is unknown.</source>
          <target state="translated">指定または検出されたタイムゾーンIDが不明な場合は、最後の手段として &lt;code&gt;GMT&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="b6a4ff2935cbca02e9509a5e48d130a26c1d4814" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;getDateInstance&lt;/code&gt; to get the normal date format for that country. There are other static factory methods available. Use &lt;code&gt;getTimeInstance&lt;/code&gt; to get the time format for that country. Use &lt;code&gt;getDateTimeInstance&lt;/code&gt; to get a date and time format. You can pass in different options to these factory methods to control the length of the result; from &lt;a href=&quot;dateformat#SHORT&quot;&gt;&lt;code&gt;SHORT&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;dateformat#MEDIUM&quot;&gt;&lt;code&gt;MEDIUM&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;dateformat#LONG&quot;&gt;&lt;code&gt;LONG&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;dateformat#FULL&quot;&gt;&lt;code&gt;FULL&lt;/code&gt;&lt;/a&gt;. The exact result depends on the locale, but generally:</source>
          <target state="translated">&lt;code&gt;getDateInstance&lt;/code&gt; を使用して、その国の通常の日付形式を取得します。利用可能な他の静的ファクトリメソッドがあります。 &lt;code&gt;getTimeInstance&lt;/code&gt; を使用して、その国の時刻形式を取得します。 &lt;code&gt;getDateTimeInstance&lt;/code&gt; を使用して、日付と時刻の形式を取得します。結果の長さを制御するために、これらのファクトリメソッドにさまざまなオプションを渡すことができます。&lt;a href=&quot;dateformat#SHORT&quot;&gt; &lt;code&gt;SHORT&lt;/code&gt; &lt;/a&gt;に&lt;a href=&quot;dateformat#MEDIUM&quot;&gt; &lt;code&gt;MEDIUM&lt;/code&gt; &lt;/a&gt;に&lt;a href=&quot;dateformat#LONG&quot;&gt; &lt;code&gt;LONG&lt;/code&gt; &lt;/a&gt;へ&lt;a href=&quot;dateformat#FULL&quot;&gt; &lt;code&gt;FULL&lt;/code&gt; &lt;/a&gt;。正確な結果はロケールによって異なりますが、一般的には次のとおりです。</target>
        </trans-unit>
        <trans-unit id="968e46a353174ddf63f0e24fa4545f927c21bb53" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;getInstance&lt;/code&gt; or &lt;code&gt;getNumberInstance&lt;/code&gt; to get the normal number format. Use &lt;code&gt;getIntegerInstance&lt;/code&gt; to get an integer number format. Use &lt;code&gt;getCurrencyInstance&lt;/code&gt; to get the currency number format. And use &lt;code&gt;getPercentInstance&lt;/code&gt; to get a format for displaying percentages. With this format, a fraction like 0.53 is displayed as 53%.</source>
          <target state="translated">&lt;code&gt;getInstance&lt;/code&gt; または &lt;code&gt;getNumberInstance&lt;/code&gt; を使用して、通常の数値形式を取得します。 &lt;code&gt;getIntegerInstance&lt;/code&gt; を使用して、整数形式を取得します。通貨番号の形式を取得するには、 &lt;code&gt;getCurrencyInstance&lt;/code&gt; を使用します。また、パーセンテージを表示するためのフォーマットを取得するには、 &lt;code&gt;getPercentInstance&lt;/code&gt; を使用します。この形式では、0.53のような割合は53％と表示されます。</target>
        </trans-unit>
        <trans-unit id="b284f9ea96688c364578153437d85e4f80b64f0f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;isDocFlavorSupported()&lt;/code&gt; to verify that a DocFlavor is supported before calling this method.</source>
          <target state="translated">このメソッドを呼び出す前に、 &lt;code&gt;isDocFlavorSupported()&lt;/code&gt; を使用して、DocFlavorがサポートされていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="e54473f73c2d22ad76e50366ffbd8fa4b91ab4e3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;reconnect()&lt;/code&gt; to change the connection request controls of a context. Invoking &lt;code&gt;ldapContext.reconnect()&lt;/code&gt; affects only the connection used by &lt;code&gt;ldapContext&lt;/code&gt; and any new contexts instances that are derived form &lt;code&gt;ldapContext&lt;/code&gt;. Contexts that previously shared the connection with &lt;code&gt;ldapContext&lt;/code&gt; remain unchanged. That is, a context's connection request controls must be explicitly changed and is not affected by changes to another context's connection request controls.</source>
          <target state="translated">&lt;code&gt;reconnect()&lt;/code&gt; を使用して、コンテキストの接続要求コントロールを変更します。呼び出し &lt;code&gt;ldapContext.reconnect()&lt;/code&gt; によって使用される唯一の接続に影響 &lt;code&gt;ldapContext&lt;/code&gt; フォーム誘導される任意の新しいコンテキストインスタンス &lt;code&gt;ldapContext&lt;/code&gt; 。以前に &lt;code&gt;ldapContext&lt;/code&gt; と接続を共有していたコンテキストは変更されません。つまり、コンテキストの接続要求コントロールは明示的に変更する必要があり、別のコンテキストの接続要求コントロールへの変更の影響を受けません。</target>
        </trans-unit>
        <trans-unit id="d6a7f6f1129f57d15e66f9bfe66c911c2a147d49" translate="yes" xml:space="preserve">
          <source>Use CookieHandler.setDefault to set a brand new &lt;a href=&quot;cookiehandler&quot;&gt;&lt;code&gt;CookieHandler&lt;/code&gt;&lt;/a&gt; implementation</source>
          <target state="translated">CookieHandler.setDefaultを使用して新しい&lt;a href=&quot;cookiehandler&quot;&gt; &lt;code&gt;CookieHandler&lt;/code&gt; &lt;/a&gt;実装を設定します</target>
        </trans-unit>
        <trans-unit id="5f9eb5e22cdad367831e2e1d7b25d5f963b85b61" translate="yes" xml:space="preserve">
          <source>Use caution when constructing streams from repeated concatenation. Accessing an element of a deeply concatenated stream can result in deep call chains, or even &lt;code&gt;StackOverflowException&lt;/code&gt;.</source>
          <target state="translated">繰り返し連結からストリームを構築するときは注意してください。深く連結されたストリームの要素にアクセスすると、深い呼び出しチェーン、または &lt;code&gt;StackOverflowException&lt;/code&gt; が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="2effb865eb7ca9542e528aee307a24b00bd72cfa" translate="yes" xml:space="preserve">
          <source>Use of Locale</source>
          <target state="translated">ロケールの使用</target>
        </trans-unit>
        <trans-unit id="cb05a447cd7a37a80681ca041a26f4b78df9b004" translate="yes" xml:space="preserve">
          <source>Use of a &lt;code&gt;Clock&lt;/code&gt; is optional. All key date-time classes also have a &lt;code&gt;now()&lt;/code&gt; factory method that uses the system clock in the default time zone. The primary purpose of this abstraction is to allow alternate clocks to be plugged in as and when required. Applications use an object to obtain the current time rather than a static method. This can simplify testing.</source>
          <target state="translated">&lt;code&gt;Clock&lt;/code&gt; 使用はオプションです。すべての主要な日時クラスには、デフォルトのタイムゾーンでシステムクロックを使用する &lt;code&gt;now()&lt;/code&gt; ファクトリメソッドもあります。この抽象化の主な目的は、必要に応じて代替クロックを接続できるようにすることです。アプリケーションは、静的メソッドではなくオブジェクトを使用して現在時刻を取得します。これにより、テストを簡略化できます。</target>
        </trans-unit>
        <trans-unit id="369f1854ebeea7cd5961451e910b9ee767350d99" translate="yes" xml:space="preserve">
          <source>Use of a general &lt;code&gt;Object&lt;/code&gt; other than an &lt;code&gt;ImageInputStream&lt;/code&gt; is intended for readers that interact directly with a capture device or imaging protocol. The set of legal classes is advertised by the reader's service provider's &lt;code&gt;getInputTypes&lt;/code&gt; method; most readers will return a single-element array containing only &lt;code&gt;ImageInputStream.class&lt;/code&gt; to indicate that they accept only an &lt;code&gt;ImageInputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageInputStream&lt;/code&gt; 以外の一般的な &lt;code&gt;Object&lt;/code&gt; の使用は、キャプチャデバイスまたはイメージングプロトコルと直接対話するリーダーを対象としています。正当なクラスのセットは、リーダーのサービスプロバイダーの &lt;code&gt;getInputTypes&lt;/code&gt; メソッドによって通知されます。ほとんどのリーダーは、 &lt;code&gt;ImageInputStream.class&lt;/code&gt; のみを含む単一要素の配列を返し、 &lt;code&gt;ImageInputStream&lt;/code&gt; のみを受け入れることを示します。</target>
        </trans-unit>
        <trans-unit id="a6217f56b73d214bf4cffb2a05aa4b6c8ffe43cf" translate="yes" xml:space="preserve">
          <source>Use of a general &lt;code&gt;Object&lt;/code&gt; other than an &lt;code&gt;ImageOutputStream&lt;/code&gt; is intended for writers that interact directly with an output device or imaging protocol. The set of legal classes is advertised by the writer's service provider's &lt;code&gt;getOutputTypes&lt;/code&gt; method; most writers will return a single-element array containing only &lt;code&gt;ImageOutputStream.class&lt;/code&gt; to indicate that they accept only an &lt;code&gt;ImageOutputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageOutputStream&lt;/code&gt; 以外の一般的な &lt;code&gt;Object&lt;/code&gt; の使用は、出力デバイスまたはイメージングプロトコルと直接対話するライターを対象としています。正当なクラスのセットは、ライターのサービスプロバイダーの &lt;code&gt;getOutputTypes&lt;/code&gt; メソッドによって通知されます。ほとんどのライターは、 &lt;code&gt;ImageOutputStream.class&lt;/code&gt; のみを含む単一要素の配列を返し、 &lt;code&gt;ImageOutputStream&lt;/code&gt; のみを受け入れることを示します。</target>
        </trans-unit>
        <trans-unit id="919fc92515203369ae15eb2d6fdc235b2e160fd8" translate="yes" xml:space="preserve">
          <source>Use of a type</source>
          <target state="translated">タイプの使用</target>
        </trans-unit>
        <trans-unit id="5fbb66b60991b9d33cc1b3f5afa907a46906e307" translate="yes" xml:space="preserve">
          <source>Use of short zone IDs has been deprecated in &lt;code&gt;java.util.TimeZone&lt;/code&gt;. This map allows the IDs to continue to be used via the &lt;a href=&quot;zoneid#of-java.lang.String-java.util.Map-&quot;&gt;&lt;code&gt;of(String, Map)&lt;/code&gt;&lt;/a&gt; factory method.</source>
          <target state="translated">&lt;code&gt;java.util.TimeZone&lt;/code&gt; では、短いゾーンIDの使用は非推奨になりました。このマップにより、&lt;a href=&quot;zoneid#of-java.lang.String-java.util.Map-&quot;&gt; &lt;code&gt;of(String, Map)&lt;/code&gt; &lt;/a&gt;ファクトリメソッドを介してIDを引き続き使用できます。</target>
        </trans-unit>
        <trans-unit id="47776f8de3b6e99b62367124396195d1311cc3e5" translate="yes" xml:space="preserve">
          <source>Use of this permission is discouraged from further use because it is possible to circumvent the name restrictions by overriding the &lt;a href=&quot;provider#getName--&quot;&gt;&lt;code&gt;Provider.getName()&lt;/code&gt;&lt;/a&gt; method. Also, there is an equivalent level of risk associated with granting code permission to insert a provider with a specific name, or any name it chooses. Users should use the &quot;insertProvider&quot; permission instead.</source>
          <target state="translated">&lt;a href=&quot;provider#getName--&quot;&gt; &lt;code&gt;Provider.getName()&lt;/code&gt; &lt;/a&gt;メソッドをオーバーライドすることで名前の制限を回避できるため、このアクセス許可の使用は今後の使用はお勧めしません。また、コードに特定の名前または選択した名前のプロバイダーを挿入する許可を与えることに関連するリスクと同等のレベルがあります。代わりに、「insertProvider」権限を使用してください。</target>
        </trans-unit>
        <trans-unit id="9051677a6e4fbcc422563bc59bd33e39fea73ade" translate="yes" xml:space="preserve">
          <source>Use serialVersionUID from JNDI 1.1.1 for interoperability.</source>
          <target state="translated">JNDI 1.1.1.1 の serialVersionUID を使用してください。</target>
        </trans-unit>
        <trans-unit id="fbc9ac9277672c5403bd4fc62a472f102d00bbee" translate="yes" xml:space="preserve">
          <source>Use subclassing for naming systems that generate contents of a binding dynamically.</source>
          <target state="translated">バインディングの内容を動的に生成する命名システムでは、サブクラス化を使用します。</target>
        </trans-unit>
        <trans-unit id="e911b55ff1c3850b36c69642edf91a97596384f6" translate="yes" xml:space="preserve">
          <source>Use subclassing for naming systems that generate contents of a name/class pair dynamically.</source>
          <target state="translated">名前とクラスのペアの内容を動的に生成する命名システムでは、サブクラス化を使用します。</target>
        </trans-unit>
        <trans-unit id="8830af169574657002ea7e021be826a50d5de602" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;calendar#compareTo-java.util.Calendar-&quot;&gt;&lt;code&gt;compareTo&lt;/code&gt;&lt;/a&gt; method to compare only the time values.</source>
          <target state="translated">時間値のみを比較するには、&lt;a href=&quot;calendar#compareTo-java.util.Calendar-&quot;&gt; &lt;code&gt;compareTo&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="77b3922a77064dfd2f5179047923f5a109f4b04b" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;BeanInfo&lt;/code&gt; interface to create a &lt;code&gt;BeanInfo&lt;/code&gt; class and provide explicit information about the methods, properties, events, and other features of your beans.</source>
          <target state="translated">使用し &lt;code&gt;BeanInfo&lt;/code&gt; 作成するインターフェイスを &lt;code&gt;BeanInfo&lt;/code&gt; クラスをし、あなたの豆のメソッド、プロパティ、イベント、およびその他の機能についての明確な情報を提供します。</target>
        </trans-unit>
        <trans-unit id="08a1946569a048b1d9926101b54d2c830546c42a" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;Proxy.NO_PROXY&lt;/code&gt; constant for representing a direct connection.</source>
          <target state="translated">直接接続を表すには、 &lt;code&gt;Proxy.NO_PROXY&lt;/code&gt; 定数を使用します。</target>
        </trans-unit>
        <trans-unit id="91efc2cdb4c263923502710377884700378cd1be" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;user.timezone&lt;/code&gt; property value as the default time zone ID if it's available.</source>
          <target state="translated">利用可能な場合は、デフォルトのタイムゾーンIDとして &lt;code&gt;user.timezone&lt;/code&gt; プロパティ値を使用します。</target>
        </trans-unit>
        <trans-unit id="59df542fa6644cde9e8e00add13f594d57b4ceb9" translate="yes" xml:space="preserve">
          <source>Use the control factories specified in the &lt;code&gt;LdapContext.CONTROL_FACTORIES&lt;/code&gt; property of the environment, and of the provider resource file associated with &lt;code&gt;ctx&lt;/code&gt;, in that order. The value of this property is a colon-separated list of factory class names that are tried in order, and the first one that succeeds in creating the control is the one used. If none of the factories can be loaded, return &lt;code&gt;ctl&lt;/code&gt;. If an exception is encountered while creating the control, the exception is passed up to the caller.</source>
          <target state="translated">環境の &lt;code&gt;LdapContext.CONTROL_FACTORIES&lt;/code&gt; プロパティで指定されたコントロールファクトリ、および &lt;code&gt;ctx&lt;/code&gt; に関連付けられたプロバイダーリソースファイルをこの順序で使用します。このプロパティの値は、順番に試行されるファクトリクラス名のコロンで区切られたリストであり、コントロールの作成に成功した最初のものが使用されます。 &lt;code&gt;ctl&lt;/code&gt; ファクトリもロードできない場合は、ctlを返します。コントロールの作成中に例外が発生した場合、その例外は呼び出し元に渡されます。</target>
        </trans-unit>
        <trans-unit id="ae13ded529937cebe691ca01cd0112b1d94e2943" translate="yes" xml:space="preserve">
          <source>Use the object factories specified in the &lt;code&gt;Context.OBJECT_FACTORIES&lt;/code&gt; property of the environment, and of the provider resource file associated with &lt;code&gt;nameCtx&lt;/code&gt;, in that order. The value of this property is a colon-separated list of factory class names that are tried in order, and the first one that succeeds in creating an object is the one used. If none of the factories can be loaded, return &lt;code&gt;refInfo&lt;/code&gt;. If an exception is encountered while creating the object, the exception is passed up to the caller.</source>
          <target state="translated">環境の &lt;code&gt;Context.OBJECT_FACTORIES&lt;/code&gt; プロパティで指定されたオブジェクトファクトリ、および &lt;code&gt;nameCtx&lt;/code&gt; に関連付けられたプロバイダリソースファイルをこの順序で使用します。このプロパティの値は、順番に試行されるファクトリクラス名のコロンで区切られたリストであり、オブジェクトの作成に成功した最初のものが使用されます。 &lt;code&gt;refInfo&lt;/code&gt; ファクトリもロードできない場合は、refInfoを返します。オブジェクトの作成中に例外が発生した場合、その例外は呼び出し元に渡されます。</target>
        </trans-unit>
        <trans-unit id="78d4a64996e34ba4ebf9fcdfde074ad4f6713750" translate="yes" xml:space="preserve">
          <source>Used by VM to control lowmem implicit suspension.</source>
          <target state="translated">Lowmemの暗黙のサスペンションを制御するためにVMで使用されます。</target>
        </trans-unit>
        <trans-unit id="f089ba6628a9ebe9397fc69fcb7ce8eedd0734ce" translate="yes" xml:space="preserve">
          <source>Used by writeObject to serialize a Collection.</source>
          <target state="translated">writeObject がコレクションをシリアライズする際に使用します。</target>
        </trans-unit>
        <trans-unit id="5baeecd07738a749cecd78db3cdc764d254a73bc" translate="yes" xml:space="preserve">
          <source>Used in</source>
          <target state="translated">で使用されています。</target>
        </trans-unit>
        <trans-unit id="9de65447279598834af12315c0ca9487bfe695d3" translate="yes" xml:space="preserve">
          <source>Used only by subclasses.</source>
          <target state="translated">サブクラスでのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="48a65ae98a939b0d43426cb898489db33dbadf8a" translate="yes" xml:space="preserve">
          <source>Used only by subclasses. Constructs a TCP connection to a named host at a specified port. This acts as the SSL client.</source>
          <target state="translated">サブクラスでのみ使用されます。指定されたポートで指定されたホストへのTCP接続を構築します。これはSSLクライアントとして動作します。</target>
        </trans-unit>
        <trans-unit id="5e7ab8476bfd35234f9cbe16408608fc70933694" translate="yes" xml:space="preserve">
          <source>Used only by subclasses. Constructs a TCP connection to a server at a specified address and port. This acts as the SSL client.</source>
          <target state="translated">サブクラスでのみ使用されます。指定したアドレスとポートでサーバへのTCP接続を構築します。これはSSLクライアントとして動作します。</target>
        </trans-unit>
        <trans-unit id="10af4e079828016fb0aedb6e23582ad48eb8f307" translate="yes" xml:space="preserve">
          <source>Used only by subclasses. Constructs an SSL connection to a named host at a specified port, binding the client side of the connection a given address and port. This acts as the SSL client.</source>
          <target state="translated">サブクラスでのみ使用されます。指定されたポートで指定されたホストにSSL接続を構築し、接続のクライアント側に指定されたアドレスとポートをバインドします。これがSSLクライアントとして動作します。</target>
        </trans-unit>
        <trans-unit id="91fa7f2c25747e62338e344309bafbb32d763769" translate="yes" xml:space="preserve">
          <source>Used only by subclasses. Constructs an SSL connection to a server at a specified address and TCP port, binding the client side of the connection a given address and port. This acts as the SSL client.</source>
          <target state="translated">サブクラスでのみ使用されます。指定されたアドレスとTCPポートでサーバにSSL接続を構築し、接続のクライアント側を指定されたアドレスとポートにバインドします。これがSSLクライアントとして動作します。</target>
        </trans-unit>
        <trans-unit id="0025fcfeddc3524b72110a78cdab26f2b892ea8e" translate="yes" xml:space="preserve">
          <source>Used only by subclasses. Constructs an uninitialized, unconnected TCP socket.</source>
          <target state="translated">サブクラスでのみ使用されます。初期化されていない、接続されていない TCP ソケットを構築します。</target>
        </trans-unit>
        <trans-unit id="c0bddd463685892277a40abb16b680339bec2858" translate="yes" xml:space="preserve">
          <source>Used to call top-level procedures and functions defined in scripts.</source>
          <target state="translated">スクリプトで定義されたトップレベルのプロシージャや関数を呼び出すために使用します。</target>
        </trans-unit>
        <trans-unit id="b3a0365b75ebbe1be6c0478a857fd057501fda40" translate="yes" xml:space="preserve">
          <source>Used to collect diagnostics in a list, for example:</source>
          <target state="translated">リストなどで診断を収集するために使用します。</target>
        </trans-unit>
        <trans-unit id="76e666f3fc2216cd9c4875ad9cb82c35eb5d82a0" translate="yes" xml:space="preserve">
          <source>Used to determine if the &lt;code&gt;BeanContext&lt;/code&gt; child is avoiding using its GUI.</source>
          <target state="translated">&lt;code&gt;BeanContext&lt;/code&gt; の子がそのGUIの使用を回避しているかどうかを判断するために使用されます。</target>
        </trans-unit>
        <trans-unit id="059cba32d4ac662e6962e286fb1ad9b656ec1f30" translate="yes" xml:space="preserve">
          <source>Used to indicate whether of not we are running in an application builder environment.</source>
          <target state="translated">アプリケーションビルダ環境で実行しているかどうかを示すために使用します。</target>
        </trans-unit>
        <trans-unit id="24f417475b4eadca91689ec6e94c81dcb62d62b3" translate="yes" xml:space="preserve">
          <source>Used to indicate whether of not we are running in an environment where GUI interaction is available.</source>
          <target state="translated">GUIインタラクションが利用できる環境で実行しているかどうかを示すために使用します。</target>
        </trans-unit>
        <trans-unit id="514c237b4e252990d5d825aaaa5729d76cd23c91" translate="yes" xml:space="preserve">
          <source>Used to make half-open intervals.</source>
          <target state="translated">半開きの間隔を作るのに使用します。</target>
        </trans-unit>
        <trans-unit id="095f05021f600517a58d2ffaa8fcb578f1b234e2" translate="yes" xml:space="preserve">
          <source>Used to quote special characters in a prefix or suffix, for example, &lt;code&gt;&quot;'#'#&quot;&lt;/code&gt; formats 123 to &lt;code&gt;&quot;#123&quot;&lt;/code&gt;. To create a single quote itself, use two in a row: &lt;code&gt;&quot;# o''clock&quot;&lt;/code&gt;.</source>
          <target state="translated">接頭辞または接尾辞の特殊文字を引用するために使用されます。たとえば、 &lt;code&gt;&quot;'#'#&quot;&lt;/code&gt; 123から &lt;code&gt;&quot;#123&quot;&lt;/code&gt; にフォーマットします。単一引用符自体を作成するには、 &lt;code&gt;&quot;# o''clock&quot;&lt;/code&gt; ように2つ続けて使用します。</target>
        </trans-unit>
        <trans-unit id="e479e11383f8e69635bd6f43ec5192953964b157" translate="yes" xml:space="preserve">
          <source>Used to represent the object name of an MBean and its class name.</source>
          <target state="translated">MBeanのオブジェクト名とクラス名を表現するために使用します。</target>
        </trans-unit>
        <trans-unit id="d558813a808dca19d4ce58ecce508279911763d8" translate="yes" xml:space="preserve">
          <source>Used to represent the object name of an MBean and its class name. If the MBean is a Dynamic MBean the class name should be retrieved from the &lt;code&gt;MBeanInfo&lt;/code&gt; it provides.</source>
          <target state="translated">MBeanのオブジェクト名とそのクラス名を表すために使用されます。MBeanが動的MBeanの場合、クラス名はそれが提供する &lt;code&gt;MBeanInfo&lt;/code&gt; から取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="eac1f99ed7a2a61518954ff6bb52b218f542b75a" translate="yes" xml:space="preserve">
          <source>Used to serialize all children of this &lt;code&gt;BeanContext&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;BeanContext&lt;/code&gt; のすべての子をシリアル化するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b5feb7ebf078ae8f31e7fe60d62dedb4eeb39559" translate="yes" xml:space="preserve">
          <source>Used to signal that no position is available.</source>
          <target state="translated">位置がないことを知らせるために使用します。</target>
        </trans-unit>
        <trans-unit id="1e630c1b8d00940e76e0e39623045dd2e3f9e1dc" translate="yes" xml:space="preserve">
          <source>Useful constant for AM_PM field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">AM_PMフィールドアライメントに便利な定数です。日付/時刻フォーマットのFieldPositionで使用されます。</target>
        </trans-unit>
        <trans-unit id="1717090a53383cb7ddf3f7a3376e802f7c727013" translate="yes" xml:space="preserve">
          <source>Useful constant for DATE field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">DATEフィールドの整列に便利な定数です。日付/時刻の書式設定のFieldPositionで使用します。</target>
        </trans-unit>
        <trans-unit id="b0585b1e568bc9a7fd6265dec9f4c6e64cf2f936" translate="yes" xml:space="preserve">
          <source>Useful constant for DAY_OF_WEEK field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">DAY_OF_WEEKフィールドのアラインメントに便利な定数です。日付/時刻フォーマットのFieldPositionで使用されます。</target>
        </trans-unit>
        <trans-unit id="c22a4d9c5053ffc74d1b60613d4aa751e298e0e9" translate="yes" xml:space="preserve">
          <source>Useful constant for DAY_OF_WEEK_IN_MONTH field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">DAY_OF_WEEK_IN_MONTHフィールドのアラインメントに便利な定数です。日付/時刻フォーマットのFieldPositionで使用されます。</target>
        </trans-unit>
        <trans-unit id="078ea5137d804494257e458c9087180c6f3e076e" translate="yes" xml:space="preserve">
          <source>Useful constant for DAY_OF_YEAR field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">DAY_OF_YEARフィールドのアラインメントに便利な定数です。日付/時刻フォーマットのFieldPositionで使用されます。</target>
        </trans-unit>
        <trans-unit id="cdfee4d58afecb05695edc7410effd94885ad3fe" translate="yes" xml:space="preserve">
          <source>Useful constant for ERA field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">ERAフィールドアライメントに便利な定数。日付/時刻フォーマットのFieldPositionで使用されます。</target>
        </trans-unit>
        <trans-unit id="7496d909fd055ddd02f76b81f65f66da16e55578" translate="yes" xml:space="preserve">
          <source>Useful constant for MILLISECOND field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">MILLISECONDフィールドのアラインメントに便利な定数です。日付/時刻フォーマットのFieldPositionで使用されます。</target>
        </trans-unit>
        <trans-unit id="760f058c406409026daa276330254588d98487d7" translate="yes" xml:space="preserve">
          <source>Useful constant for MINUTE field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">MINUTEフィールドのアラインメントに便利な定数です。日付/時刻フォーマットのFieldPositionで使用されます。</target>
        </trans-unit>
        <trans-unit id="48f280da5895751f3da21ecc589b1c6b090f3914" translate="yes" xml:space="preserve">
          <source>Useful constant for MONTH field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">MONTHフィールドのアラインメントに便利な定数です。日付/時刻フォーマットのFieldPositionで使用されます。</target>
        </trans-unit>
        <trans-unit id="36deccc88dd7749fb281cf8a90a9fd727798252a" translate="yes" xml:space="preserve">
          <source>Useful constant for SECOND field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">SECONDフィールドアライメントに便利な定数です。日付/時刻フォーマットのFieldPositionで使用されます。</target>
        </trans-unit>
        <trans-unit id="cfb365bfb37cf7061fe1055a69f32a7c16d0ac10" translate="yes" xml:space="preserve">
          <source>Useful constant for TIMEZONE field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">TIMEZONEフィールドのアラインメントに便利な定数です。日付/時刻フォーマットのFieldPositionで使用されます。</target>
        </trans-unit>
        <trans-unit id="e52a4998d4de3a751f8eab00aa01d9d109e32893" translate="yes" xml:space="preserve">
          <source>Useful constant for WEEK_OF_MONTH field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">WEEK_OF_MONTHフィールドのアラインメントに便利な定数です。日付/時刻フォーマットのFieldPositionで使用されます。</target>
        </trans-unit>
        <trans-unit id="4046930157759bf774a76acb156fab3cbd2a0869" translate="yes" xml:space="preserve">
          <source>Useful constant for WEEK_OF_YEAR field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">WEEK_OF_YEARフィールドのアラインメントに便利な定数です。日付/時刻フォーマットのFieldPositionで使用されます。</target>
        </trans-unit>
        <trans-unit id="7f0db4caf9bdd1f3dad161d524726dbab3efc387" translate="yes" xml:space="preserve">
          <source>Useful constant for YEAR field alignment. Used in FieldPosition of date/time formatting.</source>
          <target state="translated">YEARフィールドの整列に便利な定数です。日付/時刻フォーマットのFieldPositionで使用されます。</target>
        </trans-unit>
        <trans-unit id="02dc34e0f9c65e59e814be3f08bd243301794280" translate="yes" xml:space="preserve">
          <source>Useful constant for country.</source>
          <target state="translated">国のための便利な定数。</target>
        </trans-unit>
        <trans-unit id="752c091cbd64e117708e5d1e26ae74635ab5f5e4" translate="yes" xml:space="preserve">
          <source>Useful constant for language.</source>
          <target state="translated">言語のための有用な定数。</target>
        </trans-unit>
        <trans-unit id="e7a30c73acd7f2c30aa123ee08961cec2cc94a3f" translate="yes" xml:space="preserve">
          <source>Useful constant for one-based HOUR field alignment. Used in FieldPosition of date/time formatting. HOUR1_FIELD is used for the one-based 12-hour clock. For example, 11:30 PM + 1 hour results in 12:30 AM.</source>
          <target state="translated">1ベースのHOURフィールドのアラインメントに便利な定数。日付/時刻の書式設定のFieldPositionで使用します。HOUR1_FIELDは、1ベースの12時間時計に使用されます。例えば、午後11:30 PM+1時間は、午前12:30 AMになります。</target>
        </trans-unit>
        <trans-unit id="9518c0269a7db77b936bd3697851473f4a433bd6" translate="yes" xml:space="preserve">
          <source>Useful constant for one-based HOUR_OF_DAY field alignment. Used in FieldPosition of date/time formatting. HOUR_OF_DAY1_FIELD is used for the one-based 24-hour clock. For example, 23:59 + 01:00 results in 24:59.</source>
          <target state="translated">1ベースのHOUR_OF_DAYフィールドのアラインメントに便利な定数です。日付/時刻の書式設定のFieldPositionで使用されます。HOUR_OF_DAY1_FIELDは、1ベースの24時間時計に使用されます。例えば、23:59+01:00は24:59となります。</target>
        </trans-unit>
        <trans-unit id="a17421ff86d0dcfb29ea06a1017edc53a44c5900" translate="yes" xml:space="preserve">
          <source>Useful constant for the root locale. The root locale is the locale whose language, country, and variant are empty (&quot;&quot;) strings. This is regarded as the base locale of all locales, and is used as the language/country neutral locale for the locale sensitive operations.</source>
          <target state="translated">ルートロケールを指定する際に便利な定数です。ルートロケールとは、言語、国、バリアントが空(&quot;&quot;)の文字列であるロケールのことです。これはすべてのロケールの基底ロケールとみなされ、ロケールに敏感な操作を行う際の言語/国の中立ロケールとして使用されます。</target>
        </trans-unit>
        <trans-unit id="b7c8994d2281159d3a096671d167b72b594747ab" translate="yes" xml:space="preserve">
          <source>Useful constant for zero-based HOUR field alignment. Used in FieldPosition of date/time formatting. HOUR0_FIELD is used for the zero-based 12-hour clock. For example, 11:30 PM + 1 hour results in 00:30 AM.</source>
          <target state="translated">ゼロベースのHOURフィールドのアラインメントに便利な定数。日付/時刻の書式設定のFieldPositionで使用されます。HOUR0_FIELDは、ゼロベースの12時間時計に使用されます。例えば、午後11:30 PM+1時間は、午前00:30 AMになります。</target>
        </trans-unit>
        <trans-unit id="1804ef42b6094fcfa1e24dabc30104e845e88f6c" translate="yes" xml:space="preserve">
          <source>Useful constant for zero-based HOUR_OF_DAY field alignment. Used in FieldPosition of date/time formatting. HOUR_OF_DAY0_FIELD is used for the zero-based 24-hour clock. For example, 23:59 + 01:00 results in 00:59.</source>
          <target state="translated">ゼロベースのHOUR_OF_DAYフィールドのアラインメントに便利な定数です。日付/時刻の書式設定のFieldPositionで使用されます。HOUR_OF_DAY0_FIELDは、ゼロベースの24時間時計に使用されます。例えば、23:59+01:00は00:59となります。</target>
        </trans-unit>
        <trans-unit id="7323e97d860493ed6b8f4e2ea90e443efe9b00a2" translate="yes" xml:space="preserve">
          <source>User code does not usually implement this interface. Instead, an object that implements this interface is obtained with one of the methods in the &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">ユーザーコードは通常、このインターフェースを実装していません。代わりに、このインターフェースを実装するオブジェクトは、&lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; &lt;/a&gt;クラスのメソッドの1つで取得されます。</target>
        </trans-unit>
        <trans-unit id="769613a1552b3fa5b235c3cba3c0eb3410b41b0a" translate="yes" xml:space="preserve">
          <source>User code does not usually refer to this interface. It is specified as part of the public API so that different implementations of that API will interoperate.</source>
          <target state="translated">ユーザーコードは通常、このインターフェイスを参照しません。これは公開APIの一部として指定されており、そのAPIの異なる実装が相互運用できるようになっています。</target>
        </trans-unit>
        <trans-unit id="98fc5ea770063874a158ad7620ac557ceb249d53" translate="yes" xml:space="preserve">
          <source>User code does not usually reference this class directly. RMI connection servers are usually created with the class &lt;a href=&quot;rmiconnectorserver&quot;&gt;&lt;code&gt;RMIConnectorServer&lt;/code&gt;&lt;/a&gt;. Remote clients usually create connections either with &lt;a href=&quot;../jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt; or by instantiating &lt;a href=&quot;rmiconnector&quot;&gt;&lt;code&gt;RMIConnector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ユーザーコードは通常、このクラスを直接参照しません。RMI接続サーバーは通常、クラス&lt;a href=&quot;rmiconnectorserver&quot;&gt; &lt;code&gt;RMIConnectorServer&lt;/code&gt; で&lt;/a&gt;作成されます。リモートクライアントは通常、&lt;a href=&quot;../jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; &lt;/a&gt;を使用するか、&lt;a href=&quot;rmiconnector&quot;&gt; &lt;code&gt;RMIConnector&lt;/code&gt; &lt;/a&gt;をインスタンス化することによって接続を作成します。</target>
        </trans-unit>
        <trans-unit id="470db50815c75a4421e1e3e69ef0f53604f7e2da" translate="yes" xml:space="preserve">
          <source>User interfaces and operating systems use system-dependent &lt;em&gt;pathname strings&lt;/em&gt; to name files and directories. This class presents an abstract, system-independent view of hierarchical pathnames. An &lt;em&gt;abstract pathname&lt;/em&gt; has two components:</source>
          <target state="translated">ユーザーインターフェイスとオペレーティングシステムは、システムに依存する&lt;em&gt;パス名文字列&lt;/em&gt;を使用して、ファイルとディレクトリに名前を付けます。このクラスは、階層パス名のシステムに依存しない抽象的なビューを提供します。&lt;em&gt;抽象パス名には、&lt;/em&gt; 2つのコンポーネントがあります。</target>
        </trans-unit>
        <trans-unit id="18becf225322e1329f99848d010f797c596b8aeb" translate="yes" xml:space="preserve">
          <source>User's account name</source>
          <target state="translated">ユーザーのアカウント名</target>
        </trans-unit>
        <trans-unit id="5afefe71b24cc782f7bdec73d760815edcfc743b" translate="yes" xml:space="preserve">
          <source>User's current working directory</source>
          <target state="translated">ユーザーの現在の作業ディレクトリ</target>
        </trans-unit>
        <trans-unit id="f08fe0bf6dfaf09e97a0137919cb4dbb30048d83" translate="yes" xml:space="preserve">
          <source>User's home directory</source>
          <target state="translated">ユーザーのホームディレクトリ</target>
        </trans-unit>
        <trans-unit id="83bfcc04a4ce5af2d24c0f0c96dfadfd09827d2f" translate="yes" xml:space="preserve">
          <source>User-defined attributes may be used in some implementations to store security related attributes so consequently, in the case of the default provider at least, all methods that access user-defined attributes require the &lt;code&gt;RuntimePermission(&quot;accessUserDefinedAttributes&quot;)&lt;/code&gt; permission when a security manager is installed.</source>
          <target state="translated">一部の実装では、ユーザー定義の属性を使用してセキュリティ関連の属性を格納する場合があるため、少なくともデフォルトのプロバイダーの場合、ユーザー定義の属性にアクセスするすべてのメソッドには、セキュリティマネージャーの実行時に &lt;code&gt;RuntimePermission(&quot;accessUserDefinedAttributes&quot;)&lt;/code&gt; 権限が必要です。インストールされています。</target>
        </trans-unit>
        <trans-unit id="1e9637ae33200dcc5fa5f6b41e9ef43ad52150de" translate="yes" xml:space="preserve">
          <source>User-defined connector protocols are also possible using the &lt;a href=&quot;jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt; and, optionally, the Generic Connector (not part of this bundle, see note below).</source>
          <target state="translated">&lt;a href=&quot;jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; &lt;/a&gt;およびオプションでGeneric Connector（このバンドルの一部ではありません。下記の注を参照）を使用して、ユーザー定義のコネクタプロトコルも可能です。</target>
        </trans-unit>
        <trans-unit id="3c3c973c116f6d5e4da4352238faa225b96d3186" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView</source>
          <target state="translated">UserDefinedFileAttributeView</target>
        </trans-unit>
        <trans-unit id="75c1e2e5fde85912139123bc71055893c3297dd0" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.delete()</source>
          <target state="translated">UserDefinedFileAttributeView.delete()</target>
        </trans-unit>
        <trans-unit id="87722629291ad85412459bfbe644ff495ee7b637" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.list()</source>
          <target state="translated">UserDefinedFileAttributeView.list()</target>
        </trans-unit>
        <trans-unit id="62c0a0413d5bbc8976220551e62b4bf76b5bf134" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.name()</source>
          <target state="translated">UserDefinedFileAttributeView.name()</target>
        </trans-unit>
        <trans-unit id="ede0f4e2d26cc8160d5a5b9ee9e48cdd492a4a61" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.read()</source>
          <target state="translated">UserDefinedFileAttributeView.read()</target>
        </trans-unit>
        <trans-unit id="1b82bc93beb601ec3d909b3fde3886b3de7e943a" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.size()</source>
          <target state="translated">UserDefinedFileAttributeView.size()</target>
        </trans-unit>
        <trans-unit id="c687ec99c49ea7a32167b8b12adf178757f27308" translate="yes" xml:space="preserve">
          <source>UserDefinedFileAttributeView.write()</source>
          <target state="translated">UserDefinedFileAttributeView.write()</target>
        </trans-unit>
        <trans-unit id="844ea263d61d5ed56fa1bc82cd753b1747ffb55f" translate="yes" xml:space="preserve">
          <source>UserPrincipal</source>
          <target state="translated">UserPrincipal</target>
        </trans-unit>
        <trans-unit id="bd0a60b59c4da806a482b55818c755e501c7ac80" translate="yes" xml:space="preserve">
          <source>UserPrincipalLookupService</source>
          <target state="translated">UserPrincipalLookupService</target>
        </trans-unit>
        <trans-unit id="e0840bba6e112c75ffe66ac30f47b21f2ee1d493" translate="yes" xml:space="preserve">
          <source>UserPrincipalLookupService.lookupPrincipalByGroupName()</source>
          <target state="translated">UserPrincipalLookupService.lookupPrincipalByGroupName()</target>
        </trans-unit>
        <trans-unit id="a7825f199743bc5d242aca386612daca76570320" translate="yes" xml:space="preserve">
          <source>UserPrincipalLookupService.lookupPrincipalByName()</source>
          <target state="translated">UserPrincipalLookupService.lookupPrincipalByName()</target>
        </trans-unit>
        <trans-unit id="72784aa1f92c2222c84e34f40fd34df125ee6eac" translate="yes" xml:space="preserve">
          <source>UserPrincipalNotFoundException</source>
          <target state="translated">UserPrincipalNotFoundException</target>
        </trans-unit>
        <trans-unit id="e69ec342d5b6b3b0a3b5d7fba11c87298a3efe00" translate="yes" xml:space="preserve">
          <source>UserPrincipalNotFoundException.getName()</source>
          <target state="translated">UserPrincipalNotFoundException.getName()</target>
        </trans-unit>
        <trans-unit id="ef3a21a074fb301ebae0e1829dfb7404033b1c4f" translate="yes" xml:space="preserve">
          <source>Users can supersede the Java runtime currency data by means of the system property &lt;code&gt;java.util.currency.data&lt;/code&gt;. If this system property is defined then its value is the location of a properties file, the contents of which are key/value pairs of the ISO 3166 country codes and the ISO 4217 currency data respectively. The value part consists of three ISO 4217 values of a currency, i.e., an alphabetic code, a numeric code, and a minor unit. Those three ISO 4217 values are separated by commas. The lines which start with '#'s are considered comment lines. An optional UTC timestamp may be specified per currency entry if users need to specify a cutover date indicating when the new data comes into effect. The timestamp is appended to the end of the currency properties and uses a comma as a separator. If a UTC datestamp is present and valid, the JRE will only use the new currency properties if the current UTC date is later than the date specified at class loading time. The format of the timestamp must be of ISO 8601 format : &lt;code&gt;'yyyy-MM-dd'T'HH:mm:ss'&lt;/code&gt;. For example,</source>
          <target state="translated">ユーザーは、システムプロパティ &lt;code&gt;java.util.currency.data&lt;/code&gt; を使用して、Javaランタイム通貨データを置き換えることができます。。このシステムプロパティが定義されている場合、その値はプロパティファイルの場所であり、その内容はそれぞれISO 3166国コードとISO 4217通貨データのキーと値のペアです。値の部分は、通貨の3つのISO 4217値、つまり、アルファベットコード、数値コード、およびマイナーユニットで構成されます。これらの3つのISO 4217値はコンマで区切られています。 '＃'で始まる行はコメント行と見なされます。ユーザーが新しいデータが有効になる時期を示すカットオーバー日付を指定する必要がある場合は、オプションのUTCタイムスタンプを通貨エントリごとに指定できます。タイムスタンプは通貨プロパティの末尾に追加され、区切り記号としてカンマを使用します。 UTC日付スタンプが存在し、有効な場合、JREは、現在のUTC日付がクラスのロード時に指定された日付よりも遅い場合にのみ、新しい通貨プロパティを使用します。タイムスタンプの形式はISO 8601形式である必要があります。 &lt;code&gt;'yyyy-MM-dd'T'HH:mm:ss'&lt;/code&gt; 。例えば、</target>
        </trans-unit>
        <trans-unit id="1df4da318d284bc20c5958d27a7ed3c38f4602e0" translate="yes" xml:space="preserve">
          <source>Users of this API are typically developers who produce client library implementations for connection-based protocols, such as LDAPv3 and IMAPv4, and developers who write servers (such as LDAP servers and IMAP servers). Developers who write client libraries use the &lt;code&gt;SaslClient&lt;/code&gt; and &lt;code&gt;SaslClientFactory&lt;/code&gt; interfaces. Developers who write servers use the &lt;code&gt;SaslServer&lt;/code&gt; and &lt;code&gt;SaslServerFactory&lt;/code&gt; interfaces. Among these two groups of users, each can be further divided into two groups: those who &lt;em&gt;produce&lt;/em&gt; the SASL mechanisms and those who &lt;em&gt;use&lt;/em&gt; the SASL mechanisms. The producers of SASL mechanisms need to provide implementations for these interfaces, while users of the SASL mechanisms use the APIs in this package to access those implementations.</source>
          <target state="translated">このAPIのユーザーは通常、LDAPv3やIMAPv4などの接続ベースのプロトコルのクライアントライブラリ実装を作成する開発者と、サーバー（LDAPサーバーやIMAPサーバーなど）を作成する開発者です。クライアントライブラリを作成する開発者は、 &lt;code&gt;SaslClient&lt;/code&gt; および &lt;code&gt;SaslClientFactory&lt;/code&gt; インターフェースを使用します。サーバーを作成する開発者は、 &lt;code&gt;SaslServer&lt;/code&gt; および &lt;code&gt;SaslServerFactory&lt;/code&gt; インターフェースを使用します。者：ユーザーのこれら二つのグループの間で、それぞれが更に2つのグループに分けることができる&lt;em&gt;製造&lt;/em&gt; SASLメカニズムと人&lt;em&gt;使用します&lt;/em&gt;SASLメカニズム。SASLメカニズムのプロデューサーはこれらのインターフェースの実装を提供する必要がありますが、SASLメカニズムのユーザーはこのパッケージのAPIを使用してこれらの実装にアクセスします。</target>
        </trans-unit>
        <trans-unit id="80e2698a6181fd45859666c8ffd995432dc96215" translate="yes" xml:space="preserve">
          <source>Users of this class should typically ignore this method as it exists primarily to fulfill the &lt;a href=&quot;chrono/chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt; contract where it is necessary to support the Japanese calendar system.</source>
          <target state="translated">このクラスは、主に日本語のカレンダーシステムをサポートする必要がある&lt;a href=&quot;chrono/chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt;コントラクトを満たすために存在するため、通常、このクラスのユーザーはこのメソッドを無視する必要があります。</target>
        </trans-unit>
        <trans-unit id="55237b8c76ad7910ea782ad8f36738173524ed31" translate="yes" xml:space="preserve">
          <source>Users should cast the generic URLConnection to a JarURLConnection when they know that the URL they created is a JAR URL, and they need JAR-specific functionality. For example:</source>
          <target state="translated">ユーザーは、作成したURLがJAR URLであり、JAR固有の機能が必要であることがわかっている場合、一般的なURLConnectionをJarURLConnectionにキャストしなければなりません。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="e0c0b2a27dd7e100ff6ef46e8af9a1980c698565" translate="yes" xml:space="preserve">
          <source>Users wishing to indicate DSA-specific parameters, and to generate a key pair suitable for use with the DSA algorithm typically</source>
          <target state="translated">DSA 固有のパラメータを示し、DSA アルゴリズムでの使用に適したキーペアを生成したいユーザーは、一般的に</target>
        </trans-unit>
        <trans-unit id="7b82d0f919502b65991bb0495ebd8b2328c7d544" translate="yes" xml:space="preserve">
          <source>Uses &quot;The Base64 Alphabet&quot; as specified in Table 1 of RFC 4648 and RFC 2045 for encoding and decoding operation. The encoder does not add any line feed (line separator) character. The decoder rejects data that contains characters outside the base64 alphabet.</source>
          <target state="translated">エンコード及びデコード動作には、RFC4648及びRFC2045の表1に規定されている &quot;The Base64 Alphabet &quot;を使用します。エンコーダーは改行(改行)文字を付加しない。デコーダは、Base64 アルファベット以外の文字を含むデータを拒否する。</target>
        </trans-unit>
        <trans-unit id="fe96d26de32e8c1c5fd883226f3db667abb4bc03" translate="yes" xml:space="preserve">
          <source>Uses the &quot;The Base64 Alphabet&quot; as specified in Table 1 of RFC 2045 for encoding and decoding operation. The encoded output must be represented in lines of no more than 76 characters each and uses a carriage return &lt;code&gt;'\r'&lt;/code&gt; followed immediately by a linefeed &lt;code&gt;'\n'&lt;/code&gt; as the line separator. No line separator is added to the end of the encoded output. All line separators or other characters not found in the base64 alphabet table are ignored in decoding operation.</source>
          <target state="translated">RFC 2045の表1に指定されている「The Base64 Alphabet」をエンコードおよびデコード操作に使用します。エンコードされた出力は、それぞれ76文字以下の行で表す必要があり、改行 &lt;code&gt;'\n'&lt;/code&gt; &lt;code&gt;'\r'&lt;/code&gt; 直後に改行'\ n'を行区切りとして使用します。エンコードされた出力の最後に行区切りは追加されません。base64アルファベットテーブルにないすべての行区切り文字またはその他の文字は、デコード操作では無視されます。</target>
        </trans-unit>
        <trans-unit id="e846d675917cc6469bee8f9dc213b99e034fe6a3" translate="yes" xml:space="preserve">
          <source>Uses the &quot;URL and Filename safe Base64 Alphabet&quot; as specified in Table 2 of RFC 4648 for encoding and decoding. The encoder does not add any line feed (line separator) character. The decoder rejects data that contains characters outside the base64 alphabet.</source>
          <target state="translated">エンコードとデコードには、RFC4648の表2に規定されている「URLとファイル名の安全なBase64アルファベット」を使用します。エンコーダーは改行(改行)文字を付加しない。デコーダは、Base64 アルファベット以外の文字を含むデータを拒否します。</target>
        </trans-unit>
        <trans-unit id="eeb3e5ae3000cb4861d44998612cf82f924af575" translate="yes" xml:space="preserve">
          <source>Uses the &lt;code&gt;Bindings&lt;/code&gt; returned by the abstract &lt;code&gt;getGlobalScope&lt;/code&gt; method as its &lt;code&gt;GLOBAL_SCOPE&lt;/code&gt;</source>
          <target state="translated">抽象 &lt;code&gt;getGlobalScope&lt;/code&gt; メソッドによって返された &lt;code&gt;Bindings&lt;/code&gt; GLOBAL_SCOPEとして使用し &lt;code&gt;GLOBAL_SCOPE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="203a61b07904d7718cd7b7494af32f4c4b35209c" translate="yes" xml:space="preserve">
          <source>Uses the Reader and Writer in the default &lt;code&gt;ScriptContext&lt;/code&gt; of this &lt;code&gt;ScriptEngine&lt;/code&gt;</source>
          <target state="translated">この &lt;code&gt;ScriptEngine&lt;/code&gt; のデフォルトの &lt;code&gt;ScriptContext&lt;/code&gt; でリーダーとライターを使用します</target>
        </trans-unit>
        <trans-unit id="1a0d6510b882760c1b04dcd907ebc56b88379148" translate="yes" xml:space="preserve">
          <source>Uses the constructor represented by this &lt;code&gt;Constructor&lt;/code&gt; object to create and initialize a new instance of the constructor's declaring class, with the specified initialization parameters. Individual parameters are automatically unwrapped to match primitive formal parameters, and both primitive and reference parameters are subject to method invocation conversions as necessary.</source>
          <target state="translated">この &lt;code&gt;Constructor&lt;/code&gt; オブジェクトによって表されるコンストラクターを使用して、指定された初期化パラメーターを使用して、コンストラクターの宣言クラスの新しいインスタンスを作成および初期化します。個々のパラメーターは、プリミティブ仮パラメーターに一致するように自動的にアンラップされ、プリミティブパラメーターと参照パラメーターの両方が、必要に応じてメソッド呼び出し変換の対象になります。</target>
        </trans-unit>
        <trans-unit id="2f41e59de5853a92bc45b401931704f5e09f91c3" translate="yes" xml:space="preserve">
          <source>Uses the specified &lt;code&gt;Bindings&lt;/code&gt; for its &lt;code&gt;ENGINE_SCOPE&lt;/code&gt;</source>
          <target state="translated">指定された &lt;code&gt;Bindings&lt;/code&gt; を &lt;code&gt;ENGINE_SCOPE&lt;/code&gt; に使用します</target>
        </trans-unit>
        <trans-unit id="83f38d3c8cc1ce56571de5c1baaa761dd5a6add7" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;locale.builder&quot;&gt;&lt;code&gt;Locale.Builder&lt;/code&gt;&lt;/a&gt; you can construct a &lt;code&gt;Locale&lt;/code&gt; object that conforms to BCP 47 syntax.</source>
          <target state="translated">&lt;a href=&quot;locale.builder&quot;&gt; &lt;code&gt;Locale.Builder&lt;/code&gt; &lt;/a&gt;を使用すると、BCP 47構文に準拠する &lt;code&gt;Locale&lt;/code&gt; オブジェクトを構築できます。</target>
        </trans-unit>
        <trans-unit id="e0f0960e30bde99a78aafef52a13eb97be34b2c7" translate="yes" xml:space="preserve">
          <source>Using Attributes</source>
          <target state="translated">属性の使用</target>
        </trans-unit>
        <trans-unit id="61bb96cb5e546c8e0aa0c7dc6bedc057616e82ef" translate="yes" xml:space="preserve">
          <source>Using LocalDate instead</source>
          <target state="translated">代わりにLocalDateを使用する</target>
        </trans-unit>
        <trans-unit id="5f4876bf7e5a097482233fd92f0351b417125b82" translate="yes" xml:space="preserve">
          <source>Using an MBean proxy is just a convenience. The second example ends up calling the same &lt;code&gt;MBeanServer&lt;/code&gt; operations as the first one.</source>
          <target state="translated">MBeanプロキシの使用は便利です。2番目の例では、最初の例と同じ &lt;code&gt;MBeanServer&lt;/code&gt; オペレーションを呼び出します。</target>
        </trans-unit>
        <trans-unit id="1e8df2fe46b9e932e0db3592537261df3f03821d" translate="yes" xml:space="preserve">
          <source>Using an MXBean proxy is a convenience remote access to a platform MXBean of a running virtual machine. All method calls to the MXBean proxy are forwarded to an &lt;code&gt;MBeanServerConnection&lt;/code&gt; where &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; may be thrown when the communication problem occurs with the connector server. An application remotely accesses the platform MXBeans using proxy should prepare to catch &lt;code&gt;IOException&lt;/code&gt; as if accessing with the &lt;code&gt;MBeanServerConnector&lt;/code&gt; interface.</source>
          <target state="translated">MXBeanプロキシの使用は、実行中の仮想マシンのプラットフォームMXBeanへの便利なリモートアクセスです。 MXBeanプロキシへのすべてのメソッド呼び出しは、 &lt;code&gt;MBeanServerConnection&lt;/code&gt; に転送されます。コネクタサーバーで通信の問題が発生すると、&lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;がスローされる場合があります。アプリケーションは、プロキシを使用してプラットフォームMXBeanにリモートアクセスし、 &lt;code&gt;MBeanServerConnector&lt;/code&gt; インターフェースでアクセスする &lt;code&gt;IOException&lt;/code&gt; 同様に、IOExceptionをキャッチする準備をする必要があります。</target>
        </trans-unit>
        <trans-unit id="a7e9c4e0ef646900c9d37259efe42bb9d6a54acf" translate="yes" xml:space="preserve">
          <source>Using anchoring bounds, the boundaries of this matcher's region match anchors such as ^ and $.</source>
          <target state="translated">アンカリング境界を使用して、この領域の境界は ^ や $ などのアンカーと一致します。</target>
        </trans-unit>
        <trans-unit id="cdd78d1f86e78fec3ea599004d8fad8c76d9d7da" translate="yes" xml:space="preserve">
          <source>Using factory methods in the &lt;a href=&quot;methodhandles.lookup&quot;&gt;&lt;code&gt;Lookup&lt;/code&gt;&lt;/a&gt; API, any class member represented by a Core Reflection API object can be converted to a behaviorally equivalent method handle. For example, a reflective &lt;a href=&quot;../reflect/method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; can be converted to a method handle using &lt;a href=&quot;methodhandles.lookup#unreflect-java.lang.reflect.Method-&quot;&gt;&lt;code&gt;Lookup.unreflect&lt;/code&gt;&lt;/a&gt;. The resulting method handles generally provide more direct and efficient access to the underlying class members.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup&quot;&gt; &lt;code&gt;Lookup&lt;/code&gt; &lt;/a&gt; APIのファクトリメソッドを使用すると、Core Reflection APIオブジェクトで表されるクラスメンバーを、動作的に同等のメソッドハンドルに変換できます。たとえば、反射&lt;a href=&quot;../reflect/method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;methodhandles.lookup#unreflect-java.lang.reflect.Method-&quot;&gt; &lt;code&gt;Lookup.unreflect&lt;/code&gt; &lt;/a&gt;を使用してメソッドハンドルに変換できます。結果のメソッドハンドルは、通常、基になるクラスメンバーへのより直接的で効率的なアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="21c8ad4b3f87d2f794dcde2cdb625766302c4526" translate="yes" xml:space="preserve">
          <source>Using lenient resolution will resolve the values in an appropriate lenient manner. Individual fields will interpret this differently.</source>
          <target state="translated">lenient resolutionを使用すると、適切な lenientな方法で値を解決します。個々のフィールドによって解釈が異なります。</target>
        </trans-unit>
        <trans-unit id="8561c3ec91d9448080b4d951ea48a4072c5c1776" translate="yes" xml:space="preserve">
          <source>Using localized styles, such as &lt;code&gt;long&lt;/code&gt; or &lt;code&gt;medium&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; や &lt;code&gt;medium&lt;/code&gt; などのローカライズされたスタイルの使用</target>
        </trans-unit>
        <trans-unit id="253df803fe00960ddb3b3a9f6c13edaaab2b99da" translate="yes" xml:space="preserve">
          <source>Using modes such as &lt;code&gt;CFB&lt;/code&gt; and &lt;code&gt;OFB&lt;/code&gt;, block ciphers can encrypt data in units smaller than the cipher's actual block size. When requesting such a mode, you may optionally specify the number of bits to be processed at a time by appending this number to the mode name as shown in the &quot;&lt;code&gt;DES/CFB8/NoPadding&lt;/code&gt;&quot; and &quot;&lt;code&gt;DES/OFB32/PKCS5Padding&lt;/code&gt;&quot; transformations. If no such number is specified, a provider-specific default is used. (For example, the SunJCE provider uses a default of 64 bits for DES.) Thus, block ciphers can be turned into byte-oriented stream ciphers by using an 8 bit mode such as CFB8 or OFB8.</source>
          <target state="translated">&lt;code&gt;CFB&lt;/code&gt; や &lt;code&gt;OFB&lt;/code&gt; などのモードを使用すると、ブロック暗号はデータを暗号の実際のブロックサイズよりも小さい単位で暗号化できます。そのようなモードを要求する場合、「 &lt;code&gt;DES/CFB8/NoPadding&lt;/code&gt; 」および「 &lt;code&gt;DES/OFB32/PKCS5Padding&lt;/code&gt; 」変換に示されているように、この名前をモード名に追加することにより、一度に処理するビット数をオプションで指定できます。そのような番号が指定されていない場合、プロバイダー固有のデフォルトが使用されます。 （たとえば、SunJCEプロバイダーはDESにデフォルトの64ビットを使用します。）したがって、ブロック暗号は、CFB8やOFB8などの8ビットモードを使用してバイト指向のストリーム暗号に変換できます。</target>
        </trans-unit>
        <trans-unit id="a9deca9aeafc463fa6ca2b88d4ccb83b12d7abad" translate="yes" xml:space="preserve">
          <source>Using non-ISO calendar systems in an application introduces significant extra complexity. Ensure that the warnings and recommendations in &lt;code&gt;ChronoLocalDate&lt;/code&gt; have been read before working with the &quot;chrono&quot; interfaces.</source>
          <target state="translated">アプリケーションで非ISOカレンダーシステムを使用すると、非常に複雑になります。「クロノ」インターフェースを操作する前に、 &lt;code&gt;ChronoLocalDate&lt;/code&gt; の警告と推奨事項を確認してください。</target>
        </trans-unit>
        <trans-unit id="573cc26e7099971b8835749f74d2d06635f24f52" translate="yes" xml:space="preserve">
          <source>Using opaque bounds, the boundaries of this matcher's region are opaque to lookahead, lookbehind, and boundary matching constructs that may try to see beyond them. Those constructs cannot look past the boundaries so they will fail to match anything outside of the region.</source>
          <target state="translated">不透明な境界を使用すると、 このマ ッ チ ャ ーの領域の境界は lookahead,lookbehind,そして境界を越えようとする可能性のあ る境界照合用の構築物に対して不透明になります。これらのコンストラクタは境界線の向こう側を見ることができないので、 リージョンの外にあるものはマッチしません。</target>
        </trans-unit>
        <trans-unit id="89b2e216c005cff81225b83bc0d9df94e32fec36" translate="yes" xml:space="preserve">
          <source>Using pattern letters, such as &lt;code&gt;uuuu-MMM-dd&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;uuuu-MMM-dd&lt;/code&gt; などのパターン文字の使用</target>
        </trans-unit>
        <trans-unit id="180c277dc63d51c2b6b593d31797e5272463d61c" translate="yes" xml:space="preserve">
          <source>Using predefined constants, such as &lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt; &lt;/a&gt;などの定義済み定数の使用</target>
        </trans-unit>
        <trans-unit id="b5b75e2ea752e51b08714485a1e1d68bf8a4a87c" translate="yes" xml:space="preserve">
          <source>Using smart resolution will perform the sensible default for each field, which may be the same as strict, the same as lenient, or a third behavior. Individual fields will interpret this differently.</source>
          <target state="translated">スマートな解像度を使用すると、各フィールドに対して賢明なデフォルトが実行され、それは strict と同じか lenient と同じか、または第三の動作になります。個々のフィールドはこれを異なるように解釈します。</target>
        </trans-unit>
        <trans-unit id="6198983076e23d70c804f77c8fd2cd98922f7d2c" translate="yes" xml:space="preserve">
          <source>Using strict resolution will ensure that all parsed values are within the outer range of valid values for the field. Individual fields may be further processed for strictness.</source>
          <target state="translated">厳密な解決を使用すると、解析された値はすべてそのフィールドの有効な値の外側の範囲内であることが保証されます。個々のフィールドは、厳密性のためにさらに処理されることがあります。</target>
        </trans-unit>
        <trans-unit id="ddc6d587f01bd48a87c73ce65a0e9221289aaef1" translate="yes" xml:space="preserve">
          <source>Using the API</source>
          <target state="translated">APIを使用して</target>
        </trans-unit>
        <trans-unit id="470a33ba31755e72cbf379c38bb36ff96909a02c" translate="yes" xml:space="preserve">
          <source>Using the public constructor &lt;a href=&quot;standardmbean#StandardMBean-T-java.lang.Class-boolean-&quot;&gt;&lt;code&gt;StandardMBean(impl,interface)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">パブリックコンストラクター&lt;a href=&quot;standardmbean#StandardMBean-T-java.lang.Class-boolean-&quot;&gt; &lt;code&gt;StandardMBean(impl,interface)&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="f08caaea9a88beb7acb495f252c735a1315d1558" translate="yes" xml:space="preserve">
          <source>Using the search filter, it is possible to register interest in objects that do not exist at the time of registration but later come into existence and satisfy the filter. However, there might be limitations in the extent to which this can be supported by the service provider and underlying protocol/service. If the caller submits a filter that cannot be supported in this way, &lt;code&gt;addNamingListener()&lt;/code&gt; throws an &lt;code&gt;InvalidSearchFilterException&lt;/code&gt;.</source>
          <target state="translated">検索フィルターを使用すると、登録時に存在しなかったが後で存在し、フィルターを満たすオブジェクトへの関心を登録できます。ただし、サービスプロバイダーおよび基になるプロトコル/サービスがこれをサポートできる範囲には制限がある場合があります。呼び出し元がこの方法でサポートできないフィルターを送信すると、 &lt;code&gt;addNamingListener()&lt;/code&gt; は &lt;code&gt;InvalidSearchFilterException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="d02b33bcdb59e58d97f9f0dd3b6bd6bee21849ee" translate="yes" xml:space="preserve">
          <source>Using this class, an MBean can be created with any implementation class name</source>
          <target state="translated">このクラスを使用すると、MBean は任意の実装クラス名で作成することができます。</target>
        </trans-unit>
        <trans-unit id="6a808472e5512ec6ec52bb2234c76dc0b1a3686b" translate="yes" xml:space="preserve">
          <source>Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この方法を使用すると、テストに代替クロックを使用できます。代替クロックは、&lt;a href=&quot;clock&quot;&gt; &lt;code&gt;dependency injection&lt;/code&gt; &lt;/a&gt;を使用して導入できます。</target>
        </trans-unit>
        <trans-unit id="b3a4d576735b547cb796fe2ec8f648e82476869f" translate="yes" xml:space="preserve">
          <source>Using this method hard codes a dependency to the default time-zone into your application. It is recommended to avoid this and use a specific time-zone whenever possible. The &lt;a href=&quot;clock#systemUTC--&quot;&gt;&lt;code&gt;UTC clock&lt;/code&gt;&lt;/a&gt; should be used when you need the current instant without the date or time.</source>
          <target state="translated">このメソッドを使用すると、デフォルトのタイムゾーンへの依存関係がアプリケーションにハードコードされます。これを回避し、可能な限り特定のタイムゾーンを使用することをお勧めします。&lt;a href=&quot;clock#systemUTC--&quot;&gt; &lt;code&gt;UTC clock&lt;/code&gt; &lt;/a&gt;日付や時間なしで、現在の瞬間を必要とするときに使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="31bb653f87c7adcd93896a64f57477f9258c49cf" translate="yes" xml:space="preserve">
          <source>Using this method will prevent the ability to use an alternate clock for testing because the clock is hard-coded.</source>
          <target state="translated">この方法を使用すると、クロックがハードコードされているため、テストに代替クロックを使用することができなくなります。</target>
        </trans-unit>
        <trans-unit id="f6be570ec8df9f33a39b137ee90edbcc72d040b1" translate="yes" xml:space="preserve">
          <source>Using this method will prevent the ability to use an alternate time-source for testing because the clock is effectively hard-coded.</source>
          <target state="translated">この方法を使用すると、クロックが実質的にハードコードされているため、テストに別の時間源を使用することができなくなります。</target>
        </trans-unit>
        <trans-unit id="c5fa35aa83a3e27a4f265dd3dbcf5ef46556b0bc" translate="yes" xml:space="preserve">
          <source>Using transparent bounds, the boundaries of this matcher's region are transparent to lookahead, lookbehind, and boundary matching constructs. Those constructs can see beyond the boundaries of the region to see if a match is appropriate.</source>
          <target state="translated">透過境界を使用すると、このマ ッ チ ャ ーの領域の境界は、 lookahead、lookbehind、および境界照合用のコンストラクトからは透過されます。これらのコンストラクタは、マッチが適切かどうかを判断するために領域の境界線の向こう側を見ることができます。</target>
        </trans-unit>
        <trans-unit id="f20dec6afa5973f6ff91629936c1d90192d0e756" translate="yes" xml:space="preserve">
          <source>Usually the &lt;code&gt;MBeanInfo&lt;/code&gt; for any given MBean does not change over the lifetime of that MBean. Dynamic MBeans can change their &lt;code&gt;MBeanInfo&lt;/code&gt; and in that case it is recommended that they emit a &lt;a href=&quot;notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;notification#getType--&quot;&gt;type&lt;/a&gt; of &lt;code&gt;&quot;jmx.mbean.info.changed&quot;&lt;/code&gt; and a &lt;a href=&quot;notification#getUserData--&quot;&gt;userData&lt;/a&gt; that is the new &lt;code&gt;MBeanInfo&lt;/code&gt;. This is not required, but provides a conventional way for clients of the MBean to discover the change. See also the &lt;a href=&quot;descriptor#immutableInfo&quot;&gt;immutableInfo&lt;/a&gt; and &lt;a href=&quot;descriptor#infoTimeout&quot;&gt;infoTimeout&lt;/a&gt; fields in the &lt;code&gt;MBeanInfo&lt;/code&gt;&lt;a href=&quot;descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通常、特定のMBeanの &lt;code&gt;MBeanInfo&lt;/code&gt; は、そのMBeanの存続期間を通じて変更されません。動的MBeanは &lt;code&gt;MBeanInfo&lt;/code&gt; を変更できます。その場合は、 &lt;code&gt;&quot;jmx.mbean.info.changed&quot;&lt;/code&gt; &lt;a href=&quot;notification#getType--&quot;&gt;タイプ&lt;/a&gt;の&lt;a href=&quot;notification&quot;&gt; &lt;code&gt;Notification&lt;/code&gt; &lt;/a&gt;と、新しい &lt;code&gt;MBeanInfo&lt;/code&gt; である&lt;a href=&quot;notification#getUserData--&quot;&gt;userData&lt;/a&gt;を発行することをお勧めします。これは必須ではありませんが、MBeanのクライアントが変更を検出するための従来の方法を提供します。 &lt;code&gt;MBeanInfo&lt;/code&gt; &lt;a href=&quot;descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;descriptor#immutableInfo&quot;&gt;immutableInfo&lt;/a&gt;および&lt;a href=&quot;descriptor#infoTimeout&quot;&gt;infoTimeout&lt;/a&gt;フィールドも参照してください。</target>
        </trans-unit>
        <trans-unit id="68f7a180713ce8afdb949d8125a6751d3c88beb9" translate="yes" xml:space="preserve">
          <source>Usually the returned receiver implements the &lt;code&gt;MidiDeviceReceiver&lt;/code&gt; interface.</source>
          <target state="translated">通常、返されたレシーバーは &lt;code&gt;MidiDeviceReceiver&lt;/code&gt; インターフェースを実装します。</target>
        </trans-unit>
        <trans-unit id="789cbfd196e194af95ef3eaa77e73aee1e7b80ac" translate="yes" xml:space="preserve">
          <source>Usually the returned receivers implement the &lt;code&gt;MidiDeviceReceiver&lt;/code&gt; interface.</source>
          <target state="translated">通常、返されたレシーバーは &lt;code&gt;MidiDeviceReceiver&lt;/code&gt; インターフェイスを実装します。</target>
        </trans-unit>
        <trans-unit id="b10eacb0417247e0044aaa6541784c7e9d437b58" translate="yes" xml:space="preserve">
          <source>Usually the returned transmitter implements the &lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; interface.</source>
          <target state="translated">通常、返されたトランスミッターは &lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; インターフェイスを実装します。</target>
        </trans-unit>
        <trans-unit id="cb55df489e19ba6c63d7efc57af80457bae2b5b8" translate="yes" xml:space="preserve">
          <source>Usually the returned transmitters implement the &lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; interface.</source>
          <target state="translated">通常、返されたトランスミッターは &lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; インターフェイスを実装します。</target>
        </trans-unit>
        <trans-unit id="a4911d951b010a523017f11a6f4b45a3909cacb1" translate="yes" xml:space="preserve">
          <source>Utilities to assist in the processing of &lt;a href=&quot;../element/package-summary&quot;&gt;program elements&lt;/a&gt; and &lt;a href=&quot;../type/package-summary&quot;&gt;types&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../element/package-summary&quot;&gt;プログラムの要素&lt;/a&gt;と&lt;a href=&quot;../type/package-summary&quot;&gt;型の&lt;/a&gt;処理を支援するユーティリティ。</target>
        </trans-unit>
        <trans-unit id="882ce0fc43a4a5fd7771c00aecc3ba0eae4aba7d" translate="yes" xml:space="preserve">
          <source>Utilities to assist in the processing of &lt;a href=&quot;javax/lang/model/element/package-summary&quot;&gt;program elements&lt;/a&gt; and &lt;a href=&quot;javax/lang/model/type/package-summary&quot;&gt;types&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;javax/lang/model/element/package-summary&quot;&gt;プログラムの要素&lt;/a&gt;と&lt;a href=&quot;javax/lang/model/type/package-summary&quot;&gt;型の&lt;/a&gt;処理を支援するユーティリティ。</target>
        </trans-unit>
        <trans-unit id="02db94e534b83ec7229aaeff4260db775b80b9cc" translate="yes" xml:space="preserve">
          <source>Utility class for HTML form decoding.</source>
          <target state="translated">HTMLフォームデコードのためのユーティリティクラスです。</target>
        </trans-unit>
        <trans-unit id="848c4fb8e6852707e9fde48a3c974a3374e7a94b" translate="yes" xml:space="preserve">
          <source>Utility class for HTML form decoding. This class contains static methods for decoding a String from the &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; MIME format.</source>
          <target state="translated">HTMLフォームのデコード用のユーティリティクラス。このクラスには、 &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; MIME形式から文字列をデコードするための静的メソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="af38bffe9fcf259b3eac7b750d631dec758ac335" translate="yes" xml:space="preserve">
          <source>Utility class for HTML form encoding.</source>
          <target state="translated">HTML フォームエンコーディングのためのユーティリティクラスです。</target>
        </trans-unit>
        <trans-unit id="986013cdc6d3bf10c305a2fdd0111a4416bc77fb" translate="yes" xml:space="preserve">
          <source>Utility class for HTML form encoding. This class contains static methods for converting a String to the &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; MIME format. For more information about HTML form encoding, consult the HTML &lt;a href=&quot;http://www.w3.org/TR/html4/&quot;&gt;specification&lt;/a&gt;.</source>
          <target state="translated">HTMLフォームエンコーディングのユーティリティクラス。このクラスには、文字列を &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; MIME形式に変換するための静的メソッドが含まれています。HTMLフォームエンコーディングの詳細については、HTML &lt;a href=&quot;http://www.w3.org/TR/html4/&quot;&gt;仕様を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3aba945a13d442e425e9e27d6041638c7daf11b0" translate="yes" xml:space="preserve">
          <source>Utility class for assembling &lt;a href=&quot;completion&quot;&gt;&lt;code&gt;Completion&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;completion&quot;&gt; &lt;code&gt;Completion&lt;/code&gt; &lt;/a&gt;オブジェクトをアセンブルするためのユーティリティクラス。</target>
        </trans-unit>
        <trans-unit id="c19cabcb8ecdeecd309eb769b904b564909ae4af" translate="yes" xml:space="preserve">
          <source>Utility classes commonly useful in concurrent programming.</source>
          <target state="translated">コンカレント・プログラミングで一般的に役立つユーティリティ・クラス。</target>
        </trans-unit>
        <trans-unit id="150201240396f25f2027d06e54168dd5d56c91ac" translate="yes" xml:space="preserve">
          <source>Utility classes commonly useful in concurrent programming. This package includes a few small standardized extensible frameworks, as well as some classes that provide useful functionality and are otherwise tedious or difficult to implement. Here are brief descriptions of the main components. See also the &lt;a href=&quot;locks/package-summary&quot;&gt;&lt;code&gt;java.util.concurrent.locks&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;atomic/package-summary&quot;&gt;&lt;code&gt;java.util.concurrent.atomic&lt;/code&gt;&lt;/a&gt; packages.</source>
          <target state="translated">並行プログラミングで一般的に役立つユーティリティクラス。このパッケージには、いくつかの小さな標準化された拡張可能なフレームワークと、有用な機能を提供し、他の方法では面倒で実装が難しいクラスが含まれています。ここでは、主なコンポーネントについて簡単に説明します。&lt;a href=&quot;locks/package-summary&quot;&gt; &lt;code&gt;java.util.concurrent.locks&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;atomic/package-summary&quot;&gt; &lt;code&gt;java.util.concurrent.atomic&lt;/code&gt; &lt;/a&gt;パッケージも参照してください。</target>
        </trans-unit>
        <trans-unit id="e4a20e688682bb57c03b92d2e7bc4b96cf592350" translate="yes" xml:space="preserve">
          <source>Utility method to take a string and convert it to normal Java variable name capitalization. This normally means converting the first character from upper case to lower case, but in the (unusual) special case when there is more than one character and both the first and second characters are upper case, we leave it alone.</source>
          <target state="translated">文字列を受け取り、通常のJava変数名の大文字表記に変換するユーティリティーメソッド。これは通常、最初の文字を大文字から小文字に変換することを意味しますが、複数の文字があり、最初の文字と2番目の文字の両方が大文字になっているような(珍しい)特殊なケースでは、そのままにしておきます。</target>
        </trans-unit>
        <trans-unit id="4039a70b4f66be59f948f701ccca4acd0d600a89" translate="yes" xml:space="preserve">
          <source>Utility methods for channel/stream interoperation</source>
          <target state="translated">チャンネル/ストリーム相互運用のためのユーティリティー手法</target>
        </trans-unit>
        <trans-unit id="9ecf914fbb7e16dd5de3b9a0d9f504decd7f14ae" translate="yes" xml:space="preserve">
          <source>Utility methods for channels and streams.</source>
          <target state="translated">チャンネルとストリームのためのユーティリティメソッド。</target>
        </trans-unit>
        <trans-unit id="0fb1f45c6150808d936b7f266e71159e6eadc817" translate="yes" xml:space="preserve">
          <source>Utility methods for operating on program elements.</source>
          <target state="translated">プログラム要素を操作するためのユーティリティーメソッド。</target>
        </trans-unit>
        <trans-unit id="d3d9292727ed2274f7e9069b9313b2e96d6b4dba" translate="yes" xml:space="preserve">
          <source>Utility methods for operating on types.</source>
          <target state="translated">型を操作するための実用的な方法。</target>
        </trans-unit>
        <trans-unit id="2c56934a7ced54ed4879908d9eef6fbbb0c4707f" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the InetAddress in a wildcard address.</source>
          <target state="translated">ワイルドカードアドレスに InetAddress があるかどうかをチェックするユーティリティルーチン。</target>
        </trans-unit>
        <trans-unit id="a88521b4a21f2837191f0b42796a4121d3b06ea9" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the InetAddress is a loopback address.</source>
          <target state="translated">InetAddress がループバックアドレスであるかどうかをチェックするユーティリティルーチン。</target>
        </trans-unit>
        <trans-unit id="878ef4949a7b2ec66decef15b233290039b77ce9" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the InetAddress is a site local address.</source>
          <target state="translated">InetAddress がサイト・ローカル・アドレスであるかどうかをチェックするユーティリティ・ルーチン。</target>
        </trans-unit>
        <trans-unit id="7790450524b92406933cd07a695833b7f3e03f67" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the InetAddress is an IP multicast address.</source>
          <target state="translated">InetAddress が IP マルチキャスト アドレスであるかどうかをチェックするユーティリティ ルーチン。</target>
        </trans-unit>
        <trans-unit id="c31e0899027339bafedd9a20edbdf0cfaf92919e" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the InetAddress is an IP multicast address. 11111111 at the start of the address identifies the address as being a multicast address.</source>
          <target state="translated">InetAddress が IP マルチキャスト・アドレスであるかどうかをチェックするためのユーティリティ・ルーチンです。アドレスの先頭の 11111111 は、そのアドレスがマルチキャストアドレスであることを識別します。</target>
        </trans-unit>
        <trans-unit id="a9e85ab48394f76e30601e94ed4d8f6942eef434" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the InetAddress is an IP multicast address. IP multicast address is a Class D address i.e first four bits of the address are 1110.</source>
          <target state="translated">InetAddress が IP マルチキャストアドレスであるかどうかをチェックするユーティリティルーチンです。IP マルチキャストアドレスはクラス D アドレス、つまりアドレスの最初の 4 ビットが 1110 です。</target>
        </trans-unit>
        <trans-unit id="418cc6de9aee88107262571202aa30a7ba1a70c0" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the InetAddress is an IPv4 compatible IPv6 address.</source>
          <target state="translated">InetAddressがIPv4互換のIPv6アドレスであるかどうかをチェックするユーティリティルーチン。</target>
        </trans-unit>
        <trans-unit id="5ad8697321f8dc75e97fa0bad9e9ddbc6a5ff062" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the InetAddress is an link local address.</source>
          <target state="translated">InetAddress がリンク・ローカル・アドレスであるかどうかをチェックするユーティリティ・ルーチン。</target>
        </trans-unit>
        <trans-unit id="207c581cc5bc638f2e641c970a8b71fc2719a9ee" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the multicast address has global scope.</source>
          <target state="translated">マルチキャスト アドレスにグローバル スコープがあるかどうかをチェックするためのユーティリティ ルーチンです。</target>
        </trans-unit>
        <trans-unit id="62a011b9d1c58dd9f13566a36fe7f89ebaa87f64" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the multicast address has link scope.</source>
          <target state="translated">マルチキャストアドレスにリンクスコープがあるかどうかをチェックするためのユーティリティ ルーチン。</target>
        </trans-unit>
        <trans-unit id="cf6b4a1745f399fc8996275918604d42965ccf98" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the multicast address has node scope.</source>
          <target state="translated">マルチキャストアドレスにノードスコープがあるかどうかをチェックするユーティリティルーチン。</target>
        </trans-unit>
        <trans-unit id="21d809b85fe3cc0cc40e32073585545c3c44438a" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the multicast address has organization scope.</source>
          <target state="translated">マルチキャストアドレスに組織スコープがあるかどうかをチェックするためのユーティリティルーチンです。</target>
        </trans-unit>
        <trans-unit id="cbe316ec3a5a8e5921cb3dc299909d7749fb9a65" translate="yes" xml:space="preserve">
          <source>Utility routine to check if the multicast address has site scope.</source>
          <target state="translated">マルチキャスト アドレスにサイトスコープがあるかどうかをチェックするユーティリティ ルーチン。</target>
        </trans-unit>
        <trans-unit id="c9ee5681d3c59f7541c27a38b67edf46259e187b" translate="yes" xml:space="preserve">
          <source>V</source>
          <target state="translated">V</target>
        </trans-unit>
        <trans-unit id="dfb322a8d1ad4f0eefce4d875c8962a14a1a772a" translate="yes" xml:space="preserve">
          <source>VAI</source>
          <target state="translated">VAI</target>
        </trans-unit>
        <trans-unit id="d48af9e8160bc55894f4a22d03f76854c28160a0" translate="yes" xml:space="preserve">
          <source>VALUE_ARBITRARY</source>
          <target state="translated">VALUE_ARBITRARY</target>
        </trans-unit>
        <trans-unit id="02193e400f5ca5c79a157c915bfe1562a8b13520" translate="yes" xml:space="preserve">
          <source>VALUE_ENUMERATION</source>
          <target state="translated">VALUE_ENUMERATION</target>
        </trans-unit>
        <trans-unit id="36dedc52d4e56ec75ef781c18979e8551bf2bd08" translate="yes" xml:space="preserve">
          <source>VALUE_LIST</source>
          <target state="translated">VALUE_LIST</target>
        </trans-unit>
        <trans-unit id="8dc7d6a10b628095cf884b19e56fd1ff92295324" translate="yes" xml:space="preserve">
          <source>VALUE_NONE</source>
          <target state="translated">VALUE_NONE</target>
        </trans-unit>
        <trans-unit id="9e5d8e899b551fa0b3a07bd0131412f7268fd43a" translate="yes" xml:space="preserve">
          <source>VALUE_RANGE</source>
          <target state="translated">VALUE_RANGE</target>
        </trans-unit>
        <trans-unit id="0897f78c46e1e0fc7cd15dac18b43864b50602b4" translate="yes" xml:space="preserve">
          <source>VALUE_RANGE_MAX_INCLUSIVE</source>
          <target state="translated">VALUE_RANGE_MAX_INCLUSIVE</target>
        </trans-unit>
        <trans-unit id="0a4f0a610c8f611649a7edcbef09ceab33953d6c" translate="yes" xml:space="preserve">
          <source>VALUE_RANGE_MAX_INCLUSIVE_MASK</source>
          <target state="translated">VALUE_RANGE_MAX_INCLUSIVE_MASK</target>
        </trans-unit>
        <trans-unit id="6c6075a651e8185da9fd05ca0c5e0080fca56e43" translate="yes" xml:space="preserve">
          <source>VALUE_RANGE_MIN_INCLUSIVE</source>
          <target state="translated">VALUE_RANGE_MIN_INCLUSIVE</target>
        </trans-unit>
        <trans-unit id="0848cb621c310e76951c2297ffd1be8b9c15227f" translate="yes" xml:space="preserve">
          <source>VALUE_RANGE_MIN_INCLUSIVE_MASK</source>
          <target state="translated">VALUE_RANGE_MIN_INCLUSIVE_MASK</target>
        </trans-unit>
        <trans-unit id="3ede89ebb53679f542146540f04aa83ecc283a84" translate="yes" xml:space="preserve">
          <source>VALUE_RANGE_MIN_MAX_INCLUSIVE</source>
          <target state="translated">VALUE_RANGE_MIN_MAX_INCLUSIVE</target>
        </trans-unit>
        <trans-unit id="8cb78f25726ea5b5c40a3361803dc6db1aab508c" translate="yes" xml:space="preserve">
          <source>VARIATION_SELECTORS</source>
          <target state="translated">VARIATION_SELECTORS</target>
        </trans-unit>
        <trans-unit id="63c68e0bbeebbf5a11cfac51fc70ce9ca6f5c2c1" translate="yes" xml:space="preserve">
          <source>VARIATION_SELECTORS_SUPPLEMENT</source>
          <target state="translated">VARIATION_SELECTORS_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="31420d2d7ac2e56cf715e5d48766513036b5f8d0" translate="yes" xml:space="preserve">
          <source>VEDIC_EXTENSIONS</source>
          <target state="translated">VEDIC_EXTENSIONS</target>
        </trans-unit>
        <trans-unit id="af5d1b291aa8b710775487860c09c6ea29ddfcca" translate="yes" xml:space="preserve">
          <source>VERIFY</source>
          <target state="translated">VERIFY</target>
        </trans-unit>
        <trans-unit id="3a2fa5f3b8d5732b14086db74543e53e8e8444b0" translate="yes" xml:space="preserve">
          <source>VERTICAL_FORMS</source>
          <target state="translated">VERTICAL_FORMS</target>
        </trans-unit>
        <trans-unit id="ded0ec81979b3df0d442797af13a37bd2f58b39f" translate="yes" xml:space="preserve">
          <source>VOID</source>
          <target state="translated">VOID</target>
        </trans-unit>
        <trans-unit id="0151e9476213c9bc158ba6c4e50c8b0d3571e3ea" translate="yes" xml:space="preserve">
          <source>VOLATILE</source>
          <target state="translated">VOLATILE</target>
        </trans-unit>
        <trans-unit id="de4f1aab58091db3e6fcebdda92e296c5013d16e" translate="yes" xml:space="preserve">
          <source>VOLUME</source>
          <target state="translated">VOLUME</target>
        </trans-unit>
        <trans-unit id="db8cdf182c68cc1311820441487faf7eebd835e5" translate="yes" xml:space="preserve">
          <source>VST - Asia/Ho_Chi_Minh</source>
          <target state="translated">VST-アジア/ホーチミン市</target>
        </trans-unit>
        <trans-unit id="093168b5c51de47bd34b86ff28288df00c77d22d" translate="yes" xml:space="preserve">
          <source>V[t] = gauge[t] - gauge[t-GP]</source>
          <target state="translated">V[t]=ゲージ[t]-ゲージ[t-GP</target>
        </trans-unit>
        <trans-unit id="b1ad1a52c935fb7ba200fd734eab6bac190f19c8" translate="yes" xml:space="preserve">
          <source>Valid for Multicast: DatagramSocketImpl</source>
          <target state="translated">マルチキャストで有効です。DatagramSocketImpl</target>
        </trans-unit>
        <trans-unit id="2c4316849b9f2b11fc8ea0bcd643ddc95f13dbdd" translate="yes" xml:space="preserve">
          <source>Valid for TCP only: SocketImpl.</source>
          <target state="translated">TCPのみに有効です。SocketImpl.</target>
        </trans-unit>
        <trans-unit id="a668c34c13ec2dfa5189daf3ee572e37b86e6268" translate="yes" xml:space="preserve">
          <source>Valid for all sockets: SocketImpl, DatagramSocketImpl</source>
          <target state="translated">すべてのソケットで有効です。SocketImpl,DatagramSocketImpl</target>
        </trans-unit>
        <trans-unit id="1ab8aadf229d20a44db436c82d52a25b2be7d43b" translate="yes" xml:space="preserve">
          <source>Valid for: DatagramSocketImpl</source>
          <target state="translated">に有効です。DatagramSocketImpl</target>
        </trans-unit>
        <trans-unit id="c6d78d22d09f517184ce9f674f1ba1019ac1a7e5" translate="yes" xml:space="preserve">
          <source>Valid for: SocketImpl, DatagramSocketImpl</source>
          <target state="translated">以下の場合に有効です。SocketImpl,DatagramSocketImpl</target>
        </trans-unit>
        <trans-unit id="a6289e0f82c081e5a0561a18f9e924a563567383" translate="yes" xml:space="preserve">
          <source>Valid only for TCP: SocketImpl</source>
          <target state="translated">TCPでのみ有効:SocketImpl</target>
        </trans-unit>
        <trans-unit id="b9e59b4af7b3bf24e5dc6776168e74b513618102" translate="yes" xml:space="preserve">
          <source>Validates the object.</source>
          <target state="translated">オブジェクトを検証します。</target>
        </trans-unit>
        <trans-unit id="44247bf147f34a2ae6cb2803b817ec010dfeea31" translate="yes" xml:space="preserve">
          <source>Validates the specified certification path using the specified algorithm parameter set.</source>
          <target state="translated">指定されたアルゴリズムパラメータセットを使用して、指定された認証パスを検証します。</target>
        </trans-unit>
        <trans-unit id="b149e174d2a60077c236107f7554f91d45f634b5" translate="yes" xml:space="preserve">
          <source>Valuable data should not be stored at this node as it is shared by all programs that use it.</source>
          <target state="translated">貴重なデータは、このノードを使用するすべてのプログラムで共有されるため、このノードに保存されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="4414566b81dbfc57107836310965df59471f036f" translate="yes" xml:space="preserve">
          <source>Value - a numeric value</source>
          <target state="translated">Value-数値</target>
        </trans-unit>
        <trans-unit id="f6bdec823b4e0290aa5596ea76e29ee6027f17c5" translate="yes" xml:space="preserve">
          <source>Value of any other type</source>
          <target state="translated">その他のタイプの値</target>
        </trans-unit>
        <trans-unit id="cde4299ff7d89e07903e80c987b35ab7db2b68df" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#AM_PM&quot;&gt;&lt;code&gt;AM_PM&lt;/code&gt;&lt;/a&gt; field indicating the period of the day from midnight to just before noon.</source>
          <target state="translated">午前0時から正午直前までの1日の期間を示す&lt;a href=&quot;calendar#AM_PM&quot;&gt; &lt;code&gt;AM_PM&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="715c0bb373192b7218aa7b1b6d2c86d6a6450250" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#AM_PM&quot;&gt;&lt;code&gt;AM_PM&lt;/code&gt;&lt;/a&gt; field indicating the period of the day from noon to just before midnight.</source>
          <target state="translated">正午から真夜中直前までの1日の期間を示す&lt;a href=&quot;calendar#AM_PM&quot;&gt; &lt;code&gt;AM_PM&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="4cf9e825efdc9fd139bce417ca2c2e3c1be69bc0" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field indicating Friday.</source>
          <target state="translated">金曜日を示す&lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="6c9343347a4f0312b1c951a3963a485070c28be6" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field indicating Monday.</source>
          <target state="translated">月曜日を示す&lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="846f3da204f207d2400c29e20aafa0405114dbb1" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field indicating Saturday.</source>
          <target state="translated">土曜日を示す&lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="2a9b74907fbd2985aeaa3ad1170f43113f6528ff" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field indicating Sunday.</source>
          <target state="translated">日曜日を示す&lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="ee70a770a2e2bb425fcfa57e8a65c8f2db0f4dc0" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field indicating Thursday.</source>
          <target state="translated">木曜日を示す&lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="bd05913b8fd06496b815d7acea6cc4d6f6993c0a" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field indicating Tuesday.</source>
          <target state="translated">火曜日を示す&lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="176967c64c29b6dfba689272c3bbaec416c7624a" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; field indicating Wednesday.</source>
          <target state="translated">水曜日を示す&lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="2075b5d1f6df50683e460e27dff3fa4d3c41098e" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the eighth month of the year in the Gregorian and Julian calendars.</source>
          <target state="translated">グレゴリオ暦とユリウス暦の年の8番目の月を示す&lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="8f3edd6d0a7998e7e31c021bca1a95d46f50df69" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the eleventh month of the year in the Gregorian and Julian calendars.</source>
          <target state="translated">グレゴリオ暦とユリウス暦の年の11番目の月を示す&lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="891537e526e08f0fdff78f64ea14fac4fa89abd7" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the fifth month of the year in the Gregorian and Julian calendars.</source>
          <target state="translated">グレゴリオ暦とユリウス暦の年の5番目の月を示す&lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="5bc019e9a7fdf00a6c4733b39cc05a0f101f0edf" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the first month of the year in the Gregorian and Julian calendars.</source>
          <target state="translated">グレゴリオ暦とユリウス暦の年の最初の月を示す&lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="b7b1708a4f8e80abc492842cd1b80d9e78b5be58" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the fourth month of the year in the Gregorian and Julian calendars.</source>
          <target state="translated">グレゴリオ暦とユリウス暦の年の4番目の月を示す&lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="6d520c15f5123940148e92850f989d06da2138dd" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the ninth month of the year in the Gregorian and Julian calendars.</source>
          <target state="translated">グレゴリオ暦とユリウス暦の年の9番目の月を示す&lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="a80e4f7e50e8aca7d19265fbb78baaed52a8374e" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the second month of the year in the Gregorian and Julian calendars.</source>
          <target state="translated">グレゴリオ暦とユリウス暦の年の2番目の月を示す&lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="c6545dce48c0fd96093d0b726bd3e51995f805b7" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the seventh month of the year in the Gregorian and Julian calendars.</source>
          <target state="translated">グレゴリオ暦とユリウス暦の年の7番目の月を示す&lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="990234242ddb126a5ab59dab12d0490a60376159" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the sixth month of the year in the Gregorian and Julian calendars.</source>
          <target state="translated">グレゴリオ暦とユリウス暦の年の6番目の月を示す&lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="c2ac6418cd1f46544ec73525d1bb04d7093d35bd" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the tenth month of the year in the Gregorian and Julian calendars.</source>
          <target state="translated">グレゴリオ暦とユリウス暦の年の10番目の月を示す&lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="48a24dbb75ad193ea656d20f9ec93c9bfb79d78e" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the third month of the year in the Gregorian and Julian calendars.</source>
          <target state="translated">グレゴリオ暦とユリウス暦の年の3番目の月を示す&lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="1a5cda39c200532d6a73126f81cb588fbf0b25dc" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the thirteenth month of the year. Although &lt;code&gt;GregorianCalendar&lt;/code&gt; does not use this value, lunar calendars do.</source>
          <target state="translated">年の13番目の月を示す&lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt;フィールドの値。けれども &lt;code&gt;GregorianCalendar&lt;/code&gt; 、この値を使用していない、太陰暦を行います。</target>
        </trans-unit>
        <trans-unit id="1d879fd4dd852eb60b2342a119b9d64de7379007" translate="yes" xml:space="preserve">
          <source>Value of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field indicating the twelfth month of the year in the Gregorian and Julian calendars.</source>
          <target state="translated">グレゴリオ暦とユリウス暦の年の12番目の月を示す&lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt;フィールドの値。</target>
        </trans-unit>
        <trans-unit id="eb461a50a2173917aa1a5dacc36f02d2337af2a2" translate="yes" xml:space="preserve">
          <source>Value of the &lt;code&gt;ERA&lt;/code&gt; field indicating the common era (Anno Domini), also known as CE. The sequence of years at the transition from &lt;code&gt;BC&lt;/code&gt; to &lt;code&gt;AD&lt;/code&gt; is ..., 2 BC, 1 BC, 1 AD, 2 AD,...</source>
          <target state="translated">共通の時代（Anno Domini）を示す &lt;code&gt;ERA&lt;/code&gt; フィールドの値。CEとも呼ばれます。 &lt;code&gt;BC&lt;/code&gt; から &lt;code&gt;AD&lt;/code&gt; への移行時の年のシーケンスは...、BC 2、BC 1、AD 1、AD 2 ...です。</target>
        </trans-unit>
        <trans-unit id="a39e77d9de2612d4759514c7c07af02d7b79d62e" translate="yes" xml:space="preserve">
          <source>Value of the &lt;code&gt;ERA&lt;/code&gt; field indicating the period before the common era (before Christ), also known as BCE. The sequence of years at the transition from &lt;code&gt;BC&lt;/code&gt; to &lt;code&gt;AD&lt;/code&gt; is ..., 2 BC, 1 BC, 1 AD, 2 AD,...</source>
          <target state="translated">紀元前（キリストの前）の期間を示す &lt;code&gt;ERA&lt;/code&gt; フィールドの値。BCEとも呼ばれます。 &lt;code&gt;BC&lt;/code&gt; から &lt;code&gt;AD&lt;/code&gt; への移行時の年のシーケンスは...、BC 2、BC 1、AD 1、AD 2 ...です。</target>
        </trans-unit>
        <trans-unit id="a8f4a2483a003460cea19aa00941b7cfd297b432" translate="yes" xml:space="preserve">
          <source>Value to indicate units of dots per centimeter (dpcm). It is actually the conversion factor by which to multiply dpcm to yield dphi (254).</source>
          <target state="translated">センチメートルあたりのドット数(dpcm)の単位を示す値。実際には dpcm に dphi (254)を得るために dpcm を掛ける変換係数である。</target>
        </trans-unit>
        <trans-unit id="8925eab8a38c0c9e19a927aecaf8802925a57a8a" translate="yes" xml:space="preserve">
          <source>Value to indicate units of dots per inch (dpi). It is actually the conversion factor by which to multiply dpi to yield dphi (100).</source>
          <target state="translated">ドット・パー・インチ(dpi)の単位を示す値。実際には、dpi を掛け合わせて dphi (100)を得るための変換係数です。</target>
        </trans-unit>
        <trans-unit id="9c64a5c35951035b3173e6278b55180398b5940f" translate="yes" xml:space="preserve">
          <source>Value to indicate units of inches (in). It is actually the conversion factor by which to multiply inches to yield &amp;micro;m (25400).</source>
          <target state="translated">インチ（in）の単位を示す値。実際には、インチを乗算して&amp;micro;m（25400）を算出するための変換係数です。</target>
        </trans-unit>
        <trans-unit id="dbe8bf92f762466a7fef45cb5bda5ab6c94f4056" translate="yes" xml:space="preserve">
          <source>Value to indicate units of millimeters (mm). It is actually the conversion factor by which to multiply mm to yield &amp;micro;m (1000).</source>
          <target state="translated">ミリメートル（mm）の単位を示す値。実際には、mmを乗算して&amp;micro;m（1000）を生成するための変換係数です。</target>
        </trans-unit>
        <trans-unit id="a956485e60c24642bdc24465480775891fba80d6" translate="yes" xml:space="preserve">
          <source>Value type</source>
          <target state="translated">値の種類</target>
        </trans-unit>
        <trans-unit id="071fede910bf59e6b41a2f9c9067d73cf445acf2" translate="yes" xml:space="preserve">
          <source>ValueExp</source>
          <target state="translated">ValueExp</target>
        </trans-unit>
        <trans-unit id="dc3e52e7f27fe5909bb774bfc7f471257661a5c4" translate="yes" xml:space="preserve">
          <source>ValueExp.apply()</source>
          <target state="translated">ValueExp.apply()</target>
        </trans-unit>
        <trans-unit id="27ca03cbdecad0c0e559b663e26553642410c786" translate="yes" xml:space="preserve">
          <source>ValueExp.setMBeanServer()</source>
          <target state="translated">ValueExp.setMBeanServer()</target>
        </trans-unit>
        <trans-unit id="4278bab4a5de6b4327ee3ff9ca6695a4a2e61323" translate="yes" xml:space="preserve">
          <source>ValueRange</source>
          <target state="translated">ValueRange</target>
        </trans-unit>
        <trans-unit id="f63ac73737085013a4edaeaba8eaaf69963a4708" translate="yes" xml:space="preserve">
          <source>ValueRange.checkValidIntValue()</source>
          <target state="translated">ValueRange.checkValidIntValue()</target>
        </trans-unit>
        <trans-unit id="f77b138341e5a89beac837e971faba8dc1ab96b2" translate="yes" xml:space="preserve">
          <source>ValueRange.checkValidValue()</source>
          <target state="translated">ValueRange.checkValidValue()</target>
        </trans-unit>
        <trans-unit id="405a0b914edddb2bcb6932414bec07cbfe3928d4" translate="yes" xml:space="preserve">
          <source>ValueRange.equals()</source>
          <target state="translated">ValueRange.equals()</target>
        </trans-unit>
        <trans-unit id="00367d2199fb0d8ee4c3e05e8791ea5a37eca0cb" translate="yes" xml:space="preserve">
          <source>ValueRange.getLargestMinimum()</source>
          <target state="translated">ValueRange.getLargestMinimum()</target>
        </trans-unit>
        <trans-unit id="f44dcbc0671f7ae7fafa6c631cd651eb49ccef52" translate="yes" xml:space="preserve">
          <source>ValueRange.getMaximum()</source>
          <target state="translated">ValueRange.getMaximum()</target>
        </trans-unit>
        <trans-unit id="8848d251b36e71927963524a1f71b41743c204db" translate="yes" xml:space="preserve">
          <source>ValueRange.getMinimum()</source>
          <target state="translated">ValueRange.getMinimum()</target>
        </trans-unit>
        <trans-unit id="00868d788bf12312f84a2ad1f80060f9bb226f33" translate="yes" xml:space="preserve">
          <source>ValueRange.getSmallestMaximum()</source>
          <target state="translated">ValueRange.getSmallestMaximum()</target>
        </trans-unit>
        <trans-unit id="d2b2b28f5df1176e53bb1d0beb7514eda88faa6a" translate="yes" xml:space="preserve">
          <source>ValueRange.hashCode()</source>
          <target state="translated">ValueRange.hashCode()</target>
        </trans-unit>
        <trans-unit id="6e69c03d067bbfaf798964a1908ee9ae0debb3cf" translate="yes" xml:space="preserve">
          <source>ValueRange.isFixed()</source>
          <target state="translated">ValueRange.isFixed()</target>
        </trans-unit>
        <trans-unit id="6d0dc7683dab612e7d85b79a4b71d545dbe32ce2" translate="yes" xml:space="preserve">
          <source>ValueRange.isIntValue()</source>
          <target state="translated">ValueRange.isIntValue()</target>
        </trans-unit>
        <trans-unit id="8588e44df641c952f11d1d5863fee6ef03a640d6" translate="yes" xml:space="preserve">
          <source>ValueRange.isValidIntValue()</source>
          <target state="translated">ValueRange.isValidIntValue()</target>
        </trans-unit>
        <trans-unit id="86851e38007a3f98110a3c3d39d5569376f99578" translate="yes" xml:space="preserve">
          <source>ValueRange.isValidValue()</source>
          <target state="translated">ValueRange.isValidValue()</target>
        </trans-unit>
        <trans-unit id="8348c9b1a903b6babc78a395c71b65409b0140e4" translate="yes" xml:space="preserve">
          <source>ValueRange.of()</source>
          <target state="translated">ValueRange.of()</target>
        </trans-unit>
        <trans-unit id="b265a40fb60e59c0326fd0eb14bba6d457ceda6c" translate="yes" xml:space="preserve">
          <source>ValueRange.toString()</source>
          <target state="translated">ValueRange.toString()</target>
        </trans-unit>
        <trans-unit id="f690792506e98e567753d37d7838becf68f6e214" translate="yes" xml:space="preserve">
          <source>Values #2 and #3 represent the same date on the time-line. When two values represent the same date, the chronology ID is compared to distinguish them. This step is needed to make the ordering &quot;consistent with equals&quot;.</source>
          <target state="translated">値#2と#3は、タイムライン上の同じ日付を表します。2つの値が同じ日付を表す場合、クロノロジーIDはそれらを区別するために比較されます。このステップは、順序を「等しく一貫した」ものにするために必要です。</target>
        </trans-unit>
        <trans-unit id="1277cdd8e7ccad113397046035e39eb239278112" translate="yes" xml:space="preserve">
          <source>Values #2 and #3 represent the same date-time on the time-line. When two values represent the same date-time, the chronology ID is compared to distinguish them. This step is needed to make the ordering &quot;consistent with equals&quot;.</source>
          <target state="translated">値#2と#3は、タイムライン上の同じ時刻を表します。2つの値が同じ時刻を表す場合、クロノロジーIDはそれらを区別するために比較されます。このステップは、&quot;等しく一貫した &quot;順序にするために必要です。</target>
        </trans-unit>
        <trans-unit id="4f6839ef69eba6c422caa1d291e5bf59848c75a0" translate="yes" xml:space="preserve">
          <source>Values #2 and #3 represent the same instant on the time-line. When two values represent the same instant, the local date-time is compared to distinguish them. This step is needed to make the ordering consistent with &lt;code&gt;equals()&lt;/code&gt;.</source>
          <target state="translated">値＃2と＃3は、タイムライン上の同じ瞬間を表します。2つの値が同じ瞬間を表す場合、それらを区別するためにローカルの日時が比較されます。この手順は、 &lt;code&gt;equals()&lt;/code&gt; と順序を一致させるために必要です。</target>
        </trans-unit>
        <trans-unit id="87c7a19b05c39c7325c8b99745712457f5703950" translate="yes" xml:space="preserve">
          <source>Values #2 and #3 represent the same instant on the time-line. When two values represent the same instant, the local time is compared to distinguish them. This step is needed to make the ordering consistent with &lt;code&gt;equals()&lt;/code&gt;.</source>
          <target state="translated">値＃2と＃3は、タイムライン上の同じ瞬間を表します。2つの値が同じ瞬間を表す場合、ローカル時間を比較してそれらを区別します。この手順は、 &lt;code&gt;equals()&lt;/code&gt; と順序を一致させるために必要です。</target>
        </trans-unit>
        <trans-unit id="268528ca2f4101f0f01cb97bd284e8aa230ea4d3" translate="yes" xml:space="preserve">
          <source>Values are instances of &lt;a href=&quot;../util/locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">値は&lt;a href=&quot;../util/locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; の&lt;/a&gt;インスタンスです。</target>
        </trans-unit>
        <trans-unit id="e981f52ebd79ba0f556461aee6e8d7840089f94b" translate="yes" xml:space="preserve">
          <source>Values are instances of &lt;a href=&quot;annotation&quot;&gt;&lt;code&gt;Annotation&lt;/code&gt;&lt;/a&gt; holding a &lt;code&gt;null&lt;/code&gt; reference.</source>
          <target state="translated">値は &lt;code&gt;null&lt;/code&gt; 参照を保持する&lt;a href=&quot;annotation&quot;&gt; &lt;code&gt;Annotation&lt;/code&gt; の&lt;/a&gt;インスタンスです。</target>
        </trans-unit>
        <trans-unit id="b31af6d0186e10290277038186c25b6988e420bf" translate="yes" xml:space="preserve">
          <source>Values are instances of &lt;a href=&quot;annotation&quot;&gt;&lt;code&gt;Annotation&lt;/code&gt;&lt;/a&gt; holding instances of &lt;a href=&quot;../lang/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">値は、&lt;a href=&quot;../lang/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; の&lt;/a&gt;インスタンスを保持する&lt;a href=&quot;annotation&quot;&gt; &lt;code&gt;Annotation&lt;/code&gt; の&lt;/a&gt;インスタンスです。</target>
        </trans-unit>
        <trans-unit id="e115f59754c175c14f774be997464fa891ca697b" translate="yes" xml:space="preserve">
          <source>Values calculated for the &lt;a href=&quot;calendar#WEEK_OF_YEAR&quot;&gt;&lt;code&gt;WEEK_OF_YEAR&lt;/code&gt;&lt;/a&gt; field range from 1 to 53. The first week of a calendar year is the earliest seven day period starting on &lt;a href=&quot;calendar#getFirstDayOfWeek--&quot;&gt;&lt;code&gt;getFirstDayOfWeek()&lt;/code&gt;&lt;/a&gt; that contains at least &lt;a href=&quot;calendar#getMinimalDaysInFirstWeek--&quot;&gt;&lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt;&lt;/a&gt; days from that year. It thus depends on the values of &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt;, &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt;, and the day of the week of January 1. Weeks between week 1 of one year and week 1 of the following year (exclusive) are numbered sequentially from 2 to 52 or 53 (except for year(s) involved in the Julian-Gregorian transition).</source>
          <target state="translated">&lt;a href=&quot;calendar#WEEK_OF_YEAR&quot;&gt; &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; &lt;/a&gt;フィールドで計算される値の範囲は1〜53です。暦年の最初の週は、その年から少なくとも&lt;a href=&quot;calendar#getMinimalDaysInFirstWeek--&quot;&gt; &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; &lt;/a&gt;日を含む&lt;a href=&quot;calendar#getFirstDayOfWeek--&quot;&gt; &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; &lt;/a&gt;で始まる最も早い7日間です。したがって、それは &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; 、 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; 、および1月1日の曜日の値に依存します。 53（ジュリアンからグレゴリオへの移行に関与した年を除く）。</target>
        </trans-unit>
        <trans-unit id="575e62216ce7a09805735fc6b3de9ccc1430c813" translate="yes" xml:space="preserve">
          <source>Values calculated for the &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; field range from 0 to 6. Week 1 of a month (the days with &lt;code&gt;WEEK_OF_MONTH =
 1&lt;/code&gt;) is the earliest set of at least &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; contiguous days in that month, ending on the day before &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt;. Unlike week 1 of a year, week 1 of a month may be shorter than 7 days, need not start on &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt;, and will not include days of the previous month. Days of a month before week 1 have a &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; of 0.</source>
          <target state="translated">&lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; フィールドで計算される値の範囲は0〜6です。月の第1週（ &lt;code&gt;WEEK_OF_MONTH = 1&lt;/code&gt; ）は、その月の少なくとも &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; 連続日の最も早いセットであり、 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; の前日に終了します。年の第1週とは異なり、月の第1週は7日より短い場合があり、 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; で開始する必要はなく、前月の日は含まれません。週1の前の月の日は、 &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; が0です。</target>
        </trans-unit>
        <trans-unit id="9a332429cea00f5e0ba78293bf1398f37a4150c4" translate="yes" xml:space="preserve">
          <source>Values of &lt;code&gt;scaleFactor&lt;/code&gt; less than 1 tend to improve the quality level of the table, and values greater than 1.0 degrade the quality level of the table.</source>
          <target state="translated">&lt;code&gt;scaleFactor&lt;/code&gt; の値が1未満の場合、テーブルの品質レベルが向上する傾向があり、1.0を超える値の場合、テーブルの品質レベルが低下します。</target>
        </trans-unit>
        <trans-unit id="4bfe0fe1c3ae3078c4a321e1c4a58a145561004c" translate="yes" xml:space="preserve">
          <source>Values sorted by increasing absolute magnitude tend to yield more accurate results.</source>
          <target state="translated">絶対値の大きさが大きくなるほど、より正確な結果が得られる傾向があります。</target>
        </trans-unit>
        <trans-unit id="7fd1aa8b60c66c8ce2049c5308600cb330cdfd6b" translate="yes" xml:space="preserve">
          <source>VariableElement</source>
          <target state="translated">VariableElement</target>
        </trans-unit>
        <trans-unit id="049a49f6e2fc58d7a1b76c30af066b79aa0564c7" translate="yes" xml:space="preserve">
          <source>VariableElement.getConstantValue()</source>
          <target state="translated">VariableElement.getConstantValue()</target>
        </trans-unit>
        <trans-unit id="3b18412a894e99767c237dee199a9e2775983eb1" translate="yes" xml:space="preserve">
          <source>VariableElement.getEnclosingElement()</source>
          <target state="translated">VariableElement.getEnclosingElement()</target>
        </trans-unit>
        <trans-unit id="a7dfbfe388dbe60d2736ff12b77fbe55d4cc3d26" translate="yes" xml:space="preserve">
          <source>VariableElement.getSimpleName()</source>
          <target state="translated">VariableElement.getSimpleName()</target>
        </trans-unit>
        <trans-unit id="1086bb4495c6bf9056c9194a2dd2423693aa9e8a" translate="yes" xml:space="preserve">
          <source>Various revocation options that can be specified for the revocation checking mechanism.</source>
          <target state="translated">リボケーションチェック機構に指定できる様々なリボケーションオプション。</target>
        </trans-unit>
        <trans-unit id="97f32c7bb68ddb3b63aa174f436ddfc434ec6102" translate="yes" xml:space="preserve">
          <source>Various third party code in OpenJDK is licensed under different licenses (see Debian package).</source>
          <target state="translated">OpenJDK のさまざまなサードパーティのコードは、さまざまなライセンスの下でライセンスされています (Debian パッケージを参照してください)。</target>
        </trans-unit>
        <trans-unit id="a57e06f45491067f031284fb03d3a20a0abf04fd" translate="yes" xml:space="preserve">
          <source>Vector</source>
          <target state="translated">Vector</target>
        </trans-unit>
        <trans-unit id="b2ef1d912b85c53285a62c499d2b90c159c3c696" translate="yes" xml:space="preserve">
          <source>Vector of ObjectNames:</source>
          <target state="translated">ObjectNamesのベクターです。</target>
        </trans-unit>
        <trans-unit id="83de014aed55804a3939d175ddf2c2be884594cc" translate="yes" xml:space="preserve">
          <source>Vector.add()</source>
          <target state="translated">Vector.add()</target>
        </trans-unit>
        <trans-unit id="12448a22577a08e4bd33814775b7bca76a2bddf8" translate="yes" xml:space="preserve">
          <source>Vector.addAll()</source>
          <target state="translated">Vector.addAll()</target>
        </trans-unit>
        <trans-unit id="b143e6536db395a20325b46ad006cd42dc5e9f2b" translate="yes" xml:space="preserve">
          <source>Vector.addElement()</source>
          <target state="translated">Vector.addElement()</target>
        </trans-unit>
        <trans-unit id="43af45b0e1f9ce030610e34886e1f90e27d316c5" translate="yes" xml:space="preserve">
          <source>Vector.capacity()</source>
          <target state="translated">Vector.capacity()</target>
        </trans-unit>
        <trans-unit id="3febce802bca5f96cf922a66d21610318cd93173" translate="yes" xml:space="preserve">
          <source>Vector.clear()</source>
          <target state="translated">Vector.clear()</target>
        </trans-unit>
        <trans-unit id="c3f0c067f5dedb91ad1b92477293cb721aba1f18" translate="yes" xml:space="preserve">
          <source>Vector.clone()</source>
          <target state="translated">Vector.clone()</target>
        </trans-unit>
        <trans-unit id="1dcc54ffe45fafd650dcc8eaf3c8f3e94cd76e20" translate="yes" xml:space="preserve">
          <source>Vector.contains()</source>
          <target state="translated">Vector.contains()</target>
        </trans-unit>
        <trans-unit id="ac54bb144b8f49d04f39970b007e43e34fe41ae9" translate="yes" xml:space="preserve">
          <source>Vector.containsAll()</source>
          <target state="translated">Vector.containsAll()</target>
        </trans-unit>
        <trans-unit id="4c9489df14ab0e65f81e03ff84264e735023be53" translate="yes" xml:space="preserve">
          <source>Vector.copyInto()</source>
          <target state="translated">Vector.copyInto()</target>
        </trans-unit>
        <trans-unit id="3621e9910bff4399b9ed4510fddab622e0ee3b36" translate="yes" xml:space="preserve">
          <source>Vector.elementAt()</source>
          <target state="translated">Vector.elementAt()</target>
        </trans-unit>
        <trans-unit id="5508e586c5025932f37fc1c79d6a310813f8390b" translate="yes" xml:space="preserve">
          <source>Vector.elements()</source>
          <target state="translated">Vector.elements()</target>
        </trans-unit>
        <trans-unit id="9cee392bda4c9917b78e896836645ef349830f16" translate="yes" xml:space="preserve">
          <source>Vector.ensureCapacity()</source>
          <target state="translated">Vector.ensureCapacity()</target>
        </trans-unit>
        <trans-unit id="7f735ae3b7fd23fd439bb9b91339ce6d21e167eb" translate="yes" xml:space="preserve">
          <source>Vector.equals()</source>
          <target state="translated">Vector.equals()</target>
        </trans-unit>
        <trans-unit id="f0d69b7676e486aec27c5a390254128b9dae9f28" translate="yes" xml:space="preserve">
          <source>Vector.firstElement()</source>
          <target state="translated">Vector.firstElement()</target>
        </trans-unit>
        <trans-unit id="cbb4cd89a2fdeafb33035409d87f79333aac1338" translate="yes" xml:space="preserve">
          <source>Vector.forEach()</source>
          <target state="translated">Vector.forEach()</target>
        </trans-unit>
        <trans-unit id="78b34b1da6c81c3f4f963f86fddac389fbbac93f" translate="yes" xml:space="preserve">
          <source>Vector.get()</source>
          <target state="translated">Vector.get()</target>
        </trans-unit>
        <trans-unit id="deb36a4a703a0c9662ba3851cfe616d96ae95755" translate="yes" xml:space="preserve">
          <source>Vector.hashCode()</source>
          <target state="translated">Vector.hashCode()</target>
        </trans-unit>
        <trans-unit id="592cd8d74702053a24d1ddc31961dafdd5423a77" translate="yes" xml:space="preserve">
          <source>Vector.indexOf()</source>
          <target state="translated">Vector.indexOf()</target>
        </trans-unit>
        <trans-unit id="c157c70b1183c8e1cc7e83216dbd858ea6a2163b" translate="yes" xml:space="preserve">
          <source>Vector.insertElementAt()</source>
          <target state="translated">Vector.insertElementAt()</target>
        </trans-unit>
        <trans-unit id="0f7da12a477d0a359460e546d58e9cf5946a0f2e" translate="yes" xml:space="preserve">
          <source>Vector.isEmpty()</source>
          <target state="translated">Vector.isEmpty()</target>
        </trans-unit>
        <trans-unit id="bf33cf7f788d664c19782bc048acb12f612c6496" translate="yes" xml:space="preserve">
          <source>Vector.iterator()</source>
          <target state="translated">Vector.iterator()</target>
        </trans-unit>
        <trans-unit id="4938cd464d6d833bb621df27883e40cee8538175" translate="yes" xml:space="preserve">
          <source>Vector.lastElement()</source>
          <target state="translated">Vector.lastElement()</target>
        </trans-unit>
        <trans-unit id="97a3271c8b245aecba1ae6e6a30e4b30a0a891cf" translate="yes" xml:space="preserve">
          <source>Vector.lastIndexOf()</source>
          <target state="translated">Vector.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="f7a34812d9979d01f9d063ffb06d8d715934545d" translate="yes" xml:space="preserve">
          <source>Vector.listIterator()</source>
          <target state="translated">Vector.listIterator()</target>
        </trans-unit>
        <trans-unit id="eba0f3a168dd92336da56a632e19c089633d5b07" translate="yes" xml:space="preserve">
          <source>Vector.remove()</source>
          <target state="translated">Vector.remove()</target>
        </trans-unit>
        <trans-unit id="4d2dd9a595584e0436ee40031ba5a9804a4db9ea" translate="yes" xml:space="preserve">
          <source>Vector.removeAll()</source>
          <target state="translated">Vector.removeAll()</target>
        </trans-unit>
        <trans-unit id="3c773c162479efdd5b353ce0ff3478618eb3b9b1" translate="yes" xml:space="preserve">
          <source>Vector.removeAllElements()</source>
          <target state="translated">Vector.removeAllElements()</target>
        </trans-unit>
        <trans-unit id="17fca280d9ece0986fd777add85d50ee0392c0dd" translate="yes" xml:space="preserve">
          <source>Vector.removeElement()</source>
          <target state="translated">Vector.removeElement()</target>
        </trans-unit>
        <trans-unit id="643e53618076ab6fa1c2b00e3ba77dba1a5ed20e" translate="yes" xml:space="preserve">
          <source>Vector.removeElementAt()</source>
          <target state="translated">Vector.removeElementAt()</target>
        </trans-unit>
        <trans-unit id="1aead010818808e7860adf5a57d71909eb7b2b7d" translate="yes" xml:space="preserve">
          <source>Vector.removeIf()</source>
          <target state="translated">Vector.removeIf()</target>
        </trans-unit>
        <trans-unit id="6636c9d887c1fa2dab94ba3fc862b9acbe18e589" translate="yes" xml:space="preserve">
          <source>Vector.removeRange()</source>
          <target state="translated">Vector.removeRange()</target>
        </trans-unit>
        <trans-unit id="1474edb1adf9f681c30f18fcc97588983d698714" translate="yes" xml:space="preserve">
          <source>Vector.replaceAll()</source>
          <target state="translated">Vector.replaceAll()</target>
        </trans-unit>
        <trans-unit id="fd86eab491851d0878d6c40aa408f6508dd0613c" translate="yes" xml:space="preserve">
          <source>Vector.retainAll()</source>
          <target state="translated">Vector.retainAll()</target>
        </trans-unit>
        <trans-unit id="41c8f8a5d29c3dee60f6dabfbbca41c925d0c89c" translate="yes" xml:space="preserve">
          <source>Vector.set()</source>
          <target state="translated">Vector.set()</target>
        </trans-unit>
        <trans-unit id="ff8f59c2fe882fda53638aed693a0f335766e3f7" translate="yes" xml:space="preserve">
          <source>Vector.setElementAt()</source>
          <target state="translated">Vector.setElementAt()</target>
        </trans-unit>
        <trans-unit id="5309201bc3b37f34020483c36bc4bedaeafd8843" translate="yes" xml:space="preserve">
          <source>Vector.setSize()</source>
          <target state="translated">Vector.setSize()</target>
        </trans-unit>
        <trans-unit id="9af6d61eccddf48cba99fee758a649b04c0f0130" translate="yes" xml:space="preserve">
          <source>Vector.size()</source>
          <target state="translated">Vector.size()</target>
        </trans-unit>
        <trans-unit id="4ec812220eccd3cb116968946418f15febd7f0de" translate="yes" xml:space="preserve">
          <source>Vector.sort()</source>
          <target state="translated">Vector.sort()</target>
        </trans-unit>
        <trans-unit id="41115bfb05c4408632b6cad89a0d544f93d03e8c" translate="yes" xml:space="preserve">
          <source>Vector.spliterator()</source>
          <target state="translated">Vector.spliterator()</target>
        </trans-unit>
        <trans-unit id="8c5be6bedb2668393cfff0b614596b4e01552b25" translate="yes" xml:space="preserve">
          <source>Vector.subList()</source>
          <target state="translated">Vector.subList()</target>
        </trans-unit>
        <trans-unit id="7bd689529fb4950bcab3d5113da7d140f7bf55db" translate="yes" xml:space="preserve">
          <source>Vector.toArray()</source>
          <target state="translated">Vector.toArray()</target>
        </trans-unit>
        <trans-unit id="52dabc53369db365958bb6b31a24f6912d819645" translate="yes" xml:space="preserve">
          <source>Vector.toString()</source>
          <target state="translated">Vector.toString()</target>
        </trans-unit>
        <trans-unit id="0e783562a1deb80d4b3491f0b9eec6984e7ab739" translate="yes" xml:space="preserve">
          <source>Vector.trimToSize()</source>
          <target state="translated">Vector.trimToSize()</target>
        </trans-unit>
        <trans-unit id="594b8c552b179d5ccb25cee5b1ece68e462291db" translate="yes" xml:space="preserve">
          <source>Vendors may choose to provide GUIs for the &lt;code&gt;IIOMetadata&lt;/code&gt; subclasses they define for a particular plug-in. These can be set up as default controllers in the corresponding &lt;code&gt;IIOMetadata&lt;/code&gt; subclasses.</source>
          <target state="translated">ベンダーは、特定のプラグインに対して定義する &lt;code&gt;IIOMetadata&lt;/code&gt; サブクラスにGUIを提供することを選択できます。これらは、対応する &lt;code&gt;IIOMetadata&lt;/code&gt; サブクラスのデフォルトコントローラーとして設定できます。</target>
        </trans-unit>
        <trans-unit id="831731741aea4af2c729f879961520f95f277642" translate="yes" xml:space="preserve">
          <source>Vendors may choose to provide GUIs for the &lt;code&gt;IIOParam&lt;/code&gt; subclasses they define for a particular plug-in. These can be set up as default controllers in the corresponding &lt;code&gt;IIOParam&lt;/code&gt; subclasses.</source>
          <target state="translated">ベンダーは、特定のプラグインに対して定義する &lt;code&gt;IIOParam&lt;/code&gt; サブクラスにGUIを提供することを選択できます。これらは、対応する &lt;code&gt;IIOParam&lt;/code&gt; サブクラスのデフォルトコントローラーとして設定できます。</target>
        </trans-unit>
        <trans-unit id="c11a3cc3af889ab7dcd6ed199f9b7ace98e83025" translate="yes" xml:space="preserve">
          <source>Vendors of service providers (plugins) are encouraged to seek information about other already established properties in third party plugins, and follow the same conventions.</source>
          <target state="translated">サービスプロバイダ(プラグイン)のベンダーは、サードパーティのプラグインの中にある他の既に確立されたプロパティについての情報を求めることが推奨されており、同じ規約に従ってください。</target>
        </trans-unit>
        <trans-unit id="b8b8bf823667cbcd057a2cc76c5aeac0f4a10f66" translate="yes" xml:space="preserve">
          <source>Verifies that the signature in this SignedObject is the valid signature for the object stored inside, with the given verification key, using the designated verification engine.</source>
          <target state="translated">このSignedObjectの署名が、指定された検証キーを用いて、内部に格納されているオブジェクトの有効な署名であることを、指定された検証エンジンを用いて検証する。</target>
        </trans-unit>
        <trans-unit id="99bd90b1546c3ee682015da5f10e8ba6532d09e8" translate="yes" xml:space="preserve">
          <source>Verifies that this CRL was signed using the private key that corresponds to the given public key.</source>
          <target state="translated">この CRL が、指定された公開鍵に対応する秘密鍵を使用して署名されたことを検証する。</target>
        </trans-unit>
        <trans-unit id="8392e2cecab0ac92ad3048817b161a5447cec89f" translate="yes" xml:space="preserve">
          <source>Verifies that this CRL was signed using the private key that corresponds to the given public key. This method uses the signature verification engine supplied by the given provider.</source>
          <target state="translated">この CRL が、指定された公開鍵に対応する秘密鍵を使用して署名されたことを検証します。このメソッドは、指定されたプロバイダが提供する署名検証エンジンを使用します。</target>
        </trans-unit>
        <trans-unit id="a31cd155077b823f3a380a0acff7476d8fb957b6" translate="yes" xml:space="preserve">
          <source>Verifies that this CRL was signed using the private key that corresponds to the given public key. This method uses the signature verification engine supplied by the given provider. Note that the specified Provider object does not have to be registered in the provider list. This method was added to version 1.8 of the Java Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method is not &lt;code&gt;abstract&lt;/code&gt; and it provides a default implementation.</source>
          <target state="translated">このCRLが、指定された公開鍵に対応する秘密鍵を使用して署名されたことを確認します。このメソッドは、指定されたプロバイダーによって提供される署名検証エンジンを使用します。指定したプロバイダーオブジェクトはプロバイダーリストに登録する必要はありません。このメソッドは、Java Platform Standard Editionのバージョン1.8に追加されました。既存のサービスプロバイダーとの下位互換性を維持するために、このメソッドは &lt;code&gt;abstract&lt;/code&gt; ではなく、デフォルトの実装を提供します。</target>
        </trans-unit>
        <trans-unit id="f86b494ce88c4338d5506b9f8b92667c611eb63e" translate="yes" xml:space="preserve">
          <source>Verifies that this certificate was signed using the private key that corresponds to the specified public key.</source>
          <target state="translated">この証明書が、指定された公開鍵に対応する秘密鍵を使用して署名されたことを確認します。</target>
        </trans-unit>
        <trans-unit id="6e94e7d0bb3eec70d5d884943f7076485f96ebfa" translate="yes" xml:space="preserve">
          <source>Verifies that this certificate was signed using the private key that corresponds to the specified public key. This method uses the signature verification engine supplied by the specified provider.</source>
          <target state="translated">この証明書が、指定された公開鍵に対応する秘密鍵を使用して署名されたことを検証します。このメソッドは、指定されたプロバイダが提供する署名検証エンジンを使用します。</target>
        </trans-unit>
        <trans-unit id="f5f94ace096494f2959f40bd02b6a36f8b04755a" translate="yes" xml:space="preserve">
          <source>Verifies that this certificate was signed using the private key that corresponds to the specified public key. This method uses the signature verification engine supplied by the specified provider. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">この証明書が、指定された公開鍵に対応する秘密鍵を使用して署名されたことを検証します。このメソッドは、指定されたプロバイダが提供する署名検証エンジンを使用します。指定されたプロバイダ・オブジェクトは、プロバイダ・リストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="823512bc3e4814869665ff27fff569caca67c7a7" translate="yes" xml:space="preserve">
          <source>Verifies that this certificate was signed using the private key that corresponds to the specified public key. This method uses the signature verification engine supplied by the specified provider. Note that the specified Provider object does not have to be registered in the provider list. This method was added to version 1.8 of the Java Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method is not &lt;code&gt;abstract&lt;/code&gt; and it provides a default implementation.</source>
          <target state="translated">この証明書が、指定された公開鍵に対応する秘密鍵を使用して署名されたことを確認します。このメソッドは、指定されたプロバイダーによって提供される署名検証エンジンを使用します。指定したプロバイダーオブジェクトはプロバイダーリストに登録する必要はありません。このメソッドは、Java Platform Standard Editionのバージョン1.8に追加されました。既存のサービスプロバイダーとの下位互換性を維持するために、このメソッドは &lt;code&gt;abstract&lt;/code&gt; ではなく、デフォルトの実装を提供します。</target>
        </trans-unit>
        <trans-unit id="e15e8baaae5ff180e7b82008d14d231b1160cd78" translate="yes" xml:space="preserve">
          <source>Verifies the passed-in signature in the specified array of bytes, starting at the specified offset.</source>
          <target state="translated">指定されたオフセットから開始して、指定されたバイト数の配列の中で、渡された署名を検証します。</target>
        </trans-unit>
        <trans-unit id="57d31e1789627ed6593a9dc73a6e55b7a850dff3" translate="yes" xml:space="preserve">
          <source>Verifies the passed-in signature.</source>
          <target state="translated">渡した署名を確認します。</target>
        </trans-unit>
        <trans-unit id="f6599afa550fe3cdb410bb86ea3737f60f646e09" translate="yes" xml:space="preserve">
          <source>Verify that the given attribute category object is equal to the category of the given attribute value object. If so, this method returns doing nothing. If not, this method throws an exception.</source>
          <target state="translated">与えられた属性カテゴリオブジェクトが、与えられた属性値オブジェクトのカテゴリと等しいことを確認します。もしそうであれば、このメソッドは何もしないことを返します。そうでない場合、このメソッドは例外をスローします。</target>
        </trans-unit>
        <trans-unit id="a94531d5b074160d69808b3c14bd667ac55ec2bf" translate="yes" xml:space="preserve">
          <source>Verify that the given object is a &lt;a href=&quot;../../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; that implements the given interface, which is assumed to be interface &lt;a href=&quot;attribute&quot;&gt;&lt;code&gt;Attribute&lt;/code&gt;&lt;/a&gt; or a subinterface thereof.</source>
          <target state="translated">指定されたオブジェクトが、指定されたインターフェイスを実装する&lt;a href=&quot;../../../java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;ことを確認します。これは、インターフェイスの&lt;a href=&quot;attribute&quot;&gt; &lt;code&gt;Attribute&lt;/code&gt; &lt;/a&gt;またはそのサブインターフェイスと見なされます。</target>
        </trans-unit>
        <trans-unit id="4830d6362f43020fbfb48858d067512ed329af92" translate="yes" xml:space="preserve">
          <source>Verify that the given object is an instance of the given interface, which is assumed to be interface &lt;a href=&quot;attribute&quot;&gt;&lt;code&gt;Attribute&lt;/code&gt;&lt;/a&gt; or a subinterface thereof.</source>
          <target state="translated">指定されたオブジェクトが指定されたインターフェースのインスタンスであることを確認してください。これはインターフェース&lt;a href=&quot;attribute&quot;&gt; &lt;code&gt;Attribute&lt;/code&gt; &lt;/a&gt;またはそのサブインターフェースであると想定されています。</target>
        </trans-unit>
        <trans-unit id="cbb1632be36453254ce6b2c18c1d6e17310ad49e" translate="yes" xml:space="preserve">
          <source>Verify that the host name is an acceptable match with the server's authentication scheme.</source>
          <target state="translated">ホスト名がサーバの認証スキームと一致していることを確認します。</target>
        </trans-unit>
        <trans-unit id="50018573d5b3422d0b24a7448bd85040f25bc9e9" translate="yes" xml:space="preserve">
          <source>VerifyError</source>
          <target state="translated">VerifyError</target>
        </trans-unit>
        <trans-unit id="e4b37c7d2bbd81953aa0dc4dee5448591993d7f7" translate="yes" xml:space="preserve">
          <source>Version number that is written to the stream header.</source>
          <target state="translated">ストリームヘッダに書き込まれるバージョン番号。</target>
        </trans-unit>
        <trans-unit id="571f32dac3bc4ec3d1fe7045d05d9a0f03649e6b" translate="yes" xml:space="preserve">
          <source>Version numbers are compared by sequentially comparing corresponding components of the desired and specification strings. Each component is converted as a decimal integer and the values compared. If the specification value is greater than the desired value true is returned. If the value is less false is returned. If the values are equal the period is skipped and the next pair of components is compared.</source>
          <target state="translated">バージョン番号は、希望する文字列と仕様文字列の対応する成分を順次比較して比較します。各成分は 10 進整数に変換され、値が比較されます。仕様値が希望する値よりも大きければ true を返す。値が小さい場合は false が返されます。値が等しい場合、期間はスキップされ、次のペアの構成要素が比較されます。</target>
        </trans-unit>
        <trans-unit id="e713eceb7a1ac7f3a02a42750432df62c5b6e94c" translate="yes" xml:space="preserve">
          <source>Version, for example: &quot;1.8.0_1&quot;</source>
          <target state="translated">バージョン、例えば &quot;1.8.0_1&quot;</target>
        </trans-unit>
        <trans-unit id="16ad021ddebc536839f39ac63d6ec060e30b8664" translate="yes" xml:space="preserve">
          <source>VetoableChangeListener</source>
          <target state="translated">VetoableChangeListener</target>
        </trans-unit>
        <trans-unit id="804915316d8f97886adb8e247459f602dfcebe36" translate="yes" xml:space="preserve">
          <source>VetoableChangeListener.vetoableChange()</source>
          <target state="translated">VetoableChangeListener.vetoableChange()</target>
        </trans-unit>
        <trans-unit id="00795ddbe00248abe6b9a0b5a0162c5148c11e54" translate="yes" xml:space="preserve">
          <source>VetoableChangeListenerProxy</source>
          <target state="translated">VetoableChangeListenerProxy</target>
        </trans-unit>
        <trans-unit id="6f0d8143719e552f9ce314590b2628878279cbdd" translate="yes" xml:space="preserve">
          <source>VetoableChangeListenerProxy.getPropertyName()</source>
          <target state="translated">VetoableChangeListenerProxy.getPropertyName()</target>
        </trans-unit>
        <trans-unit id="a1b0c400f5ac2cff7686549c82412e33d7291658" translate="yes" xml:space="preserve">
          <source>VetoableChangeListenerProxy.vetoableChange()</source>
          <target state="translated">VetoableChangeListenerProxy.vetoableChange()</target>
        </trans-unit>
        <trans-unit id="6b31b1e9a51d19299fc659cdc98eebdd31b0039f" translate="yes" xml:space="preserve">
          <source>VetoableChangeSupport</source>
          <target state="translated">VetoableChangeSupport</target>
        </trans-unit>
        <trans-unit id="501c78d942a8f2041c7aad44cd60a6a8261c93e6" translate="yes" xml:space="preserve">
          <source>VetoableChangeSupport.addVetoableChangeListener()</source>
          <target state="translated">VetoableChangeSupport.addVetoableChangeListener()</target>
        </trans-unit>
        <trans-unit id="a30a001aec1f217ee5fd2360a6311c6af8bf23a8" translate="yes" xml:space="preserve">
          <source>VetoableChangeSupport.fireVetoableChange()</source>
          <target state="translated">VetoableChangeSupport.fireVetoableChange()</target>
        </trans-unit>
        <trans-unit id="6699991fad2342cd161e77ef52e5011623343bb6" translate="yes" xml:space="preserve">
          <source>VetoableChangeSupport.getVetoableChangeListeners()</source>
          <target state="translated">VetoableChangeSupport.getVetoableChangeListeners()</target>
        </trans-unit>
        <trans-unit id="04ac8a51228c53c751a042f343c2433f06423a34" translate="yes" xml:space="preserve">
          <source>VetoableChangeSupport.hasListeners()</source>
          <target state="translated">VetoableChangeSupport.hasListeners()</target>
        </trans-unit>
        <trans-unit id="7df8e4f28d5f514752792a700ca3dcba430bab06" translate="yes" xml:space="preserve">
          <source>VetoableChangeSupport.removeVetoableChangeListener()</source>
          <target state="translated">VetoableChangeSupport.removeVetoableChangeListener()</target>
        </trans-unit>
        <trans-unit id="fe8c549b8765b4d37e8bb3ca15fef40af0da355c" translate="yes" xml:space="preserve">
          <source>View buffers have three important advantages over the families of type-specific</source>
          <target state="translated">ビューバッファには、タイプ固有の</target>
        </trans-unit>
        <trans-unit id="bebb260b04c0f09e3e5ed827bf51a0545c229af4" translate="yes" xml:space="preserve">
          <source>Viewing the name of a principal and optionally the scope in which it is used, and whether or not it is considered &quot;trusted&quot; in that scope</source>
          <target state="translated">プリンシパルの名前と、それが使用されているスコープ、そしてそのスコープで「信頼されている」と見なされるかどうかを表示します。</target>
        </trans-unit>
        <trans-unit id="c89389db8f652fc705f1c3355c972ecf2b4db9f6" translate="yes" xml:space="preserve">
          <source>VirtualMachineError</source>
          <target state="translated">VirtualMachineError</target>
        </trans-unit>
        <trans-unit id="53c862a5c1e4a0d09bcc411af0d56870b5419191" translate="yes" xml:space="preserve">
          <source>Virtually all Java core classes that implement &lt;code&gt;Comparable&lt;/code&gt; have natural orderings that are consistent with equals. One exception is &lt;code&gt;java.math.BigDecimal&lt;/code&gt;, whose natural ordering equates &lt;code&gt;BigDecimal&lt;/code&gt; objects with equal values and different precisions (such as 4.0 and 4.00).</source>
          <target state="translated">&lt;code&gt;Comparable&lt;/code&gt; を実装するほとんどすべてのJavaコアクラスは、equalsと一致する自然な順序を持っています。1つの例外は &lt;code&gt;java.math.BigDecimal&lt;/code&gt; で、その自然な順序付けは &lt;code&gt;BigDecimal&lt;/code&gt; オブジェクトを等しい値と異なる精度（4.0や4.00など）と同等にします。</target>
        </trans-unit>
        <trans-unit id="7d9ff4f0de398581c4640bcbb6e536c355a391be" translate="yes" xml:space="preserve">
          <source>Visibility</source>
          <target state="translated">Visibility</target>
        </trans-unit>
        <trans-unit id="dc86a86aee0e08b6ed1bbd3cb635071551d78d59" translate="yes" xml:space="preserve">
          <source>Visibility.avoidingGui()</source>
          <target state="translated">Visibility.avoidingGui()</target>
        </trans-unit>
        <trans-unit id="ad82dff02d300c2038619427e4898e3ee75dccae" translate="yes" xml:space="preserve">
          <source>Visibility.dontUseGui()</source>
          <target state="translated">Visibility.dontUseGui()</target>
        </trans-unit>
        <trans-unit id="964540def0711de39782bcc60ea1d52cec224b4a" translate="yes" xml:space="preserve">
          <source>Visibility.needsGui()</source>
          <target state="translated">Visibility.needsGui()</target>
        </trans-unit>
        <trans-unit id="e16f80ed6f0fa07268b369c53b2c7eac2bfd9ccb" translate="yes" xml:space="preserve">
          <source>Visibility.okToUseGui()</source>
          <target state="translated">Visibility.okToUseGui()</target>
        </trans-unit>
        <trans-unit id="9d0816f9d0a8eacad55f85691e825665ca134eed" translate="yes" xml:space="preserve">
          <source>Visits a &lt;a href=&quot;../type/notype&quot;&gt;&lt;code&gt;NoType&lt;/code&gt;&lt;/a&gt; instance, dispatching to the visit method for the specific &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; of pseudo-type: &lt;code&gt;VOID&lt;/code&gt;, &lt;code&gt;PACKAGE&lt;/code&gt;, or &lt;code&gt;NONE&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../type/notype&quot;&gt; &lt;code&gt;NoType&lt;/code&gt; &lt;/a&gt;インスタンスを訪問し、特定の&lt;a href=&quot;../type/typekind&quot;&gt;種類&lt;/a&gt;の疑似タイプ（ &lt;code&gt;VOID&lt;/code&gt; 、 &lt;code&gt;PACKAGE&lt;/code&gt; 、または &lt;code&gt;NONE&lt;/code&gt; )のvisitメソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="413df7e9129db00f72578d2bf359304ab985a01c" translate="yes" xml:space="preserve">
          <source>Visits a &lt;a href=&quot;../type/notype&quot;&gt;&lt;code&gt;NoType&lt;/code&gt;&lt;/a&gt; instance. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">訪問&lt;a href=&quot;../type/notype&quot;&gt; &lt;code&gt;NoType&lt;/code&gt; &lt;/a&gt;インスタンス。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="ea31cf064cc018556f99765c17487a9fd1ef0208" translate="yes" xml:space="preserve">
          <source>Visits a &lt;a href=&quot;../type/typekind#NONE&quot;&gt;&lt;code&gt;NONE&lt;/code&gt;&lt;/a&gt; pseudo-type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、&lt;a href=&quot;../type/typekind#NONE&quot;&gt; &lt;code&gt;NONE&lt;/code&gt; &lt;/a&gt;疑似タイプにアクセスします。</target>
        </trans-unit>
        <trans-unit id="638427628c58146786d9eb8a141b8507219563a0" translate="yes" xml:space="preserve">
          <source>Visits a &lt;a href=&quot;../type/typekind#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt; pseudo-type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、&lt;a href=&quot;../type/typekind#PACKAGE&quot;&gt; &lt;code&gt;PACKAGE&lt;/code&gt; &lt;/a&gt;疑似タイプにアクセスします。</target>
        </trans-unit>
        <trans-unit id="e3102e30da4c98dd9705344ed8ba5285e3d4ce37" translate="yes" xml:space="preserve">
          <source>Visits a &lt;a href=&quot;../type/typekind#VOID&quot;&gt;&lt;code&gt;VOID&lt;/code&gt;&lt;/a&gt; pseudo-type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、&lt;a href=&quot;../type/typekind#VOID&quot;&gt; &lt;code&gt;VOID&lt;/code&gt; &lt;/a&gt;疑似タイプにアクセスします。</target>
        </trans-unit>
        <trans-unit id="326ce264cd280987f162f7ee52f2123d2e931cc7" translate="yes" xml:space="preserve">
          <source>Visits a &lt;a href=&quot;notype&quot;&gt;&lt;code&gt;NoType&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">訪問&lt;a href=&quot;notype&quot;&gt; &lt;code&gt;NoType&lt;/code&gt; &lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="48666523726612234fe73e2372b2c2a498929425" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;BOOLEAN&lt;/code&gt; primitive type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、 &lt;code&gt;BOOLEAN&lt;/code&gt; プリミティブ型にアクセスします。</target>
        </trans-unit>
        <trans-unit id="6974b748f8432f4ea10f29e8ecee4d3df5f8cfd0" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;BYTE&lt;/code&gt; primitive type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して &lt;code&gt;BYTE&lt;/code&gt; プリミティブ型にアクセスします。</target>
        </trans-unit>
        <trans-unit id="e0d55089b3e5d58c87f8cb2f882879701abf1c66" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;CHAR&lt;/code&gt; primitive type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、 &lt;code&gt;CHAR&lt;/code&gt; プリミティブ型にアクセスします。</target>
        </trans-unit>
        <trans-unit id="bfed97e82b81f71c8a4bf71bd522a3641768692b" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;CLASS&lt;/code&gt; type element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、 &lt;code&gt;CLASS&lt;/code&gt; タイプの要素にアクセスします。</target>
        </trans-unit>
        <trans-unit id="942a391c7d3b5c540337240f8a9248d876d54870" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;CONSTRUCTOR&lt;/code&gt; executable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、 &lt;code&gt;CONSTRUCTOR&lt;/code&gt; 実行可能要素にアクセスします。</target>
        </trans-unit>
        <trans-unit id="4544865bfa0a71ab8f456c6ddcee6ec932fec53a" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;DOUBLE&lt;/code&gt; primitive type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、 &lt;code&gt;DOUBLE&lt;/code&gt; プリミティブ型を訪問します。</target>
        </trans-unit>
        <trans-unit id="a7640b51294c1f97e6b1fb8f150360ded79e9d1d" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;FIELD&lt;/code&gt; variable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して &lt;code&gt;FIELD&lt;/code&gt; 変数要素にアクセスします。</target>
        </trans-unit>
        <trans-unit id="19ebca4e457ad1924ea6a3643ba2f472dd49bab2" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;FLOAT&lt;/code&gt; primitive type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して &lt;code&gt;FLOAT&lt;/code&gt; プリミティブ型にアクセスします。</target>
        </trans-unit>
        <trans-unit id="2e2f3811dbbcfde797ceb7c0a19d0374801e7d94" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;LOCAL_VARIABLE&lt;/code&gt; variable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、 &lt;code&gt;LOCAL_VARIABLE&lt;/code&gt; 変数要素にアクセスします。</target>
        </trans-unit>
        <trans-unit id="f56d28124023def96c0de4285daf6dcc3c9582c5" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;LONG&lt;/code&gt; primitive type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、 &lt;code&gt;LONG&lt;/code&gt; プリミティブ型にアクセスします。</target>
        </trans-unit>
        <trans-unit id="a842bc1ad93bd33187ac6754926d103c604db723" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;METHOD&lt;/code&gt; executable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、 &lt;code&gt;METHOD&lt;/code&gt; 実行可能要素にアクセスします。</target>
        </trans-unit>
        <trans-unit id="c6a80dd1507bef5ef1217e9c64d00867e578f4f2" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;PARAMETER&lt;/code&gt; variable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、 &lt;code&gt;PARAMETER&lt;/code&gt; 変数要素にアクセスします。</target>
        </trans-unit>
        <trans-unit id="f0762abcfb44145bd546a0e1743dc74cc19ac20d" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; variable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; 変数要素にアクセスします。</target>
        </trans-unit>
        <trans-unit id="d3b9e07ffd616970b3390a782fa96196543f77fb" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; variable element by calling &lt;code&gt;visitUnknown&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;visitUnknown&lt;/code&gt; を呼び出して &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; 変数要素にアクセスします。</target>
        </trans-unit>
        <trans-unit id="928d8dc7e22e1d1eee7164f4e9b7df6922b44267" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;SHORT&lt;/code&gt; primitive type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、 &lt;code&gt;SHORT&lt;/code&gt; プリミティブ型にアクセスします。</target>
        </trans-unit>
        <trans-unit id="06519f49dafdc7d6c801c704f0cf40c7c8869d2c" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;STATIC_INIT&lt;/code&gt; executable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、 &lt;code&gt;STATIC_INIT&lt;/code&gt; 実行可能要素にアクセスします。</target>
        </trans-unit>
        <trans-unit id="f98abd79917fe35d903efd8b7ce5969f24fb847c" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;UnionType&lt;/code&gt; element by calling &lt;code&gt;visitUnknown&lt;/code&gt;.</source>
          <target state="translated">訪問 &lt;code&gt;UnionType&lt;/code&gt; の呼び出しによって要素 &lt;code&gt;visitUnknown&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="c36db7ef69840a3d127aaf0ade441e8f6776483b" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;UnionType&lt;/code&gt; in a manner defined by a subclass.</source>
          <target state="translated">サブクラスで定義された方法で &lt;code&gt;UnionType&lt;/code&gt; を訪問します。</target>
        </trans-unit>
        <trans-unit id="d280e973487cc97b6454fa74ffa411d4df6f08d8" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;boolean&lt;/code&gt; value in an annotation.</source>
          <target state="translated">訪問 &lt;code&gt;boolean&lt;/code&gt; 注釈の値。</target>
        </trans-unit>
        <trans-unit id="7f00336ee526ec44df91e5191c8c8be5573d8b33" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;boolean&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">訪問 &lt;code&gt;boolean&lt;/code&gt; 注釈の値。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="c55346f0fff3ab9ae25b60a702aa77125d1933ab" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;byte&lt;/code&gt; value in an annotation.</source>
          <target state="translated">注釈の &lt;code&gt;byte&lt;/code&gt; 値にアクセスします。</target>
        </trans-unit>
        <trans-unit id="ab6c8b62d850df3e0ad69a0b0fd8401f723300ff" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;byte&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">注釈の &lt;code&gt;byte&lt;/code&gt; 値にアクセスします。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="fe3f91c9977a564ff3ccdf15344d8217fafa1442" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;char&lt;/code&gt; value in an annotation.</source>
          <target state="translated">訪問 &lt;code&gt;char&lt;/code&gt; 型の注釈の値。</target>
        </trans-unit>
        <trans-unit id="ea8973b7808a3c696c27c834ec234e255ade27fd" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;char&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">訪問 &lt;code&gt;char&lt;/code&gt; 型の注釈の値。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="57cbcd52b61eb06812ad3ddebf9a344b499aef98" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;double&lt;/code&gt; value in an annotation.</source>
          <target state="translated">訪問 &lt;code&gt;double&lt;/code&gt; 注釈の値。</target>
        </trans-unit>
        <trans-unit id="84948981c7c65bc28218ccf1f9004b103ef0b52e" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;double&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">訪問 &lt;code&gt;double&lt;/code&gt; 注釈の値。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="3a4f6d0d322ea41a20c39d0fb8d0ca9e538ed29a" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;float&lt;/code&gt; value in an annotation.</source>
          <target state="translated">訪問 &lt;code&gt;float&lt;/code&gt; 注釈の値。</target>
        </trans-unit>
        <trans-unit id="ae1ff6fe4e26f3105cf3c6c8aa6f454303e3de98" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;float&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">訪問 &lt;code&gt;float&lt;/code&gt; 注釈の値。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="bcb4114d76d3ceb5aa80467560a61a42c900ae00" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;long&lt;/code&gt; value in an annotation.</source>
          <target state="translated">訪問 &lt;code&gt;long&lt;/code&gt; 注釈の値。</target>
        </trans-unit>
        <trans-unit id="17e61de4db861c086df6c6b4cad9de7b9ff56d4f" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;long&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">訪問 &lt;code&gt;long&lt;/code&gt; 注釈の値。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="929ce7a40a022c8dc1896120f9a14ee6b9aaecb5" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;short&lt;/code&gt; value in an annotation.</source>
          <target state="translated">訪問 &lt;code&gt;short&lt;/code&gt; 注釈の値。</target>
        </trans-unit>
        <trans-unit id="91625b4cf3f2eba1542fb8604e82cb6107de71b7" translate="yes" xml:space="preserve">
          <source>Visits a &lt;code&gt;short&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">訪問 &lt;code&gt;short&lt;/code&gt; 注釈の値。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="afa7eaec1d8108c01b34574ca2feb8baddff79e8" translate="yes" xml:space="preserve">
          <source>Visits a declared type.</source>
          <target state="translated">宣言された型を参照します。</target>
        </trans-unit>
        <trans-unit id="d52dd9cc63c88d5904414fcced772a3ae8dabec1" translate="yes" xml:space="preserve">
          <source>Visits a declared type. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">宣言された型を訪問します。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="da3ed6463e2a8bc29f0e6506eb960663626b4e5c" translate="yes" xml:space="preserve">
          <source>Visits a package element.</source>
          <target state="translated">パッケージ要素を訪問します。</target>
        </trans-unit>
        <trans-unit id="aa75ba6fccbb011aabb7d255993d81f58433c56e" translate="yes" xml:space="preserve">
          <source>Visits a package element. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">パッケージ要素を訪問します。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="578f063a0322180a8b9640b54484cee4e2679d73" translate="yes" xml:space="preserve">
          <source>Visits a package element. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;. The element argument has kind &lt;code&gt;PACKAGE&lt;/code&gt;.</source>
          <target state="translated">パッケージ要素を訪問します。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。要素の引数の種類は &lt;code&gt;PACKAGE&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a69805f06d8c90207a336ef091bbebb39637da79" translate="yes" xml:space="preserve">
          <source>Visits a package element. This implementation scans the enclosed elements.</source>
          <target state="translated">パッケージ要素を訪問します。この実装では、囲まれた要素をスキャンします。</target>
        </trans-unit>
        <trans-unit id="7e5c3dd474e332ec755b17623c8ca46754fce8c3" translate="yes" xml:space="preserve">
          <source>Visits a primitive type, dispatching to the visit method for the specific &lt;a href=&quot;../type/typekind&quot;&gt;kind&lt;/a&gt; of primitive type: &lt;code&gt;BOOLEAN&lt;/code&gt;, &lt;code&gt;BYTE&lt;/code&gt;, etc.</source>
          <target state="translated">プリミティブ型を訪問し、特定の&lt;a href=&quot;../type/typekind&quot;&gt;種類&lt;/a&gt;のプリミティブ型（ &lt;code&gt;BOOLEAN&lt;/code&gt; 、 &lt;code&gt;BYTE&lt;/code&gt; など）のvisitメソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="4f0e280c2ccff87d8ce09e6afcc019787e625426" translate="yes" xml:space="preserve">
          <source>Visits a primitive type.</source>
          <target state="translated">プリミティブ型を参照します。</target>
        </trans-unit>
        <trans-unit id="a67d7a9595de2142445764b37e3a89c459ea6be1" translate="yes" xml:space="preserve">
          <source>Visits a primitive type. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">プリミティブ型を訪問します。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="4d59604f243c828e3eb0c9e29f2b8b052e7695d8" translate="yes" xml:space="preserve">
          <source>Visits a string value in an annotation.</source>
          <target state="translated">アノテーション内の文字列値を参照します。</target>
        </trans-unit>
        <trans-unit id="ae519e8764c141dffffe546b4abfc8b92c3fdd8d" translate="yes" xml:space="preserve">
          <source>Visits a string value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">注釈の文字列値にアクセスします。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="b06ef501f33508d7fef5e1395136d596f0836d9f" translate="yes" xml:space="preserve">
          <source>Visits a type element, dispatching to the visit method for the specific &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; of type, &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt;, &lt;code&gt;CLASS&lt;/code&gt;, &lt;code&gt;ENUM&lt;/code&gt;, or &lt;code&gt;INTERFACE&lt;/code&gt;.</source>
          <target state="translated">タイプ要素を訪問し、特定の&lt;a href=&quot;../element/elementkind&quot;&gt;種類&lt;/a&gt;のタイプの訪問メソッドにディスパッチします（ &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt; 、 &lt;code&gt;CLASS&lt;/code&gt; 、 &lt;code&gt;ENUM&lt;/code&gt; 、または &lt;code&gt;INTERFACE&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="a1ed45dc4c679ffd3be80c1d915c0e034f2cb522" translate="yes" xml:space="preserve">
          <source>Visits a type element.</source>
          <target state="translated">type要素を訪問します。</target>
        </trans-unit>
        <trans-unit id="725617f4669fb96b4b2db2903858f32ff82a9095" translate="yes" xml:space="preserve">
          <source>Visits a type element. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">type要素を訪問します。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="03f09d0e387495fc79006117463f4fda3f98b03c" translate="yes" xml:space="preserve">
          <source>Visits a type element. This implementation scans the enclosed elements.</source>
          <target state="translated">型要素を訪問します。この実装では、囲まれた要素をスキャンします。</target>
        </trans-unit>
        <trans-unit id="15184fa0456c8125264107e4ce2aaa0730f73960" translate="yes" xml:space="preserve">
          <source>Visits a type parameter element.</source>
          <target state="translated">型パラメータ要素を参照します。</target>
        </trans-unit>
        <trans-unit id="eeeba9b3b8ccd78ed650a7c71b6ffaa3af8ab805" translate="yes" xml:space="preserve">
          <source>Visits a type parameter element. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">型パラメーター要素にアクセスします。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="87facd06a9d3b24ae7811573b6f0cebad1f8e5cf" translate="yes" xml:space="preserve">
          <source>Visits a type parameter element. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;. The element argument has kind &lt;code&gt;TYPE_PARAMETER&lt;/code&gt;.</source>
          <target state="translated">型パラメーター要素にアクセスします。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。要素の引数の種類は &lt;code&gt;TYPE_PARAMETER&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cb639d8da0d216afd44a0f43d91fa3085a36bf86" translate="yes" xml:space="preserve">
          <source>Visits a type parameter element. This implementation scans the enclosed elements.</source>
          <target state="translated">型パラメータ要素を訪問します。この実装では、囲まれた要素をスキャンします。</target>
        </trans-unit>
        <trans-unit id="62a156da44d20f12c855b622eecedfbd267c16c6" translate="yes" xml:space="preserve">
          <source>Visits a type value in an annotation.</source>
          <target state="translated">アノテーション内の型の値を参照します。</target>
        </trans-unit>
        <trans-unit id="41a183ef44d6dffb4259a8bc47efd90248834786" translate="yes" xml:space="preserve">
          <source>Visits a type value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">注釈のタイプ値にアクセスします。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="5e9a507a67ebd26255ed26f51400ab8ae1b85be7" translate="yes" xml:space="preserve">
          <source>Visits a type variable.</source>
          <target state="translated">型変数を参照します。</target>
        </trans-unit>
        <trans-unit id="c372964830cc14efbcaade0fdbedff99b18ddfc7" translate="yes" xml:space="preserve">
          <source>Visits a type variable. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">型変数を訪問します。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="27153c563d708cafa9b1a229b9dc99984752a40e" translate="yes" xml:space="preserve">
          <source>Visits a type.</source>
          <target state="translated">タイプを訪問します。</target>
        </trans-unit>
        <trans-unit id="5a7ed86e7e1918041456b36609215487806c0f32" translate="yes" xml:space="preserve">
          <source>Visits a union type.</source>
          <target state="translated">ユニオン型を参照します。</target>
        </trans-unit>
        <trans-unit id="fd3f996c9e0d38e797e04c55498bfb2cd4cb67f0" translate="yes" xml:space="preserve">
          <source>Visits a variable element, dispatching to the visit method for the specific &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; of variable, &lt;code&gt;ENUM_CONSTANT&lt;/code&gt;, &lt;code&gt;EXCEPTION_PARAMETER&lt;/code&gt;, &lt;code&gt;FIELD&lt;/code&gt;, &lt;code&gt;LOCAL_VARIABLE&lt;/code&gt;, &lt;code&gt;PARAMETER&lt;/code&gt;, or &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt;.</source>
          <target state="translated">Visits a variable element, dispatching to the visit method for the specific &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; of variable, &lt;code&gt;ENUM_CONSTANT&lt;/code&gt; , &lt;code&gt;EXCEPTION_PARAMETER&lt;/code&gt; , &lt;code&gt;FIELD&lt;/code&gt; , &lt;code&gt;LOCAL_VARIABLE&lt;/code&gt; , &lt;code&gt;PARAMETER&lt;/code&gt; , or &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba24a5a1b0f0d64c13b84b66d3e255226077b152" translate="yes" xml:space="preserve">
          <source>Visits a variable element.</source>
          <target state="translated">変数要素を訪問します。</target>
        </trans-unit>
        <trans-unit id="de3e51caf6584b99ff6431fc5456fb0154ee202d" translate="yes" xml:space="preserve">
          <source>Visits a variable element. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;, unless the element is a &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; in which case &lt;code&gt;visitUnknown&lt;/code&gt; is called.</source>
          <target state="translated">Visits a variable element. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt; , unless the element is a &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; in which case &lt;code&gt;visitUnknown&lt;/code&gt; is called.</target>
        </trans-unit>
        <trans-unit id="c533b7a875e8fbdb46b902e74c1ecbc9fe0fda0a" translate="yes" xml:space="preserve">
          <source>Visits a variable element. This implementation scans the enclosed elements, unless the element is a &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; in which case &lt;code&gt;visitUnknown&lt;/code&gt; is called.</source>
          <target state="translated">Visits a variable element. This implementation scans the enclosed elements, unless the element is a &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; in which case &lt;code&gt;visitUnknown&lt;/code&gt; is called.</target>
        </trans-unit>
        <trans-unit id="79c574f5448e2d13d42803c65593135476065308" translate="yes" xml:space="preserve">
          <source>Visits a wildcard type.</source>
          <target state="translated">ワイルドカード型を訪問します。</target>
        </trans-unit>
        <trans-unit id="034e2b7d175c18437a65a94a38180f72fce56c65" translate="yes" xml:space="preserve">
          <source>Visits a wildcard type. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">ワイルドカードタイプにアクセスします。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="f3c2c3aac6f4f86e3eb7ec73c861f76c8f749fd3" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt; type element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、 &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt; タイプの要素にアクセスします。</target>
        </trans-unit>
        <trans-unit id="ff43bfabe4f542be8a5260d47b6e5801ae2b19db" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;ENUM&lt;/code&gt; type element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、 &lt;code&gt;ENUM&lt;/code&gt; タイプの要素にアクセスします。</target>
        </trans-unit>
        <trans-unit id="0330c0f9c16ffeca15bf59f9146448d281c4cdca" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;ENUM_CONSTANT&lt;/code&gt; variable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">訪問 &lt;code&gt;ENUM_CONSTANT&lt;/code&gt; の呼び出しによって、可変要素 &lt;code&gt;defaultAction&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbe6c08b62c02e6238df7bc134e668cbe1d7364f" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;EXCEPTION_PARAMETER&lt;/code&gt; variable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、 &lt;code&gt;EXCEPTION_PARAMETER&lt;/code&gt; 変数要素にアクセスします。</target>
        </trans-unit>
        <trans-unit id="8409b98cf2232c4823dcbb7ff655ca496767d132" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;INSTANCE_INIT&lt;/code&gt; executable element by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、 &lt;code&gt;INSTANCE_INIT&lt;/code&gt; 実行可能要素にアクセスします。</target>
        </trans-unit>
        <trans-unit id="41dd61274f7628cf3941edcfd633857963cf7541" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;INT&lt;/code&gt; primitive type by calling &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">訪問 &lt;code&gt;INT&lt;/code&gt; 呼び出すことによってプリミティブ型 &lt;code&gt;defaultAction&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25585947bbcb4aad7b15caced8aa8467758bac79" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;INTERFACE&lt;/code&gt; type element by calling &lt;code&gt;defaultAction&lt;/code&gt;. .</source>
          <target state="translated">&lt;code&gt;defaultAction&lt;/code&gt; を呼び出して、 &lt;code&gt;INTERFACE&lt;/code&gt; タイプの要素にアクセスします。。</target>
        </trans-unit>
        <trans-unit id="b4fa6edc223d2b06c81123aa5c6ea4b705a5dbba" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;IntersectionType&lt;/code&gt; element by calling &lt;code&gt;visitUnknown&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;visitUnknown&lt;/code&gt; を呼び出して &lt;code&gt;IntersectionType&lt;/code&gt; 要素にアクセスします。</target>
        </trans-unit>
        <trans-unit id="0d6c3f3c354c4934e5cf2dc19ac3f083087e1b70" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;IntersectionType&lt;/code&gt; in a manner defined by a subclass.</source>
          <target state="translated">訪問 &lt;code&gt;IntersectionType&lt;/code&gt; サブクラスで定義された方法インチ</target>
        </trans-unit>
        <trans-unit id="c8e60dc2fa59cfc6da215b4ef5f47b191a43556e" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;enum&lt;/code&gt; value in an annotation.</source>
          <target state="translated">訪問 &lt;code&gt;enum&lt;/code&gt; 注釈の値。</target>
        </trans-unit>
        <trans-unit id="ae4b07d571ad4b593fba1e035ab3bfcaf056fe4f" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;enum&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">訪問 &lt;code&gt;enum&lt;/code&gt; 注釈の値。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="eb8e9c712a056779d84d2337e82b6c66dba0c213" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;int&lt;/code&gt; value in an annotation.</source>
          <target state="translated">訪問 &lt;code&gt;int&lt;/code&gt; 型の注釈の値。</target>
        </trans-unit>
        <trans-unit id="91ad22f12bcef30717ee34ca31ebdb15bd9ce879" translate="yes" xml:space="preserve">
          <source>Visits an &lt;code&gt;int&lt;/code&gt; value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">訪問 &lt;code&gt;int&lt;/code&gt; 型の注釈の値。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="5d1fe596cd2b9780661657eb630c2a016542317f" translate="yes" xml:space="preserve">
          <source>Visits an annotation value as if by passing itself to that value's &lt;a href=&quot;../element/annotationvalue#accept-javax.lang.model.element.AnnotationValueVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method passing &lt;code&gt;null&lt;/code&gt; for the additional parameter. The invocation &lt;code&gt;v.visit(av)&lt;/code&gt; is equivalent to &lt;code&gt;av.accept(v,
 null)&lt;/code&gt;.</source>
          <target state="translated">追加のパラメーターに &lt;code&gt;null&lt;/code&gt; を渡して、その値の&lt;a href=&quot;../element/annotationvalue#accept-javax.lang.model.element.AnnotationValueVisitor-P-&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt;メソッドに自分自身を渡すかのように、注釈値にアクセスします。呼び出し &lt;code&gt;v.visit(av)&lt;/code&gt; は &lt;code&gt;av.accept(v, null)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="7baae58805b51262cd234fd644d5dbd150c00a8c" translate="yes" xml:space="preserve">
          <source>Visits an annotation value as if by passing itself to that value's &lt;a href=&quot;../element/annotationvalue#accept-javax.lang.model.element.AnnotationValueVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt;. The invocation &lt;code&gt;v.visit(av)&lt;/code&gt; is equivalent to &lt;code&gt;av.accept(v, p)&lt;/code&gt;.</source>
          <target state="translated">アノテーションの値を&lt;a href=&quot;../element/annotationvalue#accept-javax.lang.model.element.AnnotationValueVisitor-P-&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt;かのように、アノテーションの値にアクセスします。呼び出し &lt;code&gt;v.visit(av)&lt;/code&gt; は、 &lt;code&gt;av.accept(v, p)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="730741cf9d36ab269ad6555c4ce92392be9f6266" translate="yes" xml:space="preserve">
          <source>Visits an annotation value in an annotation.</source>
          <target state="translated">アノテーション内のアノテーション値を参照します。</target>
        </trans-unit>
        <trans-unit id="1d2088e504383b4a68980a5685bcfca163b7c10b" translate="yes" xml:space="preserve">
          <source>Visits an annotation value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">注釈の注釈値にアクセスします。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="fe6b4ace257f1aa5ad9b861601df87ea6dcffb2e" translate="yes" xml:space="preserve">
          <source>Visits an annotation value.</source>
          <target state="translated">アノテーションの値を参照します。</target>
        </trans-unit>
        <trans-unit id="193d88a5627232c3a1c21bc1d9159fe566c0a792" translate="yes" xml:space="preserve">
          <source>Visits an array type.</source>
          <target state="translated">配列の型を参照します。</target>
        </trans-unit>
        <trans-unit id="89b266fc14dbad0e9776a2c6d8d08972a22dd483" translate="yes" xml:space="preserve">
          <source>Visits an array type. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">配列型を訪問します。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="8f9f2aacc87c253da98e2831c5e9a6fb1ea7ec26" translate="yes" xml:space="preserve">
          <source>Visits an array value in an annotation.</source>
          <target state="translated">アノテーション内の配列値を参照します。</target>
        </trans-unit>
        <trans-unit id="7c6fca92f1047d6b0bf7729ca18fc816011bf2c3" translate="yes" xml:space="preserve">
          <source>Visits an array value in an annotation. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">注釈の配列値にアクセスします。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="2ac16f16d0d912c94714589d7d2061e1481c66da" translate="yes" xml:space="preserve">
          <source>Visits an element.</source>
          <target state="translated">要素を訪問します。</target>
        </trans-unit>
        <trans-unit id="0cb485f4d62ddc36ef8f35319850b87a46c696d7" translate="yes" xml:space="preserve">
          <source>Visits an error type.</source>
          <target state="translated">エラータイプを訪問します。</target>
        </trans-unit>
        <trans-unit id="e6b2a2ec5e472610768b9217434c605e8922b5ed" translate="yes" xml:space="preserve">
          <source>Visits an error type. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">エラータイプにアクセスします。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="fd85319b6f82f753faf18ff06ef9eea78d1a13d7" translate="yes" xml:space="preserve">
          <source>Visits an executable element, dispatching to the visit method for the specific &lt;a href=&quot;../element/elementkind&quot;&gt;kind&lt;/a&gt; of executable, &lt;code&gt;CONSTRUCTOR&lt;/code&gt;, &lt;code&gt;INSTANCE_INIT&lt;/code&gt;, &lt;code&gt;METHOD&lt;/code&gt;, or &lt;code&gt;STATIC_INIT&lt;/code&gt;.</source>
          <target state="translated">実行可能要素を訪問し、特定の&lt;a href=&quot;../element/elementkind&quot;&gt;種類&lt;/a&gt;の実行可能ファイルの &lt;code&gt;CONSTRUCTOR&lt;/code&gt; 、 &lt;code&gt;INSTANCE_INIT&lt;/code&gt; 、 &lt;code&gt;METHOD&lt;/code&gt; 、または &lt;code&gt;STATIC_INIT&lt;/code&gt; の訪問メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="97d5a37dd8576e45e88ae2bccabdf6af8b7ef2cb" translate="yes" xml:space="preserve">
          <source>Visits an executable element.</source>
          <target state="translated">実行可能な要素を訪問します。</target>
        </trans-unit>
        <trans-unit id="c116b51969f58665229ee956c75919c794606c5e" translate="yes" xml:space="preserve">
          <source>Visits an executable element. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">実行可能な要素を訪問します。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="41b939419c7035c34f8bbb5b1705f781501f0f69" translate="yes" xml:space="preserve">
          <source>Visits an executable element. This implementation scans the parameters.</source>
          <target state="translated">実行可能な要素を訪問します。この実装では、パラメータをスキャンします。</target>
        </trans-unit>
        <trans-unit id="1be16a19b0491c1beda306a52e77ede0c0c63f8a" translate="yes" xml:space="preserve">
          <source>Visits an executable type.</source>
          <target state="translated">実行可能な型を訪問します。</target>
        </trans-unit>
        <trans-unit id="cd61b0b01f18be14e88c6efd3b3fd60113ec6ee9" translate="yes" xml:space="preserve">
          <source>Visits an executable type. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">実行可能タイプを訪問します。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="097bbd21dc72d2de371961d60596ebe8ac9354b9" translate="yes" xml:space="preserve">
          <source>Visits an intersection type.</source>
          <target state="translated">交差点タイプを訪問します。</target>
        </trans-unit>
        <trans-unit id="5efb829c5c89f578dbe60b832dffcebc823ca45d" translate="yes" xml:space="preserve">
          <source>Visits an unknown kind of annotation value. This can occur if the language evolves and new kinds of value can be stored in an annotation.</source>
          <target state="translated">未知の種類のアノテーション値を訪問します。これは、言語が進化して新しい種類の値がアノテーションに格納できるようになった場合に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="16640cf2017020fe0367855e37d77723ec70be57" translate="yes" xml:space="preserve">
          <source>Visits an unknown kind of element. This can occur if the language evolves and new kinds of elements are added to the &lt;code&gt;Element&lt;/code&gt; hierarchy.</source>
          <target state="translated">不明な種類の要素を訪問します。これは、言語が進化し、新しい種類の要素が &lt;code&gt;Element&lt;/code&gt; 階層に追加された場合に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="10700e101ad6e3b16d78d2487737515f937cd43e" translate="yes" xml:space="preserve">
          <source>Visits an unknown kind of type. This can occur if the language evolves and new kinds of types are added to the &lt;code&gt;TypeMirror&lt;/code&gt; hierarchy.</source>
          <target state="translated">不明な種類のタイプを訪問します。これは、言語が進化し、新しい種類の型が &lt;code&gt;TypeMirror&lt;/code&gt; 階層に追加された場合に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="bb8bcf1cac449cd7c789fa84dbdd50d81dfa5ddf" translate="yes" xml:space="preserve">
          <source>Visits any program element as if by passing itself to that element's &lt;a href=&quot;../element/element#accept-javax.lang.model.element.ElementVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method and passing &lt;code&gt;null&lt;/code&gt; for the additional parameter. The invocation &lt;code&gt;v.visit(elem)&lt;/code&gt; is equivalent to &lt;code&gt;elem.accept(v,
 null)&lt;/code&gt;.</source>
          <target state="translated">プログラム要素を、その要素の&lt;a href=&quot;../element/element#accept-javax.lang.model.element.ElementVisitor-P-&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt;メソッドに渡して、追加のパラメーターに &lt;code&gt;null&lt;/code&gt; を渡すかのようにアクセスします。 &lt;code&gt;v.visit(elem)&lt;/code&gt; の呼び出しは &lt;code&gt;elem.accept(v, null)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="8ffc5daa7d679d696f8fda26db94fe7d74dc87bc" translate="yes" xml:space="preserve">
          <source>Visits any program element as if by passing itself to that element's &lt;a href=&quot;../element/element#accept-javax.lang.model.element.ElementVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method. The invocation &lt;code&gt;v.visit(elem)&lt;/code&gt; is equivalent to &lt;code&gt;elem.accept(v,
 p)&lt;/code&gt;.</source>
          <target state="translated">プログラム要素を、その要素の&lt;a href=&quot;../element/element#accept-javax.lang.model.element.ElementVisitor-P-&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt;メソッドに渡すことでアクセスします。呼び出し &lt;code&gt;v.visit(elem)&lt;/code&gt; は &lt;code&gt;elem.accept(v, p)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="6bb471ef3a15c11a25f6af7ee57d7897d8b02101" translate="yes" xml:space="preserve">
          <source>Visits any type mirror as if by passing itself to that type mirror's &lt;a href=&quot;../type/typemirror#accept-javax.lang.model.type.TypeVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method and passing &lt;code&gt;null&lt;/code&gt; for the additional parameter. The invocation &lt;code&gt;v.visit(t)&lt;/code&gt; is equivalent to &lt;code&gt;t.accept(v, null)&lt;/code&gt;.</source>
          <target state="translated">タイプミラーの&lt;a href=&quot;../type/typemirror#accept-javax.lang.model.type.TypeVisitor-P-&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt;メソッドに自分自身を渡し、追加のパラメータに &lt;code&gt;null&lt;/code&gt; を渡すかのように、任意のタイプミラーを訪問します。呼び出し &lt;code&gt;v.visit(t)&lt;/code&gt; は &lt;code&gt;t.accept(v, null)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="6beefb695913ca7e897e6b359577cff0a36c2a28" translate="yes" xml:space="preserve">
          <source>Visits any type mirror as if by passing itself to that type mirror's &lt;a href=&quot;../type/typemirror#accept-javax.lang.model.type.TypeVisitor-P-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method. The invocation &lt;code&gt;v.visit(t, p)&lt;/code&gt; is equivalent to &lt;code&gt;t.accept(v, p)&lt;/code&gt;.</source>
          <target state="translated">タイプミラーの&lt;a href=&quot;../type/typemirror#accept-javax.lang.model.type.TypeVisitor-P-&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt;メソッドに自分自身を渡すかのように、任意のタイプミラーを訪問します。呼び出し &lt;code&gt;v.visit(t, p)&lt;/code&gt; は &lt;code&gt;t.accept(v, p)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="f9d9eb2fef485285f86ba51fbd467c7afa9ad5b4" translate="yes" xml:space="preserve">
          <source>Visits the null type.</source>
          <target state="translated">ヌル型を訪問します。</target>
        </trans-unit>
        <trans-unit id="656ba7eb7a6ca7cb1916363235f1a036d1512315" translate="yes" xml:space="preserve">
          <source>Visits the null type. This implementation calls &lt;code&gt;defaultAction&lt;/code&gt;.</source>
          <target state="translated">null型を訪問します。この実装は &lt;code&gt;defaultAction&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="24946575a4c2adc12b5b83167467f2de93c489f1" translate="yes" xml:space="preserve">
          <source>VoiceStatus</source>
          <target state="translated">VoiceStatus</target>
        </trans-unit>
        <trans-unit id="207c7c00630b836d3afb46848bdb24a92023331d" translate="yes" xml:space="preserve">
          <source>Void</source>
          <target state="translated">Void</target>
        </trans-unit>
        <trans-unit id="4ff393ccc05e790a7af22e1d4c87f2e578d18377" translate="yes" xml:space="preserve">
          <source>VolatileCallSite</source>
          <target state="translated">VolatileCallSite</target>
        </trans-unit>
        <trans-unit id="2584e44f93fe5a84f506bc50838d08ece23805c2" translate="yes" xml:space="preserve">
          <source>VolatileCallSite.dynamicInvoker()</source>
          <target state="translated">VolatileCallSite.dynamicInvoker()</target>
        </trans-unit>
        <trans-unit id="29b16c95b25ac3c396ebf020c68f78da6c598f7b" translate="yes" xml:space="preserve">
          <source>VolatileCallSite.getTarget()</source>
          <target state="translated">VolatileCallSite.getTarget()</target>
        </trans-unit>
        <trans-unit id="aaf298bcacd6061d41d86fc6debf158528f683bd" translate="yes" xml:space="preserve">
          <source>VolatileCallSite.setTarget()</source>
          <target state="translated">VolatileCallSite.setTarget()</target>
        </trans-unit>
        <trans-unit id="dfbb1a470543f1a06436a973768a276f05c37ee9" translate="yes" xml:space="preserve">
          <source>Volume 3:</source>
          <target state="translated">3巻です。</target>
        </trans-unit>
        <trans-unit id="fa40942465857f664ea96930c1265cf73e3d0101" translate="yes" xml:space="preserve">
          <source>WAIS</source>
          <target state="translated">WAIS</target>
        </trans-unit>
        <trans-unit id="c271b656dedb85a67db52b58a06c052fe2ee23cc" translate="yes" xml:space="preserve">
          <source>WAITING</source>
          <target state="translated">WAITING</target>
        </trans-unit>
        <trans-unit id="101c43203a1a82572069e87c5288e77247fa4c44" translate="yes" xml:space="preserve">
          <source>WALL</source>
          <target state="translated">WALL</target>
        </trans-unit>
        <trans-unit id="225462bfb6556f3c24cf6d83becfd70d5f9d94e9" translate="yes" xml:space="preserve">
          <source>WALL_TIME</source>
          <target state="translated">WALL_TIME</target>
        </trans-unit>
        <trans-unit id="fd3edc641024a335a508fdacefb5f51ded5905cc" translate="yes" xml:space="preserve">
          <source>WARNING</source>
          <target state="translated">WARNING</target>
        </trans-unit>
        <trans-unit id="777d9894a8988f31ac1673a5e301f9ac39b37de4" translate="yes" xml:space="preserve">
          <source>WARNING is a message level indicating a potential problem.</source>
          <target state="translated">警告は、潜在的な問題を示すメッセージレベルです。</target>
        </trans-unit>
        <trans-unit id="e9e69012c4cb989d3300b2fe8889ed233de2829c" translate="yes" xml:space="preserve">
          <source>WARNING message type.</source>
          <target state="translated">警告メッセージタイプです。</target>
        </trans-unit>
        <trans-unit id="fb914d3ca1348f0c104408c5794fe186ea61f9b4" translate="yes" xml:space="preserve">
          <source>WAVE</source>
          <target state="translated">WAVE</target>
        </trans-unit>
        <trans-unit id="762dd6a7da550e7b6fdc00b417847fd608d3d449" translate="yes" xml:space="preserve">
          <source>WBMP</source>
          <target state="translated">WBMP</target>
        </trans-unit>
        <trans-unit id="441e113a8be2d0d25038d1f2e4db42495ebe43bb" translate="yes" xml:space="preserve">
          <source>WBMP metadata</source>
          <target state="translated">WBMPメタデータ</target>
        </trans-unit>
        <trans-unit id="08a5164936a6007b1abd2d96d96fb4f14a463abb" translate="yes" xml:space="preserve">
          <source>WBMP metadata format</source>
          <target state="translated">WBMPメタデータ形式</target>
        </trans-unit>
        <trans-unit id="a86e95a3de6c6d679d6527aad5d93c5216555e6f" translate="yes" xml:space="preserve">
          <source>WEDNESDAY</source>
          <target state="translated">WEDNESDAY</target>
        </trans-unit>
        <trans-unit id="269ec4fae923a139b94c8dd206cdddcb59b23aa6" translate="yes" xml:space="preserve">
          <source>WEEKS</source>
          <target state="translated">WEEKS</target>
        </trans-unit>
        <trans-unit id="6f1c3d0860aa987c5f6e26c58ffaad4fe52dec56" translate="yes" xml:space="preserve">
          <source>WEEK_BASED_YEAR</source>
          <target state="translated">WEEK_BASED_YEAR</target>
        </trans-unit>
        <trans-unit id="9ee8eb01243e91a5b269b562f28c884ccb95f401" translate="yes" xml:space="preserve">
          <source>WEEK_BASED_YEARS</source>
          <target state="translated">WEEK_BASED_YEARS</target>
        </trans-unit>
        <trans-unit id="c95b132075af91925d3c2134c3fe5f729c60f0b1" translate="yes" xml:space="preserve">
          <source>WEEK_OF_MONTH</source>
          <target state="translated">WEEK_OF_MONTH</target>
        </trans-unit>
        <trans-unit id="98b20d168600b565fc84f5f7957805b55c109649" translate="yes" xml:space="preserve">
          <source>WEEK_OF_MONTH_FIELD</source>
          <target state="translated">WEEK_OF_MONTH_FIELD</target>
        </trans-unit>
        <trans-unit id="846bf32311a73ea91eefa5bc3874bfd5749b75a1" translate="yes" xml:space="preserve">
          <source>WEEK_OF_WEEK_BASED_YEAR</source>
          <target state="translated">WEEK_OF_WEEK_BASED_YEAR</target>
        </trans-unit>
        <trans-unit id="9ce3e66f3ec1aa53225ad36212840b0d2fc47f5d" translate="yes" xml:space="preserve">
          <source>WEEK_OF_YEAR</source>
          <target state="translated">WEEK_OF_YEAR</target>
        </trans-unit>
        <trans-unit id="4a1fa630771f8e5cf64861a7b9e3c6637ca68c80" translate="yes" xml:space="preserve">
          <source>WEEK_OF_YEAR_FIELD</source>
          <target state="translated">WEEK_OF_YEAR_FIELD</target>
        </trans-unit>
        <trans-unit id="dea5d6976f7c54b48ff5d6c539121232f52092ef" translate="yes" xml:space="preserve">
          <source>WILDCARD</source>
          <target state="translated">WILDCARD</target>
        </trans-unit>
        <trans-unit id="f95d2ffbf9a1af1952ded5edbd37273e4bf5f711" translate="yes" xml:space="preserve">
          <source>WRAP_MODE</source>
          <target state="translated">WRAP_MODE</target>
        </trans-unit>
        <trans-unit id="27ad330619a7bfbee351115b167c5a6593f2530a" translate="yes" xml:space="preserve">
          <source>WRITE</source>
          <target state="translated">WRITE</target>
        </trans-unit>
        <trans-unit id="a6921d5e91e0590725089252fc7f27605e5b7022" translate="yes" xml:space="preserve">
          <source>WRITE_ACL</source>
          <target state="translated">WRITE_ACL</target>
        </trans-unit>
        <trans-unit id="f67e53af7185fbc8aea70c663d29dcf390c68218" translate="yes" xml:space="preserve">
          <source>WRITE_ATTRIBUTES</source>
          <target state="translated">WRITE_ATTRIBUTES</target>
        </trans-unit>
        <trans-unit id="047c274a3e7ebe073cff46c23124077218032cf0" translate="yes" xml:space="preserve">
          <source>WRITE_DATA</source>
          <target state="translated">WRITE_DATA</target>
        </trans-unit>
        <trans-unit id="58182c24cbe7fbdb0cdce51d37ac21f2e39d8164" translate="yes" xml:space="preserve">
          <source>WRITE_FAILURE</source>
          <target state="translated">WRITE_FAILURE</target>
        </trans-unit>
        <trans-unit id="5b7c3f4d5466238aba0f49b3928981ccc31b3ba3" translate="yes" xml:space="preserve">
          <source>WRITE_FAILURE is used when a write to an output stream fails.</source>
          <target state="translated">WRITE_FAILURE は、出力ストリームへの書き込みに失敗した場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="f2e00a21918992721472933614c38b3251857c93" translate="yes" xml:space="preserve">
          <source>WRITE_NAMED_ATTRS</source>
          <target state="translated">WRITE_NAMED_ATTRS</target>
        </trans-unit>
        <trans-unit id="22dbe35075cb33b41f60ad27f0c1e14653f5f4a3" translate="yes" xml:space="preserve">
          <source>WRITE_OWNER</source>
          <target state="translated">WRITE_OWNER</target>
        </trans-unit>
        <trans-unit id="598d8d2b12d9df9850b46eed40d26b4f7da3a541" translate="yes" xml:space="preserve">
          <source>Waiting threads are signalled in FIFO order.</source>
          <target state="translated">待機中のスレッドはFIFO順にシグナリングされます。</target>
        </trans-unit>
        <trans-unit id="8d5ab81f6e9b8670844cee69bbeaf4be8c160cc0" translate="yes" xml:space="preserve">
          <source>Waits at most &lt;code&gt;millis&lt;/code&gt; milliseconds for this thread to die. A timeout of &lt;code&gt;0&lt;/code&gt; means to wait forever.</source>
          <target state="translated">このスレッドが終了するまで最大で &lt;code&gt;millis&lt;/code&gt; ミリ秒待機します。タイムアウト &lt;code&gt;0&lt;/code&gt; は、永久に待機することを意味します。</target>
        </trans-unit>
        <trans-unit id="94a53993e8d3246a8674fea623793cc23fc795e9" translate="yes" xml:space="preserve">
          <source>Waits at most &lt;code&gt;millis&lt;/code&gt; milliseconds plus &lt;code&gt;nanos&lt;/code&gt; nanoseconds for this thread to die.</source>
          <target state="translated">このスレッドが終了するまで、最大で &lt;code&gt;millis&lt;/code&gt; ミリ秒プラス &lt;code&gt;nanos&lt;/code&gt; ナノ秒待機します。</target>
        </trans-unit>
        <trans-unit id="557c8f0f0804d3490aa53aee125e92a7445e1d48" translate="yes" xml:space="preserve">
          <source>Waits for another thread to arrive at this exchange point (unless the current thread is &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;interrupted&lt;/a&gt; or the specified waiting time elapses), and then transfers the given object to it, receiving its object in return.</source>
          <target state="translated">別のスレッドがこの交換ポイントに到着するのを待って（現在のスレッドが&lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;中断され&lt;/a&gt;たり、指定された待機時間が経過したりしない限り）、指定されたオブジェクトをそのスレッドに転送し、そのオブジェクトを受け取ります。</target>
        </trans-unit>
        <trans-unit id="a9714c3b990f72a16c64a297b3674cb6087cfeff" translate="yes" xml:space="preserve">
          <source>Waits for another thread to arrive at this exchange point (unless the current thread is &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;interrupted&lt;/a&gt;), and then transfers the given object to it, receiving its object in return.</source>
          <target state="translated">別のスレッドがこの交換ポイントに到着するのを待ち（現在のスレッドが&lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;中断され&lt;/a&gt;ない限り）、指定されたオブジェクトをスレッドに転送し、代わりにそのオブジェクトを受け取ります。</target>
        </trans-unit>
        <trans-unit id="77b3edd5fff3c71fb470f4dbfb6b9381ad255a30" translate="yes" xml:space="preserve">
          <source>Waits for this thread to die.</source>
          <target state="translated">このスレッドが死ぬのを待つ。</target>
        </trans-unit>
        <trans-unit id="77a93294440eb49b7b2449dd795ae4ada0e190db" translate="yes" xml:space="preserve">
          <source>Waits if necessary for at most the given time for the computation to complete, and then retrieves its result, if available.</source>
          <target state="translated">計算が完了するまでに必要であれば最大でも指定された時間だけ待機し、結果が利用可能であればその結果を取得します。</target>
        </trans-unit>
        <trans-unit id="aafcd08752bc11a21870ec04b685933837e7d4cc" translate="yes" xml:space="preserve">
          <source>Waits if necessary for at most the given time for this future to complete, and then returns its result, if available.</source>
          <target state="translated">必要であれば、この未来が完了するまでの時間を待ち、結果が得られればそれを返します。</target>
        </trans-unit>
        <trans-unit id="da89866ec43b4f683e34b593be2844266c48a6dd" translate="yes" xml:space="preserve">
          <source>Waits if necessary for the computation to complete, and then retrieves its result.</source>
          <target state="translated">必要に応じて計算が完了するのを待ち、その結果を取得します。</target>
        </trans-unit>
        <trans-unit id="803562ef43c8df90a6078b38fd0fbbbab986c81e" translate="yes" xml:space="preserve">
          <source>Waits if necessary for this future to complete, and then returns its result.</source>
          <target state="translated">この未来が完了するのを必要に応じて待ち、その結果を返します。</target>
        </trans-unit>
        <trans-unit id="acfb3663e0ca38989b8759e81be1ac615f97ff84" translate="yes" xml:space="preserve">
          <source>Waits until all &lt;a href=&quot;cyclicbarrier#getParties--&quot;&gt;parties&lt;/a&gt; have invoked &lt;code&gt;await&lt;/code&gt; on this barrier, or the specified waiting time elapses.</source>
          <target state="translated">すべてのを待つ&lt;a href=&quot;cyclicbarrier#getParties--&quot;&gt;の当事者が&lt;/a&gt;呼び出されている &lt;code&gt;await&lt;/code&gt; この障壁上、または時間の経過を待っている指定されました。</target>
        </trans-unit>
        <trans-unit id="3b3ff44bfcf430c4e4b9e5670feffa1d028ea206" translate="yes" xml:space="preserve">
          <source>Waits until all &lt;a href=&quot;cyclicbarrier#getParties--&quot;&gt;parties&lt;/a&gt; have invoked &lt;code&gt;await&lt;/code&gt; on this barrier.</source>
          <target state="translated">すべてのを待つ&lt;a href=&quot;cyclicbarrier#getParties--&quot;&gt;の当事者が&lt;/a&gt;呼び出されている &lt;code&gt;await&lt;/code&gt; この障壁に。</target>
        </trans-unit>
        <trans-unit id="11472e63110fd1bbda989b4cb58d4fad230cee5d" translate="yes" xml:space="preserve">
          <source>Wakes up a single thread that is waiting on this object's monitor. If any threads are waiting on this object, one of them is chosen to be awakened. The choice is arbitrary and occurs at the discretion of the implementation. A thread waits on an object's monitor by calling one of the &lt;code&gt;wait&lt;/code&gt; methods.</source>
          <target state="translated">このオブジェクトのモニターで待機している単一のスレッドを起こします。このオブジェクトで待機しているスレッドがある場合、それらの1つが起動するように選択されます。選択は任意であり、実装の裁量で行われます。スレッドは、 &lt;code&gt;wait&lt;/code&gt; メソッドの1つを呼び出すことにより、オブジェクトのモニターで待機します。</target>
        </trans-unit>
        <trans-unit id="60bf1897ca2d5ea7f9fed100a197b8da56cd2f6b" translate="yes" xml:space="preserve">
          <source>Wakes up all threads that are waiting on this object's monitor. A thread waits on an object's monitor by calling one of the &lt;code&gt;wait&lt;/code&gt; methods.</source>
          <target state="translated">このオブジェクトのモニターで待機しているすべてのスレッドを起こします。スレッドは、 &lt;code&gt;wait&lt;/code&gt; メソッドの1つを呼び出すことにより、オブジェクトのモニターで待機します。</target>
        </trans-unit>
        <trans-unit id="51a97180c73a6b656ee4a08e63d8a98f31c183ce" translate="yes" xml:space="preserve">
          <source>Wakes up all waiting threads.</source>
          <target state="translated">待機中のスレッドを全て覚醒させる。</target>
        </trans-unit>
        <trans-unit id="e2485f445b2ec82930218c1452c9df2adf2f4bf0" translate="yes" xml:space="preserve">
          <source>Wakes up one waiting thread.</source>
          <target state="translated">待機中のスレッドを1つ覚醒させる。</target>
        </trans-unit>
        <trans-unit id="21cc32a11b691c15416334d1e1e040558e915617" translate="yes" xml:space="preserve">
          <source>Walks a file tree.</source>
          <target state="translated">ファイルツリーを歩く。</target>
        </trans-unit>
        <trans-unit id="5c45ab05d45d1008d0b70706476bdc29a68fff57" translate="yes" xml:space="preserve">
          <source>Warning message.</source>
          <target state="translated">警告メッセージ。</target>
        </trans-unit>
        <trans-unit id="d79c41e148d22dbcf85b4f38814ab88b9e8d6c0c" translate="yes" xml:space="preserve">
          <source>Warning: additional attribute type keywords may not be recognized by other implementations; therefore do not use this method if you are unsure if these keywords will be recognized by other implementations.</source>
          <target state="translated">警告:追加の属性型キーワードは、他の実装では認識されない可能性があります。したがって、これらのキーワードが他の実装で認識されるかどうかわからない場合は、このメソッドを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="18af9205d481c81af0452c7b78307a2cc12e16a6" translate="yes" xml:space="preserve">
          <source>Watch events are immutable and safe for use by multiple concurrent threads.</source>
          <target state="translated">ウォッチイベントは不変であり、複数の並行スレッドで使用しても安全です。</target>
        </trans-unit>
        <trans-unit id="a4df0a14364157db35b0aeb27d103f08e65c5600" translate="yes" xml:space="preserve">
          <source>Watch keys are safe for use by multiple concurrent threads. Where there are several threads retrieving signalled keys from a watch service then care should be taken to ensure that the &lt;code&gt;reset&lt;/code&gt; method is only invoked after the events for the object have been processed. This ensures that one thread is processing the events for an object at any time.</source>
          <target state="translated">監視キーは、複数の同時スレッドで安全に使用できます。監視サービスからシグナルされたキーを取得するスレッドがいくつかある場合は、オブジェクトのイベントが処理された後にのみ &lt;code&gt;reset&lt;/code&gt; メソッドが呼び出されるように注意する必要があります。これにより、1つのスレッドがいつでもオブジェクトのイベントを処理できるようになります。</target>
        </trans-unit>
        <trans-unit id="ab89fdb591a29dd2157e80dd3fc09d166fa47e02" translate="yes" xml:space="preserve">
          <source>WatchEvent</source>
          <target state="translated">WatchEvent</target>
        </trans-unit>
        <trans-unit id="3104a16b096e2e87877444fb732ed4e244fd5fb4" translate="yes" xml:space="preserve">
          <source>WatchEvent.Kind</source>
          <target state="translated">WatchEvent.Kind</target>
        </trans-unit>
        <trans-unit id="2859a128288874ad24f4c98bf7cce397de08c723" translate="yes" xml:space="preserve">
          <source>WatchEvent.Kind.name()</source>
          <target state="translated">WatchEvent.Kind.name()</target>
        </trans-unit>
        <trans-unit id="d4ac1908a9c52fd3c2ca417375ae89c7dc6f90e4" translate="yes" xml:space="preserve">
          <source>WatchEvent.Kind.type()</source>
          <target state="translated">WatchEvent.Kind.type()</target>
        </trans-unit>
        <trans-unit id="dc0776148e4ccfbb27ab88bb6ce1339da4271d12" translate="yes" xml:space="preserve">
          <source>WatchEvent.Modifier</source>
          <target state="translated">WatchEvent.Modifier</target>
        </trans-unit>
        <trans-unit id="6151408b10f387c0c02499f23d0d49495a123adf" translate="yes" xml:space="preserve">
          <source>WatchEvent.Modifier.name()</source>
          <target state="translated">WatchEvent.Modifier.name()</target>
        </trans-unit>
        <trans-unit id="5f845280cded200c4b8a48929301464e398ac2fe" translate="yes" xml:space="preserve">
          <source>WatchEvent.context()</source>
          <target state="translated">WatchEvent.context()</target>
        </trans-unit>
        <trans-unit id="5548f15e22cdecc390d6071d79b41ad168545b10" translate="yes" xml:space="preserve">
          <source>WatchEvent.count()</source>
          <target state="translated">WatchEvent.count()</target>
        </trans-unit>
        <trans-unit id="3223fe7f2570a86db47dcd946b0550bb69148bdc" translate="yes" xml:space="preserve">
          <source>WatchEvent.kind()</source>
          <target state="translated">WatchEvent.kind()</target>
        </trans-unit>
        <trans-unit id="434feaccfe2a3f5790f514c688ddfee42a937ee8" translate="yes" xml:space="preserve">
          <source>WatchKey</source>
          <target state="translated">WatchKey</target>
        </trans-unit>
        <trans-unit id="613309ae99383a948104b176728f00b5db1221a3" translate="yes" xml:space="preserve">
          <source>WatchKey.cancel()</source>
          <target state="translated">WatchKey.cancel()</target>
        </trans-unit>
        <trans-unit id="fe242e0e137c753b42ee60cd35da60a895c553b9" translate="yes" xml:space="preserve">
          <source>WatchKey.isValid()</source>
          <target state="translated">WatchKey.isValid()</target>
        </trans-unit>
        <trans-unit id="9b1c89a2ee3b265e994b695b84f3a27bea880e84" translate="yes" xml:space="preserve">
          <source>WatchKey.pollEvents()</source>
          <target state="translated">WatchKey.pollEvents()</target>
        </trans-unit>
        <trans-unit id="ac44d1881e8bb9b33414336e6916521ad7abb29a" translate="yes" xml:space="preserve">
          <source>WatchKey.reset()</source>
          <target state="translated">WatchKey.reset()</target>
        </trans-unit>
        <trans-unit id="0ea52bb6949f4d37bbfce8963436ca586f1e8030" translate="yes" xml:space="preserve">
          <source>WatchKey.watchable()</source>
          <target state="translated">WatchKey.watchable()</target>
        </trans-unit>
        <trans-unit id="0ba6324b24ac8367d12f20a36f168e878432e873" translate="yes" xml:space="preserve">
          <source>WatchService</source>
          <target state="translated">WatchService</target>
        </trans-unit>
        <trans-unit id="366b61480307312fb6cf3ed210e7dbd19363dc32" translate="yes" xml:space="preserve">
          <source>WatchService.close()</source>
          <target state="translated">WatchService.close()</target>
        </trans-unit>
        <trans-unit id="6d641c1aa1ec04d7f4c2c802a6bd764a66c3c9c6" translate="yes" xml:space="preserve">
          <source>WatchService.poll()</source>
          <target state="translated">WatchService.poll()</target>
        </trans-unit>
        <trans-unit id="ba448bbc64fac97e5520011aa42f1172cd6b178d" translate="yes" xml:space="preserve">
          <source>WatchService.take()</source>
          <target state="translated">WatchService.take()</target>
        </trans-unit>
        <trans-unit id="7c475c44becae5d946d65a3f0efc654e48d04971" translate="yes" xml:space="preserve">
          <source>Watchable</source>
          <target state="translated">Watchable</target>
        </trans-unit>
        <trans-unit id="9d031ce99187a6db7969bfd9b309b28ef1bb8881" translate="yes" xml:space="preserve">
          <source>Watchable.register()</source>
          <target state="translated">Watchable.register()</target>
        </trans-unit>
        <trans-unit id="ed9f48be68d70641d3c8097361c43176f33d0fe1" translate="yes" xml:space="preserve">
          <source>Ways to Access MXBeans</source>
          <target state="translated">MXBeansにアクセスする方法</target>
        </trans-unit>
        <trans-unit id="b56109250239fd6335ae47d334eb34e1eb134e3e" translate="yes" xml:space="preserve">
          <source>We can assume in the above scenario that &lt;code&gt;CV.computeValue&lt;/code&gt; uses locks to properly observe the time-dependent states as it computes &lt;code&gt;V1&lt;/code&gt;, etc. This does not remove the threat of a stale value, since there is a window of time between the return of &lt;code&gt;computeValue&lt;/code&gt; in &lt;code&gt;T&lt;/code&gt; and the installation of the the new value. No user synchronization is possible during this time.</source>
          <target state="translated">上記のシナリオでは、 &lt;code&gt;CV.computeValue&lt;/code&gt; がロックを使用して、 &lt;code&gt;V1&lt;/code&gt; などを計算するときに時間依存の状態を適切に監視していると想定できます。これにより、古くなった値の脅威が取り除かれることはありません。 &lt;code&gt;computeValue&lt;/code&gt; で &lt;code&gt;T&lt;/code&gt; と新しい価値を設置。この間、ユーザーの同期はできません。</target>
        </trans-unit>
        <trans-unit id="9bd1711062d7dd1887987fad1cc09f74331b3cc9" translate="yes" xml:space="preserve">
          <source>We could transform the class file (with the ClassFileTransformer during the initial definition of the class) so that this becomes:</source>
          <target state="translated">クラス・ファイルを(クラスの初期定義時に ClassFileTransformer を使って)変換することで、このようになります。</target>
        </trans-unit>
        <trans-unit id="9081ad5208956aff9aea73dc70681b98af50b7b1" translate="yes" xml:space="preserve">
          <source>We would get the desired result, and it would even work in parallel. However, we might not be happy about the performance! Such an implementation would do a great deal of string copying, and the run time would be &lt;em&gt;O(n^2)&lt;/em&gt; in the number of characters. A more performant approach would be to accumulate the results into a &lt;a href=&quot;../../lang/stringbuilder&quot;&gt;&lt;code&gt;StringBuilder&lt;/code&gt;&lt;/a&gt;, which is a mutable container for accumulating strings. We can use the same technique to parallelize mutable reduction as we do with ordinary reduction.</source>
          <target state="translated">望ましい結果が得られ、それは並行して機能します。ただし、パフォーマンスに満足できない場合があります。このような実装では文字列のコピーが大量に行われ、実行時間は文字数で&lt;em&gt;O（n ^ 2）&lt;/em&gt;になります。よりパフォーマンスの高いアプローチは、結果を&lt;a href=&quot;../../lang/stringbuilder&quot;&gt; &lt;code&gt;StringBuilder&lt;/code&gt; &lt;/a&gt;に蓄積することです。これは、文字列を蓄積するための可変コンテナです。通常の削減と同じ手法を使用して、可変削減を並列化できます。</target>
        </trans-unit>
        <trans-unit id="a792d756a38347597c27360412bb8f8fa517b753" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;AN&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様の弱い双方向性文字型「AN」。</target>
        </trans-unit>
        <trans-unit id="24dbecca4697c39dcb12d83d3e21e053a4fbf4ac" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;BN&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様の弱い双方向性文字型「BN」。</target>
        </trans-unit>
        <trans-unit id="b592dbfa74287749b5b330052c7e3f462ec0a974" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;CS&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様の弱い双方向性文字型「CS」。</target>
        </trans-unit>
        <trans-unit id="d484194528c4965d5cfe46ac4072c437b4f7364f" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;EN&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様の弱い双方向性文字型「EN」。</target>
        </trans-unit>
        <trans-unit id="73f96fcc50384aeb2e177d07991c8003c66a6753" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;ES&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様の弱い双方向性文字型「ES」。</target>
        </trans-unit>
        <trans-unit id="818ef5444e8d72a94e14f04b5d6b122d1830655b" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;ET&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様の弱い双方向性文字型「ET」。</target>
        </trans-unit>
        <trans-unit id="34c6763955af9013896491090181dbcd5a8dd74c" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;NSM&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様の弱い双方向性文字型「NSM」。</target>
        </trans-unit>
        <trans-unit id="956c2a4c465d4b08d54fa1ddb34419c1810351ef" translate="yes" xml:space="preserve">
          <source>Weak bidirectional character type &quot;PDF&quot; in the Unicode specification.</source>
          <target state="translated">Unicode仕様の弱い双方向性文字型「PDF」。</target>
        </trans-unit>
        <trans-unit id="ea5a187b5f618fd1690650ad7c0db149755eff4a" translate="yes" xml:space="preserve">
          <source>Weak reference objects, which do not prevent their referents from being made finalizable, finalized, and then reclaimed.</source>
          <target state="translated">弱い参照オブジェクトは、その参照先が確定可能な状態にされ、確定された後に再利用されることを妨げない。</target>
        </trans-unit>
        <trans-unit id="48563266c944d99d9eaba5e60d33852a238c2d45" translate="yes" xml:space="preserve">
          <source>Weak reference objects, which do not prevent their referents from being made finalizable, finalized, and then reclaimed. Weak references are most often used to implement canonicalizing mappings.</source>
          <target state="translated">弱い参照オブジェクトは、その参照が確定可能な状態にされ、確定された後に再取得されることを妨げない。弱い参照は、正準化マッピングを実装するために最もよく使用されます。</target>
        </trans-unit>
        <trans-unit id="03229c3ce0e1d4a5dea21e64ed5a7a21dd50346b" translate="yes" xml:space="preserve">
          <source>WeakHashMap</source>
          <target state="translated">WeakHashMap</target>
        </trans-unit>
        <trans-unit id="9f578a1ece44744875548c14accd3ab118f52f96" translate="yes" xml:space="preserve">
          <source>WeakHashMap.clear()</source>
          <target state="translated">WeakHashMap.clear()</target>
        </trans-unit>
        <trans-unit id="cac8951d07963c9661fb7627c7267795d5e7a4f2" translate="yes" xml:space="preserve">
          <source>WeakHashMap.containsKey()</source>
          <target state="translated">WeakHashMap.containsKey()</target>
        </trans-unit>
        <trans-unit id="356e80282ac519184e65c488908383906447f348" translate="yes" xml:space="preserve">
          <source>WeakHashMap.containsValue()</source>
          <target state="translated">WeakHashMap.containsValue()</target>
        </trans-unit>
        <trans-unit id="60be0515876f006e6ca1cd3d7d552af9ccd01ffe" translate="yes" xml:space="preserve">
          <source>WeakHashMap.entrySet()</source>
          <target state="translated">WeakHashMap.entrySet()</target>
        </trans-unit>
        <trans-unit id="e49f5cd6e00c4432b7ebd63f64c70d97e2bfbb24" translate="yes" xml:space="preserve">
          <source>WeakHashMap.forEach()</source>
          <target state="translated">WeakHashMap.forEach()</target>
        </trans-unit>
        <trans-unit id="19b9a321a4f1bd958cc8610a953bd1ee99035128" translate="yes" xml:space="preserve">
          <source>WeakHashMap.get()</source>
          <target state="translated">WeakHashMap.get()</target>
        </trans-unit>
        <trans-unit id="a5a9ba4e04afb8fcdfc19b61079a8ebd40110696" translate="yes" xml:space="preserve">
          <source>WeakHashMap.isEmpty()</source>
          <target state="translated">WeakHashMap.isEmpty()</target>
        </trans-unit>
        <trans-unit id="7bd691f3c04552e56d59d519f1a4666a626cae68" translate="yes" xml:space="preserve">
          <source>WeakHashMap.keySet()</source>
          <target state="translated">WeakHashMap.keySet()</target>
        </trans-unit>
        <trans-unit id="3e34f391baf109443d3eca81db8e406c21247e08" translate="yes" xml:space="preserve">
          <source>WeakHashMap.put()</source>
          <target state="translated">WeakHashMap.put()</target>
        </trans-unit>
        <trans-unit id="b834ab3cef7770bc9b59513aef17274348ef63ed" translate="yes" xml:space="preserve">
          <source>WeakHashMap.putAll()</source>
          <target state="translated">WeakHashMap.putAll()</target>
        </trans-unit>
        <trans-unit id="51c4de9f87dd1095d9471573ff074fdefaf0db3e" translate="yes" xml:space="preserve">
          <source>WeakHashMap.remove()</source>
          <target state="translated">WeakHashMap.remove()</target>
        </trans-unit>
        <trans-unit id="77d99b79dc28fd6bd9db3b97d88184d2de438fd0" translate="yes" xml:space="preserve">
          <source>WeakHashMap.replaceAll()</source>
          <target state="translated">WeakHashMap.replaceAll()</target>
        </trans-unit>
        <trans-unit id="42ea52208a3ce498ea844af7690268dde31e784f" translate="yes" xml:space="preserve">
          <source>WeakHashMap.size()</source>
          <target state="translated">WeakHashMap.size()</target>
        </trans-unit>
        <trans-unit id="8bc55d91cb214228db71f61c09b537092b4bec12" translate="yes" xml:space="preserve">
          <source>WeakHashMap.values()</source>
          <target state="translated">WeakHashMap.values()</target>
        </trans-unit>
        <trans-unit id="5ea903ebda4f9f28f642d78e916dc09051395c95" translate="yes" xml:space="preserve">
          <source>WeakReference</source>
          <target state="translated">WeakReference</target>
        </trans-unit>
        <trans-unit id="5656b9b79b0316fc611a9c30d2ffac25228b8371" translate="yes" xml:space="preserve">
          <source>Wednesday</source>
          <target state="translated">Wednesday</target>
        </trans-unit>
        <trans-unit id="10b774684253b67ed6046c62d38b42b91e852330" translate="yes" xml:space="preserve">
          <source>Week 0 of January 2009</source>
          <target state="translated">2009年1月の第0週</target>
        </trans-unit>
        <trans-unit id="7b27856c3025a48dfd145f75086cda19de2ee70e" translate="yes" xml:space="preserve">
          <source>Week 1 of 2009</source>
          <target state="translated">2009年1週目</target>
        </trans-unit>
        <trans-unit id="e0b134e5cd0d67c325ab9181f61674f7eb847f4f" translate="yes" xml:space="preserve">
          <source>Week 1 of January 2009</source>
          <target state="translated">2009年1月1週目</target>
        </trans-unit>
        <trans-unit id="0273a235d369407f5bc0d09e86dc0804188d2c3d" translate="yes" xml:space="preserve">
          <source>Week 1 of week-based-year 2009</source>
          <target state="translated">週ベースの年2009年第1週</target>
        </trans-unit>
        <trans-unit id="61c045f9f24b3b90a55c9f64fb89b4cf33f3dbdd" translate="yes" xml:space="preserve">
          <source>Week 2 of 2009</source>
          <target state="translated">2009年2週目</target>
        </trans-unit>
        <trans-unit id="16159932e1ca3544ef8dd1d77e4cd53b696ac5c6" translate="yes" xml:space="preserve">
          <source>Week 2 of January 2009</source>
          <target state="translated">2009年1月の2週目</target>
        </trans-unit>
        <trans-unit id="651b78362b5aaa1728d942efc5ee0ee574ce4c00" translate="yes" xml:space="preserve">
          <source>Week 2 of week-based-year 2009</source>
          <target state="translated">週ベースの年2009年第2週</target>
        </trans-unit>
        <trans-unit id="fc5ccf6381813c151159e75357417f783c0aec41" translate="yes" xml:space="preserve">
          <source>Week 5 of December 2008</source>
          <target state="translated">2008年12月第5週</target>
        </trans-unit>
        <trans-unit id="a6c2f210f4569dac04f3823e9662a42bc6ce2da1" translate="yes" xml:space="preserve">
          <source>Week 52 of week-based-year 2008</source>
          <target state="translated">週ベースの年2008年第52週</target>
        </trans-unit>
        <trans-unit id="de9cd5103d931eb33add540394a1f571fcdcca10" translate="yes" xml:space="preserve">
          <source>Week 53 of 2008</source>
          <target state="translated">2008年53週目</target>
        </trans-unit>
        <trans-unit id="6c46029aa17fb600a21cad6bd08e77301e063307" translate="yes" xml:space="preserve">
          <source>Week Based Year</source>
          <target state="translated">週ベースの年</target>
        </trans-unit>
        <trans-unit id="0fcbe34401d64884bb36657832164bedeaa60659" translate="yes" xml:space="preserve">
          <source>Week Of Month</source>
          <target state="translated">月の週</target>
        </trans-unit>
        <trans-unit id="f295af822500a48f0431b7b363da9a13a414b828" translate="yes" xml:space="preserve">
          <source>Week Of Year and Week Year</source>
          <target state="translated">年の週と年の週</target>
        </trans-unit>
        <trans-unit id="cf20b17dedbd2fa061bb084e6e427c23883b04dc" translate="yes" xml:space="preserve">
          <source>Week based years</source>
          <target state="translated">週ベースの年</target>
        </trans-unit>
        <trans-unit id="89443bf2616153b1df032a1eb1df761e955b11a3" translate="yes" xml:space="preserve">
          <source>Week in month</source>
          <target state="translated">月の週</target>
        </trans-unit>
        <trans-unit id="cadc38e9abe6dd9dd6fcc84c98869fbd77cea946" translate="yes" xml:space="preserve">
          <source>Week in year</source>
          <target state="translated">年の週</target>
        </trans-unit>
        <trans-unit id="66de1cb2f3c93d7fd3d3a0a272c173e1b5c911b9" translate="yes" xml:space="preserve">
          <source>Week of Month</source>
          <target state="translated">月の週</target>
        </trans-unit>
        <trans-unit id="d6c62cdc6501a8ecf111466d9a326e871d8b8b6e" translate="yes" xml:space="preserve">
          <source>Week of Year</source>
          <target state="translated">年の週</target>
        </trans-unit>
        <trans-unit id="74d6db712bf03a49e67556ff1aec1f683642d8c2" translate="yes" xml:space="preserve">
          <source>Week one (1) is the week starting on the &lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt;&lt;code&gt;getFirstDayOfWeek()&lt;/code&gt;&lt;/a&gt; where there are at least &lt;a href=&quot;weekfields#getMinimalDaysInFirstWeek--&quot;&gt;&lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt;&lt;/a&gt; days in the month. Thus, week one may start up to &lt;code&gt;minDays&lt;/code&gt; days before the start of the month. If the first week starts after the start of the month then the period before is week zero (0).</source>
          <target state="translated">週1（1）は&lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt; &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; &lt;/a&gt;から始まる週で、その月には少なくとも&lt;a href=&quot;weekfields#getMinimalDaysInFirstWeek--&quot;&gt; &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; &lt;/a&gt;日があります。したがって、第1週は月の初めの &lt;code&gt;minDays&lt;/code&gt; 日まで開始できます。最初の週が月の始まりの後で始まる場合、その前の期間はゼロ週（0）です。</target>
        </trans-unit>
        <trans-unit id="44f1f99446cb5330dbad01f12f044f5a225971e2" translate="yes" xml:space="preserve">
          <source>Week one(1) is the week starting on the &lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt;&lt;code&gt;getFirstDayOfWeek()&lt;/code&gt;&lt;/a&gt; where there are at least &lt;a href=&quot;weekfields#getMinimalDaysInFirstWeek--&quot;&gt;&lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt;&lt;/a&gt; days in the year. If the first week starts after the start of the year then the period before is in the last week of the previous year.</source>
          <target state="translated">週1（1）は、&lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt; &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; &lt;/a&gt;から始まる週で、年に少なくとも&lt;a href=&quot;weekfields#getMinimalDaysInFirstWeek--&quot;&gt; &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; &lt;/a&gt;日があります。最初の週が年の初めから始まった場合、その前の期間は前年の最後の週になります。</target>
        </trans-unit>
        <trans-unit id="59d424ddfaa661a922cb86607e9a3548d6b3e08f" translate="yes" xml:space="preserve">
          <source>Week one(1) is the week starting on the &lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt;&lt;code&gt;getFirstDayOfWeek()&lt;/code&gt;&lt;/a&gt; where there are at least &lt;a href=&quot;weekfields#getMinimalDaysInFirstWeek--&quot;&gt;&lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt;&lt;/a&gt; days in the year. Thus, week one may start before the start of the year. If the first week starts after the start of the year then the period before is in the last week of the previous year.</source>
          <target state="translated">週1（1）は、&lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt; &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; &lt;/a&gt;から始まる週で、年に少なくとも&lt;a href=&quot;weekfields#getMinimalDaysInFirstWeek--&quot;&gt; &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; &lt;/a&gt;日があります。したがって、第1週は年の初めより前に始まることがあります。最初の週が年の初めから始まった場合、その前の期間は前年の最後の週になります。</target>
        </trans-unit>
        <trans-unit id="edf457af9ac86c639d6fa25a82d99903848d2cc3" translate="yes" xml:space="preserve">
          <source>Week one(1) is the week starting on the &lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt;&lt;code&gt;getFirstDayOfWeek()&lt;/code&gt;&lt;/a&gt; where there are at least &lt;a href=&quot;weekfields#getMinimalDaysInFirstWeek--&quot;&gt;&lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt;&lt;/a&gt; days in the year. Thus, week one may start up to &lt;code&gt;minDays&lt;/code&gt; days before the start of the year. If the first week starts after the start of the year then the period before is week zero (0).</source>
          <target state="translated">週1（1）は、&lt;a href=&quot;weekfields#getFirstDayOfWeek--&quot;&gt; &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; &lt;/a&gt;から始まる週で、年に少なくとも&lt;a href=&quot;weekfields#getMinimalDaysInFirstWeek--&quot;&gt; &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; &lt;/a&gt;日があります。したがって、第1週は、年の初めの &lt;code&gt;minDays&lt;/code&gt; 日まで開始できます。最初の週が年の初めから始まる場合、その前の期間はゼロ週（0）です。</target>
        </trans-unit>
        <trans-unit id="21523175d42396f1b83a7d224bcef6c78db04431" translate="yes" xml:space="preserve">
          <source>Week year</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3cd7a23e2be7e3002b8bffb3ed9ec37177e7b2" translate="yes" xml:space="preserve">
          <source>WeekFields</source>
          <target state="translated">WeekFields</target>
        </trans-unit>
        <trans-unit id="718dae35ec7f29671d329f016891913ac6dd0953" translate="yes" xml:space="preserve">
          <source>WeekFields instances are singletons; for each unique combination of &lt;code&gt;firstDayOfWeek&lt;/code&gt; and &lt;code&gt;minimalDaysInFirstWeek&lt;/code&gt; the the same instance will be returned.</source>
          <target state="translated">WeekFieldsインスタンスはシングルトンです。 &lt;code&gt;firstDayOfWeek&lt;/code&gt; と &lt;code&gt;minimalDaysInFirstWeek&lt;/code&gt; の一意の組み合わせごとに、同じインスタンスが返されます。</target>
        </trans-unit>
        <trans-unit id="89a2292f88acbc8f0e38aee8edbc776ed1156087" translate="yes" xml:space="preserve">
          <source>WeekFields provides five fields, &lt;a href=&quot;weekfields#dayOfWeek--&quot;&gt;&lt;code&gt;dayOfWeek()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;weekfields#weekOfMonth--&quot;&gt;&lt;code&gt;weekOfMonth()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;weekfields#weekOfYear--&quot;&gt;&lt;code&gt;weekOfYear()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;weekfields#weekOfWeekBasedYear--&quot;&gt;&lt;code&gt;weekOfWeekBasedYear()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;weekfields#weekBasedYear--&quot;&gt;&lt;code&gt;weekBasedYear()&lt;/code&gt;&lt;/a&gt; that provide access to the values from any &lt;a href=&quot;temporal&quot;&gt;temporal object&lt;/a&gt;.</source>
          <target state="translated">WeekFieldsには、&lt;a href=&quot;weekfields#dayOfWeek--&quot;&gt; &lt;code&gt;dayOfWeek()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;weekfields#weekOfMonth--&quot;&gt; &lt;code&gt;weekOfMonth()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;weekfields#weekOfYear--&quot;&gt; &lt;code&gt;weekOfYear()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;weekfields#weekOfWeekBasedYear--&quot;&gt; &lt;code&gt;weekOfWeekBasedYear()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;weekfields#weekBasedYear--&quot;&gt; &lt;code&gt;weekBasedYear()&lt;/code&gt; の&lt;/a&gt; 5つのフィールドがあり、任意の&lt;a href=&quot;temporal&quot;&gt;時間オブジェクト&lt;/a&gt;からの値にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="6cb3080d6ff8341db52a2cdfe428e6fe7cfdc77d" translate="yes" xml:space="preserve">
          <source>WeekFields.dayOfWeek()</source>
          <target state="translated">WeekFields.dayOfWeek()</target>
        </trans-unit>
        <trans-unit id="63de50e0e26b59f3d9fe368fff1375c932f6dc68" translate="yes" xml:space="preserve">
          <source>WeekFields.equals()</source>
          <target state="translated">WeekFields.equals()</target>
        </trans-unit>
        <trans-unit id="307be796ddd4af18d3ea219c21738d280f71a9f6" translate="yes" xml:space="preserve">
          <source>WeekFields.getFirstDayOfWeek()</source>
          <target state="translated">WeekFields.getFirstDayOfWeek()</target>
        </trans-unit>
        <trans-unit id="9eb1a32786064c34464f305adb94564c93fc3d6a" translate="yes" xml:space="preserve">
          <source>WeekFields.getMinimalDaysInFirstWeek()</source>
          <target state="translated">WeekFields.getMinimalDaysInFirstWeek()</target>
        </trans-unit>
        <trans-unit id="0f4344dbb38df7c1dd4475092ee3cc1b31b7a1dc" translate="yes" xml:space="preserve">
          <source>WeekFields.hashCode()</source>
          <target state="translated">WeekFields.hashCode()</target>
        </trans-unit>
        <trans-unit id="f5a7902f43adfba0ce22ee041b83a1d8e9b00d05" translate="yes" xml:space="preserve">
          <source>WeekFields.of()</source>
          <target state="translated">WeekFields.of()</target>
        </trans-unit>
        <trans-unit id="0d111eab407e09a34fda6c1f334ea981ad02f8d3" translate="yes" xml:space="preserve">
          <source>WeekFields.toString()</source>
          <target state="translated">WeekFields.toString()</target>
        </trans-unit>
        <trans-unit id="f7d24644a2eae9dfbf214b9d12aa277c6a89292c" translate="yes" xml:space="preserve">
          <source>WeekFields.weekBasedYear()</source>
          <target state="translated">WeekFields.weekBasedYear()</target>
        </trans-unit>
        <trans-unit id="6ed8a499946db10836e56570eaad12d34de1b1e4" translate="yes" xml:space="preserve">
          <source>WeekFields.weekOfMonth()</source>
          <target state="translated">WeekFields.weekOfMonth()</target>
        </trans-unit>
        <trans-unit id="f94cf8e74a33d036b43c60e0a361b7ab911bc24a" translate="yes" xml:space="preserve">
          <source>WeekFields.weekOfWeekBasedYear()</source>
          <target state="translated">WeekFields.weekOfWeekBasedYear()</target>
        </trans-unit>
        <trans-unit id="2788abb8d6fe59a50dbde8e26f797c0be24e8bc7" translate="yes" xml:space="preserve">
          <source>WeekFields.weekOfYear()</source>
          <target state="translated">WeekFields.weekOfYear()</target>
        </trans-unit>
        <trans-unit id="7d75266a53b99ce4d80d337862ea1edd8ba1b1a1" translate="yes" xml:space="preserve">
          <source>Weeks</source>
          <target state="translated">Weeks</target>
        </trans-unit>
        <trans-unit id="b5ceaaaab5693bd089df6a3f31655e313dce3989" translate="yes" xml:space="preserve">
          <source>Well-formed country/region values have the form &lt;code&gt;[a-zA-Z]{2} | [0-9]{3}&lt;/code&gt;</source>
          <target state="translated">整形式の国/地域の値の形式は &lt;code&gt;[a-zA-Z]{2} | [0-9]{3}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0fe9a9ddb38f6c4d512e9dbb79376b8ca30e2bf0" translate="yes" xml:space="preserve">
          <source>Well-formed keys are single characters from the set &lt;code&gt;[0-9a-zA-Z]&lt;/code&gt;. Well-formed values have the form &lt;code&gt;SUBTAG ('-' SUBTAG)*&lt;/code&gt; where for the key 'x' &lt;code&gt;SUBTAG = [0-9a-zA-Z]{1,8}&lt;/code&gt; and for other keys &lt;code&gt;SUBTAG = [0-9a-zA-Z]{2,8}&lt;/code&gt; (that is, 'x' allows single-character subtags).</source>
          <target state="translated">&lt;code&gt;[0-9a-zA-Z]&lt;/code&gt; キーは、セット[0-9a-zA-Z]の単一の文字です。 &lt;code&gt;SUBTAG ('-' SUBTAG)*&lt;/code&gt; 値の形式はSUBTAG（ '-' SUBTAG）*です。ここで、キー 'x'の場合 &lt;code&gt;SUBTAG = [0-9a-zA-Z]{1,8}&lt;/code&gt; で、その他のキーの場合は &lt;code&gt;SUBTAG = [0-9a-zA-Z]{2,8}&lt;/code&gt; （つまり、「x」は単一文字のサブタグを許可します）。</target>
        </trans-unit>
        <trans-unit id="a50506c60f4a43fce22721c5603adee4e842c36f" translate="yes" xml:space="preserve">
          <source>Well-formed language values have the form &lt;code&gt;[a-zA-Z]{2,8}&lt;/code&gt;. Note that this is not the the full BCP47 language production, since it excludes extlang. They are not needed since modern three-letter language codes replace them.</source>
          <target state="translated">整形式の言語値の形式は &lt;code&gt;[a-zA-Z]{2,8}&lt;/code&gt; です。extlangが除外されているため、これは完全なBCP47言語の生成ではないことに注意してください。最新の3文字の言語コードで置き換えられるため、これらは必要ありません。</target>
        </trans-unit>
        <trans-unit id="858fa2509ca423136e7cf31f512c6eefb90eeb81" translate="yes" xml:space="preserve">
          <source>Well-formed script values have the form &lt;code&gt;[a-zA-Z]{4}&lt;/code&gt;</source>
          <target state="translated">整形式のスクリプト値の形式は &lt;code&gt;[a-zA-Z]{4}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f4d5d35b51d9cbb55387c8e6d28bc1a22d820b0a" translate="yes" xml:space="preserve">
          <source>Well-formed variant values have the form &lt;code&gt;SUBTAG
   (('_'|'-') SUBTAG)*&lt;/code&gt; where &lt;code&gt;SUBTAG =
   [0-9][0-9a-zA-Z]{3} | [0-9a-zA-Z]{5,8}&lt;/code&gt;. (Note: BCP 47 only uses hyphen ('-') as a delimiter, this is more lenient).</source>
          <target state="translated">十分に形成されたバリアントの値は、フォーム有する &lt;code&gt;SUBTAG (('_'|'-') SUBTAG)*&lt;/code&gt; &lt;code&gt;SUBTAG = [0-9][0-9a-zA-Z]{3} | [0-9a-zA-Z]{5,8}&lt;/code&gt; 。（注：BCP 47は区切り文字としてハイフン（ '-'）のみを使用します。これはより寛大です）。</target>
        </trans-unit>
        <trans-unit id="c9e4b6efb7854b9fa304410f366631e4c9b775f3" translate="yes" xml:space="preserve">
          <source>What is an Attribute?</source>
          <target state="translated">属性とは何ですか?</target>
        </trans-unit>
        <trans-unit id="f523aaaa18b102076687e4244d4e07bb6f436a11" translate="yes" xml:space="preserve">
          <source>What the Permission Allows</source>
          <target state="translated">許可の内容</target>
        </trans-unit>
        <trans-unit id="373c94003a259747dc5ca0b92f838b2b5acf5d59" translate="yes" xml:space="preserve">
          <source>What this means is that the ClassLoader may be wrapped in another ClassLoader for security or other reasons.</source>
          <target state="translated">これが意味するのは、セキュリティやその他の理由でClassLoaderが別のClassLoaderでラップされている可能性があるということです。</target>
        </trans-unit>
        <trans-unit id="2c62f541df771dc9c17e6db7806198f01ce3df87" translate="yes" xml:space="preserve">
          <source>Whatever the</source>
          <target state="translated">どんなものでも</target>
        </trans-unit>
        <trans-unit id="89357495a0b5512bbc9f5bc66b16ee57716aba68" translate="yes" xml:space="preserve">
          <source>Whatever the &lt;a href=&quot;#groupname&quot;&gt;named-capturing group&lt;/a&gt; &quot;name&quot; matched</source>
          <target state="translated">どのような&lt;a href=&quot;#groupname&quot;&gt;名前付きキャプチャグループ&lt;/a&gt;「名前」一致</target>
        </trans-unit>
        <trans-unit id="183f14f8a35d4f7ed23e203448b1fd0af728304e" translate="yes" xml:space="preserve">
          <source>When 'value' is no longer valid then the getter method is invoked for the attribute. The 'lastUpdatedTimeStamp' field and `value' fields are updated.</source>
          <target state="translated">value' が有効でなくなった場合、ゲッターメソッドが呼び出されます。lastUpdatedTimeStamp' フィールドと `value' フィールドが更新されます。</target>
        </trans-unit>
        <trans-unit id="c20d6596c0516c20ee93280ced0b8c1583308051" translate="yes" xml:space="preserve">
          <source>When 'value' is no longer valid then the operation method is invoked. The 'lastUpdatedTimeStamp' field and `value' fields are updated.</source>
          <target state="translated">value' が有効でなくなった場合、その操作メソッドが呼び出される。lastUpdatedTimeStamp' フィールドと `value' フィールドが更新される。</target>
        </trans-unit>
        <trans-unit id="7ad7cf61a538ac9682cd9c38c51af1051f6daf5e" translate="yes" xml:space="preserve">
          <source>When 'value' is valid, 'value' is returned.</source>
          <target state="translated">'value' が有効な場合は 'value' を返します。</target>
        </trans-unit>
        <trans-unit id="720701165d46b861473379cd54f2570d2c747f20" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#value-field&quot;&gt;value&lt;/a&gt; was set.</source>
          <target state="translated">&lt;a href=&quot;#value-field&quot;&gt;値&lt;/a&gt;が設定されたとき。</target>
        </trans-unit>
        <trans-unit id="eb0c4944d21938573c8de12446d041f26931fa10" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;notificationbroadcastersupport#sendNotification-javax.management.Notification-&quot;&gt;&lt;code&gt;sendNotification&lt;/code&gt;&lt;/a&gt; is called, a listener is selected if it was added with a null &lt;a href=&quot;notificationfilter&quot;&gt;&lt;code&gt;NotificationFilter&lt;/code&gt;&lt;/a&gt;, or if &lt;a href=&quot;notificationfilter#isNotificationEnabled-javax.management.Notification-&quot;&gt;&lt;code&gt;isNotificationEnabled&lt;/code&gt;&lt;/a&gt; returns true for the notification being sent. The call to &lt;code&gt;NotificationFilter.isNotificationEnabled&lt;/code&gt; takes place in the thread that called &lt;code&gt;sendNotification&lt;/code&gt;. Then, for each selected listener, &lt;a href=&quot;../../java/util/concurrent/executor#execute-java.lang.Runnable-&quot;&gt;&lt;code&gt;executor.execute&lt;/code&gt;&lt;/a&gt; is called with a command that calls the &lt;code&gt;handleNotification&lt;/code&gt; method.</source>
          <target state="translated">場合&lt;a href=&quot;notificationbroadcastersupport#sendNotification-javax.management.Notification-&quot;&gt; &lt;code&gt;sendNotification&lt;/code&gt; をが&lt;/a&gt;呼び出され、リスナーは、それがヌルで添加した場合に選択される&lt;a href=&quot;notificationfilter&quot;&gt; &lt;code&gt;NotificationFilter&lt;/code&gt; を&lt;/a&gt;、又は場合&lt;a href=&quot;notificationfilter#isNotificationEnabled-javax.management.Notification-&quot;&gt; &lt;code&gt;isNotificationEnabled&lt;/code&gt; &lt;/a&gt;通知が送信されるための真戻ります。 &lt;code&gt;NotificationFilter.isNotificationEnabled&lt;/code&gt; の呼び出しは、 &lt;code&gt;sendNotification&lt;/code&gt; を呼び出したスレッドで行われます。次に、選択したリスナーごとに、 &lt;code&gt;handleNotification&lt;/code&gt; メソッドを呼び出すコマンドで&lt;a href=&quot;../../java/util/concurrent/executor#execute-java.lang.Runnable-&quot;&gt; &lt;code&gt;executor.execute&lt;/code&gt; &lt;/a&gt;が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="3907f83b19a6bc999820d92454ce9500f2d86571" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;SSLSocket&lt;/code&gt;s are first created, no handshaking is done so that applications may first set their communication preferences: what cipher suites to use, whether the socket should be in client or server mode, etc. However, security is always provided by the time that application data is sent over the connection.</source>
          <target state="translated">とき &lt;code&gt;SSLSocket&lt;/code&gt; ソケットがクライアントまたはサーバモードにする必要があるかどうかを使用することに何の暗号スイート、などしかし、セキュリティは常に時間であることが提供されます。■を最初に作成され、何のハンドシェイクは、アプリケーションが最初に自分の通信プリファレンスを設定することができそうということで行われていませんアプリケーションデータは接続を介して送信されます。</target>
        </trans-unit>
        <trans-unit id="aec348ffd93df939ed7064797ce4b1223e7792d9" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;T&lt;/code&gt; attempts to install the newly computed value, if the state is still at &lt;code&gt;2N&lt;/code&gt;, the class value will be initialized with the computed value, advancing it to state &lt;code&gt;2N+1&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;T&lt;/code&gt; の試みが新たに計算された値をインストールする状態のままである場合、 &lt;code&gt;2N&lt;/code&gt; 、クラス値は、状態にそれを前進、計算された値で初期化される &lt;code&gt;2N+1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="586cdea8cb0e9df3dba6780f86611e27368352ca" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;myButton&lt;/code&gt; is pressed, the statement &lt;code&gt;frame.toFront()&lt;/code&gt; will be executed. One could get the same effect, with some additional compile-time type safety, by defining a new implementation of the &lt;code&gt;ActionListener&lt;/code&gt; interface and adding an instance of it to the button:</source>
          <target state="translated">とき &lt;code&gt;myButton&lt;/code&gt; のが押されると、声明 &lt;code&gt;frame.toFront()&lt;/code&gt; が実行されます。 &lt;code&gt;ActionListener&lt;/code&gt; インターフェースの新しい実装を定義し、そのインスタンスをボタンに追加することにより、コンパイル時のタイプセーフを追加して、同じ効果を得ることができます。</target>
        </trans-unit>
        <trans-unit id="1fe0e12bc1e4fbc587d188553680ac3198949110" translate="yes" xml:space="preserve">
          <source>When FLAG_SERIALIZABLE is set in &lt;code&gt;flags&lt;/code&gt;, the function objects will implement &lt;code&gt;Serializable&lt;/code&gt;, and will have a &lt;code&gt;writeReplace&lt;/code&gt; method that returns an appropriate &lt;a href=&quot;serializedlambda&quot;&gt;&lt;code&gt;SerializedLambda&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;caller&lt;/code&gt; class must have an appropriate &lt;code&gt;$deserializeLambda$&lt;/code&gt; method, as described in &lt;a href=&quot;serializedlambda&quot;&gt;&lt;code&gt;SerializedLambda&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; に FLAG_SERIALIZABLEが設定されている場合、関数オブジェクトは &lt;code&gt;Serializable&lt;/code&gt; を実装し、適切な&lt;a href=&quot;serializedlambda&quot;&gt; &lt;code&gt;SerializedLambda&lt;/code&gt; &lt;/a&gt;を返す &lt;code&gt;writeReplace&lt;/code&gt; メソッドを持ちます。 &lt;code&gt;caller&lt;/code&gt; クラスには、適切な持っている必要があります &lt;code&gt;$deserializeLambda$&lt;/code&gt; で説明したように、方法を&lt;a href=&quot;serializedlambda&quot;&gt; &lt;code&gt;SerializedLambda&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78166e3e3d24c054685e7318d257481464f62c87" translate="yes" xml:space="preserve">
          <source>When JNDI constructs an initial context, the context's environment is initialized with properties defined in the environment parameter passed to the constructor, the system properties, the applet parameters, and the application resource files. See &lt;a href=&quot;initialcontext#ENVIRONMENT&quot;&gt;&lt;code&gt;InitialContext&lt;/code&gt;&lt;/a&gt; for details. This initial environment is then inherited by other context instances.</source>
          <target state="translated">JNDIが初期コンテキストを構築すると、コンテキストの環境は、コンストラクターに渡された環境パラメーター、システムプロパティ、アプレットパラメーター、およびアプリケーションリソースファイルで定義されたプロパティで初期化されます。詳細については、&lt;a href=&quot;initialcontext#ENVIRONMENT&quot;&gt; &lt;code&gt;InitialContext&lt;/code&gt; &lt;/a&gt;を参照してください。この初期環境は、他のコンテキストインスタンスによって継承されます。</target>
        </trans-unit>
        <trans-unit id="bcf229951ee0f52a0b20411c8b8db39b24c97b2e" translate="yes" xml:space="preserve">
          <source>When Java Sound is used to handle system exclusive data that is being received using MIDI wire protocol, it should place the data in one or more &lt;code&gt;SysexMessages&lt;/code&gt;. In this case, the length of the system exclusive data is not known in advance; the end of the system exclusive data is marked by an end-of-exclusive flag (0xF7) in the MIDI wire byte stream.</source>
          <target state="translated">Java Soundを使用して、MIDIワイヤプロトコルを使用して受信されているシステムエクスクルーシブデータを処理する場合は、そのデータを1つ以上の &lt;code&gt;SysexMessages&lt;/code&gt; に配置する必要があります。この場合、システムエクスクルーシブデータの長さは事前にわかりません。システムエクスクルーシブデータの終わりは、MIDIワイヤーバイトストリームのエンドオブエクスクルーシブフラグ（0xF7）でマークされます。</target>
        </trans-unit>
        <trans-unit id="3dab1f00d125a2ba1bd6dc4a77821fdb53b85de1" translate="yes" xml:space="preserve">
          <source>When LoginContext uses a caller-specified Configuration, the caller does not require any createLoginContext AuthPermission. The LoginContext saves the &lt;code&gt;AccessControlContext&lt;/code&gt; for the caller, and invokes the configured modules from within an &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; call constrained by that context. This means the caller context (stored when the LoginContext was created) must have sufficient permissions to perform any security-sensitive tasks that the modules may perform.</source>
          <target state="translated">LoginContextが呼び出し元指定の構成を使用する場合、呼び出し元はcreateLoginContext AuthPermissionを必要としません。 LoginContext は、呼び出し元の &lt;code&gt;AccessControlContext&lt;/code&gt; を保存し、そのコンテキストによって制約された &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; 呼び出し内から構成済みモジュールを呼び出します。つまり、LoginContextの作成時に保存された呼び出し側コンテキストには、モジュールが実行する可能性のあるセキュリティ上重要なタスクを実行するための十分な権限が必要です。</target>
        </trans-unit>
        <trans-unit id="cb8e6ccdc860924e083cd3b27c25e020271479ff" translate="yes" xml:space="preserve">
          <source>When LoginContext uses the installed Configuration, the caller requires the createLoginContext.&lt;em&gt;name&lt;/em&gt; and possibly createLoginContext.other AuthPermissions. Furthermore, the LoginContext will invoke configured modules from within an &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; call so that modules that perform security-sensitive tasks (such as connecting to remote hosts, and updating the Subject) will require the respective permissions, but the callers of the LoginContext will not require those permissions.</source>
          <target state="translated">LoginContextがインストール済みの構成を使用する場合、呼び出し元はcreateLoginContextを必要とします。&lt;em&gt;名前&lt;/em&gt;と、場合によってはcreateLoginContext.other AuthPermissions。さらに、LoginContextは、 &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; 呼び出し内から構成済みモジュールを呼び出すため、セキュリティが重要なタスク（リモートホストへの接続やサブジェクトの更新など）を実行するモジュールにはそれぞれの権限が必要ですが、LoginContextの呼び出し元はこれらの権限は必要ありません。</target>
        </trans-unit>
        <trans-unit id="e2dfe78f2ad4f3813f1c14b93d0ec0c6be233cf4" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;Calendar&lt;/code&gt; is in non-lenient mode, it throws an exception if there is any inconsistency in its calendar fields. For example, a &lt;code&gt;GregorianCalendar&lt;/code&gt; always produces &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; values between 1 and the length of the month. A non-lenient &lt;code&gt;GregorianCalendar&lt;/code&gt; throws an exception upon calculating its time or calendar field values if any out-of-range field value has been set.</source>
          <target state="translated">&lt;code&gt;Calendar&lt;/code&gt; が非寛容モードの場合、Calendarフィールドに不整合があると例外がスローされます。たとえば、 &lt;code&gt;GregorianCalendar&lt;/code&gt; は常に1から月の長さまでの &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; 値を生成します。範囲外のフィールド値が設定されている場合、寛大でない &lt;code&gt;GregorianCalendar&lt;/code&gt; は、時間またはカレンダーフィールドの値を計算すると例外をスローします。</target>
        </trans-unit>
        <trans-unit id="a356f25179772d20743b3c684279064beb377fbf" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;DatagramSocket&lt;/code&gt; is created the initial setting of &lt;code&gt;SO_REUSEADDR&lt;/code&gt; is disabled.</source>
          <target state="translated">とき &lt;code&gt;DatagramSocket&lt;/code&gt; 作成されるの初期設定 &lt;code&gt;SO_REUSEADDR&lt;/code&gt; が無効になっています。</target>
        </trans-unit>
        <trans-unit id="43ae46b786a991e294be5fd4ff96fd7edcdce9c4" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;Descriptor&lt;/code&gt; is used, the fields of interest are these:</source>
          <target state="translated">&lt;code&gt;Descriptor&lt;/code&gt; を使用する場合、対象となるフィールドは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="db057955ab30883a5287d3d1d0441c5297d96c2f" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;MathContext&lt;/code&gt; object is supplied with a precision setting of 0 (for example, &lt;a href=&quot;mathcontext#UNLIMITED&quot;&gt;&lt;code&gt;MathContext.UNLIMITED&lt;/code&gt;&lt;/a&gt;), arithmetic operations are exact, as are the arithmetic methods which take no &lt;code&gt;MathContext&lt;/code&gt; object. (This is the only behavior that was supported in releases prior to 5.) As a corollary of computing the exact result, the rounding mode setting of a &lt;code&gt;MathContext&lt;/code&gt; object with a precision setting of 0 is not used and thus irrelevant. In the case of divide, the exact quotient could have an infinitely long decimal expansion; for example, 1 divided by 3. If the quotient has a nonterminating decimal expansion and the operation is specified to return an exact result, an &lt;code&gt;ArithmeticException&lt;/code&gt; is thrown. Otherwise, the exact result of the division is returned, as done for other operations.</source>
          <target state="translated">&lt;code&gt;MathContext&lt;/code&gt; オブジェクトに精度設定0が指定されている場合（たとえば、&lt;a href=&quot;mathcontext#UNLIMITED&quot;&gt; &lt;code&gt;MathContext.UNLIMITED&lt;/code&gt; &lt;/a&gt;）、 &lt;code&gt;MathContext&lt;/code&gt; オブジェクトを使用しない算術メソッドと同様に、算術演算は正確です。 （これは、5より前のリリースでサポートされていた唯一の動作です。）正確な結果を計算する結果として、精度設定が0の &lt;code&gt;MathContext&lt;/code&gt; オブジェクトの丸めモード設定は使用されないため、無関係です。除算の場合、正確な商は無限に長い10進展開を持つ可能性があります。たとえば、1を3で割った値。商に非終了の10進展開があり、演算が正確な結果を返すように指定されている場合、 &lt;code&gt;ArithmeticException&lt;/code&gt; スローされます。それ以外の場合は、他の演算と同様に、除算の正確な結果が返されます。</target>
        </trans-unit>
        <trans-unit id="8c8fb24cbf878544c9fafb9bba4f04c53ebcb063" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;PKIXParameters&lt;/code&gt; object is created, this flag is set to true. This setting reflects the most common (and simplest) strategy for processing policy qualifiers. Applications that want to use a more sophisticated policy must set this flag to false.</source>
          <target state="translated">とき &lt;code&gt;PKIXParameters&lt;/code&gt; オブジェクトが作成され、このフラグがtrueに設定されています。この設定は、ポリシー修飾子を処理するための最も一般的な（そして最も単純な）戦略を反映しています。より高度なポリシーを使用するアプリケーションは、このフラグをfalseに設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="e2e645d09fe7ffd9051e432a2e16d92d9eb058b1" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;PKIXParameters&lt;/code&gt; object is created, this flag is set to true. This setting reflects the most common strategy for checking revocation, since each service provider must support revocation checking to be PKIX compliant. Sophisticated applications should set this flag to false when it is not practical to use a PKIX service provider's default revocation checking mechanism or when an alternative revocation checking mechanism is to be substituted (by also calling the &lt;a href=&quot;pkixparameters#addCertPathChecker-java.security.cert.PKIXCertPathChecker-&quot;&gt;&lt;code&gt;addCertPathChecker&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pkixparameters#setCertPathCheckers-java.util.List-&quot;&gt;&lt;code&gt;setCertPathCheckers&lt;/code&gt;&lt;/a&gt; methods).</source>
          <target state="translated">とき &lt;code&gt;PKIXParameters&lt;/code&gt; オブジェクトが作成され、このフラグがtrueに設定されています。各サービスプロバイダーは失効チェックをサポートしてPKIXに準拠する必要があるため、この設定は失効チェックの最も一般的な戦略を反映しています。 PKIXサービスプロバイダーのデフォルトの失効確認メカニズムを使用することが実用的でない場合、または代替の失効確認メカニズムが（&lt;a href=&quot;pkixparameters#addCertPathChecker-java.security.cert.PKIXCertPathChecker-&quot;&gt; &lt;code&gt;addCertPathChecker&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;pkixparameters#setCertPathCheckers-java.util.List-&quot;&gt; &lt;code&gt;setCertPathCheckers&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって）置き換えられる場合は、高度なアプリケーションでこのフラグをfalseに設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="c511cae88643a751f32e0d10e8a985db173ad353" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;ResourceBundle&lt;/code&gt; was inherited or specified through the &lt;a href=&quot;logger#setResourceBundle-java.util.ResourceBundle-&quot;&gt;&lt;code&gt;setResourceBundle&lt;/code&gt;&lt;/a&gt; method, then that &lt;code&gt;ResourceBundle&lt;/code&gt; will be used. Otherwise if the logger only has or inherited a resource bundle name, then that resource bundle name will be mapped to a &lt;code&gt;ResourceBundle&lt;/code&gt; object, using the default Locale at the time of logging.</source>
          <target state="translated">&lt;code&gt;ResourceBundle&lt;/code&gt; が継承されるか、&lt;a href=&quot;logger#setResourceBundle-java.util.ResourceBundle-&quot;&gt; &lt;code&gt;setResourceBundle&lt;/code&gt; &lt;/a&gt;メソッドを介して指定された場合、その &lt;code&gt;ResourceBundle&lt;/code&gt; が使用されます。それ以外の場合、ロガーがリソースバンドル名のみを持っているか、継承した場合、そのリソースバンドル名は、ロギング時にデフォルトのロケールを使用して、 &lt;code&gt;ResourceBundle&lt;/code&gt; オブジェクトにマップされます。</target>
        </trans-unit>
        <trans-unit id="b33e9674235e0636be1c47ce12e9e34568e5c11d" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;Scanner&lt;/code&gt; is closed, it will close its input source if the source implements the &lt;a href=&quot;../io/closeable&quot;&gt;&lt;code&gt;Closeable&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">&lt;code&gt;Scanner&lt;/code&gt; が閉じているとき、ソースが&lt;a href=&quot;../io/closeable&quot;&gt; &lt;code&gt;Closeable&lt;/code&gt; &lt;/a&gt;インターフェースを実装している場合、スキャナーは入力ソースを閉じます。</target>
        </trans-unit>
        <trans-unit id="d0ea93fe34d0cbcc920144a03e28605555397e46" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;ServerSocket&lt;/code&gt; is created the initial setting of &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; is not defined. Applications can use &lt;a href=&quot;serversocket#getReuseAddress--&quot;&gt;&lt;code&gt;getReuseAddress()&lt;/code&gt;&lt;/a&gt; to determine the initial setting of &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ServerSocket&lt;/code&gt; が作成されるとき、&lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; &lt;/a&gt;の初期設定は定義されていません。アプリケーションは、使用することができます&lt;a href=&quot;serversocket#getReuseAddress--&quot;&gt; &lt;code&gt;getReuseAddress()&lt;/code&gt; &lt;/a&gt;の初期設定を決定するために&lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f0455bab8e7854f1380ef3d296a0c738fc6d405a" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;Socket&lt;/code&gt; is created the initial setting of &lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; is disabled.</source>
          <target state="translated">ときに &lt;code&gt;Socket&lt;/code&gt; 作成されるの初期設定&lt;a href=&quot;socketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; が&lt;/a&gt;無効になっています。</target>
        </trans-unit>
        <trans-unit id="1a039e1d49f70a273c394bc527a427829f3c4985" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;double&lt;/code&gt; must be used as a source for a &lt;code&gt;BigDecimal&lt;/code&gt;, note that this constructor provides an exact conversion; it does not give the same result as converting the &lt;code&gt;double&lt;/code&gt; to a &lt;code&gt;String&lt;/code&gt; using the &lt;a href=&quot;../lang/double#toString-double-&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt; method and then using the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor. To get that result, use the &lt;code&gt;static&lt;/code&gt;&lt;a href=&quot;bigdecimal#valueOf-double-&quot;&gt;&lt;code&gt;valueOf(double)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; を &lt;code&gt;BigDecimal&lt;/code&gt; のソースとして使用する必要がある場合、このコンストラクターは正確な変換を提供することに注意してください。&lt;a href=&quot;../lang/double#toString-double-&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt;メソッドを使用して &lt;code&gt;double&lt;/code&gt; を &lt;code&gt;String&lt;/code&gt; に変換してから&lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt;コンストラクターを使用するのと同じ結果は得られません。その結果を取得するには、 &lt;code&gt;static&lt;/code&gt; &lt;a href=&quot;bigdecimal#valueOf-double-&quot;&gt; &lt;code&gt;valueOf(double)&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="6527806b79e3b486f23af62691038fe376e23d6f" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;java.lang.Error&lt;/code&gt; occurs in the agent it should be caught and re-thrown as a &lt;code&gt;RuntimeErrorException&lt;/code&gt;.</source>
          <target state="translated">とき &lt;code&gt;java.lang.Error&lt;/code&gt; エージェントで発生し、それがキャッチとして再スローする必要があります &lt;code&gt;RuntimeErrorException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac2232cc133cdbf38b6f9aa25e3da077f2459d69" translate="yes" xml:space="preserve">
          <source>When a JVM is launched in a way that indicates an agent class. In that case an &lt;code&gt;Instrumentation&lt;/code&gt; instance is passed to the &lt;code&gt;premain&lt;/code&gt; method of the agent class.</source>
          <target state="translated">JVMがエージェントクラスを示す方法で起動されたとき。その場合、 &lt;code&gt;Instrumentation&lt;/code&gt; インスタンスがエージェントクラスの &lt;code&gt;premain&lt;/code&gt; メソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="bc6710d50791c1a74ebb5f190790f0fa28c0deca" translate="yes" xml:space="preserve">
          <source>When a JVM provides a mechanism to start agents sometime after the JVM is launched. In that case an &lt;code&gt;Instrumentation&lt;/code&gt; instance is passed to the &lt;code&gt;agentmain&lt;/code&gt; method of the agent code.</source>
          <target state="translated">JVMの起動後、JVMがエージェントを起動するメカニズムを提供する場合。その場合、 &lt;code&gt;Instrumentation&lt;/code&gt; インスタンスがエージェントコードの &lt;code&gt;agentmain&lt;/code&gt; メソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="fe6f53c2c934674a6688b208d3ae4e419bb93e41" translate="yes" xml:space="preserve">
          <source>When a Java Virtual Machine starts up, there is usually a single non-daemon thread (which typically calls the method named &lt;code&gt;main&lt;/code&gt; of some designated class). The Java Virtual Machine continues to execute threads until either of the following occurs:</source>
          <target state="translated">Java Virtual Machineが起動すると、通常、1つの非デーモンスレッドが存在します（これは通常、指定されたクラスの &lt;code&gt;main&lt;/code&gt; という名前のメソッドを呼び出します）。Java仮想マシンは、次のいずれかが発生するまでスレッドを実行し続けます。</target>
        </trans-unit>
        <trans-unit id="591e6c34b6ba8d6f3eeb6796c729752f095528e6" translate="yes" xml:space="preserve">
          <source>When a LogRecord is passed into the logging framework it logically belongs to the framework and should no longer be used or updated by the client application.</source>
          <target state="translated">LogRecord がロギングフレームワークに渡されるとき、それは論理的にフレームワークに属し、クライアントアプリケーションによって使用されたり更新されたりすることはありません。</target>
        </trans-unit>
        <trans-unit id="ca65f59c344aab5c1b12d68027c6ad5c16f0ae24" translate="yes" xml:space="preserve">
          <source>When a Standard MBean is made from the &lt;code&gt;CacheControlMBean&lt;/code&gt;, the usual rules mean that it will have an attribute called &lt;code&gt;CacheSize&lt;/code&gt; of type &lt;code&gt;long&lt;/code&gt;. The &lt;code&gt;@Units&lt;/code&gt; annotation, given the above definition, will ensure that the &lt;a href=&quot;mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt; for this attribute will have a &lt;code&gt;Descriptor&lt;/code&gt; that has a field called &lt;code&gt;units&lt;/code&gt; with corresponding value &lt;code&gt;bytes&lt;/code&gt;.</source>
          <target state="translated">標準MBeanが &lt;code&gt;CacheControlMBean&lt;/code&gt; から作成される場合、通常の規則は、それが &lt;code&gt;long&lt;/code&gt; 型の &lt;code&gt;CacheSize&lt;/code&gt; と呼ばれる属性を持つことを意味します。 &lt;code&gt;@Units&lt;/code&gt; 上記の定義指定された注釈は、ことを保証する&lt;a href=&quot;mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt;この属性が持つ &lt;code&gt;Descriptor&lt;/code&gt; と呼ばれるフィールド有する &lt;code&gt;units&lt;/code&gt; 値の対応する &lt;code&gt;bytes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbdb2811ada49ec4e07a613aa3a52601e1be6d55" translate="yes" xml:space="preserve">
          <source>When a TCP connection is closed the connection may remain in a timeout state for a period of time after the connection is closed (typically known as the &lt;code&gt;TIME_WAIT&lt;/code&gt; state or &lt;code&gt;2MSL&lt;/code&gt; wait state). For applications using a well known socket address or port it may not be possible to bind a socket to the required &lt;code&gt;SocketAddress&lt;/code&gt; if there is a connection in the timeout state involving the socket address or port.</source>
          <target state="translated">TCP接続が閉じられると、接続が閉じられた後、接続はしばらくタイムアウト状態のままになることがあります（通常、 &lt;code&gt;TIME_WAIT&lt;/code&gt; 状態または &lt;code&gt;2MSL&lt;/code&gt; 待機状態として知られています）。よく知られているソケットアドレスまたはポートを使用するアプリケーションの場合、ソケットアドレスまたはポートに関連するタイムアウト状態の接続があると、ソケットを必要な &lt;code&gt;SocketAddress&lt;/code&gt; にバインドできない場合があります。</target>
        </trans-unit>
        <trans-unit id="2f10e21dabecf61050cfb5e9bd4dbd4d574ca5d4" translate="yes" xml:space="preserve">
          <source>When a URL string (a &lt;code&gt;String&lt;/code&gt; of the form &lt;em&gt;scheme_id:rest_of_name&lt;/em&gt;) is passed as a name parameter to any method, a URL context factory for handling that scheme is located and used to resolve the URL. If no such factory is found, the initial context specified by &lt;code&gt;&quot;java.naming.factory.initial&quot;&lt;/code&gt; is used. Similarly, when a &lt;code&gt;CompositeName&lt;/code&gt; object whose first component is a URL string is passed as a name parameter to any method, a URL context factory is located and used to resolve the first name component. See &lt;a href=&quot;spi/namingmanager#getURLContext-java.lang.String-java.util.Hashtable-&quot;&gt;&lt;code&gt;&lt;code&gt;NamingManager.getURLContext()&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; for a description of how URL context factories are located.</source>
          <target state="translated">場合は、URL文字列（ &lt;code&gt;String&lt;/code&gt; の形式のが&lt;em&gt;scheme_id：rest_of_nameを&lt;/em&gt;）任意のメソッドに名前のパラメータとして渡され、そのスキームを処理するためのURLコンテキストファクトリは位置しており、URLを解決するために使用されます。そのようなファクトリが見つからない場合、 &lt;code&gt;&quot;java.naming.factory.initial&quot;&lt;/code&gt; 指定された初期コンテキストが使用されます。同様に、最初のコンポーネントがURL文字列である &lt;code&gt;CompositeName&lt;/code&gt; オブジェクトが名前パラメーターとして任意のメソッドに渡されると、URLコンテキストファクトリが検索され、最初の名前のコンポーネントを解決するために使用されます。URLコンテキストファクトリの配置方法については、&lt;a href=&quot;spi/namingmanager#getURLContext-java.lang.String-java.util.Hashtable-&quot;&gt; &lt;code&gt;&lt;code&gt;NamingManager.getURLContext()&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="902b9d017a9bed0402d7a996f72e41d3f25ab7ec" translate="yes" xml:space="preserve">
          <source>When a client application is designed to remotely access MXBeans for a running virtual machine whose version is different than the version on which the application is running, it should prepare to catch &lt;a href=&quot;../../io/invalidobjectexception&quot;&gt;&lt;code&gt;InvalidObjectException&lt;/code&gt;&lt;/a&gt; which is thrown when an MXBean proxy receives a name of an enum constant which is missing in the enum class loaded in the client application.</source>
          <target state="translated">クライアントアプリケーションが、アプリケーションが実行されているバージョンとは異なるバージョンの実行中の仮想マシンのMXBeanにリモートでアクセスするように設計されている場合、MXBeanプロキシが列挙定数の名前を受け取ったときにスローされる&lt;a href=&quot;../../io/invalidobjectexception&quot;&gt; &lt;code&gt;InvalidObjectException&lt;/code&gt; &lt;/a&gt;をキャッチする準備をする必要があります。クライアントアプリケーションにロードされた列挙型クラスに欠落しています。</target>
        </trans-unit>
        <trans-unit id="7205693021c9fb69b57353ca24035c13ecb1c484" translate="yes" xml:space="preserve">
          <source>When a client connects to a server using the JMX Remote API, it is possible that they do not have the same version of the JMX specification. The version of the JMX specification described here is version 1.4. Previous versions were 1.0, 1.1, and 1.2. (There was no 1.3.) The standard JMX Remote API is defined to work with version 1.2 onwards, so in standards-based deployment the only interoperability questions that arise concern version 1.2 onwards.</source>
          <target state="translated">クライアントがJMX Remote APIを使用してサーバに接続した場合、JMX仕様のバージョンが異なっている可能性があります。ここで説明するJMX仕様のバージョンは、バージョン1.4です。それ以前のバージョンは1.0、1.1、1.2でした。標準の JMX Remote API はバージョン 1.2 以降で動作するように定義されているため、標準ベースのデプロイメントではバージョン 1.2 以降の相互運用性の問題だけが発生します。</target>
        </trans-unit>
        <trans-unit id="c8a48941832ba5a4328e80c08b8ffedc13963178" translate="yes" xml:space="preserve">
          <source>When a client needs to print a job using the client's desired resolution exactly (no more, no less), the client specifies an instance of class PrinterResolution as an attribute of the Print Job. This will fail if the Print Job doesn't support that exact resolution, and Fidelity is set to true.</source>
          <target state="translated">クライアントが,クライアントの希望する解像度を正確に(それ以上でもそれ以下でもない)使用してジョブを印刷する必要がある場合,クライアントは,印刷ジョブの属性としてクラスPrinterResolutionのインスタンスを指定します。印刷ジョブがその正確な解像度をサポートしておらず,Fidelityがtrueに設定されている場合,これは失敗します。</target>
        </trans-unit>
        <trans-unit id="7de20097d88ff779f4bae860f8ac5bfcc78b886f" translate="yes" xml:space="preserve">
          <source>When a client searches looking for a printer that supports the client's desired resolution exactly (no more, no less), the client specifies an instance of class PrinterResolution indicating the exact resolution the client wants. Only printers supporting that exact resolution will match the search.</source>
          <target state="translated">クライアントが,クライアントの希望する解像度を正確に(それ以上でもそれ以下でもない)サポートするプリンタを検索するとき,クライアントは,クライアントが望む正確な解像度を示すクラスPrinterResolutionのインスタンスを指定します。その正確な解像度をサポートするプリンタのみが,検索にマッチします.</target>
        </trans-unit>
        <trans-unit id="af75d22b50227d1fb5318634310fcd020e5b369c" translate="yes" xml:space="preserve">
          <source>When a coded character set is used exclusively with a single character-encoding scheme then the corresponding charset is usually named for the coded character set; otherwise a charset is usually named for the encoding scheme and, possibly, the locale of the coded character sets that it supports. Hence &lt;code&gt;US-ASCII&lt;/code&gt; is both the name of a coded character set and of the charset that encodes it, while &lt;code&gt;EUC-JP&lt;/code&gt; is the name of the charset that encodes the JIS X 0201, JIS X 0208, and JIS X 0212 coded character sets for the Japanese language.</source>
          <target state="translated">コード化文字セットが単一の文字エンコード方式で排他的に使用される場合、対応する文字セットは通常、コード化文字セットの名前になります。それ以外の場合、文字セットは通常、コード化スキーム、および場合によってはそれがサポートするコード化文字セットのロケールに基づいて命名されます。したがって、 &lt;code&gt;US-ASCII&lt;/code&gt; はコード化文字セットとそれをエンコードする文字セットの名前であり、 &lt;code&gt;EUC-JP&lt;/code&gt; はJIS X 0201、JIS X 0208、およびJIS X 0212のコード化文字セットをエンコードする文字セットの名前です。日本語。</target>
        </trans-unit>
        <trans-unit id="5046ecec5b32705f3cc717979a666d129f7eb365" translate="yes" xml:space="preserve">
          <source>When a context method that may return response controls is invoked, response controls from the previous method invocation are cleared. &lt;code&gt;getResponseControls()&lt;/code&gt; returns all of the response controls generated by LDAP operations used by the context method in the order received from the LDAP server. Invoking &lt;code&gt;getResponseControls()&lt;/code&gt; does not clear the response controls. You can call it many times (and get back the same controls) until the next context method that may return controls is invoked.</source>
          <target state="translated">応答コントロールを返す可能性のあるコンテキストメソッドが呼び出されると、前のメソッド呼び出しからの応答コントロールがクリアされます。 &lt;code&gt;getResponseControls()&lt;/code&gt; は、LDAPサーバーから受信した順序で、コンテキストメソッドによって使用されるLDAP操作によって生成されたすべての応答コントロールを返します。 &lt;code&gt;getResponseControls()&lt;/code&gt; を呼び出しても、応答コントロールはクリアされません。コントロールを返す可能性のある次のコンテキストメソッドが呼び出されるまで、何度も呼び出すことができます（同じコントロールを取得できます）。</target>
        </trans-unit>
        <trans-unit id="451ee1cb627eed78bb98b62c3c2b734285d519cd" translate="yes" xml:space="preserve">
          <source>When a directory is registered for this event then the &lt;a href=&quot;watchkey&quot;&gt;&lt;code&gt;WatchKey&lt;/code&gt;&lt;/a&gt; is queued when it is observed that an entry in the directory has been modified. The event &lt;a href=&quot;watchevent#count--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; for this event is &lt;code&gt;1&lt;/code&gt; or greater.</source>
          <target state="translated">このイベントにディレクトリが登録されると、ディレクトリのエントリが変更されたことが確認されると、&lt;a href=&quot;watchkey&quot;&gt; &lt;code&gt;WatchKey&lt;/code&gt; &lt;/a&gt;がキューに入れられます。このイベントのイベント&lt;a href=&quot;watchevent#count--&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;1&lt;/code&gt; 以上です。</target>
        </trans-unit>
        <trans-unit id="acde6e0c9e549621383ae5222820b57635b1abdb" translate="yes" xml:space="preserve">
          <source>When a directory is registered for this event then the &lt;a href=&quot;watchkey&quot;&gt;&lt;code&gt;WatchKey&lt;/code&gt;&lt;/a&gt; is queued when it is observed that an entry is created in the directory or renamed into the directory. The event &lt;a href=&quot;watchevent#count--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; for this event is always &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">このイベントに対してディレクトリが登録されると、ディレクトリ内にエントリが作成されるか、ディレクトリに名前が変更されることが確認されると、&lt;a href=&quot;watchkey&quot;&gt; &lt;code&gt;WatchKey&lt;/code&gt; &lt;/a&gt;がキューに入れられます。このイベントのイベント&lt;a href=&quot;watchevent#count--&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt;は常に &lt;code&gt;1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4aa389d8c3635d68f9942230af80f43edbcdf866" translate="yes" xml:space="preserve">
          <source>When a directory is registered for this event then the &lt;a href=&quot;watchkey&quot;&gt;&lt;code&gt;WatchKey&lt;/code&gt;&lt;/a&gt; is queued when it is observed that an entry is deleted or renamed out of the directory. The event &lt;a href=&quot;watchevent#count--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; for this event is always &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">このイベントにディレクトリが登録されると、ディレクトリからエントリが削除されたり名前が変更されたりしたことが確認されると、&lt;a href=&quot;watchkey&quot;&gt; &lt;code&gt;WatchKey&lt;/code&gt; &lt;/a&gt;がキューに入れられます。このイベントのイベント&lt;a href=&quot;watchevent#count--&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt;は常に &lt;code&gt;1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c6e54cb2e2ced5f516b5c3c711efdeb13fed62ee" translate="yes" xml:space="preserve">
          <source>When a file system is constructed to access the contents of a file as a file system then it is highly implementation specific if the returned URI represents the given path in the file system or it represents a &lt;em&gt;compound&lt;/em&gt; URI that encodes the URI of the enclosing file system. A format for compound URIs is not defined in this release; such a scheme may be added in a future release.</source>
          <target state="translated">ファイルシステムがファイルシステムとしてファイルのコンテンツにアクセスするように構築されている場合、返されたURIがファイルシステム内の指定されたパスを表すか、それを含むファイルシステムのURIをエンコードする&lt;em&gt;複合&lt;/em&gt; URIを表すかは、実装固有です。。このリリースでは、複合URIの形式は定義されていません。このようなスキームは、将来のリリースで追加される可能性があります。</target>
        </trans-unit>
        <trans-unit id="5f8424e3622daa52db1d5d000f4c2d226449bfeb" translate="yes" xml:space="preserve">
          <source>When a file system provides access to a set of &lt;a href=&quot;../filestore&quot;&gt;&lt;code&gt;file-systems&lt;/code&gt;&lt;/a&gt; that are not homogeneous then only some of the file systems may support ACLs. The &lt;a href=&quot;../filestore#supportsFileAttributeView-java.lang.Class-&quot;&gt;&lt;code&gt;supportsFileAttributeView&lt;/code&gt;&lt;/a&gt; method can be used to test if a file system supports ACLs.</source>
          <target state="translated">ファイルシステムが同種ではない一連の&lt;a href=&quot;../filestore&quot;&gt; &lt;code&gt;file-systems&lt;/code&gt; &lt;/a&gt;へのアクセスを提供する場合、一部のファイルシステムのみがACLをサポートできます。&lt;a href=&quot;../filestore#supportsFileAttributeView-java.lang.Class-&quot;&gt; &lt;code&gt;supportsFileAttributeView&lt;/code&gt; の&lt;/a&gt;ファイルシステムがACLをサポートしている場合方法は、試験に使用することができます。</target>
        </trans-unit>
        <trans-unit id="563c181caf51bc9ca81a53828adbe47768c2b0e3" translate="yes" xml:space="preserve">
          <source>When a flush occurs on a newly created node, it is made persistent, as are any ancestors (and descendants) that have yet to be made persistent. Note however that any preference value changes in ancestors are</source>
          <target state="translated">新しく作成されたノードでフラッシュが発生すると、そのノードは永続化され、まだ永続化されていない祖先(および子孫)も永続化されます。ただし、先祖のプリファレンス値の変更はすべて</target>
        </trans-unit>
        <trans-unit id="14b01570d43320be8d365211a70fea5fddceea53" translate="yes" xml:space="preserve">
          <source>When a guarded delegator is created from a guarded pair, the pair is wrapped in a new method handle &lt;code&gt;M&lt;/code&gt;, which is permanently associated with the switch point that created it. Each pair consists of a target &lt;code&gt;T&lt;/code&gt; and a fallback &lt;code&gt;F&lt;/code&gt;. While the switch point is valid, invocations to &lt;code&gt;M&lt;/code&gt; are delegated to &lt;code&gt;T&lt;/code&gt;. After it is invalidated, invocations are delegated to &lt;code&gt;F&lt;/code&gt;.</source>
          <target state="translated">保護されたデリゲーターが保護されたペアから作成されると、ペアは、それを作成したスイッチポイントに永続的に関連付けられた新しいメソッドハンドル &lt;code&gt;M&lt;/code&gt; でラップされます。各ペアは、ターゲット &lt;code&gt;T&lt;/code&gt; とフォールバック &lt;code&gt;F&lt;/code&gt; で構成されます。スイッチポイントは有効ですが、 &lt;code&gt;M&lt;/code&gt; への呼び出しは &lt;code&gt;T&lt;/code&gt; に委任されます。無効化された後、呼び出しは &lt;code&gt;F&lt;/code&gt; に委任されます。</target>
        </trans-unit>
        <trans-unit id="4e4ff9b2bc60835e3eb9b787ed7b76295168a994" translate="yes" xml:space="preserve">
          <source>When a listener instance invokes &lt;code&gt;NamingEvent.getEventContext()&lt;/code&gt;, it must take into account the possibility that other threads will be working with that context concurrently. Likewise, when a listener is registered via &lt;code&gt;addNamingListener()&lt;/code&gt;, the registering thread must take into account the likely possibility that the service provider will later invoke the listeners in newly-created threads. As &lt;code&gt;Context&lt;/code&gt; instances are not guaranteed to be thread-safe in general, all context operations must be synchronized as needed.</source>
          <target state="translated">リスナーインスタンスが &lt;code&gt;NamingEvent.getEventContext()&lt;/code&gt; を呼び出すとき、他のスレッドがそのコンテキストで同時に動作する可能性を考慮に入れる必要があります。同様に、リスナーが &lt;code&gt;addNamingListener()&lt;/code&gt; を介して登録される場合、登録スレッドは、サービスプロバイダーが後で新しく作成されたスレッドでリスナーを呼び出す可能性を考慮する必要があります。 &lt;code&gt;Context&lt;/code&gt; インスタンスは、一般的にはスレッドセーフであることが保証されていない、必要に応じて、すべてのコンテキスト操作を同期させる必要があります。</target>
        </trans-unit>
        <trans-unit id="bf04634d7ff1db386d9b9db0fb748a111b1c6a04" translate="yes" xml:space="preserve">
          <source>When a listener registers for events with a context, the context might need to do some internal processing in order to collect information required to generate the events. The context, for example, might need to make a request to the server to register interest in changes on the server that will eventually be translated into events. If an exception occurs that prevents information about the events from being collected, the listener will never be notified of the events. When such an exception occurs, a &lt;code&gt;NamingExceptionEvent&lt;/code&gt; is fired to notify the listener. The listener's &lt;code&gt;namingExceptionThrown()&lt;/code&gt; method is invoked, as shown in the sample code above, and the listener is automatically deregistered.</source>
          <target state="translated">リスナーがコンテキストを使用してイベントを登録するとき、イベントの生成に必要な情報を収集するために、コンテキストが内部処理を行う必要がある場合があります。たとえば、コンテキストは、最終的にイベントに変換されるサーバー上の変更への関心を登録するために、サーバーに要求を行う必要がある場合があります。イベントに関する情報の収集を妨げる例外が発生した場合、リスナーにはイベントが通知されません。このような例外が発生すると、 &lt;code&gt;NamingExceptionEvent&lt;/code&gt; が発生してリスナーに通知します。上記のサンプルコードに示すように、リスナーの &lt;code&gt;namingExceptionThrown()&lt;/code&gt; メソッドが呼び出され、リスナーは自動的に登録解除されます。</target>
        </trans-unit>
        <trans-unit id="90dd254c09d1c776ecf5c2349e720c462b943059" translate="yes" xml:space="preserve">
          <source>When a method handle is obtained by executing an &lt;code&gt;ldc&lt;/code&gt; instruction of a &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; constant, and the target method is marked as a variable arity method (with the modifier bit &lt;code&gt;0x0080&lt;/code&gt;), the method handle will accept multiple arities, as if the method handle constant were created by means of a call to &lt;code&gt;asVarargsCollector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; 定数の &lt;code&gt;ldc&lt;/code&gt; 命令を実行してメソッドハンドルを取得し、ターゲットメソッドが可変アリティメソッドとしてマークされている場合（修飾子ビット &lt;code&gt;0x0080&lt;/code&gt; を使用）、メソッドハンドルは複数のアリティを受け入れます。 &lt;code&gt;asVarargsCollector&lt;/code&gt; の呼び出しによって作成されます。</target>
        </trans-unit>
        <trans-unit id="dc59d96f42634aad08455afa57812c0140efcb78" translate="yes" xml:space="preserve">
          <source>When a method handle to a virtual method is invoked, the method is always looked up in the receiver (that is, the first argument).</source>
          <target state="translated">仮想メソッドへのメソッドハンドルが呼び出されると、そのメソッドは常にレシーバーで検索されます (つまり第一引数)。</target>
        </trans-unit>
        <trans-unit id="ac3ed4c5aa8581e47e6e1d20592079740b067ad7" translate="yes" xml:space="preserve">
          <source>When a method such as list(), listBindings(), or search() returns a NamingEnumeration, any exceptions encountered are reserved until all results have been returned. At the end of the enumeration, the exception is thrown (by hasMore());</source>
          <target state="translated">list()、listBindings()、search()などのメソッドが NamingEnumeration を返すときに発生した例外は、すべての結果が返されるまで予約されます。列挙の最後に例外がスローされます (hasMore()によって)。</target>
        </trans-unit>
        <trans-unit id="eaa5aba63dd9f02bc423da3760cc790334dde37c" translate="yes" xml:space="preserve">
          <source>When a new connection is accepted then the resulting &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; will be bound to the same &lt;a href=&quot;asynchronouschannelgroup&quot;&gt;&lt;code&gt;AsynchronousChannelGroup&lt;/code&gt;&lt;/a&gt; as this channel. If the group is &lt;a href=&quot;asynchronouschannelgroup#isShutdown--&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; and a connection is accepted, then the connection is closed, and the operation completes with an &lt;code&gt;IOException&lt;/code&gt; and cause &lt;a href=&quot;shutdownchannelgroupexception&quot;&gt;&lt;code&gt;ShutdownChannelGroupException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">新しい接続が受け入れられると、結果の &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; はこのチャネルと同じ&lt;a href=&quot;asynchronouschannelgroup&quot;&gt; &lt;code&gt;AsynchronousChannelGroup&lt;/code&gt; に&lt;/a&gt;バインドされます。グループが&lt;a href=&quot;asynchronouschannelgroup#isShutdown--&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt;れ、接続が受け入れられると、接続は閉じられ、操作は &lt;code&gt;IOException&lt;/code&gt; で完了し、&lt;a href=&quot;shutdownchannelgroupexception&quot;&gt; &lt;code&gt;ShutdownChannelGroupException&lt;/code&gt; が&lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="57b0000a9696b1c366c87328582e275d001b7acb" translate="yes" xml:space="preserve">
          <source>When a printer controls more than one output device, this reason indicates that one or more output devices are stopped. If the reason's severity is a report, fewer than half of the output devices are stopped. If the reason's severity is a warning, half or more but fewer than all of the output devices are stopped.</source>
          <target state="translated">プリンタが複数の出力装置を制御している場合、この理由は1つ以上の出力装置が停止していることを示している。理由の重大性が報告である場合、出力デバイスの半分以下が停止している。理由の深刻度が警告の場合、半分以上の出力デバイスが停止しているが、すべての出力デバイスよりは少ない。</target>
        </trans-unit>
        <trans-unit id="48145dbd368db04ca5f1dc84946f81ac044581d7" translate="yes" xml:space="preserve">
          <source>When a proxy selector is registered, for instance, a subclass of URLConnection class should call the &lt;a href=&quot;proxyselector#select-java.net.URI-&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; method for each URL request so that the proxy selector can decide if a direct, or proxied connection should be used. The &lt;a href=&quot;proxyselector#select-java.net.URI-&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; method returns an iterator over a collection with the preferred connection approach.</source>
          <target state="translated">たとえば、プロキシセレクターが登録されている場合、URLConnectionクラスのサブクラスは、URLリクエストごとに&lt;a href=&quot;proxyselector#select-java.net.URI-&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、プロキシーセレクターが直接接続とプロキシ接続のどちらを使用するかを決定できるようにする必要があります。&lt;a href=&quot;proxyselector#select-java.net.URI-&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt;方法は、好適な接続手法を用いてコレクションの反復子を返します。</target>
        </trans-unit>
        <trans-unit id="758869419d156f27990d997e0fa9fce2a685beea" translate="yes" xml:space="preserve">
          <source>When a scanner throws an &lt;a href=&quot;inputmismatchexception&quot;&gt;&lt;code&gt;InputMismatchException&lt;/code&gt;&lt;/a&gt;, the scanner will not pass the token that caused the exception, so that it may be retrieved or skipped via some other method.</source>
          <target state="translated">スキャナーが&lt;a href=&quot;inputmismatchexception&quot;&gt; &lt;code&gt;InputMismatchException&lt;/code&gt; を&lt;/a&gt;スローした場合、スキャナーは例外を引き起こしたトークンを渡さないため、他の方法で取得またはスキップできます。</target>
        </trans-unit>
        <trans-unit id="a853e62233343e776fbd44333e92601acc2febbe" translate="yes" xml:space="preserve">
          <source>When a security manager is installed and it denies access to a file (or directory), then it is ignored and not included in the stream.</source>
          <target state="translated">セキュリティマネージャがインストールされていて、それがファイル(またはディレクトリ)へのアクセスを拒否した場合、それは無視され、ストリームには含まれません。</target>
        </trans-unit>
        <trans-unit id="e74c73e1d683b9fecd0a717afa160e6920257abc" translate="yes" xml:space="preserve">
          <source>When a security manager is installed and it denies access to a file (or directory), then it is ignored and the visitor is not invoked for that file (or directory).</source>
          <target state="translated">セキュリティマネージャがインストールされていて、ファイル(またはディレクトリ)へのアクセスを拒否すると、そのファイル(またはディレクトリ)は無視され、そのファイル(またはディレクトリ)に対して訪問者が呼び出されません。</target>
        </trans-unit>
        <trans-unit id="3b16d1c9ade5f68deff8b6a72ad86abd212f522b" translate="yes" xml:space="preserve">
          <source>When a security manager is installed, it is invoked to check access to the each root directory. If denied, the root directory is not returned by the iterator. In the case of the default provider, the &lt;a href=&quot;../../lang/securitymanager#checkRead-java.lang.String-&quot;&gt;&lt;code&gt;SecurityManager.checkRead(String)&lt;/code&gt;&lt;/a&gt; method is invoked to check read access to each root directory. It is system dependent if the permission checks are done when the iterator is obtained or during iteration.</source>
          <target state="translated">セキュリティマネージャがインストールされると、各ルートディレクトリへのアクセスをチェックするために呼び出されます。拒否された場合、ルートディレクトリはイテレータから返されません。デフォルトのプロバイダーの場合、&lt;a href=&quot;../../lang/securitymanager#checkRead-java.lang.String-&quot;&gt; &lt;code&gt;SecurityManager.checkRead(String)&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されて、各ルートディレクトリへの読み取りアクセスがチェックされます。イテレーターを取得するとき、または反復中に許可検査が行われるかどうかは、システムに依存します。</target>
        </trans-unit>
        <trans-unit id="bd8e3e90bc0a4ad1eaf1fe672cd6021d8ff59c73" translate="yes" xml:space="preserve">
          <source>When a service provider needs to determine the value of a property, it will generally take that value directly from the environment. A service provider may define provider-specific properties to be placed in its own provider resource file. In that case it should merge values as described in the previous paragraph.</source>
          <target state="translated">サービス・プロバイダがプロパティの値を決定する必要がある場合、通常は環境から直接その値を取得します。サービス・プロバイダは、プロバイダ固有のプロパティを定義して、独自のプロバイダ・リソース・ファイルに配置することができます。その場合は、前の段落で説明したように値をマージする必要があります。</target>
        </trans-unit>
        <trans-unit id="7807fd2cea76f3e1ce4a83a545e5b3a3ae40080e" translate="yes" xml:space="preserve">
          <source>When a service provider receives a response control, it uses control factories to return the specific/appropriate control class implementation.</source>
          <target state="translated">サービスプロバイダが応答制御を受信すると、制御工場を使用して特定/適切な制御クラスの実装を返します。</target>
        </trans-unit>
        <trans-unit id="3ade58d0e25bc018ea163c0cdad7f4b776c6ab39" translate="yes" xml:space="preserve">
          <source>When a service provider receives response controls, it uses the &lt;code&gt;ControlFactory&lt;/code&gt; class to produce specific classes that implement the &lt;code&gt;Control&lt;/code&gt; interface.</source>
          <target state="translated">サービスプロバイダーは、応答コントロールを受信すると、 &lt;code&gt;ControlFactory&lt;/code&gt; クラスを使用して、 &lt;code&gt;Control&lt;/code&gt; インターフェイスを実装する特定のクラスを生成します。</target>
        </trans-unit>
        <trans-unit id="3d30b140cad70a65f78e1eb56376dbfbaf7a9533" translate="yes" xml:space="preserve">
          <source>When a single argument is parsed more than once in the string, the last match will be the final result of the parsing. For example,</source>
          <target state="translated">単一の引数が文字列の中で複数回解析された場合、最後にマッチしたものが解析の最終結果となります。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="b152721196e9350030fbce80cc3060686ce54e33" translate="yes" xml:space="preserve">
          <source>When a socket is connected, &lt;a href=&quot;datagramsocket#receive-java.net.DatagramPacket-&quot;&gt;&lt;code&gt;receive&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datagramsocket#send-java.net.DatagramPacket-&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt;&lt;b&gt;will not perform any security checks&lt;/b&gt; on incoming and outgoing packets, other than matching the packet's and the socket's address and port. On a send operation, if the packet's address is set and the packet's address and the socket's address do not match, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown. A socket connected to a multicast address may only be used to send packets.</source>
          <target state="translated">ソケットが接続されている場合、&lt;a href=&quot;datagramsocket#receive-java.net.DatagramPacket-&quot;&gt; &lt;code&gt;receive&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;datagramsocket#send-java.net.DatagramPacket-&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt;&lt;b&gt;は&lt;/b&gt;、パケットとソケットのアドレスおよびポートを照合することを除いて、着信パケットと発信パケットの&lt;b&gt;セキュリティチェック&lt;/b&gt;を&lt;b&gt;実行しません&lt;/b&gt;。送信操作で、パケットのアドレスが設定されていて、パケットのアドレスとソケットのアドレスが一致しない場合、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。マルチキャストアドレスに接続されたソケットは、パケットの送信にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="a75cd6f6c3582a34b8ac5dfdb077e4af32675c83" translate="yes" xml:space="preserve">
          <source>When a socket subscribes to a multicast group/port, it receives datagrams sent by other hosts to the group/port, as do all other members of the group and port. A socket relinquishes membership in a group by the leaveGroup(InetAddress addr) method. &lt;b&gt; Multiple MulticastSocket's&lt;/b&gt; may subscribe to a multicast group and port concurrently, and they will all receive group datagrams.</source>
          <target state="translated">ソケットがマルチキャストグループ/ポートにサブスクライブすると、グループとポートの他のすべてのメンバーと同様に、他のホストからグループ/ポートに送信されたデータグラムを受信します。ソケットは、leaveGroup（InetAddress addr）メソッドによってグループのメンバーシップを放棄します。&lt;b&gt;複数のMulticastSocket&lt;/b&gt;がマルチキャストグループとポートに同時にサブスクライブする場合があり、それらはすべてグループデータグラムを受信します。</target>
        </trans-unit>
        <trans-unit id="1542ee008a8e9f826667c4f42290447523aa89a6" translate="yes" xml:space="preserve">
          <source>When a stack is first created, it contains no items.</source>
          <target state="translated">スタックが最初に作成されたとき、そのスタックにはアイテムが含まれていません。</target>
        </trans-unit>
        <trans-unit id="58680ac2a710c1c3ec572a26747c8ac4bf37321d" translate="yes" xml:space="preserve">
          <source>When a subclass is replacing objects it must insure that either a complementary substitution must be made during deserialization or that the substituted object is compatible with every field where the reference will be stored. Objects whose type is not a subclass of the type of the field or array element abort the serialization by raising an exception and the object is not be stored.</source>
          <target state="translated">サブクラスがオブジェクトを置換する場合、シリアル化の間に補完的な置換を行うか、置換されたオブジェクトが参照が格納されるすべてのフィールドと互換性があることを保証しなければなりません。型がフィールドや配列要素の型のサブクラスではないオブジェクトは、例外を発生させてシリアライズを中止し、オブジェクトは格納されません。</target>
        </trans-unit>
        <trans-unit id="4af4456165693adbeda480b45292ea0c955ff233" translate="yes" xml:space="preserve">
          <source>When a subclass is replacing objects it must insure that the substituted object is compatible with every field where the reference will be stored. Objects whose type is not a subclass of the type of the field or array element abort the serialization by raising an exception and the object is not be stored.</source>
          <target state="translated">サブクラスがオブジェクトを置換するとき、置換されたオブジェクトが参照が格納されるすべてのフィールドと互換性があることを保証しなければなりません。型がフィールドや配列要素の型のサブクラスではないオブジェクトは、例外を発生させてシリアライズを中止し、オブジェクトは格納されません。</target>
        </trans-unit>
        <trans-unit id="e26d84240a67b35d599a0931c437428256b549e1" translate="yes" xml:space="preserve">
          <source>When a subclass overrides a &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; method, the new method can cause the enclosed elements to be scanned in the default way by calling &lt;code&gt;super.visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt;. In this fashion, the concrete visitor can control the ordering of traversal over the component elements with respect to the additional processing; for example, consistently calling &lt;code&gt;super.visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; at the start of the overridden methods will yield a preorder traversal, etc. If the component elements should be traversed in some other order, instead of calling &lt;code&gt;super.visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt;, an overriding visit method should call &lt;code&gt;scan&lt;/code&gt; with the elements in the desired order.</source>
          <target state="translated">サブクラス &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 訪問メソッドをオーバーライドすると、新しいメソッドは、 &lt;code&gt;super.visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; 呼び出すことにより、囲まれた要素をデフォルトの方法でスキャンさせることができます。このようにして、具体的なビジターは、追加の処理に関するコンポーネント要素のトラバーサルの順序を制御できます。たとえば、オーバーライドされたメソッドの開始時に一貫して &lt;code&gt;super.visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; を呼び出すと、前順トラバーサルが発生します。コンポーネント要素を他の順序でトラバースする必要がある場合は、 &lt;code&gt;super.visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; を呼び出す代わりに、オーバーライドするvisitメソッドを呼び出す必要があります。目的の順序で要素を &lt;code&gt;scan&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="9929247187f11924a98b560a646e45a4e67ae3c7" translate="yes" xml:space="preserve">
          <source>When a submitted task is cancelled before it is run, execution is suppressed. By default, such a cancelled task is not automatically removed from the work queue until its delay elapses. While this enables further inspection and monitoring, it may also cause unbounded retention of cancelled tasks. To avoid this, set &lt;a href=&quot;scheduledthreadpoolexecutor#setRemoveOnCancelPolicy-boolean-&quot;&gt;&lt;code&gt;setRemoveOnCancelPolicy(boolean)&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;true&lt;/code&gt;, which causes tasks to be immediately removed from the work queue at time of cancellation.</source>
          <target state="translated">送信されたタスクが実行前にキャンセルされると、実行が抑制されます。デフォルトでは、そのようなキャンセルされたタスクは、その遅延が経過するまで自動的にワークキューから削除されません。これにより、詳細な検査と監視が可能になりますが、キャンセルされたタスクが際限なく保持される可能性もあります。これを回避するには、&lt;a href=&quot;scheduledthreadpoolexecutor#setRemoveOnCancelPolicy-boolean-&quot;&gt; &lt;code&gt;setRemoveOnCancelPolicy(boolean)&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;true&lt;/code&gt; に設定します。これにより、キャンセル時にタスクがワークキューから即座に削除されます。</target>
        </trans-unit>
        <trans-unit id="10b74fcebd08424b7bb7bf29fe6e5a17d846f581" translate="yes" xml:space="preserve">
          <source>When a system exclusive message is read from a MIDI file, it always has a defined length. Data from a system exclusive message from a MIDI file should be stored in the data array of a &lt;code&gt;SysexMessage&lt;/code&gt; as follows: the system exclusive message status byte (0xF0 or 0xF7), all message data bytes, and finally the end-of-exclusive flag (0xF7). The length reported by the &lt;code&gt;SysexMessage&lt;/code&gt; object is therefore the length of the system exclusive data plus two: one byte for the status byte and one for the end-of-exclusive flag.</source>
          <target state="translated">システムエクスクルーシブメッセージがMIDIファイルから読み取られる場合、そのメッセージの長さは常に定義されています。MIDIファイルのシステムエクスクルーシブメッセージのデータは、 &lt;code&gt;SysexMessage&lt;/code&gt; のデータ配列に次のように保存する必要があります。システムエクスクルーシブメッセージステータスバイト（0xF0または0xF7）、すべてのメッセージデータバイト、最後にエクスクルーシブ終了フラグ（ 0xF7）。したがって、 &lt;code&gt;SysexMessage&lt;/code&gt; オブジェクトによって報告される長さは、システムエクスクルーシブデータの長さに2を加えた長さになります。1バイトはステータスバイト用で、もう1バイトは排他終了フラグ用です。</target>
        </trans-unit>
        <trans-unit id="89b880bb7b0e20e4a94653fd28147b76b402fbeb" translate="yes" xml:space="preserve">
          <source>When a thread &lt;code&gt;T&lt;/code&gt; queries a class value in state &lt;code&gt;2N&lt;/code&gt;, the thread first attempts to initialize the class value to state &lt;code&gt;2N+1&lt;/code&gt; by invoking &lt;code&gt;computeValue&lt;/code&gt; and installing the resulting value.</source>
          <target state="translated">スレッド &lt;code&gt;T&lt;/code&gt; が状態 &lt;code&gt;2N&lt;/code&gt; のクラス値を照会すると、スレッドはまず、 &lt;code&gt;computeValue&lt;/code&gt; を呼び出して結果の値をインストールすることにより、クラス値を状態 &lt;code&gt;2N+1&lt;/code&gt; に初期化しようとします。</target>
        </trans-unit>
        <trans-unit id="d0bb71d68a413b1e3688231ebd3a0fe5821666fc" translate="yes" xml:space="preserve">
          <source>When a thread &lt;code&gt;T&lt;/code&gt; removes a class value in state &lt;code&gt;2N&lt;/code&gt;, nothing happens, since the class value is already uninitialized. Otherwise, the state is advanced atomically to &lt;code&gt;2N+1&lt;/code&gt;.</source>
          <target state="translated">スレッド &lt;code&gt;T&lt;/code&gt; が状態 &lt;code&gt;2N&lt;/code&gt; のクラス値を削除しても、クラス値はすでに初期化されていないため、何も起こりません。それ以外の場合、状態はアトミックに &lt;code&gt;2N+1&lt;/code&gt; に進みます。</target>
        </trans-unit>
        <trans-unit id="77fe3f278ecb8fc0ec8c3db5bded17a3ac83c0e0" translate="yes" xml:space="preserve">
          <source>When a thread is about to terminate due to an uncaught exception the Java Virtual Machine will query the thread for its &lt;code&gt;UncaughtExceptionHandler&lt;/code&gt; using &lt;a href=&quot;thread#getUncaughtExceptionHandler--&quot;&gt;&lt;code&gt;Thread.getUncaughtExceptionHandler()&lt;/code&gt;&lt;/a&gt; and will invoke the handler's &lt;code&gt;uncaughtException&lt;/code&gt; method, passing the thread and the exception as arguments. If a thread has not had its &lt;code&gt;UncaughtExceptionHandler&lt;/code&gt; explicitly set, then its &lt;code&gt;ThreadGroup&lt;/code&gt; object acts as its &lt;code&gt;UncaughtExceptionHandler&lt;/code&gt;. If the &lt;code&gt;ThreadGroup&lt;/code&gt; object has no special requirements for dealing with the exception, it can forward the invocation to the &lt;a href=&quot;thread#getDefaultUncaughtExceptionHandler--&quot;&gt;default uncaught exception handler&lt;/a&gt;.</source>
          <target state="translated">キャッチされない例外が原因でスレッドが終了しようとすると、Java仮想マシンは&lt;a href=&quot;thread#getUncaughtExceptionHandler--&quot;&gt; &lt;code&gt;Thread.getUncaughtExceptionHandler()&lt;/code&gt; &lt;/a&gt;を使用してスレッドに &lt;code&gt;UncaughtExceptionHandler&lt;/code&gt; を照会し、ハンドラーの &lt;code&gt;uncaughtException&lt;/code&gt; メソッドを呼び出して、スレッドと例外を引数として渡します。スレッドの &lt;code&gt;UncaughtExceptionHandler&lt;/code&gt; が明示的に設定されていない場合、その &lt;code&gt;ThreadGroup&lt;/code&gt; オブジェクトはその &lt;code&gt;UncaughtExceptionHandler&lt;/code&gt; として機能します。 &lt;code&gt;ThreadGroup&lt;/code&gt; オブジェクトに例外を処理するための特別な要件がない場合は、呼び出しを&lt;a href=&quot;thread#getDefaultUncaughtExceptionHandler--&quot;&gt;デフォルトのキャッチされない例外ハンドラーに&lt;/a&gt;転送できます。</target>
        </trans-unit>
        <trans-unit id="895317443968ac47f3f92d75cb96a37c77319964" translate="yes" xml:space="preserve">
          <source>When a three part address is specified, the last part is interpreted as a 16-bit quantity and placed in the right most two bytes of the network address. This makes the three part address format convenient for specifying Class B net- work addresses as 128.net.host.</source>
          <target state="translated">3 つのパートのアドレスが指定された場合、最後のパートは 16 ビットの量として解釈され、ネットワーク・アドレスの右端 2 バイトに配置されます。これにより、クラス B のネット ワークアドレスを 128.net.host のように指定するのに便利な 3 つのパートアドレス形式になります。</target>
        </trans-unit>
        <trans-unit id="29a6c60ea1ad71509b0284da02c6071f09ce9c45" translate="yes" xml:space="preserve">
          <source>When a two part address is supplied, the last part is interpreted as a 24-bit quantity and placed in the right most three bytes of the network address. This makes the two part address format convenient for specifying Class A network addresses as net.host.</source>
          <target state="translated">2 つのパート・アドレスが与えられると、最後のパートは 24 ビットの量として解釈され、ネットワーク・アドレスの右端の 3 バイトに配置されます。これにより、2 つのパート・アドレス・フォーマットは、クラス A ネットワーク・アドレスを net.host として指定するのに便利になります。</target>
        </trans-unit>
        <trans-unit id="6aa8db231eb18f002bb271b220e13400b3ee853b" translate="yes" xml:space="preserve">
          <source>When a variable &lt;code&gt;{i}&lt;/code&gt; appears in a search filter, it indicates that the filter argument &lt;code&gt;filterArgs[i]&lt;/code&gt; is to be used in that place. Such variables may be used wherever an &lt;em&gt;attr&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt;, or &lt;em&gt;matchingrule&lt;/em&gt; production appears in the filter grammar of RFC 2254, section 4. When a string-valued filter argument is substituted for a variable, the filter is interpreted as if the string were given in place of the variable, with any characters having special significance within filters (such as &lt;code&gt;'*'&lt;/code&gt;) having been escaped according to the rules of RFC 2254.</source>
          <target state="translated">変数 &lt;code&gt;{i}&lt;/code&gt; が検索フィルターに現れる場合、フィルター引数 &lt;code&gt;filterArgs[i]&lt;/code&gt; がその場所で使用されることを示しています。このような変数は、&lt;em&gt;attr&lt;/em&gt;、&lt;em&gt;value&lt;/em&gt;、または&lt;em&gt;matchingruleの&lt;/em&gt;生成がRFC 2254のフィルター文法のセクション4にある場合に使用できます。文字列値のフィルター引数が変数に置き換えられると、フィルターは文字列が変数の場所。フィルター内で特別な意味を持つ文字（ &lt;code&gt;'*'&lt;/code&gt; など）は、RFC 2254のルールに従ってエスケープされています。</target>
        </trans-unit>
        <trans-unit id="e2c2469b19a3494bf3f5739b9534978d0c5455a7" translate="yes" xml:space="preserve">
          <source>When adding providers to the cache, the &lt;a href=&quot;serviceloader#iterator--&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; processes resources in the order that the &lt;a href=&quot;../lang/classloader#getResources-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.getResources(String)&lt;/code&gt;&lt;/a&gt; method finds the service configuration files.</source>
          <target state="translated">キャッシュにプロバイダーを追加すると、&lt;a href=&quot;serviceloader#iterator--&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;../lang/classloader#getResources-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.getResources(String)&lt;/code&gt; &lt;/a&gt;メソッドがサービス構成ファイルを見つける順序でリソースを処理します。</target>
        </trans-unit>
        <trans-unit id="bcaddb468356d4ee2035b39f238ba71251cf9ad5" translate="yes" xml:space="preserve">
          <source>When an Externalizable object is reconstructed, an instance is created using the public no-arg constructor, then the readExternal method called. Serializable objects are restored by reading them from an ObjectInputStream.</source>
          <target state="translated">Externalizable オブジェクトが再構築されると、public no-arg コンストラクタを使用してインスタンスが作成され、その後 readExternal メソッドが呼び出されます。シリアライズ可能なオブジェクトは、ObjectInputStream から読み込むことでリストアされます。</target>
        </trans-unit>
        <trans-unit id="45b4eddc256c7dd0ed23de01764919b7450154dc" translate="yes" xml:space="preserve">
          <source>When an MBean emits a notification, it considers each listener that has been added with &lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;addNotificationListener&lt;/code&gt;&lt;/a&gt; and not subsequently removed with &lt;a href=&quot;notificationbroadcaster#removeNotificationListener-javax.management.NotificationListener-&quot;&gt;&lt;code&gt;removeNotificationListener&lt;/code&gt;&lt;/a&gt;. If a filter was provided with that listener, and if the filter's &lt;a href=&quot;notificationfilter#isNotificationEnabled-javax.management.Notification-&quot;&gt;&lt;code&gt;isNotificationEnabled&lt;/code&gt;&lt;/a&gt; method returns false, the listener is ignored. Otherwise, the listener's &lt;a href=&quot;notificationlistener#handleNotification-javax.management.Notification-java.lang.Object-&quot;&gt;&lt;code&gt;handleNotification&lt;/code&gt;&lt;/a&gt; method is called with the notification, as well as the handback object that was provided to &lt;code&gt;addNotificationListener&lt;/code&gt;.</source>
          <target state="translated">MBeanが通知を送信するとき、MBeanは&lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;addNotificationListener&lt;/code&gt; &lt;/a&gt;で追加され、その後&lt;a href=&quot;notificationbroadcaster#removeNotificationListener-javax.management.NotificationListener-&quot;&gt; &lt;code&gt;removeNotificationListener&lt;/code&gt; &lt;/a&gt;で削除されていない各リスナーを考慮します。フィルターがそのリスナーで提供されていて、フィルターの&lt;a href=&quot;notificationfilter#isNotificationEnabled-javax.management.Notification-&quot;&gt; &lt;code&gt;isNotificationEnabled&lt;/code&gt; &lt;/a&gt;メソッドがfalseを返した場合、リスナーは無視されます。それ以外の場合、リスナーの&lt;a href=&quot;notificationlistener#handleNotification-javax.management.Notification-java.lang.Object-&quot;&gt; &lt;code&gt;handleNotification&lt;/code&gt; &lt;/a&gt;メソッドは、通知と &lt;code&gt;addNotificationListener&lt;/code&gt; に提供されたハンドバックオブジェクトとともに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="b71b50e0adb800b8bc569793e796446befc75eb6" translate="yes" xml:space="preserve">
          <source>When an MBean emits a notification, it considers each listener that has been added with &lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;addNotificationListener&lt;/code&gt;&lt;/a&gt; and not subsequently removed with &lt;a href=&quot;notificationemitter#removeNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;removeNotificationListener&lt;/code&gt;&lt;/a&gt;. If a filter was provided with that listener, and if the filter's &lt;a href=&quot;notificationfilter#isNotificationEnabled-javax.management.Notification-&quot;&gt;&lt;code&gt;isNotificationEnabled&lt;/code&gt;&lt;/a&gt; method returns false, the listener is ignored. Otherwise, the listener's &lt;a href=&quot;notificationlistener#handleNotification-javax.management.Notification-java.lang.Object-&quot;&gt;&lt;code&gt;handleNotification&lt;/code&gt;&lt;/a&gt; method is called with the notification, as well as the handback object that was provided to &lt;code&gt;addNotificationListener&lt;/code&gt;.</source>
          <target state="translated">MBeanが通知を送信するとき、MBeanは&lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;addNotificationListener&lt;/code&gt; &lt;/a&gt;で追加され、その後&lt;a href=&quot;notificationemitter#removeNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;removeNotificationListener&lt;/code&gt; &lt;/a&gt;で削除されていない各リスナーを考慮します。フィルターがそのリスナーで提供されていて、フィルターの&lt;a href=&quot;notificationfilter#isNotificationEnabled-javax.management.Notification-&quot;&gt; &lt;code&gt;isNotificationEnabled&lt;/code&gt; &lt;/a&gt;メソッドがfalseを返した場合、リスナーは無視されます。それ以外の場合、リスナーの&lt;a href=&quot;notificationlistener#handleNotification-javax.management.Notification-java.lang.Object-&quot;&gt; &lt;code&gt;handleNotification&lt;/code&gt; &lt;/a&gt;メソッドは、通知と &lt;code&gt;addNotificationListener&lt;/code&gt; に提供されたハンドバックオブジェクトとともに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="fc7e40c74e30e9bdda780e2f49b9064de3f28184" translate="yes" xml:space="preserve">
          <source>When an MBean is registered in an MBean Server, if it is of a subclass of &lt;a href=&quot;../../../java/lang/classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt; and if it does not implement the interface &lt;a href=&quot;privateclassloader&quot;&gt;&lt;code&gt;PrivateClassLoader&lt;/code&gt;&lt;/a&gt;, it is added to the end of the MBean Server's &lt;code&gt;ClassLoaderRepository&lt;/code&gt;. If it is subsequently unregistered from the MBean Server, it is removed from the &lt;code&gt;ClassLoaderRepository&lt;/code&gt;.</source>
          <target state="translated">MBeanがMBeanサーバーに登録されている場合、それが&lt;a href=&quot;../../../java/lang/classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; の&lt;/a&gt;サブクラスであり、それがインターフェース&lt;a href=&quot;privateclassloader&quot;&gt; &lt;code&gt;PrivateClassLoader&lt;/code&gt; を&lt;/a&gt;実装していない場合、MBeanサーバーの &lt;code&gt;ClassLoaderRepository&lt;/code&gt; の最後に追加されます。その後MBeanサーバーから登録解除されると、 &lt;code&gt;ClassLoaderRepository&lt;/code&gt; から削除されます。</target>
        </trans-unit>
        <trans-unit id="6757f09ba74310403e9527263bc5d5dd7e032018" translate="yes" xml:space="preserve">
          <source>When an MBean is registered or unregistered in the MBean server a &lt;a href=&quot;mbeanservernotification&quot;&gt;&lt;code&gt;MBeanServerNotification&lt;/code&gt;&lt;/a&gt; Notification is emitted. To register an object as listener to MBeanServerNotifications you should call the MBean server method &lt;a href=&quot;mbeanserver#addNotificationListener-javax.management.ObjectName-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;addNotificationListener&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;ObjectName&lt;/code&gt; the &lt;code&gt;ObjectName&lt;/code&gt; of the &lt;a href=&quot;mbeanserverdelegate&quot;&gt;&lt;code&gt;MBeanServerDelegate&lt;/code&gt;&lt;/a&gt;. This &lt;code&gt;ObjectName&lt;/code&gt; is:</source>
          <target state="translated">MBeanがMBeanサーバーに登録または登録解除されると、&lt;a href=&quot;mbeanservernotification&quot;&gt; &lt;code&gt;MBeanServerNotification&lt;/code&gt; &lt;/a&gt;通知が発行されます。MBeanServerNotificationsにリスナーとしてオブジェクトを登録するには、MBeanサーバーメソッドを呼び出す必要があり&lt;a href=&quot;mbeanserver#addNotificationListener-javax.management.ObjectName-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;addNotificationListener&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;ObjectName&lt;/code&gt; &lt;code&gt;ObjectName&lt;/code&gt; の&lt;a href=&quot;mbeanserverdelegate&quot;&gt; &lt;code&gt;MBeanServerDelegate&lt;/code&gt; のを&lt;/a&gt;。この &lt;code&gt;ObjectName&lt;/code&gt; は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="182378d05279b361f0377c3dd82675fe9375ff7d" translate="yes" xml:space="preserve">
          <source>When an SSL handshake completes, new security parameters will have been established. Those parameters always include the security keys used to protect messages. They may also include parameters associated with a new &lt;em&gt;session&lt;/em&gt; such as authenticated peer identity and a new SSL cipher suite.</source>
          <target state="translated">SSLハンドシェイクが完了すると、新しいセキュリティパラメータが確立されます。これらのパラメータには、メッセージの保護に使用されるセキュリティキーが常に含まれています。また、認証されたピアIDや新しいSSL暗号スイートなど、新しい&lt;em&gt;セッションに&lt;/em&gt;関連付けられたパラメーターを含めることもできます。</target>
        </trans-unit>
        <trans-unit id="a52c11dc01aed368f150065ba6a405d66f8451bf" translate="yes" xml:space="preserve">
          <source>When an application creates a new client socket, the socket implementation factory's &lt;code&gt;createSocketImpl&lt;/code&gt; method is called to create the actual socket implementation.</source>
          <target state="translated">アプリケーションが新しいクライアントソケットを作成すると、ソケット実装ファクトリの &lt;code&gt;createSocketImpl&lt;/code&gt; メソッドが呼び出され、実際のソケット実装が作成されます。</target>
        </trans-unit>
        <trans-unit id="5070d5027d76071608fcfd8560f9541c493b061d" translate="yes" xml:space="preserve">
          <source>When an application creates a new datagram socket, the socket implementation factory's &lt;code&gt;createDatagramSocketImpl&lt;/code&gt; method is called to create the actual datagram socket implementation.</source>
          <target state="translated">アプリケーションが新しいデータグラムソケットを作成すると、ソケット実装ファクトリの &lt;code&gt;createDatagramSocketImpl&lt;/code&gt; メソッドが呼び出され、実際のデータグラムソケット実装が作成されます。</target>
        </trans-unit>
        <trans-unit id="53f882e0daa369f43672720af27805bcd63f9c59" translate="yes" xml:space="preserve">
          <source>When an application creates a new server socket, the socket implementation factory's &lt;code&gt;createSocketImpl&lt;/code&gt; method is called to create the actual socket implementation.</source>
          <target state="translated">アプリケーションが新しいサーバーソケットを作成すると、ソケット実装ファクトリの &lt;code&gt;createSocketImpl&lt;/code&gt; メソッドが呼び出され、実際のソケット実装が作成されます。</target>
        </trans-unit>
        <trans-unit id="6192da6041396e436b94b26592fc040462f804dd" translate="yes" xml:space="preserve">
          <source>When an application is deployed, it will generally have several codebase directories and JARs in its classpath. Similarly, when an applet is deployed, it will have a codebase and archives specifying where to find the applet's classes. JNDI locates (using &lt;a href=&quot;../../java/lang/classloader#getResources-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;ClassLoader.getResources()&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;) all &lt;em&gt;application resource files&lt;/em&gt; named &lt;code&gt;jndi.properties&lt;/code&gt; in the classpath. In addition, if the file</source>
          <target state="translated">アプリケーションがデプロイされると、通常、クラスパスにいくつかのコードベースディレクトリとJARが含まれます。同様に、アプレットが配備されると、アプレットのクラスを見つける場所を指定するコードベースとアーカイブが含まれます。 JNDIは（&lt;a href=&quot;../../java/lang/classloader#getResources-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;ClassLoader.getResources()&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;を使用して）クラスパスで &lt;code&gt;jndi.properties&lt;/code&gt; という名前のすべての&lt;em&gt;アプリケーションリソースファイル&lt;/em&gt;を見つけます。さらに、ファイル</target>
        </trans-unit>
        <trans-unit id="5ff3262456581061805ec48c0da1d47a0d84ee27" translate="yes" xml:space="preserve">
          <source>When an event is dispatched to a listener, the listener method (such as &lt;code&gt;objectChanged()&lt;/code&gt;) may be executed in a thread other than the one in which the call to &lt;code&gt;addNamingListener()&lt;/code&gt; was executed. The choice of which thread to use is made by the service provider. When an event is dispatched to multiple listeners, the service provider may choose (and is generally encouraged) to execute the listener methods concurrently in separate threads.</source>
          <target state="translated">イベントがリスナーにディスパッチされたときに、（例えば、リスナー方法 &lt;code&gt;objectChanged()&lt;/code&gt; ）をコールしたもの以外のスレッドで実行されてもよい &lt;code&gt;addNamingListener()&lt;/code&gt; 実行されました。使用するスレッドの選択は、サービスプロバイダーが行います。イベントが複数のリスナーにディスパッチされる場合、サービスプロバイダーは、リスナーメソッドを別々のスレッドで同時に実行することを選択できます（一般的に推奨されます）。</target>
        </trans-unit>
        <trans-unit id="c246ece3865225c2043f5d0d8ebe7428a4313f31" translate="yes" xml:space="preserve">
          <source>When an event is reported to indicate that a file in a watched directory has been modified then there is no guarantee that the program (or programs) that have modified the file have completed. Care should be taken to coordinate access with other programs that may be updating the file. The &lt;a href=&quot;../channels/filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class defines methods to lock regions of a file against access by other programs.</source>
          <target state="translated">監視対象ディレクトリ内のファイルが変更されたことを示すイベントが報告された場合、ファイルを変更した1つまたは複数のプログラムが完了した保証はありません。ファイルを更新している可能性のある他のプログラムとのアクセスを調整するように注意する必要があります。&lt;a href=&quot;../channels/filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt;クラスは、他のプログラムによるアクセスに対してファイルのロック領域にメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="46c3263910b048a89e5d5d0939bdd2c5ae531805" translate="yes" xml:space="preserve">
          <source>When an exception is thrown by a factory, the exception is passed on to the caller of &lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt;. The search for other factories that may produce a non-null answer is halted. A factory should only throw an exception if it is sure that it is the only intended factory and that no other factories should be tried. If this factory cannot create an object using the arguments supplied, it should return null.</source>
          <target state="translated">ファクトリによって例外がスローされると、例外は &lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt; の呼び出し元に渡されます。 null以外の回答を生成する可能性のある他のファクトリの検索は中止されます。ファクトリは、それが唯一の意図されたファクトリであり、他のファクトリを試してはならないことが確実な場合にのみ、例外をスローする必要があります。このファクトリが提供された引数を使用してオブジェクトを作成できない場合は、nullを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="86e9ee1cb6edb165bdea53c864741fcfebb100c1" translate="yes" xml:space="preserve">
          <source>When an exception is thrown by a factory, the exception is passed on to the caller of &lt;code&gt;NamingManager.getStateToBind()&lt;/code&gt; and &lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt;. The search for other factories that may produce a non-null answer is halted. A factory should only throw an exception if it is sure that it is the only intended factory and that no other factories should be tried. If this factory cannot create an object using the arguments supplied, it should return null.</source>
          <target state="translated">ファクトリによって例外がスローされると、例外は &lt;code&gt;NamingManager.getStateToBind()&lt;/code&gt; および &lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt; の呼び出し元に渡されます。 null以外の回答を生成する可能性のある他のファクトリの検索は中止されます。ファクトリは、それが唯一の意図されたファクトリであり、他のファクトリを試してはならないことが確実な場合にのみ、例外をスローする必要があります。このファクトリが提供された引数を使用してオブジェクトを作成できない場合は、nullを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="f619bd42e631fde289b18b2557593f0674f15c8e" translate="yes" xml:space="preserve">
          <source>When an exception is thrown by an object factory, the exception is passed on to the caller of &lt;code&gt;DirectoryManager.getObjectInstance()&lt;/code&gt;. The search for other factories that may produce a non-null answer is halted. An object factory should only throw an exception if it is sure that it is the only intended factory and that no other object factories should be tried. If this factory cannot create an object using the arguments supplied, it should return null.</source>
          <target state="translated">オブジェクトファクトリによって例外がスローされると、例外は &lt;code&gt;DirectoryManager.getObjectInstance()&lt;/code&gt; の呼び出し元に渡されます。null以外の回答を生成する可能性のある他のファクトリの検索は中止されます。オブジェクトファクトリは、それが唯一の意図されたファクトリであり、他のオブジェクトファクトリを試してはならないことが確実な場合にのみ、例外をスローする必要があります。このファクトリが提供された引数を使用してオブジェクトを作成できない場合は、nullを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="92d645b31af0488c8796e3e157fa1f6cd126e2c8" translate="yes" xml:space="preserve">
          <source>When an implementation supports operations on entries in the directory that execute in a race-free manner then the returned directory stream is a &lt;a href=&quot;securedirectorystream&quot;&gt;&lt;code&gt;SecureDirectoryStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">実装が競合のない方法で実行されるディレクトリのエントリに対する操作をサポートする場合、返されるディレクトリストリームは&lt;a href=&quot;securedirectorystream&quot;&gt; &lt;code&gt;SecureDirectoryStream&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="2052382560398859691564bf3c293b964fc894ad" translate="yes" xml:space="preserve">
          <source>When an input source is set (using the &lt;code&gt;setInput&lt;/code&gt; method), it may be marked as &quot;seek forward only&quot;. This setting means that images contained within the input source will only be read in order, possibly allowing the reader to avoid caching portions of the input containing data associated with images that have been read previously.</source>
          <target state="translated">入力ソースが（ &lt;code&gt;setInput&lt;/code&gt; メソッドを使用して）設定されると、「シークフォワードのみ」としてマークされる場合があります。この設定は、入力ソース内に含まれる画像が順番に読み取られるだけであることを意味し、リーダーは、以前に読み取られた画像に関連付けられたデータを含む入力の部分をキャッシュしないようにすることができます。</target>
        </trans-unit>
        <trans-unit id="7d2fac9efec8951293a4b9ad29501c8bcc43c755" translate="yes" xml:space="preserve">
          <source>When an instance of this class is used as a delegate for the implementation of the BeanContext protocols (and its subprotocols) there exists a 'chicken and egg' problem during deserialization</source>
          <target state="translated">このクラスのインスタンスがBeanContextプロトコル(およびそのサブプロトコル)の実装のためのデリゲートとして使用される場合,デシリアライゼーションの間に「鶏と卵」の問題が存在します.</target>
        </trans-unit>
        <trans-unit id="f93de7fe2101ac2a970987b76df77b95b8fe1afa" translate="yes" xml:space="preserve">
          <source>When an interior node in the namespace tree has been renamed, the topmost node which is part of the listener's scope should used to generate a rename event. The extent to which this can be supported is provider-specific. For example, a service might generate rename notifications for all descendants of the changed interior node and the corresponding provider might not be able to prevent those notifications from being propagated to the listeners.</source>
          <target state="translated">名前空間ツリーの内部ノードがリネームされた場合、リスナーのスコープに含まれる最上位のノードを使用してリネームイベントを生成する必要があります。これをどこまでサポートできるかはプロバイダごとに異なります。例えば、サービスは変更された内部ノードのすべての子孫に対してリネーム通知を生成し、対応するプロバイダはそれらの通知がリスナーに伝搬するのを防ぐことができないかもしれません。</target>
        </trans-unit>
        <trans-unit id="fbb2b60ef4c108dabfab274ea6d643ccbd813a96" translate="yes" xml:space="preserve">
          <source>When an m-let text file is loaded, an instance of each MBean specified in the file is created and registered.</source>
          <target state="translated">m-let テキストファイルを読み込むと、そのファイルで指定された MBean のインスタンスが生成され、登録されます。</target>
        </trans-unit>
        <trans-unit id="a6d8aaee8e31c5a9c8176090117cbab7f1fb2776" translate="yes" xml:space="preserve">
          <source>When an object implementing interface &lt;code&gt;Runnable&lt;/code&gt; is used to create a thread, starting the thread causes the object's &lt;code&gt;run&lt;/code&gt; method to be called in that separately executing thread.</source>
          <target state="translated">オブジェクト実装インターフェースの &lt;code&gt;Runnable&lt;/code&gt; を使用してスレッドを作成する場合、スレッドを開始すると、オブジェクトの &lt;code&gt;run&lt;/code&gt; メソッドがその個別に実行されているスレッドで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d44aeda78b237a6dbd1402c72d9234eba39323f7" translate="yes" xml:space="preserve">
          <source>When an object is registered in the MBean Server using the &lt;code&gt;registerMBean&lt;/code&gt; or &lt;code&gt;createMBean&lt;/code&gt; methods of the &lt;a href=&quot;mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt; interface, the object's class is examined to determine what type of MBean it is:</source>
          <target state="translated">&lt;a href=&quot;mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt;インターフェースの &lt;code&gt;registerMBean&lt;/code&gt; メソッドまたは &lt;code&gt;createMBean&lt;/code&gt; メソッドを使用してオブジェクトがMBeanサーバーに登録されると、オブジェクトのクラスが調べられ、MBeanのタイプが判別されます。</target>
        </trans-unit>
        <trans-unit id="c2972251c7a28b4528fe63074ce4c9c1bf8739a3" translate="yes" xml:space="preserve">
          <source>When an object named &quot;x/y&quot; is subsequently deleted, the corresponding &lt;code&gt;NamingEvent&lt;/code&gt; (&lt;code&gt;evt&lt;/code&gt;) must contain:</source>
          <target state="translated">「x / y」という名前のオブジェクトが後で削除される場合、対応する &lt;code&gt;NamingEvent&lt;/code&gt; （ &lt;code&gt;evt&lt;/code&gt; ）には以下が含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="918b1ed8da41a8cca49ec39767c9d3ef9075b75b" translate="yes" xml:space="preserve">
          <source>When an observable object is newly created, its set of observers is empty. Two observers are considered the same if and only if the &lt;code&gt;equals&lt;/code&gt; method returns true for them.</source>
          <target state="translated">監視可能なオブジェクトが新しく作成されると、そのオブザーバーのセットは空になります。 &lt;code&gt;equals&lt;/code&gt; メソッドがtrueを返す場合に限り、2人のオブザーバーは同じと見なされます。</target>
        </trans-unit>
        <trans-unit id="784d4ec1dda97713a3424a2f8d9aa99d1febb449" translate="yes" xml:space="preserve">
          <source>When an observed attribute crosses the high threshold, if the &lt;em&gt;notify high&lt;/em&gt; flag is true, then a notification is sent. Subsequent crossings of the high threshold value will not trigger further notifications until the gauge value becomes less than or equal to the low threshold.</source>
          <target state="translated">監視対象の属性が上限しきい値を超えたときに、上限&lt;em&gt;通知&lt;/em&gt;フラグがtrueの場合、通知が送信されます。その後、高しきい値を超えても、ゲージ値が低しきい値以下になるまで、通知はトリガーされません。</target>
        </trans-unit>
        <trans-unit id="1f5d6ec3eb5a523cc7305bf106145613183ee461" translate="yes" xml:space="preserve">
          <source>When an observed attribute crosses the low threshold, if the &lt;em&gt;notify low&lt;/em&gt; flag is true, then a notification is sent. Subsequent crossings of the low threshold value will not trigger further notifications until the gauge value becomes greater than or equal to the high threshold.</source>
          <target state="translated">監視対象の属性が下限しきい値を超えたときに、下限&lt;em&gt;通知&lt;/em&gt;フラグがtrueの場合、通知が送信されます。その後、下限しきい値を超えても、ゲージ値が上限しきい値以上になるまで、通知はトリガーされません。</target>
        </trans-unit>
        <trans-unit id="8376d748bc3d8b953550a26d5a316d63742f727e" translate="yes" xml:space="preserve">
          <source>When an output device is stopped, the device usually indicates its condition in human readable form locally at the device. A client can obtain more complete device status remotely by querying the printer's &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attributes.</source>
          <target state="translated">出力デバイスが停止すると、デバイスは通常、その状態を人間が読める形式でデバイスのローカルに示します。クライアントは、プリンターの&lt;a href=&quot;printerstate&quot;&gt; &lt;code&gt;PrinterState&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; &lt;/a&gt;属性を照会することにより、リモートでより完全なデバイスステータスを取得できます。</target>
        </trans-unit>
        <trans-unit id="cf1414265b010571580fbf696282e71d50cfa5f8" translate="yes" xml:space="preserve">
          <source>When both &lt;code&gt;lockedMonitors&lt;/code&gt; and &lt;code&gt;lockedSynchronizers&lt;/code&gt; parameters are &lt;code&gt;false&lt;/code&gt;, it is equivalent to calling:</source>
          <target state="translated">&lt;code&gt;lockedSynchronizers&lt;/code&gt; パラメータとlockedSynchronizersパラメータの両方が &lt;code&gt;false&lt;/code&gt; の場合、 &lt;code&gt;lockedMonitors&lt;/code&gt; 呼び出しと同等です。</target>
        </trans-unit>
        <trans-unit id="3bb6d7fddd6b84f1b1c496762483d19e659acc05" translate="yes" xml:space="preserve">
          <source>When cached value was set.</source>
          <target state="translated">キャッシュされた値が設定されていた場合</target>
        </trans-unit>
        <trans-unit id="b53c0fffa0b51e47d71e7136baf9352bd22f9aa3" translate="yes" xml:space="preserve">
          <source>When called with &lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt;&lt;code&gt;invokeExact&lt;/code&gt;&lt;/a&gt;, the adapter invokes the target with no argument changes. (&lt;em&gt;Note:&lt;/em&gt; This behavior is different from a &lt;a href=&quot;methodhandle#asCollector-java.lang.Class-int-&quot;&gt;fixed arity collector&lt;/a&gt;, since it accepts a whole array of indeterminate length, rather than a fixed number of arguments.)</source>
          <target state="translated">&lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt; &lt;code&gt;invokeExact&lt;/code&gt; &lt;/a&gt;で呼び出されると、アダプターは引数を変更せずにターゲットを呼び出します。（&lt;em&gt;注：&lt;/em&gt;この動作は、固定数の引数ではなく、長さが不定の配列全体を受け入れるため、&lt;a href=&quot;methodhandle#asCollector-java.lang.Class-int-&quot;&gt;固定アリティコレクター&lt;/a&gt;とは異なります。）</target>
        </trans-unit>
        <trans-unit id="4a0161ca009c0dbbc06ce2b6680929152732b54d" translate="yes" xml:space="preserve">
          <source>When called with plain, inexact &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt;, if the caller type is the same as the adapter, the adapter invokes the target as with &lt;code&gt;invokeExact&lt;/code&gt;. (This is the normal behavior for &lt;code&gt;invoke&lt;/code&gt; when types match.)</source>
          <target state="translated">単純な不正確な&lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;で呼び出された場合、呼び出し元のタイプがアダプターと同じである場合、アダプターは &lt;code&gt;invokeExact&lt;/code&gt; と同様にターゲットを呼び出します。（これは、タイプが一致する場合の &lt;code&gt;invoke&lt;/code&gt; の通常の動作です。）</target>
        </trans-unit>
        <trans-unit id="d2f5017e66f8dea9b28eb6f14ce79dfd0d322eb3" translate="yes" xml:space="preserve">
          <source>When called, indicates that compression should end with the current contents of the input buffer.</source>
          <target state="translated">呼び出された場合、圧縮は入力バッファの現在の内容で終了することを示します。</target>
        </trans-unit>
        <trans-unit id="f8858e1ea3fd1c36363ba040b10db093a73798d1" translate="yes" xml:space="preserve">
          <source>When called, the adapter replaces a trailing array argument by the array's elements, each as its own argument to the target. (The order of the arguments is preserved.) They are converted pairwise by casting and/or unboxing to the types of the trailing parameters of the target. Finally the target is called. What the target eventually returns is returned unchanged by the adapter.</source>
          <target state="translated">このアダプタがコールされると、アダプタは、末尾の配列の引数を配列の要素で置き換えます (引数の順序は保持されます)。(引数の順番は保持されます。)これらの要素は、ターゲットの末尾のパラメータの型にキャストおよび/またはアンボックス化することで、 ペアワイズ変換されます。最後にターゲットが呼び出されます。ターゲットが最終的に返すものは、アダプタによって変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="32698ba91a41a47b1415719cfb3ee4d88be1ebde" translate="yes" xml:space="preserve">
          <source>When called, the adapter replaces its trailing &lt;code&gt;arrayLength&lt;/code&gt; arguments by a single new array of type &lt;code&gt;arrayType&lt;/code&gt;, whose elements comprise (in order) the replaced arguments. Finally the target is called. What the target eventually returns is returned unchanged by the adapter.</source>
          <target state="translated">呼び出されると、アダプターは末尾の &lt;code&gt;arrayLength&lt;/code&gt; 引数をタイプが &lt;code&gt;arrayType&lt;/code&gt; の単一の新しい配列に置き換えます。最後に、ターゲットが呼び出されます。ターゲットが最終的に返すものは、アダプターによって変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="1d41427d5f2ba9b4f876eb45c993fa83acbb6861" translate="yes" xml:space="preserve">
          <source>When called, the bound handle inserts the given value &lt;code&gt;x&lt;/code&gt; as a new leading argument to the target. The other arguments are also passed unchanged. What the target eventually returns is returned unchanged by the bound handle.</source>
          <target state="translated">バインドされたハンドルが呼び出されると、指定された値 &lt;code&gt;x&lt;/code&gt; がターゲットの新しい先行引数として挿入されます。他の引数も変更されずに渡されます。ターゲットが最終的に返すものは、バインドされたハンドルによって変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="07e47dd6263746d4e6b3656f67f0733f7b685387" translate="yes" xml:space="preserve">
          <source>When called, the handle will treat the first argument as a receiver and dispatch on the receiver's type to determine which method implementation to enter. (The dispatching action is identical with that performed by an &lt;code&gt;invokevirtual&lt;/code&gt; or &lt;code&gt;invokeinterface&lt;/code&gt; instruction.)</source>
          <target state="translated">呼び出されると、ハンドルは最初の引数をレシーバーとして扱い、レシーバーのタイプにディスパッチして、どのメソッド実装に入るかを決定します。（ディスパッチアクションは、 &lt;code&gt;invokevirtual&lt;/code&gt; または &lt;code&gt;invokeinterface&lt;/code&gt; 命令によって実行されるアクションと同じです。）</target>
        </trans-unit>
        <trans-unit id="2391920a3b69011b129eed441073582d616d0af6" translate="yes" xml:space="preserve">
          <source>When changes are made to this &lt;code&gt;DirContext&lt;/code&gt;, the effect on enumerations returned by prior calls to this method is undefined.</source>
          <target state="translated">この &lt;code&gt;DirContext&lt;/code&gt; に変更が加えられた場合、このメソッドへの以前の呼び出しによって返された列挙への影響は未定義です。</target>
        </trans-unit>
        <trans-unit id="a1a9496b1bc6bdad32600169e992ba4825384491" translate="yes" xml:space="preserve">
          <source>When comparing corresponding components of two URIs, if one component is undefined but the other is defined then the first is considered to be less than the second. Unless otherwise noted, string components are ordered according to their natural, case-sensitive ordering as defined by the &lt;a href=&quot;../lang/comparable#compareTo-T-&quot;&gt;&lt;code&gt;String.compareTo&lt;/code&gt;&lt;/a&gt; method. String components that are subject to encoding are compared by comparing their raw forms rather than their encoded forms.</source>
          <target state="translated">2つのURIの対応するコンポーネントを比較するときに、一方のコンポーネントが未定義で、もう一方が定義されている場合、最初のコンポーネントは2番目のコンポーネントよりも小さいと見なされます。特に明記しない限り、文字列コンポーネントは、&lt;a href=&quot;../lang/comparable#compareTo-T-&quot;&gt; &lt;code&gt;String.compareTo&lt;/code&gt; &lt;/a&gt;メソッドで定義されている、大文字と小文字が区別される自然な順序に従って並べられます。エンコードの対象となる文字列コンポーネントは、エンコードされた形式ではなく生の形式を比較することによって比較されます。</target>
        </trans-unit>
        <trans-unit id="2103fe1187cedfb38f65d7ce9c0819c612ec17eb" translate="yes" xml:space="preserve">
          <source>When computing a date and time from the calendar fields, there may be insufficient information for the computation (such as only year and month with no day of month), or there may be inconsistent information (such as Tuesday, July 15, 1996 (Gregorian) -- July 15, 1996 is actually a Monday). &lt;code&gt;Calendar&lt;/code&gt; will resolve calendar field values to determine the date and time in the following way.</source>
          <target state="translated">カレンダーフィールドから日付と時刻を計算する場合、計算に十分な情報がない（年と月だけで月の日付がないなど）か、情報に一貫性がない可能性があります（1996年7月15日火曜日など）（Gregorian ）-1996年7月15日は実際には月曜日です）。 &lt;code&gt;Calendar&lt;/code&gt; は、以下の方法で日付と時刻を決定するためにカレンダーフィールド値を解決します。</target>
        </trans-unit>
        <trans-unit id="0dcc686243f0157dc4e782a735e5dde3570a33bc" translate="yes" xml:space="preserve">
          <source>When concatenated with a class attribute name, indicates the format of that attribute, using the layout language specified in the JSR 200 specification.</source>
          <target state="translated">クラス属性名と連結した場合、JSR200 仕様で規定されているレイアウト言語を用いて、その属性の形式を示す。</target>
        </trans-unit>
        <trans-unit id="6c481650236192705c8984496664400b25ae4018" translate="yes" xml:space="preserve">
          <source>When concatenated with a code attribute name, indicates the format of that attribute. For example, the effect of this option is built in: &lt;code&gt;pack.code.attribute.LocalVariableTable=NH[PHOHRUHRSHH]&lt;/code&gt;. The special strings &lt;a href=&quot;pack200.packer#ERROR&quot;&gt;&lt;code&gt;ERROR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pack200.packer#STRIP&quot;&gt;&lt;code&gt;STRIP&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;pack200.packer#PASS&quot;&gt;&lt;code&gt;PASS&lt;/code&gt;&lt;/a&gt; are also allowed.</source>
          <target state="translated">コード属性名と連結される場合、その属性の形式を示します。たとえば、このオプションの効果は、 &lt;code&gt;pack.code.attribute.LocalVariableTable=NH[PHOHRUHRSHH]&lt;/code&gt; 。特別な文字列&lt;a href=&quot;pack200.packer#ERROR&quot;&gt; &lt;code&gt;ERROR&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;pack200.packer#STRIP&quot;&gt; &lt;code&gt;STRIP&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;pack200.packer#PASS&quot;&gt; &lt;code&gt;PASS&lt;/code&gt; &lt;/a&gt;も使用できます。</target>
        </trans-unit>
        <trans-unit id="69b68d3b1ed8dc49253990c27eccbd09190abb43" translate="yes" xml:space="preserve">
          <source>When concatenated with a field attribute name, indicates the format of that attribute. For example, the effect of this option is built in: &lt;code&gt;pack.field.attribute.Deprecated=&lt;/code&gt;. The special strings &lt;a href=&quot;pack200.packer#ERROR&quot;&gt;&lt;code&gt;ERROR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pack200.packer#STRIP&quot;&gt;&lt;code&gt;STRIP&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;pack200.packer#PASS&quot;&gt;&lt;code&gt;PASS&lt;/code&gt;&lt;/a&gt; are also allowed.</source>
          <target state="translated">フィールド属性名と連結される場合、その属性の形式を示します。たとえば、このオプションの効果は &lt;code&gt;pack.field.attribute.Deprecated=&lt;/code&gt; 組み込まれています。特別な文字列&lt;a href=&quot;pack200.packer#ERROR&quot;&gt; &lt;code&gt;ERROR&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;pack200.packer#STRIP&quot;&gt; &lt;code&gt;STRIP&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;pack200.packer#PASS&quot;&gt; &lt;code&gt;PASS&lt;/code&gt; &lt;/a&gt;も使用できます。</target>
        </trans-unit>
        <trans-unit id="b1b39538a51627baa398137ae5124f3674a47944" translate="yes" xml:space="preserve">
          <source>When concatenated with a method attribute name, indicates the format of that attribute. For example, the effect of this option is built in: &lt;code&gt;pack.method.attribute.Exceptions=NH[RCH]&lt;/code&gt;. The special strings &lt;a href=&quot;pack200.packer#ERROR&quot;&gt;&lt;code&gt;ERROR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pack200.packer#STRIP&quot;&gt;&lt;code&gt;STRIP&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;pack200.packer#PASS&quot;&gt;&lt;code&gt;PASS&lt;/code&gt;&lt;/a&gt; are also allowed.</source>
          <target state="translated">メソッド属性名と連結される場合、その属性の形式を示します。たとえば、このオプションの効果は &lt;code&gt;pack.method.attribute.Exceptions=NH[RCH]&lt;/code&gt; 組み込まれています。特別な文字列&lt;a href=&quot;pack200.packer#ERROR&quot;&gt; &lt;code&gt;ERROR&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;pack200.packer#STRIP&quot;&gt; &lt;code&gt;STRIP&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;pack200.packer#PASS&quot;&gt; &lt;code&gt;PASS&lt;/code&gt; &lt;/a&gt;も使用できます。</target>
        </trans-unit>
        <trans-unit id="715e1e84dcaa0489832f5e6cede42eba32b7afd9" translate="yes" xml:space="preserve">
          <source>When constructed as fair, threads contend for entry using an approximately arrival-order policy. When the currently held lock is released, either the longest-waiting single writer thread will be assigned the write lock, or if there is a group of reader threads waiting longer than all waiting writer threads, that group will be assigned the read lock.</source>
          <target state="translated">フェアとして構築されている場合、スレッドはほぼ到着順のポリシーを使用してエントリを競います。現在保持しているロックが解放されると、最も長く待っている単一のライタースレッドに書き込みロックが割り当てられるか、すべてのライタースレッドよりも長く待っているリーダースレッドのグループがある場合は、そのグループに読み取りロックが割り当てられます。</target>
        </trans-unit>
        <trans-unit id="61fbad8d5157fa12e2924a0b101d7488fca8edd0" translate="yes" xml:space="preserve">
          <source>When constructed as non-fair (the default), the order of entry to the read and write lock is unspecified, subject to reentrancy constraints. A nonfair lock that is continuously contended may indefinitely postpone one or more reader or writer threads, but will normally have higher throughput than a fair lock.</source>
          <target state="translated">非フェア(デフォルト)として構築されている場合、リードロックとライトロックへのエントリの順序は、リエントランシー制約の影響を受けて不特定です。継続的に競合するノンフェアロックは、1 つ以上のリーダまたはライタースレッドを無期限に延期する可能性がありますが、通常はフェアロックよりも高いスループットが得られます。</target>
        </trans-unit>
        <trans-unit id="0e952a0329782ab3d664a78b3d191c4eda125051" translate="yes" xml:space="preserve">
          <source>When constructing a JAR url via &lt;code&gt;new URL(context, spec)&lt;/code&gt;, the following rules apply:</source>
          <target state="translated">&lt;code&gt;new URL(context, spec)&lt;/code&gt; を介してJAR urlを構築する場合、次の規則が適用されます。</target>
        </trans-unit>
        <trans-unit id="41c8b69db960d9e4b36a2e8b2f092f79ddba9a4f" translate="yes" xml:space="preserve">
          <source>When constructing new JavaFileObjects, the file manager must determine where to create them. For example, if a file manager manages regular files on a file system, it would most likely have a current/working directory to use as default location when creating or finding files. A number of hints can be provided to a file manager as to where to create files. Any file manager might choose to ignore these hints.</source>
          <target state="translated">新しいJavaFileObjectを構築するとき、ファイル・マネージャは、それらをどこに作成するかを決定しなければなりません。たとえば、ファイル・マネージャがファイル・システム上で通常のファイルを管理している場合、ほとんどの場合、ファイルを作成したり見つけたりするときのデフォルトの場所として使用するカレント/ワーキング・ディレクトリがあるでしょう。ファイルをどこに作成するかについては、多くのヒントをファイルマネージャに提供することができます。どのファイルマネージャも、これらのヒントを無視することを選択するかもしれません。</target>
        </trans-unit>
        <trans-unit id="a964eaa3b3cf4ad1eed4195c0e00287e21036db6" translate="yes" xml:space="preserve">
          <source>When converting back to &lt;code&gt;ZonedDateTime&lt;/code&gt;, if the local date-time is in an overlap, then the offset will be retained if possible, otherwise the earlier offset will be used. If in a gap, the local date-time will be adjusted forward by the length of the gap.</source>
          <target state="translated">&lt;code&gt;ZonedDateTime&lt;/code&gt; に変換し直すときに、ローカルの日付と時刻が重複している場合、可能であればオフセットが保持されます。それ以外の場合は、以前のオフセットが使用されます。ギャップがある場合、ローカルの日時はギャップの長さだけ前方に調整されます。</target>
        </trans-unit>
        <trans-unit id="330033318b9b32fd36ddd46bb1ced3469157a8be" translate="yes" xml:space="preserve">
          <source>When creating a &lt;code&gt;ChoiceFormat&lt;/code&gt;, you must specify an array of formats and an array of limits. The length of these arrays must be the same. For example,</source>
          <target state="translated">&lt;code&gt;ChoiceFormat&lt;/code&gt; を作成するときは、フォーマットの配列と制限の配列を指定する必要があります。これらの配列の長さは同じでなければなりません。例えば、</target>
        </trans-unit>
        <trans-unit id="f380ad1809365a52c2f779b295ad176ba7cee1fe" translate="yes" xml:space="preserve">
          <source>When creating a &lt;code&gt;TimeZone&lt;/code&gt;, the specified custom time zone ID is normalized in the following syntax:</source>
          <target state="translated">&lt;code&gt;TimeZone&lt;/code&gt; を作成するとき、指定されたカスタムタイムゾーンIDは次の構文で正規化されます。</target>
        </trans-unit>
        <trans-unit id="b9ab1915b79f38ba00b3dd084c59f43fd7b1a097" translate="yes" xml:space="preserve">
          <source>When creating a connector client or server, it is possible to supply an object of type &lt;a href=&quot;../../../java/util/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; that defines additional parameters. Each entry in this Map has a key that is a string and an associated value whose type is appropriate for that key. The standard keys defined by the JMX Remote API all begin with the string &quot;&lt;code&gt;jmx.remote.&lt;/code&gt;&quot;. The document &lt;em&gt;JMX Remote API&lt;/em&gt; lists these standard keys.</source>
          <target state="translated">コネクタクライアントまたはサーバーを作成するときに、追加のパラメーターを定義するタイプ&lt;a href=&quot;../../../java/util/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; の&lt;/a&gt;オブジェクトを提供することができます。このマップの各エントリには、文字列であるキーと、そのキーに適したタイプの値が関連付けられています。JMX Remote APIによって定義された標準キーはすべて、文字列 &quot; &lt;code&gt;jmx.remote.&lt;/code&gt; &quot;で始まります。ドキュメント&lt;em&gt;JMX Remote APIに&lt;/em&gt;は、これらの標準キーがリストされています。</target>
        </trans-unit>
        <trans-unit id="96d5bb0b77a90195ba6f2cbc3333bf0e862753f3" translate="yes" xml:space="preserve">
          <source>When creating a new file this option is a &lt;em&gt;hint&lt;/em&gt; that the new file will be sparse. This option is ignored when not creating a new file.</source>
          <target state="translated">新しいファイルを作成するとき、このオプションは新しいファイルがまばらになるという&lt;em&gt;ヒント&lt;/em&gt;になります。新しいファイルを作成しない場合、このオプションは無視されます。</target>
        </trans-unit>
        <trans-unit id="c39abb2d7aabb3ded864546db651700da7057721" translate="yes" xml:space="preserve">
          <source>When creating a subclass of InitialContext, use this method as follows. Define a new method that uses this method to get an initial context of the desired subclass.</source>
          <target state="translated">InitialContextのサブクラスを作成する際には、以下のようにこのメソッドを使用します。このメソッドを使用して、目的のサブクラスの初期コンテキストを取得する新しいメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="61fdfc98284714085a633464250d1ada20371927" translate="yes" xml:space="preserve">
          <source>When data is being transported using MIDI wire protocol, a &lt;code&gt;&lt;a href=&quot;shortmessage&quot;&gt;&lt;code&gt;ShortMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; with the status value &lt;code&gt;0xFF&lt;/code&gt; represents a system reset message. In MIDI files, this same status value denotes a &lt;code&gt;MetaMessage&lt;/code&gt;. The types of meta-message are distinguished from each other by the first byte that follows the status byte &lt;code&gt;0xFF&lt;/code&gt;. The subsequent bytes are data bytes. As with system exclusive messages, there are an arbitrary number of data bytes, depending on the type of &lt;code&gt;MetaMessage&lt;/code&gt;.</source>
          <target state="translated">MIDIワイヤプロトコルを使用してデータが転送されている場合、ステータス値 &lt;code&gt;0xFF&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;shortmessage&quot;&gt;&lt;code&gt;ShortMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; はシステムリセットメッセージを表します。 MIDIファイルでは、この同じステータス値は &lt;code&gt;MetaMessage&lt;/code&gt; を示します。メタメッセージのタイプは、ステータスバイト &lt;code&gt;0xFF&lt;/code&gt; に続く最初のバイトによって互いに区別されます。後続のバイトはデータバイトです。システムエクスクルーシブメッセージと同様に、 &lt;code&gt;MetaMessage&lt;/code&gt; のタイプに応じて、任意の数のデータバイトがあります。</target>
        </trans-unit>
        <trans-unit id="538871f766ab351c2d645502820fda06341f2446" translate="yes" xml:space="preserve">
          <source>When decoding, the &lt;code&gt;UTF-16&lt;/code&gt; charset interprets the byte-order mark at the beginning of the input stream to indicate the byte-order of the stream but defaults to big-endian if there is no byte-order mark; when encoding, it uses big-endian byte order and writes a big-endian byte-order mark.</source>
          <target state="translated">デコード時に、 &lt;code&gt;UTF-16&lt;/code&gt; 文字セットは入力ストリームの先頭のバイト順マークを解釈してストリームのバイト順を示しますが、バイト順マークがない場合はデフォルトでビッグエンディアンになります。エンコード時には、ビッグエンディアンのバイトオーダーを使用し、ビッグエンディアンのバイトオーダーマークを書き込みます。</target>
        </trans-unit>
        <trans-unit id="5d918b0ea7fbe3a38f352e3c01e13aa510f07228" translate="yes" xml:space="preserve">
          <source>When decoding, the &lt;code&gt;UTF-16BE&lt;/code&gt; and &lt;code&gt;UTF-16LE&lt;/code&gt; charsets interpret the initial byte-order marks as a &lt;small&gt;ZERO-WIDTH NON-BREAKING SPACE&lt;/small&gt;; when encoding, they do not write byte-order marks.</source>
          <target state="translated">デコード時に、 &lt;code&gt;UTF-16BE&lt;/code&gt; および &lt;code&gt;UTF-16LE&lt;/code&gt; 文字セットは、最初のバイト順マークを&lt;small&gt;ZERO-WIDTH NON-BREAKING SPACE&lt;/small&gt;として解釈します。エンコード時には、バイト順マークは書き込まれません。</target>
        </trans-unit>
        <trans-unit id="59dd531cc5c7b8c2c34d67569898edd73dd7c276" translate="yes" xml:space="preserve">
          <source>When developing your bean, you can implement the bean features required for your application task omitting the rest of the &lt;code&gt;BeanInfo&lt;/code&gt; features. They will be obtained through the automatic analysis by using the low-level reflection of the bean methods and applying standard design patterns. You have an opportunity to provide additional bean information through various descriptor classes.</source>
          <target state="translated">Beanを開発する場合、アプリケーションタスクに必要なBean機能を実装して、残りの &lt;code&gt;BeanInfo&lt;/code&gt; 機能を省略できます。それらは、Beanメソッドの低レベルの反映を使用し、標準の設計パターンを適用することによる自動分析を通じて取得されます。さまざまな記述子クラスを通じて追加のBean情報を提供する機会があります。</target>
        </trans-unit>
        <trans-unit id="1145f6b1027e817559c57cddc450ec5598c076bb" translate="yes" xml:space="preserve">
          <source>When elements are specified individually, this method provides a convenient way to add a few elements to an existing collection:</source>
          <target state="translated">要素が個別に指定されている場合、このメソッドは既存のコレクションにいくつかの要素を追加する便利な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="f0547e7d1fe9e7682b31c5b8e679a8b7cf7cdac7" translate="yes" xml:space="preserve">
          <source>When encoding a String, the following rules apply:</source>
          <target state="translated">文字列をエンコードする場合は、以下のルールが適用されます。</target>
        </trans-unit>
        <trans-unit id="519e81f7ec22f984619e01262e1e5c7f97e82d8a" translate="yes" xml:space="preserve">
          <source>When executed in parallel, multiple intermediate results may be instantiated, populated, and merged so as to maintain isolation of mutable data structures. Therefore, even when executed in parallel with non-thread-safe data structures (such as &lt;code&gt;ArrayList&lt;/code&gt;), no additional synchronization is needed for a parallel reduction.</source>
          <target state="translated">並列実行すると、可変データ構造の分離を維持するために、複数の中間結果がインスタンス化、入力、およびマージされます。したがって、スレッドセーフではないデータ構造（ &lt;code&gt;ArrayList&lt;/code&gt; など）と並行して実行された場合でも、並行縮小のために追加の同期は必要ありません。</target>
        </trans-unit>
        <trans-unit id="9649a12169ece945cbfdacee36bb86668bdc338e" translate="yes" xml:space="preserve">
          <source>When first constructed, an &lt;code&gt;X509CRLSelector&lt;/code&gt; has no criteria enabled and each of the &lt;code&gt;get&lt;/code&gt; methods return a default value (&lt;code&gt;null&lt;/code&gt;). Therefore, the &lt;a href=&quot;x509crlselector#match-java.security.cert.CRL-&quot;&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; method would return &lt;code&gt;true&lt;/code&gt; for any &lt;code&gt;X509CRL&lt;/code&gt;. Typically, several criteria are enabled (by calling &lt;a href=&quot;x509crlselector#setIssuers-java.util.Collection-&quot;&gt;&lt;code&gt;setIssuers&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;x509crlselector#setDateAndTime-java.util.Date-&quot;&gt;&lt;code&gt;setDateAndTime&lt;/code&gt;&lt;/a&gt;, for instance) and then the &lt;code&gt;X509CRLSelector&lt;/code&gt; is passed to &lt;a href=&quot;certstore#getCRLs-java.security.cert.CRLSelector-&quot;&gt;&lt;code&gt;CertStore.getCRLs&lt;/code&gt;&lt;/a&gt; or some similar method.</source>
          <target state="translated">最初に構築されたとき、 &lt;code&gt;X509CRLSelector&lt;/code&gt; には有効化された基準がなく、各 &lt;code&gt;get&lt;/code&gt; メソッドはデフォルト値（ &lt;code&gt;null&lt;/code&gt; ）を返します。したがって、&lt;a href=&quot;x509crlselector#match-java.security.cert.CRL-&quot;&gt; &lt;code&gt;match&lt;/code&gt; &lt;/a&gt;メソッドは &lt;code&gt;X509CRL&lt;/code&gt; に対して &lt;code&gt;true&lt;/code&gt; を返します。通常、いくつかの基準が有効になり（&lt;a href=&quot;x509crlselector#setDateAndTime-java.util.Date-&quot;&gt; &lt;code&gt;setDateAndTime&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;x509crlselector#setIssuers-java.util.Collection-&quot;&gt; &lt;code&gt;setIssuers&lt;/code&gt; &lt;/a&gt;またはsetDateAndTimeを呼び出すことにより）、 &lt;code&gt;X509CRLSelector&lt;/code&gt; が&lt;a href=&quot;certstore#getCRLs-java.security.cert.CRLSelector-&quot;&gt; &lt;code&gt;CertStore.getCRLs&lt;/code&gt; &lt;/a&gt;または同様のメソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="d650c98b41df8d2991fdd69b36d1bd6550c57b66" translate="yes" xml:space="preserve">
          <source>When first constructed, an &lt;code&gt;X509CertSelector&lt;/code&gt; has no criteria enabled and each of the &lt;code&gt;get&lt;/code&gt; methods return a default value (&lt;code&gt;null&lt;/code&gt;, or &lt;code&gt;-1&lt;/code&gt; for the &lt;a href=&quot;x509certselector#getBasicConstraints--&quot;&gt;&lt;code&gt;getBasicConstraints&lt;/code&gt;&lt;/a&gt; method). Therefore, the &lt;a href=&quot;x509certselector#match-java.security.cert.Certificate-&quot;&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; method would return &lt;code&gt;true&lt;/code&gt; for any &lt;code&gt;X509Certificate&lt;/code&gt;. Typically, several criteria are enabled (by calling &lt;a href=&quot;x509certselector#setIssuer-javax.security.auth.x500.X500Principal-&quot;&gt;&lt;code&gt;setIssuer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;x509certselector#setKeyUsage-boolean:A-&quot;&gt;&lt;code&gt;setKeyUsage&lt;/code&gt;&lt;/a&gt;, for instance) and then the &lt;code&gt;X509CertSelector&lt;/code&gt; is passed to &lt;a href=&quot;certstore#getCertificates-java.security.cert.CertSelector-&quot;&gt;&lt;code&gt;CertStore.getCertificates&lt;/code&gt;&lt;/a&gt; or some similar method.</source>
          <target state="translated">最初に構成するとき、 &lt;code&gt;X509CertSelector&lt;/code&gt; のは全く基準が有効いないとのそれぞれ &lt;code&gt;get&lt;/code&gt; メソッドは、（デフォルトの値を返す &lt;code&gt;null&lt;/code&gt; 、または &lt;code&gt;-1&lt;/code&gt; ため&lt;a href=&quot;x509certselector#getBasicConstraints--&quot;&gt; &lt;code&gt;getBasicConstraints&lt;/code&gt; の&lt;/a&gt;方法）。したがって、すべての &lt;code&gt;X509Certificate&lt;/code&gt; で&lt;a href=&quot;x509certselector#match-java.security.cert.Certificate-&quot;&gt; &lt;code&gt;match&lt;/code&gt; &lt;/a&gt;メソッドは &lt;code&gt;true&lt;/code&gt; を返します。通常、いくつかの基準が有効になり（&lt;a href=&quot;x509certselector#setKeyUsage-boolean:A-&quot;&gt; &lt;code&gt;setKeyUsage&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;x509certselector#setIssuer-javax.security.auth.x500.X500Principal-&quot;&gt; &lt;code&gt;setIssuer&lt;/code&gt; &lt;/a&gt;またはsetKeyUsageを呼び出すことにより）、 &lt;code&gt;X509CertSelector&lt;/code&gt; が&lt;a href=&quot;certstore#getCertificates-java.security.cert.CertSelector-&quot;&gt; &lt;code&gt;CertStore.getCertificates&lt;/code&gt; &lt;/a&gt;または同様のメソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="0ff93d04cdedfee3d54c1d406cb192a14d80e305" translate="yes" xml:space="preserve">
          <source>When formatting, if the temporal object contains a date, then it will be converted to a date in the override chronology. Whether the temporal contains a date is determined by querying the &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt; field. Any time or zone will be retained unaltered unless overridden.</source>
          <target state="translated">書式設定時に、一時オブジェクトに日付が含まれている場合、それはオーバーライド年表で日付に変換されます。テンポラルに日付が含まれているかどうかは、&lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;EPOCH_DAY&lt;/code&gt; &lt;/a&gt;フィールドをクエリすることによって決定されます。オーバーライドしない限り、時間またはゾーンは変更されずに保持されます。</target>
        </trans-unit>
        <trans-unit id="c46c21d901a51405a6408d147e04ecbd8a3f7e31" translate="yes" xml:space="preserve">
          <source>When formatting, if the temporal object contains an instant, then it will be converted to a zoned date-time using the override zone. Whether the temporal is an instant is determined by querying the &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; field. If the input has a chronology then it will be retained unless overridden. If the input does not have a chronology, such as &lt;code&gt;Instant&lt;/code&gt;, then the ISO chronology will be used.</source>
          <target state="translated">書式設定時に、一時オブジェクトにインスタントが含まれている場合、オーバーライドゾーンを使用してゾーン化された日時に変換されます。テンポラルがインスタントかどうかは、&lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt;フィールドを照会することによって決定されます。入力に年表がある場合、上書きされない限り保持されます。入力に &lt;code&gt;Instant&lt;/code&gt; などの年表がない場合は、ISO年表が使用されます。</target>
        </trans-unit>
        <trans-unit id="e3ccef18e16794ea6e4ca8f3deb0092f315cf23d" translate="yes" xml:space="preserve">
          <source>When four parts are specified, each is interpreted as a byte of data and assigned, from left to right, to the four bytes of an IPv4 address.</source>
          <target state="translated">4 つのパーツを指定した場合、それぞれを 1 バイトのデータとして解釈し、左から右へ IPv4 アドレスの 4 バイトに割り当てます。</target>
        </trans-unit>
        <trans-unit id="1ae85906e6fddb6d1dc408436e61d763b88ac485" translate="yes" xml:space="preserve">
          <source>When getting a run with no explicit attributes specified (i.e., calling &lt;a href=&quot;attributedcharacteriterator#getRunStart--&quot;&gt;&lt;code&gt;getRunStart()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;attributedcharacteriterator#getRunLimit--&quot;&gt;&lt;code&gt;getRunLimit()&lt;/code&gt;&lt;/a&gt;), any contiguous text segments having the same attributes (the same set of attribute/value pairs) are treated as separate runs if the attributes have been given to those text segments separately.</source>
          <target state="translated">明示的な属性が指定されていない実行を取得する（つまり、&lt;a href=&quot;attributedcharacteriterator#getRunStart--&quot;&gt; &lt;code&gt;getRunStart()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;attributedcharacteriterator#getRunLimit--&quot;&gt; &lt;code&gt;getRunLimit()&lt;/code&gt; を&lt;/a&gt;呼び出す）と、同じ属性（同じ属性/値のペアのセット）を持つ連続したテキストセグメントは、属性が別の実行として扱われます。それらのテキストセグメントに個別に与えられます。</target>
        </trans-unit>
        <trans-unit id="302acd17292bb6cb5b2e63e5ea447c50cffa715c" translate="yes" xml:space="preserve">
          <source>When invoked on an &lt;code&gt;ArrayType&lt;/code&gt; instance, the &lt;a href=&quot;opentype#getClassName--&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; method returns the class name of the array instances it describes (following the rules defined by the &lt;a href=&quot;../../../java/lang/class#getName--&quot;&gt;&lt;code&gt;getName&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;java.lang.Class&lt;/code&gt;), not the class name of the array elements (which is returned by a call to &lt;code&gt;getElementOpenType().getClassName()&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;ArrayType&lt;/code&gt; インスタンスで呼び出されると、&lt;a href=&quot;opentype#getClassName--&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt;メソッドは、（ &lt;code&gt;java.lang.Class&lt;/code&gt; の&lt;a href=&quot;../../../java/lang/class#getName--&quot;&gt; &lt;code&gt;getName&lt;/code&gt; &lt;/a&gt;メソッドで定義された規則に従って）配列要素のクラス名（これは、 &lt;code&gt;getElementOpenType().getClassName()&lt;/code&gt; への呼び出し）。</target>
        </trans-unit>
        <trans-unit id="580b70b0aa9940a4d315897412a3c8e6a50c10fb" translate="yes" xml:space="preserve">
          <source>When it is desirable to group together a number of Permission objects of the same type, the &lt;code&gt;newPermissionCollection&lt;/code&gt; method on that particular type of Permission object should first be called. The default behavior (from the Permission class) is to simply return null. Subclasses of class Permission override the method if they need to store their permissions in a particular PermissionCollection object in order to provide the correct semantics when the &lt;code&gt;PermissionCollection.implies&lt;/code&gt; method is called. If a non-null value is returned, that PermissionCollection must be used. If null is returned, then the caller of &lt;code&gt;newPermissionCollection&lt;/code&gt; is free to store permissions of the given type in any PermissionCollection they choose (one that uses a Hashtable, one that uses a Vector, etc).</source>
          <target state="translated">同じタイプの複数のPermissionオブジェクトをグループ化することが望ましい場合は、その特定のタイプのPermissionオブジェクトの &lt;code&gt;newPermissionCollection&lt;/code&gt; メソッドを最初に呼び出す必要があります。（Permissionクラスの）デフォルトの動作は、単にnullを返すことです。 &lt;code&gt;PermissionCollection.implies&lt;/code&gt; メソッドが呼び出されたときに正しいセマンティクスを提供するために特定のPermissionCollectionオブジェクトに権限を格納する必要がある場合、クラスPermissionのサブクラスはメソッドをオーバーライドします。null以外の値が返される場合は、そのPermissionCollectionを使用する必要があります。nullが返された場合、 &lt;code&gt;newPermissionCollection&lt;/code&gt; の呼び出し元 選択した任意のPermissionCollection（Hashtableを使用するもの、Vectorを使用するものなど）に、特定のタイプの権限を自由に格納できます。</target>
        </trans-unit>
        <trans-unit id="16ba2f01e5d521afc7a1d8765c061f6962009acc" translate="yes" xml:space="preserve">
          <source>When locking and unlocking occur in different scopes, care must be taken to ensure that all code that is executed while the lock is held is protected by try-finally or try-catch to ensure that the lock is released when necessary.</source>
          <target state="translated">ロックとアンロックが異なるスコープで発生する場合、ロックが保持されている間に実行されるすべてのコードがtry-finallyまたはtry-catchで保護され、必要なときにロックが解除されるように注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="1a0408130f81738a723c33c438670c4461590e47" translate="yes" xml:space="preserve">
          <source>When looking for a &lt;code&gt;ResourceBundle&lt;/code&gt;, the logger will first look at whether a bundle was specified using &lt;a href=&quot;logger#setResourceBundle-java.util.ResourceBundle-&quot;&gt;&lt;code&gt;setResourceBundle&lt;/code&gt;&lt;/a&gt;, and then only whether a resource bundle name was specified through the &lt;a href=&quot;logger#getLogger-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;getLogger&lt;/code&gt;&lt;/a&gt; factory method. If no &lt;code&gt;ResourceBundle&lt;/code&gt; or no resource bundle name is found, then it will use the nearest &lt;code&gt;ResourceBundle&lt;/code&gt; or resource bundle name inherited from its parent tree.</source>
          <target state="translated">&lt;code&gt;ResourceBundle&lt;/code&gt; を探すとき、ロガーは最初に&lt;a href=&quot;logger#setResourceBundle-java.util.ResourceBundle-&quot;&gt; &lt;code&gt;setResourceBundle&lt;/code&gt; &lt;/a&gt;を使用してバンドルが指定されているかどうかを調べ、次に&lt;a href=&quot;logger#getLogger-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;getLogger&lt;/code&gt; &lt;/a&gt;ファクトリメソッドを介してリソースバンドル名が指定されているかどうかだけを調べます。 &lt;code&gt;ResourceBundle&lt;/code&gt; またはリソースバンドル名が見つからない場合、親ツリーから継承された最も近い &lt;code&gt;ResourceBundle&lt;/code&gt; またはリソースバンドル名が使用されます。</target>
        </trans-unit>
        <trans-unit id="b9993ef66f72f6a538299eeaaa5c894846a8a38b" translate="yes" xml:space="preserve">
          <source>When looking up a time zone name, the &lt;a href=&quot;resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt;default &lt;code&gt;Locale&lt;/code&gt; search path of &lt;code&gt;ResourceBundle&lt;/code&gt;&lt;/a&gt; derived from the specified &lt;code&gt;locale&lt;/code&gt; is used. (No &lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt;fallback &lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; search is performed.) If a time zone name in any &lt;code&gt;Locale&lt;/code&gt; of the search path, including &lt;a href=&quot;locale#ROOT&quot;&gt;&lt;code&gt;Locale.ROOT&lt;/code&gt;&lt;/a&gt;, is found, the name is returned. Otherwise, a string in the &lt;a href=&quot;#NormalizedCustomID&quot;&gt;normalized custom ID format&lt;/a&gt; is returned.</source>
          <target state="translated">タイムゾーン名を&lt;a href=&quot;resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt;検索&lt;/a&gt;する場合 &lt;code&gt;Locale&lt;/code&gt; &lt;code&gt;ResourceBundle&lt;/code&gt; 、指定された &lt;code&gt;locale&lt;/code&gt; から派生したResourceBundleのデフォルトのロケール検索パスが使用されます。 （&lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt;フォールバック &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt;検索は実行されません。）&lt;a href=&quot;locale#ROOT&quot;&gt; &lt;code&gt;Locale.ROOT&lt;/code&gt; &lt;/a&gt;を含む、検索パスのいずれかの &lt;code&gt;Locale&lt;/code&gt; でタイムゾーン名が見つかった場合、その名前が返されます。それ以外の場合は、&lt;a href=&quot;#NormalizedCustomID&quot;&gt;正規化されたカスタムID形式の&lt;/a&gt;文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="be5fb3253fce93d08c0e8b8dd053dbdf2da012a3" translate="yes" xml:space="preserve">
          <source>When mapping resource bundle names to &lt;code&gt;ResourceBundle&lt;/code&gt; objects, the logger will first try to use the Thread's &lt;a href=&quot;../../lang/thread#getContextClassLoader--&quot;&gt;context class loader&lt;/a&gt; to map the given resource bundle name to a &lt;code&gt;ResourceBundle&lt;/code&gt;. If the thread context class loader is &lt;code&gt;null&lt;/code&gt;, it will try the &lt;a href=&quot;../../lang/classloader#getSystemClassLoader--&quot;&gt;system class loader&lt;/a&gt; instead. If the &lt;code&gt;ResourceBundle&lt;/code&gt; is still not found, it will use the class loader of the first caller of the &lt;a href=&quot;logger#getLogger-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;getLogger&lt;/code&gt;&lt;/a&gt; factory method.</source>
          <target state="translated">リソースバンドル名を &lt;code&gt;ResourceBundle&lt;/code&gt; オブジェクトにマッピングする場合、ロガーは最初にスレッドの&lt;a href=&quot;../../lang/thread#getContextClassLoader--&quot;&gt;コンテキストクラスローダー&lt;/a&gt;を使用して、指定されたリソースバンドル名を &lt;code&gt;ResourceBundle&lt;/code&gt; にマッピングしようとします。スレッドコンテキストクラスローダーが &lt;code&gt;null&lt;/code&gt; の場合、代わりに&lt;a href=&quot;../../lang/classloader#getSystemClassLoader--&quot;&gt;システムクラスローダー&lt;/a&gt;を試行します。それでも &lt;code&gt;ResourceBundle&lt;/code&gt; が見つからない場合は、&lt;a href=&quot;logger#getLogger-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;getLogger&lt;/code&gt; &lt;/a&gt;ファクトリメソッドの最初の呼び出し元のクラスローダーを使用します。</target>
        </trans-unit>
        <trans-unit id="5817dccb8a24dc56e1279e061808065c8af108b0" translate="yes" xml:space="preserve">
          <source>When multiple certificates are available for use in a handshake, the implementation chooses what it considers the &quot;best&quot; certificate chain available, and transmits that to the other side. This method allows the caller to know which certificate chain was actually sent.</source>
          <target state="translated">ハンドシェイクで複数の証明書が利用可能な場合、実装は、利用可能な「最良の」証明書チェインを選択し、それを相手側に送信する。このメソッドにより、呼び出し元はどの証明書チェーンが実際に送信されたのかを知ることができます。</target>
        </trans-unit>
        <trans-unit id="e3c423c16dcc60cd6b3423d29ca5549e570d4cde" translate="yes" xml:space="preserve">
          <source>When multiple certificates are available for use in a handshake, the implementation chooses what it considers the &quot;best&quot; certificate chain available, and transmits that to the other side. This method allows the caller to know which certificate chain was actually used.</source>
          <target state="translated">ハンドシェイクで複数の証明書が利用可能な場合、実装は、利用可能な「最良の」証明書チェインを選択し、それを相手側に送信する。このメソッドにより、呼び出し元はどの証明書チェーンが実際に使用されたかを知ることができる。</target>
        </trans-unit>
        <trans-unit id="421a63f8d081ab15313773fe4ca2f494ee90642e" translate="yes" xml:space="preserve">
          <source>When names are tested for equality, attribute types, both binary and string values, are case-insensitive. String values with different but equivalent usage of quoting, escaping, or UTF8-hex-encoding are considered equal. The order of components in multi-valued RDNs (such as &quot;ou=Sales+cn=Bob&quot;) is not significant.</source>
          <target state="translated">名前が等しいかどうかがテストされるとき、属性型はバイナリ値と文字列値の両方で大文字小文字を区別しません。クォーティング、エスケープ、または UTF8-hex-encoding の使用法が異なるが同等の文字列値は、等しいとみなされます。多値RDNの構成要素の順序は重要ではありません(&quot;ou=Sales+cn=Bob &quot;など)。</target>
        </trans-unit>
        <trans-unit id="4a545d4bb404c11d8dba04dd5da469b88f7c0cfb" translate="yes" xml:space="preserve">
          <source>When not using the try-with-resources construct, then directory stream's &lt;code&gt;close&lt;/code&gt; method should be invoked after iteration is completed so as to free any resources held for the open directory.</source>
          <target state="translated">try-with-resourcesコンストラクトを使用しない場合、反復が完了した後にディレクトリストリームの &lt;code&gt;close&lt;/code&gt; メソッドを呼び出して、開いているディレクトリ用に保持されているリソースを解放する必要があります。</target>
        </trans-unit>
        <trans-unit id="61d8ce27b955b14a389038bf014cbe85cc67752c" translate="yes" xml:space="preserve">
          <source>When one sends a message to a multicast group, &lt;b&gt;all&lt;/b&gt; subscribing recipients to that host and port receive the message (within the time-to-live range of the packet, see below). The socket needn't be a member of the multicast group to send messages to it.</source>
          <target state="translated">マルチキャストグループにメッセージを送信すると、そのホストとポートにサブスクライブしている&lt;b&gt;すべての&lt;/b&gt;受信者がメッセージを受信します（パケットの存続可能時間の範囲内。以下を参照）。ソケットは、メッセージを送信するためにマルチキャストグループのメンバーである必要はありません。</target>
        </trans-unit>
        <trans-unit id="2c665e1ac4c57d3ccf2437d891eb0ae431f77c0f" translate="yes" xml:space="preserve">
          <source>When only one part is given, the value is stored directly in the network address without any byte rearrangement.</source>
          <target state="translated">1 つの部分だけが与えられた場合、値はバイトの再配置なしにネットワークアドレスに直接格納されます。</target>
        </trans-unit>
        <trans-unit id="1875b9065ed910ca6ec4ee04408f7621f55c467c" translate="yes" xml:space="preserve">
          <source>When opening an existing file, the file is first truncated to a size of 0 bytes. This option is ignored when the file is opened only for reading.</source>
          <target state="translated">既存のファイルを開くとき、そのファイルは最初に 0 バイトのサイズに切り捨てられます。このオプションは、ファイルを読み込むためだけに開いている場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="55ad5bbbd836b22033fccd6daca4b9d44a123e8e" translate="yes" xml:space="preserve">
          <source>When output streaming is enabled, authentication and redirection cannot be handled automatically. A &lt;a href=&quot;httpretryexception&quot;&gt;HttpRetryException&lt;/a&gt; will be thrown when reading the response if authentication or redirection are required. This exception can be queried for the details of the error.</source>
          <target state="translated">出力ストリーミングが有効になっている場合、認証とリダイレクトは自動的に処理できません。&lt;a href=&quot;httpretryexception&quot;&gt;HttpRetryExceptionは、&lt;/a&gt;認証またはリダイレクションが必要とされている場合の応答を読み取る際にスローされます。この例外は、エラーの詳細を照会することができます。</target>
        </trans-unit>
        <trans-unit id="0a1daf55edfb1251014f98d686349fc2cf29836a" translate="yes" xml:space="preserve">
          <source>When output streaming is enabled, authentication and redirection cannot be handled automatically. A HttpRetryException will be thrown when reading the response if authentication or redirection are required. This exception can be queried for the details of the error.</source>
          <target state="translated">出力ストリーミングが有効な場合、認証やリダイレクトを自動的に処理することはできません。認証またはリダイレクトが必要な場合は、応答を読み取る際に HttpRetryException がスローされます。この例外は、エラーの詳細について問い合わせることができます。</target>
        </trans-unit>
        <trans-unit id="70789a8a89c99dae4c53ce0b0096f13062e5be96" translate="yes" xml:space="preserve">
          <source>When output to a ZIP file or ZIP file formatted output stream the last modification time set by this method will be stored into zip file entry's &lt;code&gt;date and time fields&lt;/code&gt; in &lt;code&gt;standard
 MS-DOS date and time format&lt;/code&gt;), and the extended timestamp fields in &lt;code&gt;optional extra data&lt;/code&gt; in UTC time.</source>
          <target state="translated">ZIPファイルまたはZIPファイル形式の出力ストリームに出力する場合、このメソッドで設定された最終変更時刻は、 &lt;code&gt;standard MS-DOS date and time format&lt;/code&gt; zipファイルエントリの &lt;code&gt;date and time fields&lt;/code&gt; に格納され、拡張タイムスタンプフィールドは &lt;code&gt;optional extra data&lt;/code&gt; れます。 UTC時間でのデータ。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
