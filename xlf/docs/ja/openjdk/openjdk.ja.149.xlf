<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="d4844822fb540c78ff0305e65b984a34e04d1176" translate="yes" xml:space="preserve">
          <source>The information that you can retrieve from a syntax definition is directory-dependent.</source>
          <target state="translated">構文定義から取得できる情報はディレクトリ依存です。</target>
        </trans-unit>
        <trans-unit id="d754234c829daf3f7bdab4a40e2f1300ae4ef5c9" translate="yes" xml:space="preserve">
          <source>The inherited channel, if any, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">継承されたチャネルがあれば、それ以外の場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7705348178942231d79bd3fd49fff2d6d64056a0" translate="yes" xml:space="preserve">
          <source>The inherited methods &lt;code&gt;getMessage&lt;/code&gt;, &lt;code&gt;getSQLState&lt;/code&gt;, and &lt;code&gt;getErrorCode&lt;/code&gt; retrieve information contained in a &lt;code&gt;RowSetWarning&lt;/code&gt; object.</source>
          <target state="translated">The inherited methods &lt;code&gt;getMessage&lt;/code&gt; , &lt;code&gt;getSQLState&lt;/code&gt; , and &lt;code&gt;getErrorCode&lt;/code&gt; retrieve information contained in a &lt;code&gt;RowSetWarning&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="582d443042d4213cc0a62c853c554f1e08daabbf" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will be equal to the number of bytes read from the file so far. Reading bytes from this stream will increment the channel's position. Changing the channel's position, either explicitly or by reading, will change this stream's file position.</source>
          <target state="translated">The initial &lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt; of the returned channel will be equal to the number of bytes read from the file so far. Reading bytes from this stream will increment the channel's position. Changing the channel's position, either explicitly or by reading, will change this stream's file position.</target>
        </trans-unit>
        <trans-unit id="5fc61bc42b89728b893cc2036ea85014ba2a2590" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will be equal to the number of bytes written to the file so far unless this stream is in append mode, in which case it will be equal to the size of the file. Writing bytes to this stream will increment the channel's position accordingly. Changing the channel's position, either explicitly or by writing, will change this stream's file position.</source>
          <target state="translated">The initial &lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt; of the returned channel will be equal to the number of bytes written to the file so far unless this stream is in append mode, in which case it will be equal to the size of the file. Writing bytes to this stream will increment the channel's position accordingly. Changing the channel's position, either explicitly or by writing, will change this stream's file position.</target>
        </trans-unit>
        <trans-unit id="23fdec03cbe08d9ee1145b99b267e04326a46f01" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will be equal to the number of bytes read from the file so far. Reading bytes from this stream will increment the channel's position. Changing the channel's position, either explicitly or by reading, will change this stream's file position.</source>
          <target state="translated">返されるチャネルの初期&lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;は、これまでにファイルから読み取られたバイト数と同じになります。このストリームからバイトを読み取ると、チャネルの位置が増加します。明示的または読み取りによってチャネルの位置を変更すると、このストリームのファイル位置が変更されます。</target>
        </trans-unit>
        <trans-unit id="e56adadcca778289c07ac038c40805d5ee9569a3" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will be equal to the number of bytes written to the file so far unless this stream is in append mode, in which case it will be equal to the size of the file. Writing bytes to this stream will increment the channel's position accordingly. Changing the channel's position, either explicitly or by writing, will change this stream's file position.</source>
          <target state="translated">返されたチャネルの初期&lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;は、このストリームが追加モードでない限り、これまでにファイルに書き込まれたバイト数と等しくなります。この場合、追加ストリームはファイルのサイズと等しくなります。このストリームにバイトを書き込むと、それに応じてチャネルの位置が増加します。明示的または書き込みによってチャネルの位置を変更すると、このストリームのファイル位置が変更されます。</target>
        </trans-unit>
        <trans-unit id="54104849828faeb71a83684ba5a379183a42a8a1" translate="yes" xml:space="preserve">
          <source>The initial capacity controls a tradeoff between wasted space and the need for &lt;code&gt;rehash&lt;/code&gt; operations, which are time-consuming. No &lt;code&gt;rehash&lt;/code&gt; operations will</source>
          <target state="translated">初期容量は、無駄なスペースと時間のかかる &lt;code&gt;rehash&lt;/code&gt; 操作の必要性との間のトレードオフを制御します。 &lt;code&gt;rehash&lt;/code&gt; 操作は行われません</target>
        </trans-unit>
        <trans-unit id="d566609c979c8e49cfb0dc2950fb7324f878fe5f" translate="yes" xml:space="preserve">
          <source>The initial capacity of a &lt;code&gt;Properties&lt;/code&gt; object created with this constructor is unspecified.</source>
          <target state="translated">The initial capacity of a &lt;code&gt;Properties&lt;/code&gt; object created with this constructor is unspecified.</target>
        </trans-unit>
        <trans-unit id="db054b9bc58cff191805517256422fe118db7cfb" translate="yes" xml:space="preserve">
          <source>The initial class file bytes represent the bytes passed to &lt;a href=&quot;../../../../java.base/java/lang/classloader#defineClass(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;ClassLoader.defineClass&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt;&lt;code&gt;redefineClasses&lt;/code&gt;&lt;/a&gt; (before any transformations were applied), however they might not exactly match them. The constant pool might not have the same layout or contents. The constant pool may have more or fewer entries. Constant pool entries may be in a different order; however, constant pool indices in the bytecodes of methods will correspond. Some attributes may not be present. Where order is not meaningful, for example the order of methods, order might not be preserved.</source>
          <target state="translated">The initial class file bytes represent the bytes passed to &lt;a href=&quot;../../../../java.base/java/lang/classloader#defineClass(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;ClassLoader.defineClass&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt; &lt;code&gt;redefineClasses&lt;/code&gt; &lt;/a&gt; (before any transformations were applied), however they might not exactly match them. The constant pool might not have the same layout or contents. The constant pool may have more or fewer entries. Constant pool entries may be in a different order; however, constant pool indices in the bytecodes of methods will correspond. Some attributes may not be present. Where order is not meaningful, for example the order of methods, order might not be preserved.</target>
        </trans-unit>
        <trans-unit id="73036cdb82068da260ec582e655554dd532915b6" translate="yes" xml:space="preserve">
          <source>The initial class file bytes represent the bytes passed to &lt;a href=&quot;../classloader#defineClass-byte:A-int-int-&quot;&gt;&lt;code&gt;ClassLoader.defineClass&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt;&lt;code&gt;redefineClasses&lt;/code&gt;&lt;/a&gt; (before any transformations were applied), however they might not exactly match them. The constant pool might not have the same layout or contents. The constant pool may have more or fewer entries. Constant pool entries may be in a different order; however, constant pool indices in the bytecodes of methods will correspond. Some attributes may not be present. Where order is not meaningful, for example the order of methods, order might not be preserved.</source>
          <target state="translated">初期クラスファイルバイトはに渡されたバイト数を表す&lt;a href=&quot;../classloader#defineClass-byte:A-int-int-&quot;&gt; &lt;code&gt;ClassLoader.defineClass&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt; &lt;code&gt;redefineClasses&lt;/code&gt; &lt;/a&gt;（任意の変換が適用される前に）、しかし、彼らは正確にそれらを一致しない場合があります。定数プールは、同じレイアウトまたはコンテンツではない場合があります。定数プールには、より多くのまたはより少ないエントリがあります。定数プールエントリの順序は異なる場合があります。ただし、メソッドのバイトコードの定数プールインデックスは対応します。一部の属性が存在しない可能性があります。メソッドの順序など、順序が意味をなさない場合、順序は保持されない可能性があります。</target>
        </trans-unit>
        <trans-unit id="ad81007d5811bb624623fea0ed5de856f5ea5fbc" translate="yes" xml:space="preserve">
          <source>The initial context implementation is determined at runtime. The default policy uses the environment property &quot;&lt;a href=&quot;context#INITIAL_CONTEXT_FACTORY&quot;&gt;&lt;code&gt;java.naming.factory.initial&lt;/code&gt;&lt;/a&gt;&quot;, which contains the class name of the initial context factory. An exception to this policy is made when resolving URL strings, as described below.</source>
          <target state="translated">初期コンテキストの実装は、実行時に決定されます。デフォルトのポリシーは、初期コンテキストファクトリのクラス名を含む環境プロパティ「&lt;a href=&quot;context#INITIAL_CONTEXT_FACTORY&quot;&gt; &lt;code&gt;java.naming.factory.initial&lt;/code&gt; &lt;/a&gt;」を使用します。このポリシーの例外は、以下で説明するように、URL文字列を解決するときに行われます。</target>
        </trans-unit>
        <trans-unit id="b83fd820055d3d386f3fa568c59529845227e73a" translate="yes" xml:space="preserve">
          <source>The initial inherited setting may be overridden by calling &lt;a href=&quot;sslsocket#setNeedClientAuth(boolean)&quot;&gt;&lt;code&gt;SSLSocket.setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sslsocket#setWantClientAuth(boolean)&quot;&gt;&lt;code&gt;SSLSocket.setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The initial inherited setting may be overridden by calling &lt;a href=&quot;sslsocket#setNeedClientAuth(boolean)&quot;&gt; &lt;code&gt;SSLSocket.setNeedClientAuth(boolean)&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;sslsocket#setWantClientAuth(boolean)&quot;&gt; &lt;code&gt;SSLSocket.setWantClientAuth(boolean)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5968bd4b24be43322be2226d7e4b483ae0f3d038" translate="yes" xml:space="preserve">
          <source>The initial inherited setting may be overridden by calling &lt;a href=&quot;sslsocket#setNeedClientAuth-boolean-&quot;&gt;&lt;code&gt;SSLSocket.setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sslsocket#setWantClientAuth-boolean-&quot;&gt;&lt;code&gt;SSLSocket.setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;sslsocket#setNeedClientAuth-boolean-&quot;&gt; &lt;code&gt;SSLSocket.setNeedClientAuth(boolean)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;sslsocket#setWantClientAuth-boolean-&quot;&gt; &lt;code&gt;SSLSocket.setWantClientAuth(boolean)&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、最初に継承された設定をオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="b1897ad9016c1b8f5933ba77ebd479010f4eaa18" translate="yes" xml:space="preserve">
          <source>The initial interpretation of the user's gesture, and the subsequent starting of the drag operation are the responsibility of the implementing &lt;code&gt;Component&lt;/code&gt;, which is usually implemented by a &lt;code&gt;DragGestureRecognizer&lt;/code&gt;.</source>
          <target state="translated">The initial interpretation of the user's gesture, and the subsequent starting of the drag operation are the responsibility of the implementing &lt;code&gt;Component&lt;/code&gt; , which is usually implemented by a &lt;code&gt;DragGestureRecognizer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52f36d4af5ef3717e82f46af43c8962803c23e03" translate="yes" xml:space="preserve">
          <source>The initial size of this container is set to 100x100, but can be reset using setSize().</source>
          <target state="translated">このコンテナの初期サイズは 100x100 に設定されていますが、 setSize()でリセットすることができます。</target>
        </trans-unit>
        <trans-unit id="a611d393e040fa6908cfe45ae4f8bccb6cdd990b" translate="yes" xml:space="preserve">
          <source>The initial state of the Range returned from this method is such that both of its boundary-points are positioned at the beginning of the corresponding Document, before any content. The Range returned can only be used to select content associated with this Document, or with DocumentFragments and Attrs for which this Document is the &lt;code&gt;ownerDocument&lt;/code&gt;.</source>
          <target state="translated">The initial state of the Range returned from this method is such that both of its boundary-points are positioned at the beginning of the corresponding Document, before any content. The Range returned can only be used to select content associated with this Document, or with DocumentFragments and Attrs for which this Document is the &lt;code&gt;ownerDocument&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9935552c412b3a39d923f441da111d0d265b51da" translate="yes" xml:space="preserve">
          <source>The initial threshold value.</source>
          <target state="translated">閾値の初期値。</target>
        </trans-unit>
        <trans-unit id="e4712f648942f6879aa403441218fb6b8e9518fe" translate="yes" xml:space="preserve">
          <source>The initial threshold.</source>
          <target state="translated">初期のしきい値。</target>
        </trans-unit>
        <trans-unit id="bdc9501532a47a6e31c18417935f798102b78798" translate="yes" xml:space="preserve">
          <source>The initial value of this field is -4.</source>
          <target state="translated">このフィールドの初期値は-4です。</target>
        </trans-unit>
        <trans-unit id="f2f1d7dcaca30d81c998107fa35d0caadf3769db" translate="yes" xml:space="preserve">
          <source>The initial value of this field is 0.0.</source>
          <target state="translated">このフィールドの初期値は0.0です。</target>
        </trans-unit>
        <trans-unit id="b2c6b58f2a898e929dd294246d0e9d9b915b3041" translate="yes" xml:space="preserve">
          <source>The initial value of this field is null.</source>
          <target state="translated">このフィールドの初期値はヌルです。</target>
        </trans-unit>
        <trans-unit id="480fad772f115d1b94ae7ccdff16d0e302222891" translate="yes" xml:space="preserve">
          <source>The initial value of this socket option is &lt;code&gt;FALSE&lt;/code&gt;. The socket option may be enabled or disabled at any time.</source>
          <target state="translated">このソケットオプションの初期値は &lt;code&gt;FALSE&lt;/code&gt; です。ソケットオプションはいつでも有効または無効にできます。</target>
        </trans-unit>
        <trans-unit id="d64b75cc22cc7a22a6b3905f1b539199bfb6427f" translate="yes" xml:space="preserve">
          <source>The initial value of this socket option is &lt;code&gt;FALSE&lt;/code&gt;. The socket option may be enabled or disabled at any time. Some operating systems may require that the Java virtual machine be started with implementation specific privileges to enable this option or send broadcast datagrams.</source>
          <target state="translated">このソケットオプションの初期値は &lt;code&gt;FALSE&lt;/code&gt; です。ソケットオプションはいつでも有効または無効にできます。一部のオペレーティングシステムでは、このオプションを有効にするか、ブロードキャストデータグラムを送信するために、Java仮想マシンを実装固有の権限で起動する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="b53baf5e2a73c2a6e3ac07e7437cbec9e913530a" translate="yes" xml:space="preserve">
          <source>The initial value of this socket option is a negative value, meaning that the option is disabled. The option may be enabled, or the linger interval changed, at any time. The maximum value of the linger interval is system dependent. Setting the linger interval to a value that is greater than its maximum value causes the linger interval to be set to its maximum value.</source>
          <target state="translated">このソケットオプションの初期値は負の値であり、このオプションは無効であることを意味する。このオプションは、いつでも有効にすることができ、遅延時間を変更することもできる。遅延時間の最大値はシステムに依存する。遅延時間を最大値よりも大きい値に設定すると、遅延時間は最大値に設定される。</target>
        </trans-unit>
        <trans-unit id="145aa0f5c504a6b90dfb4929918b3107cf434d35" translate="yes" xml:space="preserve">
          <source>The initial/default size of the socket receive buffer and the range of allowable values is system dependent although a negative size is not allowed. An attempt to set the socket receive buffer to larger than its maximum size causes it to be set to its maximum size.</source>
          <target state="translated">ソケット受信バッファの初期値/デフォルトサイズと許容範囲はシステムに依存するが、負のサイズは許容されない。ソケット受信バッファを最大サイズよりも大きいサイズに設定しようとすると、最大サイズに設定される。</target>
        </trans-unit>
        <trans-unit id="51f73748332022abeb0586fd7f96ab66f0792fc2" translate="yes" xml:space="preserve">
          <source>The initial/default size of the socket send buffer and the range of allowable values is system dependent although a negative size is not allowed. An attempt to set the socket send buffer to larger than its maximum size causes it to be set to its maximum size.</source>
          <target state="translated">ソケット送信バッファの初期/デフォルトサイズと許容範囲はシステムに依存するが、負のサイズは許容されない。ソケット送信バッファを最大サイズよりも大きいサイズに設定しようとすると、最大サイズに設定される。</target>
        </trans-unit>
        <trans-unit id="ed6a796b3846abce78654b51752b778ce337d346" translate="yes" xml:space="preserve">
          <source>The initial/default value of the TOS field in the ToS octet is implementation specific but will typically be &lt;code&gt;0&lt;/code&gt;. For datagram-oriented sockets the option may be configured at any time after the socket has been bound. The new value of the octet is used when sending subsequent datagrams. It is system dependent whether this option can be queried or changed prior to binding the socket.</source>
          <target state="translated">ToSオクテットのTOSフィールドの初期/デフォルト値は実装固有ですが、通常は &lt;code&gt;0&lt;/code&gt; です。データグラム指向のソケットの場合、オプションは、ソケットがバインドされた後いつでも構成できます。オクテットの新しい値は、後続のデータグラムを送信するときに使用されます。ソケットをバインドする前に、このオプションを照会または変更できるかどうかは、システムに依存します。</target>
        </trans-unit>
        <trans-unit id="e93c89bc9134002e795c3937793d09a863552a6d" translate="yes" xml:space="preserve">
          <source>The initial/default value of the time-to-live setting is typically &lt;code&gt;1&lt;/code&gt;. An implementation allows this socket option to be set after the socket is bound. Whether the socket option can be queried or changed prior to binding the socket is system dependent.</source>
          <target state="translated">存続時間設定の初期/デフォルト値は、通常 &lt;code&gt;1&lt;/code&gt; です。実装では、ソケットがバインドされた後にこのソケットオプションを設定できます。ソケットをバインドする前にソケットオプションを照会または変更できるかどうかは、システムによって異なります。</target>
        </trans-unit>
        <trans-unit id="8f14681da9e2cf817ea3cfed63d4502d38744917" translate="yes" xml:space="preserve">
          <source>The initial/default value of this socket option is &lt;code&gt;TRUE&lt;/code&gt;. An implementation allows this socket option to be set after the socket is bound. Whether the socket option can be queried or changed prior to binding the socket is system dependent.</source>
          <target state="translated">このソケットオプションの初期/デフォルト値は &lt;code&gt;TRUE&lt;/code&gt; です。実装では、ソケットがバインドされた後にこのソケットオプションを設定できます。ソケットをバインドする前にソケットオプションを照会または変更できるかどうかは、システムによって異なります。</target>
        </trans-unit>
        <trans-unit id="7a10bc1d584244ec597309a501f8537f0906aac2" translate="yes" xml:space="preserve">
          <source>The initial/default value of this socket option may be &lt;code&gt;null&lt;/code&gt; to indicate that outgoing interface will be selected by the operating system, typically based on the network routing tables. An implementation allows this socket option to be set after the socket is bound. Whether the socket option can be queried or changed prior to binding the socket is system dependent.</source>
          <target state="translated">このソケットオプションの初期/デフォルト値は &lt;code&gt;null&lt;/code&gt; の場合があり、通常はネットワークルーティングテーブルに基づいて、オペレーティングシステムによって発信インターフェイスが選択されることを示します。実装では、ソケットがバインドされた後にこのソケットオプションを設定できます。ソケットをバインドする前にソケットオプションを照会または変更できるかどうかは、システムによって異なります。</target>
        </trans-unit>
        <trans-unit id="b9fedeff43c59d7b5dbcc75d3c74145f2e5a51f4" translate="yes" xml:space="preserve">
          <source>The input (via the &lt;code&gt;classfileBuffer&lt;/code&gt; parameter) to the first transformer is:</source>
          <target state="translated">最初のトランスフォーマーへの入力（ &lt;code&gt;classfileBuffer&lt;/code&gt; パラメーターによる）は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="0353ae3109c30633907963c70d9936359968faf7" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-10 (five days earlier).</source>
          <target state="translated">パラメータ(MONDAY)に2011-01-15(a Saturday)と入力すると、2011-01-10(5日前)が返ってきます。</target>
        </trans-unit>
        <trans-unit id="97cf88e493d8b44880901ab10ce09e76612bd97e" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-17 (two days later).</source>
          <target state="translated">パラメータ(MONDAY)に2011-01-15(土曜日)を入力すると、2011-01-17(2日後)が返ってきます。</target>
        </trans-unit>
        <trans-unit id="9bef351d0d747e19c535a278617e57a2452563ef" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (seven days earlier).</source>
          <target state="translated">パラメータ(SATURDAY)に2011-01-15(a Saturday)と入力すると、2011-01-08(7日前)が返ってきます。</target>
        </trans-unit>
        <trans-unit id="459e681c26aecf2f2ec743dc66e3693663f75fd5" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-15 (same as input).</source>
          <target state="translated">パラメータ(SATURDAY)に2011-01-15(a Saturday)と入力すると、2011-01-15(入力と同じ)が返ってきます。</target>
        </trans-unit>
        <trans-unit id="fd71f4910bd3fe09f4a43f337e9282decd32cea5" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (seven days later).</source>
          <target state="translated">パラメータ(SATURDAY)に2011-01-15(a Saturday)を入力すると、2011-01-22(7日後)が返ってきます。</target>
        </trans-unit>
        <trans-unit id="0efcc6067b189acef66d69c2de50d8589fa25cbf" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-12 (three days earlier).</source>
          <target state="translated">パラメータ(WEDNESDAY)に2011-01-15(a Saturday)と入力すると、2011-01-12(3日前)が返ってきます。</target>
        </trans-unit>
        <trans-unit id="7b80d3ce9751afa5ad36e2eb87a5ace0f63cba29" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-19 (four days later).</source>
          <target state="translated">パラメータ(WEDNESDAY)に2011-01-15(a Saturday)を入力すると、2011-01-19(4日後)が返ってきます。</target>
        </trans-unit>
        <trans-unit id="7f73626e5956acb720a1570a8f4536e229179c28" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 will return 2011-01-01.</source>
          <target state="translated">入力した2011-01-15は2011-01-01を返します。</target>
        </trans-unit>
        <trans-unit id="0124e9614f4487f35850bcf026ed566a4761b1d3" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 will return 2011-01-31.</source>
          <target state="translated">入力した2011-01-15は2011-01-31を返します。</target>
        </trans-unit>
        <trans-unit id="7ab919d34d3b479bb430190e4c37a22ea00323df" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 will return 2011-02-01.</source>
          <target state="translated">入力した2011-01-15は2011-02-01を返します。</target>
        </trans-unit>
        <trans-unit id="40c59e3915752f42edd5a88ff72e759568a6189a" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 will return 2011-12-31.</source>
          <target state="translated">入力した2011-01-15は2011-12-31を返します。</target>
        </trans-unit>
        <trans-unit id="727c7b425fd65ecf52b229b890c5788c0dc30227" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 will return 2012-01-01.</source>
          <target state="translated">入力した2011-01-15は2012-01-01を返します。</target>
        </trans-unit>
        <trans-unit id="c09e595a2bedd7bb1101024bc041b5b29e2d95e2" translate="yes" xml:space="preserve">
          <source>The input 2011-02-15 will return 2011-01-01.</source>
          <target state="translated">入力した2011-02-15は2011-01-01を返します。</target>
        </trans-unit>
        <trans-unit id="5cc26e63ef17d6b476896380461bf4720673e59e" translate="yes" xml:space="preserve">
          <source>The input 2011-02-15 will return 2011-02-01.</source>
          <target state="translated">入力した2011-02-15は2011-02-01を返します。</target>
        </trans-unit>
        <trans-unit id="7bab49004e8b5e91474ec75a110529a798471e37" translate="yes" xml:space="preserve">
          <source>The input 2011-02-15 will return 2011-02-28.</source>
          <target state="translated">入力した2011-02-15は2011-02-28に戻ります。</target>
        </trans-unit>
        <trans-unit id="6af6d6025b1ce4e1ae4e9a586de3fc7c32e1e4fe" translate="yes" xml:space="preserve">
          <source>The input 2011-02-15 will return 2011-03-01.</source>
          <target state="translated">入力した2011-02-15は2011-03-01を返します。</target>
        </trans-unit>
        <trans-unit id="6b043e7ffb342331a742f793366c7737a0d6e3fd" translate="yes" xml:space="preserve">
          <source>The input 2011-02-15 will return 2011-12-31.</source>
          <target state="translated">入力した2011-02-15は2011-12-31に戻ります。</target>
        </trans-unit>
        <trans-unit id="c894c15b25c9be063955c487b0570699b1d5eab8" translate="yes" xml:space="preserve">
          <source>The input 2011-04-15 will return 2011-04-30.</source>
          <target state="translated">入力した2011-04-15は2011-04-30を返します。</target>
        </trans-unit>
        <trans-unit id="674c825d6c5d4d93b9ccdbda2b8b7895d7891b2a" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (-1,TUESDAY) will return 2011-12-27 (last in month).</source>
          <target state="translated">(-1,TUESDAY)の2011-12-15の入力は、2011-12-27(最終月)を返します。</target>
        </trans-unit>
        <trans-unit id="f45c3e12c42281a12669c273ca00a557f31deb4e" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (-4,TUESDAY) will return 2011-12-06 (3 weeks before last in month).</source>
          <target state="translated">(-4,TUESDAY)の2011-12-15の入力は、2011-12-06(月内最後の3週間前)に戻ります。</target>
        </trans-unit>
        <trans-unit id="e511359656fd86726c2553e964175b3339937510" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (-5,TUESDAY) will return 2011-11-29 (4 weeks before last in month).</source>
          <target state="translated">(-5,TUESDAY)の2011-12-15の入力は、2011-11-29(月の最後の4週間前)に戻ります。</target>
        </trans-unit>
        <trans-unit id="61f6b1886bb948c2d22a9f26dbaf718741f9d55f" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (0,TUESDAY) will return 2011-11-29 (last in previous month).</source>
          <target state="translated">(0,TUESDAY)の2011-12-15の入力は、2011-11-29(前月最後)を返します。</target>
        </trans-unit>
        <trans-unit id="f7aa0d892978892f55b314a5cb46650cec948a67" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (1,TUESDAY) will return 2011-12-06.</source>
          <target state="translated">(1,TUESDAY)の2011-12-15の入力は2011-12-06に戻ります。</target>
        </trans-unit>
        <trans-unit id="08504b039b2c14ec9e3edb95f9f492e2689a26fe" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (2,TUESDAY) will return 2011-12-13.</source>
          <target state="translated">(2,TUESDAY)の2011-12-15の入力は2011-12-13に戻ります。</target>
        </trans-unit>
        <trans-unit id="434481f6384a2e789c2579a256e032c2a65c242a" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (3,TUESDAY) will return 2011-12-20.</source>
          <target state="translated">(3,TUESDAY)の2011-12-15の入力は2011-12-20に戻ります。</target>
        </trans-unit>
        <trans-unit id="a82ae127fda436ed10390e170c5197b4b398e8a1" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (4,TUESDAY) will return 2011-12-27.</source>
          <target state="translated">(4,TUESDAY)の2011-12-15の入力は2011-12-27に戻ります。</target>
        </trans-unit>
        <trans-unit id="5a711831c25339a45671c5ac67f113204cb02e01" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (5,TUESDAY) will return 2012-01-03.</source>
          <target state="translated">(5,TUESDAY)の2011-12-15の入力は2012-01-03に戻ります。</target>
        </trans-unit>
        <trans-unit id="8c6eb26c15efb0ec8afeabaaa608820b693f2649" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (FRIDAY) will return 2011-12-02.</source>
          <target state="translated">(FRIDAY)の2011-12-15の入力が2011-12-02に戻ります。</target>
        </trans-unit>
        <trans-unit id="567a413ddb1e838b7fa5d14dcbe912be2ae1fa62" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (FRIDAY) will return 2011-12-30.</source>
          <target state="translated">(FRIDAY)の2011-12-15の入力は2011-12-30に戻ります。</target>
        </trans-unit>
        <trans-unit id="1e72c437ba8ad9a6ff2bc3eeff73507f67a633af" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (MONDAY) will return 2011-12-05.</source>
          <target state="translated">(MONDAY)の2011-12-15の入力が2011-12-05に戻ります。</target>
        </trans-unit>
        <trans-unit id="d64c410b23535de8786153e85ed7090c36fe6d3d" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (MONDAY) will return 2011-12-26.</source>
          <target state="translated">(MONDAY)の2011-12-15の入力が2011-12-26に戻ります。</target>
        </trans-unit>
        <trans-unit id="b914beb04279584398f5931bb837c143e20f3c7b" translate="yes" xml:space="preserve">
          <source>The input 2012-02-15 will return 2012-02-29 (leap year).</source>
          <target state="translated">入力された2012-02-15は、2012-02-29(うるう年)に戻ります。</target>
        </trans-unit>
        <trans-unit id="edb13fdec6e5487029f19ef469d2d4b7243b4fe9" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt;, for example, yields the following results with these expressions:</source>
          <target state="translated">たとえば、入力 &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt; は、これらの式で次の結果を生成します。</target>
        </trans-unit>
        <trans-unit id="e76816c962ee6c820f09b31b57f2a819c6ee424e" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt;, for example, yields the following results with these parameters:</source>
          <target state="translated">たとえば、入力 &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt; は、これらのパラメーターを使用して次の結果を生成します。</target>
        </trans-unit>
        <trans-unit id="7fe0fa4d1613c22f20c32d6adf058d34e0d76640" translate="yes" xml:space="preserve">
          <source>The input byte sequence is provided in a byte buffer or a series of such buffers. The output character sequence is written to a character buffer or a series of such buffers. A decoder should always be used by making the following sequence of method invocations, hereinafter referred to as a</source>
          <target state="translated">入力されたバイト列は、バイトバッファまたはそのような一連のバッファに提供されます。出力文字列は、文字バッファまたはそのような一連のバッファに書き込まれる。デコーダは、常に以下のような一連のメソッド呼び出しを行うことにより使用されるべきであり、以下では</target>
        </trans-unit>
        <trans-unit id="19ef1842ed4e5eb52651c1849cddba210d1892ca" translate="yes" xml:space="preserve">
          <source>The input character sequence is provided in a character buffer or a series of such buffers. The output byte sequence is written to a byte buffer or a series of such buffers. An encoder should always be used by making the following sequence of method invocations, hereinafter referred to as an</source>
          <target state="translated">入力文字列は、文字バッファまたはそのような一連のバッファに提供されます。出力されるバイト列は、バイトバッファまたはそのような一連のバッファに書き込まれる。エンコーダは、常に以下のような一連のメソッド呼び出しを行って使用することが望ましい。</target>
        </trans-unit>
        <trans-unit id="f3b7f4f251101855e542e61fc24db9f102f470ce" translate="yes" xml:space="preserve">
          <source>The input method framework will usually defer loading of input method classes until they are absolutely needed. It loads only the &lt;code&gt;InputMethodDescriptor&lt;/code&gt; implementations during AWT initialization. It loads an &lt;code&gt;InputMethod&lt;/code&gt; implementation when the input method has been selected.</source>
          <target state="translated">The input method framework will usually defer loading of input method classes until they are absolutely needed. It loads only the &lt;code&gt;InputMethodDescriptor&lt;/code&gt; implementations during AWT initialization. It loads an &lt;code&gt;InputMethod&lt;/code&gt; implementation when the input method has been selected.</target>
        </trans-unit>
        <trans-unit id="079602637d7f1a668b5a22c9dc43256cd86d280e" translate="yes" xml:space="preserve">
          <source>The input method may provide a list of attributes that it is interested in. In that case, information about other attributes that the implementor may have need not be made accessible through the iterator. If the list is null, all available attribute information should be made accessible.</source>
          <target state="translated">入力メソッドは、興味のある属性のリストを提供してもよい。その場合,実装者が持っている可能性のある他の属性に関する情報は,イテレータを通してアクセス可能にする必要はない。リストがnullの場合は、利用可能なすべての属性情報にアクセスできるようにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="a088aaf0b2bc0291cc106b647d4deda76401815e" translate="yes" xml:space="preserve">
          <source>The input method must also provide at least two classes: one class implementing the &lt;code&gt;java.awt.im.spi.InputMethodDescriptor&lt;/code&gt; interface, one class implementing the &lt;code&gt;java.awt.im.spi.InputMethod&lt;/code&gt; interface. The input method should separate the implementations for these interfaces, so that loading of the class implementing &lt;code&gt;InputMethod&lt;/code&gt; can be deferred until actually needed.</source>
          <target state="translated">The input method must also provide at least two classes: one class implementing the &lt;code&gt;java.awt.im.spi.InputMethodDescriptor&lt;/code&gt; interface, one class implementing the &lt;code&gt;java.awt.im.spi.InputMethod&lt;/code&gt; interface. The input method should separate the implementations for these interfaces, so that loading of the class implementing &lt;code&gt;InputMethod&lt;/code&gt; can be deferred until actually needed.</target>
        </trans-unit>
        <trans-unit id="5173f5df733d6fe86f606f9d7f97c46fd4e851ba" translate="yes" xml:space="preserve">
          <source>The input method underline affects both the visual bounds and the outline of the text.</source>
          <target state="translated">入力方法の下線は、視覚的な境界線とテキストのアウトラインの両方に影響を与えます。</target>
        </trans-unit>
        <trans-unit id="83653305fe618a807c36ae9ff751ddeb894361e2" translate="yes" xml:space="preserve">
          <source>The input object must not be altered. Instead, an adjusted copy of the original must be returned. This provides equivalent, safe behavior for immutable and mutable temporal objects.</source>
          <target state="translated">入力オブジェクトを変更してはいけません。その代わりに、調整されたオリジナルのコピーが返されなければなりません。これは、不変型と変異型のテンポラリオブジェクトに対して、同等の安全な動作を提供します。</target>
        </trans-unit>
        <trans-unit id="5690fa337aa0337299da10cf4d08093aec330c3b" translate="yes" xml:space="preserve">
          <source>The input set will be empty if the processor supports &lt;code&gt;
 &quot;*&quot;&lt;/code&gt; and the root elements have no annotations. A &lt;code&gt;
 Processor&lt;/code&gt; must gracefully handle an empty set of annotations.</source>
          <target state="translated">The input set will be empty if the processor supports &lt;code&gt; &quot;*&quot;&lt;/code&gt; and the root elements have no annotations. A &lt;code&gt; Processor&lt;/code&gt; must gracefully handle an empty set of annotations.</target>
        </trans-unit>
        <trans-unit id="5c910580a21e4b944c3ab323f7cd8f43016d192b" translate="yes" xml:space="preserve">
          <source>The input set will be empty if the processor supports &lt;code&gt;&quot;*&quot;&lt;/code&gt; and the root elements have no annotations. A &lt;code&gt;Processor&lt;/code&gt; must gracefully handle an empty set of annotations.</source>
          <target state="translated">プロセッサが &lt;code&gt;&quot;*&quot;&lt;/code&gt; をサポートし、ルート要素に注釈がない場合、入力セットは空になります。 &lt;code&gt;Processor&lt;/code&gt; 優雅に、注釈の空のセットを処理する必要があります。</target>
        </trans-unit>
        <trans-unit id="f47befcb4ecd8767475f3f12fb5018863e6b534b" translate="yes" xml:space="preserve">
          <source>The input source that is being parsed.</source>
          <target state="translated">解析されている入力ソース。</target>
        </trans-unit>
        <trans-unit id="da84d3d644e8622d72a13b523764f8b0f609c2da" translate="yes" xml:space="preserve">
          <source>The input source that was parsed.</source>
          <target state="translated">解析された入力ソース。</target>
        </trans-unit>
        <trans-unit id="ed552da2306d43fec33a5ddad4dd6d2b2ba78449" translate="yes" xml:space="preserve">
          <source>The input stream to be filtered.</source>
          <target state="translated">フィルタリングされる入力ストリーム。</target>
        </trans-unit>
        <trans-unit id="309bc11db643dd7e62cb11f361090715463174e8" translate="yes" xml:space="preserve">
          <source>The input string</source>
          <target state="translated">入力文字列</target>
        </trans-unit>
        <trans-unit id="72cf1f9cc3cabe9c8646b2af8556b597a7195bbf" translate="yes" xml:space="preserve">
          <source>The input temporal object may be in a calendar system other than ISO. Implementations may choose to document compatibility with other calendar systems, or reject non-ISO temporal objects by &lt;a href=&quot;temporalqueries#chronology()&quot;&gt;&lt;code&gt;querying the chronology&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The input temporal object may be in a calendar system other than ISO. Implementations may choose to document compatibility with other calendar systems, or reject non-ISO temporal objects by &lt;a href=&quot;temporalqueries#chronology()&quot;&gt; &lt;code&gt;querying the chronology&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6ff27ced2c6ba8898b27209a9d944d8366a139de" translate="yes" xml:space="preserve">
          <source>The input temporal object may be in a calendar system other than ISO. Implementations may choose to document compatibility with other calendar systems, or reject non-ISO temporal objects by &lt;a href=&quot;temporalqueries#chronology--&quot;&gt;&lt;code&gt;querying the chronology&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">入力一時オブジェクトは、ISO以外のカレンダーシステムにある可能性があります。実装では、他のカレンダーシステムとの互換性を文書化するか、暦を&lt;a href=&quot;temporalqueries#chronology--&quot;&gt; &lt;code&gt;querying the chronology&lt;/code&gt; &lt;/a&gt;非ISO時間オブジェクトを拒否するかを選択できます。</target>
        </trans-unit>
        <trans-unit id="0d3b87a06c1e41fe7f41be8cab3347c69577c90b" translate="yes" xml:space="preserve">
          <source>The inputLocale parameter specifies the locale for which text is input. This parameter can only take values obtained from this descriptor's &lt;a href=&quot;#getAvailableLocales()&quot;&gt;&lt;code&gt;getAvailableLocales()&lt;/code&gt;&lt;/a&gt; method or null. If it is null, an input locale independent icon for the input method should be returned.</source>
          <target state="translated">The inputLocale parameter specifies the locale for which text is input. This parameter can only take values obtained from this descriptor's &lt;a href=&quot;#getAvailableLocales()&quot;&gt; &lt;code&gt;getAvailableLocales()&lt;/code&gt; &lt;/a&gt; method or null. If it is null, an input locale independent icon for the input method should be returned.</target>
        </trans-unit>
        <trans-unit id="9f14980372b0683f49775bc052e867c452e6b24b" translate="yes" xml:space="preserve">
          <source>The inputLocale parameter specifies the locale for which text is input. This parameter can only take values obtained from this descriptor's &lt;a href=&quot;#getAvailableLocales()&quot;&gt;&lt;code&gt;getAvailableLocales()&lt;/code&gt;&lt;/a&gt; method or null. If it is null, an input locale independent name for the input method should be returned.</source>
          <target state="translated">The inputLocale parameter specifies the locale for which text is input. This parameter can only take values obtained from this descriptor's &lt;a href=&quot;#getAvailableLocales()&quot;&gt; &lt;code&gt;getAvailableLocales()&lt;/code&gt; &lt;/a&gt; method or null. If it is null, an input locale independent name for the input method should be returned.</target>
        </trans-unit>
        <trans-unit id="7f998451d8fd17341ecd575326c6da13b972f8ed" translate="yes" xml:space="preserve">
          <source>The inset from the bottom.</source>
          <target state="translated">下から見たインセット。</target>
        </trans-unit>
        <trans-unit id="9909785dde9a7db7fd7c3489dd2432327b22beec" translate="yes" xml:space="preserve">
          <source>The inset from the bottom. This value is subtracted from the Bottom of the rectangle to yield a new location for the Bottom.</source>
          <target state="translated">底面からのインセットです。この値は矩形の底辺から減算され、底辺の新しい位置が得られます。</target>
        </trans-unit>
        <trans-unit id="32e4e7cb57c5d657c8d6be8a8f58d05f136fb644" translate="yes" xml:space="preserve">
          <source>The inset from the left.</source>
          <target state="translated">左からインセット。</target>
        </trans-unit>
        <trans-unit id="0f85206032d1b7aa0b2590ae416e84603f1fc292" translate="yes" xml:space="preserve">
          <source>The inset from the left. This value is added to the Left of the rectangle to yield a new location for the Left edge.</source>
          <target state="translated">左からのインセットです。この値は矩形の左端に追加され、左端の新しい位置が得られます。</target>
        </trans-unit>
        <trans-unit id="7859a9787008d3cb83b312b3ea03987faffb05aa" translate="yes" xml:space="preserve">
          <source>The inset from the right.</source>
          <target state="translated">右から見た中敷き。</target>
        </trans-unit>
        <trans-unit id="0e55dddcf716d1da17a0a953811329895b77b94e" translate="yes" xml:space="preserve">
          <source>The inset from the right. This value is subtracted from the Right of the rectangle to yield a new location for the Right edge.</source>
          <target state="translated">右からのはめ込み線です。この値は矩形の右から減算され、右端の新しい位置が得られます。</target>
        </trans-unit>
        <trans-unit id="d9e6390956b222702f7a3eea0e86763329609332" translate="yes" xml:space="preserve">
          <source>The inset from the top.</source>
          <target state="translated">上から見たインセット。</target>
        </trans-unit>
        <trans-unit id="bf4a416b8b50d352edd91dedc2b33e26d77474e8" translate="yes" xml:space="preserve">
          <source>The inset from the top. This value is added to the Top of the rectangle to yield a new location for the Top.</source>
          <target state="translated">トップからのインセットです。この値は、長方形のトップに追加され、トップの新しい位置が得られます。</target>
        </trans-unit>
        <trans-unit id="64ef7cd78ee4c7e0380dc6ff644d86db08178e33" translate="yes" xml:space="preserve">
          <source>The inside border.</source>
          <target state="translated">内側のボーダー。</target>
        </trans-unit>
        <trans-unit id="ef7c230813f47d25b0bb9baa60684daea97ed112" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;BasicMenuUI&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;BasicMenuUI&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5d19fc65665c81f51ad0c8c47210f34978e2df8" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;CellRendererPane&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;CellRendererPane&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a52eb9cffd20ae8dd0e39567d5fd93d88148a0cb" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;ChangeListener&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;ChangeListener&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3050c0761589cc65cf86335a10b4986c6206bc7d" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;ContainerListener&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;ContainerListener&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56c1414724a0b82f497677275354efc130e02c3a" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;DesktopManager&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;DesktopManager&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e9fae94d45e8e4c1b92e6d6319a2c6d0c94cc04" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;DragWindow&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;DragWindow&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf536239e4b8346cfaba6859216ca03b0dc1e86e" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JComboBox&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;JComboBox&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0fb20ee9382ffa5c7051c45dbb95c0fccbf4a0fa" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JDesktopPane&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;JDesktopPane&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66631710f5ec11954113eb3676261af25fbe85ea" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JInternalFrame.JDesktopIcon&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;JInternalFrame.JDesktopIcon&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="632f9ed5ba73647235467c63c327de9c7dfcdcc5" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JInternalFrame&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;JInternalFrame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="925208244c886af22aa2744d9cea0c94ab4d4520" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;JList&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3820f4bf48f239b19c20df25c6dfcfb56db5f0df" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JMenu&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;JMenu&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22ed66de0a214c398cb7a10b2be2a1a582406b4f" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JMenuBar&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;JMenuBar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68ff9d8a589625bd315d364d0d46335e30b62439" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JMenuItem&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;JMenuItem&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="128af600e93df1fc6536b9f1672b869203ad6eb0" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JPopupMenu&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;JPopupMenu&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39af606ddae8316475830f58f1877123645a5a19" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JProgressBar&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;JProgressBar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d34b9f548afd02c3b3aab40cc6a6e44ce3295366" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JScrollPane&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;JScrollPane&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87e476f44e15ea2285a7a64212d88e82bfdd4f4e" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;JTable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b9a1788b3012e2ee0d16580297c0ce75cbb0dd8" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JToolBar&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;JToolBar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98187218bd6ed5ebf2b7978e468ab5c8b05fdf61" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;MenuDragMouseListener&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;MenuDragMouseListener&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c8b46ae7fc0922badf38279de19f9f75094825c" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;MenuKeyListener&lt;/code&gt;.</source>
          <target state="translated">The instance of &lt;code&gt;MenuKeyListener&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09723b4ba5956acbe634c05a94fb690ba777a9ba" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;MenuListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MenuListener&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="f91076b8018a79d203766eeb0e337e972dd0f8b0" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;MouseInputListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MouseInputListener&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="7855b98dd4924fcb4aadfc2ec3c8cffae69c25dd" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;PropertyChangeListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="c2065d04201b39ee3ed93de71763ab49c1b1af62" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;CloseAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CloseAction&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="0d6496ac7d2b3b02531ba8df65f784842bed2bdf" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;ContainerListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ContainerListener&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="71b9e7712f29139f3cbcbee6022020c12f1fa790" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;FocusListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FocusListener&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="1998a0b5bebf33080eadbb59dd265bba1edad948" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;MaximizeAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MaximizeAction&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="fc806021c5042b88e87f9a39cf39e9e2b8330e4f" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;MouseInputListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MouseInputListener&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="bf849ffc273c5021ec7716ebb1d8baf2ae892747" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;MoveAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MoveAction&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="429fdf6f0082da24eac66244a4fa25a00d93e856" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;PropertyChangeListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="9ac464fa807965926d89ef63588888c660fef346" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;RestoreAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RestoreAction&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="8234d2ce7fa0706e646aef5921d46b70c6d0bd74" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;SizeAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SizeAction&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="e70073e947cfc18cfed7dd7045c9c01141369bb5" translate="yes" xml:space="preserve">
          <source>The instance of an &lt;code&gt;IconifyAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IconifyAction&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="821545cbe636d66216bdce755849750bfe359d8c" translate="yes" xml:space="preserve">
          <source>The instance of the &lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; class is returned for the &lt;code&gt;Bean&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; クラスのインスタンスが &lt;code&gt;Bean&lt;/code&gt; クラスに返されます。</target>
        </trans-unit>
        <trans-unit id="fe35d64909d53ad3510a2a12bb002668399923b1" translate="yes" xml:space="preserve">
          <source>The instance registered in the platform &lt;code&gt;MBeanServer&lt;/code&gt; is also a &lt;a href=&quot;../../lang/management/platformloggingmxbean&quot;&gt;&lt;code&gt;PlatformLoggingMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プラットフォーム &lt;code&gt;MBeanServer&lt;/code&gt; に登録されているインスタンスも&lt;a href=&quot;../../lang/management/platformloggingmxbean&quot;&gt; &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="8034f1687833a6f8c4d1326d8592f90018f9b440" translate="yes" xml:space="preserve">
          <source>The instance registered in the platform &lt;code&gt;MBeanServer&lt;/code&gt; with this &lt;code&gt;ObjectName&lt;/code&gt; implements all attributes defined by &lt;a href=&quot;../../util/logging/loggingmxbean&quot;&gt;&lt;code&gt;LoggingMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この &lt;code&gt;ObjectName&lt;/code&gt; でプラットフォーム &lt;code&gt;MBeanServer&lt;/code&gt; に登録されたインスタンスは、&lt;a href=&quot;../../util/logging/loggingmxbean&quot;&gt; &lt;code&gt;LoggingMXBean&lt;/code&gt; &lt;/a&gt;によって定義されたすべての属性を実装します。</target>
        </trans-unit>
        <trans-unit id="7c0bba197e066898250665f6de73aa5e08d026f9" translate="yes" xml:space="preserve">
          <source>The instance specific getRequestProperty method should be used after an appropriate instance of URLConnection is obtained.</source>
          <target state="translated">インスタンス固有の getRequestProperty メソッドは、URLConnection の適切なインスタンスを取得した後に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="3338c212374dff0d244e2a29925e58c59d21bf00" translate="yes" xml:space="preserve">
          <source>The instance specific setRequestProperty method should be used after an appropriate instance of URLConnection is obtained.</source>
          <target state="translated">インスタンス固有の setRequestProperty メソッドは、URLConnection の適切なインスタンスを取得した後に使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="33d1db5d66bf10179cbc91eb8c39b48825229a3d" translate="yes" xml:space="preserve">
          <source>The instance specific setRequestProperty method should be used after an appropriate instance of URLConnection is obtained. Invoking this method will have no effect.</source>
          <target state="translated">インスタンス固有の setRequestProperty メソッドは、URLConnection の適切なインスタンスを取得した後に使用する必要があります。このメソッドを呼び出しても何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="d1fbeab41e2aa5267a94fe378603af36274b8722" translate="yes" xml:space="preserve">
          <source>The instant epoch-seconds.</source>
          <target state="translated">瞬間的なエポック秒。</target>
        </trans-unit>
        <trans-unit id="7901aafd15bf23c3b39d73b5e02e372acef541aa" translate="yes" xml:space="preserve">
          <source>The instant is obtained using &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and optionally (@code NANO_OF_SECOND). The value of &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; may be outside the maximum range of &lt;code&gt;LocalDateTime&lt;/code&gt;.</source>
          <target state="translated">インスタントは、&lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt;およびオプションで（@code NANO_OF_SECOND）を使用して取得されます。 &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; の値がLocalDateTimeの最大範囲外である可能性があり &lt;code&gt;LocalDateTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9bae62297e2eb85f85adcb5c23f1964c77f72c5" translate="yes" xml:space="preserve">
          <source>The instant is obtained using &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and optionally &lt;code&gt;NANO_OF_SECOND&lt;/code&gt;. The value of &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; may be outside the maximum range of &lt;code&gt;LocalDateTime&lt;/code&gt;.</source>
          <target state="translated">インスタントは、&lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt;およびオプションで &lt;code&gt;NANO_OF_SECOND&lt;/code&gt; を使用して取得されます。 &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; の値が、LocalDateTimeの最大範囲外である可能性があり &lt;code&gt;LocalDateTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30129dac0e1c5b07ebec910099af96e81c4f9dd8" translate="yes" xml:space="preserve">
          <source>The instantiateChild method is a convenience hook in BeanContext to simplify the task of instantiating a Bean, nested, into a &lt;code&gt;BeanContext&lt;/code&gt;.</source>
          <target state="translated">instantiateChildメソッドはに、ネストされた豆を、インスタンス化の作業単純化するBeanContextの簡易フックで &lt;code&gt;BeanContext&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f77c078c5f9aeaf66bf15d02253d245e615ac88d" translate="yes" xml:space="preserve">
          <source>The instrument must be part of a soundbank that this &lt;code&gt;Synthesizer&lt;/code&gt; supports. (To make sure, you can use the &lt;code&gt;getSoundbank&lt;/code&gt; method of &lt;code&gt;Instrument&lt;/code&gt; and the &lt;code&gt;isSoundbankSupported&lt;/code&gt; method of &lt;code&gt;Synthesizer&lt;/code&gt;.)</source>
          <target state="translated">楽器は、この &lt;code&gt;Synthesizer&lt;/code&gt; サポートするサウンドバンクの一部である必要があります。（確認するには、使用することができます &lt;code&gt;getSoundbank&lt;/code&gt; の方法 &lt;code&gt;Instrument&lt;/code&gt; と &lt;code&gt;isSoundbankSupported&lt;/code&gt; の方法 &lt;code&gt;Synthesizer&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="9a37a2eb226e14bcfb598f5019503fb1c263149a" translate="yes" xml:space="preserve">
          <source>The int at the buffer's current position</source>
          <target state="translated">バッファの現在位置の int</target>
        </trans-unit>
        <trans-unit id="f399009c35348dad1f9b984754bb8ad44cf2f1fa" translate="yes" xml:space="preserve">
          <source>The int at the given index</source>
          <target state="translated">指定されたインデックスのint</target>
        </trans-unit>
        <trans-unit id="cd5bd83985b7ab506a14fd7d1fe1f37e7e280658" translate="yes" xml:space="preserve">
          <source>The int value at the buffer's current position</source>
          <target state="translated">バッファの現在位置のint値</target>
        </trans-unit>
        <trans-unit id="1ad78d2b15738eeaffcdd43ad90d8ea023e56b29" translate="yes" xml:space="preserve">
          <source>The int value at the given index</source>
          <target state="translated">指定されたインデックスのint値</target>
        </trans-unit>
        <trans-unit id="5853f3fa53f15931c8c19c152516c6b810652678" translate="yes" xml:space="preserve">
          <source>The integer part of &lt;code&gt;this / divisor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;this / divisor&lt;/code&gt; の整数部分。</target>
        </trans-unit>
        <trans-unit id="af9b8b0307980238eed12ed1ddf6de7930d96166" translate="yes" xml:space="preserve">
          <source>The integer that is returned by &lt;code&gt;HSBtoRGB&lt;/code&gt; encodes the value of a color in bits 0-23 of an integer value that is the same format used by the method &lt;a href=&quot;#getRGB()&quot;&gt;&lt;code&gt;getRGB&lt;/code&gt;&lt;/a&gt;. This integer can be supplied as an argument to the &lt;code&gt;Color&lt;/code&gt; constructor that takes a single integer argument.</source>
          <target state="translated">&lt;code&gt;HSBtoRGB&lt;/code&gt; によって返される整数は、メソッド&lt;a href=&quot;#getRGB()&quot;&gt; &lt;code&gt;getRGB&lt;/code&gt; で&lt;/a&gt;使用されるのと同じ形式の整数値のビット0〜23の色の値をエンコードします。この整数は、単一の整数引数を取る &lt;code&gt;Color&lt;/code&gt; コンストラクターへの引数として提供できます。</target>
        </trans-unit>
        <trans-unit id="7b3962a31770a8a1a3dd88816d3e71b6159a620d" translate="yes" xml:space="preserve">
          <source>The intention is to allow developers to turn on voluminous logging, but to limit the messages that are sent to certain &lt;code&gt;Handlers&lt;/code&gt;.</source>
          <target state="translated">その意図は、開発者が大量のロギングをオンにできるようにする一方で、特定の &lt;code&gt;Handlers&lt;/code&gt; 送信されるメッセージを制限することです。</target>
        </trans-unit>
        <trans-unit id="7ae57ebccdbb22db556eaf3cff8f99142d9c282e" translate="yes" xml:space="preserve">
          <source>The interactions of &lt;code&gt;getTarget&lt;/code&gt; with memory are the same as of a read from a &lt;code&gt;volatile&lt;/code&gt; field.</source>
          <target state="translated">&lt;code&gt;getTarget&lt;/code&gt; とメモリの相互作用は、 &lt;code&gt;volatile&lt;/code&gt; フィールドからの読み取りと同じです。</target>
        </trans-unit>
        <trans-unit id="e26c912cdad75eed02864256ebb606789bb54554" translate="yes" xml:space="preserve">
          <source>The interactions of &lt;code&gt;getTarget&lt;/code&gt; with memory are the same as of a read from an ordinary variable, such as an array element or a non-volatile, non-final field.</source>
          <target state="translated">&lt;code&gt;getTarget&lt;/code&gt; とメモリの相互作用は、配列要素や不揮発性、非最終フィールドなどの通常の変数からの読み取りと同じです。</target>
        </trans-unit>
        <trans-unit id="dbd4770385ec4ef685776fb36c773c630df22d7a" translate="yes" xml:space="preserve">
          <source>The interactions with memory are the same as of a write to a volatile field. In particular, any threads is guaranteed to see the updated target the next time it calls &lt;code&gt;getTarget&lt;/code&gt;.</source>
          <target state="translated">メモリとの相互作用は、揮発性フィールドへの書き込みと同じです。特に、スレッドが次に &lt;code&gt;getTarget&lt;/code&gt; を呼び出すときに、更新されたターゲットがスレッドに表示されることが保証されています。</target>
        </trans-unit>
        <trans-unit id="d52462e55d1986519fb9c0c7702ec405729f552d" translate="yes" xml:space="preserve">
          <source>The interactions with memory are the same as of a write to an ordinary variable, such as an array element or a non-volatile, non-final field.</source>
          <target state="translated">メモリとの相互作用は、配列要素や不揮発性の不最終フィールドなどの通常の変数への書き込みと同じです。</target>
        </trans-unit>
        <trans-unit id="4a497b9e4bd64268147027cd4c3bdfe5dd24e18c" translate="yes" xml:space="preserve">
          <source>The interface &lt;code&gt;SyncResolver&lt;/code&gt; provides a way for an application to decide manually what to do when a conflict occurs. When the &lt;code&gt;CachedRowSet&lt;/code&gt; method &lt;code&gt;acceptChanges&lt;/code&gt; finishes and has detected one or more conflicts, it throws a &lt;code&gt;SyncProviderException&lt;/code&gt; object. An application can catch the exception and have it retrieve a &lt;code&gt;SyncResolver&lt;/code&gt; object by calling the method &lt;code&gt;SyncProviderException.getSyncResolver()&lt;/code&gt;.</source>
          <target state="translated">インターフェース &lt;code&gt;SyncResolver&lt;/code&gt; は、競合が発生したときに何をするかをアプリケーションが手動で決定する方法を提供します。場合 &lt;code&gt;CachedRowSet&lt;/code&gt; のメソッド &lt;code&gt;acceptChanges&lt;/code&gt; での仕上げおよび1つまたは複数の競合を検出した、それはスロー &lt;code&gt;SyncProviderException&lt;/code&gt; オブジェクト。アプリケーションは、メソッド &lt;code&gt;SyncProviderException.getSyncResolver()&lt;/code&gt; を呼び出すことにより、例外をキャッチし、 &lt;code&gt;SyncResolver&lt;/code&gt; オブジェクトを取得させることができます。</target>
        </trans-unit>
        <trans-unit id="b273bc96bd0f1dbfa83a413ec1f9f6d41c2e5dca" translate="yes" xml:space="preserve">
          <source>The interface definitions provided in this package form the basis for all compliant JDBC &lt;code&gt;RowSet&lt;/code&gt; implementations. Vendors and more advanced developers who intend to provide their own compliant &lt;code&gt;RowSet&lt;/code&gt; implementations should pay particular attention to the assertions detailed in specification interfaces.</source>
          <target state="translated">このパッケージで提供されるインターフェース定義は、準拠するすべての &lt;code&gt;RowSet&lt;/code&gt; 実装の基礎を形成します。独自の準拠 &lt;code&gt;RowSet&lt;/code&gt; 実装を提供することを意図しているベンダーおよびより高度な開発者は、仕様インターフェースで詳述されているアサーションに特に注意を払う必要があります。</target>
        </trans-unit>
        <trans-unit id="014408c9d911a7844a8b809c1365a12d70d22469" translate="yes" xml:space="preserve">
          <source>The interface for an annotation processor.</source>
          <target state="translated">アノテーションプロセッサのためのインタフェース。</target>
        </trans-unit>
        <trans-unit id="815a2f3fe499d670029a246fc413829947cb8ed8" translate="yes" xml:space="preserve">
          <source>The interface for objects expressing interest in image data through the ImageProducer interfaces.</source>
          <target state="translated">ImageProducer インターフェイスを介して画像データに興味を示すオブジェクトのためのインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="dc32d90db8ccb9d0fceccac880b29396b38f320c" translate="yes" xml:space="preserve">
          <source>The interface for objects expressing interest in image data through the ImageProducer interfaces. When a consumer is added to an image producer, the producer delivers all of the data about the image using the method calls defined in this interface.</source>
          <target state="translated">ImageProducer インターフェースを通して画像データに興味を示すオブジェクトのためのインターフェースです。コンシューマが画像プロデューサに追加されると、プロデューサは、このインタフェースで定義されたメソッド呼び出しを使用して、画像に関するすべてのデータを配信します。</target>
        </trans-unit>
        <trans-unit id="7139ca9620764f1257da5481b1366059bfffba57" translate="yes" xml:space="preserve">
          <source>The interface for objects which can produce the image data for Images.</source>
          <target state="translated">画像用の画像データを生成できるオブジェクトのインターフェースです。</target>
        </trans-unit>
        <trans-unit id="ebd39d25c8a62a39f40fbacb23ec03b0a983d6b6" translate="yes" xml:space="preserve">
          <source>The interface for objects which can produce the image data for Images. Each image contains an ImageProducer which is used to reconstruct the image whenever it is needed, for example, when a new size of the Image is scaled, or when the width or height of the Image is being requested.</source>
          <target state="translated">画像の画像データを生成することができるオブジェクトのためのインタフェースです。各画像には ImageProducer が含まれており、画像の新しいサイズが拡大縮小されたときや、画像の幅や高さが要求されたときなど、必要に応じて画像を再構築するために使用されます。</target>
        </trans-unit>
        <trans-unit id="fd46510baa1da6efd67e1d8d8ef941c14bc2bd97" translate="yes" xml:space="preserve">
          <source>The interface for objects which contain a set of items for which zero or more can be selected.</source>
          <target state="translated">ゼロ以上を選択できる項目の集合を含むオブジェクトのためのインタフェース。</target>
        </trans-unit>
        <trans-unit id="2d2e39260adc4b1e7a790d5c2b75fbeea89985e5" translate="yes" xml:space="preserve">
          <source>The interface for objects which have an adjustable numeric value contained within a bounded range of values.</source>
          <target state="translated">制限された値の範囲内に含まれる調整可能な数値を持つオブジェクトのためのインタフェースです。</target>
        </trans-unit>
        <trans-unit id="99054625c1486a351cef471e9cb044893a75dcb2" translate="yes" xml:space="preserve">
          <source>The interface is designed to support one of two input user interfaces:</source>
          <target state="translated">インターフェースは、2つの入力ユーザーインターフェースのうちの1つをサポートするように設計されています。</target>
        </trans-unit>
        <trans-unit id="b4d2d968b034bed958f5e02e5377b1b7679e8e20" translate="yes" xml:space="preserve">
          <source>The interface must be public. No additional access checks are performed.</source>
          <target state="translated">インターフェイスはパブリックでなければなりません。追加のアクセスチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="88b5e4b417f3ffb65f834c2fb994905cba4b3348" translate="yes" xml:space="preserve">
          <source>The interface that a &lt;code&gt;RowSet&lt;/code&gt; object implements in order to present itself to a &lt;code&gt;RowSetReader&lt;/code&gt; or &lt;code&gt;RowSetWriter&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;RowSetReader&lt;/code&gt; または &lt;code&gt;RowSetWriter&lt;/code&gt; オブジェクトに表示するために &lt;code&gt;RowSet&lt;/code&gt; オブジェクトが実装するインターフェイス。</target>
        </trans-unit>
        <trans-unit id="237b5c22ea8f7adabe44539264010dfc2fb6837a" translate="yes" xml:space="preserve">
          <source>The interface that a &lt;code&gt;RowSet&lt;/code&gt; object implements in order to present itself to a &lt;code&gt;RowSetReader&lt;/code&gt; or &lt;code&gt;RowSetWriter&lt;/code&gt; object. The &lt;code&gt;RowSetInternal&lt;/code&gt; interface contains methods that let the reader or writer access and modify the internal state of the rowset.</source>
          <target state="translated">&lt;code&gt;RowSetReader&lt;/code&gt; または &lt;code&gt;RowSetWriter&lt;/code&gt; オブジェクトに表示するために &lt;code&gt;RowSet&lt;/code&gt; オブジェクトが実装するインターフェイス。 &lt;code&gt;RowSetInternal&lt;/code&gt; のインタフェースは、リーダーやライターのアクセスを聞かせてと行セットの内部状態を変更するメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="2b33bf1c3e5e47208ecb26c4656693ec0a731bfe" translate="yes" xml:space="preserve">
          <source>The interface that adds support to the JDBC API for the JavaBeans&amp;trade; component model.</source>
          <target state="translated">JavaBeans&amp;trade;コンポーネントモデルのJDBCAPIにサポートを追加するインターフェース。</target>
        </trans-unit>
        <trans-unit id="76a2844bf74f0625edaf8520bc6024340f01adf0" translate="yes" xml:space="preserve">
          <source>The interface that adds support to the JDBC API for the JavaBeans&amp;trade; component model. A rowset, which can be used as a JavaBeans component in a visual Bean development environment, can be created and configured at design time and executed at run time.</source>
          <target state="translated">JavaBeans&amp;trade;コンポーネントモデルのJDBCAPIにサポートを追加するインターフェース。ビジュアルBean開発環境でJavaBeansコンポーネントとして使用できる行セットは、設計時に作成および構成し、実行時に実行できます。</target>
        </trans-unit>
        <trans-unit id="a0c8ea60334ce45697e942c34efac5bacbbb6cd8" translate="yes" xml:space="preserve">
          <source>The interface that all standard implementations of &lt;code&gt;CachedRowSet&lt;/code&gt; must implement.</source>
          <target state="translated">&lt;code&gt;CachedRowSet&lt;/code&gt; のすべての標準実装が実装する必要のあるインターフェース。</target>
        </trans-unit>
        <trans-unit id="2a366a603678d4be4c1e51b5bf1cd25eef0ba2f7" translate="yes" xml:space="preserve">
          <source>The interface that defines a &lt;code&gt;KeySelectionManager&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;KeySelectionManager&lt;/code&gt; を定義するインターフェース。</target>
        </trans-unit>
        <trans-unit id="92a994fc926b48e60bc432f1b12dd7a0cf8833ec" translate="yes" xml:space="preserve">
          <source>The interface that defines a &lt;code&gt;KeySelectionManager&lt;/code&gt;. To qualify as a &lt;code&gt;KeySelectionManager&lt;/code&gt;, the class needs to implement the method that identifies the list index given a character and the combo box data model.</source>
          <target state="translated">&lt;code&gt;KeySelectionManager&lt;/code&gt; を定義するインターフェース。 &lt;code&gt;KeySelectionManager&lt;/code&gt; としての資格を得るには、クラスは、文字とコンボボックスデータモデルを指定してリストインデックスを識別するメソッドを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="156522656c8ba136a0bd17f52208d4429357e173" translate="yes" xml:space="preserve">
          <source>The interface that every driver class must implement.</source>
          <target state="translated">すべてのドライバクラスが実装しなければならないインタフェース。</target>
        </trans-unit>
        <trans-unit id="b83e5587b5e3268f7bd3121d72946c5268c5087e" translate="yes" xml:space="preserve">
          <source>The interface to a DSA public key.</source>
          <target state="translated">DSA 公開鍵へのインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="9ed25013cc4c4ff6dfb08741855f976f636b0905" translate="yes" xml:space="preserve">
          <source>The interface to a DSA public key. DSA (Digital Signature Algorithm) is defined in NIST's FIPS-186.</source>
          <target state="translated">DSA 公開鍵へのインターフェイスです。DSA(デジタル署名アルゴリズム)は、NISTのFIPS-186で定義されています。</target>
        </trans-unit>
        <trans-unit id="463dbbe10e7a119d6739cd125d3ac314683f9e4d" translate="yes" xml:space="preserve">
          <source>The interface to a DSA public or private key.</source>
          <target state="translated">DSA 公開鍵または秘密鍵へのインターフェイス。</target>
        </trans-unit>
        <trans-unit id="044208746fb44cc724fe5c2f514ca19e29568745" translate="yes" xml:space="preserve">
          <source>The interface to a DSA public or private key. DSA (Digital Signature Algorithm) is defined in NIST's FIPS-186.</source>
          <target state="translated">DSA 公開鍵または秘密鍵へのインターフェイスです。DSA(デジタル署名アルゴリズム)は、NISTのFIPS-186で定義されています。</target>
        </trans-unit>
        <trans-unit id="adefbd72188ceac085b3c4a9f4be42b94848b3ce" translate="yes" xml:space="preserve">
          <source>The interface to a Diffie-Hellman key.</source>
          <target state="translated">Diffie-Hellman キーへのインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="0e7434107d0fa07c24f0a582e03af6e48009d021" translate="yes" xml:space="preserve">
          <source>The interface to a Diffie-Hellman private key.</source>
          <target state="translated">Diffie-Hellman 秘密鍵へのインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="4acf01c0df81cddc20d7dfb79ad62615a15e5c84" translate="yes" xml:space="preserve">
          <source>The interface to a Diffie-Hellman public key.</source>
          <target state="translated">Diffie-Hellman 公開鍵へのインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="bb7785adea75ae08367d3fad0898e7f74e3a25df" translate="yes" xml:space="preserve">
          <source>The interface to a PBE key.</source>
          <target state="translated">PBE キーへのインターフェースです。</target>
        </trans-unit>
        <trans-unit id="a842dd810f1156e09e9ab91f8793e0b003e7a971" translate="yes" xml:space="preserve">
          <source>The interface to a public or private key in &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard, such as those for RSA, or RSASSA-PSS algorithms.</source>
          <target state="translated">RSAまたはRSASSA-PSSアルゴリズム用など、&lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS＃1v2.2&lt;/a&gt;標準の公開鍵または秘密鍵へのインターフェース。</target>
        </trans-unit>
        <trans-unit id="91e4056f5dd925551a0070946d45540c821673da" translate="yes" xml:space="preserve">
          <source>The interface to an RSA multi-prime private key, as defined in the &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard, using the</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS＃1 v2.2&lt;/a&gt;標準で定義されている、RSAマルチプライム秘密鍵へのインターフェイス。</target>
        </trans-unit>
        <trans-unit id="5c1db7ae0638b04f0ceada2e49d2df2966d53fb8" translate="yes" xml:space="preserve">
          <source>The interface to an RSA multi-prime private key, as defined in the PKCS#1 v2.1, using the</source>
          <target state="translated">を使用して PKCS#1 v2.1 で定義されている RSA マルチプライム秘密鍵へのインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="a93dc36b23643b7698e78209d821a3579ed3fa7c" translate="yes" xml:space="preserve">
          <source>The interface to an RSA private key, as defined in the &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard, using the</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS＃1 v2.2&lt;/a&gt;標準で定義されている、RSA秘密鍵へのインターフェイス。</target>
        </trans-unit>
        <trans-unit id="962644ae619db56ffc6c6dad22fd41157b2fd2a0" translate="yes" xml:space="preserve">
          <source>The interface to an RSA private key, as defined in the PKCS#1 standard, using the</source>
          <target state="translated">を使用して PKCS#1 標準で定義されている RSA 秘密鍵へのインターフェイス。</target>
        </trans-unit>
        <trans-unit id="9af190896ba0f3ec911fd1ca9076fd92e2426bcb" translate="yes" xml:space="preserve">
          <source>The interface to an RSA private key.</source>
          <target state="translated">RSA 秘密鍵へのインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="40ba9f0717c9368de370e6c22458f351ecd83c45" translate="yes" xml:space="preserve">
          <source>The interface to an RSA public key.</source>
          <target state="translated">RSA 公開鍵へのインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="21ca22444f4daa0fa309978083c83a357a706d1a" translate="yes" xml:space="preserve">
          <source>The interface to an RSA public or private key.</source>
          <target state="translated">RSA 公開鍵または秘密鍵へのインターフェイス。</target>
        </trans-unit>
        <trans-unit id="7eddc4f13981b28b7fc90f393624b67b1c6494e1" translate="yes" xml:space="preserve">
          <source>The interface to an elliptic curve (EC) key.</source>
          <target state="translated">楕円曲線(EC)キーのインターフェースです。</target>
        </trans-unit>
        <trans-unit id="e0aecd668220d63ab8af6b0ed5fd7985ec0495d5" translate="yes" xml:space="preserve">
          <source>The interface to an elliptic curve (EC) private key.</source>
          <target state="translated">楕円曲線(EC)の秘密鍵へのインターフェース。</target>
        </trans-unit>
        <trans-unit id="b4cca451c5f37a2fb4b20bef00c3b41668f48298" translate="yes" xml:space="preserve">
          <source>The interface to an elliptic curve (EC) public key.</source>
          <target state="translated">楕円曲線(EC)公開鍵のインターフェース。</target>
        </trans-unit>
        <trans-unit id="9db75f5b48a5bcf9d2e52e47def4c368d334ede1" translate="yes" xml:space="preserve">
          <source>The interface used for the custom mapping of an SQL user-defined type (UDT) to a class in the Java programming language.</source>
          <target state="translated">Java プログラミング言語のクラスへの SQL ユーザー定義型 (UDT)のカスタム・マッピングに使用されるインターフェイス。</target>
        </trans-unit>
        <trans-unit id="f8a229341f31a1748b35e7f9ad3be26ae2fca2a9" translate="yes" xml:space="preserve">
          <source>The interface used for the custom mapping of an SQL user-defined type (UDT) to a class in the Java programming language. The class object for a class implementing the &lt;code&gt;SQLData&lt;/code&gt; interface will be entered in the appropriate &lt;code&gt;Connection&lt;/code&gt; object's type map along with the SQL name of the UDT for which it is a custom mapping.</source>
          <target state="translated">SQLユーザー定義型（UDT）のJavaプログラミング言語のクラスへのカスタムマッピングに使用されるインターフェース。 &lt;code&gt;SQLData&lt;/code&gt; インターフェイスを実装するクラスのクラスオブジェクトは、カスタムマッピングであるUDTのSQL名とともに、適切な &lt;code&gt;Connection&lt;/code&gt; オブジェクトのタイプマップに入力されます。</target>
        </trans-unit>
        <trans-unit id="0dfc68c91d6204b1bb749c632244d68f09a4cfe9" translate="yes" xml:space="preserve">
          <source>The interface used to execute SQL stored procedures.</source>
          <target state="translated">SQLストアドプロシージャを実行するために使用されるインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="41e253d110bb4cc12058ca9717d76c2818ce3388" translate="yes" xml:space="preserve">
          <source>The interface used to execute SQL stored procedures. The JDBC API provides a stored procedure SQL escape syntax that allows stored procedures to be called in a standard way for all RDBMSs. This escape syntax has one form that includes a result parameter and one that does not. If used, the result parameter must be registered as an OUT parameter. The other parameters can be used for input, output or both. Parameters are referred to sequentially, by number, with the first parameter being 1.</source>
          <target state="translated">SQLストアドプロシージャを実行するために使用されるインタフェース。JDBC APIは、すべてのRDBMSに対して標準的な方法でストアドプロシージャを呼び出すことを可能にするストアドプロシージャSQLエスケープ構文を提供する。このエスケープ構文には、結果パラメータを含む形式と含まない形式があります。使用する場合、結果パラメータはOUTパラメータとして登録する必要があります。他のパラメータは入力、出力、またはその両方に使用することができます。パラメータは番号順に参照され、最初のパラメータは 1 となります。</target>
        </trans-unit>
        <trans-unit id="5a31b6987c2c79396d491dc908293fbe58b41db8" translate="yes" xml:space="preserve">
          <source>The interface which defines the methods required for the implementation of the popup portion of a combo box.</source>
          <target state="translated">コンボボックスのポップアップ部分の実装に必要なメソッドを定義するインターフェースです。</target>
        </trans-unit>
        <trans-unit id="4fa870ba5a0a544cc68fd31508316e7b610bd371" translate="yes" xml:space="preserve">
          <source>The interface whose implementing classes are used to connect Script Engines with objects, such as scoped Bindings, in hosting applications.</source>
          <target state="translated">ホスティングアプリケーションでスクリプトエンジンとスコープ付きバインディングなどのオブジェクトを接続するための実装クラスが使用されるインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="ad68169d81438deea93e7cdddc0d3f1cc9aa0897" translate="yes" xml:space="preserve">
          <source>The interface whose implementing classes are used to connect Script Engines with objects, such as scoped Bindings, in hosting applications. Each scope is a set of named attributes whose values can be set and retrieved using the &lt;code&gt;ScriptContext&lt;/code&gt; methods. ScriptContexts also expose Readers and Writers that can be used by the ScriptEngines for input and output.</source>
          <target state="translated">ホスティングアプリケーションで、スクリプトエンジンをスコープ付きバインディングなどのオブジェクトに接続するために実装クラスが使用されるインターフェイス。各スコープは名前付き属性のセットであり、その値は &lt;code&gt;ScriptContext&lt;/code&gt; メソッドを使用して設定および取得できます。ScriptContextsは、入出力のためにScriptEnginesが使用できるリーダーとライターも公開します。</target>
        </trans-unit>
        <trans-unit id="b586a8bc8674bef4ff71be9874a1bca665e48ea2" translate="yes" xml:space="preserve">
          <source>The interfaces in this package are annotated with &lt;a href=&quot;../../lang/functionalinterface&quot;&gt;&lt;code&gt;FunctionalInterface&lt;/code&gt;&lt;/a&gt;. This annotation is not a requirement for the compiler to recognize an interface as a functional interface, but merely an aid to capture design intent and enlist the help of the compiler in identifying accidental violations of design intent.</source>
          <target state="translated">このパッケージのインターフェースには、&lt;a href=&quot;../../lang/functionalinterface&quot;&gt; &lt;code&gt;FunctionalInterface&lt;/code&gt; &lt;/a&gt;という注釈が付けられています。この注釈は、コンパイラーがインターフェースを機能的インターフェースとして認識するための要件ではなく、設計意図を把握し、コンパイラーが設計意図の偶発的な違反を特定するのを助けるための助けにすぎません。</target>
        </trans-unit>
        <trans-unit id="f8e80ea45bc954fd03a7e9d97b2ac2fddee32d9c" translate="yes" xml:space="preserve">
          <source>The interfaces in this package are general purpose functional interfaces used by the JDK, and are available to be used by user code as well. While they do not identify a complete set of function shapes to which lambda expressions might be adapted, they provide enough to cover common requirements. Other functional interfaces provided for specific purposes, such as &lt;a href=&quot;../../io/filefilter&quot;&gt;&lt;code&gt;FileFilter&lt;/code&gt;&lt;/a&gt;, are defined in the packages where they are used.</source>
          <target state="translated">このパッケージのインターフェースは、JDKで使用される汎用の機能インターフェースであり、ユーザーコードでも使用できます。それらはラムダ式が適応される可能性のある関数形状の完全なセットを識別しませんが、一般的な要件をカバーするのに十分です。&lt;a href=&quot;../../io/filefilter&quot;&gt; &lt;code&gt;FileFilter&lt;/code&gt; &lt;/a&gt;など、特定の目的で提供される他の機能インターフェースは、それらが使用されるパッケージで定義されています。</target>
        </trans-unit>
        <trans-unit id="afbaffc2c6398945440a2e49ce26cd85be3ec891" translate="yes" xml:space="preserve">
          <source>The interfaces of an &lt;code&gt;AttributeSet&lt;/code&gt; resemble those of the Java Collections API's &lt;code&gt;java.util.Map&lt;/code&gt; interface, but is more restrictive in the types it will accept, and combines keys and values into an &lt;code&gt;Attribute&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AttributeSet&lt;/code&gt; のインターフェースは、Java Collections APIの &lt;code&gt;java.util.Map&lt;/code&gt; インターフェースのインターフェースに似ていますが、受け入れるタイプがより制限されており、キーと値を &lt;code&gt;Attribute&lt;/code&gt; に結合します。</target>
        </trans-unit>
        <trans-unit id="4f0aedf60340a18f664d801740438927103a34c5" translate="yes" xml:space="preserve">
          <source>The interfaces of an AttributeSet resemble those of the Java Collections API's java.util.Map interface, but is more restrictive in the types it will accept, and combines keys and values into an Attribute.</source>
          <target state="translated">AttributeSetのインターフェースは、Java Collections APIのjava.util.Mapインターフェースに似ていますが、受け入れられる型がより制限されており、キーと値をAttributeに結合します。</target>
        </trans-unit>
        <trans-unit id="986cf04dad930a7f864970ec2d2807d31aa71120" translate="yes" xml:space="preserve">
          <source>The interfaces that the CatalogResolver extend specified checked exceptions, including:</source>
          <target state="translated">CatalogResolverが拡張するインターフェイスは、以下のようなチェック付き例外を指定しています。</target>
        </trans-unit>
        <trans-unit id="8f8b3b9b5f4ed01d13daed32997afb725777101d" translate="yes" xml:space="preserve">
          <source>The interfaces will be resolved similar to classes loaded via the &lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;loadClass(String,String)&lt;/code&gt;&lt;/a&gt; method using the given &lt;code&gt;codebase&lt;/code&gt;.</source>
          <target state="translated">インターフェイスは、指定された &lt;code&gt;codebase&lt;/code&gt; を使用して&lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;loadClass(String,String)&lt;/code&gt; &lt;/a&gt;メソッドを介してロードされたクラスと同様に解決されます。</target>
        </trans-unit>
        <trans-unit id="d06b1a6249e8d629b4af020df493456736e07626" translate="yes" xml:space="preserve">
          <source>The interiors of the individual stored sub-paths are all non-empty and non-overlapping. Paths are decomposed during construction into separate component non-overlapping parts, empty pieces of the path are discarded, and then these non-empty and non-overlapping properties are maintained through all subsequent CAG operations. Outlines of different component sub-paths may touch each other, as long as they do not cross so that their enclosed areas overlap.</source>
          <target state="translated">個々の保存されたサブパスの内部は、すべて空ではなく、重なり合っていません。パスは構築中に分解され、パスの空の部分は破棄され、これらの空で重なりのないプロパティは、その後のすべてのCAG操作を通して維持されます。異なるコンポーネントのサブパスのアウトラインは、それらの閉じられた領域が重なるように交差しない限り、互いに接触することができます。</target>
        </trans-unit>
        <trans-unit id="f01d7ff8717035e216dfcc98680087099b0aef79" translate="yes" xml:space="preserve">
          <source>The internal buffer array where the data is stored.</source>
          <target state="translated">データが格納されている内部バッファ配列。</target>
        </trans-unit>
        <trans-unit id="4c88b3d99811fc3ce8911d52260d63fb6bd23bc5" translate="yes" xml:space="preserve">
          <source>The internal buffer array where the data is stored. When necessary, it may be replaced by another array of a different size.</source>
          <target state="translated">データが格納されている内部バッファ配列。必要に応じて、異なるサイズの別の配列で置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="e467d22d50f08036b2d07e61bd60b6c01391383c" translate="yes" xml:space="preserve">
          <source>The internal buffer where data is stored.</source>
          <target state="translated">データが格納されている内部バッファ。</target>
        </trans-unit>
        <trans-unit id="4b83e6877fa5cf0fe0c11f806ceb26931ce826b9" translate="yes" xml:space="preserve">
          <source>The internal details of converting an &lt;code&gt;IIOMetadata&lt;/code&gt; object into a writer-specific format will vary according to the context of the operation. Typically, an &lt;code&gt;ImageWriter&lt;/code&gt; will inspect the incoming object to see if it implements additional interfaces with which the writer is familiar. This might be the case, for example, if the object was obtained by means of a read operation on a reader plug-in written by the same vendor as the writer. In this case, the writer may access the incoming object by means of its plug-in specific interfaces. In this case, the re-encoding may be close to lossless if the image file format is kept constant. If the format is changing, the writer may still attempt to preserve as much information as possible.</source>
          <target state="translated">&lt;code&gt;IIOMetadata&lt;/code&gt; オブジェクトをライター固有の形式に変換する内部の詳細は、操作のコンテキストによって異なります。通常、 &lt;code&gt;ImageWriter&lt;/code&gt; は着信オブジェクトを検査して、ライターが使い慣れている追加のインターフェースを実装しているかどうかを確認します。たとえば、ライターと同じベンダーによって作成されたリーダープラグインの読み取り操作によってオブジェクトが取得された場合などです。この場合、ライターは、そのプラグイン固有のインターフェースを使用して着信オブジェクトにアクセスできます。この場合、画像ファイル形式が一定に保たれていると、再エンコードはほぼロスレスになる可能性があります。形式が変更されている場合でも、ライターは可能な限り多くの情報を保持しようとする可能性があります。</target>
        </trans-unit>
        <trans-unit id="026c3bb1a08b7e0301eba9e3961c4a88004f9391" translate="yes" xml:space="preserve">
          <source>The internal field corresponding to the type name of this &lt;code&gt;ArrayType&lt;/code&gt; instance is also set to the class name of the array instances it describes. In other words, the methods &lt;code&gt;getClassName&lt;/code&gt; and &lt;code&gt;getTypeName&lt;/code&gt; return the same string value. The internal field corresponding to the description of this &lt;code&gt;ArrayType&lt;/code&gt; instance is set to a string value which follows the following template:</source>
          <target state="translated">この &lt;code&gt;ArrayType&lt;/code&gt; インスタンスの型名に対応する内部フィールドも、それが記述する配列インスタンスのクラス名に設定されます。つまり、 &lt;code&gt;getClassName&lt;/code&gt; メソッドと &lt;code&gt;getTypeName&lt;/code&gt; メソッドは同じ文字列値を返します。この &lt;code&gt;ArrayType&lt;/code&gt; インスタンスの説明に対応する内部フィールドは、次のテンプレートに従う文字列値に設定されます。</target>
        </trans-unit>
        <trans-unit id="97873cfa8b14ac5ef85a6a7f8b7047b379afa867" translate="yes" xml:space="preserve">
          <source>The internal implementation can approximate some of the equations and it can also eliminate some steps to avoid unnecessary operations. For example, consider a discrete integer image with non-premultiplied alpha values that uses 8 bits per component for storage. The stored values for a nearly transparent darkened red might be:</source>
          <target state="translated">内部実装は、いくつかの式を近似することができ、また、不要な操作を避けるためにいくつかのステップを排除することができます。例えば、非累乗アルファ値を持つ離散整数画像を考えてみましょう。ほぼ透明で暗くなった赤の格納値は、次のようになるかもしれません。</target>
        </trans-unit>
        <trans-unit id="0552ecd2a51650fc6dff9db26c8cd0f352bcf862" translate="yes" xml:space="preserve">
          <source>The internal subset as a string, or &lt;code&gt;null&lt;/code&gt; if there is none.</source>
          <target state="translated">文字列としての内部サブセット、または存在しない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9fc176506ed531eac8b6831ba5710d3abdbe4d9e" translate="yes" xml:space="preserve">
          <source>The internal subset as a string, or &lt;code&gt;null&lt;/code&gt; if there is none. This is does not contain the delimiting square brackets.</source>
          <target state="translated">文字列としての内部サブセット、または存在しない場合は &lt;code&gt;null&lt;/code&gt; 。これには、区切り角かっこは含まれていません。</target>
        </trans-unit>
        <trans-unit id="bc341f1196d05a1444add689183382b41f0973e8" translate="yes" xml:space="preserve">
          <source>The interpretation of &lt;code&gt;filterExpr&lt;/code&gt; is based on RFC 2254. It may additionally contain variables of the form &lt;code&gt;{i}&lt;/code&gt; -- where &lt;code&gt;i&lt;/code&gt; is an integer -- that refer to objects in the &lt;code&gt;filterArgs&lt;/code&gt; array. The interpretation of &lt;code&gt;filterExpr&lt;/code&gt; is otherwise identical to that of the &lt;code&gt;filter&lt;/code&gt; parameter of the method &lt;code&gt;search(Name, String, SearchControls)&lt;/code&gt;.</source>
          <target state="translated">解釈 &lt;code&gt;filterExpr&lt;/code&gt; は、 RFC 2254に基づいてそれは、さらに、フォームの変数を含んでいてもよい &lt;code&gt;{i}&lt;/code&gt; -ここで、 &lt;code&gt;i&lt;/code&gt; は内のオブジェクトを参照する-整数で &lt;code&gt;filterArgs&lt;/code&gt; 配列。それ以外の &lt;code&gt;filterExpr&lt;/code&gt; は、filterExprの解釈は、メソッド &lt;code&gt;search(Name, String, SearchControls)&lt;/code&gt; の &lt;code&gt;filter&lt;/code&gt; パラメーターの解釈と同じです。</target>
        </trans-unit>
        <trans-unit id="b4f366dca572308a4867f800357c6e5fcddc0581" translate="yes" xml:space="preserve">
          <source>The interpretation of the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, and &lt;code&gt;height&lt;/code&gt; arguments depends on the value of the &lt;code&gt;infoflags&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 、 &lt;code&gt;y&lt;/code&gt; 、 &lt;code&gt;width&lt;/code&gt; 、 &lt;code&gt;height&lt;/code&gt; 引数の解釈は、 &lt;code&gt;infoflags&lt;/code&gt; 引数の値によって異なります。</target>
        </trans-unit>
        <trans-unit id="1c3ddf5060a453d2b330d621230c3bacbb138c19" translate="yes" xml:space="preserve">
          <source>The interpretation of the arguments will be specific to each tool.</source>
          <target state="translated">論旨の解釈は、それぞれのツールに特有のものになります。</target>
        </trans-unit>
        <trans-unit id="5001084159cfa4f6e3056151d0d16dcc6d196054" translate="yes" xml:space="preserve">
          <source>The interprocess token may contain security-sensitive information (for example cryptographic keys). While mechanisms are encouraged to either avoid placing such sensitive information within interprocess tokens, or to encrypt the token before returning it to the application, in a typical GSS-API implementation this may not be possible. Thus the application must take care to protect the interprocess token, and ensure that any process to which the token is transferred is trustworthy.</source>
          <target state="translated">プロセス間トークンには、セキュリティ上の機密情報(例えば、暗号化キー)が含まれている可能性があります。プロセス間トークンの中にそのような機密情報を入れないようにするか、アプリケーションに返す前にトークンを暗号化することが推奨されていますが、一般的なGSS-APIの実装ではそれが不可能な場合があります。したがって、アプリケーションはプロセス間トークンを保護し、トークンが転送されるプロセスが信頼できるものであることを保証しなければなりません。</target>
        </trans-unit>
        <trans-unit id="b773d8fe124e09e0a4e5802401f905ddbdf56461" translate="yes" xml:space="preserve">
          <source>The intersect filter operation.</source>
          <target state="translated">交差フィルターの操作です。</target>
        </trans-unit>
        <trans-unit id="b17b0be7e9649edb0287ead5101582dc5811a7d1" translate="yes" xml:space="preserve">
          <source>The ints between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the int at index</source>
          <target state="translated">バッファの現在位置と限界値の間の int がある場合は、バッファの先頭にコピーされます。つまり、インデックス</target>
        </trans-unit>
        <trans-unit id="ff83170f74252dff1b7b1bd744031e44a438cc62" translate="yes" xml:space="preserve">
          <source>The inverse transform is done by converting the PCS Y components to device Gray via the inverse of the grayTRC.</source>
          <target state="translated">逆変換は、PCS Y成分をgrayTRCの逆変換を介してデバイスGrayに変換することで行われる。</target>
        </trans-unit>
        <trans-unit id="25fdeb0ee9ae180e4b8bb71954a75456e0340f80" translate="yes" xml:space="preserve">
          <source>The inverse transform is performed by converting PCS XYZ components to linear RGB components through the inverse of the above 3x3 matrix, and then converting linear RGB to device RGB through inverses of the TRCs.</source>
          <target state="translated">逆変換は、PCSのXYZ成分を上記3×3行列の逆数を介してリニアRGB成分に変換した後、TRCの逆数を介してリニアRGBをデバイスRGBに変換することで行われる。</target>
        </trans-unit>
        <trans-unit id="f319001c4eea02470448a8107b38966f0461733e" translate="yes" xml:space="preserve">
          <source>The invocation &lt;code&gt;new Random(seed)&lt;/code&gt; is equivalent to:</source>
          <target state="translated">&lt;code&gt;new Random(seed)&lt;/code&gt; の呼び出しは、以下と同等です。</target>
        </trans-unit>
        <trans-unit id="bd2eb8cb841fce5d4fbf7dc58ba68afe24b793f2" translate="yes" xml:space="preserve">
          <source>The invocation of this method, and the subsequent use of the resulting map, may cause time-consuming disk or network I/O operations to occur. This method is provided for applications that need to enumerate all of the available charsets, for example to allow user charset selection. This method is not used by the &lt;a href=&quot;#forName(java.lang.String)&quot;&gt;&lt;code&gt;forName&lt;/code&gt;&lt;/a&gt; method, which instead employs an efficient incremental lookup algorithm.</source>
          <target state="translated">このメソッドの呼び出しと、それに続く結果のマップの使用により、時間のかかるディスクまたはネットワークI / O操作が発生する可能性があります。このメソッドは、たとえばユーザーの文字セットを選択できるようにするために、使用可能なすべての文字セットを列挙する必要があるアプリケーションに提供されます。このメソッドは、効率的なインクリメンタルルックアップアルゴリズムを採用する&lt;a href=&quot;#forName(java.lang.String)&quot;&gt; &lt;code&gt;forName&lt;/code&gt; &lt;/a&gt;メソッドでは使用されません。</target>
        </trans-unit>
        <trans-unit id="babf9d5bd6a8a8c2f47c1a276ea3aea89de709e2" translate="yes" xml:space="preserve">
          <source>The invocation of this method, and the subsequent use of the resulting map, may cause time-consuming disk or network I/O operations to occur. This method is provided for applications that need to enumerate all of the available charsets, for example to allow user charset selection. This method is not used by the &lt;a href=&quot;charset#forName-java.lang.String-&quot;&gt;&lt;code&gt;forName&lt;/code&gt;&lt;/a&gt; method, which instead employs an efficient incremental lookup algorithm.</source>
          <target state="translated">このメソッドの呼び出し、および結果のマップのその後の使用により、時間のかかるディスクまたはネットワークI / O操作が発生する可能性があります。このメソッドは、たとえばユーザーが文字セットを選択できるようにするために、使用可能なすべての文字セットを列挙する必要があるアプリケーション用に提供されています。このメソッドは&lt;a href=&quot;charset#forName-java.lang.String-&quot;&gt; &lt;code&gt;forName&lt;/code&gt; &lt;/a&gt;メソッドでは使用されません。代わりに、効率的なインクリメンタルルックアップアルゴリズムが採用されています。</target>
        </trans-unit>
        <trans-unit id="9ccc3699c6e206dd25e4bae1756a647ed741cea5" translate="yes" xml:space="preserve">
          <source>The invoker will invoke its target like a call to &lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; with the indicated &lt;code&gt;type&lt;/code&gt;. That is, if the target is exactly of the given &lt;code&gt;type&lt;/code&gt;, it will behave like &lt;code&gt;invokeExact&lt;/code&gt;; otherwise it behave as if &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt; is used to convert the target to the required &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">呼び出し元は、指定された &lt;code&gt;type&lt;/code&gt; &lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;ようにターゲットを呼び出します。つまり、ターゲットが正確に指定された &lt;code&gt;type&lt;/code&gt; である場合、 &lt;code&gt;invokeExact&lt;/code&gt; のように動作します。それ以外の場合は、&lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt;を使用してターゲットを必要な &lt;code&gt;type&lt;/code&gt; に変換するかのように動作します。</target>
        </trans-unit>
        <trans-unit id="1cd061a90ad70184b57e438747c712b7578eb71c" translate="yes" xml:space="preserve">
          <source>The invoker will invoke its target like a call to &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; with the indicated &lt;code&gt;type&lt;/code&gt;. That is, if the target is exactly of the given &lt;code&gt;type&lt;/code&gt;, it will behave like &lt;code&gt;invokeExact&lt;/code&gt;; otherwise it behave as if &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt; is used to convert the target to the required &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">呼び出し元は、指定された &lt;code&gt;type&lt;/code&gt; &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;ようにターゲットを呼び出します。つまり、ターゲットが指定された &lt;code&gt;type&lt;/code&gt; のものである場合、それは &lt;code&gt;invokeExact&lt;/code&gt; のように動作します。それ以外の場合は、&lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt;を使用してターゲットを必要な &lt;code&gt;type&lt;/code&gt; に変換するかのように動作します。</target>
        </trans-unit>
        <trans-unit id="310452cd1f3861f99c2e30719b2a1c80c625887f" translate="yes" xml:space="preserve">
          <source>The issuer name field contains an X.500 distinguished name (DN). The ASN.1 definition for this is:</source>
          <target state="translated">発行者名フィールドには、X.500識別名(DN)が含まれる。このためのASN.1の定義は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="dda5b60c2df1313dd9695d0c63df28209bd62ad6" translate="yes" xml:space="preserve">
          <source>The italic action identifier</source>
          <target state="translated">イタリック体のアクション識別子</target>
        </trans-unit>
        <trans-unit id="7e99b790f51395efa49f0c878be9c43ea3745e55" translate="yes" xml:space="preserve">
          <source>The italicized style constant.</source>
          <target state="translated">イタリック体の定数です。</target>
        </trans-unit>
        <trans-unit id="39dfde18151d8c4014de09150f8c0606f546fc6b" translate="yes" xml:space="preserve">
          <source>The italicized style constant. This can be combined with the other style constants (except PLAIN) for mixed styles.</source>
          <target state="translated">イタリック体のスタイル定数。これは、他のスタイル定数(PLAINを除く)と組み合わせて、混合スタイルのために使用することができます。</target>
        </trans-unit>
        <trans-unit id="08dca3a128f626f521194ee9b931ee93ae31fa59" translate="yes" xml:space="preserve">
          <source>The item labeled &lt;code&gt;Check&lt;/code&gt; shows a check box menu item in its &quot;off&quot; state.</source>
          <target state="translated">項目ラベル &lt;code&gt;Check&lt;/code&gt; ショーその「オフ」状態のチェックボックスメニュー項目。</target>
        </trans-unit>
        <trans-unit id="e3a4374a69a545d2d36dd55d746577d2917d79cb" translate="yes" xml:space="preserve">
          <source>The items in</source>
          <target state="translated">の項目は、以下の通りです。</target>
        </trans-unit>
        <trans-unit id="25c9a779205bbb0e74f97df838d6ff1b0dfbe82b" translate="yes" xml:space="preserve">
          <source>The items in the &lt;code&gt;NodeList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">&lt;code&gt;NodeList&lt;/code&gt; の項目には、0から始まる整数インデックスを介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="cec95eb21126bfbb8afd0c3fcad98843912b0a70" translate="yes" xml:space="preserve">
          <source>The iteration order of mappings is unspecified and is subject to change.</source>
          <target state="translated">マッピングの反復順序は不定であり、変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="cf35164f15764afcdbaeb7e897602674b8179f69" translate="yes" xml:space="preserve">
          <source>The iteration order of set elements is unspecified and is subject to change.</source>
          <target state="translated">セット要素の反復順序は不定であり、変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="fbaae247dadd838110dca38086cdf6f357ef7497" translate="yes" xml:space="preserve">
          <source>The iteration variable type for each clause is determined using the clause's init and step return types.</source>
          <target state="translated">各節の反復変数の型は、節のinitとstep returnの型を使って決定されます。</target>
        </trans-unit>
        <trans-unit id="2ea26b501627b7284031eb61bb08869e5f38e2a0" translate="yes" xml:space="preserve">
          <source>The iterator for this class is not multi-threaded safe, which means that the &lt;code&gt;Path2D&lt;/code&gt; class does not guarantee that modifications to the geometry of this &lt;code&gt;Path2D&lt;/code&gt; object do not affect any iterations of that geometry that are already in process.</source>
          <target state="translated">このクラスのイテレータはマルチスレッドセーフではありません。つまり、 &lt;code&gt;Path2D&lt;/code&gt; クラスは、この &lt;code&gt;Path2D&lt;/code&gt; オブジェクトのジオメトリへの変更が、すでに処理中のジオメトリの反復に影響を与えないことを保証しません。</target>
        </trans-unit>
        <trans-unit id="39f105bda0911b5e12c6548ef142e6d88a4f28d0" translate="yes" xml:space="preserve">
          <source>The iterator for this class is not multi-threaded safe, which means that this &lt;code&gt;Path2D&lt;/code&gt; class does not guarantee that modifications to the geometry of this &lt;code&gt;Path2D&lt;/code&gt; object do not affect any iterations of that geometry that are already in process.</source>
          <target state="translated">このクラスのイテレータはマルチスレッドセーフではありません。つまり、この &lt;code&gt;Path2D&lt;/code&gt; クラスは、この &lt;code&gt;Path2D&lt;/code&gt; オブジェクトのジオメトリへの変更が、すでに処理中のジオメトリの反復に影響を与えないことを保証しません。</target>
        </trans-unit>
        <trans-unit id="43677bd6fb1d8e6b8fec88d0eb15823021a7a4bf" translate="yes" xml:space="preserve">
          <source>The iterator is</source>
          <target state="translated">イテレータは</target>
        </trans-unit>
        <trans-unit id="e77191fb3f83d580a46bbe09ef0f96ce777ac7e9" translate="yes" xml:space="preserve">
          <source>The iterator itself will be determined by the evaluation of the &lt;code&gt;iterator&lt;/code&gt; handle. Each value it produces will be stored in a loop iteration variable of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">イテレータ自体は、 &lt;code&gt;iterator&lt;/code&gt; ハンドルの評価によって決定されます。生成される各値は、タイプ &lt;code&gt;T&lt;/code&gt; のループ反復変数に格納されます。</target>
        </trans-unit>
        <trans-unit id="132e01992eabb7e0055de05d1e4e968149107d8f" translate="yes" xml:space="preserve">
          <source>The iterator must contain only implementations of the javax.xml.stream.Namespace interface.</source>
          <target state="translated">イテレータには、javax.xml.stream.Namespaceインタフェースの実装のみを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="4b6b8926c9cd791c0458723db88ac0a2c8e56241" translate="yes" xml:space="preserve">
          <source>The iterator must specify a single paragraph of text because an entire paragraph is required for the bidirectional algorithm.</source>
          <target state="translated">双方向アルゴリズムでは段落全体が必要なので、イテレータはテキストの1つの段落を指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="89828064d0a9b123146c05ca87946b21b3543b5c" translate="yes" xml:space="preserve">
          <source>The iterator returned by the &lt;code&gt;iterator&lt;/code&gt; method traverses the elements in their</source>
          <target state="translated">&lt;code&gt;iterator&lt;/code&gt; メソッドによって返されたイテレータは、それらの要素を走査します</target>
        </trans-unit>
        <trans-unit id="10f88f7effdb04bd9feaa9e20b80972277925243" translate="yes" xml:space="preserve">
          <source>The iterator returned by this method does not support removal. Invoking its &lt;a href=&quot;iterator#remove()&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; method will cause an &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">このメソッドによって返されるイテレータは、削除をサポートしていません。その&lt;a href=&quot;iterator#remove()&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、&lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="f9acc692e383944ec985155a5700e56e7ee30437" translate="yes" xml:space="preserve">
          <source>The iterator returned by this method does not support removal. Invoking its &lt;a href=&quot;iterator#remove--&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; method will cause an &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">このメソッドが返すイテレータは削除をサポートしていません。その&lt;a href=&quot;iterator#remove--&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、&lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="98e2680cc8dc738c981f8a34b95901f4a62969ea" translate="yes" xml:space="preserve">
          <source>The iterator returned by this method first yields all of the elements of the provider cache, in instantiation order. It then lazily loads and instantiates any remaining providers, adding each one to the cache in turn.</source>
          <target state="translated">このメソッドが返すイテレータは、最初にプロバイダキャッシュのすべての要素をインスタンス化の順に生成します。その後、残っているプロバイダがあれば、それをロードしてインスタンス化し、順番にキャッシュに追加していきます。</target>
        </trans-unit>
        <trans-unit id="8c539fc62d88aef2c2e54557784510917732570d" translate="yes" xml:space="preserve">
          <source>The iterator returned from a call to &lt;a href=&quot;enumeration#asIterator()&quot;&gt;&lt;code&gt;Enumeration.asIterator()&lt;/code&gt;&lt;/a&gt; does not support removal of elements from the specified collection. This is necessary to avoid unintentionally increasing the capabilities of the returned enumeration.</source>
          <target state="translated">&lt;a href=&quot;enumeration#asIterator()&quot;&gt; &lt;code&gt;Enumeration.asIterator()&lt;/code&gt; の&lt;/a&gt;呼び出しから返されたイテレーターは、指定されたコレクションからの要素の削除をサポートしていません。これは、返される列挙の機能を意図せずに増やすことを避けるために必要です。</target>
        </trans-unit>
        <trans-unit id="7596d0c3e99ad866c46e5d332b27bd327a16802e" translate="yes" xml:space="preserve">
          <source>The iterators returned by all of this class's &quot;collection view methods&quot; are</source>
          <target state="translated">このクラスのすべての「コレクションビューメソッド」によって返されるイテレータは</target>
        </trans-unit>
        <trans-unit id="34c7dfd11c16c2eb6589c6b0cbc4a3695a380b36" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of the collections returned by all of this class's &quot;collection view methods&quot; are</source>
          <target state="translated">このクラスの「コレクションビューメソッド」のすべてによって返されるコレクションの &lt;code&gt;iterator&lt;/code&gt; メソッドによって返される反復子は、次のとおりです。</target>
        </trans-unit>
        <trans-unit id="29c7796237b6ac9e744a01ef9154f15dbb163658" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of the collections returned by all of this class's &quot;collection view methods&quot; are &lt;em&gt;fail-fast&lt;/em&gt;: if the Hashtable is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future. The Enumerations returned by Hashtable's &lt;a href=&quot;#keys()&quot;&gt;&lt;code&gt;keys&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#elements()&quot;&gt;&lt;code&gt;elements&lt;/code&gt;&lt;/a&gt; methods are &lt;em&gt;not&lt;/em&gt; fail-fast; if the Hashtable is structurally modified at any time after the enumeration is created then the results of enumerating are undefined.</source>
          <target state="translated">このクラスのすべての「コレクションビューメソッド」によって返されるコレクションの &lt;code&gt;iterator&lt;/code&gt; メソッドによって返されるイテレータは、&lt;em&gt;フェイルファストです&lt;/em&gt;。イテレータが作成された後、イテレータ自体の &lt;code&gt;remove&lt;/code&gt; 以外の方法で、ハッシュテーブルが構造的に変更された場合メソッドの場合、イテレータは&lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;をスローします。したがって、同時変更に直面した場合、イテレータは、将来の不確定な時間に任意の非決定論的な動作のリスクを冒すのではなく、迅速かつクリーンに失敗します。 Hashtableの&lt;a href=&quot;#keys()&quot;&gt; &lt;code&gt;keys&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#elements()&quot;&gt; &lt;code&gt;elements&lt;/code&gt; &lt;/a&gt;メソッドによって返される列挙は&lt;em&gt;そうで&lt;/em&gt;はあり&lt;em&gt;ません&lt;/em&gt;フェイルファスト; 列挙が作成された後、いつでもハッシュテーブルが構造的に変更された場合、列挙の結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="ec72967e40c5a796ec5761ebb8f998c720cf475e" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of the collections returned by all of this class's &quot;collection view methods&quot; are &lt;em&gt;fail-fast&lt;/em&gt;: if the Hashtable is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future. The Enumerations returned by Hashtable's keys and elements methods are &lt;em&gt;not&lt;/em&gt; fail-fast.</source>
          <target state="translated">このクラスのすべての「コレクションビューメソッド」によって返されるコレクションの &lt;code&gt;iterator&lt;/code&gt; メソッドによって返されるイテレータは&lt;em&gt;フェイルファストです&lt;/em&gt;。イテレータが作成された後、イテレータ自身の &lt;code&gt;remove&lt;/code&gt; 以外の方法でHashtableがいつでも構造的に変更された場合メソッドの場合、イテレータは&lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;をスローします。したがって、同時変更に直面した場合、反復子は、将来の不確定な時点で恣意的で非決定的な動作の危険を冒すのではなく、迅速かつ完全に失敗します。 Hashtableのキーと要素のメソッドによって返される列挙は、フェイルファストではあり&lt;em&gt;ませ&lt;/em&gt;ん。</target>
        </trans-unit>
        <trans-unit id="f8e4d6a942fbd556ea4a1ce02973c09959dfe624" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of the collections returned by all of this class's &quot;collection view methods&quot; are &lt;em&gt;fail-fast&lt;/em&gt;: if the map is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</source>
          <target state="translated">このクラスの「コレクションビューメソッド」のすべてによって返されるコレクションの &lt;code&gt;iterator&lt;/code&gt; メソッドによって返されるイテレータは&lt;em&gt;フェイルファストです&lt;/em&gt;。イテレータの作成後、マップが構造的に変更されている場合は、イテレータ自身の &lt;code&gt;remove&lt;/code&gt; 以外の方法でメソッドの場合、イテレータは&lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;をスローします。したがって、同時変更に直面した場合、反復子は、将来の不確定な時点で恣意的で非決定的な動作の危険を冒すのではなく、迅速かつ完全に失敗します。</target>
        </trans-unit>
        <trans-unit id="cccc07ae6435dcf4ba8a8450330120f750cedaed" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of the collections returned by all of this class's collection view methods are &lt;em&gt;fail-fast&lt;/em&gt;: if the map is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</source>
          <target state="translated">このクラスのすべてのコレクションビューメソッドによって返されるコレクションの &lt;code&gt;iterator&lt;/code&gt; メソッドによって返されるイテレータは&lt;em&gt;フェイルファストです&lt;/em&gt;。イテレータの作成後、マップが構造的にいつでも変更された場合は、イテレータ自身の &lt;code&gt;remove&lt;/code&gt; メソッドを使用しない限り、イテレータは&lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;をスローします。したがって、同時変更に直面した場合、反復子は、将来の不確定な時点で恣意的で非決定的な動作の危険を冒すのではなく、迅速かつ完全に失敗します。</target>
        </trans-unit>
        <trans-unit id="c6afa57c2f19c822e3e46741e459736d8f927b2f" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of this class's &quot;collection views&quot; (that is, &lt;code&gt;entrySet()&lt;/code&gt;, &lt;code&gt;keySet()&lt;/code&gt;, and &lt;code&gt;values()&lt;/code&gt;) may not fail-fast (unlike the Hashtable implementation). These iterators are guaranteed to traverse elements as they existed upon construction exactly once, and may (but are not guaranteed to) reflect any modifications subsequent to construction.</source>
          <target state="translated">このクラスの「コレクションビュー」の &lt;code&gt;iterator&lt;/code&gt; メソッドによって返されるイテレータ（つまり、 &lt;code&gt;entrySet()&lt;/code&gt; 、 &lt;code&gt;keySet()&lt;/code&gt; 、 &lt;code&gt;values()&lt;/code&gt; ）は、（ハッシュテーブルの実装とは異なり）フェイルファストではない場合があります。これらのイテレータは、構築時に存在した要素を1回だけトラバースすることが保証されており、構築後の変更を反映する場合があります（ただし、保証されません）。</target>
        </trans-unit>
        <trans-unit id="2da37306b969710494d91cdeb111735b4bbcce4b" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#listIterator(int)&quot;&gt;&lt;code&gt;listIterator&lt;/code&gt;&lt;/a&gt; methods are &lt;em&gt;fail-fast&lt;/em&gt;: if the list is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;a href=&quot;listiterator#remove()&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;listiterator#add(E)&quot;&gt;&lt;code&gt;add&lt;/code&gt;&lt;/a&gt; methods, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</source>
          <target state="translated">このクラスの&lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;#listIterator(int)&quot;&gt; &lt;code&gt;listIterator&lt;/code&gt; &lt;/a&gt;メソッドによって返されるイテレータは&lt;em&gt;フェイルファストです&lt;/em&gt;。イテレータの作成後にリストが構造的に変更された場合、イテレータ自体の&lt;a href=&quot;listiterator#remove()&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;メソッドまたは&lt;a href=&quot;listiterator#add(E)&quot;&gt; &lt;code&gt;add&lt;/code&gt; &lt;/a&gt;メソッド以外の方法で、イテレータは&lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;をスローします。したがって、同時変更に直面した場合、イテレータは、将来の不確定な時間に任意の非決定論的な動作のリスクを冒すのではなく、迅速かつクリーンに失敗します。</target>
        </trans-unit>
        <trans-unit id="82961df45650161b22b12c350ab2fc92ce76e188" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#listIterator(int)&quot;&gt;&lt;code&gt;listIterator&lt;/code&gt;&lt;/a&gt; methods are &lt;em&gt;fail-fast&lt;/em&gt;: if the vector is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;a href=&quot;listiterator#remove()&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;listiterator#add(E)&quot;&gt;&lt;code&gt;add&lt;/code&gt;&lt;/a&gt; methods, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future. The &lt;a href=&quot;enumeration&quot;&gt;&lt;code&gt;Enumerations&lt;/code&gt;&lt;/a&gt; returned by the &lt;a href=&quot;#elements()&quot;&gt;&lt;code&gt;elements&lt;/code&gt;&lt;/a&gt; method are &lt;em&gt;not&lt;/em&gt; fail-fast; if the Vector is structurally modified at any time after the enumeration is created then the results of enumerating are undefined.</source>
          <target state="translated">このクラスの&lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;#listIterator(int)&quot;&gt; &lt;code&gt;listIterator&lt;/code&gt; &lt;/a&gt;メソッドによって返されるイテレータは&lt;em&gt;フェイルファストです&lt;/em&gt;。イテレータが作成された後、イテレータ自体の&lt;a href=&quot;listiterator#remove()&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;listiterator#add(E)&quot;&gt; &lt;code&gt;add&lt;/code&gt; &lt;/a&gt;メソッド以外の方法でベクトルが構造的に変更された場合、イテレータは&lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;をスローします。したがって、同時変更に直面した場合、イテレータは、将来の不確定な時間に任意の非決定論的な動作のリスクを冒すのではなく、迅速かつクリーンに失敗します。&lt;a href=&quot;enumeration&quot;&gt; &lt;code&gt;Enumerations&lt;/code&gt; &lt;/a&gt;で返される&lt;a href=&quot;#elements()&quot;&gt; &lt;code&gt;elements&lt;/code&gt; &lt;/a&gt;方法はあり&lt;em&gt;ません&lt;/em&gt;フェイルファスト; 列挙が作成された後、いつでもベクトルが構造的に変更された場合、列挙の結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="274376d37e7301e7cea9ebed5591dc1ce0b96e4e" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; method are &lt;em&gt;fail-fast&lt;/em&gt;: If the deque is modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will generally throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</source>
          <target state="translated">このクラスの&lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt;メソッドによって返されるイテレータは&lt;em&gt;フェイルファストです&lt;/em&gt;。イテレータが作成された後、イテレータ自体の &lt;code&gt;remove&lt;/code&gt; メソッド以外の方法でdequeが変更された場合、イテレータは通常&lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; を&lt;/a&gt;スローします。したがって、同時変更に直面した場合、イテレータは、将来の不確定な時間に任意の非決定論的な動作のリスクを冒すのではなく、迅速かつクリーンに失敗します。</target>
        </trans-unit>
        <trans-unit id="8c30ea8ce4044e97226c1fcafa002e966fc4f237" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;listIterator&lt;/code&gt; methods are</source>
          <target state="translated">このクラスの &lt;code&gt;iterator&lt;/code&gt; と &lt;code&gt;listIterator&lt;/code&gt; メソッドによって返される反復子は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9b599f5e9e9a7e23378ba3619eaae05e0afe1eb2" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;code&gt;iterator&lt;/code&gt; method are</source>
          <target state="translated">このクラスの &lt;code&gt;iterator&lt;/code&gt; メソッドによって返される反復子は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="2e2ec0ba428f721ed670c5e29b21fdd61f4f2917" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;code&gt;iterator&lt;/code&gt; method are &lt;em&gt;fail-fast&lt;/em&gt;: if the set is modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</source>
          <target state="translated">このクラスの &lt;code&gt;iterator&lt;/code&gt; メソッドによって返されるイテレータは&lt;em&gt;フェイルファストです&lt;/em&gt;。イテレータが作成された後、イテレータ自身の &lt;code&gt;remove&lt;/code&gt; メソッド以外の方法でセットが変更されると、イテレータは&lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;をスローします。したがって、同時変更に直面した場合、反復子は、将来の不確定な時点で恣意的で非決定的な動作の危険を冒すのではなく、迅速かつ完全に失敗します。</target>
        </trans-unit>
        <trans-unit id="283d7498c0d3b7b909b279a49824d5148b7ab7bf" translate="yes" xml:space="preserve">
          <source>The java.awt.Robot object allows code to generate native-level mouse and keyboard events as well as read the screen. It could allow malicious code to control the system, run other programs, read the display, and deny mouse and keyboard access to the user.</source>
          <target state="translated">java.awt.Robot オブジェクトを使用すると、コードがネイティブレベルのマウスやキーボードのイベントを生成したり、画面を読み取ったりすることができます。これにより、悪意のあるコードがシステムを制御したり、他のプログラムを実行したり、ディスプレイを読んだり、ユーザのマウスやキーボードへのアクセスを拒否したりすることができます。</target>
        </trans-unit>
        <trans-unit id="7057c3b7f819f2cd324cffa3c20a81381e435781" translate="yes" xml:space="preserve">
          <source>The java.lang.management API is thread-safe.</source>
          <target state="translated">java.lang.management APIはスレッドセーフです。</target>
        </trans-unit>
        <trans-unit id="e7c83bed6a4c21ec225e1e00cad4e5dd333ca4f4" translate="yes" xml:space="preserve">
          <source>The java.net package can be roughly divided in two sections:</source>
          <target state="translated">java.netパッケージは大きく分けて2つのセクションに分けることができます。</target>
        </trans-unit>
        <trans-unit id="e7c2bad11a3cf57b9ee11fb20fc537e2355f9273" translate="yes" xml:space="preserve">
          <source>The java.nio.file package defines classes to access files and file systems. The API to access file and file system attributes is defined in the &lt;a href=&quot;attribute/package-summary&quot;&gt;&lt;code&gt;java.nio.file.attribute&lt;/code&gt;&lt;/a&gt; package. The &lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.nio.file.spi&lt;/code&gt;&lt;/a&gt; package is used by service provider implementors wishing to extend the platform default provider, or to construct other provider implementations.</source>
          <target state="translated">java.nio.fileパッケージは、ファイルおよびファイルシステムにアクセスするためのクラスを定義します。ファイルおよびファイルシステムの属性にアクセスするためのAPIは、&lt;a href=&quot;attribute/package-summary&quot;&gt; &lt;code&gt;java.nio.file.attribute&lt;/code&gt; &lt;/a&gt;パッケージで定義されています。&lt;a href=&quot;spi/package-summary&quot;&gt; &lt;code&gt;java.nio.file.spi&lt;/code&gt; の&lt;/a&gt;パッケージは、プラットフォームのデフォルトのプロバイダを拡張するために、または他のプロバイダ実装を構築したいサービスプロバイダの実装で使用されています。</target>
        </trans-unit>
        <trans-unit id="99d0b7979f480d0de703c57bc073a94c2aeed640" translate="yes" xml:space="preserve">
          <source>The javax.print.attribute package includes &lt;a href=&quot;hashattributeset&quot;&gt;HashAttributeSet&lt;/a&gt; as a concrete implementation of the attribute set interface. &lt;code&gt;HashAttributeSet&lt;/code&gt; provides an attribute set based on a hash map. You can use this implementation or provide your own implementation of interface &lt;code&gt;AttributeSet&lt;/code&gt;.</source>
          <target state="translated">javax.print.attributeパッケージには、属性セットインターフェースの具体的な実装として&lt;a href=&quot;hashattributeset&quot;&gt;HashAttributeSetが&lt;/a&gt;含まれています。 &lt;code&gt;HashAttributeSet&lt;/code&gt; は、ハッシュマップに基づく属性セットを提供します。この実装を使用するか、 &lt;code&gt;AttributeSet&lt;/code&gt; インターフェースの独自の実装を提供できます。</target>
        </trans-unit>
        <trans-unit id="1678718fb51e8a372345b9b0dfb2993996ca9d85" translate="yes" xml:space="preserve">
          <source>The jaxp.properties file is read only once by the JAXP implementation and its values are then cached for future use. If the file does not exist when the first attempt is made to read from it, no further attempts are made to check for its existence. It is not possible to change the value of any property in jaxp.properties after it has been read for the first time.</source>
          <target state="translated">jaxp.propertiesファイルは、JAXP実装によって一度だけ読み込まれ、その値は将来の使用のためにキャッシュされます。最初に読み込もうとしたときにファイルが存在しない場合は、それ以降はそのファイルの存在を確認するための試みは行われません。jaxp.properties内のいかなるプロパティの値も、初めて読み込まれた後では変更することはできません。</target>
        </trans-unit>
        <trans-unit id="6c521e858ecd4ab6e95f87508838395e8e62c1d9" translate="yes" xml:space="preserve">
          <source>The job completed successfully.</source>
          <target state="translated">無事に仕事が完了しました。</target>
        </trans-unit>
        <trans-unit id="0b636fb4d8f71bf41576b4222e32f43072da2d49" translate="yes" xml:space="preserve">
          <source>The job completed successfully. This value should be supported.</source>
          <target state="translated">ジョブは正常に完了しました。この値をサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="8155a352638c0e35699f4e18930a5f89bca7e15c" translate="yes" xml:space="preserve">
          <source>The job completed with errors (and possibly warnings too).</source>
          <target state="translated">エラー(警告の可能性もあります)で仕事が完了しました。</target>
        </trans-unit>
        <trans-unit id="0fd4acc47470905777d0757b6122b704c219c78d" translate="yes" xml:space="preserve">
          <source>The job completed with errors (and possibly warnings too). This value should be supported if the implementation detects errors.</source>
          <target state="translated">ジョブはエラーで完了しました(そして、場合によっては警告も)。この値は、実装がエラーを検出する場合にサポートされるべきです。</target>
        </trans-unit>
        <trans-unit id="3a3c2a022a57f1b5ea9853cd04a785a252013a06" translate="yes" xml:space="preserve">
          <source>The job completed with warnings.</source>
          <target state="translated">警告を受けて仕事が完了しました。</target>
        </trans-unit>
        <trans-unit id="8272d85dfb27f8fd7635d41c55d941a998fa4421" translate="yes" xml:space="preserve">
          <source>The job completed with warnings. This value should be supported if the implementation detects warnings.</source>
          <target state="translated">警告でジョブが完了しました。この値は、実装が警告を検出する場合にサポートされるべきです。</target>
        </trans-unit>
        <trans-unit id="ac82b7846af137164072bad73d3b370dc566c461" translate="yes" xml:space="preserve">
          <source>The job has been aborted by the system (usually while the job was in the &lt;code&gt;PROCESSING&lt;/code&gt; or &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; state), the printer has completed aborting the job, and all job status attributes have reached their final values for the job.</source>
          <target state="translated">ジョブはシステムによって中止され（通常、ジョブが &lt;code&gt;PROCESSING&lt;/code&gt; または &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; 状態にある間）、プリンターはジョブの中止を完了し、すべてのジョブ状況属性がジョブの最終値に達しました。</target>
        </trans-unit>
        <trans-unit id="3fa0a38dd507499cc814820dacf2ad92d0a08deb" translate="yes" xml:space="preserve">
          <source>The job has been aborted by the system (usually while the job was in the &lt;code&gt;PROCESSING&lt;/code&gt; or &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; state), the printer has completed aborting the job, and all job status attributes have reached their final values for the job. While the printer is aborting the job, the job remains in its current state, but the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain the &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; and &lt;code&gt;ABORTED_BY_SYSTEM&lt;/code&gt; values. When the job moves to the &lt;code&gt;ABORTED&lt;/code&gt; state, the &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; value, if present, must be removed, but the &lt;code&gt;ABORTED_BY_SYSTEM&lt;/code&gt; value, if present, must remain.</source>
          <target state="translated">ジョブはシステムによって中止され（通常、ジョブが &lt;code&gt;PROCESSING&lt;/code&gt; または &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; 状態にある間）、プリンターはジョブの中止を完了し、すべてのジョブ状況属性がジョブの最終値に達しました。プリンターがジョブを中止している間、ジョブは現在の状態のままですが、ジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性には、 &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; 値と &lt;code&gt;ABORTED_BY_SYSTEM&lt;/code&gt; 値が含まれている必要があります。ジョブが &lt;code&gt;ABORTED&lt;/code&gt; 状態に移行するとき、 &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; 値が存在する場合は削除する必要がありますが、 &lt;code&gt;ABORTED_BY_SYSTEM&lt;/code&gt; 値が存在する場合はそのままにしておく必要があります。</target>
        </trans-unit>
        <trans-unit id="1318a856b10c21c5a8306845084662ae891af882" translate="yes" xml:space="preserve">
          <source>The job has been aborted by the system (usually while the job was in the PROCESSING or PROCESSING_STOPPED state), the printer has completed aborting the job, and all job status attributes have reached their final values for the job. While the printer is aborting the job, the job remains in its current state, but the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain the PROCESSING_TO_STOP_POINT and ABORTED_BY_SYSTEM values. When the job moves to the ABORTED state, the PROCESSING_TO_STOP_POINT value, if present, must be removed, but the ABORTED_BY_SYSTEM value, if present, must remain.</source>
          <target state="translated">ジョブはシステムによって中止され（通常、ジョブがPROCESSINGまたはPROCESSING_STOPPED状態である間）、プリンターはジョブの中止を完了し、すべてのジョブステータス属性がジョブの最終値に達しました。プリンターがジョブを中止している間、ジョブは現在の状態のままですが、ジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性にはPROCESSING_TO_STOP_POINTおよびABORTED_BY_SYSTEM値が含まれている必要があります。ジョブがABORTED状態に移行するとき、PROCESSING_TO_STOP_POINT値（存在する場合）は削除する必要がありますが、ABORTED_BY_SYSTEM値（存在する場合）はそのままにする必要があります。</target>
        </trans-unit>
        <trans-unit id="8826a5e766a81a6295f135841ab968154d7bfc03" translate="yes" xml:space="preserve">
          <source>The job has been canceled by some human agency, the printer has completed canceling the job, and all job status attributes have reached their final values for the job.</source>
          <target state="translated">ジョブが何らかの人間の機関によってキャンセルされ、プリンタがジョブのキャンセルを完了し、すべてのジョブステータス属性がジョブの最終値に達した。</target>
        </trans-unit>
        <trans-unit id="30faefcc51f8781c70e62a210124c825ec9c7178" translate="yes" xml:space="preserve">
          <source>The job has been canceled by some human agency, the printer has completed canceling the job, and all job status attributes have reached their final values for the job. While the printer is canceling the job, the job remains in its current state, but the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain the &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; value and one of the &lt;code&gt;CANCELED_BY_USER&lt;/code&gt;, &lt;code&gt;CANCELED_BY_OPERATOR&lt;/code&gt;, or &lt;code&gt;CANCELED_AT_DEVICE&lt;/code&gt; values. When the job moves to the &lt;code&gt;CANCELED&lt;/code&gt; state, the &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; value, if present, must be removed, but the CANCELED_BY_</source>
          <target state="translated">一部の人的機関によってジョブがキャンセルされ、プリンターがジョブのキャンセルを完了し、すべてのジョブステータス属性がジョブの最終値に達しました。プリンターがジョブをキャンセルしている間、ジョブは現在の状態のままですが、ジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性には、 &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; 値と、 &lt;code&gt;CANCELED_BY_USER&lt;/code&gt; 、 &lt;code&gt;CANCELED_BY_OPERATOR&lt;/code&gt; 、または &lt;code&gt;CANCELED_AT_DEVICE&lt;/code&gt; 値のいずれかが含まれている必要があります。ジョブが &lt;code&gt;CANCELED&lt;/code&gt; 状態に移行すると、 &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; 値が存在する場合は削除する必要がありますが、CANCELED_BY_</target>
        </trans-unit>
        <trans-unit id="4332eeb1d3703dff2185e0b2a548dc30deab2693" translate="yes" xml:space="preserve">
          <source>The job has been canceled by some human agency, the printer has completed canceling the job, and all job status attributes have reached their final values for the job. While the printer is canceling the job, the job remains in its current state, but the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain the PROCESSING_TO_STOP_POINT value and one of the CANCELED_BY_USER, CANCELED_BY_OPERATOR, or CANCELED_AT_DEVICE values. When the job moves to the CANCELED state, the PROCESSING_TO_STOP_POINT value, if present, must be removed, but the CANCELED_BY_</source>
          <target state="translated">人間の機関によってジョブがキャンセルされ、プリンターがジョブのキャンセルを完了し、すべてのジョブステータス属性がジョブの最終値に達しました。プリンターがジョブをキャンセルしている間、ジョブは現在の状態のままですが、ジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性には、PROCESSING_TO_STOP_POINT値と、CANCELED_BY_USER、CANCELED_BY_OPERATOR、またはCANCELED_AT_DEVICEのいずれかの値が含まれている必要があります。ジョブがCANCELED状態に移行すると、PROCESSING_TO_STOP_POINT値が存在する場合は削除する必要がありますが、CANCELED_BY_</target>
        </trans-unit>
        <trans-unit id="ce2a00888b20866cd4ea217f4a48f5d8196ce648" translate="yes" xml:space="preserve">
          <source>The job has been forwarded to a device or print system that is unable to send back status.</source>
          <target state="translated">ジョブがデバイスまたはプリントシステムに転送されており、ステータスを送信することができません。</target>
        </trans-unit>
        <trans-unit id="513bf67deaad4fb47c4e06f335d75d6db09fb79a" translate="yes" xml:space="preserve">
          <source>The job has been forwarded to a device or print system that is unable to send back status. The printer sets the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; attribute to &lt;code&gt;COMPLETED&lt;/code&gt; and adds the &lt;code&gt;QUEUED_IN_DEVICE&lt;/code&gt; reason to the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute to indicate that the printer has no additional information about the job and never will have any better information.</source>
          <target state="translated">ジョブは、ステータスを送り返すことができないデバイスまたは印刷システムに転送されました。プリンターは、ジョブの&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;属性を &lt;code&gt;COMPLETED&lt;/code&gt; に設定し、 &lt;code&gt;QUEUED_IN_DEVICE&lt;/code&gt; 理由をジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性に追加して、プリンターにジョブに関する追加情報がなく、それ以上の情報がないことを示します。</target>
        </trans-unit>
        <trans-unit id="a653104c3b056ccc18c59053c73e2cb5305a3165" translate="yes" xml:space="preserve">
          <source>The job has been forwarded to a device or print system that is unable to send back status. The printer sets the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; attribute to COMPLETED and adds the QUEUED_IN_DEVICE reason to the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute to indicate that the printer has no additional information about the job and never will have any better information.</source>
          <target state="translated">ジョブは、ステータスを返信できないデバイスまたは印刷システムに転送されました。プリンターはジョブの&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;属性をCOMPLETEDに設定し、QUEUED_IN_DEVICE理由をジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性に追加して、プリンターがジョブに関する追加情報を持たず、より良い情報を持たないことを示します。</target>
        </trans-unit>
        <trans-unit id="33f7a56a3010a619ba3c9f828da9dd6b5acbab28" translate="yes" xml:space="preserve">
          <source>The job has completed successfully or with warnings or errors after processing, all of the job media sheets have been successfully stacked in the appropriate output bin(s), and all job status attributes have reached their final values for the job.</source>
          <target state="translated">ジョブが正常に完了したか、処理後に警告またはエラーが発生し、すべてのジョブメディアシートが適切な出力ビンに正常にスタックされ、すべてのジョブステータス属性がジョブの最終値に達しました。</target>
        </trans-unit>
        <trans-unit id="7e0a7f6df9f0ca0950e5594598134f9b5ed8a210" translate="yes" xml:space="preserve">
          <source>The job has completed successfully or with warnings or errors after processing, all of the job media sheets have been successfully stacked in the appropriate output bin(s), and all job status attributes have reached their final values for the job. The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain one of these values: &lt;code&gt;COMPLETED_SUCCESSFULLY&lt;/code&gt;, &lt;code&gt;COMPLETED_WITH_WARNINGS&lt;/code&gt;, or &lt;code&gt;COMPLETED_WITH_ERRORS&lt;/code&gt;.</source>
          <target state="translated">ジョブは正常に完了したか、処理後に警告またはエラーが発生し、すべてのジョブメディアシートが適切な出力ビンに正常にスタックされ、すべてのジョブステータス属性がジョブの最終値に達しました。ジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性には、 &lt;code&gt;COMPLETED_SUCCESSFULLY&lt;/code&gt; 、 &lt;code&gt;COMPLETED_WITH_WARNINGS&lt;/code&gt; 、または &lt;code&gt;COMPLETED_WITH_ERRORS&lt;/code&gt; のいずれかの値が含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="266c985b90e5a872533d16a586b8f9e841a46189" translate="yes" xml:space="preserve">
          <source>The job has completed successfully or with warnings or errors after processing, all of the job media sheets have been successfully stacked in the appropriate output bin(s), and all job status attributes have reached their final values for the job. The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain one of these values: COMPLETED_SUCCESSFULLY, COMPLETED_WITH_WARNINGS, or COMPLETED_WITH_ERRORS.</source>
          <target state="translated">ジョブは正常に完了したか、処理後に警告またはエラーが発生し、すべてのジョブメディアシートが適切な排紙ビンに正常にスタックされ、すべてのジョブステータス属性がジョブの最終値に達しました。ジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性には、COMPLETED_SUCCESSFULLY、COMPLETED_WITH_WARNINGS、またはCOMPLETED_WITH_ERRORSのいずれかの値を含める必要があります。</target>
        </trans-unit>
        <trans-unit id="6c2e880de00e68d2f8400fd2197b6700463297eb" translate="yes" xml:space="preserve">
          <source>The job has stopped while processing for any number of reasons and will return to the &lt;code&gt;PROCESSING&lt;/code&gt; state as soon as the reasons are no longer present.</source>
          <target state="translated">さまざまな理由で処理中にジョブが停止し、理由がなくなるとすぐに &lt;code&gt;PROCESSING&lt;/code&gt; 状態に戻ります。</target>
        </trans-unit>
        <trans-unit id="8d9059818004d12f90da07d03f90fef85b39741b" translate="yes" xml:space="preserve">
          <source>The job has stopped while processing for any number of reasons and will return to the PROCESSING state as soon as the reasons are no longer present.</source>
          <target state="translated">ジョブは何らかの理由で処理中に停止しており、その理由がなくなるとすぐに処理中の状態に戻ります。</target>
        </trans-unit>
        <trans-unit id="675475d1527f18e49351cb37e1cfcf5fde5e8631" translate="yes" xml:space="preserve">
          <source>The job is a candidate to start processing, but is not yet processing.</source>
          <target state="translated">このお仕事は加工開始候補ですが、まだ加工していません。</target>
        </trans-unit>
        <trans-unit id="bb62af76ec98818871166d0863a023e576d42b3b" translate="yes" xml:space="preserve">
          <source>The job is in the &lt;code&gt;PENDING_HELD&lt;/code&gt;, &lt;code&gt;PENDING&lt;/code&gt;, or &lt;code&gt;PROCESSING&lt;/code&gt; state, but more specifically, the printer has completed enough processing of the document to be able to start marking and the job is waiting for the marker.</source>
          <target state="translated">ジョブは &lt;code&gt;PENDING_HELD&lt;/code&gt; 、 &lt;code&gt;PENDING&lt;/code&gt; 、または &lt;code&gt;PROCESSING&lt;/code&gt; 状態ですが、より具体的には、プリンターは、マーキングを開始できるようにドキュメントの十分な処理を完了し、ジョブはマーカーを待機しています。</target>
        </trans-unit>
        <trans-unit id="33c9dfb835982ae57e76b90a418374af74a82b16" translate="yes" xml:space="preserve">
          <source>The job is in the &lt;code&gt;PENDING_HELD&lt;/code&gt;, &lt;code&gt;PENDING&lt;/code&gt;, or &lt;code&gt;PROCESSING&lt;/code&gt; state, but more specifically, the printer has completed enough processing of the document to be able to start marking and the job is waiting for the marker. Systems that require human intervention to release jobs put the job into the &lt;code&gt;PENDING_HELD&lt;/code&gt; job state. Systems that automatically select a job to use the marker put the job into the &lt;code&gt;PENDING&lt;/code&gt; job state or keep the job in the &lt;code&gt;PROCESSING&lt;/code&gt; job state while waiting for the marker, depending on implementation. All implementations put the job into (or back into) the &lt;code&gt;PROCESSING&lt;/code&gt; state when marking does begin.</source>
          <target state="translated">ジョブは &lt;code&gt;PENDING_HELD&lt;/code&gt; 、 &lt;code&gt;PENDING&lt;/code&gt; 、または &lt;code&gt;PROCESSING&lt;/code&gt; 状態ですが、より具体的には、プリンターは、マーキングを開始できるようにドキュメントの十分な処理を完了し、ジョブはマーカーを待機しています。ジョブを解放するために人間の介入を必要とするシステムは、ジョブを &lt;code&gt;PENDING_HELD&lt;/code&gt; ジョブ状態にします。マーカーを使用するジョブを自動的に選択するシステムは、実装に応じて、ジョブを &lt;code&gt;PENDING&lt;/code&gt; ジョブ状態にするか、マーカーを待機している間、ジョブを &lt;code&gt;PROCESSING&lt;/code&gt; ジョブ状態に保ちます。すべての実装は、マーキングが開始されると、ジョブを &lt;code&gt;PROCESSING&lt;/code&gt; 状態にします（または戻します）。</target>
        </trans-unit>
        <trans-unit id="61c006330a7170bc7b7bc855d3dbbdd28d9639bf" translate="yes" xml:space="preserve">
          <source>The job is in the &lt;code&gt;PROCESSING&lt;/code&gt; state, but more specifically, the printer has queued the document data.</source>
          <target state="translated">ジョブは &lt;code&gt;PROCESSING&lt;/code&gt; 状態ですが、より具体的には、プリンターはドキュメントデータをキューに入れています。</target>
        </trans-unit>
        <trans-unit id="22a79027329f135f999662a310e8f2acaf5c42d9" translate="yes" xml:space="preserve">
          <source>The job is in the &lt;code&gt;PROCESSING&lt;/code&gt; state, but more specifically, the printer ia interpreting the document data.</source>
          <target state="translated">ジョブは &lt;code&gt;PROCESSING&lt;/code&gt; 状態ですが、より具体的には、プリンターはドキュメントデータを解釈します。</target>
        </trans-unit>
        <trans-unit id="5abeac9ba8d8defe01ad50de60caa73052a69a7d" translate="yes" xml:space="preserve">
          <source>The job is in the &lt;code&gt;PROCESSING&lt;/code&gt; state, but more specifically, the printer is interpreting document data and producing another electronic representation.</source>
          <target state="translated">ジョブは &lt;code&gt;PROCESSING&lt;/code&gt; 状態ですが、より具体的には、プリンターはドキュメントデータを解釈し、別の電子表現を生成しています。</target>
        </trans-unit>
        <trans-unit id="94fbbfda8878e9c8767ac15a0f96595971bbe119" translate="yes" xml:space="preserve">
          <source>The job is in the PENDING_HELD, PENDING, or PROCESSING state, but more specifically, the printer has completed enough processing of the document to be able to start marking and the job is waiting for the marker. Systems that require human intervention to release jobs put the job into the PENDING_HELD job state. Systems that automatically select a job to use the marker put the job into the PENDING job state or keep the job in the PROCESSING job state while waiting for the marker, depending on implementation. All implementations put the job into (or back into) the PROCESSING state when marking does begin.</source>
          <target state="translated">ジョブはPENDING_HELD、PENDING、またはPROCESSINGの状態にありますが、より具体的には、プリンタがドキュメントの処理を十分に完了してマーカーを開始できるようになり、ジョブはマーカーを待っている状態です。ジョブを解放するために人の介入を必要とするシステムは、ジョブを PENDING_HELD ジョブ状態にします。マーカーを使用するジョブを自動的に選択するシステムは、実装に応じて、ジョブをPENDINGジョブ状態にするか、またはマーカーを待っている間、ジョブをPROCESSINGジョブ状態に保つ。すべての実装では、マーキングが開始されたときに、ジョブをPROCESSING状態に(または元の状態に)戻す。</target>
        </trans-unit>
        <trans-unit id="440add9f3c70b123e291ba209d9d13c202aebf8a" translate="yes" xml:space="preserve">
          <source>The job is in the PROCESSING state, but more specifically, the printer has queued the document data.</source>
          <target state="translated">ジョブは処理状態にあるが、より具体的には、プリンタが文書データをキューに入れている状態である。</target>
        </trans-unit>
        <trans-unit id="6550860dc3bbe7f26a73280ffe7ded2c79054235" translate="yes" xml:space="preserve">
          <source>The job is in the PROCESSING state, but more specifically, the printer ia interpreting the document data.</source>
          <target state="translated">ジョブは処理中の状態にあるが、より具体的には、プリンタが文書データを解釈している状態である。</target>
        </trans-unit>
        <trans-unit id="50339846786a673ce932982a8475461929680e1d" translate="yes" xml:space="preserve">
          <source>The job is in the PROCESSING state, but more specifically, the printer is interpreting document data and producing another electronic representation.</source>
          <target state="translated">ジョブは処理状態にあるが、より具体的には、プリンタは文書データを解釈し、別の電子的表現を生成している。</target>
        </trans-unit>
        <trans-unit id="6a7ceaa57ea80e7bb8771c4a3056dcbe66797d94" translate="yes" xml:space="preserve">
          <source>The job is not a candidate for processing for any number of reasons but will return to the &lt;code&gt;PENDING&lt;/code&gt; state as soon as the reasons are no longer present.</source>
          <target state="translated">ジョブは、さまざまな理由で処理の候補ではありませんが、理由がなくなるとすぐに &lt;code&gt;PENDING&lt;/code&gt; 状態に戻ります。</target>
        </trans-unit>
        <trans-unit id="075f3a0a6331f37be1d4ffb1de347f1fc0d64ba7" translate="yes" xml:space="preserve">
          <source>The job is not a candidate for processing for any number of reasons but will return to the &lt;code&gt;PENDING&lt;/code&gt; state as soon as the reasons are no longer present. The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute must indicate why the job is no longer a candidate for processing.</source>
          <target state="translated">ジョブは、さまざまな理由で処理の候補ではありませんが、理由がなくなるとすぐに &lt;code&gt;PENDING&lt;/code&gt; 状態に戻ります。ジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性は、ジョブが処理の候補ではなくなった理由を示す必要があります。</target>
        </trans-unit>
        <trans-unit id="7c883467e1f58bb632ab1fe6de3c39731be7c1e7" translate="yes" xml:space="preserve">
          <source>The job is not a candidate for processing for any number of reasons but will return to the PENDING state as soon as the reasons are no longer present. The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute must indicate why the job is no longer a candidate for processing.</source>
          <target state="translated">ジョブはさまざまな理由で処理の候補にはなりませんが、理由がなくなるとすぐにPENDING状態に戻ります。ジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性は、ジョブが処理の候補ではなくなった理由を示す必要があります。</target>
        </trans-unit>
        <trans-unit id="bebfca1ea3866b4e064346584b98ffdd7a9baba5" translate="yes" xml:space="preserve">
          <source>The job is not necessarily printed yet, but the data has been transferred successfully from the client to the print service.</source>
          <target state="translated">ジョブがまだ印刷されていないとは限りませんが、クライアントから印刷サービスにデータが正常に転送されています。</target>
        </trans-unit>
        <trans-unit id="c50316af496d257de7881101a659e9cde7e0ec16" translate="yes" xml:space="preserve">
          <source>The job is not necessarily printed yet, but the data has been transferred successfully from the client to the print service. The client may free data resources.</source>
          <target state="translated">ジョブはまだ印刷されていないとは限らないが、クライアントから印刷サービスにデータが正常に転送されている。クライアントはデータリソースを解放してもよい。</target>
        </trans-unit>
        <trans-unit id="2334f9c2afdad5f4d62f294b3a81fb71d3fae696" translate="yes" xml:space="preserve">
          <source>The job is processing.</source>
          <target state="translated">仕事は加工です。</target>
        </trans-unit>
        <trans-unit id="209216b743606ba4c7f7175fec73f11c99e87d88" translate="yes" xml:space="preserve">
          <source>The job is processing. One or more of the following activities is occurring:</source>
          <target state="translated">仕事が処理されている。以下のアクティビティのうち、1つ以上が発生している。</target>
        </trans-unit>
        <trans-unit id="a6a0dd57e931629de301fcb48e865636ac06175c" translate="yes" xml:space="preserve">
          <source>The job is using, or is attempting to use, one or more hardware devices that are interpreting a PDL, making marks on a medium, and/or performing finishing, such as stapling, etc.</source>
          <target state="translated">この仕事は、PDLを解釈し、媒体にマークを付け、および/またはステープリングなどの仕上げを行う1つ以上のハードウェア装置を使用しているか、または使用しようとしている。</target>
        </trans-unit>
        <trans-unit id="cbbe4328ec52eb0099830e578ba82c98df184ae4" translate="yes" xml:space="preserve">
          <source>The job is using, or is attempting to use, one or more purely software processes that are analyzing, creating, or interpreting a PDL, etc.</source>
          <target state="translated">この仕事は、PDLなどを分析、作成、解釈する1つ以上の純粋なソフトウェアプロセスを使用している、または使用しようとしている。</target>
        </trans-unit>
        <trans-unit id="4f96406038b892668822c1209d18a7df1c7acab9" translate="yes" xml:space="preserve">
          <source>The job must be printed exactly as specified. or else rejected.</source>
          <target state="translated">ジョブは指定された通りに印刷されなければなりません。</target>
        </trans-unit>
        <trans-unit id="c07c4ad8a99d51d5f9f9cf302dd2f36cdfc5a2e9" translate="yes" xml:space="preserve">
          <source>The job of honoring this property, and recognizing a user drag gesture, lies with the look and feel implementation, and in particular, the component's &lt;code&gt;TextUI&lt;/code&gt;. When automatic drag handling is enabled, most look and feels (including those that subclass &lt;code&gt;BasicLookAndFeel&lt;/code&gt;) begin a drag and drop operation whenever the user presses the mouse button over a selection and then moves the mouse a few pixels. Setting this property to &lt;code&gt;true&lt;/code&gt; can therefore have a subtle effect on how selections behave.</source>
          <target state="translated">このプロパティを尊重し、ユーザーのドラッグジェスチャを認識する作業は、ルックアンドフィールの実装、特にコンポーネントの &lt;code&gt;TextUI&lt;/code&gt; にあります。自動ドラッグ処理が有効になっている場合、ほとんどのルックアンドフィール（ &lt;code&gt;BasicLookAndFeel&lt;/code&gt; をサブクラス化するものを含む）は、ユーザーが選択範囲上でマウスボタンを押してからマウスを数ピクセル移動するたびに、ドラッグアンドドロップ操作を開始します。したがって、このプロパティを &lt;code&gt;true&lt;/code&gt; に設定すると、選択の動作に微妙な影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="8263ec18c1bd0146e5254ea9fdfbabf1798d17c2" translate="yes" xml:space="preserve">
          <source>The job of honoring this property, and recognizing a user drag gesture, lies with the look and feel implementation, and in particular, the list's &lt;code&gt;ListUI&lt;/code&gt;. When automatic drag handling is enabled, most look and feels (including those that subclass &lt;code&gt;BasicLookAndFeel&lt;/code&gt;) begin a drag and drop operation whenever the user presses the mouse button over an item and then moves the mouse a few pixels. Setting this property to &lt;code&gt;true&lt;/code&gt; can therefore have a subtle effect on how selections behave.</source>
          <target state="translated">このプロパティを尊重し、ユーザーのドラッグジェスチャを認識する仕事は、ルックアンドフィールの実装、特にリストの &lt;code&gt;ListUI&lt;/code&gt; にあります。自動ドラッグ処理が有効になっている場合、ほとんどのルックアンドフィール（ &lt;code&gt;BasicLookAndFeel&lt;/code&gt; のサブクラスを含む）は、ユーザーがアイテム上でマウスボタンを押してからマウスを数ピクセル動かすたびに、ドラッグアンドドロップ操作を開始します。したがって、このプロパティを &lt;code&gt;true&lt;/code&gt; に設定すると、選択の動作に微妙な影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="278ebdd7ed175d50dd30671af7a8707ab6ae0042" translate="yes" xml:space="preserve">
          <source>The job of honoring this property, and recognizing a user drag gesture, lies with the look and feel implementation, and in particular, the table's &lt;code&gt;TableUI&lt;/code&gt;. When automatic drag handling is enabled, most look and feels (including those that subclass &lt;code&gt;BasicLookAndFeel&lt;/code&gt;) begin a drag and drop operation whenever the user presses the mouse button over an item (in single selection mode) or a selection (in other selection modes) and then moves the mouse a few pixels. Setting this property to &lt;code&gt;true&lt;/code&gt; can therefore have a subtle effect on how selections behave.</source>
          <target state="translated">このプロパティを尊重し、ユーザーのドラッグジェスチャを認識する作業は、ルックアンドフィールの実装、特にテーブルの &lt;code&gt;TableUI&lt;/code&gt; にあります。自動ドラッグ処理が有効になっている場合、ほとんどのルックアンドフィール（ &lt;code&gt;BasicLookAndFeel&lt;/code&gt; をサブクラス化するものを含む）は、ユーザーがアイテム（単一選択モード）または選択（他の選択モード）上でマウスボタンを押すたびにドラッグアンドドロップ操作を開始します。次に、マウスを数ピクセル移動します。したがって、このプロパティを &lt;code&gt;true&lt;/code&gt; に設定すると、選択の動作に微妙な影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="ef1391de24846ba8b9cad0ce6268ef0f51927a87" translate="yes" xml:space="preserve">
          <source>The job of honoring this property, and recognizing a user drag gesture, lies with the look and feel implementation, and in particular, the tree's &lt;code&gt;TreeUI&lt;/code&gt;. When automatic drag handling is enabled, most look and feels (including those that subclass &lt;code&gt;BasicLookAndFeel&lt;/code&gt;) begin a drag and drop operation whenever the user presses the mouse button over an item and then moves the mouse a few pixels. Setting this property to &lt;code&gt;true&lt;/code&gt; can therefore have a subtle effect on how selections behave.</source>
          <target state="translated">このプロパティを尊重し、ユーザーのドラッグジェスチャを認識する仕事は、ルックアンドフィールの実装、特にツリーの &lt;code&gt;TreeUI&lt;/code&gt; にあります。自動ドラッグ処理が有効になっている場合、ほとんどのルックアンドフィール（ &lt;code&gt;BasicLookAndFeel&lt;/code&gt; のサブクラスを含む）は、ユーザーがアイテム上でマウスボタンを押してからマウスを数ピクセル動かすたびに、ドラッグアンドドロップ操作を開始します。したがって、このプロパティを &lt;code&gt;true&lt;/code&gt; に設定すると、選択の動作に微妙な影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="cb8c62716a47758e70f54b73e39fca959c16d48b" translate="yes" xml:space="preserve">
          <source>The job state is unknown.</source>
          <target state="translated">ジョブの状態は不明です。</target>
        </trans-unit>
        <trans-unit id="a228d2f87c5f4fb3cabf7a84903a5003c90b6606" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the document data's document format (doc flavor) is not among those supported by the printer.</source>
          <target state="translated">文書データの文書形式(docフレーバー)がプリンタでサポートされていないため、システムによってジョブが中断されました。</target>
        </trans-unit>
        <trans-unit id="3af2aeb06b03ea668e154919c750fa9342e5cced" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the document data's document format (doc flavor) is not among those supported by the printer. If the client specifies a doc flavor with a MIME type of &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt;, the printer may abort the job if the printer cannot determine the document data's actual format through auto-sensing (even if the printer supports the document format if specified explicitly). This value must be supported, since a doc flavor is required to be specified for each doc.</source>
          <target state="translated">ドキュメントデータのドキュメント形式（docフレーバー）がプリンターでサポートされている形式ではないため、ジョブはシステムによって中止されました。クライアントがMIMEタイプが &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt; の docフレーバーを指定した場合、プリンターがドキュメントデータの実際の形式を自動検知で判別できないと、プリンターがジョブを中止することがあります（プリンターがドキュメント形式をサポートしている場合でも、明示的に指定されます）。各ドキュメントにドキュメントフレーバーを指定する必要があるため、この値はサポートされている必要があります。</target>
        </trans-unit>
        <trans-unit id="abb2c035cbb322ddd0719e07d0d1f19562c87a2f" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer determined while attempting to decompress the document's data that the compression is actually not among those supported by the printer.</source>
          <target state="translated">ドキュメントのデータを解凍しようとしたときに、プリンタが圧縮が実際にはプリンタでサポートされていないと判断したため、システムによってジョブが中断されました。</target>
        </trans-unit>
        <trans-unit id="64678937e2569caf310fb1b6b932bfb85891b875" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer determined while attempting to decompress the document's data that the compression is actually not among those supported by the printer. This value must be supported, since &lt;a href=&quot;compression&quot;&gt;&lt;code&gt;Compression&lt;/code&gt;&lt;/a&gt; is a required doc description attribute.</source>
          <target state="translated">ドキュメントのデータを圧縮解除しようとしているときに、プリンタが、実際にサポートされていない圧縮であると判断したため、ジョブはシステムによって中止されました。&lt;a href=&quot;compression&quot;&gt; &lt;code&gt;Compression&lt;/code&gt; &lt;/a&gt;は必須のドキュメント説明属性であるため、この値はサポートされている必要があります。</target>
        </trans-unit>
        <trans-unit id="3a3ac7544a00673c7f8c53016bf8bc4243efaf78" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while decompressing it.</source>
          <target state="translated">ドキュメントデータを解凍中にプリンタでエラーが発生したため、システムによってジョブが中断されました。</target>
        </trans-unit>
        <trans-unit id="8663e6a801b7bcbc697ec1ce30f2121d2d569f0d" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while decompressing it. If the printer posts this reason, the document data has already passed any tests that would have led to the &lt;code&gt;UNSUPPORTED_COMPRESSION&lt;/code&gt; job state reason.</source>
          <target state="translated">プリンタがドキュメントデータの解凍中にエラーを検出したため、ジョブはシステムによって中止されました。プリンターがこの理由を通知した場合、ドキュメントデータは、 &lt;code&gt;UNSUPPORTED_COMPRESSION&lt;/code&gt; ジョブ状態の理由につながるテストにすでに合格しています。</target>
        </trans-unit>
        <trans-unit id="c9651e27388cf9a31a3794779e922572b6356320" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while decompressing it. If the printer posts this reason, the document data has already passed any tests that would have led to the UNSUPPORTED_COMPRESSION job state reason.</source>
          <target state="translated">プリンタがドキュメントデータを解凍中にエラーが発生したため、システムによってジョブが中断されました。プリンタがこの理由を投稿した場合、文書データは、UNSUPPORTED_COMPRESSIONジョブ状態の理由につながるすべてのテストにすでに合格しています。</target>
        </trans-unit>
        <trans-unit id="a5891e464aabaf6d903e99070ab1cfd2da3a228a" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while processing it.</source>
          <target state="translated">ジョブの処理中にプリンタが文書データにエラーが発生したため、システムによってジョブが中断されました。</target>
        </trans-unit>
        <trans-unit id="398a3dd1a51ddcc4bdb2d5a16e080071a7759c72" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while processing it. If the printer posts this reason, the document data has already passed any tests that would have led to the &lt;code&gt;UNSUPPORTED_DOCUMENT_FORMAT&lt;/code&gt; job state reason.</source>
          <target state="translated">プリンタがドキュメントデータの処理中にエラーを検出したため、ジョブはシステムによって中止されました。プリンターがこの理由を通知した場合、ドキュメントデータは、 &lt;code&gt;UNSUPPORTED_DOCUMENT_FORMAT&lt;/code&gt; ジョブ状態の理由につながるテストにすでに合格しています。</target>
        </trans-unit>
        <trans-unit id="4a1074380020f59f8ea4577a52c011d7142eb05b" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while processing it. If the printer posts this reason, the document data has already passed any tests that would have led to the UNSUPPORTED_DOCUMENT_FORMAT job state reason.</source>
          <target state="translated">ジョブの処理中にプリンタがドキュメントデータにエラーが発生したため、システムによってジョブが中断されました。プリンタがこの理由を投稿した場合、文書データはすでにUNSUPPORTED_DOCUMENT_FORMATジョブ状態の理由につながるすべてのテストに合格しています。</target>
        </trans-unit>
        <trans-unit id="bfe1ef1e2b2babdc8e61cb1c8d9f3c8fd20627e3" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system.</source>
          <target state="translated">その仕事はシステムによって中止されました。</target>
        </trans-unit>
        <trans-unit id="80021461b49438812dfae96acc98b5c17eca0040" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system. Either the job (1) is in the process of being aborted, (2) has been aborted by the system and placed in the &lt;code&gt;ABORTED&lt;/code&gt; state, or (3) has been aborted by the system and placed in the &lt;code&gt;PENDING_HELD&lt;/code&gt; state, so that a user or operator can manually try the job again. This value should be supported.</source>
          <target state="translated">ジョブはシステムによって中止されました。ジョブが（1）中止されている途中であるか、（2）システムによって中止されて &lt;code&gt;ABORTED&lt;/code&gt; 状態になっている、または（3）システムによって中止されて &lt;code&gt;PENDING_HELD&lt;/code&gt; 状態になっているため、ユーザーまたはオペレーターは、手動でジョブを再試行できます。この値はサポートされている必要があります。</target>
        </trans-unit>
        <trans-unit id="0c81f6d0b7d6876f860772ffa689ed85b796bc1f" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system. Either the job (1) is in the process of being aborted, (2) has been aborted by the system and placed in the ABORTED state, or (3) has been aborted by the system and placed in the PENDING_HELD state, so that a user or operator can manually try the job again. This value should be supported.</source>
          <target state="translated">ジョブはシステムによって中止されました。ジョブが(1)アボートされる過程にあるか、(2)システムによってアボートされてABORTED状態になったか、(3)システムによってアボートされてPENDING_HELD状態になったかのいずれかであり、ユーザーまたはオペレータが手動でジョブを再試行できるようになっています。この値をサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="75d03c55e5439d8b95948d37e4f4c9b4680f7e7f" translate="yes" xml:space="preserve">
          <source>The job was canceled by an unidentified local user, i.e., a user at a console at the device.</source>
          <target state="translated">ジョブは、身元不明のローカルユーザー、つまりデバイスのコンソールにいるユーザーによってキャンセルされました。</target>
        </trans-unit>
        <trans-unit id="8bf7d9b5fa01bc8bff3bfee2e8a72f12d197056b" translate="yes" xml:space="preserve">
          <source>The job was canceled by an unidentified local user, i.e., a user at a console at the device. This value should be supported if the implementation supports canceling jobs at the console.</source>
          <target state="translated">ジョブは、未確認のローカルユーザ、すなわち、デバイスのコンソールにいるユーザによってキャンセルされました。実装がコンソールでのジョブのキャンセルをサポートしている場合、この値をサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="3cc153a43dcc333ffda8997278b8d3b1822d0927" translate="yes" xml:space="preserve">
          <source>The job was canceled by the &lt;a href=&quot;../printservice&quot;&gt;&lt;code&gt;PrintService&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ジョブは&lt;a href=&quot;../printservice&quot;&gt; &lt;code&gt;PrintService&lt;/code&gt; &lt;/a&gt;によってキャンセルされました。</target>
        </trans-unit>
        <trans-unit id="6feb69c5c44972d5c437c2b6edf6e054d3d4c3b5" translate="yes" xml:space="preserve">
          <source>The job was canceled by the operator, i.e., by a user who has been authenticated as having operator privileges (whether local or remote).</source>
          <target state="translated">ジョブはオペレータによってキャンセルされました。</target>
        </trans-unit>
        <trans-unit id="eede175a41da055cf9fbe7c9bea273be2babd32b" translate="yes" xml:space="preserve">
          <source>The job was canceled by the operator, i.e., by a user who has been authenticated as having operator privileges (whether local or remote). If the security policy is to allow anyone to cancel anyone's job, then this value may be used when the job is canceled by someone other than the owner of the job. For such a security policy, in effect, everyone is an operator as far as canceling jobs is concerned. This value should be supported if the implementation permits canceling by someone other than the owner of the job.</source>
          <target state="translated">ジョブはオペレータ、つまりオペレータ権限を持つと認証されたユーザ(ローカルかリモートかに関わらず)によってキャンセルされました。セキュリティポリシーが誰でも誰かのジョブをキャンセルできるようにする場合、ジョブの所有者以外の人がジョブをキャンセルした場合に、この値を使用することができます。このようなセキュリティポリシーでは、事実上、ジョブのキャンセルに関する限り、誰もがオペレータである。実装がジョブの所有者以外によるキャンセルを許可している場合、この値はサポートされるべきである。</target>
        </trans-unit>
        <trans-unit id="32c5c26e90c8714bae45cb570ce509f49f621fd3" translate="yes" xml:space="preserve">
          <source>The job was canceled by the owner of the job, i.e., by a user whose authenticated identity is the same as the value of the originating user that created the Print Job, or by some other authorized end-user, such as a member of the job owner's security group.</source>
          <target state="translated">ジョブの所有者、すなわち、認証されたIDが印刷ジョブを作成した元のユーザの値と同じであるユーザ、またはジョブ所有者のセキュリティグループのメンバーなど、他の承認されたエンドユーザによって、ジョブがキャンセルされました。</target>
        </trans-unit>
        <trans-unit id="e77770a6bf43cb0d83acec3fbfc99bccb18adceb" translate="yes" xml:space="preserve">
          <source>The job was canceled by the owner of the job, i.e., by a user whose authenticated identity is the same as the value of the originating user that created the Print Job, or by some other authorized end-user, such as a member of the job owner's security group. This value should be supported.</source>
          <target state="translated">ジョブの所有者、すなわち、認証されたIDが印刷ジョブを作成した元のユーザーの値と同じであるユーザー、またはジョブ所有者のセキュリティグループのメンバーなど、他の承認されたエンドユーザーによって、ジョブがキャンセルされました。この値はサポートされるべきである。</target>
        </trans-unit>
        <trans-unit id="92c041c56ddbd824f348c9978061838a2c76180a" translate="yes" xml:space="preserve">
          <source>The job was not completely submitted for some unforeseen reason.</source>
          <target state="translated">予期せぬ理由で完全に提出された仕事ではありませんでした。</target>
        </trans-unit>
        <trans-unit id="a608d3651752def364a16735ed653b3688b7fab7" translate="yes" xml:space="preserve">
          <source>The job was not completely submitted for some unforeseen reason. Possibilities include (1) the printer has crashed before the job was fully submitted by the client, (2) the printer or the document transfer method has crashed in some non-recoverable way before the document data was entirely transferred to the printer, (3) the client crashed before the job was fully submitted.</source>
          <target state="translated">予期せぬ理由でジョブが完全に投入されなかった。可能性としては、(1)クライアントがジョブを完全に投入する前にプリンタがクラッシュした、(2)文書データがプリンタに完全に転送される前に、プリンタまたは文書転送方法が復旧不可能な方法でクラッシュした、(3)クライアントがジョブを完全に投入する前にクラッシュした、などが考えられます。</target>
        </trans-unit>
        <trans-unit id="7da33eec734a2ad4a396547252a8edff4bbad6a3" translate="yes" xml:space="preserve">
          <source>The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute may indicate why the job has stopped processing. For example, if the output device is stopped, the &lt;code&gt;PRINTER_STOPPED&lt;/code&gt; value may be included in the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">ジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性は、ジョブが処理を停止した理由を示している場合があります。たとえば、出力デバイスが停止している場合、 &lt;code&gt;PRINTER_STOPPED&lt;/code&gt; 値がジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性に含まれている可能性があります。</target>
        </trans-unit>
        <trans-unit id="e3b5dbd8418dde3945a7a407762a21b4f98ee6fc" translate="yes" xml:space="preserve">
          <source>The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute may indicate why the job has stopped processing. For example, if the output device is stopped, the PRINTER_STOPPED value may be included in the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">ジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性は、ジョブが処理を停止した理由を示す場合があります。たとえば、出力デバイスが停止している場合、PRINTER_STOPPED値がジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性に含まれることがあります。</target>
        </trans-unit>
        <trans-unit id="fc3386dfd5b10cc369651ee2e31cf078b7359b41" translate="yes" xml:space="preserve">
          <source>The justification for the title.</source>
          <target state="translated">タイトルの正当性。</target>
        </trans-unit>
        <trans-unit id="e273c4e24e3008768287b9553b857266ad9f1734" translate="yes" xml:space="preserve">
          <source>The key &lt;code&gt;String&lt;/code&gt; should be a locale independent key for the role. It is not intended to be used as the actual &lt;code&gt;String&lt;/code&gt; to display to the user. To get the localized string, use &lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt;&lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">キー &lt;code&gt;String&lt;/code&gt; は、ロールのロケールに依存しないキーである必要があります。これは、ユーザーに表示する実際の &lt;code&gt;String&lt;/code&gt; として使用することを意図したものではありません。ローカライズされた文字列を取得するには、&lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt; &lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="e9272016a913da868c969604ed679ec13ea1bb51" translate="yes" xml:space="preserve">
          <source>The key &lt;code&gt;String&lt;/code&gt; should be a locale independent key for the state. It is not intended to be used as the actual &lt;code&gt;String&lt;/code&gt; to display to the user. To get the localized string, use &lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt;&lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">キー &lt;code&gt;String&lt;/code&gt; は、状態のロケールに依存しないキーである必要があります。これは、ユーザーに表示する実際の &lt;code&gt;String&lt;/code&gt; として使用することを意図したものではありません。ローカライズされた文字列を取得するには、&lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt; &lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="afeba22c76bd0a4c4accca690f5b24b6151023b3" translate="yes" xml:space="preserve">
          <source>The key abstraction introduced in this package is &lt;em&gt;stream&lt;/em&gt;. The classes &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;intstream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;longstream&quot;&gt;&lt;code&gt;LongStream&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;doublestream&quot;&gt;&lt;code&gt;DoubleStream&lt;/code&gt;&lt;/a&gt; are streams over objects and the primitive &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt; types. Streams differ from collections in several ways:</source>
          <target state="translated">このパッケージで導入された主要な抽象化は&lt;em&gt;stream&lt;/em&gt;です。クラス&lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;intstream&quot;&gt; &lt;code&gt;IntStream&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;longstream&quot;&gt; &lt;code&gt;LongStream&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;doublestream&quot;&gt; &lt;code&gt;DoubleStream&lt;/code&gt; &lt;/a&gt;は、オブジェクトとプリミティブ &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt;long&lt;/code&gt; 、および &lt;code&gt;double&lt;/code&gt; 型のストリームです。ストリームは、いくつかの点でコレクションと異なります。</target>
        </trans-unit>
        <trans-unit id="9a84e5030e8e2a0fb9cc31fad2393fb5bb07bb25" translate="yes" xml:space="preserve">
          <source>The key assumptions are that the class has a nullary constructor and that its state is accurately represented by matching pairs of &quot;setter&quot; and &quot;getter&quot; methods in the order they are returned by the Introspector. In addition to providing code-free persistence for JavaBeans, the &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; provides a convenient means to effect persistent storage for classes that have a constructor that, while not nullary, simply requires some property values as arguments.</source>
          <target state="translated">重要な前提は、クラスにはnullコンストラクターがあり、その状態は、イントロスペクターによって返される順序で「setter」メソッドと「getter」メソッドの一致するペアによって正確に表されることです。 &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; は、JavaBeansにコードなしの永続性を提供することに加えて、nullaryではないが、引数としていくつかのプロパティ値を必要とするだけのコンストラクターを持つクラスの永続的なストレージを実現する便利な手段を提供します。</target>
        </trans-unit>
        <trans-unit id="db226997511f7e7996e39cc88dbdf0bd036ad847" translate="yes" xml:space="preserve">
          <source>The key code of the key that was pressed in a keyboard event.</source>
          <target state="translated">キーボードイベントで押されたキーのキーコード。</target>
        </trans-unit>
        <trans-unit id="c3114daa0611f12be89e4183584fe33d0fae4b2f" translate="yes" xml:space="preserve">
          <source>The key code of the key that was pressed in a keyboard event. This has been replaced by KeyEvent.getKeyCode()</source>
          <target state="translated">キーボードイベントで押されたキーのキーコード。これはKeyEvent.getKeyCode()に置き換えられました。</target>
        </trans-unit>
        <trans-unit id="7b01a7825dcb6f5ba043067697b1d8be70e427a1" translate="yes" xml:space="preserve">
          <source>The key contains all of the characters in the line starting with the first non-white space character and up to, but not including, the first unescaped &lt;code&gt;'='&lt;/code&gt;, &lt;code&gt;':'&lt;/code&gt;, or white space character other than a line terminator. All of these key termination characters may be included in the key by escaping them with a preceding backslash character; for example,</source>
          <target state="translated">キーには、行内の最初の非空白文字で始まり、エスケープされていない最初の &lt;code&gt;'='&lt;/code&gt; 、 &lt;code&gt;':'&lt;/code&gt; 、または行末記号以外の空白文字までのすべての文字が含まれます。これらのキー終了文字はすべて、先行するバックスラッシュ文字でエスケープすることにより、キーに含めることができます。例えば、</target>
        </trans-unit>
        <trans-unit id="10925f9bd3a7bf79574e77d146d7ce5cafee6d2d" translate="yes" xml:space="preserve">
          <source>The key elements of this package include:</source>
          <target state="translated">このパッケージの主な要素は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="c6cae5d488028cb19cb419452c7a2edb32b1f590" translate="yes" xml:space="preserve">
          <source>The key event is passed to every &lt;code&gt;KeyListener&lt;/code&gt; or &lt;code&gt;KeyAdapter&lt;/code&gt; object which registered to receive such events using the component's &lt;code&gt;addKeyListener&lt;/code&gt; method. (&lt;code&gt;KeyAdapter&lt;/code&gt; objects implement the &lt;code&gt;KeyListener&lt;/code&gt; interface.)</source>
          <target state="translated">キーイベントは、コンポーネントの &lt;code&gt;addKeyListener&lt;/code&gt; メソッドを使用してそのようなイベントを受信するように登録されたすべての &lt;code&gt;KeyListener&lt;/code&gt; または &lt;code&gt;KeyAdapter&lt;/code&gt; オブジェクトに渡されます。（ &lt;code&gt;KeyAdapter&lt;/code&gt; オブジェクトは &lt;code&gt;KeyListener&lt;/code&gt; インターフェースを実装します。）</target>
        </trans-unit>
        <trans-unit id="c9a2b7616c25d87b7cce2eb0034e5fe8882713d0" translate="yes" xml:space="preserve">
          <source>The key for Unicode locale extension ('u').</source>
          <target state="translated">Unicode ロケール拡張子 ('u')のキー。</target>
        </trans-unit>
        <trans-unit id="8428fe01972833a14a72389b516a924f19614bf1" translate="yes" xml:space="preserve">
          <source>The key for the private use extension ('x').</source>
          <target state="translated">私用拡張子('x')の鍵。</target>
        </trans-unit>
        <trans-unit id="39adb11f6504601433950670cbefd81cef9c88e0" translate="yes" xml:space="preserve">
          <source>The key is &lt;code&gt;&quot;fruits&quot;&lt;/code&gt; and the associated element is:</source>
          <target state="translated">キーは &lt;code&gt;&quot;fruits&quot;&lt;/code&gt; で、関連する要素は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a0149c1aab52142013341ca2aee2dbd36da314ee" translate="yes" xml:space="preserve">
          <source>The key material of a &lt;code&gt;KerberosKey&lt;/code&gt; is defined as the value of the &lt;code&gt;keyValue&lt;/code&gt; above.</source>
          <target state="translated">&lt;code&gt;KerberosKey&lt;/code&gt; のキーマテリアルは、上記の &lt;code&gt;keyValue&lt;/code&gt; の値として定義されます。</target>
        </trans-unit>
        <trans-unit id="e092b2c83cdba16c729e10c599650354f61f11ae" translate="yes" xml:space="preserve">
          <source>The key material of an &lt;code&gt;EncryptionKey&lt;/code&gt; is defined as the value of the &lt;code&gt;keyValue&lt;/code&gt; above.</source>
          <target state="translated">&lt;code&gt;EncryptionKey&lt;/code&gt; のキーマテリアルは、上記の &lt;code&gt;keyValue&lt;/code&gt; の値として定義されます。</target>
        </trans-unit>
        <trans-unit id="8129dd58b1558046a43f513a6782825b85e25fcc" translate="yes" xml:space="preserve">
          <source>The key of a character is an integer composed of primary order(short), secondary order(byte), and tertiary order(byte). Java strictly defines the size and signedness of its primitive data types. Therefore, the static functions &lt;code&gt;primaryOrder&lt;/code&gt;, &lt;code&gt;secondaryOrder&lt;/code&gt;, and &lt;code&gt;tertiaryOrder&lt;/code&gt; return &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, and &lt;code&gt;short&lt;/code&gt; respectively to ensure the correctness of the key value.</source>
          <target state="translated">文字のキーは、1次（short）、2次（byte）、および3次（byte）で構成される整数です。Javaは、そのプリミティブデータ型のサイズと符号を厳密に定義しています。したがって、静的関数 &lt;code&gt;primaryOrder&lt;/code&gt; 、 &lt;code&gt;secondaryOrder&lt;/code&gt; 、および &lt;code&gt;tertiaryOrder&lt;/code&gt; は、それぞれ &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt;short&lt;/code&gt; 、および &lt;code&gt;short&lt;/code&gt; を返し、キー値の正確さを保証します。</target>
        </trans-unit>
        <trans-unit id="9f985888e1c35d4435d90834a189099e0d2cd718" translate="yes" xml:space="preserve">
          <source>The key of the preference that was changed.</source>
          <target state="translated">変更された好みのキー。</target>
        </trans-unit>
        <trans-unit id="6e8fcf42cfa361807a43d2b30af7d9cda84c3efe" translate="yes" xml:space="preserve">
          <source>The key operations supported by this class are those of</source>
          <target state="translated">このクラスでサポートされている主な操作は</target>
        </trans-unit>
        <trans-unit id="3387fc9f2a2285c3b881b40c90c411fdd5064150" translate="yes" xml:space="preserve">
          <source>The key property list string. This string is independent of whether the ObjectName is a pattern.</source>
          <target state="translated">キー・プロパティ・リスト文字列。この文字列は、ObjectNameがパターンであるかどうかに依存しません。</target>
        </trans-unit>
        <trans-unit id="591c5debdb55c54ccf4211c0d46262a7acb20492" translate="yes" xml:space="preserve">
          <source>The key returned when this channel was last registered with the given selector, or &lt;code&gt;null&lt;/code&gt; if this channel is not currently registered with that selector</source>
          <target state="translated">このチャネルが指定されたセレクタに最後に登録されたときに返されるキー。このチャネルが現在そのセレクタに登録されていない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0df978032106f5a48ada8ce642e290c157b95524" translate="yes" xml:space="preserve">
          <source>The key set is &lt;a href=&quot;#ksc&quot;&gt;not thread-safe&lt;/a&gt;.</source>
          <target state="translated">キーセットは&lt;a href=&quot;#ksc&quot;&gt;スレッドセーフで&lt;/a&gt;はありません。</target>
        </trans-unit>
        <trans-unit id="57ef8dd9009d16c64f42c6500fb027397a1c181c" translate="yes" xml:space="preserve">
          <source>The key set is not directly modifiable. A key is removed only after it has been cancelled and its channel has been deregistered. Any attempt to modify the key set will cause an &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">キーセットは直接変更できません。キーが取り消され、チャネルが登録解除された後にのみ、キーが削除されます。キーセットを変更しようとすると、&lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="1d9c9d8289128682425a313c74602226e7f84949" translate="yes" xml:space="preserve">
          <source>The key that generates &lt;code&gt;VK_Q&lt;/code&gt; when using a U.S. keyboard layout also generates a unique code for Russian or Hebrew layout. There is no a &lt;code&gt;VK_&lt;/code&gt; constant for these and many other codes in various layouts. These codes may be obtained by using &lt;code&gt;getExtendedKeyCode&lt;/code&gt; and are used whenever a &lt;code&gt;VK_&lt;/code&gt; constant is used.</source>
          <target state="translated">米国のキーボードレイアウトを使用するときに &lt;code&gt;VK_Q&lt;/code&gt; を生成するキーは、ロシア語またはヘブライ語のレイアウト用の一意のコードも生成します。さまざまなレイアウトのこれらのコードや他の多くのコードには、 &lt;code&gt;VK_&lt;/code&gt; 定数はありません。これらのコードは使用することによって得ることができる &lt;code&gt;getExtendedKeyCode&lt;/code&gt; をし、いつでも使用される &lt;code&gt;VK_&lt;/code&gt; の定数が使用されています。</target>
        </trans-unit>
        <trans-unit id="fff43c55d2687265a85c98dde4c42fdce9575cdc" translate="yes" xml:space="preserve">
          <source>The key used for storing a &lt;code&gt;Boolean&lt;/code&gt; that corresponds to the selected state.</source>
          <target state="translated">選択した状態に対応する &lt;code&gt;Boolean&lt;/code&gt; を格納するために使用されるキー。</target>
        </trans-unit>
        <trans-unit id="a06203cc6b56a5b789124f777f4f1e6b8e3decc0" translate="yes" xml:space="preserve">
          <source>The key used for storing a &lt;code&gt;Boolean&lt;/code&gt; that corresponds to the selected state. This is typically used only for components that have a meaningful selection state. For example, &lt;code&gt;JRadioButton&lt;/code&gt; and &lt;code&gt;JCheckBox&lt;/code&gt; make use of this but instances of &lt;code&gt;JMenu&lt;/code&gt; don't.</source>
          <target state="translated">選択した状態に対応する &lt;code&gt;Boolean&lt;/code&gt; を格納するために使用されるキー。これは通常、意味のある選択状態を持つコンポーネントにのみ使用されます。たとえば、 &lt;code&gt;JRadioButton&lt;/code&gt; と &lt;code&gt;JCheckBox&lt;/code&gt; はこれを利用しますが、 &lt;code&gt;JMenu&lt;/code&gt; のインスタンスは利用しません。</target>
        </trans-unit>
        <trans-unit id="cc755a5d588ff3e99ca6ecb6db0feb0b99b106aa" translate="yes" xml:space="preserve">
          <source>The key used for storing a &lt;code&gt;KeyStroke&lt;/code&gt; to be used as the accelerator for the action.</source>
          <target state="translated">アクションのアクセラレータとして使用される &lt;code&gt;KeyStroke&lt;/code&gt; を格納するために使用されるキー。</target>
        </trans-unit>
        <trans-unit id="3af69e2ee60894317f962df10e77486cf1003639" translate="yes" xml:space="preserve">
          <source>The key used for storing a longer &lt;code&gt;String&lt;/code&gt; description for the action, could be used for context-sensitive help.</source>
          <target state="translated">アクションのより長い &lt;code&gt;String&lt;/code&gt; 説明を格納するために使用されるキーは、状況依存ヘルプに使用できます。</target>
        </trans-unit>
        <trans-unit id="4313350c8220b00b8ca46701c3fbe79249521eb8" translate="yes" xml:space="preserve">
          <source>The key used for storing a short &lt;code&gt;String&lt;/code&gt; description for the action, used for tooltip text.</source>
          <target state="translated">アクションの短い &lt;code&gt;String&lt;/code&gt; 説明を格納するために使用されるキー。ツールチップテキストに使用されます。</target>
        </trans-unit>
        <trans-unit id="cbc06bf453db346ac5d98109ef1a74424f0b1e39" translate="yes" xml:space="preserve">
          <source>The key used for storing a small &lt;code&gt;Icon&lt;/code&gt;, such as &lt;code&gt;ImageIcon&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageIcon&lt;/code&gt; などの小さな &lt;code&gt;Icon&lt;/code&gt; を保存するために使用されるキー。</target>
        </trans-unit>
        <trans-unit id="ca28f88c8b6822311e066df2073ccfca128ffab5" translate="yes" xml:space="preserve">
          <source>The key used for storing a small &lt;code&gt;Icon&lt;/code&gt;, such as &lt;code&gt;ImageIcon&lt;/code&gt;. This is typically used with menus such as &lt;code&gt;JMenuItem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageIcon&lt;/code&gt; などの小さな &lt;code&gt;Icon&lt;/code&gt; を保存するために使用されるキー。これは通常、 &lt;code&gt;JMenuItem&lt;/code&gt; などのメニューで使用されます。</target>
        </trans-unit>
        <trans-unit id="510c4e314bfc357f8a142c0f12ecfbdf60ef4c6d" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Icon&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Icon&lt;/code&gt; 保存に使用されるキー。</target>
        </trans-unit>
        <trans-unit id="3f85af6019774c273c52b21a75abdba33f13cbed" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Icon&lt;/code&gt;. This is typically used by buttons, such as &lt;code&gt;JButton&lt;/code&gt; and &lt;code&gt;JToggleButton&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Icon&lt;/code&gt; 保存に使用されるキー。これは通常、 &lt;code&gt;JButton&lt;/code&gt; や &lt;code&gt;JToggleButton&lt;/code&gt; などのボタンで使用されます。</target>
        </trans-unit>
        <trans-unit id="7441f7374e1db2e35bd44136a9d25bea7f4b6545" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Integer&lt;/code&gt; that corresponds to one of the &lt;code&gt;KeyEvent&lt;/code&gt; key codes.</source>
          <target state="translated">&lt;code&gt;KeyEvent&lt;/code&gt; キーコードの1つに対応する &lt;code&gt;Integer&lt;/code&gt; を格納するために使用されるキー。</target>
        </trans-unit>
        <trans-unit id="e5d4c03a7904fd08c844709cf3b00e41a2b633a6" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Integer&lt;/code&gt; that corresponds to one of the &lt;code&gt;KeyEvent&lt;/code&gt; key codes. The value is commonly used to specify a mnemonic. For example: &lt;code&gt;myAction.putValue(Action.MNEMONIC_KEY, KeyEvent.VK_A)&lt;/code&gt; sets the mnemonic of &lt;code&gt;myAction&lt;/code&gt; to 'a', while &lt;code&gt;myAction.putValue(Action.MNEMONIC_KEY, KeyEvent.getExtendedKeyCodeForChar('&amp;Ntilde;'))&lt;/code&gt; sets the mnemonic of &lt;code&gt;myAction&lt;/code&gt; to Cyrillic letter &quot;Ef&quot;.</source>
          <target state="translated">&lt;code&gt;KeyEvent&lt;/code&gt; キーコードの1つに対応する &lt;code&gt;Integer&lt;/code&gt; を格納するために使用されるキー。この値は通常、ニーモニックを指定するために使用されます。例えば： &lt;code&gt;myAction.putValue(Action.MNEMONIC_KEY, KeyEvent.VK_A)&lt;/code&gt; のニーモニック設定 &lt;code&gt;myAction&lt;/code&gt; ながら、 ''への &lt;code&gt;myAction.putValue(Action.MNEMONIC_KEY, KeyEvent.getExtendedKeyCodeForChar('&amp;Ntilde;'))&lt;/code&gt; のニーモニック設定 &lt;code&gt;myAction&lt;/code&gt; にしますキリル文字「Ef」。</target>
        </trans-unit>
        <trans-unit id="13893d6d133909575ce011e4a4bd5413e29f806c" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Integer&lt;/code&gt; that corresponds to the index in the text (identified by the &lt;code&gt;NAME&lt;/code&gt; property) that the decoration for a mnemonic should be rendered at.</source>
          <target state="translated">ニーモニックの装飾がレンダリングされるテキスト内のインデックス（ &lt;code&gt;NAME&lt;/code&gt; プロパティで識別される）に対応する &lt;code&gt;Integer&lt;/code&gt; を格納するために使用されるキー。</target>
        </trans-unit>
        <trans-unit id="d459d2f52abef201da41ccf4dded26819715dc4e" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Integer&lt;/code&gt; that corresponds to the index in the text (identified by the &lt;code&gt;NAME&lt;/code&gt; property) that the decoration for a mnemonic should be rendered at. If the value of this property is greater than or equal to the length of the text, it will treated as -1.</source>
          <target state="translated">ニーモニックの装飾がレンダリングされるテキスト内のインデックス（ &lt;code&gt;NAME&lt;/code&gt; プロパティで識別される）に対応する &lt;code&gt;Integer&lt;/code&gt; を格納するために使用されるキー。このプロパティの値がテキストの長さ以上の場合、-1として扱われます。</target>
        </trans-unit>
        <trans-unit id="8ee1794b44d425373319d35e314eb0fe551d5e36" translate="yes" xml:space="preserve">
          <source>The key used for storing the &lt;code&gt;String&lt;/code&gt; name for the action, used for a menu or button.</source>
          <target state="translated">メニューまたはボタンに使用される、アクションの &lt;code&gt;String&lt;/code&gt; 名を格納するために使用されるキー。</target>
        </trans-unit>
        <trans-unit id="980838ebdbc8d0916ba657f4bc82b0737f06ce5b" translate="yes" xml:space="preserve">
          <source>The key used to determine the command &lt;code&gt;String&lt;/code&gt; for the &lt;code&gt;ActionEvent&lt;/code&gt; that will be created when an &lt;code&gt;Action&lt;/code&gt; is going to be notified as the result of residing in a &lt;code&gt;Keymap&lt;/code&gt; associated with a &lt;code&gt;JComponent&lt;/code&gt;.</source>
          <target state="translated">キーは、コマンド決定するために使用する &lt;code&gt;String&lt;/code&gt; のため &lt;code&gt;ActionEvent&lt;/code&gt; ときに生成される &lt;code&gt;Action&lt;/code&gt; に常駐している結果として通知されようとしている &lt;code&gt;Keymap&lt;/code&gt; に関連付けられている &lt;code&gt;JComponent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07021616652b4190834cc6f5cd3d6a99828ab34d" translate="yes" xml:space="preserve">
          <source>The key.</source>
          <target state="translated">肝心なのは</target>
        </trans-unit>
        <trans-unit id="9fcfd0ac958dc909e6b60a2e46db0de0826aceb0" translate="yes" xml:space="preserve">
          <source>The keys involved in establishing a shared secret are created by one of the key generators (&lt;code&gt;KeyPairGenerator&lt;/code&gt; or &lt;code&gt;KeyGenerator&lt;/code&gt;), a &lt;code&gt;KeyFactory&lt;/code&gt;, or as a result from an intermediate phase of the key agreement protocol (&lt;a href=&quot;#engineDoPhase(java.security.Key,boolean)&quot;&gt;&lt;code&gt;engineDoPhase&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">共有シークレットの確立に関係するキーは、キージェネレーターの1つ（ &lt;code&gt;KeyPairGenerator&lt;/code&gt; または &lt;code&gt;KeyGenerator&lt;/code&gt; ）、 &lt;code&gt;KeyFactory&lt;/code&gt; によって、またはキー合意プロトコルの中間フェーズ（&lt;a href=&quot;#engineDoPhase(java.security.Key,boolean)&quot;&gt; &lt;code&gt;engineDoPhase&lt;/code&gt; &lt;/a&gt;）の結果として作成されます。</target>
        </trans-unit>
        <trans-unit id="8f370fcfd44322aa2b8d1091b0a099098abd9ad6" translate="yes" xml:space="preserve">
          <source>The keys involved in establishing a shared secret are created by one of the key generators (&lt;code&gt;KeyPairGenerator&lt;/code&gt; or &lt;code&gt;KeyGenerator&lt;/code&gt;), a &lt;code&gt;KeyFactory&lt;/code&gt;, or as a result from an intermediate phase of the key agreement protocol (&lt;a href=&quot;keyagreementspi#engineDoPhase-java.security.Key-boolean-&quot;&gt;&lt;code&gt;engineDoPhase&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">共有シークレットの確立に関連するキーは、キージェネレーター（ &lt;code&gt;KeyPairGenerator&lt;/code&gt; または &lt;code&gt;KeyGenerator&lt;/code&gt; ）の1つ、 &lt;code&gt;KeyFactory&lt;/code&gt; 、またはキー合意プロトコル（&lt;a href=&quot;keyagreementspi#engineDoPhase-java.security.Key-boolean-&quot;&gt; &lt;code&gt;engineDoPhase&lt;/code&gt; &lt;/a&gt;）の中間フェーズの結果として作成されます。</target>
        </trans-unit>
        <trans-unit id="723f16f5244db1190e45ab85ded24007968e816f" translate="yes" xml:space="preserve">
          <source>The keys involved in establishing a shared secret are created by one of the key generators (&lt;code&gt;KeyPairGenerator&lt;/code&gt; or &lt;code&gt;KeyGenerator&lt;/code&gt;), a &lt;code&gt;KeyFactory&lt;/code&gt;, or as a result from an intermediate phase of the key agreement protocol.</source>
          <target state="translated">共有シークレットの確立に関連するキーは、キージェネレーター（ &lt;code&gt;KeyPairGenerator&lt;/code&gt; または &lt;code&gt;KeyGenerator&lt;/code&gt; ）の1つ、 &lt;code&gt;KeyFactory&lt;/code&gt; によって、またはキー合意プロトコルの中間フェーズの結果として作成されます。</target>
        </trans-unit>
        <trans-unit id="5fe9470c6519546a44549a43906b2494c99a3b8b" translate="yes" xml:space="preserve">
          <source>The keys used to control the hints are all special values that subclass the associated &lt;a href=&quot;renderinghints.key&quot;&gt;&lt;code&gt;RenderingHints.Key&lt;/code&gt;&lt;/a&gt; class. Many common hints are expressed below as static constants in this class, but the list is not meant to be exhaustive. Other hints may be created by other packages by defining new objects which subclass the &lt;code&gt;Key&lt;/code&gt; class and defining the associated values.</source>
          <target state="translated">ヒントを制御するために使用されるキーはすべて、関連する&lt;a href=&quot;renderinghints.key&quot;&gt; &lt;code&gt;RenderingHints.Key&lt;/code&gt; &lt;/a&gt;クラスをサブクラス化する特別な値です。多くの一般的なヒントは、このクラスの静的定数として以下に表されていますが、リストは網羅的なものではありません。 &lt;code&gt;Key&lt;/code&gt; クラスをサブクラス化する新しいオブジェクトを定義し、関連する値を定義することにより、他のパッケージによって他のヒントを作成できます。</target>
        </trans-unit>
        <trans-unit id="93449d8bc735c86f66b7af66ec3fc6632ea6e0e9" translate="yes" xml:space="preserve">
          <source>The keystore location.</source>
          <target state="translated">鍵屋の場所。</target>
        </trans-unit>
        <trans-unit id="71b0abd8de97d396da90382775d49f0501bc9b82" translate="yes" xml:space="preserve">
          <source>The keystore type.</source>
          <target state="translated">キーストアの種類です。</target>
        </trans-unit>
        <trans-unit id="842a8022c0b70f37cfdb00d1ecc419e098528a20" translate="yes" xml:space="preserve">
          <source>The keytab file format is described at &lt;a href=&quot;http://www.ioplex.com/utilities/keytab.txt&quot;&gt; http://www.ioplex.com/utilities/keytab.txt&lt;/a&gt;.</source>
          <target state="translated">keytabファイルの形式については、&lt;a href=&quot;http://www.ioplex.com/utilities/keytab.txt&quot;&gt;http:&lt;/a&gt; //www.ioplex.com/utilities/keytab.txtで説明されています。</target>
        </trans-unit>
        <trans-unit id="935cbb5c5e7ca73c0e61d1fed5057a9e10848ab7" translate="yes" xml:space="preserve">
          <source>The keywords are mapped to a BCP 47 extension value using the extension key 'u' (&lt;a href=&quot;#UNICODE_LOCALE_EXTENSION&quot;&gt;&lt;code&gt;UNICODE_LOCALE_EXTENSION&lt;/code&gt;&lt;/a&gt;). The above example, &quot;nu-thai&quot;, becomes the extension &quot;u-nu-thai&quot;.</source>
          <target state="translated">キーワードは、拡張キー 'u'（&lt;a href=&quot;#UNICODE_LOCALE_EXTENSION&quot;&gt; &lt;code&gt;UNICODE_LOCALE_EXTENSION&lt;/code&gt; &lt;/a&gt;）を使用してBCP47拡張値にマップされます。上記の例「nu-thai」は、拡張子「u-nu-thai」になります。</target>
        </trans-unit>
        <trans-unit id="e06cb2d0e49b96e83b7706a492fb99378d956821" translate="yes" xml:space="preserve">
          <source>The keywords are mapped to a BCP 47 extension value using the extension key 'u' (&lt;a href=&quot;locale#UNICODE_LOCALE_EXTENSION&quot;&gt;&lt;code&gt;UNICODE_LOCALE_EXTENSION&lt;/code&gt;&lt;/a&gt;). The above example, &quot;nu-thai&quot;, becomes the extension &quot;u-nu-thai&quot;.code</source>
          <target state="translated">キーワードは、拡張キー 'u'（&lt;a href=&quot;locale#UNICODE_LOCALE_EXTENSION&quot;&gt; &lt;code&gt;UNICODE_LOCALE_EXTENSION&lt;/code&gt; &lt;/a&gt;）を使用してBCP 47拡張値にマップされます。上記の例「nu-thai」は、拡張機能「u-nu-thai」になります。コード</target>
        </trans-unit>
        <trans-unit id="3abc78cec7443be172a73f11d0ea46ef51b57125" translate="yes" xml:space="preserve">
          <source>The kind of a type mirror.</source>
          <target state="translated">タイプの鏡のようなもの。</target>
        </trans-unit>
        <trans-unit id="e71bcb16dc077322da2b88fd1337ba338c4914a1" translate="yes" xml:space="preserve">
          <source>The kind of this file object.</source>
          <target state="translated">このファイルオブジェクトの種類。</target>
        </trans-unit>
        <trans-unit id="24838371a11c2732eaa99a0fcc229f55490881e5" translate="yes" xml:space="preserve">
          <source>The label text displayed on the approve button when a directory is selected and the current selection mode is FILES_ONLY.</source>
          <target state="translated">ディレクトリが選択されていて、現在の選択モードがFILES_ONLYの場合、承認ボタンに表示されるラベルテキストです。</target>
        </trans-unit>
        <trans-unit id="060ad24a2e020eedaf95c63bf56985e351899937" translate="yes" xml:space="preserve">
          <source>The language code &quot;und&quot; is mapped to language &quot;&quot;.</source>
          <target state="translated">言語コード &quot;und &quot;は言語&quot;&quot;にマップされています。</target>
        </trans-unit>
        <trans-unit id="eed90a84dfe6824cdfb069525f0a0cdbf5c234ed" translate="yes" xml:space="preserve">
          <source>The language code, or the empty string if none is defined.</source>
          <target state="translated">言語コード、または定義されていない場合は空文字列。</target>
        </trans-unit>
        <trans-unit id="098e8da937e9d6a746c9e6894744ca7720a21e02" translate="yes" xml:space="preserve">
          <source>The language codes &quot;he&quot;, &quot;yi&quot;, and &quot;id&quot; are mapped to &quot;iw&quot;, &quot;ji&quot;, and &quot;in&quot; respectively. (This is the same canonicalization that's done in Locale's constructors.)</source>
          <target state="translated">言語コード &quot;he&quot;,&quot;yi&quot;,&quot;id &quot;はそれぞれ &quot;iw&quot;,&quot;ji&quot;,&quot;in &quot;にマップされます。(これはLocaleのコンストラクタで行われているのと同じ正規化です)。</target>
        </trans-unit>
        <trans-unit id="ab199358c4c30717fef9325e862f54f258b020c1" translate="yes" xml:space="preserve">
          <source>The large capacity input tray in the printer.</source>
          <target state="translated">プリンター内の大容量の入力トレイ。</target>
        </trans-unit>
        <trans-unit id="4065b23b870a90c8d978a1b147aeaad63f54d921" translate="yes" xml:space="preserve">
          <source>The largest acceptable size for the thumb.</source>
          <target state="translated">親指の許容最大サイズ。</target>
        </trans-unit>
        <trans-unit id="a4047539503997b6709f1736adf335f568d1db43" translate="yes" xml:space="preserve">
          <source>The largest reasonable width/height of the component or component group, in pixels.</source>
          <target state="translated">コンポーネントまたはコンポーネントグループの妥当な最大の幅/高さをピクセル単位で指定します。</target>
        </trans-unit>
        <trans-unit id="87a66203f240a0446e3e56749de0de7014433cb7" translate="yes" xml:space="preserve">
          <source>The largest valid &lt;code&gt;CHILD_POLICY_*&lt;/code&gt; constant, to be used for range checks.</source>
          <target state="translated">範囲チェックに使用される最大の有効な &lt;code&gt;CHILD_POLICY_*&lt;/code&gt; 定数。</target>
        </trans-unit>
        <trans-unit id="042615e8f7e4ca7fe481b68f5839de05b2ef7dac" translate="yes" xml:space="preserve">
          <source>The last &lt;code&gt;viewPosition&lt;/code&gt; that we've painted, so we know how much of the backing store image is valid.</source>
          <target state="translated">ペイントした最後の &lt;code&gt;viewPosition&lt;/code&gt; なので、バッキングストアの画像がどれだけ有効かがわかります。</target>
        </trans-unit>
        <trans-unit id="63c95d7f54d8b200cb320258b2605a3a1ecdb740" translate="yes" xml:space="preserve">
          <source>The last access time is from the extended timestamp fields of entry's &lt;code&gt;optional extra data&lt;/code&gt; when read from a ZIP file or ZIP file formatted stream.</source>
          <target state="translated">最終アクセス時刻は、ZIPファイルまたはZIPファイル形式のストリームから読み取られたときの、エントリの &lt;code&gt;optional extra data&lt;/code&gt; の拡張タイムスタンプフィールドからのものです。</target>
        </trans-unit>
        <trans-unit id="018404389cff4be23d8a44b9b108e339eccb815f" translate="yes" xml:space="preserve">
          <source>The last access time of the entry, null if not specified</source>
          <target state="translated">エントリの最終アクセス時刻。</target>
        </trans-unit>
        <trans-unit id="fe1aba57c57c1ac2f063c8c6fe24c263634b58f4" translate="yes" xml:space="preserve">
          <source>The last boundary before the specified offset or &lt;code&gt;BreakIterator.DONE&lt;/code&gt; if the first text boundary is passed in as the offset.</source>
          <target state="translated">指定されたオフセットの前の最後の境界、または最初のテキスト境界がオフセットとして渡された場合は &lt;code&gt;BreakIterator.DONE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b438429a36288d32e766c2b54edee92101e89ca1" translate="yes" xml:space="preserve">
          <source>The last child of this node.</source>
          <target state="translated">このノードの最後の子。</target>
        </trans-unit>
        <trans-unit id="d90655fc682934476ffa5413f1cd86a86ea41209" translate="yes" xml:space="preserve">
          <source>The last child of this node. If there is no such node, this returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このノードの最後の子。そのようなノードがない場合、これは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b05f3ad1e679d3642ea5ebb7a2df031a3faf24c6" translate="yes" xml:space="preserve">
          <source>The last column</source>
          <target state="translated">最後のコラム</target>
        </trans-unit>
        <trans-unit id="39d734b7eda93fa8a5f0567cb50de31f210e478a" translate="yes" xml:space="preserve">
          <source>The last edit added to this &lt;code&gt;CompoundEdit&lt;/code&gt; is given a chance to &lt;code&gt;addEdit(anEdit)&lt;/code&gt;. If it refuses (returns false), &lt;code&gt;anEdit&lt;/code&gt; is given a chance to &lt;code&gt;replaceEdit&lt;/code&gt; the last edit. If &lt;code&gt;anEdit&lt;/code&gt; returns false here, it is added to &lt;code&gt;edits&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;CompoundEdit&lt;/code&gt; に追加された最後の編集には、 &lt;code&gt;addEdit(anEdit)&lt;/code&gt; を実行する機会が与えられます。拒否した場合（falseを返す場合）、 &lt;code&gt;anEdit&lt;/code&gt; には最後の編集を &lt;code&gt;replaceEdit&lt;/code&gt; する機会が与えられます。場合は &lt;code&gt;anEdit&lt;/code&gt; がここにfalseを返し、それがに追加され &lt;code&gt;edits&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3786764214c419fc8c5e1b4f929d864bbcb97cc1" translate="yes" xml:space="preserve">
          <source>The last example assumes that the extra arguments are of type &lt;code&gt;CONSTANT_String&lt;/code&gt; and &lt;code&gt;CONSTANT_Integer&lt;/code&gt;, respectively. The second-to-last example assumes that all extra arguments are of type &lt;code&gt;CONSTANT_String&lt;/code&gt;. The other examples work with all types of extra arguments.</source>
          <target state="translated">最後の例では、追加の引数のタイプがそれぞれ &lt;code&gt;CONSTANT_String&lt;/code&gt; および &lt;code&gt;CONSTANT_Integer&lt;/code&gt; であると想定しています。最後から2番目の例では、追加の引数はすべて &lt;code&gt;CONSTANT_String&lt;/code&gt; 型であると想定しています。他の例は、すべてのタイプの追加引数で機能します。</target>
        </trans-unit>
        <trans-unit id="4f1d594e084594230e4357bd7bf2b39b4cde74ca" translate="yes" xml:space="preserve">
          <source>The last example assumes that the extra arguments are of type &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;Integer&lt;/code&gt; (or &lt;code&gt;int&lt;/code&gt;), respectively. The second-to-last example assumes that all extra arguments are of type &lt;code&gt;String&lt;/code&gt;. The other examples work with all types of extra arguments. Note that all the examples except the second and third also work with dynamically-computed constants if the return type is changed to be compatible with the constant's declared type (such as &lt;code&gt;Object&lt;/code&gt;, which is always compatible).</source>
          <target state="translated">最後の例では、追加の引数がそれぞれ &lt;code&gt;String&lt;/code&gt; 型と &lt;code&gt;Integer&lt;/code&gt; （または &lt;code&gt;int&lt;/code&gt; ）型であると想定しています。最後から2番目の例では、すべての追加の引数が &lt;code&gt;String&lt;/code&gt; 型であると想定しています。他の例は、すべてのタイプの追加引数で機能します。戻り値の型が定数の宣言された型（常に互換性のある &lt;code&gt;Object&lt;/code&gt; など）と互換性があるように変更された場合、2番目と3番目を除くすべての例は動的に計算された定数でも機能することに注意してください。</target>
        </trans-unit>
        <trans-unit id="b90ed7ca70d3a841924037be711880b436dc3571" translate="yes" xml:space="preserve">
          <source>The last exception thrown by the Appendable or &lt;code&gt;null&lt;/code&gt; if no such exception exists.</source>
          <target state="translated">Appendableによってスローされた最後の例外、またはそのような例外が存在しない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="04079ef138add28eebb8f572cbade8dbe2eced17" translate="yes" xml:space="preserve">
          <source>The last line will print &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt;.</source>
          <target state="translated">最後の行は &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="16c00d55a4101ed7505b7fc71de8beab93af645d" translate="yes" xml:space="preserve">
          <source>The last line will print &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt;. The &lt;a href=&quot;#unescapeValue(java.lang.String)&quot;&gt;&lt;code&gt;unescapeValue()&lt;/code&gt;&lt;/a&gt; method can be used to unescape the escaped comma resulting in the original value &lt;code&gt;&quot;Juicy, Fruit&quot;&lt;/code&gt;. The &lt;a href=&quot;#escapeValue(java.lang.Object)&quot;&gt;&lt;code&gt;escapeValue()&lt;/code&gt;&lt;/a&gt; method adds the escape back preceding the comma.</source>
          <target state="translated">最後の行には、 &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt; ます。&lt;a href=&quot;#unescapeValue(java.lang.String)&quot;&gt; &lt;code&gt;unescapeValue()&lt;/code&gt; &lt;/a&gt;メソッドは、元の値が得られるエスケープコンマエスケープ解除するために使用することができる &lt;code&gt;&quot;Juicy, Fruit&quot;&lt;/code&gt; 。&lt;a href=&quot;#escapeValue(java.lang.Object)&quot;&gt; &lt;code&gt;escapeValue()&lt;/code&gt; &lt;/a&gt;メソッドは、コンマの前にエスケープ・バックを付加します。</target>
        </trans-unit>
        <trans-unit id="c36ea3c145fcf0621af5506876da5c006b8fc7c5" translate="yes" xml:space="preserve">
          <source>The last line will print &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt;. The &lt;a href=&quot;rdn#unescapeValue-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;unescapeValue()&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method can be used to unescape the escaped comma resulting in the original value &lt;code&gt;&quot;Juicy, Fruit&quot;&lt;/code&gt;. The &lt;a href=&quot;rdn#escapeValue-java.lang.Object-&quot;&gt;&lt;code&gt;&lt;code&gt;escapeValue()&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method adds the escape back preceding the comma.</source>
          <target state="translated">最後の行は &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt; ます。&lt;a href=&quot;rdn#unescapeValue-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;unescapeValue()&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドは、元の値が得られるエスケープコンマエスケープ解除するために使用することができる &lt;code&gt;&quot;Juicy, Fruit&quot;&lt;/code&gt; 。&lt;a href=&quot;rdn#escapeValue-java.lang.Object-&quot;&gt; &lt;code&gt;&lt;code&gt;escapeValue()&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドは、コンマの前にエスケープ・バックを付加します。</target>
        </trans-unit>
        <trans-unit id="6704a2570d140aa6d4d1a0195309b7cded09294b" translate="yes" xml:space="preserve">
          <source>The last low order bit is always ignored as this corresponds to the MBZ (must be zero) bit.</source>
          <target state="translated">最後の低次ビットは、MBZ(ゼロでなければならない)ビットに対応するため、常に無視されます。</target>
        </trans-unit>
        <trans-unit id="9c42346f1311bb8f9376444bec038d823340d058" translate="yes" xml:space="preserve">
          <source>The last method called on the reader.</source>
          <target state="translated">読者に呼び出された最後のメソッド。</target>
        </trans-unit>
        <trans-unit id="181209f3bb70c71f89a85a76af54339a74a94fbb" translate="yes" xml:space="preserve">
          <source>The last method called on the reader. It allows any pending changes to be flushed into the document. Since this is currently loading synchronously, the entire set of changes are pushed in at this point.</source>
          <target state="translated">読み込み側で呼び出される最後のメソッドです。これにより、保留中の変更をドキュメントに反映させることができます。現在は同期的にロードされているので、この時点で変更の全セットがプッシュされます。</target>
        </trans-unit>
        <trans-unit id="d12b5f31c0f846b9270a88fcc19d75c11add62d8" translate="yes" xml:space="preserve">
          <source>The last modification time of the entry in local date-time</source>
          <target state="translated">エントリの最終更新時刻をローカルの日付時間で指定します。</target>
        </trans-unit>
        <trans-unit id="136ced763d4f0395ea838a91b0392e85ac9d09ec" translate="yes" xml:space="preserve">
          <source>The last modification time of the entry in milliseconds since the epoch, or -1 if not specified</source>
          <target state="translated">エポック後のエントリの最終更新時刻をミリ秒単位で指定します。</target>
        </trans-unit>
        <trans-unit id="d8097498df46abde4481e8c5cf7533f5f787ec54" translate="yes" xml:space="preserve">
          <source>The last modification time of the entry, null if not specified</source>
          <target state="translated">エントリの最終更新時刻、指定されていない場合はnull</target>
        </trans-unit>
        <trans-unit id="4ae9fa4acb1e8204c952823554c5745571d95e66" translate="yes" xml:space="preserve">
          <source>The last number in the range of IDs used for internal frame events.</source>
          <target state="translated">内部フレームイベントに使用されるIDの範囲内の最後の番号。</target>
        </trans-unit>
        <trans-unit id="8c94343c4851dd263ca740ac6649adf12af19d18" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for action events.</source>
          <target state="translated">アクションイベントに使用されるidの範囲内の最後の番号。</target>
        </trans-unit>
        <trans-unit id="f6ed12e9a6b12a22c4a1f6a2641b77dc40668de8" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for component events.</source>
          <target state="translated">コンポーネントイベントに使用されるidの範囲内の最後の番号。</target>
        </trans-unit>
        <trans-unit id="6ae55d137704a05f9f1458a052a01ca71de805c5" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for container events.</source>
          <target state="translated">コンテナイベントに使用されるidの範囲内の最後の番号。</target>
        </trans-unit>
        <trans-unit id="3843eb877a32e9dba757037c54330c63c77e3ec2" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for focus events.</source>
          <target state="translated">フォーカスイベントに使用される ID の範囲内の最後の番号。</target>
        </trans-unit>
        <trans-unit id="95989ce6173eee87283f755eeb7916d793d3a551" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for item events.</source>
          <target state="translated">アイテムイベントに使用されるidの範囲内の最後の番号。</target>
        </trans-unit>
        <trans-unit id="cac645452d55f9b450d35d48e35c759312f739dc" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for key events.</source>
          <target state="translated">キーイベントに使用されるidの範囲内の最後の番号。</target>
        </trans-unit>
        <trans-unit id="9e356e925e05441038ce8f86048dd79a37e896ba" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for mouse events.</source>
          <target state="translated">マウスイベントに使用されるidの範囲内の最後の番号。</target>
        </trans-unit>
        <trans-unit id="a8fe649447f3efb24aa206f3bfb7116d646a397d" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for text events.</source>
          <target state="translated">テキストイベントに使用されるidの範囲内の最後の番号。</target>
        </trans-unit>
        <trans-unit id="8919efb69d38c4583f7e96922e023f30250ca01a" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for window events.</source>
          <target state="translated">ウィンドウイベントに使用されるidの範囲内の最後の番号。</target>
        </trans-unit>
        <trans-unit id="8f4d29e940c417fddff123f783468855cfe4eab2" translate="yes" xml:space="preserve">
          <source>The last row</source>
          <target state="translated">最後の行</target>
        </trans-unit>
        <trans-unit id="07a7eab075194af4ad162905352b91efdbcf875e" translate="yes" xml:space="preserve">
          <source>The last row that has changed.</source>
          <target state="translated">変更された最後の行。</target>
        </trans-unit>
        <trans-unit id="b6bceffcf31fdaadf2098b38a902b0d82ea3fde8" translate="yes" xml:space="preserve">
          <source>The last seen allocation (for repainting when changes are flushed upward).</source>
          <target state="translated">最後に見られた割り当て(変更が上向きに流された場合の塗り直し用)。</target>
        </trans-unit>
        <trans-unit id="eaa1d51eb137e5542fe1128506eda2fbb9582580" translate="yes" xml:space="preserve">
          <source>The last significant edit is &lt;b&gt;A&lt;/b&gt;, so that invoking &lt;code&gt;undo&lt;/code&gt; again invokes &lt;code&gt;undo&lt;/code&gt; on</source>
          <target state="translated">最後の重要な編集は&lt;b&gt;A&lt;/b&gt;であるため、 &lt;code&gt;undo&lt;/code&gt; 再度呼び出すと、で &lt;code&gt;undo&lt;/code&gt; に戻すが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8b0079f1492d37c87c9a6e2434f8a080dfc40767" translate="yes" xml:space="preserve">
          <source>The last stop in writing out content.</source>
          <target state="translated">コンテンツを書き出す際の終着点。</target>
        </trans-unit>
        <trans-unit id="bf947b882b123cacd97631120521a2da8a1d042a" translate="yes" xml:space="preserve">
          <source>The last stop in writing out content. All the write methods eventually make it to this method, which invokes &lt;code&gt;write&lt;/code&gt; on the Writer.</source>
          <target state="translated">コンテンツを書き出す最後のストップ。すべての書き込みメソッドは、最終的にこのメソッドに到達し、ライターで &lt;code&gt;write&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="3181bd7eca0b7159c1c88cf63d3760586057c6df" translate="yes" xml:space="preserve">
          <source>The last thread arrives; or</source>
          <target state="translated">最後のスレッドが到着します。</target>
        </trans-unit>
        <trans-unit id="24921a8e3a7f2cbc396820ff95cee47630697935" translate="yes" xml:space="preserve">
          <source>The last value returned by an operation may be cached in the operation's descriptor which is in the ModelMBeanOperationInfo's descriptor. The valid value will be in the 'value' field if there is one. If the 'currencyTimeLimit' field in the descriptor is:</source>
          <target state="translated">ある操作によって返された最後の値は、ModelMBeanOperationInfoのディスクリプタにある操作のディスクリプタにキャッシュされることがあります。有効な値は、'value' フィールドがある場合には、'value' フィールドになります。ディスクリプター内の'currencyTimeLimit'フィールドがある場合は、'value'フィールドに有効な値が格納されます。</target>
        </trans-unit>
        <trans-unit id="65d00f7b5812b299404a119144f3c9040ae7f32b" translate="yes" xml:space="preserve">
          <source>The latter is typically used when you want a more complex user interaction that requires custom components on the tab. For example, you could provide a custom component that animates or one that has widgets for closing the tab.</source>
          <target state="translated">後者は、タブにカスタム コンポーネントを必要とする、より複雑なユーザー インタラクションが必要な場合に使用されます。例えば、アニメーションするカスタム コンポーネントや、タブを閉じるためのウィジェットを持つカスタム コンポーネントを提供することができます。</target>
        </trans-unit>
        <trans-unit id="425594d3660745a66391869dc19be9ecfcfbfa9f" translate="yes" xml:space="preserve">
          <source>The latter sequence of calls is inferred to be able to throw the additional exception types &lt;a href=&quot;reflect/invocationtargetexception&quot;&gt;&lt;code&gt;InvocationTargetException&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;nosuchmethodexception&quot;&gt;&lt;code&gt;NoSuchMethodException&lt;/code&gt;&lt;/a&gt;. Both of these exception types are subclasses of &lt;a href=&quot;reflectiveoperationexception&quot;&gt;&lt;code&gt;ReflectiveOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">後者の一連の呼び出しは、追加の例外タイプ&lt;a href=&quot;reflect/invocationtargetexception&quot;&gt; &lt;code&gt;InvocationTargetException&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;nosuchmethodexception&quot;&gt; &lt;code&gt;NoSuchMethodException&lt;/code&gt; &lt;/a&gt;をスローできると推測されます。これらの例外タイプは両方とも、&lt;a href=&quot;reflectiveoperationexception&quot;&gt; &lt;code&gt;ReflectiveOperationException&lt;/code&gt; の&lt;/a&gt;サブクラスです。</target>
        </trans-unit>
        <trans-unit id="525093ff647ddbbdbc48ca2cdc3100fde45b2b7a" translate="yes" xml:space="preserve">
          <source>The layer attribute can also be set on a Component by calling</source>
          <target state="translated">を呼び出すことで、コンポーネントにレイヤー属性を設定することもできます。</target>
        </trans-unit>
        <trans-unit id="e670c82bc63797a1c361d38b43da5fb16f5d0be9" translate="yes" xml:space="preserve">
          <source>The layer used for modal dialogs. They will appear on top of any toolbars, palettes, or standard components in the container.</source>
          <target state="translated">モーダルダイアログに使用されるレイヤーです。コンテナ内のツールバー、パレット、標準コンポーネントの上に表示されます。</target>
        </trans-unit>
        <trans-unit id="061909bc6c6b3e145805a5f7a76712768e861d0c" translate="yes" xml:space="preserve">
          <source>The layered pane that manages the menu bar and content pane.</source>
          <target state="translated">メニューバーとコンテンツペインを管理するレイヤードペイン。</target>
        </trans-unit>
        <trans-unit id="3e6e7dcb9d0607b26b2e9b733f6cd19b14cc410c" translate="yes" xml:space="preserve">
          <source>The layeredPane may not be null.</source>
          <target state="translated">layeredPaneはnullではないかもしれません。</target>
        </trans-unit>
        <trans-unit id="4eeeff1cbbabee35cb669977c67cd53625a7f370" translate="yes" xml:space="preserve">
          <source>The layout before floating.</source>
          <target state="translated">浮く前のレイアウト。</target>
        </trans-unit>
        <trans-unit id="1b212702428106a780f398f622b94efb2a72b7ca" translate="yes" xml:space="preserve">
          <source>The layout manager used by &lt;code&gt;JScrollPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JScrollPane&lt;/code&gt; で使用されるレイアウトマネージャー。</target>
        </trans-unit>
        <trans-unit id="ab281cd69ca0da4ac757a9384d1d4174c09420b4" translate="yes" xml:space="preserve">
          <source>The layout manager used by &lt;code&gt;JScrollPane&lt;/code&gt;. &lt;code&gt;JScrollPaneLayout&lt;/code&gt; is responsible for nine components: a viewport, two scrollbars, a row header, a column header, and four &quot;corner&quot; components.</source>
          <target state="translated">&lt;code&gt;JScrollPane&lt;/code&gt; で使用されるレイアウトマネージャー。 &lt;code&gt;JScrollPaneLayout&lt;/code&gt; は、ビューポート、2つのスクロールバー、行ヘッダー、列ヘッダー、および4つの「コーナー」コンポーネントの9つのコンポーネントを担当します。</target>
        </trans-unit>
        <trans-unit id="63aeb45ca03701efe224b5a47a306b484bafc9b8" translate="yes" xml:space="preserve">
          <source>The layout must be valid prior to attempting to make the translation. The translation is not valid, and must not be attempted while changes are being broadcasted from the model via a &lt;code&gt;DocumentEvent&lt;/code&gt;.</source>
          <target state="translated">翻訳を行う前に、レイアウトが有効である必要があります。変換は無効であり、変更が &lt;code&gt;DocumentEvent&lt;/code&gt; を介してモデルからブロードキャストされている間は試行しないでください。</target>
        </trans-unit>
        <trans-unit id="0c946e02cf7bb113bde4f4cf3943bb511e4009b7" translate="yes" xml:space="preserve">
          <source>The layout of a variant 2 (Leach-Salz) UUID is as follows: The most significant long consists of the following unsigned fields:</source>
          <target state="translated">バリアント 2 (Leach-Salz)UUID のレイアウトは以下の通りです。最上位のlongは、以下の符号なしフィールドで構成されています。</target>
        </trans-unit>
        <trans-unit id="1ef51f3136fcb1fac789f5890c185fdf389223f5" translate="yes" xml:space="preserve">
          <source>The lead TreePath is the last path that was added (or set). The lead row is then the row that corresponds to the TreePath as determined from the RowMapper.</source>
          <target state="translated">先頭の TreePath は、最後に追加(または設定)されたパスです。リード行は、RowMapperから決定されたTreePathに対応する行になります。</target>
        </trans-unit>
        <trans-unit id="f1682937acc10a90e095bee4b77c7dde9712bf4d" translate="yes" xml:space="preserve">
          <source>The lead path is set to the last element in &lt;code&gt;paths&lt;/code&gt;.</source>
          <target state="translated">リードパスは、 &lt;code&gt;paths&lt;/code&gt; 最後の要素に設定されます。</target>
        </trans-unit>
        <trans-unit id="d20a4f2226831a6decc443b64178bf6260a3eab0" translate="yes" xml:space="preserve">
          <source>The lead path is set to the last unique path.</source>
          <target state="translated">リードパスは最後のユニークパスに設定されます。</target>
        </trans-unit>
        <trans-unit id="d9dddc27cf2fa85a276add3f7964382de560568e" translate="yes" xml:space="preserve">
          <source>The leading edge is based on the axis and &lt;code&gt;
 ComponentOrientation&lt;/code&gt;. For the vertical axis the top edge is always the leading edge, and the bottom edge is always the trailing edge. When the &lt;code&gt;ComponentOrientation&lt;/code&gt; is &lt;code&gt;
 LEFT_TO_RIGHT&lt;/code&gt;, the leading edge is the left edge and the trailing edge the right edge. A &lt;code&gt;ComponentOrientation&lt;/code&gt; of &lt;code&gt;RIGHT_TO_LEFT&lt;/code&gt; flips the left and right edges. Child elements are aligned based on the specified alignment the element was added with. If you do not specify an alignment, the alignment specified for the &lt;code&gt;ParallelGroup&lt;/code&gt; is used.</source>
          <target state="translated">リーディングエッジは、軸と &lt;code&gt; ComponentOrientation&lt;/code&gt; に基づいています。垂直軸の場合、上端は常に前縁であり、下端は常に後縁です。場合 &lt;code&gt;ComponentOrientation&lt;/code&gt; をがある &lt;code&gt; LEFT_TO_RIGHT&lt;/code&gt; 、リーディングエッジが左エッジとトレーリングエッジは右端です。 &lt;code&gt;RIGHT_TO_LEFT&lt;/code&gt; の &lt;code&gt;ComponentOrientation&lt;/code&gt; は、左端と右端を反転します。子要素は、要素が追加された指定の配置に基づいて配置されます。アラインメントを指定しない場合、 &lt;code&gt;ParallelGroup&lt;/code&gt; に指定されたアラインメントが使用されます。</target>
        </trans-unit>
        <trans-unit id="17cff58578c91a8d50007c245887e9d13f0ca29a" translate="yes" xml:space="preserve">
          <source>The leading is computed from the leading, descent, and baseline of all glyphvectors in the &lt;code&gt;TextLayout&lt;/code&gt;. The algorithm is roughly as follows:</source>
          <target state="translated">リーディングは、 &lt;code&gt;TextLayout&lt;/code&gt; 内のすべてのグリフベクトルのリーディング、降下、およびベースラインから計算されます。アルゴリズムはおおまかに次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7af9b55c9143f8cca06d1210ae464e4b24586bea" translate="yes" xml:space="preserve">
          <source>The leading plus/minus sign, and negative values for other units are not part of the ISO-8601 standard.</source>
          <target state="translated">先頭のプラス/マイナス記号、他の単位のマイナス値は、ISO-8601規格には含まれていません。</target>
        </trans-unit>
        <trans-unit id="b8afe06a23c97844adb78033caa70b9b0d3bbee8" translate="yes" xml:space="preserve">
          <source>The leading plus/minus sign, and negative values for other units are not part of the ISO-8601 standard. In addition, ISO-8601 does not permit mixing between the &lt;code&gt;PnYnMnD&lt;/code&gt; and &lt;code&gt;PnW&lt;/code&gt; formats. Any week-based input is multiplied by 7 and treated as a number of days.</source>
          <target state="translated">先頭のプラス/マイナス記号、および他の単位の負の値は、ISO-8601規格の一部ではありません。また、ISO-8601は、間に混合可能にしない &lt;code&gt;PnYnMnD&lt;/code&gt; と &lt;code&gt;PnW&lt;/code&gt; フォーマット。週ベースの入力は7倍され、日数として扱われます。</target>
        </trans-unit>
        <trans-unit id="63cecf4a8fa95d4d0270f57a3e75af217a6a1a81" translate="yes" xml:space="preserve">
          <source>The least significant 64 bits of this UUID's 128 bit value</source>
          <target state="translated">このUUIDの128ビット値の最下位64ビット</target>
        </trans-unit>
        <trans-unit id="a83da07b2f48d8970311283f85c7e3bac23d44ea" translate="yes" xml:space="preserve">
          <source>The least significant long consists of the following unsigned fields:</source>
          <target state="translated">最小有効長は、以下の符号なしフィールドで構成されています。</target>
        </trans-unit>
        <trans-unit id="a2f3185970f510e8441751a15794c894d3ec5120" translate="yes" xml:space="preserve">
          <source>The left inset of the border.</source>
          <target state="translated">ボーダーの左インセット。</target>
        </trans-unit>
        <trans-unit id="2b87abbdcc21cbd8f730b01cb369d0a0fb5d7daa" translate="yes" xml:space="preserve">
          <source>The left or top component.</source>
          <target state="translated">左側または上側のコンポーネント。</target>
        </trans-unit>
        <trans-unit id="ba1e2b2bee4af48713fe9094a6295309b86010e3" translate="yes" xml:space="preserve">
          <source>The legal values for &lt;code&gt;calendarField&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;calendarField&lt;/code&gt; の有効な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="90796de19f379c872e10f161378da6519c486d81" translate="yes" xml:space="preserve">
          <source>The length of &lt;code&gt;identifier&lt;/code&gt; is less than 1 or greater than 128 characters</source>
          <target state="translated">&lt;code&gt;identifier&lt;/code&gt; の長さが1文字未満または128文字を超える</target>
        </trans-unit>
        <trans-unit id="41a95b6715d8d8c27a219e7e506b9f0ffacf1046" translate="yes" xml:space="preserve">
          <source>The length of a tick.</source>
          <target state="translated">ダニの長さ。</target>
        </trans-unit>
        <trans-unit id="87c3957c33024c262a7af561fbc4382beb1c10cd" translate="yes" xml:space="preserve">
          <source>The length of each month is 29 or 30 days. Ordinary years have 354 days; leap years have 355 days.</source>
          <target state="translated">各月の長さは29日か30日です。平年は354日、閏年は355日です。</target>
        </trans-unit>
        <trans-unit id="ddbb38752fc76e23de090a340e192731d09329a6" translate="yes" xml:space="preserve">
          <source>The length of the MIDI file in bytes.</source>
          <target state="translated">MIDI ファイルの長さをバイト単位で指定します。</target>
        </trans-unit>
        <trans-unit id="d2435fa816d6768395fd2a4aa385ef8e24c5ddee" translate="yes" xml:space="preserve">
          <source>The length of the array is the number of methods on the execution stack. The element at index &lt;code&gt;0&lt;/code&gt; is the class of the currently executing method, the element at index &lt;code&gt;1&lt;/code&gt; is the class of that method's caller, and so on.</source>
          <target state="translated">配列の長さは、実行スタック上のメソッドの数です。インデックス &lt;code&gt;0&lt;/code&gt; の要素は現在実行中のメソッドのクラス、インデックス &lt;code&gt;1&lt;/code&gt; の要素はそのメソッドの呼び出し元のクラスなどです。</target>
        </trans-unit>
        <trans-unit id="db0cba7fd12ec33074630b97168f59fc41388714" translate="yes" xml:space="preserve">
          <source>The length of the duration is stored using two fields - seconds and nanoseconds. The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to the length in seconds. The total duration is defined by calling &lt;a href=&quot;#getNano()&quot;&gt;&lt;code&gt;getNano()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getSeconds()&quot;&gt;&lt;code&gt;getSeconds()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">期間の長さは、秒とナノ秒の2つのフィールドを使用して保存されます。ナノ秒の部分は、0から999,999,999までの値であり、秒単位の長さを調整します。合計期間は、&lt;a href=&quot;#getNano()&quot;&gt; &lt;code&gt;getNano()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#getSeconds()&quot;&gt; &lt;code&gt;getSeconds()&lt;/code&gt; を&lt;/a&gt;呼び出すことによって定義されます。</target>
        </trans-unit>
        <trans-unit id="5b7612856469de2aec5e2bc66e25332200f0c8ce" translate="yes" xml:space="preserve">
          <source>The length of the duration is stored using two fields - seconds and nanoseconds. The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to the length in seconds. The total duration is defined by calling this method and &lt;a href=&quot;#getNano()&quot;&gt;&lt;code&gt;getNano()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">期間の長さは、秒とナノ秒の2つのフィールドを使用して保存されます。ナノ秒の部分は、0から999,999,999までの値であり、秒単位の長さを調整します。合計期間は、このメソッドと&lt;a href=&quot;#getNano()&quot;&gt; &lt;code&gt;getNano()&lt;/code&gt; を&lt;/a&gt;呼び出すことによって定義されます。</target>
        </trans-unit>
        <trans-unit id="52f1926df908fd6c91c3cdc7317b153da5f04881" translate="yes" xml:space="preserve">
          <source>The length of the duration is stored using two fields - seconds and nanoseconds. The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to the length in seconds. The total duration is defined by calling this method and &lt;a href=&quot;#getSeconds()&quot;&gt;&lt;code&gt;getSeconds()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">期間の長さは、秒とナノ秒の2つのフィールドを使用して保存されます。ナノ秒の部分は、0から999,999,999までの値であり、秒単位の長さを調整します。合計期間は、このメソッドと&lt;a href=&quot;#getSeconds()&quot;&gt; &lt;code&gt;getSeconds()&lt;/code&gt; を&lt;/a&gt;呼び出すことによって定義されます。</target>
        </trans-unit>
        <trans-unit id="b857f2f3bd91b155a9e3b739281c3f76ebd897e1" translate="yes" xml:space="preserve">
          <source>The length of the duration is stored using two fields - seconds and nanoseconds. The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to the length in seconds. The total duration is defined by calling this method and &lt;a href=&quot;duration#getNano--&quot;&gt;&lt;code&gt;getNano()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">期間の長さは、秒とナノ秒の2つのフィールドを使用して保存されます。ナノ秒の部分は0から999,999,999までの値で、長さを秒単位で調整したものです。合計時間は、このメソッドと&lt;a href=&quot;duration#getNano--&quot;&gt; &lt;code&gt;getNano()&lt;/code&gt; を&lt;/a&gt;呼び出すことによって定義されます。</target>
        </trans-unit>
        <trans-unit id="799f33b236c13bbcd8f6b24c22ed60055e48b108" translate="yes" xml:space="preserve">
          <source>The length of the duration is stored using two fields - seconds and nanoseconds. The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to the length in seconds. The total duration is defined by calling this method and &lt;a href=&quot;duration#getSeconds--&quot;&gt;&lt;code&gt;getSeconds()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">期間の長さは、秒とナノ秒の2つのフィールドを使用して保存されます。ナノ秒の部分は0から999,999,999までの値で、長さを秒単位で調整したものです。合計時間は、このメソッドと&lt;a href=&quot;duration#getSeconds--&quot;&gt; &lt;code&gt;getSeconds()&lt;/code&gt; を&lt;/a&gt;呼び出すことによって定義されます。</target>
        </trans-unit>
        <trans-unit id="297f7fc3454a1ac9b72ec75e82b737d1c3e02d73" translate="yes" xml:space="preserve">
          <source>The length of the erroneous input, a positive integer</source>
          <target state="translated">誤った入力の長さ (正の整数)</target>
        </trans-unit>
        <trans-unit id="2a624dce814ded4fc8a788876213688d849daba7" translate="yes" xml:space="preserve">
          <source>The length of the returned array equals the number of bytes read from the stream. If &lt;code&gt;len&lt;/code&gt; is zero, then no bytes are read and an empty byte array is returned. Otherwise, up to &lt;code&gt;len&lt;/code&gt; bytes are read from the stream. Fewer than &lt;code&gt;len&lt;/code&gt; bytes may be read if end of stream is encountered.</source>
          <target state="translated">返される配列の長さは、ストリームから読み取られたバイト数と同じです。場合 &lt;code&gt;len&lt;/code&gt; がゼロであり、その後、何バイトが読み取られず、空のバイト配列が返されます。それ以外の場合は、最大 &lt;code&gt;len&lt;/code&gt; バイトがストリームから読み取られます。ストリームの終わりに遭遇した場合、 &lt;code&gt;len&lt;/code&gt; バイト未満が読み取られる可能性があります。</target>
        </trans-unit>
        <trans-unit id="919271a96dbead07bffe665f55582cbbbb8ef438" translate="yes" xml:space="preserve">
          <source>The length of the solar day is the standard way that humans measure time. This has traditionally been subdivided into 24 hours of 60 minutes of 60 seconds, forming a 86400 second day.</source>
          <target state="translated">太陽の日の長さは、人間が時間を測る標準的な方法です。これは伝統的に60分60秒の24時間に細分化されており、86400秒の1日を形成しています。</target>
        </trans-unit>
        <trans-unit id="33b014d560da82e0f5d8f763343933b2684c530a" translate="yes" xml:space="preserve">
          <source>The length of this character buffer</source>
          <target state="translated">この文字バッファの長さ</target>
        </trans-unit>
        <trans-unit id="a1267c7d6b40b8c0d034f6025fd6b9fc8ca3a757" translate="yes" xml:space="preserve">
          <source>The length, in bytes, of the file denoted by this abstract pathname, or &lt;code&gt;0L&lt;/code&gt; if the file does not exist. Some operating systems may return &lt;code&gt;0L&lt;/code&gt; for pathnames denoting system-dependent entities such as devices or pipes.</source>
          <target state="translated">この抽象パス名で示されるファイルの長さ（バイト単位）、またはファイルが存在しない場合は &lt;code&gt;0L&lt;/code&gt; 。一部のオペレーティングシステムは、デバイスやパイプなどのシステム依存のエンティティを示すパス名に対して &lt;code&gt;0L&lt;/code&gt; を返す場合があります。</target>
        </trans-unit>
        <trans-unit id="581d35e78b7ce49a00c13c4b7ee295fe5f34e3bd" translate="yes" xml:space="preserve">
          <source>The lengths of the 12 months of the year separated by whitespace. A numeric year property must be present for every year without any gaps. The month lengths must be between 29-32 inclusive.</source>
          <target state="translated">年の 12 ヶ月の長さを空白で区切ったもの。すべての年について、空白を含まない数値の年プロパティを指定する必要があります。月の長さは 29 ~ 32 の間でなければなりません。</target>
        </trans-unit>
        <trans-unit id="5b66e74de97e7f14be88c15b844d4047ab288d4b" translate="yes" xml:space="preserve">
          <source>The letter 'T'. Parsing is case insensitive.</source>
          <target state="translated">文字「T」。パーシングは大文字と小文字を区別しません。</target>
        </trans-unit>
        <trans-unit id="fc227fcf89d7cc814e4981de81e0c19a58943c38" translate="yes" xml:space="preserve">
          <source>The letter 'W'. Parsing is case insensitive.</source>
          <target state="translated">文字「W」。パーシングは大文字と小文字を区別しません。</target>
        </trans-unit>
        <trans-unit id="d77c8cf193187a7a8a4df4378c110186f76ee90c" translate="yes" xml:space="preserve">
          <source>The letters A-Z in their uppercase (&lt;code&gt;'\u0041'&lt;/code&gt; through &lt;code&gt;'\u005A'&lt;/code&gt;), lowercase (&lt;code&gt;'\u0061'&lt;/code&gt; through &lt;code&gt;'\u007A'&lt;/code&gt;), and full width variant (&lt;code&gt;'\uFF21'&lt;/code&gt; through &lt;code&gt;'\uFF3A'&lt;/code&gt; and &lt;code&gt;'\uFF41'&lt;/code&gt; through &lt;code&gt;'\uFF5A'&lt;/code&gt;) forms have numeric values from 10 through 35. This is independent of the Unicode specification, which does not assign numeric values to these &lt;code&gt;char&lt;/code&gt; values.</source>
          <target state="translated">大文字のAZ（ &lt;code&gt;'\u0041'&lt;/code&gt; から &lt;code&gt;'\u005A'&lt;/code&gt; ）、小文字（ &lt;code&gt;'\u0061'&lt;/code&gt; から &lt;code&gt;'\u007A'&lt;/code&gt; ）、および全角のバリエーション（ &lt;code&gt;'\uFF21'&lt;/code&gt; から &lt;code&gt;'\uFF3A'&lt;/code&gt; および &lt;code&gt;'\uFF41'&lt;/code&gt; 〜 &lt;code&gt;'\uFF5A'&lt;/code&gt; ）形式には10〜35の数値があります。これは、これらの &lt;code&gt;char&lt;/code&gt; 値に数値を割り当てないUnicode仕様とは無関係です。</target>
        </trans-unit>
        <trans-unit id="099a2135b8e7e4f9044f572d83bbcd49c70dfd02" translate="yes" xml:space="preserve">
          <source>The levels in descending order are:</source>
          <target state="translated">レベルは降順になっています。</target>
        </trans-unit>
        <trans-unit id="0e8ba1b886b6e805ca0a71d56eee50e6a8bc10b6" translate="yes" xml:space="preserve">
          <source>The lexicographical ordering of &lt;code&gt;CharSequence&lt;/code&gt; is defined as follows. Consider a &lt;code&gt;CharSequence&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CharSequence&lt;/code&gt; の辞書式順序は、次のように定義されています。 &lt;code&gt;CharSequence&lt;/code&gt; を検討してください</target>
        </trans-unit>
        <trans-unit id="aaba787bd83219a9dcbfeeac67a7f10d3959fe01" translate="yes" xml:space="preserve">
          <source>The lightest predefined weight.</source>
          <target state="translated">最も軽い所定の重量。</target>
        </trans-unit>
        <trans-unit id="adb3d673f7476255c74ac6d7d9fa9326dae1d524" translate="yes" xml:space="preserve">
          <source>The limit of persistent storage allocated for spooling has been reached.</source>
          <target state="translated">スプール用に割り当てられた永続的なストレージの上限に達しました。</target>
        </trans-unit>
        <trans-unit id="e4ba24e69512c484f4d6ceb119bca02cab802a8d" translate="yes" xml:space="preserve">
          <source>The limit of persistent storage allocated for spooling has been reached. The printer is temporarily unable to accept more jobs. The printer will remove this reason when it is able to accept more jobs. This value should be used by a non-spooling printer that only accepts one or a small number jobs at a time or a spooling printer that has filled the spool space.</source>
          <target state="translated">スプールに割り当てられた永続的なストレージの上限に達しました。プリンタは一時的により多くのジョブを受け入れることができません。プリンタは、より多くのジョブを受け付けることができるようになると、この理由を削除します。この値は、一度に1つまたは少数のジョブしか受け付けない非スプールプリンタや、スプールスペースを埋めたスプールプリンタで使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="38ae39f9f342a1c60cd5cbb9ab2d4d849160241e" translate="yes" xml:space="preserve">
          <source>The limit of this buffer</source>
          <target state="translated">このバッファの限界</target>
        </trans-unit>
        <trans-unit id="ab9c6e922a12a9462c9be31812943f21ad4a8106" translate="yes" xml:space="preserve">
          <source>The limit to trim a line join that has a JOIN_MITER decoration. A line join is trimmed when the ratio of miter length to stroke width is greater than the miterlimit value. The miter length is the diagonal length of the miter, which is the distance between the inside corner and the outside corner of the intersection. The smaller the angle formed by two line segments, the longer the miter length and the sharper the angle of intersection. The default miterlimit value of 10.0f causes all angles less than 11 degrees to be trimmed. Trimming miters converts the decoration of the line join to bevel.</source>
          <target state="translated">JOIN_MITER装飾を持つ線結合をトリミングするための制限値です。線分結合は、ストローク幅に対するマイタ長の比率がmiterlimitの値よりも大きい場合にトリミングされます。マイター長とは、マイターの対角線の長さのことで、交点の内側の角と外側の角の間の距離のことです。2つの線分で形成される角度が小さいほど、マイター長が長くなり、交点の角度がシャープになります。デフォルトのマイター制限値 10.0f では、11 度未満の角度はすべてトリミングされます。マイターをトリミングすると、線分の結合部の装飾がベベルに変換されます。</target>
        </trans-unit>
        <trans-unit id="74d9cdefdf1f884bc0a559db2675d6e2b7088424" translate="yes" xml:space="preserve">
          <source>The line number as an integer, or -1 if none is available.</source>
          <target state="translated">行番号を整数で指定します。</target>
        </trans-unit>
        <trans-unit id="77c032fbbd794d07ea48f8c91991c009a7b8b837" translate="yes" xml:space="preserve">
          <source>The line number begins at &lt;code&gt;0&lt;/code&gt;, and is incremented by &lt;code&gt;1&lt;/code&gt; when a &lt;code&gt;read&lt;/code&gt; returns a newline character.</source>
          <target state="translated">行番号は &lt;code&gt;0&lt;/code&gt; から始まり、 &lt;code&gt;read&lt;/code&gt; が改行文字を返すと &lt;code&gt;1&lt;/code&gt; ずつ増加します。</target>
        </trans-unit>
        <trans-unit id="92305e3b358afecfa44f83d1bcf7ae6dd7cb851f" translate="yes" xml:space="preserve">
          <source>The line number of the end of the text where the exception occurred.</source>
          <target state="translated">例外が発生したテキストの末尾の行番号。</target>
        </trans-unit>
        <trans-unit id="cddc84c180049c473d968f703982ac6a38c01347" translate="yes" xml:space="preserve">
          <source>The line number this locator is pointing to, or &lt;code&gt;-1&lt;/code&gt; if there is no column number available.</source>
          <target state="translated">このロケーターが指している行番号、または使用可能な列番号がない場合は &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="166a8e4f12900a4c636e64b35cecf089e2b6e881" translate="yes" xml:space="preserve">
          <source>The line number, or -1 if none is available.</source>
          <target state="translated">行番号、または何もない場合は-1。</target>
        </trans-unit>
        <trans-unit id="6d055d92518c915ab1ac205ce84b4eb5bcc880a5" translate="yes" xml:space="preserve">
          <source>The line number. Returns -1 if a line number is unavailable.</source>
          <target state="translated">行番号。行番号が利用できない場合は -1 を返します。</target>
        </trans-unit>
        <trans-unit id="427d04746239c7210cdccd3ee110daac2acf52b0" translate="yes" xml:space="preserve">
          <source>The line views do all of their rendering through the &lt;code&gt;drawLine&lt;/code&gt; method which in turn does all of its rendering through the &lt;code&gt;drawSelectedText&lt;/code&gt; and &lt;code&gt;drawUnselectedText&lt;/code&gt; methods. This enables subclasses to easily specialize the rendering without concern for the layout aspects.</source>
          <target state="translated">ラインビューはを通じてレンダリングのすべてを行う &lt;code&gt;drawLine&lt;/code&gt; の順番にを通じてレンダリングのすべてを行い方法 &lt;code&gt;drawSelectedText&lt;/code&gt; メソッドと &lt;code&gt;drawUnselectedText&lt;/code&gt; 方法。これにより、サブクラスはレイアウトの側面を気にすることなくレンダリングを簡単に特殊化できます。</target>
        </trans-unit>
        <trans-unit id="b409c56200d65a52d0a4e38f68805b5ad4c0f519" translate="yes" xml:space="preserve">
          <source>The lines of a file can be obtained from &lt;a href=&quot;../../io/bufferedreader#lines()&quot;&gt;&lt;code&gt;BufferedReader.lines()&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">ファイルの行は、&lt;a href=&quot;../../io/bufferedreader#lines()&quot;&gt; &lt;code&gt;BufferedReader.lines()&lt;/code&gt; &lt;/a&gt;から取得できます。</target>
        </trans-unit>
        <trans-unit id="d0fbc9f6cfd3d04e440801fa393ad994718e72cd" translate="yes" xml:space="preserve">
          <source>The lines of a file can be obtained from &lt;a href=&quot;../../io/bufferedreader#lines--&quot;&gt;&lt;code&gt;BufferedReader.lines()&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">ファイルの行は、&lt;a href=&quot;../../io/bufferedreader#lines--&quot;&gt; &lt;code&gt;BufferedReader.lines()&lt;/code&gt; &lt;/a&gt;から取得できます。</target>
        </trans-unit>
        <trans-unit id="1da4ff24559b092bdd6dbfa74dfe3af5beeb0606" translate="yes" xml:space="preserve">
          <source>The list containing all the enabled attribute names.</source>
          <target state="translated">すべての有効な属性名を含むリスト。</target>
        </trans-unit>
        <trans-unit id="f6baad02fe3b9954bd6badb60ae27c47fc3bb918" translate="yes" xml:space="preserve">
          <source>The list containing all the enabled notification types.</source>
          <target state="translated">有効になっているすべての通知タイプを含むリスト。</target>
        </trans-unit>
        <trans-unit id="f3ea619d9f715deb3d2e3f1b2741f191c4bbc56c" translate="yes" xml:space="preserve">
          <source>The list of &lt;code&gt;Certificate&lt;/code&gt;s is an ordered &lt;code&gt;List&lt;/code&gt; of zero or more &lt;code&gt;Certificate&lt;/code&gt;s. This &lt;code&gt;List&lt;/code&gt; and all of the &lt;code&gt;Certificate&lt;/code&gt;s contained in it must be immutable.</source>
          <target state="translated">&lt;code&gt;Certificate&lt;/code&gt; のリストは、0個以上の &lt;code&gt;Certificate&lt;/code&gt; の順序付き &lt;code&gt;List&lt;/code&gt; です。この &lt;code&gt;List&lt;/code&gt; とそれに含まれるすべての &lt;code&gt;Certificate&lt;/code&gt; 不変でなければなりません。</target>
        </trans-unit>
        <trans-unit id="b916d31edb7a209420a16f9027d0923d3faa5654" translate="yes" xml:space="preserve">
          <source>The list of ChangeListeners for this model.</source>
          <target state="translated">このモデルのChangeListenersのリスト。</target>
        </trans-unit>
        <trans-unit id="10bfa47e8164a90866857998be35737173041df7" translate="yes" xml:space="preserve">
          <source>The list of ChangeListeners for this model. Subclasses may store their own listeners here.</source>
          <target state="translated">このモデルのChangeListenersのリスト。サブクラスは独自のリスナーをここに格納することができます。</target>
        </trans-unit>
        <trans-unit id="cd0934730ffafda86be98b2e11c9a6431cd700ca" translate="yes" xml:space="preserve">
          <source>The list of IDs for currently-open connections to this connector server.</source>
          <target state="translated">このコネクタサーバへの現在開いている接続の ID のリスト。</target>
        </trans-unit>
        <trans-unit id="f13e9c64749b8ed1f5479b46d29755512554be72" translate="yes" xml:space="preserve">
          <source>The list of ListenerType - Listener pairs</source>
          <target state="translated">ListenerType-リスナーペアのリスト</target>
        </trans-unit>
        <trans-unit id="cbf332d9549df163b0b7e42036484336ca82fb86" translate="yes" xml:space="preserve">
          <source>The list of Management Interfaces and their single instances</source>
          <target state="translated">管理インタフェースとその単一インスタンスのリスト</target>
        </trans-unit>
        <trans-unit id="d3edf1b8ae53c360c1c5b20e97917aa355190641" translate="yes" xml:space="preserve">
          <source>The list of attributes retrieved.</source>
          <target state="translated">取得した属性のリスト。</target>
        </trans-unit>
        <trans-unit id="a733a32deedbd729aa7b488bf3de06d8d71e5e72" translate="yes" xml:space="preserve">
          <source>The list of attributes that were set, with their new values.</source>
          <target state="translated">設定された属性のリストと新しい値。</target>
        </trans-unit>
        <trans-unit id="14a4e1e5cb8c7574ab3f323e3ba345046ec22d99" translate="yes" xml:space="preserve">
          <source>The list of buttons participating in this group.</source>
          <target state="translated">このグループに参加しているボタンの一覧です。</target>
        </trans-unit>
        <trans-unit id="0fdae3bd72419d0a97c00be302983175d31ccb88" translate="yes" xml:space="preserve">
          <source>The list of children affected by this event notification.</source>
          <target state="translated">このイベント通知の影響を受ける子供のリスト。</target>
        </trans-unit>
        <trans-unit id="26ed6ff2dccafe178897a47f12d26e2b3c797bad" translate="yes" xml:space="preserve">
          <source>The list of events (in order) that the &lt;code&gt;DragGestureRecognizer&lt;/code&gt; &quot;recognized&quot; as a &quot;gesture&quot; that triggers a drag.</source>
          <target state="translated">&lt;code&gt;DragGestureRecognizer&lt;/code&gt; がドラッグをトリガーする「ジェスチャ」として「認識」したイベントのリスト（順序）。</target>
        </trans-unit>
        <trans-unit id="7ae61477db1267667809d3a08c8f514fa6a79474" translate="yes" xml:space="preserve">
          <source>The list of extensions.</source>
          <target state="translated">拡張子の一覧です。</target>
        </trans-unit>
        <trans-unit id="1df53ae501acdd85420414bca713b21207b00184" translate="yes" xml:space="preserve">
          <source>The list of listeners.</source>
          <target state="translated">リスナーのリストです。</target>
        </trans-unit>
        <trans-unit id="6ebc6df8965040b3ce7dc92bd4596d6121981619" translate="yes" xml:space="preserve">
          <source>The list of mime types.</source>
          <target state="translated">マイムの種類の一覧です。</target>
        </trans-unit>
        <trans-unit id="4437772a3d8b697777cf41a340957151122fb04d" translate="yes" xml:space="preserve">
          <source>The list of the parameters supported by this &lt;code&gt;DOMConfiguration&lt;/code&gt; object and for which at least one value can be set by the application.</source>
          <target state="translated">この &lt;code&gt;DOMConfiguration&lt;/code&gt; オブジェクトでサポートされ、アプリケーションで少なくとも1つの値を設定できるパラメーターのリスト。</target>
        </trans-unit>
        <trans-unit id="cc54843827b6539c88c4d61550825bb01e64ccec" translate="yes" xml:space="preserve">
          <source>The list of the parameters supported by this &lt;code&gt;DOMConfiguration&lt;/code&gt; object and for which at least one value can be set by the application. Note that this list can also contain parameter names defined outside this specification.</source>
          <target state="translated">この &lt;code&gt;DOMConfiguration&lt;/code&gt; オブジェクトでサポートされ、アプリケーションで少なくとも1つの値を設定できるパラメーターのリスト。このリストには、この仕様の範囲外で定義されたパラメーター名を含めることもできることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2a7748aeeee58a5b52705cd02ff41d8df27062b6" translate="yes" xml:space="preserve">
          <source>The list of the retrieved attributes.</source>
          <target state="translated">取得した属性のリスト。</target>
        </trans-unit>
        <trans-unit id="411c02d68ec92711ab8406bcc5a78e9ff249944a" translate="yes" xml:space="preserve">
          <source>The list of this layer's parents</source>
          <target state="translated">このレイヤーの親のリスト</target>
        </trans-unit>
        <trans-unit id="aba858810c5aa18739c636e7b18c7408ef0a29c0" translate="yes" xml:space="preserve">
          <source>The list of units completely and uniquely represents the state of the object without omissions, overlaps or duplication. The units are in order from longest duration to shortest.</source>
          <target state="translated">単位のリストは、省略、重複、重複のないオブジェクトの状態を完全かつ一意に表します。単位は、持続時間の長いものから短いものへと順に並んでいます。</target>
        </trans-unit>
        <trans-unit id="f0a31b4438d214ff5ab44fbf1e6df091597039c9" translate="yes" xml:space="preserve">
          <source>The list will be empty for fixed offset rules and for any time-zone where there has only ever been a single offset. The list will also be empty if the transition rules are unknown.</source>
          <target state="translated">固定オフセットルールと、これまでに単一のオフセットしかなかったタイムゾーンについては、リストは空になります。また、遷移ルールが不明な場合もリストは空になります。</target>
        </trans-unit>
        <trans-unit id="df0c9468b72bfab4969f222df61b6ab502e1a758" translate="yes" xml:space="preserve">
          <source>The list will be empty for fixed offset rules and for any time-zone where there is no daylight saving time. The list will also be empty if the transition rules are unknown.</source>
          <target state="translated">固定オフセット規則と、サマータイムがないタイムゾーンについては、リストは空になります。また、移行規則が不明な場合もリストは空になります。</target>
        </trans-unit>
        <trans-unit id="e3f7de82bdbb25e5787b3964abd332a8bf295b2b" translate="yes" xml:space="preserve">
          <source>The list will not contain attributes that were declared #IMPLIED but not specified in the start tag. It will also not contain attributes used as Namespace declarations (xmlns*) unless the &lt;code&gt;http://xml.org/sax/features/namespace-prefixes&lt;/code&gt; feature is set to &lt;var&gt;true&lt;/var&gt; (it is &lt;var&gt;false&lt;/var&gt; by default). Because SAX2 conforms to the original &quot;Namespaces in XML&quot; recommendation, it normally does not give namespace declaration attributes a namespace URI.</source>
          <target state="translated">リストには、＃IMPLIEDと宣言されたが、開始タグで指定されていない属性は含まれません。また、 &lt;code&gt;http://xml.org/sax/features/namespace-prefixes&lt;/code&gt; 機能が &lt;var&gt;true&lt;/var&gt; に設定されていない限り（デフォルトでは &lt;var&gt;false&lt;/var&gt; ）、名前空間宣言（xmlns *）として使用される属性は含まれません。SAX2は元の「XMLの名前空間」推奨に準拠しているため、通常、名前空間宣言属性に名前空間URIを与えません。</target>
        </trans-unit>
        <trans-unit id="27844bc6af8434ed5116d0992a6ff6c763ad2302" translate="yes" xml:space="preserve">
          <source>The list-iterator is</source>
          <target state="translated">リストイテレータは</target>
        </trans-unit>
        <trans-unit id="7f92bf7d6987c47057b3f2bdbf85f39eb676f3f9" translate="yes" xml:space="preserve">
          <source>The listener &lt;code&gt;myListener&lt;/code&gt; will only receive notifications the type of which equals/starts with &quot;my_example.my_type&quot;.</source>
          <target state="translated">リスナー &lt;code&gt;myListener&lt;/code&gt; は、タイプが「my_example.my_type」と等しい/で始まる通知のみを受け取ります。</target>
        </trans-unit>
        <trans-unit id="6084d864c4b6f5b4544fc69b60315b434163b6f4" translate="yes" xml:space="preserve">
          <source>The listener ID.</source>
          <target state="translated">リスナーIDです。</target>
        </trans-unit>
        <trans-unit id="57bc8a7e5c23ed6b6f740ba7b53d85cb121e7436" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &quot;interesting&quot; mouse events (press, release, click, enter, and exit) on a component.</source>
          <target state="translated">コンポーネント上の「興味深い」マウスイベント(プレス、リリース、クリック、入力、終了)を受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="94b650252b7748b4f18f00d71d5724ea14d5b3c3" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &quot;interesting&quot; mouse events (press, release, click, enter, and exit) on a component. (To track mouse moves and mouse drags, use the &lt;code&gt;MouseMotionListener&lt;/code&gt;.)</source>
          <target state="translated">コンポーネントで「興味深い」マウスイベント（押す、離す、クリックする、入力する、終了する）を受信するためのリスナーインターフェイス。（マウスの動きとマウスのドラッグを追跡するには、 &lt;code&gt;MouseMotionListener&lt;/code&gt; を使用します。）</target>
        </trans-unit>
        <trans-unit id="3ca4adf4d22463d5be377865984608d8896c3b85" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; オブジェクトを受け取るためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="9831fa0c76b61ac6b48f7edcb579a53278a9108b" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; objects. A class that is interested in processing a &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; implements this interface.</source>
          <target state="translated">&lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; オブジェクトを受け取るためのリスナーインターフェース。 &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; の処理に関心のあるクラスは、このインターフェースを実装します。</target>
        </trans-unit>
        <trans-unit id="609d94d290b2f275c653b99c1f7e5a6a92448bc7" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; オブジェクトを受け取るためのリスナーインターフェイス。</target>
        </trans-unit>
        <trans-unit id="5b8110e74303433769bb43009b8ee46a1e6e9536" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; objects. A class that is interested in processing a &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; implements this interface.</source>
          <target state="translated">&lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; オブジェクトを受け取るためのリスナーインターフェイス。 &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; の処理に関心のあるクラスは、このインターフェースを実装します。</target>
        </trans-unit>
        <trans-unit id="8967b4cafac2c1346bdb5684d29888b2a7006c87" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;WindowEvents&lt;/code&gt;, including &lt;code&gt;WINDOW_GAINED_FOCUS&lt;/code&gt; and &lt;code&gt;WINDOW_LOST_FOCUS&lt;/code&gt; events.</source>
          <target state="translated">&lt;code&gt;WINDOW_GAINED_FOCUS&lt;/code&gt; および &lt;code&gt;WINDOW_LOST_FOCUS&lt;/code&gt; イベントを含む &lt;code&gt;WindowEvents&lt;/code&gt; を受信するためのリスナーインターフェイス。</target>
        </trans-unit>
        <trans-unit id="9e3bf64f53823d12d7070cf10bb2a3c32849bb05" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;WindowEvents&lt;/code&gt;, including &lt;code&gt;WINDOW_GAINED_FOCUS&lt;/code&gt; and &lt;code&gt;WINDOW_LOST_FOCUS&lt;/code&gt; events. The class that is interested in processing a &lt;code&gt;WindowEvent&lt;/code&gt; either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;WindowAdapter&lt;/code&gt; class (overriding only the methods of interest). The listener object created from that class is then registered with a &lt;code&gt;Window&lt;/code&gt; using the &lt;code&gt;Window&lt;/code&gt;'s &lt;code&gt;addWindowFocusListener&lt;/code&gt; method. When the &lt;code&gt;Window&lt;/code&gt;'s status changes by virtue of it being opened, closed, activated, deactivated, iconified, or deiconified, or by focus being transferred into or out of the &lt;code&gt;Window&lt;/code&gt;, the relevant method in the listener object is invoked, and the &lt;code&gt;WindowEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">&lt;code&gt;WINDOW_GAINED_FOCUS&lt;/code&gt; および &lt;code&gt;WINDOW_LOST_FOCUS&lt;/code&gt; イベントを含む &lt;code&gt;WindowEvents&lt;/code&gt; を受信するためのリスナーインターフェイス。 &lt;code&gt;WindowEvent&lt;/code&gt; の処理に関心のあるクラスは、このインターフェイス（およびそれに含まれるすべてのメソッド）を実装するか、抽象 &lt;code&gt;WindowAdapter&lt;/code&gt; クラスを拡張します（対象のメソッドのみをオーバーライドします）。そのクラスから作成されたリスナーオブジェクトは、 &lt;code&gt;Window&lt;/code&gt; の &lt;code&gt;addWindowFocusListener&lt;/code&gt; メソッドを使用して &lt;code&gt;Window&lt;/code&gt; に登録されます。とき &lt;code&gt;Window&lt;/code&gt; のステータスは、開かれた、閉じられた、アクティブ化された、非アクティブ化された、アイコン化された、またはアイコン化解除された、またはフォーカスが &lt;code&gt;Window&lt;/code&gt; 内外に転送されたために変化し、リスナーオブジェクトの関連するメソッドが呼び出され、 &lt;code&gt;WindowEvent&lt;/code&gt; がそれ。</target>
        </trans-unit>
        <trans-unit id="2210a94d07b13e1708014a554d960f43d802860d" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving action events.</source>
          <target state="translated">アクションイベントを受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="44aaad1f22857e7f37adbeee3971e333bf1478af" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving action events. The class that is interested in processing an action event implements this interface, and the object created with that class is registered with a component, using the component's &lt;code&gt;addActionListener&lt;/code&gt; method. When the action event occurs, that object's &lt;code&gt;actionPerformed&lt;/code&gt; method is invoked.</source>
          <target state="translated">アクションイベントを受信するためのリスナーインターフェイス。アクションイベントの処理に関心のあるクラスはこのインターフェイスを実装し、そのクラスで作成されたオブジェクトは、コンポーネントの &lt;code&gt;addActionListener&lt;/code&gt; メソッドを使用してコンポーネントに登録されます。アクションイベントが発生すると、そのオブジェクトの &lt;code&gt;actionPerformed&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="00481095f54f04b1438b3c70335567d77c787b53" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving adjustment events.</source>
          <target state="translated">調整イベントを受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="f74efcc9f924ef4ddbb75d04ff313c461ac67b46" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving ancestor moved and resized events.</source>
          <target state="translated">祖先の移動およびサイズ変更イベントを受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="9c9fb6c6d5cb612e709c6561fb33185e1282a46a" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving ancestor moved and resized events. The class that is interested in processing these events either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;HierarchyBoundsAdapter&lt;/code&gt; class (overriding only the method of interest). The listener object created from that class is then registered with a Component using the Component's &lt;code&gt;addHierarchyBoundsListener&lt;/code&gt; method. When the hierarchy to which the Component belongs changes by the resizing or movement of an ancestor, the relevant method in the listener object is invoked, and the &lt;code&gt;HierarchyEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">祖先の移動およびサイズ変更されたイベントを受信するためのリスナーインターフェイス。これらのイベントの処理に関心のあるクラスは、このインターフェイス（およびそれに含まれるすべてのメソッド）を実装するか、抽象 &lt;code&gt;HierarchyBoundsAdapter&lt;/code&gt; クラスを拡張します（対象のメソッドのみをオーバーライドします）。そのクラスから作成されたリスナーオブジェクトは、コンポーネントの &lt;code&gt;addHierarchyBoundsListener&lt;/code&gt; メソッドを使用してコンポーネントに登録されます。コンポーネントが属する階層が祖先のサイズ変更または移動によって変更されると、リスナーオブジェクトの関連するメソッドが呼び出され、 &lt;code&gt;HierarchyEvent&lt;/code&gt; が渡されます。</target>
        </trans-unit>
        <trans-unit id="90cdd407940bda984d8e64426a26ab551a4da521" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving component events.</source>
          <target state="translated">コンポーネントイベントを受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="7aa95cc25a9eedaeeb276f09b2fb164966ec1ede" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving component events. The class that is interested in processing a component event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;ComponentAdapter&lt;/code&gt; class (overriding only the methods of interest). The listener object created from that class is then registered with a component using the component's &lt;code&gt;addComponentListener&lt;/code&gt; method. When the component's size, location, or visibility changes, the relevant method in the listener object is invoked, and the &lt;code&gt;ComponentEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">コンポーネントイベントを受信するためのリスナーインターフェイス。コンポーネントイベントの処理に関心のあるクラスは、このインターフェイス（およびそれに含まれるすべてのメソッド）を実装するか、抽象 &lt;code&gt;ComponentAdapter&lt;/code&gt; クラスを拡張します（対象のメソッドのみをオーバーライドします）。そのクラスから作成されたリスナーオブジェクトは、コンポーネントの &lt;code&gt;addComponentListener&lt;/code&gt; メソッドを使用してコンポーネントに登録されます。コンポーネントのサイズ、場所、または可視性が変更されると、リスナーオブジェクトの関連するメソッドが呼び出され、 &lt;code&gt;ComponentEvent&lt;/code&gt; がコンポーネントに渡されます。</target>
        </trans-unit>
        <trans-unit id="890552b57b756139822609b780bfb4956f13f4ac" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving container events.</source>
          <target state="translated">コンテナイベントを受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="2fc56b922809d90a27cf9eff61571095b10ff438" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving container events. The class that is interested in processing a container event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;ContainerAdapter&lt;/code&gt; class (overriding only the methods of interest). The listener object created from that class is then registered with a component using the component's &lt;code&gt;addContainerListener&lt;/code&gt; method. When the container's contents change because a component has been added or removed, the relevant method in the listener object is invoked, and the &lt;code&gt;ContainerEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">コンテナイベントを受信するためのリスナーインターフェイス。コンテナイベントの処理に関心のあるクラスは、このインターフェイス（およびそれに含まれるすべてのメソッド）を実装するか、抽象 &lt;code&gt;ContainerAdapter&lt;/code&gt; クラスを拡張します（対象のメソッドのみをオーバーライドします）。そのクラスから作成されたリスナーオブジェクトは、コンポーネントの &lt;code&gt;addContainerListener&lt;/code&gt; メソッドを使用してコンポーネントに登録されます。コンポーネントが追加または削除されたためにコンテナの内容が変更されると、リスナーオブジェクトの関連するメソッドが呼び出され、 &lt;code&gt;ContainerEvent&lt;/code&gt; がコンテナに渡されます。</target>
        </trans-unit>
        <trans-unit id="efe5a9e3d412b2aa50b0183fe05ad9b2eb0dbbb8" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving drag gesture events.</source>
          <target state="translated">ドラッグジェスチャーイベントを受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="15fa10c4878c98ecdeff5867b8880a49492e9107" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving drag gesture events. This interface is intended for a drag gesture recognition implementation. See a specification for &lt;code&gt;DragGestureRecognizer&lt;/code&gt; for details on how to register the listener interface. Upon recognition of a drag gesture the &lt;code&gt;
 DragGestureRecognizer&lt;/code&gt; calls this interface's &lt;a href=&quot;#dragGestureRecognized(java.awt.dnd.DragGestureEvent)&quot;&gt;&lt;code&gt;dragGestureRecognized()&lt;/code&gt;&lt;/a&gt; method and passes a &lt;code&gt;DragGestureEvent&lt;/code&gt;.</source>
          <target state="translated">ドラッグジェスチャイベントを受信するためのリスナーインターフェイス。このインターフェイスは、ドラッグジェスチャ認識の実装を目的としています。リスナーインターフェイスの登録方法の詳細については、 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; の仕様を参照してください。ドラッグジェスチャを認識すると、 &lt;code&gt; DragGestureRecognizer&lt;/code&gt; はこのインターフェイスの&lt;a href=&quot;#dragGestureRecognized(java.awt.dnd.DragGestureEvent)&quot;&gt; &lt;code&gt;dragGestureRecognized()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、DragGestureEventを渡し &lt;code&gt;DragGestureEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c2ba980f1ffa6a1e693c2e81186f0140ecae865" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving hierarchy changed events.</source>
          <target state="translated">階層変更イベントを受信するためのリスナー・インターフェース。</target>
        </trans-unit>
        <trans-unit id="00dfcc9fbbc4af9b6f644dad4856515c715735a0" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving hierarchy changed events. The class that is interested in processing a hierarchy changed event should implement this interface. The listener object created from that class is then registered with a Component using the Component's &lt;code&gt;addHierarchyListener&lt;/code&gt; method. When the hierarchy to which the Component belongs changes, the &lt;code&gt;hierarchyChanged&lt;/code&gt; method in the listener object is invoked, and the &lt;code&gt;HierarchyEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">階層変更イベントを受信するためのリスナーインターフェイス。階層変更イベントの処理に関心のあるクラスは、このインターフェースを実装する必要があります。そのクラスから作成されたリスナーオブジェクトは、コンポーネントの &lt;code&gt;addHierarchyListener&lt;/code&gt; メソッドを使用してコンポーネントに登録されます。コンポーネントが属する &lt;code&gt;hierarchyChanged&lt;/code&gt; が変更されると、リスナーオブジェクトのhierarchyChangedメソッドが呼び出され、 &lt;code&gt;HierarchyEvent&lt;/code&gt; が渡されます。</target>
        </trans-unit>
        <trans-unit id="58ada86b28047533e641ed98b6599c7db695cc11" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving input method events.</source>
          <target state="translated">入力メソッドのイベントを受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="7a08e2d02f7f85fe29f73c9f21011bec490a42b8" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving input method events. A text editing component has to install an input method event listener in order to work with input methods.</source>
          <target state="translated">入力メソッドのイベントを受信するためのリスナーインターフェースです。テキスト編集コンポーネントは、入力メソッドを扱うために入力メソッドイベントリスナーをインストールしなければなりません。</target>
        </trans-unit>
        <trans-unit id="aa0126d87b3a2ff4702bb38d66b6fe4bea766e5d" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving internal frame events.</source>
          <target state="translated">内部フレームイベントを受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="150ad64d77ea0b03512efe80e030779edab3376d" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving internal frame events. This class is functionally equivalent to the WindowListener class in the AWT.</source>
          <target state="translated">内部フレームイベントを受信するためのリスナーインターフェースです。このクラスは、機能的にはAWTのWindowListenerクラスと同等です。</target>
        </trans-unit>
        <trans-unit id="516d18657e74f4887fa5c4e579c454ee66d1e071" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving item events.</source>
          <target state="translated">アイテムイベントを受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="109e7da1b01afba7911db87e11f9cbf0f86c20ba" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving item events. The class that is interested in processing an item event implements this interface. The object created with that class is then registered with a component using the component's &lt;code&gt;addItemListener&lt;/code&gt; method. When an item-selection event occurs, the listener object's &lt;code&gt;itemStateChanged&lt;/code&gt; method is invoked.</source>
          <target state="translated">アイテムイベントを受信するためのリスナーインターフェイス。アイテムイベントの処理に関心のあるクラスは、このインターフェイスを実装します。そのクラスで作成されたオブジェクトは、コンポーネントの &lt;code&gt;addItemListener&lt;/code&gt; メソッドを使用してコンポーネントに登録されます。アイテム選択イベントが発生すると、リスナーオブジェクトの &lt;code&gt;itemStateChanged&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="718d4e2886454c0fd765c4d41fb491716a8ae738" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving keyboard events (keystrokes).</source>
          <target state="translated">キーボードイベント(キーストローク)を受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="08c5d49fb62e2c9e7c054a96269a5256f34bd4de" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving keyboard events (keystrokes). The class that is interested in processing a keyboard event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;KeyAdapter&lt;/code&gt; class (overriding only the methods of interest).</source>
          <target state="translated">キーボードイベント（キーストローク）を受信するためのリスナーインターフェイス。キーボードイベントの処理に関心のあるクラスは、このインターフェイス（およびそれに含まれるすべてのメソッド）を実装するか、抽象 &lt;code&gt;KeyAdapter&lt;/code&gt; クラスを拡張します（対象のメソッドのみをオーバーライドします）。</target>
        </trans-unit>
        <trans-unit id="e90ebf8a4e829b636c445b793a834c1f0dd5a9e2" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving keyboard focus events on a component.</source>
          <target state="translated">コンポーネントのキーボードフォーカスイベントを受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="b4d1ab461fe520253ef0a4700f74c9639e383e0c" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving keyboard focus events on a component. The class that is interested in processing a focus event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;FocusAdapter&lt;/code&gt; class (overriding only the methods of interest). The listener object created from that class is then registered with a component using the component's &lt;code&gt;addFocusListener&lt;/code&gt; method. When the component gains or loses the keyboard focus, the relevant method in the listener object is invoked, and the &lt;code&gt;FocusEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">コンポーネントのキーボードフォーカスイベントを受信するためのリスナーインターフェイス。フォーカスイベントの処理に関心のあるクラスは、このインターフェイス（およびそれに含まれるすべてのメソッド）を実装するか、抽象 &lt;code&gt;FocusAdapter&lt;/code&gt; クラスを拡張します（対象のメソッドのみをオーバーライドします）。そのクラスから作成されたリスナーオブジェクトは、コンポーネントの &lt;code&gt;addFocusListener&lt;/code&gt; メソッドを使用してコンポーネントに登録されます。コンポーネントがキーボードフォーカスを取得または喪失すると、リスナーオブジェクトの関連するメソッドが呼び出され、 &lt;code&gt;FocusEvent&lt;/code&gt; がコンポーネントに渡されます。</target>
        </trans-unit>
        <trans-unit id="42d8d00c4b844423914d02e6030ad08ee6922952" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving mouse motion events on a component.</source>
          <target state="translated">コンポーネントのマウスモーションイベントを受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="f2008feb0b751d961f85da91749d357984c1699d" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving mouse motion events on a component. (For clicks and other mouse events, use the &lt;code&gt;MouseListener&lt;/code&gt;.)</source>
          <target state="translated">コンポーネントでマウスモーションイベントを受信するためのリスナーインターフェイス。（クリックやその他のマウスイベントには、 &lt;code&gt;MouseListener&lt;/code&gt; を使用します。）</target>
        </trans-unit>
        <trans-unit id="0cb541b4370e67f6c2ae53e37637e7778682d265" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving mouse wheel events on a component.</source>
          <target state="translated">コンポーネントのマウスホイールイベントを受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="967e419e81c0bedffb9b7df254e23a6edfef07f9" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving mouse wheel events on a component. (For clicks and other mouse events, use the &lt;code&gt;MouseListener&lt;/code&gt;. For mouse movement and drags, use the &lt;code&gt;MouseMotionListener&lt;/code&gt;.)</source>
          <target state="translated">コンポーネントでマウスホイールイベントを受信するためのリスナーインターフェイス。（クリックやその他のマウスイベントには、 &lt;code&gt;MouseListener&lt;/code&gt; を使用します。マウスの移動とドラッグには、 &lt;code&gt;MouseMotionListener&lt;/code&gt; を使用します。）</target>
        </trans-unit>
        <trans-unit id="3f5665da8b9abc72812af1cbb517327271212111" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving notification of events dispatched to objects that are instances of Component or MenuComponent or their subclasses.</source>
          <target state="translated">Component、MenuComponent、またはそれらのサブクラスのインスタンスであるオブジェクトにディスパッチされたイベントの通知を受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="7534bf9eee28537cd9998b81c39c60b881f11322" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving notification of events dispatched to objects that are instances of Component or MenuComponent or their subclasses. Unlike the other EventListeners in this package, AWTEventListeners passively observe events being dispatched in the AWT, system-wide. Most applications should never use this class; applications which might use AWTEventListeners include event recorders for automated testing, and facilities such as the Java Accessibility package.</source>
          <target state="translated">Component、MenuComponent、またはそれらのサブクラスのインスタンスであるオブジェクトにディスパッチされたイベントの通知を受け取るためのリスナーインターフェースです。本パッケージの他の EventListeners とは異なり、AWTEventListeners は受動的に AWT でディスパッチされたイベントをシステム全体で観測します。ほとんどのアプリケーションでは、このクラスを使うべきではありません。AWTEventListenersを使う可能性のあるアプリケーションには、自動テスト用のイベントレコーダや、Javaアクセシビリティパッケージのような機能があります。</target>
        </trans-unit>
        <trans-unit id="4323395a69ffa98d3d07fcdd4649a11a22402953" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving text events.</source>
          <target state="translated">テキストイベントを受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="938b53fbd4386e3cae1e98bf9f82640c36945784" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving text events. The class that is interested in processing a text event implements this interface. The object created with that class is then registered with a component using the component's &lt;code&gt;addTextListener&lt;/code&gt; method. When the component's text changes, the listener object's &lt;code&gt;textValueChanged&lt;/code&gt; method is invoked.</source>
          <target state="translated">テキストイベントを受信するためのリスナーインターフェイス。テキストイベントの処理に関心のあるクラスは、このインターフェイスを実装します。そのクラスで作成されたオブジェクトは、コンポーネントの &lt;code&gt;addTextListener&lt;/code&gt; メソッドを使用してコンポーネントに登録されます。コンポーネントのテキストが変更されると、リスナーオブジェクトの &lt;code&gt;textValueChanged&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="930458e2872f62959a7709377c9a5b8539f81548" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving window events.</source>
          <target state="translated">ウィンドウイベントを受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="046ae6aeb700a9000b9edffea84c976746d2574f" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving window events. The class that is interested in processing a window event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;WindowAdapter&lt;/code&gt; class (overriding only the methods of interest). The listener object created from that class is then registered with a Window using the window's &lt;code&gt;addWindowListener&lt;/code&gt; method. When the window's status changes by virtue of being opened, closed, activated or deactivated, iconified or deiconified, the relevant method in the listener object is invoked, and the &lt;code&gt;WindowEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">ウィンドウイベントを受信するためのリスナーインターフェイス。ウィンドウイベントの処理に関心のあるクラスは、このインターフェイス（およびそれに含まれるすべてのメソッド）を実装するか、抽象 &lt;code&gt;WindowAdapter&lt;/code&gt; クラスを拡張します（対象のメソッドのみをオーバーライドします）。そのクラスから作成されたリスナーオブジェクトは、ウィンドウの &lt;code&gt;addWindowListener&lt;/code&gt; メソッドを使用してWindowに登録されます。ウィンドウのステータスが、開かれた、閉じられた、アクティブ化または非アクティブ化された、アイコン化または非アイコン化されたために変化すると、リスナーオブジェクトの関連するメソッドが呼び出され、 &lt;code&gt;WindowEvent&lt;/code&gt; がウィンドウに渡されます。</target>
        </trans-unit>
        <trans-unit id="94bd6d305775c68579de461457e8be81bf487d24" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving window state events.</source>
          <target state="translated">ウィンドウの状態イベントを受信するためのリスナーインターフェース。</target>
        </trans-unit>
        <trans-unit id="c3a43493fbe188522b28ce60b8adf822abfbed0a" translate="yes" xml:space="preserve">
          <source>The listener is invoked with privileges that are restricted by the calling context of this method. The order in which the listeners are invoked is unspecified.</source>
          <target state="translated">リスナーは、このメソッドの呼び出しコンテキストによって制限された権限で呼び出されます。リスナーが呼び出される順序は指定されていません。</target>
        </trans-unit>
        <trans-unit id="9400f2b1615e7d08e936f201c493bf222d8d5d3f" translate="yes" xml:space="preserve">
          <source>The listener list.</source>
          <target state="translated">リスナーリスト。</target>
        </trans-unit>
        <trans-unit id="e4590d176c2f3cdb63c4fefc574df69b196589b3" translate="yes" xml:space="preserve">
          <source>The listener method is executed in the same thread as this method. See the &lt;a href=&quot;package-summary#THREADING&quot;&gt;package description&lt;/a&gt; for more information on threading issues.</source>
          <target state="translated">リスナーメソッドは、このメソッドと同じスレッドで実行されます。スレッドの問題の詳細については、&lt;a href=&quot;package-summary#THREADING&quot;&gt;パッケージの説明&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5ed10f8995a36338e91e111a510c1f3b0baf668c" translate="yes" xml:space="preserve">
          <source>The listener object created from that class is then registered with a component using the component's &lt;code&gt;addKeyListener&lt;/code&gt; method. A keyboard event is generated when a key is pressed, released, or typed. The relevant method in the listener object is then invoked, and the &lt;code&gt;KeyEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">そのクラスから作成されたリスナーオブジェクトは、コンポーネントの &lt;code&gt;addKeyListener&lt;/code&gt; メソッドを使用してコンポーネントに登録されます。キーボードイベントは、キーが押されたとき、離されたとき、または入力されたときに生成されます。次に、リスナーオブジェクトの関連するメソッドが呼び出され、 &lt;code&gt;KeyEvent&lt;/code&gt; がそれに渡されます。</target>
        </trans-unit>
        <trans-unit id="21060f18757cd559d669528f219a8bca2d12923f" translate="yes" xml:space="preserve">
          <source>The listener object created from that class is then registered with a component using the component's &lt;code&gt;addMouseListener&lt;/code&gt; method. A mouse event is generated when the mouse is pressed, released clicked (pressed and released). A mouse event is also generated when the mouse cursor enters or leaves a component. When a mouse event occurs, the relevant method in the listener object is invoked, and the &lt;code&gt;MouseEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">そのクラスから作成されたリスナーオブジェクトは、コンポーネントの &lt;code&gt;addMouseListener&lt;/code&gt; メソッドを使用してコンポーネントに登録されます。マウスイベントは、マウスが押されたとき、離されたとき（押されたとき、離されたとき）に生成されます。マウスカーソルがコンポーネントに出入りするときにも、マウスイベントが生成されます。マウスイベントが発生すると、リスナーオブジェクトの関連するメソッドが呼び出され、 &lt;code&gt;MouseEvent&lt;/code&gt; がそれに渡されます。</target>
        </trans-unit>
        <trans-unit id="29f8512d75f316740d807a9f3ce730476b012525" translate="yes" xml:space="preserve">
          <source>The listener object created from that class is then registered with a component using the component's &lt;code&gt;addMouseMotionListener&lt;/code&gt; method. A mouse motion event is generated when the mouse is moved or dragged. (Many such events will be generated). When a mouse motion event occurs, the relevant method in the listener object is invoked, and the &lt;code&gt;MouseEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">そのクラスから作成されたリスナーオブジェクトは、コンポーネントの &lt;code&gt;addMouseMotionListener&lt;/code&gt; メソッドを使用してコンポーネントに登録されます。マウスを移動またはドラッグすると、マウスモーションイベントが生成されます。（そのようなイベントの多くが生成されます）。マウスモーションイベントが発生すると、リスナーオブジェクトの関連するメソッドが呼び出され、 &lt;code&gt;MouseEvent&lt;/code&gt; がそれに渡されます。</target>
        </trans-unit>
        <trans-unit id="7bde3a9f8c2f35edc65df4054ae9cced53dc0f55" translate="yes" xml:space="preserve">
          <source>The listener object created from that class is then registered with a component using the component's &lt;code&gt;addMouseWheelListener&lt;/code&gt; method. A mouse wheel event is generated when the mouse wheel is rotated. When a mouse wheel event occurs, that object's &lt;code&gt;mouseWheelMoved&lt;/code&gt; method is invoked.</source>
          <target state="translated">そのクラスから作成されたリスナーオブジェクトは、コンポーネントの &lt;code&gt;addMouseWheelListener&lt;/code&gt; メソッドを使用してコンポーネントに登録されます。マウスホイールが回転すると、マウスホイールイベントが生成されます。マウスホイールイベントが発生すると、そのオブジェクトの &lt;code&gt;mouseWheelMoved&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8462433b24f6ee1894e3c488f73375914de70411" translate="yes" xml:space="preserve">
          <source>The listener object created from that class is then registered with a window using the &lt;code&gt;Window&lt;/code&gt;'s &lt;code&gt;addWindowStateListener&lt;/code&gt; method. When the window's state changes by virtue of being iconified, maximized etc., the &lt;code&gt;windowStateChanged&lt;/code&gt; method in the listener object is invoked, and the &lt;code&gt;WindowEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">そのクラスから作成されたリスナーオブジェクトは、 &lt;code&gt;Window&lt;/code&gt; の &lt;code&gt;addWindowStateListener&lt;/code&gt; メソッドを使用してウィンドウに登録されます。アイコン化や最大化などによってウィンドウの状態が変化すると、リスナーオブジェクトの &lt;code&gt;windowStateChanged&lt;/code&gt; メソッドが呼び出され、 &lt;code&gt;WindowEvent&lt;/code&gt; が渡されます。</target>
        </trans-unit>
        <trans-unit id="62e7843c514bbb78ca4f4720402ec2ddbbae0aa7" translate="yes" xml:space="preserve">
          <source>The listener object that receives notifications is the one that is registered with the given name at the time this method is called. Even if it is subsequently unregistered, it will continue to receive notifications.</source>
          <target state="translated">通知を受け取るリスナー・オブジェクトは、このメソッドが呼び出された時点で指定された名前で登録されているものです。その後登録が解除された場合でも、通知を受信し続けます。</target>
        </trans-unit>
        <trans-unit id="f9a383f1ca2012ed7089a225fb67552330b9a6d7" translate="yes" xml:space="preserve">
          <source>The listener that's notified when a lists selection value changes.</source>
          <target state="translated">リストの選択値が変更されたときに通知されるリスナーです。</target>
        </trans-unit>
        <trans-unit id="3c03fc456754958e1ca2af69310e7c90cc61d1de" translate="yes" xml:space="preserve">
          <source>The listener that's notified when a tree expands or collapses a node.</source>
          <target state="translated">ツリーがノードを展開したり、折りたたまれたりしたときに通知されるリスナーです。</target>
        </trans-unit>
        <trans-unit id="e9dee44b0182c8c0b0a0c8f9892dc7638ded761c" translate="yes" xml:space="preserve">
          <source>The listener that's notified when a tree expands or collapses a node. For further documentation and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;How to Write a Tree Expansion Listener&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">ツリーがノードを展開または折りたたむときに通知されるリスナー。詳細なドキュメントと例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションにある&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;ツリー拡張リスナーの作成方法」を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d762ba2d794493894963a774297af06660359b59" translate="yes" xml:space="preserve">
          <source>The listener that's notified when a tree expands or collapses a node. For further information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;How to Write a Tree-Will-Expand Listener&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">ツリーがノードを展開または折りたたむときに通知されるリスナー。詳細と例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションにある&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;Tree-Will-Expandリスナーを作成する方法」を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="721b231dea75a2b4cc1ad5ba9849ccb3290dc873" translate="yes" xml:space="preserve">
          <source>The listener that's notified when the selection in a TreeSelectionModel changes.</source>
          <target state="translated">TreeSelectionModel の選択範囲が変更されたときに通知されるリスナー。</target>
        </trans-unit>
        <trans-unit id="439ef69a7ffa5c27f6bf33edf46a994c872d72ee" translate="yes" xml:space="preserve">
          <source>The listener that's notified when the selection in a TreeSelectionModel changes. For more information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeselectionlistener.html&quot;&gt;How to Write a Tree Selection Listener&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">TreeSelectionModelの選択が変更されたときに通知されるリスナー。詳細と例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションにある&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeselectionlistener.html&quot;&gt;ツリー選択リスナーの作成方法」を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="32532a060b2fbfa14ccb1f188acdf277c1e917e2" translate="yes" xml:space="preserve">
          <source>The listener will be notified whenever an event occurs on this &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">この &lt;code&gt;RowSet&lt;/code&gt; オブジェクトでイベントが発生するたびに、リスナーに通知されます。</target>
        </trans-unit>
        <trans-unit id="5a499cf5fe19789e705f2938d0b79e35a4290dd2" translate="yes" xml:space="preserve">
          <source>The listeners waiting for model changes.</source>
          <target state="translated">モデルチェンジを待つリスナーたち。</target>
        </trans-unit>
        <trans-unit id="58ed8ea8bc03ea144ba1b908e1725a3240f27929" translate="yes" xml:space="preserve">
          <source>The local date time and first combined to form a local date-time. The local date-time is then resolved to a single instant on the time-line. This is achieved by finding a valid offset from UTC/Greenwich for the local date-time as defined by the &lt;a href=&quot;zone/zonerules&quot;&gt;&lt;code&gt;rules&lt;/code&gt;&lt;/a&gt; of the zone ID.</source>
          <target state="translated">ローカル日付時刻。最初に結合されてローカル日付時刻を形成します。ローカルの日時は、タイムライン上の単一の瞬間に解決されます。これは、ゾーンIDの&lt;a href=&quot;zone/zonerules&quot;&gt; &lt;code&gt;rules&lt;/code&gt; &lt;/a&gt;で定義されているローカル日時のUTC /グリニッジからの有効なオフセットを見つけることによって実現されます。</target>
        </trans-unit>
        <trans-unit id="cd77d03e50afe46d82e00a8893f50de031896408" translate="yes" xml:space="preserve">
          <source>The local date-time is expressed in terms of the UTC offset.</source>
          <target state="translated">ローカルの日付時刻は、UTC オフセットで表されます。</target>
        </trans-unit>
        <trans-unit id="062cd543edcf93d28b39a205798c522e0df4cbd0" translate="yes" xml:space="preserve">
          <source>The local date-time is expressed in terms of the standard offset.</source>
          <target state="translated">ローカルの日付時刻は、標準オフセットで表されます。</target>
        </trans-unit>
        <trans-unit id="43473430726ae9afe2869644c4fa1a6cc3eb2c73" translate="yes" xml:space="preserve">
          <source>The local date-time is expressed in terms of the wall offset.</source>
          <target state="translated">ローカルの日付時間は、壁のオフセットで表されます。</target>
        </trans-unit>
        <trans-unit id="9ba325c8ca4eea5edc4128597b124ea80adfafce" translate="yes" xml:space="preserve">
          <source>The local date-time is resolved to a single instant on the time-line. This is achieved by finding a valid offset from UTC/Greenwich for the local date-time as defined by the &lt;a href=&quot;../zone/zonerules&quot;&gt;&lt;code&gt;rules&lt;/code&gt;&lt;/a&gt; of the zone ID.</source>
          <target state="translated">ローカルの日時は、タイムライン上の単一の瞬間に解決されます。これは、ゾーンIDの&lt;a href=&quot;../zone/zonerules&quot;&gt; &lt;code&gt;rules&lt;/code&gt; &lt;/a&gt;で定義されているローカル日時のUTC /グリニッジからの有効なオフセットを見つけることによって実現されます。</target>
        </trans-unit>
        <trans-unit id="dc0d2dd18ffa81c5846139cec04f27fc21a2f918" translate="yes" xml:space="preserve">
          <source>The local date-time is resolved to a single instant on the time-line. This is achieved by finding a valid offset from UTC/Greenwich for the local date-time as defined by the &lt;a href=&quot;zone/zonerules&quot;&gt;&lt;code&gt;rules&lt;/code&gt;&lt;/a&gt; of the zone ID.</source>
          <target state="translated">ローカルの日時は、タイムライン上の単一の瞬間に解決されます。これは、ゾーンIDの&lt;a href=&quot;zone/zonerules&quot;&gt; &lt;code&gt;rules&lt;/code&gt; &lt;/a&gt;で定義されているローカル日時のUTC /グリニッジからの有効なオフセットを見つけることによって実現されます。</target>
        </trans-unit>
        <trans-unit id="67bc6f31d72edc1ff822de3fec3708bde5aa89ea" translate="yes" xml:space="preserve">
          <source>The local name (without prefix).</source>
          <target state="translated">ローカル名(接頭辞なし)。</target>
        </trans-unit>
        <trans-unit id="8e75eca195c8a616553ea521a5e740acb05a3b17" translate="yes" xml:space="preserve">
          <source>The local name, or the empty string if Namespace processing is not being performed, or null if the index is out of range.</source>
          <target state="translated">ローカル名、または名前空間処理が実行されていない場合は空文字列、インデックスが範囲外の場合はnull。</target>
        </trans-unit>
        <trans-unit id="f6ea3d24c46a396fa3d936ab0cdc9e719b6a5045" translate="yes" xml:space="preserve">
          <source>The local part is not validated as a &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt; as specified in &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="translated">ローカル部分は&lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/&quot;&gt;、XMLの名前空間で&lt;/a&gt;指定されている&lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt;として検証されません。</target>
        </trans-unit>
        <trans-unit id="01c1227cbd2c58d3edc580370fa60fb57d2529eb" translate="yes" xml:space="preserve">
          <source>The local port number to which this socket is connected.</source>
          <target state="translated">このソケットが接続されているローカルポート番号。</target>
        </trans-unit>
        <trans-unit id="d5c20c55cb87df99a369c70cbea570fb23af8461" translate="yes" xml:space="preserve">
          <source>The local port number.</source>
          <target state="translated">ローカルポート番号。</target>
        </trans-unit>
        <trans-unit id="164d4cf144a6005f646e68ccb7201e68e4df1175" translate="yes" xml:space="preserve">
          <source>The local time can be converted to an instant using the standard offset, the wall offset or UTC.</source>
          <target state="translated">現地時間は、標準オフセット、ウォールオフセット、UTCを使用して瞬時に変換することができます。</target>
        </trans-unit>
        <trans-unit id="930043567de1d9c36d9065d240bbac838f2c72a8" translate="yes" xml:space="preserve">
          <source>The locale 'en_US' will always be present.</source>
          <target state="translated">ロケール 'en_US' は常に存在します。</target>
        </trans-unit>
        <trans-unit id="69fa2a5dc2599c2aef839ef3d763ad4fe4202dc1" translate="yes" xml:space="preserve">
          <source>The locale always used is the one returned by &lt;a href=&quot;../util/locale#getDefault()&quot;&gt;&lt;code&gt;Locale.getDefault()&lt;/code&gt;&lt;/a&gt;, regardless of any previous invocations of other formatting methods on this object.</source>
          <target state="translated">常に使用されるロケールは、このオブジェクトで他のフォーマットメソッドが以前に呼び出されたかどうかに関係なく、&lt;a href=&quot;../util/locale#getDefault()&quot;&gt; &lt;code&gt;Locale.getDefault()&lt;/code&gt; &lt;/a&gt;によって返されるロケールです。</target>
        </trans-unit>
        <trans-unit id="a3e873afe8c7896eaad724e6fd9f0691de5d7994" translate="yes" xml:space="preserve">
          <source>The locale always used is the one returned by &lt;a href=&quot;../util/locale#getDefault(java.util.Locale.Category)&quot;&gt;&lt;code&gt;Locale.getDefault(Locale.Category)&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;../util/locale.category#FORMAT&quot;&gt;&lt;code&gt;FORMAT&lt;/code&gt;&lt;/a&gt; category specified, regardless of any previous invocations of other formatting methods on this object.</source>
          <target state="translated">常に使用されるロケールによって返されるものである&lt;a href=&quot;../util/locale#getDefault(java.util.Locale.Category)&quot;&gt; &lt;code&gt;Locale.getDefault(Locale.Category)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../util/locale.category#FORMAT&quot;&gt; &lt;code&gt;FORMAT&lt;/code&gt; の&lt;/a&gt;カテゴリに関係なく、このオブジェクトの他のフォーマットのいずれかの方法以前の呼び出しの、指定されました。</target>
        </trans-unit>
        <trans-unit id="dc211fe28f69063a85ba24c9840522a2af09d7b2" translate="yes" xml:space="preserve">
          <source>The locale always used is the one returned by &lt;a href=&quot;../util/locale#getDefault(java.util.Locale.Category)&quot;&gt;&lt;code&gt;Locale.getDefault(Locale.Category)&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;../util/locale.category#FORMAT&quot;&gt;&lt;code&gt;FORMAT&lt;/code&gt;&lt;/a&gt; category specified.</source>
          <target state="translated">常に使用されるロケールは、によって返さ一つです&lt;a href=&quot;../util/locale#getDefault(java.util.Locale.Category)&quot;&gt; &lt;code&gt;Locale.getDefault(Locale.Category)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../util/locale.category#FORMAT&quot;&gt; &lt;code&gt;FORMAT&lt;/code&gt; を&lt;/a&gt;指定したカテゴリ。</target>
        </trans-unit>
        <trans-unit id="6b35dc1cb6dc43f6b2f67f74ddcd4a6124b64160" translate="yes" xml:space="preserve">
          <source>The locale always used is the one returned by &lt;a href=&quot;../util/locale#getDefault--&quot;&gt;&lt;code&gt;Locale.getDefault()&lt;/code&gt;&lt;/a&gt;, regardless of any previous invocations of other formatting methods on this object.</source>
          <target state="translated">常に使用されるロケールは、このオブジェクトの他のフォーマットメソッドの以前の呼び出しに関係なく、&lt;a href=&quot;../util/locale#getDefault--&quot;&gt; &lt;code&gt;Locale.getDefault()&lt;/code&gt; &lt;/a&gt;によって返されるロケールです。</target>
        </trans-unit>
        <trans-unit id="e47fa25a26b7655787b36c2d11262ab526454c0c" translate="yes" xml:space="preserve">
          <source>The locale always used is the one returned by &lt;a href=&quot;../util/locale#getDefault--&quot;&gt;&lt;code&gt;Locale.getDefault()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">常に使用されるロケールは、&lt;a href=&quot;../util/locale#getDefault--&quot;&gt; &lt;code&gt;Locale.getDefault()&lt;/code&gt; &lt;/a&gt;によって返されるものです。</target>
        </trans-unit>
        <trans-unit id="3d7e04fa09d3af3067039bd45965a73087608eb3" translate="yes" xml:space="preserve">
          <source>The locale independent name of the state.</source>
          <target state="translated">州のロケール独立名。</target>
        </trans-unit>
        <trans-unit id="73e7d6163fd1d2f45cd9898119ab92faa657b7c8" translate="yes" xml:space="preserve">
          <source>The locale independent name of the state. This is a programmatic name that is not intended to be read by humans.</source>
          <target state="translated">ロケールに依存しない州の名前。これはプログラム上の名前であり、人間が読むことを意図したものではありません。</target>
        </trans-unit>
        <trans-unit id="f1e6d2a7a476bbe469e93757125a537c9589e962" translate="yes" xml:space="preserve">
          <source>The locale is determined from the formatter. The formatter returned directly by this method will use the &lt;a href=&quot;../../util/locale#getDefault()&quot;&gt;&lt;code&gt;default FORMAT locale&lt;/code&gt;&lt;/a&gt;. The locale can be controlled using &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">ロケールはフォーマッタから決定されます。このメソッドによって直接返されるフォーマッターは、&lt;a href=&quot;../../util/locale#getDefault()&quot;&gt; &lt;code&gt;default FORMAT locale&lt;/code&gt; &lt;/a&gt;を使用します。ロケールは、このメソッドの結果に対して&lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt;を使用して制御できます。</target>
        </trans-unit>
        <trans-unit id="782cd591ae328adc75282e93e04de6da0a8ed6cd" translate="yes" xml:space="preserve">
          <source>The locale is determined from the formatter. The formatter returned directly by this method will use the &lt;a href=&quot;../../util/locale#getDefault(java.util.Locale.Category)&quot;&gt;&lt;code&gt;default FORMAT locale&lt;/code&gt;&lt;/a&gt;. The locale can be controlled using &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">ロケールはフォーマッタから決定されます。このメソッドによって直接返されるフォーマッターは、&lt;a href=&quot;../../util/locale#getDefault(java.util.Locale.Category)&quot;&gt; &lt;code&gt;default FORMAT locale&lt;/code&gt; &lt;/a&gt;を使用します。ロケールは、このメソッドの結果に対して&lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt;を使用して制御できます。</target>
        </trans-unit>
        <trans-unit id="366a0be68a17c43905b7bd782f1e30699df8f11a" translate="yes" xml:space="preserve">
          <source>The locale is determined from the formatter. The formatter returned directly by this method will use the &lt;a href=&quot;../../util/locale#getDefault--&quot;&gt;&lt;code&gt;default FORMAT locale&lt;/code&gt;&lt;/a&gt;. The locale can be controlled using &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">ロケールはフォーマッターから決定されます。このメソッドによって直接返されるフォーマッターは、&lt;a href=&quot;../../util/locale#getDefault--&quot;&gt; &lt;code&gt;default FORMAT locale&lt;/code&gt; &lt;/a&gt;を使用します。ロケールは、このメソッドの結果に対して&lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt;を使用して制御できます。</target>
        </trans-unit>
        <trans-unit id="65991f7ad7454909e91fa953adc69eb74b95bfbb" translate="yes" xml:space="preserve">
          <source>The locale is determined from the formatter. The formatter returned directly by this method will use the &lt;a href=&quot;../../util/locale#getDefault-java.util.Locale.Category-&quot;&gt;&lt;code&gt;default FORMAT locale&lt;/code&gt;&lt;/a&gt;. The locale can be controlled using &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">ロケールはフォーマッターから決定されます。このメソッドによって直接返されるフォーマッターは、&lt;a href=&quot;../../util/locale#getDefault-java.util.Locale.Category-&quot;&gt; &lt;code&gt;default FORMAT locale&lt;/code&gt; &lt;/a&gt;を使用します。ロケールは、このメソッドの結果に対して&lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt;を使用して制御できます。</target>
        </trans-unit>
        <trans-unit id="bc20fbb44a9773c78c103dd5fcdf6058fe0d0f4b" translate="yes" xml:space="preserve">
          <source>The locale is stored as passed in, without further processing. If the locale has &lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt; Unicode extensions&lt;/a&gt;, they may be used later in text processing. To set the chronology, time-zone and decimal style from unicode extensions, see &lt;a href=&quot;#localizedBy(java.util.Locale)&quot;&gt;&lt;code&gt;localizedBy()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ロケールは、それ以上処理されることなく、渡されたとおりに保存されます。ロケールに&lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt;Unicode拡張子&lt;/a&gt;がある場合、それらは後でテキスト処理で使用される可能性があります。Unicode拡張機能から年表、タイムゾーン、および10進数のスタイルを設定するには、&lt;a href=&quot;#localizedBy(java.util.Locale)&quot;&gt; &lt;code&gt;localizedBy()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d27a035926e24202e324c8dbaceea94c517d56fb" translate="yes" xml:space="preserve">
          <source>The locale that best represents the language tag.</source>
          <target state="translated">言語タグを最もよく表すロケール。</target>
        </trans-unit>
        <trans-unit id="0399622d8514a7a2a23bbbb6e5f585ab4dd83b37" translate="yes" xml:space="preserve">
          <source>The locale used is the &lt;a href=&quot;locale#getDefault(java.util.Locale.Category)&quot;&gt;default locale&lt;/a&gt; for &lt;a href=&quot;locale.category#FORMAT&quot;&gt;formatting&lt;/a&gt; for this instance of the Java virtual machine.</source>
          <target state="translated">使用される&lt;a href=&quot;locale#getDefault(java.util.Locale.Category)&quot;&gt;ロケール&lt;/a&gt;は、Java仮想マシンのこのインスタンスの&lt;a href=&quot;locale.category#FORMAT&quot;&gt;フォーマット&lt;/a&gt;のデフォルトロケールです。</target>
        </trans-unit>
        <trans-unit id="ad8955176109149292d2490f96896813a8b15f84" translate="yes" xml:space="preserve">
          <source>The locale used is the &lt;a href=&quot;locale#getDefault-java.util.Locale.Category-&quot;&gt;default locale&lt;/a&gt; for &lt;a href=&quot;locale.category#FORMAT&quot;&gt;formatting&lt;/a&gt; for this instance of the Java virtual machine.</source>
          <target state="translated">使用される&lt;a href=&quot;locale#getDefault-java.util.Locale.Category-&quot;&gt;ロケール&lt;/a&gt;は、Java仮想マシンのこのインスタンスの&lt;a href=&quot;locale.category#FORMAT&quot;&gt;フォーマット&lt;/a&gt;用のデフォルトのロケールです。</target>
        </trans-unit>
        <trans-unit id="e6a785aadaa78a38e75567a0f703ed28d6b3f7e0" translate="yes" xml:space="preserve">
          <source>The locale-independent names of the parameters. May return a null array if the parameter names aren't known.</source>
          <target state="translated">ロケールに依存しないパラメータ名。パラメータ名がわからない場合は、NULL配列を返すことがあります。</target>
        </trans-unit>
        <trans-unit id="e5bd420f4c65808d7d95a170751fbed05770db22" translate="yes" xml:space="preserve">
          <source>The localized description of this throwable.</source>
          <target state="translated">このスローアブルのローカライズされた記述。</target>
        </trans-unit>
        <trans-unit id="f6a467b908d5d92876f19e97efb8504a392a6111" translate="yes" xml:space="preserve">
          <source>The localized display name for the property/method/event. This defaults to the same as its programmatic name from getName.</source>
          <target state="translated">プロパティ/メソッド/イベントのローカライズされた表示名。デフォルトは getName からのプログラム名と同じです。</target>
        </trans-unit>
        <trans-unit id="41938becbbbdbf5e0fb9f5e208b9fb0515a70942" translate="yes" xml:space="preserve">
          <source>The localized formats are defined in terms of the following parameters, which for a particular locale are taken from that locale's &lt;a href=&quot;../text/decimalformat&quot;&gt;&lt;code&gt;DecimalFormat&lt;/code&gt;&lt;/a&gt; object, &lt;code&gt;df&lt;/code&gt;, and its and &lt;a href=&quot;../text/decimalformatsymbols&quot;&gt;&lt;code&gt;DecimalFormatSymbols&lt;/code&gt;&lt;/a&gt; object, &lt;code&gt;dfs&lt;/code&gt;.</source>
          <target state="translated">ローカライズされたフォーマットは、特定のロケールの場合、そのロケールの&lt;a href=&quot;../text/decimalformat&quot;&gt; &lt;code&gt;DecimalFormat&lt;/code&gt; &lt;/a&gt;オブジェクト &lt;code&gt;df&lt;/code&gt; と、その&lt;a href=&quot;../text/decimalformatsymbols&quot;&gt; &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; &lt;/a&gt;オブジェクト &lt;code&gt;dfs&lt;/code&gt; から取得される次のパラメーターで定義されます。</target>
        </trans-unit>
        <trans-unit id="0cf9e4f2c1f022d7c96c2bda99e0a922ee3b6ae4" translate="yes" xml:space="preserve">
          <source>The location is represented as a 0-thickness caret, that is, it has 0 width if the text is drawn horizontally, and 0 height if the text is drawn vertically. Other text orientations need to be mapped to horizontal or vertical orientation. The rectangle uses absolute screen coordinates.</source>
          <target state="translated">この位置は 0 厚さのキャレットとして表現され、つまり、テキストが水平方向に描かれている場合は幅が 0、垂直方向に描かれている場合は高さが 0 になります。他のテキストの向きは、水平または垂直の向きにマッピングする必要があります。矩形は画面の絶対座標を使用します。</target>
        </trans-unit>
        <trans-unit id="724bef0fd2ea9af49e65ae3c0f10e235a11eb4f9" translate="yes" xml:space="preserve">
          <source>The location of the document or &lt;code&gt;null&lt;/code&gt; if undefined or if the &lt;code&gt;Document&lt;/code&gt; was created using &lt;code&gt;DOMImplementation.createDocument&lt;/code&gt;.</source>
          <target state="translated">ドキュメントの場所。未定義の場合、または &lt;code&gt;Document&lt;/code&gt; が &lt;code&gt;DOMImplementation.createDocument&lt;/code&gt; を使用して作成された場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c7fbd8183c454de5363e0e106d5247fd0e66513" translate="yes" xml:space="preserve">
          <source>The location of the document or &lt;code&gt;null&lt;/code&gt; if undefined or if the &lt;code&gt;Document&lt;/code&gt; was created using &lt;code&gt;DOMImplementation.createDocument&lt;/code&gt;. No lexical checking is performed when setting this attribute; this could result in a &lt;code&gt;null&lt;/code&gt; value returned when using &lt;code&gt;Node.baseURI&lt;/code&gt; .</source>
          <target state="translated">ドキュメントの場所。未定義の場合、または &lt;code&gt;Document&lt;/code&gt; が &lt;code&gt;DOMImplementation.createDocument&lt;/code&gt; を使用して作成された場合は &lt;code&gt;null&lt;/code&gt; 。この属性を設定する場合、字句チェックは実行されません。これにより、 &lt;code&gt;Node.baseURI&lt;/code&gt; を使用するときに &lt;code&gt;null&lt;/code&gt; 値が返される可能性があります。</target>
        </trans-unit>
        <trans-unit id="e62a857411e0950715cc33c61e291929b293cbd3" translate="yes" xml:space="preserve">
          <source>The location of the error.</source>
          <target state="translated">エラーが発生した場所です。</target>
        </trans-unit>
        <trans-unit id="43ca4ec04cf16a4dddcecc08b9428340938a4429" translate="yes" xml:space="preserve">
          <source>The location of the last offset calculation that is valid.</source>
          <target state="translated">有効な最後のオフセット計算の場所。</target>
        </trans-unit>
        <trans-unit id="c5c074507fcf47cdfff3a6cb060d1c4bb23a59b6" translate="yes" xml:space="preserve">
          <source>The location or an empty &lt;code&gt;Optional&lt;/code&gt; if not known</source>
          <target state="translated">場所または空の &lt;code&gt;Optional&lt;/code&gt; 不明な場合）</target>
        </trans-unit>
        <trans-unit id="3bc5f7897b9b13130f88e8ac225afff134b290bc" translate="yes" xml:space="preserve">
          <source>The location string</source>
          <target state="translated">場所の文字列</target>
        </trans-unit>
        <trans-unit id="d43499cca4d0c0e95f567286ba7e24dead4afe12" translate="yes" xml:space="preserve">
          <source>The locator allows the application to determine the end position of any document-related event, even if the parser is not reporting an error. Typically, the application will use this information for reporting its own errors (such as character content that does not match an application's business rules). The information returned by the locator is probably not sufficient for use with a search engine.</source>
          <target state="translated">ロケータは、パーサがエラーを報告していなくても、アプリケーションがドキュメント関連のイベントの終了位置を決定することを可能にします。通常、アプリケーションはこの情報を使用して、独自のエラー(アプリケーションのビジネスルールと一致しない文字コンテンツなど)を報告します。ロケータが返す情報は、おそらく検索エンジンで使用するには十分ではありません。</target>
        </trans-unit>
        <trans-unit id="6f1ed4b2d7d8226fd944d0cbe6eea2ec95a9f2b3" translate="yes" xml:space="preserve">
          <source>The lock associated with this &lt;code&gt;Condition&lt;/code&gt; is atomically released and the current thread becomes disabled for thread scheduling purposes and lies dormant until &lt;em&gt;one&lt;/em&gt; of four things happens:</source>
          <target state="translated">この &lt;code&gt;Condition&lt;/code&gt; 関連付けられたロックはアトミックに解放され、現在のスレッドはスレッドスケジューリングの目的で無効になり、次の4 &lt;em&gt;つのいずれ&lt;/em&gt;かが発生するまで待機します。</target>
        </trans-unit>
        <trans-unit id="61d711789cff8fa58268433d15e08dadb98f0892" translate="yes" xml:space="preserve">
          <source>The lock associated with this condition is atomically released and the current thread becomes disabled for thread scheduling purposes and lies dormant until &lt;em&gt;one&lt;/em&gt; of five things happens:</source>
          <target state="translated">この条件に関連付けられたロックはアトミックに解放され、現在のスレッドはスレッドスケジューリングの目的で無効になり、次の5 &lt;em&gt;つのいずれ&lt;/em&gt;かが発生するまで待機します。</target>
        </trans-unit>
        <trans-unit id="65da01b12ed06c1129194ab04ecdfefe3305ba72" translate="yes" xml:space="preserve">
          <source>The lock associated with this condition is atomically released and the current thread becomes disabled for thread scheduling purposes and lies dormant until &lt;em&gt;one&lt;/em&gt; of three things happens:</source>
          <target state="translated">この条件に関連付けられたロックはアトミックに解放され、現在のスレッドはスレッドスケジューリングの目的で無効になり、次の3 &lt;em&gt;つのいずれ&lt;/em&gt;かが発生するまで待機します。</target>
        </trans-unit>
        <trans-unit id="a3f9b6f8110f68ff501a635d948cf5536975a242" translate="yes" xml:space="preserve">
          <source>The lock is acquired by the current thread; or</source>
          <target state="translated">ロックは現在のスレッドによって取得されます。</target>
        </trans-unit>
        <trans-unit id="23315cf702ddd4b0be90689a9788330de51e0d4d" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;readwritelock#readLock()&quot;&gt;&lt;code&gt;ReadWriteLock.readLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;readwritelock#readLock()&quot;&gt; &lt;code&gt;ReadWriteLock.readLock()&lt;/code&gt; &lt;/a&gt;によって返されるロック。</target>
        </trans-unit>
        <trans-unit id="56c7affd56a555e9fcf7d1093f497b2b16d518a4" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;readwritelock#writeLock()&quot;&gt;&lt;code&gt;ReadWriteLock.writeLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;readwritelock#writeLock()&quot;&gt; &lt;code&gt;ReadWriteLock.writeLock()&lt;/code&gt; &lt;/a&gt;によって返されるロック。</target>
        </trans-unit>
        <trans-unit id="936446f11735d6f00e64d3dc5894e2b30dc3b6a3" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;reentrantreadwritelock#readLock--&quot;&gt;&lt;code&gt;ReentrantReadWriteLock.readLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;reentrantreadwritelock#readLock--&quot;&gt; &lt;code&gt;ReentrantReadWriteLock.readLock()&lt;/code&gt; &lt;/a&gt;によって返されるロック。</target>
        </trans-unit>
        <trans-unit id="a63fbd323480ae7eac9b087b684a954032e23d63" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;reentrantreadwritelock#readLock--&quot;&gt;&lt;code&gt;readLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;reentrantreadwritelock#readLock--&quot;&gt; &lt;code&gt;readLock()&lt;/code&gt; &lt;/a&gt;メソッドによって返されるロック。</target>
        </trans-unit>
        <trans-unit id="39b8fdb8be94320a454a1547f61b7660e9a57cf7" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;reentrantreadwritelock#writeLock--&quot;&gt;&lt;code&gt;ReentrantReadWriteLock.writeLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;reentrantreadwritelock#writeLock--&quot;&gt; &lt;code&gt;ReentrantReadWriteLock.writeLock()&lt;/code&gt; &lt;/a&gt;によって返されるロック。</target>
        </trans-unit>
        <trans-unit id="905e63fe2eb05904cf02aa94f5b5e717a84245ed" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;reentrantreadwritelock#writeLock--&quot;&gt;&lt;code&gt;writeLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド&lt;a href=&quot;reentrantreadwritelock#writeLock--&quot;&gt; &lt;code&gt;writeLock()&lt;/code&gt; &lt;/a&gt;によって返されるロック。</target>
        </trans-unit>
        <trans-unit id="47ca08ec8ab201e5079422dee8f4a34be221eb71" translate="yes" xml:space="preserve">
          <source>The locks held on a particular file by a single Java virtual machine do not overlap. The &lt;a href=&quot;#overlaps(long,long)&quot;&gt;&lt;code&gt;overlaps&lt;/code&gt;&lt;/a&gt; method may be used to test whether a candidate lock range overlaps an existing lock.</source>
          <target state="translated">単一のJava仮想マシンによって特定のファイルに保持されているロックは重複しません。&lt;a href=&quot;#overlaps(long,long)&quot;&gt; &lt;code&gt;overlaps&lt;/code&gt; &lt;/a&gt;方法は、候補ロック範囲が既存のロックと重なるかどうかを試験するために使用されてもよいです。</target>
        </trans-unit>
        <trans-unit id="45d3fceafada8cb1318b2a1c9ef2a9a359190c9a" translate="yes" xml:space="preserve">
          <source>The locks held on a particular file by a single Java virtual machine do not overlap. The &lt;a href=&quot;filelock#overlaps-long-long-&quot;&gt;&lt;code&gt;overlaps&lt;/code&gt;&lt;/a&gt; method may be used to test whether a candidate lock range overlaps an existing lock.</source>
          <target state="translated">単一のJava仮想マシンによって特定のファイルに保持されているロックは重複しません。&lt;a href=&quot;filelock#overlaps-long-long-&quot;&gt; &lt;code&gt;overlaps&lt;/code&gt; &lt;/a&gt;方法は、候補ロック範囲が既存のロックと重なるかどうかを試験するために使用されてもよいです。</target>
        </trans-unit>
        <trans-unit id="8b536145c701b36ffc6ce15241826909032276e3" translate="yes" xml:space="preserve">
          <source>The log level can be configured based on the properties from the logging configuration file, as described in the description of the LogManager class. However it may also be dynamically changed by calls on the Logger.setLevel method. If a logger's level is changed the change may also affect child loggers, since any child logger that has &lt;code&gt;null&lt;/code&gt; as its level will inherit its effective level from its parent.</source>
          <target state="translated">LogManagerクラスの説明で説明されているように、ログ設定ファイルのプロパティに基づいてログレベルを設定できます。ただし、Logger.setLevelメソッドの呼び出しによって動的に変更されることもあります。ロガーのレベルが変更された場合、レベルとして &lt;code&gt;null&lt;/code&gt; を持つ子ロガーは親から有効レベルを継承するため、変更は子ロガーにも影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="07735f84aee92e88e5622726dcab14478e640923" translate="yes" xml:space="preserve">
          <source>The log writer is a character output stream to which all logging and tracing messages for this data source will be printed. This includes messages printed by the methods of this object, messages printed by methods of other objects manufactured by this object, and so on. Messages printed to a data source specific log writer are not printed to the log writer associated with the &lt;code&gt;java.sql.DriverManager&lt;/code&gt; class. When a &lt;code&gt;DataSource&lt;/code&gt; object is created, the log writer is initially null; in other words, the default is for logging to be disabled.</source>
          <target state="translated">ログライターは、このデータソースのすべてのログメッセージとトレースメッセージが出力される文字出力ストリームです。これには、このオブジェクトのメソッドによって出力されたメッセージ、このオブジェクトによって製造された他のオブジェクトのメソッドによって出力されたメッセージなどが含まれます。データソース固有のログライターに出力されるメッセージは、 &lt;code&gt;java.sql.DriverManager&lt;/code&gt; クラスに関連付けられたログライターには出力されません。ときに &lt;code&gt;DataSource&lt;/code&gt; オブジェクトが作成され、ログライターはnullに初期化されます。つまり、デフォルトではロギングが無効になっています。</target>
        </trans-unit>
        <trans-unit id="5cccadbef627b3bf817508c7a75663e7f418adec" translate="yes" xml:space="preserve">
          <source>The log writer is a character output stream to which all logging and tracing messages for this data source will be printed. This includes messages printed by the methods of this object, messages printed by methods of other objects manufactured by this object, and so on. Messages printed to a data source- specific log writer are not printed to the log writer associated with the &lt;code&gt;java.sql.DriverManager&lt;/code&gt; class. When a &lt;code&gt;DataSource&lt;/code&gt; object is created the log writer is initially null; in other words, the default is for logging to be disabled.</source>
          <target state="translated">ログライターは、このデータソースのすべてのログメッセージとトレースメッセージが出力される文字出力ストリームです。これには、このオブジェクトのメソッドによって出力されたメッセージ、このオブジェクトによって製造された他のオブジェクトのメソッドによって出力されたメッセージなどが含まれます。データソース固有のログライターに出力されるメッセージは、 &lt;code&gt;java.sql.DriverManager&lt;/code&gt; クラスに関連付けられたログライターには出力されません。ときに &lt;code&gt;DataSource&lt;/code&gt; オブジェクトが作成されたログライターはnullに初期化されます。つまり、デフォルトではロギングが無効になっています。</target>
        </trans-unit>
        <trans-unit id="5efe6a79a4cc53f2502e279de30e6e5f2feda9d7" translate="yes" xml:space="preserve">
          <source>The logger will be initially configured with a null Level and with useParentHandlers set to true.</source>
          <target state="translated">ロガーは、最初に NULL レベルと useParentHandlers を true に設定して構成されます。</target>
        </trans-unit>
        <trans-unit id="136797d5f389dccc8697d89b60c4d8a0eba2f6fd" translate="yes" xml:space="preserve">
          <source>The logging methods are grouped in five main categories:</source>
          <target state="translated">伐採方法は大きく分けて5つに分類されます。</target>
        </trans-unit>
        <trans-unit id="641b7e7a10638613ca35f5abccd985aaf6071af7" translate="yes" xml:space="preserve">
          <source>The logging request was made initially to a &lt;code&gt;Logger&lt;/code&gt; object, which initialized the &lt;code&gt;LogRecord&lt;/code&gt; and forwarded it here.</source>
          <target state="translated">ロギング要求は最初に &lt;code&gt;Logger&lt;/code&gt; オブジェクトに対して行われ、Loggerオブジェクトが &lt;code&gt;LogRecord&lt;/code&gt; を初期化してここに転送しました。</target>
        </trans-unit>
        <trans-unit id="1d108ce9ead2995d5648f2a343727b8efa189c0c" translate="yes" xml:space="preserve">
          <source>The logical &lt;code&gt;Connection&lt;/code&gt; is closed by calling &lt;code&gt;Connection.close&lt;/code&gt; prior to returning the &lt;code&gt;PooledConnection&lt;/code&gt; to the cache.</source>
          <target state="translated">&lt;code&gt;PooledConnection&lt;/code&gt; をキャッシュに戻す前に、 &lt;code&gt;Connection.close&lt;/code&gt; を呼び出すことにより、論理 &lt;code&gt;Connection&lt;/code&gt; が閉じられます。</target>
        </trans-unit>
        <trans-unit id="6dad57151ed4626619c50b76ba68fff7c40b5807" translate="yes" xml:space="preserve">
          <source>The logical bounds of the text will be filled using this &lt;code&gt;Paint&lt;/code&gt;, and then the text will be rendered on top of it (but see &lt;a href=&quot;#SWAP_COLORS&quot;&gt;&lt;code&gt;SWAP_COLORS&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">テキストの論理境界はこの &lt;code&gt;Paint&lt;/code&gt; を使用して塗りつぶされ、テキストはその上にレンダリングされます（ただし、&lt;a href=&quot;#SWAP_COLORS&quot;&gt; &lt;code&gt;SWAP_COLORS&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="136e6cda260b4679498d4d36f7be0ae33707be48" translate="yes" xml:space="preserve">
          <source>The logical name of this &lt;code&gt;Font&lt;/code&gt;, as passed to the constructor.</source>
          <target state="translated">コンストラクターに渡される、この &lt;code&gt;Font&lt;/code&gt; の論理名。</target>
        </trans-unit>
        <trans-unit id="4d8db4df86dcda2ace25e40dbb938ffa56000bcb" translate="yes" xml:space="preserve">
          <source>The logical selection ranges are 0-3, 4-6 (ABC, ef) because the visually contiguous text is logically discontiguous. Also note that since the rightmost position on the layout (to the right of 'A') is selected, the selection is extended to the right of the bounds.</source>
          <target state="translated">視覚的に連続するテキストは論理的に不連続なので、論理的な選択範囲は0-3,4-6(ABC,ef)となっています。また、レイアウト上の一番右の位置('A'の右)が選択されているので、選択範囲は境界線の右にまで広がっていることにも注意してください。</target>
        </trans-unit>
        <trans-unit id="c39967c867e0bcc330b56743772ed038a1947efc" translate="yes" xml:space="preserve">
          <source>The logical style choice action identifier The logical style is passed in as an argument</source>
          <target state="translated">論理スタイル選択アクション識別子 論理スタイルは引数として渡されます。</target>
        </trans-unit>
        <trans-unit id="f3195ba410c910cb1453bdf6d15fa282cb473f14" translate="yes" xml:space="preserve">
          <source>The long at the buffer's current position</source>
          <target state="translated">バッファの現在位置でのロング</target>
        </trans-unit>
        <trans-unit id="9b857784a51cb5186a4c310af8fad668265cd2f5" translate="yes" xml:space="preserve">
          <source>The long at the given index</source>
          <target state="translated">指定されたインデックスでのロング</target>
        </trans-unit>
        <trans-unit id="d925d78726502c1517a0719c5c67fa836bb30baf" translate="yes" xml:space="preserve">
          <source>The long buffer is not modified by this method, and no reference to the buffer is retained by the bit set.</source>
          <target state="translated">この方法では、長いバッファは変更されず、ビットがセットされてもバッファへの参照は保持されません。</target>
        </trans-unit>
        <trans-unit id="b26bffcfbc958bd15ecb825f2a9fae2f40f6a817" translate="yes" xml:space="preserve">
          <source>The long value at the buffer's current position</source>
          <target state="translated">バッファの現在位置でのロング値</target>
        </trans-unit>
        <trans-unit id="c79239282ea84b694c2ff3f7994ebbc2e5632bef" translate="yes" xml:space="preserve">
          <source>The long value at the given index</source>
          <target state="translated">指定されたインデックスでの長い値</target>
        </trans-unit>
        <trans-unit id="dfaf557e40de816032daab1d1e5fa1bca6c17fee" translate="yes" xml:space="preserve">
          <source>The longest parameter list (which is necessarily unique) is called the &quot;external parameter list&quot; (&lt;code&gt;(A...)&lt;/code&gt;).</source>
          <target state="translated">最長のパラメータリスト（必然的に一意）は「外部パラメータリスト」（ &lt;code&gt;(A...)&lt;/code&gt; ）と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="1d72b29a13e96aa2ab5bec4f4960d9bf05dd4ca7" translate="yes" xml:space="preserve">
          <source>The longs between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the long at index</source>
          <target state="translated">バッファの現在位置から限界までのロングがある場合は、バッファの先頭にコピーされます。つまり、インデックス</target>
        </trans-unit>
        <trans-unit id="8f97430d73cc9eb412585724172865d7a0204ec4" translate="yes" xml:space="preserve">
          <source>The look and feel can be specified in two distinct ways: by specifying the fully qualified name of the class for the look and feel, or by creating an instance of &lt;code&gt;LookAndFeel&lt;/code&gt; and passing it to &lt;code&gt;setLookAndFeel&lt;/code&gt;. The following example illustrates setting the look and feel to the system look and feel:</source>
          <target state="translated">ルックアンドフィールは、ルックアンドフィールのクラスの完全修飾名を指定する方法と、 &lt;code&gt;LookAndFeel&lt;/code&gt; のインスタンスを作成して &lt;code&gt;setLookAndFeel&lt;/code&gt; に渡す方法の2つの異なる方法で指定できます。次の例は、ルックアンドフィールをシステムのルックアンドフィールに設定する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="a463f1c161b0d4fb031b15ef8115b10141fc9f2d" translate="yes" xml:space="preserve">
          <source>The look and feel delegate for this component.</source>
          <target state="translated">このコンポーネントのルックアンドフィールのデリゲート。</target>
        </trans-unit>
        <trans-unit id="db4d630ff9e9a96eaf54953466e703b389363e92" translate="yes" xml:space="preserve">
          <source>The lookup context here is determined by the &lt;a href=&quot;#lookupClass()&quot;&gt;lookup class&lt;/a&gt; and the &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt;.</source>
          <target state="translated">ここでのルックアップコンテキストは、&lt;a href=&quot;#lookupClass()&quot;&gt;ルックアップクラス&lt;/a&gt;と&lt;a href=&quot;#lookupModes()&quot;&gt;ルックアップモード&lt;/a&gt;によって決定されます。</target>
        </trans-unit>
        <trans-unit id="724d90431dc6c40dfa771623abe64fe926c9582a" translate="yes" xml:space="preserve">
          <source>The lookup context here is determined by the &lt;a href=&quot;#lookupClass()&quot;&gt;lookup class&lt;/a&gt;, its class loader, and the &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt;. In particular, the method first attempts to load the requested class, and then determines whether the class is accessible to this lookup object.</source>
          <target state="translated">ここでのルックアップコンテキストは、&lt;a href=&quot;#lookupClass()&quot;&gt;ルックアップクラス&lt;/a&gt;、そのクラスローダー、および&lt;a href=&quot;#lookupModes()&quot;&gt;ルックアップモード&lt;/a&gt;によって決定されます。特に、このメソッドは最初に要求されたクラスのロードを試み、次にこのルックアップオブジェクトがクラスにアクセスできるかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="5c72e04246b336a2af96b0479870fef89b228464" translate="yes" xml:space="preserve">
          <source>The lookup has the &lt;a href=&quot;methodhandles.lookup#MODULE&quot;&gt;&lt;code&gt;MODULE&lt;/code&gt;&lt;/a&gt; lookup mode.</source>
          <target state="translated">ルックアップには&lt;a href=&quot;methodhandles.lookup#MODULE&quot;&gt; &lt;code&gt;MODULE&lt;/code&gt; &lt;/a&gt;ルックアップモードがあります。</target>
        </trans-unit>
        <trans-unit id="1dafcee2bd49424918b839236e0943f9a18e833f" translate="yes" xml:space="preserve">
          <source>The lookup operation returns the best matching language tags. It is defined in RFC 4647 as follows: &quot;By contrast with filtering, each language range represents the most specific tag that is an acceptable match. The first matching tag found, according to the user's priority, is considered the closest match and is the item returned.&quot;</source>
          <target state="translated">ルックアップ操作は、最もマッチする言語タグを返す。これはRFC 4647で次のように定義されています。&quot;フィルタリングとは対照的に、各言語範囲は許容できる最も特定のタグを表します。ユーザーの優先度に応じて、最初に見つかった一致するタグは、最も近い一致とみなされ、返される項目となります&quot;</target>
        </trans-unit>
        <trans-unit id="582ea1d78ac5e0bbdf20061d342770ab78ddb355" translate="yes" xml:space="preserve">
          <source>The loop counter &lt;code&gt;i&lt;/code&gt; is a loop iteration variable of type &lt;code&gt;int&lt;/code&gt;. The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; handles determine the start (inclusive) and end (exclusive) values of the loop counter. The loop counter will be initialized to the &lt;code&gt;int&lt;/code&gt; value returned from the evaluation of the &lt;code&gt;start&lt;/code&gt; handle and run to the value returned from &lt;code&gt;end&lt;/code&gt; (exclusively) with a step width of 1.</source>
          <target state="translated">ループカウンター &lt;code&gt;i&lt;/code&gt; は、 &lt;code&gt;int&lt;/code&gt; 型のループ反復変数です。 &lt;code&gt;start&lt;/code&gt; および &lt;code&gt;end&lt;/code&gt; のハンドルは、ループカウンタの開始（含む）と端部（排他的）値を決定します。ループカウンターは、 &lt;code&gt;start&lt;/code&gt; ハンドルの評価から返された &lt;code&gt;int&lt;/code&gt; 値に初期化され、ステップ幅1で &lt;code&gt;end&lt;/code&gt; から（排他的に）返された値まで実行されます。</target>
        </trans-unit>
        <trans-unit id="5820f1110b4ac8206be50aedb9a96eb1dee59652" translate="yes" xml:space="preserve">
          <source>The loop handle's parameter types are the types &lt;code&gt;(A...)&lt;/code&gt;, from the external parameter list.</source>
          <target state="translated">ループハンドルのパラメータタイプは、外部パラメータリストのタイプ &lt;code&gt;(A...)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="05c190dd921348eef4cc73ac43f724bbb06cf616" translate="yes" xml:space="preserve">
          <source>The loop handle's result type is the result type &lt;code&gt;V&lt;/code&gt; of the body.</source>
          <target state="translated">ループハンドルの結果タイプは、本体の結果タイプ &lt;code&gt;V&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0b15aba7014ff4a3b81f3cf9a325dec861715d64" translate="yes" xml:space="preserve">
          <source>The low threshold value.</source>
          <target state="translated">閾値が低いこと。</target>
        </trans-unit>
        <trans-unit id="e1027b0c41f8a52e9615bc3f18f897cf025a055b" translate="yes" xml:space="preserve">
          <source>The low-level description of the method</source>
          <target state="translated">メソッドの低レベルの記述</target>
        </trans-unit>
        <trans-unit id="e619709126d9f839cc6e96eab8827b8daf2ca29f" translate="yes" xml:space="preserve">
          <source>The lower grades of synchronization are known as</source>
          <target state="translated">同期の下位グレードは、以下のように知られています。</target>
        </trans-unit>
        <trans-unit id="89c09aa4a3982e510232a448559f376283539736" translate="yes" xml:space="preserve">
          <source>The lowercase letters &lt;code&gt;'a'&lt;/code&gt; through &lt;code&gt;'z'&lt;/code&gt; (&lt;code&gt;'\u0061'&lt;/code&gt; through &lt;code&gt;'\u007a'&lt;/code&gt;),</source>
          <target state="translated">小文字の &lt;code&gt;'a'&lt;/code&gt; から &lt;code&gt;'z'&lt;/code&gt; （ &lt;code&gt;'\u0061'&lt;/code&gt; から &lt;code&gt;'\u007a'&lt;/code&gt; ）、</target>
        </trans-unit>
        <trans-unit id="e7adbe88d306194f65bd3e489d21fb2637f8310d" translate="yes" xml:space="preserve">
          <source>The lowest justification priority.</source>
          <target state="translated">正当化の優先順位が一番低い。</target>
        </trans-unit>
        <trans-unit id="7f05176865317c7a2037690568a4839fcef6385c" translate="yes" xml:space="preserve">
          <source>The lowest level of synchronization is simply writing any changes made to the &lt;code&gt;RowSet&lt;/code&gt; object to its underlying data source. The writer does nothing to check for conflicts. If there is a conflict and the data source values are overwritten, the changes other parties have made by to the data source are lost.</source>
          <target state="translated">同期の最低レベルは、 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトに加えられた変更をその基になるデータソースに書き込むことです。ライターは競合をチェックするために何もしません。競合が発生し、データソースの値が上書きされると、他の当事者がデータソースに対して行った変更は失われます。</target>
        </trans-unit>
        <trans-unit id="c289c722dc9ced058183a4c8dddca407e0a3bc2d" translate="yes" xml:space="preserve">
          <source>The lowest scope. Returns -1 if no attribute with the given name is defined in any scope.</source>
          <target state="translated">最下位のスコープ。指定した名前の属性がどのスコープにも定義されていない場合は -1 を返します。</target>
        </trans-unit>
        <trans-unit id="bd3e31a106389ea2a7d2a231b5298c5fd7241a88" translate="yes" xml:space="preserve">
          <source>The m-let service extends the &lt;code&gt;java.net.URLClassLoader&lt;/code&gt; and can be used to load remote classes and jar files in the VM of the agent.</source>
          <target state="translated">m-letサービスは &lt;code&gt;java.net.URLClassLoader&lt;/code&gt; を拡張し、エージェントのVMにリモートクラスとjarファイルをロードするために使用できます。</target>
        </trans-unit>
        <trans-unit id="76e9f4ba76cdff11494ca93f5ded5f00aaee995c" translate="yes" xml:space="preserve">
          <source>The magic caret position is set to null when the caret position changes. A timer is used to determine the new location (after the caret change). When the timer fires, if the magic caret position is still null it is reset to the current caret position. Any actions that change the caret position and want the magic caret position to remain the same, must remember the magic caret position, change the cursor, and then set the magic caret position to its original value. This has the benefit that only actions that want the magic caret position to persist (such as open/down) need to know about it.</source>
          <target state="translated">魔法のキャレット位置は、キャレット位置が変更されたときにヌルに設定されます。タイマーは、新しい位置(キャレット変更後)を決定するために使用されます。タイマーが切れると、マジックキャレット位置がまだヌルのままの場合は、現在のキャレット位置にリセットされます。キャレット位置を変更し、マジックキャレット位置を同じままにしたいアクションは、マジックキャレット位置を記憶し、カーソルを変更し、マジックキャレット位置を元の値に設定しなければなりません。これは、マジックキャレット位置を持続させたいアクション(オープン/ダウンなど)だけが知る必要があるという利点があります。</target>
        </trans-unit>
        <trans-unit id="9f854df23c307bcb9e34b9849451f1d804656d22" translate="yes" xml:space="preserve">
          <source>The magnitude is formatted as the integer part of</source>
          <target state="translated">マグニチュードは</target>
        </trans-unit>
        <trans-unit id="de144eeaeb048750a7b6ca494a4484b91c3ca8c0" translate="yes" xml:space="preserve">
          <source>The main API for dates, times, instants, and durations.</source>
          <target state="translated">日付、時刻、瞬間、持続時間のメインAPIです。</target>
        </trans-unit>
        <trans-unit id="87ad397b72e4e2670cb9fd154ad2b5c78ebccb49" translate="yes" xml:space="preserve">
          <source>The main API is based around the calendar system defined in ISO-8601. However, there are other calendar systems, and this package provides basic support for them. The alternate calendars are provided in the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;java.time.chrono&lt;/code&gt;&lt;/a&gt; package.</source>
          <target state="translated">メインAPIは、ISO-8601で定義されたカレンダーシステムに基づいています。ただし、他のカレンダーシステムがあり、このパッケージはそれらの基本的なサポートを提供します。代替カレンダーは、&lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;java.time.chrono&lt;/code&gt; &lt;/a&gt;パッケージで提供されます。</target>
        </trans-unit>
        <trans-unit id="8c8f745cb8e21c4eb3d06ea2d2c82dc8a5899e5a" translate="yes" xml:space="preserve">
          <source>The main areas of functionality of &lt;code&gt;javax.script&lt;/code&gt; package include</source>
          <target state="translated">&lt;code&gt;javax.script&lt;/code&gt; パッケージの機能の主な領域は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="fa38b9d3cc817e051120893ceae532dec4aa8c9a" translate="yes" xml:space="preserve">
          <source>The main class for creating a dialog window.</source>
          <target state="translated">ダイアログウィンドウを作成するためのメインクラスです。</target>
        </trans-unit>
        <trans-unit id="6c1502deae96e4a60d2e7e71a3c7ca6c943736aa" translate="yes" xml:space="preserve">
          <source>The main class for creating a dialog window. You can use this class to create a custom dialog, or invoke the many class methods in &lt;a href=&quot;joptionpane&quot;&gt;&lt;code&gt;JOptionPane&lt;/code&gt;&lt;/a&gt; to create a variety of standard dialogs. For information about creating dialogs, see &lt;em&gt;The Java Tutorial&lt;/em&gt; section &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;How to Make Dialogs&lt;/a&gt;.</source>
          <target state="translated">ダイアログウィンドウを作成するためのメインクラス。このクラスを使用してカスタムダイアログを作成したり、&lt;a href=&quot;joptionpane&quot;&gt; &lt;code&gt;JOptionPane&lt;/code&gt; の&lt;/a&gt;多くのクラスメソッドを呼び出してさまざまな標準ダイアログを作成したりできます。ダイアログの作成については、「&lt;em&gt;Javaチュートリアル」&lt;/em&gt;セクションの&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;「&lt;/a&gt;ダイアログの作成方法」を参照してください。</target>
        </trans-unit>
        <trans-unit id="fabda07c3b6a162bd5e5f2d89cab43fa50597f1e" translate="yes" xml:space="preserve">
          <source>The main class name of the initial module</source>
          <target state="translated">初期モジュールのメインクラス名</target>
        </trans-unit>
        <trans-unit id="1c8b07dc81c5cae446072ef321854dc8c9b754b2" translate="yes" xml:space="preserve">
          <source>The main computation performed by this task.</source>
          <target state="translated">このタスクで実行される主な計算。</target>
        </trans-unit>
        <trans-unit id="b5a067152faa9b4aadd51479a1dd861ea68df4fd" translate="yes" xml:space="preserve">
          <source>The main date and time API is built on the ISO calendar system. The chronology operates behind the scenes to represent the general concept of a calendar system.</source>
          <target state="translated">主な日時APIは、ISOカレンダーシステムをベースに構築されています。年表は、カレンダーシステムの一般的な概念を表現するために裏で動作します。</target>
        </trans-unit>
        <trans-unit id="b853030ffb2c3edc982b0284b46a35af47f22884" translate="yes" xml:space="preserve">
          <source>The main date and time API is built on the ISO calendar system. The chronology operates behind the scenes to represent the general concept of a calendar system. For example, the Japanese, Minguo, Thai Buddhist and others.</source>
          <target state="translated">主な日時APIは、ISOカレンダーシステムをベースに構築されています。年表は、カレンダーシステムの一般的な概念を表すために裏で動作します。例えば、和暦、民国暦、タイ仏教暦など。</target>
        </trans-unit>
        <trans-unit id="9e477ae5e9b40e17482fe2bfa8054488de70b68c" translate="yes" xml:space="preserve">
          <source>The main date-time classes provide two methods - one for formatting, &lt;code&gt;format(DateTimeFormatter formatter)&lt;/code&gt;, and one for parsing, &lt;code&gt;parse(CharSequence text, DateTimeFormatter formatter)&lt;/code&gt;.</source>
          <target state="translated">主要な日時クラスは2つのメソッドを提供します。1つはフォーマット、 &lt;code&gt;format(DateTimeFormatter formatter)&lt;/code&gt; &lt;code&gt;parse(CharSequence text, DateTimeFormatter formatter)&lt;/code&gt; 1つは解析、parse（CharSequence text、DateTimeFormatter formatter）です。</target>
        </trans-unit>
        <trans-unit id="bb46ba1feb50e25623a3a5d3b3522e2efd2bea39" translate="yes" xml:space="preserve">
          <source>The main input tray in the printer.</source>
          <target state="translated">プリンターのメイン入力トレイです。</target>
        </trans-unit>
        <trans-unit id="cc02b164970a6d4a21efa3fd53651baa0221e88b" translate="yes" xml:space="preserve">
          <source>The main package of the Java Image I/O API.</source>
          <target state="translated">Java Image I/O APIのメインパッケージです。</target>
        </trans-unit>
        <trans-unit id="1d37f37048cf33621cee29dc0a50808607688cb5" translate="yes" xml:space="preserve">
          <source>The main purpose of this class is to provide the information needed by a developer to determine the suitability of a transfer or to import the data contained within. But it also doubles as a controller for customizing properties during drag and drop, such as whether or not to show the drop location, and which drop action to use.</source>
          <target state="translated">このクラスの主な目的は、開発者が転送の適合性を判断したり、その中に含まれるデータをインポートしたりするために必要な情報を提供することです。しかし、ドラッグ&amp;ドロップ中にプロパティをカスタマイズするためのコントローラとしても機能します。</target>
        </trans-unit>
        <trans-unit id="de83861a0d99308ff61bd5e2a4e93009db4a5f14" translate="yes" xml:space="preserve">
          <source>The major version of the profile.</source>
          <target state="translated">プロフィールのメジャー版。</target>
        </trans-unit>
        <trans-unit id="6e6d641c4b17fb0dacb9c8e5fb7c375230a35ab5" translate="yes" xml:space="preserve">
          <source>The majority of methods for setting placeholder parameters take two parameters, with the first parameter indicating which placeholder parameter is to be set, and the second parameter giving the value to be set. Methods such as &lt;code&gt;setInt&lt;/code&gt;, &lt;code&gt;setString&lt;/code&gt;, &lt;code&gt;setBoolean&lt;/code&gt;, and &lt;code&gt;setLong&lt;/code&gt; fall into this category. After these methods have been called, a call to the method &lt;code&gt;getParams&lt;/code&gt; will return an array with the values that have been set. Each element in the array is an &lt;code&gt;Object&lt;/code&gt; instance representing the values that have been set. The order of these values in the array is determined by the &lt;code&gt;int&lt;/code&gt; (the first parameter) passed to the setter method. The values in the array are the values (the second parameter) passed to the setter method. In other words, the first element in the array is the value to be set for the first placeholder parameter in the &lt;code&gt;RowSet&lt;/code&gt; object's command. The second element is the value to be set for the second placeholder parameter, and so on.</source>
          <target state="translated">プレースホルダーパラメーターを設定する方法の大部分は2つのパラメーターを取ります。最初のパラメーターは設定するプレースホルダーパラメーターを示し、2番目のパラメーターは設定する値を示します。以下のようなメソッド &lt;code&gt;setInt&lt;/code&gt; 、 &lt;code&gt;setString&lt;/code&gt; を、 &lt;code&gt;setBoolean&lt;/code&gt; 、および &lt;code&gt;setLong&lt;/code&gt; がこのカテゴリーに入ります。これらのメソッドが呼び出された後、メソッド &lt;code&gt;getParams&lt;/code&gt; を呼び出すと、設定された値を含む配列が返されます。配列の各要素は、設定された値を表す &lt;code&gt;Object&lt;/code&gt; インスタンスです。配列内のこれらの値の順序は、 &lt;code&gt;int&lt;/code&gt; によって決定されます。（最初のパラメーター）setterメソッドに渡されます。配列内の値は、setterメソッドに渡される値（2番目のパラメーター）です。つまり、配列の最初の要素は、 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトのコマンドの最初のプレースホルダーパラメーターに設定される値です。2番目の要素は、2番目のプレースホルダーパラメーターに設定される値です。</target>
        </trans-unit>
        <trans-unit id="7c2589d24fa9c9214645e03d72358e3dc3ded803" translate="yes" xml:space="preserve">
          <source>The malicious window might make itself look and behave like a real full desktop, so that information entered by the unsuspecting user is captured and subsequently misused</source>
          <target state="translated">悪意のあるウィンドウは、それ自体が実際のフルデスクトップのように見え、振る舞うことができます。</target>
        </trans-unit>
        <trans-unit id="0e36b3ef42e46df654a51669dc5826745c3c9e82" translate="yes" xml:space="preserve">
          <source>The management interface for a buffer pool, for example a pool of &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer#allocateDirect(int)&quot;&gt;&lt;code&gt;direct&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/nio/mappedbytebuffer&quot;&gt;&lt;code&gt;mapped&lt;/code&gt;&lt;/a&gt; buffers.</source>
          <target state="translated">バッファプールの管理インターフェイス。たとえば、&lt;a href=&quot;../../../../java.base/java/nio/bytebuffer#allocateDirect(int)&quot;&gt; &lt;code&gt;direct&lt;/code&gt; &lt;/a&gt;バッファまたは&lt;a href=&quot;../../../../java.base/java/nio/mappedbytebuffer&quot;&gt; &lt;code&gt;mapped&lt;/code&gt; &lt;/a&gt;バッファのプール。</target>
        </trans-unit>
        <trans-unit id="41ec39971544e0ec4cf01b3d1f692a5a209747ec" translate="yes" xml:space="preserve">
          <source>The management interface for a buffer pool, for example a pool of &lt;a href=&quot;../../nio/bytebuffer#allocateDirect-int-&quot;&gt;&lt;code&gt;direct&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../nio/mappedbytebuffer&quot;&gt;&lt;code&gt;mapped&lt;/code&gt;&lt;/a&gt; buffers.</source>
          <target state="translated">バッファープールの管理インターフェイス（&lt;a href=&quot;../../nio/bytebuffer#allocateDirect-int-&quot;&gt; &lt;code&gt;direct&lt;/code&gt; &lt;/a&gt;バッファーまたは&lt;a href=&quot;../../nio/mappedbytebuffer&quot;&gt; &lt;code&gt;mapped&lt;/code&gt; &lt;/a&gt;バッファーのプールなど）。</target>
        </trans-unit>
        <trans-unit id="479285103caa46331ea7728d61e5be1ac361ef47" translate="yes" xml:space="preserve">
          <source>The management interface for a memory manager.</source>
          <target state="translated">メモリマネージャの管理インタフェースです。</target>
        </trans-unit>
        <trans-unit id="fcf3a8512fdd807d7e4faed1fbe89790494ceb21" translate="yes" xml:space="preserve">
          <source>The management interface for a memory manager. A memory manager manages one or more memory pools of the Java virtual machine.</source>
          <target state="translated">メモリマネージャの管理インタフェースです。メモリマネージャは、Java 仮想マシンの 1 つ以上のメモリプールを管理します。</target>
        </trans-unit>
        <trans-unit id="f4fab39cd8224c3b1514a8f32e67ab83b0c8eab2" translate="yes" xml:space="preserve">
          <source>The management interface for a memory pool.</source>
          <target state="translated">メモリプールの管理インターフェイス。</target>
        </trans-unit>
        <trans-unit id="7a14f43b2f6f8cac13a2fed4f0e0a1d632571b59" translate="yes" xml:space="preserve">
          <source>The management interface for a memory pool. A memory pool represents the memory resource managed by the Java virtual machine and is managed by one or more &lt;a href=&quot;memorymanagermxbean&quot;&gt;&lt;code&gt;memory managers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メモリプールの管理インターフェイス。メモリプールは、Java仮想マシンによって管理されるメモリリソースを表し、1つ以上の&lt;a href=&quot;memorymanagermxbean&quot;&gt; &lt;code&gt;memory managers&lt;/code&gt; &lt;/a&gt;によって管理されます。</target>
        </trans-unit>
        <trans-unit id="5b17a1c4f6bda60b169887ec3464b73178c40c53" translate="yes" xml:space="preserve">
          <source>The management interface for the &lt;a href=&quot;../../../../java.logging/java/util/logging/package-summary&quot;&gt;logging&lt;/a&gt; facility.</source>
          <target state="translated">&lt;a href=&quot;../../../../java.logging/java/util/logging/package-summary&quot;&gt;ロギング&lt;/a&gt;機能の管理インターフェース。</target>
        </trans-unit>
        <trans-unit id="45ce2f8d545e61efecccb099b6f99b2e77692328" translate="yes" xml:space="preserve">
          <source>The management interface for the &lt;a href=&quot;../../util/logging/package-summary&quot;&gt;logging&lt;/a&gt; facility.</source>
          <target state="translated">&lt;a href=&quot;../../util/logging/package-summary&quot;&gt;ロギング&lt;/a&gt;機能の管理インターフェース。</target>
        </trans-unit>
        <trans-unit id="e5da84562122ccb1a4b9947a79eb4868f2181d64" translate="yes" xml:space="preserve">
          <source>The management interface for the class loading system of the Java virtual machine.</source>
          <target state="translated">Java仮想マシンのクラスロードシステムの管理インタフェースです。</target>
        </trans-unit>
        <trans-unit id="8a6fb7cb11948cb467a53e0c5155033baa489d24" translate="yes" xml:space="preserve">
          <source>The management interface for the compilation system of the Java virtual machine.</source>
          <target state="translated">Java仮想マシンのコンパイルシステムの管理インタフェースです。</target>
        </trans-unit>
        <trans-unit id="28e4b42aecf0c56a50db52a87728efbf52162f13" translate="yes" xml:space="preserve">
          <source>The management interface for the garbage collection of the Java virtual machine.</source>
          <target state="translated">Java 仮想マシンのガベージコレクションの管理インターフェイスです。</target>
        </trans-unit>
        <trans-unit id="cd92e36a53dffe8143090f88af9bf00d44b66033" translate="yes" xml:space="preserve">
          <source>The management interface for the garbage collection of the Java virtual machine. Garbage collection is the process that the Java virtual machine uses to find and reclaim unreachable objects to free up memory space. A garbage collector is one type of &lt;a href=&quot;memorymanagermxbean&quot;&gt;&lt;code&gt;memory manager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Java仮想マシンのガベージコレクションの管理インターフェイス。ガーベッジ・コレクションは、Java仮想マシンが到達不能オブジェクトを見つけて再利用してメモリー・スペースを解放するために使用するプロセスです。ガベージコレクターは、&lt;a href=&quot;memorymanagermxbean&quot;&gt; &lt;code&gt;memory manager&lt;/code&gt; &lt;/a&gt;一種です。</target>
        </trans-unit>
        <trans-unit id="0440ae4e2f0264de76917a1f8baa0480d3a12abc" translate="yes" xml:space="preserve">
          <source>The management interface for the logging facility.</source>
          <target state="translated">伐採施設の管理インターフェイスです。</target>
        </trans-unit>
        <trans-unit id="93c3b79d3c66ce577a9864a254628b4a822e847f" translate="yes" xml:space="preserve">
          <source>The management interface for the logging facility. &lt;a href=&quot;../../../../java.management/java/lang/management/platformloggingmxbean&quot;&gt;&lt;code&gt;java.lang.management.PlatformLoggingMXBean&lt;/code&gt;&lt;/a&gt; is the management interface for logging facility registered in the &lt;a href=&quot;../../../../java.management/java/lang/management/managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt;. It is recommended to use the &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; obtained via the &lt;a href=&quot;../../../../java.management/java/lang/management/managementfactory#getPlatformMXBean(java.lang.Class)&quot;&gt;&lt;code&gt;ManagementFactory.getPlatformMXBean(PlatformLoggingMXBean.class)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ロギング機能の管理インターフェース。&lt;a href=&quot;../../../../java.management/java/lang/management/platformloggingmxbean&quot;&gt; &lt;code&gt;java.lang.management.PlatformLoggingMXBean&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;../../../../java.management/java/lang/management/managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt;登録されているロギング機能の管理インターフェースです。&lt;a href=&quot;../../../../java.management/java/lang/management/managementfactory#getPlatformMXBean(java.lang.Class)&quot;&gt; &lt;code&gt;ManagementFactory.getPlatformMXBean(PlatformLoggingMXBean.class)&lt;/code&gt; &lt;/a&gt;メソッドを介して取得した &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="3ef314b5f9f21eb1016958cad7f6ed16998f4dbf" translate="yes" xml:space="preserve">
          <source>The management interface for the logging facility. It is recommended to use the &lt;a href=&quot;../../lang/management/platformloggingmxbean&quot;&gt;&lt;code&gt;PlatformLoggingMXBean&lt;/code&gt;&lt;/a&gt; management interface that implements all attributes defined in this &lt;code&gt;LoggingMXBean&lt;/code&gt;. The &lt;a href=&quot;../../lang/management/managementfactory#getPlatformMXBean-java.lang.Class-&quot;&gt;&lt;code&gt;ManagementFactory.getPlatformMXBean&lt;/code&gt;&lt;/a&gt; method can be used to obtain the &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; object representing the management interface for logging.</source>
          <target state="translated">ロギング機能の管理インターフェース。この &lt;code&gt;LoggingMXBean&lt;/code&gt; で定義されているすべての属性を実装する&lt;a href=&quot;../../lang/management/platformloggingmxbean&quot;&gt; &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; &lt;/a&gt;管理インターフェースを使用することをお勧めします。&lt;a href=&quot;../../lang/management/managementfactory#getPlatformMXBean-java.lang.Class-&quot;&gt; &lt;code&gt;ManagementFactory.getPlatformMXBean&lt;/code&gt; &lt;/a&gt;方法を得るために使用することができる &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; ログの管理インタフェースを表すオブジェクト。</target>
        </trans-unit>
        <trans-unit id="10c44d718b1a21753bf3b069730f590be918c45f" translate="yes" xml:space="preserve">
          <source>The management interface for the memory system of the Java virtual machine.</source>
          <target state="translated">Java 仮想マシンのメモリシステムの管理インターフェイスです。</target>
        </trans-unit>
        <trans-unit id="847ac3d0883ec1a323c757fc548b0fd4d2e2c36d" translate="yes" xml:space="preserve">
          <source>The management interface for the operating system on which the Java virtual machine is running.</source>
          <target state="translated">Java 仮想マシンが実行されているオペレーティングシステムの管理インターフェイスです。</target>
        </trans-unit>
        <trans-unit id="6eb52bce02ed0ce174dbff28ae7ecc47698722a7" translate="yes" xml:space="preserve">
          <source>The management interface for the runtime system of the Java virtual machine.</source>
          <target state="translated">Java仮想マシンのランタイムシステムの管理インターフェースです。</target>
        </trans-unit>
        <trans-unit id="8e39ca7a7b013a02644c7fe0d0da87295154d935" translate="yes" xml:space="preserve">
          <source>The management interface for the thread system of the Java virtual machine.</source>
          <target state="translated">Java 仮想マシンのスレッドシステムの管理インターフェイスです。</target>
        </trans-unit>
        <trans-unit id="0f89f384aef1c053634fba77e812dec13d803a9b" translate="yes" xml:space="preserve">
          <source>The management interface of this Standard MBean (or MXBean).</source>
          <target state="translated">この標準MBean(またはMXBean)の管理インターフェース。</target>
        </trans-unit>
        <trans-unit id="9a8a459cca47f20b145ecf310bebc20942a80db0" translate="yes" xml:space="preserve">
          <source>The management interfaces are also registered with the platform &lt;a href=&quot;../../../javax/management/mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;../../../javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; that uniquely identifies the management interface within the &lt;code&gt;MBeanServer&lt;/code&gt; takes the form:</source>
          <target state="translated">管理インターフェースもプラットフォーム&lt;a href=&quot;../../../javax/management/mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; に&lt;/a&gt;登録されています。&lt;a href=&quot;../../../javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; の&lt;/a&gt;一意内の管理インタフェースを識別する &lt;code&gt;MBeanServer&lt;/code&gt; 形をとります。</target>
        </trans-unit>
        <trans-unit id="351e7dc77ed2411113c4e0ace52b31f98531806d" translate="yes" xml:space="preserve">
          <source>The management of a signer's private keys is an important and sensitive issue that should be handled by subclasses as appropriate to their intended use.</source>
          <target state="translated">署名者の秘密鍵の管理は、その使用目的に応じてサブクラスが適切に処理すべき重要かつセンシティブな問題である。</target>
        </trans-unit>
        <trans-unit id="3e3ee70b5049efe06c2a7d7c78dad8ec1c86cb19" translate="yes" xml:space="preserve">
          <source>The manifest of the agent JAR file must contain the attribute &lt;code&gt;
 Premain-Class&lt;/code&gt; in its main manifest. The value of this attribute is the name of the</source>
          <target state="translated">エージェントJARファイルのマニフェストには、メインマニフェストに属性 &lt;code&gt; Premain-Class&lt;/code&gt; が含まれている必要があります。この属性の値は、の名前です。</target>
        </trans-unit>
        <trans-unit id="d605640695e5655c5683f5e380c0d4a62c4c111b" translate="yes" xml:space="preserve">
          <source>The manifest of the agent JAR must contain the attribute &lt;code&gt;
   Agent-Class&lt;/code&gt; in its main manfiest. The value of this attribute is the name of the</source>
          <target state="translated">エージェントJARのマニフェストには、メインのmanfiestに属性 &lt;code&gt; Agent-Class&lt;/code&gt; が含まれている必要があります。この属性の値は、の名前です。</target>
        </trans-unit>
        <trans-unit id="0971fe683af5a5e2e54b47c769fab0246a3b75de" translate="yes" xml:space="preserve">
          <source>The manual feed input tray in the printer.</source>
          <target state="translated">プリンターの手差し入力トレイです。</target>
        </trans-unit>
        <trans-unit id="9d81f1be91cb53728efc46880aacfe384ada117f" translate="yes" xml:space="preserve">
          <source>The map is unmodifiable.</source>
          <target state="translated">マップは変更できません。</target>
        </trans-unit>
        <trans-unit id="148614dffcd2a1483f4669ef60a289f4891d5d8f" translate="yes" xml:space="preserve">
          <source>The map returned by this method will have one entry for each charset for which support is available in the current Java virtual machine. If two or more supported charsets have the same canonical name then the resulting map will contain just one of them; which one it will contain is not specified.</source>
          <target state="translated">このメソッドによって返されるマップは、現在の Java 仮想マシンでサポートされている各文字セットに対して 1 つのエントリを持ちます。サポートされている 2 つ以上の文字セットが同じ正規名を持つ場合、結果のマップにはそのうちの 1 つだけが含まれます;どの文字セットが含まれるかは指定されません。</target>
        </trans-unit>
        <trans-unit id="cc3989e3137f8abc67f81771ff3d11582e2763d1" translate="yes" xml:space="preserve">
          <source>The map will not contain a mapping for the specified key once the call returns.</source>
          <target state="translated">呼び出しが戻ると、指定されたキーのマッピングは含まれません。</target>
        </trans-unit>
        <trans-unit id="8d6d635a3361ab121278dfa747bf9a62761f81a7" translate="yes" xml:space="preserve">
          <source>The mapped Java type, &lt;em&gt;opendata(&lt;/em&gt;&lt;code&gt;
        List&amp;lt;String&amp;gt;&lt;/code&gt;&lt;em&gt;)&lt;/em&gt;, is &lt;code&gt;String[]&lt;/code&gt;.</source>
          <target state="translated">マップされたJavaタイプ&lt;em&gt;opendata（&lt;/em&gt; &lt;code&gt; List&amp;lt;String&amp;gt;&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;は &lt;code&gt;String[]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5efef9ce16d66b6a65a451ff2af5a09326eda0bc" translate="yes" xml:space="preserve">
          <source>The mapped Java type, &lt;em&gt;opendata(&lt;/em&gt;&lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt;&lt;em&gt;)&lt;/em&gt;, is &lt;code&gt;String[]&lt;/code&gt;.</source>
          <target state="translated">マップされたJavaの型&lt;em&gt;opendata（&lt;/em&gt; &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;は &lt;code&gt;String[]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fd167e9165a3f6429397c891dd64da4bb93b1858" translate="yes" xml:space="preserve">
          <source>The mapped byte buffer</source>
          <target state="translated">マップされたバイトバッファ</target>
        </trans-unit>
        <trans-unit id="b2312b24991b37933ebe862c787f3ef5bd90a444" translate="yes" xml:space="preserve">
          <source>The mapped type of &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; is &lt;code&gt;String[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; のマップされたタイプは &lt;code&gt;String[]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b54d5b016c52978ccbd2bdfb38bb414673876d40" translate="yes" xml:space="preserve">
          <source>The mapped type of &lt;code&gt;Map&amp;lt;String,String&amp;gt;&lt;/code&gt; is &lt;a href=&quot;../../../javax/management/openmbean/tabulardata&quot;&gt;&lt;code&gt;TabularData&lt;/code&gt;&lt;/a&gt; with two items in each row as follows:</source>
          <target state="translated">マップされた種類 &lt;code&gt;Map&amp;lt;String,String&amp;gt;&lt;/code&gt; であり&lt;a href=&quot;../../../javax/management/openmbean/tabulardata&quot;&gt; &lt;code&gt;TabularData&lt;/code&gt; &lt;/a&gt;次のように各列に2つの項目と：</target>
        </trans-unit>
        <trans-unit id="8e952ed904175c8930ea48403051b5d05c5545c6" translate="yes" xml:space="preserve">
          <source>The mapped type of &lt;code&gt;MemoryType&lt;/code&gt; is &lt;code&gt;String&lt;/code&gt; and the value is the name of the &lt;code&gt;MemoryType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MemoryType&lt;/code&gt; のマップされたタイプは &lt;code&gt;String&lt;/code&gt; で、値は &lt;code&gt;MemoryType&lt;/code&gt; の名前です。</target>
        </trans-unit>
        <trans-unit id="9e1ac76286a906fe472a7e36c4b7b1ffadc6a203" translate="yes" xml:space="preserve">
          <source>The mapped type of &lt;code&gt;MemoryUsage&lt;/code&gt; is &lt;code&gt;CompositeData&lt;/code&gt; with attributes as specified in &lt;a href=&quot;memoryusage#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;MemoryUsage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">マップされたタイプ &lt;code&gt;MemoryUsage&lt;/code&gt; ある &lt;code&gt;CompositeData&lt;/code&gt; で指定された属性と&lt;a href=&quot;memoryusage#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;MemoryUsage&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fbaf85954f7772b1959d714dcd3394a5212a77f6" translate="yes" xml:space="preserve">
          <source>The mapped type of &lt;code&gt;MemoryUsage&lt;/code&gt; is &lt;code&gt;CompositeData&lt;/code&gt; with attributes as specified in &lt;a href=&quot;memoryusage#from-javax.management.openmbean.CompositeData-&quot;&gt;&lt;code&gt;MemoryUsage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">マップされたタイプ &lt;code&gt;MemoryUsage&lt;/code&gt; ある &lt;code&gt;CompositeData&lt;/code&gt; で指定された属性と&lt;a href=&quot;memoryusage#from-javax.management.openmbean.CompositeData-&quot;&gt; &lt;code&gt;MemoryUsage&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="27168ca3751e58f41f1b0b7691cf1f63add33d5f" translate="yes" xml:space="preserve">
          <source>The mapped type of &lt;code&gt;ThreadInfo&lt;/code&gt; is &lt;code&gt;CompositeData&lt;/code&gt; with attributes as specified in the &lt;a href=&quot;threadinfo#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;ThreadInfo.from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">マップされたタイプ &lt;code&gt;ThreadInfo&lt;/code&gt; にはある &lt;code&gt;CompositeData&lt;/code&gt; で指定された属性と&lt;a href=&quot;threadinfo#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;ThreadInfo.from&lt;/code&gt; の&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="61f3a8b7b0aafedaf94c7afc27dfb44c20f6f872" translate="yes" xml:space="preserve">
          <source>The mapped type of &lt;code&gt;ThreadInfo&lt;/code&gt; is &lt;code&gt;CompositeData&lt;/code&gt; with attributes as specified in the &lt;a href=&quot;threadinfo#from-javax.management.openmbean.CompositeData-&quot;&gt;&lt;code&gt;ThreadInfo.from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">マップされたタイプ &lt;code&gt;ThreadInfo&lt;/code&gt; にはある &lt;code&gt;CompositeData&lt;/code&gt; で指定された属性と&lt;a href=&quot;threadinfo#from-javax.management.openmbean.CompositeData-&quot;&gt; &lt;code&gt;ThreadInfo.from&lt;/code&gt; の&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="3c087cdbe45fea6b6b9ec0f6437a67475b253bf7" translate="yes" xml:space="preserve">
          <source>The mapping from a local date-time to an offset is not straightforward. There are three cases:</source>
          <target state="translated">ローカルの日付時間からオフセットへのマッピングは簡単ではありません。3つのケースがあります。</target>
        </trans-unit>
        <trans-unit id="12e8672b358b7324e88869fe3994e4595f187b3a" translate="yes" xml:space="preserve">
          <source>The mapping from an instant to an offset is simple, there is only one valid offset for each instant. This method returns that offset.</source>
          <target state="translated">インスタントからオフセットへのマッピングは簡単で、各インスタントに対して有効なオフセットは 1 つだけです。このメソッドは、そのオフセットを返します。</target>
        </trans-unit>
        <trans-unit id="efa8f760fe15a8611f03234f6225c472bbad9757" translate="yes" xml:space="preserve">
          <source>The mapping function is executed using the client's &lt;a href=&quot;httpclient#executor()&quot;&gt;executor&lt;/a&gt;, and can therefore be used to map any response body type, including blocking &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;, as shown in the following example which uses a well-known JSON parser to convert an &lt;code&gt;InputStream&lt;/code&gt; into any annotated Java type.</source>
          <target state="translated">マッピング関数はクライアントの&lt;a href=&quot;httpclient#executor()&quot;&gt;エグゼキュータ&lt;/a&gt;を使用して実行されるため、よく知られているJSONパーサーを使用して &lt;code&gt;InputStream&lt;/code&gt; を注釈付きJavaタイプに変換する次の例に示すように、&lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; の&lt;/a&gt;ブロックを含む任意の応答本文タイプをマッピングするために使用できます。</target>
        </trans-unit>
        <trans-unit id="213db0c7af81269192b73e1d66cfb3a1ecd68846" translate="yes" xml:space="preserve">
          <source>The mapping function should not modify this map during computation.</source>
          <target state="translated">マッピング関数は、計算中にこのマップを変更してはいけません。</target>
        </trans-unit>
        <trans-unit id="a571d2bfd21eab9df5c46eaa9052b6dcad735a3e" translate="yes" xml:space="preserve">
          <source>The mapping in the Java programming language for the SQL type &lt;code&gt;ARRAY&lt;/code&gt;.</source>
          <target state="translated">SQL型 &lt;code&gt;ARRAY&lt;/code&gt; のJavaプログラミング言語でのマッピング。</target>
        </trans-unit>
        <trans-unit id="52f0139dde804c78136c63591218cc96ffa35433" translate="yes" xml:space="preserve">
          <source>The mapping in the Java programming language for the SQL type &lt;code&gt;ARRAY&lt;/code&gt;. By default, an &lt;code&gt;Array&lt;/code&gt; value is a transaction-duration reference to an SQL &lt;code&gt;ARRAY&lt;/code&gt; value. By default, an &lt;code&gt;Array&lt;/code&gt; object is implemented using an SQL LOCATOR(array) internally, which means that an &lt;code&gt;Array&lt;/code&gt; object contains a logical pointer to the data in the SQL &lt;code&gt;ARRAY&lt;/code&gt; value rather than containing the &lt;code&gt;ARRAY&lt;/code&gt; value's data.</source>
          <target state="translated">SQL型 &lt;code&gt;ARRAY&lt;/code&gt; のJavaプログラミング言語でのマッピング。デフォルトでは、 &lt;code&gt;Array&lt;/code&gt; 値は &lt;code&gt;ARRAY&lt;/code&gt; 値へのトランザクション期間の参照です。デフォルトでは、 &lt;code&gt;Array&lt;/code&gt; オブジェクトがあることを意味内部SQL LOCATOR（配列）を使用して実装されている &lt;code&gt;Array&lt;/code&gt; オブジェクトは、SQLのデータへの論理ポインタ含ま &lt;code&gt;ARRAY&lt;/code&gt; むしろ含有以上の値を &lt;code&gt;ARRAY&lt;/code&gt; の値のデータを。</target>
        </trans-unit>
        <trans-unit id="04436d9ae26c83110d5516cdd1d08ae63970fe91" translate="yes" xml:space="preserve">
          <source>The mapping in the Java programming language of an SQL &lt;code&gt;REF&lt;/code&gt; value, which is a reference to an SQL structured type value in the database.</source>
          <target state="translated">データベース内のSQL構造化タイプ値への参照である &lt;code&gt;REF&lt;/code&gt; 値のJavaプログラミング言語でのマッピング。</target>
        </trans-unit>
        <trans-unit id="da7f373a020c4b2a772bb84d65fd06df14d3ba1a" translate="yes" xml:space="preserve">
          <source>The mapping in the Java&amp;trade; programming language for the SQL &lt;code&gt;CLOB&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;CLOB&lt;/code&gt; タイプのJava&amp;trade;プログラミング言語でのマッピング。</target>
        </trans-unit>
        <trans-unit id="6975cb32bff899229ce9f4e10e17293c269e7cf3" translate="yes" xml:space="preserve">
          <source>The mapping in the Java&amp;trade; programming language for the SQL &lt;code&gt;CLOB&lt;/code&gt; type. An SQL &lt;code&gt;CLOB&lt;/code&gt; is a built-in type that stores a Character Large Object as a column value in a row of a database table. By default drivers implement a &lt;code&gt;Clob&lt;/code&gt; object using an SQL &lt;code&gt;locator(CLOB)&lt;/code&gt;, which means that a &lt;code&gt;Clob&lt;/code&gt; object contains a logical pointer to the SQL &lt;code&gt;CLOB&lt;/code&gt; data rather than the data itself. A &lt;code&gt;Clob&lt;/code&gt; object is valid for the duration of the transaction in which it was created.</source>
          <target state="translated">&lt;code&gt;CLOB&lt;/code&gt; タイプのJava&amp;trade;プログラミング言語でのマッピング。SQL &lt;code&gt;CLOB&lt;/code&gt; は、データベーステーブルの行の列値として文字ラージオブジェクトを格納する組み込み型です。デフォルトでは、ドライバーはSQL &lt;code&gt;locator(CLOB)&lt;/code&gt; を使用して &lt;code&gt;Clob&lt;/code&gt; オブジェクトを実装します。つまり、 &lt;code&gt;Clob&lt;/code&gt; オブジェクトには、データ自体ではなく、 &lt;code&gt;CLOB&lt;/code&gt; データへの論理ポインターが含まれます。A &lt;code&gt;Clob&lt;/code&gt; オブジェクトは、それが作成されたトランザクションの期間中に有効です。</target>
        </trans-unit>
        <trans-unit id="a55434df05c4f86901f5b64057a68cfa88f0577d" translate="yes" xml:space="preserve">
          <source>The mapping in the Java&amp;trade; programming language for the SQL &lt;code&gt;NCLOB&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;NCLOB&lt;/code&gt; タイプのJava&amp;trade;プログラミング言語でのマッピング。</target>
        </trans-unit>
        <trans-unit id="7b63425c41c17fe4291c19c2b6017e208a65e5b0" translate="yes" xml:space="preserve">
          <source>The mapping in the Java&amp;trade; programming language for the SQL &lt;code&gt;NCLOB&lt;/code&gt; type. An SQL &lt;code&gt;NCLOB&lt;/code&gt; is a built-in type that stores a Character Large Object using the National Character Set as a column value in a row of a database table.</source>
          <target state="translated">&lt;code&gt;NCLOB&lt;/code&gt; タイプのJava&amp;trade;プログラミング言語でのマッピング。SQL &lt;code&gt;NCLOB&lt;/code&gt; は、データベーステーブルの行の列値としてNational CharacterSetを使用してCharacterLargeObjectを格納する組み込み型です。</target>
        </trans-unit>
        <trans-unit id="255c64e2047c17ae5184bedb71a28f00f28b7429" translate="yes" xml:space="preserve">
          <source>The mapping in the JavaTM programming language for the SQL XML type.</source>
          <target state="translated">SQL XML型のJavaTMプログラミング言語でのマッピング。</target>
        </trans-unit>
        <trans-unit id="3e6756cd08dbba5b84d5d8e2892c437d35af2b09" translate="yes" xml:space="preserve">
          <source>The mapping in the JavaTM programming language for the SQL XML type. XML is a built-in type that stores an XML value as a column value in a row of a database table. By default drivers implement an SQLXML object as a logical pointer to the XML data rather than the data itself. An SQLXML object is valid for the duration of the transaction in which it was created.</source>
          <target state="translated">SQL XML型のJavaTMプログラミング言語でのマッピング。XML は、XML 値をデータベーステーブルの行の列値として格納する組み込み型です。デフォルトでは、ドライバは SQLXML オブジェクトを、データ自体ではなく XML データへの論理ポインタとして実装します。SQLXML オブジェクトは、そのオブジェクトが作成されたトランザクションの期間中有効です。</target>
        </trans-unit>
        <trans-unit id="e1c4016a1547ff269142e86df6754b622f9096c2" translate="yes" xml:space="preserve">
          <source>The mapping is as follows:</source>
          <target state="translated">そのマッピングは以下のようになっています。</target>
        </trans-unit>
        <trans-unit id="070cdcd14f1b28d83ab8a6aeee5919d756ab62c0" translate="yes" xml:space="preserve">
          <source>The masks are also used to specify to which types of events an AWTEventListener should listen. The masks are bitwise-ORed together and passed to Toolkit.addAWTEventListener.</source>
          <target state="translated">マスクは、AWTEventListenerがリッスンするイベントの種類を指定するためにも使用されます。マスクはビット単位でORされ、Toolkit.addAWTEventListenerに渡されます。</target>
        </trans-unit>
        <trans-unit id="b44258d85a346a4c9b6eb26fc12ad6d8021de13a" translate="yes" xml:space="preserve">
          <source>The match flags specified when this pattern was compiled</source>
          <target state="translated">このパターンがコンパイルされたときに指定されたマッチフラグ</target>
        </trans-unit>
        <trans-unit id="b6161dc0d1d482e470d3b40c8580a8c7a9b72e62" translate="yes" xml:space="preserve">
          <source>The matchAllNames flag is &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="translated">matchAllNamesフラグはデフォルトで &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="83a79f7443cf79cc4fa21a88607c23e056fb21d4" translate="yes" xml:space="preserve">
          <source>The matching element or &lt;code&gt;null&lt;/code&gt; if there is none.</source>
          <target state="translated">一致する要素。存在しない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bca93fe90b1b894db1cfc72931b5ea41fde9342c" translate="yes" xml:space="preserve">
          <source>The matching of &lt;a href=&quot;path#getRoot()&quot;&gt;&lt;code&gt;root&lt;/code&gt;&lt;/a&gt; components is highly implementation-dependent and is not specified.</source>
          <target state="translated">&lt;a href=&quot;path#getRoot()&quot;&gt; &lt;code&gt;root&lt;/code&gt; &lt;/a&gt;コンポーネントのマッチングは実装に大きく依存し、指定されていません。</target>
        </trans-unit>
        <trans-unit id="9bde4024a82b87c160e08374c35154b8fc469748" translate="yes" xml:space="preserve">
          <source>The matching of &lt;a href=&quot;path#getRoot--&quot;&gt;&lt;code&gt;root&lt;/code&gt;&lt;/a&gt; components is highly implementation-dependent and is not specified.</source>
          <target state="translated">&lt;a href=&quot;path#getRoot--&quot;&gt; &lt;code&gt;root&lt;/code&gt; &lt;/a&gt;コンポーネントのマッチングは実装に大きく依存し、指定されていません。</target>
        </trans-unit>
        <trans-unit id="bf6178e4c5f6199ffdea85dc0025cfc04da4e3b8" translate="yes" xml:space="preserve">
          <source>The matrix associated with this band combine operation.</source>
          <target state="translated">このバンドコンバイン操作に関連付けられた行列。</target>
        </trans-unit>
        <trans-unit id="f72eb688190acfe479f553b3a38062f652d5b181" translate="yes" xml:space="preserve">
          <source>The matrix representing the returned transform is:</source>
          <target state="translated">返された変換を表す行列は,次のようになります.</target>
        </trans-unit>
        <trans-unit id="3d6e9efeee5e8c75c854f1ccf14ca0392463338e" translate="yes" xml:space="preserve">
          <source>The matrix representing this transform becomes:</source>
          <target state="translated">この変換を表す行列は次のようになります。</target>
        </trans-unit>
        <trans-unit id="c1fa5aaa90da896f57abcdb817d4038ebd7a2b72" translate="yes" xml:space="preserve">
          <source>The maximize button text property.</source>
          <target state="translated">最大化ボタンのテキストプロパティです。</target>
        </trans-unit>
        <trans-unit id="20326d370501a0af41665f4c9a5ca80891b61f78" translate="yes" xml:space="preserve">
          <source>The maximize button.</source>
          <target state="translated">最大化ボタンです。</target>
        </trans-unit>
        <trans-unit id="dafe5c013a4d23dd7d97352d183fb7befdc1ae98" translate="yes" xml:space="preserve">
          <source>The maximize icon.</source>
          <target state="translated">最大化のアイコンです。</target>
        </trans-unit>
        <trans-unit id="fed4268f693a6541532c56cc66c5cf2f9c565e69" translate="yes" xml:space="preserve">
          <source>The maximum allowed length of the domain name in this implementation is &lt;code&gt;Integer.MAX_VALUE/4&lt;/code&gt;</source>
          <target state="translated">この実装で許可されるドメイン名の最大長は &lt;code&gt;Integer.MAX_VALUE/4&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4304755a2aafc9e7c8b0e05b8ff5b0b036a8a9a3" translate="yes" xml:space="preserve">
          <source>The maximum amount by which the left side of this glyph can grow.</source>
          <target state="translated">このグリフの左側が成長できる最大量。</target>
        </trans-unit>
        <trans-unit id="0c31d2a2db4cd524c3f8ca2915ec9d8ee723482b" translate="yes" xml:space="preserve">
          <source>The maximum amount by which the left side of this glyph can shrink (a positive number).</source>
          <target state="translated">このグリフの左側が縮むことができる最大量(正の数)。</target>
        </trans-unit>
        <trans-unit id="8fe564f1a9e6b8c8a78cadb8e8049f985c60ce98" translate="yes" xml:space="preserve">
          <source>The maximum amount by which the right side of this glyph can grow.</source>
          <target state="translated">このグリフの右側が成長できる最大量。</target>
        </trans-unit>
        <trans-unit id="5267028f1e50e91bfa8aed05f8762e1d741b42fc" translate="yes" xml:space="preserve">
          <source>The maximum amount by which the right side of this glyph can shrink (a positive number).</source>
          <target state="translated">このグリフの右側が縮むことができる最大量(正の数)。</target>
        </trans-unit>
        <trans-unit id="caaaddcac02d29b7e0729b8b5a3f5eaa939992e8" translate="yes" xml:space="preserve">
          <source>The maximum normalized component value.</source>
          <target state="translated">正規化された成分値の最大値。</target>
        </trans-unit>
        <trans-unit id="da03290405b7c1d565b96a7f711d623661662ec8" translate="yes" xml:space="preserve">
          <source>The maximum number of arguments is limited by the maximum dimension of a Java array as defined by</source>
          <target state="translated">引数の最大数は、Java配列の最大次元によって制限されています。</target>
        </trans-unit>
        <trans-unit id="ca2a7698e53e08ca40902d31c125a0421b565e34" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes that will be produced per character of input</source>
          <target state="translated">入力の1文字あたりに生成される最大バイト数</target>
        </trans-unit>
        <trans-unit id="7e9aed519157935d36669fabf1cedde3311fc915" translate="yes" xml:space="preserve">
          <source>The maximum number of characters that will be produced per byte of input</source>
          <target state="translated">入力の1バイトあたりに生成される最大文字数</target>
        </trans-unit>
        <trans-unit id="91152b63e685cd48eb7d0248d3371320972bb796" translate="yes" xml:space="preserve">
          <source>The maximum number of entries that will be returned.</source>
          <target state="translated">返されるエントリの最大数。</target>
        </trans-unit>
        <trans-unit id="79be7d1b45b94d650237ca9ef607fb0644e6d715" translate="yes" xml:space="preserve">
          <source>The maximum number of progressive passes to read from the source.</source>
          <target state="translated">ソースから読み込むプログレッシブパスの最大数。</target>
        </trans-unit>
        <trans-unit id="c789ee02ecf9b1e05f4f980e654a03a1c6c8656a" translate="yes" xml:space="preserve">
          <source>The maximum number of progressive passes to read from the source. By default, the value is set to &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;, which indicates that passes up to and including the last available pass should be decoded.</source>
          <target state="translated">ソースから読み取るプログレッシブパスの最大数。デフォルトでは、値は &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; に設定されています。これは、最後の使用可能なパスまでのパスがデコードされることを示します。</target>
        </trans-unit>
        <trans-unit id="0478f40fe1f37871e583557d8be429e250c42fb2" translate="yes" xml:space="preserve">
          <source>The maximum number of sort keys is enforced by &lt;code&gt;toggleSortOrder&lt;/code&gt;. You can specify more sort keys by invoking &lt;code&gt;setSortKeys&lt;/code&gt; directly and they will all be honored. However if &lt;code&gt;toggleSortOrder&lt;/code&gt; is subsequently invoked the maximum number of sort keys will be enforced. The default value is 3.</source>
          <target state="translated">ソートキーの最大数は、 &lt;code&gt;toggleSortOrder&lt;/code&gt; によって適用されます。 &lt;code&gt;setSortKeys&lt;/code&gt; を直接呼び出すことで、より多くのソートキーを指定でき、それらはすべて尊重されます。ただし、その後 &lt;code&gt;toggleSortOrder&lt;/code&gt; が呼び出されると、最大数のソートキーが適用されます。デフォルト値は3です。</target>
        </trans-unit>
        <trans-unit id="fbbdc1258f7173253696d9e64d4c4a658afd6ade" translate="yes" xml:space="preserve">
          <source>The maximum priority that a thread can have.</source>
          <target state="translated">スレッドが持つことができる最大の優先度。</target>
        </trans-unit>
        <trans-unit id="a36a818c4f9c33f17fb433826771d2ce806e0080" translate="yes" xml:space="preserve">
          <source>The maximum queue length for incoming connection indications (a request to connect) is set to &lt;code&gt;50&lt;/code&gt;. If a connection indication arrives when the queue is full, the connection is refused.</source>
          <target state="translated">着信接続表示（接続要求）の最大キュー長は &lt;code&gt;50&lt;/code&gt; に設定されています。キューがいっぱいのときに接続指示が到着すると、接続は拒否されます。</target>
        </trans-unit>
        <trans-unit id="6cc426f28f7320449dfe90a3a16a1a1b1f8164e7" translate="yes" xml:space="preserve">
          <source>The maximum queue length for incoming connection indications (a request to connect) is set to the &lt;code&gt;backlog&lt;/code&gt; parameter. If a connection indication arrives when the queue is full, the connection is refused.</source>
          <target state="translated">着信接続表示（接続要求）の最大キュー長は、 &lt;code&gt;backlog&lt;/code&gt; パラメータに設定されます。キューがいっぱいのときに接続指示が到着すると、接続は拒否されます。</target>
        </trans-unit>
        <trans-unit id="4e76f165176d7e28c6b59c285a7ee8af5a71fc72" translate="yes" xml:space="preserve">
          <source>The maximum radix available for conversion to and from strings.</source>
          <target state="translated">文字列への変換と文字列からの変換で利用可能な最大基数。</target>
        </trans-unit>
        <trans-unit id="8c6409d2fd9d317951cab0b13d3c92c453ac5d7d" translate="yes" xml:space="preserve">
          <source>The maximum radix available for conversion to and from strings. The constant value of this field is the largest value permitted for the radix argument in radix-conversion methods such as the &lt;code&gt;digit&lt;/code&gt; method, the &lt;code&gt;forDigit&lt;/code&gt; method, and the &lt;code&gt;toString&lt;/code&gt; method of class &lt;code&gt;Integer&lt;/code&gt;.</source>
          <target state="translated">文字列との変換に使用できる最大の基数。このフィールドの定数値は、クラス &lt;code&gt;Integer&lt;/code&gt; の &lt;code&gt;digit&lt;/code&gt; メソッド、 &lt;code&gt;forDigit&lt;/code&gt; メソッド、 &lt;code&gt;toString&lt;/code&gt; メソッドなどの基数変換メソッドの基数引数に許可されている最大値です。</target>
        </trans-unit>
        <trans-unit id="f3a3a07104e7ef00f419dbb752b94c72537382fa" translate="yes" xml:space="preserve">
          <source>The maximum read ahead allowed after a call to the &lt;code&gt;mark&lt;/code&gt; method before subsequent calls to the &lt;code&gt;reset&lt;/code&gt; method fail.</source>
          <target state="translated">&lt;code&gt;mark&lt;/code&gt; メソッドの呼び出し後、 &lt;code&gt;reset&lt;/code&gt; メソッドの後続の呼び出しが失敗する前に許可される最大先読み。</target>
        </trans-unit>
        <trans-unit id="686e085cad769598f4690d3665f22a215c1c0ea4" translate="yes" xml:space="preserve">
          <source>The maximum read ahead allowed after a call to the &lt;code&gt;mark&lt;/code&gt; method before subsequent calls to the &lt;code&gt;reset&lt;/code&gt; method fail. Whenever the difference between &lt;code&gt;pos&lt;/code&gt; and &lt;code&gt;markpos&lt;/code&gt; exceeds &lt;code&gt;marklimit&lt;/code&gt;, then the mark may be dropped by setting &lt;code&gt;markpos&lt;/code&gt; to &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mark&lt;/code&gt; メソッドの呼び出し後、 &lt;code&gt;reset&lt;/code&gt; メソッドの後続の呼び出しが失敗する前に許可される最大先読み。 &lt;code&gt;pos&lt;/code&gt; と &lt;code&gt;markpos&lt;/code&gt; の差がmarklimitを超える場合は &lt;code&gt;marklimit&lt;/code&gt; 、 &lt;code&gt;markpos&lt;/code&gt; を &lt;code&gt;-1&lt;/code&gt; に設定することでマークを削除できます。</target>
        </trans-unit>
        <trans-unit id="cde12ff04949c15a881f89fbe0182caa7125e32d" translate="yes" xml:space="preserve">
          <source>The maximum size allowed.</source>
          <target state="translated">許された最大サイズ。</target>
        </trans-unit>
        <trans-unit id="ef1976d2f2dd62e42dde8526a7697fca9d5af5a1" translate="yes" xml:space="preserve">
          <source>The maximum size allowed. For a component &lt;code&gt;comp&lt;/code&gt;, this should be equal to either &lt;code&gt;comp.getMaximumSize().width&lt;/code&gt; or &lt;code&gt;comp.getMaximumSize().height&lt;/code&gt;.</source>
          <target state="translated">許可される最大サイズ。コンポーネント &lt;code&gt;comp&lt;/code&gt; の場合、これは &lt;code&gt;comp.getMaximumSize().width&lt;/code&gt; または &lt;code&gt;comp.getMaximumSize().height&lt;/code&gt; いずれかと等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="3fc218541d1e04f65cfa7e7c0d95141ef5e61d7f" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;Instant&lt;/code&gt;, '1000000000-12-31T23:59:59.999999999Z'.</source>
          <target state="translated">サポートされている最大 &lt;code&gt;Instant&lt;/code&gt; 、「1000000000-12-31T23：59：59.999999999Z」。</target>
        </trans-unit>
        <trans-unit id="04ce11fe3c27aa7aa9f2ef249ac2e65e1dc4e4ea" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;Instant&lt;/code&gt;, '1000000000-12-31T23:59:59.999999999Z'. This could be used by an application as a &quot;far future&quot; instant.</source>
          <target state="translated">サポートされる最大の &lt;code&gt;Instant&lt;/code&gt; 、「1000000000-12-31T23：59：59.999999999Z」。これは、「遠い未来」の瞬間としてアプリケーションで使用できます。</target>
        </trans-unit>
        <trans-unit id="d8bdb11e05ddef7808311da08422e5ca0efacaf6" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;LocalDate&lt;/code&gt;, '+999999999-12-31'.</source>
          <target state="translated">サポートされる最大の &lt;code&gt;LocalDate&lt;/code&gt; 、「+ 999999999-12-31」。</target>
        </trans-unit>
        <trans-unit id="e0429cd3a2343e86a77ff7f695d6193f6a24e2a6" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;LocalDate&lt;/code&gt;, '+999999999-12-31'. This could be used by an application as a &quot;far future&quot; date.</source>
          <target state="translated">サポートされている最大の &lt;code&gt;LocalDate&lt;/code&gt; 、「+ 999999999-12-31」。これは、アプリケーションで「遠い」日付として使用できます。</target>
        </trans-unit>
        <trans-unit id="d2eff0863fd6d4cbc5acf0b15a2d8ccc04810718" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;LocalDateTime&lt;/code&gt;, '+999999999-12-31T23:59:59.999999999'.</source>
          <target state="translated">サポートされている最大の &lt;code&gt;LocalDateTime&lt;/code&gt; 、 '+ 999999999-12-31T23：59：59.999999999'。</target>
        </trans-unit>
        <trans-unit id="744d761c58cd3ade37321eaf06b55bc7687217a1" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;LocalDateTime&lt;/code&gt;, '+999999999-12-31T23:59:59.999999999'. This is the local date-time just before midnight at the end of the maximum date. This combines &lt;a href=&quot;localdate#MAX&quot;&gt;&lt;code&gt;LocalDate.MAX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localtime#MAX&quot;&gt;&lt;code&gt;LocalTime.MAX&lt;/code&gt;&lt;/a&gt;. This could be used by an application as a &quot;far future&quot; date-time.</source>
          <target state="translated">サポートされている最大の &lt;code&gt;LocalDateTime&lt;/code&gt; 、「+ 999999999-12-31T23：59：59.999999999」。これは、最大日付の終わりの真夜中直前のローカル日付時刻です。これは&lt;a href=&quot;localdate#MAX&quot;&gt; &lt;code&gt;LocalDate.MAX&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;localtime#MAX&quot;&gt; &lt;code&gt;LocalTime.MAX&lt;/code&gt; を&lt;/a&gt;組み合わせたものです。これは、「遠い未来」の日時としてアプリケーションで使用できます。</target>
        </trans-unit>
        <trans-unit id="708651e23cf9a3e7e3f159ce07c8fa26f5953b8b" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;LocalTime&lt;/code&gt;, '23:59:59.999999999'.</source>
          <target state="translated">サポートされている最大の &lt;code&gt;LocalTime&lt;/code&gt; 、「23：59：59.999999999」。</target>
        </trans-unit>
        <trans-unit id="a192d7e44fca6c6034ef03db938f5c28d8840499" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;LocalTime&lt;/code&gt;, '23:59:59.999999999'. This is the time just before midnight at the end of the day.</source>
          <target state="translated">サポートされる最大の &lt;code&gt;LocalTime&lt;/code&gt; 、「23：59：59.999999999」。これは、一日の終わりの真夜中直前の時間です。</target>
        </trans-unit>
        <trans-unit id="8d5d0536c7f2d7b197a4d1276e3d35e8f6c3d2ce" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;OffsetDateTime&lt;/code&gt;, '+999999999-12-31T23:59:59.999999999-18:00'.</source>
          <target state="translated">サポートされている最大の &lt;code&gt;OffsetDateTime&lt;/code&gt; 、「+ 999999999-12-31T23：59：59.999999999-18：00」。</target>
        </trans-unit>
        <trans-unit id="251ab3d26132087a17d987a3306ea536b764e3b4" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;OffsetDateTime&lt;/code&gt;, '+999999999-12-31T23:59:59.999999999-18:00'. This is the local date-time just before midnight at the end of the maximum date in the minimum offset (larger negative offsets are later on the time-line). This combines &lt;a href=&quot;localdatetime#MAX&quot;&gt;&lt;code&gt;LocalDateTime.MAX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffset#MIN&quot;&gt;&lt;code&gt;ZoneOffset.MIN&lt;/code&gt;&lt;/a&gt;. This could be used by an application as a &quot;far future&quot; date-time.</source>
          <target state="translated">サポートされる最大の &lt;code&gt;OffsetDateTime&lt;/code&gt; 、「+ 999999999-12-31T23：59：59.999999999-18：00」。これは、最小オフセットの最大日付の終わりの真夜中直前のローカル日付時刻です（大きな負のオフセットは後からタイムラインに表示されます）。これは、&lt;a href=&quot;localdatetime#MAX&quot;&gt; &lt;code&gt;LocalDateTime.MAX&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;zoneoffset#MIN&quot;&gt; &lt;code&gt;ZoneOffset.MIN&lt;/code&gt; を&lt;/a&gt;組み合わせたものです。これは、「遠い未来」の日時としてアプリケーションで使用できます。</target>
        </trans-unit>
        <trans-unit id="6888150958c5e1391109e70e7d9b5a79b259d824" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;OffsetTime&lt;/code&gt;, '23:59:59.999999999-18:00'.</source>
          <target state="translated">サポートされている最大 &lt;code&gt;OffsetTime&lt;/code&gt; 、「23：59：59.999999999-18：00」。</target>
        </trans-unit>
        <trans-unit id="b48f7359abf2b721e4ffc36d002f51c3e787a1e9" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;OffsetTime&lt;/code&gt;, '23:59:59.999999999-18:00'. This is the time just before midnight at the end of the day in the minimum offset (larger negative offsets are later on the time-line). This combines &lt;a href=&quot;localtime#MAX&quot;&gt;&lt;code&gt;LocalTime.MAX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffset#MIN&quot;&gt;&lt;code&gt;ZoneOffset.MIN&lt;/code&gt;&lt;/a&gt;. This could be used by an application as a &quot;far future&quot; date.</source>
          <target state="translated">サポートされる最大の &lt;code&gt;OffsetTime&lt;/code&gt; 、「23：59：59.999999999-18：00」。これは、最小オフセットでの1日の終わりの真夜中直前の時刻です（大きな負のオフセットは、タイムラインで後になります）。これは&lt;a href=&quot;localtime#MAX&quot;&gt; &lt;code&gt;LocalTime.MAX&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;zoneoffset#MIN&quot;&gt; &lt;code&gt;ZoneOffset.MIN&lt;/code&gt; を&lt;/a&gt;組み合わせたものです。これは、アプリケーションで「遠い」日付として使用できます。</target>
        </trans-unit>
        <trans-unit id="db55fe69812e7a35add31fe3f898cbec3f75e877" translate="yes" xml:space="preserve">
          <source>The maximum supported range is from +18:00 to -18:00 inclusive.</source>
          <target state="translated">最大サポート範囲は+18:00から-18:00までです。</target>
        </trans-unit>
        <trans-unit id="c0a2c5b8a90ac648ea5c3d32022df7abb7a348b9" translate="yes" xml:space="preserve">
          <source>The maximum supported year, '+999,999,999'.</source>
          <target state="translated">サポートされている最大の年、'+999,999,999'です。</target>
        </trans-unit>
        <trans-unit id="6076022801aa2a830903e2357ca4ec9a03cb7cb0" translate="yes" xml:space="preserve">
          <source>The maximum value for reserved AWT event IDs.</source>
          <target state="translated">予約されたAWTイベントIDの最大値。</target>
        </trans-unit>
        <trans-unit id="d3911eb56181b40f7a9d04f8fc8a8a683e53707f" translate="yes" xml:space="preserve">
          <source>The maximum value for reserved AWT event IDs. Programs defining their own event IDs should use IDs greater than this value.</source>
          <target state="translated">予約されたAWTイベントIDの最大値。独自のイベントIDを定義するプログラムでは、この値よりも大きいIDを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="edefbb253da2c09881430a08425fc9be7f90b625" translate="yes" xml:space="preserve">
          <source>The maximum value of a &lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt; Unicode code point&lt;/a&gt;, constant &lt;code&gt;U+10FFFF&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;Unicodeコードポイント&lt;/a&gt;の最大値、定数 &lt;code&gt;U+10FFFF&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3a7910bd6efd0e6ebb4dcf27163b29a601e65d6" translate="yes" xml:space="preserve">
          <source>The maximum value of a &lt;a href=&quot;http://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt; Unicode high-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uDBFF'&lt;/code&gt;.</source>
          <target state="translated">UTF-16エンコーディングでの&lt;a href=&quot;http://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt;Unicodeハイサロゲートコードユニット&lt;/a&gt;の最大値、定数 &lt;code&gt;'\uDBFF'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9cb824afcd96246aeae16307929222db177a085" translate="yes" xml:space="preserve">
          <source>The maximum value of a &lt;a href=&quot;http://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt; Unicode high-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uDBFF'&lt;/code&gt;. A high-surrogate is also known as a</source>
          <target state="translated">UTF-16エンコーディングでの&lt;a href=&quot;http://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt;Unicode高代理コードユニット&lt;/a&gt;の最大値、定数 &lt;code&gt;'\uDBFF'&lt;/code&gt; 。高代理は別名</target>
        </trans-unit>
        <trans-unit id="025d23141e8f218e9bdbe40f592e9e91b77c268e" translate="yes" xml:space="preserve">
          <source>The maximum value of a &lt;a href=&quot;http://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt; Unicode low-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uDFFF'&lt;/code&gt;.</source>
          <target state="translated">UTF-16エンコーディングでの&lt;a href=&quot;http://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt;Unicodeローサロゲートコードユニット&lt;/a&gt;の最大値、定数 &lt;code&gt;'\uDFFF'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b33263a788749bdc77ddfac4323c224cdfbe9ba3" translate="yes" xml:space="preserve">
          <source>The maximum value of a &lt;a href=&quot;http://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt; Unicode low-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uDFFF'&lt;/code&gt;. A low-surrogate is also known as a</source>
          <target state="translated">UTF-16エンコーディングでの&lt;a href=&quot;http://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt;Unicode低代理コードユニット&lt;/a&gt;の最大値、定数 &lt;code&gt;'\uDFFF'&lt;/code&gt; 。低サロゲートは、</target>
        </trans-unit>
        <trans-unit id="286d3939ee86174adc9c52569b3a684b11bce46b" translate="yes" xml:space="preserve">
          <source>The maximum value of a Unicode surrogate code unit in the UTF-16 encoding, constant &lt;code&gt;'\uDFFF'&lt;/code&gt;.</source>
          <target state="translated">UTF-16エンコーディングでのUnicodeサロゲートコードユニットの最大値、定数 &lt;code&gt;'\uDFFF'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42573092dce64961f85c6b925d6d388e3545023c" translate="yes" xml:space="preserve">
          <source>The maximum value of the scrollbar is maximum - extent.</source>
          <target state="translated">スクロールバーの最大値はmaximum-extentです。</target>
        </trans-unit>
        <trans-unit id="edc77352916d997bb34783351d83105819113640" translate="yes" xml:space="preserve">
          <source>The maximum value of this object.</source>
          <target state="translated">このオブジェクトの最大値。</target>
        </trans-unit>
        <trans-unit id="859c0a3084b1dd53ea5eaf4aff7fa3428c74b0d2" translate="yes" xml:space="preserve">
          <source>The maximum width of the column.</source>
          <target state="translated">列の最大幅。</target>
        </trans-unit>
        <trans-unit id="ed42f003ef90603b5afd30f83e3433a1cdb3cd3e" translate="yes" xml:space="preserve">
          <source>The meaning of the term</source>
          <target state="translated">用語の意味</target>
        </trans-unit>
        <trans-unit id="1f4e7db5483a3dd3186cbf249393ad7015cc5aae" translate="yes" xml:space="preserve">
          <source>The means by which a file type detector determines the file type is highly implementation specific. A simple implementation might examine the &lt;em&gt;file extension&lt;/em&gt; (a convention used in some platforms) and map it to a file type. In other cases, the file type may be stored as a file &lt;a href=&quot;../attribute/package-summary&quot;&gt; attribute&lt;/a&gt; or the bytes in a file may be examined to guess its file type.</source>
          <target state="translated">ファイルタイプディテクタがファイルタイプを決定する方法は、実装によって大きく異なります。単純な実装では、&lt;em&gt;ファイル拡張子&lt;/em&gt;（一部のプラットフォームで使用されている規則）を調べ、それをファイルタイプにマップします。他の場合では、ファイルタイプはファイル&lt;a href=&quot;../attribute/package-summary&quot;&gt;属性&lt;/a&gt;として保存されるか、ファイルのバイトがファイルタイプを推測するために検査される場合があります。</target>
        </trans-unit>
        <trans-unit id="a4770c800d3e35c0011221e1a554258227b54744" translate="yes" xml:space="preserve">
          <source>The means by which this method determines the file type is highly implementation specific. It may simply examine the file name, it may use a file &lt;a href=&quot;../attribute/package-summary&quot;&gt;attribute&lt;/a&gt;, or it may examines bytes in the file.</source>
          <target state="translated">このメソッドがファイルの種類を決定する方法は、実装によって大きく異なります。単にファイル名を調べたり、ファイル&lt;a href=&quot;../attribute/package-summary&quot;&gt;属性を&lt;/a&gt;使用したり、ファイル内のバイトを調べたりします。</target>
        </trans-unit>
        <trans-unit id="ab45809aa21711bcf5f58537fef1609f4b9533bd" translate="yes" xml:space="preserve">
          <source>The mechanism described here does not apply when the IIOP Remote objects (Stubs or Servers) are created and connected to an ORB manually before being passed to the RMIConnector and RMIConnectorServer.</source>
          <target state="translated">ここで説明したメカニズムは、IIOPリモートオブジェクト(スタブまたはサーバー)が作成され、RMIConnectorとRMIConnectorServerに渡される前に手動でORBに接続されている場合には適用されません。</target>
        </trans-unit>
        <trans-unit id="067d9eb74b05faea94f2c082c19d7e9ed59e0ad6" translate="yes" xml:space="preserve">
          <source>The mechanism for distributing the delta amongst the available columns is provided in a private method in the &lt;code&gt;JTable&lt;/code&gt; class:</source>
          <target state="translated">使用可能な列間でデルタを分散するためのメカニズムは、 &lt;code&gt;JTable&lt;/code&gt; クラスのプライベートメソッドで提供されます。</target>
        </trans-unit>
        <trans-unit id="31a160d09d90d413fb94d75322e249dff174488a" translate="yes" xml:space="preserve">
          <source>The mechanism name and DRBG algorithm name are determined by the &lt;a href=&quot;security#getProperty(java.lang.String)&quot;&gt;security property&lt;/a&gt;&lt;code&gt;securerandom.drbg.config&lt;/code&gt;. The default choice is Hash_DRBG with SHA-256.</source>
          <target state="translated">メカニズム名とDRBGアルゴリズム名は、&lt;a href=&quot;security#getProperty(java.lang.String)&quot;&gt;セキュリティプロパティ&lt;/a&gt; &lt;code&gt;securerandom.drbg.config&lt;/code&gt; によって決定されます。デフォルトの選択は、SHA-256を使用したHash_DRBGです。</target>
        </trans-unit>
        <trans-unit id="75b2b887cd766344d43dde743abd52969399d0c6" translate="yes" xml:space="preserve">
          <source>The media type, media subtype, and parameter names are converted to lowercase.</source>
          <target state="translated">メディアタイプ、メディアサブタイプ、パラメータ名は小文字に変換されます。</target>
        </trans-unit>
        <trans-unit id="81485a662e4b18e73d7e50de595c401a66405a84" translate="yes" xml:space="preserve">
          <source>The media type, media subtype, and parameters are retained, but all comments and whitespace characters are discarded.</source>
          <target state="translated">メディアタイプ、メディアサブタイプ、およびパラメータは保持されますが、すべてのコメントと空白文字は破棄されます。</target>
        </trans-unit>
        <trans-unit id="fa3363aae7619540e1a0d5268b085d34e5d87f7c" translate="yes" xml:space="preserve">
          <source>The member is &lt;code&gt;protected&lt;/code&gt;&lt;code&gt;static&lt;/code&gt;, &lt;code&gt;D&lt;/code&gt; is &lt;code&gt;public&lt;/code&gt; in a package that the module containing &lt;code&gt;D&lt;/code&gt; exports to at least the module containing &lt;code&gt;C&lt;/code&gt;, and &lt;code&gt;C&lt;/code&gt; is a subclass of &lt;code&gt;D&lt;/code&gt;.</source>
          <target state="translated">部材である &lt;code&gt;protected&lt;/code&gt; &lt;code&gt;static&lt;/code&gt; 、 &lt;code&gt;D&lt;/code&gt; はであり &lt;code&gt;public&lt;/code&gt; 含むモジュール、パッケージにおける &lt;code&gt;D&lt;/code&gt; の含有少なくともモジュールへの輸出 &lt;code&gt;C&lt;/code&gt; を、そして &lt;code&gt;C&lt;/code&gt; はのサブクラスである &lt;code&gt;D&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b89410dcffaf7a872471541f99f6678180a6a8a8" translate="yes" xml:space="preserve">
          <source>The member is &lt;code&gt;public&lt;/code&gt; and &lt;code&gt;D&lt;/code&gt; is &lt;code&gt;public&lt;/code&gt; in a package that the module containing &lt;code&gt;D&lt;/code&gt;&lt;a href=&quot;../module#isExported(java.lang.String,java.lang.Module)&quot;&gt;&lt;code&gt;exports&lt;/code&gt;&lt;/a&gt; to at least the module containing &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">メンバーは、 &lt;code&gt;public&lt;/code&gt; 及び &lt;code&gt;D&lt;/code&gt; は、ある &lt;code&gt;public&lt;/code&gt; モジュールが含むことをパッケージに &lt;code&gt;D&lt;/code&gt; の&lt;a href=&quot;../module#isExported(java.lang.String,java.lang.Module)&quot;&gt; &lt;code&gt;exports&lt;/code&gt; &lt;/a&gt;を含む少なくともモジュールに &lt;code&gt;C&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="f97e6177805adf7afc68c7962dee0fa667febf49" translate="yes" xml:space="preserve">
          <source>The membership key</source>
          <target state="translated">会員キー</target>
        </trans-unit>
        <trans-unit id="0e5fa7adb21c0e325c51267052603c4f999c8037" translate="yes" xml:space="preserve">
          <source>The memory effects for accesses and updates of atomics generally follow the rules for volatiles, as stated in &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html#jls-17.4&quot;&gt; The Java Language Specification (17.4 Memory Model)&lt;/a&gt;:</source>
          <target state="translated">アトミックのアクセスと更新のメモリー効果は、&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html#jls-17.4&quot;&gt;Java言語仕様（17.4メモリーモデル）に&lt;/a&gt;記載されているように、一般に揮発性のルールに従います。</target>
        </trans-unit>
        <trans-unit id="aab7acbfa43834ab7dc033f83c5c606d75b26760" translate="yes" xml:space="preserve">
          <source>The memory system of the Java virtual machine manages the following kinds of memory:</source>
          <target state="translated">Java仮想マシンのメモリシステムは、以下の種類のメモリを管理しています。</target>
        </trans-unit>
        <trans-unit id="27790702c54d1d404915dd82c93b620fa3c28c6a" translate="yes" xml:space="preserve">
          <source>The memory usage can be monitored in three ways:</source>
          <target state="translated">メモリ使用量は3つの方法で監視することができます。</target>
        </trans-unit>
        <trans-unit id="d607f7f1ba30cb36c630b3c22647d62e99ce92fd" translate="yes" xml:space="preserve">
          <source>The memory usage monitoring mechanism is intended for load-balancing or workload distribution use. For example, an application would stop receiving any new workload when its memory usage exceeds a certain threshold. It is not intended for an application to detect and recover from a low memory condition.</source>
          <target state="translated">メモリ使用量監視メカニズムは、負荷分散やワークロード分散のために使用することを意図しています。例えば、アプリケーションは、メモリ使用量がある閾値を超えると、新しいワークロードの受信を停止します。これは、アプリケーションが低メモリ状態を検出して回復することを目的としたものではありません。</target>
        </trans-unit>
        <trans-unit id="093780ce78707d757dc19b614256bc2e6651b1d0" translate="yes" xml:space="preserve">
          <source>The memory usage of the memory pool when the notification was constructed.</source>
          <target state="translated">通知が構築されたときのメモリプールのメモリ使用量。</target>
        </trans-unit>
        <trans-unit id="f920b80ca0223cf0e98906f5968692215bf83a73" translate="yes" xml:space="preserve">
          <source>The memory usage of the system can be monitored using &lt;a href=&quot;#Polling&quot;&gt;polling&lt;/a&gt; or &lt;a href=&quot;#ThresholdNotification&quot;&gt;threshold notification&lt;/a&gt; mechanisms.</source>
          <target state="translated">システムのメモリ使用量は、&lt;a href=&quot;#Polling&quot;&gt;ポーリング&lt;/a&gt;または&lt;a href=&quot;#ThresholdNotification&quot;&gt;しきい値通知&lt;/a&gt;メカニズムを使用して監視できます。</target>
        </trans-unit>
        <trans-unit id="8e5edb0774127d7a66acbb52bd0020f5a0df1d4e" translate="yes" xml:space="preserve">
          <source>The mention of URL in the documentation for this class refers to a URL string as defined by RFC 1738 and its related RFCs. It is any string that conforms to the syntax described therein, and may not always have corresponding support in the java.net.URL class or Web browsers.</source>
          <target state="translated">このクラスのドキュメントでのURLの言及は、RFC1738とその関連RFCで定義されているURL文字列を指しています。これは、そこに記載されている構文に準拠した任意の文字列であり、java.net.URLクラスやWebブラウザで対応するサポートを常に持っているとは限りません。</target>
        </trans-unit>
        <trans-unit id="1759cdc52cf9269c6c862c60009301e96c6fba53" translate="yes" xml:space="preserve">
          <source>The menu bar.</source>
          <target state="translated">メニューバーです。</target>
        </trans-unit>
        <trans-unit id="ff5d2fb3290b2743475828942fec01b928964169" translate="yes" xml:space="preserve">
          <source>The message consists of not more than &lt;code&gt;125&lt;/code&gt; bytes from the buffer's position to its limit. Upon normal completion of a &lt;code&gt;CompletableFuture&lt;/code&gt; returned from this method the buffer will have no remaining bytes. The buffer must not be accessed until after that.</source>
          <target state="translated">メッセージは、バッファの位置からその制限までの &lt;code&gt;125&lt;/code&gt; バイト以下で構成されます。このメソッドから返された &lt;code&gt;CompletableFuture&lt;/code&gt; が正常に完了すると、バッファには残りのバイトがなくなります。その後まで、バッファにアクセスしないでください。</target>
        </trans-unit>
        <trans-unit id="3019b6df3d7638a94395e6881f48979a9dad4a64" translate="yes" xml:space="preserve">
          <source>The message digest associated with this stream.</source>
          <target state="translated">このストリームに関連付けられたメッセージダイジェスト。</target>
        </trans-unit>
        <trans-unit id="70409d0fa2f61f14b8e11191ac964557890078df" translate="yes" xml:space="preserve">
          <source>The message string is first localized to a format string using the record's ResourceBundle. (If there is no ResourceBundle, or if the message key is not found, then the key is used as the format string.) The format String uses java.text style formatting.</source>
          <target state="translated">メッセージ文字列は、まずレコードのResourceBundleを使ってフォーマット文字列にローカライズされます(ResourceBundleがない場合やメッセージキーが見つからない場合は、キーがフォーマット文字列として使われます)。(ResourceBundleがない場合や、メッセージキーが見つからない場合は、そのキーがフォーマット文字列として使用されます)。フォーマット文字列は、java.text スタイルの書式設定を使用します。</target>
        </trans-unit>
        <trans-unit id="1bd240084381979a10006bdb738cc8c1d94c319c" translate="yes" xml:space="preserve">
          <source>The message string of this notification object.</source>
          <target state="translated">この通知オブジェクトのメッセージ文字列。</target>
        </trans-unit>
        <trans-unit id="701f16b46c2ce7a14276110cb7af4785b9c2047c" translate="yes" xml:space="preserve">
          <source>The message type determines which icon will be displayed in the caption of the message, and a possible system sound a message may generate upon showing.</source>
          <target state="translated">メッセージタイプは、メッセージのキャプションに表示されるアイコンと、メッセージが表示されたときに発生する可能性のあるシステムサウンドを決定します。</target>
        </trans-unit>
        <trans-unit id="b54d9c568e6be1f20ad4f6aa93ae581e62015ccb" translate="yes" xml:space="preserve">
          <source>The messages's status byte</source>
          <target state="translated">メッセージのステータスバイト</target>
        </trans-unit>
        <trans-unit id="a72cf44ed0b2379b5bd18fbbfcf576f977b2239c" translate="yes" xml:space="preserve">
          <source>The meta modifier.</source>
          <target state="translated">メタ修飾子。</target>
        </trans-unit>
        <trans-unit id="9366f95e074485ed30640a0891257c1b701a3d6e" translate="yes" xml:space="preserve">
          <source>The meta modifier. An indicator that the meta key was held down during the event.</source>
          <target state="translated">メタ修飾子。イベント中にメタキーが押されたことを示します。</target>
        </trans-unit>
        <trans-unit id="a0e34f930595246eb4ac871034e3d19c8c2aa069" translate="yes" xml:space="preserve">
          <source>The meta-data describing the make up of the WebRowSet is described in XML as detailed below. Note both columns are described between the &lt;code&gt;column-definition&lt;/code&gt; tags.</source>
          <target state="translated">WebRowSetの構成を説明するメタデータは、以下に詳述するようにXMLで説明されています。両方の列が &lt;code&gt;column-definition&lt;/code&gt; タグの間に記述されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8d68f77bdf14b55708f4d157fe026ae1c1203526" translate="yes" xml:space="preserve">
          <source>The metadata, including JDBC properties and Synchronization SPI properties, are maintained for future use. It is important that properties such as the &lt;code&gt;command&lt;/code&gt; property be relevant to the originating data source from which this &lt;code&gt;CachedRowSet&lt;/code&gt; object was originally established.</source>
          <target state="translated">JDBCプロパティとSynchronizationSPIプロパティを含むメタデータは、将来の使用のために維持されます。 &lt;code&gt;command&lt;/code&gt; プロパティなどのプロパティは、この &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトが最初に確立された元のデータソースに関連していることが重要です。</target>
        </trans-unit>
        <trans-unit id="5900ffc1a8cc8517558f23fdade036b528a82fc8" translate="yes" xml:space="preserve">
          <source>The metal look and feel implementation of &lt;code&gt;TreeUI&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TreeUI&lt;/code&gt; のメタルルックアンドフィール実装。</target>
        </trans-unit>
        <trans-unit id="be84738a01f2fa95124f69a96842b9e168315acd" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;#divide(java.math.BigDecimal,int,java.math.RoundingMode)&quot;&gt;&lt;code&gt;divide(BigDecimal, int, RoundingMode)&lt;/code&gt;&lt;/a&gt; should be used in preference to this legacy method.</source>
          <target state="translated">メソッド&lt;a href=&quot;#divide(java.math.BigDecimal,int,java.math.RoundingMode)&quot;&gt; &lt;code&gt;divide(BigDecimal, int, RoundingMode)&lt;/code&gt; &lt;/a&gt;、この従来の方法に優先して使用すべきです。</target>
        </trans-unit>
        <trans-unit id="fb5fe665c934cde2294e893fc3d1feab13203fea" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;#divide(java.math.BigDecimal,java.math.RoundingMode)&quot;&gt;&lt;code&gt;divide(BigDecimal, RoundingMode)&lt;/code&gt;&lt;/a&gt; should be used in preference to this legacy method.</source>
          <target state="translated">メソッド&lt;a href=&quot;#divide(java.math.BigDecimal,java.math.RoundingMode)&quot;&gt; &lt;code&gt;divide(BigDecimal, RoundingMode)&lt;/code&gt; &lt;/a&gt;、この従来の方法に優先して使用すべきです。</target>
        </trans-unit>
        <trans-unit id="499c73378695ae873e56bb393dd46618f2de7514" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;#forLanguageTag(java.lang.String)&quot;&gt;&lt;code&gt;forLanguageTag(java.lang.String)&lt;/code&gt;&lt;/a&gt; creates a &lt;code&gt;Locale&lt;/code&gt; object for a well-formed BCP 47 language tag.</source>
          <target state="translated">&lt;a href=&quot;#forLanguageTag(java.lang.String)&quot;&gt; &lt;code&gt;forLanguageTag(java.lang.String)&lt;/code&gt; &lt;/a&gt;メソッドは、整形式のBCP47言語タグの &lt;code&gt;Locale&lt;/code&gt; オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="9d7a73950a6855c798644b49adc279997126bbed" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;#isDigit(int)&quot;&gt;&lt;code&gt;isDigit(codePoint)&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; of the character and the Unicode decimal digit value of the character (or its single-character decomposition) is less than the specified radix. In this case the decimal digit value is returned.</source>
          <target state="translated">メソッド&lt;a href=&quot;#isDigit(int)&quot;&gt; &lt;code&gt;isDigit(codePoint)&lt;/code&gt; &lt;/a&gt;は文字に &lt;code&gt;true&lt;/code&gt; 、文字のUnicode 10進数値（またはその1文字の分解）は指定された基数よりも小さくなります。この場合、10進数の値が返されます。</target>
        </trans-unit>
        <trans-unit id="b60f3cb9831db36f9ceca2a61e181635cf5b7b39" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;#setScale(int,java.math.RoundingMode)&quot;&gt;&lt;code&gt;setScale(int, RoundingMode)&lt;/code&gt;&lt;/a&gt; should be used in preference to this legacy method.</source>
          <target state="translated">このレガシーメソッドよりも&lt;a href=&quot;#setScale(int,java.math.RoundingMode)&quot;&gt; &lt;code&gt;setScale(int, RoundingMode)&lt;/code&gt; &lt;/a&gt;メソッドsetScale（int、RoundingMode）を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="107e4589942e2891e9ffdd66028ef7c4561dc66d" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../chrono/chronology#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;Chronology.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;Chronology::from&lt;/code&gt;. That method is equivalent to this query, except that it throws an exception if a chronology cannot be obtained.</source>
          <target state="translated">メソッド&lt;a href=&quot;../chrono/chronology#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;Chronology.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;は、メソッド参照 &lt;code&gt;Chronology::from&lt;/code&gt; 介して &lt;code&gt;TemporalQuery&lt;/code&gt; として使用できます。このメソッドは、年表を取得できない場合に例外をスローすることを除いて、このクエリと同等です。</target>
        </trans-unit>
        <trans-unit id="d2920b888cd3183590608cb7f05eefbb9147b9fa" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../chrono/chronology#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;Chronology.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;Chronology::from&lt;/code&gt;. That method is equivalent to this query, except that it throws an exception if a chronology cannot be obtained.</source>
          <target state="translated">メソッド&lt;a href=&quot;../chrono/chronology#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;Chronology.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;は、メソッド参照 &lt;code&gt;Chronology::from&lt;/code&gt; 介して &lt;code&gt;TemporalQuery&lt;/code&gt; として使用できます。そのメソッドはこのクエリと同等ですが、年表が取得できない場合に例外をスローします。</target>
        </trans-unit>
        <trans-unit id="2968320949ff8e3f076ab7282eb5f4f10c500e16" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../zoneid#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;ZoneId.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;ZoneId::from&lt;/code&gt;. That method is equivalent to this query, except that it throws an exception if a zone cannot be obtained.</source>
          <target state="translated">メソッド&lt;a href=&quot;../zoneid#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;ZoneId.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;は、メソッド参照 &lt;code&gt;ZoneId::from&lt;/code&gt; 介して &lt;code&gt;TemporalQuery&lt;/code&gt; として使用できます。このメソッドは、ゾーンを取得できない場合に例外をスローすることを除いて、このクエリと同等です。</target>
        </trans-unit>
        <trans-unit id="0fadbd5dc81bbd2e66fe9ce72197e29cd159b1e9" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../zoneid#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;ZoneId.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;ZoneId::from&lt;/code&gt;. That method is equivalent to this query, except that it throws an exception if a zone cannot be obtained.</source>
          <target state="translated">メソッド&lt;a href=&quot;../zoneid#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;ZoneId.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;は、メソッド参照 &lt;code&gt;ZoneId::from&lt;/code&gt; 介して &lt;code&gt;TemporalQuery&lt;/code&gt; として使用できます。このメソッドは、ゾーンを取得できない場合に例外をスローすることを除いて、このクエリと同等です。</target>
        </trans-unit>
        <trans-unit id="8417bab054d7bf1a2e1834915a9ee9f2fada3522" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../zoneoffset#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;LocalDate::from&lt;/code&gt;. This query and &lt;code&gt;LocalDate::from&lt;/code&gt; will return the same result if the temporal object contains a date. If the temporal object does not contain a date, then the method reference will throw an exception, whereas this query will return null.</source>
          <target state="translated">メソッド&lt;a href=&quot;../zoneoffset#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;は、メソッド参照 &lt;code&gt;LocalDate::from&lt;/code&gt; 介して &lt;code&gt;TemporalQuery&lt;/code&gt; として使用できます。このクエリと &lt;code&gt;LocalDate::from&lt;/code&gt; は、一時オブジェクトに日付が含まれている場合、同じ結果を返します。一時オブジェクトに日付が含まれていない場合、メソッド参照は例外をスローしますが、このクエリはnullを返します。</target>
        </trans-unit>
        <trans-unit id="7910c769189f0da72816dcd1ec8967ad31ddc5fe" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../zoneoffset#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;LocalTime::from&lt;/code&gt;. This query and &lt;code&gt;LocalTime::from&lt;/code&gt; will return the same result if the temporal object contains a time. If the temporal object does not contain a time, then the method reference will throw an exception, whereas this query will return null.</source>
          <target state="translated">メソッド&lt;a href=&quot;../zoneoffset#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;は、メソッド参照 &lt;code&gt;LocalTime::from&lt;/code&gt; 介して &lt;code&gt;TemporalQuery&lt;/code&gt; として使用できます。このクエリと &lt;code&gt;LocalTime::from&lt;/code&gt; は、時間オブジェクトに時間が含まれている場合、同じ結果を返します。時間オブジェクトに時間が含まれていない場合、メソッド参照は例外をスローしますが、このクエリはnullを返します。</target>
        </trans-unit>
        <trans-unit id="7437ff2a2270580f52fdbcaad5f2d8c807f5894a" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../zoneoffset#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;ZoneOffset::from&lt;/code&gt;. This query and &lt;code&gt;ZoneOffset::from&lt;/code&gt; will return the same result if the temporal object contains an offset. If the temporal object does not contain an offset, then the method reference will throw an exception, whereas this query will return null.</source>
          <target state="translated">メソッド&lt;a href=&quot;../zoneoffset#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;は、メソッド参照 &lt;code&gt;ZoneOffset::from&lt;/code&gt; 介して &lt;code&gt;TemporalQuery&lt;/code&gt; として使用できます。このクエリと &lt;code&gt;ZoneOffset::from&lt;/code&gt; は、時間オブジェクトにオフセットが含まれている場合、同じ結果を返します。時間オブジェクトにオフセットが含まれていない場合、メソッド参照は例外をスローしますが、このクエリはnullを返します。</target>
        </trans-unit>
        <trans-unit id="99349278854aaea800ab628dbf65223df309ab09" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../zoneoffset#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;LocalDate::from&lt;/code&gt;. This query and &lt;code&gt;LocalDate::from&lt;/code&gt; will return the same result if the temporal object contains a date. If the temporal object does not contain a date, then the method reference will throw an exception, whereas this query will return null.</source>
          <target state="translated">メソッド&lt;a href=&quot;../zoneoffset#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;は、メソッド参照 &lt;code&gt;LocalDate::from&lt;/code&gt; 介して &lt;code&gt;TemporalQuery&lt;/code&gt; として使用できます。一時オブジェクトに日付が含まれている場合、このクエリと &lt;code&gt;LocalDate::from&lt;/code&gt; は同じ結果を返します。一時オブジェクトに日付が含まれていない場合、メソッド参照は例外をスローしますが、このクエリはnullを返します。</target>
        </trans-unit>
        <trans-unit id="6936a4796665371bcc6fe68524a9d8cf7935a697" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../zoneoffset#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;LocalTime::from&lt;/code&gt;. This query and &lt;code&gt;LocalTime::from&lt;/code&gt; will return the same result if the temporal object contains a time. If the temporal object does not contain a time, then the method reference will throw an exception, whereas this query will return null.</source>
          <target state="translated">メソッド&lt;a href=&quot;../zoneoffset#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;は、メソッド参照 &lt;code&gt;LocalTime::from&lt;/code&gt; 介して &lt;code&gt;TemporalQuery&lt;/code&gt; として使用できます。このクエリと &lt;code&gt;LocalTime::from&lt;/code&gt; は、時間オブジェクトに時間が含まれている場合、同じ結果を返します。時間的オブジェクトに時間が含まれていない場合、メソッド参照は例外をスローしますが、このクエリはnullを返します。</target>
        </trans-unit>
        <trans-unit id="017484d9fd6cdf516726d1ddbd8dc6b63c039d60" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../zoneoffset#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;ZoneOffset::from&lt;/code&gt;. This query and &lt;code&gt;ZoneOffset::from&lt;/code&gt; will return the same result if the temporal object contains an offset. If the temporal object does not contain an offset, then the method reference will throw an exception, whereas this query will return null.</source>
          <target state="translated">メソッド&lt;a href=&quot;../zoneoffset#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;は、メソッド参照 &lt;code&gt;ZoneOffset::from&lt;/code&gt; 介して &lt;code&gt;TemporalQuery&lt;/code&gt; として使用できます。一時オブジェクトにオフセットが含まれている場合、このクエリと &lt;code&gt;ZoneOffset::from&lt;/code&gt; は同じ結果を返します。時間的オブジェクトにオフセットが含まれていない場合、メソッド参照は例外をスローしますが、このクエリはnullを返します。</target>
        </trans-unit>
        <trans-unit id="acbe203a39f1e4dfd332d8350eb660e8d8a90fb4" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;character#isDigit-int-&quot;&gt;&lt;code&gt;isDigit(codePoint)&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; of the character and the Unicode decimal digit value of the character (or its single-character decomposition) is less than the specified radix. In this case the decimal digit value is returned.</source>
          <target state="translated">メソッド&lt;a href=&quot;character#isDigit-int-&quot;&gt; &lt;code&gt;isDigit(codePoint)&lt;/code&gt; &lt;/a&gt;は文字に対して &lt;code&gt;true&lt;/code&gt; であり、文字（またはその単一文字分解）のUnicode 10進数値は、指定された基数よりも小さいです。この場合、10進数値が返されます。</target>
        </trans-unit>
        <trans-unit id="2581bfa41d0a1a93c4108b866c01432ab81d9ff9" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;locale#forLanguageTag-java.lang.String-&quot;&gt;&lt;code&gt;forLanguageTag(java.lang.String)&lt;/code&gt;&lt;/a&gt; creates a &lt;code&gt;Locale&lt;/code&gt; object for a well-formed BCP 47 language tag.</source>
          <target state="translated">メソッド&lt;a href=&quot;locale#forLanguageTag-java.lang.String-&quot;&gt; &lt;code&gt;forLanguageTag(java.lang.String)&lt;/code&gt; &lt;/a&gt;は、整形式のBCP 47言語タグの &lt;code&gt;Locale&lt;/code&gt; オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="9b361785e205ed88604c5be102b0eacbc9006ee0" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;system#gc()&quot;&gt;&lt;code&gt;System.gc()&lt;/code&gt;&lt;/a&gt; is the conventional and convenient means of invoking this method.</source>
          <target state="translated">&lt;a href=&quot;system#gc()&quot;&gt; &lt;code&gt;System.gc()&lt;/code&gt; &lt;/a&gt;メソッドは、このメソッドを呼び出すための従来の便利な手段です。</target>
        </trans-unit>
        <trans-unit id="8a7df96b80827737fe37d1466bc469409efb4f5f" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;system#gc--&quot;&gt;&lt;code&gt;System.gc()&lt;/code&gt;&lt;/a&gt; is the conventional and convenient means of invoking this method.</source>
          <target state="translated">&lt;a href=&quot;system#gc--&quot;&gt; &lt;code&gt;System.gc()&lt;/code&gt; &lt;/a&gt;メソッドは、このメソッドを呼び出す従来の便利な手段です。</target>
        </trans-unit>
        <trans-unit id="c510bc364df35c448c1d77cdcdbcb5a68cff0b77" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;system#load(java.lang.String)&quot;&gt;&lt;code&gt;System.load(String)&lt;/code&gt;&lt;/a&gt; is the conventional and convenient means of invoking this method.</source>
          <target state="translated">&lt;a href=&quot;system#load(java.lang.String)&quot;&gt; &lt;code&gt;System.load(String)&lt;/code&gt; &lt;/a&gt;メソッドは、このメソッドを呼び出すための従来の便利な手段です。</target>
        </trans-unit>
        <trans-unit id="d67ec53b39aba953770ea5d557a9a19d55511e10" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;system#load-java.lang.String-&quot;&gt;&lt;code&gt;System.load(String)&lt;/code&gt;&lt;/a&gt; is the conventional and convenient means of invoking this method.</source>
          <target state="translated">&lt;a href=&quot;system#load-java.lang.String-&quot;&gt; &lt;code&gt;System.load(String)&lt;/code&gt; &lt;/a&gt;メソッドは、このメソッドを呼び出す従来の便利な手段です。</target>
        </trans-unit>
        <trans-unit id="072391e6b57b7fc8b5b4323a60a85fb6ee2592df" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;system#loadLibrary(java.lang.String)&quot;&gt;&lt;code&gt;System.loadLibrary(String)&lt;/code&gt;&lt;/a&gt; is the conventional and convenient means of invoking this method. If native methods are to be used in the implementation of a class, a standard strategy is to put the native code in a library file (call it &lt;code&gt;LibFile&lt;/code&gt;) and then to put a static initializer:</source>
          <target state="translated">&lt;a href=&quot;system#loadLibrary(java.lang.String)&quot;&gt; &lt;code&gt;System.loadLibrary(String)&lt;/code&gt; &lt;/a&gt;メソッドは、このメソッドを呼び出すための従来の便利な手段です。クラスの実装でネイティブメソッドを使用する場合、標準的な戦略は、ネイティブコードをライブラリファイル（ &lt;code&gt;LibFile&lt;/code&gt; と呼びます）に配置してから、静的初期化子を配置することです。</target>
        </trans-unit>
        <trans-unit id="70d78eaa0709f4675ae6dbbcc4cd52c5b6f29b8d" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;system#loadLibrary-java.lang.String-&quot;&gt;&lt;code&gt;System.loadLibrary(String)&lt;/code&gt;&lt;/a&gt; is the conventional and convenient means of invoking this method. If native methods are to be used in the implementation of a class, a standard strategy is to put the native code in a library file (call it &lt;code&gt;LibFile&lt;/code&gt;) and then to put a static initializer:</source>
          <target state="translated">&lt;a href=&quot;system#loadLibrary-java.lang.String-&quot;&gt; &lt;code&gt;System.loadLibrary(String)&lt;/code&gt; &lt;/a&gt;メソッドは、このメソッドを呼び出す従来の便利な手段です。クラスの実装でネイティブメソッドを使用する場合、標準的な戦略は、ネイティブコードをライブラリファイル（ &lt;code&gt;LibFile&lt;/code&gt; と呼ぶ）に配置し、次に静的初期化子を配置することです。</target>
        </trans-unit>
        <trans-unit id="943c6a2954f608cf1aa25a52e8e7564f9b86f14f" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;system#runFinalization()&quot;&gt;&lt;code&gt;System.runFinalization()&lt;/code&gt;&lt;/a&gt; is the conventional and convenient means of invoking this method.</source>
          <target state="translated">The method &lt;a href=&quot;system#runFinalization()&quot;&gt; &lt;code&gt;System.runFinalization()&lt;/code&gt; &lt;/a&gt; is the conventional and convenient means of invoking this method.</target>
        </trans-unit>
        <trans-unit id="5effd9dbcb49e11e99f1d710b3ca201a6b6a9939" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;system#runFinalization--&quot;&gt;&lt;code&gt;System.runFinalization()&lt;/code&gt;&lt;/a&gt; is the conventional and convenient means of invoking this method.</source>
          <target state="translated">&lt;a href=&quot;system#runFinalization--&quot;&gt; &lt;code&gt;System.runFinalization()&lt;/code&gt; &lt;/a&gt;メソッドは、このメソッドを呼び出す従来の便利な手段です。</target>
        </trans-unit>
        <trans-unit id="b0a8b68af3f04771fc8e7e14e5e1f96e743317be" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;LdapContext.getResponseControls()&lt;/code&gt; is used to retrieve the response controls generated by LDAP operations executed as the result of invoking a &lt;code&gt;Context&lt;/code&gt;/&lt;code&gt;DirContext&lt;/code&gt; operation. The result is all of the responses controls generated by the underlying LDAP operations, including any implicit reconnection. To get only the reconnection response controls, use &lt;code&gt;reconnect()&lt;/code&gt; followed by &lt;code&gt;getResponseControls()&lt;/code&gt;.</source>
          <target state="translated">メソッド &lt;code&gt;LdapContext.getResponseControls()&lt;/code&gt; は、 &lt;code&gt;Context&lt;/code&gt; / &lt;code&gt;DirContext&lt;/code&gt; 操作の呼び出しの結果として実行されたLDAP操作によって生成された応答コントロールを取得するために使用されます。結果は、暗黙的な再接続を含む、基になるLDAP操作によって生成されたすべての応答コントロールです。再接続応答コントロールのみを取得するには、 &lt;code&gt;reconnect()&lt;/code&gt; に続いて &lt;code&gt;getResponseControls()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="38efe8e37d65c58afa7204d2c1ff16cacc51ef82" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;ModuleMXBean.getProduct()&lt;/code&gt; defines an attribute called &lt;code&gt;Product&lt;/code&gt;. The Open Type for this attribute is &lt;code&gt;SimpleType.OBJECTNAME&lt;/code&gt;, and the corresponding &lt;code&gt;ObjectName&lt;/code&gt; value will be the name under which the referenced &lt;code&gt;ProductMXBean&lt;/code&gt; is registered in the MBean Server.</source>
          <target state="translated">&lt;code&gt;ModuleMXBean.getProduct()&lt;/code&gt; メソッドは、 &lt;code&gt;Product&lt;/code&gt; という属性を定義します。この属性のオープンタイプは &lt;code&gt;SimpleType.OBJECTNAME&lt;/code&gt; であり、対応する &lt;code&gt;ObjectName&lt;/code&gt; 値は、参照される &lt;code&gt;ProductMXBean&lt;/code&gt; がMBeanサーバーに登録されている名前になります。</target>
        </trans-unit>
        <trans-unit id="b38a138bc8d2f8b05cf16a6e99bf3172cecefd42" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;acceptChanges&lt;/code&gt; will throw this exception after the writer has finished checking for conflicts and has found one or more conflicts. An application may catch a &lt;code&gt;SyncProviderException&lt;/code&gt; object and call its &lt;code&gt;getSyncResolver&lt;/code&gt; method to get its &lt;code&gt;SyncResolver&lt;/code&gt; object. See the code fragment in the interface comment for &lt;a href=&quot;syncresolver&quot;&gt;&lt;code&gt;SyncResolver&lt;/code&gt;&lt;/a&gt; for an example. This &lt;code&gt;SyncResolver&lt;/code&gt; object will mirror the &lt;code&gt;RowSet&lt;/code&gt; object that generated the exception, except that it will contain only the values from the data source that are in conflict. All other values in the &lt;code&gt;SyncResolver&lt;/code&gt; object will be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">The method &lt;code&gt;acceptChanges&lt;/code&gt; will throw this exception after the writer has finished checking for conflicts and has found one or more conflicts. An application may catch a &lt;code&gt;SyncProviderException&lt;/code&gt; object and call its &lt;code&gt;getSyncResolver&lt;/code&gt; method to get its &lt;code&gt;SyncResolver&lt;/code&gt; object. See the code fragment in the interface comment for &lt;a href=&quot;syncresolver&quot;&gt; &lt;code&gt;SyncResolver&lt;/code&gt; &lt;/a&gt; for an example. This &lt;code&gt;SyncResolver&lt;/code&gt; object will mirror the &lt;code&gt;RowSet&lt;/code&gt; object that generated the exception, except that it will contain only the values from the data source that are in conflict. All other values in the &lt;code&gt;SyncResolver&lt;/code&gt; object will be &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0a8992dddeafc6e212c01d0a03a038c45a92273" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;clone&lt;/code&gt; for class &lt;code&gt;Object&lt;/code&gt; performs a specific cloning operation. First, if the class of this object does not implement the interface &lt;code&gt;Cloneable&lt;/code&gt;, then a &lt;code&gt;CloneNotSupportedException&lt;/code&gt; is thrown. Note that all arrays are considered to implement the interface &lt;code&gt;Cloneable&lt;/code&gt; and that the return type of the &lt;code&gt;clone&lt;/code&gt; method of an array type &lt;code&gt;T[]&lt;/code&gt; is &lt;code&gt;T[]&lt;/code&gt; where T is any reference or primitive type. Otherwise, this method creates a new instance of the class of this object and initializes all its fields with exactly the contents of the corresponding fields of this object, as if by assignment; the contents of the fields are not themselves cloned. Thus, this method performs a &quot;shallow copy&quot; of this object, not a &quot;deep copy&quot; operation.</source>
          <target state="translated">クラス &lt;code&gt;Object&lt;/code&gt; の &lt;code&gt;clone&lt;/code&gt; メソッドは、特定の複製操作を実行します。まず、このオブジェクトのクラスが &lt;code&gt;Cloneable&lt;/code&gt; インターフェースを実装していない場合、 &lt;code&gt;CloneNotSupportedException&lt;/code&gt; がスローされます。すべての配列は &lt;code&gt;Cloneable&lt;/code&gt; インターフェースを実装していると見なされ、配列型 &lt;code&gt;T[]&lt;/code&gt; の &lt;code&gt;clone&lt;/code&gt; メソッドの戻り値の型は &lt;code&gt;T[]&lt;/code&gt; ことに注意してください。ここで、Tは任意の参照型またはプリミティブ型です。それ以外の場合、このメソッドは、このオブジェクトのクラスの新しいインスタンスを作成し、割り当ての場合と同様に、このオブジェクトの対応するフィールドの内容ですべてのフィールドを初期化します。フィールドの内容自体は複製されません。したがって、このメソッドは、「ディープコピー」操作ではなく、このオブジェクトの「浅いコピー」を実行します。</target>
        </trans-unit>
        <trans-unit id="d7f8cbf555e81b515ebed5fd01a023f91544a6b4" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;getLastChangedTime&lt;/code&gt; defines an attribute of type &lt;code&gt;long&lt;/code&gt; called &lt;code&gt;LastChangedTime&lt;/code&gt;. This is a read-only attribute, since there is no method &lt;code&gt;setLastChangedTime&lt;/code&gt;.</source>
          <target state="translated">この方法 &lt;code&gt;getLastChangedTime&lt;/code&gt; は、型の属性を定義し &lt;code&gt;long&lt;/code&gt; と呼ばれる &lt;code&gt;LastChangedTime&lt;/code&gt; を。メソッド &lt;code&gt;setLastChangedTime&lt;/code&gt; がないため、これは読み取り専用属性です。</target>
        </trans-unit>
        <trans-unit id="3f5effcf811fba7ae5495c3eae2cda66d7e773a2" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;getRowIdLifetime&lt;/code&gt; in the interface &lt;code&gt;DatabaseMetaData&lt;/code&gt;, can be used to determine if a &lt;code&gt;RowId&lt;/code&gt; object remains valid for the duration of the transaction in which the &lt;code&gt;RowId&lt;/code&gt; was created, the duration of the session in which the &lt;code&gt;RowId&lt;/code&gt; was created, or, effectively, for as long as its identified row is not deleted. In addition to specifying the duration of its valid lifetime outside its originating data source, &lt;code&gt;getRowIdLifetime&lt;/code&gt; specifies the duration of a &lt;code&gt;ROWID&lt;/code&gt; value's valid lifetime within its originating data source. In this, it differs from a large object, because there is no limit on the valid lifetime of a large object within its originating data source.</source>
          <target state="translated">The method &lt;code&gt;getRowIdLifetime&lt;/code&gt; in the interface &lt;code&gt;DatabaseMetaData&lt;/code&gt; , can be used to determine if a &lt;code&gt;RowId&lt;/code&gt; object remains valid for the duration of the transaction in which the &lt;code&gt;RowId&lt;/code&gt; was created, the duration of the session in which the &lt;code&gt;RowId&lt;/code&gt; was created, or, effectively, for as long as its identified row is not deleted. In addition to specifying the duration of its valid lifetime outside its originating data source, &lt;code&gt;getRowIdLifetime&lt;/code&gt; specifies the duration of a &lt;code&gt;ROWID&lt;/code&gt; value's valid lifetime within its originating data source. In this, it differs from a large object, because there is no limit on the valid lifetime of a large object within its originating data source.</target>
        </trans-unit>
        <trans-unit id="c3c5b184cc21ee7d95602d090b1e08067e68c2a2" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;isDigit&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; of the character and the Unicode decimal digit value of the character (or its single-character decomposition) is less than the specified radix. In this case the decimal digit value is returned.</source>
          <target state="translated">メソッド &lt;code&gt;isDigit&lt;/code&gt; は文字に対して &lt;code&gt;true&lt;/code&gt; であり、文字（またはその単一文字分解）のUnicode 10進数値は、指定された基数よりも小さいです。この場合、10進数値が返されます。</target>
        </trans-unit>
        <trans-unit id="535bd995faa93342a266284ae4a21196cdfdbc7f" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;nextBoolean&lt;/code&gt; is implemented by class &lt;code&gt;Random&lt;/code&gt; as if by:</source>
          <target state="translated">&lt;code&gt;nextBoolean&lt;/code&gt; メソッドは、次のように &lt;code&gt;Random&lt;/code&gt; クラスによって実装されます。</target>
        </trans-unit>
        <trans-unit id="39aec606639296b0b09aa7ce76c7792db0c9e8d1" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;nextBytes&lt;/code&gt; is implemented by class &lt;code&gt;Random&lt;/code&gt; as if by:</source>
          <target state="translated">&lt;code&gt;nextBytes&lt;/code&gt; メソッドは、次のように &lt;code&gt;Random&lt;/code&gt; クラスによって実装されます。</target>
        </trans-unit>
        <trans-unit id="aa5e2878d870d8e6bb6b3436cc61343f5dff5aef" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;nextDouble&lt;/code&gt; is implemented by class &lt;code&gt;Random&lt;/code&gt; as if by:</source>
          <target state="translated">&lt;code&gt;nextDouble&lt;/code&gt; メソッドは、次のようにクラス &lt;code&gt;Random&lt;/code&gt; によって実装されます。</target>
        </trans-unit>
        <trans-unit id="b61e5112029d8cee888287c3757ccf1df1bbebf8" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;nextFloat&lt;/code&gt; is implemented by class &lt;code&gt;Random&lt;/code&gt; as if by:</source>
          <target state="translated">&lt;code&gt;nextFloat&lt;/code&gt; メソッドは、次のように &lt;code&gt;Random&lt;/code&gt; クラスによって実装されます。</target>
        </trans-unit>
        <trans-unit id="52e435482b4a6bf7b9cc5a218513f721c3170375" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;nextGaussian&lt;/code&gt; is implemented by class &lt;code&gt;Random&lt;/code&gt; as if by a threadsafe version of the following:</source>
          <target state="translated">&lt;code&gt;nextGaussian&lt;/code&gt; メソッドは、次のスレッドセーフバージョンのように、 &lt;code&gt;Random&lt;/code&gt; クラスによって実装されます。</target>
        </trans-unit>
        <trans-unit id="5153d25dbf172da98da0741daa09a59b0ad63eea" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;nextInt&lt;/code&gt; is implemented by class &lt;code&gt;Random&lt;/code&gt; as if by:</source>
          <target state="translated">&lt;code&gt;nextInt&lt;/code&gt; メソッドは、次のように &lt;code&gt;Random&lt;/code&gt; クラスによって実装されます。</target>
        </trans-unit>
        <trans-unit id="8497b578fc5004656d89b7e6983aaffbdc2fbd06" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;nextLong&lt;/code&gt; is implemented by class &lt;code&gt;Random&lt;/code&gt; as if by:</source>
          <target state="translated">&lt;code&gt;nextLong&lt;/code&gt; メソッドは、次のように &lt;code&gt;Random&lt;/code&gt; クラスによって実装されます。</target>
        </trans-unit>
        <trans-unit id="f5762f86bf570324ec0ea338b6232689e3da5ef3" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;nextPage&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; as long as the current page is not the last page of rows and &lt;code&gt;false&lt;/code&gt; when there are no more pages. It can therefore be used in a &lt;code&gt;while&lt;/code&gt; loop to retrieve all of the pages, as is demonstrated in the following lines of code.</source>
          <target state="translated">The method &lt;code&gt;nextPage&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; as long as the current page is not the last page of rows and &lt;code&gt;false&lt;/code&gt; when there are no more pages. It can therefore be used in a &lt;code&gt;while&lt;/code&gt; loop to retrieve all of the pages, as is demonstrated in the following lines of code.</target>
        </trans-unit>
        <trans-unit id="c67214681cb12eb1b4e0da6760e30a88882e1833" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;readObject&lt;/code&gt; is used to read an object from the stream. Java's safe casting should be used to get the desired type. In Java, strings and arrays are objects and are treated as objects during serialization. When read they need to be cast to the expected type.</source>
          <target state="translated">メソッド &lt;code&gt;readObject&lt;/code&gt; は、ストリームからオブジェクトを読み取るために使用されます。目的の型を取得するには、Javaの安全なキャストを使用する必要があります。Javaでは、文字列と配列はオブジェクトであり、直列化時にオブジェクトとして扱われます。読み取るときは、期待される型にキャストする必要があります。</target>
        </trans-unit>
        <trans-unit id="bc3619ccbd3961713ea835abfe41261f8ad0eba7" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;readSQL&lt;/code&gt; then assigns the data to appropriate fields or elements (of this or other objects). Specifically, it must call the appropriate</source>
          <target state="translated">The method &lt;code&gt;readSQL&lt;/code&gt; then assigns the data to appropriate fields or elements (of this or other objects). Specifically, it must call the appropriate</target>
        </trans-unit>
        <trans-unit id="4459bd46bf4834bc8d1f2a66533eab615320b4ee" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;reset&lt;/code&gt; for class &lt;code&gt;InflaterInputStream&lt;/code&gt; does nothing except throw an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;InflaterInputStream&lt;/code&gt; のメソッド &lt;code&gt;reset&lt;/code&gt; は、 &lt;code&gt;IOException&lt;/code&gt; をスローする以外は何もしません。</target>
        </trans-unit>
        <trans-unit id="13e620608483b508819a8c26cd124d1d4afc2a94" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;reset&lt;/code&gt; for class &lt;code&gt;InputStream&lt;/code&gt; does nothing except throw an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;InputStream&lt;/code&gt; のメソッド &lt;code&gt;reset&lt;/code&gt; は、 &lt;code&gt;IOException&lt;/code&gt; をスローする以外は何もしません。</target>
        </trans-unit>
        <trans-unit id="d0d3bcb4b06a0837cd3dc72144af017482e0c6d5" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;reset&lt;/code&gt; for class &lt;code&gt;PushbackInputStream&lt;/code&gt; does nothing except throw an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">クラス &lt;code&gt;PushbackInputStream&lt;/code&gt; のメソッド &lt;code&gt;reset&lt;/code&gt; は、 &lt;code&gt;IOException&lt;/code&gt; をスローする以外は何もしません。</target>
        </trans-unit>
        <trans-unit id="f69dcbba5a7b1c0b5dad3540d98ac2d5ae36da0b" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;save&lt;/code&gt; defines an operation called &lt;code&gt;save&lt;/code&gt;. It is not an attribute, since its name does not begin with &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, or &lt;code&gt;is&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;save&lt;/code&gt; メソッドは、saveという操作を定義し &lt;code&gt;save&lt;/code&gt; 。名前が &lt;code&gt;get&lt;/code&gt; 、 &lt;code&gt;set&lt;/code&gt; 、または &lt;code&gt;is&lt;/code&gt; で始まっていないため、属性ではありません。</target>
        </trans-unit>
        <trans-unit id="4c15f937ab0a49ac7eff467ab6a11aa54f889c23" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;setEchoChar&lt;/code&gt; and &lt;code&gt;getEchoChar&lt;/code&gt; are not provided directly to avoid a new implementation of a pluggable look-and-feel inadvertently exposing password characters. To provide password-like services a separate class &lt;code&gt;JPasswordField&lt;/code&gt; extends &lt;code&gt;JTextField&lt;/code&gt; to provide this service with an independently pluggable look-and-feel.</source>
          <target state="translated">The method &lt;code&gt;setEchoChar&lt;/code&gt; and &lt;code&gt;getEchoChar&lt;/code&gt; are not provided directly to avoid a new implementation of a pluggable look-and-feel inadvertently exposing password characters. To provide password-like services a separate class &lt;code&gt;JPasswordField&lt;/code&gt; extends &lt;code&gt;JTextField&lt;/code&gt; to provide this service with an independently pluggable look-and-feel.</target>
        </trans-unit>
        <trans-unit id="f7a612b5280e2e2c4c2ddcb3ab89ad9acbe42cd1" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;wasNull&lt;/code&gt; is used to determine whether the the last value read was SQL &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">The method &lt;code&gt;wasNull&lt;/code&gt; is used to determine whether the the last value read was SQL &lt;code&gt;NULL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3ca789241e6d14c3ac15e790f37b9b79ea366c7" translate="yes" xml:space="preserve">
          <source>The method MAY be final.</source>
          <target state="translated">メソッドは最終的なものであってもよい。</target>
        </trans-unit>
        <trans-unit id="af8fe63e17d04ea68ffd008d010e54db7de4fd6e" translate="yes" xml:space="preserve">
          <source>The method MUST NOT be static except for the application client.</source>
          <target state="translated">メソッドは、アプリケーション・クライアント以外は静的であってはなりません(MUST NOT)。</target>
        </trans-unit>
        <trans-unit id="1fe676d9fffea60e7a8f68402d907c0a2c03baa3" translate="yes" xml:space="preserve">
          <source>The method MUST NOT be static.</source>
          <target state="translated">メソッドは静的であってはなりません(MUST NOT)。</target>
        </trans-unit>
        <trans-unit id="caac4ec314c6a1971b464984c3166dc42073086b" translate="yes" xml:space="preserve">
          <source>The method MUST NOT have any parameters except in the case of interceptors in which case it takes an InvocationContext object as defined by the Interceptors specification.</source>
          <target state="translated">このメソッドは、インターセプターの場合はインターセプター仕様で定義されているInvocationContextオブジェクトを受け取りますが、それ以外のパラメータを持ってはいけません(MUST NOT)。</target>
        </trans-unit>
        <trans-unit id="89d4ef93ff558b93a6f2123bc37190ee451c78dd" translate="yes" xml:space="preserve">
          <source>The method Object.toString(), Object.hashCode(), or Object.equals(Object), when invoked on a proxy using this invocation handler, is forwarded to the MBean server as a method on the proxied MBean only if it appears in one of the proxy's interfaces. For a proxy created with &lt;a href=&quot;jmx#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;&lt;code&gt;JMX.newMBeanProxy&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt;&lt;/a&gt;, this means that the method must appear in the Standard MBean or MXBean interface. Otherwise these methods have the following behavior:</source>
          <target state="translated">The method Object.toString(), Object.hashCode(), or Object.equals(Object), when invoked on a proxy using this invocation handler, is forwarded to the MBean server as a method on the proxied MBean only if it appears in one of the proxy's interfaces. For a proxy created with &lt;a href=&quot;jmx#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt; &lt;code&gt;JMX.newMBeanProxy&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; &lt;/a&gt;, this means that the method must appear in the Standard MBean or MXBean interface. Otherwise these methods have the following behavior:</target>
        </trans-unit>
        <trans-unit id="5bd74d8dca79474f68b7ace3eb464b4b46924655" translate="yes" xml:space="preserve">
          <source>The method Object.toString(), Object.hashCode(), or Object.equals(Object), when invoked on a proxy using this invocation handler, is forwarded to the MBean server as a method on the proxied MBean only if it appears in one of the proxy's interfaces. For a proxy created with &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;JMX.newMBeanProxy&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt;&lt;/a&gt;, this means that the method must appear in the Standard MBean or MXBean interface. Otherwise these methods have the following behavior:</source>
          <target state="translated">メソッドObject.toString（）、Object.hashCode（）、またはObject.equals（Object）は、この呼び出しハンドラーを使用してプロキシーで呼び出されると、プロキシされたMBeanのメソッドとしてMBeanサーバーに転送されます。プロキシのインターフェースの1つ。&lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;JMX.newMBeanProxy&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; &lt;/a&gt;で作成されたプロキシの場合、これはメソッドが標準MBeanまたはMXBeanインターフェースに表示される必要があることを意味します。それ以外の場合、これらのメソッドには次の動作があります。</target>
        </trans-unit>
        <trans-unit id="bf837832e7854579616fcc0c7961e2c0f8eb7c68" translate="yes" xml:space="preserve">
          <source>The method also makes sure that the key passed in is the same as the one this exemption mechanism used in initializing and generating phases.</source>
          <target state="translated">また、このメソッドは、渡されたキーが初期化および生成フェーズで使用されるこの免除メカニズムと同じであることを確認します。</target>
        </trans-unit>
        <trans-unit id="a2ebce3cfc3d67e5a06b1146951b4c5544283d64" translate="yes" xml:space="preserve">
          <source>The method area is logically part of the heap but a Java virtual machine implementation may choose not to either garbage collect or compact it. Similar to the heap, the method area may be of a fixed size or may be expanded and shrunk. The memory for the method area does not need to be contiguous.</source>
          <target state="translated">メソッド・エリアは論理的にはヒープの一部ですが、Java仮想マシンの実装では、ガベージ・コレクトやコンパクト化を行わないことを選択することができます。ヒープと同様に、メソッド・エリアは固定サイズであってもよいし、拡張・縮小されてもよい。メソッド領域のメモリは連続している必要はありません。</target>
        </trans-unit>
        <trans-unit id="d2f787f787f66e4c7fe7596b60f067bd719396f2" translate="yes" xml:space="preserve">
          <source>The method attempts to parse text starting at the index given by &lt;code&gt;pos&lt;/code&gt;. If parsing succeeds, then the index of &lt;code&gt;pos&lt;/code&gt; is updated to the index after the last character used (parsing does not necessarily use all characters up to the end of the string), and the parsed date is returned. The updated &lt;code&gt;pos&lt;/code&gt; can be used to indicate the starting point for the next call to this method. If an error occurs, then the index of &lt;code&gt;pos&lt;/code&gt; is not changed, the error index of &lt;code&gt;pos&lt;/code&gt; is set to the index of the character where the error occurred, and null is returned.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;pos&lt;/code&gt; で指定されたインデックスで始まるテキストを解析しようとします。解析が成功した場合、 &lt;code&gt;pos&lt;/code&gt; のインデックスは最後に使用された文字の後のインデックスに更新され（解析では必ずしも文字列の最後までのすべての文字が使用されるわけではありません）、解析された日付が返されます。更新された &lt;code&gt;pos&lt;/code&gt; は、このメソッドの次の呼び出しの開始点を示すために使用できます。エラーが発生した場合、その後のインデックス &lt;code&gt;pos&lt;/code&gt; が変更されていない、の誤り指数 &lt;code&gt;pos&lt;/code&gt; 、エラーが発生した文字のインデックスに設定され、nullが返されます。</target>
        </trans-unit>
        <trans-unit id="bdc63bdbe6175542e0c05d24ad602abe98b3317a" translate="yes" xml:space="preserve">
          <source>The method attempts to parse text starting at the index given by &lt;code&gt;pos&lt;/code&gt;. If parsing succeeds, then the index of &lt;code&gt;pos&lt;/code&gt; is updated to the index after the last character used (parsing does not necessarily use all characters up to the end of the string), and the parsed number is returned. The updated &lt;code&gt;pos&lt;/code&gt; can be used to indicate the starting point for the next call to this method. If an error occurs, then the index of &lt;code&gt;pos&lt;/code&gt; is not changed, the error index of &lt;code&gt;pos&lt;/code&gt; is set to the index of the character where the error occurred, and null is returned.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;pos&lt;/code&gt; で指定されたインデックスで始まるテキストを解析しようとします。解析が成功した場合、 &lt;code&gt;pos&lt;/code&gt; のインデックスは最後に使用された文字の後のインデックスに更新され（解析では必ずしも文字列の最後までのすべての文字が使用されるわけではありません）、解析された数値が返されます。更新された &lt;code&gt;pos&lt;/code&gt; は、このメソッドの次の呼び出しの開始点を示すために使用できます。エラーが発生した場合、その後のインデックス &lt;code&gt;pos&lt;/code&gt; が変更されていない、の誤り指数 &lt;code&gt;pos&lt;/code&gt; 、エラーが発生した文字のインデックスに設定され、nullが返されます。</target>
        </trans-unit>
        <trans-unit id="755b2d6e0868e85486b4720a3bf6fb663c77e645" translate="yes" xml:space="preserve">
          <source>The method attempts to parse text starting at the index given by &lt;code&gt;pos&lt;/code&gt;. If parsing succeeds, then the index of &lt;code&gt;pos&lt;/code&gt; is updated to the index after the last character used (parsing does not necessarily use all characters up to the end of the string), and the parsed object array is returned. The updated &lt;code&gt;pos&lt;/code&gt; can be used to indicate the starting point for the next call to this method. If an error occurs, then the index of &lt;code&gt;pos&lt;/code&gt; is not changed, the error index of &lt;code&gt;pos&lt;/code&gt; is set to the index of the character where the error occurred, and null is returned.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;pos&lt;/code&gt; で指定されたインデックスで始まるテキストを解析しようとします。解析が成功した場合、 &lt;code&gt;pos&lt;/code&gt; のインデックスは最後に使用された文字の後のインデックスに更新され（解析では必ずしも文字列の最後までのすべての文字が使用されるわけではありません）、解析されたオブジェクト配列が返されます。更新された &lt;code&gt;pos&lt;/code&gt; は、このメソッドの次の呼び出しの開始点を示すために使用できます。エラーが発生した場合、その後のインデックス &lt;code&gt;pos&lt;/code&gt; が変更されていない、の誤り指数 &lt;code&gt;pos&lt;/code&gt; 、エラーが発生した文字のインデックスに設定され、nullが返されます。</target>
        </trans-unit>
        <trans-unit id="728edd8d0c7fa7fe83058e87c898460ae69879c1" translate="yes" xml:space="preserve">
          <source>The method attempts to parse text starting at the index given by &lt;code&gt;pos&lt;/code&gt;. If parsing succeeds, then the index of &lt;code&gt;pos&lt;/code&gt; is updated to the index after the last character used (parsing does not necessarily use all characters up to the end of the string), and the parsed object is returned. The updated &lt;code&gt;pos&lt;/code&gt; can be used to indicate the starting point for the next call to this method. If an error occurs, then the index of &lt;code&gt;pos&lt;/code&gt; is not changed, the error index of &lt;code&gt;pos&lt;/code&gt; is set to the index of the character where the error occurred, and null is returned.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;pos&lt;/code&gt; で指定されたインデックスで始まるテキストを解析しようとします。解析が成功した場合、 &lt;code&gt;pos&lt;/code&gt; のインデックスは最後に使用された文字の後のインデックスに更新され（解析では必ずしも文字列の最後までのすべての文字が使用されるわけではありません）、解析されたオブジェクトが返されます。更新された &lt;code&gt;pos&lt;/code&gt; は、このメソッドの次の呼び出しの開始点を示すために使用できます。エラーが発生した場合、その後のインデックス &lt;code&gt;pos&lt;/code&gt; が変更されていない、の誤り指数 &lt;code&gt;pos&lt;/code&gt; 、エラーが発生した文字のインデックスに設定され、nullが返されます。</target>
        </trans-unit>
        <trans-unit id="bf4b711f1cdaf392a710511f3f4f04d14590ac67" translate="yes" xml:space="preserve">
          <source>The method changes the geometry-related data. Therefore, the native windowing system may ignore such requests, or it may modify the requested data, so that the &lt;code&gt;JPopupMenu&lt;/code&gt; object is placed and sized in a way that corresponds closely to the desktop settings.</source>
          <target state="translated">The method changes the geometry-related data. Therefore, the native windowing system may ignore such requests, or it may modify the requested data, so that the &lt;code&gt;JPopupMenu&lt;/code&gt; object is placed and sized in a way that corresponds closely to the desktop settings.</target>
        </trans-unit>
        <trans-unit id="96b82a41b3cc128f7bd730255f76a7a83cf6343b" translate="yes" xml:space="preserve">
          <source>The method changes the geometry-related data. Therefore, the native windowing system may ignore such requests, or it may modify the requested data, so that the &lt;code&gt;Window&lt;/code&gt; object is placed and sized in a way that corresponds closely to the desktop settings.</source>
          <target state="translated">The method changes the geometry-related data. Therefore, the native windowing system may ignore such requests, or it may modify the requested data, so that the &lt;code&gt;Window&lt;/code&gt; object is placed and sized in a way that corresponds closely to the desktop settings.</target>
        </trans-unit>
        <trans-unit id="d9a2756aa6193355e7784a53a8731be0aabbdbef" translate="yes" xml:space="preserve">
          <source>The method defined on a non-interceptor class MUST HAVE the following signature:</source>
          <target state="translated">非インターセプター・クラスで定義されたメソッドは、以下のシグネチャを持たなければなりません(MUST)。</target>
        </trans-unit>
        <trans-unit id="b7fc31a8c1bb691e0963a145eeb54ea63fdff422" translate="yes" xml:space="preserve">
          <source>The method defined on an interceptor class MUST HAVE one of the following signatures:</source>
          <target state="translated">インターセプタークラスで定義されたメソッドは、以下のいずれかのシグネチャを持たなければなりません(MUST)。</target>
        </trans-unit>
        <trans-unit id="d288dedc0be71bcd9f7b6d49e3e7dce97a926418" translate="yes" xml:space="preserve">
          <source>The method does not take steps to guard against the &lt;code&gt;CharSequence&lt;/code&gt; being mutated while parsing.</source>
          <target state="translated">The method does not take steps to guard against the &lt;code&gt;CharSequence&lt;/code&gt; being mutated while parsing.</target>
        </trans-unit>
        <trans-unit id="874cf916c1f10aad774a741a754ad2423996c2b7" translate="yes" xml:space="preserve">
          <source>The method does not treat a backslash character, &lt;code&gt;\&lt;/code&gt;, before a non-valid escape character as an error; the backslash is silently dropped. For example, in a Java string the sequence &lt;code&gt;&quot;\z&quot;&lt;/code&gt; would cause a compile time error. In contrast, this method silently drops the backslash. Therefore, this method treats the two character sequence &lt;code&gt;&quot;\b&quot;&lt;/code&gt; as equivalent to the single character &lt;code&gt;'b'&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、無効なエスケープ文字の前のバックスラッシュ文字 &lt;code&gt;\&lt;/code&gt; をエラーとして扱いません。バックスラッシュは静かに削除されます。たとえば、Java文字列では、シーケンス &lt;code&gt;&quot;\z&quot;&lt;/code&gt; はコンパイル時エラーを引き起こします。対照的に、このメソッドはバックスラッシュを静かに削除します。したがって、このメソッドは2文字シーケンス &lt;code&gt;&quot;\b&quot;&lt;/code&gt; を1文字 &lt;code&gt;'b'&lt;/code&gt; と同等として扱います。</target>
        </trans-unit>
        <trans-unit id="dff2253dcf2dbdbeb818932622f47c017d711d4d" translate="yes" xml:space="preserve">
          <source>The method does override or implement a method declared in a supertype.</source>
          <target state="translated">このメソッドは、スーパータイプで宣言されたメソッドをオーバーライドまたは実装します。</target>
        </trans-unit>
        <trans-unit id="de0aebf01d17f688e180aa1f2d8c519be06ac3b0" translate="yes" xml:space="preserve">
          <source>The method does the following (implementations are free to optimized but must do equivalent processing):</source>
          <target state="translated">このメソッドは以下のようなことを行います(実装は最適化されているかどうかは自由ですが、同等の処理を行う必要があります)。</target>
        </trans-unit>
        <trans-unit id="d874850a3069b1faecbf73c1fdbee24f36633207" translate="yes" xml:space="preserve">
          <source>The method handle conversion cannot be made if any one of the required pairwise conversions cannot be made.</source>
          <target state="translated">要求されたペアワイズ変換のいずれかができない場合、メソッドハンドル変換はできません。</target>
        </trans-unit>
        <trans-unit id="a6801c974c56cb2c89e9773e9f5501edc995c2ac" translate="yes" xml:space="preserve">
          <source>The method handle may throw an &lt;em&gt;undeclared exception&lt;/em&gt;, which means any checked exception (or other checked throwable) not declared by the requested type's single abstract method. If this happens, the throwable will be wrapped in an instance of &lt;a href=&quot;../reflect/undeclaredthrowableexception&quot;&gt;&lt;code&gt;UndeclaredThrowableException&lt;/code&gt;&lt;/a&gt; and thrown in that wrapped form.</source>
          <target state="translated">メソッドハンドルは、&lt;em&gt;宣言されていない例外を&lt;/em&gt;スローすることが&lt;em&gt;あります&lt;/em&gt;。これは、要求された型の単一の抽象メソッドによって宣言されていないチェック例外（または他のチェックスロー可能）を意味します。これが発生した場合、&lt;a href=&quot;../reflect/undeclaredthrowableexception&quot;&gt; &lt;code&gt;UndeclaredThrowableException&lt;/code&gt; &lt;/a&gt;はUndeclaredThrowableExceptionのインスタンスにラップされ、ラップされた形式でスローされます。</target>
        </trans-unit>
        <trans-unit id="041d039fea09ec912b2f7c0f54da21a3bfd1e44b" translate="yes" xml:space="preserve">
          <source>The method has a signature that is override-equivalent to that of any public method declared in &lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;.</source>
          <target state="translated">このメソッドには、&lt;a href=&quot;object&quot;&gt;Objectで&lt;/a&gt;宣言されたすべてのパブリックメソッドのオーバーライドと同等の署名があります。</target>
        </trans-unit>
        <trans-unit id="4ed8c6b5045fb72aff03047fce5ebbbafb8db76e" translate="yes" xml:space="preserve">
          <source>The method has no effect and is only left present to avoid introducing a binary incompatibility.</source>
          <target state="translated">このメソッドは何の効果もなく、バイナリの非互換性の導入を避けるために存在しているだけです。</target>
        </trans-unit>
        <trans-unit id="00121123a40bd3cc2c602ed162840173d63b2881" translate="yes" xml:space="preserve">
          <source>The method is called at end of dragging to place the frame in either its original place or in its floating frame.</source>
          <target state="translated">このメソッドは、ドラッグの終了時に呼び出され、フレームを元の位置またはフローティングフレームに配置します。</target>
        </trans-unit>
        <trans-unit id="de35ac2212c0c9582b0146f8df1ba4a720f89ca9" translate="yes" xml:space="preserve">
          <source>The method is only called when the input method is active.</source>
          <target state="translated">このメソッドは、入力メソッドがアクティブなときにのみ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9baa3ede543d5035f46bcd56e3c0863a6c562fb3" translate="yes" xml:space="preserve">
          <source>The method is only called when the input method is inactive.</source>
          <target state="translated">このメソッドは、入力メソッドが非アクティブな場合にのみ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="cf9754a32ab897b521e9159a73620d72117cb589" translate="yes" xml:space="preserve">
          <source>The method is only called when the input method is inactive. A newly instantiated input method is assumed to be inactive.</source>
          <target state="translated">このメソッドは、入力メソッドが非アクティブな場合にのみ呼び出されます。新しくインスタンス化された入力メソッドは、非アクティブであると見なされます。</target>
        </trans-unit>
        <trans-unit id="2ad284914c9aa89e7c3697bae4da03ceba60b4f8" translate="yes" xml:space="preserve">
          <source>The method is only called when the input method is inactive. No method of this interface is called on this instance after dispose.</source>
          <target state="translated">このメソッドは、入力メソッドが非アクティブな場合にのみ呼び出されます。dispose後、このインターフェイスのメソッドはこのインスタンス上では呼び出されません。</target>
        </trans-unit>
        <trans-unit id="8988a6bf12069b0fac6f427bbfce01c5e069e820" translate="yes" xml:space="preserve">
          <source>The method is overridden to take into account caret width.</source>
          <target state="translated">このメソッドは、キャレット幅を考慮してオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="623ed9d67cf1fb8a617d106f69d4d42cdce1cab5" translate="yes" xml:space="preserve">
          <source>The method is used to drag &lt;code&gt;DragWindow&lt;/code&gt; during the &lt;code&gt;JToolBar&lt;/code&gt; is being dragged.</source>
          <target state="translated">The method is used to drag &lt;code&gt;DragWindow&lt;/code&gt; during the &lt;code&gt;JToolBar&lt;/code&gt; is being dragged.</target>
        </trans-unit>
        <trans-unit id="7616838d561dfc62e3dd4e5cdb730d2042aaf10e" translate="yes" xml:space="preserve">
          <source>The method makes a best effort attempt to close all opened files, by catching &lt;a href=&quot;../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;s internally. Unchecked exceptions and errors are not caught. Calling close on an already closed loader has no effect.</source>
          <target state="translated">このメソッドは、内部で&lt;a href=&quot;../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;をキャッチすることにより、開いているすべてのファイルを閉じるように最善を尽くします。未チェックの例外とエラーはキャッチされません。すでに閉じているローダーでcloseを呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="22e6c0f3aab290294b829964017cfbc93840e56c" translate="yes" xml:space="preserve">
          <source>The method may have no visual effect if the Java platform implementation and/or the native system do not support changing the mouse cursor shape.</source>
          <target state="translated">Javaプラットフォームの実装および/またはネイティブシステムがマウスカーソルの形状を変更することをサポートしていない場合、この方法は視覚的な効果を持たない場合があります。</target>
        </trans-unit>
        <trans-unit id="a1d97588045b8fdfb47b76675e28ef92cc975e90" translate="yes" xml:space="preserve">
          <source>The method may only be called by the startElement event of the &lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; that the application sets to the &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The method may only be called by the startElement event of the &lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt; that the application sets to the &lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="64b19b0029680ec5059b9a2babc8eac7a26ae79d" translate="yes" xml:space="preserve">
          <source>The method may only be called by the startElement event or the endElement event of the &lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; that the application sets to the &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The method may only be called by the startElement event or the endElement event of the &lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt; that the application sets to the &lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="01f8d9463e6eb038e7275bbee56c959165f19559" translate="yes" xml:space="preserve">
          <source>The method must have the same effect as calling the &lt;code&gt;setBindings&lt;/code&gt; method of &lt;code&gt;ScriptContext&lt;/code&gt; with the corresponding value of &lt;code&gt;scope&lt;/code&gt; on the default &lt;code&gt;ScriptContext&lt;/code&gt; of the &lt;code&gt;ScriptEngine&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;ScriptEngine&lt;/code&gt; のデフォルトの &lt;code&gt;ScriptContext&lt;/code&gt; の &lt;code&gt;scope&lt;/code&gt; の対応する値を &lt;code&gt;ScriptContext&lt;/code&gt; して、ScriptContextの &lt;code&gt;setBindings&lt;/code&gt; メソッドを呼び出すのと同じ効果を持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="b61a4c76b41fb31fb418cddaaa8ae04229303a5b" translate="yes" xml:space="preserve">
          <source>The method names &quot;get&quot; and &quot;set&quot; defined in the &lt;a href=&quot;../../../java.base/java/util/list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface may also be applied to array instances, mapping to the static methods of the same name in the &lt;code&gt;Array&lt;/code&gt; class.</source>
          <target state="translated">The method names &quot;get&quot; and &quot;set&quot; defined in the &lt;a href=&quot;../../../java.base/java/util/list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; interface may also be applied to array instances, mapping to the static methods of the same name in the &lt;code&gt;Array&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="15a01b8573f438dbb644e46e679a12309fb238bb" translate="yes" xml:space="preserve">
          <source>The method names &quot;get&quot; and &quot;set&quot; defined in the &lt;a href=&quot;../util/list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface may also be applied to array instances, mapping to the static methods of the same name in the &lt;code&gt;Array&lt;/code&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../util/list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;インターフェースで定義されたメソッド名「get」と「set」は配列インスタンスにも適用され、 &lt;code&gt;Array&lt;/code&gt; クラスの同じ名前の静的メソッドにマッピングされます。</target>
        </trans-unit>
        <trans-unit id="31ea5c5f1f94c274b3d01eb1641bbe42804b8496" translate="yes" xml:space="preserve">
          <source>The method on which PostConstruct is applied MAY be public, protected, package private or private.</source>
          <target state="translated">PostConstructが適用されるメソッドは、public、protected、package private、privateのいずれかであってもよいでしょう。</target>
        </trans-unit>
        <trans-unit id="f9d54155e020311194231f7107f4623669daac2c" translate="yes" xml:space="preserve">
          <source>The method on which PreDestroy is applied MAY be public, protected, package private or private.</source>
          <target state="translated">PreDestroy が適用されるメソッドは、public、protected、package private、private のいずれかであってもよい[MAY]。</target>
        </trans-unit>
        <trans-unit id="a301ae939450f1e25dc09421c4085bcfd77c3e36" translate="yes" xml:space="preserve">
          <source>The method retrieves the source and destination band setting arrays from param using the &lt;code&gt;getSourceBands&lt;/code&gt; and &lt;code&gt;getDestinationBands&lt;/code&gt; methods (or considers them to be &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;param&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;). If the source band setting array is &lt;code&gt;null&lt;/code&gt;, it is considered to be equal to the array &lt;code&gt;{ 0, 1, ..., numSrcBands - 1 }&lt;/code&gt;, and similarly for the destination band setting array.</source>
          <target state="translated">The method retrieves the source and destination band setting arrays from param using the &lt;code&gt;getSourceBands&lt;/code&gt; and &lt;code&gt;getDestinationBands&lt;/code&gt; methods (or considers them to be &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;param&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; ). If the source band setting array is &lt;code&gt;null&lt;/code&gt; , it is considered to be equal to the array &lt;code&gt;{ 0, 1, ..., numSrcBands - 1 }&lt;/code&gt; , and similarly for the destination band setting array.</target>
        </trans-unit>
        <trans-unit id="ca55322435324027e26d48fb8b856f2cd4798e10" translate="yes" xml:space="preserve">
          <source>The method retrieves the source and destination band setting arrays from param using the &lt;code&gt;getSourceBands&lt;/code&gt; and &lt;code&gt;getDestinationBands&lt;/code&gt;methods (or considers them to be &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;param&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;). If the source band setting array is &lt;code&gt;null&lt;/code&gt;, it is considered to be equal to the array &lt;code&gt;{ 0, 1, ..., numSrcBands - 1 }&lt;/code&gt;, and similarly for the destination band setting array.</source>
          <target state="translated">この方法は、使用PARAMからアレイを設定ソースおよびデスティネーションバンドを取り出し &lt;code&gt;getSourceBands&lt;/code&gt; と &lt;code&gt;getDestinationBands&lt;/code&gt; の方法を（またはそれらがあると考える &lt;code&gt;null&lt;/code&gt; 場合 &lt;code&gt;param&lt;/code&gt; はある &lt;code&gt;null&lt;/code&gt; ）。ソースバンド設定配列が &lt;code&gt;null&lt;/code&gt; の場合、配列 &lt;code&gt;{ 0, 1, ..., numSrcBands - 1 }&lt;/code&gt; と等しいと見なされ、宛先バンド設定配列についても同様です。</target>
        </trans-unit>
        <trans-unit id="eedb75f6270c3f56b8d300605906d86bfe0698fe" translate="yes" xml:space="preserve">
          <source>The method returns &lt;code&gt;false&lt;/code&gt; if the background color of the window is not &lt;code&gt;null&lt;/code&gt; and the alpha component of the color is less than &lt;code&gt;1.0f&lt;/code&gt;. The method returns &lt;code&gt;true&lt;/code&gt; otherwise.</source>
          <target state="translated">The method returns &lt;code&gt;false&lt;/code&gt; if the background color of the window is not &lt;code&gt;null&lt;/code&gt; and the alpha component of the color is less than &lt;code&gt;1.0f&lt;/code&gt; . The method returns &lt;code&gt;true&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="ec049c98e4152761fc23d3a62699d89db08b276a" translate="yes" xml:space="preserve">
          <source>The method returns &lt;code&gt;null&lt;/code&gt; for territories that don't have a currency, such as Antarctica.</source>
          <target state="translated">このメソッドは、南極などの通貨を持たない地域では &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ceab077d59c6d554d1d17fd8d17c58c9283f7971" translate="yes" xml:space="preserve">
          <source>The method returns &lt;code&gt;null&lt;/code&gt; if no further fallback search is desired.</source>
          <target state="translated">これ以上フォールバック検索が必要ない場合、メソッドは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0c99f16cb456d9d761214c183263d3daa238152b" translate="yes" xml:space="preserve">
          <source>The method returns an estimate of the number of nanoseconds remaining to wait given the supplied &lt;code&gt;nanosTimeout&lt;/code&gt; value upon return, or a value less than or equal to zero if it timed out. This value can be used to determine whether and how long to re-wait in cases where the wait returns but an awaited condition still does not hold. Typical uses of this method take the following form:</source>
          <target state="translated">このメソッドは、指定された &lt;code&gt;nanosTimeout&lt;/code&gt; 値が返されたときに待機する残りのナノ秒数の見積もりを返します。タイムアウトになった場合は、ゼロ以下の値を返します。この値を使用して、待機が戻ったが待機状態がまだ保持されていない場合に、再待機するかどうか、および待機時間を決定できます。このメソッドの一般的な使用法は次の形式を取ります。</target>
        </trans-unit>
        <trans-unit id="22807dd693843414d3166f9d76a4f0ab3b4b4bd9" translate="yes" xml:space="preserve">
          <source>The method returns the sum of the number of bytes that have been pushed back and the value returned by &lt;a href=&quot;filterinputstream#available()&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The method returns the sum of the number of bytes that have been pushed back and the value returned by &lt;a href=&quot;filterinputstream#available()&quot;&gt; &lt;code&gt;available&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="769dd36c2f309466661aec7a75b851fd30f66882" translate="yes" xml:space="preserve">
          <source>The method returns the sum of the number of bytes that have been pushed back and the value returned by &lt;a href=&quot;filterinputstream#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、プッシュバックされたバイト数と&lt;a href=&quot;filterinputstream#available--&quot;&gt; &lt;code&gt;available&lt;/code&gt; &lt;/a&gt;によって返された値の合計を返します。</target>
        </trans-unit>
        <trans-unit id="cdb7f255588809397e808115b9458f128071df43" translate="yes" xml:space="preserve">
          <source>The method searches through the system-type entries, including &lt;code&gt;system,
 rewriteSystem, systemSuffix, delegateSystem&lt;/code&gt;, and &lt;code&gt;group&lt;/code&gt; entries in the current catalog in order to find a match.</source>
          <target state="translated">The method searches through the system-type entries, including &lt;code&gt;system, rewriteSystem, systemSuffix, delegateSystem&lt;/code&gt; , and &lt;code&gt;group&lt;/code&gt; entries in the current catalog in order to find a match.</target>
        </trans-unit>
        <trans-unit id="a2afd8bb1d0a6da6c75a9bebebf50a25ebca3c5c" translate="yes" xml:space="preserve">
          <source>The method searches through the uri-type entries, including &lt;code&gt;uri,
 rewriteURI, uriSuffix, delegateURI&lt;/code&gt; and &lt;code&gt;group&lt;/code&gt; entries in the current catalog in order to find a match.</source>
          <target state="translated">The method searches through the uri-type entries, including &lt;code&gt;uri, rewriteURI, uriSuffix, delegateURI&lt;/code&gt; and &lt;code&gt;group&lt;/code&gt; entries in the current catalog in order to find a match.</target>
        </trans-unit>
        <trans-unit id="216d790277e9b6cd604727689d5fc6d453f43302" translate="yes" xml:space="preserve">
          <source>The method should throw an exception if it is unable to process the error, or if it wishes execution to terminate immediately. The processor will not necessarily honor this request.</source>
          <target state="translated">メソッドは、エラーを処理できない場合、または実行の即時終了を望む場合に例外をスローする必要があります。プロセッサは必ずしもこの要求に応じるとは限りません。</target>
        </trans-unit>
        <trans-unit id="fe250e939b7e7db52403a1ef648db2140b1af77b" translate="yes" xml:space="preserve">
          <source>The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn)T&lt;/code&gt;.</source>
          <target state="translated">The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn)T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa6f42c80d224cda0b2c792cf80e5a6075e4aad7" translate="yes" xml:space="preserve">
          <source>The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T expectedValue, T newValue)T&lt;/code&gt;.</source>
          <target state="translated">The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T expectedValue, T newValue)T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a36d7c4d09bc50d171503ce472f931372ba7ea8d" translate="yes" xml:space="preserve">
          <source>The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T expectedValue, T newValue)boolean&lt;/code&gt;.</source>
          <target state="translated">The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T expectedValue, T newValue)boolean&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7899a3c45aee2a63be58f43fb7507deaf14b7d4d" translate="yes" xml:space="preserve">
          <source>The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T mask)T&lt;/code&gt;.</source>
          <target state="translated">The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T mask)T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39f1f090ab5791c96af8aef06404b250428d15f5" translate="yes" xml:space="preserve">
          <source>The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T newValue)T&lt;/code&gt;.</source>
          <target state="translated">The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T newValue)T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6f5c80e4e9cd2bac2c511593356bcb08dd77cd9" translate="yes" xml:space="preserve">
          <source>The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T newValue)void&lt;/code&gt;</source>
          <target state="translated">The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T newValue)void&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df0cfa1862f205e9a02308b8b61263f11b297c2b" translate="yes" xml:space="preserve">
          <source>The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T newValue)void&lt;/code&gt;.</source>
          <target state="translated">The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T newValue)void&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5802882f01d2ae9f4aa2d6373c5cdb1490dd819f" translate="yes" xml:space="preserve">
          <source>The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T value)T&lt;/code&gt;.</source>
          <target state="translated">The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T value)T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a5895c513c19101d431f066651cadee4994a6cd" translate="yes" xml:space="preserve">
          <source>The method that should be used to read an indexed property value. May return null if the property isn't indexed or is write-only.</source>
          <target state="translated">インデックス化されたプロパティの値を読み込むために使用するメソッド。プロパティがインデックス化されていない場合や書き込み専用の場合はnullを返すことがあります。</target>
        </trans-unit>
        <trans-unit id="4b08ff4ef56a4f901d8176c3c9d3e4ffa7c0f0db" translate="yes" xml:space="preserve">
          <source>The method that should be used to read the property value. May return null if the property can't be read.</source>
          <target state="translated">プロパティの値を読み込むために使用するメソッド。プロパティを読み込むことができない場合は null を返すことがあります。</target>
        </trans-unit>
        <trans-unit id="27d046710b3e478e214106309178510fcd767174" translate="yes" xml:space="preserve">
          <source>The method that should be used to write an indexed property value. May return null if the property isn't indexed or is read-only.</source>
          <target state="translated">インデックス付きプロパティの値を書き込むために使用するメソッド。プロパティがインデックス化されていない場合や読み取り専用の場合は null を返すことがあります。</target>
        </trans-unit>
        <trans-unit id="908a1d912ea96d1085e886bbb7a0220276726cc9" translate="yes" xml:space="preserve">
          <source>The method that should be used to write the property value. May return null if the property can't be written.</source>
          <target state="translated">プロパティの値を書き込むために使用するメソッド。プロパティを書き込むことができない場合は null を返すことがあります。</target>
        </trans-unit>
        <trans-unit id="9f2a6855e5dad9257b6848b559469ffc4f5de113" translate="yes" xml:space="preserve">
          <source>The method then tests that both arrays are equal in length, and that neither array contains a value larger than the largest available band index.</source>
          <target state="translated">次に,このメソッドは,両方の配列の長さが等しく,どちらの配列にも利用可能な最大のバンドインデックスよりも大きな値が含まれていないことをテストします.</target>
        </trans-unit>
        <trans-unit id="930c767b1d1ebf85cf795f6f392c161b88a6b486" translate="yes" xml:space="preserve">
          <source>The method throws &lt;code&gt;IllegalStateException&lt;/code&gt; if the clipboard is currently unavailable. For example, on some platforms, the system clipboard is unavailable while it is accessed by another application.</source>
          <target state="translated">The method throws &lt;code&gt;IllegalStateException&lt;/code&gt; if the clipboard is currently unavailable. For example, on some platforms, the system clipboard is unavailable while it is accessed by another application.</target>
        </trans-unit>
        <trans-unit id="9895b7a9795b5dbff6546ef043e299781d0fe80d" translate="yes" xml:space="preserve">
          <source>The method to use when painting outside the gradient bounds.</source>
          <target state="translated">グラデーションの範囲外でペイントするときに使用する方法です。</target>
        </trans-unit>
        <trans-unit id="ec0804b3da18a61f222951f395dd58dd51623934" translate="yes" xml:space="preserve">
          <source>The method used to access the array of listeners at the event source or null if it doesn't exist.</source>
          <target state="translated">イベントソースのリスナーの配列にアクセスするために使用されるメソッド。</target>
        </trans-unit>
        <trans-unit id="d1b1e281970d0ec8d5c6cbefb1e926c1a0c3863c" translate="yes" xml:space="preserve">
          <source>The method used to register a listener at the event source.</source>
          <target state="translated">イベントソースにリスナーを登録するためのメソッドです。</target>
        </trans-unit>
        <trans-unit id="3cfa4fe325cf93f02d82653b486a7ae683ea287e" translate="yes" xml:space="preserve">
          <source>The method used to remove a listener at the event source.</source>
          <target state="translated">イベントソースのリスナーを削除するために使用されるメソッドです。</target>
        </trans-unit>
        <trans-unit id="2a56f0a297591ec761ffc4464906f2896e34b7f6" translate="yes" xml:space="preserve">
          <source>The method writeObject is used to write an object to the stream. Any object, including Strings and arrays, is written with writeObject. Multiple objects or primitives can be written to the stream. The objects must be read back from the corresponding ObjectInputstream with the same types and in the same order as they were written.</source>
          <target state="translated">ストリームにオブジェクトを書き込むには writeObject メソッドを使用します。文字列や配列を含むすべてのオブジェクトは、writeObject で書き込まれます。複数のオブジェクトやプリミティブをストリームに書き込むことができます。オブジェクトは、対応する ObjectInputstream から同じ型で、書き込まれた順番で読み返す必要があります。</target>
        </trans-unit>
        <trans-unit id="41363265c8a4bd05d3a45429d86429e66f37d3cc" translate="yes" xml:space="preserve">
          <source>The methods &lt;a href=&quot;#getInstant()&quot;&gt;&lt;code&gt;getInstant()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getDateTimeBefore()&quot;&gt;&lt;code&gt;getDateTimeBefore()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getDateTimeAfter()&quot;&gt;&lt;code&gt;getDateTimeAfter()&lt;/code&gt;&lt;/a&gt; all represent the same instant.</source>
          <target state="translated">The methods &lt;a href=&quot;#getInstant()&quot;&gt; &lt;code&gt;getInstant()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#getDateTimeBefore()&quot;&gt; &lt;code&gt;getDateTimeBefore()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#getDateTimeAfter()&quot;&gt; &lt;code&gt;getDateTimeAfter()&lt;/code&gt; &lt;/a&gt; all represent the same instant.</target>
        </trans-unit>
        <trans-unit id="1d2f32a4b9ffbf5e3d66a95c06be2ec95ffc9ed9" translate="yes" xml:space="preserve">
          <source>The methods &lt;a href=&quot;zoneoffsettransition#getInstant--&quot;&gt;&lt;code&gt;getInstant()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;zoneoffsettransition#getDateTimeBefore--&quot;&gt;&lt;code&gt;getDateTimeBefore()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffsettransition#getDateTimeAfter--&quot;&gt;&lt;code&gt;getDateTimeAfter()&lt;/code&gt;&lt;/a&gt; all represent the same instant.</source>
          <target state="translated">方法&lt;a href=&quot;zoneoffsettransition#getInstant--&quot;&gt; &lt;code&gt;getInstant()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;zoneoffsettransition#getDateTimeBefore--&quot;&gt; &lt;code&gt;getDateTimeBefore()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;zoneoffsettransition#getDateTimeAfter--&quot;&gt; &lt;code&gt;getDateTimeAfter()&lt;/code&gt; は&lt;/a&gt;全て同じ瞬間を表します。</target>
        </trans-unit>
        <trans-unit id="2fa8e3c1943bf599da02611ada531a6bffa15fa8" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;getCacheSize&lt;/code&gt; and &lt;code&gt;setCacheSize&lt;/code&gt; define a read-write attribute of type &lt;code&gt;int&lt;/code&gt; called &lt;code&gt;CacheSize&lt;/code&gt; (with an initial capital, unlike the JavaBeans convention).</source>
          <target state="translated">メソッド &lt;code&gt;getCacheSize&lt;/code&gt; および &lt;code&gt;setCacheSize&lt;/code&gt; は、 &lt;code&gt;CacheSize&lt;/code&gt; と呼ばれる &lt;code&gt;int&lt;/code&gt; 型の読み取り/書き込み属性を定義します（JavaBeans規則とは異なり、最初の大文字を使用します）。</target>
        </trans-unit>
        <trans-unit id="f68f66a9cc678fa78140ffed606a6d1a687876f8" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;invokeExact&lt;/code&gt; and &lt;code&gt;invoke&lt;/code&gt; are declared to throw &lt;a href=&quot;../throwable&quot;&gt;&lt;code&gt;Throwable&lt;/code&gt;&lt;/a&gt;, which is to say that there is no static restriction on what a method handle can throw. Since the JVM does not distinguish between checked and unchecked exceptions (other than by their class, of course), there is no particular effect on bytecode shape from ascribing checked exceptions to method handle invocations. But in Java source code, methods which perform method handle calls must either explicitly throw &lt;code&gt;Throwable&lt;/code&gt;, or else must catch all throwables locally, rethrowing only those which are legal in the context, and wrapping ones which are illegal.</source>
          <target state="translated">メソッド &lt;code&gt;invokeExact&lt;/code&gt; および &lt;code&gt;invoke&lt;/code&gt; は、&lt;a href=&quot;../throwable&quot;&gt; &lt;code&gt;Throwable&lt;/code&gt; &lt;/a&gt;をスローするように宣言されています。つまり、メソッドハンドルがスローできるものに静的な制限はありません。 JVMは、チェックされた例外とチェックされていない例外を（クラスではなく）区別しないため、バイトコードの形状が、チェックされた例外をメソッドハンドルの呼び出しに割り当てることによる特別な影響はありません。ただし、Javaソースコードでは、メソッドハンドル呼び出しを実行するメソッドは、明示的に &lt;code&gt;Throwable&lt;/code&gt; をスローするか、すべてのスロー可能オブジェクトをローカルでキャッチして、コンテキストで正当なものだけを再スローし、不正なものをラップする必要があります。</target>
        </trans-unit>
        <trans-unit id="bf14ebb965e886d2951ba293b030b2b06853b999" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;setAsciiStream&lt;/code&gt;, &lt;code&gt;setBinaryStream&lt;/code&gt;, &lt;code&gt;setCharacterStream&lt;/code&gt;, and &lt;code&gt;setUnicodeStream&lt;/code&gt; (which is deprecated, so applications should use &lt;code&gt;getCharacterStream&lt;/code&gt; instead) take three parameters, so for them, the element in the array returned by &lt;code&gt;getParams&lt;/code&gt; is also an array. What is different about these setter methods is that in addition to the information provided by parameters, the array contains one of the &lt;code&gt;BaseRowSet&lt;/code&gt; constants indicating the type of stream being set.</source>
          <target state="translated">The methods &lt;code&gt;setAsciiStream&lt;/code&gt; , &lt;code&gt;setBinaryStream&lt;/code&gt; , &lt;code&gt;setCharacterStream&lt;/code&gt; , and &lt;code&gt;setUnicodeStream&lt;/code&gt; (which is deprecated, so applications should use &lt;code&gt;getCharacterStream&lt;/code&gt; instead) take three parameters, so for them, the element in the array returned by &lt;code&gt;getParams&lt;/code&gt; is also an array. What is different about these setter methods is that in addition to the information provided by parameters, the array contains one of the &lt;code&gt;BaseRowSet&lt;/code&gt; constants indicating the type of stream being set.</target>
        </trans-unit>
        <trans-unit id="f23e34ba9de16e07759fdba49f95969f12bcc468" translate="yes" xml:space="preserve">
          <source>The methods and constants which specify options in this interface are for implementation only. If you're not subclassing SocketImpl or DatagramSocketImpl, &lt;b&gt;you won't use these directly.&lt;/b&gt; There are type-safe methods to get/set each of these options in Socket, ServerSocket, DatagramSocket and MulticastSocket.</source>
          <target state="translated">このインターフェースのオプションを指定するメソッドと定数は、実装のみを目的としています。SocketImplまたはDatagramSocketImplをサブクラス化し&lt;b&gt;ない場合、これらを直接使用することはありません。&lt;/b&gt;Socket、ServerSocket、DatagramSocket、およびMulticastSocketには、これらの各オプションを取得/設定するタイプセーフなメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="7f4717636bd6cd82ae1347e0ad010ab81ed6937b" translate="yes" xml:space="preserve">
          <source>The methods and constructors of objects created by a class loader may reference other classes. To determine the class(es) referred to, the Java virtual machine invokes the &lt;a href=&quot;#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method of the class loader that originally created the class.</source>
          <target state="translated">The methods and constructors of objects created by a class loader may reference other classes. To determine the class(es) referred to, the Java virtual machine invokes the &lt;a href=&quot;#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt; method of the class loader that originally created the class.</target>
        </trans-unit>
        <trans-unit id="a1c8839f76f0c1cc8a34ad4ed7dc5ee39ef85f5c" translate="yes" xml:space="preserve">
          <source>The methods and constructors of objects created by a class loader may reference other classes. To determine the class(es) referred to, the Java virtual machine invokes the &lt;a href=&quot;classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method of the class loader that originally created the class.</source>
          <target state="translated">クラスローダーによって作成されたオブジェクトのメソッドとコンストラクターは、他のクラスを参照する場合があります。参照されるクラスを決定するために、Java仮想マシンは、最初にクラスを作成したクラスローダーの&lt;a href=&quot;classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="39c7b8f07a9efbfd307fba62e3dde13e6f8f3ece" translate="yes" xml:space="preserve">
          <source>The methods and data of class &lt;code&gt;Character&lt;/code&gt; are defined by the information in the</source>
          <target state="translated">クラス &lt;code&gt;Character&lt;/code&gt; のメソッドとデータは、</target>
        </trans-unit>
        <trans-unit id="e092e659a922c45ad545ffba4e9a01d03812d39f" translate="yes" xml:space="preserve">
          <source>The methods for rendering are:</source>
          <target state="translated">レンダリングの方法は</target>
        </trans-unit>
        <trans-unit id="f07d1193469161b64e1d588a574c3d2c16bf0681" translate="yes" xml:space="preserve">
          <source>The methods in the &lt;code&gt;Joinable&lt;/code&gt; interface allow a &lt;code&gt;RowSet&lt;/code&gt; object to set a match column, retrieve a match column, or unset a match column, which is the column upon which an SQL &lt;code&gt;JOIN&lt;/code&gt; can be based. An instance of a class that implements these methods can be added to a &lt;code&gt;JoinRowSet&lt;/code&gt; object to allow an SQL &lt;code&gt;JOIN&lt;/code&gt; relationship to be established.</source>
          <target state="translated">The methods in the &lt;code&gt;Joinable&lt;/code&gt; interface allow a &lt;code&gt;RowSet&lt;/code&gt; object to set a match column, retrieve a match column, or unset a match column, which is the column upon which an SQL &lt;code&gt;JOIN&lt;/code&gt; can be based. An instance of a class that implements these methods can be added to a &lt;code&gt;JoinRowSet&lt;/code&gt; object to allow an SQL &lt;code&gt;JOIN&lt;/code&gt; relationship to be established.</target>
        </trans-unit>
        <trans-unit id="4f2b4113e05c3868eafe1fc665c48c2e34550e14" translate="yes" xml:space="preserve">
          <source>The methods in this class all throw a &lt;code&gt;NullPointerException&lt;/code&gt;, if the specified array reference is null, except where noted.</source>
          <target state="translated">特に明記されていない限り、指定された配列参照がnullの場合、このクラスのメソッドはすべて &lt;code&gt;NullPointerException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="f9b1c1ad7998b39c0048260abd8cc2313f1bb8c1" translate="yes" xml:space="preserve">
          <source>The methods in this class are used by the service provider to construct the bits to send to the LDAP server. Applications typically only deal with the classes that implement this interface, supplying them with any information required for a particular extended operation request. It would then pass such a class as an argument to the &lt;code&gt;LdapContext.extendedOperation()&lt;/code&gt; method for performing the LDAPv3 extended operation.</source>
          <target state="translated">このクラスのメソッドは、LDAPサーバーに送信するビットを構築するためにサービスプロバイダーによって使用されます。アプリケーションは通常、このインターフェースを実装するクラスのみを扱い、特定の拡張操作要求に必要な情報を提供します。次に、LDAPv3拡張操作を実行するために、そのようなクラスを引数として &lt;code&gt;LdapContext.extendedOperation()&lt;/code&gt; メソッドに渡します。</target>
        </trans-unit>
        <trans-unit id="bf8f7e029ac8a3874d50034ad3f38bf2b8cd6257" translate="yes" xml:space="preserve">
          <source>The methods in this class can be used by the application to get low level information about the extended operation response. However, typically, the application will be using methods specific to the class that implements this interface. Such a class should have decoded the BER buffer in the response and should provide methods that allow the user to access that data in the response in a type-safe and friendly manner.</source>
          <target state="translated">このクラスのメソッドは、アプリケーションが拡張操作応答に関する低レベルの情報を取得するために使用することができます。しかし、典型的には、アプリケーションは、このインタフェースを実装したクラスに固有のメソッドを使用することになります。そのようなクラスは、応答中のBERバッファをデコードし、ユーザが応答中のそのデータにタイプセーフでフレンドリーな方法でアクセスすることを可能にするメソッドを提供することが望ましい。</target>
        </trans-unit>
        <trans-unit id="e44b2a0e16d7c476c1e2b813535b71f1d47ccc33" translate="yes" xml:space="preserve">
          <source>The methods in this class may be invoked concurrently by multiple threads in a single JVM without the need for external synchronization, and the results will be equivalent to some serial execution. If this class is used concurrently</source>
          <target state="translated">このクラスのメソッドは、外部同期を必要とせずに、単一のJVM内の複数のスレッドによって同時に呼び出される可能性があり、その結果はいくつかのシリアル実行と同等のものになります。このクラスを並行して使用する場合</target>
        </trans-unit>
        <trans-unit id="8c949cf9af8fb443cda22ad746c877480ab2743a" translate="yes" xml:space="preserve">
          <source>The methods in this interface are invoked internally when an application calls the method &lt;code&gt;RowSet.execute&lt;/code&gt;; an application programmer would not use them directly.</source>
          <target state="translated">The methods in this interface are invoked internally when an application calls the method &lt;code&gt;RowSet.execute&lt;/code&gt; ; an application programmer would not use them directly.</target>
        </trans-unit>
        <trans-unit id="e9bea883b737df934e6a48c16c675c6e0826af4d" translate="yes" xml:space="preserve">
          <source>The methods in this interface can be used by an applet to obtain information about its environment.</source>
          <target state="translated">このインターフェイスのメソッドは、アプレットが環境に関する情報を取得するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="256f0bfec8af2d80099c39667ba98e0fa83558c6" translate="yes" xml:space="preserve">
          <source>The methods in this interface support identification of objects by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2254.txt&quot;&gt;RFC 2254&lt;/a&gt; search filters.</source>
          <target state="translated">このインターフェースのメソッドは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2254.txt&quot;&gt;RFC 2254&lt;/a&gt;検索フィルターによるオブジェクトの識別をサポートします。</target>
        </trans-unit>
        <trans-unit id="1f232e016bcfec5180a282093404d0a4a6882d22" translate="yes" xml:space="preserve">
          <source>The methods of all classes in &lt;code&gt;java.util.concurrent&lt;/code&gt; and its subpackages extend these guarantees to higher-level synchronization. In particular:</source>
          <target state="translated">&lt;code&gt;java.util.concurrent&lt;/code&gt; とそのサブパッケージのすべてのクラスのメソッドは、これらの保証をより高いレベルの同期に拡張します。特に：</target>
        </trans-unit>
        <trans-unit id="4fbf7ceda94e2ce9605129678bea18869076707d" translate="yes" xml:space="preserve">
          <source>The methods of class &lt;code&gt;Class&lt;/code&gt; expose many characteristics of a class or interface. Most characteristics are derived from the &lt;code&gt;class&lt;/code&gt; file that the class loader passed to the Java Virtual Machine. A few characteristics are determined by the class loading environment at run time, such as the module returned by &lt;a href=&quot;#getModule()&quot;&gt;&lt;code&gt;getModule()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The methods of class &lt;code&gt;Class&lt;/code&gt; expose many characteristics of a class or interface. Most characteristics are derived from the &lt;code&gt;class&lt;/code&gt; file that the class loader passed to the Java Virtual Machine. A few characteristics are determined by the class loading environment at run time, such as the module returned by &lt;a href=&quot;#getModule()&quot;&gt; &lt;code&gt;getModule()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8c06c4b5c1c725337a3cff2da0da44820e6ab4d3" translate="yes" xml:space="preserve">
          <source>The methods of the &lt;code&gt;Graphics2D&lt;/code&gt; interface that use the outline &lt;code&gt;Shape&lt;/code&gt; returned by a &lt;code&gt;Stroke&lt;/code&gt; object include &lt;code&gt;draw&lt;/code&gt; and any other methods that are implemented in terms of that method, such as &lt;code&gt;drawLine&lt;/code&gt;, &lt;code&gt;drawRect&lt;/code&gt;, &lt;code&gt;drawRoundRect&lt;/code&gt;, &lt;code&gt;drawOval&lt;/code&gt;, &lt;code&gt;drawArc&lt;/code&gt;, &lt;code&gt;drawPolyline&lt;/code&gt;, and &lt;code&gt;drawPolygon&lt;/code&gt;.</source>
          <target state="translated">The methods of the &lt;code&gt;Graphics2D&lt;/code&gt; interface that use the outline &lt;code&gt;Shape&lt;/code&gt; returned by a &lt;code&gt;Stroke&lt;/code&gt; object include &lt;code&gt;draw&lt;/code&gt; and any other methods that are implemented in terms of that method, such as &lt;code&gt;drawLine&lt;/code&gt; , &lt;code&gt;drawRect&lt;/code&gt; , &lt;code&gt;drawRoundRect&lt;/code&gt; , &lt;code&gt;drawOval&lt;/code&gt; , &lt;code&gt;drawArc&lt;/code&gt; , &lt;code&gt;drawPolyline&lt;/code&gt; , and &lt;code&gt;drawPolygon&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba939efdaf2f5d46e723b15a2f6d210988c9dc6d" translate="yes" xml:space="preserve">
          <source>The methods of this class ( that accept a String header name ), and the &lt;code&gt;Map&lt;/code&gt; returned by the &lt;a href=&quot;#map()&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; method, operate without regard to case when retrieving the header value(s).</source>
          <target state="translated">The methods of this class ( that accept a String header name ), and the &lt;code&gt;Map&lt;/code&gt; returned by the &lt;a href=&quot;#map()&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt; method, operate without regard to case when retrieving the header value(s).</target>
        </trans-unit>
        <trans-unit id="ac66d0aaaacddda7c8628c76f8814b7513844fdf" translate="yes" xml:space="preserve">
          <source>The methods of this class all throw a &lt;code&gt;NullPointerException&lt;/code&gt; if the collections or class objects provided to them are null.</source>
          <target state="translated">このクラスのメソッドは、提供されたコレクションまたはクラスオブジェクトがnullの場合、すべて &lt;code&gt;NullPointerException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="b15b6e874e547e9e8ec5c26b9a529230eaf2be38" translate="yes" xml:space="preserve">
          <source>The methods previous() and next() are used for iteration. They return DONE if they would move outside the range from getBeginIndex() to getEndIndex() -1, signaling that the iterator has reached the end of the sequence. DONE is also returned by other methods to indicate that the current index is outside this range.</source>
          <target state="translated">メソッド previous()および next()は、反復処理に使用されます。これらのメソッドは、getBeginIndex()から getEndIndex()-1 までの範囲外に移動した場合に DONE を返し、イテレータがシーケンスの最後に到達したことを示します。他のメソッドでも、現在のインデックスがこの範囲外にあることを示すために DONE が返されます。</target>
        </trans-unit>
        <trans-unit id="d8a896db782172f2505139879d73b1a7c70dffac" translate="yes" xml:space="preserve">
          <source>The methods related to observing mutations to the document are:</source>
          <target state="translated">文書への突然変異の観測に関連する方法は、以下の通りです。</target>
        </trans-unit>
        <trans-unit id="dcf7ce0d82f3dbedc197b205333a23ce9baeeeb9" translate="yes" xml:space="preserve">
          <source>The methods that accept an &lt;code&gt;int&lt;/code&gt; value support all Unicode characters, including supplementary characters. For example, &lt;code&gt;Character.isLetter(0x2F81A)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; because the code point value represents a letter (a CJK ideograph).</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 値を受け入れるメソッドは、補助文字を含むすべてのUnicode文字をサポートします。たとえば、コードポイント値が文字（CJK表意文字）を表すため、 &lt;code&gt;Character.isLetter(0x2F81A)&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0e9f59343b1741d2ad18d4f64373c4897b94448c" translate="yes" xml:space="preserve">
          <source>The methods that create processes may not work well for special processes on certain native platforms, such as native windowing processes, daemon processes, Win16/DOS processes on Microsoft Windows, or shell scripts.</source>
          <target state="translated">プロセスを作成する方法は、ネイティブウィンドウプロセス、デーモンプロセス、Microsoft Windows の Win16/DOS プロセス、シェルスクリプトなど、特定のネイティブプラットフォーム上の特殊なプロセスに対してはうまく動作しない場合があります。</target>
        </trans-unit>
        <trans-unit id="b71e3777c8c977b532490037689faa12fb9e2e35" translate="yes" xml:space="preserve">
          <source>The methods that only accept a &lt;code&gt;char&lt;/code&gt; value cannot support supplementary characters. They treat &lt;code&gt;char&lt;/code&gt; values from the surrogate ranges as undefined characters. For example, &lt;code&gt;Character.isLetter('\uD840')&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, even though this specific value if followed by any low-surrogate value in a string would represent a letter.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 値のみを受け入れるメソッドは、補助文字をサポートできません。サロゲート範囲の &lt;code&gt;char&lt;/code&gt; 値を未定義の文字として扱います。たとえば、 &lt;code&gt;Character.isLetter('\uD840')&lt;/code&gt; は &lt;code&gt;false&lt;/code&gt; を返します。ただし、この特定の値の後に文字列内のサロゲート値が続く場合は文字を表します。</target>
        </trans-unit>
        <trans-unit id="cce05671072ffa768c3e060a4fed0ba60bfcf876" translate="yes" xml:space="preserve">
          <source>The micro-of-day.</source>
          <target state="translated">マイクロ・オブ・デイ。</target>
        </trans-unit>
        <trans-unit id="012bea3abbd9eec2b60f0cb944c493f58a31a682" translate="yes" xml:space="preserve">
          <source>The micro-of-second.</source>
          <target state="translated">マイクロ・オブ・セコンド。</target>
        </trans-unit>
        <trans-unit id="eb2247eaaba02959af49dbd11b3740337dcf42ce" translate="yes" xml:space="preserve">
          <source>The middle input tray in the printer.</source>
          <target state="translated">プリンタの中段の入力トレイです。</target>
        </trans-unit>
        <trans-unit id="32c153e5d584c8cab991115e3522d22d789d047f" translate="yes" xml:space="preserve">
          <source>The milli-of-day.</source>
          <target state="translated">ミリの日。</target>
        </trans-unit>
        <trans-unit id="3b415ac04f1b330955bf35e2afa52b9cb732bd02" translate="yes" xml:space="preserve">
          <source>The milli-of-second.</source>
          <target state="translated">ミリ秒のこと。</target>
        </trans-unit>
        <trans-unit id="2f6279f49fbee882c0c522be365eba539b886cf5" translate="yes" xml:space="preserve">
          <source>The millis property will be initialized to the current time.</source>
          <target state="translated">millisプロパティは現在の時刻に初期化されます。</target>
        </trans-unit>
        <trans-unit id="7da091c278c4791ecff04eb76ed5827fe4694307" translate="yes" xml:space="preserve">
          <source>The millisecond precision of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.</source>
          <target state="translated">The millisecond precision of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6777e9b07e5f7f3af56c4b55dd6d8aed2307bf58" translate="yes" xml:space="preserve">
          <source>The milliseconds to add to UTC to get local time.</source>
          <target state="translated">現地時間を取得するためにUTCに追加するミリ秒。</target>
        </trans-unit>
        <trans-unit id="c1888dd3fc2c61164d0f647a31d752f705f37737" translate="yes" xml:space="preserve">
          <source>The minimal number of days in the first week. For example, the ISO-8601 standard counts the first week as needing at least 4 days.</source>
          <target state="translated">最初の週の最小日数。例えば、ISO-8601規格では、最初の1週間は少なくとも4日必要であるとカウントしています。</target>
        </trans-unit>
        <trans-unit id="b77330297991048617c8dd5d0f00a4b93db8dccb" translate="yes" xml:space="preserve">
          <source>The minimize button text property.</source>
          <target state="translated">最小化ボタンのテキストプロパティです。</target>
        </trans-unit>
        <trans-unit id="9802a60df3633c50edae56d461e6ac93844127b9" translate="yes" xml:space="preserve">
          <source>The minimize icon.</source>
          <target state="translated">最小化のアイコンです。</target>
        </trans-unit>
        <trans-unit id="a23319c3216e82c5bdfb981d32b492582aa4945e" translate="yes" xml:space="preserve">
          <source>The minimum and maximum number of integer digits are interpreted together:</source>
          <target state="translated">整数の最小桁数と最大桁数は一緒に解釈されます。</target>
        </trans-unit>
        <trans-unit id="35a27b93dda62a013e257da00e049d12ea692fd9" translate="yes" xml:space="preserve">
          <source>The minimum and maximum set methods &quot;correct&quot; the other three properties to accommodate their new value argument. For example setting the model's minimum may change its maximum, value, and extent properties (in that order), to maintain the constraints specified above.</source>
          <target state="translated">最小値と最大値の設定メソッドは、新しい値の引数に対応するために、他の3つのプロパティを「修正」します。例えば、モデルの最小値を設定すると、上で指定された制約を維持するために、最大値、値、およびエクステントのプロパティを(この順に)変更することができます。</target>
        </trans-unit>
        <trans-unit id="98f3f783b71e0a20dc1a4555bf0378c8c24abe0d" translate="yes" xml:space="preserve">
          <source>The minimum height of a grid layout is the largest minimum height of all of the components in the container times the number of rows, plus the vertical padding times the number of rows minus one, plus the top and bottom insets of the target container.</source>
          <target state="translated">グリッドレイアウトの最小高さは、コンテナ内のすべてのコンポーネントの最小高さに行数をかけたものに、垂直方向のパディングを行数から1を引いたものに加え、ターゲットコンテナの上下のインセットを加えたものが最大の最小高さとなります。</target>
        </trans-unit>
        <trans-unit id="e92f52da3040099a15ede70db9920c3577d612c6" translate="yes" xml:space="preserve">
          <source>The minimum index of a progressive pass to read from the source.</source>
          <target state="translated">ソースから読み込むプログレッシブパスの最小インデックス。</target>
        </trans-unit>
        <trans-unit id="4e8a0a7939184991efd16774d48fcc9a4d9dfcd2" translate="yes" xml:space="preserve">
          <source>The minimum index of a progressive pass to read from the source. By default, the value is set to 0, which indicates that passes starting with the first available pass should be decoded.</source>
          <target state="translated">ソースから読み出すプログレッシブパスの最小インデックス。デフォルトでは、この値は 0 に設定されており、最初の利用可能なパスから始まるパスがデコードされるべきであることを示します。</target>
        </trans-unit>
        <trans-unit id="bd51c61096347bad094857c5e008f796178fd8ef" translate="yes" xml:space="preserve">
          <source>The minimum normalized component value.</source>
          <target state="translated">正規化された成分値の最小値。</target>
        </trans-unit>
        <trans-unit id="b08e3d0656c9b7803ad29c8b58ae2ace6e4bd253" translate="yes" xml:space="preserve">
          <source>The minimum priority that a thread can have.</source>
          <target state="translated">スレッドが持つことができる最小の優先度。</target>
        </trans-unit>
        <trans-unit id="cbb5d37dc4d790a9dba2a103cd7fc2ea1af9db2f" translate="yes" xml:space="preserve">
          <source>The minimum radix available for conversion to and from strings.</source>
          <target state="translated">文字列への変換と文字列からの変換で利用可能な最小基数。</target>
        </trans-unit>
        <trans-unit id="3077331e7366d18fa715ceb7d901dde04546de29" translate="yes" xml:space="preserve">
          <source>The minimum radix available for conversion to and from strings. The constant value of this field is the smallest value permitted for the radix argument in radix-conversion methods such as the &lt;code&gt;digit&lt;/code&gt; method, the &lt;code&gt;forDigit&lt;/code&gt; method, and the &lt;code&gt;toString&lt;/code&gt; method of class &lt;code&gt;Integer&lt;/code&gt;.</source>
          <target state="translated">文字列との変換に使用できる最小の基数。このフィールドの定数値は、 &lt;code&gt;Integer&lt;/code&gt; クラスの &lt;code&gt;digit&lt;/code&gt; メソッド、 &lt;code&gt;forDigit&lt;/code&gt; メソッド、 &lt;code&gt;toString&lt;/code&gt; メソッドなどの基数変換メソッドの基数引数に許可されている最小値です。</target>
        </trans-unit>
        <trans-unit id="e50f636aa7c810c30c501b99665a939e31839e52" translate="yes" xml:space="preserve">
          <source>The minimum set of methods for layout are:</source>
          <target state="translated">レイアウトのための最低限のメソッドのセットです。</target>
        </trans-unit>
        <trans-unit id="205371b94b244af14f6cabf4a44e3cfe8c73e76b" translate="yes" xml:space="preserve">
          <source>The minimum size is the size of the display area plus insets plus the button.</source>
          <target state="translated">最小サイズは、表示領域+インセット+ボタンのサイズです。</target>
        </trans-unit>
        <trans-unit id="3690b25e2f39160f0f56e905bf68cd8b7e64d3b0" translate="yes" xml:space="preserve">
          <source>The minimum size of a &lt;code&gt;ScrollPane&lt;/code&gt; is the size of the insets plus minimum size of the viewport, plus the scrollpane's viewportBorder insets, plus the minimum size of the visible headers, plus the minimum size of the scrollbars whose displayPolicy isn't NEVER.</source>
          <target state="translated">The minimum size of a &lt;code&gt;ScrollPane&lt;/code&gt; is the size of the insets plus minimum size of the viewport, plus the scrollpane's viewportBorder insets, plus the minimum size of the visible headers, plus the minimum size of the scrollbars whose displayPolicy isn't NEVER.</target>
        </trans-unit>
        <trans-unit id="57a603d748c9a77c02bf11aba17ef85929085643" translate="yes" xml:space="preserve">
          <source>The minimum size required.</source>
          <target state="translated">必要最低限のサイズ。</target>
        </trans-unit>
        <trans-unit id="e2c15b19cbed67ea24b210fb8b543082e37a8941" translate="yes" xml:space="preserve">
          <source>The minimum size required. For a component &lt;code&gt;comp&lt;/code&gt;, this should be equal to either &lt;code&gt;comp.getMinimumSize().width&lt;/code&gt; or &lt;code&gt;comp.getMinimumSize().height&lt;/code&gt;.</source>
          <target state="translated">The minimum size required. For a component &lt;code&gt;comp&lt;/code&gt; , this should be equal to either &lt;code&gt;comp.getMinimumSize().width&lt;/code&gt; or &lt;code&gt;comp.getMinimumSize().height&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30de3afa3a18bc7fdf3d3a0b78834fa743a12f3e" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;Instant&lt;/code&gt;, '-1000000000-01-01T00:00Z'.</source>
          <target state="translated">The minimum supported &lt;code&gt;Instant&lt;/code&gt; , '-1000000000-01-01T00:00Z'.</target>
        </trans-unit>
        <trans-unit id="1079249c31ebba26f6b94e4287d0c29dd8ca364c" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;Instant&lt;/code&gt;, '-1000000000-01-01T00:00Z'. This could be used by an application as a &quot;far past&quot; instant.</source>
          <target state="translated">サポートされる最小の &lt;code&gt;Instant&lt;/code&gt; 、「-1000000000-01-01T00：00Z」。これは、「過去の」瞬間としてアプリケーションで使用できます。</target>
        </trans-unit>
        <trans-unit id="76cfe8db5ea1a8d25819f30c0b8f625bd66ea211" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;LocalDate&lt;/code&gt;, '-999999999-01-01'.</source>
          <target state="translated">The minimum supported &lt;code&gt;LocalDate&lt;/code&gt; , '-999999999-01-01'.</target>
        </trans-unit>
        <trans-unit id="5f720ed7cf76100435b3548f72b4aa7a8f78154b" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;LocalDate&lt;/code&gt;, '-999999999-01-01'. This could be used by an application as a &quot;far past&quot; date.</source>
          <target state="translated">サポートされている最小の &lt;code&gt;LocalDate&lt;/code&gt; 、「-999999999-01-01」。これは、「過去」の日付としてアプリケーションで使用できます。</target>
        </trans-unit>
        <trans-unit id="e5a840bd5defdc3c55712bb650b591d7989521bf" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;LocalDateTime&lt;/code&gt;, '-999999999-01-01T00:00:00'.</source>
          <target state="translated">The minimum supported &lt;code&gt;LocalDateTime&lt;/code&gt; , '-999999999-01-01T00:00:00'.</target>
        </trans-unit>
        <trans-unit id="edda553e59b5b183f028875cb568ae44225c29be" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;LocalDateTime&lt;/code&gt;, '-999999999-01-01T00:00:00'. This is the local date-time of midnight at the start of the minimum date. This combines &lt;a href=&quot;localdate#MIN&quot;&gt;&lt;code&gt;LocalDate.MIN&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localtime#MIN&quot;&gt;&lt;code&gt;LocalTime.MIN&lt;/code&gt;&lt;/a&gt;. This could be used by an application as a &quot;far past&quot; date-time.</source>
          <target state="translated">サポートされる最小 &lt;code&gt;LocalDateTime&lt;/code&gt; 、「-999999999-01-01T00：00：00」。これは、最小日付の最初の午前0時のローカル日付時刻です。これは&lt;a href=&quot;localdate#MIN&quot;&gt; &lt;code&gt;LocalDate.MIN&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;localtime#MIN&quot;&gt; &lt;code&gt;LocalTime.MIN&lt;/code&gt; を&lt;/a&gt;組み合わせたものです。これは、「過去の」日時としてアプリケーションで使用できます。</target>
        </trans-unit>
        <trans-unit id="3d7781416650441b8c40b7cf42692976437f71d2" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;LocalTime&lt;/code&gt;, '00:00'.</source>
          <target state="translated">The minimum supported &lt;code&gt;LocalTime&lt;/code&gt; , '00:00'.</target>
        </trans-unit>
        <trans-unit id="6de8290bca9f960ba54ce582e866ef778c1c4612" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;LocalTime&lt;/code&gt;, '00:00'. This is the time of midnight at the start of the day.</source>
          <target state="translated">サポートされている最小の &lt;code&gt;LocalTime&lt;/code&gt; 、「00:00」。これは、一日の始まりの真夜中の時間です。</target>
        </trans-unit>
        <trans-unit id="9da8564e7571682085369a996e22e81a2e598909" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;OffsetDateTime&lt;/code&gt;, '-999999999-01-01T00:00:00+18:00'.</source>
          <target state="translated">The minimum supported &lt;code&gt;OffsetDateTime&lt;/code&gt; , '-999999999-01-01T00:00:00+18:00'.</target>
        </trans-unit>
        <trans-unit id="b3ce16d870d460569b094ad8fc0c1bff37370482" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;OffsetDateTime&lt;/code&gt;, '-999999999-01-01T00:00:00+18:00'. This is the local date-time of midnight at the start of the minimum date in the maximum offset (larger offsets are earlier on the time-line). This combines &lt;a href=&quot;localdatetime#MIN&quot;&gt;&lt;code&gt;LocalDateTime.MIN&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffset#MAX&quot;&gt;&lt;code&gt;ZoneOffset.MAX&lt;/code&gt;&lt;/a&gt;. This could be used by an application as a &quot;far past&quot; date-time.</source>
          <target state="translated">サポートされる最小の &lt;code&gt;OffsetDateTime&lt;/code&gt; 、「-999999999-01-01T00：00：00 + 18：00」。これは、最大オフセットの最小日付の始まりの午前0時のローカル日付時刻です（オフセットが大きいほど、タイムラインで早くなります）。これは&lt;a href=&quot;localdatetime#MIN&quot;&gt; &lt;code&gt;LocalDateTime.MIN&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;zoneoffset#MAX&quot;&gt; &lt;code&gt;ZoneOffset.MAX&lt;/code&gt; を&lt;/a&gt;組み合わせたものです。これは、「過去の」日時としてアプリケーションで使用できます。</target>
        </trans-unit>
        <trans-unit id="9d5458561eebbfe1a9323f79b1d38494586759f5" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;OffsetTime&lt;/code&gt;, '00:00:00+18:00'.</source>
          <target state="translated">The minimum supported &lt;code&gt;OffsetTime&lt;/code&gt; , '00:00:00+18:00'.</target>
        </trans-unit>
        <trans-unit id="ffec1f8e75141092e1bede08d9de5db86a65aee4" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;OffsetTime&lt;/code&gt;, '00:00:00+18:00'. This is the time of midnight at the start of the day in the maximum offset (larger offsets are earlier on the time-line). This combines &lt;a href=&quot;localtime#MIN&quot;&gt;&lt;code&gt;LocalTime.MIN&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffset#MAX&quot;&gt;&lt;code&gt;ZoneOffset.MAX&lt;/code&gt;&lt;/a&gt;. This could be used by an application as a &quot;far past&quot; date.</source>
          <target state="translated">サポートされる最小の &lt;code&gt;OffsetTime&lt;/code&gt; 、「00：00：00 + 18：00」。これは、最大オフセットの1日の始めの真夜中の時刻です（オフセットが大きいほど、タイムラインで早くなります）。これは&lt;a href=&quot;localtime#MIN&quot;&gt; &lt;code&gt;LocalTime.MIN&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;zoneoffset#MAX&quot;&gt; &lt;code&gt;ZoneOffset.MAX&lt;/code&gt; を&lt;/a&gt;組み合わせたものです。これは、「過去」の日付としてアプリケーションで使用できます。</target>
        </trans-unit>
        <trans-unit id="3ceea9174f0075d07f9e4c2621111a5f2e242d4a" translate="yes" xml:space="preserve">
          <source>The minimum supported year, '-999,999,999'.</source>
          <target state="translated">'-999,999,999'という最低サポート年。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
