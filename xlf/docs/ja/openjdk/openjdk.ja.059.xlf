<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="9c7be5f46b9993beedafe18d1daa7444f7e43eb1" translate="yes" xml:space="preserve">
          <source>An estimate of the total capacity of the buffers in this pool in bytes</source>
          <target state="translated">このプール内のバッファの総容量をバイト単位で推定したもの。</target>
        </trans-unit>
        <trans-unit id="dcee934079c93a6663a7d12ea517f10308a431a9" translate="yes" xml:space="preserve">
          <source>An etched border UI resource.</source>
          <target state="translated">エッチングされたボーダーのUIリソース。</target>
        </trans-unit>
        <trans-unit id="a7cd1c6c9191e374812a4e569c5f204b15898e6d" translate="yes" xml:space="preserve">
          <source>An even-odd winding rule for determining the interior of a path.</source>
          <target state="translated">パスの内部を決定するための偶数巻ルール。</target>
        </trans-unit>
        <trans-unit id="6c81d97c6dccc30340a15355e34ff8e97b7403ed" translate="yes" xml:space="preserve">
          <source>An event emitted by a &lt;code&gt;Preferences&lt;/code&gt; node to indicate that a child of that node has been added or removed.</source>
          <target state="translated">&lt;code&gt;Preferences&lt;/code&gt; ノードによって発行され、そのノードの子が追加または削除されたことを示すイベント。</target>
        </trans-unit>
        <trans-unit id="06c96077886494750aabd7c2320ccfb76b17746e" translate="yes" xml:space="preserve">
          <source>An event emitted by a &lt;code&gt;Preferences&lt;/code&gt; node to indicate that a preference has been added, removed or has had its value changed.</source>
          <target state="translated">&lt;code&gt;Preferences&lt;/code&gt; が追加、削除、または値が変更されたことを示すために、設定ノードによって発行されるイベント。</target>
        </trans-unit>
        <trans-unit id="04d558491dd736a8c703c8d4137060a56c89dc82" translate="yes" xml:space="preserve">
          <source>An event indicating that an operation which can be undone has occurred.</source>
          <target state="translated">元に戻せる操作が発生したことを示すイベント。</target>
        </trans-unit>
        <trans-unit id="282e2ba6326540f5db6b1623230bf3fbe382bc8a" translate="yes" xml:space="preserve">
          <source>An event is classified by its &lt;a href=&quot;#kind()&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; and has a &lt;a href=&quot;#count()&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; to indicate the number of times that the event has been observed. This allows for efficient representation of repeated events. The &lt;a href=&quot;#context()&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; method returns any context associated with the event. In the case of a repeated event then the context is the same for all events.</source>
          <target state="translated">イベントはその&lt;a href=&quot;#kind()&quot;&gt; &lt;code&gt;kind&lt;/code&gt; &lt;/a&gt;によって分類され、イベントが観察された&lt;a href=&quot;#count()&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt;を示すカウントがあります。これにより、繰り返されるイベントを効率的に表現できます。&lt;a href=&quot;#context()&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;方法は、イベントに関連付けられた任意のコンテキストを返します。繰り返されるイベントの場合、コンテキストはすべてのイベントで同じです。</target>
        </trans-unit>
        <trans-unit id="9f5e54c6bf6e5cb8c0aad4f8bf44cffe32722464" translate="yes" xml:space="preserve">
          <source>An event is classified by its &lt;a href=&quot;watchevent#kind--&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; and has a &lt;a href=&quot;watchevent#count--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; to indicate the number of times that the event has been observed. This allows for efficient representation of repeated events. The &lt;a href=&quot;watchevent#context--&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; method returns any context associated with the event. In the case of a repeated event then the context is the same for all events.</source>
          <target state="translated">イベントはその&lt;a href=&quot;watchevent#kind--&quot;&gt; &lt;code&gt;kind&lt;/code&gt; &lt;/a&gt;によって分類され、イベントが観測された&lt;a href=&quot;watchevent#count--&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt;を示すカウントがあります。これにより、繰り返しイベントを効率的に表現できます。&lt;a href=&quot;watchevent#context--&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;方法は、イベントに関連付けられた任意のコンテキストを返します。繰り返しイベントの場合、コンテキストはすべてのイベントで同じです。</target>
        </trans-unit>
        <trans-unit id="e419c0a367c0952c77049429cb02258e2eeee887" translate="yes" xml:space="preserve">
          <source>An event kind, for the purposes of identification.</source>
          <target state="translated">識別のためのイベントの種類。</target>
        </trans-unit>
        <trans-unit id="15f065001a5c026588b520e089120d59c698781d" translate="yes" xml:space="preserve">
          <source>An event modifier that qualifies how a &lt;a href=&quot;watchable&quot;&gt;&lt;code&gt;Watchable&lt;/code&gt;&lt;/a&gt; is registered with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">格、どのようにした場合修飾子&lt;a href=&quot;watchable&quot;&gt; &lt;code&gt;Watchable&lt;/code&gt; &lt;/a&gt;に登録されている&lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3c2026b10e715c2c07e83b29999c1d04110c221" translate="yes" xml:space="preserve">
          <source>An event or a repeated event for an object that is registered with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; に&lt;/a&gt;登録されているオブジェクトのイベントまたは繰り返しイベント。</target>
        </trans-unit>
        <trans-unit id="eaa866bbbceec3694667362fb059460ba9e2a202" translate="yes" xml:space="preserve">
          <source>An event reported to a child component that originated from an ancestor in the component hierarchy.</source>
          <target state="translated">コンポーネント階層の祖先に由来する子コンポーネントに報告されたイベント。</target>
        </trans-unit>
        <trans-unit id="d686f847c2b54ec5ed578041a97ae28c8f068475" translate="yes" xml:space="preserve">
          <source>An event source may send a null object as the name to indicate that an arbitrary set of if its properties have changed. In this case the old and new values should also be null.</source>
          <target state="translated">イベントソースは、そのプロパティが変更された場合の任意のセットを示すために、名前としてヌルオブジェクトを送信することがあります。この場合、古い値と新しい値もNULLでなければなりません。</target>
        </trans-unit>
        <trans-unit id="26aa59554694adf8e7ed286d8ac1c037112ef997" translate="yes" xml:space="preserve">
          <source>An event that characterizes a change in selection.</source>
          <target state="translated">選択肢の変化を特徴づけるイベント。</target>
        </trans-unit>
        <trans-unit id="896712288c4a0b9a20bdeeeb5e2bf21d577404e3" translate="yes" xml:space="preserve">
          <source>An event that characterizes a change in selection. The change is limited to a a single inclusive interval. The selection of at least one index within the range will have changed. A decent &lt;code&gt;ListSelectionModel&lt;/code&gt; implementation will keep the range as small as possible. &lt;code&gt;ListSelectionListeners&lt;/code&gt; will generally query the source of the event for the new selected status of each potentially changed row.</source>
          <target state="translated">選択の変更を特徴付けるイベント。変更は、単一の包括的間隔に制限されます。範囲内の少なくとも1つのインデックスの選択が変更されます。適切な &lt;code&gt;ListSelectionModel&lt;/code&gt; 実装は、範囲を可能な限り小さく保ちます。 &lt;code&gt;ListSelectionListeners&lt;/code&gt; は通常、イベントのソースに、変更される可能性のある各行の新しく選択されたステータスを照会します。</target>
        </trans-unit>
        <trans-unit id="0248e0950e47fd55b01c78efcb8541d03fdf48e8" translate="yes" xml:space="preserve">
          <source>An event that characterizes a change in the current selection.</source>
          <target state="translated">現在の選択範囲の変化を特徴づけるイベント。</target>
        </trans-unit>
        <trans-unit id="e1fa060ce495a1babb59f2ae7a5a0372e80523e1" translate="yes" xml:space="preserve">
          <source>An event that characterizes a change in the current selection. The change is based on any number of paths. TreeSelectionListeners will generally query the source of the event for the new selected status of each potentially changed row.</source>
          <target state="translated">現在の選択範囲の変更を特徴づけるイベント。変更は任意の数のパスに基づいて行われます。TreeSelectionListeners は通常、変更された可能性のある各行の新しい選択状態をイベントのソースに問い合わせます。</target>
        </trans-unit>
        <trans-unit id="c5b61cabf66d75cb1bbaeac2e194f66f194da3d7" translate="yes" xml:space="preserve">
          <source>An event used to identify a single path in a tree.</source>
          <target state="translated">ツリー内の単一パスを識別するために使用されるイベント。</target>
        </trans-unit>
        <trans-unit id="e7393bb3557d2d0e2a11d72b0ec0cdcf48fa375f" translate="yes" xml:space="preserve">
          <source>An event used to identify a single path in a tree. The source returned by &lt;b&gt;getSource&lt;/b&gt; will be an instance of JTree.</source>
          <target state="translated">ツリー内の単一のパスを識別するために使用されるイベント。&lt;b&gt;getSource&lt;/b&gt;によって返されるソースは、JTreeのインスタンスになります。</target>
        </trans-unit>
        <trans-unit id="e10dbfff72f6f17201771dc21ad8044981bd65fd" translate="yes" xml:space="preserve">
          <source>An event which executes the &lt;code&gt;run()&lt;/code&gt; method on a &lt;code&gt;Runnable
 &lt;/code&gt; when dispatched by the AWT event dispatcher thread.</source>
          <target state="translated">AWTイベントディスパッチャスレッドによってディスパッチされたときに &lt;code&gt;Runnable &lt;/code&gt; で &lt;code&gt;run()&lt;/code&gt; メソッドを実行するイベント。</target>
        </trans-unit>
        <trans-unit id="50605879fa1adc5a2e983156b4f55e7260546062" translate="yes" xml:space="preserve">
          <source>An event which executes the &lt;code&gt;run()&lt;/code&gt; method on a &lt;code&gt;Runnable
 &lt;/code&gt; when dispatched by the AWT event dispatcher thread. This class can be used as a reference implementation of &lt;code&gt;ActiveEvent&lt;/code&gt; rather than declaring a new class and defining &lt;code&gt;dispatch()&lt;/code&gt;.</source>
          <target state="translated">AWTイベントディスパッチャスレッドによってディスパッチされたときに &lt;code&gt;Runnable &lt;/code&gt; で &lt;code&gt;run()&lt;/code&gt; メソッドを実行するイベント。このクラスは、新しいクラスを宣言して &lt;code&gt;dispatch()&lt;/code&gt; を定義するのではなく、 &lt;code&gt;ActiveEvent&lt;/code&gt; のリファレンス実装として使用できます。</target>
        </trans-unit>
        <trans-unit id="06f8f57a66f53efff7a9621c6e8b3ff1a48e68c9" translate="yes" xml:space="preserve">
          <source>An event which indicates a change to the &lt;code&gt;Component&lt;/code&gt; hierarchy to which &lt;code&gt;Component&lt;/code&gt; belongs.</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; 属する &lt;code&gt;Component&lt;/code&gt; 階層の変更を示すイベント。</target>
        </trans-unit>
        <trans-unit id="d1bee5f36c1751ee7475abdc51fc82965a2048ae" translate="yes" xml:space="preserve">
          <source>An event which indicates that a keystroke occurred in a component.</source>
          <target state="translated">コンポーネントでキーストロークが発生したことを示すイベント。</target>
        </trans-unit>
        <trans-unit id="a896869c7ea1c755a16f34ba3ea21c511b4471ab" translate="yes" xml:space="preserve">
          <source>An event which indicates that a mouse action occurred in a component.</source>
          <target state="translated">コンポーネントでマウスの動作が発生したことを示すイベント。</target>
        </trans-unit>
        <trans-unit id="c7f62ef3a2c23c52ea64bb9a248c4f0487b93a84" translate="yes" xml:space="preserve">
          <source>An event which indicates that a mouse action occurred in a component. A mouse action is considered to occur in a particular component if and only if the mouse cursor is over the unobscured part of the component's bounds when the action happens. For lightweight components, such as Swing's components, mouse events are only dispatched to the component if the mouse event type has been enabled on the component. A mouse event type is enabled by adding the appropriate mouse-based &lt;code&gt;EventListener&lt;/code&gt; to the component (&lt;a href=&quot;mouselistener&quot;&gt;&lt;code&gt;MouseListener&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mousemotionlistener&quot;&gt;&lt;code&gt;MouseMotionListener&lt;/code&gt;&lt;/a&gt;), or by invoking &lt;a href=&quot;../component#enableEvents(long)&quot;&gt;&lt;code&gt;Component.enableEvents(long)&lt;/code&gt;&lt;/a&gt; with the appropriate mask parameter (&lt;code&gt;AWTEvent.MOUSE_EVENT_MASK&lt;/code&gt; or &lt;code&gt;AWTEvent.MOUSE_MOTION_EVENT_MASK&lt;/code&gt;). If the mouse event type has not been enabled on the component, the corresponding mouse events are dispatched to the first ancestor that has enabled the mouse event type.</source>
          <target state="translated">コンポーネントでマウスアクションが発生したことを示すイベント。マウスカーソルがコンポーネントの境界の隠されていない部分にある場合にのみ、特定のコンポーネントでマウスアクションが発生したと見なされます。 Swingのコンポーネントなどの軽量コンポーネントの場合、マウスイベントは、コンポーネントでマウスイベントタイプが有効になっている場合にのみコンポーネントにディスパッチされます。マウスイベントタイプを有効にするには、適切なマウスベースの &lt;code&gt;EventListener&lt;/code&gt; をコンポーネント（&lt;a href=&quot;mouselistener&quot;&gt; &lt;code&gt;MouseListener&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;mousemotionlistener&quot;&gt; &lt;code&gt;MouseMotionListener&lt;/code&gt; &lt;/a&gt;）に追加するか、適切なマスクパラメーター（ &lt;code&gt;AWTEvent.MOUSE_EVENT_MASK&lt;/code&gt; または &lt;code&gt;AWTEvent.MOUSE_MOTION_EVENT_MASK&lt;/code&gt; &lt;a href=&quot;../component#enableEvents(long)&quot;&gt; &lt;code&gt;Component.enableEvents(long)&lt;/code&gt; &lt;/a&gt;を指定してComponent.enableEvents（long）を呼び出します。）。コンポーネントでマウスイベントタイプが有効になっていない場合、対応するマウスイベントは、マウスイベントタイプを有効にした最初の祖先にディスパッチされます。</target>
        </trans-unit>
        <trans-unit id="b237f4be590c9535f6a8931556284368d5ea0a0b" translate="yes" xml:space="preserve">
          <source>An event which indicates that the mouse wheel was rotated in a component.</source>
          <target state="translated">コンポーネント内でマウスホイールが回転したことを示すイベント。</target>
        </trans-unit>
        <trans-unit id="1c58667598e54fdb2f24f8569a3872e9e89ca801" translate="yes" xml:space="preserve">
          <source>An example is grammatical information attached to a sentence: For the previous sentence, you can say that &quot;an example&quot; is the subject, but you cannot say the same about &quot;an&quot;, &quot;example&quot;, or &quot;exam&quot;. When the text is changed, the grammatical information typically becomes invalid. Another example is Japanese reading information (yomi).</source>
          <target state="translated">例文とは、文に付けられた文法的な情報のことです。前の文では、「例題」が主語であると言えますが、「an」「例題」「試験」については同じことは言えません。文章が変わると、通常は文法情報が無効になります。もう一つの例として、日本語の読解情報(ヨミ)があります。</target>
        </trans-unit>
        <trans-unit id="8314e4f5c5e80547f95424d5dfb5afb0daf701ff" translate="yes" xml:space="preserve">
          <source>An example of a binary reference address is an BER X.500 presentation address. Another example of a binary reference address is a serialized form of a service's object handle.</source>
          <target state="translated">バイナリ参照アドレスの例としては、BER X.500 プレゼンテーションアドレスがあります。バイナリ参照アドレスのもう一つの例は、サービスのオブジェクトハンドルのシリアライズされた形式です。</target>
        </trans-unit>
        <trans-unit id="c422262ad662671c77308969717b4f574d8e6288" translate="yes" xml:space="preserve">
          <source>An example of a string reference address is a host name. Another example of a string reference address is a URL.</source>
          <target state="translated">文字列参照アドレスの例は、ホスト名です。文字列参照アドレスのもう一つの例は、URLです。</target>
        </trans-unit>
        <trans-unit id="eac2cd99333f0b1bbe1830270bc0354a7c3a971c" translate="yes" xml:space="preserve">
          <source>An example of setting this property is to invoke Java with &lt;code&gt;-Djavax.accessibility.assistive_technologies=MyServiceProvider&lt;/code&gt;. In addition to MyServiceProvider other service providers can be specified using a comma separated list. Service providers are loaded after the AWT toolkit is created. All errors are handled via an AWTError exception.</source>
          <target state="translated">このプロパティを設定する例は、 &lt;code&gt;-Djavax.accessibility.assistive_technologies=MyServiceProvider&lt;/code&gt; を使用してJavaを呼び出すことです。MyServiceProviderに加えて、コンマ区切りのリストを使用して他のサービスプロバイダーを指定できます。サービスプロバイダーは、AWTツールキットの作成後にロードされます。すべてのエラーは、AWTError例外を介して処理されます。</target>
        </trans-unit>
        <trans-unit id="bf6bc6d487fd537c1cdb763dfa71d56f909edc8d" translate="yes" xml:space="preserve">
          <source>An example of using a VolatileImage object follows:</source>
          <target state="translated">VolatileImageオブジェクトの使用例を以下に示します。</target>
        </trans-unit>
        <trans-unit id="db5da4ac02ef7c65a5dc16ef28a9ba5d3add4e7d" translate="yes" xml:space="preserve">
          <source>An example of using this method on a legacy throwable type without other support for setting the cause is:</source>
          <target state="translated">原因を設定するための他のサポートがないレガシーな throwable 型でこのメソッドを使用した例があります。</target>
        </trans-unit>
        <trans-unit id="9135abf2557d130e528a795718b735e7528d8a4c" translate="yes" xml:space="preserve">
          <source>An excellent tutorial and overview of regular expressions is &lt;a href=&quot;http://www.oreilly.com/catalog/regex/&quot;&gt;&lt;i&gt;Mastering Regular Expressions&lt;/i&gt;, Jeffrey E. F. Friedl, O'Reilly and Associates, 1997.&lt;/a&gt;</source>
          <target state="translated">正規表現の優れたチュートリアルと概要は、&lt;a href=&quot;http://www.oreilly.com/catalog/regex/&quot;&gt;&lt;i&gt;Mastering Regular Expressions&lt;/i&gt;、Jeffrey EF Friedl、O'Reilly and Associates、1997です。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e585cb095bdaba25a8339e18cc96d48bcd0f705" translate="yes" xml:space="preserve">
          <source>An exception can have both a cause and one or more suppressed exceptions:</source>
          <target state="translated">例外は、原因となる例外と、抑制された例外の両方を持つことができます。</target>
        </trans-unit>
        <trans-unit id="2c76da232b28c630a45be3d12fbb935c81a92db4" translate="yes" xml:space="preserve">
          <source>An exception class used for signaling run-time failure of reading and writing operations.</source>
          <target state="translated">読み書き操作の実行時の失敗を通知するために使用される例外クラス。</target>
        </trans-unit>
        <trans-unit id="55f4b8c4d30adf266f2f50abeef89fe2c653a3f3" translate="yes" xml:space="preserve">
          <source>An exception encountered while trying to add an element may result in only some of the elements having been successfully added when the associated exception is thrown.</source>
          <target state="translated">要素を追加しようとしたときに発生した例外は、関連する例外がスローされたときに、一部の要素だけが正常に追加されたことになる場合があります。</target>
        </trans-unit>
        <trans-unit id="36426bb10473750780024705d86e053d5bf31ab5" translate="yes" xml:space="preserve">
          <source>An exception indicating one of a variety of problems encountered when building a certification path with a &lt;code&gt;CertPathBuilder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CertPathBuilder&lt;/code&gt; で証明書パスを構築するときに発生したさまざまな問題の1つを示す例外。</target>
        </trans-unit>
        <trans-unit id="01bff7fd7d4a32814d6a5362737e0607d8446049" translate="yes" xml:space="preserve">
          <source>An exception indicating one of a variety of problems encountered when validating a certification path.</source>
          <target state="translated">認証パスを検証する際に発生した様々な問題の一つを示す例外。</target>
        </trans-unit>
        <trans-unit id="827b6a6c54d1f1c48aecd7390decd0af34678563" translate="yes" xml:space="preserve">
          <source>An exception indicating one of a variety of problems retrieving certificates and CRLs from a &lt;code&gt;CertStore&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CertStore&lt;/code&gt; から証明書とCRLを取得する際のさまざまな問題の1つを示す例外。</target>
        </trans-unit>
        <trans-unit id="5fa7086714c8ef389fe52703a7ff049f7e46769c" translate="yes" xml:space="preserve">
          <source>An exception is thrown if there is an ambiguity, for example, if the object is of a class implementing more than one of these interfaces.</source>
          <target state="translated">曖昧さがある場合は例外がスローされます。例えば、オブジェクトがこれらのインターフェイスを複数実装しているクラスのものである場合などです。</target>
        </trans-unit>
        <trans-unit id="539a0257d7fb54af59d0655a04e9605a2871fae6" translate="yes" xml:space="preserve">
          <source>An exception is thrown while collecting information about the events. That is, when the listener receives a &lt;code&gt;NamingExceptionEvent&lt;/code&gt;.</source>
          <target state="translated">イベントに関する情報の収集中に例外がスローされます。つまり、リスナーが &lt;code&gt;NamingExceptionEvent&lt;/code&gt; を受け取ったときです。</target>
        </trans-unit>
        <trans-unit id="a0d0592d1b01dc12413c57ea90c27fe3a483f573" translate="yes" xml:space="preserve">
          <source>An exception may have suppressed exceptions while also being caused by another exception. Whether or not an exception has a cause is semantically known at the time of its creation, unlike whether or not an exception will suppress other exceptions which is typically only determined after an exception is thrown.</source>
          <target state="translated">例外は、他の例外によって引き起こされた例外を抑制している可能性があります。例外に原因があるかどうかは、例外が他の例外を抑制するかどうかは、通常は例外が投げられた後にのみ決定されるのとは異なり、例外が作成された時点で意味的にわかります。</target>
        </trans-unit>
        <trans-unit id="53beaa837ddc7ceb7ee67f542711dcb85c2b2b5a" translate="yes" xml:space="preserve">
          <source>An exception occurred during the introspection of an MBean.</source>
          <target state="translated">MBeanの内観中に例外が発生しました。</target>
        </trans-unit>
        <trans-unit id="d875fe6048b3e5126d3cdd14afc5d8aa9a9088b5" translate="yes" xml:space="preserve">
          <source>An exception of type &lt;code&gt;NumberFormatException&lt;/code&gt; is thrown if any of the following situations occurs:</source>
          <target state="translated">次のいずれかの状況が発生した場合は、 &lt;code&gt;NumberFormatException&lt;/code&gt; タイプの例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="26e5ef4037e4c60c7276617440fb680055be6bd6" translate="yes" xml:space="preserve">
          <source>An exception that indicates an X.509 certificate is revoked.</source>
          <target state="translated">X.509 証明書が失効したことを示す例外。</target>
        </trans-unit>
        <trans-unit id="eb2cb5367acdec595b1cf7be61b81bd4e9f62194" translate="yes" xml:space="preserve">
          <source>An exception that indicates an X.509 certificate is revoked. A &lt;code&gt;CertificateRevokedException&lt;/code&gt; contains additional information about the revoked certificate, such as the date on which the certificate was revoked and the reason it was revoked.</source>
          <target state="translated">X.509証明書が取り消されたことを示す例外。 A &lt;code&gt;CertificateRevokedException&lt;/code&gt; は、そのような証明書が失効した日付と、それが取り消された理由として、取り消された証明書に関する追加情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="1157e088807d425904f8b0a2ffdf99ca95857e4a" translate="yes" xml:space="preserve">
          <source>An exception that indicates the requested look &amp;amp; feel management classes are not present on the user's system.</source>
          <target state="translated">要求されたルックアンドフィール管理クラスがユーザーのシステムに存在しないことを示す例外。</target>
        </trans-unit>
        <trans-unit id="1112cce34009ed8112d963c1429cbdb8eef2167c" translate="yes" xml:space="preserve">
          <source>An exception that provides information on a database access error or other errors.</source>
          <target state="translated">データベースアクセスエラーなどのエラーに関する情報を提供する例外。</target>
        </trans-unit>
        <trans-unit id="54e79e952314986864c1ea29e3466a3c5255e1d9" translate="yes" xml:space="preserve">
          <source>An exception that provides information on database access warnings.</source>
          <target state="translated">データベースアクセスの警告に関する情報を提供する例外。</target>
        </trans-unit>
        <trans-unit id="7df787dce29b90bf8caed974b6ffa760a840a94b" translate="yes" xml:space="preserve">
          <source>An exception that provides information on database access warnings. Warnings are silently chained to the object whose method caused it to be reported.</source>
          <target state="translated">データベースアクセスの警告に関する情報を提供する例外。警告は、そのメソッドが報告の原因となったオブジェクトに静かにチェーンされます。</target>
        </trans-unit>
        <trans-unit id="27c84afce513eedfc3d41795104aa3b376531267" translate="yes" xml:space="preserve">
          <source>An exception thrown as a &lt;code&gt;DataTruncation&lt;/code&gt; exception (on writes) or reported as a &lt;code&gt;DataTruncation&lt;/code&gt; warning (on reads) when a data values is unexpectedly truncated for reasons other than its having exceeded &lt;code&gt;MaxFieldSize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MaxFieldSize&lt;/code&gt; を超えた以外の理由でデータ値が予期せず切り捨てられた場合に、 &lt;code&gt;DataTruncation&lt;/code&gt; 例外（書き込み時）としてスローされるか、 &lt;code&gt;DataTruncation&lt;/code&gt; 警告（読み取り時）として報告される例外。</target>
        </trans-unit>
        <trans-unit id="2f160d97246c78d81ce29bd33cee54f7227c87cc" translate="yes" xml:space="preserve">
          <source>An exception thrown when an error occurs during parsing.</source>
          <target state="translated">解析中にエラーが発生した場合にスローされる例外。</target>
        </trans-unit>
        <trans-unit id="568073553e60a50c6f3c7444d5cb67c4ef8ab555" translate="yes" xml:space="preserve">
          <source>An exception will be thrown if the application attempts to write more data than the indicated content-length, or if the application closes the OutputStream before writing the indicated amount.</source>
          <target state="translated">アプリケーションが指定されたコンテンツ長よりも多くのデータを書き込もうとした場合、または指定された量を書き込む前にアプリケーションがOutputStreamを閉じた場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="cc5c3fd5dfd0748548f77b57c9e8da871d50cb82" translate="yes" xml:space="preserve">
          <source>An execution of the task throws an exception. In this case calling &lt;a href=&quot;future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; on the returned future will throw &lt;a href=&quot;executionexception&quot;&gt;&lt;code&gt;ExecutionException&lt;/code&gt;&lt;/a&gt;, holding the exception as its cause.</source>
          <target state="translated">タスクを実行すると、例外がスローされます。この場合、返されたfutureで&lt;a href=&quot;future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;を呼び出すと、&lt;a href=&quot;executionexception&quot;&gt; &lt;code&gt;ExecutionException&lt;/code&gt; &lt;/a&gt;がスローされ、例外が原因として保持されます。</target>
        </trans-unit>
        <trans-unit id="80feca58e1cfcb4b9f1f7db5eedba7837a9849b1" translate="yes" xml:space="preserve">
          <source>An expected per-message token was not received.</source>
          <target state="translated">期待されたメッセージごとのトークンを受信できませんでした。</target>
        </trans-unit>
        <trans-unit id="42304778ae5dde1bb4a4b78fe1d47f543dc93e08" translate="yes" xml:space="preserve">
          <source>An expected per-message token was not received. This is a fatal error code that may occur during context establishment. It is not used to indicate supplementary status values. The MessageProp object is used for that purpose.</source>
          <target state="translated">期待されたメッセージごとのトークンが受信できませんでした。これは、コンテキストの確立中に発生する可能性のある致命的なエラーコードです。補足的なステータス値を示すためには使用されません。MessageProp オブジェクトはその目的のために使用されます。</target>
        </trans-unit>
        <trans-unit id="93a26116f3df8d3f260ee17d5c240a1a6577cc24" translate="yes" xml:space="preserve">
          <source>An explicit close always closes the device, even if it also has been opened implicitly. A subsequent implicit close has no further effect.</source>
          <target state="translated">明示的なクローズは、暗黙的にオープンされていたとしても、常にデバイスをクローズします。それ以降の暗黙のクローズはそれ以上の効果はありません。</target>
        </trans-unit>
        <trans-unit id="f5d17e70e49152ff51418006e025110f3fe751bd" translate="yes" xml:space="preserve">
          <source>An exported package of a module.</source>
          <target state="translated">モジュールのエクスポートされたパッケージ。</target>
        </trans-unit>
        <trans-unit id="e3986466cb3d0bca4cf9d2636b3186e85275a4aa" translate="yes" xml:space="preserve">
          <source>An expression whose value is &lt;code&gt;oldInstance&lt;/code&gt;.</source>
          <target state="translated">値が &lt;code&gt;oldInstance&lt;/code&gt; である式。</target>
        </trans-unit>
        <trans-unit id="4fcf498738c23d34965ea0019639e6cd7f8d0099" translate="yes" xml:space="preserve">
          <source>An extended version of &lt;code&gt;java.applet.Applet&lt;/code&gt; that adds support for the JFC/Swing component architecture. You can find task-oriented documentation about using &lt;code&gt;JApplet&lt;/code&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;, in the section &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/applet.html&quot;&gt;How to Make Applets&lt;/a&gt;.</source>
          <target state="translated">JFC / Swingコンポーネントアーキテクチャのサポートを追加する &lt;code&gt;java.applet.Applet&lt;/code&gt; の拡張バージョン。 &lt;code&gt;JApplet&lt;/code&gt; の使用に関するタスク指向のドキュメントは&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/applet.html&quot;&gt;「アプレットの作成方法」&lt;/a&gt;セクションにあります。</target>
        </trans-unit>
        <trans-unit id="f02bb9a7cf551ac06197e67ffd00d66609d15d77" translate="yes" xml:space="preserve">
          <source>An extended version of &lt;code&gt;java.awt.Frame&lt;/code&gt; that adds support for the JFC/Swing component architecture.</source>
          <target state="translated">JFC / Swingコンポーネントアーキテクチャのサポートを追加する &lt;code&gt;java.awt.Frame&lt;/code&gt; の拡張バージョン。</target>
        </trans-unit>
        <trans-unit id="9be0e0b21a1097c655cb607197cdb52005e1311a" translate="yes" xml:space="preserve">
          <source>An extended version of &lt;code&gt;java.awt.Frame&lt;/code&gt; that adds support for the JFC/Swing component architecture. You can find task-oriented documentation about using &lt;code&gt;JFrame&lt;/code&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;, in the section &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/frame.html&quot;&gt;How to Make Frames&lt;/a&gt;.</source>
          <target state="translated">JFC / Swingコンポーネントアーキテクチャのサポートを追加する &lt;code&gt;java.awt.Frame&lt;/code&gt; の拡張バージョン。 &lt;code&gt;JFrame&lt;/code&gt; の使用に関するタスク指向のドキュメントは&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/frame.html&quot;&gt;「フレームの作成方法」&lt;/a&gt;セクションにあります。</target>
        </trans-unit>
        <trans-unit id="c84356e231444d9c5b994cb84e59c5e343d748b3" translate="yes" xml:space="preserve">
          <source>An extending class need only implement &lt;a href=&quot;spliterator#tryAdvance(java.util.function.Consumer)&quot;&gt;&lt;code&gt;tryAdvance&lt;/code&gt;&lt;/a&gt;. The extending class should override &lt;a href=&quot;spliterator#forEachRemaining(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEachRemaining&lt;/code&gt;&lt;/a&gt; if it can provide a more performant implementation.</source>
          <target state="translated">拡張クラスは、&lt;a href=&quot;spliterator#tryAdvance(java.util.function.Consumer)&quot;&gt; &lt;code&gt;tryAdvance&lt;/code&gt; を&lt;/a&gt;実装するだけで済みます。拡張クラスは、よりパフォーマンスの高い実装を提供できる場合は、&lt;a href=&quot;spliterator#forEachRemaining(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEachRemaining&lt;/code&gt; &lt;/a&gt;をオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="5eb6c2a45ba0c27df9207c6ea74c881a9c847b7d" translate="yes" xml:space="preserve">
          <source>An extending class need only implement &lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt;&lt;code&gt;tryAdvance&lt;/code&gt;&lt;/a&gt;. The extending class should override &lt;a href=&quot;spliterator#forEachRemaining-java.util.function.Consumer-&quot;&gt;&lt;code&gt;forEach&lt;/code&gt;&lt;/a&gt; if it can provide a more performant implementation.</source>
          <target state="translated">拡張クラスは、&lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt; &lt;code&gt;tryAdvance&lt;/code&gt; を&lt;/a&gt;実装するだけで済みます。拡張クラスは、よりパフォーマンスの高い実装を提供できる場合、&lt;a href=&quot;spliterator#forEachRemaining-java.util.function.Consumer-&quot;&gt; &lt;code&gt;forEach&lt;/code&gt; &lt;/a&gt;をオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="4983932ee5f711dbc13c0df7b47fb26e4cabc60a" translate="yes" xml:space="preserve">
          <source>An extensible implementation of &lt;code&gt;ListUI&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ListUI&lt;/code&gt; の拡張可能な実装。</target>
        </trans-unit>
        <trans-unit id="7ddf4101e555acdf4dd7af427583c4802a01aff8" translate="yes" xml:space="preserve">
          <source>An extension of &lt;code&gt;SQLException&lt;/code&gt; that provides information about database warnings set on &lt;code&gt;RowSet&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; オブジェクトに設定されたデータベース警告に関する情報を提供する &lt;code&gt;SQLException&lt;/code&gt; の拡張。</target>
        </trans-unit>
        <trans-unit id="69b0bd0c6b12b7c0779bb216e0873768ddad668c" translate="yes" xml:space="preserve">
          <source>An extension of &lt;code&gt;SQLException&lt;/code&gt; that provides information about database warnings set on &lt;code&gt;RowSet&lt;/code&gt; objects. Warnings are silently chained to the object whose method call caused it to be reported. This class complements the &lt;code&gt;SQLWarning&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; オブジェクトに設定されたデータベース警告に関する情報を提供する &lt;code&gt;SQLException&lt;/code&gt; の拡張。警告は、メソッド呼び出しによって報告されたオブジェクトにサイレントにチェーンされます。このクラスは、 &lt;code&gt;SQLWarning&lt;/code&gt; クラスを補完します。</target>
        </trans-unit>
        <trans-unit id="9171732ddcc7644c3065146d75395b18ad8d6f3e" translate="yes" xml:space="preserve">
          <source>An external class calls the &lt;code&gt;push&lt;/code&gt; method explicitly.</source>
          <target state="translated">外部クラスは、 &lt;code&gt;push&lt;/code&gt; メソッドを明示的に呼び出します。</target>
        </trans-unit>
        <trans-unit id="993583be52f1a02a2dd2850ffd00c88502a808b0" translate="yes" xml:space="preserve">
          <source>An extra heavy weight.</source>
          <target state="translated">余分な重さ。</target>
        </trans-unit>
        <trans-unit id="033bf48169520099efc15604736ebca1567af09f" translate="yes" xml:space="preserve">
          <source>An hour is represented by an integer from 0 to 23. Thus, the hour from midnight to 1 a.m. is hour 0, and the hour from noon to 1 p.m. is hour 12.</source>
          <target state="translated">1時間は0から23までの整数で表されます。したがって、午前0時から午前1時までの時間は0時間、正午から午後1時までの時間は12時間となります。</target>
        </trans-unit>
        <trans-unit id="b3995eb5999fe6ba3246c0409d631780b82579df" translate="yes" xml:space="preserve">
          <source>An icon that is passed a &lt;code&gt;SynthContext&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SynthContext&lt;/code&gt; が渡されるアイコン。</target>
        </trans-unit>
        <trans-unit id="e228c1f08f4eb6a6a64065d6d174be947b133e8c" translate="yes" xml:space="preserve">
          <source>An icon that is passed a &lt;code&gt;SynthContext&lt;/code&gt;. Subclasses need only implement the variants that take a &lt;code&gt;SynthContext&lt;/code&gt;, but must be prepared for the &lt;code&gt;SynthContext&lt;/code&gt; to be null.</source>
          <target state="translated">&lt;code&gt;SynthContext&lt;/code&gt; が渡されるアイコン。サブクラスは、 &lt;code&gt;SynthContext&lt;/code&gt; を受け取るバリアントのみを実装する必要がありますが、 &lt;code&gt;SynthContext&lt;/code&gt; がnullになるように準備する必要があります。</target>
        </trans-unit>
        <trans-unit id="8ba096353fa6bb84e2a97f84b937f1449dc7fe1f" translate="yes" xml:space="preserve">
          <source>An iconified internal frame in a &lt;code&gt;DESKTOP_PANE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DESKTOP_PANE&lt;/code&gt; のアイコン化された内部フレーム。</target>
        </trans-unit>
        <trans-unit id="1e6fb89d83ee7150b4f2c48fb629fec0aefac2d8" translate="yes" xml:space="preserve">
          <source>An ideal &lt;code&gt;trySplit&lt;/code&gt; method efficiently (without traversal) divides its elements exactly in half, allowing balanced parallel computation. Many departures from this ideal remain highly effective; for example, only approximately splitting an approximately balanced tree, or for a tree in which leaf nodes may contain either one or two elements, failing to further split these nodes. However, large deviations in balance and/or overly inefficient &lt;code&gt;
 trySplit&lt;/code&gt; mechanics typically result in poor parallel performance.</source>
          <target state="translated">理想的な &lt;code&gt;trySplit&lt;/code&gt; メソッドは、効率的に（トラバーサルなしで）その要素を正確に半分に分割し、バランスの取れた並列計算を可能にします。この理想からの多くの逸脱は依然として非常に効果的です。たとえば、ほぼバランスの取れたツリーをほぼ分割するだけ、またはリーフノードに1つまたは2つの要素が含まれる可能性があるツリーの場合、これらのノードをさらに分割することはできません。ただし、バランスの大きな偏差や過度に非効率的な &lt;code&gt; trySplit&lt;/code&gt; メカニズムは、通常、並列パフォーマンスを低下させます。</target>
        </trans-unit>
        <trans-unit id="b79a12129245be08c85e4cc35ed8664d573a28c7" translate="yes" xml:space="preserve">
          <source>An ideal &lt;code&gt;trySplit&lt;/code&gt; method efficiently (without traversal) divides its elements exactly in half, allowing balanced parallel computation. Many departures from this ideal remain highly effective; for example, only approximately splitting an approximately balanced tree, or for a tree in which leaf nodes may contain either one or two elements, failing to further split these nodes. However, large deviations in balance and/or overly inefficient &lt;code&gt;trySplit&lt;/code&gt; mechanics typically result in poor parallel performance.</source>
          <target state="translated">理想的な &lt;code&gt;trySplit&lt;/code&gt; メソッドは、要素を（トラバーサルなしで）効率的に正確に半分に分割し、バランスの取れた並列計算を可能にします。この理想からの多くの逸脱は依然として非常に効果的です。たとえば、近似的にバランスの取れたツリーを近似的に分割する場合、またはリーフノードに1つまたは2つの要素が含まれる可能性があるツリーの場合のみ、これらのノードをさらに分割することはできません。ただし、バランスの大きな偏差や過度に非効率的な &lt;code&gt;trySplit&lt;/code&gt; メカニズムは、通常、並列パフォーマンスの低下につながります。</target>
        </trans-unit>
        <trans-unit id="41d0c98191c8e0cd3f8eae5d99c11cbb42071020" translate="yes" xml:space="preserve">
          <source>An identifier for a set of interfaces (typically belonging to different nodes). A packet sent to a multicast address is delivered to all interfaces identified by that address.</source>
          <target state="translated">インターフェイスのセット(通常は異なるノードに属する)の識別子。マルチキャストアドレスに送信されたパケットは、そのアドレスによって識別されるすべてのインタフェースに配信されます。</target>
        </trans-unit>
        <trans-unit id="4dcf1db7e714dcdb9b3413181423df3a906152b8" translate="yes" xml:space="preserve">
          <source>An identifier for a single interface. A packet sent to a unicast address is delivered to the interface identified by that address.</source>
          <target state="translated">単一インタフェースの識別子。ユニキャストアドレスに送信されたパケットは、そのアドレスで識別されたインタフェースに配信されます。</target>
        </trans-unit>
        <trans-unit id="c7b3ff5ff9fb693f688e56288aa4f3c2362b1456" translate="yes" xml:space="preserve">
          <source>An illegal character is</source>
          <target state="translated">違法なキャラクターは</target>
        </trans-unit>
        <trans-unit id="1e56c26e424d69f528048e3514f89769c7494760" translate="yes" xml:space="preserve">
          <source>An image encoded as part of a file or stream may be thought of extending out in multiple dimensions: the spatial dimensions of width and height, a number of bands, and a number of progressive decoding passes. This class allows a contiguous (hyper)rectangular subarea of the image in all of these dimensions to be selected for decoding. Additionally, the spatial dimensions may be subsampled discontinuously. Finally, color and format conversions may be specified by controlling the &lt;code&gt;ColorModel&lt;/code&gt; and &lt;code&gt;SampleModel&lt;/code&gt; of the destination image, either by providing a &lt;code&gt;BufferedImage&lt;/code&gt; or by using an &lt;code&gt;ImageTypeSpecifier&lt;/code&gt;.</source>
          <target state="translated">ファイルまたはストリームの一部としてエンコードされた画像は、幅と高さの空間的次元、多数のバンド、多数のプログレッシブデコードパスなど、複数の次元に拡張すると考えることができます。このクラスを使用すると、これらのすべての次元の画像の隣接する（ハイパー）長方形のサブエリアをデコード用に選択できます。さらに、空間次元は不連続にサブサンプリングされる場合があります。最後に、色と形式の変換は、 &lt;code&gt;BufferedImage&lt;/code&gt; を提供するか、または &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; を使用して、宛先イメージの &lt;code&gt;ColorModel&lt;/code&gt; および &lt;code&gt;SampleModel&lt;/code&gt; を制御することによって指定できます。</target>
        </trans-unit>
        <trans-unit id="a5fa1ed4a59ac72a93ee0120d48b28d44b817329" translate="yes" xml:space="preserve">
          <source>An image filter that &quot;disables&quot; an image by turning it into a grayscale image, and brightening the pixels in the image.</source>
          <target state="translated">画像をグレースケール画像にして「無効化」し、画像の画素を明るくする画像フィルタ。</target>
        </trans-unit>
        <trans-unit id="d4845e25210ee70553ececdd28685bb4b7b511f4" translate="yes" xml:space="preserve">
          <source>An image filter that &quot;disables&quot; an image by turning it into a grayscale image, and brightening the pixels in the image. Used by buttons to create an image for a disabled button.</source>
          <target state="translated">画像をグレースケール画像にして画像内のピクセルを明るくすることで「無効化」する画像フィルタ。無効化されたボタン用の画像を作成するためにボタンで使われます。</target>
        </trans-unit>
        <trans-unit id="bde7bd7802caa9ee827718228b3f392524575ca2" translate="yes" xml:space="preserve">
          <source>An immutable &lt;a href=&quot;../../../org/w3c/dom/typeinfo&quot;&gt;&lt;code&gt;TypeInfo&lt;/code&gt;&lt;/a&gt; object that represents the type of the current element. Note that the caller can keep references to the obtained &lt;a href=&quot;../../../org/w3c/dom/typeinfo&quot;&gt;&lt;code&gt;TypeInfo&lt;/code&gt;&lt;/a&gt; longer than the callback scope. Otherwise, this method returns null if the validator is unable to determine the type of the current element for some reason (for example, if the validator is recovering from an earlier error.)</source>
          <target state="translated">現在の要素のタイプを表す不変の&lt;a href=&quot;../../../org/w3c/dom/typeinfo&quot;&gt; &lt;code&gt;TypeInfo&lt;/code&gt; &lt;/a&gt;オブジェクト。呼び出し元は、取得した&lt;a href=&quot;../../../org/w3c/dom/typeinfo&quot;&gt; &lt;code&gt;TypeInfo&lt;/code&gt; &lt;/a&gt;への参照をコールバックスコープより長く保持できることに注意してください。それ以外の場合、バリデーターが何らかの理由で現在の要素のタイプを判別できない場合（たとえば、バリデーターが以前のエラーから回復している場合）、このメソッドはnullを返します。</target>
        </trans-unit>
        <trans-unit id="f47eadf08dcb4d909ac4b0a4ba98b7435acdcb35" translate="yes" xml:space="preserve">
          <source>An immutable &lt;a href=&quot;../../../org/w3c/dom/typeinfo&quot;&gt;&lt;code&gt;TypeInfo&lt;/code&gt;&lt;/a&gt; object that represents the type of the specified attribute. Note that the caller can keep references to the obtained &lt;a href=&quot;../../../org/w3c/dom/typeinfo&quot;&gt;&lt;code&gt;TypeInfo&lt;/code&gt;&lt;/a&gt; longer than the callback scope. Otherwise, this method returns null if the validator is unable to determine the type.</source>
          <target state="translated">指定された属性のタイプを表す不変の&lt;a href=&quot;../../../org/w3c/dom/typeinfo&quot;&gt; &lt;code&gt;TypeInfo&lt;/code&gt; &lt;/a&gt;オブジェクト。呼び出し元は、取得した&lt;a href=&quot;../../../org/w3c/dom/typeinfo&quot;&gt; &lt;code&gt;TypeInfo&lt;/code&gt; &lt;/a&gt;への参照をコールバックスコープより長く保持できることに注意してください。それ以外の場合、バリデーターがタイプを判別できない場合、このメソッドはnullを返します。</target>
        </trans-unit>
        <trans-unit id="fe0553838112e0cf625c3b61ad5d079c23786605" translate="yes" xml:space="preserve">
          <source>An immutable Map from response header field names to lists of field values. The status line has null as its field name.</source>
          <target state="translated">レスポンスヘッダーのフィールド名からフィールド値のリストへの不変のマップ。ステータス行のフィールド名には null が含まれています。</target>
        </trans-unit>
        <trans-unit id="309749b311138b7f3bec40d7451870c2df26158a" translate="yes" xml:space="preserve">
          <source>An immutable descriptor.</source>
          <target state="translated">不変の記述子。</target>
        </trans-unit>
        <trans-unit id="2111ab463a21040ddacb00a296f71ac5f3327414" translate="yes" xml:space="preserve">
          <source>An immutable policy qualifier represented by the ASN.1 PolicyQualifierInfo structure.</source>
          <target state="translated">ASN.1 PolicyQualifierInfo構造体で表される不変のポリシー修飾子。</target>
        </trans-unit>
        <trans-unit id="2393eb39797e342496739136a00756f2eb32faa0" translate="yes" xml:space="preserve">
          <source>An immutable sequence of certificates (a certification path).</source>
          <target state="translated">証明書の不変のシーケンス(認証パス)。</target>
        </trans-unit>
        <trans-unit id="2cbbbd823fdfe74ee0208df70396dc16cfefa5d9" translate="yes" xml:space="preserve">
          <source>An immutable sequence of characters.</source>
          <target state="translated">不変の文字列。</target>
        </trans-unit>
        <trans-unit id="45cd11652bb49b91bbf6e2d5686c0ef4277288f0" translate="yes" xml:space="preserve">
          <source>An immutable sequence of characters. When created by the same implementation, objects implementing this interface must obey the general &lt;a href=&quot;../../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;equals contract&lt;/a&gt; when compared with each other. Therefore, &lt;code&gt;Name&lt;/code&gt; objects from the same implementation are usable in collections while &lt;code&gt;Name&lt;/code&gt;s from different implementations may not work properly in collections.</source>
          <target state="translated">文字の不変のシーケンス。同じ実装で作成された場合、このインターフェースを実装するオブジェクトは、相互に比較した場合、一般的な&lt;a href=&quot;../../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;等しいコントラクト&lt;/a&gt;に従う必要があります。したがって、同じ実装の &lt;code&gt;Name&lt;/code&gt; オブジェクトはコレクションで使用できますが、異なる実装の &lt;code&gt;Name&lt;/code&gt; はコレクションで正しく機能しない場合があります。</target>
        </trans-unit>
        <trans-unit id="d488a1fff9862fa2cfb517a44dc0a8320f94ea54" translate="yes" xml:space="preserve">
          <source>An immutable sequence of characters. When created by the same implementation, objects implementing this interface must obey the general &lt;a href=&quot;../../../../java/lang/object#equals-java.lang.Object-&quot;&gt;equals contract&lt;/a&gt; when compared with each other. Therefore, &lt;code&gt;Name&lt;/code&gt; objects from the same implementation are usable in collections while &lt;code&gt;Name&lt;/code&gt;s from different implementations may not work properly in collections.</source>
          <target state="translated">不変の文字シーケンス。同じ実装で作成された場合、このインターフェースを実装するオブジェクトは、互いに比較する場合、一般的な&lt;a href=&quot;../../../../java/lang/object#equals-java.lang.Object-&quot;&gt;等号規約&lt;/a&gt;に従う必要があります。したがって、 &lt;code&gt;Name&lt;/code&gt; ながら同じ実装からオブジェクトをコレクションに使用可能である &lt;code&gt;Name&lt;/code&gt; の異なる実装からは、コレクションに正常に動作しない可能性があります。</target>
        </trans-unit>
        <trans-unit id="bfe828311e3aadf4efbe903c5a4d3dae8f803152" translate="yes" xml:space="preserve">
          <source>An immutable set of this charset's aliases</source>
          <target state="translated">この文字セットのエイリアスの不変セット</target>
        </trans-unit>
        <trans-unit id="8ae6ae36d10d08e667bd8bef5f395ff3be01ce79" translate="yes" xml:space="preserve">
          <source>An immutable transient object containing contextual information about a &lt;code&gt;Region&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Region&lt;/code&gt; に関するコンテキスト情報を含む不変の一時オブジェクト。</target>
        </trans-unit>
        <trans-unit id="5de6b49079f55452582421cb3525debb3e6fc09c" translate="yes" xml:space="preserve">
          <source>An immutable transient object containing contextual information about a &lt;code&gt;Region&lt;/code&gt;. A &lt;code&gt;SynthContext&lt;/code&gt; should only be considered valid for the duration of the method it is passed to. In other words you should not cache a &lt;code&gt;SynthContext&lt;/code&gt; that is passed to you and expect it to remain valid.</source>
          <target state="translated">&lt;code&gt;Region&lt;/code&gt; に関するコンテキスト情報を含む不変の一時オブジェクト。A &lt;code&gt;SynthContext&lt;/code&gt; 唯一それが渡される方法の期間中有効と考えるべきです。言い換えると、渡された &lt;code&gt;SynthContext&lt;/code&gt; をキャッシュして、有効なままであると期待するべきではありません。</target>
        </trans-unit>
        <trans-unit id="86774acac7eb69d01bec215a163a97ba1edd8cd1" translate="yes" xml:space="preserve">
          <source>An immutable valid policy tree node as defined by the PKIX certification path validation algorithm.</source>
          <target state="translated">PKIX 認証パス検証アルゴリズムで定義された、不変の有効なポリシーツリーノード。</target>
        </trans-unit>
        <trans-unit id="11def7fe2970e531f4ea239ac44939945341968a" translate="yes" xml:space="preserve">
          <source>An immutable, case-insensitive map from canonical charset names to charset objects</source>
          <target state="translated">正準文字セット名から文字セットオブジェクトへの大文字小文字を区別しない不変のマップ</target>
        </trans-unit>
        <trans-unit id="61c4bc8591375b6023f191ee8eb62f932f7e18ed" translate="yes" xml:space="preserve">
          <source>An implementation MUST minimally support the default mechanism type: DOM.</source>
          <target state="translated">実装は、デフォルトのメカニズムタイプを最低限サポートしなければならない[MUST]。DOM を最低限サポートしなければなりません。</target>
        </trans-unit>
        <trans-unit id="eb9cc79bd83c6e949c779f14d227a24a0648498f" translate="yes" xml:space="preserve">
          <source>An implementation allows this socket option to be set before the socket is bound or connected. Changing the value of this socket option after the socket is bound has no effect.</source>
          <target state="translated">実装では、ソケットがバインドされたり接続されたりする前に、このソケットオプションを設定することができます。ソケットがバインドされた後にこのソケットオプションの値を変更しても影響はありません。</target>
        </trans-unit>
        <trans-unit id="c5e4c656812f06ae210159024d8f8491f2ba594c" translate="yes" xml:space="preserve">
          <source>An implementation allows this socket option to be set before the socket is bound or connected. Changing the value of this socket option after the socket is bound has no effect. The default value of this socket option is system dependent.</source>
          <target state="translated">実装では、ソケットがバインドされたり接続されたりする前に、このソケットオプションを設定することができます。ソケットがバインドされた後にソケットオプションの値を変更しても影響はありません。ソケットオプションのデフォルト値はシステムに依存します。</target>
        </trans-unit>
        <trans-unit id="13b0ed2338768498271a0575928eef5780873aab" translate="yes" xml:space="preserve">
          <source>An implementation allows this socket option to be set before the socket is bound or connected. Whether an implementation allows the socket receive buffer to be changed after the socket is bound is system dependent.</source>
          <target state="translated">実装では、ソケットがバインドされたり接続されたりする前に、このソケットオプションを設定することができます。ソケットがバインドされた後にソケット受信バッファを変更できるかどうかはシステムに依存します。</target>
        </trans-unit>
        <trans-unit id="5677116f123d9765077b0c39d1986e1989e1d683" translate="yes" xml:space="preserve">
          <source>An implementation allows this socket option to be set before the socket is bound or connected. Whether an implementation allows the socket send buffer to be changed after the socket is bound is system dependent.</source>
          <target state="translated">実装では、ソケットがバインドされたり接続されたりする前に、このソケットオプションを設定することができます。ソケットがバインドされた後にソケット送信バッファを変更できるかどうかはシステムに依存します。</target>
        </trans-unit>
        <trans-unit id="efc8d388f194b1630ca29c5a6c8bc7749a3434e1" translate="yes" xml:space="preserve">
          <source>An implementation can favor responding to an interrupt over normal method return in response to a signal, or over indicating the elapse of the specified waiting time. In either case the implementation must ensure that the signal is redirected to another waiting thread, if there is one.</source>
          <target state="translated">実装では、シグナルに応答して通常のメソッドを返すよりも、指定された待ち時間の経過を示すよりも、割込みに応答する方が有利になることがあります。いずれの場合も、シグナルが他の待ちスレッドにリダイレクトされるように実装しなければなりません。</target>
        </trans-unit>
        <trans-unit id="f982d4312ab2106d3754d438d5420cf313e7b9f9" translate="yes" xml:space="preserve">
          <source>An implementation can favor responding to an interrupt over normal method return in response to a signal, or over indicating the passing of the specified deadline. In either case the implementation must ensure that the signal is redirected to another waiting thread, if there is one.</source>
          <target state="translated">実装では、シグナルに応答して通常のメソッドを返すよりも、指定されたデッドラインの通過を示すよりも、割込みに応答する方が有利になることがあります。いずれの場合も、シグナルが別の待ちスレッドにリダイレクトされるように実装しなければなりません。</target>
        </trans-unit>
        <trans-unit id="9a5e48fc4c01a2371f770cac59b3f2c703b41ac3" translate="yes" xml:space="preserve">
          <source>An implementation can favor responding to an interrupt over normal method return in response to a signal. In that case the implementation must ensure that the signal is redirected to another waiting thread, if there is one.</source>
          <target state="translated">ある実装では、シグナルに反応して通常のメソッドを返すよりも割込みに反応した方が良い場合があります。その場合、シグナルが別の待ちスレッドにリダイレクトされるように実装しなければなりません。</target>
        </trans-unit>
        <trans-unit id="f4df28dda59592a04017409234d63cb3dd6b1727" translate="yes" xml:space="preserve">
          <source>An implementation can favor responding to an interrupt over normal method return, or reporting a timeout.</source>
          <target state="translated">実装では、通常のメソッドのリターンよりも割込みに応答したり、タイムアウトを報告したりすることができます。</target>
        </trans-unit>
        <trans-unit id="9e7cc878bc068e369c8f0fc0e46fc6a6baeef6c1" translate="yes" xml:space="preserve">
          <source>An implementation can favor responding to an interrupt over normal method return.</source>
          <target state="translated">実装では、通常のメソッドの戻り値よりも割り込みへの応答を優先することができます。</target>
        </trans-unit>
        <trans-unit id="93e212df67647ddbcb4f696108e2a8c1903f5358" translate="yes" xml:space="preserve">
          <source>An implementation dependent warning that may be raised if the configuration parameter &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-namespaces&quot;&gt;namespaces&lt;/a&gt;&quot; is set to &lt;code&gt;true&lt;/code&gt; and an unbound namespace prefix is encountered in an entity's replacement text. Raising this warning is not enforced since some existing parsers may not recognize unbound namespace prefixes in the replacement text of entities.</source>
          <target state="translated">構成パラメーター「&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-namespaces&quot;&gt;namespaces&lt;/a&gt;」が &lt;code&gt;true&lt;/code&gt; に設定されていて、エンティティの置換テキストでバインドされていない名前空間プレフィックスが検出された場合に発生する可能性がある実装依存の警告。一部の既存のパーサーは、エンティティの置換テキスト内のバインドされていない名前空間プレフィックスを認識しない可能性があるため、この警告を発生させることは強制されません。</target>
        </trans-unit>
        <trans-unit id="7c602f6bb25368c8e0c15076fee4398ae8b72f85" translate="yes" xml:space="preserve">
          <source>An implementation is not required to provide a way to start agents from the command-line interface. When it does, then it supports the &lt;code&gt;-javaagent&lt;/code&gt; option as specified above. The &lt;code&gt;-javaagent&lt;/code&gt; option may be used multiple times on the same command-line, thus starting multiple agents. The &lt;code&gt;premain&lt;/code&gt; methods will be called in the order that the agents are specified on the command line. More than one agent may use the same</source>
          <target state="translated">コマンドラインインターフェイスからエージェントを起動する方法を提供するために、実装は必要ありません。その場合、上記で指定した &lt;code&gt;-javaagent&lt;/code&gt; オプションをサポートします。 &lt;code&gt;-javaagent&lt;/code&gt; オプションは、このように複数のエージェントを開始、同じコマンドラインで複数回使用することができます。 &lt;code&gt;premain&lt;/code&gt; メソッドは、エージェントがコマンドラインで指定された順序で呼び出されます。複数のエージェントが同じものを使用できます</target>
        </trans-unit>
        <trans-unit id="5858553ccba5ec8f867c82d8df384e89f65bed29" translate="yes" xml:space="preserve">
          <source>An implementation is required to clearly document the semantics and guarantees provided by each of the waiting methods, and when an implementation does support interruption of thread suspension then it must obey the interruption semantics as defined in this interface.</source>
          <target state="translated">実装は、各待ち行列メソッドによって提供されるセマンティクスと保証を明確に文書化することが要求され、実装がスレッド停止の中断をサポートする場合、このインタフェースで定義されている中断セマンティクスに従わなければなりません。</target>
        </trans-unit>
        <trans-unit id="0806c07fac13f63c8b1e90d2d509f3dc707dff61" translate="yes" xml:space="preserve">
          <source>An implementation is required to read XML documents that use the &quot;&lt;code&gt;UTF-8&lt;/code&gt;&quot; or &quot;&lt;code&gt;UTF-16&lt;/code&gt;&quot; encoding. An implementation may support additional encodings.</source>
          <target state="translated">「 &lt;code&gt;UTF-8&lt;/code&gt; 」または「 &lt;code&gt;UTF-16&lt;/code&gt; 」エンコーディングを使用するXMLドキュメントを読み取るための実装が必要です。実装は、追加のエンコーディングをサポートする場合があります。</target>
        </trans-unit>
        <trans-unit id="f45e1c3ce65854544563be57c2c76070474b3489" translate="yes" xml:space="preserve">
          <source>An implementation is required to support writing of XML documents that use the &quot;&lt;code&gt;UTF-8&lt;/code&gt;&quot; or &quot;&lt;code&gt;UTF-16&lt;/code&gt;&quot; encoding. An implementation may support additional encodings.</source>
          <target state="translated">「 &lt;code&gt;UTF-8&lt;/code&gt; 」または「 &lt;code&gt;UTF-16&lt;/code&gt; 」エンコーディングを使用するXMLドキュメントの書き込みをサポートするには、実装が必要です。実装は、追加のエンコーディングをサポートする場合があります。</target>
        </trans-unit>
        <trans-unit id="e986ed5deb00dacb1c6c0232c9a9be22e07f8aef" translate="yes" xml:space="preserve">
          <source>An implementation may (and typically does) require that the current thread hold the lock associated with this &lt;code&gt;
 Condition&lt;/code&gt; when this method is called. Implementations must document this precondition and any actions taken if the lock is not held. Typically, an exception such as &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt;&lt;code&gt;IllegalMonitorStateException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">実装では、このメソッドが呼び出されたときに、現在のスレッドがこの &lt;code&gt; Condition&lt;/code&gt; に関連付けられたロックを保持する必要がある場合があります（通常はそうします）。実装では、この前提条件と、ロックが保持されていない場合に実行されるアクションを文書化する必要があります。通常、&lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt; &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; &lt;/a&gt;などの例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="be6da1cc0616bc7c03ac504057b911b61246909d" translate="yes" xml:space="preserve">
          <source>An implementation may (and typically does) require that the current thread hold the lock associated with this &lt;code&gt;Condition&lt;/code&gt; when this method is called. Implementations must document this precondition and any actions taken if the lock is not held. Typically, an exception such as &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt;&lt;code&gt;IllegalMonitorStateException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">実装では、このメソッドが呼び出されたときに、現在のスレッドがこの &lt;code&gt;Condition&lt;/code&gt; に関連付けられたロックを保持する必要がある場合があります（通常は必要です）。実装では、この前提条件と、ロックが保持されていない場合に実行されるアクションを文書化する必要があります。通常、&lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt; &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; &lt;/a&gt;などの例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="5674f0612dc6454a818f8c8028668e0f78a363f5" translate="yes" xml:space="preserve">
          <source>An implementation may also recognize additional address syntaxes, for example:</source>
          <target state="translated">実装は、例えば、追加のアドレス構文を認識してもよい。</target>
        </trans-unit>
        <trans-unit id="db29138847f18d7621c563e7db7a5d5353025aeb" translate="yes" xml:space="preserve">
          <source>An implementation may also support additional implementation specific options.</source>
          <target state="translated">実装は、追加の実装固有のオプションをサポートしてもよい。</target>
        </trans-unit>
        <trans-unit id="49ba47636f3a8455cca62c8db213ba1b0cdfad7d" translate="yes" xml:space="preserve">
          <source>An implementation may also support additional options.</source>
          <target state="translated">実装は、追加のオプションをサポートしてもよい。</target>
        </trans-unit>
        <trans-unit id="271eb22768cd477b98c8cfc2cce961505b2a9b5c" translate="yes" xml:space="preserve">
          <source>An implementation may choose to not execute the stream pipeline (either sequentially or in parallel) if it is capable of computing the count directly from the stream source. In such cases no source elements will be traversed and no intermediate operations will be evaluated. Behavioral parameters with side-effects, which are strongly discouraged except for harmless cases such as debugging, may be affected. For example, consider the following stream:</source>
          <target state="translated">実装は、ストリームソースから直接カウントを計算できる場合、ストリームパイプラインを(順次または並列に)実行しないことを選択することができます。そのような場合、ソース要素はトラバースされず、中間処理は評価されない。デバッグのような無害な場合を除いて、副作用のある動作パラメータは強く推奨されませんが、影響を受ける可能性があります。例えば、次のようなストリームを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="ac04f5d1f67a31c75ed5f5120bd6faaf12c31915" translate="yes" xml:space="preserve">
          <source>An implementation may choose to restrict some header names or values, as the HTTP Client may determine their value itself. For example, &quot;Content-Length&quot;, which will be determined by the request Publisher. In such a case, an implementation of &lt;code&gt;HttpRequest.Builder&lt;/code&gt; may choose to throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if such a header is passed to the builder.</source>
          <target state="translated">HTTPクライアントがそれらの値自体を決定する可能性があるため、実装は一部のヘッダー名または値を制限することを選択する場合があります。たとえば、「Content-Length」は、リクエストの発行者によって決定されます。このような場合、 &lt;code&gt;HttpRequest.Builder&lt;/code&gt; の実装は、そのようなヘッダーがビルダーに渡された場合に &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローすることを選択する場合があります。</target>
        </trans-unit>
        <trans-unit id="7563b4f7798b6925941631e4c4b01cffff67feb7" translate="yes" xml:space="preserve">
          <source>An implementation may offer better algorithmic performance when &lt;code&gt;val == this&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;val == this&lt;/code&gt; 場合、実装はより良いアルゴリズムのパフォーマンスを提供する可能性があります。</target>
        </trans-unit>
        <trans-unit id="26f8a864fcbdbf2b0f5bade7248bb11b973249fe" translate="yes" xml:space="preserve">
          <source>An implementation may provide a mechanism to start agents sometime after the the VM has started. The details as to how this is initiated are implementation specific but typically the application has already started and its &lt;code&gt;main&lt;/code&gt; method has already been invoked. In cases where an implementation supports the starting of agents after the VM has started the following applies:</source>
          <target state="translated">実装は、VMの起動後にエージェントを起動するメカニズムを提供する場合があります。これがどのように開始されるかに関する詳細は実装固有ですが、通常、アプリケーションはすでに開始されており、その &lt;code&gt;main&lt;/code&gt; メソッドはすでに呼び出されています。VMの起動後に実装がエージェントの起動をサポートする場合、以下が適用されます。</target>
        </trans-unit>
        <trans-unit id="91f70497f45992b4879cd204e0d29502a43966f1" translate="yes" xml:space="preserve">
          <source>An implementation may require to examine the file to determine if the file is a directory. Consequently this method may not be atomic with respect to other file system operations. If the file is a symbolic link then the symbolic link itself, not the final target of the link, is deleted.</source>
          <target state="translated">実装では、ファイルがディレクトリであるかどうかを判断するために、ファイルを調べる必要があるかもしれません。その結果、このメソッドは他のファイルシステム操作に関してはアトミックではないかもしれません。ファイルがシンボリックリンクの場合は、シンボリックリンク自体が削除され、リンクの最終ターゲットは削除されません。</target>
        </trans-unit>
        <trans-unit id="d26dadc4b9be5b8e0091d9bbf03a3d2eefaa535f" translate="yes" xml:space="preserve">
          <source>An implementation may support a mechanism to start agents some time after the VM has started. For example, an implementation may provide a mechanism that allows a tool to</source>
          <target state="translated">実装は、VMが開始された後のある時間にエージェントを開始するためのメカニズムをサポートしてもよい。例えば、実装は、ツールが</target>
        </trans-unit>
        <trans-unit id="02efbc7035ebd990de6c92ec623b7b7ebaa5ca50" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;a href=&quot;readwritelock&quot;&gt;&lt;code&gt;ReadWriteLock&lt;/code&gt;&lt;/a&gt; supporting similar semantics to &lt;a href=&quot;reentrantlock&quot;&gt;&lt;code&gt;ReentrantLock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;reentrantlock&quot;&gt; &lt;code&gt;ReentrantLock&lt;/code&gt; &lt;/a&gt;と同様のセマンティクスをサポートする&lt;a href=&quot;readwritelock&quot;&gt; &lt;code&gt;ReadWriteLock&lt;/code&gt; &lt;/a&gt;の実装。</target>
        </trans-unit>
        <trans-unit id="b01dbbc2a96ae53b9f60dfa54646cfb2beaae3a3" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;DataSource&lt;/code&gt; must include a public no-arg constructor.</source>
          <target state="translated">&lt;code&gt;DataSource&lt;/code&gt; の実装には、パブリックの引数なしコンストラクターを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="c2e80a2534da583fb526ca186688e896ccb4a018" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;FileFilter&lt;/code&gt; that filters using a specified set of extensions.</source>
          <target state="translated">指定された拡張機能のセットを使用してフィルタリングする &lt;code&gt;FileFilter&lt;/code&gt; の実装。</target>
        </trans-unit>
        <trans-unit id="0ba8b61d9f4fc97c9290e497e8ef3b93c9ebfaa2" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;FileFilter&lt;/code&gt; that filters using a specified set of extensions. The extension for a file is the portion of the file name after the last &quot;.&quot;. Files whose name does not contain a &quot;.&quot; have no file name extension. File name extension comparisons are case insensitive.</source>
          <target state="translated">指定された拡張機能のセットを使用してフィルタリングする &lt;code&gt;FileFilter&lt;/code&gt; の実装。ファイルの拡張子は、最後の「。」の後のファイル名の部分です。名前に「。」が含まれていないファイル ファイル名拡張子はありません。ファイル名拡張子の比較では、大文字と小文字は区別されません。</target>
        </trans-unit>
        <trans-unit id="9c6f6844bf601599a7869871061f029063cd1eb3" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageInputStream&lt;/code&gt; that gets its input from a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;RandomAccessFile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; または &lt;code&gt;RandomAccessFile&lt;/code&gt; から入力を取得する &lt;code&gt;ImageInputStream&lt;/code&gt; の実装。</target>
        </trans-unit>
        <trans-unit id="059bd6ffc3f987d067381ad60a8520569cc67527" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageInputStream&lt;/code&gt; that gets its input from a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;RandomAccessFile&lt;/code&gt;. The file contents are assumed to be stable during the lifetime of the object.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; または &lt;code&gt;RandomAccessFile&lt;/code&gt; から入力を取得する &lt;code&gt;ImageInputStream&lt;/code&gt; の実装。ファイルの内容は、オブジェクトの存続期間中は安定していると見なされます。</target>
        </trans-unit>
        <trans-unit id="457993776e649ccb2e8fc664bf34b54846ba04c4" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageInputStream&lt;/code&gt; that gets its input from a regular &lt;code&gt;InputStream&lt;/code&gt;.</source>
          <target state="translated">通常の &lt;code&gt;InputStream&lt;/code&gt; から入力を取得する &lt;code&gt;ImageInputStream&lt;/code&gt; の実装。</target>
        </trans-unit>
        <trans-unit id="4daf5309026dfdbfacc05ada44d49361ca2d6e6d" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageInputStream&lt;/code&gt; that gets its input from a regular &lt;code&gt;InputStream&lt;/code&gt;. A file is used to cache previously read data.</source>
          <target state="translated">通常の &lt;code&gt;InputStream&lt;/code&gt; から入力を取得する &lt;code&gt;ImageInputStream&lt;/code&gt; の実装。ファイルは、以前に読み取ったデータをキャッシュするために使用されます。</target>
        </trans-unit>
        <trans-unit id="a229238fcd71b555a42b98e4ade47edb39ab3d74" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageInputStream&lt;/code&gt; that gets its input from a regular &lt;code&gt;InputStream&lt;/code&gt;. A memory buffer is used to cache at least the data between the discard position and the current read position.</source>
          <target state="translated">通常の &lt;code&gt;InputStream&lt;/code&gt; から入力を取得する &lt;code&gt;ImageInputStream&lt;/code&gt; の実装。メモリバッファは、少なくとも破棄位置と現在の読み取り位置の間のデータをキャッシュするために使用されます。</target>
        </trans-unit>
        <trans-unit id="1715700fc056d15ae81a2b83b6833150a0a8b005" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageOutputStream&lt;/code&gt; that writes its output directly to a &lt;code&gt;File&lt;/code&gt; or &lt;code&gt;RandomAccessFile&lt;/code&gt;.</source>
          <target state="translated">出力を直接 &lt;code&gt;File&lt;/code&gt; または &lt;code&gt;RandomAccessFile&lt;/code&gt; に書き込む &lt;code&gt;ImageOutputStream&lt;/code&gt; の実装。</target>
        </trans-unit>
        <trans-unit id="1c6863765c682444215abf8678d6537ccb4b2a2e" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageOutputStream&lt;/code&gt; that writes its output to a regular &lt;code&gt;OutputStream&lt;/code&gt;.</source>
          <target state="translated">出力を通常の &lt;code&gt;OutputStream&lt;/code&gt; に書き込む &lt;code&gt;ImageOutputStream&lt;/code&gt; の実装。</target>
        </trans-unit>
        <trans-unit id="836f27e664c9096fb0c70651125110bfbc6cc92a" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageOutputStream&lt;/code&gt; that writes its output to a regular &lt;code&gt;OutputStream&lt;/code&gt;. A file is used to cache data until it is flushed to the output stream.</source>
          <target state="translated">出力を通常の &lt;code&gt;OutputStream&lt;/code&gt; に書き込む &lt;code&gt;ImageOutputStream&lt;/code&gt; の実装。ファイルは、出力ストリームにフラッシュされるまでデータをキャッシュするために使用されます。</target>
        </trans-unit>
        <trans-unit id="c31a52b9996547c44a62ef393d4ed635876f5dc6" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;ImageOutputStream&lt;/code&gt; that writes its output to a regular &lt;code&gt;OutputStream&lt;/code&gt;. A memory buffer is used to cache at least the data between the discard position and the current write position. The only constructor takes an &lt;code&gt;OutputStream&lt;/code&gt;, so this class may not be used for read/modify/write operations. Reading can occur only on parts of the stream that have already been written to the cache and not yet flushed.</source>
          <target state="translated">出力を通常の &lt;code&gt;OutputStream&lt;/code&gt; に書き込む &lt;code&gt;ImageOutputStream&lt;/code&gt; の実装。メモリバッファは、少なくとも破棄位置と現在の書き込み位置の間のデータをキャッシュするために使用されます。唯一のコンストラクタは &lt;code&gt;OutputStream&lt;/code&gt; を取るため、このクラスは読み取り/変更/書き込み操作には使用できません。読み取りは、すでにキャッシュに書き込まれ、まだフラッシュされていないストリームの一部でのみ発生します。</target>
        </trans-unit>
        <trans-unit id="a0db832f36b766fb48883b9a9e5b1cd2cd667b21" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;JFormattedTextField.AbstractFormatterFactory&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField.AbstractFormatterFactory&lt;/code&gt; の実装。</target>
        </trans-unit>
        <trans-unit id="1a5016866cc31ee826eca5f628eb482c15c9f8a3" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;JFormattedTextField.AbstractFormatterFactory&lt;/code&gt;. &lt;code&gt;DefaultFormatterFactory&lt;/code&gt; allows specifying a number of different &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt;s that are to be used. The most important one is the default one (&lt;code&gt;setDefaultFormatter&lt;/code&gt;). The default formatter will be used if a more specific formatter could not be found. The following process is used to determine the appropriate formatter to use.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField.AbstractFormatterFactory&lt;/code&gt; の実装。 &lt;code&gt;DefaultFormatterFactory&lt;/code&gt; を使用すると、使用するさまざまな &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; を指定できます。最も重要なものはデフォルトのものです（ &lt;code&gt;setDefaultFormatter&lt;/code&gt; ）。より具体的なフォーマッターが見つからなかった場合は、デフォルトのフォーマッターが使用されます。次のプロセスを使用して、使用する適切なフォーマッタを決定します。</target>
        </trans-unit>
        <trans-unit id="f46d72e992c29a8e1337050e72514b28178c792d" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;LoggerFinder&lt;/code&gt; may override this method, for example, when the underlying logging backend provides its own mechanism for localizing log messages, then such a &lt;code&gt;LoggerFinder&lt;/code&gt; would be free to return a logger that makes direct use of the mechanism provided by the backend.</source>
          <target state="translated">&lt;code&gt;LoggerFinder&lt;/code&gt; の実装は、このメソッドをオーバーライドする場合があります。たとえば、基盤となるロギングバックエンドがログメッセージをローカライズするための独自のメカニズムを提供する場合、そのような &lt;code&gt;LoggerFinder&lt;/code&gt; は、バックエンドによって提供されるメカニズムを直接使用するロガーを自由に返すことができます。</target>
        </trans-unit>
        <trans-unit id="6cde0f952178cceb7ef2b91373a41819902268a3" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; is responsible for adding the ignored exceptions to the list.</source>
          <target state="translated">&lt;code&gt;PKIXRevocationChecker&lt;/code&gt; の実装は、無視された例外をリストに追加する責任があります。</target>
        </trans-unit>
        <trans-unit id="8003b1eeafc8e148a9bad9c5baaa649725ee318b" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;RowSorter&lt;/code&gt; that provides sorting and filtering around a grid-based data model.</source>
          <target state="translated">グリッドベースのデータモデルの周りに並べ替えとフィルタリングを提供する &lt;code&gt;RowSorter&lt;/code&gt; の実装。</target>
        </trans-unit>
        <trans-unit id="3e9e120e3a2edf72feb0bffa2c636d000282dcbb" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;RowSorter&lt;/code&gt; that provides sorting and filtering around a grid-based data model. Beyond creating and installing a &lt;code&gt;RowSorter&lt;/code&gt;, you very rarely need to interact with one directly. Refer to &lt;a href=&quot;table/tablerowsorter&quot;&gt;&lt;code&gt;TableRowSorter&lt;/code&gt;&lt;/a&gt; for a concrete implementation of &lt;code&gt;RowSorter&lt;/code&gt; for &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">グリッドベースのデータモデルの周りに並べ替えとフィルタリングを提供する &lt;code&gt;RowSorter&lt;/code&gt; の実装。 &lt;code&gt;RowSorter&lt;/code&gt; を作成してインストールする以外に、RowSorterを直接操作する必要はほとんどありません。参照してください&lt;a href=&quot;table/tablerowsorter&quot;&gt; &lt;code&gt;TableRowSorter&lt;/code&gt; は&lt;/a&gt;の具体的な実装のため &lt;code&gt;RowSorter&lt;/code&gt; のため &lt;code&gt;JTable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41b3fb3bf374a24a9f0b16096683575463fb9994" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;RowSorter&lt;/code&gt; that provides sorting and filtering using a &lt;code&gt;TableModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TableModel&lt;/code&gt; を使用して並べ替えとフィルタリングを提供する &lt;code&gt;RowSorter&lt;/code&gt; の実装。</target>
        </trans-unit>
        <trans-unit id="9e6d208abd872a41406eef73de76e93199913990" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;RowSorter&lt;/code&gt; that provides sorting and filtering using a &lt;code&gt;TableModel&lt;/code&gt;. The following example shows adding sorting to a &lt;code&gt;JTable&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TableModel&lt;/code&gt; を使用して並べ替えとフィルタリングを提供する &lt;code&gt;RowSorter&lt;/code&gt; の実装。次の例は、 &lt;code&gt;JTable&lt;/code&gt; に並べ替えを追加する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="bed752009c1d8decb535a1a8e86e77d63dfdc073" translate="yes" xml:space="preserve">
          <source>An implementation of &lt;code&gt;XADataSource&lt;/code&gt; must include a public no-arg constructor.</source>
          <target state="translated">&lt;code&gt;XADataSource&lt;/code&gt; の実装には、パブリックの引数なしコンストラクターを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="230f5799328e42d5a42c84c53b9b672a9b7cb297" translate="yes" xml:space="preserve">
          <source>An implementation of ElementChange that can be added to the document event.</source>
          <target state="translated">ドキュメントイベントに追加できるElementChangeの実装。</target>
        </trans-unit>
        <trans-unit id="c86688d8cfc8932559f66cc39e18b770c5e376ed" translate="yes" xml:space="preserve">
          <source>An implementation of a &quot;push&quot; button.</source>
          <target state="translated">プッシュボタンの実装。</target>
        </trans-unit>
        <trans-unit id="81bea02edd862fb16571504b7d949cb5b6cdb00b" translate="yes" xml:space="preserve">
          <source>An implementation of a check box -- an item that can be selected or deselected, and which displays its state to the user.</source>
          <target state="translated">チェックボックスの実装 --選択・非選択が可能で、その状態をユーザに表示する項目。</target>
        </trans-unit>
        <trans-unit id="3acae839db8fef76f73838aedf0fed8093e0e798" translate="yes" xml:space="preserve">
          <source>An implementation of a check box -- an item that can be selected or deselected, and which displays its state to the user. By convention, any number of check boxes in a group can be selected. See &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;How to Use Buttons, Check Boxes, and Radio Buttons&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt; for examples and information on using check boxes.</source>
          <target state="translated">チェックボックスの実装-選択または選択解除でき、その状態をユーザーに表示する項目。慣例により、グループ内のチェックボックスはいくつでも選択できます。&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;チェックボックスの使用&lt;/a&gt;例と情報については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;ボタン、チェックボックス、およびラジオボタンの使用方法を参照してください。</target>
        </trans-unit>
        <trans-unit id="586159ca1762c09e77c1c88b78d72b4bbd682588" translate="yes" xml:space="preserve">
          <source>An implementation of a lightweight component that participates in layout but has no view.</source>
          <target state="translated">レイアウトに参加するがビューを持たない軽量コンポーネントの実装。</target>
        </trans-unit>
        <trans-unit id="96a0c8056f9e3eea2788f5cf53e3d629c07ec298" translate="yes" xml:space="preserve">
          <source>An implementation of a menu -- a popup window containing &lt;code&gt;JMenuItem&lt;/code&gt;s that is displayed when the user selects an item on the &lt;code&gt;JMenuBar&lt;/code&gt;.</source>
          <target state="translated">メニューの実装-ユーザーが &lt;code&gt;JMenuBar&lt;/code&gt; で項目を選択したときに表示される &lt;code&gt;JMenuItem&lt;/code&gt; を含むポップアップウィンドウ。</target>
        </trans-unit>
        <trans-unit id="6514438eae6c4edbad5855314475fdf1e7a12e79" translate="yes" xml:space="preserve">
          <source>An implementation of a menu -- a popup window containing &lt;code&gt;JMenuItem&lt;/code&gt;s that is displayed when the user selects an item on the &lt;code&gt;JMenuBar&lt;/code&gt;. In addition to &lt;code&gt;JMenuItem&lt;/code&gt;s, a &lt;code&gt;JMenu&lt;/code&gt; can also contain &lt;code&gt;JSeparator&lt;/code&gt;s.</source>
          <target state="translated">メニューの実装-ユーザーが &lt;code&gt;JMenuBar&lt;/code&gt; で項目を選択したときに表示される &lt;code&gt;JMenuItem&lt;/code&gt; を含むポップアップウィンドウ。加えて &lt;code&gt;JMenuItem&lt;/code&gt; S、 &lt;code&gt;JMenu&lt;/code&gt; にはも含めることができます &lt;code&gt;JSeparator&lt;/code&gt; 秒。</target>
        </trans-unit>
        <trans-unit id="8f44527aa4060f76b655211d0f3c1b923816b38e" translate="yes" xml:space="preserve">
          <source>An implementation of a menu bar.</source>
          <target state="translated">メニューバーの実装。</target>
        </trans-unit>
        <trans-unit id="855ca660250e40e2a1d204b4a2224b20ebf2f50a" translate="yes" xml:space="preserve">
          <source>An implementation of a menu bar. You add &lt;code&gt;JMenu&lt;/code&gt; objects to the menu bar to construct a menu. When the user selects a &lt;code&gt;JMenu&lt;/code&gt; object, its associated &lt;code&gt;JPopupMenu&lt;/code&gt; is displayed, allowing the user to select one of the &lt;code&gt;JMenuItems&lt;/code&gt; on it.</source>
          <target state="translated">メニューバーの実装。 &lt;code&gt;JMenu&lt;/code&gt; オブジェクトをメニューバーに追加して、メニューを作成します。ユーザーが &lt;code&gt;JMenu&lt;/code&gt; オブジェクトを選択すると、関連する &lt;code&gt;JPopupMenu&lt;/code&gt; が表示され、ユーザーはそのオブジェクト上の &lt;code&gt;JMenuItems&lt;/code&gt; 1つを選択できます。</target>
        </trans-unit>
        <trans-unit id="8b4b12f64dc6816e8330b5e16fcb3b3c27fc1956" translate="yes" xml:space="preserve">
          <source>An implementation of a popup menu -- a small window that pops up and displays a series of choices.</source>
          <target state="translated">ポップアップメニューの実装 --ポップアップして一連の選択肢を表示する小さなウィンドウ。</target>
        </trans-unit>
        <trans-unit id="49218303b341dd47dadefc58769c786893b21d83" translate="yes" xml:space="preserve">
          <source>An implementation of a popup menu -- a small window that pops up and displays a series of choices. A &lt;code&gt;JPopupMenu&lt;/code&gt; is used for the menu that appears when the user selects an item on the menu bar. It is also used for &quot;pull-right&quot; menu that appears when the selects a menu item that activates it. Finally, a &lt;code&gt;JPopupMenu&lt;/code&gt; can also be used anywhere else you want a menu to appear. For example, when the user right-clicks in a specified area.</source>
          <target state="translated">ポップアップメニューの実装-ポップアップして一連の選択肢を表示する小さなウィンドウ。 A &lt;code&gt;JPopupMenu&lt;/code&gt; のは、ユーザーがメニューバーの項目を選択すると表示されるメニューに使用されます。また、それをアクティブにするメニュー項目を選択したときに表示される「プルライト」メニューにも使用されます。最後に、 &lt;code&gt;JPopupMenu&lt;/code&gt; は、メニューを表示したい他の場所でも使用できます。たとえば、ユーザーが指定された領域を右クリックした場合です。</target>
        </trans-unit>
        <trans-unit id="f604d75fa51a12bc6f38cc8f6431f5eb80d35dab" translate="yes" xml:space="preserve">
          <source>An implementation of a radio button -- an item that can be selected or deselected, and which displays its state to the user.</source>
          <target state="translated">ラジオボタンの実装 --選択・非選択が可能で、その状態をユーザに表示するアイテム。</target>
        </trans-unit>
        <trans-unit id="2b6aaab62273a9c418c019e524acd3d15dae3319" translate="yes" xml:space="preserve">
          <source>An implementation of a radio button -- an item that can be selected or deselected, and which displays its state to the user. Used with a &lt;a href=&quot;buttongroup&quot;&gt;&lt;code&gt;ButtonGroup&lt;/code&gt;&lt;/a&gt; object to create a group of buttons in which only one button at a time can be selected. (Create a ButtonGroup object and use its &lt;code&gt;add&lt;/code&gt; method to include the JRadioButton objects in the group.)</source>
          <target state="translated">ラジオボタンの実装-選択または選択解除が可能で、その状態をユーザーに表示するアイテム。&lt;a href=&quot;buttongroup&quot;&gt; &lt;code&gt;ButtonGroup&lt;/code&gt; &lt;/a&gt;オブジェクトとともに使用して、一度に1つのボタンしか選択できないボタンのグループを作成します。（ButtonGroupオブジェクトを作成し、その &lt;code&gt;add&lt;/code&gt; メソッドを使用してJRadioButtonオブジェクトをグループに含めます。）</target>
        </trans-unit>
        <trans-unit id="239da6fe4a0d364987ba87bd481fb3405bc03aa9" translate="yes" xml:space="preserve">
          <source>An implementation of a radio button menu item.</source>
          <target state="translated">ラジオボタンのメニュー項目の実装。</target>
        </trans-unit>
        <trans-unit id="a877a65608e32d5e750021d152bc78e270800c59" translate="yes" xml:space="preserve">
          <source>An implementation of a radio button menu item. A &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt; is a menu item that is part of a group of menu items in which only one item in the group can be selected. The selected item displays its selected state. Selecting it causes any other selected item to switch to the unselected state. To control the selected state of a group of radio button menu items, use a &lt;code&gt;ButtonGroup&lt;/code&gt; object.</source>
          <target state="translated">ラジオボタンメニュー項目の実装。A &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt; は、グループ内の唯一の項目が選択可能なメニュー項目のグループの一部であるメニュー項目です。選択したアイテムには、選択した状態が表示されます。これを選択すると、他の選択されたアイテムが選択されていない状態に切り替わります。ラジオボタンメニュー項目のグループの選択された状態を制御するには、 &lt;code&gt;ButtonGroup&lt;/code&gt; オブジェクトを使用します。</target>
        </trans-unit>
        <trans-unit id="83e16ff908d7a7b9a44c42bc9ef5552caf56f976" translate="yes" xml:space="preserve">
          <source>An implementation of a scrollbar.</source>
          <target state="translated">スクロールバーの実装。</target>
        </trans-unit>
        <trans-unit id="9349bf7b6e31b8c0bd493d81ab8784054ee9d603" translate="yes" xml:space="preserve">
          <source>An implementation of a scrollbar. The user positions the knob in the scrollbar to determine the contents of the viewing area. The program typically adjusts the display so that the end of the scrollbar represents the end of the displayable contents, or 100% of the contents. The start of the scrollbar is the beginning of the displayable contents, or 0%. The position of the knob within those bounds then translates to the corresponding percentage of the displayable contents.</source>
          <target state="translated">スクロールバーの実装。ユーザは、スクロールバー内のノブを配置して、表示領域の内容を決定する。プログラムは、典型的には、スクロールバーの終わりが、表示可能なコンテンツの終わり、すなわちコンテンツの100%を表すように、表示を調整する。スクロールバーの開始は、表示可能なコンテンツの開始、すなわち0%を表す。そして、これらの境界内でのノブの位置は、表示可能なコンテンツの対応するパーセンテージに変換される。</target>
        </trans-unit>
        <trans-unit id="013f78343a814056cc801ac60a2695977a1a39dd" translate="yes" xml:space="preserve">
          <source>An implementation of a service provided by a module.</source>
          <target state="translated">モジュールが提供するサービスの実装。</target>
        </trans-unit>
        <trans-unit id="60b37e7d32c7e18cc92fcb89e563e9ca9a706b27" translate="yes" xml:space="preserve">
          <source>An implementation of a two-state button.</source>
          <target state="translated">2ステートボタンの実装。</target>
        </trans-unit>
        <trans-unit id="b2456412fcc2a95dfd0fbc17ec85190ef60dd249" translate="yes" xml:space="preserve">
          <source>An implementation of a two-state button. The &lt;code&gt;JRadioButton&lt;/code&gt; and &lt;code&gt;JCheckBox&lt;/code&gt; classes are subclasses of this class. For information on using them see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;How to Use Buttons, Check Boxes, and Radio Buttons&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">2状態ボタンの実装。 &lt;code&gt;JRadioButton&lt;/code&gt; と &lt;code&gt;JCheckBox&lt;/code&gt; のクラスは、このクラスのサブクラスです。それらの&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;使用方法&lt;/a&gt;については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションの「ボタン、チェックボックス、およびラジオボタンの使用方法」を参照してください。</target>
        </trans-unit>
        <trans-unit id="e2d7e46b4a3c1e092f15da2e8d9c1f07ca46f14f" translate="yes" xml:space="preserve">
          <source>An implementation of an item in a menu.</source>
          <target state="translated">メニューの項目の実装。</target>
        </trans-unit>
        <trans-unit id="93572bb53f96007d4347786046697c6e31bb6ae2" translate="yes" xml:space="preserve">
          <source>An implementation of an item in a menu. A menu item is essentially a button sitting in a list. When the user selects the &quot;button&quot;, the action associated with the menu item is performed. A &lt;code&gt;JMenuItem&lt;/code&gt; contained in a &lt;code&gt;JPopupMenu&lt;/code&gt; performs exactly that function.</source>
          <target state="translated">メニュー内のアイテムの実装。メニュー項目は、基本的にリストにあるボタンです。ユーザーが「ボタン」を選択すると、メニュー項目に関連付けられたアクションが実行されます。A &lt;code&gt;JMenuItem&lt;/code&gt; 中に含まれる &lt;code&gt;JPopupMenu&lt;/code&gt; のを正確に実行する機能。</target>
        </trans-unit>
        <trans-unit id="64f1cb142516dfd57994c2f3220b5f90f4e6add5" translate="yes" xml:space="preserve">
          <source>An implementation of the &lt;code&gt;InvocationHandler&lt;/code&gt; interface for use with Java Remote Method Invocation (Java RMI).</source>
          <target state="translated">Java Remote Method Invocation（Java RMI）で使用するための &lt;code&gt;InvocationHandler&lt;/code&gt; インターフェースの実装。</target>
        </trans-unit>
        <trans-unit id="b835531fdc052f784056f6cca934fcb6ac347c7f" translate="yes" xml:space="preserve">
          <source>An implementation of the &lt;code&gt;InvocationHandler&lt;/code&gt; interface for use with Java Remote Method Invocation (Java RMI). This invocation handler can be used in conjunction with a dynamic proxy instance as a replacement for a pregenerated stub class.</source>
          <target state="translated">Java Remote Method Invocation（Java RMI）で使用するための &lt;code&gt;InvocationHandler&lt;/code&gt; インターフェースの実装。この呼び出しハンドラーは、事前に生成されたスタブクラスの代わりに、動的プロキシインスタンスと組み合わせて使用​​できます。</target>
        </trans-unit>
        <trans-unit id="cb76c2bbb6d4388d959e0ce9996f398b1e4a7c7f" translate="yes" xml:space="preserve">
          <source>An implementation of the AbstractDocument.Content interface implemented using a gapped buffer similar to that used by emacs.</source>
          <target state="translated">emacs で使用されているものと同様のギャップバッファを使用して実装された AbstractDocument.Content インターフェイスの実装。</target>
        </trans-unit>
        <trans-unit id="4e3bbfb97051cb40468add04f97d563b6af55f32" translate="yes" xml:space="preserve">
          <source>An implementation of the AbstractDocument.Content interface implemented using a gapped buffer similar to that used by emacs. The underlying storage is a array of unicode characters with a gap somewhere. The gap is moved to the location of changes to take advantage of common behavior where most changes are in the same location. Changes that occur at a gap boundary are generally cheap and moving the gap is generally cheaper than moving the array contents directly to accommodate the change.</source>
          <target state="translated">emacs で使われているようなギャップバッファを使って実装された AbstractDocument.Content インターフェイスの実装。基礎となるストレージは、どこかにギャップを持つユニコード文字の配列です。ギャップは、ほとんどの変更が同じ場所にあるという一般的な動作を利用するために、変更の位置に移動されます。ギャップの境界で発生する変更は一般的に安価であり、ギャップを移動させることは、変更に対応するために配列の内容を直接移動させるよりも一般的に安価です。</target>
        </trans-unit>
        <trans-unit id="3971323a368da59e53ab8f0f88e5069b9f919701" translate="yes" xml:space="preserve">
          <source>An implementation of the AbstractDocument.Content interface that is a brute force implementation that is useful for relatively small documents and/or debugging.</source>
          <target state="translated">比較的小さなドキュメントやデバッグに便利なブルートフォース実装である AbstractDocument.Content インターフェイスの実装。</target>
        </trans-unit>
        <trans-unit id="be326d41db13de5593b60d826dc128edd75be431" translate="yes" xml:space="preserve">
          <source>An implementation of the AbstractDocument.Content interface that is a brute force implementation that is useful for relatively small documents and/or debugging. It manages the character content as a simple character array. It is also quite inefficient.</source>
          <target state="translated">比較的小さなドキュメントやデバッグに便利なブルートフォース実装である AbstractDocument.Content インターフェイスの実装。これは、文字の内容を単純な文字配列として管理します。また、非常に非効率的です。</target>
        </trans-unit>
        <trans-unit id="69ed823f36724189db7fd62243604631efe57d0e" translate="yes" xml:space="preserve">
          <source>An implementation of the Icon interface that paints Icons from Images.</source>
          <target state="translated">画像からアイコンを描くIconインターフェイスの実装。</target>
        </trans-unit>
        <trans-unit id="a7177d173f2e8a1a6abe4f50c9e7a797a6dd934f" translate="yes" xml:space="preserve">
          <source>An implementation of the Icon interface that paints Icons from Images. Images that are created from a URL, filename or byte array are preloaded using MediaTracker to monitor the loaded state of the image.</source>
          <target state="translated">画像からアイコンを描画するIconインターフェイスの実装です。URL、ファイル名、バイト配列から作成された画像は、MediaTracker を使用してプリロードされ、画像のロード状態を監視します。</target>
        </trans-unit>
        <trans-unit id="96df4d6c9314ffee9e9b2c1ebcfd74ffab3cd3e3" translate="yes" xml:space="preserve">
          <source>An implementation of the document interface to serve as a basis for implementing various kinds of documents.</source>
          <target state="translated">様々な種類の文書を実装するための基礎となる文書インタフェースの実装。</target>
        </trans-unit>
        <trans-unit id="7a86febcf3a11aad32fbab52b8d0f7a2bdb98755" translate="yes" xml:space="preserve">
          <source>An implementation of the document interface to serve as a basis for implementing various kinds of documents. At this level there is very little policy, so there is a corresponding increase in difficulty of use.</source>
          <target state="translated">様々な種類の文書を実装するための基盤となる文書インタフェースの実装。このレベルではポリシーがほとんどないので、それに応じて利用の難易度が上がる。</target>
        </trans-unit>
        <trans-unit id="5756aff0e44958a2c776a7455c2712790e18167b" translate="yes" xml:space="preserve">
          <source>An implementation of this interface may prohibit truncation when connected to an entity, typically a file, opened with the &lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt;&lt;code&gt;APPEND&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">このインターフェースの実装は、&lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt; &lt;code&gt;APPEND&lt;/code&gt; &lt;/a&gt;オプションで開かれたエンティティ（通常はファイル）に接続されている場合、切り捨てを禁止する場合があります。</target>
        </trans-unit>
        <trans-unit id="3ba7010f6739cb6575395956999483b72deadec7" translate="yes" xml:space="preserve">
          <source>An implementation of this interface may support additional implementation specific options.</source>
          <target state="translated">このインタフェースの実装は、追加の実装固有のオプションをサポートしてもよい。</target>
        </trans-unit>
        <trans-unit id="9987dbb34795ed4f7e78e9ccc836ab83c4edcc75" translate="yes" xml:space="preserve">
          <source>An implementation of this interface must define a &lt;code&gt;compareTo&lt;/code&gt; method that provides an ordering consistent with its &lt;code&gt;getDelay&lt;/code&gt; method.</source>
          <target state="translated">このインターフェースの実装は、その &lt;code&gt;getDelay&lt;/code&gt; メソッドと整合性のある順序付けを提供する &lt;code&gt;compareTo&lt;/code&gt; メソッドを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="684ed5694e213a18d64f9066d1d2f267305a6153" translate="yes" xml:space="preserve">
          <source>An implementation of this interface should be serializable and should implement &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;true&lt;/code&gt; when passed an instance that represents the same (functionally equivalent) client socket factory, and &lt;code&gt;false&lt;/code&gt; otherwise (and it should also implement &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; consistently with its &lt;code&gt;Object.equals&lt;/code&gt; implementation).</source>
          <target state="translated">このインターフェイスの実装はシリアル化可能であり、&lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;を実装して、同じ（機能的に同等の）クライアントソケットファクトリを表すインスタンスが渡されたときに &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返す必要があります（また、&lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;も実装する必要があります）.hashCode（）はその &lt;code&gt;Object.equals&lt;/code&gt; 実装と一貫して）。</target>
        </trans-unit>
        <trans-unit id="c417482fd05c70e7cd9181484ddd23fb19d04ce5" translate="yes" xml:space="preserve">
          <source>An implementation of this interface should implement &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; to return &lt;code&gt;true&lt;/code&gt; when passed an instance that represents the same (functionally equivalent) server socket factory, and &lt;code&gt;false&lt;/code&gt; otherwise (and it should also implement &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; consistently with its &lt;code&gt;Object.equals&lt;/code&gt; implementation).</source>
          <target state="translated">このインターフェイスの実装では、&lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;を実装して、同じ（機能的に同等の）サーバーソケットファクトリを表すインスタンスが渡されたときに &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返す必要があります&lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;も実装する必要があります）。 &lt;code&gt;Object.equals&lt;/code&gt; の実装と一貫して）。</target>
        </trans-unit>
        <trans-unit id="351575b04c66e198d4cc717d82c655e6119d7292" translate="yes" xml:space="preserve">
          <source>An implementation of this method may perform arbitrary lookahead by returning &lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt;&lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt;&lt;/a&gt; until it receives sufficient input.</source>
          <target state="translated">このメソッドの実装は、十分な入力を受け取るまで&lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt; &lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt; &lt;/a&gt;を返すことにより、任意の先読みを実行できます。</target>
        </trans-unit>
        <trans-unit id="dac848b4c389f4f581fc3bdf751e940dc491fd9b" translate="yes" xml:space="preserve">
          <source>An implementation of this method might remove/destroy a Subject's Principals and Credentials.</source>
          <target state="translated">このメソッドの実装では、サブジェクトのプリンシパルとクレデンシャルを削除/破壊することができます。</target>
        </trans-unit>
        <trans-unit id="b3029e0ce474354a0401e8451128e358790559db" translate="yes" xml:space="preserve">
          <source>An implementation of this method must arrange for any other thread that is blocked in a selection operation upon this selector to return immediately as if by invoking the &lt;a href=&quot;../selector#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドの実装では、このセレクターでの選択操作でブロックされた他のスレッドが、&lt;a href=&quot;../selector#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すかのようにすぐに戻るように調整する必要があります。</target>
        </trans-unit>
        <trans-unit id="7ff47ed40388a7cf01eea84e2772e1cb2fe9d5a0" translate="yes" xml:space="preserve">
          <source>An implementation of this method must arrange for any other thread that is blocked in a selection operation upon this selector to return immediately as if by invoking the &lt;a href=&quot;../selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドの実装は、このセレクターの選択操作でブロックされた他のスレッドが、&lt;a href=&quot;../selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt;メソッドを呼び出したかのようにすぐに戻るように調整する必要があります。</target>
        </trans-unit>
        <trans-unit id="38484a30e2ef54b7a5a25f0a9d10fcdf555fdf96" translate="yes" xml:space="preserve">
          <source>An implementation of this method must arrange for any other thread that is blocked in an I/O operation upon this channel to return immediately, either by throwing an exception or by returning normally.</source>
          <target state="translated">このメソッドの実装では、このチャネル上の I/O 操作でブロックされた他のスレッドが、例外を投げるか、通常通りに返すかのいずれかで、すぐに戻るように手配しなければなりません。</target>
        </trans-unit>
        <trans-unit id="95d8b4dd7dc3c5da67e9a53ccd1f149ce3543cbc" translate="yes" xml:space="preserve">
          <source>An implementation of this method must either return a class with the given name or throw an exception.</source>
          <target state="translated">このメソッドの実装は、指定された名前のクラスを返すか、例外をスローしなければなりません。</target>
        </trans-unit>
        <trans-unit id="a718bfa3486d11fe42ba8cb39e7ab90c482e82b6" translate="yes" xml:space="preserve">
          <source>An implementation of this method must either return a proxy class that implements the named interfaces or throw an exception.</source>
          <target state="translated">このメソッドの実装は、指定されたインターフェイスを実装したプロキシクラスを返すか、例外を投げなければなりません。</target>
        </trans-unit>
        <trans-unit id="10551bcca1cdf5948cc92052f64f3152c034394b" translate="yes" xml:space="preserve">
          <source>An implementation should attempt to comply with the maximum packet size configuration. However, if the maximum packet size is too small to hold a minimal record, an implementation may try to generate as minimal records as possible. This may cause a generated packet to be larger than the maximum packet size.</source>
          <target state="translated">実装は、最大パケットサイズの設定に従うことを試みるべきである。しかし、最大パケットサイズが小さすぎて最小レコードを保持できない場合、実装は、可能な限り最小レコードを生成しようとすることがある。これにより、生成されたパケットが最大パケットサイズよりも大きくなる可能性がある。</target>
        </trans-unit>
        <trans-unit id="a9d9e1f95ab78f9e1c8d216a363e650fa41f57e1" translate="yes" xml:space="preserve">
          <source>An implementation specific string describing the error that occurred.</source>
          <target state="translated">発生したエラーを記述する実装固有の文字列。</target>
        </trans-unit>
        <trans-unit id="aeaa1f4673b0627db8074edb4f1929d0257d797e" translate="yes" xml:space="preserve">
          <source>An implementation that has the desired features, or &lt;code&gt;null&lt;/code&gt; if none found.</source>
          <target state="translated">必要な機能を備えた実装。見つからない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6d74063ebc6bfb730b3825fc3dc30d6474bdc77" translate="yes" xml:space="preserve">
          <source>An implementation when choosing whether to apply any of the LCD text hint values may take into account factors including requiring color depth of the destination to be at least 15 bits per pixel (ie 5 bits per color component), characteristics of a font such as whether embedded bitmaps may produce better results, or when displaying to a non-local networked display device enabling it only if suitable protocols are available, or ignoring the hint if performing very high resolution rendering or the target device is not appropriate: eg when printing.</source>
          <target state="translated">LCDテキストヒント値のいずれかを適用するかどうかを選択するときの実装は、宛先の色深度がピクセルあたり少なくとも15ビット(すなわち、色成分あたり5ビット)であることを必要とすること、埋め込みビットマップがより良い結果をもたらすかどうかなどのフォントの特性、または非ローカルなネットワーク接続されたディスプレイデバイスに表示するときに、適切なプロトコルが利用可能な場合にのみ有効にすること、または非常に高解像度のレンダリングを実行するか、またはターゲットデバイスが適切でない場合にヒントを無視することなどの要因を考慮してもよい。</target>
        </trans-unit>
        <trans-unit id="d77c0671baecd4b2e337ef2dfa7017c12fdde83d" translate="yes" xml:space="preserve">
          <source>An implementation-reserved element.</source>
          <target state="translated">実装が保存されている要素。</target>
        </trans-unit>
        <trans-unit id="58fda3455b3a038c0f6e68de6cb19fc938bbe7ea" translate="yes" xml:space="preserve">
          <source>An implementation-reserved element. This is not the element you are looking for.</source>
          <target state="translated">実装で保存されている要素です。これはあなたが探している要素ではありません。</target>
        </trans-unit>
        <trans-unit id="ab78c901c447955df90aba2467177e73e28b91db" translate="yes" xml:space="preserve">
          <source>An implementation-reserved type.</source>
          <target state="translated">実装が保存されているタイプ。</target>
        </trans-unit>
        <trans-unit id="8bd0e138fb5948f3b621a84e0a7a6553ab374e64" translate="yes" xml:space="preserve">
          <source>An implementation-reserved type. This is not the type you are looking for.</source>
          <target state="translated">実装で保存された型です。これはお探しの型ではありません。</target>
        </trans-unit>
        <trans-unit id="8e4e654ee8bd8f105367159f12e9bbb79f615f72" translate="yes" xml:space="preserve">
          <source>An implementer receives notification when the app is asked to show its about dialog.</source>
          <target state="translated">アプリがaboutダイアログの表示を求められたときに通知を受け取る実装者。</target>
        </trans-unit>
        <trans-unit id="690c7a8983eb65d3669a77410070d6e8894cd3f5" translate="yes" xml:space="preserve">
          <source>An implementor can respond to requests to print documents that the app has been registered to handle.</source>
          <target state="translated">実装者は、アプリが扱うように登録されている文書の印刷要求に対応することができます。</target>
        </trans-unit>
        <trans-unit id="fc3b7a5209bc81a870f20eaf79db612ad4748309" translate="yes" xml:space="preserve">
          <source>An implementor determines if requests to quit this application should proceed or cancel.</source>
          <target state="translated">実装者は、このアプリケーションを終了するためのリクエストを続行するか、キャンセルするかを決定します。</target>
        </trans-unit>
        <trans-unit id="2b28119b328676d09c96a310999fefb3d8c8546e" translate="yes" xml:space="preserve">
          <source>An implementor is notified when the app is asked to show its preferences UI.</source>
          <target state="translated">アプリの環境設定UIを表示するように求められたときに、実装者に通知されます。</target>
        </trans-unit>
        <trans-unit id="8206702e7c6afe0996171e308e22656debc11a0a" translate="yes" xml:space="preserve">
          <source>An implementor is notified when the application is asked to open a URI.</source>
          <target state="translated">アプリケーションがURIを開くように要求された場合、実装者に通知されます。</target>
        </trans-unit>
        <trans-unit id="2f72cafecfc588eb0d58d7055d013f519d3fdfae" translate="yes" xml:space="preserve">
          <source>An implementor is notified when the application is asked to open a list of files.</source>
          <target state="translated">実装者は、アプリケーションがファイルのリストを開くように要求されたときに通知されます。</target>
        </trans-unit>
        <trans-unit id="68522838b88bf64e4e84ba893135c5e8bf4b299d" translate="yes" xml:space="preserve">
          <source>An important method that must be implemented by each subclass is the &lt;code&gt;implies&lt;/code&gt; method to compare Permissions. Basically, &quot;permission p1 implies permission p2&quot; means that if one is granted permission p1, one is naturally granted permission p2. Thus, this is not an equality test, but rather more of a subset test.</source>
          <target state="translated">各サブクラスで実装する必要がある重要なメソッドは、権限を比較する &lt;code&gt;implies&lt;/code&gt; メソッドです。基本的に、「許可p1は許可p2を意味する」とは、許可p1が付与された場合、当然許可p2が付与されることを意味します。したがって、これは同等性テストではなく、むしろサブセットテストです。</target>
        </trans-unit>
        <trans-unit id="b43a06b6bc405b50e28d4bfa44c4fc2d3089b683" translate="yes" xml:space="preserve">
          <source>An important method to define is the &lt;a href=&quot;#getPropertyPrefix()&quot;&gt;&lt;code&gt;getPropertyPrefix()&lt;/code&gt;&lt;/a&gt; method which is used as the basis of the keys used to fetch defaults from the UIManager. The string should reflect the type of TextUI (eg. TextField, TextArea, etc) without the particular LAF part of the name (eg Metal, Motif, etc).</source>
          <target state="translated">定義する重要なメソッドは、UIManagerからデフォルトをフェッチするために使用されるキーの基礎として使用される&lt;a href=&quot;#getPropertyPrefix()&quot;&gt; &lt;code&gt;getPropertyPrefix()&lt;/code&gt; &lt;/a&gt;メソッドです。文字列は、名前の特定のLAF部分（Metal、Motifなど）を除いて、TextUIのタイプ（TextField、TextAreaなど）を反映する必要があります。</target>
        </trans-unit>
        <trans-unit id="79721f1b5e66f2c7a3ae4d7c973db543278e32d6" translate="yes" xml:space="preserve">
          <source>An important property of the directory stream's &lt;code&gt;Iterator&lt;/code&gt; is that its &lt;a href=&quot;../../util/iterator#hasNext()&quot;&gt;&lt;code&gt;hasNext&lt;/code&gt;&lt;/a&gt; method is guaranteed to read-ahead by at least one element. If &lt;code&gt;hasNext&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;, and is followed by a call to the &lt;code&gt;next&lt;/code&gt; method, it is guaranteed that the &lt;code&gt;next&lt;/code&gt; method will not throw an exception due to an I/O error, or because the stream has been &lt;a href=&quot;../../io/closeable#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Iterator&lt;/code&gt; does not support the &lt;a href=&quot;../../util/iterator#remove()&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; operation.</source>
          <target state="translated">ディレクトリストリームの &lt;code&gt;Iterator&lt;/code&gt; の重要なプロパティは、その&lt;a href=&quot;../../util/iterator#hasNext()&quot;&gt; &lt;code&gt;hasNext&lt;/code&gt; &lt;/a&gt;メソッドが少なくとも1つの要素によって先読みされることが保証されていることです。場合 &lt;code&gt;hasNext&lt;/code&gt; メソッドが返す &lt;code&gt;true&lt;/code&gt; 、およびへの呼び出しに続いて &lt;code&gt;next&lt;/code&gt; 方法で、次のことが保証されている &lt;code&gt;next&lt;/code&gt; ストリームがされているため、この方法が原因I / Oエラーのために例外をスロー、またはありません&lt;a href=&quot;../../io/closeable#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;Iterator&lt;/code&gt; サポートしていません。&lt;a href=&quot;../../util/iterator#remove()&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;操作を。</target>
        </trans-unit>
        <trans-unit id="266b129cb42c0c5ae325fff8527f94dd650750e2" translate="yes" xml:space="preserve">
          <source>An important property of the directory stream's &lt;code&gt;Iterator&lt;/code&gt; is that its &lt;a href=&quot;../../util/iterator#hasNext--&quot;&gt;&lt;code&gt;hasNext&lt;/code&gt;&lt;/a&gt; method is guaranteed to read-ahead by at least one element. If &lt;code&gt;hasNext&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;, and is followed by a call to the &lt;code&gt;next&lt;/code&gt; method, it is guaranteed that the &lt;code&gt;next&lt;/code&gt; method will not throw an exception due to an I/O error, or because the stream has been &lt;a href=&quot;../../io/closeable#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Iterator&lt;/code&gt; does not support the &lt;a href=&quot;../../util/iterator#remove--&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; operation.</source>
          <target state="translated">ディレクトリストリームの &lt;code&gt;Iterator&lt;/code&gt; の重要なプロパティは、その&lt;a href=&quot;../../util/iterator#hasNext--&quot;&gt; &lt;code&gt;hasNext&lt;/code&gt; &lt;/a&gt;メソッドが少なくとも1つの要素によって先読みされることが保証されていることです。 &lt;code&gt;hasNext&lt;/code&gt; メソッドが &lt;code&gt;true&lt;/code&gt; を返し、 &lt;code&gt;next&lt;/code&gt; メソッドの呼び出しが続く場合、I / Oエラーまたはストリームが&lt;a href=&quot;../../io/closeable#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;ているため、 &lt;code&gt;next&lt;/code&gt; メソッドが例外をスローしないことが保証されます。 &lt;code&gt;Iterator&lt;/code&gt; サポートしていません。&lt;a href=&quot;../../util/iterator#remove--&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;操作を。</target>
        </trans-unit>
        <trans-unit id="5f2d5128152fd4379f7fdc6772521870216ccc2b" translate="yes" xml:space="preserve">
          <source>An incoming &lt;code&gt;LogRecord&lt;/code&gt; has a type that is greater than a pre-defined level, the &lt;code&gt;pushLevel&lt;/code&gt;.</source>
          <target state="translated">着信 &lt;code&gt;LogRecord&lt;/code&gt; のタイプは、事前定義されたレベルである &lt;code&gt;pushLevel&lt;/code&gt; より大きいです。</target>
        </trans-unit>
        <trans-unit id="661e7a84e5a7fe4804ae49cc3aa7fd00e80e1b93" translate="yes" xml:space="preserve">
          <source>An independent &lt;code&gt;ImageTranscoder&lt;/code&gt; essentially takes on the same role as the writer plug-in in the above examples. It must be familiar with the private interfaces used by both the reader and writer plug-ins, and manually instantiate an object that will be usable by the writer. The resulting metadata objects may be used by the writer directly.</source>
          <target state="translated">独立した &lt;code&gt;ImageTranscoder&lt;/code&gt; は基本的に、上記の例のライタープラグインと同じ役割を果たします。リーダープラグインとライタープラグインの両方で使用されるプライベートインターフェイスに精通し、ライターが使用できるオブジェクトを手動でインスタンス化する必要があります。結果のメタデータオブジェクトは、ライターが直接使用できます。</target>
        </trans-unit>
        <trans-unit id="05d96f63a136332d81209172b895e9b34f9012dd" translate="yes" xml:space="preserve">
          <source>An independently generated &lt;code&gt;UID&lt;/code&gt; instance is unique over time with respect to the host it is generated on as long as the host requires more than one millisecond to reboot and its system clock is never set backward. A globally unique identifier can be constructed by pairing a &lt;code&gt;UID&lt;/code&gt; instance with a unique host identifier, such as an IP address.</source>
          <target state="translated">独立して生成された &lt;code&gt;UID&lt;/code&gt; インスタンスは、ホストの再起動に1ミリ秒以上必要であり、システムクロックが逆方向に設定されない限り、生成されたホストに関して時間の経過とともに一意になります。グローバル一意識別子は、 &lt;code&gt;UID&lt;/code&gt; インスタンスをIPアドレスなどの一意のホスト識別子とペアにすることで構築できます。</target>
        </trans-unit>
        <trans-unit id="8c180fe4b44c4db4386f2c8f4fb4fbde76583571" translate="yes" xml:space="preserve">
          <source>An indexed property may also provide simple non-indexed read and write methods. If these are present, they read and write arrays of the type returned by the indexed read method.</source>
          <target state="translated">インデックス付きプロパティは、インデックス付きではない単純な読み書きメソッドを提供することもあります。これらが存在する場合、これらはインデックス化された読み込みメソッドによって返される型の配列を読み書きします。</target>
        </trans-unit>
        <trans-unit id="1909650ffded906938461fc87443840f926f9fd9" translate="yes" xml:space="preserve">
          <source>An indication that this element of the information model is no longer recommended for use. A set of MBeans defined by an application is collectively called an &lt;em&gt;information model&lt;/em&gt;. The convention is for the value of this field to contain a string that is the version of the model in which the element was first deprecated, followed by a space, followed by an explanation of the deprecation, for example &lt;code&gt;&quot;1.3 Replaced by the Capacity
 attribute&quot;&lt;/code&gt;.</source>
          <target state="translated">情報モデルのこの要素の使用が推奨されなくなったことを示します。アプリケーションによって定義されたMBeanのセットは、まとめて&lt;em&gt;情報モデル&lt;/em&gt;と呼ばれます。慣例では、このフィールドの値には、要素が最初に非推奨になったモデルのバージョンである文字列が含まれ、その後にスペースが続き、非推奨の説明が続きます。たとえば、 &lt;code&gt;&quot;1.3 Replaced by the Capacity attribute&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="123ee2691b2456ef7899c00acbffd8004ea1bc3a" translate="yes" xml:space="preserve">
          <source>An information message</source>
          <target state="translated">情報メッセージ</target>
        </trans-unit>
        <trans-unit id="84111983447f98a00f462c48c3a8b61889803fe8" translate="yes" xml:space="preserve">
          <source>An informative annotation type used to indicate that an interface type declaration is intended to be a</source>
          <target state="translated">インターフェイス型宣言が</target>
        </trans-unit>
        <trans-unit id="807d79486c916efb57382f35de4f4bd60e687255" translate="yes" xml:space="preserve">
          <source>An infrastructure for painting that includes double buffering and support for borders. For more information see &lt;a href=&quot;http://www.oracle.com/technetwork/java/painting-140037.html#swing&quot;&gt;Painting&lt;/a&gt; and &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/border.html&quot;&gt;How to Use Borders&lt;/a&gt;, both of which are sections in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">ダブルバッファリングとボーダーのサポートを含むペイント用のインフラストラクチャ。詳細については、ご覧&lt;a href=&quot;http://www.oracle.com/technetwork/java/painting-140037.html#swing&quot;&gt;絵画&lt;/a&gt;や&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/border.html&quot;&gt;利用国境にどのよう&lt;/a&gt;にあるセクションですどちらも、&lt;em&gt;Javaチュートリアル&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1dc654963ffe8d960aedcdd054f9d84c6189e372" translate="yes" xml:space="preserve">
          <source>An input method that is enabled for composition interprets incoming events for both composition and control purposes, while a disabled input method does not interpret events for composition. Note however that events are passed on to the input method regardless whether it is enabled or not, and that an input method that is disabled for composition may still interpret events for control purposes, including to enable or disable itself for composition.</source>
          <target state="translated">構成のために有効な入力メソッドは、入力されたイベントを構成と制御の両方の目的のために解釈するが、無効な入力メソッドは、構成のためのイベントを解釈しない。しかし、イベントは、それが有効であるかどうかに関係なく入力メソッドに渡されること、そして、構成のために無効化された入力メソッドは、構成のためにそれ自身を有効化または無効化することを含む、制御目的のためにイベントを解釈することができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4e928c4464b8227ec8c5cb0c2a41ce000766e206" translate="yes" xml:space="preserve">
          <source>An input stream for reading the resource or &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">リソースまたは &lt;code&gt;null&lt;/code&gt; を読み取るための入力ストリーム</target>
        </trans-unit>
        <trans-unit id="89b936e093f962e369dc465cd09398f51ef3fd1f" translate="yes" xml:space="preserve">
          <source>An input stream for reading the resource, or &lt;code&gt;null&lt;/code&gt; if the resource could not be found</source>
          <target state="translated">リソースを読み取るための入力ストリーム、またはリソースが見つからなかった場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8fe4f71a0cdebcdad9e0bd3113ba606830111696" translate="yes" xml:space="preserve">
          <source>An input stream for reading the resource, or null if the resource could not be found</source>
          <target state="translated">リソースを読み込むための入力ストリーム。</target>
        </trans-unit>
        <trans-unit id="a101557b7b9608ea50fb5af7b6be52b362f412f5" translate="yes" xml:space="preserve">
          <source>An input stream for reading the resource; &lt;code&gt;null&lt;/code&gt; if the resource could not be found, the resource is in a package that is not opened unconditionally, or access to the resource is denied by the security manager.</source>
          <target state="translated">リソースを読み取るための入力ストリーム。リソースが見つからなかった場合、リソースが無条件に開かれていないパッケージ内にある場合、またはリソースへのアクセスがセキュリティマネージャによって拒否された場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c63b970bd0ed0ceae17f2ea9684a00b977d2a1c2" translate="yes" xml:space="preserve">
          <source>An input stream that also maintains a checksum of the data being read.</source>
          <target state="translated">読み込まれるデータのチェックサムも保持する入力ストリーム。</target>
        </trans-unit>
        <trans-unit id="b046fe3a3ebcdbc149d1ebd516a7345ecba04d64" translate="yes" xml:space="preserve">
          <source>An input stream that also maintains a checksum of the data being read. The checksum can then be used to verify the integrity of the input data.</source>
          <target state="translated">読み込まれるデータのチェックサムも保持する入力ストリーム。このチェックサムは、入力データの整合性を検証するために使用されます。</target>
        </trans-unit>
        <trans-unit id="93eaf3563f42e0b669553d20572655a49b714900" translate="yes" xml:space="preserve">
          <source>An input stream that contains a stream of values representing an instance of an SQL structured type or an SQL distinct type.</source>
          <target state="translated">SQL 構造化型または SQL 個別型のインスタンスを表す値のストリームを含む入力ストリーム。</target>
        </trans-unit>
        <trans-unit id="6542cd0c8b333f572f834026b67a174491ee31f5" translate="yes" xml:space="preserve">
          <source>An input stream that contains a stream of values representing an instance of an SQL structured type or an SQL distinct type. This interface, used only for custom mapping, is used by the driver behind the scenes, and a programmer never directly invokes &lt;code&gt;SQLInput&lt;/code&gt; methods. The</source>
          <target state="translated">SQL構造化タイプまたはSQL個別タイプのインスタンスを表す値のストリームを含む入力ストリーム。カスタムマッピングにのみ使用されるこのインターフェイスは、バックグラウンドでドライバーによって使用され、プログラマーが &lt;code&gt;SQLInput&lt;/code&gt; メソッドを直接呼び出すことはありません。ザ・</target>
        </trans-unit>
        <trans-unit id="42c78579682dbcae939f075491a7f518a354fc2b" translate="yes" xml:space="preserve">
          <source>An input stream to read the resource or an empty &lt;code&gt;Optional&lt;/code&gt; if not found</source>
          <target state="translated">リソースを読み取るための入力ストリーム、または見つからない場合は空の &lt;code&gt;Optional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f48190790d32ffb7eb6140bf04397841789e7795" translate="yes" xml:space="preserve">
          <source>An input stream used for custom mapping user-defined types (UDTs).</source>
          <target state="translated">ユーザー定義型(UDT)のカスタムマッピングに使用される入力ストリーム。</target>
        </trans-unit>
        <trans-unit id="7a8edba511e7de625652b452ec422ef0524a1330" translate="yes" xml:space="preserve">
          <source>An input stream used for custom mapping user-defined types (UDTs). An &lt;code&gt;SQLInputImpl&lt;/code&gt; object is an input stream that contains a stream of values that are the attributes of a UDT.</source>
          <target state="translated">カスタムマッピングユーザー定義タイプ（UDT）に使用される入力ストリーム。AN &lt;code&gt;SQLInputImpl&lt;/code&gt; 内のオブジェクトは、UDTの属性である値のストリームを含む入力ストリームです。</target>
        </trans-unit>
        <trans-unit id="60c1e14adfebaf1589be1877c42b3efed57e311d" translate="yes" xml:space="preserve">
          <source>An input stream used for custom mapping user-defined types (UDTs). An &lt;code&gt;SQLInputImpl&lt;/code&gt; object is an input stream that contains a stream of values that are the attributes of a UDT. This class is used by the driver behind the scenes when the method &lt;code&gt;getObject&lt;/code&gt; is called on an SQL structured or distinct type that has a custom mapping; a programmer never invokes &lt;code&gt;SQLInputImpl&lt;/code&gt; methods directly.</source>
          <target state="translated">カスタムマッピングユーザー定義タイプ（UDT）に使用される入力ストリーム。AN &lt;code&gt;SQLInputImpl&lt;/code&gt; 内のオブジェクトは、UDTの属性である値のストリームを含む入力ストリームです。このクラスは、カスタムマッピングを持つSQL構造化型または個別型でメソッド &lt;code&gt;getObject&lt;/code&gt; が呼び出されるときに、バックグラウンドでドライバーによって使用されます。プログラマーが &lt;code&gt;SQLInputImpl&lt;/code&gt; メソッドを直接呼び出すことはありません。</target>
        </trans-unit>
        <trans-unit id="cbb5c21484a86a086f164d6835290dafafd6ca84" translate="yes" xml:space="preserve">
          <source>An instance created with this constructor cannot be used in a query.</source>
          <target state="translated">このコンストラクタで作成されたインスタンスは、クエリでは使用できません。</target>
        </trans-unit>
        <trans-unit id="10e0ef8fdd647a154368b89804fb15cd0997512e" translate="yes" xml:space="preserve">
          <source>An instance implementing this interface must conform to</source>
          <target state="translated">このインターフェイスを実装するインスタンスは</target>
        </trans-unit>
        <trans-unit id="33f9efa50517c9254c9fa7703576b4056122b7d8" translate="yes" xml:space="preserve">
          <source>An instance initializer.</source>
          <target state="translated">インスタンスのイニシャライザ。</target>
        </trans-unit>
        <trans-unit id="820192a3f7b4ec34a053de23b328df7b031a1589" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;../../../../java.base/java/util/gregoriancalendar&quot;&gt;&lt;code&gt;GregorianCalendar&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../../java.base/java/util/gregoriancalendar&quot;&gt; &lt;code&gt;GregorianCalendar&lt;/code&gt; &lt;/a&gt;のインスタンス。</target>
        </trans-unit>
        <trans-unit id="d0765d8e5a8989317f357c51d744396e7b88c40c" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;DataFlavor&lt;/code&gt; encapsulates a content type as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt; and &lt;a href=&quot;http://www.ietf.org/rfc/rfc2046.txt&quot;&gt;RFC 2046&lt;/a&gt;. A content type is typically referred to as a MIME type.</source>
          <target state="translated">&lt;code&gt;DataFlavor&lt;/code&gt; のインスタンスは、RFC2045および&lt;a href=&quot;http://www.ietf.org/rfc/rfc2046.txt&quot;&gt;RFC2046で&lt;/a&gt;定義され&lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;て&lt;/a&gt;いるコンテンツタイプをカプセル化します。コンテンツタイプは通常、MIMEタイプと呼ばれます。</target>
        </trans-unit>
        <trans-unit id="19a2366adf07d053397df3b88416af72bf0c1d9e" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;HashMap&lt;/code&gt; has two parameters that affect its performance:</source>
          <target state="translated">&lt;code&gt;HashMap&lt;/code&gt; のインスタンスには、そのパフォーマンスに影響を与える2つのパラメーターがあります。</target>
        </trans-unit>
        <trans-unit id="c9ef1be25739cbfd11c07da46cd5070a585fc279" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;Hashtable&lt;/code&gt; has two parameters that affect its performance:</source>
          <target state="translated">&lt;code&gt;Hashtable&lt;/code&gt; のインスタンスには、そのパフォーマンスに影響を与える2つのパラメーターがあります。</target>
        </trans-unit>
        <trans-unit id="866643f6e9b12b81170b9418630816aff698de6b" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;JTextField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JTextField&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="6e271d20b1969fdb8d1f5d3487af29f542ed5b34" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;LdapName&lt;/code&gt; consisting of the components at indexes in the range [0,posn). If posn is zero, an empty LDAP name is returned.</source>
          <target state="translated">範囲[0、posn）のインデックスのコンポーネントで構成される &lt;code&gt;LdapName&lt;/code&gt; のインスタンス。posnがゼロの場合、空のLDAP名が返されます。</target>
        </trans-unit>
        <trans-unit id="efb5b0e591a40b3a51301a06032e298cfe247108" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;LdapName&lt;/code&gt; consisting of the components at indexes in the range [posn,size()). If posn is equal to size(), an empty LDAP name is returned.</source>
          <target state="translated">[posn、size（））の範囲のインデックスにあるコンポーネントで構成される &lt;code&gt;LdapName&lt;/code&gt; のインスタンス。posnがsize（）と等しい場合、空のLDAP名が返されます。</target>
        </trans-unit>
        <trans-unit id="922ca83f5ecb090d0fb6534bfc5bb215b81d10ae" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;MBeanInfo&lt;/code&gt; allowing all attributes and actions exposed by this Dynamic MBean to be retrieved.</source>
          <target state="translated">この動的MBeanによって公開されるすべての属性とアクションを &lt;code&gt;MBeanInfo&lt;/code&gt; できるMBeanInfoのインスタンス。</target>
        </trans-unit>
        <trans-unit id="f94f9a1e7ef6be69efac27449c54ac8552f8c170" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;MBeanInfo&lt;/code&gt; allowing the retrieval of all attributes and operations of this MBean.</source>
          <target state="translated">このMBeanのすべての属性と操作を取得できる &lt;code&gt;MBeanInfo&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="c358c01703692af8c8f28c76777acb1d74106d65" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;Point&lt;/code&gt; representing the top-left corner of the object's bounds in the coordinate space of the screen; &lt;code&gt;null&lt;/code&gt; if this object or its parent are not on the screen</source>
          <target state="translated">画面の座標空間におけるオブジェクトの境界の左上隅を表す &lt;code&gt;Point&lt;/code&gt; のインスタンス。このオブジェクトまたはその親が画面に表示されていない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="51a9d945754f6a0b885d5b7571460016bbef00a4" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;StringTokenizer&lt;/code&gt; behaves in one of two ways, depending on whether it was created with the &lt;code&gt;returnDelims&lt;/code&gt; flag having the value &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">インスタンス &lt;code&gt;StringTokenizer&lt;/code&gt; はは、それが使用して作成されたかどうかに応じて、次のいずれかの方法で振る舞う &lt;code&gt;returnDelims&lt;/code&gt; の値を有するフラグを &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d992cc6775d487c75f88c627c202ad84aa69c64" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;ThreadDeath&lt;/code&gt; is thrown in the victim thread when the (deprecated) &lt;a href=&quot;thread#stop()&quot;&gt;&lt;code&gt;Thread.stop()&lt;/code&gt;&lt;/a&gt; method is invoked.</source>
          <target state="translated">（非推奨の）&lt;a href=&quot;thread#stop()&quot;&gt; &lt;code&gt;Thread.stop()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されると、 &lt;code&gt;ThreadDeath&lt;/code&gt; のインスタンスが犠牲スレッドにスローされます。</target>
        </trans-unit>
        <trans-unit id="4e5841bfa5594bb54259f2a2f9bb9a7e4a3e8d76" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;ThreadDeath&lt;/code&gt; is thrown in the victim thread when the (deprecated) &lt;a href=&quot;thread#stop--&quot;&gt;&lt;code&gt;Thread.stop()&lt;/code&gt;&lt;/a&gt; method is invoked.</source>
          <target state="translated">&lt;code&gt;ThreadDeath&lt;/code&gt; のインスタンスは、（非推奨の）&lt;a href=&quot;thread#stop--&quot;&gt; &lt;code&gt;Thread.stop()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されると、犠牲スレッドにスローされます。</target>
        </trans-unit>
        <trans-unit id="f3ba992956d51c64959ad0f9e1116a3e4d9fe2ec" translate="yes" xml:space="preserve">
          <source>An instance of &lt;em&gt;J&lt;/em&gt; is reconstructed by calling a constructor with the appropriate reconstructed items from the &lt;code&gt;CompositeData&lt;/code&gt;. The constructor to be called will be determined at runtime based on the items actually present in the &lt;code&gt;CompositeData&lt;/code&gt;, given that this &lt;code&gt;
        CompositeData&lt;/code&gt; might come from an earlier version of &lt;em&gt;J&lt;/em&gt; where not all the items were present. A constructor is &lt;em&gt;applicable&lt;/em&gt; if all the properties named in its &lt;code&gt;@ConstructorParameters&lt;/code&gt; or &lt;code&gt;@ConstructorProperties&lt;/code&gt; annotation are present as items in the &lt;code&gt;CompositeData&lt;/code&gt;. If no constructor is applicable, then the attempt to reconstruct &lt;em&gt;J&lt;/em&gt; fails.</source>
          <target state="translated">&lt;em&gt;J&lt;/em&gt;のインスタンスは、 &lt;code&gt;CompositeData&lt;/code&gt; から適切に再構築されたアイテムを使用してコンストラクターを呼び出すことによって再構築されます。呼び出されるコンストラクターは、 &lt;code&gt;CompositeData&lt;/code&gt; に実際に存在するアイテムに基づいて実行時に決定されます。これは、この &lt;code&gt; CompositeData&lt;/code&gt; が、すべてのアイテムが存在するわけではない以前のバージョンの&lt;em&gt;J&lt;/em&gt;からのものである可能性があるためです。コンストラクターは、 &lt;code&gt;@ConstructorParameters&lt;/code&gt; または &lt;code&gt;@ConstructorProperties&lt;/code&gt; アノテーションで指定されたすべてのプロパティが &lt;code&gt;CompositeData&lt;/code&gt; の項目として存在&lt;em&gt;する&lt;/em&gt;場合に&lt;em&gt;適用でき&lt;/em&gt;ます。適用可能なコンストラクターがない場合、&lt;em&gt;J&lt;/em&gt;を再構築しようとします&lt;em&gt;&lt;/em&gt; 失敗します。</target>
        </trans-unit>
        <trans-unit id="47ac091b99d498a0cb4fc92e75e5628fa385361d" translate="yes" xml:space="preserve">
          <source>An instance of &lt;em&gt;J&lt;/em&gt; is reconstructed by calling a constructor with the appropriate reconstructed items from the &lt;code&gt;CompositeData&lt;/code&gt;. The constructor to be called will be determined at runtime based on the items actually present in the &lt;code&gt;CompositeData&lt;/code&gt;, given that this &lt;code&gt;CompositeData&lt;/code&gt; might come from an earlier version of &lt;em&gt;J&lt;/em&gt; where not all the items were present. A constructor is &lt;em&gt;applicable&lt;/em&gt; if all the properties named in its &lt;code&gt;ConstructorProperties&lt;/code&gt; annotation are present as items in the &lt;code&gt;CompositeData&lt;/code&gt;. If no constructor is applicable, then the attempt to reconstruct &lt;em&gt;J&lt;/em&gt; fails.</source>
          <target state="translated">&lt;em&gt;J&lt;/em&gt;のインスタンスは、 &lt;code&gt;CompositeData&lt;/code&gt; から適切に再構築されたアイテムを使用してコンストラクターを呼び出すことによって再構築されます。呼び出されるコンストラクターは、この &lt;code&gt;CompositeData&lt;/code&gt; がすべての項目が存在しなかった以前のバージョンの&lt;em&gt;J&lt;/em&gt;からのものである場合、実行時に &lt;code&gt;CompositeData&lt;/code&gt; に実際に存在する項目に基づいて決定されます。コンストラクターは、その &lt;code&gt;ConstructorProperties&lt;/code&gt; アノテーションで指定されたすべてのプロパティが &lt;code&gt;CompositeData&lt;/code&gt; のアイテムとして存在&lt;em&gt;する&lt;/em&gt;場合に&lt;em&gt;適用さ&lt;/em&gt;れます。適用できるコンストラクタがない場合、&lt;em&gt;Jの&lt;/em&gt;再構築は失敗します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="829ed3db20241841f89453dc963921956452ce30" translate="yes" xml:space="preserve">
          <source>An instance of ModelMBeanInfo allowing retrieval all attributes, operations, and Notifications of this MBean.</source>
          <target state="translated">このMBeanのすべての属性、操作、通知を取得できるModelMBeanInfoのインスタンス。</target>
        </trans-unit>
        <trans-unit id="bc38c3c6d9d64be8b06e7c601d02aef42e02a890" translate="yes" xml:space="preserve">
          <source>An instance of Point representing the top-left corner of the object's bounds in the coordinate space of the screen; null if this object or its parent are not on the screen</source>
          <target state="translated">画面の座標空間におけるオブジ ェ ク ト の境界の左上隅を表す Point のインスタンス。</target>
        </trans-unit>
        <trans-unit id="ab3d2c174495ec561e6dabbe574b8bbe2b8f2270" translate="yes" xml:space="preserve">
          <source>An instance of a &lt;code&gt;Name&lt;/code&gt; may not be synchronized against concurrent multithreaded access if that access is not read-only.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; のインスタンスは、そのアクセスが読み取り専用でない場合、同時マルチスレッドアクセスに対して同期されない場合があります。</target>
        </trans-unit>
        <trans-unit id="dfba31fab178a2825633d83dd9c4b41758948065" translate="yes" xml:space="preserve">
          <source>An instance of a subclass of &lt;code&gt;CompiledScript&lt;/code&gt; to be executed later using one of its &lt;code&gt;eval&lt;/code&gt; methods of &lt;code&gt;CompiledScript&lt;/code&gt;.</source>
          <target state="translated">サブクラスのインスタンス &lt;code&gt;CompiledScript&lt;/code&gt; 後ののいずれかを使用して実行される &lt;code&gt;eval&lt;/code&gt; 方法 &lt;code&gt;CompiledScript&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="e32bd5f78d7ce6e5bd2dde8ae781793f9a5cfe68" translate="yes" xml:space="preserve">
          <source>An instance of a subclass of &lt;code&gt;CompiledScript&lt;/code&gt; to be executed later using one of the &lt;code&gt;eval&lt;/code&gt; methods of &lt;code&gt;CompiledScript&lt;/code&gt;.</source>
          <target state="translated">サブクラスのインスタンス &lt;code&gt;CompiledScript&lt;/code&gt; は、後のいずれかを使用して実行される &lt;code&gt;eval&lt;/code&gt; 方法 &lt;code&gt;CompiledScript&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12670c655454d6cc906c7e42fdf38c2307aa12de" translate="yes" xml:space="preserve">
          <source>An instance of requested interface - null if the requested interface is unavailable, i. e. if compiled functions in the &lt;code&gt;ScriptEngine&lt;/code&gt; cannot be found matching the ones in the requested interface.</source>
          <target state="translated">要求されたインターフェイスのインスタンス-要求されたインターフェイスが利用できない場合、つまり、 &lt;code&gt;ScriptEngine&lt;/code&gt; のコンパイルされた関数が、要求されたインターフェイスの関数と一致しない場合はnull 。</target>
        </trans-unit>
        <trans-unit id="36803e60de529456b8ea1571671498d8c810d8d5" translate="yes" xml:space="preserve">
          <source>An instance of requested interface - null if the requested interface is unavailable, i. e. if compiled methods in the &lt;code&gt;ScriptEngine&lt;/code&gt; cannot be found matching the ones in the requested interface.</source>
          <target state="translated">要求されたインターフェイスのインスタンス-要求されたインターフェイスが利用できない場合、つまり、 &lt;code&gt;ScriptEngine&lt;/code&gt; のコンパイルされたメソッドが要求されたインターフェイスのメソッドと一致しない場合はnull 。</target>
        </trans-unit>
        <trans-unit id="8e86ce0b7fec5deeecf8ca3a5100e75b8b0fb6c4" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;a href=&quot;pattern&quot;&gt;&lt;code&gt;Pattern&lt;/code&gt;&lt;/a&gt; class represents a regular expression that is specified in string form in a syntax similar to that used by Perl.</source>
          <target state="translated">&lt;a href=&quot;pattern&quot;&gt; &lt;code&gt;Pattern&lt;/code&gt; &lt;/a&gt;クラスのインスタンスは、Perlで使用されるのと同様の構文で文字列形式で指定された正規表現を表します。</target>
        </trans-unit>
        <trans-unit id="829975f1f8d6e054d19ccd326eb7be36519c42b0" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;a href=&quot;url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; class, by contrast, represents the syntactic components of a URL together with some of the information required to access the resource that it describes. A URL must be absolute, that is, it must always specify a scheme. A URL string is parsed according to its scheme. A stream handler is always established for a URL, and in fact it is impossible to create a URL instance for a scheme for which no handler is available. Equality and hashing depend upon both the scheme and the Internet address of the host, if any; comparison is not defined. In other words, a URL is a structured string that supports the syntactic operation of resolution as well as the network I/O operations of looking up the host and opening a connection to the specified resource.</source>
          <target state="translated">対照的に、&lt;a href=&quot;url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;クラスのインスタンスは、URLの構文コンポーネントと、それが記述するリソースにアクセスするために必要な情報の一部を表します。 URLは絶対でなければなりません。つまり、常にスキームを指定する必要があります。 URL文字列は、そのスキームに従って解析されます。ストリームハンドラーは常にURLに対して確立されます。実際、ハンドラーが利用できないスキームに対してURLインスタンスを作成することは不可能です。等価性とハッシュは、スキームとホストのインターネットアドレス（存在する場合）の両方に依存します。比較は定義されていません。つまり、URLは、解決の構文操作と、ホストを検索して指定されたリソースへの接続を開くネットワークI / O操作をサポートする構造化された文字列です。</target>
        </trans-unit>
        <trans-unit id="8d8b348576ef3a363f54463b191b10c2fe34cbf3" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;AudioFileFormat&lt;/code&gt; class describes an audio file, including the file type, the file's length in bytes, the length in sample frames of the audio data contained in the file, and the format of the audio data.</source>
          <target state="translated">&lt;code&gt;AudioFileFormat&lt;/code&gt; クラスのインスタンスは、ファイルタイプ、ファイルの長さ（バイト単位）、ファイルに含まれるオーディオデータのサンプルフレームの長さ、オーディオデータの形式など、オーディオファイルを記述します。</target>
        </trans-unit>
        <trans-unit id="a25922f31e1f2c2c824dd4d7100eaf591f63a2e4" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;BooleanControl.Type&lt;/code&gt; class identifies one kind of boolean control.</source>
          <target state="translated">&lt;code&gt;BooleanControl.Type&lt;/code&gt; クラスのインスタンスは、1種類のブールコントロールを識別します。</target>
        </trans-unit>
        <trans-unit id="dcb763debf3b5ee573b97b18af18a45a2f427519" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;BooleanControl.Type&lt;/code&gt; class identifies one kind of boolean control. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;BooleanControl.Type&lt;/code&gt; クラスのインスタンスは、1種類のブールコントロールを識別します。一般的なタイプには静的インスタンスが用意されています。</target>
        </trans-unit>
        <trans-unit id="340f53d7be605024230df931e122f021460e07bd" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;CompoundControl.Type&lt;/code&gt; inner class identifies one kind of compound control.</source>
          <target state="translated">&lt;code&gt;CompoundControl.Type&lt;/code&gt; 内部クラスのインスタンスは、1種類の複合コントロールを識別します。</target>
        </trans-unit>
        <trans-unit id="9037c8dcbd6d04c236d0a37b55011fae1af01ae8" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;CompoundControl.Type&lt;/code&gt; inner class identifies one kind of compound control. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;CompoundControl.Type&lt;/code&gt; 内部クラスのインスタンスは、1種類の複合コントロールを識別します。一般的なタイプには静的インスタンスが用意されています。</target>
        </trans-unit>
        <trans-unit id="c8fc9b324b216b7afb95cfe339c3befeb519150d" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;EnumControl.Type&lt;/code&gt; inner class identifies one kind of enumerated control.</source>
          <target state="translated">&lt;code&gt;EnumControl.Type&lt;/code&gt; 内部クラスのインスタンスは、列挙されたコントロールの1種類を識別します。</target>
        </trans-unit>
        <trans-unit id="75545e40aa5c53d8773e5c01cd0e585b5868df57" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;EnumControl.Type&lt;/code&gt; inner class identifies one kind of enumerated control. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;EnumControl.Type&lt;/code&gt; 内部クラスのインスタンスは、列挙されたコントロールの1種類を識別します。一般的なタイプには静的インスタンスが用意されています。</target>
        </trans-unit>
        <trans-unit id="0e3cd6bc4a528475f8bbff9c32494251819c2131" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;FloatControl.Type&lt;/code&gt; inner class identifies one kind of float control.</source>
          <target state="translated">&lt;code&gt;FloatControl.Type&lt;/code&gt; 内部クラスのインスタンスは、1種類のフロートコントロールを識別します。</target>
        </trans-unit>
        <trans-unit id="c705d7a2e420aa5361515c55beee571e48109dc2" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;FloatControl.Type&lt;/code&gt; inner class identifies one kind of float control. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;FloatControl.Type&lt;/code&gt; 内部クラスのインスタンスは、1種類のフロートコントロールを識別します。一般的なタイプには静的インスタンスが用意されています。</target>
        </trans-unit>
        <trans-unit id="b645efcd3edbd0569af6f31d52a839f29c578839" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Spring&lt;/code&gt; class can be visualized as a mechanical spring that provides a corrective force as the spring is compressed or stretched away from its preferred value. This force is modelled as linear function of the distance from the preferred value, but with two different constants -- one for the compressional force and one for the tensional one. Those constants are specified by the minimum and maximum values of the spring such that a spring at its minimum value produces an equal and opposite force to that which is created when it is at its maximum value. The difference between the &lt;em&gt;preferred&lt;/em&gt; and &lt;em&gt;minimum&lt;/em&gt; values, therefore, represents the ease with which the spring can be compressed and the difference between its &lt;em&gt;maximum&lt;/em&gt; and &lt;em&gt;preferred&lt;/em&gt; values, indicates the ease with which the &lt;code&gt;Spring&lt;/code&gt; can be extended. See the &lt;a href=&quot;#sum(javax.swing.Spring,javax.swing.Spring)&quot;&gt;&lt;code&gt;sum(javax.swing.Spring, javax.swing.Spring)&lt;/code&gt;&lt;/a&gt; method for details.</source>
          <target state="translated">&lt;code&gt;Spring&lt;/code&gt; クラスのインスタンスは、ばねがその好ましい値から圧縮または引き伸ばされたときに修正力を提供する機械ばねとして視覚化できます。この力は、優先値からの距離の線形関数としてモデル化されますが、2つの異なる定数があります。1つは圧縮力用、もう1つは引張力用です。これらの定数は、ばねの最小値と最大値によって指定され、最小値のばねは、最大値のときに生成される力と等しく反対の力を生成します。差&lt;em&gt;好ましい&lt;/em&gt;と&lt;em&gt;最小&lt;/em&gt;値は、従って、バネが圧縮されることができる容易さとの間の差を表し&lt;em&gt;、最大&lt;/em&gt;および&lt;em&gt;好ましい&lt;/em&gt;値は、容易さを示している &lt;code&gt;Spring&lt;/code&gt; 拡張することができます。詳細については、&lt;a href=&quot;#sum(javax.swing.Spring,javax.swing.Spring)&quot;&gt; &lt;code&gt;sum(javax.swing.Spring, javax.swing.Spring)&lt;/code&gt; &lt;/a&gt;メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="cf0e2f078d65756e4ad0fe742cb9df763cda5aa0" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Spring&lt;/code&gt; class holds three properties that characterize its behavior: the &lt;em&gt;minimum&lt;/em&gt;, &lt;em&gt;preferred&lt;/em&gt;, and &lt;em&gt;maximum&lt;/em&gt; values.</source>
          <target state="translated">&lt;code&gt;Spring&lt;/code&gt; クラスのインスタンスは、その動作を特徴付ける3つのプロパティ、&lt;em&gt;最小値&lt;/em&gt;、&lt;em&gt;優先&lt;/em&gt;値、および&lt;em&gt;最大&lt;/em&gt;値を保持します。</target>
        </trans-unit>
        <trans-unit id="c0b77e462a7219e85256ea71ea9f4f3cdf82cfe3" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Spring&lt;/code&gt; class holds three properties that characterize its behavior: the &lt;em&gt;minimum&lt;/em&gt;, &lt;em&gt;preferred&lt;/em&gt;, and &lt;em&gt;maximum&lt;/em&gt; values. Each of these properties may be involved in defining its fourth, &lt;em&gt;value&lt;/em&gt;, property based on a series of rules.</source>
          <target state="translated">&lt;code&gt;Spring&lt;/code&gt; クラスのインスタンスは、その動作を特徴付ける3つのプロパティ、&lt;em&gt;最小値&lt;/em&gt;、&lt;em&gt;優先&lt;/em&gt;値、および&lt;em&gt;最大&lt;/em&gt;値を保持します。これらの各プロパティは、一連のルールに基づいて4番目の&lt;em&gt;値の&lt;/em&gt;プロパティを定義することに関与する場合があります。</target>
        </trans-unit>
        <trans-unit id="ecd45e4b9d53ccaa53d9a3356b79820e8be583f1" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Type&lt;/code&gt; class represents one of the standard types of audio file.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; クラスのインスタンスは、オーディオファイルの標準タイプの1つを表します。</target>
        </trans-unit>
        <trans-unit id="d4ea4b1285ed5bd1ba43f4bd5f18b0d928041f68" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Type&lt;/code&gt; class represents one of the standard types of audio file. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; クラスのインスタンスは、オーディオファイルの標準タイプの1つを表します。一般的なタイプには静的インスタンスが用意されています。</target>
        </trans-unit>
        <trans-unit id="327b4d9c3db6a3abd8fb05e940d637f8eb455eb3" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Type&lt;/code&gt; class represents the type of the control.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; クラスのインスタンスは、コントロールのタイプを表します。</target>
        </trans-unit>
        <trans-unit id="07eccc9b35085aee1266610ec826ac1783b928ca" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;Type&lt;/code&gt; class represents the type of the control. Static instances are provided for the common types.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; クラスのインスタンスは、コントロールのタイプを表します。一般的なタイプには静的インスタンスが用意されています。</target>
        </trans-unit>
        <trans-unit id="76407322c9056796745859de5a160d5232c84e27" translate="yes" xml:space="preserve">
          <source>An instance of the default &lt;code&gt;GSSManager&lt;/code&gt; subclass may be obtained through the static method &lt;a href=&quot;#getInstance()&quot;&gt;&lt;code&gt;getInstance&lt;/code&gt;&lt;/a&gt;, but applications are free to instantiate other subclasses of &lt;code&gt;GSSManager&lt;/code&gt;. The default &lt;code&gt;GSSManager&lt;/code&gt; instance will support the Kerberos v5 GSS-API mechanism in addition to any others. This mechanism is identified by the Oid &quot;1.2.840.113554.1.2.2&quot; and is defined in RFC 1964.</source>
          <target state="translated">デフォルトの &lt;code&gt;GSSManager&lt;/code&gt; サブクラスのインスタンスは、静的メソッド&lt;a href=&quot;#getInstance()&quot;&gt; &lt;code&gt;getInstance&lt;/code&gt; &lt;/a&gt;を介して取得できますが、アプリケーションは &lt;code&gt;GSSManager&lt;/code&gt; の他のサブクラスを自由にインスタンス化できます。デフォルトの &lt;code&gt;GSSManager&lt;/code&gt; インスタンスは、他のインスタンスに加えて、Kerberos v5GSS-APIメカニズムをサポートします。このメカニズムは、Oid「1.2.840.113554.1.2.2」によって識別され、RFC1964で定義されています。</target>
        </trans-unit>
        <trans-unit id="27a8f1587bb50acf28271aa7e6c6bc94f4b86110" translate="yes" xml:space="preserve">
          <source>An instance of the provider.</source>
          <target state="translated">プロバイダのインスタンス。</target>
        </trans-unit>
        <trans-unit id="8a97d89ec1fc3b81eb0cc9cdbede3340e2501c30" translate="yes" xml:space="preserve">
          <source>An instance of this abstract class can transform a source tree into a result tree.</source>
          <target state="translated">この抽象クラスのインスタンスは、ソース・ツリーを結果ツリーに変換することができます。</target>
        </trans-unit>
        <trans-unit id="35318f12a2c91905211720e824ceedda9d471749" translate="yes" xml:space="preserve">
          <source>An instance of this class can be obtained from the &lt;a href=&quot;documentbuilderfactory#newDocumentBuilder()&quot;&gt;&lt;code&gt;DocumentBuilderFactory.newDocumentBuilder()&lt;/code&gt;&lt;/a&gt; method. Once an instance of this class is obtained, XML can be parsed from a variety of input sources. These input sources are InputStreams, Files, URLs, and SAX InputSources.</source>
          <target state="translated">このクラスのインスタンスは、&lt;a href=&quot;documentbuilderfactory#newDocumentBuilder()&quot;&gt; &lt;code&gt;DocumentBuilderFactory.newDocumentBuilder()&lt;/code&gt; &lt;/a&gt;メソッドから取得できます。このクラスのインスタンスが取得されると、さまざまな入力ソースからXMLを解析できます。これらの入力ソースは、InputStreams、ファイル、URL、およびSAXInputSourcesです。</target>
        </trans-unit>
        <trans-unit id="9d5703479805c709016e06e99400ab70a2c4d220" translate="yes" xml:space="preserve">
          <source>An instance of this class can be obtained with the &lt;a href=&quot;transformerfactory#newTransformer(javax.xml.transform.Source)&quot;&gt;&lt;code&gt;TransformerFactory.newTransformer&lt;/code&gt;&lt;/a&gt; method. This instance may then be used to process XML from a variety of sources and write the transformation output to a variety of sinks.</source>
          <target state="translated">このクラスのインスタンスは、&lt;a href=&quot;transformerfactory#newTransformer(javax.xml.transform.Source)&quot;&gt; &lt;code&gt;TransformerFactory.newTransformer&lt;/code&gt; &lt;/a&gt;メソッドを使用して取得できます。次に、このインスタンスを使用して、さまざまなソースからのXMLを処理し、変換出力をさまざまなシンクに書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="d76dd5b485ada222054050140b9c0c8104672a0d" translate="yes" xml:space="preserve">
          <source>An instance of this class can be used to represent:</source>
          <target state="translated">このクラスのインスタンスを使って表現することができます。</target>
        </trans-unit>
        <trans-unit id="e6a287f367374571f30b8d21224d3a0f4449049f" translate="yes" xml:space="preserve">
          <source>An instance of this class encapsulates the information needed to instantiate and initialize a KeyStore object. That process is triggered when the &lt;a href=&quot;#getKeyStore()&quot;&gt;getKeyStore()&lt;/a&gt; method is called.</source>
          <target state="translated">このクラスのインスタンスは、KeyStoreオブジェクトをインスタンス化および初期化するために必要な情報をカプセル化します。このプロセスは、&lt;a href=&quot;#getKeyStore()&quot;&gt;getKeyStore（）&lt;/a&gt;メソッドが呼び出されたときにトリガーされます。</target>
        </trans-unit>
        <trans-unit id="2724595f32e58a6ac42e1786a7aa387f2ad61c6f" translate="yes" xml:space="preserve">
          <source>An instance of this class encapsulates the information needed to instantiate and initialize a KeyStore object. That process is triggered when the &lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt;getKeyStore()&lt;/a&gt; method is called.</source>
          <target state="translated">このクラスのインスタンスは、KeyStoreオブジェクトをインスタンス化して初期化するために必要な情報をカプセル化します。このプロセスは、&lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt;getKeyStore（）&lt;/a&gt;メソッドが呼び出されるとトリガーされます。</target>
        </trans-unit>
        <trans-unit id="50891e22fd7aa51c5f4769671e63e52a7d2f3335" translate="yes" xml:space="preserve">
          <source>An instance of this class is capable of scanning numbers in the standard formats as well as in the formats of the scanner's locale. A scanner's &lt;a id=&quot;initial-locale&quot;&gt;initial locale &lt;/a&gt;is the value returned by the &lt;a href=&quot;locale#getDefault(java.util.Locale.Category)&quot;&gt;&lt;code&gt;Locale.getDefault(Locale.Category.FORMAT)&lt;/code&gt;&lt;/a&gt; method; it may be changed via the &lt;a href=&quot;#useLocale(java.util.Locale)&quot;&gt;&lt;code&gt;useLocale()&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's locale to the initial locale regardless of whether it was previously changed.</source>
          <target state="translated">このクラスのインスタンスは、標準形式とスキャナーのロケールの形式で数値をスキャンできます。スキャナーの&lt;a id=&quot;initial-locale&quot;&gt;初期ロケール&lt;/a&gt;は、&lt;a href=&quot;locale#getDefault(java.util.Locale.Category)&quot;&gt; &lt;code&gt;Locale.getDefault(Locale.Category.FORMAT)&lt;/code&gt; &lt;/a&gt;メソッドによって返される値です。&lt;a href=&quot;#useLocale(java.util.Locale)&quot;&gt; &lt;code&gt;useLocale()&lt;/code&gt; &lt;/a&gt;メソッドを介して変更できます。&lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;メソッドに関係なく、それが以前に変更されたかどうかの最初のロケールにスキャナのロケールの値をリセットします。</target>
        </trans-unit>
        <trans-unit id="1317216bbeb3dff374e60ed4cee85c92ce39d700" translate="yes" xml:space="preserve">
          <source>An instance of this class is capable of scanning numbers in the standard formats as well as in the formats of the scanner's locale. A scanner's &lt;a name=&quot;initial-locale&quot;&gt;initial locale &lt;/a&gt;is the value returned by the &lt;a href=&quot;locale#getDefault-java.util.Locale.Category-&quot;&gt;&lt;code&gt;Locale.getDefault(Locale.Category.FORMAT)&lt;/code&gt;&lt;/a&gt; method; it may be changed via the &lt;a href=&quot;scanner#useLocale-java.util.Locale-&quot;&gt;&lt;code&gt;useLocale(java.util.Locale)&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;scanner#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's locale to the initial locale regardless of whether it was previously changed.</source>
          <target state="translated">このクラスのインスタンスは、標準形式およびスキャナーのロケールの形式で数値をスキャンできます。スキャナーの&lt;a name=&quot;initial-locale&quot;&gt;初期ロケール&lt;/a&gt;は、&lt;a href=&quot;locale#getDefault-java.util.Locale.Category-&quot;&gt; &lt;code&gt;Locale.getDefault(Locale.Category.FORMAT)&lt;/code&gt; &lt;/a&gt;メソッドによって返される値です。&lt;a href=&quot;scanner#useLocale-java.util.Locale-&quot;&gt; &lt;code&gt;useLocale(java.util.Locale)&lt;/code&gt; &lt;/a&gt;メソッドを使用して変更できます。&lt;a href=&quot;scanner#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;メソッドに関係なく、それが以前に変更されたかどうかの最初のロケールにスキャナのロケールの値をリセットします。</target>
        </trans-unit>
        <trans-unit id="4ae8f72aaf1e5f6296834affcdbb30c205b9e0b4" translate="yes" xml:space="preserve">
          <source>An instance of this class is used to generate a stream of pseudorandom numbers.</source>
          <target state="translated">このクラスのインスタンスは、疑似乱数のストリームを生成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="d39558516c859afad90cc4d1dc1323cc6b3d6721" translate="yes" xml:space="preserve">
          <source>An instance of this class is used to generate a stream of pseudorandom numbers. The class uses a 48-bit seed, which is modified using a linear congruential formula. (See Donald Knuth,</source>
          <target state="translated">このクラスのインスタンスは、疑似乱数のストリームを生成するために使用されます。このクラスは48ビットのシードを使用しますが、これは線形整合式を用いて修正されます。Donald Knuthを参照のこと。</target>
        </trans-unit>
        <trans-unit id="28f83ccf2a715e519fc03e240f1b5b775b12be7c" translate="yes" xml:space="preserve">
          <source>An instance of this class represents a URI reference in the syntactic sense defined by RFC 2396. A URI may be either absolute or relative. A URI string is parsed according to the generic syntax without regard to the scheme, if any, that it specifies. No lookup of the host, if any, is performed, and no scheme-dependent stream handler is constructed. Equality, hashing, and comparison are defined strictly in terms of the character content of the instance. In other words, a URI instance is little more than a structured string that supports the syntactic, scheme-independent operations of comparison, normalization, resolution, and relativization.</source>
          <target state="translated">このクラスのインスタンスは、RFC2396で定義されている構文的な意味でのURI参照を表す。URIは絶対値または相対値のいずれかである。URI文字列は、それが指定するスキーム(もしあれば)に関係なく、一般的な構文に従って解析される。ホストの検索(もしあれば)は実行されず、スキームに依存するストリーム ハンドラも構築されない。等価、ハッシュ、および比較は、インスタンスの文字内容の観点から厳密に定義される。言い換えれば、URIインスタンスは、構文的に、比較、正規化、解決、相対化のスキー ムに依存しない操作をサポートする構造化された文字列にすぎない。</target>
        </trans-unit>
        <trans-unit id="a0dce4c53441c449127a7c6fbd50fdf0237d5be0" translate="yes" xml:space="preserve">
          <source>An instance of this concrete sub-class is then registered with the system by calling &lt;a href=&quot;#setDefault(java.net.Authenticator)&quot;&gt;&lt;code&gt;setDefault(Authenticator)&lt;/code&gt;&lt;/a&gt;. When authentication is required, the system will invoke one of the requestPasswordAuthentication() methods which in turn will call the getPasswordAuthentication() method of the registered object.</source>
          <target state="translated">次に、この具象サブクラスのインスタンスは、&lt;a href=&quot;#setDefault(java.net.Authenticator)&quot;&gt; &lt;code&gt;setDefault(Authenticator)&lt;/code&gt; を&lt;/a&gt;呼び出すことによってシステムに登録されます。認証が必要な場合、システムはrequestPasswordAuthentication（）メソッドの1つを呼び出し、次に、登録されたオブジェクトのgetPasswordAuthentication（）メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="7db157449a4bd8c71ffcdbcd29cbdf95c91b7f80" translate="yes" xml:space="preserve">
          <source>An instance of this concrete sub-class is then registered with the system by calling &lt;a href=&quot;authenticator#setDefault-java.net.Authenticator-&quot;&gt;&lt;code&gt;setDefault(Authenticator)&lt;/code&gt;&lt;/a&gt;. When authentication is required, the system will invoke one of the requestPasswordAuthentication() methods which in turn will call the getPasswordAuthentication() method of the registered object.</source>
          <target state="translated">次に、この具象サブクラスのインスタンスは、&lt;a href=&quot;authenticator#setDefault-java.net.Authenticator-&quot;&gt; &lt;code&gt;setDefault(Authenticator)&lt;/code&gt; を&lt;/a&gt;呼び出してシステムに登録されます。認証が必要な場合、システムはrequestPasswordAuthentication（）メソッドの1つを呼び出し、次にそれが登録されたオブジェクトのgetPasswordAuthentication（）メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="c982a64b6639cd335370d5f6441f493f10b35c3b" translate="yes" xml:space="preserve">
          <source>An instance of this interface represents the unit itself, rather than an amount of the unit. See &lt;a href=&quot;../period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; for a class that represents an amount in terms of the common units.</source>
          <target state="translated">このインターフェースのインスタンスは、ユニットの量ではなく、ユニット自体を表します。共通単位で金額を表すクラスについては、&lt;a href=&quot;../period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d94759c354f168b793821326256dda20d0d04793" translate="yes" xml:space="preserve">
          <source>An instantaneous point on the time-line.</source>
          <target state="translated">時間軸上の瞬間的な点。</target>
        </trans-unit>
        <trans-unit id="7158fc9acc202c4cf5095b847cad9b1065934a82" translate="yes" xml:space="preserve">
          <source>An instrument is a sound-synthesis algorithm with certain parameter settings, usually designed to emulate a specific real-world musical instrument or to achieve a specific sort of sound effect.</source>
          <target state="translated">インストゥルメントとは、特定のパラメータ設定を持つサウンドシンセシスアルゴリズムのことで、通常は特定の現実世界の楽器をエミュレートしたり、特定の種類のサウンドエフェクトを実現するように設計されています。</target>
        </trans-unit>
        <trans-unit id="97992030c3ea768748c4bdeea51f69ffae9a4afb" translate="yes" xml:space="preserve">
          <source>An instrument is a sound-synthesis algorithm with certain parameter settings, usually designed to emulate a specific real-world musical instrument or to achieve a specific sort of sound effect. Instruments are typically stored in collections called soundbanks. Before the instrument can be used to play notes, it must first be loaded onto a synthesizer, and then it must be selected for use on one or more channels, via a program-change command. MIDI notes that are subsequently received on those channels will be played using the sound of the selected instrument.</source>
          <target state="translated">インストゥルメントとは、特定のパラメータを設定したサウンドシンセシスアルゴリズムのことで、通常は実在する特定の楽器をエミュレートしたり、特定の種類のサウンドエフェクトを実現したりするように設計されています。インストゥルメントは通常、サウンドバンクと呼ばれるコレクションに保存されます。インストゥルメントを使用してノートを演奏するには、まずシンセサイザーにロードしてから、プログラムチェンジコマンドを使って1つまたは複数のチャンネルで使用するように選択する必要があります。その後、これらのチャンネルで受信されたMIDIノートは、選択されたインストゥルメントのサウンドを使って演奏されます。</target>
        </trans-unit>
        <trans-unit id="56ea8c144840715d69a960aeb55ec5417f7c23c9" translate="yes" xml:space="preserve">
          <source>An int buffer.</source>
          <target state="translated">int バッファ。</target>
        </trans-unit>
        <trans-unit id="adecc75be41392880cba1ab1c43f1140e74a9554" translate="yes" xml:space="preserve">
          <source>An int representing the hash code of this Rdn.</source>
          <target state="translated">この Rdn のハッシュコードを表す int。</target>
        </trans-unit>
        <trans-unit id="f46c446cab1141d9642aaa8704b1fb79b9b9cd49" translate="yes" xml:space="preserve">
          <source>An int representing the hash code of this name.</source>
          <target state="translated">この名前のハッシュコードを表すint。</target>
        </trans-unit>
        <trans-unit id="0f02c72f761f7b569b3ba5ae42abbad4a0d5abe1" translate="yes" xml:space="preserve">
          <source>An integer hashcode</source>
          <target state="translated">整数のハッシュコード</target>
        </trans-unit>
        <trans-unit id="1b040fcbf539cbe7573564cb6c7757f2d140a9d8" translate="yes" xml:space="preserve">
          <source>An integer representing the column number, or -1 if none is available.</source>
          <target state="translated">列番号を表す整数。</target>
        </trans-unit>
        <trans-unit id="de218f232456536bc8a170ff5f6b8acf15dbb204" translate="yes" xml:space="preserve">
          <source>An integer representing the line number, or -1 if none is available.</source>
          <target state="translated">行番号を表す整数。</target>
        </trans-unit>
        <trans-unit id="182c9c1145c16fa13c04d28f5d57abb85e3d50e9" translate="yes" xml:space="preserve">
          <source>An integer specifying the number of clicks needed to start editing.</source>
          <target state="translated">編集を開始するために必要なクリック数を指定する整数。</target>
        </trans-unit>
        <trans-unit id="6c2d6e4de986d2941bd375a431f66df6ce6a329d" translate="yes" xml:space="preserve">
          <source>An integer specifying the number of clicks needed to start editing. Even if &lt;code&gt;clickCountToStart&lt;/code&gt; is defined as zero, it will not initiate until a click occurs.</source>
          <target state="translated">編集を開始するために必要なクリック数を指定する整数。 &lt;code&gt;clickCountToStart&lt;/code&gt; がゼロとして定義されている場合でも、クリックが発生するまで開始されません。</target>
        </trans-unit>
        <trans-unit id="3ee1ae581e11140a3f88720b1eaca6fa372cae12" translate="yes" xml:space="preserve">
          <source>An integer that stands for an unknown numeric value.</source>
          <target state="translated">未知の数値を表す整数。</target>
        </trans-unit>
        <trans-unit id="69bfe90e2bce383610cf905b6db7ea9336e5f593" translate="yes" xml:space="preserve">
          <source>An integer that stands for an unknown numeric value. This value is appropriate only for signed quantities that do not normally take negative values. Examples include file sizes, frame sizes, buffer sizes, and sample rates. A number of Java Sound constructors accept a value of &lt;code&gt;NOT_SPECIFIED&lt;/code&gt; for such parameters. Other methods may also accept or return this value, as documented.</source>
          <target state="translated">不明な数値を表す整数。この値は、通常負の値をとらない符号付き数量にのみ適しています。たとえば、ファイルサイズ、フレームサイズ、バッファサイズ、サンプルレートなどです。多くのJava Soundコンストラクターは、そのようなパラメーターの &lt;code&gt;NOT_SPECIFIED&lt;/code&gt; の値を受け入れます。ドキュメントに記載されているように、他のメソッドもこの値を受け入れるか返すことがあります。</target>
        </trans-unit>
        <trans-unit id="4edf062f1c20f1e4c18bf37fdbdd1e1bdd2f7eb0" translate="yes" xml:space="preserve">
          <source>An integer value signifying that a property value has not yet been calculated.</source>
          <target state="translated">プロパティ値がまだ計算されていないことを示す整数値。</target>
        </trans-unit>
        <trans-unit id="ef7bc3b72674e27cace9fb77180a9e01d814504e" translate="yes" xml:space="preserve">
          <source>An interface for an elliptic curve private key as defined by RFC 7748.</source>
          <target state="translated">RFC 7748で定義されている楕円曲線秘密鍵のインターフェース。</target>
        </trans-unit>
        <trans-unit id="a74f80fbd0fa6dd98374b240335bf63fb5dce598" translate="yes" xml:space="preserve">
          <source>An interface for an elliptic curve private key as defined by RFC 7748. These keys are distinct from the keys represented by &lt;code&gt;ECPrivateKey&lt;/code&gt;, and they are intended for use with algorithms based on RFC 7748 such as the XDH &lt;code&gt;KeyAgreement&lt;/code&gt; algorithm. An XEC private key is an encoded scalar value as described in RFC 7748. The decoding procedure defined in this RFC includes an operation that forces certain bits of the key to either 1 or 0. This operation is known as &quot;pruning&quot; or &quot;clamping&quot; the private key. Arrays returned by this interface are unpruned, and implementations will need to prune the array before using it in any numerical operations.</source>
          <target state="translated">RFC 7748で定義されている楕円曲線秘密鍵のインターフェース。これらの鍵は &lt;code&gt;ECPrivateKey&lt;/code&gt; で表される鍵とは異なり、 &lt;code&gt;KeyAgreement&lt;/code&gt; アルゴリズムなどのRFC7748に基づくアルゴリズムでの使用を目的としています。 XEC秘密鍵は、RFC 7748で説明されているように、エンコードされたスカラー値です。このRFCで定義されているデコード手順には、鍵の特定のビットを1または0に強制する操作が含まれます。この操作は「プルーニング」または「クランプ」と呼ばれます。秘密鍵。このインターフェイスによって返される配列はプルーニングされていないため、実装では、数値演算で使用する前に配列をプルーニングする必要があります。</target>
        </trans-unit>
        <trans-unit id="44d95aaadb0b3951be3e4de379eedb2cd8fb34e4" translate="yes" xml:space="preserve">
          <source>An interface for an elliptic curve public key as defined by RFC 7748.</source>
          <target state="translated">RFC 7748 で定義されている楕円曲線公開鍵のインターフェイス。</target>
        </trans-unit>
        <trans-unit id="d526404220893bed78c77ee687e8918f98e3482a" translate="yes" xml:space="preserve">
          <source>An interface for an elliptic curve public key as defined by RFC 7748. These keys are distinct from the keys represented by &lt;code&gt;ECPublicKey&lt;/code&gt;, and they are intended for use with algorithms based on RFC 7748 such as the XDH &lt;code&gt;KeyAgreement&lt;/code&gt; algorithm. An XEC public key is a particular point on the curve, which is represented using only its u-coordinate as described in RFC 7748. A u-coordinate is an element of the field of integers modulo some value that is determined by the algorithm parameters. This field element is represented by a BigInteger which may hold any value. That is, the BigInteger is not restricted to the range of canonical field elements.</source>
          <target state="translated">RFC 7748で定義されている楕円曲線公開鍵のインターフェース。これらの鍵は &lt;code&gt;ECPublicKey&lt;/code&gt; で表される鍵とは異なり、 &lt;code&gt;KeyAgreement&lt;/code&gt; アルゴリズムなどのRFC7748に基づくアルゴリズムでの使用を目的としています。 XEC公開鍵は、RFC 7748で説明されているように、そのu座標のみを使用して表される曲線上の特定のポイントです。u座標は、アルゴリズムパラメータによって決定される値を法とする整数のフィールドの要素です。このフィールド要素は、任意の値を保持できるBigIntegerで表されます。つまり、BigIntegerは正規のフィールド要素の範囲に制限されません。</target>
        </trans-unit>
        <trans-unit id="10af9cb63f7c680bde311e1f5dfc0a16cc82d1e4" translate="yes" xml:space="preserve">
          <source>An interface for an elliptic curve public/private key as defined by RFC 7748.</source>
          <target state="translated">RFC 7748で定義されている楕円曲線公開鍵/秘密鍵のインターフェース。</target>
        </trans-unit>
        <trans-unit id="beb8c30339ab67ea4b5470bb2b06c8816e34b47e" translate="yes" xml:space="preserve">
          <source>An interface for an elliptic curve public/private key as defined by RFC 7748. These keys are distinct from the keys represented by &lt;code&gt;ECKey&lt;/code&gt;, and they are intended for use with algorithms based on RFC 7748 such as the XDH &lt;code&gt;KeyAgreement&lt;/code&gt; algorithm. This interface allows access to the algorithm parameters associated with the key.</source>
          <target state="translated">RFC 7748で定義されている楕円曲線の公開/秘密鍵のインターフェース。これらの鍵は &lt;code&gt;ECKey&lt;/code&gt; で表される鍵とは異なり、 &lt;code&gt;KeyAgreement&lt;/code&gt; アルゴリズムなどのRFC7748に基づくアルゴリズムでの使用を目的としています。このインターフェースにより、キーに関連付けられたアルゴリズムパラメーターにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="7c1aade49578b7ef4a2fa43fe2d04f2a5e547665" translate="yes" xml:space="preserve">
          <source>An interface for an object that allows one to mark up the background with colored areas.</source>
          <target state="translated">背景を色付きの領域でマークアップすることができるオブジェクトのためのインターフェイス。</target>
        </trans-unit>
        <trans-unit id="398bb5b2cafc974baa723ef7da0a42a6bfc8a7f6" translate="yes" xml:space="preserve">
          <source>An interface for command-line tools to provide a way to be invoked without necessarily starting a new VM.</source>
          <target state="translated">必ずしも新しい VM を起動しなくても起動できるようにするためのコマンドラインツール用のインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="068a41ae48ca5ac4dfaebfce8f3df19f98c875c8" translate="yes" xml:space="preserve">
          <source>An interface for comment events</source>
          <target state="translated">コメントイベントのためのインターフェイス</target>
        </trans-unit>
        <trans-unit id="ea3f725adfeb6b59c89c6dc71c97ee20fd66fbdf" translate="yes" xml:space="preserve">
          <source>An interface for creating instances of &lt;code&gt;SaslClient&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SaslClient&lt;/code&gt; のインスタンスを作成するためのインターフェース。</target>
        </trans-unit>
        <trans-unit id="3e70918611d207981e2b3ebda02810f8197697d4" translate="yes" xml:space="preserve">
          <source>An interface for creating instances of &lt;code&gt;SaslClient&lt;/code&gt;. A class that implements this interface must be thread-safe and handle multiple simultaneous requests. It must also have a public constructor that accepts no argument.</source>
          <target state="translated">&lt;code&gt;SaslClient&lt;/code&gt; のインスタンスを作成するためのインターフェース。このインターフェイスを実装するクラスは、スレッドセーフであり、複数の同時リクエストを処理する必要があります。また、引数を受け入れないパブリックコンストラクタも必要です。</target>
        </trans-unit>
        <trans-unit id="fe1107bf7a74cb228073a4fd38a65ab1ac9cc7bf" translate="yes" xml:space="preserve">
          <source>An interface for creating instances of &lt;code&gt;SaslServer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SaslServer&lt;/code&gt; のインスタンスを作成するためのインターフェース。</target>
        </trans-unit>
        <trans-unit id="fc5ac59285f38f4e202a2d8b65c366fd57798cff" translate="yes" xml:space="preserve">
          <source>An interface for creating instances of &lt;code&gt;SaslServer&lt;/code&gt;. A class that implements this interface must be thread-safe and handle multiple simultaneous requests. It must also have a public constructor that accepts no argument.</source>
          <target state="translated">&lt;code&gt;SaslServer&lt;/code&gt; のインスタンスを作成するためのインターフェース。このインターフェイスを実装するクラスは、スレッドセーフであり、複数の同時リクエストを処理する必要があります。また、引数を受け入れないパブリックコンストラクタも必要です。</target>
        </trans-unit>
        <trans-unit id="7361d3f939c2dd774dbd1fad03a79207df8412b9" translate="yes" xml:space="preserve">
          <source>An interface for events that know how to dispatch themselves.</source>
          <target state="translated">自分自身をディスパッチする方法を知っているイベントのためのインターフェイス。</target>
        </trans-unit>
        <trans-unit id="258098630dffa0a37552a442348860869a8b9cb1" translate="yes" xml:space="preserve">
          <source>An interface for events that know how to dispatch themselves. By implementing this interface an event can be placed upon the event queue and its &lt;code&gt;dispatch()&lt;/code&gt; method will be called when the event is dispatched, using the &lt;code&gt;EventDispatchThread&lt;/code&gt;.</source>
          <target state="translated">自分自身をディスパッチする方法を知っているイベントのインターフェース。このインターフェイスを実装することにより、イベントをイベントキューに配置でき、 &lt;code&gt;EventDispatchThread&lt;/code&gt; を使用して、イベントがディスパッチされたときにその &lt;code&gt;dispatch()&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a0176fb4fc0f366170df59f85898f2256f8388a7" translate="yes" xml:space="preserve">
          <source>An interface for handling Entity Declarations This interface is used to record and report unparsed entity declarations.</source>
          <target state="translated">エンティティ宣言を扱うためのインターフェイス このインターフェイスは、パースされていないエンティティ宣言を記録し、報告するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b6223117d60e1c97bc7ffcad72ba3d09a600177e" translate="yes" xml:space="preserve">
          <source>An interface for handling Entity events.</source>
          <target state="translated">Entity イベントを扱うためのインターフェイス。</target>
        </trans-unit>
        <trans-unit id="6ee9b3812f8fd526ee9494c1ffc2c030011533c9" translate="yes" xml:space="preserve">
          <source>An interface for handling Entity events. This event reports entities that have not been resolved and reports their replacement text unprocessed (if available). This event will be reported if javax.xml.stream.isReplacingEntityReferences is set to false. If javax.xml.stream.isReplacingEntityReferences is set to true entity references will be resolved transparently. Entities are handled in two possible ways: (1) If javax.xml.stream.isReplacingEntityReferences is set to true all entity references are resolved and reported as markup transparently. (2) If javax.xml.stream.isReplacingEntityReferences is set to false Entity references are reported as an EntityReference Event.</source>
          <target state="translated">Entity イベントを処理するためのインターフェイスです。このイベントは、解決されていないエンティティを報告し、その置換テキストを未処理で報告します(利用可能な場合)。このイベントは、javax.xml.stream.isReplacingEntityReferencesがfalseに設定されている場合に報告されます。javax.xml.stream.isReplacingEntityReferencesがtrueに設定されている場合、エンティティ参照は透過的に解決されます。エンティティは、以下の2つの方法で処理されます。(1)javax.xml.stream.isReplacingEntityReferencesがtrueに設定されている場合、すべてのエンティティ参照は透過的に解決され、マークアップとして報告されます。(2)javax.xml.stream.isReplacingEntityReferencesがfalseに設定されている場合、エンティティ参照はEntityReferenceイベントとして報告されます。</target>
        </trans-unit>
        <trans-unit id="714c7072bd69b114af0aefd548d6bfa128ed7d1e" translate="yes" xml:space="preserve">
          <source>An interface for handling Notation Declarations Receive notification of a notation declaration event.</source>
          <target state="translated">記法宣言を扱うためのインターフェイス 記法宣言イベントの通知を受信します。</target>
        </trans-unit>
        <trans-unit id="48bd8e4f7e4d3027304213d99227014afe517e68" translate="yes" xml:space="preserve">
          <source>An interface for handling Notation Declarations Receive notification of a notation declaration event. It is up to the application to record the notation for later reference, At least one of publicId and systemId must be non-null. There is no guarantee that the notation declaration will be reported before any unparsed entities that use it.</source>
          <target state="translated">記法宣言を扱うためのインターフェイス 記法宣言イベントの通知を受け取る。後で参照するために記法を記録するのはアプリケーションに任されています。記法宣言が、それを使用するアンパースされたエンティティよりも先に報告されるという保証はありません。</target>
        </trans-unit>
        <trans-unit id="ab46c5b425938dd67f92d797e86e3cf84a9b4e6a" translate="yes" xml:space="preserve">
          <source>An interface for objects that wish to be informed when tiles of a WritableRenderedImage become modifiable by some writer via a call to getWritableTile, and when they become unmodifiable via the last call to releaseWritableTile.</source>
          <target state="translated">WritableRenderedImage のタイルがライターによって変更可能になったときに getWritableTile を呼び出し、最後に releaseWritableTile を呼び出して変更不可能になったときに通知を受けたいオブジェクトのためのインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="a981bf36813561e61b68482771213f0f7f36b1d2" translate="yes" xml:space="preserve">
          <source>An interface for service providers that provide implementations of &lt;a href=&quot;../resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; の&lt;/a&gt;実装を提供するサービスプロバイダーのインターフェイス。</target>
        </trans-unit>
        <trans-unit id="b15746309a1409994f6a09c581bfb913a53b1ee2" translate="yes" xml:space="preserve">
          <source>An interface for service providers that provide implementations of &lt;a href=&quot;../resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;../resourcebundle#default_behavior&quot;&gt;default resource bundle loading behavior&lt;/a&gt; of the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; factory methods that take no &lt;a href=&quot;../resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; instance can be modified with &lt;code&gt;
 ResourceBundleControlProvider&lt;/code&gt; implementations.</source>
          <target state="translated">&lt;a href=&quot;../resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; の&lt;/a&gt;実装を提供するサービスプロバイダー向けのインターフェース。&lt;a href=&quot;../resourcebundle#default_behavior&quot;&gt;デフォルトのリソースバンドルロード動作&lt;/a&gt;の &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 一切かかりませんファクトリメソッド&lt;a href=&quot;../resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt;インスタンスをして変更でき &lt;code&gt; ResourceBundleControlProvider&lt;/code&gt; 実装。</target>
        </trans-unit>
        <trans-unit id="115bb31c1d259eeea81bb4a6b2e448ffe36f0308" translate="yes" xml:space="preserve">
          <source>An interface for service providers that provide implementations of &lt;a href=&quot;../resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;../resourcebundle#default_behavior&quot;&gt;default resource bundle loading behavior&lt;/a&gt; of the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; factory methods that take no &lt;a href=&quot;../resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; instance can be modified with &lt;code&gt;ResourceBundleControlProvider&lt;/code&gt; implementations.</source>
          <target state="translated">&lt;a href=&quot;../resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; の&lt;/a&gt;実装を提供するサービスプロバイダーのインターフェイス。&lt;a href=&quot;../resourcebundle#default_behavior&quot;&gt;デフォルトのリソースバンドルロード動作&lt;/a&gt;の &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 一切かかりませんファクトリメソッド&lt;a href=&quot;../resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt;インスタンスをして変更でき &lt;code&gt;ResourceBundleControlProvider&lt;/code&gt; 実装。</target>
        </trans-unit>
        <trans-unit id="93f3cf3e4ddedb05f2203560a3fe46b91d44d9c8" translate="yes" xml:space="preserve">
          <source>An interface for service providers that provide implementations of &lt;a href=&quot;java/util/resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;java/util/resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; の&lt;/a&gt;実装を提供するサービスプロバイダー向けのインターフェース。</target>
        </trans-unit>
        <trans-unit id="8dc6aa2c6eacbe13e66c39c2fb5e3e0eb55f834f" translate="yes" xml:space="preserve">
          <source>An interface for the end element event.</source>
          <target state="translated">エンドエレメントイベントのインターフェース。</target>
        </trans-unit>
        <trans-unit id="2ed001799366e244aa046f8be8fb078d8eca5d17" translate="yes" xml:space="preserve">
          <source>An interface for the end element event. An EndElement is reported for each End Tag in the document.</source>
          <target state="translated">EndElement イベントのためのインターフェイス。ドキュメント内の各 End Tag に対して EndElement が報告されます。</target>
        </trans-unit>
        <trans-unit id="069fcb223301b7c7e5f75c5bd0e99d6813168fc9" translate="yes" xml:space="preserve">
          <source>An interface for the start document event</source>
          <target state="translated">ドキュメント開始イベントのためのインターフェイス</target>
        </trans-unit>
        <trans-unit id="23b24c5df819233595347053838f0f22e865b3bb" translate="yes" xml:space="preserve">
          <source>An interface method invocation on a proxy instance will be encoded and dispatched to the invocation handler's &lt;a href=&quot;invocationhandler#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; method as described in the documentation for that method.</source>
          <target state="translated">プロキシインスタンスでのインターフェイスメソッドの呼び出しはエンコードされ、そのメソッドのドキュメントで説明されているように、呼び出しハンドラの&lt;a href=&quot;invocationhandler#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;メソッドにディスパッチされます。</target>
        </trans-unit>
        <trans-unit id="5792c6841af96adda012e355035f6475f4b57d5c" translate="yes" xml:space="preserve">
          <source>An interface method invocation on a proxy instance will be encoded and dispatched to the invocation handler's &lt;a href=&quot;invocationhandler#invoke-java.lang.Object-java.lang.reflect.Method-java.lang.Object:A-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; method as described in the documentation for that method.</source>
          <target state="translated">プロキシインスタンスでのインターフェースメソッドの呼び出しはエンコードされ、そのメソッドのドキュメントで説明されているように、呼び出しハンドラの&lt;a href=&quot;invocationhandler#invoke-java.lang.Object-java.lang.reflect.Method-java.lang.Object:A-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;メソッドにディスパッチされます。</target>
        </trans-unit>
        <trans-unit id="b812301ff3bad4a7e52cd7f68461ee3bd3b53697" translate="yes" xml:space="preserve">
          <source>An interface not described by a more specific kind (like &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt;).</source>
          <target state="translated">より具体的な種類で記述されていないインターフェース（ &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt; など）。</target>
        </trans-unit>
        <trans-unit id="ba9e40d4336ce336c4f7cdd70f4185fa8bf68762" translate="yes" xml:space="preserve">
          <source>An interface providing metadata transcoding capability.</source>
          <target state="translated">メタデータのトランスコード機能を提供するインターフェースです。</target>
        </trans-unit>
        <trans-unit id="587dba713ea99dac60c398f96852ddc5d90dbffb" translate="yes" xml:space="preserve">
          <source>An interface representing a data checksum.</source>
          <target state="translated">データチェックサムを表すインターフェース。</target>
        </trans-unit>
        <trans-unit id="341b0bdcf8228dba24a6d93a4b06396b882ed3d6" translate="yes" xml:space="preserve">
          <source>An interface that can be used to allow MutableAttributeSet implementations to use pluggable attribute compression techniques.</source>
          <target state="translated">MutableAttributeSet の実装がプラグイン可能な属性圧縮技術を使用できるようにするためのインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="02f39c54a9e3e7c54e07a330946d18d6555c31d1" translate="yes" xml:space="preserve">
          <source>An interface that can be used to allow MutableAttributeSet implementations to use pluggable attribute compression techniques. Each mutation of the attribute set can be used to exchange a previous AttributeSet instance with another, preserving the possibility of the AttributeSet remaining immutable. An implementation is provided by the StyleContext class. The Element implementations provided by this class use this interface to provide their MutableAttributeSet implementations, so that different AttributeSet compression techniques can be employed. The method &lt;code&gt;getAttributeContext&lt;/code&gt; should be implemented to return the object responsible for implementing the desired compression technique.</source>
          <target state="translated">MutableAttributeSet実装がプラグ可能な属性圧縮技術を使用できるようにするために使用できるインターフェース。属性セットの各変更を使用して、前のAttributeSetインスタンスを別のインスタンスと交換し、AttributeSetが不変のままになる可能性を維持できます。実装はStyleContextクラスによって提供されます。このクラスによって提供されるElement実装は、このインターフェースを使用してMutableAttributeSet実装を提供するため、さまざまなAttributeSet圧縮手法を使用できます。 &lt;code&gt;getAttributeContext&lt;/code&gt; メソッドを実装して、目的の圧縮手法の実装を担当するオブジェクトを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="67a864cce41735ad67c5cce854773965ba456fe6" translate="yes" xml:space="preserve">
          <source>An interface that contains information about a namespace.</source>
          <target state="translated">ネームスペースに関する情報を含むインタフェース。</target>
        </trans-unit>
        <trans-unit id="8233a5852b8192ec45b92fcf3b2b07e10df191bb" translate="yes" xml:space="preserve">
          <source>An interface that contains information about a namespace. Namespaces are accessed from a StartElement.</source>
          <target state="translated">名前空間に関する情報を含むインターフェース。名前空間はStartElementからアクセスします。</target>
        </trans-unit>
        <trans-unit id="95e3fdcaf288df9e9c1b2a324c44fdd660311a0d" translate="yes" xml:space="preserve">
          <source>An interface that contains information about an attribute.</source>
          <target state="translated">属性に関する情報を含むインターフェース。</target>
        </trans-unit>
        <trans-unit id="a1118214d213349c38d769f995b459760d3aac16" translate="yes" xml:space="preserve">
          <source>An interface that contains information about an attribute. Attributes are reported as a set of events accessible from a StartElement. Other applications may report Attributes as first-order events, for example as the results of an XPath expression.</source>
          <target state="translated">属性に関する情報を含むインターフェース。属性は、StartElementからアクセス可能なイベントのセットとして報告される。他のアプリケーションでは、Attributes を、例えば XPath 式の結果などの一次イベントとして報告することがあります。</target>
        </trans-unit>
        <trans-unit id="2ba0559b3e10dca421b8c1e9e6688f5006938904" translate="yes" xml:space="preserve">
          <source>An interface that defines the implementation of a factory that is used to obtain different types of &lt;code&gt;RowSet&lt;/code&gt; implementations.</source>
          <target state="translated">さまざまなタイプの &lt;code&gt;RowSet&lt;/code&gt; 実装を取得するために使用されるファクトリの実装を定義するインターフェイス。</target>
        </trans-unit>
        <trans-unit id="c9254ce3496326ed1c49a73f2d70994dc91cf597" translate="yes" xml:space="preserve">
          <source>An interface that describes the data found in processing instructions</source>
          <target state="translated">処理命令に見られるデータを記述したインターフェース</target>
        </trans-unit>
        <trans-unit id="65020abdc59d5f06255e2eaa3210edca3ee4b442" translate="yes" xml:space="preserve">
          <source>An interface that is implemented by objects that decide if a directory entry should be accepted or filtered.</source>
          <target state="translated">ディレクトリエントリを受け入れるかフィルタリングするかを決定するオブジェクトによって実装されるインターフェイス。</target>
        </trans-unit>
        <trans-unit id="05c4e79434d5e8e87a7488e00e2f7ec93b2e66ce" translate="yes" xml:space="preserve">
          <source>An interface that is implemented by objects that decide if a directory entry should be accepted or filtered. A &lt;code&gt;Filter&lt;/code&gt; is passed as the parameter to the &lt;a href=&quot;files#newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream.Filter)&quot;&gt;&lt;code&gt;Files.newDirectoryStream(Path,DirectoryStream.Filter)&lt;/code&gt;&lt;/a&gt; method when opening a directory to iterate over the entries in the directory.</source>
          <target state="translated">ディレクトリエントリを受け入れるかフィルタリングするかを決定するオブジェクトによって実装されるインターフェイス。 &lt;code&gt;Filter&lt;/code&gt; へのパラメータとして渡され&lt;a href=&quot;files#newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream.Filter)&quot;&gt; &lt;code&gt;Files.newDirectoryStream(Path,DirectoryStream.Filter)&lt;/code&gt; &lt;/a&gt;ディレクトリ内のエントリを反復するディレクトリを開くときの方法。</target>
        </trans-unit>
        <trans-unit id="213f4f0b9107046878b9b259b674746876a69b64" translate="yes" xml:space="preserve">
          <source>An interface that is implemented by objects that decide if a directory entry should be accepted or filtered. A &lt;code&gt;Filter&lt;/code&gt; is passed as the parameter to the &lt;a href=&quot;files#newDirectoryStream-java.nio.file.Path-java.nio.file.DirectoryStream.Filter-&quot;&gt;&lt;code&gt;Files.newDirectoryStream(Path,DirectoryStream.Filter)&lt;/code&gt;&lt;/a&gt; method when opening a directory to iterate over the entries in the directory.</source>
          <target state="translated">ディレクトリエントリを受け入れるかフィルタリングするかを決定するオブジェクトによって実装されるインターフェイス。 &lt;code&gt;Filter&lt;/code&gt; へのパラメータとして渡され&lt;a href=&quot;files#newDirectoryStream-java.nio.file.Path-java.nio.file.DirectoryStream.Filter-&quot;&gt; &lt;code&gt;Files.newDirectoryStream(Path,DirectoryStream.Filter)&lt;/code&gt; &lt;/a&gt;ディレクトリ内のエントリを反復するディレクトリを開くときの方法。</target>
        </trans-unit>
        <trans-unit id="1adc466cfc9b43998c9a1ad60f52d2b00c0d0f84" translate="yes" xml:space="preserve">
          <source>An interface that is implemented by objects that perform match operations on paths.</source>
          <target state="translated">パスに対するマッチ操作を行うオブジェクトによって実装されるインターフェイス。</target>
        </trans-unit>
        <trans-unit id="c2bfe211ec29dc0236d6e1aed315458c3bf5423f" translate="yes" xml:space="preserve">
          <source>An interface that must be implemented by a component that wants to be notified when a significant event happens in the life of a &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; オブジェクトの存続期間中に重大なイベントが発生したときに通知を受け取りたいコンポーネントによって実装される必要があるインターフェース。</target>
        </trans-unit>
        <trans-unit id="34b3052d7c2f1d2ad77cc2f0c433a9289431cf97" translate="yes" xml:space="preserve">
          <source>An interface that must be implemented by a component that wants to be notified when a significant event happens in the life of a &lt;code&gt;RowSet&lt;/code&gt; object. A component becomes a listener by being registered with a &lt;code&gt;RowSet&lt;/code&gt; object via the method &lt;code&gt;RowSet.addRowSetListener&lt;/code&gt;. How a registered component implements this interface determines what it does when it is notified of an event.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; オブジェクトの存続期間中に重大なイベントが発生したときに通知を受け取りたいコンポーネントによって実装される必要があるインターフェース。コンポーネントは、メソッド &lt;code&gt;RowSet.addRowSetListener&lt;/code&gt; を介して &lt;code&gt;RowSet&lt;/code&gt; オブジェクトに登録されることにより、リスナーになります。登録されたコンポーネントがこのインターフェイスをどのように実装するかによって、イベントが通知されたときの動作が決まります。</target>
        </trans-unit>
        <trans-unit id="9249bb83807fdd62bddcf5d5b707312c19287ec6" translate="yes" xml:space="preserve">
          <source>An interface that must be implemented when a &lt;a href=&quot;driver&quot;&gt;Driver&lt;/a&gt; wants to be notified by &lt;code&gt;DriverManager&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DriverManager&lt;/code&gt; からの通知を&lt;a href=&quot;driver&quot;&gt;ドライバー&lt;/a&gt;が希望する場合に実装する必要のあるインターフェース。</target>
        </trans-unit>
        <trans-unit id="f7f92b2354babb0936bbdb055dc8923a9ee6f1d5" translate="yes" xml:space="preserve">
          <source>An interface that provides information to a scrolling container like JScrollPane.</source>
          <target state="translated">JScrollPane のようなスクロールコンテナに情報を提供するインターフェース。</target>
        </trans-unit>
        <trans-unit id="5253eb76151b260a171dbcbe0cbf1a4b1f3069d0" translate="yes" xml:space="preserve">
          <source>An interface that provides information to a scrolling container like JScrollPane. A complex component that's likely to be used as a viewing a JScrollPane viewport (or other scrolling container) should implement this interface.</source>
          <target state="translated">JScrollPaneのようなスクロールコンテナに情報を提供するインターフェースです。JScrollPaneのビューポート(または他のスクロールコンテナ)を表示するために使用される可能性の高い複雑なコンポーネントは、このインタフェースを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="e1903fd7150010bfbc980ed8d61474219e48a6e7" translate="yes" xml:space="preserve">
          <source>An interface to an object capable of generating DSA key pairs.</source>
          <target state="translated">DSA キーペアを生成することができるオブジェクトへのインターフェース。</target>
        </trans-unit>
        <trans-unit id="0d7b7e4df14a0d5abedaeef88449f90498b27070" translate="yes" xml:space="preserve">
          <source>An interface to an object that is able to build, or augment, a DOM tree from various input sources.</source>
          <target state="translated">様々な入力ソースから DOM ツリーを構築したり、拡張したりすることができるオブジェクトへのインターフェース。</target>
        </trans-unit>
        <trans-unit id="1a178a3c731cebf9a3ef5d36850578656dedcae8" translate="yes" xml:space="preserve">
          <source>An interface to be implemented by objects that can determine the settings of an &lt;code&gt;IIOMetadata&lt;/code&gt; object, either by putting up a GUI to obtain values from a user, or by other means.</source>
          <target state="translated">ユーザーから値を取得するためにGUIを起動することによって、または他の手段によって、 &lt;code&gt;IIOMetadata&lt;/code&gt; オブジェクトの設定を決定できるオブジェクトによって実装されるインターフェイス。</target>
        </trans-unit>
        <trans-unit id="2831b22b41e665a79ed547f74e4bf773b5fa2fb9" translate="yes" xml:space="preserve">
          <source>An interface to be implemented by objects that can determine the settings of an &lt;code&gt;IIOMetadata&lt;/code&gt; object, either by putting up a GUI to obtain values from a user, or by other means. This interface merely specifies a generic &lt;code&gt;activate&lt;/code&gt; method that invokes the controller, without regard for how the controller obtains values (</source>
          <target state="translated">ユーザーから値を取得するためにGUIを起動することによって、または他の手段によって、 &lt;code&gt;IIOMetadata&lt;/code&gt; オブジェクトの設定を決定できるオブジェクトによって実装されるインターフェイス。このインターフェイスは、コントローラーが値を取得する方法に関係なく、コントローラーを呼び出す一般的な &lt;code&gt;activate&lt;/code&gt; メソッドを指定するだけです（</target>
        </trans-unit>
        <trans-unit id="c072fd163a223eb059d12c6bf22f968e1bd8d08f" translate="yes" xml:space="preserve">
          <source>An interface to be implemented by objects that can determine the settings of an &lt;code&gt;IIOParam&lt;/code&gt; object, either by putting up a GUI to obtain values from a user, or by other means.</source>
          <target state="translated">ユーザーから値を取得するためにGUIを起動するか、その他の方法で &lt;code&gt;IIOParam&lt;/code&gt; オブジェクトの設定を決定できるオブジェクトによって実装されるインターフェイス。</target>
        </trans-unit>
        <trans-unit id="704614bcc91fbb9d9d9d8aa837b4790c38756fef" translate="yes" xml:space="preserve">
          <source>An interface to be implemented by objects that can determine the settings of an &lt;code&gt;IIOParam&lt;/code&gt; object, either by putting up a GUI to obtain values from a user, or by other means. This interface merely specifies a generic &lt;code&gt;activate&lt;/code&gt; method that invokes the controller, without regard for how the controller obtains values (</source>
          <target state="translated">ユーザーから値を取得するためにGUIを起動するか、その他の方法で &lt;code&gt;IIOParam&lt;/code&gt; オブジェクトの設定を決定できるオブジェクトによって実装されるインターフェイス。このインターフェイスは、コントローラーが値を取得する方法に関係なく、コントローラーを呼び出す一般的な &lt;code&gt;activate&lt;/code&gt; メソッドを指定するだけです（</target>
        </trans-unit>
        <trans-unit id="958b0e201b12034deea574084c623f01786e64b4" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageReader&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of pixel updates.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 実装によって使用されるインターフェイス。呼び出し元に画像とサムネイルの読み取り方法を通知し、ピクセルの更新を通知します。</target>
        </trans-unit>
        <trans-unit id="5d421100f8ff77e709f5a29de3f264cd0725ab7a" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageReader&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of progress.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 実装が使用するインターフェイスで、呼び出し元に画像とサムネイルの読み取り方法を通知します。</target>
        </trans-unit>
        <trans-unit id="8c69e1e6c460866a883a4d9f5a86b0213afc74b1" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageReader&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of warnings (non-fatal errors).</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 実装が使用するインターフェイスで、呼び出し元に画像とサムネイルの読み取りメソッドに警告（致命的でないエラー）を通知します。</target>
        </trans-unit>
        <trans-unit id="e9184487a9ba25caed0da69072956f441d66d8dd" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageReader&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of warnings (non-fatal errors). Fatal errors cause the relevant read method to throw an &lt;code&gt;IIOException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; 実装が使用するインターフェイスで、呼び出し元に画像とサムネイルの読み取りメソッドに警告（致命的でないエラー）を通知します。致命的なエラーが発生すると、関連する読み取りメソッドが &lt;code&gt;IIOException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="4999dd91a8ac2dbce03e6e230634b78004e7043f" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageWriter&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of warnings (non-fatal errors).</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; 実装によって使用されるインターフェイスで、呼び出し元に画像とサムネイルの読み取りメソッドに警告（致命的でないエラー）を通知します。</target>
        </trans-unit>
        <trans-unit id="16fd410b089b3792b23fa854a31a1000a4975534" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageWriter&lt;/code&gt; implementations to notify callers of their image and thumbnail reading methods of warnings (non-fatal errors). Fatal errors cause the relevant read method to throw an &lt;code&gt;IIOException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; 実装によって使用されるインターフェイスで、呼び出し元に画像とサムネイルの読み取りメソッドに警告（致命的でないエラー）を通知します。致命的なエラーが発生すると、関連する読み取りメソッドが &lt;code&gt;IIOException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="8095214fd7fa66bb3c5c13b76c917e45bbb8dc4f" translate="yes" xml:space="preserve">
          <source>An interface used by &lt;code&gt;ImageWriter&lt;/code&gt; implementations to notify callers of their image writing methods of progress.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; 実装が使用するインターフェースで、呼び出し元に画像書き込みメソッドの進行状況を通知します。</target>
        </trans-unit>
        <trans-unit id="198c2e226d97a781d7d80cfc4dcc281225d59170" translate="yes" xml:space="preserve">
          <source>An intermediate weight between &lt;code&gt;WEIGHT_LIGHT&lt;/code&gt; and &lt;code&gt;WEIGHT_STANDARD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WEIGHT_LIGHT&lt;/code&gt; と &lt;code&gt;WEIGHT_STANDARD&lt;/code&gt; の中間の重み。</target>
        </trans-unit>
        <trans-unit id="50cde2de178fb34f0c0b71441c533a84c9bbf8d4" translate="yes" xml:space="preserve">
          <source>An intermediate weight between &lt;code&gt;WEIGHT_REGULAR&lt;/code&gt; and &lt;code&gt;WEIGHT_BOLD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WEIGHT_REGULAR&lt;/code&gt; と &lt;code&gt;WEIGHT_BOLD&lt;/code&gt; の中間の重み。</target>
        </trans-unit>
        <trans-unit id="c679ec33508648309245518691c0555b479d3a43" translate="yes" xml:space="preserve">
          <source>An interpreter for printf-style format strings.</source>
          <target state="translated">printf形式のフォーマット文字列のためのインタプリタ。</target>
        </trans-unit>
        <trans-unit id="1be3701be43fb57dc89fa26d9a9b2eb934eb287f" translate="yes" xml:space="preserve">
          <source>An interpreter for printf-style format strings. This class provides support for layout justification and alignment, common formats for numeric, string, and date/time data, and locale-specific output. Common Java types such as &lt;code&gt;byte&lt;/code&gt;, &lt;a href=&quot;../math/bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; are supported. Limited formatting customization for arbitrary user types is provided through the &lt;a href=&quot;formattable&quot;&gt;&lt;code&gt;Formattable&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">printfスタイルのフォーマット文字列のインタプリタ。このクラスは、レイアウトの位置揃えと配置、数値、文字列、日付/時刻データの一般的な形式、およびロケール固有の出力をサポートします。 &lt;code&gt;byte&lt;/code&gt; 、&lt;a href=&quot;../math/bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;などの一般的なJavaタイプがサポートされています。&lt;a href=&quot;formattable&quot;&gt; &lt;code&gt;Formattable&lt;/code&gt; &lt;/a&gt;インターフェースを介して、任意のユーザータイプの限定的なフォーマットカスタマイズが提供されます。</target>
        </trans-unit>
        <trans-unit id="b2bc212b1f9739b742dda5b63173a4389d4313d8" translate="yes" xml:space="preserve">
          <source>An interpreter resource is unavailable (e.g., font, form).</source>
          <target state="translated">インタプリタリソースが利用できません(フォント、フォームなど)。</target>
        </trans-unit>
        <trans-unit id="b70efde1e9f9def01cc58530942fe1eb9d3337d2" translate="yes" xml:space="preserve">
          <source>An intersection type can be either implicitly or explicitly declared in a program. For example, the bound of the type parameter &lt;code&gt;&amp;lt;T extends Number &amp;amp; Runnable&amp;gt;&lt;/code&gt; is an (implicit) intersection type. As of &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt;, this is represented by an &lt;code&gt;IntersectionType&lt;/code&gt; with &lt;code&gt;Number&lt;/code&gt; and &lt;code&gt;Runnable&lt;/code&gt; as its bounds.</source>
          <target state="translated">交差タイプは、プログラムで暗黙的または明示的に宣言できます。たとえば、型パラメーター &lt;code&gt;&amp;lt;T extends Number &amp;amp; Runnable&amp;gt;&lt;/code&gt; の境界は（暗黙の）交差型です。以下のよう&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;、これは表される &lt;code&gt;IntersectionType&lt;/code&gt; と &lt;code&gt;Number&lt;/code&gt; と &lt;code&gt;Runnable&lt;/code&gt; その境界として。</target>
        </trans-unit>
        <trans-unit id="8fb6758df7e84cf28e603a0746619b1b48eaf6d0" translate="yes" xml:space="preserve">
          <source>An intersection type can be either implicitly or explicitly declared in a program. For example, the bound of the type parameter &lt;code&gt;&amp;lt;T extends Number &amp;amp; Runnable&amp;gt;&lt;/code&gt; is an (implicit) intersection type. This is represented by an &lt;code&gt;IntersectionType&lt;/code&gt; with &lt;code&gt;Number&lt;/code&gt; and &lt;code&gt;Runnable&lt;/code&gt; as its bounds.</source>
          <target state="translated">交差型は、プログラムで暗黙的または明示的に宣言できます。たとえば、型パラメーター &lt;code&gt;&amp;lt;T extends Number &amp;amp; Runnable&amp;gt;&lt;/code&gt; の境界は、（暗黙の）交差型です。これは、 &lt;code&gt;Number&lt;/code&gt; と &lt;code&gt;Runnable&lt;/code&gt; を境界とする &lt;code&gt;IntersectionType&lt;/code&gt; で表されます。</target>
        </trans-unit>
        <trans-unit id="5a0034aa1f871363656f40b2d647a5fa4c475af2" translate="yes" xml:space="preserve">
          <source>An intersection type.</source>
          <target state="translated">交差点タイプ。</target>
        </trans-unit>
        <trans-unit id="f56f7cbbb1fbc99462be0959719b6e07a2cc3aae" translate="yes" xml:space="preserve">
          <source>An invalid &lt;code&gt;FilePermission&lt;/code&gt; does not imply any object except for itself. An invalid &lt;code&gt;FilePermission&lt;/code&gt; is not implied by any object except for itself or a &lt;code&gt;FilePermission&lt;/code&gt; on &quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot; whose actions is a superset of this invalid &lt;code&gt;FilePermission&lt;/code&gt;. Even if two &lt;code&gt;FilePermission&lt;/code&gt; are created with the same invalid path, one does not imply the other.</source>
          <target state="translated">無効な &lt;code&gt;FilePermission&lt;/code&gt; は、それ自体以外のオブジェクトを意味するものではありません。無効な &lt;code&gt;FilePermission&lt;/code&gt; は、それ自体、またはアクションがこの無効な &lt;code&gt;FilePermission&lt;/code&gt; のスーパーセットである「&amp;lt;&amp;lt; ALLFILES &amp;gt;&amp;gt;」の &lt;code&gt;FilePermission&lt;/code&gt; を除いて、どのオブジェクトによっても暗示されません。同じ無効なパスで2つの &lt;code&gt;FilePermission&lt;/code&gt; が作成された場合でも、一方が他方を意味することはありません。</target>
        </trans-unit>
        <trans-unit id="18e4f95ce83cbdf52576efe50401011128c2e385" translate="yes" xml:space="preserve">
          <source>An invocation of the &lt;code&gt;hashCode&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, or &lt;code&gt;toString&lt;/code&gt; methods declared in &lt;code&gt;java.lang.Object&lt;/code&gt; on a proxy instance will be encoded and dispatched to the invocation handler's &lt;code&gt;invoke&lt;/code&gt; method in the same manner as interface method invocations are encoded and dispatched, as described above. The declaring class of the &lt;code&gt;Method&lt;/code&gt; object passed to &lt;code&gt;invoke&lt;/code&gt; will be &lt;code&gt;java.lang.Object&lt;/code&gt;. Other public methods of a proxy instance inherited from &lt;code&gt;java.lang.Object&lt;/code&gt; are not overridden by a proxy class, so invocations of those methods behave like they do for instances of &lt;code&gt;java.lang.Object&lt;/code&gt;.</source>
          <target state="translated">プロキシインスタンスの &lt;code&gt;java.lang.Object&lt;/code&gt; で宣言された &lt;code&gt;hashCode&lt;/code&gt; 、 &lt;code&gt;equals&lt;/code&gt; 、または &lt;code&gt;toString&lt;/code&gt; メソッドの &lt;code&gt;invoke&lt;/code&gt; は、上記のように、インターフェースメソッドの呼び出しがエンコードおよびディスパッチされるのと同じ方法でエンコードされ、呼び出しハンドラのinvokeメソッドにディスパッチされます。 &lt;code&gt;invoke&lt;/code&gt; に渡される &lt;code&gt;Method&lt;/code&gt; オブジェクトの宣言クラスは &lt;code&gt;java.lang.Object&lt;/code&gt; になります。 &lt;code&gt;java.lang.Object&lt;/code&gt; から継承されたプロキシインスタンスの他のパブリックメソッドは、プロキシクラスによってオーバーライドされないため、これらのメソッドの呼び出しは、 &lt;code&gt;java.lang.Object&lt;/code&gt; のインスタンスの場合と同様に動作します。</target>
        </trans-unit>
        <trans-unit id="a087ff4a4c71801565929f0f7742d008e4b347de" translate="yes" xml:space="preserve">
          <source>An invocation of the form &lt;code&gt;InvocationEvent(source, runnable, notifier, catchThrowables)&lt;/code&gt; behaves in exactly the same way as the invocation of &lt;a href=&quot;#%3Cinit%3E(java.lang.Object,int,java.lang.Runnable,java.lang.Object,boolean)&quot;&gt;&lt;code&gt;InvocationEvent(source, InvocationEvent.INVOCATION_DEFAULT, runnable, notifier, catchThrowables)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フォームの呼び出し &lt;code&gt;InvocationEvent(source, runnable, notifier, catchThrowables)&lt;/code&gt; の呼び出しとまったく同じように動作&lt;a href=&quot;#%3Cinit%3E(java.lang.Object,int,java.lang.Runnable,java.lang.Object,boolean)&quot;&gt; &lt;code&gt;InvocationEvent(source, InvocationEvent.INVOCATION_DEFAULT, runnable, notifier, catchThrowables)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02084ccd089fb9ba5b34684811be92c7932968bb" translate="yes" xml:space="preserve">
          <source>An invocation of this convenience method of the form</source>
          <target state="translated">この便利なメソッドを呼び出すと、以下のような形式になります。</target>
        </trans-unit>
        <trans-unit id="064f9f6a19cc9c72a3813d06f85698074abdf4d5" translate="yes" xml:space="preserve">
          <source>An invocation of this method attempts to read up to</source>
          <target state="translated">このメソッドの呼び出しは</target>
        </trans-unit>
        <trans-unit id="2082ad63b5802a83d96d686800f26ae018172330" translate="yes" xml:space="preserve">
          <source>An invocation of this method behaves in exactly the same manner as the invocation:</source>
          <target state="translated">このメソッドの呼び出しは、呼び出しと全く同じように振る舞います。</target>
        </trans-unit>
        <trans-unit id="914d92637999d05b5f5ecc129be8343bcdbb2cd1" translate="yes" xml:space="preserve">
          <source>An invocation of this method behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの呼び出しは、このメソッドの呼び出しと全く同じように動作します。</target>
        </trans-unit>
        <trans-unit id="cbe9ce1edab8686cdc43a5ccce3acb01a0faf5a4" translate="yes" xml:space="preserve">
          <source>An invocation of this method has exactly the same effect as invoking &lt;code&gt;decode(src.getBytes(StandardCharsets.ISO_8859_1))&lt;/code&gt;</source>
          <target state="translated">このメソッドの呼び出しは、 &lt;code&gt;decode(src.getBytes(StandardCharsets.ISO_8859_1))&lt;/code&gt; の呼び出しとまったく同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="7caa32a4808cce065e4e67e7f8d27283bfccb723" translate="yes" xml:space="preserve">
          <source>An invocation of this method is equivalent to (but may be more efficient than):</source>
          <target state="translated">このメソッドの呼び出しは、(より効率的になるかもしれませんが)と同等です。</target>
        </trans-unit>
        <trans-unit id="ee88916f6b06f87c913bca5d248ecc94b669f687" translate="yes" xml:space="preserve">
          <source>An invocation of this method is equivalent to the following:</source>
          <target state="translated">このメソッドの呼び出しは次のようになります。</target>
        </trans-unit>
        <trans-unit id="1a2f1bee3ab00a9d52855db99b989f2944f21f97" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form</source>
          <target state="translated">このメソッドの呼び出しは</target>
        </trans-unit>
        <trans-unit id="1d1056e77880b717013e83c03c632b834d5cf7bb" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;c.read(dsts)&lt;/code&gt; behaves in exactly the same manner as the invocation</source>
          <target state="translated">このメソッドの &lt;code&gt;c.read(dsts)&lt;/code&gt; 形式の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="4c20b726689975f079a92979ce6e5fe5611cb235" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;c.write(srcs)&lt;/code&gt; behaves in exactly the same manner as the invocation</source>
          <target state="translated">このメソッドの &lt;code&gt;c.write(srcs)&lt;/code&gt; 形式の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="fda405a4af30c2b03897dcc6cc855f80942b96dc" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;ch.lock(att,handler)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの形式 &lt;code&gt;ch.lock(att,handler)&lt;/code&gt; の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="9d5dfcd8417b5ff81efec1d6ae8b29ed3601a18c" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;ch.tryLock()&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの &lt;code&gt;ch.tryLock()&lt;/code&gt; 形式の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="2380cd4d3291f9c4d72c90298c350afad394f8f6" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;con.printf(format, args)&lt;/code&gt; behaves in exactly the same way as the invocation of</source>
          <target state="translated">このメソッドを &lt;code&gt;con.printf(format, args)&lt;/code&gt; 呼び出すと、次の呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="825b80b9cfc2f18e17ab5a08098b4e1e2da5e131" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;dst.append(c)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの &lt;code&gt;dst.append(c)&lt;/code&gt; 形式の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="9896ff401379f09fbde427b627bab0e00790374f" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;dst.append(csq)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの &lt;code&gt;dst.append(csq)&lt;/code&gt; 形式の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="ab71ff13231d956725be26918c42cd1489165111" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;dst.append(csq, start,
 end)&lt;/code&gt; when &lt;code&gt;csq&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;csq&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合のdst.append &lt;code&gt;dst.append(csq, start, end)&lt;/code&gt; 形式のこのメソッドの呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="ee689af01b8cc0aa10d632365cc4ab2b45e2e2c7" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;fc.lock()&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;fc.lock()&lt;/code&gt; 形式のこのメソッドの呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="f377deea6a4f8bbc62edf414a6c182fd4c6bbb9c" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;fc.tryLock()&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;fc.tryLock()&lt;/code&gt; 形式のこのメソッドの呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="4ddf845efd15bb861512809660e2c070a8b138f8" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;file.setExcutable(arg)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;file.setExcutable(arg)&lt;/code&gt; 形式のこのメソッドの呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="9451e2d715a0fc54ac9ec4934e338274cd043a56" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;file.setReadable(arg)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;file.setReadable(arg)&lt;/code&gt; 形式のこのメソッドの呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="a93d60baf3849e3dd8ae08e1f3ca220670edba3f" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;file.setWritable(arg)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;file.setWritable(arg)&lt;/code&gt; 形式のこのメソッドの呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="65b93562e93cd954b7c6ef7537a13a065d128669" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;findInLine(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;findInLine(Pattern.compile(pattern))&lt;/code&gt;.</source>
          <target state="translated">このメソッドの &lt;code&gt;findInLine(pattern)&lt;/code&gt; 形式の呼び出しは、 &lt;code&gt;findInLine(Pattern.compile(pattern))&lt;/code&gt; の呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="231464552e119acac1df2df52fc2e73d4a39b504" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;findWithinHorizon(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;findWithinHorizon(Pattern.compile(pattern), horizon)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;findWithinHorizon(pattern)&lt;/code&gt; 形式のこのメソッドの呼び出しは、 &lt;code&gt;findWithinHorizon(Pattern.compile(pattern), horizon)&lt;/code&gt; の呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="2f473aa7c335182d7080b89c3e57c9a2e57017ea" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;findWithinHorizon(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;findWithinHorizon(Pattern.compile(pattern, horizon))&lt;/code&gt;.</source>
          <target state="translated">このメソッドの &lt;code&gt;findWithinHorizon(pattern)&lt;/code&gt; 形式の呼び出しは、 &lt;code&gt;findWithinHorizon(Pattern.compile(pattern, horizon))&lt;/code&gt; の呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="f9b7f1b8e4b46490a2a029e1e7ea5416d8963aa9" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;hasNext(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;hasNext(Pattern.compile(pattern))&lt;/code&gt;.</source>
          <target state="translated">この形式のこのメソッドの &lt;code&gt;hasNext(pattern)&lt;/code&gt; の呼び出しは、呼び出し &lt;code&gt;hasNext(Pattern.compile(pattern))&lt;/code&gt; とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="70aae180cd60cc8ded23f320fe8576b655ce52b3" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;k.isAcceptable()&lt;/code&gt; behaves in exactly the same way as the expression</source>
          <target state="translated">このメソッドの形式 &lt;code&gt;k.isAcceptable()&lt;/code&gt; の呼び出しは、式とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="d578285c972d7adc4e4be45a2ecd03e40cee60b3" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;k.isConnectable()&lt;/code&gt; behaves in exactly the same way as the expression</source>
          <target state="translated">このメソッドの &lt;code&gt;k.isConnectable()&lt;/code&gt; 形式の呼び出しは、式とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="1ced57ab5937e0f66c8de408564c99106fd4f148" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;k.isReadable()&lt;/code&gt; behaves in exactly the same way as the expression</source>
          <target state="translated">このメソッドの &lt;code&gt;k.isReadable()&lt;/code&gt; 形式の呼び出しは、式とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="0bf7e78e722c8d1bd930c76c36c947e4667debb8" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;k.isWritable()&lt;/code&gt; behaves in exactly the same way as the expression</source>
          <target state="translated">このメソッドの形式 &lt;code&gt;k.isWritable()&lt;/code&gt; の呼び出しは、式とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="036d6cd9a12f156945ebdc197bdfa4fa439c5531" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;next(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;next(Pattern.compile(pattern))&lt;/code&gt;.</source>
          <target state="translated">このメソッドの &lt;code&gt;next(pattern)&lt;/code&gt; 形式の呼び出しは、 &lt;code&gt;next(Pattern.compile(pattern))&lt;/code&gt; の呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="34fe06dc7aca7204f15104b3ee1a52a6e98dec05" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;nextBigInteger()&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;nextBigInteger(radix)&lt;/code&gt;, where &lt;code&gt;radix&lt;/code&gt; is the default radix of this scanner.</source>
          <target state="translated">&lt;code&gt;nextBigInteger()&lt;/code&gt; 形式のこのメソッドの呼び出しは、 &lt;code&gt;nextBigInteger(radix)&lt;/code&gt; の呼び出しとまったく同じように動作します。ここで、 &lt;code&gt;radix&lt;/code&gt; はこのスキャナーのデフォルトの基数です。</target>
        </trans-unit>
        <trans-unit id="472566cc72fdeb223f84db15e98f11bc1e99c972" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;nextByte()&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;nextByte(radix)&lt;/code&gt;, where &lt;code&gt;radix&lt;/code&gt; is the default radix of this scanner.</source>
          <target state="translated">&lt;code&gt;nextByte()&lt;/code&gt; 形式のこのメソッドの呼び出しは、 &lt;code&gt;nextByte(radix)&lt;/code&gt; の呼び出しとまったく同じように動作します。ここで、 &lt;code&gt;radix&lt;/code&gt; はこのスキャナーのデフォルトの基数です。</target>
        </trans-unit>
        <trans-unit id="dedac706fed45923934acf3a9494812d3bbaa943" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;nextInt()&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;nextInt(radix)&lt;/code&gt;, where &lt;code&gt;radix&lt;/code&gt; is the default radix of this scanner.</source>
          <target state="translated">&lt;code&gt;nextInt()&lt;/code&gt; 形式のこのメソッドの呼び出しは、 &lt;code&gt;nextInt(radix)&lt;/code&gt; の呼び出しとまったく同じように動作します。ここで、 &lt;code&gt;radix&lt;/code&gt; はこのスキャナーのデフォルトの基数です。</target>
        </trans-unit>
        <trans-unit id="7c3f3951a44b5a3e4ec43bd770efb6d214085940" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;nextLong()&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;nextLong(radix)&lt;/code&gt;, where &lt;code&gt;radix&lt;/code&gt; is the default radix of this scanner.</source>
          <target state="translated">&lt;code&gt;nextLong()&lt;/code&gt; 形式のこのメソッドの呼び出しは、 &lt;code&gt;nextLong(radix)&lt;/code&gt; の呼び出しとまったく同じように動作します。ここで、 &lt;code&gt;radix&lt;/code&gt; はこのスキャナーのデフォルトの基数です。</target>
        </trans-unit>
        <trans-unit id="680c6e4204c37076a31821df6bd40f43857cf718" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;nextShort()&lt;/code&gt; behaves in exactly the same way as the invocation &lt;a href=&quot;#nextShort(int)&quot;&gt;&lt;code&gt;nextShort(radix)&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;radix&lt;/code&gt; is the default radix of this scanner.</source>
          <target state="translated">&lt;code&gt;nextShort()&lt;/code&gt; 形式のこのメソッドの呼び出しは、&lt;a href=&quot;#nextShort(int)&quot;&gt; &lt;code&gt;nextShort(radix)&lt;/code&gt; の&lt;/a&gt;呼び出しとまったく同じように動作します。ここで、 &lt;code&gt;radix&lt;/code&gt; はこのスキャナーのデフォルトの基数です。</target>
        </trans-unit>
        <trans-unit id="afd5481a1c02a9b69e6e566cb3371754672cea3d" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;nextShort()&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;nextShort(radix)&lt;/code&gt;, where &lt;code&gt;radix&lt;/code&gt; is the default radix of this scanner.</source>
          <target state="translated">このメソッドの &lt;code&gt;nextShort()&lt;/code&gt; 形式の呼び出しは、 &lt;code&gt;nextShort(radix)&lt;/code&gt; の呼び出しとまったく同じように動作します。ここで、 &lt;code&gt;radix&lt;/code&gt; はこのスキャナーのデフォルトの基数です。</target>
        </trans-unit>
        <trans-unit id="893399664374adc89d8dfe7abbae4a835e1e9862" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.append(c)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの &lt;code&gt;out.append(c)&lt;/code&gt; 形式の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="2548c2b619458b8bafd604b0b872b084b8292f78" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.append(csq)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの &lt;code&gt;out.append(csq)&lt;/code&gt; 形式の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="d1ee2fe3ba11afd1b66036ed9094637f79174c89" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.append(csq, start, end)&lt;/code&gt; when &lt;code&gt;csq&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;csq&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合のout.append &lt;code&gt;out.append(csq, start, end)&lt;/code&gt; 形式のこのメソッドの呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="78af4601a4ce79cffb952b57d010bfe36afa6733" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.append(csq, start, end)&lt;/code&gt; when &lt;code&gt;csq&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;csq&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合のout.append &lt;code&gt;out.append(csq, start, end)&lt;/code&gt; 形式のこのメソッドの呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="6a46581a8ed3a280aaf0b0a8f51523b4742cdfa8" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.printf(format, args)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの形式 &lt;code&gt;out.printf(format, args)&lt;/code&gt; の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="ddb522558fd6be4d10499d897876d013e970f368" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;out.printf(l, format, args)&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">このメソッドの形式 &lt;code&gt;out.printf(l, format, args)&lt;/code&gt; の呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="4f1f4ec34f54274c3c3a16a3253635894d21da2c" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;props.storeToXML(os,
 comment)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;props.storeToXML(os, comment, &quot;UTF-8&quot;);&lt;/code&gt;.</source>
          <target state="translated">このメソッドのメソッド &lt;code&gt;props.storeToXML(os, comment)&lt;/code&gt; の呼び出しは、呼び出し &lt;code&gt;props.storeToXML(os, comment, &quot;UTF-8&quot;);&lt;/code&gt; とまったく同じように動作します。。</target>
        </trans-unit>
        <trans-unit id="5c396b3c9e7518659888b7c624ec71d35ec4afe5" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;scanner.reset()&lt;/code&gt; behaves in exactly the same way as the invocation</source>
          <target state="translated">&lt;code&gt;scanner.reset()&lt;/code&gt; 形式のこのメソッドの呼び出しは、呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="11038a7482ef7ed4c1596f8daf3aafdfed957002" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;skip(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;skip(Pattern.compile(pattern))&lt;/code&gt;.</source>
          <target state="translated">このメソッドの &lt;code&gt;skip(pattern)&lt;/code&gt; 形式の呼び出しは、 &lt;code&gt;skip(Pattern.compile(pattern))&lt;/code&gt; の呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="39ff8d11d6f443b74aed3b92fe6fdf4ee20f7674" translate="yes" xml:space="preserve">
          <source>An invocation of this method of the form &lt;code&gt;useDelimiter(pattern)&lt;/code&gt; behaves in exactly the same way as the invocation &lt;code&gt;useDelimiter(Pattern.compile(pattern))&lt;/code&gt;.</source>
          <target state="translated">このメソッドの &lt;code&gt;useDelimiter(pattern)&lt;/code&gt; 形式の呼び出しは、 &lt;code&gt;useDelimiter(Pattern.compile(pattern))&lt;/code&gt; の呼び出しとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="2268c27779cfcec451ddef119960d7558d618889" translate="yes" xml:space="preserve">
          <source>An invocation of this method upon a charset &lt;code&gt;cs&lt;/code&gt; returns the same result as the expression</source>
          <target state="translated">文字セット &lt;code&gt;cs&lt;/code&gt; に対するこのメソッドの呼び出しは、式と同じ結果を返します</target>
        </trans-unit>
        <trans-unit id="067cfb030a3c6a3432a1c639d9a8ee76c48dc1f8" translate="yes" xml:space="preserve">
          <source>An invocation of this method will block until the region can be locked, this channel is closed, or the invoking thread is interrupted, whichever comes first.</source>
          <target state="translated">このメソッドの呼び出しは、領域がロックされるか、このチャネルが閉じられるか、または呼び出したスレッドが中断されるまでブロックされます。</target>
        </trans-unit>
        <trans-unit id="e1754bf6e026ade7a16c8dc51da7ee9fb56f4055" translate="yes" xml:space="preserve">
          <source>An item in a list has been deselected.</source>
          <target state="translated">リストの項目が非選択になっています。</target>
        </trans-unit>
        <trans-unit id="dbcc66f4685252c775c85b016dc0d474bf972e49" translate="yes" xml:space="preserve">
          <source>An item in a list has been selected.</source>
          <target state="translated">リストの項目が選択されました。</target>
        </trans-unit>
        <trans-unit id="46a2f4efe8282faea0a43bc45ee5cde11de48441" translate="yes" xml:space="preserve">
          <source>An iterator</source>
          <target state="translated">イテレータ</target>
        </trans-unit>
        <trans-unit id="30c01ec48c8c3133042063ed2bec050cbe411f81" translate="yes" xml:space="preserve">
          <source>An iterator for lists that allows the programmer to traverse the list in either direction, modify the list during iteration, and obtain the iterator's current position in the list.</source>
          <target state="translated">プログラマがリストをどちらの方向にも走査し、反復中にリストを修正し、リスト内でのイテレータの現在位置を取得することができるリスト用のイテレータです。</target>
        </trans-unit>
        <trans-unit id="7163e2066dcdc4e7346bf1c7042e31171b6beb79" translate="yes" xml:space="preserve">
          <source>An iterator for lists that allows the programmer to traverse the list in either direction, modify the list during iteration, and obtain the iterator's current position in the list. A &lt;code&gt;ListIterator&lt;/code&gt; has no current element; its</source>
          <target state="translated">プログラマがリストをいずれかの方向にトラバースし、反復中にリストを変更し、リスト内のイテレータの現在の位置を取得できるようにするリストのイテレータ。A &lt;code&gt;ListIterator&lt;/code&gt; いない現在の要素を持っています。その</target>
        </trans-unit>
        <trans-unit id="7b40a777cfe8e56812070cdfa36c6603ecb5508e" translate="yes" xml:space="preserve">
          <source>An iterator over a collection.</source>
          <target state="translated">コレクションに対するイテレータ。</target>
        </trans-unit>
        <trans-unit id="c65f0de922f07a3303c77f47ed4081799ddd53b0" translate="yes" xml:space="preserve">
          <source>An iterator over a collection. &lt;code&gt;Iterator&lt;/code&gt; takes the place of &lt;a href=&quot;enumeration&quot;&gt;&lt;code&gt;Enumeration&lt;/code&gt;&lt;/a&gt; in the Java Collections Framework. Iterators differ from enumerations in two ways:</source>
          <target state="translated">コレクションに対するイテレータ。 &lt;code&gt;Iterator&lt;/code&gt; は、Javaコレクションフレームワークの&lt;a href=&quot;enumeration&quot;&gt; &lt;code&gt;Enumeration&lt;/code&gt; &lt;/a&gt;の代わりになります。イテレータは、次の2つの点で列挙と異なります。</target>
        </trans-unit>
        <trans-unit id="7a65630601f41a0c9113e2d5b5206c583073dfc0" translate="yes" xml:space="preserve">
          <source>An iterator providing access to the text and its attributes.</source>
          <target state="translated">テキストとその属性へのアクセスを提供するイテレータ。</target>
        </trans-unit>
        <trans-unit id="3f76c08e46cf2960a1257a02fdadfd7779d2904e" translate="yes" xml:space="preserve">
          <source>An iterator that lazily loads providers for this loader's service</source>
          <target state="translated">このローダーのサービスのためにプロバイダを怠惰にロードするイテレータ</target>
        </trans-unit>
        <trans-unit id="23afedeacde9a9bed2fa5c31e151d21af2f2e4ab" translate="yes" xml:space="preserve">
          <source>An iterator to iterate over a particular type of tag.</source>
          <target state="translated">特定のタイプのタグを反復処理するイテレータ。</target>
        </trans-unit>
        <trans-unit id="e126859df76b9d3e65b7cdda664fd4ec93c4fe58" translate="yes" xml:space="preserve">
          <source>An iterator to iterate over a particular type of tag. The iterator is not thread safe. If reliable access to the document is not already ensured by the context under which the iterator is being used, its use should be performed under the protection of Document.render.</source>
          <target state="translated">特定のタイプのタグを反復処理するためのイテレータ。このイテレータはスレッドセーフではありません。イテレータが使用されているコンテキストによってドキュメントへの信頼性の高いアクセスがまだ確保されていない場合、その使用は Document.render の保護の下で実行されなければなりません。</target>
        </trans-unit>
        <trans-unit id="c3857a07c2fe4bc7a3d37d27ab1a441e369abaf1" translate="yes" xml:space="preserve">
          <source>An non-null enumeration of the addresses (&lt;code&gt;RefAddr&lt;/code&gt;) in this reference. If this reference has zero addresses, an enumeration with zero elements is returned.</source>
          <target state="translated">この参照のアドレスの非null列挙（ &lt;code&gt;RefAddr&lt;/code&gt; ）。この参照のアドレスがゼロの場合、要素がゼロの列挙が返されます。</target>
        </trans-unit>
        <trans-unit id="f4e0656df485f239fd79a7e41b58a4c00eebb2fd" translate="yes" xml:space="preserve">
          <source>An object can be registered to listen to multiple lines. The event it receives in its &lt;code&gt;update&lt;/code&gt; method will specify which line created the event, what type of event it was (&lt;code&gt;OPEN&lt;/code&gt;, &lt;code&gt;CLOSE&lt;/code&gt;, &lt;code&gt;START&lt;/code&gt;, or &lt;code&gt;STOP&lt;/code&gt;), and how many sample frames the line had processed at the time the event occurred.</source>
          <target state="translated">オブジェクトは、複数の回線をリッスンするように登録できます。 &lt;code&gt;update&lt;/code&gt; メソッドで受け取るイベントは、イベントを作成したライン、イベントのタイプ（ &lt;code&gt;OPEN&lt;/code&gt; 、 &lt;code&gt;CLOSE&lt;/code&gt; 、 &lt;code&gt;START&lt;/code&gt; 、または &lt;code&gt;STOP&lt;/code&gt; ）、およびイベント発生時にラインが処理したサンプルフレームの数を指定します。</target>
        </trans-unit>
        <trans-unit id="67d5e20df3e00be89dea2fbc83d556b4aa655ffd" translate="yes" xml:space="preserve">
          <source>An object containing a collection of &lt;code&gt;Accessibles&lt;/code&gt; that together represents &lt;code&gt;HTML&lt;/code&gt; content.</source>
          <target state="translated">&lt;code&gt;HTML&lt;/code&gt; コンテンツを一緒に表す &lt;code&gt;Accessibles&lt;/code&gt; のコレクションを含むオブジェクト。</target>
        </trans-unit>
        <trans-unit id="798dfab615a54ab4e98b8fcc9b3daedf86fc2744" translate="yes" xml:space="preserve">
          <source>An object containing a collection of &lt;code&gt;Accessibles&lt;/code&gt; that together represents &lt;code&gt;HTML&lt;/code&gt; content. The child &lt;code&gt;Accessibles&lt;/code&gt; would include objects implementing &lt;code&gt;AccessibleText&lt;/code&gt;, &lt;code&gt;AccessibleHypertext&lt;/code&gt;, &lt;code&gt;AccessibleIcon&lt;/code&gt;, and other interfaces.</source>
          <target state="translated">&lt;code&gt;HTML&lt;/code&gt; コンテンツを一緒に表す &lt;code&gt;Accessibles&lt;/code&gt; のコレクションを含むオブジェクト。子 &lt;code&gt;Accessibles&lt;/code&gt; には、 &lt;code&gt;AccessibleText&lt;/code&gt; 、 &lt;code&gt;AccessibleHypertext&lt;/code&gt; 、 &lt;code&gt;AccessibleIcon&lt;/code&gt; 、およびその他のインターフェイスを実装するオブジェクトが含まれます。</target>
        </trans-unit>
        <trans-unit id="44d1ab8265abc27d4c2b33ceead8243e2955e00f" translate="yes" xml:space="preserve">
          <source>An object created using &lt;code&gt;refInfo&lt;/code&gt; and &lt;code&gt;attrs&lt;/code&gt;; or &lt;code&gt;refInfo&lt;/code&gt; if an object cannot be created by a factory.</source>
          <target state="translated">&lt;code&gt;refInfo&lt;/code&gt; および &lt;code&gt;attrs&lt;/code&gt; を使用して作成されたオブジェクト。または &lt;code&gt;refInfo&lt;/code&gt; オブジェクトは、ファクトリで作成することができない場合。</target>
        </trans-unit>
        <trans-unit id="378e15d1e59f59f0e04a9fb9f800f5ea92710fd2" translate="yes" xml:space="preserve">
          <source>An object created using &lt;code&gt;refInfo&lt;/code&gt;; or &lt;code&gt;refInfo&lt;/code&gt; if an object cannot be created using the algorithm described above.</source>
          <target state="translated">&lt;code&gt;refInfo&lt;/code&gt; を使用して作成されたオブジェクト。あるいは &lt;code&gt;refInfo&lt;/code&gt; の目的は、上述のアルゴリズムを使用して作成することができない場合。</target>
        </trans-unit>
        <trans-unit id="4be5a63b4d53c1802650fc0935a9efa7af1aeb66" translate="yes" xml:space="preserve">
          <source>An object describing the structure of metadata documents returned from &lt;code&gt;IIOMetadata.getAsTree&lt;/code&gt; and passed to &lt;code&gt;IIOMetadata.setFromTree&lt;/code&gt; and &lt;code&gt;mergeTree&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IIOMetadata.getAsTree&lt;/code&gt; から返され、 &lt;code&gt;IIOMetadata.setFromTree&lt;/code&gt; および &lt;code&gt;mergeTree&lt;/code&gt; に渡されるメタデータドキュメントの構造を説明するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="7b3264c7f6084a3ed78f6fe84f90435fb80c17e2" translate="yes" xml:space="preserve">
          <source>An object describing the structure of metadata documents returned from &lt;code&gt;IIOMetadata.getAsTree&lt;/code&gt; and passed to &lt;code&gt;IIOMetadata.setFromTree&lt;/code&gt; and &lt;code&gt;mergeTree&lt;/code&gt;. Document structures are described by a set of constraints on the type and number of child elements that may belong to a given parent element type, the names, types, and values of attributes that may belong to an element, and the type and values of &lt;code&gt;Object&lt;/code&gt; reference that may be stored at a node.</source>
          <target state="translated">&lt;code&gt;IIOMetadata.getAsTree&lt;/code&gt; から返され、 &lt;code&gt;IIOMetadata.setFromTree&lt;/code&gt; および &lt;code&gt;mergeTree&lt;/code&gt; に渡されるメタデータドキュメントの構造を説明するオブジェクト。ドキュメント構造は、特定の親要素タイプに属している可能性のある子要素のタイプと数、要素に属している可能性のある属性の名前、タイプ、値、および &lt;code&gt;Object&lt;/code&gt; タイプと値に対する一連の制約によって記述されます。ノードに格納できる参照。</target>
        </trans-unit>
        <trans-unit id="e013aacb044b75863c3c6acea31e44936e2953c3" translate="yes" xml:space="preserve">
          <source>An object factory must implement the &lt;code&gt;ObjectFactory&lt;/code&gt; interface. In addition, the factory class must be public and must have a public constructor that accepts no parameters.</source>
          <target state="translated">オブジェクトファクトリは、 &lt;code&gt;ObjectFactory&lt;/code&gt; インターフェイスを実装する必要があります。さらに、ファクトリー・クラスはパブリックでなければならず、パラメーターを受け入れないパブリック・コンストラクターを持っている必要があります。</target>
        </trans-unit>
        <trans-unit id="f57634087343f8a40efb2049249c6421bcf47b94" translate="yes" xml:space="preserve">
          <source>An object factory must implement the &lt;code&gt;ObjectFactory&lt;/code&gt; interface. In addition, the factory class must be public and must have a public constructor that accepts no parameters. Note that in cases where the factory is in a named module then it must be in a package which is exported by that module to the &lt;code&gt;java.naming&lt;/code&gt; module.</source>
          <target state="translated">オブジェクトファクトリは、 &lt;code&gt;ObjectFactory&lt;/code&gt; インターフェイスを実装する必要があります。さらに、ファクトリクラスはパブリックである必要があり、パラメータを受け入れないパブリックコンストラクタが必要です。ファクトリが名前付きモジュール内にある場合は、そのモジュールによって &lt;code&gt;java.naming&lt;/code&gt; モジュールにエクスポートされるパッケージ内にある必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="089ae733cee7448ee497359bd6a4038caf4d787a" translate="yes" xml:space="preserve">
          <source>An object for traversing and partitioning elements of a source.</source>
          <target state="translated">ソースの要素をトラバースして分割するためのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="ec4893d8dba0a2ced11efda016fb64cd6463063a" translate="yes" xml:space="preserve">
          <source>An object for traversing and partitioning elements of a source. The source of elements covered by a Spliterator could be, for example, an array, a &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt;, an IO channel, or a generator function.</source>
          <target state="translated">ソースの要素をトラバースおよびパーティション化するためのオブジェクト。Spliteratorがカバーする要素のソースは、たとえば、配列、&lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;、IOチャネル、またはジェネレーター関数などです。</target>
        </trans-unit>
        <trans-unit id="ae0ffd8803b4902460cf76067a1df00f7a716c56" translate="yes" xml:space="preserve">
          <source>An object implementing this interface might not have an address at a given moment. This is indicated by a null return value from &lt;a href=&quot;#getAddress()&quot;&gt;&lt;code&gt;getAddress()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェースを実装するオブジェクトは、特定の時点でアドレスを持っていない可能性があります。これは、&lt;a href=&quot;#getAddress()&quot;&gt; &lt;code&gt;getAddress()&lt;/code&gt; &lt;/a&gt;からのnullの戻り値によって示されます。</target>
        </trans-unit>
        <trans-unit id="822c4cff800d653b1d1750b80615e8884e56a9e9" translate="yes" xml:space="preserve">
          <source>An object implementing this interface might not have an address at a given moment. This is indicated by a null return value from &lt;a href=&quot;jmxaddressable#getAddress--&quot;&gt;&lt;code&gt;getAddress()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェイスを実装するオブジェクトは、特定の瞬間にアドレスを持たない場合があります。これは、&lt;a href=&quot;jmxaddressable#getAddress--&quot;&gt; &lt;code&gt;getAddress()&lt;/code&gt; &lt;/a&gt;からのnull戻り値によって示されます。</target>
        </trans-unit>
        <trans-unit id="b5e76341f33e31cb5825ebfd987cffad5cfcfff6" translate="yes" xml:space="preserve">
          <source>An object name</source>
          <target state="translated">オブジェクト名</target>
        </trans-unit>
        <trans-unit id="433c19c3e71b265e5f820d8f91a6f1feddfb77c3" translate="yes" xml:space="preserve">
          <source>An object name consists of two parts, the domain and the key properties.</source>
          <target state="translated">オブジェクト名は、ドメインとキープロパティの2つの部分から構成されます。</target>
        </trans-unit>
        <trans-unit id="fd629ac5ff0470aa5c363300117872323e52e0a0" translate="yes" xml:space="preserve">
          <source>An object name is a pattern if its domain contains a wildcard or if the object name is a property pattern.</source>
          <target state="translated">オブジェクト名は、そのドメインにワイルドカードが含まれている場合、またはオブジェクト名がプロパティ・パターンである場合にパターンとなります。</target>
        </trans-unit>
        <trans-unit id="05470ddffcb8a35ab6b96946eef277986e02cfcd" translate="yes" xml:space="preserve">
          <source>An object name is a pattern on the key properties if it is a pattern on the key property list (e.g. &quot;d:k=v,*&quot;) or on the property values (e.g. &quot;d:k=*&quot;) or on both (e.g. &quot;d:k=*,*&quot;).</source>
          <target state="translated">オブジェクト名は、キープロパティリスト上のパターン(例:&quot;d:k=v,*&quot;)、またはプロパティ値(例:&quot;d:k=*&quot;)、またはその両方(例:&quot;d:k=*,*&quot;)であれば、キープロパティ上のパターンとなります。</target>
        </trans-unit>
        <trans-unit id="1cf02b2bea44bfe8dfb70b6e7da917173f69cf17" translate="yes" xml:space="preserve">
          <source>An object name pattern, within the context of a query</source>
          <target state="translated">クエリのコンテキスト内でのオブジェクト名パターン</target>
        </trans-unit>
        <trans-unit id="837f61ef5bacedbc57cc34635bd28def1073a601" translate="yes" xml:space="preserve">
          <source>An object obtained from the &lt;a href=&quot;mbeanserverfactory#createMBeanServer(java.lang.String)&quot;&gt;&lt;code&gt;createMBeanServer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mbeanserverfactory#newMBeanServer(java.lang.String)&quot;&gt;&lt;code&gt;newMBeanServer&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; class applies security checks to its methods, as follows.</source>
          <target state="translated">&lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; &lt;/a&gt;クラスの&lt;a href=&quot;mbeanserverfactory#createMBeanServer(java.lang.String)&quot;&gt; &lt;code&gt;createMBeanServer&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;mbeanserverfactory#newMBeanServer(java.lang.String)&quot;&gt; &lt;code&gt;newMBeanServer&lt;/code&gt; &lt;/a&gt;メソッドから取得されたオブジェクトは、次のようにそのメソッドにセキュリティチェックを適用します。</target>
        </trans-unit>
        <trans-unit id="8cb0d83d9f78c2d1fb7ca4ca8d0a5dc38abb04ac" translate="yes" xml:space="preserve">
          <source>An object obtained from the &lt;a href=&quot;mbeanserverfactory#createMBeanServer-java.lang.String-&quot;&gt;&lt;code&gt;createMBeanServer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mbeanserverfactory#newMBeanServer-java.lang.String-&quot;&gt;&lt;code&gt;newMBeanServer&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; class applies security checks to its methods, as follows.</source>
          <target state="translated">&lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; &lt;/a&gt;クラスの&lt;a href=&quot;mbeanserverfactory#createMBeanServer-java.lang.String-&quot;&gt; &lt;code&gt;createMBeanServer&lt;/code&gt; メソッド&lt;/a&gt;または&lt;a href=&quot;mbeanserverfactory#newMBeanServer-java.lang.String-&quot;&gt; &lt;code&gt;newMBeanServer&lt;/code&gt; &lt;/a&gt;メソッドから取得したオブジェクトは、次のように、そのメソッドにセキュリティチェックを適用します。</target>
        </trans-unit>
        <trans-unit id="dd1deddcc8809957374bc776a45093ed0177833e" translate="yes" xml:space="preserve">
          <source>An object of this class implements the MBeanServer interface and wraps another object that also implements that interface.</source>
          <target state="translated">このクラスのオブジェクトは MBeanServer インターフェースを実装し、そのインターフェースを実装した別のオブジェクトをラップします。</target>
        </trans-unit>
        <trans-unit id="0dce6e4c3869afcda8eddc6634096332fbd35bbb" translate="yes" xml:space="preserve">
          <source>An object of this class implements the MBeanServer interface and wraps another object that also implements that interface. Typically, an implementation of this interface performs some action in some or all methods of the &lt;code&gt;MBeanServer&lt;/code&gt; interface before and/or after forwarding the method to the wrapped object. Examples include security checking and logging.</source>
          <target state="translated">このクラスのオブジェクトはMBeanServerインターフェースを実装し、そのインターフェースを実装する別のオブジェクトをラップします。通常、このインターフェースの実装は、ラップされたオブジェクトにメソッドを転送する前または後に、 &lt;code&gt;MBeanServer&lt;/code&gt; インターフェースの一部またはすべてのメソッドで何らかのアクションを実行します。例としては、セキュリティチェックやロギングなどがあります。</target>
        </trans-unit>
        <trans-unit id="48ab386810c92e6abe6f1370449e8ebba2c7330a" translate="yes" xml:space="preserve">
          <source>An object of this class may not be used in multiple threads running concurrently. Different Transformers may be used concurrently by different threads.</source>
          <target state="translated">このクラスのオブジェクトは、同時に実行されている複数のスレッドで使用することはできません。異なるスレッドで異なるトランスフォーマーが同時に使用されることがあります。</target>
        </trans-unit>
        <trans-unit id="240a8f206940b1e43169eefe880290b86f0b943d" translate="yes" xml:space="preserve">
          <source>An object of this interface is not required to support multi-threaded access, that is, be synchronized. However, it must support concurrent access to different file objects created by this object.</source>
          <target state="translated">このインタフェースのオブジェクトは、マルチスレッドアクセスをサポートする必要はありません。しかし、このオブジェクトによって作成された異なるファイルオブジェクトへの同時アクセスをサポートしなければなりません。</target>
        </trans-unit>
        <trans-unit id="53e1907bb5670cf7de3b399b28ac0c952d32b275" translate="yes" xml:space="preserve">
          <source>An object reference that may be updated atomically.</source>
          <target state="translated">アトミックに更新される可能性のあるオブジェクト参照。</target>
        </trans-unit>
        <trans-unit id="b282f1acf58b5c0007ce02dce4a3c7759eebee94" translate="yes" xml:space="preserve">
          <source>An object reference that may be updated atomically. See the &lt;a href=&quot;../../../lang/invoke/varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; specification for descriptions of the properties of atomic accesses.</source>
          <target state="translated">アトミックに更新される可能性のあるオブジェクト参照。アトミックアクセスのプロパティの説明については、&lt;a href=&quot;../../../lang/invoke/varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt;仕様を参照してください。</target>
        </trans-unit>
        <trans-unit id="f67a5489963349154cda78c5255744fe3bf0a4c8" translate="yes" xml:space="preserve">
          <source>An object reference that may be updated atomically. See the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;java.util.concurrent.atomic&lt;/code&gt;&lt;/a&gt; package specification for description of the properties of atomic variables.</source>
          <target state="translated">アトミックに更新できるオブジェクト参照。アトミック変数のプロパティの説明については、&lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;java.util.concurrent.atomic&lt;/code&gt; &lt;/a&gt;パッケージ仕様を参照してください。</target>
        </trans-unit>
        <trans-unit id="ab19b2ba153a4e5fd72459733d7e0291c256a1b4" translate="yes" xml:space="preserve">
          <source>An object reference to an array of type defined by getTransferType() with the requested pixel data.</source>
          <target state="translated">要求されたピクセルデータを持つ getTransferType()で定義された型の配列へのオブジェクト参照。</target>
        </trans-unit>
        <trans-unit id="a54a2ac6fb925677d004e71dbb11ce5bdf1ad37f" translate="yes" xml:space="preserve">
          <source>An object that allows a user to incrementally view a large amount of information.</source>
          <target state="translated">大量の情報をインクリメンタルに表示することができるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="eddaca345a8359e17a63ead6e93561d7395e916d" translate="yes" xml:space="preserve">
          <source>An object that allows a user to incrementally view a large amount of information. Its children can include scroll bars and a viewport.</source>
          <target state="translated">ユーザーが大量の情報をインクリメンタルに表示できるようにするオブジェクト。その子オブジェクトには、スクロールバーやビューポートが含まれます。</target>
        </trans-unit>
        <trans-unit id="1b9ec020697674c45121e41df9aec985f5a16b05" translate="yes" xml:space="preserve">
          <source>An object that allows the user to select from a bounded range.</source>
          <target state="translated">ユーザーが制限された範囲から選択できるようにするオブジェクト。</target>
        </trans-unit>
        <trans-unit id="162caf430131a58d85eb72ef4bae96bb0571f50c" translate="yes" xml:space="preserve">
          <source>An object that allows the user to select from a bounded range. For example, a slider might be used to select a number between 0 and 100.</source>
          <target state="translated">ユーザーが制限された範囲から選択できるようにするオブジェクト。例えば、スライダは0から100の間の数値を選択するために使用されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="748e457c961fa0e96242cb71b37113485f4c30ea" translate="yes" xml:space="preserve">
          <source>An object that can be used to get information about the types and properties for each parameter marker in a &lt;code&gt;PreparedStatement&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;PreparedStatement&lt;/code&gt; オブジェクトの各パラメーターマーカーのタイプとプロパティに関する情報を取得するために使用できるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="81ee5e80e8bf57eedfe2e2956ed70028df73e78e" translate="yes" xml:space="preserve">
          <source>An object that can be used to get information about the types and properties for each parameter marker in a &lt;code&gt;PreparedStatement&lt;/code&gt; object. For some queries and driver implementations, the data that would be returned by a &lt;code&gt;ParameterMetaData&lt;/code&gt; object may not be available until the &lt;code&gt;PreparedStatement&lt;/code&gt; has been executed.</source>
          <target state="translated">&lt;code&gt;PreparedStatement&lt;/code&gt; オブジェクトの各パラメーターマーカーのタイプとプロパティに関する情報を取得するために使用できるオブジェクト。一部のクエリおよびドライバーの実装では、 &lt;code&gt;ParameterMetaData&lt;/code&gt; オブジェクトによって返されるデータは、 &lt;code&gt;PreparedStatement&lt;/code&gt; が実行されるまで使用できない場合があります。</target>
        </trans-unit>
        <trans-unit id="bbb153ce913758173257a36075496cb8879b487e" translate="yes" xml:space="preserve">
          <source>An object that can be used to get information about the types and properties of the columns in a &lt;code&gt;ResultSet&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; オブジェクトの列のタイプとプロパティに関する情報を取得するために使用できるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="d12b4cf46f80d94225bc06e4f4c863c951df9141" translate="yes" xml:space="preserve">
          <source>An object that can be used to get information about the types and properties of the columns in a &lt;code&gt;ResultSet&lt;/code&gt; object. The following code fragment creates the &lt;code&gt;ResultSet&lt;/code&gt; object rs, creates the &lt;code&gt;ResultSetMetaData&lt;/code&gt; object rsmd, and uses rsmd to find out how many columns rs has and whether the first column in rs can be used in a &lt;code&gt;WHERE&lt;/code&gt; clause.</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; オブジェクトの列のタイプとプロパティに関する情報を取得するために使用できるオブジェクト。次のコードフラグメントは、 &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトrsを作成し、 &lt;code&gt;ResultSetMetaData&lt;/code&gt; オブジェクトrsmdを作成し、rsmdを使用して、rsの列数と、rsの最初の列を &lt;code&gt;WHERE&lt;/code&gt; 句で使用できるかどうかを調べます。</target>
        </trans-unit>
        <trans-unit id="b73a5104122da833a98317f27239fc3e4154b0ba" translate="yes" xml:space="preserve">
          <source>An object that configures how to copy or move a file.</source>
          <target state="translated">ファイルをコピーまたは移動する方法を設定するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="0c5a8aa3a347dba34a3344510991043eb9879ec6" translate="yes" xml:space="preserve">
          <source>An object that configures how to open or create a file.</source>
          <target state="translated">ファイルを開く、または作成する方法を設定するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="4acc9994b8b892b5aa8072fb18595bec81840247" translate="yes" xml:space="preserve">
          <source>An object that contains information about the columns in a &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; オブジェクトの列に関する情報を含むオブジェクト。</target>
        </trans-unit>
        <trans-unit id="e3bd94db86d65efb597e6baa0d6fe51759f14f6a" translate="yes" xml:space="preserve">
          <source>An object that contains information about the columns in a &lt;code&gt;RowSet&lt;/code&gt; object. This interface is an extension of the &lt;code&gt;ResultSetMetaData&lt;/code&gt; interface with methods for setting the values in a &lt;code&gt;RowSetMetaData&lt;/code&gt; object. When a &lt;code&gt;RowSetReader&lt;/code&gt; object reads data into a &lt;code&gt;RowSet&lt;/code&gt; object, it creates a &lt;code&gt;RowSetMetaData&lt;/code&gt; object and initializes it using the methods in the &lt;code&gt;RowSetMetaData&lt;/code&gt; interface. Then the reader passes the &lt;code&gt;RowSetMetaData&lt;/code&gt; object to the rowset.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; オブジェクトの列に関する情報を含むオブジェクト。このインターフェイスは、 &lt;code&gt;RowSetMetaData&lt;/code&gt; オブジェクトの値を設定するためのメソッドを備えた &lt;code&gt;ResultSetMetaData&lt;/code&gt; インターフェイスの拡張です。場合 &lt;code&gt;RowSetReader&lt;/code&gt; のオブジェクトはにデータを読み出す &lt;code&gt;RowSet&lt;/code&gt; オブジェクトは、作成され &lt;code&gt;RowSetMetaData&lt;/code&gt; オブジェクトとのメソッド使用して初期化し &lt;code&gt;RowSetMetaData&lt;/code&gt; インターフェイスを。次に、リーダーは &lt;code&gt;RowSetMetaData&lt;/code&gt; オブジェクトを行セットに渡します。</target>
        </trans-unit>
        <trans-unit id="baa73d9cb6577c25eeaf1bbcdbea53e363a73739" translate="yes" xml:space="preserve">
          <source>An object that creates new threads on demand.</source>
          <target state="translated">必要に応じて新しいスレッドを作成するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="e2e5598cc79e2405a2ab0a29cc9e835864281803" translate="yes" xml:space="preserve">
          <source>An object that creates new threads on demand. Using thread factories removes hardwiring of calls to &lt;a href=&quot;../../lang/thread#%3Cinit%3E(java.lang.Runnable)&quot;&gt;&lt;code&gt;new Thread&lt;/code&gt;&lt;/a&gt;, enabling applications to use special thread subclasses, priorities, etc.</source>
          <target state="translated">オンデマンドで新しいスレッドを作成するオブジェクト。スレッドファクトリを使用すると、&lt;a href=&quot;../../lang/thread#%3Cinit%3E(java.lang.Runnable)&quot;&gt; &lt;code&gt;new Thread&lt;/code&gt; &lt;/a&gt;への呼び出しのハードワイヤリングがなくなり、アプリケーションで特別なスレッドサブクラスや優先度などを使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="fecb9ccdca9a57efe7bf24ddea3d86d99e52eaad" translate="yes" xml:space="preserve">
          <source>An object that creates new threads on demand. Using thread factories removes hardwiring of calls to &lt;a href=&quot;../../lang/thread#Thread-java.lang.Runnable-&quot;&gt;&lt;code&gt;new Thread&lt;/code&gt;&lt;/a&gt;, enabling applications to use special thread subclasses, priorities, etc.</source>
          <target state="translated">オンデマンドで新しいスレッドを作成するオブジェクト。スレッドファクトリを使用すると、&lt;a href=&quot;../../lang/thread#Thread-java.lang.Runnable-&quot;&gt; &lt;code&gt;new Thread&lt;/code&gt; &lt;/a&gt;への呼び出しのハードワイヤリングが削除され、アプリケーションで特別なスレッドサブクラスや優先順位などを使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="691c459c3cc70c54b0121137887f2b4c76ab1ed8" translate="yes" xml:space="preserve">
          <source>An object that encapsulates the value of a file attribute that can be set atomically when creating a new file or directory by invoking the &lt;a href=&quot;../files#createFile(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;createFile&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../files#createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;createDirectory&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">起動して、新しいファイルやディレクトリの作成時にアトミックに設定することができ、ファイルの属性の値がカプセル化するオブジェクト&lt;a href=&quot;../files#createFile(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;createFile&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../files#createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;createDirectory&lt;/code&gt; &lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="68795f2f7e60b01783194bdbeb5daaf7c88c509a" translate="yes" xml:space="preserve">
          <source>An object that encapsulates the value of a file attribute that can be set atomically when creating a new file or directory by invoking the &lt;a href=&quot;../files#createFile-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createFile&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../files#createDirectory-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createDirectory&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">起動して、新しいファイルやディレクトリの作成時にアトミックに設定することができ、ファイルの属性の値がカプセル化するオブジェクト&lt;a href=&quot;../files#createFile-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createFile&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../files#createDirectory-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createDirectory&lt;/code&gt; &lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="7e8ced9a706b96ed0aa5b962f302609cb380b77d" translate="yes" xml:space="preserve">
          <source>An object that executes submitted &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; tasks.</source>
          <target state="translated">送信された&lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt;タスクを実行するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="f176fdc8e2dbfeaf0ddb3d17a694eac710a60664" translate="yes" xml:space="preserve">
          <source>An object that executes submitted &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; tasks. This interface provides a way of decoupling task submission from the mechanics of how each task will be run, including details of thread use, scheduling, etc. An &lt;code&gt;Executor&lt;/code&gt; is normally used instead of explicitly creating threads. For example, rather than invoking &lt;code&gt;new Thread(new RunnableTask()).start()&lt;/code&gt; for each of a set of tasks, you might use:</source>
          <target state="translated">実行が提出されているオブジェクト&lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt;タスクを。このインターフェースは、スレッドの使用、スケジューリングなどの詳細を含む、各タスクの実行方法のメカニズムからタスクの送信を分離する方法を提供します。通常、スレッドを明示的に作成する代わりに、 &lt;code&gt;Executor&lt;/code&gt; が使用されます。たとえば、タスクのセットごとに &lt;code&gt;new Thread(new RunnableTask()).start()&lt;/code&gt; を呼び出すのではなく、次を使用できます。</target>
        </trans-unit>
        <trans-unit id="2e4b40b397a01cef4b65e5f0953de042b9dd08a3" translate="yes" xml:space="preserve">
          <source>An object that executes submitted &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; tasks. This interface provides a way of decoupling task submission from the mechanics of how each task will be run, including details of thread use, scheduling, etc. An &lt;code&gt;Executor&lt;/code&gt; is normally used instead of explicitly creating threads. For example, rather than invoking &lt;code&gt;new Thread(new(RunnableTask())).start()&lt;/code&gt; for each of a set of tasks, you might use:</source>
          <target state="translated">送信された&lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt;タスクを実行するオブジェクト。このインターフェイスは、スレッドの使用、スケジューリングなどの詳細を含む、各タスクの実行方法のメカニズムからタスクの送信を分離する方法を提供します。通常、明示的にスレッドを作成する代わりに &lt;code&gt;Executor&lt;/code&gt; が使用されます。たとえば、一連のタスクごとに &lt;code&gt;new Thread(new(RunnableTask())).start()&lt;/code&gt; を呼び出すのではなく、次を使用できます。</target>
        </trans-unit>
        <trans-unit id="855b9f0415a9765b27d32947725b30a3dada1470" translate="yes" xml:space="preserve">
          <source>An object that fills up space in a user interface.</source>
          <target state="translated">ユーザーインターフェースのスペースを埋めるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="98ec68e9b95957ec318581471c0366b9a6c2bb1f" translate="yes" xml:space="preserve">
          <source>An object that fills up space in a user interface. It is often used in interfaces to tweak the spacing between components, but serves no other purpose.</source>
          <target state="translated">ユーザーインターフェースのスペースを埋めるオブジェクト。コンポーネント間の間隔を調整するためにインターフェイスでよく使われますが、それ以外の目的はありません。</target>
        </trans-unit>
        <trans-unit id="61b817a9a63e896b175b8e326cc30a2eae903326" translate="yes" xml:space="preserve">
          <source>An object that implements the &lt;code&gt;Blob&lt;/code&gt; interface</source>
          <target state="translated">&lt;code&gt;Blob&lt;/code&gt; インターフェースを実装するオブジェクト</target>
        </trans-unit>
        <trans-unit id="3ea86d35803b3082e850d983d87b87054c2df524" translate="yes" xml:space="preserve">
          <source>An object that implements the &lt;code&gt;Clob&lt;/code&gt; interface</source>
          <target state="translated">&lt;code&gt;Clob&lt;/code&gt; インターフェースを実装するオブジェクト</target>
        </trans-unit>
        <trans-unit id="f403d13c35bfa4370583ca25bc8ee38f7e0c0910" translate="yes" xml:space="preserve">
          <source>An object that implements the &lt;code&gt;NClob&lt;/code&gt; interface</source>
          <target state="translated">&lt;code&gt;NClob&lt;/code&gt; インターフェースを実装するオブジェクト</target>
        </trans-unit>
        <trans-unit id="9c087c306c94391c1d3de7e5e0375c22e98aef60" translate="yes" xml:space="preserve">
          <source>An object that implements the &lt;code&gt;RowSetWriter&lt;/code&gt; interface, called a</source>
          <target state="translated">&lt;code&gt;RowSetWriter&lt;/code&gt; インターフェイスを実装するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="f03dd2a535f2b4ed4c560f71033db9105f1dad87" translate="yes" xml:space="preserve">
          <source>An object that implements the &lt;code&gt;SQLXML&lt;/code&gt; interface</source>
          <target state="translated">&lt;code&gt;SQLXML&lt;/code&gt; インターフェイスを実装するオブジェクト</target>
        </trans-unit>
        <trans-unit id="fbb8ac550e63caad681d90c054d0fa20987b5087" translate="yes" xml:space="preserve">
          <source>An object that implements the Enumeration interface generates a series of elements, one at a time.</source>
          <target state="translated">Enumeration インターフェースを実装したオブジェクトは、一連の要素を一度に一つずつ生成します。</target>
        </trans-unit>
        <trans-unit id="99c80014816ae83e53dc8ddea1c90482dd825a2c" translate="yes" xml:space="preserve">
          <source>An object that implements the Enumeration interface generates a series of elements, one at a time. Successive calls to the &lt;code&gt;nextElement&lt;/code&gt; method return successive elements of the series.</source>
          <target state="translated">Enumerationインターフェースを実装するオブジェクトは、一度に1つずつ一連の要素を生成します。 &lt;code&gt;nextElement&lt;/code&gt; メソッドを連続して呼び出すと、系列の連続する要素が返されます。</target>
        </trans-unit>
        <trans-unit id="229ce0f1ebfe2565553fe4a4cc5259e2249015e2" translate="yes" xml:space="preserve">
          <source>An object that implements the URIResolver interface, or null.</source>
          <target state="translated">URIResolver インターフェースを実装したオブジェクト、または null。</target>
        </trans-unit>
        <trans-unit id="b283989836bdc01baed1caa1aa166affff6f61ac" translate="yes" xml:space="preserve">
          <source>An object that implements this interface contains the information needed to act as source input (XML source or transformation instructions).</source>
          <target state="translated">このインターフェイスを実装するオブジェクトは、ソース入力(XMLソースまたは変換命令)として動作するために必要な情報を含んでいます。</target>
        </trans-unit>
        <trans-unit id="ffa45c27f787bf82652a4d0de822dcda408f5ff2" translate="yes" xml:space="preserve">
          <source>An object that implements this interface contains the information needed to build a transformation result tree.</source>
          <target state="translated">このインターフェイスを実装するオブジェクトには、変換結果ツリーを構築するために必要な情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="685a4060e3af7943d32ab64fa788f3d12b3ff5fd" translate="yes" xml:space="preserve">
          <source>An object that implements this interface is the runtime representation of processed transformation instructions.</source>
          <target state="translated">このインターフェイスを実装したオブジェクトは、処理された変換命令のランタイム表現です。</target>
        </trans-unit>
        <trans-unit id="fcf0139849a0d7277c7a84ad7a67be207e2a9b1e" translate="yes" xml:space="preserve">
          <source>An object that implements this interface that can be called by the processor to turn a URI used in document(), xsl:import, or xsl:include into a Source object.</source>
          <target state="translated">document()、xsl:import、または xsl:include で使用される URI を Source オブジェクトに変換するためにプロセッサによって呼び出されることができる、このインターフェイスを実装したオブジェクト。</target>
        </trans-unit>
        <trans-unit id="14fd745504f4a3c7a3d98ca92ff8ff2d8ea7dd4f" translate="yes" xml:space="preserve">
          <source>An object that is a child of a page tab list.</source>
          <target state="translated">ページタブリストの子オブジェクト。</target>
        </trans-unit>
        <trans-unit id="7c2dcf99f7e6ce85eab050570c01504a7c02f33a" translate="yes" xml:space="preserve">
          <source>An object that is a child of a page tab list. Its sole child is the panel that is to be presented to the user when the user selects the page tab from the list of tabs in the page tab list.</source>
          <target state="translated">ページタブリストの子オブジェクト。その唯一の子は、ユーザーがページタブリストのタブリストからページタブを選択したときにユーザーに表示されるパネルです。</target>
        </trans-unit>
        <trans-unit id="41a0378a08e284b7ca3cf3cd75b9e62aee796b22" translate="yes" xml:space="preserve">
          <source>An object that is a hyperlink should support the &lt;a href=&quot;accessiblehyperlink&quot;&gt;AccessibleHyperlink&lt;/a&gt; interface. An object that implements this interface will be returned by calling the getLink method on an &lt;a href=&quot;#AccessibleHypertext&quot;&gt;AccessibleHypertext&lt;/a&gt; object.</source>
          <target state="translated">ハイパーリンクであるオブジェクトは、&lt;a href=&quot;accessiblehyperlink&quot;&gt;AccessibleHyperlink&lt;/a&gt;インターフェイスをサポートする必要があります。このインターフェイスを実装するオブジェクトは、&lt;a href=&quot;#AccessibleHypertext&quot;&gt;AccessibleHypertext&lt;/a&gt;オブジェクトでgetLinkメソッドを呼び出すことによって返されます。</target>
        </trans-unit>
        <trans-unit id="9b90af666e802aa7db22ef2cc2830cedd5c17274" translate="yes" xml:space="preserve">
          <source>An object that is used to identify a generic SQL type, called a JDBC type or a vendor specific data type.</source>
          <target state="translated">JDBC 型またはベンダー固有のデータ型と呼ばれる一般的な SQL 型を識別するために使用されるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="c62fc483de76bbde6310a4b617fe933a48084fd9" translate="yes" xml:space="preserve">
          <source>An object that maps keys to values.</source>
          <target state="translated">キーを値にマップするオブジェクト。</target>
        </trans-unit>
        <trans-unit id="bba440e18e500e6a4eb82cadff113d789d16d140" translate="yes" xml:space="preserve">
          <source>An object that maps keys to values. A map cannot contain duplicate keys; each key can map to at most one value.</source>
          <target state="translated">キーを値にマップするオブジェクト。マップには重複したキーを含めることはできません。</target>
        </trans-unit>
        <trans-unit id="95b6564de4e961b7d6860dcbd492ab6718ccccd5" translate="yes" xml:space="preserve">
          <source>An object that may be registered with a watch service so that it can be &lt;em&gt;watched&lt;/em&gt; for changes and events.</source>
          <target state="translated">変更やイベントを&lt;em&gt;監視&lt;/em&gt;できるように監視サービスに登録できるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="c85afa040116ca1b1324df2e9f54a59ea1660f59" translate="yes" xml:space="preserve">
          <source>An object that may be used to locate a file in a file system.</source>
          <target state="translated">ファイルシステム内のファイルの位置を特定するために使用される可能性のあるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="f62715cd392fb8062bde89dca57a59b321bb38f2" translate="yes" xml:space="preserve">
          <source>An object that may be used to locate a file in a file system. It will typically represent a system dependent file path.</source>
          <target state="translated">ファイルシステム内のファイルの位置を特定するために使用される可能性のあるオブジェクト。これは通常、システム依存のファイルパスを表します。</target>
        </trans-unit>
        <trans-unit id="383ddb1c9e1c609174e1d6571a912022d6ee489a" translate="yes" xml:space="preserve">
          <source>An object that may hold resources (such as file or socket handles) until it is closed.</source>
          <target state="translated">リソース(ファイルやソケットハンドルなど)をクローズするまで保持することができるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="cc95e80ba51ca040410b220081244e2ec6005541" translate="yes" xml:space="preserve">
          <source>An object that may hold resources (such as file or socket handles) until it is closed. The &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method of an &lt;code&gt;AutoCloseable&lt;/code&gt; object is called automatically when exiting a &lt;code&gt;
 try&lt;/code&gt;-with-resources block for which the object has been declared in the resource specification header. This construction ensures prompt release, avoiding resource exhaustion exceptions and errors that may otherwise occur.</source>
          <target state="translated">閉じられるまでリソース（ファイルまたはソケットハンドルなど）を保持する可能性のあるオブジェクト。 &lt;code&gt;AutoCloseable&lt;/code&gt; オブジェクトの&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドは、オブジェクトがリソース仕様ヘッダーで宣言されている &lt;code&gt; try&lt;/code&gt; - with -resourcesブロックを終了するときに自動的に呼び出されます。この構造により、迅速なリリースが保証され、リソース枯渇の例外やエラーが発生する可能性がなくなります。</target>
        </trans-unit>
        <trans-unit id="65c7adf181c0da78229a911c614313de0051416f" translate="yes" xml:space="preserve">
          <source>An object that may hold resources (such as file or socket handles) until it is closed. The &lt;a href=&quot;autocloseable#close--&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method of an &lt;code&gt;AutoCloseable&lt;/code&gt; object is called automatically when exiting a &lt;code&gt;try&lt;/code&gt;-with-resources block for which the object has been declared in the resource specification header. This construction ensures prompt release, avoiding resource exhaustion exceptions and errors that may otherwise occur.</source>
          <target state="translated">閉じられるまでリソース（ファイルまたはソケットハンドルなど）を保持できるオブジェクト。 &lt;code&gt;AutoCloseable&lt;/code&gt; オブジェクトの&lt;a href=&quot;autocloseable#close--&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドは、リソース仕様ヘッダーでオブジェクトが宣言されている &lt;code&gt;try&lt;/code&gt; -with-resourcesブロックを終了すると自動的に呼び出されます。この構造により、迅速なリリースが保証され、リソース不足の例外やその他のエラーが回避されます。</target>
        </trans-unit>
        <trans-unit id="6052652d66a1927639c96789cf28f3f73be035c7" translate="yes" xml:space="preserve">
          <source>An object that presents a list of objects to the user and allows the user to select one or more of them.</source>
          <target state="translated">オブジェクトのリストをユーザに提示し、ユーザが1つ以上のオブジェクトを選択できるようにするオブジェクト。</target>
        </trans-unit>
        <trans-unit id="74c163902cfa6ae17892c8a53c434500912d3355" translate="yes" xml:space="preserve">
          <source>An object that presents a list of objects to the user and allows the user to select one or more of them. A list is usually contained within a scroll pane.</source>
          <target state="translated">オブジェクトのリストをユーザに提示し、その中から1つ以上を選択できるようにするオブジェクト。リストは通常、スクロール ペインの中に含まれます。</target>
        </trans-unit>
        <trans-unit id="3a73fdffc5dc2f73308f9f693295e313badbde34" translate="yes" xml:space="preserve">
          <source>An object that presents a series of panels (or page tabs), one at a time, through some mechanism provided by the object.</source>
          <target state="translated">オブジェクトによって提供される何らかのメカニズムを介して、一連のパネル(またはページタブ)を一度に一つずつ表示するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="7b13dd1417701bd36e098a181db7d0a7f5fad0e6" translate="yes" xml:space="preserve">
          <source>An object that presents a series of panels (or page tabs), one at a time, through some mechanism provided by the object. The most common mechanism is a list of tabs at the top of the panel. The children of a page tab list are all page tabs.</source>
          <target state="translated">オブジェクトによって提供される何らかのメカニズムによって、一連のパネル(またはページタブ)を一度に一つずつ表示するオブジェクト。最も一般的なメカニズムは、パネルの上部にあるタブのリストです。ページタブリストの子はすべてのページタブです。</target>
        </trans-unit>
        <trans-unit id="45fd55d512e6fe8b7303c6195e241414108649b8" translate="yes" xml:space="preserve">
          <source>An object that presents an element in a list.</source>
          <target state="translated">リスト内の要素を提示するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="e3b1a708920df63e28292915adf24898791ed534" translate="yes" xml:space="preserve">
          <source>An object that presents an element in a list. A list is usually contained within a scroll pane.</source>
          <target state="translated">リストの中の要素を表示するオブジェクト。リストは通常、スクロール ペインの中に含まれます。</target>
        </trans-unit>
        <trans-unit id="db5d99fdea838bc6969f0f59a3c325d88f3d6a2f" translate="yes" xml:space="preserve">
          <source>An object that presents text to the user.</source>
          <target state="translated">ユーザーにテキストを提示するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="8f676601e32b8726a2abb96aae29db3f90d33c06" translate="yes" xml:space="preserve">
          <source>An object that presents text to the user. The text is usually editable by the user as opposed to a label.</source>
          <target state="translated">ユーザーにテキストを提示するオブジェクト。テキストは通常、ラベルとは対照的にユーザが編集可能です。</target>
        </trans-unit>
        <trans-unit id="b6b1fd0c0c3293cf8862df8dfdfd80a0d0a4a12a" translate="yes" xml:space="preserve">
          <source>An object that provides a read-only or updatable &lt;em&gt;view&lt;/em&gt; of non-opaque values associated with an object in a filesystem.</source>
          <target state="translated">ファイルシステム内のオブジェクトに関連付けられた不透明でない値の読み取り専用または更新可能な&lt;em&gt;ビュー&lt;/em&gt;を提供するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="3ba87fb1d278ad83f994b8b49e0132de8a36d1f5" translate="yes" xml:space="preserve">
          <source>An object that provides a read-only or updatable &lt;em&gt;view&lt;/em&gt; of non-opaque values associated with an object in a filesystem. This interface is extended or implemented by specific attribute views that define the attributes supported by the view. A specific attribute view will typically define type-safe methods to read or update the attributes that it supports.</source>
          <target state="translated">ファイルシステム内のオブジェクトに関連付けられた不透明でない値の読み取り専用または更新可能な&lt;em&gt;ビュー&lt;/em&gt;を提供するオブジェクト。このインターフェースは、ビューでサポートされる属性を定義する特定の属性ビューによって拡張または実装されます。特定の属性ビューは、通常、タイプセーフメソッドを定義して、サポートする属性を読み取りまたは更新します。</target>
        </trans-unit>
        <trans-unit id="17589a90543acbf0df396fa1396e966b73e4bce6" translate="yes" xml:space="preserve">
          <source>An object that provides hooks for connection pool management.</source>
          <target state="translated">接続プール管理用のフックを提供するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="2e430cc441c926c021b32c42415c696e246df256" translate="yes" xml:space="preserve">
          <source>An object that provides hooks for connection pool management. A &lt;code&gt;PooledConnection&lt;/code&gt; object represents a physical connection to a data source. The connection can be recycled rather than being closed when an application is finished with it, thus reducing the number of connections that need to be made.</source>
          <target state="translated">接続プール管理用のフックを提供するオブジェクト。 &lt;code&gt;PooledConnection&lt;/code&gt; オブジェクトは、データソースへの物理接続を表します。接続は、アプリケーションの終了時に閉じるのではなくリサイクルできるため、必要な接続の数を減らすことができます。</target>
        </trans-unit>
        <trans-unit id="b410003f6efcf97d2b66c43178427a36a8665643" translate="yes" xml:space="preserve">
          <source>An object that provides information about another object.</source>
          <target state="translated">別のオブジェクトに関する情報を提供するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="810e393998198bb0f25e49b5288567dd7aa75aae" translate="yes" xml:space="preserve">
          <source>An object that provides information about another object. The &lt;code&gt;accessibleDescription&lt;/code&gt; property of the tool tip is often displayed to the user in a small &quot;help bubble&quot; when the user causes the mouse to hover over the object associated with the tool tip.</source>
          <target state="translated">別のオブジェクトに関する情報を提供するオブジェクト。ツールチップの &lt;code&gt;accessibleDescription&lt;/code&gt; プロパティは、ユーザーがツールチップに関連付けられたオブジェクトにマウスを合わせると、小さな「ヘルプバブル」でユーザーに表示されることがよくあります。</target>
        </trans-unit>
        <trans-unit id="6ac59cdd95a546661618c2adbc88dd5fba276354" translate="yes" xml:space="preserve">
          <source>An object that provides support for distributed transactions.</source>
          <target state="translated">分散トランザクションのサポートを提供するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="964d92f6f62a07b984ad32ee0fddd8e87d762dcc" translate="yes" xml:space="preserve">
          <source>An object that provides support for distributed transactions. An &lt;code&gt;XAConnection&lt;/code&gt; object may be enlisted in a distributed transaction by means of an &lt;code&gt;XAResource&lt;/code&gt; object. A transaction manager, usually part of a middle tier server, manages an &lt;code&gt;XAConnection&lt;/code&gt; object through the &lt;code&gt;XAResource&lt;/code&gt; object.</source>
          <target state="translated">分散トランザクションのサポートを提供するオブジェクト。 &lt;code&gt;XAConnection&lt;/code&gt; オブジェクトは、によって分散トランザクションに参加することができる &lt;code&gt;XAResource&lt;/code&gt; オブジェクト。通常は中間層サーバーの一部であるトランザクションマネージャーは、 &lt;code&gt;XAResource&lt;/code&gt; オブジェクトを介して &lt;code&gt;XAConnection&lt;/code&gt; オブジェクトを管理します。</target>
        </trans-unit>
        <trans-unit id="e14024531945125221ea41a27d90d69319b5569d" translate="yes" xml:space="preserve">
          <source>An object that registers to be notified of events generated by a &lt;code&gt;PooledConnection&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;PooledConnection&lt;/code&gt; オブジェクトによって生成されたイベントの通知を受け取るように登録するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="74cc18b35276daba7d177fc9547bafa4381476bf" translate="yes" xml:space="preserve">
          <source>An object that registers to be notified of events that occur on PreparedStatements that are in the Statement pool.</source>
          <target state="translated">StatementプールにあるPreparedStatementsで発生したイベントを通知するために登録するオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="b3f3754944261599d5ecfa75a2d22b6cf042ab80" translate="yes" xml:space="preserve">
          <source>An object that represents a precompiled SQL statement.</source>
          <target state="translated">プリコンパイルされた SQL 文を表すオブジェクト。</target>
        </trans-unit>
        <trans-unit id="b7be4bad260f7284a2572d5c93f98849e8766f27" translate="yes" xml:space="preserve">
          <source>An object the user can manipulate to tell the application to do something.</source>
          <target state="translated">ユーザーが操作してアプリケーションに何かを指示することができるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="12ce0520bbb14ca92b232fc62a665ddcefde91f2" translate="yes" xml:space="preserve">
          <source>An object to iterate over the backing file stores</source>
          <target state="translated">バッキングファイルを反復処理するためのオブジェクトが格納されています。</target>
        </trans-unit>
        <trans-unit id="c17dbb394b4d9793e9e3fb0adb29084e11852761" translate="yes" xml:space="preserve">
          <source>An object to iterate over the entries in a directory.</source>
          <target state="translated">ディレクトリ内のエントリを反復処理するためのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="1c3bffd48c68457858c84b5a158500e905f2b872" translate="yes" xml:space="preserve">
          <source>An object to iterate over the entries in a directory. A directory stream allows for the convenient use of the for-each construct to iterate over a directory.</source>
          <target state="translated">ディレクトリ内のエントリを反復処理するためのオブジェクト。ディレクトリストリームでは、ディレクトリを反復処理するための for-each 構成を便利に使うことができます。</target>
        </trans-unit>
        <trans-unit id="a65c99705d1233884e767c156f9a0bfc18083b83" translate="yes" xml:space="preserve">
          <source>An object to iterate over the root directories</source>
          <target state="translated">ルートディレクトリを反復処理するオブジェクト</target>
        </trans-unit>
        <trans-unit id="010152e0daeec860f12dd25c1c67742eb288570b" translate="yes" xml:space="preserve">
          <source>An object to lookup user and group principals by name.</source>
          <target state="translated">ユーザーおよびグループのプリンシパルを名前で検索するためのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="3f1783309b43122bb1f676943e7dcf9013d02997" translate="yes" xml:space="preserve">
          <source>An object to lookup user and group principals by name. A &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; represents an identity that may be used to determine access rights to objects in a file system. A &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt; represents a &lt;em&gt;group identity&lt;/em&gt;. A &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; defines methods to lookup identities by name or group name (which are typically user or account names). Whether names and group names are case sensitive or not depends on the implementation. The exact definition of a group is implementation specific but typically a group represents an identity created for administrative purposes so as to determine the access rights for the members of the group. In particular it is implementation specific if the &lt;em&gt;namespace&lt;/em&gt; for names and groups is the same or is distinct. To ensure consistent and correct behavior across platforms it is recommended that this API be used as if the namespaces are distinct. In other words, the &lt;a href=&quot;#lookupPrincipalByName(java.lang.String)&quot;&gt;&lt;code&gt;lookupPrincipalByName&lt;/code&gt;&lt;/a&gt; should be used to lookup users, and &lt;a href=&quot;#lookupPrincipalByGroupName(java.lang.String)&quot;&gt;&lt;code&gt;lookupPrincipalByGroupName&lt;/code&gt;&lt;/a&gt; should be used to lookup groups.</source>
          <target state="translated">ユーザーおよびグループのプリンシパルを名前で検索するオブジェクト。 A&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;ファイルシステム内のオブジェクトへのアクセス権を決定するために使用されるアイデンティティを表します。 A &lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; は&lt;/a&gt;表し&lt;em&gt;グループのアイデンティティを&lt;/em&gt;。 A &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; は、（典型的には、ユーザまたはアカウント名である）名またはグループ名でIDを検索するためのメソッドを定義します。名前とグループ名で大文字と小文字が区別されるかどうかは、実装によって異なります。グループの正確な定義は実装固有ですが、通常、グループは、グループのメンバーのアクセス権を決定するために管理目的で作成されたIDを表します。特に、&lt;em&gt;名前空間&lt;/em&gt;が実装固有の場合&lt;em&gt;&lt;/em&gt;名前とグループは同じか、または異なります。プラットフォーム間で一貫性のある正しい動作を保証するには、名前空間が異なるかのようにこのAPIを使用することをお勧めします。つまり、&lt;a href=&quot;#lookupPrincipalByName(java.lang.String)&quot;&gt; &lt;code&gt;lookupPrincipalByName&lt;/code&gt; &lt;/a&gt;を使用してユーザーを検索し、&lt;a href=&quot;#lookupPrincipalByGroupName(java.lang.String)&quot;&gt; &lt;code&gt;lookupPrincipalByGroupName&lt;/code&gt; &lt;/a&gt;を使用してグループを検索する必要があります。</target>
        </trans-unit>
        <trans-unit id="3484639742f489dbbabdc989d42eb70f9eba3ef3" translate="yes" xml:space="preserve">
          <source>An object to lookup user and group principals by name. A &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; represents an identity that may be used to determine access rights to objects in a file system. A &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt; represents a &lt;em&gt;group identity&lt;/em&gt;. A &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; defines methods to lookup identities by name or group name (which are typically user or account names). Whether names and group names are case sensitive or not depends on the implementation. The exact definition of a group is implementation specific but typically a group represents an identity created for administrative purposes so as to determine the access rights for the members of the group. In particular it is implementation specific if the &lt;em&gt;namespace&lt;/em&gt; for names and groups is the same or is distinct. To ensure consistent and correct behavior across platforms it is recommended that this API be used as if the namespaces are distinct. In other words, the &lt;a href=&quot;userprincipallookupservice#lookupPrincipalByName-java.lang.String-&quot;&gt;&lt;code&gt;lookupPrincipalByName&lt;/code&gt;&lt;/a&gt; should be used to lookup users, and &lt;a href=&quot;userprincipallookupservice#lookupPrincipalByGroupName-java.lang.String-&quot;&gt;&lt;code&gt;lookupPrincipalByGroupName&lt;/code&gt;&lt;/a&gt; should be used to lookup groups.</source>
          <target state="translated">ユーザーとグループのプリンシパルを名前で検索するオブジェクト。 A &lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;ファイルシステム内のオブジェクトへのアクセス権を決定するために使用されるアイデンティティを表します。 A &lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; は&lt;/a&gt;表し&lt;em&gt;グループのアイデンティティを&lt;/em&gt;。 A &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; は、（典型的には、ユーザまたはアカウント名である）名またはグループ名でIDを検索するためのメソッドを定義します。名前とグループ名で大文字と小文字が区別されるかどうかは、実装によって異なります。グループの正確な定義は実装固有ですが、通常、グループは、グループのメンバーのアクセス権を決定するために管理目的で作成されたIDを表します。特に、&lt;em&gt;名前空間が&lt;/em&gt;名前とグループは同じか、または異なります。プラットフォーム間で一貫した正しい動作を保証するには、名前空間が異なるかのようにこのAPIを使用することをお勧めします。つまり、ユーザーの検索には&lt;a href=&quot;userprincipallookupservice#lookupPrincipalByName-java.lang.String-&quot;&gt; &lt;code&gt;lookupPrincipalByName&lt;/code&gt; &lt;/a&gt;を使用し、グループの検索には&lt;a href=&quot;userprincipallookupservice#lookupPrincipalByGroupName-java.lang.String-&quot;&gt; &lt;code&gt;lookupPrincipalByGroupName&lt;/code&gt; &lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="959444642dc2ceda55ae42142da09ad092051bd9" translate="yes" xml:space="preserve">
          <source>An object to which &lt;code&gt;char&lt;/code&gt; sequences and values can be appended.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; シーケンスと値を追加できるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="2b4af51a3c1eeeded7c6a1d69e220f5e26d511ce" translate="yes" xml:space="preserve">
          <source>An object to which &lt;code&gt;char&lt;/code&gt; sequences and values can be appended. The &lt;code&gt;Appendable&lt;/code&gt; interface must be implemented by any class whose instances are intended to receive formatted output from a &lt;a href=&quot;../util/formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; シーケンスと値を追加できるオブジェクト。 &lt;code&gt;Appendable&lt;/code&gt; インターフェースは、そのインスタンスからのフォーマットされた出力を受け取るように意図されている任意のクラスによって実装されなければならない&lt;a href=&quot;../util/formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3daebc4dade78be5a92e17bbf7de784fee272f28" translate="yes" xml:space="preserve">
          <source>An object used to indicate how much of a task has been completed.</source>
          <target state="translated">タスクがどの程度完了したかを示すために使用されるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="cab6707936a6c3c66f5236f6918a68aab7d4ca75" translate="yes" xml:space="preserve">
          <source>An object used to present an icon or short string in an interface.</source>
          <target state="translated">インターフェイスでアイコンや短い文字列を表示するために使われるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="12c2067a391128c2a61aa259ba553977a662e1f5" translate="yes" xml:space="preserve">
          <source>An object used to present hierarchical information to the user.</source>
          <target state="translated">ユーザに階層情報を提示するために使用されるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="5b36e2cb772c98ce0c3f204ff16459ce3ee6d4c1" translate="yes" xml:space="preserve">
          <source>An object used to present hierarchical information to the user. The individual nodes in the tree can be collapsed and expanded to provide selective disclosure of the tree's contents.</source>
          <target state="translated">ユーザに階層的な情報を提示するために使用されるオブジェクト。ツリー内の個々のノードは、ツリーの内容の選択的な開示を提供するために折りたたまれたり、展開されたりすることができます。</target>
        </trans-unit>
        <trans-unit id="e3c069e18a3afd8cb18cac6d8ffcc1c06d45de3c" translate="yes" xml:space="preserve">
          <source>An object used to present information in terms of rows and columns.</source>
          <target state="translated">行と列で情報を表示するために使用されるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="3c500a5abb7b1c8129268be1bedd0adc6dcd4e72" translate="yes" xml:space="preserve">
          <source>An object used to present information in terms of rows and columns. An example might include a spreadsheet application.</source>
          <target state="translated">行と列で情報を表示するために使用されるオブジェクト。例としては、スプレッドシートアプリケーションなどが挙げられます。</target>
        </trans-unit>
        <trans-unit id="5fdc0074e70f7838175765bd8cf3915fef4db0df" translate="yes" xml:space="preserve">
          <source>An object usually contained in a menu that presents an action the user can choose.</source>
          <target state="translated">通常はメニューに含まれるオブジェクトで、ユーザーが選択できるアクションを提示します。</target>
        </trans-unit>
        <trans-unit id="d23e184daddb3e4c3811ef5ad8fe229c8b2775c2" translate="yes" xml:space="preserve">
          <source>An object usually contained in a menu that presents an action the user can choose. For example, the &quot;Cut&quot; menu item in an &quot;Edit&quot; menu would be an action the user can select to cut the selected area of text in a document.</source>
          <target state="translated">通常はメニューに含まれるオブジェクトで、ユーザーが選択できるアクションを提示します。例えば、&quot;編集 &quot;メニューの &quot;カット &quot;メニュー項目は、ドキュメント内のテキストの選択された領域をカットするためにユーザーが選択できるアクションです。</target>
        </trans-unit>
        <trans-unit id="f1a55b11c6d0c0b180605fefbbc96492b1fbd655" translate="yes" xml:space="preserve">
          <source>An object usually contained in a menu to provide a visual and logical separation of the contents in a menu.</source>
          <target state="translated">通常、メニューに含まれるオブジェクトで、メニュー内のコンテンツを視覚的かつ論理的に分離するためのもの。</target>
        </trans-unit>
        <trans-unit id="423d08afbbe8717b4c9b83eb09e07922e8767107" translate="yes" xml:space="preserve">
          <source>An object usually contained in a menu to provide a visual and logical separation of the contents in a menu. For example, the &quot;File&quot; menu of an application might contain menu items for &quot;Open,&quot; &quot;Close,&quot; and &quot;Exit,&quot; and will place a separator between &quot;Close&quot; and &quot;Exit&quot; menu items.</source>
          <target state="translated">通常、メニューに含まれるオブジェクトで、メニューの内容を視覚的かつ論理的に分離するためのものです。例えば、アプリケーションの「ファイル」メニューには、「開く」、「閉じる」、「終了」のメニュー項目があり、「閉じる」と「終了」のメニュー項目の間にセパレータを配置します。</target>
        </trans-unit>
        <trans-unit id="596d15ab68756f49f05a365e19aa508b6e75c646" translate="yes" xml:space="preserve">
          <source>An object usually drawn at the top of the primary dialog box of an application that contains a list of menus the user can choose from.</source>
          <target state="translated">通常、アプリケーションのプライマリダイアログボックスの上部に描かれるオブジェクトで、ユーザーが選択できるメニューのリストが含まれています。</target>
        </trans-unit>
        <trans-unit id="00b5ddcd7875dd3ad27f162350ef8b10137977c4" translate="yes" xml:space="preserve">
          <source>An object usually drawn at the top of the primary dialog box of an application that contains a list of menus the user can choose from. For example, a menu bar might contain menus for &quot;File,&quot; &quot;Edit,&quot; and &quot;Help.&quot;</source>
          <target state="translated">通常、アプリケーションのプライマリダイアログボックスの上部に描かれるオブジェクトで、ユーザが選択できるメニューのリストを含みます。例えば、メニューバーには &quot;ファイル&quot;、&quot;編集&quot;、&quot;ヘルプ&quot; のメニューがあります。</target>
        </trans-unit>
        <trans-unit id="2720fad1b0cfb2e8e19d32af2aa341192036a1b4" translate="yes" xml:space="preserve">
          <source>An object usually found inside a menu bar that contains a list of actions the user can choose from.</source>
          <target state="translated">通常はメニューバーの中にあるオブジェクトで、ユーザーが選択できるアクションのリストが含まれています。</target>
        </trans-unit>
        <trans-unit id="423f0eb1bce1a5f5a290c78958e5ab0581a62daf" translate="yes" xml:space="preserve">
          <source>An object usually found inside a menu bar that contains a list of actions the user can choose from. A menu can have any object as its children, but most often they are menu items, other menus, or rudimentary objects such as radio buttons, check boxes, or separators. For example, an application may have an &quot;Edit&quot; menu that contains menu items for &quot;Cut&quot; and &quot;Paste.&quot;</source>
          <target state="translated">通常、メニューバーの中にあるオブジェクトで、ユーザーが選択できるアクションのリストが含まれています。メニューは任意のオブジェクトを子として持つことができますが、ほとんどの場合、メニュー項目、他のメニュー、ラジオボタン、チェックボックス、セパレータなどの初歩的なオブジェクトです。例えば、アプリケーションには &quot;編集&quot; メニューがあり、その中には &quot;切り取り&quot; と &quot;貼り付け&quot; のメニュー項目が含まれています。</target>
        </trans-unit>
        <trans-unit id="e85ef4c91e161385341615b1aa590796ee7e59f3" translate="yes" xml:space="preserve">
          <source>An object usually used in a scroll pane.</source>
          <target state="translated">通常、スクロール ペインで使用されるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="236ec955480ac52bcc9a59045158f6d159d97476" translate="yes" xml:space="preserve">
          <source>An object usually used in a scroll pane. It represents the portion of the entire data that the user can see. As the user manipulates the scroll bars, the contents of the viewport can change.</source>
          <target state="translated">通常、スクロール ペインで使用されるオブジェクト。データ全体のうち、ユーザーが見ることができる部分を表します。ユーザーがスクロールバーを操作すると、ビューポートの内容が変化します。</target>
        </trans-unit>
        <trans-unit id="45acea629a9787d462962bb08a4c4b506281c944" translate="yes" xml:space="preserve">
          <source>An object usually used to allow a user to incrementally view a large amount of data.</source>
          <target state="translated">通常、ユーザーが大量のデータをインクリメンタルに表示できるようにするために使用されるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="26bed49f4efc2b24ec7ef2caacc4b3f5eaf2f83b" translate="yes" xml:space="preserve">
          <source>An object usually used to allow a user to incrementally view a large amount of data. Usually used only by a scroll pane.</source>
          <target state="translated">通常、ユーザーが大量のデータをインクリメンタルに表示できるようにするために使用されるオブジェクト。通常はスクロールペインでのみ使用される。</target>
        </trans-unit>
        <trans-unit id="a5051884957123c1491c2ecaee3f9cfe7eeba271" translate="yes" xml:space="preserve">
          <source>An object whose monitor is used to lock this node.</source>
          <target state="translated">このノードをロックするためにモニタが使用されるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="867fa1c5780093cb05521a0541ff91f691ce18cf" translate="yes" xml:space="preserve">
          <source>An object whose monitor is used to lock this node. This object is used in preference to the node itself to reduce the likelihood of intentional or unintentional denial of service due to a locked node. To avoid deadlock, a node is</source>
          <target state="translated">このノードをロックするためにモニタが使用されるオブジェクト。このオブジェクトは、ロックされたノードによる意図的または意図しないサービス拒否の可能性を減らすために、ノード自体よりも優先的に使用されます。デッドロックを回避するために、ノードは</target>
        </trans-unit>
        <trans-unit id="5156ec2dbf3a7eb9898018cb7d1ff204869b419f" translate="yes" xml:space="preserve">
          <source>An object written via writeUnshared is always serialized in the same manner as a newly appearing object (an object that has not been written to the stream yet), regardless of whether or not the object has been written previously.</source>
          <target state="translated">writeUnshared経由で書き込まれたオブジェクトは、以前に書き込まれたかどうかに関わらず、常に新たに現れたオブジェクト(まだストリームに書き込まれていないオブジェクト)と同じ方法でシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="05dede121dec23068bf7dc7aa4bc5b63031d767f" translate="yes" xml:space="preserve">
          <source>An object/attributes pair for returning the result of DirStateFactory.getStateToBind().</source>
          <target state="translated">DirStateFactory.getStateToBind()の結果を返すオブジェクトと属性のペア。</target>
        </trans-unit>
        <trans-unit id="4b3b6f73f430dfd37dfc4895f39308be277b8ca8" translate="yes" xml:space="preserve">
          <source>An observable object can have one or more observers. An observer may be any object that implements interface &lt;code&gt;Observer&lt;/code&gt;. After an observable instance changes, an application calling the &lt;code&gt;Observable&lt;/code&gt;'s &lt;code&gt;notifyObservers&lt;/code&gt; method causes all of its observers to be notified of the change by a call to their &lt;code&gt;update&lt;/code&gt; method.</source>
          <target state="translated">オブザーバブルオブジェクトには、1つ以上のオブザーバーを含めることができます。オブザーバーは、 &lt;code&gt;Observer&lt;/code&gt; インターフェースを実装する任意のオブジェクトです。オブザーバブルインスタンスが変更された後、アプリケーションが &lt;code&gt;Observable&lt;/code&gt; の &lt;code&gt;notifyObservers&lt;/code&gt; メソッドを呼び出すと、すべてのオブザーバーに &lt;code&gt;update&lt;/code&gt; メソッドの呼び出しによって変更が通知されます。</target>
        </trans-unit>
        <trans-unit id="92b0cc1de79c8dce6d1243f2399ae493023fc146" translate="yes" xml:space="preserve">
          <source>An obsolete subclass of &lt;a href=&quot;exportexception&quot;&gt;&lt;code&gt;ExportException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;exportexception&quot;&gt; &lt;code&gt;ExportException&lt;/code&gt; &lt;/a&gt;の廃止されたサブクラス。</target>
        </trans-unit>
        <trans-unit id="dbc7105bed01e2f84d73c2b99d0b079e7f2fde14" translate="yes" xml:space="preserve">
          <source>An opaque component paints every pixel within its rectangular bounds. A non-opaque component paints only a subset of its pixels or none at all, allowing the pixels underneath it to &quot;show through&quot;. Therefore, a component that does not fully paint its pixels provides a degree of transparency.</source>
          <target state="translated">不透明なコンポーネントは、その長方形の範囲内のすべてのピクセルを描きます。不透明ではないコンポーネントは、そのピクセルのサブセットのみ、または全く描画されず、その下のピクセルが「透けて見える」ようにします。したがって、ピクセルを完全に塗らないコンポーネントは透明度を提供します。</target>
        </trans-unit>
        <trans-unit id="dbbd38d1b9d12de71b7ca0e6ce17f4c092aefa92" translate="yes" xml:space="preserve">
          <source>An opaque component paints every pixel within its rectangular region. A non-opaque component paints only some of its pixels, allowing the pixels underneath it to &quot;show through&quot;. A component that does not fully paint its pixels therefore provides a degree of transparency.</source>
          <target state="translated">不透明なコンポーネントはその矩形領域内のすべてのピクセルを描きます。不透明でないコンポーネントは、そのピクセルの一部だけを描き、その下のピクセルが「透けて見える」ようにします。したがって、ピクセルを完全に塗らないコンポーネントは透明度を提供します。</target>
        </trans-unit>
        <trans-unit id="df38a540c07e2c196d383530f872a887067d054d" translate="yes" xml:space="preserve">
          <source>An open module.</source>
          <target state="translated">オープンモジュール。</target>
        </trans-unit>
        <trans-unit id="30d533cc7d344e75799a951205d156552d7f5ae3" translate="yes" xml:space="preserve">
          <source>An open module. An open module does not declare any open packages but the resulting module is treated as if all packages are open.</source>
          <target state="translated">オープンモジュール。オープンモジュールはオープンパッケージを宣言しませんが、結果のモジュールはすべてのパッケージがオープンされているかのように扱われます。</target>
        </trans-unit>
        <trans-unit id="0e95bd79d2b4a37c8eeeee3e6d367466571f50fa" translate="yes" xml:space="preserve">
          <source>An open square bracket '['.</source>
          <target state="translated">開いた四角い括弧'['。</target>
        </trans-unit>
        <trans-unit id="cbac19fcb3975ebd12ad90dcc49acd1d939d09b0" translate="yes" xml:space="preserve">
          <source>An opened package of a module.</source>
          <target state="translated">モジュールの開封済みパッケージ。</target>
        </trans-unit>
        <trans-unit id="ceda6b4c7e200993657f9f718217dfb49ccd97e1" translate="yes" xml:space="preserve">
          <source>An operator or function &lt;code&gt;op&lt;/code&gt; is &lt;em&gt;associative&lt;/em&gt; if the following holds:</source>
          <target state="translated">次の条件が当てはまる場合、演算子または関数 &lt;code&gt;op&lt;/code&gt; は&lt;em&gt;結合的&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="fa22ce96ff7b79fbc60eaf0b00e7c4a417143e9e" translate="yes" xml:space="preserve">
          <source>An opportunity to lazily evaluate desktop property values.</source>
          <target state="translated">デスクトップの資産価値を怠惰に評価する機会。</target>
        </trans-unit>
        <trans-unit id="3cd6d9f79ed5b612f637bc441858d525f27504d1" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;ImageWriteParam&lt;/code&gt; may be supplied for cases where it may affect the structure of the image metadata.</source>
          <target state="translated">画像メタデータの構造に影響を与える可能性がある場合は、オプションの &lt;code&gt;ImageWriteParam&lt;/code&gt; を指定できます。</target>
        </trans-unit>
        <trans-unit id="d843bc323fd59eb5d77b8c7220aa652604db68bc" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;ImageWriteParam&lt;/code&gt; may be supplied for cases where it may affect the structure of the stream metadata.</source>
          <target state="translated">オプションの &lt;code&gt;ImageWriteParam&lt;/code&gt; は、ストリームメタデータの構造に影響を与える可能性がある場合に使用できます。</target>
        </trans-unit>
        <trans-unit id="02f257627119dfd12596e5337d8d99969e1d9c38" translate="yes" xml:space="preserve">
          <source>An optional interface that may be provided by service provider objects that will be registered with a &lt;code&gt;ServiceRegistry&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ServiceRegistry&lt;/code&gt; に登録されるサービスプロバイダーオブジェクトによって提供されるオプションのインターフェイス。</target>
        </trans-unit>
        <trans-unit id="9b921ecdde7eeae6029b64068f26048a77e8b061" translate="yes" xml:space="preserve">
          <source>An optional interface that may be provided by service provider objects that will be registered with a &lt;code&gt;ServiceRegistry&lt;/code&gt;. If this interface is present, notification of registration and deregistration will be performed.</source>
          <target state="translated">&lt;code&gt;ServiceRegistry&lt;/code&gt; に登録されるサービスプロバイダーオブジェクトによって提供されるオプションのインターフェイス。このインターフェースが存在する場合、登録および登録解除の通知が実行されます。</target>
        </trans-unit>
        <trans-unit id="e12e309322d19a54686a0b1cb8a25508fe836ba2" translate="yes" xml:space="preserve">
          <source>An optional string that can be displayed on the progress bar.</source>
          <target state="translated">プログレスバーに表示することができるオプションの文字列。</target>
        </trans-unit>
        <trans-unit id="b6c1658a47b557037a49a203a57b76c7ca40b753" translate="yes" xml:space="preserve">
          <source>An optional string that can be displayed on the progress bar. The default is &lt;code&gt;null&lt;/code&gt;. Setting this to a non-&lt;code&gt;null&lt;/code&gt; value does not imply that the string will be displayed. To display the string, &lt;code&gt;paintString&lt;/code&gt; must be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">プログレスバーに表示できるオプションの文字列。デフォルトは &lt;code&gt;null&lt;/code&gt; です。これを &lt;code&gt;null&lt;/code&gt; 以外の値に設定しても、文字列が表示されることを意味するわけではありません。文字列を表示するには、 &lt;code&gt;paintString&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="84208ed60f2ce35a01ff406ec29db5c927a5a583" translate="yes" xml:space="preserve">
          <source>An optional system-dependent &lt;em&gt;prefix&lt;/em&gt; string, such as a disk-drive specifier, &lt;code&gt;&quot;/&quot;&lt;/code&gt; for the UNIX root directory, or &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt; for a Microsoft Windows UNC pathname, and</source>
          <target state="translated">ディスクドライブ指定子、UNIXルートディレクトリの場合は &lt;code&gt;&quot;/&quot;&lt;/code&gt; 、Microsoft Windows UNCパス名の場合は &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt; など、オプションのシステム依存の&lt;em&gt;プレフィックス&lt;/em&gt;文字列</target>
        </trans-unit>
        <trans-unit id="ad286a3bc8ddc6906b24395b9d3aa1a01523ec8d" translate="yes" xml:space="preserve">
          <source>An optionally-bounded &lt;a href=&quot;blockingdeque&quot;&gt;blocking deque&lt;/a&gt; based on linked nodes.</source>
          <target state="translated">リンクされたノードに基づく、オプションで境界付きの&lt;a href=&quot;blockingdeque&quot;&gt;ブロッキング両端キュー&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="72e104385ffe4e121f6dd8458bfde27cb89dd0ad" translate="yes" xml:space="preserve">
          <source>An optionally-bounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; based on linked nodes.</source>
          <target state="translated">リンクされたノードに基づいた、オプションの境界付き&lt;a href=&quot;blockingqueue&quot;&gt;ブロッキングキュー&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6b7cf7d68de5564c1d07ba461e999de0f387a708" translate="yes" xml:space="preserve">
          <source>An optionally-bounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; based on linked nodes. This queue orders elements FIFO (first-in-first-out). The &lt;em&gt;head&lt;/em&gt; of the queue is that element that has been on the queue the longest time. The &lt;em&gt;tail&lt;/em&gt; of the queue is that element that has been on the queue the shortest time. New elements are inserted at the tail of the queue, and the queue retrieval operations obtain elements at the head of the queue. Linked queues typically have higher throughput than array-based queues but less predictable performance in most concurrent applications.</source>
          <target state="translated">リンクされたノードに基づいた、オプションの境界付き&lt;a href=&quot;blockingqueue&quot;&gt;ブロッキングキュー&lt;/a&gt;。このキューは、要素をFIFO（先入れ先出し）で注文します。キューの&lt;em&gt;先頭&lt;/em&gt;は、キューに最も長い間存在していた要素です。キューの&lt;em&gt;末尾&lt;/em&gt;は、キューに最も短い時間存在していた要素です。新しい要素はキューの末尾に挿入され、キューの取得操作はキューの先頭にある要素を取得します。リンクされたキューは、通常、アレイベースのキューよりもスループットは高くなりますが、ほとんどの並行アプリケーションでは予測できないパフォーマンスになります。</target>
        </trans-unit>
        <trans-unit id="51fdf42d83ac859a6bd23e4d46714fe53b369d93" translate="yes" xml:space="preserve">
          <source>An ordered collection (also known as a</source>
          <target state="translated">注文されたコレクション(別名</target>
        </trans-unit>
        <trans-unit id="ac0047bd24c7a76ae8c02017f6f834ba3ee5f7cf" translate="yes" xml:space="preserve">
          <source>An output location may be used to write files in either a package-oriented organization or in a module-oriented organization.</source>
          <target state="translated">出力場所は、パッケージ指向の組織またはモジュール指向の組織のいずれかでファイルを書き込むために使用することができます。</target>
        </trans-unit>
        <trans-unit id="bc0cfb544beabd824a9b068e3577ef63414cd145" translate="yes" xml:space="preserve">
          <source>An output stream that also maintains a checksum of the data being written.</source>
          <target state="translated">書き込まれたデータのチェックサムも保持する出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="ebc7a8ace7bfe211d1f520cf563d36c675003f7c" translate="yes" xml:space="preserve">
          <source>An output stream that also maintains a checksum of the data being written. The checksum can then be used to verify the integrity of the output data.</source>
          <target state="translated">書き込まれるデータのチェックサムも保持する出力ストリーム。チェックサムは、出力データの整合性を検証するために使用されます。</target>
        </trans-unit>
        <trans-unit id="f17e4136b1ae1ac17e838c9935e2688fa6a6bdb3" translate="yes" xml:space="preserve">
          <source>An representation of the XML &lt;code&gt;SignedInfo&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;SignedInfo&lt;/code&gt; 要素の表現。</target>
        </trans-unit>
        <trans-unit id="4dcfb57fccd47f63eeca6aa701d137c9ee30375b" translate="yes" xml:space="preserve">
          <source>An representation of the XML &lt;code&gt;SignedInfo&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;SignedInfo&lt;/code&gt; 要素の表現。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="2e3ff4c6d5a29267c7491ef773098b6d20617bcd" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; of &lt;code&gt;Delayed&lt;/code&gt; elements, in which an element can only be taken when its delay has expired.</source>
          <target state="translated">無制限&lt;a href=&quot;blockingqueue&quot;&gt;のブロッキングキュー&lt;/a&gt;の &lt;code&gt;Delayed&lt;/code&gt; 、その遅延が満了したときに素子のみ取ることが可能な要素。</target>
        </trans-unit>
        <trans-unit id="607e41e984edd66f6d58df72af9fb617e35f2405" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; of &lt;code&gt;Delayed&lt;/code&gt; elements, in which an element can only be taken when its delay has expired. The &lt;em&gt;head&lt;/em&gt; of the queue is that &lt;code&gt;Delayed&lt;/code&gt; element whose delay expired furthest in the past. If no delay has expired there is no head and &lt;code&gt;poll&lt;/code&gt; will return &lt;code&gt;null&lt;/code&gt;. Expiration occurs when an element's &lt;code&gt;getDelay(TimeUnit.NANOSECONDS)&lt;/code&gt; method returns a value less than or equal to zero. Even though unexpired elements cannot be removed using &lt;code&gt;take&lt;/code&gt; or &lt;code&gt;poll&lt;/code&gt;, they are otherwise treated as normal elements. For example, the &lt;code&gt;size&lt;/code&gt; method returns the count of both expired and unexpired elements. This queue does not permit null elements.</source>
          <target state="translated">無制限&lt;a href=&quot;blockingqueue&quot;&gt;のブロッキングキュー&lt;/a&gt;の &lt;code&gt;Delayed&lt;/code&gt; 、その遅延が満了したときに素子のみ取ることが可能な要素。キューの&lt;em&gt;先頭&lt;/em&gt;は、遅延が過去に最も期限切れになった &lt;code&gt;Delayed&lt;/code&gt; 要素です。遅延の期限が切れていない場合、ヘッドはなく、 &lt;code&gt;poll&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; を返します。エレメントの &lt;code&gt;getDelay(TimeUnit.NANOSECONDS)&lt;/code&gt; メソッドがゼロ以下の値を返すと、有効期限が発生します。有効期限が切れていない要素は、 &lt;code&gt;take&lt;/code&gt; または &lt;code&gt;poll&lt;/code&gt; を使用して削除することはできませんが、それ以外は通常の要素として扱われます。たとえば、 &lt;code&gt;size&lt;/code&gt; メソッドは、有効期限が切れた要素と有効期限が切れていない要素の両方の数を返します。このキューはnull要素を許可しません。</target>
        </trans-unit>
        <trans-unit id="4867f0af45dc7bd49cf8437f6b72d1e8876f3b4c" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; that uses the same ordering rules as class &lt;a href=&quot;../priorityqueue&quot;&gt;&lt;code&gt;PriorityQueue&lt;/code&gt;&lt;/a&gt; and supplies blocking retrieval operations.</source>
          <target state="translated">クラス&lt;a href=&quot;../priorityqueue&quot;&gt; &lt;code&gt;PriorityQueue&lt;/code&gt; &lt;/a&gt;と同じ順序付けルールを使用し、ブロッキング取得操作を提供する無制限の&lt;a href=&quot;blockingqueue&quot;&gt;ブロッキングキュー&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d095c9bb69381950ab2d46bf615aa051a67635d" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; that uses the same ordering rules as class &lt;a href=&quot;../priorityqueue&quot;&gt;&lt;code&gt;PriorityQueue&lt;/code&gt;&lt;/a&gt; and supplies blocking retrieval operations. While this queue is logically unbounded, attempted additions may fail due to resource exhaustion (causing &lt;code&gt;OutOfMemoryError&lt;/code&gt;). This class does not permit &lt;code&gt;null&lt;/code&gt; elements. A priority queue relying on &lt;a href=&quot;../../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; also does not permit insertion of non-comparable objects (doing so results in &lt;code&gt;ClassCastException&lt;/code&gt;).</source>
          <target state="translated">クラス&lt;a href=&quot;../priorityqueue&quot;&gt; &lt;code&gt;PriorityQueue&lt;/code&gt; &lt;/a&gt;と同じ順序付けルールを使用し、ブロッキング取得操作を提供する無制限の&lt;a href=&quot;blockingqueue&quot;&gt;ブロッキングキュー&lt;/a&gt;。このキューは論理的に無制限ですが、リソースの枯渇（ &lt;code&gt;OutOfMemoryError&lt;/code&gt; の原因）が原因で追加を試みても失敗する可能性があります。このクラスは &lt;code&gt;null&lt;/code&gt; 要素を許可しません。&lt;a href=&quot;../../lang/comparable&quot;&gt;自然順序付けに&lt;/a&gt;依存する優先度キューも、比較不可能なオブジェクトの挿入を許可しません（そうすると、 &lt;code&gt;ClassCastException&lt;/code&gt; が発生します）。</target>
        </trans-unit>
        <trans-unit id="fcaf51b05fe12df113e579d4ccb39654b56971e5" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;transferqueue&quot;&gt;&lt;code&gt;TransferQueue&lt;/code&gt;&lt;/a&gt; based on linked nodes.</source>
          <target state="translated">リンクされたノードに基づく無制限の&lt;a href=&quot;transferqueue&quot;&gt; &lt;code&gt;TransferQueue&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b74d3cb04027b36108a5a8e923b773d7c06be9f" translate="yes" xml:space="preserve">
          <source>An unbounded &lt;a href=&quot;transferqueue&quot;&gt;&lt;code&gt;TransferQueue&lt;/code&gt;&lt;/a&gt; based on linked nodes. This queue orders elements FIFO (first-in-first-out) with respect to any given producer. The &lt;em&gt;head&lt;/em&gt; of the queue is that element that has been on the queue the longest time for some producer. The &lt;em&gt;tail&lt;/em&gt; of the queue is that element that has been on the queue the shortest time for some producer.</source>
          <target state="translated">リンクされたノードに基づく無制限の&lt;a href=&quot;transferqueue&quot;&gt; &lt;code&gt;TransferQueue&lt;/code&gt; &lt;/a&gt;。このキューは、特定のプロデューサーに関して、要素をFIFO（先入れ先出し）で順序付けします。キューの&lt;em&gt;先頭&lt;/em&gt;は、一部のプロデューサーにとって最も長い間キューに存在していた要素です。&lt;em&gt;テール&lt;/em&gt;キューのキューにいくつかのプロデューサーのための最短時間となっているその要素です。</target>
        </trans-unit>
        <trans-unit id="4afa63dbafd71f3f862f6b0c0f513d766954929c" translate="yes" xml:space="preserve">
          <source>An unbounded concurrent &lt;a href=&quot;../deque&quot;&gt;deque&lt;/a&gt; based on linked nodes.</source>
          <target state="translated">リンクされたノードに基づく無制限の同時&lt;a href=&quot;../deque&quot;&gt;両端キュー&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8fa2b6fe53f815e6194eb30fd512618a3c74f17" translate="yes" xml:space="preserve">
          <source>An unbounded concurrent &lt;a href=&quot;../deque&quot;&gt;deque&lt;/a&gt; based on linked nodes. Concurrent insertion, removal, and access operations execute safely across multiple threads. A &lt;code&gt;ConcurrentLinkedDeque&lt;/code&gt; is an appropriate choice when many threads will share access to a common collection. Like most other concurrent collection implementations, this class does not permit the use of &lt;code&gt;null&lt;/code&gt; elements.</source>
          <target state="translated">リンクされたノードに基づく無制限の同時&lt;a href=&quot;../deque&quot;&gt;両端キュー&lt;/a&gt;。同時挿入、削除、およびアクセス操作は、複数のスレッドにわたって安全に実行されます。A &lt;code&gt;ConcurrentLinkedDeque&lt;/code&gt; は、多くのスレッドが共通のコレクションへのアクセスを共有する適切な選択です。他のほとんどの並行コレクション実装と同様に、このクラスは &lt;code&gt;null&lt;/code&gt; 要素の使用を許可しません。</target>
        </trans-unit>
        <trans-unit id="e6addc60c8c5b238985f15c71d8cd178652b1298" translate="yes" xml:space="preserve">
          <source>An unbounded priority &lt;a href=&quot;queue&quot;&gt;queue&lt;/a&gt; based on a priority heap.</source>
          <target state="translated">優先ヒープに基づく無制限の優先&lt;a href=&quot;queue&quot;&gt;キュー&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="90f856f7007f7cacf437367979c243adb01380a5" translate="yes" xml:space="preserve">
          <source>An unbounded priority &lt;a href=&quot;queue&quot;&gt;queue&lt;/a&gt; based on a priority heap. The elements of the priority queue are ordered according to their &lt;a href=&quot;../lang/comparable&quot;&gt;natural ordering&lt;/a&gt;, or by a &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; provided at queue construction time, depending on which constructor is used. A priority queue does not permit &lt;code&gt;null&lt;/code&gt; elements. A priority queue relying on natural ordering also does not permit insertion of non-comparable objects (doing so may result in &lt;code&gt;ClassCastException&lt;/code&gt;).</source>
          <target state="translated">優先ヒープに基づく無制限の優先&lt;a href=&quot;queue&quot;&gt;キュー&lt;/a&gt;。優先キューの要素は、使用されるコンストラクターに応じて、&lt;a href=&quot;../lang/comparable&quot;&gt;自然な順序&lt;/a&gt;に従って、またはキューの構築時に提供される&lt;a href=&quot;comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;によって順序付けられます。優先度キューは &lt;code&gt;null&lt;/code&gt; 要素を許可しません。自然順序付けに依存する優先度キューも、比較不可能なオブジェクトの挿入を許可しません（そうすると、 &lt;code&gt;ClassCastException&lt;/code&gt; が発生する可能性があります）。</target>
        </trans-unit>
        <trans-unit id="ab9ac02fa6477cb6f322a4ea3ea620ecacb4bb53" translate="yes" xml:space="preserve">
          <source>An unbounded thread-safe &lt;a href=&quot;../queue&quot;&gt;queue&lt;/a&gt; based on linked nodes.</source>
          <target state="translated">リンクされたノードに基づく無制限のスレッドセーフ&lt;a href=&quot;../queue&quot;&gt;キュー&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e7cfdd27caa4bf67980b26f0622aa9f9b07b86b3" translate="yes" xml:space="preserve">
          <source>An unbounded thread-safe &lt;a href=&quot;../queue&quot;&gt;queue&lt;/a&gt; based on linked nodes. This queue orders elements FIFO (first-in-first-out). The &lt;em&gt;head&lt;/em&gt; of the queue is that element that has been on the queue the longest time. The &lt;em&gt;tail&lt;/em&gt; of the queue is that element that has been on the queue the shortest time. New elements are inserted at the tail of the queue, and the queue retrieval operations obtain elements at the head of the queue. A &lt;code&gt;ConcurrentLinkedQueue&lt;/code&gt; is an appropriate choice when many threads will share access to a common collection. Like most other concurrent collection implementations, this class does not permit the use of &lt;code&gt;null&lt;/code&gt; elements.</source>
          <target state="translated">リンクされたノードに基づく無制限のスレッドセーフ&lt;a href=&quot;../queue&quot;&gt;キュー&lt;/a&gt;。このキューは、要素をFIFO（先入れ先出し）で注文します。キューの&lt;em&gt;先頭&lt;/em&gt;は、キューに最も長い間存在していた要素です。キューの&lt;em&gt;末尾&lt;/em&gt;は、キューに最も短い時間存在していた要素です。新しい要素はキューの末尾に挿入され、キューの取得操作はキューの先頭にある要素を取得します。 A &lt;code&gt;ConcurrentLinkedQueue&lt;/code&gt; は、多くのスレッドが共通のコレクションへのアクセスを共有する適切な選択です。他のほとんどの並行コレクション実装と同様に、このクラスは &lt;code&gt;null&lt;/code&gt; 要素の使用を許可しません。</target>
        </trans-unit>
        <trans-unit id="1fd4a8a201c5545e3e616e856ea3623043d3957b" translate="yes" xml:space="preserve">
          <source>An underlying security service specifies this as the &lt;code&gt;optionType&lt;/code&gt; to a &lt;code&gt;ConfirmationCallback&lt;/code&gt; constructor if it requires a confirmation which can be answered with either &lt;code&gt;OK&lt;/code&gt; or &lt;code&gt;CANCEL&lt;/code&gt;.</source>
          <target state="translated">基本となるセキュリティサービスは、これを指定 &lt;code&gt;optionType&lt;/code&gt; に &lt;code&gt;ConfirmationCallback&lt;/code&gt; でのそれはどちらかで回答できる確認必要な場合は、コンストラクタ &lt;code&gt;OK&lt;/code&gt; または &lt;code&gt;CANCEL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94cb18ef2e4f46eb678ef7c3adb087a6261a1efb" translate="yes" xml:space="preserve">
          <source>An underlying security service specifies this as the &lt;code&gt;optionType&lt;/code&gt; to a &lt;code&gt;ConfirmationCallback&lt;/code&gt; constructor if it requires a confirmation which can be answered with either &lt;code&gt;YES&lt;/code&gt; or &lt;code&gt;NO&lt;/code&gt;.</source>
          <target state="translated">基本となるセキュリティサービスは、これを指定 &lt;code&gt;optionType&lt;/code&gt; に &lt;code&gt;ConfirmationCallback&lt;/code&gt; でのそれはどちらかで回答できる確認必要な場合は、コンストラクタ &lt;code&gt;YES&lt;/code&gt; または &lt;code&gt;NO&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="b96889588e816039c27b1ab683976945061fb20b" translate="yes" xml:space="preserve">
          <source>An underlying security service specifies this as the &lt;code&gt;optionType&lt;/code&gt; to a &lt;code&gt;ConfirmationCallback&lt;/code&gt; constructor if it requires a confirmation which can be answered with either &lt;code&gt;YES&lt;/code&gt;, &lt;code&gt;NO&lt;/code&gt; or &lt;code&gt;CANCEL&lt;/code&gt;.</source>
          <target state="translated">基本となるセキュリティサービスは、これを指定 &lt;code&gt;optionType&lt;/code&gt; に &lt;code&gt;ConfirmationCallback&lt;/code&gt; でのそれはどちらかで回答できる確認必要な場合は、コンストラクタ &lt;code&gt;YES&lt;/code&gt; 、 &lt;code&gt;NO&lt;/code&gt; または &lt;code&gt;CANCEL&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="307c523fe6d49009fabfdd6ff9c1bbceb540727b" translate="yes" xml:space="preserve">
          <source>An undoable edit happened</source>
          <target state="translated">元に戻せない編集が発生</target>
        </trans-unit>
        <trans-unit id="94a8c907e991acf161c329a51612fdbe263dfdaf" translate="yes" xml:space="preserve">
          <source>An unlock (&lt;code&gt;synchronized&lt;/code&gt; block or method exit) of a monitor</source>
          <target state="translated">モニターのアンロック（ &lt;code&gt;synchronized&lt;/code&gt; ブロックまたはメソッド出口）</target>
        </trans-unit>
        <trans-unit id="6b42d292474cd71baf77f99e3abcbb9ad5ade445" translate="yes" xml:space="preserve">
          <source>An unmodifiable collection is not necessarily immutable. If the contained elements are mutable, the entire collection is clearly mutable, even though it might be unmodifiable. For example, consider two unmodifiable lists containing mutable elements. The result of calling &lt;code&gt;list1.equals(list2)&lt;/code&gt; might differ from one call to the next if the elements had been mutated, even though both lists are unmodifiable. However, if an unmodifiable collection contains all immutable elements, it can be considered effectively immutable.</source>
          <target state="translated">変更不可能なコレクションは、必ずしも不変であるとは限りません。含まれている要素が変更可能である場合、コレクション全体は、変更できない場合でも、明らかに変更可能です。たとえば、可変要素を含む2つの変更不可能なリストについて考えてみます。両方のリストが変更できない場合でも、要素が変更されている場合、 &lt;code&gt;list1.equals(list2)&lt;/code&gt; を呼び出した結果は、呼び出しごとに異なる可能性があります。ただし、変更不可能なコレクションにすべての不変要素が含まれている場合は、事実上不変であると見なすことができます。</target>
        </trans-unit>
        <trans-unit id="f65cbc25e935ca91c24a63ae0eba8ef13873e820" translate="yes" xml:space="preserve">
          <source>An unmodifiable list containing the names of the file's user-defined</source>
          <target state="translated">ファイルのユーザー定義の名前を含む変更不可能なリスト</target>
        </trans-unit>
        <trans-unit id="010ce5af1d40f9caf0f78742b228aa248647626b" translate="yes" xml:space="preserve">
          <source>An unmodifiable list of the installed file system providers. The list contains at least one element, that is the default file system provider</source>
          <target state="translated">インストールされているファイルシステムプロバイダの変更不可能なリスト。このリストには少なくとも一つの要素が含まれ、それはデフォルトのファイルシステムプロバイダである</target>
        </trans-unit>
        <trans-unit id="82656c1468342d867c059c454573a13a2b7eb90b" translate="yes" xml:space="preserve">
          <source>An unmodifiable list of the integers represented in the version number</source>
          <target state="translated">バージョン番号で表される整数の修正不可能なリスト</target>
        </trans-unit>
        <trans-unit id="c70df95edff16a6ccc9d6fe69ee837c0c57b6ae2" translate="yes" xml:space="preserve">
          <source>An unmodifiable set of the names of the supported file attribute views</source>
          <target state="translated">サポートされているファイル属性ビューの名前の変更不可能なセット</target>
        </trans-unit>
        <trans-unit id="f9efff225f0e1ee712304ee1fb2d3b7fe0840e00" translate="yes" xml:space="preserve">
          <source>An unnamed module does not have a name. There is an unnamed module for each &lt;a href=&quot;classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt;, obtained by invoking its &lt;a href=&quot;classloader#getUnnamedModule()&quot;&gt;&lt;code&gt;getUnnamedModule&lt;/code&gt;&lt;/a&gt; method. All types that are not in a named module are members of their defining class loader's unnamed module.</source>
          <target state="translated">名前のないモジュールには名前がありません。各&lt;a href=&quot;classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; には&lt;/a&gt;、&lt;a href=&quot;classloader#getUnnamedModule()&quot;&gt; &lt;code&gt;getUnnamedModule&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して取得した名前のないモジュールがあります。名前付きモジュールにないすべてのタイプは、定義するクラスローダーの名前なしモジュールのメンバーです。</target>
        </trans-unit>
        <trans-unit id="5401cca5ae5d56885b8c25b85dff3e8321062395" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;ActionEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;ACTION_FIRST&lt;/code&gt; to &lt;code&gt;ACTION_LAST&lt;/code&gt;.</source>
          <target state="translated">特定の &lt;code&gt;ActionEvent&lt;/code&gt; インスタンスの &lt;code&gt;id&lt;/code&gt; パラメーターが &lt;code&gt;ACTION_FIRST&lt;/code&gt; から &lt;code&gt;ACTION_LAST&lt;/code&gt; の範囲にない場合、不特定の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="b4a5babb9ff4f76cda96166fec379af2518cfb01" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;AdjustmentEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;ADJUSTMENT_FIRST&lt;/code&gt; to &lt;code&gt;ADJUSTMENT_LAST&lt;/code&gt;.</source>
          <target state="translated">特定の &lt;code&gt;AdjustmentEvent&lt;/code&gt; インスタンスの &lt;code&gt;id&lt;/code&gt; パラメーターが &lt;code&gt;ADJUSTMENT_FIRST&lt;/code&gt; から &lt;code&gt;ADJUSTMENT_LAST&lt;/code&gt; の範囲にない場合、不特定の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="a362cc58cb5cb4fcdc36cbab1fda1ed7fba567ba" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;ComponentEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;COMPONENT_FIRST&lt;/code&gt; to &lt;code&gt;COMPONENT_LAST&lt;/code&gt;.</source>
          <target state="translated">特定の &lt;code&gt;ComponentEvent&lt;/code&gt; インスタンスの &lt;code&gt;id&lt;/code&gt; パラメーターが &lt;code&gt;COMPONENT_FIRST&lt;/code&gt; から &lt;code&gt;COMPONENT_LAST&lt;/code&gt; の範囲にない場合、不特定の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="434570329ebb3129a4237618ff1b0aaba87688e3" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;ContainerEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;CONTAINER_FIRST&lt;/code&gt; to &lt;code&gt;CONTAINER_LAST&lt;/code&gt;.</source>
          <target state="translated">特定の &lt;code&gt;ContainerEvent&lt;/code&gt; インスタンスの &lt;code&gt;id&lt;/code&gt; パラメーターが &lt;code&gt;CONTAINER_FIRST&lt;/code&gt; から &lt;code&gt;CONTAINER_LAST&lt;/code&gt; の範囲にない場合、不特定の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="8d00cd9cdac2fb110d7e0d024ce553849b284795" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;FocusEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;FOCUS_FIRST&lt;/code&gt; to &lt;code&gt;FOCUS_LAST&lt;/code&gt;.</source>
          <target state="translated">特定の &lt;code&gt;FocusEvent&lt;/code&gt; インスタンスの &lt;code&gt;id&lt;/code&gt; パラメーターが &lt;code&gt;FOCUS_FIRST&lt;/code&gt; から &lt;code&gt;FOCUS_LAST&lt;/code&gt; の範囲にない場合、不特定の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="4a94ce65b555fd58b219b9340b8c04f39c891884" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;HierarchyEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;HIERARCHY_FIRST&lt;/code&gt; to &lt;code&gt;HIERARCHY_LAST&lt;/code&gt;.</source>
          <target state="translated">特定の &lt;code&gt;HierarchyEvent&lt;/code&gt; インスタンスの &lt;code&gt;id&lt;/code&gt; パラメーターが &lt;code&gt;HIERARCHY_FIRST&lt;/code&gt; から &lt;code&gt;HIERARCHY_LAST&lt;/code&gt; の範囲にない場合、不特定の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="df782745ebeed6c05281b1e70aa17eca38cd2116" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;InvocationEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;INVOCATION_FIRST&lt;/code&gt; to &lt;code&gt;INVOCATION_LAST&lt;/code&gt;.</source>
          <target state="translated">特定の &lt;code&gt;InvocationEvent&lt;/code&gt; インスタンスの &lt;code&gt;id&lt;/code&gt; パラメーターが &lt;code&gt;INVOCATION_FIRST&lt;/code&gt; から &lt;code&gt;INVOCATION_LAST&lt;/code&gt; の範囲にない場合、不特定の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="4260708fcaf74b2bd6bf21e4a00db495d69286b9" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;ItemEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;ITEM_FIRST&lt;/code&gt; to &lt;code&gt;ITEM_LAST&lt;/code&gt;.</source>
          <target state="translated">特定の &lt;code&gt;ItemEvent&lt;/code&gt; インスタンスの &lt;code&gt;id&lt;/code&gt; パラメータが &lt;code&gt;ITEM_FIRST&lt;/code&gt; から &lt;code&gt;ITEM_LAST&lt;/code&gt; の範囲にない場合、不特定の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="86f00aec54b59a906f1420e664fc779537fbb9cc" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;KeyEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;KEY_FIRST&lt;/code&gt; to &lt;code&gt;KEY_LAST&lt;/code&gt;.</source>
          <target state="translated">特定の &lt;code&gt;KeyEvent&lt;/code&gt; インスタンスの &lt;code&gt;id&lt;/code&gt; パラメータが &lt;code&gt;KEY_FIRST&lt;/code&gt; から &lt;code&gt;KEY_LAST&lt;/code&gt; の範囲にない場合、不特定の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="534ea0625b2fa3dc0ab068a5d2a8cf9e83f1857c" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;MouseEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;MOUSE_FIRST&lt;/code&gt; to &lt;code&gt;MOUSE_LAST&lt;/code&gt;-1 (&lt;code&gt;MOUSE_WHEEL&lt;/code&gt; is not acceptable).</source>
          <target state="translated">特定の &lt;code&gt;MouseEvent&lt;/code&gt; インスタンスの &lt;code&gt;id&lt;/code&gt; パラメータが &lt;code&gt;MOUSE_FIRST&lt;/code&gt; から &lt;code&gt;MOUSE_LAST&lt;/code&gt; -1の範囲にない場合（ &lt;code&gt;MOUSE_WHEEL&lt;/code&gt; は受け入れられません）、不特定の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="2599e04b2b64a3db14ced11dd0cd19136b875ae7" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;PaintEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;PAINT_FIRST&lt;/code&gt; to &lt;code&gt;PAINT_LAST&lt;/code&gt;.</source>
          <target state="translated">特定の &lt;code&gt;PaintEvent&lt;/code&gt; インスタンスの &lt;code&gt;id&lt;/code&gt; パラメータが &lt;code&gt;PAINT_FIRST&lt;/code&gt; から &lt;code&gt;PAINT_LAST&lt;/code&gt; の範囲にない場合、不特定の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="7065cf7516aa921508c4974b1942db791c7aef62" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;TextEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;TEXT_FIRST&lt;/code&gt; to &lt;code&gt;TEXT_LAST&lt;/code&gt;.</source>
          <target state="translated">特定の &lt;code&gt;TextEvent&lt;/code&gt; インスタンスの &lt;code&gt;id&lt;/code&gt; パラメータが &lt;code&gt;TEXT_FIRST&lt;/code&gt; から &lt;code&gt;TEXT_LAST&lt;/code&gt; の範囲にない場合、不特定の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="82560231d45f0618e5bfbd43ed20332b96bb440d" translate="yes" xml:space="preserve">
          <source>An unspecified behavior will be caused if the &lt;code&gt;id&lt;/code&gt; parameter of any particular &lt;code&gt;WindowEvent&lt;/code&gt; instance is not in the range from &lt;code&gt;WINDOW_FIRST&lt;/code&gt; to &lt;code&gt;WINDOW_LAST&lt;/code&gt;.</source>
          <target state="translated">特定の &lt;code&gt;WindowEvent&lt;/code&gt; インスタンスの &lt;code&gt;id&lt;/code&gt; パラメータが &lt;code&gt;WINDOW_FIRST&lt;/code&gt; から &lt;code&gt;WINDOW_LAST&lt;/code&gt; の範囲にない場合、不特定の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="bf8b86c039129ba0283a786f276beef7d9548326" translate="yes" xml:space="preserve">
          <source>An up-cycle focus traversal action.</source>
          <target state="translated">アップサイクルフォーカスのトラバーサルアクション。</target>
        </trans-unit>
        <trans-unit id="15ac5ee269410a4e8ddf82762d6d56660b43a988" translate="yes" xml:space="preserve">
          <source>An upper-case alphabetic character:&lt;code&gt;[A-Z]&lt;/code&gt;</source>
          <target state="translated">大文字の英字： &lt;code&gt;[A-Z]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ee4ae8773db8655dc7d2b77c08252af7f35fda0" translate="yes" xml:space="preserve">
          <source>An uppercase character:&lt;code&gt;\p{IsUppercase}&lt;/code&gt;</source>
          <target state="translated">大文字： &lt;code&gt;\p{IsUppercase}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="836e938c8248e1c4c050bd6b99b16892ca02bd24" translate="yes" xml:space="preserve">
          <source>An uppercase letter (&lt;a href=&quot;#ucc&quot;&gt;category&lt;/a&gt;)</source>
          <target state="translated">大文字（&lt;a href=&quot;#ucc&quot;&gt;カテゴリー&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="5b483df2f7efcdbdb7b4c015fd7882889db8ce6f" translate="yes" xml:space="preserve">
          <source>Analagous to &lt;code&gt;java.lang.ClassLoader.getResource()&lt;/code&gt;, this method allows a &lt;code&gt;BeanContext&lt;/code&gt; implementation to interpose behavior between the child &lt;code&gt;Component&lt;/code&gt; and underlying &lt;code&gt;ClassLoader&lt;/code&gt;.</source>
          <target state="translated">Analagous &lt;code&gt;java.lang.ClassLoader.getResource()&lt;/code&gt; 、この方法では可能に &lt;code&gt;BeanContext&lt;/code&gt; 子との間にインターポーザ行動に実装する &lt;code&gt;Component&lt;/code&gt; 基礎となる &lt;code&gt;ClassLoader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34f7b411e1213aeb51e56648278e0b9efcd1de1b" translate="yes" xml:space="preserve">
          <source>Analagous to &lt;code&gt;java.lang.ClassLoader.getResourceAsStream()&lt;/code&gt;, this method allows a &lt;code&gt;BeanContext&lt;/code&gt; implementation to interpose behavior between the child &lt;code&gt;Component&lt;/code&gt; and underlying &lt;code&gt;ClassLoader&lt;/code&gt;.</source>
          <target state="translated">Analagous &lt;code&gt;java.lang.ClassLoader.getResourceAsStream()&lt;/code&gt; 、この方法では可能に &lt;code&gt;BeanContext&lt;/code&gt; 子との間にインターポーザ行動に実装する &lt;code&gt;Component&lt;/code&gt; 基礎となる &lt;code&gt;ClassLoader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d596b903fde7a868a8caa87f3d1f291d2d69b2fb" translate="yes" xml:space="preserve">
          <source>Analogous to how NamingException captures name resolution information, LinkException captures &quot;link&quot;-name resolution information pinpointing the problem encountered while resolving a link. All these fields may be null.</source>
          <target state="translated">NamingException が名前解決情報を取得するのと同様に、LinkException はリンクを解決する際に発生した問題をピンポイントで特定する &quot;link&quot; 名前解決情報を取得します。これらのフィールドはすべて NULL の場合があります。</target>
        </trans-unit>
        <trans-unit id="1b3256e9474fb93f150a75cbf71a6ef5a80750e1" translate="yes" xml:space="preserve">
          <source>Analogous to the &lt;a href=&quot;../../../lang/thread#holdsLock(java.lang.Object)&quot;&gt;&lt;code&gt;Thread.holdsLock(Object)&lt;/code&gt;&lt;/a&gt; method for built-in monitor locks, this method is typically used for debugging and testing. For example, a method that should only be called while a lock is held can assert that this is the case:</source>
          <target state="translated">組み込みのモニターロックの&lt;a href=&quot;../../../lang/thread#holdsLock(java.lang.Object)&quot;&gt; &lt;code&gt;Thread.holdsLock(Object)&lt;/code&gt; &lt;/a&gt;メソッドと同様に、このメソッドは通常、デバッグとテストに使用されます。たとえば、ロックが保持されているときにのみ呼び出す必要があるメソッドは、これが当てはまると断言できます。</target>
        </trans-unit>
        <trans-unit id="9457b6e00d2879454343feb2509c157b3a5fb9d0" translate="yes" xml:space="preserve">
          <source>Analogous to the &lt;a href=&quot;../../../lang/thread#holdsLock-java.lang.Object-&quot;&gt;&lt;code&gt;Thread.holdsLock(Object)&lt;/code&gt;&lt;/a&gt; method for built-in monitor locks, this method is typically used for debugging and testing. For example, a method that should only be called while a lock is held can assert that this is the case:</source>
          <target state="translated">組み込みのモニターロックの&lt;a href=&quot;../../../lang/thread#holdsLock-java.lang.Object-&quot;&gt; &lt;code&gt;Thread.holdsLock(Object)&lt;/code&gt; &lt;/a&gt;メソッドと同様に、このメソッドは通常、デバッグとテストに使用されます。たとえば、ロックが保持されている間だけ呼び出す必要があるメソッドは、これが事実であることを表明できます。</target>
        </trans-unit>
        <trans-unit id="28812ed968bdcdc5429aa52045610b2d8b565e91" translate="yes" xml:space="preserve">
          <source>Analogously to how NamingException captures name resolution information, LinkException captures &quot;link&quot;-name resolution information pinpointing the problem encountered while resolving a link. All these fields may be null.</source>
          <target state="translated">NamingException が名前解決情報を取得するのと同様に、LinkException はリンクを解決する際に発生した問題をピンポイントで特定する &quot;link&quot; 名前解決情報を取得します。これらのフィールドはすべて NULL の場合があります。</target>
        </trans-unit>
        <trans-unit id="b201dc50980a40dde2cc728e64726d30111d9b4d" translate="yes" xml:space="preserve">
          <source>Ancestor Reshape Events (HierarchyBoundsListener)</source>
          <target state="translated">祖先再シェイプイベント(HierarchyBoundsListener</target>
        </trans-unit>
        <trans-unit id="3dab2d5cd2e0453a98d75d0bf0e0bafdca38bf27" translate="yes" xml:space="preserve">
          <source>AncestorEvent</source>
          <target state="translated">AncestorEvent</target>
        </trans-unit>
        <trans-unit id="84ad42df358d30ffc3c9f2595fd5d55c01f397d1" translate="yes" xml:space="preserve">
          <source>AncestorListener</source>
          <target state="translated">AncestorListener</target>
        </trans-unit>
        <trans-unit id="971352e40895325c6746743b55d9828b2d79654a" translate="yes" xml:space="preserve">
          <source>AncestorListener Interface to support notification when changes occur to a JComponent or one of its ancestors.</source>
          <target state="translated">JComponentまたはその祖先の1つに変更が発生したときの通知をサポートするためのAncestorListenerインターフェイス。</target>
        </trans-unit>
        <trans-unit id="63862c42c57f01e5ac9021bd27043013c02e989b" translate="yes" xml:space="preserve">
          <source>AncestorListener Interface to support notification when changes occur to a JComponent or one of its ancestors. These include movement and when the component becomes visible or invisible, either by the setVisible() method or by being added or removed from the component hierarchy.</source>
          <target state="translated">AncestorListener インターフェイス JComponent またはその祖先の一つに変更が発生したときの通知をサポートします。これには、移動や、コンポーネントが setVisible()メソッドによって、あるいはコンポーネント階層から追加されたり削除されたりして、コンポーネントが可視または非可視になったときの通知が含まれます。</target>
        </trans-unit>
        <trans-unit id="fb8d794b78a3e48757b734b3d97a084152b328c2" translate="yes" xml:space="preserve">
          <source>And &lt;code&gt;subdir/myentity.ent&lt;/code&gt; contains:</source>
          <target state="translated">また、 &lt;code&gt;subdir/myentity.ent&lt;/code&gt; は次のものが含まれています。</target>
        </trans-unit>
        <trans-unit id="9c4d0e91d63250fc01a00067c5dc48ab711d7212" translate="yes" xml:space="preserve">
          <source>And finally subclasses may define a set of constants to identify the various fields in the formatted output. These constants are used to create a FieldPosition object which identifies what information is contained in the field and its position in the formatted result. These constants should be named &lt;code&gt;&lt;em&gt;item&lt;/em&gt;_FIELD&lt;/code&gt; where &lt;code&gt;&lt;em&gt;item&lt;/em&gt;&lt;/code&gt; identifies the field. For examples of these constants, see &lt;code&gt;ERA_FIELD&lt;/code&gt; and its friends in &lt;a href=&quot;dateformat&quot;&gt;&lt;code&gt;DateFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">そして最後に、サブクラスは、フォーマットされた出力のさまざまなフィールドを識別するために、定数のセットを定義できます。これらの定数は、フィールドに含まれる情報とフォーマットされた結果におけるその位置を識別するFieldPositionオブジェクトを作成するために使用されます。これらの定数は、指定されなければならない &lt;code&gt;&lt;em&gt;item&lt;/em&gt;_FIELD&lt;/code&gt; &lt;code&gt;&lt;em&gt;item&lt;/em&gt;&lt;/code&gt; フィールドを識別します。これらの定数の例については、&lt;a href=&quot;dateformat&quot;&gt; &lt;code&gt;DateFormat&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;ERA_FIELD&lt;/code&gt; およびその仲間を参照してください。</target>
        </trans-unit>
        <trans-unit id="58759bfd2892e37bb3901e696b6c651fee68a315" translate="yes" xml:space="preserve">
          <source>And in German,</source>
          <target state="translated">しかもドイツ語で。</target>
        </trans-unit>
        <trans-unit id="03285a5043012d5173706f365f991bcc3c693427" translate="yes" xml:space="preserve">
          <source>And the JAR protocol:</source>
          <target state="translated">そしてJARプロトコル。</target>
        </trans-unit>
        <trans-unit id="81a61343b0a4eef0a90772c149b2379b3f4da9cc" translate="yes" xml:space="preserve">
          <source>And the child will be added to the &lt;code&gt;contentPane&lt;/code&gt;. The &lt;code&gt;contentPane&lt;/code&gt; will always be non-&lt;code&gt;null&lt;/code&gt;. Attempting to set it to &lt;code&gt;null&lt;/code&gt; will cause the &lt;code&gt;JApplet&lt;/code&gt; to throw an exception. The default &lt;code&gt;contentPane&lt;/code&gt; will have a &lt;code&gt;BorderLayout&lt;/code&gt; manager set on it. Refer to &lt;a href=&quot;rootpanecontainer&quot;&gt;&lt;code&gt;RootPaneContainer&lt;/code&gt;&lt;/a&gt; for details on adding, removing and setting the &lt;code&gt;LayoutManager&lt;/code&gt; of a &lt;code&gt;JApplet&lt;/code&gt;.</source>
          <target state="translated">そして、子は &lt;code&gt;contentPane&lt;/code&gt; に追加されます。 &lt;code&gt;contentPane&lt;/code&gt; は常に非だろう &lt;code&gt;null&lt;/code&gt; 。 &lt;code&gt;null&lt;/code&gt; に設定しようとすると、 &lt;code&gt;JApplet&lt;/code&gt; は例外をスローします。デフォルトの &lt;code&gt;contentPane&lt;/code&gt; には、 &lt;code&gt;BorderLayout&lt;/code&gt; マネージャーが設定されています。参照してください&lt;a href=&quot;rootpanecontainer&quot;&gt; &lt;code&gt;RootPaneContainer&lt;/code&gt; 内&lt;/a&gt;、追加、削除、および設定の詳細について &lt;code&gt;LayoutManager&lt;/code&gt; の &lt;code&gt;JApplet&lt;/code&gt; のを。</target>
        </trans-unit>
        <trans-unit id="e7901df291848d673ab909e4976a26c879b5d3b6" translate="yes" xml:space="preserve">
          <source>And the child will be added to the contentPane. The &lt;code&gt;contentPane&lt;/code&gt; is always non-&lt;code&gt;null&lt;/code&gt;. Attempting to set it to &lt;code&gt;null&lt;/code&gt; generates an exception. The default &lt;code&gt;contentPane&lt;/code&gt; has a &lt;code&gt;BorderLayout&lt;/code&gt; manager set on it. Refer to &lt;a href=&quot;rootpanecontainer&quot;&gt;&lt;code&gt;RootPaneContainer&lt;/code&gt;&lt;/a&gt; for details on adding, removing and setting the &lt;code&gt;LayoutManager&lt;/code&gt; of a &lt;code&gt;JDialog&lt;/code&gt;.</source>
          <target state="translated">そして、子はcontentPaneに追加されます。 &lt;code&gt;contentPane&lt;/code&gt; は常に非である &lt;code&gt;null&lt;/code&gt; 。 &lt;code&gt;null&lt;/code&gt; に設定しようとすると、例外が生成されます。デフォルトの &lt;code&gt;contentPane&lt;/code&gt; には、 &lt;code&gt;BorderLayout&lt;/code&gt; マネージャーが設定されています。参照してください&lt;a href=&quot;rootpanecontainer&quot;&gt; &lt;code&gt;RootPaneContainer&lt;/code&gt; 内&lt;/a&gt;、追加、削除、および設定の詳細について &lt;code&gt;LayoutManager&lt;/code&gt; の &lt;code&gt;JDialog&lt;/code&gt; のを。</target>
        </trans-unit>
        <trans-unit id="d4f9a196f62769df6e77a0030bd84667022eef02" translate="yes" xml:space="preserve">
          <source>And the child will be added to the contentPane. The &lt;code&gt;contentPane&lt;/code&gt; will always be non-&lt;code&gt;null&lt;/code&gt;. Attempting to set it to &lt;code&gt;null&lt;/code&gt; will cause the &lt;code&gt;JWindow&lt;/code&gt; to throw an exception. The default &lt;code&gt;contentPane&lt;/code&gt; will have a &lt;code&gt;BorderLayout&lt;/code&gt; manager set on it. Refer to &lt;a href=&quot;rootpanecontainer&quot;&gt;&lt;code&gt;RootPaneContainer&lt;/code&gt;&lt;/a&gt; for details on adding, removing and setting the &lt;code&gt;LayoutManager&lt;/code&gt; of a &lt;code&gt;JWindow&lt;/code&gt;.</source>
          <target state="translated">そして、子はcontentPaneに追加されます。 &lt;code&gt;contentPane&lt;/code&gt; は常に非だろう &lt;code&gt;null&lt;/code&gt; 。 &lt;code&gt;null&lt;/code&gt; に設定しようとすると、 &lt;code&gt;JWindow&lt;/code&gt; は例外をスローします。デフォルトの &lt;code&gt;contentPane&lt;/code&gt; には、 &lt;code&gt;BorderLayout&lt;/code&gt; マネージャーが設定されています。参照してください&lt;a href=&quot;rootpanecontainer&quot;&gt; &lt;code&gt;RootPaneContainer&lt;/code&gt; 内&lt;/a&gt;、追加、削除、および設定の詳細について &lt;code&gt;LayoutManager&lt;/code&gt; の &lt;code&gt;JWindow&lt;/code&gt; のを。</target>
        </trans-unit>
        <trans-unit id="b7c257a9a5f6258c050e5f2b96be91ebbf3bf3a2" translate="yes" xml:space="preserve">
          <source>And the child will be added to the contentPane. The content pane is actually managed by an instance of &lt;code&gt;JRootPane&lt;/code&gt;, which also manages a layout pane, glass pane, and optional menu bar for the internal frame. Please see the &lt;code&gt;JRootPane&lt;/code&gt; documentation for a complete description of these components. Refer to &lt;a href=&quot;rootpanecontainer&quot;&gt;&lt;code&gt;RootPaneContainer&lt;/code&gt;&lt;/a&gt; for details on adding, removing and setting the &lt;code&gt;LayoutManager&lt;/code&gt; of a &lt;code&gt;JInternalFrame&lt;/code&gt;.</source>
          <target state="translated">そして、子はcontentPaneに追加されます。コンテンツペインは、実際には &lt;code&gt;JRootPane&lt;/code&gt; のインスタンスによって管理されます。このインスタンスは、内部フレームのレイアウトペイン、ガラスペイン、およびオプションのメニューバーも管理します。これらのコンポーネントの詳細については、 &lt;code&gt;JRootPane&lt;/code&gt; のドキュメントを参照してください。参照してください&lt;a href=&quot;rootpanecontainer&quot;&gt; &lt;code&gt;RootPaneContainer&lt;/code&gt; 内&lt;/a&gt;、追加、削除、および設定の詳細について &lt;code&gt;LayoutManager&lt;/code&gt; の &lt;code&gt;JInternalFrame&lt;/code&gt; のを。</target>
        </trans-unit>
        <trans-unit id="d88ff6bd1af1455a5015091d765784499214487d" translate="yes" xml:space="preserve">
          <source>And the child will be added to the contentPane. The content pane will always be non-null. Attempting to set it to null will cause the JFrame to throw an exception. The default content pane will have a BorderLayout manager set on it. Refer to &lt;a href=&quot;rootpanecontainer&quot;&gt;&lt;code&gt;RootPaneContainer&lt;/code&gt;&lt;/a&gt; for details on adding, removing and setting the &lt;code&gt;LayoutManager&lt;/code&gt; of a &lt;code&gt;JFrame&lt;/code&gt;.</source>
          <target state="translated">そして、子はcontentPaneに追加されます。コンテンツペインは常にnull以外になります。nullに設定しようとすると、JFrameは例外をスローします。デフォルトのコンテンツペインには、BorderLayoutマネージャーが設定されています。参照してください&lt;a href=&quot;rootpanecontainer&quot;&gt; &lt;code&gt;RootPaneContainer&lt;/code&gt; 内&lt;/a&gt;、追加、削除、および設定の詳細について &lt;code&gt;LayoutManager&lt;/code&gt; の &lt;code&gt;JFrame&lt;/code&gt; のを。</target>
        </trans-unit>
        <trans-unit id="3b7aa00a81c72b8aecaff1e5f4972131bf3dd875" translate="yes" xml:space="preserve">
          <source>And the file &lt;code&gt;java.text.spi.DateFormatProvider&lt;/code&gt; should have a line such as:</source>
          <target state="translated">また、ファイル &lt;code&gt;java.text.spi.DateFormatProvider&lt;/code&gt; には次のような行が必要です。</target>
        </trans-unit>
        <trans-unit id="6e5610006c9239d4cb336c2c7d577aba9f78227d" translate="yes" xml:space="preserve">
          <source>And the following piece of code which is equivalent to the one listed above would also produce the same output:</source>
          <target state="translated">また、上に挙げたものと同等の以下のコードでも同じ出力が得られます。</target>
        </trans-unit>
        <trans-unit id="d6ba9b1501fa8e89bbc275bbffc2ddb998e120d5" translate="yes" xml:space="preserve">
          <source>And the following produces a &lt;code&gt;ConcurrentMap&lt;/code&gt; mapping a unique identifier to students:</source>
          <target state="translated">そして、以下は、学生に一意の識別子をマッピングする &lt;code&gt;ConcurrentMap&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="eadfc00610c56c5450e03359483df454e3c7b3ae" translate="yes" xml:space="preserve">
          <source>And the following produces a &lt;code&gt;Map&lt;/code&gt; mapping a unique identifier to students:</source>
          <target state="translated">そして、以下は、一意の識別子を学生にマッピングする &lt;code&gt;Map&lt;/code&gt; 生成します。</target>
        </trans-unit>
        <trans-unit id="ebfeebb6a2ed5661409db202d47594952d75a6a8" translate="yes" xml:space="preserve">
          <source>And the output result would be like the following:</source>
          <target state="translated">そして、出力結果は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="f9aca319efba42c1261cd7b6aebe23668ebc420d" translate="yes" xml:space="preserve">
          <source>Angled</source>
          <target state="translated">Angled</target>
        </trans-unit>
        <trans-unit id="88fac44e867c1873c40382241256375ba9f8ae23" translate="yes" xml:space="preserve">
          <source>Annex C: Compatibility Properties</source>
          <target state="translated">付属書C:互換性特性</target>
        </trans-unit>
        <trans-unit id="d1443be703d91abac6a85fe311fc11e9f8658347" translate="yes" xml:space="preserve">
          <source>Anno Hijrah (AH)</source>
          <target state="translated">アノヒジュラ</target>
        </trans-unit>
        <trans-unit id="39a3c021a6592dfd08c18bc0f34ba1f7c10d56d9" translate="yes" xml:space="preserve">
          <source>AnnotatedArrayType</source>
          <target state="translated">AnnotatedArrayType</target>
        </trans-unit>
        <trans-unit id="89ab8136e9a5ba18bc9f00db735c01db3596a810" translate="yes" xml:space="preserve">
          <source>AnnotatedArrayType.getAnnotatedGenericComponentType()</source>
          <target state="translated">AnnotatedArrayType.getAnnotatedGenericComponentType()</target>
        </trans-unit>
        <trans-unit id="898c7a7c1fc4017ba193ae0d14c7ba2693d10175" translate="yes" xml:space="preserve">
          <source>AnnotatedConstruct</source>
          <target state="translated">AnnotatedConstruct</target>
        </trans-unit>
        <trans-unit id="e918d82cbd1ba19481047d349462baec2df8ab3a" translate="yes" xml:space="preserve">
          <source>AnnotatedConstruct.getAnnotation()</source>
          <target state="translated">AnnotatedConstruct.getAnnotation()</target>
        </trans-unit>
        <trans-unit id="95613154ff1651f054757fad1337dcb6c703b6eb" translate="yes" xml:space="preserve">
          <source>AnnotatedConstruct.getAnnotationMirrors()</source>
          <target state="translated">AnnotatedConstruct.getAnnotationMirrors()</target>
        </trans-unit>
        <trans-unit id="6df52c0d2731e865cb51147bf7bc635087e2e034" translate="yes" xml:space="preserve">
          <source>AnnotatedConstruct.getAnnotationsByType()</source>
          <target state="translated">AnnotatedConstruct.getAnnotationsByType()</target>
        </trans-unit>
        <trans-unit id="6584aa691c0cadc0b86fb3490fd9ae2ba540e603" translate="yes" xml:space="preserve">
          <source>AnnotatedElement</source>
          <target state="translated">AnnotatedElement</target>
        </trans-unit>
        <trans-unit id="1e47eef6a22a56a5262567dd4bdbad6e88c744d0" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getAnnotation()</source>
          <target state="translated">AnnotatedElement.getAnnotation()</target>
        </trans-unit>
        <trans-unit id="58532747f94ef8fd11ad6f1399270b2d661604af" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getAnnotations()</source>
          <target state="translated">AnnotatedElement.getAnnotations()</target>
        </trans-unit>
        <trans-unit id="2110e67d2c7ca30804040720a5465fe95719121a" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getAnnotationsByType()</source>
          <target state="translated">AnnotatedElement.getAnnotationsByType()</target>
        </trans-unit>
        <trans-unit id="b95fe124533e0be817be43ef3f607ae91fd69b6e" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getDeclaredAnnotation()</source>
          <target state="translated">AnnotatedElement.getDeclaredAnnotation()</target>
        </trans-unit>
        <trans-unit id="c2b3e852cda8e3d2a83088a97d848ddf44f9df00" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getDeclaredAnnotations()</source>
          <target state="translated">AnnotatedElement.getDeclaredAnnotations()</target>
        </trans-unit>
        <trans-unit id="d5695304cf5abbea91a53fbc07f24c4aaa5d193a" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.getDeclaredAnnotationsByType()</source>
          <target state="translated">AnnotatedElement.getDeclaredAnnotationsByType()</target>
        </trans-unit>
        <trans-unit id="c42bff3a16d7811a0b3d0f50dc0c32d58614e6b8" translate="yes" xml:space="preserve">
          <source>AnnotatedElement.isAnnotationPresent()</source>
          <target state="translated">AnnotatedElement.isAnnotationPresent()</target>
        </trans-unit>
        <trans-unit id="4100e35c02e1ed895766f501d3b6456edef792d2" translate="yes" xml:space="preserve">
          <source>AnnotatedParameterizedType</source>
          <target state="translated">AnnotatedParameterizedType</target>
        </trans-unit>
        <trans-unit id="40b578a952041350afde6fadd54a76ffa696f218" translate="yes" xml:space="preserve">
          <source>AnnotatedParameterizedType.getAnnotatedActualTypeArguments()</source>
          <target state="translated">AnnotatedParameterizedType.getAnnotatedActualTypeArguments()</target>
        </trans-unit>
        <trans-unit id="58aa1b064819f6773e9b52c96e210a9a393b17fc" translate="yes" xml:space="preserve">
          <source>AnnotatedType</source>
          <target state="translated">AnnotatedType</target>
        </trans-unit>
        <trans-unit id="85da65647ba9a5b3dcab9b7610fb9c943879abfa" translate="yes" xml:space="preserve">
          <source>AnnotatedType.getType()</source>
          <target state="translated">AnnotatedType.getType()</target>
        </trans-unit>
        <trans-unit id="9ded471795dd45492f925c4e5632633221f1c52b" translate="yes" xml:space="preserve">
          <source>AnnotatedTypeVariable</source>
          <target state="translated">AnnotatedTypeVariable</target>
        </trans-unit>
        <trans-unit id="be86402646208c2da6911b25b33ad677c6bd9b65" translate="yes" xml:space="preserve">
          <source>AnnotatedTypeVariable.getAnnotatedBounds()</source>
          <target state="translated">AnnotatedTypeVariable.getAnnotatedBounds()</target>
        </trans-unit>
        <trans-unit id="fea2f58a0d3ec33ace7f258ab7a46dcfd7705830" translate="yes" xml:space="preserve">
          <source>AnnotatedWildcardType</source>
          <target state="translated">AnnotatedWildcardType</target>
        </trans-unit>
        <trans-unit id="27ab6888c5a54622d2ab697cb51ece28dc887dbb" translate="yes" xml:space="preserve">
          <source>AnnotatedWildcardType.getAnnotatedLowerBounds()</source>
          <target state="translated">AnnotatedWildcardType.getAnnotatedLowerBounds()</target>
        </trans-unit>
        <trans-unit id="417220be86907df18ec684a1b12e08edcccfcd25" translate="yes" xml:space="preserve">
          <source>AnnotatedWildcardType.getAnnotatedUpperBounds()</source>
          <target state="translated">AnnotatedWildcardType.getAnnotatedUpperBounds()</target>
        </trans-unit>
        <trans-unit id="de3b78b64190965365f72568ffbe049d4ba32c22" translate="yes" xml:space="preserve">
          <source>Annotation</source>
          <target state="translated">Annotation</target>
        </trans-unit>
        <trans-unit id="1dad3896014873ba94c10c7fa13561327e7f8704" translate="yes" xml:space="preserve">
          <source>Annotation Type</source>
          <target state="translated">アノテーションタイプ</target>
        </trans-unit>
        <trans-unit id="91140b325cb3770e998227c1bbe84232fff137e1" translate="yes" xml:space="preserve">
          <source>Annotation Type BeanProperty</source>
          <target state="translated">アノテーション型 BeanProperty</target>
        </trans-unit>
        <trans-unit id="927f5c92664e03ff46c741bb2403895c437d88c1" translate="yes" xml:space="preserve">
          <source>Annotation Type ConstructorParameters</source>
          <target state="translated">アノテーション型ConstructorParameters</target>
        </trans-unit>
        <trans-unit id="5e7309dbabddcdae19191dd9f02369f0c7352ff8" translate="yes" xml:space="preserve">
          <source>Annotation Type ConstructorProperties</source>
          <target state="translated">アノテーション型 ConstructorProperties</target>
        </trans-unit>
        <trans-unit id="0973863efc52d8a4673cbc271c706041689e63b2" translate="yes" xml:space="preserve">
          <source>Annotation Type Deprecated</source>
          <target state="translated">アノテーションタイプ 非推奨</target>
        </trans-unit>
        <trans-unit id="6bbe1f4e8bf695876324ef0c6bc3c2b2c3217906" translate="yes" xml:space="preserve">
          <source>Annotation Type DescriptorKey</source>
          <target state="translated">アノテーションタイプDescriptorKey</target>
        </trans-unit>
        <trans-unit id="4cd10749e72864bb37da45e69f73ed72cae7b0d1" translate="yes" xml:space="preserve">
          <source>Annotation Type Documented</source>
          <target state="translated">注釈の種類 文書化されている</target>
        </trans-unit>
        <trans-unit id="03d417f6d05e2c064e12f9f18fa1c01eab72a891" translate="yes" xml:space="preserve">
          <source>Annotation Type FunctionalInterface</source>
          <target state="translated">アノテーション型FunctionalInterface</target>
        </trans-unit>
        <trans-unit id="117f7536bb0626bf476eaedf75423d02ca0894f4" translate="yes" xml:space="preserve">
          <source>Annotation Type Generated</source>
          <target state="translated">生成されたアノテーションの種類</target>
        </trans-unit>
        <trans-unit id="9e2518c862c81f112d8515353db31490e21cece6" translate="yes" xml:space="preserve">
          <source>Annotation Type Inherited</source>
          <target state="translated">アノテーションタイプ 継承</target>
        </trans-unit>
        <trans-unit id="ccded0748d1fd50884e18bda658ce2869d185137" translate="yes" xml:space="preserve">
          <source>Annotation Type JavaBean</source>
          <target state="translated">JavaBean型アノテーション</target>
        </trans-unit>
        <trans-unit id="98b657a4a671b6d18319992ce70cd2a2f11b917b" translate="yes" xml:space="preserve">
          <source>Annotation Type MXBean</source>
          <target state="translated">アノテーション型MXBean</target>
        </trans-unit>
        <trans-unit id="70621484999741d9f315043f8570d4aba80962ef" translate="yes" xml:space="preserve">
          <source>Annotation Type Native</source>
          <target state="translated">アノテーションの種類 ネイティブ</target>
        </trans-unit>
        <trans-unit id="7c033aecd1b5c11b0d69bb685063a683d9613c94" translate="yes" xml:space="preserve">
          <source>Annotation Type Override</source>
          <target state="translated">アノテーションタイプのオーバーライド</target>
        </trans-unit>
        <trans-unit id="3ef21c93cf4a092920e6ff2de215611e1628a787" translate="yes" xml:space="preserve">
          <source>Annotation Type PostConstruct</source>
          <target state="translated">アノテーション型 PostConstruct</target>
        </trans-unit>
        <trans-unit id="d2cd78a6e8de7a472ef52824e6191f52951087e6" translate="yes" xml:space="preserve">
          <source>Annotation Type PreDestroy</source>
          <target state="translated">アノテーションタイプ PreDestroy</target>
        </trans-unit>
        <trans-unit id="ed08037a1c561f837dfeead83fc5c657f1d27616" translate="yes" xml:space="preserve">
          <source>Annotation Type Repeatable</source>
          <target state="translated">アノテーションタイプ 再現性</target>
        </trans-unit>
        <trans-unit id="4b2eb3ae86e651034661ca2cfda35d2b601d9f98" translate="yes" xml:space="preserve">
          <source>Annotation Type Resource</source>
          <target state="translated">アノテーションタイプ リソース</target>
        </trans-unit>
        <trans-unit id="da7f20358dc7ccc13073c2c513d22507af6d51a0" translate="yes" xml:space="preserve">
          <source>Annotation Type Resources</source>
          <target state="translated">アノテーションの種類 資源</target>
        </trans-unit>
        <trans-unit id="522b30d04006bf09c1e705a865739b1be10e2407" translate="yes" xml:space="preserve">
          <source>Annotation Type Retention</source>
          <target state="translated">アノテーションタイプの保持</target>
        </trans-unit>
        <trans-unit id="5fcf6454526e1e7187b20dbefdd90612de4ded80" translate="yes" xml:space="preserve">
          <source>Annotation Type SafeVarargs</source>
          <target state="translated">アノテーション型 SafeVarargs</target>
        </trans-unit>
        <trans-unit id="3fb381fd9596294abd9697d5d0b277feded00621" translate="yes" xml:space="preserve">
          <source>Annotation Type SupportedAnnotationTypes</source>
          <target state="translated">アノテーションタイプ SupportedAnnotationTypes</target>
        </trans-unit>
        <trans-unit id="4edf3467cb5f0a661bf135b2c8839cf0a3817b99" translate="yes" xml:space="preserve">
          <source>Annotation Type SupportedOptions</source>
          <target state="translated">アノテーションタイプ SupportedOptions</target>
        </trans-unit>
        <trans-unit id="4680725098084c8006daca170fba946d1a1fb0f7" translate="yes" xml:space="preserve">
          <source>Annotation Type SupportedSourceVersion</source>
          <target state="translated">アノテーションタイプ SupportedSourceVersion</target>
        </trans-unit>
        <trans-unit id="4614b646799fcfc4639d9396b7093414b63a4a6d" translate="yes" xml:space="preserve">
          <source>Annotation Type SuppressWarnings</source>
          <target state="translated">アノテーション型 SuppressWarnings</target>
        </trans-unit>
        <trans-unit id="01ccad2c7e97941aafb1506e591dc51356c07eee" translate="yes" xml:space="preserve">
          <source>Annotation Type SwingContainer</source>
          <target state="translated">アノテーション型 SwingContainer</target>
        </trans-unit>
        <trans-unit id="928166330dec85307dd2322795148f4d3e93e3af" translate="yes" xml:space="preserve">
          <source>Annotation Type Target</source>
          <target state="translated">アノテーションタイプ ターゲット</target>
        </trans-unit>
        <trans-unit id="4cf6f7c37998b022a9ac6a66e99ccba885fe437d" translate="yes" xml:space="preserve">
          <source>Annotation Type Transient</source>
          <target state="translated">アノテーションタイプ トランジェント</target>
        </trans-unit>
        <trans-unit id="451ef479320c3e9eb4b5bc9bfe70003464bef8ad" translate="yes" xml:space="preserve">
          <source>Annotation Types Summary</source>
          <target state="translated">アノテーションタイプの概要</target>
        </trans-unit>
        <trans-unit id="47b3096e195e22b59f31814830a501e220efb3a8" translate="yes" xml:space="preserve">
          <source>Annotation element</source>
          <target state="translated">アノテーション要素</target>
        </trans-unit>
        <trans-unit id="5d331e0399ee71b4e6131cf5e506aba1258ec8f3" translate="yes" xml:space="preserve">
          <source>Annotation processing happens in a sequence of &lt;a href=&quot;roundenvironment&quot;&gt;rounds&lt;/a&gt;. On each round, a processor may be asked to &lt;a href=&quot;#process(java.util.Set,javax.annotation.processing.RoundEnvironment)&quot;&gt;process&lt;/a&gt; a subset of the annotations found on the source and class files produced by a prior round. The inputs to the first round of processing are the initial inputs to a run of the tool; these initial inputs can be regarded as the output of a virtual zeroth round of processing. If a processor was asked to process on a given round, it will be asked to process on subsequent rounds, including the last round, even if there are no annotations for it to process. The tool infrastructure may also ask a processor to process files generated implicitly by the tool's operation.</source>
          <target state="translated">注釈処理は一連の&lt;a href=&quot;roundenvironment&quot;&gt;ラウンド&lt;/a&gt;で行われます。各ラウンドで、プロセッサは、前のラウンドで生成されたソースファイルとクラスファイルで見つかった注釈のサブセットを&lt;a href=&quot;#process(java.util.Set,javax.annotation.processing.RoundEnvironment)&quot;&gt;処理&lt;/a&gt;するように求められる場合があります。処理の最初のラウンドへの入力は、ツールの実行への最初の入力です。これらの初期入力は、仮想の第0ラウンドの処理の出力と見なすことができます。プロセッサが特定のラウンドで処理するように求められた場合、処理する注釈がない場合でも、最後のラウンドを含む後続のラウンドで処理するように求められます。ツールインフラストラクチャは、ツールの操作によって暗黙的に生成されたファイルを処理するようにプロセッサに要求する場合もあります。</target>
        </trans-unit>
        <trans-unit id="be50acfea380665f34607b8c61b0962e638cd617" translate="yes" xml:space="preserve">
          <source>Annotation processing happens in a sequence of &lt;a href=&quot;roundenvironment&quot;&gt;rounds&lt;/a&gt;. On each round, a processor may be asked to &lt;a href=&quot;processor#process-java.util.Set-javax.annotation.processing.RoundEnvironment-&quot;&gt;process&lt;/a&gt; a subset of the annotations found on the source and class files produced by a prior round. The inputs to the first round of processing are the initial inputs to a run of the tool; these initial inputs can be regarded as the output of a virtual zeroth round of processing. If a processor was asked to process on a given round, it will be asked to process on subsequent rounds, including the last round, even if there are no annotations for it to process. The tool infrastructure may also ask a processor to process files generated implicitly by the tool's operation.</source>
          <target state="translated">注釈処理は一連の&lt;a href=&quot;roundenvironment&quot;&gt;ラウンド&lt;/a&gt;で行われます。各ラウンドで、前のラウンドで作成されたソースファイルとクラスファイルで見つかった注釈のサブセットを&lt;a href=&quot;processor#process-java.util.Set-javax.annotation.processing.RoundEnvironment-&quot;&gt;処理&lt;/a&gt;するようにプロセッサに要求することができます。処理の最初のラウンドへの入力は、ツールの実行への初期入力です。これらの初期入力は、仮想的な第0ラウンドの処理の出力と見なすことができます。プロセッサが特定のラウンドで処理するように要求された場合、処理する注釈がない場合でも、最後のラウンドを含む後続のラウンドで処理するように要求されます。ツールインフラストラクチャは、ツールの操作によって暗黙的に生成されたファイルを処理するようにプロセッサに要求する場合もあります。</target>
        </trans-unit>
        <trans-unit id="36032bca93b9fd303800cf36031e61dda7d83a46" translate="yes" xml:space="preserve">
          <source>Annotation retention policy.</source>
          <target state="translated">アノテーションの保持方針。</target>
        </trans-unit>
        <trans-unit id="68bab41822f51e69130a0f167746a4786a92e23e" translate="yes" xml:space="preserve">
          <source>Annotation retention policy. The constants of this enumerated type describe the various policies for retaining annotations. They are used in conjunction with the &lt;a href=&quot;retention&quot;&gt;&lt;code&gt;Retention&lt;/code&gt;&lt;/a&gt; meta-annotation type to specify how long annotations are to be retained.</source>
          <target state="translated">アノテーション保持ポリシー。この列挙型の定数は、注釈を保持するためのさまざまなポリシーを記述します。これらは&lt;a href=&quot;retention&quot;&gt; &lt;code&gt;Retention&lt;/code&gt; &lt;/a&gt;メタアノテーションタイプと組み合わせて使用​​され、アノテーションを保持する期間を指定します。</target>
        </trans-unit>
        <trans-unit id="7d9e15e21739f0c37df18fe55093427929a50ed4" translate="yes" xml:space="preserve">
          <source>Annotation to mark an interface explicitly as being an MXBean interface, or as not being an MXBean interface.</source>
          <target state="translated">インターフェースを明示的に MXBean インターフェースであること、または MXBean インターフェースではないことをマークするアノテーション。</target>
        </trans-unit>
        <trans-unit id="7b83e64a16ac8cf35bd04e39f1d8331bd14a60ab" translate="yes" xml:space="preserve">
          <source>Annotation to mark an interface explicitly as being an MXBean interface, or as not being an MXBean interface. By default, an interface is an MXBean interface if it is public and its name ends with &lt;code&gt;MXBean&lt;/code&gt;, as in &lt;code&gt;SomethingMXBean&lt;/code&gt;. The following interfaces are MXBean interfaces:</source>
          <target state="translated">インターフェースを明示的にMXBeanインターフェースとして、またはMXBeanインターフェースとしてマークしないための注釈。 &lt;code&gt;SomethingMXBean&lt;/code&gt; のように、デフォルトでは、インターフェースがパブリックで名前が &lt;code&gt;MXBean&lt;/code&gt; で終わる場合、インターフェースはMXBeanインターフェースです。次のインターフェースはMXBeanインターフェースです。</target>
        </trans-unit>
        <trans-unit id="025e39182f3ae2735d0e2ea25030ac8165d4b17d" translate="yes" xml:space="preserve">
          <source>Annotation type declaration</source>
          <target state="translated">アノテーション型宣言</target>
        </trans-unit>
        <trans-unit id="cdafcdb0e1b335218cd9bc9be4f7136516e71436" translate="yes" xml:space="preserve">
          <source>Annotation.annotationType()</source>
          <target state="translated">Annotation.annotationType()</target>
        </trans-unit>
        <trans-unit id="5d9365cab2f09820f22553419c174082c8d89589" translate="yes" xml:space="preserve">
          <source>Annotation.equals()</source>
          <target state="translated">Annotation.equals()</target>
        </trans-unit>
        <trans-unit id="69c0da2206576aeac601bff1fc4a41f210c1bf90" translate="yes" xml:space="preserve">
          <source>Annotation.getValue()</source>
          <target state="translated">Annotation.getValue()</target>
        </trans-unit>
        <trans-unit id="1bd37ef007a85a0f0456532cba2f6c45fe9fc8cf" translate="yes" xml:space="preserve">
          <source>Annotation.hashCode()</source>
          <target state="translated">Annotation.hashCode()</target>
        </trans-unit>
        <trans-unit id="6aabb1fd40179c01b8df7e2b9959dbafbb5cc444" translate="yes" xml:space="preserve">
          <source>Annotation.toString()</source>
          <target state="translated">Annotation.toString()</target>
        </trans-unit>
        <trans-unit id="3613b17c28715389eeed5fce4e5a109bd2347db1" translate="yes" xml:space="preserve">
          <source>AnnotationFormatError</source>
          <target state="translated">AnnotationFormatError</target>
        </trans-unit>
        <trans-unit id="df37178bdef41ca29b231974228a2c68e5e69896" translate="yes" xml:space="preserve">
          <source>AnnotationMirror</source>
          <target state="translated">AnnotationMirror</target>
        </trans-unit>
        <trans-unit id="07ba8e6efa3764e78a8b59af7fea8ba432d96ef2" translate="yes" xml:space="preserve">
          <source>AnnotationMirror.getAnnotationType()</source>
          <target state="translated">AnnotationMirror.getAnnotationType()</target>
        </trans-unit>
        <trans-unit id="6a8327d9b5d300413d53669b7adfd12b0df65347" translate="yes" xml:space="preserve">
          <source>AnnotationMirror.getElementValues()</source>
          <target state="translated">AnnotationMirror.getElementValues()</target>
        </trans-unit>
        <trans-unit id="f3517af06b31fb4f89a1525ec83ea9eb9b874f31" translate="yes" xml:space="preserve">
          <source>AnnotationTypeMismatchException</source>
          <target state="translated">AnnotationTypeMismatchException</target>
        </trans-unit>
        <trans-unit id="7c01e67f70dc87eb9c4b52854c3698cde397c1ed" translate="yes" xml:space="preserve">
          <source>AnnotationTypeMismatchException.element()</source>
          <target state="translated">AnnotationTypeMismatchException.element()</target>
        </trans-unit>
        <trans-unit id="eae418a343bf145d24e68c5d69f35c3f5055b886" translate="yes" xml:space="preserve">
          <source>AnnotationTypeMismatchException.foundType()</source>
          <target state="translated">AnnotationTypeMismatchException.foundType()</target>
        </trans-unit>
        <trans-unit id="960198ba8987994e62e70b303ff3d860fd2ab3ba" translate="yes" xml:space="preserve">
          <source>AnnotationValue</source>
          <target state="translated">AnnotationValue</target>
        </trans-unit>
        <trans-unit id="acea91a385d6f873924c6a0f8b6b8f75d1fa0fb7" translate="yes" xml:space="preserve">
          <source>AnnotationValue.accept()</source>
          <target state="translated">AnnotationValue.accept()</target>
        </trans-unit>
        <trans-unit id="16ea73c05fb0c14b4bdce70d38231ac5e125bf4c" translate="yes" xml:space="preserve">
          <source>AnnotationValue.getValue()</source>
          <target state="translated">AnnotationValue.getValue()</target>
        </trans-unit>
        <trans-unit id="6c81782afcd998c9b0af20135bdb018242411ec5" translate="yes" xml:space="preserve">
          <source>AnnotationValue.toString()</source>
          <target state="translated">AnnotationValue.toString()</target>
        </trans-unit>
        <trans-unit id="1ed8eaf9a8bef688d61b799cc07602c070e82f6f" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor</source>
          <target state="translated">AnnotationValueVisitor</target>
        </trans-unit>
        <trans-unit id="6a45e78e4c0c5d01c00a83b95c8dbe76498db4ae" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visit()</source>
          <target state="translated">AnnotationValueVisitor.visit()</target>
        </trans-unit>
        <trans-unit id="523b83e220960acffd30ba65228e79f35b1965d8" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitAnnotation()</source>
          <target state="translated">AnnotationValueVisitor.visitAnnotation()</target>
        </trans-unit>
        <trans-unit id="8b1df36003a32e4d36f0ffd338ecf7f692f77b5c" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitArray()</source>
          <target state="translated">AnnotationValueVisitor.visitArray()</target>
        </trans-unit>
        <trans-unit id="d740dbc376935b262567b7c3135ccfd30a40065b" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitBoolean()</source>
          <target state="translated">AnnotationValueVisitor.visitBoolean()</target>
        </trans-unit>
        <trans-unit id="6a89ce619973c8ba110a8c38753c1030adccef84" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitByte()</source>
          <target state="translated">AnnotationValueVisitor.visitByte()</target>
        </trans-unit>
        <trans-unit id="394ae0210ea79c54bd391fe46cc2b38160110c98" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitChar()</source>
          <target state="translated">AnnotationValueVisitor.visitChar()</target>
        </trans-unit>
        <trans-unit id="13ae0fd2b031485a2d1390a2927d8b6d9a432945" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitDouble()</source>
          <target state="translated">AnnotationValueVisitor.visitDouble()</target>
        </trans-unit>
        <trans-unit id="ffa372abefce66f565ea0bc6974940d06e30dd99" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitEnumConstant()</source>
          <target state="translated">AnnotationValueVisitor.visitEnumConstant()</target>
        </trans-unit>
        <trans-unit id="e67dc62a6441cab770ef1bc955bb582ed726f5dc" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitFloat()</source>
          <target state="translated">AnnotationValueVisitor.visitFloat()</target>
        </trans-unit>
        <trans-unit id="bca97cecf5f8a531ef04bf8fa2a79389e4b0c906" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitInt()</source>
          <target state="translated">AnnotationValueVisitor.visitInt()</target>
        </trans-unit>
        <trans-unit id="9f49821481e0d17a1d85975f1bd965b7b089f9bb" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitLong()</source>
          <target state="translated">AnnotationValueVisitor.visitLong()</target>
        </trans-unit>
        <trans-unit id="344a5f99e63230e5b051089d7ca38f5f0c44c571" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitShort()</source>
          <target state="translated">AnnotationValueVisitor.visitShort()</target>
        </trans-unit>
        <trans-unit id="cd9118788c44c75a89de5a225225446a0d5e9f48" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitString()</source>
          <target state="translated">AnnotationValueVisitor.visitString()</target>
        </trans-unit>
        <trans-unit id="c9f06379c4f791e847fa15ef16498f0827682c08" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitType()</source>
          <target state="translated">AnnotationValueVisitor.visitType()</target>
        </trans-unit>
        <trans-unit id="f06a4569c4dcb83da0d6e5422c4b19c872fd738e" translate="yes" xml:space="preserve">
          <source>AnnotationValueVisitor.visitUnknown()</source>
          <target state="translated">AnnotationValueVisitor.visitUnknown()</target>
        </trans-unit>
        <trans-unit id="e8b5bd27f3a36c748abdedba1f16ff6c9c2678a1" translate="yes" xml:space="preserve">
          <source>Annotations are to be discarded by the compiler.</source>
          <target state="translated">アノテーションはコンパイラによって破棄されます。</target>
        </trans-unit>
        <trans-unit id="fcc96b27c544d1550c22513fdbd0edf50def224f" translate="yes" xml:space="preserve">
          <source>Annotations are to be recorded in the class file by the compiler and retained by the VM at run time, so they may be read reflectively.</source>
          <target state="translated">アノテーションは、コンパイラによってクラスファイルに記録され、実行時にVMによって保持されるため、反射的に読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="70872368984e0f0c89ad764e6fafe52a9949499f" translate="yes" xml:space="preserve">
          <source>Annotations are to be recorded in the class file by the compiler but need not be retained by the VM at run time.</source>
          <target state="translated">アノテーションはコンパイラによってクラスファイルに記録されますが、実行時にVMが保持する必要はありません。</target>
        </trans-unit>
        <trans-unit id="9d8124fad57e48f0e3ee85e7c849ccd8f9f98d49" translate="yes" xml:space="preserve">
          <source>Annotations are to be recorded in the class file by the compiler but need not be retained by the VM at run time. This is the default behavior.</source>
          <target state="translated">アノテーションはコンパイラによってクラスファイルに記録されますが、実行時にVMが保持する必要はありません。これがデフォルトの動作です。</target>
        </trans-unit>
        <trans-unit id="19be655b8de3fb7644a8c5771c95a9f545b96d4d" translate="yes" xml:space="preserve">
          <source>Annotations for the run-time package are read from &lt;code&gt;package-info.class&lt;/code&gt; at the same code source as classes in the run-time package.</source>
          <target state="translated">ランタイムパッケージのアノテーションは、ランタイムパッケージのクラスと同じコードソースの &lt;code&gt;package-info.class&lt;/code&gt; から読み取られます。</target>
        </trans-unit>
        <trans-unit id="5b257d13a4cb5ee69822d716a40f9b26917338f8" translate="yes" xml:space="preserve">
          <source>Annotations should be compared using the &lt;code&gt;equals&lt;/code&gt; method. There is no guarantee that any particular annotation will always be represented by the same object.</source>
          <target state="translated">アノテーションは、 &lt;code&gt;equals&lt;/code&gt; メソッドを使用して比較する必要があります。特定の注釈が常に同じオブジェクトによって表されるという保証はありません。</target>
        </trans-unit>
        <trans-unit id="25a4283ecfc000007f29f3e083fe439e1dd2826c" translate="yes" xml:space="preserve">
          <source>Annotations.</source>
          <target state="translated">Annotations.</target>
        </trans-unit>
        <trans-unit id="7d269679a5e554dfd36b51d1e8f021933d74b3b4" translate="yes" xml:space="preserve">
          <source>Anonymous (&lt;a href=&quot;http://www.ietf.org/rfc/rfc2245.txt&quot;&gt;RFC 2245&lt;/a&gt;). This mechanism is anonymous authentication in which no credentials are necessary.</source>
          <target state="translated">匿名（&lt;a href=&quot;http://www.ietf.org/rfc/rfc2245.txt&quot;&gt;RFC 2245&lt;/a&gt;）。このメカニズムは匿名認証で、資格情報は必要ありません。</target>
        </trans-unit>
        <trans-unit id="80443dcea716447aafb7f6ce889459b9ed69341c" translate="yes" xml:space="preserve">
          <source>Another advantage of a &lt;code&gt;JdbcRowSet&lt;/code&gt; object is that it can be used to make a &lt;code&gt;ResultSet&lt;/code&gt; object scrollable and updatable. All &lt;code&gt;RowSet&lt;/code&gt; objects are by default scrollable and updatable. If the driver and database being used do not support scrolling and/or updating of result sets, an application can populate a &lt;code&gt;JdbcRowSet&lt;/code&gt; object with the data of a &lt;code&gt;ResultSet&lt;/code&gt; object and then operate on the &lt;code&gt;JdbcRowSet&lt;/code&gt; object as if it were the &lt;code&gt;ResultSet&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;JdbcRowSet&lt;/code&gt; オブジェクトのもう1つの利点は、 &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトをスクロール可能および更新可能にするために使用できることです。すべての &lt;code&gt;RowSet&lt;/code&gt; オブジェクトは、デフォルトでスクロール可能で更新可能です。使用されているドライバとデータベースがスクロールおよび/または結果セットの更新をサポートしない場合、アプリケーションは、取り込むことができ &lt;code&gt;JdbcRowSet&lt;/code&gt; 用のデータを持つオブジェクト &lt;code&gt;ResultSet&lt;/code&gt; オブジェクト、次いで、上で動作 &lt;code&gt;JdbcRowSet&lt;/code&gt; のそれであるかのようにオブジェクト &lt;code&gt;ResultSet&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="ff8219a463455ffb7548de8cc3face127d2629b9" translate="yes" xml:space="preserve">
          <source>Another advantage of the &lt;code&gt;CachedRowSet&lt;/code&gt; class is that it makes it possible to retrieve and store data from sources other than a relational database. The reader for a rowset can be implemented to read and populate its rowset with data from any tabular data source, including a spreadsheet or flat file. Because both a &lt;code&gt;CachedRowSet&lt;/code&gt; object and its metadata can be created from scratch, a component that acts as a factory for rowsets can use this capability to create a rowset containing data from non-SQL data sources. Nevertheless, it is expected that most of the time, &lt;code&gt;CachedRowSet&lt;/code&gt; objects will contain data that was fetched from an SQL database using the JDBC API.</source>
          <target state="translated">&lt;code&gt;CachedRowSet&lt;/code&gt; クラスのもう1つの利点は、リレーショナルデータベース以外のソースからデータを取得して保存できることです。行セットのリーダーを実装して、スプレッドシートやフラットファイルなど、任意の表形式のデータソースからデータを読み取り、その行セットにデータを入力できます。 &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトとそのメタデータの両方を最初から作成できるため、行セットのファクトリとして機能するコンポーネントは、この機能を使用して、SQL以外のデータソースからのデータを含む行セットを作成できます。それでも、ほとんどの場合、 &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトには、JDBCAPIを使用してSQLデータベースからフェッチされたデータが含まれると予想されます。</target>
        </trans-unit>
        <trans-unit id="278caaf450748a718e3292c7dc0d8d1844dc77fc" translate="yes" xml:space="preserve">
          <source>Another backslash. The second backslash has no special meaning and the two characters represent a single backslash.</source>
          <target state="translated">もう一つのバックスラッシュ。2つ目のバックスラッシュには特別な意味はなく、2つの文字が1つのバックスラッシュを表しています。</target>
        </trans-unit>
        <trans-unit id="0773c82784af8397dee0d17482ab4483eb974aa6" translate="yes" xml:space="preserve">
          <source>Another example would be a multi-column component, such as a &lt;code&gt;JTable&lt;/code&gt;, in which the column sizes are not all equal. The &lt;code&gt;JTable&lt;/code&gt; might use a single &lt;code&gt;SizeSequence&lt;/code&gt; object to store the widths and X positions of all the columns. The &lt;code&gt;JTable&lt;/code&gt; could then use the &lt;code&gt;SizeSequence&lt;/code&gt; object to find the column corresponding to a certain position. The &lt;code&gt;JTable&lt;/code&gt; could update the &lt;code&gt;SizeSequence&lt;/code&gt; object whenever one or more column sizes changed.</source>
          <target state="translated">別の例は、列サイズがすべて同じではない &lt;code&gt;JTable&lt;/code&gt; などの複数列コンポーネントです。 &lt;code&gt;JTable&lt;/code&gt; は、単一使用する可能性がある &lt;code&gt;SizeSequence&lt;/code&gt; すべての列の幅とX位置を格納するオブジェクトを。次に、 &lt;code&gt;JTable&lt;/code&gt; は &lt;code&gt;SizeSequence&lt;/code&gt; オブジェクトを使用して、特定の位置に対応する列を見つけることができます。 &lt;code&gt;JTable&lt;/code&gt; は更新でき &lt;code&gt;SizeSequence&lt;/code&gt; 一枚の以上の列のサイズが変更されたときにオブジェクトを。</target>
        </trans-unit>
        <trans-unit id="b67e639149fb9f851818ff99c6391314dd0e4fa4" translate="yes" xml:space="preserve">
          <source>Another job for the cell renderer is in helping to determine sizing information for the list. By default, the list's &lt;code&gt;ListUI&lt;/code&gt; determines the size of cells by asking the cell renderer for its preferred size for each list item. This can be expensive for large lists of items. To avoid these calculations, you can set a &lt;code&gt;fixedCellWidth&lt;/code&gt; and &lt;code&gt;fixedCellHeight&lt;/code&gt; on the list, or have these values calculated automatically based on a single prototype value:</source>
          <target state="translated">セルレンダラーのもう1つの仕事は、リストのサイズ情報の決定を支援することです。デフォルトでは、リストの &lt;code&gt;ListUI&lt;/code&gt; は、セルレンダラーに各リストアイテムの優先サイズを要求することにより、セルのサイズを決定します。これは、アイテムの大きなリストには高額になる可能性があります。これらの計算を回避するには、リストに &lt;code&gt;fixedCellWidth&lt;/code&gt; と &lt;code&gt;fixedCellHeight&lt;/code&gt; を設定するか、単一のプロトタイプ値に基づいてこれらの値を自動的に計算します。</target>
        </trans-unit>
        <trans-unit id="dc4a3301cd9c4d3efdf3b80d753c3d4f2e526481" translate="yes" xml:space="preserve">
          <source>Another provider may implement a class for each of the above modes (i.e., one class for</source>
          <target state="translated">別のプロバイダは、上記の各モードのためのクラスを実装してもよい(すなわち、1つのクラスが</target>
        </trans-unit>
        <trans-unit id="e4fc4288d6a922879eeb09c9a460d7c8fbe940b0" translate="yes" xml:space="preserve">
          <source>Another thing to note about these examples is how they use the method &lt;code&gt;acceptChanges&lt;/code&gt;. It is this method that propagates changes in a &lt;code&gt;CachedRowSet&lt;/code&gt; object back to the underlying data source, calling on the &lt;code&gt;RowSet&lt;/code&gt; object's writer internally to write changes to the data source. To do this, the writer has to incur the expense of establishing a connection with that data source. The preceding two code fragments call the method &lt;code&gt;acceptChanges&lt;/code&gt; immediately after calling &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt;. However, when there are multiple rows being changed, it is more efficient to call &lt;code&gt;acceptChanges&lt;/code&gt; after all calls to &lt;code&gt;updateRow&lt;/code&gt; and &lt;code&gt;insertRow&lt;/code&gt; have been made. If &lt;code&gt;acceptChanges&lt;/code&gt; is called only once, only one connection needs to be established.</source>
          <target state="translated">これらの例について注意すべきもう1つの点は、 &lt;code&gt;acceptChanges&lt;/code&gt; メソッドの使用方法です。 &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトの変更を基になるデータソースに伝播し、 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトのライターを内部的に呼び出して、データソースに変更を書き込むのはこのメソッドです。これを行うには、ライターはそのデータソースとの接続を確立するための費用を負担する必要があります。上記の2つのコードフラグメントは、 &lt;code&gt;updateRow&lt;/code&gt; または &lt;code&gt;insertRow&lt;/code&gt; を呼び出した直後にメソッド &lt;code&gt;acceptChanges&lt;/code&gt; を呼び出します。ただし、変更される行が複数ある場合は、 &lt;code&gt;updateRow&lt;/code&gt; と &lt;code&gt;insertRow&lt;/code&gt; をすべて呼び出した後で &lt;code&gt;acceptChanges&lt;/code&gt; を呼び出す方が効率的です。作ったことがある。 &lt;code&gt;acceptChanges&lt;/code&gt; が1回だけ呼び出される場合は、1つの接続のみを確立する必要があります。</target>
        </trans-unit>
        <trans-unit id="5e1c5b1e5bb69ff0cf31d51e349c75af553a6629" translate="yes" xml:space="preserve">
          <source>Another thread notifies threads waiting on this object's monitor to wake up either through a call to the &lt;code&gt;notify&lt;/code&gt; method or the &lt;code&gt;notifyAll&lt;/code&gt; method.</source>
          <target state="translated">別のスレッドが、このオブジェクトのモニターでウェイクアップするのを待っているスレッドに、 &lt;code&gt;notify&lt;/code&gt; メソッドまたは &lt;code&gt;notifyAll&lt;/code&gt; メソッドの呼び出しを介して通知します。</target>
        </trans-unit>
        <trans-unit id="ef72d3480b46154c6b0f3e93a6925ade124026af" translate="yes" xml:space="preserve">
          <source>Another typical usage would be to divide a problem into N parts, describe each part with a Runnable that executes that portion and counts down on the latch, and queue all the Runnables to an Executor. When all sub-parts are complete, the coordinating thread will be able to pass through await. (When threads must repeatedly count down in this way, instead use a &lt;a href=&quot;cyclicbarrier&quot;&gt;&lt;code&gt;CyclicBarrier&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">別の典型的な使用法は、問題をNの部分に分割し、その部分を実行してラッチをカウントダウンするRunnableで各部分を記述し、すべてのRunnableをエグゼキューターにキューイングすることです。すべてのサブパートが完了すると、調整スレッドは待機を通過できます。（スレッドがこのように繰り返しカウントダウンする必要がある場合は、代わりに&lt;a href=&quot;cyclicbarrier&quot;&gt; &lt;code&gt;CyclicBarrier&lt;/code&gt; &lt;/a&gt;を使用してください。）</target>
        </trans-unit>
        <trans-unit id="d411ee31ab6712a63ad89e9b23b92978ad7f9d9c" translate="yes" xml:space="preserve">
          <source>Another use of dynamically typesafe views is debugging. Suppose a program fails with a &lt;code&gt;ClassCastException&lt;/code&gt;, indicating that an incorrectly typed element was put into a parameterized collection. Unfortunately, the exception can occur at any time after the erroneous element is inserted, so it typically provides little or no information as to the real source of the problem. If the problem is reproducible, one can quickly determine its source by temporarily modifying the program to wrap the collection with a dynamically typesafe view. For example, this declaration:</source>
          <target state="translated">動的に型保証されたビューのもう1つの用途はデバッグです。誤って型指定された要素がパラメーター化されたコレクションに入れられたことを示す &lt;code&gt;ClassCastException&lt;/code&gt; でプログラムが失敗したとします。残念ながら、この例外はエラーのある要素が挿入された後はいつでも発生する可能性があるため、通常、問題の実際の原因に関する情報はほとんどまたはまったく提供されません。問題が再現可能な場合は、プログラムを一時的に変更して、コレクションを動的に型保証されたビューでラップすることにより、問題の原因をすばやく特定できます。たとえば、次の宣言は：</target>
        </trans-unit>
        <trans-unit id="cf5b5f29e525592e822d0c201a49d7d5d3ca85fd" translate="yes" xml:space="preserve">
          <source>Another way the character set can be specified is in the document itself. This requires reading the document prior to determining the character set that is desired. To handle this, it is expected that the &lt;code&gt;EditorKit&lt;/code&gt;.read operation throw a &lt;code&gt;ChangedCharSetException&lt;/code&gt; which will be caught. The read is then restarted with a new Reader that uses the character set specified in the &lt;code&gt;ChangedCharSetException&lt;/code&gt; (which is an &lt;code&gt;IOException&lt;/code&gt;).</source>
          <target state="translated">文字セットを指定するもう1つの方法は、ドキュメント自体です。これには、必要な文字セットを決定する前にドキュメントを読む必要があります。これを処理するために、あることが予想され &lt;code&gt;EditorKit&lt;/code&gt; .read操作がスロー &lt;code&gt;ChangedCharSetException&lt;/code&gt; は捕捉されます。次に、 &lt;code&gt;ChangedCharSetException&lt;/code&gt; （ &lt;code&gt;IOException&lt;/code&gt; ）で指定された文字セットを使用する新しいリーダーで読み取りが再開されます。</target>
        </trans-unit>
        <trans-unit id="9a9d24a4302c6890a261ac379b2ab6b218b70ead" translate="yes" xml:space="preserve">
          <source>Another way to reference arguments by position is to use the &lt;code&gt;'&amp;lt;'&lt;/code&gt; (&lt;code&gt;'\u003c'&lt;/code&gt;) flag, which causes the argument for the previous format specifier to be re-used. For example, the following two statements would produce identical strings:</source>
          <target state="translated">位置によって引数を参照する別の方法は、 &lt;code&gt;'&amp;lt;'&lt;/code&gt; （ &lt;code&gt;'\u003c'&lt;/code&gt; ）フラグを使用することです。これにより、前のフォーマット指定子の引数が再利用されます。たとえば、次の2つのステートメントは同じ文字列を生成します。</target>
        </trans-unit>
        <trans-unit id="e690f2b9f492d7ad15a6f9500894187f74c75846" translate="yes" xml:space="preserve">
          <source>Anti-aliasing and Fractional-metrics specified by an application can also affect the size of a character because of rounding to pixel boundaries.</source>
          <target state="translated">アプリケーションによって指定されたアンチエイリアシングとフラクショナルメトリクスは、ピクセル境界への丸めのために文字のサイズに影響を与えることもあります。</target>
        </trans-unit>
        <trans-unit id="af7b0399ae948c4137d8bd19cc77647f184464f6" translate="yes" xml:space="preserve">
          <source>Antialiasing hint key.</source>
          <target state="translated">アンチエイリアスヒントキー。</target>
        </trans-unit>
        <trans-unit id="5fb0219fe3f2b0b0e83c2dbbbe288c78901772d8" translate="yes" xml:space="preserve">
          <source>Antialiasing hint key. The &lt;code&gt;ANTIALIASING&lt;/code&gt; hint controls whether or not the geometry rendering methods of a &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; object will attempt to reduce aliasing artifacts along the edges of shapes.</source>
          <target state="translated">アンチエイリアスのヒントキー。 &lt;code&gt;ANTIALIASING&lt;/code&gt; の方法レンダリング幾何か否かヒントコントロール&lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt;オブジェクトは、形状のエッジに沿ってエイリアシングアーチファクトを低減しようとします。</target>
        </trans-unit>
        <trans-unit id="9ad6fddbd526275d637766aaafef517eb3cb16b8" translate="yes" xml:space="preserve">
          <source>Antialiasing hint value -- rendering is done with a default antialiasing mode chosen by the implementation.</source>
          <target state="translated">アンチエイリアシングのヒント値 --実装によって選択されたデフォルトのアンチエイリアシングモードでレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="c28d264bf30ce8dbdeb2af2accb27ae64064aba7" translate="yes" xml:space="preserve">
          <source>Antialiasing hint value -- rendering is done with antialiasing.</source>
          <target state="translated">アンチエイリアスヒントの値 --アンチエイリアスでレンダリングします。</target>
        </trans-unit>
        <trans-unit id="6fdda8d26f7d98fd62fa8463969dd96dc8b3bf0a" translate="yes" xml:space="preserve">
          <source>Antialiasing hint value -- rendering is done without antialiasing.</source>
          <target state="translated">アンチエイリアスヒントの値 --アンチエイリアスをかけずにレンダリングします。</target>
        </trans-unit>
        <trans-unit id="322444d3bb52c341f429ca0454f292dc242f315b" translate="yes" xml:space="preserve">
          <source>Any</source>
          <target state="translated">Any</target>
        </trans-unit>
        <trans-unit id="e837efa7866b70ea4964a47451fd0dbed3e145c7" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;#addConfigurationListener(java.lang.Runnable)&quot;&gt;registered configuration listener&lt;/a&gt; will be invoked after the properties are read.</source>
          <target state="translated">任意&lt;a href=&quot;#addConfigurationListener(java.lang.Runnable)&quot;&gt;登録の構成リスナーは、&lt;/a&gt;プロパティが読み込まれた後に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="fba7cd04166193720f264e86c165094f4b6e86f2" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;../util/timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#isLenient()&quot;&gt;leniency&lt;/a&gt; values that have previously been set are overwritten by &lt;code&gt;newCalendar&lt;/code&gt;'s values.</source>
          <target state="translated">任意の&lt;a href=&quot;../util/timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#isLenient()&quot;&gt;寛大&lt;/a&gt;以前に設定された値がで上書きされ &lt;code&gt;newCalendar&lt;/code&gt; の値。</target>
        </trans-unit>
        <trans-unit id="1c7b3876d1999e760b72c75a1e6a3ce121a0a890" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;../util/timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;dateformat#isLenient--&quot;&gt;leniency&lt;/a&gt; values that have previously been set are overwritten by &lt;code&gt;newCalendar&lt;/code&gt;'s values.</source>
          <target state="translated">任意の&lt;a href=&quot;../util/timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;dateformat#isLenient--&quot;&gt;寛大&lt;/a&gt;以前に設定された値がで上書きされ &lt;code&gt;newCalendar&lt;/code&gt; の値。</target>
        </trans-unit>
        <trans-unit id="2b3256f0600177855700faf9f163b41812c45a5f" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;blockingqueue&quot;&gt;&lt;code&gt;BlockingQueue&lt;/code&gt;&lt;/a&gt; may be used to transfer and hold submitted tasks. The use of this queue interacts with pool sizing:</source>
          <target state="translated">任意の&lt;a href=&quot;blockingqueue&quot;&gt; &lt;code&gt;BlockingQueue&lt;/code&gt; &lt;/a&gt;を使用して、送信されたタスクを転送および保持できます。このキューの使用は、プールのサイズ設定と相互作用します。</target>
        </trans-unit>
        <trans-unit id="50469ac64f74c9042a2f53f3b43c5ba42017ea3f" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;RowSet&lt;/code&gt; object can be added to a &lt;code&gt;JoinRowSet&lt;/code&gt; object to become part of an SQL &lt;code&gt;JOIN&lt;/code&gt; relationship. This means that both connected and disconnected &lt;code&gt;RowSet&lt;/code&gt; objects can be part of a &lt;code&gt;JOIN&lt;/code&gt;. &lt;code&gt;RowSet&lt;/code&gt; objects operating in a connected environment (&lt;code&gt;JdbcRowSet&lt;/code&gt; objects) are encouraged to use the database to which they are already connected to establish SQL &lt;code&gt;JOIN&lt;/code&gt; relationships between tables directly. However, it is possible for a &lt;code&gt;JdbcRowSet&lt;/code&gt; object to be added to a &lt;code&gt;JoinRowSet&lt;/code&gt; object if necessary.</source>
          <target state="translated">任意 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトを添加することができる &lt;code&gt;JoinRowSet&lt;/code&gt; SQLの一部となるオブジェクト &lt;code&gt;JOIN&lt;/code&gt; 関係。これは、接続された &lt;code&gt;RowSet&lt;/code&gt; オブジェクトと切断されたRowSetオブジェクトの両方が &lt;code&gt;JOIN&lt;/code&gt; の一部になることができることを意味します。接続された環境で動作する &lt;code&gt;RowSet&lt;/code&gt; オブジェクト（ &lt;code&gt;JdbcRowSet&lt;/code&gt; オブジェクト）は、すでに接続されているデータベースを使用して、テーブル間の &lt;code&gt;JOIN&lt;/code&gt; 関係を直接確立することをお勧めします。ただし、必要に応じて、 &lt;code&gt;JdbcRowSet&lt;/code&gt; オブジェクトを &lt;code&gt;JoinRowSet&lt;/code&gt; オブジェクトに追加することは可能です。</target>
        </trans-unit>
        <trans-unit id="d8f632a305ba4cb37f219678fe07ce21c5d52181" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;XPath&lt;/code&gt; objects constructed from this factory will use the specified resolver by default.</source>
          <target state="translated">任意の &lt;code&gt;XPath&lt;/code&gt; は、この工場から構築オブジェクトは、デフォルトで指定されたリゾルバを使用します。</target>
        </trans-unit>
        <trans-unit id="e7fc9ad7ac0770ee3d5715933ad7bf4aa69c504f" translate="yes" xml:space="preserve">
          <source>Any BeanInfo associated with the specified &lt;code&gt;beanClass&lt;/code&gt; or any of its parent classes will be ignored.</source>
          <target state="translated">指定された &lt;code&gt;beanClass&lt;/code&gt; またはその親クラスのいずれかに関連付けられているBeanInfo は無視されます。</target>
        </trans-unit>
        <trans-unit id="f2d5679ee729395da001ae24b1893709e43f6232" translate="yes" xml:space="preserve">
          <source>Any BeanInfo associated with the specified &lt;code&gt;beanClass&lt;/code&gt; will be ignored.</source>
          <target state="translated">指定された &lt;code&gt;beanClass&lt;/code&gt; に関連付けられたBeanInfoはすべて無視されます。</target>
        </trans-unit>
        <trans-unit id="36b34d235f90d366fbbaab3130d43207599fb97f" translate="yes" xml:space="preserve">
          <source>Any BeanInfo that can be discovered will be used.</source>
          <target state="translated">発見できるBeanInfoはすべて使用されます。</target>
        </trans-unit>
        <trans-unit id="91fc4fe270878de4be10043a0f7d6405fc46ffdd" translate="yes" xml:space="preserve">
          <source>Any Java object of a class that implements the &lt;a href=&quot;dynamicmbean&quot;&gt;&lt;code&gt;DynamicMBean&lt;/code&gt;&lt;/a&gt; interface is a Dynamic MBean.</source>
          <target state="translated">&lt;a href=&quot;dynamicmbean&quot;&gt; &lt;code&gt;DynamicMBean&lt;/code&gt; &lt;/a&gt;インターフェースを実装するクラスのJavaオブジェクトは、動的MBeanです。</target>
        </trans-unit>
        <trans-unit id="5fc658248a98dbf0fafef8e2b3c16e220147a8b7" translate="yes" xml:space="preserve">
          <source>Any Source can be transformed to a Result using the identity transform specified by calling newTransformer():</source>
          <target state="translated">任意のソースは、newTransformer()を呼び出すことで指定された ID 変換を使用して結果に変換することができます。</target>
        </trans-unit>
        <trans-unit id="bc3cdec7678ab879e9cb60b6c23ed0638862794a" translate="yes" xml:space="preserve">
          <source>Any Unicode extended grapheme cluster</source>
          <target state="translated">任意の Unicode 拡張書記素クラスタ</target>
        </trans-unit>
        <trans-unit id="878dd2b27c0d7871e861dcee06c80435d7ef637a" translate="yes" xml:space="preserve">
          <source>Any Unicode linebreak sequence, is equivalent to &lt;code&gt;\u000D\u000A|[\u000A\u000B\u000C\u000D\u0085\u2028\u2029]
     &lt;/code&gt;</source>
          <target state="translated">Unicodeの改行シーケンスは、 &lt;code&gt;\u000D\u000A|[\u000A\u000B\u000C\u000D\u0085\u2028\u2029] &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9849c8a7dbc780ccac41131fe99fc9bd5646c016" translate="yes" xml:space="preserve">
          <source>Any additional output is written to the output buffer beginning at its current position. At most &lt;a href=&quot;../buffer#remaining()&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; bytes will be written. The buffer's position will be advanced appropriately, but its mark and limit will not be modified.</source>
          <target state="translated">追加の出力は、現在の位置から出力バッファに書き込まれます。最大で&lt;a href=&quot;../buffer#remaining()&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;バイトが書き込まれます。バッファの位置は適切に進められますが、そのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="07a38a08c76f5eb76a6e6d26b38c57c8ada2f5d5" translate="yes" xml:space="preserve">
          <source>Any additional output is written to the output buffer beginning at its current position. At most &lt;a href=&quot;../buffer#remaining()&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; characters will be written. The buffer's position will be advanced appropriately, but its mark and limit will not be modified.</source>
          <target state="translated">追加の出力は、現在の位置から出力バッファに書き込まれます。せいぜい&lt;a href=&quot;../buffer#remaining()&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;文字が書き込まれます。バッファの位置は適切に進められますが、そのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="6fc08c383238f31e74ec6a951c51dbf45488276e" translate="yes" xml:space="preserve">
          <source>Any additional output is written to the output buffer beginning at its current position. At most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; bytes will be written. The buffer's position will be advanced appropriately, but its mark and limit will not be modified.</source>
          <target state="translated">追加の出力は、現在の位置から出力バッファーに書き込まれます。最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;バイトが書き込まれます。バッファーの位置は適切に進められますが、そのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="d89160ec853025a7dd13ded262eb18b4ba5238af" translate="yes" xml:space="preserve">
          <source>Any additional output is written to the output buffer beginning at its current position. At most &lt;a href=&quot;../buffer#remaining--&quot;&gt;&lt;code&gt;out.remaining()&lt;/code&gt;&lt;/a&gt; characters will be written. The buffer's position will be advanced appropriately, but its mark and limit will not be modified.</source>
          <target state="translated">追加の出力は、現在の位置から出力バッファーに書き込まれます。最大で&lt;a href=&quot;../buffer#remaining--&quot;&gt; &lt;code&gt;out.remaining()&lt;/code&gt; &lt;/a&gt;文字が書き込まれます。バッファーの位置は適切に進められますが、そのマークと制限は変更されません。</target>
        </trans-unit>
        <trans-unit id="a8934b5a18a25867373a75d27592862e54f3f40d" translate="yes" xml:space="preserve">
          <source>Any algorithm parameters that may be used in the encryption operation are stored inside of the new &lt;code&gt;SealedObject&lt;/code&gt;.</source>
          <target state="translated">暗号化操作で使用できるアルゴリズムパラメータはすべて、新しい &lt;code&gt;SealedObject&lt;/code&gt; 内に格納されます。</target>
        </trans-unit>
        <trans-unit id="41bfb73786fd6a5996fa5fd6d71d907fff0fd9de" translate="yes" xml:space="preserve">
          <source>Any annotations on the package are read from &lt;code&gt;package-info.class&lt;/code&gt; as specified above.</source>
          <target state="translated">パッケージ上の注釈は、上記のように &lt;code&gt;package-info.class&lt;/code&gt; から読み取られます。</target>
        </trans-unit>
        <trans-unit id="28217249ea650a59594510440b99e6b2835b9e11" translate="yes" xml:space="preserve">
          <source>Any arbitrary value used to indicate a variation of a &lt;code&gt;Locale&lt;/code&gt;. Where there are two or more variant values each indicating its own semantics, these values should be ordered by importance, with most important first, separated by underscore('_'). The variant field is case sensitive.</source>
          <target state="translated">&lt;code&gt;Locale&lt;/code&gt; バリエーションを示すために使用される任意の値。それぞれ独自のセマンティクスを示す2つ以上のバリアント値がある場合、これらの値は、重要度の順に並べる必要があります。バリアントフィールドでは大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="d33437a7454c1b83f35333b24c59b541971ca8bc" translate="yes" xml:space="preserve">
          <source>Any argument to a stage's computation is the outcome of a triggering stage's computation.</source>
          <target state="translated">ステージの計算に対するすべての引数は、トリガーとなるステージの計算の結果です。</target>
        </trans-unit>
        <trans-unit id="89fc821443d8cad046dd54102e3989ffae181623" translate="yes" xml:space="preserve">
          <source>Any array elements following the last element in the Vector are null.</source>
          <target state="translated">Vectorの最後の要素に続く配列要素はすべてNULLです。</target>
        </trans-unit>
        <trans-unit id="8d95a184a347e367ac7b88c589e32e30708dd89e" translate="yes" xml:space="preserve">
          <source>Any attempt to modify the resulting buffer will cause a &lt;a href=&quot;../readonlybufferexception&quot;&gt;&lt;code&gt;ReadOnlyBufferException&lt;/code&gt;&lt;/a&gt; to be thrown. (&lt;a href=&quot;filechannel.mapmode#READ_ONLY&quot;&gt;&lt;code&gt;MapMode.READ_ONLY&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">結果のバッファーを変更しようとすると、&lt;a href=&quot;../readonlybufferexception&quot;&gt; &lt;code&gt;ReadOnlyBufferException&lt;/code&gt; &lt;/a&gt;がスローされます。（&lt;a href=&quot;filechannel.mapmode#READ_ONLY&quot;&gt; &lt;code&gt;MapMode.READ_ONLY&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="33fa846a103fcbcc838ecd8d6c108c0babb01059" translate="yes" xml:space="preserve">
          <source>Any attempt to read object data which exceeds the boundaries of the custom data written by the corresponding writeObject method will cause an OptionalDataException to be thrown with an eof field value of true. Non-object reads which exceed the end of the allotted data will reflect the end of data in the same way that they would indicate the end of the stream: bytewise reads will return -1 as the byte read or number of bytes read, and primitive reads will throw EOFExceptions. If there is no corresponding writeObject method, then the end of default serialized data marks the end of the allotted data.</source>
          <target state="translated">対応する writeObject メソッドによって書き込まれたカスタム データの境界を超えてオブジェクト データを読み出そうとすると、eof フィールドの値が true の OptionalDataException がスローされます。割り当てられたデータの終端を超えてオブジェクト以外のデータを読み出そうとすると、ストリームの終端を示すのと同じ方法でデータの終端が反映されます:バイト単位の読み取りでは読み取りバイト数または読み取りバイト数として -1 が返され、プリミティブな読み取りでは EOFException がスローされます。対応する writeObject メソッドがない場合、デフォルトのシリアル化データの終了は、割り当てられたデータの終了を示します。</target>
        </trans-unit>
        <trans-unit id="d03391cf9563966b46dad3f5b96b7ea721c93a92" translate="yes" xml:space="preserve">
          <source>Any attributes associated with the name are removed. Intermediate contexts are not changed.</source>
          <target state="translated">名前に関連付けられた属性はすべて削除されます。中間コンテキストは変更されません。</target>
        </trans-unit>
        <trans-unit id="138d1be4feab75eed27dc6edb1cbf148dd5f2c2c" translate="yes" xml:space="preserve">
          <source>Any bytes buffered by the encapsulated cipher and waiting to be processed by it will not be written out. For example, if the encapsulated cipher is a block cipher, and the total number of bytes written using one of the &lt;code&gt;write&lt;/code&gt; methods is less than the cipher's block size, no bytes will be written out.</source>
          <target state="translated">カプセル化された暗号によってバッファリングされ、暗号による処理を待っているバイトは書き出されません。たとえば、カプセル化された暗号がブロック暗号であり、 &lt;code&gt;write&lt;/code&gt; メソッドの1つを使用して書き込まれた合計バイト数が暗号のブロックサイズより少ない場合、バイトは書き込まれません。</target>
        </trans-unit>
        <trans-unit id="39a820f00362e925dafb543212bc53cf357b3423" translate="yes" xml:space="preserve">
          <source>Any character (&lt;code&gt;Character.isLetter&lt;/code&gt;).</source>
          <target state="translated">任意の文字（ &lt;code&gt;Character.isLetter&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8c39424e745701104576ae6ba7879913313418bc" translate="yes" xml:space="preserve">
          <source>Any character (&lt;code&gt;Character.isLetter&lt;/code&gt;). All lowercase letters are mapped to upper case.</source>
          <target state="translated">任意の文字（ &lt;code&gt;Character.isLetter&lt;/code&gt; ）。すべての小文字は大文字にマップされます。</target>
        </trans-unit>
        <trans-unit id="191f98256be111f82699767f2f37ae315ad6c589" translate="yes" xml:space="preserve">
          <source>Any character (&lt;code&gt;Character.isLetter&lt;/code&gt;). All upper case letters are mapped to lower case.</source>
          <target state="translated">任意の文字（ &lt;code&gt;Character.isLetter&lt;/code&gt; ）。すべて大文字は小文字にマップされます。</target>
        </trans-unit>
        <trans-unit id="36abd7da00f31ca22008ea2a36d64beb6a6bb085" translate="yes" xml:space="preserve">
          <source>Any character (may or may not match &lt;a href=&quot;#lt&quot;&gt;line terminators&lt;/a&gt;)</source>
          <target state="translated">任意の文字（&lt;a href=&quot;#lt&quot;&gt;行末記号と&lt;/a&gt;一致する場合と一致しない場合があります）</target>
        </trans-unit>
        <trans-unit id="dd877acbce59891c71e45cab4d13e03529950c59" translate="yes" xml:space="preserve">
          <source>Any character except &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, or &lt;code&gt;c&lt;/code&gt; (negation)</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 、 &lt;code&gt;b&lt;/code&gt; 、または &lt;code&gt;c&lt;/code&gt; 以外の任意の文字（否定）</target>
        </trans-unit>
        <trans-unit id="6eb20b4b210d809cc20ecc02e27a12d61731ee77" translate="yes" xml:space="preserve">
          <source>Any character except one in the Greek block (negation)</source>
          <target state="translated">ギリシャ語のブロック内の1つを除く任意の文字(否定)</target>
        </trans-unit>
        <trans-unit id="2100078a047c7a03eb060da42289872c8a92cf81" translate="yes" xml:space="preserve">
          <source>Any character of the string is not a digit of the specified radix, except that the first character may be a minus sign &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002D'&lt;/code&gt;) or plus sign &lt;code&gt;'+'&lt;/code&gt; (&lt;code&gt;'\u002B'&lt;/code&gt;) provided that the string is longer than length 1.</source>
          <target state="translated">文字列が次の場合、最初の文字がマイナス記号 &lt;code&gt;'-'&lt;/code&gt; （ &lt;code&gt;'\u002D'&lt;/code&gt; ）またはプラス記号 &lt;code&gt;'+'&lt;/code&gt; （ &lt;code&gt;'\u002B'&lt;/code&gt; ）である場合を除いて、文字列の文字は指定された基数の数字ではありません。長さ1より長い。</target>
        </trans-unit>
        <trans-unit id="972566481eda3ca2cffb1512537d2746e1ad6383" translate="yes" xml:space="preserve">
          <source>Any character of the string is not a digit of the specified radix, except that the first character may be a minus sign &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002d'&lt;/code&gt;) or plus sign &lt;code&gt;
 '+'&lt;/code&gt; (&lt;code&gt;'\u002B'&lt;/code&gt;) provided that the string is longer than length 1.</source>
          <target state="translated">文字列のどの文字も、指定された基数の数字ではありません。ただし、最初の文字はマイナス記号 &lt;code&gt;'-'&lt;/code&gt; （ &lt;code&gt;'\u002d'&lt;/code&gt; ）またはプラス記号 &lt;code&gt; '+'&lt;/code&gt; （ &lt;code&gt;'\u002B'&lt;/code&gt; ）である場合があります。長さ1より長い。</target>
        </trans-unit>
        <trans-unit id="24d5c44faeee009aacd3ba1efed06335674ee1c9" translate="yes" xml:space="preserve">
          <source>Any character of the string is not a digit of the specified radix, except that the first character may be a minus sign &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002d'&lt;/code&gt;) or plus sign &lt;code&gt;'+'&lt;/code&gt; (&lt;code&gt;'\u002B'&lt;/code&gt;) provided that the string is longer than length 1.</source>
          <target state="translated">文字列が以下の場合、最初の文字がマイナス記号 &lt;code&gt;'-'&lt;/code&gt; （ &lt;code&gt;'\u002d'&lt;/code&gt; ）またはプラス記号 &lt;code&gt;'+'&lt;/code&gt; （ &lt;code&gt;'\u002B'&lt;/code&gt; ）である場合を除いて、文字列の文字は指定された基数の数字ではありません。長さ1より長い。</target>
        </trans-unit>
        <trans-unit id="848625b2dffb8bb084ffcf88acbefa1cfb501ea3" translate="yes" xml:space="preserve">
          <source>Any character of the string is not a digit of the specified radix, except that the first character may be a plus sign &lt;code&gt;'+'&lt;/code&gt; (&lt;code&gt;'\u002B'&lt;/code&gt;) provided that the string is longer than length 1.</source>
          <target state="translated">文字列が長さ1よりも長い場合、最初の文字が正符号 &lt;code&gt;'+'&lt;/code&gt; （ &lt;code&gt;'\u002B'&lt;/code&gt; ）である場合を除いて、文字列のどの文字も指定された基数の数字ではありません。</target>
        </trans-unit>
        <trans-unit id="3456fcd6928498a4f50bda1a7dd6fbf16647bfac" translate="yes" xml:space="preserve">
          <source>Any character or number (&lt;code&gt;Character.isLetter&lt;/code&gt; or &lt;code&gt;Character.isDigit&lt;/code&gt;).</source>
          <target state="translated">任意の文字または数字（ &lt;code&gt;Character.isLetter&lt;/code&gt; または &lt;code&gt;Character.isDigit&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="db7ee7ebd2a4d171b9dfb2df75389b650d4d615e" translate="yes" xml:space="preserve">
          <source>Any characters not explicitly defined as conversions are illegal and are reserved for future extensions.</source>
          <target state="translated">変換として明示的に定義されていない文字はすべて不正であり、将来の拡張のために予約されています。</target>
        </trans-unit>
        <trans-unit id="4ec3cbd03ef7918daa50cbb2d1828b3a04a0f027" translate="yes" xml:space="preserve">
          <source>Any characters not explicitly defined as conversions, date/time conversion suffixes, or flags are illegal and are reserved for future extensions. Use of such a character in a format string will cause an &lt;a href=&quot;unknownformatconversionexception&quot;&gt;&lt;code&gt;UnknownFormatConversionException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;unknownformatflagsexception&quot;&gt;&lt;code&gt;UnknownFormatFlagsException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">変換、日付/時刻変換サフィックス、またはフラグとして明示的に定義されていない文字は無効であり、将来の拡張のために予約されています。このような文字をフォーマット文字列で使用すると、&lt;a href=&quot;unknownformatconversionexception&quot;&gt; &lt;code&gt;UnknownFormatConversionException&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;unknownformatflagsexception&quot;&gt; &lt;code&gt;UnknownFormatFlagsException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="8e7c8cf885c250b76bb650597023d16c94098393" translate="yes" xml:space="preserve">
          <source>Any characters not explicitly defined as date/time conversion suffixes are illegal and are reserved for future extensions.</source>
          <target state="translated">日付/時刻変換サフィックスとして明示的に定義されていない文字はすべて不正であり、将来の拡張のために予約されています。</target>
        </trans-unit>
        <trans-unit id="e0fcbabc5347d639b48a80ddb7365cfb03683852" translate="yes" xml:space="preserve">
          <source>Any characters not explicitly defined as flags are illegal and are reserved for future extensions.</source>
          <target state="translated">フラグとして明示的に定義されていない文字は不正であり、将来の拡張のために予約されています。</target>
        </trans-unit>
        <trans-unit id="fd779da135d1030729e05b50fff842ff80101eac" translate="yes" xml:space="preserve">
          <source>Any class name provided as a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; parameter to methods in &lt;code&gt;ClassLoader&lt;/code&gt; must be a binary name as defined by</source>
          <target state="translated">&lt;code&gt;ClassLoader&lt;/code&gt; のメソッドに&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;パラメータとして提供されるクラス名は、</target>
        </trans-unit>
        <trans-unit id="211c8f330f5d9f1c2416e1315a205a004d5bb5cd" translate="yes" xml:space="preserve">
          <source>Any class name provided as a &lt;code&gt;String&lt;/code&gt; parameter to methods in &lt;code&gt;ClassLoader&lt;/code&gt; must be a binary name as defined by</source>
          <target state="translated">&lt;code&gt;ClassLoader&lt;/code&gt; のメソッドに &lt;code&gt;String&lt;/code&gt; パラメーターとして提供されるクラス名は、によって定義されたバイナリ名である必要があります。</target>
        </trans-unit>
        <trans-unit id="ccc1fa95d3d532e917ea9ab4015ee92f9f75f837" translate="yes" xml:space="preserve">
          <source>Any classes that the agent arranges to be defined by the bootstrap class loader to be members of its unnamed module.</source>
          <target state="translated">エージェントがブートストラップ・クラス・ローダによって定義されたクラスを、名前のないモジュールのメンバになるようにアレンジします。</target>
        </trans-unit>
        <trans-unit id="3202031da98f83117409120cb1bca1b8fa188339" translate="yes" xml:space="preserve">
          <source>Any component that can be placed into a menu should implement this interface.</source>
          <target state="translated">メニューに配置できるコンポーネントはすべて、このインターフェイスを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="457dc10136e33a15c4e2b14753f494e9a9748f3c" translate="yes" xml:space="preserve">
          <source>Any component that can be placed into a menu should implement this interface. This interface is used by &lt;code&gt;MenuSelectionManager&lt;/code&gt; to handle selection and navigation in menu hierarchies.</source>
          <target state="translated">メニューに配置できるコンポーネントはすべて、このインターフェイスを実装する必要があります。このインターフェイスは、 &lt;code&gt;MenuSelectionManager&lt;/code&gt; によって使用され、メニュー階層での選択とナビゲーションを処理します。</target>
        </trans-unit>
        <trans-unit id="5aa26838f6fdb18f70bc359cbf6cb2b658203c68" translate="yes" xml:space="preserve">
          <source>Any contiguous text segments having the same attributes (the same set of attribute/value pairs) are treated as separate runs if the attributes have been given to those text segments separately.</source>
          <target state="translated">同じ属性(同じ属性/値のペア)を持つ連続したテキストセグメントは、それらのテキストセグメントに別々に属性が与えられている場合、別々の実行として扱われます。</target>
        </trans-unit>
        <trans-unit id="56c62a3f42717964cceae562372d37a55e105932" translate="yes" xml:space="preserve">
          <source>Any curly braces within an unquoted pattern must be balanced. For example, &lt;code&gt;&quot;ab {0} de&quot;&lt;/code&gt; and &lt;code&gt;&quot;ab '}' de&quot;&lt;/code&gt; are valid patterns, but &lt;code&gt;&quot;ab {0'}' de&quot;&lt;/code&gt;, &lt;code&gt;&quot;ab } de&quot;&lt;/code&gt; and &lt;code&gt;&quot;''{''&quot;&lt;/code&gt; are not.</source>
          <target state="translated">引用符で囲まれていないパターン内の中括弧は、バランスをとる必要があります。たとえば、 &lt;code&gt;&quot;ab {0} de&quot;&lt;/code&gt; と &lt;code&gt;&quot;ab '}' de&quot;&lt;/code&gt; は有効なパターンですが、 &lt;code&gt;&quot;ab {0'}' de&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;ab } de&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;''{''&quot;&lt;/code&gt; は無効です。</target>
        </trans-unit>
        <trans-unit id="2294e2ac17f729acd480ef14e8d0abe7327b68c1" translate="yes" xml:space="preserve">
          <source>Any exception (except the cases described above) occurs when trying to get the value of the observed attribute.</source>
          <target state="translated">観測された属性の値を取得しようとすると、例外(上記の場合を除く)が発生します。</target>
        </trans-unit>
        <trans-unit id="7d6302a0f2db1ce6581d2d3299da1c1a422b7bc0" translate="yes" xml:space="preserve">
          <source>Any exception that occurs while deserializing an object will be caught by the ObjectInputStream and abort the reading process.</source>
          <target state="translated">オブジェクトのデシリアライズ中に発生した例外は、ObjectInputStreamによってキャッチされ、読み込み処理を中止します。</target>
        </trans-unit>
        <trans-unit id="2f1f820dee5a20c4c2c6dd0ca8b217f346302256" translate="yes" xml:space="preserve">
          <source>Any exception thrown by the &lt;code&gt;finalize&lt;/code&gt; method causes the finalization of this object to be halted, but is otherwise ignored.</source>
          <target state="translated">&lt;code&gt;finalize&lt;/code&gt; メソッドによってスローされた例外は、このオブジェクトのファイナライズを停止させますが、それ以外の場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="2a97358d1fb1964469bc5111d160cf25063c2721" translate="yes" xml:space="preserve">
          <source>Any exception thrown by this method will be ignored by the Java Virtual Machine.</source>
          <target state="translated">このメソッドがスローする例外は、Java 仮想マシンによって無視されます。</target>
        </trans-unit>
        <trans-unit id="bbe7d65e4ad502738d3dc8e64c4affcb97f035da" translate="yes" xml:space="preserve">
          <source>Any exceptions thrown during evaluation of either predicate are relayed to the caller; if evaluation of this predicate throws an exception, the &lt;code&gt;other&lt;/code&gt; predicate will not be evaluated.</source>
          <target state="translated">いずれかの述語の評価中にスローされた例外は、呼び出し元に中継されます。この述部の評価で例外がスローされた場合、 &lt;code&gt;other&lt;/code&gt; 述部は評価されません。</target>
        </trans-unit>
        <trans-unit id="c41eebe53d771812bc41581b7c863684efc0c724" translate="yes" xml:space="preserve">
          <source>Any existing binding using the same &lt;code&gt;name&lt;/code&gt; is replaced. If the new (or existing) &lt;code&gt;value&lt;/code&gt; implements the &lt;code&gt;SSLSessionBindingListener&lt;/code&gt; interface, the object represented by &lt;code&gt;value&lt;/code&gt; is notified appropriately.</source>
          <target state="translated">同じ &lt;code&gt;name&lt;/code&gt; を使用している既存のバインディングは置き換えられます。新しい（または既存の） &lt;code&gt;value&lt;/code&gt; が &lt;code&gt;SSLSessionBindingListener&lt;/code&gt; インターフェースを実装している場合、 &lt;code&gt;value&lt;/code&gt; で表されるオブジェクトは適切に通知されます。</target>
        </trans-unit>
        <trans-unit id="d71ed851abc3904241c5eefda5d469bce8ffc3ab" translate="yes" xml:space="preserve">
          <source>Any explicit PropertyEditor Class that has been registered for this property. Normally this will return &quot;null&quot;, indicating that no special editor has been registered, so the PropertyEditorManager should be used to locate a suitable PropertyEditor.</source>
          <target state="translated">このプロパティに登録されている明示的なPropertyEditorクラス。通常、これは特別なエディタが登録されていないことを示す &quot;null&quot; を返すので、PropertyEditorManager を使用して適切な PropertyEditor を探す必要があります。</target>
        </trans-unit>
        <trans-unit id="53a4eb722044afd1ba5b140da6b8e460dd218ac9" translate="yes" xml:space="preserve">
          <source>Any failure results in an &lt;code&gt;IllegalArgumentException&lt;/code&gt; being thrown; success results in the method returning silently.</source>
          <target state="translated">失敗すると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。成功すると、メソッドはサイレントに戻ります。</target>
        </trans-unit>
        <trans-unit id="de797d25402b48c501fdac042d0b2c62c125a0ba" translate="yes" xml:space="preserve">
          <source>Any fields that are not &lt;code&gt;ChronoField&lt;/code&gt; are processed. This is achieved using &lt;a href=&quot;../temporal/temporalfield#resolve(java.util.Map,java.time.temporal.TemporalAccessor,java.time.format.ResolverStyle)&quot;&gt;&lt;code&gt;TemporalField.resolve(Map, TemporalAccessor, ResolverStyle)&lt;/code&gt;&lt;/a&gt;. Documentation about field resolution is located in the implementation of &lt;code&gt;TemporalField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ChronoField&lt;/code&gt; 以外のフィールドが処理されます。これは&lt;a href=&quot;../temporal/temporalfield#resolve(java.util.Map,java.time.temporal.TemporalAccessor,java.time.format.ResolverStyle)&quot;&gt; &lt;code&gt;TemporalField.resolve(Map, TemporalAccessor, ResolverStyle)&lt;/code&gt; &lt;/a&gt;を使用して実現されます。フィールド解決に関するドキュメントは、 &lt;code&gt;TemporalField&lt;/code&gt; の実装にあります。</target>
        </trans-unit>
        <trans-unit id="43a1cff76d61261e59675bd5733a3761511cfbef" translate="yes" xml:space="preserve">
          <source>Any fields that are not &lt;code&gt;ChronoField&lt;/code&gt; are processed. This is achieved using &lt;a href=&quot;../temporal/temporalfield#resolve-java.util.Map-java.time.temporal.TemporalAccessor-java.time.format.ResolverStyle-&quot;&gt;&lt;code&gt;TemporalField.resolve(Map, TemporalAccessor, ResolverStyle)&lt;/code&gt;&lt;/a&gt;. Documentation about field resolution is located in the implementation of &lt;code&gt;TemporalField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ChronoField&lt;/code&gt; ではないフィールドは処理されます。これは&lt;a href=&quot;../temporal/temporalfield#resolve-java.util.Map-java.time.temporal.TemporalAccessor-java.time.format.ResolverStyle-&quot;&gt; &lt;code&gt;TemporalField.resolve(Map, TemporalAccessor, ResolverStyle)&lt;/code&gt; &lt;/a&gt;を使用して実現されます。フィールド解決に関するドキュメントは、 &lt;code&gt;TemporalField&lt;/code&gt; の実装にあります。</target>
        </trans-unit>
        <trans-unit id="0a6fce68bd86d51f6441e73a14771b3fd990b2f6" translate="yes" xml:space="preserve">
          <source>Any fractional parts of this &lt;code&gt;Duration&lt;/code&gt; object beyond milliseconds will be simply ignored. For example, if this duration is &quot;P1.23456S&quot;, then 1 is added to SECONDS, 234 is added to MILLISECONDS, and the rest will be unused.</source>
          <target state="translated">ミリ秒を超えるこの &lt;code&gt;Duration&lt;/code&gt; オブジェクトの小数部分は、単に無視されます。たとえば、この期間が「P1.23456S」の場合、1がSECONDSに追加され、234がMILLISECONDSに追加され、残りは未使用になります。</target>
        </trans-unit>
        <trans-unit id="c1da4485ec2f07c1aee36712a3606d987c5f6aa7" translate="yes" xml:space="preserve">
          <source>Any hex character (0-9, a-f or A-F).</source>
          <target state="translated">任意の16進数文字(0~9、a~fまたはA~F)。</target>
        </trans-unit>
        <trans-unit id="45b3bab1075ac8e42b42283e784fd96fea9bed27" translate="yes" xml:space="preserve">
          <source>Any image may be transcoded (written to a different format than the one it was originally stored in) simply by performing a read operation followed by a write operation. However, loss of data may occur in this process due to format differences.</source>
          <target state="translated">どのような画像であっても、読み取り操作の後に書き込み操作を行うだけで、トランスコード(元々保存されていたフォーマットとは異なるフォーマットに書き込まれる)されることがあります。ただし、この場合、フォーマットの違いによりデータが失われることがあります。</target>
        </trans-unit>
        <trans-unit id="8bb94b9736316750211463bb48dfecb25de6b533" translate="yes" xml:space="preserve">
          <source>Any letter except an uppercase letter (subtraction)</source>
          <target state="translated">大文字以外の文字(引き算</target>
        </trans-unit>
        <trans-unit id="107e845776e2ec9d398888797921f4899d010ba7" translate="yes" xml:space="preserve">
          <source>Any listener can throw a &lt;code&gt;PropertyVetoException&lt;/code&gt; to veto the update. If one of the listeners vetoes the update, this method passes a new &quot;undo&quot; &lt;code&gt;PropertyChangeEvent&lt;/code&gt; that reverts to the old value to all listeners that already confirmed this update and throws the &lt;code&gt;PropertyVetoException&lt;/code&gt; again.</source>
          <target state="translated">リスナーは、更新を拒否するために &lt;code&gt;PropertyVetoException&lt;/code&gt; をスローできます。リスナーの1つが更新を拒否した場合、このメソッドは、この更新をすでに確認しているすべてのリスナーに古い値に戻す新しい「元に戻す」 &lt;code&gt;PropertyChangeEvent&lt;/code&gt; を渡し、 &lt;code&gt;PropertyVetoException&lt;/code&gt; を再度スローします。</target>
        </trans-unit>
        <trans-unit id="c218a420e7a7272f5f9f2950987da9ef7a7468d9" translate="yes" xml:space="preserve">
          <source>Any log level definitions in the new configuration file will be applied using Logger.setLevel(), if the target Logger exists.</source>
          <target state="translated">新しい構成ファイル内のログ レベル定義は、ターゲット ロガーが存在する場合、Logger.setLevel()を使用して適用されます。</target>
        </trans-unit>
        <trans-unit id="d9989a669eff20f7f8dfd94edbd772da8a73e9b3" translate="yes" xml:space="preserve">
          <source>Any method that converts directly or implicitly from a local date-time to an instant by obtaining the offset has the potential to be complicated.</source>
          <target state="translated">オフセットを取得することで、直接または暗黙のうちにローカルな日時から瞬時に変換する方法は、複雑になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="7e5ee0c44d1728d11cbb240937d0fd20878a15fb" translate="yes" xml:space="preserve">
          <source>Any methods/properties/events in the &lt;code&gt;stopClass&lt;/code&gt; or in its parent classes will be ignored in the analysis.</source>
          <target state="translated">&lt;code&gt;stopClass&lt;/code&gt; またはその親クラスのメソッド/プロパティ/イベントは、分析では無視されます。</target>
        </trans-unit>
        <trans-unit id="65303be8bede48c7776ff3e681e443cc57e37acb" translate="yes" xml:space="preserve">
          <source>Any models subclassed from this class and used in conjunction with a text component that has a look and feel implementation that is derived from BasicTextUI may be safely updated asynchronously, because all access to the View hierarchy is serialized by BasicTextUI if the document is of type &lt;code&gt;AbstractDocument&lt;/code&gt;. The locking assumes that an independent thread will access the View hierarchy only from the DocumentListener methods, and that there will be only one event thread active at a time.</source>
          <target state="translated">ドキュメントが &lt;code&gt;AbstractDocument&lt;/code&gt; タイプの場合、ビュー階層へのすべてのアクセスはBasicTextUIによってシリアル化されるため、このクラスからサブクラス化され、BasicTextUIから派生したルックアンドフィール実装を持つテキストコンポーネントと組み合わせて使用​​されるモデルは、非同期で安全に更新できます。。ロックは、独立したスレッドがDocumentListenerメソッドからのみビュー階層にアクセスし、一度にアクティブなイベントスレッドが1つだけであることを前提としています。</target>
        </trans-unit>
        <trans-unit id="84cbca756ca2e1cdcf21b868af21ee683f1aad0f" translate="yes" xml:space="preserve">
          <source>Any module whose name is given by a 'requires' directive with the 'transitive' modifier is not observable.</source>
          <target state="translated">requires' ディレクティブに 'transitive' 修飾子をつけて名前をつけたモジュールは観測できません。</target>
        </trans-unit>
        <trans-unit id="adffc5f0c791cef37b5f4d963df7ea1ffcf34345" translate="yes" xml:space="preserve">
          <source>Any non-ASCII characters in the filter string should be represented by the appropriate Java (Unicode) characters, and not encoded as UTF-8 octets. Alternately, the &quot;backslash-hexcode&quot; notation described in RFC 2254 may be used.</source>
          <target state="translated">フィルタ文字列内の非ASCII文字は、適切なJava(Unicode)文字で表現しなければならず、UTF-8オクテットとしてエンコードしてはいけません。別の方法として、RFC 2254に記載されている「バックスラッシュ-ヘクスコード」表記法を使用してもよい。</target>
        </trans-unit>
        <trans-unit id="300191ca8fb6c66816fbb3f73db3afa08a125eba" translate="yes" xml:space="preserve">
          <source>Any non-negative integer smaller than or equal to the value returned by this method is guaranteed to be a valid group index for this matcher.</source>
          <target state="translated">このメソッドが返す値以下の非負の整数は、このマッチャの有効なグループインデックスであることが保証されます。</target>
        </trans-unit>
        <trans-unit id="1feabd1f2f378927881c93594ec631fb315af8d4" translate="yes" xml:space="preserve">
          <source>Any number of &lt;code&gt;RowSet&lt;/code&gt; objects can be added to an instance of &lt;code&gt;JoinRowSet&lt;/code&gt; provided that they can be related in an SQL &lt;code&gt;JOIN&lt;/code&gt;. By definition, the SQL &lt;code&gt;JOIN&lt;/code&gt; statement is used to combine the data contained in two or more relational database tables based upon a common attribute. The &lt;code&gt;Joinable&lt;/code&gt; interface provides the methods for establishing a common attribute, which is done by setting a</source>
          <target state="translated">SQL &lt;code&gt;JOIN&lt;/code&gt; で関連付けることができる場合は、 &lt;code&gt;JoinRowSet&lt;/code&gt; のインスタンスに任意の数の &lt;code&gt;RowSet&lt;/code&gt; オブジェクトを追加できます。定義上、SQL &lt;code&gt;JOIN&lt;/code&gt; ステートメントは、共通の属性に基づいて2つ以上のリレーショナルデータベーステーブルに含まれるデータを結合するために使用されます。 &lt;code&gt;Joinable&lt;/code&gt; インターフェースは、設定Aによって行われる共通の属性を確立するための方法を提供します</target>
        </trans-unit>
        <trans-unit id="9f683bf3bc4218bc8c956b780518408ebd4b0368" translate="yes" xml:space="preserve">
          <source>Any number of listeners can be added with this method. The same listener can be added more than once with the same or different values for the filter and handback. There is no special treatment of a duplicate entry. For example, if a listener is registered twice with no filter, then its &lt;code&gt;handleNotification&lt;/code&gt; method will be called twice for each notification.</source>
          <target state="translated">このメソッドでは、任意の数のリスナーを追加できます。フィルターとハンドバックに同じ値または異なる値を使用して、同じリスナーを複数回追加できます。重複したエントリの特別な扱いはありません。たとえば、リスナーがフィルターなしで2回登録されている場合、その &lt;code&gt;handleNotification&lt;/code&gt; メソッドが2回呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1a8596ed5a72baffa1ce8f2e0b945afa99d6ce78" translate="yes" xml:space="preserve">
          <source>Any number of these empty spaces can be replaced by using the &lt;code&gt;setCorner&lt;/code&gt; method to add a component to a particular corner. (Note: The same component cannot be added to multiple corners.) This is useful if there's some extra decoration or function you'd like to add to the scroll pane. The size of each corner component is entirely determined by the size of the headers and/or scroll bars that surround it.</source>
          <target state="translated">&lt;code&gt;setCorner&lt;/code&gt; メソッドを使用してコンポーネントを特定のコーナーに追加することにより、これらの空のスペースをいくつでも置き換えることができます。（注：同じコンポーネントを複数のコーナーに追加することはできません。）これは、スクロールペインに追加したい装飾や機能がある場合に役立ちます。各コーナーコンポーネントのサイズは、それを囲むヘッダーやスクロールバーのサイズによって完全に決定されます。</target>
        </trans-unit>
        <trans-unit id="35ecb095281b8d9c13a0a2946576330e114e733d" translate="yes" xml:space="preserve">
          <source>Any object that wishes to be notified of changes to the scroll bar's value should implement &lt;code&gt;AdjustmentListener&lt;/code&gt;, an interface defined in the package &lt;code&gt;java.awt.event&lt;/code&gt;. Listeners can be added and removed dynamically by calling the methods &lt;code&gt;addAdjustmentListener&lt;/code&gt; and &lt;code&gt;removeAdjustmentListener&lt;/code&gt;.</source>
          <target state="translated">スクロールバーの値の変更の通知を希望するオブジェクトは、パッケージ &lt;code&gt;java.awt.event&lt;/code&gt; で定義されているインターフェイスである &lt;code&gt;AdjustmentListener&lt;/code&gt; を実装する必要があります。メソッド &lt;code&gt;addAdjustmentListener&lt;/code&gt; および &lt;code&gt;removeAdjustmentListener&lt;/code&gt; を呼び出すことにより、リスナーを動的に追加および削除できます。</target>
        </trans-unit>
        <trans-unit id="4ea5d57e1412c6f0ff23fd2f5e9d40128335d2ea" translate="yes" xml:space="preserve">
          <source>Any object with a reference to a context may examine that context's environment. Sensitive information such as clear-text passwords should not be stored there unless the implementation is known to protect it.</source>
          <target state="translated">コンテキストへの参照を持つオブジェクトは、そのコンテキストの環境を調べることができます。明文のパスワードのような機密情報は、実装が保護することが知られていない限り、そこに保存されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="96ec2551dee0560db77417e8e7ac1460fc24f71f" translate="yes" xml:space="preserve">
          <source>Any occurrence of a leading quote, an escape preceding any meta character, an escape at the end of a component, or a component separator character in an unquoted component must be preceded by an escape character when that component is being composed into a composite name string. Alternatively, to avoid adding escape characters as described, the entire component can be quoted using matching single quotes or matching double quotes. A single quote occurring within a double-quoted component is not considered a meta character (and need not be escaped), and vice versa.</source>
          <target state="translated">引用符で囲まれていないコンポーネントに先頭の引用符、メタ文字の前のエスケープ、コンポーネントの最後のエスケープ、またはコンポーネントの区切り文字が出現した場合は、そのコンポーネントを合成名文字列に合成する際に、エスケープ文字を前に付けなければなりません。あるいは、前述のようなエスケープ文字の追加を避けるために、コンポーネント全体を一致する単一引用符または一致する二重引用符を使用して引用することもできます。二重引用符で囲まれたコンポーネントの中にある単一引用符はメタ文字とはみなされません(エスケープされる必要はありません)。</target>
        </trans-unit>
        <trans-unit id="902a5b9291454be0816f2b27af759d61562ef082" translate="yes" xml:space="preserve">
          <source>Any of the family of CMY color spaces.</source>
          <target state="translated">CMYカラースペースのファミリーのいずれか。</target>
        </trans-unit>
        <trans-unit id="4ed3957eb77019c336010a24839d87dce0fc436c" translate="yes" xml:space="preserve">
          <source>Any of the family of CMYK color spaces.</source>
          <target state="translated">CMYKカラースペースのファミリーのいずれか。</target>
        </trans-unit>
        <trans-unit id="2bcfb96fe15db70dc2f00d12ee59a5a4cfc93900" translate="yes" xml:space="preserve">
          <source>Any of the family of GRAY color spaces.</source>
          <target state="translated">GRAYカラースペースのファミリーのいずれか。</target>
        </trans-unit>
        <trans-unit id="a1350067b86c775d78d8df90046d8f8ea1b61350" translate="yes" xml:space="preserve">
          <source>Any of the family of HLS color spaces.</source>
          <target state="translated">HLSの色空間の家族のいずれか。</target>
        </trans-unit>
        <trans-unit id="4797934a10861288a9dce9cdc3ed2a362897c676" translate="yes" xml:space="preserve">
          <source>Any of the family of HSV color spaces.</source>
          <target state="translated">HSV色空間の家族のいずれか。</target>
        </trans-unit>
        <trans-unit id="04223bf51436215d39bad1371bb114595139d08b" translate="yes" xml:space="preserve">
          <source>Any of the family of Lab color spaces.</source>
          <target state="translated">Labカラースペースのファミリーのいずれか。</target>
        </trans-unit>
        <trans-unit id="4300cf5941d1d7b7ab1b6329452cad15d2c9f6a7" translate="yes" xml:space="preserve">
          <source>Any of the family of Luv color spaces.</source>
          <target state="translated">Luvのカラースペースの家族のいずれか。</target>
        </trans-unit>
        <trans-unit id="0662aab687b31ed678bbb4f4793ea76052d61d91" translate="yes" xml:space="preserve">
          <source>Any of the family of RGB color spaces.</source>
          <target state="translated">RGB色空間のファミリーのいずれか。</target>
        </trans-unit>
        <trans-unit id="4bf5ac24a08a1641006d014c25e61178a62bb8d5" translate="yes" xml:space="preserve">
          <source>Any of the family of XYZ color spaces.</source>
          <target state="translated">XYZカラースペースのファミリーのいずれか。</target>
        </trans-unit>
        <trans-unit id="0efb017a2e1aab6d440a6457c7fa1fb9041c1752" translate="yes" xml:space="preserve">
          <source>Any of the family of YCbCr color spaces.</source>
          <target state="translated">YCbCrカラースペースのファミリーのいずれか。</target>
        </trans-unit>
        <trans-unit id="3061bd239a03f893ca747e312863fe4a51c7778f" translate="yes" xml:space="preserve">
          <source>Any of the family of Yxy color spaces.</source>
          <target state="translated">Yxyカラースペースのファミリーのいずれか。</target>
        </trans-unit>
        <trans-unit id="cf65ceb97fa17d8693f3c92ccbda2a56f1101545" translate="yes" xml:space="preserve">
          <source>Any option can be disabled using this method with a Boolean(false):</source>
          <target state="translated">任意のオプションは、このメソッドを使用して Boolean(false)で無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="0d740644a3c7d0e15d0f3d25377b2edf4dd82c1d" translate="yes" xml:space="preserve">
          <source>Any option can be disabled using this method with a Boolean.FALSE:</source>
          <target state="translated">任意のオプションを無効にするには、このメソッドで Boolean.FALSE を指定します。</target>
        </trans-unit>
        <trans-unit id="d2c98461f812fd8834a6e7db40fd417885f3e4fe" translate="yes" xml:space="preserve">
          <source>Any or all of these may be provided, depending on the values of the &lt;var&gt;http://xml.org/sax/features/namespaces&lt;/var&gt; and the &lt;var&gt;http://xml.org/sax/features/namespace-prefixes&lt;/var&gt; properties:</source>
          <target state="translated">&lt;var&gt;http://xml.org/sax/features/namespaces&lt;/var&gt; および &lt;var&gt;http://xml.org/sax/features/namespace-prefixes&lt;/var&gt; プロパティの値に応じて、これらのいずれかまたはすべてが提供される場合があります。</target>
        </trans-unit>
        <trans-unit id="83222d6a6a8be24824517f515b053860a796eb09" translate="yes" xml:space="preserve">
          <source>Any other attribute settings for the characters in the specified range are cleared.</source>
          <target state="translated">指定した範囲の文字の他の属性設定はクリアされます。</target>
        </trans-unit>
        <trans-unit id="9efddb73bbf24fe55be9d68529e3d46d5f711dac" translate="yes" xml:space="preserve">
          <source>Any other attribute settings for the specified character are cleared.</source>
          <target state="translated">指定した文字の他の属性設定はクリアされます。</target>
        </trans-unit>
        <trans-unit id="1f78004cd873ef1a410b3680ee50209be7ffeeb6" translate="yes" xml:space="preserve">
          <source>Any other kind.</source>
          <target state="translated">他の種類でも</target>
        </trans-unit>
        <trans-unit id="d9c86e4eb6f621b42958b1a843ad72185d41b2ef" translate="yes" xml:space="preserve">
          <source>Any other type</source>
          <target state="translated">その他のタイプ</target>
        </trans-unit>
        <trans-unit id="f72c8a69ec9a5cc711562afe34cb7c379b769815" translate="yes" xml:space="preserve">
          <source>Any other value for the &lt;code&gt;scrollbars&lt;/code&gt; argument is invalid and will result in this text area being created with scrollbar visibility equal to the default value of &lt;a href=&quot;#SCROLLBARS_BOTH&quot;&gt;&lt;code&gt;SCROLLBARS_BOTH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;scrollbars&lt;/code&gt; 引数の他の値は無効であり、このテキスト領域はスクロールバーの可視性がデフォルト値の&lt;a href=&quot;#SCROLLBARS_BOTH&quot;&gt; &lt;code&gt;SCROLLBARS_BOTH&lt;/code&gt; &lt;/a&gt;と等しくなるように作成されます。</target>
        </trans-unit>
        <trans-unit id="851fbda97d1409c17bdb24e7ea6918c7d4aa30c9" translate="yes" xml:space="preserve">
          <source>Any other value of scope defined in the default &lt;code&gt;ScriptContext&lt;/code&gt; of the &lt;code&gt;ScriptEngine&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ScriptEngine&lt;/code&gt; のデフォルトの &lt;code&gt;ScriptContext&lt;/code&gt; で定義されているスコープの他の値。</target>
        </trans-unit>
        <trans-unit id="427b697236ab7d686bcc7fd3ee6905d90b435ae0" translate="yes" xml:space="preserve">
          <source>Any other views in the &lt;code&gt;JRootPane&lt;/code&gt; view hierarchy are ignored.</source>
          <target state="translated">&lt;code&gt;JRootPane&lt;/code&gt; ビュー階層内の他のビューはすべて無視されます。</target>
        </trans-unit>
        <trans-unit id="dedeb302c3a6428810deb8991543f254ecef1760" translate="yes" xml:space="preserve">
          <source>Any out of range field values are either normalized in lenient mode or detected as an invalid value in non-lenient mode.</source>
          <target state="translated">範囲外のフィールド値は、lenient モードで正規化されるか、non-lenient モードでは無効な値として検出されます。</target>
        </trans-unit>
        <trans-unit id="041c0ffef05e50b7d6de996b906938b626d2c58a" translate="yes" xml:space="preserve">
          <source>Any outstanding asynchronous operations upon this channel will complete with the exception &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;. After a channel is closed, further attempts to initiate asynchronous I/O operations complete immediately with cause &lt;a href=&quot;closedchannelexception&quot;&gt;&lt;code&gt;ClosedChannelException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このチャネルでの未処理の非同期操作は、例外&lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; で&lt;/a&gt;完了します。チャネルが閉じられた後、非同期I / O操作を開始しようとするさらなる試行は、原因&lt;a href=&quot;closedchannelexception&quot;&gt; &lt;code&gt;ClosedChannelException&lt;/code&gt; で&lt;/a&gt;即座に完了します。</target>
        </trans-unit>
        <trans-unit id="578d72d969f2ba7722261a1e5499a4c82b000dec" translate="yes" xml:space="preserve">
          <source>Any package name provided as a &lt;code&gt;String&lt;/code&gt; parameter to methods in &lt;code&gt;ClassLoader&lt;/code&gt; must be either the empty string (denoting an unnamed package) or a fully qualified name as defined by</source>
          <target state="translated">&lt;code&gt;ClassLoader&lt;/code&gt; のメソッドに &lt;code&gt;String&lt;/code&gt; パラメーターとして提供されるパッケージ名は、空の文字列（名前のないパッケージを示す）またはによって定義された完全修飾名のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="53c63060d7bd1b7bfcd91dd7d32915aac6b137c5" translate="yes" xml:space="preserve">
          <source>Any parameter that is not set (or is set to &lt;code&gt;null&lt;/code&gt;) will be set to the default value for that parameter.</source>
          <target state="translated">設定されていない（または &lt;code&gt;null&lt;/code&gt; に設定されている）パラメーターは、そのパラメーターのデフォルト値に設定されます。</target>
        </trans-unit>
        <trans-unit id="2a775b13110119846aa06fa7be3ccd97e1c6e616" translate="yes" xml:space="preserve">
          <source>Any parameter that is not set (or is set to &lt;code&gt;null&lt;/code&gt;) will be set to the default value for that parameter. The default value for the &lt;code&gt;date&lt;/code&gt; parameter is &lt;code&gt;null&lt;/code&gt;, which indicates the current time when the path is validated. The default for the remaining parameters is the least constrained.</source>
          <target state="translated">設定されていない（または &lt;code&gt;null&lt;/code&gt; に設定されている）パラメーターは、そのパラメーターのデフォルト値に設定されます。 &lt;code&gt;date&lt;/code&gt; パラメーターのデフォルト値は &lt;code&gt;null&lt;/code&gt; で、パスが検証される現在の時刻を示します。残りのパラメーターのデフォルトは、最も制約が少ないものです。</target>
        </trans-unit>
        <trans-unit id="db628c194bd82b19e213d28412a78c7e9fed989e" translate="yes" xml:space="preserve">
          <source>Any registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt; objects will be notified by calling their &lt;code&gt;imageStarted&lt;/code&gt; method, followed by calls to their &lt;code&gt;imageProgress&lt;/code&gt; method as the read progresses. Finally their &lt;code&gt;imageComplete&lt;/code&gt; method will be called. &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; objects may be updated at other times during the read as pixels are decoded. Finally, &lt;code&gt;IIOReadWarningListener&lt;/code&gt; objects will receive notification of any non-fatal warnings that occur during decoding.</source>
          <target state="translated">登録された &lt;code&gt;IIOReadProgressListener&lt;/code&gt; オブジェクトは、 &lt;code&gt;imageStarted&lt;/code&gt; メソッドを呼び出して通知され、続いて読み取りの進行に &lt;code&gt;imageProgress&lt;/code&gt; てimageProgressメソッドが呼び出されます。最後に、それらの &lt;code&gt;imageComplete&lt;/code&gt; メソッドが呼び出されます。 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; オブジェクトは、ピクセルがデコードされるときに、読み取り中に他のときに更新される場合があります。最後に、 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; オブジェクトは、デコード中に発生した致命的でない警告の通知を受け取ります。</target>
        </trans-unit>
        <trans-unit id="62102b698a71e4c9c4abbbe7b44786ce0be217d2" translate="yes" xml:space="preserve">
          <source>Any registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt; objects will be notified by calling their &lt;code&gt;sequenceStarted&lt;/code&gt; method once. Then, for each image decoded, there will be a call to &lt;code&gt;imageStarted&lt;/code&gt;, followed by calls to &lt;code&gt;imageProgress&lt;/code&gt; as the read progresses, and finally to &lt;code&gt;imageComplete&lt;/code&gt;. The &lt;code&gt;sequenceComplete&lt;/code&gt; method will be called after the last image has been decoded. &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; objects may be updated at other times during the read as pixels are decoded. Finally, &lt;code&gt;IIOReadWarningListener&lt;/code&gt; objects will receive notification of any non-fatal warnings that occur during decoding.</source>
          <target state="translated">登録された &lt;code&gt;IIOReadProgressListener&lt;/code&gt; オブジェクトは、それらの &lt;code&gt;sequenceStarted&lt;/code&gt; メソッドを1回呼び出すことによって通知されます。次に、デコードされた各イメージ &lt;code&gt;imageStarted&lt;/code&gt; 、imageStartedへの呼び出しがあり、続いて読み取りの進行に &lt;code&gt;imageProgress&lt;/code&gt; への呼び出しがあり、最後に &lt;code&gt;imageComplete&lt;/code&gt; への呼び出しがあります。 &lt;code&gt;sequenceComplete&lt;/code&gt; の最後の画像がデコードされた後にメソッドが呼び出されます。 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; オブジェクトは、ピクセルがデコードされるときに、読み取り中に他のときに更新される場合があります。最後に、 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; オブジェクトは、デコード中に発生した致命的でない警告の通知を受け取ります。</target>
        </trans-unit>
        <trans-unit id="ca39857de74e7ac39381439fd87061deb726042b" translate="yes" xml:space="preserve">
          <source>Any registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt; objects will be notified by calling their &lt;code&gt;thumbnailStarted&lt;/code&gt;, &lt;code&gt;thumbnailProgress&lt;/code&gt;, and &lt;code&gt;thumbnailComplete&lt;/code&gt; methods.</source>
          <target state="translated">登録された &lt;code&gt;IIOReadProgressListener&lt;/code&gt; オブジェクトは、それらの &lt;code&gt;thumbnailStarted&lt;/code&gt; 、 &lt;code&gt;thumbnailProgress&lt;/code&gt; 、および &lt;code&gt;thumbnailComplete&lt;/code&gt; メソッドを呼び出すことによって通知されます。</target>
        </trans-unit>
        <trans-unit id="4bf5fadfcf39f0c4fec28894e22751ad7ab67a31" translate="yes" xml:space="preserve">
          <source>Any registered &lt;code&gt;readUpdateListener&lt;/code&gt;s are ignored, as there is no &lt;code&gt;BufferedImage&lt;/code&gt;, but all other listeners are called exactly as they are for the &lt;a href=&quot;#read(int)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;BufferedImage&lt;/code&gt; がないため、登録されている &lt;code&gt;readUpdateListener&lt;/code&gt; はすべて無視されますが、他のすべてのリスナーは、&lt;a href=&quot;#read(int)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;メソッドの場合とまったく同じように呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7f95041bb4c646e50368fd20b19a88ebfd0d55c8" translate="yes" xml:space="preserve">
          <source>Any registered &lt;code&gt;readUpdateListener&lt;/code&gt;s are ignored, as there is no &lt;code&gt;BufferedImage&lt;/code&gt;, but all other listeners are called exactly as they are for the &lt;a href=&quot;imagereader#read-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;BufferedImage&lt;/code&gt; がないため、登録されている &lt;code&gt;readUpdateListener&lt;/code&gt; は無視されますが、他のすべてのリスナーは、&lt;a href=&quot;imagereader#read-int-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;メソッドの場合とまったく同じように呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c78248efbf9c981993e62077641980159251de68" translate="yes" xml:space="preserve">
          <source>Any remaining milliseconds after determining the day, hour, minute and second are discarded.</source>
          <target state="translated">曜日、時、分、秒を決定した後に残ったミリ秒は破棄されます。</target>
        </trans-unit>
        <trans-unit id="81134606234ad6f705d457d6b3f396fa0608210c" translate="yes" xml:space="preserve">
          <source>Any remaining milliseconds after determining the year and month are discarded.</source>
          <target state="translated">年と月を決定した後の残りのミリ秒は破棄されます。</target>
        </trans-unit>
        <trans-unit id="52628168a10f8f650801369636aafa55a88fc3b6" translate="yes" xml:space="preserve">
          <source>Any remaining types &lt;code&gt;BQ+1..BX&lt;/code&gt; (if &lt;code&gt;Q&amp;lt;X&lt;/code&gt;) will determine the resulting loop handle's parameter types &lt;code&gt;(A...)&lt;/code&gt;.</source>
          <target state="translated">残りのタイプ &lt;code&gt;BQ+1..BX&lt;/code&gt; （ &lt;code&gt;Q&amp;lt;X&lt;/code&gt; 場合）は、結果のループハンドルのパラメータータイプ &lt;code&gt;(A...)&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="87d13eda094f0ad03e413e4b5c65a1a29a6cef8b" translate="yes" xml:space="preserve">
          <source>Any remaining unresolved fields are cross-checked against any date and/or time that was resolved. Thus, an earlier stage would resolve (year + month + day-of-month) to a date, and this stage would check that day-of-week was valid for the date.</source>
          <target state="translated">未解決のフィールドが残っている場合は、解決された日付および/または時間とクロスチェックされます。したがって、以前のステージでは(年+月+月の日)を日付に解決し、このステージでは曜日が日付に対して有効であるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="12b02dc3b0f90a23f032388475be0cd10ca0d871" translate="yes" xml:space="preserve">
          <source>Any root module is not observable.</source>
          <target state="translated">どのルートモジュールも観測できません。</target>
        </trans-unit>
        <trans-unit id="dfd48c26a3b03a78e7860a060e2b4a38c377670f" translate="yes" xml:space="preserve">
          <source>Any sequence of letters not specified above, unrecognized letter or reserved character will throw an exception. Future versions may add to the set of patterns. It is recommended to use single quotes around all characters that you want to output directly to ensure that future changes do not break your application.</source>
          <target state="translated">上記で指定されていない文字列、認識されていない文字、予約されている文字は例外をスローします。将来のバージョンでは、パターンのセットに追加される可能性があります。将来の変更がアプリケーションを壊さないように、直接出力したいすべての文字の周りに単一引用符を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="6c895026ae591f1f0b12597467a4242ab6e35c3c" translate="yes" xml:space="preserve">
          <source>Any standard &lt;code&gt;RowSet&lt;/code&gt; implementation &lt;b&gt;may&lt;/b&gt; implement the &lt;code&gt;Joinable&lt;/code&gt; interface in order to be added to a &lt;code&gt;JoinRowSet&lt;/code&gt; object. Implementing this interface gives a &lt;code&gt;RowSet&lt;/code&gt; object the ability to use &lt;code&gt;Joinable&lt;/code&gt; methods, which set, retrieve, and get information about match columns. An application may add a &lt;code&gt;RowSet&lt;/code&gt; object that has not implemented the &lt;code&gt;Joinable&lt;/code&gt; interface to a &lt;code&gt;JoinRowSet&lt;/code&gt; object, but to do so it must use one of the &lt;code&gt;JoinRowSet.addRowSet&lt;/code&gt; methods that takes both a &lt;code&gt;RowSet&lt;/code&gt; object and a match column or an array of &lt;code&gt;RowSet&lt;/code&gt; objects and an array of match columns.</source>
          <target state="translated">任意の標準 &lt;code&gt;RowSet&lt;/code&gt; 実装が&lt;b&gt;できる&lt;/b&gt;器具 &lt;code&gt;Joinable&lt;/code&gt; に追加するために、インターフェイス &lt;code&gt;JoinRowSet&lt;/code&gt; オブジェクト。このインターフェースを実装すると、 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトは、一致列に関する情報を設定、取得、および取得する &lt;code&gt;Joinable&lt;/code&gt; なメソッドを使用できるようになります。アプリケーションは、 &lt;code&gt;Joinable&lt;/code&gt; インターフェイスを実装していない &lt;code&gt;RowSet&lt;/code&gt; オブジェクトを &lt;code&gt;JoinRowSet&lt;/code&gt; オブジェクトに追加できますが、そのためには、 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトと一致列または &lt;code&gt;RowSet&lt;/code&gt; の配列の両方を &lt;code&gt;JoinRowSet.addRowSet&lt;/code&gt; メソッドの1つを使用する必要があります。 オブジェクトと一致列の配列。</target>
        </trans-unit>
        <trans-unit id="1e4b548423b731dfdca8d68f94ebd1cb5cfb2e28" translate="yes" xml:space="preserve">
          <source>Any string that conforms to these two rules is a valid path name.</source>
          <target state="translated">これら2つのルールに合致する文字列はすべて有効なパス名となります。</target>
        </trans-unit>
        <trans-unit id="2ca901414688669c24d183f78f2686680a0b8ab7" translate="yes" xml:space="preserve">
          <source>Any thread currently blocked in &lt;a href=&quot;#receive(java.net.DatagramPacket)&quot;&gt;&lt;code&gt;receive(java.net.DatagramPacket)&lt;/code&gt;&lt;/a&gt; upon this socket will throw a &lt;a href=&quot;socketexception&quot;&gt;&lt;code&gt;SocketException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このソケットで&lt;a href=&quot;#receive(java.net.DatagramPacket)&quot;&gt; &lt;code&gt;receive(java.net.DatagramPacket)&lt;/code&gt; &lt;/a&gt;で現在ブロックされているスレッドは、&lt;a href=&quot;socketexception&quot;&gt; &lt;code&gt;SocketException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="9387c14f4843584ad117916bb7bbe50f5a1ee787" translate="yes" xml:space="preserve">
          <source>Any thread currently blocked in &lt;a href=&quot;datagramsocket#receive-java.net.DatagramPacket-&quot;&gt;&lt;code&gt;receive(java.net.DatagramPacket)&lt;/code&gt;&lt;/a&gt; upon this socket will throw a &lt;a href=&quot;socketexception&quot;&gt;&lt;code&gt;SocketException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このソケットの&lt;a href=&quot;datagramsocket#receive-java.net.DatagramPacket-&quot;&gt; &lt;code&gt;receive(java.net.DatagramPacket)&lt;/code&gt; &lt;/a&gt;で現在ブロックされているスレッドは、&lt;a href=&quot;socketexception&quot;&gt; &lt;code&gt;SocketException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="c2cd774b4060d3bb9dddf39a9b8028c51a677bb5" translate="yes" xml:space="preserve">
          <source>Any thread currently blocked in an I/O operation upon this channel will receive an &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このチャネルのI / O操作で現在ブロックされているスレッドは、&lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; &lt;/a&gt;を受け取ります。</target>
        </trans-unit>
        <trans-unit id="72c0c2f205092d5072a2a22f3791eb0db65dc7f2" translate="yes" xml:space="preserve">
          <source>Any thread currently blocked in an I/O operation upon this socket will throw a &lt;a href=&quot;socketexception&quot;&gt;&lt;code&gt;SocketException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このソケットに対するI / O操作で現在ブロックされているスレッドは、&lt;a href=&quot;socketexception&quot;&gt; &lt;code&gt;SocketException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="c7def5ed765c4cd8fd2045b0b963a1dbe08909c9" translate="yes" xml:space="preserve">
          <source>Any top-level window can be marked not to be blocked by modal dialogs.</source>
          <target state="translated">すべてのトップレベルウィンドウは、モーダルダイアログによってブロックされないようにマークすることができます。</target>
        </trans-unit>
        <trans-unit id="b4e59ce04c6dd520c15b4e9089752398b20b00d3" translate="yes" xml:space="preserve">
          <source>Any top-level window can be marked not to be blocked by modal dialogs. This is called &quot;modal exclusion&quot;. This enum specifies the possible modal exclusion types.</source>
          <target state="translated">どんなトップレベルのウィンドウでも、モーダルダイアログによってブロックされないようにマークすることができます。これを「モーダル除外」と呼びます。この列は、可能なモーダル除外のタイプを指定します。</target>
        </trans-unit>
        <trans-unit id="84f338b5f3f8f35b0812890eee7f76af4ffbf9e2" translate="yes" xml:space="preserve">
          <source>Any type that represents any of the 5 other types listed below.</source>
          <target state="translated">以下の5種類のうち、いずれかの種類を表すもの。</target>
        </trans-unit>
        <trans-unit id="2abca19251a65ad85e46e581a9e108cbfa3f160a" translate="yes" xml:space="preserve">
          <source>Any type that represents any of the 5 other types listed below. Maps to &lt;a href=&quot;xpathevaluationresult&quot;&gt;&lt;code&gt;XPathEvaluationResult&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下にリストされている他の5つのタイプのいずれかを表す任意のタイプ。&lt;a href=&quot;xpathevaluationresult&quot;&gt; &lt;code&gt;XPathEvaluationResult&lt;/code&gt; に&lt;/a&gt;マップします。</target>
        </trans-unit>
        <trans-unit id="0c7c34381609cdca760a9db8c60f4a96439aea3e" translate="yes" xml:space="preserve">
          <source>Any uncancelled keys still associated with this selector are invalidated, their channels are deregistered, and any other resources associated with this selector are released.</source>
          <target state="translated">このセレクタに関連付けられているキャンセルされていないキーは無効となり、そのチャンネルは登録解除され、このセレクタに関連付けられているその他のリソースは解放されます。</target>
        </trans-unit>
        <trans-unit id="628ebfd2922c6acc3de30c04be5a4bf2c671e263" translate="yes" xml:space="preserve">
          <source>Any unmatched quote is treated as closed at the end of the given pattern. For example, pattern string &lt;code&gt;&quot;'{0}&quot;&lt;/code&gt; is treated as pattern &lt;code&gt;&quot;'{0}'&quot;&lt;/code&gt;.</source>
          <target state="translated">一致しない引用符は、指定されたパターンの最後で閉じられたものとして扱われます。たとえば、パターン文字列 &lt;code&gt;&quot;'{0}&quot;&lt;/code&gt; はパターン &lt;code&gt;&quot;'{0}'&quot;&lt;/code&gt; として扱われます。</target>
        </trans-unit>
        <trans-unit id="dd27d9a68564e0eae294e240b071760491439b1b" translate="yes" xml:space="preserve">
          <source>Any unrecognized letter is an error. Any non-letter character, other than '[', ']', '{', '}', '#' and the single quote will be output directly. Despite this, it is recommended to use single quotes around all characters that you want to output directly to ensure that future changes do not break your application.</source>
          <target state="translated">認識できない文字はエラーになります。'[',']'、'{','}','#' とシングルクォート以外の文字は直接出力されます。にもかかわらず、将来の変更がアプリケーションを壊さないようにするために、直接出力したいすべての文字の周りにシングルクォートを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="56e1bb417b1be069d45397dd523654de5fec992f" translate="yes" xml:space="preserve">
          <source>Any unsupported key read from the keytab is ignored and not included in the result.</source>
          <target state="translated">keytabから読み込まれたサポートされていないキーは無視され、結果には含まれません。</target>
        </trans-unit>
        <trans-unit id="2d33e9c5d74b29c3232e3f8df6855114a3d05c39" translate="yes" xml:space="preserve">
          <source>Any valid number, uses &lt;code&gt;Character.isDigit&lt;/code&gt;.</source>
          <target state="translated">任意の有効な数値は、 &lt;code&gt;Character.isDigit&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="0598d0c2ee3f195ed041631bfb7386ddfa3d1f2a" translate="yes" xml:space="preserve">
          <source>Any word that matches &lt;code&gt;EST, CST, MST&lt;/code&gt;, or &lt;code&gt;PST&lt;/code&gt;, ignoring case, is recognized as referring to the time zone in North America that is five, six, seven, or eight hours west of Greenwich, respectively. Any word that matches &lt;code&gt;EDT, CDT,
     MDT&lt;/code&gt;, or &lt;code&gt;PDT&lt;/code&gt;, ignoring case, is recognized as referring to the same time zone, respectively, during daylight saving time.</source>
          <target state="translated">大文字と小文字を区別せずに、 &lt;code&gt;EST, CST, MST&lt;/code&gt; 、または &lt;code&gt;PST&lt;/code&gt; に一致する単語は、それぞれグリニッジの西5時間、6時間、7時間、または8時間の北米のタイムゾーンを参照していると認識されます。大文字と小文字を区別せずに、 &lt;code&gt;EDT, CDT, MDT&lt;/code&gt; 、または &lt;code&gt;PDT&lt;/code&gt; に一致する単語は、夏時間中にそれぞれ同じタイムゾーンを参照していると認識されます。</target>
        </trans-unit>
        <trans-unit id="7030d1cd7acca10773e929a59ec13d7ff20286b7" translate="yes" xml:space="preserve">
          <source>Any word that matches &lt;code&gt;GMT, UT&lt;/code&gt;, or &lt;code&gt;UTC&lt;/code&gt;, ignoring case, is treated as referring to UTC.</source>
          <target state="translated">&lt;code&gt;GMT, UT&lt;/code&gt; 、または &lt;code&gt;UTC&lt;/code&gt; に一致するすべての単語は、大文字と小文字を区別せずに、UTCを参照するものとして扱われます。</target>
        </trans-unit>
        <trans-unit id="2123a2eaebb51f29f226114e59a7745c38e91e04" translate="yes" xml:space="preserve">
          <source>Any word that matches any prefix of &lt;code&gt;SUNDAY, MONDAY, TUESDAY,
     WEDNESDAY, THURSDAY, FRIDAY&lt;/code&gt;, or &lt;code&gt;SATURDAY&lt;/code&gt;, ignoring case, is ignored. For example, &lt;code&gt;sat, Friday, TUE&lt;/code&gt;, and &lt;code&gt;Thurs&lt;/code&gt; are ignored.</source>
          <target state="translated">&lt;code&gt;SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY&lt;/code&gt; 、または &lt;code&gt;SATURDAY&lt;/code&gt; のいずれかの接頭辞と一致する単語は、大文字と小文字を区別せずに無視されます。たとえば、 &lt;code&gt;sat, Friday, TUE&lt;/code&gt; 、 &lt;code&gt;Thurs&lt;/code&gt; は無視されます。</target>
        </trans-unit>
        <trans-unit id="c6ba3dc148f57db8be95e4c2fa2f1edfb4a7a581" translate="yes" xml:space="preserve">
          <source>Anything else results in an invalid edit</source>
          <target state="translated">それ以外の場合は、無効な編集になります。</target>
        </trans-unit>
        <trans-unit id="a6bec8012819af464e982a2be00327bdd102a7e2" translate="yes" xml:space="preserve">
          <source>Anything.</source>
          <target state="translated">Anything.</target>
        </trans-unit>
        <trans-unit id="616df408d0e2b2d9480d2eee4a38d314edf1739e" translate="yes" xml:space="preserve">
          <source>Apart from the checking of type descriptors, a method handle's capability to call its underlying method is unrestricted. If a method handle is formed on a non-public method by a class that has access to that method, the resulting handle can be used in any place by any caller who receives a reference to it.</source>
          <target state="translated">型記述子のチェックとは別に、その下にあるメソッドを呼び出すためのメソッド・ハンドルの能力は制限されていません。メソッド・ハンドルが、そのメソッドにアクセスできるクラスによって非公開のメソッド上に形成されている場合、結果として得られたハンドルは、そのメソッドへの参照を受け取る呼び出し元であれば、どこでも使用することができます。</target>
        </trans-unit>
        <trans-unit id="9f3c987fd16951ed9ef076cbe389086af81b0a21" translate="yes" xml:space="preserve">
          <source>Apart from type descriptor checks, a VarHandles's capability to access it's variables is unrestricted. If a VarHandle is formed on a non-public variable by a class that has access to that variable, the resulting VarHandle can be used in any place by any caller who receives a reference to it.</source>
          <target state="translated">型記述子チェックとは別に、VarHandles の変数にアクセスする能力は制限されていません。VarHandle が、その変数へのアクセス権を持つクラスによって非公開の変数上に形成されている場合、結果として得られる VarHandle は、それへの参照を受け取る任意の呼び出し元によって任意の場所で使用することができます。</target>
        </trans-unit>
        <trans-unit id="cd7fb665ed2af8b57b3122b97cdf88d89ff3e161" translate="yes" xml:space="preserve">
          <source>Apart from type descriptor checks, a method handle's capability to call its underlying method is unrestricted. If a method handle is formed on a non-public method by a class that has access to that method, the resulting handle can be used in any place by any caller who receives a reference to it.</source>
          <target state="translated">型記述子のチェックとは別に、メソッド・ハンドルがその下にあるメソッドを呼び出す能力には制限がありません。メソッド・ハンドルが、そのメソッドにアクセスできるクラスによって非公開のメソッド上に形成されている場合、結果として得られるハンドルは、そのメソッドへの参照を受け取った呼び出し元がどのような場所でも使用することができます。</target>
        </trans-unit>
        <trans-unit id="aa35f1d1815459e2c58aacf0ac9c9edc56fedf53" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry</source>
          <target state="translated">AppConfigurationEntry</target>
        </trans-unit>
        <trans-unit id="6de33db1728597244fb7ba55a556b20fae04eacd" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry.LoginModuleControlFlag</source>
          <target state="translated">AppConfigurationEntry.LoginModuleControlFlag</target>
        </trans-unit>
        <trans-unit id="b7a0952a5172ce435de0ecaf57798e494da965f9" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry.LoginModuleControlFlag.toString()</source>
          <target state="translated">AppConfigurationEntry.LoginModuleControlFlag.toString()</target>
        </trans-unit>
        <trans-unit id="69adaf2fe191bb0a039f8cac2bf5f99b1257d28e" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry.getControlFlag()</source>
          <target state="translated">AppConfigurationEntry.getControlFlag()</target>
        </trans-unit>
        <trans-unit id="2e4d30a8a676f100270662efd541b4f9aa55b24e" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry.getLoginModuleName()</source>
          <target state="translated">AppConfigurationEntry.getLoginModuleName()</target>
        </trans-unit>
        <trans-unit id="80a74f497ea859c38bc9ed5e62395b51d8a16d44" translate="yes" xml:space="preserve">
          <source>AppConfigurationEntry.getOptions()</source>
          <target state="translated">AppConfigurationEntry.getOptions()</target>
        </trans-unit>
        <trans-unit id="1133f5a7a91a8a4e0dfc31a94b2fdb75169ce247" translate="yes" xml:space="preserve">
          <source>AppEvent</source>
          <target state="translated">AppEvent</target>
        </trans-unit>
        <trans-unit id="8d2f5a21fa25a307765850c84c799a156ef0f688" translate="yes" xml:space="preserve">
          <source>AppEvents are sent to listeners and handlers installed on the &lt;a href=&quot;../desktop&quot;&gt;&lt;code&gt;Desktop&lt;/code&gt;&lt;/a&gt; instance of the current desktop context.</source>
          <target state="translated">AppEventsは、現在のデスクトップコンテキストの&lt;a href=&quot;../desktop&quot;&gt; &lt;code&gt;Desktop&lt;/code&gt; &lt;/a&gt;インスタンスにインストールされているリスナーとハンドラーに送信されます。</target>
        </trans-unit>
        <trans-unit id="4ba03e6683015e3237b02b1527fedd2970069e51" translate="yes" xml:space="preserve">
          <source>AppForegroundEvent</source>
          <target state="translated">AppForegroundEvent</target>
        </trans-unit>
        <trans-unit id="1f2a1b22b3bb066f731ceb7c2c097b71fbd78bbb" translate="yes" xml:space="preserve">
          <source>AppForegroundListener</source>
          <target state="translated">AppForegroundListener</target>
        </trans-unit>
        <trans-unit id="c7c18235c3879736eff8ae19132e21f3fe444b3b" translate="yes" xml:space="preserve">
          <source>AppHiddenEvent</source>
          <target state="translated">AppHiddenEvent</target>
        </trans-unit>
        <trans-unit id="35ba4dc6d44eaee63282dde6a500ab644e2bd78c" translate="yes" xml:space="preserve">
          <source>AppHiddenListener</source>
          <target state="translated">AppHiddenListener</target>
        </trans-unit>
        <trans-unit id="8b88900088340255880002f17872ca6a6bf2b344" translate="yes" xml:space="preserve">
          <source>AppReopenedEvent</source>
          <target state="translated">AppReopenedEvent</target>
        </trans-unit>
        <trans-unit id="f39034bf48af4a2a7e0007af959e946b8879dbb4" translate="yes" xml:space="preserve">
          <source>AppReopenedListener</source>
          <target state="translated">AppReopenedListener</target>
        </trans-unit>
        <trans-unit id="9873539fcb88f7ee0879938f9466d38e937cdb68" translate="yes" xml:space="preserve">
          <source>Append the result of the parse operation as children of the context node.</source>
          <target state="translated">パース操作の結果をコンテキスト・ノードの子として追加します。</target>
        </trans-unit>
        <trans-unit id="15c56a67e3dda4c7838f309123141818a20ad999" translate="yes" xml:space="preserve">
          <source>Append the result of the parse operation as children of the context node. For this action to work, the context node must be an &lt;code&gt;Element&lt;/code&gt; or a &lt;code&gt;DocumentFragment&lt;/code&gt;.</source>
          <target state="translated">解析操作の結果をコンテキストノードの子として追加します。このアクションが機能するには、コンテキストノードが &lt;code&gt;Element&lt;/code&gt; または &lt;code&gt;DocumentFragment&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="a31784e9c8345c607c1c12178975f37bc948add9" translate="yes" xml:space="preserve">
          <source>Append the string to the end of the character data of the node.</source>
          <target state="translated">ノードの文字データの末尾に文字列を追加します。</target>
        </trans-unit>
        <trans-unit id="3917518f5c9fea6b1131ac35ce9e11bb2cc20d36" translate="yes" xml:space="preserve">
          <source>Append the string to the end of the character data of the node. Upon success, &lt;code&gt;data&lt;/code&gt; provides access to the concatenation of &lt;code&gt;data&lt;/code&gt; and the &lt;code&gt;DOMString&lt;/code&gt; specified.</source>
          <target state="translated">ノードの文字データの末尾に文字列を追加します。成功すると、 &lt;code&gt;data&lt;/code&gt; は、指定された &lt;code&gt;data&lt;/code&gt; と &lt;code&gt;DOMString&lt;/code&gt; の連結へのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="e96335f31dca923971fca83bb7d266b9f6649b68" translate="yes" xml:space="preserve">
          <source>Appendable</source>
          <target state="translated">Appendable</target>
        </trans-unit>
        <trans-unit id="11a860f1c6b7689ad6a213a9174bafe276cbd0d1" translate="yes" xml:space="preserve">
          <source>Appendable.append()</source>
          <target state="translated">Appendable.append()</target>
        </trans-unit>
        <trans-unit id="d53172897c9eb8037d26348365a16f64403f724a" translate="yes" xml:space="preserve">
          <source>Appendables are not necessarily safe for multithreaded access. Thread safety is the responsibility of classes that extend and implement this interface.</source>
          <target state="translated">アペンドブルは必ずしもマルチスレッドアクセスが安全とは限りません。スレッドの安全性は、このインターフェイスを拡張して実装するクラスの責任です。</target>
        </trans-unit>
        <trans-unit id="b09231380953cd773284db8286106f113bc2ca0e" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;aColumn&lt;/code&gt; to the end of the &lt;code&gt;tableColumns&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;tableColumns&lt;/code&gt; 配列の最後に &lt;code&gt;aColumn&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="1688fd5bea0983b4b83dfd3baaa4d7720e1d952d" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;aColumn&lt;/code&gt; to the end of the &lt;code&gt;tableColumns&lt;/code&gt; array. This method also posts the &lt;code&gt;columnAdded&lt;/code&gt; event to its listeners.</source>
          <target state="translated">&lt;code&gt;tableColumns&lt;/code&gt; 配列の最後に &lt;code&gt;aColumn&lt;/code&gt; を追加します。このメソッドは、 &lt;code&gt;columnAdded&lt;/code&gt; イベントもリスナーに送信します。</target>
        </trans-unit>
        <trans-unit id="476900224e8db0b4b4f41494325e92b48ca6273c" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;aColumn&lt;/code&gt; to the end of the &lt;code&gt;tableColumns&lt;/code&gt; array. This method posts a &lt;code&gt;columnAdded&lt;/code&gt; event to its listeners.</source>
          <target state="translated">&lt;code&gt;tableColumns&lt;/code&gt; 配列の最後に &lt;code&gt;aColumn&lt;/code&gt; を追加します。このメソッドは、 &lt;code&gt;columnAdded&lt;/code&gt; イベントをリスナーに送信します。</target>
        </trans-unit>
        <trans-unit id="ac2e41223a5c3cc2e0a60d340e62a21e0747258e" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;aColumn&lt;/code&gt; to the end of the array of columns held by this &lt;code&gt;JTable&lt;/code&gt;'s column model.</source>
          <target state="translated">この &lt;code&gt;JTable&lt;/code&gt; の列モデルが保持する列の配列の最後に &lt;code&gt;aColumn&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="f157f9c6e2ae9b0e021c2ef3135d57f3d7e45417" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;aColumn&lt;/code&gt; to the end of the array of columns held by this &lt;code&gt;JTable&lt;/code&gt;'s column model. If the column name of &lt;code&gt;aColumn&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, sets the column name of &lt;code&gt;aColumn&lt;/code&gt; to the name returned by &lt;code&gt;getModel().getColumnName()&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;JTable&lt;/code&gt; の列モデルが保持する列の配列の最後に &lt;code&gt;aColumn&lt;/code&gt; を追加します。列名場合 &lt;code&gt;aColumn&lt;/code&gt; がある &lt;code&gt;null&lt;/code&gt; の列名に設定 &lt;code&gt;aColumn&lt;/code&gt; を返す名前を &lt;code&gt;getModel().getColumnName()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3567a175fb0562baf41d927b02a10bc057a7dc2" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;numPages&lt;/code&gt; pages to the end of this &lt;code&gt;Book&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Book&lt;/code&gt; の最後に &lt;code&gt;numPages&lt;/code&gt; ページを追加します。</target>
        </trans-unit>
        <trans-unit id="d963ea9ab0cdb9378e2ac779b39f6651a5f9f417" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;numPages&lt;/code&gt; pages to the end of this &lt;code&gt;Book&lt;/code&gt;. Each of the pages is associated with &lt;code&gt;page&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Book&lt;/code&gt; の最後に &lt;code&gt;numPages&lt;/code&gt; ページを追加します。各ページはページに関連付けられてい &lt;code&gt;page&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f98fb3d99eb6387339869d14cad794715865769" translate="yes" xml:space="preserve">
          <source>Appends a character literal to the formatter.</source>
          <target state="translated">文字リテラルをフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="6077317e32c454c82c629234a15fe3257661a4b8" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream consisting of a single image with default metadata and thumbnails to the output.</source>
          <target state="translated">デフォルトのメタデータとサムネイルを持つ単一の画像からなる完全な画像ストリームを出力に追加します。</target>
        </trans-unit>
        <trans-unit id="281820819f429504ff3a6174eb989801d1b94191" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream consisting of a single image with default metadata and thumbnails to the output. This method is a shorthand for &lt;code&gt;write(null, new IIOImage(image, null, null), null)&lt;/code&gt;.</source>
          <target state="translated">デフォルトのメタデータとサムネイルを持つ単一の画像で構成される完全な画像ストリームを出力に追加します。このメソッドは、 &lt;code&gt;write(null, new IIOImage(image, null, null), null)&lt;/code&gt; 省略形です。</target>
        </trans-unit>
        <trans-unit id="b394e8311dbe84884c0c6a05ef5d485f0b50e3f4" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream containing a single image and associated stream and image metadata and thumbnails to the output.</source>
          <target state="translated">1枚の画像とそれに関連するストリーム、画像のメタデータとサムネイルを含む完全な画像ストリームを出力に追加します。</target>
        </trans-unit>
        <trans-unit id="082ed2fbeb6ea36a03039ae30cc1f13d37c03cf6" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream containing a single image and associated stream and image metadata and thumbnails to the output. Any necessary header information is included. If the output is an &lt;code&gt;ImageOutputStream&lt;/code&gt;, its existing contents prior to the current seek position are not affected, and need not be readable or writable.</source>
          <target state="translated">単一の画像と関連するストリームを含む完全な画像ストリーム、および画像メタデータとサムネイルを出力に追加します。必要なヘッダー情報が含まれています。出力が &lt;code&gt;ImageOutputStream&lt;/code&gt; の場合、現在のシーク位置より前の既存のコンテンツは影響を受けないため、読み取りまたは書き込み可能である必要はありません。</target>
        </trans-unit>
        <trans-unit id="0bc06e5906435d3b2053668b21081e0932a459aa" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream containing a single image with default metadata and thumbnails to the output.</source>
          <target state="translated">デフォルトのメタデータとサムネイルを含む単一の画像を含む完全な画像ストリームを出力に追加します。</target>
        </trans-unit>
        <trans-unit id="18ebb8ee6ccf16d140e00b450c04c71131d11a2b" translate="yes" xml:space="preserve">
          <source>Appends a complete image stream containing a single image with default metadata and thumbnails to the output. This method is a shorthand for &lt;code&gt;write(null, image, null)&lt;/code&gt;.</source>
          <target state="translated">デフォルトのメタデータとサムネイルを含む単一の画像を含む完全な画像ストリームを出力に追加します。このメソッドは、 &lt;code&gt;write(null, image, null)&lt;/code&gt; 省略形です。</target>
        </trans-unit>
        <trans-unit id="a941db26292911f29d227015e8b2cb9bcadbb060" translate="yes" xml:space="preserve">
          <source>Appends a component to the end of this menu.</source>
          <target state="translated">このメニューの最後にコンポーネントを追加します。</target>
        </trans-unit>
        <trans-unit id="808ac411923619c4b90b8bd0ac2575ed6da65d24" translate="yes" xml:space="preserve">
          <source>Appends a component to the end of this menu. Returns the component added.</source>
          <target state="translated">このメニューの最後にコンポーネントを追加します。追加したコンポーネントを返します。</target>
        </trans-unit>
        <trans-unit id="abca56478705acafda5962bca0f06124d244612d" translate="yes" xml:space="preserve">
          <source>Appends a default value for a field to the formatter for use in parsing.</source>
          <target state="translated">解析で使用するために、フィールドのデフォルト値をフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="6d0408587bdab66748506d5ccffef80210dda614" translate="yes" xml:space="preserve">
          <source>Appends a formatter to the builder which will optionally format/parse.</source>
          <target state="translated">ビルダーにフォーマッタを追加し、オプションでフォーマット/パースを行います。</target>
        </trans-unit>
        <trans-unit id="bb68160d57d05f66cb98ca9aaf61f00cc94fc06a" translate="yes" xml:space="preserve">
          <source>Appends a localized date-time pattern to the formatter.</source>
          <target state="translated">局所化された日時パターンをフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="1217504978e2795be7500740649dfe70a7b13e32" translate="yes" xml:space="preserve">
          <source>Appends a menu item to the end of this menu.</source>
          <target state="translated">メニューの最後にメニュー項目を追加します。</target>
        </trans-unit>
        <trans-unit id="b4b3ed5abd41c4c60aeac7fd96fdd7ac2b4c42c8" translate="yes" xml:space="preserve">
          <source>Appends a menu item to the end of this menu. Returns the menu item added.</source>
          <target state="translated">このメニューの最後にメニュー項目を追加します。追加したメニュー項目を返します。</target>
        </trans-unit>
        <trans-unit id="69a66bcc78d7ab6960539eb87b2e7c284c5faf97" translate="yes" xml:space="preserve">
          <source>Appends a new menu item to the end of the menu which dispatches the specified &lt;code&gt;Action&lt;/code&gt; object.</source>
          <target state="translated">指定された &lt;code&gt;Action&lt;/code&gt; オブジェクトをディスパッチするメニューの最後に新しいメニュー項目を追加します。</target>
        </trans-unit>
        <trans-unit id="a2e9e468420caf2ebccb84f1a57d9ce3d161a486" translate="yes" xml:space="preserve">
          <source>Appends a new separator at the end of the menu.</source>
          <target state="translated">メニューの最後に新しい区切り文字を追加します。</target>
        </trans-unit>
        <trans-unit id="b19f1cad37d90822685ed81c99d8cf72dabc9b8d" translate="yes" xml:space="preserve">
          <source>Appends a new separator to the end of the menu.</source>
          <target state="translated">メニューの最後に新しい区切り文字を追加します。</target>
        </trans-unit>
        <trans-unit id="d2ecd751a6b29f51496d9df2f46576cc0ad6758f" translate="yes" xml:space="preserve">
          <source>Appends a separator of a specified size to the end of the tool bar.</source>
          <target state="translated">指定したサイズのセパレータをツールバーの端に追加します。</target>
        </trans-unit>
        <trans-unit id="5e0b21445319456c84c04eb01921af34bb5d2f57" translate="yes" xml:space="preserve">
          <source>Appends a separator of default size to the end of the tool bar.</source>
          <target state="translated">ツールバーの最後にデフォルトサイズのセパレータを追加します。</target>
        </trans-unit>
        <trans-unit id="6d55718779625090d2139598847a3396a06b2336" translate="yes" xml:space="preserve">
          <source>Appends a separator of default size to the end of the tool bar. The default size is determined by the current look and feel.</source>
          <target state="translated">ツールバーの最後にデフォルトサイズのセパレータを追加します。デフォルトのサイズは、現在のルックアンドフィールによって決定されます。</target>
        </trans-unit>
        <trans-unit id="c23cc498bc3000b0c783d67f3bcbeae4de95b95e" translate="yes" xml:space="preserve">
          <source>Appends a single child view.</source>
          <target state="translated">単一の子ビューを追加します。</target>
        </trans-unit>
        <trans-unit id="cd121f6528c5a509555f199c51d3705ccdc31c89" translate="yes" xml:space="preserve">
          <source>Appends a single child view. This is a convenience call to &lt;code&gt;replace&lt;/code&gt;.</source>
          <target state="translated">単一の子ビューを追加します。これは、を &lt;code&gt;replace&lt;/code&gt; 便利な呼び出しです。</target>
        </trans-unit>
        <trans-unit id="f928a001c97be018da4b9e617c36c02b4a7c574b" translate="yes" xml:space="preserve">
          <source>Appends a single image and possibly associated metadata and thumbnails, to the output.</source>
          <target state="translated">1枚の画像と、関連するメタデータやサムネイルを出力に追加します。</target>
        </trans-unit>
        <trans-unit id="7246f1a135cf1661873c64195d4d1ddf2e277ebc" translate="yes" xml:space="preserve">
          <source>Appends a single image and possibly associated metadata and thumbnails, to the output. If the output is an &lt;code&gt;ImageOutputStream&lt;/code&gt;, the existing contents of the output prior to the current seek position may be flushed, and need not be readable or writable, unless the plug-in needs to be able to patch up the header information when &lt;code&gt;endWriteSequence&lt;/code&gt; is called (</source>
          <target state="translated">単一の画像と関連するメタデータとサムネイルを出力に追加します。出力が &lt;code&gt;ImageOutputStream&lt;/code&gt; である場合、 &lt;code&gt;endWriteSequence&lt;/code&gt; が呼び出されたときにプラグインがヘッダー情報にパッチを適用できる必要がない限り、現在のシーク位置の前の出力の既存のコンテンツはフラッシュされる可能性があり、読み取りまたは書き込み可能である必要はありません。（</target>
        </trans-unit>
        <trans-unit id="1f5864b4be5e5e7f2cf21d57d680ea8ccba362f9" translate="yes" xml:space="preserve">
          <source>Appends a single page to the end of this &lt;code&gt;Book&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Book&lt;/code&gt; の最後に1ページを追加します。</target>
        </trans-unit>
        <trans-unit id="32d3b6c48828d9d8a5d3b4841f37611b121fbd03" translate="yes" xml:space="preserve">
          <source>Appends a string literal to the formatter.</source>
          <target state="translated">文字列リテラルをフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="f3de7accc40cc007982752ee97a632514266c812" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified &lt;code&gt;CharSequence&lt;/code&gt; to this sequence.</source>
          <target state="translated">指定された &lt;code&gt;CharSequence&lt;/code&gt; のサブシーケンスをこのシーケンスに追加します。</target>
        </trans-unit>
        <trans-unit id="0e356f7ac511797cc61434da9df3dfdcd3a70dd3" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this &lt;code&gt;Appendable&lt;/code&gt;.</source>
          <target state="translated">指定された文字シーケンスのサブシーケンスをこの &lt;code&gt;Appendable&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="7befa15893242af110648efcab30eacc7923163f" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this buffer</source>
          <target state="translated">指定された文字列の一部をこのバッファに追加します。</target>
        </trans-unit>
        <trans-unit id="c3cf7e5ef845ab525de4a8d21ed77f112d2fe332" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this output stream.</source>
          <target state="translated">指定された文字列の一部をこの出力ストリームに追加します。</target>
        </trans-unit>
        <trans-unit id="f81662094bc46ddeeaa6f7e0f83ca0ae28c7e885" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this writer.</source>
          <target state="translated">指定された文字列の一部をこのライタに追加します。</target>
        </trans-unit>
        <trans-unit id="277fcdbc9374c81d3075ff361cb702c1a8a0e406" translate="yes" xml:space="preserve">
          <source>Appends a subsequence of the specified character sequence to this writer. &lt;code&gt;Appendable&lt;/code&gt;.</source>
          <target state="translated">指定された文字シーケンスのサブシーケンスをこのライターに追加します。 &lt;code&gt;Appendable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="201900c26f23aec90ffceb602d72d0077dd68d68" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified Collection to the end of this Vector, in the order that they are returned by the specified Collection's Iterator.</source>
          <target state="translated">指定されたコレクションのすべての要素を、指定されたコレクションの Iterator が返す順に、この Vector の末尾に追加します。</target>
        </trans-unit>
        <trans-unit id="0574c7f0a86f5650f0f8ef583a0603eae42daad2" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified Collection to the end of this Vector, in the order that they are returned by the specified Collection's Iterator. The behavior of this operation is undefined if the specified Collection is modified while the operation is in progress. (This implies that the behavior of this call is undefined if the specified Collection is this Vector, and this Vector is nonempty.)</source>
          <target state="translated">指定された Collection のすべての要素を、指定された Collection の Iterator が返す順に、この Vector の末尾に追加します。この操作の実行中に指定された Collection が変更された場合、この操作の動作は未定義です。(これは、指定された Collection がこの Vector であり、この Vector が空でない場合、この呼び出しの動作は未定義であることを意味します)。</target>
        </trans-unit>
        <trans-unit id="bb43596870d59b0e0d3cf29a0529c953b660e5d6" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection that are not already contained in this list, to the end of this list, in the order that they are returned by the specified collection's iterator.</source>
          <target state="translated">指定されたコレクションの要素のうち、このリストにまだ含まれていないものをすべて、指定されたコレクションのイテレータによって返された順に、このリストの最後に追加します。</target>
        </trans-unit>
        <trans-unit id="aea405c8cb63d25bc7f6636c9d53ff5bac903ed1" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this deque, in the order that they are returned by the specified collection's iterator.</source>
          <target state="translated">指定されたコレクションのすべての要素を、指定されたコレクションのイテレータが返す順に、このdequeの最後に追加します。</target>
        </trans-unit>
        <trans-unit id="dcda93a6791cda5e9c4f7954cfea2259b46bfd83" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this deque, in the order that they are returned by the specified collection's iterator. Attempts to &lt;code&gt;addAll&lt;/code&gt; of a deque to itself result in &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">指定されたコレクションのすべての要素を、指定されたコレクションの反復子によって返される順序で、この両端キューの最後に追加します。両端キューの &lt;code&gt;addAll&lt;/code&gt; をそれ自体に追加しようとすると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="d4d846522feb2c1927702595ce16b699ee76751f" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's Iterator.</source>
          <target state="translated">指定したコレクションのすべての要素を、指定したコレクションの Iterator から返された順にリストの末尾に追加します。</target>
        </trans-unit>
        <trans-unit id="397d3730ee19812406d353adf8610e6cd03599c1" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's Iterator. The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (This implies that the behavior of this call is undefined if the specified collection is this list, and this list is nonempty.)</source>
          <target state="translated">指定されたコレクション内のすべての要素を、指定されたコレクションの Iterator から返された順に、このリストの末尾に追加します。この操作の実行中に指定されたコレクションが変更された場合、この操作の動作は未定義です (このことは、指定されたコレクションの Iterator によって返された順にこのリストの最後に要素を追加することを意味します)。(これは、指定されたコレクションがこのリストであり、このリストが空ではない場合、この呼び出しの動作は未定義であることを意味します)。</target>
        </trans-unit>
        <trans-unit id="c17ff44c3173f7dfe8e30253d0f04ed6b1630484" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator (optional operation).</source>
          <target state="translated">指定されたコレクションのすべての要素を、指定されたコレクションのイテレータによって返された順に、このリストの最後に追加します(オプションの操作)。</target>
        </trans-unit>
        <trans-unit id="95d62f71c6304dbb7e65e70d817dc7c858d790ce" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator (optional operation). The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (Note that this will occur if the specified collection is this list, and it's nonempty.)</source>
          <target state="translated">指定されたコレクション内のすべての要素を、指定されたコレクションのイテレータによって返された順に、このリストの末尾に追加します(オプションの操作)。この操作の実行中に指定されたコレクションが変更された場合、この操作の動作は不定です。(指定されたコレクションがこのリストであり、それが空でない場合に発生することに注意してください)。</target>
        </trans-unit>
        <trans-unit id="849f59f09a7e7d4b1d5f159fb019f744f182b6f2" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.</source>
          <target state="translated">指定されたコレクションのすべての要素を、指定されたコレクションのイテレータによって返された順に、このリストの最後に追加します。</target>
        </trans-unit>
        <trans-unit id="50dc125948b2483e5ca1254bc5728d97989acc9b" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator. The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (Note that this will occur if the specified collection is this list, and it's nonempty.)</source>
          <target state="translated">指定されたコレクションのすべての要素を、指定されたコレクションのイテレータによって返された順に、このリストの末尾に追加します。この操作の実行中に指定されたコレクションが変更された場合、この操作の動作は不定です。(指定されたコレクションがこのリストであり、それが空でない場合に発生することに注意してください)。</target>
        </trans-unit>
        <trans-unit id="b2e8ea05b088e4e262c2838e587c14ebed395923" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this queue, in the order that they are returned by the specified collection's iterator.</source>
          <target state="translated">指定されたコレクションのすべての要素を、指定されたコレクションのイテレータによって返された順に、このキューの最後に追加します。</target>
        </trans-unit>
        <trans-unit id="fc09be9b9a0a1d52de670a92bd12013c7ad6f7f3" translate="yes" xml:space="preserve">
          <source>Appends all of the elements in the specified collection to the end of this queue, in the order that they are returned by the specified collection's iterator. Attempts to &lt;code&gt;addAll&lt;/code&gt; of a queue to itself result in &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">指定されたコレクションのすべての要素を、指定されたコレクションの反復子によって返される順序で、このキューの最後に追加します。キューの &lt;code&gt;addAll&lt;/code&gt; を自分自身に追加しようとすると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="9fe0cf973e8832dacac57cf537cd2dab762e757b" translate="yes" xml:space="preserve">
          <source>Appends all the elements in the &lt;code&gt;AttributeList&lt;/code&gt; specified to the end of the list, in the order in which they are returned by the Iterator of the &lt;code&gt;AttributeList&lt;/code&gt; specified.</source>
          <target state="translated">アペンド内のすべての要素 &lt;code&gt;AttributeList&lt;/code&gt; それらがの反復子によって返される順番で、リストの末尾に指定され &lt;code&gt;AttributeList&lt;/code&gt; 指定しました。</target>
        </trans-unit>
        <trans-unit id="c7ac69fdd545a8295e9282388ba7c224995c8342" translate="yes" xml:space="preserve">
          <source>Appends all the elements in the RoleList specified to the end of the list, in the order in which they are returned by the Iterator of the RoleList specified.</source>
          <target state="translated">指定された RoleList のすべての要素を、指定された RoleList の Iterator が返す順番でリストの最後に追加します。</target>
        </trans-unit>
        <trans-unit id="b6eae929bd5fa510fc8fc2b75f2780993eb58230" translate="yes" xml:space="preserve">
          <source>Appends all the elements in the RoleUnresolvedList specified to the end of the list, in the order in which they are returned by the Iterator of the RoleUnresolvedList specified.</source>
          <target state="translated">指定された RoleUnresolvedList のすべての要素を、指定された RoleUnresolvedList の Iterator が返す順序でリストの末尾に追加します。</target>
        </trans-unit>
        <trans-unit id="45f1980f0df46580be48f61880766db0755d50d9" translate="yes" xml:space="preserve">
          <source>Appends all the elements of a formatter to the builder.</source>
          <target state="translated">フォーマッタのすべての要素をビルダに追加します。</target>
        </trans-unit>
        <trans-unit id="31b641689af075ef5c48a0639be6ca8ac79d50a2" translate="yes" xml:space="preserve">
          <source>Appends an instant using ISO-8601 to the formatter with control over the number of fractional digits.</source>
          <target state="translated">ISO-8601を使用して、小数点以下の桁数を制御してフォーマッタに瞬間を追加します。</target>
        </trans-unit>
        <trans-unit id="57800dac739f3809ff175f6143b1b045f21851d4" translate="yes" xml:space="preserve">
          <source>Appends an instant using ISO-8601 to the formatter, formatting fractional digits in groups of three.</source>
          <target state="translated">ISO-8601を使用した瞬間をフォーマッタに追加し、3つのグループに分けて小数点以下の数字をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="b8b255024c76d062ff8b118ac6eca861d7631194" translate="yes" xml:space="preserve">
          <source>Appends the chronology ID, such as 'ISO' or 'ThaiBuddhist', to the formatter.</source>
          <target state="translated">ISO」や「ThaiBuddhist」などのクロノロジーIDをフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="37cdd5a8434d4d4e821fd8cc820f46ad90144d63" translate="yes" xml:space="preserve">
          <source>Appends the chronology name to the formatter.</source>
          <target state="translated">フォーマッタに年表名を追加します。</target>
        </trans-unit>
        <trans-unit id="0c71eddcbc6b0d34240cdfe59e9946e4d6649e1f" translate="yes" xml:space="preserve">
          <source>Appends the element, if not present.</source>
          <target state="translated">要素が存在しない場合は追加します。</target>
        </trans-unit>
        <trans-unit id="6b894f08dc1016bbdc27bc779c7964129fbe006d" translate="yes" xml:space="preserve">
          <source>Appends the elements defined by the specified pattern to the builder.</source>
          <target state="translated">指定されたパターンで定義された要素をビルダに追加します。</target>
        </trans-unit>
        <trans-unit id="e38b63f8db7af830809ba065e424033c6009df43" translate="yes" xml:space="preserve">
          <source>Appends the fractional value of a date-time field to the formatter.</source>
          <target state="translated">日付時間フィールドの端数値をフォーマッタに追加します。</target>
        </trans-unit>
        <trans-unit id="ca79df163842e89277b503f9e16670dc70a94ee7" translate="yes" xml:space="preserve">
          <source>Appends the generic time-zone name, such as 'Pacific Time', to the formatter.</source>
          <target state="translated">フォーマッタに「太平洋時間」などの一般的なタイムゾーン名を追加します。</target>
        </trans-unit>
        <trans-unit id="b115ddbe12a96262baae96eb719e21b0e9300014" translate="yes" xml:space="preserve">
          <source>Appends the geometry of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; object to the path, possibly connecting the new geometry to the existing path segments with a line segment.</source>
          <target state="translated">指定された&lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;オブジェクトのジオメトリをパスに追加し、場合によっては新しいジオメトリを既存のパスセグメントに線分で接続します。</target>
        </trans-unit>
        <trans-unit id="58cf85acb76194155c4c6ba58cfda8c9daa2bb52" translate="yes" xml:space="preserve">
          <source>Appends the geometry of the specified &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; object to the path, possibly connecting the new geometry to the existing path segments with a line segment. If the &lt;code&gt;connect&lt;/code&gt; parameter is &lt;code&gt;true&lt;/code&gt; and the path is not empty then any initial &lt;code&gt;moveTo&lt;/code&gt; in the geometry of the appended &lt;code&gt;Shape&lt;/code&gt; is turned into a &lt;code&gt;lineTo&lt;/code&gt; segment. If the destination coordinates of such a connecting &lt;code&gt;lineTo&lt;/code&gt; segment match the ending coordinates of a currently open subpath then the segment is omitted as superfluous. The winding rule of the specified &lt;code&gt;Shape&lt;/code&gt; is ignored and the appended geometry is governed by the winding rule specified for this path.</source>
          <target state="translated">指定された&lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;オブジェクトのジオメトリをパスに追加し、場合によっては新しいジオメトリを既存のパスセグメントに線分で接続します。場合 &lt;code&gt;connect&lt;/code&gt; パラメータであり &lt;code&gt;true&lt;/code&gt; パスが空でない場合、次いで、任意の初期 &lt;code&gt;moveTo&lt;/code&gt; 添付のジオメトリの &lt;code&gt;Shape&lt;/code&gt; になっている &lt;code&gt;lineTo&lt;/code&gt; セグメント。このような接続 &lt;code&gt;lineTo&lt;/code&gt; セグメントの宛先座標が、現在開いているサブパスの終了座標と一致する場合、そのセグメントは不要なものとして省略されます。指定された &lt;code&gt;Shape&lt;/code&gt; のワインディングルールは無視され、追加されたジオメトリは、このパスに指定されたワインディングルールによって管理されます。</target>
        </trans-unit>
        <trans-unit id="5f507763da8834f1035539ee1d697fe9174b721e" translate="yes" xml:space="preserve">
          <source>Appends the geometry of the specified &lt;code&gt;Shape&lt;/code&gt; object to the path, possibly connecting the new geometry to the existing path segments with a line segment.</source>
          <target state="translated">指定した &lt;code&gt;Shape&lt;/code&gt; オブジェクトのジオメトリをパスに追加し、新しいジオメトリを既存のパスセグメントに線分で接続する場合があります。</target>
        </trans-unit>
        <trans-unit id="4d45717ffd1956dece97af594637a5042761e9da" translate="yes" xml:space="preserve">
          <source>Appends the geometry of the specified &lt;code&gt;Shape&lt;/code&gt; object to the path, possibly connecting the new geometry to the existing path segments with a line segment. If the &lt;code&gt;connect&lt;/code&gt; parameter is &lt;code&gt;true&lt;/code&gt; and the path is not empty then any initial &lt;code&gt;moveTo&lt;/code&gt; in the geometry of the appended &lt;code&gt;Shape&lt;/code&gt; is turned into a &lt;code&gt;lineTo&lt;/code&gt; segment. If the destination coordinates of such a connecting &lt;code&gt;lineTo&lt;/code&gt; segment match the ending coordinates of a currently open subpath then the segment is omitted as superfluous. The winding rule of the specified &lt;code&gt;Shape&lt;/code&gt; is ignored and the appended geometry is governed by the winding rule specified for this path.</source>
          <target state="translated">指定した &lt;code&gt;Shape&lt;/code&gt; オブジェクトのジオメトリをパスに追加し、新しいジオメトリを既存のパスセグメントに線分で接続する場合があります。場合 &lt;code&gt;connect&lt;/code&gt; パラメータであり &lt;code&gt;true&lt;/code&gt; パスが空でない場合、次いで、任意の初期 &lt;code&gt;moveTo&lt;/code&gt; 添付のジオメトリの &lt;code&gt;Shape&lt;/code&gt; になっている &lt;code&gt;lineTo&lt;/code&gt; セグメント。このような接続 &lt;code&gt;lineTo&lt;/code&gt; セグメントの宛先座標が、現在開いているサブパスの終了座標と一致する場合、そのセグメントは不要なものとして省略されます。指定された &lt;code&gt;Shape&lt;/code&gt; のワインディングルールは無視され、追加されたジオメトリは、このパスに指定されたワインディングルールによって管理されます。</target>
        </trans-unit>
        <trans-unit id="aee95d38f44b67f4da37bd848a96f3178d59e5a8" translate="yes" xml:space="preserve">
          <source>Appends the given text to the end of the document.</source>
          <target state="translated">与えられたテキストを文書の最後に追加します。</target>
        </trans-unit>
        <trans-unit id="374f5fe01edbae6815e4ed307b24e4dbd22508c6" translate="yes" xml:space="preserve">
          <source>Appends the given text to the end of the document. Does nothing if the model is null or the string is null or empty.</source>
          <target state="translated">与えられたテキストをドキュメントの最後に追加します。モデルがNULL、文字列がNULLまたは空の場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="fbe1e3e6ccbf0420c766b7d5fe40a86470a1d25d" translate="yes" xml:space="preserve">
          <source>Appends the given text to the text area's current text.</source>
          <target state="translated">与えられたテキストをテキストエリアの現在のテキストに追加します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
