<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="7869e54a8a266e7c8f959b53d911dda28445f675" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;HTMLDocument&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41077822641618130ec0bedfaf21b31638589ccb" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;NodeList&lt;/code&gt; object containing all the matched &lt;code&gt;Elements&lt;/code&gt;.</source>
          <target state="translated">一致したすべての &lt;code&gt;Elements&lt;/code&gt; を含む新しい &lt;code&gt;NodeList&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="8323ebc1e0ab1a61c592a7a03b8de3a77fc401c4" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Predicate&lt;/code&gt; object may be set at any time. This has the effect of changing constraints on the &lt;code&gt;RowSet&lt;/code&gt; object's data. In addition, modifying the filter at runtime presents issues whereby multiple components may be operating on one &lt;code&gt;FilteredRowSet&lt;/code&gt; object. Application developers must take responsibility for managing multiple handles to &lt;code&gt;FilteredRowSet&lt;/code&gt; objects when their underling &lt;code&gt;Predicate&lt;/code&gt; objects change.</source>
          <target state="translated">A new &lt;code&gt;Predicate&lt;/code&gt; object may be set at any time. This has the effect of changing constraints on the &lt;code&gt;RowSet&lt;/code&gt; object's data. In addition, modifying the filter at runtime presents issues whereby multiple components may be operating on one &lt;code&gt;FilteredRowSet&lt;/code&gt; object. Application developers must take responsibility for managing multiple handles to &lt;code&gt;FilteredRowSet&lt;/code&gt; objects when their underling &lt;code&gt;Predicate&lt;/code&gt; objects change.</target>
        </trans-unit>
        <trans-unit id="5a0818fae3b102f2598d388007a8a9be75f48b7f" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;ProtectionDomain&lt;/code&gt; instance is created for each &lt;code&gt;ProtectionDomain&lt;/code&gt; in the</source>
          <target state="translated">新しい &lt;code&gt;ProtectionDomain&lt;/code&gt; インスタンスがそれぞれのために作成され &lt;code&gt;ProtectionDomain&lt;/code&gt; に</target>
        </trans-unit>
        <trans-unit id="40e23dc949c192b9bab658bd0f0a73dd00053a29" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;ProtectionDomain&lt;/code&gt; instance is created for each non-static &lt;code&gt;ProtectionDomain&lt;/code&gt; ( (staticPermissionsOnly() == false) in the &lt;code&gt;currentDomains&lt;/code&gt; array. Each new &lt;code&gt;ProtectionDomain&lt;/code&gt; instance is created using the &lt;code&gt;CodeSource&lt;/code&gt;, &lt;code&gt;Permission&lt;/code&gt;s and &lt;code&gt;ClassLoader&lt;/code&gt; from the corresponding &lt;code&gt;ProtectionDomain&lt;/code&gt; in &lt;code&gt;currentDomains&lt;/code&gt;, as well as with the Principals from the &lt;code&gt;Subject&lt;/code&gt; associated with this &lt;code&gt;SubjectDomainCombiner&lt;/code&gt;. Static ProtectionDomains are combined as-is and no new instance is created.</source>
          <target state="translated">A new &lt;code&gt;ProtectionDomain&lt;/code&gt; instance is created for each non-static &lt;code&gt;ProtectionDomain&lt;/code&gt; ( (staticPermissionsOnly() == false) in the &lt;code&gt;currentDomains&lt;/code&gt; array. Each new &lt;code&gt;ProtectionDomain&lt;/code&gt; instance is created using the &lt;code&gt;CodeSource&lt;/code&gt; , &lt;code&gt;Permission&lt;/code&gt; s and &lt;code&gt;ClassLoader&lt;/code&gt; from the corresponding &lt;code&gt;ProtectionDomain&lt;/code&gt; in &lt;code&gt;currentDomains&lt;/code&gt; , as well as with the Principals from the &lt;code&gt;Subject&lt;/code&gt; associated with this &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; . Static ProtectionDomains are combined as-is and no new instance is created.</target>
        </trans-unit>
        <trans-unit id="a95239ece3f57681e7656c554da453f9592e1013" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;ScriptEngine&lt;/code&gt; instance.</source>
          <target state="translated">新しい &lt;code&gt;ScriptEngine&lt;/code&gt; インスタンス。</target>
        </trans-unit>
        <trans-unit id="1f109b8d7e453b9671d1212247ac664691653bfb" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;SecureRandom&lt;/code&gt; object encapsulating the &lt;code&gt;SecureRandomSpi&lt;/code&gt; implementation from the specified &lt;code&gt;Provider&lt;/code&gt; object is returned. Note that the specified &lt;code&gt;Provider&lt;/code&gt; object does not have to be registered in the provider list.</source>
          <target state="translated">A new &lt;code&gt;SecureRandom&lt;/code&gt; object encapsulating the &lt;code&gt;SecureRandomSpi&lt;/code&gt; implementation from the specified &lt;code&gt;Provider&lt;/code&gt; object is returned. Note that the specified &lt;code&gt;Provider&lt;/code&gt; object does not have to be registered in the provider list.</target>
        </trans-unit>
        <trans-unit id="4443aab9ef82b062faadc57d2fdcdb83ef1aabc1" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;SecureRandom&lt;/code&gt; object encapsulating the &lt;code&gt;SecureRandomSpi&lt;/code&gt; implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">A new &lt;code&gt;SecureRandom&lt;/code&gt; object encapsulating the &lt;code&gt;SecureRandomSpi&lt;/code&gt; implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</target>
        </trans-unit>
        <trans-unit id="5c35c1a4d858abd970e2d3b67ff470296be409e5" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;TIFFField&lt;/code&gt;.</source>
          <target state="translated">A new &lt;code&gt;TIFFField&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eda082cce43bbb1d4dd772771575be56b104b4ff" translate="yes" xml:space="preserve">
          <source>A new AlgorithmParameterGenerator object encapsulating the AlgorithmParameterGeneratorSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダ・オブジェクトから AlgorithmParameterGeneratorSpi の実装をカプセル化した新しい AlgorithmParameterGenerator オブジェクトが返されます。指定されたプロバイダオブジェクトはプロバイダリストに登録されていなくてもよいことに注意してください。</target>
        </trans-unit>
        <trans-unit id="0096921d89846c0cf2763feccbd6997a0ca057e4" translate="yes" xml:space="preserve">
          <source>A new AlgorithmParameterGenerator object encapsulating the AlgorithmParameterGeneratorSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定されたプロバイダから AlgorithmParameterGeneratorSpi 実装をカプセル化した新しい AlgorithmParameterGenerator オブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="c8db4ef5023ec47dffbc295585ed2ee725e8ec7e" translate="yes" xml:space="preserve">
          <source>A new AlgorithmParameters object encapsulating the AlgorithmParametersSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからAlgorithmParametersSpiの実装をカプセル化した新しいAlgorithmParametersオブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="05e564e535bfdce60132adece41bae9a47113364" translate="yes" xml:space="preserve">
          <source>A new AlgorithmParameters object encapsulating the AlgorithmParametersSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定されたプロバイダの AlgorithmParametersSpi 実装をカプセル化した新しい AlgorithmParameters オブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="b3342f984e42a6e4f6ed42ef5ed905af22a601ad" translate="yes" xml:space="preserve">
          <source>A new CSS style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1d7452ea04f9c2afe99ae652273776235855e7" translate="yes" xml:space="preserve">
          <source>A new CertPathBuilder object encapsulating the CertPathBuilderSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定した Provider オブジェクトから CertPathBuilderSpi 実装をカプセル化した新しい CertPathBuilder オブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="4813f80297b39ee0005052624b5afe1227d8ba78" translate="yes" xml:space="preserve">
          <source>A new CertPathBuilder object encapsulating the CertPathBuilderSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのCertPathBuilderSpi実装をカプセル化した新しいCertPathBuilderオブジェクトが返されます。指定したプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="f4f6e5d465fe4439ee8d90eb2dc3dbe6fb7f98e1" translate="yes" xml:space="preserve">
          <source>A new CertPathValidator object encapsulating the CertPathValidatorSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからCertPathValidatorSpi実装をカプセル化した新しいCertPathValidatorオブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="c47b2e857fd28f65e29dfe763089c7fad02932d8" translate="yes" xml:space="preserve">
          <source>A new CertPathValidator object encapsulating the CertPathValidatorSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのCertPathValidatorSpi実装をカプセル化した新しいCertPathValidatorオブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="7bd4645178202c99207e926685878b815ba8fce2" translate="yes" xml:space="preserve">
          <source>A new CertStore object encapsulating the CertStoreSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトから、CertStoreSpi の実装をカプセル化した新しい CertStore オブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="8d8f6a7b01df83b2a9a8122afb18b83d00dd1d65" translate="yes" xml:space="preserve">
          <source>A new CertStore object encapsulating the CertStoreSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのCertStoreSpi実装をカプセル化した新しいCertStoreオブジェクトを返します。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="3ffe740d37d58dd03d186ad8aaf4cc29b54a3ee6" translate="yes" xml:space="preserve">
          <source>A new CertificateFactory object encapsulating the CertificateFactorySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトから CertificateFactorySpi の実装をカプセル化した新しい CertificateFactory オブジェクトを返します。なお、指定されたプロバイダオブジェクトはプロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="667c5edd8de2720b23e0df06dc2169efc2ffbf6e" translate="yes" xml:space="preserve">
          <source>A new CertificateFactory object encapsulating the CertificateFactorySpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定されたプロバイダの CertificateFactorySpi 実装をカプセル化した新しい CertificateFactory オブジェクトを返します。指定されたプロバイダはセキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="13f5262b3e58b67e449bf85fb8910c0c65651876" translate="yes" xml:space="preserve">
          <source>A new Cipher object encapsulating the CipherSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定された Provider オブジェクトから CipherSpi 実装をカプセル化した新しい Cipher オブジェクトが返されます。指定されたプロバイダオブジェクトはプロバイダリストに登録されていなくてもよいことに注意してください。</target>
        </trans-unit>
        <trans-unit id="a779576cecf11550d340570f7b289b329b69e9c0" translate="yes" xml:space="preserve">
          <source>A new Cipher object encapsulating the CipherSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定されたプロバイダの CipherSpi 実装をカプセル化した新しい Cipher オブジェクトが返されます。指定されたプロバイダはセキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="e6ef251d1ad08ddaf631fcd2060e3b3a5e0f46c5" translate="yes" xml:space="preserve">
          <source>A new Configuration object encapsulating the ConfigurationSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからConfigurationSpi実装をカプセル化した新しいConfigurationオブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="fa463bab5fbb393507e91ecd483b38008a3795b7" translate="yes" xml:space="preserve">
          <source>A new Configuration object encapsulating the ConfigurationSpi implementation from the specified provider is returned. The specified provider must be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダからConfigurationSpi実装をカプセル化した新しいConfigurationオブジェクトが返されます。指定されたプロバイダは、プロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="268558c1e911108ef6beb8616f773d3b457cd85a" translate="yes" xml:space="preserve">
          <source>A new DOM Document object.</source>
          <target state="translated">新しい DOM Document オブジェクト。</target>
        </trans-unit>
        <trans-unit id="3d7bca7783460fdcbe766d8afa49d507dd57fce6" translate="yes" xml:space="preserve">
          <source>A new ExemptionMechanism object encapsulating the ExemptionMechanismSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定したプロバイダオブジェクトから ExemptionMechanismSpi の実装をカプセル化した新しい ExemptionMechanism オブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="7d01edec86d421f499b113f481dc2188c1235265" translate="yes" xml:space="preserve">
          <source>A new ExemptionMechanism object encapsulating the ExemptionMechanismSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダの ExemptionMechanismSpi 実装をカプセル化した新しい ExemptionMechanism オブジェクトが返されます。指定したプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="eb9a359af290bd0355a7a6eb076732d3c75c73d0" translate="yes" xml:space="preserve">
          <source>A new InputSource or null for the default.</source>
          <target state="translated">新しいInputSource、またはデフォルトの場合はnull。</target>
        </trans-unit>
        <trans-unit id="3a8f176dc13128dc7727dc967e2effffb4fd2d1e" translate="yes" xml:space="preserve">
          <source>A new KeyAgreement object encapsulating the KeyAgreementSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからKeyAgreementSpi実装をカプセル化した新しいKeyAgreementオブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="abfdca351b763735030c6ffa741e09a2e267a2fe" translate="yes" xml:space="preserve">
          <source>A new KeyAgreement object encapsulating the KeyAgreementSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのKeyAgreementSpi実装をカプセル化した新しいKeyAgreementオブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="84931dacf7f4308bf76b01043d9e1d1952f0c0e2" translate="yes" xml:space="preserve">
          <source>A new KeyFactory object encapsulating the KeyFactorySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからKeyFactorySpiの実装をカプセル化した新しいKeyFactoryオブジェクトを返します。なお、指定されたプロバイダオブジェクトはプロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="17be658cae2f4ca28d3a636c2fb89480fddc80e2" translate="yes" xml:space="preserve">
          <source>A new KeyFactory object encapsulating the KeyFactorySpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのKeyFactorySpi実装をカプセル化した新しいKeyFactoryオブジェクトを返します。指定したプロバイダはセキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="726b9be3aa361c7a1a6a8904841d210166b70e4a" translate="yes" xml:space="preserve">
          <source>A new KeyGenerator object encapsulating the KeyGeneratorSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからKeyGeneratorSpi実装をカプセル化した新しいKeyGeneratorオブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="601bd47706449db33537347d94064978f2eacaea" translate="yes" xml:space="preserve">
          <source>A new KeyGenerator object encapsulating the KeyGeneratorSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのKeyGeneratorSpi実装をカプセル化した新しいKeyGeneratorオブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="bb1a75f50c4c8029b580cf3a428319dbb0999447" translate="yes" xml:space="preserve">
          <source>A new KeyManagerFactory object encapsulating the KeyManagerFactorySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトのKeyManagerFactorySpi実装をカプセル化した新しいKeyManagerFactoryオブジェクトを返します。なお、指定されたプロバイダオブジェクトはプロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="4797fb2c6d23e5bab123bb7103d87927153a81fa" translate="yes" xml:space="preserve">
          <source>A new KeyManagerFactory object encapsulating the KeyManagerFactorySpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのKeyManagerFactorySpi実装をカプセル化した新しいKeyManagerFactoryオブジェクトを返します。指定したプロバイダはセキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="bd15c6ed2e3240f50d98657c044e44c22458ebd1" translate="yes" xml:space="preserve">
          <source>A new KeyPairGenerator object encapsulating the KeyPairGeneratorSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトから KeyPairGeneratorSpi 実装をカプセル化した新しい KeyPairGenerator オブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="12c4ce735c8941f25ce3934bcb5bb865e73a5782" translate="yes" xml:space="preserve">
          <source>A new KeyPairGenerator object encapsulating the KeyPairGeneratorSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダの KeyPairGeneratorSpi 実装をカプセル化した新しい KeyPairGenerator オブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="8ab07cbfc7499c36532bc293c456c29f325598e5" translate="yes" xml:space="preserve">
          <source>A new KeyStore object encapsulating the KeyStoreSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからKeyStoreSpi実装をカプセル化した新しいKeyStoreオブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="1c8dfdc36199a332249519eeeea1609560b4aada" translate="yes" xml:space="preserve">
          <source>A new KeyStore object encapsulating the KeyStoreSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのKeyStoreSpi実装をカプセル化した新しいKeyStoreオブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="efcee39721eebc8fee884a81cb101c715d642357" translate="yes" xml:space="preserve">
          <source>A new Mac object encapsulating the MacSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからMacSpi実装をカプセル化した新しいMacオブジェクトが返されます。指定されたプロバイダオブジェクトはプロバイダリストに登録されていなくてもよいことに注意してください。</target>
        </trans-unit>
        <trans-unit id="3df5f1db3255acb1b4aec4415fe60b9d47e4877d" translate="yes" xml:space="preserve">
          <source>A new Mac object encapsulating the MacSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのMacSpi実装をカプセル化した新しいMacオブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="3e0370abbf39cd0a1720174664441cdfa936cded" translate="yes" xml:space="preserve">
          <source>A new MessageDigest object encapsulating the MessageDigestSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトから MessageDigestSpi 実装をカプセル化した新しい MessageDigest オブジェクトが返されます。指定されたプロバイダオブジェクトはプロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="2b3460499c4fc8e488a6d3199e9febda0e668b3b" translate="yes" xml:space="preserve">
          <source>A new MessageDigest object encapsulating the MessageDigestSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定されたプロバイダの MessageDigestSpi 実装をカプセル化した新しい MessageDigest オブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="e951b0d1178624f88694988cc856af7f8e4eb0d7" translate="yes" xml:space="preserve">
          <source>A new Policy object encapsulating the PolicySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからPolicySpi実装をカプセル化した新しいPolicyオブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="af2d9c29be422703f6d5f565cf9b2fa602f5114a" translate="yes" xml:space="preserve">
          <source>A new Policy object encapsulating the PolicySpi implementation from the specified provider is returned. The specified provider must be registered in the provider list.</source>
          <target state="translated">指定したプロバイダからPolicySpi実装をカプセル化した新しいPolicyオブジェクトが返されます。指定されたプロバイダは、プロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="d9d27f15fa2eaa2e07308aeaaa9a7b228887c0fa" translate="yes" xml:space="preserve">
          <source>A new SCTP channel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b834545dca96977dca042ccbb9f2de90cd38017" translate="yes" xml:space="preserve">
          <source>A new SCTP channel connected to the given address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8ea109e0a3d78661aab99484893b3ffd867b9b" translate="yes" xml:space="preserve">
          <source>A new SCTP multi channel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e77c7a9292e2a6938c28335b3ee2156241d5b23" translate="yes" xml:space="preserve">
          <source>A new SCTP server channel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7858bf11a432c416daff7336874533473b29ac41" translate="yes" xml:space="preserve">
          <source>A new SSLContext object encapsulating the SSLContextSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトから SSLContextSpi 実装をカプセル化した新しい SSLContext オブジェクトが返されます。指定されたプロバイダオブジェクトはプロバイダリストに登録されていなくてもよいことに注意してください。</target>
        </trans-unit>
        <trans-unit id="c8fb01cecb27c91b6b8cf68e13eff80f90e7c94f" translate="yes" xml:space="preserve">
          <source>A new SSLContext object encapsulating the SSLContextSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダの SSLContextSpi 実装をカプセル化した新しい SSLContext オブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="125b51a284735009e0587e15b1957037a70f2802" translate="yes" xml:space="preserve">
          <source>A new SecretKeyFactory object encapsulating the SecretKeyFactorySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからSecretKeyFactorySpiの実装をカプセル化した新しいSecretKeyFactoryオブジェクトを返します。なお、指定されたプロバイダオブジェクトはプロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="a40ee33baacc8bc5aa95c3f9ea8fbb1bb62b66e8" translate="yes" xml:space="preserve">
          <source>A new SecretKeyFactory object encapsulating the SecretKeyFactorySpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのSecretKeyFactorySpi実装をカプセル化した新しいSecretKeyFactoryオブジェクトを返します。指定したプロバイダはセキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="a0ad3fe577ac3de904aa73bfe5d0324bc87a0ef2" translate="yes" xml:space="preserve">
          <source>A new SecureRandom object encapsulating the SecureRandomSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトから、SecureRandomSpi の実装をカプセル化した新しい SecureRandom オブジェクトが返されます。なお、指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="7cbd31f6dffe090270edeb2c56d25020ed9dc191" translate="yes" xml:space="preserve">
          <source>A new SecureRandom object encapsulating the SecureRandomSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダの SecureRandomSpi 実装をカプセル化した新しい SecureRandom オブジェクトを返します。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="828cbcea91bf56c9036fa8b7931cff18275cc27b" translate="yes" xml:space="preserve">
          <source>A new Signature object encapsulating the SignatureSpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダ・オブジェクトからSignatureSpiの実装をカプセル化した新しいSignatureオブジェクトが返されます。指定されたプロバイダオブジェクトは、プロバイダリストに登録されている必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="ce3264e462754c18f1da3742ab2d57ae7b1dd714" translate="yes" xml:space="preserve">
          <source>A new Signature object encapsulating the SignatureSpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定されたプロバイダのSignatureSpi実装をカプセル化した新しいSignatureオブジェクトが返されます。指定されたプロバイダは、セキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="ad638694a4b1174b1e24a42aa6da4815fa5435e1" translate="yes" xml:space="preserve">
          <source>A new Socket &lt;code&gt;s&lt;/code&gt; is created and, if there is a security manager, the security manager's &lt;code&gt;checkAccept&lt;/code&gt; method is called with &lt;code&gt;s.getInetAddress().getHostAddress()&lt;/code&gt; and &lt;code&gt;s.getPort()&lt;/code&gt; as its arguments to ensure the operation is allowed. This could result in a SecurityException.</source>
          <target state="translated">新しいソケット &lt;code&gt;s&lt;/code&gt; が作成され、セキュリティマネージャが存在する場合、セキュリティマネージャの &lt;code&gt;checkAccept&lt;/code&gt; のメソッドを使って呼び出される &lt;code&gt;s.getInetAddress().getHostAddress()&lt;/code&gt; および &lt;code&gt;s.getPort()&lt;/code&gt; の動作を保証するためにその引数が許可されているよう。これにより、SecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="66204968ac98a71fc6ee269f8a995331d559448a" translate="yes" xml:space="preserve">
          <source>A new TerminalFactory object encapsulating the TerminalFactorySpi implementation from the specified provider is returned. The specified provider must be registered in the security provider list.</source>
          <target state="translated">指定したプロバイダのTerminalFactorySpi実装をカプセル化した新しいTerminalFactoryオブジェクトを返します。指定したプロバイダはセキュリティプロバイダリストに登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="84dfef1c1eaa14da4b2dc8e38eb215a181632e26" translate="yes" xml:space="preserve">
          <source>A new TerminalFactory object encapsulating the TerminalFactorySpi implementation from the specified provider object is returned. Note that the specified provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定したプロバイダオブジェクトからTerminalFactorySpiの実装をカプセル化した新しいTerminalFactoryオブジェクトを返します。なお、指定したプロバイダオブジェクトはプロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="97302852d3f597f8d52fdf01ec03933350e6ae95" translate="yes" xml:space="preserve">
          <source>A new TrustManagerFactory object encapsulating the TrustManagerFactorySpi implementation from the specified Provider object is returned. Note that the specified Provider object does not have to be registered in the provider list.</source>
          <target state="translated">指定されたプロバイダオブジェクトからTrustManagerFactorySpiの実装をカプセル化した新しいTrustManagerFactoryオブジェクトを返します。なお、指定されたプロバイダオブジェクトはプロバイダリストに登録されている必要はありません。</target>
        </trans-unit>
        <trans-unit id="23fe331bb6446dd58e24f97a053114136ed0249e" translate="yes" xml:space="preserve">
          <source>A new URI is constructed with this URI's scheme and the given URI's query and fragment components.</source>
          <target state="translated">新しいURIは、このURIのスキームと、与えられたURIのクエリとフラグメントのコンポーネントを用いて構築される。</target>
        </trans-unit>
        <trans-unit id="157a34a241ea1b952cd99032a77ba64cbe69bb79" translate="yes" xml:space="preserve">
          <source>A new XML reader.</source>
          <target state="translated">新しいXMLリーダー。</target>
        </trans-unit>
        <trans-unit id="bce4d13997e8b5057b928f0e4624b6a29692cdb6" translate="yes" xml:space="preserve">
          <source>A new association is now ready and data may be exchanged with this peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f9613f699e6fa12d911001309fb89e22f8dd9e" translate="yes" xml:space="preserve">
          <source>A new asynchronous channel group</source>
          <target state="translated">新しい非同期チャンネルグループ</target>
        </trans-unit>
        <trans-unit id="f9986c93c068befdf1d67a7439a7159a62fd88b3" translate="yes" xml:space="preserve">
          <source>A new asynchronous file channel</source>
          <target state="translated">新しい非同期ファイルチャンネル</target>
        </trans-unit>
        <trans-unit id="0cbc57d6c284b1dd12c94be8622f616e240f8834" translate="yes" xml:space="preserve">
          <source>A new asynchronous server socket channel</source>
          <target state="translated">新しい非同期サーバソケットチャンネル</target>
        </trans-unit>
        <trans-unit id="9c56f1e622819c89f8e6fae5048bfb4464aa4589" translate="yes" xml:space="preserve">
          <source>A new asynchronous socket channel</source>
          <target state="translated">新しい非同期ソケットチャンネル</target>
        </trans-unit>
        <trans-unit id="629499fc782a69be656b125acbccb40f74208a4a" translate="yes" xml:space="preserve">
          <source>A new builder</source>
          <target state="translated">新しいビルダー</target>
        </trans-unit>
        <trans-unit id="9fad74d240d25d378558b1255b34f70560a228bf" translate="yes" xml:space="preserve">
          <source>A new builder that builds an automatic module</source>
          <target state="translated">自動モジュールを構築する新しいビルダー</target>
        </trans-unit>
        <trans-unit id="e92d9957909a8d005975568fba3a9c49448141f9" translate="yes" xml:space="preserve">
          <source>A new builder that builds an open module</source>
          <target state="translated">オープンモジュールをビルドする新しいビルダー</target>
        </trans-unit>
        <trans-unit id="25ee34a403c6700c546a4108cc328ae600591c3e" translate="yes" xml:space="preserve">
          <source>A new certificate handling package is created in the Java platform.</source>
          <target state="translated">新しい証明書処理パッケージがJavaプラットフォームで作成されます。</target>
        </trans-unit>
        <trans-unit id="718f2b8bbf1587dde6bb38de3b6d608243e6dea2" translate="yes" xml:space="preserve">
          <source>A new certificate handling package is created in the Java platform. This Certificate interface is entirely deprecated and is here to allow for a smooth transition to the new package.</source>
          <target state="translated">新しい証明書処理パッケージが Java プラットフォームで作成されます。この証明書インターフェイスは完全に非推奨となっており、新しいパッケージへのスムーズな移行を可能にするためにここにあります。</target>
        </trans-unit>
        <trans-unit id="26ac536ddec39c76615631278c13e054fe68ed0b" translate="yes" xml:space="preserve">
          <source>A new char buffer</source>
          <target state="translated">新しい char バッファ</target>
        </trans-unit>
        <trans-unit id="01d9b805add68dab9a76c40af460390f4da7fb91" translate="yes" xml:space="preserve">
          <source>A new client connection has been opened.</source>
          <target state="translated">新しいクライアント接続が開かれました。</target>
        </trans-unit>
        <trans-unit id="cc2a294dd99b3c03dbf54cdf085be4e65bab5b13" translate="yes" xml:space="preserve">
          <source>A new collation rules string can be created by concatenating rules strings. For example, the rules returned by &lt;a href=&quot;#getRules()&quot;&gt;&lt;code&gt;getRules()&lt;/code&gt;&lt;/a&gt; could be concatenated to combine multiple &lt;code&gt;RuleBasedCollator&lt;/code&gt;s.</source>
          <target state="translated">A new collation rules string can be created by concatenating rules strings. For example, the rules returned by &lt;a href=&quot;#getRules()&quot;&gt; &lt;code&gt;getRules()&lt;/code&gt; &lt;/a&gt; could be concatenated to combine multiple &lt;code&gt;RuleBasedCollator&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="827e2087bb76a0b88fc51994d48a3006017e8bae" translate="yes" xml:space="preserve">
          <source>A new collation rules string can be created by concatenating rules strings. For example, the rules returned by &lt;a href=&quot;rulebasedcollator#getRules--&quot;&gt;&lt;code&gt;getRules()&lt;/code&gt;&lt;/a&gt; could be concatenated to combine multiple &lt;code&gt;RuleBasedCollator&lt;/code&gt;s.</source>
          <target state="translated">ルール文字列を連結することにより、新しい照合ルール文字列を作成できます。たとえば、&lt;a href=&quot;rulebasedcollator#getRules--&quot;&gt; &lt;code&gt;getRules()&lt;/code&gt; &lt;/a&gt;によって返されるルールを連結して、複数の &lt;code&gt;RuleBasedCollator&lt;/code&gt; を組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="0c8e2bfcf83550d90a8829fb36311408b5e67747" translate="yes" xml:space="preserve">
          <source>A new datagram channel</source>
          <target state="translated">新しいデータグラムチャンネル</target>
        </trans-unit>
        <trans-unit id="e0b8ebf717a254cbd0e710cad36b3aa7cf6b47c8" translate="yes" xml:space="preserve">
          <source>A new decoder for this charset</source>
          <target state="translated">この文字セットのための新しいデコーダ</target>
        </trans-unit>
        <trans-unit id="a58078311df4687b197e1dcc8ca8cfde78caada0" translate="yes" xml:space="preserve">
          <source>A new double buffer</source>
          <target state="translated">新しいダブルバッファ</target>
        </trans-unit>
        <trans-unit id="c7e6b0b71de9de9ede7aea10272874373ea2cfbf" translate="yes" xml:space="preserve">
          <source>A new encoder for this charset</source>
          <target state="translated">この文字セット用の新しいエンコーダ</target>
        </trans-unit>
        <trans-unit id="07ae51599dd6fc63f812a77e6f211c732ee4f105" translate="yes" xml:space="preserve">
          <source>A new exception has been created for exceptions specific to these XPath interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95bd182773eb0d36bbf9f3deb8094b7bc400b85f" translate="yes" xml:space="preserve">
          <source>A new exception has been created for exceptions specific to these XPath interfaces. See also &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-3-XPath/&quot;&gt; Document Object Model (DOM) Level 3 XPath Specification, Version 1.0, W3C Working Group Note 26 February 2004&lt;/a&gt; Note that this class came from Document Object Model (DOM) Level 3 XPath Specification, Working Draft 20 August 2002 where the values of &lt;a href=&quot;#INVALID_EXPRESSION_ERR&quot;&gt;&lt;code&gt;INVALID_EXPRESSION_ERR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#TYPE_ERR&quot;&gt;&lt;code&gt;TYPE_ERR&lt;/code&gt;&lt;/a&gt; are 1 and 2 respectively (instead of 51 and 52 as in the 2004 version).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a12be5620980a642f2d62bb55b1169fe7d2f9c0" translate="yes" xml:space="preserve">
          <source>A new file channel</source>
          <target state="translated">新しいファイルチャンネル</target>
        </trans-unit>
        <trans-unit id="7a03fc9b6fe7f9f50a8b588d5c2839f795d5cfa3" translate="yes" xml:space="preserve">
          <source>A new file system</source>
          <target state="translated">新しいファイルシステム</target>
        </trans-unit>
        <trans-unit id="2c72f7dbc539aca73a65ca87d61f96c62f44ab73" translate="yes" xml:space="preserve">
          <source>A new float buffer</source>
          <target state="translated">新しいフロートバッファ</target>
        </trans-unit>
        <trans-unit id="07e3279021ba77f5ae5155347ef02546bd534253" translate="yes" xml:space="preserve">
          <source>A new input stream</source>
          <target state="translated">新しい入力ストリーム</target>
        </trans-unit>
        <trans-unit id="aa02ce4bf632eab35c8c2d8de16eb028c133b493" translate="yes" xml:space="preserve">
          <source>A new instance of &lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt; is created every time when invoking the &lt;a href=&quot;urlstreamhandler#openConnection(java.net.URL)&quot;&gt;URLStreamHandler.openConnection(URL)&lt;/a&gt; method of the protocol handler for this URL.</source>
          <target state="translated">A new instance of &lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt; is created every time when invoking the &lt;a href=&quot;urlstreamhandler#openConnection(java.net.URL)&quot;&gt;URLStreamHandler.openConnection(URL)&lt;/a&gt; method of the protocol handler for this URL.</target>
        </trans-unit>
        <trans-unit id="c28559dd6b37c82370a2d6d36b273e27af024dea" translate="yes" xml:space="preserve">
          <source>A new instance of &lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt; is created every time when invoking the &lt;a href=&quot;urlstreamhandler#openConnection-java.net.URL-&quot;&gt;URLStreamHandler.openConnection(URL)&lt;/a&gt; method of the protocol handler for this URL.</source>
          <target state="translated">このURLのプロトコルハンドラーの&lt;a href=&quot;urlstreamhandler#openConnection-java.net.URL-&quot;&gt;URLStreamHandler.openConnection（URL）&lt;/a&gt;メソッドを呼び出すたびに、&lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt;の新しいインスタンスが作成されます。</target>
        </trans-unit>
        <trans-unit id="09ee83524a2a6cec8de09ad6addfbae7e314cdce" translate="yes" xml:space="preserve">
          <source>A new instance of a &lt;code&gt;DOMImplementation&lt;/code&gt;.</source>
          <target state="translated">A new instance of a &lt;code&gt;DOMImplementation&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4961957f719848f8638762dfcd734c9efac8219" translate="yes" xml:space="preserve">
          <source>A new instance of a CachedRowSet.</source>
          <target state="translated">CachedRowSet の新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="faafe4152486969e7c281c1445dc75ff92829b56" translate="yes" xml:space="preserve">
          <source>A new instance of a DOM Document object.</source>
          <target state="translated">DOM Document オブジェクトの新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="63baa74073afc7903bcfd521ce76950ab24c3358" translate="yes" xml:space="preserve">
          <source>A new instance of a DocumentBuilder.</source>
          <target state="translated">DocumentBuilderの新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="43aeb569dfa12312d98c1df99b0b9c5a57a1cecb" translate="yes" xml:space="preserve">
          <source>A new instance of a FilteredRowSet.</source>
          <target state="translated">FilteredRowSetの新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="457ed6ba0799b2cad0030abf99f554a8d05119f5" translate="yes" xml:space="preserve">
          <source>A new instance of a JdbcRowSet.</source>
          <target state="translated">JdbcRowSetの新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="c288ef954fd9c070a9e9c45378da1f7bfaa440ee" translate="yes" xml:space="preserve">
          <source>A new instance of a JoinRowSet.</source>
          <target state="translated">JoinRowSet の新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="dba82889fa35016045565b66ab8e267b901eb25b" translate="yes" xml:space="preserve">
          <source>A new instance of a SAXParser.</source>
          <target state="translated">SAXParserの新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="0ed0e50c9ee23a426d83efb31df4a7ea91a7cc07" translate="yes" xml:space="preserve">
          <source>A new instance of a SAXParserFactory.</source>
          <target state="translated">SAXParserFactoryの新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="69c4e380a0d626dbb5eb47b86877ca603ed20145" translate="yes" xml:space="preserve">
          <source>A new instance of a WebRowSet.</source>
          <target state="translated">WebRowSetの新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="02ba29b9df798f29678c5c4004096be3513a4ab9" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;DatatypeFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;DatatypeFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="f1aefd1dfdb46b9d062c77a9d2289f8c0e987db0" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;DatatypeFactory&lt;/code&gt; is created through the &lt;a href=&quot;#newInstance()&quot;&gt;&lt;code&gt;newInstance()&lt;/code&gt;&lt;/a&gt; method that uses the following implementation resolution mechanisms to determine an implementation:</source>
          <target state="translated">A new instance of the &lt;code&gt;DatatypeFactory&lt;/code&gt; is created through the &lt;a href=&quot;#newInstance()&quot;&gt; &lt;code&gt;newInstance()&lt;/code&gt; &lt;/a&gt; method that uses the following implementation resolution mechanisms to determine an implementation:</target>
        </trans-unit>
        <trans-unit id="2b4c941aa0181945e0c3f753d40c3a6d40a28985" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="5c7faa9209326d962b653b314cdf02fc955e6995" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;SAXParserFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;SAXParserFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="cc6a464fa02bcd202d11de377703e73d7c138591" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;SchemaFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;SchemaFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="68ad9849a89b512e82c82da5570806181e8f22e5" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;TransformerFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;TransformerFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="85f9777c8930827dfb2a70b7ad32691eadf2f90d" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;XMLEventFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;XMLEventFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="84b3a1e6cc940512457d4f097a81448949bc0ea1" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;XMLInputFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;XMLInputFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="b689f28162c5d08b1ec2167897e085e171f388cb" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;XMLOutputFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;XMLOutputFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="c07fed8aa7432ea5be5cf7464e7669f77adbc594" translate="yes" xml:space="preserve">
          <source>A new instance of the &lt;code&gt;XPathFactory&lt;/code&gt; builtin system-default implementation.</source>
          <target state="translated">A new instance of the &lt;code&gt;XPathFactory&lt;/code&gt; builtin system-default implementation.</target>
        </trans-unit>
        <trans-unit id="70dd79cc189d68c5b9c4748ef1fbf76c508ca55d" translate="yes" xml:space="preserve">
          <source>A new int buffer</source>
          <target state="translated">新しいintバッファ</target>
        </trans-unit>
        <trans-unit id="4cab229378aefd95620182bd2e26e42daed2a585" translate="yes" xml:space="preserve">
          <source>A new key representing the registration of the given channel with this selector</source>
          <target state="translated">このセレクタで指定されたチャンネルの登録を表す新しいキー</target>
        </trans-unit>
        <trans-unit id="eb82ef1bb373c9a76bbed75b19d1396c6c0475f9" translate="yes" xml:space="preserve">
          <source>A new long buffer</source>
          <target state="translated">新しいロングバッファ</target>
        </trans-unit>
        <trans-unit id="2378edf28d0f7cd090a51aaa3253aba996f08c6c" translate="yes" xml:space="preserve">
          <source>A new matcher for this pattern</source>
          <target state="translated">このパターンのための新しいマッチャー</target>
        </trans-unit>
        <trans-unit id="370091f3315fb7e9620cc6ef2c7174e7f8b439d4" translate="yes" xml:space="preserve">
          <source>A new output stream</source>
          <target state="translated">新しい出力ストリーム</target>
        </trans-unit>
        <trans-unit id="fc00dcf9a6f1431f2f4900621a30444a41c3f824" translate="yes" xml:space="preserve">
          <source>A new pipe</source>
          <target state="translated">新しいパイプ</target>
        </trans-unit>
        <trans-unit id="195dbfc34817c71b0ac77609e1a68b8637c20709" translate="yes" xml:space="preserve">
          <source>A new private implementation of an MBeanServer.</source>
          <target state="translated">MBeanServerの新しいプライベート実装。</target>
        </trans-unit>
        <trans-unit id="c1bba2ce8a1736ca41dee666c238188a8f3968a5" translate="yes" xml:space="preserve">
          <source>A new readable byte channel</source>
          <target state="translated">新しい読み取り可能なバイトチャネル</target>
        </trans-unit>
        <trans-unit id="227964ba0cdb00d556590c57b5b512186bc50f84" translate="yes" xml:space="preserve">
          <source>A new reader</source>
          <target state="translated">新しい読者</target>
        </trans-unit>
        <trans-unit id="a987f16a3add20d096c2dc2279a462557da4b375" translate="yes" xml:space="preserve">
          <source>A new selector</source>
          <target state="translated">新しいセレクター</target>
        </trans-unit>
        <trans-unit id="f414cd40bc587b5cb076112120f1a32f7542e237" translate="yes" xml:space="preserve">
          <source>A new sequential &lt;code&gt;IntStream&lt;/code&gt;</source>
          <target state="translated">新しい順次 &lt;code&gt;IntStream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6938f1e9b7120bf66ba9f32b912fe7a3bb90330" translate="yes" xml:space="preserve">
          <source>A new service is available from the nesting BeanContext.</source>
          <target state="translated">ネスティングBeanContextから新しいサービスが利用できます。</target>
        </trans-unit>
        <trans-unit id="f53d0dbb2fa07c0c02c96d61beb2e8a31523487e" translate="yes" xml:space="preserve">
          <source>A new service is available from the nesting BeanContext. Subclasses may override this method in order to implement their own behaviors</source>
          <target state="translated">新しいサービスは,ネスティングBeanContextから利用可能です。サブクラスは,独自の振る舞いを実装するために,このメソッドをオーバーライドすることができます.</target>
        </trans-unit>
        <trans-unit id="cc5510b8ee23c196414d7a41911a0b2d8c8655c7" translate="yes" xml:space="preserve">
          <source>A new service loader</source>
          <target state="translated">新しいサービスローダー</target>
        </trans-unit>
        <trans-unit id="7a598ad4eff5223742f9071b01244341dbae324b" translate="yes" xml:space="preserve">
          <source>A new short buffer</source>
          <target state="translated">新しいショートバッファ</target>
        </trans-unit>
        <trans-unit id="92e48cdd5d234dfa3d6e9af022c9d12a72a40f16" translate="yes" xml:space="preserve">
          <source>A new socket channel</source>
          <target state="translated">新しいソケットチャンネル</target>
        </trans-unit>
        <trans-unit id="c2bfe947053d6f456f491bb701491ac9de2d9d69" translate="yes" xml:space="preserve">
          <source>A new table header element (&lt;code&gt;THEAD&lt;/code&gt; ).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8acabd40cadf9e1fc83439d4cacc467728413a" translate="yes" xml:space="preserve">
          <source>A new volatile variable &lt;code&gt;V&lt;/code&gt; is created, and written by the current thread. As defined by the JMM, this write is a global synchronization event.</source>
          <target state="translated">新しい揮発性変数 &lt;code&gt;V&lt;/code&gt; が作成され、現在のスレッドによって書き込まれます。JMMで定義されているように、この書き込みはグローバル同期イベントです。</target>
        </trans-unit>
        <trans-unit id="fae76c304ef49fc476ffd8e6ab0bb7e6f610c034" translate="yes" xml:space="preserve">
          <source>A new writable byte channel</source>
          <target state="translated">新しい書き込み可能なバイトチャネル</target>
        </trans-unit>
        <trans-unit id="f9a4767fbb8f8aed5b2928cb74b7c92f9ba2c665" translate="yes" xml:space="preserve">
          <source>A new writer</source>
          <target state="translated">新人作家</target>
        </trans-unit>
        <trans-unit id="96a14b87d6769803187b54bde0e78433cf67339d" translate="yes" xml:space="preserve">
          <source>A new, and connected, socket channel</source>
          <target state="translated">新しい、接続されたソケットチャンネル</target>
        </trans-unit>
        <trans-unit id="2595cfcee208226807eae38461417b358c37d2c5" translate="yes" xml:space="preserve">
          <source>A newLine() method is provided, which uses the platform's own notion of line separator as defined by the system property &lt;code&gt;line.separator&lt;/code&gt;. Not all platforms use the newline character ('\n') to terminate lines. Calling this method to terminate each output line is therefore preferred to writing a newline character directly.</source>
          <target state="translated">newLine（）メソッドが提供されています。これは、システムプロパティ &lt;code&gt;line.separator&lt;/code&gt; で定義されているプラ​​ットフォーム独自の行区切り記号の概念を使用します。すべてのプラットフォームが改行文字（ '\ n'）を使用して行を終了するわけではありません。したがって、このメソッドを呼び出して各出力行を終了することは、改行文字を直接書き込むよりも望ましい方法です。</target>
        </trans-unit>
        <trans-unit id="d618578a9393e1dd96591434db2110ed0c362143" translate="yes" xml:space="preserve">
          <source>A newline (line feed) character (&lt;code&gt;'\n'&lt;/code&gt;),</source>
          <target state="translated">改行（ラインフィード）文字（ &lt;code&gt;'\n'&lt;/code&gt; ）、</target>
        </trans-unit>
        <trans-unit id="8b5f06c0531c3ba4c791f46b68dc5d8317f9ec88" translate="yes" xml:space="preserve">
          <source>A newline character (the character '\n' in Java) is replaced by a backslash followed by the character '\n'.</source>
          <target state="translated">改行文字(Javaでは文字「\n」)は、バックスラッシュに置き換えられ、文字「\n」が続く。</target>
        </trans-unit>
        <trans-unit id="ad7e79fbc80b15ff80930a2bd90a4d857f0a8809" translate="yes" xml:space="preserve">
          <source>A newly allocated Packer engine.</source>
          <target state="translated">新たに割り当てられたパッカーエンジン。</target>
        </trans-unit>
        <trans-unit id="ae89a8172fee4e06f55daa88ca36ec1e21275ab3" translate="yes" xml:space="preserve">
          <source>A newly allocated Unpacker engine.</source>
          <target state="translated">新たに割り当てられたアンパッカーエンジン。</target>
        </trans-unit>
        <trans-unit id="cbbf204fae9ef1bb37d44b20447a2eddb6f441bb" translate="yes" xml:space="preserve">
          <source>A newly created PRNG &lt;code&gt;SecureRandom&lt;/code&gt; object is not seeded (except if it is created by &lt;a href=&quot;#%3Cinit%3E(byte%5B%5D)&quot;&gt;&lt;code&gt;SecureRandom(byte[])&lt;/code&gt;&lt;/a&gt;). The first call to &lt;code&gt;nextBytes&lt;/code&gt; will force it to seed itself from an implementation- specific entropy source. This self-seeding will not occur if &lt;code&gt;setSeed&lt;/code&gt; was previously called.</source>
          <target state="translated">A newly created PRNG &lt;code&gt;SecureRandom&lt;/code&gt; object is not seeded (except if it is created by &lt;a href=&quot;#%3Cinit%3E(byte%5B%5D)&quot;&gt; &lt;code&gt;SecureRandom(byte[])&lt;/code&gt; &lt;/a&gt;). The first call to &lt;code&gt;nextBytes&lt;/code&gt; will force it to seed itself from an implementation- specific entropy source. This self-seeding will not occur if &lt;code&gt;setSeed&lt;/code&gt; was previously called.</target>
        </trans-unit>
        <trans-unit id="8b80c97bcfe5a4a65eb9c92b0531e7e15f76ad83" translate="yes" xml:space="preserve">
          <source>A newly created recording is in the &lt;a href=&quot;recordingstate#NEW&quot;&gt;&lt;code&gt;RecordingState.NEW&lt;/code&gt;&lt;/a&gt; state. To start the recording, invoke the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f749a2698aa7b3fe7595ce4fe494aefb6961a78f" translate="yes" xml:space="preserve">
          <source>A newly-allocated byte array containing the decoded bytes.</source>
          <target state="translated">デコードされたバイトを含む新たに割り当てられたバイト配列。</target>
        </trans-unit>
        <trans-unit id="4500d02e284d7deca5c46a49dd59c877a9687edf" translate="yes" xml:space="preserve">
          <source>A newly-allocated byte array containing the resulting encoded bytes.</source>
          <target state="translated">新たに割り当てられたバイト配列で、結果としてエンコードされたバイトを含む。</target>
        </trans-unit>
        <trans-unit id="ad405c747b824e9ef58d7c88b72e9eb7cc3efb65" translate="yes" xml:space="preserve">
          <source>A newly-allocated byte buffer containing the decoded bytes</source>
          <target state="translated">デコードされたバイトを含む新たに割り当てられたバイトバッファ</target>
        </trans-unit>
        <trans-unit id="91f70710f376acb4f8c9553c4de7e523904b6303" translate="yes" xml:space="preserve">
          <source>A newly-allocated byte buffer containing the encoded bytes.</source>
          <target state="translated">エンコードされたバイトを含む、新たに割り当てられたバイトバッファ。</target>
        </trans-unit>
        <trans-unit id="8c318ea698e58c2b2e4ebdafd737b67d00e3f939" translate="yes" xml:space="preserve">
          <source>A newly-allocated byte buffer containing the result of the encoding operation. The buffer's position will be zero and its limit will follow the last byte written.</source>
          <target state="translated">新たに割り当てられたバイトバッファで、エンコーディング操作の結果が格納されます。バッファの位置はゼロで、その限界は最後に書き込まれたバイトの後に続きます。</target>
        </trans-unit>
        <trans-unit id="e1af1e5437c51808c4a8a1190c196a71f76d20e4" translate="yes" xml:space="preserve">
          <source>A newly-allocated character buffer containing the result of the decoding operation. The buffer's position will be zero and its limit will follow the last character written.</source>
          <target state="translated">新たに割り当てられた文字バッファで、デコード処理の結果が格納されます。バッファの位置はゼロで、その限界は最後に書き込まれた文字の後に続きます。</target>
        </trans-unit>
        <trans-unit id="14848075c6a2bf1c1cd5881b071a496387811f42" translate="yes" xml:space="preserve">
          <source>A newly-created buffer always has a position of zero and a mark that is undefined. The initial limit may be zero, or it may be some other value that depends upon the type of the buffer and the manner in which it is constructed. Each element of a newly-allocated buffer is initialized to zero.</source>
          <target state="translated">新しく作成されたバッファは常にゼロの位置と未定義のマークを持ちます。初期値はゼロであってもよいし、バッファのタイプや構築方法に依存する他の値であってもよい。新しく割り当てられたバッファの各要素はゼロに初期化されます。</target>
        </trans-unit>
        <trans-unit id="aed6f82b71caffa13cc936a03a53581159ec9c9c" translate="yes" xml:space="preserve">
          <source>A newly-created channel is connected by invoking its &lt;a href=&quot;#connect(java.net.SocketAddress,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method; once connected, a channel remains connected until it is closed. Whether or not a socket channel is connected may be determined by invoking its &lt;a href=&quot;#getRemoteAddress()&quot;&gt;&lt;code&gt;getRemoteAddress&lt;/code&gt;&lt;/a&gt; method. An attempt to invoke an I/O operation upon an unconnected channel will cause a &lt;a href=&quot;notyetconnectedexception&quot;&gt;&lt;code&gt;NotYetConnectedException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">A newly-created channel is connected by invoking its &lt;a href=&quot;#connect(java.net.SocketAddress,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; method; once connected, a channel remains connected until it is closed. Whether or not a socket channel is connected may be determined by invoking its &lt;a href=&quot;#getRemoteAddress()&quot;&gt; &lt;code&gt;getRemoteAddress&lt;/code&gt; &lt;/a&gt; method. An attempt to invoke an I/O operation upon an unconnected channel will cause a &lt;a href=&quot;notyetconnectedexception&quot;&gt; &lt;code&gt;NotYetConnectedException&lt;/code&gt; &lt;/a&gt; to be thrown.</target>
        </trans-unit>
        <trans-unit id="12e02aa878755e8bc2b352a4b4027c3700104164" translate="yes" xml:space="preserve">
          <source>A newly-created channel is connected by invoking its &lt;a href=&quot;asynchronoussocketchannel#connect-java.net.SocketAddress-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method; once connected, a channel remains connected until it is closed. Whether or not a socket channel is connected may be determined by invoking its &lt;a href=&quot;asynchronoussocketchannel#getRemoteAddress--&quot;&gt;&lt;code&gt;getRemoteAddress&lt;/code&gt;&lt;/a&gt; method. An attempt to invoke an I/O operation upon an unconnected channel will cause a &lt;a href=&quot;notyetconnectedexception&quot;&gt;&lt;code&gt;NotYetConnectedException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">新しく作成されたチャネルは、その&lt;a href=&quot;asynchronoussocketchannel#connect-java.net.SocketAddress-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって接続されます。接続されると、チャネルは閉じるまで接続されたままになります。ソケットチャネルが接続されているかどうかは、その&lt;a href=&quot;asynchronoussocketchannel#getRemoteAddress--&quot;&gt; &lt;code&gt;getRemoteAddress&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって判断できます。接続されていないチャネルでI / O操作を呼び出そうとすると、&lt;a href=&quot;notyetconnectedexception&quot;&gt; &lt;code&gt;NotYetConnectedException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="da1a847e03b38daa625c581b5c50ecbf191ba107" translate="yes" xml:space="preserve">
          <source>A newly-created connector server is &lt;em&gt;inactive&lt;/em&gt;, and does not yet listen for connections. Only when its &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method has been called does it start listening for connections.</source>
          <target state="translated">A newly-created connector server is &lt;em&gt;inactive&lt;/em&gt;, and does not yet listen for connections. Only when its &lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; method has been called does it start listening for connections.</target>
        </trans-unit>
        <trans-unit id="3937dfeb6f50d8b3801a4e97455d079ce3003278" translate="yes" xml:space="preserve">
          <source>A newly-created connector server is &lt;em&gt;inactive&lt;/em&gt;, and does not yet listen for connections. Only when its &lt;a href=&quot;jmxconnectorservermbean#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method has been called does it start listening for connections.</source>
          <target state="translated">新しく作成されたコネクタサーバーは&lt;em&gt;非アクティブで&lt;/em&gt;、まだ接続をリッスンしていません。&lt;a href=&quot;jmxconnectorservermbean#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;メソッドが呼び出された場合にのみ、接続の待機を開始します。</target>
        </trans-unit>
        <trans-unit id="bf5b745265e7a08cb2b6dd796bea5742ede1db26" translate="yes" xml:space="preserve">
          <source>A newly-created object of this type is unconnected. Its &lt;a href=&quot;#connect()&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method must be called before it can be used. However, objects created by &lt;a href=&quot;jmxconnectorfactory#connect(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt;&lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt;&lt;/a&gt; are already connected.</source>
          <target state="translated">A newly-created object of this type is unconnected. Its &lt;a href=&quot;#connect()&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; method must be called before it can be used. However, objects created by &lt;a href=&quot;jmxconnectorfactory#connect(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt; &lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt; &lt;/a&gt; are already connected.</target>
        </trans-unit>
        <trans-unit id="9320a55b7ef50489ba9462b8018314f21d3b82a1" translate="yes" xml:space="preserve">
          <source>A newly-created object of this type is unconnected. Its &lt;a href=&quot;jmxconnector#connect--&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method must be called before it can be used. However, objects created by &lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt;&lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt;&lt;/a&gt; are already connected.</source>
          <target state="translated">このタイプの新しく作成されたオブジェクトは接続されていません。その&lt;a href=&quot;jmxconnector#connect--&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;メソッドは、使用する前に呼び出す必要があります。ただし、&lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt; &lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt; &lt;/a&gt;によって作成されたオブジェクトはすでに接続されています。</target>
        </trans-unit>
        <trans-unit id="d920ab1e496d0ab22784661132c5d8cba8bb07a7" translate="yes" xml:space="preserve">
          <source>A next-line character (&lt;code&gt;'\u0085'&lt;/code&gt;),</source>
          <target state="translated">次の行の文字（ &lt;code&gt;'\u0085'&lt;/code&gt; ）、</target>
        </trans-unit>
        <trans-unit id="3ad327a430dd79283b9f13832e1f8c1e8b07e851" translate="yes" xml:space="preserve">
          <source>A nexus for I/O operations</source>
          <target state="translated">I/O操作のためのネクサス</target>
        </trans-unit>
        <trans-unit id="30b96666137ff956b13f29c122ff2067f45da9e4" translate="yes" xml:space="preserve">
          <source>A nexus for I/O operations.</source>
          <target state="translated">I/O操作のためのネクサス。</target>
        </trans-unit>
        <trans-unit id="32d94d48baeb48749abc6e461ec1568849d96888" translate="yes" xml:space="preserve">
          <source>A node</source>
          <target state="translated">ノード</target>
        </trans-unit>
        <trans-unit id="6d1ab6e4231c9fd824e59dacc81a7b8495e33cd8" translate="yes" xml:space="preserve">
          <source>A node in a hierarchical collection of preference data.</source>
          <target state="translated">プリファレンスデータの階層的なコレクションのノード。</target>
        </trans-unit>
        <trans-unit id="0d390cb60da6e421d230a106d5ce284bbd479bfd" translate="yes" xml:space="preserve">
          <source>A node in a hierarchical collection of preference data. This class allows applications to store and retrieve user and system preference and configuration data. This data is stored persistently in an implementation-dependent backing store. Typical implementations include flat files, OS-specific registries, directory servers and SQL databases. The user of this class needn't be concerned with details of the backing store.</source>
          <target state="translated">プリファレンスデータの階層的なコレクションのノード。このクラスは、アプリケーションがユーザやシステムの環境設定や設定データを保存したり取得したりすることを可能にします。このデータは、実装に依存したバッキングストアに永続的に保存されます。典型的な実装としては、フラットファイル、OS固有のレジストリ、ディレクトリサーバ、SQLデータベースなどがあります。このクラスのユーザは、バッキングストアの詳細を気にする必要はありません。</target>
        </trans-unit>
        <trans-unit id="2ba931555b23ae0a3a5783daf9e71de13b0827ba" translate="yes" xml:space="preserve">
          <source>A non-&lt;code&gt;null&lt;/code&gt; valid &lt;code&gt;String&lt;/code&gt; representation of this &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">A non- &lt;code&gt;null&lt;/code&gt; valid &lt;code&gt;String&lt;/code&gt; representation of this &lt;code&gt;Duration&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17f20ba92b650ae0774012f30e1f13c144cd223e" translate="yes" xml:space="preserve">
          <source>A non-&lt;code&gt;null&lt;/code&gt; valid &lt;code&gt;String&lt;/code&gt; representation of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.</source>
          <target state="translated">A non- &lt;code&gt;null&lt;/code&gt; valid &lt;code&gt;String&lt;/code&gt; representation of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30b479c5d53f929d5b3781486075a91492453c50" translate="yes" xml:space="preserve">
          <source>A non-ASCII character c for which &lt;a href=&quot;../lang/character#isDigit(char)&quot;&gt;&lt;code&gt;Character.isDigit&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(c)&lt;/code&gt; returns true</source>
          <target state="translated">A non-ASCII character c for which &lt;a href=&quot;../lang/character#isDigit(char)&quot;&gt; &lt;code&gt;Character.isDigit&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(c)&lt;/code&gt; returns true</target>
        </trans-unit>
        <trans-unit id="34276e6cf55ed986512c9b4e3783654205d06d95" translate="yes" xml:space="preserve">
          <source>A non-ASCII character c for which &lt;a href=&quot;../lang/character#isDigit-char-&quot;&gt;&lt;code&gt;Character.isDigit&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(c)&lt;/code&gt; returns true</source>
          <target state="translated">&lt;a href=&quot;../lang/character#isDigit-char-&quot;&gt; &lt;code&gt;Character.isDigit&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(c)&lt;/code&gt; がtrueを返す非ASCII文字c</target>
        </trans-unit>
        <trans-unit id="2f60e868b739d55dc0d3cd5caebc70e7bfdd560f" translate="yes" xml:space="preserve">
          <source>A non-blocking connection operation is initiated by placing a socket channel in non-blocking mode and then invoking its &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method. Once the connection is established, or the attempt has failed, the socket channel will become connectable and this method may be invoked to complete the connection sequence. If the connection operation failed then invoking this method will cause an appropriate &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">A non-blocking connection operation is initiated by placing a socket channel in non-blocking mode and then invoking its &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; method. Once the connection is established, or the attempt has failed, the socket channel will become connectable and this method may be invoked to complete the connection sequence. If the connection operation failed then invoking this method will cause an appropriate &lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt; to be thrown.</target>
        </trans-unit>
        <trans-unit id="49951378a32d6d7aa2f164737d4577800b20cbd4" translate="yes" xml:space="preserve">
          <source>A non-blocking connection operation is initiated by placing a socket channel in non-blocking mode and then invoking its &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method. Once the connection is established, or the attempt has failed, the socket channel will become connectable and this method may be invoked to complete the connection sequence. If the connection operation failed then invoking this method will cause an appropriate &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">非ブロッキング接続操作は、ソケットチャネルを非ブロッキングモードにしてから、その&lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって開始されます。接続が確立されるか、試行が失敗すると、ソケットチャネルが接続可能になり、このメソッドを呼び出して接続シーケンスを完了することができます。接続操作が失敗した場合、このメソッドを呼び出すと、適切な&lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="31243b280aaefbb0af907d96861648e7aaceb40c" translate="yes" xml:space="preserve">
          <source>A non-blocking connection operation is initiated by placing a socket channel in non-blocking mode and then invoking one of its &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; methods. Once the connection is established, or the attempt has failed, the channel will become connectable and this method may be invoked to complete the connection sequence. If the connection operation failed then invoking this method will cause an appropriate &lt;a href=&quot;../../../../../java.base/java/io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbca2e0eedaf99a74c0ec68c4e06c16da62d429" translate="yes" xml:space="preserve">
          <source>A non-constant call site may be &lt;em&gt;relinked&lt;/em&gt; by changing its target. The new target must have the same &lt;a href=&quot;methodhandle#type()&quot;&gt;type&lt;/a&gt; as the previous target. Thus, though a call site can be relinked to a series of successive targets, it cannot change its type.</source>
          <target state="translated">A non-constant call site may be &lt;em&gt;relinked&lt;/em&gt; by changing its target. The new target must have the same &lt;a href=&quot;methodhandle#type()&quot;&gt;type&lt;/a&gt; as the previous target. Thus, though a call site can be relinked to a series of successive targets, it cannot change its type.</target>
        </trans-unit>
        <trans-unit id="bc767860690d8c24cb88c960e15a4973d9558857" translate="yes" xml:space="preserve">
          <source>A non-constant call site may be &lt;em&gt;relinked&lt;/em&gt; by changing its target. The new target must have the same &lt;a href=&quot;methodhandle#type--&quot;&gt;type&lt;/a&gt; as the previous target. Thus, though a call site can be relinked to a series of successive targets, it cannot change its type.</source>
          <target state="translated">非定数呼び出しサイトは、そのターゲットを変更することによって&lt;em&gt;再リンク&lt;/em&gt;できます。新しいターゲットは、前のターゲットと同じ&lt;a href=&quot;methodhandle#type--&quot;&gt;タイプで&lt;/a&gt;なければなりません。したがって、呼び出しサイトは一連の連続するターゲットに再リンクできますが、そのタイプを変更することはできません。</target>
        </trans-unit>
        <trans-unit id="ac6825da8adbf85d254ecf0727fccd99ee289ca9" translate="yes" xml:space="preserve">
          <source>A non-digit: &lt;code&gt;[^0-9]&lt;/code&gt;</source>
          <target state="translated">非数字： &lt;code&gt;[^0-9]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41ae39581d83b8afbf8fbfd5ce8d03c1bf3a0325" translate="yes" xml:space="preserve">
          <source>A non-digit: &lt;code&gt;[^\d]&lt;/code&gt;</source>
          <target state="translated">非数字： &lt;code&gt;[^\d]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb2d73400cb4d52c72018a1f210b1e270d329614" translate="yes" xml:space="preserve">
          <source>A non-empty and unmodifiable list of the fully qualified class names of the providers or provider factories</source>
          <target state="translated">プロバイダまたはプロバイダファクトリの完全修飾クラス名の空ではない、変更不可能なリスト。</target>
        </trans-unit>
        <trans-unit id="eabbd7a5ea7b535624280794aea261db5d7739a3" translate="yes" xml:space="preserve">
          <source>A non-escaped begin-quote which precedes a component must be matched by a non-escaped end-quote at the end of the component. A component thus quoted is referred to as a &lt;em&gt;quoted component&lt;/em&gt;. It is parsed by removing the being- and end- quotes, and by treating the intervening characters as ordinary characters unless one of the rules involving quoted components listed below applies.</source>
          <target state="translated">コンポーネントの前にあるエスケープされていない開始引用符は、コンポーネントの最後にあるエスケープされていない終了引用符と一致する必要があります。このように引用されたコンポーネントは、&lt;em&gt;引用されたコンポーネント&lt;/em&gt;と呼ば&lt;em&gt;れます&lt;/em&gt;。これは、being-とend-の引用符を削除し、次に挙げる引用されたコンポーネントに関する規則の1つが適用されない限り、介在する文字を通常の文字として扱うことによって解析されます。</target>
        </trans-unit>
        <trans-unit id="8576c5a3fc4ecf47e4a0d11fd6e03315dba7c325" translate="yes" xml:space="preserve">
          <source>A non-horizontal whitespace character: &lt;code&gt;[^\h]&lt;/code&gt;</source>
          <target state="translated">非水平空白文字： &lt;code&gt;[^\h]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d58c0f6e6b46f4925dee1a29c717b5cd776d604" translate="yes" xml:space="preserve">
          <source>A non-null &lt;code&gt;DirContext&lt;/code&gt; object for continuing the operation.</source>
          <target state="translated">操作を続行するためのnull以外の &lt;code&gt;DirContext&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="29be16e17e34f62bfdebf51ad0e122d23c628721" translate="yes" xml:space="preserve">
          <source>A non-null &lt;code&gt;LdapContext&lt;/code&gt; instance.</source>
          <target state="translated">null以外の &lt;code&gt;LdapContext&lt;/code&gt; インスタンス。</target>
        </trans-unit>
        <trans-unit id="a64ff7fe321a188f5c04bb6cdea604c663889254" translate="yes" xml:space="preserve">
          <source>A non-null Context object for continuing the operation.</source>
          <target state="translated">操作を継続するための非 null でないコンテキストオブジェクト。</target>
        </trans-unit>
        <trans-unit id="c1b55005a4d78a4f993dfd1b675db095e662505c" translate="yes" xml:space="preserve">
          <source>A non-null DirStateFactory.Result containing the object and attributes to be bound. If no state factory returns a non-null answer, the result will contain the object (&lt;code&gt;obj&lt;/code&gt;) itself with the original attributes.</source>
          <target state="translated">バインドされるオブジェクトと属性を含むnull以外のDirStateFactory.Result。状態ファクトリがnull以外の回答を返さない場合、結果には元の属性を持つオブジェクト（ &lt;code&gt;obj&lt;/code&gt; ）自体が含まれます。</target>
        </trans-unit>
        <trans-unit id="f705e9073287cf92793fe2b86b035e32a5be310b" translate="yes" xml:space="preserve">
          <source>A non-null array containing a IANA-registered SASL mechanism names.</source>
          <target state="translated">IANAに登録されたSASLメカニズム名を含む非NULL配列。</target>
        </trans-unit>
        <trans-unit id="a10e64472867840475c1ab4209b86ea2f64b0ad1" translate="yes" xml:space="preserve">
          <source>A non-null byte array containing the decoded bytes.</source>
          <target state="translated">デコードされたバイトを含む非ヌルバイト配列。</target>
        </trans-unit>
        <trans-unit id="256fd2e37df2c810fe693bf60b371e4fae6dc77b" translate="yes" xml:space="preserve">
          <source>A non-null byte array containing the encoded bytes.</source>
          <target state="translated">エンコードされたバイトを含む非ヌルバイト配列。</target>
        </trans-unit>
        <trans-unit id="f52a76285fcf3e42442c6aa14b1b84b86a9555fd" translate="yes" xml:space="preserve">
          <source>A non-null copy of the attribute.</source>
          <target state="translated">属性の非ヌルコピー。</target>
        </trans-unit>
        <trans-unit id="c350742e8171824a76f2140a837bb27a02d36bfd" translate="yes" xml:space="preserve">
          <source>A non-null copy of this attribute set.</source>
          <target state="translated">この属性セットの非ヌルコピー。</target>
        </trans-unit>
        <trans-unit id="2834f16d4197dd5885969de3f6e1c06d9fe27c3e" translate="yes" xml:space="preserve">
          <source>A non-null copy of this composite name.</source>
          <target state="translated">この複合名の非ヌルコピー。</target>
        </trans-unit>
        <trans-unit id="a28c689ba0a9cd3cad130669a4a31f8d6e1c8750" translate="yes" xml:space="preserve">
          <source>A non-null copy of this compound name.</source>
          <target state="translated">この複合名の非ヌルコピー。</target>
        </trans-unit>
        <trans-unit id="680d7ced3578bebfbe3b008f6d9acabd436bed7a" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of known factories for producing &lt;code&gt;SaslClient&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SaslClient&lt;/code&gt; を生成するための既知のファクトリのnull以外の列挙。</target>
        </trans-unit>
        <trans-unit id="0931c1e3c651dc8eb96435df64758f9fd1218389" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of known factories for producing &lt;code&gt;SaslServer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SaslServer&lt;/code&gt; を生成するための既知のファクトリのnull以外の列挙。</target>
        </trans-unit>
        <trans-unit id="0d1e9cc0831144a125442fbc119f960b9a802adc" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the attribute's values. Each element of the enumeration is a possibly null Object. The object's class is the class of the attribute value. The element is null if the attribute's value is null. If the attribute has zero values, an empty enumeration is returned.</source>
          <target state="translated">属性の値の非 null 列挙。列挙の各要素は、nullの可能性のあるObjectです。オブジェクトのクラスは属性値のクラスです。属性の値がnullの場合、要素はnullになります。属性の値がゼロの場合、空の列挙が返されます。</target>
        </trans-unit>
        <trans-unit id="7363de214e3d6c461c5bb6736dc9ee64e081aa40" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the attributes in this attribute set. Each element of the enumeration is of class &lt;code&gt;Attribute&lt;/code&gt;. If attribute set has zero attributes, an empty enumeration is returned.</source>
          <target state="translated">この属性セットの属性のnull以外の列挙。列挙の各要素は &lt;code&gt;Attribute&lt;/code&gt; クラスです。属性セットに属性がない場合、空の列挙が返されます。</target>
        </trans-unit>
        <trans-unit id="afe8669ca17e96be8a453b66dfc469a28ebe6a0d" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the attributes' ids in this attribute set. Each element of the enumeration is of class String. If attribute set has zero attributes, an empty enumeration is returned.</source>
          <target state="translated">この属性セットの属性のidの非ヌルの列挙。列挙の各要素は String クラスです。属性集合がゼロの属性を持つ場合、空の列挙が返されます。</target>
        </trans-unit>
        <trans-unit id="5f1cbc6763def1c45342a437b1a688c40133ab7a" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the components of this LDAP name. Each element of the enumeration is of class String.</source>
          <target state="translated">このLDAP名のコンポーネントの非ヌルの列挙。列挙の各要素は String クラスです。</target>
        </trans-unit>
        <trans-unit id="ebf81c0a1c1c74ed4f4d400b71c358f46266c099" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the components of this composite name. Each element of the enumeration is of class String.</source>
          <target state="translated">この複合名の構成要素の非 null 列挙。列挙の各要素は String クラスです。</target>
        </trans-unit>
        <trans-unit id="2340ea0fb4f1270c0668eb4bfc3dc9c9cf277715" translate="yes" xml:space="preserve">
          <source>A non-null enumeration of the components of this compound name. Each element of the enumeration is of class String.</source>
          <target state="translated">この複合名の構成要素の非 null 列挙。列挙の各要素は String クラスです。</target>
        </trans-unit>
        <trans-unit id="8bfa2f9be14187c9f14ce39d8d833d7f1175f5dc" translate="yes" xml:space="preserve">
          <source>A non-null initial context factory.</source>
          <target state="translated">非 null ではない初期コンテキストファクトリー。</target>
        </trans-unit>
        <trans-unit id="1e608221c5c5ea8c18e363465c0a5d025612f0d6" translate="yes" xml:space="preserve">
          <source>A non-null initial context object that implements the Context interface.</source>
          <target state="translated">Context インターフェースを実装した非 null の初期コンテキストオブジェクト。</target>
        </trans-unit>
        <trans-unit id="37954dbe9bab921b1deb6369decc49588a641fb7" translate="yes" xml:space="preserve">
          <source>A non-null initial context.</source>
          <target state="translated">非 null ではない初期コンテキスト。</target>
        </trans-unit>
        <trans-unit id="4730b465f4124443538b5e1770c8811274893fee" translate="yes" xml:space="preserve">
          <source>A non-null new instance of an ObjectFactory.</source>
          <target state="translated">ObjectFactory の非 null の新規インスタンス。</target>
        </trans-unit>
        <trans-unit id="c59410b08adf864ea948e598b03f608227631233" translate="yes" xml:space="preserve">
          <source>A non-null object.</source>
          <target state="translated">非 null オブジェクト。</target>
        </trans-unit>
        <trans-unit id="1f31f2d546f056d9729de73a8c0cafbb3add9b69" translate="yes" xml:space="preserve">
          <source>A non-null parsed form of the name using the naming convention of this parser.</source>
          <target state="translated">このパーサの命名規則を使用して、名前をヌルではない形でパースしたものです。</target>
        </trans-unit>
        <trans-unit id="365024c158fc56fbd24149913e4847bff4e1c7ff" translate="yes" xml:space="preserve">
          <source>A non-null reference to a TransformerHandler, that may be used as a ContentHandler for SAX parse events.</source>
          <target state="translated">SAX パース・イベントの ContentHandler として使用される可能性のある TransformerHandler への非 null 参照。</target>
        </trans-unit>
        <trans-unit id="a5e68f3dd8aaf605a6de850303de002c47d88269" translate="yes" xml:space="preserve">
          <source>A non-null string listing the contents of this attribute set.</source>
          <target state="translated">この属性セットの内容をリストアップした非ヌル文字列。</target>
        </trans-unit>
        <trans-unit id="caf496ddea9cd135d401dcca1f2054b18dc2ecf2" translate="yes" xml:space="preserve">
          <source>A non-null string representation of this composite name.</source>
          <target state="translated">この複合名の非ヌル文字列表現。</target>
        </trans-unit>
        <trans-unit id="15ce034bc6811eedfe9b677a32692e3f0462b11c" translate="yes" xml:space="preserve">
          <source>A non-null string representation of this compound name.</source>
          <target state="translated">この複合名の非ヌル文字列表現。</target>
        </trans-unit>
        <trans-unit id="08d28ae2c79b56daa709959f3d79d9d06c131b29" translate="yes" xml:space="preserve">
          <source>A non-null string representing the IANA-registered mechanism name.</source>
          <target state="translated">IANAに登録された機構名を表す非ヌル文字列。</target>
        </trans-unit>
        <trans-unit id="78220fa45f4e95f9c02602526ce9d9ddf420ba59" translate="yes" xml:space="preserve">
          <source>A non-static method consumes an extra argument for the object on which the method is called.</source>
          <target state="translated">非静的メソッドは、メソッドが呼び出されるオブジェクトの余分な引数を消費します。</target>
        </trans-unit>
        <trans-unit id="fcf1b695e4b7e1236a6443caec6fe36bb0b9f17e" translate="yes" xml:space="preserve">
          <source>A non-vertical whitespace character: &lt;code&gt;[^\v]&lt;/code&gt;</source>
          <target state="translated">垂直以外の空白文字： &lt;code&gt;[^\v]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7d3d3ab514a35cbfee9f849f4b37cf780906329" translate="yes" xml:space="preserve">
          <source>A non-virtual method handle to a specific virtual method implementation can also be created. These do not perform virtual lookup based on receiver type. Such a method handle simulates the effect of an &lt;code&gt;invokespecial&lt;/code&gt; instruction to the same method.</source>
          <target state="translated">特定の仮想メソッド実装への非仮想メソッドハンドルも作成できます。これらは、レシーバータイプに基づく仮想ルックアップを実行しません。このようなメソッドハンドルは、同じメソッドに対する &lt;code&gt;invokespecial&lt;/code&gt; 命令の効果をシミュレートします。</target>
        </trans-unit>
        <trans-unit id="885d1aed7578ee9fc33b80a7c8cbd5afdaa172b8" translate="yes" xml:space="preserve">
          <source>A non-virtual method handle to a specific virtual method implementation can also be created. These do not perform virtual lookup based on receiver type. Such a method handle simulates the effect of an &lt;code&gt;invokespecial&lt;/code&gt; instruction to the same method. A non-virtual method handle can also be created to simulate the effect of an &lt;code&gt;invokevirtual&lt;/code&gt; or &lt;code&gt;invokeinterface&lt;/code&gt; instruction on a private method (as applicable).</source>
          <target state="translated">A non-virtual method handle to a specific virtual method implementation can also be created. These do not perform virtual lookup based on receiver type. Such a method handle simulates the effect of an &lt;code&gt;invokespecial&lt;/code&gt; instruction to the same method. A non-virtual method handle can also be created to simulate the effect of an &lt;code&gt;invokevirtual&lt;/code&gt; or &lt;code&gt;invokeinterface&lt;/code&gt; instruction on a private method (as applicable).</target>
        </trans-unit>
        <trans-unit id="490d23f83a66805dcb270127052997bab3cbcef3" translate="yes" xml:space="preserve">
          <source>A non-whitespace character: &lt;code&gt;[^\s]&lt;/code&gt;</source>
          <target state="translated">空白以外の文字： &lt;code&gt;[^\s]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71faa00612f3246b69dff10b33a7b4956ad1ded0" translate="yes" xml:space="preserve">
          <source>A non-word boundary</source>
          <target state="translated">単語以外の境界</target>
        </trans-unit>
        <trans-unit id="5a3963613c4e2b85a2160538fa0a3ebf78d4cb53" translate="yes" xml:space="preserve">
          <source>A non-word character: &lt;code&gt;[^\w]&lt;/code&gt;</source>
          <target state="translated">非単語文字： &lt;code&gt;[^\w]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="874565c5d6a9c9f23443edff0392ef0747a48ce4" translate="yes" xml:space="preserve">
          <source>A non-zero winding rule for determining the interior of a path.</source>
          <target state="translated">パスの内部を決定するための非ゼロ巻線ルール。</target>
        </trans-unit>
        <trans-unit id="27473e4260d3933f83b4103875121ed003b122d3" translate="yes" xml:space="preserve">
          <source>A nonzero value gives a time as the number of milliseconds since January 1, 1970, GMT. The object is fetched only if it has been modified more recently than that time.</source>
          <target state="translated">ゼロ以外の値を指定すると、グリニッジ標準時の1970年1月1日からのミリ秒数として時間を指定します。オブジェクトは、その時間よりも最近に変更された場合にのみ取得されます。</target>
        </trans-unit>
        <trans-unit id="bd0bbc8c17597d3479d33d00df124b35420e9bee" translate="yes" xml:space="preserve">
          <source>A normalized path will begin with one or more &lt;code&gt;&quot;..&quot;&lt;/code&gt; segments if there were insufficient non-&lt;code&gt;&quot;..&quot;&lt;/code&gt; segments preceding them to allow their removal. A normalized path will begin with a &lt;code&gt;&quot;.&quot;&lt;/code&gt; segment if one was inserted by step 3 above. Otherwise, a normalized path will not contain any &lt;code&gt;&quot;.&quot;&lt;/code&gt; or &lt;code&gt;&quot;..&quot;&lt;/code&gt; segments.</source>
          <target state="translated">正規化されたパスは、その前に非 &lt;code&gt;&quot;..&quot;&lt;/code&gt; セグメントが不足していて削除できない場合、1つ以上の &lt;code&gt;&quot;..&quot;&lt;/code&gt; セグメントで始まります。正規化されたパスは &lt;code&gt;&quot;.&quot;&lt;/code&gt; 始まります。上記のステップ3で挿入された場合はセグメント。それ以外の場合、正規化されたパスには &lt;code&gt;&quot;.&quot;&lt;/code&gt; が含まれません。または &lt;code&gt;&quot;..&quot;&lt;/code&gt; セグメント。</target>
        </trans-unit>
        <trans-unit id="43ea19dae1574fbcbb421f7bdfe875197a55c7d2" translate="yes" xml:space="preserve">
          <source>A notification can be included in the result if its sequence number is no less than &lt;code&gt;clientSequenceNumber&lt;/code&gt; and this client has registered at least one listener for the MBean generating the notification, with a filter that accepts the notification. Each listener that is interested in the notification is identified by an Integer ID that was returned by &lt;a href=&quot;#addNotificationListeners(javax.management.ObjectName%5B%5D,java.rmi.MarshalledObject%5B%5D,javax.security.auth.Subject%5B%5D)&quot;&gt;&lt;code&gt;addNotificationListeners(ObjectName[],
 MarshalledObject[], Subject[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A notification can be included in the result if its sequence number is no less than &lt;code&gt;clientSequenceNumber&lt;/code&gt; and this client has registered at least one listener for the MBean generating the notification, with a filter that accepts the notification. Each listener that is interested in the notification is identified by an Integer ID that was returned by &lt;a href=&quot;#addNotificationListeners(javax.management.ObjectName%5B%5D,java.rmi.MarshalledObject%5B%5D,javax.security.auth.Subject%5B%5D)&quot;&gt; &lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c3a10557374749dd3612c700569d8d4fbfff6337" translate="yes" xml:space="preserve">
          <source>A notification can be included in the result if its sequence number is no less than &lt;code&gt;clientSequenceNumber&lt;/code&gt; and this client has registered at least one listener for the MBean generating the notification, with a filter that accepts the notification. Each listener that is interested in the notification is identified by an Integer ID that was returned by &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt;&lt;code&gt;RMIConnection.addNotificationListeners(ObjectName[],
 MarshalledObject[], Subject[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">シーケンス番号が &lt;code&gt;clientSequenceNumber&lt;/code&gt; 以上で、このクライアントが通知を生成するMBeanの少なくとも1つのリスナーを、通知を受け入れるフィルターで登録している場合、通知に結果を含めることができます。通知に関係する各リスナーは、&lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt; &lt;code&gt;RMIConnection.addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt;によって返された整数IDによって識別されます。</target>
        </trans-unit>
        <trans-unit id="6f81cc48a1476843cb589c0a6edfffa3c877abc8" translate="yes" xml:space="preserve">
          <source>A notification can be included in the result if its sequence number is no less than &lt;code&gt;clientSequenceNumber&lt;/code&gt; and this client has registered at least one listener for the MBean generating the notification, with a filter that accepts the notification. Each listener that is interested in the notification is identified by an Integer ID that was returned by &lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt;&lt;code&gt;addNotificationListeners(ObjectName[],
 MarshalledObject[], Subject[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">シーケンス番号が &lt;code&gt;clientSequenceNumber&lt;/code&gt; 以上で、このクライアントが通知を生成するMBeanの少なくとも1つのリスナーを、通知を受け入れるフィルターで登録している場合、通知に結果を含めることができます。通知に関係する各リスナーは、&lt;a href=&quot;rmiconnection#addNotificationListeners-javax.management.ObjectName:A-java.rmi.MarshalledObject:A-javax.security.auth.Subject:A-&quot;&gt; &lt;code&gt;addNotificationListeners(ObjectName[], MarshalledObject[], Subject[])&lt;/code&gt; &lt;/a&gt;によって返された整数IDによって識別されます。</target>
        </trans-unit>
        <trans-unit id="eb2316273427642a12c2dde2fb02858156d5200b" translate="yes" xml:space="preserve">
          <source>A notification emitted by an MBean will be forwarded by the MBeanServer to the listener. If the source of the notification is a reference to an MBean object, the MBean server will replace it by that MBean's ObjectName. Otherwise the source is unchanged.</source>
          <target state="translated">MBean から発せられた通知は、MBeanServer によってリスナーに転送されます。通知のソースが MBean オブジェクトへの参照である場合、MBean サーバはそれを MBean の ObjectName で置き換えます。それ以外の場合、ソースは変更されません。</target>
        </trans-unit>
        <trans-unit id="1e3d44553c12c0a3daa6e9ba421da4d078fe84ca" translate="yes" xml:space="preserve">
          <source>A notification from the SCTP stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbf4137e454e66ee8d25e83c4c38921d7f02cf7" translate="yes" xml:space="preserve">
          <source>A notification of a change in the Relation Service.</source>
          <target state="translated">リレーションサービスの変更通知。</target>
        </trans-unit>
        <trans-unit id="74b1df702f3bc581785499dd02ae0b69bee54ca0" translate="yes" xml:space="preserve">
          <source>A notification of a change in the Relation Service. A RelationNotification notification is sent when a relation is created via the Relation Service, or an MBean is added as a relation in the Relation Service, or a role is updated in a relation, or a relation is removed from the Relation Service.</source>
          <target state="translated">Relation Service の変更の通知。RelationNotification通知は、Relation Service経由でリレーションが作成されたとき、または、Relation ServiceでMBeanがリレーションとして追加されたとき、または、リレーションでロールが更新されたとき、または、リレーションがRelation Serviceから削除されたときに送信されます。</target>
        </trans-unit>
        <trans-unit id="0c1558f34233517f554f73489411d5286d199edd" translate="yes" xml:space="preserve">
          <source>A number can be formatted in the compact forms with two different styles, &lt;a href=&quot;numberformat.style#SHORT&quot;&gt;&lt;code&gt;SHORT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numberformat.style#LONG&quot;&gt;&lt;code&gt;LONG&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;numberformat#getCompactNumberInstance(java.util.Locale,java.text.NumberFormat.Style)&quot;&gt;&lt;code&gt;NumberFormat.getCompactNumberInstance(Locale, Style)&lt;/code&gt;&lt;/a&gt; for formatting and parsing a number in &lt;a href=&quot;numberformat.style#SHORT&quot;&gt;&lt;code&gt;SHORT&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;numberformat.style#LONG&quot;&gt;&lt;code&gt;LONG&lt;/code&gt;&lt;/a&gt; compact form, where the given &lt;code&gt;Style&lt;/code&gt; parameter requests the desired format. A &lt;a href=&quot;numberformat.style#SHORT&quot;&gt;&lt;code&gt;SHORT&lt;/code&gt;&lt;/a&gt; style compact number instance in the &lt;a href=&quot;../util/locale#US&quot;&gt;&lt;code&gt;US locale&lt;/code&gt;&lt;/a&gt; formats &lt;code&gt;10000&lt;/code&gt; as &lt;code&gt;&quot;10K&quot;&lt;/code&gt;. However, a &lt;a href=&quot;numberformat.style#LONG&quot;&gt;&lt;code&gt;LONG&lt;/code&gt;&lt;/a&gt; style instance in same locale formats &lt;code&gt;10000&lt;/code&gt; as &lt;code&gt;&quot;10 thousand&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22785490df6714e09892f6f374dc243111e67d32" translate="yes" xml:space="preserve">
          <source>A number format style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8184adc49569973f8d66fd10bb3be15b129fd5e" translate="yes" xml:space="preserve">
          <source>A number greater than or equal to zero -- indicates that the command was processed successfully and is an update count giving the number of rows in the database that were affected by the command's execution</source>
          <target state="translated">ゼロ以上の数値は、コマンドが正常に処理されたことを示し、コマンドの実行によって影響を受けたデータベース内の行数を示す更新回数です。</target>
        </trans-unit>
        <trans-unit id="42830d8bbd4ec7a36ac1600fbdb97fe7829814c8" translate="yes" xml:space="preserve">
          <source>A number of &lt;code&gt;ShortMessage&lt;/code&gt; methods have integer parameters by which you specify a MIDI status or data byte. If you know the numeric value, you can express it directly. For system common and system real-time messages, you can often use the corresponding fields of &lt;code&gt;ShortMessage&lt;/code&gt;, such as &lt;a href=&quot;#SYSTEM_RESET&quot;&gt;&lt;code&gt;SYSTEM_RESET&lt;/code&gt;&lt;/a&gt;. For channel messages, the upper four bits of the status byte are specified by a command value and the lower four bits are specified by a MIDI channel number. To convert incoming MIDI data bytes that are in the form of Java's signed bytes, you can use the &lt;a href=&quot;midimessage#integersVsBytes&quot;&gt;conversion code&lt;/a&gt; given in the &lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt; class description.</source>
          <target state="translated">A number of &lt;code&gt;ShortMessage&lt;/code&gt; methods have integer parameters by which you specify a MIDI status or data byte. If you know the numeric value, you can express it directly. For system common and system real-time messages, you can often use the corresponding fields of &lt;code&gt;ShortMessage&lt;/code&gt; , such as &lt;a href=&quot;#SYSTEM_RESET&quot;&gt; &lt;code&gt;SYSTEM_RESET&lt;/code&gt; &lt;/a&gt;. For channel messages, the upper four bits of the status byte are specified by a command value and the lower four bits are specified by a MIDI channel number. To convert incoming MIDI data bytes that are in the form of Java's signed bytes, you can use the &lt;a href=&quot;midimessage#integersVsBytes&quot;&gt;conversion code&lt;/a&gt; given in the &lt;a href=&quot;midimessage&quot;&gt; &lt;code&gt;MidiMessage&lt;/code&gt; &lt;/a&gt; class description.</target>
        </trans-unit>
        <trans-unit id="43f0f3abe1ddd97507c9365666da42e829d29184" translate="yes" xml:space="preserve">
          <source>A number of &lt;code&gt;ShortMessage&lt;/code&gt; methods have integer parameters by which you specify a MIDI status or data byte. If you know the numeric value, you can express it directly. For system common and system real-time messages, you can often use the corresponding fields of &lt;code&gt;ShortMessage&lt;/code&gt;, such as &lt;a href=&quot;shortmessage#SYSTEM_RESET&quot;&gt;&lt;code&gt;SYSTEM_RESET&lt;/code&gt;&lt;/a&gt;. For channel messages, the upper four bits of the status byte are specified by a command value and the lower four bits are specified by a MIDI channel number. To convert incoming MIDI data bytes that are in the form of Java's signed bytes, you can use the &lt;a href=&quot;midimessage#integersVsBytes&quot;&gt;conversion code&lt;/a&gt; given in the &lt;code&gt;&lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class description.</source>
          <target state="translated">多くの &lt;code&gt;ShortMessage&lt;/code&gt; メソッドには、MIDIステータスまたはデータバイトを指定する整数パラメーターがあります。数値がわかれば直接表現できます。システム共通メッセージとシステムリアルタイムメッセージの場合、多くの場合、&lt;a href=&quot;shortmessage#SYSTEM_RESET&quot;&gt; &lt;code&gt;SYSTEM_RESET&lt;/code&gt; &lt;/a&gt;などの &lt;code&gt;ShortMessage&lt;/code&gt; の対応するフィールドを使用できます。チャネルメッセージの場合、ステータスバイトの上位4ビットはコマンド値で指定され、下位4ビットはMIDIチャネル番号で指定されます。Javaの署名付きバイトの形式の着信MIDIデータバイトを変換するには、 &lt;code&gt;&lt;a href=&quot;midimessage&quot;&gt;&lt;code&gt;MidiMessage&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; クラスの説明で提供されている&lt;a href=&quot;midimessage#integersVsBytes&quot;&gt;変換コードを&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="88ef82d7a1acf5551302d1f421428c6310badc2a" translate="yes" xml:space="preserve">
          <source>A number of classes in the java.net package do provide for a much higher level of abstraction and allow for easy access to resources on the network. The classes are:</source>
          <target state="translated">java.netパッケージ内のいくつかのクラスは、はるかに高い抽象化レベルを提供し、ネットワーク上のリソースへの容易なアクセスを可能にします。クラスは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="a7de7e6ccbddf2e2c4cb0823e652873980328bfe" translate="yes" xml:space="preserve">
          <source>A package exported by a module, may be qualified or unqualified.</source>
          <target state="translated">モジュールによってエクスポートされたパッケージは、修飾されている場合と、修飾されていない場合があります。</target>
        </trans-unit>
        <trans-unit id="26a5315e56bbc0b1a41c272ad0788f786e5e99a8" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API containing the plug-in interfaces for readers, writers, transcoders, and streams, and a runtime registry.</source>
          <target state="translated">Java Image I/O API のパッケージで、リーダ、ライタ、トランスコーダ、ストリーム用のプラグインインタフェースとランタイムレジストリが含まれています。</target>
        </trans-unit>
        <trans-unit id="3d1474ec8064f4048b349e060bd17d481f91abb7" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API dealing with low-level I/O from files and streams.</source>
          <target state="translated">ファイルやストリームからの低レベルI/Oを扱うJava Image I/O APIのパッケージ。</target>
        </trans-unit>
        <trans-unit id="fcd25d02098be8fe912d200eda69fa86ba44c8a4" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API dealing with reading and writing metadata.</source>
          <target state="translated">メタデータの読み書きを扱うJava Image I/O APIのパッケージ。</target>
        </trans-unit>
        <trans-unit id="1e50c13e656800213a2b38221ce5d3c67a302d08" translate="yes" xml:space="preserve">
          <source>A package of the Java Image I/O API dealing with synchronous notification of events during the reading and writing of images.</source>
          <target state="translated">画像の読み書き中のイベントの同期通知を扱うJava Image I/O APIのパッケージです。</target>
        </trans-unit>
        <trans-unit id="d42aa5ab351834ccda11ab2bfcd667dbe42adf2b" translate="yes" xml:space="preserve">
          <source>A package opened by a module, may be qualified or unqualified.</source>
          <target state="translated">モジュールによって開封されたパッケージは、修飾されていても、修飾されていなくてもよい。</target>
        </trans-unit>
        <trans-unit id="75aceaead5894b1564163cdca6dffc56df070c4d" translate="yes" xml:space="preserve">
          <source>A package.</source>
          <target state="translated">パッケージです。</target>
        </trans-unit>
        <trans-unit id="4a8f716a9e97e115398b05095b7ce1a98aec7a10" translate="yes" xml:space="preserve">
          <source>A padding layout constant with size of eight bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d23232ec5dcfda5c4a81696ce1896998df414de" translate="yes" xml:space="preserve">
          <source>A padding layout constant with size of four bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cfa2449c39a87a5d9236ebe6f7467828195605" translate="yes" xml:space="preserve">
          <source>A padding layout constant with size of one byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f3ea51b603377270c457d2e14db3f8b8b474dc" translate="yes" xml:space="preserve">
          <source>A padding layout constant with size of two bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c290b5fad84f553582133ce9e6b636bf6feff60" translate="yes" xml:space="preserve">
          <source>A painting delegate.</source>
          <target state="translated">絵画の代議士。</target>
        </trans-unit>
        <trans-unit id="21af00cd67fa2e76c463e609ff882f8a21333f75" translate="yes" xml:space="preserve">
          <source>A painting delegate. The Painter interface defines exactly one method, &lt;code&gt;paint&lt;/code&gt;. It is used in situations where the developer can change the painting routine of a component without having to resort to subclassing the component. It is also generically useful when doing any form of painting delegation.</source>
          <target state="translated">A painting delegate. The Painter interface defines exactly one method, &lt;code&gt;paint&lt;/code&gt; . It is used in situations where the developer can change the painting routine of a component without having to resort to subclassing the component. It is also generically useful when doing any form of painting delegation.</target>
        </trans-unit>
        <trans-unit id="9c561483e1216a136545d701b9a0c6a84ebc7b7e" translate="yes" xml:space="preserve">
          <source>A pair of channels that implements a unidirectional pipe.</source>
          <target state="translated">一方向パイプを実装したチャンネルのペア。</target>
        </trans-unit>
        <trans-unit id="161fbf388971c0361a60ca23423fec42d8bf9028" translate="yes" xml:space="preserve">
          <source>A pane that allows the user to navigate through and select the contents of a directory.</source>
          <target state="translated">ユーザーがディレクトリの内容をナビゲートしたり、選択したりできるようにするペインです。</target>
        </trans-unit>
        <trans-unit id="9e71a15ef7f8252ea4263584f6871d18af429f54" translate="yes" xml:space="preserve">
          <source>A pane that allows the user to navigate through and select the contents of a directory. May be used by a file chooser.</source>
          <target state="translated">ディレクトリの内容をナビゲートしたり選択したりするためのペイン。ファイルセレクタで使用することができる。</target>
        </trans-unit>
        <trans-unit id="4c18b24461f8ae6e47402d8230e4c8763f210c6d" translate="yes" xml:space="preserve">
          <source>A pane that is guaranteed to be painted on top of all panes beneath it.</source>
          <target state="translated">その下のすべてのペインの上に塗装されることが保証されているペイン。</target>
        </trans-unit>
        <trans-unit id="f67f98001b0f165dfe2a20beea6cabadb769f87c" translate="yes" xml:space="preserve">
          <source>A pane that supports internal frames and iconified versions of those internal frames.</source>
          <target state="translated">内部フレームとその内部フレームのアイコン化されたバージョンをサポートするペイン。</target>
        </trans-unit>
        <trans-unit id="7bf40754fba93eba6040ef587e633d26738db0e1" translate="yes" xml:space="preserve">
          <source>A panel that starts in row 0 and ends in row 1. The panel has a baseline-resize behavior of &lt;code&gt;CONSTANT_DESCENT&lt;/code&gt; and has an anchor of &lt;code&gt;BASELINE&lt;/code&gt;. As the baseline-resize behavior is &lt;code&gt;CONSTANT_DESCENT&lt;/code&gt; the prevailing row for the panel is row 1.</source>
          <target state="translated">A panel that starts in row 0 and ends in row 1. The panel has a baseline-resize behavior of &lt;code&gt;CONSTANT_DESCENT&lt;/code&gt; and has an anchor of &lt;code&gt;BASELINE&lt;/code&gt; . As the baseline-resize behavior is &lt;code&gt;CONSTANT_DESCENT&lt;/code&gt; the prevailing row for the panel is row 1.</target>
        </trans-unit>
        <trans-unit id="040482871b1b9f2a69ca18b4cced684c121757c7" translate="yes" xml:space="preserve">
          <source>A paragraph-separator character (&lt;code&gt;'\u2029'&lt;/code&gt;).</source>
          <target state="translated">A paragraph-separator character ( &lt;code&gt;'\u2029'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="394c92f3379723469af1d8636c4eaf9565783905" translate="yes" xml:space="preserve">
          <source>A paragraph-separator character (&lt;code&gt;'\u2029&lt;/code&gt;).</source>
          <target state="translated">段落区切り文字（ &lt;code&gt;'\u2029&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="79368f8d53ce66ea9334edbe3b72f58f6e497a54" translate="yes" xml:space="preserve">
          <source>A parameter of a method or constructor.</source>
          <target state="translated">メソッドまたはコンストラクタのパラメータ。</target>
        </trans-unit>
        <trans-unit id="58b36826d2d44021fe02b6a2abe751fe9a54079c" translate="yes" xml:space="preserve">
          <source>A parameter of an exception handler.</source>
          <target state="translated">例外ハンドラのパラメータ。</target>
        </trans-unit>
        <trans-unit id="3585600fff66d07c254c460c9422920ddb647135" translate="yes" xml:space="preserve">
          <source>A parameter that contains a URI pointing to data intended for a PolicySpi or ConfigurationSpi implementation.</source>
          <target state="translated">PolicySpi または ConfigurationSpi の実装を目的としたデータを指す URI を含むパラメータ。</target>
        </trans-unit>
        <trans-unit id="d7213d466d72a10b28057b3ef7fb4aba4a50d958" translate="yes" xml:space="preserve">
          <source>A parameter that has been set with setParameter.</source>
          <target state="translated">setParameterで設定したパラメータ。</target>
        </trans-unit>
        <trans-unit id="d63cf425fcd35e454243a434211b0e6d1a9b20cd" translate="yes" xml:space="preserve">
          <source>A parameter's name is &quot;&quot;, or contains an illegal character</source>
          <target state="translated">パラメータ名が&quot;&quot;であるか、不正な文字が含まれています。</target>
        </trans-unit>
        <trans-unit id="a6e2c142abe93ec8b1941b8de767b406102f08b5" translate="yes" xml:space="preserve">
          <source>A parameterized type is created the first time it is needed by a reflective method, as specified in this package. When a parameterized type p is created, the generic type declaration that p instantiates is resolved, and all type arguments of p are created recursively. See &lt;a href=&quot;typevariable&quot;&gt;&lt;code&gt;TypeVariable&lt;/code&gt;&lt;/a&gt; for details on the creation process for type variables. Repeated creation of a parameterized type has no effect.</source>
          <target state="translated">このパッケージで指定されているように、パラメーター化された型は、リフレクトメソッドで初めて必要になったときに作成されます。パラメータ化された型pが作成されると、pがインスタンス化するジェネリック型宣言が解決され、pのすべての型引数が再帰的に作成されます。参照してください。&lt;a href=&quot;typevariable&quot;&gt; &lt;code&gt;TypeVariable&lt;/code&gt; の&lt;/a&gt;型変数の作成プロセスの詳細については。パラメータ化された型を繰り返し作成しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="207968ed3b02650fd3f0f90772b619beb100c1b9" translate="yes" xml:space="preserve">
          <source>A parameters object for X509KeyManagers that encapsulates a List of KeyStore.Builders.</source>
          <target state="translated">KeyStore.Buildersのリストをカプセル化したX509KeyManagers用のパラメータオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="b990f88485fa5da93f0c0e3138f89eab0ed06e86" translate="yes" xml:space="preserve">
          <source>A parser must be able to work with any &lt;a href=&quot;../validation/schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; implementation. However, parsers and schemas are allowed to use implementation-specific custom mechanisms as long as they yield the result described in the specification.</source>
          <target state="translated">A parser must be able to work with any &lt;a href=&quot;../validation/schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt; implementation. However, parsers and schemas are allowed to use implementation-specific custom mechanisms as long as they yield the result described in the specification.</target>
        </trans-unit>
        <trans-unit id="725b605d7b96e538c4444b6cc65519d2a9564a59" translate="yes" xml:space="preserve">
          <source>A partially complete temporal is used to allow the chronology and zone to be queried. In general, only the chronology will be needed. Querying items other than the zone or chronology is undefined and must not be relied on. The behavior of other methods such as &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;getLong&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt; and &lt;code&gt;isSupported&lt;/code&gt; is unpredictable and the results undefined.</source>
          <target state="translated">部分的に完全な時相を使用して、年表とゾーンを照会できます。一般的に、必要なのは年表だけです。ゾーンまたは年表以外のアイテムのクエリは定義されておらず、依存することはできません。 &lt;code&gt;get&lt;/code&gt; 、 &lt;code&gt;getLong&lt;/code&gt; 、 &lt;code&gt;range&lt;/code&gt; 、 &lt;code&gt;isSupported&lt;/code&gt; などの他のメソッドの動作は予測できず、結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="231fb54b3d3de5027a6b56f9c783ef40b879816a" translate="yes" xml:space="preserve">
          <source>A particular Java platform may support zero or more hierarchically-organized file systems. Each file system has a &lt;code&gt;root&lt;/code&gt; directory from which all other files in that file system can be reached. Windows platforms, for example, have a root directory for each active drive; UNIX platforms have a single root directory, namely &lt;code&gt;&quot;/&quot;&lt;/code&gt;. The set of available filesystem roots is affected by various system-level operations such as the insertion or ejection of removable media and the disconnecting or unmounting of physical or virtual disk drives.</source>
          <target state="translated">特定のJavaプラットフォームは、0個以上の階層的に編成されたファイルシステムをサポートする場合があります。各ファイルシステムには、そのファイルシステム内の他のすべてのファイルにアクセスできる &lt;code&gt;root&lt;/code&gt; ディレクトリがあります。たとえば、Windowsプラットフォームには、アクティブなドライブごとにルートディレクトリがあります。UNIXプラットフォームには、単一のルートディレクトリ、つまり &lt;code&gt;&quot;/&quot;&lt;/code&gt; があります。使用可能なファイルシステムルートのセットは、リムーバブルメディアの挿入または取り出し、物理ディスクドライブまたは仮想ディスクドライブの切断またはアンマウントなど、さまざまなシステムレベルの操作の影響を受けます。</target>
        </trans-unit>
        <trans-unit id="fd8b964ffc07e97c0b3abadf486dd40ac2b3354b" translate="yes" xml:space="preserve">
          <source>A particular program might use more than one &lt;code&gt;GraphicsDevice&lt;/code&gt; in a &lt;code&gt;GraphicsEnvironment&lt;/code&gt;. This method returns a &lt;code&gt;String&lt;/code&gt; identifying a particular &lt;code&gt;GraphicsDevice&lt;/code&gt; in the local &lt;code&gt;GraphicsEnvironment&lt;/code&gt;. Although there is no public method to set this &lt;code&gt;String&lt;/code&gt;, a programmer can use the &lt;code&gt;String&lt;/code&gt; for debugging purposes. Vendors of the Java Runtime Environment can format the return value of the &lt;code&gt;String&lt;/code&gt;. To determine how to interpret the value of the &lt;code&gt;String&lt;/code&gt;, contact the vendor of your Java Runtime. To find out who the vendor is, from your program, call the &lt;a href=&quot;../../../java.base/java/lang/system#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;getProperty&lt;/code&gt;&lt;/a&gt; method of the System class with &quot;java.vendor&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4bb33f76e6351bd10c04bd56de264c4d2ad32c2" translate="yes" xml:space="preserve">
          <source>A particular program might use more than one &lt;code&gt;GraphicsDevice&lt;/code&gt; in a &lt;code&gt;GraphicsEnvironment&lt;/code&gt;. This method returns a &lt;code&gt;String&lt;/code&gt; identifying a particular &lt;code&gt;GraphicsDevice&lt;/code&gt; in the local &lt;code&gt;GraphicsEnvironment&lt;/code&gt;. Although there is no public method to set this &lt;code&gt;String&lt;/code&gt;, a programmer can use the &lt;code&gt;String&lt;/code&gt; for debugging purposes. Vendors of the Java&amp;trade; Runtime Environment can format the return value of the &lt;code&gt;String&lt;/code&gt;. To determine how to interpret the value of the &lt;code&gt;String&lt;/code&gt;, contact the vendor of your Java Runtime. To find out who the vendor is, from your program, call the &lt;a href=&quot;../../../java.base/java/lang/system#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;getProperty&lt;/code&gt;&lt;/a&gt; method of the System class with &quot;java.vendor&quot;.</source>
          <target state="translated">A particular program might use more than one &lt;code&gt;GraphicsDevice&lt;/code&gt; in a &lt;code&gt;GraphicsEnvironment&lt;/code&gt; . This method returns a &lt;code&gt;String&lt;/code&gt; identifying a particular &lt;code&gt;GraphicsDevice&lt;/code&gt; in the local &lt;code&gt;GraphicsEnvironment&lt;/code&gt; . Although there is no public method to set this &lt;code&gt;String&lt;/code&gt; , a programmer can use the &lt;code&gt;String&lt;/code&gt; for debugging purposes. Vendors of the Java&amp;trade; Runtime Environment can format the return value of the &lt;code&gt;String&lt;/code&gt; . To determine how to interpret the value of the &lt;code&gt;String&lt;/code&gt; , contact the vendor of your Java Runtime. To find out who the vendor is, from your program, call the &lt;a href=&quot;../../../java.base/java/lang/system#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;getProperty&lt;/code&gt; &lt;/a&gt; method of the System class with &quot;java.vendor&quot;.</target>
        </trans-unit>
        <trans-unit id="71a0ac78cd9ceaa2a9fc0b0cb9d6019ef6ea7cf1" translate="yes" xml:space="preserve">
          <source>A password may be given to unlock the keystore (e.g. the keystore resides on a hardware token device), or to check the integrity of the keystore data. If a password is not given for integrity checking, then integrity checking is not performed.</source>
          <target state="translated">パスワードは、鍵ストアのロックを解除するため(鍵ストアがハードウェア・トークン・デバイス上に存在する場合など)、または鍵ストア・データの完全性をチェックするために与えられることがある。完全性チェックのためにパスワードが与えられない場合、完全性チェックは実行されない。</target>
        </trans-unit>
        <trans-unit id="b6843fa2f0f5e030f8851019b802cd205df0f080" translate="yes" xml:space="preserve">
          <source>A password-based implementation of &lt;code&gt;ProtectionParameter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ProtectionParameter&lt;/code&gt; のパスワードベースの実装。</target>
        </trans-unit>
        <trans-unit id="908320b79b8166bd80f9cebf314b01f668d00b9a" translate="yes" xml:space="preserve">
          <source>A path matcher that may be used to match paths against the pattern</source>
          <target state="translated">パターンに対してパスをマッチさせるためのパスマッチツール。</target>
        </trans-unit>
        <trans-unit id="10a69809d6425afdae673593f997192bd8466d1c" translate="yes" xml:space="preserve">
          <source>A path of tree nodes, typically used to represent the sequence of ancestor nodes of a tree node up to the top level CompilationUnitTree node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ba1d969b58a40f006261d68b7d78af05a0386d" translate="yes" xml:space="preserve">
          <source>A path of tree nodes, typically used to represent the sequence of ancestor nodes of a tree node up to the top level DocCommentTree node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85fde803e63c0cf6393894b140cc32d5687a2ce" translate="yes" xml:space="preserve">
          <source>A path to a &lt;em&gt;packaged module&lt;/em&gt;.</source>
          <target state="translated">A path to a &lt;em&gt;packaged module&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="2b0819bf63dd9fa7b1fd54499fec7e783701f6f3" translate="yes" xml:space="preserve">
          <source>A path to a directory of modules.</source>
          <target state="translated">モジュールのディレクトリへのパス。</target>
        </trans-unit>
        <trans-unit id="08c72e1f94e0e16813faf52803c0753413ad7077" translate="yes" xml:space="preserve">
          <source>A path to the &lt;em&gt;top-level&lt;/em&gt; directory of an &lt;em&gt;exploded module&lt;/em&gt;.</source>
          <target state="translated">A path to the &lt;em&gt;top-level&lt;/em&gt; directory of an &lt;em&gt;exploded module&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="495e2a31b97782811793ec1239e0bd3fee0e7177" translate="yes" xml:space="preserve">
          <source>A pathname consisting of a single &quot;*&quot; indicates all the files in the current directory, while a pathname consisting of a single &quot;-&quot; indicates all the files in the current directory and (recursively) all files and subdirectories contained in the current directory.</source>
          <target state="translated">単一の &quot;*&quot;からなるパス名は、カレントディレクトリ内のすべてのファイルを示し、単一の&quot;-&quot;からなるパス名は、カレントディレクトリ内のすべてのファイルと、カレントディレクトリに含まれるすべてのファイルとサブディレクトリを(再帰的に)示します。</target>
        </trans-unit>
        <trans-unit id="c54c539bec42d509854d232101160918495a25ef" translate="yes" xml:space="preserve">
          <source>A pathname consisting of the special token &quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot; matches &lt;b&gt;any&lt;/b&gt; file.</source>
          <target state="translated">A pathname consisting of the special token &quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot; matches &lt;b&gt;any&lt;/b&gt; file.</target>
        </trans-unit>
        <trans-unit id="3ef23e9c497a7b25e957caaacc361e940805dd1a" translate="yes" xml:space="preserve">
          <source>A pathname containing an empty string represents an empty path.</source>
          <target state="translated">空の文字列を含むパス名は、空のパスを表します。</target>
        </trans-unit>
        <trans-unit id="46eef1d82fd391592dc0d8c3e69cce9707760548" translate="yes" xml:space="preserve">
          <source>A pathname that ends in &quot;/*&quot; (where &quot;/&quot; is the file separator character, &lt;code&gt;File.separatorChar&lt;/code&gt;) indicates all the files and directories contained in that directory. A pathname that ends with &quot;/-&quot; indicates (recursively) all files and subdirectories contained in that directory. The special pathname &quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot; matches any file.</source>
          <target state="translated">「/ *」で終わるパス名（「/」はファイル区切り文字 &lt;code&gt;File.separatorChar&lt;/code&gt; です）は、そのディレクトリに含まれるすべてのファイルとディレクトリを示します。 「/-」で終わるパス名は、そのディレクトリに含まれるすべてのファイルとサブディレクトリを（再帰的に）示します。特別なパス名 &quot;&amp;lt;&amp;lt; ALL FILES &amp;gt;&amp;gt;&quot;はすべてのファイルに一致します。</target>
        </trans-unit>
        <trans-unit id="572f17ed8ee918ab0ba5d0eea653f440ba45e9f6" translate="yes" xml:space="preserve">
          <source>A pathname, whether abstract or in string form, may be either &lt;em&gt;absolute&lt;/em&gt; or &lt;em&gt;relative&lt;/em&gt;. An absolute pathname is complete in that no other information is required in order to locate the file that it denotes. A relative pathname, in contrast, must be interpreted in terms of information taken from some other pathname. By default the classes in the &lt;code&gt;java.io&lt;/code&gt; package always resolve relative pathnames against the current user directory. This directory is named by the system property &lt;code&gt;user.dir&lt;/code&gt;, and is typically the directory in which the Java virtual machine was invoked.</source>
          <target state="translated">パス名は、抽象形式でも文字列形式でも、&lt;em&gt;絶対&lt;/em&gt;パスでも&lt;em&gt;相対&lt;/em&gt;パスでもかまいません。絶対パス名は完全であるため、それが示すファイルを見つけるために他の情報は必要ありません。対照的に、相対パス名は、他のパス名から取得した情報に関して解釈する必要があります。デフォルトでは、 &lt;code&gt;java.io&lt;/code&gt; パッケージのクラスは常に現在のユーザーディレクトリに対する相対パス名を解決します。このディレクトリは、システムプロパティ &lt;code&gt;user.dir&lt;/code&gt; によって名前が付けられ、通常、Java仮想マシンが呼び出されたディレクトリです。</target>
        </trans-unit>
        <trans-unit id="885061eeba719408d460722e0592847141de0a81" translate="yes" xml:space="preserve">
          <source>A pattern consists of a string that includes the following special components that will be replaced at runtime:</source>
          <target state="translated">パターンは、実行時に置き換えられる以下の特別なコンポーネントを含む文字列で構成されています。</target>
        </trans-unit>
        <trans-unit id="23e634c9f52d19b23f4b0e9f966b570e032a1f4f" translate="yes" xml:space="preserve">
          <source>A peer will signal its intent to close by sending its own closure handshake message. After this message has been received and processed by the local &lt;code&gt;SSLEngine&lt;/code&gt;'s &lt;code&gt;unwrap()&lt;/code&gt; call, the application can detect the close by calling &lt;code&gt;unwrap()&lt;/code&gt; and looking for a &lt;code&gt;SSLEngineResult&lt;/code&gt; with status &quot;CLOSED&quot;, or if &lt;a href=&quot;#isInboundDone()&quot;&gt;&lt;code&gt;isInboundDone()&lt;/code&gt;&lt;/a&gt; returns true. If for some reason the peer closes the communication link without sending the proper SSL/TLS/DTLS closure message, the application can detect the end-of-stream and can signal the engine via &lt;a href=&quot;#closeInbound()&quot;&gt;&lt;code&gt;closeInbound()&lt;/code&gt;&lt;/a&gt; that there will no more inbound messages to process. Some applications might choose to require orderly shutdown messages from a peer, in which case they can check that the closure was generated by a handshake message and not by an end-of-stream condition.</source>
          <target state="translated">A peer will signal its intent to close by sending its own closure handshake message. After this message has been received and processed by the local &lt;code&gt;SSLEngine&lt;/code&gt; 's &lt;code&gt;unwrap()&lt;/code&gt; call, the application can detect the close by calling &lt;code&gt;unwrap()&lt;/code&gt; and looking for a &lt;code&gt;SSLEngineResult&lt;/code&gt; with status &quot;CLOSED&quot;, or if &lt;a href=&quot;#isInboundDone()&quot;&gt; &lt;code&gt;isInboundDone()&lt;/code&gt; &lt;/a&gt; returns true. If for some reason the peer closes the communication link without sending the proper SSL/TLS/DTLS closure message, the application can detect the end-of-stream and can signal the engine via &lt;a href=&quot;#closeInbound()&quot;&gt; &lt;code&gt;closeInbound()&lt;/code&gt; &lt;/a&gt; that there will no more inbound messages to process. Some applications might choose to require orderly shutdown messages from a peer, in which case they can check that the closure was generated by a handshake message and not by an end-of-stream condition.</target>
        </trans-unit>
        <trans-unit id="877d121efe20f3c4d49a6cefb7ce0cdf6c5af580" translate="yes" xml:space="preserve">
          <source>A peer will signal its intent to close by sending its own closure handshake message. After this message has been received and processed by the local &lt;code&gt;SSLEngine&lt;/code&gt;'s &lt;code&gt;unwrap()&lt;/code&gt; call, the application can detect the close by calling &lt;code&gt;unwrap()&lt;/code&gt; and looking for a &lt;code&gt;SSLEngineResult&lt;/code&gt; with status &quot;CLOSED&quot;, or if &lt;a href=&quot;sslengine#isInboundDone--&quot;&gt;&lt;code&gt;isInboundDone()&lt;/code&gt;&lt;/a&gt; returns true. If for some reason the peer closes the communication link without sending the proper SSL/TLS closure message, the application can detect the end-of-stream and can signal the engine via &lt;a href=&quot;sslengine#closeInbound--&quot;&gt;&lt;code&gt;closeInbound()&lt;/code&gt;&lt;/a&gt; that there will no more inbound messages to process. Some applications might choose to require orderly shutdown messages from a peer, in which case they can check that the closure was generated by a handshake message and not by an end-of-stream condition.</source>
          <target state="translated">ピアは、独自のクロージャハンドシェイクメッセージを送信することで、閉じる意図を通知します。このメッセージは、ローカルで受信され、処理された後 &lt;code&gt;SSLEngine&lt;/code&gt; の &lt;code&gt;unwrap()&lt;/code&gt; 呼び出し、アプリケーションが呼び出すことでクローズを検出することができます &lt;code&gt;unwrap()&lt;/code&gt; と探し &lt;code&gt;SSLEngineResult&lt;/code&gt; の状態で『CLOSED』、または場合&lt;a href=&quot;sslengine#isInboundDone--&quot;&gt; &lt;code&gt;isInboundDone()&lt;/code&gt; は&lt;/a&gt; trueを返します。何らかの理由でピアが適切なSSL / TLSクロージャメッセージを送信せずに通信リンクを閉じた場合、アプリケーションはストリームの終わりを検出し、&lt;a href=&quot;sslengine#closeInbound--&quot;&gt; &lt;code&gt;closeInbound()&lt;/code&gt; を&lt;/a&gt;介してエンジンに信号を送ることができます。処理するインバウンドメッセージがなくなること。一部のアプリケーションは、ピアからの秩序だったシャットダウンメッセージを要求することを選択する場合があります。その場合、ストリームの終わりの状態ではなく、ハンドシェイクメッセージによってクロージャが生成されたことを確認できます。</target>
        </trans-unit>
        <trans-unit id="e58fce6d080ff09ddf93b4ff27940663ef5768af" translate="yes" xml:space="preserve">
          <source>A period may also be &lt;code&gt;&quot;everyChunk&quot;&lt;/code&gt; to specify that it occurs at least once for every recording file. The number of events that are emitted depends on how many times the file rotations occur when data is recorded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74d302862e125b69bc267a370b3b88ac734b569" translate="yes" xml:space="preserve">
          <source>A permission for Smart Card operations.</source>
          <target state="translated">スマートカード操作のための許可です。</target>
        </trans-unit>
        <trans-unit id="707e5bbc35496e227fb6de4e5c43b03f60c75eec" translate="yes" xml:space="preserve">
          <source>A permission for Smart Card operations. A CardPermission consists of the name of the card terminal the permission applies to and a set of actions that are valid for that terminal.</source>
          <target state="translated">スマートカード操作のためのパーミッション。CardPermissionは、パーミッションが適用されるカード端末の名前と、その端末で有効なアクションのセットで構成されます。</target>
        </trans-unit>
        <trans-unit id="969bb0afd4cc1ecb553f172a9b57b2ef0c780de7" translate="yes" xml:space="preserve">
          <source>A permission that includes the &lt;code&gt;queryMBeans&lt;/code&gt; action is considered to include &lt;code&gt;queryNames&lt;/code&gt; as well.</source>
          <target state="translated">含ま許可 &lt;code&gt;queryMBeans&lt;/code&gt; アクションを含むと考えられる &lt;code&gt;queryNames&lt;/code&gt; をうまくとして。</target>
        </trans-unit>
        <trans-unit id="ec560e192b242915e4dfe0257d2eeeae0a4b7bcb" translate="yes" xml:space="preserve">
          <source>A persistence delegate is then looked up by the name composed of the fully qualified name of the given type and the &quot;PersistenceDelegate&quot; postfix. For example, a persistence delegate for the &lt;code&gt;Bean&lt;/code&gt; class should be named &lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; and located in the same package.</source>
          <target state="translated">A persistence delegate is then looked up by the name composed of the fully qualified name of the given type and the &quot;PersistenceDelegate&quot; postfix. For example, a persistence delegate for the &lt;code&gt;Bean&lt;/code&gt; class should be named &lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; and located in the same package.</target>
        </trans-unit>
        <trans-unit id="4a747ab8a03910b849e698f017fbb3fba8116a99" translate="yes" xml:space="preserve">
          <source>A persistence delegate is then looked up by the name composed of the the fully qualified name of the given type and the &quot;PersistenceDelegate&quot; postfix. For example, a persistence delegate for the &lt;code&gt;Bean&lt;/code&gt; class should be named &lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; and located in the same package.</source>
          <target state="translated">次に、永続デリゲートは、指定されたタイプの完全修飾名と「PersistenceDelegate」接尾辞で構成される名前によって検索されます。たとえば、 &lt;code&gt;Bean&lt;/code&gt; クラスの永続デリゲートは &lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; という名前で、同じパッケージに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="06a66f678af1d95ca12f674489cbec8275ebe7ad" translate="yes" xml:space="preserve">
          <source>A persistence delegate, may take control of all aspects of the persistence of an object including:</source>
          <target state="translated">永続デリゲートは、以下のようなオブジェクトの永続性のすべての側面を制御することができます。</target>
        </trans-unit>
        <trans-unit id="c10812bf1787199ce6eca01fbb20d15dd5f8ea49" translate="yes" xml:space="preserve">
          <source>A physical duration could be of infinite length. For practicality, the duration is stored with constraints similar to &lt;a href=&quot;instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt;. The duration uses nanosecond resolution with a maximum value of the seconds that can be held in a &lt;code&gt;long&lt;/code&gt;. This is greater than the current estimated age of the universe.</source>
          <target state="translated">物理的な期間は無限の長さである可能性があります。実用性のために、期間は&lt;a href=&quot;instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; &lt;/a&gt;と同様の制約付きで保存されます。保持することができる秒の最大値を有する期間用途のナノ秒の分解能 &lt;code&gt;long&lt;/code&gt; 。これは、現在の宇宙の推定年齢よりも大きいです。</target>
        </trans-unit>
        <trans-unit id="36b1ca833d9b775798b2b79389f6705127a184c0" translate="yes" xml:space="preserve">
          <source>A physical structure, that represents the flow. The children of this view are where the pieces of of the logical views are placed to create the flow.</source>
          <target state="translated">フローを表す物理構造体。このビューの子は、フローを作成するために論理ビューのピースが配置されています。</target>
        </trans-unit>
        <trans-unit id="474cd8ad0927115718f8e3c65460d787fc470758" translate="yes" xml:space="preserve">
          <source>A pipe consists of a pair of channels: A writable &lt;a href=&quot;pipe.sinkchannel&quot;&gt;&lt;code&gt;sink&lt;/code&gt;&lt;/a&gt; channel and a readable &lt;a href=&quot;pipe.sourcechannel&quot;&gt;&lt;code&gt;source&lt;/code&gt;&lt;/a&gt; channel. Once some bytes are written to the sink channel they can be read from source channel in exactlyAthe order in which they were written.</source>
          <target state="translated">パイプは、書き込み可能な&lt;a href=&quot;pipe.sinkchannel&quot;&gt; &lt;code&gt;sink&lt;/code&gt; &lt;/a&gt;チャネルと読み取り可能な&lt;a href=&quot;pipe.sourcechannel&quot;&gt; &lt;code&gt;source&lt;/code&gt; &lt;/a&gt;チャネルの2つのチャネルで構成されます。いくつかのバイトがシンクチャネルに書き込まれると、それらが書き込まれた順序で正確にソースチャネルから読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="bdca98e95b727ac559547251115701579a131ca6" translate="yes" xml:space="preserve">
          <source>A pipe consists of a pair of channels: A writable &lt;a href=&quot;pipe.sinkchannel&quot;&gt;&lt;code&gt;sink&lt;/code&gt;&lt;/a&gt; channel and a readable &lt;a href=&quot;pipe.sourcechannel&quot;&gt;&lt;code&gt;source&lt;/code&gt;&lt;/a&gt; channel. Once some bytes are written to the sink channel they can be read from the source channel in exactly the order in which they were written.</source>
          <target state="translated">A pipe consists of a pair of channels: A writable &lt;a href=&quot;pipe.sinkchannel&quot;&gt; &lt;code&gt;sink&lt;/code&gt; &lt;/a&gt; channel and a readable &lt;a href=&quot;pipe.sourcechannel&quot;&gt; &lt;code&gt;source&lt;/code&gt; &lt;/a&gt; channel. Once some bytes are written to the sink channel they can be read from the source channel in exactly the order in which they were written.</target>
        </trans-unit>
        <trans-unit id="92f903dde552d28725344ada00e056a459750979" translate="yes" xml:space="preserve">
          <source>A piped input stream should be connected to a piped output stream; the piped input stream then provides whatever data bytes are written to the piped output stream.</source>
          <target state="translated">パイプライン入力ストリームは、パイプライン出力ストリームに接続されている必要があります。</target>
        </trans-unit>
        <trans-unit id="22e3b0ccd9bb00ef03434cdb0908f8ff33f745cf" translate="yes" xml:space="preserve">
          <source>A piped input stream should be connected to a piped output stream; the piped input stream then provides whatever data bytes are written to the piped output stream. Typically, data is read from a &lt;code&gt;PipedInputStream&lt;/code&gt; object by one thread and data is written to the corresponding &lt;code&gt;PipedOutputStream&lt;/code&gt; by some other thread. Attempting to use both objects from a single thread is not recommended, as it may deadlock the thread. The piped input stream contains a buffer, decoupling read operations from write operations, within limits. A pipe is said to be &lt;a id=&quot;BROKEN&quot;&gt; &lt;i&gt;broken&lt;/i&gt; &lt;/a&gt; if a thread that was providing data bytes to the connected piped output stream is no longer alive.</source>
          <target state="translated">A piped input stream should be connected to a piped output stream; the piped input stream then provides whatever data bytes are written to the piped output stream. Typically, data is read from a &lt;code&gt;PipedInputStream&lt;/code&gt; object by one thread and data is written to the corresponding &lt;code&gt;PipedOutputStream&lt;/code&gt; by some other thread. Attempting to use both objects from a single thread is not recommended, as it may deadlock the thread. The piped input stream contains a buffer, decoupling read operations from write operations, within limits. A pipe is said to be &lt;a id=&quot;BROKEN&quot;&gt; &lt;i&gt;broken&lt;/i&gt; &lt;/a&gt; if a thread that was providing data bytes to the connected piped output stream is no longer alive.</target>
        </trans-unit>
        <trans-unit id="3a7a8e42632b42753977c34a60b9299f0d427714" translate="yes" xml:space="preserve">
          <source>A piped input stream should be connected to a piped output stream; the piped input stream then provides whatever data bytes are written to the piped output stream. Typically, data is read from a &lt;code&gt;PipedInputStream&lt;/code&gt; object by one thread and data is written to the corresponding &lt;code&gt;PipedOutputStream&lt;/code&gt; by some other thread. Attempting to use both objects from a single thread is not recommended, as it may deadlock the thread. The piped input stream contains a buffer, decoupling read operations from write operations, within limits. A pipe is said to be &lt;a name=&quot;BROKEN&quot;&gt; &lt;i&gt;broken&lt;/i&gt; &lt;/a&gt; if a thread that was providing data bytes to the connected piped output stream is no longer alive.</source>
          <target state="translated">パイプで連結された入力ストリームは、パイプで連結された出力ストリームに接続する必要があります。パイプで連結された入力ストリームは、パイプで連結された出力ストリームに書き込まれるデータバイトを提供します。通常、データは1つのスレッドによって &lt;code&gt;PipedInputStream&lt;/code&gt; オブジェクトから読み取られ、他のスレッドによってデータが対応する &lt;code&gt;PipedOutputStream&lt;/code&gt; に書き込まれます。スレッドをデッドロックする可能性があるため、単一のスレッドから両方のオブジェクトを使用することはお勧めしません。パイプで連結された入力ストリームにはバッファーが含まれ、制限内で読み取り操作と書き込み操作を分離します。接続されているパイプで連結された出力ストリームにデータバイトを提供していたスレッドが&lt;a name=&quot;BROKEN&quot;&gt;&lt;i&gt;無効&lt;/i&gt;&lt;/a&gt;になっ&lt;i&gt;た&lt;/i&gt;場合、パイプは&lt;i&gt;破損して&lt;/i&gt;いると言います。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="cd38b92f37a0ada0b98eaec7dc581aa518272443" translate="yes" xml:space="preserve">
          <source>A piped output stream can be connected to a piped input stream to create a communications pipe.</source>
          <target state="translated">パイプラインされた出力ストリームを、パイプラインされた入力ストリームに接続して、通信パイプを作成することができます。</target>
        </trans-unit>
        <trans-unit id="023fba44ac2abe34fd2b0a51cbb3d847d4f8ef75" translate="yes" xml:space="preserve">
          <source>A piped output stream can be connected to a piped input stream to create a communications pipe. The piped output stream is the sending end of the pipe. Typically, data is written to a &lt;code&gt;PipedOutputStream&lt;/code&gt; object by one thread and data is read from the connected &lt;code&gt;PipedInputStream&lt;/code&gt; by some other thread. Attempting to use both objects from a single thread is not recommended as it may deadlock the thread. The pipe is said to be &lt;a id=&quot;BROKEN&quot;&gt; &lt;i&gt;broken&lt;/i&gt; &lt;/a&gt; if a thread that was reading data bytes from the connected piped input stream is no longer alive.</source>
          <target state="translated">A piped output stream can be connected to a piped input stream to create a communications pipe. The piped output stream is the sending end of the pipe. Typically, data is written to a &lt;code&gt;PipedOutputStream&lt;/code&gt; object by one thread and data is read from the connected &lt;code&gt;PipedInputStream&lt;/code&gt; by some other thread. Attempting to use both objects from a single thread is not recommended as it may deadlock the thread. The pipe is said to be &lt;a id=&quot;BROKEN&quot;&gt; &lt;i&gt;broken&lt;/i&gt; &lt;/a&gt; if a thread that was reading data bytes from the connected piped input stream is no longer alive.</target>
        </trans-unit>
        <trans-unit id="34df202afec2bc7805e61d26ed892f959fd0e25d" translate="yes" xml:space="preserve">
          <source>A piped output stream can be connected to a piped input stream to create a communications pipe. The piped output stream is the sending end of the pipe. Typically, data is written to a &lt;code&gt;PipedOutputStream&lt;/code&gt; object by one thread and data is read from the connected &lt;code&gt;PipedInputStream&lt;/code&gt; by some other thread. Attempting to use both objects from a single thread is not recommended as it may deadlock the thread. The pipe is said to be &lt;a name=&quot;BROKEN&quot;&gt; &lt;i&gt;broken&lt;/i&gt; &lt;/a&gt; if a thread that was reading data bytes from the connected piped input stream is no longer alive.</source>
          <target state="translated">パイプで連結された出力ストリームをパイプで連結された入力ストリームに接続して、通信パイプを作成できます。パイプで連結された出力ストリームは、パイプの送信側です。通常、データは1つのスレッドによって &lt;code&gt;PipedOutputStream&lt;/code&gt; オブジェクトに書き込まれ、データは他のスレッドによって接続された &lt;code&gt;PipedInputStream&lt;/code&gt; から読み取られます。スレッドをデッドロックする可能性があるため、単一のスレッドから両方のオブジェクトを使用することはお勧めしません。接続されているパイプで連結された入力ストリームからデータバイトを読み取っていたスレッドが生きていない場合、パイプは&lt;a name=&quot;BROKEN&quot;&gt;&lt;i&gt;壊れて&lt;/i&gt;&lt;/a&gt;いると言われます。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="798d1201127d1ac81dc17055fb3b4b7964b2be68" translate="yes" xml:space="preserve">
          <source>A pixel value represented as an int.</source>
          <target state="translated">int で表されるピクセル値.</target>
        </trans-unit>
        <trans-unit id="ef8f66f756ed31cd7f35ff8fc4b2aca2a5dba0b2" translate="yes" xml:space="preserve">
          <source>A place holder for any comments that the code generator may want to include in the generated code.</source>
          <target state="translated">コードジェネレーターが生成されたコードに含めたいコメントのプレースホルダー。</target>
        </trans-unit>
        <trans-unit id="8b850fa45adaf916f79135c2f78e1f9c565e0fde" translate="yes" xml:space="preserve">
          <source>A place within a document view that represents where things can be inserted into the document model.</source>
          <target state="translated">ドキュメントモデルに挿入できる場所を表すドキュメントビュー内の場所。</target>
        </trans-unit>
        <trans-unit id="6a6bedfdfa6a3153774b70b35c4fe9236c060f81" translate="yes" xml:space="preserve">
          <source>A place within a document view that represents where things can be inserted into the document model. A caret has a position in the document referred to as a dot. The dot is where the caret is currently located in the model. There is a second position maintained by the caret that represents the other end of a selection called mark. If there is no selection the dot and mark will be equal. If a selection exists, the two values will be different.</source>
          <target state="translated">ドキュメントビューの中で、ドキュメントモデルに物を挿入できる場所を表します。キャレットには、ドットと呼ばれるドキュメント内の位置があります。ドットは、キャレットがモデル内で現在位置している場所です。カレットが保持する第二の位置には、マークと呼ばれる選択範囲の反対側の位置があります。選択範囲がなければドットとマークは等しくなります。選択範囲がある場合は 2 つの値は異なります。</target>
        </trans-unit>
        <trans-unit id="de87852618eefb009cf6c0cba1e55255498cb3a9" translate="yes" xml:space="preserve">
          <source>A plain document that maintains no character attributes.</source>
          <target state="translated">文字属性を持たないプレーンな文書。</target>
        </trans-unit>
        <trans-unit id="1ed962f7594d9b0aaf2fd92836eb4f4276e2ed1f" translate="yes" xml:space="preserve">
          <source>A plain document that maintains no character attributes. The default element structure for this document is a map of the lines in the text. The Element returned by getDefaultRootElement is a map of the lines, and each child element represents a line. This model does not maintain any character level attributes, but each line can be tagged with an arbitrary set of attributes. Line to offset, and offset to line translations can be quickly performed using the default root element. The structure information of the DocumentEvent's fired by edits will indicate the line structure changes.</source>
          <target state="translated">文字属性を持たないプレーンな文書。この文書のデフォルトの要素構造は、テキストの行のマップです。getDefaultRootElement が返す Element は行のマップであり、各子要素は行を表します。このモデルは文字レベルの属性を保持しませんが、各行は任意の属性セットでタグ付けすることができます。行から行へのオフセット、オフセットから行への変換は、デフォルトのルート要素を使用して迅速に行うことができます。編集によって発生したDocumentEventの構造情報は、行構造の変更を示します。</target>
        </trans-unit>
        <trans-unit id="aac89ff6b50355b8985ee22ca69704cd3ffe07e5" translate="yes" xml:space="preserve">
          <source>A platform MXBean is a</source>
          <target state="translated">プラットフォームMXBeanは</target>
        </trans-unit>
        <trans-unit id="ae7baf93b58a02927f0c5ac6c93762b9d4eb05d5" translate="yes" xml:space="preserve">
          <source>A platform managed object is a &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt; for monitoring and managing a component in the Java platform.</source>
          <target state="translated">プラットフォーム管理オブジェクトは、Javaプラットフォームのコンポーネントを監視および管理するための&lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="0373a84e67ed7b2fbc747fa93eba7c97a79aeaa4" translate="yes" xml:space="preserve">
          <source>A platform managed object is a &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt; for monitoring and managing a component in the Java platform. Each platform managed object has a unique &lt;a href=&quot;managementfactory#MXBean&quot;&gt;object name&lt;/a&gt; for the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;platform MBeanServer&lt;/a&gt; access. All platform MXBeans will implement this interface.</source>
          <target state="translated">A platform managed object is a &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt; for monitoring and managing a component in the Java platform. Each platform managed object has a unique &lt;a href=&quot;managementfactory#MXBean&quot;&gt;object name&lt;/a&gt; for the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;platform MBeanServer&lt;/a&gt; access. All platform MXBeans will implement this interface.</target>
        </trans-unit>
        <trans-unit id="8ac220ef46f8e70af4b6538f40d0a40b8ec9c7a3" translate="yes" xml:space="preserve">
          <source>A platform managed object is a &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt; for monitoring and managing a component in the Java platform. Each platform managed object has a unique &lt;a href=&quot;managementfactory#MXBean&quot;&gt;object name&lt;/a&gt; for the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;platform MBeanServer&lt;/a&gt; access. All platform MXBeans will implement this interface.</source>
          <target state="translated">プラットフォーム管理オブジェクトは、Javaプラットフォームのコンポーネントを監視および管理するための&lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;JMX MXBean&lt;/a&gt;です。各プラットフォーム管理オブジェクトには、&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;プラットフォームMBeanServer&lt;/a&gt;アクセス用の一意の&lt;a href=&quot;managementfactory#MXBean&quot;&gt;オブジェクト名&lt;/a&gt;があります。すべてのプラットフォームMXBeanがこのインターフェースを実装します。</target>
        </trans-unit>
        <trans-unit id="3f604f47af08bbf1b066c304748b624ec493c21d" translate="yes" xml:space="preserve">
          <source>A plug-in for a specific image format may define a subclass of this class, and return objects of that class from the &lt;code&gt;getDefaultWriteParam&lt;/code&gt; method of its &lt;code&gt;ImageWriter&lt;/code&gt; implementation. For example, the built-in JPEG writer plug-in will return instances of &lt;code&gt;javax.imageio.plugins.jpeg.JPEGImageWriteParam&lt;/code&gt;.</source>
          <target state="translated">特定の画像フォーマットのプラグインは、このクラスのサブクラスを定義し、 &lt;code&gt;ImageWriter&lt;/code&gt; 実装の &lt;code&gt;getDefaultWriteParam&lt;/code&gt; メソッドからそのクラスのオブジェクトを返す場合があります。たとえば、組み込みのJPEGライタープラグインは、 &lt;code&gt;javax.imageio.plugins.jpeg.JPEGImageWriteParam&lt;/code&gt; のインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="6a2003419f5141b20190f0b518c601c38a095c5e" translate="yes" xml:space="preserve">
          <source>A plugin can schedule its own GUI update and this method will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea60af700e77459ce247da0751be37d919023ae2" translate="yes" xml:space="preserve">
          <source>A point representing a location in &lt;code&gt;(x,y)&lt;/code&gt; coordinate space, specified in integer precision.</source>
          <target state="translated">A point representing a location in &lt;code&gt;(x,y)&lt;/code&gt; coordinate space, specified in integer precision.</target>
        </trans-unit>
        <trans-unit id="8605ee167db4cce3e1d0ecff548e20b2c0ad50f7" translate="yes" xml:space="preserve">
          <source>A point within the executing code of the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4ac2a6597d63a8f3129646d77075298ca1b25a" translate="yes" xml:space="preserve">
          <source>A point within the executing code of the target VM. Locations are used to identify the current position of a suspended thread (analogous to an instruction pointer or program counter register in native programs). They are also used to identify the position at which to set a breakpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165a4c2f23d394915829e76b0aa46e76c935e20d" translate="yes" xml:space="preserve">
          <source>A pool of strings, initially empty, is maintained privately by the class &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">文字列のプールは、最初は空でしたが、クラス &lt;code&gt;String&lt;/code&gt; によってプライベートに維持されます。</target>
        </trans-unit>
        <trans-unit id="a673c7501ae563e1de03f56a1e3b7dfdbfdd639d" translate="yes" xml:space="preserve">
          <source>A pool of styles and their associated resources.</source>
          <target state="translated">スタイルとそれに関連するリソースのプール。</target>
        </trans-unit>
        <trans-unit id="30edefc000c3a873b47d52219ee9e65bd567eeb2" translate="yes" xml:space="preserve">
          <source>A pool of styles and their associated resources. This class determines the lifetime of a group of resources by being a container that holds caches for various resources such as font and color that get reused by the various style definitions. This can be shared by multiple documents if desired to maximize the sharing of related resources.</source>
          <target state="translated">スタイルとその関連リソースのプール。このクラスは、様々なスタイル定義によって再利用されるフォントや色などの様々なリソースのキャッシュを保持するコンテナであることによって、リソースのグループの寿命を決定します。これは、関連するリソースの共有を最大化したい場合には、複数のドキュメントで共有することができます。</target>
        </trans-unit>
        <trans-unit id="128dd75570ce997ed9a753681d7a778b041f2309" translate="yes" xml:space="preserve">
          <source>A pool that is no longer referenced in a program &lt;em&gt;AND&lt;/em&gt; has no remaining threads may be reclaimed (garbage collected) without being explicitly shutdown. You can configure a pool to allow all unused threads to eventually die by setting appropriate keep-alive times, using a lower bound of zero core threads and/or setting &lt;a href=&quot;#allowCoreThreadTimeOut(boolean)&quot;&gt;&lt;code&gt;allowCoreThreadTimeOut(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">もはやプログラムで参照されていないプール&lt;em&gt;AND&lt;/em&gt;残存スレッドが明示的にシャットダウンされることなく（ガベージコレクション）再利用することができるしています。ゼロコアスレッドの下限を使用するか、&lt;a href=&quot;#allowCoreThreadTimeOut(boolean)&quot;&gt; &lt;code&gt;allowCoreThreadTimeOut(boolean)&lt;/code&gt; を&lt;/a&gt;設定することにより、適切なキープアライブ時間を設定することにより、すべての未使用スレッドが最終的に停止できるようにプールを構成できます。</target>
        </trans-unit>
        <trans-unit id="b2b519b0588855194323e10504c01bce562add21" translate="yes" xml:space="preserve">
          <source>A pool that is no longer referenced in a program &lt;em&gt;AND&lt;/em&gt; has no remaining threads will be &lt;code&gt;shutdown&lt;/code&gt; automatically. If you would like to ensure that unreferenced pools are reclaimed even if users forget to call &lt;a href=&quot;threadpoolexecutor#shutdown--&quot;&gt;&lt;code&gt;shutdown()&lt;/code&gt;&lt;/a&gt;, then you must arrange that unused threads eventually die, by setting appropriate keep-alive times, using a lower bound of zero core threads and/or setting &lt;a href=&quot;threadpoolexecutor#allowCoreThreadTimeOut-boolean-&quot;&gt;&lt;code&gt;allowCoreThreadTimeOut(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">もはやプログラムで参照されているプール&lt;em&gt;と&lt;/em&gt;何の残りのスレッドができなくなります持って &lt;code&gt;shutdown&lt;/code&gt; 自動的に。ユーザーが&lt;a href=&quot;threadpoolexecutor#shutdown--&quot;&gt; &lt;code&gt;shutdown()&lt;/code&gt; の&lt;/a&gt;呼び出しを忘れた場合でも、参照されていないプールが再利用されるようにするには、適切なキープアライブ時間を設定し、ゼロコアスレッドの下限を使用して、未使用のスレッドが最終的に停止するようにする必要があります&lt;a href=&quot;threadpoolexecutor#allowCoreThreadTimeOut-boolean-&quot;&gt; &lt;code&gt;allowCoreThreadTimeOut(boolean)&lt;/code&gt; を&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="4c3454b978da77d5d554c43d542e8ad957b271b7" translate="yes" xml:space="preserve">
          <source>A popup menu listener</source>
          <target state="translated">ポップアップメニューのリスナー</target>
        </trans-unit>
        <trans-unit id="edcd72f355b260a04334396db494a19dc24f4e95" translate="yes" xml:space="preserve">
          <source>A popup menu-specific separator.</source>
          <target state="translated">ポップアップメニュー固有の区切り文字。</target>
        </trans-unit>
        <trans-unit id="00aa3f03debf8302deefd1c78bcc91a3181918cc" translate="yes" xml:space="preserve">
          <source>A port number of &lt;code&gt;-1&lt;/code&gt; indicates that the calling method is attempting to determine the IP address of the specified host name.</source>
          <target state="translated">ポート番号 &lt;code&gt;-1&lt;/code&gt; は、呼び出しメソッドが指定されたホスト名のIPアドレスを判別しようとしていることを示します。</target>
        </trans-unit>
        <trans-unit id="f80ddc74f8958b7e436c32feec5a751ce8a69e52" translate="yes" xml:space="preserve">
          <source>A port number of &lt;code&gt;0&lt;/code&gt; creates a socket on any free port.</source>
          <target state="translated">ポート番号 &lt;code&gt;0&lt;/code&gt; は、空きポートにソケットを作成します。</target>
        </trans-unit>
        <trans-unit id="35615ca4598d9eecf42ce2db729cf259c04879fb" translate="yes" xml:space="preserve">
          <source>A position is a zero-based character offset from the beginning of a file. Negative values (except &lt;a href=&quot;#NOPOS&quot;&gt;&lt;code&gt;NOPOS&lt;/code&gt;&lt;/a&gt;) are not valid positions.</source>
          <target state="translated">位置は、ファイルの先頭からのゼロベースの文字オフセットです。負の値（&lt;a href=&quot;#NOPOS&quot;&gt; &lt;code&gt;NOPOS&lt;/code&gt; &lt;/a&gt;を除く）は有効な位置ではありません。</target>
        </trans-unit>
        <trans-unit id="e8b0b7e20e8e674dbd959f23bbf61c572c82ceaa" translate="yes" xml:space="preserve">
          <source>A position is a zero-based character offset from the beginning of a file. Negative values (except &lt;a href=&quot;diagnostic#NOPOS&quot;&gt;&lt;code&gt;NOPOS&lt;/code&gt;&lt;/a&gt;) are not valid positions.</source>
          <target state="translated">位置は、ファイルの先頭からのゼロから始まる文字オフセットです。負の値（&lt;a href=&quot;diagnostic#NOPOS&quot;&gt; &lt;code&gt;NOPOS&lt;/code&gt; &lt;/a&gt;を除く）は有効な位置ではありません。</target>
        </trans-unit>
        <trans-unit id="c89c7c9a5603a80f43f8c7d681dfea5607b9b851" translate="yes" xml:space="preserve">
          <source>A positive &lt;code&gt;long&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6aaa4c5ca50c97ca7f61bd39daf4cf6ca61d72d" translate="yes" xml:space="preserve">
          <source>A positive value indicates that the cookie will expire after that many seconds have passed. Note that the value is the</source>
          <target state="translated">正の値は、その何秒も経過した後にクッキーが期限切れになることを示します。値が</target>
        </trans-unit>
        <trans-unit id="2df7b31d1a8d5aec6270f4dce3668da500b1f018" translate="yes" xml:space="preserve">
          <source>A possible return value for the method &lt;code&gt;DatabaseMetaData.getSQLStateType&lt;/code&gt; which is used to indicate whether the value returned by the method &lt;code&gt;SQLException.getSQLState&lt;/code&gt; is an SQL99 SQLSTATE value.</source>
          <target state="translated">メソッド &lt;code&gt;SQLException.getSQLState&lt;/code&gt; によって返される値がSQL99SQLSTATE値であるかどうかを示すために使用される、メソッド &lt;code&gt;DatabaseMetaData.getSQLStateType&lt;/code&gt; の可能な戻り値。</target>
        </trans-unit>
        <trans-unit id="5b4a1e5fe8b922de16c143764a6574c4e625c57e" translate="yes" xml:space="preserve">
          <source>A possible return value for the method &lt;code&gt;DatabaseMetaData.getSQLStateType&lt;/code&gt; which is used to indicate whether the value returned by the method &lt;code&gt;SQLException.getSQLState&lt;/code&gt; is an SQLSTATE value.</source>
          <target state="translated">メソッド &lt;code&gt;SQLException.getSQLState&lt;/code&gt; によって返される値がSQLSTATE値であるかどうかを示すために使用される、メソッド &lt;code&gt;DatabaseMetaData.getSQLStateType&lt;/code&gt; の可能な戻り値。</target>
        </trans-unit>
        <trans-unit id="452198fc0aecb7e1278ac929cf6833f35066c0ea" translate="yes" xml:space="preserve">
          <source>A possible return value for the method &lt;code&gt;DatabaseMetaData.getSQLStateType&lt;/code&gt; which is used to indicate whether the value returned by the method &lt;code&gt;SQLException.getSQLState&lt;/code&gt; is an X/Open (now know as Open Group) SQL CLI SQLSTATE value.</source>
          <target state="translated">メソッド &lt;code&gt;SQLException.getSQLState&lt;/code&gt; によって返される値がX / Open（現在はOpen Groupとして知られている）SQL CLISQLSTATE値であるかどうかを示すために使用されるメソッド &lt;code&gt;DatabaseMetaData.getSQLStateType&lt;/code&gt; の可能な戻り値。</target>
        </trans-unit>
        <trans-unit id="7a56fc162b549294ef4b0c0faa6c19c6284ad87e" translate="yes" xml:space="preserve">
          <source>A possible value for column &lt;code&gt;FUNCTION_TYPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getFunctions&lt;/code&gt;.</source>
          <target state="translated">カラムの可能な値 &lt;code&gt;FUNCTION_TYPE&lt;/code&gt; で &lt;code&gt;ResultSet&lt;/code&gt; メソッドによって返されるオブジェクト &lt;code&gt;getFunctions&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="100dbd70591ff171d8bfc0228c514e7e9da492f0" translate="yes" xml:space="preserve">
          <source>A possible value for column &lt;code&gt;NULLABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getTypeInfo&lt;/code&gt;.</source>
          <target state="translated">カラムの可能な値 &lt;code&gt;NULLABLE&lt;/code&gt; で &lt;code&gt;ResultSet&lt;/code&gt; メソッドによって返されるオブジェクト &lt;code&gt;getTypeInfo&lt;/code&gt; メソッド。</target>
        </trans-unit>
        <trans-unit id="b02cbbbc973fa4295b1015de7cf17203bb75b9a4" translate="yes" xml:space="preserve">
          <source>A possible value for column &lt;code&gt;PROCEDURE_TYPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getProcedures&lt;/code&gt;.</source>
          <target state="translated">カラムの可能な値 &lt;code&gt;PROCEDURE_TYPE&lt;/code&gt; で &lt;code&gt;ResultSet&lt;/code&gt; メソッドによって返されるオブジェクト &lt;code&gt;getProcedures&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5bcb0b1dabb9be62218b4e5c443b9758b4e9868f" translate="yes" xml:space="preserve">
          <source>A possible value for column &lt;code&gt;SEARCHABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getTypeInfo&lt;/code&gt;.</source>
          <target state="translated">カラムの可能な値 &lt;code&gt;SEARCHABLE&lt;/code&gt; で &lt;code&gt;ResultSet&lt;/code&gt; メソッドによって返されるオブジェクト &lt;code&gt;getTypeInfo&lt;/code&gt; メソッド。</target>
        </trans-unit>
        <trans-unit id="8a58889964f71630bc2cae7b99d6fd5a92cbf3af" translate="yes" xml:space="preserve">
          <source>A possible value for column &lt;code&gt;TYPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getIndexInfo&lt;/code&gt;.</source>
          <target state="translated">カラムの可能な値 &lt;code&gt;TYPE&lt;/code&gt; で &lt;code&gt;ResultSet&lt;/code&gt; メソッドによって返されるオブジェクト &lt;code&gt;getIndexInfo&lt;/code&gt; の。</target>
        </trans-unit>
        <trans-unit id="7fc687b329ad9b99c0f8a7388d7340977ec4456e" translate="yes" xml:space="preserve">
          <source>A possible value for getDirection.</source>
          <target state="translated">getDirection の値を指定します。</target>
        </trans-unit>
        <trans-unit id="2ddb28b41a27e1c9714388c0acb6c2c67b642431" translate="yes" xml:space="preserve">
          <source>A possible value for getDirection. This specifies that the data associated with this record should be joined to the fractured element.</source>
          <target state="translated">getDirectionの値。これは、このレコードに関連付けられているデータがフラクチャ要素に結合されるべきであることを指定します。</target>
        </trans-unit>
        <trans-unit id="5b3df2ffff75c3ff6310c5af77406c7bef332c29" translate="yes" xml:space="preserve">
          <source>A possible value for getDirection. This specifies that the data associated with this record should be joined to what follows it.</source>
          <target state="translated">getDirectionに設定可能な値。これは、このレコードに関連付けられたデータが、それに続くものに結合されるべきであることを指定します。</target>
        </trans-unit>
        <trans-unit id="8dc8011fd65db1f2d2dce2ac1c59be3b3eb9ab86" translate="yes" xml:space="preserve">
          <source>A possible value for getDirection. This specifies that the data associated with this record should be joined to what precedes it.</source>
          <target state="translated">getDirectionに指定できる値。これは、このレコードに関連付けられたデータを、それより前のものに結合することを指定します。</target>
        </trans-unit>
        <trans-unit id="475c1d945860ac45772fc0f36c58d2bd6a343053" translate="yes" xml:space="preserve">
          <source>A possible value for getDirection. This specifies that the data associated with this record should be used to originate a new element. This would be the normal value.</source>
          <target state="translated">getDirectionの値。これは、このレコードに関連付けられたデータが新しい要素を生成するために使用されるべきであることを指定します。これは通常の値です。</target>
        </trans-unit>
        <trans-unit id="ec64a1871853aab070fa5ef804bb284fba4e6ec9" translate="yes" xml:space="preserve">
          <source>A possible value for getType.</source>
          <target state="translated">getTypeに設定可能な値。</target>
        </trans-unit>
        <trans-unit id="4903fc095639ffca984ac7afef2796dd6a586ced" translate="yes" xml:space="preserve">
          <source>A possible value for getType. This specifies that this record type is a end tag and represents markup that specifies the end of an element.</source>
          <target state="translated">getTypeに指定可能な値。これは、このレコードタイプがエンドタグであることを指定し、要素の終わりを指定するマークアップを表します。</target>
        </trans-unit>
        <trans-unit id="7678089a9ba50da5f6de032f98186b261df907f6" translate="yes" xml:space="preserve">
          <source>A possible value for getType. This specifies that this record type is a start tag and represents markup that specifies the start of an element.</source>
          <target state="translated">getTypeの可能な値。これは、このレコードタイプが開始タグであり、要素の開始を指定するマークアップを表していることを指定します。</target>
        </trans-unit>
        <trans-unit id="5f0018d0639595c4bb7c2523ebe02c5a95694bc0" translate="yes" xml:space="preserve">
          <source>A possible value for getType. This specifies that this record type represents content.</source>
          <target state="translated">getTypeに設定可能な値。これは、このレコードタイプがコンテンツを表すことを指定します。</target>
        </trans-unit>
        <trans-unit id="7472789d24c842697672c4e16b40f61af0caf1f6" translate="yes" xml:space="preserve">
          <source>A possible value for paragraph alignment.</source>
          <target state="translated">段落の整列のための可能な値。</target>
        </trans-unit>
        <trans-unit id="d3099a340d2890db545796b73021b1ce61bd46bc" translate="yes" xml:space="preserve">
          <source>A possible value for paragraph alignment. This specifies that extra whitespace should be spread out through the rows of the paragraph with the text lined up with the left and right indent except on the last line which should be aligned to the left.</source>
          <target state="translated">段落の整列に設定可能な値。これは、余分な空白を段落の行に広げて、テキストを左右のインデントに合わせて並べ、最後の行を除いて左揃えにすることを指定します。</target>
        </trans-unit>
        <trans-unit id="1a7c857263f96fb2f49a10115369a52498162793" translate="yes" xml:space="preserve">
          <source>A possible value for paragraph alignment. This specifies that the text is aligned to the center and extra whitespace should be placed equally on the left and right.</source>
          <target state="translated">段落の整列に設定できる値。これは、テキストを中央に揃え、余分な空白を左右に等しく配置することを指定します。</target>
        </trans-unit>
        <trans-unit id="95c5d13ba99cec885ddf1ee6d82e66fe3a60ae52" translate="yes" xml:space="preserve">
          <source>A possible value for paragraph alignment. This specifies that the text is aligned to the left indent and extra whitespace should be placed on the right.</source>
          <target state="translated">段落の整列のための値。これは、テキストを左インデントに揃え、余分な空白を右に配置することを指定します。</target>
        </trans-unit>
        <trans-unit id="3d476ef4a7d2dcff0916df694c0aa7370e322851" translate="yes" xml:space="preserve">
          <source>A possible value for paragraph alignment. This specifies that the text is aligned to the right indent and extra whitespace should be placed on the left.</source>
          <target state="translated">段落の整列のための値。これは、テキストを右インデントに揃え、余分な空白を左に配置することを指定します。</target>
        </trans-unit>
        <trans-unit id="c6fea784ab6411719f4cd697efe55ef4ac2c2d20" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;COLUMN_TYPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; returned by the method &lt;code&gt;getFunctionColumns&lt;/code&gt;.</source>
          <target state="translated">カラムの可能な値 &lt;code&gt;COLUMN_TYPE&lt;/code&gt; に &lt;code&gt;ResultSet&lt;/code&gt; がメソッドによって返さ &lt;code&gt;getFunctionColumns&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cadca5dfbee9e18815b448f81c18f74c3cefd9ed" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;COLUMN_TYPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; returned by the method &lt;code&gt;getProcedureColumns&lt;/code&gt;.</source>
          <target state="translated">カラムの可能な値 &lt;code&gt;COLUMN_TYPE&lt;/code&gt; に &lt;code&gt;ResultSet&lt;/code&gt; がメソッドによって返さ &lt;code&gt;getProcedureColumns&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee0812b81f0dfe80485592f9fec4f66a8cc4d914" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;DEFERRABILITY&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; objects returned by the methods &lt;code&gt;getImportedKeys&lt;/code&gt;, &lt;code&gt;getExportedKeys&lt;/code&gt;, and &lt;code&gt;getCrossReference&lt;/code&gt;.</source>
          <target state="translated">カラムの可能な値 &lt;code&gt;DEFERRABILITY&lt;/code&gt; に &lt;code&gt;ResultSet&lt;/code&gt; がメソッドによって返されたオブジェクト &lt;code&gt;getImportedKeys&lt;/code&gt; 、 &lt;code&gt;getExportedKeys&lt;/code&gt; 、および &lt;code&gt;getCrossReference&lt;/code&gt; の各。</target>
        </trans-unit>
        <trans-unit id="0a8b142684ee8c55dd99ad0ff72ebf269db0ba62" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;NULLABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getAttributes&lt;/code&gt;.</source>
          <target state="translated">カラムの可能な値 &lt;code&gt;NULLABLE&lt;/code&gt; で &lt;code&gt;ResultSet&lt;/code&gt; メソッドによって返されるオブジェクト &lt;code&gt;getAttributes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="edd3147a379827d85946be4645add62ed61f6440" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;NULLABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getFunctionColumns&lt;/code&gt;.</source>
          <target state="translated">カラムの可能な値 &lt;code&gt;NULLABLE&lt;/code&gt; で &lt;code&gt;ResultSet&lt;/code&gt; メソッドによって返されるオブジェクト &lt;code&gt;getFunctionColumns&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a558d8888e81cd6c55f83b0c85fd3039cf19aa6" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;NULLABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getProcedureColumns&lt;/code&gt;.</source>
          <target state="translated">カラムの可能な値 &lt;code&gt;NULLABLE&lt;/code&gt; で &lt;code&gt;ResultSet&lt;/code&gt; メソッドによって返されるオブジェクト &lt;code&gt;getProcedureColumns&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26e07b58bea46495e2abeac577a35becde602c6b" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;NULLABLE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; returned by the method &lt;code&gt;getColumns&lt;/code&gt;.</source>
          <target state="translated">カラムの可能な値 &lt;code&gt;NULLABLE&lt;/code&gt; に &lt;code&gt;ResultSet&lt;/code&gt; がメソッドによって返さ &lt;code&gt;getColumns&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67f4995efedac102ee574536f44ea6ed2660e95f" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;PSEUDO_COLUMN&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getBestRowIdentifier&lt;/code&gt;.</source>
          <target state="translated">カラムの可能な値 &lt;code&gt;PSEUDO_COLUMN&lt;/code&gt; で &lt;code&gt;ResultSet&lt;/code&gt; メソッドによって返されるオブジェクト &lt;code&gt;getBestRowIdentifier&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5b7973cafe6db61ebabc5f012f99340fb3ded7a" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;PSEUDO_COLUMN&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getVersionColumns&lt;/code&gt;.</source>
          <target state="translated">カラムの可能な値 &lt;code&gt;PSEUDO_COLUMN&lt;/code&gt; で &lt;code&gt;ResultSet&lt;/code&gt; メソッドによって返されるオブジェクト &lt;code&gt;getVersionColumns&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b0376528d84c25c872b46e84e494b5d2367d13d" translate="yes" xml:space="preserve">
          <source>A possible value for the column &lt;code&gt;SCOPE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; object returned by the method &lt;code&gt;getBestRowIdentifier&lt;/code&gt;.</source>
          <target state="translated">カラムの可能な値 &lt;code&gt;SCOPE&lt;/code&gt; で &lt;code&gt;ResultSet&lt;/code&gt; メソッドによって返されるオブジェクト &lt;code&gt;getBestRowIdentifier&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6bbfeaf3753056bc518ada3ba369420cc5d1b50" translate="yes" xml:space="preserve">
          <source>A possible value for the columns &lt;code&gt;UPDATE_RULE&lt;/code&gt; and &lt;code&gt;DELETE_RULE&lt;/code&gt; in the &lt;code&gt;ResultSet&lt;/code&gt; objects returned by the methods &lt;code&gt;getImportedKeys&lt;/code&gt;, &lt;code&gt;getExportedKeys&lt;/code&gt;, and &lt;code&gt;getCrossReference&lt;/code&gt;.</source>
          <target state="translated">列の可能な値 &lt;code&gt;UPDATE_RULE&lt;/code&gt; と &lt;code&gt;DELETE_RULE&lt;/code&gt; に &lt;code&gt;ResultSet&lt;/code&gt; がメソッドによって返されたオブジェクト &lt;code&gt;getImportedKeys&lt;/code&gt; 、 &lt;code&gt;getExportedKeys&lt;/code&gt; 、および &lt;code&gt;getCrossReference&lt;/code&gt; の各。</target>
        </trans-unit>
        <trans-unit id="5742d3d0514030a93b77a55b1d30d4a198749704" translate="yes" xml:space="preserve">
          <source>A possibly empty string describing this configuration</source>
          <target state="translated">この設定を記述する空文字列の可能性があります。</target>
        </trans-unit>
        <trans-unit id="07ea3a60d8da1b312e18b6b9ce43b92283457262" translate="yes" xml:space="preserve">
          <source>A possibly empty string describing this module layer</source>
          <target state="translated">このモジュールレイヤを記述する空文字列の可能性があります。</target>
        </trans-unit>
        <trans-unit id="d2705dcae935877bd3fe557ef24f1985c8bb781a" translate="yes" xml:space="preserve">
          <source>A possibly null &lt;code&gt;SaslClient&lt;/code&gt; created using the parameters supplied. If null, cannot find a &lt;code&gt;SaslClientFactory&lt;/code&gt; that will produce one.</source>
          <target state="translated">nullの可能性がある、提供されたパラメーターを使用して作成された &lt;code&gt;SaslClient&lt;/code&gt; 。nullの場合、それを生成する &lt;code&gt;SaslClientFactory&lt;/code&gt; を見つけることができません。</target>
        </trans-unit>
        <trans-unit id="66f5e7d6cc182293efa2a5e37b7d7d480692c79f" translate="yes" xml:space="preserve">
          <source>A possibly null &lt;code&gt;SaslClient&lt;/code&gt; created using the parameters supplied. If null, this factory cannot produce a &lt;code&gt;SaslClient&lt;/code&gt; using the parameters supplied.</source>
          <target state="translated">nullの可能性がある、提供されたパラメーターを使用して作成された &lt;code&gt;SaslClient&lt;/code&gt; 。nullの場合、このファクトリは、指定されたパラメーターを使用して &lt;code&gt;SaslClient&lt;/code&gt; を生成できません。</target>
        </trans-unit>
        <trans-unit id="0b05743f60c3de6a64646f3c940516bebe032910" translate="yes" xml:space="preserve">
          <source>A possibly null &lt;code&gt;SaslServer&lt;/code&gt; created using the parameters supplied. If null, cannot find a &lt;code&gt;SaslServerFactory&lt;/code&gt; that will produce one.</source>
          <target state="translated">nullの可能性がある、提供されたパラメーターを使用して作成された &lt;code&gt;SaslServer&lt;/code&gt; 。nullの場合、それを生成する &lt;code&gt;SaslServerFactory&lt;/code&gt; を見つけることができません。</target>
        </trans-unit>
        <trans-unit id="91226546474985c1813acbe9067ef1cb7e39da27" translate="yes" xml:space="preserve">
          <source>A possibly null &lt;code&gt;SaslServer&lt;/code&gt; created using the parameters supplied. If null, this factory cannot produce a &lt;code&gt;SaslServer&lt;/code&gt; using the parameters supplied.</source>
          <target state="translated">nullの可能性がある、提供されたパラメーターを使用して作成された &lt;code&gt;SaslServer&lt;/code&gt; 。nullの場合、このファクトリは提供されたパラメーターを使用して &lt;code&gt;SaslServer&lt;/code&gt; を作成できません。</target>
        </trans-unit>
        <trans-unit id="1635e9f91cb5a2fc226360f1e119ac246ca5d453" translate="yes" xml:space="preserve">
          <source>A possibly null Control.</source>
          <target state="translated">ヌルの可能性のあるコントロール。</target>
        </trans-unit>
        <trans-unit id="62cc797a2835818cc3df56acf7ab8b6325cb3231" translate="yes" xml:space="preserve">
          <source>A possibly null array of &lt;code&gt;Control&lt;/code&gt; objects.</source>
          <target state="translated">nullの可能性がある &lt;code&gt;Control&lt;/code&gt; オブジェクトの配列。</target>
        </trans-unit>
        <trans-unit id="3eaf96564ec411ef60ad1fd3b372e06ddcd7849e" translate="yes" xml:space="preserve">
          <source>A possibly null array of controls. If null, the previous method invoked on this context did not produce any controls.</source>
          <target state="translated">null の可能性があるコントロールの配列。null の場合、このコンテキストで呼び出された前のメソッドは何のコントロールも生成しませんでした。</target>
        </trans-unit>
        <trans-unit id="10560282de64ca60d43ecb4532547224bfd08f41" translate="yes" xml:space="preserve">
          <source>A possibly null array of referrals, each of which is represented by a URL string. If null, no referral was sent by the server.</source>
          <target state="translated">各リファラルは URL 文字列で表されます。null の場合、サーバから送信されたリファラルはありません。</target>
        </trans-unit>
        <trans-unit id="548f5fe8a9ae8019a49683831f0b805ce09abf74" translate="yes" xml:space="preserve">
          <source>A possibly null byte array representing the ASN.1 BER encoded contents of the LDAP &lt;code&gt;ExtendedRequest.requestValue&lt;/code&gt; component.</source>
          <target state="translated">LDAP &lt;code&gt;ExtendedRequest.requestValue&lt;/code&gt; コンポーネントのASN.1 BERエンコードされたコンテンツを表すnullの可能性があるバイト配列。</target>
        </trans-unit>
        <trans-unit id="92c9a272a4d931c152db068d54ac6953b393b197" translate="yes" xml:space="preserve">
          <source>A possibly null byte array representing the ASN.1 BER encoded contents of the LDAP &lt;code&gt;ExtendedResponse.response&lt;/code&gt; component.</source>
          <target state="translated">LDAP &lt;code&gt;ExtendedResponse.response&lt;/code&gt; コンポーネントのASN.1 BERエンコードされたコンテンツを表すnullの可能性があるバイト配列。</target>
        </trans-unit>
        <trans-unit id="ff87ab073a8cd5077c343bb00b812a40971e003c" translate="yes" xml:space="preserve">
          <source>A possibly null byte array representing the ASN.1 BER encoded value of the LDAP control.</source>
          <target state="translated">LDAPコントロールのASN.1 BERエンコードされた値を表すNULLバイト配列の可能性があります。</target>
        </trans-unit>
        <trans-unit id="3cb6aa987b78522dc1bd9466de9d784c88462a4d" translate="yes" xml:space="preserve">
          <source>A possibly null byte array representing the control's ASN.1 BER encoded value. It is not cloned - any changes to the returned value will affect the contents of the control.</source>
          <target state="translated">コントロールのASN.1 BERエンコードされた値を表すヌルの可能性のあるバイト配列。これはクローン化されません-返される値を変更すると、コントロールの内容に影響を与えます。</target>
        </trans-unit>
        <trans-unit id="6f4c5a21811c6ddca2738adff04cd26dfcb12c23" translate="yes" xml:space="preserve">
          <source>A possibly null exception as constructed using information sent by the server. If null, a &quot;success&quot; status was indicated by the server.</source>
          <target state="translated">サーバーから送信された情報を使用して構築された、null の可能性のある例外。null の場合は、サーバによって &quot;成功&quot; ステータスが示されました。</target>
        </trans-unit>
        <trans-unit id="0f7fa00e800c3389f9a5a0fd2fa9263309a7211d" translate="yes" xml:space="preserve">
          <source>A possibly null object identifier string representing the LDAP &lt;code&gt;ExtendedResponse.responseName&lt;/code&gt; component.</source>
          <target state="translated">nullの可能性がある、LDAP &lt;code&gt;ExtendedResponse.responseName&lt;/code&gt; コンポーネントを表すオブジェクト識別子の文字列。</target>
        </trans-unit>
        <trans-unit id="f670ba264fb7faa8a1f0ec6bd95fc42234981c4c" translate="yes" xml:space="preserve">
          <source>A possibly null object representing one of the attribute's value. It is null if the attribute's value is null.</source>
          <target state="translated">属性の値の一つを表すヌルの可能性のあるオブジェクト。属性の値がNULLの場合はNULLです。</target>
        </trans-unit>
        <trans-unit id="75864d255d1129c4e9ba827299b5b1f56ddbef6d" translate="yes" xml:space="preserve">
          <source>A possibly null server-generated cookie. It is not cloned - any changes to the cookie will update the control's state and thus are not recommended.</source>
          <target state="translated">ヌルの可能性があるサーバー生成クッキー。これはクローン化されません-クッキーへの変更はコントロールの状態を更新するので、推奨されません。</target>
        </trans-unit>
        <trans-unit id="d289ab04881c9cc6e50eeaa00f1d309da5a304b2" translate="yes" xml:space="preserve">
          <source>A possibly null string containing class name of object bound.</source>
          <target state="translated">オブジェクトバインドのクラス名を含むヌル文字列の可能性があります。</target>
        </trans-unit>
        <trans-unit id="ba4bd9394d23efbf4a0ec852e64071b2ced6cf44" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable list of this layer's parents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d313ea042cccab3d2d68f091298db7e73ec824" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable list of this parent configurations</source>
          <target state="translated">この親構成の変更不可能な空の可能性のあるリスト</target>
        </trans-unit>
        <trans-unit id="a7e954e6445a7dc20bc29d02db865e4a020dba9b" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of &lt;a href=&quot;moduledescriptor.requires&quot;&gt;&lt;code&gt;ModuleDescriptor.Requires&lt;/code&gt;&lt;/a&gt; objects</source>
          <target state="translated">おそらく空の変更不可能な&lt;a href=&quot;moduledescriptor.requires&quot;&gt; &lt;code&gt;ModuleDescriptor.Requires&lt;/code&gt; &lt;/a&gt;セット。オブジェクトが必要です</target>
        </trans-unit>
        <trans-unit id="413d05c453d600fec510ccfce320f22a0fc19240" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of exported packages</source>
          <target state="translated">エクスポートされたパッケージの修正不可能な空の可能性のあるセット</target>
        </trans-unit>
        <trans-unit id="7a1d1eadc95544c75c66396a7ffeea7cb275b20e" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of modifiers</source>
          <target state="translated">修飾可能な修飾子のセットが空になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="b1700d612b6d632f6c1ab15120592579b1226e7a" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of open packages</source>
          <target state="translated">空の可能性のある変更不可能なオープンパッケージのセット</target>
        </trans-unit>
        <trans-unit id="d020f8ff0123f784ba9c0e600c6ddc9e32f7a826" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of resolved modules that this resolved module reads</source>
          <target state="translated">この解決済みモジュールが読み取る解決済みモジュールの修正不可能な空の可能性のあるセット</target>
        </trans-unit>
        <trans-unit id="0da34a73ce39bfee2724ccd6220ae788d2e58338" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of the fully qualified class names of the service types used</source>
          <target state="translated">使用されるサービスタイプの完全修飾クラス名の変更不可能な空の可能性のあるセット</target>
        </trans-unit>
        <trans-unit id="34264365c707c54406bd8c9a5de69616751ebf4f" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of the modules in this layer</source>
          <target state="translated">このレイヤのモジュールの変更可能でない空の可能性のあるセット</target>
        </trans-unit>
        <trans-unit id="7fc162c8aaffb72dd0844c5bb94e7066643a3e5a" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of the packages in the module</source>
          <target state="translated">モジュール内のパッケージの変更可能でない空の可能性のあるセット</target>
        </trans-unit>
        <trans-unit id="daf079b0a8ace37d2ca0a3a14448ee8a4c2346d3" translate="yes" xml:space="preserve">
          <source>A possibly-empty unmodifiable set of the resolved modules in this configuration</source>
          <target state="translated">この設定で解決されたモジュールの修正不可能な空の可能性のあるセット</target>
        </trans-unit>
        <trans-unit id="f338409feb2fbcb63d411bfd4c693f31bbca7bb3" translate="yes" xml:space="preserve">
          <source>A possibly-null array of controls. null means no connect controls have been set for this context.</source>
          <target state="translated">null の可能性があるコントロールの配列。</target>
        </trans-unit>
        <trans-unit id="7fa4b5a7bed1fba6b58d93ff7e5647f0aeb57e8f" translate="yes" xml:space="preserve">
          <source>A possibly-null array of controls. null means no request controls have been set for this context.</source>
          <target state="translated">null の可能性があるコントロールの配列。</target>
        </trans-unit>
        <trans-unit id="730ac49d56e8e1ccd13312ac160e86633d88ab3a" translate="yes" xml:space="preserve">
          <source>A prefix can only be bound to a &lt;strong&gt;single&lt;/strong&gt; Namespace URI in the current scope.</source>
          <target state="translated">プレフィックスは、現在のスコープ内の&lt;strong&gt;単一の&lt;/strong&gt;名前空間URIにのみバインドできます。</target>
        </trans-unit>
        <trans-unit id="f31dbe96d4db13e76c30f32678d5834aac89d5e8" translate="yes" xml:space="preserve">
          <source>A principal identified by a distinguished name as specified by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd88c57d871d10e3857456422efd3a1926101bc" translate="yes" xml:space="preserve">
          <source>A printable area attribute's values are stored internally as integers in units of micrometers (&amp;micro;m), where 1 micrometer = 10&lt;sup&gt;-6&lt;/sup&gt; meter = 1/1000 millimeter = 1/25400 inch. This permits dimensions to be represented exactly to a precision of 1/1000 mm (= 1 &amp;micro;m) or 1/100 inch (= 254 &amp;micro;m). If fractional inches are expressed in negative powers of two, this permits dimensions to be represented exactly to a precision of 1/8 inch (= 3175 &amp;micro;m) but not 1/16 inch (because 1/16 inch does not equal an integral number of &amp;micro;m).</source>
          <target state="translated">印刷可能領域属性の値は、マイクロメートル（&amp;micro;m）の単位で整数として内部的に保存されます。1マイクロメートル= 10 &lt;sup&gt;-6&lt;/sup&gt;メートル= 1/1000ミリメートル= 1/25400インチ。これにより、1/1000 mm（= 1 &amp;micro;m）または1/100インチ（= 254 &amp;micro;m）の精度で寸法を正確に表すことができます。小数インチが2の負の累乗で表される場合、これにより、寸法を1/8インチ（= 3175 &amp;micro;m）の精度で正確に表すことができますが、1/16インチでは表すことができません（1/16インチは、 &amp;micro;m）。</target>
        </trans-unit>
        <trans-unit id="be66df4e815359ec0b5eef7a696fe6041abe763a" translate="yes" xml:space="preserve">
          <source>A printable character: &lt;code&gt;[\p{Graph}\p{Blank}&amp;amp;&amp;amp;[^\p{Cntrl}]]&lt;/code&gt;</source>
          <target state="translated">印刷可能な文字： &lt;code&gt;[\p{Graph}\p{Blank}&amp;amp;&amp;amp;[^\p{Cntrl}]]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8c4ade06a319d7219ac2d5f3da9ef84eb8f62b6" translate="yes" xml:space="preserve">
          <source>A printable character: &lt;code&gt;[\p{Graph}\x20]&lt;/code&gt;</source>
          <target state="translated">印刷可能な文字： &lt;code&gt;[\p{Graph}\x20]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b011c8875e9789d560b27f5f5612aab64a93b938" translate="yes" xml:space="preserve">
          <source>A printing client application will typically not need to use all the printing attribute classes in package javax.print.attribute.standard, just the ones that pertain to the application.</source>
          <target state="translated">印刷クライアントアプリケーションは、通常、パッケージ javax.print.attribute.standard にあるすべての印刷属性クラスを使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="662af875884ebefa284b1a1e34a6e15368a2d6e9" translate="yes" xml:space="preserve">
          <source>A priority queue is unbounded, but has an internal</source>
          <target state="translated">優先度キューは束縛されていませんが、内部に</target>
        </trans-unit>
        <trans-unit id="381989bf2d570f7f1f4f7b1b95948985c86b2aae" translate="yes" xml:space="preserve">
          <source>A private key.</source>
          <target state="translated">秘密鍵です。</target>
        </trans-unit>
        <trans-unit id="80cd6ff76b285191349b9609ddca29ae75c86455" translate="yes" xml:space="preserve">
          <source>A private key. The purpose of this interface is to group (and provide type safety for) all private key interfaces.</source>
          <target state="translated">秘密鍵です。このインターフェイスの目的は、すべての秘密鍵インターフェイスをグループ化すること(および型安全性を提供すること)である。</target>
        </trans-unit>
        <trans-unit id="314a966a0b9cf0a0fbba464d660ae3bb061d0e3e" translate="yes" xml:space="preserve">
          <source>A problem with mapping &lt;em&gt;from&lt;/em&gt; Java types &lt;em&gt;to&lt;/em&gt; Open types is signaled with an &lt;a href=&quot;openmbean/opendataexception&quot;&gt;&lt;code&gt;OpenDataException&lt;/code&gt;&lt;/a&gt;. This can happen when an MXBean interface is being analyzed, for example if it references a type like &lt;a href=&quot;../../../java.base/java/util/random&quot;&gt;&lt;code&gt;java.util.Random&lt;/code&gt;&lt;/a&gt; that has no getters. Or it can happen when an instance is being converted (a return value from a method in an MXBean or a parameter to a method in an MXBean proxy), for example when converting from &lt;code&gt;SortedSet&amp;lt;String&amp;gt;&lt;/code&gt; to &lt;code&gt;
      String[]&lt;/code&gt; if the &lt;code&gt;SortedSet&lt;/code&gt; has a non-null &lt;code&gt;
      Comparator&lt;/code&gt;.</source>
          <target state="translated">マッピングに伴う問題&lt;em&gt;から&lt;/em&gt;Java型&lt;em&gt;への&lt;/em&gt;オープンタイプがで通知され&lt;a href=&quot;openmbean/opendataexception&quot;&gt; &lt;code&gt;OpenDataException&lt;/code&gt; &lt;/a&gt;。これは、MXBeanインターフェースが分析されているときに発生する可能性があります。たとえば、ゲッターを持たない&lt;a href=&quot;../../../java.base/java/util/random&quot;&gt; &lt;code&gt;java.util.Random&lt;/code&gt; の&lt;/a&gt;ような型を参照している場合です。変換するとき、インスタンスは、例えば、（のMXBeanにメソッドまたはMXBeanプロキシ内のメソッドへのパラメータからの戻り値）に変換されている場合、またはそれが起こることができ &lt;code&gt;SortedSet&amp;lt;String&amp;gt;&lt;/code&gt; に &lt;code&gt; String[]&lt;/code&gt; 場合 &lt;code&gt;SortedSet&lt;/code&gt; 有しますnull以外の &lt;code&gt; Comparator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18e6596f2d36107df44bd1e141716f0c3c917709" translate="yes" xml:space="preserve">
          <source>A problem with mapping &lt;em&gt;from&lt;/em&gt; Java types &lt;em&gt;to&lt;/em&gt; Open types is signaled with an &lt;a href=&quot;openmbean/opendataexception&quot;&gt;&lt;code&gt;OpenDataException&lt;/code&gt;&lt;/a&gt;. This can happen when an MXBean interface is being analyzed, for example if it references a type like &lt;a href=&quot;../../java/util/random&quot;&gt;&lt;code&gt;java.util.Random&lt;/code&gt;&lt;/a&gt; that has no getters. Or it can happen when an instance is being converted (a return value from a method in an MXBean or a parameter to a method in an MXBean proxy), for example when converting from &lt;code&gt;SortedSet&amp;lt;String&amp;gt;&lt;/code&gt; to &lt;code&gt;String[]&lt;/code&gt; if the &lt;code&gt;SortedSet&lt;/code&gt; has a non-null &lt;code&gt;Comparator&lt;/code&gt;.</source>
          <target state="translated">マッピングに伴う問題&lt;em&gt;から&lt;/em&gt; Java型&lt;em&gt;への&lt;/em&gt;オープンタイプがで通知され&lt;a href=&quot;openmbean/opendataexception&quot;&gt; &lt;code&gt;OpenDataException&lt;/code&gt; &lt;/a&gt;。これは、MXBeanインターフェースが分析されているときに発生する可能性があります。たとえば、getterのない&lt;a href=&quot;../../java/util/random&quot;&gt; &lt;code&gt;java.util.Random&lt;/code&gt; の&lt;/a&gt;ような型を参照している場合などです。変換するとき、インスタンスは、例えば、（のMXBeanにメソッドまたはMXBeanプロキシ内のメソッドへのパラメータからの戻り値）に変換されている場合、またはそれが起こることができ &lt;code&gt;SortedSet&amp;lt;String&amp;gt;&lt;/code&gt; に &lt;code&gt;String[]&lt;/code&gt; 場合 &lt;code&gt;SortedSet&lt;/code&gt; 有しますnull以外の &lt;code&gt;Comparator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="593665f64816caa9d2b947ba33063505f3f9d016" translate="yes" xml:space="preserve">
          <source>A problem with mapping &lt;em&gt;to&lt;/em&gt; Java types &lt;em&gt;from&lt;/em&gt; Open types is signaled with an &lt;a href=&quot;../../../java.base/java/io/invalidobjectexception&quot;&gt;&lt;code&gt;InvalidObjectException&lt;/code&gt;&lt;/a&gt;. This can happen when an MXBean interface is being analyzed, for example if it references a type that is not &lt;em&gt;reconstructible&lt;/em&gt; according to the rules above, in a context where a reconstructible type is required. Or it can happen when an instance is being converted (a parameter to a method in an MXBean or a return value from a method in an MXBean proxy), for example from a String to an Enum if there is no Enum constant with that name.</source>
          <target state="translated">マッピングに伴う問題&lt;em&gt;への&lt;/em&gt;Javaの型&lt;em&gt;から&lt;/em&gt;オープンタイプは、と知らされる&lt;a href=&quot;../../../java.base/java/io/invalidobjectexception&quot;&gt; &lt;code&gt;InvalidObjectException&lt;/code&gt; を&lt;/a&gt;。これは、MXBeanインターフェースが分析されているときに発生する可能性があります。たとえば、再構築可能なタイプが必要なコンテキストで、上記のルールに従って&lt;em&gt;再構築&lt;/em&gt;できないタイプを参照している場合などです。または、インスタンスが変換されているときに発生する可能性があります（MXBeanのメソッドへのパラメーターまたはMXBeanプロキシのメソッドからの戻り値）。たとえば、その名前のEnum定数がない場合はStringからEnumに変換されます。</target>
        </trans-unit>
        <trans-unit id="608ca4427acb530ce5f60d17ee3ff5bf4f6bb7c2" translate="yes" xml:space="preserve">
          <source>A problem with mapping &lt;em&gt;to&lt;/em&gt; Java types &lt;em&gt;from&lt;/em&gt; Open types is signaled with an &lt;a href=&quot;../../java/io/invalidobjectexception&quot;&gt;&lt;code&gt;InvalidObjectException&lt;/code&gt;&lt;/a&gt;. This can happen when an MXBean interface is being analyzed, for example if it references a type that is not &lt;em&gt;reconstructible&lt;/em&gt; according to the rules above, in a context where a reconstructible type is required. Or it can happen when an instance is being converted (a parameter to a method in an MXBean or a return value from a method in an MXBean proxy), for example from a String to an Enum if there is no Enum constant with that name.</source>
          <target state="translated">マッピングに伴う問題&lt;em&gt;への&lt;/em&gt; Javaの型&lt;em&gt;から&lt;/em&gt;オープンタイプは、と知らされる&lt;a href=&quot;../../java/io/invalidobjectexception&quot;&gt; &lt;code&gt;InvalidObjectException&lt;/code&gt; を&lt;/a&gt;。これは、たとえば、再構築可能な型が必要なコンテキストで、上記のルールに従って&lt;em&gt;再構築&lt;/em&gt;できない型を参照するMXBeanインターフェースが分析されているときに発生する可能性があります。または、インスタンスが変換されているときに発生する可能性があります（MXBeanのメソッドへのパラメーターまたはMXBeanプロキシのメソッドからの戻り値）。たとえば、その名前のEnum定数がない場合にStringからEnumに。</target>
        </trans-unit>
        <trans-unit id="71b8d17d460b2ad2e4811d7dcf631d6c45589003" translate="yes" xml:space="preserve">
          <source>A processor that checks an XML document against &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">XMLドキュメントを&lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;と照合するプロセッサ。</target>
        </trans-unit>
        <trans-unit id="0f8e10c349007fd0c3629a3ada34d39c6cc98f87" translate="yes" xml:space="preserve">
          <source>A producer of items (and related control messages) received by Subscribers.</source>
          <target state="translated">加入者が受信したアイテム(および関連する制御メッセージ)のプロデューサー。</target>
        </trans-unit>
        <trans-unit id="7a0fa7687dc37746f505813275fed11b61db657b" translate="yes" xml:space="preserve">
          <source>A producer of items (and related control messages) received by Subscribers. Each current &lt;a href=&quot;flow.subscriber&quot;&gt;&lt;code&gt;Flow.Subscriber&lt;/code&gt;&lt;/a&gt; receives the same items (via method &lt;code&gt;onNext&lt;/code&gt;) in the same order, unless drops or errors are encountered. If a Publisher encounters an error that does not allow items to be issued to a Subscriber, that Subscriber receives &lt;code&gt;onError&lt;/code&gt;, and then receives no further messages. Otherwise, when it is known that no further messages will be issued to it, a subscriber receives &lt;code&gt;
 onComplete&lt;/code&gt;. Publishers ensure that Subscriber method invocations for each subscription are strictly ordered in &lt;a href=&quot;package-summary#MemoryVisibility&quot;&gt;&lt;i&gt;happens-before&lt;/i&gt;&lt;/a&gt; order.</source>
          <target state="translated">サブスクライバーが受信するアイテム（および関連する制御メッセージ）のプロデューサー。ドロップまたはエラーが発生しない限り、現在の各&lt;a href=&quot;flow.subscriber&quot;&gt; &lt;code&gt;Flow.Subscriber&lt;/code&gt; &lt;/a&gt;は、同じアイテムを（メソッド &lt;code&gt;onNext&lt;/code&gt; を介して）同じ順序で受け取ります。パブリッシャーがサブスクライバーへのアイテムの発行を許可しないエラーを検出した場合、そのサブスクライバーは &lt;code&gt;onError&lt;/code&gt; を受信し、それ以上のメッセージを受信しません。それ以外の場合、それ以上メッセージが発行されないことがわかっている場合、サブスクライバーは &lt;code&gt; onComplete&lt;/code&gt; を受信します。パブリッシャーは、各サブスクリプションのサブスクライバーメソッドの呼び出し&lt;a href=&quot;package-summary#MemoryVisibility&quot;&gt;&lt;i&gt;が発生前の&lt;/i&gt;&lt;/a&gt;順序で厳密に順序付けられていることを確認します。</target>
        </trans-unit>
        <trans-unit id="863a7b5ff487b000efd9430f609d5071a7879a4c" translate="yes" xml:space="preserve">
          <source>A product specific name that this resource should be mapped to. The name of this resource, as defined by the &lt;code&gt;name&lt;/code&gt; element or defaulted, is a name that is local to the application component using the resource. (It's a name in the JNDI &lt;code&gt;java:comp/env&lt;/code&gt; namespace.) Many application servers provide a way to map these local names to names of resources known to the application server. This mapped name is often a</source>
          <target state="translated">このリソースをマップする必要がある製品固有の名前。このリソースの名前は、 &lt;code&gt;name&lt;/code&gt; 要素で定義されるか、デフォルトで使用されるように、リソースを使用するアプリケーションコンポーネントに対してローカルな名前です。（これはJNDI &lt;code&gt;java:comp/env&lt;/code&gt; 名前空間の名前です。）多くのアプリケーションサーバーは、これらのローカル名をアプリケーションサーバーが認識しているリソースの名前にマップする方法を提供します。このマッピングされた名前はしばしば</target>
        </trans-unit>
        <trans-unit id="7c8aa32e24563541016e30b5439a78f801db23c1" translate="yes" xml:space="preserve">
          <source>A program element annotated &lt;code&gt;@Deprecated&lt;/code&gt; is one that programmers are discouraged from using.</source>
          <target state="translated">&lt;code&gt;@Deprecated&lt;/code&gt; アノテーションが付けられたプログラム要素は、プログラマーが使用することを推奨されていない要素です。</target>
        </trans-unit>
        <trans-unit id="6639fdc9658de44d820953822aa829a29c5f54f0" translate="yes" xml:space="preserve">
          <source>A program element annotated &lt;code&gt;@Deprecated&lt;/code&gt; is one that programmers are discouraged from using. An element may be deprecated for any of several reasons, for example, its usage is likely to lead to errors; it may be changed incompatibly or removed in a future version; it has been superseded by a newer, usually preferable alternative; or it is obsolete.</source>
          <target state="translated">&lt;code&gt;@Deprecated&lt;/code&gt; アノテーションが付けられたプログラム要素は、プログラマーが使用することを推奨されていない要素です。要素は、いくつかの理由のいずれかで非推奨になる可能性があります。たとえば、その使用はエラーにつながる可能性があります。互換性がないように変更されるか、将来のバージョンで削除される可能性があります。これは、より新しい、通常は好ましい代替手段に取って代わられました。またはそれは時代遅れです。</target>
        </trans-unit>
        <trans-unit id="8804679a0fee9a658ffe4f33c5d2ed6e2e4fd43d" translate="yes" xml:space="preserve">
          <source>A program element annotated @Deprecated is one that programmers are discouraged from using, typically because it is dangerous, or because a better alternative exists.</source>
          <target state="translated">Deprecated」と注釈されたプログラム要素は、プログラマーが使用しないように推奨しているもので、一般的には危険だから、あるいはより良い代替案が存在するからです。</target>
        </trans-unit>
        <trans-unit id="c4be47f7b0b0635e030d8f171a0806ef7b2856b7" translate="yes" xml:space="preserve">
          <source>A program element annotated @Deprecated is one that programmers are discouraged from using, typically because it is dangerous, or because a better alternative exists. Compilers warn when a deprecated program element is used or overridden in non-deprecated code.</source>
          <target state="translated">Deprecatedとアノテーションされたプログラム要素は、プログラマが使用しないように推奨されているものです。コンパイラは、非非推奨のプログラム要素が使用されたり、非推奨のコードでオーバーライドされたりすると警告します。</target>
        </trans-unit>
        <trans-unit id="057bf28839a5c9afb90f791cbbdb5e59889e92eb" translate="yes" xml:space="preserve">
          <source>A program may request to be notified of changes in an object's reachability by &lt;em&gt;registering&lt;/em&gt; an appropriate reference object with a &lt;em&gt;reference queue&lt;/em&gt; at the time the reference object is created. Some time after the garbage collector determines that the reachability of the referent has changed to the value corresponding to the type of the reference, it will clear the reference and add it to the associated queue. At this point, the reference is considered to be &lt;em&gt;enqueued&lt;/em&gt;. The program may remove references from a queue either by polling or by blocking until a reference becomes available. Reference queues are implemented by the &lt;a href=&quot;referencequeue&quot;&gt;&lt;code&gt;ReferenceQueue&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de66be4819f2c9dcd7bc09e76cc228c9194121b" translate="yes" xml:space="preserve">
          <source>A program would use then these classes as follows:</source>
          <target state="translated">プログラムは以下のように、これらのクラスを使用します。</target>
        </trans-unit>
        <trans-unit id="f199fddb7cb98fec44ccf9e86b3406817feca422" translate="yes" xml:space="preserve">
          <source>A programmer assertion that the body of the annotated method or constructor does not perform potentially unsafe operations on its varargs parameter.</source>
          <target state="translated">アノテーションされたメソッドやコンストラクタのボディが varargs パラメータに対して安全でない可能性のある操作を行わないというプログラマのアサーション。</target>
        </trans-unit>
        <trans-unit id="8f5e77f61722434f91b66e7d1bdf03aa10ba7a2a" translate="yes" xml:space="preserve">
          <source>A programmer assertion that the body of the annotated method or constructor does not perform potentially unsafe operations on its varargs parameter. Applying this annotation to a method or constructor suppresses unchecked warnings about a</source>
          <target state="translated">アノテーションされたメソッドやコンストラクタのボディが varargs パラメータに対して安全でない可能性のある操作を行わないというプログラマのアサーション。このアノテーションをメソッドやコンストラクタに適用することで</target>
        </trans-unit>
        <trans-unit id="d7381f2d94724d8a0fdcfa438a2beb549f2fdf9e" translate="yes" xml:space="preserve">
          <source>A programmer defines the mapping by implementing the interface &lt;code&gt;SQLData&lt;/code&gt;. For example, if an SQL structured type named AUTHORS has the attributes NAME, TITLE, and PUBLISHER, it could be mapped to a Java class named Authors. The Authors class could have the fields name, title, and publisher, to which the attributes of AUTHORS are mapped. In such a case, the implementation of &lt;code&gt;SQLData&lt;/code&gt; could look like the following:</source>
          <target state="translated">プログラマーは、インターフェース &lt;code&gt;SQLData&lt;/code&gt; を実装することによってマッピングを定義します。たとえば、AUTHORSという名前のSQL構造化タイプにNAME、TITLE、およびPUBLISHERという属性がある場合、Authorsという名前のJavaクラスにマップできます。Authorsクラスには、AUTHORSの属性がマップされるフィールドname、title、およびpublisherを含めることができます。このような場合、 &lt;code&gt;SQLData&lt;/code&gt; の実装は次のようになります。</target>
        </trans-unit>
        <trans-unit id="cc64b915a35a6cb9d915399919c9c32d2a394819" translate="yes" xml:space="preserve">
          <source>A progressive pass is a re-encoding of the entire image, generally at progressively higher effective resolutions, but requiring greater transmission bandwidth. The most common use of progressive encoding is found in the JPEG format, where successive passes include more detailed representations of the high-frequency image content.</source>
          <target state="translated">プログレッシブパスとは、画像全体を再エンコードすることで、一般的には有効解像度が徐々に高くなりますが、より大きな伝送帯域幅を必要とします。プログレッシブエンコーディングの最も一般的な使用法はJPEG形式で、連続したパスには高周波数の画像内容のより詳細な表現が含まれています。</target>
        </trans-unit>
        <trans-unit id="e86c918437b0ef4c87896f835e92bc1ba37fb22a" translate="yes" xml:space="preserve">
          <source>A property &quot;&amp;lt;logger&amp;gt;.handlers&quot;. This defines a whitespace or comma separated list of class names for handlers classes to load and register as handlers to the specified logger. Each class name must be for a Handler class which has a default constructor. Note that these Handlers may be created lazily, when they are first used.</source>
          <target state="translated">プロパティ &quot;&amp;lt;logger&amp;gt; .handlers&quot;。これは、指定されたロガーにハンドラーとしてロードおよびハンドラーとして登録するハンドラークラスのクラス名の空白またはカンマ区切りのリストを定義します。各クラス名は、デフォルトのコンストラクターを持つハンドラークラスの名前でなければなりません。これらのハンドラーは、最初に使用されるときに、遅延して作成される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="23a2e445ef32408e0086baf8f15b6adb3e3487e5" translate="yes" xml:space="preserve">
          <source>A property &quot;&amp;lt;logger&amp;gt;.handlers.ensureCloseOnReset&quot;. This defines a a boolean value. If &quot;&amp;lt;logger&amp;gt;.handlers&quot; is not defined or is empty, this property is ignored. Otherwise it defaults to &lt;code&gt;true&lt;/code&gt;. When the value is &lt;code&gt;true&lt;/code&gt;, the handlers associated with the logger are guaranteed to be closed on &lt;a href=&quot;#reset()&quot;&gt;reset()&lt;/a&gt; and shutdown. This can be turned off by explicitly setting &quot;&amp;lt;logger&amp;gt;.handlers.ensureCloseOnReset=false&quot; in the configuration. Note that turning this property off causes the risk of introducing a resource leak, as the logger may get garbage collected before &lt;code&gt;reset()&lt;/code&gt; is called, thus preventing its handlers from being closed on &lt;code&gt;reset()&lt;/code&gt;. In that case it is the responsibility of the application to ensure that the handlers are closed before the logger is garbage collected.</source>
          <target state="translated">プロパティ「&amp;lt;logger&amp;gt; .handlers.ensureCloseOnReset」。これはブール値を定義します。 「&amp;lt;logger&amp;gt; .handlers」が定義されていないか空の場合、このプロパティは無視されます。それ以外の場合は、デフォルトで &lt;code&gt;true&lt;/code&gt; になります。値が &lt;code&gt;true&lt;/code&gt; の場合、ロガーに関連付けられているハンドラーは、&lt;a href=&quot;#reset()&quot;&gt;reset（）&lt;/a&gt;およびシャットダウン時に閉じられることが保証されます。これは、構成で「&amp;lt;logger&amp;gt; .handlers.ensureCloseOnReset = false」を明示的に設定することでオフにできます。このプロパティをオフにすることロガーがガベージ前に収集取得できるように、リソースリークを導入するリスクを引き起こすことに注意してください &lt;code&gt;reset()&lt;/code&gt; このように閉鎖されることから、そのハンドラを防止する、と呼ばれる &lt;code&gt;reset()&lt;/code&gt; 。その場合、ロガーがガベージコレクションされる前にハンドラーが閉じられていることを確認するのはアプリケーションの責任です。</target>
        </trans-unit>
        <trans-unit id="9b8333a093b6d7d47a6c333412eb84aa3f692950" translate="yes" xml:space="preserve">
          <source>A property &quot;&amp;lt;logger&amp;gt;.useParentHandlers&quot;. This defines a boolean value. By default every logger calls its parent in addition to handling the logging message itself, this often result in messages being handled by the root logger as well. When setting this property to false a Handler needs to be configured for this logger otherwise no logging messages are delivered.</source>
          <target state="translated">プロパティ &quot;&amp;lt;logger&amp;gt; .useParentHandlers&quot;。これはブール値を定義します。デフォルトでは、すべてのロガーはロギングメッセージ自体の処理に加えてその親を呼び出します。これにより、多くの場合、メッセージはルートロガーでも処理されます。このプロパティをfalseに設定する場合、このロガーに対してハンドラーを構成する必要があります。そうでない場合、ロギングメッセージは配信されません。</target>
        </trans-unit>
        <trans-unit id="a48195330c65c4b01249ae0f45a46a4b74f2ba95" translate="yes" xml:space="preserve">
          <source>A property &quot;config&quot;. This property is intended to allow arbitrary configuration code to be run. The property defines a whitespace or comma separated list of class names. A new instance will be created for each named class. The default constructor of each class may execute arbitrary code to update the logging configuration, such as setting logger levels, adding handlers, adding filters, etc.</source>
          <target state="translated">プロパティ「config」。このプロパティは、任意の設定コードを実行できるようにすることを目的としています。このプロパティは、クラス名のホワイトスペースまたはカンマで区切られたリストを定義します。名前のついたクラスごとに新しいインスタンスが作成されます。各クラスのデフォルト コンストラクタは、ロガー レベルの設定、ハンドラの追加、フィルタの追加など、ロギング構成を更新するための任意のコードを実行することができます。</target>
        </trans-unit>
        <trans-unit id="afdce71ac9851b08feb1aedc934d6974d465ffd9" translate="yes" xml:space="preserve">
          <source>A property &quot;handlers&quot;. This defines a whitespace or comma separated list of class names for handler classes to load and register as handlers on the root Logger (the Logger named &quot;&quot;). Each class name must be for a Handler class which has a default constructor. Note that these Handlers may be created lazily, when they are first used.</source>
          <target state="translated">プロパティ &quot;handlers&quot;。これは、ルート ロガー(&quot;&quot;という名前のロガー)上でハンドラーとしてロードし登録するハンドラー クラスのクラス名のホワイトスペースまたはカンマ区切りのリストを定義します。各クラス名は、デフォルト コンストラクタを持つハンドラ クラスのものでなければなりません。これらのハンドラは、最初に使用されるときに、怠惰に作成される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="dfd2111a7f7686bcd848b77a1c5c405eb80b6bc4" translate="yes" xml:space="preserve">
          <source>A property change handler.</source>
          <target state="translated">プロパティ変更ハンドラです。</target>
        </trans-unit>
        <trans-unit id="40cd905b82ea9f19a546d51718933bdbbabbbf69" translate="yes" xml:space="preserve">
          <source>A property list can contain another property list as its &quot;defaults&quot;; this second property list is searched if the property key is not found in the original property list.</source>
          <target state="translated">プロパティ・リストは、その「デフォルト」として別のプロパティ・リストを含むことができ、この2番目のプロパティ・リストは、プロパティ・キーが元のプロパティ・リストに見つからない場合に検索されます。</target>
        </trans-unit>
        <trans-unit id="f2eed07f01afb2d91e36f7bb664109ed92d22708" translate="yes" xml:space="preserve">
          <source>A property list that contains default values for any keys not found in this property list.</source>
          <target state="translated">このプロパティ・リストにないキーのデフォルト値を含むプロパティ・リスト。</target>
        </trans-unit>
        <trans-unit id="de5415dd74c54a74b9c685ab428e47618ba7f200" translate="yes" xml:space="preserve">
          <source>A protocol error occurred in the resource manager.</source>
          <target state="translated">リソースマネージャでプロトコルエラーが発生しました。</target>
        </trans-unit>
        <trans-unit id="f41aeb00b26c7224e4373696562512e945d54b66" translate="yes" xml:space="preserve">
          <source>A protocol library such as one for LDAP gets an instance of this class in order to perform authentication defined by a specific SASL mechanism. Invoking methods on the &lt;code&gt;SaslClient&lt;/code&gt; instance process challenges and create responses according to the SASL mechanism implemented by the &lt;code&gt;SaslClient&lt;/code&gt;. As the authentication proceeds, the instance encapsulates the state of a SASL client's authentication exchange.</source>
          <target state="translated">LDAPなどのプロトコルライブラリは、特定のSASLメカニズムで定義された認証を実行するために、このクラスのインスタンスを取得します。上のメソッド呼び出し &lt;code&gt;SaslClient&lt;/code&gt; インスタンスプロセスの課題をとすることにより実現SASL機構に従って応答を作成し &lt;code&gt;SaslClient&lt;/code&gt; 。認証が進むにつれて、インスタンスはSASLクライアントの認証交換の状態をカプセル化します。</target>
        </trans-unit>
        <trans-unit id="03d9f1368bc1efbeeb3a53c6794c4e7df365d4bf" translate="yes" xml:space="preserve">
          <source>A provider can provide more than one services, each of which is a service for a resource bundle of a different base name.</source>
          <target state="translated">プロバイダは複数のサービスを提供することができ、それぞれが異なるベース名のリソースバンドルに対するサービスである。</target>
        </trans-unit>
        <trans-unit id="580caa29929fc4de9f05bdba16e0354f5e586e20" translate="yes" xml:space="preserve">
          <source>A provider cannot be added if it is already installed.</source>
          <target state="translated">すでにインストールされている場合は、プロバイダを追加することはできません。</target>
        </trans-unit>
        <trans-unit id="e63d614e8049932752e3aebb56b8bccf35052ea3" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector clients using a given protocol.</source>
          <target state="translated">指定されたプロトコルを使用して JMX API コネクタクライアントを作成するためのプロバイダです。</target>
        </trans-unit>
        <trans-unit id="dd3870d903b805021db933da406f8b8d00d4f589" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector clients using a given protocol. Instances of this interface are created by &lt;a href=&quot;jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt; as part of its &lt;a href=&quot;jmxconnectorfactory#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt;&lt;code&gt;newJMXConnector&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">特定のプロトコルを使用してJMXAPIコネクタクライアントを作成するためのプロバイダー。このインターフェイスのインスタンスは、&lt;a href=&quot;jmxconnectorfactory#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt; &lt;code&gt;newJMXConnector&lt;/code&gt; &lt;/a&gt;メソッドの一部として&lt;a href=&quot;jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; &lt;/a&gt;によって作成されます。</target>
        </trans-unit>
        <trans-unit id="614fb95349aea53f10863cad93d2aa6c404516c9" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector clients using a given protocol. Instances of this interface are created by &lt;a href=&quot;jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt; as part of its &lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt;&lt;code&gt;newJMXConnector&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">特定のプロトコルを使用してJMX APIコネクタクライアントを作成するためのプロバイダー。このインターフェースのインスタンスは、&lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt; &lt;code&gt;newJMXConnector&lt;/code&gt; &lt;/a&gt;メソッドの一部として&lt;a href=&quot;jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; &lt;/a&gt;によって作成されます。</target>
        </trans-unit>
        <trans-unit id="bae1e5320493d0b1d17c1ed489f2965c61b5f471" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector servers using a given protocol.</source>
          <target state="translated">指定されたプロトコルを使用して JMX API コネクタサーバを作成するためのプロバイダです。</target>
        </trans-unit>
        <trans-unit id="ff0ded45ff8549e8dd9fd95358b0da7d9446916f" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector servers using a given protocol. Instances of this interface are created by &lt;a href=&quot;jmxconnectorserverfactory&quot;&gt;&lt;code&gt;JMXConnectorServerFactory&lt;/code&gt;&lt;/a&gt; as part of its &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt;&lt;code&gt;newJMXConnectorServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">特定のプロトコルを使用してJMXAPIコネクタサーバーを作成するためのプロバイダー。このインターフェイスのインスタンスは、&lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt; &lt;code&gt;newJMXConnectorServer&lt;/code&gt; &lt;/a&gt;メソッドの一部として&lt;a href=&quot;jmxconnectorserverfactory&quot;&gt; &lt;code&gt;JMXConnectorServerFactory&lt;/code&gt; &lt;/a&gt;によって作成されます。</target>
        </trans-unit>
        <trans-unit id="36ad26d0e92f5776ffe09050557ac6b961677cf9" translate="yes" xml:space="preserve">
          <source>A provider for creating JMX API connector servers using a given protocol. Instances of this interface are created by &lt;a href=&quot;jmxconnectorserverfactory&quot;&gt;&lt;code&gt;JMXConnectorServerFactory&lt;/code&gt;&lt;/a&gt; as part of its &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;newJMXConnectorServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">特定のプロトコルを使用してJMX APIコネクタサーバーを作成するためのプロバイダー。このインターフェースのインスタンスは、&lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;newJMXConnectorServer&lt;/code&gt; &lt;/a&gt;メソッドの一部として&lt;a href=&quot;jmxconnectorserverfactory&quot;&gt; &lt;code&gt;JMXConnectorServerFactory&lt;/code&gt; &lt;/a&gt;によって作成されます。</target>
        </trans-unit>
        <trans-unit id="07cd4ccaedc374d5f011dad9b41e1a309a488a32" translate="yes" xml:space="preserve">
          <source>A provider for parameter names when the parameter names are not determined from a reliable source, like a classfile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd9bc1e3d95ebcb6e6b052c07b48556f84f21d3" translate="yes" xml:space="preserve">
          <source>A provider is a factory for one or more &lt;a href=&quot;../filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; instances. Each file system is identified by a &lt;code&gt;URI&lt;/code&gt; where the URI's scheme matches the provider's &lt;a href=&quot;#getScheme()&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt;. The default file system, for example, is identified by the URI &lt;code&gt;&quot;file:///&quot;&lt;/code&gt;. A memory-based file system, for example, may be identified by a URI such as &lt;code&gt;&quot;memory:///?name=logfs&quot;&lt;/code&gt;. The &lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem&lt;/code&gt;&lt;/a&gt; method may be used to create a file system, and the &lt;a href=&quot;#getFileSystem(java.net.URI)&quot;&gt;&lt;code&gt;getFileSystem&lt;/code&gt;&lt;/a&gt; method may be used to obtain a reference to an existing file system created by the provider. Where a provider is the factory for a single file system then it is provider dependent if the file system is created when the provider is initialized, or later when the &lt;code&gt;newFileSystem&lt;/code&gt; method is invoked. In the case of the default provider, the &lt;code&gt;FileSystem&lt;/code&gt; is created when the provider is initialized.</source>
          <target state="translated">プロバイダーは、1つ以上の&lt;a href=&quot;../filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt;インスタンスのファクトリです。各ファイルシステムは、URIのスキームがプロバイダーの&lt;a href=&quot;#getScheme()&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt;一致する &lt;code&gt;URI&lt;/code&gt; によって識別されます。たとえば、デフォルトのファイルシステムは、URI &lt;code&gt;&quot;file:///&quot;&lt;/code&gt; 識別されます。たとえば、メモリベースのファイルシステムは、 &lt;code&gt;&quot;memory:///?name=logfs&quot;&lt;/code&gt; などのURIで識別できます。&lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt; &lt;code&gt;newFileSystem&lt;/code&gt; の&lt;/a&gt;方法は、ファイルシステムを作成するために使用されてもよく、&lt;a href=&quot;#getFileSystem(java.net.URI)&quot;&gt; &lt;code&gt;getFileSystem&lt;/code&gt; &lt;/a&gt;メソッドを使用して、プロバイダーによって作成された既存のファイルシステムへの参照を取得できます。プロバイダーが単一のファイルシステムのファクトリである場合、プロバイダーの初期化時にファイルシステムが作成されるか、後で &lt;code&gt;newFileSystem&lt;/code&gt; メソッドが呼び出されるかは、プロバイダーによって異なります。デフォルトのプロバイダーの場合、 &lt;code&gt;FileSystem&lt;/code&gt; はプロバイダーの初期化時に作成されます。</target>
        </trans-unit>
        <trans-unit id="17b083606c40562aa588292f9a8978d30059dfc5" translate="yes" xml:space="preserve">
          <source>A provider is a factory for one or more &lt;a href=&quot;../filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; instances. Each file system is identified by a &lt;code&gt;URI&lt;/code&gt; where the URI's scheme matches the provider's &lt;a href=&quot;filesystemprovider#getScheme--&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt;. The default file system, for example, is identified by the URI &lt;code&gt;&quot;file:///&quot;&lt;/code&gt;. A memory-based file system, for example, may be identified by a URI such as &lt;code&gt;&quot;memory:///?name=logfs&quot;&lt;/code&gt;. The &lt;a href=&quot;filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem&lt;/code&gt;&lt;/a&gt; method may be used to create a file system, and the &lt;a href=&quot;filesystemprovider#getFileSystem-java.net.URI-&quot;&gt;&lt;code&gt;getFileSystem&lt;/code&gt;&lt;/a&gt; method may be used to obtain a reference to an existing file system created by the provider. Where a provider is the factory for a single file system then it is provider dependent if the file system is created when the provider is initialized, or later when the &lt;code&gt;newFileSystem&lt;/code&gt; method is invoked. In the case of the default provider, the &lt;code&gt;FileSystem&lt;/code&gt; is created when the provider is initialized.</source>
          <target state="translated">プロバイダーは、1つ以上の&lt;a href=&quot;../filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt;インスタンスのファクトリーです。各ファイルシステムは、 &lt;code&gt;URI&lt;/code&gt; によって識別され、URIのスキームはプロバイダーの&lt;a href=&quot;filesystemprovider#getScheme--&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt;一致します。たとえば、デフォルトのファイルシステムは、URI &lt;code&gt;&quot;file:///&quot;&lt;/code&gt; で識別されます。たとえば、メモリベースのファイルシステムは、 &lt;code&gt;&quot;memory:///?name=logfs&quot;&lt;/code&gt; などのURIで識別できます。&lt;a href=&quot;filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem&lt;/code&gt; の&lt;/a&gt;方法は、ファイルシステムを作成するために使用されてもよく、&lt;a href=&quot;filesystemprovider#getFileSystem-java.net.URI-&quot;&gt; &lt;code&gt;getFileSystem&lt;/code&gt; &lt;/a&gt;メソッドは、プロバイダーによって作成された既存のファイルシステムへの参照を取得するために使用できます。プロバイダーが単一のファイルシステムのファクトリである場合、プロバイダーの初期化時にファイルシステムが作成されるか、後で &lt;code&gt;newFileSystem&lt;/code&gt; メソッドが呼び出されるときに、プロバイダーに依存します。デフォルトのプロバイダーの場合、プロバイダーの初期化時に &lt;code&gt;FileSystem&lt;/code&gt; が作成されます。</target>
        </trans-unit>
        <trans-unit id="c8661e42b7c7bc483d855be05578549a86088067" translate="yes" xml:space="preserve">
          <source>A provider may supply a separate class for each combination of</source>
          <target state="translated">プロバイダは、以下の各組み合わせに対して個別のクラスを提供してもよい。</target>
        </trans-unit>
        <trans-unit id="8df104aa5c6516e068d95f227ce6f358ff53a542" translate="yes" xml:space="preserve">
          <source>A provider of execution engines which run in the same process as JShell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c75d084f1fdf212a3f3c3cc424d49b444ba6980" translate="yes" xml:space="preserve">
          <source>A provider of remote JDI-controlled execution engines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60a915be1b89d2839a779fb959759ac9c3b3cb4" translate="yes" xml:space="preserve">
          <source>A provider or factory for a particular mixer type.</source>
          <target state="translated">特定のタイプのミキサーの供給者または工場。</target>
        </trans-unit>
        <trans-unit id="44f8d9d0aaa9571934a90484486f900c4a13b7b8" translate="yes" xml:space="preserve">
          <source>A provider or factory for a particular mixer type. This mechanism allows the implementation to determine how resources are managed in creation / management of a mixer.</source>
          <target state="translated">特定のミキサータイプのためのプロバイダーまたはファクトリー。このメカニズムにより、ミキサーの作成/管理においてリソースがどのように管理されるかを決定することができます。</target>
        </trans-unit>
        <trans-unit id="4878c3885cb6d9f28d6699e6f5ecb8e8c822919b" translate="yes" xml:space="preserve">
          <source>A provider satisfies the specified selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service.</source>
          <target state="translated">プロバイダは,指定された暗号サービスのために指定されたアルゴリズムまたは型を実装している場合に,指定された選択基準を満たす。</target>
        </trans-unit>
        <trans-unit id="ef46e43cda72b7adf9af9a571bcf11a8355d0f12" translate="yes" xml:space="preserve">
          <source>A provider satisfies this selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service and its implementation meets the constraint expressed by the specified attribute name/value pair.</source>
          <target state="translated">プロバイダは,指定された暗号サービスに対して,指定されたアルゴリズムまたは型を実装し,その実装が,指定された属性名と値の組で表される制約条件を満たす場合に,この選択基準を満たす。</target>
        </trans-unit>
        <trans-unit id="fc949cead6b5737ed8a2378bb803e40cc0308221" translate="yes" xml:space="preserve">
          <source>A provider satisfies this selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service.</source>
          <target state="translated">プロバイダは,指定された暗号サービスのために指定されたアルゴリズムまたは型を実装していれば,この選択基準を満たす.</target>
        </trans-unit>
        <trans-unit id="e6ced3920c677959d9711013953a9334773b2c03" translate="yes" xml:space="preserve">
          <source>A provider should document all the key specifications supported by its key factory.</source>
          <target state="translated">プロバイダは、そのキー工場でサポートされているすべてのキー仕様を文書化する必要があります。</target>
        </trans-unit>
        <trans-unit id="26b19895da8d88f1c088d3d43c523eea1300e61e" translate="yes" xml:space="preserve">
          <source>A provider should document all the key specifications supported by its secret key factory. For example, the DES secret-key factory supplied by the &quot;SunJCE&quot; provider supports &lt;code&gt;DESKeySpec&lt;/code&gt; as a transparent representation of DES keys, and that provider's secret-key factory for Triple DES keys supports &lt;code&gt;DESedeKeySpec&lt;/code&gt; as a transparent representation of Triple DES keys.</source>
          <target state="translated">プロバイダーは、秘密鍵ファクトリーによってサポートされるすべての鍵仕様を文書化する必要があります。たとえば、「SunJCE」プロバイダが提供するDES秘密鍵ファクトリは、 &lt;code&gt;DESKeySpec&lt;/code&gt; をDES鍵の透過的な表現としてサポートし、トリプルDES鍵のそのプロバイダの秘密鍵ファクトリは、トリプルDES鍵の透過的な表現として &lt;code&gt;DESedeKeySpec&lt;/code&gt; をサポートします。</target>
        </trans-unit>
        <trans-unit id="b667809afd8c34cefc7f762bfd6fab51fb3ce561" translate="yes" xml:space="preserve">
          <source>A proxy class extends &lt;code&gt;java.lang.reflect.Proxy&lt;/code&gt;.</source>
          <target state="translated">プロキシクラスは &lt;code&gt;java.lang.reflect.Proxy&lt;/code&gt; を拡張します。</target>
        </trans-unit>
        <trans-unit id="615f960dcbdaeb0ef796b32f2cd08b6cb43be786" translate="yes" xml:space="preserve">
          <source>A proxy class has the following properties:</source>
          <target state="translated">プロキシクラスは以下のプロパティを持っています。</target>
        </trans-unit>
        <trans-unit id="a2869cfe379beab005c79c443e4b3f14fb769af4" translate="yes" xml:space="preserve">
          <source>A proxy class implements exactly the interfaces specified at its creation, in the same order.</source>
          <target state="translated">プロキシクラスは、その作成時に指定されたインターフェイスを同じ順番で正確に実装します。</target>
        </trans-unit>
        <trans-unit id="7e49ce6f2d6d424cc20eb3e0490979d0fa2b555b" translate="yes" xml:space="preserve">
          <source>A proxy class implements exactly the interfaces specified at its creation, in the same order. Invoking &lt;a href=&quot;../class#getInterfaces()&quot;&gt;&lt;code&gt;getInterfaces&lt;/code&gt;&lt;/a&gt; on its &lt;code&gt;Class&lt;/code&gt; object will return an array containing the same list of interfaces (in the order specified at its creation), invoking &lt;a href=&quot;../class#getMethods()&quot;&gt;&lt;code&gt;getMethods&lt;/code&gt;&lt;/a&gt; on its &lt;code&gt;Class&lt;/code&gt; object will return an array of &lt;code&gt;Method&lt;/code&gt; objects that include all of the methods in those interfaces, and invoking &lt;code&gt;getMethod&lt;/code&gt; will find methods in the proxy interfaces as would be expected.</source>
          <target state="translated">プロキシクラスは、作成時に指定されたインターフェイスを同じ順序で正確に実装します。 &lt;code&gt;Class&lt;/code&gt; オブジェクトで&lt;a href=&quot;../class#getInterfaces()&quot;&gt; &lt;code&gt;getInterfaces&lt;/code&gt; &lt;/a&gt;を呼び出すと、同じインターフェイスのリストを含む配列が返され（作成時に指定された順序で）、 &lt;code&gt;Class&lt;/code&gt; オブジェクトで&lt;a href=&quot;../class#getMethods()&quot;&gt; &lt;code&gt;getMethods&lt;/code&gt; &lt;/a&gt;を呼び出すと、それらのインターフェイスのすべての &lt;code&gt;Method&lt;/code&gt; を含むMethodオブジェクトの配列が返されます。 &lt;code&gt;getMethod&lt;/code&gt; を呼び出すと、予想どおりにプロキシインターフェイスでメソッドが検索されます。</target>
        </trans-unit>
        <trans-unit id="5c7b32e6843f0bd8df4ce07e9e983f9c2dd4530e" translate="yes" xml:space="preserve">
          <source>A proxy class is &lt;em&gt;final and non-abstract&lt;/em&gt;.</source>
          <target state="translated">プロキシクラスは&lt;em&gt;最終的で非抽象的&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="4d78fbca7a5f7f9302beb9340d42fda5f7c8acaa" translate="yes" xml:space="preserve">
          <source>A proxy instance has the following properties:</source>
          <target state="translated">プロキシインスタンスは以下のプロパティを持っています。</target>
        </trans-unit>
        <trans-unit id="c8123f85683d160c7b20d5bea816c6a9cdd93243" translate="yes" xml:space="preserve">
          <source>A proxy is typically used to access an MXBean in a remote Java virtual machine. An alternative way to create an MXBean proxy is:</source>
          <target state="translated">プロキシは通常、リモートJava仮想マシンのMXBeanにアクセスするために使用されます。MXBeanプロキシを作成する別の方法としては、以下のものがあります。</target>
        </trans-unit>
        <trans-unit id="bc8d12b54b7b01acc09783b19f78291f8efcc6f7" translate="yes" xml:space="preserve">
          <source>A proxy selector that always return &lt;a href=&quot;../../../../java.base/java/net/proxy#NO_PROXY&quot;&gt;&lt;code&gt;Proxy.NO_PROXY&lt;/code&gt;&lt;/a&gt; implying a direct connection.</source>
          <target state="translated">直接接続を意味する&lt;a href=&quot;../../../../java.base/java/net/proxy#NO_PROXY&quot;&gt; &lt;code&gt;Proxy.NO_PROXY&lt;/code&gt; &lt;/a&gt;を常に返すプロキシセレクター。</target>
        </trans-unit>
        <trans-unit id="e833755637b0729921268ab65962c62924b0857a" translate="yes" xml:space="preserve">
          <source>A proxy setting that represents a &lt;code&gt;DIRECT&lt;/code&gt; connection, basically telling the protocol handler not to use any proxying.</source>
          <target state="translated">&lt;code&gt;DIRECT&lt;/code&gt; 接続を表すプロキシ設定。基本的に、プロトコルハンドラにプロキシを使用しないように指示します。</target>
        </trans-unit>
        <trans-unit id="f354b17dc51832b6d211186d5cf971a120bb6b70" translate="yes" xml:space="preserve">
          <source>A proxy setting that represents a &lt;code&gt;DIRECT&lt;/code&gt; connection, basically telling the protocol handler not to use any proxying. Used, for instance, to create sockets bypassing any other global proxy settings (like SOCKS):</source>
          <target state="translated">&lt;code&gt;DIRECT&lt;/code&gt; 接続を表すプロキシ設定。基本的に、プロトコルハンドラにプロキシを使用しないように指示します。たとえば、他のグローバルプロキシ設定（SOCKSなど）をバイパスするソケットを作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="99a860b6a990a0681ec3117ce91eb22fbbf2d3ca" translate="yes" xml:space="preserve">
          <source>A proxy used by a debugger to examine or manipulate some entity in another virtual machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407c40d7e11e903a347fcdb9aa198d91da8d8c8d" translate="yes" xml:space="preserve">
          <source>A proxy used by a debugger to examine or manipulate some entity in another virtual machine. Mirror is the root of the interface hierarchy for this package. Mirrors can be proxies for objects in the target VM (&lt;a href=&quot;objectreference&quot;&gt;&lt;code&gt;ObjectReference&lt;/code&gt;&lt;/a&gt;), primitive values (for example, &lt;a href=&quot;integervalue&quot;&gt;&lt;code&gt;IntegerValue&lt;/code&gt;&lt;/a&gt;), types (for example, &lt;a href=&quot;referencetype&quot;&gt;&lt;code&gt;ReferenceType&lt;/code&gt;&lt;/a&gt;), dynamic application state (for example, &lt;a href=&quot;stackframe&quot;&gt;&lt;code&gt;StackFrame&lt;/code&gt;&lt;/a&gt;), and even debugger-specific constructs (for example, &lt;a href=&quot;request/breakpointrequest&quot;&gt;&lt;code&gt;BreakpointRequest&lt;/code&gt;&lt;/a&gt;). The &lt;a href=&quot;virtualmachine&quot;&gt;&lt;code&gt;VirtualMachine&lt;/code&gt;&lt;/a&gt; itself is also considered a mirror, representing the composite state of the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4cab0842d32adc16d520b73ddea98843a4d9d3" translate="yes" xml:space="preserve">
          <source>A pseudo-type corresponding to a module element.</source>
          <target state="translated">モジュール要素に対応する疑似型。</target>
        </trans-unit>
        <trans-unit id="b46f91bed61e24e029ef85159c86eda25e3a71d6" translate="yes" xml:space="preserve">
          <source>A pseudo-type corresponding to a package element.</source>
          <target state="translated">パッケージ要素に対応する疑似型。</target>
        </trans-unit>
        <trans-unit id="b486b8bfaac8ddad76cc95e09326ce8a1f46face" translate="yes" xml:space="preserve">
          <source>A pseudo-type used where no actual type is appropriate.</source>
          <target state="translated">実際の型が適切でない場合に使用される疑似型。</target>
        </trans-unit>
        <trans-unit id="52de26ecb9825b14655caee56f2634bb6a83b2cb" translate="yes" xml:space="preserve">
          <source>A pseudo-type used where no actual type is appropriate. The kinds of &lt;code&gt;NoType&lt;/code&gt; are:</source>
          <target state="translated">実際のタイプが適切でない場合に使用される疑似タイプ。 &lt;code&gt;NoType&lt;/code&gt; の種類は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1e90dd032f01e32199ad98aa872c3903457e7668" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;double&lt;/code&gt; value is generated as if it's the result of calling the following method with the origin and bound:</source>
          <target state="translated">擬似ランダム &lt;code&gt;double&lt;/code&gt; 値は、次のメソッドをoriginおよびboundで呼び出した結果であるかのように生成されます。</target>
        </trans-unit>
        <trans-unit id="349ffb27395bde59db0d5155ee5147ad53454fa3" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;double&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;#nextDouble()&quot;&gt;&lt;code&gt;nextDouble()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">疑似ランダム &lt;code&gt;double&lt;/code&gt; 値は、メソッド&lt;a href=&quot;#nextDouble()&quot;&gt; &lt;code&gt;nextDouble()&lt;/code&gt; &lt;/a&gt;を呼び出した結果であるかのように生成されます。</target>
        </trans-unit>
        <trans-unit id="75364c69974740760e2102258d4f572653c09fb6" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;double&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;random#nextDouble--&quot;&gt;&lt;code&gt;nextDouble()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">疑似ランダム &lt;code&gt;double&lt;/code&gt; 値は、&lt;a href=&quot;random#nextDouble--&quot;&gt; &lt;code&gt;nextDouble()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出した結果であるかのように生成されます。</target>
        </trans-unit>
        <trans-unit id="8c5dd8c02c45a4aab3524fd4b010df013ea9b7dd" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;int&lt;/code&gt; value is generated as if it's the result of calling the following method with the origin and bound:</source>
          <target state="translated">擬似乱数の &lt;code&gt;int&lt;/code&gt; 値は、オリジンとバインドされた次のメソッドを呼び出した結果であるかのように生成されます。</target>
        </trans-unit>
        <trans-unit id="0dd125df8816f1887b3e27c620c70d2aeb9eb4b9" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;int&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;#nextInt()&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">疑似ランダム &lt;code&gt;int&lt;/code&gt; 値は、メソッド&lt;a href=&quot;#nextInt()&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt;を呼び出した結果であるかのように生成されます。</target>
        </trans-unit>
        <trans-unit id="a03e42a450e90fb0c78448bd8feae33961e15d83" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;int&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;random#nextInt--&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">疑似ランダム &lt;code&gt;int&lt;/code&gt; 値は、&lt;a href=&quot;random#nextInt--&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出した結果であるかのように生成されます。</target>
        </trans-unit>
        <trans-unit id="eb87283f032efcc5874617e4e0bcc58f671273aa" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;long&lt;/code&gt; value is generated as if it's the result of calling the following method with the origin and bound:</source>
          <target state="translated">オリジンとバインドされた次のメソッドを呼び出した結果であるかのように、疑似乱数 &lt;code&gt;long&lt;/code&gt; 値が生成されます。</target>
        </trans-unit>
        <trans-unit id="d6a9a90a44896a0e623f7cbe825147ffe76770ff" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;long&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;#nextLong()&quot;&gt;&lt;code&gt;nextLong()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">疑似ランダム &lt;code&gt;long&lt;/code&gt; 値は、メソッド&lt;a href=&quot;#nextLong()&quot;&gt; &lt;code&gt;nextLong()&lt;/code&gt; &lt;/a&gt;を呼び出した結果であるかのように生成されます。</target>
        </trans-unit>
        <trans-unit id="9449755c8e0ca71a1c153368e6816b2ee3278550" translate="yes" xml:space="preserve">
          <source>A pseudorandom &lt;code&gt;long&lt;/code&gt; value is generated as if it's the result of calling the method &lt;a href=&quot;random#nextLong--&quot;&gt;&lt;code&gt;nextLong()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">疑似ランダム &lt;code&gt;long&lt;/code&gt; 値は、&lt;a href=&quot;random#nextLong--&quot;&gt; &lt;code&gt;nextLong()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出した結果であるかのように生成されます。</target>
        </trans-unit>
        <trans-unit id="4f1ff8a1809138d2eb69bc96f4ac2d5f1cf560bd" translate="yes" xml:space="preserve">
          <source>A public key.</source>
          <target state="translated">公開鍵です。</target>
        </trans-unit>
        <trans-unit id="a5d3e3595d61df29206b582a495aec470cfa967b" translate="yes" xml:space="preserve">
          <source>A public key. This interface contains no methods or constants. It merely serves to group (and provide type safety for) all public key interfaces. Note: The specialized public key interfaces extend this interface. See, for example, the DSAPublicKey interface in &lt;code&gt;java.security.interfaces&lt;/code&gt;.</source>
          <target state="translated">公開鍵。このインターフェイスには、メソッドや定数は含まれていません。これは、すべての公開鍵インターフェースをグループ化（およびタイプセーフを提供）するだけの役割を果たします。注：専用の公開鍵インターフェースは、このインターフェースを拡張します。たとえば、 &lt;code&gt;java.security.interfaces&lt;/code&gt; のDSAPublicKeyインターフェースを参照してください。</target>
        </trans-unit>
        <trans-unit id="be30ebbd81a1cfdbda79a76e9443ffeed1d31c97" translate="yes" xml:space="preserve">
          <source>A punctuation character:&lt;code&gt;\p{IsPunctuation}&lt;/code&gt;</source>
          <target state="translated">句読文字： &lt;code&gt;\p{IsPunctuation}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa53fec930a563b793cfb3b06ebddd3b17d2fcf1" translate="yes" xml:space="preserve">
          <source>A punctuation character:&lt;code&gt;p{IsPunctuation}&lt;/code&gt;</source>
          <target state="translated">句読文字： &lt;code&gt;p{IsPunctuation}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7b8c68356b73af1d1b0e8cbecec217a783ebc4b" translate="yes" xml:space="preserve">
          <source>A push promise is accepted by invoking the given &lt;code&gt;acceptor&lt;/code&gt; function. The &lt;code&gt;acceptor&lt;/code&gt; function must be passed a non-null &lt;code&gt;BodyHandler&lt;/code&gt;, that is to be used to handle the promise's response body. The acceptor function will return a &lt;code&gt;
 CompletableFuture&lt;/code&gt; that completes with the promise's response.</source>
          <target state="translated">プッシュプロミスは、指定された &lt;code&gt;acceptor&lt;/code&gt; 関数を呼び出すことによって受け入れられます。 &lt;code&gt;acceptor&lt;/code&gt; 機能は非nullで渡さなければならない &lt;code&gt;BodyHandler&lt;/code&gt; 約束のレスポンスボディを処理するために使用されるべきです。アクセプター関数は、Promiseの応答で完了する &lt;code&gt; CompletableFuture&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="474d0f3770e0a424c841e6c0e3d8b4ae0d793058" translate="yes" xml:space="preserve">
          <source>A push promise request may be received up to the point where the response body of the initiating client-sent request has been fully received. The delivery of a push promise response, however, is not coordinated with the delivery of the response to the initiating client-sent request.</source>
          <target state="translated">プッシュプロミスリクエストは、開始するクライアント送信リクエストの応答ボディが完全に受信された時点まで受信されてもよい。しかし、プッシュプロミス応答の送達は、開始するクライアン ト送信リクエストに対する応答の送達とは調整されない。</target>
        </trans-unit>
        <trans-unit id="6345c5205d2ee64bf3674e06e8049f6b5c645a44" translate="yes" xml:space="preserve">
          <source>A quadratic parametric curve segment specified with &lt;code&gt;double&lt;/code&gt; coordinates.</source>
          <target state="translated">二 &lt;code&gt;double&lt;/code&gt; 座標で指定された2次パラメトリック曲線セグメント。</target>
        </trans-unit>
        <trans-unit id="5ce6936437b74b218a5472b128a58a32603d7516" translate="yes" xml:space="preserve">
          <source>A quadratic parametric curve segment specified with &lt;code&gt;float&lt;/code&gt; coordinates.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 座標で指定された2次パラメトリック曲線セグメント。</target>
        </trans-unit>
        <trans-unit id="9e9bc11f3589016e70368844a4f5c6189fa59bdb" translate="yes" xml:space="preserve">
          <source>A query expression that represents the matching constraint on the string argument. The returned object will be serialized as an instance of the non-public class  javax.management.MatchQueryExp.</source>
          <target state="translated">文字列引数に対するマッチング制約を表すクエリ式。返されるオブジェクトは、非公開クラス javax.management.MatchQueryExp のインスタンスとしてシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="c48bac1c38528cf0a0bea5f56a7e9f98b9da11a9" translate="yes" xml:space="preserve">
          <source>A query expression that represents the matching constraint on the string argument. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.MatchQueryExp&quot;&gt; javax.management.MatchQueryExp&lt;/a&gt;.</source>
          <target state="translated">文字列引数の一致する制約を表すクエリ式。返されるオブジェクトは、非公開クラス&lt;a href=&quot;../../serialized-form#javax.management.MatchQueryExp&quot;&gt;javax.management.MatchQueryExpの&lt;/a&gt;インスタンスとしてシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="c147e56073938eebcaba2066ea21a82ae0b6089a" translate="yes" xml:space="preserve">
          <source>A query expression that represents the matching constraint on the string argument. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.MatchQueryExp&quot;&gt; javax.management.MatchQueryExp&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd87aace87b360fadc902a07b6f6724a955ccd18" translate="yes" xml:space="preserve">
          <source>A query for &lt;code&gt;LocalDate&lt;/code&gt; returning null if not found.</source>
          <target state="translated">見つからない場合にnull を &lt;code&gt;LocalDate&lt;/code&gt; のクエリ。</target>
        </trans-unit>
        <trans-unit id="9c5fdb320f9fd010e6fc84437fd7efbd9ae2a4f3" translate="yes" xml:space="preserve">
          <source>A query for &lt;code&gt;LocalTime&lt;/code&gt; returning null if not found.</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; が見つからない場合にnullを返すクエリ。</target>
        </trans-unit>
        <trans-unit id="ac9a2eb18e7bfdca419913ea159a721ab7b01523" translate="yes" xml:space="preserve">
          <source>A query for &lt;code&gt;ZoneOffset&lt;/code&gt; returning null if not found.</source>
          <target state="translated">見つからない場合にnull を &lt;code&gt;ZoneOffset&lt;/code&gt; のクエリ。</target>
        </trans-unit>
        <trans-unit id="3e78bc82f9e8f94bc5a735382871c83937265df6" translate="yes" xml:space="preserve">
          <source>A query for the &lt;code&gt;Chronology&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Chronology&lt;/code&gt; クエリ。</target>
        </trans-unit>
        <trans-unit id="39ef1890e85fb1c7facf128d46625e4303c5b931" translate="yes" xml:space="preserve">
          <source>A query for the smallest supported unit.</source>
          <target state="translated">サポートされている最小単位のクエリ。</target>
        </trans-unit>
        <trans-unit id="3f82a322a0e451ead6caf980f1c2ed3196a64f4a" translate="yes" xml:space="preserve">
          <source>A query that provides access to the excess days that were parsed.</source>
          <target state="translated">解析された超過日数へのアクセスを提供するクエリ。</target>
        </trans-unit>
        <trans-unit id="5678eed1c14504f0290f034574f9688caebd613d" translate="yes" xml:space="preserve">
          <source>A query that provides access to whether a leap-second was parsed.</source>
          <target state="translated">うるう秒が解析されたかどうかにアクセスできるクエリ。</target>
        </trans-unit>
        <trans-unit id="af8411cd20f4aa32f91510c63957b78c82b0ec10" translate="yes" xml:space="preserve">
          <source>A question mark ('?') is replaced by a backslash (\) followed by a question mark.</source>
          <target state="translated">クエスチョンマーク('?')は、バックスラッシュ(\)の後にクエスチョンマークが続きます。</target>
        </trans-unit>
        <trans-unit id="e084d41cca85f9090522df2231bb663388166177" translate="yes" xml:space="preserve">
          <source>A question mark (?) or asterisk (*). The two characters represent a question mark or asterisk respectively.</source>
          <target state="translated">クエスチョンマーク(?)またはアスタリスク(*)。この2つの文字はそれぞれクエスチョンマークまたはアスタリスクを表します。</target>
        </trans-unit>
        <trans-unit id="e26d6e4309bdbd3df7b06b56fefc1c673ddfd4ff" translate="yes" xml:space="preserve">
          <source>A queue of text layout tasks.</source>
          <target state="translated">テキストレイアウトタスクのキュー。</target>
        </trans-unit>
        <trans-unit id="c991703c3435fc38e1efa1e781b165d3a35e83cc" translate="yes" xml:space="preserve">
          <source>A quote ('&quot;') is replaced by a backslash (\) followed by a quote.</source>
          <target state="translated">引用符('&quot;&quot;')は、バックスラッシュ(\)の後に引用符が続きます。</target>
        </trans-unit>
        <trans-unit id="65e06fc75c0ec78c2fc622e557a9e1f653f35d84" translate="yes" xml:space="preserve">
          <source>A quote may not appear inside a quoted value except immediately after an odd number of consecutive backslashes.</source>
          <target state="translated">引用符は、奇数個のバックスラッシュの直後を除いて、引用符の中には表示されません。</target>
        </trans-unit>
        <trans-unit id="b264de8abb8722f7f6da9ae38453e8ae94eeb0aa" translate="yes" xml:space="preserve">
          <source>A quote. The two characters represent a quote, and that quote is not considered to terminate the quoted value. An ending closing quote must be present for the quoted value to be valid.</source>
          <target state="translated">引用符のこと。2つの文字は引用符を表し、その引用符は引用符の値を終了させるものとはみなされません。引用符の値を有効にするためには、終了する引用符が存在しなければなりません。</target>
        </trans-unit>
        <trans-unit id="e9a2d077ef11a8cc558d4862f60b67ce7ff22169" translate="yes" xml:space="preserve">
          <source>A random number generator isolated to the current thread.</source>
          <target state="translated">現在のスレッドに分離された乱数発生器。</target>
        </trans-unit>
        <trans-unit id="33185ac95e8bc4fa75b311844397235baffc14d0" translate="yes" xml:space="preserve">
          <source>A random number generator isolated to the current thread. Like the global &lt;a href=&quot;../random&quot;&gt;&lt;code&gt;Random&lt;/code&gt;&lt;/a&gt; generator used by the &lt;a href=&quot;../../lang/math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt; class, a &lt;code&gt;ThreadLocalRandom&lt;/code&gt; is initialized with an internally generated seed that may not otherwise be modified. When applicable, use of &lt;code&gt;ThreadLocalRandom&lt;/code&gt; rather than shared &lt;code&gt;Random&lt;/code&gt; objects in concurrent programs will typically encounter much less overhead and contention. Use of &lt;code&gt;ThreadLocalRandom&lt;/code&gt; is particularly appropriate when multiple tasks (for example, each a &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;) use random numbers in parallel in thread pools.</source>
          <target state="translated">現在のスレッドに分離された乱数ジェネレータ。&lt;a href=&quot;../../lang/math&quot;&gt; &lt;code&gt;Math&lt;/code&gt; &lt;/a&gt;クラスで使用されるグローバル&lt;a href=&quot;../random&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;/a&gt;ジェネレーターと同様に、 &lt;code&gt;ThreadLocalRandom&lt;/code&gt; は、内部で生成されたシードで初期化されます。該当する場合、並行プログラムで共有 &lt;code&gt;Random&lt;/code&gt; オブジェクトではなく &lt;code&gt;ThreadLocalRandom&lt;/code&gt; を使用すると、通常、発生するオーバーヘッドと競合がはるかに少なくなります。 &lt;code&gt;ThreadLocalRandom&lt;/code&gt; の使用は、複数のタスク（たとえば、それぞれが&lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt;）がスレッドプールで並列に乱数を使用する場合に特に適しています。</target>
        </trans-unit>
        <trans-unit id="488c64596c97d4a88323f5f0259654cb1b84108c" translate="yes" xml:space="preserve">
          <source>A randomly generated &lt;code&gt;UUID&lt;/code&gt;</source>
          <target state="translated">ランダムに生成された &lt;code&gt;UUID&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5a4c830c8ae43497d1af863a0e08fd5560aa7cb" translate="yes" xml:space="preserve">
          <source>A read operation might not fill the buffer, and in fact it might not read any bytes at all. Whether or not it does so depends upon the nature and state of the channel. A socket channel in non-blocking mode, for example, cannot read any more bytes than are immediately available from the socket's input buffer; similarly, a file channel cannot read any more bytes than remain in the file. It is guaranteed, however, that if a channel is in blocking mode and there is at least one byte remaining in the buffer then this method will block until at least one byte is read.</source>
          <target state="translated">読み取り操作はバッファを満たさないかもしれませんし、実際には全くバイトを読み込まないかもしれません。読み込みを行うかどうかは、チャネルの性質と状態に依存する。例えば、ノンブロッキングモードのソケットチャネルは、ソケットの入力バッファからすぐに利用可能なバイト数以上のバイトを読み込むことはできません。しかし、ブロッキングモードの場合、バッファに少なくとも1バイト以上のバイトが残っている場合、この方法は少なくとも1バイトが読み込まれるまでブロッキングすることが保証されている。</target>
        </trans-unit>
        <trans-unit id="9d0a9dce3565a63964117ea0a8dfaa902858d525" translate="yes" xml:space="preserve">
          <source>A read-only empty PermissionCollection instance.</source>
          <target state="translated">読み取り専用の空のPermissionCollectionインスタンス。</target>
        </trans-unit>
        <trans-unit id="cf318b54832df39f518feb3e2d157a2264341c15" translate="yes" xml:space="preserve">
          <source>A read-only view of a set of HTTP headers.</source>
          <target state="translated">HTTP ヘッダのセットの読み取り専用ビュー。</target>
        </trans-unit>
        <trans-unit id="3c1a14e276d6d75e03c30962d46fa74775569f4b" translate="yes" xml:space="preserve">
          <source>A read-write lock allows for a greater level of concurrency in accessing shared data than that permitted by a mutual exclusion lock. It exploits the fact that while only a single thread at a time (a &lt;em&gt;writer&lt;/em&gt; thread) can modify the shared data, in many cases any number of threads can concurrently read the data (hence &lt;em&gt;reader&lt;/em&gt; threads). In theory, the increase in concurrency permitted by the use of a read-write lock will lead to performance improvements over the use of a mutual exclusion lock. In practice this increase in concurrency will only be fully realized on a multi-processor, and then only if the access patterns for the shared data are suitable.</source>
          <target state="translated">読み取り/書き込みロックにより、共有データへのアクセスにおいて、相互排他ロックで許可されるよりも高いレベルの同時実行性が可能になります。それは時間（時、一方のみの単一スレッドという事実利用&lt;em&gt;ライター&lt;/em&gt;（したがってスレッド）が共有データを変更することができるが、多くの場合、スレッドの任意の数が同時にデータを読み取ることができる&lt;em&gt;リーダ&lt;/em&gt;スレッド）。理論的には、読み取り/書き込みロックの使用により許可される同時実行性の増加により、相互排他ロックの使用よりもパフォーマンスが向上します。実際には、同時実行性のこの増加は、マルチプロセッサでのみ完全に実現され、共有データのアクセスパターンが適切である場合にのみ実現されます。</target>
        </trans-unit>
        <trans-unit id="6a884474a7fd8fa15566b3c46e080db6b54715b1" translate="yes" xml:space="preserve">
          <source>A reader for which all images are guaranteed to be tiled, or are guaranteed not to be tiled, may return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; respectively without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds.</source>
          <target state="translated">すべての画像がタイリングされることが保証されている、またはタイリングされていないことが保証されているリーダーは、画像データにアクセスせずにそれぞれ &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; を返す場合があります。このような場合、入力ソースが設定されていなかったり、画像インデックスが範囲外であっても、例外をスローする必要はありません。</target>
        </trans-unit>
        <trans-unit id="a119cfd299dd82f3eb2b90d7f7893712a9085897" translate="yes" xml:space="preserve">
          <source>A reader for which all images are guaranteed to support easy random access, or are guaranteed not to support easy random access, may return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; respectively without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds.</source>
          <target state="translated">すべての画像が簡単なランダムアクセスをサポートすることが保証されている、または簡単なランダムアクセスをサポートしないことが保証されているリーダーは、画像データにアクセスせずにそれぞれ &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; を返す場合があります。このような場合、入力ソースが設定されていなかったり、画像インデックスが範囲外であっても、例外をスローする必要はありません。</target>
        </trans-unit>
        <trans-unit id="35dcd41910e274aca3f1af552f0db2276e3cea66" translate="yes" xml:space="preserve">
          <source>A reader for which the tile grid X offset always has the same value (usually 0), may return the value without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds.</source>
          <target state="translated">タイルグリッドXオフセットが常に同じ値(通常は0)であるリーダは、画像データにアクセスせずに値を返すことがあります。このような場合、入力ソースが設定されていなかったり、画像インデックスが圏外であっても例外を投げる必要はありません。</target>
        </trans-unit>
        <trans-unit id="bbd67a5d6af16685ac4e9d2bf54d0e78864b1b1b" translate="yes" xml:space="preserve">
          <source>A reader for which the tile grid Y offset always has the same value (usually 0), may return the value without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds.</source>
          <target state="translated">タイルグリッド Y オフセットが常に同じ値(通常は 0)であるリーダは、画像データにアクセスせずに値を返すことがあります。この場合、入力ソースが設定されていなかったり、画像インデックスが圏外であっても例外を投げる必要はありません。</target>
        </trans-unit>
        <trans-unit id="867f5bd8fc867c56578d5a8159e1e056b1f3cc25" translate="yes" xml:space="preserve">
          <source>A reader plug-in may choose whether or not to expose tiling that is present in the image as it is stored. It may even choose to advertise tiling when none is explicitly present. In general, tiling should only be advertised if there is some advantage (in speed or space) to accessing individual tiles. Regardless of whether the reader advertises tiling, it must be capable of reading an arbitrary rectangular region specified in an &lt;code&gt;ImageReadParam&lt;/code&gt;.</source>
          <target state="translated">リーダープラグインは、画像が保存されているときに画像に存在するタイリングを公開するかどうかを選択できます。明示的に存在しない場合は、タイリングをアドバタイズすることもできます。一般に、タイルは、個々のタイルへのアクセスに（速度またはスペースの点で）いくつかの利点がある場合にのみアドバタイズされます。リーダーがタイリングをアドバタイズするかどうかに関係なく、リーダーは &lt;code&gt;ImageReadParam&lt;/code&gt; で指定された任意の長方形領域を読み取ることができる必要があります。</target>
        </trans-unit>
        <trans-unit id="651daf6a92d260dfff9f7294e86a24dc3c2c6a16" translate="yes" xml:space="preserve">
          <source>A reader that does not support thumbnails need not implement any of the thumbnail-related methods.</source>
          <target state="translated">サムネイルをサポートしていないリーダーは、サムネイル関連のメソッドを実装する必要はありません。</target>
        </trans-unit>
        <trans-unit id="a06621c1400cf9d03f59eb5e3390fe1231798330" translate="yes" xml:space="preserve">
          <source>A receive method is any of the &lt;code&gt;onText&lt;/code&gt;, &lt;code&gt;onBinary&lt;/code&gt;, &lt;code&gt;onPing&lt;/code&gt;, &lt;code&gt;onPong&lt;/code&gt; and &lt;code&gt;onClose&lt;/code&gt; methods of &lt;code&gt;Listener&lt;/code&gt;. WebSocket initiates a receive operation by invoking a receive method on the listener. The listener then must return a &lt;code&gt;CompletionStage&lt;/code&gt; which completes once the operation has completed.</source>
          <target state="translated">この方法は、のいずれかである受信 &lt;code&gt;onText&lt;/code&gt; 、 &lt;code&gt;onBinary&lt;/code&gt; 、 &lt;code&gt;onPing&lt;/code&gt; 、 &lt;code&gt;onPong&lt;/code&gt; と &lt;code&gt;onClose&lt;/code&gt; 方法 &lt;code&gt;Listener&lt;/code&gt; 。WebSocketは、リスナーでreceiveメソッドを呼び出すことによって受信操作を開始します。次に、リスナーは、操作が完了すると完了する &lt;code&gt;CompletionStage&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="fff4915720e9d39d5a867ff36537e4bf3f12933c" translate="yes" xml:space="preserve">
          <source>A receiver of messages.</source>
          <target state="translated">メッセージの受け手。</target>
        </trans-unit>
        <trans-unit id="634e66ef5722485160455f61a91123b81040660a" translate="yes" xml:space="preserve">
          <source>A receiver of messages. The methods in this interface are invoked in strict sequential order for each &lt;a href=&quot;flow.subscription&quot;&gt;&lt;code&gt;Flow.Subscription&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メッセージの受信者。このインターフェースのメソッドは、&lt;a href=&quot;flow.subscription&quot;&gt; &lt;code&gt;Flow.Subscription&lt;/code&gt; &lt;/a&gt;ごとに厳密な順序で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4e72e270ec9d9703b4faefd370a4178908ca5444" translate="yes" xml:space="preserve">
          <source>A record class has the following mandated members: a &lt;em&gt;canonical constructor&lt;/em&gt;, which must provide at least as much access as the record class and whose descriptor is the same as the record descriptor; a private final field corresponding to each component, whose name and type are the same as that of the component; a public accessor method corresponding to each component, whose name and return type are the same as that of the component. If not explicitly declared in the body of the record, implicit implementations for these members are provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7cda256eb4e027f8fdfa944cc73e68db59be8b7" translate="yes" xml:space="preserve">
          <source>A record class that &lt;code&gt;implements&lt;/code&gt;&lt;a href=&quot;../io/serializable&quot;&gt;&lt;code&gt;Serializable&lt;/code&gt;&lt;/a&gt; is said to be a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f71c1d92a94033a326f188b1311147da11d35c" translate="yes" xml:space="preserve">
          <source>A record component of a &lt;code&gt;record&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc92466136dd557f1efda1977cd4103f7088de0" translate="yes" xml:space="preserve">
          <source>A record declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4c68eda808a541ab1e9c00de08f2d0f0f35fd4" translate="yes" xml:space="preserve">
          <source>A record declaration. A &lt;code&gt;SubKind&lt;/code&gt; of &lt;a href=&quot;snippet.kind#TYPE_DECL&quot;&gt;&lt;code&gt;Snippet.Kind.TYPE_DECL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448d5462aa764cf8ed2433b656ac7a8922e5d984" translate="yes" xml:space="preserve">
          <source>A record representing the layout state of a child view.</source>
          <target state="translated">子ビューのレイアウト状態を表すレコード。</target>
        </trans-unit>
        <trans-unit id="66101c9ba2e0e8a9722b3d56a8f3dd1dde9f491c" translate="yes" xml:space="preserve">
          <source>A record representing the layout state of a child view. It is runnable as a task on another thread. All access to the child view that is based upon a read-lock on the model should synchronize on this object (i.e. The layout thread and the GUI thread can both have a read lock on the model at the same time and are not protected from each other). Access to a child view hierarchy is serialized via synchronization on the ChildState instance.</source>
          <target state="translated">子ビューのレイアウト状態を表すレコード。別のスレッドのタスクとして実行可能です。モデル上のリードロックに基づく子ビューへのアクセスはすべて、このオブジェクト上で同期化されなければなりません(レイアウトスレッドとGUIスレッドは同時にモデル上のリードロックを持つことができ、お互いに保護されていません)。子ビュー階層へのアクセスは、ChildStateインスタンスの同期を介してシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="6584f15329fdd87f7ecf990a95341032cd0f7196" translate="yes" xml:space="preserve">
          <source>A record type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f82aa7af0668141b02456a973f05eb6d228285d" translate="yes" xml:space="preserve">
          <source>A recorded Java class loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ba0c567bb8ec27adfb1ba4f0e91e83829dbf42" translate="yes" xml:space="preserve">
          <source>A recorded Java thread group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c71389dd06639ee8e1a65973a21423ec9b7ed2" translate="yes" xml:space="preserve">
          <source>A recorded Java type, such as a class or an interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac12da9e32862457c542ec13d583943a1eb33f1" translate="yes" xml:space="preserve">
          <source>A recorded event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3755c86aaa0fe04fd6f029ab7a03f84e67d21f9" translate="yes" xml:space="preserve">
          <source>A recorded frame in a stack trace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a26e4a58c745ab9b460a44345fb8fc15862f32" translate="yes" xml:space="preserve">
          <source>A recorded method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1f6883f68596628dbf06de4741075f2bf3b3a1" translate="yes" xml:space="preserve">
          <source>A recorded stack trace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd0a498d0ba95b8b611b998317684d90fe8d526" translate="yes" xml:space="preserve">
          <source>A recorded thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd15cdc95a079e01307d4fb1077f058b0e8b0ad" translate="yes" xml:space="preserve">
          <source>A recording becomes available when it is created. It becomes unavailable when it is in the &lt;code&gt;CLOSED&lt;/code&gt; state, typically after a call to &lt;a href=&quot;recording#close()&quot;&gt;&lt;code&gt;Recording.close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bb1816477c407c365782a26d8950b3715c80d0" translate="yes" xml:space="preserve">
          <source>A recording file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc29b5fbf9f70378211c52387d29f6578870f17" translate="yes" xml:space="preserve">
          <source>A recording stream produces events from the current JVM (Java Virtual Machine).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd21b117a7dbcda45861fd498219269592d37e17" translate="yes" xml:space="preserve">
          <source>A recording that is stopped can't be restarted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ba4c734e819af6071d0e01b9a0b47db20258b7" translate="yes" xml:space="preserve">
          <source>A rectangle indicating this component's bounds; &lt;code&gt;null&lt;/code&gt; if this object is not on the screen.</source>
          <target state="translated">このコンポーネントの境界を示す長方形。このオブジェクトが画面に表示されていない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="116350179f1209d5b8e48e44fe5d6ce7864fde75" translate="yes" xml:space="preserve">
          <source>A rectangle indicating this component's bounds; null if this object is not on the screen.</source>
          <target state="translated">このオブジェクトが画面上にない場合はnull。</target>
        </trans-unit>
        <trans-unit id="7e38e744edc750586d21b1f410ff770f04b9e587" translate="yes" xml:space="preserve">
          <source>A rectangle used for general layout calculations in order to avoid constructing many new Rectangles on the fly.</source>
          <target state="translated">矩形は、その場で多くの新しい矩形を作成しないようにするために、一般的なレイアウト計算に使用されます。</target>
        </trans-unit>
        <trans-unit id="0be2b7ed75dd5db4a77d4eb6f31175f72790f46b" translate="yes" xml:space="preserve">
          <source>A recursive result-bearing &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">再帰的な結果を持つ&lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a81fc059d2c4f24cc38eba91bff7746f9766fc6" translate="yes" xml:space="preserve">
          <source>A recursive resultless &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">再帰的な結果のない&lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6300992022ef59137e609e78d48653dc142fae21" translate="yes" xml:space="preserve">
          <source>A recursive resultless &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;. This class establishes conventions to parameterize resultless actions as &lt;code&gt;Void&lt;/code&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;s. Because &lt;code&gt;null&lt;/code&gt; is the only valid value of type &lt;code&gt;Void&lt;/code&gt;, methods such as &lt;code&gt;join&lt;/code&gt; always return &lt;code&gt;null&lt;/code&gt; upon completion.</source>
          <target state="translated">再帰的な結果のない&lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt;。このクラスは、結果のないアクションを &lt;code&gt;Void&lt;/code&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; としてパラメーター化するための規則を確立します。 &lt;code&gt;null&lt;/code&gt; は &lt;code&gt;Void&lt;/code&gt; 型の唯一の有効な値であるため、 &lt;code&gt;join&lt;/code&gt; などのメソッドは完了時に常に &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1cb5a53925a15d8d640449158f0ca3038779f2ad" translate="yes" xml:space="preserve">
          <source>A reentrant mutual exclusion &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; with the same basic behavior and semantics as the implicit monitor lock accessed using &lt;code&gt;synchronized&lt;/code&gt; methods and statements, but with extended capabilities.</source>
          <target state="translated">基本的な動作とセマンティクスが、 &lt;code&gt;synchronized&lt;/code&gt; メソッドとステートメントを使用してアクセスされる暗黙のモニターロックと同じですが、拡張機能を備えた、再入可能な相互排他&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04ecfdbafe40a0c89cc49b68848d977d5074ada4" translate="yes" xml:space="preserve">
          <source>A reference object, blocking until one becomes available</source>
          <target state="translated">参照オブジェクトで、利用可能になるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="672ba6654ac391d503ee81be4f5c402100ae4a62" translate="yes" xml:space="preserve">
          <source>A reference object, if one was available within the specified timeout period, otherwise &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">指定されたタイムアウト期間内に参照オブジェクトが使用可能であった場合は参照オブジェクト、それ以外の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06af76cd96533be1c41483691d0275d471641b26" translate="yes" xml:space="preserve">
          <source>A reference object, if one was immediately available, otherwise &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">すぐに利用できる場合は参照オブジェクト、それ以外の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8919f8790ed9d4c040586b362295a1be11a5f8d5" translate="yes" xml:space="preserve">
          <source>A reference to a java class is written in the form &amp;lt;class&amp;gt;javax.swing.JButton&amp;lt;/class&amp;gt;.</source>
          <target state="translated">Javaクラスへの参照は、&amp;lt;class&amp;gt; javax.swing.JButton &amp;lt;/ class&amp;gt;の形式で記述されます。</target>
        </trans-unit>
        <trans-unit id="4ae50ec50d9246a70bb6c354fb878049cf49f660" translate="yes" xml:space="preserve">
          <source>A reference to a module with the given name or an empty &lt;code&gt;Optional&lt;/code&gt; if not found</source>
          <target state="translated">指定された名前または空のモジュールへの参照 &lt;code&gt;Optional&lt;/code&gt; が見つからない場合</target>
        </trans-unit>
        <trans-unit id="e10b42e6b6db14161464cbda75b773fc826c31d1" translate="yes" xml:space="preserve">
          <source>A reference to a module's content.</source>
          <target state="translated">モジュールの内容への参照。</target>
        </trans-unit>
        <trans-unit id="3f2dbcaad020f19ddb81ac705d49ea2f43e55135" translate="yes" xml:space="preserve">
          <source>A reference to a service used by a module.</source>
          <target state="translated">モジュールが使用するサービスへの参照。</target>
        </trans-unit>
        <trans-unit id="350f2c6afc92d7c05299564aab42eafe038acf67" translate="yes" xml:space="preserve">
          <source>A reference to an array is written using the &quot;array&quot; tag. The &quot;class&quot; and &quot;length&quot; attributes specify the sub-type of the array and its length respectively.</source>
          <target state="translated">配列への参照は、&quot;array &quot;タグを使って書き込まれます。class&quot; と &quot;length&quot; 属性は、それぞれ配列のサブタイプと長さを指定します。</target>
        </trans-unit>
        <trans-unit id="73826c2a6d54068c63f0249d63bcc67824b94724" translate="yes" xml:space="preserve">
          <source>A reference to the Exception if one was thrown; null if no Exception was thrown or if this InvocationEvent does not catch exceptions</source>
          <target state="translated">例外がスローされた場合の例外への参照。</target>
        </trans-unit>
        <trans-unit id="87179d74d1fc8f43458ebcda85a770e65a5a5b74" translate="yes" xml:space="preserve">
          <source>A reference to the Throwable if one was thrown; null if no Throwable was thrown or if this InvocationEvent does not catch Throwables</source>
          <target state="translated">Throwable がスローされた場合の Throwable への参照、Throwable がスローされなかった場合、またはこの InvocationEvent が Throwable をキャッチしなかった場合は null</target>
        </trans-unit>
        <trans-unit id="fce9f2f5a454ee93f2c297c9ee7fb38e95a6dd71" translate="yes" xml:space="preserve">
          <source>A reference to this &lt;code&gt;Appendable&lt;/code&gt;</source>
          <target state="translated">この &lt;code&gt;Appendable&lt;/code&gt; への参照</target>
        </trans-unit>
        <trans-unit id="40f77ba4ee06e2db8298d41927f9ba32b14c39a0" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile int&lt;/code&gt; fields of designated classes.</source>
          <target state="translated">指定されたクラスの指定された &lt;code&gt;volatile int&lt;/code&gt; フィールドへのアトミック更新を可能にするリフレクションベースのユーティリティ。</target>
        </trans-unit>
        <trans-unit id="7e2b53980b1820a7ffe2d6d89f81034a3f52c1d8" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile int&lt;/code&gt; fields of designated classes. This class is designed for use in atomic data structures in which several fields of the same node are independently subject to atomic updates.</source>
          <target state="translated">指定されたクラスの指定された &lt;code&gt;volatile int&lt;/code&gt; フィールドへのアトミック更新を可能にするリフレクションベースのユーティリティ。このクラスは、同じノードのいくつかのフィールドが独立してアトミック更新の対象となるアトミックデータ構造で使用するために設計されています。</target>
        </trans-unit>
        <trans-unit id="62ef22f6088afcedd2b57259a251e15a91d2a19a" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile long&lt;/code&gt; fields of designated classes.</source>
          <target state="translated">指定されたクラスの指定された &lt;code&gt;volatile long&lt;/code&gt; フィールドへのアトミック更新を可能にするリフレクションベースのユーティリティ。</target>
        </trans-unit>
        <trans-unit id="f64d3fe565b074349f8d34af10a23fad8d736a9d" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile long&lt;/code&gt; fields of designated classes. This class is designed for use in atomic data structures in which several fields of the same node are independently subject to atomic updates.</source>
          <target state="translated">指定されたクラスの指定された &lt;code&gt;volatile long&lt;/code&gt; フィールドへのアトミック更新を可能にするリフレクションベースのユーティリティ。このクラスは、同じノードのいくつかのフィールドが独立してアトミック更新の対象となるアトミックデータ構造で使用するために設計されています。</target>
        </trans-unit>
        <trans-unit id="c5bba777cabc2754604b16f480628e723025c315" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile&lt;/code&gt; reference fields of designated classes.</source>
          <target state="translated">指定されたクラスの指定された &lt;code&gt;volatile&lt;/code&gt; 参照フィールドへのアトミック更新を可能にするリフレクションベースのユーティリティ。</target>
        </trans-unit>
        <trans-unit id="00892eb028af7eaca0b0c67c0879a21e04e9cf9a" translate="yes" xml:space="preserve">
          <source>A reflection-based utility that enables atomic updates to designated &lt;code&gt;volatile&lt;/code&gt; reference fields of designated classes. This class is designed for use in atomic data structures in which several reference fields of the same node are independently subject to atomic updates. For example, a tree node might be declared as</source>
          <target state="translated">指定されたクラスの指定された &lt;code&gt;volatile&lt;/code&gt; 参照フィールドへのアトミック更新を可能にするリフレクションベースのユーティリティ。このクラスは、同じノードのいくつかの参照フィールドが独立してアトミック更新の対象となるアトミックデータ構造で使用するために設計されています。たとえば、ツリーノードは次のように宣言されます。</target>
        </trans-unit>
        <trans-unit id="96f55a10be3cecb8fb51d4417ac62c4173ae8d9b" translate="yes" xml:space="preserve">
          <source>A region of a file may be &lt;a href=&quot;#lock(long,long,boolean,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; against access by other programs.</source>
          <target state="translated">ファイルの領域は、他のプログラムによるアクセスに対して&lt;a href=&quot;#lock(long,long,boolean,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;可能性があります。</target>
        </trans-unit>
        <trans-unit id="19a6ca7d310b007f30dbfe6771f3c05ce7388326" translate="yes" xml:space="preserve">
          <source>A region of a file may be &lt;a href=&quot;#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt;&lt;code&gt;&lt;i&gt;mapped&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; directly into memory; for large files this is often much more efficient than invoking the usual &lt;code&gt;read&lt;/code&gt; or &lt;code&gt;write&lt;/code&gt; methods.</source>
          <target state="translated">ファイルの領域は、メモリに直接&lt;a href=&quot;#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt; &lt;code&gt;&lt;i&gt;mapped&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;できます。大きなファイルの場合、これは通常の &lt;code&gt;read&lt;/code&gt; または &lt;code&gt;write&lt;/code&gt; メソッドを呼び出すよりもはるかに効率的です。</target>
        </trans-unit>
        <trans-unit id="7aef73b938bec112bb6e27f046c620bbab3f13f5" translate="yes" xml:space="preserve">
          <source>A region of a file may be &lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; against access by other programs.</source>
          <target state="translated">ファイルの領域は、他のプログラムによるアクセスに対して&lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;場合があります。</target>
        </trans-unit>
        <trans-unit id="986e19cabf09c2b5bb8f5bb41c5057eff866eba5" translate="yes" xml:space="preserve">
          <source>A region of a file may be &lt;a href=&quot;filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt;&lt;code&gt;&lt;i&gt;mapped&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; directly into memory; for large files this is often much more efficient than invoking the usual &lt;code&gt;read&lt;/code&gt; or &lt;code&gt;write&lt;/code&gt; methods.</source>
          <target state="translated">ファイルの領域は、メモリに直接&lt;a href=&quot;filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt; &lt;code&gt;&lt;i&gt;mapped&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;できます。大きなファイルの場合、これは通常の &lt;code&gt;read&lt;/code&gt; または &lt;code&gt;write&lt;/code&gt; メソッドを呼び出すよりもはるかに効率的です。</target>
        </trans-unit>
        <trans-unit id="6ed5fce3c0b65ae32c0e5d7426d44ead13fd5ca7" translate="yes" xml:space="preserve">
          <source>A region of a file may be &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; against access by other programs.</source>
          <target state="translated">ファイルの領域は、他のプログラムによるアクセスに対して&lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;&lt;i&gt;locked&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;場合があります。</target>
        </trans-unit>
        <trans-unit id="3b5ff16856ff2869ff88908e4046d1b1be295d7f" translate="yes" xml:space="preserve">
          <source>A region of a file may be mapped into memory in one of three modes:</source>
          <target state="translated">ファイルの領域は、3つのモードのうちの1つでメモリにマッピングされます。</target>
        </trans-unit>
        <trans-unit id="59bf8d4bec6d055663cd61607002845b757308c9" translate="yes" xml:space="preserve">
          <source>A registered event class can write data to Flight Recorder and event metadata can be obtained by invoking &lt;a href=&quot;flightrecorder#getEventTypes()&quot;&gt;&lt;code&gt;FlightRecorder.getEventTypes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f74d623670ef8ac431e94f0bb98af4e602455a" translate="yes" xml:space="preserve">
          <source>A registered listener becomes deregistered when:</source>
          <target state="translated">登録されたリスナーが登録を解除された時点で、リスナーは登録を解除された状態になります。</target>
        </trans-unit>
        <trans-unit id="2adeb89f45dc07b4400a747cef47b81ffecf1049" translate="yes" xml:space="preserve">
          <source>A registry for Image I/O service provider instances.</source>
          <target state="translated">画像I/Oサービスプロバイダのインスタンスのレジストリ。</target>
        </trans-unit>
        <trans-unit id="8c505d5b7a0d2f089f5e07f0d38ee3be4e6de6a0" translate="yes" xml:space="preserve">
          <source>A registry for Image I/O service provider instances. Service provider classes may be discovered at runtime by the mechanisms documented in &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt;. The intent is that it be relatively inexpensive to load and inspect all available Image I/O service provider classes. These classes may then be used to locate and instantiate more heavyweight classes that will perform actual work, in this case instances of &lt;code&gt;ImageReader&lt;/code&gt;, &lt;code&gt;ImageWriter&lt;/code&gt;, &lt;code&gt;ImageTranscoder&lt;/code&gt;, &lt;code&gt;ImageInputStream&lt;/code&gt;, and &lt;code&gt;ImageOutputStream&lt;/code&gt;. Service providers included in the Java runtime are automatically loaded as soon as this class is instantiated.</source>
          <target state="translated">イメージI / Oサービスプロバイダーインスタンスのレジストリ。サービスプロバイダークラスは、&lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; に&lt;/a&gt;記載されているメカニズムによって実行時に検出される場合があります。その目的は、利用可能なすべてのイメージI / Oサービスプロバイダークラスをロードして検査するのが比較的安価であることです。次に、これらのクラスを使用して、実際の作業を &lt;code&gt;ImageTranscoder&lt;/code&gt; より &lt;code&gt;ImageInputStream&lt;/code&gt; クラス（この場合は、 &lt;code&gt;ImageReader&lt;/code&gt; 、 &lt;code&gt;ImageWriter&lt;/code&gt; 、ImageTranscoder、ImageInputStream、および &lt;code&gt;ImageOutputStream&lt;/code&gt; )を見つけてインスタンス化できます。 Javaランタイムに含まれるサービスプロバイダーは、このクラスがインスタンス化されるとすぐに自動的にロードされます。</target>
        </trans-unit>
        <trans-unit id="f6ea3557db4d25afb8913a2730c6bdafbafc851d" translate="yes" xml:space="preserve">
          <source>A registry for service provider instances for Image I/O service types.</source>
          <target state="translated">画像I/Oサービスタイプのサービスプロバイダインスタンス用のレジストリ。</target>
        </trans-unit>
        <trans-unit id="796ce01fe357cfe1131906cfe0da8f399d6b1c53" translate="yes" xml:space="preserve">
          <source>A registry for service provider instances.</source>
          <target state="translated">サービスプロバイダインスタンスのレジストリ。</target>
        </trans-unit>
        <trans-unit id="8cc7ea1f17a9b34b3a301d78fcc3206b01129af0" translate="yes" xml:space="preserve">
          <source>A registry for service provider instances. Service provider classes may be detected at run time by means of meta-information in the JAR files containing them. The intent is that it be relatively inexpensive to load and inspect all available service provider classes. These classes may them be used to locate and instantiate more heavyweight classes that will perform actual work, in this case instances of &lt;code&gt;ImageReader&lt;/code&gt;, &lt;code&gt;ImageWriter&lt;/code&gt;, &lt;code&gt;ImageTranscoder&lt;/code&gt;, &lt;code&gt;ImageInputStream&lt;/code&gt;, and &lt;code&gt;ImageOutputStream&lt;/code&gt;.</source>
          <target state="translated">サービスプロバイダーインスタンスのレジストリ。サービスプロバイダークラスは、それらを含むJARファイルのメタ情報によって実行時に検出される場合があります。その目的は、使用可能なすべてのサービスプロバイダークラスをロードして検査するのが比較的安価であることです。これらのクラスは、実際の作業を &lt;code&gt;ImageTranscoder&lt;/code&gt; より &lt;code&gt;ImageInputStream&lt;/code&gt; クラス（この場合は &lt;code&gt;ImageReader&lt;/code&gt; 、 &lt;code&gt;ImageWriter&lt;/code&gt; 、ImageTranscoder、ImageInputStream、および &lt;code&gt;ImageOutputStream&lt;/code&gt; のインスタンス）を見つけてインスタンス化するために使用できます。</target>
        </trans-unit>
        <trans-unit id="b06c31cba6df7f439a79aa3ae1390ce3824b0549" translate="yes" xml:space="preserve">
          <source>A regular expression, specified as a string, must first be compiled into an instance of this class. The resulting pattern can then be used to create a &lt;a href=&quot;matcher&quot;&gt;&lt;code&gt;Matcher&lt;/code&gt;&lt;/a&gt; object that can match arbitrary &lt;a href=&quot;../../lang/charsequence&quot;&gt;character sequences&lt;/a&gt; against the regular expression. All of the state involved in performing a match resides in the matcher, so many matchers can share the same pattern.</source>
          <target state="translated">文字列として指定された正規表現は、最初にこのクラスのインスタンスにコンパイルされる必要があります。結果のパターンを使用して、任意の&lt;a href=&quot;../../lang/charsequence&quot;&gt;文字シーケンス&lt;/a&gt;を正規表現と照合できる&lt;a href=&quot;matcher&quot;&gt; &lt;code&gt;Matcher&lt;/code&gt; &lt;/a&gt;オブジェクトを作成できます。マッチの実行に関与するすべての状態はマッチャーに存在するため、多くのマッチャーが同じパターンを共有できます。</target>
        </trans-unit>
        <trans-unit id="bfbdeb6516079093b7ec45a50b1b3abe285be4b9" translate="yes" xml:space="preserve">
          <source>A relation instance can be created explicitly, as an object implementing the &lt;a href=&quot;relation&quot;&gt;&lt;code&gt;Relation&lt;/code&gt;&lt;/a&gt; interface, typically a &lt;a href=&quot;relationsupport&quot;&gt;&lt;code&gt;RelationSupport&lt;/code&gt;&lt;/a&gt;. (A &lt;code&gt;RelationSupport&lt;/code&gt; is itself a valid MBean, so it can be registered in the MBean Server, though this is not required.) Alternatively, a relation instance can be created implicitly using the Relation Service's &lt;a href=&quot;relationservicembean#createRelation(java.lang.String,java.lang.String,javax.management.relation.RoleList)&quot;&gt;&lt;code&gt;createRelation&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">リレーションインスタンスは、&lt;a href=&quot;relation&quot;&gt; &lt;code&gt;Relation&lt;/code&gt; &lt;/a&gt;インターフェイスを実装するオブジェクト（通常は&lt;a href=&quot;relationsupport&quot;&gt; &lt;code&gt;RelationSupport&lt;/code&gt; &lt;/a&gt;）として明示的に作成できます。（ &lt;code&gt;RelationSupport&lt;/code&gt; はそれ自体が有効なMBeanであるため、必須ではありませんが、MBeanサーバーに登録できます。）または、RelationServiceの&lt;a href=&quot;relationservicembean#createRelation(java.lang.String,java.lang.String,javax.management.relation.RoleList)&quot;&gt; &lt;code&gt;createRelation&lt;/code&gt; &lt;/a&gt;メソッドを使用して暗黙的にリレーションインスタンスを作成できます。</target>
        </trans-unit>
        <trans-unit id="84baa6ec0a9b50f4bedf3f108bed7c1a5d83f975" translate="yes" xml:space="preserve">
          <source>A relation instance can be created explicitly, as an object implementing the &lt;a href=&quot;relation&quot;&gt;&lt;code&gt;Relation&lt;/code&gt;&lt;/a&gt; interface, typically a &lt;a href=&quot;relationsupport&quot;&gt;&lt;code&gt;RelationSupport&lt;/code&gt;&lt;/a&gt;. (A &lt;code&gt;RelationSupport&lt;/code&gt; is itself a valid MBean, so it can be registered in the MBean Server, though this is not required.) Alternatively, a relation instance can be created implicitly using the Relation Service's &lt;a href=&quot;relationservicembean#createRelation-java.lang.String-java.lang.String-javax.management.relation.RoleList-&quot;&gt;&lt;code&gt;createRelation&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;relation&quot;&gt; &lt;code&gt;Relation&lt;/code&gt; &lt;/a&gt;インスタンスは、Relationインターフェースを実装するオブジェクト（通常は&lt;a href=&quot;relationsupport&quot;&gt; &lt;code&gt;RelationSupport&lt;/code&gt; &lt;/a&gt;）として明示的に作成できます。（ &lt;code&gt;RelationSupport&lt;/code&gt; 自体は有効なMBeanであるため、MBeanサーバーに登録できますが、これは必須ではありません。）または、関係サービスの&lt;a href=&quot;relationservicembean#createRelation-java.lang.String-java.lang.String-javax.management.relation.RoleList-&quot;&gt; &lt;code&gt;createRelation&lt;/code&gt; &lt;/a&gt;メソッドを使用して、関係インスタンスを暗黙的に作成することもできます。</target>
        </trans-unit>
        <trans-unit id="e34ea165e026e514c6feec0e60a888d6555eca96" translate="yes" xml:space="preserve">
          <source>A relation or reset character not followed by a text-argument (e.g. &quot;a &amp;lt; ,b&quot;).</source>
          <target state="translated">テキスト引数が続かない関係またはリセット文字（例： &quot;a &amp;lt;、b&quot;）。</target>
        </trans-unit>
        <trans-unit id="94200c0502fdfc147b5924ea45eb6f684df09894" translate="yes" xml:space="preserve">
          <source>A relation type can be created explicitly, as an object implementing the &lt;a href=&quot;relationtype&quot;&gt;&lt;code&gt;RelationType&lt;/code&gt;&lt;/a&gt; interface, typically a &lt;a href=&quot;relationtypesupport&quot;&gt;&lt;code&gt;RelationTypeSupport&lt;/code&gt;&lt;/a&gt;. Alternatively, it can be created implicitly using the Relation Service's &lt;a href=&quot;relationservicembean#createRelationType(java.lang.String,javax.management.relation.RoleInfo%5B%5D)&quot;&gt;&lt;code&gt;createRelationType&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">リレーションタイプは、&lt;a href=&quot;relationtype&quot;&gt; &lt;code&gt;RelationType&lt;/code&gt; &lt;/a&gt;インターフェイスを実装するオブジェクト（通常は&lt;a href=&quot;relationtypesupport&quot;&gt; &lt;code&gt;RelationTypeSupport&lt;/code&gt; &lt;/a&gt;）として明示的に作成できます。または、RelationServiceの&lt;a href=&quot;relationservicembean#createRelationType(java.lang.String,javax.management.relation.RoleInfo%5B%5D)&quot;&gt; &lt;code&gt;createRelationType&lt;/code&gt; &lt;/a&gt;メソッドを使用して暗黙的に作成することもできます。</target>
        </trans-unit>
        <trans-unit id="9b5292f74c4969e9f524b42a1578d24ee29625b3" translate="yes" xml:space="preserve">
          <source>A relation type can be created explicitly, as an object implementing the &lt;a href=&quot;relationtype&quot;&gt;&lt;code&gt;RelationType&lt;/code&gt;&lt;/a&gt; interface, typically a &lt;a href=&quot;relationtypesupport&quot;&gt;&lt;code&gt;RelationTypeSupport&lt;/code&gt;&lt;/a&gt;. Alternatively, it can be created implicitly using the Relation Service's &lt;a href=&quot;relationservicembean#createRelationType-java.lang.String-javax.management.relation.RoleInfo:A-&quot;&gt;&lt;code&gt;createRelationType&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">関係タイプは、&lt;a href=&quot;relationtype&quot;&gt; &lt;code&gt;RelationType&lt;/code&gt; &lt;/a&gt;インターフェースを実装するオブジェクトとして、通常は&lt;a href=&quot;relationtypesupport&quot;&gt; &lt;code&gt;RelationTypeSupport&lt;/code&gt; &lt;/a&gt;として明示的に作成できます。または、関係サービスの&lt;a href=&quot;relationservicembean#createRelationType-java.lang.String-javax.management.relation.RoleInfo:A-&quot;&gt; &lt;code&gt;createRelationType&lt;/code&gt; &lt;/a&gt;メソッドを使用して暗黙的に作成することもできます。</target>
        </trans-unit>
        <trans-unit id="cca4085b34ffc8b6117aabd0f662f58af45f6ef2" translate="yes" xml:space="preserve">
          <source>A relation type has to be declared in the Relation Service:</source>
          <target state="translated">リレーションサービスでは、リレーション型を宣言しなければなりません。</target>
        </trans-unit>
        <trans-unit id="7f4eb7687a7b917a5f779c8905e8aba99535587f" translate="yes" xml:space="preserve">
          <source>A relation type includes a relation type name and a list of role infos (represented by RoleInfo objects).</source>
          <target state="translated">リレーション型には、リレーション型名とロール情報(RoleInfoオブジェクトで表される)のリストが含まれます。</target>
        </trans-unit>
        <trans-unit id="226f45ce68149948ca7688394eb2884406a796ce" translate="yes" xml:space="preserve">
          <source>A relinkable call site that implements a polymorphic inline caching strategy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee6c1fc7389590db7248bc954c1878ba0d54c1e" translate="yes" xml:space="preserve">
          <source>A relinkable call site that implements a polymorphic inline caching strategy. It remembers up to 8 &lt;a href=&quot;../linker/guardedinvocation&quot;&gt;&lt;code&gt;GuardedInvocation&lt;/code&gt;&lt;/a&gt;s it was linked with, and on each relink request builds a cascading chain of method handles of one invocation falling back to the next one. The number of remembered invocations can be customized by overriding &lt;a href=&quot;#getMaxChainLength()&quot;&gt;&lt;code&gt;getMaxChainLength()&lt;/code&gt;&lt;/a&gt; in a subclass. When this call site is relinked with a new invocation and the length of the chain is already at the maximum, it will throw away the oldest invocation. Invocations with invalidated switch points and ones for which their invalidating exception triggered are removed eagerly from the chain. The invocations are never reordered; the most recently linked method handle is always at the start of the chain and the least recently linked at its end. The call site can be safely relinked on more than one thread concurrently. Race conditions in linking are resolved by throwing away the &lt;a href=&quot;../linker/guardedinvocation&quot;&gt;&lt;code&gt;GuardedInvocation&lt;/code&gt;&lt;/a&gt; produced on the losing thread without incorporating it into the chain, so it can lead to repeated linking for the same arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e93a3ef2fd2ed326132307f67851d61fa0020b" translate="yes" xml:space="preserve">
          <source>A relinkable call site that implements monomorphic inline caching strategy, only being linked to a single &lt;a href=&quot;../linker/guardedinvocation&quot;&gt;&lt;code&gt;GuardedInvocation&lt;/code&gt;&lt;/a&gt; at any given time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b594fc22f4471ce397104f7a5fc6dc5fe0f5a4c" translate="yes" xml:space="preserve">
          <source>A relinkable call site that implements monomorphic inline caching strategy, only being linked to a single &lt;a href=&quot;../linker/guardedinvocation&quot;&gt;&lt;code&gt;GuardedInvocation&lt;/code&gt;&lt;/a&gt; at any given time. If the guard of that single invocation fails, or it has an invalidated switch point, or its invalidating exception triggered, then the call site will throw it away and ask its associated &lt;a href=&quot;../dynamiclinker&quot;&gt;&lt;code&gt;DynamicLinker&lt;/code&gt;&lt;/a&gt; to relink it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233dd220dfbf332ba6c54ef6b64c345e5c6e09cb" translate="yes" xml:space="preserve">
          <source>A remote object implementation should implement the &lt;code&gt;Unreferenced&lt;/code&gt; interface to receive notification when there are no more clients that reference that remote object.</source>
          <target state="translated">リモートオブジェクトの実装では、そのリモートオブジェクトを参照するクライアントがなくなったときに通知を受信するために、 &lt;code&gt;Unreferenced&lt;/code&gt; インターフェイスを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="91a4fd1fac8ab7b48e8bfde72207ecf2502ecda3" translate="yes" xml:space="preserve">
          <source>A renderer component must override isShowing() and unconditionally return true to work correctly because the Swing paint does nothing for components with isShowing false.</source>
          <target state="translated">レンダラコンポーネントは isShowing()をオーバーライドして無条件に true を返さなければ正しく動作しません。</target>
        </trans-unit>
        <trans-unit id="e416d1b9bbad3251aba861210072b4207a2080fc" translate="yes" xml:space="preserve">
          <source>A replacement is legal if, and only if, it is a legal sequence of bytes in this encoder's charset; that is, it must be possible to decode the replacement into one or more sixteen-bit Unicode characters.</source>
          <target state="translated">置換は、このエンコーダの文字セット内のバイトの正規のシーケンスである場合にのみ、正規のものとなります。</target>
        </trans-unit>
        <trans-unit id="9621585bd05248c7bbaa827c2bc4c50cf8bb5e38" translate="yes" xml:space="preserve">
          <source>A representation of</source>
          <target state="translated">の表現</target>
        </trans-unit>
        <trans-unit id="caf8ca6be1bfb9f68b61b3ec2a2254ddb247de49" translate="yes" xml:space="preserve">
          <source>A representation of a &lt;code&gt;Data&lt;/code&gt; type containing an octet stream.</source>
          <target state="translated">オクテットストリームを含む &lt;code&gt;Data&lt;/code&gt; 型の表現。</target>
        </trans-unit>
        <trans-unit id="347dc03263c18a2d333cb15952a66d27aa4d22d3" translate="yes" xml:space="preserve">
          <source>A representation of a content model.</source>
          <target state="translated">コンテンツモデルの表現。</target>
        </trans-unit>
        <trans-unit id="6f2288f82bc135c481df3ef4c7236dffa9759880" translate="yes" xml:space="preserve">
          <source>A representation of a content model. A content model is basically a restricted BNF expression. It is restricted in the sense that it must be deterministic. This means that you don't have to represent it as a finite state automaton.</source>
          <target state="translated">コンテンツモデルの表現。コンテンツモデルは、基本的には制限されたBNF表現である。これは、決定論的でなければならないという意味で制限されています。これは、有限状態オートマトンとして表現する必要がないことを意味します。</target>
        </trans-unit>
        <trans-unit id="1d2b22873912e7b2000dbd32116f7917cc96cfde" translate="yes" xml:space="preserve">
          <source>A representation of a version string for an implementation of the Java SE Platform.</source>
          <target state="translated">Java SE Platformの実装のバージョン文字列の表現。</target>
        </trans-unit>
        <trans-unit id="b48578f284fe1829fc49df6d070b0fe70ae64905" translate="yes" xml:space="preserve">
          <source>A representation of a version string for an implementation of the Java SE Platform. A version string consists of a version number optionally followed by pre-release and build information.</source>
          <target state="translated">Java SE Platformの実装のバージョン文字列の表現。バージョン文字列は、バージョン番号の後にプレリリース情報とビルド情報が続くオプションで構成されています。</target>
        </trans-unit>
        <trans-unit id="e76d771ac918cfc90bcbd838e9a32b7b5ce20c54" translate="yes" xml:space="preserve">
          <source>A representation of an XML structure from any namespace.</source>
          <target state="translated">任意の名前空間からのXML構造体の表現。</target>
        </trans-unit>
        <trans-unit id="acec4d0c8b94ed217cd3fe41ef2d40edcd78e19a" translate="yes" xml:space="preserve">
          <source>A representation of an XML structure from any namespace. The purpose of this interface is to group (and provide type safety for) all representations of XML structures.</source>
          <target state="translated">任意の名前空間からのXML構造体の表現。このインターフェイスの目的は,XML構造体のすべての表現をグループ化し,型安全性を提供することです.</target>
        </trans-unit>
        <trans-unit id="2857ce0d362aad98dbd585c51c0a76d355fb1c52" translate="yes" xml:space="preserve">
          <source>A representation of color profile data for device independent and device dependent color spaces based on the International Color Consortium Specification ICC.1:2001-12, File Format for Color Profiles, (see &lt;a href=&quot;http://www.color.org&quot;&gt; http://www.color.org&lt;/a&gt;).</source>
          <target state="translated">International Color Consortium Specification ICC.1：2001-12、File Format for Color Profiles（&lt;a href=&quot;http://www.color.org&quot;&gt;http://www.color.orgを参照&lt;/a&gt;）に基づく、デバイスに依存しない色空間とデバイスに依存する色空間のカラープロファイルデータの表現。</target>
        </trans-unit>
        <trans-unit id="921dfd456139552f7840b7ef2467b270bf16502b" translate="yes" xml:space="preserve">
          <source>A representation of the &lt;code&gt;Reference&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;Reference&lt;/code&gt; 要素の表現。</target>
        </trans-unit>
        <trans-unit id="8b48379d931119eb270af5a0b7424785770591c5" translate="yes" xml:space="preserve">
          <source>A representation of the &lt;code&gt;Reference&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML schema is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;Reference&lt;/code&gt; 要素の表現。XMLスキーマは次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="d5e807978ed603aaa26b06f3569a9670673bc685" translate="yes" xml:space="preserve">
          <source>A representation of the &lt;code&gt;Reference&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa80f3b0afd47ed1e50f460a11786ce4ff06671d" translate="yes" xml:space="preserve">
          <source>A representation of the &lt;code&gt;Reference&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML schema is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9393d42398a123d8d189d5e11c9d80c61c70c4" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;CanonicalizationMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;CanonicalizationMethod&lt;/code&gt; 要素の表現。</target>
        </trans-unit>
        <trans-unit id="818501983ab439975e98f6e216bf5040b873ab2a" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;CanonicalizationMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;CanonicalizationMethod&lt;/code&gt; 要素の表現。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="f72b2baec8a234012c33cacdb86c2281149e84e1" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;CanonicalizationMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cad14cca6f75d22040c6320992291c0a294eda2" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;CanonicalizationMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71daa67e9f5695316a208165aa5abe94b6100ec" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;DigestMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;DigestMethod&lt;/code&gt; 要素の表現。</target>
        </trans-unit>
        <trans-unit id="843f8ce7b0ba73da08e55c45b256274671794ad1" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;DigestMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;DigestMethod&lt;/code&gt; 要素の表現。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="3027ab288370b93fa59f3eb9d0436ae932c461a7" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;DigestMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a407c3e50674b67cc1284abd26beb1010eafe3b5" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;DigestMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b62629781107835ade69f4f233652f3b428d42" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyInfo&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;KeyInfo&lt;/code&gt; 要素の表現。</target>
        </trans-unit>
        <trans-unit id="33dc54be4c0ef258b3df6722a0518e4c9dc5bc58" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyInfo&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;KeyInfo&lt;/code&gt; contains a list of &lt;a href=&quot;../../xmlstructure&quot;&gt;&lt;code&gt;XMLStructure&lt;/code&gt;&lt;/a&gt;s, each of which contain information that enables the recipient(s) to obtain the key needed to validate an XML signature. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;KeyInfo&lt;/code&gt; 要素の表現。A &lt;code&gt;KeyInfo&lt;/code&gt; リスト含ま&lt;a href=&quot;../../xmlstructure&quot;&gt; &lt;code&gt;XMLStructure&lt;/code&gt; &lt;/a&gt; XML署名を検証するために必要な鍵を取得するために受信者（複数可）を可能にする情報を含むそれぞれが、秒。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="6192b5dd6d083a9645f58c6febb0ddc07d7d47cf" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyInfo&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd2b8994a5a85bf2bac5c477514ddc44d497f29" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyInfo&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;KeyInfo&lt;/code&gt; contains a list of &lt;a href=&quot;../../xmlstructure&quot;&gt;&lt;code&gt;XMLStructure&lt;/code&gt;&lt;/a&gt;s, each of which contain information that enables the recipient(s) to obtain the key needed to validate an XML signature. The XML Schema Definition is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ce1e1b621dd95613ee8e80548a8a6e38d0e68e" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyName&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;KeyName&lt;/code&gt; 要素の表現。</target>
        </trans-unit>
        <trans-unit id="6d56bd6ce8a62c3ee25de03a052161bbc9dcbee2" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyName&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;KeyName&lt;/code&gt; object contains a string value which may be used by the signer to communicate a key identifier to the recipient. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;KeyName&lt;/code&gt; 要素の表現。 &lt;code&gt;KeyName&lt;/code&gt; オブジェクトは、受信者にキー識別子を通信するために署名者が使用することができる文字列値を含みます。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="e8fa8baacd2f03c46552a32cdc8b62ceaaeeab13" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyName&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c68cd4ed5c490d2a8c7d0d836e03cc033e80d3c" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyName&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;KeyName&lt;/code&gt; object contains a string value which may be used by the signer to communicate a key identifier to the recipient. The XML Schema Definition is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30293ecb5cd4b4749024497b34f010008558a016" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyValue&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;KeyValue&lt;/code&gt; 要素の表現。</target>
        </trans-unit>
        <trans-unit id="aaffc6a7cf02ed6263009eed5a06c969a5e95211" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyValue&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;KeyValue&lt;/code&gt; object contains a single public key that may be useful in validating the signature. The XML schema definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;KeyValue&lt;/code&gt; 要素の表現。 &lt;code&gt;KeyValue&lt;/code&gt; オブジェクトは、署名を検証するのに有用であり得る単一の公開鍵を含みます。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="fa2e2d3959b04fc438ede5956d79a058b4017933" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyValue&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f33282efd5c65cff82842419a14656b5b5ca9b1" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;KeyValue&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;KeyValue&lt;/code&gt; object contains a single public key that may be useful in validating the signature. The XML schema definition is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18bf2a9d1d2649cf4889b2a82b1944dfcb78706" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Manifest&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されているXML &lt;code&gt;Manifest&lt;/code&gt; 要素の表現。</target>
        </trans-unit>
        <trans-unit id="cba18e6cbfd4e1a4be2e659c51f826279f81e7c7" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Manifest&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されているXML &lt;code&gt;Manifest&lt;/code&gt; 要素の表現。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="232e87c9402275d97be549c055467207b316b836" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Manifest&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76885dbf5ee78ce59ee4bf62bf8720f75c4d43a" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Manifest&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ebebd89897aca83c8c23298c03986093af420f9" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Object&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されているXML &lt;code&gt;Object&lt;/code&gt; 要素の表現。</target>
        </trans-unit>
        <trans-unit id="ffc89dfbfe4de26bd6f1086b52d91604e3c019b1" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Object&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. An &lt;code&gt;XMLObject&lt;/code&gt; may contain any data and may include optional MIME type, ID, and encoding attributes. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されているXML &lt;code&gt;Object&lt;/code&gt; 要素の表現。AN &lt;code&gt;XMLObject&lt;/code&gt; 任意のデータを含んでいてもよく、任意のMIMEタイプ、ID、及びコード属性を含むことができます。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="3484e073466c9e7b644b98c1aa6f0b486b500a18" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Object&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db25bb1eec7e8f0ead4afe359c19d80c0b7e7b3" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Object&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. An &lt;code&gt;XMLObject&lt;/code&gt; may contain any data and may include optional MIME type, ID, and encoding attributes. The XML Schema Definition is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8dc14274479c27c29e82b16337e6944f2ad67cf" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;PGPData&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;PGPData&lt;/code&gt; 要素の表現。</target>
        </trans-unit>
        <trans-unit id="c031c75e0269b4ac7bda340cf53a29c6662e1276" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;PGPData&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;PGPData&lt;/code&gt; object is used to convey information related to PGP public key pairs and signatures on such keys. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;PGPData&lt;/code&gt; 要素の表現。 &lt;code&gt;PGPData&lt;/code&gt; のオブジェクトは、キーのPGP公開鍵ペアおよび署名に関連する情報を伝えるために使用されます。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="de7daf8ac079c8dae3059005c2d1b04537dc8240" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;PGPData&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806a7a86ee6b23a8662a1bd510651c2c33f1ac35" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;PGPData&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;PGPData&lt;/code&gt; object is used to convey information related to PGP public key pairs and signatures on such keys. The XML Schema Definition is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa6fdf04a0367c5c5eb8f1a6efa5e9361b3ac1da" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;RetrievalMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;RetrievalMethod&lt;/code&gt; 要素の表現。</target>
        </trans-unit>
        <trans-unit id="e68a4b7f2652386782c1b6174726422935f79c88" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;RetrievalMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;RetrievalMethod&lt;/code&gt; object is used to convey a reference to &lt;code&gt;KeyInfo&lt;/code&gt; information that is stored at another location. The XML schema definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;RetrievalMethod&lt;/code&gt; 要素の表現。A &lt;code&gt;RetrievalMethod&lt;/code&gt; のオブジェクトへの参照伝えるために使用される &lt;code&gt;KeyInfo&lt;/code&gt; 別の場所に格納された情報を。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="794e25e14503f70ccb7a196788702f0bc7f70062" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;RetrievalMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4e19318f893c30c61ecd1868a51fa84313067d" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;RetrievalMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. A &lt;code&gt;RetrievalMethod&lt;/code&gt; object is used to convey a reference to &lt;code&gt;KeyInfo&lt;/code&gt; information that is stored at another location. The XML schema definition is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f52d394a4745b86b588fa41fd298f54c9477767" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Signature&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されているXML &lt;code&gt;Signature&lt;/code&gt; 要素の表現。</target>
        </trans-unit>
        <trans-unit id="71ab40f0a8e3ae7919b4af6178e23fbf2e86ca6a" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Signature&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. This class contains methods for signing and validating XML signatures with behavior as defined by the W3C specification. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されているXML &lt;code&gt;Signature&lt;/code&gt; 要素の表現。このクラスには、W3C仕様で定義されている動作でXML署名に署名および検証するためのメソッドが含まれています。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="0990539e2fcd347ccf0e016dc65c0ebd4eabd5dc" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Signature&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18009f92423636fa5e25d7d7d9246384f0d394be" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Signature&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. This class contains methods for signing and validating XML signatures with behavior as defined by the W3C specification. The XML Schema Definition is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf6df54d7de0f0a70478f64bcd771d8c6eb2c1c" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">XMLの表現 &lt;code&gt;SignatureMethod&lt;/code&gt; で定義されている要素&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;のXML署名構文および処理のためのW3C勧告&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1242db1c319c32f0daa009d51adf8357840239ed" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">XMLの表現 &lt;code&gt;SignatureMethod&lt;/code&gt; で定義されている要素&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;のXML署名構文および処理のためのW3C勧告&lt;/a&gt;。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="b7784962aa26b25903e7a05bef5a17accffd5a40" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30585f327ac9e035658eeacab7c9cd6dbeac5a18" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureMethod&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5f8bf2ba1cc0ade2e47f2eff79dc1a866c4b9a" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureProperties&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">XMLの表現 &lt;code&gt;SignatureProperties&lt;/code&gt; 用に定義されている要素&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;のXML署名構文および処理のためのW3C勧告&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="662a0e378668c7984acdbc2ad414a262359eff09" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureProperties&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">XMLの表現 &lt;code&gt;SignatureProperties&lt;/code&gt; 用に定義されている要素&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;のXML署名構文および処理のためのW3C勧告&lt;/a&gt;。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="072340d90f758808a8e2fc2561ba6f66c79266b0" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureProperties&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f66bcc83144ded3d38d6a5f2fde30127bcb252a" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureProperties&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b7cc6d8f4f93cfcd1bc225fc3b7c3bf8415277" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureProperty&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">XMLの表現 &lt;code&gt;SignatureProperty&lt;/code&gt; の中で定義されるような要素&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;のXML署名構文および処理のためのW3C勧告&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09f60cfc123ffcfc5cdd28b4386c6bde7d9b6b7a" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureProperty&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">XMLの表現 &lt;code&gt;SignatureProperty&lt;/code&gt; の中で定義されるような要素&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;のXML署名構文および処理のためのW3C勧告&lt;/a&gt;。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="d9544fe0c4d81bb0f58e97616bb7ffebff518789" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureProperty&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4693800872e05341df4e7d8a5ec59ac9f2b52f60" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureProperty&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd6af6658250cbe761409599e740b518da84b93" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureValue&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">XMLの表現 &lt;code&gt;SignatureValue&lt;/code&gt; の中で定義されるような要素&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;のXML署名構文および処理のためのW3C勧告&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f0beaae6c06450414e34f7eedafae1ae75edb50e" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureValue&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">XMLの表現 &lt;code&gt;SignatureValue&lt;/code&gt; の中で定義されるような要素&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;のXML署名構文および処理のためのW3C勧告&lt;/a&gt;。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="bbf86cf9bf5530129fc7d44260dc2583aef42dd8" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureValue&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a1e8bfec48dbc19eec529bdcdd0d0dc748da0f" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;SignatureValue&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bbce451009a5c484fba4ec910223836924ff006" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Transform&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されているXML &lt;code&gt;Transform&lt;/code&gt; 要素の表現。</target>
        </trans-unit>
        <trans-unit id="65f8244c6e7a764a0cf179e722835a8b11234d9a" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Transform&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されているXML &lt;code&gt;Transform&lt;/code&gt; 要素の表現。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="cfa156e41ea38f59b1291b71fe37917c9fb934e7" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Transform&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b849d25ffee64acb6cb32e5c5e77c3aba63d43" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;Transform&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. The XML Schema Definition is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7170cbbee270dda1b5f2e8376ded625eec55f1de" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;X509Data&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;X509Data&lt;/code&gt; 要素の表現。</target>
        </trans-unit>
        <trans-unit id="b64b36913b0b5b874e3604e7e7632ca33a7ad6aa" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;X509Data&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. An &lt;code&gt;X509Data&lt;/code&gt; object contains one or more identifers of keys or X.509 certificates (or certificates' identifiers or a revocation list). The XML Schema Definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;X509Data&lt;/code&gt; 要素の表現。 &lt;code&gt;X509Data&lt;/code&gt; のオブジェクトは、キーの一つ以上のidentifersまたはX.509証明書（または証明書の識別子または失効リスト）が含まれています。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="6c0e0f1631ca411e460ba541ca6e244a9d79d990" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;X509Data&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205b41c97145fc1a32258ad89ef42ae769e61487" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;X509Data&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. An &lt;code&gt;X509Data&lt;/code&gt; object contains one or more identifers of keys or X.509 certificates (or certificates' identifiers or a revocation list). The XML Schema Definition is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763cfc754a3485a01a83fa9cd1647f4e6cc8afbe" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;X509IssuerSerial&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;X509IssuerSerial&lt;/code&gt; 要素の表現。</target>
        </trans-unit>
        <trans-unit id="298a9a222ddf149eb678257fccc8c66b55774c5f" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;X509IssuerSerial&lt;/code&gt; element as defined in the &lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. An &lt;code&gt;X509IssuerSerial&lt;/code&gt; object contains an X.509 issuer distinguished name (DN) and serial number pair. The XML schema definition is defined as:</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/xmldsig-core/&quot;&gt;XML署名の構文と処理に関するW3C勧告で&lt;/a&gt;定義されている &lt;code&gt;X509IssuerSerial&lt;/code&gt; 要素の表現。 &lt;code&gt;X509IssuerSerial&lt;/code&gt; のオブジェクトは、識別名（DN）およびシリアル番号のペア発行者509を含んでいます。XMLスキーマ定義は次のように定義されます。</target>
        </trans-unit>
        <trans-unit id="c315b1d21beb485bea395330bd7bc41d92cd7b9c" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;X509IssuerSerial&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90f4f0c3eb905a2d12424b8d1c605f1c80d8a0e" translate="yes" xml:space="preserve">
          <source>A representation of the XML &lt;code&gt;X509IssuerSerial&lt;/code&gt; element as defined in the &lt;a href=&quot;https://www.w3.org/TR/xmldsig-core/&quot;&gt; W3C Recommendation for XML-Signature Syntax and Processing&lt;/a&gt;. An &lt;code&gt;X509IssuerSerial&lt;/code&gt; object contains an X.509 issuer distinguished name (DN) and serial number pair. The XML schema definition is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3dc0189e67c7a5026631ed6ce29049a5d812ebd" translate="yes" xml:space="preserve">
          <source>A request body publisher that reads its data from an &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;からデータを読み取るリクエストボディパブリッシャー。</target>
        </trans-unit>
        <trans-unit id="d89e64ee2d7418973e41335a098c1451433eb651" translate="yes" xml:space="preserve">
          <source>A request body publisher that reads its data from an &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;. A &lt;a href=&quot;../../../../java.base/java/util/function/supplier&quot;&gt;&lt;code&gt;Supplier&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;InputStream&lt;/code&gt; is used in case the request needs to be repeated, as the content is not buffered. The &lt;code&gt;Supplier&lt;/code&gt; may return &lt;code&gt;null&lt;/code&gt; on subsequent attempts, in which case the request fails.</source>
          <target state="translated">&lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;からデータを読み取るリクエストボディパブリッシャー。コンテンツはバッファリングされないため、リクエストを繰り返す必要がある場合は、 &lt;code&gt;InputStream&lt;/code&gt; の&lt;a href=&quot;../../../../java.base/java/util/function/supplier&quot;&gt; &lt;code&gt;Supplier&lt;/code&gt; &lt;/a&gt;が使用されます。 &lt;code&gt;Supplier&lt;/code&gt; 戻ってもよい &lt;code&gt;null&lt;/code&gt; 要求が失敗した場合には、後続の試行に。</target>
        </trans-unit>
        <trans-unit id="a36f08211a431d531d51ff4283938c1b3f9cd6f7" translate="yes" xml:space="preserve">
          <source>A request body publisher that takes data from an &lt;code&gt;Iterable&lt;/code&gt; of byte arrays.</source>
          <target state="translated">&lt;code&gt;Iterable&lt;/code&gt; のバイト配列からデータを取得するリクエストボディパブリッシャー。</target>
        </trans-unit>
        <trans-unit id="c50eb190198f19296a3e32912c3c5e1e94519c3b" translate="yes" xml:space="preserve">
          <source>A request body publisher that takes data from an &lt;code&gt;Iterable&lt;/code&gt; of byte arrays. An &lt;a href=&quot;../../../../java.base/java/lang/iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt; is provided which supplies &lt;a href=&quot;../../../../java.base/java/util/iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; instances. Each attempt to send the request results in one invocation of the &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Iterable&lt;/code&gt; のバイト配列からデータを取得するリクエストボディパブリッシャー。&lt;a href=&quot;../../../../java.base/java/util/iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;インスタンスを提供する&lt;a href=&quot;../../../../java.base/java/lang/iterable&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;/a&gt;が提供されます。リクエストを送信しようとするたびに、 &lt;code&gt;Iterable&lt;/code&gt; が1回呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ce746c80a9872a5dbae6a3556fa6f3036702067b" translate="yes" xml:space="preserve">
          <source>A request body publisher that takes data from the contents of a File.</source>
          <target state="translated">ファイルの内容からデータを取得するリクエストボディパブリッシャー。</target>
        </trans-unit>
        <trans-unit id="7e5043988cb35e2b047e7b108992486164169925" translate="yes" xml:space="preserve">
          <source>A request body publisher which sends no request body.</source>
          <target state="translated">リクエストボディを送信しないリクエストボディパブリッシャー。</target>
        </trans-unit>
        <trans-unit id="21ca3ddcf1176e64b427cc5f56e932899f576fbd" translate="yes" xml:space="preserve">
          <source>A reserved key, &lt;code&gt;&lt;b&gt;THREADING&lt;/b&gt;&lt;/code&gt;, whose value describes the behavior of the engine with respect to concurrent execution of scripts and maintenance of state is also defined. These values for the &lt;code&gt;&lt;b&gt;THREADING&lt;/b&gt;&lt;/code&gt; key are:</source>
          <target state="translated">スクリプトの同時実行と状態の維持に関するエンジンの動作を説明する値である予約済みキー &lt;code&gt;&lt;b&gt;THREADING&lt;/b&gt;&lt;/code&gt; も定義されています。 &lt;code&gt;&lt;b&gt;THREADING&lt;/b&gt;&lt;/code&gt; キーのこれらの値は次の&lt;b&gt;とおり&lt;/b&gt;です。</target>
        </trans-unit>
        <trans-unit id="590b8281eb0b5afdb158b730620721f0d18ca9e1" translate="yes" xml:space="preserve">
          <source>A reset where the text-argument (or an initial substring of the text-argument) is not already in the sequence. (e.g. &quot;a &amp;lt; b &amp;amp; e &amp;lt; f&quot;)</source>
          <target state="translated">テキスト引数（またはテキスト引数の最初のサブストリング）がまだシーケンスにないリセット。（例 &quot;a &amp;lt;b＆e &amp;lt;f&quot;）</target>
        </trans-unit>
        <trans-unit id="50daa7cabce84af2b1a2640df3c79d87fb279761" translate="yes" xml:space="preserve">
          <source>A resolution attribute's cross feed direction resolution and feed direction resolution values are stored internally using units of dots per 100 inches (dphi). Storing the values in dphi rather than, say, metric units allows precise integer arithmetic conversions between dpi and dphi and between dpcm and dphi: 1 dpi = 100 dphi, 1 dpcm = 254 dphi. Thus, the values can be stored into and retrieved back from a resolution attribute in either units with no loss of precision. This would not be guaranteed if a floating point representation were used. However, roundoff error will in general occur if a resolution attribute's values are created in one units and retrieved in different units; for example, 600 dpi will be rounded to 236 dpcm, whereas the true value (to five figures) is 236.22 dpcm.</source>
          <target state="translated">解像度属性のクロスフィード方向の解像度とフィード方向の解像度の値は、100 インチあたりのドット数(dphi)の単位を使用して内部的に保存されます。メトリック単位ではなく dphi で値を保存することで、dpi と dphi の間、また dpcm と dphi の間の正確な整数演算変換が可能になります。1 dpi=100 dphi,1 dpcm=254 dphi となります。このように、値は、精度を損なうことなく、どちらの単位でも分解能属性に格納したり、分解能属性から取得したりすることができます。これは、浮動小数点表現を使用した場合には保証されません。しかし、解像度属性の値が1つの単位で作成され、異なる単位で取得された場合、一般的にはラウンドオフエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="1baa20fe3c1a9aac887e84d03e98e4157adb439d" translate="yes" xml:space="preserve">
          <source>A resolution attribute's value consists of two items, the cross feed direction resolution and the feed direction resolution. A resolution attribute may be constructed by supplying the two values and indicating the units in which the values are measured. Methods are provided to return a resolution attribute's values, indicating the units in which the values are to be returned. The two most common resolution units are dots per inch (dpi) and dots per centimeter (dpcm), and exported constants &lt;a href=&quot;#DPI&quot;&gt;&lt;code&gt;DPI&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#DPCM&quot;&gt;&lt;code&gt;DPCM&lt;/code&gt;&lt;/a&gt; are provided for indicating those units.</source>
          <target state="translated">解像度属性の値は、クロスフィード方向の解像度とフィード方向の解像度の2つの項目で構成されます。解像度属性は、2つの値を指定し、値が測定される単位を示すことによって構築できます。値が返される単位を示す、解決属性の値を返すメソッドが提供されています。最も一般的な2つの解像度の単位は、1インチあたりのドット数（dpi）と1センチメートルあたりのドット数（dpcm）であり、これらの単位を示すために、エクスポートされた定数&lt;a href=&quot;#DPI&quot;&gt; &lt;code&gt;DPI&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#DPCM&quot;&gt; &lt;code&gt;DPCM&lt;/code&gt; &lt;/a&gt;が提供されます。</target>
        </trans-unit>
        <trans-unit id="232557dedfb9f95c832486a5c16bc160b4258876" translate="yes" xml:space="preserve">
          <source>A resolution attribute's value consists of two items, the cross feed direction resolution and the feed direction resolution. A resolution attribute may be constructed by supplying the two values and indicating the units in which the values are measured. Methods are provided to return a resolution attribute's values, indicating the units in which the values are to be returned. The two most common resolution units are dots per inch (dpi) and dots per centimeter (dpcm), and exported constants &lt;a href=&quot;resolutionsyntax#DPI&quot;&gt;&lt;code&gt;DPI&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;resolutionsyntax#DPCM&quot;&gt;&lt;code&gt;DPCM&lt;/code&gt;&lt;/a&gt; are provided for indicating those units.</source>
          <target state="translated">解像度属性の値は、横送り方向の解像度と送り方向の解像度の2つの項目で構成されます。解像度属性は、2つの値を提供し、値が測定される単位を示すことによって構築できます。解決属性の値を返すメソッドが提供され、値が返される単位を示します。最も一般的な2つの解像度単位は、1インチあたりのドット数（dpi）と1センチあたりのドット数（dpcm）であり、これらの単位を示すためにエクスポートされた定数&lt;a href=&quot;resolutionsyntax#DPI&quot;&gt; &lt;code&gt;DPI&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;resolutionsyntax#DPCM&quot;&gt; &lt;code&gt;DPCM&lt;/code&gt; &lt;/a&gt;が提供されています。</target>
        </trans-unit>
        <trans-unit id="ab3fe46f616d216e29cf942182454f02c73a0392" translate="yes" xml:space="preserve">
          <source>A resource bundle containing the localized strings in the accessibility package. This is meant only for internal use by Java Accessibility and is not meant to be used by assistive technologies or applications.</source>
          <target state="translated">アクセシビリティパッケージのローカライズされた文字列を含むリソースバンドル。これは、Java アクセシビリティによる内部利用のみを目的としており、支援技術やアプリケーションでの利用を意図したものではありません。</target>
        </trans-unit>
        <trans-unit id="6ff9e22e7c0d8f14107b03781274d53b7cf0c6c8" translate="yes" xml:space="preserve">
          <source>A resource bundle provider may package its resource bundles in the same package as the base name of the resource bundle if the package is not split among other named modules. If there are more than one bundle providers providing the resource bundle of a given base name, the resource bundles can be packaged with per-language grouping or per-region grouping to eliminate the split packages.</source>
          <target state="translated">リソースバンドルプロバイダは、パッケージが他の名前付きモジュール間で分割されていない場合、リソースバンドルのベース名と同じパッケージでリソースバンドルをパッケージ化してもよい。与えられたベース名のリソースバンドルを提供するバンドルプロバイダが複数存在する場合、リソースバンドルは、分割されたパッケージを排除するために、言語ごとのグループ化または地域ごとのグループ化でパッケージ化することができます。</target>
        </trans-unit>
        <trans-unit id="c58ce90554a2b8133e3f817425c72a1b4c47fbed" translate="yes" xml:space="preserve">
          <source>A resource in a module is identified by an abstract name that is a '&lt;code&gt;/&lt;/code&gt;'-separated path string. For example, module &lt;code&gt;java.base&lt;/code&gt; may have a resource &quot;&lt;code&gt;java/lang/Object.class&lt;/code&gt;&quot; that, by convention, is the class file for &lt;code&gt;java.lang.Object&lt;/code&gt;. A module reader may treat directories in the module content as resources (whether it does or not is module reader specific). Where the module content contains a directory that can be located as a resource then its name ends with a slash ('/'). The directory can also be located with a name that drops the trailing slash.</source>
          <target state="translated">モジュール内のリソースは、「 &lt;code&gt;/&lt;/code&gt; 」で区切られたパス文字列である抽象名によって識別されます。たとえば、モジュール &lt;code&gt;java.base&lt;/code&gt; には、慣例により &lt;code&gt;java.lang.Object&lt;/code&gt; のクラスファイルであるリソース「 &lt;code&gt;java/lang/Object.class&lt;/code&gt; /Object.class」が含まれている場合があります。モジュールリーダーは、モジュールコンテンツ内のディレクトリをリソースとして扱う場合があります（モジュールリーダー固有であるかどうかは関係ありません）。モジュールの内容にリソースとして配置できるディレクトリが含まれている場合、その名前はスラッシュ（ '/'）で終わります。ディレクトリは、末尾のスラッシュを削除する名前で見つけることもできます。</target>
        </trans-unit>
        <trans-unit id="885457801b55bcd35186250de0f06e9f3e81746b" translate="yes" xml:space="preserve">
          <source>A resource in a named module may be &lt;em&gt;encapsulated&lt;/em&gt; so that it cannot be located by code in other modules. Whether a resource can be located or not is determined as follows:</source>
          <target state="translated">名前付きモジュールのリソースは、他のモジュールのコードで見つけられないように&lt;em&gt;カプセル化&lt;/em&gt;される場合があります。リソースを見つけることができるかどうかは、次のように決定されます。</target>
        </trans-unit>
        <trans-unit id="8d19983ed6e851519af2fba1e14038db814cbf99" translate="yes" xml:space="preserve">
          <source>A resource key for the description of this element. In conjunction with the &lt;code&gt;descriptionResourceBundleBaseName&lt;/code&gt;, this can be used to find a localized version of the description. The meaning of this field is defined by this specification but the field is not set or used by the JMX API itself.</source>
          <target state="translated">この要素の説明のリソースキー。 &lt;code&gt;descriptionResourceBundleBaseName&lt;/code&gt; と組み合わせて使用すると、ローカライズされたバージョンの説明を見つけることができます。このフィールドの意味はこの仕様で定義されていますが、フィールドはJMX API自体では設定または使用されません。</target>
        </trans-unit>
        <trans-unit id="0b99a2680a2dc7338e7d2fda6cb75d54652f1e91" translate="yes" xml:space="preserve">
          <source>A resource manager error has occurred in the transaction branch.</source>
          <target state="translated">トランザクションブランチでリソースマネージャエラーが発生しました。</target>
        </trans-unit>
        <trans-unit id="a1c92d012b2d6d045733551835589fbd0dda258c" translate="yes" xml:space="preserve">
          <source>A resource variable.</source>
          <target state="translated">リソース変数。</target>
        </trans-unit>
        <trans-unit id="2d6a4cf4a25dacc9a49fd10df45f04e77045343a" translate="yes" xml:space="preserve">
          <source>A response APDU as defined in ISO/IEC 7816-4.</source>
          <target state="translated">ISO/IEC 7816-4 で定義されている応答 APDU。</target>
        </trans-unit>
        <trans-unit id="20f1c826adb8d440a0da48dae4cf2d11ee8796db" translate="yes" xml:space="preserve">
          <source>A response APDU as defined in ISO/IEC 7816-4. It consists of a conditional body and a two byte trailer. This class does not attempt to verify that the APDU encodes a semantically valid response.</source>
          <target state="translated">ISO/IEC 7816-4 で定義されている応答 APDU。条件付きボディと2バイトのトレーラで構成される。このクラスは、APDU が意味的に有効な応答を符号化しているかどうかの検証を試みない。</target>
        </trans-unit>
        <trans-unit id="de9ad4d31c04704c6314136940a250d11cf0088a" translate="yes" xml:space="preserve">
          <source>A return value greater than zero indicates the address of the byte at the index is misaligned for the unit size, and the value's quantity indicates how much the index should be rounded up or down to locate a byte at an aligned address. Otherwise, a value of &lt;code&gt;0&lt;/code&gt; indicates that the address of the byte at the index is aligned for the unit size.</source>
          <target state="translated">ゼロより大きい戻り値は、インデックスのバイトのアドレスがユニットサイズに対してずれていることを示し、値の量は、整列されたアドレスのバイトを見つけるためにインデックスを切り上げるか切り下げる必要があることを示します。それ以外の場合、値 &lt;code&gt;0&lt;/code&gt; は、インデックスのバイトのアドレスがユニットサイズに合わせて調整されていることを示します。</target>
        </trans-unit>
        <trans-unit id="33a35b43cdd2a8ec3716337336b82b3a20416697" translate="yes" xml:space="preserve">
          <source>A return value of -1 indicates that the line segment must turn in the direction that takes the positive X axis towards the positive Y axis. In the default coordinate system, this direction is clockwise.</source>
          <target state="translated">戻り値 -1 は、 線分が正の X 軸を正の Y 軸に向かわせる方向に回転する必要があることを示します。デフ ォ ル ト 座標系では、 こ の方向は時計回りです。</target>
        </trans-unit>
        <trans-unit id="afccea5744e2cd919f4e91681aeca67f76485fd4" translate="yes" xml:space="preserve">
          <source>A return value of -1 is used to distinguish a constant equation that might be always 0 or never 0 from an equation that has no zeroes.</source>
          <target state="translated">返り値-1は、常に0であったり、決して0ではないかもしれない定数方程式を、ゼロを持たない方程式と区別するために使用されます。</target>
        </trans-unit>
        <trans-unit id="9ee71285335fcc84fa138d65ab97bc8f46144421" translate="yes" xml:space="preserve">
          <source>A return value of 0 indicates that the point lies exactly on the line segment. Note that an indicator value of 0 is rare and not useful for determining collinearity because of floating point rounding issues.</source>
          <target state="translated">0の戻り値は、点が線分上に正確に位置していることを示します。インジケータ値が0の場合はまれで、浮動小数点丸めの問題があるため、直線性の判定には有用ではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="3bf0d642bfc686c6a1001aa7d5e4923bc186c344" translate="yes" xml:space="preserve">
          <source>A return value of 1 indicates that the line segment must turn in the direction that takes the positive X axis towards the negative Y axis. In the default coordinate system used by Java 2D, this direction is counterclockwise.</source>
          <target state="translated">1の戻り値は、線分が正のX軸から負のY軸に向かう方向に回転しなければならないことを示します。Java 2Dで使用されるデフォルトの座標系では、この方向は反時計回りです。</target>
        </trans-unit>
        <trans-unit id="84af5de42d5c3f20192a5d147905689af4ad95cb" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;-1&lt;/code&gt; is used to distinguish a constant equation, which might be always 0 or never 0, from an equation that has no zeroes.</source>
          <target state="translated">戻り値 &lt;code&gt;-1&lt;/code&gt; は、定数方程式（常に0であるか、0になることはない）を、ゼロのない方程式と区別するために使用されます。</target>
        </trans-unit>
        <trans-unit id="7b1f23249fe7b4699a5516b95a8bf7b0e266b418" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;null&lt;/code&gt; does not</source>
          <target state="translated">戻り値 &lt;code&gt;null&lt;/code&gt; ません</target>
        </trans-unit>
        <trans-unit id="f259f86e0e8f2cc50d690a37c6402df4349962b6" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;null&lt;/code&gt; does not &lt;em&gt;necessarily&lt;/em&gt; indicate that the map contains no mapping for the key; it's also possible that the map explicitly maps the key to &lt;code&gt;null&lt;/code&gt;. The &lt;a href=&quot;#containsKey(java.lang.Object)&quot;&gt;&lt;code&gt;containsKey&lt;/code&gt;&lt;/a&gt; operation may be used to distinguish these two cases.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; の戻り値は、マップにキーのマッピングが含まれていないことを&lt;em&gt;必ずしも&lt;/em&gt;示しているわけでは&lt;em&gt;あり&lt;/em&gt;ません。マップがキーを明示的に &lt;code&gt;null&lt;/code&gt; にマップする可能性もあります。&lt;a href=&quot;#containsKey(java.lang.Object)&quot;&gt; &lt;code&gt;containsKey&lt;/code&gt; の&lt;/a&gt;動作は、これら2つの場合を区別するために使用されてもよいです。</target>
        </trans-unit>
        <trans-unit id="e67060fc3a5c293f1477fca093e79e4ac15cb79a" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;null&lt;/code&gt; does not &lt;em&gt;necessarily&lt;/em&gt; indicate that the map contains no mapping for the key; it's also possible that the map explicitly maps the key to &lt;code&gt;null&lt;/code&gt;. The &lt;a href=&quot;treemap#containsKey-java.lang.Object-&quot;&gt;&lt;code&gt;containsKey&lt;/code&gt;&lt;/a&gt; operation may be used to distinguish these two cases.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; の戻り値は、マップがキーのマッピングを含まないことを&lt;em&gt;必ずしも&lt;/em&gt;示すわけでは&lt;em&gt;あり&lt;/em&gt;ません。マップがキーを &lt;code&gt;null&lt;/code&gt; に明示的にマップすることも可能です。&lt;a href=&quot;treemap#containsKey-java.lang.Object-&quot;&gt; &lt;code&gt;containsKey&lt;/code&gt; の&lt;/a&gt;動作は、これら2つの場合を区別するために使用されてもよいです。</target>
        </trans-unit>
        <trans-unit id="abc6e6f41022bd529fd1b135f0a016d0d7518def" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;true&lt;/code&gt; implies that it is highly likely that all of the data in this buffer is resident in physical memory and may therefore be accessed without incurring any virtual-memory page faults or I/O operations. A return value of &lt;code&gt;false&lt;/code&gt; does not necessarily imply that the buffer's content is not resident in physical memory.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; の戻り値は、このバッファ内のすべてのデータが物理メモリに常駐している可能性が高いため、仮想メモリのページフォールトやI / O操作を発生させることなくアクセスできることを意味します。 &lt;code&gt;false&lt;/code&gt; の戻り値は、バッファのコンテンツが物理メモリに常駐していないことを必ずしも意味しません。</target>
        </trans-unit>
        <trans-unit id="aae1f6ee5d60ae1f03e6e4e821571fa35d516eb9" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;true&lt;/code&gt; implies that it is highly likely that all of the data in this segment is resident in physical memory and may therefore be accessed without incurring any virtual-memory page faults or I/O operations. A return value of &lt;code&gt;false&lt;/code&gt; does not necessarily imply that the segment's content is not resident in physical memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09ce668b6b379eac10e99c1ee1b21763ceab49e" translate="yes" xml:space="preserve">
          <source>A return value of &lt;code&gt;true&lt;/code&gt; is not an absolute guarantee of successful encoding; the encoding process may still produce errors due to factors such as I/O errors, inconsistent or malformed data structures, etc. The intent is that a reasonable inspection of the basic structure of the image be performed in order to determine if it is within the scope of the encoding format. For example, a service provider for a format that can only encode greyscale would return &lt;code&gt;false&lt;/code&gt; if handed an RGB &lt;code&gt;BufferedImage&lt;/code&gt;. Similarly, a service provider for a format that can encode 8-bit RGB imagery might refuse to encode an image with an associated alpha channel.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; の戻り値は、正常なエンコーディングの絶対的な保証ではありません。 I / Oエラー、一貫性のない、または形式が正しくないデータ構造などの要因により、エンコーディングプロセスは依然としてエラーを生成する可能性があります。その目的は、画像の基本構造の妥当な検査を実行して、それがエンコード形式の範囲。たとえば、グレースケールのみをエンコードできる形式のサービスプロバイダーは、RGB &lt;code&gt;BufferedImage&lt;/code&gt; を渡すと &lt;code&gt;false&lt;/code&gt; を返します。同様に、8ビットRGB画像をエンコードできる形式のサービスプロバイダーは、関連するアルファチャネルを持つ画像のエンコードを拒否する場合があります。</target>
        </trans-unit>
        <trans-unit id="504a971e6f5bcef8918be0b18a900ddb2e703fb7" translate="yes" xml:space="preserve">
          <source>A return value of true indicates &lt;code&gt;anEdit&lt;/code&gt; was incorporated into this edit. A return value of false indicates &lt;code&gt;anEdit&lt;/code&gt; may not be incorporated into this edit.</source>
          <target state="translated">真の戻り値を示し &lt;code&gt;anEdit&lt;/code&gt; がこの編集に組み込まれました。偽の戻り値を示し &lt;code&gt;anEdit&lt;/code&gt; がこの編集にも組み込むことはできません。</target>
        </trans-unit>
        <trans-unit id="51198ce5afdd2d38acd4913a60836bf4bdde059f" translate="yes" xml:space="preserve">
          <source>A reusable synchronization barrier, similar in functionality to &lt;a href=&quot;cyclicbarrier&quot;&gt;&lt;code&gt;CyclicBarrier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;countdownlatch&quot;&gt;&lt;code&gt;CountDownLatch&lt;/code&gt;&lt;/a&gt; but supporting more flexible usage.</source>
          <target state="translated">&lt;a href=&quot;cyclicbarrier&quot;&gt; &lt;code&gt;CyclicBarrier&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;countdownlatch&quot;&gt; &lt;code&gt;CountDownLatch&lt;/code&gt; &lt;/a&gt;と機能的に似ていますが、より柔軟な使用法をサポートする再利用可能な同期バリア。</target>
        </trans-unit>
        <trans-unit id="8679b4982b232bceade418fede48eb8cef0230e7" translate="yes" xml:space="preserve">
          <source>A role indicating the object acts as a formula for calculating a value.</source>
          <target state="translated">オブジェクトが値を計算するための式として機能することを示す役割。</target>
        </trans-unit>
        <trans-unit id="670c7e74eaf400ef328bacfb4f58476c04552663" translate="yes" xml:space="preserve">
          <source>A role indicating the object acts as a formula for calculating a value. An example is a formula in a spreadsheet cell.</source>
          <target state="translated">オブジェクトが値を計算するための数式として機能することを示す役割。例としては、表計算セル内の数式が挙げられます。</target>
        </trans-unit>
        <trans-unit id="bf6eeab1b1cb986bfcc6858dee2fea120fb8a7fc" translate="yes" xml:space="preserve">
          <source>A role indicating the object monitors the progress of some operation.</source>
          <target state="translated">オブジェクトが何らかの操作の進行状況を監視することを示す役割。</target>
        </trans-unit>
        <trans-unit id="5b631d43cddaaf01022a11d89762e0b4164b9855" translate="yes" xml:space="preserve">
          <source>A root module, or a direct or transitive dependency, is not found.</source>
          <target state="translated">ルート・モジュール、または直接依存関係または遷移依存関係が見つかりません。</target>
        </trans-unit>
        <trans-unit id="a638760142903f5f949520565470983b944227f3" translate="yes" xml:space="preserve">
          <source>A row in a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d76c2d9a6b09b38c1041615cad858c0f196860e" translate="yes" xml:space="preserve">
          <source>A row in a table. See the TR element definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceba2bc58203f255151640dbd994659d2a124026" translate="yes" xml:space="preserve">
          <source>A rule expressing how to create a transition.</source>
          <target state="translated">遷移の作り方を表現したルール。</target>
        </trans-unit>
        <trans-unit id="fbe2fbe6bac379ab6561e26f9691cc3c401e88ae" translate="yes" xml:space="preserve">
          <source>A rule implementation may or may not store full information about historic and future transitions, and the information stored is only as accurate as that supplied to the implementation by the rules provider. Applications should treat the data provided as representing the best information available to the implementation of this rule.</source>
          <target state="translated">ルールの実装は、過去と将来の移行に関する完全な情報を保存してもしなくてもよく、保存される情報は、ルール提供者が実装に提供したものと同じくらいの正確さしかない。アプリケーションは、提供されたデータを、このルールの実装に利用可能な最善の情報を表すものとして扱うべきである。</target>
        </trans-unit>
        <trans-unit id="394798c7c3b7c754a460dee69be099dc1e1805d3" translate="yes" xml:space="preserve">
          <source>A ruler is an object used to measure distance.</source>
          <target state="translated">定規とは、距離を測るために使用する物体のことです。</target>
        </trans-unit>
        <trans-unit id="f28f01779dec56117901078530808f10f343aa0d" translate="yes" xml:space="preserve">
          <source>A runtime exception for Provider exceptions (such as misconfiguration errors or unrecoverable internal errors), which may be subclassed by Providers to throw specialized, provider-specific runtime errors.</source>
          <target state="translated">プロバイダの例外 (設定ミスや回復不可能な内部エラーなど)のための実行時例外で、プロバイダによってサブクラス化され、プロバイダ固有の特殊な実行時エラーを発生させることができます。</target>
        </trans-unit>
        <trans-unit id="b78afb182078db8bb940fb9530c4da469af94761" translate="yes" xml:space="preserve">
          <source>A sample implementation would look something like this:</source>
          <target state="translated">サンプルの実装は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="81c10e58416fe365c33722061e35ff0670d87792" translate="yes" xml:space="preserve">
          <source>A scalable concurrent &lt;a href=&quot;../navigableset&quot;&gt;&lt;code&gt;NavigableSet&lt;/code&gt;&lt;/a&gt; implementation based on a &lt;a href=&quot;concurrentskiplistmap&quot;&gt;&lt;code&gt;ConcurrentSkipListMap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;concurrentskiplistmap&quot;&gt; &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt; に&lt;/a&gt;基づくスケーラブルな並行&lt;a href=&quot;../navigableset&quot;&gt; &lt;code&gt;NavigableSet&lt;/code&gt; &lt;/a&gt;実装。</target>
        </trans-unit>
        <trans-unit id="372f3a18469e872de04d341a2be746f10cb1c924" translate="yes" xml:space="preserve">
          <source>A scalable concurrent &lt;a href=&quot;../navigableset&quot;&gt;&lt;code&gt;NavigableSet&lt;/code&gt;&lt;/a&gt; implementation based on a &lt;a href=&quot;concurrentskiplistmap&quot;&gt;&lt;code&gt;ConcurrentSkipListMap&lt;/code&gt;&lt;/a&gt;. The elements of the set are kept sorted according to their &lt;a href=&quot;../../lang/comparable&quot;&gt;natural ordering&lt;/a&gt;, or by a &lt;a href=&quot;../comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; provided at set creation time, depending on which constructor is used.</source>
          <target state="translated">&lt;a href=&quot;concurrentskiplistmap&quot;&gt; &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt; に&lt;/a&gt;基づくスケーラブルな並行&lt;a href=&quot;../navigableset&quot;&gt; &lt;code&gt;NavigableSet&lt;/code&gt; &lt;/a&gt;実装。セットの要素は、使用されるコンストラクターに応じて、&lt;a href=&quot;../../lang/comparable&quot;&gt;自然な順序&lt;/a&gt;に従って、またはセットの作成時に提供される&lt;a href=&quot;../comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;レーターによってソートされたままになります。</target>
        </trans-unit>
        <trans-unit id="39408f44242f692b61c660267d1f4eb72674c1a2" translate="yes" xml:space="preserve">
          <source>A scalable concurrent &lt;a href=&quot;concurrentnavigablemap&quot;&gt;&lt;code&gt;ConcurrentNavigableMap&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">スケーラブルな並行&lt;a href=&quot;concurrentnavigablemap&quot;&gt; &lt;code&gt;ConcurrentNavigableMap&lt;/code&gt; &lt;/a&gt;実装。</target>
        </trans-unit>
        <trans-unit id="d12e6fbfc6ba72b83d61bd03fcce224dcf14db27" translate="yes" xml:space="preserve">
          <source>A scalable concurrent &lt;a href=&quot;concurrentnavigablemap&quot;&gt;&lt;code&gt;ConcurrentNavigableMap&lt;/code&gt;&lt;/a&gt; implementation. The map is sorted according to the &lt;a href=&quot;../../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; of its keys, or by a &lt;a href=&quot;../comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; provided at map creation time, depending on which constructor is used.</source>
          <target state="translated">スケーラブルな並行&lt;a href=&quot;concurrentnavigablemap&quot;&gt; &lt;code&gt;ConcurrentNavigableMap&lt;/code&gt; &lt;/a&gt;実装。マップは、使用されるコンストラクターに応じて、キーの&lt;a href=&quot;../../lang/comparable&quot;&gt;自然な順序&lt;/a&gt;に従って、またはマップの作成時に提供される&lt;a href=&quot;../comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;レーターによってソートされます。</target>
        </trans-unit>
        <trans-unit id="6222159f73ef72435df37cb8cb38479210dd895d" translate="yes" xml:space="preserve">
          <source>A scaled version of an image will not necessarily be available immediately just because an unscaled version of the image has been constructed for this output device. Each size of the image may be cached separately and generated from the original data in a separate image production sequence.</source>
          <target state="translated">画像の縮尺版は、この出力装置のために非縮尺版の画像が構築されたからといって、すぐに利用可能になるとは限らない。画像の各サイズは、別個にキャッシュされ、元のデータから別個の画像生成シーケンスで生成されてもよい。</target>
        </trans-unit>
        <trans-unit id="ea6b7d26a3126c02ae3789681655ab1667d94bd2" translate="yes" xml:space="preserve">
          <source>A scanner can read text from any object which implements the &lt;a href=&quot;../lang/readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; interface. If an invocation of the underlying readable's &lt;a href=&quot;../lang/readable#read(java.nio.CharBuffer)&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; method throws an &lt;a href=&quot;../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; then the scanner assumes that the end of the input has been reached. The most recent &lt;code&gt;IOException&lt;/code&gt; thrown by the underlying readable can be retrieved via the &lt;a href=&quot;#ioException()&quot;&gt;&lt;code&gt;ioException()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">スキャナーは、読み取り&lt;a href=&quot;../lang/readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt;インターフェースを実装する任意のオブジェクトからテキストを読み取ることができます。基になる読み取り可能オブジェクトの&lt;a href=&quot;../lang/readable#read(java.nio.CharBuffer)&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しが&lt;a href=&quot;../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; を&lt;/a&gt;スローした場合、スキャナーは入力の終わりに到達したと見なします。基になる読み取り可能&lt;a href=&quot;#ioException()&quot;&gt; &lt;code&gt;ioException()&lt;/code&gt; &lt;/a&gt;によってスローされた最新の &lt;code&gt;IOException&lt;/code&gt; は、ioException（）メソッドを介して取得できます。</target>
        </trans-unit>
        <trans-unit id="7f38edc3f196c2ee8906d274bacf229a64607e0e" translate="yes" xml:space="preserve">
          <source>A scanner can read text from any object which implements the &lt;a href=&quot;../lang/readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; interface. If an invocation of the underlying readable's &lt;a href=&quot;../lang/readable#read-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;Readable.read(java.nio.CharBuffer)&lt;/code&gt;&lt;/a&gt; method throws an &lt;a href=&quot;../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; then the scanner assumes that the end of the input has been reached. The most recent &lt;code&gt;IOException&lt;/code&gt; thrown by the underlying readable can be retrieved via the &lt;a href=&quot;scanner#ioException--&quot;&gt;&lt;code&gt;ioException()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">スキャナーは、&lt;a href=&quot;../lang/readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt;インターフェースを実装する任意のオブジェクトからテキストを読み取ることができます。基になる読み取り可能の&lt;a href=&quot;../lang/readable#read-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;Readable.read(java.nio.CharBuffer)&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しが&lt;a href=&quot;../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; を&lt;/a&gt;スローした場合、スキャナーは入力の最後に到達したと見なします。基になる読み取り可能&lt;a href=&quot;scanner#ioException--&quot;&gt; &lt;code&gt;ioException()&lt;/code&gt; &lt;/a&gt;によってスローされた最新の &lt;code&gt;IOException&lt;/code&gt; は、ioException（）メソッドを介して取得できます。</target>
        </trans-unit>
        <trans-unit id="10fc0e1a03bd857972a6f4fd2c866bc2fc840c27" translate="yes" xml:space="preserve">
          <source>A scanner will default to interpreting numbers as decimal unless a different radix has been set by using the &lt;a href=&quot;#useRadix(int)&quot;&gt;&lt;code&gt;useRadix(int)&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's radix to &lt;code&gt;10&lt;/code&gt; regardless of whether it was previously changed.</source>
          <target state="translated">&lt;a href=&quot;#useRadix(int)&quot;&gt; &lt;code&gt;useRadix(int)&lt;/code&gt; &lt;/a&gt;メソッドを使用して別の基数が設定されていない限り、スキャナーはデフォルトで数値を10進数として解釈します。&lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;メソッドは、スキャナの基数の値をリセットする &lt;code&gt;10&lt;/code&gt; かかわらず、それが以前に変更されたかどうか。</target>
        </trans-unit>
        <trans-unit id="ffcbdc51bd89316399f57b450091b94d78f24a31" translate="yes" xml:space="preserve">
          <source>A scanner will default to interpreting numbers as decimal unless a different radix has been set by using the &lt;a href=&quot;scanner#useRadix-int-&quot;&gt;&lt;code&gt;useRadix(int)&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;scanner#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's radix to &lt;code&gt;10&lt;/code&gt; regardless of whether it was previously changed.</source>
          <target state="translated">スキャナーは、&lt;a href=&quot;scanner#useRadix-int-&quot;&gt; &lt;code&gt;useRadix(int)&lt;/code&gt; &lt;/a&gt;メソッドを使用して異なる基数が設定されていない限り、デフォルトで数値を10進数として解釈します。&lt;a href=&quot;scanner#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;メソッドは、スキャナの基数の値をリセットする &lt;code&gt;10&lt;/code&gt; かかわらず、それが以前に変更されたかどうか。</target>
        </trans-unit>
        <trans-unit id="1025b7e845ba46f157b11fb807dc46312c48f8f9" translate="yes" xml:space="preserve">
          <source>A scanner will never search more than &lt;code&gt;horizon&lt;/code&gt; code points beyond its current position. Note that a match may be clipped by the horizon; that is, an arbitrary match result may have been different if the horizon had been larger. The scanner treats the horizon as a transparent, non-anchoring bound (see &lt;a href=&quot;regex/matcher#useTransparentBounds(boolean)&quot;&gt;&lt;code&gt;Matcher.useTransparentBounds(boolean)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;regex/matcher#useAnchoringBounds(boolean)&quot;&gt;&lt;code&gt;Matcher.useAnchoringBounds(boolean)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">スキャナーは、現在の位置を超えて &lt;code&gt;horizon&lt;/code&gt; コードポイントを超えて検索することはありません。一致が地平線によってクリップされる可能性があることに注意してください。つまり、ホライズンが大きければ、任意の一致結果が異なる可能性があります。スキャナーは、地平線を透明な非アンカー境界として扱います（&lt;a href=&quot;regex/matcher#useTransparentBounds(boolean)&quot;&gt; &lt;code&gt;Matcher.useTransparentBounds(boolean)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;regex/matcher#useAnchoringBounds(boolean)&quot;&gt; &lt;code&gt;Matcher.useAnchoringBounds(boolean)&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="4823d12d1bfba50c42ac074f1c596841b76be69c" translate="yes" xml:space="preserve">
          <source>A scanner will never search more than &lt;code&gt;horizon&lt;/code&gt; code points beyond its current position. Note that a match may be clipped by the horizon; that is, an arbitrary match result may have been different if the horizon had been larger. The scanner treats the horizon as a transparent, non-anchoring bound (see &lt;a href=&quot;regex/matcher#useTransparentBounds-boolean-&quot;&gt;&lt;code&gt;Matcher.useTransparentBounds(boolean)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;regex/matcher#useAnchoringBounds-boolean-&quot;&gt;&lt;code&gt;Matcher.useAnchoringBounds(boolean)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">スキャナーは、現在の位置を超えて &lt;code&gt;horizon&lt;/code&gt; コードポイント以上を検索することはありません。一致は地平線によって切り取られる場合があることに注意してください。つまり、ホライズンが大きければ、任意の一致結果が異なる可能性があります。スキャナーは地平線を透明な非アンカー境界として扱います（&lt;a href=&quot;regex/matcher#useTransparentBounds-boolean-&quot;&gt; &lt;code&gt;Matcher.useTransparentBounds(boolean)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;regex/matcher#useAnchoringBounds-boolean-&quot;&gt; &lt;code&gt;Matcher.useAnchoringBounds(boolean)&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="920c53cb62be380ece95aa01040d89688a85bb11" translate="yes" xml:space="preserve">
          <source>A scanner's locale affects many elements of its default primitive matching regular expressions; see &lt;a href=&quot;#localized-numbers&quot;&gt;localized numbers&lt;/a&gt; above.</source>
          <target state="translated">スキャナーのロケールは、デフォルトのプリミティブマッチング正規表現の多くの要素に影響します。上記の&lt;a href=&quot;#localized-numbers&quot;&gt;ローカライズされた数値を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="de441a89b0a90c8710d2440914bdcf80aaf3748e" translate="yes" xml:space="preserve">
          <source>A scanner's radix affects elements of its default number matching regular expressions; see &lt;a href=&quot;#localized-numbers&quot;&gt;localized numbers&lt;/a&gt; above.</source>
          <target state="translated">スキャナーの基数は、デフォルトの数値一致正規表現の要素に影響します。上記の&lt;a href=&quot;#localized-numbers&quot;&gt;ローカライズされた数値を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="463f9dc1adcec0b3ab8ad69db9ae10fbeb89d5de" translate="yes" xml:space="preserve">
          <source>A scanning operation may block waiting for input.</source>
          <target state="translated">スキャン動作は、入力待ちをブロックすることがあります。</target>
        </trans-unit>
        <trans-unit id="6b0b46d40ab08311925752f3627c1f3228773cb7" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ソースバージョン&lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; に&lt;/a&gt;適切なデフォルトの動作を持つプログラム要素のスキャン訪問者。</target>
        </trans-unit>
        <trans-unit id="fa6a46f6deb681f0e34f3ec4a59f01aa7b7ee01d" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">ソースバージョン&lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; に&lt;/a&gt;適切なデフォルトの動作を持つプログラム要素のスキャン訪問者。 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; このクラスのメソッドを呼び出すことにより、その構成要素をスキャン &lt;code&gt;scan&lt;/code&gt; 彼らに&lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;囲まれた要素&lt;/a&gt;、&lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;パラメータ&lt;/a&gt;個々のメソッドの仕様に示されているように、など、。サブクラスは、 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; メソッドをオーバーライドすることにより、訪問される順序要素を制御できます。スキャナのクライアントが所望の動作を得ることができる起動することに留意されたい &lt;code&gt;v.scan(e, p)&lt;/code&gt; よりもむしろ &lt;code&gt;v.visit(e, p)&lt;/code&gt; 関心のルートオブジェクトに。</target>
        </trans-unit>
        <trans-unit id="95ad775e8e884e9119819e830ba28de6a123cbf9" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b027e9a381fe13c97e6102ad6355d73a3b753fa7" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a892f678bf1f5e2745d00de921fc7d84cd33ca5" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5bfdb412f0f643e45e585c51a554465d2141ee0" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f0091492e10ac229bb434cc10a5fde50bc5549" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素のスキャンビジター。</target>
        </trans-unit>
        <trans-unit id="852306c9c7b8cbb47df106edc4f858eeb5e9d7a0" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素のスキャンビジター。 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; このクラスのメソッドを呼び出すことにより、その構成要素をスキャン &lt;code&gt;scan&lt;/code&gt; 彼らに&lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;囲まれた要素&lt;/a&gt;、&lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;パラメータ&lt;/a&gt;個々のメソッドの仕様に示されているように、など、。サブクラスは、 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; メソッドをオーバーライドすることにより、訪問される要素の順序を制御できます。スキャナのクライアントが所望の動作を得ることができる起動することに留意されたい &lt;code&gt;v.scan(e, p)&lt;/code&gt; よりもむしろ &lt;code&gt;v.visit(e, p)&lt;/code&gt; 関心のルートオブジェクトに。</target>
        </trans-unit>
        <trans-unit id="e3e3a645379e6a0b5ea1c9daaaf35c3adfdbd240" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素のスキャン訪問者。 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; このクラスのメソッドを呼び出すことにより、その構成要素をスキャン &lt;code&gt;scan&lt;/code&gt; 彼らに&lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;囲まれた要素&lt;/a&gt;、&lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;パラメータ&lt;/a&gt;個々のメソッドの仕様に示されているように、など、。サブクラスは、 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; メソッドをオーバーライドすることにより、訪問される順序要素を制御できます。スキャナのクライアントが所望の動作を得ることができる起動することに留意されたい &lt;code&gt;v.scan(e, p)&lt;/code&gt; よりもむしろ &lt;code&gt;v.visit(e, p)&lt;/code&gt; 関心のルートオブジェクトに。</target>
        </trans-unit>
        <trans-unit id="3489191155cf64520e82e726b24cf95135015862" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素のスキャンビジター。</target>
        </trans-unit>
        <trans-unit id="668bcc88064b6a81b73a0380b603d056d1e1f1b0" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素のスキャンビジター。 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; このクラスのメソッドを呼び出すことにより、その構成要素をスキャン &lt;code&gt;scan&lt;/code&gt; 彼らに&lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;囲まれた要素&lt;/a&gt;、&lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;パラメータ&lt;/a&gt;個々のメソッドの仕様に示されているように、など、。サブクラスは、 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; メソッドをオーバーライドすることにより、訪問される要素の順序を制御できます。スキャナのクライアントが所望の動作を得ることができる起動することに留意されたい &lt;code&gt;v.scan(e, p)&lt;/code&gt; よりもむしろ &lt;code&gt;v.visit(e, p)&lt;/code&gt; 関心のルートオブジェクトに。</target>
        </trans-unit>
        <trans-unit id="05d7dbdb286de3308233507bef3c217c06035931" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素のスキャン訪問者。 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; このクラスのメソッドを呼び出すことにより、その構成要素をスキャン &lt;code&gt;scan&lt;/code&gt; 彼らに&lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;囲まれた要素&lt;/a&gt;、&lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;パラメータ&lt;/a&gt;個々のメソッドの仕様に示されているように、など、。サブクラスは、 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; メソッドをオーバーライドすることにより、訪問される順序要素を制御できます。スキャナのクライアントが所望の動作を得ることができる起動することに留意されたい &lt;code&gt;v.scan(e, p)&lt;/code&gt; よりもむしろ &lt;code&gt;v.visit(e, p)&lt;/code&gt; 関心のルートオブジェクトに。</target>
        </trans-unit>
        <trans-unit id="6b9c02b84b9c03296e920e9a1becaeb673d23b06" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素のスキャンビジター。</target>
        </trans-unit>
        <trans-unit id="8fbec827facc498332d8a19639919f86b254ab3f" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素のスキャンビジター。 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; このクラスのメソッドを呼び出すことにより、その構成要素をスキャン &lt;code&gt;scan&lt;/code&gt; 彼らに&lt;a href=&quot;../element/element#getEnclosedElements--&quot;&gt;囲まれた要素&lt;/a&gt;、&lt;a href=&quot;../element/executableelement#getParameters--&quot;&gt;パラメータ&lt;/a&gt;個々のメソッドの仕様に示されているように、など、。サブクラスは、 &lt;code&gt;visit&lt;i&gt;XYZ&lt;/i&gt;&lt;/code&gt; メソッドをオーバーライドすることにより、訪問される要素の順序を制御できます。スキャナのクライアントが所望の動作を得ることができる起動することに留意されたい &lt;code&gt;v.scan(e, p)&lt;/code&gt; よりもむしろ &lt;code&gt;v.visit(e, p)&lt;/code&gt; 関心のルートオブジェクトに。</target>
        </trans-unit>
        <trans-unit id="e0f1acb297fb22d32851fb084fd5a8bdb68e0126" translate="yes" xml:space="preserve">
          <source>A scanning visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. The &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods in this class scan their component elements by calling &lt;code&gt;scan&lt;/code&gt; on their &lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;enclosed elements&lt;/a&gt;, &lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;parameters&lt;/a&gt;, etc., as indicated in the individual method specifications. A subclass can control the order elements are visited by overriding the &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; methods. Note that clients of a scanner may get the desired behavior be invoking &lt;code&gt;v.scan(e, p)&lt;/code&gt; rather than &lt;code&gt;v.visit(e, p)&lt;/code&gt; on the root objects of interest.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素のスキャン訪問者。 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; このクラスのメソッドを呼び出すことにより、その構成要素をスキャン &lt;code&gt;scan&lt;/code&gt; 彼らに&lt;a href=&quot;../element/element#getEnclosedElements()&quot;&gt;囲まれた要素&lt;/a&gt;、&lt;a href=&quot;../element/executableelement#getParameters()&quot;&gt;パラメータ&lt;/a&gt;個々のメソッドの仕様に示されているように、など、。サブクラスは、 &lt;code&gt;visit&lt;i&gt;Xyz&lt;/i&gt;&lt;/code&gt; メソッドをオーバーライドすることにより、訪問される順序要素を制御できます。スキャナのクライアントが所望の動作を得ることができる起動することに留意されたい &lt;code&gt;v.scan(e, p)&lt;/code&gt; よりもむしろ &lt;code&gt;v.visit(e, p)&lt;/code&gt; 関心のルートオブジェクトに。</target>
        </trans-unit>
        <trans-unit id="85d47bde242f3713bbddb8020c7a6cd6d258eedc" translate="yes" xml:space="preserve">
          <source>A second &lt;code&gt;boolean&lt;/code&gt; parameter allows you to specify whether or not to perform printing in an interactive mode. If &lt;code&gt;true&lt;/code&gt;, a modal progress dialog, with an abort option, is displayed for the duration of printing . This dialog also prevents any user action which may affect the table. However, it can not prevent the table from being modified by code (for example, another thread that posts updates using &lt;code&gt;SwingUtilities.invokeLater&lt;/code&gt;). It is therefore the responsibility of the developer to ensure that no other code modifies the table in any way during printing (invalid modifications include changes in: size, renderers, or underlying data). Printing behavior is undefined when the table is changed during printing.</source>
          <target state="translated">2番目の &lt;code&gt;boolean&lt;/code&gt; パラメータを使用すると、インタラクティブモードで印刷を実行するかどうかを指定できます。 &lt;code&gt;true&lt;/code&gt; の場合、印刷中は、中止オプション付きのモーダル進行状況ダイアログが表示されます。このダイアログは、テーブルに影響を与える可能性のあるユーザーアクションも防止します。ただし、コードによるテーブルの変更を防ぐことはできません（たとえば、 &lt;code&gt;SwingUtilities.invokeLater&lt;/code&gt; を使用して更新を投稿する別のスレッド）。したがって、印刷中に他のコードがテーブルを変更しないようにするのは開発者の責任です（無効な変更には、サイズ、レンダラー、または基になるデータの変更が含まれます）。印刷中にテーブルが変更された場合の印刷動作は未定義です。</target>
        </trans-unit>
        <trans-unit id="b5c03eca2ae7ca372fa888d6c322d4d60b58c453" translate="yes" xml:space="preserve">
          <source>A second is represented by an integer from 0 to 61; the values 60 and 61 occur only for leap seconds and even then only in Java implementations that actually track leap seconds correctly. Because of the manner in which leap seconds are currently introduced, it is extremely unlikely that two leap seconds will occur in the same minute, but this specification follows the date and time conventions for ISO C.</source>
          <target state="translated">1秒は0から61までの整数で表されます。値60と61はうるう秒のためにのみ発生し、実際にうるう秒を正しく追跡するJava実装でのみ発生します。現在のうるう秒の導入方法のため、同じ1分間に2つのうるう秒が発生することは極めて稀ですが、この仕様ではISO Cの日付と時刻の規則に従います。</target>
        </trans-unit>
        <trans-unit id="05cceae07fc485786b496bde2a28218d5f2af2b9" translate="yes" xml:space="preserve">
          <source>A second major use for &lt;code&gt;CachedRowSet&lt;/code&gt; objects is to provide scrolling and updating for &lt;code&gt;ResultSet&lt;/code&gt; objects that do not provide these capabilities themselves. In other words, a &lt;code&gt;CachedRowSet&lt;/code&gt; object can be used to augment the capabilities of a JDBC technology-enabled driver (hereafter called a &quot;JDBC driver&quot;) when the DBMS does not provide full support for scrolling and updating. To achieve the effect of making a non-scrollable and read-only &lt;code&gt;ResultSet&lt;/code&gt; object scrollable and updatable, a programmer simply needs to create a &lt;code&gt;CachedRowSet&lt;/code&gt; object populated with that &lt;code&gt;ResultSet&lt;/code&gt; object's data. This is demonstrated in the following code fragment, where &lt;code&gt;stmt&lt;/code&gt; is a &lt;code&gt;Statement&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトの2番目の主な用途は、これらの機能自体を提供しない &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトのスクロールと更新を提供することです。つまり、 &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトを使用して、DBMSがスクロールと更新を完全にサポートしていない場合に、JDBCテクノロジ対応ドライバー（以下、「JDBCドライバー」と呼びます）の機能を拡張できます。スクロール不可で読み取り専用の &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトをスクロール可能で更新可能にする効果を実現するには、プログラマーは、その &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトのデータが入力された &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトを作成するだけです。これは、次のコードフラグメントで示されています。ここで、 &lt;code&gt;stmt&lt;/code&gt; は &lt;code&gt;Statement&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="87438e78fd5bcd6ab505456e32aa2e20beacb314" translate="yes" xml:space="preserve">
          <source>A second reason that a throwable may have a cause is that the method that throws it must conform to a general-purpose interface that does not permit the method to throw the cause directly. For example, suppose a persistent collection conforms to the &lt;a href=&quot;../util/collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; interface, and that its persistence is implemented atop &lt;code&gt;java.io&lt;/code&gt;. Suppose the internals of the &lt;code&gt;add&lt;/code&gt; method can throw an &lt;a href=&quot;../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;. The implementation can communicate the details of the &lt;code&gt;IOException&lt;/code&gt; to its caller while conforming to the &lt;code&gt;Collection&lt;/code&gt; interface by wrapping the &lt;code&gt;IOException&lt;/code&gt; in an appropriate unchecked exception. (The specification for the persistent collection should indicate that it is capable of throwing such exceptions.)</source>
          <target state="translated">スロー可能オブジェクトに原因がある可能性のある2つ目の理由は、スロー可能オブジェクトをスローするメソッドが、メソッドが直接原因をスローできないようにする汎用インターフェースに準拠する必要があることです。たとえば、永続的なコレクションが&lt;a href=&quot;../util/collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;インターフェースに準拠し、その永続性が &lt;code&gt;java.io&lt;/code&gt; の上に実装されているとします。 &lt;code&gt;add&lt;/code&gt; メソッドの内部が&lt;a href=&quot;../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;をスローできると仮定します。実装は、の詳細通信可能 &lt;code&gt;IOException&lt;/code&gt; に適合しながら、その呼び出し側に &lt;code&gt;Collection&lt;/code&gt; インターフェースラップによって &lt;code&gt;IOException&lt;/code&gt; がチェックされていない適切な例外。（永続コレクションの仕様は、そのような例外をスローできることを示す必要があります。）</target>
        </trans-unit>
        <trans-unit id="a817d2be903587b47f518798cb8077cc06c4f5b5" translate="yes" xml:space="preserve">
          <source>A secret (symmetric) key.</source>
          <target state="translated">秘密の(対称的な)鍵。</target>
        </trans-unit>
        <trans-unit id="c237bbe6413c8ab00dab0a0e7d560d3daf37974b" translate="yes" xml:space="preserve">
          <source>A secret (symmetric) key. The purpose of this interface is to group (and provide type safety for) all secret key interfaces.</source>
          <target state="translated">秘密鍵 (対称鍵)。このインターフェイスの目的は、すべての秘密鍵インターフェイスをグループ化すること(および型安全性を提供すること)です。</target>
        </trans-unit>
        <trans-unit id="c0d3c60bd51a3d192358969519ffb0d96d1d1455" translate="yes" xml:space="preserve">
          <source>A security context typically maintains sequencing and replay detection information about the tokens it processes. Therefore, the sequence in which any tokens are presented to this context for processing can be important. Also note that none of the methods in this interface are synchronized. Therefore, it is not advisable to share a &lt;code&gt;GSSContext&lt;/code&gt; among several threads unless some application level synchronization is in place.</source>
          <target state="translated">セキュリティコンテキストは通常​​、処理するトークンに関するシーケンスおよび再生検出情報を維持します。したがって、トークンが処理のためにこのコンテキストに提示される順序が重要になる可能性があります。また、このインターフェースのどのメソッドも同期されていないことに注意してください。したがって、アプリケーションレベルの同期が行われていない限り、 &lt;code&gt;GSSContext&lt;/code&gt; を複数のスレッド間で共有することはお勧めできません。</target>
        </trans-unit>
        <trans-unit id="c3d2644a9159ed5f5bb5808e4cc0a44de2991792" translate="yes" xml:space="preserve">
          <source>A security provider for SaslClientFactory registers with the JCA Security Provider Framework keys of the form</source>
          <target state="translated">SaslClientFactory 用のセキュリティプロバイダは、JCA セキュリティプロバイダフレームワークのキーを使用して登録します。</target>
        </trans-unit>
        <trans-unit id="49483787f2aaf0382ae93042774782d1f84f67d3" translate="yes" xml:space="preserve">
          <source>A security provider for SaslServerFactory registers with the JCA Security Provider Framework keys of the form</source>
          <target state="translated">SaslServerFactory のセキュリティプロバイダは、JCA セキュリティプロバイダフレームワークのキーを使用して登録します。</target>
        </trans-unit>
        <trans-unit id="33797f519554324efd3fbbabc9ead2638c73d31a" translate="yes" xml:space="preserve">
          <source>A seekable byte channel is connected to an entity, typically a file, that contains a variable-length sequence of bytes that can be read and written. The current position can be &lt;a href=&quot;#position()&quot;&gt;&lt;code&gt;&lt;i&gt;queried&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#position(long)&quot;&gt;&lt;code&gt;&lt;i&gt;modified&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;. The channel also provides access to the current</source>
          <target state="translated">シーク可能なバイトチャネルは、読み取りと書き込みが可能な可変長のバイトシーケンスを含むエンティティ（通常はファイル）に接続されます。現在の位置を&lt;a href=&quot;#position()&quot;&gt; &lt;code&gt;&lt;i&gt;queried&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#position(long)&quot;&gt; &lt;code&gt;&lt;i&gt;modified&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;できます。チャネルはまた、現在のへのアクセスを提供します</target>
        </trans-unit>
        <trans-unit id="e3b98fbb0484864c2f0ee936ac85470708e6b590" translate="yes" xml:space="preserve">
          <source>A seekable byte channel is connected to an entity, typically a file, that contains a variable-length sequence of bytes that can be read and written. The current position can be &lt;a href=&quot;seekablebytechannel#position--&quot;&gt;&lt;code&gt;&lt;i&gt;queried&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt;&lt;code&gt;&lt;i&gt;modified&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;. The channel also provides access to the current</source>
          <target state="translated">シーク可能なバイトチャネルは、読み取りと書き込みが可能な可変長のバイトシーケンスを含むエンティティ（通常はファイル）に接続されます。現在の位置を&lt;a href=&quot;seekablebytechannel#position--&quot;&gt; &lt;code&gt;&lt;i&gt;queried&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;して&lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt; &lt;code&gt;&lt;i&gt;modified&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;できます。チャネルはまた、現在の</target>
        </trans-unit>
        <trans-unit id="0dafd90c42f612ddec3147173ec7fc806e70baca" translate="yes" xml:space="preserve">
          <source>A seekable input stream interface for use by &lt;code&gt;ImageReader&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; で使用するシーク可能な入力ストリームインターフェイス。</target>
        </trans-unit>
        <trans-unit id="ba782d2a1d637b5de1068ad44a37d773d8474b58" translate="yes" xml:space="preserve">
          <source>A seekable input stream interface for use by &lt;code&gt;ImageReader&lt;/code&gt;s. Various input sources, such as &lt;code&gt;InputStream&lt;/code&gt;s and &lt;code&gt;File&lt;/code&gt;s, as well as future fast I/O sources may be &quot;wrapped&quot; by a suitable implementation of this interface for use by the Image I/O API.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; で使用するシーク可能な入力ストリームインターフェイス。 &lt;code&gt;InputStream&lt;/code&gt; や &lt;code&gt;File&lt;/code&gt; などのさまざまな入力ソース、および将来の高速I / Oソースは、Image I / O APIで使用するために、このインターフェースの適切な実装によって「ラップ」される場合があります。</target>
        </trans-unit>
        <trans-unit id="420b8375b8044645c2b87d9f7d013503ade55328" translate="yes" xml:space="preserve">
          <source>A seekable output stream interface for use by &lt;code&gt;ImageWriter&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; で使用するシーク可能な出力ストリームインターフェイス。</target>
        </trans-unit>
        <trans-unit id="0559d0aab7f214134c5d385a37d401994991c253" translate="yes" xml:space="preserve">
          <source>A seekable output stream interface for use by &lt;code&gt;ImageWriter&lt;/code&gt;s. Various output destinations, such as &lt;code&gt;OutputStream&lt;/code&gt;s and &lt;code&gt;File&lt;/code&gt;s, as well as future fast I/O destinations may be &quot;wrapped&quot; by a suitable implementation of this interface for use by the Image I/O API.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; で使用するシーク可能な出力ストリームインターフェイス。 &lt;code&gt;OutputStream&lt;/code&gt; や &lt;code&gt;File&lt;/code&gt; などのさまざまな出力宛先、および将来の高速I / O宛先は、Image I / O APIで使用するために、このインターフェースの適切な実装によって「ラップ」される場合があります。</target>
        </trans-unit>
        <trans-unit id="1fe29e6b6f7d3d3ea721525709d5bf04ea0e32cc" translate="yes" xml:space="preserve">
          <source>A segment of a character array representing a fragment of text.</source>
          <target state="translated">テキストの断片を表す文字配列のセグメント。</target>
        </trans-unit>
        <trans-unit id="a59186c1147d987adcf842608717c58f8e110ab3" translate="yes" xml:space="preserve">
          <source>A segment of a character array representing a fragment of text. It should be treated as immutable even though the array is directly accessible. This gives fast access to fragments of text without the overhead of copying around characters. This is effectively an unprotected String.</source>
          <target state="translated">テキストの断片を表す文字配列のセグメント。配列が直接アクセス可能であっても、これは不変として扱われるべきです。これにより、文字をコピーする手間をかけずにテキストの断片に高速にアクセスすることができます。これは事実上、保護されていないStringです。</target>
        </trans-unit>
        <trans-unit id="64d400f849295bb1951332f2c7b335031cd5c6d5" translate="yes" xml:space="preserve">
          <source>A selectable channel for datagram-oriented sockets.</source>
          <target state="translated">データグラム指向ソケット用の選択可能なチャネル。</target>
        </trans-unit>
        <trans-unit id="25788cbc3a8e74eca33a39dc8147f04f2e587e37" translate="yes" xml:space="preserve">
          <source>A selectable channel for message-oriented SCTP sockets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbce4dd8382814beee496c6bb7dd33ac84cee0c" translate="yes" xml:space="preserve">
          <source>A selectable channel for message-oriented connected SCTP sockets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3559a3428442c22b9882817afa35e26d10fe14" translate="yes" xml:space="preserve">
          <source>A selectable channel for message-oriented listening SCTP sockets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294cc4bcb77e12b57025cbb0ece7e211718e94a6" translate="yes" xml:space="preserve">
          <source>A selectable channel for stream-oriented connecting sockets.</source>
          <target state="translated">ストリーム指向の接続ソケットのための選択可能なチャネル。</target>
        </trans-unit>
        <trans-unit id="b728ffbec5c64eeb349e6de4c123ad56b7acf105" translate="yes" xml:space="preserve">
          <source>A selectable channel for stream-oriented listening sockets.</source>
          <target state="translated">ストリーム指向のリスニングソケット用の選択可能なチャンネル。</target>
        </trans-unit>
        <trans-unit id="9362a7bc4fca8f31f56d56d236671209b1da656c" translate="yes" xml:space="preserve">
          <source>A selectable channel is either in</source>
          <target state="translated">選択可能なチャンネルは</target>
        </trans-unit>
        <trans-unit id="636e98895c2a95d724549916a54492420384f6e4" translate="yes" xml:space="preserve">
          <source>A selectable channel's registration with a selector is represented by a &lt;a href=&quot;selectionkey&quot;&gt;&lt;code&gt;SelectionKey&lt;/code&gt;&lt;/a&gt; object. A selector maintains three sets of selection keys:</source>
          <target state="translated">セレクターでの選択可能なチャネルの登録は、&lt;a href=&quot;selectionkey&quot;&gt; &lt;code&gt;SelectionKey&lt;/code&gt; &lt;/a&gt;オブジェクトで表されます。セレクターは、3セットの選択キーを保持します。</target>
        </trans-unit>
        <trans-unit id="09e3d856bea6a14417269785e48c8ad006d47ebf" translate="yes" xml:space="preserve">
          <source>A selectable choice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97b84a9f3924d6a20536da195f62a7d10b51b69" translate="yes" xml:space="preserve">
          <source>A selectable choice. See the OPTION element definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba1a20d34aca94b42a82eaad99a53440fc17d0c" translate="yes" xml:space="preserve">
          <source>A selection key contains two</source>
          <target state="translated">選択キーには、次の 2 つのキーが含まれます。</target>
        </trans-unit>
        <trans-unit id="ebb61dbc6918d903ead46334d746e8f148efb98c" translate="yes" xml:space="preserve">
          <source>A selection key is created each time a channel is registered with a selector. A key remains valid until it is</source>
          <target state="translated">選択キーは、チャンネルがセレクタに登録されるたびに作成されます。キーは</target>
        </trans-unit>
        <trans-unit id="dae512fd515f76ba829deb8776b7ac3a8ccc48fb" translate="yes" xml:space="preserve">
          <source>A selection listener.</source>
          <target state="translated">選りすぐりのリスナー。</target>
        </trans-unit>
        <trans-unit id="81e316e458dc6a879ab3f16d5fd137968705200d" translate="yes" xml:space="preserve">
          <source>A selection of common adjustments is provided in &lt;a href=&quot;temporal/temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. These include finding the &quot;last day of the month&quot; and &quot;next Wednesday&quot;. Key date-time classes also implement the &lt;code&gt;TemporalAdjuster&lt;/code&gt; interface, such as &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;monthday&quot;&gt;&lt;code&gt;MonthDay&lt;/code&gt;&lt;/a&gt;. The adjuster is responsible for handling special cases, such as the varying lengths of month and leap years.</source>
          <target state="translated">一般的な調整の選択は&lt;a href=&quot;temporal/temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt;で提供されます。これらには、「月の最終日」と「次の水曜日」の検索が含まれます。主要な日時クラスは、&lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;monthday&quot;&gt; &lt;code&gt;MonthDay&lt;/code&gt; &lt;/a&gt;などの &lt;code&gt;TemporalAdjuster&lt;/code&gt; インターフェースも実装します。アジャスターは、月の長さやうるう年のさまざまな長さなど、特別な場合の処理​​を担当します。</target>
        </trans-unit>
        <trans-unit id="7588dd2d8efca4317d50709fc74f6cd77ed57a06" translate="yes" xml:space="preserve">
          <source>A selection operation queries the underlying operating system for an update as to the readiness of each registered channel to perform any of the operations identified by its key's interest set. There are two forms of selection operation:</source>
          <target state="translated">選択操作は、登録された各チャネルが、そのキーのインタレストセットで特定された操作を実行する準備ができているかどうかの更新を、基礎となるオペレーティングシステムに問い合わせます。選択操作には二つの形式があります。</target>
        </trans-unit>
        <trans-unit id="f62d1292911a6d3cd1bbbb407a90097746eead15" translate="yes" xml:space="preserve">
          <source>A selector may be created by invoking the &lt;a href=&quot;#open()&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method of this class, which will use the system's default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;selector provider&lt;/code&gt;&lt;/a&gt; to create a new selector. A selector may also be created by invoking the &lt;a href=&quot;spi/selectorprovider#openSelector()&quot;&gt;&lt;code&gt;openSelector&lt;/code&gt;&lt;/a&gt; method of a custom selector provider. A selector remains open until it is closed via its &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">セレクターは、このクラスの&lt;a href=&quot;#open()&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで作成できます。このメソッドは、システムのデフォルトの&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;selector provider&lt;/code&gt; &lt;/a&gt;を使用して新しいセレクターを作成します。セレクターは、カスタムセレクタープロバイダーの&lt;a href=&quot;spi/selectorprovider#openSelector()&quot;&gt; &lt;code&gt;openSelector&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって作成することもできます。セレクターは、&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドで閉じるまで開いたままになります。</target>
        </trans-unit>
        <trans-unit id="529eabf472953fee9eac462096b584cb588e3f87" translate="yes" xml:space="preserve">
          <source>A selector may be created by invoking the &lt;a href=&quot;selector#open--&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method of this class, which will use the system's default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;selector provider&lt;/code&gt;&lt;/a&gt; to create a new selector. A selector may also be created by invoking the &lt;a href=&quot;spi/selectorprovider#openSelector--&quot;&gt;&lt;code&gt;openSelector&lt;/code&gt;&lt;/a&gt; method of a custom selector provider. A selector remains open until it is closed via its &lt;a href=&quot;selector#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">セレクターは、このクラスの&lt;a href=&quot;selector#open--&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって作成できます。これは、システムのデフォルトの&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;selector provider&lt;/code&gt; &lt;/a&gt;を使用して新しいセレクターを作成します。セレクターは、カスタムセレクタープロバイダーの&lt;a href=&quot;spi/selectorprovider#openSelector--&quot;&gt; &lt;code&gt;openSelector&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して作成することもできます。セレクターは、&lt;a href=&quot;selector#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドによって閉じられるまで開いたままです。</target>
        </trans-unit>
        <trans-unit id="8d4a598974064bcc68117159019e785eef71e12f" translate="yes" xml:space="preserve">
          <source>A selector provider is a concrete subclass of this class that has a zero-argument constructor and implements the abstract methods specified below. A given invocation of the Java virtual machine maintains a single system-wide default provider instance, which is returned by the &lt;a href=&quot;#provider()&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; method. The first invocation of that method will locate the default provider as specified below.</source>
          <target state="translated">セレクタープロバイダーは、このクラスの具体的なサブクラスであり、引数がゼロのコンストラクターを持ち、以下に指定されている抽象メソッドを実装します。Java仮想マシンの特定の呼び出しは、単一のシステム全体のデフォルトプロバイダーインスタンスを維持します。これは、&lt;a href=&quot;#provider()&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;メソッドによって返されます。そのメソッドの最初の呼び出しは、以下に指定されているようにデフォルトのプロバイダーを見つけます。</target>
        </trans-unit>
        <trans-unit id="b8e91fb710d83f831c9944823f9ccb9a3dcf00f6" translate="yes" xml:space="preserve">
          <source>A selector provider is a concrete subclass of this class that has a zero-argument constructor and implements the abstract methods specified below. A given invocation of the Java virtual machine maintains a single system-wide default provider instance, which is returned by the &lt;a href=&quot;selectorprovider#provider--&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; method. The first invocation of that method will locate the default provider as specified below.</source>
          <target state="translated">セレクタープロバイダーは、このクラスの具象サブクラスで、引数のないコンストラクターを持ち、以下で指定する抽象メソッドを実装します。Java仮想マシンの特定の呼び出しは、&lt;a href=&quot;selectorprovider#provider--&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;メソッドによって返される単一のシステム全体のデフォルトプロバイダーインスタンスを維持します。そのメソッドの最初の呼び出しは、以下に指定されているデフォルトのプロバイダーを見つけます。</target>
        </trans-unit>
        <trans-unit id="f16d692c1bed5dbaa178690d4f26577abbfa32bb" translate="yes" xml:space="preserve">
          <source>A selector that defines a set of criteria for selecting &lt;code&gt;CRL&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;CRL&lt;/code&gt; を選択するための一連の基準を定義するセレクター。</target>
        </trans-unit>
        <trans-unit id="96dcfefce65daa4016e98d79692d6ef1eadcc6d1" translate="yes" xml:space="preserve">
          <source>A selector that defines a set of criteria for selecting &lt;code&gt;CRL&lt;/code&gt;s. Classes that implement this interface are often used to specify which &lt;code&gt;CRL&lt;/code&gt;s should be retrieved from a &lt;code&gt;CertStore&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CRL&lt;/code&gt; を選択するための一連の基準を定義するセレクター。このインタフェースを実装するクラスは、 &lt;code&gt;CertStore&lt;/code&gt; から取得する &lt;code&gt;CRL&lt;/code&gt; を指定するためによく使用されます。</target>
        </trans-unit>
        <trans-unit id="5efa2476c58d33df64d3c36e52bfb9214af66291" translate="yes" xml:space="preserve">
          <source>A selector that defines a set of criteria for selecting &lt;code&gt;Certificate&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;Certificate&lt;/code&gt; を選択するための一連の基準を定義するセレクター。</target>
        </trans-unit>
        <trans-unit id="1ef721d9efbaa77ffd30a26a6c943321c341cb56" translate="yes" xml:space="preserve">
          <source>A selector that defines a set of criteria for selecting &lt;code&gt;Certificate&lt;/code&gt;s. Classes that implement this interface are often used to specify which &lt;code&gt;Certificate&lt;/code&gt;s should be retrieved from a &lt;code&gt;CertStore&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Certificate&lt;/code&gt; を選択するための一連の基準を定義するセレクター。このインタフェースを実装するクラスは、 &lt;code&gt;CertStore&lt;/code&gt; から取得する必要のある &lt;code&gt;Certificate&lt;/code&gt; を指定するためによく使用されます。</target>
        </trans-unit>
        <trans-unit id="91779c8f979a4082ed2dbde2cad2c1d6ec6c0e26" translate="yes" xml:space="preserve">
          <source>A selector that finds and returns a key using the data contained in a &lt;a href=&quot;dsig/keyinfo/keyinfo&quot;&gt;&lt;code&gt;KeyInfo&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;dsig/keyinfo/keyinfo&quot;&gt; &lt;code&gt;KeyInfo&lt;/code&gt; &lt;/a&gt;オブジェクトに含まれるデータを使用してキーを検索して返すセレクター。</target>
        </trans-unit>
        <trans-unit id="3aef79ecca91fbda6a291eb014a46d70b6d9398d" translate="yes" xml:space="preserve">
          <source>A selector that finds and returns a key using the data contained in a &lt;a href=&quot;dsig/keyinfo/keyinfo&quot;&gt;&lt;code&gt;KeyInfo&lt;/code&gt;&lt;/a&gt; object. An example of an implementation of this class is one that searches a &lt;a href=&quot;../../../../java.base/java/security/keystore&quot;&gt;&lt;code&gt;KeyStore&lt;/code&gt;&lt;/a&gt; for trusted keys that match information contained in a &lt;code&gt;KeyInfo&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;dsig/keyinfo/keyinfo&quot;&gt; &lt;code&gt;KeyInfo&lt;/code&gt; &lt;/a&gt;オブジェクトに含まれるデータを使用してキーを検索して返すセレクター。このクラスの実装の例は、 &lt;code&gt;KeyInfo&lt;/code&gt; に含まれる情報と一致する信頼できるキーを&lt;a href=&quot;../../../../java.base/java/security/keystore&quot;&gt; &lt;code&gt;KeyStore&lt;/code&gt; &lt;/a&gt;で検索するものです。</target>
        </trans-unit>
        <trans-unit id="f22a4ab2da39ad855ad083364d5b62eb28dc3380" translate="yes" xml:space="preserve">
          <source>A selector's key and selected-key sets are not, in general, safe for use by multiple concurrent threads. If such a thread might modify one of these sets directly then access should be controlled by synchronizing on the set itself. The iterators returned by these sets' &lt;a href=&quot;../../util/set#iterator--&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; methods are</source>
          <target state="translated">セレクターのキーと選択されたキーのセットは、一般に、複数の並行スレッドによる使用には安全ではありません。そのようなスレッドがこれらのセットの1つを直接変更する可能性がある場合は、セット自体で同期することによってアクセスを制御する必要があります。これらのセットの&lt;a href=&quot;../../util/set#iterator--&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt;メソッドによって返される反復子は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="b8334ea638f59aa7d6798dd1a8168313a63c1a64" translate="yes" xml:space="preserve">
          <source>A selector's selected-key set is not, in general, safe for use by multiple concurrent threads. If such a thread might modify the set directly then access should be controlled by synchronizing on the set itself. The iterators returned by the set's &lt;a href=&quot;../../util/set#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; methods are</source>
          <target state="translated">セレクターの選択されたキーセットは、一般に、複数の同時スレッドでの使用には安全ではありません。そのようなスレッドがセットを直接変更する可能性がある場合は、セット自体で同期することによってアクセスを制御する必要があります。セットの&lt;a href=&quot;../../util/set#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt;メソッドによって返されるイテレータは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e3c4dc236c48859eac104a9399b07835e951ccee" translate="yes" xml:space="preserve">
          <source>A self-intersecting &lt;code&gt;Shape&lt;/code&gt; may be split into two (or more) sub-paths each enclosing one of the non-intersecting portions of the original path.</source>
          <target state="translated">自己交差する &lt;code&gt;Shape&lt;/code&gt; は、元のパスの交差しない部分の1つをそれぞれが囲む2つ（またはそれ以上）のサブパスに分割できます。</target>
        </trans-unit>
        <trans-unit id="334b82373bd598492fcd4d5391a307b77c8365a8" translate="yes" xml:space="preserve">
          <source>A semantic event which indicates that a component-defined action occurred.</source>
          <target state="translated">コンポーネント定義のアクションが発生したことを示すセマンティックイベント。</target>
        </trans-unit>
        <trans-unit id="6091e56d1be4e9bb99b55035937c08cfe0e0e0b4" translate="yes" xml:space="preserve">
          <source>A semantic event which indicates that a component-defined action occurred. This high-level event is generated by a component (such as a &lt;code&gt;Button&lt;/code&gt;) when the component-specific action occurs (such as being pressed). The event is passed to every &lt;code&gt;ActionListener&lt;/code&gt; object that registered to receive such events using the component's &lt;code&gt;addActionListener&lt;/code&gt; method.</source>
          <target state="translated">コンポーネント定義のアクションが発生したことを示すセマンティックイベント。この高レベルのイベントは、コンポーネント固有のアクション（押された場合など）が発生したときに、コンポーネント（ &lt;code&gt;Button&lt;/code&gt; など）によって生成されます。イベントは、コンポーネントの &lt;code&gt;addActionListener&lt;/code&gt; メソッドを使用してそのようなイベントを受信するように登録されたすべての &lt;code&gt;ActionListener&lt;/code&gt; オブジェクトに渡されます。</target>
        </trans-unit>
        <trans-unit id="f6776be63b6e7e7498af12ec576fe6f5b2dce6d7" translate="yes" xml:space="preserve">
          <source>A semantic event which indicates that an item was selected or deselected.</source>
          <target state="translated">アイテムが選択された、または選択解除されたことを示す意味的なイベント。</target>
        </trans-unit>
        <trans-unit id="bb96a366e9ef1ea4a26febbdbaaef665f6637e4b" translate="yes" xml:space="preserve">
          <source>A semantic event which indicates that an item was selected or deselected. This high-level event is generated by an ItemSelectable object (such as a List) when an item is selected or deselected by the user. The event is passed to every &lt;code&gt;ItemListener&lt;/code&gt; object which registered to receive such events using the component's &lt;code&gt;addItemListener&lt;/code&gt; method.</source>
          <target state="translated">アイテムが選択または選択解除されたことを示すセマンティックイベント。この高レベルのイベントは、ユーザーがアイテムを選択または選択解除したときに、ItemSelectableオブジェクト（リストなど）によって生成されます。イベントは、コンポーネントの &lt;code&gt;addItemListener&lt;/code&gt; メソッドを使用してそのようなイベントを受信するように登録されたすべての &lt;code&gt;ItemListener&lt;/code&gt; オブジェクトに渡されます。</target>
        </trans-unit>
        <trans-unit id="1ae154760407f31ba4bb6e437fb4b5de9f05cc33" translate="yes" xml:space="preserve">
          <source>A semantic event which indicates that an object's text changed.</source>
          <target state="translated">オブジェクトのテキストが変更されたことを示すセマンティックイベント。</target>
        </trans-unit>
        <trans-unit id="e5332302df3fd056e9adc556649c0e8ce8ba9a49" translate="yes" xml:space="preserve">
          <source>A semantic event which indicates that an object's text changed. This high-level event is generated by an object (such as a TextComponent) when its text changes. The event is passed to every &lt;code&gt;TextListener&lt;/code&gt; object which registered to receive such events using the component's &lt;code&gt;addTextListener&lt;/code&gt; method.</source>
          <target state="translated">オブジェクトのテキストが変更されたことを示すセマンティックイベント。この高レベルのイベントは、テキストが変更されたときにオブジェクト（TextComponentなど）によって生成されます。イベントは、コンポーネントの &lt;code&gt;addTextListener&lt;/code&gt; メソッドを使用してそのようなイベントを受信するように登録されたすべての &lt;code&gt;TextListener&lt;/code&gt; オブジェクトに渡されます。</target>
        </trans-unit>
        <trans-unit id="5b623b9a65e5387b97a4845cffc20bddeb53b2c2" translate="yes" xml:space="preserve">
          <source>A semaphore initialized to one, and which is used such that it only has at most one permit available, can serve as a mutual exclusion lock. This is more commonly known as a &lt;em&gt;binary semaphore&lt;/em&gt;, because it only has two states: one permit available, or zero permits available. When used in this way, the binary semaphore has the property (unlike many &lt;a href=&quot;locks/lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; implementations), that the &quot;lock&quot; can be released by a thread other than the owner (as semaphores have no notion of ownership). This can be useful in some specialized contexts, such as deadlock recovery.</source>
          <target state="translated">1に初期化され、使用可能な許可が1つだけになるように使用されるセマフォは、相互排他ロックとして機能できます。これは、&lt;em&gt;バイナリセマフォ&lt;/em&gt;としてより一般的に知られています。これは、2つの状態しかないためです。この方法で使用すると、バイナリセマフォには（多くの&lt;a href=&quot;locks/lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;実装とは異なり）所有者以外のスレッドが「ロック」を解放できるという特性があります（セマフォには所有権の概念がないため）。これは、デッドロック回復などの一部の特殊なコンテキストで役立ちます。</target>
        </trans-unit>
        <trans-unit id="cfe55cc397ef460f5c889dc133061a7121daf9d5" translate="yes" xml:space="preserve">
          <source>A semicolon-delimited list of URIs to locate the catalog files. The URIs must be absolute and have a URL protocol handler for the URI scheme.</source>
          <target state="translated">カタログファイルを探すためのURIのセミコロンで区切られたリスト。URIは絶対値でなければならず、URIスキームのためのURLプロトコルハンドラを持っていなければなりません。</target>
        </trans-unit>
        <trans-unit id="57cbd2cc899c4d7354c19c5e826073dcf54eb6ad" translate="yes" xml:space="preserve">
          <source>A send failed notification indicates that a message cannot be delivered. Typically this is because the association has been shutdown with unsent data in the socket output buffer, or in the case of a &lt;a href=&quot;sctpmultichannel&quot;&gt;&lt;code&gt;SctpMultiChannel&lt;/code&gt;&lt;/a&gt; the association failed to setup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41cccf6500a071907b9eb72d92e38d355eb41827" translate="yes" xml:space="preserve">
          <source>A send method is any of the &lt;code&gt;sendText&lt;/code&gt;, &lt;code&gt;sendBinary&lt;/code&gt;, &lt;code&gt;sendPing&lt;/code&gt;, &lt;code&gt;sendPong&lt;/code&gt; and &lt;code&gt;sendClose&lt;/code&gt; methods of &lt;code&gt;WebSocket&lt;/code&gt;. A send method initiates a send operation and returns a &lt;code&gt;CompletableFuture&lt;/code&gt; which completes once the operation has completed. If the &lt;code&gt;CompletableFuture&lt;/code&gt; completes normally the operation is considered succeeded. If the &lt;code&gt;CompletableFuture&lt;/code&gt; completes exceptionally, the operation is considered failed. An operation that has been initiated but not yet completed is considered pending.</source>
          <target state="translated">送信方法は、のいずれかである &lt;code&gt;sendText&lt;/code&gt; 、 &lt;code&gt;sendBinary&lt;/code&gt; 、 &lt;code&gt;sendPing&lt;/code&gt; 、 &lt;code&gt;sendPong&lt;/code&gt; と &lt;code&gt;sendClose&lt;/code&gt; の方法 &lt;code&gt;WebSocket&lt;/code&gt; 。sendメソッドは、送信操作を開始し、操作が完了すると完了する &lt;code&gt;CompletableFuture&lt;/code&gt; を返します。場合 &lt;code&gt;CompletableFuture&lt;/code&gt; が正常に完了した操作が成功したと考えられています。 &lt;code&gt;CompletableFuture&lt;/code&gt; が例外的に完了した場合、操作は失敗したと見なされます。開始されたがまだ完了していない操作は、保留中と見なされます。</target>
        </trans-unit>
        <trans-unit id="75dfb2ddac9ba66cde0cc5d2e0e8d23090dacd69" translate="yes" xml:space="preserve">
          <source>A sentence is a string of words which expresses an assertion, a question, a command, a wish, an exclamation, or the performance of an action. In English locales, the string usually begins with a capital letter and concludes with appropriate end punctuation; such as a period, question or exclamation mark. Other locales may use different capitalization and/or punctuation.</source>
          <target state="translated">文とは、主張、質問、命令、願い、感嘆符、または行動の実行を表す単語の列のことです。英語の地域では、通常、文字列は大文字で始まり、ピリオド、質問、感嘆符などの適切な区切り記号で終わります。他のロケールでは、異なる大文字や句読点を使用する場合があります。</target>
        </trans-unit>
        <trans-unit id="8a4024ca87b0e41c736b446c52d375fe63e34854" translate="yes" xml:space="preserve">
          <source>A separator that is escaped or appears between non-escaped quotes is treated as an ordinary string and not a separator.</source>
          <target state="translated">エスケープされているか、エスケープされていない引用符の間にあるセパレータは、通常の文字列として扱われ、セパレータではありません。</target>
        </trans-unit>
        <trans-unit id="01b124416a0a30f20b408c560dfe65358649bfaf" translate="yes" xml:space="preserve">
          <source>A separator, quote or escape is escaped if preceded immediately (on the left) by the escape.</source>
          <target state="translated">セパレータ、引用符、エスケープは、すぐ前に(左側に)エスケープがある場合にエスケープされます。</target>
        </trans-unit>
        <trans-unit id="86e291d962b95b1c93a7ca49a38e6694703fc0f8" translate="yes" xml:space="preserve">
          <source>A sequence layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3780a80dd310c8a76833ddf1b0c52b83a2a8e48" translate="yes" xml:space="preserve">
          <source>A sequence layout. A sequence layout is used to denote a repetition of a given layout, also called the sequence layout's &lt;em&gt;element layout&lt;/em&gt;. The repetition count, where it exists (e.g. for &lt;em&gt;finite&lt;/em&gt; sequence layouts) is said to be the the sequence layout's &lt;em&gt;element count&lt;/em&gt;. A finite sequence layout can be thought of as a group layout where the sequence layout's element layout is repeated a number of times that is equal to the sequence layout's element count. In other words this layout:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c095fc1ea1ab99d90aeb7439bb40d6d0578ec8d" translate="yes" xml:space="preserve">
          <source>A sequence of elements supporting sequential and parallel aggregate operations.</source>
          <target state="translated">シーケンシャル・アグリゲート操作とパラレル・アグリゲート操作をサポートする要素のシーケンス。</target>
        </trans-unit>
        <trans-unit id="74d541b5fb0fc977f7e96dec6427dfabfa44bb9f" translate="yes" xml:space="preserve">
          <source>A sequence of elements supporting sequential and parallel aggregate operations. The following example illustrates an aggregate operation using &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;intstream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">順次および並列集約操作をサポートする一連の要素。次の例は、&lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;intstream&quot;&gt; &lt;code&gt;IntStream&lt;/code&gt; &lt;/a&gt;を使用した集計操作を示しています。</target>
        </trans-unit>
        <trans-unit id="358da7cc7e138c726dddf5d6bf791a177ee226e4" translate="yes" xml:space="preserve">
          <source>A sequence of escaped octets is</source>
          <target state="translated">エスケープされたオクテットのシーケンスは</target>
        </trans-unit>
        <trans-unit id="3118269324fb4d8a0f521763d19e0c888308cb53" translate="yes" xml:space="preserve">
          <source>A sequence of paged-results can be abandoned by setting the pageSize to zero and setting the cookie to the last cookie received from the server.</source>
          <target state="translated">ページ化された結果のシーケンスは、ページサイズをゼロに設定し、クッキーをサーバから受け取った最後のクッキーに設定することで放棄することができます。</target>
        </trans-unit>
        <trans-unit id="dab07824e99cfb5e02e843ed82bbe3b25e18cd89" translate="yes" xml:space="preserve">
          <source>A sequence of primitive double-valued elements supporting sequential and parallel aggregate operations.</source>
          <target state="translated">逐次および並列集約演算をサポートする原始的な二重値要素のシーケンス。</target>
        </trans-unit>
        <trans-unit id="dd38ae6cbee6c6c6706f6ce740cdd0b1045aa7f7" translate="yes" xml:space="preserve">
          <source>A sequence of primitive double-valued elements supporting sequential and parallel aggregate operations. This is the &lt;code&gt;double&lt;/code&gt; primitive specialization of &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">順次および並列集約操作をサポートする一連のプリミティブなdouble-valued要素。これは&lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;double&lt;/code&gt; 原始的な特殊化です。</target>
        </trans-unit>
        <trans-unit id="b0bc9099810c1c57955f5aca4c4eb7d70a76615d" translate="yes" xml:space="preserve">
          <source>A sequence of primitive int-valued elements supporting sequential and parallel aggregate operations.</source>
          <target state="translated">シーケンシャルおよびパラレルアグリゲート演算をサポートするプリミティブなint-value要素のシーケンス。</target>
        </trans-unit>
        <trans-unit id="8fee8c2b13ede73fce1cfe060f8001dafa9861cb" translate="yes" xml:space="preserve">
          <source>A sequence of primitive int-valued elements supporting sequential and parallel aggregate operations. This is the &lt;code&gt;int&lt;/code&gt; primitive specialization of &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">順次および並列集約操作をサポートする一連のプリミティブint値要素。これは&lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;int&lt;/code&gt; プリミティブな特殊化です。</target>
        </trans-unit>
        <trans-unit id="6de23a8a2d8e62c995b4c353905c0b49141b77cb" translate="yes" xml:space="preserve">
          <source>A sequence of primitive long-valued elements supporting sequential and parallel aggregate operations.</source>
          <target state="translated">逐次および並列集約演算をサポートする原始的な長値要素のシーケンス。</target>
        </trans-unit>
        <trans-unit id="cc36d24e0030ab7c2344629316bea9f22cd8fbb5" translate="yes" xml:space="preserve">
          <source>A sequence of primitive long-valued elements supporting sequential and parallel aggregate operations. This is the &lt;code&gt;long&lt;/code&gt; primitive specialization of &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">順次および並列集約操作をサポートする一連のプリミティブなlong-valued要素。これは&lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;long&lt;/code&gt; プリミティブな特殊化です。</target>
        </trans-unit>
        <trans-unit id="2cf40afdb4242b7b337744c3ab9d56c266f5d8f2" translate="yes" xml:space="preserve">
          <source>A sequence of the form &quot;</source>
          <target state="translated">形式のシーケンス &quot;</target>
        </trans-unit>
        <trans-unit id="a5efd38607b007cf2b67f23ed31a731c1e8122d7" translate="yes" xml:space="preserve">
          <source>A sequence of zero or more string &lt;em&gt;names&lt;/em&gt;.</source>
          <target state="translated">0個以上の文字列&lt;em&gt;名の&lt;/em&gt;シーケンス。</target>
        </trans-unit>
        <trans-unit id="620944fe500ad55b62f932ecb24120b5a1cd6b81" translate="yes" xml:space="preserve">
          <source>A sequencer's loop end point defaults to -1, meaning the end of the sequence.</source>
          <target state="translated">シーケンサのループの終了点のデフォルトは -1 で、これはシーケンスの終了を意味します。</target>
        </trans-unit>
        <trans-unit id="1eb517c15a6e4b5522f6f202e23a3b2d5ae47666" translate="yes" xml:space="preserve">
          <source>A sequencer's loop start point defaults to start of the sequence.</source>
          <target state="translated">シーケンサのループ開始点のデフォルトはシーケンスの開始点です。</target>
        </trans-unit>
        <trans-unit id="5382e3c4e988e005dbe0a0c61116b3b66567fc0b" translate="yes" xml:space="preserve">
          <source>A sequential implementation of a reduction using a collector would create a single result container using the supplier function, and invoke the accumulator function once for each input element. A parallel implementation would partition the input, create a result container for each partition, accumulate the contents of each partition into a subresult for that partition, and then use the combiner function to merge the subresults into a combined result.</source>
          <target state="translated">コレクターを使用したリダクションの逐次実装では、サプライヤ関数を使用して1つの結果コンテナを作成し、各入力要素に対してアキュムレータ関数を1回呼び出します。並列実装では、入力を分割し、各分割ごとに結果コンテナを作成し、各分割の内容をその分割のサブ結果に蓄積し、コンバイナ関数を使用してサブ結果を結合した結果にマージします。</target>
        </trans-unit>
        <trans-unit id="dda6eade1c0494ca8765d5d8bedf50345c9c5b79" translate="yes" xml:space="preserve">
          <source>A serializable mapping between the SQL REF type and the Java programming language.</source>
          <target state="translated">SQL REF型とJavaプログラミング言語間のシリアライズ可能なマッピング。</target>
        </trans-unit>
        <trans-unit id="6bdf56b9dc9159f7f02833d73cd4bbeeb7755bd0" translate="yes" xml:space="preserve">
          <source>A serializable mapping in the Java programming language of an SQL &lt;code&gt;JAVA_OBJECT&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;JAVA_OBJECT&lt;/code&gt; 値のJavaプログラミング言語でのシリアライズ可能なマッピング。</target>
        </trans-unit>
        <trans-unit id="ba852e67063a4f199bbeffe1eb3a8cee2e71bc73" translate="yes" xml:space="preserve">
          <source>A serializable mapping in the Java programming language of an SQL &lt;code&gt;JAVA_OBJECT&lt;/code&gt; value. Assuming the Java object implements the &lt;code&gt;Serializable&lt;/code&gt; interface, this class simply wraps the serialization process.</source>
          <target state="translated">&lt;code&gt;JAVA_OBJECT&lt;/code&gt; 値のJavaプログラミング言語でのシリアライズ可能なマッピング。Javaオブジェクトが &lt;code&gt;Serializable&lt;/code&gt; インターフェースを実装していると仮定すると、このクラスは単にシリアル化プロセスをラップします。</target>
        </trans-unit>
        <trans-unit id="fb676939567f2384d7b37e19095a9745c4458314" translate="yes" xml:space="preserve">
          <source>A serializable mapping in the Java programming language of an SQL ARRAY value.</source>
          <target state="translated">Javaプログラミング言語でのSQL ARRAY値のシリアライズ可能なマッピング。</target>
        </trans-unit>
        <trans-unit id="46b6f8afc7ba7da1a9bdb33dddeba0f901e53505" translate="yes" xml:space="preserve">
          <source>A serializable mapping in the Java programming language of an SQL BLOB value.</source>
          <target state="translated">SQL BLOB値のJavaプログラミング言語でのシリアライズ可能なマッピング。</target>
        </trans-unit>
        <trans-unit id="191d9822e2db1c907a0f0ddb92f12026692e3767" translate="yes" xml:space="preserve">
          <source>A serializable mapping in the Java programming language of an SQL CLOB value.</source>
          <target state="translated">SQL CLOB値のJavaプログラミング言語でのシリアライズ可能なマッピング。</target>
        </trans-unit>
        <trans-unit id="d244e48b9e4839e435092c164e7332ed04755c46" translate="yes" xml:space="preserve">
          <source>A serializable mapping in the Java programming language of an SQL DATALINK value. A DATALINK value references a file outside of the underlying data source that the originating data source manages.</source>
          <target state="translated">SQL DATALINK 値の Java プログラミング言語でのシリアライズ可能なマッピング。DATALINK 値は、元のデータ ソースが管理するデータ ソースの外部のファイルを参照します。</target>
        </trans-unit>
        <trans-unit id="6757ae90a40c9eb88a312ed54b9461592ee29fc1" translate="yes" xml:space="preserve">
          <source>A serializable mapping in the Java programming language of an SQL JAVA_OBJECT value. Assuming the Java object instance implements the Serializable interface, this simply wraps the serialization process.</source>
          <target state="translated">SQL JAVA_OBJECT値のJavaプログラミング言語でのシリアライズ可能なマッピング。Java オブジェクトのインスタンスがシリアライズ可能なインターフェースを実装していると仮定すると、これは単純にシリアライズ処理をラップします。</target>
        </trans-unit>
        <trans-unit id="8edb96c691fc88839a39cd5c905f6875996d145c" translate="yes" xml:space="preserve">
          <source>A serializable mapping in the Java programming language of an SQL structured type. Each attribute that is not already serializable is mapped to a serializable form, and if an attribute is itself a structured type, each of its attributes that is not already serializable is mapped to a serializable form.</source>
          <target state="translated">SQL構造化型のJavaプログラミング言語におけるシリアライズ可能なマッピング。シリアライズ可能な形式にマッピングされており、ある属性が構造化型である場合、シリアライズ可能な形式にマッピングされていない属性のそれぞれがシリアライズ可能な形式にマッピングされます。</target>
        </trans-unit>
        <trans-unit id="5f9617d70f33a9a95533241c2dc12338e800d429" translate="yes" xml:space="preserve">
          <source>A serialized mapping in the Java programming language of an SQL &lt;code&gt;BLOB&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;BLOB&lt;/code&gt; 値のJavaプログラミング言語でのシリアル化されたマッピング。</target>
        </trans-unit>
        <trans-unit id="e3f7085aa94717a5c1b012f3180189ac844564c7" translate="yes" xml:space="preserve">
          <source>A serialized mapping in the Java programming language of an SQL &lt;code&gt;CLOB&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;CLOB&lt;/code&gt; 値のJavaプログラミング言語でのシリアル化されたマッピング。</target>
        </trans-unit>
        <trans-unit id="dd39982ad2640e417a4e8d9ca7c12b5e2c98ba3e" translate="yes" xml:space="preserve">
          <source>A serialized mapping in the Java programming language of an SQL &lt;code&gt;DATALINK&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;DATALINK&lt;/code&gt; 値のJavaプログラミング言語でのシリアル化されたマッピング。</target>
        </trans-unit>
        <trans-unit id="ac79d78131f98a0e7769168602093b2f0cee72e2" translate="yes" xml:space="preserve">
          <source>A serialized mapping in the Java programming language of an SQL &lt;code&gt;DATALINK&lt;/code&gt; value. A &lt;code&gt;DATALINK&lt;/code&gt; value references a file outside of the underlying data source that the data source manages.</source>
          <target state="translated">&lt;code&gt;DATALINK&lt;/code&gt; 値のJavaプログラミング言語でのシリアル化されたマッピング。A &lt;code&gt;DATALINK&lt;/code&gt; の値の参照データソースが管理する基礎となるデータソースのファイル外。</target>
        </trans-unit>
        <trans-unit id="61f86604319679fced44960b47144ca66141fc98" translate="yes" xml:space="preserve">
          <source>A serialized mapping in the Java programming language of an SQL structured type.</source>
          <target state="translated">Javaプログラミング言語のSQL構造化型のシリアライズされたマッピング。</target>
        </trans-unit>
        <trans-unit id="7b213dcd90b43df7f003ad1432b9d79b4b3af1c8" translate="yes" xml:space="preserve">
          <source>A serialized mapping in the Java programming language of an SQL structured type. Each attribute that is not already serialized is mapped to a serialized form, and if an attribute is itself a structured type, each of its attributes that is not already serialized is mapped to a serialized form.</source>
          <target state="translated">SQL構造化型のJavaプログラミング言語におけるシリアライズされたマッピング。シリアライズされていない各属性はシリアライズされた形式にマッピングされ、ある属性自体が構造化型である場合、シリアライズされていない各属性はシリアライズされた形式にマッピングされます。</target>
        </trans-unit>
        <trans-unit id="a3fa54d48abb870b8ba140f5d44362894738850f" translate="yes" xml:space="preserve">
          <source>A serialized mapping of a &lt;code&gt;Ref&lt;/code&gt; object, which is the mapping in the Java programming language of an SQL &lt;code&gt;REF&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;Ref&lt;/code&gt; オブジェクトのシリアル化されたマッピング。これは、 &lt;code&gt;REF&lt;/code&gt; 値のJavaプログラミング言語でのマッピングです。</target>
        </trans-unit>
        <trans-unit id="ce223f9b091bca8de12ee40fc6b0db067e3bf2ee" translate="yes" xml:space="preserve">
          <source>A serialized version of an &lt;code&gt;Array&lt;/code&gt; object, which is the mapping in the Java programming language of an SQL &lt;code&gt;ARRAY&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; オブジェクトのシリアル化されたバージョン。これは、 &lt;code&gt;ARRAY&lt;/code&gt; 値のJavaプログラミング言語でのマッピングです。</target>
        </trans-unit>
        <trans-unit id="c4cb95a3c7de9058ef04032fddc913b35b387ce7" translate="yes" xml:space="preserve">
          <source>A server socket associated with this channel</source>
          <target state="translated">このチャネルに関連付けられたサーバソケット</target>
        </trans-unit>
        <trans-unit id="3e97f5795c3714f846bc6d2802f7304d9062e768" translate="yes" xml:space="preserve">
          <source>A server socket will have a channel if, and only if, the channel itself was created via the &lt;a href=&quot;../nio/channels/serversocketchannel#open()&quot;&gt;&lt;code&gt;ServerSocketChannel.open&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">チャネル自体が&lt;a href=&quot;../nio/channels/serversocketchannel#open()&quot;&gt; &lt;code&gt;ServerSocketChannel.open&lt;/code&gt; &lt;/a&gt;メソッドを介して作成された場合にのみ、サーバーソケットにチャネルがあります。</target>
        </trans-unit>
        <trans-unit id="19b8fedb1f2e7f8b6be482b6484af0b393aefcd5" translate="yes" xml:space="preserve">
          <source>A server socket will have a channel if, and only if, the channel itself was created via the &lt;a href=&quot;../nio/channels/serversocketchannel#open--&quot;&gt;&lt;code&gt;ServerSocketChannel.open&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">サーバーソケットは、&lt;a href=&quot;../nio/channels/serversocketchannel#open--&quot;&gt; &lt;code&gt;ServerSocketChannel.open&lt;/code&gt; &lt;/a&gt;メソッドを介してチャネル自体が作成された場合にのみチャネルを持ちます。</target>
        </trans-unit>
        <trans-unit id="217ca6ed6eb7e56975f986b6bacb1cc86c4191fb" translate="yes" xml:space="preserve">
          <source>A server such an LDAP server gets an instance of this class in order to perform authentication defined by a specific SASL mechanism. Invoking methods on the &lt;code&gt;SaslServer&lt;/code&gt; instance generates challenges according to the SASL mechanism implemented by the &lt;code&gt;SaslServer&lt;/code&gt;. As the authentication proceeds, the instance encapsulates the state of a SASL server's authentication exchange.</source>
          <target state="translated">LDAPサーバーなどのサーバーは、特定のSASLメカニズムによって定義された認証を実行するために、このクラスのインスタンスを取得します。上のメソッドを呼び出し &lt;code&gt;SaslServer&lt;/code&gt; インスタンスすることにより実現さSASL機構に従ってチャレンジを生成し &lt;code&gt;SaslServer&lt;/code&gt; 。認証が進むにつれて、インスタンスはSASLサーバーの認証交換の状態をカプセル化します。</target>
        </trans-unit>
        <trans-unit id="f5ec809b416bf5d0d7ed7fb39a1fc177c77ae8bc" translate="yes" xml:space="preserve">
          <source>A server-socket channel is created by invoking the &lt;a href=&quot;#open()&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method of this class. It is not possible to create a channel for an arbitrary, pre-existing &lt;a href=&quot;../../net/serversocket&quot;&gt;&lt;code&gt;ServerSocket&lt;/code&gt;&lt;/a&gt;. A newly-created server-socket channel is open but not yet bound. An attempt to invoke the &lt;a href=&quot;#accept()&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method of an unbound server-socket channel will cause a &lt;a href=&quot;notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; to be thrown. A server-socket channel can be bound by invoking one of the &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; methods defined by this class.</source>
          <target state="translated">サーバーソケットチャネルは、このクラスの&lt;a href=&quot;#open()&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって作成されます。任意の既存の&lt;a href=&quot;../../net/serversocket&quot;&gt; &lt;code&gt;ServerSocket&lt;/code&gt; の&lt;/a&gt;チャネルを作成することはできません。新しく作成されたサーバーソケットチャネルは開いていますが、まだバインドされていません。バインドされていないサーバーソケットチャネルの&lt;a href=&quot;#accept()&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt;メソッドを呼び出そうとすると、&lt;a href=&quot;notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt;がスローされます。サーバーソケットチャネルは、このクラスで定義されている&lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;メソッドの1つを呼び出すことでバインドできます。</target>
        </trans-unit>
        <trans-unit id="249a63a83f63482c4009b60fb838c05f9e627d36" translate="yes" xml:space="preserve">
          <source>A server-socket channel is created by invoking the &lt;a href=&quot;serversocketchannel#open--&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method of this class. It is not possible to create a channel for an arbitrary, pre-existing &lt;a href=&quot;../../net/serversocket&quot;&gt;&lt;code&gt;ServerSocket&lt;/code&gt;&lt;/a&gt;. A newly-created server-socket channel is open but not yet bound. An attempt to invoke the &lt;a href=&quot;serversocketchannel#accept--&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method of an unbound server-socket channel will cause a &lt;a href=&quot;notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; to be thrown. A server-socket channel can be bound by invoking one of the &lt;a href=&quot;serversocketchannel#bind-java.net.SocketAddress-int-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; methods defined by this class.</source>
          <target state="translated">サーバーソケットチャネルは、このクラスの&lt;a href=&quot;serversocketchannel#open--&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって作成されます。任意の既存の&lt;a href=&quot;../../net/serversocket&quot;&gt; &lt;code&gt;ServerSocket&lt;/code&gt; の&lt;/a&gt;チャネルを作成することはできません。新しく作成されたサーバーソケットチャネルは開いていますが、まだバインドされていません。バインドされていないサーバーソケットチャネルの&lt;a href=&quot;serversocketchannel#accept--&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt;メソッドを呼び出そうとすると、&lt;a href=&quot;notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt;がスローされます。このクラスで定義された&lt;a href=&quot;serversocketchannel#bind-java.net.SocketAddress-int-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;メソッドの1つを呼び出すことにより、サーバーソケットチャネルをバインドできます。</target>
        </trans-unit>
        <trans-unit id="bce7c70b019d348d961d460879d8a9b75189f27b" translate="yes" xml:space="preserve">
          <source>A service for a resource bundle of a given &lt;em&gt;&lt;code&gt;baseName&lt;/code&gt;&lt;/em&gt; must have a fully-qualified class name of the form:</source>
          <target state="translated">特定の&lt;em&gt; &lt;code&gt;baseName&lt;/code&gt; の&lt;/em&gt;リソースバンドルのサービスには、次の形式の完全修飾クラス名が必要です。</target>
        </trans-unit>
        <trans-unit id="0d3ff54774240d09be6a43e7359d4c4c2f2e5176" translate="yes" xml:space="preserve">
          <source>A service is a single type, usually an interface or abstract class. A concrete class can be used, but this is not recommended. The type may have any accessibility. The methods of a service are highly domain-specific, so this API specification cannot give concrete advice about their form or function. However, there are two general guidelines:</source>
          <target state="translated">サービスは単一の型で、通常はインターフェイスまたは抽象クラスです。具象クラスを使用することもできますが、これは推奨されません。型は任意のアクセシビリティを持っていてもよい。サービスのメソッドは非常にドメイン固有性が高いため、このAPI仕様ではその形式や機能について具体的なアドバイスをすることはできません。しかし、2つの一般的なガイドラインがあります。</target>
        </trans-unit>
        <trans-unit id="bd7f13dbab6e888b83035eb38dfede73265746b2" translate="yes" xml:space="preserve">
          <source>A service loader can be used to locate and instantiate providers of the service by means of the &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; method. &lt;code&gt;ServiceLoader&lt;/code&gt; also defines the &lt;a href=&quot;#stream()&quot;&gt;&lt;code&gt;stream&lt;/code&gt;&lt;/a&gt; method to obtain a stream of providers that can be inspected and filtered without instantiating them.</source>
          <target state="translated">サービスローダーを使用して、&lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt;メソッドを使用してサービスのプロバイダーを見つけてインスタンス化できます。 &lt;code&gt;ServiceLoader&lt;/code&gt; は、インスタンス化せずに検査およびフィルタリングできるプロバイダーのストリームを取得するための&lt;a href=&quot;#stream()&quot;&gt; &lt;code&gt;stream&lt;/code&gt; &lt;/a&gt;メソッドも定義します。</target>
        </trans-unit>
        <trans-unit id="e5be03a3bcea05f5cf9332e8caca8a5edf8812eb" translate="yes" xml:space="preserve">
          <source>A service loader will instantiate &lt;code&gt;StandardCodecs&lt;/code&gt; via its constructor, and will instantiate &lt;code&gt;ExtendedCodecsFactory&lt;/code&gt; by invoking its &lt;code&gt;provider&lt;/code&gt; method. The requirement that the provider constructor or provider method is public helps to document the intent that the class (that is, the service provider) will be instantiated by an entity (that is, a service loader) which is outside the class's package.</source>
          <target state="translated">サービスローダーは、コンストラクターを介して &lt;code&gt;StandardCodecs&lt;/code&gt; をインスタンス化し、 &lt;code&gt;provider&lt;/code&gt; メソッドを呼び出すことによって &lt;code&gt;ExtendedCodecsFactory&lt;/code&gt; をインスタンス化します。プロバイダーコンストラクターまたはプロバイダーメソッドがパブリックであるという要件は、クラス（つまり、サービスプロバイダー）がクラスのパッケージの外部にあるエンティティ（つまり、サービスローダー）によってインスタンス化されるという意図を文書化するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="c24aae90727af4acf4d73a6391df43e7c724bca3" translate="yes" xml:space="preserve">
          <source>A service provided by the nesting BeanContext has been revoked.</source>
          <target state="translated">ネスティングBeanContextによって提供されるサービスは失効しました。</target>
        </trans-unit>
        <trans-unit id="ea781e133d496aaae66b4384fc8cf8471b5ed3e7" translate="yes" xml:space="preserve">
          <source>A service provided by the nesting BeanContext has been revoked. Subclasses may override this method in order to implement their own behaviors.</source>
          <target state="translated">ネスティングBeanContextによって提供されたサービスは,取り消されました。サブクラスは、独自の振る舞いを実装するためにこのメソッドをオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="a6e6c35c902672e1aeaf13aecbd1340098d41cdb" translate="yes" xml:space="preserve">
          <source>A service provider and its supporting code may be developed in a module, which is then deployed on the application module path or in a modular image. Alternatively, a service provider and its supporting code may be packaged as a JAR file and deployed on the application class path. The advantage of developing a service provider in a module is that the provider can be fully encapsulated to hide all details of its implementation.</source>
          <target state="translated">サービス・プロバイダとそのサポート・コードは、モジュールで開発され、アプリケーション・モジュール・パスまたはモジュール・イメージでデプロイされます。あるいは、サービス・プロバイダとそのサポート・コードは、JAR ファイルとしてパッケージ化され、アプリケーション・クラス・パスに配置されることもあります。モジュール内でサービスプロバイダを開発する利点は、プロバイダを完全にカプセル化して実装の詳細をすべて隠すことができることです。</target>
        </trans-unit>
        <trans-unit id="a881b01ec7de22d0659bbbcee6cb1246a3fbbc59" translate="yes" xml:space="preserve">
          <source>A service provider cannot be loaded;</source>
          <target state="translated">サービス提供者をロードすることはできません。</target>
        </trans-unit>
        <trans-unit id="8fea6b18d5888128fd44d804099fa9a487e3621f" translate="yes" xml:space="preserve">
          <source>A service provider implementation SHOULD use underlying JCA engine classes, such as &lt;a href=&quot;../../../../../java.base/java/security/signature&quot;&gt;&lt;code&gt;Signature&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../../../java.base/java/security/messagedigest&quot;&gt;&lt;code&gt;MessageDigest&lt;/code&gt;&lt;/a&gt; to perform cryptographic operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561615b43a4e09c9dcd11e73dfd2a418520d3966" translate="yes" xml:space="preserve">
          <source>A service provider is a concrete implementation of the abstract &lt;a href=&quot;xmlsignaturefactory&quot;&gt;&lt;code&gt;XMLSignatureFactory&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;keyinfo/keyinfofactory&quot;&gt;&lt;code&gt;KeyInfoFactory&lt;/code&gt;&lt;/a&gt; classes and is responsible for creating objects and algorithms that parse, generate and validate XML Signatures and KeyInfo structures. A concrete implementation of &lt;code&gt;XMLSignatureFactory&lt;/code&gt; MUST provide support for each of the REQUIRED algorithms as specified by the W3C recommendation for XML Signatures. It MAY support other algorithms as defined by the W3C recommendation or other specifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c7ff0f5baa4e32df7f5afc42174df749dfe3f8" translate="yes" xml:space="preserve">
          <source>A service provider is a single type, usually a concrete class. An interface or abstract class is permitted because it may declare a static provider method, discussed later. The type must be public and must not be an inner class.</source>
          <target state="translated">サービスプロバイダは単一の型で、通常は具象クラスです。インターフェースや抽象クラスが許されるのは、後述する静的なプロバイダメソッドを宣言できるからです。型はパブリックでなければならず、内部クラスであってはなりません。</target>
        </trans-unit>
        <trans-unit id="9ad627c084b0b6a4e4946629877d1735e55492f3" translate="yes" xml:space="preserve">
          <source>A service provider is not assignable to the service's interface or class, or does not define a provider constructor, or cannot be instantiated.</source>
          <target state="translated">サービス・プロバイダは、サービスのインターフェイスやクラスに割り当てることができないか、プロバイダ・コンストラクタを定義していないか、インスタンス化できません。</target>
        </trans-unit>
        <trans-unit id="650fe805b03811763c088b57de06f81516067f20" translate="yes" xml:space="preserve">
          <source>A service provider provides a subclass of &lt;code&gt;ReferralException&lt;/code&gt; by providing implementations for &lt;code&gt;getReferralInfo()&lt;/code&gt; and &lt;code&gt;getReferralContext()&lt;/code&gt; (and appropriate constructors and/or corresponding &quot;set&quot; methods).</source>
          <target state="translated">サービスプロバイダーは、 &lt;code&gt;getReferralInfo()&lt;/code&gt; および &lt;code&gt;getReferralContext()&lt;/code&gt; （および適切なコンストラクターや対応する「set」メソッド）の実装を提供することにより、 &lt;code&gt;ReferralException&lt;/code&gt; のサブクラスを提供します。</target>
        </trans-unit>
        <trans-unit id="d4bc2d0b97b8b122ac6e9b670e174b403a866ed9" translate="yes" xml:space="preserve">
          <source>A service provider supports connection and context request controls in the following ways. Context request controls must be associated on a per context instance basis while connection request controls must be associated on a per connection instance basis. The service provider must look for the connection request controls in the environment property &quot;java.naming.ldap.control.connect&quot; and pass this environment property on to context instances that it creates.</source>
          <target state="translated">サービスプロバイダは、以下の方法で接続制御とコンテキスト要求制御をサポートします。コンテキスト要求コントロールはコンテキスト・インスタンスごとに関連付けられなければならず、一方、接続要求コントロールは接続インスタンスごとに関連付けられなければなりません。サービス・プロバイダは、環境プロパティ &quot;java.naming.ldap.control.connect &quot;の中にある接続要求コントロールを探し、作成するコンテキスト・インスタンスにこの環境プロパティを渡さなければなりません。</target>
        </trans-unit>
        <trans-unit id="05fc8c0d38b5925dd12d88f9a4d864964eb1a23e" translate="yes" xml:space="preserve">
          <source>A service provider that is deployed as an &lt;a href=&quot;../lang/module/moduledescriptor#isAutomatic()&quot;&gt;automatic module&lt;/a&gt; on the application module path must have a provider constructor. There is no support for a provider method in this case.</source>
          <target state="translated">アプリケーションモジュールパスに&lt;a href=&quot;../lang/module/moduledescriptor#isAutomatic()&quot;&gt;自動モジュール&lt;/a&gt;としてデプロイされるサービスプロバイダーには、プロバイダーコンストラクターが必要です。この場合、プロバイダーメソッドはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="21e629d9b986d98aad5b172d7b134cbdb20bc42c" translate="yes" xml:space="preserve">
          <source>A service provider that is developed in a module has no control over when it is instantiated, since that occurs at the behest of the application, but it does have control over how it is instantiated:</source>
          <target state="translated">モジュールで開発されたサービスプロバイダは、それがいつインスタンス化されるかを制御することはできません。</target>
        </trans-unit>
        <trans-unit id="fb3bd9e359015e93378204e4fc0d5cef15a4e1d8" translate="yes" xml:space="preserve">
          <source>A service provider that is developed in a module must be specified in a</source>
          <target state="translated">モジュール内で開発されたサービスプロバイダは</target>
        </trans-unit>
        <trans-unit id="a105491d46a576702eaa9bd293b3166772de8571" translate="yes" xml:space="preserve">
          <source>A service provider that is mentioned in a provider-configuration file may be located in the same JAR file as the provider-configuration file or in a different JAR file. The service provider must be visible from the class loader that is initially queried to locate the provider-configuration file; this is not necessarily the class loader which ultimately locates the provider-configuration file.</source>
          <target state="translated">provider-configurationファイルに記載されているサービス・プロバイダは、provider-configurationファイルと同じJARファイル内にある場合と、異なるJARファイル内にある場合があります。サービス・プロバイダは、 provider-configuration ファイルを探すために最初に照会されたクラス・ローダから見えるようになっている必要がありますが、これは必ずしも最終的に provider-configuration ファイルを探すクラス・ローダとは限りません。</target>
        </trans-unit>
        <trans-unit id="8b3ae2431f01165c4d6223d3345a0467408a54bc" translate="yes" xml:space="preserve">
          <source>A service provider that is packaged as a JAR file for the class path is identified by placing a</source>
          <target state="translated">クラスパス用のJARファイルとしてパッケージ化されたサービスプロバイダは</target>
        </trans-unit>
        <trans-unit id="90b6c596a514c8a3e3a8e0d7147721a54f817a8c" translate="yes" xml:space="preserve">
          <source>A service should declare as many methods as needed to allow service providers to communicate their domain-specific properties and other quality-of-implementation factors. An application which obtains a service loader for the service may then invoke these methods on each instance of a service provider, in order to choose the best provider for the application.</source>
          <target state="translated">サービスは、サービスプロバイダがドメイン固有のプロパティやその他の実装品質の要因を通信できるようにするために、必要なだけ多くのメソッドを宣言しなければなりません。サービスのためのサービスローダを取得するアプリケーションは、アプリケーションに最適なプロバイダを選択するために、サービスプロバイダの各インスタンス上でこれらのメソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="f558c682d82a78f65971b8aa59cc9663eb4bdbc7" translate="yes" xml:space="preserve">
          <source>A service should express whether its service providers are intended to be direct implementations of the service or to be an indirection mechanism such as a &quot;proxy&quot; or a &quot;factory&quot;. Service providers tend to be indirection mechanisms when domain-specific objects are relatively expensive to instantiate; in this case, the service should be designed so that service providers are abstractions which create the &quot;real&quot; implementation on demand. For example, the &lt;code&gt;CodecFactory&lt;/code&gt; service expresses through its name that its service providers are factories for codecs, rather than codecs themselves, because it may be expensive or complicated to produce certain codecs.</source>
          <target state="translated">サービスは、そのサービスプロバイダーがサービスの直接実装であるか、「プロキシ」や「ファクトリ」などの間接メカニズムであるかを表現する必要があります。ドメイン固有のオブジェクトのインスタンス化に比較的費用がかかる場合、サービスプロバイダーは間接メカニズムになる傾向があります。この場合、サービスは、サービスプロバイダーがオンデマンドで「実際の」実装を作成する抽象化になるように設計する必要があります。たとえば、 &lt;code&gt;CodecFactory&lt;/code&gt; サービスは、特定のコーデックを作成するのに費用がかかるか複雑になる可能性があるため、サービスプロバイダーがコーデック自体ではなくコーデックのファクトリであることをその名前で表します。</target>
        </trans-unit>
        <trans-unit id="107c1281d843d21812c9753f1e240a4807a7bfa6" translate="yes" xml:space="preserve">
          <source>A service that a module provides one or more implementations of.</source>
          <target state="translated">モジュールが1つ以上の実装を提供するサービス。</target>
        </trans-unit>
        <trans-unit id="21de0eefa91f1991f4ee8f78f789abc2d6a632c8" translate="yes" xml:space="preserve">
          <source>A service that decouples the production of new asynchronous tasks from the consumption of the results of completed tasks.</source>
          <target state="translated">新しい非同期タスクの生成と、完了したタスクの結果の消費を切り離すサービス。</target>
        </trans-unit>
        <trans-unit id="4fc784edd2a04b2cf1ba0e1aff303c3c41157426" translate="yes" xml:space="preserve">
          <source>A service that decouples the production of new asynchronous tasks from the consumption of the results of completed tasks. Producers &lt;code&gt;submit&lt;/code&gt; tasks for execution. Consumers &lt;code&gt;take&lt;/code&gt; completed tasks and process their results in the order they complete. A &lt;code&gt;CompletionService&lt;/code&gt; can for example be used to manage asynchronous I/O, in which tasks that perform reads are submitted in one part of a program or system, and then acted upon in a different part of the program when the reads complete, possibly in a different order than they were requested.</source>
          <target state="translated">新しい非同期タスクの生成を、完了したタスクの結果の消費から切り離すサービス。プロデューサーはタスクを実行のために &lt;code&gt;submit&lt;/code&gt; ます。消費者 &lt;code&gt;take&lt;/code&gt; 完了したタスクを取り、完了した順序で結果を処理します。A &lt;code&gt;CompletionService&lt;/code&gt; は、例えば、非同期I / Oを管理するために使用することができるAはおそらく、完全に読み取るときに、プログラムの異なる部分の際、プログラムまたはシステムの一部に提出し、次いで作用さ読み出し実行するタスク彼らが要求されたものとは異なる順序。</target>
        </trans-unit>
        <trans-unit id="7bdaf453a964a1c776e674e18188b8bca8aaecb7" translate="yes" xml:space="preserve">
          <source>A session can be retrieved based on its session id, and all session id's in a &lt;code&gt;SSLSessionContext&lt;/code&gt; can be listed.</source>
          <target state="translated">セッションはそのセッションIDに基づいて取得でき、 &lt;code&gt;SSLSessionContext&lt;/code&gt; 内のすべてのセッションIDをリストできます。</target>
        </trans-unit>
        <trans-unit id="b6646ee6a4df183df2ff9597fe94d2c392713265" translate="yes" xml:space="preserve">
          <source>A set containing one entry per MLET tag in the m-let text file loaded. Each entry specifies either the ObjectInstance for the created MBean, or a throwable object (that is, an error or an exception) if the MBean could not be created.</source>
          <target state="translated">ロードされた m-let テキストファイルの MLET タグごとに 1 つのエントリを含むセットです。各エントリは、作成されたMBeanのObjectInstanceか、MBeanを作成できなかった場合のthrowableオブジェクト(エラーや例外)を指定します。</target>
        </trans-unit>
        <trans-unit id="823c29ca4332f839f05f46d7bec1bff3ba2dfd93" translate="yes" xml:space="preserve">
          <source>A set containing the &lt;code&gt;ObjectInstance&lt;/code&gt; objects for the selected MBeans. If no MBean satisfies the query an empty list is returned.</source>
          <target state="translated">選択したMBeanの &lt;code&gt;ObjectInstance&lt;/code&gt; オブジェクトを含むセット。クエリを満たすMBeanがない場合は、空のリストが返されます。</target>
        </trans-unit>
        <trans-unit id="18f09420b43907da1e09c08ba83a8436b485f82a" translate="yes" xml:space="preserve">
          <source>A set containing the ObjectNames for the MBeans selected. If no MBean satisfies the query, an empty list is returned.</source>
          <target state="translated">選択された MBeans の ObjectNames を含むセット。クエリを満たす MBean がない場合は、空のリストが返されます。</target>
        </trans-unit>
        <trans-unit id="1d269b0bcb9953bd64c968e8a8983b8bb0830c94" translate="yes" xml:space="preserve">
          <source>A set of attributes which control a print job.</source>
          <target state="translated">印刷ジョブを制御する属性のセット。</target>
        </trans-unit>
        <trans-unit id="dc6807396a2cea1c95e0ec79617cbf32ea12d98e" translate="yes" xml:space="preserve">
          <source>A set of attributes which control the output of a printed page.</source>
          <target state="translated">印刷されたページの出力を制御する属性のセット。</target>
        </trans-unit>
        <trans-unit id="4e23b85f028bc038f2d1717150dfac0e8f5e8889" translate="yes" xml:space="preserve">
          <source>A set of date fields that provide access to Julian Days.</source>
          <target state="translated">ユリウスの日へのアクセスを提供する日付フィールドのセット。</target>
        </trans-unit>
        <trans-unit id="fc2466ca66e5a6f6082b0cee1ceed5a8907bc032" translate="yes" xml:space="preserve">
          <source>A set of methods alternatively take a &quot;msgSupplier&quot; instead of a &quot;msg&quot; argument. These methods take a &lt;a href=&quot;../../../../java.base/java/util/function/supplier&quot;&gt;&lt;code&gt;Supplier&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;String&amp;gt;&lt;/code&gt; function which is invoked to construct the desired log message only when the message actually is to be logged based on the effective log level thus eliminating unnecessary message construction. For example, if the developer wants to log system health status for diagnosis, with the String-accepting version, the code would look like:</source>
          <target state="translated">または、一連のメソッドは、「msg」引数の代わりに「msgSupplier」を取ります。これらのメソッドは、メッセージが実際に有効なログレベルに基づいてログに記録される場合にのみ、目的のログメッセージを作成するために呼び出される&lt;a href=&quot;../../../../java.base/java/util/function/supplier&quot;&gt; &lt;code&gt;Supplier&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;String&amp;gt;&lt;/code&gt; 関数を取り、不要なメッセージ作成を排除します。たとえば、開発者が診断のためにシステムヘルスステータスをログに記録したい場合、文字列を受け入れるバージョンでは、コードは次のようになります。</target>
        </trans-unit>
        <trans-unit id="3817554a50f654a740b263526282ded9c6886b68" translate="yes" xml:space="preserve">
          <source>A set of methods alternatively take a &quot;msgSupplier&quot; instead of a &quot;msg&quot; argument. These methods take a &lt;a href=&quot;../function/supplier&quot;&gt;&lt;code&gt;Supplier&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;String&amp;gt;&lt;/code&gt; function which is invoked to construct the desired log message only when the message actually is to be logged based on the effective log level thus eliminating unnecessary message construction. For example, if the developer wants to log system health status for diagnosis, with the String-accepting version, the code would look like:</source>
          <target state="translated">メソッドのセットは、代わりに「msg」引数の代わりに「msgSupplier」を取ります。これらのメソッドは、有効なログレベルに基づいてメッセージが実際にログに記録されるときにのみ目的のログメッセージを構築するために呼び出される&lt;a href=&quot;../function/supplier&quot;&gt; &lt;code&gt;Supplier&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;String&amp;gt;&lt;/code&gt; 関数を使用するため、不要なメッセージの構築が不要になります。たとえば、開発者が診断のためにシステムのヘルスステータスをログに記録したい場合、文字列を受け入れるバージョンでは、コードは次のようになります。</target>
        </trans-unit>
        <trans-unit id="e66d63e3312e34b5660af451cc8fa239aa214c82" translate="yes" xml:space="preserve">
          <source>A set of the socket options supported by this channel</source>
          <target state="translated">このチャンネルがサポートするソケットオプションのセット</target>
        </trans-unit>
        <trans-unit id="c5c42e67a0e9d6da7205778a238c6a49cf727721" translate="yes" xml:space="preserve">
          <source>A set of the socket options supported by this socket. This set may be empty if the socket's DatagramSocketImpl cannot be created.</source>
          <target state="translated">このソケットがサポートするソケットオプションのセット。ソケットの DatagramSocketImpl を作成できない場合、このセットは空になります。</target>
        </trans-unit>
        <trans-unit id="1031839763e2c7f13b8fc5dce54eb4dc33216742" translate="yes" xml:space="preserve">
          <source>A set of the socket options supported by this socket. This set may be empty if the socket's SocketImpl cannot be created.</source>
          <target state="translated">このソケットがサポートするソケットオプションのセット。ソケットのSocketImplが作成できない場合、このセットは空になります。</target>
        </trans-unit>
        <trans-unit id="4999fb77acf1811b58e8846e7ae1e7c4207cb24b" translate="yes" xml:space="preserve">
          <source>A set of updater methods were added to this interface in the JDBC 2.0 API (Java 2 SDK, Standard Edition, version 1.2). The comments regarding parameters to the getter methods also apply to parameters to the updater methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582b5ca50c72ee8d9aa10c8467ea260e2ee2c4ee" translate="yes" xml:space="preserve">
          <source>A set of updater methods were added to this interface in the JDBC 2.0 API (Java&amp;trade; 2 SDK, Standard Edition, version 1.2). The comments regarding parameters to the getter methods also apply to parameters to the updater methods.</source>
          <target state="translated">一連のアップデータメソッドが、JDBC 2.0 API（Java&amp;trade;2 ​​SDK、Standard Edition、バージョン1.2）のこのインターフェイスに追加されました。getterメソッドのパラメーターに関するコメントは、updaterメソッドのパラメーターにも適用されます。</target>
        </trans-unit>
        <trans-unit id="c6a8aee71dd0a287720f66b38e0678adc0b95290" translate="yes" xml:space="preserve">
          <source>A setting consists of a name/value pair, where &lt;em&gt;name&lt;/em&gt; specifies the event and setting to configure, and the &lt;em&gt;value&lt;/em&gt; specifies what to set it to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853cf41c51f43dfcfcc6e4eea887defa338da481" translate="yes" xml:space="preserve">
          <source>A shape to use for the child allocation to avoid creating a lot of garbage.</source>
          <target state="translated">たくさんのゴミを作らないようにするために子の割り当てに使用する形状。</target>
        </trans-unit>
        <trans-unit id="409fae66175b060955443e215504e840fd35b167" translate="yes" xml:space="preserve">
          <source>A shared superclass for the common functionality of &lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;constructor&quot;&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;constructor&quot;&gt; &lt;code&gt;Constructor&lt;/code&gt; の&lt;/a&gt;共通機能の共有スーパークラス。</target>
        </trans-unit>
        <trans-unit id="9b8b7e58b2a0c688355809db08681d6a34f0257c" translate="yes" xml:space="preserve">
          <source>A short buffer is not comparable to any other type of object.</source>
          <target state="translated">ショートバッファは、他のどのタイプのオブジェクトとも比較できません。</target>
        </trans-unit>
        <trans-unit id="220cedae5cee73eb5e77033cce955a3ec7558f65" translate="yes" xml:space="preserve">
          <source>A short buffer is not equal to any other type of object.</source>
          <target state="translated">ショートバッファは、他のどのタイプのオブジェクトとも同じではありません。</target>
        </trans-unit>
        <trans-unit id="ac3d240d57cfeafb5db637c36dbd59837d8c439c" translate="yes" xml:space="preserve">
          <source>A short buffer.</source>
          <target state="translated">短いバッファです。</target>
        </trans-unit>
        <trans-unit id="0a0590d6a1827598168fafe48b6065118e07ebb4" translate="yes" xml:space="preserve">
          <source>A significant part of dealing with dates and times is the localization. This class acts as a central point for accessing the information.</source>
          <target state="translated">日付と時刻を扱う上で重要なのは、ローカリゼーションです。このクラスは、情報にアクセスするための中心的な役割を果たします。</target>
        </trans-unit>
        <trans-unit id="e0e06d4fda3d87cee17ba970f4abb3153d8c7e1d" translate="yes" xml:space="preserve">
          <source>A similar example, using a helper object to hold a loop parameter:</source>
          <target state="translated">同様の例として、ヘルパー・オブジェクトを使用してループ・パラメータを保持します。</target>
        </trans-unit>
        <trans-unit id="4ebcbcfb752d1d5a18e55afabc1c6fe6cefc14a1" translate="yes" xml:space="preserve">
          <source>A similar technique can be used to generate an</source>
          <target state="translated">同様の手法を使用して</target>
        </trans-unit>
        <trans-unit id="b81bc43037857ed85f56a7ae603dd69e2aeafc77" translate="yes" xml:space="preserve">
          <source>A similar technique can be used to generate an &lt;em&gt;open range&lt;/em&gt; (which contains neither endpoint). The following idiom obtains a view containing all of the key-value mappings in &lt;code&gt;m&lt;/code&gt; whose keys are between &lt;code&gt;low&lt;/code&gt; and &lt;code&gt;high&lt;/code&gt;, exclusive:</source>
          <target state="translated">同様の手法を使用して、（どちらのエンドポイントも含まない）&lt;em&gt;公開範囲&lt;/em&gt;を生成できます。次のイディオムは、キーが &lt;code&gt;low&lt;/code&gt; と &lt;code&gt;high&lt;/code&gt; の間にある &lt;code&gt;m&lt;/code&gt; のすべてのキーと値のマッピングを含むビューを取得します。</target>
        </trans-unit>
        <trans-unit id="3d57dee7a20af84e7fe2e9596414a5131168b917" translate="yes" xml:space="preserve">
          <source>A similar, but simpler, situation occurs for the Japanese calendar system. The locale &quot;jp_JP_JP&quot; has previously been used to access the calendar. However, unlike the Thai locale, &quot;ja_JP_JP&quot; is automatically converted by &lt;code&gt;Locale&lt;/code&gt; to the modern and recommended form of &quot;ja-JP-u-ca-japanese&quot;. Thus, there is no difference in behavior between this method and &lt;code&gt;Calendar#getInstance(Locale)&lt;/code&gt;.</source>
          <target state="translated">日本のカレンダーシステムでも、同様の、しかしより単純な状況が発生します。ロケール「jp_JP_JP」は、以前はカレンダーへのアクセスに使用されていました。ただし、タイ語のロケールとは異なり、「ja_JP_JP」は &lt;code&gt;Locale&lt;/code&gt; によって自動的に「ja-JP-u-ca-japanese」の最新の推奨形式に変換されます。したがって、このメソッドと &lt;code&gt;Calendar#getInstance(Locale)&lt;/code&gt; の動作に違いはありません。</target>
        </trans-unit>
        <trans-unit id="9ea5396860b484237672382fe5f7f9f7be841a20" translate="yes" xml:space="preserve">
          <source>A simple DTD-driven HTML parser.</source>
          <target state="translated">シンプルな DTD 駆動の HTML パーサーです。</target>
        </trans-unit>
        <trans-unit id="b6cedbf85f4d4faa780a9796e11f7f8fce05def1" translate="yes" xml:space="preserve">
          <source>A simple DTD-driven HTML parser. The parser reads an HTML file from an InputStream and calls various methods (which should be overridden in a subclass) when tags and data are encountered.</source>
          <target state="translated">シンプルな DTD 駆動の HTML パーサーです。パーサーはInputStreamからHTMLファイルを読み込み、タグやデータが検出されたときに様々なメソッド(サブクラスでオーバーライドされるべきもの)を呼び出します。</target>
        </trans-unit>
        <trans-unit id="1c197409545388baeb2215de4f002e5dfb62b00f" translate="yes" xml:space="preserve">
          <source>A simple SQL identifier or a delimited identifier</source>
          <target state="translated">単純な SQL 識別子または区切り識別子</target>
        </trans-unit>
        <trans-unit id="12a111d3d26ed80b7a5d0975eed77cb4f5b76771" translate="yes" xml:space="preserve">
          <source>A simple adjuster might simply set the one of the fields, such as the hour field. A more complex adjuster might set the time to the last hour of the day.</source>
          <target state="translated">単純なアジャスターは、時間フィールドのようなフィールドの一つを設定するだけかもしれません。より複雑なアジャスターでは、時間をその日の最後の時間に設定することもできます。</target>
        </trans-unit>
        <trans-unit id="23a02b1085ad689bf3c6002c5e392214239fa5f6" translate="yes" xml:space="preserve">
          <source>A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the date to the last day of the month.</source>
          <target state="translated">単純なアジャスターであれば、年のようなフィールドの1つを設定するだけかもしれません。より複雑なアジャスターでは、日付を月の最終日に設定することもできます。</target>
        </trans-unit>
        <trans-unit id="a318603867fd35924e66b179c67d0767587c5ec3" translate="yes" xml:space="preserve">
          <source>A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the date to the last day of the month. A selection of common adjustments is provided in &lt;a href=&quot;temporal/temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. These include finding the &quot;last day of the month&quot; and &quot;next Wednesday&quot;. Key date-time classes also implement the &lt;code&gt;TemporalAdjuster&lt;/code&gt; interface, such as &lt;a href=&quot;month&quot;&gt;&lt;code&gt;Month&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;monthday&quot;&gt;&lt;code&gt;MonthDay&lt;/code&gt;&lt;/a&gt;. The adjuster is responsible for handling special cases, such as the varying lengths of month and leap years.</source>
          <target state="translated">単純なアジャスターは、年フィールドなどのフィールドの1つを設定するだけです。より複雑な調整機能では、日付を月の最終日に設定する場合があります。一般的な調整の選択は&lt;a href=&quot;temporal/temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt;で提供されます。これらには、「月の最終日」と「次の水曜日」の検索が含まれます。主要な日時クラスは、&lt;a href=&quot;month&quot;&gt; &lt;code&gt;Month&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;monthday&quot;&gt; &lt;code&gt;MonthDay&lt;/code&gt; &lt;/a&gt;などの &lt;code&gt;TemporalAdjuster&lt;/code&gt; インターフェースも実装します。アジャスターは、月の長さやうるう年のさまざまな長さなど、特別な場合の処理​​を担当します。</target>
        </trans-unit>
        <trans-unit id="fa3fc5f3d04680138bbeab26dcb646d5fbc7391e" translate="yes" xml:space="preserve">
          <source>A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the year-month to the next month that Halley's comet will pass the Earth.</source>
          <target state="translated">単純なアジャスターは、単に年のフィールドのようなフィールドの一つを設定するだけかもしれない。より複雑な調整器では、年月をハレー彗星が地球を通過する次の月に設定することもできます。</target>
        </trans-unit>
        <trans-unit id="1aa5f5faff34dd4e9c4de55734ce4de58db0d760" translate="yes" xml:space="preserve">
          <source>A simple base class for more specialized editors that displays a read-only view of the model's current value with a &lt;code&gt;JFormattedTextField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; を使用してモデルの現在の値の読み取り専用ビューを表示する、より専門的なエディター用の単純な基本クラス。</target>
        </trans-unit>
        <trans-unit id="2764835975cd700dbd46170965facdc08a19a6da" translate="yes" xml:space="preserve">
          <source>A simple base class for more specialized editors that displays a read-only view of the model's current value with a &lt;code&gt;JFormattedTextField&lt;/code&gt;. Subclasses can configure the &lt;code&gt;JFormattedTextField&lt;/code&gt; to create an editor that's appropriate for the type of model they support and they may want to override the &lt;code&gt;stateChanged&lt;/code&gt; and &lt;code&gt;propertyChanged&lt;/code&gt; methods, which keep the model and the text field in sync.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; を使用してモデルの現在の値の読み取り専用ビューを表示する、より専門的なエディター用の単純な基本クラス。サブクラスは、サポートするモデルのタイプに適したエディターを作成するように &lt;code&gt;JFormattedTextField&lt;/code&gt; を構成できます。また、モデルとテキストフィールドの同期を維持する &lt;code&gt;stateChanged&lt;/code&gt; メソッドと &lt;code&gt;propertyChanged&lt;/code&gt; メソッドをオーバーライドすることもできます。</target>
        </trans-unit>
        <trans-unit id="9de12e02d5d783055af2cac617c1cf13b79e9aa4" translate="yes" xml:space="preserve">
          <source>A simple container class to aggregate an image, a set of thumbnail (preview) images, and an object representing metadata associated with the image.</source>
          <target state="translated">画像、サムネイル(プレビュー)画像のセット、画像に関連付けられたメタデータを表すオブジェクトを集約するためのシンプルなコンテナクラスです。</target>
        </trans-unit>
        <trans-unit id="57b83c054e36e07ed7927586bfadbcbca8585267" translate="yes" xml:space="preserve">
          <source>A simple example HTML invocation is:</source>
          <target state="translated">簡単なHTMLの呼び出し例は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="3afcb20906076980f2d654a99ba0b5aea04cc852" translate="yes" xml:space="preserve">
          <source>A simple example of using the API is:</source>
          <target state="translated">APIを使った簡単な例を挙げてみます。</target>
        </trans-unit>
        <trans-unit id="af4d653de33053860dff4b70bc99a12fe289e16b" translate="yes" xml:space="preserve">
          <source>A simple filter interface used by &lt;code&gt;ServiceRegistry.getServiceProviders&lt;/code&gt; to select providers matching an arbitrary criterion.</source>
          <target state="translated">任意の基準に一致するプロバイダーを選択するために &lt;code&gt;ServiceRegistry.getServiceProviders&lt;/code&gt; によって使用される単純なフィルターインターフェイス。</target>
        </trans-unit>
        <trans-unit id="44205ac3fc78148a74f195a9ff2af55f58512ea8" translate="yes" xml:space="preserve">
          <source>A simple filter interface used by &lt;code&gt;ServiceRegistry.getServiceProviders&lt;/code&gt; to select providers matching an arbitrary criterion. Classes that implement this interface should be defined in order to make use of the &lt;code&gt;getServiceProviders&lt;/code&gt; method of &lt;code&gt;ServiceRegistry&lt;/code&gt; that takes a &lt;code&gt;Filter&lt;/code&gt;.</source>
          <target state="translated">任意の基準に一致するプロバイダーを選択するために &lt;code&gt;ServiceRegistry.getServiceProviders&lt;/code&gt; によって使用される単純なフィルターインターフェイス。 &lt;code&gt;Filter&lt;/code&gt; を &lt;code&gt;ServiceRegistry&lt;/code&gt; の &lt;code&gt;getServiceProviders&lt;/code&gt; メソッドを利用するには、このインターフェイスを実装するクラスを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="94df5a8b03faa139f9cbff5fbd9a6312ad0d8813" translate="yes" xml:space="preserve">
          <source>A simple implementation of &lt;code&gt;SpinnerModel&lt;/code&gt; whose values are defined by an array or a &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">値が配列または &lt;code&gt;List&lt;/code&gt; によって定義される &lt;code&gt;SpinnerModel&lt;/code&gt; の単純な実装。</target>
        </trans-unit>
        <trans-unit id="fbec365ef8d24ee111e97b44c56f8ad7334a3295" translate="yes" xml:space="preserve">
          <source>A simple implementation of &lt;code&gt;SpinnerModel&lt;/code&gt; whose values are defined by an array or a &lt;code&gt;List&lt;/code&gt;. For example to create a model defined by an array of the names of the days of the week:</source>
          <target state="translated">値が配列または &lt;code&gt;List&lt;/code&gt; によって定義される &lt;code&gt;SpinnerModel&lt;/code&gt; の単純な実装。たとえば、曜日の名前の配列によって定義されたモデルを作成するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="74fccd3ff6f46074f0af84c8344a7d990571dd3b" translate="yes" xml:space="preserve">
          <source>A simple implementation of Bindings backed by a &lt;code&gt;HashMap&lt;/code&gt; or some other specified &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;HashMap&lt;/code&gt; またはその他の指定された &lt;code&gt;Map&lt;/code&gt; によってサポートされるBindingsの単純な実装。</target>
        </trans-unit>
        <trans-unit id="044c6c729ff49ba0ec97fdf1cefbf0c1c70b1c60" translate="yes" xml:space="preserve">
          <source>A simple interface which provides a mechanism to map between a file name and a MIME type string.</source>
          <target state="translated">ファイル名と MIME タイプ文字列の間でマップするメカニズムを提供するシンプルなインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="abe9a18b4467c717ef8e29a957d65d71806ed58c" translate="yes" xml:space="preserve">
          <source>A simple minded look and feel change: ask each node in the tree to &lt;code&gt;updateUI()&lt;/code&gt; -- that is, to initialize its UI property with the current look and feel.</source>
          <target state="translated">単純なルックアンドフィールの変更：ツリー内の各ノードに &lt;code&gt;updateUI()&lt;/code&gt; を要求します。つまり、UIプロパティを現在のルックアンドフィールで初期化します。</target>
        </trans-unit>
        <trans-unit id="dacb2fcc771630cbdcbfdcac18166570cba477e7" translate="yes" xml:space="preserve">
          <source>A simple service-provider loading facility.</source>
          <target state="translated">簡易的なサービス提供者のローディング施設です。</target>
        </trans-unit>
        <trans-unit id="9897440ed3077a40719adee1662c352b9509dee5" translate="yes" xml:space="preserve">
          <source>A simple text scanner which can parse primitive types and strings using regular expressions.</source>
          <target state="translated">正規表現を使ってプリミティブ型や文字列を解析できるシンプルなテキストスキャナ。</target>
        </trans-unit>
        <trans-unit id="ae874b7118ac1c7c8f04bbfdc0b8de5f7c2a2ea4" translate="yes" xml:space="preserve">
          <source>A simple tree data model that uses TreeNodes.</source>
          <target state="translated">TreeNodesを使用したシンプルなツリーデータモデル。</target>
        </trans-unit>
        <trans-unit id="45d44698bb1d06d4aa5fb4d2294938388eff7c04" translate="yes" xml:space="preserve">
          <source>A simple tree data model that uses TreeNodes. For further information and examples that use DefaultTreeModel, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">TreeNodesを使用する単純なツリーデータモデル。DefaultTreeModelを使用する詳細情報と例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;「ツリーの使用方法」を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e9c5ab7d2ea188da068945af78755a1530998e41" translate="yes" xml:space="preserve">
          <source>A simple tree data model that uses TreeNodes. For further information and examples that use DefaultTreeModel, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88ff9658e5d7f037e733665708343d02e33a44b" translate="yes" xml:space="preserve">
          <source>A simple variable reference expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40948c5ede78bf4873b1e0de13ad97b985ff659" translate="yes" xml:space="preserve">
          <source>A simple variable reference expression. A &lt;code&gt;SubKind&lt;/code&gt; of &lt;a href=&quot;snippet.kind#EXPRESSION&quot;&gt;&lt;code&gt;Snippet.Kind.EXPRESSION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7697eeae7e8a85a77f1d29578e893238176fe6" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for source version &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d76f08d7ead833d12daf71d69f5f1f7bf210f23" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for source version &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e004a9f7f87001654c5cd8c72b219513788048" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ソースバージョン&lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; に適した&lt;/a&gt;デフォルトの動作を持つ注釈値の単純な訪問者。</target>
        </trans-unit>
        <trans-unit id="4833a91bff0c81247a7e00e63ce274190b4154fd" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">ソースバージョン&lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; に適した&lt;/a&gt;デフォルトの動作を持つ注釈値の単純な訪問者。アクセスメソッドは&lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="01d653778a792e460a6d6e30bffabcbfe49c41b8" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a4de84eef81a73dfc067699d11ff07246db5da" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4993ee4561a785ce855a86900bd6ffb63898f32" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つ注釈値の単純なビジター。</target>
        </trans-unit>
        <trans-unit id="4b8f8d0a43e8d95977d4d3424c5d0724cc2baf4e" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;#defaultAction(java.lang.Object,P)&quot;&gt;&lt;code&gt;defaultAction(java.lang.Object, P)&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つ注釈値の単純な訪問者。アクセスメソッドは&lt;a href=&quot;#defaultAction(java.lang.Object,P)&quot;&gt; &lt;code&gt;defaultAction(java.lang.Object, P)&lt;/code&gt; &lt;/a&gt;を呼び出し、引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="74d2b0cb45a8d6b85ec8418c78bfe850754e1244" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt;&lt;code&gt;defaultAction(java.lang.Object, P)&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つ注釈値の単純なビジター。訪問メソッドは&lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt; &lt;code&gt;defaultAction(java.lang.Object, P)&lt;/code&gt; &lt;/a&gt;を呼び出して、引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="3a340b7d1f1ecb42981a58df07ae2fdd15745b96" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つ注釈値の単純なビジター。</target>
        </trans-unit>
        <trans-unit id="9bb81c4428c42130a3e02aa3e7936cb6982ad8ab" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つ注釈値の単純な訪問者。アクセスメソッドは&lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="4b125219b094017b502ca392996fc23070ae3133" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つ注釈値の単純なビジター。訪問メソッドは&lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="ce1c8160aa409675b3e7293b8a25c0f8f37af5fa" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つ注釈値の単純なビジター。</target>
        </trans-unit>
        <trans-unit id="e7752124381faae30a107ff5b1ecb0becfa36b8d" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つ注釈値の単純な訪問者。アクセスメソッドは&lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction(java.lang.Object,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="370ae61f068e3d0befb7ba82b76e41070cc91849" translate="yes" xml:space="preserve">
          <source>A simple visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. Visit methods call &lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt; passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つ注釈値の単純なビジター。訪問メソッドは&lt;a href=&quot;simpleannotationvaluevisitor6#defaultAction-java.lang.Object-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="e7ee39c6a254232af84eaa6e36e150249585d87e" translate="yes" xml:space="preserve">
          <source>A simple visitor for tree nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf4c935c49a215c1522962a622225250ad8f65f" translate="yes" xml:space="preserve">
          <source>A simple visitor of files with default behavior to visit all files and to re-throw I/O errors.</source>
          <target state="translated">すべてのファイルを訪問し、I/Oエラーを再スローするデフォルトの動作を持つ、シンプルなファイルの訪問者です。</target>
        </trans-unit>
        <trans-unit id="44e8ad802c43be3b8eb93c7a5f3b876d5718e696" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ソースバージョン&lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; に適した&lt;/a&gt;デフォルトの動作を持つプログラム要素の単純な訪問者。</target>
        </trans-unit>
        <trans-unit id="7ff78ebcb82231c4d95f568ef19dbb80a1ce337b" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;. Visit methods corresponding to &lt;code&gt;RELEASE_9&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">ソースバージョン&lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; に適した&lt;/a&gt;デフォルトの動作を持つプログラム要素の単純な訪問者。 &lt;code&gt;RELEASE_9&lt;/code&gt; 以前の言語構造に対応するvisitメソッドは&lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="3527b83d67468ba9ccf3da87cbadbdca40ce29a6" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998f15efe7775a010a70030d649cc824de24c514" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;. Visit methods corresponding to &lt;code&gt;RELEASE_9&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c83a3aca3f35d922f88edba139802a56b01594" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d28e7a8b6ee1f98694fa4930b80048dbd81dc41" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_14&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2d80e9354651a601d59bd203681f6387e39885" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素の単純なビジター。</target>
        </trans-unit>
        <trans-unit id="101d5370d496d9e005f69d0668a6c96fad110315" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_6&lt;/code&gt; language constructs call &lt;a href=&quot;#defaultAction(javax.lang.model.element.Element,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters. For constructs introduced in &lt;code&gt;RELEASE_7&lt;/code&gt; and later, &lt;code&gt;
 visitUnknown&lt;/code&gt; is called instead.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素の単純な訪問者。 &lt;code&gt;RELEASE_6&lt;/code&gt; 言語構造に対応するvisitメソッドは&lt;a href=&quot;#defaultAction(javax.lang.model.element.Element,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。 &lt;code&gt;RELEASE_7&lt;/code&gt; 以降で導入された構造の場合、代わりに &lt;code&gt; visitUnknown&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="dfd6c813f680eb0eb2b148ef59c82b8c4e4359c4" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_6&lt;/code&gt; language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters. For constructs introduced in &lt;code&gt;RELEASE_7&lt;/code&gt; and later, &lt;code&gt;visitUnknown&lt;/code&gt; is called instead.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素の単純なビジター。 &lt;code&gt;RELEASE_6&lt;/code&gt; 言語構成に対応するVisitメソッドは&lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。 &lt;code&gt;RELEASE_7&lt;/code&gt; 以降で導入された構成 &lt;code&gt;visitUnknown&lt;/code&gt; 場合、代わりにvisitUnknownが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e3373e9dccc63693aae9881930a32a20b82e9811" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素の単純なビジター。</target>
        </trans-unit>
        <trans-unit id="8a4d09fbfc475ad368df8073ad122838040b4e55" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_7&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素の単純な訪問者。 &lt;code&gt;RELEASE_7&lt;/code&gt; 以前の言語コンストラクトに対応するvisitメソッドは&lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="5a9e01744c954dab0e145fbb2c53749ff339a922" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_7&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素の単純なビジター。 &lt;code&gt;RELEASE_7&lt;/code&gt; および以前の言語構成に対応するVisitメソッドは&lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="b099cc857f551b44dc082f6a80406e3138ee957d" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素の単純なビジター。</target>
        </trans-unit>
        <trans-unit id="e7d6a229b08e1e44605fe070804b3ddce33409b5" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_7&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適切なデフォルトの動作を持つプログラム要素の単純なビジター。 &lt;code&gt;RELEASE_7&lt;/code&gt; および以前の言語構成に対応するVisitメソッドは&lt;a href=&quot;simpleelementvisitor6#defaultAction-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="ba2e1f45a9ceb72bc32ea4ba300c907f91dfbe8f" translate="yes" xml:space="preserve">
          <source>A simple visitor of program elements with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_8&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つプログラム要素の単純な訪問者。 &lt;code&gt;RELEASE_8&lt;/code&gt; 以前の言語コンストラクトに対応するvisitメソッドは&lt;a href=&quot;simpleelementvisitor6#defaultAction(javax.lang.model.element.Element,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="db2dc64e156431074ba648505cc3bc9c174b052f" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for source version &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7665a45ab25fc01621d095aa13f15c2aedac3b6" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for source version &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;. Visit methods corresponding to &lt;code&gt;RELEASE_14&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61dae6fd4f79b4cbf671c3ce7384d3c2ba0568f1" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ソースバージョン&lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; に適した&lt;/a&gt;デフォルトの動作を持つタイプの単純なビジター。</target>
        </trans-unit>
        <trans-unit id="c8658f42d024df63620147ca3787df083e222cbe" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;. Visit methods corresponding to &lt;code&gt;RELEASE_9&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">ソースバージョン&lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; に適した&lt;/a&gt;デフォルトの動作を持つタイプの単純なビジター。 &lt;code&gt;RELEASE_9&lt;/code&gt; 以前の言語構造に対応するvisitメソッドは&lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="311dbf4c5221893edfc8b49b7bcd1f7401550833" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce3e96e21af8bd3acc4ed588598dae7d2d1d0d1" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;. Visit methods corresponding to &lt;code&gt;RELEASE_9&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6b288f070274c1f886b7e33f653c4e09d1dc67" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つタイプの単純なビジター。</target>
        </trans-unit>
        <trans-unit id="e98f8f710d31e351f7f5c8fa436c101c4d6e42be" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_6&lt;/code&gt; language constructs call &lt;a href=&quot;#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters. For constructs introduced in &lt;code&gt;RELEASE_7&lt;/code&gt; and later, &lt;code&gt;
 visitUnknown&lt;/code&gt; is called instead.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つタイプの単純なビジター。 &lt;code&gt;RELEASE_6&lt;/code&gt; 言語構造に対応するvisitメソッドは&lt;a href=&quot;#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。 &lt;code&gt;RELEASE_7&lt;/code&gt; 以降で導入された構造の場合、代わりに &lt;code&gt; visitUnknown&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="14f78ab027f770fa626cdd8b7cc1dd584ae81dc9" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_6&lt;/code&gt; language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters. For constructs introduced in &lt;code&gt;RELEASE_7&lt;/code&gt; and later, &lt;code&gt;visitUnknown&lt;/code&gt; is called instead.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つタイプの単純なビジター。 &lt;code&gt;RELEASE_6&lt;/code&gt; 言語構成に対応するVisitメソッドは&lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。 &lt;code&gt;RELEASE_7&lt;/code&gt; 以降で導入された構成 &lt;code&gt;visitUnknown&lt;/code&gt; 場合、代わりにvisitUnknownが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="12025ce7a60019adcb9c20a5090ddc6e37570ea8" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つタイプの単純なビジター。</target>
        </trans-unit>
        <trans-unit id="06a2ce26685a08cf8055455f7890dceec17389a8" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_7&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つタイプの単純なビジター。 &lt;code&gt;RELEASE_7&lt;/code&gt; 以前の言語コンストラクトに対応するvisitメソッドは&lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="849853eaa5c273ebf168ac87e3f6a56a25686a1c" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_7&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つタイプの単純なビジター。 &lt;code&gt;RELEASE_7&lt;/code&gt; および以前の言語構成に対応するVisitメソッドは&lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="25f34fa41739f34143ba43abe69ed1d5a4dc9fcb" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_8&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つタイプの単純なビジター。 &lt;code&gt;RELEASE_8&lt;/code&gt; および以前の言語構成に対応するVisitメソッドは&lt;a href=&quot;simpletypevisitor6#defaultAction-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="6b0b83cf0b3f755e0c2bdc71df4f14be5483533a" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つタイプの単純なビジター。</target>
        </trans-unit>
        <trans-unit id="d5c544960d687501d74bdd5e629c9c68f84e3e8a" translate="yes" xml:space="preserve">
          <source>A simple visitor of types with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version. Visit methods corresponding to &lt;code&gt;RELEASE_8&lt;/code&gt; and earlier language constructs call &lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt;&lt;code&gt;defaultAction&lt;/code&gt;&lt;/a&gt;, passing their arguments to &lt;code&gt;defaultAction&lt;/code&gt;'s corresponding parameters.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つタイプの単純なビジター。 &lt;code&gt;RELEASE_8&lt;/code&gt; 以前の言語コンストラクトに対応するvisitメソッドは&lt;a href=&quot;simpletypevisitor6#defaultAction(javax.lang.model.type.TypeMirror,P)&quot;&gt; &lt;code&gt;defaultAction&lt;/code&gt; &lt;/a&gt;を呼び出し、それらの引数を &lt;code&gt;defaultAction&lt;/code&gt; の対応するパラメーターに渡します。</target>
        </trans-unit>
        <trans-unit id="eb99826c504dae90d446de297127f2014189c3d5" translate="yes" xml:space="preserve">
          <source>A simplified example of how this method might be used in a listener:</source>
          <target state="translated">このメソッドがリスナーでどのように使用されるかの簡単な例です。</target>
        </trans-unit>
        <trans-unit id="27f519c264f7975e082fbd89a92d6831c2d15d4b" translate="yes" xml:space="preserve">
          <source>A single &lt;code&gt;int&lt;/code&gt; pixel representation is valid for all objects of this class since it is always possible to represent pixel values used with this class in a single &lt;code&gt;int&lt;/code&gt;. Therefore, methods that use this representation do not throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; due to an invalid pixel value.</source>
          <target state="translated">このクラスで使用されるピクセル値を単一の &lt;code&gt;int&lt;/code&gt; で表すことが常に可能であるため、単一の &lt;code&gt;int&lt;/code&gt; ピクセル表現はこのクラスのすべてのオブジェクトに有効です。したがって、この表現を使用するメソッドは、無効なピクセル値が原因で &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローしません。</target>
        </trans-unit>
        <trans-unit id="8dea3bc059af1940a58646316042a1585ba6e27d" translate="yes" xml:space="preserve">
          <source>A single SubmissionPublisher may be shared among multiple sources. Actions in a source thread prior to publishing an item or issuing a signal &lt;a href=&quot;package-summary#MemoryVisibility&quot;&gt; &lt;i&gt;happen-before&lt;/i&gt;&lt;/a&gt; actions subsequent to the corresponding access by each subscriber. But reported estimates of lag and demand are designed for use in monitoring, not for synchronization control, and may reflect stale or inaccurate views of progress.</source>
          <target state="translated">単一のSubmissionPublisherを複数のソース間で共有できます。アイテムを公開する前、またはシグナルを発行する前のソーススレッドでのアクションは、各サブスクライバーによる対応するアクセスに続くアクションの&lt;a href=&quot;package-summary#MemoryVisibility&quot;&gt;&lt;i&gt;前に発生し&lt;/i&gt;&lt;/a&gt;ます。ただし、報告されたラグと需要の見積もりは、同期制御ではなく監視で使用するように設計されており、進捗状況の古いまたは不正確なビューを反映している可能性があります。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="27ff022f3fd1a6d7569af1ad3bd234c09b43c80a" translate="yes" xml:space="preserve">
          <source>A single character access key to give access to the form control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae1810794423c6849fc74878d0eec623a0e4b9a" translate="yes" xml:space="preserve">
          <source>A single character access key to give access to the form control. See the accesskey attribute definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cda915d5b8ed6e97732e93b873a1aae2252327" translate="yes" xml:space="preserve">
          <source>A single input source for an XML entity.</source>
          <target state="translated">XMLエンティティのための単一の入力ソース。</target>
        </trans-unit>
        <trans-unit id="eca9f0ce09e9d0b271156fb1f94d95b2015e0045" translate="yes" xml:space="preserve">
          <source>A single int pixel representation is valid for all objects of this class, since it is always possible to represent pixel values used with this class in a single int. Therefore, methods which use this representation will not throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; due to an invalid pixel value.</source>
          <target state="translated">このクラスで使用されるピクセル値を単一のintで表すことは常に可能であるため、単一のintピクセル表現はこのクラスのすべてのオブジェクトに有効です。したがって、この表現を使用するメソッドは、無効なピクセル値が原因で &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローしません。</target>
        </trans-unit>
        <trans-unit id="680031280f170e37befabd82b15dfb57834e2df4" translate="yes" xml:space="preserve">
          <source>A single line input field that lets the user select a number or an object value from an ordered sequence.</source>
          <target state="translated">ユーザーが順序付けられたシーケンスから数値やオブジェクトの値を選択するための1行入力フィールド。</target>
        </trans-unit>
        <trans-unit id="faf61db4003f7e8791a833e8ec2047f6b731952d" translate="yes" xml:space="preserve">
          <source>A single line input field that lets the user select a number or an object value from an ordered sequence. Spinners typically provide a pair of tiny arrow buttons for stepping through the elements of the sequence. The keyboard up/down arrow keys also cycle through the elements. The user may also be allowed to type a (legal) value directly into the spinner. Although combo boxes provide similar functionality, spinners are sometimes preferred because they don't require a drop down list that can obscure important data.</source>
          <target state="translated">ユーザーが順序付けられたシーケンスから数値やオブジェクトの値を選択できるようにする1行の入力フィールド。スピナーには通常、シーケンスの要素をステップするための一対の小さな矢印ボタンがあります。キーボードの上下矢印キーでも要素を循環させることができます。ユーザーは、スピナーに直接(合法的な)値を入力することもできます。コンボボックスも同様の機能を提供しますが、重要なデータを隠すことができるドロップダウンリストを必要としないため、スピナーが好まれることもあります。</target>
        </trans-unit>
        <trans-unit id="16a31a5d1604a416d595ff17f4a7f21267ce2012" translate="yes" xml:space="preserve">
          <source>A single strikethrough.</source>
          <target state="translated">ストライクスルー一本。</target>
        </trans-unit>
        <trans-unit id="37f2833a23b911df059b18a6bb18e4f13e04daa4" translate="yes" xml:space="preserve">
          <source>A single switch point may be used to control any number of method handles. (Indirectly, therefore, it can control any number of call sites.) This is done by using the single switch point as a factory for combining any number of guarded method handle pairs into guarded delegators.</source>
          <target state="translated">1つのスイッチポイントを使用して、任意の数のメソッドハンドルを制御することができます(したがって、間接的に、それは任意の数のコールサイトを制御することができます)。これは、単一のスイッチポイントを、任意の数のガードされたメソッドハンドルのペアをガードされたデリゲータに結合するためのファクトリーとして使用することによって行われる。</target>
        </trans-unit>
        <trans-unit id="5fd8f82617aca923d0120e50ad83d10f1ea4dd35" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;module&lt;/code&gt; access (default access), which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; アクセス（デフォルトアクセス）を表すシングルビットマスク&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に寄与する可能性があります。</target>
        </trans-unit>
        <trans-unit id="23f0d6af86ce12d16fc99dd073d73e389160aa51" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;module&lt;/code&gt; access (default access), which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value is &lt;code&gt;0x10&lt;/code&gt;, which does not correspond meaningfully to any particular &lt;a href=&quot;../reflect/modifier&quot;&gt;modifier bit&lt;/a&gt;. In conjunction with the &lt;code&gt;PUBLIC&lt;/code&gt; modifier bit, a &lt;code&gt;Lookup&lt;/code&gt; with this lookup mode can access all public types in the module of the lookup class and public types in packages exported by other modules to the module of the lookup class.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; アクセス（デフォルトアクセス）を表すシングルビットマスク&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に寄与する可能性があります。値は &lt;code&gt;0x10&lt;/code&gt; であり、特定の&lt;a href=&quot;../reflect/modifier&quot;&gt;修飾子ビットに&lt;/a&gt;意味のある対応はありません。一緒に &lt;code&gt;PUBLIC&lt;/code&gt; 修飾子ビット、 &lt;code&gt;Lookup&lt;/code&gt; この検索モードでは、ルックアップクラスのモジュールに他のモジュールによってエクスポートされたパッケージ内のルックアップクラスとパブリック型のモジュール内のすべてのパブリック型にアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="61ce969f29fa23f45e9da2d879d776b501ee1b63" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;module&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7898fdd9a5d4a984aeeba70257ada4e4cd4d9e29" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;module&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value is &lt;code&gt;0x10&lt;/code&gt;, which does not correspond meaningfully to any particular &lt;a href=&quot;../reflect/modifier&quot;&gt;modifier bit&lt;/a&gt;. In conjunction with the &lt;code&gt;PUBLIC&lt;/code&gt; modifier bit, a &lt;code&gt;Lookup&lt;/code&gt; with this lookup mode can access all public types in the module of the lookup class and public types in packages exported by other modules to the module of the lookup class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f40d8597fa0b7098c4a4924b114897ae5217614" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;package&lt;/code&gt; access (default access), which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;package&lt;/code&gt; アクセス（デフォルトアクセス）を表すシングルビットマスク&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に寄与する可能性があります。</target>
        </trans-unit>
        <trans-unit id="96b76990ea7c53c5cde9f73d37a83315e3583738" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;package&lt;/code&gt; access (default access), which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value is &lt;code&gt;0x08&lt;/code&gt;, which does not correspond meaningfully to any particular &lt;a href=&quot;../reflect/modifier&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;package&lt;/code&gt; アクセス（デフォルトアクセス）を表すシングルビットマスク&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に寄与する可能性があります。値は &lt;code&gt;0x08&lt;/code&gt; であり、特定の&lt;a href=&quot;../reflect/modifier&quot;&gt;修飾子ビットに&lt;/a&gt;意味のある対応はありません。</target>
        </trans-unit>
        <trans-unit id="d7c2fd6b3301b8d285d0ce1608b58da62b7dae7d" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;package&lt;/code&gt; access (default access), which may contribute to the result of &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value is &lt;code&gt;0x08&lt;/code&gt;, which does not correspond meaningfully to any particular &lt;a href=&quot;../reflect/modifier&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に寄与する可能性がある &lt;code&gt;package&lt;/code&gt; アクセス（デフォルトアクセス）を表す単一ビットマスク。値は &lt;code&gt;0x08&lt;/code&gt; であり、特定の&lt;a href=&quot;../reflect/modifier&quot;&gt;修飾ビットに&lt;/a&gt;意味的に対応していません。</target>
        </trans-unit>
        <trans-unit id="1d60ef699bf7531de21f69b855312c3df75a11cb" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;private&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; アクセスを表すシングルビットマスク&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に寄与する可能性があります。</target>
        </trans-unit>
        <trans-unit id="c730e8d4a73b677a27e5243b54ddcc6d565955f0" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;private&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x02&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;private&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PRIVATE&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; アクセスを表すシングルビットマスク&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に寄与する可能性があります。値 &lt;code&gt;0x02&lt;/code&gt; は、たまたま &lt;code&gt;private&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PRIVATE&quot;&gt;修飾子ビットの&lt;/a&gt;値と同じです。</target>
        </trans-unit>
        <trans-unit id="aab2c145c9e99fcde58657d8b8993565ce707011" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;private&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x02&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;private&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PRIVATE&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に影響する可能性がある &lt;code&gt;private&lt;/code&gt; アクセスを表す単一ビットマスク。値 &lt;code&gt;0x02&lt;/code&gt; は、たまたま &lt;code&gt;private&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PRIVATE&quot;&gt;修飾子ビットの&lt;/a&gt;値と同じです。</target>
        </trans-unit>
        <trans-unit id="6d5604f21cc5b5fae8d0c14aab06963a959fcaf6" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;protected&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;protected&lt;/code&gt; アクセスを表すシングルビットマスク&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に寄与する可能性があります。</target>
        </trans-unit>
        <trans-unit id="4f70c8fe1c028c0a88efaad9c798c715b34ddf85" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;protected&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x04&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;protected&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PROTECTED&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;protected&lt;/code&gt; アクセスを表すシングルビットマスク&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に寄与する可能性があります。値 &lt;code&gt;0x04&lt;/code&gt; は、 &lt;code&gt;protected&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PROTECTED&quot;&gt;修飾子ビットの&lt;/a&gt;値と同じです。</target>
        </trans-unit>
        <trans-unit id="75861a8addccd707397aa313351031da0f3eeb06" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;protected&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x04&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;protected&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PROTECTED&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;protected&lt;/code&gt; アクセスを表す単一ビットのマスク。これは、&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に影響する場合があります。値 &lt;code&gt;0x04&lt;/code&gt; は、 &lt;code&gt;protected&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PROTECTED&quot;&gt;修飾ビットの&lt;/a&gt;値と同じです。</target>
        </trans-unit>
        <trans-unit id="898bcf9e6c18648d81924d6a9ae3a6e8c68b1c26" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;public&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; アクセスを表すシングルビットマスク&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に寄与する可能性があります。</target>
        </trans-unit>
        <trans-unit id="90e88dda8f59625b9c9e079ffc52a9bab4d3f2d7" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;public&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x01&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;public&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PUBLIC&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; アクセスを表すシングルビットマスク&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に寄与する可能性があります。値 &lt;code&gt;0x01&lt;/code&gt; は、たまたま &lt;code&gt;public&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PUBLIC&quot;&gt;修飾子ビットの&lt;/a&gt;値と同じです。</target>
        </trans-unit>
        <trans-unit id="33a784f92c517ec5da50f4e97141428b4852cfe0" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;public&lt;/code&gt; access, which may contribute to the result of &lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value, &lt;code&gt;0x01&lt;/code&gt;, happens to be the same as the value of the &lt;code&gt;public&lt;/code&gt;&lt;a href=&quot;../reflect/modifier#PUBLIC&quot;&gt;modifier bit&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; アクセスを表す単一ビットマスク。これは、&lt;a href=&quot;methodhandles.lookup#lookupModes--&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に影響する可能性があります。値 &lt;code&gt;0x01&lt;/code&gt; は、たまたま &lt;code&gt;public&lt;/code&gt; &lt;a href=&quot;../reflect/modifier#PUBLIC&quot;&gt;修飾子ビットの&lt;/a&gt;値と同じです。</target>
        </trans-unit>
        <trans-unit id="23196278b94fe5dcd92d5653a9fea883c5c2deca" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;unconditional&lt;/code&gt; access which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;の結果に寄与する可能性のある &lt;code&gt;unconditional&lt;/code&gt; アクセスを表すシングルビットマスク。</target>
        </trans-unit>
        <trans-unit id="a5890ecf3f460a211994e215884e29d1609f8197" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;unconditional&lt;/code&gt; access which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value is &lt;code&gt;0x20&lt;/code&gt;, which does not correspond meaningfully to any particular &lt;a href=&quot;../reflect/modifier&quot;&gt;modifier bit&lt;/a&gt;. A &lt;code&gt;Lookup&lt;/code&gt; with this lookup mode assumes &lt;a href=&quot;../module#canRead(java.lang.Module)&quot;&gt;readability&lt;/a&gt;. In conjunction with the &lt;code&gt;PUBLIC&lt;/code&gt; modifier bit, a &lt;code&gt;Lookup&lt;/code&gt; with this lookup mode can access all public members of public types of all modules where the type is in a package that is &lt;a href=&quot;../module#isExported(java.lang.String)&quot;&gt;&lt;code&gt;exported unconditionally&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A single-bit mask representing &lt;code&gt;unconditional&lt;/code&gt; access which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt; &lt;code&gt;lookupModes&lt;/code&gt; &lt;/a&gt;. The value is &lt;code&gt;0x20&lt;/code&gt; , which does not correspond meaningfully to any particular &lt;a href=&quot;../reflect/modifier&quot;&gt;modifier bit&lt;/a&gt;. A &lt;code&gt;Lookup&lt;/code&gt; with this lookup mode assumes &lt;a href=&quot;../module#canRead(java.lang.Module)&quot;&gt;readability&lt;/a&gt;. In conjunction with the &lt;code&gt;PUBLIC&lt;/code&gt; modifier bit, a &lt;code&gt;Lookup&lt;/code&gt; with this lookup mode can access all public members of public types of all modules where the type is in a package that is &lt;a href=&quot;../module#isExported(java.lang.String)&quot;&gt; &lt;code&gt;exported unconditionally&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="df372d9b0b2b5d791daede695ab02994d0519b59" translate="yes" xml:space="preserve">
          <source>A single-bit mask representing &lt;code&gt;unconditional&lt;/code&gt; access which may contribute to the result of &lt;a href=&quot;#lookupModes()&quot;&gt;&lt;code&gt;lookupModes&lt;/code&gt;&lt;/a&gt;. The value is &lt;code&gt;0x20&lt;/code&gt;, which does not correspond meaningfully to any particular &lt;a href=&quot;../reflect/modifier&quot;&gt;modifier bit&lt;/a&gt;. A &lt;code&gt;Lookup&lt;/code&gt; with this lookup mode assumes &lt;a href=&quot;../module#canRead(java.lang.Module)&quot;&gt;readability&lt;/a&gt;. This lookup mode can access all public members of public types of all modules when the type is in a package that is &lt;a href=&quot;../module#isExported(java.lang.String)&quot;&gt;&lt;code&gt;exported unconditionally&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed214545845c4b26dd59fcb0bad818698aade4f2" translate="yes" xml:space="preserve">
          <source>A single-element array, initially containing &lt;code&gt;ImageInputStream.class&lt;/code&gt;, to be returned from &lt;code&gt;getInputTypes&lt;/code&gt;.</source>
          <target state="translated">最初は &lt;code&gt;ImageInputStream.class&lt;/code&gt; を含み、 &lt;code&gt;getInputTypes&lt;/code&gt; から返される単一要素の配列。</target>
        </trans-unit>
        <trans-unit id="f0e479a9e928d59e951c78a85ad7039004c2e049" translate="yes" xml:space="preserve">
          <source>A single-element array, initially containing &lt;code&gt;ImageOutputStream.class&lt;/code&gt;, to be returned from &lt;code&gt;getOutputTypes&lt;/code&gt;.</source>
          <target state="translated">最初は &lt;code&gt;ImageOutputStream.class&lt;/code&gt; を含み、 &lt;code&gt;getOutputTypes&lt;/code&gt; から返される単一要素の配列。</target>
        </trans-unit>
        <trans-unit id="c625757b04b47e99f17d9514d26323d3a1641c0b" translate="yes" xml:space="preserve">
          <source>A single-method interface is an interface which declares a uniquely named method. When determining the uniquely named method of a single-method interface, the public &lt;code&gt;Object&lt;/code&gt; methods (&lt;code&gt;toString&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt;) are disregarded as are any default (non-abstract) methods. For example, &lt;a href=&quot;../../util/comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; is a single-method interface, even though it re-declares the &lt;code&gt;Object.equals&lt;/code&gt; method and also declares default methods, such as &lt;code&gt;Comparator.reverse&lt;/code&gt;.</source>
          <target state="translated">A single-method interface is an interface which declares a uniquely named method. When determining the uniquely named method of a single-method interface, the public &lt;code&gt;Object&lt;/code&gt; methods ( &lt;code&gt;toString&lt;/code&gt; , &lt;code&gt;equals&lt;/code&gt; , &lt;code&gt;hashCode&lt;/code&gt; ) are disregarded as are any default (non-abstract) methods. For example, &lt;a href=&quot;../../util/comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt; is a single-method interface, even though it re-declares the &lt;code&gt;Object.equals&lt;/code&gt; method and also declares default methods, such as &lt;code&gt;Comparator.reverse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aefe0d2395a63e490922c441c227d14b1061d43a" translate="yes" xml:space="preserve">
          <source>A single-method interface is an interface which declares a uniquely named method. When determining the uniquely named method of a single-method interface, the public &lt;code&gt;Object&lt;/code&gt; methods (&lt;code&gt;toString&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt;) are disregarded. For example, &lt;a href=&quot;../../util/comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; is a single-method interface, even though it re-declares the &lt;code&gt;Object.equals&lt;/code&gt; method.</source>
          <target state="translated">単一メソッドインターフェイスは、一意に名前が付けられたメソッドを宣言するインターフェイスです。単一メソッドインターフェイスの一意に名前が付けられたメソッドを決定するとき、パブリック &lt;code&gt;Object&lt;/code&gt; メソッド（ &lt;code&gt;toString&lt;/code&gt; 、 &lt;code&gt;equals&lt;/code&gt; 、 &lt;code&gt;hashCode&lt;/code&gt; ）は無視されます。たとえば、&lt;a href=&quot;../../util/comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;Object.equals&lt;/code&gt; メソッドを再宣言していますが、単一メソッドのインターフェースです。</target>
        </trans-unit>
        <trans-unit id="f9756371d6371d1875d5c52f3bf36b1d5637b9b5" translate="yes" xml:space="preserve">
          <source>A size .</source>
          <target state="translated">Aサイズ。</target>
        </trans-unit>
        <trans-unit id="39edc0c4306908356478bc36b02ee9a168a76abf" translate="yes" xml:space="preserve">
          <source>A size.</source>
          <target state="translated">Aサイズです。</target>
        </trans-unit>
        <trans-unit id="f4e200d70880492b9d55231ae7bcd427acc35445" translate="yes" xml:space="preserve">
          <source>A skeletal handler that consumes notifications and continues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34eb976ae54cd909a7fcad83adeb73ef97f212b5" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for source version &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1c3b389a92427821da01aef166f1deac49d539" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A skeletal visitor for annotation values with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a0c890be9cf7f582d0d14bcf76660cf4b59022fd" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4099f3970266bb2672ded3b9721ca4be35f299" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;RELEASE_6&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;RELEASE_6&lt;/code&gt; &lt;/a&gt;ソースバージョンに適切なデフォルトの動作を持つ注釈値の骨格ビジター。</target>
        </trans-unit>
        <trans-unit id="fe7dbc5fcfbb5518a6b2081de359d0acd5e86643" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt;&lt;code&gt;RELEASE_7&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_7&quot;&gt; &lt;code&gt;RELEASE_7&lt;/code&gt; &lt;/a&gt;ソースバージョンに適したデフォルトの動作を持つ注釈値の骨格ビジター。</target>
        </trans-unit>
        <trans-unit id="a2017f2e2ac05aab0d403430f762896858b4c682" translate="yes" xml:space="preserve">
          <source>A skeletal visitor for annotation values with default behavior appropriate for the &lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt; source version.</source>
          <target state="translated">&lt;a href=&quot;../sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;ソースバージョンに適切なデフォルトの動作を持つ注釈値の骨格ビジター。</target>
        </trans-unit>
        <trans-unit id="2bcae0dd4f1fd4d3ce538903968b298c21aea5c5" translate="yes" xml:space="preserve">
          <source>A skeletal visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt;&lt;code&gt;RELEASE_11&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A skeletal visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt; &lt;code&gt;RELEASE_9&lt;/code&gt; &lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_11&quot;&gt; &lt;code&gt;RELEASE_11&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="253b0042b2606f01d3c9e27db336b705c72fa68a" translate="yes" xml:space="preserve">
          <source>A skeletal visitor of program elements with default behavior appropriate for source versions &lt;a href=&quot;../sourceversion#RELEASE_9&quot;&gt;&lt;code&gt;RELEASE_9&lt;/code&gt;&lt;/a&gt; through &lt;a href=&quot;../sourceversion#RELEASE_14&quot;&gt;&lt;code&gt;RELEASE_14&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
