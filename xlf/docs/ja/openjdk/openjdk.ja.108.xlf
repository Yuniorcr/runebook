<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="438b4e83ba3d5a96e855b8b912ebb9bba25ed63b" translate="yes" xml:space="preserve">
          <source>NodeChangeEvent.getChild()</source>
          <target state="translated">NodeChangeEvent.getChild()</target>
        </trans-unit>
        <trans-unit id="3e2ea238c6795a4b9a54d042a147af915f31888c" translate="yes" xml:space="preserve">
          <source>NodeChangeEvent.getParent()</source>
          <target state="translated">NodeChangeEvent.getParent()</target>
        </trans-unit>
        <trans-unit id="e162c705d90b58de729272201cf211706490c5ae" translate="yes" xml:space="preserve">
          <source>NodeChangeListener</source>
          <target state="translated">NodeChangeListener</target>
        </trans-unit>
        <trans-unit id="48aa86ccee944f5c610532277f2f7412ab089010" translate="yes" xml:space="preserve">
          <source>NodeChangeListener.childAdded()</source>
          <target state="translated">NodeChangeListener.childAdded()</target>
        </trans-unit>
        <trans-unit id="855d866b1076c758b296e8d9091cc98e214d0e30" translate="yes" xml:space="preserve">
          <source>NodeChangeListener.childRemoved()</source>
          <target state="translated">NodeChangeListener.childRemoved()</target>
        </trans-unit>
        <trans-unit id="6e41c8c0e7ca7b035e09b9c17dc505854e91d557" translate="yes" xml:space="preserve">
          <source>NodeDimensions</source>
          <target state="translated">NodeDimensions</target>
        </trans-unit>
        <trans-unit id="fa2c4125851f6d931bf8fdcfcc77370e04e78aeb" translate="yes" xml:space="preserve">
          <source>NodeDimensionsHandler</source>
          <target state="translated">NodeDimensionsHandler</target>
        </trans-unit>
        <trans-unit id="6d1452836a5e358d27de613d82985d8f206e4345" translate="yes" xml:space="preserve">
          <source>NodeFilter</source>
          <target state="translated">NodeFilter</target>
        </trans-unit>
        <trans-unit id="749f705e68c34826a7cc3dffa5cbbe3e73f820de" translate="yes" xml:space="preserve">
          <source>NodeIterator</source>
          <target state="translated">NodeIterator</target>
        </trans-unit>
        <trans-unit id="05a2a8746fe10231011b4d6850be527a41c1c732" translate="yes" xml:space="preserve">
          <source>NodeList</source>
          <target state="translated">NodeList</target>
        </trans-unit>
        <trans-unit id="337f57c0a2bef0738e912bbca11a9ae7ced157be" translate="yes" xml:space="preserve">
          <source>NodeSetData</source>
          <target state="translated">NodeSetData</target>
        </trans-unit>
        <trans-unit id="e8dd6e62135b63d4af2d51e03f5f8674c31c3a6d" translate="yes" xml:space="preserve">
          <source>Nodes in a preference tree are named in a similar fashion to directories in a hierarchical file system. Every node in a preference tree has a</source>
          <target state="translated">プリファレンスツリーのノードは、階層ファイルシステムのディレクトリに似た方法で名前が付けられます。プリファレンスツリーの各ノードには</target>
        </trans-unit>
        <trans-unit id="f22cc410bf8ce5d75d9f970cdbdbbd68965aa503" translate="yes" xml:space="preserve">
          <source>Non-ISO calendar systems must implement this field as per the definition above. It is just a simple zero-based count of elapsed months from the start of proleptic-year 0. All calendar systems with a full proleptic-year definition will have a year zero. If the calendar system has a minimum year that excludes year zero, then one must be extrapolated in order for this method to be defined.</source>
          <target state="translated">非 ISO カレンダーシステムは、上記の定義に従ってこのフィールドを実装しなければならない。これは、プロレプティック年0の開始からの経過月数の単純なゼロベースのカウントである。完全なプロレプティック年の定義を持つすべてのカレンダシステムは、年ゼロを持つことになります。カレンダシステムがゼロ年を除く最小年を持つ場合、この方法を定義するためには、1つは外挿されなければなりません。</target>
        </trans-unit>
        <trans-unit id="949db60b8f8345e41f783b56c70357e2562a01b0" translate="yes" xml:space="preserve">
          <source>Non-ISO calendar systems should implement this field as follows. If the calendar system has only two eras, before and after a fixed date, then the proleptic-year value must be the same as the year-of-era value for the later era, and increasingly negative for the earlier era. If the calendar system has more than two eras, then the proleptic-year value may be defined with any appropriate value, although defining it to be the same as ISO may be the best option.</source>
          <target state="translated">ISO以外のカレンダシステムでは、このフィールドは次のように実装することが望ましい。カレンダシステムが固定日の前後の2つの時代しかない場合、proleptic-year値は、後の時代のyear-of-era値と同じでなければならず、前の時代では、ますます負の値となる。カレンダシステムが2つ以上の時代を持つ場合、 proleptic-year値は任意の適切な値で定義することができますが、 ISOと同じ値を定義することが最良の選択肢かもしれません。</target>
        </trans-unit>
        <trans-unit id="15106cce29b52f2a8f8dfbc68e05221dfdc4d00e" translate="yes" xml:space="preserve">
          <source>Non-ISO calendar systems should implement this field to define eras. The value of the era that was active on 1970-01-01 (ISO) must be assigned the value 1. Earlier eras must have sequentially smaller values. Later eras must have sequentially larger values,</source>
          <target state="translated">ISO以外のカレンダーシステムでは、このフィールドを実装して時代を定義しなければならない。1970-01-01 (ISO)で活動していた時代の値は、値1を割り当てなければならない。それ以前の時代の値は、順次小さい値を持つ必要があります。それ以降の時代は、順次大きな値を持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="399cafe8c7d182235eb09aa2d510cf2c91fd2eee" translate="yes" xml:space="preserve">
          <source>Non-ISO calendar systems should implement this field using the most recognized day-of-month values for users of the calendar system. Normally, this is a count of days from 1 to the length of the month.</source>
          <target state="translated">ISO以外のカレンダーシステムでは、カレンダーシステムのユーザーにとって最も認識されている月の日の値を使用して、このフィールドを実装する必要があります。通常、これは1から月の長さまでの日数のカウントである。</target>
        </trans-unit>
        <trans-unit id="9fa751a93e1bbb62975d7f740370f3551da34d53" translate="yes" xml:space="preserve">
          <source>Non-ISO calendar systems should implement this field using the most recognized day-of-year values for users of the calendar system. Normally, this is a count of days from 1 to the length of the year.</source>
          <target state="translated">ISO以外のカレンダーシステムでは、このフィールドは、カレンダーシステムのユーザーにとって最も認識されている年の日の値を使用して実装する必要があります。通常、これは1から1年の長さまでの日数のカウントである。</target>
        </trans-unit>
        <trans-unit id="6ced672a6030f1edd4e70f42e15ab7c0a7c4d751" translate="yes" xml:space="preserve">
          <source>Non-ISO calendar systems should implement this field using the most recognized month-of-year values for users of the calendar system. Normally, this is a count of months starting from 1.</source>
          <target state="translated">ISO以外のカレンダーシステムでは、このフィールドは、カレンダーシステムのユーザーにとって最も認識されている年の月の値を使用して実装されるべきである。通常、これは1から始まる月のカウントである。</target>
        </trans-unit>
        <trans-unit id="3a1850bd70a3c80d5d5bf7a5f8472a3564db8025" translate="yes" xml:space="preserve">
          <source>Non-ISO calendar systems should implement this field using the most recognized year-of-era value for users of the calendar system. Since most calendar systems have only two eras, the year-of-era numbering approach will typically be the same as that used by the ISO calendar system. The year-of-era value should typically always be positive, however this is not required.</source>
          <target state="translated">ISO以外のカレンダシステムでは、カレンダシステムのユーザーにとって最も認識されている年号の値を使用してこのフィールドを実装する必要があります。ほとんどのカレンダシステムには2つの時代しかないので、年号の番号付けは通常、ISOカレンダシステムで使用されているものと同じになります。年号の値は通常、常に正の値でなければなりませんが、これは必須ではありません。</target>
        </trans-unit>
        <trans-unit id="8f90a6758ea2e6415fe86c86a42e67e2c9b0a220" translate="yes" xml:space="preserve">
          <source>Non-baseline &lt;code&gt;ParallelGroup&lt;/code&gt;</source>
          <target state="translated">非ベースライン &lt;code&gt;ParallelGroup&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7dbb736214ec191af9372363107db53b0918a17" translate="yes" xml:space="preserve">
          <source>Non-default values for lifetime cannot always be honored by the underlying mechanism, thus applications should be prepared to call &lt;a href=&quot;gsscontext#getLifetime()&quot;&gt;&lt;code&gt;getLifetime&lt;/code&gt;&lt;/a&gt; on the returned context.</source>
          <target state="translated">ライフタイムのデフォルト以外の値は、基になるメカニズムによって常に尊重されるとは限らないため、アプリケーションは、返されたコンテキストで&lt;a href=&quot;gsscontext#getLifetime()&quot;&gt; &lt;code&gt;getLifetime&lt;/code&gt; &lt;/a&gt;を呼び出す準備をする必要があります。</target>
        </trans-unit>
        <trans-unit id="e30e6d90707c7f607eff59f63129bf7ade3d8f6f" translate="yes" xml:space="preserve">
          <source>Non-default values for lifetime cannot always be honored by the underlying mechanisms, thus applications should be prepared to call &lt;a href=&quot;gsscredential#getRemainingLifetime()&quot;&gt;&lt;code&gt;getRemainingLifetime&lt;/code&gt;&lt;/a&gt; on the returned credential.</source>
          <target state="translated">ライフタイムのデフォルト以外の値は、基盤となるメカニズムによって常に尊重されるとは限らないため、アプリケーションは、返された資格情報で&lt;a href=&quot;gsscredential#getRemainingLifetime()&quot;&gt; &lt;code&gt;getRemainingLifetime&lt;/code&gt; &lt;/a&gt;を呼び出す準備をする必要があります。</target>
        </trans-unit>
        <trans-unit id="3a5a3468bbd58941e7ec9acc7ba2bb862dfd8e94" translate="yes" xml:space="preserve">
          <source>Non-exclusively acquires the lock if it is available within the given time and the current thread has not been interrupted.</source>
          <target state="translated">与えられた時間内に利用可能で、現在のスレッドが中断されていない場合は、排他的にロックを取得しません。</target>
        </trans-unit>
        <trans-unit id="32dce6e773cd7f483be084db84d4b393cd29ae9a" translate="yes" xml:space="preserve">
          <source>Non-exclusively acquires the lock if it is available within the given time and the current thread has not been interrupted. Behavior under timeout and interruption matches that specified for method &lt;a href=&quot;lock#tryLock(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;Lock.tryLock(long,TimeUnit)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された時間内にロックが使用可能であり、現在のスレッドが中断されていない場合、非排他的にロックを取得します。タイムアウトおよび中断時の動作は、メソッド&lt;a href=&quot;lock#tryLock(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;Lock.tryLock(long,TimeUnit)&lt;/code&gt; &lt;/a&gt;指定されたものと一致します。</target>
        </trans-unit>
        <trans-unit id="5255fb9a432fe09f5f2a62f82310fa440eadd993" translate="yes" xml:space="preserve">
          <source>Non-exclusively acquires the lock if it is available within the given time and the current thread has not been interrupted. Behavior under timeout and interruption matches that specified for method &lt;a href=&quot;lock#tryLock-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;Lock.tryLock(long,TimeUnit)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された時間内にロックが使用可能であり、現在のスレッドが中断されていない場合、非排他的にロックを取得します。タイムアウトおよび中断時の動作は&lt;a href=&quot;lock#tryLock-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;Lock.tryLock(long,TimeUnit)&lt;/code&gt; &lt;/a&gt;メソッドに指定された動作と一致します。</target>
        </trans-unit>
        <trans-unit id="9271dd0ca3f131305e4de250a63fc130220d3016" translate="yes" xml:space="preserve">
          <source>Non-exclusively acquires the lock if it is immediately available.</source>
          <target state="translated">すぐに使用可能な場合は、ロックを非独占的に取得します。</target>
        </trans-unit>
        <trans-unit id="5b45244bae14c4e409cd9329b228dda406563526" translate="yes" xml:space="preserve">
          <source>Non-exclusively acquires the lock, blocking if necessary until available or the current thread is interrupted.</source>
          <target state="translated">ロックを非排他的に取得し、利用可能になるまで、または現在のスレッドが中断されるまで、必要に応じてブロックします。</target>
        </trans-unit>
        <trans-unit id="c663e11f7b04200f529d63849e9abd41e1bc1dd6" translate="yes" xml:space="preserve">
          <source>Non-exclusively acquires the lock, blocking if necessary until available or the current thread is interrupted. Behavior under interruption matches that specified for method &lt;a href=&quot;lock#lockInterruptibly()&quot;&gt;&lt;code&gt;Lock.lockInterruptibly()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">非排他的にロックを取得し、必要に応じて、使用可能になるか、現在のスレッドが中断されるまでブロックします。中断時の動作は、メソッド&lt;a href=&quot;lock#lockInterruptibly()&quot;&gt; &lt;code&gt;Lock.lockInterruptibly()&lt;/code&gt; に&lt;/a&gt;指定された動作と一致します。</target>
        </trans-unit>
        <trans-unit id="da8dd40ff4ffaeed888e99643a71f1a25ef34f00" translate="yes" xml:space="preserve">
          <source>Non-exclusively acquires the lock, blocking if necessary until available or the current thread is interrupted. Behavior under interruption matches that specified for method &lt;a href=&quot;lock#lockInterruptibly--&quot;&gt;&lt;code&gt;Lock.lockInterruptibly()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">非排他的にロックを取得し、必要に応じて、使用可能になるか現在のスレッドが中断されるまでブロックします。割り込み時の動作は、&lt;a href=&quot;lock#lockInterruptibly--&quot;&gt; &lt;code&gt;Lock.lockInterruptibly()&lt;/code&gt; &lt;/a&gt;メソッドに指定された動作と一致します。</target>
        </trans-unit>
        <trans-unit id="6edfabd899e51d161fc2a1dc923b17958bdbff88" translate="yes" xml:space="preserve">
          <source>Non-exclusively acquires the lock, blocking if necessary until available.</source>
          <target state="translated">ロックを排他的に取得し、利用可能になるまで必要に応じてブロックします。</target>
        </trans-unit>
        <trans-unit id="c6d7195469d628ce40cf2ce1335cdc397b62b0f3" translate="yes" xml:space="preserve">
          <source>Non-heap memory type.</source>
          <target state="translated">非ヒープメモリタイプ。</target>
        </trans-unit>
        <trans-unit id="c71ccfc6eb3d3450456d5bcab2b1d125aa2c1922" translate="yes" xml:space="preserve">
          <source>Non-interference</source>
          <target state="translated">Non-interference</target>
        </trans-unit>
        <trans-unit id="ce4b320c6d46f058245e7b992fd740fbf149dff1" translate="yes" xml:space="preserve">
          <source>Non-null referral information related to this referral.</source>
          <target state="translated">この紹介に関連した紹介情報は、非 null ではありません。</target>
        </trans-unit>
        <trans-unit id="d0ae80262821e68eb1e50306c183e3350f3e4d48" translate="yes" xml:space="preserve">
          <source>Non0Digit</source>
          <target state="translated">Non0Digit</target>
        </trans-unit>
        <trans-unit id="aea43c74a1129f095670cc50d3dc4376e1328a40" translate="yes" xml:space="preserve">
          <source>NonASCIIDigit</source>
          <target state="translated">NonASCIIDigit</target>
        </trans-unit>
        <trans-unit id="78b7213d6517f5ebedb25e0b1b14d65f7d5ca13c" translate="yes" xml:space="preserve">
          <source>NonAsciiDigit</source>
          <target state="translated">NonAsciiDigit</target>
        </trans-unit>
        <trans-unit id="39b74a1ceda20dd15f9f7827e3db15c5965e22fb" translate="yes" xml:space="preserve">
          <source>NonNumber</source>
          <target state="translated">NonNumber</target>
        </trans-unit>
        <trans-unit id="b955712476e3ef475a82b5848e487f258bd1f694" translate="yes" xml:space="preserve">
          <source>NonReadableChannelException</source>
          <target state="translated">NonReadableChannelException</target>
        </trans-unit>
        <trans-unit id="78f4e1ed8736d29ffa9debaf731e70b2410fc9e3" translate="yes" xml:space="preserve">
          <source>NonWritableChannelException</source>
          <target state="translated">NonWritableChannelException</target>
        </trans-unit>
        <trans-unit id="1179ca48470076675d205adcff73d6d61f15f34a" translate="yes" xml:space="preserve">
          <source>Noncharacter_Code_Point</source>
          <target state="translated">Noncharacter_Code_Point</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="5f0f3618800300f866ac08f67dde85709c3fcbec" translate="yes" xml:space="preserve">
          <source>None of the methods in this interface accept null as a valid value for a parameter that is a name or a name component. Likewise, methods that return a name or name component never return null.</source>
          <target state="translated">このインターフェイスのどのメソッドも、name または name コンポーネントであるパラメータの有効な値として null を受け付けません。同様に、name または name コンポーネントを返すメソッドは決して null を返しません。</target>
        </trans-unit>
        <trans-unit id="3cd9bb3129d031be8627a8209858c7018e119fd0" translate="yes" xml:space="preserve">
          <source>None of these values provide means to produce uncollated sheets within a document, i.e., where multiple copies of sheet</source>
          <target state="translated">これらの値のいずれも、文書内で着色されていないシートを生成する手段を提供しない。</target>
        </trans-unit>
        <trans-unit id="599d1437fb1d4b20f8fcb3f40ba8518b2fd089a3" translate="yes" xml:space="preserve">
          <source>NoninvertibleTransformException</source>
          <target state="translated">NoninvertibleTransformException</target>
        </trans-unit>
        <trans-unit id="8b4dcbb62bf2292984dac9a5abfb87194643aab1" translate="yes" xml:space="preserve">
          <source>Normal forward keyboard traversal</source>
          <target state="translated">通常の前方へのキーボード移動</target>
        </trans-unit>
        <trans-unit id="c900cf9580c43545a2e0ec64d0cf103b09a4d486" translate="yes" xml:space="preserve">
          <source>Normal integer division operates under the round to zero rounding mode (truncation). This operation instead acts under the round toward negative infinity (floor) rounding mode. The floor rounding mode gives different results from truncation when the exact result is negative.</source>
          <target state="translated">通常の整数除算は、ゼロへの丸めモード(切り捨て)で動作します。この操作は、代わりに、負の無限大への丸め(フロア)モードで動作します。フロアー丸めモードでは、正確な結果が負の場合、切り捨てとは異なる結果が得られます。</target>
        </trans-unit>
        <trans-unit id="4624b02f6df07f5a4e47c2aba9878f777b6506eb" translate="yes" xml:space="preserve">
          <source>Normal integer division operates under the round to zero rounding mode (truncation). This operation instead acts under the round toward negative infinity (floor) rounding mode. The floor rounding mode gives different results than truncation when the exact result is negative.</source>
          <target state="translated">通常の整数除算は、ゼロへの丸めモード(切り捨て)で動作します。この操作は、代わりに負の無限大への丸め(フロア)モードで動作します。フロアー丸めモードでは、正確な結果が負の場合、切り捨てとは異なる結果が得られます。</target>
        </trans-unit>
        <trans-unit id="847219ace38d1ce9cf1f24e5baca099e76de3801" translate="yes" xml:space="preserve">
          <source>Normal or intermediate quality on the printer.</source>
          <target state="translated">プリンタの品質が正常または中間。</target>
        </trans-unit>
        <trans-unit id="06c961dcd87569238afc936e14968b6aa46a9495" translate="yes" xml:space="preserve">
          <source>Normal resolution of names in context operations always follow links. Resolution of the link name itself may cause resolution to pass through other links. This gives rise to the possibility of a cycle of links whose resolution could not terminate normally. As a simple means to avoid such non-terminating resolutions, service providers may define limits on the number of links that may be involved in any single operation invoked by the caller.</source>
          <target state="translated">コンテキスト操作における名前の通常の解決は、常にリンクに従います。リンク名自体の解決は、他のリンクを通過する解決を引き起こす可能性があります。これにより、正常な解決が終了しないリンクのサイクルが発生する可能性がある。このような終端しない解決を避けるための簡単な手段として、サービスプロバイダは、呼び出し元によって呼び出された単一の操作に関与することができるリンクの数の制限を定義することができる。</target>
        </trans-unit>
        <trans-unit id="7f50f1dd677922b67e6b169c75849475263a658f" translate="yes" xml:space="preserve">
          <source>Normal reverse keyboard traversal</source>
          <target state="translated">通常のリバースキーボードトラバーサル</target>
        </trans-unit>
        <trans-unit id="dccd5e9ee5a710fa63bb6bcd6f53871336293bdd" translate="yes" xml:space="preserve">
          <source>Normal writes are not affected by this method, only writes performed using &lt;code&gt;ImageWriter.replacePixels&lt;/code&gt;. For such writes, the offset specified is within the output stream image whose pixels are being modified.</source>
          <target state="translated">通常の書き込みはこのメソッドの影響を受けず、 &lt;code&gt;ImageWriter.replacePixels&lt;/code&gt; を使用して実行された書き込みのみが影響を受けます。このような書き込みの場合、指定されたオフセットは、ピクセルが変更されている出力ストリームイメージ内にあります。</target>
        </trans-unit>
        <trans-unit id="b70bdaf7cbd091c5650ead3437906aee0b871da2" translate="yes" xml:space="preserve">
          <source>Normal, with one valid offset. For the vast majority of the year, the normal case applies, where there is a single valid offset for the local date-time.</source>
          <target state="translated">通常の場合、有効なオフセットが1つあります。年の大部分については、通常のケースが適用され、ローカルの日付時間に対して1つの有効なオフセットが存在します。</target>
        </trans-unit>
        <trans-unit id="b8c54e5e1e867a54e9d75697c450f4be835f910e" translate="yes" xml:space="preserve">
          <source>Normalization</source>
          <target state="translated">Normalization</target>
        </trans-unit>
        <trans-unit id="876a2974753a45d3672d5814829c5070d34b7add" translate="yes" xml:space="preserve">
          <source>Normalize a sequence of char values.</source>
          <target state="translated">一連の文字値を正規化します。</target>
        </trans-unit>
        <trans-unit id="39354cea243e3d60c7627d62b940772e4831701e" translate="yes" xml:space="preserve">
          <source>Normalize a sequence of char values. The sequence will be normalized according to the specified normalization from.</source>
          <target state="translated">char値のシーケンスを正規化します。シーケンスは、指定された正規化元に従って正規化されます。</target>
        </trans-unit>
        <trans-unit id="322db090188c52b6e9033f14e22dae4e836689ea" translate="yes" xml:space="preserve">
          <source>Normalize this instance to UTC.</source>
          <target state="translated">このインスタンスを UTC に正規化します。</target>
        </trans-unit>
        <trans-unit id="f12eb5e34450ab78e740fe496c803d12964c3c07" translate="yes" xml:space="preserve">
          <source>Normalized newline between</source>
          <target state="translated">の間の正規化された改行</target>
        </trans-unit>
        <trans-unit id="f4b126cd68b1eba9b799b0ffccc1898e8bfe924f" translate="yes" xml:space="preserve">
          <source>Normalizer</source>
          <target state="translated">Normalizer</target>
        </trans-unit>
        <trans-unit id="24c617d3fa319eaa96d9448d56a0d1dbda9aa6de" translate="yes" xml:space="preserve">
          <source>Normalizer.Form</source>
          <target state="translated">Normalizer.Form</target>
        </trans-unit>
        <trans-unit id="b058cf1c5fae3ad09c947c38d45802b1c36cbfc0" translate="yes" xml:space="preserve">
          <source>Normalizer.Form.valueOf()</source>
          <target state="translated">Normalizer.Form.valueOf()</target>
        </trans-unit>
        <trans-unit id="a996950aecd0be39e23f2392d76449f5ad39f478" translate="yes" xml:space="preserve">
          <source>Normalizer.Form.values()</source>
          <target state="translated">Normalizer.Form.values()</target>
        </trans-unit>
        <trans-unit id="89833c7f445e9357f723e0be088e2cdcfcd18191" translate="yes" xml:space="preserve">
          <source>Normalizer.isNormalized()</source>
          <target state="translated">Normalizer.isNormalized()</target>
        </trans-unit>
        <trans-unit id="746271d3b1527dc5b2e6d5bf1c63b603440bcff9" translate="yes" xml:space="preserve">
          <source>Normalizer.normalize()</source>
          <target state="translated">Normalizer.normalize()</target>
        </trans-unit>
        <trans-unit id="5790f14c06c658a24598260a8d8859e89afb87f7" translate="yes" xml:space="preserve">
          <source>Normalizes the tab runs.</source>
          <target state="translated">タブの実行を正規化します。</target>
        </trans-unit>
        <trans-unit id="051f44cd72eba6a60b0f297b412eb568fe15ac53" translate="yes" xml:space="preserve">
          <source>Normalizes the time-zone ID, returning a &lt;code&gt;ZoneOffset&lt;/code&gt; where possible.</source>
          <target state="translated">タイムゾーンIDを正規化し、可能な場合は &lt;code&gt;ZoneOffset&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="aaa40127b109d11c33fb8e31008f5513b295d742" translate="yes" xml:space="preserve">
          <source>Normalizes this URI's path.</source>
          <target state="translated">このURIのパスを正規化します。</target>
        </trans-unit>
        <trans-unit id="da1a4c1be29cd2be1d1e2e73be3569102efca42f" translate="yes" xml:space="preserve">
          <source>Normally PropertyChangeEvents are accompanied by the name and the old and new value of the changed property. If the new value is a primitive type (such as int or boolean) it must be wrapped as the corresponding java.lang.* Object type (such as Integer or Boolean).</source>
          <target state="translated">通常、PropertyChangeEventsには、変更されたプロパティの名前と新旧の値が添付されます。新しい値がプリミティブ型(intやbooleanなど)の場合は、対応するjava.lang.*オブジェクト型(IntegerやBooleanなど)としてラップしなければなりません。</target>
        </trans-unit>
        <trans-unit id="25f0bf8218804aa1dda263d9fcb3faacf188fca7" translate="yes" xml:space="preserve">
          <source>Normally PropertyEditors will be found using the PropertyEditorManager.</source>
          <target state="translated">通常、プロパティエディタはPropertyEditorManagerを使用して見つけます。</target>
        </trans-unit>
        <trans-unit id="9befea0be7f5f9c0c5a8746a177300a86819cd56" translate="yes" xml:space="preserve">
          <source>Normally PropertyEditors will be found using the PropertyEditorManager. However if for some reason you want to associate a particular PropertyEditor with a given property, then you can do it with this method.</source>
          <target state="translated">通常、プロパティエディタはPropertyEditorManagerを使って見つけます。しかし、何らかの理由で特定の PropertyEditor を指定したプロパティに関連付けたい場合は、このメソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="23c75f898e1b84ce94a236fbf6863d2bd52f87aa" translate="yes" xml:space="preserve">
          <source>Normally a write-lock is held on the Document while the children are being changed, which keeps the rendering and layout threads safe. The exception to this is when the view is initialized to represent an existing element (via this method), so it is synchronized to exclude preferenceChanged while we are initializing.</source>
          <target state="translated">通常、子要素が変更されている間は Document にライトロックがかかり、レンダリングやレイアウトスレッドの安全性が保たれます。これは、レンダリングやレイアウトのスレッドを安全に保つためです。例外は、ビューが既存の要素を表すために初期化されたときです (このメソッドを使って)。</target>
        </trans-unit>
        <trans-unit id="0ccb3dd246c85fddc131b9c82267e86ea1d2e647" translate="yes" xml:space="preserve">
          <source>Normally causes every selected item in the object to be selected if the object supports multiple selections.</source>
          <target state="translated">通常、オブジェクトが複数の選択をサポートしている場合は、オブジェクト内のすべての選択項目が選択されます。</target>
        </trans-unit>
        <trans-unit id="d4fa0fef1d1b7bc3427b3ff352b7dba94153bcb4" translate="yes" xml:space="preserve">
          <source>Normally causes every selected item in the object to be selected if the object supports multiple selections. This method makes no sense in a menu bar, and so does nothing.</source>
          <target state="translated">通常、オブジェクトが複数の選択をサポートしている場合、オブジェクト内のすべての選択された項目が選択されます。このメソッドはメニューバーでは意味がないので、何もしません。</target>
        </trans-unit>
        <trans-unit id="65e73dd302df1231b48586866930db8bd65928a3" translate="yes" xml:space="preserve">
          <source>Normally event sources are multicast.</source>
          <target state="translated">通常、イベントソースはマルチキャストです。</target>
        </trans-unit>
        <trans-unit id="861c4c8d1f0c7f599c5dc7d4dba828f0571beea7" translate="yes" xml:space="preserve">
          <source>Normally event sources are multicast. However there are some exceptions that are strictly unicast.</source>
          <target state="translated">通常、イベントソースはマルチキャストです。しかし、厳密にはユニキャストである例外もあります。</target>
        </trans-unit>
        <trans-unit id="4c8db891ad10d5eddce51f2cfe21e6e820e9096a" translate="yes" xml:space="preserve">
          <source>Normally streams should be used rather than readers or writers, for both the Source and Result, since readers and writers already have the encoding established to and from the internal Unicode format. However, there are times when it is useful to write to a character stream, such as when using a StringWriter in order to write to a String, or in the case of reading source XML from a StringReader.</source>
          <target state="translated">通常は、送信元と結果の両方について、リーダやライタではなくストリームを使用すべきです。しかし、文字列に書き込むためにStringWriterを使用する場合や、StringReaderからソースXMLを読み込む場合など、文字ストリームに書き込むことが有用な場合もあります。</target>
        </trans-unit>
        <trans-unit id="fdff3f207e07b1aa8666fa18588cb6cfc2672b39" translate="yes" xml:space="preserve">
          <source>Normally the &quot;%u&quot; unique field is set to 0. However, if the &lt;code&gt;FileHandler&lt;/code&gt; tries to open the filename and finds the file is currently in use by another process it will increment the unique number field and try again. This will be repeated until &lt;code&gt;FileHandler&lt;/code&gt; finds a file name that is not currently in use. If there is a conflict and no &quot;%u&quot; field has been specified, it will be added at the end of the filename after a dot. (This will be after any automatically added generation number.)</source>
          <target state="translated">通常、「％u」の一意のフィールドは0に設定され &lt;code&gt;FileHandler&lt;/code&gt; ただし、FileHandlerがファイル名を開こうとし、ファイルが現在別のプロセスで使用されている場合、一意の番号フィールドをインクリメントして再試行します。これは、 &lt;code&gt;FileHandler&lt;/code&gt; が現在使用されていないファイル名を見つけるまで繰り返されます。競合があり、「％u」フィールドが指定されていない場合は、ファイル名のドットの後の最後に追加されます。 （これは、自動的に追加された世代番号の後になります。）</target>
        </trans-unit>
        <trans-unit id="a17c5646187cc1d45a9908f275983da5ec0d0d41" translate="yes" xml:space="preserve">
          <source>Normally the values of &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; are non-negative integers. The constructors that allow you to create a dimension do not prevent you from setting a negative value for these properties. If the value of &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;height&lt;/code&gt; is negative, the behavior of some methods defined by other objects is undefined.</source>
          <target state="translated">通常、 &lt;code&gt;width&lt;/code&gt; と &lt;code&gt;height&lt;/code&gt; 値は負でない整数です。ディメンションの作成を可能にするコンストラクターは、これらのプロパティに負の値を設定することを妨げません。 &lt;code&gt;width&lt;/code&gt; または &lt;code&gt;height&lt;/code&gt; の値が負の場合、他のオブジェクトによって定義された一部のメソッドの動作は定義されていません。</target>
        </trans-unit>
        <trans-unit id="e875bba746855d9c053bda5e14102a3cf82de648" translate="yes" xml:space="preserve">
          <source>Normally this &lt;code&gt;Handler&lt;/code&gt; simply stores incoming &lt;code&gt;LogRecords&lt;/code&gt; into its memory buffer and discards earlier records. This buffering is very cheap and avoids formatting costs. On certain trigger conditions, the &lt;code&gt;MemoryHandler&lt;/code&gt; will push out its current buffer contents to a target &lt;code&gt;Handler&lt;/code&gt;, which will typically publish them to the outside world.</source>
          <target state="translated">通常、この &lt;code&gt;Handler&lt;/code&gt; は着信 &lt;code&gt;LogRecords&lt;/code&gt; をメモリーバッファーに格納し、以前のレコードを破棄します。このバッファリングは非常に安価であり、フォーマットのコストを回避します。特定のトリガー条件で、 &lt;code&gt;MemoryHandler&lt;/code&gt; は現在のバッファーの内容をターゲット &lt;code&gt;Handler&lt;/code&gt; にプッシュします。ターゲットHandlerは通常、それらを外部に公開します。</target>
        </trans-unit>
        <trans-unit id="81f3b15421b7e0e0e43d5c9f1cdac482d29d3f7b" translate="yes" xml:space="preserve">
          <source>Normally this method will not be called.</source>
          <target state="translated">通常、このメソッドは呼び出されません。</target>
        </trans-unit>
        <trans-unit id="28945295b05df426e85919f6c409c23a5287feca" translate="yes" xml:space="preserve">
          <source>Normally this method will not be called. If it is, it tries to determine the appropriate parent from the desktopIcon of the frame. Will remove the desktopIcon from its parent if it successfully adds the frame.</source>
          <target state="translated">通常、このメソッドは呼び出されません。呼び出された場合は、フレームのdesktopIconから適切な親を決定しようとします。フレームの追加に成功した場合は、その親から desktopIcon を削除します。</target>
        </trans-unit>
        <trans-unit id="5fe4257003e2ec58e3b59a9ad3c926854f100dd0" translate="yes" xml:space="preserve">
          <source>Normally when storing the size and position of entries, one would choose between storing the sizes or storing their positions instead. The two common operations that are needed during rendering are: &lt;code&gt;getIndex(position)&lt;/code&gt; and &lt;code&gt;setSize(index, size)&lt;/code&gt;. Whichever choice of internal format is made one of these operations is costly when the number of entries becomes large. If sizes are stored, finding the index of the entry that encloses a particular position is linear in the number of entries. If positions are stored instead, setting the size of an entry at a particular index requires updating the positions of the affected entries, which is also a linear calculation.</source>
          <target state="translated">通常、エントリのサイズと位置を保存するときは、代わりにサイズを保存するか、位置を保存するかを選択します。レンダリング中に必要な2つの一般的な操作は、 &lt;code&gt;getIndex(position)&lt;/code&gt; と &lt;code&gt;setSize(index, size)&lt;/code&gt; です。エントリの数が多くなると、これらの操作のいずれかで内部形式を選択するとコストがかかります。サイズが格納されている場合、特定の位置を囲むエントリのインデックスを見つけることは、エントリの数に比例します。代わりに位置が格納されている場合、特定のインデックスでエントリのサイズを設定するには、影響を受けるエントリの位置を更新する必要があります。これも線形計算です。</target>
        </trans-unit>
        <trans-unit id="46e6e17a66af9f3bb97f65b54fe592dd0a69da47" translate="yes" xml:space="preserve">
          <source>Normally, SAX drivers would push a new context at the beginning of each XML element. Then they perform a first pass over the attributes to process all namespace declarations, making &lt;em&gt;ContentHandler.startPrefixMapping()&lt;/em&gt; callbacks. Then a second pass is made, to determine the namespace-qualified names for all attributes and for the element name. Finally all the information for the &lt;em&gt;ContentHandler.startElement()&lt;/em&gt; callback is available, so it can then be made.</source>
          <target state="translated">通常、SAXドライバーは、各XML要素の先頭に新しいコンテキストをプッシュします。次に、属性の最初のパスを実行してすべての名前空間宣言を処理し、&lt;em&gt;ContentHandler.startPrefixMapping（）&lt;/em&gt;コールバックを作成します。次に、2番目のパスが作成され、すべての属性と要素名の名前空間修飾名が決定されます。最後に、&lt;em&gt;ContentHandler.startElement（）&lt;/em&gt;コールバックのすべての情報が利用できるので、それを作成できます。</target>
        </trans-unit>
        <trans-unit id="d6c838279f3a91ce7a951f75b279b8bda3e9c25e" translate="yes" xml:space="preserve">
          <source>Normally, a program should change a scroll bar's maximum value only by calling &lt;code&gt;setValues&lt;/code&gt;. The &lt;code&gt;setValues&lt;/code&gt; method simultaneously and synchronously sets the minimum, maximum, visible amount, and value properties of a scroll bar, so that they are mutually consistent.</source>
          <target state="translated">通常、プログラムは &lt;code&gt;setValues&lt;/code&gt; を呼び出すことによってのみスクロールバーの最大値を変更する必要があります。 &lt;code&gt;setValues&lt;/code&gt; の方法は、同時にかつ同期それらが互いに一致しているように、スクロールバーの最小値、最大値、可視量、および値プロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="f576faa6f2053ce331d641382136b51006de7f87" translate="yes" xml:space="preserve">
          <source>Normally, a program should change a scroll bar's minimum value only by calling &lt;code&gt;setValues&lt;/code&gt;. The &lt;code&gt;setValues&lt;/code&gt; method simultaneously and synchronously sets the minimum, maximum, visible amount, and value properties of a scroll bar, so that they are mutually consistent.</source>
          <target state="translated">通常、プログラムは &lt;code&gt;setValues&lt;/code&gt; を呼び出すことによってのみスクロールバーの最小値を変更する必要があります。 &lt;code&gt;setValues&lt;/code&gt; の方法は、同時にかつ同期それらが互いに一致しているように、スクロールバーの最小値、最大値、可視量、および値プロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="ef47f365dc358a1ff378d9826f7e6dc49fb0e0b0" translate="yes" xml:space="preserve">
          <source>Normally, a program should change a scroll bar's value only by calling &lt;code&gt;setValues&lt;/code&gt;. The &lt;code&gt;setValues&lt;/code&gt; method simultaneously and synchronously sets the minimum, maximum, visible amount, and value properties of a scroll bar, so that they are mutually consistent.</source>
          <target state="translated">通常、プログラムは &lt;code&gt;setValues&lt;/code&gt; を呼び出すことによってのみスクロールバーの値を変更する必要があります。 &lt;code&gt;setValues&lt;/code&gt; の方法は、同時にかつ同期それらが互いに一致しているように、スクロールバーの最小値、最大値、可視量、および値プロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="595d678bd982d55a1e4f677e9228945c2082f4ce" translate="yes" xml:space="preserve">
          <source>Normally, only a subset of these will actually be enabled by default, since this list may include cipher suites which do not meet quality of service requirements for those defaults. Such cipher suites are useful in specialized applications.</source>
          <target state="translated">このリストにはデフォルトのサービス品質要件を満たさない暗号スイートが含まれている可能性があるため、通常はこれらのうちのサブセットのみが実際にデフォルトで有効になります。このような暗号スイートは特殊なアプリケーションで有用です。</target>
        </trans-unit>
        <trans-unit id="0c793af047623ee7a25cf71950eabfc58a729e5b" translate="yes" xml:space="preserve">
          <source>Normally, parser writers will not use this class, since it is more efficient to provide location information only when requested, rather than constantly updating a Locator object.</source>
          <target state="translated">通常、パーサライターはこのクラスを使用しません。なぜならば、Locaterオブジェクトを常に更新するよりも、要求されたときにのみ位置情報を提供する方が効率的だからです。</target>
        </trans-unit>
        <trans-unit id="91b850cffc7c42eafec818b7938b03232e24ba19" translate="yes" xml:space="preserve">
          <source>Normally, result tree serialization escapes&amp;amp; and &amp;lt; (and possibly other characters) when outputting text nodes. This ensures that the output is well-formed XML. However, it is sometimes convenient to be able to produce output that is almost, but not quite well-formed XML; for example, the output may include ill-formed sections that will be transformed into well-formed XML by a subsequent non-XML aware process. If a processing instruction is sent with this name, serialization should be output without any escaping.</source>
          <target state="translated">通常、結果ツリーのシリアル化は、テキストノードを出力するときに＆と&amp;lt;（および場合によっては他の文字）をエスケープします。これにより、出力が整形式のXMLであることが保証されます。ただし、ほとんど、しかし完全には整形式ではないXMLの出力を生成できると便利な場合があります。たとえば、出力には、後続の非XML対応プロセスによって整形式のXMLに変換される不正なセクションが含まれる場合があります。この名前で処理命令を送信する場合、シリアル化はエスケープせずに出力する必要があります。</target>
        </trans-unit>
        <trans-unit id="a0e0eb11650c8c550f0089caf540613fef9d88e9" translate="yes" xml:space="preserve">
          <source>Normally, the Java virtual machine loads classes from the local file system in a platform-dependent manner. For example, on UNIX systems, the virtual machine loads classes from the directory defined by the &lt;code&gt;CLASSPATH&lt;/code&gt; environment variable.</source>
          <target state="translated">通常、Java仮想マシンは、プラットフォームに依存する方法でローカルファイルシステムからクラスをロードします。たとえば、UNIXシステムでは、仮想マシンは &lt;code&gt;CLASSPATH&lt;/code&gt; 環境変数で定義されたディレクトリからクラスをロードします。</target>
        </trans-unit>
        <trans-unit id="c3a8536654510e2d89585792ce836aba25584e40" translate="yes" xml:space="preserve">
          <source>Normally, the Java virtual machine loads classes from the local file system in a platform-dependent manner. However, some classes may not originate from a file; they may originate from other sources, such as the network, or they could be constructed by an application. The method &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/a&gt; converts an array of bytes into an instance of class &lt;code&gt;Class&lt;/code&gt;. Instances of this newly defined class can be created using &lt;a href=&quot;class#newInstance()&quot;&gt;&lt;code&gt;Class.newInstance&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通常、Java仮想マシンは、プラットフォームに依存する方法でローカルファイルシステムからクラスをロードします。ただし、一部のクラスはファイルから発生しない場合があります。それらは、ネットワークなどの他のソースから発生する場合もあれば、アプリケーションによって構築される場合もあります。メソッド&lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;defineClass&lt;/code&gt; &lt;/a&gt;は、バイトの配列をクラス &lt;code&gt;Class&lt;/code&gt; のインスタンスに変換します。この新しく定義されたクラスのインスタンスは、&lt;a href=&quot;class#newInstance()&quot;&gt; &lt;code&gt;Class.newInstance&lt;/code&gt; &lt;/a&gt;を使用して作成できます。</target>
        </trans-unit>
        <trans-unit id="c0cd54024cd9fd4b959f6a8acaf3be98115f9263" translate="yes" xml:space="preserve">
          <source>Normally, the tables are specified in the &lt;code&gt;IIOMetadata&lt;/code&gt; objects passed in to the writer, and any tables included in these objects are written to the stream. If no tables are specified in the metadata, then an abbreviated stream is written. If no tables are included in the metadata and no tables are specified in a &lt;code&gt;JPEGImageWriteParam&lt;/code&gt;, then an abbreviated stream is encoded using the &quot;standard&quot; visually lossless tables. This class is necessary for specifying tables when an abbreviated stream must be written without writing any tables to a stream first. In order to use this class, the metadata object passed into the writer must contain no tables, and no stream metadata must be provided. See &lt;a href=&quot;jpegqtable&quot;&gt;&lt;code&gt;JPEGQTable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jpeghuffmantable&quot;&gt;&lt;code&gt;JPEGHuffmanTable&lt;/code&gt;&lt;/a&gt; for more information on the default tables.</source>
          <target state="translated">通常、テーブルはライターに渡される &lt;code&gt;IIOMetadata&lt;/code&gt; オブジェクトで指定され、これらのオブジェクトに含まれるすべてのテーブルがストリームに書き込まれます。メタデータでテーブルが指定されていない場合は、省略されたストリームが書き込まれます。メタデータにテーブルが含まれておらず、 &lt;code&gt;JPEGImageWriteParam&lt;/code&gt; にテーブルが指定されていない場合、省略されたストリームは、「標準の」視覚的に損失のないテーブルを使用してエンコードされます。このクラスは、最初にストリームにテーブルを書き込まずに、省略されたストリームを書き込む必要がある場合にテーブルを指定するために必要です。このクラスを使用するには、ライターに渡されるメタデータオブジェクトにテーブルが含まれておらず、ストリームメタデータが提供されていてはなりません。&lt;a href=&quot;jpegqtable&quot;&gt; &lt;code&gt;JPEGQTable&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;jpeghuffmantable&quot;&gt; &lt;code&gt;JPEGHuffmanTable&lt;/code&gt; を&lt;/a&gt;参照してください デフォルトのテーブルの詳細については。</target>
        </trans-unit>
        <trans-unit id="bc6d97b300ebb28d188762cd929dd4a5c7361386" translate="yes" xml:space="preserve">
          <source>Normally, the user changes the value of the scroll bar by making a gesture with the mouse. For example, the user can drag the scroll bar's bubble up and down, or click in the scroll bar's unit increment or block increment areas. Keyboard gestures can also be mapped to the scroll bar. By convention, the &lt;b&gt;Page Up&lt;/b&gt; and &lt;b&gt;Page Down&lt;/b&gt; keys are equivalent to clicking in the scroll bar's block increment and block decrement areas.</source>
          <target state="translated">通常、ユーザーはマウスでジェスチャーを行うことにより、スクロールバーの値を変更します。たとえば、ユーザーはスクロールバーのバブルを上下にドラッグしたり、スクロールバーの単位増分またはブロック増分領域をクリックしたりできます。キーボードジェスチャをスクロールバーにマッピングすることもできます。慣例により、&lt;b&gt;ページアップ&lt;/b&gt;と&lt;b&gt;ページダウン&lt;/b&gt;キーは、スクロールバーのブロックインクリメントとブロックデクリメント分野でクリックすることと同じです。</target>
        </trans-unit>
        <trans-unit id="03c5ea8322ba7e817c0a136cecaa68f7da66119e" translate="yes" xml:space="preserve">
          <source>Normally, this error is caught by the compiler; this error can only occur at run time if the definition of a class has incompatibly changed.</source>
          <target state="translated">通常、このエラーはコンパイラによって捕捉されます。このエラーは、クラスの定義が変更された場合にのみ実行時に発生します。</target>
        </trans-unit>
        <trans-unit id="07ac7921ed0b57c8acad3c4b53e1ee25939d0bce" translate="yes" xml:space="preserve">
          <source>Normally, this method is invoked at most once per class, but it may be invoked again if there has been a call to &lt;a href=&quot;#remove(java.lang.Class)&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通常、このメソッドはクラスごとに最大1回呼び出されますが、&lt;a href=&quot;#remove(java.lang.Class)&quot;&gt; &lt;code&gt;remove&lt;/code&gt; の&lt;/a&gt;呼び出しがあった場合は、再度呼び出される可能性があります。</target>
        </trans-unit>
        <trans-unit id="4f50b4a8d77f17af0b364a933991f9010b617625" translate="yes" xml:space="preserve">
          <source>Normally, this method is invoked at most once per class, but it may be invoked again if there has been a call to &lt;a href=&quot;classvalue#remove-java.lang.Class-&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通常、このメソッドはクラスごとに最大1回呼び出されますが、&lt;a href=&quot;classvalue#remove-java.lang.Class-&quot;&gt; &lt;code&gt;remove&lt;/code&gt; の&lt;/a&gt;呼び出しがあった場合は、再度呼び出されることがあります。</target>
        </trans-unit>
        <trans-unit id="22ca41928150e819619654fa5a9109a99452337f" translate="yes" xml:space="preserve">
          <source>Normally, you should pop the context at the end of each XML element. After popping the context, all Namespace prefix mappings that were previously in force are restored.</source>
          <target state="translated">通常は、各 XML 要素の最後にコンテキストをポップする必要があります。コンテキストをポップすると、それまで有効だったすべての名前空間接頭辞マッピングが復元されます。</target>
        </trans-unit>
        <trans-unit id="cc1efaada9cfbd4fe5316e9ef2d942b1a225fdd8" translate="yes" xml:space="preserve">
          <source>North pane</source>
          <target state="translated">北側ペイン</target>
        </trans-unit>
        <trans-unit id="a678e190ea7d7d8835688b006b8307e3351ec796" translate="yes" xml:space="preserve">
          <source>Norwegian: &quot;&amp;lt; a, A &amp;lt; b, B &amp;lt; c, C &amp;lt; d, D &amp;lt; e, E &amp;lt; f, F &amp;lt; g, G &amp;lt; h, H &amp;lt; i, I &amp;lt; j, J &amp;lt; k, K &amp;lt; l, L &amp;lt; m, M &amp;lt; n, N &amp;lt; o, O &amp;lt; p, P &amp;lt; q, Q &amp;lt; r, R &amp;lt; s, S &amp;lt; t, T &amp;lt; u, U &amp;lt; v, V &amp;lt; w, W &amp;lt; x, X &amp;lt; y, Y &amp;lt; z, Z &amp;lt; \u00E6, \u00C6 &amp;lt; \u00F8, \u00D8 &amp;lt; \u00E5 = a\u030A, \u00C5 = A\u030A; aa, AA&quot;</source>
          <target state="translated">ノルウェー語：「&amp;lt;a、A &amp;lt;b、B &amp;lt;c、C &amp;lt;d、D &amp;lt;e、E &amp;lt;f、F &amp;lt;g、G &amp;lt;h、H &amp;lt;i、I &amp;lt;j、J &amp;lt;k、K &amp;lt;l、 L &amp;lt;m、M &amp;lt;n、N &amp;lt;o、O &amp;lt;p、P &amp;lt;q、Q &amp;lt;r、R &amp;lt;s、S &amp;lt;t、T &amp;lt;u、U &amp;lt;v、V &amp;lt;w、W &amp;lt;x、X &amp;lt; y、Y &amp;lt;z、Z &amp;lt;\ u00E6、\ u00C6 &amp;lt;\ u00F8、\ u00D8 &amp;lt;\ u00E5 = a \ u030A、\ u00C5 = A \ u030A; aa、AA</target>
        </trans-unit>
        <trans-unit id="7e1d156edfb625c87e3f9f18bc15e00ed283c684" translate="yes" xml:space="preserve">
          <source>Not a valid role but role id's greater than this may be used for private roles supported by a service.</source>
          <target state="translated">有効なロールではありませんが、これよりも大きいロールIDは、サービスによってサポートされているプライベートロールに使用することができます。</target>
        </trans-unit>
        <trans-unit id="53ea4a3df064eb5f4ed63ae85d0142982b27c6f8" translate="yes" xml:space="preserve">
          <source>Not a valid role but role id's greater than this may be used for private roles supported by a service. Knowledge of the function performed by this role is required to make proper use of it.</source>
          <target state="translated">有効なロールではありませんが、これより大きいロールIDは、サービスによってサポートされているプライベート・ロールのために使用することができます。このロールを適切に使用するためには、このロールで実行される機能の知識が必要です。</target>
        </trans-unit>
        <trans-unit id="76556585145a076d3d78c21f521b40ab216d2726" translate="yes" xml:space="preserve">
          <source>Not all &lt;code&gt;TemporalAccessor&lt;/code&gt; implementations are accepted as return values. Implementations that call this method must accept &lt;code&gt;ChronoLocalDate&lt;/code&gt;, &lt;code&gt;ChronoLocalDateTime&lt;/code&gt;, &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; and &lt;code&gt;LocalTime&lt;/code&gt;.</source>
          <target state="translated">すべての &lt;code&gt;TemporalAccessor&lt;/code&gt; 実装が戻り値として受け入れられるわけではありません。このメソッドを呼び出す実装は、 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 、 &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; 、 &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; 、および &lt;code&gt;LocalTime&lt;/code&gt; を受け入れる必要があります。</target>
        </trans-unit>
        <trans-unit id="f41446132e60443a4cf00fc1037be5e58ccb5e4b" translate="yes" xml:space="preserve">
          <source>Not all attributes have a default value. For example the service will not have a default value for &lt;code&gt;RequestingUser&lt;/code&gt; i.e. a &lt;code&gt;null&lt;/code&gt; return for a supported category means there is no service default value for that category. Use the &lt;code&gt;isAttributeCategorySupported(Class)&lt;/code&gt; method to distinguish these cases.</source>
          <target state="translated">すべての属性にデフォルト値があるわけではありません。たとえば、サービスには &lt;code&gt;RequestingUser&lt;/code&gt; のデフォルト値がありません。つまり、サポートされているカテゴリの &lt;code&gt;null&lt;/code&gt; リターンは、そのカテゴリのサービスのデフォルト値がないことを意味します。これらのケースを区別するには、 &lt;code&gt;isAttributeCategorySupported(Class)&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="2cd3e32dcc6b53a8da83445933bd09865c3c0139" translate="yes" xml:space="preserve">
          <source>Not all attributes have a default value. For example the service will not have a defaultvalue for &lt;code&gt;RequestingUser&lt;/code&gt; i.e. a null return for a supported category means there is no service default value for that category. Use the &lt;code&gt;isAttributeCategorySupported(Class)&lt;/code&gt; method to distinguish these cases.</source>
          <target state="translated">すべての属性にデフォルト値があるわけではありません。例えば、サービスはのためDEFAULTVALUEありません &lt;code&gt;RequestingUser&lt;/code&gt; は、そのカテゴリにはサービスのデフォルト値はありませんサポートカテゴリの手段のためのヌル・リターン、すなわち。これらのケースを区別するには、 &lt;code&gt;isAttributeCategorySupported(Class)&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="0102d7a3ac1669274ce05a9bd8a70a18171b3868" translate="yes" xml:space="preserve">
          <source>Not all characters have a keycode associated with them. For example, there is no keycode for the question mark because there is no keyboard for which it appears on the primary layer.</source>
          <target state="translated">すべての文字にキーコードが関連付けられているわけではありません。た と えば、 クエスチョンマークのキーコードは、プライマリレイヤー上に表示されるキーボードがないため、存在しません。</target>
        </trans-unit>
        <trans-unit id="6e2ca62cfd317694199c1b384c55a910f1f42399" translate="yes" xml:space="preserve">
          <source>Not all environments will contain session contexts.</source>
          <target state="translated">すべての環境にセッションコンテキストが含まれるわけではありません。</target>
        </trans-unit>
        <trans-unit id="923eb8dd08ce82fcd579c4dffe9de57f4bd7b81e" translate="yes" xml:space="preserve">
          <source>Not all field names and values are predefined. New fields can be defined and added by any program.</source>
          <target state="translated">すべてのフィールド名と値が事前に定義されているわけではありません。新しいフィールドは、任意のプログラムで定義して追加することができます。</target>
        </trans-unit>
        <trans-unit id="4a36969afae47ece5c6f00c74a300f111901930a" translate="yes" xml:space="preserve">
          <source>Not all host operating systems provide API to determine the locale of the currently selected native input method or keyboard layout, and to select a native input method or keyboard layout by locale. For host operating systems that don't provide such API, &lt;code&gt;selectInputMethod&lt;/code&gt; assumes that native input methods or keyboard layouts provided by the host operating system support only the system's default locale.</source>
          <target state="translated">すべてのホストオペレーティングシステムが、現在選択されているネイティブ入力方式またはキーボードレイアウトのロケールを決定し、ロケールごとにネイティブ入力方式またはキーボードレイアウトを選択するためのAPIを提供しているわけではありません。このようなAPIを提供しないホストオペレーティングシステムの場合、 &lt;code&gt;selectInputMethod&lt;/code&gt; は、ホストオペレーティングシステムによって提供されるネイティブ入力メソッドまたはキーボードレイアウトがシステムのデフォルトロケールのみをサポートすることを前提としています。</target>
        </trans-unit>
        <trans-unit id="b5f11ad21c9e7b3826cc0f5106ab6d4fb53787cb" translate="yes" xml:space="preserve">
          <source>Not all host operating systems provide API to determine the locale of the currently selected native input method or keyboard layout. For host operating systems that don't provide such API, &lt;code&gt;getLocale&lt;/code&gt; assumes that the current locale of all native input methods or keyboard layouts provided by the host operating system is the system's default locale.</source>
          <target state="translated">すべてのホストオペレーティングシステムが、現在選択されているネイティブ入力方式またはキーボードレイアウトのロケールを決定するためのAPIを提供しているわけではありません。このようなAPIを提供しないホストオペレーティングシステムの場合、 &lt;code&gt;getLocale&lt;/code&gt; は、ホストオペレーティングシステムによって提供されるすべてのネイティブ入力メソッドまたはキーボードレイアウトの現在のロケールがシステムのデフォルトロケールであると想定します。</target>
        </trans-unit>
        <trans-unit id="6a5f78c1c268eaa5406f68f5a1e420277f39f3e4" translate="yes" xml:space="preserve">
          <source>Not all keyboards or systems are capable of generating all virtual key codes. No attempt is made in Java to generate these keys artificially.</source>
          <target state="translated">すべてのキーボードやシステムがすべての仮想キーコードを生成できるわけではありません。Javaでは、これらのキーを人為的に生成しようとする試みは行われていません。</target>
        </trans-unit>
        <trans-unit id="4ba5910d407654cba570e2b7458215bbc9f94dfb" translate="yes" xml:space="preserve">
          <source>Not all letters have case. Many characters are letters but are neither uppercase nor lowercase nor titlecase.</source>
          <target state="translated">すべての文字に大文字があるわけではありません。多くの文字は文字ですが、大文字でも小文字でもなく、タイトルケースでもありません。</target>
        </trans-unit>
        <trans-unit id="bc6a37703f4d414ac5d598ca848e5118376df7a7" translate="yes" xml:space="preserve">
          <source>Not all mechanisms support mutual authentication and some mechanisms might require mutual authentication even if the application doesn't. Therefore, the application should check to see if the request was honored with the &lt;a href=&quot;#getMutualAuthState()&quot;&gt;&lt;code&gt;getMutualAuthState&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">すべてのメカニズムが相互認証をサポートしているわけではなく、アプリケーションがサポートしていない場合でも、一部のメカニズムでは相互認証が必要になる場合があります。したがって、アプリケーションは、リクエストが&lt;a href=&quot;#getMutualAuthState()&quot;&gt; &lt;code&gt;getMutualAuthState&lt;/code&gt; &lt;/a&gt;メソッドで受け入れられたかどうかを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="cef5831573e97a49d1e4e540997a2192ff5509d5" translate="yes" xml:space="preserve">
          <source>Not all mechanisms support replay detection and some mechanisms might require replay detection even if the application doesn't. Therefore, the application should check to see if the request was honored with the &lt;a href=&quot;#getReplayDetState()&quot;&gt;&lt;code&gt;getReplayDetState&lt;/code&gt;&lt;/a&gt; method. If replay detection is enabled then the &lt;a href=&quot;messageprop#isDuplicateToken()&quot;&gt;&lt;code&gt;MessageProp.isDuplicateToken&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;messageprop#isOldToken()&quot;&gt;&lt;code&gt;MessageProp.isOldToken&lt;/code&gt;&lt;/a&gt; methods will return valid results for the &lt;code&gt;MessageProp&lt;/code&gt; object that is passed in to the &lt;code&gt;unwrap&lt;/code&gt; method or the &lt;code&gt;verifyMIC&lt;/code&gt; method.</source>
          <target state="translated">すべてのメカニズムがリプレイ検出をサポートしているわけではなく、アプリケーションがサポートしていない場合でも、一部のメカニズムではリプレイ検出が必要になる場合があります。したがって、アプリケーションは、リクエストが&lt;a href=&quot;#getReplayDetState()&quot;&gt; &lt;code&gt;getReplayDetState&lt;/code&gt; &lt;/a&gt;メソッドで受け入れられたかどうかを確認する必要があります。再生検出が有効になっている場合、&lt;a href=&quot;messageprop#isDuplicateToken()&quot;&gt; &lt;code&gt;MessageProp.isDuplicateToken&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;messageprop#isOldToken()&quot;&gt; &lt;code&gt;MessageProp.isOldToken&lt;/code&gt; &lt;/a&gt;メソッドは、 &lt;code&gt;unwrap&lt;/code&gt; メソッドまたは &lt;code&gt;verifyMIC&lt;/code&gt; メソッドに渡される &lt;code&gt;MessageProp&lt;/code&gt; オブジェクトの有効な結果を返します。</target>
        </trans-unit>
        <trans-unit id="77775a11ecb03265cb835610eae29b67123b7d11" translate="yes" xml:space="preserve">
          <source>Not all mechanisms support sequence checking and some mechanisms might require sequence checking even if the application doesn't. Therefore, the application should check to see if the request was honored with the &lt;a href=&quot;#getSequenceDetState()&quot;&gt;&lt;code&gt;getSequenceDetState&lt;/code&gt;&lt;/a&gt; method. If sequence checking is enabled then the &lt;a href=&quot;messageprop#isDuplicateToken()&quot;&gt;&lt;code&gt;MessageProp.isDuplicateToken&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;messageprop#isOldToken()&quot;&gt;&lt;code&gt;MessageProp.isOldToken&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;messageprop#isUnseqToken()&quot;&gt;&lt;code&gt;MessageProp.isUnseqToken&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;messageprop#isGapToken()&quot;&gt;&lt;code&gt;MessageProp.isGapToken&lt;/code&gt;&lt;/a&gt; methods will return valid results for the &lt;code&gt;MessageProp&lt;/code&gt; object that is passed in to the &lt;code&gt;unwrap&lt;/code&gt; method or the &lt;code&gt;verifyMIC&lt;/code&gt; method.</source>
          <target state="translated">すべてのメカニズムがシーケンスチェックをサポートしているわけではなく、一部のメカニズムでは、アプリケーションがサポートしていない場合でもシーケンスチェックが必要になる場合があります。したがって、アプリケーションは、リクエストが&lt;a href=&quot;#getSequenceDetState()&quot;&gt; &lt;code&gt;getSequenceDetState&lt;/code&gt; &lt;/a&gt;メソッドで受け入れられたかどうかを確認する必要があります。シーケンスチェックが有効になっている場合、&lt;a href=&quot;messageprop#isDuplicateToken()&quot;&gt; &lt;code&gt;MessageProp.isDuplicateToken&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;messageprop#isOldToken()&quot;&gt; &lt;code&gt;MessageProp.isOldToken&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;messageprop#isUnseqToken()&quot;&gt; &lt;code&gt;MessageProp.isUnseqToken&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;messageprop#isGapToken()&quot;&gt; &lt;code&gt;MessageProp.isGapToken&lt;/code&gt; &lt;/a&gt;メソッドは、 &lt;code&gt;unwrap&lt;/code&gt; メソッドまたは &lt;code&gt;verifyMIC&lt;/code&gt; メソッドに渡される &lt;code&gt;MessageProp&lt;/code&gt; オブジェクトに対して有効な結果を返します。</target>
        </trans-unit>
        <trans-unit id="b7754c2469b46000e3f443dffbdccd1dcb3755e4" translate="yes" xml:space="preserve">
          <source>Not all modifiers are applicable to all kinds of elements. When two or more modifiers appear in the source code of an element then it is customary, though not required, that they appear in the same order as the constants listed in the detail section below.</source>
          <target state="translated">すべての修飾子がすべての種類の要素に適用できるわけではありません。2つ以上の修飾子が要素のソースコードに現れる場合、必須ではありませんが、以下の詳細セクションにリストされている定数と同じ順序で現れることが慣例です。</target>
        </trans-unit>
        <trans-unit id="d8814438939faf87f102340d2cda25075bc2eb9a" translate="yes" xml:space="preserve">
          <source>Not all of the operators defined in RFC 2254 are applicable to all attributes. When an operator is not applicable, the exception &lt;code&gt;InvalidSearchFilterException&lt;/code&gt; is thrown.</source>
          <target state="translated">RFC 2254で定義されているすべての演算子がすべての属性に適用できるわけではありません。演算子が適用できない場合、例外 &lt;code&gt;InvalidSearchFilterException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="60494b7b2f7b3b5c42e5147ef12f29cf77342352" translate="yes" xml:space="preserve">
          <source>Not all print services may be capable of delivering interesting events, or even telling when a job is complete.</source>
          <target state="translated">すべての印刷サービスが、面白いイベントを配信できるとは限らないし、仕事が終わったときにもわかるようになっています。</target>
        </trans-unit>
        <trans-unit id="37689ea1d145fc5766796b72ced33640c878423f" translate="yes" xml:space="preserve">
          <source>Not all print services may be capable of delivering interesting events, or even telling when a job is complete. This message indicates the print job has no further information or communication with the print service. This message should always be delivered if a terminal event (completed/failed/canceled) is not delivered. For example, if messages such as &lt;code&gt;JOB_COMPLETE&lt;/code&gt; have NOT been received before receiving this message, the only inference that should be drawn is that the print service does not support delivering such an event.</source>
          <target state="translated">すべての印刷サービスが興味深いイベントを配信したり、ジョブがいつ完了したかを通知したりできるわけではありません。このメッセージは、印刷ジョブにそれ以上の情報や印刷サービスとの通信がないことを示します。ターミナルイベント（完了/失敗/キャンセル）が配信されない場合、このメッセージは常に配信される必要があります。たとえば、 &lt;code&gt;JOB_COMPLETE&lt;/code&gt; などのメッセージがこのメッセージを受信する前に受信されていない場合、描画する必要がある唯一の推論は、印刷サービスがそのようなイベントの配信をサポートしていないということです。</target>
        </trans-unit>
        <trans-unit id="35f64ddbca0b54a706e44a4edf5ca413b1c75868" translate="yes" xml:space="preserve">
          <source>Not all print services may be capable of delivering interesting events, or even telling when a job is complete. This message indicates the print job has no further information or communication with the print service. This message should always be delivered if a terminal event (completed/failed/canceled) is not delivered. For example, if messages such as JOB_COMPLETE have NOT been received before receiving this message, the only inference that should be drawn is that the print service does not support delivering such an event.</source>
          <target state="translated">すべての印刷サービスが、興味深いイベントを配信したり、ジョブが完了したことを伝えることができるとは限りません。このメッセージは、印刷ジョブにはそれ以上の情報や印刷サービスとの通信がないことを示しています。このメッセージは、端末イベント(完了/失敗/キャンセル)が配信されない場合には、常に配信されるべきである。例えば、JOB_COMPLETEのようなメッセージがこのメッセージを受信する前に受信されていない場合、引き出されるべき唯一の推論は、プリントサービスがそのようなイベントの配信をサポートしていないということである。</target>
        </trans-unit>
        <trans-unit id="a29cbcf85eaefc42cdc231116049bdb2d0b4859d" translate="yes" xml:space="preserve">
          <source>Not all systems have support for the IPv6 protocol, and while the Java networking stack will attempt to detect it and use it transparently when available, it is also possible to disable its use with a system property. In the case where IPv6 is not available, or explicitly disabled, Inet6Address are not valid arguments for most networking operations any more. While methods like &lt;a href=&quot;inetaddress#getByName(java.lang.String)&quot;&gt;&lt;code&gt;InetAddress.getByName(java.lang.String)&lt;/code&gt;&lt;/a&gt; are guaranteed not to return an Inet6Address when looking up host names, it is possible, by passing literals, to create such an object. In which case, most methods, when called with an Inet6Address will throw an Exception.</source>
          <target state="translated">すべてのシステムがIPv6プロトコルをサポートしているわけではありません。また、JavaネットワークスタックはIPv6プロトコルを検出し、使用可能な場合は透過的に使用しようとしますが、システムプロパティで使用を無効にすることもできます。 IPv6が使用できない場合、または明示的に無効になっている場合、Inet6Addressはほとんどのネットワーク操作の有効な引数ではなくなります。&lt;a href=&quot;inetaddress#getByName(java.lang.String)&quot;&gt; &lt;code&gt;InetAddress.getByName(java.lang.String)&lt;/code&gt; の&lt;/a&gt;ようなメソッドは、ホスト名を検索するときにInet6Addressを返さないことが保証されていますが、リテラルを渡すことにより、そのようなオブジェクトを作成することができます。この場合、ほとんどのメソッドは、Inet6Addressで呼び出されると、例外をスローします。</target>
        </trans-unit>
        <trans-unit id="e397a6994b2c95a352c9b3b672917a6038d16a3e" translate="yes" xml:space="preserve">
          <source>Not all systems have support for the IPv6 protocol, and while the Java networking stack will attempt to detect it and use it transparently when available, it is also possible to disable its use with a system property. In the case where IPv6 is not available, or explicitly disabled, Inet6Address are not valid arguments for most networking operations any more. While methods like &lt;a href=&quot;inetaddress#getByName-java.lang.String-&quot;&gt;&lt;code&gt;InetAddress.getByName(java.lang.String)&lt;/code&gt;&lt;/a&gt; are guaranteed not to return an Inet6Address when looking up host names, it is possible, by passing literals, to create such an object. In which case, most methods, when called with an Inet6Address will throw an Exception.</source>
          <target state="translated">すべてのシステムがIPv6プロトコルをサポートしているわけではありません。JavaネットワークスタックはIPv6プロトコルを検出して透過的に使用しようとしますが、システムプロパティでその使用を無効にすることもできます。 IPv6が利用できない場合、または明示的に無効にされている場合、Inet6Addressは、ほとんどのネットワーク操作で有効な引数ではなくなります。&lt;a href=&quot;inetaddress#getByName-java.lang.String-&quot;&gt; &lt;code&gt;InetAddress.getByName(java.lang.String)&lt;/code&gt; の&lt;/a&gt;ようなメソッドは、ホスト名を検索するときにInet6Addressを返さないことが保証されていますが、リテラルを渡すことにより、そのようなオブジェクトを作成することが可能です。その場合、ほとんどのメソッドは、Inet6Addressで呼び出されたときに例外をスローします。</target>
        </trans-unit>
        <trans-unit id="05aba0437eb3bd7ea2070512e01919750c643e0c" translate="yes" xml:space="preserve">
          <source>Not called directly by applications.</source>
          <target state="translated">アプリケーションから直接呼び出されることはありません。</target>
        </trans-unit>
        <trans-unit id="ab2b2dd5ad5194460f39ce97c77efdff8ec39c11" translate="yes" xml:space="preserve">
          <source>Not called directly by applications. Implemented by a service provider, and called by the print lookup service</source>
          <target state="translated">アプリケーションから直接呼び出されない。サービスプロバイダによって実装され、印刷ルックアップサービスによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="dd0b8a8946e8e9160c83b6cba603a9e680e19eb4" translate="yes" xml:space="preserve">
          <source>Not called directly by applications. Implemented by a service provider, and called by the print lookup service.</source>
          <target state="translated">アプリケーションから直接呼び出されない。サービスプロバイダによって実装され、印刷ルックアップサービスによって呼び出される。</target>
        </trans-unit>
        <trans-unit id="2a463a7a78bc44fc4334568c6d8f7abbdf4f14d1" translate="yes" xml:space="preserve">
          <source>Not called directly by applications. Implemented by a service provider, used by the static methods of this class.</source>
          <target state="translated">アプリケーションから直接呼び出されることはありません。サービスプロバイダによって実装され、このクラスの静的メソッドによって使用されます。</target>
        </trans-unit>
        <trans-unit id="4c2c4692797b1c72c2490c0e81cb931fc786ce55" translate="yes" xml:space="preserve">
          <source>Not currently used.</source>
          <target state="translated">現在は使用していません。</target>
        </trans-unit>
        <trans-unit id="25db7b09df7d6a42d624eccea60ad00c4c751826" translate="yes" xml:space="preserve">
          <source>Not implemented, does nothing.</source>
          <target state="translated">実装されていない、何もしない。</target>
        </trans-unit>
        <trans-unit id="a680f57856e3df6f405166c16f4653fa9b47e420" translate="yes" xml:space="preserve">
          <source>Not lossy</source>
          <target state="translated">ロッシーではない</target>
        </trans-unit>
        <trans-unit id="9153f9b5bb1790835ec2ea6612dc284c5c8d06f9" translate="yes" xml:space="preserve">
          <source>Not used by this class.</source>
          <target state="translated">このクラスでは使用されません。</target>
        </trans-unit>
        <trans-unit id="a792494d26a57c3aa80e6c4feca7ed030f741a16" translate="yes" xml:space="preserve">
          <source>Not used in this context.</source>
          <target state="translated">この文脈では使われていません。</target>
        </trans-unit>
        <trans-unit id="cb45945c94c0131f03af3139052abb60708b653a" translate="yes" xml:space="preserve">
          <source>NotActiveException</source>
          <target state="translated">NotActiveException</target>
        </trans-unit>
        <trans-unit id="70f764028352ef77c2d3d134c56787476c4464ca" translate="yes" xml:space="preserve">
          <source>NotBoundException</source>
          <target state="translated">NotBoundException</target>
        </trans-unit>
        <trans-unit id="b1f01dc5096455decfee1f325bf6d67435ff5cf4" translate="yes" xml:space="preserve">
          <source>NotCompliantMBeanException</source>
          <target state="translated">NotCompliantMBeanException</target>
        </trans-unit>
        <trans-unit id="b17c2fa961f935d26f5107d7a2b68b673df1e300" translate="yes" xml:space="preserve">
          <source>NotContextException</source>
          <target state="translated">NotContextException</target>
        </trans-unit>
        <trans-unit id="e829839cc5b1acc0ef27d88bf6d9a18be0f74c3b" translate="yes" xml:space="preserve">
          <source>NotDirectoryException</source>
          <target state="translated">NotDirectoryException</target>
        </trans-unit>
        <trans-unit id="6421f6d867ebf2bac7333163dad093854283bbd7" translate="yes" xml:space="preserve">
          <source>NotLinkException</source>
          <target state="translated">NotLinkException</target>
        </trans-unit>
        <trans-unit id="8a0b22ca48f29ff7c347fdf2e36e8bcf57f0cf37" translate="yes" xml:space="preserve">
          <source>NotOwnerException</source>
          <target state="translated">NotOwnerException</target>
        </trans-unit>
        <trans-unit id="a8101cb03f9e43859d900d164645e1053f92ad69" translate="yes" xml:space="preserve">
          <source>NotSerializableException</source>
          <target state="translated">NotSerializableException</target>
        </trans-unit>
        <trans-unit id="a5fa17dc013886b1dfae0b9d9192b0ec388d8112" translate="yes" xml:space="preserve">
          <source>NotYetBoundException</source>
          <target state="translated">NotYetBoundException</target>
        </trans-unit>
        <trans-unit id="b5726b78b7dec5b00c5f26de15ad4c767cd781f3" translate="yes" xml:space="preserve">
          <source>NotYetConnectedException</source>
          <target state="translated">NotYetConnectedException</target>
        </trans-unit>
        <trans-unit id="4553a1f183efb4313b963f289a47c5ea9be3eb15" translate="yes" xml:space="preserve">
          <source>Notable differences from Perl:</source>
          <target state="translated">Perlとの顕著な違い</target>
        </trans-unit>
        <trans-unit id="9f3163ffda0d3418a1866865fdb1ef76cb2dbf4b" translate="yes" xml:space="preserve">
          <source>Notation</source>
          <target state="translated">Notation</target>
        </trans-unit>
        <trans-unit id="9f32ace1f288b96d57761c89dd67dad6eef02b7f" translate="yes" xml:space="preserve">
          <source>NotationDeclaration</source>
          <target state="translated">NotationDeclaration</target>
        </trans-unit>
        <trans-unit id="db3cf006ffc0a0f443ff7925a87893e6fd720348" translate="yes" xml:space="preserve">
          <source>Note : Native windowing systems may use different images of differing dimensions to represent a window, depending on the context (e.g. window decoration, window list, taskbar, etc.). They could also use just a single image for all contexts or no image at all.</source>
          <target state="translated">Note:ネイティブなウィンドウシステムは、ウィンドウを表現するために、異なる寸法の異なる画像を使用することがあります。また、すべてのコンテキストに単一の画像を使うこともあれば、全く画像を使わないこともあります。</target>
        </trans-unit>
        <trans-unit id="376a8b8e4951d4e55d76a651ff27323ffb68e782" translate="yes" xml:space="preserve">
          <source>Note also that NoSuchElementException is thrown if the program invokes next() or nextElement() when there are no elements left in the enumeration. The program can always avoid this exception by using hasMore() and hasMoreElements() to check whether the end of the enumeration has been reached.</source>
          <target state="translated">また、列挙に要素が残っていない場合に next()や nextElement()を呼び出した場合に NoSuchElementException がスローされることにも注意しましょう。プログラムは、hasMore()および hasMoreElements()を使用して列挙の終わりに達したかどうかを確認することで、常にこの例外を回避することができます。</target>
        </trans-unit>
        <trans-unit id="ada9c8d4e20fbdf3515a0468c2b4e63247d0b0f7" translate="yes" xml:space="preserve">
          <source>Note also that attempting to access mutable state from behavioral parameters presents you with a bad choice with respect to safety and performance; if you do not synchronize access to that state, you have a data race and therefore your code is broken, but if you do synchronize access to that state, you risk having contention undermine the parallelism you are seeking to benefit from. The best approach is to avoid stateful behavioral parameters to stream operations entirely; there is usually a way to restructure the stream pipeline to avoid statefulness.</source>
          <target state="translated">また、ビヘイビアパラメータから変異可能な状態にアクセスしようとすると、安全性とパフォーマン スの点で悪い選択をすることになります。その状態へのアクセスを同期させないと、データ競合が発生してコードが壊れてしまいます。最良のアプローチは、ストリーム操作に対するステートフルな動作パラメータを完全に回避することです。</target>
        </trans-unit>
        <trans-unit id="dfa4cce6c8daefacba480cbe5d00966eb0f7c539" translate="yes" xml:space="preserve">
          <source>Note also that changing the prefix of an attribute that is known to have a default value, does not make a new attribute with the default value and the original prefix appear, since the &lt;code&gt;namespaceURI&lt;/code&gt; and &lt;code&gt;localName&lt;/code&gt; do not change.</source>
          <target state="translated">また、デフォルト値を持つことがわかっている属性のプレフィックスを変更しても、 &lt;code&gt;namespaceURI&lt;/code&gt; と &lt;code&gt;localName&lt;/code&gt; は変更されないため、デフォルト値の新しい属性は作成されず、元のプレフィックスが表示されることにも注意してください。</target>
        </trans-unit>
        <trans-unit id="3415595ff91f0cbd82a66f0a6199ce72eabc6469" translate="yes" xml:space="preserve">
          <source>Note also that the boundaries of character references (which are not really entities anyway) are not reported.</source>
          <target state="translated">また、文字参照の境界(いずれにせよ実際には実体ではない)は報告されないことにも注意してください。</target>
        </trans-unit>
        <trans-unit id="b768808bbfa996f7626374e68cb4be0e23bff0a3" translate="yes" xml:space="preserve">
          <source>Note also that the byte array supplied here is cloned to protect against subsequent modifications.</source>
          <target state="translated">また、ここで提供されるバイト配列は、後からの変更を防ぐためにクローン化されていることにも注意してください。</target>
        </trans-unit>
        <trans-unit id="cfa0a19e506cbac9c7a0caddb548dfc2e13e7603" translate="yes" xml:space="preserve">
          <source>Note also that when a duplicate method is dispatched to an invocation handler, the &lt;code&gt;invoke&lt;/code&gt; method may only throw checked exception types that are assignable to one of the exception types in the &lt;code&gt;throws&lt;/code&gt; clause of the method in</source>
          <target state="translated">また、複製メソッドが呼び出しハンドラーにディスパッチされる場合、 &lt;code&gt;invoke&lt;/code&gt; メソッドは、メソッドの &lt;code&gt;throws&lt;/code&gt; 句の例外タイプの1つに割り当て可能なチェックされた例外タイプのみをスローする場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7b42b878e7b76f52fe6f85e121b10f8a80e676dd" translate="yes" xml:space="preserve">
          <source>Note also, that the numeric</source>
          <target state="translated">また、数字の</target>
        </trans-unit>
        <trans-unit id="aeb89a4587f65d207f7dd1a43ebf330f4020926e" translate="yes" xml:space="preserve">
          <source>Note finally that:</source>
          <target state="translated">最後にそのことに注意してください。</target>
        </trans-unit>
        <trans-unit id="f69840527c1bf4616f3175fecba69b0695804c9a" translate="yes" xml:space="preserve">
          <source>Note for implementors</source>
          <target state="translated">実装者への注意事項</target>
        </trans-unit>
        <trans-unit id="4f2e2e958bcbe5c251049e22d87bf27d75ac875a" translate="yes" xml:space="preserve">
          <source>Note however, that there is no guarantee that a particular timeout implementation will be able to notice the passage of time at the same granularity as the given &lt;code&gt;TimeUnit&lt;/code&gt;.</source>
          <target state="translated">ただし、特定のタイムアウト実装が、指定された &lt;code&gt;TimeUnit&lt;/code&gt; と同じ粒度で時間の経過に気付くことができるという保証はありません。</target>
        </trans-unit>
        <trans-unit id="25d5eb0421fbf19c890c4cdd11d935c43403896b" translate="yes" xml:space="preserve">
          <source>Note it is illegal for a BeanContextChild to invoke this method associated with a BeanContext that it is nested within.</source>
          <target state="translated">BeanContextChildが、その中に入れ子になっているBeanContextに関連付けられたこのメソッドを呼び出すことは違法であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c64f31e43d05e3f70c3add1ef329c78da50372dc" translate="yes" xml:space="preserve">
          <source>Note than switching from &lt;a href=&quot;taskbar.state#INDETERMINATE&quot;&gt;&lt;code&gt;INDETERMINATE&lt;/code&gt;&lt;/a&gt; state to any of determinate states may reset value set by &lt;a href=&quot;#setWindowProgressValue(java.awt.Window,int)&quot;&gt;&lt;code&gt;setWindowProgressValue&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">切り替えより音符&lt;a href=&quot;taskbar.state#INDETERMINATE&quot;&gt; &lt;code&gt;INDETERMINATE&lt;/code&gt; &lt;/a&gt;によって値セットをリセットしてもよい確定状態のいずれの状態&lt;a href=&quot;#setWindowProgressValue(java.awt.Window,int)&quot;&gt; &lt;code&gt;setWindowProgressValue&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed1a5713ca95c2fc6cf4c5be606b40352cccb349" translate="yes" xml:space="preserve">
          <source>Note that &quot;the validation&quot; here means &lt;a href=&quot;http://www.w3.org/TR/REC-xml#proc-types&quot;&gt;a validating parser&lt;/a&gt; as defined in the XML recommendation. In other words, it essentially just controls the DTD validation. (except the legacy two properties defined in JAXP 1.2.)</source>
          <target state="translated">ここでの「検証」とは、XML推奨で定義されて&lt;a href=&quot;http://www.w3.org/TR/REC-xml#proc-types&quot;&gt;いる検証パーサー&lt;/a&gt;を意味することに注意してください。言い換えれば、それは本質的にDTD検証を制御するだけです。（JAXP 1.2で定義されている従来の2つのプロパティを除く。）</target>
        </trans-unit>
        <trans-unit id="0dc8e1d721d622d23801e5797defcc02838b37eb" translate="yes" xml:space="preserve">
          <source>Note that &amp;plusmn; means either the plus or minus symbol.</source>
          <target state="translated">&amp;plusmn;はプラス記号またはマイナス記号を意味することに注意してください。</target>
        </trans-unit>
        <trans-unit id="9c3ad0881c64c35034cb892905b46ab9761fecc9" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#setVisible(boolean)&quot;&gt;&lt;code&gt;setVisible(true)&lt;/code&gt;&lt;/a&gt; may be called indirectly (e.g. when showing an owner of the window makes the window to be shown). &lt;a href=&quot;#toFront()&quot;&gt;&lt;code&gt;toFront()&lt;/code&gt;&lt;/a&gt; may also be called indirectly (e.g. when &lt;a href=&quot;#setVisible(boolean)&quot;&gt;&lt;code&gt;setVisible(true)&lt;/code&gt;&lt;/a&gt; is called on already visible window). In all such cases this property takes effect as well.</source>
          <target state="translated">&lt;a href=&quot;#setVisible(boolean)&quot;&gt; &lt;code&gt;setVisible(true)&lt;/code&gt; &lt;/a&gt;は間接的に呼び出される場合があることに注意してください（たとえば、ウィンドウの所有者を表示するとウィンドウが表示される場合）。&lt;a href=&quot;#toFront()&quot;&gt; &lt;code&gt;toFront()&lt;/code&gt; &lt;/a&gt;は、間接的に呼び出されることもあります（たとえば、すでに表示されているウィンドウで&lt;a href=&quot;#setVisible(boolean)&quot;&gt; &lt;code&gt;setVisible(true)&lt;/code&gt; &lt;/a&gt;が呼び出された場合）。このような場合はすべて、このプロパティも有効になります。</target>
        </trans-unit>
        <trans-unit id="12ed974178fb714a814d2645f04845e5748036cd" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../bytebuffer&quot;&gt;&lt;code&gt;ByteBuffers&lt;/code&gt;&lt;/a&gt; are not safe for use by multiple concurrent threads. When a read or write operation is initiated then care must be taken to ensure that the buffer is not accessed until the operation completes.</source>
          <target state="translated">&lt;a href=&quot;../bytebuffer&quot;&gt; &lt;code&gt;ByteBuffers&lt;/code&gt; &lt;/a&gt;は、複数の同時スレッドによる使用には安全ではないことに注意してください。読み取りまたは書き込み操作を開始するときは、操作が完了するまでバッファーにアクセスしないように注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="86a02fd5610229063b40f764c928b1d94a919ac6" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Action&lt;/code&gt; implementations tend to be more expensive in terms of storage than a typical &lt;code&gt;ActionListener&lt;/code&gt;, which does not offer the benefits of centralized control of functionality and broadcast of property changes. For this reason, you should take care to only use &lt;code&gt;Action&lt;/code&gt;s where their benefits are desired, and use simple &lt;code&gt;ActionListener&lt;/code&gt;s elsewhere.</source>
          <target state="translated">&lt;code&gt;Action&lt;/code&gt; 実装は、機能の集中制御とプロパティ変更のブロードキャストの利点を提供しない一般的な &lt;code&gt;ActionListener&lt;/code&gt; よりもストレージの点で高価になる傾向があることに注意してください。このため、利点が必要な場合にのみ &lt;code&gt;Action&lt;/code&gt; を使用し、他の場所では単純な &lt;code&gt;ActionListener&lt;/code&gt; を使用するように注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="e852f1c5096e81d4b549a58e9d4e81aa078fffac" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;AlgorithmConstraints&lt;/code&gt; can be used to represent the restrictions described by the security properties &lt;code&gt;jdk.certpath.disabledAlgorithms&lt;/code&gt; and &lt;code&gt;jdk.tls.disabledAlgorithms&lt;/code&gt;, or could be used by a concrete &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; to check whether a specified certificate in the certification path contains the required algorithm constraints.</source>
          <target state="translated">そのノート &lt;code&gt;AlgorithmConstraints&lt;/code&gt; は制限を表すために使用することができるセキュリティプロパティによって記述 &lt;code&gt;jdk.certpath.disabledAlgorithms&lt;/code&gt; 及び &lt;code&gt;jdk.tls.disabledAlgorithms&lt;/code&gt; 、またはコンクリートで使用することができる &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; 認証パスで指定された証明書が必要なアルゴリズムの制約を含むかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="5693e990b003b1864adf5153513eee2799bd27ff" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Character.isLowerCase(Character.toLowerCase(ch))&lt;/code&gt; does not always return &lt;code&gt;true&lt;/code&gt; for some ranges of characters, particularly those that are symbols or ideographs.</source>
          <target state="translated">&lt;code&gt;Character.isLowerCase(Character.toLowerCase(ch))&lt;/code&gt; は、特定の範囲の文字、特に記号や表意文字の &lt;code&gt;true&lt;/code&gt; 、常にtrueを返すとは限らないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="5aa889906c2bf5b08e727a2e79f7449c0d2c205e" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Character.isLowerCase(Character.toLowerCase(codePoint))&lt;/code&gt; does not always return &lt;code&gt;true&lt;/code&gt; for some ranges of characters, particularly those that are symbols or ideographs.</source>
          <target state="translated">&lt;code&gt;Character.isLowerCase(Character.toLowerCase(codePoint))&lt;/code&gt; は、一部の文字範囲、特に記号や表意文字の &lt;code&gt;true&lt;/code&gt; 、常にtrueを返すとは限らないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="bb53185d5f70e4024135e4a9e50ed39882b81369" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Character.isTitleCase(Character.toTitleCase(ch))&lt;/code&gt; does not always return &lt;code&gt;true&lt;/code&gt; for some ranges of characters.</source>
          <target state="translated">&lt;code&gt;Character.isTitleCase(Character.toTitleCase(ch))&lt;/code&gt; は、一部の文字範囲では常に &lt;code&gt;true&lt;/code&gt; を返すとは限らないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="fd25284bbdbab09b4e5678a23be0e5888d5aab5d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Character.isTitleCase(Character.toTitleCase(codePoint))&lt;/code&gt; does not always return &lt;code&gt;true&lt;/code&gt; for some ranges of characters.</source>
          <target state="translated">&lt;code&gt;Character.isTitleCase(Character.toTitleCase(codePoint))&lt;/code&gt; は、一部の文字範囲に対して常に &lt;code&gt;true&lt;/code&gt; を返すとは限らないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="8c8f5e14f3c45bedc859a28244f2f88bd4fe9f2e" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Character.isUpperCase(Character.toUpperCase(ch))&lt;/code&gt; does not always return &lt;code&gt;true&lt;/code&gt; for some ranges of characters, particularly those that are symbols or ideographs.</source>
          <target state="translated">&lt;code&gt;Character.isUpperCase(Character.toUpperCase(ch))&lt;/code&gt; は、一部の文字範囲、特に記号や表意文字の &lt;code&gt;true&lt;/code&gt; 、常にtrueを返すとは限らないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="07b7edc4a186e5fe675652a0f62c1d3726ac037b" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Character.isUpperCase(Character.toUpperCase(codePoint))&lt;/code&gt; does not always return &lt;code&gt;true&lt;/code&gt; for some ranges of characters, particularly those that are symbols or ideographs.</source>
          <target state="translated">&lt;code&gt;Character.isUpperCase(Character.toUpperCase(codePoint))&lt;/code&gt; は、特定の範囲の文字、特に記号や表意文字の &lt;code&gt;true&lt;/code&gt; 、常にtrueを返すとは限らないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="82a5c68ab87afe780a73e5087aa6eef0b002ca3c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Condition&lt;/code&gt; instances are just normal objects and can themselves be used as the target in a &lt;code&gt;synchronized&lt;/code&gt; statement, and can have their own monitor &lt;a href=&quot;../../../lang/object#wait()&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../lang/object#notify()&quot;&gt;&lt;code&gt;notify&lt;/code&gt;&lt;/a&gt; methods invoked. Acquiring the monitor lock of a &lt;code&gt;Condition&lt;/code&gt; instance, or using its monitor methods, has no specified relationship with acquiring the &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; associated with that &lt;code&gt;Condition&lt;/code&gt; or the use of its &lt;a href=&quot;#await()&quot;&gt;waiting&lt;/a&gt; and &lt;a href=&quot;#signal()&quot;&gt;signalling&lt;/a&gt; methods. It is recommended that to avoid confusion you never use &lt;code&gt;Condition&lt;/code&gt; instances in this way, except perhaps within their own implementation.</source>
          <target state="translated">&lt;code&gt;Condition&lt;/code&gt; インスタンスは単なる通常のオブジェクトであり、それ自体を &lt;code&gt;synchronized&lt;/code&gt; ステートメントのターゲットとして使用でき、独自のモニター&lt;a href=&quot;../../../lang/object#wait()&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;../../../lang/object#notify()&quot;&gt; &lt;code&gt;notify&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことができることに注意してください。 &lt;code&gt;Condition&lt;/code&gt; インスタンスのモニターロックを取得すること、またはそのモニターメソッドを使用することは、その &lt;code&gt;Condition&lt;/code&gt; 関連付けられた&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;を取得すること、またはその&lt;a href=&quot;#await()&quot;&gt;待機&lt;/a&gt;メソッドと&lt;a href=&quot;#signal()&quot;&gt;シグナリング&lt;/a&gt;メソッドの使用とは特定の関係がありません。混乱を避けるために、 &lt;code&gt;Condition&lt;/code&gt; インスタンスをこのように使用しないことをお勧めします。ただし、おそらく独自の実装内を除きます。</target>
        </trans-unit>
        <trans-unit id="969d87b50048d7224a9eb59de62c9c1b4763dcc2" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Condition&lt;/code&gt; instances are just normal objects and can themselves be used as the target in a &lt;code&gt;synchronized&lt;/code&gt; statement, and can have their own monitor &lt;a href=&quot;../../../lang/object#wait-long-&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../lang/object#notify--&quot;&gt;&lt;code&gt;notification&lt;/code&gt;&lt;/a&gt; methods invoked. Acquiring the monitor lock of a &lt;code&gt;Condition&lt;/code&gt; instance, or using its monitor methods, has no specified relationship with acquiring the &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; associated with that &lt;code&gt;Condition&lt;/code&gt; or the use of its &lt;a href=&quot;condition#await--&quot;&gt;waiting&lt;/a&gt; and &lt;a href=&quot;condition#signal--&quot;&gt;signalling&lt;/a&gt; methods. It is recommended that to avoid confusion you never use &lt;code&gt;Condition&lt;/code&gt; instances in this way, except perhaps within their own implementation.</source>
          <target state="translated">&lt;code&gt;Condition&lt;/code&gt; インスタンスは単なる通常のオブジェクトであり、それら自体を &lt;code&gt;synchronized&lt;/code&gt; 文のターゲットとして使用でき、独自のモニター&lt;a href=&quot;../../../lang/object#wait-long-&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;../../../lang/object#notify--&quot;&gt; &lt;code&gt;notification&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことができることに注意してください。 &lt;code&gt;Condition&lt;/code&gt; インスタンスのモニターロックを取得すること、またはそのモニターメソッドを使用することは、その &lt;code&gt;Condition&lt;/code&gt; に関連付けられた&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;を取得することとの関係や、&lt;a href=&quot;condition#await--&quot;&gt;待機&lt;/a&gt;および&lt;a href=&quot;condition#signal--&quot;&gt;シグナリング&lt;/a&gt;メソッドの使用とは関係ありません。混乱を避けるために、おそらく独自の実装内を除いて、この方法で &lt;code&gt;Condition&lt;/code&gt; インスタンスを使用しないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a70b4e5ed3f3c4983741e33483880e735127b353" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;DOMSignContext&lt;/code&gt; instances can contain information and state specific to the XML signature structure it is used with. The results are unpredictable if a &lt;code&gt;DOMSignContext&lt;/code&gt; is used with different signature structures (for example, you should not use the same &lt;code&gt;DOMSignContext&lt;/code&gt; instance to sign two different &lt;a href=&quot;../xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; objects).</source>
          <target state="translated">&lt;code&gt;DOMSignContext&lt;/code&gt; インスタンスには、使用されるXML署名構造に固有の情報と状態を含めることができることに注意してください。 &lt;code&gt;DOMSignContext&lt;/code&gt; が異なる署名構造で使用されている場合、結果は予測できません（たとえば、同じ &lt;code&gt;DOMSignContext&lt;/code&gt; インスタンスを使用して2つの異なる&lt;a href=&quot;../xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt;オブジェクトに署名しないでください）。</target>
        </trans-unit>
        <trans-unit id="29ae460e56b7b6704de58358c727e85a75f2388c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;DataBuffer&lt;/code&gt; objects created by this constructor may be incompatible with &lt;a href=&quot;#optimizations&quot;&gt;performance optimizations&lt;/a&gt; used by some implementations (such as caching an associated image in video memory).</source>
          <target state="translated">このコンストラクターによって作成された &lt;code&gt;DataBuffer&lt;/code&gt; オブジェクトは、一部の実装で使用される&lt;a href=&quot;#optimizations&quot;&gt;パフォーマンスの最適化&lt;/a&gt;（ビデオメモリへの関連画像のキャッシュなど）と互換性がない場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6f918fc3953109e96da3f24e3a8fbe9164fe30f5" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;EndOfLineStringProperty&lt;/code&gt; is set on the &lt;code&gt;Document&lt;/code&gt; using the &lt;code&gt;get/putProperty&lt;/code&gt; methods. Subclasses may override this behavior.</source>
          <target state="translated">&lt;code&gt;EndOfLineStringProperty&lt;/code&gt; は、 &lt;code&gt;get/putProperty&lt;/code&gt; メソッドを使用して &lt;code&gt;Document&lt;/code&gt; 設定されることに注意してください。サブクラスはこの動作をオーバーライドする場合があります。</target>
        </trans-unit>
        <trans-unit id="9aac33f2a5f1a7a961261716f9637e334853df9a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;InputEvent.ALT_MASK&lt;/code&gt; and &lt;code&gt;InputEvent.BUTTON2_MASK&lt;/code&gt; have the same value, so the string &quot;Alt&quot; is returned for both modifiers. Likewise, &lt;code&gt;InputEvent.META_MASK&lt;/code&gt; and &lt;code&gt;InputEvent.BUTTON3_MASK&lt;/code&gt; have the same value, so the string &quot;Meta&quot; is returned for both modifiers.</source>
          <target state="translated">&lt;code&gt;InputEvent.ALT_MASK&lt;/code&gt; と &lt;code&gt;InputEvent.BUTTON2_MASK&lt;/code&gt; の値は同じであるため、両方の修飾子に対して文字列「Alt」が返されることに注意してください。同様に、 &lt;code&gt;InputEvent.META_MASK&lt;/code&gt; と &lt;code&gt;InputEvent.BUTTON3_MASK&lt;/code&gt; の値は同じであるため、両方の修飾子に対して文字列「Meta」が返されます。</target>
        </trans-unit>
        <trans-unit id="6e67c10a68b4ce5270a804b321b07cb53f599c6a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;JTree&lt;/code&gt; does not allow duplicate nodes to exist as children under the same parent -- each sibling must be a unique object.</source>
          <target state="translated">&lt;code&gt;JTree&lt;/code&gt; では、重複ノードが同じ親の下に子として存在することは許可されていないことに注意してください。各兄弟は一意のオブジェクトである必要があります。</target>
        </trans-unit>
        <trans-unit id="a821a7e3fe652987c6f808883be56e12f061adcd" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Lock&lt;/code&gt; instances are just normal objects and can themselves be used as the target in a &lt;code&gt;synchronized&lt;/code&gt; statement. Acquiring the monitor lock of a &lt;code&gt;Lock&lt;/code&gt; instance has no specified relationship with invoking any of the &lt;a href=&quot;#lock()&quot;&gt;&lt;code&gt;lock()&lt;/code&gt;&lt;/a&gt; methods of that instance. It is recommended that to avoid confusion you never use &lt;code&gt;Lock&lt;/code&gt; instances in this way, except within their own implementation.</source>
          <target state="translated">&lt;code&gt;Lock&lt;/code&gt; インスタンスは単なる通常のオブジェクトであり、それ自体を &lt;code&gt;synchronized&lt;/code&gt; ステートメントのターゲットとして使用できることに注意してください。 &lt;code&gt;Lock&lt;/code&gt; インスタンスのモニターロックを取得することは、そのインスタンスの&lt;a href=&quot;#lock()&quot;&gt; &lt;code&gt;lock()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すこととは特定の関係がありません。混乱を避けるために、独自の実装内を除いて、この方法で &lt;code&gt;Lock&lt;/code&gt; インスタンスを使用しないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="367f0b7925cfd2c4b0a6daab998802bf5d3119aa" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Lock&lt;/code&gt; instances are just normal objects and can themselves be used as the target in a &lt;code&gt;synchronized&lt;/code&gt; statement. Acquiring the monitor lock of a &lt;code&gt;Lock&lt;/code&gt; instance has no specified relationship with invoking any of the &lt;a href=&quot;lock#lock--&quot;&gt;&lt;code&gt;lock()&lt;/code&gt;&lt;/a&gt; methods of that instance. It is recommended that to avoid confusion you never use &lt;code&gt;Lock&lt;/code&gt; instances in this way, except within their own implementation.</source>
          <target state="translated">&lt;code&gt;Lock&lt;/code&gt; インスタンスは単なる通常のオブジェクトであり、それら自体を &lt;code&gt;synchronized&lt;/code&gt; ステートメントのターゲットとして使用できることに注意してください。 &lt;code&gt;Lock&lt;/code&gt; インスタンスの監視ロックの取得は、そのインスタンスの&lt;a href=&quot;lock#lock--&quot;&gt; &lt;code&gt;lock()&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しとの特定の関係はありません。混乱を避けるために、独自の実装内を除いて、この方法で &lt;code&gt;Lock&lt;/code&gt; インスタンスを使用しないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="6faa14e5b89a9daf35b25e8e85a4251d2dc97553" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;SNIHostName&lt;/code&gt; objects are immutable.</source>
          <target state="translated">&lt;code&gt;SNIHostName&lt;/code&gt; オブジェクトは不変であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9bae93caba5db3c302ed21e48c54c4ee96b50aa2" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;XMLCryptoContext&lt;/code&gt; instances can contain information and state specific to the XML cryptographic structure it is used with. The results are unpredictable if an &lt;code&gt;XMLCryptoContext&lt;/code&gt; is used with multiple structures (for example, you should not use the same &lt;a href=&quot;dsig/xmlvalidatecontext&quot;&gt;&lt;code&gt;XMLValidateContext&lt;/code&gt;&lt;/a&gt; instance to validate two different &lt;a href=&quot;dsig/xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; objects).</source>
          <target state="translated">&lt;code&gt;XMLCryptoContext&lt;/code&gt; インスタンスには、使用されるXML暗号化構造に固有の情報と状態を含めることができることに注意してください。 &lt;code&gt;XMLCryptoContext&lt;/code&gt; が複数の構造で使用されている場合、結果は予測できません（たとえば、2つの異なる&lt;a href=&quot;dsig/xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt;オブジェクトを検証するために同じ&lt;a href=&quot;dsig/xmlvalidatecontext&quot;&gt; &lt;code&gt;XMLValidateContext&lt;/code&gt; &lt;/a&gt;インスタンスを使用しないでください）。</target>
        </trans-unit>
        <trans-unit id="c7997674069ee6e64fa278ecbd2e6eb9b1e39f2c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;XMLSignContext&lt;/code&gt; instances can contain information and state specific to the XML signature structure it is used with. The results are unpredictable if an &lt;code&gt;XMLSignContext&lt;/code&gt; is used with different signature structures (for example, you should not use the same &lt;code&gt;XMLSignContext&lt;/code&gt; instance to sign two different &lt;a href=&quot;xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; objects).</source>
          <target state="translated">&lt;code&gt;XMLSignContext&lt;/code&gt; インスタンスには、使用されるXML署名構造に固有の情報と状態を含めることができることに注意してください。 &lt;code&gt;XMLSignContext&lt;/code&gt; が異なる署名構造で使用されている場合、結果は予測できません（たとえば、同じ &lt;code&gt;XMLSignContext&lt;/code&gt; インスタンスを使用して2つの異なる&lt;a href=&quot;xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt;オブジェクトに署名しないでください）。</target>
        </trans-unit>
        <trans-unit id="430331749e21d3028998a89baa30ce980051c258" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;XMLValidateContext&lt;/code&gt; instances can contain information and state specific to the XML signature structure it is used with. The results are unpredictable if an &lt;code&gt;XMLValidateContext&lt;/code&gt; is used with different signature structures (for example, you should not use the same &lt;code&gt;XMLValidateContext&lt;/code&gt; instance to validate two different &lt;a href=&quot;xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; objects).</source>
          <target state="translated">&lt;code&gt;XMLValidateContext&lt;/code&gt; インスタンスには、使用されるXML署名構造に固有の情報と状態を含めることができることに注意してください。 &lt;code&gt;XMLValidateContext&lt;/code&gt; が異なる署名構造で使用されている場合、結果は予測できません（たとえば、2つの異なる&lt;a href=&quot;xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt;オブジェクトを検証するために同じ &lt;code&gt;XMLValidateContext&lt;/code&gt; インスタンスを使用しないでください）。</target>
        </trans-unit>
        <trans-unit id="01b565aa70f1c705688ee75054f8530632c06266" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;checkPermission&lt;/code&gt; always performs security checks within the context of the currently executing thread. Sometimes a security check that should be made within a given context will actually need to be done from within a</source>
          <target state="translated">&lt;code&gt;checkPermission&lt;/code&gt; は常に、現在実行中のスレッドのコンテキスト内でセキュリティチェックを実行することに注意してください。特定のコンテキスト内で行う必要があるセキュリティチェックは、実際には</target>
        </trans-unit>
        <trans-unit id="e070ad3eeb169492de9989f4604e9e475494594d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;fma(a, 1.0, c)&lt;/code&gt; returns the same result as (&lt;code&gt;a + c&lt;/code&gt;). However, &lt;code&gt;fma(a, b, +0.0)&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; always return the same result as (&lt;code&gt;a * b&lt;/code&gt;) since &lt;code&gt;fma(-0.0, +0.0, +0.0)&lt;/code&gt; is &lt;code&gt;+0.0&lt;/code&gt; while (&lt;code&gt;-0.0 * +0.0&lt;/code&gt;) is &lt;code&gt;-0.0&lt;/code&gt;; &lt;code&gt;fma(a, b, -0.0)&lt;/code&gt; is equivalent to (&lt;code&gt;a * b&lt;/code&gt;) however.</source>
          <target state="translated">&lt;code&gt;fma(a, 1.0, c)&lt;/code&gt; は（ &lt;code&gt;a + c&lt;/code&gt; ）と同じ結果を返すことに注意してください。ただし、 &lt;code&gt;fma(a, b, +0.0)&lt;/code&gt; &lt;code&gt;fma(-0.0, +0.0, +0.0)&lt;/code&gt; は &lt;code&gt;+0.0&lt;/code&gt; であり、（- &lt;code&gt;-0.0 * +0.0&lt;/code&gt; ）は &lt;code&gt;-0.0&lt;/code&gt; であるため、fma（a、b、+ 0.0）は常に（ &lt;code&gt;a * b&lt;/code&gt; ）と同じ結果を返すとは限りませ&lt;em&gt;ん。&lt;/em&gt; ; &lt;code&gt;fma(a, b, -0.0)&lt;/code&gt; は（ &lt;code&gt;a * b&lt;/code&gt; ）と同等です。</target>
        </trans-unit>
        <trans-unit id="46d28d0b05402322819c21979cfdfcb98e5b1456" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;fma(a, 1.0f, c)&lt;/code&gt; returns the same result as (&lt;code&gt;a + c&lt;/code&gt;). However, &lt;code&gt;fma(a, b, +0.0f)&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; always return the same result as (&lt;code&gt;a * b&lt;/code&gt;) since &lt;code&gt;fma(-0.0f, +0.0f, +0.0f)&lt;/code&gt; is &lt;code&gt;+0.0f&lt;/code&gt; while (&lt;code&gt;-0.0f * +0.0f&lt;/code&gt;) is &lt;code&gt;-0.0f&lt;/code&gt;; &lt;code&gt;fma(a, b, -0.0f)&lt;/code&gt; is equivalent to (&lt;code&gt;a * b&lt;/code&gt;) however.</source>
          <target state="translated">&lt;code&gt;fma(a, 1.0f, c)&lt;/code&gt; は（ &lt;code&gt;a + c&lt;/code&gt; ）と同じ結果を返すことに注意してください。ただし、 &lt;code&gt;fma(a, b, +0.0f)&lt;/code&gt; &lt;code&gt;fma(-0.0f, +0.0f, +0.0f)&lt;/code&gt; は &lt;code&gt;+0.0f&lt;/code&gt; であり、（- &lt;code&gt;-0.0f * +0.0f&lt;/code&gt; ）であるため、fma（a、b、+ 0.0f）は常に（ &lt;code&gt;a * b&lt;/code&gt; ）と同じ結果を返すとは限りませ&lt;em&gt;ん。&lt;/em&gt;+ 0.0f）は &lt;code&gt;-0.0f&lt;/code&gt; ; &lt;code&gt;fma(a, b, -0.0f)&lt;/code&gt; は（ &lt;code&gt;a * b&lt;/code&gt; ）と同等です。</target>
        </trans-unit>
        <trans-unit id="751635249b1851770502231c6f5f7e862fbadb4c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;fusedMac(a, 1.0, c)&lt;/code&gt; returns the same result as (&lt;code&gt;a + c&lt;/code&gt;). However, &lt;code&gt;fusedMac(a, b, +0.0)&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; always return the same result as (&lt;code&gt;a * b&lt;/code&gt;) since &lt;code&gt;fusedMac(-0.0, +0.0, +0.0)&lt;/code&gt; is &lt;code&gt;+0.0&lt;/code&gt; while (&lt;code&gt;-0.0 * +0.0&lt;/code&gt;) is &lt;code&gt;-0.0&lt;/code&gt;; &lt;code&gt;fusedMac(a, b, -0.0)&lt;/code&gt; is equivalent to (&lt;code&gt;a * b&lt;/code&gt;) however.</source>
          <target state="translated">&lt;code&gt;fusedMac(a, 1.0, c)&lt;/code&gt; は（ &lt;code&gt;a + c&lt;/code&gt; ）と同じ結果を返すことに注意してください。ただし、 &lt;code&gt;fusedMac(a, b, +0.0)&lt;/code&gt; &lt;code&gt;fusedMac(-0.0, +0.0, +0.0)&lt;/code&gt; 、+ 0.0）は &lt;code&gt;+0.0&lt;/code&gt; であり、（- &lt;code&gt;-0.0 * +0.0&lt;/code&gt; ）は &lt;code&gt;-0.0&lt;/code&gt; であるため、fusedMac（a、b、+ 0.0）は常に（ &lt;code&gt;a * b&lt;/code&gt; ）と同じ結果を返すとは限りませ&lt;em&gt;ん。&lt;/em&gt; ; &lt;code&gt;fusedMac(a, b, -0.0)&lt;/code&gt; は（ &lt;code&gt;a * b&lt;/code&gt; ）と同等です。</target>
        </trans-unit>
        <trans-unit id="f1d3ec9620fedb70bb0ad4b44c5b26740fa77bfe" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;getTransferable()&lt;/code&gt; on the &lt;code&gt;DropTargetDragEvent&lt;/code&gt; instance should only be called within the respective listener's method and all the necessary data should be retrieved from the returned &lt;code&gt;Transferable&lt;/code&gt; before that method returns.</source>
          <target state="translated">そのノート &lt;code&gt;getTransferable()&lt;/code&gt; 上 &lt;code&gt;DropTargetDragEvent&lt;/code&gt; インスタンスのみ各リスナーのメソッド内で呼び出されるべきであり、すべての必要なデータが返さから取得されるべきである &lt;code&gt;Transferable&lt;/code&gt; そのメソッドが戻る前に。</target>
        </trans-unit>
        <trans-unit id="715c104a070d9004f80b0ac211711f9a1d352c0d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;lhs.add(rhs)&lt;/code&gt; will be always successful if &lt;code&gt;lhs.signum()*rhs.signum()!=-1&lt;/code&gt; or both of them are normalized.</source>
          <target state="translated">&lt;code&gt;lhs.signum()*rhs.signum()!=-1&lt;/code&gt; またはその両方が正規化されている場合、 &lt;code&gt;lhs.add(rhs)&lt;/code&gt; は常に成功することに注意してください。</target>
        </trans-unit>
        <trans-unit id="c303f9d44f43e70fd8034e20e43466a550c2db93" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;next()&lt;/code&gt; can also throw the runtime exception NoSuchElementException to indicate that the caller is attempting to enumerate beyond the end of the enumeration. This is different from a NamingException, which indicates that there was a problem in obtaining the next element, for example, due to a referral or server unavailability, etc.</source>
          <target state="translated">&lt;code&gt;next()&lt;/code&gt; はランタイム例外NoSuchElementExceptionをスローして、呼び出し元が列挙の終わりを超えて列挙しようとしていることを示すこともできることに注意してください。これはNamingExceptionとは異なります。NamingExceptionは、たとえば、参照やサーバーが利用できないなどの理由で、次の要素の取得に問題があったことを示します。</target>
        </trans-unit>
        <trans-unit id="0f0f28fe91cf34c0e242b03fcbbbe1817969dcb2" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;requestControls&lt;/code&gt; will be in effect until the next invocation of &lt;code&gt;setRequestControls()&lt;/code&gt;. You need to explicitly invoke &lt;code&gt;setRequestControls()&lt;/code&gt; with &lt;code&gt;null&lt;/code&gt; or an empty array to clear the controls if you don't want them to affect the context methods any more. To check what request controls are in effect for this context, use &lt;code&gt;getRequestControls()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;requestControls&lt;/code&gt; は、次に &lt;code&gt;setRequestControls()&lt;/code&gt; が呼び出されるまで有効であることに注意してください。コントロールがコンテキストメソッドに影響を与えたくない場合は、コントロールをクリアするために、 &lt;code&gt;null&lt;/code&gt; または空の配列で &lt;code&gt;setRequestControls()&lt;/code&gt; を明示的に呼び出す必要があります。このコンテキストで有効なリクエストコントロールを確認するには、 &lt;code&gt;getRequestControls()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="2f555cd9496b7c4ad8d14b942e1f570687e14dab" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;toArray(new Object[0])&lt;/code&gt; is identical in function to &lt;code&gt;toArray()&lt;/code&gt;.</source>
          <target state="translated">そのノート &lt;code&gt;toArray(new Object[0])&lt;/code&gt; と機能的に同一であり、 &lt;code&gt;toArray()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8acbfd4505485a853ac64781fc06165e36d48cf" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tryFinally&lt;/code&gt; never converts exceptions into normal returns. In rare cases where exceptions must be converted in that way, first wrap the target with &lt;a href=&quot;#catchException(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle)&quot;&gt;&lt;code&gt;catchException(MethodHandle, Class, MethodHandle)&lt;/code&gt;&lt;/a&gt; to capture an outgoing exception, and then wrap with &lt;code&gt;tryFinally&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tryFinally&lt;/code&gt; が例外を通常のリターンに変換しないことに注意してください。例外をそのように変換する必要があるまれなケースでは、最初にターゲットを&lt;a href=&quot;#catchException(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle)&quot;&gt; &lt;code&gt;catchException(MethodHandle, Class, MethodHandle)&lt;/code&gt; &lt;/a&gt;ラップして発信例外をキャプチャし、次に &lt;code&gt;tryFinally&lt;/code&gt; でラップします。</target>
        </trans-unit>
        <trans-unit id="c801893278bac63085faee1ba97fecc2829be1a8" translate="yes" xml:space="preserve">
          <source>Note that GCM mode has a uniqueness requirement on IVs used in encryption with a given key. When IVs are repeated for GCM encryption, such usages are subject to forgery attacks. Thus, after each encryption operation using GCM mode, callers should re-initialize the cipher objects with GCM parameters which has a different IV value.</source>
          <target state="translated">GCM モードでは、与えられたキーで暗号化する際に使用される IV に一意性が要求されることに注意してください。GCM 暗号化で IV が繰り返されると、そのような使用は偽造攻撃の対象となります。したがって、GCM モードを使用した各暗号化操作の後、呼び出し元は、異なる IV 値を持つ GCM パラメータで暗号オブジェクトを再初期化する必要があります。</target>
        </trans-unit>
        <trans-unit id="a364e70bb1bbc694d72d1d3b629a30773aa861de" translate="yes" xml:space="preserve">
          <source>Note that GCM mode has a uniqueness requirement on IVs used in encryption with a given key. When IVs are repeated for GCM encryption, such usages are subject to forgery attacks. Thus, after each encryption operation using GCM mode, callers should re-initialize the cipher objects with GCM parameters which have a different IV value.</source>
          <target state="translated">GCM モードでは、与えられたキーで暗号化する際に使用される IV に一意性が要求されることに注意してください。GCM 暗号化で IV が繰り返されると、そのような使用は偽造攻撃の対象となります。したがって、GCM モードを使用した各暗号化操作の後、呼び出し元は、異なる IV 値を持つ GCM パラメータで暗号オブジェクトを再初期化する必要があります。</target>
        </trans-unit>
        <trans-unit id="b535f9d0cd0047457206fd619751083580f479e2" translate="yes" xml:space="preserve">
          <source>Note that Group extends Principal. Thus, either a Principal or a Group can be passed as an argument to methods containing a Principal parameter. For example, you can add either a Principal or a Group to a Group object by calling the object's &lt;code&gt;addMember&lt;/code&gt; method, passing it the Principal or Group.</source>
          <target state="translated">GroupはPrincipalを拡張することに注意してください。したがって、プリンシパルまたはグループのいずれかを、プリンシパルパラメーターを含むメソッドに引数として渡すことができます。たとえば、オブジェクトの &lt;code&gt;addMember&lt;/code&gt; メソッドを呼び出してPrincipalまたはGroupを渡すことにより、PrincipalまたはGroupをGroupオブジェクトに追加できます。</target>
        </trans-unit>
        <trans-unit id="80e9fd658071ec35671ad6b6a0b5878b5eb26240" translate="yes" xml:space="preserve">
          <source>Note that KeyboardFocusManager itself implements KeyEventDispatcher. By default, the current KeyboardFocusManager will be the sink for all KeyEvents not dispatched by the registered KeyEventDispatchers. The current KeyboardFocusManager cannot be completely deregistered as a KeyEventDispatcher. However, if a KeyEventDispatcher reports that it dispatched the KeyEvent, regardless of whether it actually did so, the KeyboardFocusManager will take no further action with regard to the KeyEvent. (While it is possible for client code to register the current KeyboardFocusManager as a KeyEventDispatcher one or more times, this is usually unnecessary and not recommended.)</source>
          <target state="translated">KeyboardFocusManager 自体が KeyEventDispatcher を実装していることに注意してください。既定では、現在の KeyboardFocusManager は、登録された KeyEventDispatcher によってディスパッチされないすべての KeyEvent のシンクになります。現在の KeyboardFocusManager は、KeyEventDispatcher として完全に登録を解除することはできません。ただし、KeyEventDispatcher が KeyEvent をディスパッチしたと報告した場合、実際にディスパッチしたかどうかにかかわらず、KeyboardFocusManager は、KeyEvent に関するそれ以上のアクションを取りません。(クライアント・コードで現在の KeyboardFocusManager を 1 回以上、KeyEventDispatcher として登録することは可能ですが、これは通常は不要であり、推奨されません)。</target>
        </trans-unit>
        <trans-unit id="6bd45960e81f3c6748a26ca766fa292258b3b3ca" translate="yes" xml:space="preserve">
          <source>Note that SAX is a callback architecture and the returned SAXResult has a content handler assigned that will receive the SAX events based on the contents of the XML. Call the content handler with the contents of the XML document to assign the values.</source>
          <target state="translated">SAXはコールバックアーキテクチャであり、返されたSAXResultには、XMLの内容に基づいてSAXイベントを受信するコンテンツハンドラが割り当てられていることに注意してください。XML ドキュメントの内容を持つコンテンツ ハンドラを呼び出して、値を割り当てます。</target>
        </trans-unit>
        <trans-unit id="c89a5d54509298d329502e45b16c2343525bab8a" translate="yes" xml:space="preserve">
          <source>Note that SAX is a callback architecture, so a returned SAXSource should then be set with a content handler that will receive the SAX events from parsing. The content handler will receive callbacks based on the contents of the XML.</source>
          <target state="translated">SAXはコールバックアーキテクチャであることに注意してください。そのため、返されたSAXSourceには、解析からSAXイベントを受信するコンテンツハンドラを設定する必要があります。コンテンツハンドラは、XMLの内容に基づいてコールバックを受け取ります。</target>
        </trans-unit>
        <trans-unit id="a4c996848157f75849887d36b83d74b354c75b6e" translate="yes" xml:space="preserve">
          <source>Note that Source and Destination may be the same object.</source>
          <target state="translated">ソースとデスティネーションは同じオブジェクトである可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="753e0f11ad0db5ec8b955c024e9f76a2de7a424d" translate="yes" xml:space="preserve">
          <source>Note that TemplatesHandler does not need to implement LexicalHandler.</source>
          <target state="translated">TemplatesHandlerはLexicalHandlerを実装する必要がないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="3af69e2315676a2db438b4e94f0d1a09056758cd" translate="yes" xml:space="preserve">
          <source>Note that XSLT requires namespace support. Attempting to transform a DOM that was not contructed with a namespace-aware parser may result in errors. Parsers can be made namespace aware by calling &lt;a href=&quot;../../parsers/documentbuilderfactory#setNamespaceAware(boolean)&quot;&gt;&lt;code&gt;DocumentBuilderFactory.setNamespaceAware(boolean awareness)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">XSLTには名前空間のサポートが必要であることに注意してください。名前空間対応パーサーで構築されていないDOMを変換しようとすると、エラーが発生する可能性があります。パーサーは、&lt;a href=&quot;../../parsers/documentbuilderfactory#setNamespaceAware(boolean)&quot;&gt; &lt;code&gt;DocumentBuilderFactory.setNamespaceAware(boolean awareness)&lt;/code&gt; &lt;/a&gt;呼び出すことで名前空間を認識させることができます。</target>
        </trans-unit>
        <trans-unit id="ebf79c69c1a7ac02ecbb2ddb908527c39c1b4d46" translate="yes" xml:space="preserve">
          <source>Note that XSLT requires namespace support. Attempting to transform an input source that is not generated with a namespace-aware parser may result in errors. Parsers can be made namespace aware by calling the &lt;a href=&quot;../../parsers/saxparserfactory#setNamespaceAware(boolean)&quot;&gt;&lt;code&gt;SAXParserFactory.setNamespaceAware(boolean awareness)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">XSLTには名前空間のサポートが必要であることに注意してください。名前空間対応パーサーで生成されていない入力ソースを変換しようとすると、エラーが発生する可能性があります。パーサーは、&lt;a href=&quot;../../parsers/saxparserfactory#setNamespaceAware(boolean)&quot;&gt; &lt;code&gt;SAXParserFactory.setNamespaceAware(boolean awareness)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで名前空間を認識させることができます。</target>
        </trans-unit>
        <trans-unit id="d25a7ac12fda91dbfe31fd9689fdc60cfd4bbf4f" translate="yes" xml:space="preserve">
          <source>Note that a</source>
          <target state="translated">ということに注意してください。</target>
        </trans-unit>
        <trans-unit id="292883bb7d98195813924dadc5a5af6a32e90fb3" translate="yes" xml:space="preserve">
          <source>Note that a &lt;code&gt;Rectangle&lt;/code&gt; constructed with the default no-argument constructor will have dimensions of &lt;code&gt;0x0&lt;/code&gt; and therefore be empty. That &lt;code&gt;Rectangle&lt;/code&gt; will still have a location of &lt;code&gt;(0,0)&lt;/code&gt; and will contribute that location to the union and add operations. Code attempting to accumulate the bounds of a set of points should therefore initially construct the &lt;code&gt;Rectangle&lt;/code&gt; with a specifically negative width and height or it should use the first point in the set to construct the &lt;code&gt;Rectangle&lt;/code&gt;. For example:</source>
          <target state="translated">デフォルトの引数なしコンストラクターで作成された &lt;code&gt;Rectangle&lt;/code&gt; の次元は &lt;code&gt;0x0&lt;/code&gt; であるため、空であることに注意してください。その &lt;code&gt;Rectangle&lt;/code&gt; の場所は &lt;code&gt;(0,0)&lt;/code&gt; のままであり、その場所を共用体と追加操作に提供します。したがって、点のセットの境界を累積しようとするコードは、最初に特定の負の幅と高さで &lt;code&gt;Rectangle&lt;/code&gt; を作成するか、セットの最初の点を使用して &lt;code&gt;Rectangle&lt;/code&gt; を作成する必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="7198a7a427aa50326b21907238753517c6fa2c54" translate="yes" xml:space="preserve">
          <source>Note that a &lt;code&gt;SizeSequence&lt;/code&gt; object simply represents intervals along an axis. In our examples, the intervals represent height or width in pixels. However, any other unit of measure (for example, time in days) could be just as valid.</source>
          <target state="translated">&lt;code&gt;SizeSequence&lt;/code&gt; オブジェクトは、単に軸に沿った間隔を表すことに注意してください。この例では、間隔は高さまたは幅をピクセル単位で表します。ただし、他の測定単位（たとえば、日数）も同様に有効である可能性があります。</target>
        </trans-unit>
        <trans-unit id="b054443557175839f163b29e72d58ee850c306ea" translate="yes" xml:space="preserve">
          <source>Note that a &lt;code&gt;StreamPrintService&lt;/code&gt; is different from a &lt;code&gt;PrintService&lt;/code&gt;, which supports a &lt;a href=&quot;attribute/standard/destination&quot;&gt;&lt;code&gt;Destination&lt;/code&gt;&lt;/a&gt; attribute. A &lt;code&gt;StreamPrintService&lt;/code&gt; always requires an output stream, whereas a &lt;code&gt;PrintService&lt;/code&gt; optionally accepts a &lt;code&gt;Destination&lt;/code&gt;. A &lt;code&gt;StreamPrintService&lt;/code&gt; has no default destination for its formatted output. Additionally a &lt;code&gt;StreamPrintService&lt;/code&gt; is expected to generate output in a format useful in other contexts. &lt;code&gt;StreamPrintService&lt;/code&gt;'s are not expected to support the &lt;code&gt;Destination&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;StreamPrintService&lt;/code&gt; は、&lt;a href=&quot;attribute/standard/destination&quot;&gt; &lt;code&gt;Destination&lt;/code&gt; &lt;/a&gt;属性をサポートする &lt;code&gt;PrintService&lt;/code&gt; とは異なることに注意してください。 A &lt;code&gt;StreamPrintService&lt;/code&gt; に対し常に、出力ストリームを必要とする &lt;code&gt;PrintService&lt;/code&gt; 必要に応じて受け付ける &lt;code&gt;Destination&lt;/code&gt; 。 A &lt;code&gt;StreamPrintService&lt;/code&gt; には、その形式の出力には、デフォルトの保存先を持っていません。さらに、 &lt;code&gt;StreamPrintService&lt;/code&gt; は、他のコンテキストで役立つ形式で出力を生成することが期待されています。 &lt;code&gt;StreamPrintService&lt;/code&gt; は、 &lt;code&gt;Destination&lt;/code&gt; 属性をサポートすることは期待されていません。</target>
        </trans-unit>
        <trans-unit id="e6c5b53d66cdf13bfe013b84a77971bbdf1792ff" translate="yes" xml:space="preserve">
          <source>Note that a &lt;code&gt;StreamPrintService&lt;/code&gt; is different from a &lt;code&gt;PrintService&lt;/code&gt;, which supports a &lt;a href=&quot;attribute/standard/destination&quot;&gt;&lt;code&gt;Destination&lt;/code&gt;&lt;/a&gt; attribute. A &lt;code&gt;StreamPrintService&lt;/code&gt; always requires an output stream, whereas a &lt;code&gt;PrintService&lt;/code&gt; optionally accepts a &lt;code&gt;Destination&lt;/code&gt;. A &lt;code&gt;StreamPrintService&lt;/code&gt; has no default destination for its formatted output. Additionally a &lt;code&gt;StreamPrintService&lt;/code&gt; is expected to generate output in a format useful in other contexts. StreamPrintService's are not expected to support the Destination attribute.</source>
          <target state="translated">&lt;code&gt;StreamPrintService&lt;/code&gt; は、&lt;a href=&quot;attribute/standard/destination&quot;&gt; &lt;code&gt;Destination&lt;/code&gt; &lt;/a&gt;属性をサポートする &lt;code&gt;PrintService&lt;/code&gt; とは異なることに注意してください。A &lt;code&gt;StreamPrintService&lt;/code&gt; に対し常に、出力ストリームを必要とする &lt;code&gt;PrintService&lt;/code&gt; 必要に応じて受け付ける &lt;code&gt;Destination&lt;/code&gt; 。A &lt;code&gt;StreamPrintService&lt;/code&gt; には、その形式の出力には、デフォルトの保存先を持っていません。さらに、 &lt;code&gt;StreamPrintService&lt;/code&gt; は、他のコンテキストで役立つ形式で出力を生成することが期待されています。StreamPrintServiceはDestination属性をサポートすることは想定されていません。</target>
        </trans-unit>
        <trans-unit id="065b9c893c941cc91da53a4905e46e77cc4e3448" translate="yes" xml:space="preserve">
          <source>Note that a &lt;code&gt;getRegistry&lt;/code&gt; call does not actually make a connection to the remote host. It simply creates a local reference to the remote registry and will succeed even if no registry is running on the remote host. Therefore, a subsequent method invocation to a remote registry returned as a result of this method may fail.</source>
          <target state="translated">&lt;code&gt;getRegistry&lt;/code&gt; 呼び出しは、実際にはリモートホストに接続しないことに注意してください。リモートレジストリへのローカル参照を作成するだけで、リモートホストでレジストリが実行されていない場合でも成功します。したがって、このメソッドの結果として返されたリモートレジストリへの後続のメソッド呼び出しは失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="8621800d2c0a1c4838da7f61bd55d73d7a8cb633" translate="yes" xml:space="preserve">
          <source>Note that a BeanContextChild may refuse a change in state by throwing PropertyVetoedException in response.</source>
          <target state="translated">BeanContextChildは,応答でPropertyVetoedExceptionを投げることで状態の変更を拒否することができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9892fd70eedf9e4246f57ad5454b2aad55a8ae12" translate="yes" xml:space="preserve">
          <source>Note that a Namespace URI can be bound to &lt;strong&gt;multiple&lt;/strong&gt; prefixes in the current scope. This can occur when multiple &lt;code&gt;XMLConstants.XMLNS_ATTRIBUTE&lt;/code&gt; (&quot;xmlns&quot;) Namespace declarations occur in the same Start-Tag and refer to the same Namespace URI. e.g.</source>
          <target state="translated">名前空間URIは、現在のスコープ内の&lt;strong&gt;複数の&lt;/strong&gt;プレフィックスにバインドできることに注意してください。これは、複数の &lt;code&gt;XMLConstants.XMLNS_ATTRIBUTE&lt;/code&gt; （ &quot;xmlns&quot;）名前空間宣言が同じ開始タグで発生し、同じ名前空間URIを参照している場合に発生する可能性があります。例えば</target>
        </trans-unit>
        <trans-unit id="1c0b4c6bad4822981c50fad9af3bead9581677b1" translate="yes" xml:space="preserve">
          <source>Note that a caller must use the same &lt;code&gt;KeyInfoFactory&lt;/code&gt; instance to create the &lt;code&gt;XMLStructure&lt;/code&gt;s of a particular &lt;code&gt;KeyInfo&lt;/code&gt; object. The behavior is undefined if &lt;code&gt;XMLStructure&lt;/code&gt;s from different providers or different mechanism types are used together.</source>
          <target state="translated">呼び出し元は、同じ &lt;code&gt;KeyInfoFactory&lt;/code&gt; インスタンスを使用して、特定の &lt;code&gt;KeyInfo&lt;/code&gt; オブジェクトの &lt;code&gt;XMLStructure&lt;/code&gt; を作成する必要があることに注意してください。異なるプロバイダーまたは異なるメカニズムタイプの &lt;code&gt;XMLStructure&lt;/code&gt; が一緒に使用されている場合、動作は定義されていません。</target>
        </trans-unit>
        <trans-unit id="7dfc6ceda52f5bdfc1053bd4356fcab3358647c2" translate="yes" xml:space="preserve">
          <source>Note that a caller must use the same &lt;code&gt;XMLSignatureFactory&lt;/code&gt; instance to create the &lt;code&gt;XMLStructure&lt;/code&gt;s of a particular &lt;code&gt;XMLSignature&lt;/code&gt; that is to be generated. The behavior is undefined if &lt;code&gt;XMLStructure&lt;/code&gt;s from different providers or different mechanism types are used together.</source>
          <target state="translated">呼び出し元は、同じ &lt;code&gt;XMLSignatureFactory&lt;/code&gt; インスタンスを使用して、生成される特定の &lt;code&gt;XMLSignature&lt;/code&gt; の &lt;code&gt;XMLStructure&lt;/code&gt; を作成する必要があることに注意してください。異なるプロバイダーまたは異なるメカニズムタイプの &lt;code&gt;XMLStructure&lt;/code&gt; が一緒に使用されている場合、動作は定義されていません。</target>
        </trans-unit>
        <trans-unit id="8f4b7753322255a2f437b72f68cd516efff9e2d7" translate="yes" xml:space="preserve">
          <source>Note that a common prefix length of &lt;code&gt;0&lt;/code&gt; indicates that the first elements from each array mismatch.</source>
          <target state="translated">共通のプレフィックス長 &lt;code&gt;0&lt;/code&gt; は、各配列の最初の要素が一致しないことを示していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a9595bc40bab29ca925be13eb25848bd5356768e" translate="yes" xml:space="preserve">
          <source>Note that a conflict is a situation where the &lt;code&gt;RowSet&lt;/code&gt; object's original values for a row do not match the values in the data source, which indicates that the data source row has been modified since the last synchronization. Note also that a &lt;code&gt;RowSet&lt;/code&gt; object's original values are the values it had just prior to the the last synchronization, which are not necessarily its initial values.</source>
          <target state="translated">競合とは、 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトの行の元の値がデータソースの値と一致しない状況であることに注意してください。これは、データソースの行が最後の同期以降に変更されたことを示します。 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトの元の値は、最後の同期の直前にあった値であり、必ずしも初期値であるとは限らないことにも注意してください。</target>
        </trans-unit>
        <trans-unit id="6ce89c9484917860e5d23ba2c7c4fe17293ecf2b" translate="yes" xml:space="preserve">
          <source>Note that a control factory must be public and must have a public constructor that accepts no arguments.</source>
          <target state="translated">制御ファクトリはパブリックでなければならず、引数を受け付けないパブリックなコンストラクタを持たなければならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="f2a07378324e46e67c31eff44b1eae1eeba36f83" translate="yes" xml:space="preserve">
          <source>Note that a control factory must be public and must have a public constructor that accepts no arguments. In cases where the factory is in a named module then it must be in a package which is exported by that module to the &lt;code&gt;java.naming&lt;/code&gt; module.</source>
          <target state="translated">コントロールファクトリはパブリックである必要があり、引数を受け入れないパブリックコンストラクタが必要であることに注意してください。ファクトリが名前付きモジュール内にある場合、そのモジュールによって &lt;code&gt;java.naming&lt;/code&gt; モジュールにエクスポートされるパッケージ内にある必要があります。</target>
        </trans-unit>
        <trans-unit id="67757ab345174616d12fc7211a1c332820ffc2af" translate="yes" xml:space="preserve">
          <source>Note that a copy is performed on the &lt;code&gt;Collection&lt;/code&gt; to protect against subsequent modifications.</source>
          <target state="translated">後続の変更から保護するために、 &lt;code&gt;Collection&lt;/code&gt; に対してコピーが実行されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="788a169b36f3add03ea741c08f3772ab5b7f151c" translate="yes" xml:space="preserve">
          <source>Note that a deep copy is performed on the &lt;code&gt;Collection&lt;/code&gt; to protect against subsequent modifications.</source>
          <target state="translated">後続の変更から保護するために、 &lt;code&gt;Collection&lt;/code&gt; に対してディープコピーが実行されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c74714de547c9f3179bad79056953a0fd5274a55" translate="yes" xml:space="preserve">
          <source>Note that a different set of metacharacters are in effect inside a character class than outside a character class. For instance, the regular expression &lt;code&gt;.&lt;/code&gt; loses its special meaning inside a character class, while the expression &lt;code&gt;-&lt;/code&gt; becomes a range forming metacharacter.</source>
          <target state="translated">文字クラスの外とは異なるメタ文字のセットが文字クラスの内部で有効であることに注意してください。たとえば、正規表現 &lt;code&gt;.&lt;/code&gt; 表現ながら、文字クラス内にその特別な意味を失い &lt;code&gt;-&lt;/code&gt; メタ文字を形成する範囲となります。</target>
        </trans-unit>
        <trans-unit id="69d13037a1aa8eb912d998be785b72c28abfc774" translate="yes" xml:space="preserve">
          <source>Note that a non-ISO calendar system may have year numbering system that changes at a different point to the natural reset in the month numbering. An example of this is the Japanese calendar system where a change of era, which resets the year number to 1, can happen on any date. The era and year reset also cause the day-of-year to be reset to 1, but not the month-of-year or day-of-month.</source>
          <target state="translated">ISO以外の暦のシステムでは、月の番号付けの自然なリセットとは異なる時点で年号が変わることがあるので注意が必要です。この例として、和暦システムでは、年号が1にリセットされる時代の変更は、どの日付でも起こりうる。時代と年のリセットは、年号を1にリセットしますが、月号や月の日号はリセットされません。</target>
        </trans-unit>
        <trans-unit id="b98789af50a8efe7a69df22fc573d587833e6ea5" translate="yes" xml:space="preserve">
          <source>Note that a serialized Key may contain sensitive information which should not be exposed in untrusted environments. See the  Security Appendix of the Serialization Specification for more information.</source>
          <target state="translated">シリアライズされた鍵には、信頼されない環境では公開されない機密情報が含まれている可能性があることに注意すること。詳細については、シリアライズ仕様書のセキュリティ付録を参照のこと。</target>
        </trans-unit>
        <trans-unit id="23caa8218734c950233a7fe5362d9996f427da4b" translate="yes" xml:space="preserve">
          <source>Note that a serialized Key may contain sensitive information which should not be exposed in untrusted environments. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/serialization/security.html&quot;&gt; Security Appendix&lt;/a&gt; of the Serialization Specification for more information.</source>
          <target state="translated">シリアル化されたキーには、信頼できない環境で公開してはならない機密情報が含まれている可能性があることに注意してください。詳細については、シリアル化仕様の&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/serialization/security.html&quot;&gt;セキュリティ付録&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="85abf2a019a02a3b0ad0f40715a7ab7b9a9a7779" translate="yes" xml:space="preserve">
          <source>Note that a space appears before each &lt;code&gt;\&lt;/code&gt; so that a space will appear after each comma in the final result; the &lt;code&gt;\&lt;/code&gt;, line terminator, and leading white space on the continuation line are merely discarded and are</source>
          <target state="translated">最終結果の各カンマの後にスペースが表示されるように、各 &lt;code&gt;\&lt;/code&gt; の前にスペースが表示されることに注意してください。 &lt;code&gt;\&lt;/code&gt; 継続行で、行末、および先頭の空白文字は単に破棄されています</target>
        </trans-unit>
        <trans-unit id="af66d5610f588b95804f84efe617919d8f48b790" translate="yes" xml:space="preserve">
          <source>Note that a state factory (an object that implements the StateFactory interface) must be public and must have a public constructor that accepts no arguments.</source>
          <target state="translated">ステートファクトリー(StateFactoryインターフェイスを実装したオブジェクト)はパブリックでなければならず、引数を受け付けないパブリックなコンストラクタを持たなければならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="b0c8bd26f94ce38c412a74fe0b08db578c2f63f5" translate="yes" xml:space="preserve">
          <source>Note that a state factory (an object that implements the StateFactory interface) must be public and must have a public constructor that accepts no arguments. In cases where the factory is in a named module then it must be in a package which is exported by that module to the &lt;code&gt;java.naming&lt;/code&gt; module.</source>
          <target state="translated">状態ファクトリ（StateFactoryインターフェイスを実装するオブジェクト）はパブリックである必要があり、引数を受け入れないパブリックコンストラクタが必要であることに注意してください。ファクトリが名前付きモジュール内にある場合、そのモジュールによって &lt;code&gt;java.naming&lt;/code&gt; モジュールにエクスポートされるパッケージ内にある必要があります。</target>
        </trans-unit>
        <trans-unit id="e3416dc9c8e94484bd0d6f1d95d942570235b88e" translate="yes" xml:space="preserve">
          <source>Note that adding a default implementation of a new visit method in a visitor class will occur instead of adding a &lt;em&gt;default method&lt;/em&gt; directly in the visitor interface since a Java SE 8 language feature cannot be used to this version of the API since this version is required to be runnable on Java SE 7 implementations. Future versions of the API that are only required to run on Java SE 8 and later may take advantage of default methods in this situation.</source>
          <target state="translated">Java SE 8言語機能はこのバージョンのAPIに使用できないため、このバージョンのAPIはこのバージョンが必要なので、ビジターインターフェースに&lt;em&gt;デフォルトメソッドを&lt;/em&gt;直接追加する代わりに、ビジタークラスに新しいビジットメソッドのデフォルト実装を追加しますJava SE 7実装で実行可能である。Java SE 8以降でのみ実行する必要があるAPIの将来のバージョンでは、この状況でデフォルトのメソッドを利用する可能性があります。</target>
        </trans-unit>
        <trans-unit id="e0d9504ee3762157c4157df75ceadc4ba79063ba" translate="yes" xml:space="preserve">
          <source>Note that additional source version constants will be added to model future releases of the language.</source>
          <target state="translated">この言語の将来のリリースをモデルにして、ソースバージョンの定数が追加されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6cfe909403c02c7424d6ced0e79dd8f845279e1d" translate="yes" xml:space="preserve">
          <source>Note that all classes loaded during LogManager configuration are first searched on the system class path before any user class path. That includes the LogManager class, any config classes, and any handler classes.</source>
          <target state="translated">LogManager の設定中にロードされたすべてのクラスは、ユーザークラスのパスの前にシステムクラスのパスで最初に検索されることに注意してください。これには、LogManager クラス、任意の設定クラス、および任意のハンドラクラスが含まれます。</target>
        </trans-unit>
        <trans-unit id="214f385b9be3a097bff040153223e86647a0a506" translate="yes" xml:space="preserve">
          <source>Note that although the same password may be used to load the keystore, to protect the private key entry, to protect the secret key entry, and to store the keystore (as is shown in the sample code above), different passwords or other protection parameters may also be used.</source>
          <target state="translated">鍵ストアのロード、秘密鍵エントリの保護、秘密鍵エントリの保護、鍵ストアの保存には同じパスワードを使用することができますが(上記のサンプルコードに示されているように)、異なるパスワードや他の保護パラメータを使用することもできることに注意してください。</target>
        </trans-unit>
        <trans-unit id="14ba8e26b60790b5484ab6e2fcb2ad20b8ab0589" translate="yes" xml:space="preserve">
          <source>Note that an annotation mirror of a marker annotation type will by definition have an empty map.</source>
          <target state="translated">マーカー注釈タイプの注釈ミラーは、定義上、空のマップを持つことに注意してください。</target>
        </trans-unit>
        <trans-unit id="c9fb4caaf617fb5b877f7378da50a7228d7e24cf" translate="yes" xml:space="preserve">
          <source>Note that an implementation may not be able to reliably determine the origin status of the directive if the directive is created from a class file due to limitations of the fidelity of the class file format in preserving information from source code.</source>
          <target state="translated">ディレクティブがクラスファイルから作成された場合、 ソースコードからの情報を保存するクラスファイル形式の忠実性の制限のために、 実装が確実にそのディレクティブの元の状態を判断できないかもしれないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="8ca5c96347ffc63451822eade25f5de940c2d7dc" translate="yes" xml:space="preserve">
          <source>Note that an object factory (an object that implements the ObjectFactory interface) must be public and must have a public constructor that accepts no arguments.</source>
          <target state="translated">オブジェクトファクトリ(ObjectFactory インターフェースを実装したオブジェクト)はパブリックでなければならず、引数を受け付けないパブリック コンストラクタを持たなければならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="022fa1b6cb5a159c4b338cc316c312e9aeafe779" translate="yes" xml:space="preserve">
          <source>Note that an object factory (an object that implements the ObjectFactory interface) must be public and must have a public constructor that accepts no arguments. In cases where the factory is in a named module then it must be in a package which is exported by that module to the &lt;code&gt;java.naming&lt;/code&gt; module.</source>
          <target state="translated">オブジェクトファクトリ（ObjectFactoryインターフェイスを実装するオブジェクト）はパブリックである必要があり、引数を受け入れないパブリックコンストラクタが必要であることに注意してください。ファクトリが名前付きモジュール内にある場合、そのモジュールによって &lt;code&gt;java.naming&lt;/code&gt; モジュールにエクスポートされるパッケージ内にある必要があります。</target>
        </trans-unit>
        <trans-unit id="275f9fe85ff951e77a2d34807ceb543b955c4987" translate="yes" xml:space="preserve">
          <source>Note that annotation processing can process both the compilation units of source code to be compiled, passed with the &lt;code&gt;compilationUnits&lt;/code&gt; parameter, as well as class files, whose names are passed with the &lt;code&gt;classes&lt;/code&gt; parameter.</source>
          <target state="translated">注釈処理では、 &lt;code&gt;compilationUnits&lt;/code&gt; パラメーターで渡されるコンパイル対象のソースコードのコンパイル単位と、 &lt;code&gt;classes&lt;/code&gt; パラメーターで名前が渡されるクラスファイルの両方を処理できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e63893f8040b6be17cb6ef871570fdaecf1e2bc5" translate="yes" xml:space="preserve">
          <source>Note that any DomainCombiner associated with the current AccessControlContext will be ignored while the action is performed.</source>
          <target state="translated">現在の AccessControlContext に関連付けられている DomainCombiner は、アクションが実行されている間は無視されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9c7af7b634cf4a856f86aa243767a4a8fd27f6cf" translate="yes" xml:space="preserve">
          <source>Note that applets created via beans.instantiate run in a slightly different environment than applets running inside browsers. In particular, bean applets have no access to &quot;parameters&quot;, so they may wish to provide property get/set methods to set parameter values. We advise bean-applet developers to test their bean-applets against both the JDK appletviewer (for a reference browser environment) and the BDK BeanBox (for a reference bean container).</source>
          <target state="translated">beans.instantiate経由で作成されたアプレットは、ブラウザ内で動作するアプレットとは少し異なる環境で動作することに注意してください。特に、ビーンアプレットは「パラメータ」にアクセスできないので、パラメータ値を設定するためにプロパティの get/set メソッドを提供することをお勧めします。ビーンアプレットの開発者には、JDK appletviewer (参照ブラウザ環境用)と BDK BeanBox (参照ビーンコンテナ用)の両方に対してビーンアプレットをテストすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="dea130717cce2b33119341024233526382650a0c" translate="yes" xml:space="preserve">
          <source>Note that as a particular instance of the &lt;a href=&quot;package-summary&quot;&gt;general accuracy requirements&lt;/a&gt; and the ordering behavior required of this interface, the list of enclosed elements will be returned in the natural order for the originating source of information about the type. For example, if the information about the type is originating from a source file, the elements will be returned in source code order. (However, in that case the the ordering of synthesized elements, such as a default constructor, is not specified.)</source>
          <target state="translated">このインターフェースに必要な&lt;a href=&quot;package-summary&quot;&gt;一般的な精度要件&lt;/a&gt;と順序付け動作の特定のインスタンスとして、囲まれた要素のリストは、型に関する情報の発信元の自然な順序で返されます。たとえば、タイプに関する情報がソースファイルからのものである場合、要素はソースコード順に返されます。 （ただし、その場合、デフォルトコンストラクターなどの合成要素の順序は指定されません。）</target>
        </trans-unit>
        <trans-unit id="de45338b898047e3cfe83d5d950fcbb4ec16b066" translate="yes" xml:space="preserve">
          <source>Note that as of 1.3, this method clears the selection, if any.</source>
          <target state="translated">1.3 以降、このメソッドは選択範囲をクリアすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="871b239a84210e68e8167a62fa00cec7ec66003c" translate="yes" xml:space="preserve">
          <source>Note that attribute names are processed differently than element names: an unprefixed element name will receive the default Namespace (if any), while an unprefixed attribute name will not.</source>
          <target state="translated">属性名は要素名とは異なって処理されることに注意してください。接頭辞のない要素名はデフォルトの名前空間(もしあれば)を受け取り、接頭辞のない属性名は受け取りません。</target>
        </trans-unit>
        <trans-unit id="dbddea09dcde2c60b7d4d8d1b4968758b34aa1cf" translate="yes" xml:space="preserve">
          <source>Note that backslashes (&lt;code&gt;\&lt;/code&gt;) and dollar signs (&lt;code&gt;$&lt;/code&gt;) in a replacement string may cause the results to be different than if it were being treated as a literal replacement string. Dollar signs may be treated as references to captured subsequences as described above, and backslashes are used to escape literal characters in the replacement string.</source>
          <target state="translated">置換文字列の円記号（ &lt;code&gt;\&lt;/code&gt; ）とドル記号（ &lt;code&gt;$&lt;/code&gt; ）により、リテラル置換文字列として扱われていた場合とは結果が異なる場合があることに注意してください。ドル記号は、上記のようにキャプチャされたサブシーケンスへの参照として扱われる場合があり、バックスラッシュは、置換文字列内のリテラル文字をエスケープするために使用されます。</target>
        </trans-unit>
        <trans-unit id="3dc7b13aae47f64e8cf7dd1b1d07a15c4c61da83" translate="yes" xml:space="preserve">
          <source>Note that backslashes (&lt;code&gt;\&lt;/code&gt;) and dollar signs (&lt;code&gt;$&lt;/code&gt;) in the replacement string may cause the results to be different than if it were being treated as a literal replacement string. Dollar signs may be treated as references to captured subsequences as described above, and backslashes are used to escape literal characters in the replacement string.</source>
          <target state="translated">置換文字列にバックスラッシュ（ &lt;code&gt;\&lt;/code&gt; ）とドル記号（ &lt;code&gt;$&lt;/code&gt; ）を使用すると、リテラル置換文字列として処理された場合とは結果が異なる場合があることに注意してください。ドル記号は、上記のように、キャプチャされたサブシーケンスへの参照として扱われる場合があり、円記号は、置換文字列内のリテラル文字をエスケープするために使用されます。</target>
        </trans-unit>
        <trans-unit id="794a21272f22e16257c2e5ac3181d6b10bd1f90b" translate="yes" xml:space="preserve">
          <source>Note that backslashes (&lt;code&gt;\&lt;/code&gt;) and dollar signs (&lt;code&gt;$&lt;/code&gt;) in the replacement string may cause the results to be different than if it were being treated as a literal replacement string; see &lt;a href=&quot;../util/regex/matcher#replaceAll(java.lang.String)&quot;&gt;&lt;code&gt;Matcher.replaceAll&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;../util/regex/matcher#quoteReplacement(java.lang.String)&quot;&gt;&lt;code&gt;Matcher.quoteReplacement(java.lang.String)&lt;/code&gt;&lt;/a&gt; to suppress the special meaning of these characters, if desired.</source>
          <target state="translated">置換文字列の円記号（ &lt;code&gt;\&lt;/code&gt; ）とドル記号（ &lt;code&gt;$&lt;/code&gt; ）により、リテラル置換文字列として扱われていた場合とは結果が異なる場合があることに注意してください。&lt;a href=&quot;../util/regex/matcher#replaceAll(java.lang.String)&quot;&gt; &lt;code&gt;Matcher.replaceAll&lt;/code&gt; を&lt;/a&gt;参照してください。必要に応じて、&lt;a href=&quot;../util/regex/matcher#quoteReplacement(java.lang.String)&quot;&gt; &lt;code&gt;Matcher.quoteReplacement(java.lang.String)&lt;/code&gt; &lt;/a&gt;を使用して、これらの文字の特別な意味を抑制します。</target>
        </trans-unit>
        <trans-unit id="03f5f96f1631f4a5090a116d17a0b8362cfbc316" translate="yes" xml:space="preserve">
          <source>Note that backslashes (&lt;code&gt;\&lt;/code&gt;) and dollar signs (&lt;code&gt;$&lt;/code&gt;) in the replacement string may cause the results to be different than if it were being treated as a literal replacement string; see &lt;a href=&quot;../util/regex/matcher#replaceAll-java.lang.String-&quot;&gt;&lt;code&gt;Matcher.replaceAll&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;../util/regex/matcher#quoteReplacement-java.lang.String-&quot;&gt;&lt;code&gt;Matcher.quoteReplacement(java.lang.String)&lt;/code&gt;&lt;/a&gt; to suppress the special meaning of these characters, if desired.</source>
          <target state="translated">置換文字列にバックスラッシュ（ &lt;code&gt;\&lt;/code&gt; ）とドル記号（ &lt;code&gt;$&lt;/code&gt; ）を使用すると、リテラル置換文字列として処理された場合とは結果が異なる場合があることに注意してください。&lt;a href=&quot;../util/regex/matcher#replaceAll-java.lang.String-&quot;&gt; &lt;code&gt;Matcher.replaceAll&lt;/code&gt; を&lt;/a&gt;参照してください。必要に応じて、&lt;a href=&quot;../util/regex/matcher#quoteReplacement-java.lang.String-&quot;&gt; &lt;code&gt;Matcher.quoteReplacement(java.lang.String)&lt;/code&gt; &lt;/a&gt;を使用して、これらの文字の特別な意味を抑制します。</target>
        </trans-unit>
        <trans-unit id="90e45d65bbdf63145b4e8fee383accede4f0a8ee" translate="yes" xml:space="preserve">
          <source>Note that backslashes (&lt;code&gt;\&lt;/code&gt;) and dollar signs (&lt;code&gt;$&lt;/code&gt;) in the replacement string may cause the results to be different than if it were being treated as a literal replacement string; see &lt;a href=&quot;../util/regex/matcher#replaceFirst(java.lang.String)&quot;&gt;&lt;code&gt;Matcher.replaceFirst(java.lang.String)&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;../util/regex/matcher#quoteReplacement(java.lang.String)&quot;&gt;&lt;code&gt;Matcher.quoteReplacement(java.lang.String)&lt;/code&gt;&lt;/a&gt; to suppress the special meaning of these characters, if desired.</source>
          <target state="translated">置換文字列の円記号（ &lt;code&gt;\&lt;/code&gt; ）とドル記号（ &lt;code&gt;$&lt;/code&gt; ）により、リテラル置換文字列として扱われていた場合とは結果が異なる場合があることに注意してください。&lt;a href=&quot;../util/regex/matcher#replaceFirst(java.lang.String)&quot;&gt; &lt;code&gt;Matcher.replaceFirst(java.lang.String)&lt;/code&gt; を&lt;/a&gt;参照してください。必要に応じて、&lt;a href=&quot;../util/regex/matcher#quoteReplacement(java.lang.String)&quot;&gt; &lt;code&gt;Matcher.quoteReplacement(java.lang.String)&lt;/code&gt; &lt;/a&gt;を使用して、これらの文字の特別な意味を抑制します。</target>
        </trans-unit>
        <trans-unit id="1ab737305fc0999d0bb7e53367b45466fded99d7" translate="yes" xml:space="preserve">
          <source>Note that backslashes (&lt;code&gt;\&lt;/code&gt;) and dollar signs (&lt;code&gt;$&lt;/code&gt;) in the replacement string may cause the results to be different than if it were being treated as a literal replacement string; see &lt;a href=&quot;../util/regex/matcher#replaceFirst-java.lang.String-&quot;&gt;&lt;code&gt;Matcher.replaceFirst(java.lang.String)&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;../util/regex/matcher#quoteReplacement-java.lang.String-&quot;&gt;&lt;code&gt;Matcher.quoteReplacement(java.lang.String)&lt;/code&gt;&lt;/a&gt; to suppress the special meaning of these characters, if desired.</source>
          <target state="translated">置換文字列にバックスラッシュ（ &lt;code&gt;\&lt;/code&gt; ）とドル記号（ &lt;code&gt;$&lt;/code&gt; ）を使用すると、リテラル置換文字列として処理された場合とは結果が異なる場合があることに注意してください。&lt;a href=&quot;../util/regex/matcher#replaceFirst-java.lang.String-&quot;&gt; &lt;code&gt;Matcher.replaceFirst(java.lang.String)&lt;/code&gt; を&lt;/a&gt;参照してください。必要に応じて、&lt;a href=&quot;../util/regex/matcher#quoteReplacement-java.lang.String-&quot;&gt; &lt;code&gt;Matcher.quoteReplacement(java.lang.String)&lt;/code&gt; &lt;/a&gt;を使用して、これらの文字の特別な意味を抑制します。</target>
        </trans-unit>
        <trans-unit id="7de1f29d631b8e3aa5532ffafc72d63a383c4ffb" translate="yes" xml:space="preserve">
          <source>Note that based on the &lt;code&gt;DocumentType&lt;/code&gt; given to create the document, the implementation may instantiate specialized &lt;code&gt;Document&lt;/code&gt; objects that support additional features than the &quot;Core&quot;, such as &quot;HTML&quot; [&lt;a href=&quot;http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109&quot;&gt;DOM Level 2 HTML&lt;/a&gt;] . On the other hand, setting the &lt;code&gt;DocumentType&lt;/code&gt; after the document was created makes this very unlikely to happen. Alternatively, specialized &lt;code&gt;Document&lt;/code&gt; creation methods, such as &lt;code&gt;createHTMLDocument&lt;/code&gt; [&lt;a href=&quot;http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109&quot;&gt;DOM Level 2 HTML&lt;/a&gt;] , can be used to obtain specific types of &lt;code&gt;Document&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;DocumentType&lt;/code&gt; を作成するために指定されたDocumentTypeに基づいて、実装は「HTML」[ &lt;a href=&quot;http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109&quot;&gt;DOMレベル2HTML&lt;/a&gt; ]などの「コア」以外の追加機能をサポートする特殊な &lt;code&gt;Document&lt;/code&gt; オブジェクトをインスタンス化する場合があることに注意してください。一方、 &lt;code&gt;DocumentType&lt;/code&gt; 後にDocumentTypeを設定すると、これが発生する可能性はほとんどありません。または、 &lt;code&gt;createHTMLDocument&lt;/code&gt; [ &lt;a href=&quot;http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109&quot;&gt;DOMレベル&lt;/a&gt;2HTML ]などの特殊な &lt;code&gt;Document&lt;/code&gt; 作成メソッドを使用して、特定のタイプの &lt;code&gt;Document&lt;/code&gt; オブジェクトを取得することもできます。</target>
        </trans-unit>
        <trans-unit id="419355ea0b2e3435255ed5f2c745975b89276425" translate="yes" xml:space="preserve">
          <source>Note that because &lt;a href=&quot;../../../../java.base/java/util/calendar#add(int,int)&quot;&gt;&lt;code&gt;Calendar.add(int, int)&lt;/code&gt;&lt;/a&gt; is using &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;Duration&lt;/code&gt; with values beyond the range of &lt;code&gt;int&lt;/code&gt; in its fields will cause overflow/underflow to the given &lt;a href=&quot;../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;xmlgregoriancalendar#add(javax.xml.datatype.Duration)&quot;&gt;&lt;code&gt;XMLGregorianCalendar.add(Duration)&lt;/code&gt;&lt;/a&gt; provides the same basic operation as this method while avoiding the overflow/underflow issues.</source>
          <target state="translated">そのため注意&lt;a href=&quot;../../../../java.base/java/util/calendar#add(int,int)&quot;&gt; &lt;code&gt;Calendar.add(int, int)&lt;/code&gt; &lt;/a&gt;使用している &lt;code&gt;int&lt;/code&gt; 型、 &lt;code&gt;Duration&lt;/code&gt; の範囲を超えた値が &lt;code&gt;int&lt;/code&gt; 型のフィールドでは、与えられたにオーバーフロー/アンダーフローが発生します&lt;a href=&quot;../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;xmlgregoriancalendar#add(javax.xml.datatype.Duration)&quot;&gt; &lt;code&gt;XMLGregorianCalendar.add(Duration)&lt;/code&gt; &lt;/a&gt;は、オーバーフロー/アンダーフローの問題を回避しながら、このメソッドと同じ基本操作を提供します。</target>
        </trans-unit>
        <trans-unit id="b9cbd2a7b20ea5686eec0ac7a4c297a447639111" translate="yes" xml:space="preserve">
          <source>Note that because cancellations due to interrupts and timeouts may occur at any time, a &lt;code&gt;true&lt;/code&gt; return does not guarantee that some other thread will acquire before the current thread. Likewise, it is possible for another thread to win a race to enqueue after this method has returned &lt;code&gt;false&lt;/code&gt;, due to the queue being empty.</source>
          <target state="translated">割り込みやタイムアウトによるキャンセルはいつでも発生する可能性があるため、 &lt;code&gt;true&lt;/code&gt; が返されても、他のスレッドが現在のスレッドの前に取得することは保証されません。同様に、キューが空であるため、このメソッドが &lt;code&gt;false&lt;/code&gt; を返した後、別のスレッドがエンキューの競争に勝つ可能性があります。</target>
        </trans-unit>
        <trans-unit id="1c967057bf157a767c21d5f94cb0958baba15aa4" translate="yes" xml:space="preserve">
          <source>Note that because the SQL &lt;code&gt;JOIN&lt;/code&gt; must be enforced when an application adds a second or subsequent &lt;code&gt;RowSet&lt;/code&gt; object, there may be an initial degradation in performance while the &lt;code&gt;JOIN&lt;/code&gt; is being performed.</source>
          <target state="translated">SQLは、そのため音符 &lt;code&gt;JOIN&lt;/code&gt; アプリケーション2回目以降の追加時に実施されなければならない &lt;code&gt;RowSet&lt;/code&gt; オブジェクトはながら、性能の初期劣化があってもよい &lt;code&gt;JOIN&lt;/code&gt; 行われています。</target>
        </trans-unit>
        <trans-unit id="2f2d479ca269ccb7eee858707c8d03d35390aaa6" translate="yes" xml:space="preserve">
          <source>Note that because the XML DTD is strongly tied to the parsing process and has a significant effect on the parsing process, it is impossible to define the DTD validation as a process independent from parsing. For this reason, this specification does not define the semantics for the XML DTD. This doesn't prohibit implementors from implementing it in a way they see fit, but &lt;em&gt;users are warned that any DTD validation implemented on this interface necessarily deviate from the XML DTD semantics as defined in the XML 1.0&lt;/em&gt;.</source>
          <target state="translated">XML DTDは解析プロセスと強く結びついており、解析プロセスに大きな影響を与えるため、DTD検証を解析から独立したプロセスとして定義することは不可能であることに注意してください。このため、この仕様ではXMLDTDのセマンティクスは定義されていません。これは、実装&lt;em&gt;者が&lt;/em&gt;適切と思われる方法で実装することを禁止するものではありませんが&lt;em&gt;、このインターフェイスに実装されたDTD検証は、XML1.0で定義されているXMLDTDセマンティクスから必然的に逸脱することをユーザーに警告します&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="182a30c3d2ead4a0d3e6961f3850f71bb2c0e25b" translate="yes" xml:space="preserve">
          <source>Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number</source>
          <target state="translated">配列の要素の番号付けはゼロから始まるので、プレースホルダのパラメータ番号に対応する配列の要素は</target>
        </trans-unit>
        <trans-unit id="8cd342fc79eb8dd9c89557278ec717a1a7eebb88" translate="yes" xml:space="preserve">
          <source>Note that calling &lt;code&gt;plus&lt;/code&gt; followed by &lt;code&gt;minus&lt;/code&gt; is not guaranteed to return the same date-time.</source>
          <target state="translated">&lt;code&gt;plus&lt;/code&gt; 続けて &lt;code&gt;minus&lt;/code&gt; を呼び出すと、同じ日時が返されることが保証されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="56327414dff77371526ee940407066117291e795" translate="yes" xml:space="preserve">
          <source>Note that calling this method from within the &lt;code&gt;run&lt;/code&gt; method of a repeating timer task absolutely guarantees that the timer task will not run again.</source>
          <target state="translated">繰り返しタイマータスクの &lt;code&gt;run&lt;/code&gt; メソッド内からこのメソッドを呼び出すと、タイマータスクが再度実行されないことが確実に保証されます。</target>
        </trans-unit>
        <trans-unit id="4586e37475d24f595b14919581e2000377341d50" translate="yes" xml:space="preserve">
          <source>Note that calling this method from within the run method of a timer task that was invoked by this timer absolutely guarantees that the ongoing task execution is the last task execution that will ever be performed by this timer.</source>
          <target state="translated">このタイマーによって呼び出されたタイマータスクのrunメソッド内からこのメソッドを呼び出すと、進行中のタスク実行がこのタイマーによって実行される最後のタスク実行であることが絶対に保証されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3bf4aeeb12928b06cd1be8d9a90c217603fe3dcf" translate="yes" xml:space="preserve">
          <source>Note that calling this method may cause this &lt;code&gt;DataBuffer&lt;/code&gt; object to be incompatible with &lt;a href=&quot;#optimizations&quot;&gt;performance optimizations&lt;/a&gt; used by some implementations (such as caching an associated image in video memory).</source>
          <target state="translated">このメソッドを呼び出すと、この &lt;code&gt;DataBuffer&lt;/code&gt; オブジェクトが、一部の実装（関連する画像をビデオメモリにキャッシュするなど）で使用される&lt;a href=&quot;#optimizations&quot;&gt;パフォーマンスの最適化&lt;/a&gt;と互換性がなくなる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7a81e06fd273d2eadd9e0b7961f553f85c28b6c3" translate="yes" xml:space="preserve">
          <source>Note that changes to the backing collection might still be possible, and if they occur, they are visible through the unmodifiable view. Thus, an unmodifiable view collection is not necessarily immutable. However, if the backing collection of an unmodifiable view is effectively immutable, or if the only reference to the backing collection is through an unmodifiable view, the view can be considered effectively immutable.</source>
          <target state="translated">バッキングコレクションへの変更はまだ可能であり、変更が発生した場合には、変更不可能なビューを通して見ることができることに注意してください。このように、変更不可能なビューのコレクションは必ずしも不変ではありません。しかし、変更不可能なビューのバッキングコレクションが実質的に不変である場合、またはバッキングコレクションへの唯一の参照が変更不可能なビューを介して行われる場合、そのビューは実質的に不変であるとみなすことができます。</target>
        </trans-unit>
        <trans-unit id="b106efb061200778a92d449ca4cf694568a757dc" translate="yes" xml:space="preserve">
          <source>Note that cloning an immutable subtree results in a mutable copy, but the children of an &lt;code&gt;EntityReference&lt;/code&gt; clone are readonly . In addition, clones of unspecified &lt;code&gt;Attr&lt;/code&gt; nodes are specified. And, cloning &lt;code&gt;Document&lt;/code&gt;, &lt;code&gt;DocumentType&lt;/code&gt;, &lt;code&gt;Entity&lt;/code&gt;, and &lt;code&gt;Notation&lt;/code&gt; nodes is implementation dependent.</source>
          <target state="translated">不変のサブツリーを複製すると、コピーは可変になりますが、 &lt;code&gt;EntityReference&lt;/code&gt; クローンの子は読み取り専用であることに注意してください。さらに、指定されていない &lt;code&gt;Attr&lt;/code&gt; ノードのクローンが指定されています。また、 &lt;code&gt;Document&lt;/code&gt; 、 &lt;code&gt;DocumentType&lt;/code&gt; 、 &lt;code&gt;Entity&lt;/code&gt; 、および &lt;code&gt;Notation&lt;/code&gt; ノードのクローン作成は実装に依存します。</target>
        </trans-unit>
        <trans-unit id="45dc085ec7352088bd30cdf3a20a1383b2baeb5a" translate="yes" xml:space="preserve">
          <source>Note that data-related DTD declarations (unparsed entities and notations) are already reported through the &lt;a href=&quot;../dtdhandler&quot;&gt;&lt;code&gt;DTDHandler&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">データ関連のDTD宣言（解析されていないエンティティと表記）は、&lt;a href=&quot;../dtdhandler&quot;&gt; &lt;code&gt;DTDHandler&lt;/code&gt; &lt;/a&gt;インターフェイスを介してすでに報告されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7a40c29751d1d5baeae5d2cd1aad17dd9584f760" translate="yes" xml:space="preserve">
          <source>Note that different image format readers may produce decoded pixels in a variety of different orders. Many readers will produce pixels in a simple top-to-bottom, left-to-right-order, but others may use multiple passes of interlacing, tiling, etc. The sequence of updates may even differ from call to call depending on network speeds, for example. A call to this method does not guarantee that all the specified pixels have actually been updated, only that some activity has taken place within some subregion of the one specified.</source>
          <target state="translated">異なる画像フォーマットのリーダは、さまざまな順序でデコードされたピクセルを生成する可能性があることに注意してください。多くのリーダは、上から下、左から右の単純な順序でピクセルを生成しますが、他のリーダは、複数のパスのインターレース、タイリングなどを使用する場合があります。更新の順序は、例えばネットワーク速度に応じて呼び出しごとに異なる場合もある。このメソッドの呼び出しは、指定されたすべてのピクセルが実際に更新されたことを保証するものではなく、指定されたピクセルのいくつかのサブ領域内で何らかのアクティビティが行われたことを保証するものでしかありません。</target>
        </trans-unit>
        <trans-unit id="241d74da481c30042b7a543b05ee18d34c4e3fbd" translate="yes" xml:space="preserve">
          <source>Note that digest objects can compute only one digest (see &lt;a href=&quot;messagedigest&quot;&gt;&lt;code&gt;MessageDigest&lt;/code&gt;&lt;/a&gt;), so that in order to compute intermediate digests, a caller should retain a handle onto the digest object, and clone it for each digest to be computed, leaving the orginal digest untouched.</source>
          <target state="translated">ダイジェストオブジェクトは1つのダイジェストしか計算できないことに注意してください（&lt;a href=&quot;messagedigest&quot;&gt; &lt;code&gt;MessageDigest&lt;/code&gt; を&lt;/a&gt;参照）。したがって、中間ダイジェストを計算するには、呼び出し元がダイジェストオブジェクトにハンドルを保持し、計算するダイジェストごとにそれを複製して、元のダイジェストをそのまま残します。</target>
        </trans-unit>
        <trans-unit id="62b54c7adc9e4943fce7f532157a4b2f10840c45" translate="yes" xml:space="preserve">
          <source>Note that digest objects can compute only one digest (see &lt;a href=&quot;messagedigest&quot;&gt;&lt;code&gt;MessageDigest&lt;/code&gt;&lt;/a&gt;), so that in order to compute intermediate digests, a caller should retain a handle onto the digest object, and clone it for each digest to be computed, leaving the original digest untouched.</source>
          <target state="translated">ダイジェストオブジェクトは1つのダイジェストしか計算できないことに注意してください（&lt;a href=&quot;messagedigest&quot;&gt; &lt;code&gt;MessageDigest&lt;/code&gt; を&lt;/a&gt;参照）。したがって、中間ダイジェストを計算するには、呼び出し元はダイジェストオブジェクトへのハンドルを保持し、計算するダイジェストごとにクローンを作成して、元のダイジェストは変更しないでください。</target>
        </trans-unit>
        <trans-unit id="fd4b43cd3a8ad13cc9f2c41596da6c5f64c5d3a3" translate="yes" xml:space="preserve">
          <source>Note that during the closure phase, a &lt;code&gt;SSLEngine&lt;/code&gt; may generate handshake closure data that must be sent to the peer. &lt;code&gt;wrap()&lt;/code&gt; must be called to generate this data. When this method returns true, no more outbound data will be created.</source>
          <target state="translated">クロージャーフェーズ中に、 &lt;code&gt;SSLEngine&lt;/code&gt; がピアに送信する必要があるハンドシェイククロージャーデータを生成する場合があることに注意してください。このデータを生成するには、 &lt;code&gt;wrap()&lt;/code&gt; を呼び出す必要があります。このメソッドがtrueを返す場合、これ以上の送信データは作成されません。</target>
        </trans-unit>
        <trans-unit id="3148771b07995b076b573d2a164f49f5aee5314e" translate="yes" xml:space="preserve">
          <source>Note that during the drag, the set of operations exposed by the source at the start of the drag operation may not change until the operation is complete. The operation(s) are constant for the duration of the operation with respect to the &lt;code&gt;DragSource&lt;/code&gt;.</source>
          <target state="translated">ドラッグ中、ドラッグ操作の開始時にソースによって公開された一連の操作は、操作が完了するまで変更されない場合があることに注意してください。操作は、 &lt;code&gt;DragSource&lt;/code&gt; に関して操作の期間中一定です。</target>
        </trans-unit>
        <trans-unit id="e67ffd890ca172bd68127f06b5fffc3e564a5aa8" translate="yes" xml:space="preserve">
          <source>Note that elements of certain kinds can be isolated using methods in &lt;a href=&quot;../util/elementfilter&quot;&gt;&lt;code&gt;ElementFilter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../util/elementfilter&quot;&gt; &lt;code&gt;ElementFilter&lt;/code&gt; の&lt;/a&gt;メソッドを使用して、特定の種類の要素を分離できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="23821c1bf96e102886c1d34c6a746806530ebf07" translate="yes" xml:space="preserve">
          <source>Note that elements of certain kinds can be isolated using methods in &lt;a href=&quot;elementfilter&quot;&gt;&lt;code&gt;ElementFilter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;elementfilter&quot;&gt; &lt;code&gt;ElementFilter&lt;/code&gt; の&lt;/a&gt;メソッドを使用して、特定の種類の要素を分離できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4a3c3651e6bca7d55c4d31094c4cfaed4cc7ce15" translate="yes" xml:space="preserve">
          <source>Note that entropy is obtained from an entropy source. While some data in &lt;code&gt;params&lt;/code&gt; may contain entropy, its main usage is to provide diversity.</source>
          <target state="translated">エントロピーはエントロピーソースから取得されることに注意してください。 &lt;code&gt;params&lt;/code&gt; 内の一部のデータにはエントロピーが含まれている場合がありますが、その主な用途は多様性を提供することです。</target>
        </trans-unit>
        <trans-unit id="d3fbffa609ca7a7ecd29a25fe3b337771b806415" translate="yes" xml:space="preserve">
          <source>Note that even if a protocol is enabled, it may never be used. This can occur if the peer does not support the protocol, or its use is restricted, or there are no enabled cipher suites supported by the protocol.</source>
          <target state="translated">プロトコルが有効になっていても、それが使用されないことがあることに注意してください。これは、ピアがそのプロトコルをサポートしていないか、その使用が制限されているか、あるいはそのプロトコルでサポートされている有効な暗号スイートが存在しない場合に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="207fa71026561322ff171f66495ba4971ce9ada0" translate="yes" xml:space="preserve">
          <source>Note that even if a suite is enabled, it may never be used. This can occur if the peer does not support it, or its use is restricted, or the requisite certificates (and private keys) for the suite are not available, or an anonymous suite is enabled but authentication is required.</source>
          <target state="translated">スイートが有効になっていても、それは決して使われないかもしれないことに注意してください。これは、ピアがスイートをサポートしていないか、その使用が制限されているか、スイートに必要な証明書 (と秘密鍵)が利用できないか、匿名スイートが有効だが認証が必要な場合に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="9377c470a6e2e4b1f122a207867c1ce8719ff896" translate="yes" xml:space="preserve">
          <source>Note that even if the security manager does not permit the &lt;code&gt;getProperties&lt;/code&gt; operation, it may choose to permit the &lt;a href=&quot;#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;getProperty(String)&lt;/code&gt;&lt;/a&gt; operation.</source>
          <target state="translated">セキュリティマネージャが &lt;code&gt;getProperties&lt;/code&gt; 操作を許可しない場合でも、&lt;a href=&quot;#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;getProperty(String)&lt;/code&gt; &lt;/a&gt;操作を許可することを選択する場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="228e64834f5c005b619425815500e57cbeec6591" translate="yes" xml:space="preserve">
          <source>Note that even if the security manager does not permit the &lt;code&gt;getProperties&lt;/code&gt; operation, it may choose to permit the &lt;a href=&quot;system#getProperty-java.lang.String-&quot;&gt;&lt;code&gt;getProperty(String)&lt;/code&gt;&lt;/a&gt; operation.</source>
          <target state="translated">セキュリティーマネージャーが &lt;code&gt;getProperties&lt;/code&gt; 操作を許可していない場合でも、&lt;a href=&quot;system#getProperty-java.lang.String-&quot;&gt; &lt;code&gt;getProperty(String)&lt;/code&gt; &lt;/a&gt;操作を許可することを選択する場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1eb677b31a3d02f49ca91d39e9dbf9797853bdcf" translate="yes" xml:space="preserve">
          <source>Note that even if this method returns &lt;code&gt;false&lt;/code&gt;, layout processing may still be invoked when used with any &lt;code&gt;Font&lt;/code&gt; for which &lt;a href=&quot;#hasLayoutAttributes()&quot;&gt;&lt;code&gt;hasLayoutAttributes()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;, so that method will need to be consulted for the specific font, in order to obtain an answer which accounts for such font attributes.</source>
          <target state="translated">このメソッドが &lt;code&gt;false&lt;/code&gt; を返した場合でも、&lt;a href=&quot;#hasLayoutAttributes()&quot;&gt; &lt;code&gt;hasLayoutAttributes()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;true&lt;/code&gt; を返す &lt;code&gt;Font&lt;/code&gt; で使用すると、レイアウト処理が呼び出される可能性があるため、特定のフォントについてメソッドを参照して、説明する回答を取得する必要があることに注意してください。そのようなフォント属性。</target>
        </trans-unit>
        <trans-unit id="e78e85a0e4796f49717cf604ef027214003a73d4" translate="yes" xml:space="preserve">
          <source>Note that fail-fast behavior cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast operations throw &lt;code&gt;ConcurrentModificationException&lt;/code&gt; on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness:</source>
          <target state="translated">フェイルファストの動作は保証されないことに注意してください。一般的に言えば、同期されていない同時変更が存在する場合にハードな保証を行うことは不可能です。フェイルファスト操作は、ベストエフォートベースで &lt;code&gt;ConcurrentModificationException&lt;/code&gt; をスローします。したがって、この例外に正確性を依存するプログラムを作成するのは誤りです。</target>
        </trans-unit>
        <trans-unit id="5dc1e900f56e194109775ee12721f8f28a66a7e8" translate="yes" xml:space="preserve">
          <source>Note that for a particular enum type &lt;code&gt;T&lt;/code&gt;, the implicitly declared &lt;code&gt;public static T valueOf(String)&lt;/code&gt; method on that enum may be used instead of this method to map from a name to the corresponding enum constant. All the constants of an enum type can be obtained by calling the implicit &lt;code&gt;public static T[] values()&lt;/code&gt; method of that type.</source>
          <target state="translated">特定の列挙型 &lt;code&gt;T&lt;/code&gt; では、このメソッドの代わりに、その列挙で暗黙的に宣言された &lt;code&gt;public static T valueOf(String)&lt;/code&gt; メソッドを使用して、名前から対応する列挙定数にマップできます。列挙型のすべての定数は、その型の暗黙の &lt;code&gt;public static T[] values()&lt;/code&gt; メソッドを呼び出すことによって取得できます。</target>
        </trans-unit>
        <trans-unit id="e6045e93711eabf1fb3cf25666ed983546557bd5" translate="yes" xml:space="preserve">
          <source>Note that for add, subtract, and multiply, the reduction in scale will equal the number of digit positions of the exact result which are discarded. If the rounding causes a carry propagation to create a new high-order digit position, an additional digit of the result is discarded than when no new digit position is created.</source>
          <target state="translated">加算、減算、乗算の場合、スケールの縮小は、破棄される正確な結果の桁位置の数に等しくなることに注意してください。丸めによりキャリー伝搬で新たに高次の桁位置が作成された場合、新たに桁位置が作成されなかった場合よりも、結果の桁数が追加で破棄されます。</target>
        </trans-unit>
        <trans-unit id="d47fb38576e47b7b544d0b34d07b725eb2448f6b" translate="yes" xml:space="preserve">
          <source>Note that for beans which are applets, it is the caller's responsiblity to call &quot;start&quot; on the applet. For correct behaviour, this should be done after the applet has been added into a visible AWT container.</source>
          <target state="translated">アプレットであるビーンの場合、アプレットの &quot;start &quot;を呼び出すのは呼び出し側の責任であることに注意してください。正しい振る舞いをするためには、アプレットが可視のAWTコンテナに追加された後に行う必要があります。</target>
        </trans-unit>
        <trans-unit id="c0ed1838066f63b8e41f8b798df4473c036da0ec" translate="yes" xml:space="preserve">
          <source>Note that formats that return &lt;code&gt;false&lt;/code&gt; from this method may nonetheless allow tiling (</source>
          <target state="translated">ただし、このメソッドから &lt;code&gt;false&lt;/code&gt; を返す形式では、タイリング（</target>
        </trans-unit>
        <trans-unit id="dcc64255ed8e4cf8b4a37055c39a8705f2f4e7cf" translate="yes" xml:space="preserve">
          <source>Note that formatting need not occur synchronously. It may be delayed until a LogRecord is actually written to an external sink.</source>
          <target state="translated">フォーマットは同期的に行われる必要はないことに注意してください。LogRecordが実際に外部シンクに書き込まれるまで遅れることがあります。</target>
        </trans-unit>
        <trans-unit id="313e18c8d519e29b3a65a5812fbc567a887b01fb" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;delim&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this constructor does not throw an exception. However, trying to invoke other methods on the resulting &lt;code&gt;StringTokenizer&lt;/code&gt; may result in a &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;delim&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このコンストラクタは例外をスローしないことに注意してください。ただし、結果の &lt;code&gt;StringTokenizer&lt;/code&gt; で他のメソッドを呼び出そうとすると、 &lt;code&gt;NullPointerException&lt;/code&gt; が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="b327bbbb69b7b67667284e563b95ce92dacc0d61" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;index&lt;/code&gt; is greater than &lt;code&gt;length&lt;/code&gt; the value returned may be meaningless.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; が &lt;code&gt;length&lt;/code&gt; より大きい場合、返される値は無意味になる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b10eb57d6408f705ea07799de8f18ff9c86ac56e" translate="yes" xml:space="preserve">
          <source>Note that if a &lt;code&gt;null&lt;/code&gt; command string was passed to the constructor for this &lt;code&gt;ActionEvent&lt;/code&gt;, this this method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; コマンド文字列がこの &lt;code&gt;ActionEvent&lt;/code&gt; のコンストラクターに渡された場合、このこのメソッドは &lt;code&gt;null&lt;/code&gt; を返すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="8de154d974f3eeff31c72efc965511104f07ddb5" translate="yes" xml:space="preserve">
          <source>Note that if a given implementation is not cloneable, it is still possible to compute intermediate digests by instantiating several instances, if the number of digests is known in advance.</source>
          <target state="translated">与えられた実装が複製できない場合でも、ダイジェストの数が事前に分かっていれば、複数のインスタンスをインスタンス化することで中間ダイジェストを計算することが可能であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9c186c86d45c03ecc52b8b60127c4f9371e9220b" translate="yes" xml:space="preserve">
          <source>Note that if a method returns &lt;code&gt;int[]&lt;/code&gt;, this will be represented by the string &lt;code&gt;&quot;[I&quot;&lt;/code&gt; returned by &lt;code&gt;
      Class.getName()&lt;/code&gt;, but if a method returns &lt;code&gt;List&amp;lt;int[]&amp;gt;&lt;/code&gt;, this will be represented by the string &lt;code&gt;
      &quot;java.util.List&amp;lt;int[]&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">メソッドが &lt;code&gt;int[]&lt;/code&gt; 返す場合、これは &lt;code&gt; Class.getName()&lt;/code&gt; によって返される文字列 &lt;code&gt;&quot;[I&quot;&lt;/code&gt; で表されますが、メソッドが &lt;code&gt;List&amp;lt;int[]&amp;gt;&lt;/code&gt; 返す場合、これは文字列 &lt;code&gt; &quot;java.util.List&amp;lt;int[]&amp;gt;&quot;&lt;/code&gt; 表されることに注意してください。.util.List &amp;lt;int []&amp;gt; &quot;。</target>
        </trans-unit>
        <trans-unit id="433ded20e283859ed49d1dd0ff8968d681ab2e98" translate="yes" xml:space="preserve">
          <source>Note that if a method returns &lt;code&gt;int[]&lt;/code&gt;, this will be represented by the string &lt;code&gt;&quot;[I&quot;&lt;/code&gt; returned by &lt;code&gt;Class.getName()&lt;/code&gt;, but if a method returns &lt;code&gt;List&amp;lt;int[]&amp;gt;&lt;/code&gt;, this will be represented by the string &lt;code&gt;&quot;java.util.List&amp;lt;int[]&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">メソッドが &lt;code&gt;int[]&lt;/code&gt; 返す場合、これは文字列 &lt;code&gt;&quot;[I&quot;&lt;/code&gt; が &lt;code&gt;Class.getName()&lt;/code&gt; によって返されることによって表されますが、メソッドが &lt;code&gt;List&amp;lt;int[]&amp;gt;&lt;/code&gt; 返す場合、これは文字列 &lt;code&gt;&quot;java.util.List&amp;lt;int[]&amp;gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7777a7df35be6376d57fccbc74d503fdfe0ec2c9" translate="yes" xml:space="preserve">
          <source>Note that if a processor supports &lt;code&gt;&quot;*&quot;&lt;/code&gt; and returns &lt;code&gt;
 true&lt;/code&gt;, all annotations are claimed. Therefore, a universal processor being used to, for example, implement additional validity checks should return &lt;code&gt;false&lt;/code&gt; so as to not prevent other such checkers from being able to run.</source>
          <target state="translated">プロセッサが &lt;code&gt;&quot;*&quot;&lt;/code&gt; をサポートし、 &lt;code&gt; true&lt;/code&gt; を返す場合、すべての注釈が要求されることに注意してください。したがって、たとえば、追加の有効性チェックを実装するために使用されているユニバーサルプロセッサは、他のそのようなチェッカーの実行を妨げないように &lt;code&gt;false&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="d8adb955ab8ea1c93720a774cb1ce354cd65ec1c" translate="yes" xml:space="preserve">
          <source>Note that if a processor supports &lt;code&gt;&quot;*&quot;&lt;/code&gt; and returns &lt;code&gt;true&lt;/code&gt;, all annotations are claimed. Therefore, a universal processor being used to, for example, implement additional validity checks should return &lt;code&gt;false&lt;/code&gt; so as to not prevent other such checkers from being able to run.</source>
          <target state="translated">プロセッサが &lt;code&gt;&quot;*&quot;&lt;/code&gt; をサポートし、 &lt;code&gt;true&lt;/code&gt; を返す場合、すべての注釈が要求されることに注意してください。したがって、たとえば、追加の有効性チェックを実装するために使用されているユニバーサルプロセッサは、他のそのようなチェッカーの実行を妨げないように &lt;code&gt;false&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="52f68ddd38d67d672a89f2843df1e927f2a43f83" translate="yes" xml:space="preserve">
          <source>Note that if an attribute was defaulted (&lt;em&gt;!isSpecified()&lt;/em&gt;) it will of necessity also have been declared (&lt;em&gt;isDeclared()&lt;/em&gt;) in the DTD. Similarly if an attribute's type is anything except CDATA, then it must have been declared.</source>
          <target state="translated">属性がデフォルト設定されている場合（&lt;em&gt;！isSpecified（）&lt;/em&gt;）、必然的にDTDで宣言されている（&lt;em&gt;isDeclared（）&lt;/em&gt;）ことに注意してください。同様に、属性のタイプがCDATA以外の場合は、宣言されている必要があります。</target>
        </trans-unit>
        <trans-unit id="3d8d20d3ffbbe0f4f3b52fb57b430bb24dc726a4" translate="yes" xml:space="preserve">
          <source>Note that if an element is null, then &lt;code&gt;&quot;null&quot;&lt;/code&gt; is added.</source>
          <target state="translated">要素がnullの場合、 &lt;code&gt;&quot;null&quot;&lt;/code&gt; が追加されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5732e39c261ad45a46e1ff1f64f24af0d58290bb" translate="yes" xml:space="preserve">
          <source>Note that if an individual element is &lt;code&gt;null&lt;/code&gt;, then &lt;code&gt;&quot;null&quot;&lt;/code&gt; is added.</source>
          <target state="translated">個々の要素が &lt;code&gt;null&lt;/code&gt; の場合、 &lt;code&gt;&quot;null&quot;&lt;/code&gt; が追加されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2bc9e52aec97c9649f65d7fccceb6ac91a53c424" translate="yes" xml:space="preserve">
          <source>Note that if any other secondary loop is started while this loop is running, the blocked thread will not resume execution until the nested loop is terminated.</source>
          <target state="translated">このループの実行中に他のセカンダリループが開始された場合、ネストされたループが終了するまでブロックされたスレッドは実行を再開しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="092551d4016cb9b4e9fc2e439b067f7680224046" translate="yes" xml:space="preserve">
          <source>Note that if both the integer quotient and remainder are needed, this method is faster than using the &lt;code&gt;divideToIntegralValue&lt;/code&gt; and &lt;code&gt;remainder&lt;/code&gt; methods separately because the division need only be carried out once.</source>
          <target state="translated">整数の商と剰余の両方が必要な場合、このメソッドは、 &lt;code&gt;divideToIntegralValue&lt;/code&gt; メソッドと &lt;code&gt;remainder&lt;/code&gt; メソッドを別々に使用するよりも高速です。</target>
        </trans-unit>
        <trans-unit id="d3a2200eed1ffa4b7f49f79dc2e9fa8566b65b7b" translate="yes" xml:space="preserve">
          <source>Note that if it is important that the elements for a given key appear in the order they appear in the source, then we cannot use a concurrent reduction, as ordering is one of the casualties of concurrent insertion. We would then be constrained to implement either a sequential reduction or a merge-based parallel reduction.</source>
          <target state="translated">与えられたキーの要素がソースに現れた順に現れることが重要な場合、順序付けは同時挿入の問題の一つであるため、同時削減は使用できないことに注意してください。その場合、逐次削減かマージベースの並列削減のどちらかを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="f052fae04181e04f18acf801b6aeeae3a31ae3d3" translate="yes" xml:space="preserve">
          <source>Note that if no transform is applied to the gradient when it is created, the identity transform is used.</source>
          <target state="translated">グラデーションが作成されたときに変換が適用されていない場合は、同一性変換が使用されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7c7485b64a1bcc0b312e40ebbe08f7d4dc7db6ac" translate="yes" xml:space="preserve">
          <source>Note that if no type is set, the &lt;code&gt;JOIN&lt;/code&gt; will automatically be an inner join. The comments for the fields in the &lt;code&gt;JoinRowSet&lt;/code&gt; interface explain these &lt;code&gt;JOIN&lt;/code&gt; types, which are standard SQL &lt;code&gt;JOIN&lt;/code&gt; types.</source>
          <target state="translated">タイプが設定されていない場合、 &lt;code&gt;JOIN&lt;/code&gt; は自動的に内部結合になることに注意してください。内のフィールドのコメント &lt;code&gt;JoinRowSet&lt;/code&gt; 、これらは説明インタフェース &lt;code&gt;JOIN&lt;/code&gt; の標準SQLいるタイプ、 &lt;code&gt;JOIN&lt;/code&gt; の種類を。</target>
        </trans-unit>
        <trans-unit id="8da58e5799766c1707c13ed638b6f03380fa372b" translate="yes" xml:space="preserve">
          <source>Note that if one of the arguments is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;
 NullPointerException&lt;/code&gt; may or may not be thrown depending on what ordering policy, if any, the &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; chooses to have for &lt;code&gt;null&lt;/code&gt; values.</source>
          <target state="translated">引数の1つが &lt;code&gt;null&lt;/code&gt; の場合、&lt;a href=&quot;comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;null&lt;/code&gt; 値に対して選択する順序付けポリシーに応じて、 &lt;code&gt; NullPointerException&lt;/code&gt; がスローされる場合とスローされない場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="eb503aa30fc1ac3377f74194327710a61494da89" translate="yes" xml:space="preserve">
          <source>Note that if one of the arguments is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; may or may not be thrown depending on what ordering policy, if any, the &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; chooses to have for &lt;code&gt;null&lt;/code&gt; values.</source>
          <target state="translated">引数の1つが &lt;code&gt;null&lt;/code&gt; の場合、順序付けポリシーに応じて &lt;code&gt;NullPointerException&lt;/code&gt; がスローされる場合とスローされない場合があることに注意してください。ある場合、&lt;a href=&quot;comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;null&lt;/code&gt; 値を持つことを選択します。</target>
        </trans-unit>
        <trans-unit id="23236ea0d90e947ea5d4906783c6f38d8d69e571" translate="yes" xml:space="preserve">
          <source>Note that if proxy interfaces with a mix of accessibilities -- for example, an exported public interface and a non-exported non-public interface -- are proxied by the same instance, then the proxy class's accessibility is governed by the least accessible proxy interface.</source>
          <target state="translated">例えば、エクスポートされたパブリック・インターフェイスとエクスポートされていない非パブリック・インターフェイスなど、アクセス性が混在するプロキシ・インターフェイスが同じインスタンスによってプロキシ化されている場合、プロキシクラスのアクセシビリティは、最もアクセスしにくいプロキシ・インターフェイスによって支配されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="97b5d25de9ae4d42221d9291b66f30608053245d" translate="yes" xml:space="preserve">
          <source>Note that if the &lt;code&gt;Runnable.run&lt;/code&gt; method throws an uncaught exception (on the event dispatching thread) it's caught and rethrown, as an &lt;code&gt;InvocationTargetException&lt;/code&gt;, on the caller's thread.</source>
          <target state="translated">&lt;code&gt;Runnable.run&lt;/code&gt; メソッドが（イベントディスパッチスレッドで）キャッチされなかった例外をスローした場合、呼び出し元のスレッドで &lt;code&gt;InvocationTargetException&lt;/code&gt; としてキャッチされ、再スローされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ddbd1613a8e07d0dbe9f73374cdc3d8746b897e2" translate="yes" xml:space="preserve">
          <source>Note that if the argument is equal to the value of &lt;a href=&quot;integer#MIN_VALUE&quot;&gt;&lt;code&gt;Integer.MIN_VALUE&lt;/code&gt;&lt;/a&gt;, the most negative representable &lt;code&gt;int&lt;/code&gt; value, the result is that same value, which is negative.</source>
          <target state="translated">引数が&lt;a href=&quot;integer#MIN_VALUE&quot;&gt; &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt; &lt;/a&gt;の値と等しい場合、最も負の表現可能な &lt;code&gt;int&lt;/code&gt; 値である場合、結果は同じ値、つまり負になります。</target>
        </trans-unit>
        <trans-unit id="551a700f57d929e8f9029d7c02782936756d7d55" translate="yes" xml:space="preserve">
          <source>Note that if the argument is equal to the value of &lt;a href=&quot;long#MIN_VALUE&quot;&gt;&lt;code&gt;Long.MIN_VALUE&lt;/code&gt;&lt;/a&gt;, the most negative representable &lt;code&gt;long&lt;/code&gt; value, the result is that same value, which is negative.</source>
          <target state="translated">引数が&lt;a href=&quot;long#MIN_VALUE&quot;&gt; &lt;code&gt;Long.MIN_VALUE&lt;/code&gt; &lt;/a&gt;の値（最も負の表現可能な &lt;code&gt;long&lt;/code&gt; 値）と等しい場合、結果は同じ値（負）になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="344b650dfc6ccc8374c6e92872a7dc2b09bfc90e" translate="yes" xml:space="preserve">
          <source>Note that if the client application has not specified an explicit source method name and source class name, then the LogRecord class will infer them automatically when they are first accessed (due to a call on getSourceMethodName or getSourceClassName) by analyzing the call stack. Therefore, if a logging Handler wants to pass off a LogRecord to another thread, or to transmit it over RMI, and if it wishes to subsequently obtain method name or class name information it should call one of getSourceClassName or getSourceMethodName to force the values to be filled in.</source>
          <target state="translated">クライアントアプリケーションが明示的なソースメソッド名とソースクラス名を指定していない場合、LogRecord クラスは、それらが最初にアクセスされたとき(getSourceMethodName または getSourceClassName の呼び出しによる)、呼び出しスタックを分析することで自動的にそれらを推論することに注意してください。したがって、ロギングハンドラが LogRecord を別のスレッドに渡したい場合、または RMI 経由で送信したい場合、その後にメソッド名やクラス名の情報を取得したい場合は、getSourceClassName または getSourceMethodName のいずれかを呼び出して、値を強制的に埋めておく必要があります。</target>
        </trans-unit>
        <trans-unit id="dd5e0eb89387b146744e893bba6b204ebdd172ee" translate="yes" xml:space="preserve">
          <source>Note that if the event parameter is &lt;code&gt;null&lt;/code&gt; the behavior is unspecified and may result in an exception.</source>
          <target state="translated">イベントパラメータが &lt;code&gt;null&lt;/code&gt; の場合、動作は指定されておらず、例外が発生する可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="0c7f6aa9e75f6c42c57215519e6085ee22e050fa" translate="yes" xml:space="preserve">
          <source>Note that if the given input stream does not support &lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../io/inputstream#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt;, this method will consume the entire input stream.</source>
          <target state="translated">指定された入力ストリームが&lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../io/inputstream#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;サポートしていない場合、このメソッドは入力ストリーム全体を消費することに注意してください。</target>
        </trans-unit>
        <trans-unit id="90240e919fc9f9c729c2517c2ae0e2a7eec36fcc" translate="yes" xml:space="preserve">
          <source>Note that if the given input stream does not support &lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../io/inputstream#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt;, this method will consume the entire input stream. Otherwise, each call to this method consumes one CRL and the read position of the input stream is positioned to the next available byte after the inherent end-of-CRL marker. If the data in the input stream does not contain an inherent end-of-CRL marker (other than EOF) and there is trailing data after the CRL is parsed, a &lt;code&gt;CRLException&lt;/code&gt; is thrown.</source>
          <target state="translated">指定された入力ストリームが&lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../io/inputstream#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;サポートしていない場合、このメソッドは入力ストリーム全体を消費することに注意してください。それ以外の場合、このメソッドを呼び出すたびに1つのCRLが消費され、入力ストリームの読み取り位置は、固有のCRL終了マーカーの次の使用可能なバイトに配置されます。入力ストリームのデータに固有のCRLの終わりマーカー（EOF以外）が含まれておらず、CRLの解析後に末尾のデータがある場合、 &lt;code&gt;CRLException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="2e7620054a0441dcb3c95edb39638ba8ef20a98a" translate="yes" xml:space="preserve">
          <source>Note that if the given input stream does not support &lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../io/inputstream#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt;, this method will consume the entire input stream. Otherwise, each call to this method consumes one certificate and the read position of the input stream is positioned to the next available byte after the inherent end-of-certificate marker. If the data in the input stream does not contain an inherent end-of-certificate marker (other than EOF) and there is trailing data after the certificate is parsed, a &lt;code&gt;CertificateException&lt;/code&gt; is thrown.</source>
          <target state="translated">指定された入力ストリームが&lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../io/inputstream#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;サポートしていない場合、このメソッドは入力ストリーム全体を消費することに注意してください。それ以外の場合、このメソッドを呼び出すたびに1つの証明書が消費され、入力ストリームの読み取り位置は、固有の証明書の終わりマーカーの次の使用可能なバイトに配置されます。入力ストリームのデータに固有の証明書の終わりマーカー（EOF以外）が含まれておらず、証明書の解析後に末尾のデータがある場合、 &lt;code&gt;CertificateException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="54f7c4f974f4265dbf7fc95a7341065c5377d9b9" translate="yes" xml:space="preserve">
          <source>Note that if the given input stream does not support &lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../io/inputstream#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt;, this method will consume the entire input stream.</source>
          <target state="translated">指定された入力ストリームが&lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../io/inputstream#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; を&lt;/a&gt;サポートしていない場合、このメソッドは入力ストリーム全体を消費することに注意してください。</target>
        </trans-unit>
        <trans-unit id="f1827091b34459c49e7bed5c479a4f915cee04ae" translate="yes" xml:space="preserve">
          <source>Note that if the given input stream does not support &lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../io/inputstream#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt;, this method will consume the entire input stream. Otherwise, each call to this method consumes one CRL and the read position of the input stream is positioned to the next available byte after the inherent end-of-CRL marker. If the data in the input stream does not contain an inherent end-of-CRL marker (other than EOF) and there is trailing data after the CRL is parsed, a &lt;code&gt;CRLException&lt;/code&gt; is thrown.</source>
          <target state="translated">指定された入力ストリームが&lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../io/inputstream#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; を&lt;/a&gt;サポートしていない場合、このメソッドは入力ストリーム全体を消費することに注意してください。それ以外の場合、このメソッドの呼び出しごとに1つのCRLが消費され、入力ストリームの読み取り位置は、固有のEnd-of-CRLマーカーの後の次の使用可能なバイトに配置されます。入力ストリームのデータに（EOF以外の）固有のEnd-of-CRLマーカーが含まれておらず、CRLが解析された後に後続のデータがある場合、 &lt;code&gt;CRLException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="c95b62711973f523009364195f62b57b8a599ba2" translate="yes" xml:space="preserve">
          <source>Note that if the given input stream does not support &lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../io/inputstream#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt;, this method will consume the entire input stream. Otherwise, each call to this method consumes one certificate and the read position of the input stream is positioned to the next available byte after the inherent end-of-certificate marker. If the data in the input stream does not contain an inherent end-of-certificate marker (other than EOF) and there is trailing data after the certificate is parsed, a &lt;code&gt;CertificateException&lt;/code&gt; is thrown.</source>
          <target state="translated">指定された入力ストリームが&lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../io/inputstream#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; を&lt;/a&gt;サポートしていない場合、このメソッドは入力ストリーム全体を消費することに注意してください。それ以外の場合、このメソッドを呼び出すたびに1つの証明書が消費され、入力ストリームの読み取り位置は、固有の証明書の終わりマーカーの後にある次の使用可能なバイトに配置されます。入力ストリームのデータに固有の証明書の終わりマーカー（EOF以外）が含まれておらず、証明書が解析された後に後続のデータがある場合、 &lt;code&gt;CertificateException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="5bbaa75ffe6518429b117d97bb9e13fa7aeb2fe4" translate="yes" xml:space="preserve">
          <source>Note that if the given number of bytes to be copied is larger than the length of this &lt;code&gt;SerialBlob&lt;/code&gt; object's array of bytes, the given number will be shortened to the array's length.</source>
          <target state="translated">コピーされる指定されたバイト数がこの &lt;code&gt;SerialBlob&lt;/code&gt; オブジェクトのバイト配列の長さよりも大きい場合、指定された数は配列の長さに短縮されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="534ad76bbd0db642a4a5fde4047cfc008cd5e798" translate="yes" xml:space="preserve">
          <source>Note that if the given output stream is &lt;a href=&quot;../../io/flushable&quot;&gt;&lt;code&gt;Flushable&lt;/code&gt;&lt;/a&gt; then its &lt;a href=&quot;../../io/flushable#flush()&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; method may need to invoked after this method completes so as to flush any buffered output.</source>
          <target state="translated">指定された出力ストリームがある場合ことに注意してください&lt;a href=&quot;../../io/flushable&quot;&gt; &lt;code&gt;Flushable&lt;/code&gt; &lt;/a&gt;その&lt;a href=&quot;../../io/flushable#flush()&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt;バッファされた出力をフラッシュするようにメソッドは、このメソッドの完了後に呼び出される必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="b0d5df812dafb964f11dce9b421edee0651600af" translate="yes" xml:space="preserve">
          <source>Note that if the given output stream is &lt;a href=&quot;../../io/flushable&quot;&gt;&lt;code&gt;Flushable&lt;/code&gt;&lt;/a&gt; then its &lt;a href=&quot;../../io/flushable#flush--&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; method may need to invoked after this method completes so as to flush any buffered output.</source>
          <target state="translated">指定された出力ストリームが&lt;a href=&quot;../../io/flushable&quot;&gt; &lt;code&gt;Flushable&lt;/code&gt; で&lt;/a&gt;ある場合、バッファリングされた出力をフラッシュするために、このメソッドが完了した後にその&lt;a href=&quot;../../io/flushable#flush--&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt;メソッドを呼び出す必要がある場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4b1a99706a5ea258fbc53a080b302dff06b37c31" translate="yes" xml:space="preserve">
          <source>Note that if the program uses hasMoreElements() and nextElement() instead to iterate through the NamingEnumeration, because these methods cannot throw exceptions, no exception will be thrown. Instead, in the previous example, after the n'th result has been returned by nextElement(), invoking hasMoreElements() would return false.</source>
          <target state="translated">プログラムが hasMoreElements()および nextElement()を使用して NamingEnumeration を反復処理する場合、これらのメソッドは例外をスローできないため、例外はスローされないことに注意してください。代わりに、先ほどの例では、nextElement()が n 番目の結果を返した後で hasMoreElements()を呼び出すと false が返されます。</target>
        </trans-unit>
        <trans-unit id="74d9644d5ed77ea6ee5a9c09c65d61b1fec65648" translate="yes" xml:space="preserve">
          <source>Note that if the result is &lt;code&gt;null&lt;/code&gt;, then the Logger will use a resource bundle or resource bundle name inherited from its parent.</source>
          <target state="translated">結果が &lt;code&gt;null&lt;/code&gt; の場合、ロガーは親から継承したリソースバンドルまたはリソースバンドル名を使用することに注意してください。</target>
        </trans-unit>
        <trans-unit id="774d989105eaf3efacce03fa62042e7823cce473" translate="yes" xml:space="preserve">
          <source>Note that if the sequence of characters is already available as a character array, using this constructor is faster than converting the &lt;code&gt;char&lt;/code&gt; array to string and using the &lt;code&gt;BigDecimal(String)&lt;/code&gt; constructor .</source>
          <target state="translated">文字のシーケンスがすでに文字配列として利用できる場合、このコンストラクタを使用すると、 &lt;code&gt;char&lt;/code&gt; 配列を文字列に変換して &lt;code&gt;BigDecimal(String)&lt;/code&gt; コンストラクタを使用するよりも高速になります。</target>
        </trans-unit>
        <trans-unit id="ee5d641dbc68d85341336041df46fcac48f42a89" translate="yes" xml:space="preserve">
          <source>Note that if the sequence of characters is already available within a character array, using this constructor is faster than converting the &lt;code&gt;char&lt;/code&gt; array to string and using the &lt;code&gt;BigDecimal(String)&lt;/code&gt; constructor .</source>
          <target state="translated">文字シーケンスがすでに文字配列内で使用可能な場合、このコンストラクタを使用すると、 &lt;code&gt;char&lt;/code&gt; 配列を文字列に変換して &lt;code&gt;BigDecimal(String)&lt;/code&gt; コンストラクタを使用するよりも高速になります。</target>
        </trans-unit>
        <trans-unit id="c653832fe9e9a5a7b45e88d7b4b7c78e7e8a24e0" translate="yes" xml:space="preserve">
          <source>Note that if the state is not supported on a given platform, neither the state nor the return value of the &lt;a href=&quot;#getExtendedState()&quot;&gt;&lt;code&gt;getExtendedState()&lt;/code&gt;&lt;/a&gt; method will be changed. The application may determine whether a specific state is supported via the &lt;a href=&quot;toolkit#isFrameStateSupported(int)&quot;&gt;&lt;code&gt;Toolkit.isFrameStateSupported(int)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">特定のプラットフォームで状態がサポートされていない場合、状態も&lt;a href=&quot;#getExtendedState()&quot;&gt; &lt;code&gt;getExtendedState()&lt;/code&gt; &lt;/a&gt;メソッドの戻り値も変更されないことに注意してください。アプリケーションは、&lt;a href=&quot;toolkit#isFrameStateSupported(int)&quot;&gt; &lt;code&gt;Toolkit.isFrameStateSupported(int)&lt;/code&gt; &lt;/a&gt;メソッドを介して特定の状態がサポートされているかどうかを判別できます。</target>
        </trans-unit>
        <trans-unit id="c009d66492b671713524ebe2a8347822c7b30890" translate="yes" xml:space="preserve">
          <source>Note that if the state is not supported on a given platform, neither the state nor the return value of the &lt;a href=&quot;#getState()&quot;&gt;&lt;code&gt;getState()&lt;/code&gt;&lt;/a&gt; method will be changed. The application may determine whether a specific state is supported via the &lt;a href=&quot;toolkit#isFrameStateSupported(int)&quot;&gt;&lt;code&gt;Toolkit.isFrameStateSupported(int)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">特定のプラットフォームで状態がサポートされていない場合、状態も&lt;a href=&quot;#getState()&quot;&gt; &lt;code&gt;getState()&lt;/code&gt; &lt;/a&gt;メソッドの戻り値も変更されないことに注意してください。アプリケーションは、&lt;a href=&quot;toolkit#isFrameStateSupported(int)&quot;&gt; &lt;code&gt;Toolkit.isFrameStateSupported(int)&lt;/code&gt; &lt;/a&gt;メソッドを介して特定の状態がサポートされているかどうかを判別できます。</target>
        </trans-unit>
        <trans-unit id="a478ef65e641810f99e57f9e4607b22c57a2ef28" translate="yes" xml:space="preserve">
          <source>Note that if the underlying input stream is able to supply</source>
          <target state="translated">基底となる入力ストリームが</target>
        </trans-unit>
        <trans-unit id="be5c7f889ab46e8fe7728832c7b1fd8abf4e82be" translate="yes" xml:space="preserve">
          <source>Note that if this &lt;code&gt;Component&lt;/code&gt; is inheriting a bound property, then no event will be fired in response to a change in the inherited property.</source>
          <target state="translated">この &lt;code&gt;Component&lt;/code&gt; がバインドされたプロパティを継承している場合、継承されたプロパティの変更に応答してイベントが発生しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="7796f46b951fee5509c7b9824042436c7fa444f6" translate="yes" xml:space="preserve">
          <source>Note that if this CodeSource has a null location and a null certificate chain, then it implies every other CodeSource.</source>
          <target state="translated">このコードソースがヌルの場所とヌルの証明書チェーンを持つ場合、他のすべてのコードソースを暗示していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b866f620e2031fa2f054dd0ffed73c80c3041462" translate="yes" xml:space="preserve">
          <source>Note that if this Container is inheriting a bound property, then no event will be fired in response to a change in the inherited property.</source>
          <target state="translated">このコンテナがバインドされたプロパティを継承している場合、継承されたプロパティの変更に応じてイベントは発生しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="f282243a057f406380e2cad62f7ad0f39f73366b" translate="yes" xml:space="preserve">
          <source>Note that if this KeyStore has already been loaded, it is reinitialized and loaded again from the given parameter.</source>
          <target state="translated">このKeyStoreが既にロードされている場合は、再初期化され、与えられたパラメータから再度ロードされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="73a443184e6e036601ed7ff0d4e667c642992672" translate="yes" xml:space="preserve">
          <source>Note that if this Window is inheriting a bound property, then no event will be fired in response to a change in the inherited property.</source>
          <target state="translated">この Window がバインドされたプロパティを継承している場合、継承されたプロパティの変更に応じてイベントは発生しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="42c51aafbd8982934ba161bd487f452aa086da40" translate="yes" xml:space="preserve">
          <source>Note that if this keystore has already been loaded, it is reinitialized and loaded again from the given input stream.</source>
          <target state="translated">このキーストアが既にロードされている場合は、再初期化され、与えられた入力ストリームから再度ロードされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c8ee85c349c252d854e34e0f8c5468b749453d00" translate="yes" xml:space="preserve">
          <source>Note that if this method enters the &lt;code&gt;abort&lt;/code&gt; phase (either the &lt;code&gt;login&lt;/code&gt; or &lt;code&gt;commit&lt;/code&gt; phase failed), this method invokes all LoginModules configured for the application regardless of their respective &lt;code&gt;Configuration&lt;/code&gt; flag parameters. Essentially this means that &lt;code&gt;Requisite&lt;/code&gt; and &lt;code&gt;Sufficient&lt;/code&gt; semantics are ignored during the &lt;code&gt;abort&lt;/code&gt; phase. This guarantees that proper cleanup and state restoration can take place.</source>
          <target state="translated">このメソッドが &lt;code&gt;abort&lt;/code&gt; フェーズに入る場合（ &lt;code&gt;login&lt;/code&gt; または &lt;code&gt;commit&lt;/code&gt; フェーズのいずれかが失敗した場合）、このメソッドは、それぞれの &lt;code&gt;Configuration&lt;/code&gt; フラグパラメーターに関係なく、アプリケーション用に構成されたすべてのLoginModuleを呼び出します。本質的に、これは、 &lt;code&gt;abort&lt;/code&gt; フェーズ中に &lt;code&gt;Requisite&lt;/code&gt; および &lt;code&gt;Sufficient&lt;/code&gt; セマンティクスが無視されることを意味します。これにより、適切なクリーンアップと状態の復元が行われることが保証されます。</target>
        </trans-unit>
        <trans-unit id="380d9f6f566ca3699136e0c02058775f57d47362" translate="yes" xml:space="preserve">
          <source>Note that if this method returns &lt;a href=&quot;elements.origin#EXPLICIT&quot;&gt;&lt;code&gt;EXPLICIT&lt;/code&gt;&lt;/a&gt; and the annotation mirror was created from a class file, then the element may not, in fact, correspond to an explicitly declared construct in source code. This is due to limitations of the fidelity of the class file format in preserving information from source code. For example, at least some versions of the class file format do not preserve whether an annotation was explicitly declared by the programmer or was implicitly declared as a &lt;em&gt;container annotation&lt;/em&gt;.</source>
          <target state="translated">このメソッドが&lt;a href=&quot;elements.origin#EXPLICIT&quot;&gt; &lt;code&gt;EXPLICIT&lt;/code&gt; &lt;/a&gt;を返し、アノテーションミラーがクラスファイルから作成された場合、要素は実際にはソースコードで明示的に宣言された構造に対応していない可能性があることに注意してください。これは、ソースコードからの情報を保持する際のクラスファイル形式の忠実度の制限によるものです。たとえば、クラスファイル形式の少なくとも一部のバージョンでは、アノテーションがプログラマによって明示的に宣言されているか、&lt;em&gt;コンテナアノテーション&lt;/em&gt;として暗黙的に宣言されているかが保持されません。</target>
        </trans-unit>
        <trans-unit id="1503afd9d58cfcf8d964d3dd4ac77a75801db3a6" translate="yes" xml:space="preserve">
          <source>Note that if this method returns &lt;a href=&quot;elements.origin#EXPLICIT&quot;&gt;&lt;code&gt;EXPLICIT&lt;/code&gt;&lt;/a&gt; and the element was created from a class file, then the element may not, in fact, correspond to an explicitly declared construct in source code. This is due to limitations of the fidelity of the class file format in preserving information from source code. For example, at least some versions of the class file format do not preserve whether a constructor was explicitly declared by the programmer or was implicitly declared as the &lt;em&gt;default constructor&lt;/em&gt;.</source>
          <target state="translated">このメソッドが&lt;a href=&quot;elements.origin#EXPLICIT&quot;&gt; &lt;code&gt;EXPLICIT&lt;/code&gt; &lt;/a&gt;を返し、要素がクラスファイルから作成された場合、その要素は実際には、ソースコードで明示的に宣言された構造に対応していない可能性があることに注意してください。これは、ソースコードからの情報を保持する際のクラスファイル形式の忠実度の制限によるものです。たとえば、クラスファイル形式の少なくとも一部のバージョンでは、コンストラクターがプログラマーによって明示的に宣言されているか、&lt;em&gt;デフォルトのコンストラクター&lt;/em&gt;として暗黙的に宣言されているかが保持されません。</target>
        </trans-unit>
        <trans-unit id="4c79731215980bfcfd36f07188150a9ea1bb8f25" translate="yes" xml:space="preserve">
          <source>Note that if this method returns &lt;a href=&quot;elements.origin#EXPLICIT&quot;&gt;&lt;code&gt;EXPLICIT&lt;/code&gt;&lt;/a&gt; and the module directive was created from a class file, then the module directive may not, in fact, correspond to an explicitly declared construct in source code. This is due to limitations of the fidelity of the class file format in preserving information from source code. For example, at least some versions of the class file format do not preserve whether a &lt;code&gt;uses&lt;/code&gt; directive was explicitly declared by the programmer or was added as a synthetic construct.</source>
          <target state="translated">このメソッドが&lt;a href=&quot;elements.origin#EXPLICIT&quot;&gt; &lt;code&gt;EXPLICIT&lt;/code&gt; &lt;/a&gt;を返し、モジュールディレクティブがクラスファイルから作成された場合、モジュールディレクティブは、実際には、ソースコードで明示的に宣言された構造に対応しない場合があることに注意してください。これは、ソースコードからの情報を保持する際のクラスファイル形式の忠実度の制限によるものです。たとえば、クラスファイル形式の少なくとも一部のバージョンでは、 &lt;code&gt;uses&lt;/code&gt; ディレクティブがプログラマーによって明示的に宣言されているか、合成構造として追加されているかが保持されません。</target>
        </trans-unit>
        <trans-unit id="8baa95b0fed125c2956cc64c3d8d5a6a764365cb" translate="yes" xml:space="preserve">
          <source>Note that if your application creates its own custom activation group, a security manager must be set for that group. Otherwise objects cannot be activated in the group. &lt;a href=&quot;../../../../java.base/java/lang/securitymanager&quot;&gt;&lt;code&gt;SecurityManager&lt;/code&gt;&lt;/a&gt; is set by default.</source>
          <target state="translated">アプリケーションが独自のカスタムアクティベーショングループを作成する場合は、そのグループにセキュリティマネージャーを設定する必要があることに注意してください。そうしないと、グループ内でオブジェクトをアクティブ化できません。&lt;a href=&quot;../../../../java.base/java/lang/securitymanager&quot;&gt; &lt;code&gt;SecurityManager&lt;/code&gt; &lt;/a&gt;はデフォルトで設定されています。</target>
        </trans-unit>
        <trans-unit id="c68c212551671e7a9a78eff5842cbd110b381643" translate="yes" xml:space="preserve">
          <source>Note that implementors of this interface may find it convenient to extend &lt;a href=&quot;abstractprocessor&quot;&gt;&lt;code&gt;AbstractProcessor&lt;/code&gt;&lt;/a&gt; rather than implementing this interface directly.</source>
          <target state="translated">このインターフェイスの実装者は、このインターフェイスを直接実装するよりも、&lt;a href=&quot;abstractprocessor&quot;&gt; &lt;code&gt;AbstractProcessor&lt;/code&gt; &lt;/a&gt;を拡張すると便利な場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="0bff893394739c0ef400ed7cf72c30c877d1ec67" translate="yes" xml:space="preserve">
          <source>Note that in most cases, for two instances of class &lt;code&gt;Double&lt;/code&gt;, &lt;code&gt;d1&lt;/code&gt; and &lt;code&gt;d2&lt;/code&gt;, the value of &lt;code&gt;d1.equals(d2)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if and only if</source>
          <target state="translated">ほとんどの場合、クラスの2つのインスタンスのためのことを注意 &lt;code&gt;Double&lt;/code&gt; 、 &lt;code&gt;d1&lt;/code&gt; および &lt;code&gt;d2&lt;/code&gt; の値 &lt;code&gt;d1.equals(d2)&lt;/code&gt; あり &lt;code&gt;true&lt;/code&gt; 場合にのみ場合</target>
        </trans-unit>
        <trans-unit id="db1a95736593416bcb8de2009e96c016884dd267" translate="yes" xml:space="preserve">
          <source>Note that in most cases, for two instances of class &lt;code&gt;Float&lt;/code&gt;, &lt;code&gt;f1&lt;/code&gt; and &lt;code&gt;f2&lt;/code&gt;, the value of &lt;code&gt;f1.equals(f2)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if and only if</source>
          <target state="translated">ほとんどの場合、クラスの2つのインスタンスのために注意することを &lt;code&gt;Float&lt;/code&gt; 、 &lt;code&gt;f1&lt;/code&gt; と &lt;code&gt;f2&lt;/code&gt; の値 &lt;code&gt;f1.equals(f2)&lt;/code&gt; あり &lt;code&gt;true&lt;/code&gt; と場合にだけ</target>
        </trans-unit>
        <trans-unit id="d51cf871f36d469a8dae4cb42f7f423179b12d12" translate="yes" xml:space="preserve">
          <source>Note that in some cases, the returned array be empty. This can occur if this type represents a non-parameterized type nested within a parameterized type.</source>
          <target state="translated">場合によっては、返される配列が空であることに注意してください。これは、この型がパラメータ化されていない型をパラメータ化された型の中に入れ子にした場合に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="688de592429793ab731dc8b40412487515fe62b5" translate="yes" xml:space="preserve">
          <source>Note that in two's complement arithmetic, the three other basic arithmetic operations of add, subtract, and multiply are bit-wise identical if the two operands are regarded as both being signed or both being unsigned. Therefore separate &lt;code&gt;
 addUnsigned&lt;/code&gt;, etc. methods are not provided.</source>
          <target state="translated">2の補数算術では、2つのオペランドが両方とも符号付きまたは両方とも符号なしと見なされる場合、加算、減算、および乗算の3つの基本的な算術演算はビット単位で同一であることに注意してください。したがって、個別の &lt;code&gt; addUnsigned&lt;/code&gt; などのメソッドは提供されていません。</target>
        </trans-unit>
        <trans-unit id="90385339e440dcaf46fa13bfdfc451d03cfb3ffd" translate="yes" xml:space="preserve">
          <source>Note that in two's complement arithmetic, the three other basic arithmetic operations of add, subtract, and multiply are bit-wise identical if the two operands are regarded as both being signed or both being unsigned. Therefore separate &lt;code&gt;addUnsigned&lt;/code&gt;, etc. methods are not provided.</source>
          <target state="translated">2の補数演算では、2つのオペランドが両方とも符号付きまたは両方とも符号なしと見なされる場合、加算、減算、乗算の3つの他の基本的な算術演算はビット単位で同一であることに注意してください。したがって、個別の &lt;code&gt;addUnsigned&lt;/code&gt; などのメソッドは提供されていません。</target>
        </trans-unit>
        <trans-unit id="12aef33363d17a4c6e02dc22fc7eb3169bf5fbda" translate="yes" xml:space="preserve">
          <source>Note that in-place operation is allowed (i.e. the source and destination can be the same object).</source>
          <target state="translated">インプレイス操作が許可されていることに注意してください(すなわち、ソースとデスティネーションは同じオブジェクトである可能性があります)。</target>
        </trans-unit>
        <trans-unit id="33f090933196b0569df5dee7f5639217a6f1abc1" translate="yes" xml:space="preserve">
          <source>Note that instances of functional interfaces can be created with lambda expressions, method references, or constructor references.</source>
          <target state="translated">関数インタフェースのインスタンスは、ラムダ式、メソッド参照、またはコンストラクタ参照で作成できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2f6063427e8c944851a127a8a980db65f71eccb7" translate="yes" xml:space="preserve">
          <source>Note that interleaved &lt;code&gt;DataBuffer.TYPE_INT&lt;/code&gt; Rasters are not supported. To create a 1-band Raster of type &lt;code&gt;DataBuffer.TYPE_INT&lt;/code&gt;, use Raster.createPackedRaster().</source>
          <target state="translated">インターリーブされた &lt;code&gt;DataBuffer.TYPE_INT&lt;/code&gt; ラスターはサポートされていないことに注意してください。タイプ &lt;code&gt;DataBuffer.TYPE_INT&lt;/code&gt; の1バンドラスターを作成するには、Raster.createPackedRaster（）を使用します。</target>
        </trans-unit>
        <trans-unit id="03a2a95c70448b11bc7a63fb28605b1d15f58b57" translate="yes" xml:space="preserve">
          <source>Note that it is</source>
          <target state="translated">であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c274a59c364571cd5df5639ee2ea0b7c4310bc45" translate="yes" xml:space="preserve">
          <source>Note that it is generally necessary to override the &lt;code&gt;hashCode&lt;/code&gt; method whenever this method is overridden, so as to maintain the general contract for the &lt;code&gt;hashCode&lt;/code&gt; method, which states that equal objects must have equal hash codes.</source>
          <target state="translated">等しいオブジェクトは等しいハッシュコードを持たなければならないことを示す &lt;code&gt;hashCode&lt;/code&gt; メソッドの一般規約を維持するために、このメソッドがオーバーライドされるときは常に &lt;code&gt;hashCode&lt;/code&gt; メソッドをオーバーライドする必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="514b591f2671cfba70b4bb5d123384cc09690e27" translate="yes" xml:space="preserve">
          <source>Note that it is not necessary to write the leading zeros in an individual field. However, there must be at least one numeral in every field, except as described below.</source>
          <target state="translated">個々のフィールドに先頭のゼロを書く必要はないことに注意してください。ただし、以下に説明する場合を除き、各フィールドには少なくとも1つの数字を記述しなければならない。</target>
        </trans-unit>
        <trans-unit id="612fc8f699533c0572cad0aabd37cf2b64c11f57" translate="yes" xml:space="preserve">
          <source>Note that it is permissible to call this method from within a a task scheduled on this timer.</source>
          <target state="translated">このタイマーでスケジュールされたタスクの中からこのメソッドを呼び出すことができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d8ffa1f0aab195658061dc58f2243864af22f511" translate="yes" xml:space="preserve">
          <source>Note that it is permissible to call this method from within a task scheduled on this timer.</source>
          <target state="translated">このタイマーでスケジュールされたタスク内からこのメソッドを呼び出すことが許されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e7eaed8d271a7e84daafee89532064975d9d98b6" translate="yes" xml:space="preserve">
          <source>Note that it is permissible to pass the same collection in both parameters, in which case the method will return &lt;code&gt;true&lt;/code&gt; if and only if the collection is empty.</source>
          <target state="translated">両方のパラメーターで同じコレクションを渡すことが許可されていることに注意してください。その場合、コレクションが空の場合にのみ、メソッドは &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6a6d728f3ec6e999e954980cbcd91941d2c13e09" translate="yes" xml:space="preserve">
          <source>Note that it is possible additional directive kinds will be added to accommodate new, currently unknown, language structures added to future versions of the Java&amp;trade; programming language.</source>
          <target state="translated">Java&amp;trade;プログラミング言語の将来のバージョンに追加される新しい、現在は不明な言語構造に対応するために、追加のディレクティブの種類が追加される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1b45ff14fe471afc8dd4539952c88140ba928538" translate="yes" xml:space="preserve">
          <source>Note that it is possible additional element kinds will be added to accommodate new, currently unknown, language structures added to future versions of the Java&amp;trade; programming language.</source>
          <target state="translated">Java&amp;trade;プログラミング言語の将来のバージョンに追加される、現在未知の新しい言語構造に対応するために、追加の要素の種類が追加される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="dce6d5cde5e40ff1def189511080929fe993f48e" translate="yes" xml:space="preserve">
          <source>Note that it is possible additional kinds of origin values will be added in future versions of the platform.</source>
          <target state="translated">プラットフォームの将来のバージョンでは、オリジン値の種類が追加される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ec923ba157248b446f6924fc83ad0b4fe2cd2e61" translate="yes" xml:space="preserve">
          <source>Note that it is possible additional modifiers will be added in future versions of the platform.</source>
          <target state="translated">プラットフォームの将来のバージョンでは、追加の修飾子が追加される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="73597df8bc84a4a2c3eecefc968ea11e99cf5171" translate="yes" xml:space="preserve">
          <source>Note that it is possible additional nesting kinds will be added in future versions of the platform.</source>
          <target state="translated">プラットフォームの将来のバージョンでは、入れ子の種類が追加される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5e0a5e5f09dd75db9579ada2258fe863c5bc3e49" translate="yes" xml:space="preserve">
          <source>Note that it is possible additional type kinds will be added to accommodate new, currently unknown, language structures added to future versions of the Java&amp;trade; programming language.</source>
          <target state="translated">Java&amp;trade;プログラミング言語の将来のバージョンに追加される、現在未知の新しい言語構造に対応するために、型の種類が追加される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a2f55c4eac0b599bdd2d137d8a743054595b1ad9" translate="yes" xml:space="preserve">
          <source>Note that it is possible for arbitrary code to obtain access to a proxy class in an open package with &lt;a href=&quot;accessibleobject#setAccessible(java.lang.reflect.AccessibleObject%5B%5D,boolean)&quot;&gt;&lt;code&gt;setAccessible&lt;/code&gt;&lt;/a&gt;, whereas a proxy class in a non-open package is never accessible to code outside the module of the proxy class.</source>
          <target state="translated">&lt;a href=&quot;accessibleobject#setAccessible(java.lang.reflect.AccessibleObject%5B%5D,boolean)&quot;&gt; &lt;code&gt;setAccessible&lt;/code&gt; を&lt;/a&gt;使用して、任意のコードがオープンパッケージのプロキシクラスにアクセスできる可能性があるのに対し、非オープンパッケージのプロキシクラスは、プロキシクラスのモジュール外のコードにアクセスできないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="da59aa19f6e708cf0efe0a237175ae4abc480637" translate="yes" xml:space="preserve">
          <source>Note that it is possible that &lt;code&gt;acceptSecContext&lt;/code&gt; return a token for the peer, and &lt;code&gt;isEstablished&lt;/code&gt; return &lt;code&gt;true&lt;/code&gt; also. This indicates that the token needs to be sent to the peer, but the local end of the context is now fully established.</source>
          <target state="translated">可能性があることを注意 &lt;code&gt;acceptSecContext&lt;/code&gt; ピアのトークンを返し、 &lt;code&gt;isEstablished&lt;/code&gt; から戻ります &lt;code&gt;true&lt;/code&gt; も。これは、トークンをピアに送信する必要があるが、コンテキストのローカルエンドが完全に確立されていることを示しています。</target>
        </trans-unit>
        <trans-unit id="4d63431903a8b9f7a47f669cdbe8c4a1d7329911" translate="yes" xml:space="preserve">
          <source>Note that it is possible that the &lt;code&gt;initSecContext&lt;/code&gt; method return a token for the peer, and &lt;code&gt;isEstablished&lt;/code&gt; return &lt;code&gt;true&lt;/code&gt; also. This indicates that the token needs to be sent to the peer, but the local end of the context is now fully established.</source>
          <target state="translated">可能性があることに注意してください &lt;code&gt;initSecContext&lt;/code&gt; の方法は、ピアのトークンを返し、 &lt;code&gt;isEstablished&lt;/code&gt; から戻ります &lt;code&gt;true&lt;/code&gt; も。これは、トークンをピアに送信する必要があるが、コンテキストのローカルエンドが完全に確立されていることを示しています。</target>
        </trans-unit>
        <trans-unit id="3c14a0d344b2c94f579cdcede2142e2eb8b98458" translate="yes" xml:space="preserve">
          <source>Note that it is possible to encounter method types which cannot be constructed by this method, because their component types are not all reachable from a common class loader.</source>
          <target state="translated">コンポーネントの型がすべて共通のクラスローダから到達できるわけではないので、このメソッドで構築できないメソッドの型に遭遇する可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="f96cf68a097455094b72486bf393aef74e0e72c6" translate="yes" xml:space="preserve">
          <source>Note that it is possible to skip something without risking a &lt;code&gt;NoSuchElementException&lt;/code&gt; by using a pattern that can match nothing, e.g., &lt;code&gt;sc.skip(&quot;[ \t]*&quot;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sc.skip(&quot;[ \t]*&quot;)&lt;/code&gt; 、何にも一致しないパターンを使用すると、 &lt;code&gt;NoSuchElementException&lt;/code&gt; のリスクを冒すことなく何かをスキップできることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4b744b87c89c989ec2dcd5f9b9dde9806c9036e1" translate="yes" xml:space="preserve">
          <source>Note that it is the programmer's responsibility to ensure that each tab has a unique mnemonic or unpredictable results may occur.</source>
          <target state="translated">各タブが一意のニーモニックを持つようにするか、予測不可能な結果が発生する可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="164cd6aa37467bb1f41e6b81eca3e9257f606c95" translate="yes" xml:space="preserve">
          <source>Note that it is valid for an &lt;code&gt;ImageReader&lt;/code&gt; to call &lt;code&gt;flushBefore&lt;/code&gt; as part of a read operation. Therefore, if an application calls &lt;code&gt;mark&lt;/code&gt; prior to passing that stream to an &lt;code&gt;ImageReader&lt;/code&gt;, the application should not assume that the marked position will remain valid after the read operation has completed.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; が読み取り操作の一部として &lt;code&gt;flushBefore&lt;/code&gt; を呼び出すことは有効であることに注意してください。したがって、アプリケーションがそのストリームを &lt;code&gt;ImageReader&lt;/code&gt; に渡す前に &lt;code&gt;mark&lt;/code&gt; を呼び出す場合、アプリケーションは、読み取り操作が完了した後でもマークされた位置が有効なままであると想定してはなりません。</target>
        </trans-unit>
        <trans-unit id="e0fd39277be040bfbac37951a43994c90b966b0b" translate="yes" xml:space="preserve">
          <source>Note that left rotation with a negative distance is equivalent to right rotation: &lt;code&gt;rotateLeft(val, -distance) == rotateRight(val,
 distance)&lt;/code&gt;. Note also that rotation by any multiple of 32 is a no-op, so all but the last five bits of the rotation distance can be ignored, even if the distance is negative: &lt;code&gt;rotateLeft(val,
 distance) == rotateLeft(val, distance &amp;amp; 0x1F)&lt;/code&gt;.</source>
          <target state="translated">負の距離での左回転は右回転と同じであることに注意してください： &lt;code&gt;rotateLeft(val, -distance) == rotateRight(val, distance)&lt;/code&gt; 。また、32の倍数による回転は何もしないため、距離が負の場合でも、回転距離の最後の5ビット以外はすべて無視できます &lt;code&gt;rotateLeft(val, distance) == rotateLeft(val, distance &amp;amp; 0x1F)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26468a8d8b5ccff2233a9b49e4c86accd8f5eb28" translate="yes" xml:space="preserve">
          <source>Note that left rotation with a negative distance is equivalent to right rotation: &lt;code&gt;rotateLeft(val, -distance) == rotateRight(val,
 distance)&lt;/code&gt;. Note also that rotation by any multiple of 64 is a no-op, so all but the last six bits of the rotation distance can be ignored, even if the distance is negative: &lt;code&gt;rotateLeft(val,
 distance) == rotateLeft(val, distance &amp;amp; 0x3F)&lt;/code&gt;.</source>
          <target state="translated">負の距離での左回転は右回転と同じであることに注意してください： &lt;code&gt;rotateLeft(val, -distance) == rotateRight(val, distance)&lt;/code&gt; 。64の倍数による回転は何もしないことに注意してください。したがって、距離が負の場合でも、回転距離の最後の6ビット以外は無視できます &lt;code&gt;rotateLeft(val, distance) == rotateLeft(val, distance &amp;amp; 0x3F)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93396dda53e50cf9b2def5407a12b6a0dbacb521" translate="yes" xml:space="preserve">
          <source>Note that little memory is freed by this call: the current array is kept so it can be reused.</source>
          <target state="translated">この呼び出しによってメモリはほとんど解放されないことに注意してください:現在の配列は再利用できるように保持されます。</target>
        </trans-unit>
        <trans-unit id="6fb4f9f3642190b80d4ad72b097413701ea41f24" translate="yes" xml:space="preserve">
          <source>Note that many implementations might return an unmodifiable list.</source>
          <target state="translated">多くの実装では変更不可能なリストを返す場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="64c6f2af99e15a3012af3f6044d8aa02f65faae7" translate="yes" xml:space="preserve">
          <source>Note that methods in this class which take a &lt;code&gt;Graphics&lt;/code&gt; parameter measure text using the &lt;code&gt;FontRenderContext&lt;/code&gt; of that &lt;code&gt;Graphics&lt;/code&gt; object, and not this &lt;code&gt;FontRenderContext&lt;/code&gt;</source>
          <target state="translated">なお、取るこのクラスのメソッド &lt;code&gt;Graphics&lt;/code&gt; 使用してパラメータ測定のテキスト &lt;code&gt;FontRenderContext&lt;/code&gt; ことの &lt;code&gt;Graphics&lt;/code&gt; オブジェクトを、そしてないこの &lt;code&gt;FontRenderContext&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f98f379f65d6b9dfddd6607a9b53556e1d216bb" translate="yes" xml:space="preserve">
          <source>Note that methods to accommodate new language constructs could be added in a source &lt;em&gt;compatible&lt;/em&gt; way if they were added as &lt;em&gt;default methods&lt;/em&gt;. However, default methods are only available on Java SE 8 and higher releases and the &lt;code&gt;
 javax.lang.model.*&lt;/code&gt; packages bundled in Java SE 8 were required to also be runnable on Java SE 7. Therefore, default methods were &lt;em&gt;not&lt;/em&gt; used when extending &lt;code&gt;javax.lang.model.*&lt;/code&gt; to cover Java SE 8 language features. However, default methods are used in subsequent revisions of the &lt;code&gt;javax.lang.model.*&lt;/code&gt; packages that are only required to run on Java SE 8 and higher platform versions.</source>
          <target state="translated">新しい言語構造に&lt;em&gt;対応&lt;/em&gt;&lt;em&gt;するメソッド&lt;/em&gt;は、&lt;em&gt;デフォルトのメソッド&lt;/em&gt;として追加された場合、ソース&lt;em&gt;互換の&lt;/em&gt;方法で追加できることに注意してください。ただし、デフォルトのメソッドはJava SE 8以降のリリースでのみ使用可能であり、Java &lt;code&gt; javax.lang.model.*&lt;/code&gt; バンドルされているjavax.lang.model。*パッケージもJavaSE 7で実行可能である必要がありました。したがって、 &lt;code&gt;javax.lang.model.*&lt;/code&gt; 拡張するときにデフォルトのメソッドは使用され&lt;em&gt;ませんでした。&lt;/em&gt;.lang.model。*は、Java SE8言語機能をカバーします。ただし、デフォルトのメソッドは、Java SE8以降のプラットフォームバージョンでのみ実行する必要がある &lt;code&gt;javax.lang.model.*&lt;/code&gt; パッケージの後続のリビジョンで使用されます。</target>
        </trans-unit>
        <trans-unit id="c54c6c466bd9a64456f370c0102774692a65eeb5" translate="yes" xml:space="preserve">
          <source>Note that methods to accommodate new language constructs could be added in a source &lt;em&gt;compatible&lt;/em&gt; way if they were added as &lt;em&gt;default methods&lt;/em&gt;. However, default methods are only available on Java SE 8 and higher releases and the &lt;code&gt;javax.lang.model.*&lt;/code&gt; packages bundled in Java SE 8 are required to also be runnable on Java SE 7. Therefore, default methods &lt;em&gt;cannot&lt;/em&gt; be used when extending &lt;code&gt;javax.lang.model.*&lt;/code&gt; to cover Java SE 8 language features. However, default methods may be used in subsequent revisions of the &lt;code&gt;javax.lang.model.*&lt;/code&gt; packages that are only required to run on Java SE 8 and higher platform versions.</source>
          <target state="translated">新しい言語構成に&lt;em&gt;対応&lt;/em&gt;&lt;em&gt;するメソッド&lt;/em&gt;は、&lt;em&gt;デフォルトのメソッド&lt;/em&gt;として追加された場合、ソース&lt;em&gt;互換性のある&lt;/em&gt;方法で追加できることに注意してください。ただし、デフォルトのメソッドはJava SE 8以降のリリースでのみ利用可能であり、Java SE 8にバンドルされている &lt;code&gt;javax.lang.model.*&lt;/code&gt; パッケージはJava SE 7でも実行可能である必要があるため、 &lt;code&gt;javax.lang.model.*&lt;/code&gt; 拡張時にデフォルトのメソッド&lt;em&gt;を&lt;/em&gt;使用する&lt;em&gt;ことはできません。&lt;/em&gt;.lang.model。*は、Java SE 8言語機能をカバーします。ただし、 &lt;code&gt;javax.lang.model.*&lt;/code&gt; パッケージの後続のリビジョンでは、Java SE 8以降のプラットフォームバージョンでのみ実行する必要があるデフォルトのメソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="c20a27a461415de2d9e542cbffefe98047074ae2" translate="yes" xml:space="preserve">
          <source>Note that multi-frame images are invalid and may cause this method to hang.</source>
          <target state="translated">マルチフレーム画像は無効であり、このメソッドがハングする可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="dcf5ed9ef9f92cbb9f69eece33ec244c4e623965" translate="yes" xml:space="preserve">
          <source>Note that multiples of 24 hours are not output as days to avoid confusion with &lt;code&gt;Period&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Period&lt;/code&gt; との混同を避けるために、24時間の倍数は日として出力されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="39ee9e5502987b70feee792e5ccd5966e98cdc49" translate="yes" xml:space="preserve">
          <source>Note that mutation of the Properties object returned will not effect the properties that the transformer contains.</source>
          <target state="translated">返された Properties オブジェクトの突然変異は、トランスフォーマーが含むプロパティには影響しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="28a362bf13dc33d93aeda88e8ac936d95db601e4" translate="yes" xml:space="preserve">
          <source>Note that neither the character &lt;code&gt;L&lt;/code&gt; (&lt;code&gt;'\u004C'&lt;/code&gt;) nor &lt;code&gt;l&lt;/code&gt; (&lt;code&gt;'\u006C'&lt;/code&gt;) is permitted to appear at the end of the string as a type indicator, as would be permitted in Java programming language source code - except that either &lt;code&gt;L&lt;/code&gt; or &lt;code&gt;l&lt;/code&gt; may appear as a digit for a radix greater than or equal to 22.</source>
          <target state="translated">文字 &lt;code&gt;L&lt;/code&gt; （ &lt;code&gt;'\u004C'&lt;/code&gt; ）と &lt;code&gt;l&lt;/code&gt; （ &lt;code&gt;'\u006C'&lt;/code&gt; ）のどちらも、Javaプログラミング言語のソースコードで許可されているように、タイプインジケーターとして文字列の最後に表示することはできません。ただし、 &lt;code&gt;L&lt;/code&gt; または &lt;code&gt;l&lt;/code&gt; は、基数が22以上の場合、数字として表示されます。</target>
        </trans-unit>
        <trans-unit id="a255730394476eced606a6b74069e5847d5d6ca1" translate="yes" xml:space="preserve">
          <source>Note that neither the character &lt;code&gt;L&lt;/code&gt; (&lt;code&gt;'\u004C'&lt;/code&gt;) nor &lt;code&gt;l&lt;/code&gt; (&lt;code&gt;'\u006C'&lt;/code&gt;) is permitted to appear at the end of the string as a type indicator, as would be permitted in Java programming language source code.</source>
          <target state="translated">Javaプログラミング言語のソースコードで許可されているように、文字 &lt;code&gt;L&lt;/code&gt; （ &lt;code&gt;'\u004C'&lt;/code&gt; ）と &lt;code&gt;l&lt;/code&gt; （ &lt;code&gt;'\u006C'&lt;/code&gt; ）のどちらも、タイプインジケーターとして文字列の末尾に表示することはできません。</target>
        </trans-unit>
        <trans-unit id="43fc524362be5054f36b79406d37776d6000a71a" translate="yes" xml:space="preserve">
          <source>Note that non Principal-based grant entries are not permitted in this &lt;code&gt;Policy&lt;/code&gt;. Therefore, grant entries such as:</source>
          <target state="translated">この &lt;code&gt;Policy&lt;/code&gt; では、非プリンシパルベースの付与エントリは許可されないことに注意してください。したがって、次のようなエントリを付与します。</target>
        </trans-unit>
        <trans-unit id="d62741466c85b19fc04a0b58158b50a2b84f67d2" translate="yes" xml:space="preserve">
          <source>Note that not all &lt;code&gt;final&lt;/code&gt; fields will have constant values. In particular, &lt;code&gt;enum&lt;/code&gt; constants are &lt;em&gt;not&lt;/em&gt; considered to be compile-time constants. To have a constant value, a field's type must be either a primitive type or &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">すべての &lt;code&gt;final&lt;/code&gt; フィールドが定数値を持つわけではないことに注意してください。特に、 &lt;code&gt;enum&lt;/code&gt; 定数はコンパイル時の定数と&lt;em&gt;は&lt;/em&gt;見なされ&lt;em&gt;ません&lt;/em&gt;。定数値を使用するには、フィールドのタイプはプリミティブタイプまたは &lt;code&gt;String&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="cae23aa3ae509c428060eb33e16efef843733839" translate="yes" xml:space="preserve">
          <source>Note that objects specified by a descriptor created with this constructor will only be activated on demand (by default, the restart mode is &lt;code&gt;false&lt;/code&gt;). If an activatable object requires restart services, use one of the &lt;code&gt;ActivationDesc&lt;/code&gt; constructors that takes a boolean parameter, &lt;code&gt;restart&lt;/code&gt;.</source>
          <target state="translated">このコンストラクターで作成された記述子によって指定されたオブジェクトは、オンデマンドでのみアクティブ化されることに注意してください（デフォルトでは、再起動モードは &lt;code&gt;false&lt;/code&gt; です）。起動可能なオブジェクトが再起動サービスの利用1が必要な場合 &lt;code&gt;ActivationDesc&lt;/code&gt; 、ブールパラメータを取るコンストラクタ &lt;code&gt;restart&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34f77e2a4766bc2bca16bd2d7f577f25792a0a22" translate="yes" xml:space="preserve">
          <source>Note that once a class loader is registered as parallel capable, there is no way to change it back.</source>
          <target state="translated">クラス・ローダが並列処理可能なものとして登録されると、それを元に戻すことはできないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="811d61dcfa693cab96a984bd139826cb0637cdad" translate="yes" xml:space="preserve">
          <source>Note that once the timer notification has been added into the list of notifications, its associated date, period and number of occurrences cannot be updated.</source>
          <target state="translated">タイマー通知が通知リストに追加されると、その関連する日付、期間、発生回数は更新できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="34aae5f2f18a9fea60dff8bd9b9848e321e039f0" translate="yes" xml:space="preserve">
          <source>Note that optimizations such as the removal of duplicate ProtectionDomains may have occurred. In addition, caching of ProtectionDomains may be permitted.</source>
          <target state="translated">重複したProtectionDomainsの削除などの最適化が行われている可能性があることに注意してください。また、ProtectionDomains のキャッシングが許可されている場合もあります。</target>
        </trans-unit>
        <trans-unit id="c2a4f92395e6778edbb89e42aa54d76583bc4bd7" translate="yes" xml:space="preserve">
          <source>Note that original direct method handle may include a leading &lt;code&gt;this&lt;/code&gt; parameter, or (in the case of a constructor) will replace the &lt;code&gt;void&lt;/code&gt; return type with the constructed class. The nominal type does not include any &lt;code&gt;this&lt;/code&gt; parameter, and (in the case of a constructor) will return &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">元の直接メソッドハンドルには、先頭の &lt;code&gt;this&lt;/code&gt; パラメーターが含まれる場合があります。または、（コンストラクターの場合） &lt;code&gt;void&lt;/code&gt; の戻り値の型が構築されたクラスに置き換えられます。名義型には &lt;code&gt;this&lt;/code&gt; パラメーターが含まれておらず、（コンストラクターの場合） &lt;code&gt;void&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6352c64da2feb606c170a2a3a17e25cfd0850b4f" translate="yes" xml:space="preserve">
          <source>Note that packing and unpacking a JAR will in general alter the bytewise contents of classfiles in the JAR. This means that packing and unpacking will in general invalidate any digital signatures which rely on bytewise images of JAR elements. In order both to sign and to pack a JAR, you must first pack and unpack the JAR to &quot;normalize&quot; it, then compute signatures on the unpacked JAR elements, and finally repack the signed JAR. Both packing steps should use precisely the same options, and the segment limit may also need to be set to &quot;-1&quot;, to prevent accidental variation of segment boundaries as class file sizes change slightly.</source>
          <target state="translated">JAR のパッキングとアンパッキングは、一般的に JAR 内のクラスファイルのバイトワイズコンテンツを変更することに注意してください。つまり、JAR の要素のバイトワイズイメージに依存したデジタル署名は、一般的に無効になります。署名と梱包の両方を行うためには、まず JAR を梱包して解凍して「正規化」し、次に解凍された JAR 要素に対して署名を計算し、最後に署名された JAR を梱包し直さなければなりません。また、クラスファイルのサイズがわずかに変化したときにセグメントの境界が不用意に変化するのを防ぐために、セグメントの制限値を &quot;-1&quot; に設定する必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="297255e27261783e638479d0cac35de9b29f1f53" translate="yes" xml:space="preserve">
          <source>Note that painting a pixel with the alpha value of &lt;code&gt;0&lt;/code&gt; may or may not disable the mouse event handling on this pixel. This is a platform-dependent behavior. To make sure the mouse events do not get dispatched to a particular pixel, the pixel must be excluded from the shape of the window.</source>
          <target state="translated">アルファ値が &lt;code&gt;0&lt;/code&gt; のピクセルをペイントすると、このピクセルでのマウスイベント処理が無効になる場合と無効にならない場合があることに注意してください。これはプラットフォームに依存する動作です。マウスイベントが特定のピクセルにディスパッチされないようにするには、そのピクセルをウィンドウの形状から除外する必要があります。</target>
        </trans-unit>
        <trans-unit id="62fcba02ea3df7d77dc5e7fce22ecfcf437c1b5d" translate="yes" xml:space="preserve">
          <source>Note that passing &lt;code&gt;null&lt;/code&gt; or inconsistent parameters is invalid and will result in unspecified behavior.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; または一貫性のないパラメータを渡すことは無効であり、不特定の動作が発生することに注意してください。</target>
        </trans-unit>
        <trans-unit id="b6c1fc8199f1ac8758890318d0d1791aa6be332f" translate="yes" xml:space="preserve">
          <source>Note that passing in a &lt;code&gt;null&lt;/code&gt; value for &lt;code&gt;dataVector&lt;/code&gt; results in unspecified behavior, an possibly an exception.</source>
          <target state="translated">&lt;code&gt;dataVector&lt;/code&gt; に &lt;code&gt;null&lt;/code&gt; 値を渡すと、不特定の動作が発生し、例外になる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2c7365c75aa81e942a50bdebcef4f4b8ad7cc408" translate="yes" xml:space="preserve">
          <source>Note that passing in an invalid &lt;code&gt;id&lt;/code&gt; parameter results in unspecified behavior. This method throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if &lt;code&gt;source&lt;/code&gt; equals &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">無効な &lt;code&gt;id&lt;/code&gt; パラメータを渡すと、動作が指定されないことに注意してください。 &lt;code&gt;source&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; に等しい場合、このメソッドは &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="7a4f2ac33caabca57dc53903c29be545850bcdd7" translate="yes" xml:space="preserve">
          <source>Note that passing in an invalid &lt;code&gt;id&lt;/code&gt; results in unspecified behavior. This method throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if &lt;code&gt;source&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">無効な &lt;code&gt;id&lt;/code&gt; を渡すと、動作が指定されないことに注意してください。 &lt;code&gt;source&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="060981dd4168e6863db78bc1880cf224e32e6a93" translate="yes" xml:space="preserve">
          <source>Note that passing negative parameter is incorrect, and will cause the returning an unspecified string. Zero parameter means that no modifiers were passed and will cause the returning an empty string.</source>
          <target state="translated">負のパラメータを渡すのは正しくなく、指定されていない文字列が返されることに注意してください。ゼロパラメータは修飾子が何も渡されていないことを意味し、空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="fac77538eccb3fb44152cf5c06cedec1ee3917d0" translate="yes" xml:space="preserve">
          <source>Note that passing out of range parameters is invalid, and will result in unspecified behavior.</source>
          <target state="translated">範囲外のパラメータを渡すことは無効であり、指定されていない動作になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1f31c35203a39590c2e35b09e92f6158f97d1fc9" translate="yes" xml:space="preserve">
          <source>Note that per &lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066&lt;/a&gt;, the encoded server name value of a hostname is &lt;a href=&quot;../../../java/nio/charset/standardcharsets#US_ASCII&quot;&gt;&lt;code&gt;StandardCharsets.US_ASCII&lt;/code&gt;&lt;/a&gt;-compliant. In this method, &lt;code&gt;hostname&lt;/code&gt; can be a user-friendly Internationalized Domain Name (IDN). &lt;a href=&quot;../../../java/net/idn#toASCII(java.lang.String,int)&quot;&gt;&lt;code&gt;IDN.toASCII(String, int)&lt;/code&gt;&lt;/a&gt; is used to enforce the restrictions on ASCII characters in hostnames (see &lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;, &lt;a href=&quot;http://www.ietf.org/rfc/rfc1122.txt&quot;&gt;RFC 1122&lt;/a&gt;, &lt;a href=&quot;http://www.ietf.org/rfc/rfc1123.txt&quot;&gt;RFC 1123&lt;/a&gt;) and translate the &lt;code&gt;hostname&lt;/code&gt; into ASCII Compatible Encoding (ACE), as:</source>
          <target state="translated">&lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066に従い&lt;/a&gt;、ホスト名のエンコードされたサーバー名の値は&lt;a href=&quot;../../../java/nio/charset/standardcharsets#US_ASCII&quot;&gt; &lt;code&gt;StandardCharsets.US_ASCII&lt;/code&gt; に&lt;/a&gt;準拠していることに注意してください。この方法では、 &lt;code&gt;hostname&lt;/code&gt; はユーザーフレンドリーな国際化ドメイン名（IDN）にすることができます。&lt;a href=&quot;../../../java/net/idn#toASCII(java.lang.String,int)&quot;&gt; &lt;code&gt;IDN.toASCII(String, int)&lt;/code&gt; &lt;/a&gt;は、ホスト名のASCII文字に制限を適用し（&lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;、&lt;a href=&quot;http://www.ietf.org/rfc/rfc1122.txt&quot;&gt;RFC 1122&lt;/a&gt;、&lt;a href=&quot;http://www.ietf.org/rfc/rfc1123.txt&quot;&gt;RFC 1123を&lt;/a&gt;参照）、 &lt;code&gt;hostname&lt;/code&gt; を次のようにASCII互換エンコーディング（ACE）に変換するために使用されます。</target>
        </trans-unit>
        <trans-unit id="3a6394653c37e537549d2577cb7fa90b35c6e451" translate="yes" xml:space="preserve">
          <source>Note that per &lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066&lt;/a&gt;, the encoded server name value of a hostname is &lt;a href=&quot;../../../java/nio/charset/standardcharsets#US_ASCII&quot;&gt;&lt;code&gt;StandardCharsets.US_ASCII&lt;/code&gt;&lt;/a&gt;-compliant. In this method, &lt;code&gt;hostname&lt;/code&gt; can be a user-friendly Internationalized Domain Name (IDN). &lt;a href=&quot;../../../java/net/idn#toASCII-java.lang.String-int-&quot;&gt;&lt;code&gt;IDN.toASCII(String, int)&lt;/code&gt;&lt;/a&gt; is used to enforce the restrictions on ASCII characters in hostnames (see &lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;, &lt;a href=&quot;http://www.ietf.org/rfc/rfc1122.txt&quot;&gt;RFC 1122&lt;/a&gt;, &lt;a href=&quot;http://www.ietf.org/rfc/rfc1123.txt&quot;&gt;RFC 1123&lt;/a&gt;) and translate the &lt;code&gt;hostname&lt;/code&gt; into ASCII Compatible Encoding (ACE), as:</source>
          <target state="translated">&lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066&lt;/a&gt;に従って、ホスト名のエンコードされたサーバー名の値は&lt;a href=&quot;../../../java/nio/charset/standardcharsets#US_ASCII&quot;&gt; &lt;code&gt;StandardCharsets.US_ASCII&lt;/code&gt; に&lt;/a&gt;準拠していることに注意してください。この方法では、 &lt;code&gt;hostname&lt;/code&gt; をユーザーフレンドリーな国際化ドメイン名（IDN）にすることができます。&lt;a href=&quot;../../../java/net/idn#toASCII-java.lang.String-int-&quot;&gt; &lt;code&gt;IDN.toASCII(String, int)&lt;/code&gt; &lt;/a&gt;は、ホスト名のASCII文字に制限を適用し（&lt;a href=&quot;http://www.ietf.org/rfc/rfc3490.txt&quot;&gt;RFC 3490&lt;/a&gt;、&lt;a href=&quot;http://www.ietf.org/rfc/rfc1122.txt&quot;&gt;RFC 1122&lt;/a&gt;、&lt;a href=&quot;http://www.ietf.org/rfc/rfc1123.txt&quot;&gt;RFC 1123を&lt;/a&gt;参照）、次のように &lt;code&gt;hostname&lt;/code&gt; をASCII互換エンコーディング（ACE）に変換します。</target>
        </trans-unit>
        <trans-unit id="053d7f649cd8f419cb1e245e690acf560385d7d4" translate="yes" xml:space="preserve">
          <source>Note that physical card readers with slots for multiple cards are represented by one &lt;code&gt;CardTerminal&lt;/code&gt; object per such slot.</source>
          <target state="translated">複数のカード用のスロットを備えた物理的なカードリーダーは、そのようなスロットごとに1つの &lt;code&gt;CardTerminal&lt;/code&gt; オブジェクトで表されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3f16b837dbf5ab89f85dcecb647b27918e8cf71a" translate="yes" xml:space="preserve">
          <source>Note that privacy can only be applied through the wrap call.</source>
          <target state="translated">プライバシーはラップコールでしか適用できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="27959893141a0d567fb5c44db662e8371cc70d03" translate="yes" xml:space="preserve">
          <source>Note that programmer written code is also able to take advantage of calling this method in situations where there are multiple sibling exceptions and only one can be propagated.</source>
          <target state="translated">プログラマーが書いたコードでも、複数の兄弟例外が存在し、1 つだけが伝搬するような状況でこのメソッドを呼び出すことができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="658d306ee00871ed2db739b911285df59abd60b0" translate="yes" xml:space="preserve">
          <source>Note that result of this method is immediately outdated, there is no guarantee that a subsequent attempt to open the file for writing will succeed (or even that it will access the same file). Care should be taken when using this method in security sensitive applications.</source>
          <target state="translated">このメソッドの結果はすぐに古くなりますので、後からファイルを開いて書き込みを試みても成功する保証はありません (あるいは同じファイルにアクセスできる保証もありません)。この方法をセキュリティ上重要なアプリケーションで使用する場合は注意が必要です。</target>
        </trans-unit>
        <trans-unit id="49ce8687756db21eadb2917f3ddd5371fa1ac976" translate="yes" xml:space="preserve">
          <source>Note that right rotation with a negative distance is equivalent to left rotation: &lt;code&gt;rotateRight(val, -distance) == rotateLeft(val,
 distance)&lt;/code&gt;. Note also that rotation by any multiple of 32 is a no-op, so all but the last five bits of the rotation distance can be ignored, even if the distance is negative: &lt;code&gt;rotateRight(val,
 distance) == rotateRight(val, distance &amp;amp; 0x1F)&lt;/code&gt;.</source>
          <target state="translated">負の距離での右回転は左回転と同等であることに注意してください： &lt;code&gt;rotateRight(val, -distance) == rotateLeft(val, distance)&lt;/code&gt; 。また、32の倍数による回転は何もしないため、距離が負の場合でも、回転距離の最後の5ビット以外はすべて無視できます &lt;code&gt;rotateRight(val, distance) == rotateRight(val, distance &amp;amp; 0x1F)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f052c07fd86b9f8f91267b03c38d8d38cff6f45" translate="yes" xml:space="preserve">
          <source>Note that right rotation with a negative distance is equivalent to left rotation: &lt;code&gt;rotateRight(val, -distance) == rotateLeft(val,
 distance)&lt;/code&gt;. Note also that rotation by any multiple of 64 is a no-op, so all but the last six bits of the rotation distance can be ignored, even if the distance is negative: &lt;code&gt;rotateRight(val,
 distance) == rotateRight(val, distance &amp;amp; 0x3F)&lt;/code&gt;.</source>
          <target state="translated">負の距離での右回転は左回転と同等であることに注意してください： &lt;code&gt;rotateRight(val, -distance) == rotateLeft(val, distance)&lt;/code&gt; 。64の倍数による回転は何もしないことに注意してください。そのため、距離が負の場合でも、回転距離の最後の6ビット以外はすべて無視できます &lt;code&gt;rotateRight(val, distance) == rotateRight(val, distance &amp;amp; 0x3F)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb516b7d8eee3df14676bec660a003dce7df4328" translate="yes" xml:space="preserve">
          <source>Note that sequence number is an unsigned long and cannot exceed &lt;code&gt;-1L&lt;/code&gt;. It is desired to use the unsigned long comparing mode for comparison of unsigned long values (see also &lt;a href=&quot;../../../java/lang/long#compareUnsigned(long,long)&quot;&gt;&lt;code&gt;Long.compareUnsigned()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">シーケンス番号はunsignedlongであり、 &lt;code&gt;-1L&lt;/code&gt; を超えることはできないことに注意してください。unsigned long値の比較には、unsigned long比較モードを使用することが望まれます（&lt;a href=&quot;../../../java/lang/long#compareUnsigned(long,long)&quot;&gt; &lt;code&gt;Long.compareUnsigned()&lt;/code&gt; &lt;/a&gt;も参照）。</target>
        </trans-unit>
        <trans-unit id="629996c0f7127d1270cd5d9d7ebf084cd080f3d9" translate="yes" xml:space="preserve">
          <source>Note that setting the maximum value to &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt; will result in the new maximum value being set to &lt;code&gt;Integer.MIN_VALUE + 1&lt;/code&gt;.</source>
          <target state="translated">最大値を &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt; に設定すると、新しい最大値が &lt;code&gt;Integer.MIN_VALUE + 1&lt;/code&gt; に設定されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1344da9466e1cf3b5d4c83444e6b3319fd07bd58" translate="yes" xml:space="preserve">
          <source>Note that setting the minimum value to &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; will result in the new minimum value being set to &lt;code&gt;Integer.MAX_VALUE - 1&lt;/code&gt;.</source>
          <target state="translated">最小値を &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; に設定すると、新しい最小値が &lt;code&gt;Integer.MAX_VALUE - 1&lt;/code&gt; に設定されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="0ffba4287c4f058227753f4d8b5a7b3fcccb2a3f" translate="yes" xml:space="preserve">
          <source>Note that setting this attribute, when permitted, changes the &lt;code&gt;nodeName&lt;/code&gt; attribute, which holds the qualified name, as well as the &lt;code&gt;tagName&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; attributes of the &lt;code&gt;Element&lt;/code&gt; and &lt;code&gt;Attr&lt;/code&gt; interfaces, when applicable.</source>
          <target state="translated">この属性を設定すると、許可されている場合、修飾名を保持する &lt;code&gt;nodeName&lt;/code&gt; 属性と、該当する場合は &lt;code&gt;Element&lt;/code&gt; および &lt;code&gt;Attr&lt;/code&gt; インターフェースの &lt;code&gt;tagName&lt;/code&gt; および &lt;code&gt;name&lt;/code&gt; 属性が変更されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="45ffc6fbb881829e1ad6ffebfc117ac9cb6c51f7" translate="yes" xml:space="preserve">
          <source>Note that shortcuts created with a keycode or an extended keycode defined as a constant in &lt;code&gt;KeyEvent&lt;/code&gt; work regardless of the current keyboard layout. However, a shortcut made of an extended keycode not listed in &lt;code&gt;KeyEvent&lt;/code&gt; only work if the current keyboard layout produces a corresponding letter.</source>
          <target state="translated">&lt;code&gt;KeyEvent&lt;/code&gt; で定数として定義されたキーコードまたは拡張キーコードで作成されたショートカットは、現在のキーボードレイアウトに関係なく機能することに注意してください。ただし、 &lt;code&gt;KeyEvent&lt;/code&gt; にリストされていない拡張キーコードで作成されたショートカットは、現在のキーボードレイアウトで対応する文字が生成される場合にのみ機能します。</target>
        </trans-unit>
        <trans-unit id="ede87b1353a7da6b24f9d427496be29bba25a965" translate="yes" xml:space="preserve">
          <source>Note that since &lt;code&gt;BigDecimal&lt;/code&gt; objects are immutable, calls of this method do</source>
          <target state="translated">以来という注意 &lt;code&gt;BigDecimal&lt;/code&gt; オブジェクトは不変で、このメソッドの呼び出しを行います</target>
        </trans-unit>
        <trans-unit id="9f80cc629bbf0cbd7e59b58fc6dd7c9d304af812" translate="yes" xml:space="preserve">
          <source>Note that since BigDecimal objects are immutable, calls of this method do</source>
          <target state="translated">BigDecimal オブジェクトは不変であるため、このメソッドの呼び出しは</target>
        </trans-unit>
        <trans-unit id="46ea9907be7a1fc93267c92764e045ed963e26e5" translate="yes" xml:space="preserve">
          <source>Note that since information about the runtime representation of a type is being generated, modifiers not present on the originating source code or illegal on the originating source code may be present.</source>
          <target state="translated">型の実行時表現に関する情報が生成されるため、元のソースコードに存在しない修飾子や、元のソースコードに違法な修飾子が存在する可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e240f792bd1f1b1a1e8b2c029b16165e0777053a" translate="yes" xml:space="preserve">
          <source>Note that since the Calendar class uses &lt;code&gt;int&lt;/code&gt; to hold the value of year and month, this method may produce an unexpected result if this duration object holds a very large value in the years or months fields.</source>
          <target state="translated">Calendarクラスは &lt;code&gt;int&lt;/code&gt; を使用して年と月の値を保持するため、この期間オブジェクトが年または月のフィールドに非常に大きな値を保持している場合、このメソッドは予期しない結果を生成する可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3e80a4c138028509aeb325edff3e229e11198396" translate="yes" xml:space="preserve">
          <source>Note that since the division is undefined if the resulting alpha is zero, the division in that case is omitted to avoid the &quot;divide by zero&quot; and the color components are left as all zeros.</source>
          <target state="translated">なお、結果のアルファがゼロの場合は除算が不定なので、その場合の除算は「ゼロで割る」を避けるために省略し、色成分はすべてゼロのままにしています。</target>
        </trans-unit>
        <trans-unit id="b3fb90979366c5fefbd1205a3455819d3d69b58d" translate="yes" xml:space="preserve">
          <source>Note that since the first argument is treated as an unsigned value, no leading sign character is printed.</source>
          <target state="translated">第1引数は符号なしの値として扱われるため、先頭の符号文字は表示されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="f2affb207dff6ee7d6daba1bded38344953ce355" translate="yes" xml:space="preserve">
          <source>Note that since the prefix is only used when standard resolution fails, native methods can be wrapped selectively.</source>
          <target state="translated">プレフィックスは標準の解決に失敗した場合にのみ使用されるため、ネイティブメソッドを選択的にラップすることができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="907ba471f23a37b8313b03dc0b56889949dcf8d1" translate="yes" xml:space="preserve">
          <source>Note that since these keys and values are</source>
          <target state="translated">これらのキーと値は</target>
        </trans-unit>
        <trans-unit id="b27ed8f2250cedc5cde89da227e91406cd971a09" translate="yes" xml:space="preserve">
          <source>Note that since untrusted code may create loggers with arbitrary names this method should not be relied on to find Loggers for security sensitive logging. It is also important to note that the Logger associated with the String &lt;code&gt;name&lt;/code&gt; may be garbage collected at any time if there is no strong reference to the Logger. The caller of this method must check the return value for null in order to properly handle the case where the Logger has been garbage collected.</source>
          <target state="translated">信頼できないコードが任意の名前のロガーを作成する可能性があるため、このメソッドは、セキュリティ上重要なロギング用のロガーを見つけるために依存すべきではないことに注意してください。また、ロガーへの強い参照がない場合、文字列 &lt;code&gt;name&lt;/code&gt; 関連付けられたロガーはいつでもガベージコレクションされる可能性があることに注意することも重要です。このメソッドの呼び出し元は、ロガーがガベージコレクションされた場合を適切に処理するために、戻り値がnullかどうかを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="9b893176debeef2a1795c8f8c9947557edc10d8d" translate="yes" xml:space="preserve">
          <source>Note that skipped entities will be reported through the &lt;a href=&quot;../contenthandler#skippedEntity(java.lang.String)&quot;&gt;&lt;code&gt;skippedEntity&lt;/code&gt;&lt;/a&gt; event, which is part of the ContentHandler interface.</source>
          <target state="translated">スキップされたエンティティは、&lt;a href=&quot;../contenthandler#skippedEntity(java.lang.String)&quot;&gt; &lt;code&gt;skippedEntity&lt;/code&gt; &lt;/a&gt;インターフェイスの一部であるskipedEntityイベントを通じて報告されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4bf429ba70c87d9c5f3d5318272715fb6f04ba94" translate="yes" xml:space="preserve">
          <source>Note that some attributes may be set directly on the PrinterJob by equivalent method calls, (for example), copies: &lt;code&gt;setCopies(int)&lt;/code&gt;, job name: &lt;code&gt;setJobName(String)&lt;/code&gt; and specifying media size and orientation though the &lt;code&gt;PageFormat&lt;/code&gt; object.</source>
          <target state="translated">一部の属性は、同等のメソッド呼び出し（たとえば、 &lt;code&gt;setCopies(int)&lt;/code&gt; ：setCopies（int）、job name： &lt;code&gt;setJobName(String)&lt;/code&gt; 、および &lt;code&gt;PageFormat&lt;/code&gt; オブジェクトを介したメディアサイズと方向の指定）によってPrinterJobに直接設定される場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ee41bcf541b5fe036bd5e0c5d5b8f00351410590" translate="yes" xml:space="preserve">
          <source>Note that some devices, once closed, cannot be reopened. Attempts to reopen such a device will always result in a &lt;code&gt;MidiUnavailableException&lt;/code&gt;.</source>
          <target state="translated">一部のデバイスは、一度閉じると再度開くことができないことに注意してください。このようなデバイスを &lt;code&gt;MidiUnavailableException&lt;/code&gt; うとすると、常にMidiUnavailableExceptionが発生します。</target>
        </trans-unit>
        <trans-unit id="e2a842cd743848ed24086b097aed577ecb2f89bb" translate="yes" xml:space="preserve">
          <source>Note that some devices, once closed, cannot be reopened. Attempts to reopen such a device will always result in a MidiUnavailableException.</source>
          <target state="translated">一度閉じたデバイスは、再度開くことができないものがあることに注意してください。そのようなデバイスを再度開こうとすると、常に MidiUnavailableException が発生します。</target>
        </trans-unit>
        <trans-unit id="e3f4eaafc012a53481bbf63540d42651fd837c26" translate="yes" xml:space="preserve">
          <source>Note that some doc flavors may not be supported in combination with all attributes. Use &lt;code&gt;getUnsupportedAttributes(..)&lt;/code&gt; to validate specific combinations.</source>
          <target state="translated">一部のdocフレーバーは、すべての属性との組み合わせでサポートされない場合があることに注意してください。特定の組み合わせを検証するには、 &lt;code&gt;getUnsupportedAttributes(..)&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="b5f1f782f81948948a98fc10e168c4d30914315e" translate="yes" xml:space="preserve">
          <source>Note that some image formats (such as animated GIF) do not specify how many images are present in the stream. Thus determining the number of images will require the entire stream to be scanned and may require memory for buffering. If images are to be processed in order, it may be more efficient to simply call &lt;code&gt;read&lt;/code&gt; with increasing indices until an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; is thrown to indicate that no more images are available. The &lt;code&gt;allowSearch&lt;/code&gt; parameter may be set to &lt;code&gt;false&lt;/code&gt; to indicate that an exhaustive search is not desired; the return value will be &lt;code&gt;-1&lt;/code&gt; to indicate that a search is necessary. If the input has been specified with &lt;code&gt;seekForwardOnly&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;, this method throws an &lt;code&gt;IllegalStateException&lt;/code&gt; if &lt;code&gt;allowSearch&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">一部の画像形式（アニメーションGIFなど）では、ストリームに存在する画像の数を指定しないことに注意してください。したがって、画像の数を決定するには、ストリーム全体をスキャンする必要があり、バッファリング用のメモリが必要になる場合があります。画像が順番に処理される場合は、 &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; がスローされて画像がなくなったことを示すまで、インデックスを増やして単に &lt;code&gt;read&lt;/code&gt; を呼び出す方が効率的です。徹底的な検索が望ましくないことを示すために、 &lt;code&gt;allowSearch&lt;/code&gt; パラメータを &lt;code&gt;false&lt;/code&gt; に設定できます。戻り値は &lt;code&gt;-1&lt;/code&gt; になり、検索が必要であることを示します。 &lt;code&gt;seekForwardOnly&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定して入力が指定されている場合、 &lt;code&gt;allowSearch&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; に設定されている場合、このメソッドは &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="865695d1dd8e71d33e196ad236035d5b4c691fb1" translate="yes" xml:space="preserve">
          <source>Note that some implementations may function more efficiently if they can maintain control over how the data for an image is stored. For example, optimizations such as caching an image in video memory require that the implementation track all modifications to that data. Other implementations may operate better if they can store the data in locations other than a Java array. To maintain optimum compatibility with various optimizations it is best to avoid constructors and methods which expose the underlying storage as a Java array as noted below in the documentation for those methods.</source>
          <target state="translated">いくつかの実装は、画像のデータが保存される方法の制御を維持することができれば、より効率的に機能する可能性があることに注意してください。例えば、ビデオメモリに画像をキャッシュするなどの最適化を行うには、そのデータに対するすべての変更を追跡する実装が必要になります。その他の実装では、Java 配列以外の場所にデータを保存できるようにすると、より良い動作が得られるかもしれません。様々な最適化との最適な互換性を維持するためには、以下のメソッドのドキュメントに記載されているように、基礎となるストレージをJava配列として公開するコンストラクタやメソッドは避けた方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="a530e973686039c3bf1cb0d979c517cd7c9b2fe7" translate="yes" xml:space="preserve">
          <source>Note that some implementations may function more efficiently if they can maintain control over how the data for an image is stored. For example, optimizations such as caching an image in video memory require that the implementation track all modifications to that data. Other implementations may operate better if they can store the data in locations other than a Java array. To maintain optimum compatibility with various optimizations it is best to avoid constructors and methods which expose the underlying storage as a Java array, as noted below in the documentation for those methods.</source>
          <target state="translated">いくつかの実装は、画像のデータが保存される方法の制御を維持することができれば、より効率的に機能する可能性があることに注意してください。例えば、ビデオメモリに画像をキャッシュするなどの最適化を行うには、そのデータに対するすべての変更を追跡する実装が必要になります。その他の実装では、Java 配列以外の場所にデータを保存できるようにすると、より効率的に動作する可能性があります。様々な最適化との最適な互換性を維持するためには、以下のメソッドのドキュメントに記載されているように、基礎となるストレージをJava配列として公開するコンストラクタやメソッドは避けた方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="c78d0a28ab77e573dc3b66cff673c03ef951b81b" translate="yes" xml:space="preserve">
          <source>Note that some lines, once closed, cannot be reopened. Attempts to reopen such a line will always result in a &lt;code&gt;&lt;a href=&quot;lineunavailableexception&quot;&gt;&lt;code&gt;LineUnavailableException&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">一部の行は、いったん閉じられると再び開くことができないことに注意してください。このようなラインを &lt;code&gt;&lt;a href=&quot;lineunavailableexception&quot;&gt;&lt;code&gt;LineUnavailableException&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; うとすると、常にLineUnavailableExceptionが発生します。</target>
        </trans-unit>
        <trans-unit id="4533d4887b736be85ab5aea39d82cfcd61d75987" translate="yes" xml:space="preserve">
          <source>Note that some lines, once closed, cannot be reopened. Attempts to reopen such a line will always result in a &lt;code&gt;LineUnavailableException&lt;/code&gt;.</source>
          <target state="translated">一部の行は、いったん閉じられると再び開くことができないことに注意してください。このようなラインを &lt;code&gt;LineUnavailableException&lt;/code&gt; うとすると、常にLineUnavailableExceptionが発生します。</target>
        </trans-unit>
        <trans-unit id="4a86216860426da9a4e352c5f028305dfc06624a" translate="yes" xml:space="preserve">
          <source>Note that some lines, once closed, cannot be reopened. Attempts to reopen such a line will always result in an &lt;code&gt;LineUnavailableException&lt;/code&gt;.</source>
          <target state="translated">一部の行は、いったん閉じられると再び開くことができないことに注意してください。このようなラインを &lt;code&gt;LineUnavailableException&lt;/code&gt; うとすると、常にLineUnavailableExceptionが発生します。</target>
        </trans-unit>
        <trans-unit id="f2a6579f26b29e3c26de24c155a91cd2053f795f" translate="yes" xml:space="preserve">
          <source>Note that some minor variations in distances may occur due to sampling at the granularity of a pixel. If no cycle method is specified, &lt;code&gt;NO_CYCLE&lt;/code&gt; will be chosen by default, which means the last keyframe color will be used to fill the remaining area.</source>
          <target state="translated">ピクセルの粒度でのサンプリングにより、距離にわずかな変動が生じる場合があることに注意してください。サイクル方法が指定されていない場合、デフォルトで &lt;code&gt;NO_CYCLE&lt;/code&gt; が選択されます。これは、最後のキーフレームの色が残りの領域を塗りつぶすために使用されることを意味します。</target>
        </trans-unit>
        <trans-unit id="d75497502ac57e88855c2e4d41743f1515d312d8" translate="yes" xml:space="preserve">
          <source>Note that some of the effect of overwriting a file can be achieved by using a</source>
          <target state="translated">ファイルを上書きする効果の一部は</target>
        </trans-unit>
        <trans-unit id="28fb43a3227044bd4007b3d08b3b0318eb90c4f6" translate="yes" xml:space="preserve">
          <source>Note that some parsers will report whitespace in element content using the &lt;a href=&quot;#ignorableWhitespace(char%5B%5D,int,int)&quot;&gt;&lt;code&gt;ignorableWhitespace&lt;/code&gt;&lt;/a&gt; method rather than this one (validating parsers &lt;em&gt;must&lt;/em&gt; do so).</source>
          <target state="translated">一部のパーサーは、これではなく&lt;a href=&quot;#ignorableWhitespace(char%5B%5D,int,int)&quot;&gt; &lt;code&gt;ignorableWhitespace&lt;/code&gt; &lt;/a&gt;メソッドを使用して要素コンテンツの空白を報告することに注意してください（検証パーサーは報告する&lt;em&gt;必要&lt;/em&gt;が&lt;em&gt;あり&lt;/em&gt;ます）。</target>
        </trans-unit>
        <trans-unit id="bf0738e26bf4ef13426b4d5b1f2c28d218427c15" translate="yes" xml:space="preserve">
          <source>Note that some parsers will report whitespace using the ignorableWhitespace() method rather than this one (validating parsers must do so).</source>
          <target state="translated">パーサによっては、このメソッドではなく ignorableWhitespace()メソッドを使って空白を報告するものがあることに注意してください (検証中のパーサはそうしなければなりません)。</target>
        </trans-unit>
        <trans-unit id="c485dfc4a00cf4e59758fbbdafffb9b469db558a" translate="yes" xml:space="preserve">
          <source>Note that some patterns, for example &lt;code&gt;a*&lt;/code&gt;, match the empty string. This method will return the empty string when the pattern successfully matches the empty string in the input.</source>
          <target state="translated">&lt;code&gt;a*&lt;/code&gt; などの一部のパターンは空の文字列に一致することに注意してください。このメソッドは、パターンが入力の空の文字列と正常に一致すると、空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="4f431a982225fc72b2d6e9e2277e1fedbdc6e9d8" translate="yes" xml:space="preserve">
          <source>Note that some platforms require special privileges or extensions to access low-level input control. If the current platform configuration does not allow input control, an &lt;code&gt;AWTException&lt;/code&gt; will be thrown when trying to construct Robot objects. For example, X-Window systems will throw the exception if the XTEST 2.2 standard extension is not supported (or not enabled) by the X server.</source>
          <target state="translated">一部のプラットフォームでは、低レベルの入力制御にアクセスするために特別な特権または拡張機能が必要であることに注意してください。現在のプラットフォーム構成で入力制御が許可されていない場合、Robotオブジェクトを作成しようとすると &lt;code&gt;AWTException&lt;/code&gt; がスローされます。たとえば、XTEST 2.2標準拡張機能がXサーバーでサポートされていない（または有効になっていない）場合、X-Windowシステムは例外をスローします。</target>
        </trans-unit>
        <trans-unit id="0eab954b7fc780ccee32d71949f0e59cae06718c" translate="yes" xml:space="preserve">
          <source>Note that some recent W3C specifications require that text in some encodings be normalized, using Unicode Normalization Form C, before processing. Such normalization must be performed by applications, and would normally be triggered based on the value returned by this method.</source>
          <target state="translated">最近のW3Cの仕様の中には、処理の前にUnicode正規化フォームCを使用して、いくつかのエンコーディングのテキストを正規化することを要求するものがあることに注意してください。このような正規化はアプリケーションによって実行されなければならず、通常はこのメソッドによって返される値に基づいてトリガされます。</target>
        </trans-unit>
        <trans-unit id="6838c3b88eeb6c3bcec8ec40c940ab261f201f67" translate="yes" xml:space="preserve">
          <source>Note that some subclasses may not have a &lt;code&gt;type&lt;/code&gt; attribute and for objects of those types, the &lt;a href=&quot;#getType()&quot;&gt;&lt;code&gt;getType()&lt;/code&gt;&lt;/a&gt; method always returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">一部のサブクラスには &lt;code&gt;type&lt;/code&gt; 属性がない場合があり、それらのタイプのオブジェクトの場合、&lt;a href=&quot;#getType()&quot;&gt; &lt;code&gt;getType()&lt;/code&gt; &lt;/a&gt;メソッドは常に &lt;code&gt;null&lt;/code&gt; を返すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="32566c3e724df2b1cc25ad0b22e1482b38513e3a" translate="yes" xml:space="preserve">
          <source>Note that sometimes this &lt;code&gt;AffineTransform&lt;/code&gt; is identity, such as for printers or metafile output, and that this &lt;code&gt;AffineTransform&lt;/code&gt; is only as accurate as the information supplied by the underlying system. For image buffers not associated with a device, such as those not created by &lt;code&gt;createCompatibleImage&lt;/code&gt;, this &lt;code&gt;AffineTransform&lt;/code&gt; is the Identity transform since there is no valid distance measurement.</source>
          <target state="translated">この &lt;code&gt;AffineTransform&lt;/code&gt; は、プリンターやメタファイル出力などのIDである場合があり、この &lt;code&gt;AffineTransform&lt;/code&gt; は、基盤となるシステムによって提供される情報と同じくらい正確であることに注意してください。 &lt;code&gt;createCompatibleImage&lt;/code&gt; によって作成されていないものなど、デバイスに関連付けられていない画像バッファーの場合、有効な距離測定値がないため、この &lt;code&gt;AffineTransform&lt;/code&gt; はIdentity変換です。</target>
        </trans-unit>
        <trans-unit id="976b26e68d21240dd452dcb04c993672bd3eddf8" translate="yes" xml:space="preserve">
          <source>Note that start/endPrefixMapping events are not guaranteed to be properly nested relative to each other: all startPrefixMapping events will occur immediately before the corresponding &lt;a href=&quot;#startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)&quot;&gt;&lt;code&gt;startElement&lt;/code&gt;&lt;/a&gt; event, and all &lt;a href=&quot;#endPrefixMapping(java.lang.String)&quot;&gt;&lt;code&gt;endPrefixMapping&lt;/code&gt;&lt;/a&gt; events will occur immediately after the corresponding &lt;a href=&quot;#endElement(java.lang.String,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;endElement&lt;/code&gt;&lt;/a&gt; event, but their order is not otherwise guaranteed.</source>
          <target state="translated">start / endPrefixMappingイベントは、相互に適切にネストされることが保証されていないことに注意してください。すべてのstartPrefixMappingイベントは、対応する&lt;a href=&quot;#startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)&quot;&gt; &lt;code&gt;startElement&lt;/code&gt; &lt;/a&gt;イベントの直前に発生し、すべての&lt;a href=&quot;#endPrefixMapping(java.lang.String)&quot;&gt; &lt;code&gt;endPrefixMapping&lt;/code&gt; &lt;/a&gt;イベントは、対応する&lt;a href=&quot;#endElement(java.lang.String,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;endElement&lt;/code&gt; &lt;/a&gt;イベントの直後に発生しますが、それらの順序は保証されません。 。</target>
        </trans-unit>
        <trans-unit id="2cb685fae358dd9b061ba139a3bdb43001e462da" translate="yes" xml:space="preserve">
          <source>Note that supporting a given concept is a platform- dependent feature. Due to native limitations the Toolkit object may report a particular state as supported, however at the same time the Toolkit object will be unable to apply the state to a given frame. This circumstance has two following consequences:</source>
          <target state="translated">特定の概念をサポートすることは、プラットフォームに依存する機能であることに注意してください。ネイティブの制限により、Toolkit オブジェクトは特定の状態をサポートしていると報告することができますが、同時に、Toolkit オブジェクトは特定のフレームにその状態を適用することができません。この場合、次の 2 つの影響があります。</target>
        </trans-unit>
        <trans-unit id="2e3465c3d7cbfa831d9cce56582cb00fecdc72ad" translate="yes" xml:space="preserve">
          <source>Note that text is not a bound property, so no &lt;code&gt;PropertyChangeEvent
 &lt;/code&gt; is fired when it changes. To listen for changes to the text, use &lt;code&gt;DocumentListener&lt;/code&gt;.</source>
          <target state="translated">テキストはバインドされたプロパティではないため、変更されても &lt;code&gt;PropertyChangeEvent &lt;/code&gt; は発生しないことに注意してください。テキストの変更をリッスンするには、 &lt;code&gt;DocumentListener&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="3ea24d264d2009f98a0518af8b7b24137391614c" translate="yes" xml:space="preserve">
          <source>Note that the &quot;... n more&quot; notation is used on suppressed exceptions just at it is used on causes. Unlike causes, suppressed exceptions are indented beyond their &quot;containing exceptions.&quot;</source>
          <target state="translated">...n more」という表記は、抑圧された例外には原因に使われるのと同じように使われることに注意してください。原因とは異なり、抑制された例外は、その &quot;包含された例外 &quot;を超えてインデントされます。</target>
        </trans-unit>
        <trans-unit id="e6efbe4260c1559a0e7528b69d6ffc1bb70c3244" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;#peek()&quot;&gt;&lt;code&gt;peek&lt;/code&gt;&lt;/a&gt; method works equally well when a deque is used as a queue or a stack; in either case, elements are drawn from the beginning of the deque.</source>
          <target state="translated">dequeがキューまたはスタックとして使用される場合、&lt;a href=&quot;#peek()&quot;&gt; &lt;code&gt;peek&lt;/code&gt; &lt;/a&gt;メソッドも同様に機能することに注意してください。いずれの場合も、要素は両端キューの先頭から描画されます。</target>
        </trans-unit>
        <trans-unit id="e3edf91dbdf2f16062f3624914a282815a27b866" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;#remove()&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#set(E)&quot;&gt;&lt;code&gt;set(Object)&lt;/code&gt;&lt;/a&gt; methods are</source>
          <target state="translated">ことに注意&lt;a href=&quot;#remove()&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#set(E)&quot;&gt; &lt;code&gt;set(Object)&lt;/code&gt; &lt;/a&gt;の方法であります</target>
        </trans-unit>
        <trans-unit id="19a4e2d4390ad60c093e79f5605378ef8b572c2a" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../nio/file/files#delete(java.nio.file.Path)&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; method to throw an &lt;a href=&quot;ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; when a file cannot be deleted. This is useful for error reporting and to diagnose why a file cannot be deleted.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;クラスは、ファイルを削除できない&lt;a href=&quot;ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;をスローする&lt;a href=&quot;../nio/file/files#delete(java.nio.file.Path)&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt;メソッドを定義していることに注意してください。これは、エラーの報告や、ファイルを削除できない理由の診断に役立ちます。</target>
        </trans-unit>
        <trans-unit id="34a8bbe15d24a86a2e622539fa27f78132a1836d" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../nio/file/files#delete-java.nio.file.Path-&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; method to throw an &lt;a href=&quot;ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; when a file cannot be deleted. This is useful for error reporting and to diagnose why a file cannot be deleted.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;クラスは、ファイルを削除できない&lt;a href=&quot;ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;をスローするための&lt;a href=&quot;../nio/file/files#delete-java.nio.file.Path-&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt;メソッドを定義していることに注意してください。これは、エラー報告や、ファイルを削除できない理由を診断するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="e9c31a917c9d7564af821e975e655fa709c72534" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../nio/file/files#move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption...)&quot;&gt;&lt;code&gt;move&lt;/code&gt;&lt;/a&gt; method to move or rename a file in a platform independent manner.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;クラスは、プラットフォームに依存しない方法でファイルを移動または名前変更するための&lt;a href=&quot;../nio/file/files#move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption...)&quot;&gt; &lt;code&gt;move&lt;/code&gt; &lt;/a&gt;メソッドを定義することに注意してください。</target>
        </trans-unit>
        <trans-unit id="6db4292cd540b40b6745f83a2b2f178c9b829375" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../nio/file/files#move-java.nio.file.Path-java.nio.file.Path-java.nio.file.CopyOption...-&quot;&gt;&lt;code&gt;move&lt;/code&gt;&lt;/a&gt; method to move or rename a file in a platform independent manner.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;クラスは、プラットフォームに依存しない方法でファイルを移動または名前変更する&lt;a href=&quot;../nio/file/files#move-java.nio.file.Path-java.nio.file.Path-java.nio.file.CopyOption...-&quot;&gt; &lt;code&gt;move&lt;/code&gt; &lt;/a&gt;メソッドを定義していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8fe520767419d55a02f8d111e380de652ac28988" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../nio/file/files#newDirectoryStream(java.nio.file.Path)&quot;&gt;&lt;code&gt;newDirectoryStream&lt;/code&gt;&lt;/a&gt; method to open a directory and iterate over the names of the files in the directory. This may use less resources when working with very large directories, and may be more responsive when working with remote directories.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;クラスは、ディレクトリを開き、ディレクトリ内のファイルの名前を反復処理する&lt;a href=&quot;../nio/file/files#newDirectoryStream(java.nio.file.Path)&quot;&gt; &lt;code&gt;newDirectoryStream&lt;/code&gt; &lt;/a&gt;メソッドを定義することに注意してください。これにより、非常に大きなディレクトリを操作するときに使用するリソースが少なくなり、リモートディレクトリを操作するときに応答性が高くなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="3d71d4c365eb91c7625b97355ba9210228308a25" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../nio/file/files#newDirectoryStream(java.nio.file.Path)&quot;&gt;&lt;code&gt;newDirectoryStream&lt;/code&gt;&lt;/a&gt; method to open a directory and iterate over the names of the files in the directory. This may use less resources when working with very large directories.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;クラスは、ディレクトリを開き、ディレクトリ内のファイルの名前を反復処理する&lt;a href=&quot;../nio/file/files#newDirectoryStream(java.nio.file.Path)&quot;&gt; &lt;code&gt;newDirectoryStream&lt;/code&gt; &lt;/a&gt;メソッドを定義することに注意してください。これにより、非常に大きなディレクトリを操作するときに使用するリソースが少なくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="38f521314da41a4582840b74bc65ac7e600e3be0" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../nio/file/files#newDirectoryStream-java.nio.file.Path-&quot;&gt;&lt;code&gt;newDirectoryStream&lt;/code&gt;&lt;/a&gt; method to open a directory and iterate over the names of the files in the directory. This may use less resources when working with very large directories, and may be more responsive when working with remote directories.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;クラスは&lt;a href=&quot;../nio/file/files#newDirectoryStream-java.nio.file.Path-&quot;&gt; &lt;code&gt;newDirectoryStream&lt;/code&gt; &lt;/a&gt;メソッドを定義してディレクトリを開き、ディレクトリ内のファイルの名前を反復することに注意してください。これにより、非常に大きなディレクトリを操作するときに使用するリソースが少なくなり、リモートディレクトリを操作するときに応答が速くなる場合があります。</target>
        </trans-unit>
        <trans-unit id="39a341f6e18ba122b4e59b6da0da8d7d2db499a5" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../nio/file/files#newDirectoryStream-java.nio.file.Path-&quot;&gt;&lt;code&gt;newDirectoryStream&lt;/code&gt;&lt;/a&gt; method to open a directory and iterate over the names of the files in the directory. This may use less resources when working with very large directories.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;クラスは&lt;a href=&quot;../nio/file/files#newDirectoryStream-java.nio.file.Path-&quot;&gt; &lt;code&gt;newDirectoryStream&lt;/code&gt; &lt;/a&gt;メソッドを定義してディレクトリを開き、ディレクトリ内のファイルの名前を反復することに注意してください。これにより、非常に大きなディレクトリを操作するときに使用するリソースが少なくなる場合があります。</target>
        </trans-unit>
        <trans-unit id="27087e882f58a5e15e9125a78d8f0a3b9a3cc6f4" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt; can lead to situations where points on the defining outline of the &lt;code&gt;shape&lt;/code&gt; may not be considered contained in the returned &lt;code&gt;bounds&lt;/code&gt; object, but only in cases where those points are also not considered contained in the original &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../shape#def_insideness&quot;&gt;内部&lt;/a&gt;性の定義は、 &lt;code&gt;shape&lt;/code&gt; 定義アウトライン上の点が返された &lt;code&gt;bounds&lt;/code&gt; オブジェクトに含まれていると見なされない状況につながる可能性があることに注意してください。ただし、それらの点も元の &lt;code&gt;shape&lt;/code&gt; 含まれていると見なされない場合に限ります。</target>
        </trans-unit>
        <trans-unit id="1c36f673075fbd855a8b32b8a5e09ee855f13576" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;deque#peek--&quot;&gt;&lt;code&gt;peek&lt;/code&gt;&lt;/a&gt; method works equally well when a deque is used as a queue or a stack; in either case, elements are drawn from the beginning of the deque.</source>
          <target state="translated">両端キューがキューまたはスタックとして使用されている場合、&lt;a href=&quot;deque#peek--&quot;&gt; &lt;code&gt;peek&lt;/code&gt; &lt;/a&gt;メソッドも同様に機能することに注意してください。どちらの場合も、要素は両端キューの先頭から描画されます。</target>
        </trans-unit>
        <trans-unit id="aa8e0fa4ccac519769dcd246d9e27f7bfa942af3" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;listiterator#remove--&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;listiterator#set-E-&quot;&gt;&lt;code&gt;set(Object)&lt;/code&gt;&lt;/a&gt; methods are</source>
          <target state="translated">ことに注意&lt;a href=&quot;listiterator#remove--&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;listiterator#set-E-&quot;&gt; &lt;code&gt;set(Object)&lt;/code&gt; &lt;/a&gt;の方法であります</target>
        </trans-unit>
        <trans-unit id="20a97b61e51049ba047964839d1bd03301972ade" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;shape#def_insideness&quot;&gt; definition of insideness&lt;/a&gt; can lead to situations where points on the defining outline of the &lt;code&gt;shape&lt;/code&gt; may not be considered contained in the returned &lt;code&gt;bounds&lt;/code&gt; object, but only in cases where those points are also not considered contained in the original &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;shape#def_insideness&quot;&gt;内部&lt;/a&gt;性の定義は、 &lt;code&gt;shape&lt;/code&gt; 定義アウトライン上の点が返された &lt;code&gt;bounds&lt;/code&gt; オブジェクトに含まれていると見なされない状況につながる可能性があることに注意してください。ただし、それらの点も元の &lt;code&gt;shape&lt;/code&gt; 含まれていると見なされない場合に限ります。</target>
        </trans-unit>
        <trans-unit id="991b6fac869e71fa9b427db3579f4fa43b3879e6" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;AccessibleRole&lt;/code&gt; class is also extensible, so custom component developers can define their own &lt;code&gt;AccessibleRole&lt;/code&gt;'s if the set of predefined roles is inadequate.</source>
          <target state="translated">&lt;code&gt;AccessibleRole&lt;/code&gt; クラスも拡張可能であるため、事前定義されたロールのセットが不十分な場合、カスタムコンポーネント開発者は独自の &lt;code&gt;AccessibleRole&lt;/code&gt; を定義できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="988280b60a9995bf010788246fd4d02592e34922" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;CertSelector&lt;/code&gt; returned is cloned to protect against subsequent modifications.</source>
          <target state="translated">返された &lt;code&gt;CertSelector&lt;/code&gt; は、後続の変更から保護するために複製されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e0a5fe5d70f7e3a3a322d4355524c0333b97592e" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;CertSelector&lt;/code&gt; specified is cloned to protect against subsequent modifications.</source>
          <target state="translated">指定された &lt;code&gt;CertSelector&lt;/code&gt; は、後続の変更から保護するために複製されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6938d302e9a62e94240ab0a6e295eb1f73bdbab4" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;CertStore.getInstance&lt;/code&gt; methods make a copy of the specified &lt;code&gt;CertStoreParameters&lt;/code&gt;. A deep copy implementation of &lt;code&gt;clone&lt;/code&gt; is safer and more robust, as it prevents the caller from corrupting a shared &lt;code&gt;CertStore&lt;/code&gt; by subsequently modifying the contents of its initialization parameters. However, a shallow copy implementation of &lt;code&gt;clone&lt;/code&gt; is more appropriate for applications that need to hold a reference to a parameter contained in the &lt;code&gt;CertStoreParameters&lt;/code&gt;. For example, a shallow copy clone allows an application to release the resources of a particular &lt;code&gt;CertStore&lt;/code&gt; initialization parameter immediately, rather than waiting for the garbage collection mechanism. This should be done with the utmost care, since the &lt;code&gt;CertStore&lt;/code&gt; may still be in use by other threads.</source>
          <target state="translated">&lt;code&gt;CertStore.getInstance&lt;/code&gt; メソッドは、指定された &lt;code&gt;CertStoreParameters&lt;/code&gt; のコピーを作成することに注意してください。 &lt;code&gt;clone&lt;/code&gt; ディープコピー実装は、呼び出し元がその後に初期化パラメータの内容を変更することによって共有 &lt;code&gt;CertStore&lt;/code&gt; を破損するのを防ぐため、より安全で堅牢です。ただし、 &lt;code&gt;CertStoreParameters&lt;/code&gt; に含まれるパラメーターへの参照を保持する必要があるアプリケーションには、 &lt;code&gt;clone&lt;/code&gt; シャローコピー実装の方が適しています。たとえば、シャローコピークローンにより、アプリケーションは特定の &lt;code&gt;CertStore&lt;/code&gt; のリソースを解放できます。ガベージコレクションメカニズムを待つのではなく、初期化パラメータを直ちに。 &lt;code&gt;CertStore&lt;/code&gt; はまだ他のスレッドによって使用されている可能性があるため、これは細心の注意を払って行う必要があります。</target>
        </trans-unit>
        <trans-unit id="e740657b93d5694f7439e9ca2e8c1172e00478ae" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;Collection&lt;/code&gt; returned may contain more than one name of the same type. Also, note that the returned &lt;code&gt;Collection&lt;/code&gt; is immutable and any entries containing byte arrays are cloned to protect against subsequent modifications.</source>
          <target state="translated">注意 &lt;code&gt;Collection&lt;/code&gt; 同じタイプの複数の名前が含まれていてもよい返さ。また、返される &lt;code&gt;Collection&lt;/code&gt; は不変であり、バイト配列を含むすべてのエントリは、その後の変更から保護するために複製されます。</target>
        </trans-unit>
        <trans-unit id="7de40aed3c95c99dad627f4045f1deea9418d7cd" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;Date&lt;/code&gt; returned is cloned to protect against subsequent modifications.</source>
          <target state="translated">返される &lt;code&gt;Date&lt;/code&gt; は、後続の変更から保護するために複製されます。</target>
        </trans-unit>
        <trans-unit id="9b5f5bbd270dce2b0f4bfc5466e8309055235ad3" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;Date&lt;/code&gt; returned is copied to protect against subsequent modifications.</source>
          <target state="translated">返された &lt;code&gt;Date&lt;/code&gt; は、その後の変更から保護するためにコピーされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="756c1ee00a664d513b2780d37cb85b56ab66facd" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;Date&lt;/code&gt; supplied here is cloned to protect against subsequent modifications.</source>
          <target state="translated">ここで提供される &lt;code&gt;Date&lt;/code&gt; は、その後の変更から保護するために複製されます。</target>
        </trans-unit>
        <trans-unit id="7142600977b8c132471aedf48221b5e358b67466" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;Date&lt;/code&gt; supplied here is copied to protect against subsequent modifications.</source>
          <target state="translated">ここで指定した &lt;code&gt;Date&lt;/code&gt; は、その後の変更から保護するためにコピーされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="0f4df85403b87e28e6aaf9e3605181e8cefc47d1" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;DragSourceContext&lt;/code&gt; itself implements the &lt;code&gt;DragSourceListener&lt;/code&gt; and &lt;code&gt;DragSourceMotionListener&lt;/code&gt; interfaces. This is to allow the platform peer (the &lt;code&gt;DragSourceContextPeer&lt;/code&gt; instance) created by the &lt;a href=&quot;dragsource&quot;&gt;&lt;code&gt;DragSource&lt;/code&gt;&lt;/a&gt; to notify the &lt;code&gt;DragSourceContext&lt;/code&gt; of state changes in the ongoing operation. This allows the &lt;code&gt;DragSourceContext&lt;/code&gt; object to interpose itself between the platform and the listeners provided by the initiator of the drag operation.</source>
          <target state="translated">&lt;code&gt;DragSourceContext&lt;/code&gt; 自体が &lt;code&gt;DragSourceListener&lt;/code&gt; および &lt;code&gt;DragSourceMotionListener&lt;/code&gt; インターフェースを実装していることに注意してください。これは、プラットフォームピア（可能にすることである &lt;code&gt;DragSourceContextPeer&lt;/code&gt; によって作成されたインスタンス）&lt;a href=&quot;dragsource&quot;&gt; &lt;code&gt;DragSource&lt;/code&gt; &lt;/a&gt;通知する &lt;code&gt;DragSourceContext&lt;/code&gt; の進行中の動作における状態変化のを。これにより、 &lt;code&gt;DragSourceContext&lt;/code&gt; オブジェクトは、プラットフォームと、ドラッグ操作のイニシエーターによって提供されるリスナーの間に介在することができます。</target>
        </trans-unit>
        <trans-unit id="687a40347734d2bb22d765a5ed8d1992b4e155c5" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;InputEvent.ALT_MASK&lt;/code&gt; and &lt;code&gt;InputEvent.BUTTON2_MASK&lt;/code&gt; have equal values, so the &quot;Alt&quot; string is returned for both modifiers. Likewise, the &lt;code&gt;InputEvent.META_MASK&lt;/code&gt; and &lt;code&gt;InputEvent.BUTTON3_MASK&lt;/code&gt; have equal values, so the &quot;Meta&quot; string is returned for both modifiers.</source>
          <target state="translated">&lt;code&gt;InputEvent.ALT_MASK&lt;/code&gt; と &lt;code&gt;InputEvent.BUTTON2_MASK&lt;/code&gt; の値が等しいため、両方の修飾子に対して「Alt」文字列が返されることに注意してください。同様に、 &lt;code&gt;InputEvent.META_MASK&lt;/code&gt; と &lt;code&gt;InputEvent.BUTTON3_MASK&lt;/code&gt; の値は等しいため、両方の修飾子に対して「Meta」文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="24ce15afd7e02392b41ed1c9692fd88b772af77e" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;List&lt;/code&gt; is copied to protect against subsequent modifications.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; は、その後の変更から保護するためにコピーされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1c16ce2f70e6154517db9ecc56262ca103e696ba" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;List&lt;/code&gt; supplied here is copied and each &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; in the list is cloned to protect against subsequent modifications.</source>
          <target state="translated">ここで提供される &lt;code&gt;List&lt;/code&gt; はコピーされ、リスト内の各 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; は、後続の変更から保護するために複製されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7ee01b4b23f75a243dec18f025f614495d62b3b3" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; is cloned to protect against subsequent modifications.</source>
          <target state="translated">&lt;code&gt;PKIXCertPathChecker&lt;/code&gt; は、その後の変更から保護するために複製されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b602381aafbbaaafbf002fc029131252825c1179" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;Set&lt;/code&gt; is cloned to protect against subsequent modifications.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; は後続の変更から保護するために複製されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="bfc0d202956cd45c30f4cbb883974be9fbfaffb6" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;Set&lt;/code&gt; is copied to protect against subsequent modifications.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; は、その後の変更から保護するためにコピーされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="14c25e75dc5956b5c15c3185a91822f794243c22" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;checkPermission&lt;/code&gt; method with just a single permission argument always performs security checks within the context of the currently executing thread. Sometimes a security check that should be made within a given context will actually need to be done from within a</source>
          <target state="translated">単一の権限引数を持つ &lt;code&gt;checkPermission&lt;/code&gt; メソッドは、常に現在実行中のスレッドのコンテキスト内でセキュリティチェックを実行することに注意してください。特定のコンテキスト内で行う必要があるセキュリティチェックは、実際には</target>
        </trans-unit>
        <trans-unit id="d465d184a0a220937c7f4b0c463b0c1f3e4251fd" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;encoded&lt;/code&gt; byte array is cloned to protect against subsequent modification.</source>
          <target state="translated">そのノート &lt;code&gt;encoded&lt;/code&gt; たバイト配列を、以後の変更から保護するためにクローン化されます。</target>
        </trans-unit>
        <trans-unit id="7eae258fdea7d49cd9e60454fc50d715893b28a8" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;getName&lt;/code&gt; method for an &lt;code&gt;UnresolvedPermission&lt;/code&gt; returns the &lt;code&gt;type&lt;/code&gt; (class name) for the underlying permission that has not been resolved.</source>
          <target state="translated">&lt;code&gt;UnresolvedPermission&lt;/code&gt; の &lt;code&gt;getName&lt;/code&gt; メソッドは、解決されていない基本的な権限の &lt;code&gt;type&lt;/code&gt; （クラス名）を返すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="146132f5e8a49b60e391eb6983257148a8a7fa71" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;getSubjectX500Principal&lt;/code&gt; and &lt;code&gt;getIssuerX500Principal&lt;/code&gt; methods of &lt;code&gt;X509Certificate&lt;/code&gt; return X500Principals representing the issuer and subject fields of the certificate.</source>
          <target state="translated">&lt;code&gt;X509Certificate&lt;/code&gt; の &lt;code&gt;getSubjectX500Principal&lt;/code&gt; メソッドと &lt;code&gt;getIssuerX500Principal&lt;/code&gt; メソッドは、証明書の発行者フィールドとサブジェクトフィールドを表すX500Principalsを返すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="a10930bdbea930ae33d125a9efd9b3ffc1189c20" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;matchers&lt;/code&gt; collection is cloned to protect against subsequent modification.</source>
          <target state="translated">&lt;code&gt;matchers&lt;/code&gt; コレクションは、その後の変更から保護するために複製されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="39b07685c295c896af82ad752b60da85dafcf372" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;names&lt;/code&gt; parameter can contain duplicate distinguished names, but they may be removed from the &lt;code&gt;Collection&lt;/code&gt; of names returned by the &lt;a href=&quot;#getIssuerNames()&quot;&gt;&lt;code&gt;getIssuerNames&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;names&lt;/code&gt; パラメーターには重複する識別名を含めることができますが、&lt;a href=&quot;#getIssuerNames()&quot;&gt; &lt;code&gt;getIssuerNames&lt;/code&gt; &lt;/a&gt;メソッドによって返される名前の &lt;code&gt;Collection&lt;/code&gt; から削除される場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="aba0bf08ad49fd21d205f268291460e6faaec6dc" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;names&lt;/code&gt; parameter can contain duplicate distinguished names, but they may be removed from the &lt;code&gt;Collection&lt;/code&gt; of names returned by the &lt;a href=&quot;#getIssuers()&quot;&gt;&lt;code&gt;getIssuers&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Note that the &lt;code&gt;names&lt;/code&gt; parameter can contain duplicate distinguished names, but they may be removed from the &lt;code&gt;Collection&lt;/code&gt; of names returned by the &lt;a href=&quot;#getIssuers()&quot;&gt; &lt;code&gt;getIssuers&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="853e395d16304dc7d59e521564cfcbdf1fe1d9b4" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;names&lt;/code&gt; parameter can contain duplicate distinguished names, but they may be removed from the &lt;code&gt;Collection&lt;/code&gt; of names returned by the &lt;a href=&quot;x509crlselector#getIssuerNames--&quot;&gt;&lt;code&gt;getIssuerNames&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;names&lt;/code&gt; パラメータには重複した識別名を含めることができますが、&lt;a href=&quot;x509crlselector#getIssuerNames--&quot;&gt; &lt;code&gt;getIssuerNames&lt;/code&gt; &lt;/a&gt;メソッドによって返される名前の &lt;code&gt;Collection&lt;/code&gt; から削除される場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="62d07c17e7376f897ae6e5662db428da35939cda" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;names&lt;/code&gt; parameter can contain duplicate distinguished names, but they may be removed from the &lt;code&gt;Collection&lt;/code&gt; of names returned by the &lt;a href=&quot;x509crlselector#getIssuers--&quot;&gt;&lt;code&gt;getIssuers&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;names&lt;/code&gt; パラメータには重複した識別名を含めることができますが、&lt;a href=&quot;x509crlselector#getIssuers--&quot;&gt; &lt;code&gt;getIssuers&lt;/code&gt; &lt;/a&gt;メソッドによって返される名前の &lt;code&gt;Collection&lt;/code&gt; から削除される場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="13ef70dac2da666b040fbff34e7767e491843b4c" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;names&lt;/code&gt; parameter can contain duplicate names (same name and name type), but they may be removed from the &lt;code&gt;Collection&lt;/code&gt; of names returned by the &lt;a href=&quot;#getPathToNames()&quot;&gt;&lt;code&gt;getPathToNames&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Note that the &lt;code&gt;names&lt;/code&gt; parameter can contain duplicate names (same name and name type), but they may be removed from the &lt;code&gt;Collection&lt;/code&gt; of names returned by the &lt;a href=&quot;#getPathToNames()&quot;&gt; &lt;code&gt;getPathToNames&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="bd8079ea1525eea916ad6dd7786f08ee373f4961" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;names&lt;/code&gt; parameter can contain duplicate names (same name and name type), but they may be removed from the &lt;code&gt;Collection&lt;/code&gt; of names returned by the &lt;a href=&quot;#getSubjectAlternativeNames()&quot;&gt;&lt;code&gt;getSubjectAlternativeNames&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Note that the &lt;code&gt;names&lt;/code&gt; parameter can contain duplicate names (same name and name type), but they may be removed from the &lt;code&gt;Collection&lt;/code&gt; of names returned by the &lt;a href=&quot;#getSubjectAlternativeNames()&quot;&gt; &lt;code&gt;getSubjectAlternativeNames&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="c9f4d19ea1348edcedbc943a51ba8eeea9d518fb" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;names&lt;/code&gt; parameter can contain duplicate names (same name and name type), but they may be removed from the &lt;code&gt;Collection&lt;/code&gt; of names returned by the &lt;a href=&quot;x509certselector#getPathToNames--&quot;&gt;&lt;code&gt;getPathToNames&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">注意 &lt;code&gt;names&lt;/code&gt; パラメータが重複した名前（同じ名前と名前タイプ）を含めることができますが、彼らはから除去することができる &lt;code&gt;Collection&lt;/code&gt; によって返された名前の&lt;a href=&quot;x509certselector#getPathToNames--&quot;&gt; &lt;code&gt;getPathToNames&lt;/code&gt; の&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="6e54c0ff1cfb2d8ca5a1acdffc8213c5e0f8728b" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;names&lt;/code&gt; parameter can contain duplicate names (same name and name type), but they may be removed from the &lt;code&gt;Collection&lt;/code&gt; of names returned by the &lt;a href=&quot;x509certselector#getSubjectAlternativeNames--&quot;&gt;&lt;code&gt;getSubjectAlternativeNames&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;names&lt;/code&gt; パラメータには重複した名前（同じ名前と名前タイプ）を含めることができますが、&lt;a href=&quot;x509certselector#getSubjectAlternativeNames--&quot;&gt; &lt;code&gt;getSubjectAlternativeNames&lt;/code&gt; &lt;/a&gt;メソッドによって返される名前の &lt;code&gt;Collection&lt;/code&gt; から削除される場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c14e64acfe94227c43f719a746e86900d00f7090" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;serverNames&lt;/code&gt; list is cloned to protect against subsequent modification.</source>
          <target state="translated">&lt;code&gt;serverNames&lt;/code&gt; リストは、その後の変更から保護するために複製されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="38308d874924a7942d1f42ff6dc2f346097d2c75" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;thrown&lt;/code&gt; argument is stored in the &lt;code&gt;LogRecord&lt;/code&gt;&lt;code&gt;thrown&lt;/code&gt; property, rather than the &lt;code&gt;LogRecord&lt;/code&gt;&lt;code&gt;parameters&lt;/code&gt; property. Thus it is processed specially by output &lt;code&gt;Formatter&lt;/code&gt; objects and is not treated as a formatting parameter to the &lt;code&gt;LogRecord&lt;/code&gt;&lt;code&gt;message&lt;/code&gt; property.</source>
          <target state="translated">Note that the &lt;code&gt;thrown&lt;/code&gt; argument is stored in the &lt;code&gt;LogRecord&lt;/code&gt; &lt;code&gt;thrown&lt;/code&gt; property, rather than the &lt;code&gt;LogRecord&lt;/code&gt; &lt;code&gt;parameters&lt;/code&gt; property. Thus it is processed specially by output &lt;code&gt;Formatter&lt;/code&gt; objects and is not treated as a formatting parameter to the &lt;code&gt;LogRecord&lt;/code&gt; &lt;code&gt;message&lt;/code&gt; property.</target>
        </trans-unit>
        <trans-unit id="986f8676d3727f0a03ee61225473768e48b647c0" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;wait&lt;/code&gt; method, as it places the current thread into the wait set for this object, unlocks only this object; any other objects on which the current thread may be synchronized remain locked while the thread waits.</source>
          <target state="translated">現在のスレッドをこのオブジェクトの待機セットに配置するため、 &lt;code&gt;wait&lt;/code&gt; メソッドはこのオブジェクトのみをロック解除することに注意してください。現在のスレッドが同期される可能性のある他のオブジェクトは、スレッドが待機している間、ロックされたままになります。</target>
        </trans-unit>
        <trans-unit id="66466b6a777448675550c25b8e8f2061272618e6" translate="yes" xml:space="preserve">
          <source>Note that the AccessibleRole class is also extensible, so custom component developers can define their own AccessibleRole's if the set of predefined roles is inadequate.</source>
          <target state="translated">AccessibleRoleクラスは拡張可能なので、カスタムコンポーネントの開発者は、定義済みのロールのセットが不十分な場合に独自のAccessibleRoleを定義できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="600b2598cbec0c4cc1f12fff57a0af82e4bcf29f" translate="yes" xml:space="preserve">
          <source>Note that the AdjustmentEvents type property will always have a placeholder value of AdjustmentEvent.TRACK because all changes to a BoundedRangeModels value are considered equivalent. To change the value of a BoundedRangeModel one just sets its value property, i.e. model.setValue(123). No information about the origin of the change, e.g. it's a block decrement, is provided. We don't try fabricate the origin of the change here.</source>
          <target state="translated">BoundedRangeModelsの値への変更はすべて同等とみなされるため、AdjustmentEventsタイプのプロパティには常にAdjustmentEvent.TRACKのプレースホルダ値が設定されていることに注意してください。BoundedRangeModel の値を変更するには、その value プロパティを設定するだけです。ブロックデクリメントなど、変更の発生源に関する情報は提供されません。ここでは変更の起源を捏造しようとはしません。</target>
        </trans-unit>
        <trans-unit id="a287cdfb1fc2b02b06ee414104dfacf6356bcb46" translate="yes" xml:space="preserve">
          <source>Note that the Cipher object must be fully initialized with the correct algorithm, key, padding scheme, etc., before being applied to a SealedObject.</source>
          <target state="translated">サイファーオブジェクトは、SealedObject に適用される前に、正しいアルゴリズム、鍵、パディングスキームなどで完全に初期化されていなければならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="7d03efa61acd1db505ae1fdd84d2f4633f1dfef9" translate="yes" xml:space="preserve">
          <source>Note that the Handler class &lt;b&gt;has to&lt;/b&gt; be a subclass of the abstract class &lt;a href=&quot;urlstreamhandler&quot;&gt;&lt;code&gt;URLStreamHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Handlerクラス&lt;b&gt;は&lt;/b&gt;、抽象クラス&lt;a href=&quot;urlstreamhandler&quot;&gt; &lt;code&gt;URLStreamHandler&lt;/code&gt; の&lt;/a&gt;サブクラスで&lt;b&gt;なければ&lt;/b&gt;ならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="68f6e49f723f29675cd4fcbbf1374b27c75a9085" translate="yes" xml:space="preserve">
          <source>Note that the ISO-8601 standard does not actually define eras. Note also that the ISO eras do not align with the well-known AD/BC eras due to the change between the Julian and Gregorian calendar systems.</source>
          <target state="translated">ISO-8601規格は実際には年号を定義していないことに注意してください。また、ユリウス暦とグレゴリオ暦の間の変更により、ISOの年号はよく知られているAD/BC年号と一致していないことにも注意してください。</target>
        </trans-unit>
        <trans-unit id="a5e022cddaafb15b12bb5f906b9ebec484bf96fd" translate="yes" xml:space="preserve">
          <source>Note that the InputSource gets no further resolution. Implementations of this method may wish to invoke &lt;a href=&quot;#resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;resolveEntity()&lt;/code&gt;&lt;/a&gt; to gain benefits such as use of local caches of DTD entities. Also, this method will never be used by a (non-validating) processor that is not including external parameter entities.</source>
          <target state="translated">Note that the InputSource gets no further resolution. Implementations of this method may wish to invoke &lt;a href=&quot;#resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;resolveEntity()&lt;/code&gt; &lt;/a&gt; to gain benefits such as use of local caches of DTD entities. Also, this method will never be used by a (non-validating) processor that is not including external parameter entities.</target>
        </trans-unit>
        <trans-unit id="d96c739af6d6be683992dca18c88ca500390be00" translate="yes" xml:space="preserve">
          <source>Note that the JDBC RowSet Implementations include the &lt;code&gt;SyncProvider&lt;/code&gt; implementations &lt;code&gt;RIOptimisticProvider&lt;/code&gt; and &lt;code&gt;RIXmlProvider&lt;/code&gt;, which satisfy this requirement.</source>
          <target state="translated">Note that the JDBC RowSet Implementations include the &lt;code&gt;SyncProvider&lt;/code&gt; implementations &lt;code&gt;RIOptimisticProvider&lt;/code&gt; and &lt;code&gt;RIXmlProvider&lt;/code&gt; , which satisfy this requirement.</target>
        </trans-unit>
        <trans-unit id="9cbc3c1c73b61088bab97a479f1657a4bfb13701" translate="yes" xml:space="preserve">
          <source>Note that the JDK Implementation uses default values for both the session cache size and timeout. See &lt;code&gt;getSessionCacheSize&lt;/code&gt; and &lt;code&gt;getSessionTimeout&lt;/code&gt; for more information. Applications should consider their performance requirements and override the defaults if necessary.</source>
          <target state="translated">Note that the JDK Implementation uses default values for both the session cache size and timeout. See &lt;code&gt;getSessionCacheSize&lt;/code&gt; and &lt;code&gt;getSessionTimeout&lt;/code&gt; for more information. Applications should consider their performance requirements and override the defaults if necessary.</target>
        </trans-unit>
        <trans-unit id="121207ea3168ff93d476e2c34ba63695f18f95e3" translate="yes" xml:space="preserve">
          <source>Note that the KeyboardFocusManager itself implements KeyEventPostProcessor. By default, the current KeyboardFocusManager will be the final KeyEventPostProcessor in the chain. The current KeyboardFocusManager cannot be completely deregistered as a KeyEventPostProcessor. However, if a KeyEventPostProcessor reports that no further post-processing of the KeyEvent should take place, the AWT will consider the event fully handled and will take no additional action with regard to the event. (While it is possible for client code to register the current KeyboardFocusManager as a KeyEventPostProcessor one or more times, this is usually unnecessary and not recommended.)</source>
          <target state="translated">KeyboardFocusManager 自体が KeyEventPostProcessor を実装していることに注意してください。既定では、現在の KeyboardFocusManager は、チェーン内の最後の KeyEventPostProcessor になります。現在の KeyboardFocusManager は、KeyEventPostProcessor として完全に登録を解除することはできません。しかし、KeyEventPostProcessorが、KeyEventのそれ以上の後処理が行われないことを報告する場合、AWTは、イベントが完全に処理されたとみなし、イベントに関して追加のアクションを行いません。(クライアントコードがKeyEventPostProcessorとして現在のKeyboardFocusManagerを1回以上登録することは可能ですが、これは通常は不要であり、推奨されません)。</target>
        </trans-unit>
        <trans-unit id="b9ae63fa5c8deaf38cfe3d102c2fe3407bd5110b" translate="yes" xml:space="preserve">
          <source>Note that the PKIX certification path validation algorithm specifies that any policy qualifier in a certificate policies extension that is marked critical must be processed and validated. Otherwise the certification path must be rejected. If the &lt;code&gt;policyQualifiersRejected&lt;/code&gt; flag is set to false, it is up to the application to validate all policy qualifiers in this manner in order to be PKIX compliant.</source>
          <target state="translated">PKIX証明書パス検証アルゴリズムでは、クリティカルとマークされている証明書ポリシー拡張のポリシー修飾子を処理して検証する必要があることを指定しています。それ以外の場合は、証明書パスを拒否する必要があります。 &lt;code&gt;policyQualifiersRejected&lt;/code&gt; フラグがfalseに設定されている場合、PKIXに準拠するために、この方法ですべてのポリシー修飾子を検証するのはアプリケーションの責任です。</target>
        </trans-unit>
        <trans-unit id="dde6773f95e2d3779484c97f76fa50444b81e507" translate="yes" xml:space="preserve">
          <source>Note that the PKIX certification path validation algorithm specifies that any policy qualifier in a certificate policies extension that is marked critical must be processed and validated. Otherwise the certification path must be rejected. If the policyQualifiersRejected flag is set to false, it is up to the application to validate all policy qualifiers in this manner in order to be PKIX compliant.</source>
          <target state="translated">PKIX 認証パス検証アルゴリズムは、クリティカルとマークされた証明書ポリシー拡張内のポリシー修飾子が処理され、検証される必要があることを指定していることに注意してください。そうでない場合、認証パスは拒否される必要があります。policyQualifiersRejected フラグが false に設定されている場合、PKIX に準拠するために、この方法ですべてのポリシー修飾子を検証するのはアプリケーション次第です。</target>
        </trans-unit>
        <trans-unit id="33c761075e29dd51a74c05bc4d8dc691c2c1c4c7" translate="yes" xml:space="preserve">
          <source>Note that the SAX1 document handler has no Namespace support.</source>
          <target state="translated">SAX1ドキュメントハンドラは名前空間をサポートしていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="a059b0c65ef0e0bb868d6fa0585b56507219ee9b" translate="yes" xml:space="preserve">
          <source>Note that the Source and the Destination may not be the same object.</source>
          <target state="translated">ソースとデスティネーションが同じオブジェクトではない場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="94b011083096b9aaef46ca0541befae36befe3f5" translate="yes" xml:space="preserve">
          <source>Note that the above example will throw a &lt;code&gt;ClassCastException&lt;/code&gt; if the &lt;code&gt;Object&lt;/code&gt; passed to &lt;code&gt;compareTo(Object)&lt;/code&gt; is not a &lt;code&gt;Date&lt;/code&gt;.</source>
          <target state="translated">Note that the above example will throw a &lt;code&gt;ClassCastException&lt;/code&gt; if the &lt;code&gt;Object&lt;/code&gt; passed to &lt;code&gt;compareTo(Object)&lt;/code&gt; is not a &lt;code&gt;Date&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2921ae2b51a2608125abd4de9ba75dd67e47a0c" translate="yes" xml:space="preserve">
          <source>Note that the activator receives a &quot;marshalled&quot; object instead of a Remote object so that the activator does not need to load the code for that object, or participate in distributed garbage collection for that object. If the activator kept a strong reference to the remote object, the activator would then prevent the object from being garbage collected under the normal distributed garbage collection mechanism.</source>
          <target state="translated">アクティベータはリモートオブジェクトの代わりに「マーシャルされた」オブジェクトを受け取るので、アクティベータはそのオブジェクトのコードをロードしたり、そのオブジェクトの分散ガベージコレクションに参加したりする必要がないことに注意してください。アクティベータがリモートオブジェクトへの強い参照を保持している場合、アクティベータは、通常の分散型ガベージコレクションメカニズムの下でオブジェクトがガベージコレクションされるのを防ぐでしょう。</target>
        </trans-unit>
        <trans-unit id="8231e5a7ba75fd3f4a7b548d4f38a359f02d6907" translate="yes" xml:space="preserve">
          <source>Note that the actual maximum value of the scroll bar is the &lt;code&gt;maximum&lt;/code&gt; minus the &lt;code&gt;visible amount&lt;/code&gt;. In the previous example, because the &lt;code&gt;maximum&lt;/code&gt; is 300 and the &lt;code&gt;visible amount&lt;/code&gt; is 60, the actual maximum value is 240. The range of the scrollbar track is 0 - 300. The left side of the bubble indicates the value of the scroll bar.</source>
          <target state="translated">Note that the actual maximum value of the scroll bar is the &lt;code&gt;maximum&lt;/code&gt; minus the &lt;code&gt;visible amount&lt;/code&gt; . In the previous example, because the &lt;code&gt;maximum&lt;/code&gt; is 300 and the &lt;code&gt;visible amount&lt;/code&gt; is 60, the actual maximum value is 240. The range of the scrollbar track is 0 - 300. The left side of the bubble indicates the value of the scroll bar.</target>
        </trans-unit>
        <trans-unit id="d76bf6c9a5ad363caa881145d8e63d00bf1d2f45" translate="yes" xml:space="preserve">
          <source>Note that the address returned may be &lt;code&gt;null&lt;/code&gt; if the &lt;code&gt;JMXConnectorServer&lt;/code&gt; is not yet &lt;a href=&quot;#isActive()&quot;&gt;&lt;code&gt;active&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Note that the address returned may be &lt;code&gt;null&lt;/code&gt; if the &lt;code&gt;JMXConnectorServer&lt;/code&gt; is not yet &lt;a href=&quot;#isActive()&quot;&gt; &lt;code&gt;active&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ecc4da7e122b65298caf6a2e895a645b6616f131" translate="yes" xml:space="preserve">
          <source>Note that the address returned may be &lt;code&gt;null&lt;/code&gt; if the &lt;code&gt;JMXConnectorServer&lt;/code&gt; is not yet &lt;a href=&quot;../jmxconnectorservermbean#isActive--&quot;&gt;&lt;code&gt;active&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;JMXConnectorServer&lt;/code&gt; がまだ&lt;a href=&quot;../jmxconnectorservermbean#isActive--&quot;&gt; &lt;code&gt;active&lt;/code&gt; &lt;/a&gt;でない場合、返されるアドレスは &lt;code&gt;null&lt;/code&gt; になる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="920497d5c91ba08bc2aeb7e0378b6373891c2edc" translate="yes" xml:space="preserve">
          <source>Note that the address returned may be &lt;code&gt;null&lt;/code&gt; if the &lt;code&gt;JMXConnectorServer&lt;/code&gt; is not yet &lt;a href=&quot;jmxconnectorservermbean#isActive--&quot;&gt;&lt;code&gt;active&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;JMXConnectorServer&lt;/code&gt; がまだ&lt;a href=&quot;jmxconnectorservermbean#isActive--&quot;&gt; &lt;code&gt;active&lt;/code&gt; &lt;/a&gt;でない場合、返されるアドレスは &lt;code&gt;null&lt;/code&gt; になる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8e8a6c5c436497327540e915498e571b20a4e36c" translate="yes" xml:space="preserve">
          <source>Note that the advance of a &lt;code&gt;String&lt;/code&gt; is not necessarily the sum of the advances of its characters measured in isolation because the width of a character can vary depending on its context. For example, in Arabic text, the shape of a character can change in order to connect to other characters. Also, in some scripts, certain character sequences can be represented by a single shape, called a &lt;em&gt;ligature&lt;/em&gt;. Measuring characters individually does not account for these transformations.</source>
          <target state="translated">Note that the advance of a &lt;code&gt;String&lt;/code&gt; is not necessarily the sum of the advances of its characters measured in isolation because the width of a character can vary depending on its context. For example, in Arabic text, the shape of a character can change in order to connect to other characters. Also, in some scripts, certain character sequences can be represented by a single shape, called a &lt;em&gt;ligature&lt;/em&gt;. Measuring characters individually does not account for these transformations.</target>
        </trans-unit>
        <trans-unit id="cd11d5a6ae37c0d6eef1c289136d03d68dc85af5" translate="yes" xml:space="preserve">
          <source>Note that the advance of a &lt;code&gt;String&lt;/code&gt; is not necessarily the sum of the advances of its characters.</source>
          <target state="translated">Note that the advance of a &lt;code&gt;String&lt;/code&gt; is not necessarily the sum of the advances of its characters.</target>
        </trans-unit>
        <trans-unit id="fb4126fa9d9faed592884a76d3b6107dd436533c" translate="yes" xml:space="preserve">
          <source>Note that the alpha component of the returned color indicates whether the window is in the non-opaque (per-pixel translucent) mode.</source>
          <target state="translated">返された色のアルファ成分は、ウィンドウが非不透明(ピクセル単位の半透明)モードであるかどうかを示していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3a9c5b7cece8dc2d1ad438dbda9df46cfa8ae964" translate="yes" xml:space="preserve">
          <source>Note that the amount of memory required to hold an object of any given type may be implementation-dependent.</source>
          <target state="translated">任意の型のオブジェクトを保持するのに必要なメモリ量は、実装に依存する場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="934be15369a61ef84c3edd2151ffea066f9a92cf" translate="yes" xml:space="preserve">
          <source>Note that the apdu bytes are copied to protect against subsequent modification.</source>
          <target state="translated">apdu バイトは、後からの変更を防ぐためにコピーされていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d796ae851754144d274240a149124fe4220a5372" translate="yes" xml:space="preserve">
          <source>Note that the appearance and metrics of a 12pt font with a 2x transform might be different than that of a 24 point font with no transform.</source>
          <target state="translated">12pt のフォントに 2x 変換を加えた場合の外観やメトリクスは、24pt のフォントに 2x 変換を加えなかった場合の外観やメトリクスとは異なる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="57f1a04431ccdbe43c858a1eb88e0c07c789405b" translate="yes" xml:space="preserve">
          <source>Note that the application still requires an XML parser that implements SAX1.</source>
          <target state="translated">アプリケーションには、SAX1を実装したXMLパーサーが必要なことに注意してください。</target>
        </trans-unit>
        <trans-unit id="8ddf6ff0f9abe3d75a3ab55e218e948878271c8d" translate="yes" xml:space="preserve">
          <source>Note that the attribute list provided will contain only attributes with explicit values (specified or defaulted): #IMPLIED attributes will be omitted. The attribute list will contain attributes used for Namespace declarations (xmlns* attributes) only if the &lt;code&gt;http://xml.org/sax/features/namespace-prefixes&lt;/code&gt; property is true (it is false by default, and support for a true value is optional).</source>
          <target state="translated">Note that the attribute list provided will contain only attributes with explicit values (specified or defaulted): #IMPLIED attributes will be omitted. The attribute list will contain attributes used for Namespace declarations (xmlns* attributes) only if the &lt;code&gt;http://xml.org/sax/features/namespace-prefixes&lt;/code&gt; property is true (it is false by default, and support for a true value is optional).</target>
        </trans-unit>
        <trans-unit id="8e33f6be631338d60a61e74693b8502af9b70f67" translate="yes" xml:space="preserve">
          <source>Note that the basic logical channel cannot be closed using this method. It can be closed by calling &lt;a href=&quot;card#disconnect(boolean)&quot;&gt;&lt;code&gt;Card.disconnect(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Note that the basic logical channel cannot be closed using this method. It can be closed by calling &lt;a href=&quot;card#disconnect(boolean)&quot;&gt; &lt;code&gt;Card.disconnect(boolean)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8e2ae11ad7c1eb4cf56305e5ee766ced0ade23b6" translate="yes" xml:space="preserve">
          <source>Note that the behavior of an unmarshalled &lt;code&gt;XMLSignature&lt;/code&gt; is undefined if the contents of the underlying DOM tree are modified by the caller after the &lt;code&gt;XMLSignature&lt;/code&gt; is created.</source>
          <target state="translated">Note that the behavior of an unmarshalled &lt;code&gt;XMLSignature&lt;/code&gt; is undefined if the contents of the underlying DOM tree are modified by the caller after the &lt;code&gt;XMLSignature&lt;/code&gt; is created.</target>
        </trans-unit>
        <trans-unit id="550b6222365f457f22bc34c5aacfcb00df5bdd91" translate="yes" xml:space="preserve">
          <source>Note that the behavior of this method differs from the older &lt;a href=&quot;../../util/calendar#getInstance(java.util.Locale)&quot;&gt;&lt;code&gt;Calendar.getInstance(Locale)&lt;/code&gt;&lt;/a&gt; method. If that method receives a locale of &quot;th_TH&quot; it will return &lt;code&gt;BuddhistCalendar&lt;/code&gt;. By contrast, this method will return &lt;code&gt;IsoChronology&lt;/code&gt;. Passing the locale &quot;th-TH-u-ca-buddhist&quot; into either method will result in the Thai Buddhist calendar system and is therefore the recommended approach going forward for Thai calendar system localization.</source>
          <target state="translated">Note that the behavior of this method differs from the older &lt;a href=&quot;../../util/calendar#getInstance(java.util.Locale)&quot;&gt; &lt;code&gt;Calendar.getInstance(Locale)&lt;/code&gt; &lt;/a&gt; method. If that method receives a locale of &quot;th_TH&quot; it will return &lt;code&gt;BuddhistCalendar&lt;/code&gt; . By contrast, this method will return &lt;code&gt;IsoChronology&lt;/code&gt; . Passing the locale &quot;th-TH-u-ca-buddhist&quot; into either method will result in the Thai Buddhist calendar system and is therefore the recommended approach going forward for Thai calendar system localization.</target>
        </trans-unit>
        <trans-unit id="69e96d1eff90e87219450cb830b0087bcbd1f472" translate="yes" xml:space="preserve">
          <source>Note that the behavior of this method differs from the older &lt;a href=&quot;../../util/calendar#getInstance-java.util.Locale-&quot;&gt;&lt;code&gt;Calendar.getInstance(Locale)&lt;/code&gt;&lt;/a&gt; method. If that method receives a locale of &quot;th_TH&quot; it will return &lt;code&gt;BuddhistCalendar&lt;/code&gt;. By contrast, this method will return &lt;code&gt;IsoChronology&lt;/code&gt;. Passing the locale &quot;th-TH-u-ca-buddhist&quot; into either method will result in the Thai Buddhist calendar system and is therefore the recommended approach going forward for Thai calendar system localization.</source>
          <target state="translated">このメソッドの動作は、以前の&lt;a href=&quot;../../util/calendar#getInstance-java.util.Locale-&quot;&gt; &lt;code&gt;Calendar.getInstance(Locale)&lt;/code&gt; &lt;/a&gt;メソッドとは異なることに注意してください。そのメソッドが「th_TH」のロケールを受け取ると、 &lt;code&gt;BuddhistCalendar&lt;/code&gt; を返します。対照的に、このメソッドは &lt;code&gt;IsoChronology&lt;/code&gt; を返します。ロケール「th-TH-u-ca-buddhist」をどちらかの方法に渡すと、タイの仏教暦システムが作成されるため、タイの暦システムのローカライズには今後推奨されるアプローチです。</target>
        </trans-unit>
        <trans-unit id="1bd3f5a92243df95297353a9159f4efa867d4186" translate="yes" xml:space="preserve">
          <source>Note that the boolean array returned is cloned to protect against subsequent modifications.</source>
          <target state="translated">返されたブーリアン配列は、その後の変更から保護するためにクローン化されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3b3cb8ceaed97cd58e9edb158792a15db18b86d9" translate="yes" xml:space="preserve">
          <source>Note that the boolean array supplied here is cloned to protect against subsequent modifications.</source>
          <target state="translated">ここで与えられたブーリアン配列は、後からの変更を防ぐためにクローン化されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="55c11de13fa984fca718431350a4374223af903b" translate="yes" xml:space="preserve">
          <source>Note that the byte array is cloned to protect against subsequent modification.</source>
          <target state="translated">バイト配列は、その後の変更から保護するためにクローン化されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="98649c3120125f2624d5cd0a0dec5d4c2f57bed7" translate="yes" xml:space="preserve">
          <source>Note that the byte array returned is cloned to protect against subsequent modifications.</source>
          <target state="translated">返されたバイト配列は、その後の変更から保護するためにクローン化されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="48bc667fcbc1193935c676094d360ff45b02053f" translate="yes" xml:space="preserve">
          <source>Note that the byte array specified here is cloned to protect against subsequent modifications.</source>
          <target state="translated">ここで指定されたバイト配列は、後からの変更を防ぐためにクローン化されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7758e3dfa3aa64e8b941cb39f33bb199b7fd1668" translate="yes" xml:space="preserve">
          <source>Note that the byte array supplied here is cloned to protect against subsequent modifications.</source>
          <target state="translated">ここで与えられたバイト配列は、後からの変更を防ぐためにクローン化されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="41bb19948a64112bc0391f87fa9476ebf0815a3c" translate="yes" xml:space="preserve">
          <source>Note that the byte is written as given; to write a character that will be translated according to the platform's default character encoding, use the &lt;code&gt;print(char)&lt;/code&gt; or &lt;code&gt;println(char)&lt;/code&gt; methods.</source>
          <target state="translated">バイトは指定どおりに書き込まれることに注意してください。プラットフォームのデフォルトの文字エンコーディングに従って変換される文字を書き込むには、 &lt;code&gt;print(char)&lt;/code&gt; または &lt;code&gt;println(char)&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="a8c74a9984fdd8c9d87f727f57f5a335309bbb62" translate="yes" xml:space="preserve">
          <source>Note that the bytes will be written as given; to write characters that will be translated according to the platform's default character encoding, use the &lt;code&gt;print(char)&lt;/code&gt; or &lt;code&gt;println(char)&lt;/code&gt; methods.</source>
          <target state="translated">バイトは与えられたとおりに書き込まれることに注意してください。プラットフォームのデフォルトの文字エンコーディングに従って変換される文字を書き込むには、 &lt;code&gt;print(char)&lt;/code&gt; または &lt;code&gt;println(char)&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="b0197d36c9a659c37258beb06c7b044615539fcf" translate="yes" xml:space="preserve">
          <source>Note that the column in</source>
          <target state="translated">のカラムに注意してください。</target>
        </trans-unit>
        <trans-unit id="23bfe2093adaaafcbc8bda1fce5f8ab6c1fd3efc" translate="yes" xml:space="preserve">
          <source>Note that the contents of &lt;code&gt;otherPrimeInfo&lt;/code&gt; are copied to protect against subsequent modification when constructing this object.</source>
          <target state="translated">&lt;code&gt;otherPrimeInfo&lt;/code&gt; の内容は、このオブジェクトを構築する際の後続の変更から保護するためにコピーされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3985eefbac725ccfaa52ab83f8ebeb4f3d574ab1" translate="yes" xml:space="preserve">
          <source>Note that the contents of the three array parameters &lt;var&gt;itemNames&lt;/var&gt;, &lt;var&gt;itemDescriptions&lt;/var&gt; and &lt;var&gt;itemTypes&lt;/var&gt; are internally copied so that any subsequent modification of these arrays by the caller of this constructor has no impact on the constructed &lt;code&gt;CompositeType&lt;/code&gt; instance.</source>
          <target state="translated">3つの配列パラメーター &lt;var&gt;itemNames&lt;/var&gt; 、 &lt;var&gt;itemDescriptions&lt;/var&gt; 、 &lt;var&gt;itemTypes&lt;/var&gt; の内容は内部的にコピーされるため、このコンストラクターの呼び出し元によるこれらの配列のその後の変更は、構築された &lt;code&gt;CompositeType&lt;/code&gt; インスタンスに影響を与えないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="97b8cc9f6f9fcaf3a27fa5979e52f60691e56da5" translate="yes" xml:space="preserve">
          <source>Note that the correct test for frame being fully maximized is</source>
          <target state="translated">フレームが完全に最大化されているかどうかの正しいテストは以下の通りであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d800cff1bd4bf70f8b643ab1d8f447daa20fd543" translate="yes" xml:space="preserve">
          <source>Note that the created empty descriptor is not a valid descriptor (the method &lt;a href=&quot;#isValid()&quot;&gt;&lt;code&gt;isValid&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">Note that the created empty descriptor is not a valid descriptor (the method &lt;a href=&quot;#isValid()&quot;&gt; &lt;code&gt;isValid&lt;/code&gt; &lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="676b59d52306c71979ac5eb91682fb0ecdb9f5ac" translate="yes" xml:space="preserve">
          <source>Note that the created empty descriptor is not a valid descriptor (the method &lt;a href=&quot;#isValid()&quot;&gt;&lt;code&gt;isValid&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">Note that the created empty descriptor is not a valid descriptor (the method &lt;a href=&quot;#isValid()&quot;&gt; &lt;code&gt;isValid&lt;/code&gt; &lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ca390b7381733866c3f8e18b0c9b52cfd0d778f1" translate="yes" xml:space="preserve">
          <source>Note that the created empty descriptor is not a valid descriptor (the method &lt;a href=&quot;descriptorsupport#isValid--&quot;&gt;&lt;code&gt;isValid&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">作成された空の記述子は有効な記述子ではないことに注意してください（&lt;a href=&quot;descriptorsupport#isValid--&quot;&gt; &lt;code&gt;isValid&lt;/code&gt; &lt;/a&gt;メソッドは &lt;code&gt;false&lt;/code&gt; を返します）</target>
        </trans-unit>
        <trans-unit id="e27b5561a032ed45ad699f657a2b94172fc213cd" translate="yes" xml:space="preserve">
          <source>Note that the created empty descriptor is not a valid descriptor (the method &lt;a href=&quot;descriptorsupport#isValid--&quot;&gt;&lt;code&gt;isValid&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">作成された空の記述子は有効な記述子ではないことに注意してください（&lt;a href=&quot;descriptorsupport#isValid--&quot;&gt; &lt;code&gt;isValid&lt;/code&gt; &lt;/a&gt;メソッドは &lt;code&gt;false&lt;/code&gt; を返します）。</target>
        </trans-unit>
        <trans-unit id="baf343d35540a57cd7c53dee5c944b386bccc482" translate="yes" xml:space="preserve">
          <source>Note that the current contents of the &lt;code&gt;MemoryHandler&lt;/code&gt; buffer are &lt;b&gt;not&lt;/b&gt; written out. That requires a &quot;push&quot;.</source>
          <target state="translated">&lt;code&gt;MemoryHandler&lt;/code&gt; バッファーの現在の内容は書き出され&lt;b&gt;ない&lt;/b&gt;ことに注意してください。それには「プッシュ」が必要です。</target>
        </trans-unit>
        <trans-unit id="3576536b476d6f288e2b5a53508435a74c1d403e" translate="yes" xml:space="preserve">
          <source>Note that the data bytes are copied to protect against subsequent modification.</source>
          <target state="translated">データバイトは、後からの変更から保護するためにコピーされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4ab0623562d136095e890e92aba942e9d0d832a1" translate="yes" xml:space="preserve">
          <source>Note that the data in the ByteBuffer is copied to protect against subsequent modification.</source>
          <target state="translated">ByteBuffer内のデータは、後続の変更から保護するためにコピーされていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="28497725bea56b4157226139f8b58b8f2b3ba826" translate="yes" xml:space="preserve">
          <source>Note that the default uncaught exception handler should not usually defer to the thread's &lt;code&gt;ThreadGroup&lt;/code&gt; object, as that could cause infinite recursion.</source>
          <target state="translated">デフォルトのキャッチされない例外ハンドラーは、通常、スレッドの &lt;code&gt;ThreadGroup&lt;/code&gt; オブジェクトに従うべきではないことに注意してください。無限再帰を引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="a6439914cf505a34ff736faeb01cc44494c444e3" translate="yes" xml:space="preserve">
          <source>Note that the detail message associated with &lt;code&gt;cause&lt;/code&gt; is</source>
          <target state="translated">&lt;code&gt;cause&lt;/code&gt; 関連する詳細メッセージは、</target>
        </trans-unit>
        <trans-unit id="88232412e9dcc9c9bbfef39a0ab00545e0407f57" translate="yes" xml:space="preserve">
          <source>Note that the detail message associated with &lt;code&gt;cause&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; automatically incorporated in this exception's detail message.</source>
          <target state="translated">&lt;code&gt;cause&lt;/code&gt; 関連付けられた詳細メッセージは、この例外の詳細メッセージに自動的には組み込まれ&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="aef5718ac8a718341271d71f7d02357f742fe24f" translate="yes" xml:space="preserve">
          <source>Note that the embedded parser cannot be changed once the adapter is created; to embed a different parser, allocate a new ParserAdapter.</source>
          <target state="translated">アダプタが作成されると、埋め込まれたパーサは変更できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="1e7f5bb03635f522408aedb8ad78692fe96ee461" translate="yes" xml:space="preserve">
          <source>Note that the entity naming scheme used here is the same one used in the &lt;a href=&quot;lexicalhandler&quot;&gt;&lt;code&gt;LexicalHandler&lt;/code&gt;&lt;/a&gt;, or in the &lt;a href=&quot;../contenthandler#skippedEntity(java.lang.String)&quot;&gt;&lt;code&gt;ContentHandler.skippedEntity()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Note that the entity naming scheme used here is the same one used in the &lt;a href=&quot;lexicalhandler&quot;&gt; &lt;code&gt;LexicalHandler&lt;/code&gt; &lt;/a&gt;, or in the &lt;a href=&quot;../contenthandler#skippedEntity(java.lang.String)&quot;&gt; &lt;code&gt;ContentHandler.skippedEntity()&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="7e4b0865b4080fb87868f3b75be237d2d26483e0" translate="yes" xml:space="preserve">
          <source>Note that the event source is always the same &lt;code&gt;EventContext&lt;/code&gt;&lt;em&gt;instance&lt;/em&gt; that the listener has registered with. Furthermore, the names of the bindings in the &lt;code&gt;NamingEvent&lt;/code&gt; are always relative to that instance. For example, suppose a listener makes the following registration:</source>
          <target state="translated">イベントソースは、リスナーが登録されているのと同じ &lt;code&gt;EventContext&lt;/code&gt; &lt;em&gt;インスタンスである&lt;/em&gt;ことに注意してください。さらに、 &lt;code&gt;NamingEvent&lt;/code&gt; のバインディングの名前は常にそのインスタンスに関連しています。たとえば、リスナーが次の登録を行ったとします。</target>
        </trans-unit>
        <trans-unit id="4774d2e10632edf7ff877f3c231d1bf1b64bae21" translate="yes" xml:space="preserve">
          <source>Note that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast iterators throw &lt;code&gt;ConcurrentModificationException&lt;/code&gt; on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness:</source>
          <target state="translated">イテレータのフェイルファスト動作は、同期していない同時変更が存在する場合、一般的に言えば、厳密な保証を行うことが不可能であるため、保証できないことに注意してください。フェイルファーストイテレータは、ベストエフォートベースで &lt;code&gt;ConcurrentModificationException&lt;/code&gt; をスローします。したがって、この例外に正確性を依存するプログラムを作成するのは誤りです。</target>
        </trans-unit>
        <trans-unit id="bbc013ccb3bec6f168006262e334cd1b0cec1863" translate="yes" xml:space="preserve">
          <source>Note that the fail-fast behavior of an iterator cannot be guaranteed as it is, generally speaking, impossible to make any hard guarantees in the presence of unsynchronized concurrent modification. Fail-fast iterators throw &lt;code&gt;ConcurrentModificationException&lt;/code&gt; on a best-effort basis. Therefore, it would be wrong to write a program that depended on this exception for its correctness: &lt;em&gt;the fail-fast behavior of iterators should be used only to detect bugs.&lt;/em&gt;</source>
          <target state="translated">イテレータのフェイルファスト動作は、同期していない同時変更が存在する場合、一般的に言えば、厳密な保証を行うことが不可能であるため、保証できないことに注意してください。フェイルファーストイテレータは、ベストエフォートベースで &lt;code&gt;ConcurrentModificationException&lt;/code&gt; をスローします。したがって、この例外に正確性を依存するプログラムを作成するのは誤り&lt;em&gt;です。反復子のフェイルファスト動作は、バグを検出するためにのみ使用する必要があります。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8f337cec4dfd1e9f682c8b7a6e3c6946ba4dbd75" translate="yes" xml:space="preserve">
          <source>Note that the first week may start in the previous calendar year. Note also that the first few days of a calendar year may be in the week-based-year corresponding to the previous calendar year.</source>
          <target state="translated">最初の週は、前の暦年から始まる場合があることに注意してください。また、暦年の最初の数日は、前の暦年に対応する週ベースの年になる場合があることにも注意してください。</target>
        </trans-unit>
        <trans-unit id="69508ccded1b20ac4486f64b2ed05294ca9fbcb9" translate="yes" xml:space="preserve">
          <source>Note that the following constraints have to be met:</source>
          <target state="translated">以下の制約を満たす必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e667691834c8d4e8229d4ee44568cb94337cfec9" translate="yes" xml:space="preserve">
          <source>Note that the get and set methods operate on references. Therefore, one must be careful not to share references between &lt;code&gt;ParameterBlock&lt;/code&gt;s when this is inappropriate. For example, to create a new &lt;code&gt;ParameterBlock&lt;/code&gt; that is equal to an old one except for an added source, one might be tempted to write:</source>
          <target state="translated">Note that the get and set methods operate on references. Therefore, one must be careful not to share references between &lt;code&gt;ParameterBlock&lt;/code&gt; s when this is inappropriate. For example, to create a new &lt;code&gt;ParameterBlock&lt;/code&gt; that is equal to an old one except for an added source, one might be tempted to write:</target>
        </trans-unit>
        <trans-unit id="13faa83e4779d055ea26b88d6004778b95615cf5" translate="yes" xml:space="preserve">
          <source>Note that the given user password is cloned before it is stored in the new &lt;code&gt;PasswordAuthentication&lt;/code&gt; object.</source>
          <target state="translated">指定されたユーザーパスワードは、新しい &lt;code&gt;PasswordAuthentication&lt;/code&gt; オブジェクトに格納される前に複製されます。</target>
        </trans-unit>
        <trans-unit id="8a8c5aba5fc2532c8859fbda2e23acb653b9d28c" translate="yes" xml:space="preserve">
          <source>Note that the guarantees of the &lt;code&gt;compareAndSet&lt;/code&gt; method in this class are weaker than in other atomic classes. Because this class cannot ensure that all uses of the field are appropriate for purposes of atomic access, it can guarantee atomicity only with respect to other invocations of &lt;code&gt;compareAndSet&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; on the same updater.</source>
          <target state="translated">このクラスの &lt;code&gt;compareAndSet&lt;/code&gt; メソッドの保証は、他のアトミッククラスよりも弱いことに注意してください。このクラスは、フィールドのすべての使用は、アトミックアクセスの目的のために適切であることを確認することができないので、それが唯一の他の呼び出しに関しては、原子性を保証できる &lt;code&gt;compareAndSet&lt;/code&gt; と &lt;code&gt;set&lt;/code&gt; 同じアップデータで。</target>
        </trans-unit>
        <trans-unit id="b804b647329bdff8f758509b4d8f13c3b9079097" translate="yes" xml:space="preserve">
          <source>Note that the hash code changes if the set of bits is altered.</source>
          <target state="translated">ビットのセットが変更されるとハッシュコードが変更されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="258c33c886c5d29594915bd1f976580525b30f2e" translate="yes" xml:space="preserve">
          <source>Note that the helper method is always invoked with all ancestors up to the &quot;closest non-removed ancestor&quot; locked.</source>
          <target state="translated">ヘルパーメソッドは常に &quot;最も近い非削除先祖 &quot;までのすべての先祖がロックされた状態で呼び出されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3ef91b3470959891a41c7245d3f844ec5afad75e" translate="yes" xml:space="preserve">
          <source>Note that the identity of a &lt;code&gt;Name&lt;/code&gt; is a function both of its content in terms of a sequence of characters as well as the implementation which created it.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; のIDは、文字シーケンスに関するコンテンツと、それを作成した実装の両方の関数であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="05ba6d97e3f33ed432996a46f57b9d3bd3038782" translate="yes" xml:space="preserve">
          <source>Note that the identity of an element involves implicit state not directly accessible from the element's methods, including state about the presence of unrelated types. Element objects created by different implementations of these interfaces should</source>
          <target state="translated">要素の同一性には、要素のメソッドから直接アクセスできない暗黙の状態(無関係な型の存在に関する状態を含む)が含まれることに注意してください。これらのインタフェースの異なる実装によって作成された要素オブジェクトは</target>
        </trans-unit>
        <trans-unit id="f3b5901a8c579a9ef06c950615f94f36152d1902" translate="yes" xml:space="preserve">
          <source>Note that the implementations of these methods are inefficient, so they are usually overridden with more efficient toolkit-specific implementations.</source>
          <target state="translated">これらのメソッドの実装は非効率なので、通常はより効率的なツールキット固有の実装でオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="a2329d90263935f0406de753b625d6727ab1ca6a" translate="yes" xml:space="preserve">
          <source>Note that the index represents the i-th selected child, which is different from the i-th child.</source>
          <target state="translated">インデックスは、i 番目に選択された子とは異なる i 番目の子を表していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6e30b802cf97843092ae3b7a5b0cae6a1163a62c" translate="yes" xml:space="preserve">
          <source>Note that the intermediate values, which are always in premultiplied form, would only allow the integer red component to be either 0x00 or 0x01. When we try to store this result back into a destination that is not premultiplied, dividing out the alpha will give us very few choices for the non-premultiplied red value. In this case an implementation that performs the math in integer space without shortcuts is likely to end up with the final pixel values of:</source>
          <target state="translated">中間値は常に前置された形式であるため、赤の整数成分は 0x00 または 0x01 のどちらかにしかならないことに注意してください。この結果を予積されていない格納先に格納しようとすると、アルファを除算すると、予積されていない赤い値の選択肢は非常に少なくなります。この場合、ショートカットを使わずに整数空間で計算を行う実装では、最終的なピクセル値は</target>
        </trans-unit>
        <trans-unit id="229fc4bfd58116957da0dab64f4bc26e0a0bc97b" translate="yes" xml:space="preserve">
          <source>Note that the iterator returned by this method will throw an &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; in response to its &lt;code&gt;remove&lt;/code&gt; method unless the list's &lt;code&gt;remove(int)&lt;/code&gt; method is overridden.</source>
          <target state="translated">リストの &lt;code&gt;remove(int)&lt;/code&gt; メソッドがオーバーライドされない限り、このメソッドによって返されるイテレータは、その &lt;code&gt;remove&lt;/code&gt; メソッドに応答して&lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="ff9125628bfea09fc35d842b223dd7f7041ea321" translate="yes" xml:space="preserve">
          <source>Note that the lack of an AuthenticationException does not mean that the failure was not due to an authentication error. A SASL mechanism implementation might throw the more general SaslException instead of AuthenticationException if it is unable to determine the nature of the failure, or if does not want to disclose the nature of the failure, for example, due to security reasons.</source>
          <target state="translated">AuthenticationException がないからといって、失敗が認証エラーによるものではないことに注意してください。SASL メカニズムの実装では、失敗の性質を判断できなかったり、 セキュリティ上の理由などで失敗の性質を公開したくない場合は、 AuthenticationException の代わりに、より一般的な SaslException を投げるかもしれません。</target>
        </trans-unit>
        <trans-unit id="c73f10a6be0d5219ce292432d09603a8ed3c17ab" translate="yes" xml:space="preserve">
          <source>Note that the list in the example shown was created with four visible rows. Once the list has been created, the number of visible rows cannot be changed. A default &lt;code&gt;List&lt;/code&gt; is created with four rows, so that &lt;code&gt;lst = new List()&lt;/code&gt; is equivalent to &lt;code&gt;list = new List(4, false)&lt;/code&gt;.</source>
          <target state="translated">Note that the list in the example shown was created with four visible rows. Once the list has been created, the number of visible rows cannot be changed. A default &lt;code&gt;List&lt;/code&gt; is created with four rows, so that &lt;code&gt;lst = new List()&lt;/code&gt; is equivalent to &lt;code&gt;list = new List(4, false)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f1f03809857ac1de5284b44a53caaae867a9f93" translate="yes" xml:space="preserve">
          <source>Note that the list iterator returned by this implementation will throw an &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; in response to its &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt; and &lt;code&gt;add&lt;/code&gt; methods unless the list's &lt;code&gt;remove(int)&lt;/code&gt;, &lt;code&gt;set(int, E)&lt;/code&gt;, and &lt;code&gt;add(int, E)&lt;/code&gt; methods are overridden.</source>
          <target state="translated">この実装が返すリスト反復子は、リストの &lt;code&gt;remove(int)&lt;/code&gt; 、 &lt;code&gt;set(int, E)&lt;/code&gt; 、および &lt;code&gt;add(int, E)&lt;/code&gt; メソッドがオーバーライドされない限り、その &lt;code&gt;remove&lt;/code&gt; 、 &lt;code&gt;set&lt;/code&gt; 、および &lt;code&gt;add&lt;/code&gt; メソッドに応答して&lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;をスローすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="17eb1c72aa5ddca414f02eb29d9bc096f0e3d5a3" translate="yes" xml:space="preserve">
          <source>Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../../../../../../java.base/java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../../../../../../java.base/java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="83929de1a909f2fb9df2da20c5d783d12ab4c1e3" translate="yes" xml:space="preserve">
          <source>Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../../../../../java.base/java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../../../../../java.base/java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="012d9303710def6228cc8ab3d3e6f2932a16ab21" translate="yes" xml:space="preserve">
          <source>Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../../../../java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../../../../java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="10129b77e42f81a6268ee0a21cc2420cef62a225" translate="yes" xml:space="preserve">
          <source>Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../../../../java/security/security#getProviders--&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">登録済みプロバイダーのリストは、&lt;a href=&quot;../../../../java/security/security#getProviders--&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;メソッドを介して取得できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="cf6b66d8a188283cff0a6d146c69eba17aa08f86" translate="yes" xml:space="preserve">
          <source>Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../../../java.base/java/security/security#getProviders()&quot;&gt;Security.getProviders()&lt;/a&gt; method.</source>
          <target state="translated">Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../../../java.base/java/security/security#getProviders()&quot;&gt;Security.getProviders()&lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="10926b00a637451690eb0c9fe0e9ee59eb256998" translate="yes" xml:space="preserve">
          <source>Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../../../java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../../../java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="204a2be22f7f82158aecee05d7924d8f4b87f8fc" translate="yes" xml:space="preserve">
          <source>Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../../../java/security/security#getProviders--&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">登録済みプロバイダーのリストは、&lt;a href=&quot;../../../java/security/security#getProviders--&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;メソッドを介して取得できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b0b3b371c08a4eeb47d328b984affb68887daad7" translate="yes" xml:space="preserve">
          <source>Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../../java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../../java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="00593fdf7ef77ce3d513e5cc4b947b0eb66f4945" translate="yes" xml:space="preserve">
          <source>Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../../java/security/security#getProviders--&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">登録済みプロバイダーのリストは、&lt;a href=&quot;../../java/security/security#getProviders--&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;メソッドを介して取得できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="924275ee694c5f6dac362a944997e4455f44df30" translate="yes" xml:space="preserve">
          <source>Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="c8317a604eddf777cc96e78b5ccb62bd7d32404e" translate="yes" xml:space="preserve">
          <source>Note that the list of registered providers may be retrieved via the &lt;a href=&quot;../security#getProviders--&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">登録済みプロバイダーのリストは、&lt;a href=&quot;../security#getProviders--&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;メソッドを介して取得できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d243e984bb629973c73e8177810560cd4540d21c" translate="yes" xml:space="preserve">
          <source>Note that the list of registered providers may be retrieved via the &lt;a href=&quot;security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Note that the list of registered providers may be retrieved via the &lt;a href=&quot;security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="7f835ba60c148664984eeda8b8c760c1b3abd491" translate="yes" xml:space="preserve">
          <source>Note that the list of registered providers may be retrieved via the &lt;a href=&quot;security#getProviders--&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">登録済みプロバイダーのリストは、&lt;a href=&quot;security#getProviders--&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;メソッドを介して取得できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2a49d08b5d064cb200a01555ea2ace93a8f701f9" translate="yes" xml:space="preserve">
          <source>Note that the localized pattern is looked up lazily. This &lt;code&gt;DateTimeFormatter&lt;/code&gt; holds the style required and the locale, looking up the pattern required on demand.</source>
          <target state="translated">ローカライズされたパターンは遅延検索されることに注意してください。この &lt;code&gt;DateTimeFormatter&lt;/code&gt; は、必要なスタイルとロケールを保持し、必要に応じて必要なパターンを検索します。</target>
        </trans-unit>
        <trans-unit id="26388d49767254efc73f1c3daeae745601a775a1" translate="yes" xml:space="preserve">
          <source>Note that the locator will return correct information only during the invocation SAX event callbacks after &lt;a href=&quot;#startDocument()&quot;&gt;&lt;code&gt;startDocument&lt;/code&gt;&lt;/a&gt; returns and before &lt;a href=&quot;#endDocument()&quot;&gt;&lt;code&gt;endDocument&lt;/code&gt;&lt;/a&gt; is called. The application should not attempt to use it at any other time.</source>
          <target state="translated">Note that the locator will return correct information only during the invocation SAX event callbacks after &lt;a href=&quot;#startDocument()&quot;&gt; &lt;code&gt;startDocument&lt;/code&gt; &lt;/a&gt; returns and before &lt;a href=&quot;#endDocument()&quot;&gt; &lt;code&gt;endDocument&lt;/code&gt; &lt;/a&gt; is called. The application should not attempt to use it at any other time.</target>
        </trans-unit>
        <trans-unit id="cc6ae65cf6a2c6b690528b4be599e5bed47ef7e9" translate="yes" xml:space="preserve">
          <source>Note that the locator will return correct information only during the invocation of the events in this interface. The application should not attempt to use it at any other time.</source>
          <target state="translated">ロケータが正しい情報を返すのは、このインタフェース内のイベントの呼び出しの間だけであることに注意してください。アプリケーションは、それ以外の時間にこれを使用しようとしてはいけません。</target>
        </trans-unit>
        <trans-unit id="e52d303130e845867576cea312679b44a28ef742" translate="yes" xml:space="preserve">
          <source>Note that the media white point tag in an ICC profile is not the same as the device white point. The media white point tag is expressed in PCS values and is used to represent the difference between the XYZ of device illuminant and the XYZ of the device media when measured under that illuminant. The device white point is expressed as the device XYZ values corresponding to white displayed on the device. For example, displaying the RGB color (1.0, 1.0, 1.0) on an sRGB device will result in a measured device XYZ value of D65. This will not be the same as the media white point tag XYZ value in the ICC profile for an sRGB device.</source>
          <target state="translated">ICC プロファイルのメディア白点タグは、デバイス白点と同じではないことに注意してください。メディア白点タグは PCS 値で表され、その照明の下で測定したときのデバイス照明の XYZ とデバイスメディアの XYZ との差を表すために使用されます。デバイス白点は、デバイスに表示されている白に対応するデバイスXYZ値で表される。例えば、sRGBデバイス上にRGB色(1.これは、sRGBデバイスのICCプロファイルのメディア白点タグのXYZ値とは異なります。</target>
        </trans-unit>
        <trans-unit id="4b8f59a6194b868cadeeb6447b52ba7208396da7" translate="yes" xml:space="preserve">
          <source>Note that the messages &quot;printed&quot; by methods in this interface may or may not appear as textual output to a location like &lt;a href=&quot;../../../../java.base/java/lang/system#out&quot;&gt;&lt;code&gt;System.out&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/lang/system#err&quot;&gt;&lt;code&gt;System.err&lt;/code&gt;&lt;/a&gt;. Implementations may choose to present this information in a different fashion, such as messages in a window.</source>
          <target state="translated">Note that the messages &quot;printed&quot; by methods in this interface may or may not appear as textual output to a location like &lt;a href=&quot;../../../../java.base/java/lang/system#out&quot;&gt; &lt;code&gt;System.out&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/lang/system#err&quot;&gt; &lt;code&gt;System.err&lt;/code&gt; &lt;/a&gt;. Implementations may choose to present this information in a different fashion, such as messages in a window.</target>
        </trans-unit>
        <trans-unit id="67933009b5727550e61b88131764b34c42222511" translate="yes" xml:space="preserve">
          <source>Note that the messages &quot;printed&quot; by methods in this interface may or may not appear as textual output to a location like &lt;a href=&quot;../../../java/lang/system#out&quot;&gt;&lt;code&gt;System.out&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../java/lang/system#err&quot;&gt;&lt;code&gt;System.err&lt;/code&gt;&lt;/a&gt;. Implementations may choose to present this information in a different fashion, such as messages in a window.</source>
          <target state="translated">このインターフェースのメソッドによって「出力」されるメッセージは、&lt;a href=&quot;../../../java/lang/system#out&quot;&gt; &lt;code&gt;System.out&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../../../java/lang/system#err&quot;&gt; &lt;code&gt;System.err&lt;/code&gt; &lt;/a&gt;などの場所へのテキスト出力として表示される場合と表示されない場合があります。実装では、ウィンドウ内のメッセージなど、別の方法でこの情報を提示することを選択できます。</target>
        </trans-unit>
        <trans-unit id="f0f9135ac947c073e6eff42971b888a63a119961" translate="yes" xml:space="preserve">
          <source>Note that the name constraints byte array supplied here is cloned to protect against subsequent modifications.</source>
          <target state="translated">ここで与えられた名前制約バイト配列は、後続の変更から保護するためにクローン化されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e2991014ac8dfac6b89fbdf6e61d82d4f89c0766" translate="yes" xml:space="preserve">
          <source>Note that the name constraints byte array supplied is cloned to protect against subsequent modifications.</source>
          <target state="translated">与えられた名前制約バイト配列は、その後の変更から保護するためにクローン化されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="988ca2f219cbe734841c9e53cfd0824a297c6a15" translate="yes" xml:space="preserve">
          <source>Note that the naming convention for this interface reflects the relationship between the line and its mixer. From the perspective of an application, a source data line may act as a target for audio data.</source>
          <target state="translated">このインターフェースの命名規則は、ラインとミキサーの関係を反映しています。アプリケーションの観点からは、ソースデータラインがオーディオデータのターゲットとして機能することがあります。</target>
        </trans-unit>
        <trans-unit id="288339971a575eedd16610ea5ca3b9faa2540bb1" translate="yes" xml:space="preserve">
          <source>Note that the naming convention for this interface reflects the relationship between the line and its mixer. From the perspective of an application, a target data line may act as a source for audio data.</source>
          <target state="translated">このインターフェースの命名規則は、ラインとミキサーの関係を反映しています。アプリケーションの観点からは、ターゲットデータラインがオーディオデータのソースとして機能する場合があります。</target>
        </trans-unit>
        <trans-unit id="961ebafe62b074003933c2d8bfa9a9efc7d3ffde" translate="yes" xml:space="preserve">
          <source>Note that the native platform may delay presenting the splash screen native window on the screen. The return value of &lt;code&gt;true&lt;/code&gt; for this method only guarantees that the conditions to hide the splash screen window have not occurred yet.</source>
          <target state="translated">Note that the native platform may delay presenting the splash screen native window on the screen. The return value of &lt;code&gt;true&lt;/code&gt; for this method only guarantees that the conditions to hide the splash screen window have not occurred yet.</target>
        </trans-unit>
        <trans-unit id="caa52462b541aabea83c601148bfe9c61c81299b" translate="yes" xml:space="preserve">
          <source>Note that the notation name corresponds to a notation reported by the &lt;a href=&quot;#notationDecl(java.lang.String,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;notationDecl&lt;/code&gt;&lt;/a&gt; event. It is up to the application to record the entity for later reference, if necessary; unparsed entities may appear as attribute values.</source>
          <target state="translated">Note that the notation name corresponds to a notation reported by the &lt;a href=&quot;#notationDecl(java.lang.String,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;notationDecl&lt;/code&gt; &lt;/a&gt; event. It is up to the application to record the entity for later reference, if necessary; unparsed entities may appear as attribute values.</target>
        </trans-unit>
        <trans-unit id="8d44e80bc6f958b1b209aebde28e3986d985541c" translate="yes" xml:space="preserve">
          <source>Note that the number returned is a snapshot of how much memory is available; some images may still have problems being allocated into that memory. For example, depending on operating system, driver, memory configuration, and thread situations, the full extent of the size reported may not be available for a given image. There are further inquiry methods on the &lt;a href=&quot;imagecapabilities&quot;&gt;&lt;code&gt;ImageCapabilities&lt;/code&gt;&lt;/a&gt; object associated with a VolatileImage that can be used to determine whether a particular VolatileImage has been created in accelerated memory.</source>
          <target state="translated">Note that the number returned is a snapshot of how much memory is available; some images may still have problems being allocated into that memory. For example, depending on operating system, driver, memory configuration, and thread situations, the full extent of the size reported may not be available for a given image. There are further inquiry methods on the &lt;a href=&quot;imagecapabilities&quot;&gt; &lt;code&gt;ImageCapabilities&lt;/code&gt; &lt;/a&gt; object associated with a VolatileImage that can be used to determine whether a particular VolatileImage has been created in accelerated memory.</target>
        </trans-unit>
        <trans-unit id="478dc80354ae2071dceabdec088f6095cb9b0bd3" translate="yes" xml:space="preserve">
          <source>Note that the numeric day-of-week representation differs from the ISO 8601 standard, and that the &lt;code&gt;weekOfYear&lt;/code&gt; numbering is compatible with the standard when &lt;code&gt;
 getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;MONDAY&lt;/code&gt; and &lt;code&gt;
 getMinimalDaysInFirstWeek()&lt;/code&gt; is 4.</source>
          <target state="translated">Note that the numeric day-of-week representation differs from the ISO 8601 standard, and that the &lt;code&gt;weekOfYear&lt;/code&gt; numbering is compatible with the standard when &lt;code&gt; getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;MONDAY&lt;/code&gt; and &lt;code&gt; getMinimalDaysInFirstWeek()&lt;/code&gt; is 4.</target>
        </trans-unit>
        <trans-unit id="156c436788f24f5adb474e0551c7880f5d168c3b" translate="yes" xml:space="preserve">
          <source>Note that the numeric day-of-week representation differs from the ISO 8601 standard, and that the &lt;code&gt;weekOfYear&lt;/code&gt; numbering is compatible with the standard when &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;MONDAY&lt;/code&gt; and &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; is 4.</source>
          <target state="translated">数値の曜日表現はISO 8601標準とは異なり、また、 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; が &lt;code&gt;MONDAY&lt;/code&gt; で &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; が4の場合、 &lt;code&gt;weekOfYear&lt;/code&gt; 番号付けは標準と互換性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ded8859876c1b1125e6f346cb280192c0d32a59b" translate="yes" xml:space="preserve">
          <source>Note that the order of the specified proxy interfaces is significant: two requests for a proxy class with the same combination of interfaces but in a different order will result in two distinct proxy classes.</source>
          <target state="translated">指定されたプロキシインターフェイスの順番は重要であることに注意すること。 同じ組み合わせのインターフェイスを持つプロキシクラスに 対する2つのリクエストでも、順番が異なる場合、2つの異なるプロキシクラスに なる。</target>
        </trans-unit>
        <trans-unit id="e5b9178f245231baa4452e11b727dfafc65ffdf5" translate="yes" xml:space="preserve">
          <source>Note that the ordering maintained by a set (whether or not an explicit comparator is provided) must be</source>
          <target state="translated">集合によって維持される順序は(明示的な比較器が提供されているかどうかに関わらず)、次のようにしなければならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="9e198b477df4c65dd838c69d955961384e32f7f2" translate="yes" xml:space="preserve">
          <source>Note that the ordering maintained by a sorted map (whether or not an explicit comparator is provided) must be &lt;em&gt;consistent with equals&lt;/em&gt; if the sorted map is to correctly implement the &lt;code&gt;Map&lt;/code&gt; interface. (See the &lt;code&gt;Comparable&lt;/code&gt; interface or &lt;code&gt;Comparator&lt;/code&gt; interface for a precise definition of &lt;em&gt;consistent with equals&lt;/em&gt;.) This is so because the &lt;code&gt;Map&lt;/code&gt; interface is defined in terms of the &lt;code&gt;equals&lt;/code&gt; operation, but a sorted map performs all key comparisons using its &lt;code&gt;compareTo&lt;/code&gt; (or &lt;code&gt;compare&lt;/code&gt;) method, so two keys that are deemed equal by this method are, from the standpoint of the sorted map, equal. The behavior of a tree map &lt;em&gt;is&lt;/em&gt; well-defined even if its ordering is inconsistent with equals; it just fails to obey the general contract of the &lt;code&gt;Map&lt;/code&gt; interface.</source>
          <target state="translated">ソートされたマップが &lt;code&gt;Map&lt;/code&gt; インターフェースを正しく実装するためには、ソートされたマップによって維持される順序付け（明示的なコンパレーターが提供されているかどうかにかかわらず）&lt;em&gt;は、equals&lt;/em&gt;と&lt;em&gt;一致している&lt;/em&gt;必要があります。 （&lt;em&gt;equals&lt;/em&gt;との&lt;em&gt;一貫性の&lt;/em&gt;正確な定義については、 &lt;code&gt;Comparable&lt;/code&gt; インターフェースまたは &lt;code&gt;Comparator&lt;/code&gt; インターフェースを参照してください。）これは、 &lt;code&gt;Map&lt;/code&gt; インターフェースが &lt;code&gt;equals&lt;/code&gt; 操作に関して定義されているためですが、ソートされたマップは、 &lt;code&gt;compareTo&lt;/code&gt; （または &lt;code&gt;compare&lt;/code&gt; ）メソッドを使用してすべてのキー比較を実行しますなので、このメソッドで等しいと見なされる2つのキーは、ソートされたマップの観点からは等しいです。ツリーマップの動作&lt;em&gt;&lt;/em&gt;&lt;em&gt;で&lt;/em&gt;、その順序付けがequalsと一貫性がない場合でも明確に定義されました。 &lt;code&gt;Map&lt;/code&gt; インターフェースの一般的な規約に従わないだけです。</target>
        </trans-unit>
        <trans-unit id="199e68b39f22422dbca48a75470d62097940952d" translate="yes" xml:space="preserve">
          <source>Note that the ordering maintained by a sorted set (whether or not an explicit comparator is provided) must be</source>
          <target state="translated">ソートされた集合によって維持される順序は(明示的な比較器が提供されているかどうかに関わらず),次のようにしなければならないことに注意してください.</target>
        </trans-unit>
        <trans-unit id="e9e22df42ea44a2a29df28280edcc58bd7eae8fb" translate="yes" xml:space="preserve">
          <source>Note that the ordering maintained by a tree map, like any sorted map, and whether or not an explicit comparator is provided, must be &lt;em&gt;consistent with &lt;code&gt;equals&lt;/code&gt;&lt;/em&gt; if this sorted map is to correctly implement the &lt;code&gt;Map&lt;/code&gt; interface. (See &lt;code&gt;Comparable&lt;/code&gt; or &lt;code&gt;Comparator&lt;/code&gt; for a precise definition of &lt;em&gt;consistent with equals&lt;/em&gt;.) This is so because the &lt;code&gt;Map&lt;/code&gt; interface is defined in terms of the &lt;code&gt;equals&lt;/code&gt; operation, but a sorted map performs all key comparisons using its &lt;code&gt;
 compareTo&lt;/code&gt; (or &lt;code&gt;compare&lt;/code&gt;) method, so two keys that are deemed equal by this method are, from the standpoint of the sorted map, equal. The behavior of a sorted map &lt;em&gt;is&lt;/em&gt; well-defined even if its ordering is inconsistent with &lt;code&gt;equals&lt;/code&gt;; it just fails to obey the general contract of the &lt;code&gt;Map&lt;/code&gt; interface.</source>
          <target state="translated">Note that the ordering maintained by a tree map, like any sorted map, and whether or not an explicit comparator is provided, must be &lt;em&gt;consistent with &lt;code&gt;equals&lt;/code&gt; &lt;/em&gt; if this sorted map is to correctly implement the &lt;code&gt;Map&lt;/code&gt; interface. (See &lt;code&gt;Comparable&lt;/code&gt; or &lt;code&gt;Comparator&lt;/code&gt; for a precise definition of &lt;em&gt;consistent with equals&lt;/em&gt;.) This is so because the &lt;code&gt;Map&lt;/code&gt; interface is defined in terms of the &lt;code&gt;equals&lt;/code&gt; operation, but a sorted map performs all key comparisons using its &lt;code&gt; compareTo&lt;/code&gt; (or &lt;code&gt;compare&lt;/code&gt; ) method, so two keys that are deemed equal by this method are, from the standpoint of the sorted map, equal. The behavior of a sorted map &lt;em&gt;is&lt;/em&gt; well-defined even if its ordering is inconsistent with &lt;code&gt;equals&lt;/code&gt; ; it just fails to obey the general contract of the &lt;code&gt;Map&lt;/code&gt; interface.</target>
        </trans-unit>
        <trans-unit id="875a2b57c1f5ecdeb4903f8f8db692901646f720" translate="yes" xml:space="preserve">
          <source>Note that the ordering maintained by a tree map, like any sorted map, and whether or not an explicit comparator is provided, must be &lt;em&gt;consistent with &lt;code&gt;equals&lt;/code&gt;&lt;/em&gt; if this sorted map is to correctly implement the &lt;code&gt;Map&lt;/code&gt; interface. (See &lt;code&gt;Comparable&lt;/code&gt; or &lt;code&gt;Comparator&lt;/code&gt; for a precise definition of &lt;em&gt;consistent with equals&lt;/em&gt;.) This is so because the &lt;code&gt;Map&lt;/code&gt; interface is defined in terms of the &lt;code&gt;equals&lt;/code&gt; operation, but a sorted map performs all key comparisons using its &lt;code&gt;compareTo&lt;/code&gt; (or &lt;code&gt;compare&lt;/code&gt;) method, so two keys that are deemed equal by this method are, from the standpoint of the sorted map, equal. The behavior of a sorted map &lt;em&gt;is&lt;/em&gt; well-defined even if its ordering is inconsistent with &lt;code&gt;equals&lt;/code&gt;; it just fails to obey the general contract of the &lt;code&gt;Map&lt;/code&gt; interface.</source>
          <target state="translated">このソートマップが &lt;code&gt;Map&lt;/code&gt; インターフェースを正しく実装するためには、ソートマップと同様に、ツリーマップによって維持される順序、および明示的なコンパレーターが提供されているかどうかは、&lt;em&gt; &lt;code&gt;equals&lt;/code&gt; &lt;/em&gt;と&lt;em&gt;一致している&lt;/em&gt;必要があります。（&lt;em&gt;equals&lt;/em&gt;との&lt;em&gt;一貫性の&lt;/em&gt;正確な定義については、 &lt;code&gt;Comparable&lt;/code&gt; または &lt;code&gt;Comparator&lt;/code&gt; を参照してください。）これは、 &lt;code&gt;Map&lt;/code&gt; インターフェースが &lt;code&gt;equals&lt;/code&gt; 操作に関して定義されているためですが、ソートされたマップは、 &lt;code&gt;compareTo&lt;/code&gt; （または &lt;code&gt;compare&lt;/code&gt; &lt;em&gt;&lt;/em&gt;）メソッドなので、このメソッドによって等しいと見なされる2つのキーは、ソートされたマップの観点からは等しいです。ソートマップの動作が&lt;em&gt;ある&lt;/em&gt;その順序はと一貫性がない場合でも明確に定義された &lt;code&gt;equals&lt;/code&gt; ; &lt;code&gt;Map&lt;/code&gt; インターフェースの一般的な規約に従わないだけです。</target>
        </trans-unit>
        <trans-unit id="b49a89fe8fa0a7c36fa24d531ff00e285ec132b7" translate="yes" xml:space="preserve">
          <source>Note that the other constructors of &lt;code&gt;Throwable&lt;/code&gt; treat suppression as being enabled and the stack trace as being writable. Subclasses of &lt;code&gt;Throwable&lt;/code&gt; should document any conditions under which suppression is disabled and document conditions under which the stack trace is not writable. Disabling of suppression should only occur in exceptional circumstances where special requirements exist, such as a virtual machine reusing exception objects under low-memory situations. Circumstances where a given exception object is repeatedly caught and rethrown, such as to implement control flow between two sub-systems, is another situation where immutable throwable objects would be appropriate.</source>
          <target state="translated">&lt;code&gt;Throwable&lt;/code&gt; の他のコンストラクターは、抑制を有効にして、スタックトレースを書き込み可能として扱います。 &lt;code&gt;Throwable&lt;/code&gt; のサブクラスは、抑制が無効になっている条件と、スタックトレースが書き込み不可の条件を文書化する必要があります。抑制の無効化は、メモリ不足の状況で仮想マシンが例外オブジェクトを再利用するなど、特別な要件が存在する例外的な状況でのみ発生します。 2つのサブシステム間の制御フローを実装するなど、特定の例外オブジェクトが繰り返しキャッチおよび再スローされる状況は、不変のスロー可能なオブジェクトが適切である別の状況です。</target>
        </trans-unit>
        <trans-unit id="9a0a16374bd06c1364d484f2843a1edc0119bea4" translate="yes" xml:space="preserve">
          <source>Note that the parameter type lists &lt;code&gt;(V...)&lt;/code&gt; and &lt;code&gt;(A...)&lt;/code&gt; have been expanded to their full length, even though individual clause functions may neglect to take them all. As noted above, missing parameters are filled in as if by &lt;a href=&quot;#dropArgumentsToMatch(java.lang.invoke.MethodHandle,int,java.util.List,int)&quot;&gt;&lt;code&gt;dropArgumentsToMatch(MethodHandle, int, List, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Note that the parameter type lists &lt;code&gt;(V...)&lt;/code&gt; and &lt;code&gt;(A...)&lt;/code&gt; have been expanded to their full length, even though individual clause functions may neglect to take them all. As noted above, missing parameters are filled in as if by &lt;a href=&quot;#dropArgumentsToMatch(java.lang.invoke.MethodHandle,int,java.util.List,int)&quot;&gt; &lt;code&gt;dropArgumentsToMatch(MethodHandle, int, List, int)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3d89b562b4b5e1aa1b59ec026c09b7ae3cdf143b" translate="yes" xml:space="preserve">
          <source>Note that the passed &lt;var&gt;delegate&lt;/var&gt; might not be directly the MBeanServerDelegate that was returned by this implementation. It could be, for instance, a new object wrapping the previously returned delegate.</source>
          <target state="translated">渡された &lt;var&gt;delegate&lt;/var&gt; は、この実装によって返されたMBeanServerDelegateであるとは限りません。たとえば、以前に返されたデリゲートをラップする新しいオブジェクトである可能性があります。</target>
        </trans-unit>
        <trans-unit id="25d6d56b3e03ba20e886d0e62e57b3daaa69b5e3" translate="yes" xml:space="preserve">
          <source>Note that the passed &lt;var&gt;delegate&lt;/var&gt; might not be directly the MBeanServerDelegate that was returned by this method. It could be, for instance, a new object wrapping the previously returned object.</source>
          <target state="translated">渡された &lt;var&gt;delegate&lt;/var&gt; は、このメソッドによって返されたMBeanServerDelegateであるとは限りません。たとえば、以前に返されたオブジェクトをラップする新しいオブジェクトである可能性があります。</target>
        </trans-unit>
        <trans-unit id="616efdd09b5e59d66bf9b938ff4ea81918f0b20f" translate="yes" xml:space="preserve">
          <source>Note that the pattern string is similar, but not identical, to &lt;a href=&quot;../../text/simpledateformat&quot;&gt;&lt;code&gt;SimpleDateFormat&lt;/code&gt;&lt;/a&gt;. The pattern string is also similar, but not identical, to that defined by the Unicode Common Locale Data Repository (CLDR/LDML). Pattern letters 'X' and 'u' are aligned with Unicode CLDR/LDML. By contrast, &lt;code&gt;SimpleDateFormat&lt;/code&gt; uses 'u' for the numeric day of week. Pattern letters 'y' and 'Y' parse years of two digits and more than 4 digits differently. Pattern letters 'n', 'A', 'N', and 'p' are added. Number types will reject large numbers.</source>
          <target state="translated">パターン文字列は&lt;a href=&quot;../../text/simpledateformat&quot;&gt; &lt;code&gt;SimpleDateFormat&lt;/code&gt; &lt;/a&gt;と似ていますが、同一ではないことに注意してください。パターン文字列も、Unicode Common Locale Data Repository（CLDR / LDML）で定義されているものと似ていますが、同じではありません。パターン文字「X」と「u」は、Unicode CLDR / LDMLに合わせて配置されています。対照的に、 &lt;code&gt;SimpleDateFormat&lt;/code&gt; は数値の曜日に「u」を使用します。パターン文字「y」と「Y」は、2桁の年と4桁を超える年の解析方法が異なります。パターン文字「n」、「A」、「N」、および「p」が追加されます。数値型は大きな数値を拒否します。</target>
        </trans-unit>
        <trans-unit id="7e0a964b958122f28c1b26edc36fc68bc446c6d6" translate="yes" xml:space="preserve">
          <source>Note that the peer may also request a session renegotiation with this &lt;code&gt;SSLEngine&lt;/code&gt; by sending the appropriate session renegotiate handshake message.</source>
          <target state="translated">ピアは、適切なセッション再ネゴシエーションハンドシェイクメッセージを送信することにより、この &lt;code&gt;SSLEngine&lt;/code&gt; とのセッション再ネゴシエーションを要求することもあります。</target>
        </trans-unit>
        <trans-unit id="895a126c3269573a0eee9a955d709271fbfa8d7f" translate="yes" xml:space="preserve">
          <source>Note that the result of &lt;code&gt;readBits(32)&lt;/code&gt; may thus not be equal to that of &lt;code&gt;readInt()&lt;/code&gt; if a reverse network byte order is being used (i.e., &lt;code&gt;getByteOrder() == false&lt;/code&gt;).</source>
          <target state="translated">逆のネットワークバイトオーダーが使用されている場合（つまり、 &lt;code&gt;getByteOrder() == false&lt;/code&gt; ）、 &lt;code&gt;readBits(32)&lt;/code&gt; の結果は &lt;code&gt;readInt()&lt;/code&gt; の結果と等しくない可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5164f3c20d1567cd2d890e8869e17807a5d1ed8c" translate="yes" xml:space="preserve">
          <source>Note that the result of this method is immediately outdated, there is no guarantee that a subsequent attempt to execute the file will succeed (or even that it will access the same file). Care should be taken when using this method in security sensitive applications.</source>
          <target state="translated">このメソッドの結果はすぐに古くなってしまうので、後に続くファイルの実行が成功する保証はないことに注意してください (あるいは同じファイルにアクセスできる保証もありません)。この方法をセキュリティ上重要なアプリケーションで使用する場合は注意が必要です。</target>
        </trans-unit>
        <trans-unit id="c5486aacd8f76343dcee4f5c2308c7e2148deab3" translate="yes" xml:space="preserve">
          <source>Note that the result of this method is immediately outdated, there is no guarantee that a subsequent attempt to open the file for reading will succeed (or even that it will access the same file). Care should be taken when using this method in security sensitive applications.</source>
          <target state="translated">このメソッドの結果はすぐに古いものになってしまうので、後からファイルを開いて読み込んでも成功する保証はないことに注意してください (あるいは同じファイルにアクセスできる保証もありません)。この方法をセキュリティに敏感なアプリケーションで使用する場合は注意が必要です。</target>
        </trans-unit>
        <trans-unit id="98a01f5f039ff94dd1fb418058665f9f4c4e9292" translate="yes" xml:space="preserve">
          <source>Note that the result of this method is immediately outdated. If this method indicates the file exists then there is no guarantee that a subsequence access will succeed. Care should be taken when using this method in security sensitive applications.</source>
          <target state="translated">このメソッドの結果は直ちに古いものであることに注意してください。このメソッドがファイルが存在することを示している場合は、そのファイルに続くアクセスが成功する保証はありません。このメソッドをセキュリティに敏感なアプリケーションで使用する場合は注意が必要です。</target>
        </trans-unit>
        <trans-unit id="034c5b83063bdd90fbcfb07a7d6733ff5becc2fd" translate="yes" xml:space="preserve">
          <source>Note that the result of this method is immediately outdated. If this method indicates the file exists then there is no guarantee that a subsequent access will succeed. Care should be taken when using this method in security sensitive applications.</source>
          <target state="translated">このメソッドの結果は直ちに古いものであることに注意してください。このメソッドがファイルの存在を示した場合、その後のアクセスが成功する保証はありません。セキュリティに敏感なアプリケーションでこのメソッドを使用する場合は注意が必要です。</target>
        </trans-unit>
        <trans-unit id="063f9f6459bb715bee62b476cbbbb311b5fc5400" translate="yes" xml:space="preserve">
          <source>Note that the result only describes the minimum and maximum valid values and it is important not to read too much into them. For example, there could be values within the range that are invalid for the field.</source>
          <target state="translated">結果には有効な最小値と最大値が記載されているだけであり、それらをあまり読み込まないようにすることが重要であることに注意してください。例えば、フィールドに対して無効な値が範囲内に存在する可能性があります。</target>
        </trans-unit>
        <trans-unit id="a0901c71ef6d3aef58ba9bcbd542f94c540f8806" translate="yes" xml:space="preserve">
          <source>Note that the results returned by the object will be valid only during the scope of each callback method: the application will receive unpredictable results if it attempts to use the locator at any other time, or after parsing completes.</source>
          <target state="translated">オブジェクトによって返される結果は、各コールバックメソッドのスコープ内でのみ有効であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="69baa900bee1487b8c4753c6e2ab43871f7fe469" translate="yes" xml:space="preserve">
          <source>Note that the returned executable pathname and the arguments may be truncated on some platforms due to system limitations.</source>
          <target state="translated">返される実行可能パス名と引数は、システムの制限のため、プラットフォームによっては切り捨てられることがあることに注意してください。</target>
        </trans-unit>
        <trans-unit id="50d3658e064c37097f7278405648c7436c70d8ea" translate="yes" xml:space="preserve">
          <source>Note that the reverse operation may result in producing surrogate pairs that were unpaired low-surrogates and high-surrogates before the operation. For example, reversing &quot;\uDC00\uD800&quot; produces &quot;\uD800\uDC00&quot; which is a valid surrogate pair.</source>
          <target state="translated">逆の操作をすると、操作前は対になっていなかった低サロゲートと高サロゲートのサロゲートのペアが 出てくるかもしれないことに注意。例えば、&quot;\uDC00\uD800 &quot;を逆にすると、有効なサロゲート・ペアである &quot;\uD800\uDC00 &quot;が生成される。</target>
        </trans-unit>
        <trans-unit id="e4e13275cdc9d405aa078b15a0e1145e8860cb07" translate="yes" xml:space="preserve">
          <source>Note that the rowHeader is calculated as part of the preferred width and the colHeader is calculated as part of the preferred size.</source>
          <target state="translated">rowHeaderは好ましい幅の一部として計算され、colHeaderは好ましいサイズの一部として計算されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a41eae8474d8f24c456b27413e788c42d49a06d8" translate="yes" xml:space="preserve">
          <source>Note that the saved arguments (&lt;code&gt;a...&lt;/code&gt; in the pseudocode) cannot be modified by execution of the target, and so are passed unchanged from the caller to the cleanup, if it is invoked.</source>
          <target state="translated">Note that the saved arguments ( &lt;code&gt;a...&lt;/code&gt; in the pseudocode) cannot be modified by execution of the target, and so are passed unchanged from the caller to the cleanup, if it is invoked.</target>
        </trans-unit>
        <trans-unit id="52b7cb8a72f12d22f6db9a266b7085c69b8799b8" translate="yes" xml:space="preserve">
          <source>Note that the saved arguments (&lt;code&gt;a...&lt;/code&gt; in the pseudocode) cannot be modified by execution of the target, and so are passed unchanged from the caller to the handler, if the handler is invoked.</source>
          <target state="translated">保存された引数（疑似コードの &lt;code&gt;a...&lt;/code&gt; ）はターゲットの実行によって変更できないため、ハンドラーが呼び出された場合、呼び出し元からハンドラーに変更されずに渡されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="35ac28fb0c33af926b3c96614b59ca95b53bf96d" translate="yes" xml:space="preserve">
          <source>Note that the second parameter tells the DBMS the data type of the value being set to &lt;code&gt;NULL&lt;/code&gt;. Some DBMSs require this information, so it is required in order to make code more portable.</source>
          <target state="translated">Note that the second parameter tells the DBMS the data type of the value being set to &lt;code&gt;NULL&lt;/code&gt; . Some DBMSs require this information, so it is required in order to make code more portable.</target>
        </trans-unit>
        <trans-unit id="4c59fc84e26aa8039886e3c6237e97460faa6515" translate="yes" xml:space="preserve">
          <source>Note that the size of the IV (block size) must be twice the word size. The bytes that constitute the IV are those between &lt;code&gt;iv[0]&lt;/code&gt; and &lt;code&gt;iv[2*(wordSize/8)-1]&lt;/code&gt; inclusive.</source>
          <target state="translated">IVのサイズ（ブロックサイズ）はワードサイズの2倍でなければならないことに注意してください。IVを構成するバイトは、 &lt;code&gt;iv[0]&lt;/code&gt; と &lt;code&gt;iv[2*(wordSize/8)-1]&lt;/code&gt; 間のバイトです。</target>
        </trans-unit>
        <trans-unit id="699ae6a3370d747a9ba38ef57bdd053040288175" translate="yes" xml:space="preserve">
          <source>Note that the source and destination can be the same object.</source>
          <target state="translated">ソースとデスティネーションは同じオブジェクトである可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a690030c09dd08a246f4a078af9b9af019c43774" translate="yes" xml:space="preserve">
          <source>Note that the standard list of cipher suite names may be found in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#jsse-cipher-suite-names&quot;&gt; JSSE Cipher Suite Names&lt;/a&gt; section of the Java Cryptography Architecture Standard Algorithm Name Documentation. Providers may support cipher suite names not found in this list or might not use the recommended name for a certain cipher suite.</source>
          <target state="translated">Note that the standard list of cipher suite names may be found in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#jsse-cipher-suite-names&quot;&gt; JSSE Cipher Suite Names&lt;/a&gt; section of the Java Cryptography Architecture Standard Algorithm Name Documentation. Providers may support cipher suite names not found in this list or might not use the recommended name for a certain cipher suite.</target>
        </trans-unit>
        <trans-unit id="313fa080eea425f5c1ea2994d6e097a4038a67bf" translate="yes" xml:space="preserve">
          <source>Note that the start/endDTD events will appear within the start/endDocument events from ContentHandler and before the first &lt;a href=&quot;../contenthandler#startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)&quot;&gt;&lt;code&gt;startElement&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">Note that the start/endDTD events will appear within the start/endDocument events from ContentHandler and before the first &lt;a href=&quot;../contenthandler#startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)&quot;&gt; &lt;code&gt;startElement&lt;/code&gt; &lt;/a&gt; event.</target>
        </trans-unit>
        <trans-unit id="54e83ad4a1b1d311acafc15f34a16c65ba816fc1" translate="yes" xml:space="preserve">
          <source>Note that the subclass &lt;code&gt;Menu&lt;/code&gt; overrides this behavior and does not send any event to the frame until one of its subitems is selected.</source>
          <target state="translated">Note that the subclass &lt;code&gt;Menu&lt;/code&gt; overrides this behavior and does not send any event to the frame until one of its subitems is selected.</target>
        </trans-unit>
        <trans-unit id="726c3ca85cff8c01c9c25cb65210c4d8df3fb97c" translate="yes" xml:space="preserve">
          <source>Note that the system URI (http://java.sun.com/dtd/preferences.dtd) is</source>
          <target state="translated">システムの URI (http://java.sun.com/dtd/preferences.dtd)は</target>
        </trans-unit>
        <trans-unit id="4ac7933b38c2448d212dead7e2f156330da66016" translate="yes" xml:space="preserve">
          <source>Note that the system URI (http://java.sun.com/dtd/properties.dtd) is</source>
          <target state="translated">システムの URI (http://java.sun.com/dtd/properties.dtd)は</target>
        </trans-unit>
        <trans-unit id="db0199ba9005778443a3b03d4210df3f6d5e06f3" translate="yes" xml:space="preserve">
          <source>Note that the tempo factor cannot be adjusted when external synchronization is used. In that situation, &lt;code&gt;setTempoFactor&lt;/code&gt; always sets the tempo factor to 1.0.</source>
          <target state="translated">外部同期を使用している場合は、テンポ係数を調整できないことに注意してください。その場合、 &lt;code&gt;setTempoFactor&lt;/code&gt; は常にテンポ係数を1.0に設定します。</target>
        </trans-unit>
        <trans-unit id="fef5913a6beb3d5aae70d81792ea2e59e94166eb" translate="yes" xml:space="preserve">
          <source>Note that the test arguments (&lt;code&gt;a...&lt;/code&gt; in the pseudocode) cannot be modified by execution of the test, and so are passed unchanged from the caller to the target or fallback as appropriate.</source>
          <target state="translated">テスト引数（疑似コード内の &lt;code&gt;a...&lt;/code&gt; ）はテストの実行によって変更できないため、呼び出し元からターゲットまたはフォールバックに変更されずに適宜渡されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6e14e664b9f51652bb936848986e286261484ce2" translate="yes" xml:space="preserve">
          <source>Note that the thrown argument is stored in the LogRecord thrown property, rather than the LogRecord parameters property. Thus it is processed specially by output Formatters and is not treated as a formatting parameter to the LogRecord message property.</source>
          <target state="translated">thrown 引数は LogRecord parameters プロパティではなく、LogRecord thrown プロパティに格納されることに注意してください。したがって、これは出力フォーマッタによって特別に処理され、LogRecordメッセージプロパティのフォーマットパラメータとしては扱われません。</target>
        </trans-unit>
        <trans-unit id="166cbdfdccd8403b15bc4e6d3f70208a1bc5a81c" translate="yes" xml:space="preserve">
          <source>Note that the unit's &lt;code&gt;between&lt;/code&gt; method must only be invoked if the two temporal objects have exactly the same type evaluated by &lt;code&gt;getClass()&lt;/code&gt;.</source>
          <target state="translated">ユニットの &lt;code&gt;between&lt;/code&gt; メソッドは、2つの一時オブジェクトが &lt;code&gt;getClass()&lt;/code&gt; によって評価されるまったく同じ型を持っている場合にのみ呼び出す必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="da6ac505f87ae2298d762448c0d6b681899cacca" translate="yes" xml:space="preserve">
          <source>Note that the units used are bytes, but will always correspond to an integral number of sample frames of audio data.</source>
          <target state="translated">使用される単位はバイトですが、常にオーディオデータのサンプルフレームの積分数に対応していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d5ce67a9dd43304ad2b44fdf81b4a8392939c09c" translate="yes" xml:space="preserve">
          <source>Note that the use of schema location hints introduces a vulnerability to denial-of-service attacks.</source>
          <target state="translated">スキーマロケーションヒントの使用は、サービス拒否攻撃に対する脆弱性を導入することに注意してください。</target>
        </trans-unit>
        <trans-unit id="79a718f1a2db800292680ea5dcf70340d28d0964" translate="yes" xml:space="preserve">
          <source>Note that the use of this class is optional.</source>
          <target state="translated">このクラスの使用は任意であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b5fb9e083dafa947687d5f765039d7683e6b855d" translate="yes" xml:space="preserve">
          <source>Note that the use of this method is discouraged because its behavior is platform dependent. Instead we recommend the use of &lt;a href=&quot;#requestFocusInWindow()&quot;&gt;&lt;code&gt;requestFocusInWindow()&lt;/code&gt;&lt;/a&gt;. If you would like more information on focus, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt; How to Use the Focus Subsystem&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">Note that the use of this method is discouraged because its behavior is platform dependent. Instead we recommend the use of &lt;a href=&quot;#requestFocusInWindow()&quot;&gt; &lt;code&gt;requestFocusInWindow()&lt;/code&gt; &lt;/a&gt;. If you would like more information on focus, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt; How to Use the Focus Subsystem&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="4e8c03652bfc5259fa04bb9921f963eae3e81833" translate="yes" xml:space="preserve">
          <source>Note that the use of this method is discouraged because its behavior is platform dependent. Instead we recommend the use of &lt;a href=&quot;#requestFocusInWindow(boolean)&quot;&gt;&lt;code&gt;requestFocusInWindow(boolean)&lt;/code&gt;&lt;/a&gt;. If you would like more information on focus, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt; How to Use the Focus Subsystem&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">Note that the use of this method is discouraged because its behavior is platform dependent. Instead we recommend the use of &lt;a href=&quot;#requestFocusInWindow(boolean)&quot;&gt; &lt;code&gt;requestFocusInWindow(boolean)&lt;/code&gt; &lt;/a&gt;. If you would like more information on focus, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt; How to Use the Focus Subsystem&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="bdd74f817df9b83efa8db0aee029011ef615673c" translate="yes" xml:space="preserve">
          <source>Note that the use of unique ids to avoid conflicts is only guaranteed to work reliably when using a local disk file system.</source>
          <target state="translated">競合を避けるために一意の ID を使用することは、ローカルディスクファイルシステムを使用している場合にのみ、確実に動作することが保証されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="45bef0511d5530d6f1ca1301d778c9ab6fdb30d5" translate="yes" xml:space="preserve">
          <source>Note that the value (data) of the &lt;code&gt;TIFFField&lt;/code&gt; will always be the actual field value regardless of the number of bytes required for that value. This is the case despite the fact that the TIFF</source>
          <target state="translated">Note that the value (data) of the &lt;code&gt;TIFFField&lt;/code&gt; will always be the actual field value regardless of the number of bytes required for that value. This is the case despite the fact that the TIFF</target>
        </trans-unit>
        <trans-unit id="55c86c9bf088e0f798106b89373ada491d3e4464" translate="yes" xml:space="preserve">
          <source>Note that the value is not authenticated, and should not be relied upon.</source>
          <target state="translated">値は認証されていないので、信頼できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="7762620ccd17b40256538b7163c3c26067ae36b5" translate="yes" xml:space="preserve">
          <source>Note that the value of &lt;code&gt;Math.ceil(x)&lt;/code&gt; is exactly the value of &lt;code&gt;-Math.floor(-x)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Math.ceil(x)&lt;/code&gt; の値は &lt;code&gt;-Math.floor(-x)&lt;/code&gt; の値とまったく同じであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="53fceacdee3ee3f5b8c8a4c8b401fcb821b40df9" translate="yes" xml:space="preserve">
          <source>Note that the value of &lt;code&gt;StrictMath.ceil(x)&lt;/code&gt; is exactly the value of &lt;code&gt;-StrictMath.floor(-x)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StrictMath.ceil(x)&lt;/code&gt; の値は &lt;code&gt;-StrictMath.floor(-x)&lt;/code&gt; の値とまったく同じであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="04ba68f671e05828e7ea3934d37dff9bb5c6a9a7" translate="yes" xml:space="preserve">
          <source>Note that the value of &lt;code&gt;visibleRect&lt;/code&gt; must be the equal to &lt;code&gt;this.getVisibleRect()&lt;/code&gt;.</source>
          <target state="translated">Note that the value of &lt;code&gt;visibleRect&lt;/code&gt; must be the equal to &lt;code&gt;this.getVisibleRect()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26e834aa2e38626e6191c62e7f86b13a2c6d3982" translate="yes" xml:space="preserve">
          <source>Note that the values in the &lt;code&gt;defaultValue&lt;/code&gt;, &lt;code&gt;
 legalValues&lt;/code&gt;, &lt;code&gt;maxValue&lt;/code&gt;, and &lt;code&gt;minValue&lt;/code&gt; fields should be consistent with the type returned by the &lt;code&gt;getType()&lt;/code&gt; method for the associated &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; or &lt;code&gt;
 MBeanParameterInfo&lt;/code&gt;. For MXBeans, this means that they should be of the mapped Java type, called &lt;em&gt;opendata&lt;/em&gt;(J) in the &lt;a href=&quot;mxbean#mapping-rules&quot;&gt;MXBean type mapping rules&lt;/a&gt;.</source>
          <target state="translated">Note that the values in the &lt;code&gt;defaultValue&lt;/code&gt; , &lt;code&gt; legalValues&lt;/code&gt; , &lt;code&gt;maxValue&lt;/code&gt; , and &lt;code&gt;minValue&lt;/code&gt; fields should be consistent with the type returned by the &lt;code&gt;getType()&lt;/code&gt; method for the associated &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; or &lt;code&gt; MBeanParameterInfo&lt;/code&gt; . For MXBeans, this means that they should be of the mapped Java type, called &lt;em&gt;opendata&lt;/em&gt;(J) in the &lt;a href=&quot;mxbean#mapping-rules&quot;&gt;MXBean type mapping rules&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="db639c8216139e803d890c9c06f8d4f62c5058ce" translate="yes" xml:space="preserve">
          <source>Note that the values in the &lt;code&gt;defaultValue&lt;/code&gt;, &lt;code&gt;legalValues&lt;/code&gt;, &lt;code&gt;maxValue&lt;/code&gt;, and &lt;code&gt;minValue&lt;/code&gt; fields should be consistent with the type returned by the &lt;code&gt;getType()&lt;/code&gt; method for the associated &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; or &lt;code&gt;MBeanParameterInfo&lt;/code&gt;. For MXBeans, this means that they should be of the mapped Java type, called &lt;em&gt;opendata&lt;/em&gt;(J) in the &lt;a href=&quot;mxbean#mapping-rules&quot;&gt;MXBean type mapping rules&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;defaultValue&lt;/code&gt; 、 &lt;code&gt;legalValues&lt;/code&gt; 、 &lt;code&gt;maxValue&lt;/code&gt; 、および &lt;code&gt;minValue&lt;/code&gt; フィールドの値は、関連する &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; または &lt;code&gt;MBeanParameterInfo&lt;/code&gt; の &lt;code&gt;getType()&lt;/code&gt; メソッドによって返されるタイプと一致している必要があることに注意してください。MXBeanの場合、これは、&lt;a href=&quot;mxbean#mapping-rules&quot;&gt;MXBeanタイプマッピングルール&lt;/a&gt;で&lt;em&gt;opendata&lt;/em&gt;（J）と呼ばれるマップされたJavaタイプである必要があることを意味します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8526fec3aa3f6a400bd9c8544b805eb2452f38af" translate="yes" xml:space="preserve">
          <source>Note that the way in which these system colors are applied to GUI objects may vary slightly from platform to platform since GUI objects may be rendered differently on each platform.</source>
          <target state="translated">GUIオブジェクトはプラットフォームごとにレンダリングが異なるため、これらのシステムカラーがGUIオブジェクトに適用される方法はプラットフォームごとに若干異なる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9b3075508a7662835798f320ab0d117f1fb75c35" translate="yes" xml:space="preserve">
          <source>Note that there are cases where two &lt;code&gt;Duration&lt;/code&gt;s are &quot;incomparable&quot; to each other, like one month and 30 days. For example,</source>
          <target state="translated">Note that there are cases where two &lt;code&gt;Duration&lt;/code&gt; s are &quot;incomparable&quot; to each other, like one month and 30 days. For example,</target>
        </trans-unit>
        <trans-unit id="b1f0cea8ee87ff8ddd478c0549d5ffcbb19c336f" translate="yes" xml:space="preserve">
          <source>Note that there are two differences between the following code fragment and the previous one. First, the method &lt;code&gt;setMaxRows&lt;/code&gt; is not called, so there is no limit set for the number of rows that</source>
          <target state="translated">Note that there are two differences between the following code fragment and the previous one. First, the method &lt;code&gt;setMaxRows&lt;/code&gt; is not called, so there is no limit set for the number of rows that</target>
        </trans-unit>
        <trans-unit id="06910af6b38a5034f49d0f9e7e0b87247ac85575" translate="yes" xml:space="preserve">
          <source>Note that there is an asymmetry in this library: &lt;a href=&quot;#getPrefix(java.lang.String)&quot;&gt;&lt;code&gt;getPrefix&lt;/code&gt;&lt;/a&gt; will not return the &quot;&quot; prefix, even if you have declared a default element namespace. To check for a default namespace, you have to look it up explicitly using &lt;a href=&quot;#getURI(java.lang.String)&quot;&gt;&lt;code&gt;getURI&lt;/code&gt;&lt;/a&gt;. This asymmetry exists to make it easier to look up prefixes for attribute names, where the default prefix is not allowed.</source>
          <target state="translated">Note that there is an asymmetry in this library: &lt;a href=&quot;#getPrefix(java.lang.String)&quot;&gt; &lt;code&gt;getPrefix&lt;/code&gt; &lt;/a&gt; will not return the &quot;&quot; prefix, even if you have declared a default element namespace. To check for a default namespace, you have to look it up explicitly using &lt;a href=&quot;#getURI(java.lang.String)&quot;&gt; &lt;code&gt;getURI&lt;/code&gt; &lt;/a&gt;. This asymmetry exists to make it easier to look up prefixes for attribute names, where the default prefix is not allowed.</target>
        </trans-unit>
        <trans-unit id="9743c906150d32aff6aed6f7527337a2c3554e87" translate="yes" xml:space="preserve">
          <source>Note that there is no &lt;code&gt;read&lt;/code&gt; method that takes a filename as a &lt;code&gt;String&lt;/code&gt;; use this method instead after creating a &lt;code&gt;File&lt;/code&gt; from the filename.</source>
          <target state="translated">ファイル名を &lt;code&gt;String&lt;/code&gt; としてとる &lt;code&gt;read&lt;/code&gt; メソッドがないことに注意してください。ファイル名から &lt;code&gt;File&lt;/code&gt; を作成した後で、代わりにこのメソッドを使用してください。</target>
        </trans-unit>
        <trans-unit id="6a1dd6a52f016e5e16c70d9a0d4d6b28f6bfe694" translate="yes" xml:space="preserve">
          <source>Note that there may be more than one matching method in a class because while the Java language forbids a class to declare multiple methods with the same signature but different return types, the Java virtual machine does not. This increased flexibility in the virtual machine can be used to implement various language features. For example, covariant returns can be implemented with &lt;a href=&quot;reflect/method#isBridge--&quot;&gt;bridge methods&lt;/a&gt;; the bridge method and the method being overridden would have the same signature but different return types.</source>
          <target state="translated">Java言語では、クラスが同じシグニチャであるが戻り値の型が異なる複数のメソッドを宣言することを禁じていますが、Java仮想マシンはそうではないため、クラスに一致するメソッドが複数存在する場合があることに注意してください。この仮想マシンの柔軟性の向上を利用して、さまざまな言語機能を実装できます。たとえば、共変の戻り値は&lt;a href=&quot;reflect/method#isBridge--&quot;&gt;bridgeメソッド&lt;/a&gt;で実装できます。ブリッジメソッドとオーバーライドされるメソッドの署名は同じですが、戻り値の型が異なります。</target>
        </trans-unit>
        <trans-unit id="cc0e37e1c50893d6f5604c0242e70dc21e6a2f25" translate="yes" xml:space="preserve">
          <source>Note that these conditions apply to both OCSP and CRLs, and unless the &lt;code&gt;NO_FALLBACK&lt;/code&gt; option is set, the revocation check is allowed to succeed only if both mechanisms fail under one of the conditions as stated above. Exceptions that cause the network errors are ignored but can be later retrieved by calling the &lt;a href=&quot;pkixrevocationchecker#getSoftFailExceptions()&quot;&gt;&lt;code&gt;getSoftFailExceptions&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Note that these conditions apply to both OCSP and CRLs, and unless the &lt;code&gt;NO_FALLBACK&lt;/code&gt; option is set, the revocation check is allowed to succeed only if both mechanisms fail under one of the conditions as stated above. Exceptions that cause the network errors are ignored but can be later retrieved by calling the &lt;a href=&quot;pkixrevocationchecker#getSoftFailExceptions()&quot;&gt; &lt;code&gt;getSoftFailExceptions&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="4ede1c71c79d19b7fc51ad715288dc33776ee674" translate="yes" xml:space="preserve">
          <source>Note that these conditions apply to both OCSP and CRLs, and unless the &lt;code&gt;NO_FALLBACK&lt;/code&gt; option is set, the revocation check is allowed to succeed only if both mechanisms fail under one of the conditions as stated above. Exceptions that cause the network errors are ignored but can be later retrieved by calling the &lt;a href=&quot;pkixrevocationchecker#getSoftFailExceptions--&quot;&gt;&lt;code&gt;getSoftFailExceptions&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">これらの条件はOCSPとCRLの両方に適用され、 &lt;code&gt;NO_FALLBACK&lt;/code&gt; オプションが設定されていない限り、失効チェックは、上記の条件のいずれかで両方のメカニズムが失敗した場合にのみ成功することができます。ネットワークエラーの原因となる例外は無視されますが、&lt;a href=&quot;pkixrevocationchecker#getSoftFailExceptions--&quot;&gt; &lt;code&gt;getSoftFailExceptions&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="ceef1399d6e40b51dfa976632229489886791713" translate="yes" xml:space="preserve">
          <source>Note that these interfaces are intended only for key implementations whose key material is accessible and available. These interfaces are not intended for key implementations whose key material resides in inaccessible, protected storage (such as in a hardware device).</source>
          <target state="translated">これらのインタフェースは、鍵材料がアクセス可能で利用可能な鍵実装のみを対象としていることに注意すること。これらのインタフェースは、キーマテリアルがアクセスできない保護されたストレージ(ハードウェアデバイスなど)に存在するキー実装のためのものではありません。</target>
        </trans-unit>
        <trans-unit id="e3778fef4aa1c275c5abbe241cb85d468270b18f" translate="yes" xml:space="preserve">
          <source>Note that this &lt;code&gt;popup&lt;/code&gt; must not be added to any parent before or after it is set on the tray icon. If you add it to some parent, the &lt;code&gt;popup&lt;/code&gt; may be removed from that parent.</source>
          <target state="translated">Note that this &lt;code&gt;popup&lt;/code&gt; must not be added to any parent before or after it is set on the tray icon. If you add it to some parent, the &lt;code&gt;popup&lt;/code&gt; may be removed from that parent.</target>
        </trans-unit>
        <trans-unit id="952655a12627e2e815438c884d9cc296cc9858d2" translate="yes" xml:space="preserve">
          <source>Note that this Comparator does &lt;em&gt;not&lt;/em&gt; take locale into account, and will result in an unsatisfactory ordering for certain locales. The &lt;a href=&quot;../text/collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; class provides locale-sensitive comparison.</source>
          <target state="translated">Note that this Comparator does &lt;em&gt;not&lt;/em&gt; take locale into account, and will result in an unsatisfactory ordering for certain locales. The &lt;a href=&quot;../text/collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt; class provides locale-sensitive comparison.</target>
        </trans-unit>
        <trans-unit id="eb9957cf33f666608bcbef3daaa0fd7de1c946de" translate="yes" xml:space="preserve">
          <source>Note that this Comparator does &lt;em&gt;not&lt;/em&gt; take locale into account, and will result in an unsatisfactory ordering for certain locales. The java.text package provides &lt;em&gt;Collators&lt;/em&gt; to allow locale-sensitive ordering.</source>
          <target state="translated">このコンパレータはロケールを考慮してい&lt;em&gt;ない&lt;/em&gt;ため、特定のロケールの順序付けが不十分になることに注意してください。java.textパッケージは、ロケールに依存した順序付けを可能にする&lt;em&gt;Collat​​or&lt;/em&gt;を提供します。</target>
        </trans-unit>
        <trans-unit id="ad4860a999c34686c221743d1d993625c50ea204" translate="yes" xml:space="preserve">
          <source>Note that this class does not override any of the implementations from the &lt;code&gt;AbstractCollection&lt;/code&gt; class. It merely adds implementations for &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt;.</source>
          <target state="translated">このクラスは、 &lt;code&gt;AbstractCollection&lt;/code&gt; クラスの実装をオーバーライドしないことに注意してください。 &lt;code&gt;equals&lt;/code&gt; と &lt;code&gt;hashCode&lt;/code&gt; の実装を追加するだけです。</target>
        </trans-unit>
        <trans-unit id="929c9e03f915978aaf48314d9a623a4a76189102" translate="yes" xml:space="preserve">
          <source>Note that this class does not perform any validation on specified parameters. Thus, the specified values are returned directly even if they are null.</source>
          <target state="translated">このクラスは指定されたパラメータに対して検証を行わないことに注意してください。したがって、指定された値はnullであっても直接返されます。</target>
        </trans-unit>
        <trans-unit id="3e621b57163b13d0a775297f885fb1d7287c503c" translate="yes" xml:space="preserve">
          <source>Note that this class does not provide a means for obtaining the tables found in a stream. These may be extracted from a stream by consulting the IIOMetadata object returned by the reader.</source>
          <target state="translated">このクラスは、ストリーム内で見つかったテーブルを取得する手段を提供しないことに注意してください。これらのテーブルは、リーダが返すIIOMetadataオブジェクトを参照することで、ストリームから抽出することができます。</target>
        </trans-unit>
        <trans-unit id="fce96925db3fe4b1b1bb845ef36f30eaac160b9d" translate="yes" xml:space="preserve">
          <source>Note that this class is abstract and extends from &lt;code&gt;KeyPairGeneratorSpi&lt;/code&gt; for historical reasons. Application developers should only take notice of the methods defined in this &lt;code&gt;KeyPairGenerator&lt;/code&gt; class; all the methods in the superclass are intended for cryptographic service providers who wish to supply their own implementations of key pair generators.</source>
          <target state="translated">このクラスは抽象的であり、歴史的な理由で &lt;code&gt;KeyPairGeneratorSpi&lt;/code&gt; から拡張されていることに注意してください。アプリケーション開発者は、この &lt;code&gt;KeyPairGenerator&lt;/code&gt; クラスで定義されたメソッドのみに注意する必要があります。スーパークラスのすべてのメソッドは、鍵ペアジェネレーターの独自の実装を提供したい暗号サービスプロバイダーを対象としています。</target>
        </trans-unit>
        <trans-unit id="1258f1977d0984bd47aa412f3ee01486b4648771" translate="yes" xml:space="preserve">
          <source>Note that this class is abstract and extends from &lt;code&gt;MessageDigestSpi&lt;/code&gt; for historical reasons. Application developers should only take notice of the methods defined in this &lt;code&gt;MessageDigest&lt;/code&gt; class; all the methods in the superclass are intended for cryptographic service providers who wish to supply their own implementations of message digest algorithms.</source>
          <target state="translated">このクラスは抽象的であり、歴史的な理由で &lt;code&gt;MessageDigestSpi&lt;/code&gt; から拡張されていることに注意してください。アプリケーション開発者は、この &lt;code&gt;MessageDigest&lt;/code&gt; クラスで定義されたメソッドのみに注意する必要があります。スーパークラスのすべてのメソッドは、メッセージダイジェストアルゴリズムの独自の実装を提供したい暗号サービスプロバイダーを対象としています。</target>
        </trans-unit>
        <trans-unit id="ae9d9042b4412cecbe9eecb37942945baf66350a" translate="yes" xml:space="preserve">
          <source>Note that this class is abstract and extends from &lt;code&gt;SignatureSpi&lt;/code&gt; for historical reasons. Application developers should only take notice of the methods defined in this &lt;code&gt;Signature&lt;/code&gt; class; all the methods in the superclass are intended for cryptographic service providers who wish to supply their own implementations of digital signature algorithms.</source>
          <target state="translated">このクラスは抽象的であり、歴史的な理由で &lt;code&gt;SignatureSpi&lt;/code&gt; から拡張されていることに注意してください。アプリケーション開発者は、この &lt;code&gt;Signature&lt;/code&gt; クラスで定義されたメソッドのみに注意する必要があります。スーパークラスのすべてのメソッドは、デジタル署名アルゴリズムの独自の実装を提供したい暗号サービスプロバイダーを対象としています。</target>
        </trans-unit>
        <trans-unit id="bca01d41c7ee09c177e42cb9065cae541c703f52" translate="yes" xml:space="preserve">
          <source>Note that this class is applicable to both ticket granting tickets and other regular service tickets. A ticket granting ticket is just a special case of a more generalized service ticket.</source>
          <target state="translated">このクラスは、チケット付与チケットとその他の一般的なサービスチケットの両方に適用されることに注意してください。チケット付与チケットは、より一般的なサービスチケットの特殊なケースにすぎません。</target>
        </trans-unit>
        <trans-unit id="47e75f75611f69d79b42af2071cccd1178888747" translate="yes" xml:space="preserve">
          <source>Note that this class is named &lt;code&gt;XMLObject&lt;/code&gt; rather than &lt;code&gt;Object&lt;/code&gt; to avoid naming clashes with the existing &lt;a href=&quot;../../../../../java.base/java/lang/object&quot;&gt;&lt;code&gt;java.lang.Object&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">Note that this class is named &lt;code&gt;XMLObject&lt;/code&gt; rather than &lt;code&gt;Object&lt;/code&gt; to avoid naming clashes with the existing &lt;a href=&quot;../../../../../java.base/java/lang/object&quot;&gt; &lt;code&gt;java.lang.Object&lt;/code&gt; &lt;/a&gt; class.</target>
        </trans-unit>
        <trans-unit id="bb10025086af2ee7b0b9c8525e6f26e484d89376" translate="yes" xml:space="preserve">
          <source>Note that this class is named &lt;code&gt;XMLSignature&lt;/code&gt; rather than &lt;code&gt;Signature&lt;/code&gt; to avoid naming clashes with the existing &lt;a href=&quot;../../../../../java.base/java/security/signature&quot;&gt;&lt;code&gt;java.security.Signature&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">Note that this class is named &lt;code&gt;XMLSignature&lt;/code&gt; rather than &lt;code&gt;Signature&lt;/code&gt; to avoid naming clashes with the existing &lt;a href=&quot;../../../../../java.base/java/security/signature&quot;&gt; &lt;code&gt;java.security.Signature&lt;/code&gt; &lt;/a&gt; class.</target>
        </trans-unit>
        <trans-unit id="2b321d008fe97a4a046429d819164edd9d49d391" translate="yes" xml:space="preserve">
          <source>Note that this class is optimized for the use case where most elements do not contain Namespace declarations: if the same prefix/URI mapping is repeated for each context (for example), this class will be somewhat less efficient.</source>
          <target state="translated">このクラスは、ほとんどの要素が名前空間宣言を含まない場合に最適化されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d1a9f9d3aae3908c0e374aea8150d2ed6428cc48" translate="yes" xml:space="preserve">
          <source>Note that this class reuses several classes from the SAX API. This does not require that the implementor of the underlying DOM implementation use a SAX parser to parse XML document into a &lt;code&gt;Document&lt;/code&gt;. It merely requires that the implementation communicate with the application using these existing APIs.</source>
          <target state="translated">Note that this class reuses several classes from the SAX API. This does not require that the implementor of the underlying DOM implementation use a SAX parser to parse XML document into a &lt;code&gt;Document&lt;/code&gt; . It merely requires that the implementation communicate with the application using these existing APIs.</target>
        </trans-unit>
        <trans-unit id="520d821f07468edec20ba3827c6db570a09bb7f7" translate="yes" xml:space="preserve">
          <source>Note that this class subclasses from the &lt;a href=&quot;../image&quot;&gt;&lt;code&gt;Image&lt;/code&gt;&lt;/a&gt; class, which includes methods that take an &lt;a href=&quot;imageobserver&quot;&gt;&lt;code&gt;ImageObserver&lt;/code&gt;&lt;/a&gt; parameter for asynchronous notifications as information is received from a potential &lt;a href=&quot;imageproducer&quot;&gt;&lt;code&gt;ImageProducer&lt;/code&gt;&lt;/a&gt;. Since this &lt;code&gt;VolatileImage&lt;/code&gt; is not loaded from an asynchronous source, the various methods that take an &lt;code&gt;ImageObserver&lt;/code&gt; parameter will behave as if the data has already been obtained from the &lt;code&gt;ImageProducer&lt;/code&gt;. Specifically, this means that the return values from such methods will never indicate that the information is not yet available and the &lt;code&gt;ImageObserver&lt;/code&gt; used in such methods will never need to be recorded for an asynchronous callback notification.</source>
          <target state="translated">Note that this class subclasses from the &lt;a href=&quot;../image&quot;&gt; &lt;code&gt;Image&lt;/code&gt; &lt;/a&gt; class, which includes methods that take an &lt;a href=&quot;imageobserver&quot;&gt; &lt;code&gt;ImageObserver&lt;/code&gt; &lt;/a&gt; parameter for asynchronous notifications as information is received from a potential &lt;a href=&quot;imageproducer&quot;&gt; &lt;code&gt;ImageProducer&lt;/code&gt; &lt;/a&gt;. Since this &lt;code&gt;VolatileImage&lt;/code&gt; is not loaded from an asynchronous source, the various methods that take an &lt;code&gt;ImageObserver&lt;/code&gt; parameter will behave as if the data has already been obtained from the &lt;code&gt;ImageProducer&lt;/code&gt; . Specifically, this means that the return values from such methods will never indicate that the information is not yet available and the &lt;code&gt;ImageObserver&lt;/code&gt; used in such methods will never need to be recorded for an asynchronous callback notification.</target>
        </trans-unit>
        <trans-unit id="ed299b560d1f05b11ce8d4135192783c2c148f34" translate="yes" xml:space="preserve">
          <source>Note that this constructor is &quot;protected&quot; to allow subclassing. In general clients of logging should use one of the constant Level objects such as SEVERE or FINEST. However, if clients need to add new logging levels, they may subclass Level and define new constants.</source>
          <target state="translated">このコンストラクタはサブクラス化を可能にするために &quot;protected&quot; であることに注意してください。一般的に、ロギングのクライアントは、SEVERE や FINEST のような定数 Level オブジェクトの 1 つを使用しなければなりません。しかし、クライアントが新しいロギングレベルを追加する必要がある場合は、Level をサブクラス化して新しい定数を定義することができます。</target>
        </trans-unit>
        <trans-unit id="2da2d9d25ff3d441e31a0ef5d2f344c3d4c6f7f0" translate="yes" xml:space="preserve">
          <source>Note that this constructor only stores references to the public and private key components in the generated key pair. This is safe, because &lt;code&gt;Key&lt;/code&gt; objects are immutable.</source>
          <target state="translated">このコンストラクタは、生成された鍵ペアの公開鍵コンポーネントと秘密鍵コンポーネントへの参照のみを保存することに注意してください。 &lt;code&gt;Key&lt;/code&gt; オブジェクトは不変であるため、これは安全です。</target>
        </trans-unit>
        <trans-unit id="d1e3eafd89be7fc614d269bfd221c748478bfe9b" translate="yes" xml:space="preserve">
          <source>Note that this definition permits &lt;code&gt;null&lt;/code&gt; elements at any depth.</source>
          <target state="translated">この定義では、どの深さでも &lt;code&gt;null&lt;/code&gt; 要素が許可されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9f0f633aad5e50d26b0994bd03344b8c6fd53dea" translate="yes" xml:space="preserve">
          <source>Note that this exception does not always indicate that an object has been concurrently modified by a</source>
          <target state="translated">この例外は、オブジェクトが</target>
        </trans-unit>
        <trans-unit id="40b84543e4934fdd06df621a721ae6d97b481b6a" translate="yes" xml:space="preserve">
          <source>Note that this exception may be used when undefined type variables are accessed as well as when types (e.g., classes, interfaces or annotation types) are loaded. In particular, this exception can be thrown by the &lt;a href=&quot;reflect/annotatedelement&quot;&gt;API used to read annotations reflectively&lt;/a&gt;.</source>
          <target state="translated">この例外は、未定義の型変数にアクセスするとき、および型（クラス、インターフェイス、注釈型など）がロードされるときに使用される場合があります。特に、この例外は、&lt;a href=&quot;reflect/annotatedelement&quot;&gt;アノテーションを反射的に読み取るために使用されるAPI&lt;/a&gt;によってスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="c7f4d54ec9feeae5b3023107ca73e81fa932d8fd" translate="yes" xml:space="preserve">
          <source>Note that this feature does &lt;em&gt;NOT&lt;/em&gt; affect the way a &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; receives SAX events. It merely changes the way it augments SAX events.</source>
          <target state="translated">Note that this feature does &lt;em&gt;NOT&lt;/em&gt; affect the way a &lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt; receives SAX events. It merely changes the way it augments SAX events.</target>
        </trans-unit>
        <trans-unit id="044b07da3c160d6dd45c096ab357368dcf06ea39" translate="yes" xml:space="preserve">
          <source>Note that this field is relevant only to certain events generated by data lines, such as &lt;code&gt;START&lt;/code&gt; and &lt;code&gt;STOP&lt;/code&gt;. For events generated by lines that do not count sample frames, and for any other events for which this value is not known, the position value should be &lt;a href=&quot;audiosystem#NOT_SPECIFIED&quot;&gt;&lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このフィールドは、 &lt;code&gt;START&lt;/code&gt; や &lt;code&gt;STOP&lt;/code&gt; など、データラインによって生成された特定のイベントにのみ関連することに注意してください。サンプルフレームをカウントしないラインによって生成されたイベント、およびこの値が不明な他のイベントの場合、位置の値は&lt;a href=&quot;audiosystem#NOT_SPECIFIED&quot;&gt; &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; である&lt;/a&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="7c6dc2724c4f696c95471b6371b96bccbec1ff22" translate="yes" xml:space="preserve">
          <source>Note that this implementation throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the &lt;code&gt;entrySet&lt;/code&gt; does not support the &lt;code&gt;clear&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;entrySet&lt;/code&gt; が &lt;code&gt;clear&lt;/code&gt; 操作をサポートしていない場合、この実装は &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="cb5512e594933521dc30b9b992079194b3c8a5f9" translate="yes" xml:space="preserve">
          <source>Note that this implementation throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the &lt;code&gt;entrySet&lt;/code&gt; iterator does not support the &lt;code&gt;remove&lt;/code&gt; method and this map contains a mapping for the specified key.</source>
          <target state="translated">&lt;code&gt;entrySet&lt;/code&gt; イテレータが &lt;code&gt;remove&lt;/code&gt; メソッドをサポートせず、このマップに指定されたキーのマッピングが含まれている場合、この実装は &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="975f8928795c3f5c020f5ef1b74be06f52b23843" translate="yes" xml:space="preserve">
          <source>Note that this implementation throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the iterator returned by this collection's iterator method does not implement the &lt;code&gt;remove&lt;/code&gt; method and this collection contains the specified object.</source>
          <target state="translated">このコレクションの反復子メソッドによって返された反復子が &lt;code&gt;remove&lt;/code&gt; メソッドを実装せず、このコレクションに指定されたオブジェクトが含まれている場合、この実装は &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="db212b8c2dab328f5c6b17a946f2fe81565c10f0" translate="yes" xml:space="preserve">
          <source>Note that this implementation throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this map does not support the &lt;code&gt;put&lt;/code&gt; operation and the specified map is nonempty.</source>
          <target state="translated">このマップが &lt;code&gt;put&lt;/code&gt; 操作をサポートせず、指定されたマップが空で &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 場合、この実装はUnsupportedOperationExceptionをスローすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e84e2a2f4a4d926bb901360c6bdfe8682010e5a8" translate="yes" xml:space="preserve">
          <source>Note that this implementation throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; unless &lt;a href=&quot;#add(int,E)&quot;&gt;&lt;code&gt;add(int, E)&lt;/code&gt;&lt;/a&gt; is overridden.</source>
          <target state="translated">Note that this implementation throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; unless &lt;a href=&quot;#add(int,E)&quot;&gt; &lt;code&gt;add(int, E)&lt;/code&gt; &lt;/a&gt; is overridden.</target>
        </trans-unit>
        <trans-unit id="8df6e86eb00d3a73d7d1d698efbe5ac2a73104b2" translate="yes" xml:space="preserve">
          <source>Note that this implementation throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; unless &lt;a href=&quot;abstractlist#add-int-E-&quot;&gt;&lt;code&gt;add(int, E)&lt;/code&gt;&lt;/a&gt; is overridden.</source>
          <target state="translated">&lt;a href=&quot;abstractlist#add-int-E-&quot;&gt; &lt;code&gt;add(int, E)&lt;/code&gt; &lt;/a&gt;がオーバーライドされ &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 限り、この実装はUnsupportedOperationExceptionをスローすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3c6fb5eaa34edfe2ff03ab385518b84ec2516cf7" translate="yes" xml:space="preserve">
          <source>Note that this implementation throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; unless &lt;code&gt;remove(int
 index)&lt;/code&gt; or &lt;code&gt;removeRange(int fromIndex, int toIndex)&lt;/code&gt; is overridden.</source>
          <target state="translated">この実装は、 &lt;code&gt;remove(int index)&lt;/code&gt; または &lt;code&gt;removeRange(int fromIndex, int toIndex)&lt;/code&gt; がオーバーライドされ &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 限り、UnsupportedOperationExceptionをスローすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="422ea04f5194ee01853ea418d58ef8d86379e24a" translate="yes" xml:space="preserve">
          <source>Note that this implementation will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the iterator returned by the &lt;code&gt;iterator&lt;/code&gt; method does not implement the &lt;code&gt;remove&lt;/code&gt; method and this collection contains one or more elements in common with the specified collection.</source>
          <target state="translated">&lt;code&gt;iterator&lt;/code&gt; メソッドによって返された反復子が &lt;code&gt;remove&lt;/code&gt; メソッドを実装せず、このコレクションに指定されたコレクションと共通の要素が1つ以上含まれている場合、この実装は &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5988cf643aa33a5bd4d014ed12015866d3fbeeba" translate="yes" xml:space="preserve">
          <source>Note that this implementation will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the iterator returned by the &lt;code&gt;iterator&lt;/code&gt; method does not implement the &lt;code&gt;remove&lt;/code&gt; method and this collection contains one or more elements not present in the specified collection.</source>
          <target state="translated">&lt;code&gt;iterator&lt;/code&gt; メソッドによって返された反復子が &lt;code&gt;remove&lt;/code&gt; メソッドを実装せず、このコレクションに指定されたコレクションに存在しない1つ以上の要素が含まれている場合、この実装は &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="525bf326636aff0af8a9f15a5f10c17ca53eb171" translate="yes" xml:space="preserve">
          <source>Note that this implementation will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the iterator returned by the &lt;code&gt;iterator&lt;/code&gt; method does not implement the &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;iterator&lt;/code&gt; メソッドによって返された反復子が &lt;code&gt;remove&lt;/code&gt; メソッドを実装していない場合、この実装は &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3e60f8e679a9f7d85915be0ab99b0f33ba4ab1db" translate="yes" xml:space="preserve">
          <source>Note that this implementation will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the iterator returned by this collection's &lt;code&gt;iterator&lt;/code&gt; method does not implement the &lt;code&gt;remove&lt;/code&gt; method and this collection is non-empty.</source>
          <target state="translated">このコレクションの &lt;code&gt;iterator&lt;/code&gt; メソッドによって返された反復子が &lt;code&gt;remove&lt;/code&gt; メソッドを実装せず、このコレクションが空で &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 場合、この実装はUnsupportedOperationExceptionをスローすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="35e5896bdd589a9b6213fb5e4ea8e6765a26357e" translate="yes" xml:space="preserve">
          <source>Note that this implementation will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the list iterator does not implement the &lt;code&gt;add&lt;/code&gt; operation.</source>
          <target state="translated">リスト反復子が &lt;code&gt;add&lt;/code&gt; 操作を実装しない場合、この実装は &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="85346ec6bcd94e9c56ca9f83cf9ad0129e133f29" translate="yes" xml:space="preserve">
          <source>Note that this implementation will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the list iterator does not implement the &lt;code&gt;remove&lt;/code&gt; operation.</source>
          <target state="translated">リスト反復子が &lt;code&gt;remove&lt;/code&gt; 操作を実装しない場合、この実装は &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2988484bc36257f1ca3eece7c1a9cf6517c20350" translate="yes" xml:space="preserve">
          <source>Note that this implementation will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the list iterator does not implement the &lt;code&gt;set&lt;/code&gt; operation.</source>
          <target state="translated">リスト反復子が &lt;code&gt;set&lt;/code&gt; 演算を実装しない場合、この実装は &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1783eb4951e40a0fff0a5ffff6c87d7ea0bf6655" translate="yes" xml:space="preserve">
          <source>Note that this implementation will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the list iterator returned by the &lt;code&gt;listIterator&lt;/code&gt; method does not implement the &lt;code&gt;add&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;listIterator&lt;/code&gt; メソッドによって返されたリスト反復子が &lt;code&gt;add&lt;/code&gt; 操作を実装していない場合、この実装は &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="f327fdcaeba70cad3d57b84dbcb0e1ebcd97037f" translate="yes" xml:space="preserve">
          <source>Note that this implementation will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; unless &lt;code&gt;add&lt;/code&gt; is overridden (assuming the specified collection is non-empty).</source>
          <target state="translated">&lt;code&gt;add&lt;/code&gt; がオーバーライドされ &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 限り、この実装はUnsupportedOperationExceptionをスローすることに注意してください（指定されたコレクションが空でないと想定）。</target>
        </trans-unit>
        <trans-unit id="4ab2481d2b630803d9173d0def46d838c199222e" translate="yes" xml:space="preserve">
          <source>Note that this interface does</source>
          <target state="translated">このインターフェイスは</target>
        </trans-unit>
        <trans-unit id="153f2cc4fdf4685234f5500ca348f3c32aaead68" translate="yes" xml:space="preserve">
          <source>Note that this interface includes only those DTD events that the XML recommendation &lt;em&gt;requires&lt;/em&gt; processors to report: notation and unparsed entity declarations.</source>
          <target state="translated">Note that this interface includes only those DTD events that the XML recommendation &lt;em&gt;requires&lt;/em&gt; processors to report: notation and unparsed entity declarations.</target>
        </trans-unit>
        <trans-unit id="d7f4f82f399d57015cedf4a75d3e039251e05b16" translate="yes" xml:space="preserve">
          <source>Note that this is a new method that replaces the deprecated &lt;a href=&quot;#newInstance(java.lang.String,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;newInstance(String factoryId, ClassLoader classLoader)&lt;/code&gt;&lt;/a&gt; method. No changes in behavior are defined by this replacement method relative to the deprecated method.</source>
          <target state="translated">Note that this is a new method that replaces the deprecated &lt;a href=&quot;#newInstance(java.lang.String,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;newInstance(String factoryId, ClassLoader classLoader)&lt;/code&gt; &lt;/a&gt; method. No changes in behavior are defined by this replacement method relative to the deprecated method.</target>
        </trans-unit>
        <trans-unit id="960b0f6ffdab9a4a559ec1529401c17cd0345edd" translate="yes" xml:space="preserve">
          <source>Note that this is a new method that replaces the deprecated &lt;a href=&quot;#newInstance(java.lang.String,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;newInstance(String factoryId, ClassLoader classLoader)&lt;/code&gt;&lt;/a&gt; method. The original method was incorrectly defined to return XMLInputFactory.</source>
          <target state="translated">Note that this is a new method that replaces the deprecated &lt;a href=&quot;#newInstance(java.lang.String,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;newInstance(String factoryId, ClassLoader classLoader)&lt;/code&gt; &lt;/a&gt; method. The original method was incorrectly defined to return XMLInputFactory.</target>
        </trans-unit>
        <trans-unit id="5301f6a7aaaf900be91043cae59868ad5d51a18b" translate="yes" xml:space="preserve">
          <source>Note that this is a one-way operation. There is no &quot;un-die&quot; method.</source>
          <target state="translated">一方通行であることに注意してください。アンダイ」の方法はありません。</target>
        </trans-unit>
        <trans-unit id="3c2caf6e5b1723320743debc3005629f763fe343" translate="yes" xml:space="preserve">
          <source>Note that this is not a strict inverse of &lt;a href=&quot;#fromMethodDescriptorString(java.lang.String,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;fromMethodDescriptorString&lt;/code&gt;&lt;/a&gt;. Two distinct classes which share a common name but have different class loaders will appear identical when viewed within descriptor strings.</source>
          <target state="translated">Note that this is not a strict inverse of &lt;a href=&quot;#fromMethodDescriptorString(java.lang.String,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;fromMethodDescriptorString&lt;/code&gt; &lt;/a&gt;. Two distinct classes which share a common name but have different class loaders will appear identical when viewed within descriptor strings.</target>
        </trans-unit>
        <trans-unit id="d592a9f323fa58c445e7e3eb0745ef34fe888513" translate="yes" xml:space="preserve">
          <source>Note that this is not a strict inverse of &lt;a href=&quot;methodtype#fromMethodDescriptorString-java.lang.String-java.lang.ClassLoader-&quot;&gt;&lt;code&gt;fromMethodDescriptorString&lt;/code&gt;&lt;/a&gt;. Two distinct classes which share a common name but have different class loaders will appear identical when viewed within descriptor strings.</source>
          <target state="translated">これは&lt;a href=&quot;methodtype#fromMethodDescriptorString-java.lang.String-java.lang.ClassLoader-&quot;&gt; &lt;code&gt;fromMethodDescriptorString&lt;/code&gt; の&lt;/a&gt;厳密な逆ではないことに注意してください。共通の名前を共有するがクラスローダーが異なる2つの異なるクラスは、記述子文字列内で表示すると同一に見えます。</target>
        </trans-unit>
        <trans-unit id="3085b4ad1dbd6340c8f8b80f102960b77bef6e60" translate="yes" xml:space="preserve">
          <source>Note that this meta-annotation type has no effect if the annotated type is used to annotate anything other than a class. Note also that this meta-annotation only causes annotations to be inherited from superclasses; annotations on implemented interfaces have no effect.</source>
          <target state="translated">このメタ注釈型は、アノテーションされた型がクラス以外のアノテーションに使用されている場合には何の効果もないことに注意してください。また、このメタ注釈はアノテーションをスーパークラスから継承させるだけであり、実装されたインターフェイス上のアノテーションは何の影響も受けないことにも注意してください。</target>
        </trans-unit>
        <trans-unit id="4a5a94267a3705a2122fc8b5081814450ae70967" translate="yes" xml:space="preserve">
          <source>Note that this method can usefully be applied to sublists to move one or more elements within a list while preserving the order of the remaining elements. For example, the following idiom moves the element at index &lt;code&gt;j&lt;/code&gt; forward to position &lt;code&gt;k&lt;/code&gt; (which must be greater than or equal to &lt;code&gt;j&lt;/code&gt;):</source>
          <target state="translated">このメソッドは、残りの要素の順序を維持しながら、リスト内の1つ以上の要素を移動するサブリストに便利に適用できることに注意してください。たとえば、次のイディオムは、インデックス &lt;code&gt;j&lt;/code&gt; の要素を位置 &lt;code&gt;k&lt;/code&gt; （ &lt;code&gt;j&lt;/code&gt; 以上にする必要があります）に移動します。</target>
        </trans-unit>
        <trans-unit id="f881e7c5908f2c072f7ba70b7a7c3d38afbb2344" translate="yes" xml:space="preserve">
          <source>Note that this method cannot be used to transmit &lt;code&gt;MANAGE CHANNEL&lt;/code&gt; APDUs. Logical channels should be managed using the &lt;a href=&quot;card#openLogicalChannel()&quot;&gt;Card.openLogicalChannel()&lt;/a&gt; and &lt;a href=&quot;#close()&quot;&gt;CardChannel.close()&lt;/a&gt; methods.</source>
          <target state="translated">Note that this method cannot be used to transmit &lt;code&gt;MANAGE CHANNEL&lt;/code&gt; APDUs. Logical channels should be managed using the &lt;a href=&quot;card#openLogicalChannel()&quot;&gt;Card.openLogicalChannel()&lt;/a&gt; and &lt;a href=&quot;#close()&quot;&gt;CardChannel.close()&lt;/a&gt; methods.</target>
        </trans-unit>
        <trans-unit id="ab7834403354feb3439539896960c8ef42fe2b2d" translate="yes" xml:space="preserve">
          <source>Note that this method does &lt;em&gt;not&lt;/em&gt; take locale into account, and will result in an unsatisfactory ordering for certain locales. The &lt;a href=&quot;../text/collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; class provides locale-sensitive comparison.</source>
          <target state="translated">Note that this method does &lt;em&gt;not&lt;/em&gt; take locale into account, and will result in an unsatisfactory ordering for certain locales. The &lt;a href=&quot;../text/collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt; class provides locale-sensitive comparison.</target>
        </trans-unit>
        <trans-unit id="20eb6a4da01ded7eeea08a815df0efb0d37f211a" translate="yes" xml:space="preserve">
          <source>Note that this method does &lt;em&gt;not&lt;/em&gt; take locale into account, and will result in an unsatisfactory ordering for certain locales. The java.text package provides &lt;em&gt;collators&lt;/em&gt; to allow locale-sensitive ordering.</source>
          <target state="translated">このメソッドはロケールを考慮し&lt;em&gt;ない&lt;/em&gt;ため、特定のロケールの順序付けが不十分になることに注意してください。java.textパッケージは、ロケール依存の順序付けを可能にする&lt;em&gt;コレーター&lt;/em&gt;を提供します。</target>
        </trans-unit>
        <trans-unit id="d5a4dd3741621d78b646a191cd0cf0ef257dd40e" translate="yes" xml:space="preserve">
          <source>Note that this method does &lt;em&gt;not&lt;/em&gt; take locale into account, and will result in unsatisfactory results for certain locales when &lt;code&gt;ignoreCase&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;. The &lt;a href=&quot;../text/collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; class provides locale-sensitive comparison.</source>
          <target state="translated">Note that this method does &lt;em&gt;not&lt;/em&gt; take locale into account, and will result in unsatisfactory results for certain locales when &lt;code&gt;ignoreCase&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; . The &lt;a href=&quot;../text/collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt; class provides locale-sensitive comparison.</target>
        </trans-unit>
        <trans-unit id="40a2a3bb1d07ddbbbbd69885b81211e7ac032cc1" translate="yes" xml:space="preserve">
          <source>Note that this method does &lt;em&gt;not&lt;/em&gt; take locale into account, and will result in unsatisfactory results for certain locales. The &lt;a href=&quot;../text/collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; class provides locale-sensitive comparison.</source>
          <target state="translated">Note that this method does &lt;em&gt;not&lt;/em&gt; take locale into account, and will result in unsatisfactory results for certain locales. The &lt;a href=&quot;../text/collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt; class provides locale-sensitive comparison.</target>
        </trans-unit>
        <trans-unit id="207d87ac62d6b9031321e630cca7a1b52a78d900" translate="yes" xml:space="preserve">
          <source>Note that this method does &lt;em&gt;not&lt;/em&gt; take locale into account. The &lt;a href=&quot;../text/collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; class provides locale-sensitive comparison.</source>
          <target state="translated">Note that this method does &lt;em&gt;not&lt;/em&gt; take locale into account. The &lt;a href=&quot;../text/collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt; class provides locale-sensitive comparison.</target>
        </trans-unit>
        <trans-unit id="f3dd28effd74b6f8c2fcfc05b89de02aee634ab3" translate="yes" xml:space="preserve">
          <source>Note that this method does not call the &lt;code&gt;write&lt;/code&gt; method of its underlying input stream with the same arguments. Subclasses of &lt;code&gt;FilterOutputStream&lt;/code&gt; should provide a more efficient implementation of this method.</source>
          <target state="translated">このメソッドは、基礎となる入力ストリームの &lt;code&gt;write&lt;/code&gt; メソッドを同じ引数で呼び出さないことに注意してください。 &lt;code&gt;FilterOutputStream&lt;/code&gt; のサブクラスは、このメソッドのより効率的な実装を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="ef01d93965b1db4c07fa75e1840b1a354851a5b9" translate="yes" xml:space="preserve">
          <source>Note that this method does not call the &lt;code&gt;write&lt;/code&gt; method of its underlying output stream with the same arguments. Subclasses of &lt;code&gt;FilterOutputStream&lt;/code&gt; should provide a more efficient implementation of this method.</source>
          <target state="translated">Note that this method does not call the &lt;code&gt;write&lt;/code&gt; method of its underlying output stream with the same arguments. Subclasses of &lt;code&gt;FilterOutputStream&lt;/code&gt; should provide a more efficient implementation of this method.</target>
        </trans-unit>
        <trans-unit id="b4611493bb994e2035a9c309dd4d1f3bcdf66997" translate="yes" xml:space="preserve">
          <source>Note that this method does not call the one-argument &lt;code&gt;write&lt;/code&gt; method of its underlying output stream with the single argument &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、単一の引数 &lt;code&gt;b&lt;/code&gt; を使用して、基になる出力ストリームの1つの引数の &lt;code&gt;write&lt;/code&gt; メソッドを呼び出さないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="ac12c4ad7508b820c717cab29f284f23852b29ba" translate="yes" xml:space="preserve">
          <source>Note that this method does not call the one-argument &lt;code&gt;write&lt;/code&gt; method of its underlying stream with the single argument &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、単一の引数 &lt;code&gt;b&lt;/code&gt; を使用して、基礎となるストリームの引数が1つの &lt;code&gt;write&lt;/code&gt; メソッドを呼び出さないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="afbe663b4c55e68667941ceb44df6bef21667350" translate="yes" xml:space="preserve">
          <source>Note that this method does not return obsolete 2-letter country codes. ISO3166-3 codes which designate country codes for those obsolete codes, can be retrieved from &lt;a href=&quot;#getISOCountries(java.util.Locale.IsoCountryCode)&quot;&gt;&lt;code&gt;getISOCountries(Locale.IsoCountryCode type)&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;type&lt;/code&gt;&lt;a href=&quot;locale.isocountrycode#PART3&quot;&gt;&lt;code&gt;Locale.IsoCountryCode.PART3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、廃止された2文字の国コードを返さないことに注意してください。これらの廃止されたコードの国コードを指定するISO3166-3コードは、 &lt;code&gt;type&lt;/code&gt; &lt;a href=&quot;locale.isocountrycode#PART3&quot;&gt; &lt;code&gt;Locale.IsoCountryCode.PART3&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;#getISOCountries(java.util.Locale.IsoCountryCode)&quot;&gt; &lt;code&gt;getISOCountries(Locale.IsoCountryCode type)&lt;/code&gt; &lt;/a&gt;から取得できます。</target>
        </trans-unit>
        <trans-unit id="b5aab9bdd875aafdc85fd0158236e9a17a8e750e" translate="yes" xml:space="preserve">
          <source>Note that this method does not return the manifest's main attributes; see &lt;a href=&quot;#getMainAttributes()&quot;&gt;&lt;code&gt;getMainAttributes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドはマニフェストの主な属性を返さないことに注意してください。&lt;a href=&quot;#getMainAttributes()&quot;&gt; &lt;code&gt;getMainAttributes()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b85aa59e04cc406d60996088e348b5995dbf5b88" translate="yes" xml:space="preserve">
          <source>Note that this method does not return the manifest's main attributes; see &lt;a href=&quot;manifest#getMainAttributes--&quot;&gt;&lt;code&gt;getMainAttributes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドはマニフェストの主な属性を返さないことに注意してください。&lt;a href=&quot;manifest#getMainAttributes--&quot;&gt; &lt;code&gt;getMainAttributes()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="52b41a870664bd30dd4e85746b0ca25c65347ae6" translate="yes" xml:space="preserve">
          <source>Note that this method does not take any precautions to avoid problems caused by storing results into &lt;code&gt;Point2D&lt;/code&gt; objects that will be used as the source for calculations further down the source array. This method does guarantee that if a specified &lt;code&gt;Point2D&lt;/code&gt; object is both the source and destination for the same single point transform operation then the results will not be stored until the calculations are complete to avoid storing the results on top of the operands. If, however, the destination &lt;code&gt;Point2D&lt;/code&gt; object for one operation is the same object as the source &lt;code&gt;Point2D&lt;/code&gt; object for another operation further down the source array then the original coordinates in that point are overwritten before they can be converted.</source>
          <target state="translated">このメソッドは、ソース配列のさらに下の計算のソースとして使用される &lt;code&gt;Point2D&lt;/code&gt; オブジェクトに結果を格納することによって引き起こされる問題を回避するための予防策を講じていないことに注意してください。このメソッドは、指定された &lt;code&gt;Point2D&lt;/code&gt; オブジェクトが同じシングルポイント変換操作のソースと宛先の両方である場合、オペランドの上に結果が保存されないように、計算が完了するまで結果が保存されないことを保証します。ただし、ある操作の宛先 &lt;code&gt;Point2D&lt;/code&gt; オブジェクトが、ソース配列のさらに下にある別の操作のソース &lt;code&gt;Point2D&lt;/code&gt; オブジェクトと同じオブジェクトである場合、そのポイントの元の座標は、変換される前に上書きされます。</target>
        </trans-unit>
        <trans-unit id="a5915d01cdbf8df7d6e4bc4b96fe69c77ad00d1c" translate="yes" xml:space="preserve">
          <source>Note that this method does not wait if there are no events pending.</source>
          <target state="translated">このメソッドは、保留中のイベントがない場合は待機しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="6b0e08602b6b04dd768eb247d52038820cc559d5" translate="yes" xml:space="preserve">
          <source>Note that this method invokes all LoginModules configured for the application regardless of their respective &lt;code&gt;Configuration&lt;/code&gt; flag parameters. Essentially this means that &lt;code&gt;Requisite&lt;/code&gt; and &lt;code&gt;Sufficient&lt;/code&gt; semantics are ignored for this method. This guarantees that proper cleanup and state restoration can take place.</source>
          <target state="translated">このメソッドは、それぞれの &lt;code&gt;Configuration&lt;/code&gt; フラグパラメータに関係なく、アプリケーション用に構成されたすべてのLoginModuleを呼び出すことに注意してください。基本的に、これは、このメソッドでは &lt;code&gt;Requisite&lt;/code&gt; および &lt;code&gt;Sufficient&lt;/code&gt; セマンティクスが無視されることを意味します。これにより、適切なクリーンアップと状態の復元を行うことができます。</target>
        </trans-unit>
        <trans-unit id="c023cf439620551995c39891114d9afaef9ddaa7" translate="yes" xml:space="preserve">
          <source>Note that this method is closely related to the logarithm base 2. For all positive &lt;code&gt;int&lt;/code&gt; values x:</source>
          <target state="translated">このメソッドは、対数の底2と密接に関連していることに注意してください。すべての正の &lt;code&gt;int&lt;/code&gt; 値xの場合：</target>
        </trans-unit>
        <trans-unit id="bd0441be66e5d6fa52ee698997e024320ab62a95" translate="yes" xml:space="preserve">
          <source>Note that this method is closely related to the logarithm base 2. For all positive &lt;code&gt;long&lt;/code&gt; values x:</source>
          <target state="translated">この方法は対数の底2と密接に関連していることに注意してください。すべての正の &lt;code&gt;long&lt;/code&gt; 値xの場合：</target>
        </trans-unit>
        <trans-unit id="b177aa3daa87387f07254a1305a9335e89e8ef05" translate="yes" xml:space="preserve">
          <source>Note that this method is executed only once.</source>
          <target state="translated">このメソッドは一度だけ実行されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4246746d66dd6bc090d92b55a4fe75b72024142f" translate="yes" xml:space="preserve">
          <source>Note that this method is identical in functionality to &lt;a href=&quot;#contains(java.lang.Object)&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; (which predates the &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; interface).</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#contains(java.lang.Object)&quot;&gt; &lt;code&gt;contains&lt;/code&gt; &lt;/a&gt;と機能が同じであることに注意してください（&lt;a href=&quot;map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;インターフェイスよりも前のものです）。</target>
        </trans-unit>
        <trans-unit id="1f7516ea894d475f1b968f7444c8c167aed023af" translate="yes" xml:space="preserve">
          <source>Note that this method is identical in functionality to &lt;a href=&quot;#containsValue(java.lang.Object)&quot;&gt;&lt;code&gt;containsValue(Object)&lt;/code&gt;&lt;/a&gt;, and exists solely to ensure full compatibility with class &lt;a href=&quot;../hashtable&quot;&gt;&lt;code&gt;Hashtable&lt;/code&gt;&lt;/a&gt;, which supported this method prior to introduction of the Java Collections Framework.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#containsValue(java.lang.Object)&quot;&gt; &lt;code&gt;containsValue(Object)&lt;/code&gt; &lt;/a&gt;と機能が同じであり、Javaコレクションフレームワークの導入前にこのメソッドをサポートしていたクラス&lt;a href=&quot;../hashtable&quot;&gt; &lt;code&gt;Hashtable&lt;/code&gt; &lt;/a&gt;との完全な互換性を確保するためにのみ存在することに注意してください。</target>
        </trans-unit>
        <trans-unit id="bb1e4aa770f04d58546154dbf8d6782ac6ec2ab4" translate="yes" xml:space="preserve">
          <source>Note that this method is identical in functionality to &lt;a href=&quot;#containsValue(java.lang.Object)&quot;&gt;&lt;code&gt;containsValue&lt;/code&gt;&lt;/a&gt;, (which is part of the &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; interface in the collections framework).</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#containsValue(java.lang.Object)&quot;&gt; &lt;code&gt;containsValue&lt;/code&gt; &lt;/a&gt;（コレクションフレームワークの&lt;a href=&quot;map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;インターフェイスの一部）と機能が同じであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="966c4ce85eb881416ac77e81f217612eeac1a64d" translate="yes" xml:space="preserve">
          <source>Note that this method is identical in functionality to &lt;a href=&quot;hashtable#contains-java.lang.Object-&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; (which predates the &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; interface).</source>
          <target state="translated">このメソッドの機能は、&lt;a href=&quot;hashtable#contains-java.lang.Object-&quot;&gt; &lt;code&gt;contains&lt;/code&gt; &lt;/a&gt;と同じです（&lt;a href=&quot;map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;インターフェースよりも古い）。</target>
        </trans-unit>
        <trans-unit id="2b3ffa961e85c18bf1fcbf365bd71d275411701d" translate="yes" xml:space="preserve">
          <source>Note that this method is identical in functionality to &lt;a href=&quot;hashtable#containsValue-java.lang.Object-&quot;&gt;&lt;code&gt;containsValue&lt;/code&gt;&lt;/a&gt;, (which is part of the &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; interface in the collections framework).</source>
          <target state="translated">このメソッドの機能は&lt;a href=&quot;hashtable#containsValue-java.lang.Object-&quot;&gt; &lt;code&gt;containsValue&lt;/code&gt; &lt;/a&gt;と同じです（これはコレクションフレームワークの&lt;a href=&quot;map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;インターフェースの一部です）。</target>
        </trans-unit>
        <trans-unit id="b37d06a604e1e64eee7ea9b46c91c1ab033efe66" translate="yes" xml:space="preserve">
          <source>Note that this method is identical to &lt;code&gt;appendZoneId()&lt;/code&gt; except in the mechanism used to obtain the zone.</source>
          <target state="translated">このメソッドは、ゾーンの取得に使用されるメカニズムを除いて、 &lt;code&gt;appendZoneId()&lt;/code&gt; と同じであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e6a32d16159408432a700f5390c4af48bb644349" translate="yes" xml:space="preserve">
          <source>Note that this method is identical to &lt;code&gt;appendZoneId()&lt;/code&gt; except in the mechanism used to obtain the zone. Note also that parsing accepts offsets, whereas formatting will never produce one.</source>
          <target state="translated">このメソッドは、ゾーンの取得に使用されるメカニズムを除いて、 &lt;code&gt;appendZoneId()&lt;/code&gt; と同じであることに注意してください。構文解析はオフセットを受け入れるが、フォーマットはオフセットを生成しないことにも注意してください。</target>
        </trans-unit>
        <trans-unit id="28c3977e6ed55d778f86a7dc3e903ddce83777f0" translate="yes" xml:space="preserve">
          <source>Note that this method is intended for simple cases where it is convenient to read all bytes into a byte array. It is not intended for reading in large files.</source>
          <target state="translated">このメソッドは、すべてのバイトをバイト配列に読み込むのに便利な単純な場合を対象としていることに注意してください。大きなファイルを読み込むことは意図していません。</target>
        </trans-unit>
        <trans-unit id="576bfc74b2f08fc61e5aa989e2be8d88ac2273a0" translate="yes" xml:space="preserve">
          <source>Note that this method is intended for simple cases where it is convenient to read all bytes into a byte array. It is not intended for reading input streams with large amounts of data.</source>
          <target state="translated">このメソッドは、すべてのバイトをバイト配列に読み込むのが便利な単純な場合を対象としていることに注意してください。これは、大量のデータを持つ入力ストリームを読み込むことを意図したものではありません。</target>
        </trans-unit>
        <trans-unit id="a0fa0cde9c64ed8274dcf0707bf3e19e94043a69" translate="yes" xml:space="preserve">
          <source>Note that this method is intended for simple cases where it is convenient to read all lines in a single operation. It is not intended for reading in large files.</source>
          <target state="translated">この方法は、一度の操作ですべての行を読み込むのに便利な単純な場合を対象としていることに注意してください。大きなファイルを読み込むことを意図したものではありません。</target>
        </trans-unit>
        <trans-unit id="07de1ec0939ac126800611c4a941e7c27e8a503d" translate="yes" xml:space="preserve">
          <source>Note that this method is intended for simple cases where it is convenient to read the specified number of bytes into a byte array. The total amount of memory allocated by this method is proportional to the number of bytes read from the stream which is bounded by &lt;code&gt;len&lt;/code&gt;. Therefore, the method may be safely called with very large values of &lt;code&gt;len&lt;/code&gt; provided sufficient memory is available.</source>
          <target state="translated">この方法は、指定されたバイト数をバイト配列に読み込むのが便利な単純な場合を対象としていることに注意してください。このメソッドによって割り当てられるメモリの合計量は、 &lt;code&gt;len&lt;/code&gt; によって制限されるストリームから読み取られるバイト数に比例します。したがって、十分なメモリが利用可能であれば、非常に大きな値の &lt;code&gt;len&lt;/code&gt; を使用してメソッドを安全に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="56b3cf977fbf294e60ff58b5f2113a576cf207fd" translate="yes" xml:space="preserve">
          <source>Note that this method is not the complement of the &lt;a href=&quot;#exists(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;exists&lt;/code&gt;&lt;/a&gt; method. Where it is not possible to determine if a file exists or not then both methods return &lt;code&gt;false&lt;/code&gt;. As with the &lt;code&gt;exists&lt;/code&gt; method, the result of this method is immediately outdated. If this method indicates the file does exist then there is no guarantee that a subsequent attempt to create the file will succeed. Care should be taken when using this method in security sensitive applications.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#exists(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;exists&lt;/code&gt; &lt;/a&gt;メソッドを補完するものではないことに注意してください。ファイルが存在するかどうかを判断できない場合は、両方のメソッドが &lt;code&gt;false&lt;/code&gt; を返します。 &lt;code&gt;exists&lt;/code&gt; メソッドと同様に、このメソッドの結果はすぐに古くなります。このメソッドがファイルが存在することを示している場合、ファイルを作成する後続の試行が成功するという保証はありません。セキュリティに敏感なアプリケーションでこの方法を使用する場合は注意が必要です。</target>
        </trans-unit>
        <trans-unit id="4538812a937a9f7b64aabc96676c3f0f780a15fb" translate="yes" xml:space="preserve">
          <source>Note that this method is not the complement of the &lt;a href=&quot;files#exists-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;exists&lt;/code&gt;&lt;/a&gt; method. Where it is not possible to determine if a file exists or not then both methods return &lt;code&gt;false&lt;/code&gt;. As with the &lt;code&gt;exists&lt;/code&gt; method, the result of this method is immediately outdated. If this method indicates the file does exist then there is no guarantee that a subsequence attempt to create the file will succeed. Care should be taken when using this method in security sensitive applications.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;files#exists-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;exists&lt;/code&gt; &lt;/a&gt;メソッドを補完するものではないことに注意してください。ファイルが存在するかどうかを判別できない場合、両方のメソッドが &lt;code&gt;false&lt;/code&gt; を返します。 &lt;code&gt;exists&lt;/code&gt; メソッドと同様に、このメソッドの結果はすぐに古くなります。このメソッドがファイルが存在することを示している場合、ファイルを作成するサブシーケンスの試行が成功する保証はありません。この方法をセキュリティ上重要なアプリケーションで使用する場合は注意が必要です。</target>
        </trans-unit>
        <trans-unit id="af46e2390301ab36cf58844f68139f609ff82b32" translate="yes" xml:space="preserve">
          <source>Note that this method is public but is used by the look and feel engine and should not be called by client applications.</source>
          <target state="translated">このメソッドは公開されていますが、ルックアンドフィールエンジンによって使用され、クライアントアプリケーションからは呼び出されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="5c536ae45fe51704315cd4860b374f8d2c7f1d48" translate="yes" xml:space="preserve">
          <source>Note that this method is security checked and is not available to (for example) untrusted applets. More specifically, if there is a security manager, its &lt;code&gt;checkPropertiesAccess&lt;/code&gt; method is called. This could result in a SecurityException.</source>
          <target state="translated">このメソッドはセキュリティチェックされており、（たとえば）信頼できないアプレットでは使用できないことに注意してください。具体的には、セキュリティマネージャーがある場合は、その &lt;code&gt;checkPropertiesAccess&lt;/code&gt; メソッドが呼び出されます。これにより、SecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="6a1013621b1c25803b67632835c2b6327a0957ce" translate="yes" xml:space="preserve">
          <source>Note that this method may be used to pass database- specific abstract data types, by using a driver-specific Java type. If the object is of a class implementing the interface &lt;code&gt;SQLData&lt;/code&gt;, the JDBC driver should call the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt; to write it to the SQL data stream. If, on the other hand, the object is of a class implementing &lt;code&gt;Ref&lt;/code&gt;, &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;Clob&lt;/code&gt;, &lt;code&gt;NClob&lt;/code&gt;, &lt;code&gt;Struct&lt;/code&gt;, &lt;code&gt;java.net.URL&lt;/code&gt;, &lt;code&gt;RowId&lt;/code&gt;, &lt;code&gt;SQLXML&lt;/code&gt; or &lt;code&gt;Array&lt;/code&gt;, the driver should pass it to the database as a value of the corresponding SQL type.</source>
          <target state="translated">このメソッドは、ドライバー固有のJava型を使用して、データベース固有の抽象データ型を渡すために使用できることに注意してください。オブジェクトがインターフェース &lt;code&gt;SQLData&lt;/code&gt; を実装するクラスのものである場合、JDBCドライバーはメソッド &lt;code&gt;SQLData.writeSQL&lt;/code&gt; を呼び出して、それをSQLデータ・ストリームに書き込む必要があります。一方、オブジェクトが &lt;code&gt;Ref&lt;/code&gt; 、 &lt;code&gt;Blob&lt;/code&gt; 、 &lt;code&gt;Clob&lt;/code&gt; 、 &lt;code&gt;NClob&lt;/code&gt; 、 &lt;code&gt;Struct&lt;/code&gt; 、 &lt;code&gt;java.net.URL&lt;/code&gt; 、 &lt;code&gt;RowId&lt;/code&gt; 、 &lt;code&gt;SQLXML&lt;/code&gt; 、または &lt;code&gt;Array&lt;/code&gt; を実装するクラスの場合、ドライバーは対応する値としてデータベースに渡す必要があります。 SQLタイプ。</target>
        </trans-unit>
        <trans-unit id="f6b1b3b07894fb34fc1c6f37da4f2f7e640d8cf6" translate="yes" xml:space="preserve">
          <source>Note that this method may be used to pass database- specific abstract data types, by using a driver-specific Java type. If the object is of a class implementing the interface &lt;code&gt;SQLData&lt;/code&gt;, the JDBC driver should call the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt; to write it to the SQL data stream. If, on the other hand, the object is of a class implementing &lt;code&gt;Ref&lt;/code&gt;, &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;Clob&lt;/code&gt;, &lt;code&gt;NClob&lt;/code&gt;, &lt;code&gt;Struct&lt;/code&gt;, &lt;code&gt;java.net.URL&lt;/code&gt;, or &lt;code&gt;Array&lt;/code&gt;, the driver should pass it to the database as a value of the corresponding SQL type.</source>
          <target state="translated">このメソッドは、ドライバー固有のJava型を使用して、データベース固有の抽象データ型を渡すために使用できることに注意してください。オブジェクトがインターフェース &lt;code&gt;SQLData&lt;/code&gt; を実装するクラスのものである場合、JDBCドライバーはメソッド &lt;code&gt;SQLData.writeSQL&lt;/code&gt; を呼び出して、それをSQLデータ・ストリームに書き込む必要があります。一方、オブジェクトが &lt;code&gt;Ref&lt;/code&gt; 、 &lt;code&gt;Blob&lt;/code&gt; 、 &lt;code&gt;Clob&lt;/code&gt; 、 &lt;code&gt;NClob&lt;/code&gt; 、 &lt;code&gt;Struct&lt;/code&gt; 、 &lt;code&gt;java.net.URL&lt;/code&gt; 、または &lt;code&gt;Array&lt;/code&gt; を実装するクラスである場合、ドライバーは対応するSQLタイプの値としてデータベースに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="50668c292bb17d26944090bb68d263a3c5bc6986" translate="yes" xml:space="preserve">
          <source>Note that this method may be used to pass database- specific abstract data types.</source>
          <target state="translated">このメソッドは、データベース固有の抽象データ型を渡すために使用できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e7d4c1e090a790c3de485c0151a929ce42d41c96" translate="yes" xml:space="preserve">
          <source>Note that this method may be used to pass database-specific abstract data types by using a driver-specific Java type. If the object is of a class implementing &lt;code&gt;SQLData&lt;/code&gt;, the rowset should call the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt; to write the object to an &lt;code&gt;SQLOutput&lt;/code&gt; data stream. If, on the other hand, the object is of a class implementing &lt;code&gt;Ref&lt;/code&gt;, &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;Clob&lt;/code&gt;, &lt;code&gt;NClob&lt;/code&gt;, &lt;code&gt;Struct&lt;/code&gt;, &lt;code&gt;java.net.URL&lt;/code&gt;, or &lt;code&gt;Array&lt;/code&gt;, the driver should pass it to the database as a value of the corresponding SQL type.</source>
          <target state="translated">このメソッドは、ドライバー固有のJava型を使用して、データベース固有の抽象データ型を渡すために使用できることに注意してください。オブジェクトが &lt;code&gt;SQLData&lt;/code&gt; を実装するクラスのものである場合、行セットはメソッド &lt;code&gt;SQLData.writeSQL&lt;/code&gt; を呼び出して、オブジェクトを &lt;code&gt;SQLOutput&lt;/code&gt; データストリームに書き込む必要があります。一方、オブジェクトが &lt;code&gt;Ref&lt;/code&gt; 、 &lt;code&gt;Blob&lt;/code&gt; 、 &lt;code&gt;Clob&lt;/code&gt; 、 &lt;code&gt;NClob&lt;/code&gt; 、 &lt;code&gt;Struct&lt;/code&gt; 、 &lt;code&gt;java.net.URL&lt;/code&gt; 、または &lt;code&gt;Array&lt;/code&gt; を実装するクラスである場合、ドライバーは対応するSQLタイプの値としてデータベースに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="553d4117f60da0fb301a0966016f70aca8113905" translate="yes" xml:space="preserve">
          <source>Note that this method may be used to pass database-specific abstract data types.</source>
          <target state="translated">このメソッドは、データベース固有の抽象データ型を渡すために使用されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2a7730bd819d75e6aa02578efa2e9441e7a2bf25" translate="yes" xml:space="preserve">
          <source>Note that this method may be used to pass datatabase- specific abstract data types.</source>
          <target state="translated">このメソッドは、データベース固有の抽象データ型を渡すために使用されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="696d88c7e4fbeaa6d598552c1c9ec811d23f5407" translate="yes" xml:space="preserve">
          <source>Note that this method may not be able to return a &lt;code&gt;double&lt;/code&gt; NaN with exactly same bit pattern as the &lt;code&gt;long&lt;/code&gt; argument. IEEE 754 distinguishes between two kinds of NaNs, quiet NaNs and</source>
          <target state="translated">このメソッドは、 &lt;code&gt;long&lt;/code&gt; 引数とまったく同じビットパターンの &lt;code&gt;double&lt;/code&gt; NaN を返すことができない場合があることに注意してください。IEEE 754は、2種類のNaNを区別します。</target>
        </trans-unit>
        <trans-unit id="99db841235c5ffab9ca03c9f0d8ccfef1739d0ac" translate="yes" xml:space="preserve">
          <source>Note that this method may not be able to return a &lt;code&gt;float&lt;/code&gt; NaN with exactly same bit pattern as the &lt;code&gt;int&lt;/code&gt; argument. IEEE 754 distinguishes between two kinds of NaNs, quiet NaNs and</source>
          <target state="translated">このメソッドは、 &lt;code&gt;int&lt;/code&gt; 引数とまったく同じビットパターンを持つ &lt;code&gt;float&lt;/code&gt; NaN を返すことができない場合があることに注意してください。IEEE 754は、2種類のNaNを区別します。</target>
        </trans-unit>
        <trans-unit id="4c707cfe9b0be5010f0ba7940f4114887cccbbc2" translate="yes" xml:space="preserve">
          <source>Note that this method propagates any exception thrown by the nullary constructor, including a checked exception. Use of this method effectively bypasses the compile-time exception checking that would otherwise be performed by the compiler. The &lt;a href=&quot;reflect/constructor#newInstance-java.lang.Object...-&quot;&gt;&lt;code&gt;Constructor.newInstance&lt;/code&gt;&lt;/a&gt; method avoids this problem by wrapping any exception thrown by the constructor in a (checked) &lt;a href=&quot;reflect/invocationtargetexception&quot;&gt;&lt;code&gt;InvocationTargetException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、チェックされた例外を含め、nullaryコンストラクターによってスローされたすべての例外を伝達することに注意してください。このメソッドを使用すると、コンパイラーによって実行されるはずのコンパイル時の例外チェックを効果的にバイパスできます。&lt;a href=&quot;reflect/constructor#newInstance-java.lang.Object...-&quot;&gt; &lt;code&gt;Constructor.newInstance&lt;/code&gt; の&lt;/a&gt;方法は、（チェック）にコンストラクタによってスローされた例外ラップすることにより、この問題を回避し&lt;a href=&quot;reflect/invocationtargetexception&quot;&gt; &lt;code&gt;InvocationTargetException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6f2ec30f1341df7ef8b9ea732a2e91136cb668fc" translate="yes" xml:space="preserve">
          <source>Note that this method provides similar functionality to methods on &lt;code&gt;DateFormat&lt;/code&gt; such as &lt;a href=&quot;../../text/dateformat#getDateTimeInstance(int,int)&quot;&gt;&lt;code&gt;DateFormat.getDateTimeInstance(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../../text/dateformat#getDateTimeInstance(int,int)&quot;&gt; &lt;code&gt;DateFormat.getDateTimeInstance(int, int)&lt;/code&gt; &lt;/a&gt;などの &lt;code&gt;DateFormat&lt;/code&gt; のメソッドと同様の機能を提供することに注意してください。</target>
        </trans-unit>
        <trans-unit id="c2b76a1b626eab6d7248d3bd24d3815277260de1" translate="yes" xml:space="preserve">
          <source>Note that this method provides similar functionality to methods on &lt;code&gt;DateFormat&lt;/code&gt; such as &lt;a href=&quot;../../text/dateformat#getDateTimeInstance-int-int-&quot;&gt;&lt;code&gt;DateFormat.getDateTimeInstance(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../../text/dateformat#getDateTimeInstance-int-int-&quot;&gt; &lt;code&gt;DateFormat.getDateTimeInstance(int, int)&lt;/code&gt; &lt;/a&gt;などの &lt;code&gt;DateFormat&lt;/code&gt; のメソッドと同様の機能を提供することに注意してください。</target>
        </trans-unit>
        <trans-unit id="12d9c9d351d4678f222639e1a82253b1be4f2d86" translate="yes" xml:space="preserve">
          <source>Note that this method returns a reference to the password. If a clone of the array is created it is the caller's responsibility to zero out the password information after it is no longer needed.</source>
          <target state="translated">このメソッドはパスワードへの参照を返すことに注意してください。配列のクローンが作成された場合は、パスワード情報が不要になった後にゼロアウトするのは呼び出し側の責任です。</target>
        </trans-unit>
        <trans-unit id="6b7f1e14f1eb10864276d31bd94bfd0f39407834" translate="yes" xml:space="preserve">
          <source>Note that this method returns a reference to the password. It is the caller's responsibility to zero out the password information after it is no longer needed.</source>
          <target state="translated">このメソッドはパスワードへの参照を返すことに注意してください。パスワード情報が不要になった後にゼロアウトするのは呼び出し元の責任です。</target>
        </trans-unit>
        <trans-unit id="dfe51901c961117b55961f779113b9ab751bfbef" translate="yes" xml:space="preserve">
          <source>Note that this method sets the default fetch direction for result sets generated by this &lt;code&gt;Statement&lt;/code&gt; object. Each result set has its own methods for getting and setting its own fetch direction.</source>
          <target state="translated">このメソッドは、この &lt;code&gt;Statement&lt;/code&gt; オブジェクトによって生成された結果セットのデフォルトのフェッチ方向を設定することに注意してください。各結果セットには、独自のフェッチ方向を取得および設定するための独自のメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="142466c43ed923eac8ea1fef7a9199aa60dd0025" translate="yes" xml:space="preserve">
          <source>Note that this method should be primarily used to initialize the state of the check box menu item. Programmatically setting the state of the check box menu item will</source>
          <target state="translated">このメソッドは、主にチェック・ボックス・メニュー項目の状態を初期化するために使用することに注意してください。チェック・ボックス・メニュー項目の状態をプログラムで設定すると、次のようになります。</target>
        </trans-unit>
        <trans-unit id="d35ae4657737da617ea6337f36ace435fea4112c" translate="yes" xml:space="preserve">
          <source>Note that this method should be primarily used to initialize the state of the checkbox. Programmatically setting the state of the checkbox will</source>
          <target state="translated">このメソッドは、主にチェックボックスの状態を初期化するために使用することに注意してください。プログラムでチェックボックスの状態を設定すると、次のようになります。</target>
        </trans-unit>
        <trans-unit id="f32fd67b4ed6bea16ffb22dc0246fe4e75a32573" translate="yes" xml:space="preserve">
          <source>Note that this method should be primarily used to initially select an item in this component. Programmatically calling this method will</source>
          <target state="translated">このメソッドは、主にこのコンポーネントのアイテムを最初に選択するために使用することに注意してください。プログラムでこのメソッドを呼び出すと</target>
        </trans-unit>
        <trans-unit id="b422a1d63f4f0ffbda45d1b435ba9cb1ded5c119" translate="yes" xml:space="preserve">
          <source>Note that this method supports only the bit mask-based ranges. Call &lt;a href=&quot;#getRangeSet()&quot;&gt;&lt;code&gt;getRangeSet()&lt;/code&gt;&lt;/a&gt; for the enum-based ranges.</source>
          <target state="translated">この方法は、ビットマスクベースの範囲のみをサポートすることに注意してください。列挙型の範囲に対して&lt;a href=&quot;#getRangeSet()&quot;&gt; &lt;code&gt;getRangeSet()&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="805ac6ba76cb55023340f31df6b16e4bc7aec282" translate="yes" xml:space="preserve">
          <source>Note that this method throws errors related to loading, linking or initializing as specified in Sections 12.2, 12.3 and 12.4 of &lt;em&gt;The Java Language Specification&lt;/em&gt;. Note that this method does not check whether the requested class is accessible to its caller.</source>
          <target state="translated">このメソッドは、&lt;em&gt;Java言語仕様の&lt;/em&gt;セクション12.2、12.3、および12.4で指定されているロード、リンク、または初期化に関連するエラーをスローすることに注意してください。このメソッドは、要求されたクラスが呼び出し側からアクセス可能かどうかをチェックしないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="ee028283d18fd793b2649a0899170975f3d894e8" translate="yes" xml:space="preserve">
          <source>Note that this method uses the &lt;a href=&quot;#addTo(java.util.Calendar)&quot;&gt;&lt;code&gt;addTo(Calendar)&lt;/code&gt;&lt;/a&gt; method, which may work incorrectly with &lt;code&gt;Duration&lt;/code&gt; objects with very large values in its fields. See the &lt;a href=&quot;#addTo(java.util.Calendar)&quot;&gt;&lt;code&gt;addTo(Calendar)&lt;/code&gt;&lt;/a&gt; method for details.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#addTo(java.util.Calendar)&quot;&gt; &lt;code&gt;addTo(Calendar)&lt;/code&gt; &lt;/a&gt;メソッドを使用することに注意してください。これは、フィールドに非常に大きな値を持つ &lt;code&gt;Duration&lt;/code&gt; オブジェクトでは正しく機能しない可能性があります。詳細については、&lt;a href=&quot;#addTo(java.util.Calendar)&quot;&gt; &lt;code&gt;addTo(Calendar)&lt;/code&gt; &lt;/a&gt;メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="60c0a9df7c1489a4d6bfeea45d2e9818706900bd" translate="yes" xml:space="preserve">
          <source>Note that this method uses the &lt;a href=&quot;#addTo(java.util.Date)&quot;&gt;&lt;code&gt;addTo(Date)&lt;/code&gt;&lt;/a&gt; method, which may work incorrectly with &lt;code&gt;Duration&lt;/code&gt; objects with very large values in its fields. See the &lt;a href=&quot;#addTo(java.util.Date)&quot;&gt;&lt;code&gt;addTo(Date)&lt;/code&gt;&lt;/a&gt; method for details.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#addTo(java.util.Date)&quot;&gt; &lt;code&gt;addTo(Date)&lt;/code&gt; &lt;/a&gt;メソッドを使用することに注意してください。これは、フィールドに非常に大きな値を持つ &lt;code&gt;Duration&lt;/code&gt; オブジェクトでは正しく機能しない可能性があります。詳細については、&lt;a href=&quot;#addTo(java.util.Date)&quot;&gt; &lt;code&gt;addTo(Date)&lt;/code&gt; &lt;/a&gt;メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="51c991358efc6fdab00e0efd7eb0e963522c2717" translate="yes" xml:space="preserve">
          <source>Note that this method will not be usable in environments where the caller (perhaps an applet) is not permitted to load classes dynamically.</source>
          <target state="translated">このメソッドは、呼び出し元 (おそらくアプレット)がクラスを動的にロードすることを許可されていない環境では使用できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="84470b99872e593b80de8a654e4099aa1a42862a" translate="yes" xml:space="preserve">
          <source>Note that this method will not scroll outside of the valid viewport; for example, if &lt;code&gt;contentRect&lt;/code&gt; is larger than the viewport, scrolling will be confined to the viewport's bounds.</source>
          <target state="translated">このメソッドは有効なビューポートの外側にスクロールしないことに注意してください。たとえば、 &lt;code&gt;contentRect&lt;/code&gt; がビューポートよりも大きい場合、スクロールはビューポートの境界に制限されます。</target>
        </trans-unit>
        <trans-unit id="2c135ec7686c884cbfa703e4257e9a93c4683519" translate="yes" xml:space="preserve">
          <source>Note that this method will only be called if the ObjectOutputStream is not using the old serialization stream format (set by calling ObjectOutputStream's &lt;code&gt;useProtocolVersion&lt;/code&gt; method). If this serialization stream is using the old format (&lt;code&gt;PROTOCOL_VERSION_1&lt;/code&gt;), the class descriptor will be written internally in a manner that cannot be overridden or customized.</source>
          <target state="translated">このメソッドは、ObjectOutputStreamが古い直列化ストリーム形式（ObjectOutputStreamの &lt;code&gt;useProtocolVersion&lt;/code&gt; メソッドを呼び出すことによって設定）を使用していない場合にのみ呼び出されることに注意してください。このシリアル化ストリームが古い形式（ &lt;code&gt;PROTOCOL_VERSION_1&lt;/code&gt; ）を使用している場合、クラス記述子はオーバーライドまたはカスタマイズできない方法で内部的に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="9836a98493b03a9138a4744311c0c0e9dbbc0ca5" translate="yes" xml:space="preserve">
          <source>Note that this method will reset the byte stream if it is provided, or the character stream if the byte stream is not provided.</source>
          <target state="translated">このメソッドは、バイト・ストリームが提供されている場合はバイト・ストリームをリセットし、バイト・ストリームが提供されていない場合は文字ストリームをリセットすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6b4c803bd907f1cd9a6ea01493bf0b78266af8d4" translate="yes" xml:space="preserve">
          <source>Note that this notification mechanism has nothing to do with threads and is completely separate from the &lt;code&gt;wait&lt;/code&gt; and &lt;code&gt;notify&lt;/code&gt; mechanism of class &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">この通知メカニズムはスレッドとは関係がなく、クラス &lt;code&gt;Object&lt;/code&gt; の &lt;code&gt;wait&lt;/code&gt; および &lt;code&gt;notify&lt;/code&gt; メカニズムとは完全に分離されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="55d1f6a9c47780474a2729c0424f32c202de9d28" translate="yes" xml:space="preserve">
          <source>Note that this sourceClassName is not verified and may be spoofed. This information may either have been provided as part of the logging call, or it may have been inferred automatically by the logging framework. In the latter case, the information may only be approximate and may in fact describe an earlier call on the stack frame.</source>
          <target state="translated">この sourceClassName は検証されておらず、偽装されている可能性があることに注意してください。この情報は、ロギング呼び出しの一部として提供されたか、ロギングフレームワークによって自動的に推測されたかのどちらかかもしれません。後者の場合、情報はおおよそのものであり、実際にはスタックフレーム上の以前の呼び出しを記述しているかもしれません。</target>
        </trans-unit>
        <trans-unit id="4fecf0125546b77ee442bf47a1deb3e28d7aaefd" translate="yes" xml:space="preserve">
          <source>Note that this sourceMethodName is not verified and may be spoofed. This information may either have been provided as part of the logging call, or it may have been inferred automatically by the logging framework. In the latter case, the information may only be approximate and may in fact describe an earlier call on the stack frame.</source>
          <target state="translated">このsourceMethodNameは検証されておらず、偽装されている可能性があることに注意してください。この情報はロギング・コールの一部として提供されたか、ロギング・フレームワークによって自動的に推測されたかのどちらかかもしれません。後者の場合、情報はおおよそのものであり、実際にはスタックフレーム上の以前の呼び出しを記述しているかもしれません。</target>
        </trans-unit>
        <trans-unit id="072c9369f2d0d7264b8145910d01f238de126855" translate="yes" xml:space="preserve">
          <source>Note that this value does not necessarily reflect the instantaneous level of the sound produced by this voice; that level is the result of many contributing factors, including the current instrument and the shape of the amplitude envelope it produces.</source>
          <target state="translated">この値は、必ずしもこの声が発する音の瞬間的なレベルを反映しているわけではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="207e2858d8fbb89a9e980fbe4de50e9d78b6f8e0" translate="yes" xml:space="preserve">
          <source>Note that to use a particular &lt;a href=&quot;../../../java/nio/charset/charset&quot;&gt;charset&lt;/a&gt; to encode the contents of the file, an &lt;code&gt;OutputStreamWriter&lt;/code&gt; with the chosen charset can be created from the &lt;code&gt;OutputStream&lt;/code&gt; from the returned object. If the &lt;code&gt;Writer&lt;/code&gt; from the returned object is directly used for writing, its charset is determined by the implementation. An annotation processing tool may have an &lt;code&gt;-encoding&lt;/code&gt; flag or analogous option for specifying this; otherwise, it will typically be the platform's default encoding.</source>
          <target state="translated">特定の&lt;a href=&quot;../../../java/nio/charset/charset&quot;&gt;文字セット&lt;/a&gt;を使用してファイルのコンテンツをエンコードするには、返されたオブジェクトの &lt;code&gt;OutputStream&lt;/code&gt; から、選択した文字セットを持つ &lt;code&gt;OutputStreamWriter&lt;/code&gt; を作成できることに注意してください。場合 &lt;code&gt;Writer&lt;/code&gt; 返されたオブジェクトからは直接書き込みに使用され、その文字セットは実装によって決定されます。注釈処理ツールには、 &lt;code&gt;-encoding&lt;/code&gt; フラグまたはこれを指定するための類似のオプションがあります。それ以外の場合、通常はプラットフォームのデフォルトのエンコーディングになります。</target>
        </trans-unit>
        <trans-unit id="6a4e909d9659e363b65c49c622d4ba876251e24f" translate="yes" xml:space="preserve">
          <source>Note that tracks are not by default enabled for recording. In order to record MIDI data, at least one track must be specifically enabled for recording.</source>
          <target state="translated">トラックはデフォルトでは録音が有効になっていないことに注意してください。MIDIデータを録音するためには、少なくとも1つのトラックが録音用に特別に有効になっている必要があります。</target>
        </trans-unit>
        <trans-unit id="2bbf644c605a281f000618bbb262296d588bd839" translate="yes" xml:space="preserve">
          <source>Note that trailing format specifiers, specifiers that determine the type of a floating-point literal (&lt;code&gt;1.0f&lt;/code&gt; is a &lt;code&gt;float&lt;/code&gt; value; &lt;code&gt;1.0d&lt;/code&gt; is a &lt;code&gt;double&lt;/code&gt; value), do &lt;em&gt;not&lt;/em&gt; influence the results of this method. In other words, the numerical value of the input string is converted directly to the target floating-point type. In general, the two-step sequence of conversions, string to &lt;code&gt;double&lt;/code&gt; followed by &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;float&lt;/code&gt;, is &lt;em&gt;not&lt;/em&gt; equivalent to converting a string directly to &lt;code&gt;float&lt;/code&gt;. For example, if first converted to an intermediate &lt;code&gt;double&lt;/code&gt; and then to &lt;code&gt;float&lt;/code&gt;, the string</source>
          <target state="translated">末尾のフォーマット指定子、浮動小数点リテラルのタイプを決定する指定子（ &lt;code&gt;1.0f&lt;/code&gt; は &lt;code&gt;float&lt;/code&gt; 値、 &lt;code&gt;1.0d&lt;/code&gt; は &lt;code&gt;double&lt;/code&gt; 値）は、このメソッドの結果に影響を与え&lt;em&gt;ない&lt;/em&gt;ことに注意してください。つまり、入力文字列の数値は、ターゲットの浮動小数点型に直接変換されます。一般に、文字列から &lt;code&gt;double&lt;/code&gt; に続いて &lt;code&gt;double&lt;/code&gt; から &lt;code&gt;float&lt;/code&gt; への2段階の変換シーケンスは、文字列を直接 &lt;code&gt;float&lt;/code&gt; に変換することと同じではあり&lt;em&gt;ません&lt;/em&gt;。たとえば、最初に中間 &lt;code&gt;double&lt;/code&gt; に変換し、次に &lt;code&gt;float&lt;/code&gt; 変換した場合、文字列</target>
        </trans-unit>
        <trans-unit id="6716acfb0124f8d53ffe289e1b47bcf968a971e7" translate="yes" xml:space="preserve">
          <source>Note that trailing format specifiers, specifiers that determine the type of a floating-point literal (&lt;code&gt;1.0f&lt;/code&gt; is a &lt;code&gt;float&lt;/code&gt; value; &lt;code&gt;1.0d&lt;/code&gt; is a &lt;code&gt;double&lt;/code&gt; value), do &lt;em&gt;not&lt;/em&gt; influence the results of this method. In other words, the numerical value of the input string is converted directly to the target floating-point type. The two-step sequence of conversions, string to &lt;code&gt;float&lt;/code&gt; followed by &lt;code&gt;float&lt;/code&gt; to &lt;code&gt;double&lt;/code&gt;, is &lt;em&gt;not&lt;/em&gt; equivalent to converting a string directly to &lt;code&gt;double&lt;/code&gt;. For example, the &lt;code&gt;float&lt;/code&gt; literal &lt;code&gt;0.1f&lt;/code&gt; is equal to the &lt;code&gt;double&lt;/code&gt; value &lt;code&gt;0.10000000149011612&lt;/code&gt;; the &lt;code&gt;float&lt;/code&gt; literal &lt;code&gt;0.1f&lt;/code&gt; represents a different numerical value than the &lt;code&gt;double&lt;/code&gt; literal &lt;code&gt;0.1&lt;/code&gt;. (The numerical value 0.1 cannot be exactly represented in a binary floating-point number.)</source>
          <target state="translated">末尾のフォーマット指定子、浮動小数点リテラルのタイプを決定する指定子（ &lt;code&gt;1.0f&lt;/code&gt; は &lt;code&gt;float&lt;/code&gt; 値、 &lt;code&gt;1.0d&lt;/code&gt; は &lt;code&gt;double&lt;/code&gt; 値）は、このメソッドの結果に影響を与え&lt;em&gt;ない&lt;/em&gt;ことに注意してください。つまり、入力文字列の数値は、ターゲットの浮動小数点型に直接変換されます。文字列から &lt;code&gt;float&lt;/code&gt; に続いて &lt;code&gt;float&lt;/code&gt; から &lt;code&gt;double&lt;/code&gt; への2ステップの変換シーケンスは、文字列を直接 &lt;code&gt;double&lt;/code&gt; に変換することと同じではあり&lt;em&gt;ません&lt;/em&gt;。たとえば、 &lt;code&gt;float&lt;/code&gt; リテラル &lt;code&gt;0.1f&lt;/code&gt; は &lt;code&gt;double&lt;/code&gt; に等しい値 &lt;code&gt;0.10000000149011612&lt;/code&gt; ; &lt;code&gt;float&lt;/code&gt; リテラル &lt;code&gt;0.1f&lt;/code&gt; 異なる数値で表す &lt;code&gt;double&lt;/code&gt; リテラル &lt;code&gt;0.1&lt;/code&gt; 。（数値0.1を2進浮動小数点数で正確に表すことはできません。）</target>
        </trans-unit>
        <trans-unit id="fcef5cfdd10d59acbdf3f4548f1f32292907968d" translate="yes" xml:space="preserve">
          <source>Note that unless a query method exists for a capability, it must be supported by all &lt;code&gt;ImageReader&lt;/code&gt; implementations (</source>
          <target state="translated">機能のクエリメソッドが存在しない限り、すべての &lt;code&gt;ImageReader&lt;/code&gt; 実装でサポートされている必要があります（</target>
        </trans-unit>
        <trans-unit id="d366be049fdb017948d0324c3732cd70c194a8c5" translate="yes" xml:space="preserve">
          <source>Note that unless a query method exists for a capability, it must be supported by all &lt;code&gt;ImageWriter&lt;/code&gt; implementations (</source>
          <target state="translated">機能のクエリメソッドが存在しない限り、すべての &lt;code&gt;ImageWriter&lt;/code&gt; 実装でサポートされている必要があります（</target>
        </trans-unit>
        <trans-unit id="e1cb4f0ec383633bbf43f9b612cc119172f5fa55" translate="yes" xml:space="preserve">
          <source>Note that unlike the &lt;a href=&quot;../io/closeable#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method of &lt;a href=&quot;../io/closeable&quot;&gt;&lt;code&gt;Closeable&lt;/code&gt;&lt;/a&gt;, this &lt;code&gt;close&lt;/code&gt; method is &lt;em&gt;not&lt;/em&gt; required to be idempotent. In other words, calling this &lt;code&gt;close&lt;/code&gt; method more than once may have some visible side effect, unlike &lt;code&gt;Closeable.close&lt;/code&gt; which is required to have no effect if called more than once. However, implementers of this interface are strongly encouraged to make their &lt;code&gt;close&lt;/code&gt; methods idempotent.</source>
          <target state="translated">&lt;a href=&quot;../io/closeable&quot;&gt; &lt;code&gt;Closeable&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;../io/closeable#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドとは異なり、この &lt;code&gt;close&lt;/code&gt; メソッドはべき等である必要は&lt;em&gt;ない&lt;/em&gt;ことに注意してください。つまり、この &lt;code&gt;close&lt;/code&gt; メソッドを複数回呼び出すと、複数回呼び出された場合に効果がない必要がある &lt;code&gt;Closeable.close&lt;/code&gt; とは異なり、目に見える副作用が発生する可能性があります。ただし、このインターフェイスの実装者は、 &lt;code&gt;close&lt;/code&gt; メソッドをべき等にすることを強くお勧めします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a30da7354901dee5f1d818bad173553c3e9b94a2" translate="yes" xml:space="preserve">
          <source>Note that unlike the &lt;a href=&quot;../io/closeable#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method of &lt;a href=&quot;../io/closeable&quot;&gt;&lt;code&gt;Closeable&lt;/code&gt;&lt;/a&gt;, this &lt;code&gt;close&lt;/code&gt; method is &lt;em&gt;not&lt;/em&gt; required to be idempotent. In other words, calling this &lt;code&gt;close&lt;/code&gt; method more than once may have some visible side effect, unlike &lt;code&gt;Closeable.close&lt;/code&gt; which is required to have no effect if called more than once. However, implementers of this interface are strongly encouraged to make their &lt;code&gt;close&lt;/code&gt; methods idempotent.</source>
          <target state="translated">&lt;a href=&quot;../io/closeable&quot;&gt; &lt;code&gt;Closeable&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;../io/closeable#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドとは異なり、この &lt;code&gt;close&lt;/code&gt; メソッドはべき等である必要は&lt;em&gt;ない&lt;/em&gt;ことに注意してください。つまり、この &lt;code&gt;close&lt;/code&gt; メソッドを2回以上呼び出すと、目に見える副作用が発生する可能性があります。これは、2回以上呼び出すと効果がないことが必要な &lt;code&gt;Closeable.close&lt;/code&gt; とは異なります。ただし、このインターフェイスの実装者は、 &lt;code&gt;close&lt;/code&gt; メソッドをべき等にすることを強くお勧めします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="463b310cfe0a3025153890ea8ed2d15070d4468b" translate="yes" xml:space="preserve">
          <source>Note that updates to &lt;code&gt;Attribute&lt;/code&gt; (such as adding or removing a value) do not affect the corresponding representation of the attribute in the directory. Updates to the directory can only be effected using operations in the &lt;code&gt;DirContext&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;Attribute&lt;/code&gt; の更新（値の追加や削除など）は、ディレクトリ内の対応する属性の表現に影響を与えないことに注意してください。ディレクトリの更新は、 &lt;code&gt;DirContext&lt;/code&gt; インターフェースの操作を使用してのみ実行できます。</target>
        </trans-unit>
        <trans-unit id="9658d928e17ed5bc32b8907400db77094be24023" translate="yes" xml:space="preserve">
          <source>Note that updates to &lt;code&gt;BasicAttribute&lt;/code&gt; (such as adding or removing a value) does not affect the corresponding representation of the attribute in the directory. Updates to the directory can only be effected using operations in the &lt;code&gt;DirContext&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;BasicAttribute&lt;/code&gt; の更新（値の追加や削除など）は、ディレクトリ内の対応する属性の表現に影響を与えないことに注意してください。ディレクトリの更新は、 &lt;code&gt;DirContext&lt;/code&gt; インターフェースの操作を使用してのみ実行できます。</target>
        </trans-unit>
        <trans-unit id="2d9cc65a9f73f29d33f4ea5be300462a48c22763" translate="yes" xml:space="preserve">
          <source>Note that updates to Attributes (such as adding or removing an attribute) do not affect the corresponding representation in the directory. Updates to the directory can only be effected using operations in the DirContext interface.</source>
          <target state="translated">属性の更新(属性の追加や削除など)は、ディレクトリ内の対応する表現には影響しないことに注意してください。ディレクトリへの更新は、DirContext インターフェースの操作を使用してのみ有効です。</target>
        </trans-unit>
        <trans-unit id="750ce2520a6a585da6d396316ab26f61252e2cb5" translate="yes" xml:space="preserve">
          <source>Note that updates to BasicAttributes (such as adding or removing an attribute) does not affect the corresponding representation in the directory. Updates to the directory can only be effected using operations in the DirContext interface.</source>
          <target state="translated">BasicAttributes の更新 (属性の追加や削除など)は、ディレクトリ内の対応する表現には影響しないことに注意してください。ディレクトリへの更新は、DirContext インターフェースの操作を使用してのみ有効です。</target>
        </trans-unit>
        <trans-unit id="6e4ae42cc278ca49314365093d2e8dd37bbe8b83" translate="yes" xml:space="preserve">
          <source>Note that user code cannot perform such an action directly in a subclass constructor, since the target must be fixed before the &lt;code&gt;ConstantCallSite&lt;/code&gt; constructor returns.</source>
          <target state="translated">&lt;code&gt;ConstantCallSite&lt;/code&gt; コンストラクターが戻る前にターゲットを修正する必要があるため、ユーザーコードはサブクラスコンストラクターでこのようなアクションを直接実行できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="f79ec50bd9087460aae4469560b406104ab064d0" translate="yes" xml:space="preserve">
          <source>Note that we declare the value of the returned expression so that the value of the expression (as returned by &lt;code&gt;getValue&lt;/code&gt;) will be identical to &lt;code&gt;oldInstance&lt;/code&gt;.</source>
          <target state="translated">式の値（ &lt;code&gt;getValue&lt;/code&gt; によって返される）が &lt;code&gt;oldInstance&lt;/code&gt; と同じになるように、返される式の値を宣言することに注意してください。</target>
        </trans-unit>
        <trans-unit id="c75e9a6ff05a55d9a150fd1393998104746b2424" translate="yes" xml:space="preserve">
          <source>Note that when a &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; is added to &lt;code&gt;PKIXParameters&lt;/code&gt;, it clones the &lt;code&gt;PKIXRevocationChecker&lt;/code&gt;; thus any subsequent modifications to the &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; have no effect.</source>
          <target state="translated">ときに注意 &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; がに追加さ &lt;code&gt;PKIXParameters&lt;/code&gt; の、それが複製し &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; を、したがって、 &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; に対するその後の変更は効果がありません。</target>
        </trans-unit>
        <trans-unit id="473638d91537ea67128bf789916fd2efeb4aa2db" translate="yes" xml:space="preserve">
          <source>Note that when a Cipher object is initialized, it loses all previously-acquired state. In other words, initializing a Cipher is equivalent to creating a new instance of that Cipher and initializing it.</source>
          <target state="translated">サイファーオブジェクトが初期化されると、以前に取得したすべての状態を失うことに注意してください。言い換えれば、サイファーを初期化することは、そのサイファーの新しいインスタンスを作成して初期化することと同じです。</target>
        </trans-unit>
        <trans-unit id="300a2db0a001c3ca5ab320a539a7a1566452da5e" translate="yes" xml:space="preserve">
          <source>Note that when multiple windows is grouped in the task area the behavior is platform specific.</source>
          <target state="translated">タスクエリアで複数のウィンドウがグループ化されている場合、動作はプラットフォーム固有のものになることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7ccbb44d396138e99d2c81b88d2a1f2ee0b1dc2f" translate="yes" xml:space="preserve">
          <source>Note that when one exception &lt;a href=&quot;#initCause(java.lang.Throwable)&quot;&gt;causes&lt;/a&gt; another exception, the first exception is usually caught and then the second exception is thrown in response. In other words, there is a causal connection between the two exceptions. In contrast, there are situations where two independent exceptions can be thrown in sibling code blocks, in particular in the &lt;code&gt;try&lt;/code&gt; block of a &lt;code&gt;try&lt;/code&gt;-with-resources statement and the compiler-generated &lt;code&gt;finally&lt;/code&gt; block which closes the resource. In these situations, only one of the thrown exceptions can be propagated. In the &lt;code&gt;try&lt;/code&gt;-with-resources statement, when there are two such exceptions, the exception originating from the &lt;code&gt;try&lt;/code&gt; block is propagated and the exception from the &lt;code&gt;finally&lt;/code&gt; block is added to the list of exceptions suppressed by the exception from the &lt;code&gt;try&lt;/code&gt; block. As an exception unwinds the stack, it can accumulate multiple suppressed exceptions.</source>
          <target state="translated">ある例外&lt;a href=&quot;#initCause(java.lang.Throwable)&quot;&gt;が&lt;/a&gt;別の例外を引き起こすと、通常、最初の例外がキャッチされ、それに応じて2番目の例外がスローされることに注意してください。言い換えれば、2つの例外の間には因果関係があります。これとは対照的に、二つの独立した例外は、特定のでは、コードブロックを兄弟にスローされる可能性がある状況がある &lt;code&gt;try&lt;/code&gt; ブロック &lt;code&gt;try&lt;/code&gt; -with-リソース文と、コンパイラが生成し &lt;code&gt;finally&lt;/code&gt; リソースをクローズブロックは。このような状況では、スローされた例外の1つだけを伝播できます。 &lt;code&gt;try&lt;/code&gt; 二つのそのような例外がある-with-リソース文から例外発信元 &lt;code&gt;try&lt;/code&gt; ブロックが伝播され、からの例外 &lt;code&gt;finally&lt;/code&gt; ブロックは、 &lt;code&gt;try&lt;/code&gt; ブロックからの例外によって抑制された例外のリストに追加されます。例外がスタックを巻き戻すと、複数の抑制された例外が蓄積される可能性があります。</target>
        </trans-unit>
        <trans-unit id="d407988a5b8d89845a30695f7bfe6e712dd9bc67" translate="yes" xml:space="preserve">
          <source>Note that when one exception &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt;causes&lt;/a&gt; another exception, the first exception is usually caught and then the second exception is thrown in response. In other words, there is a causal connection between the two exceptions. In contrast, there are situations where two independent exceptions can be thrown in sibling code blocks, in particular in the &lt;code&gt;try&lt;/code&gt; block of a &lt;code&gt;try&lt;/code&gt;-with-resources statement and the compiler-generated &lt;code&gt;finally&lt;/code&gt; block which closes the resource. In these situations, only one of the thrown exceptions can be propagated. In the &lt;code&gt;try&lt;/code&gt;-with-resources statement, when there are two such exceptions, the exception originating from the &lt;code&gt;try&lt;/code&gt; block is propagated and the exception from the &lt;code&gt;finally&lt;/code&gt; block is added to the list of exceptions suppressed by the exception from the &lt;code&gt;try&lt;/code&gt; block. As an exception unwinds the stack, it can accumulate multiple suppressed exceptions.</source>
          <target state="translated">1つの例外&lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt;によって&lt;/a&gt;別の例外が発生すると、通常、最初の例外がキャッチされ、次に2番目の例外がスローされます。つまり、2つの例外の間には因果関係があります。これとは対照的に、二つの独立した例外は、特定のでは、コードブロックを兄弟にスローされる可能性がある状況がある &lt;code&gt;try&lt;/code&gt; ブロック &lt;code&gt;try&lt;/code&gt; -with-リソース文と、コンパイラが生成し &lt;code&gt;finally&lt;/code&gt; リソースをクローズブロックは。これらの状況では、スローされた例外の1つだけが伝播されます。 &lt;code&gt;try&lt;/code&gt; 二つのそのような例外がある-with-リソース文から例外発信元 &lt;code&gt;try&lt;/code&gt; ブロックが伝播され、からの例外 &lt;code&gt;finally&lt;/code&gt; ブロックは、 &lt;code&gt;try&lt;/code&gt; ブロックからの例外によって抑制された例外のリストに追加されます。例外がスタックをほどくと、複数の抑制された例外が蓄積されます。</target>
        </trans-unit>
        <trans-unit id="1a5969c36884031eafa96ad5f4f9d137d63672fc" translate="yes" xml:space="preserve">
          <source>Note that when the expected length of the response APDU is specified in the &lt;a href=&quot;#%3Cinit%3E(int,int,int,int,int)&quot;&gt;constructors&lt;/a&gt;, the actual length (Ne) must be specified, not its encoded form (Le). Similarly, &lt;a href=&quot;#getNe()&quot;&gt;getNe()&lt;/a&gt; returns the actual value Ne. In other words, a value of 0 means &quot;no data in the response APDU&quot; rather than &quot;maximum length.&quot;</source>
          <target state="translated">&lt;a href=&quot;#%3Cinit%3E(int,int,int,int,int)&quot;&gt;コンストラクター&lt;/a&gt;で応答APDUの予想される長さを指定する場合は、エンコードされた形式（Le）ではなく、実際の長さ（Ne）を指定する必要があることに注意してください。同様に、&lt;a href=&quot;#getNe()&quot;&gt;getNe（）&lt;/a&gt;は実際の値Neを返します。つまり、値0は、「最大長」ではなく「応答APDUにデータがない」ことを意味します。</target>
        </trans-unit>
        <trans-unit id="87f57622cf6b5f42a3c92ce69152ee817f8a71fc" translate="yes" xml:space="preserve">
          <source>Note that when this abstract pathname represents a UNC pathname then all components of the UNC (including the server name component) are encoded in the &lt;code&gt;URI&lt;/code&gt; path. The authority component is undefined, meaning that it is represented as &lt;code&gt;null&lt;/code&gt;. The &lt;a href=&quot;../nio/file/path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../nio/file/path#toUri()&quot;&gt;&lt;code&gt;toUri&lt;/code&gt;&lt;/a&gt; method to encode the server name in the authority component of the resulting &lt;code&gt;URI&lt;/code&gt;. The &lt;a href=&quot;#toPath()&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method may be used to obtain a &lt;code&gt;Path&lt;/code&gt; representing this abstract pathname.</source>
          <target state="translated">この抽象パス名がUNCパス名を表す場合、UNCのすべてのコンポーネント（サーバー名コンポーネントを含む）が &lt;code&gt;URI&lt;/code&gt; パスにエンコードされることに注意してください。権限コンポーネントは未定義です。つまり、 &lt;code&gt;null&lt;/code&gt; として表されます。&lt;a href=&quot;../nio/file/path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;クラスを定義&lt;a href=&quot;../nio/file/path#toUri()&quot;&gt; &lt;code&gt;toUri&lt;/code&gt; の&lt;/a&gt;結果として得られるの権限コンポーネントにサーバ名をエンコードする方法を &lt;code&gt;URI&lt;/code&gt; 。&lt;a href=&quot;#toPath()&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; の&lt;/a&gt;方法を得るために使用することができる &lt;code&gt;Path&lt;/code&gt; この抽象パス名を表すします。</target>
        </trans-unit>
        <trans-unit id="8010171859f8ce8e980b17a675037b7e43dc29a9" translate="yes" xml:space="preserve">
          <source>Note that when this abstract pathname represents a UNC pathname then all components of the UNC (including the server name component) are encoded in the &lt;code&gt;URI&lt;/code&gt; path. The authority component is undefined, meaning that it is represented as &lt;code&gt;null&lt;/code&gt;. The &lt;a href=&quot;../nio/file/path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../nio/file/path#toUri--&quot;&gt;&lt;code&gt;toUri&lt;/code&gt;&lt;/a&gt; method to encode the server name in the authority component of the resulting &lt;code&gt;URI&lt;/code&gt;. The &lt;a href=&quot;file#toPath--&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method may be used to obtain a &lt;code&gt;Path&lt;/code&gt; representing this abstract pathname.</source>
          <target state="translated">この抽象パス名がUNCパス名を表す場合、UNCのすべてのコンポーネント（サーバー名コンポーネントを含む）が &lt;code&gt;URI&lt;/code&gt; パスにエンコードされることに注意してください。権限コンポーネントは未定義です。つまり、 &lt;code&gt;null&lt;/code&gt; として表されます。&lt;a href=&quot;../nio/file/path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;クラスを定義&lt;a href=&quot;../nio/file/path#toUri--&quot;&gt; &lt;code&gt;toUri&lt;/code&gt; の&lt;/a&gt;結果として得られるの権限コンポーネントにサーバ名をエンコードする方法を &lt;code&gt;URI&lt;/code&gt; 。&lt;a href=&quot;file#toPath--&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; の&lt;/a&gt;方法を得るために使用することができる &lt;code&gt;Path&lt;/code&gt; この抽象パス名を表すします。</target>
        </trans-unit>
        <trans-unit id="635e35af1584073cab6870c5956117e7936c22ce" translate="yes" xml:space="preserve">
          <source>Note that when using an enumeration type as the type of a set or as the type of the keys in a map, specialized and efficient &lt;a href=&quot;../util/enumset&quot;&gt;set&lt;/a&gt; and &lt;a href=&quot;../util/enummap&quot;&gt;map&lt;/a&gt; implementations are available.</source>
          <target state="translated">セットのタイプまたはマップのキーのタイプとして列挙型を使用する場合、特殊化&lt;a href=&quot;../util/enumset&quot;&gt;された&lt;/a&gt;効率的なセットと&lt;a href=&quot;../util/enummap&quot;&gt;マップの&lt;/a&gt;実装が利用可能であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="096ca5bac8931eb0075687206638be08dcde240b" translate="yes" xml:space="preserve">
          <source>Note that while some implementations of &lt;code&gt;InputStream&lt;/code&gt; will return the total number of bytes in the stream, many will not. It is never correct to use the return value of this method to allocate a buffer intended to hold all data in this stream.</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; の一部の実装はストリーム内の合計バイト数を返しますが、多くはそうではないことに注意してください。このメソッドの戻り値を使用して、このストリームのすべてのデータを保持するためのバッファーを割り当てることは決して正しくありません。</target>
        </trans-unit>
        <trans-unit id="fb21d9190ee8fde43a50a9160cc07aba90233f74" translate="yes" xml:space="preserve">
          <source>Note that while tasks running within such threads will have the same access control and class loader settings as the current thread, they need not have the same &lt;a href=&quot;../../lang/threadlocal&quot;&gt;&lt;code&gt;ThreadLocal&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../lang/inheritablethreadlocal&quot;&gt;&lt;code&gt;InheritableThreadLocal&lt;/code&gt;&lt;/a&gt; values. If necessary, particular values of thread locals can be set or reset before any task runs in &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; subclasses using &lt;a href=&quot;threadpoolexecutor#beforeExecute(java.lang.Thread,java.lang.Runnable)&quot;&gt;&lt;code&gt;ThreadPoolExecutor.beforeExecute(Thread, Runnable)&lt;/code&gt;&lt;/a&gt;. Also, if it is necessary to initialize worker threads to have the same InheritableThreadLocal settings as some other designated thread, you can create a custom ThreadFactory in which that thread waits for and services requests to create others that will inherit its values.</source>
          <target state="translated">このようなスレッド内で実行されているタスクは、現在のスレッドと同じアクセス制御とクラスローダー設定を持ちますが、同じ&lt;a href=&quot;../../lang/threadlocal&quot;&gt; &lt;code&gt;ThreadLocal&lt;/code&gt; &lt;/a&gt;値または&lt;a href=&quot;../../lang/inheritablethreadlocal&quot;&gt; &lt;code&gt;InheritableThreadLocal&lt;/code&gt; &lt;/a&gt;値を持つ必要はないことに注意してください。必要に応じて、&lt;a href=&quot;threadpoolexecutor#beforeExecute(java.lang.Thread,java.lang.Runnable)&quot;&gt; &lt;code&gt;ThreadPoolExecutor.beforeExecute(Thread, Runnable)&lt;/code&gt; &lt;/a&gt;を使用して、&lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;サブクラスでタスクを実行する前に、スレッドローカルの特定の値を設定またはリセットできます。また、他の指定されたスレッドと同じInheritableThreadLocal設定を持つようにワーカースレッドを初期化する必要がある場合は、そのスレッドが待機し、その値を継承する他のスレッドを作成する要求を処理するカスタムThreadFactoryを作成できます。</target>
        </trans-unit>
        <trans-unit id="e65c28c5d460ba343c8a5353abb3934f52b76850" translate="yes" xml:space="preserve">
          <source>Note that while tasks running within such threads will have the same access control and class loader settings as the current thread, they need not have the same &lt;a href=&quot;../../lang/threadlocal&quot;&gt;&lt;code&gt;ThreadLocal&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../lang/inheritablethreadlocal&quot;&gt;&lt;code&gt;InheritableThreadLocal&lt;/code&gt;&lt;/a&gt; values. If necessary, particular values of thread locals can be set or reset before any task runs in &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; subclasses using &lt;a href=&quot;threadpoolexecutor#beforeExecute-java.lang.Thread-java.lang.Runnable-&quot;&gt;&lt;code&gt;ThreadPoolExecutor.beforeExecute(Thread, Runnable)&lt;/code&gt;&lt;/a&gt;. Also, if it is necessary to initialize worker threads to have the same InheritableThreadLocal settings as some other designated thread, you can create a custom ThreadFactory in which that thread waits for and services requests to create others that will inherit its values.</source>
          <target state="translated">このようなスレッド内で実行されているタスクは、現在のスレッドと同じアクセス制御とクラスローダーの設定を持っていますが、それらは同じ&lt;a href=&quot;../../lang/threadlocal&quot;&gt; &lt;code&gt;ThreadLocal&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../lang/inheritablethreadlocal&quot;&gt; &lt;code&gt;InheritableThreadLocal&lt;/code&gt; &lt;/a&gt;値を持つ必要はないことに注意してください。必要に応じて、&lt;a href=&quot;threadpoolexecutor#beforeExecute-java.lang.Thread-java.lang.Runnable-&quot;&gt; &lt;code&gt;ThreadPoolExecutor.beforeExecute(Thread, Runnable)&lt;/code&gt; &lt;/a&gt;を使用して&lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;サブクラスでタスクを実行する前に、スレッドローカルの特定の値を設定またはリセットできます。また、他の指定されたスレッドと同じInheritableThreadLocal設定を持つようにワーカースレッドを初期化する必要がある場合は、そのスレッドが待機するカスタムThreadFactoryを作成し、その値を継承する他のスレッドを作成するリクエストを処理できます。</target>
        </trans-unit>
        <trans-unit id="e100312f904c8d8b5483aa1dd39df75ec3b71ab5" translate="yes" xml:space="preserve">
          <source>Note that while there are a large number of classes representing different aspects of dates, there are relatively few dealing with different aspects of time. Following type-safety to its logical conclusion would have resulted in classes for hour-minute, hour-minute-second and hour-minute-second-nanosecond. While logically pure, this was not a practical option as it would have almost tripled the number of classes due to the combinations of date and time. Thus, &lt;code&gt;LocalTime&lt;/code&gt; is used for all precisions of time, with zeroes used to imply lower precision.</source>
          <target state="translated">日付のさまざまな側面を表すクラスは多数ありますが、時間のさまざまな側面を扱うクラスは比較的少ないことに注意してください。論理的な結論に従ってタイプセーフを守ると、時分、時分秒、時分秒ナノ秒のクラスになります。論理的に純粋ですが、日付と時刻の組み合わせによりクラス数がほぼ3倍になるため、これは実用的なオプションではありませんでした。したがって、 &lt;code&gt;LocalTime&lt;/code&gt; は時間のすべての精度に使用され、ゼロは精度の低下を意味します。</target>
        </trans-unit>
        <trans-unit id="235c832a76e8a80ded3ea667d040f28fd40e430c" translate="yes" xml:space="preserve">
          <source>Note that while this method is very convenient, using it will imply an assumed reference to the default &lt;code&gt;FileSystem&lt;/code&gt; and limit the utility of the calling code. Hence it should not be used in library code intended for flexible reuse. A more flexible alternative is to use an existing &lt;code&gt;Path&lt;/code&gt; instance as an anchor, such as:</source>
          <target state="translated">このメソッドは非常に便利ですが、このメソッドを使用すると、デフォルトの &lt;code&gt;FileSystem&lt;/code&gt; への参照が想定され、呼び出しコードのユーティリティが制限されることに注意してください。したがって、柔軟な再利用を目的としたライブラリコードでは使用しないでください。より柔軟な代替手段は、次のように既存の &lt;code&gt;Path&lt;/code&gt; インスタンスをアンカーとして使用することです。</target>
        </trans-unit>
        <trans-unit id="42119696d3ecadf8ddca514373c793769844a59d" translate="yes" xml:space="preserve">
          <source>Note that you &lt;em&gt;cannot&lt;/em&gt; always tell if an attempt to insert an element will succeed by inspecting &lt;code&gt;remainingCapacity&lt;/code&gt; because it may be the case that another thread is about to insert or remove an element.</source>
          <target state="translated">あなたがいることを注意&lt;em&gt;することができない&lt;/em&gt;要素を挿入しようとする試みは、検査で成功する場合は、必ず伝える &lt;code&gt;remainingCapacity&lt;/code&gt; を、別のスレッドが要素を挿入または削除しようとしていること場合があり得るので。</target>
        </trans-unit>
        <trans-unit id="e4839f77da1e7400cd3ad07ff82c23bd1d881cd6" translate="yes" xml:space="preserve">
          <source>Note that you don't use this method to find out which instruments are currently loaded onto the synthesizer; for that purpose, you use &lt;code&gt;getLoadedInstruments()&lt;/code&gt;. Nor does the method indicate all the instruments that can be loaded onto the synthesizer; it only indicates the subset that come with the synthesizer. To learn whether another instrument can be loaded, you can invoke &lt;code&gt;isSoundbankSupported()&lt;/code&gt;, and if the instrument's &lt;code&gt;Soundbank&lt;/code&gt; is supported, you can try loading the instrument.</source>
          <target state="translated">このメソッドを使用して、シンセサイザーに現在ロードされているインストゥルメントを検出しないことに注意してください。そのためには、 &lt;code&gt;getLoadedInstruments()&lt;/code&gt; を使用します。また、このメソッドは、シンセサイザーにロードできるすべての楽器を示しているわけではありません。シンセサイザに付属するサブセットのみを示しています。別のインストゥルメントをロードできるかどうかを確認するには、 &lt;code&gt;isSoundbankSupported()&lt;/code&gt; を呼び出し、インストゥルメントのサウンドバンクがサポートされている場合は、インストゥル &lt;code&gt;Soundbank&lt;/code&gt; ロードしてみます。</target>
        </trans-unit>
        <trans-unit id="75e1575269eadeeb8434f2d0c79e9cbd283bd74a" translate="yes" xml:space="preserve">
          <source>Note that, as a consequence of the above rules, the bootstrap method may accept a primitive argument, if it can be represented by a constant pool entry. However, arguments of type &lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, or &lt;code&gt;char&lt;/code&gt; cannot be created for bootstrap methods, since such constants cannot be directly represented in the constant pool, and the invocation of the bootstrap method will not perform the necessary narrowing primitive conversions.</source>
          <target state="translated">上記のルールの結果として、ブートストラップメソッドは、定数プールエントリで表すことができる場合、プリミティブ引数を受け入れることがあります。ただし、 &lt;code&gt;boolean&lt;/code&gt; 、 &lt;code&gt;byte&lt;/code&gt; 、 &lt;code&gt;short&lt;/code&gt; 、または &lt;code&gt;char&lt;/code&gt; 型の引数は、ブートストラップメソッド用に作成できません。これらの定数は定数プールで直接表すことができず、ブートストラップメソッドの呼び出しでは必要なナローイングプリミティブ変換が実行されません。</target>
        </trans-unit>
        <trans-unit id="712ca22ba90f577e307971b0b5b345db88cbe031" translate="yes" xml:space="preserve">
          <source>Note that, in every case, neither &lt;code&gt;L&lt;/code&gt; (&lt;code&gt;'\u004C'&lt;/code&gt;) nor &lt;code&gt;l&lt;/code&gt; (&lt;code&gt;'\u006C'&lt;/code&gt;) is permitted to appear at the end of the property value as a type indicator, as would be permitted in Java programming language source code.</source>
          <target state="translated">すべての場合において、 &lt;code&gt;L&lt;/code&gt; （ &lt;code&gt;'\u004C'&lt;/code&gt; ）も &lt;code&gt;l&lt;/code&gt; （ &lt;code&gt;'\u006C'&lt;/code&gt; ）も、Javaプログラミング言語のソースコードで許可されているように、タイプインジケーターとしてプロパティ値の最後に表示することはできません。</target>
        </trans-unit>
        <trans-unit id="07f4e5af4d2e7cce73f43342b4c4feb9f7ca2d08" translate="yes" xml:space="preserve">
          <source>Note that, per &lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066&lt;/a&gt;, the returned hostname may be an internationalized domain name that contains A-labels. See &lt;a href=&quot;http://www.ietf.org/rfc/rfc5890.txt&quot;&gt;RFC 5890&lt;/a&gt; for more information about the detailed A-label specification.</source>
          <target state="translated">&lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066&lt;/a&gt;に従って、返されるホスト名はAラベルを含む国際化ドメイン名である可能性があることに注意してください。詳細なAラベル仕様の詳細については、&lt;a href=&quot;http://www.ietf.org/rfc/rfc5890.txt&quot;&gt;RFC 5890&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="285f98e8d01e4962eff6724b78a3c6724d0931e6" translate="yes" xml:space="preserve">
          <source>Note that:</source>
          <target state="translated">そのことに注意してください。</target>
        </trans-unit>
        <trans-unit id="77516cf2fb9e01ababe923552c392c12f3052832" translate="yes" xml:space="preserve">
          <source>Note the prefix value is &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; returned as part of the &lt;code&gt;String&lt;/code&gt; representation.</source>
          <target state="translated">プレフィックス値は &lt;code&gt;String&lt;/code&gt; 表現の一部として返され&lt;strong&gt;&lt;em&gt;ないこと&lt;/em&gt;&lt;/strong&gt;に注意してください。</target>
        </trans-unit>
        <trans-unit id="495a6f1c8c0b0b4b96ed615b23e5da838f33dc77" translate="yes" xml:space="preserve">
          <source>Note the presence of lines containing the characters &lt;code&gt;&quot;...&quot;&lt;/code&gt;. These lines indicate that the remainder of the stack trace for this exception matches the indicated number of frames from the bottom of the stack trace of the exception that was caused by this exception (the &quot;enclosing&quot; exception). This shorthand can greatly reduce the length of the output in the common case where a wrapped exception is thrown from same method as the &quot;causative exception&quot; is caught. The above example was produced by running the program:</source>
          <target state="translated">文字 &lt;code&gt;&quot;...&quot;&lt;/code&gt; を含む行があることに注意してください。これらの行は、この例外のスタックトレースの残りが、この例外によって引き起こされた例外（「囲んでいる」例外）のスタックトレースの最下部から、指定されたフレーム数と一致することを示しています。この短縮形は、「原因となる例外」がキャッチされたのと同じメソッドからラップされた例外がスローされる一般的なケースで、出力の長さを大幅に削減できます。上記の例は、プログラムを実行して作成されました。</target>
        </trans-unit>
        <trans-unit id="10fe1fc9733f539af2c0011e136b7e2e97d0e17f" translate="yes" xml:space="preserve">
          <source>Note the term</source>
          <target state="translated">用語に注意</target>
        </trans-unit>
        <trans-unit id="7b2ccf196feed5bf7fcff8d2d49a80db7f6e9ca5" translate="yes" xml:space="preserve">
          <source>Note these are not the same as the installed look and feels.</source>
          <target state="translated">これらは、インストールされた外観や使用感とは異なることに注意してください。</target>
        </trans-unit>
        <trans-unit id="341f4cface17a7596330a94ffc95a397337cf425" translate="yes" xml:space="preserve">
          <source>Note, all conforming implementations must support at least one &lt;code&gt;NetworkInterface&lt;/code&gt; object, which must either be connected to a network, or be a &quot;loopback&quot; interface that can only communicate with entities on the same machine.</source>
          <target state="translated">準拠するすべての実装は、少なくとも1つの &lt;code&gt;NetworkInterface&lt;/code&gt; オブジェクトをサポートする必要があります。これは、ネットワークに接続するか、同じマシン上のエンティティとのみ通信できる「ループバック」インターフェースにする必要があります。</target>
        </trans-unit>
        <trans-unit id="084c3539e8b26595361c61c6fa36633c74e6d1d2" translate="yes" xml:space="preserve">
          <source>Note, any URL instance that complies with RFC 2396 can be converted to a URI. However, some URLs that are not strictly in compliance can not be converted to a URI.</source>
          <target state="translated">注意:RFC2396に準拠しているURLインスタンスはすべてURIに変換できます。しかし、厳密には準拠していないURLの中にはURIに変換できないものもあります。</target>
        </trans-unit>
        <trans-unit id="e2d1f3266163ca19cb060c172f09b6771ea53a1a" translate="yes" xml:space="preserve">
          <source>Note, if you do not specify a representation class when creating a &lt;code&gt;DataFlavor&lt;/code&gt;, the default representation class is used. See appropriate documentation for &lt;code&gt;DataFlavor&lt;/code&gt;'s constructors.</source>
          <target state="translated">&lt;code&gt;DataFlavor&lt;/code&gt; の作成時に表現クラスを指定しない場合は、デフォルトの表現クラスが使用されることに注意してください。 &lt;code&gt;DataFlavor&lt;/code&gt; のコンストラクターについては、適切なドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="29145475c6b41db96b48e5a5de3ccad2255f094c" translate="yes" xml:space="preserve">
          <source>Note, only limited support is provided for handling incoming urgent data. In particular, no notification of incoming urgent data is provided and there is no capability to distinguish between normal data and urgent data unless provided by a higher level protocol.</source>
          <target state="translated">注意:緊急データの受信を処理するための限定的なサポートしか提供されていない。特に、緊急データの着信の通知は提供されず、より上位のプロトコルによって提供されない限り、通常のデータと緊急データを区別する機能はない。</target>
        </trans-unit>
        <trans-unit id="e28b19f4cf6dfb7832cacb558945a2be00ef26cf" translate="yes" xml:space="preserve">
          <source>Note, that although InvalidPropertiesFormatException inherits Serializable interface from Exception, it is not intended to be Serializable. Appropriate serialization methods are implemented to throw NotSerializableException.</source>
          <target state="translated">InvalidPropertiesFormatExceptionはExceptionからSerializableインターフェースを継承していますが、Serializableを意図したものではないことに注意してください。NotSerializableExceptionを投げるための適切なシリアライズメソッドが実装されています。</target>
        </trans-unit>
        <trans-unit id="8d4b6b457cc5cdc10b1a20ebc442039387063f68" translate="yes" xml:space="preserve">
          <source>Note, that although NodeChangeEvent inherits Serializable interface from java.util.EventObject, it is not intended to be Serializable. Appropriate serialization methods are implemented to throw NotSerializableException.</source>
          <target state="translated">NodeChangeEventはjava.util.EventObjectからSerializableインターフェースを継承していますが、Serializableを意図したものではないことに注意してください。NotSerializableExceptionをスローするために適切なシリアライズメソッドが実装されています。</target>
        </trans-unit>
        <trans-unit id="6dd561571f45d254c0c45958c4922d21e5682327" translate="yes" xml:space="preserve">
          <source>Note, that although PreferenceChangeEvent inherits Serializable interface from EventObject, it is not intended to be Serializable. Appropriate serialization methods are implemented to throw NotSerializableException.</source>
          <target state="translated">なお、PreferenceChangeEventはEventObjectからSerializableインターフェースを継承していますが、Serializableを意図したものではないことに注意してください。NotSerializableExceptionを投げるために適切なシリアライズメソッドが実装されています。</target>
        </trans-unit>
        <trans-unit id="214391d9f91af17d005e04a8d8ab851efe21ab64" translate="yes" xml:space="preserve">
          <source>Note, that even though the pre-defined handlers do not examine the response code, the response code and headers are always retrievable from the &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;, when it is returned.</source>
          <target state="translated">事前定義されたハンドラーは応答コードを調べませんが、応答コードとヘッダーは、返されるときに常に&lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;から取得できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="0bd7e87c03806c8220816ba8ec6abf245afeedce" translate="yes" xml:space="preserve">
          <source>Note, that if the argument is equal to the value of Integer.MIN_VALUE, the most look and feels will not provide the scrolling to the right/down.</source>
          <target state="translated">引数がInteger.MIN_VALUEの値と等しい場合、ほとんどのルックアンドフィールでは右/下へのスクロールが提供されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="f38a9358dc4ad4564a3ec5b572aa862055d02e21" translate="yes" xml:space="preserve">
          <source>Note, that not all request headers may be set by user code. Some are restricted for security reasons and others such as the headers relating to authentication, redirection and cookie management may be managed by specific APIs rather than through directly user set headers.</source>
          <target state="translated">すべてのリクエストヘッダがユーザコードで設定できるわけではないことに注意してください。セキュリティ上の理由で制限されているものもありますし、認証、リダイレクト、クッキー管理に関連するヘッダのようなものは、ユーザが直接設定したヘッダではなく、特定の API によって管理されているかもしれません。</target>
        </trans-unit>
        <trans-unit id="e0139a4fdaef91bf5619c5e533f6d5b29a102e12" translate="yes" xml:space="preserve">
          <source>Note, the &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; class does perform escaping of its component fields in certain circumstances. The recommended way to manage the encoding and decoding of URLs is to use &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, and to convert between these two classes using &lt;a href=&quot;#toURI()&quot;&gt;&lt;code&gt;toURI()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;uri#toURL()&quot;&gt;&lt;code&gt;URI.toURL()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">特定の状況では、&lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;クラスはそのコンポーネントフィールドのエスケープを実行することに注意してください。URLのエンコードとデコードを管理するための推奨される方法は、&lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;を使用し、&lt;a href=&quot;#toURI()&quot;&gt; &lt;code&gt;toURI()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;uri#toURL()&quot;&gt; &lt;code&gt;URI.toURL()&lt;/code&gt; &lt;/a&gt;を使用してこれら2つのクラス間で変換することです。</target>
        </trans-unit>
        <trans-unit id="7b9791ad29280564bc91eb9bf5bf14b3ec9cd93f" translate="yes" xml:space="preserve">
          <source>Note, the &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; class does perform escaping of its component fields in certain circumstances. The recommended way to manage the encoding and decoding of URLs is to use &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, and to convert between these two classes using &lt;a href=&quot;url#toURI--&quot;&gt;&lt;code&gt;toURI()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;uri#toURL--&quot;&gt;&lt;code&gt;URI.toURL()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;クラスは、特定の状況でコンポーネントフィールドのエスケープを実行することに注意してください。URLのエンコードとデコードを管理するための推奨される方法は、&lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;を使用し、&lt;a href=&quot;url#toURI--&quot;&gt; &lt;code&gt;toURI()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;uri#toURL--&quot;&gt; &lt;code&gt;URI.toURL()&lt;/code&gt; &lt;/a&gt;を使用してこれら2つのクラス間で変換することです。</target>
        </trans-unit>
        <trans-unit id="799dedf2fa84e1db557a5a29b441de63fb5b0e62" translate="yes" xml:space="preserve">
          <source>Note, the given maximized bounds are used as a hint for the native system, because the underlying platform may not support setting the location and/or size of the maximized windows. If that is the case, the provided values do not affect the appearance of the frame in the maximized state.</source>
          <target state="translated">注意:与えられた最大化の境界はネイティブシステムのヒントとして使用されています。その場合、提供された値は、最大化された状態でのフレームの外観には影響しません。</target>
        </trans-unit>
        <trans-unit id="b4030ed735109102fede2865591b8e0c081abfc6" translate="yes" xml:space="preserve">
          <source>Note, the value actually set in the accepted socket is determined by calling &lt;a href=&quot;socket#getReceiveBufferSize()&quot;&gt;&lt;code&gt;Socket.getReceiveBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">受け入れられたソケットに実際に設定される値は、&lt;a href=&quot;socket#getReceiveBufferSize()&quot;&gt; &lt;code&gt;Socket.getReceiveBufferSize()&lt;/code&gt; を&lt;/a&gt;呼び出すことによって決定されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="008f4765e87008d4171d92e49f2d63d5f2239062" translate="yes" xml:space="preserve">
          <source>Note, the value actually set in the accepted socket is determined by calling &lt;a href=&quot;socket#getReceiveBufferSize--&quot;&gt;&lt;code&gt;Socket.getReceiveBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">受け入れられたソケットに実際に設定された値は、&lt;a href=&quot;socket#getReceiveBufferSize--&quot;&gt; &lt;code&gt;Socket.getReceiveBufferSize()&lt;/code&gt; を&lt;/a&gt;呼び出すことによって決定されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a192e7d4822486a83d4b72809b9cd678009ae005" translate="yes" xml:space="preserve">
          <source>Note. Depending on the context of use, some request methods and headers may be permitted at all times, and others may not be permitted at any time. For example, the HTTP protocol handler might disallow certain headers such as Content-Length from being set by application code, regardless of whether the security policy in force, permits it.</source>
          <target state="translated">注意してください。使用するコンテキストによっては、リクエストメソッドやヘッダの中には常に許可されているものと、 許可されていないものがあります。例えば、HTTP プロトコルハンドラは、有効なセキュリティポリシーが許可しているかどうかに関わらず、 Content-Length のような特定のヘッダがアプリケーションコードによって設定されることを許可しないかもしれません。</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="1c1e292502c948ea2540aa911417c3ba6f0a7b88" translate="yes" xml:space="preserve">
          <source>Note: (1) The &lt;code&gt;Array&lt;/code&gt; object from which a &lt;code&gt;SerialArray&lt;/code&gt; object is created must have materialized the SQL &lt;code&gt;ARRAY&lt;/code&gt; value's data on the client before it is passed to the constructor. Otherwise, the new &lt;code&gt;SerialArray&lt;/code&gt; object will contain no data.</source>
          <target state="translated">注：（1） &lt;code&gt;Array&lt;/code&gt; 、そこからオブジェクト &lt;code&gt;SerialArray&lt;/code&gt; オブジェクトが作成されたSQLマテリアライズドている必要があり &lt;code&gt;ARRAY&lt;/code&gt; のそれはコンストラクタに渡される前に、クライアント上の値のデータを。それ以外の場合、新しい &lt;code&gt;SerialArray&lt;/code&gt; オブジェクトにはデータが含まれません。</target>
        </trans-unit>
        <trans-unit id="86419567047c8e33df7551a77183455cadf6415e" translate="yes" xml:space="preserve">
          <source>Note: (2) If the &lt;code&gt;Array&lt;/code&gt; contains &lt;code&gt;java.sql.Types.JAVA_OBJECT&lt;/code&gt; types, the &lt;code&gt;SerialJavaObject&lt;/code&gt; constructor is called where checks are made to ensure this object is serializable.</source>
          <target state="translated">注：（2） &lt;code&gt;Array&lt;/code&gt; に &lt;code&gt;java.sql.Types.JAVA_OBJECT&lt;/code&gt; タイプが含まれている場合、 &lt;code&gt;SerialJavaObject&lt;/code&gt; コンストラクターが呼び出され、このオブジェクトがシリアル化可能であることを確認するためのチェックが行われます。</target>
        </trans-unit>
        <trans-unit id="f2ab5273ebaf50850efbb3a5a3fae2eeb69eea14" translate="yes" xml:space="preserve">
          <source>Note: (2) The &lt;code&gt;Array&lt;/code&gt; object supplied to this constructor cannot return &lt;code&gt;null&lt;/code&gt; for any &lt;code&gt;Array.getArray()&lt;/code&gt; methods. &lt;code&gt;SerialArray&lt;/code&gt; cannot serialize &lt;code&gt;null&lt;/code&gt; array values.</source>
          <target state="translated">注：（2）このコンストラクターに提供される &lt;code&gt;Array&lt;/code&gt; オブジェクトは、 &lt;code&gt;Array.getArray()&lt;/code&gt; メソッドに対して &lt;code&gt;null&lt;/code&gt; を返すことはできません。 &lt;code&gt;SerialArray&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; 配列値をシリアル化できません。</target>
        </trans-unit>
        <trans-unit id="77cbdc153f74b52e2330c098817f10ac4ac6e23d" translate="yes" xml:space="preserve">
          <source>Note: (3) The &lt;code&gt;Array&lt;/code&gt; object supplied to this constructor cannot return &lt;code&gt;null&lt;/code&gt; for any &lt;code&gt;Array.getArray()&lt;/code&gt; methods. &lt;code&gt;SerialArray&lt;/code&gt; cannot serialize null array values.</source>
          <target state="translated">注：（3）このコンストラクターに提供される &lt;code&gt;Array&lt;/code&gt; オブジェクトは、 &lt;code&gt;Array.getArray()&lt;/code&gt; メソッドに対して &lt;code&gt;null&lt;/code&gt; を返すことはできません。 &lt;code&gt;SerialArray&lt;/code&gt; はnull配列値をシリアル化できません。</target>
        </trans-unit>
        <trans-unit id="743169cc2f7786ab9238e67965adb946d4be8d89" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;JdbcRowSet&lt;/code&gt; does not require the &lt;code&gt;populate&lt;/code&gt; method as it is undefined in this class.</source>
          <target state="translated">注： &lt;code&gt;JdbcRowSet&lt;/code&gt; は、このクラスでは定義されていないため、 &lt;code&gt;populate&lt;/code&gt; メソッドを必要としません。</target>
        </trans-unit>
        <trans-unit id="0c9c385460860b0e957297b560d1b453306ec982" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;SwingWorker&lt;/code&gt; is only designed to be executed once. Executing a &lt;code&gt;SwingWorker&lt;/code&gt; more than once will not result in invoking the &lt;code&gt;doInBackground&lt;/code&gt; method twice.</source>
          <target state="translated">注： &lt;code&gt;SwingWorker&lt;/code&gt; は1回だけ実行されるように設計されています。 &lt;code&gt;SwingWorker&lt;/code&gt; を複数回実行しても、 &lt;code&gt;doInBackground&lt;/code&gt; メソッドが2回呼び出されることはありません。</target>
        </trans-unit>
        <trans-unit id="254dafe97410ce13ab669b9f0949b009f389b447" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;password&lt;/code&gt; is cloned before it is stored in the new &lt;code&gt;PBEKeySpec&lt;/code&gt; object.</source>
          <target state="translated">注： &lt;code&gt;password&lt;/code&gt; は、新しい &lt;code&gt;PBEKeySpec&lt;/code&gt; オブジェクトに格納される前に複製されます。</target>
        </trans-unit>
        <trans-unit id="46ab5930f3cbabd25f39b229ec05b8cfaba390de" translate="yes" xml:space="preserve">
          <source>Note: A &lt;code&gt;Joinable&lt;/code&gt; object is any &lt;code&gt;RowSet&lt;/code&gt; object that has implemented the &lt;code&gt;Joinable&lt;/code&gt; interface.</source>
          <target state="translated">注： &lt;code&gt;Joinable&lt;/code&gt; オブジェクトは、 &lt;code&gt;Joinable&lt;/code&gt; インターフェースを実装した &lt;code&gt;RowSet&lt;/code&gt; オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="040b0e9f8c6554028c4dc40a0cf14489770cd695" translate="yes" xml:space="preserve">
          <source>Note: A PostConstruct interceptor method must not throw application exceptions, but it may be declared to throw checked exceptions including the java.lang.Exception if the same interceptor method interposes on business or timeout methods in addition to lifecycle events. If a PostConstruct interceptor method returns a value, it is ignored by the container.</source>
          <target state="translated">注意:PostConstruct インターセプター・メソッドは、アプリケーション例外を投げてはいけませんが、同じインターセプター・メソッドがライフサイクル・イベントに加えて、ビジネス・メソッドやタイムアウト・メソッドにも介入している場合は、java.lang.Exceptionを含むチェック済みの例外を投げるように宣言することができます。PostConstruct インターセプターメソッドが値を返す場合は、コンテナによって無視されます。</target>
        </trans-unit>
        <trans-unit id="fea6b6198364e245978b1624df46b8baf87128b5" translate="yes" xml:space="preserve">
          <source>Note: A PreDestroy interceptor method must not throw application exceptions, but it may be declared to throw checked exceptions including the java.lang.Exception if the same interceptor method interposes on business or timeout methods in addition to lifecycle events. If a PreDestroy interceptor method returns a value, it is ignored by the container.</source>
          <target state="translated">注意:PreDestroy インターセプター・メソッドは、アプリケーション例外を投げてはいけませんが、同じインターセプター・メソッドがライフサイクル・イベントに加えてビジネス・メソッドやタイムアウト・メソッドにも介入している場合は、java.lang.Exceptionを含むチェック付き例外を投げるように宣言することができます。PreDestroy インターセプターメソッドが値を返す場合は、コンテナによって無視されます。</target>
        </trans-unit>
        <trans-unit id="dfa725603a4fb969b0f8ddaaff6ff51bf646fedb" translate="yes" xml:space="preserve">
          <source>Note: A pathname consisting of a single &quot;*&quot; indicates all the files in the current directory, while a pathname consisting of a single &quot;-&quot; indicates all the files in the current directory and (recursively) all files and subdirectories contained in the current directory.</source>
          <target state="translated">注意:単一の &quot;*&quot;からなるパス名はカレントディレクトリ内のすべてのファイルを示し、単一の&quot;-&quot;からなるパス名はカレントディレクトリ内のすべてのファイルと、カレントディレクトリに含まれるすべてのファイルとサブディレクトリを(再帰的に)示します。</target>
        </trans-unit>
        <trans-unit id="601d43cd3faf7f02357671bd5912f9638a00920c" translate="yes" xml:space="preserve">
          <source>Note: A valid reduction polynomial is either a trinomial (X^&lt;code&gt;m&lt;/code&gt; + X^&lt;code&gt;k&lt;/code&gt; + 1 with &lt;code&gt;m&lt;/code&gt; &amp;gt; &lt;code&gt;k&lt;/code&gt; &amp;gt;= 1) or a pentanomial (X^&lt;code&gt;m&lt;/code&gt; + X^&lt;code&gt;k3&lt;/code&gt; + X^&lt;code&gt;k2&lt;/code&gt; + X^&lt;code&gt;k1&lt;/code&gt; + 1 with &lt;code&gt;m&lt;/code&gt; &amp;gt; &lt;code&gt;k3&lt;/code&gt; &amp;gt; &lt;code&gt;k2&lt;/code&gt; &amp;gt; &lt;code&gt;k1&lt;/code&gt; &amp;gt;= 1).</source>
          <target state="translated">注：有効な簡約多項式は、3項式（X ^ &lt;code&gt;m&lt;/code&gt; + X ^ &lt;code&gt;k&lt;/code&gt; + 1、 &lt;code&gt;m&lt;/code&gt; &amp;gt; &lt;code&gt;k&lt;/code&gt; &amp;gt; = 1）または5項式（X ^ &lt;code&gt;m&lt;/code&gt; + X ^ &lt;code&gt;k3&lt;/code&gt; + X ^ &lt;code&gt;k2&lt;/code&gt; + X ^ &lt;code&gt;k1&lt;/code&gt; + 1、 &lt;code&gt;m&lt;/code&gt; &amp;gt; &lt;code&gt;k3&lt;/code&gt; &amp;gt; &lt;code&gt;k2&lt;/code&gt; &amp;gt; &lt;code&gt;k1&lt;/code&gt; &amp;gt; = 1）。</target>
        </trans-unit>
        <trans-unit id="6c108a434a0cc7b49517402fe3622f9977c52431" translate="yes" xml:space="preserve">
          <source>Note: All X509Certificate subclasses must provide a constructor of the form:</source>
          <target state="translated">注意:すべての X509Certificate サブクラスは、フォームのコンストラクタを提供しなければなりません。</target>
        </trans-unit>
        <trans-unit id="23a9717c05af24a9b056171e4e2e247ae12ed3ce" translate="yes" xml:space="preserve">
          <source>Note: Allowing deleted rows to remain visible complicates the behavior of some of the methods. However, most &lt;code&gt;RowSet&lt;/code&gt; object users can simply ignore this extra detail because only sophisticated applications will likely want to take advantage of this feature.</source>
          <target state="translated">注：削除された行を表示したままにすると、一部のメソッドの動作が複雑になります。ただし、ほとんどの &lt;code&gt;RowSet&lt;/code&gt; オブジェクトユーザーは、この機能を利用したいのは高度なアプリケーションのみであるため、この余分な詳細を単に無視できます。</target>
        </trans-unit>
        <trans-unit id="1a5399bf0b815dcc23647625f34051f621f58516" translate="yes" xml:space="preserve">
          <source>Note: Allowing deleted rows to remain visible complicates the behavior of some standard JDBC &lt;code&gt;RowSet&lt;/code&gt; Implementations methods. However, most rowset users can simply ignore this extra detail because only very specialized applications will likely want to take advantage of this feature.</source>
          <target state="translated">注：削除された行を表示したままにすると、一部の標準 &lt;code&gt;RowSet&lt;/code&gt; 実装メソッドの動作が複雑になります。ただし、ほとんどの行セットユーザーは、非常に特殊なアプリケーションのみがこの機能を利用する可能性が高いため、この余分な詳細を単に無視できます。</target>
        </trans-unit>
        <trans-unit id="70bf90b0059e20282dec8b1fc95979dce51ba913" translate="yes" xml:space="preserve">
          <source>Note: Allowing deleted rows to remain visible complicates the behavior of some standard JDBC &lt;code&gt;RowSet&lt;/code&gt; implementations methods. However, most rowset users can simply ignore this extra detail because only very specialized applications will likely want to take advantage of this feature.</source>
          <target state="translated">注：削除された行を表示したままにすると、一部の標準 &lt;code&gt;RowSet&lt;/code&gt; 実装メソッドの動作が複雑になります。ただし、ほとんどの行セットユーザーは、非常に特殊なアプリケーションのみがこの機能を利用する可能性が高いため、この余分な詳細を単に無視できます。</target>
        </trans-unit>
        <trans-unit id="bb1e0cf5a0c0e42b2b6e16c731f84f74ed100301" translate="yes" xml:space="preserve">
          <source>Note: Although this API consistently refers to the stimulus for a drag and drop operation being a physical gesture by a human user, this does not preclude a programmatically driven DnD operation given the appropriate implementation of a &lt;code&gt;DragSource&lt;/code&gt;. This package contains the abstract class &lt;code&gt;MouseDragGestureRecognizer&lt;/code&gt; for recognizing mouse device gestures. Other abstract subclasses may be provided by the platform to support other input devices or particular &lt;code&gt;Component&lt;/code&gt; class semantics.</source>
          <target state="translated">注：このAPIは、人間のユーザーによる物理的なジェスチャーであるドラッグアンドドロップ操作の刺激を一貫して参照しますが、 &lt;code&gt;DragSource&lt;/code&gt; が適切に実装されている場合、プログラムによって駆動されるDnD操作を排除するものではありません。このパッケージには、マウスデバイスジェスチャを認識するための抽象クラス &lt;code&gt;MouseDragGestureRecognizer&lt;/code&gt; が含まれています。他の抽象サブクラスは、他の入力デバイスまたは特定の &lt;code&gt;Component&lt;/code&gt; クラスセマンティクスをサポートするためにプラットフォームによって提供される場合があります。</target>
        </trans-unit>
        <trans-unit id="eb229cc90e4f767f54fad19b5d97dbde1db2768c" translate="yes" xml:space="preserve">
          <source>Note: Always use the &lt;a href=&quot;datatypefactory&quot;&gt;&lt;code&gt;DatatypeFactory&lt;/code&gt;&lt;/a&gt; to construct an instance of &lt;code&gt;Duration&lt;/code&gt;. The constructor on this class cannot be guaranteed to produce an object with a consistent state and may be removed in the future.</source>
          <target state="translated">注： &lt;code&gt;Duration&lt;/code&gt; のインスタンスを作成するには、常に&lt;a href=&quot;datatypefactory&quot;&gt; &lt;code&gt;DatatypeFactory&lt;/code&gt; &lt;/a&gt;を使用してください。このクラスのコンストラクターは、一貫した状態のオブジェクトを生成することを保証できず、将来削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="252b6b87f84154da1d9cf7e84d8916f68a9053a3" translate="yes" xml:space="preserve">
          <source>Note: Always use the &lt;a href=&quot;datatypefactory&quot;&gt;&lt;code&gt;DatatypeFactory&lt;/code&gt;&lt;/a&gt; to construct an instance of &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;. The constructor on this class cannot be guaranteed to produce an object with a consistent state and may be removed in the future.</source>
          <target state="translated">注： &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; のインスタンスを作成するには、常に&lt;a href=&quot;datatypefactory&quot;&gt; &lt;code&gt;DatatypeFactory&lt;/code&gt; &lt;/a&gt;を使用してください。このクラスのコンストラクターは、一貫した状態のオブジェクトを生成することを保証できず、将来削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="e8153ceb395f3c9c5fbce1183a9833ea16ba0054" translate="yes" xml:space="preserve">
          <source>Note: Applications should use the &lt;code&gt;JScrollPane&lt;/code&gt; version of this method. It only exists for backwards compatibility with the Swing 1.0.2 (and earlier) versions of this class.</source>
          <target state="translated">注：アプリケーションは、このメソッドの &lt;code&gt;JScrollPane&lt;/code&gt; バージョンを使用する必要があります。これは、このクラスのSwing 1.0.2（およびそれ以前）バージョンとの下位互換性のためにのみ存在します。</target>
        </trans-unit>
        <trans-unit id="a1cc2841647fc82f79501840eb2841a8531b0315" translate="yes" xml:space="preserve">
          <source>Note: As of v1.3, it is recommended that developers call &lt;code&gt;Component.AccessibleAWTComponent.getAccessibleChild()&lt;/code&gt; instead of this method.</source>
          <target state="translated">注：v1.3以降、開発者はこのメソッドの代わりに &lt;code&gt;Component.AccessibleAWTComponent.getAccessibleChild()&lt;/code&gt; を呼び出すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f37e0e69a5ef16e424f1577f447cc44c2f9db3cb" translate="yes" xml:space="preserve">
          <source>Note: Attempting to show the printing dialog or run interactively, while in headless mode, will result in a &lt;code&gt;HeadlessException&lt;/code&gt;.</source>
          <target state="translated">注：ヘッドレスモードで印刷ダイアログを表示したり、インタラクティブに実行しようとすると、 &lt;code&gt;HeadlessException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="2adec88ec6d6cd35667bae332e97cb78b026a927" translate="yes" xml:space="preserve">
          <source>Note: By default, a node allows children.</source>
          <target state="translated">注意:デフォルトでは、ノードは子を許可します。</target>
        </trans-unit>
        <trans-unit id="c06f5db077ab1ba124afa4d306145569d1a0a304" translate="yes" xml:space="preserve">
          <source>Note: Calling &lt;code&gt;setTime()&lt;/code&gt; with &lt;code&gt;Date(Long.MAX_VALUE)&lt;/code&gt; or &lt;code&gt;Date(Long.MIN_VALUE)&lt;/code&gt; may yield incorrect field values from &lt;code&gt;get()&lt;/code&gt;.</source>
          <target state="translated">注： &lt;code&gt;Date(Long.MAX_VALUE)&lt;/code&gt; または &lt;code&gt;Date(Long.MIN_VALUE)&lt;/code&gt; を指定して &lt;code&gt;setTime()&lt;/code&gt; を呼び出すと、 &lt;code&gt;get()&lt;/code&gt; から誤ったフィールド値が生成される場合があります。</target>
        </trans-unit>
        <trans-unit id="f47afedb3f3f0b810383c13f7dd2ba3a43b6925e" translate="yes" xml:space="preserve">
          <source>Note: Calling the method &lt;code&gt;relative(1)&lt;/code&gt; is identical to calling the method &lt;code&gt;next()&lt;/code&gt; and calling the method &lt;code&gt;relative(-1)&lt;/code&gt; is identical to calling the method &lt;code&gt;previous()&lt;/code&gt;.</source>
          <target state="translated">注：メソッド &lt;code&gt;relative(1)&lt;/code&gt; を呼び出すことは、メソッド &lt;code&gt;next()&lt;/code&gt; を呼び出すことと同じであり、メソッド &lt;code&gt;relative(-1)&lt;/code&gt; を呼び出すことは、メソッド &lt;code&gt;previous()&lt;/code&gt; を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="6a685b174efe46752fec09e8d8e263034bafa3cd" translate="yes" xml:space="preserve">
          <source>Note: Closing a socket doesn't clear its binding state, which means this method will return &lt;code&gt;true&lt;/code&gt; for a closed socket (see &lt;a href=&quot;#isClosed()&quot;&gt;&lt;code&gt;isClosed()&lt;/code&gt;&lt;/a&gt;) if it was successfuly bound prior to being closed.</source>
          <target state="translated">注：ソケットを閉じてもバインディング状態はクリアされません。つまり、このメソッドは、閉じられる前に正常にバインドされた場合、閉じられたソケットに対して &lt;code&gt;true&lt;/code&gt; を返します（&lt;a href=&quot;#isClosed()&quot;&gt; &lt;code&gt;isClosed()&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="a83420c07620959c69b392fced7ba206ef6cf144" translate="yes" xml:space="preserve">
          <source>Note: Closing a socket doesn't clear its binding state, which means this method will return &lt;code&gt;true&lt;/code&gt; for a closed socket (see &lt;a href=&quot;socket#isClosed--&quot;&gt;&lt;code&gt;isClosed()&lt;/code&gt;&lt;/a&gt;) if it was successfuly bound prior to being closed.</source>
          <target state="translated">注：ソケットを閉じてもバインド状態はクリアされません。つまり、閉じられる前にバインドが成功した場合、このメソッドは閉じられたソケット（&lt;a href=&quot;socket#isClosed--&quot;&gt; &lt;code&gt;isClosed()&lt;/code&gt; を&lt;/a&gt;参照）に対して &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7761002f54a9c1f2f804c509442839f0ba8dca1d" translate="yes" xml:space="preserve">
          <source>Note: Closing a socket doesn't clear its connection state, which means this method will return &lt;code&gt;true&lt;/code&gt; for a closed socket (see &lt;a href=&quot;#isClosed()&quot;&gt;&lt;code&gt;isClosed()&lt;/code&gt;&lt;/a&gt;) if it was successfuly connected prior to being closed.</source>
          <target state="translated">注：ソケットを閉じても接続状態はクリアされません。つまり、閉じる前に接続に成功した場合、このメソッドは閉じたソケットに対して &lt;code&gt;true&lt;/code&gt; を返します（&lt;a href=&quot;#isClosed()&quot;&gt; &lt;code&gt;isClosed()&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="10f01f12f1a698aba85aafe79f168cd72a588f9c" translate="yes" xml:space="preserve">
          <source>Note: Closing a socket doesn't clear its connection state, which means this method will return &lt;code&gt;true&lt;/code&gt; for a closed socket (see &lt;a href=&quot;socket#isClosed--&quot;&gt;&lt;code&gt;isClosed()&lt;/code&gt;&lt;/a&gt;) if it was successfuly connected prior to being closed.</source>
          <target state="translated">注：ソケットを閉じても接続状態はクリアされません。つまり、このメソッドは、閉じる前に接続に成功した場合、閉じたソケット（&lt;a href=&quot;socket#isClosed--&quot;&gt; &lt;code&gt;isClosed()&lt;/code&gt; を&lt;/a&gt;参照）に対して &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9f4ba21d3677cf8ccb8a6bd9c2bc3be7c6f13481" translate="yes" xml:space="preserve">
          <source>Note: Depending on the implementation, the &lt;code&gt;generateSeed&lt;/code&gt; and &lt;code&gt;nextBytes&lt;/code&gt; methods may block as entropy is being gathered, for example, if they need to read from /dev/random on various Unix-like operating systems.</source>
          <target state="translated">注：実装によっては、たとえば、さまざまなUnixライクなオペレーティングシステムで/ dev / randomから読み取る必要がある場合に、エントロピーが収集 &lt;code&gt;generateSeed&lt;/code&gt; と、 &lt;code&gt;nextBytes&lt;/code&gt; メソッドとnextBytesメソッドがブロックする場合があります。</target>
        </trans-unit>
        <trans-unit id="91f49ae78c5e67b727b21e0329fb8dd1044cc68f" translate="yes" xml:space="preserve">
          <source>Note: Depending on the implementation, the &lt;code&gt;generateSeed&lt;/code&gt;, &lt;code&gt;reseed&lt;/code&gt; and &lt;code&gt;nextBytes&lt;/code&gt; methods may block as entropy is being gathered, for example, if the entropy source is /dev/random on various Unix-like operating systems.</source>
          <target state="translated">注：実装によっては、 &lt;code&gt;generateSeed&lt;/code&gt; 、 &lt;code&gt;reseed&lt;/code&gt; と &lt;code&gt;nextBytes&lt;/code&gt; エントロピー源はオペレーティングシステムUnixのような種々の/ dev /ランダムである場合、エントロピーは、例えば、収集されているような方法をブロックすることができます。</target>
        </trans-unit>
        <trans-unit id="e3abcb90f9fca795630637ce723df4e905c92f8c" translate="yes" xml:space="preserve">
          <source>Note: Disabling a component does not disable its children.</source>
          <target state="translated">注意:コンポーネントを無効にしても、その子を無効にすることはできません。</target>
        </trans-unit>
        <trans-unit id="6a75c1b491a3283d2385a1f5bed1105019f4b2f7" translate="yes" xml:space="preserve">
          <source>Note: Disabling a heavyweight container prevents all components in this container from receiving any input events. But disabling a lightweight container affects only this container.</source>
          <target state="translated">注意:ヘビーウェイトコンテナを無効にすると、このコンテナ内のすべてのコンポーネントが入力イベントを受信できなくなります。しかし、軽量コンテナを無効にすると、このコンテナのみに影響を与えます。</target>
        </trans-unit>
        <trans-unit id="ea026c18f95ff0c7387c7ef585b985251ee796e3" translate="yes" xml:space="preserve">
          <source>Note: Disabling a lightweight component does not prevent it from receiving MouseEvents.</source>
          <target state="translated">注意:軽量コンポーネントを無効にしても、MouseEventsを受信できなくなるわけではありません。</target>
        </trans-unit>
        <trans-unit id="f5434552960c8c2dea533b2ca1ddeb3927183d35" translate="yes" xml:space="preserve">
          <source>Note: During the creation of a new &lt;a href=&quot;thread#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long,boolean)&quot;&gt;&lt;code&gt;thread&lt;/code&gt;&lt;/a&gt;, it is possible to</source>
          <target state="translated">注：新しい&lt;a href=&quot;thread#%3Cinit%3E(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long,boolean)&quot;&gt; &lt;code&gt;thread&lt;/code&gt; &lt;/a&gt;作成中に、次のことが可能です。</target>
        </trans-unit>
        <trans-unit id="50dffa9483cbb54d86f861329d63921441eea696" translate="yes" xml:space="preserve">
          <source>Note: Each string should be of the form</source>
          <target state="translated">注意:各文字列は、以下の形式でなければなりません。</target>
        </trans-unit>
        <trans-unit id="6a3087288ea895ef3d6a3ca12adc1620eb080716" translate="yes" xml:space="preserve">
          <source>Note: End users are able to determine the nature and details of the color support by querying the &lt;a href=&quot;printermoreinfomanufacturer&quot;&gt;&lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">注：エンドユーザーは、&lt;a href=&quot;printermoreinfomanufacturer&quot;&gt; &lt;code&gt;PrinterMoreInfoManufacturer&lt;/code&gt; &lt;/a&gt;属性を照会することにより、カラーサポートの性質と詳細を判断できます。</target>
        </trans-unit>
        <trans-unit id="20b962ae0f4b168a0cc979f0b6847c9bed17ec93" translate="yes" xml:space="preserve">
          <source>Note: Font rotations can cause text baselines to be rotated, and multiple runs with different rotations can cause the baseline to bend or zig-zag. In order to account for this (rare) possibility, some APIs are specified to return metrics and take parameters 'in baseline-relative coordinates' (e.g. ascent, advance), and others are in 'in standard coordinates' (e.g. getBounds). Values in baseline-relative coordinates map the 'x' coordinate to the distance along the baseline, (positive x is forward along the baseline), and the 'y' coordinate to a distance along the perpendicular to the baseline at 'x' (positive y is 90 degrees clockwise from the baseline vector). Values in standard coordinates are measured along the x and y axes, with 0,0 at the origin of the TextLayout. Documentation for each relevant API indicates what values are in what coordinate system. In general, measurement-related APIs are in baseline-relative coordinates, while display-related APIs are in standard coordinates.</source>
          <target state="translated">注:フォントの回転は、テキストのベースラインを回転させる原因となり、異なる回転を複数回実行するとベースラインが曲がったり、ジグザグになったりします。この(まれな)可能性を考慮するために、いくつかの API は、 メ ト リ ッ ク を返し、 「ベース ラ イ ン相対座標」 でパ ラ メ ー タ を取得す る よ う に指定 さ れてい ます(例:上昇、 進み)。基底関係座標の値は、'x'座標を基底線に沿った距離にマッピングします(正のxは基底線に沿って前進します)。標準座標の値は、x 軸と y 軸に沿って測定され、0,0 を TextLayout の原点とします。各関連 API のドキュメントには、どの座標系にどの値があるかが記載されています。一般的に、測定関連のAPIはベースライン相対座標で、ディスプレイ関連のAPIは標準座標です。</target>
        </trans-unit>
        <trans-unit id="53dbd3840742378264064623ca4a25b31735498f" translate="yes" xml:space="preserve">
          <source>Note: Font rotations can cause text baselines to be rotated. In order to account for this (rare) possibility, font APIs are specified to return metrics and take parameters 'in baseline-relative coordinates'. This maps the 'x' coordinate to the advance along the baseline, (positive x is forward along the baseline), and the 'y' coordinate to a distance along the perpendicular to the baseline at 'x' (positive y is 90 degrees clockwise from the baseline vector). APIs for which this is especially important are called out as having 'baseline-relative coordinates.'</source>
          <target state="translated">注記:フ ォ ン ト の回転に よ っ てテ キ ス ト のベース ラ イ ンが回転す る こ と があ り ます。こ の (めったにない)可能性を考慮す る ために、 フ ォ ン ト API は メ ト リ ッ ク を返す よ う に指定 さ れてお り 、 パ ラ メ ー タ ーは 「ベース ラ イ ン相対座標」 で取得 さ れています。こ れは、 'x' 座標をベース ラ イ ンに沿った前進にマ ッ プ し (正の x はベース ラ イ ンに沿った前進)、 'y' 座標をベース ラ イ ンに沿った距離にマ ッ プ し ます (正の y はベース ラ イ ン ベ ク ト ルか ら 時計回りに 90 度)。これが特に重要なAPIは、'基線関係座標'を持つものとして呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4139c01db4343c79097098788239a9b16c7e48ab" translate="yes" xml:space="preserve">
          <source>Note: For components with built-in drop support, this location will be a subclass of &lt;code&gt;DropLocation&lt;/code&gt; of the same type returned by that component's &lt;code&gt;getDropLocation&lt;/code&gt; method.</source>
          <target state="translated">注：ドロップサポートが &lt;code&gt;DropLocation&lt;/code&gt; れているコンポーネントの &lt;code&gt;getDropLocation&lt;/code&gt; 、この場所は、そのコンポーネントのgetDropLocationメソッドによって返される同じタイプのDropLocationのサブクラスになります。</target>
        </trans-unit>
        <trans-unit id="60f68f1265565a7812dc791614b1dbe6455201b6" translate="yes" xml:space="preserve">
          <source>Note: For values other than &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt; NaN and &amp;plusmn;Infinity, this constructor is compatible with the values returned by &lt;a href=&quot;../lang/float#toString-float-&quot;&gt;&lt;code&gt;Float.toString(float)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../lang/double#toString-double-&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt;. This is generally the preferred way to convert a &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt; into a BigDecimal, as it doesn't suffer from the unpredictability of the &lt;a href=&quot;bigdecimal#BigDecimal-double-&quot;&gt;&lt;code&gt;BigDecimal(double)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">注： &lt;code&gt;float&lt;/code&gt; および &lt;code&gt;double&lt;/code&gt; NaNおよび&amp;plusmn;Infinity 以外の値の場合、このコンストラクターは&lt;a href=&quot;../lang/float#toString-float-&quot;&gt; &lt;code&gt;Float.toString(float)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../lang/double#toString-double-&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt;によって返される値と互換性があります。これは、&lt;a href=&quot;bigdecimal#BigDecimal-double-&quot;&gt; &lt;code&gt;BigDecimal(double)&lt;/code&gt; &lt;/a&gt;コンストラクターの予測不能性の影響を受けないため、 &lt;code&gt;float&lt;/code&gt; または &lt;code&gt;double&lt;/code&gt; をBigDecimal に変換するための一般的な推奨方法です。</target>
        </trans-unit>
        <trans-unit id="f894b657e9d4f97ef5bbf661355e6ceddf605aba" translate="yes" xml:space="preserve">
          <source>Note: Granting code permission to accept or make connections to remote hosts may be dangerous because malevolent code can then more easily transfer and share confidential data among parties who may not otherwise have access to the data.</source>
          <target state="translated">注意:リモートホストへの接続を許可するコードを許可すると、悪意のあるコードが、他の方法ではデータにアクセスできないような関係者の間で、機密データをより簡単に転送したり共有したりすることができるため、危険な場合があります。</target>
        </trans-unit>
        <trans-unit id="b51214b61156f3a246b3290a74dbc8a2e74b40eb" translate="yes" xml:space="preserve">
          <source>Note: Great care must be exercised if mutable objects are used as set elements. The behavior of a set is not specified if the value of an object is changed in a manner that affects &lt;code&gt;equals&lt;/code&gt; comparisons while the object is an element in the set. A special case of this prohibition is that it is not permissible for a set to contain itself as an element.</source>
          <target state="translated">注：変更可能なオブジェクトをセット要素として使用する場合は、細心の注意を払う必要があります。オブジェクトがセット内の要素であるときに、 &lt;code&gt;equals&lt;/code&gt; 比較に影響する方法でオブジェクトの値が変更された場合、セットの動作は指定されません。この禁止事項の特殊なケースは、セットがそれ自体を要素として含むことは許可されないことです。</target>
        </trans-unit>
        <trans-unit id="aa4ec39829945455942368945581912399ff4861" translate="yes" xml:space="preserve">
          <source>Note: IETF BCP 47 places syntactic restrictions on variant subtags. Also BCP 47 subtags are strictly used to indicate additional variations that define a language or its dialects that are not covered by any combinations of language, script and region subtags. You can find a full list of valid variant codes in the IANA Language Subtag Registry (search for &quot;Type: variant&quot;).</source>
          <target state="translated">注意:IETF BCP 47では、バリアントサブタグに構文上の制限を設けています。また、BCP 47サブタグは、言語や方言を定義する追加のバリエーションを示すために厳密に使用され、言語、スクリプト、地域サブタグの組み合わせではカバーされない。有効なバリアントコードの完全なリストは、IANA Language Subtag Registry(&quot;Type:variant &quot;で検索)で見つけることができます。</target>
        </trans-unit>
        <trans-unit id="d3678099dea00b684cd036ffeb8507d5238df9b9" translate="yes" xml:space="preserve">
          <source>Note: If &lt;a href=&quot;#send(java.net.DatagramPacket)&quot;&gt;&lt;code&gt;send(DatagramPacket)&lt;/code&gt;&lt;/a&gt; is used to send a &lt;code&gt;DatagramPacket&lt;/code&gt; that is larger than the setting of SO_SNDBUF then it is implementation specific if the packet is sent or discarded.</source>
          <target state="translated">注：&lt;a href=&quot;#send(java.net.DatagramPacket)&quot;&gt; &lt;code&gt;send(DatagramPacket)&lt;/code&gt; &lt;/a&gt;を使用してSO_SNDBUFの設定よりも大きい &lt;code&gt;DatagramPacket&lt;/code&gt; を送信する場合、パケットが送信されるか破棄されるかは実装固有です。</target>
        </trans-unit>
        <trans-unit id="9551c9847eec1ce96e4a8eea3102dc88018de79b" translate="yes" xml:space="preserve">
          <source>Note: If &lt;a href=&quot;datagramsocket#send-java.net.DatagramPacket-&quot;&gt;&lt;code&gt;send(DatagramPacket)&lt;/code&gt;&lt;/a&gt; is used to send a &lt;code&gt;DatagramPacket&lt;/code&gt; that is larger than the setting of SO_SNDBUF then it is implementation specific if the packet is sent or discarded.</source>
          <target state="translated">注：&lt;a href=&quot;datagramsocket#send-java.net.DatagramPacket-&quot;&gt; &lt;code&gt;send(DatagramPacket)&lt;/code&gt; &lt;/a&gt;を使用してSO_SNDBUFの設定よりも大きい &lt;code&gt;DatagramPacket&lt;/code&gt; を送信する場合、パケットが送信されるか破棄されるかは実装固有です。</target>
        </trans-unit>
        <trans-unit id="412bec2a9cc39312861108c58e11aacc5e6a6ae3" translate="yes" xml:space="preserve">
          <source>Note: If &lt;code&gt;border&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt;, this method will throw an exception as borders are not supported on a &lt;code&gt;JViewPort&lt;/code&gt;.</source>
          <target state="translated">注： &lt;code&gt;border&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; 以外の場合、 &lt;code&gt;JViewPort&lt;/code&gt; では境界線がサポートされていないため、このメソッドは例外をスローします。</target>
        </trans-unit>
        <trans-unit id="0fd951afc544adf41cc0d9a745afbc720a08b745" translate="yes" xml:space="preserve">
          <source>Note: If &lt;code&gt;mgr&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt;, this method will throw an exception as layout managers are not supported on a &lt;code&gt;JLayer&lt;/code&gt;.</source>
          <target state="translated">注： &lt;code&gt;mgr&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; 以外の場合、レイアウトマネージャーは &lt;code&gt;JLayer&lt;/code&gt; でサポートされていないため、このメソッドは例外をスローします。</target>
        </trans-unit>
        <trans-unit id="7a93b19789849e21dab5046a5d7210e76b18c634" translate="yes" xml:space="preserve">
          <source>Note: If support for extended mouse buttons is &lt;a href=&quot;../toolkit#areExtraMouseButtonsEnabled()&quot;&gt;&lt;code&gt;disabled&lt;/code&gt;&lt;/a&gt; by Java then the AWT event subsystem does not produce mouse events for the extended mouse buttons. So it is not expected that this method returns anything except &lt;code&gt;NOBUTTON&lt;/code&gt;, &lt;code&gt;BUTTON1&lt;/code&gt;, &lt;code&gt;BUTTON2&lt;/code&gt;, &lt;code&gt;BUTTON3&lt;/code&gt;.</source>
          <target state="translated">注：拡張マウスボタンのサポートがJavaによって&lt;a href=&quot;../toolkit#areExtraMouseButtonsEnabled()&quot;&gt; &lt;code&gt;disabled&lt;/code&gt; &lt;/a&gt;されている場合、AWTイベントサブシステムは拡張マウスボタンのマウスイベントを生成しません。したがって、このメソッドが &lt;code&gt;NOBUTTON&lt;/code&gt; 、 &lt;code&gt;BUTTON1&lt;/code&gt; 、 &lt;code&gt;BUTTON2&lt;/code&gt; 、 &lt;code&gt;BUTTON3&lt;/code&gt; 以外のものを返すことは期待されていません。</target>
        </trans-unit>
        <trans-unit id="f21babe50fa616f9cdc93212eb79bc61122ee54b" translate="yes" xml:space="preserve">
          <source>Note: If the character at the given index is a supplementary character, this method does not remove the entire character. If correct handling of supplementary characters is required, determine the number of &lt;code&gt;char&lt;/code&gt;s to remove by calling &lt;code&gt;Character.charCount(thisSequence.codePointAt(index))&lt;/code&gt;, where &lt;code&gt;thisSequence&lt;/code&gt; is this sequence.</source>
          <target state="translated">注：指定されたインデックスの文字が補助文字である場合、このメソッドは文字全体を削除しません。補助文字の正しい取り扱いが必要な場合、多数の決定 &lt;code&gt;char&lt;/code&gt; コールすることによって除去するのを &lt;code&gt;Character.charCount(thisSequence.codePointAt(index))&lt;/code&gt; 、ここで &lt;code&gt;thisSequence&lt;/code&gt; はこのシーケンスです。</target>
        </trans-unit>
        <trans-unit id="b0582b661e46b6e1ec1c1aa47237e51fd281161c" translate="yes" xml:space="preserve">
          <source>Note: In</source>
          <target state="translated">備考</target>
        </trans-unit>
        <trans-unit id="a9204ecfd44447c273dec742a35d1dc5e57a1462" translate="yes" xml:space="preserve">
          <source>Note: In headless mode, no dialogs are shown and printing occurs on the default printer.</source>
          <target state="translated">注意:ヘッドレスモードでは、ダイアログは表示されず、印刷はデフォルトのプリンタで行われます。</target>
        </trans-unit>
        <trans-unit id="80314b1180455ac678366834d1e02acb97495d07" translate="yes" xml:space="preserve">
          <source>Note: In order for this class to function correctly, a connection to the data source must be available in order for the SQL &lt;code&gt;Array&lt;/code&gt; object to be materialized (have all of its elements brought to the client server) if necessary. At this time, logical pointers to the data in the data source, such as locators, are not currently supported.</source>
          <target state="translated">注：このクラスが正しく機能するためには、必要に応じてSQL &lt;code&gt;Array&lt;/code&gt; オブジェクトを実体化する（すべての要素をクライアントサーバーに持ってくる）ために、データソースへの接続が利用可能である必要があります。現時点では、ロケーターなどのデータソース内のデータへの論理ポインターは現在サポートされていません。</target>
        </trans-unit>
        <trans-unit id="b3b1a2c5e2a2e0399f254c3d98b5564c349ce290" translate="yes" xml:space="preserve">
          <source>Note: In order to successfully retrieve the enclosed PKCS8EncodedKeySpec object, &lt;code&gt;cipher&lt;/code&gt; needs to be initialized to either Cipher.DECRYPT_MODE or Cipher.UNWRAP_MODE, with the same key and parameters used for generating the encrypted data.</source>
          <target state="translated">注：囲まれたPKCS8EncodedKeySpecオブジェクトを正常に取得するには、 &lt;code&gt;cipher&lt;/code&gt; 化データの生成に使用したのと同じ鍵とパラメーターを使用してCipher.DECRYPT_MODEまたはCipher.UNWRAP_MODEのいずれかに初期化する必要があります。</target>
        </trans-unit>
        <trans-unit id="35f4e4d2c03ea17823a71d15896db48d9f259672" translate="yes" xml:space="preserve">
          <source>Note: Invoking close() on this class has no effect, and methods of this class can be called after the stream has closed without generating an IOException.</source>
          <target state="translated">注意:このクラスで close()を呼び出しても何の効果もなく、ストリームが終了した後に IOException を発生させずにこのクラスのメソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="9acd43684782f4c36516fa96703a712377fa15d3" translate="yes" xml:space="preserve">
          <source>Note: It is generally a good idea for comparators to also implement &lt;code&gt;java.io.Serializable&lt;/code&gt;, as they may be used as ordering methods in serializable data structures (like &lt;a href=&quot;treeset&quot;&gt;&lt;code&gt;TreeSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;treemap&quot;&gt;&lt;code&gt;TreeMap&lt;/code&gt;&lt;/a&gt;). In order for the data structure to serialize successfully, the comparator (if provided) must implement &lt;code&gt;Serializable&lt;/code&gt;.</source>
          <target state="translated">注：コンパレーターは &lt;code&gt;java.io.Serializable&lt;/code&gt; も実装することをお勧めします。これは、コンパレーターが直列化可能なデータ構造（&lt;a href=&quot;treeset&quot;&gt; &lt;code&gt;TreeSet&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;treemap&quot;&gt; &lt;code&gt;TreeMap&lt;/code&gt; など&lt;/a&gt;）の順序付けメソッドとして使用される可能性があるためです。データ構造を正常にシリアル化するには、コンパレータ（提供されている場合）に &lt;code&gt;Serializable&lt;/code&gt; を実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="0ea2906d3917b8abbddbc2038796605eff4c7ae5" translate="yes" xml:space="preserve">
          <source>Note: It is implementation specific if a packet larger than SO_RCVBUF can be received.</source>
          <target state="translated">注意:SO_RCVBUFよりも大きなパケットを受信できるかどうかは実装に依存します。</target>
        </trans-unit>
        <trans-unit id="2239f01d37c61b0ecb9c5783ae42b578b987f2ee" translate="yes" xml:space="preserve">
          <source>Note: It is possible for the lead or anchor to be changed without a change to the selection. Notification of these changes is often important, such as when the new lead or anchor needs to be updated in the view. Therefore, caution is urged when changing the default value.</source>
          <target state="translated">注意:選択範囲を変更せずにリードやアンカーを変更することは可能です。これらの変更の通知は、新しいリードやアンカーをビュー内で更新する必要がある場合など、重要な場合が多いです。そのため、デフォルト値を変更する際には注意が必要です。</target>
        </trans-unit>
        <trans-unit id="1c15fcfabb87eeba8b7d67b1dcd02e626c1d13a0" translate="yes" xml:space="preserve">
          <source>Note: Loggers may be added dynamically as new classes are loaded. This method only reports on the loggers that are currently registered. It is also important to note that this method only returns the name of a Logger, not a strong reference to the Logger itself. The returned String does nothing to prevent the Logger from being garbage collected. In particular, if the returned name is passed to &lt;code&gt;LogManager.getLogger()&lt;/code&gt;, then the caller must check the return value from &lt;code&gt;LogManager.getLogger()&lt;/code&gt; for null to properly handle the case where the Logger has been garbage collected in the time since its name was returned by this method.</source>
          <target state="translated">注：新しいクラスが読み込まれると、ロガーが動的に追加される場合があります。このメソッドは、現在登録されているロガーについてのみレポートします。また、このメソッドはロガー自体の強い参照ではなく、ロガーの名前のみを返すことに注意することも重要です。返された文字列は、ロガーがガベージコレクションされるのを防ぐために何もしません。特に、返された名前が &lt;code&gt;LogManager.getLogger()&lt;/code&gt; に渡された場合、呼び出し側は &lt;code&gt;LogManager.getLogger()&lt;/code&gt; からの戻り値がnull かどうかをチェックして、その名前以降にLoggerがガベージコレクションされた場合を適切に処理する必要があります。このメソッドによって返されました。</target>
        </trans-unit>
        <trans-unit id="3ec3a90b9ec368a0c2060da5080fdcc9de372e44" translate="yes" xml:space="preserve">
          <source>Note: Many methods in &lt;code&gt;java.applet.Applet&lt;/code&gt; may be invoked by the applet only after the applet is fully constructed; applet should avoid calling methods in &lt;code&gt;java.applet.Applet&lt;/code&gt; in the constructor.</source>
          <target state="translated">注： &lt;code&gt;java.applet.Applet&lt;/code&gt; の多くのメソッドは、アプレットが完全に構築された後にのみ、アプレットによって呼び出される可能性があります。アプレットは、コンストラクタで &lt;code&gt;java.applet.Applet&lt;/code&gt; のメソッドを呼び出さないようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="651a2063ac716df1b0bb56e33cf3b1186971a0c0" translate="yes" xml:space="preserve">
          <source>Note: Not all focus transfers result from invoking this method. As such, a component may receive focus without this or any of the other &lt;code&gt;requestFocus&lt;/code&gt; methods of &lt;code&gt;Component&lt;/code&gt; being invoked.</source>
          <target state="translated">注：すべてのフォーカス転送がこのメソッドの呼び出しの結果であるとは限りません。そのため、コンポーネントは、これまたは &lt;code&gt;Component&lt;/code&gt; 他の &lt;code&gt;requestFocus&lt;/code&gt; メソッドが呼び出されることなくフォーカスを受け取ることができます。</target>
        </trans-unit>
        <trans-unit id="d91232c24d23c2f41135390407008447460af5f6" translate="yes" xml:space="preserve">
          <source>Note: Only one DER-encoded certificate is expected to be in the input stream. Also, all X509Certificate subclasses must provide a constructor of the form:</source>
          <target state="translated">注意:入力ストリームには、DER エンコードされた証明書が 1 つだけ存在することが期待されます。また、すべてのX509Certificateサブクラスは、フォームのコンストラクタを提供しなければなりません。</target>
        </trans-unit>
        <trans-unit id="9d691f41b6dcafd57b2df8df59ee659db9896ed3" translate="yes" xml:space="preserve">
          <source>Note: Since &lt;code&gt;PreparedStatement&lt;/code&gt; objects have usually been parsed prior to making this call, disabling escape processing for prepared statements will likely have no effect.</source>
          <target state="translated">注： &lt;code&gt;PreparedStatement&lt;/code&gt; オブジェクトは通常、この呼び出しを行う前に解析されているため、Preparedステートメントのエスケープ処理を無効にしても効果がない可能性があります。</target>
        </trans-unit>
        <trans-unit id="848e86494df548fc6ea5713503f79da2648aee28" translate="yes" xml:space="preserve">
          <source>Note: Since prepared statements have usually been parsed prior to making this call, disabling escape processing for &lt;code&gt;PreparedStatements&lt;/code&gt; objects will have no effect.</source>
          <target state="translated">注：通常、プリペアドステートメントはこの呼び出しを行う前に解析されるため、 &lt;code&gt;PreparedStatements&lt;/code&gt; オブジェクトのエスケープ処理を無効にしても効果はありません。</target>
        </trans-unit>
        <trans-unit id="caf027bde669dbaaf11479083f77dbafe0d2c487" translate="yes" xml:space="preserve">
          <source>Note: Some earlier implementations of this interface may not support larger sizes of DSA parameters such as 2048 and 3072-bit.</source>
          <target state="translated">注意:このインターフェイスの一部の初期の実装では、2048 や 3072 ビットのようなより大きなサイズの DSA パラメータをサポートしていない場合があります。</target>
        </trans-unit>
        <trans-unit id="ec2b6fdf03e13d06e9e0b6a98f8b7548c1440c31" translate="yes" xml:space="preserve">
          <source>Note: Some earlier implementations of this interface may not support larger values of DSA parameters such as 3072-bit.</source>
          <target state="translated">注意:このインターフェイスの一部の初期の実装では、3072ビットなどのDSAパラメータの大きな値をサポートしていない場合があります。</target>
        </trans-unit>
        <trans-unit id="ba511f3a441875e19dfaf22c49c2beaa4e9cb0ef" translate="yes" xml:space="preserve">
          <source>Note: Standard name is returned instead of the specified one in the constructor when such mapping is available. See Appendix A in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/crypto/CryptoSpec.html#AppA&quot;&gt; Java Cryptography Architecture Reference Guide&lt;/a&gt; for information about standard Cipher algorithm names.</source>
          <target state="translated">注：このようなマッピングが使用可能な場合、コンストラクターで指定された名前の代わりに標準名が返されます。標準の暗号アルゴリズム名については、「&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/crypto/CryptoSpec.html#AppA&quot;&gt;Java暗号化アーキテクチャリファレンスガイド」の&lt;/a&gt;付録Aを参照してください。</target>
        </trans-unit>
        <trans-unit id="2c2db3c69c7f69e3cb2b89f81c974e5aff29dd2e" translate="yes" xml:space="preserve">
          <source>Note: Standard name is returned instead of the specified one in the constructor when such mapping is available. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html&quot;&gt; Java Security Standard Algorithm Names&lt;/a&gt; document for information about standard Cipher algorithm names.</source>
          <target state="translated">注：このようなマッピングが使用可能な場合、コンストラクターで指定された名前の代わりに標準名が返されます。標準の暗号アルゴリズム名については、&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html&quot;&gt;Javaセキュリティの標準アルゴリズム名の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="02ca53e7426de968d6b4390467d9ce03282652d8" translate="yes" xml:space="preserve">
          <source>Note: Subclasses should override this method. If not overridden, it will default to returning the X500Principal of the end-entity certificate that was sent to the server for certificate-based ciphersuites or, return null for non-certificate based ciphersuites, such as Kerberos.</source>
          <target state="translated">注意:サブクラスはこのメソッドをオーバーライドする必要があります。オーバーライドされない場合は、証明書ベースの暗号化方式の場合はサーバに送信されたエンドエンティティ証明書の X500Principal を、Kerberos のような証明書ベースではない暗号化方式の場合は null を返します。</target>
        </trans-unit>
        <trans-unit id="181b38b916afc9a7e3cb0592916dee2435bd4057" translate="yes" xml:space="preserve">
          <source>Note: Subclasses should override this method. If not overridden, it will default to returning the X500Principal of the server's end-entity certificate for certificate-based ciphersuites, or throw an SSLPeerUnverifiedException for non-certificate based ciphersuites, such as Kerberos.</source>
          <target state="translated">注意:サブクラスはこのメソッドをオーバーライドしてください。オーバーライドされていない場合は、証明書ベースの暗号化方式の場合はサーバのエンドエンティティ証明書の X500Principal を返すようにデフォルトで設定されます。</target>
        </trans-unit>
        <trans-unit id="4e0597c375ecd77e983347a6d8f736bf62b1ab15" translate="yes" xml:space="preserve">
          <source>Note: Subclasses should overwrite the default implementation.</source>
          <target state="translated">注意:サブクラスはデフォルトの実装を上書きする必要があります。</target>
        </trans-unit>
        <trans-unit id="16a58c6ce5f2e360c902df800db7fbc9d1fe59ed" translate="yes" xml:space="preserve">
          <source>Note: Swing now calls the newer version of &lt;code&gt;canImport&lt;/code&gt; that takes a &lt;code&gt;TransferSupport&lt;/code&gt;, which in turn calls this method (only if the component in the &lt;code&gt;TransferSupport&lt;/code&gt; is a &lt;code&gt;JComponent&lt;/code&gt;). Developers are encouraged to call and override the newer version as it provides more information (and is the only version that supports use with a &lt;code&gt;TransferHandler&lt;/code&gt; set directly on a &lt;code&gt;JFrame&lt;/code&gt; or other non-&lt;code&gt;JComponent&lt;/code&gt;).</source>
          <target state="translated">注：Swingは今、新しいバージョンの呼び出し &lt;code&gt;canImport&lt;/code&gt; かかり &lt;code&gt;TransferSupport&lt;/code&gt; 順番にこの方法を（コンポーネント場合にのみ呼び出し、 &lt;code&gt;TransferSupport&lt;/code&gt; がある &lt;code&gt;JComponent&lt;/code&gt; ）。開発者は、より多くの情報を提供するため、新しいバージョンを呼び出してオーバーライドすることをお勧めします（ &lt;code&gt;JFrame&lt;/code&gt; またはその他の非 &lt;code&gt;JComponent&lt;/code&gt; に直接設定された &lt;code&gt;TransferHandler&lt;/code&gt; での使用をサポートする唯一のバージョンです）。</target>
        </trans-unit>
        <trans-unit id="a2ef303dc5896a382bfeec9da600a255a8435449" translate="yes" xml:space="preserve">
          <source>Note: Swing now calls the newer version of &lt;code&gt;importData&lt;/code&gt; that takes a &lt;code&gt;TransferSupport&lt;/code&gt;, which in turn calls this method (if the component in the &lt;code&gt;TransferSupport&lt;/code&gt; is a &lt;code&gt;JComponent&lt;/code&gt;). Developers are encouraged to call and override the newer version as it provides more information (and is the only version that supports use with a &lt;code&gt;TransferHandler&lt;/code&gt; set directly on a &lt;code&gt;JFrame&lt;/code&gt; or other non-&lt;code&gt;JComponent&lt;/code&gt;).</source>
          <target state="translated">注：Swingは今、新しいバージョンの呼び出し &lt;code&gt;importData&lt;/code&gt; かかり &lt;code&gt;TransferSupport&lt;/code&gt; （コンポーネント場合順番にこのメソッドを呼び出し、 &lt;code&gt;TransferSupport&lt;/code&gt; がある &lt;code&gt;JComponent&lt;/code&gt; のを）。開発者は、より多くの情報を提供するため、新しいバージョンを呼び出してオーバーライドすることをお勧めします（ &lt;code&gt;JFrame&lt;/code&gt; またはその他の非 &lt;code&gt;JComponent&lt;/code&gt; に直接設定された &lt;code&gt;TransferHandler&lt;/code&gt; での使用をサポートする唯一のバージョンです）。</target>
        </trans-unit>
        <trans-unit id="eefb4ab75388eb8e2bf68b8d0b97c4da599de784" translate="yes" xml:space="preserve">
          <source>Note: That to the right of the caret will have the same index value as the offset (the caret is between two characters).</source>
          <target state="translated">注:カレットの右にあるものは、オフセットと同じインデックス値を持ちます(カレットは2文字の間にあります)。</target>
        </trans-unit>
        <trans-unit id="829e8ef4ac4910ca11bd792b728127d71a3ea5d8" translate="yes" xml:space="preserve">
          <source>Note: The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class includes a set of methods that can convert some other common closure-like objects, for example, &lt;a href=&quot;../../security/privilegedaction&quot;&gt;&lt;code&gt;PrivilegedAction&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;callable&quot;&gt;&lt;code&gt;Callable&lt;/code&gt;&lt;/a&gt; form so they can be submitted.</source>
          <target state="translated">注：&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;クラスには、他の一般的なクロージャーのようなオブジェクト（&lt;a href=&quot;../../security/privilegedaction&quot;&gt; &lt;code&gt;PrivilegedAction&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;callable&quot;&gt; &lt;code&gt;Callable&lt;/code&gt; &lt;/a&gt;フォームなどに変換して送信できるようにする）のセットが含まれています。</target>
        </trans-unit>
        <trans-unit id="d038e2ac66816e885c5abe1b8f25d98475e2e3be" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;Clob&lt;/code&gt; object supplied to this constructor must return non-null for both the &lt;code&gt;Clob.getCharacterStream()&lt;/code&gt; and &lt;code&gt;Clob.getAsciiStream&lt;/code&gt; methods. This &lt;code&gt;SerialClob&lt;/code&gt; constructor cannot serialize a &lt;code&gt;Clob&lt;/code&gt; object in this instance and will throw an &lt;code&gt;SQLException&lt;/code&gt; object.</source>
          <target state="translated">注：このコンストラクターに提供される &lt;code&gt;Clob&lt;/code&gt; オブジェクトは、 &lt;code&gt;Clob.getCharacterStream()&lt;/code&gt; メソッドと &lt;code&gt;Clob.getAsciiStream&lt;/code&gt; メソッドの両方でnull以外を返す必要があります。この &lt;code&gt;SerialClob&lt;/code&gt; コンストラクターは、このインスタンスで &lt;code&gt;Clob&lt;/code&gt; オブジェクトをシリアル化できず、 &lt;code&gt;SQLException&lt;/code&gt; オブジェクトをスローします。</target>
        </trans-unit>
        <trans-unit id="59edeaff2e6ceb0a281032fa44a530fb015d75d0" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;TransferSupport&lt;/code&gt; object passed to this method is only valid for the duration of the method call. It is undefined what values it may contain after this method returns.</source>
          <target state="translated">注：このメソッドに渡される &lt;code&gt;TransferSupport&lt;/code&gt; オブジェクトは、メソッド呼び出しの間のみ有効です。このメソッドが戻った後に含まれる可能性のある値は未定義です。</target>
        </trans-unit>
        <trans-unit id="86df5714c64fe20e95c1bd1a299337b5666514b4" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;acceptChanges()&lt;/code&gt; method will determine if the &lt;code&gt;COMMIT_ON_ACCEPT_CHANGES&lt;/code&gt; is set to true or not. If it is set to true, all updates in the synchronization are committed to the data source. Otherwise, the application &lt;b&gt;must&lt;/b&gt; explicitly call the &lt;code&gt;commit()&lt;/code&gt; or &lt;code&gt;rollback()&lt;/code&gt; methods as appropriate.</source>
          <target state="translated">注： &lt;code&gt;acceptChanges()&lt;/code&gt; メソッドは、 &lt;code&gt;COMMIT_ON_ACCEPT_CHANGES&lt;/code&gt; がtrueに設定されているかどうかを判別します。trueに設定されている場合、同期のすべての更新はデータソースにコミットされます。それ以外の場合、アプリケーション&lt;b&gt;は必要&lt;/b&gt;に応じて &lt;code&gt;commit()&lt;/code&gt; または &lt;code&gt;rollback()&lt;/code&gt; メソッドを明示的に呼び出す&lt;b&gt;必要があり&lt;/b&gt;ます。</target>
        </trans-unit>
        <trans-unit id="e09b6f97f52df276a7f2d8e7779b8d21ae07350e" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;acceptChanges()&lt;/code&gt; method will determine if the &lt;code&gt;COMMIT_ON_ACCEPT_CHANGES&lt;/code&gt; is set to true or not. If it is set to true, all updates in the synchronization are committed to the data source. Otherwise, the application &lt;b&gt;must&lt;/b&gt; explicitly call the &lt;code&gt;commit&lt;/code&gt; or &lt;code&gt;rollback&lt;/code&gt; methods as appropriate.</source>
          <target state="translated">注： &lt;code&gt;acceptChanges()&lt;/code&gt; メソッドは、 &lt;code&gt;COMMIT_ON_ACCEPT_CHANGES&lt;/code&gt; がtrueに設定されているかどうかを判別します。trueに設定されている場合、同期のすべての更新はデータソースにコミットされます。それ以外の場合、アプリケーション&lt;b&gt;は必要&lt;/b&gt;に応じて &lt;code&gt;commit&lt;/code&gt; メソッドまたは &lt;code&gt;rollback&lt;/code&gt; メソッドを明示的に呼び出す&lt;b&gt;必要があり&lt;/b&gt;ます。</target>
        </trans-unit>
        <trans-unit id="5fc7d3199e794e858e1fae14ccd1dd4da161d25c" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;readAheadLimit&lt;/code&gt; for this class has no meaning.</source>
          <target state="translated">注：このクラスの &lt;code&gt;readAheadLimit&lt;/code&gt; には意味がありません。</target>
        </trans-unit>
        <trans-unit id="0c70d1e1b6f573784d8c941b1e75ceb283fad1d2" translate="yes" xml:space="preserve">
          <source>Note: The LogManager may only retain a weak reference to the newly created Logger. It is important to understand that a previously created Logger with the given name may be garbage collected at any time if there is no strong reference to the Logger. In particular, this means that two back-to-back calls like &lt;code&gt;getLogger(&quot;MyLogger&quot;).log(...)&lt;/code&gt; may use different Logger objects named &quot;MyLogger&quot; if there is no strong reference to the Logger named &quot;MyLogger&quot; elsewhere in the program.</source>
          <target state="translated">注：LogManagerは、新しく作成されたロガーへの弱い参照のみを保持できます。ロガーへの強い参照がない場合、指定された名前で以前に作成されたロガーがいつでもガベージコレクションされる可能性があることを理解することが重要です。特に、これは、他の場所に「MyLogger」という名前のロガーへの強い参照がない場合、 &lt;code&gt;getLogger(&quot;MyLogger&quot;).log(...)&lt;/code&gt; ような2つの連続した呼び出しが「MyLogger」という名前の異なるLoggerオブジェクトを使用する可能性があることを意味しますプログラムで。</target>
        </trans-unit>
        <trans-unit id="92741ee82cf7d8822f7fe805f7832a246f91b414" translate="yes" xml:space="preserve">
          <source>Note: The LogManager may only retain a weak reference to the newly created Logger. It is important to understand that a previously created Logger with the given name may be garbage collected at any time if there is no strong reference to the Logger. In particular, this means that two back-to-back calls like &lt;code&gt;getLogger(&quot;MyLogger&quot;, ...).log(...)&lt;/code&gt; may use different Logger objects named &quot;MyLogger&quot; if there is no strong reference to the Logger named &quot;MyLogger&quot; elsewhere in the program.</source>
          <target state="translated">注：LogManagerは、新しく作成されたロガーへの弱い参照のみを保持できます。ロガーへの強い参照がない場合、指定された名前で以前に作成されたロガーがいつでもガベージコレクションされる可能性があることを理解することが重要です。特に、これは、名前付きロガーへの強い参照がない場合 &lt;code&gt;getLogger(&quot;MyLogger&quot;, ...).log(...)&lt;/code&gt; ような2つの連続した呼び出しが&quot;MyLogger&quot;という名前の異なるLoggerオブジェクトを使用する可能性がある「MyLogger」はプログラムの他の場所にあります。</target>
        </trans-unit>
        <trans-unit id="feb96d73bb909fef954b2328b78013fad55f611e" translate="yes" xml:space="preserve">
          <source>Note: The component must not be one that the developer has already added to the tabbed pane.</source>
          <target state="translated">注意:コンポーネントは、開発者が既にタブ付きペインに追加したものであってはなりません。</target>
        </trans-unit>
        <trans-unit id="0c41d54bb9b5669b0c64912f8485c39fa1e24012" translate="yes" xml:space="preserve">
          <source>Note: The data transfer should be completed before the call to the &lt;code&gt;DropTargetDropEvent&lt;/code&gt;'s dropComplete(boolean success) method. After that, a call to the getTransferData() method of the &lt;code&gt;Transferable&lt;/code&gt; returned by &lt;code&gt;DropTargetDropEvent.getTransferable()&lt;/code&gt; is guaranteed to succeed only if the data transfer is local; that is, only if &lt;code&gt;DropTargetDropEvent.isLocalTransfer()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. Otherwise, the behavior of the call is implementation-dependent.</source>
          <target state="translated">注：データ転送は、 &lt;code&gt;DropTargetDropEvent&lt;/code&gt; のdropComplete（boolean success）メソッドを呼び出す前に完了する必要があります。その後、 &lt;code&gt;DropTargetDropEvent.getTransferable()&lt;/code&gt; によって返される &lt;code&gt;Transferable&lt;/code&gt; のgetTransferData（）メソッドの呼び出しは、データ転送がローカルである場合にのみ成功することが保証されます。つまり、 &lt;code&gt;DropTargetDropEvent.isLocalTransfer()&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; を返す場合のみです。それ以外の場合、呼び出しの動作は実装に依存します。</target>
        </trans-unit>
        <trans-unit id="dc241da938e654c2874870e524b6658bbd0bf4e6" translate="yes" xml:space="preserve">
          <source>Note: The defined behavior for &lt;code&gt;equals&lt;/code&gt; is known to be inconsistent with virtual hosting in HTTP.</source>
          <target state="translated">注：定義された &lt;code&gt;equals&lt;/code&gt; の動作は、HTTPの仮想ホスティングと一致しないことがわかっています。</target>
        </trans-unit>
        <trans-unit id="468af138ea1737287630fec9eab7e7e34cfe5243" translate="yes" xml:space="preserve">
          <source>Note: The object returned from this method may be an instance of an implementation-specific class. The &lt;code&gt;RemoteObject&lt;/code&gt; class ensures serialization portability of its instances' remote references through the behavior of its custom &lt;code&gt;writeObject&lt;/code&gt; and &lt;code&gt;readObject&lt;/code&gt; methods. An instance of &lt;code&gt;RemoteRef&lt;/code&gt; should not be serialized outside of its &lt;code&gt;RemoteObject&lt;/code&gt; wrapper instance or the result may be unportable.</source>
          <target state="translated">注：このメソッドから返されるオブジェクトは、実装固有のクラスのインスタンスである可能性があります。 &lt;code&gt;RemoteObject&lt;/code&gt; クラスは、その独自の行動を通じてそのインスタンスのリモート参照の直列化の移植性を確保し &lt;code&gt;writeObject&lt;/code&gt; と &lt;code&gt;readObject&lt;/code&gt; メソッド方法。 &lt;code&gt;RemoteRef&lt;/code&gt; のインスタンスは、 &lt;code&gt;RemoteObject&lt;/code&gt; ラッパーインスタンスの外部でシリアル化しないでください。シリアル化しないと、結果が移植できない可能性があります。</target>
        </trans-unit>
        <trans-unit id="cb2c0125ca52804eb84e6185f726b4defde7f085" translate="yes" xml:space="preserve">
          <source>Note: The platform MXBean interfaces (i.e. all subinterfaces of &lt;code&gt;PlatformManagedObject&lt;/code&gt;) are implemented by the Java platform only. New methods may be added in these interfaces in future Java SE releases. In addition, this &lt;code&gt;PlatformManagedObject&lt;/code&gt; interface is only intended for the management interfaces for the platform to extend but not for applications.</source>
          <target state="translated">注：プラットフォームMXBeanインターフェース（つまり、 &lt;code&gt;PlatformManagedObject&lt;/code&gt; のすべてのサブインターフェース）は、Javaプラットフォームでのみ実装されます。新しいメソッドは、将来のJava SEリリースでこれらのインタフェースに追加される可能性があります。さらに、この &lt;code&gt;PlatformManagedObject&lt;/code&gt; インターフェースは、プラットフォーム用の管理インターフェースのみを対象としており、アプリケーション用ではありません。</target>
        </trans-unit>
        <trans-unit id="b080218a8b8b36e4aa5303cc15460cb9371e046f" translate="yes" xml:space="preserve">
          <source>Note: The process may not terminate immediately. For example, &lt;code&gt;isAlive()&lt;/code&gt; may return true for a brief period after &lt;code&gt;destroy()&lt;/code&gt; is called.</source>
          <target state="translated">注：プロセスはすぐには終了しない場合があります。たとえば、 &lt;code&gt;isAlive()&lt;/code&gt; は、 &lt;code&gt;destroy()&lt;/code&gt; が呼び出された後、短時間trueを返す場合があります。</target>
        </trans-unit>
        <trans-unit id="7d0bdb488b2efc07500d457d8d10faa20dc11ebe" translate="yes" xml:space="preserve">
          <source>Note: The process may not terminate immediately. For example, &lt;code&gt;isAlive()&lt;/code&gt; may return true for a brief period after &lt;code&gt;destroyForcibly()&lt;/code&gt; is called.</source>
          <target state="translated">注：プロセスはすぐには終了しない場合があります。たとえば、 &lt;code&gt;isAlive()&lt;/code&gt; は、 &lt;code&gt;destroyForcibly()&lt;/code&gt; が呼び出された後、短時間trueを返す場合があります。</target>
        </trans-unit>
        <trans-unit id="6f19f44a34138ef570fdb2e012d7bf045747baf1" translate="yes" xml:space="preserve">
          <source>Note: The resolved address may be cached for a short period of time.</source>
          <target state="translated">注意:解決されたアドレスは、短期間だけキャッシュされることがあります。</target>
        </trans-unit>
        <trans-unit id="6529efd19f9ce88cc38433cb40d4dbd8c320abb9" translate="yes" xml:space="preserve">
          <source>Note: The returned &lt;code&gt;PropertyChangeSupport&lt;/code&gt; notifies any &lt;code&gt;PropertyChangeListener&lt;/code&gt;s asynchronously on the</source>
          <target state="translated">注：返された &lt;code&gt;PropertyChangeSupport&lt;/code&gt; は、 &lt;code&gt;PropertyChangeListener&lt;/code&gt; に非同期で通知します。</target>
        </trans-unit>
        <trans-unit id="099e578890eb02c5778f7dbd870796b27e93416c" translate="yes" xml:space="preserve">
          <source>Note: The returned bounds is in baseline-relative coordinates (see &lt;a href=&quot;font&quot;&gt;&lt;code&gt;class notes&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">注：返される境界は、ベースライン相対座標です（&lt;a href=&quot;font&quot;&gt; &lt;code&gt;class notes&lt;/code&gt; &lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="6b486ec4bb546b81e2bef4f03226078b2ee42cd9" translate="yes" xml:space="preserve">
          <source>Note: The returned bounds is in baseline-relative coordinates (see &lt;a href=&quot;fontmetrics&quot;&gt;&lt;code&gt;class notes&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">注：返される境界は、ベースライン相対座標です（&lt;a href=&quot;fontmetrics&quot;&gt; &lt;code&gt;class notes&lt;/code&gt; &lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="b3bfd4426fc891728706d1757aab601cdbe3889d" translate="yes" xml:space="preserve">
          <source>Note: The returned object is not guaranteed to operate correctly if multiple threads use it at the same time. A multi-threaded application should either allocate multiple packer engines, or else serialize use of one engine with a lock.</source>
          <target state="translated">注意:複数のスレッドが同時に使用した場合、返されたオブジェクトが正しく動作することは保証されません。マルチスレッドのアプリケーションでは、複数のパッカーエンジンを割り当てるか、一つのエンジンをロックしてシリアライズしなければなりません。</target>
        </trans-unit>
        <trans-unit id="aa12d2d2d24e785c7e1d72092e7d61dfd111c7aa" translate="yes" xml:space="preserve">
          <source>Note: The returned object is not guaranteed to operate correctly if multiple threads use it at the same time. A multi-threaded application should either allocate multiple unpacker engines, or else serialize use of one engine with a lock.</source>
          <target state="translated">注意:複数のスレッドが同時に使用している場合には、返されたオブジェクトが正しく動作することは保証されません。マルチスレッドのアプリケーションでは、複数のアンパッカーエンジンを割り当てるか、1つのエンジンの使用をロックでシリアライズしなければなりません。</target>
        </trans-unit>
        <trans-unit id="106838bc9b93664cc34ef27cb55a64598b97cd81" translate="yes" xml:space="preserve">
          <source>Note: The returned value may not be a valid certificate chain and should not be relied on for trust decisions.</source>
          <target state="translated">注意:返された値は有効な証明書チェーンではない可能性があり、トラストの決定には依存すべきではありません。</target>
        </trans-unit>
        <trans-unit id="4cb9867785bc909af714b72748d5541deebbcd80" translate="yes" xml:space="preserve">
          <source>Note: The specialized private key interfaces extend this interface. See, for example, the &lt;code&gt;DSAPrivateKey&lt;/code&gt; interface in &lt;a href=&quot;interfaces/package-summary&quot;&gt;&lt;code&gt;java.security.interfaces&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注：専用の秘密鍵インターフェースは、このインターフェースを拡張します。たとえば、&lt;a href=&quot;interfaces/package-summary&quot;&gt; &lt;code&gt;java.security.interfaces&lt;/code&gt; &lt;/a&gt;の &lt;code&gt;DSAPrivateKey&lt;/code&gt; インターフェースを参照してください。</target>
        </trans-unit>
        <trans-unit id="6eb3a7abe026de2d8a10bdb0a405dc217846b10a" translate="yes" xml:space="preserve">
          <source>Note: The subprocess may not terminate immediately. i.e. &lt;code&gt;isAlive()&lt;/code&gt; may return true for a brief period after &lt;code&gt;destroyForcibly()&lt;/code&gt; is called. This method may be chained to &lt;code&gt;waitFor()&lt;/code&gt; if needed.</source>
          <target state="translated">注：サブプロセスはすぐに終了しない場合があります。すなわち &lt;code&gt;isAlive()&lt;/code&gt; の後の短い期間のためにtrueを返すこと &lt;code&gt;destroyForcibly()&lt;/code&gt; と呼ばれています。このメソッドは、必要に応じて &lt;code&gt;waitFor()&lt;/code&gt; にチェーンできます。</target>
        </trans-unit>
        <trans-unit id="eef0e99dd372e2efc3310880c1b817efec541eab" translate="yes" xml:space="preserve">
          <source>Note: There is also a &lt;code&gt;java.security.AllPermission&lt;/code&gt; permission that implies all permissions. It exists to simplify the work of system administrators who might need to perform multiple tasks that require all (or numerous) permissions.</source>
          <target state="translated">注：すべての権限を意味する &lt;code&gt;java.security.AllPermission&lt;/code&gt; 権限もあります。これは、すべて（または多数）の権限を必要とする複数のタスクを実行する必要があるシステム管理者の作業を簡略化するために存在します。</target>
        </trans-unit>
        <trans-unit id="161f6f9af0674cbec18438ee5499c28ed89293de" translate="yes" xml:space="preserve">
          <source>Note: This constructor will use null as the value of the algorithm parameters. If the encryption algorithm has parameters whose value is not null, a different constructor, e.g. EncryptedPrivateKeyInfo(AlgorithmParameters, byte[]), should be used.</source>
          <target state="translated">注意:このコンストラクタでは、アルゴリズムのパラメータの値として null を使用します。暗号化アルゴリズムのパラメータの値が NULL ではない場合は、別のコンストラクタ、例えば EncryptedPrivateKeyInfo(AlgorithmParameters,byte[])を使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="f2df387d6ffad1cd1feb5babdedafd6cd1f5f317" translate="yes" xml:space="preserve">
          <source>Note: This functionality is not supported by all existing platforms, so it is implementation specific whether this option will be ignored or not. However, if it is not supported then &lt;a href=&quot;#getReuseAddress()&quot;&gt;&lt;code&gt;getReuseAddress()&lt;/code&gt;&lt;/a&gt; will always return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">注：この機能は既存のすべてのプラットフォームでサポートされているわけではないため、このオプションを無視するかどうかは実装によって異なります。ただし、サポートされていない場合、&lt;a href=&quot;#getReuseAddress()&quot;&gt; &lt;code&gt;getReuseAddress()&lt;/code&gt; &lt;/a&gt;は常に &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0a0a4ee13e9a6c6b352dbd8267c67b65f32862ca" translate="yes" xml:space="preserve">
          <source>Note: This functionality is not supported by all existing platforms, so it is implementation specific whether this option will be ignored or not. However, if it is not supported then &lt;a href=&quot;datagramsocket#getReuseAddress--&quot;&gt;&lt;code&gt;getReuseAddress()&lt;/code&gt;&lt;/a&gt; will always return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">注：この機能はすべての既存のプラットフォームでサポートされているわけではないため、このオプションが無視されるかどうかは実装固有です。ただし、サポートされていない場合、&lt;a href=&quot;datagramsocket#getReuseAddress--&quot;&gt; &lt;code&gt;getReuseAddress()&lt;/code&gt; &lt;/a&gt;は常に &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="636978926816ab760e5f8bfa6d24cf456467b20b" translate="yes" xml:space="preserve">
          <source>Note: This is merely a convenience wrapper. All work is delegated to &lt;code&gt;PropertyChangeSupport&lt;/code&gt; from &lt;a href=&quot;#getPropertyChangeSupport()&quot;&gt;&lt;code&gt;getPropertyChangeSupport()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注：これは単なる便利なラッパーです。すべての作業は、&lt;a href=&quot;#getPropertyChangeSupport()&quot;&gt; &lt;code&gt;getPropertyChangeSupport()&lt;/code&gt; &lt;/a&gt;から &lt;code&gt;PropertyChangeSupport&lt;/code&gt; に委任されます。</target>
        </trans-unit>
        <trans-unit id="94361f297ac53fd6e2fe262dfb0ec7c6082e72f2" translate="yes" xml:space="preserve">
          <source>Note: This method can be used only when using certificate-based cipher suites; using it with non-certificate-based cipher suites, such as Kerberos, will throw an SSLPeerUnverifiedException.</source>
          <target state="translated">注意:このメソッドは証明書ベースの暗号化スイートを使用する場合にのみ使用できます。 Kerberos のような非証明書ベースの暗号化スイートを使用すると SSLPeerUnverifiedException がスローされます。</target>
        </trans-unit>
        <trans-unit id="33eea527f5ec580857a4627523cfd3c4cde86c2c" translate="yes" xml:space="preserve">
          <source>Note: This method exists for backward binary compatibility with earlier versions of the Swing library. It simply returns the result returned by &lt;a href=&quot;#currentManager(java.awt.Component)&quot;&gt;&lt;code&gt;currentManager(Component)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注：このメソッドは、以前のバージョンのSwingライブラリとの下位バイナリ互換性のために存在します。&lt;a href=&quot;#currentManager(java.awt.Component)&quot;&gt; &lt;code&gt;currentManager(Component)&lt;/code&gt; &lt;/a&gt;によって返された結果を返すだけです。</target>
        </trans-unit>
        <trans-unit id="e5a14fa0e58bb4ad092b08d41779f8de970fe707" translate="yes" xml:space="preserve">
          <source>Note: This method is intended to be called by the &lt;a href=&quot;imageproducer&quot;&gt;&lt;code&gt;ImageProducer&lt;/code&gt;&lt;/a&gt; of the &lt;code&gt;Image&lt;/code&gt; whose pixels are being filtered. Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.</source>
          <target state="translated">注：このメソッドは、によって呼び出されることが意図され&lt;a href=&quot;imageproducer&quot;&gt; &lt;code&gt;ImageProducer&lt;/code&gt; &lt;/a&gt;の &lt;code&gt;Image&lt;/code&gt; ピクセルフィルタリングされています。このクラスを使用して画像からピクセルを取得する開発者は、このメソッドを直接呼び出すことは避けてください。この操作を行うと、要求されたピクセルの取得で問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="f4b7e71d9afb52221bee88c0a4a2f9ffcdbd8c6f" translate="yes" xml:space="preserve">
          <source>Note: This method is intended to be called by the &lt;code&gt;ImageProducer&lt;/code&gt; of the &lt;code&gt;Image&lt;/code&gt; whose pixels are being filtered. Developers using this class to filter pixels from an image should avoid calling this method directly since that operation could interfere with the filtering operation.</source>
          <target state="translated">注：このメソッドは、によって呼び出されることが意図され &lt;code&gt;ImageProducer&lt;/code&gt; の &lt;code&gt;Image&lt;/code&gt; ピクセルフィルタリングされています。このクラスを使用して画像からピクセルをフィルタリングする開発者は、このメソッドがフィルタリング操作に干渉する可能性があるため、このメソッドを直接呼び出すことは避けてください。</target>
        </trans-unit>
        <trans-unit id="0cef8832cdd205b2719b0e0946fff4fc10ffc81d" translate="yes" xml:space="preserve">
          <source>Note: This method is intended to be called by the &lt;code&gt;ImageProducer&lt;/code&gt; of the &lt;code&gt;Image&lt;/code&gt; whose pixels are being filtered. Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.</source>
          <target state="translated">注：このメソッドは、によって呼び出されることが意図され &lt;code&gt;ImageProducer&lt;/code&gt; の &lt;code&gt;Image&lt;/code&gt; ピクセルフィルタリングされています。このクラスを使用して画像からピクセルを取得する開発者は、このメソッドを直接呼び出すことは避けてください。この操作を行うと、要求されたピクセルの取得で問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="9cbed1da035477ce5bc0b5afa5763ab6f9fcd84e" translate="yes" xml:space="preserve">
          <source>Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to filter pixels from an image should avoid calling this method directly since that operation could interfere with the filtering operation.</source>
          <target state="translated">注意:このメソッドは、フィルタリング対象のピクセルを持つ画像の ImageProducer から呼び出されることを想定しています。このクラスを使用して画像からピクセルをフィルタリングする開発者は、このメソッドを直接呼び出すことは避けなければなりません。</target>
        </trans-unit>
        <trans-unit id="100545d6f4bfc8cd356ed5027863a959afefa37f" translate="yes" xml:space="preserve">
          <source>Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being grabbed. Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.</source>
          <target state="translated">注意:このメソッドは、ピクセルを取得する画像の ImageProducer から呼び出されることを想定しています。このクラスを使用して画像からピクセルを取得する開発者は、このメソッドを直接呼び出すことは避けなければなりません。</target>
        </trans-unit>
        <trans-unit id="8e332b3dabe0b9e378ed40e7be4f3e446472fccd" translate="yes" xml:space="preserve">
          <source>Note: This method is useful only when using certificate-based cipher suites.</source>
          <target state="translated">注意:この方法は、証明書ベースの暗号スイートを使用する場合にのみ有用です。</target>
        </trans-unit>
        <trans-unit id="66ae0f7e3684dd3137d4b1574bf70434fe5d283b" translate="yes" xml:space="preserve">
          <source>Note: This method provides complimentary functionality to that provided by other high level Swing printing APIs. However, it deals strictly with painting and should not be confused as providing information on higher level print processes. For example, a &lt;a href=&quot;jtable#print()&quot;&gt;&lt;code&gt;JTable.print()&lt;/code&gt;&lt;/a&gt; operation doesn't necessarily result in a continuous rendering of the full component, and the return value of this method can change multiple times during that operation. It is even possible for the component to be painted to the screen while the printing process is ongoing. In such a case, the return value of this method is &lt;code&gt;true&lt;/code&gt; when, and only when, the table is being painted as part of the printing process.</source>
          <target state="translated">注：このメソッドは、他の高レベルのSwing印刷APIによって提供される機能を補完する機能を提供します。ただし、厳密にペイントを扱っているため、より高いレベルの印刷プロセスに関する情報を提供するものと混同しないでください。たとえば、&lt;a href=&quot;jtable#print()&quot;&gt; &lt;code&gt;JTable.print()&lt;/code&gt; &lt;/a&gt;操作は、必ずしもコンポーネント全体の連続レンダリングをもたらすとは限らず、このメソッドの戻り値は、その操作中に複数回変更される可能性があります。印刷プロセスの進行中に、コンポーネントを画面にペイントすることも可能です。このような場合、このメソッドの戻り値は、テーブルが印刷プロセスの一部としてペイントされている場合にのみ &lt;code&gt;true&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="bbe8d1e4d86c4411b4dfede1ea9306782c513bfb" translate="yes" xml:space="preserve">
          <source>Note: This method provides the same functionality as &lt;code&gt;getWindowAncestor&lt;/code&gt;.</source>
          <target state="translated">注：このメソッドは、 &lt;code&gt;getWindowAncestor&lt;/code&gt; と同じ機能を提供します。</target>
        </trans-unit>
        <trans-unit id="8aabebac2509a2877a3ddc5ae871ed25bf3913a4" translate="yes" xml:space="preserve">
          <source>Note: This method should be called under AWT tree lock.</source>
          <target state="translated">注意:このメソッドはAWTツリーロックの下で呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="477184c0322c989403dcf2a2ce082334f1041366" translate="yes" xml:space="preserve">
          <source>Note: Unless it is necessary to fetch the &lt;code&gt;Transferable&lt;/code&gt; directly, use one of the other methods on this class to inquire about the transfer. This may perform better than fetching the &lt;code&gt;Transferable&lt;/code&gt; and asking it directly.</source>
          <target state="translated">注： &lt;code&gt;Transferable&lt;/code&gt; を直接フェッチする必要がない限り、このクラスの他のメソッドの1つを使用して、転送について問い合わせてください。これは、 &lt;code&gt;Transferable&lt;/code&gt; をフェッチして直接要求するよりもパフォーマンスが高い場合があります。</target>
        </trans-unit>
        <trans-unit id="0025b496272ff53acd29d2ec8253eb1cf0ca5710" translate="yes" xml:space="preserve">
          <source>Note: Unless otherwise noted, passing a &lt;code&gt;null&lt;/code&gt; argument to a constructor or method in this class will cause a &lt;a href=&quot;../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">注：特に明記しない限り、このクラスのコンストラクターまたはメソッドに &lt;code&gt;null&lt;/code&gt; 引数を渡すと、&lt;a href=&quot;../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="6d73b71abd37a6b70a78bd968c113e2554e93e98" translate="yes" xml:space="preserve">
          <source>Note: Use &lt;code&gt;setBlockIncrement&lt;/code&gt; to set the block increment to a size slightly smaller than the view's extent. That way, when the user jumps the knob to an adjacent position, one or two lines of the original contents remain in view.</source>
          <target state="translated">注： &lt;code&gt;setBlockIncrement&lt;/code&gt; を使用して、ブロックの増分をビューの範囲よりわずかに小さいサイズに設定します。これにより、ユーザーがノブを隣接する位置にジャンプしても、元のコンテンツの1行または2行が表示されたままになります。</target>
        </trans-unit>
        <trans-unit id="34ede23809d266a2bb257d3aae7951ad307ef882" translate="yes" xml:space="preserve">
          <source>Note: When used with &lt;code&gt;JApplet&lt;/code&gt;, &lt;code&gt;TransferHandler&lt;/code&gt; only provides data import capability, as the data export related methods are currently typed to &lt;code&gt;JComponent&lt;/code&gt;.</source>
          <target state="translated">注：データエクスポート関連のメソッドは現在 &lt;code&gt;JComponent&lt;/code&gt; に入力されているため、 &lt;code&gt;JApplet&lt;/code&gt; とともに使用する場合、 &lt;code&gt;TransferHandler&lt;/code&gt; はデータインポート機能のみを提供します。</target>
        </trans-unit>
        <trans-unit id="df06db0f3294c6120242097a6af4757bb34f882c" translate="yes" xml:space="preserve">
          <source>Note: When used with &lt;code&gt;JDialog&lt;/code&gt;, &lt;code&gt;TransferHandler&lt;/code&gt; only provides data import capability, as the data export related methods are currently typed to &lt;code&gt;JComponent&lt;/code&gt;.</source>
          <target state="translated">注： &lt;code&gt;JDialog&lt;/code&gt; とともに使用する場合、データエクスポート関連のメソッドは現在 &lt;code&gt;JComponent&lt;/code&gt; に入力されているため、 &lt;code&gt;TransferHandler&lt;/code&gt; はデータインポート機能のみを提供します。</target>
        </trans-unit>
        <trans-unit id="322e15c7dadef29a3e87b89c79ffab47c2a53df2" translate="yes" xml:space="preserve">
          <source>Note: When used with &lt;code&gt;JFrame&lt;/code&gt;, &lt;code&gt;TransferHandler&lt;/code&gt; only provides data import capability, as the data export related methods are currently typed to &lt;code&gt;JComponent&lt;/code&gt;.</source>
          <target state="translated">注： &lt;code&gt;JFrame&lt;/code&gt; とともに使用する場合、データエクスポート関連のメソッドは現在 &lt;code&gt;JComponent&lt;/code&gt; に入力されているため、 &lt;code&gt;TransferHandler&lt;/code&gt; はデータインポート機能のみを提供します。</target>
        </trans-unit>
        <trans-unit id="197740af44caa7532f1e472ba1b85b1abffff1fa" translate="yes" xml:space="preserve">
          <source>Note: When used with &lt;code&gt;JWindow&lt;/code&gt;, &lt;code&gt;TransferHandler&lt;/code&gt; only provides data import capability, as the data export related methods are currently typed to &lt;code&gt;JComponent&lt;/code&gt;.</source>
          <target state="translated">注： &lt;code&gt;JWindow&lt;/code&gt; とともに使用する場合、データエクスポート関連のメソッドは現在 &lt;code&gt;JComponent&lt;/code&gt; に入力されているため、 &lt;code&gt;TransferHandler&lt;/code&gt; はデータインポート機能のみを提供します。</target>
        </trans-unit>
        <trans-unit id="f23f77f4ad25e60f14465494e7ece9e030e6cbf0" translate="yes" xml:space="preserve">
          <source>Note: When using the 'nowrap' option it is also necessary to provide an extra &quot;dummy&quot; byte as input. This is required by the ZLIB native library in order to support certain optimizations.</source>
          <target state="translated">注意:'nowrap' オプションを使用する場合、入力として余分な「ダミー」バイトを提供する必要があります。これは、ある種の最適化をサポートするために、ZLIBネイティブライブラリによって要求されます。</target>
        </trans-unit>
        <trans-unit id="3f937bca17c9ac9472d4a1054b2dbdf22c1cacc4" translate="yes" xml:space="preserve">
          <source>Note: While it is permissible for lists to contain themselves as elements, extreme caution is advised: the &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; methods are no longer well defined on such a list.</source>
          <target state="translated">注：リスト自体を要素として含めることは許可されていますが、このようなリストでは、 &lt;code&gt;equals&lt;/code&gt; &lt;code&gt;hashCode&lt;/code&gt; とhashCodeメソッドが適切に定義されなくなっているため、細心の注意が必要です。</target>
        </trans-unit>
        <trans-unit id="505eabdf8606963a0a713cdc819bdc17903921f9" translate="yes" xml:space="preserve">
          <source>Note: array sizes of parameters should match. If both arrays are empty, then an empty descriptor is created.</source>
          <target state="translated">注意:パラメータの配列サイズは一致していなければなりません。両方の配列が空の場合、空のディスクリプタが作成されます。</target>
        </trans-unit>
        <trans-unit id="9cb7ccc0dba74e30da8abb592eb7db1f3faea618" translate="yes" xml:space="preserve">
          <source>Note: as of the Java 2 platform v1.3, it is recommended that developers call Component.AccessibleAWTComponent.getAccessibleIndexInParent() instead of using this method.</source>
          <target state="translated">注意:Java 2 プラットフォーム v1.3 では、このメソッドを使用する代わりに、開発者は Component.AccessibleAWTComponent.getAccessibleIndexInParent()を呼び出すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="23df42e7e6dc01a77c67ab6ce4ec9cc24c2a3029" translate="yes" xml:space="preserve">
          <source>Note: calling &lt;code&gt;get&lt;/code&gt; on the</source>
          <target state="translated">注： &lt;code&gt;get&lt;/code&gt; を呼び出すと</target>
        </trans-unit>
        <trans-unit id="16c77652d4c9e7acdab4bd784b702218d68992cf" translate="yes" xml:space="preserve">
          <source>Note: care should be exercised if &lt;code&gt;BigDecimal&lt;/code&gt; objects are used as keys in a &lt;a href=&quot;../util/sortedmap&quot;&gt;&lt;code&gt;SortedMap&lt;/code&gt;&lt;/a&gt; or elements in a &lt;a href=&quot;../util/sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; since &lt;code&gt;BigDecimal&lt;/code&gt;'s</source>
          <target state="translated">注：場合は注意が必要がある &lt;code&gt;BigDecimal&lt;/code&gt; オブジェクトがキーとして使用されている&lt;a href=&quot;../util/sortedmap&quot;&gt; &lt;code&gt;SortedMap&lt;/code&gt; &lt;/a&gt;かの要素&lt;a href=&quot;../util/sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; &lt;/a&gt;以来 &lt;code&gt;BigDecimal&lt;/code&gt; さん</target>
        </trans-unit>
        <trans-unit id="741b0ef233c352c251d9a74cef092014bc932507" translate="yes" xml:space="preserve">
          <source>Note: changing modality of the visible dialog may have no effect until it is hidden and then shown again.</source>
          <target state="translated">注意:表示されているダイアログのモダリティを変更しても、それが非表示になってから再度表示されるまでは効果がない場合があります。</target>
        </trans-unit>
        <trans-unit id="d7e1d73aa585de626fdba584c2f16fba537745eb" translate="yes" xml:space="preserve">
          <source>Note: changing the modal exclusion type for a visible window may have no effect until it is hidden and then shown again.</source>
          <target state="translated">注意:表示されているウィンドウのモーダル除外タイプを変更しても、非表示にしてから再度表示されるまでは効果がない場合があります。</target>
        </trans-unit>
        <trans-unit id="1798306e90fb7c0582f65fa555645adc7b33a9b8" translate="yes" xml:space="preserve">
          <source>Note: developers/admininstrators are responsible for verifying the trustworthiness of content and structure of the Java Agents they deploy, since those are able to arbitrarily transform the bytecode from other JAR files. Since that happens after the Jars containing the bytecode have been verified as trusted, the trustworthiness of a Java Agent can determine the trust towards the entire program.</source>
          <target state="translated">注意:開発者/管理者は、デプロイしたJavaエージェントの内容と構造の信頼性を検証する責任があります。バイトコードを含む JAR が信頼されていると検証された後に行われるので、Java エージェントの信頼性は、プログラム全体に対する信頼性を決定することができます。</target>
        </trans-unit>
        <trans-unit id="6921cbe0752e6d510f001c2f6210fb8c10abaff6" translate="yes" xml:space="preserve">
          <source>Note: even if the given location is unknown to this file manager, it may not return &lt;code&gt;null&lt;/code&gt;. Also, an unknown location may not cause an exception.</source>
          <target state="translated">注：指定された場所がこのファイルマネージャーにとって不明な場合でも、 &lt;code&gt;null&lt;/code&gt; を返さない場合があります。また、場所が不明であっても例外は発生しません。</target>
        </trans-unit>
        <trans-unit id="5124f5aec598032623493444e4d1dac43bd422f0" translate="yes" xml:space="preserve">
          <source>Note: event listener use is not recommended for normal application use, but are intended solely to support special purpose facilities including support for accessibility, event record/playback, and diagnostic tracing. If listener is null, no exception is thrown and no action is performed.</source>
          <target state="translated">注意:イベントリスナーの使用は、通常のアプリケーションでの使用を推奨するものではありませんが、アクセシビリティ、イベントの記録/再生、診断トレースのサポートなど、特別な目的のための機能をサポートすることのみを目的としています。リスナーが NULL の場合、例外はスローされず、アクションは実行されません。</target>
        </trans-unit>
        <trans-unit id="180c34d2e81d8e434398cee9487b9d0319236ffd" translate="yes" xml:space="preserve">
          <source>Note: great care must be exercised if mutable objects are used as map keys. The behavior of a map is not specified if the value of an object is changed in a manner that affects &lt;code&gt;equals&lt;/code&gt; comparisons while the object is a key in the map. A special case of this prohibition is that it is not permissible for a map to contain itself as a key. While it is permissible for a map to contain itself as a value, extreme caution is advised: the &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; methods are no longer well defined on such a map.</source>
          <target state="translated">注：可変オブジェクトをマップキーとして使用する場合は、細心の注意を払う必要があります。オブジェクトがマップ内のキーであるときに、 &lt;code&gt;equals&lt;/code&gt; 比較に影響する方法でオブジェクトの値が変更された場合、マップの動作は指定されません。この禁止事項の特殊なケースは、マップがそれ自体をキーとして含むことは許可されないことです。それは価値としての地位を格納するためのマップの許容ですが、細心の注意が助言されません： &lt;code&gt;equals&lt;/code&gt; と &lt;code&gt;hashCode&lt;/code&gt; メソッドは、もはや十分な地図上に定義されています。</target>
        </trans-unit>
        <trans-unit id="a75de3ff31fb77a6247d0aa1dbb039e97f176e62" translate="yes" xml:space="preserve">
          <source>Note: identifiers are not used by the &lt;code&gt;JTable&lt;/code&gt;, they are purely a convenience for the external tagging and location of columns.</source>
          <target state="translated">注：識別子は &lt;code&gt;JTable&lt;/code&gt; では使用されません。これらは、外部のタグ付けと列の配置に純粋に便利です。</target>
        </trans-unit>
        <trans-unit id="2931b23d7b7b4db43ee8187342264bc1d9c15128" translate="yes" xml:space="preserve">
          <source>Note: if a character is not assigned a name by the</source>
          <target state="translated">注意:文字に名前が割り当てられていない場合は</target>
        </trans-unit>
        <trans-unit id="ee88c3e4d27839298d1c22f3efa586d46721def1" translate="yes" xml:space="preserve">
          <source>Note: if an image is used which has more colors in its palette than the supported maximum, the Toolkit implementation will attempt to flatten the palette to the maximum. Since converting low-resolution images is difficult, no guarantees are made as to the quality of a cursor image which has more colors than the system supports. It is therefore recommended that this method be called and an appropriate image used so no image conversion is made.</source>
          <target state="translated">注意:パレットの色数がサポートされている最大値よりも多い画像が使用されている場合、Toolkit の実装はパレットを最大値に平坦化しようとします。低解像度画像の変換は困難なため、システムがサポートしている以上の色数を持つカーソル画像の品質を保証するものではありません。したがって、このメソッドを呼び出して適切な画像を使用し、画像変換が行われないようにすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="4efe3de41f67dbcc306f4e2b9489df3b7a541757" translate="yes" xml:space="preserve">
          <source>Note: if an image is used whose dimensions don't match a supported size (as returned by this method), the Toolkit implementation will attempt to resize the image to a supported size. Since converting low-resolution images is difficult, no guarantees are made as to the quality of a cursor image which isn't a supported size. It is therefore recommended that this method be called and an appropriate image used so no image conversion is made.</source>
          <target state="translated">注意:(このメソッドによって返される)寸法がサポートされているサイズと一致しない画像が使用されている場合、Toolkitの実装はその画像をサポートされているサイズにリサイズしようとします。低解像度の画像を変換することは難しいため、サポートされているサイズではないカーソル画像の品質は保証されません。そのため、このメソッドを呼び出して適切な画像を使用し、画像変換を行わないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8a697d8c55e21f60ed4e4901b9287f9774c575bd" translate="yes" xml:space="preserve">
          <source>Note: if any exception is thrown, this cipher object may need to be reset before it can be used again.</source>
          <target state="translated">注意:例外がスローされた場合、この暗号オブジェクトを再利用する前にリセットする必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="2fbce5af855378db205c37caeced27c12b4240bc" translate="yes" xml:space="preserve">
          <source>Note: if the absolute value of the &lt;code&gt;year&lt;/code&gt; parameter is less than 10^9, the eon component of the XSD year field is set to &lt;code&gt;null&lt;/code&gt; by this method.</source>
          <target state="translated">注： &lt;code&gt;year&lt;/code&gt; パラメーターの絶対値が10 ^ 9未満の場合、このメソッドによってXSDyearフィールドのeonコンポーネントが &lt;code&gt;null&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="c4d18bf16fef65ee4df5429425c0b70bc20fc2c8" translate="yes" xml:space="preserve">
          <source>Note: if the specified character is not assigned a name by the</source>
          <target state="translated">注意:指定された文字が</target>
        </trans-unit>
        <trans-unit id="8d8eeafbd4864744c1b8efac25892d3e6593e811" translate="yes" xml:space="preserve">
          <source>Note: if the specified input stream is null, a NullPointerException may be thrown later when it is used.</source>
          <target state="translated">注意:指定された入力ストリームが NULL の場合、それを使用したときに後から NullPointerException がスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="db21cd5e3700d9fbc6e2592e22159b2290890ef5" translate="yes" xml:space="preserve">
          <source>Note: if the specified input stream or cipher is null, a NullPointerException may be thrown later when they are used.</source>
          <target state="translated">注意:指定された入力ストリームやサイファーが NULL の場合、それらを使用したときに後から NullPointerException がスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="1d9c7d9dcc35f4bd90cfea6bfb1874a257dce012" translate="yes" xml:space="preserve">
          <source>Note: if the specified output stream is null, a NullPointerException may be thrown later when it is used.</source>
          <target state="translated">注意:指定した出力ストリームが NULL の場合、それを使用したときに後から NullPointerException がスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="e8856a6ecaa819114e46b4324d69892be4a896b4" translate="yes" xml:space="preserve">
          <source>Note: if the specified output stream or cipher is null, a NullPointerException may be thrown later when they are used.</source>
          <target state="translated">注意:指定された出力ストリームやサイファーが NULL の場合、それらを使用したときに後から NullPointerException がスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="897316a0899efbadf3a585a6787a4cbe227b984f" translate="yes" xml:space="preserve">
          <source>Note: if there was a previous accessory, you should unregister any listeners that the accessory might have registered with the file chooser.</source>
          <target state="translated">注意:以前にアクセサリーがあった場合、そのアクセサリーがファイルセレクタで登録した可能性のあるリスナーの登録を解除する必要があります。</target>
        </trans-unit>
        <trans-unit id="c4fb9251f8e5e6cedab11c66269a494e164be98c" translate="yes" xml:space="preserve">
          <source>Note: it is not always necessary to do algorithm-specific initialization for a DSA key pair generator. That is, it is not always necessary to call an &lt;code&gt;initialize&lt;/code&gt; method in this interface. Algorithm-independent initialization using the &lt;code&gt;initialize&lt;/code&gt; method in the KeyPairGenerator interface is all that is needed when you accept defaults for algorithm-specific parameters.</source>
          <target state="translated">注：DSA鍵ペアジェネレーターに対してアルゴリズム固有の初期化を行う必要は必ずしもありません。つまり、このインターフェイスで &lt;code&gt;initialize&lt;/code&gt; メソッドを呼び出す必要は必ずしもありません。KeyPairGeneratorインターフェースの &lt;code&gt;initialize&lt;/code&gt; メソッドを使用したアルゴリズムに依存しない初期化は、アルゴリズム固有のパラメーターのデフォルトを受け入れるときに必要なすべてです。</target>
        </trans-unit>
        <trans-unit id="6e1bf534d41e15a9a6cf514a78139f8a46a780c7" translate="yes" xml:space="preserve">
          <source>Note: it is not always necessary to do do algorithm-specific initialization for a DSA key pair generator. That is, it is not always necessary to call an &lt;code&gt;initialize&lt;/code&gt; method in this interface. Algorithm-independent initialization using the &lt;code&gt;initialize&lt;/code&gt; method in the KeyPairGenerator interface is all that is needed when you accept defaults for algorithm-specific parameters.</source>
          <target state="translated">注：DSA鍵ペアジェネレーターのアルゴリズム固有の初期化を常に行う必要はありません。つまり、このインターフェイスで必ず &lt;code&gt;initialize&lt;/code&gt; メソッドを呼び出す必要はありません。KeyPairGeneratorインターフェースの &lt;code&gt;initialize&lt;/code&gt; メソッドを使用したアルゴリズムに依存しない初期化は、アルゴリズム固有のパラメーターのデフォルトを受け入れるときに必要なすべてです。</target>
        </trans-unit>
        <trans-unit id="4e86deb3c86955cf59ec0fb10a08a9b557e8c2a0" translate="yes" xml:space="preserve">
          <source>Note: several methods return subsets with restricted ranges. Such ranges are</source>
          <target state="translated">注意:いくつかのメソッドは、制限された範囲を持つサブセットを返します。このような範囲は</target>
        </trans-unit>
        <trans-unit id="ace7b5d400945c269ef96078c34aaecd9a3f554b" translate="yes" xml:space="preserve">
          <source>Note: some implementations may cache the value returned from the &lt;code&gt;LayoutManager2&lt;/code&gt;. Implementations that cache need not invoke &lt;code&gt;maximumLayoutSize&lt;/code&gt; on the &lt;code&gt;LayoutManager2&lt;/code&gt; every time this method is invoked, rather the &lt;code&gt;LayoutManager2&lt;/code&gt; will only be queried after the &lt;code&gt;Container&lt;/code&gt; becomes invalid.</source>
          <target state="translated">注：一部の実装では、 &lt;code&gt;LayoutManager2&lt;/code&gt; から返された値がキャッシュされる場合があります。キャッシュする実装は、このメソッドが呼び出されるたびに &lt;code&gt;LayoutManager2&lt;/code&gt; で &lt;code&gt;maximumLayoutSize&lt;/code&gt; を呼び出す必要はありません。むしろ、 &lt;code&gt;LayoutManager2&lt;/code&gt; は、 &lt;code&gt;Container&lt;/code&gt; が無効になった後にのみ照会されます。</target>
        </trans-unit>
        <trans-unit id="f13ee6cf9d73ed78cf46e2da2b90cecbc2454544" translate="yes" xml:space="preserve">
          <source>Note: some implementations may cache the value returned from the &lt;code&gt;LayoutManager&lt;/code&gt;. Implementations that cache need not invoke &lt;code&gt;minimumLayoutSize&lt;/code&gt; on the &lt;code&gt;LayoutManager&lt;/code&gt; every time this method is invoked, rather the &lt;code&gt;LayoutManager&lt;/code&gt; will only be queried after the &lt;code&gt;Container&lt;/code&gt; becomes invalid.</source>
          <target state="translated">注：一部の実装では、 &lt;code&gt;LayoutManager&lt;/code&gt; から返された値がキャッシュされる場合があります。キャッシュする実装は、このメソッドが呼び出されるたびに &lt;code&gt;LayoutManager&lt;/code&gt; で &lt;code&gt;minimumLayoutSize&lt;/code&gt; を呼び出す必要はありません。むしろ、 &lt;code&gt;LayoutManager&lt;/code&gt; は、 &lt;code&gt;Container&lt;/code&gt; が無効になった後にのみ照会されます。</target>
        </trans-unit>
        <trans-unit id="4ad34544e3be908d5dd481733189cf6dd60c0b4c" translate="yes" xml:space="preserve">
          <source>Note: some implementations may cache the value returned from the &lt;code&gt;LayoutManager&lt;/code&gt;. Implementations that cache need not invoke &lt;code&gt;preferredLayoutSize&lt;/code&gt; on the &lt;code&gt;LayoutManager&lt;/code&gt; every time this method is invoked, rather the &lt;code&gt;LayoutManager&lt;/code&gt; will only be queried after the &lt;code&gt;Container&lt;/code&gt; becomes invalid.</source>
          <target state="translated">注：一部の実装では、 &lt;code&gt;LayoutManager&lt;/code&gt; から返された値がキャッシュされる場合があります。キャッシュする実装は、このメソッドが呼び出されるたびに &lt;code&gt;LayoutManager&lt;/code&gt; で &lt;code&gt;preferredLayoutSize&lt;/code&gt; を呼び出す必要はありません。むしろ、 &lt;code&gt;LayoutManager&lt;/code&gt; は、 &lt;code&gt;Container&lt;/code&gt; が無効になった後にのみ照会されます。</target>
        </trans-unit>
        <trans-unit id="16136af4648dce88819b215df9b172cff3b42293" translate="yes" xml:space="preserve">
          <source>Note: some methods, such as &lt;code&gt;getLocationOnScreen&lt;/code&gt;, can only provide meaningful results if the applet is showing. Because &lt;code&gt;isShowing&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; when the applet's &lt;code&gt;start&lt;/code&gt; is first called, methods requiring &lt;code&gt;isShowing&lt;/code&gt; to return &lt;code&gt;true&lt;/code&gt; should be called from a &lt;code&gt;ComponentListener&lt;/code&gt;.</source>
          <target state="translated">注： &lt;code&gt;getLocationOnScreen&lt;/code&gt; などの一部のメソッドは、アプレットが表示されている場合にのみ意味のある結果を提供できます。ので &lt;code&gt;isShowing&lt;/code&gt; 返し &lt;code&gt;false&lt;/code&gt; アプレットの時に &lt;code&gt;start&lt;/code&gt; 最初に呼び出され、必要とする方法 &lt;code&gt;isShowing&lt;/code&gt; 返すために &lt;code&gt;true&lt;/code&gt; から呼び出されるべきで &lt;code&gt;ComponentListener&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9f5ecb473ea61e73f17835fd480c39b90f7da88" translate="yes" xml:space="preserve">
          <source>Note: the &lt;code&gt;password&lt;/code&gt; and &lt;code&gt;salt&lt;/code&gt; are cloned before they are stored in the new &lt;code&gt;PBEKeySpec&lt;/code&gt; object.</source>
          <target state="translated">注： &lt;code&gt;password&lt;/code&gt; と &lt;code&gt;salt&lt;/code&gt; は、新しい &lt;code&gt;PBEKeySpec&lt;/code&gt; オブジェクトに格納される前に複製されます。</target>
        </trans-unit>
        <trans-unit id="215af8f9227e90af523822742aff59c3c61b8c2d" translate="yes" xml:space="preserve">
          <source>Note: the JTextComponent must have a valid size (e.g. have been added to a parent container whose ancestor container is a valid top-level window) for this method to be able to return a meaningful (non-null) value.</source>
          <target state="translated">注意:このメソッドが意味のある (非 null)値を返すためには、JTextComponent のサイズが有効でなければなりません (例えば、親コンテナの祖先コンテナが有効なトップレベルウィンドウである親コンテナに追加されているなど)。</target>
        </trans-unit>
        <trans-unit id="1f392a63ce8ca769190caf163bdd91184bd81b83" translate="yes" xml:space="preserve">
          <source>Note: the OAEPParameterSpec.DEFAULT uses the following:</source>
          <target state="translated">注:OAEPParameterSpec.DEFAULTでは以下のように使用しています。</target>
        </trans-unit>
        <trans-unit id="492c6d682f7eec9130f0855cc45fe510c22313ba" translate="yes" xml:space="preserve">
          <source>Note: the OAEPParameterSpec.DEFAULT uses the following: message digest -- &quot;SHA-1&quot; mask generation function (mgf) -- &quot;MGF1&quot; parameters for mgf -- MGF1ParameterSpec.SHA1 source of encoding input -- PSource.PSpecified.DEFAULT</source>
          <target state="translated">注:OAEPParameterSpec.DEFAULT は以下のものを使用する:メッセージダイジェスト --&quot;SHA-1&quot; マスク生成機能(mgf)--&quot;MGF1&quot; mgf のパラメータ --MGF1ParameterSpec.SHA1 エンコーディング入力元 --PSource.PSpecified.DEFAULT</target>
        </trans-unit>
        <trans-unit id="b2ce9a87943a98d1b667c474c5c442d833fc1655" translate="yes" xml:space="preserve">
          <source>Note: the PSSParameterSpec.DEFAULT uses the following: message digest -- &quot;SHA-1&quot; mask generation function (mgf) -- &quot;MGF1&quot; parameters for mgf -- MGF1ParameterSpec.SHA1 SaltLength -- 20 TrailerField -- 1</source>
          <target state="translated">注:PSSParameterSpec.DEFAULT は以下のものを使用します:メッセージダイジェスト --&quot;SHA-1&quot; マスク生成機能(mgf)--&quot;MGF1&quot; mgf 用パラメータ --MGF1ParameterSpec.SHA1 SaltLength --20 TrailerField --1</target>
        </trans-unit>
        <trans-unit id="2d8b28baf51e748dc2d7af5797db037130390694" translate="yes" xml:space="preserve">
          <source>Note: the X509ExtendedKeyManager should be used in favor of this class.</source>
          <target state="translated">注意:このクラスでは X509ExtendedKeyManager を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="b7325e6d320a9d911fcb0df72ba0a06d4d0671a0" translate="yes" xml:space="preserve">
          <source>Note: the local supported signature algorithms should conform to the algorithm constraints specified by &lt;a href=&quot;sslparameters#getAlgorithmConstraints()&quot;&gt;&lt;code&gt;getAlgorithmConstraints()&lt;/code&gt;&lt;/a&gt; method in &lt;code&gt;SSLParameters&lt;/code&gt;.</source>
          <target state="translated">注意：ローカルサポートされている署名アルゴリズムは、アルゴリズムによって指定された制約に準拠している必要があり&lt;a href=&quot;sslparameters#getAlgorithmConstraints()&quot;&gt; &lt;code&gt;getAlgorithmConstraints()&lt;/code&gt; &lt;/a&gt;における方法 &lt;code&gt;SSLParameters&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5510435a1a81e326f18dfb97c9eee1b6a3319a1" translate="yes" xml:space="preserve">
          <source>Note: the local supported signature algorithms should conform to the algorithm constraints specified by &lt;a href=&quot;sslparameters#getAlgorithmConstraints--&quot;&gt;&lt;code&gt;getAlgorithmConstraints()&lt;/code&gt;&lt;/a&gt; method in &lt;code&gt;SSLParameters&lt;/code&gt;.</source>
          <target state="translated">注意：ローカルサポートされている署名アルゴリズムは、アルゴリズムによって指定された制約に準拠している必要があり&lt;a href=&quot;sslparameters#getAlgorithmConstraints--&quot;&gt; &lt;code&gt;getAlgorithmConstraints()&lt;/code&gt; &lt;/a&gt;における方法 &lt;code&gt;SSLParameters&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41a3633c298cff106784ca675b5b46e661326da3" translate="yes" xml:space="preserve">
          <source>Note: the location and size of top-level windows (including &lt;code&gt;Window&lt;/code&gt;s, &lt;code&gt;Frame&lt;/code&gt;s, and &lt;code&gt;Dialog&lt;/code&gt;s) are under the control of the desktop's window management system. Calls to &lt;code&gt;setLocation&lt;/code&gt;, &lt;code&gt;setSize&lt;/code&gt;, and &lt;code&gt;setBounds&lt;/code&gt; are requests (not directives) which are forwarded to the window management system. Every effort will be made to honor such requests. However, in some cases the window management system may ignore such requests, or modify the requested geometry in order to place and size the &lt;code&gt;Window&lt;/code&gt; in a way that more closely matches the desktop settings.</source>
          <target state="translated">注：トップレベルウィンドウ（ &lt;code&gt;Window&lt;/code&gt; 、 &lt;code&gt;Frame&lt;/code&gt; 、 &lt;code&gt;Dialog&lt;/code&gt; を含む）の場所とサイズは、デスクトップのウィンドウ管理システムの制御下にあります。通話 &lt;code&gt;setLocation&lt;/code&gt; 、 &lt;code&gt;setSize&lt;/code&gt; 、および &lt;code&gt;setBounds&lt;/code&gt; は、ウィンドウ管理システムに転送される要求（ないディレクティブ）です。そのような要求を尊重するためにあらゆる努力がなされます。ただし、場合によっては、ウィンドウ管理システムがそのような要求を無視したり、要求されたジオメトリを変更して、デスクトップ設定により厳密に一致するように &lt;code&gt;Window&lt;/code&gt; を配置およびサイズ設定したりすることがあります。</target>
        </trans-unit>
        <trans-unit id="c67d873a58583850056bdd0c1c817640a6fc6e81" translate="yes" xml:space="preserve">
          <source>Note: the value of this field is prefixed with 'Swing' to avoid possible collisions with existing &lt;code&gt;Actions&lt;/code&gt;.</source>
          <target state="translated">注：既存の &lt;code&gt;Actions&lt;/code&gt; 衝突を回避するために、このフィールドの値には「Swing」というプレフィックスが付いています。</target>
        </trans-unit>
        <trans-unit id="4b5d13ed7a83329befedbde9d06258643c673381" translate="yes" xml:space="preserve">
          <source>Note: this constructor should only be used by AWT implementations as part of their support for custom cursors. Applications should use Toolkit.createCustomCursor().</source>
          <target state="translated">注意:このコンストラクタは、カスタム カーソルのサポートの一環として AWT 実装でのみ使用する必要があります。アプリケーションは Toolkit.createCustomCursor()を使用してください。</target>
        </trans-unit>
        <trans-unit id="28fdef5134bffa1cd75bacd02dbb9d809fb19a01" translate="yes" xml:space="preserve">
          <source>Note: this interface is required to permit the safe association of a DropTarget with a Component in one of two ways, either: &lt;code&gt;component.setDropTarget(droptarget);&lt;/code&gt; or &lt;code&gt;droptarget.setComponent(component);&lt;/code&gt;</source>
          <target state="translated">注：このインターフェースは、次の2つの方法のいずれかでDropTargetとコンポーネントを安全に関連付けるために必要です &lt;code&gt;component.setDropTarget(droptarget);&lt;/code&gt; または &lt;code&gt;droptarget.setComponent(component);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="02f494dd31cb8ad0cb9346d53aa1b53cc95d6141" translate="yes" xml:space="preserve">
          <source>Note: this is used to indicate the preference on key length for variable-key-size ciphers. The actual key size depends on each provider's implementation.</source>
          <target state="translated">注意:これは、可変鍵サイズ暗号における鍵長の優先順位を示すために使用される。実際の鍵サイズは各プロバイダの実装に依存します。</target>
        </trans-unit>
        <trans-unit id="918c568ceea4a8ffb21d10a648c7036d7c8da530" translate="yes" xml:space="preserve">
          <source>Note: this method currently performs a shallow copy of the object (simply calls &lt;code&gt;Object.clone()&lt;/code&gt;). This may be changed in a future revision to perform a deep copy if new parameters are added that should not be shared.</source>
          <target state="translated">注：このメソッドは現在、オブジェクトの浅いコピーを実行します（単に &lt;code&gt;Object.clone()&lt;/code&gt; を呼び出します）。これは、共有されるべきではない新しいパラメーターが追加された場合にディープコピーを実行するために、将来のリビジョンで変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="7d8a9a0b5b93dae27f5f652a83007a6b2e89daa5" translate="yes" xml:space="preserve">
          <source>Note: this method is executed in a background thread.</source>
          <target state="translated">注意:このメソッドはバックグラウンドスレッドで実行されます。</target>
        </trans-unit>
        <trans-unit id="fbff139858d8c3526b7324d91174db8507a07ba4" translate="yes" xml:space="preserve">
          <source>Note: this method is used to indicate to the local side which signature algorithms may be used for digital signatures in TLS 1.2. It is not meaningful for TLS versions prior to 1.2.</source>
          <target state="translated">注意:このメソッドは、TLS 1.2 のデジタル署名に使用できる署名アルゴリズムをローカル側に示すために使用されます。1.2 より前のバージョンの TLS では意味がありません。</target>
        </trans-unit>
        <trans-unit id="f5169cbd1f9ba0ec8524abb160abb0f38a96e90b" translate="yes" xml:space="preserve">
          <source>Note: this method is used to indicate to the local side which signature algorithms may be used for digital signatures in TLS/DTLS 1.2. It is not meaningful for TLS/DTLS versions prior to 1.2.</source>
          <target state="translated">注意:このメソッドは、TLS/DTLS 1.2 のデジタル署名に使用できる署名アルゴリズムをローカル側に示すために使用されます。1.2 より前のバージョンの TLS/DTLS では意味がありません。</target>
        </trans-unit>
        <trans-unit id="b08ad47a1ab3e6fc63e3c26fff3909e3eac34fb8" translate="yes" xml:space="preserve">
          <source>Note: this method is used to indicate to the peer which signature algorithms may be used for digital signatures in TLS 1.2. It is not meaningful for TLS versions prior to 1.2.</source>
          <target state="translated">注意:このメソッドは、TLS 1.2 のデジタル署名に使用できる署名アルゴリズムを相手に示すために使用されます。1.2 より前のバージョンの TLS では意味がありません。</target>
        </trans-unit>
        <trans-unit id="a17cea5e85f658d0657fd0051ca3130494d5cdbe" translate="yes" xml:space="preserve">
          <source>Note: this method is used to indicate to the peer which signature algorithms may be used for digital signatures in TLS/DTLS 1.2. It is not meaningful for TLS/DTLS versions prior to 1.2.</source>
          <target state="translated">注意:このメソッドは、TLS/DTLS 1.2 のデジタル署名に使用できる署名アルゴリズムを相手に示すために使用されます。1.2 より前のバージョンの TLS/DTLS では意味がありません。</target>
        </trans-unit>
        <trans-unit id="8dd36c038ea2dda3842c71babdcf4b3bb8420720" translate="yes" xml:space="preserve">
          <source>Note: this method returns a copy of the password. It is the caller's responsibility to zero out the password information after it is no longer needed.</source>
          <target state="translated">注意:このメソッドはパスワードのコピーを返します。パスワード情報が不要になった後にゼロアウトするのは呼び出し側の責任です。</target>
        </trans-unit>
        <trans-unit id="0b9dba489ed38fc4a7327905b4ad19a291ade04c" translate="yes" xml:space="preserve">
          <source>Note: this method should</source>
          <target state="translated">注意:このメソッドは</target>
        </trans-unit>
        <trans-unit id="0cfe9c139559b84a217a77a85af3cdffe08474ba" translate="yes" xml:space="preserve">
          <source>Note: this method should be copy-safe, which means the &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; buffers can reference the same block of memory and no unprocessed input data is overwritten when the result is copied into the output buffer.</source>
          <target state="translated">注：このメソッドはコピーセーフでなければなりません。つまり、 &lt;code&gt;input&lt;/code&gt; バッファーと &lt;code&gt;output&lt;/code&gt; バッファーは同じメモリブロックを参照でき、結果が出力バッファーにコピーされるときに未処理の入力データが上書きされることはありません。</target>
        </trans-unit>
        <trans-unit id="1f4c8629628bd84ad72106429b5a2cd1ed15ba33" translate="yes" xml:space="preserve">
          <source>Note: this method should be copy-safe, which means the &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; buffers can reference the same byte array and no unprocessed input data is overwritten when the result is copied into the output buffer.</source>
          <target state="translated">注：このメソッドはコピーセーフでなければなりません。つまり、 &lt;code&gt;input&lt;/code&gt; バッファーと &lt;code&gt;output&lt;/code&gt; バッファーは同じバイト配列を参照でき、結果が出力バッファーにコピーされるときに未処理の入力データが上書きされることはありません。</target>
        </trans-unit>
        <trans-unit id="97ef58a2f1d6e59b709e15310606bab2789a38da" translate="yes" xml:space="preserve">
          <source>Note: this method should return a copy of the password. It is the caller's responsibility to zero out the password information after it is no longer needed.</source>
          <target state="translated">注意:このメソッドはパスワードのコピーを返すべきです。パスワード情報が不要になった後にゼロアウトするのは呼び出し側の責任です。</target>
        </trans-unit>
        <trans-unit id="4551232f2a171e3a0d31788752ebdc2ee26b0971" translate="yes" xml:space="preserve">
          <source>Note: this method should return a copy of the salt. It is the caller's responsibility to zero out the salt information after it is no longer needed.</source>
          <target state="translated">注意:このメソッドはソルトのコピーを返すべきです。ソルト情報が不要になった後にゼロアウトするのは呼び出し元の責任です。</target>
        </trans-unit>
        <trans-unit id="be197317472aebc075cccf57792852ff71c0d925" translate="yes" xml:space="preserve">
          <source>Note: use the &lt;a href=&quot;#invokeLater(java.lang.Runnable)&quot;&gt;&lt;code&gt;invokeLater(java.lang.Runnable)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#invokeAndWait(java.lang.Runnable)&quot;&gt;&lt;code&gt;invokeAndWait(java.lang.Runnable)&lt;/code&gt;&lt;/a&gt; methods to execute a task in &lt;a href=&quot;toolkit#getSystemEventQueue()&quot;&gt;&lt;code&gt;the current AWT EventQueue&lt;/code&gt;&lt;/a&gt;'s dispatch thread.</source>
          <target state="translated">注：使用&lt;a href=&quot;#invokeLater(java.lang.Runnable)&quot;&gt; &lt;code&gt;invokeLater(java.lang.Runnable)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#invokeAndWait(java.lang.Runnable)&quot;&gt; &lt;code&gt;invokeAndWait(java.lang.Runnable)&lt;/code&gt; &lt;/a&gt;タスクを実行する方法を&lt;a href=&quot;toolkit#getSystemEventQueue()&quot;&gt; &lt;code&gt;the current AWT EventQueue&lt;/code&gt; &lt;/a&gt;のディスパッチスレッド。</target>
        </trans-unit>
        <trans-unit id="f0b92ce9d6be916045a08369abb63760c0b2e0e8" translate="yes" xml:space="preserve">
          <source>Note: when some action is invoked and the associated application is executed, it will be executed on the same system as the one on which the Java application was launched.</source>
          <target state="translated">注意:あるアクションが呼び出され、関連するアプリケーションが実行されると、Javaアプリケーションが起動されたシステムと同じシステム上で実行されます。</target>
        </trans-unit>
        <trans-unit id="5d23ad42e7b1b94cdae4b3885610d8f7d25da71e" translate="yes" xml:space="preserve">
          <source>Note: you do not have to forward the event to sub-components. This is done automatically by the &lt;code&gt;MenuSelectionManager&lt;/code&gt;.</source>
          <target state="translated">注：イベントをサブコンポーネントに転送する必要はありません。これは、 &lt;code&gt;MenuSelectionManager&lt;/code&gt; によって自動的に行われます。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="cab86ce653fd9d36eb02158c05614338a3ba6063" translate="yes" xml:space="preserve">
          <source>Notes on specific components</source>
          <target state="translated">特定の成分に関する注意事項</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="4049468e6c6681b457b2a4eaf4db4bf2b0debae5" translate="yes" xml:space="preserve">
          <source>Nothing is done at the Relation Service level, i.e. the &lt;code&gt;RelationSupport&lt;/code&gt; object is not added to the &lt;code&gt;RelationService&lt;/code&gt; and no checks are performed to see if the provided values are correct. The object is always created, EXCEPT if:</source>
          <target state="translated">何も関係サービスレベルで行われていない、すなわち &lt;code&gt;RelationSupport&lt;/code&gt; オブジェクトが追加されていない &lt;code&gt;RelationService&lt;/code&gt; およびNOチェックが提供された値が正しいかどうかを確認するために実行されません。次の場合を除いて、オブジェクトは常に作成されます。</target>
        </trans-unit>
        <trans-unit id="9b893c7a20a2c07eedb44134ccd2d552d0e50174" translate="yes" xml:space="preserve">
          <source>Nothing is written to the output</source>
          <target state="translated">出力には何も書き込まれません</target>
        </trans-unit>
        <trans-unit id="591911d96d6cbaf146e6d8b47666e6f26b0f155a" translate="yes" xml:space="preserve">
          <source>Nothing prevents the use of these fields in MBeans that are not Model MBeans. The &lt;a href=&quot;#displayName&quot;&gt;displayName&lt;/a&gt;, &lt;a href=&quot;#severity&quot;&gt;severity&lt;/a&gt;, and &lt;a href=&quot;#visibility&quot;&gt;visibility&lt;/a&gt; fields are of interest outside Model MBeans, for example. But only Model MBeans have a predefined behavior for these fields.</source>
          <target state="translated">モデルMBeanではないMBeanでこれらのフィールドの使用を妨げるものはありません。&lt;a href=&quot;#displayName&quot;&gt;displayName&lt;/a&gt;、&lt;a href=&quot;#severity&quot;&gt;重症度&lt;/a&gt;、および&lt;a href=&quot;#visibility&quot;&gt;可視性&lt;/a&gt;フィールドは、例えば、モデルのMBean外部興味深いです。ただし、これらのフィールドに対して事前定義された動作を持つのはモデルMBeanだけです。</target>
        </trans-unit>
        <trans-unit id="970af143a639a5c1f5ce065871e6baf24e38c36e" translate="yes" xml:space="preserve">
          <source>Nothing, but ends quoting started by &lt;code&gt;\Q&lt;/code&gt;</source>
          <target state="translated">何もありませんが、 &lt;code&gt;\Q&lt;/code&gt; 始まる引用を終了します</target>
        </trans-unit>
        <trans-unit id="153bd5cc523c8d331c4f6365c680600b92fc6d03" translate="yes" xml:space="preserve">
          <source>Nothing, but quotes all characters until &lt;code&gt;\E&lt;/code&gt;</source>
          <target state="translated">何もありませんが、 &lt;code&gt;\E&lt;/code&gt; までのすべての文字を引用符で囲みます</target>
        </trans-unit>
        <trans-unit id="e7cfd3c952e52da6c393469ae466f5d942220df2" translate="yes" xml:space="preserve">
          <source>Nothing, but quotes the following character</source>
          <target state="translated">何でもないが、以下の文字を引用する。</target>
        </trans-unit>
        <trans-unit id="f89ebdddae5018434afcfef64baa8e70cb6efb64" translate="yes" xml:space="preserve">
          <source>Nothing, but turns match flags &lt;a href=&quot;#CASE_INSENSITIVE&quot;&gt;i&lt;/a&gt;&lt;a href=&quot;#UNIX_LINES&quot;&gt;d&lt;/a&gt;&lt;a href=&quot;#MULTILINE&quot;&gt;m&lt;/a&gt;&lt;a href=&quot;#DOTALL&quot;&gt;s&lt;/a&gt;&lt;a href=&quot;#UNICODE_CASE&quot;&gt;u&lt;/a&gt;&lt;a href=&quot;#COMMENTS&quot;&gt;x&lt;/a&gt;&lt;a href=&quot;#UNICODE_CHARACTER_CLASS&quot;&gt;U&lt;/a&gt; on - off</source>
          <target state="translated">何が、ターンフラグと一致しない&lt;a href=&quot;#CASE_INSENSITIVE&quot;&gt;私は、&lt;/a&gt;&lt;a href=&quot;#UNIX_LINES&quot;&gt;dは&lt;/a&gt;&lt;a href=&quot;#MULTILINE&quot;&gt;、M &lt;/a&gt;&lt;a href=&quot;#DOTALL&quot;&gt;の&lt;/a&gt;&lt;a href=&quot;#UNICODE_CASE&quot;&gt;U &lt;/a&gt;&lt;a href=&quot;#COMMENTS&quot;&gt;、X &lt;/a&gt;&lt;a href=&quot;#UNICODE_CHARACTER_CLASS&quot;&gt;Uを&lt;/a&gt;オフ-で</target>
        </trans-unit>
        <trans-unit id="ce1341fdc4c6c8f554a498bc9f036be29f8ffa4d" translate="yes" xml:space="preserve">
          <source>Notice that an application can supersede the registration of an earlier created font with a new one.</source>
          <target state="translated">アプリケーションは、以前に作成されたフォントの登録を新しいものに置き換えることができることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6e59ad8d4a856db627b0584733edb4bafea74dbf" translate="yes" xml:space="preserve">
          <source>Notice that only four kinds of attribute sets are listed here, but there are five kinds of attributes. Interface &lt;a href=&quot;supportedvaluesattribute&quot;&gt;SupportedValuesAttribute&lt;/a&gt; denotes an attribute that gives the supported values for another attribute. Supported-values attributes are never aggregated into attribute sets, so there is no attribute set subinterface defined for them.</source>
          <target state="translated">ここでは4種類の属性セットのみがリストされていますが、5種類の属性があることに注意してください。インターフェース&lt;a href=&quot;supportedvaluesattribute&quot;&gt;SupportedValuesAttribute&lt;/a&gt;は、別の属性でサポートされている値を提供する属性を示します。サポートされている値の属性が属性セットに集約されることはないため、属性セットのサブインターフェースが定義されていません。</target>
        </trans-unit>
        <trans-unit id="d8f022b5a1b710bbe975a5c370ec133a15d6f10b" translate="yes" xml:space="preserve">
          <source>Notice that the first character (or code point) is converted to lower case. This follows the Java Beans convention, which for historical reasons is different from the Standard MBean convention. In a Standard MBean or MXBean interface, a method &lt;code&gt;getOwner&lt;/code&gt; defines an attribute called &lt;code&gt;Owner&lt;/code&gt;, while in a Java Bean or mapped &lt;code&gt;CompositeType&lt;/code&gt;, a method &lt;code&gt;
      getOwner&lt;/code&gt; defines a property or item called &lt;code&gt;owner&lt;/code&gt;.</source>
          <target state="translated">最初の文字（またはコードポイント）が小文字に変換されていることに注意してください。これは、歴史的な理由から標準のMBean規則とは異なるJavaBeans規則に従います。標準のMBeanまたはMXBeanインターフェースでは、メソッド &lt;code&gt;getOwner&lt;/code&gt; は &lt;code&gt;Owner&lt;/code&gt; と呼ばれる属性を定義し、Java Beanまたはマップされた &lt;code&gt;CompositeType&lt;/code&gt; では、メソッド &lt;code&gt; getOwner&lt;/code&gt; は &lt;code&gt;owner&lt;/code&gt; と呼ばれるプロパティまたはアイテムを定義します。</target>
        </trans-unit>
        <trans-unit id="417940b08f0f0f774790ee4661177279a6e94316" translate="yes" xml:space="preserve">
          <source>Notice that the first character (or code point) is converted to lower case. This follows the Java Beans convention, which for historical reasons is different from the Standard MBean convention. In a Standard MBean or MXBean interface, a method &lt;code&gt;getOwner&lt;/code&gt; defines an attribute called &lt;code&gt;Owner&lt;/code&gt;, while in a Java Bean or mapped &lt;code&gt;CompositeType&lt;/code&gt;, a method &lt;code&gt;getOwner&lt;/code&gt; defines a property or item called &lt;code&gt;owner&lt;/code&gt;.</source>
          <target state="translated">最初の文字（またはコードポイント）が小文字に変換されることに注意してください。これはJava Beansの規則に従いますが、これは歴史的な理由により、標準のMBeanの規則とは異なります。標準のMBeanまたはMXBeanインタフェースでは、方法 &lt;code&gt;getOwner&lt;/code&gt; 呼び出される属性定義 &lt;code&gt;Owner&lt;/code&gt; のJava Bean内またはマップされている間、 &lt;code&gt;CompositeType&lt;/code&gt; 、メソッド &lt;code&gt;getOwner&lt;/code&gt; メソッドが呼び出されるプロパティまたは項目定義 &lt;code&gt;owner&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="835f19c3b0ad65e9e0400e2bf5db621f6319e918" translate="yes" xml:space="preserve">
          <source>Notice that the order is important, as the subsequent item goes immediately after the text-argument. The following are not equivalent:</source>
          <target state="translated">順番が重要であることに注意してください。以下は等価ではありません。</target>
        </trans-unit>
        <trans-unit id="c18f8f255ab9c208f23d0340eb9dff5a84efe311" translate="yes" xml:space="preserve">
          <source>Notification</source>
          <target state="translated">Notification</target>
        </trans-unit>
        <trans-unit id="939ed73960efba652806e6d5e4587c8e931369e8" translate="yes" xml:space="preserve">
          <source>Notification dispatch</source>
          <target state="translated">派遣通知</target>
        </trans-unit>
        <trans-unit id="a0582a95d51911509a77ba131393f5b5d51a1d31" translate="yes" xml:space="preserve">
          <source>Notification emitted when a client connection is opened or closed or when notifications are lost.</source>
          <target state="translated">クライアント接続がオープンまたはクローズされたとき、または通知が失われたときに発せられる通知。</target>
        </trans-unit>
        <trans-unit id="d8add2cfda10bdc1d97d2cc180d9eff9ad450493" translate="yes" xml:space="preserve">
          <source>Notification emitted when a client connection is opened or closed or when notifications are lost. These notifications are sent by connector servers (instances of &lt;a href=&quot;jmxconnectorserver&quot;&gt;&lt;code&gt;JMXConnectorServer&lt;/code&gt;&lt;/a&gt;) and by connector clients (instances of &lt;a href=&quot;jmxconnector&quot;&gt;&lt;code&gt;JMXConnector&lt;/code&gt;&lt;/a&gt;). For certain connectors, a session can consist of a sequence of connections. Connection-opened and connection-closed notifications will be sent for each one.</source>
          <target state="translated">クライアント接続がオープンまたはクローズされたとき、または通知が失われたときに発行される通知。これらの通知は、コネクタサーバー（&lt;a href=&quot;jmxconnectorserver&quot;&gt; &lt;code&gt;JMXConnectorServer&lt;/code&gt; の&lt;/a&gt;インスタンス）およびコネクタクライアント（&lt;a href=&quot;jmxconnector&quot;&gt; &lt;code&gt;JMXConnector&lt;/code&gt; の&lt;/a&gt;インスタンス）によって送信されます。特定のコネクタでは、セッションは一連の接続で構成されます。接続が開かれた通知と接続が閉じられた通知は、それぞれに送信されます。</target>
        </trans-unit>
        <trans-unit id="372e0b46f21822b738d250fc0fc4972b96208cbf" translate="yes" xml:space="preserve">
          <source>Notification from the &lt;code&gt;UIFactory&lt;/code&gt; that the L&amp;amp;F has changed.</source>
          <target state="translated">L＆Fが変更されたという &lt;code&gt;UIFactory&lt;/code&gt; からの通知。</target>
        </trans-unit>
        <trans-unit id="802b0fb55cae7d438ff32da5956fecbb2b9dc7c3" translate="yes" xml:space="preserve">
          <source>Notification from the &lt;code&gt;UIFactory&lt;/code&gt; that the L&amp;amp;F has changed. Called to replace the UI with the latest version from the &lt;code&gt;UIFactory&lt;/code&gt;.</source>
          <target state="translated">L＆Fが変更されたという &lt;code&gt;UIFactory&lt;/code&gt; からの通知。UIを &lt;code&gt;UIFactory&lt;/code&gt; の最新バージョンに置き換えるために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="3ba46dbd2044a663917fd460cbfb13c6b6b32851" translate="yes" xml:space="preserve">
          <source>Notification from the &lt;code&gt;UIManager&lt;/code&gt; that the L&amp;amp;F has changed.</source>
          <target state="translated">L＆Fが変更されたという &lt;code&gt;UIManager&lt;/code&gt; からの通知。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
