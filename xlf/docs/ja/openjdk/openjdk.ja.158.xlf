<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="df4b870fb6b307f47ae3b882d0d392b6a0a27623" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;menuBar&lt;/code&gt; is positioned at the upper edge of the &lt;code&gt;layeredPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;menuBar&lt;/code&gt; はの上端に位置している &lt;code&gt;layeredPane&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25cc63f27b499ac936092a81d7ae1cac847e5fe0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;messageType&lt;/code&gt; parameter is primarily used to supply a default icon from the look and feel.</source>
          <target state="translated">&lt;code&gt;messageType&lt;/code&gt; パラメータは主に外観からデフォルトのアイコンを供給するために使用されます。</target>
        </trans-unit>
        <trans-unit id="6af76e421d8e057e7b7d9ff20dd9e09a4d087b85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;metaData&lt;/code&gt; parameter can be used to limit the number of I/O operations that this method is required to perform. Passing &lt;code&gt;false&lt;/code&gt; for this parameter indicates that only updates to the file's content need be written to storage; passing &lt;code&gt;true&lt;/code&gt; indicates that updates to both the file's content and metadata must be written, which generally requires at least one more I/O operation. Whether this parameter actually has any effect is dependent upon the underlying operating system and is therefore unspecified.</source>
          <target state="translated">&lt;code&gt;metaData&lt;/code&gt; パラメータは、この方法は、実行するために必要であることをI / O操作の数を制限するために使用することができます。このパラメーターに &lt;code&gt;false&lt;/code&gt; を渡すと、ファイルのコンテンツの更新のみをストレージに書き込む必要があることを示します。 &lt;code&gt;true&lt;/code&gt; を渡すと、ファイルのコンテンツとメタデータの両方への更新を書き込む必要があることを示します。これには通常、少なくとももう1つのI / O操作が必要です。このパラメーターが実際に効果があるかどうかは、基礎となるオペレーティングシステムに依存するため、指定されていません。</target>
        </trans-unit>
        <trans-unit id="68681b14e33063683f77b0c98ad6ad810109a928" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;minimum&lt;/code&gt; and &lt;code&gt;maximum&lt;/code&gt; parameters can be &lt;code&gt;null&lt;/code&gt; to indicate that the range doesn't have an upper or lower bound. If &lt;code&gt;value&lt;/code&gt; or &lt;code&gt;stepSize&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, or if both &lt;code&gt;minimum&lt;/code&gt; and &lt;code&gt;maximum&lt;/code&gt; are specified and &lt;code&gt;minimum &amp;gt; maximum&lt;/code&gt; then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. Similarly if &lt;code&gt;(minimum &amp;lt;= value &amp;lt;= maximum&lt;/code&gt;) is false, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;minimum&lt;/code&gt; と &lt;code&gt;maximum&lt;/code&gt; のパラメータがあってもよい &lt;code&gt;null&lt;/code&gt; 範囲が上限以下を有していないことを示すために。もし &lt;code&gt;value&lt;/code&gt; または &lt;code&gt;stepSize&lt;/code&gt; ある &lt;code&gt;null&lt;/code&gt; 、または両方の場合に &lt;code&gt;minimum&lt;/code&gt; と &lt;code&gt;maximum&lt;/code&gt; 指定され、 &lt;code&gt;minimum &amp;gt; maximum&lt;/code&gt; その後 &lt;code&gt;IllegalArgumentException&lt;/code&gt; スローされます。同様に、 &lt;code&gt;(minimum &amp;lt;= value &amp;lt;= maximum&lt;/code&gt; ）がfalseの場合、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="74be4dfd459c69d6c5eed0336db7d26406e6421b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;minimumCapacity&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;minimumCapacity&lt;/code&gt; の引数。</target>
        </trans-unit>
        <trans-unit id="890e9f6e189646766e2f576b109ba30702568602" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; argument specifies the access mode with which the file is to be opened. The permitted values and their meanings are as specified for the &lt;a href=&quot;#mode&quot;&gt;&lt;code&gt;RandomAccessFile(File,String)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; 引数は、ファイルが開かれるとアクセスモードを指定します。許可される値とその意味は、&lt;a href=&quot;#mode&quot;&gt; &lt;code&gt;RandomAccessFile(File,String)&lt;/code&gt; &lt;/a&gt;コンストラクターに指定されているとおりです。</target>
        </trans-unit>
        <trans-unit id="e641820f7d6466959040c65c77fa4bc72f70aff9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; parameter specifies how the region of the file is mapped and may be one of the following modes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d634c96d7b7dc8c2283b2dc960c9bfb6ad5d16f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;modifiers&lt;/code&gt; parameter specifies &lt;em&gt;modifiers&lt;/em&gt; that qualify how the directory is registered. This release does not define any &lt;em&gt;standard&lt;/em&gt; modifiers. It may contain implementation specific modifiers.</source>
          <target state="translated">&lt;code&gt;modifiers&lt;/code&gt; を指定するパラメータ&lt;em&gt;修飾子&lt;/em&gt;ディレクトリが登録されているかの資格。このリリースでは、&lt;em&gt;標準の&lt;/em&gt;修飾子は定義されていません。実装固有の修飾子が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="1c71b33fd5b314e171d4df0723194294f0896265" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;msg&lt;/code&gt; string is localized using the given resource bundle. If the resource bundle is &lt;code&gt;null&lt;/code&gt;, then the &lt;code&gt;msg&lt;/code&gt; string is not localized.</source>
          <target state="translated">&lt;code&gt;msg&lt;/code&gt; 文字列が与えられたリソースバンドルを使用してローカライズされています。リソースバンドルが &lt;code&gt;null&lt;/code&gt; の場合、 &lt;code&gt;msg&lt;/code&gt; 文字列はローカライズされません。</target>
        </trans-unit>
        <trans-unit id="3ad795f1c708af7880ff420b8fad93daa8b2155f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;n&lt;/code&gt; parameter may be negative, even though the &lt;code&gt;skip&lt;/code&gt; method of the &lt;a href=&quot;reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; superclass throws an exception in this case. If &lt;code&gt;n&lt;/code&gt; is negative, then this method does nothing and returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">この場合、&lt;a href=&quot;reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt;スーパークラスの &lt;code&gt;skip&lt;/code&gt; メソッドが例外をスローしますが、 &lt;code&gt;n&lt;/code&gt; パラメータは負になる場合があります。場合は &lt;code&gt;n&lt;/code&gt; 負の場合、このメソッドは何も戻りません &lt;code&gt;0&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="7dff9aa267101b80032f4f16286856df7bec91f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;environment&lt;/code&gt; parameters are owned by the caller. The implementation will not modify these objects or keep references to them, although it may keep references to clones or copies.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; と &lt;code&gt;environment&lt;/code&gt; パラメータは、呼び出し側が所有しています。実装は、これらのオブジェクトを変更したり、それらへの参照を保持したりしませんが、クローンまたはコピーへの参照を保持する場合があります。</target>
        </trans-unit>
        <trans-unit id="30d43ffbfe8d9be7ac13f65149aa0271dd8dbc00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;nameCtx&lt;/code&gt; parameters may optionally be used to specify the name of the object being created. &lt;code&gt;name&lt;/code&gt; is the name of the object, relative to context &lt;code&gt;nameCtx&lt;/code&gt;. This information could be useful to the object factory or to the object implementation. If there are several possible contexts from which the object could be named -- as will often be the case -- it is up to the caller to select one. A good rule of thumb is to select the &quot;deepest&quot; context available. If &lt;code&gt;nameCtx&lt;/code&gt; is null, &lt;code&gt;name&lt;/code&gt; is relative to the default initial context. If no name is being specified, the &lt;code&gt;name&lt;/code&gt; parameter should be null.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; と &lt;code&gt;nameCtx&lt;/code&gt; パラメータは、必要に応じて作成されたオブジェクトの名前を指定するために使用されてもよいです。 &lt;code&gt;name&lt;/code&gt; は、コンテキスト &lt;code&gt;nameCtx&lt;/code&gt; を基準にしたオブジェクトの名前です。この情報は、オブジェクトファクトリまたはオブジェクトの実装に役立つ場合があります。オブジェクトに名前を付けることができるコンテキストがいくつかある場合（よくあることですが）、いずれかを選択するのは呼び出し側の責任です。大体の目安は、利用可能な「最も深い」コンテキストを選択することです。 &lt;code&gt;nameCtx&lt;/code&gt; がnullの場合、 &lt;code&gt;name&lt;/code&gt; はデフォルトの初期コンテキストを基準にしています。名前を指定しない場合、 &lt;code&gt;name&lt;/code&gt; パラメータはnullにする必要があります。</target>
        </trans-unit>
        <trans-unit id="be1fd20ce63d2a2b2230f8b0a96a9b6d08008ebe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;nameCtx&lt;/code&gt; parameters may optionally be used to specify the name of the object being created. See the description of &quot;Name and Context Parameters&quot; in &lt;a href=&quot;objectfactory#getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)&quot;&gt;&lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; と &lt;code&gt;nameCtx&lt;/code&gt; パラメータは、必要に応じて作成されたオブジェクトの名前を指定するために使用されてもよいです。詳細については、&lt;a href=&quot;objectfactory#getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)&quot;&gt; &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt; &lt;/a&gt;の「名前とコンテキストパラメータ」の説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="1c9872e72bac6d145cc0c98edc174c7beb6a1a6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;nameCtx&lt;/code&gt; parameters may optionally be used to specify the name of the object being created. See the description of &quot;Name and Context Parameters&quot; in &lt;a href=&quot;objectfactory#getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)&quot;&gt;&lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt;&lt;/a&gt; for details. If a factory uses &lt;code&gt;nameCtx&lt;/code&gt; it should synchronize its use against concurrent access, since context implementations are not guaranteed to be thread-safe.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; と &lt;code&gt;nameCtx&lt;/code&gt; パラメータは、必要に応じて作成されたオブジェクトの名前を指定するために使用されてもよいです。詳細については、&lt;a href=&quot;objectfactory#getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)&quot;&gt; &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt; &lt;/a&gt;の「名前とコンテキストパラメータ」の説明を参照してください。ファクトリが &lt;code&gt;nameCtx&lt;/code&gt; を使用する場合、コンテキスト実装はスレッドセーフであることが保証されていないため、同時アクセスに対してその使用を同期する必要があります。</target>
        </trans-unit>
        <trans-unit id="f70a327d5594e9f181a40f5c6ca0cd8e025505b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;nameCtx&lt;/code&gt; parameters may optionally be used to specify the name of the object being created. See the description of &quot;Name and Context Parameters&quot; in &lt;a href=&quot;objectfactory#getObjectInstance-java.lang.Object-javax.naming.Name-javax.naming.Context-java.util.Hashtable-&quot;&gt;&lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; と &lt;code&gt;nameCtx&lt;/code&gt; パラメータは、必要に応じて作成されたオブジェクトの名前を指定するために使用されてもよいです。詳細については、&lt;a href=&quot;objectfactory#getObjectInstance-java.lang.Object-javax.naming.Name-javax.naming.Context-java.util.Hashtable-&quot;&gt; &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt; &lt;/a&gt;の「名前とコンテキストパラメータ」の説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="d4c006afdb1b3d49e58c74bd4a0ffd732b023002" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;nameCtx&lt;/code&gt; parameters may optionally be used to specify the name of the object being created. See the description of &quot;Name and Context Parameters&quot; in &lt;a href=&quot;objectfactory#getObjectInstance-java.lang.Object-javax.naming.Name-javax.naming.Context-java.util.Hashtable-&quot;&gt;&lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt;&lt;/a&gt; for details. If a factory uses &lt;code&gt;nameCtx&lt;/code&gt; it should synchronize its use against concurrent access, since context implementations are not guaranteed to be thread-safe.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; と &lt;code&gt;nameCtx&lt;/code&gt; パラメータは、必要に応じて作成されたオブジェクトの名前を指定するために使用されてもよいです。詳細については、&lt;a href=&quot;objectfactory#getObjectInstance-java.lang.Object-javax.naming.Name-javax.naming.Context-java.util.Hashtable-&quot;&gt; &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt; &lt;/a&gt;の「名前とコンテキストパラメータ」の説明を参照してください。ファクトリが &lt;code&gt;nameCtx&lt;/code&gt; を使用する場合、コンテキストの実装がスレッドセーフであることが保証されていないため、ファクトリはその使用を同時アクセスに対して同期化する必要があります。</target>
        </trans-unit>
        <trans-unit id="e883ac2d08181956247cb122333240f05339fa61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; argument is case insensitive.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 引数はケース鈍感です。</target>
        </trans-unit>
        <trans-unit id="75ed05c0b8a33486c051a951114b24540ff05d3b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; matching is case insensitive, with any leading and trailing whitespace character removed.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 一致は削除任意の先頭と末尾の空白文字で、ケース鈍感です。</target>
        </trans-unit>
        <trans-unit id="6b3818f758723f19e7f19461448d70ae40bd144a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;attrs&lt;/code&gt;, and &lt;code&gt;environment&lt;/code&gt; parameters are owned by the caller. The implementation will not modify these objects or keep references to them, although it may keep references to clones or copies.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;attrs&lt;/code&gt; 、および &lt;code&gt;environment&lt;/code&gt; パラメータは、呼び出し側が所有しています。実装は、これらのオブジェクトを変更したり、それらへの参照を保持したりしませんが、クローンまたはコピーへの参照を保持する場合があります。</target>
        </trans-unit>
        <trans-unit id="48161fbd495af11311a77e82a4acb8a1f70aaa4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;inAttrs&lt;/code&gt;, and &lt;code&gt;environment&lt;/code&gt; parameters are owned by the caller. The implementation will not modify these objects or keep references to them, although it may keep references to clones or copies. The object returned by this method is owned by the caller. The implementation will not subsequently modify it. It will contain either a new &lt;code&gt;Attributes&lt;/code&gt; object that is likewise owned by the caller, or a reference to the original &lt;code&gt;inAttrs&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;inAttrs&lt;/code&gt; 、および &lt;code&gt;environment&lt;/code&gt; パラメータは、呼び出し側が所有しています。実装は、これらのオブジェクトを変更したり、それらへの参照を保持したりしませんが、クローンまたはコピーへの参照を保持する場合があります。このメソッドによって返されるオブジェクトは、呼び出し元が所有しています。その後、実装はそれを変更しません。同様に、呼び出し元が所有する新しい &lt;code&gt;Attributes&lt;/code&gt; オブジェクト、または元の &lt;code&gt;inAttrs&lt;/code&gt; パラメータへの参照が含まれます。</target>
        </trans-unit>
        <trans-unit id="ef2e6b4b4d41262649d36998a45ab4a554e41dd9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;names&lt;/code&gt; parameter (if not &lt;code&gt;null&lt;/code&gt;) is a &lt;code&gt;Collection&lt;/code&gt; of &lt;code&gt;X500Principal&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;names&lt;/code&gt; パラメータが（ない場合 &lt;code&gt;null&lt;/code&gt; ）である &lt;code&gt;Collection&lt;/code&gt; の &lt;code&gt;X500Principal&lt;/code&gt; 秒。</target>
        </trans-unit>
        <trans-unit id="f5c100cec826504d35586ac2749c0d0f50484e21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;names&lt;/code&gt; parameter (if not &lt;code&gt;null&lt;/code&gt;) is a &lt;code&gt;Collection&lt;/code&gt; of names. Each name is a &lt;code&gt;String&lt;/code&gt; or a byte array representing a distinguished name (in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; or ASN.1 DER encoded form, respectively). If &lt;code&gt;null&lt;/code&gt; is supplied as the value for this argument, no issuerNames check will be performed.</source>
          <target state="translated">&lt;code&gt;names&lt;/code&gt; パラメータが（ない場合 &lt;code&gt;null&lt;/code&gt; ）で &lt;code&gt;Collection&lt;/code&gt; の名前の。各名前は、識別名を表す &lt;code&gt;String&lt;/code&gt; またはバイト配列です（それぞれ&lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;またはASN.1 DERエンコード形式）。場合は &lt;code&gt;null&lt;/code&gt; がこの引数の値として供給され、何のissurNamesのチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="158c9c58ed1b16c5fc715719b723134504c4d4a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;names&lt;/code&gt; parameter (if not &lt;code&gt;null&lt;/code&gt;) is a &lt;code&gt;Collection&lt;/code&gt; of names. Each name is a &lt;code&gt;String&lt;/code&gt; or a byte array representing a distinguished name (in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; or ASN.1 DER encoded form, respectively). If &lt;code&gt;null&lt;/code&gt; is supplied as the value for this argument, no issuerNames check will be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f8926ca6dbdca434f3cdffa8eda26510a88124" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;names&lt;/code&gt; parameter (if not &lt;code&gt;null&lt;/code&gt;) is a &lt;code&gt;Collection&lt;/code&gt; with one entry for each name to be included in the pathToNames criterion. Each entry is a &lt;code&gt;List&lt;/code&gt; whose first entry is an &lt;code&gt;Integer&lt;/code&gt; (the name type, 0-8) and whose second entry is a &lt;code&gt;String&lt;/code&gt; or a byte array (the name, in string or ASN.1 DER encoded form, respectively). There can be multiple names of the same type. If &lt;code&gt;null&lt;/code&gt; is supplied as the value for this argument, no pathToNames check will be performed.</source>
          <target state="translated">&lt;code&gt;names&lt;/code&gt; パラメータ（そうでない場合は &lt;code&gt;null&lt;/code&gt; が）ある &lt;code&gt;Collection&lt;/code&gt; pathToNames基準値に含まれている名前ごとに1つのエントリと。各エントリは、最初のエントリが &lt;code&gt;Integer&lt;/code&gt; （名前のタイプ、0〜8）であり、2番目のエントリが &lt;code&gt;String&lt;/code&gt; またはバイト配列（それぞれ、文字列またはASN.1 DERエンコード形式の名前）である &lt;code&gt;List&lt;/code&gt; です。同じタイプの名前が複数存在する可能性があります。場合は &lt;code&gt;null&lt;/code&gt; がこの引数の値として供給され、pathToNamesのチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="b7f614fb779c50df2c64620e5af3100fbb23fe19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;names&lt;/code&gt; parameter (if not &lt;code&gt;null&lt;/code&gt;) is a &lt;code&gt;Collection&lt;/code&gt; with one entry for each name to be included in the subject alternative name criterion. Each entry is a &lt;code&gt;List&lt;/code&gt; whose first entry is an &lt;code&gt;Integer&lt;/code&gt; (the name type, 0-8) and whose second entry is a &lt;code&gt;String&lt;/code&gt; or a byte array (the name, in string or ASN.1 DER encoded form, respectively). There can be multiple names of the same type. If &lt;code&gt;null&lt;/code&gt; is supplied as the value for this argument, no subjectAlternativeNames check will be performed.</source>
          <target state="translated">&lt;code&gt;names&lt;/code&gt; パラメータ（そうでない場合は &lt;code&gt;null&lt;/code&gt; が）ある &lt;code&gt;Collection&lt;/code&gt; サブジェクト代替名基準値に含まれている名前ごとに1つのエントリとなります。各エントリは、最初のエントリが &lt;code&gt;Integer&lt;/code&gt; （名前のタイプ、0〜8）であり、2番目のエントリが &lt;code&gt;String&lt;/code&gt; またはバイト配列（それぞれ、文字列またはASN.1 DERエンコード形式の名前）である &lt;code&gt;List&lt;/code&gt; です。同じタイプの名前が複数存在する可能性があります。場合は &lt;code&gt;null&lt;/code&gt; がこの引数の値として供給され、subjectAlternativeNamesのチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="86f6973623e34ae41d0cb380cd7a6687a04a283e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;network interface&lt;/code&gt; and &lt;code&gt;ttl&lt;/code&gt; parameters let the caller specify which network interface the test will go through and the maximum number of hops the packets should go through. A negative value for the &lt;code&gt;ttl&lt;/code&gt; will result in an IllegalArgumentException being thrown.</source>
          <target state="translated">&lt;code&gt;network interface&lt;/code&gt; と &lt;code&gt;ttl&lt;/code&gt; パラメータは、発信者が通過しますとホップの最大数は、パケットが通過すべきテストインタフェースたネットワークを指定してみましょう。 &lt;code&gt;ttl&lt;/code&gt; に負の値を指定すると、IllegalArgumentExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="8b09e54aa5c847f44721e53e1758b993160bcd0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;newLength&lt;/code&gt; argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;newLength&lt;/code&gt; の引数はより大きくなるかに等しくなければならない &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7231d4e3f44c3037aca933714c69e80b5eb9b9ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;newTypes&lt;/code&gt; list contains types &lt;code&gt;P..., M..., A...&lt;/code&gt;, with as many types in &lt;code&gt;P&lt;/code&gt; as indicated by &lt;code&gt;pos&lt;/code&gt;. The &lt;code&gt;M&lt;/code&gt; types are precisely those that the &lt;code&gt;M&lt;/code&gt; types in the target handle's parameter type list are supposed to match. The types in &lt;code&gt;A&lt;/code&gt; are additional types found after the matching sub-list.</source>
          <target state="translated">&lt;code&gt;newTypes&lt;/code&gt; のリストが含まれているタイプ &lt;code&gt;P..., M..., A...&lt;/code&gt; のように多くの種類と、 &lt;code&gt;P&lt;/code&gt; で示されるように &lt;code&gt;pos&lt;/code&gt; 。 &lt;code&gt;M&lt;/code&gt; の種類は正確にあるものである &lt;code&gt;M&lt;/code&gt; のターゲットハンドルのパラメータ・タイプのリスト内の型が一致することになっています。 &lt;code&gt;A&lt;/code&gt; のタイプは、一致するサブリストの後にある追加のタイプです。</target>
        </trans-unit>
        <trans-unit id="5caef121267476c77e7c49f344a99bf3c90e71f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;newtransform&lt;/code&gt; and &lt;code&gt;newCanonicalizationMethod&lt;/code&gt; methods of &lt;code&gt;XMLSignatureFactory&lt;/code&gt; MUST support &lt;code&gt;DOMStructure&lt;/code&gt; parameter types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238e2ddc1de1cf5d38b16bf8a5ed7a88e495f8bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nodeName&lt;/code&gt; attribute that is inherited from &lt;code&gt;Node&lt;/code&gt; contains the name of the entity.</source>
          <target state="translated">&lt;code&gt;nodeName&lt;/code&gt; から継承された属性 &lt;code&gt;Node&lt;/code&gt; 、エンティティの名前が含まれています。</target>
        </trans-unit>
        <trans-unit id="cd6f3c9ed9744a178a240c4efe334b44144e9408" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;normalize&lt;/code&gt; method helps solve these problems by transforming text into the canonical composed and decomposed forms as shown in the first example above. In addition, you can have it perform compatibility decompositions so that you can treat compatibility characters the same as their equivalents. Finally, the &lt;code&gt;normalize&lt;/code&gt; method rearranges accents into the proper canonical order, so that you do not have to worry about accent rearrangement on your own.</source>
          <target state="translated">&lt;code&gt;normalize&lt;/code&gt; 方法は、正規の構成と上記第一の例に示すように、フォームの分解にテキストを変換することによって、これらの問題を解決するのに役立ちます。さらに、互換性分解を実行して、互換性文字を同等のものと同じように扱うことができます。最後に、 &lt;code&gt;normalize&lt;/code&gt; メソッドはアクセントを適切な正規の順序に再配置するため、自分でアクセントの再配置を心配する必要はありません。</target>
        </trans-unit>
        <trans-unit id="5f52e6638e3eca203f0c48df0632a417ad5518e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;notations&lt;/code&gt;&lt;code&gt;NamedNodeMaps&lt;/code&gt; are equal.</source>
          <target state="translated">&lt;code&gt;NamedNodeMaps&lt;/code&gt; の &lt;code&gt;notations&lt;/code&gt; は同じです。</target>
        </trans-unit>
        <trans-unit id="63cf4faf44647d95951cea7798d0b85f615c45ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ns&lt;/code&gt; parameter may be negative, even though the &lt;code&gt;skip&lt;/code&gt; method of the &lt;a href=&quot;reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; superclass throws an exception in this case. Negative values of &lt;code&gt;ns&lt;/code&gt; cause the stream to skip backwards. Negative return values indicate a skip backwards. It is not possible to skip backwards past the beginning of the string.</source>
          <target state="translated">この場合、&lt;a href=&quot;reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt;スーパークラスの &lt;code&gt;skip&lt;/code&gt; メソッドが例外をスローしますが、 &lt;code&gt;ns&lt;/code&gt; パラメータは負の値になる場合があります。 &lt;code&gt;ns&lt;/code&gt; の負の値は、ストリームを逆方向にスキップさせます。負の戻り値は後方にスキップすることを示します。文字列の先頭を越えて後方にスキップすることはできません。</target>
        </trans-unit>
        <trans-unit id="e0fcc06e98814dd87a3c62b985949fba60bdb550" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; argument is the index of the first byte of the subarray, and the &lt;code&gt;count&lt;/code&gt; argument specifies the length of the subarray.</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; 引数は部分配列の先頭のバイトのインデックスであり、 &lt;code&gt;count&lt;/code&gt; 引数は部分配列の長さを指定します。</target>
        </trans-unit>
        <trans-unit id="baa0351e008899618db6b64da0e758694ddf41eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; argument is the index of the first character of the subarray. The &lt;code&gt;count&lt;/code&gt; argument specifies the length of the subarray. The contents of the subarray are copied; subsequent modification of the character array does not affect the returned string.</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; 引数は、部分配列の最初の文字のインデックスです。 &lt;code&gt;count&lt;/code&gt; 引数は部分配列の長さを指定します。サブ配列の内容がコピーされます。その後の文字配列の変更は、返される文字列には影響しません。</target>
        </trans-unit>
        <trans-unit id="9c01d1aa6c77241f92e51f28f20db5fb08e4c253" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;, and less than or equal to the &lt;a href=&quot;charsequence#length()&quot;&gt;length&lt;/a&gt; of this sequence.</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; 引数がより大きいか等しくなければならない &lt;code&gt;0&lt;/code&gt; 、未満又は等しい&lt;a href=&quot;charsequence#length()&quot;&gt;長さ&lt;/a&gt;この配列の。</target>
        </trans-unit>
        <trans-unit id="7d930134c90bf6d49ed3db167b3ffa23d64e6b5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;, and less than or equal to the &lt;a href=&quot;stringbuffer#length--&quot;&gt;length&lt;/a&gt; of this sequence.</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; 引数がより大きいか等しくなければならない &lt;code&gt;0&lt;/code&gt; 、未満又は等しい&lt;a href=&quot;stringbuffer#length--&quot;&gt;長さ&lt;/a&gt;この配列の。</target>
        </trans-unit>
        <trans-unit id="5649ec97e26cd383b62037dbe7726158b1b2a542" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;, and less than or equal to the &lt;a href=&quot;stringbuilder#length--&quot;&gt;length&lt;/a&gt; of this sequence.</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; 引数がより大きいか等しくなければならない &lt;code&gt;0&lt;/code&gt; 、未満又は等しい&lt;a href=&quot;stringbuilder#length--&quot;&gt;長さ&lt;/a&gt;この配列の。</target>
        </trans-unit>
        <trans-unit id="2d5b4d40ecb1db6747499e6955bb54e7c954105e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;openAttributes&lt;/code&gt;, &lt;code&gt;openConstructors&lt;/code&gt;, &lt;code&gt;
 openOperations&lt;/code&gt; and &lt;code&gt;notifications&lt;/code&gt; array parameters are internally copied, so that subsequent changes to the arrays referenced by these parameters have no effect on this instance.</source>
          <target state="translated">&lt;code&gt;openAttributes&lt;/code&gt; 、 &lt;code&gt;openConstructors&lt;/code&gt; 、 &lt;code&gt; openOperations&lt;/code&gt; 及び &lt;code&gt;notifications&lt;/code&gt; 配列パラメータは、内部で、これらのパラメータによって参照配列に対する後続の変更は、このインスタンスに影響を及ぼさないように、コピーされます。</target>
        </trans-unit>
        <trans-unit id="4b47fbce935f5d028b77339d1ef9818c0b7586f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;openAttributes&lt;/code&gt;, &lt;code&gt;openConstructors&lt;/code&gt;, &lt;code&gt;openOperations&lt;/code&gt; and &lt;code&gt;notifications&lt;/code&gt; array parameters are internally copied, so that subsequent changes to the arrays referenced by these parameters have no effect on this instance.</source>
          <target state="translated">&lt;code&gt;openAttributes&lt;/code&gt; 、 &lt;code&gt;openConstructors&lt;/code&gt; 、 &lt;code&gt;openOperations&lt;/code&gt; 及び &lt;code&gt;notifications&lt;/code&gt; 配列パラメータは、内部で、これらのパラメータによって参照配列に対する後続の変更は、このインスタンスに影響を及ぼさないように、コピーされます。</target>
        </trans-unit>
        <trans-unit id="d6983d2110c5fe985de448c67aa2a3f5fba3481e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; array may be used to indicate how symbolic links are handled by the resulting file attribute view for the case that the file is a symbolic link. By default, symbolic links are followed. If the option &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; is present then symbolic links are not followed. This option is ignored by implementations that do not support symbolic links.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 配列は、シンボリックリンクが、ファイルがシンボリックリンクである場合の結果のファイル属性ビューでどのように扱われるかを示すために使用することができます。デフォルトでは、シンボリックリンクをたどります。オプション&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;が存在する場合、シンボリックリンクは追跡されません。このオプションは、シンボリックリンクをサポートしない実装では無視されます。</target>
        </trans-unit>
        <trans-unit id="e205a1262affb513a2bd877857ae965e9d442d7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; array may be used to indicate how symbolic links are handled for the case that the file is a symbolic link. By default, symbolic links are followed and the file attribute of the final target of the link is read. If the option &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; is present then symbolic links are not followed.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 配列は、ファイルがシンボリックリンクであった場合のためにどのように処理されるか、シンボリックリンクを示すために使用することができます。デフォルトでは、シンボリックリンクがたどられ、リンクの最終ターゲットのファイル属性が読み取られます。オプション&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;が存在する場合、シンボリックリンクは追跡されません。</target>
        </trans-unit>
        <trans-unit id="07b7edf8d716c1c078bf2b1c0f91fb4940940f39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; array may be used to indicate how symbolic links are handled for the case that the file is a symbolic link. By default, symbolic links are followed and the file attribute of the final target of the link is set. If the option &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; is present then symbolic links are not followed.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 配列は、ファイルがシンボリックリンクであった場合のためにどのように処理されるか、シンボリックリンクを示すために使用することができます。デフォルトでは、シンボリックリンクがたどられ、リンクの最終ターゲットのファイル属性が設定されます。オプション&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;が存在する場合、シンボリックリンクは追跡されません。</target>
        </trans-unit>
        <trans-unit id="d06342b773fea6549bc89fc2462a7083b70f4fb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; array may be used to indicate how symbolic links are handled. By default, symbolic links are resolved to their final target. If the option &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; is present then this method does not resolve symbolic links. Some implementations allow special names such as &quot;&lt;code&gt;..&lt;/code&gt;&quot; to refer to the parent directory. When deriving the &lt;em&gt;real path&lt;/em&gt;, and a &quot;&lt;code&gt;..&lt;/code&gt;&quot; (or equivalent) is preceded by a non-&quot;&lt;code&gt;..&lt;/code&gt;&quot; name then an implementation will typically cause both names to be removed. When not resolving symbolic links and the preceding name is a symbolic link then the names are only removed if it guaranteed that the resulting path will locate the same file as this path.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 配列は、シンボリックリンクがどのように処理されるかを示すために使用することができます。デフォルトでは、シンボリックリンクは最終的なターゲットに解決されます。オプション&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;が存在する場合、このメソッドはシンボリックリンクを解決しません。一部の実装では、「 &lt;code&gt;..&lt;/code&gt; 」などの特別な名前で親ディレクトリを参照できます。&lt;em&gt;実際のパスを&lt;/em&gt;導出するときに、「 &lt;code&gt;..&lt;/code&gt; 」（または同等のもの）の前に「 &lt;code&gt;..&lt;/code&gt; 」以外の名前を付けると、通常、実装によって両方の名前が削除されます。シンボリックリンクを解決せず、前の名前がシンボリックリンクである場合、結果のパスがこのパスと同じファイルを見つけることが保証されている場合にのみ、名前が削除されます。</target>
        </trans-unit>
        <trans-unit id="f5a345ea481a9989b3e67c3fdfaa252ee2038c96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter determines how the file is opened. If no options are present then it is equivalent to opening the file with the &lt;a href=&quot;standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; option. In addition to the &lt;code&gt;
 READ&lt;/code&gt; option, an implementation may also support additional implementation specific options.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; パラメータは、ファイルが開かれた方法を決定します。オプションが存在しない場合は、&lt;a href=&quot;standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt;オプションを使用してファイルを開くのと同じです。 &lt;code&gt; READ&lt;/code&gt; オプションに加えて、実装は追加の実装固有のオプションもサポートする場合があります。</target>
        </trans-unit>
        <trans-unit id="0bc9bb7ec20a4fcc37fab92a84728a3be6a3d529" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter determines how the file is opened. If no options are present then it is equivalent to opening the file with the &lt;a href=&quot;standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; option. In addition to the &lt;code&gt;READ&lt;/code&gt; option, an implementation may also support additional implementation specific options.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; パラメータは、ファイルが開かれた方法を決定します。オプションが存在しない場合は、&lt;a href=&quot;standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt;オプションでファイルを開くのと同じです。 &lt;code&gt;READ&lt;/code&gt; オプションに加えて、実装は追加の実装固有のオプションもサポートします。</target>
        </trans-unit>
        <trans-unit id="feb5d322a388c3217a1ff698a06ad00e166739fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter determines how the file is opened. The &lt;a href=&quot;../file/standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../file/standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options determine if the file should be opened for reading and/or writing. If neither option (or the &lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt;&lt;code&gt;APPEND&lt;/code&gt;&lt;/a&gt; option) is contained in the array then the file is opened for reading. By default reading or writing commences at the beginning of the file.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; パラメータは、ファイルが開かれた方法を決定します。&lt;a href=&quot;../file/standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../file/standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; の&lt;/a&gt;ファイルは読み取りおよび/または書き込み用にオープンする必要がある場合のオプションが決定します。どちらのオプション（または&lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt; &lt;code&gt;APPEND&lt;/code&gt; &lt;/a&gt;オプション）も配列に含まれていない場合、ファイルは読み取り用に開かれます。デフォルトでは、ファイルの先頭から読み取りまたは書き込みが開始されます。</target>
        </trans-unit>
        <trans-unit id="c735a8e347a9d0b0ecd22343769651f2ac14125f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter determines how the file is opened. The &lt;a href=&quot;../file/standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../file/standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options determines if the file should be opened for reading and/or writing. If neither option is contained in the array then an existing file is opened for reading.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; パラメータは、ファイルが開かれた方法を決定します。&lt;a href=&quot;../file/standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../file/standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;ファイルは読み取りおよび/または書き込み用にオープンする必要がある場合のオプションが決定されます。どちらのオプションも配列に含まれていない場合、既存のファイルが読み取り用に開かれます。</target>
        </trans-unit>
        <trans-unit id="70441efdb55fa14107d32cb84dfbb03932007cdd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter determines how the file is opened. The &lt;a href=&quot;standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options determine if the file should be opened for reading and/or writing. If neither option (or the &lt;a href=&quot;standardopenoption#APPEND&quot;&gt;&lt;code&gt;APPEND&lt;/code&gt;&lt;/a&gt; option) is present then the file is opened for reading. By default reading or writing commence at the beginning of the file.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; パラメータは、ファイルが開かれた方法を決定します。&lt;a href=&quot;standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; の&lt;/a&gt;ファイルは読み取りおよび/または書き込み用にオープンする必要がある場合のオプションが決定します。どちらのオプション（または&lt;a href=&quot;standardopenoption#APPEND&quot;&gt; &lt;code&gt;APPEND&lt;/code&gt; &lt;/a&gt;オプション）も存在しない場合、ファイルは読み取り用に開かれます。デフォルトでは、ファイルの先頭で読み取りまたは書き込みが開始されます。</target>
        </trans-unit>
        <trans-unit id="adaafaa0c2c26b989f9f5f2e8716f29c6f11b35c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter may be used to indicate how symbolic links are handled for the case that the file is a symbolic link. By default, symbolic links are followed. If the option &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; is present then symbolic links are not followed.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; パラメータは、ファイルがシンボリックリンクであった場合のためにどのように処理されるか、シンボリックリンクを示すために使用することができます。デフォルトでは、シンボリックリンクをたどります。オプション&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;が存在する場合、シンボリックリンクは追跡されません。</target>
        </trans-unit>
        <trans-unit id="e88e22b5339b7c784d561d64428df97e00625dcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter may include any of the following:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; パラメータは、次のいずれかを含むことができます。</target>
        </trans-unit>
        <trans-unit id="4b13774c0241962d758bb9e487f1b8e4b324b63e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter specifies how the file is created or opened. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; ファイルを作成したり開いたりする方法を指定するパラメータ。オプションが存在しない場合、このメソッドは、&lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;オプションが存在するかのように機能します。つまり、書き込み用にファイルを開くか、ファイルが存在しない場合はファイルを作成するか、最初に既存の&lt;a href=&quot;#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt;をサイズ &lt;code&gt;0&lt;/code&gt; に切り捨てます。</target>
        </trans-unit>
        <trans-unit id="9f9d8a105de341349c54bc6855f4dc3514259ce3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter specifies how the file is created or opened. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt;. The method ensures that the file is closed when all lines have been written (or an I/O error or other runtime exception is thrown). If an I/O error occurs then it may do so after the file has been created or truncated, or after some bytes have been written to the file.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; ファイルを作成したり開いたりする方法を指定するパラメータ。オプションが存在しない場合、このメソッドは、&lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;オプションが存在するかのように機能します。つまり、書き込み用にファイルを開くか、ファイルが存在しない場合はファイルを作成するか、最初に既存の&lt;a href=&quot;#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt;をサイズ &lt;code&gt;0&lt;/code&gt; に切り捨てます。このメソッドは、すべての行が書き込まれたとき（または、I / Oエラーまたはその他のランタイム例外がスローされたとき）にファイルが確実に閉じられるようにします。 I / Oエラーが発生した場合は、ファイルが作成または切り捨てられた後、またはいくつかのバイトがファイルに書き込まれた後に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="6c00a59ba94adcb6905e3dd085514e8e2f27d12a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter specifies how the the file is created or opened. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt;. The method ensures that the file is closed when all lines have been written (or an I/O error or other runtime exception is thrown). If an I/O error occurs then it may do so after the file has created or truncated, or after some bytes have been written to the file.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; ファイルを作成したり開いたりする方法を指定するパラメータ。オプションが存在しない場合、このメソッドは、&lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;オプションが存在するかのように機能します。つまり、書き込み用にファイルを開き、存在しない場合はファイルを作成するか、既存の&lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt;を最初にサイズ &lt;code&gt;0&lt;/code&gt; に切り捨てます。このメソッドは、すべての行が書き込まれたときに（またはI / Oエラーまたはその他の実行時例外がスローされたときに）ファイルが確実に閉じられるようにします。 I / Oエラーが発生した場合、ファイルが作成または切り捨てられた後、またはファイルにいくつかのバイトが書き込まれた後に発生することがあります。</target>
        </trans-unit>
        <trans-unit id="19ea8dcb435d7496383db34913da36823ca371d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;orientation&lt;/code&gt; argument must take one of the two values &lt;code&gt;Scrollbar.HORIZONTAL&lt;/code&gt;, or &lt;code&gt;Scrollbar.VERTICAL&lt;/code&gt;, indicating a horizontal or vertical scroll bar, respectively.</source>
          <target state="translated">&lt;code&gt;orientation&lt;/code&gt; 引数は、2つの値のいずれかなければならない &lt;code&gt;Scrollbar.HORIZONTAL&lt;/code&gt; 、または &lt;code&gt;Scrollbar.VERTICAL&lt;/code&gt; それぞれ、水平または垂直スクロールバーを示します。</target>
        </trans-unit>
        <trans-unit id="d38cc57bdb401fa5458030b8203d68a47b6b87cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;outputMimeType&lt;/code&gt; parameter describes the document type that you want to create, whereas the &lt;code&gt;flavor&lt;/code&gt; parameter describes the format in which the input data will be provided by the application to the &lt;code&gt;StreamPrintService&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;outputMimeType&lt;/code&gt; のに対し、パラメータは、作成することを文書タイプを記述する &lt;code&gt;flavor&lt;/code&gt; パラメータが入力されたデータは、へのアプリケーションによって提供されるフォーマットについて説明し &lt;code&gt;StreamPrintService&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8257034935941be3f0b0a79bcb02da45c170ab8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ownerElement&lt;/code&gt; attribute is set to &lt;code&gt;null&lt;/code&gt; and the &lt;code&gt;specified&lt;/code&gt; flag is set to &lt;code&gt;true&lt;/code&gt; on the adopted &lt;code&gt;Attr&lt;/code&gt;. The descendants of the source &lt;code&gt;Attr&lt;/code&gt; are recursively adopted.</source>
          <target state="translated">&lt;code&gt;ownerElement&lt;/code&gt; 属性に設定されている &lt;code&gt;null&lt;/code&gt; と &lt;code&gt;specified&lt;/code&gt; フラグが設定されている &lt;code&gt;true&lt;/code&gt; 採用上 &lt;code&gt;Attr&lt;/code&gt; 。ソース &lt;code&gt;Attr&lt;/code&gt; の子孫が再帰的に採用されます。</target>
        </trans-unit>
        <trans-unit id="db95ff142963f6cc3449f48fbd4ccbf6c3102b9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ownerElement&lt;/code&gt; attribute is set to &lt;code&gt;null&lt;/code&gt; and the &lt;code&gt;specified&lt;/code&gt; flag is set to &lt;code&gt;true&lt;/code&gt; on the generated &lt;code&gt;Attr&lt;/code&gt;. The descendants of the source &lt;code&gt;Attr&lt;/code&gt; are recursively imported and the resulting nodes reassembled to form the corresponding subtree. Note that the &lt;code&gt;deep&lt;/code&gt; parameter has no effect on &lt;code&gt;Attr&lt;/code&gt; nodes; they always carry their children with them when imported.</source>
          <target state="translated">&lt;code&gt;ownerElement&lt;/code&gt; 属性がに設定され &lt;code&gt;null&lt;/code&gt; と &lt;code&gt;specified&lt;/code&gt; フラグが設定されている &lt;code&gt;true&lt;/code&gt; 生成に &lt;code&gt;Attr&lt;/code&gt; 。ソース &lt;code&gt;Attr&lt;/code&gt; の子孫が再帰的にインポートされ、結果のノードが再構築されて、対応するサブツリーが形成されます。 &lt;code&gt;deep&lt;/code&gt; パラメータは &lt;code&gt;Attr&lt;/code&gt; ノードに影響を与えないことに注意してください。輸入時には常に子供を連れて行きます。</target>
        </trans-unit>
        <trans-unit id="5c95aaf1fcdce3e672aff6748a9bdc1c5a92b1a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;packageFinder&lt;/code&gt; parameter is for use when reading module descriptors from legacy module-artifact formats that do not record the set of packages in the descriptor itself.</source>
          <target state="translated">&lt;code&gt;packageFinder&lt;/code&gt; の記述自体にパッケージのセットを記録していないレガシーモジュールアーティファクトのフォーマットからのモジュールの記述子を読み込むときにパラメータが使用するためのものです。</target>
        </trans-unit>
        <trans-unit id="c1d6a3e2666b292d57c5aab696b343f540ec638d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;params&lt;/code&gt; field now contains two elements, each of which is an array two elements long. The first element is the parameter number; the second is the value to be set. In this case, the first element of &lt;code&gt;params&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;5000&lt;/code&gt;, and the second element is &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;&quot;West&quot;&lt;/code&gt;. When an application calls the method &lt;code&gt;execute&lt;/code&gt;, it will in turn call on this &lt;code&gt;RowSet&lt;/code&gt; object's reader, which will in turn invoke its &lt;code&gt;readData&lt;/code&gt; method. As part of its implementation, &lt;code&gt;readData&lt;/code&gt; will get the values in &lt;code&gt;params&lt;/code&gt; and use them to set the command's placeholder parameters. The following code fragment gives an idea of how the reader does this, after obtaining the &lt;code&gt;Connection&lt;/code&gt; object &lt;code&gt;con&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; はのフィールドは現在、二つの要素長い配列でそれぞれが2つの要素を、含んでいます。最初の要素はパラメーター番号です。 2番目は設定する値です。この場合、最初の要素 &lt;code&gt;params&lt;/code&gt; がある &lt;code&gt;1&lt;/code&gt; 、 &lt;code&gt;5000&lt;/code&gt; 、及び第二の要素である &lt;code&gt;2&lt;/code&gt; 、 &lt;code&gt;&quot;West&quot;&lt;/code&gt; 。アプリケーションがメソッド &lt;code&gt;execute&lt;/code&gt; を呼び出すと、次にこの &lt;code&gt;RowSet&lt;/code&gt; オブジェクトのリーダーが呼び出され、次に &lt;code&gt;readData&lt;/code&gt; メソッドが呼び出されます。その実装の一部として、 &lt;code&gt;readData&lt;/code&gt; は &lt;code&gt;params&lt;/code&gt; の値を取得しますそれらを使用して、コマンドのプレースホルダーパラメーターを設定します。次のコードフラグメントは、 &lt;code&gt;Connection&lt;/code&gt; オブジェクト &lt;code&gt;con&lt;/code&gt; を取得した後、リーダーがこれをどのように行うかを示しています。</target>
        </trans-unit>
        <trans-unit id="edb61ce5d9acc2ab5ce76544d532094234d018a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parent&lt;/code&gt; argument determines two things: the frame on which the open dialog depends and the component whose position the look and feel should consider when placing the dialog. If the parent is a &lt;code&gt;Frame&lt;/code&gt; object (such as a &lt;code&gt;JFrame&lt;/code&gt;) then the dialog depends on the frame and the look and feel positions the dialog relative to the frame (for example, centered over the frame). If the parent is a component, then the dialog depends on the frame containing the component, and is positioned relative to the component (for example, centered over the component). If the parent is &lt;code&gt;null&lt;/code&gt;, then the dialog depends on no visible window, and it's placed in a look-and-feel-dependent position such as the center of the screen.</source>
          <target state="translated">&lt;code&gt;parent&lt;/code&gt; 開くダイアログが依存するフレームと位置ルックアンドフィールダイアログを配置するときに考慮すべきであるコンポーネント：引数は2つのことを決定します。親が &lt;code&gt;Frame&lt;/code&gt; オブジェクト（ &lt;code&gt;JFrame&lt;/code&gt; など）の場合、ダイアログはフレームに依存し、ルックアンドフィールはダイアログをフレームに対して相対的に配置します（たとえば、フレームの中央に配置します）。親がコンポーネントの場合、ダイアログはコンポーネントを含むフレームに依存し、コンポーネントに対して相対的に配置されます（たとえば、コンポーネントの中央に配置されます）。親が &lt;code&gt;null&lt;/code&gt; の場合、ダイアログは表示されているウィンドウに依存せず、画面の中央など、ルックアンドフィールに依存する位置に配置されます。</target>
        </trans-unit>
        <trans-unit id="64a8995d9ac05171aede64481f740265b7613585" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parseURL&lt;/code&gt; method of &lt;code&gt;URLStreamHandler&lt;/code&gt; parses the string representation as if it were an &lt;code&gt;http&lt;/code&gt; specification. Most URL protocol families have a similar parsing. A stream protocol handler for a protocol that has a different syntax must override this routine.</source>
          <target state="translated">&lt;code&gt;URLStreamHandler&lt;/code&gt; の &lt;code&gt;parseURL&lt;/code&gt; メソッドは、文字列表現を &lt;code&gt;http&lt;/code&gt; 仕様であるかのように解析します。ほとんどのURLプロトコルファミリは同様の解析を行います。構文が異なるプロトコルのストリームプロトコルハンドラは、このルーチンをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="2221038019d4be2cb2f88fab060218d2d5a02e57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; parameter is associated with a &lt;code&gt;FileSystem&lt;/code&gt; that supports the &lt;a href=&quot;attribute/posixfileattributeview&quot;&gt;&lt;code&gt;PosixFileAttributeView&lt;/code&gt;&lt;/a&gt;. This attribute view provides access to file attributes commonly associated with files on file systems used by operating systems that implement the Portable Operating System Interface (POSIX) family of standards.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; パラメータが関連付けられている &lt;code&gt;FileSystem&lt;/code&gt; をサポート&lt;a href=&quot;attribute/posixfileattributeview&quot;&gt; &lt;code&gt;PosixFileAttributeView&lt;/code&gt; を&lt;/a&gt;。この属性ビューは、標準のポータブルオペレーティングシステムインターフェイス（POSIX）ファミリを実装するオペレーティングシステムによって使用されるファイルシステム上のファイルに一般的に関連付けられているファイル属性へのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="b249e9a3d9c0f37793a768ee4c126d9c0f3b49e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; parameter is associated with a file system that supports &lt;a href=&quot;attribute/fileownerattributeview&quot;&gt;&lt;code&gt;FileOwnerAttributeView&lt;/code&gt;&lt;/a&gt;. This file attribute view provides access to a file attribute that is the owner of the file.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; パラメータがサポートするファイルシステムに関連付けられている&lt;a href=&quot;attribute/fileownerattributeview&quot;&gt; &lt;code&gt;FileOwnerAttributeView&lt;/code&gt; を&lt;/a&gt;。このファイル属性ビューは、ファイルの所有者であるファイル属性へのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="5493aef38945eeedee66c785a93a8e949626fc4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;perms&lt;/code&gt; parameter is a &lt;code&gt;String&lt;/code&gt; representing the permissions. It has 9 characters that are interpreted as three sets of three. The first set refers to the owner's permissions; the next to the group permissions and the last to others. Within each set, the first character is &lt;code&gt;'r'&lt;/code&gt; to indicate permission to read, the second character is &lt;code&gt;'w'&lt;/code&gt; to indicate permission to write, and the third character is &lt;code&gt;'x'&lt;/code&gt; for execute permission. Where a permission is not set then the corresponding character is set to &lt;code&gt;'-'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;perms&lt;/code&gt; パラメータがある &lt;code&gt;String&lt;/code&gt; のアクセス権を表します。3つの3つのセットとして解釈される9文字があります。最初のセットは所有者の権限を参照しています。グループの権限の隣と他の人の最後。各セット内で、最初の文字は &lt;code&gt;'r'&lt;/code&gt; 読み取り権限を示し、2番目の文字は &lt;code&gt;'w'&lt;/code&gt; 書き込み権限を示し、3番目の文字は &lt;code&gt;'x'&lt;/code&gt; で実行権限を示します。権限が設定されていない場合、対応する文字は &lt;code&gt;'-'&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="b9d482d82a8c67b95f55d10ab3dda1aad0c96b7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;persistPolicy&lt;/code&gt; and &lt;code&gt;currencyTimeLimit&lt;/code&gt; fields are meaningless for constructors, but are not considered invalid.</source>
          <target state="translated">&lt;code&gt;persistPolicy&lt;/code&gt; と &lt;code&gt;currencyTimeLimit&lt;/code&gt; フィールドは、コンストラクタに対して無意味ですが、無効と見なされていません。</target>
        </trans-unit>
        <trans-unit id="ca92d75fa54a7f375119b1732a1defda2c5a065a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;popup&lt;/code&gt; can be set on one &lt;code&gt;TrayIcon&lt;/code&gt; only. Setting the same popup on multiple &lt;code&gt;TrayIcon&lt;/code&gt;s will cause an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;popup&lt;/code&gt; 1つのに設定することができ &lt;code&gt;TrayIcon&lt;/code&gt; にのみ。複数の &lt;code&gt;TrayIcon&lt;/code&gt; に同じポップアップを設定すると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="822e7053ed501794bcb73e078de627432ea24760" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pos&lt;/code&gt; argument may range between zero and</source>
          <target state="translated">&lt;code&gt;pos&lt;/code&gt; 引数がゼロとの間の範囲であり得ます</target>
        </trans-unit>
        <trans-unit id="0d4b8df143426535636c3d9fcf5d259dd494e8ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pos&lt;/code&gt; argument selects which parameters are to be bound. It may range between zero and</source>
          <target state="translated">&lt;code&gt;pos&lt;/code&gt; パラメータがバインドされる引数の選択。ゼロから</target>
        </trans-unit>
        <trans-unit id="1a88d4013b421f51fd6a8b134cf58266c11d071d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pred&lt;/code&gt; handle describes the loop condition; and &lt;code&gt;body&lt;/code&gt;, its body. The loop resulting from this method will, in each iteration, first evaluate the predicate and then execute its body (if the predicate evaluates to &lt;code&gt;true&lt;/code&gt;). The loop will terminate once the predicate evaluates to &lt;code&gt;false&lt;/code&gt; (the body will not be executed in this case).</source>
          <target state="translated">&lt;code&gt;pred&lt;/code&gt; ハンドルは、ループ条件を記述します。と &lt;code&gt;body&lt;/code&gt; 、その体。このメソッドから生じるループは、各反復で、最初に述語を評価し、次にその本体を実行します（述語が &lt;code&gt;true&lt;/code&gt; と評価された場合）。述語が &lt;code&gt;false&lt;/code&gt; と評価されると、ループは終了します（この場合、本体は実行されません）。</target>
        </trans-unit>
        <trans-unit id="a86ac63e6484dc40818acb31efed1223ef30cbe4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pred&lt;/code&gt; handle describes the loop condition; and &lt;code&gt;body&lt;/code&gt;, its body. The loop resulting from this method will, in each iteration, first execute its body and then evaluate the predicate. The loop will terminate once the predicate evaluates to &lt;code&gt;false&lt;/code&gt; after an execution of the body.</source>
          <target state="translated">&lt;code&gt;pred&lt;/code&gt; ハンドルは、ループ条件を記述します。と &lt;code&gt;body&lt;/code&gt; 、その体。このメソッドから生じるループは、各反復で、最初にその本体を実行し、次に述語を評価します。本文の実行後に述語が &lt;code&gt;false&lt;/code&gt; と評価されると、ループは終了します。</target>
        </trans-unit>
        <trans-unit id="83271b2397fc080adb45b6ed96f5fc2c799338f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pred&lt;/code&gt; handle must not be &lt;code&gt;null&lt;/code&gt;. It must have &lt;code&gt;boolean&lt;/code&gt; as its return type. Its parameter list (either empty or of the form &lt;code&gt;(V A*)&lt;/code&gt;) must be effectively identical to the internal parameter list.</source>
          <target state="translated">&lt;code&gt;pred&lt;/code&gt; ハンドルがあってはならない &lt;code&gt;null&lt;/code&gt; 。戻り &lt;code&gt;boolean&lt;/code&gt; としてブール値が必要です。そのパラメータリスト（空または形式 &lt;code&gt;(V A*)&lt;/code&gt; いずれか）は、内部パラメータリストと実質的に同一である必要があります。</target>
        </trans-unit>
        <trans-unit id="12d2f504fe0c18a15bb945c0612b6e3db966f980" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;preferredSize&lt;/code&gt; is only computed once, subsequent calls to this method just return a cached size.</source>
          <target state="translated">&lt;code&gt;preferredSize&lt;/code&gt; がが一度だけ計算され、このメソッドへの後続の呼び出しは、単にキャッシュされたサイズを返します。</target>
        </trans-unit>
        <trans-unit id="3295278a86db378f96ef38915c5399dfa8f46eb8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prefix&lt;/code&gt; argument must be at least three characters long. It is recommended that the prefix be a short, meaningful string such as &lt;code&gt;&quot;hjb&quot;&lt;/code&gt; or &lt;code&gt;&quot;mail&quot;&lt;/code&gt;. The &lt;code&gt;suffix&lt;/code&gt; argument may be &lt;code&gt;null&lt;/code&gt;, in which case the suffix &lt;code&gt;&quot;.tmp&quot;&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;code&gt;prefix&lt;/code&gt; 引数は、少なくとも3つの文字でなければなりません。プレフィックスは、 &lt;code&gt;&quot;hjb&quot;&lt;/code&gt; や &lt;code&gt;&quot;mail&quot;&lt;/code&gt; などの短く意味のある文字列にすることをお勧めします。 &lt;code&gt;suffix&lt;/code&gt; 引数とすることができる &lt;code&gt;null&lt;/code&gt; サフィックス、その場合には、 &lt;code&gt;&quot;.tmp&quot;&lt;/code&gt; 使用されます。</target>
        </trans-unit>
        <trans-unit id="925230b553f62600c7f8ab6d82a4beb6853e7805" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;premain&lt;/code&gt; method has one of two possible signatures. The JVM first attempts to invoke the following method on the agent class:</source>
          <target state="translated">&lt;code&gt;premain&lt;/code&gt; メソッドは、2つの可能なシグネチャのうちの1つを有します。JVMは最初に、エージェントクラスで次のメソッドを呼び出そうとします。</target>
        </trans-unit>
        <trans-unit id="472d7917be1b3a899af16c5d311e26bdd6f1aec8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;process&lt;/code&gt; argument specifies the &lt;a href=&quot;../../../../java.base/java/lang/process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; object for the taget VM. It may be specified as &lt;code&gt;null&lt;/code&gt;. If the target VM is launched by a &lt;a href=&quot;connect/launchingconnector&quot;&gt;&lt;code&gt;LaunchingConnector&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;process&lt;/code&gt; argument should be specified, otherwise calling &lt;a href=&quot;virtualmachine#process()&quot;&gt;&lt;code&gt;VirtualMachine.process()&lt;/code&gt;&lt;/a&gt; on the created virtual machine will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0521fbe64ec7e5f9ef121124473e0d97a004ca5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;r.width&lt;/code&gt; or &lt;code&gt;r.height&lt;/code&gt; values will be automatically enlarged if either is less than the minimum size as specified by previous call to &lt;code&gt;setMinimumSize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;r.width&lt;/code&gt; 又は &lt;code&gt;r.height&lt;/code&gt; の前回の呼び出しで指定された以下の最小寸法よりもいずれかの場合に値が自動的に拡大される &lt;code&gt;setMinimumSize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5caea50061710cec044d7be43530e50e1eb551a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;radix&lt;/code&gt; argument is valid if it is greater than or equal to &lt;code&gt;MIN_RADIX&lt;/code&gt; and less than or equal to &lt;code&gt;MAX_RADIX&lt;/code&gt;. The &lt;code&gt;digit&lt;/code&gt; argument is valid if &lt;code&gt;0 &amp;lt;= digit &amp;lt; radix&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;radix&lt;/code&gt; それがより大きいかに等しい場合の引数が有効で &lt;code&gt;MIN_RADIX&lt;/code&gt; 未満または等しい &lt;code&gt;MAX_RADIX&lt;/code&gt; 。 &lt;code&gt;digit&lt;/code&gt; 場合は引数が有効です &lt;code&gt;0 &amp;lt;= digit &amp;lt; radix&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b33942ad43fbe9d22cb9d95c4c4908fdaa08301" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;radix&lt;/code&gt; is either smaller than &lt;a href=&quot;character#MIN_RADIX&quot;&gt;&lt;code&gt;Character.MIN_RADIX&lt;/code&gt;&lt;/a&gt; or larger than &lt;a href=&quot;character#MAX_RADIX&quot;&gt;&lt;code&gt;Character.MAX_RADIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;radix&lt;/code&gt; いずれよりも小さい&lt;a href=&quot;character#MIN_RADIX&quot;&gt; &lt;code&gt;Character.MIN_RADIX&lt;/code&gt; &lt;/a&gt;又はより大きい&lt;a href=&quot;character#MAX_RADIX&quot;&gt; &lt;code&gt;Character.MAX_RADIX&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d785142e5ab58037a089cd9e5a386011f0b7e09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ranges&lt;/code&gt; to be given can take one of the following forms:</source>
          <target state="translated">&lt;code&gt;ranges&lt;/code&gt; 与えられるべきは、以下のいずれかの形式をとることができます。</target>
        </trans-unit>
        <trans-unit id="1259bcaaf2e03d5637399a403f2eed4bcb0658f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read(b)&lt;/code&gt; method for class &lt;code&gt;InputStream&lt;/code&gt; has the same effect as:</source>
          <target state="translated">クラス &lt;code&gt;InputStream&lt;/code&gt; の &lt;code&gt;read(b)&lt;/code&gt; メソッドの効果は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="4604e99f767c72aaa96525bf29f68941bb283ab2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read(b)&lt;/code&gt; method has the same effect as:</source>
          <target state="translated">&lt;code&gt;read(b)&lt;/code&gt; 方法と同じ効果を有します。</target>
        </trans-unit>
        <trans-unit id="85d1e68ced47f29a100869a09cd002ed4be72da4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read(b, off, len)&lt;/code&gt; method for class &lt;code&gt;InputStream&lt;/code&gt; simply calls the method &lt;code&gt;read()&lt;/code&gt; repeatedly. If the first such call results in an &lt;code&gt;IOException&lt;/code&gt;, that exception is returned from the call to the &lt;code&gt;read(b,&lt;/code&gt;&lt;code&gt;off,&lt;/code&gt;&lt;code&gt;len)&lt;/code&gt; method. If any subsequent call to &lt;code&gt;read()&lt;/code&gt; results in a &lt;code&gt;IOException&lt;/code&gt;, the exception is caught and treated as if it were end of file; the bytes read up to that point are stored into &lt;code&gt;b&lt;/code&gt; and the number of bytes read before the exception occurred is returned. The default implementation of this method blocks until the requested amount of input data &lt;code&gt;len&lt;/code&gt; has been read, end of file is detected, or an exception is thrown. Subclasses are encouraged to provide a more efficient implementation of this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d053108594714cc2e678b8a8b8bcae476c059c88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read(b,&lt;/code&gt;&lt;code&gt;off,&lt;/code&gt;&lt;code&gt;len)&lt;/code&gt; method for class &lt;code&gt;InputStream&lt;/code&gt; simply calls the method &lt;code&gt;read()&lt;/code&gt; repeatedly. If the first such call results in an &lt;code&gt;IOException&lt;/code&gt;, that exception is returned from the call to the &lt;code&gt;read(b,&lt;/code&gt;&lt;code&gt;off,&lt;/code&gt;&lt;code&gt;len)&lt;/code&gt; method. If any subsequent call to &lt;code&gt;read()&lt;/code&gt; results in a &lt;code&gt;IOException&lt;/code&gt;, the exception is caught and treated as if it were end of file; the bytes read up to that point are stored into &lt;code&gt;b&lt;/code&gt; and the number of bytes read before the exception occurred is returned. The default implementation of this method blocks until the requested amount of input data &lt;code&gt;len&lt;/code&gt; has been read, end of file is detected, or an exception is thrown. Subclasses are encouraged to provide a more efficient implementation of this method.</source>
          <target state="translated">クラス &lt;code&gt;InputStream&lt;/code&gt; の &lt;code&gt;read(b,&lt;/code&gt; &lt;code&gt;off,&lt;/code&gt; &lt;code&gt;len)&lt;/code&gt; メソッドは、メソッド &lt;code&gt;read()&lt;/code&gt; を繰り返し呼び出すだけです。そのような最初の呼び出しの結果が &lt;code&gt;IOException&lt;/code&gt; になる場合、その例外は呼び出しから &lt;code&gt;read(b,&lt;/code&gt; &lt;code&gt;off,&lt;/code&gt; &lt;code&gt;len)&lt;/code&gt; メソッドに返されます。後続の呼び出しがする場合 &lt;code&gt;read()&lt;/code&gt; で結果を &lt;code&gt;IOException&lt;/code&gt; が、例外が捕捉され、それがファイルの終わりであるかのように処理しました。その時点までに読み取られたバイトは &lt;code&gt;b&lt;/code&gt; に格納され、例外が発生する前に読み取られたバイト数が返されます。このメソッドのデフォルト実装は、要求された量の入力データ &lt;code&gt;len&lt;/code&gt; までブロックします。読み取られたか、ファイルの終わりが検出されたか、または例外がスローされました。サブクラスは、このメソッドのより効率的な実装を提供することが推奨されます。</target>
        </trans-unit>
        <trans-unit id="d73e15d99486a3edb623a542384b22544dac32ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;InputStream&lt;/code&gt; calls the &lt;code&gt;read&lt;/code&gt; method of three arguments with the arguments &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;b.length&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;read&lt;/code&gt; の方法 &lt;code&gt;InputStream&lt;/code&gt; 呼び出して &lt;code&gt;read&lt;/code&gt; 3つの引数と引数の方法 &lt;code&gt;b&lt;/code&gt; 、 &lt;code&gt;0&lt;/code&gt; 、および &lt;code&gt;b.length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7efed5a820d4dabed25b8a28bd1df6414d7e77e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;LineNumberInputStream&lt;/code&gt; calls the &lt;code&gt;read&lt;/code&gt; method of the underlying input stream. It checks for carriage returns and newline characters in the input, and modifies the current line number as appropriate. A carriage-return character or a carriage return followed by a newline character are both converted into a single newline character.</source>
          <target state="translated">&lt;code&gt;read&lt;/code&gt; の方法 &lt;code&gt;LineNumberInputStream&lt;/code&gt; は、呼び出して &lt;code&gt;read&lt;/code&gt; 基本となる入力ストリームの方法を。入力のキャリッジリターンと改行文字をチェックし、必要に応じて現在の行番号を変更します。復帰文字または復帰とそれに続く改行文字は、どちらも単一の改行文字に変換されます。</target>
        </trans-unit>
        <trans-unit id="4d12f1e1c60d3ded7ff55ddd8ec9fa42dcbe1312" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;LineNumberInputStream&lt;/code&gt; repeatedly calls the &lt;code&gt;read&lt;/code&gt; method of zero arguments to fill in the byte array.</source>
          <target state="translated">&lt;code&gt;read&lt;/code&gt; の方法 &lt;code&gt;LineNumberInputStream&lt;/code&gt; は、繰り返し呼び出して &lt;code&gt;read&lt;/code&gt; 、バイト配列を埋めるためにゼロ引数の方法を。</target>
        </trans-unit>
        <trans-unit id="9c073aae985b3b46c91c5b9276bb615fd3d6afcd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;SequenceInputStream&lt;/code&gt; tries to read the data from the current substream. If it fails to read any characters because the substream has reached the end of the stream, it calls the &lt;code&gt;close&lt;/code&gt; method of the current substream and begins reading from the next substream.</source>
          <target state="translated">&lt;code&gt;SequenceInputStream&lt;/code&gt; の &lt;code&gt;read&lt;/code&gt; メソッドは、現在のサブストリームからデータを読み取ろうとします。サブストリームがストリームの終わりに達したために文字の読み取りに失敗した場合、現在のサブストリームの &lt;code&gt;close&lt;/code&gt; メソッドを呼び出し、次のサブストリームから読み取りを開始します。</target>
        </trans-unit>
        <trans-unit id="266c4f3bc071054256173e68adbd4a6e7656ec4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;StringBufferInputStream&lt;/code&gt; cannot block. It copies the low eight bits from the characters in this input stream's buffer into the byte array argument.</source>
          <target state="translated">&lt;code&gt;StringBufferInputStream&lt;/code&gt; の &lt;code&gt;read&lt;/code&gt; メソッドはブロックできません。この入力ストリームのバッファ内の文字から下位8ビットをバイト配列引数にコピーします。</target>
        </trans-unit>
        <trans-unit id="e61745f20485b6632a27794087bfb013bec50ba7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of &lt;code&gt;StringBufferInputStream&lt;/code&gt; cannot block. It returns the low eight bits of the next character in this input stream's buffer.</source>
          <target state="translated">&lt;code&gt;StringBufferInputStream&lt;/code&gt; の &lt;code&gt;read&lt;/code&gt; メソッドはブロックできません。この入力ストリームのバッファにある次の文字の下位8ビットを返します。</target>
        </trans-unit>
        <trans-unit id="4aaed4854c67e469816ea074297444b594e5943c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of the &lt;code&gt;InputStream&lt;/code&gt; may throw the &lt;a href=&quot;../../../java.base/java/io/interruptedioexception&quot;&gt;&lt;code&gt;InterruptedIOException&lt;/code&gt;&lt;/a&gt; to signal the user canceled the input. The currently running snippet will be automatically &lt;a href=&quot;jshell#stop()&quot;&gt;&lt;code&gt;stopped&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68abbad5ba6fb28f94eaadf9085c6dda28742eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; method of the underlying stream returns &lt;code&gt;-1&lt;/code&gt;, indicating end-of-file, or</source>
          <target state="translated">基本となるストリームの &lt;code&gt;read&lt;/code&gt; メソッドは &lt;code&gt;-1&lt;/code&gt; を返し、ファイルの終わりを示します。</target>
        </trans-unit>
        <trans-unit id="3c7f1342e13b19c7f98cefc6efd106f8e231e650" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; methods of the resulting stream will throw an &lt;a href=&quot;illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt; if invoked while the underlying channel is in non-blocking mode. The stream will not be buffered, and it will not support the &lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../io/inputstream#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; methods. The stream will be safe for access by multiple concurrent threads. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">結果のストリームの &lt;code&gt;read&lt;/code&gt; メソッドは、基になるチャネルが非ブロッキングモードのときに呼び出されると、&lt;a href=&quot;illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt;をスローします。ストリームはバッファリングされず、&lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/inputstream#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;メソッドをサポートしません。ストリームは、複数の同時スレッドによるアクセスに対して安全になります。ストリームを閉じると、チャネルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="6ff4f563e5b69d4b6268d50e4aa9d51aa5725103" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; methods of the resulting stream will throw an &lt;a href=&quot;illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt; if invoked while the underlying channel is in non-blocking mode. The stream will not be buffered, and it will not support the &lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../io/inputstream#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; methods. The stream will be safe for access by multiple concurrent threads. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">基になるチャネルが非ブロッキングモードのときに呼び出された場合、結果のストリームの &lt;code&gt;read&lt;/code&gt; メソッドは&lt;a href=&quot;illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt;をスローします。ストリームはバッファリングされず、&lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/inputstream#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;メソッドをサポートしません。ストリームは、複数の同時スレッドによるアクセスに対して安全になります。ストリームを閉じると、チャネルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="3b7ea7159daa93e13abc58f5ee72d1aa9624ff2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read&lt;/code&gt; methods of the returned &lt;code&gt;InputStream&lt;/code&gt; will throw &lt;code&gt;IOException&lt;/code&gt; when reading bytes that cannot be decoded.</source>
          <target state="translated">デコードできないバイトを読み取る &lt;code&gt;IOException&lt;/code&gt; 、返された &lt;code&gt;InputStream&lt;/code&gt; の &lt;code&gt;read&lt;/code&gt; メソッドはIOExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="05a4ee599465096efb07afcd435e0618463168e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readData&lt;/code&gt; method adds rows to the caller. It can be implemented in a wide variety of ways and can even populate the caller with rows from a nonrelational data source. In general, a reader may invoke any of the rowset's methods, with one exception. Calling the method &lt;code&gt;execute&lt;/code&gt; will cause an &lt;code&gt;SQLException&lt;/code&gt; to be thrown because &lt;code&gt;execute&lt;/code&gt; may not be called recursively. Also, when a reader invokes &lt;code&gt;RowSet&lt;/code&gt; methods, no listeners are notified; that is, no &lt;code&gt;RowSetEvent&lt;/code&gt; objects are generated and no &lt;code&gt;RowSetListener&lt;/code&gt; methods are invoked. This is true because listeners are already being notified by the method &lt;code&gt;execute&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;readData&lt;/code&gt; メソッドは、呼び出し元に行を追加します。さまざまな方法で実装でき、非リレーショナルデータソースからの行を呼び出し元に入力することもできます。一般に、リーダーは、1つの例外を除いて、行セットの任意のメソッドを呼び出すことができます。メソッドが呼び出し &lt;code&gt;execute&lt;/code&gt; 原因となります &lt;code&gt;SQLException&lt;/code&gt; がためにスローされるように &lt;code&gt;execute&lt;/code&gt; 再帰的に呼び出されないことがあります。また、リーダーが &lt;code&gt;RowSet&lt;/code&gt; メソッドを呼び出すと、リスナーは通知されません。つまり、 &lt;code&gt;RowSetEvent&lt;/code&gt; オブジェクトは生成されず、 &lt;code&gt;RowSetListener&lt;/code&gt; メソッドは呼び出されません。これは、リスナーがメソッド &lt;code&gt;execute&lt;/code&gt; によってすでに通知されているためです。</target>
        </trans-unit>
        <trans-unit id="b52f6c80e4a3c11df2890b54a5a8b3b1218aeabd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readlimit&lt;/code&gt; argument tells this input stream to allow that many bytes to be read before the mark position gets invalidated.</source>
          <target state="translated">&lt;code&gt;readlimit&lt;/code&gt; の引数は、マーク位置が無効になる前に多くのバイトを読み取ることができるようにすることを、この入力ストリームを伝えます。</target>
        </trans-unit>
        <trans-unit id="f523a2bdf73035ee44a575de3e5dff08d7683039" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readlimit&lt;/code&gt; arguments tells this input stream to allow that many bytes to be read before the mark position gets invalidated.</source>
          <target state="translated">&lt;code&gt;readlimit&lt;/code&gt; の引数は、マーク位置が無効になる前に多くのバイトを読み取ることができるようにすることを、この入力ストリームを伝えます。</target>
        </trans-unit>
        <trans-unit id="26aa2e19c94981b7af3edb0fd924e85788e560ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ready&lt;/code&gt; method of the underlying stream returns &lt;code&gt;false&lt;/code&gt;, indicating that further input requests would block.</source>
          <target state="translated">基になるストリームの &lt;code&gt;ready&lt;/code&gt; メソッドは &lt;code&gt;false&lt;/code&gt; を返し、それ以上の入力要求がブロックされることを示します。</target>
        </trans-unit>
        <trans-unit id="82057f4ffe730acc914f906991a8da694e9b715d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reducing()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, downstream of &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. To perform a simple map-reduce on a stream, use &lt;a href=&quot;stream#map(java.util.function.Function)&quot;&gt;&lt;code&gt;Stream.map(Function)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stream#reduce(T,java.util.function.BinaryOperator)&quot;&gt;&lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;reducing()&lt;/code&gt; の下流にマルチレベルの低減に使用される場合、コレクターは最も有用である &lt;code&gt;groupingBy&lt;/code&gt; 又は &lt;code&gt;partitioningBy&lt;/code&gt; 。ストリームで単純なmap-reduceを実行するには、&lt;a href=&quot;stream#map(java.util.function.Function)&quot;&gt; &lt;code&gt;Stream.map(Function)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;stream#reduce(T,java.util.function.BinaryOperator)&quot;&gt; &lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt; &lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="165873d7f5551dc1377b152568842b2aacddf487" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reducing()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, downstream of &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. To perform a simple map-reduce on a stream, use &lt;a href=&quot;stream#map-java.util.function.Function-&quot;&gt;&lt;code&gt;Stream.map(Function)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stream#reduce-T-java.util.function.BinaryOperator-&quot;&gt;&lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;reducing()&lt;/code&gt; の下流にマルチレベルの低減に使用される場合、コレクターは最も有用である &lt;code&gt;groupingBy&lt;/code&gt; 又は &lt;code&gt;partitioningBy&lt;/code&gt; 。ストリームに対して単純なmap-reduceを実行するには、&lt;a href=&quot;stream#map-java.util.function.Function-&quot;&gt; &lt;code&gt;Stream.map(Function)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;stream#reduce-T-java.util.function.BinaryOperator-&quot;&gt; &lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt; &lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="b8dd7b9000da8c4a38e9a5b07cb2af0e9bc54239" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reducing()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, downstream of &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. To perform a simple reduction on a stream, use &lt;a href=&quot;stream#reduce(T,java.util.function.BinaryOperator)&quot;&gt;&lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt;&lt;/a&gt;} instead.</source>
          <target state="translated">&lt;code&gt;reducing()&lt;/code&gt; の下流にマルチレベルの低減に使用される場合、コレクターは最も有用である &lt;code&gt;groupingBy&lt;/code&gt; 又は &lt;code&gt;partitioningBy&lt;/code&gt; 。ストリームで単純なリダクションを実行するには、代わりに&lt;a href=&quot;stream#reduce(T,java.util.function.BinaryOperator)&quot;&gt; &lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt; &lt;/a&gt; }を使用します。</target>
        </trans-unit>
        <trans-unit id="1031f383b6493cee2618b8a613faaaa7b50cece7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reducing()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, downstream of &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. To perform a simple reduction on a stream, use &lt;a href=&quot;stream#reduce(java.util.function.BinaryOperator)&quot;&gt;&lt;code&gt;Stream.reduce(BinaryOperator)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;reducing()&lt;/code&gt; の下流にマルチレベルの低減に使用される場合、コレクターは最も有用である &lt;code&gt;groupingBy&lt;/code&gt; 又は &lt;code&gt;partitioningBy&lt;/code&gt; 。ストリームで単純なリダクションを実行するには、代わりに&lt;a href=&quot;stream#reduce(java.util.function.BinaryOperator)&quot;&gt; &lt;code&gt;Stream.reduce(BinaryOperator)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="7e64fcbf48d32ed9f489fe7ed817a63867533729" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reducing()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, downstream of &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. To perform a simple reduction on a stream, use &lt;a href=&quot;stream#reduce-T-java.util.function.BinaryOperator-&quot;&gt;&lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt;&lt;/a&gt;} instead.</source>
          <target state="translated">&lt;code&gt;reducing()&lt;/code&gt; の下流にマルチレベルの低減に使用される場合、コレクターは最も有用である &lt;code&gt;groupingBy&lt;/code&gt; 又は &lt;code&gt;partitioningBy&lt;/code&gt; 。ストリームに対して単純な削減を実行するには、代わりに&lt;a href=&quot;stream#reduce-T-java.util.function.BinaryOperator-&quot;&gt; &lt;code&gt;Stream.reduce(Object, BinaryOperator)&lt;/code&gt; &lt;/a&gt; }を使用します。</target>
        </trans-unit>
        <trans-unit id="331f2b86728595fcc490eed59b6a8eb8cea11e3d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reducing()&lt;/code&gt; collectors are most useful when used in a multi-level reduction, downstream of &lt;code&gt;groupingBy&lt;/code&gt; or &lt;code&gt;partitioningBy&lt;/code&gt;. To perform a simple reduction on a stream, use &lt;a href=&quot;stream#reduce-java.util.function.BinaryOperator-&quot;&gt;&lt;code&gt;Stream.reduce(BinaryOperator)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;reducing()&lt;/code&gt; の下流にマルチレベルの低減に使用される場合、コレクターは最も有用である &lt;code&gt;groupingBy&lt;/code&gt; 又は &lt;code&gt;partitioningBy&lt;/code&gt; 。ストリームで単純な削減を実行するには、代わりに&lt;a href=&quot;stream#reduce-java.util.function.BinaryOperator-&quot;&gt; &lt;code&gt;Stream.reduce(BinaryOperator)&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="b6e4a1cfb3d954ef8dc93a66017c84659865340e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;refresh&lt;/code&gt; method causes the policy object to refresh/reload its data. This operation is implementation-dependent. For example, if the policy object stores its data in configuration files, calling &lt;code&gt;refresh&lt;/code&gt; will cause it to re-read the configuration policy files. If a refresh operation is not supported, this method does nothing. Note that refreshed policy may not have an effect on classes in a particular ProtectionDomain. This is dependent on the Policy provider's implementation of the &lt;code&gt;implies&lt;/code&gt; method and its PermissionCollection caching strategy.</source>
          <target state="translated">&lt;code&gt;refresh&lt;/code&gt; 方法は、リフレッシュにポリシーオブジェクトを起こし/そのデータをリロードします。この操作は実装に依存します。たとえば、ポリシーオブジェクトがデータを構成ファイルに格納している場合、 &lt;code&gt;refresh&lt;/code&gt; を呼び出すと、構成ポリシーファイルが再度読み込まれます。更新操作がサポートされていない場合、このメソッドは何もしません。更新されたポリシーは、特定のProtectionDomainのクラスに影響を与えない場合があることに注意してください。これは、ポリシープロバイダーの &lt;code&gt;implies&lt;/code&gt; メソッドの実装とそのPermissionCollectionキャッシング戦略に依存します。</target>
        </trans-unit>
        <trans-unit id="e2cb1c75917513fd66c67c74580c51f242c6ba51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;refreshRow&lt;/code&gt; method provides a way for an application to explicitly tell the JDBC driver to refetch a row(s) from the database. An application may want to call &lt;code&gt;refreshRow&lt;/code&gt; when caching or prefetching is being done by the JDBC driver to fetch the latest value of a row from the database. The JDBC driver may actually refresh multiple rows at once if the fetch size is greater than one.</source>
          <target state="translated">&lt;code&gt;refreshRow&lt;/code&gt; の方法は、アプリケーションが明示的にデータベースから行を再フェッチするためにJDBCドライバに指示するための方法を提供します。アプリケーションは、JDBCドライバーによってキャッシュまたはプリフェッチが実行されているときに &lt;code&gt;refreshRow&lt;/code&gt; を呼び出して、データベースから行の最新の値をフェッチする場合があります。フェッチサイズが1より大きい場合、JDBCドライバーは実際には一度に複数の行を更新する場合があります。</target>
        </trans-unit>
        <trans-unit id="b92536f2a5a0e1a3b6f9a0f2c5c546403063f5bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;registerMBean&lt;/code&gt; method is simpler for local use, but cannot be used remotely. The &lt;code&gt;createMBean&lt;/code&gt; method can be used remotely, but sometimes requires attention to class loading issues.</source>
          <target state="translated">&lt;code&gt;registerMBean&lt;/code&gt; メソッドは、ローカルでの使用のために簡単ですが、リモートで使用することはできません。 &lt;code&gt;createMBean&lt;/code&gt; メソッドは、リモートで使用され、時にはクラスローディングの問題に注意を要することができます。</target>
        </trans-unit>
        <trans-unit id="3bd964509b0c0b7b2aff54193499f79341906bf5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;registerObject&lt;/code&gt; method is used to register an activation descriptor, &lt;code&gt;desc&lt;/code&gt;, and obtain an activation identifier for a activatable remote object.</source>
          <target state="translated">&lt;code&gt;registerObject&lt;/code&gt; の方法は、起動記述子、登録するために使用される &lt;code&gt;desc&lt;/code&gt; 、および起動可能なリモートオブジェクトの起動識別子を取得します。</target>
        </trans-unit>
        <trans-unit id="0648dc19ee55d0e590d0f1e083a26887e631abbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;registerObject&lt;/code&gt; method is used to register an activation descriptor, &lt;code&gt;desc&lt;/code&gt;, and obtain an activation identifier for a activatable remote object. The &lt;code&gt;ActivationSystem&lt;/code&gt; creates an &lt;code&gt;ActivationID&lt;/code&gt; (a activation identifier) for the object specified by the descriptor, &lt;code&gt;desc&lt;/code&gt;, and records, in stable storage, the activation descriptor and its associated identifier for later use. When the &lt;code&gt;Activator&lt;/code&gt; receives an &lt;code&gt;activate&lt;/code&gt; request for a specific identifier, it looks up the activation descriptor (registered previously) for the specified identifier and uses that information to activate the object.</source>
          <target state="translated">&lt;code&gt;registerObject&lt;/code&gt; の方法は、起動記述子、登録するために使用される &lt;code&gt;desc&lt;/code&gt; 、および起動可能なリモートオブジェクトの起動識別子を取得します。 &lt;code&gt;ActivationSystem&lt;/code&gt; は、作成 &lt;code&gt;ActivationID&lt;/code&gt; 記述子によって指定されたオブジェクトのために（起動識別子）を &lt;code&gt;desc&lt;/code&gt; 、安定したストレージには、レコード起動記述子と後で使用するためにその関連識別子。ときに &lt;code&gt;Activator&lt;/code&gt; 受信 &lt;code&gt;activate&lt;/code&gt; 特定識別子の要求を、その情報がオブジェクトをアクティブにすることを指定された識別子および使用のために（以前に登録された）起動記述子を検索します。</target>
        </trans-unit>
        <trans-unit id="d5b769a6261bcf9c925196e481e33f743eb9161c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replaceEditor&lt;/code&gt; method is called when the spinners editor is changed with &lt;code&gt;JSpinner.setEditor&lt;/code&gt;. If you've overriden this method, then you'll probably want to override &lt;code&gt;replaceEditor&lt;/code&gt; as well.</source>
          <target state="translated">&lt;code&gt;replaceEditor&lt;/code&gt; のスピナーエディタがで変更されたときにメソッドが呼び出され &lt;code&gt;JSpinner.setEditor&lt;/code&gt; 。このメソッドをオーバーライドした場合は、 &lt;code&gt;replaceEditor&lt;/code&gt; もオーバーライドすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="b2bff7fa0a0c8c4fa4c945d1cc03fe4bb97f5383" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;required&lt;/code&gt; field is &lt;code&gt;true&lt;/code&gt; if a value must be supplied for this property during &lt;code&gt;Driver.connect&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;required&lt;/code&gt; フィールドがあり &lt;code&gt;true&lt;/code&gt; 値が中に、このプロパティのために供給しなければならない場合 &lt;code&gt;Driver.connect&lt;/code&gt; と &lt;code&gt;false&lt;/code&gt; そう。</target>
        </trans-unit>
        <trans-unit id="dec43624de062d1e7493f56cb68ff2515b4d245d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reset&lt;/code&gt; method of &lt;code&gt;LineNumberInputStream&lt;/code&gt; resets the line number to be the line number at the time the &lt;code&gt;mark&lt;/code&gt; method was called, and then calls the &lt;code&gt;reset&lt;/code&gt; method of the underlying input stream.</source>
          <target state="translated">&lt;code&gt;LineNumberInputStream&lt;/code&gt; の &lt;code&gt;reset&lt;/code&gt; メソッドは、行番号を &lt;code&gt;mark&lt;/code&gt; メソッドが呼び出されたときの行番号に &lt;code&gt;reset&lt;/code&gt; から、基になる入力ストリームのresetメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="bcb2620e18cfc65d493f7d3aa17132a5ca731483" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;root&lt;/code&gt; node of the &lt;code&gt;TreeWalker&lt;/code&gt;, as specified when it was created.</source>
          <target state="translated">作成時に指定された &lt;code&gt;TreeWalker&lt;/code&gt; の &lt;code&gt;root&lt;/code&gt; ノード。</target>
        </trans-unit>
        <trans-unit id="ef077420b03ffbe4cf9c89bd8f72839c46602b82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; components should be floating-point values between zero and one (numbers in the range 0.0-1.0). The &lt;code&gt;h&lt;/code&gt; component can be any floating-point number. The floor of this number is subtracted from it to create a fraction between 0 and 1. This fractional number is then multiplied by 360 to produce the hue angle in the HSB color model.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; および &lt;code&gt;b&lt;/code&gt; 成分は、0と1の間の浮動小数点値（0.0〜1.0の範囲内の数字）であるべきです。 &lt;code&gt;h&lt;/code&gt; コンポーネントは、任意の浮動小数点数であることができます。この数値のフロアを減算して、0と1の間の分数を作成します。次に、この小数に360を掛けて、HSBカラーモデルの色相角度を生成します。</target>
        </trans-unit>
        <trans-unit id="e6920483d1b5d5fdadee6caa3bd9747d28274c80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;saturation&lt;/code&gt; and &lt;code&gt;brightness&lt;/code&gt; components should be floating-point values between zero and one (numbers in the range 0.0-1.0). The &lt;code&gt;hue&lt;/code&gt; component can be any floating-point number. The floor of this number is subtracted from it to create a fraction between 0 and 1. This fractional number is then multiplied by 360 to produce the hue angle in the HSB color model.</source>
          <target state="translated">&lt;code&gt;saturation&lt;/code&gt; と &lt;code&gt;brightness&lt;/code&gt; 成分は0と1の間の浮動小数点値（0.0〜1.0の範囲内の数字）であるべきです。 &lt;code&gt;hue&lt;/code&gt; 成分は、任意の浮動小数点数であることができます。この数値のフロアを減算して、0と1の間の分数を作成します。次に、この小数に360を掛けて、HSBカラーモデルの色相角度を生成します。</target>
        </trans-unit>
        <trans-unit id="9e487af727a443b2fc09683914bf955d5aed101d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;schedule&lt;/code&gt; methods create tasks with various delays and return a task object that can be used to cancel or check execution. The &lt;code&gt;scheduleAtFixedRate&lt;/code&gt; and &lt;code&gt;scheduleWithFixedDelay&lt;/code&gt; methods create and execute tasks that run periodically until cancelled.</source>
          <target state="translated">&lt;code&gt;schedule&lt;/code&gt; 方法は、種々の遅延でタスクを作成し、実行をキャンセルするか確認するために使用することができるタスクオブジェクトを返します。 &lt;code&gt;scheduleAtFixedRate&lt;/code&gt; と &lt;code&gt;scheduleWithFixedDelay&lt;/code&gt; 方法が取り消されるまで定期的に実行タスクを作成して実行します。</target>
        </trans-unit>
        <trans-unit id="08c9e29dc36b0482fbc29013fb24d1e073d335c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scrollUnderway&lt;/code&gt; flag is used for components like &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scrollUnderway&lt;/code&gt; のフラグのような構成要素のために使用される &lt;code&gt;JList&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d1c017ef96a248d10e61c88fe2cbb2851eb303e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scrollUnderway&lt;/code&gt; flag is used for components like &lt;code&gt;JList&lt;/code&gt;. When the downarrow key is pressed on a &lt;code&gt;JList&lt;/code&gt; and the selected cell is the last in the list, the &lt;code&gt;scrollpane&lt;/code&gt; autoscrolls. Here, the old selected cell needs repainting and so we need a flag to make the viewport do the optimized painting only when there is an explicit call to &lt;code&gt;setViewPosition(Point)&lt;/code&gt;. When &lt;code&gt;setBounds&lt;/code&gt; is called through other routes, the flag is off and the view repaints normally. Another approach would be to remove this from the &lt;code&gt;JViewport&lt;/code&gt; class and have the &lt;code&gt;JList&lt;/code&gt; manage this case by using &lt;code&gt;setBackingStoreEnabled&lt;/code&gt;. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scrollUnderway&lt;/code&gt; のフラグのような構成要素のために使用される &lt;code&gt;JList&lt;/code&gt; 。 &lt;code&gt;JList&lt;/code&gt; で下矢印キーが押され、選択したセルがリストの最後になると、 &lt;code&gt;scrollpane&lt;/code&gt; ペインが自動スクロールします。ここでは、選択した古いセルを再描画する必要があるため、 &lt;code&gt;setViewPosition(Point)&lt;/code&gt; が明示的に呼び出された場合にのみ、ビューポートに最適化された描画を実行させるためのフラグが必要です。場合 &lt;code&gt;setBounds&lt;/code&gt; が他の経路を介して呼び出され、フラグがオフであり、ビューは、通常、再描画します。別のアプローチはからこれを削除するだろう &lt;code&gt;JViewport&lt;/code&gt; クラスと持って &lt;code&gt;JList&lt;/code&gt; のは、使用してこのケースを管理 &lt;code&gt;setBackingStoreEnabled&lt;/code&gt; 。デフォルトは &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="275b9770ecb642dad5739bf9b860015b219e5bc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;seekForwardOnly&lt;/code&gt; parameter controls whether the value returned by &lt;code&gt;getMinIndex&lt;/code&gt; will be increased as each image (or thumbnail, or image metadata) is read. If &lt;code&gt;seekForwardOnly&lt;/code&gt; is true, then a call to &lt;code&gt;read(index)&lt;/code&gt; will throw an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; if &lt;code&gt;index &amp;lt; this.minIndex&lt;/code&gt;; otherwise, the value of &lt;code&gt;minIndex&lt;/code&gt; will be set to &lt;code&gt;index&lt;/code&gt;. If &lt;code&gt;seekForwardOnly&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the value of &lt;code&gt;minIndex&lt;/code&gt; will remain 0 regardless of any read operations.</source>
          <target state="translated">&lt;code&gt;seekForwardOnly&lt;/code&gt; によって返される値か否かのパラメータを制御 &lt;code&gt;getMinIndex&lt;/code&gt; は、各画像（またはサムネイル、又は画像メタデータ）が読み出されるように増加するであろう。場合 &lt;code&gt;seekForwardOnly&lt;/code&gt; が trueの場合、その後の呼び出し &lt;code&gt;read(index)&lt;/code&gt; スローされます &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; 場合は &lt;code&gt;index &amp;lt; this.minIndex&lt;/code&gt; 。それ以外の場合、 &lt;code&gt;minIndex&lt;/code&gt; の値は &lt;code&gt;index&lt;/code&gt; に設定されます。 &lt;code&gt;seekForwardOnly&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合、読み取り操作に関係なく、 &lt;code&gt;minIndex&lt;/code&gt; の値は0 のままになります。</target>
        </trans-unit>
        <trans-unit id="d1482f0d46f1a2acb9dc1233fcf5f91d87996d1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sendClose&lt;/code&gt; method does not close this WebSocket's input. It merely closes this WebSocket's output by sending a Close message. To enforce closing the input, invoke the &lt;code&gt;abort&lt;/code&gt; method. Here is an example of an application that sends a Close message, and then starts a timer. Once no data has been received within the specified timeout, the timer goes off and the alarm aborts &lt;code&gt;WebSocket&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;sendClose&lt;/code&gt; メソッドは、こののWebSocketの入力閉じません。Closeメッセージを送信して、このWebSocketの出力を閉じるだけです。入力を強制的に閉じるには、 &lt;code&gt;abort&lt;/code&gt; メソッドを呼び出します。これは、Closeメッセージを送信してからタイマーを開始するアプリケーションの例です。指定されたタイムアウト内にデータが受信されなくなると、タイマーがオフになり、アラームが &lt;code&gt;WebSocket&lt;/code&gt; を中止します。</target>
        </trans-unit>
        <trans-unit id="b372bf4225287956fe3cfd675126ff074ca47b28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setCharacterAttributes()&lt;/code&gt; method takes four arguments . The first and second arguments identify a region in the Document that is to be changed. The third argument specifies the new attributes (as an AttributeSet), and the fourth argument determines if the new attributes should be added to the existing attributes (a value of false) or if the character Element should replace its existing attributes with the new attributes (a value of true).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b89c456d2b4bd25e583ec6cc1aa01d8496f3f6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setPaintMode&lt;/code&gt; method is implemented as a convenience method to set the default &lt;code&gt;Composite&lt;/code&gt;, equivalent to &lt;code&gt;setComposite(new AlphaComposite.SrcOver)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setPaintMode&lt;/code&gt; の方法は、デフォルト設定する便利な方法として実装されている &lt;code&gt;Composite&lt;/code&gt; に相当する、 &lt;code&gt;setComposite(new AlphaComposite.SrcOver)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="43b250cc63cb491b2b4915e37282c63d786eef72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setSize&lt;/code&gt; method should be prepared to be called a number of times (i.e. It may be called even if the size didn't change). The &lt;code&gt;setSize&lt;/code&gt; method is generally called to make sure the View layout is complete prior to trying to perform an operation on it that requires an up-to-date layout. A view's size should &lt;em&gt;always&lt;/em&gt; be set to a value within the minimum and maximum span specified by that view. Additionally, the view must always call the &lt;code&gt;preferenceChanged&lt;/code&gt; method on the parent if it has changed the values for the layout it would like, and expects the parent to honor. The parent View is not required to recognize a change until the &lt;code&gt;preferenceChanged&lt;/code&gt; has been sent. This allows parent View implementations to cache the child requirements if desired. The calling sequence looks something like the following:</source>
          <target state="translated">&lt;code&gt;setSize&lt;/code&gt; の方法は、回数（サイズが変更されなかった場合でも、それが呼ばれるIE）と呼ばれるように準備する必要があります。 &lt;code&gt;setSize&lt;/code&gt; の方法は、一般的に確認してくださいビューのレイアウトは前に最新のレイアウトを必要とし、それに対する操作を実行しようとしているに完全であることを確認するために呼び出されます。ビューのサイズは、&lt;em&gt;常に&lt;/em&gt;そのビューで指定された最小および最大スパン内の値に設定する必要があります。さらに、ビューが &lt;code&gt;preferenceChanged&lt;/code&gt; するレイアウトの値を変更した場合、ビューは常に親のpreferenceChangedメソッドを呼び出す必要があり、親がそれを尊重することを期待します。親ビューは、 &lt;code&gt;preferenceChanged&lt;/code&gt; まで変更を認識する必要はありません。送られた。これにより、親Viewの実装は、必要に応じて子の要件をキャッシュできます。呼び出しシーケンスは次のようになります。</target>
        </trans-unit>
        <trans-unit id="146eb04c811039b6ff998f453c63a8e8d4185f58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setValue(String)&lt;/code&gt;, &lt;code&gt;getValue()&lt;/code&gt; and &lt;code&gt;combine(Set&amp;lt;String&amp;gt;)&lt;/code&gt; methods are invoked when a setting value changes, which typically happens when a recording is started or stopped. The &lt;code&gt;combine(Set&amp;lt;String&amp;gt;)&lt;/code&gt; method is invoked to resolve what value to use when multiple recordings are running at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f025b3d9979c63bfda933d9c9717fb99aa29ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setXORMode(Color xorcolor)&lt;/code&gt; method is implemented as a convenience method to set a special &lt;code&gt;Composite&lt;/code&gt; object that ignores the &lt;code&gt;Alpha&lt;/code&gt; components of source colors and sets the destination color to the value:</source>
          <target state="translated">&lt;code&gt;setXORMode(Color xorcolor)&lt;/code&gt; 方法は、特別に設定する便利な方法として実装されている &lt;code&gt;Composite&lt;/code&gt; 無視オブジェクト &lt;code&gt;Alpha&lt;/code&gt; ソース色の成分をその値に目標色を設定します。</target>
        </trans-unit>
        <trans-unit id="e4d9578b126fe071444650921e8afdae2dde1b52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shape&lt;/code&gt; argument may have the following values:</source>
          <target state="translated">&lt;code&gt;shape&lt;/code&gt; 引数には、次の値を持っていることがあります。</target>
        </trans-unit>
        <trans-unit id="f788aeac802ff7904bf9412e16d01319cb050308" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sign&lt;/code&gt; method of &lt;code&gt;XMLSignature&lt;/code&gt;s produced by &lt;code&gt;XMLSignatureFactory&lt;/code&gt; MUST support &lt;code&gt;DOMSignContext&lt;/code&gt; types and the &lt;code&gt;validate&lt;/code&gt; method MUST support &lt;code&gt;DOMValidateContext&lt;/code&gt; types. This requirement also applies to the &lt;code&gt;validate&lt;/code&gt; method of &lt;code&gt;
 SignatureValue&lt;/code&gt; and the &lt;code&gt;validate&lt;/code&gt; method of &lt;code&gt;Reference&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf825e34076ebaf2f0b03cf88441dbd2884319b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;signature&lt;/code&gt; array parameter is internally copied, so that subsequent changes to the array referenced by &lt;code&gt;
 signature&lt;/code&gt; have no effect on this instance.</source>
          <target state="translated">&lt;code&gt;signature&lt;/code&gt; 配列パラメータは、内部で参照配列に対する後続の変更ように、コピーされ &lt;code&gt; signature&lt;/code&gt; このインスタンスに影響を及ぼしません。</target>
        </trans-unit>
        <trans-unit id="76ca7bc87a7a645eee5be869e5f2afee6e7546a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;signature&lt;/code&gt; array parameter is internally copied, so that subsequent changes to the array referenced by &lt;code&gt;signature&lt;/code&gt; have no effect on this instance.</source>
          <target state="translated">&lt;code&gt;signature&lt;/code&gt; 配列パラメータは、内部で参照配列に対する後続の変更ように、コピーされ &lt;code&gt;signature&lt;/code&gt; このインスタンスに影響を及ぼしません。</target>
        </trans-unit>
        <trans-unit id="4ab62abd8dea24de7feab17efb96ab240af801b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt;, &lt;code&gt;isEmpty&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;iterator&lt;/code&gt;, and &lt;code&gt;listIterator&lt;/code&gt; operations run in constant time. The &lt;code&gt;add&lt;/code&gt; operation runs in</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 、 &lt;code&gt;isEmpty&lt;/code&gt; 、 &lt;code&gt;get&lt;/code&gt; 、 &lt;code&gt;set&lt;/code&gt; 、 &lt;code&gt;iterator&lt;/code&gt; 、および &lt;code&gt;listIterator&lt;/code&gt; 一定の時間で実行されます操作。 &lt;code&gt;add&lt;/code&gt; 操作が実行される中</target>
        </trans-unit>
        <trans-unit id="9a1118dd39358bc6d8e191accb546fe46ebdd2b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; method implementation of this class creates a byte array and then repeatedly reads into it until &lt;code&gt;n&lt;/code&gt; bytes have been read or the end of the stream has been reached. Subclasses are encouraged to provide a more efficient implementation of this method. For instance, the implementation may depend on the ability to seek.</source>
          <target state="translated">このクラスの &lt;code&gt;skip&lt;/code&gt; メソッド実装は、バイト配列を作成し、 &lt;code&gt;n&lt;/code&gt; バイトが読み取られるか、ストリームの終わりに達するまで、繰り返し読み取ります。サブクラスは、このメソッドのより効率的な実装を提供することをお勧めします。たとえば、実装はシークする能力に依存する場合があります。</target>
        </trans-unit>
        <trans-unit id="a4a7eb3594e941fdb97e903210733646c272b12a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; method may, for a variety of reasons, end up skipping over some smaller number of bytes, possibly &lt;code&gt;0&lt;/code&gt;. If &lt;code&gt;n&lt;/code&gt; is negative, the method will try to skip backwards. In case the backing file does not support backward skip at its current position, an &lt;code&gt;IOException&lt;/code&gt; is thrown. The actual number of bytes skipped is returned. If it skips forwards, it returns a positive value. If it skips backwards, it returns a negative value.</source>
          <target state="translated">&lt;code&gt;skip&lt;/code&gt; 方法は、様々な理由で、バイトのいくつかのより少ない数、おそらくをスキップ終わる可能性が &lt;code&gt;0&lt;/code&gt; 。場合は &lt;code&gt;n&lt;/code&gt; 負の場合、この方法は、後方スキップしようとします。バッキングファイルが現在の位置で逆方向スキップをサポートしていない &lt;code&gt;IOException&lt;/code&gt; 、IOExceptionがスローされます。スキップされた実際のバイト数が返されます。前方にスキップすると、正の値を返します。後方にスキップすると、負の値を返します。</target>
        </trans-unit>
        <trans-unit id="66c38c1c54f362c964143fb2033b1ddc5a7e0a28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; method of &lt;code&gt;LineNumberInputStream&lt;/code&gt; creates a byte array and then repeatedly reads into it until &lt;code&gt;n&lt;/code&gt; bytes have been read or the end of the stream has been reached.</source>
          <target state="translated">&lt;code&gt;LineNumberInputStream&lt;/code&gt; の &lt;code&gt;skip&lt;/code&gt; メソッドは、バイト配列を作成し、 &lt;code&gt;n&lt;/code&gt; バイトが読み取られるまで、またはストリームの終わりに達するまで、バイト配列を繰り返し読み取ります。</target>
        </trans-unit>
        <trans-unit id="6a923526e0376b2377270933dbe7190607b0ff31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; method of &lt;code&gt;PushbackInputStream&lt;/code&gt; first skips over the bytes in the pushback buffer, if any. It then calls the &lt;code&gt;skip&lt;/code&gt; method of the underlying input stream if more bytes need to be skipped. The actual number of bytes skipped is returned.</source>
          <target state="translated">&lt;code&gt;PushbackInputStream&lt;/code&gt; の &lt;code&gt;skip&lt;/code&gt; メソッドは、最初にプッシュバックバッファー内のバイトがあればそれをスキップします。次に、さらにバイトをスキップする必要がある場合は、基になる入力ストリームの &lt;code&gt;skip&lt;/code&gt; メソッドを呼び出します。スキップされた実際のバイト数が返されます。</target>
        </trans-unit>
        <trans-unit id="c16533536dab6e2f9b65c6a5002fc87433ad4e31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;skip&lt;/code&gt; method of this class creates a byte array and then repeatedly reads into it until &lt;code&gt;n&lt;/code&gt; bytes have been read or the end of the stream has been reached. Subclasses are encouraged to provide a more efficient implementation of this method. For instance, the implementation may depend on the ability to seek.</source>
          <target state="translated">このクラスの &lt;code&gt;skip&lt;/code&gt; メソッドは、バイト配列を作成し、 &lt;code&gt;n&lt;/code&gt; バイトが読み取られるまで、またはストリームの終わりに達するまで、繰り返し読み取ります。サブクラスは、このメソッドのより効率的な実装を提供することが推奨されます。たとえば、実装はシークする能力に依存する場合があります。</target>
        </trans-unit>
        <trans-unit id="48bb13788e4dffd1bf5c784a19fc6b8edec85d28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src&lt;/code&gt; argument and &lt;code&gt;dest&lt;/code&gt; argument refer to arrays whose component types are different primitive types.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 引数と &lt;code&gt;dest&lt;/code&gt; 引数は、そのコンポーネントのタイプ異なるプリミティブ型である配列を指します。</target>
        </trans-unit>
        <trans-unit id="2ded185c55f988e1ab8aa4ba594d8425c8a39394" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src&lt;/code&gt; argument refers to an array with a primitive component type and the &lt;code&gt;dest&lt;/code&gt; argument refers to an array with a reference component type.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 引数は、プリミティブコンポーネントタイプを持つ配列を指すと &lt;code&gt;dest&lt;/code&gt; 引数が参照コンポーネント型を持つ配列を指します。</target>
        </trans-unit>
        <trans-unit id="9b64842c9ed7d557d1d18f19836d86fd1cadc9b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src&lt;/code&gt; argument refers to an array with a reference component type and the &lt;code&gt;dest&lt;/code&gt; argument refers to an array with a primitive component type.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 引数は、参照コンポーネントタイプを持つ配列を指すと &lt;code&gt;dest&lt;/code&gt; 引数がプリミティブコンポーネントタイプを持つ配列を指します。</target>
        </trans-unit>
        <trans-unit id="17390f5ec2c7023bf41b502643c3390be1470837" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src&lt;/code&gt; argument refers to an object that is not an array.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 引数が配列でないオブジェクトを指します。</target>
        </trans-unit>
        <trans-unit id="32cf5d4487a70ff5b3296fb66460f51ac7c6a160" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;srcPos&lt;/code&gt; argument is negative.</source>
          <target state="translated">&lt;code&gt;srcPos&lt;/code&gt; の引数が負です。</target>
        </trans-unit>
        <trans-unit id="be02728a3743350708b8b357f2bfb78e56f08541" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; handles must not be &lt;code&gt;null&lt;/code&gt;, and must both return the common type &lt;code&gt;int&lt;/code&gt;, referred to here as &lt;code&gt;I&lt;/code&gt; in parameter type lists.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; のハンドルがあってはならない &lt;code&gt;null&lt;/code&gt; 、および両方の一般的なタイプの返す必要があります &lt;code&gt;int&lt;/code&gt; 型を、とここでいう &lt;code&gt;I&lt;/code&gt; パラメータ型リストに。</target>
        </trans-unit>
        <trans-unit id="6dc25c0527566429af8136756050546b7203d021" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; parameters can be &lt;code&gt;null&lt;/code&gt; to indicate that the range doesn't have an upper or lower bound. If &lt;code&gt;value&lt;/code&gt; or &lt;code&gt;calendarField&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, or if both &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are specified and &lt;code&gt;minimum &amp;gt; maximum&lt;/code&gt; then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. Similarly if &lt;code&gt;(minimum &amp;lt;= value &amp;lt;= maximum)&lt;/code&gt; is false, an IllegalArgumentException is thrown.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; 及び &lt;code&gt;end&lt;/code&gt; パラメータがあってもよい &lt;code&gt;null&lt;/code&gt; 範囲が上限又は結合と下限を有していないことを示すために。もし &lt;code&gt;value&lt;/code&gt; または &lt;code&gt;calendarField&lt;/code&gt; はである &lt;code&gt;null&lt;/code&gt; 、または両方の場合 &lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; 指定され、 &lt;code&gt;minimum &amp;gt; maximum&lt;/code&gt; 次いで、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。同様に、 &lt;code&gt;(minimum &amp;lt;= value &amp;lt;= maximum)&lt;/code&gt; がfalseの場合、IllegalArgumentExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="3c17d5d7d0e68ab4ec50eef0d86ee3e15e17df97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;startPipeline&lt;/code&gt; method performs the same checks on each ProcessBuilder as does the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method. Each new process invokes the command and arguments given by the respective process builder's &lt;a href=&quot;#command()&quot;&gt;&lt;code&gt;command()&lt;/code&gt;&lt;/a&gt;, in a working directory as given by its &lt;a href=&quot;#directory()&quot;&gt;&lt;code&gt;directory()&lt;/code&gt;&lt;/a&gt;, with a process environment as given by its &lt;a href=&quot;#environment()&quot;&gt;&lt;code&gt;environment()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4cc6c311e7eebc97573c7745efa0c1accd23d43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;startPipeline&lt;/code&gt; method performs the same checks on each ProcessBuilder as does the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method. The new process will invoke the command and arguments given by &lt;a href=&quot;#command()&quot;&gt;&lt;code&gt;command()&lt;/code&gt;&lt;/a&gt;, in a working directory as given by &lt;a href=&quot;#directory()&quot;&gt;&lt;code&gt;directory()&lt;/code&gt;&lt;/a&gt;, with a process environment as given by &lt;a href=&quot;#environment()&quot;&gt;&lt;code&gt;environment()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;startPipeline&lt;/code&gt; のないような方法は、各ProcessBuilderを上に同じチェックを実行&lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;メソッドを。新しいプロセスは、&lt;a href=&quot;#directory()&quot;&gt; &lt;code&gt;directory()&lt;/code&gt; &lt;/a&gt;で指定された作業ディレクトリで、&lt;a href=&quot;#environment()&quot;&gt; &lt;code&gt;environment()&lt;/code&gt; で&lt;/a&gt;指定されたプロセス環境を使用して、&lt;a href=&quot;#command()&quot;&gt; &lt;code&gt;command()&lt;/code&gt; &lt;/a&gt;で指定されたコマンドと引数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="076b65d1dcb2536b5b9253389218e30908409663" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stateChange&lt;/code&gt; of any &lt;code&gt;ItemEvent&lt;/code&gt; instance takes one of the following values:</source>
          <target state="translated">&lt;code&gt;ItemEvent&lt;/code&gt; インスタンスの &lt;code&gt;stateChange&lt;/code&gt; は、次のいずれかの値を取ります。</target>
        </trans-unit>
        <trans-unit id="4d7e3c187b7502624a8ff731ccc49ed33e5b1f80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;statusCode&lt;/code&gt; is an integer from the range &lt;code&gt;1000 &amp;lt;= code &amp;lt;= 4999&lt;/code&gt;. Status codes &lt;code&gt;1002&lt;/code&gt;, &lt;code&gt;1003&lt;/code&gt;, &lt;code&gt;1006&lt;/code&gt;, &lt;code&gt;1007&lt;/code&gt;, &lt;code&gt;1009&lt;/code&gt;, &lt;code&gt;1010&lt;/code&gt;, &lt;code&gt;1012&lt;/code&gt;, &lt;code&gt;1013&lt;/code&gt; and &lt;code&gt;1015&lt;/code&gt; are illegal. Behaviour in respect to other status codes is implementation-specific. A legal &lt;code&gt;reason&lt;/code&gt; is a string that has a UTF-8 representation not longer than &lt;code&gt;123&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;statusCode&lt;/code&gt; の範囲の整数であり、 &lt;code&gt;1000 &amp;lt;= code &amp;lt;= 4999&lt;/code&gt; 。ステータスコード &lt;code&gt;1002&lt;/code&gt; 、 &lt;code&gt;1003&lt;/code&gt; 、 &lt;code&gt;1006&lt;/code&gt; 、 &lt;code&gt;1007&lt;/code&gt; 、 &lt;code&gt;1009&lt;/code&gt; 、 &lt;code&gt;1010&lt;/code&gt; 、 &lt;code&gt;1012&lt;/code&gt; 、 &lt;code&gt;1013&lt;/code&gt; 年と &lt;code&gt;1015&lt;/code&gt; 年は違法です。他のステータスコードに関する動作は、実装固有です。法的な &lt;code&gt;reason&lt;/code&gt; は、 &lt;code&gt;123&lt;/code&gt; バイト以下のUTF-8表現を持つ文字列です。</target>
        </trans-unit>
        <trans-unit id="96a37830010cc84066474823aaa8925f3e262fd2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stopPropagation&lt;/code&gt; method is used prevent further propagation of an event during event flow.</source>
          <target state="translated">&lt;code&gt;stopPropagation&lt;/code&gt; の方法は、イベントフロー中のイベントのさらなる伝播を防ぐために使用されます。</target>
        </trans-unit>
        <trans-unit id="87a32d228a0f8798ef1bced948af76af2274fc0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stopPropagation&lt;/code&gt; method is used prevent further propagation of an event during event flow. If this method is called by any &lt;code&gt;EventListener&lt;/code&gt; the event will cease propagating through the tree. The event will complete dispatch to all listeners on the current &lt;code&gt;EventTarget&lt;/code&gt; before event flow stops. This method may be used during any stage of event flow.</source>
          <target state="translated">&lt;code&gt;stopPropagation&lt;/code&gt; の方法は、イベントフロー中のイベントのさらなる伝播を防ぐために使用されます。このメソッドが &lt;code&gt;EventListener&lt;/code&gt; によって呼び出されると、イベントはツリーを介した伝播を停止します。イベントは、イベントフローが停止する前に、現在の &lt;code&gt;EventTarget&lt;/code&gt; 上のすべてのリスナーへのディスパッチを完了します。この方法は、イベントフローのどの段階でも使用できます。</target>
        </trans-unit>
        <trans-unit id="345b6d87d178ad048ca717372d6308e35699c398" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stream&lt;/code&gt; walks the file tree as elements are consumed. The &lt;code&gt;Stream&lt;/code&gt; returned is guaranteed to have at least one element, the starting file itself. For each file visited, the stream attempts to read its &lt;a href=&quot;attribute/basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt;. If the file is a directory and can be opened successfully, entries in the directory, and their &lt;em&gt;descendants&lt;/em&gt; will follow the directory in the stream as they are encountered. When all entries have been visited, then the directory is closed. The file tree walk then continues at the next &lt;em&gt;sibling&lt;/em&gt; of the directory.</source>
          <target state="translated">&lt;code&gt;stream&lt;/code&gt; 要素が消費されるファイルツリーを歩きます。 &lt;code&gt;Stream&lt;/code&gt; 少なくとも一つの要素は、出発ファイル自体を持つことが保証されて戻りました。アクセスしたファイルごとに、ストリームはその&lt;a href=&quot;attribute/basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt;を読み取ろうとします。ファイルがディレクトリであり、正常に開くことができる場合、ディレクトリ内のエントリとその&lt;em&gt;子孫&lt;/em&gt;は、遭遇したストリームのディレクトリに従います。すべてのエントリにアクセスすると、ディレクトリが閉じます。ファイルツリーのウォークは、ディレクトリの次の&lt;em&gt;兄弟&lt;/em&gt;で続行されます。</target>
        </trans-unit>
        <trans-unit id="b3710d2b5eccac183494c98736ff55e0daad76d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;system&lt;/code&gt; factory methods provide clocks based on the best available system clock This may use &lt;a href=&quot;../lang/system#currentTimeMillis()&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;, or a higher resolution clock if one is available.</source>
          <target state="translated">&lt;code&gt;system&lt;/code&gt; ファクトリメソッドは、これが使用できる利用可能な最善のシステムクロックに基づいてクロックを提供する&lt;a href=&quot;../lang/system#currentTimeMillis()&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt;利用可能な場合、またはより高い解像度のクロックを。</target>
        </trans-unit>
        <trans-unit id="bbed603ba13286eef01f00c49ed0143e560232fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;system&lt;/code&gt; factory methods provide clocks based on the best available system clock This may use &lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;, or a higher resolution clock if one is available.</source>
          <target state="translated">&lt;code&gt;system&lt;/code&gt; ファクトリメソッドは、これが使用できる利用可能な最善のシステムクロックに基づいてクロックを提供する&lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt;利用可能な場合、またはより高い解像度のクロックを。</target>
        </trans-unit>
        <trans-unit id="705416f1898f90c6d7101837ec2872b8de0927e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;systemId&lt;/code&gt; will be used literally, with no attempt to be made absolute to the &lt;code&gt;baseUri&lt;/code&gt;. The &lt;code&gt;baseUri&lt;/code&gt; and &lt;code&gt;namespace&lt;/code&gt; are not used in the search for a match in a catalog. However, a relative &lt;code&gt;systemId&lt;/code&gt; in an xml source may have been made absolute by the parser with the &lt;code&gt;baseURI&lt;/code&gt;, thus making it unable to find a &lt;code&gt;system&lt;/code&gt; entry. In such a case, a &lt;code&gt;systemSuffix&lt;/code&gt; entry is recommended over a &lt;code&gt;system&lt;/code&gt; entry.</source>
          <target state="translated">&lt;code&gt;systemId&lt;/code&gt; 無いの試みで、文字通り使用されますが、絶対に行われる &lt;code&gt;baseUri&lt;/code&gt; 。 &lt;code&gt;baseUri&lt;/code&gt; と &lt;code&gt;namespace&lt;/code&gt; カタログでのマッチの検索に使用されていません。ただし、xmlソース内の相対 &lt;code&gt;systemId&lt;/code&gt; は、 &lt;code&gt;baseURI&lt;/code&gt; を使用してパーサーによって絶対化されている可能性があるため、 &lt;code&gt;system&lt;/code&gt; エントリを見つけることができません。このような場合、 &lt;code&gt;system&lt;/code&gt; エントリよりも &lt;code&gt;systemSuffix&lt;/code&gt; エントリをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5fa8fe0340ab2e43b8e4f2fccf1346d93701ab46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;systemId&lt;/code&gt; will be used literally, with no attempt to be made absolute to the &lt;code&gt;baseUri&lt;/code&gt;. The &lt;code&gt;baseUri&lt;/code&gt;, &lt;code&gt;namespaceUri&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt; are not used in the search for a match in a catalog. However, a relative &lt;code&gt;systemId&lt;/code&gt; in a source may have been made absolute by the parser with the &lt;code&gt;baseURI&lt;/code&gt;, thus making it unable to find a &lt;code&gt;system&lt;/code&gt; entry. In such a case, a &lt;code&gt;systemSuffix&lt;/code&gt; entry is recommended over a &lt;code&gt;system&lt;/code&gt; entry.</source>
          <target state="translated">&lt;code&gt;systemId&lt;/code&gt; 無いの試みで、文字通り使用されますが、絶対に行われる &lt;code&gt;baseUri&lt;/code&gt; 。 &lt;code&gt;baseUri&lt;/code&gt; 、 &lt;code&gt;namespaceUri&lt;/code&gt; と &lt;code&gt;type&lt;/code&gt; カタログでのマッチの検索に使用されていません。ただし、ソース内の相対 &lt;code&gt;systemId&lt;/code&gt; は、 &lt;code&gt;baseURI&lt;/code&gt; を使用してパーサーによって絶対化されている可能性があるため、 &lt;code&gt;system&lt;/code&gt; エントリを見つけることができません。このような場合、 &lt;code&gt;system&lt;/code&gt; エントリよりも &lt;code&gt;systemSuffix&lt;/code&gt; エントリをお勧めします。</target>
        </trans-unit>
        <trans-unit id="102c04e139e85c06b332c1cf89cc171685c4335a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; and &lt;code&gt;cleanup&lt;/code&gt; handles must have the same corresponding argument and return types, except that the &lt;code&gt;cleanup&lt;/code&gt; handle may omit trailing arguments. Also, the &lt;code&gt;cleanup&lt;/code&gt; handle must have one or two extra leading parameters:</source>
          <target state="translated">&lt;code&gt;target&lt;/code&gt; と &lt;code&gt;cleanup&lt;/code&gt; ハンドルは、同じ対応する引数や戻り値の型を持っていることを除いてしなければならない &lt;code&gt;cleanup&lt;/code&gt; ハンドルは後続の引数を省略することができます。また、 &lt;code&gt;cleanup&lt;/code&gt; ハンドルには、1つまたは2つの追加の先行パラメーターが必要です。</target>
        </trans-unit>
        <trans-unit id="fc9c79ee1df025d55ac0b05752be64291c34d35f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; and the &lt;code&gt;methodName&lt;/code&gt; values should not be &lt;code&gt;null&lt;/code&gt;. Otherwise an attempt to execute this &lt;code&gt;Expression&lt;/code&gt; will result in a &lt;code&gt;NullPointerException&lt;/code&gt;. If the &lt;code&gt;arguments&lt;/code&gt; value is &lt;code&gt;null&lt;/code&gt;, an empty array is used as the value of the &lt;code&gt;arguments&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;target&lt;/code&gt; と &lt;code&gt;methodName&lt;/code&gt; 値はすべきではない &lt;code&gt;null&lt;/code&gt; 。そうでない場合、この &lt;code&gt;Expression&lt;/code&gt; を実行しようとすると、 &lt;code&gt;NullPointerException&lt;/code&gt; が発生します。場合 &lt;code&gt;arguments&lt;/code&gt; 値が &lt;code&gt;null&lt;/code&gt; 、空の配列は、の値として使用される &lt;code&gt;arguments&lt;/code&gt; プロパティ。</target>
        </trans-unit>
        <trans-unit id="67df39f98209ce29324f6940292995bb97c5d095" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; parameter is the target of the link. It may be an &lt;a href=&quot;path#isAbsolute()&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; or relative path and may not exist. When the target is a relative path then file system operations on the resulting link are relative to the path of the link.</source>
          <target state="translated">&lt;code&gt;target&lt;/code&gt; パラメータは、リンクのターゲットです。それがあってもよい&lt;a href=&quot;path#isAbsolute()&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt;または相対パスとが存在しなくてもよいです。ターゲットが相対パスの場合、結果のリンクに対するファイルシステム操作は、リンクのパスに相対的です。</target>
        </trans-unit>
        <trans-unit id="643140ef281b03db8ff1987c73ac0c49fd06dd1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; parameter is the target of the link. It may be an &lt;a href=&quot;path#isAbsolute--&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; or relative path and may not exist. When the target is a relative path then file system operations on the resulting link are relative to the path of the link.</source>
          <target state="translated">&lt;code&gt;target&lt;/code&gt; パラメータは、リンクのターゲットです。それがあってもよい&lt;a href=&quot;path#isAbsolute--&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt;または相対パスとが存在しなくてもよいです。ターゲットが相対パスの場合、結果のリンクでのファイルシステム操作は、リンクのパスに対して相対的です。</target>
        </trans-unit>
        <trans-unit id="0009c69a4dc15a49dcbf1a0c8eae01039c7c4a96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;thumbnails&lt;/code&gt; argument must either be &lt;code&gt;null&lt;/code&gt; or contain only &lt;code&gt;BufferedImage&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;thumbnails&lt;/code&gt; 引数はどちらかでなければなりません &lt;code&gt;null&lt;/code&gt; のみ含ま &lt;code&gt;BufferedImage&lt;/code&gt; オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="7f203db2af4b065dabcc3805554e22404c4433c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeStamp&lt;/code&gt; of the notification is a time value (consistent with &lt;a href=&quot;../../../../java.base/java/lang/system#currentTimeMillis()&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;) indicating when the notification was constructed.</source>
          <target state="translated">通知の &lt;code&gt;timeStamp&lt;/code&gt; は、通知がいつ作成されたかを示す時間値（&lt;a href=&quot;../../../../java.base/java/lang/system#currentTimeMillis()&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt;と一致）です。</target>
        </trans-unit>
        <trans-unit id="a0e9ab517d625c7c2deaf59529ad7e0219c013fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeStamp&lt;/code&gt; of the notification is a time value (consistent with &lt;a href=&quot;../../../java/lang/system#currentTimeMillis--&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt;) indicating when the notification was constructed.</source>
          <target state="translated">通知の &lt;code&gt;timeStamp&lt;/code&gt; は、通知がいつ作成されたかを示す時間値（&lt;a href=&quot;../../../java/lang/system#currentTimeMillis--&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt;と一致）です。</target>
        </trans-unit>
        <trans-unit id="b2dc1977f789016cfbe08995493b9abe10ad9cbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toString&lt;/code&gt; method for class &lt;code&gt;Object&lt;/code&gt; returns a string consisting of the name of the class of which the object is an instance, the at-sign character `&lt;code&gt;@&lt;/code&gt;', and the unsigned hexadecimal representation of the hash code of the object. In other words, this method returns a string equal to the value of:</source>
          <target state="translated">クラス &lt;code&gt;Object&lt;/code&gt; の &lt;code&gt;toString&lt;/code&gt; メソッドは、オブジェクトがインスタンスであるクラスの名前、アットマーク文字 ` &lt;code&gt;@&lt;/code&gt; '、およびオブジェクトのハッシュコードの符号なし16進表現で構成される文字列を返します。つまり、このメソッドは次の値に等しい文字列を返します。</target>
        </trans-unit>
        <trans-unit id="f35e165aad5f7865197b005be9bb45266399d993" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toString&lt;/code&gt; method may return two different values on two &lt;code&gt;StackTraceElement&lt;/code&gt; instances that are &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;equal&lt;/a&gt;, for example one created via the constructor, and one obtained from &lt;a href=&quot;throwable&quot;&gt;&lt;code&gt;Throwable&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stackwalker.stackframe&quot;&gt;&lt;code&gt;StackWalker.StackFrame&lt;/code&gt;&lt;/a&gt;, where an implementation may choose to omit some element in the returned string.</source>
          <target state="translated">&lt;code&gt;toString&lt;/code&gt; の方法は、2つのに2つの異なる値を返すことができる &lt;code&gt;StackTraceElement&lt;/code&gt; であるインスタンス&lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;等しい&lt;/a&gt;例示コンストラクタを介して作成したもの、とから得られたため、&lt;a href=&quot;throwable&quot;&gt; &lt;code&gt;Throwable&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stackwalker.stackframe&quot;&gt; &lt;code&gt;StackWalker.StackFrame&lt;/code&gt; &lt;/a&gt;実装が返される文字列内のいくつかの要素を省略することを選択することができます。</target>
        </trans-unit>
        <trans-unit id="c0a1342d2a95a488e60cf2e7575f74b70a1b15a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transform&lt;/code&gt; method of &lt;code&gt;Transform&lt;/code&gt; MUST support &lt;code&gt;DOMCryptoContext&lt;/code&gt; context parameter types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc716b32be2e2ea2d617e608d9ff17039ae30d19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; argument should be a valid value for the byte that follows the status byte in the &lt;code&gt;MetaMessage&lt;/code&gt;. The &lt;code&gt;data&lt;/code&gt; argument should contain all the subsequent bytes of the &lt;code&gt;MetaMessage&lt;/code&gt;. In other words, the byte that specifies the type of &lt;code&gt;MetaMessage&lt;/code&gt; is not considered a data byte.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 引数は、中ステータスバイト以下のバイトの有効な値でなければなりません &lt;code&gt;MetaMessage&lt;/code&gt; を。 &lt;code&gt;data&lt;/code&gt; 引数は、すべての後続のバイト含まれている必要があり &lt;code&gt;MetaMessage&lt;/code&gt; を。つまり、 &lt;code&gt;MetaMessage&lt;/code&gt; のタイプを指定するバイトは、データバイトとは見なされません。</target>
        </trans-unit>
        <trans-unit id="06b9218c7159f9ade16823be04d6c173149333fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; of any &lt;code&gt;AdjustmentEvent&lt;/code&gt; instance takes one of the following values:</source>
          <target state="translated">&lt;code&gt;AdjustmentEvent&lt;/code&gt; インスタンスの &lt;code&gt;type&lt;/code&gt; は、次のいずれかの値を取ります。</target>
        </trans-unit>
        <trans-unit id="9d6e7d46137f25ad7f8964128a6f000618a91b9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter indicates the relation between the two components. If the two components will be contained in the same parent and are showing similar logically related items, use &lt;code&gt;RELATED&lt;/code&gt;. If the two components will be contained in the same parent but show logically unrelated items use &lt;code&gt;UNRELATED&lt;/code&gt;. Some look and feels may not distinguish between the &lt;code&gt;RELATED&lt;/code&gt; and &lt;code&gt;UNRELATED&lt;/code&gt; types.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; パラメータは、2つの構成要素間の関係を示します。 2つのコンポーネントが同じ親に含まれ、同様の論理的に関連するアイテムを表示している場合は、 &lt;code&gt;RELATED&lt;/code&gt; を使用します。 2つのコンポーネントが同じ親に含まれるが、論理的に関連のないアイテムが表示される場合は、 &lt;code&gt;UNRELATED&lt;/code&gt; を使用します。一部のルックアンドフィールでは、 &lt;code&gt;RELATED&lt;/code&gt; タイプと &lt;code&gt;UNRELATED&lt;/code&gt; タイプを区別できない場合があります。</target>
        </trans-unit>
        <trans-unit id="fc25f1a4f79c0d9cb38f65494514c69d349c3f8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter is the type of the attributes required and this method returns an instance of that type if supported. All implementations support a basic set of file attributes and so invoking this method with a &lt;code&gt;type&lt;/code&gt; parameter of &lt;code&gt;
 BasicFileAttributes.class&lt;/code&gt; will not throw &lt;code&gt;
 UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; パラメータは、必須属性のタイプであり、サポートされている場合、この方法は、そのタイプのインスタンスを返します。すべての実装はファイル属性の基本セットをサポートしているため、 &lt;code&gt; BasicFileAttributes.class&lt;/code&gt; の &lt;code&gt;type&lt;/code&gt; パラメーターを使用してこのメ​​ソッドを呼び出しても &lt;code&gt; UnsupportedOperationException&lt;/code&gt; はスローされません。</target>
        </trans-unit>
        <trans-unit id="714e35a3944791dcc0a21aa2cfb1cc1a672a4844" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter is the type of the attributes required and this method returns an instance of that type if supported. All implementations support a basic set of file attributes and so invoking this method with a &lt;code&gt;type&lt;/code&gt; parameter of &lt;code&gt;BasicFileAttributes.class&lt;/code&gt; will not throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; パラメータは、必須属性のタイプであり、サポートされている場合、この方法は、そのタイプのインスタンスを返します。すべての実装はファイル属性の基本セットをサポートしているため、 &lt;code&gt;BasicFileAttributes.class&lt;/code&gt; の &lt;code&gt;type&lt;/code&gt; パラメーターを指定してこのメ​​ソッドを呼び出しても、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; はスローされません。</target>
        </trans-unit>
        <trans-unit id="f1056213ec4dbb35ecbc5b5160831677aa11a47e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter is typically a class, but it may be any type, such as an interface, a primitive type (like &lt;code&gt;int.class&lt;/code&gt;), or &lt;code&gt;void.class&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; パラメータは、典型的には、クラスであるが、そのようなインタフェース、（などプリミティブ型など任意のタイプであってもよい &lt;code&gt;int.class&lt;/code&gt; を）、または &lt;code&gt;void.class&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d0f557c7ffa69e938b51901e39f9567f456bb67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;typeName&lt;/code&gt; here is determined by the &lt;a href=&quot;#type-names&quot;&gt; type name rules&lt;/a&gt; detailed below.</source>
          <target state="translated">ここでの &lt;code&gt;typeName&lt;/code&gt; は、以下に詳述する&lt;a href=&quot;#type-names&quot;&gt;タイプ名の規則&lt;/a&gt;によって決定されます。</target>
        </trans-unit>
        <trans-unit id="b34f44d7ea255df3fe2a501bc7503f396e8bcc57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uncaughtException&lt;/code&gt; method of &lt;code&gt;ThreadGroup&lt;/code&gt; does the following:</source>
          <target state="translated">&lt;code&gt;ThreadGroup&lt;/code&gt; の &lt;code&gt;uncaughtException&lt;/code&gt; メソッドは次のことを行います。</target>
        </trans-unit>
        <trans-unit id="284484383fbc17bd10f3ef3060ba77933b35645d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;underlinedIndex&lt;/code&gt; parameter points to a char value (Unicode code unit) in the given string. If the char value specified at the underlined index is in the high-surrogate range and the char value at the following index is in the low-surrogate range then the supplementary character corresponding to this surrogate pair is underlined.</source>
          <target state="translated">&lt;code&gt;underlinedIndex&lt;/code&gt; の指定された文字列のchar値（Unicodeコード単位）にパラメータ点。下線付きのインデックスで指定されたchar値が高サロゲート範囲にあり、次のインデックスのchar値が低サロゲート範囲にある場合、このサロゲートペアに対応する補足文字に下線が引かれます。</target>
        </trans-unit>
        <trans-unit id="8a305919fe389125db79560ea71e37822fe9f961" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unmarshalKeyInfo&lt;/code&gt; method of &lt;code&gt;KeyInfoFactory&lt;/code&gt; MUST support &lt;code&gt;DOMStructure&lt;/code&gt; types. If the type is &lt;code&gt;DOMStructure&lt;/code&gt;, it SHOULD contain an &lt;code&gt;Element&lt;/code&gt; of type &lt;code&gt;KeyInfo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d95f34639981a626eae38c178805b9f2a259aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unmarshalXMLSignature&lt;/code&gt; method of &lt;code&gt;XMLSignatureFactory&lt;/code&gt; MUST support &lt;code&gt;DOMStructure&lt;/code&gt; types. If the type is &lt;code&gt;DOMStructure&lt;/code&gt;, it SHOULD contain an &lt;code&gt;Element&lt;/code&gt; of type &lt;code&gt;Signature&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fad801c53ac062a66adda45916aec072ec30d47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unmarshalXMLSignature&lt;/code&gt; method of &lt;code&gt;XMLSignatureFactory&lt;/code&gt; MUST support &lt;code&gt;DOMValidateContext&lt;/code&gt; types. If the type is &lt;code&gt;DOMValidateContext&lt;/code&gt;, it SHOULD contain an &lt;code&gt;Element&lt;/code&gt; of type Signature. Additionally, the &lt;code&gt;unmarshalXMLSignature&lt;/code&gt; method MAY populate the Id/Element mappings of the passed-in &lt;code&gt;DOMValidateContext&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4450253c95c412d34ca14474c433b55151989bf1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update&lt;/code&gt; method of &lt;code&gt;Component&lt;/code&gt; calls this component's &lt;code&gt;paint&lt;/code&gt; method to redraw this component. This method is commonly overridden by subclasses which need to do additional work in response to a call to &lt;code&gt;repaint&lt;/code&gt;. Subclasses of Component that override this method should either call &lt;code&gt;super.update(g)&lt;/code&gt;, or call &lt;code&gt;paint(g)&lt;/code&gt; directly from their &lt;code&gt;update&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; の &lt;code&gt;update&lt;/code&gt; メソッドは、このコンポーネントの &lt;code&gt;paint&lt;/code&gt; メソッドを呼び出して、このコンポーネントを再描画します。このメソッドは通常、 &lt;code&gt;repaint&lt;/code&gt; の呼び出しに応答して追加の作業を行う必要があるサブクラスによってオーバーライドされます。このメソッドをオーバーライドするComponentのサブクラスは、 &lt;code&gt;super.update(g)&lt;/code&gt; を呼び出すか、 &lt;code&gt;update&lt;/code&gt; メソッドから直接 &lt;code&gt;paint(g)&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="ba8b125bbe0fb10254e8b4e3a983a07e8dccd3bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uri&lt;/code&gt; parameter is an absolute, hierarchical URI, with a scheme equal (without regard to case) to the scheme supported by this provider. The exact form of the URI is highly provider dependent. The &lt;code&gt;env&lt;/code&gt; parameter is a map of provider specific properties to configure the file system.</source>
          <target state="translated">&lt;code&gt;uri&lt;/code&gt; パラメータは、このプロバイダによってサポートされている方式と（場合に関係なく）同じ方式で、絶対的な、階層URIです。URIの正確な形式は、プロバイダーに大きく依存します。 &lt;code&gt;env&lt;/code&gt; パラメータは、ファイルシステムを設定するには、プロバイダ固有のプロパティのマップです。</target>
        </trans-unit>
        <trans-unit id="8d5265eccd53a8174604390135889708c5fc5e2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;useOrdering&lt;/code&gt; argument controls the ordering of the results using the same rules as &lt;code&gt;getServiceProviders(Class, boolean)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;useOrdering&lt;/code&gt; 引数が同じルールを使用して結果の順序を制御 &lt;code&gt;getServiceProviders(Class, boolean)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56c69f9bf13711770382aef06023e97ae68a4935" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; argument is the value that the method is to return. If the return type of the method is void, then value must be a &lt;a href=&quot;voidvalue&quot;&gt;&lt;code&gt;VoidValue&lt;/code&gt;&lt;/a&gt;. Object values must be assignment compatible with the method return type (This implies that the method return type must be loaded through the enclosing class's class loader). Primitive values must be either assignment compatible with the method return type or must be convertible to the variable type without loss of information. See JLS section 5.2 for more information on assignment compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3c577a872e1c1751d1a92167097db6476c0ae8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; can be retrieved by calling the &lt;code&gt;get&lt;/code&gt; method with a &lt;code&gt;key&lt;/code&gt; that is equal to the original &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 呼び出すことによって取得することができる &lt;code&gt;get&lt;/code&gt; と方法 &lt;code&gt;key&lt;/code&gt; 元に等しい &lt;code&gt;key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6dc1003235f78ae44b563cd9c64b625dec84264" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; field specifies the current value of the property, based on a combination of the information supplied to the method &lt;code&gt;getPropertyInfo&lt;/code&gt;, the Java environment, and the driver-supplied default values.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; フィールドは、メソッドに提供された情報の組み合わせに基づいて、プロパティの現在の値を指定 &lt;code&gt;getPropertyInfo&lt;/code&gt; 、Java環境、およびドライバが提供するデフォルト値。</target>
        </trans-unit>
        <trans-unit id="6bb04aabca923c27392cb6a07985f491ac538c08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; field specifies the current value of the property, based on a combination of the information supplied to the method &lt;code&gt;getPropertyInfo&lt;/code&gt;, the Java environment, and the driver-supplied default values. This field may be null if no value is known.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; フィールドは、メソッドに提供された情報の組み合わせに基づいて、プロパティの現在の値を指定 &lt;code&gt;getPropertyInfo&lt;/code&gt; 、Java環境、およびドライバが提供するデフォルト値。値が不明な場合、このフィールドはnullになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="a0dc0ca5643c577e2bc28f2c4d9f85f55ae2ae0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;view&lt;/code&gt; attribute identifies the &lt;code&gt;AbstractView&lt;/code&gt; from which the event was generated.</source>
          <target state="translated">&lt;code&gt;view&lt;/code&gt; 属性識別 &lt;code&gt;AbstractView&lt;/code&gt; イベントが生成されました。</target>
        </trans-unit>
        <trans-unit id="35e9083dd12ca67db6c302fb48e049498f0e86ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; values are automatically enlarged if either is less than the minimum size as specified by previous call to &lt;code&gt;setMinimumSize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;width&lt;/code&gt; と &lt;code&gt;height&lt;/code&gt; の前回の呼び出しで指定された以下の最小寸法よりもいずれかの場合に値が自動的に拡大され &lt;code&gt;setMinimumSize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e270b26fb5f4d86ce8e6fe4ab24f798852bc112c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;height&lt;/code&gt; values are automatically enlarged if either is less than the minimum size as specified by previous call to &lt;code&gt;setMinimumSize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;width&lt;/code&gt; または &lt;code&gt;height&lt;/code&gt; の前回の呼び出しで指定された以下の最小寸法よりもいずれかの場合に値が自動的に拡大され &lt;code&gt;setMinimumSize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb6cc5d83f6f060e6206ee4432cd2838d953df43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;wrap()&lt;/code&gt; and &lt;code&gt;unwrap()&lt;/code&gt; methods may execute concurrently of each other.</source>
          <target state="translated">&lt;code&gt;wrap()&lt;/code&gt; および &lt;code&gt;unwrap()&lt;/code&gt; メソッドは、互いに同時に実行してもよいです。</target>
        </trans-unit>
        <trans-unit id="b6ac35afc51c676f6acfb59fbb66aebb7fd7dffe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;CipherOutputStream&lt;/code&gt; calls the &lt;code&gt;write&lt;/code&gt; method of three arguments with the three arguments &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;b.length&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;write&lt;/code&gt; の方法 &lt;code&gt;CipherOutputStream&lt;/code&gt; は、呼び出して &lt;code&gt;write&lt;/code&gt; 3つの3つの引数と引数の方法 &lt;code&gt;b&lt;/code&gt; 、 &lt;code&gt;0&lt;/code&gt; 、および &lt;code&gt;b.length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b444208efa76dded6db1c12df1b7df685049876c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;FilterOutputStream&lt;/code&gt; calls its &lt;code&gt;write&lt;/code&gt; method of three arguments with the arguments &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;b.length&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FilterOutputStream&lt;/code&gt; の &lt;code&gt;write&lt;/code&gt; メソッドは、引数 &lt;code&gt;b&lt;/code&gt; 、 &lt;code&gt;0&lt;/code&gt; 、および &lt;code&gt;b.length&lt;/code&gt; を使用して、3つの引数の &lt;code&gt;write&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="4d273be569b8b30933a05fc498292c5402a93de3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;FilterOutputStream&lt;/code&gt; calls the &lt;code&gt;write&lt;/code&gt; method of its underlying output stream, that is, it performs &lt;code&gt;out.write(b)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;write&lt;/code&gt; 方法 &lt;code&gt;FilterOutputStream&lt;/code&gt; は、呼び出し &lt;code&gt;write&lt;/code&gt; で、その基本となる出力ストリームの方法を、それが実行 &lt;code&gt;out.write(b)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b52d117ddcb1aaf2483d386c55d430f15571498" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;FilterOutputStream&lt;/code&gt; calls the &lt;code&gt;write&lt;/code&gt; method of one argument on each &lt;code&gt;byte&lt;/code&gt; to output.</source>
          <target state="translated">&lt;code&gt;write&lt;/code&gt; の方法 &lt;code&gt;FilterOutputStream&lt;/code&gt; は、呼び出し、 &lt;code&gt;write&lt;/code&gt; ごとに1つの引数のメソッド &lt;code&gt;byte&lt;/code&gt; 出力にします。</target>
        </trans-unit>
        <trans-unit id="f6b5bd7ff632f357b485afe4736af5f2318b4eb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;OutputStream&lt;/code&gt; calls the write method of one argument on each of the bytes to be written out. Subclasses are encouraged to override this method and provide a more efficient implementation.</source>
          <target state="translated">&lt;code&gt;write&lt;/code&gt; の方法 &lt;code&gt;OutputStream&lt;/code&gt; 、書き込むバイトごとに1つの引数のwriteメソッドを呼び出します。サブクラスでは、このメソッドをオーバーライドして、より効率的な実装を提供することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="4052734952517729cae634a4334fbfe7bc56b79a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; methods of the resulting stream will throw an &lt;a href=&quot;illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt; if invoked while the underlying channel is in non-blocking mode. The stream will not be buffered. The stream will be safe for access by multiple concurrent threads. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">基になるチャネルが非ブロッキングモードのときに呼び出された場合、結果のストリームの &lt;code&gt;write&lt;/code&gt; メソッドは&lt;a href=&quot;illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt;をスローします。ストリームはバッファリングされません。ストリームは、複数の同時スレッドによるアクセスに対して安全になります。ストリームを閉じると、チャネルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="7aeccac65dd62b076d4abb5d4c775615877d46ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;writeObject&lt;/code&gt; is a single entry point to the persistence and is used by a &lt;code&gt;Encoder&lt;/code&gt; in the traditional mode of delegation. Although this method is not final, it should not need to be subclassed under normal circumstances.</source>
          <target state="translated">&lt;code&gt;writeObject&lt;/code&gt; は、持続性への単一のエントリポイントであるとで使用されている &lt;code&gt;Encoder&lt;/code&gt; の代表団の伝統的なモードで。このメソッドは最終的なものではありませんが、通常の状況ではサブクラス化する必要はありません。</target>
        </trans-unit>
        <trans-unit id="0937ca02336197261dddb7803acba46aa6ec7743" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;writeObject&lt;/code&gt; is a single entry point to the persistence and is used by an &lt;code&gt;Encoder&lt;/code&gt; in the traditional mode of delegation.</source>
          <target state="translated">&lt;code&gt;writeObject&lt;/code&gt; は、持続性の単一のエントリポイントであるとによって使用される &lt;code&gt;Encoder&lt;/code&gt; 委任の伝統的なモードで。</target>
        </trans-unit>
        <trans-unit id="9c855374ef3af39f227ccdf574cfb54afb0d247f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;writeObject&lt;/code&gt; is a single entry point to the persistence and is used by an &lt;code&gt;Encoder&lt;/code&gt; in the traditional mode of delegation. Although this method is not final, it should not need to be subclassed under normal circumstances.</source>
          <target state="translated">&lt;code&gt;writeObject&lt;/code&gt; は、持続性の単一のエントリポイントであるとによって使用される &lt;code&gt;Encoder&lt;/code&gt; 委任の伝統的なモードで。このメソッドは最終的なものではありませんが、通常の状況ではサブクラス化する必要はありません。</target>
        </trans-unit>
        <trans-unit id="65972030b222838810b7ba8b656c7648e06077d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;writeUTF&lt;/code&gt; method of interface &lt;code&gt;DataOutput&lt;/code&gt; may be used to write data that is suitable for reading by this method.</source>
          <target state="translated">インターフェース &lt;code&gt;DataOutput&lt;/code&gt; の &lt;code&gt;writeUTF&lt;/code&gt; メソッドを使用して、このメソッドによる読み取りに適したデータを書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="ecdfdf55c3e6233c34db1e9797ae4ac06e60e0e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{ }&lt;/code&gt; characters are a group of subpatterns, where the group matches if any subpattern in the group matches. The &lt;code&gt;&quot;,&quot;&lt;/code&gt; character is used to separate the subpatterns. Groups cannot be nested.</source>
          <target state="translated">&lt;code&gt;{ }&lt;/code&gt; の文字はグループがあれば一致するサブパターンのグループであるグループマッチの任意のサブパターン。 &lt;code&gt;&quot;,&quot;&lt;/code&gt; 文字は、サブパターンを区切るために使用されます。グループはネストできません。</target>
        </trans-unit>
        <trans-unit id="4383cedf66c99d541142d23205794e9fbe074f11" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;action&lt;/em&gt;. For a permission you need, this is one of the actions in the list &lt;a href=&quot;#action-list&quot;&gt;below&lt;/a&gt;. For a permission you have, this is a comma-separated list of those actions, or &lt;code&gt;*&lt;/code&gt;, representing all actions.</source>
          <target state="translated">&lt;em&gt;アクション&lt;/em&gt;。必要な権限の場合、これは&lt;a href=&quot;#action-list&quot;&gt;以下&lt;/a&gt;のリストのアクションの1つです。あなたが持っている許可の場合、これはそれらのアクションのコンマ区切りリスト、またはすべてのアクションを表す &lt;code&gt;*&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a6904e89112c0b2f4cf76a3eaf77590286f5121f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;canonical key property list&lt;/em&gt; is the same string as described for &lt;a href=&quot;#getCanonicalKeyPropertyListString()&quot;&gt;&lt;code&gt;getCanonicalKeyPropertyListString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;正規のキープロパティリストは、&lt;/em&gt;のために説明したのと同じ文字列である&lt;a href=&quot;#getCanonicalKeyPropertyListString()&quot;&gt; &lt;code&gt;getCanonicalKeyPropertyListString()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4203e1844ba2358b9cf99e65861fc5814fcbd135" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;canonical key property list&lt;/em&gt; is the same string as described for &lt;a href=&quot;objectname#getCanonicalKeyPropertyListString--&quot;&gt;&lt;code&gt;getCanonicalKeyPropertyListString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;正規のキープロパティリストは、&lt;/em&gt;のために説明したのと同じ文字列である&lt;a href=&quot;objectname#getCanonicalKeyPropertyListString--&quot;&gt; &lt;code&gt;getCanonicalKeyPropertyListString()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0da932c873e0a87699cfc16c3ea52c0b2e0de4c0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;class name&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;クラス名&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b34ed1bdfeb4a02859cb87fc0dd3c70da93cc4ac" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;domain&lt;/em&gt; is a string of characters not including the character colon (&lt;code&gt;:&lt;/code&gt;). It is recommended that the domain should not contain the string &quot;&lt;code&gt;//&lt;/code&gt;&quot;, which is reserved for future use.</source>
          <target state="translated">&lt;em&gt;ドメインは&lt;/em&gt;、文字、コロンを含まない文字列です（ &lt;code&gt;:&lt;/code&gt; ）。ドメインには、将来の使用のために予約されている文字列「 &lt;code&gt;//&lt;/code&gt; 」を含めないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="4031de43ef1c59b0c68ad4834eee900eefebe3c6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;head&lt;/em&gt; of this queue is the &lt;em&gt;least&lt;/em&gt; element with respect to the specified ordering. If multiple elements are tied for least value, the head is one of those elements -- ties are broken arbitrarily. The queue retrieval operations &lt;code&gt;poll&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;peek&lt;/code&gt;, and &lt;code&gt;element&lt;/code&gt; access the element at the head of the queue.</source>
          <target state="translated">このキューの&lt;em&gt;先頭&lt;/em&gt;は、指定された順序に関して&lt;em&gt;最小の&lt;/em&gt;要素です。複数の要素が最小値で結合されている場合、ヘッドはそれらの要素の1つです。結合は任意に分割されます。キュー取得操作は、 &lt;code&gt;poll&lt;/code&gt; 、 &lt;code&gt;remove&lt;/code&gt; 、 &lt;code&gt;peek&lt;/code&gt; 、および &lt;code&gt;element&lt;/code&gt; アクセスにより、キューの先頭にある要素にアクセスします。</target>
        </trans-unit>
        <trans-unit id="132748ef7ce7edd118fa2aec50bbb6b7013d4a04" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;key properties&lt;/em&gt; are an unordered set of keys and associated values.</source>
          <target state="translated">&lt;em&gt;キープロパティは&lt;/em&gt;、キーと関連する値の非順序集合です。</target>
        </trans-unit>
        <trans-unit id="49b6c7b812bfb37bbfa829d277662d381281a9fd" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mapped&lt;/em&gt; Java type, &lt;em&gt;opendata(J)&lt;/em&gt;, which is always the same for any given &lt;em&gt;opentype(J)&lt;/em&gt;. This is a Java class.</source>
          <target state="translated">&lt;em&gt;マッピングされた&lt;/em&gt; Java型、&lt;em&gt;をopendata（J）&lt;/em&gt;は常に、任意の所与のために同じである、&lt;em&gt;OpenTypeの（J） &lt;/em&gt;。これはJavaクラスです。</target>
        </trans-unit>
        <trans-unit id="bbb454761775dc1a414464798499aeee43da2b26" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;member&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;メンバー&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="074cbd71c6bb024356bb7396d0de2ecfe45082b5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name&lt;/em&gt; of the permission can also denote a list of one or more comma-separated operations. Spaces are allowed at the beginning and end of the &lt;em&gt;name&lt;/em&gt; and before and after commas.</source>
          <target state="translated">権限の&lt;em&gt;名前&lt;/em&gt;は、1つ以上のコンマ区切りの操作のリストを表すこともできます。&lt;em&gt;名前の&lt;/em&gt;最初と最後、およびコンマの前後にはスペースを入れることができます。</target>
        </trans-unit>
        <trans-unit id="9480872eca819a401a143d99801ef4a81e78cc7a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;object name&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;オブジェクト名&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b8bea707941f307636110813bd9843488dbd1cb0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;opens&lt;/em&gt; directive in a module declaration declares a package to be open to allow all types in the package, and all their members, not just public types and their public members to be reflected on by APIs that support private access or a way to bypass or suppress default Java language access control checks.</source>
          <target state="translated">モジュール宣言の&lt;em&gt;opens&lt;/em&gt;ディレクティブは、パッケージが開いていることを宣言して、パッケージ内のすべてのタイプと、パブリックタイプとそのパブリックメンバーだけでなく、そのすべてのメンバーが、プライベートアクセスまたはバイパスする方法をサポートするAPIによって反映されるようにします。デフォルトのJava言語アクセス制御チェックを抑制します。</target>
        </trans-unit>
        <trans-unit id="5ea4f18aba4c5af225e35673d4891fc5fa9e0a6b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;origin&lt;/em&gt; of an element or other language model item.</source>
          <target state="translated">要素または他の言語モデルアイテムの&lt;em&gt;起源&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7bf772b2c89d559914753f218273f17b3f5fef8c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;origin&lt;/em&gt; of an element or other language model item. The origin of an element or item models how a construct in a program is declared in the source code, explicitly, implicitly, etc.</source>
          <target state="translated">要素または他の言語モデルアイテムの&lt;em&gt;起源&lt;/em&gt;。要素またはアイテムの起源は、プログラム内の構成がソースコードで明示的、暗黙的にどのように宣言されるかをモデル化します。</target>
        </trans-unit>
        <trans-unit id="f0e83e021e240eac4fd2981ea6d32868e52f81d8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;parent&lt;/em&gt; of an abstract pathname consists of the pathname's prefix, if any, and each name in the pathname's name sequence except for the last. If the name sequence is empty then the pathname does not name a parent directory.</source>
          <target state="translated">抽象パス名の&lt;em&gt;親&lt;/em&gt;は、パス名のプレフィックス（存在する場合）と、パス名の名前シーケンスの最後の名前を除く各名前で構成されます。名前シーケンスが空の場合、パス名は親ディレクトリを指定しません。</target>
        </trans-unit>
        <trans-unit id="89fec665c0c46c36e97a962d8fe4d0387ff30f83" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;parent&lt;/em&gt; of an abstract pathname may be obtained by invoking the &lt;a href=&quot;#getParent()&quot;&gt;&lt;code&gt;getParent()&lt;/code&gt;&lt;/a&gt; method of this class and consists of the pathname's prefix and each name in the pathname's name sequence except for the last. Each directory's absolute pathname is an ancestor of any &lt;code&gt;File&lt;/code&gt; object with an absolute abstract pathname which begins with the directory's absolute pathname. For example, the directory denoted by the abstract pathname &lt;code&gt;&quot;/usr&quot;&lt;/code&gt; is an ancestor of the directory denoted by the pathname &lt;code&gt;&quot;/usr/local/bin&quot;&lt;/code&gt;.</source>
          <target state="translated">抽象パス名の&lt;em&gt;親&lt;/em&gt;は、このクラスの&lt;a href=&quot;#getParent()&quot;&gt; &lt;code&gt;getParent()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得でき、パス名のプレフィックスと、最後を除くパス名の名前シーケンス内の各名前で構成されます。各ディレクトリの絶対パス名は、ディレクトリの絶対パス名で始まる絶対抽象パス名を持つ &lt;code&gt;File&lt;/code&gt; オブジェクトの祖先です。たとえば、抽象パス名 &lt;code&gt;&quot;/usr&quot;&lt;/code&gt; で示されるディレクトリは、パス名 &lt;code&gt;&quot;/usr/local/bin&quot;&lt;/code&gt; 示されるディレクトリの祖先です。</target>
        </trans-unit>
        <trans-unit id="d0528ba347878b821ba42755b3a17661463c339f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;parent&lt;/em&gt; of an abstract pathname may be obtained by invoking the &lt;a href=&quot;file#getParent--&quot;&gt;&lt;code&gt;getParent()&lt;/code&gt;&lt;/a&gt; method of this class and consists of the pathname's prefix and each name in the pathname's name sequence except for the last. Each directory's absolute pathname is an ancestor of any &lt;code&gt;File&lt;/code&gt; object with an absolute abstract pathname which begins with the directory's absolute pathname. For example, the directory denoted by the abstract pathname &lt;code&gt;&quot;/usr&quot;&lt;/code&gt; is an ancestor of the directory denoted by the pathname &lt;code&gt;&quot;/usr/local/bin&quot;&lt;/code&gt;.</source>
          <target state="translated">抽象パス名の&lt;em&gt;親&lt;/em&gt;は、このクラスの&lt;a href=&quot;file#getParent--&quot;&gt; &lt;code&gt;getParent()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得でき、パス名のプレフィックスと、パス名の名前シーケンスの最後の名前を除く各名前で構成されます。各ディレクトリの絶対パス名は、ディレクトリの絶対パス名で始まる絶対抽象パス名を持つ任意の &lt;code&gt;File&lt;/code&gt; オブジェクトの祖先です。たとえば、抽象パス名 &lt;code&gt;&quot;/usr&quot;&lt;/code&gt; で示されるディレクトリは、パス名 &lt;code&gt;&quot;/usr/local/bin&quot;&lt;/code&gt; 示されるディレクトリの祖先です。</target>
        </trans-unit>
        <trans-unit id="3219f3facb21696d1ed20d4e54a6c99ee13262e4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;pattern indication&lt;/em&gt; is:</source>
          <target state="translated">&lt;em&gt;パターンの表示は&lt;/em&gt;次のとおりです。</target>
        </trans-unit>
        <trans-unit id="75b0986f1f4d3f972e20d5706e48596a413d0f0a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;specified&lt;/em&gt; flag for each attribute will always be true, unless it has been set to false in the copy constructor or using &lt;a href=&quot;#setSpecified(int,boolean)&quot;&gt;&lt;code&gt;setSpecified(int, boolean)&lt;/code&gt;&lt;/a&gt;. Similarly, the &lt;em&gt;declared&lt;/em&gt; flag for each attribute will always be false, except for defaulted attributes (&lt;em&gt;specified&lt;/em&gt; is false), non-CDATA attributes, or when it is set to true using &lt;a href=&quot;#setDeclared(int,boolean)&quot;&gt;&lt;code&gt;setDeclared(int, boolean)&lt;/code&gt;&lt;/a&gt;. If you change an attribute's type by hand, you may need to modify its &lt;em&gt;declared&lt;/em&gt; flag to match.</source>
          <target state="translated">&lt;em&gt;指定された&lt;/em&gt;それは、コピーコンストラクタでfalseに設定されてか、使用していない限り、各属性のフラグは常に、trueになります&lt;a href=&quot;#setSpecified(int,boolean)&quot;&gt; &lt;code&gt;setSpecified(int, boolean)&lt;/code&gt; &lt;/a&gt;。同様に、各属性の&lt;em&gt;宣言された&lt;/em&gt;フラグは、デフォルトの属性（falseに&lt;em&gt;指定&lt;/em&gt;）、非CDATA属性、または&lt;a href=&quot;#setDeclared(int,boolean)&quot;&gt; &lt;code&gt;setDeclared(int, boolean)&lt;/code&gt; &lt;/a&gt;を使用してtrueに設定されている場合を除いて、常にfalseになります。属性のタイプを手動で変更する場合、一致するように&lt;em&gt;宣言された&lt;/em&gt;フラグを変更する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="e24706d6569ad24b7b450fbbe13dd7ea6ed5e827" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;time-to-live&lt;/em&gt; for Internet Protocol (IP) multicast datagrams</source>
          <target state="translated">&lt;em&gt;生存時間&lt;/em&gt;インターネット・プロトコル（IP）マルチキャストデータグラムのために</target>
        </trans-unit>
        <trans-unit id="2a0f0d9a04c7aa959de016e80e8a27f487dc3d88" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;time-to-live&lt;/em&gt; for Internet Protocol (IP) multicast datagrams.</source>
          <target state="translated">&lt;em&gt;生存時間&lt;/em&gt;インターネット・プロトコル（IP）マルチキャストデータグラムのために。</target>
        </trans-unit>
        <trans-unit id="cb26ab7b8c8e6681c6af9faff6deeeb55d0a5d1f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;unchecked&lt;/em&gt; memory address instance modelling the &lt;code&gt;NULL&lt;/code&gt; address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26dfea9030c19a22d94c096ae163a764273dd4b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;unchecked&lt;/em&gt; memory address instance modelling the &lt;code&gt;NULL&lt;/code&gt; address. This address is &lt;em&gt;not&lt;/em&gt; backed by a memory segment and hence it cannot be dereferenced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b9adb8936cb123ed7c1dde2b592cfab77ae3c9" translate="yes" xml:space="preserve">
          <source>The &lt;u&gt;&lt;a href=&quot;defaultstyleddocument&quot;&gt;&lt;code&gt;DefaultStyledDocument&lt;/code&gt;&lt;/a&gt;&lt;/u&gt; class, used for styled text, contains another level of Elements. This extra level is needed so that each paragraph can contain different styles of text. In the two paragraphs shown in &lt;u&gt;Figure 6&lt;/u&gt;, the first paragraph contains two styles and the second paragraph contains three styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9acc7331c0bb62597d02bf29306884fcbc07df" translate="yes" xml:space="preserve">
          <source>The &lt;u&gt;&lt;a href=&quot;plaindocument&quot;&gt;&lt;code&gt;PlainDocument&lt;/code&gt;&lt;/a&gt;&lt;/u&gt; class defines an Element structure in which the root node has a child node for each line of text in the model. &lt;u&gt;Figure 1&lt;/u&gt; shows how two lines of text would be modeled by a PlainDocument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69a19d85b8e44ea82b45f3ab6025bf32be35861" translate="yes" xml:space="preserve">
          <source>The &lt;u&gt;&lt;a href=&quot;styleddocument&quot;&gt;&lt;code&gt;StyledDocument&lt;/code&gt;&lt;/a&gt;&lt;/u&gt; class provides a method named &lt;code&gt;setCharacterAttributes()&lt;/code&gt;, which allows you to set the attributes on the character Elements in a given range:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5cbd78bbaec3014307f658d756d06fe19f45c6b" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;outer&lt;/var&gt; parameter is a pointer to the MBeanServer that should be passed to the &lt;a href=&quot;mbeanregistration&quot;&gt;&lt;code&gt;MBeanRegistration&lt;/code&gt;&lt;/a&gt; interface when registering MBeans inside the MBeanServer. If &lt;var&gt;outer&lt;/var&gt; is &lt;code&gt;null&lt;/code&gt;, then the MBeanServer implementation must use its own &lt;code&gt;this&lt;/code&gt; reference when invoking the &lt;a href=&quot;mbeanregistration&quot;&gt;&lt;code&gt;MBeanRegistration&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">&lt;var&gt;outer&lt;/var&gt; パラメータが渡されるべきであるMBeanServerへのポインタである&lt;a href=&quot;mbeanregistration&quot;&gt; &lt;code&gt;MBeanRegistration&lt;/code&gt; の&lt;/a&gt; MBeanServerの内部MBeanを登録する際のインターフェース。 &lt;var&gt;outer&lt;/var&gt; が &lt;code&gt;null&lt;/code&gt; の場合、MBeanServer実装は、&lt;a href=&quot;mbeanregistration&quot;&gt; &lt;code&gt;MBeanRegistration&lt;/code&gt; &lt;/a&gt;インターフェースを呼び出すときに独自の &lt;code&gt;this&lt;/code&gt; 参照を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="f59eba20773f5628795f2594c47e23e68f64a277" translate="yes" xml:space="preserve">
          <source>The ACL Entries in each ACL observe the following rules:</source>
          <target state="translated">各ACLのエントリーは、以下のルールを遵守します。</target>
        </trans-unit>
        <trans-unit id="8bff27e96b6704d8f87499203e5a6ae8eb995398" translate="yes" xml:space="preserve">
          <source>The ACL entry represented by this class is based on the ACL model specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;RFC 3530: Network File System (NFS) version 4 Protocol&lt;/i&gt;&lt;/a&gt;. Each entry has four components as follows:</source>
          <target state="translated">このクラスで表されるACLエントリは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;RFC 3530：Network File System（NFS）version 4 Protocolで&lt;/i&gt;&lt;/a&gt;指定されているACLモデルに基づいています。各エントリには、次の4つのコンポーネントがあります。</target>
        </trans-unit>
        <trans-unit id="ca592302262da526d39a62951c512b3c1b6f0bf7" translate="yes" xml:space="preserve">
          <source>The ACL entry represented by this class is based on the ACL model specified in &lt;a href=&quot;https://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;RFC 3530: Network File System (NFS) version 4 Protocol&lt;/i&gt;&lt;/a&gt;. Each entry has four components as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7935a2f1ee484e91861f127adcc137f1458cac88" translate="yes" xml:space="preserve">
          <source>The API allows a concrete &lt;a href=&quot;transformerfactory&quot;&gt;&lt;code&gt;TransformerFactory&lt;/code&gt;&lt;/a&gt; object to be created from the static function &lt;a href=&quot;transformerfactory#newInstance()&quot;&gt;&lt;code&gt;TransformerFactory.newInstance()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">APIを使用すると、静的関数&lt;a href=&quot;transformerfactory#newInstance()&quot;&gt; &lt;code&gt;TransformerFactory.newInstance()&lt;/code&gt; &lt;/a&gt;から具体的な&lt;a href=&quot;transformerfactory&quot;&gt; &lt;code&gt;TransformerFactory&lt;/code&gt; &lt;/a&gt;オブジェクトを作成できます。</target>
        </trans-unit>
        <trans-unit id="36548e1972814e3b9960a257ac0e7fefe094719d" translate="yes" xml:space="preserve">
          <source>The API has a relatively large surface area in terms of number of methods. This is made manageable through the use of consistent method prefixes.</source>
          <target state="translated">APIはメソッド数の点で比較的大きな表面積を持っています。これは、一貫したメソッドの接頭辞を使用することで管理しやすくなっています。</target>
        </trans-unit>
        <trans-unit id="dbd68d7bbcc6cfd76b2979294dc860ef940a8a77" translate="yes" xml:space="preserve">
          <source>The API has been designed to reject null early and to be clear about this behavior. A key exception is any method that takes an object and returns a boolean, for the purpose of checking or validating, will generally return false for null.</source>
          <target state="translated">APIはNULLを早期に拒否し、この動作を明確にするように設計されています。重要な例外として、オブジェクトを受け取り、チェックや検証の目的でブール値を返すメソッドは、一般的に null の場合は false を返します。</target>
        </trans-unit>
        <trans-unit id="5d2d1219bb89c1b00654a21e6d21d64a9c99c7dd" translate="yes" xml:space="preserve">
          <source>The API includes remote access, so a remote management program can interact with a running application for these purposes.</source>
          <target state="translated">APIにはリモートアクセスが含まれているため、リモート管理プログラムはこれらの目的のために実行中のアプリケーションと対話することができます。</target>
        </trans-unit>
        <trans-unit id="0ddb46698ab6320ca268f051f9fdff93cea456dc" translate="yes" xml:space="preserve">
          <source>The API is also designed for user extensibility, as there are many ways of calculating time. The &lt;a href=&quot;temporal/temporalfield&quot;&gt;field&lt;/a&gt; and &lt;a href=&quot;temporal/temporalunit&quot;&gt;unit&lt;/a&gt; API, accessed via &lt;a href=&quot;temporal/temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/temporal&quot;&gt;&lt;code&gt;Temporal&lt;/code&gt;&lt;/a&gt; provide considerable flexibility to applications. In addition, the &lt;a href=&quot;temporal/temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/temporaladjuster&quot;&gt;&lt;code&gt;TemporalAdjuster&lt;/code&gt;&lt;/a&gt; interfaces provide day-to-day power, allowing code to read close to business requirements:</source>
          <target state="translated">時間を計算する方法はたくさんあるので、APIはユーザーの拡張性を考慮して設計されています。&lt;a href=&quot;temporal/temporalfield&quot;&gt;フィールド&lt;/a&gt;および&lt;a href=&quot;temporal/temporalunit&quot;&gt;ユニット&lt;/a&gt;を介してアクセスAPI、&lt;a href=&quot;temporal/temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;temporal/temporal&quot;&gt; &lt;code&gt;Temporal&lt;/code&gt; &lt;/a&gt;アプリケーションにかなりの柔軟性を提供します。さらに、&lt;a href=&quot;temporal/temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;temporal/temporaladjuster&quot;&gt; &lt;code&gt;TemporalAdjuster&lt;/code&gt; &lt;/a&gt;インターフェイスは日々の能力を提供し、コードがビジネス要件に近い読み取りを可能にします。</target>
        </trans-unit>
        <trans-unit id="9d4850815012acd78d63e490cb3a9ac9619de1e0" translate="yes" xml:space="preserve">
          <source>The API is defined by classes in the package &lt;code&gt;javax.smartcardio&lt;/code&gt;. They can be classified as follows:</source>
          <target state="translated">APIは、パッケージ &lt;code&gt;javax.smartcardio&lt;/code&gt; のクラスによって定義されます。それらは次のように分類できます。</target>
        </trans-unit>
        <trans-unit id="14204c857d829d56ea62ee7c57aa99da1a8c1fa8" translate="yes" xml:space="preserve">
          <source>The API is designed to be type-safe where reasonable in the main high-level API. Thus, there are separate classes for the distinct concepts of date, time and date-time, plus variants for offset and time-zone. This can seem like a lot of classes, but most applications can begin with just five date/time types.</source>
          <target state="translated">このAPIは、メインの高レベルAPIの中で合理的なところでは型安全であるように設計されています。このように、日付、時刻、日付-時刻という明確な概念のための別々のクラスがあり、さらにオフセットとタイムゾーンのためのバリアントがあります。これは多くのクラスがあるように見えますが、ほとんどのアプリケーションでは5つの日付/時刻型だけで始めることができます。</target>
        </trans-unit>
        <trans-unit id="4c946352687beebbc767bf6f2e149b6a14c7e762" translate="yes" xml:space="preserve">
          <source>The API leverages the JCA provider model (see &lt;a href=&quot;../../../../../java.base/java/security/provider&quot;&gt;&lt;code&gt;the Provider class&lt;/code&gt;&lt;/a&gt;) for registering and loading &lt;code&gt;XMLSignatureFactory&lt;/code&gt; and &lt;code&gt;KeyInfoFactory&lt;/code&gt; implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef3ef0b96f3f41f9bc604e1a12e6451e41174cc" translate="yes" xml:space="preserve">
          <source>The API provides a way for URIs referenced from within the stylesheet instructions or within the transformation to be resolved by the calling application. This can be done by creating a class that implements the &lt;a href=&quot;uriresolver&quot;&gt;&lt;code&gt;URIResolver&lt;/code&gt;&lt;/a&gt; interface, with its one method, &lt;a href=&quot;uriresolver#resolve(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;URIResolver.resolve(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt;, and use this class to set the URI resolution for the transformation instructions or transformation with &lt;a href=&quot;transformerfactory#setURIResolver(javax.xml.transform.URIResolver)&quot;&gt;&lt;code&gt;TransformerFactory.setURIResolver(javax.xml.transform.URIResolver)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;transformer#setURIResolver(javax.xml.transform.URIResolver)&quot;&gt;&lt;code&gt;Transformer.setURIResolver(javax.xml.transform.URIResolver)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;URIResolver.resolve&lt;/code&gt; method takes two String arguments, the URI found in the stylesheet instructions or built as part of the transformation process, and the base URI against which the first argument will be made absolute if the absolute URI is required. The returned &lt;a href=&quot;source&quot;&gt;&lt;code&gt;Source&lt;/code&gt;&lt;/a&gt; object must be usable by the transformer, as specified in its implemented features.</source>
          <target state="translated">APIは、スタイルシート命令内または変換内から参照されるURIを、呼び出し元のアプリケーションによって解決する方法を提供します。これは、&lt;a href=&quot;uriresolver&quot;&gt; &lt;code&gt;URIResolver&lt;/code&gt; &lt;/a&gt;インターフェイスを実装するクラスを1つのメソッド&lt;a href=&quot;uriresolver#resolve(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;URIResolver.resolve(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt;で作成し、このクラスを使用して変換命令のURI解像度を設定することで実行できます。形質転換&lt;a href=&quot;transformerfactory#setURIResolver(javax.xml.transform.URIResolver)&quot;&gt; &lt;code&gt;TransformerFactory.setURIResolver(javax.xml.transform.URIResolver)&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;transformer#setURIResolver(javax.xml.transform.URIResolver)&quot;&gt; &lt;code&gt;Transformer.setURIResolver(javax.xml.transform.URIResolver)&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;URIResolver.resolve&lt;/code&gt; メソッドは2つの文字列引数を取ります。スタイルシート命令で見つかった、または変換プロセスの一部として構築されたURIと、絶対URIが必要な場合に最初の引数が絶対になるベースURIです。返される&lt;a href=&quot;source&quot;&gt; &lt;code&gt;Source&lt;/code&gt; &lt;/a&gt;オブジェクトは、実装された機能で指定されているように、トランスフォーマーで使用できる必要があります。</target>
        </trans-unit>
        <trans-unit id="1d7455826253bffa39b78615725dcdd563f19a04" translate="yes" xml:space="preserve">
          <source>The API requires every print service to support certain attributes; other attributes are optional and the service can choose whether or not to support them. Each attribute has a set of values that it accepts. The API requires every print service to support certain values for certain attributes; other attribute values are optional and the service can choose whether or not to support them. These support requirements are recorded in the documentation for each attribute class.</source>
          <target state="translated">APIでは、すべての印刷サービスが特定の属性をサポートする必要があります。各属性には、受け入れられる値のセットがあります。その他の属性の値はオプションであり、サービスはそれらをサポートするかどうかを選択することができます。これらのサポート要件は、各属性クラスのドキュメントに記録されています。</target>
        </trans-unit>
        <trans-unit id="98bf436512bc6abd974a2733430a3d5b5a388d6c" translate="yes" xml:space="preserve">
          <source>The APIs added in 1.7 map between the old and new language codes, maintaining the old codes internal to Locale (so that &lt;code&gt;getLanguage&lt;/code&gt; and &lt;code&gt;toString&lt;/code&gt; reflect the old code), but using the new codes in the BCP 47 language tag APIs (so that &lt;code&gt;toLanguageTag&lt;/code&gt; reflects the new one). This preserves the equivalence between Locales no matter which code or API is used to construct them. Java's default resource bundle lookup mechanism also implements this mapping, so that resources can be named using either convention, see &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">1.7で追加されたAPIは、古い言語コードと新しい言語コードを &lt;code&gt;getLanguage&lt;/code&gt; 、Locale内部の古いコードを維持し（getLanguageと &lt;code&gt;toString&lt;/code&gt; が古いコードを反映するように）、BCP 47言語タグAPIで新しいコードを使用する（ &lt;code&gt;toLanguageTag&lt;/code&gt; が反映するように）新しい方）。これにより、どのコードまたはAPIを使用してロケールを構築しても、ロケール間の同等性が維持されます。Javaのデフォルトのリソースバンドルの検索メカニズムもそうリソースはいずれかの規則を使用して命名することができ、参照、このマッピングを実装&lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; のを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6023c5172deb2e42606e029f4d360e805d38b457" translate="yes" xml:space="preserve">
          <source>The APIs in this package are all deprecated without replacement.</source>
          <target state="translated">本パッケージの API はすべて非推奨です。</target>
        </trans-unit>
        <trans-unit id="1e8aa36e1e31661c0e8ce5465a873be7b0631796" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition for this is:</source>
          <target state="translated">そのためのASN.1の定義は</target>
        </trans-unit>
        <trans-unit id="943be2a0bc4bf87f26928040bf4bf42222a1a4d3" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition is as follows:</source>
          <target state="translated">ASN.1の定義は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="33b3e4f975d64c40485d484aff9c8c6946bbcac2" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition of &lt;code&gt;GeneralNames&lt;/code&gt; is defined in &lt;a href=&quot;#getSubjectAlternativeNames()&quot;&gt;&lt;code&gt;getSubjectAlternativeNames&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GeneralNames&lt;/code&gt; のASN.1定義は、&lt;a href=&quot;#getSubjectAlternativeNames()&quot;&gt; &lt;code&gt;getSubjectAlternativeNames&lt;/code&gt; &lt;/a&gt;で定義されています。</target>
        </trans-unit>
        <trans-unit id="47734034dda78f218c309ac08628f954c60425f3" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition of &lt;code&gt;GeneralNames&lt;/code&gt; is defined in &lt;a href=&quot;x509certificate#getSubjectAlternativeNames--&quot;&gt;&lt;code&gt;getSubjectAlternativeNames&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GeneralNames&lt;/code&gt; のASN.1定義は、&lt;a href=&quot;x509certificate#getSubjectAlternativeNames--&quot;&gt; &lt;code&gt;getSubjectAlternativeNames&lt;/code&gt; &lt;/a&gt;で定義されています。</target>
        </trans-unit>
        <trans-unit id="8d4394df37dee40fdf32c164d9e7675520b84225" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition of &lt;code&gt;tbsCertList&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;tbsCertList&lt;/code&gt; のASN.1定義は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="f3b0786ad17cd85c2406e5dec048d22519850b47" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition of &lt;code&gt;tbsCertificate&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;tbsCertificate&lt;/code&gt; のASN.1定義は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ef48af476f938c6dbaa3d39664736786a596b706" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition of the &lt;code&gt;IssuerAltName&lt;/code&gt; extension is:</source>
          <target state="translated">&lt;code&gt;IssuerAltName&lt;/code&gt; 拡張機能のASN.1定義は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="f3bfe2daf1a8d1055520bbddc7ce3310410386b4" translate="yes" xml:space="preserve">
          <source>The ASN.1 definition of the &lt;code&gt;SubjectAltName&lt;/code&gt; extension is:</source>
          <target state="translated">&lt;code&gt;SubjectAltName&lt;/code&gt; 拡張機能のASN.1定義は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ef7fb5e463d8e7a85b7d17a9a4424f5c59dec8a2" translate="yes" xml:space="preserve">
          <source>The AWT Focus Subsystem</source>
          <target state="translated">AWTフォーカスサブシステム</target>
        </trans-unit>
        <trans-unit id="c23a37e89e94656b7c67efc2143f08a7162a7dc6" translate="yes" xml:space="preserve">
          <source>The AWT Modality</source>
          <target state="translated">AWTモダリティ</target>
        </trans-unit>
        <trans-unit id="b973428a4010a2e2c6902dfcdc73ebef4dc85d16" translate="yes" xml:space="preserve">
          <source>The AWT listener model lets applications attach event listeners to components in order to bind events to actions. Swing encourages the use of keymaps instead of listeners, but maintains compatibility with listeners by giving the listeners a chance to steal an event by consuming it.</source>
          <target state="translated">AWTリスナーモデルでは、アプリケーションはイベントリスナーをコンポーネントにアタッチして、イベントをアクションに結びつけることができます。Swingはリスナーの代わりにキーマップの使用を奨励していますが、リスナーがイベントを消費することでイベントを盗むチャンスを与えることで、リスナーとの互換性を維持しています。</target>
        </trans-unit>
        <trans-unit id="0669e573aa756da1edc3404f2ca12e839dcd44e2" translate="yes" xml:space="preserve">
          <source>The AccessControlContext of the thread that created the instance of URLClassLoader will be used when subsequently loading classes and resources.</source>
          <target state="translated">URLClassLoader のインスタンスを作成したスレッドの AccessControlContext は、その後にクラスやリソースをロードする際に使用されます。</target>
        </trans-unit>
        <trans-unit id="b36f05d0d881d326a4ca7052f41c11e7cb29b4d8" translate="yes" xml:space="preserve">
          <source>The AccessController class is used for access control operations and decisions.</source>
          <target state="translated">アクセス制御の操作や判断にはAccessControllerクラスを使用します。</target>
        </trans-unit>
        <trans-unit id="e44ca12442a1e7b0c2ea9c89fdb764999e8954ae" translate="yes" xml:space="preserve">
          <source>The AccessibleObject class is the base class for Field, Method and Constructor objects.</source>
          <target state="translated">AccessibleObject クラスは、Field、Method、Constructor オブジェクトの基底クラスです。</target>
        </trans-unit>
        <trans-unit id="6a4566430ddc25f7244284392e568dac22b82186" translate="yes" xml:space="preserve">
          <source>The AccessibleObject class is the base class for Field, Method and Constructor objects. It provides the ability to flag a reflected object as suppressing default Java language access control checks when it is used. The access checks--for public, default (package) access, protected, and private members--are performed when Fields, Methods or Constructors are used to set or get fields, to invoke methods, or to create and initialize new instances of classes, respectively.</source>
          <target state="translated">AccessibleObjectクラスは、Field、Method、Constructorオブジェクトの基底クラスです。これは、反映されたオブジェクトが使用されたときに、デフォルトのJava言語のアクセス制御チェックを抑制するようにフラグを立てる機能を提供します。アクセス・チェックは、public、default (package)アクセス、protected、private の各メンバに対して、フィールド、メソッド、コンストラクタが、フィールドの設定や取得、メソッドの呼び出し、クラスの新しいインスタンスの作成や初期化にそれぞれ使用されたときに実行されます。</target>
        </trans-unit>
        <trans-unit id="a68ea02747038a8e45417b19cd5c6838a7022a98" translate="yes" xml:space="preserve">
          <source>The AffineTransform parameter passed into and out of this class are cloned. The RenderingHints and Shape parameters are not necessarily cloneable and are therefore only reference copied. Altering RenderingHints or Shape instances that are in use by instances of RenderContext may have undesired side effects.</source>
          <target state="translated">このクラスに出し入れするAffineTransformパラメータはクローン化されます。RenderingHints と Shape パラメータは必ずしも複製可能ではないため、参照コピーのみとなります。RenderContext のインスタンスで使用されている RenderingHints や Shape インスタンスを変更すると、望ましくない副作用が生じる可能性があります。</target>
        </trans-unit>
        <trans-unit id="6784e3abc090fab94e5244fcbe90ade6d9424123" translate="yes" xml:space="preserve">
          <source>The AllPermission is a permission that implies all other permissions.</source>
          <target state="translated">AllPermissionは、他のすべてのパーミッションを暗示するパーミッションです。</target>
        </trans-unit>
        <trans-unit id="160ae22b65044b8568a8445e371a31bf8aaf3856" translate="yes" xml:space="preserve">
          <source>The Alt key extended modifier constant.</source>
          <target state="translated">Altキーの拡張修飾子定数です。</target>
        </trans-unit>
        <trans-unit id="c32b87d13e51010df9b131a2a159c6f08c4061cc" translate="yes" xml:space="preserve">
          <source>The Alt key modifier constant.</source>
          <target state="translated">Altキー修飾子の定数。</target>
        </trans-unit>
        <trans-unit id="67ebaec467a6e9959ba36c0e74821764b3f28d0e" translate="yes" xml:space="preserve">
          <source>The AltGraph key extended modifier constant.</source>
          <target state="translated">AltGraph キー拡張修飾子定数。</target>
        </trans-unit>
        <trans-unit id="af96a3451e70135ea5a5f5dfb4bc7b7416b43b8e" translate="yes" xml:space="preserve">
          <source>The AltGraph key modifier constant.</source>
          <target state="translated">AltGraph キー修飾子定数。</target>
        </trans-unit>
        <trans-unit id="6868186048f362d856c90c60963c84a42086381e" translate="yes" xml:space="preserve">
          <source>The Applet API is deprecated, no replacement.</source>
          <target state="translated">Applet APIは非推奨で、代替はありません。</target>
        </trans-unit>
        <trans-unit id="952898db7755e8938613fa579a9e9fc86b6e5a52" translate="yes" xml:space="preserve">
          <source>The Applet API is deprecated.</source>
          <target state="translated">Applet APIは非推奨です。</target>
        </trans-unit>
        <trans-unit id="8dd33816bcdb119edd3850a36cdb8640a02f66c5" translate="yes" xml:space="preserve">
          <source>The Applet API is deprecated. See the &lt;a href=&quot;../../java/applet/package-summary&quot;&gt; java.applet package documentation&lt;/a&gt; for further information.</source>
          <target state="translated">アプレットAPIは非推奨です。詳細については、&lt;a href=&quot;../../java/applet/package-summary&quot;&gt;java.appletパッケージのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3fde7dcfee0eaa7810b2d3e4119c1b3003baeb65" translate="yes" xml:space="preserve">
          <source>The Applet API is deprecated. See the &lt;a href=&quot;../applet/package-summary&quot;&gt; java.applet package documentation&lt;/a&gt; for further information.</source>
          <target state="translated">アプレットAPIは非推奨です。詳細については、&lt;a href=&quot;../applet/package-summary&quot;&gt;java.appletパッケージのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="074b0f1a024ad247a895c2f41c9dab31804bb1f1" translate="yes" xml:space="preserve">
          <source>The Arabic range with the Arabic-Indic digits.</source>
          <target state="translated">アラビア語の範囲をアラビア語-インド語の桁数で表します。</target>
        </trans-unit>
        <trans-unit id="5f0a7cc180f7ec121449f8ad22a0f254f01aed33" translate="yes" xml:space="preserve">
          <source>The Arabic range with the Eastern Arabic-Indic digits.</source>
          <target state="translated">東部のアラビア語-インド語の桁数を持つアラビア語の範囲。</target>
        </trans-unit>
        <trans-unit id="9b559b3d068940514b3b2c10adaad5cfb38dfc1e" translate="yes" xml:space="preserve">
          <source>The Area class will attempt to return the tightest bounding box possible for the Shape. The bounding box will not be padded to include the control points of curves in the outline of the Shape, but should tightly fit the actual geometry of the outline itself.</source>
          <target state="translated">Areaクラスは、Shapeに対して可能な限りタイトな外接枠を返そうとします。Shapeのアウトラインに曲線の制御点が含まれるようにバウンディングボックスはパディングされませんが、アウトライン自体の実際のジオメトリにぴったりとフィットするようにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="9477ca8f0c7cd6500bd0479d8977d02cdcbaf631" translate="yes" xml:space="preserve">
          <source>The Area class will attempt to return the tightest bounding box possible for the Shape. The bounding box will not be padded to include the control points of curves in the outline of the Shape, but should tightly fit the actual geometry of the outline itself. Since the returned object represents the bounding box with integers, the bounding box can only be as tight as the nearest integer coordinates that encompass the geometry of the Shape.</source>
          <target state="translated">Areaクラスは、Shapeに対して可能な限りタイトな外接枠を返そうとします。外接枠は、シェイプのアウトラインの曲線の制御点を含むようにパディングされることはありませんが、アウトライン自体の実際のジオメトリにぴったりとフィットするようにしなければなりません。返されたオブジェクトは整数でバウンディングボックスを表しているため、バウンディングボックスはシェイプのジオメトリを包含する最も近い整数の座標と同じくらいしかタイトにすることができません。</target>
        </trans-unit>
        <trans-unit id="e40e5d487b331e1f7f4c2477322a84662ea1dcde" translate="yes" xml:space="preserve">
          <source>The Art of Computer Programming</source>
          <target state="translated">コンピュータ・プログラミングの技術</target>
        </trans-unit>
        <trans-unit id="3e916cc17dff2d73e810c4085e8846b18e562a3e" translate="yes" xml:space="preserve">
          <source>The Art of Computer Programming,</source>
          <target state="translated">コンピュータ・プログラミングの芸術。</target>
        </trans-unit>
        <trans-unit id="d69bacd54b669ff7d878e60414c2d1f8611ca3a2" translate="yes" xml:space="preserve">
          <source>The Art of Computer Programming, Volume 2</source>
          <target state="translated">コンピュータ・プログラミングの技術 第2巻</target>
        </trans-unit>
        <trans-unit id="545bef1b9e1299301bb2907b1e213bfe088b7b67" translate="yes" xml:space="preserve">
          <source>The Attribute with attrID that was previous in this attribute set; null if no such attribute existed.</source>
          <target state="translated">この属性セットの前にあった attrID を持つ Attribute;そのような属性が存在しない場合は null。</target>
        </trans-unit>
        <trans-unit id="86989bf0d4a1d404f5eef67b394b9e8347a4cb82" translate="yes" xml:space="preserve">
          <source>The Attribute with the same ID as attr that was previous in this attribute set; null if no such attribute existed.</source>
          <target state="translated">この属性セットの前にあったattrと同じIDを持つ属性。</target>
        </trans-unit>
        <trans-unit id="188be4b00e3695b200467797aef29ec1a27bdb7b" translate="yes" xml:space="preserve">
          <source>The Attribute with the same ID as attrID that was previous in the attribute set; null if no such attribute existed.</source>
          <target state="translated">属性セットの前にあったattrIDと同じIDを持つ属性。</target>
        </trans-unit>
        <trans-unit id="17831de708d75ed43f9af6c62286f3a3d590fbe3" translate="yes" xml:space="preserve">
          <source>The Attributes class maps Manifest attribute names to associated string values.</source>
          <target state="translated">Attributes クラスは、マニフェスト属性名を関連付けられた文字列値にマッピングします。</target>
        </trans-unit>
        <trans-unit id="11106864e8cece63f4df274160f30c89327ce115" translate="yes" xml:space="preserve">
          <source>The Attributes class maps Manifest attribute names to associated string values. Valid attribute names are case-insensitive, are restricted to the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 characters in length. Attribute values can contain any characters and will be UTF8-encoded when written to the output stream. See the JAR File Specification for more information about valid attribute names and values.</source>
          <target state="translated">属性クラスは、マニフェスト属性名を関連する文字列値にマッピングします。有効な属性名は大文字小文字を区別せず、[0-9a-zA-Z_-]のセットのASCII文字に制限され、長さは70文字を超えることはできません。属性値は任意の文字を含むことができ、出力ストリームに書き込まれる際にはUTF8エンコードされます。有効な属性名と値の詳細については、JAR ファイル仕様書を参照してください。</target>
        </trans-unit>
        <trans-unit id="3ef11f26de12755419a148282a58582ba21062d2" translate="yes" xml:space="preserve">
          <source>The Attributes class maps Manifest attribute names to associated string values. Valid attribute names are case-insensitive, are restricted to the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 characters in length. There must be a colon and a SPACE after the name; the combined length will not exceed 72 characters. Attribute values can contain any characters and will be UTF8-encoded when written to the output stream. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jar/jar.html&quot;&gt;JAR File Specification&lt;/a&gt; for more information about valid attribute names and values.</source>
          <target state="translated">属性クラスは、マニフェスト属性名を関連する文字列値にマップします。有効な属性名は大文字と小文字を区別せず、セット[0-9a-zA-Z_-]内のASCII文字に制限されており、長さが70文字を超えることはできません。名前の後にコロンとスペースが必要です。合計の長さは72文字を超えません。属性値には任意の文字を含めることができ、出力ストリームに書き込まれるときにUTF8でエンコードされます。有効な属性名と値の詳細については、&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jar/jar.html&quot;&gt;JARファイル仕様&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ce1aaf9434adb65a9c7d2a62816880427b08624f" translate="yes" xml:space="preserve">
          <source>The Attributes class maps Manifest attribute names to associated string values. Valid attribute names are case-insensitive, are restricted to the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 characters in length. There must be a colon and a SPACE after the name; the combined length will not exceed 72 characters. Attribute values can contain any characters and will be UTF8-encoded when written to the output stream. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jar/jar.html&quot;&gt;JAR File Specification&lt;/a&gt; for more information about valid attribute names and values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1b32f55e754aebc8c66e80e5a265f6ce9b4d29" translate="yes" xml:space="preserve">
          <source>The Attributes.Name class represents an attribute name stored in this Map.</source>
          <target state="translated">Attributes.Name クラスは、このマップに格納されている属性名を表します。</target>
        </trans-unit>
        <trans-unit id="e586abe0903b7ef3e0a894bd9fa0abd2347cbc7b" translate="yes" xml:space="preserve">
          <source>The Attributes.Name class represents an attribute name stored in this Map. Valid attribute names are case-insensitive, are restricted to the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 characters in length. Attribute values can contain any characters and will be UTF8-encoded when written to the output stream. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jar/jar.html&quot;&gt;JAR File Specification&lt;/a&gt; for more information about valid attribute names and values.</source>
          <target state="translated">attributes.Nameクラスは、このマップに格納されている属性名を表します。有効な属性名は大文字と小文字を区別せず、セット[0-9a-zA-Z_-]内のASCII文字に制限されており、長さが70文字を超えることはできません。属性値には任意の文字を含めることができ、出力ストリームに書き込まれるときにUTF8でエンコードされます。有効な属性名と値の詳細については、&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jar/jar.html&quot;&gt;JARファイル仕様&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="cf343f226e4f6526f09040d66bbe4bcf74baa90b" translate="yes" xml:space="preserve">
          <source>The Attributes.Name class represents an attribute name stored in this Map. Valid attribute names are case-insensitive, are restricted to the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 characters in length. Attribute values can contain any characters and will be UTF8-encoded when written to the output stream. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jar/jar.html&quot;&gt;JAR File Specification&lt;/a&gt; for more information about valid attribute names and values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130d29f5e1935938287de918b31d59eac532adc8" translate="yes" xml:space="preserve">
          <source>The Attributes.Name class represents an attribute name stored in this Map. Valid attribute names are case-insensitive, are restricted to the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 characters in length. Attribute values can contain any characters and will be UTF8-encoded when written to the output stream. See the JAR File Specification for more information about valid attribute names and values.</source>
          <target state="translated">Attributes.Name クラスは、このマップに格納されている属性名を表します。有効な属性名は大文字小文字を区別せず、[0-9a-zA-Z_-]セットの ASCII 文字に制限されます。属性値には任意の文字を含めることができ、出力ストリームに書き込まれると UTF8 エンコードされます。有効な属性名と値の詳細については、JAR ファイル仕様書を参照してください。</target>
        </trans-unit>
        <trans-unit id="933c13e97de653f311c0095da4356feb1ef9aa07" translate="yes" xml:space="preserve">
          <source>The BIDI_EMBEDDING attribute in the text, if present, represents embedding level information. Negative values from -1 to -62 indicate overrides at the absolute value of the level. Positive values from 1 to 62 indicate embeddings. Where values are zero or not defined, the base embedding level as determined by the base direction is assumed.</source>
          <target state="translated">テキスト内の BIDI_EMBEDDING 属性が存在する場合、埋め込みレベル情報を表します。1から-62までの負の値は、レベルの絶対値でのオーバーライドを示す。1から62までの正の値は、エンベッディングを示す。値がゼロであるか定義されていない場合には、ベース方向によって決定されるベース埋め込みレベルが想定される。</target>
        </trans-unit>
        <trans-unit id="0a6d149de56262f01e5e36cd8497b77dee6738e2" translate="yes" xml:space="preserve">
          <source>The BackSpace key.</source>
          <target state="translated">BackSpaceキーです。</target>
        </trans-unit>
        <trans-unit id="39a8d250337b403c7a9d7f4737d5c4ebb7d43c9b" translate="yes" xml:space="preserve">
          <source>The Balinese range with the Balinese digits.</source>
          <target state="translated">バリの桁数でバリのレンジ。</target>
        </trans-unit>
        <trans-unit id="479b03243c34870565e01fcb4d8b7558405fd430" translate="yes" xml:space="preserve">
          <source>The Base64 padding character &lt;code&gt;'='&lt;/code&gt; is accepted and interpreted as the end of the encoded byte data, but is not required. So if the final unit of the encoded byte data only has two or three Base64 characters (without the corresponding padding character(s) padded), they are decoded as if followed by padding character(s). If there is a padding character present in the final unit, the correct number of padding character(s) must be present, otherwise &lt;code&gt;IllegalArgumentException&lt;/code&gt; ( &lt;code&gt;IOException&lt;/code&gt; when reading from a Base64 stream) is thrown during decoding.</source>
          <target state="translated">Base64パディング文字 &lt;code&gt;'='&lt;/code&gt; は受け入れられ、エンコードされたバイトデータの終わりとして解釈されますが、必須ではありません。したがって、エンコードされたバイトデータの最後のユニットに2つまたは3つのBase64文字のみが含まれている場合（対応する埋め込み文字が埋め込まれていない場合）、それらは埋め込み文字が続くかのようにデコードされます。最後のユニットにパディング文字が存在する場合は、正しい数のパディング文字が存在する必要があります。それ以外の場合は、デコード中に &lt;code&gt;IllegalArgumentException&lt;/code&gt; （Base64ストリームから読み取る &lt;code&gt;IOException&lt;/code&gt; ）がスローされます。</target>
        </trans-unit>
        <trans-unit id="7f2fa42fffaffc455185b2641418acb565381be2" translate="yes" xml:space="preserve">
          <source>The BasicPermission class extends the Permission class, and can be used as the base class for permissions that want to follow the same naming convention as BasicPermission.</source>
          <target state="translated">BasicPermissionクラスはPermissionクラスを拡張したもので、BasicPermissionと同じ命名規則に従いたいパーミッションの基底クラスとして使用することができます。</target>
        </trans-unit>
        <trans-unit id="d8109724094de0721a57a12d33075bebc3a6c1d9" translate="yes" xml:space="preserve">
          <source>The BasicReason enumerates the potential reasons that a certification path of any type may be invalid.</source>
          <target state="translated">BasicReason は、任意のタイプの認証パスが無効である可能性がある潜在的な理由を列挙します。</target>
        </trans-unit>
        <trans-unit id="7f2f07330207c79bdf9b8035cdfc8c33b0b86b6f" translate="yes" xml:space="preserve">
          <source>The BeanContext acts a logical hierarchical container for JavaBeans.</source>
          <target state="translated">BeanContextは、JavaBeansの論理階層コンテナとして動作します。</target>
        </trans-unit>
        <trans-unit id="db9f214e6794613d1af4a4bd16aca364a324671d" translate="yes" xml:space="preserve">
          <source>The BeanContextServices interface provides a mechanism for a BeanContext to expose generic &quot;services&quot; to the BeanContextChild objects within.</source>
          <target state="translated">BeanContextServicesインタフェースは,BeanContext内のBeanContextChildオブジェクトに汎用的な「サービス」を公開するためのBeanContextのメカニズムを提供します。</target>
        </trans-unit>
        <trans-unit id="28e60bfa8d3958dbf027cd9ce5a707ff9a06e8f0" translate="yes" xml:space="preserve">
          <source>The Bengali range with the Bengali digits.</source>
          <target state="translated">ベンガル語の数字を使ったベンガル語の範囲です。</target>
        </trans-unit>
        <trans-unit id="61f473874cda4877ad49e4b4e18b2669d648bcfa" translate="yes" xml:space="preserve">
          <source>The BigInteger constant one.</source>
          <target state="translated">BigIntegerの定数1。</target>
        </trans-unit>
        <trans-unit id="4fe20da433bea836e2620a8e5bd24465caa34b0d" translate="yes" xml:space="preserve">
          <source>The BigInteger constant ten.</source>
          <target state="translated">BigInteger定数10。</target>
        </trans-unit>
        <trans-unit id="2ae94bca84a3b818bb066e53ab21fbe4a5a93bac" translate="yes" xml:space="preserve">
          <source>The BigInteger constant two.</source>
          <target state="translated">BigIntegerの定数2。</target>
        </trans-unit>
        <trans-unit id="eaa19daee6ceb68fa207da723944fc65078e9b5c" translate="yes" xml:space="preserve">
          <source>The BigInteger constant zero.</source>
          <target state="translated">BigIntegerの定数ゼロ。</target>
        </trans-unit>
        <trans-unit id="f2abfa8bc11f1cc0906af68cb43302c5e56e7dbc" translate="yes" xml:space="preserve">
          <source>The Boolean class wraps a value of the primitive type &lt;code&gt;boolean&lt;/code&gt; in an object.</source>
          <target state="translated">Booleanクラスは、プリミティブ型 &lt;code&gt;boolean&lt;/code&gt; の値をオブジェクトにラップします。</target>
        </trans-unit>
        <trans-unit id="d66eb41900b1a53b5e15c061f84c26f96aec8f20" translate="yes" xml:space="preserve">
          <source>The Boolean class wraps a value of the primitive type &lt;code&gt;boolean&lt;/code&gt; in an object. An object of type &lt;code&gt;Boolean&lt;/code&gt; contains a single field whose type is &lt;code&gt;boolean&lt;/code&gt;.</source>
          <target state="translated">Booleanクラスは、プリミティブ型 &lt;code&gt;boolean&lt;/code&gt; の値をオブジェクトにラップします。型のオブジェクト &lt;code&gt;Boolean&lt;/code&gt; 型がある単一のフィールドが含ま &lt;code&gt;boolean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81801484504e216b7fb284280633eaa1558a087c" translate="yes" xml:space="preserve">
          <source>The BoxLayout manager is constructed with an axis parameter that specifies the type of layout that will be done. There are four choices:</source>
          <target state="translated">BoxLayoutマネージャは、実行されるレイアウトのタイプを指定する軸パラメータで構成されています。4つの選択肢があります。</target>
        </trans-unit>
        <trans-unit id="bc0905838de7d1f34ab2990b1ad9e0ca39c77842" translate="yes" xml:space="preserve">
          <source>The Builder class for building the CatalogFeatures object.</source>
          <target state="translated">CatalogFeatures オブジェクトを構築するための Builder クラスです。</target>
        </trans-unit>
        <trans-unit id="efc67a7d1a2c9c36bea385389f98ef36be245ba3" translate="yes" xml:space="preserve">
          <source>The CIEXYZ conversion color space defined above.</source>
          <target state="translated">上記で定義したCIEXYZ変換色空間。</target>
        </trans-unit>
        <trans-unit id="806e172d08d936be7f9a402bfc1b266638b44841" translate="yes" xml:space="preserve">
          <source>The CLA byte of the command APDU is automatically adjusted to match the channel number of this CardChannel.</source>
          <target state="translated">コマンド APDU の CLA バイトは、この CardChannel のチャネル番号と一致するように自動的に調整されます。</target>
        </trans-unit>
        <trans-unit id="69ad751af3c43bdb33861e917a3b1c15e936c9cf" translate="yes" xml:space="preserve">
          <source>The COLUMN_SIZE column represents the specified column size for the given column. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable.</source>
          <target state="translated">COLUMN_SIZE列は、指定された列の指定された列サイズを表します。数値データの場合、これは最大精度です。文字データの場合、これは文字単位の長さです。データタイプの場合、これは String 表現の文字数で表した長さです (小数点以下の秒数成分の最大許容精度を前提としています)。バイナリ・データの場合、これはバイト単位の長さです。ROWIDデータ型の場合、これはバイト単位の長さです。列サイズが適用できないデータ型の場合、Null が返されます。</target>
        </trans-unit>
        <trans-unit id="36a57ef1b9f6c643e2079cf370e0822f39c24fb7" translate="yes" xml:space="preserve">
          <source>The COLUMN_SIZE column specifies the column size for the given column. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable.</source>
          <target state="translated">COLUMN_SIZE列は、指定された列の列サイズを指定します。数値データの場合、これは最大精度です。文字データの場合、これは文字単位の長さです。データタイプの場合、これは String 表現の文字単位の長さです (小数の秒成分の最大許容精度を想定しています)。バイナリ・データの場合、これはバイト単位の長さです。ROWIDデータ型の場合、これはバイト単位の長さです。列サイズが適用できないデータ型の場合、Null が返されます。</target>
        </trans-unit>
        <trans-unit id="730ba74f50d3f28436fa29f532e375e6c0695ab2" translate="yes" xml:space="preserve">
          <source>The CPU time provided by this interface has nanosecond precision but not necessarily nanosecond accuracy.</source>
          <target state="translated">このインタフェースが提供するCPU時間は、ナノ秒の精度を有するが、必ずしもナノ秒の精度を有するとは限らない。</target>
        </trans-unit>
        <trans-unit id="e8f7f2f7ff227a32e7a5531eecf91cf56365cd7f" translate="yes" xml:space="preserve">
          <source>The CRL or OCSP response cannot be obtained because of a network error.</source>
          <target state="translated">ネットワーク・エラーのため、CRL または OCSP 応答を取得できません。</target>
        </trans-unit>
        <trans-unit id="7089d78e3e0c62b70041275bb433057c167f603b" translate="yes" xml:space="preserve">
          <source>The CRLReason enumeration specifies the reason that a certificate is revoked, as defined in &lt;a href=&quot;http://tools.ietf.org/html/rfc5280&quot;&gt; RFC 5280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="translated">CRLReason列挙は、&lt;a href=&quot;http://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280：Internet X.509 Public Key Infrastructure Certificate and CRL Profileで&lt;/a&gt;定義されているように、証明書が取り消される理由を指定します。</target>
        </trans-unit>
        <trans-unit id="b4d351c3db241b4d379234c7ac2cb5765fab41d2" translate="yes" xml:space="preserve">
          <source>The CRLReason enumeration specifies the reason that a certificate is revoked, as defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt; RFC 3280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="translated">CRLReason列挙は、&lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;RFC 3280：Internet X.509 Public Key Infrastructure Certificate and CRL Profileで&lt;/a&gt;定義されているように、証明書が取り消される理由を指定します。</target>
        </trans-unit>
        <trans-unit id="0eb967d9ac7761c67b21583f035b1b382621c4c9" translate="yes" xml:space="preserve">
          <source>The CRLReason enumeration specifies the reason that a certificate is revoked, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc5280&quot;&gt; RFC 5280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15779cdaa6b6ad714a1c92e09167459cb6fc98f" translate="yes" xml:space="preserve">
          <source>The CSS rule that contains this declaration block or &lt;code&gt;null&lt;/code&gt; if this &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; is not attached to a &lt;code&gt;CSSRule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7812130094f12985b55dbf55a811756b56e1df5" translate="yes" xml:space="preserve">
          <source>The CS_CIEXYZ space used by the toCIEXYZ/fromCIEXYZ methods can be described as follows:</source>
          <target state="translated">toCIEXYZ/fromCIEXYZメソッドで使用されるCS_CIEXYZ空間は、以下のように記述することができます。</target>
        </trans-unit>
        <trans-unit id="c9919c5ae2bcb3b9d6a077925318f690f537fce5" translate="yes" xml:space="preserve">
          <source>The Caps Lock key, a non-ASCII action key.</source>
          <target state="translated">Caps Lockキー、非ASCIIのアクションキーです。</target>
        </trans-unit>
        <trans-unit id="8e67b3c0835b7fe125721227039570d3711aedb5" translate="yes" xml:space="preserve">
          <source>The Catalog API defines a standard solution for resolving external resources referenced by XML documents. It is fully supported by the XML Processors allowing application developers to configure a catalog through an XML processor or system property or the jaxp.properties file to take advantage of the feature.</source>
          <target state="translated">カタログAPIは、XMLドキュメントで参照される外部リソースを解決するための標準的なソリューションを定義しています。これはXMLプロセッサによって完全にサポートされており、アプリケーション開発者はXMLプロセッサやシステムプロパティ、またはjaxp.propertiesファイルを使ってカタログを設定し、この機能を利用することができます。</target>
        </trans-unit>
        <trans-unit id="8c3439a20de44e9f818a8524933afd2726aea753" translate="yes" xml:space="preserve">
          <source>The Catalog Features are supported throughout the JAXP processors, including SAX and DOM (&lt;a href=&quot;../parsers/package-summary&quot;&gt;&lt;code&gt;javax.xml.parsers&lt;/code&gt;&lt;/a&gt;), and StAX parsers (&lt;a href=&quot;../stream/package-summary&quot;&gt;&lt;code&gt;javax.xml.stream&lt;/code&gt;&lt;/a&gt;), Schema Validation (&lt;a href=&quot;../validation/package-summary&quot;&gt;&lt;code&gt;javax.xml.validation&lt;/code&gt;&lt;/a&gt;), and XML Transformation (&lt;a href=&quot;../transform/package-summary&quot;&gt;&lt;code&gt;javax.xml.transform&lt;/code&gt;&lt;/a&gt;). The features described above can be set through JAXP factories or processors that define a setProperty or setAttribute interface. For example, the following code snippet sets a URI to a catalog file on a SAX parser through the &lt;code&gt;javax.xml.catalog.files&lt;/code&gt; property:</source>
          <target state="translated">カタログ機能は、SAXおよびDOM（&lt;a href=&quot;../parsers/package-summary&quot;&gt; &lt;code&gt;javax.xml.parsers&lt;/code&gt; &lt;/a&gt;）、StAXパーサー（&lt;a href=&quot;../stream/package-summary&quot;&gt; &lt;code&gt;javax.xml.stream&lt;/code&gt; &lt;/a&gt;）、スキーマ検証（&lt;a href=&quot;../validation/package-summary&quot;&gt; &lt;code&gt;javax.xml.validation&lt;/code&gt; &lt;/a&gt;）、XML変換（&lt;a href=&quot;../transform/package-summary&quot;&gt; &lt;code&gt;javax.xml.transform&lt;/code&gt; &lt;/a&gt;）などのJAXPプロセッサー全体でサポートされています。.transform）。上記の機能は、setPropertyまたはsetAttributeインターフェイスを定義するJAXPファクトリまたはプロセッサを介して設定できます。たとえば、次のコードスニペットは、 &lt;code&gt;javax.xml.catalog.files&lt;/code&gt; プロパティを介してSAXパーサー上のカタログファイルにURIを設定します。</target>
        </trans-unit>
        <trans-unit id="f5c80cce7f8e24a12ba725dd3dd4f782aefcd3e2" translate="yes" xml:space="preserve">
          <source>The Catalog Manager manages the creation of XML Catalogs and Catalog Resolvers.</source>
          <target state="translated">カタログ マネージャは、XML カタログとカタログ リゾルバの作成を管理します。</target>
        </trans-unit>
        <trans-unit id="385001113bb38abb20285d1ebb83df4d50340b14" translate="yes" xml:space="preserve">
          <source>The Catalog class represents an entity Catalog as defined by &lt;a href=&quot;https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html&quot;&gt; XML Catalogs, OASIS Standard V1.1, 7 October 2005&lt;/a&gt;.</source>
          <target state="translated">Catalogクラスは、&lt;a href=&quot;https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html&quot;&gt;XMLカタログ、OASIS標準V1.1、2005年10月7日で&lt;/a&gt;定義されているエンティティカタログを表します。</target>
        </trans-unit>
        <trans-unit id="1909b728d3f1eea8632e5d9e1f0a292d2819745c" translate="yes" xml:space="preserve">
          <source>The Catalog support is available for any process in the JAXP library that supports a resolver. The following table lists all such processes.</source>
          <target state="translated">カタログのサポートは、リゾルバをサポートするJAXPライブラリ内の任意のプロセスで利用できます。次の表に、そのようなすべてのプロセスを示します。</target>
        </trans-unit>
        <trans-unit id="ed3ae395d6b192794b3d15b214dfe88f06d1d0b4" translate="yes" xml:space="preserve">
          <source>The CatalogFeatures holds a collection of features and properties.</source>
          <target state="translated">CatalogFeaturesは、機能とプロパティのコレクションを保持しています。</target>
        </trans-unit>
        <trans-unit id="45bf43ea40ad206a16c91fe7538584c327d0aa28" translate="yes" xml:space="preserve">
          <source>The CatalogResolver however, will throw &lt;a href=&quot;catalogexception&quot;&gt;&lt;code&gt;CatalogException&lt;/code&gt;&lt;/a&gt; only when &lt;code&gt;javax.xml.catalog.resolve&lt;/code&gt; is specified as &lt;code&gt;strict&lt;/code&gt;. For applications that expect to handle the checked Exceptions, it may be necessary to use a custom resolver to wrap the CatalogResolver or implement it with a &lt;a href=&quot;catalog&quot;&gt;&lt;code&gt;Catalog&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">ただし、CatalogResolverは、 &lt;code&gt;javax.xml.catalog.resolve&lt;/code&gt; が &lt;code&gt;strict&lt;/code&gt; として指定されている場合にのみ&lt;a href=&quot;catalogexception&quot;&gt; &lt;code&gt;CatalogException&lt;/code&gt; &lt;/a&gt;をスローします。チェックされた例外を処理することを期待するアプリケーションの場合、カスタムリゾルバーを使用してCatalogResolverをラップするか、&lt;a href=&quot;catalog&quot;&gt; &lt;code&gt;Catalog&lt;/code&gt; &lt;/a&gt;オブジェクトで実装する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="3c9da4fdbaba5f8c9f09732fa4d7f6d8a7c39639" translate="yes" xml:space="preserve">
          <source>The ChaCha20 and ChaCha20-Poly1305 algorithms have a similar requirement for unique nonces with a given key. After each encryption or decryption operation, callers should re-initialize their ChaCha20 or ChaCha20-Poly1305 ciphers with parameters that specify a different nonce value. Please see &lt;a href=&quot;https://tools.ietf.org/html/rfc7539&quot;&gt;RFC 7539&lt;/a&gt; for more information on the ChaCha20 and ChaCha20-Poly1305 algorithms.</source>
          <target state="translated">ChaCha20およびChaCha20-Poly1305アルゴリズムには、特定のキーを持つ一意のナンスに対する同様の要件があります。暗号化または復号化操作が行われるたびに、呼び出し元は、異なるナンス値を指定するパラメーターを使用して、ChaCha20またはChaCha20-Poly1305暗号を再初期化する必要があります。ChaCha20およびChaCha20-Poly1305アルゴリズムの詳細については、RFC7539を参照し&lt;a href=&quot;https://tools.ietf.org/html/rfc7539&quot;&gt;て&lt;/a&gt;ください。</target>
        </trans-unit>
        <trans-unit id="b6a9e74f4885fe7cf70c23e4e55e9a31b16bb5b1" translate="yes" xml:space="preserve">
          <source>The Cham range with the Cham digits.</source>
          <target state="translated">チャム桁のあるチャムレンジ。</target>
        </trans-unit>
        <trans-unit id="33f1a9e451f535334439b331e5952fb5eceaa417" translate="yes" xml:space="preserve">
          <source>The Character Encoding is not supported.</source>
          <target state="translated">文字エンコードには対応していません。</target>
        </trans-unit>
        <trans-unit id="5a47ec8afb6ab11bcf60e2a316aaa05ee5d6f88e" translate="yes" xml:space="preserve">
          <source>The Class Loader Repository used by the given MBeanServer.</source>
          <target state="translated">指定されたMBeanServerが使用するクラス・ローダ・リポジトリ。</target>
        </trans-unit>
        <trans-unit id="004f0206b3d3d849c825f918d9b68ef429b3b940" translate="yes" xml:space="preserve">
          <source>The Class object for the bean's customizer. This may be null if the bean doesn't have a customizer.</source>
          <target state="translated">ビーンのカスタマイザのクラスオブジェクト。ビーンがカスタマイザを持っていない場合、これはnullになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="537754527d3370203382836d7cb800a91b8ee729" translate="yes" xml:space="preserve">
          <source>The Class object for the bean.</source>
          <target state="translated">ビーンのクラスオブジェクト。</target>
        </trans-unit>
        <trans-unit id="df1481dabe3eac178ff1405ee9b4259ce1e6e7a5" translate="yes" xml:space="preserve">
          <source>The Class object for the target interface that will get invoked when the event is fired.</source>
          <target state="translated">イベントが発生したときに呼び出されるターゲット・インターフェースの Class オブジェクト。</target>
        </trans-unit>
        <trans-unit id="7eac5b9958cd8cfff4271334618aee040eeba806" translate="yes" xml:space="preserve">
          <source>The Class object representing the primitive type boolean.</source>
          <target state="translated">プリミティブ型のbooleanを表すクラスオブジェクト。</target>
        </trans-unit>
        <trans-unit id="3618cc4f2a2349312e42daaa29d613987f1e092c" translate="yes" xml:space="preserve">
          <source>The ClassLoader that the module is defined to</source>
          <target state="translated">モジュールが定義されている ClassLoader</target>
        </trans-unit>
        <trans-unit id="d40630063d92d99c85238befefd749074cac2197" translate="yes" xml:space="preserve">
          <source>The ClassLoader used for that MBean. If &lt;var&gt;l&lt;/var&gt; is the MBean's actual ClassLoader, and &lt;var&gt;r&lt;/var&gt; is the returned value, then either:</source>
          <target state="translated">そのMBeanに使用されるClassLoader。場合 &lt;var&gt;l&lt;/var&gt; は MBeanの実際のClassLoaderあり、そして &lt;var&gt;r&lt;/var&gt; は、その後、いずれかで返される値です。</target>
        </trans-unit>
        <trans-unit id="66051b6d430a30f6ea7fd611d6e0df14e41ad561" translate="yes" xml:space="preserve">
          <source>The ClassLoaderRepository for this MBeanServer.</source>
          <target state="translated">この MBeanServer の ClassLoaderRepository。</target>
        </trans-unit>
        <trans-unit id="2fd3574d8c10f0ef7d993b723f5632e342d0a6ee" translate="yes" xml:space="preserve">
          <source>The CodeBase and Signedby components of the triplet name/value pairs are optional. If they are not present, then any any codebase will match, and any signer (including unsigned code) will match. For Example,</source>
          <target state="translated">トリプレット名/値のペアの CodeBase と Signedby コンポーネントはオプションです。これらが存在しない場合は、任意のコードベースがマッチし、任意の署名者 (符号なしコードを含む)がマッチします。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="c2d96326649dde95c7e44b0d7b9ed5f0eb24edde" translate="yes" xml:space="preserve">
          <source>The Color choice action identifier The color is passed as an argument</source>
          <target state="translated">色選択アクション識別子 色は引数として渡されます。</target>
        </trans-unit>
        <trans-unit id="9aefa3745661aac9f95067164415b6aba2584a76" translate="yes" xml:space="preserve">
          <source>The ColorType instance to use for specifying color printing.</source>
          <target state="translated">カラー印刷を指定する際に使用するColorTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="fc12d050c25db30932a215afa844cd2c0a1f9907" translate="yes" xml:space="preserve">
          <source>The ColorType instance to use for specifying monochrome printing.</source>
          <target state="translated">モノクロ印刷を指定する際に使用するColorTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="a1a553cf69cfe6ca631789fbb350d1c4c807cf8f" translate="yes" xml:space="preserve">
          <source>The Component that the @{code ComboBoxEditor} uses for editing.</source>
          <target state="translated">ComboBoxEditor}の@{code ComboBoxEditor}が編集に使用するコンポーネント。</target>
        </trans-unit>
        <trans-unit id="227d796281ad0577957a4e31b0889941847041af" translate="yes" xml:space="preserve">
          <source>The Component this DragGestureRecognizer is associated with</source>
          <target state="translated">この DragGestureRecognizer が関連付けられているコンポーネント</target>
        </trans-unit>
        <trans-unit id="d6129cd0df87476b144f9ae72f10280b8502d399" translate="yes" xml:space="preserve">
          <source>The Component this label is for; null if the label is not the label for a component</source>
          <target state="translated">ラベルがコンポーネントのラベルでない場合はnull</target>
        </trans-unit>
        <trans-unit id="8e16e6d4e4c40d6ee7cab533803dc66da6417071" translate="yes" xml:space="preserve">
          <source>The Component will receive drops only if it is enabled.</source>
          <target state="translated">コンポーネントは、有効になっている場合にのみドロップを受信します。</target>
        </trans-unit>
        <trans-unit id="e75fddc976a61c1460b567593850ec1eade9d839" translate="yes" xml:space="preserve">
          <source>The ComponentOrientation class encapsulates the language-sensitive orientation that is to be used to order the elements of a component or of text.</source>
          <target state="translated">ComponentOrientationクラスは、コンポーネントやテキストの要素の順序付けに使用される言語依存の方向をカプセル化します。</target>
        </trans-unit>
        <trans-unit id="0c349a7e3983834131e43d6005575c88312a4af1" translate="yes" xml:space="preserve">
          <source>The ComponentOrientation class encapsulates the language-sensitive orientation that is to be used to order the elements of a component or of text. It is used to reflect the differences in this ordering between Western alphabets, Middle Eastern (such as Hebrew), and Far Eastern (such as Japanese).</source>
          <target state="translated">ComponentOrientationクラスは、コンポーネントやテキストの要素の順序付けに使用される言語依存の方向をカプセル化します。これは、西洋のアルファベット、中東(ヘブライ語など)、極東(日本語など)の違いを反映させるために使用されます。</target>
        </trans-unit>
        <trans-unit id="9aa38dfbce4b5e4d29c524de8b044dfa3c6e2aa9" translate="yes" xml:space="preserve">
          <source>The Connection representing the bi-directional communication channel to the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5789b4c7dbeca56610041c215040cd828abe15bd" translate="yes" xml:space="preserve">
          <source>The ConnectionBuilder instance that was created</source>
          <target state="translated">作成された ConnectionBuilder インスタンス</target>
        </trans-unit>
        <trans-unit id="88c73e6550e83b79c38c378eb869baa98b113ae7" translate="yes" xml:space="preserve">
          <source>The ContentHandler that is to be transformation output.</source>
          <target state="translated">変換出力する ContentHandler。</target>
        </trans-unit>
        <trans-unit id="17423c94f8f2ce034afcc39cef2cb4df86197b19" translate="yes" xml:space="preserve">
          <source>The Control key extended modifier constant.</source>
          <target state="translated">コントロールキーの拡張修飾子定数です。</target>
        </trans-unit>
        <trans-unit id="d1ab2b838d9028c98dee874736d7f5d9ec2c600c" translate="yes" xml:space="preserve">
          <source>The Control key modifier constant.</source>
          <target state="translated">コントロールキーの修飾子定数です。</target>
        </trans-unit>
        <trans-unit id="fdf0e01cafa9c24fd0c1cae4915a688195d8ef89" translate="yes" xml:space="preserve">
          <source>The Counter value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e37ac36977091dd5dd589e3937201a303cc9c9" translate="yes" xml:space="preserve">
          <source>The DGC abstraction is used for the server side of the distributed garbage collection algorithm.</source>
          <target state="translated">DGCの抽象化は、分散型ガベージコレクションアルゴリズムのサーバー側に使用されます。</target>
        </trans-unit>
        <trans-unit id="bed07d1e948423e4a8940850acf00fea1b04ba74" translate="yes" xml:space="preserve">
          <source>The DGC abstraction is used for the server side of the distributed garbage collection algorithm. This interface contains the two methods: dirty and clean. A dirty call is made when a remote reference is unmarshaled in a client (the client is indicated by its VMID). A corresponding clean call is made when no more references to the remote reference exist in the client. A failed dirty call must schedule a strong clean call so that the call's sequence number can be retained in order to detect future calls received out of order by the distributed garbage collector. A reference to a remote object is leased for a period of time by the client holding the reference. The lease period starts when the dirty call is received. It is the client's responsibility to renew the leases, by making additional dirty calls, on the remote references it holds before such leases expire. If the client does not renew the lease before it expires, the distributed garbage collector assumes that the remote object is no longer referenced by that client.</source>
          <target state="translated">分散型ガベージコレクションアルゴリズムのサーバー側には、DGCの抽象化が使用されます。このインターフェイスには、ダーティとクリーンの2つのメソッドが含まれています。ダーティな呼び出しは、リモート参照がクライアントでマーシャルされていないときに行われます(クライアントはそのVMIDによって示されます)。対応するクリーンコールは、クライアント内にリモート参照への参照がこれ以上存在しない場合に行われます。失敗したダーティコールは、分散型ガベージコレクタが順番外で受信した将来のコールを検出するために、 コールのシーケンス番号を保持できるように、強力なクリーンコールをスケジュールする必要がある。リモートオブジェクトへの参照は、参照を保持するクライアントによって一定期間リースされる。リース期間は、ダーティコールを受信したときに開始されます。そのようなリースが期限切れになる前に、保持しているリモート参照に対して追加のダーティコールを行うことでリースを更新するのはクライアントの責任です。クライアントがリースの期限が切れる前にリースを更新しない場合、分散型ガベージコレクタは、リモートオブジェクトがそのクライアントによって参照されなくなったと仮定します。</target>
        </trans-unit>
        <trans-unit id="7d83f00558a7ea5fd54e20050b4b87aeb295129d" translate="yes" xml:space="preserve">
          <source>The DOM Core does not support editing &lt;code&gt;Notation&lt;/code&gt; nodes; they are therefore readonly.</source>
          <target state="translated">DOMコアは &lt;code&gt;Notation&lt;/code&gt; ノードの編集をサポートしていません。したがって、読み取り専用です。</target>
        </trans-unit>
        <trans-unit id="43530ca2de642f60fb45cbf08c7d48675f2f6e1a" translate="yes" xml:space="preserve">
          <source>The DOM Core represents all attribute values as simple strings, even if the DTD or schema associated with the document declares them of some specific type such as tokenized.</source>
          <target state="translated">DOM コアは、ドキュメントに関連付けられた DTD やスキーマがトークン化などの特定の型で属性値を宣言している場合でも、すべての属性値を単純な文字列として表現します。</target>
        </trans-unit>
        <trans-unit id="1199d22f6ddd51766a7301391a2be8379e37ab04" translate="yes" xml:space="preserve">
          <source>The DOM Level 2 does not support editing entities, therefore &lt;code&gt;entities&lt;/code&gt; cannot be altered in any way.</source>
          <target state="translated">DOMレベル2はエンティティの編集をサポートしていないため、 &lt;code&gt;entities&lt;/code&gt; を変更することはできません。</target>
        </trans-unit>
        <trans-unit id="c8bb5a095cdbe93e8badd4f90d462b85913dc20b" translate="yes" xml:space="preserve">
          <source>The DOM Level 2 does not support editing notations, therefore &lt;code&gt;notations&lt;/code&gt; cannot be altered in any way.</source>
          <target state="translated">DOMレベル2は表記法の編集をサポートしていないため、 &lt;code&gt;notations&lt;/code&gt; を変更することはできません。</target>
        </trans-unit>
        <trans-unit id="38aa50df9727b894588dbbc35c05e27ae364fb85" translate="yes" xml:space="preserve">
          <source>The DOM does not provide any filters. &lt;code&gt;NodeFilter&lt;/code&gt; is just an interface that users can implement to provide their own filters.</source>
          <target state="translated">DOMはフィルターを提供しません。 &lt;code&gt;NodeFilter&lt;/code&gt; は、ユーザーが独自のフィルターを提供するために実装できる単なるインターフェースです。</target>
        </trans-unit>
        <trans-unit id="df7387b1fd60bcbca923e30e23e97edc8aba858f" translate="yes" xml:space="preserve">
          <source>The DOM implementation is expected to use the attribute &lt;code&gt;Attr.isId&lt;/code&gt; to determine if an attribute is of type ID.</source>
          <target state="translated">DOM実装は、属性 &lt;code&gt;Attr.isId&lt;/code&gt; を使用して、属性がタイプIDであるかどうかを判別することが期待されています。</target>
        </trans-unit>
        <trans-unit id="261049d3d4a4937744f0dafd0f1e3545c9ba8678" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to ANY</source>
          <target state="translated">DTD定数はANY</target>
        </trans-unit>
        <trans-unit id="8c0b4e5d9b4605e3158ab4842fcd5983e5fb8dd8" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to CDATA</source>
          <target state="translated">DTD定数はCDATAに対応しています。</target>
        </trans-unit>
        <trans-unit id="28996f14fa52b071fff9da5038251a1e16777136" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to CONREF</source>
          <target state="translated">DTD定数はCONREFに対応しています。</target>
        </trans-unit>
        <trans-unit id="f70e3a438499a724f3e9b5b8faacae04267c9342" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to CURRENT</source>
          <target state="translated">DTD定数はCURRENTに対応しています。</target>
        </trans-unit>
        <trans-unit id="7462581804069a243f9c87bece58e662cb9bbd5a" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to DEFAULT</source>
          <target state="translated">DTD定数はDEFAULTに対応しています。</target>
        </trans-unit>
        <trans-unit id="c5d9608e6bca1b6ed6581eea2cd2e05102db06db" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to EMPTY</source>
          <target state="translated">DTD定数はEMPTYに対応しています。</target>
        </trans-unit>
        <trans-unit id="ba76c731eea210411652ded92b544523f559f8cf" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to ENDTAG</source>
          <target state="translated">DTD定数はENDTAGに対応しています。</target>
        </trans-unit>
        <trans-unit id="b037b57b7b4055d8226d80e6b35f4dd61693ff9f" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to ENTITIES</source>
          <target state="translated">DTD 定数は ENTITIES に対応しています。</target>
        </trans-unit>
        <trans-unit id="8c124dba0aabae007ca78f786c43238803deb8de" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to ENTITY</source>
          <target state="translated">DTD定数はENTITY</target>
        </trans-unit>
        <trans-unit id="92bfbbfc06b21dd3f552573a10a0382a8a8b166c" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to FIXED</source>
          <target state="translated">DTD定数はFIXEDに対応しています。</target>
        </trans-unit>
        <trans-unit id="d0730aee51ad3d5e3c5d358c5486abb58f57b053" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to GENERAL</source>
          <target state="translated">DTD定数はGENERALに対応しています。</target>
        </trans-unit>
        <trans-unit id="d512f886dc03b5f4056a96d2ee1b6e8d93d6234f" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to ID</source>
          <target state="translated">DTD定数はID</target>
        </trans-unit>
        <trans-unit id="c82b046bea18e9a490fb2a44c0258368ed834626" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to IDREF</source>
          <target state="translated">DTD定数はIDREFに対応しています。</target>
        </trans-unit>
        <trans-unit id="6385c232cbf5970b321152ba72e8ec4b8bf03880" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to IDREFS</source>
          <target state="translated">DTD定数はIDREFSに対応しています。</target>
        </trans-unit>
        <trans-unit id="d27662c44dc624358badebfa3780410f2185d572" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to IMPLIED</source>
          <target state="translated">DTD 定数は IMPLIED に対応しています。</target>
        </trans-unit>
        <trans-unit id="0bb5d1554124f83a103f88151731450f51e29063" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to MD</source>
          <target state="translated">DTD定数はMDに対応しています。</target>
        </trans-unit>
        <trans-unit id="9e2a110f1661c64c646c0d75fca1fd31b10c0d7b" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to MODEL</source>
          <target state="translated">DTD定数はMODELに対応しています。</target>
        </trans-unit>
        <trans-unit id="217e0e2fe34e949d8d212ae8100c329e2798959d" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to MS</source>
          <target state="translated">DTD定数はMS</target>
        </trans-unit>
        <trans-unit id="210401b9f4da9fb6620b3dfe9a679b8ba982571f" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NAME</source>
          <target state="translated">DTD 定数は NAME に対応しています。</target>
        </trans-unit>
        <trans-unit id="d059f6bc57570668211b615f9ec763ce6c011d33" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NAMES</source>
          <target state="translated">DTD定数はNAMESに対応しています。</target>
        </trans-unit>
        <trans-unit id="08d23b2ba3d9d4c0170e8dceb590345eef62e898" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NMTOKEN</source>
          <target state="translated">DTD定数はNMTOKENに対応しています。</target>
        </trans-unit>
        <trans-unit id="43e5d6fd6f35ae58bb647fdbe002079d0ef4e79c" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NMTOKENS</source>
          <target state="translated">DTD定数はNMTOKENSに対応しています。</target>
        </trans-unit>
        <trans-unit id="4d3d6809165f3ec86156d0455227d9f935592dc6" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NOTATION</source>
          <target state="translated">DTD定数はNOTATIONに対応しています。</target>
        </trans-unit>
        <trans-unit id="c82aa0c7d66e7bfc1ad232cd78fa3ee3b3837ca2" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NUMBER</source>
          <target state="translated">DTD定数はNUMBERに対応しています。</target>
        </trans-unit>
        <trans-unit id="f6dcc9ece8551b878b9dbb942a5c4193aafd677b" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NUMBERS</source>
          <target state="translated">DTD定数はNUMBERSに対応しています。</target>
        </trans-unit>
        <trans-unit id="0f4c355ec8195dd5f3a4b693d27573962d42907a" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NUTOKEN</source>
          <target state="translated">DTD定数はNUTOKENに対応しています。</target>
        </trans-unit>
        <trans-unit id="464cfae6e349c057b8352dc2ee53bd2e0ce2c4d2" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to NUTOKENS</source>
          <target state="translated">DTD定数はNUTOKENSに対応しています。</target>
        </trans-unit>
        <trans-unit id="f530150f84f7ecb1f890a8d98900f43e6e96c04a" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to PARAMETER</source>
          <target state="translated">DTD 定数は PARAMETER に対応しています。</target>
        </trans-unit>
        <trans-unit id="2b88e73f94ceff69a11fb44af74e03c994ab76c6" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to PI</source>
          <target state="translated">DTD定数はPI</target>
        </trans-unit>
        <trans-unit id="a793a8ddc64beceb41e4cb80ca28fff3889db1b7" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to PUBLIC</source>
          <target state="translated">DTD定数はPUBLICに対応しています。</target>
        </trans-unit>
        <trans-unit id="4f40a4668a58a1e30057b305854e48fe8a85cb6e" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to RCDATA</source>
          <target state="translated">DTD定数はRCDATAに対応しています。</target>
        </trans-unit>
        <trans-unit id="594edcbb019633ce1e15d7afb490d0bfd587095c" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to REQUIRED</source>
          <target state="translated">DTD定数はREQUIREDに対応しています。</target>
        </trans-unit>
        <trans-unit id="3941302d7f73508bc2f880765e67c45b860abdd3" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to SDATA</source>
          <target state="translated">DTD定数はSDATAに対応しています。</target>
        </trans-unit>
        <trans-unit id="7659fc2638f54b5b97b669423f51591f41e6dd65" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to STARTTAG</source>
          <target state="translated">DTD定数はSTARTTAGに対応しています。</target>
        </trans-unit>
        <trans-unit id="2b30fe032c549b0fe7db4de6e7c9c64ffab5c023" translate="yes" xml:space="preserve">
          <source>The DTD constant corresponds to SYSTEM</source>
          <target state="translated">DTD定数はSYSTEMに対応しています。</target>
        </trans-unit>
        <trans-unit id="2ced5dc3156a8a4a80da644c296c6141e4689e3c" translate="yes" xml:space="preserve">
          <source>The DTD specification is provided as Appendix A to the Java Logging APIs specification.</source>
          <target state="translated">DTD仕様は、Java Logging APIs仕様の付録Aとして提供されています。</target>
        </trans-unit>
        <trans-unit id="a7f4a801e7fcf309a447907757a88537413eb4aa" translate="yes" xml:space="preserve">
          <source>The DataBuffer that stores the image data.</source>
          <target state="translated">画像データを格納するDataBufferです。</target>
        </trans-unit>
        <trans-unit id="9b8dc3e1ba53caad2f4dafd2ec2d61e42595250b" translate="yes" xml:space="preserve">
          <source>The Delete key.</source>
          <target state="translated">削除キーです。</target>
        </trans-unit>
        <trans-unit id="c016969447ee027a7d4e0c0671983d0d54d60bd4" translate="yes" xml:space="preserve">
          <source>The Descriptor fields contributed in this way by different annotations on the same program element must be consistent. That is, two different annotations, or two members of the same annotation, must not define a different value for the same Descriptor field. Fields from annotations on a getter method must also be consistent with fields from annotations on the corresponding setter method.</source>
          <target state="translated">このように、同じプログラム要素上の異なるアノテーションによって貢献されるDescriptorフィールドは、一貫していなければなりません。つまり、2つの異なるアノテーション、または同じアノテーションの2つのメンバが、同じDescriptorフィールドに対して異なる値を定義してはなりません。ゲッター・メソッド上のアノテーションからのフィールドもまた、対応するセッター・メソッド上のアノテーションからのフィールドと一致していなければなりません。</target>
        </trans-unit>
        <trans-unit id="7bb6cc0ddd226d41211cd3043455d41114d7cede" translate="yes" xml:space="preserve">
          <source>The Descriptor resulting from these annotations will be merged with any Descriptor fields provided by the implementation, such as the &lt;a href=&quot;descriptor#immutableInfo&quot;&gt;&lt;code&gt;
 immutableInfo&lt;/code&gt;&lt;/a&gt; field for an MBean. The fields from the annotations must be consistent with these fields provided by the implementation.</source>
          <target state="translated">これらのアノテーションの結果であるDescriptorは、MBeanの&lt;a href=&quot;descriptor#immutableInfo&quot;&gt; &lt;code&gt; immutableInfo&lt;/code&gt; &lt;/a&gt;フィールドなど、実装によって提供されるDescriptorフィールドとマージされます。注釈のフィールドは、実装によって提供されるこれらのフィールドと一致している必要があります。</target>
        </trans-unit>
        <trans-unit id="6bee60701b79c62232ecee0abd5ca5f3df40a69c" translate="yes" xml:space="preserve">
          <source>The Descriptor resulting from these annotations will be merged with any Descriptor fields provided by the implementation, such as the &lt;a href=&quot;descriptor#immutableInfo&quot;&gt;&lt;code&gt;immutableInfo&lt;/code&gt;&lt;/a&gt; field for an MBean. The fields from the annotations must be consistent with these fields provided by the implementation.</source>
          <target state="translated">これらの注釈の結果である記述子は、MBeanの&lt;a href=&quot;descriptor#immutableInfo&quot;&gt; &lt;code&gt;immutableInfo&lt;/code&gt; &lt;/a&gt;フィールドなど、実装によって提供される記述子フィールドとマージされます。アノテーションのフィールドは、実装によって提供されるこれらのフィールドと一致している必要があります。</target>
        </trans-unit>
        <trans-unit id="2264cfb97c49339ec2eb79ff8f9c5b3541970253" translate="yes" xml:space="preserve">
          <source>The Devanagari range with the Devanagari digits.</source>
          <target state="translated">デヴァナガリのレンジでデヴァナガリの桁数で</target>
        </trans-unit>
        <trans-unit id="c9d5aea86dc06f534995783c5eed783935bbadb9" translate="yes" xml:space="preserve">
          <source>The Directory Context</source>
          <target state="translated">ディレクトリのコンテキスト</target>
        </trans-unit>
        <trans-unit id="ccd7ed731b050c5d2f46c1cbaf69cfad44e1f050" translate="yes" xml:space="preserve">
          <source>The Doclet API provides an environment which, in conjunction with the Language Model API and Compiler Tree API, allows clients to inspect the source-level structures of programs and libraries, including API comments embedded in the source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6ee01f1cfdc49d30867413241b4a4694ea090f" translate="yes" xml:space="preserve">
          <source>The Document Type Declaration (see &lt;code&gt;DocumentType&lt;/code&gt;) associated with this document.</source>
          <target state="translated">このドキュメントに関連付けられているドキュメントタイプ宣言（ &lt;code&gt;DocumentType&lt;/code&gt; を参照）。</target>
        </trans-unit>
        <trans-unit id="254ccb37fffeb4d7034d09aace0490d444a1fd8d" translate="yes" xml:space="preserve">
          <source>The Document Type Declaration (see &lt;code&gt;DocumentType&lt;/code&gt;) associated with this document. For XML documents without a document type declaration this returns &lt;code&gt;null&lt;/code&gt;. For HTML documents, a &lt;code&gt;DocumentType&lt;/code&gt; object may be returned, independently of the presence or absence of document type declaration in the HTML document.</source>
          <target state="translated">このドキュメントに関連付けられているドキュメントタイプ宣言（ &lt;code&gt;DocumentType&lt;/code&gt; を参照）。文書型宣言のないXML文書の場合、これは &lt;code&gt;null&lt;/code&gt; を返します。HTMLドキュメントの場合、HTMLドキュメント内のドキュメント型宣言の有無に関係なく、 &lt;code&gt;DocumentType&lt;/code&gt; オブジェクトが返される場合があります。</target>
        </trans-unit>
        <trans-unit id="299aad74666cf0fc920de73b7ea77abf7fe4b895" translate="yes" xml:space="preserve">
          <source>The Document interface is responsible for translating a linear view of the characters into Element operations. It is up to each Document implementation to define what the Element structure is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d54d249addf311d02c8ca2ce1ec1e6177cdf46" translate="yes" xml:space="preserve">
          <source>The DocumentEvent notification is based upon the JavaBeans event model. There is no guarantee about the order of delivery to listeners, and all listeners must be notified prior to making further mutations to the Document. &lt;em&gt;This means implementations of the DocumentListener may not mutate the source of the event (i.e. the associated Document)&lt;/em&gt;.</source>
          <target state="translated">DocumentEvent通知は、JavaBeansイベントモデルに基づいています。リスナーへの配信順序についての保証はありません。ドキュメントにさらに変更を加える前に、すべてのリスナーに通知する必要があります。&lt;em&gt;これは、DocumentListenerの実装がイベントのソース（つまり、関連付けられたドキュメント）を変更しない可能性があることを意味します&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="306e0349e4730fe12ea20a18564d5aded0a959d4" translate="yes" xml:space="preserve">
          <source>The DocumentTypeDefinition is written to the output</source>
          <target state="translated">DocumentTypeDefinitionが出力に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="d62abb5465a5124d177e3dae735859f7772db3a7" translate="yes" xml:space="preserve">
          <source>The Down Arrow key, a non-ASCII action key.</source>
          <target state="translated">下矢印キー、非ASCIIのアクションキーです。</target>
        </trans-unit>
        <trans-unit id="535a8c59d3fc6ca72816c57f9fe3cb8a0847b806" translate="yes" xml:space="preserve">
          <source>The DriverManager will try to load as many drivers as it can find and then for any given connection request, it will ask each driver in turn to try to connect to the target URL.</source>
          <target state="translated">DriverManager は、見つけられるだけ多くのドライバをロードしようとし、任意の接続要求に対して、各ドライバに順番にターゲット URL への接続を試みるように要求します。</target>
        </trans-unit>
        <trans-unit id="d5be8afdbc6e1810cc1d91e507cb42ef9c4a1bf6" translate="yes" xml:space="preserve">
          <source>The Ed25519 parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b245864c9b4d42dd27fe5d8994f419c7c656fd7" translate="yes" xml:space="preserve">
          <source>The Ed448 parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9908e26b6e54260393c71d3b6feaa03992ee4047" translate="yes" xml:space="preserve">
          <source>The End key, a non-ASCII action key.</source>
          <target state="translated">非ASCIIのアクションキーであるEndキー。</target>
        </trans-unit>
        <trans-unit id="82569fedc0af6f3aed7f65a6a3fe39ea20b67c7c" translate="yes" xml:space="preserve">
          <source>The Enter key.</source>
          <target state="translated">エンターキーです。</target>
        </trans-unit>
        <trans-unit id="9467ddc0b1822e3f422eef8fbcd692138357cb1f" translate="yes" xml:space="preserve">
          <source>The ErrorManager's &quot;error&quot; method will be invoked if any errors occur while using this Handler.</source>
          <target state="translated">このハンドラーの使用中にエラーが発生した場合は、ErrorManager の &quot;error&quot; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="337111c58074fe3c7a3c0c5188b4a34f626e799a" translate="yes" xml:space="preserve">
          <source>The Escape key.</source>
          <target state="translated">脱出キーです。</target>
        </trans-unit>
        <trans-unit id="855ec55237c438b93c6ece3595fe96fed3e0fe47" translate="yes" xml:space="preserve">
          <source>The Ethiopic range with the Ethiopic digits.</source>
          <target state="translated">エチオピアの桁数を使ったエチオピアの範囲です。</target>
        </trans-unit>
        <trans-unit id="c4abdb2c97b7ad28fbff4b44ab36d6a6f3821d59" translate="yes" xml:space="preserve">
          <source>The Ethiopic range with the Ethiopic digits. Ethiopic does not have a decimal digit 0 so Latin (European) 0 is used.</source>
          <target state="translated">エチオピアの桁数を使ったエチオピアの範囲です。エチオピアには10進数の0がないので、ラテン語(ヨーロッパ)の0が使われます。</target>
        </trans-unit>
        <trans-unit id="f846f27691c1830b0c4862884909ba741da0054f" translate="yes" xml:space="preserve">
          <source>The F1 function key, a non-ASCII action key.</source>
          <target state="translated">F1ファンクションキー、非ASCIIアクションキーです。</target>
        </trans-unit>
        <trans-unit id="e0c99ce79d7c1cf5f028270fbbd639ed83b660bf" translate="yes" xml:space="preserve">
          <source>The F10 function key, a non-ASCII action key.</source>
          <target state="translated">F10ファンクションキー、非ASCIIアクションキーです。</target>
        </trans-unit>
        <trans-unit id="34b95e3d41adccd87cc4a5447e94b0969fdf7692" translate="yes" xml:space="preserve">
          <source>The F11 function key, a non-ASCII action key.</source>
          <target state="translated">F11ファンクションキー、非ASCIIアクションキーです。</target>
        </trans-unit>
        <trans-unit id="4712072dec079034a0d1d72b4ea1e0bd718589b7" translate="yes" xml:space="preserve">
          <source>The F12 function key, a non-ASCII action key.</source>
          <target state="translated">F12ファンクションキー、非ASCIIアクションキーです。</target>
        </trans-unit>
        <trans-unit id="8f3e6133006f60f80467d379477797cb8466f921" translate="yes" xml:space="preserve">
          <source>The F2 function key, a non-ASCII action key.</source>
          <target state="translated">F2ファンクションキー、非ASCIIアクションキーです。</target>
        </trans-unit>
        <trans-unit id="8cba0d95d956dcad6261f3c860b0b98ddb8261bd" translate="yes" xml:space="preserve">
          <source>The F3 function key, a non-ASCII action key.</source>
          <target state="translated">F3ファンクションキー、非ASCIIアクションキーです。</target>
        </trans-unit>
        <trans-unit id="688fc8033a58b76724aa1e69114742ef26b5aea2" translate="yes" xml:space="preserve">
          <source>The F4 function key, a non-ASCII action key.</source>
          <target state="translated">F4ファンクションキー、非ASCIIアクションキーです。</target>
        </trans-unit>
        <trans-unit id="424aca125a04f4c0ca7b024f4f463806f8d801e0" translate="yes" xml:space="preserve">
          <source>The F5 function key, a non-ASCII action key.</source>
          <target state="translated">F5ファンクションキー、非ASCIIアクションキーです。</target>
        </trans-unit>
        <trans-unit id="75137fe57f42039f646febcef40c10236bd497b2" translate="yes" xml:space="preserve">
          <source>The F6 function key, a non-ASCII action key.</source>
          <target state="translated">F6ファンクションキー、非ASCIIアクションキーです。</target>
        </trans-unit>
        <trans-unit id="32df2a32958042664970351ad3ceae10e39b1214" translate="yes" xml:space="preserve">
          <source>The F7 function key, a non-ASCII action key.</source>
          <target state="translated">F7ファンクションキー、非ASCIIアクションキーです。</target>
        </trans-unit>
        <trans-unit id="04f2191aa3813883fac7f747c758351877d2dbd7" translate="yes" xml:space="preserve">
          <source>The F8 function key, a non-ASCII action key.</source>
          <target state="translated">F8ファンクションキー、非ASCIIアクションキーです。</target>
        </trans-unit>
        <trans-unit id="1822ce331e4a2923ad9c29fc3b0f664d404ea2c6" translate="yes" xml:space="preserve">
          <source>The F9 function key, a non-ASCII action key.</source>
          <target state="translated">F9ファンクションキー、非ASCIIアクションキーです。</target>
        </trans-unit>
        <trans-unit id="4d4c7427ed03e2196382cf762ac3a454fd9aad30" translate="yes" xml:space="preserve">
          <source>The FeatureDescriptor class is the common baseclass for PropertyDescriptor, EventSetDescriptor, and MethodDescriptor, etc.</source>
          <target state="translated">FeatureDescriptorクラスは、PropertyDescriptor、EventSetDescriptor、MethodDescriptorなどの共通ベースクラスです。</target>
        </trans-unit>
        <trans-unit id="5eae005357491fca42dd8644ffbb9527bcbf6e2a" translate="yes" xml:space="preserve">
          <source>The File Upload, Image Read, and Socket Read events happen concurrently (in the same thread), but the events are in different categories so they do not overlap in the visualization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e02d9b92b748aa46a1fe40c56191a70c2db37b1" translate="yes" xml:space="preserve">
          <source>The ForkJoinTask class is not usually directly subclassed. Instead, you subclass one of the abstract classes that support a particular style of fork/join processing, typically &lt;a href=&quot;recursiveaction&quot;&gt;&lt;code&gt;RecursiveAction&lt;/code&gt;&lt;/a&gt; for most computations that do not return results, &lt;a href=&quot;recursivetask&quot;&gt;&lt;code&gt;RecursiveTask&lt;/code&gt;&lt;/a&gt; for those that do, and &lt;a href=&quot;countedcompleter&quot;&gt;&lt;code&gt;CountedCompleter&lt;/code&gt;&lt;/a&gt; for those in which completed actions trigger other actions. Normally, a concrete ForkJoinTask subclass declares fields comprising its parameters, established in a constructor, and then defines a &lt;code&gt;compute&lt;/code&gt; method that somehow uses the control methods supplied by this base class.</source>
          <target state="translated">ForkJoinTaskクラスは通常、直接サブクラス化されていません。代わりに、フォークの特定のスタイルをサポートする抽象クラスのあなたサブクラス1は/処理し、一般的に参加&lt;a href=&quot;recursiveaction&quot;&gt; &lt;code&gt;RecursiveAction&lt;/code&gt; &lt;/a&gt;結果を返しません。ほとんどの計算のため、&lt;a href=&quot;recursivetask&quot;&gt; &lt;code&gt;RecursiveTask&lt;/code&gt; &lt;/a&gt;ないもののために、と&lt;a href=&quot;countedcompleter&quot;&gt; &lt;code&gt;CountedCompleter&lt;/code&gt; の&lt;/a&gt;アクションが他のアクションをトリガー完成したものをのために。通常、具象ForkJoinTaskサブクラスは、パラメーターで構成されるフィールドを宣言し、コンストラクターで確立してから、この基本クラスによって提供される制御メソッドを何らかの方法で使用 &lt;code&gt;compute&lt;/code&gt; メソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="b623035f5596637c9505afc931878e7c86c5b5b2" translate="yes" xml:space="preserve">
          <source>The GCM specification states that &lt;code&gt;tLen&lt;/code&gt; may only have the values {128, 120, 112, 104, 96}, or {64, 32} for certain applications. Other values can be specified for this class, but not all CSP implementations will support them.</source>
          <target state="translated">GCM仕様では、特定の &lt;code&gt;tLen&lt;/code&gt; は、tLenの値は{ 128、120、112、104、96 }、または{ 64、32}のみである可能性があると規定されています。このクラスには他の値を指定できますが、すべてのCSP実装がそれらをサポートするわけではありません。</target>
        </trans-unit>
        <trans-unit id="21c0818ef96710144df08a551d7b266882d023aa" translate="yes" xml:space="preserve">
          <source>The GIF image writer plug-in guarantees lossless writing for images which meet the following requirements:</source>
          <target state="translated">GIF イメージライタープラグインは、以下の要件を満たす画像に対してロスレス書き込みを保証します。</target>
        </trans-unit>
        <trans-unit id="69631d7c8bd6040a091b247bf1496d5ed878fb6f" translate="yes" xml:space="preserve">
          <source>The GIF image writer plug-in supports setting output stream metadata from metadata supplied to the writer in either the native GIF stream metadata format  javax_imageio_gif_stream_1.0  or the standard metadata format  javax_imageio_1.0, and setting output image metadata from metadata supplied to the writer in either the native GIF image metadata format  javax_imageio_gif_image_1.0  or the standard metadata format javax_imageio_1.0. The mapping of standard metadata format to the GIF native stream and image metadata formats is given in the tables  here .</source>
          <target state="translated">GIF 画像書 き 出 し プ ラ グ イ ンは、 ラ イ タ ーに与え ら れた メ タ デー タ の出力ス ト リ ーム メ タ デー タ を、 ネイティブ GIF ス ト リ ーム メ タ デー タ 形式 javax_imageio_gif_stream_1.0 か標準 メ タ デー タ 形式 javax_imageio_1.0 のいずれかで設定 し 、 ラ イ タ ーに与え ら れた メ タ デー タ の出力画像 メ タ デー タ を、 ネイティブ GIF 画像 メ タ デー タ 形式 javax_imageio_gif_image_1.0 か標準 メ タ デー タ 形式 javax_imageio_1.0 のいずれかで設定す る こ と をサポー ト し てい ます。標準メタデータフォーマットと GIF ネイティブストリーム・画像メタデータフォーマットとのマッピングを以下の表に示します。</target>
        </trans-unit>
        <trans-unit id="5a39c518ab297860c2f8783913dcca7c6af3666c" translate="yes" xml:space="preserve">
          <source>The GIF image writer plug-in supports setting output stream metadata from metadata supplied to the writer in either the native GIF stream metadata format &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_stream_metadata_format&quot;&gt; javax_imageio_gif_stream_1.0&lt;/a&gt; or the standard metadata format &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/standard_metadata.html&quot;&gt;javax_imageio_1.0&lt;/a&gt;, and setting output image metadata from metadata supplied to the writer in either the native GIF image metadata format &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_image_metadata_format&quot;&gt; javax_imageio_gif_image_1.0&lt;/a&gt; or the standard metadata format &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/standard_metadata.html&quot;&gt;javax_imageio_1.0&lt;/a&gt;. The mapping of standard metadata format to the GIF native stream and image metadata formats is given in the tables &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#mapping&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">GIFイメージライタープラグインは、ネイティブGIFストリームメタデータ形式&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_stream_metadata_format&quot;&gt;javax_imageio_gif_stream_1.0&lt;/a&gt;または標準メタデータ形式&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/standard_metadata.html&quot;&gt;javax_imageio_1.0の&lt;/a&gt;いずれかでライターに提供されたメタデータからの出力ストリームメタデータの設定、およびライターに提供されたメタデータからの出力イメージメタデータの設定をサポートします。ネイティブGIFイメージメタデータ形式&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_image_metadata_format&quot;&gt;javax_imageio_gif_image_1.0&lt;/a&gt;または標準メタデータ形式&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/standard_metadata.html&quot;&gt;javax_imageio_1.0の&lt;/a&gt;いずれか。標準メタデータ形式のGIFネイティブストリームおよび画像メタデータ形式へのマッピングは、次の表に記載されてい&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#mapping&quot;&gt;ます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5740adefc67787e6cc87a34eb2ef2353c96debd5" translate="yes" xml:space="preserve">
          <source>The GIF image writer plug-in supports setting output stream metadata from metadata supplied to the writer in either the native GIF stream metadata format &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_stream_metadata_format&quot;&gt; javax_imageio_gif_stream_1.0&lt;/a&gt; or the standard metadata format &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/standard_metadata.html&quot;&gt;javax_imageio_1.0&lt;/a&gt;, and setting output image metadata from metadata supplied to the writer in either the native GIF image metadata format &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_image_metadata_format&quot;&gt; javax_imageio_gif_image_1.0&lt;/a&gt; or the standard metadata format &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/standard_metadata.html&quot;&gt;javax_imageio_1.0&lt;/a&gt;. The mapping of standard metadata format to the GIF native stream and image metadata formats is given in the tables &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#mapping&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe47dfc42c1004ae9afdedd5c749c38a37ee470" translate="yes" xml:space="preserve">
          <source>The GIF writer plug-in supports the creation of animated GIF images through the standard sequence writing methods defined in the &lt;code&gt;ImageWriter&lt;/code&gt; class.</source>
          <target state="translated">GIFライタープラグインは、 &lt;code&gt;ImageWriter&lt;/code&gt; クラスで定義された標準シーケンス書き込みメソッドを使用して、アニメーションGIF画像の作成をサポートします。</target>
        </trans-unit>
        <trans-unit id="36041d90b5051a2148ab5cf02c46a6972de006b3" translate="yes" xml:space="preserve">
          <source>The GSS-API authentication tokens contain a definitive start and end. This method will attempt to read one of these tokens per invocation, and may block on the stream if only part of the token is available. In all other respects this method is equivalent to the byte array based &lt;a href=&quot;#acceptSecContext(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;acceptSecContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">GSS-API認証トークンには、明確な開始と終了が含まれています。このメソッドは、呼び出しごとにこれらのトークンの1つを読み取ろうとし、トークンの一部しか使用できない場合はストリームでブロックする可能性があります。他のすべての点で、このメソッドはバイト配列ベースの&lt;a href=&quot;#acceptSecContext(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;acceptSecContext&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="56846475ff5ecbb5782e2832cfad2417350c183f" translate="yes" xml:space="preserve">
          <source>The GSS-API authentication tokens contain a definitive start and end. This method will attempt to read one of these tokens per invocation, and may block on the stream if only part of the token is available. In all other respects this method is equivalent to the byte array based &lt;a href=&quot;#initSecContext(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;initSecContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">GSS-API認証トークンには、明確な開始と終了が含まれています。このメソッドは、呼び出しごとにこれらのトークンの1つを読み取ろうとし、トークンの一部しか使用できない場合はストリームでブロックする可能性があります。他のすべての点で、このメソッドはバイト配列ベースの&lt;a href=&quot;#initSecContext(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;initSecContext&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="eeb819a0af8bbcd4715be7fc89a01023347f013f" translate="yes" xml:space="preserve">
          <source>The GSS-API does not perform any communication with the peer. It merely produces tokens that the application must somehow transport to the other end.</source>
          <target state="translated">GSS-API はピアとの通信を行いません。それは単に、アプリケーションが何らかの方法で相手側に転送しなければならないトークンを生成するだけです。</target>
        </trans-unit>
        <trans-unit id="016e2418772c7bef7110806243864d9ad960cfde" translate="yes" xml:space="preserve">
          <source>The GSS-API is defined in a language independent way in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2743.txt&quot;&gt;RFC 2743&lt;/a&gt;. The Java language bindings are defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2853.txt&quot;&gt;RFC 2853&lt;/a&gt;</source>
          <target state="translated">GSS-APIは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2743.txt&quot;&gt;RFC2743&lt;/a&gt;で言語に依存しない方法で定義されています。Java言語バインディングは&lt;a href=&quot;http://www.ietf.org/rfc/rfc2853.txt&quot;&gt;RFC2853で&lt;/a&gt;定義されています</target>
        </trans-unit>
        <trans-unit id="ec3c90701fefb3ca12b6d1850be7012d813ae214" translate="yes" xml:space="preserve">
          <source>The GSS-API is defined in a language independent way in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2743.txt&quot;&gt;RFC 2743&lt;/a&gt;. The Java language bindings are defined in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2853.txt&quot;&gt;RFC 2853&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bda69e49cc0677094f88eb85a8d0e079496d764" translate="yes" xml:space="preserve">
          <source>The GSS-API itself does not dictate how an underlying mechanism obtains the credentials that are needed for authentication. It is assumed that prior to calling the GSS-API, these credentials are obtained and stored in a location that the mechanism provider is aware of. However, the default model in the Java platform will be that mechanism providers must obtain credentials only from the private or public credential sets associated with the &lt;a href=&quot;../../../../java.base/javax/security/auth/subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt; in the current access control context. The Kerberos v5 mechanism will search for the required INITIATE and ACCEPT credentials (&lt;a href=&quot;../../../javax/security/auth/kerberos/kerberosticket&quot;&gt;&lt;code&gt;KerberosTicket&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../javax/security/auth/kerberos/kerberoskey&quot;&gt;&lt;code&gt;KerberosKey&lt;/code&gt;&lt;/a&gt;) in the private credential set where as some other mechanism might look in the public set or in both. If the desired credential is not present in the appropriate sets of the current Subject, the GSS-API call must fail.</source>
          <target state="translated">GSS-API自体は、基盤となるメカニズムが認証に必要な資格情報を取得する方法を指示しません。 GSS-APIを呼び出す前に、これらの資格情報が取得され、メカニズムプロバイダーが認識している場所に保存されていると想定されます。ただし、Javaプラットフォームのデフォルトのモデルでは、メカニズムプロバイダーは、現在のアクセス制御コンテキストで&lt;a href=&quot;../../../../java.base/javax/security/auth/subject&quot;&gt; &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt;に関連付けられたプライベートまたはパブリックの資格情報セットからのみ資格情報を取得する必要があります。 Kerberos v5メカニズムは、必要なINITIATEおよびACCEPT資格情報（&lt;a href=&quot;../../../javax/security/auth/kerberos/kerberosticket&quot;&gt; &lt;code&gt;KerberosTicket&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../../javax/security/auth/kerberos/kerberoskey&quot;&gt; &lt;code&gt;KerberosKey&lt;/code&gt; )&lt;/a&gt;を検索します。）他のメカニズムがパブリックセットまたはその両方で検索される可能性があるプライベート資格情報セット内。目的の資格情報が現在のサブジェクトの適切なセットに存在しない場合、GSS-API呼び出しは失敗する必要があります。</target>
        </trans-unit>
        <trans-unit id="1e36671f93a675a82883cad4ce03c74c37680a15" translate="yes" xml:space="preserve">
          <source>The GSSManager would then first check with B if m1 was needed. In case B did not provide support for m1, the GSSManager would continue on to check with A. If any mechanism m2 is needed where m2 is different from m1 then the GSSManager would skip B and check with A directly.</source>
          <target state="translated">次に、GSSManager は、m1 が必要かどうかをまず B に確認する。B が m1 のサポートを提供していない場合、GSSManager は A にチェックを続けます。m2 が m1 と異なるメカニズム m2 が必要な場合、GSSManager は B をスキップして A に直接チェックを行います。</target>
        </trans-unit>
        <trans-unit id="78d03db12c1f011d0634db41f691571762f77a53" translate="yes" xml:space="preserve">
          <source>The GSSName name class contains public static Oid objects representing the standard name types defined in GSS-API.</source>
          <target state="translated">GSSNameクラスは、GSS-APIで定義されている標準的な名前タイプを表すパブリックな静的Oidオブジェクトを含んでいます。</target>
        </trans-unit>
        <trans-unit id="7c0eb54612e1b91b3d550046715cc18734cac067" translate="yes" xml:space="preserve">
          <source>The Generated annotation is used to mark source code that has been generated.</source>
          <target state="translated">Generated アノテーションは、生成されたソース コードをマークするために使用されます。</target>
        </trans-unit>
        <trans-unit id="f56c3c8627f80ee0eab3cf06dab68a8edf476a84" translate="yes" xml:space="preserve">
          <source>The Generated annotation is used to mark source code that has been generated. It can also be used to differentiate user written code from generated code in a single file.</source>
          <target state="translated">Generated アノテーションは、生成されたソース コードをマークするために使用します。また、単一のファイル内でユーザーが書いたコードと生成されたコードを区別するために使用することもできます。</target>
        </trans-unit>
        <trans-unit id="e14d8067e3c65f5d662592905874e96a639ba661" translate="yes" xml:space="preserve">
          <source>The Generated annotation is used to mark source code that has been generated. It can also be used to differentiate user written code from generated code in a single file. When used, the value element must have the name of the code generator. The recommended convention is to use the fully qualified name of the code generator in the value field .</source>
          <target state="translated">Generated アノテーションは、生成されたソース コードをマークするために使用します。また、単一のファイル内でユーザーが書いたコードと生成されたコードを区別するためにも使用できます。使用する場合、value 要素にはコード・ジェネレーターの名前を指定する必要があります。推奨される慣習は、値フィールドにコード・ジェネレーターの完全修飾名を使用することです。</target>
        </trans-unit>
        <trans-unit id="7af39d750477e1f9f73af9fe47ad7493425adbba" translate="yes" xml:space="preserve">
          <source>The Grand Unification of the above three.</source>
          <target state="translated">上記3つの大統一。</target>
        </trans-unit>
        <trans-unit id="04a51ed5fc80fe55a7d442756d529463d0e7f962" translate="yes" xml:space="preserve">
          <source>The GraphicAttribute determines the logical and visual bounds of the text; the actual Font values are ignored.</source>
          <target state="translated">GraphicAttribute は、 テキス ト の論理的 ・ 視覚的境界を決定 し ます。</target>
        </trans-unit>
        <trans-unit id="80dc94d54b402ab87a3bcf626574c928999dab0b" translate="yes" xml:space="preserve">
          <source>The Gujarati range with the Gujarati digits.</source>
          <target state="translated">グジャラート語の桁数のあるグジャラート語の範囲。</target>
        </trans-unit>
        <trans-unit id="3204f255d6bf3f20cea1af9b6db821aaebbf6fe0" translate="yes" xml:space="preserve">
          <source>The Gurmukhi range with the Gurmukhi digits.</source>
          <target state="translated">グルムキーの桁数でグルムキーの範囲。</target>
        </trans-unit>
        <trans-unit id="ceab662b8e5ed03e8ac9d3c0a5ad31c99a49f29f" translate="yes" xml:space="preserve">
          <source>The HTML document body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9656fd250eadbedcc38887eb760be79e35c0770b" translate="yes" xml:space="preserve">
          <source>The HTML document body. This element is always present in the DOM API, even if the tags are not present in the source document. See the BODY element definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034f52c179ed2f285aff346a1a725164486ab642" translate="yes" xml:space="preserve">
          <source>The HTTP cookie management in java.net package looks like:</source>
          <target state="translated">java.netパッケージのHTTPクッキー管理は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="7b3a512be37bd12625c3a8628efd22b37676aac1" translate="yes" xml:space="preserve">
          <source>The HTTP method (GET,POST,PUT,etc.).</source>
          <target state="translated">HTTPメソッド(GET,POST,PUTなど)。</target>
        </trans-unit>
        <trans-unit id="45069240481f167a4b1839f87d58530261cd8d54" translate="yes" xml:space="preserve">
          <source>The HTTP protocol handler has a few settings that can be accessed through System Properties. This covers &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html#Proxies&quot;&gt;Proxy settings&lt;/a&gt; as well as &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html#MiscHTTP&quot;&gt; various other settings&lt;/a&gt;.</source>
          <target state="translated">HTTPプロトコルハンドラーには、システムプロパティからアクセスできるいくつかの設定があります。これには、&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html#Proxies&quot;&gt;プロキシ設定&lt;/a&gt;だけでなく、&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html#MiscHTTP&quot;&gt;その他のさまざまな&lt;/a&gt;設定も含まれます。</target>
        </trans-unit>
        <trans-unit id="f75c91eee430b4e549a8250d151e91afa72d2dad" translate="yes" xml:space="preserve">
          <source>The HTTP protocol handler has a few settings that can be accessed through System Properties. This covers &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/net/doc-files/net-properties.html#Proxies&quot;&gt;Proxy settings&lt;/a&gt; as well as &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/net/doc-files/net-properties.html#MiscHTTP&quot;&gt; various other settings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d94af71e4f20cb6dbee51f81cf708d34fd43e9a" translate="yes" xml:space="preserve">
          <source>The HTTP protocol handler has a few settings that can be accessed through System Properties. This covers Proxy settings as well as  various other settings.</source>
          <target state="translated">HTTP プロトコルハンドラには、システムのプロパティからアクセスできるいくつかの設定があります。これは、プロキシの設定だけでなく、他の様々な設定をカバーしています。</target>
        </trans-unit>
        <trans-unit id="5cddb7cac72e4320c7958e414281c0eaaa74294f" translate="yes" xml:space="preserve">
          <source>The HTTP protocol version.</source>
          <target state="translated">HTTPプロトコルのバージョンです。</target>
        </trans-unit>
        <trans-unit id="0965d22a7cf7456f138f50ade9b626d2ce1a8ce8" translate="yes" xml:space="preserve">
          <source>The HTTP response message.</source>
          <target state="translated">HTTP レスポンスメッセージです。</target>
        </trans-unit>
        <trans-unit id="342acebe15f32e49ce73e2666488d1f7edf89d4a" translate="yes" xml:space="preserve">
          <source>The Highlighter bound to the associated text component is used to render the selection by default. Selection appearance can be customized by supplying a painter to use for the highlights. By default a painter is used that will render a solid color as specified in the associated text component in the &lt;code&gt;SelectionColor&lt;/code&gt; property. This can easily be changed by reimplementing the &lt;a href=&quot;#getSelectionPainter()&quot;&gt;&lt;code&gt;getSelectionPainter&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">関連するテキストコンポーネントにバインドされた蛍光ペンは、デフォルトで選択をレンダリングするために使用されます。ハイライトに使用するペインターを提供することにより、選択の外観をカスタマイズできます。デフォルトでは、 &lt;code&gt;SelectionColor&lt;/code&gt; プロパティの関連するテキストコンポーネントで指定されているように単色をレンダリングするペインターが使用されます。これは、&lt;a href=&quot;#getSelectionPainter()&quot;&gt; &lt;code&gt;getSelectionPainter&lt;/code&gt; &lt;/a&gt;メソッドを再実装することで簡単に変更できます。</target>
        </trans-unit>
        <trans-unit id="76c37afd4ebfca43ecc7113a9e735aed8c4a4c59" translate="yes" xml:space="preserve">
          <source>The Hijrah calendar has a different total of days in a year than Gregorian calendar, and the length of each month is based on the period of a complete revolution of the moon around the earth (as between successive new moons). Refer to the &lt;a href=&quot;hijrahchronology&quot;&gt;&lt;code&gt;HijrahChronology&lt;/code&gt;&lt;/a&gt; for details of supported variants.</source>
          <target state="translated">ヒジュラカレンダーは、グレゴリオ暦とは1年の合計日数が異なります。各月の長さは、地球の周りの月が完全に公転する周期に基づいています（連続する新月の間など）。サポートされているバリアントの詳細については、&lt;a href=&quot;hijrahchronology&quot;&gt; &lt;code&gt;HijrahChronology&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3cbb0a5265ed2b32362a56646ea33dae11e8ddd1" translate="yes" xml:space="preserve">
          <source>The Hijrah calendar is a lunar calendar supporting Islamic calendars.</source>
          <target state="translated">ヒジュラ暦は、イスラム暦をサポートする太陰暦です。</target>
        </trans-unit>
        <trans-unit id="5ef062b6d3746a7faa9fd4ff82681d5f88437d55" translate="yes" xml:space="preserve">
          <source>The Hijrah calendar system has one era, 'AH', defined by &lt;a href=&quot;hijrahera&quot;&gt;&lt;code&gt;HijrahEra&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Hijrahカレンダーシステムには、&lt;a href=&quot;hijrahera&quot;&gt; &lt;code&gt;HijrahEra&lt;/code&gt; &lt;/a&gt;によって定義された1つの時代「AH」があります。</target>
        </trans-unit>
        <trans-unit id="e597c41e9fa5f54ee9b2548de5fc25d85b9400b7" translate="yes" xml:space="preserve">
          <source>The Hijrah calendar system has only one era covering the proleptic years greater than zero.</source>
          <target state="translated">ヒジュラ暦のシステムでは、ゼロよりも大きいプロレプティックな年をカバーする時代が1つだけあります。</target>
        </trans-unit>
        <trans-unit id="8c7bf054691c4990879f32b517b7eb5c7c8f7c31" translate="yes" xml:space="preserve">
          <source>The Hijrah property resource is a set of properties that describe the calendar. The syntax is defined by &lt;code&gt;java.util.Properties#load(Reader)&lt;/code&gt;.</source>
          <target state="translated">Hijrahプロパティリソースは、カレンダーを説明する一連のプロパティです。構文は &lt;code&gt;java.util.Properties#load(Reader)&lt;/code&gt; によって定義されます。</target>
        </trans-unit>
        <trans-unit id="2d5f51089d0f9a89148d7f6f56fbc17a08c3c7dd" translate="yes" xml:space="preserve">
          <source>The HijrahChronology follows the rules of the Hijrah calendar system. The Hijrah calendar has several variants based on differences in when the new moon is determined to have occurred and where the observation is made. In some variants the length of each month is computed algorithmically from the astronomical data for the moon and earth and in others the length of the month is determined by an authorized sighting of the new moon. For the algorithmically based calendars the calendar can project into the future. For sighting based calendars only historical data from past sightings is available.</source>
          <target state="translated">ヒジュラークロノロジーは、ヒジュラー暦のルールに従います。ヒジュラ暦には、新月がいつ発生したか、どこで観測されたかの違いに基づいて、いくつかのバリエーションがあります。月と地球の天文学的なデータをもとに、月の長さをアルゴリズムで計算するものもあれば、新月の目撃情報をもとに月の長さを決定するものもあります。アルゴリズムに基づいたカレンダーでは、カレンダーは未来を予測することができます。目撃情報に基づいたカレンダーでは、過去の目撃情報から得られた過去のデータのみが利用可能です。</target>
        </trans-unit>
        <trans-unit id="e24e34ecc8a9ad3b4e4ea87309f75a1db55428a1" translate="yes" xml:space="preserve">
          <source>The Home key, a non-ASCII action key.</source>
          <target state="translated">ホームキー、非ASCIIのアクションキーです。</target>
        </trans-unit>
        <trans-unit id="b30101cf2f801668711691b72956c848b7ff79c7" translate="yes" xml:space="preserve">
          <source>The IANA charset registry does change over time, and so the canonical name and the aliases of a particular charset may also change over time. To ensure compatibility it is recommended that no alias ever be removed from a charset, and that if the canonical name of a charset is changed then its previous canonical name be made into an alias.</source>
          <target state="translated">IANA の charset レジストリは時間の経過とともに変化するので、特定の charset の正規名とエイリアスも時間の経過とともに変化する可能性があります。互換性を確保するために、エイリアスが文字セットから削除されることはなく、文字セットの正規名が変更された場合、以前の正規名をエイリアスにすることが推奨されています。</target>
        </trans-unit>
        <trans-unit id="41785330378e3e8d34f692fda2997c106c6be24f" translate="yes" xml:space="preserve">
          <source>The ICC standard uses a device independent color space (DICS) as the mechanism for converting color from one device to another device. In this architecture, colors are converted from the source device's color space to the ICC DICS and then from the ICC DICS to the destination device's color space. The ICC standard defines device profiles which contain transforms which will convert between a device's color space and the ICC DICS. The overall conversion of colors from a source device to colors of a destination device is done by connecting the device-to-DICS transform of the profile for the source device to the DICS-to-device transform of the profile for the destination device. For this reason, the ICC DICS is commonly referred to as the profile connection space (PCS). The color space used in the methods &lt;code&gt;toCIEXYZ&lt;/code&gt; and &lt;code&gt;fromCIEXYZ&lt;/code&gt; is the CIEXYZ PCS defined by the ICC Specification. This is also the color space represented by &lt;code&gt;ColorSpace.CS_CIEXYZ&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4291d010a17ade250e32deaae43f97dfb3a7ba1f" translate="yes" xml:space="preserve">
          <source>The ICC standard uses a device independent color space (DICS) as the mechanism for converting color from one device to another device. In this architecture, colors are converted from the source device's color space to the ICC DICS and then from the ICC DICS to the destination device's color space. The ICC standard defines device profiles which contain transforms which will convert between a device's color space and the ICC DICS. The overall conversion of colors from a source device to colors of a destination device is done by connecting the device-to-DICS transform of the profile for the source device to the DICS-to-device transform of the profile for the destination device. For this reason, the ICC DICS is commonly referred to as the profile connection space (PCS). The color space used in the methods toCIEXYZ and fromCIEXYZ is the CIEXYZ PCS defined by the ICC Specification. This is also the color space represented by ColorSpace.CS_CIEXYZ.</source>
          <target state="translated">ICC規格では、あるデバイスから別のデバイスへの色変換の仕組みとしてDICS(Device Independent Color Space)を採用しています。こ のアーキテ ク チ ャ では、 色は、 ソース デバ イ ス の色空間か ら ICC DICS に変換 さ れ、 その後 ICC DICS からデスティネーション デバ イ ス の色空間に変換 さ れます。ICC 規格は、 デバ イ ス の色空間 と ICC DICS の間で変換す る 変換を含むデバ イ ス プ ロ フ ァ イ ルを定義 し てい ます。ソースデバイスからデスティネーションデバイスの色への全体的な変換は、ソースデバイスのプロファイルのデバイス-DICS変換とデスティネーションデバイスのプロファイルのDICS-to-デバイス変換を接続することで行われます。このため、ICCのDICSは、一般的にPCS(Profile Connection Space)と呼ばれている。toCIEXYZおよびfromCIEXYZのメソッドで使用される色空間は、ICC仕様で定義されているCIEXYZ PCSです。これは、ColorSpace.CS_CIEXYZで表される色空間でもあります。</target>
        </trans-unit>
        <trans-unit id="e6b1df547566cde6967819973372499ee99ddb22" translate="yes" xml:space="preserve">
          <source>The ICC_ColorSpace class is an implementation of the abstract ColorSpace class.</source>
          <target state="translated">ICC_ColorSpaceクラスは、抽象ColorSpaceクラスの実装です。</target>
        </trans-unit>
        <trans-unit id="29a4fdfa37a516d2928ce968cabea4dcd82635e5" translate="yes" xml:space="preserve">
          <source>The ICC_ColorSpace class is an implementation of the abstract ColorSpace class. This representation of device independent and device dependent color spaces is based on the International Color Consortium Specification ICC.1:2001-12, File Format for Color Profiles (see &lt;a href=&quot;http://www.color.org&quot;&gt;http://www.color.org&lt;/a&gt;).</source>
          <target state="translated">ICC_ColorSpaceクラスは、抽象ColorSpaceクラスの実装です。デバイスに依存しない色空間とデバイスに依存する色空間のこの表現は、International Color Consortium Specification ICC.1：2001-12、File Format for Color Profiles（&lt;a href=&quot;http://www.color.org&quot;&gt;http://www.color.orgを参照&lt;/a&gt;）に基づいています。</target>
        </trans-unit>
        <trans-unit id="72f3ceadbe13561989c9f7b18cd300f66f00b9cf" translate="yes" xml:space="preserve">
          <source>The ICC_ProfileRGB class is a subclass of the ICC_Profile class that represents profiles which meet the following criteria:</source>
          <target state="translated">ICC_ProfileRGBクラスは、以下の基準を満たすプロファイルを表すICC_Profileクラスのサブクラスです。</target>
        </trans-unit>
        <trans-unit id="46384c6ea74d47171799bd6ab4946e6155803a9f" translate="yes" xml:space="preserve">
          <source>The ICC_ProfileRGB class is a subclass of the ICC_Profile class that represents profiles which meet the following criteria: The profile's color space type is RGB. The profile includes the &lt;code&gt;redColorantTag&lt;/code&gt;, &lt;code&gt;greenColorantTag&lt;/code&gt;, &lt;code&gt;blueColorantTag&lt;/code&gt;, &lt;code&gt;redTRCTag&lt;/code&gt;, &lt;code&gt;greenTRCTag&lt;/code&gt;, &lt;code&gt;blueTRCTag&lt;/code&gt;, and &lt;code&gt;mediaWhitePointTag&lt;/code&gt; tags. The &lt;code&gt;ICC_Profile getInstance&lt;/code&gt; method will return an &lt;code&gt;ICC_ProfileRGB&lt;/code&gt; object when these conditions are met.</source>
          <target state="translated">ICC_ProfileRGBクラスは、次の条件を満たすプロファイルを表すICC_Profileクラスのサブクラスです。プロファイルの色空間タイプはRGBです。プロファイルには、 &lt;code&gt;redColorantTag&lt;/code&gt; 、 &lt;code&gt;greenColorantTag&lt;/code&gt; 、 &lt;code&gt;blueColorantTag&lt;/code&gt; 、 &lt;code&gt;redTRCTag&lt;/code&gt; 、 &lt;code&gt;greenTRCTag&lt;/code&gt; 、 &lt;code&gt;blueTRCTag&lt;/code&gt; 、および &lt;code&gt;mediaWhitePointTag&lt;/code&gt; タグが含まれます。 &lt;code&gt;ICC_Profile getInstance&lt;/code&gt; メソッドは戻ります &lt;code&gt;ICC_ProfileRGB&lt;/code&gt; のこれらの条件が満たされたときにオブジェクトを。</target>
        </trans-unit>
        <trans-unit id="237b13a4a1d88dd1cd58b5de8b3676b6a2af1c85" translate="yes" xml:space="preserve">
          <source>The ID is a unique identifier for the type in the Java Virtual Machine (JVM). The ID might not be the same between JVM instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09a7c491e42ec0ccd6087606b59441de1f0715c" translate="yes" xml:space="preserve">
          <source>The ID is minor variation to the standard ISO-8601 formatted string for the offset. There are three formats:</source>
          <target state="translated">ID は、オフセットのための標準 ISO-8601 フォーマットの文字列に対するマイナーなバリエーションである。フォーマットは3つあります。</target>
        </trans-unit>
        <trans-unit id="d29cb73c296776b288211b97e00b807749e9b2d0" translate="yes" xml:space="preserve">
          <source>The ID is unique within the system. There are three types of ID.</source>
          <target state="translated">IDはシステム内で一意です。IDには3種類あります。</target>
        </trans-unit>
        <trans-unit id="8452b5eaac842a0d2e795c7eda14cf159816708e" translate="yes" xml:space="preserve">
          <source>The ID might not be the same between JVM instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e455bd7cf49d3abbf675e3850b6bdcd9bb42c4a" translate="yes" xml:space="preserve">
          <source>The ID might not be the same between Java Virtual Machine (JVM) instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae854760d3f4276cd755511e493cc5a51b830e12" translate="yes" xml:space="preserve">
          <source>The ID of the listener to which the notification is targeted.</source>
          <target state="translated">通知の対象となるリスナーのID。</target>
        </trans-unit>
        <trans-unit id="01ee2510bd3aca83bad9699f7e3b7df60b473549" translate="yes" xml:space="preserve">
          <source>The ID of the returned offset will be normalized to one of the formats described by &lt;a href=&quot;#getId()&quot;&gt;&lt;code&gt;getId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるオフセットのIDは、&lt;a href=&quot;#getId()&quot;&gt; &lt;code&gt;getId()&lt;/code&gt; で&lt;/a&gt;記述された形式の1つに正規化されます。</target>
        </trans-unit>
        <trans-unit id="61fd4732cbe2e01752b6c8cf6a30f14f6ab40119" translate="yes" xml:space="preserve">
          <source>The ID of the returned offset will be normalized to one of the formats described by &lt;a href=&quot;zoneoffset#getId--&quot;&gt;&lt;code&gt;getId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるオフセットのIDは、&lt;a href=&quot;zoneoffset#getId--&quot;&gt; &lt;code&gt;getId()&lt;/code&gt; で&lt;/a&gt;記述された形式のいずれかに正規化されます。</target>
        </trans-unit>
        <trans-unit id="7c8cb46fd48547fa630e300fcba11829a98c4159" translate="yes" xml:space="preserve">
          <source>The ID of the thread that owns the object that the thread is blocked.</source>
          <target state="translated">スレッドがブロックされているオブジェクトを所有しているスレッドのID。</target>
        </trans-unit>
        <trans-unit id="4bed910017ae47e15f9fd68ce9f4a7a2eb621fdb" translate="yes" xml:space="preserve">
          <source>The ID uniquely identifies the &lt;code&gt;Chronology&lt;/code&gt;. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;#of(java.lang.String)&quot;&gt;&lt;code&gt;of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">IDは、 &lt;code&gt;Chronology&lt;/code&gt; 一意に識別します。&lt;a href=&quot;#of(java.lang.String)&quot;&gt; &lt;code&gt;of(String)&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;Chronology&lt;/code&gt; を検索するために使用できます。</target>
        </trans-unit>
        <trans-unit id="bbbbed4ad86feca80f73d8a6ba6de9c29be78a79" translate="yes" xml:space="preserve">
          <source>The ID uniquely identifies the &lt;code&gt;Chronology&lt;/code&gt;. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of(java.lang.String)&quot;&gt;&lt;code&gt;Chronology.of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">IDは、 &lt;code&gt;Chronology&lt;/code&gt; 一意に識別します。&lt;a href=&quot;chronology#of(java.lang.String)&quot;&gt; &lt;code&gt;Chronology.of(String)&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;Chronology&lt;/code&gt; を検索するために使用できます。</target>
        </trans-unit>
        <trans-unit id="fd6d60e60fa86ec5a78289385fee6d0f6bc1bdd6" translate="yes" xml:space="preserve">
          <source>The ID uniquely identifies the &lt;code&gt;Chronology&lt;/code&gt;. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt;&lt;code&gt;Chronology.of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">IDは、 &lt;code&gt;Chronology&lt;/code&gt; 一意に識別します。&lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt; &lt;code&gt;Chronology.of(String)&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;Chronology&lt;/code&gt; を検索するために使用できます。</target>
        </trans-unit>
        <trans-unit id="1cafcec37d18d1f40c55857c337e84b388be6a4b" translate="yes" xml:space="preserve">
          <source>The ID uniquely identifies the &lt;code&gt;Chronology&lt;/code&gt;. It can be used to lookup the &lt;code&gt;Chronology&lt;/code&gt; using &lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt;&lt;code&gt;of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">IDは、 &lt;code&gt;Chronology&lt;/code&gt; 一意に識別します。&lt;a href=&quot;chronology#of-java.lang.String-&quot;&gt; &lt;code&gt;of(String)&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;Chronology&lt;/code&gt; を検索するために使用できます。</target>
        </trans-unit>
        <trans-unit id="eec3d7c57ef5447e9bdebab954ee90700a2a652d" translate="yes" xml:space="preserve">
          <source>The IP address of the remote end of this socket.</source>
          <target state="translated">このソケットのリモート側のIPアドレス。</target>
        </trans-unit>
        <trans-unit id="510660eb55dda01e452a05872bd22f9cfe584483" translate="yes" xml:space="preserve">
          <source>The IPv6-address is a literal IPv6 address as described above. The</source>
          <target state="translated">このIPv6アドレスは、上述したようにリテラルIPv6アドレスである。であることを示しています。</target>
        </trans-unit>
        <trans-unit id="4679bfab8bdf1a02bfe30406e4c9f7a2085873a2" translate="yes" xml:space="preserve">
          <source>The ISO 3166-1 codes can be found on-line.</source>
          <target state="translated">ISO 3166-1のコードはオンラインで見つけることができます。</target>
        </trans-unit>
        <trans-unit id="611dd8f9d48699c9411b9432a1cb2dc63863602c" translate="yes" xml:space="preserve">
          <source>The ISO calendar system behaves as follows:</source>
          <target state="translated">ISOカレンダーシステムは以下のように動作します。</target>
        </trans-unit>
        <trans-unit id="6082f991bd981467ab45e2ffde3309b5e82f6280" translate="yes" xml:space="preserve">
          <source>The ISO calendar system defines an additional week-based division of years. This defines a year based on whole Monday to Monday weeks. This is modeled in &lt;a href=&quot;isofields&quot;&gt;&lt;code&gt;IsoFields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ISOカレンダーシステムは、追加の週ベースの年の区分を定義します。これは、月曜日から月曜日の週全体に基づいて年を定義します。これは&lt;a href=&quot;isofields&quot;&gt; &lt;code&gt;IsoFields&lt;/code&gt; &lt;/a&gt;でモデル化されています。</target>
        </trans-unit>
        <trans-unit id="4d077fd16854767d357096f809fb7b81bacb82c7" translate="yes" xml:space="preserve">
          <source>The ISO calendar system.</source>
          <target state="translated">ISOカレンダーシステム。</target>
        </trans-unit>
        <trans-unit id="58e26e3bf55479a8a5120fe45b369953d4715df2" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses a date with an offset, such as '2011-12-03+01:00'.</source>
          <target state="translated">2011-12-03+01:00' のようなオフセットを持つ日付をフォーマットまたはパースする ISO 日付フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="6de9417addd60d61c439ecd60520ce653b7ff208" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses a date with the offset if available, such as '2011-12-03' or '2011-12-03+01:00'.</source>
          <target state="translated">ISO 日付フォーマッタは、'2011-12-03' や '2011-12-03+01:00' のように、オフセットがある場合にはオフセットを使って日付をフォーマットしたり、パースしたりします。</target>
        </trans-unit>
        <trans-unit id="2bed7eaa4131a3fd0eed3c41b0dc86a015ca96db" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses a date without an offset, such as '2011-12-03'.</source>
          <target state="translated">2011-12-03' のようなオフセットのない日付をフォーマットまたはパースする ISO 日付フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="21efec4c9a9cd99bd7c37c45effa030d9f01c4ca" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses a date without an offset, such as '20111203'.</source>
          <target state="translated">20111203' のようなオフセットのない日付をフォーマットまたはパースする ISO 日付フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="5e79ab154ec99d657cac16998df6c24432d36bfb" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses the ordinal date without an offset, such as '2012-337'.</source>
          <target state="translated">2012-337' のようなオフセットのない順序の日付をフォーマットまたはパースする ISO 日付フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="8947499950b72303579b6072a1f0f70410f938f9" translate="yes" xml:space="preserve">
          <source>The ISO date formatter that formats or parses the week-based date without an offset, such as '2012-W48-6'.</source>
          <target state="translated">2012-W48-6' のように、週単位の日付をオフセットなしでフォーマットまたはパースする ISO 日付フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="ad4a4f923ef1dd96afdbb263d3503d29224e8ce9" translate="yes" xml:space="preserve">
          <source>The ISO date of the first day of the minimum Hijrah year.</source>
          <target state="translated">最小ヒジュラー年の初日のISO日付。</target>
        </trans-unit>
        <trans-unit id="ab2094bfe0e934a818f591f8e39df5d0c0f5b428" translate="yes" xml:space="preserve">
          <source>The ISO date-time formatter that formats or parses a date-time with an offset, such as '2011-12-03T10:15:30+01:00'.</source>
          <target state="translated">2011-12-03T10:15:30+01:00' のようなオフセットを持つ日付時刻をフォーマットまたはパースする ISO 日付時刻フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="b7f380848807763c304877a683626ef209b2dd72" translate="yes" xml:space="preserve">
          <source>The ISO date-time formatter that formats or parses a date-time without an offset, such as '2011-12-03T10:15:30'.</source>
          <target state="translated">2011-12-03T10:15:30' のようなオフセットのない日付時刻をフォーマットまたはパースする ISO 日付時刻フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="bd2f9f3c47232e93e12ebe7e08b1617ed46664af" translate="yes" xml:space="preserve">
          <source>The ISO instant formatter that formats or parses an instant in UTC, such as '2011-12-03T10:15:30Z'.</source>
          <target state="translated">2011-12-03T10:15:30Z' のように UTC でインスタントをフォーマットまたはパースする ISO インスタントフォーマッタ。</target>
        </trans-unit>
        <trans-unit id="95a52b961a46e25216875fca80e6d411d7ab598a" translate="yes" xml:space="preserve">
          <source>The ISO time formatter that formats or parses a time with an offset, such as '10:15+01:00' or '10:15:30+01:00'.</source>
          <target state="translated">10:15+01:00」や「10:15:30+01:00」のようなオフセットを持つ時刻をフォーマットまたはパースするISO時刻フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="df2987c695a53ce54ed87dd02ab3fbad12667817" translate="yes" xml:space="preserve">
          <source>The ISO time formatter that formats or parses a time without an offset, such as '10:15' or '10:15:30'.</source>
          <target state="translated">10:15' や '10:15:30' のようなオフセットのない時刻をフォーマットまたはパースする ISO 時刻フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="d335e1639bd2cf2c6fa963a589bd508ea6cff667" translate="yes" xml:space="preserve">
          <source>The ISO time formatter that formats or parses a time, with the offset if available, such as '10:15', '10:15:30' or '10:15:30+01:00'.</source>
          <target state="translated">10:15'、'10:15:30'、'10:15:30+01:00' のように、オフセットがあればそれを用いて時刻をフォーマットまたはパースする ISO 時刻フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="0a3f5206473b8e9b0e863ce6a87c607ec16d4baa" translate="yes" xml:space="preserve">
          <source>The ISO-8601 calendar system is the modern civil calendar system used today in most of the world. It is equivalent to the proleptic Gregorian calendar system, in which today's rules for leap years are applied for all time.</source>
          <target state="translated">ISO-8601カレンダーシステムは、今日、世界のほとんどの国で使用されている近代的な民暦システムである。それは閏年のための今日の規則がすべての時間のために適用されるプロレプティックグレゴリオ暦システムと同等である。</target>
        </trans-unit>
        <trans-unit id="6b0753a83aa00ab66715a1d0bce536d311b35dee" translate="yes" xml:space="preserve">
          <source>The ISO-8601 calendar system is the modern civil calendar system used today in most of the world. It is equivalent to the proleptic Gregorian calendar system, in which today's rules for leap years are applied for all time. For most applications written today, the ISO-8601 rules are entirely suitable. However, any application that makes use of historical dates, and requires them to be accurate will find the ISO-8601 approach unsuitable.</source>
          <target state="translated">ISO-8601カレンダーシステムは、今日、世界のほとんどの国で使用されている近代的な民暦システムである。それは、うるう年のための今日の規則がすべての時間のために適用されるプロレプティック・グレゴリオ暦システムに相当します。今日書かれているほとんどのアプリケーションでは、ISO-8601の規則が完全に適しています。しかし、歴史的な日付を使用し、それらが正確であることを必要とする任意のアプリケーションでは、ISO-8601のアプローチは不適当であることがわかります。</target>
        </trans-unit>
        <trans-unit id="2b87b0b3d3f02384c82a8cdf0d2d60d19047ef46" translate="yes" xml:space="preserve">
          <source>The ISO-8601 calendar system is the modern civil calendar system used today in most of the world. This API assumes that all calendar systems use the same representation, this class, for time-of-day.</source>
          <target state="translated">ISO-8601 暦システムは、今日世界のほとんどの国で使用されている最新の民間暦システムです。この API は、すべてのカレンダーシステムが同じ表現であるこのクラスを使用することを前提としています。</target>
        </trans-unit>
        <trans-unit id="24cf4f50b66f15436634e4e63889e0eeb0811579" translate="yes" xml:space="preserve">
          <source>The ISO-8601 definition, where a week starts on Monday and the first week has a minimum of 4 days.</source>
          <target state="translated">週が月曜日から始まるISO-8601の定義で、最初の週は最低でも4日です。</target>
        </trans-unit>
        <trans-unit id="ea56e5764492774cbd5793c14b636ad2fff88f1f" translate="yes" xml:space="preserve">
          <source>The ISO-8601 standard defines a calendar system based on weeks. It uses the week-based-year and week-of-week-based-year concepts to split up the passage of days instead of the standard year/month/day.</source>
          <target state="translated">ISO-8601規格では、週を基準としたカレンダーシステムを定義しています。標準的な年/月/日の代わりに、週を基準とした年と週を基準とした年の概念を使用して、日の経過を分割します。</target>
        </trans-unit>
        <trans-unit id="cd8f2e4ef07a7ae4561e3a206df7d9c3194cc3bf" translate="yes" xml:space="preserve">
          <source>The ISO-8601 standard does not define eras. A definition has therefore been created with two eras - 'Current era' (CE) for years on or after 0001-01-01 (ISO), and 'Before current era' (BCE) for years before that.</source>
          <target state="translated">ISO-8601 規格では、時代を定義していない。そのため、0001-01-01(ISO)以降の年月は「現在の時代」(CE)、それ以前の年月は「現在の時代以前」(BCE)という2つの時代を定義しています。</target>
        </trans-unit>
        <trans-unit id="15f2960aca862d8387dbd45828c14f2ee1a23360" translate="yes" xml:space="preserve">
          <source>The ISO-8601 standard is based on the standard civic 12 month year. This is commonly divided into four quarters, often abbreviated as Q1, Q2, Q3 and Q4.</source>
          <target state="translated">ISO-8601規格は、標準的な公民12ヶ月年をベースにしています。これは一般的にQ1、Q2、Q3、Q4と略されることが多い4つの四半期に分けられています。</target>
        </trans-unit>
        <trans-unit id="6e18900e4d1930d96696f4d4906e19682a06d587" translate="yes" xml:space="preserve">
          <source>The ISO-8601 standard was originally intended as a data interchange format, defining a string format for dates and times. However, it also defines an alternate way of expressing the date, based on the concept of week-based-year.</source>
          <target state="translated">ISO-8601規格は元々、日付と時刻のための文字列フォーマットを定義するデータ交換フォーマットとして意図されていた。しかし、週を基準とした年の概念に基づいた日付の代替的な表現方法も定義されています。</target>
        </trans-unit>
        <trans-unit id="12da9e8bfa2848ec37f88ea0629d59e6306e0906" translate="yes" xml:space="preserve">
          <source>The ISO-like date-time formatter that formats or parses a date-time with offset and zone, such as '2011-12-03T10:15:30+01:00[Europe/Paris]'.</source>
          <target state="translated">2011-12-03T10:15:30+01:00[ヨーロッパ/パリ]のようなオフセットとゾーンを持つ日付時刻をフォーマットまたはパースするISOライクな日付時刻フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="86afa3124f1aed75c36e4dd56bfce8c49977f732" translate="yes" xml:space="preserve">
          <source>The ISO-like date-time formatter that formats or parses a date-time with the offset and zone if available, such as '2011-12-03T10:15:30', '2011-12-03T10:15:30+01:00' or '2011-12-03T10:15:30+01:00[Europe/Paris]'.</source>
          <target state="translated">ISOライクな日付時刻フォーマッタで、'2011-12-03T10:15:30'、'2011-12-03T10:15:30+01:00'、'2011-12-03T10:15:30+01:00[ヨーロッパ/パリ]のように、利用可能であればオフセットとゾーンを指定して日付時刻をフォーマットまたはパースする。</target>
        </trans-unit>
        <trans-unit id="1770c1e43e10767defa4c018f5743b7b2d0ab296" translate="yes" xml:space="preserve">
          <source>The IV is taken from &lt;code&gt;iv&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt; inclusive. Note that the size of the IV (block size), starting at &lt;code&gt;offset&lt;/code&gt; inclusive, must be twice the word size. The bytes that constitute the IV are those between &lt;code&gt;iv[offset]&lt;/code&gt; and &lt;code&gt;iv[offset+2*(wordSize/8)-1]&lt;/code&gt; inclusive.</source>
          <target state="translated">IVは &lt;code&gt;iv&lt;/code&gt; から取得され、 &lt;code&gt;offset&lt;/code&gt; 含みます。IVのサイズ（ブロックサイズ）は、 &lt;code&gt;offset&lt;/code&gt; 含めて、ワードサイズの2倍でなければならないことに注意してください。IVを構成するバイトは、 &lt;code&gt;iv[offset]&lt;/code&gt; と &lt;code&gt;iv[offset+2*(wordSize/8)-1]&lt;/code&gt; 間のバイトです。</target>
        </trans-unit>
        <trans-unit id="47f00745675042f6a724b595797a24a07101fd7a" translate="yes" xml:space="preserve">
          <source>The IV is taken from &lt;code&gt;iv&lt;/code&gt;, starting at &lt;code&gt;offset&lt;/code&gt; inclusive. The bytes that constitute the IV are those between &lt;code&gt;iv[offset]&lt;/code&gt; and &lt;code&gt;iv[offset+7]&lt;/code&gt; inclusive.</source>
          <target state="translated">IVは &lt;code&gt;iv&lt;/code&gt; から取得され、 &lt;code&gt;offset&lt;/code&gt; 含みます。IVを構成するバイトは、 &lt;code&gt;iv[offset]&lt;/code&gt; と &lt;code&gt;iv[offset+7]&lt;/code&gt; 間のバイトです。</target>
        </trans-unit>
        <trans-unit id="dd985ba4ac843c2aa13ce1073a3079fccc30b81d" translate="yes" xml:space="preserve">
          <source>The Id of the calendar in common usage</source>
          <target state="translated">一般的に使われているカレンダーのID</target>
        </trans-unit>
        <trans-unit id="faa9a0061bb28bf6c97cd39acf5b5a828ccf93f4" translate="yes" xml:space="preserve">
          <source>The InetAddress class has a cache to store successful as well as unsuccessful host name resolutions.</source>
          <target state="translated">InetAddress クラスは、成功したホスト名と失敗したホスト名の解決策を保存するためのキャッシュを持っています。</target>
        </trans-unit>
        <trans-unit id="b6bf2f6528348c5b02c604ad3248d294717b2a1b" translate="yes" xml:space="preserve">
          <source>The InetAddress class provides methods to resolve host names to their IP addresses and vice versa.</source>
          <target state="translated">InetAddress クラスは、ホスト名を IP アドレスに解決するメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="cc9a029be511dad65fe5032c793e83b48780fe75" translate="yes" xml:space="preserve">
          <source>The InetAddress may not uniquely identify the network interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c425709246c3a74df2ab86c6b08f918b251f224f" translate="yes" xml:space="preserve">
          <source>The InetAddress may not uniquely identify the network interface. Use &lt;a href=&quot;#setNetworkInterface(java.net.NetworkInterface)&quot;&gt;&lt;code&gt;setNetworkInterface(NetworkInterface)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b8748cc6268fcd7ebec74a58229406dde9da72" translate="yes" xml:space="preserve">
          <source>The InetAddress returned will represent the IPv4 loopback address, 127.0.0.1, or the IPv6 loopback address, ::1. The IPv4 loopback address returned is only one of many in the form 127.*.*.*</source>
          <target state="translated">返される InetAddress は、IPv4 ループバックアドレス 127.0.0.0.1、または IPv6 ループバックアドレス ::1 を表します。返されるIPv4ループバックアドレスは、127.*.*.*.*.</target>
        </trans-unit>
        <trans-unit id="2152fa5309ac167073dd45954409ff4768fda7a1" translate="yes" xml:space="preserve">
          <source>The Initial Context</source>
          <target state="translated">初期文脈</target>
        </trans-unit>
        <trans-unit id="ac8c89b1c1f180681f98a482edf01b3499693ace" translate="yes" xml:space="preserve">
          <source>The Insert key, a non-ASCII action key.</source>
          <target state="translated">Insertキー、非ASCIIアクションキーです。</target>
        </trans-unit>
        <trans-unit id="9ff6f766ad82286cf3b4ec81ad2977fb2af744de" translate="yes" xml:space="preserve">
          <source>The Internet Assigned Numbers Authority maintains the &lt;a href=&quot;http://www.iana.org/assignments/uri-schemes.html&quot;&gt;official list of URI schemes&lt;/a&gt;.</source>
          <target state="translated">Internet Assigned Numbers Authorityは、&lt;a href=&quot;http://www.iana.org/assignments/uri-schemes.html&quot;&gt;URIスキームの公式リストを&lt;/a&gt;管理しています。</target>
        </trans-unit>
        <trans-unit id="f994aa3493fbbe076ad643b790ff4c68651b124a" translate="yes" xml:space="preserve">
          <source>The Internet Assigned Numbers Authority maintains the &lt;a href=&quot;https://www.iana.org/assignments/uri-schemes.html&quot;&gt;official list of URI schemes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6529cb88cc0262a6e384c19547d019dbb6bed8b" translate="yes" xml:space="preserve">
          <source>The Introspector class provides a standard way for tools to learn about the properties, events, and methods supported by a target Java Bean.</source>
          <target state="translated">Introspectorクラスは,ターゲットJava Beanがサポートするプロパティ,イベント,メソッドについて学習するためのツールの標準的な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="d59d73b56b3dc062d05806ca58651ba62a2b2f54" translate="yes" xml:space="preserve">
          <source>The JAAS login module in the JDK reference implementation destroys all tickets after logout.</source>
          <target state="translated">JDK リファレンス実装の JAAS ログインモジュールは、ログアウト後にすべてのチケットを破棄します。</target>
        </trans-unit>
        <trans-unit id="fc346e9074de046178b6976458380753f8a1bf98" translate="yes" xml:space="preserve">
          <source>The JAR File Specification defines manifest attributes for standalone applications that are packaged as &lt;em&gt;executable JAR files&lt;/em&gt;. If an implementation supports a mechanism to start an application as an executable JAR then the main manifest may include the &lt;code&gt;Launcher-Agent-Class&lt;/code&gt; attribute to specify the class name of an agent to start before the application &lt;code&gt;main&lt;/code&gt; method is invoked. The Java virtual machine attempts to invoke the following method on the agent class:</source>
          <target state="translated">JARファイル仕様は、&lt;em&gt;実行可能JARファイル&lt;/em&gt;としてパッケージ化されたスタンドアロンアプリケーションのマニフェスト属性を定義し&lt;em&gt;ます&lt;/em&gt;。実装が実行可能JARとしてアプリケーションを開始するメカニズムをサポートしている場合、メインマニフェストには &lt;code&gt;Launcher-Agent-Class&lt;/code&gt; 属性を含めて、アプリケーションの &lt;code&gt;main&lt;/code&gt; メソッドが呼び出される前に開始するエージェントのクラス名を指定できます。 Java仮想マシンは、エージェントクラスで次のメソッドを呼び出そうとします。</target>
        </trans-unit>
        <trans-unit id="9399cacad1f2d454e6eb5e3191a8f321b607ef5b" translate="yes" xml:space="preserve">
          <source>The JAR File Specification: Package Sealing</source>
          <target state="translated">JARファイルの仕様。パッケージの封印</target>
        </trans-unit>
        <trans-unit id="e6747986174a0238886b1fc2303c30e9cad08546" translate="yes" xml:space="preserve">
          <source>The JAR file contains a provider configuration named &lt;code&gt;com.sun.tools.attach.spi.AttachProvider&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb84f09030f91494fb9beb5357d12365eccba462" translate="yes" xml:space="preserve">
          <source>The JAR manifest file name.</source>
          <target state="translated">JAR マニフェストファイル名。</target>
        </trans-unit>
        <trans-unit id="767966e80e6e7fb64c0055271e699571168269ff" translate="yes" xml:space="preserve">
          <source>The JAXP Processors' support for Catalog depends on both the &lt;a href=&quot;../xmlconstants#USE_CATALOG&quot;&gt;&lt;code&gt;USE_CATALOG&lt;/code&gt;&lt;/a&gt; feature and the existence of valid Catalog file(s). A JAXP processor will use the Catalog only when the feature is true and valid Catalog file(s) are specified through the &lt;code&gt;javax.xml.catalog.files&lt;/code&gt; property. It will make no attempt to use the Catalog if either &lt;a href=&quot;../xmlconstants#USE_CATALOG&quot;&gt;&lt;code&gt;USE_CATALOG&lt;/code&gt;&lt;/a&gt; is set to false, or there is no Catalog file specified.</source>
          <target state="translated">The JAXP Processors' support for Catalog depends on both the &lt;a href=&quot;../xmlconstants#USE_CATALOG&quot;&gt; &lt;code&gt;USE_CATALOG&lt;/code&gt; &lt;/a&gt; feature and the existence of valid Catalog file(s). A JAXP processor will use the Catalog only when the feature is true and valid Catalog file(s) are specified through the &lt;code&gt;javax.xml.catalog.files&lt;/code&gt; property. It will make no attempt to use the Catalog if either &lt;a href=&quot;../xmlconstants#USE_CATALOG&quot;&gt; &lt;code&gt;USE_CATALOG&lt;/code&gt; &lt;/a&gt; is set to false, or there is no Catalog file specified.</target>
        </trans-unit>
        <trans-unit id="672525f13b4776f4afc24e25f67783864e75b16d" translate="yes" xml:space="preserve">
          <source>The JAXP parsing API has been integrated with the Validation API. Applications may create a &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; with the validation API and associate it with a &lt;a href=&quot;../parsers/documentbuilderfactory&quot;&gt;&lt;code&gt;DocumentBuilderFactory&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../parsers/saxparserfactory&quot;&gt;&lt;code&gt;SAXParserFactory&lt;/code&gt;&lt;/a&gt; instance by using the &lt;a href=&quot;../parsers/documentbuilderfactory#setSchema(javax.xml.validation.Schema)&quot;&gt;&lt;code&gt;DocumentBuilderFactory.setSchema(Schema)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../parsers/saxparserfactory#setSchema(javax.xml.validation.Schema)&quot;&gt;&lt;code&gt;SAXParserFactory.setSchema(Schema)&lt;/code&gt;&lt;/a&gt; methods. &lt;strong&gt;You should not&lt;/strong&gt; both set a schema and call &lt;code&gt;setValidating(true)&lt;/code&gt; on a parser factory. The former technique will cause parsers to use the new validation API; the latter will cause parsers to use their own internal validation facilities. &lt;strong&gt;Turning on both of these options simultaneously will cause either redundant behavior or error conditions.&lt;/strong&gt;</source>
          <target state="translated">The JAXP parsing API has been integrated with the Validation API. Applications may create a &lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt; with the validation API and associate it with a &lt;a href=&quot;../parsers/documentbuilderfactory&quot;&gt; &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; &lt;/a&gt; or a &lt;a href=&quot;../parsers/saxparserfactory&quot;&gt; &lt;code&gt;SAXParserFactory&lt;/code&gt; &lt;/a&gt; instance by using the &lt;a href=&quot;../parsers/documentbuilderfactory#setSchema(javax.xml.validation.Schema)&quot;&gt; &lt;code&gt;DocumentBuilderFactory.setSchema(Schema)&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;../parsers/saxparserfactory#setSchema(javax.xml.validation.Schema)&quot;&gt; &lt;code&gt;SAXParserFactory.setSchema(Schema)&lt;/code&gt; &lt;/a&gt; methods. &lt;strong&gt;You should not&lt;/strong&gt; both set a schema and call &lt;code&gt;setValidating(true)&lt;/code&gt; on a parser factory. The former technique will cause parsers to use the new validation API; the latter will cause parsers to use their own internal validation facilities. &lt;strong&gt;Turning on both of these options simultaneously will cause either redundant behavior or error conditions.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db8911ccdb0a32b11e7f663779352a6851708390" translate="yes" xml:space="preserve">
          <source>The JAXP processors give preference to user-specified custom resolvers. If such a resolver is registered, it will be used over the CatalogResolver. If it returns null however, the processors will continue resolving with the CatalogResolver. If it returns an empty source, no attempt will be made by the CatalogResolver.</source>
          <target state="translated">JAXPプロセッサは、ユーザーが指定したカスタムリゾルバを優先的に使用します。そのようなリゾルバが登録されている場合は、CatalogResolverよりもそのリゾルバが使用されます。しかし、これがnullを返す場合、プロセッサはCatalogResolverでの解決を継続します。これが空のソースを返した場合、カタログリゾルバは何も試みません。</target>
        </trans-unit>
        <trans-unit id="99f24bc9813db0373534263c88d5131c62a4ac28" translate="yes" xml:space="preserve">
          <source>The JAXP processors will observe the default settings of the &lt;a href=&quot;catalogfeatures&quot;&gt;&lt;code&gt;CatalogFeatures&lt;/code&gt;&lt;/a&gt;. The processors, for example, will report an Exception by default when no matching entry is found since the default value of the &lt;code&gt;javax.xml.catalog.resolve&lt;/code&gt; property is strict.</source>
          <target state="translated">The JAXP processors will observe the default settings of the &lt;a href=&quot;catalogfeatures&quot;&gt; &lt;code&gt;CatalogFeatures&lt;/code&gt; &lt;/a&gt;. The processors, for example, will report an Exception by default when no matching entry is found since the default value of the &lt;code&gt;javax.xml.catalog.resolve&lt;/code&gt; property is strict.</target>
        </trans-unit>
        <trans-unit id="a2d24c7890bba0f3964cbaede11464e0250281a1" translate="yes" xml:space="preserve">
          <source>The JAXP validation API decouples the validation of an instance document from the parsing of an XML document. This is advantageous for several reasons, some of which are:</source>
          <target state="translated">JAXP検証APIは、インスタンス文書の検証とXML文書の解析を切り離します。これはいくつかの理由で有利です。</target>
        </trans-unit>
        <trans-unit id="c6740abff5341aaea3d3add9108309db47269f46" translate="yes" xml:space="preserve">
          <source>The JDBC 1.0 API</source>
          <target state="translated">JDBC 1.0 API</target>
        </trans-unit>
        <trans-unit id="2ef0b1e1237f551a4a27a689e562cb12d6000ad9" translate="yes" xml:space="preserve">
          <source>The JDBC 1.2 API</source>
          <target state="translated">JDBC 1.2 API</target>
        </trans-unit>
        <trans-unit id="58d78690167f9669f3dd44eef343f4abed230945" translate="yes" xml:space="preserve">
          <source>The JDBC 2.0 Optional Package API</source>
          <target state="translated">JDBC 2.0 オプションパッケージAPI</target>
        </trans-unit>
        <trans-unit id="2210ba25b69c2db4ed032d072c7ec3aa1505d86c" translate="yes" xml:space="preserve">
          <source>The JDBC 2.1 core API</source>
          <target state="translated">JDBC 2.1 のコア API</target>
        </trans-unit>
        <trans-unit id="ea17f896a65d406c1673560b63457b11cfbedc0c" translate="yes" xml:space="preserve">
          <source>The JDBC 3.0 API</source>
          <target state="translated">JDBC 3.0 API</target>
        </trans-unit>
        <trans-unit id="59a75209b42a7de6d5159a3ca206067460cfc599" translate="yes" xml:space="preserve">
          <source>The JDBC 3.0 specification added the maxStatements &lt;code&gt;ConnectionPooledDataSource&lt;/code&gt; property to provide a standard mechanism for enabling the pooling of &lt;code&gt;PreparedStatements&lt;/code&gt; and to specify the size of the statement pool. However, there was no way for a driver to notify an external statement pool when a &lt;code&gt;PreparedStatement&lt;/code&gt; becomes invalid. For some databases, a statement becomes invalid if a DDL operation is performed that affects the table. For example an application may create a temporary table to do some work on the table and then destroy it. It may later recreate the same table when it is needed again. Some databases will invalidate any prepared statements that reference the temporary table when the table is dropped.</source>
          <target state="translated">The JDBC 3.0 specification added the maxStatements &lt;code&gt;ConnectionPooledDataSource&lt;/code&gt; property to provide a standard mechanism for enabling the pooling of &lt;code&gt;PreparedStatements&lt;/code&gt; and to specify the size of the statement pool. However, there was no way for a driver to notify an external statement pool when a &lt;code&gt;PreparedStatement&lt;/code&gt; becomes invalid. For some databases, a statement becomes invalid if a DDL operation is performed that affects the table. For example an application may create a temporary table to do some work on the table and then destroy it. It may later recreate the same table when it is needed again. Some databases will invalidate any prepared statements that reference the temporary table when the table is dropped.</target>
        </trans-unit>
        <trans-unit id="b75de8c2dc71b65df97e8ecbf3ef4bedd3196b45" translate="yes" xml:space="preserve">
          <source>The JDBC 4.0 API</source>
          <target state="translated">JDBC 4.0 API</target>
        </trans-unit>
        <trans-unit id="8537833ae96efc546ce1bf57458bf13e4e00612d" translate="yes" xml:space="preserve">
          <source>The JDBC 4.1 API</source>
          <target state="translated">JDBC 4.1 API</target>
        </trans-unit>
        <trans-unit id="2522ad222d6d4fff647d1822f3c053ef1b208ea1" translate="yes" xml:space="preserve">
          <source>The JDBC 4.2 API</source>
          <target state="translated">JDBC 4.2 API</target>
        </trans-unit>
        <trans-unit id="e8042149b2c345102f76a2b84b87ede611904a61" translate="yes" xml:space="preserve">
          <source>The JDBC 4.3 API includes both the &lt;code&gt;java.sql&lt;/code&gt; package, referred to as the JDBC core API, and the &lt;code&gt;javax.sql&lt;/code&gt; package, referred to as the JDBC Optional Package API. This complete JDBC API is included in the Java Standard Edition (Java SE), version 7. The &lt;code&gt;javax.sql&lt;/code&gt; package extends the functionality of the JDBC API from a client-side API to a server-side API, and it is an essential part of the Java Enterprise Edition (Java EE) technology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063101cb057d027845a508bc0a2d52d1e469963b" translate="yes" xml:space="preserve">
          <source>The JDBC 4.3 API incorporates all of the previous JDBC API versions:</source>
          <target state="translated">JDBC 4.3 APIは、以前のJDBC APIのすべてのバージョンを組み込んでいます。</target>
        </trans-unit>
        <trans-unit id="908da5094f4f523619fcbfb6f3b042822f877a05" translate="yes" xml:space="preserve">
          <source>The JDBC API provides mechanisms for mapping an SQL structured type or DISTINCT type to the Java programming language. Typically, a structured type is mapped to a class, and its attributes are mapped to fields in the class. (A DISTINCT type can thought of as having one attribute.) However, there are many other possibilities, and there may be any number of different mappings.</source>
          <target state="translated">JDBC APIは、SQL構造化型またはDISTINCT型をJavaプログラミング言語にマッピングする仕組みを提供します。通常、構造化型はクラスにマッピングされ、その属性はクラス内のフィールドにマッピングされます。(DISTINCT型は1つの属性を持つと考えることができます。)しかし、他にも多くの可能性があり、いくつもの異なるマッピングが存在する可能性があります。</target>
        </trans-unit>
        <trans-unit id="1e67b3a9fa0b65d4e49f3b35324e61a95fab14b1" translate="yes" xml:space="preserve">
          <source>The JDBC API supports this SQL feature by providing the name of the SQL cursor used by a &lt;code&gt;ResultSet&lt;/code&gt; object. The current row of a &lt;code&gt;ResultSet&lt;/code&gt; object is also the current row of this SQL cursor.</source>
          <target state="translated">The JDBC API supports this SQL feature by providing the name of the SQL cursor used by a &lt;code&gt;ResultSet&lt;/code&gt; object. The current row of a &lt;code&gt;ResultSet&lt;/code&gt; object is also the current row of this SQL cursor.</target>
        </trans-unit>
        <trans-unit id="9d48b4e02a7ef8b217df6704fbc3fbef3055bb97" translate="yes" xml:space="preserve">
          <source>The JDBC driver initializes the input stream with a type map before calling this method, which is used by the appropriate &lt;code&gt;SQLInput&lt;/code&gt; reader method on the stream.</source>
          <target state="translated">The JDBC driver initializes the input stream with a type map before calling this method, which is used by the appropriate &lt;code&gt;SQLInput&lt;/code&gt; reader method on the stream.</target>
        </trans-unit>
        <trans-unit id="fcf45bd369f2e97b6bb4e9ebc9b75d647e55ac9a" translate="yes" xml:space="preserve">
          <source>The JDBC driver's static initialization block must call &lt;a href=&quot;drivermanager#registerDriver(java.sql.Driver,java.sql.DriverAction)&quot;&gt;DriverManager.registerDriver(java.sql.Driver, java.sql.DriverAction)&lt;/a&gt; in order to inform &lt;code&gt;DriverManager&lt;/code&gt; which &lt;code&gt;DriverAction&lt;/code&gt; implementation to call when the JDBC driver is de-registered.</source>
          <target state="translated">The JDBC driver's static initialization block must call &lt;a href=&quot;drivermanager#registerDriver(java.sql.Driver,java.sql.DriverAction)&quot;&gt;DriverManager.registerDriver(java.sql.Driver, java.sql.DriverAction)&lt;/a&gt; in order to inform &lt;code&gt;DriverManager&lt;/code&gt; which &lt;code&gt;DriverAction&lt;/code&gt; implementation to call when the JDBC driver is de-registered.</target>
        </trans-unit>
        <trans-unit id="90e93f4c83b64826e6a378f97cf636a358d28bb9" translate="yes" xml:space="preserve">
          <source>The JDBC specification defines a standard mapping from Java &lt;code&gt;Object&lt;/code&gt; types to SQL types. The driver will use this standard mapping to convert the given object to its corresponding SQL type before sending it to the database. If the object has a custom mapping (is of a class implementing &lt;code&gt;SQLData&lt;/code&gt;), the driver should call the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt; to write the object to the SQL data stream.</source>
          <target state="translated">The JDBC specification defines a standard mapping from Java &lt;code&gt;Object&lt;/code&gt; types to SQL types. The driver will use this standard mapping to convert the given object to its corresponding SQL type before sending it to the database. If the object has a custom mapping (is of a class implementing &lt;code&gt;SQLData&lt;/code&gt; ), the driver should call the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt; to write the object to the SQL data stream.</target>
        </trans-unit>
        <trans-unit id="ee974a8e55da2c721c226bef3a30b526c2729b4d" translate="yes" xml:space="preserve">
          <source>The JDBC specification provides a standard mapping from Java Object types to SQL types. The driver will convert the given Java object to its standard SQL mapping before sending it to the database.</source>
          <target state="translated">JDBC仕様では、Javaオブジェクトの型からSQLの型への標準的なマッピングを提供しています。ドライバは、与えられたJavaオブジェクトをデータベースに送信する前に、その標準SQLマッピングに変換します。</target>
        </trans-unit>
        <trans-unit id="3e9c491f1d268a5ac29eab9e5df11e173ed6c9d0" translate="yes" xml:space="preserve">
          <source>The JDBC specification specifies a standard mapping from Java &lt;code&gt;Object&lt;/code&gt; types to SQL types. The given argument will be converted to the corresponding SQL type before being sent to the database.</source>
          <target state="translated">The JDBC specification specifies a standard mapping from Java &lt;code&gt;Object&lt;/code&gt; types to SQL types. The given argument will be converted to the corresponding SQL type before being sent to the database.</target>
        </trans-unit>
        <trans-unit id="523fd79ec39492a793ce5d43b1d416a59b37eb0f" translate="yes" xml:space="preserve">
          <source>The JDBC technology-enabled driver registers a type map with the stream before passing the stream to the application.</source>
          <target state="translated">JDBC テクノロジー対応ドライバは、ストリームをアプリケーションに渡す前に、ストリームにタイプマップを登録します。</target>
        </trans-unit>
        <trans-unit id="4f2501807ea5543e21ac42081e7607f5eda00852" translate="yes" xml:space="preserve">
          <source>The JDBC type specified by &lt;code&gt;sqlType&lt;/code&gt; for an OUT parameter determines the Java type that must be used in the &lt;code&gt;get&lt;/code&gt; method to read the value of that parameter.</source>
          <target state="translated">The JDBC type specified by &lt;code&gt;sqlType&lt;/code&gt; for an OUT parameter determines the Java type that must be used in the &lt;code&gt;get&lt;/code&gt; method to read the value of that parameter.</target>
        </trans-unit>
        <trans-unit id="de789869d263780a3433be03e37625511f9f77e8" translate="yes" xml:space="preserve">
          <source>The JDBC&amp;trade; 4.3 API includes both the &lt;code&gt;java.sql&lt;/code&gt; package, referred to as the JDBC core API, and the &lt;code&gt;javax.sql&lt;/code&gt; package, referred to as the JDBC Optional Package API. This complete JDBC API is included in the Java&amp;trade; Standard Edition (Java SE&amp;trade;), version 7. The &lt;code&gt;javax.sql&lt;/code&gt; package extends the functionality of the JDBC API from a client-side API to a server-side API, and it is an essential part of the Java&amp;trade; Enterprise Edition (Java EE&amp;trade;) technology.</source>
          <target state="translated">The JDBC&amp;trade; 4.3 API includes both the &lt;code&gt;java.sql&lt;/code&gt; package, referred to as the JDBC core API, and the &lt;code&gt;javax.sql&lt;/code&gt; package, referred to as the JDBC Optional Package API. This complete JDBC API is included in the Java&amp;trade; Standard Edition (Java SE&amp;trade;), version 7. The &lt;code&gt;javax.sql&lt;/code&gt; package extends the functionality of the JDBC API from a client-side API to a server-side API, and it is an essential part of the Java&amp;trade; Enterprise Edition (Java EE&amp;trade;) technology.</target>
        </trans-unit>
        <trans-unit id="f969a21212467360facf86185bc85dca1542c554" translate="yes" xml:space="preserve">
          <source>The JDK 1.0 event system is supported for backwards compatibility, but its use with newer versions of the platform is discouraged. The five types of adjustment events introduced with JDK 1.1 correspond to the five event types that are associated with scroll bars in previous platform versions. The following list gives the adjustment event type, and the corresponding JDK 1.0 event type it replaces.</source>
          <target state="translated">JDK 1.0 のイベントシステムは後方互換性のためにサポートされていますが、プラットフォームの新しいバージョンでの使用は推奨されていません。JDK 1.1で導入された5種類の調整イベントは、以前のプラットフォームのバージョンでスクロールバーに関連付けられていた5つのイベントタイプに対応しています。以下のリストは、調整イベントのタイプと、それに代わる対応する JDK 1.0 のイベントタイプを示しています。</target>
        </trans-unit>
        <trans-unit id="3d1c7a729b653acd1693d52a432bb13d5ba67a48" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ffe26effc5f2dd90c2a6cedb9ce1386ed82b03d8" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../../../../../../java.base/java/security/security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../../../../java.base/java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;../../../../../../java.base/java/security/security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../../../../java.base/java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8ac4775b3e40e73761c25007bba30e40be920bc3" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../../../../../java.base/java/security/security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../../../java.base/java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;../../../../../java.base/java/security/security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../../../java.base/java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="62bf224ef20a8c8efd79de17ded7edf373246c8e" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../../../../java.base/java/security/security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../../java.base/java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;../../../../java.base/java/security/security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../../java.base/java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="45825bff39d02867764b21ee89aae790885bd0b7" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../../../../java/security/security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../../java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;../../../../java/security/security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../../java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="803cbab520d0b89989ac7e30afebc082051ee02d" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../../../java.base/java/security/security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../java.base/java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;../../../java.base/java/security/security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../java.base/java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1cbcd88a86bafdf6f51dcf7a0cbbb0373e437354" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../../../java/security/security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;../../../java/security/security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../../java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0fc06d2c193c85c4e354c96804cda6886c8cc40b" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../../java/security/security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;../../java/security/security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../java/security/security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1a1a5269b7b6f90524770dbb39e2e220fc9c32ad" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../../java/security/security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../../java/security/security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;. See also the Cipher Transformations section of the &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=security_guide_jdk_providers&quot;&gt;JDK Providers&lt;/a&gt; document for information on the transformation defaults used by JDK providers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd56ba177b238763ab159cda3e93de4df961c47c" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;../security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;../security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;../security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e2ff4634b7d2e0418683c1f5d82da119c746f73f" translate="yes" xml:space="preserve">
          <source>The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt;&lt;a href=&quot;security#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;security#getProviders()&quot;&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The JDK Reference Implementation additionally uses the &lt;code&gt;jdk.security.provider.preferred&lt;/code&gt; &lt;a href=&quot;security#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt; property to determine the preferred provider order for the specified algorithm. This may be different than the order of providers returned by &lt;a href=&quot;security#getProviders()&quot;&gt; &lt;code&gt;Security.getProviders()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="befa33c1b2a2cde739097412d1f98fd45c743c49" translate="yes" xml:space="preserve">
          <source>The JDK SunJSSE provider implementation default for this mode is false.</source>
          <target state="translated">このモードの JDK SunJSSE プロバイダ実装のデフォルトは false です。</target>
        </trans-unit>
        <trans-unit id="8bf12e035729ecbd5e8b0cb95471b6a6dd98ddbd" translate="yes" xml:space="preserve">
          <source>The JDK SunJSSE provider implementation returns false unless &lt;a href=&quot;#setUseClientMode(boolean)&quot;&gt;&lt;code&gt;setUseClientMode(boolean)&lt;/code&gt;&lt;/a&gt; is used to change the mode to true.</source>
          <target state="translated">The JDK SunJSSE provider implementation returns false unless &lt;a href=&quot;#setUseClientMode(boolean)&quot;&gt; &lt;code&gt;setUseClientMode(boolean)&lt;/code&gt; &lt;/a&gt; is used to change the mode to true.</target>
        </trans-unit>
        <trans-unit id="358eb35c3338a7ee46a21e172820d69f3e988176" translate="yes" xml:space="preserve">
          <source>The JDK implementation of this module includes a language-independent command-line script shell, &lt;em&gt;&lt;a id=&quot;jrunscript&quot;&gt;jrunscript&lt;/a&gt;&lt;/em&gt;, that supports executing JavaScript and other languages if its corresponding script engine is installed.</source>
          <target state="translated">The JDK implementation of this module includes a language-independent command-line script shell, &lt;em&gt;&lt;a id=&quot;jrunscript&quot;&gt;jrunscript&lt;/a&gt;&lt;/em&gt;, that supports executing JavaScript and other languages if its corresponding script engine is installed.</target>
        </trans-unit>
        <trans-unit id="1e313c01f91cb65b8f8b490a81c962fc40ccb64a" translate="yes" xml:space="preserve">
          <source>The JDK implementation of this module includes a language-independent command-line script shell, &lt;em&gt;&lt;span id=&quot;jrunscript&quot;&gt;jrunscript&lt;/span&gt;&lt;/em&gt;, that supports executing JavaScript and other languages if its corresponding script engine is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8ec67b178a4223fa65b7e67f9198c2b19d7c3c" translate="yes" xml:space="preserve">
          <source>The JDK implementation of this module includes the &lt;em&gt;&lt;a id=&quot;rmiregistry&quot;&gt;rmiregistry&lt;/a&gt;&lt;/em&gt; tool to start a remote object registry, and the &lt;em&gt;&lt;a id=&quot;rmid&quot;&gt;rmid&lt;/a&gt;&lt;/em&gt; tool to start the activation system daemon.</source>
          <target state="translated">The JDK implementation of this module includes the &lt;em&gt;&lt;a id=&quot;rmiregistry&quot;&gt;rmiregistry&lt;/a&gt;&lt;/em&gt; tool to start a remote object registry, and the &lt;em&gt;&lt;a id=&quot;rmid&quot;&gt;rmid&lt;/a&gt;&lt;/em&gt; tool to start the activation system daemon.</target>
        </trans-unit>
        <trans-unit id="056f7da9b57d630a072b21b1ba1153c04acfa1ca" translate="yes" xml:space="preserve">
          <source>The JDK implementation of this module includes the &lt;em&gt;&lt;span id=&quot;rmiregistry&quot;&gt;rmiregistry&lt;/span&gt;&lt;/em&gt; tool to start a remote object registry, and the &lt;em&gt;&lt;span id=&quot;rmid&quot;&gt;rmid&lt;/span&gt;&lt;/em&gt; tool to start the activation system daemon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40a63ec61f8f60c0c587e2bbb0619e0bd28d621" translate="yes" xml:space="preserve">
          <source>The JDK implementation of this module provides an implementation of the &lt;a id=&quot;jrt&quot;&gt;jrt&lt;/a&gt;&lt;a href=&quot;java/nio/file/spi/filesystemprovider&quot;&gt;file system provider&lt;/a&gt; to enumerate and read the class and resource files in a run-time image. The jrt file system can be created by calling &lt;a href=&quot;java/nio/file/filesystems#newFileSystem(java.net.URI,java.util.Map)&quot;&gt;&lt;code&gt;FileSystems.newFileSystem(URI.create(&quot;jrt:/&quot;))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The JDK implementation of this module provides an implementation of the &lt;a id=&quot;jrt&quot;&gt;jrt&lt;/a&gt;&lt;a href=&quot;java/nio/file/spi/filesystemprovider&quot;&gt;file system provider&lt;/a&gt; to enumerate and read the class and resource files in a run-time image. The jrt file system can be created by calling &lt;a href=&quot;java/nio/file/filesystems#newFileSystem(java.net.URI,java.util.Map)&quot;&gt; &lt;code&gt;FileSystems.newFileSystem(URI.create(&quot;jrt:/&quot;))&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="188f14a340d1f5ee331fb455e42c168ebbe17438" translate="yes" xml:space="preserve">
          <source>The JDK implementation of this module provides an implementation of the &lt;span id=&quot;jrt&quot;&gt;jrt&lt;/span&gt;&lt;a href=&quot;java/nio/file/spi/filesystemprovider&quot;&gt;file system provider&lt;/a&gt; to enumerate and read the class and resource files in a run-time image. The jrt file system can be created by calling &lt;a href=&quot;java/nio/file/filesystems#newFileSystem(java.net.URI,java.util.Map)&quot;&gt;&lt;code&gt;FileSystems.newFileSystem(URI.create(&quot;jrt:/&quot;))&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021fab3830ec0a1adca1cc2e47d263506f6a799d" translate="yes" xml:space="preserve">
          <source>The JDK implementation returns the cache size as set by the &lt;code&gt;setSessionCacheSize&lt;/code&gt; method, or if not set, the value of the &lt;code&gt;&lt;span id=&quot;javax.net.ssl.sessionCacheSize&quot;&gt;javax.net.ssl.sessionCacheSize&lt;/span&gt;&lt;/code&gt; system property. If neither is set, it returns a default value of 20480.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff828cede05c6d73aace767cbbd1fa03e209c5c1" translate="yes" xml:space="preserve">
          <source>The JDK implementation returns the cache size as set by the &lt;code&gt;setSessionCacheSize&lt;/code&gt; method, or if not set, the value of the system property. If neither is set, it returns a default value of 20480.</source>
          <target state="translated">The JDK implementation returns the cache size as set by the &lt;code&gt;setSessionCacheSize&lt;/code&gt; method, or if not set, the value of the system property. If neither is set, it returns a default value of 20480.</target>
        </trans-unit>
        <trans-unit id="63abf37567a69daeb1c9eb0eac9845726723f07a" translate="yes" xml:space="preserve">
          <source>The JDK implementation returns the session timeout as set by the &lt;code&gt;setSessionTimeout&lt;/code&gt; method, or if not set, a default value of 86400 seconds (24 hours).</source>
          <target state="translated">The JDK implementation returns the session timeout as set by the &lt;code&gt;setSessionTimeout&lt;/code&gt; method, or if not set, a default value of 86400 seconds (24 hours).</target>
        </trans-unit>
        <trans-unit id="974bd73816215210a403a55fc57de388a401d79e" translate="yes" xml:space="preserve">
          <source>The JDK implementation supports static registration of the security providers via the &lt;code&gt;conf/security/java.security&lt;/code&gt; file in the Java installation directory. These providers are automatically installed by the JDK runtime, see &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=security_guide_jca_provider&quot;&gt;The Provider Class&lt;/a&gt; in the Java Cryptography Architecture (JCA) Reference Guide for information about how a particular type of provider, the cryptographic service provider, works and is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8321947a5392937c7a6036d74e85eb794e0aeb" translate="yes" xml:space="preserve">
          <source>The JDK implementation supports static registration of the security providers via the &lt;code&gt;conf/security/java.security&lt;/code&gt; file in the Java installation directory. These providers are automatically installed by the JDK runtime, see &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca_provider&quot;&gt;The Provider Class&lt;/a&gt; in the Java Cryptography Architecture (JCA) Reference Guide for information about how a particular type of provider, the cryptographic service provider, works and is installed.</source>
          <target state="translated">The JDK implementation supports static registration of the security providers via the &lt;code&gt;conf/security/java.security&lt;/code&gt; file in the Java installation directory. These providers are automatically installed by the JDK runtime, see &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca_provider&quot;&gt;The Provider Class&lt;/a&gt; in the Java Cryptography Architecture (JCA) Reference Guide for information about how a particular type of provider, the cryptographic service provider, works and is installed.</target>
        </trans-unit>
        <trans-unit id="7977a89a83ddfc3d655c3423c1d5cef0ff1b4d9d" translate="yes" xml:space="preserve">
          <source>The JDK includes &lt;code&gt;PrintServiceLookup&lt;/code&gt; implementations that can locate the standard platform printers. To locate other types of printers, such as IPP printers or JINI printers, a print-service provider can write implementations of &lt;code&gt;PrintServiceLookup&lt;/code&gt;. The print-service provider can dynamically install these &lt;code&gt;PrintServiceLookup&lt;/code&gt; implementations using the  SPI JAR file specification.</source>
          <target state="translated">JDKには、標準プラットフォームのプリンターを見つけることができる &lt;code&gt;PrintServiceLookup&lt;/code&gt; 実装が含まれています。IPPプリンターやJINIプリンターなど、他のタイプのプリンターを見つけるために、印刷サービスプロバイダーは &lt;code&gt;PrintServiceLookup&lt;/code&gt; の実装を作成できます。印刷サービスプロバイダーは、SPI JARファイル仕様を使用して、これらの &lt;code&gt;PrintServiceLookup&lt;/code&gt; 実装を動的にインストールできます。</target>
        </trans-unit>
        <trans-unit id="95544c4457ec318de1023345ff557bed46437913" translate="yes" xml:space="preserve">
          <source>The JDK includes &lt;code&gt;PrintServiceLookup&lt;/code&gt; implementations that can locate the standard platform printers. To locate other types of printers, such as IPP printers or JINI printers, a print-service provider can write implementations of &lt;code&gt;PrintServiceLookup&lt;/code&gt;. The print-service provider can dynamically install these &lt;code&gt;PrintServiceLookup&lt;/code&gt; implementations using the &lt;a href=&quot;../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; facility.</source>
          <target state="translated">The JDK includes &lt;code&gt;PrintServiceLookup&lt;/code&gt; implementations that can locate the standard platform printers. To locate other types of printers, such as IPP printers or JINI printers, a print-service provider can write implementations of &lt;code&gt;PrintServiceLookup&lt;/code&gt; . The print-service provider can dynamically install these &lt;code&gt;PrintServiceLookup&lt;/code&gt; implementations using the &lt;a href=&quot;../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; facility.</target>
        </trans-unit>
        <trans-unit id="8d93514a78e7c9e81c3a6c2bad27a8106084096c" translate="yes" xml:space="preserve">
          <source>The JDK provides the following predefined content types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17c58306c6fb36155552fb80a036d49556c883b" translate="yes" xml:space="preserve">
          <source>The JDK(tm) 1.1 rendering model is based on a pixelization model that specifies that coordinates are infinitely thin, lying between the pixels. Drawing operations are performed using a one-pixel wide pen that fills the pixel below and to the right of the anchor point on the path. The JDK 1.1 rendering model is consistent with the capabilities of most of the existing class of platform renderers that need to resolve integer coordinates to a discrete pen that must fall completely on a specified number of pixels.</source>
          <target state="translated">JDK(tm)1.1の描画モデルは、ピクセル間に横たわる無限に細い座標を指定するピクセル化モデルに基づいています。描画操作は、パス上のアンカーポイントの下と右側のピクセルを塗りつぶす1ピクセル幅のペンを使用して行われます。JDK 1.1 のレンダリングモデルは、指定された数のピクセルに完全に収まる必要がある離散ペンに整数の座標を解決する必要がある既存のクラスのプラットフォームレンダラのほとんどの機能と一致しています。</target>
        </trans-unit>
        <trans-unit id="b4df1f98a0565fca9a29ad6073a1bc23033b2822" translate="yes" xml:space="preserve">
          <source>The JList used for representing the files is created by subclasses, but the selection is monitored in this class.</source>
          <target state="translated">ファイルの表現に使用するJListはサブクラスで作成しますが、選択はこのクラスで監視しています。</target>
        </trans-unit>
        <trans-unit id="7224bc9a099b77a16bc3be0479f9b05ff7eb1a25" translate="yes" xml:space="preserve">
          <source>The JList used for representing the files is created by subclasses, but the selection is monitored in this class. The TransferHandler installed in the JFileChooser is also installed in the file list as it is used as the actual transfer source. The list is updated on a mouse enter to reflect the current data transfer state of the file chooser.</source>
          <target state="translated">ファイルの表現に使用するJListはサブクラスで作成していますが、選択はこのクラスで監視しています。JFileChooserにインストールされているTransferHandlerは、実際の転送元として使用されるため、ファイルリストにもインストールされています。リストはマウス入力時に更新され、現在のファイルチューザのデータ転送状態を反映しています。</target>
        </trans-unit>
        <trans-unit id="adacbc5dc9ca937440df58f189dfa0a26e578715" translate="yes" xml:space="preserve">
          <source>The JMM specifically allows optimizing compilers to elide reads or writes of variables that are known to be useless. Such elided reads and writes have no effect on the happens-before relation. Regardless of this fact, the volatile &lt;code&gt;V&lt;/code&gt; will not be elided, even though its written value is indeterminate and its read value is not used.</source>
          <target state="translated">JMMを使用すると、最適化コンパイラーは、役に立たないことがわかっている変数の読み取りまたは書き込みを省略できます。このように省略された読み取りと書き込みは、発生前の関係には影響しません。この事実に関係なく、揮発性 &lt;code&gt;V&lt;/code&gt; は、書き込まれた値が不確定であり、その読み取り値が使用されていなくても、除外されません。</target>
        </trans-unit>
        <trans-unit id="245a29e6968c20703520c2a92906f5e9e0f071ea" translate="yes" xml:space="preserve">
          <source>The JMX API can also be used as part of a solution for managing systems, networks, and so on.</source>
          <target state="translated">また、JMX APIは、システムやネットワークなどを管理するためのソリューションの一部として利用することもできます。</target>
        </trans-unit>
        <trans-unit id="fcfd357aa0013a97754ba965d15a09dda3cf149c" translate="yes" xml:space="preserve">
          <source>The JMX API consists of interfaces for monitoring and management of the JVM and other components in the Java runtime.</source>
          <target state="translated">JMX APIは、Javaランタイム内のJVMやその他のコンポーネントを監視・管理するためのインタフェースで構成されています。</target>
        </trans-unit>
        <trans-unit id="44195781584f2d466ba7e2c1a615da361d712792" translate="yes" xml:space="preserve">
          <source>The JMX Remote API also defines an optional connector called &lt;b&gt;JMXMP Connector&lt;/b&gt; implementing the JMX Message Protocol (JMXMP). As it is optional, it is not part of this bundle (see note below).</source>
          <target state="translated">JMXリモートAPIは、JMXメッセージプロトコル（JMXMP）を実装する&lt;b&gt;JMXMPコネクタ&lt;/b&gt;と呼ばれるオプションのコネクタも定義します。これはオプションであるため、このバンドルの一部ではありません（下記の注を参照）。</target>
        </trans-unit>
        <trans-unit id="49ce3ebe998d499efd4c77a77394ab17b1f03636" translate="yes" xml:space="preserve">
          <source>The JMX Remote API defines a standard connector, the &lt;b&gt;RMI Connector&lt;/b&gt;, which provides remote access to an MBeanServer through RMI.</source>
          <target state="translated">JMXリモートAPIは、&lt;b&gt;RMI&lt;/b&gt;を介してMBeanServerへのリモートアクセスを提供する標準コネクタである&lt;b&gt;RMIコネクタを&lt;/b&gt;定義します。</target>
        </trans-unit>
        <trans-unit id="fd57cf73dfe60c2aa55ec8129a23ade5a302d5fa" translate="yes" xml:space="preserve">
          <source>The JMX specification also defines the notion of an &lt;em&gt;adaptor&lt;/em&gt;. An adaptor translates between requests in a protocol such as SNMP or HTML and accesses to an MBean Server. So for example an SNMP GET operation might result in a &lt;code&gt;getAttribute&lt;/code&gt; on the MBean Server.</source>
          <target state="translated">JMX仕様では、&lt;em&gt;アダプタ&lt;/em&gt;の概念も定義されています。アダプターは、SNMPやHTMLなどのプロトコルの要求間で変換を行い、MBeanサーバーにアクセスします。したがって、たとえば、SNMP GET操作は、MBeanサーバーで &lt;code&gt;getAttribute&lt;/code&gt; になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="ad7600c1b4c4869f0bb7b9d742500b17e728fe9b" translate="yes" xml:space="preserve">
          <source>The JMX specification defines the notion of &lt;b&gt;connectors&lt;/b&gt;. A connector is attached to a JMX API MBean server and makes it accessible to remote Java clients. The client end of a connector exports essentially the same interface as the MBean server, specifically the &lt;a href=&quot;../mbeanserverconnection&quot;&gt;&lt;code&gt;MBeanServerConnection&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">JMX仕様では、&lt;b&gt;コネクタ&lt;/b&gt;の概念を定義してい&lt;b&gt;ます&lt;/b&gt;。コネクタはJMX API MBeanサーバーに接続され、リモートJavaクライアントからアクセスできるようにします。コネクターのクライアント側は、基本的にMBeanサーバーと同じインターフェース、特に&lt;a href=&quot;../mbeanserverconnection&quot;&gt; &lt;code&gt;MBeanServerConnection&lt;/code&gt; &lt;/a&gt;インターフェースをエクスポートします。</target>
        </trans-unit>
        <trans-unit id="49f18bdd1f1d911533de33e739a8c7e69a6ea6ce" translate="yes" xml:space="preserve">
          <source>The JNDI API Specification and related documents can be found in the &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=jndi_overview&quot;&gt;JNDI documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48496ba0da8b75b3e524f0a5ef74f428d1bc62c0" translate="yes" xml:space="preserve">
          <source>The JNDI SPI Specification and related documents can be found in the &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=jndi_overview&quot;&gt;JNDI documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96af366dabe06f77839ee8dbe7885151d35d2d4b" translate="yes" xml:space="preserve">
          <source>The JNDI SPI provides the means for creating JNDI service providers, through which JNDI applications access different naming and directory services.</source>
          <target state="translated">JNDI SPIは、JNDIサービスプロバイダを作成するための手段を提供し、それによってJNDIアプリケーションがさまざまなネーミングやディレクトリサービスにアクセスします。</target>
        </trans-unit>
        <trans-unit id="33732f94d8d93f615200108becd1fb08f06a0bea" translate="yes" xml:space="preserve">
          <source>The JNDI class library reads the resource files and makes the property values freely available. Thus JNDI resource files should be considered to be &quot;world readable&quot;, and sensitive information such as clear-text passwords should not be stored there.</source>
          <target state="translated">JNDI クラスライブラリはリソースファイルを読み込んで、プロパティ値を自由に利用できるようにします。したがって、JNDIのリソースファイルは &quot;世界で読める &quot;ものとみなされるべきであり、クリアテキストパスワードのような機密情報はそこに保存されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="088d7c9d898f7a840b1256be8ddef986f15194cb" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for different initial context implementations to be specified at runtime. An initial context is created using an initial context factory. A program can install its own builder that creates initial context factories, thereby overriding the default policies used by the framework, by calling NamingManager.setInitialContextFactoryBuilder(). The InitialContextFactoryBuilder interface must be implemented by such a builder.</source>
          <target state="translated">JNDI フレームワークでは、実行時に異なる初期コンテキストの実装を指定することができます。初期コンテキストは初期コンテキストファクトリを使って作成されます。プログラムは、NamingManager.setInitialContextFactoryBuilder()を呼び出すことで、初期コンテキストファクトリを作成する独自のビルダをインストールし、フレームワークで使用されるデフォルトポリシーを上書きすることができます。InitialContextFactoryBuilder インターフェースは、そのようなビルダで実装されていなければなりません。</target>
        </trans-unit>
        <trans-unit id="d098149f3977423197730ce483608b5d9c5ba323" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for different initial context implementations to be specified at runtime. The initial context is created using an &lt;em&gt;initial context factory&lt;/em&gt;. An initial context factory must implement the InitialContextFactory interface, which provides a method for creating instances of initial context that implement the Context interface. In addition, the factory class must be public and must have a public constructor that accepts no arguments.</source>
          <target state="translated">JNDIフレームワークでは、さまざまな初期コンテキスト実装を実行時に指定できます。初期コンテキストは、&lt;em&gt;初期コンテキストファクトリ&lt;/em&gt;を使用して作成され&lt;em&gt;ます&lt;/em&gt;。初期コンテキストファクトリは、ContextContextを実装する初期コンテキストのインスタンスを作成するためのメソッドを提供するInitialContextFactoryインターフェースを実装する必要があります。さらに、ファクトリクラスはパブリックである必要があり、引数を受け入れないパブリックコンストラクターを持っている必要があります。</target>
        </trans-unit>
        <trans-unit id="b9064bba67a68203f58a597fa1fa3afbedec89f6" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for object implementations to be loaded in dynamically via &lt;code&gt;object factories&lt;/code&gt;.</source>
          <target state="translated">JNDIフレームワークでは、 &lt;code&gt;object factories&lt;/code&gt; を介してオブジェクト実装を動的にロードできます。</target>
        </trans-unit>
        <trans-unit id="134c5f63e690609e9c6a657638ccd21e3550dca4" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for object implementations to be loaded in dynamically via &lt;em&gt;object factories&lt;/em&gt;. For example, when looking up a printer bound in the name space, if the print service binds printer names to &lt;code&gt;Reference&lt;/code&gt;s, the printer &lt;code&gt;Reference&lt;/code&gt; could be used to create a printer object, so that the caller of lookup can directly operate on the printer object after the lookup.</source>
          <target state="translated">JNDIフレームワークでは、&lt;em&gt;オブジェクトファクトリ&lt;/em&gt;を介してオブジェクト実装を動的にロードでき&lt;em&gt;ます&lt;/em&gt;。たとえば、名前空間にバインドされているプリンターを検索するときに、印刷サービスがプリンター名を &lt;code&gt;Reference&lt;/code&gt; にバインドしている場合、プリンター &lt;code&gt;Reference&lt;/code&gt; を使用してプリンターオブジェクトを作成し、検索の呼び出し元がプリンターオブジェクトを直接操作できるようにすることができます。検索後。</target>
        </trans-unit>
        <trans-unit id="f3b7acec5238c7d2dd7fa0082fb8db71d5d2e9ed" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for object implementations to be loaded in dynamically via &lt;em&gt;object factories&lt;/em&gt;. For example, when looking up a printer bound in the name space, if the print service binds printer names to References, the printer Reference could be used to create a printer object, so that the caller of lookup can directly operate on the printer object after the lookup.</source>
          <target state="translated">JNDIフレームワークでは、&lt;em&gt;オブジェクトファクトリ&lt;/em&gt;を介してオブジェクト実装を動的にロードでき&lt;em&gt;ます&lt;/em&gt;。たとえば、名前空間にバインドされているプリンターを検索するときに、印刷サービスがプリンター名をReferencesにバインドしている場合、プリンター参照を使用してプリンターオブジェクトを作成し、ルックアップの呼び出し元がプリンターオブジェクトを直接操作できるようにすることができます。ルックアップ。</target>
        </trans-unit>
        <trans-unit id="0f159102714c8eb7af6cff7ee4872dd30ee0cf55" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for object implementations to be loaded in dynamically via &lt;em&gt;object factories&lt;/em&gt;. For example, when looking up a printer bound in the name space, if the print service binds printer names to References, the printer Reference could be used to create a printer object, so that the caller of lookup can directly operate on the printer object after the lookup. An ObjectFactory is responsible for creating objects of a specific type. JNDI uses a default policy for using and loading object factories. You can override this default policy by calling &lt;code&gt;NamingManager.setObjectFactoryBuilder()&lt;/code&gt; with an ObjectFactoryBuilder, which contains the program-defined way of creating/loading object factories. Any &lt;code&gt;ObjectFactoryBuilder&lt;/code&gt; implementation must implement this interface that for creating object factories.</source>
          <target state="translated">JNDIフレームワークでは、&lt;em&gt;オブジェクトファクトリ&lt;/em&gt;を介してオブジェクト実装を動的にロードでき&lt;em&gt;ます&lt;/em&gt;。たとえば、名前空間にバインドされているプリンターを検索するときに、印刷サービスがプリンター名をReferencesにバインドしている場合、プリンター参照を使用してプリンターオブジェクトを作成し、ルックアップの呼び出し元がプリンターオブジェクトを直接操作できるようにすることができます。ルックアップ。 ObjectFactoryは、特定のタイプのオブジェクトの作成を担当します。 JNDIは、オブジェクトファクトリの使用とロードにデフォルトのポリシーを使用します。オブジェクトファクトリを作成/ロードするプログラム定義の方法を含むObjectFactoryBuilder を使用して &lt;code&gt;NamingManager.setObjectFactoryBuilder()&lt;/code&gt; を呼び出すことにより、このデフォルトポリシーをオーバーライドできます。どれ &lt;code&gt;ObjectFactoryBuilder&lt;/code&gt; は 実装は、オブジェクトファクトリを作成するためのこのインターフェイスを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="88db5d84ce039b71278336e8b1b44b578aa0d61d" translate="yes" xml:space="preserve">
          <source>The JNDI framework allows for object implementations to be loaded in dynamically via &lt;em&gt;object factories&lt;/em&gt;. See &lt;code&gt;ObjectFactory&lt;/code&gt; for details.</source>
          <target state="translated">JNDIフレームワークでは、&lt;em&gt;オブジェクトファクトリ&lt;/em&gt;を介してオブジェクト実装を動的にロードでき&lt;em&gt;ます&lt;/em&gt;。詳細については、 &lt;code&gt;ObjectFactory&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="5669f05609b02ee4c44fdaa5adbcabc508864f50" translate="yes" xml:space="preserve">
          <source>The JNDI library will consult the provider resource file when determining the values of these properties. Properties other than these may be set in the provider resource file at the discretion of the service provider. The service provider's documentation should clearly state which properties are allowed; other properties in the file will be ignored.</source>
          <target state="translated">JNDI ライブラリは、これらのプロパティの値を決定する際に、プロバイダリソースファイルを参照します。これら以外のプロパティは、サービスプロバイダの判断でプロバイダリソースファイルに設定することができます。サービスプロバイダのドキュメントには、どのプロパティが許可されているかが明記されている必要があり、ファイル内の他のプロパティは無視されます。</target>
        </trans-unit>
        <trans-unit id="bec69931581644a1ef0084216dc02cc47be425fa" translate="yes" xml:space="preserve">
          <source>The JNDI name of the resource. For field annotations, the default is the field name. For method annotations, the default is the JavaBeans property name corresponding to the method. For class annotations, there is no default and this must be specified.</source>
          <target state="translated">リソースのJNDI名。フィールド注釈の場合、デフォルトはフィールド名です。メソッドのアノテーションの場合、デフォルトは、メソッドに対応する JavaBeans プロパティ名です。クラス注釈の場合、デフォルトはなく、これを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="edc24d0f37d47900732cfdcdc56bc8ec2f6044ca" translate="yes" xml:space="preserve">
          <source>The JPS API is designed to be used in Java profiles which do not support AWT.</source>
          <target state="translated">JPS APIは、AWTをサポートしていないJavaプロファイルで使用することを想定しています。</target>
        </trans-unit>
        <trans-unit id="363b84f0385d00914c1240423dd0f5bb6b4ee6f6" translate="yes" xml:space="preserve">
          <source>The JRE data transfer implementation interprets the parameter &quot;class&quot; of a MIME type as &lt;b&gt;a representation class&lt;/b&gt;. The representation class reflects the class of the object being transferred. In other words, the representation class is the type of object returned by &lt;a href=&quot;transferable#getTransferData(java.awt.datatransfer.DataFlavor)&quot;&gt;&lt;code&gt;Transferable.getTransferData(java.awt.datatransfer.DataFlavor)&lt;/code&gt;&lt;/a&gt;. For example, the MIME type of &lt;a href=&quot;#imageFlavor&quot;&gt;&lt;code&gt;imageFlavor&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;&quot;image/x-java-image;class=java.awt.Image&quot;&lt;/code&gt;, the primary type is &lt;code&gt;image&lt;/code&gt;, the subtype is &lt;code&gt;x-java-image&lt;/code&gt;, and the representation class is &lt;code&gt;java.awt.Image&lt;/code&gt;. When &lt;code&gt;getTransferData&lt;/code&gt; is invoked with a &lt;code&gt;DataFlavor&lt;/code&gt; of &lt;code&gt;imageFlavor&lt;/code&gt;, an instance of &lt;code&gt;java.awt.Image&lt;/code&gt; is returned. It's important to note that &lt;code&gt;DataFlavor&lt;/code&gt; does no error checking against the representation class. It is up to consumers of &lt;code&gt;DataFlavor&lt;/code&gt;, such as &lt;code&gt;Transferable&lt;/code&gt;, to honor the representation class.</source>
          <target state="translated">The JRE data transfer implementation interprets the parameter &quot;class&quot; of a MIME type as &lt;b&gt;a representation class&lt;/b&gt;. The representation class reflects the class of the object being transferred. In other words, the representation class is the type of object returned by &lt;a href=&quot;transferable#getTransferData(java.awt.datatransfer.DataFlavor)&quot;&gt; &lt;code&gt;Transferable.getTransferData(java.awt.datatransfer.DataFlavor)&lt;/code&gt; &lt;/a&gt;. For example, the MIME type of &lt;a href=&quot;#imageFlavor&quot;&gt; &lt;code&gt;imageFlavor&lt;/code&gt; &lt;/a&gt; is &lt;code&gt;&quot;image/x-java-image;class=java.awt.Image&quot;&lt;/code&gt; , the primary type is &lt;code&gt;image&lt;/code&gt; , the subtype is &lt;code&gt;x-java-image&lt;/code&gt; , and the representation class is &lt;code&gt;java.awt.Image&lt;/code&gt; . When &lt;code&gt;getTransferData&lt;/code&gt; is invoked with a &lt;code&gt;DataFlavor&lt;/code&gt; of &lt;code&gt;imageFlavor&lt;/code&gt; , an instance of &lt;code&gt;java.awt.Image&lt;/code&gt; is returned. It's important to note that &lt;code&gt;DataFlavor&lt;/code&gt; does no error checking against the representation class. It is up to consumers of &lt;code&gt;DataFlavor&lt;/code&gt; , such as &lt;code&gt;Transferable&lt;/code&gt; , to honor the representation class.</target>
        </trans-unit>
        <trans-unit id="17a160f7d45e8174e9c03f104bfe115657a97de9" translate="yes" xml:space="preserve">
          <source>The JScrollPane component creates scrollbars (by default) that override this method and delegate to the viewports Scrollable view, if it has one. The Scrollable interface provides a more specialized version of this method.</source>
          <target state="translated">JScrollPane コンポーネントは、このメソッドをオーバーライドし、ビューポートの Scrollable ビューがあれば、それに委譲するスクロールバーを作成します (デフォルトでは)。Scrollable インターフェースは、このメソッドのより専門的なバージョンを提供します。</target>
        </trans-unit>
        <trans-unit id="e1ae955d51e9234dabbd5ff6619ba90b3d308714" translate="yes" xml:space="preserve">
          <source>The JShell evaluation state engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808c7d2879dd45bb29a0e22373995ee648166124" translate="yes" xml:space="preserve">
          <source>The JShell evaluation state engine. This is the central class in the JShell API. A &lt;code&gt;JShell&lt;/code&gt; instance holds the evolving compilation and execution state. The state is changed with the instance methods &lt;a href=&quot;#eval(java.lang.String)&quot;&gt;&lt;code&gt;eval(String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#drop(jdk.jshell.Snippet)&quot;&gt;&lt;code&gt;drop(Snippet)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#addToClasspath(java.lang.String)&quot;&gt;&lt;code&gt;addToClasspath(String)&lt;/code&gt;&lt;/a&gt;. The majority of methods query the state. A &lt;code&gt;JShell&lt;/code&gt; instance also allows registering for events with &lt;a href=&quot;#onSnippetEvent(java.util.function.Consumer)&quot;&gt;&lt;code&gt;onSnippetEvent(Consumer)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#onShutdown(java.util.function.Consumer)&quot;&gt;&lt;code&gt;onShutdown(Consumer)&lt;/code&gt;&lt;/a&gt;, which are unregistered with &lt;a href=&quot;#unsubscribe(jdk.jshell.JShell.Subscription)&quot;&gt;&lt;code&gt;unsubscribe(Subscription)&lt;/code&gt;&lt;/a&gt;. Access to the source analysis utilities is via &lt;a href=&quot;#sourceCodeAnalysis()&quot;&gt;&lt;code&gt;sourceCodeAnalysis()&lt;/code&gt;&lt;/a&gt;. When complete the instance should be closed to free resources -- &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8578472fe170c11efcaca36252367b026245c2be" translate="yes" xml:space="preserve">
          <source>The JVM bytecode format supports immediate constants of the classes &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;methodtype&quot;&gt;&lt;code&gt;MethodType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JVMバイトコード形式は、クラス&lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;methodtype&quot;&gt; &lt;code&gt;MethodType&lt;/code&gt; の&lt;/a&gt;即時定数をサポートしています。</target>
        </trans-unit>
        <trans-unit id="423700bf3f40eb8f7ae2196876409f2568dcd9ca" translate="yes" xml:space="preserve">
          <source>The JVM imposes a similar requirement on &lt;code&gt;invokespecial&lt;/code&gt; instruction, that the receiver argument must match both the resolved method &lt;em&gt;and&lt;/em&gt; the current class. Again, this requirement is enforced by narrowing the type of the leading parameter to the resulting method handle. (See the Java Virtual Machine Specification, section 4.10.1.9.)</source>
          <target state="translated">JVMは、 &lt;code&gt;invokespecial&lt;/code&gt; 命令にも同様の要件を課しています。レシーバー引数は、解決されたメソッド&lt;em&gt;と&lt;/em&gt;現在のクラスの両方に一致する必要があります。繰り返しになりますが、この要件は、主要なパラメーターの型を結果のメソッドハンドルに狭めることによって適用されます。（Java仮想マシン仕様のセクション4.10.1.9を参照してください。）</target>
        </trans-unit>
        <trans-unit id="5c33c025595843b85ed46d8fb1228a2c6476481b" translate="yes" xml:space="preserve">
          <source>The JVM imposes a similar requirement on &lt;code&gt;invokespecial&lt;/code&gt; instruction, that the receiver argument must match both the resolved method &lt;em&gt;and&lt;/em&gt; the current class. Again, this requirement is enforced by narrowing the type of the leading parameter to the resulting method handle. (See the Java Virtual Machine Specification, section &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.10.1.9&quot;&gt;4.10.1.9&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a937822298d3770df670d2d33f12a835018bdf" translate="yes" xml:space="preserve">
          <source>The JVM imposes on all methods and constructors of any kind an absolute limit of 255 stacked arguments. This limit can appear more restrictive in certain cases:</source>
          <target state="translated">JVMは、あらゆる種類のすべてのメソッドおよびコンストラクタに対して、スタックされた引数255個の絶対的な制限を課します。この制限は、特定のケースではより制限的に見えることがあります。</target>
        </trans-unit>
        <trans-unit id="dc6a5c598e3c5bccd4ab59217eeb5725b65103d3" translate="yes" xml:space="preserve">
          <source>The JVM represents constructors and static initializer blocks as internal methods with special names (&lt;code&gt;&quot;&amp;lt;init&amp;gt;&quot;&lt;/code&gt; and &lt;code&gt;&quot;&amp;lt;clinit&amp;gt;&quot;&lt;/code&gt;). The internal syntax of invocation instructions allows them to refer to such internal methods as if they were normal methods, but the JVM bytecode verifier rejects them. A lookup of such an internal method will produce a &lt;code&gt;NoSuchMethodException&lt;/code&gt;.</source>
          <target state="translated">JVMは、コンストラクターと静的初期化ブロックを、特別な名前（ &lt;code&gt;&quot;&amp;lt;init&amp;gt;&quot;&lt;/code&gt; および &lt;code&gt;&quot;&amp;lt;clinit&amp;gt;&quot;&lt;/code&gt; ）を持つ内部メソッドとして表します。呼び出し命令の内部構文により、通常のメソッドのように内部メソッドを参照できますが、JVMバイトコードベリファイアはそれらを拒否します。そのような内部メソッドのルックアップは &lt;code&gt;NoSuchMethodException&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="4bed2dbd7bc1a0a64894245adfbe5487e3761dab" translate="yes" xml:space="preserve">
          <source>The Japanese Imperial calendar system is the same as the ISO calendar system apart from the era-based year numbering. The proleptic-year is defined to be equal to the ISO proleptic-year.</source>
          <target state="translated">日本の暦制度は、時代に基づく年号を除いて、ISOの暦制度と同じです。プロレプティックイヤーはISOのプロレプティックイヤーと同じと定義されています。</target>
        </trans-unit>
        <trans-unit id="1377cea6a56d5ed563cbb1106ccb49deee8306eb" translate="yes" xml:space="preserve">
          <source>The Japanese Imperial calendar system.</source>
          <target state="translated">日本の皇室暦制度。</target>
        </trans-unit>
        <trans-unit id="7564ca9cd9ffac61a50b36479cc4d2f52a3b5c1f" translate="yes" xml:space="preserve">
          <source>The Japanese calendar system has multiple eras defined by &lt;a href=&quot;japaneseera&quot;&gt;&lt;code&gt;JapaneseEra&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">日本の暦システムには、&lt;a href=&quot;japaneseera&quot;&gt; &lt;code&gt;JapaneseEra&lt;/code&gt; &lt;/a&gt;によって定義された複数の年号があります。</target>
        </trans-unit>
        <trans-unit id="04fc513b47cf3ef30849ce129084aceb11af3867" translate="yes" xml:space="preserve">
          <source>The Japanese government defines the official name and start date of each era. Eras are consecutive and their date ranges do not overlap, so the end date of one era is always the day before the start date of the next era.</source>
          <target state="translated">日本政府は、各時代の正式名称と開始日を定めています。時代は連続しており、日付の範囲が重ならないため、ある時代の終了日は常に次の時代の開始日の前日になります。</target>
        </trans-unit>
        <trans-unit id="265e051cf5be43bb91edb907b6aaa5aa90a2b761" translate="yes" xml:space="preserve">
          <source>The Japanese month and day-of-month are the same as those in the ISO calendar system. They are not reset when the era changes. For example:</source>
          <target state="translated">日本の月と曜日は、ISOカレンダーシステムのものと同じです。これらは時代が変わってもリセットされません。例えば</target>
        </trans-unit>
        <trans-unit id="9a132e736768e81687dffdd4d971dcc6de9796ad" translate="yes" xml:space="preserve">
          <source>The Japanese proleptic year, month and day-of-month are the same as those in the ISO calendar system. They are not reset when the era changes.</source>
          <target state="translated">日本のプロレプティックの年・月・日は、ISOカレンダーシステムのものと同じです。時代が変わってもリセットされない。</target>
        </trans-unit>
        <trans-unit id="ab077295795f59b02a71b197389bd1772b628d47" translate="yes" xml:space="preserve">
          <source>The Java 2D(tm) (Java(tm) 2 platform) API supports antialiasing renderers. A pen with a width of one pixel does not need to fall completely on pixel N as opposed to pixel N+1. The pen can fall partially on both pixels. It is not necessary to choose a bias direction for a wide pen since the blending that occurs along the pen traversal edges makes the sub-pixel position of the pen visible to the user. On the other hand, when antialiasing is turned off by setting the &lt;a href=&quot;renderinghints#KEY_ANTIALIASING&quot;&gt;&lt;code&gt;KEY_ANTIALIASING&lt;/code&gt;&lt;/a&gt; hint key to the &lt;a href=&quot;renderinghints#VALUE_ANTIALIAS_OFF&quot;&gt;&lt;code&gt;VALUE_ANTIALIAS_OFF&lt;/code&gt;&lt;/a&gt; hint value, the renderer might need to apply a bias to determine which pixel to modify when the pen is straddling a pixel boundary, such as when it is drawn along an integer coordinate in device space. While the capabilities of an antialiasing renderer make it no longer necessary for the rendering model to specify a bias for the pen, it is desirable for the antialiasing and non-antialiasing renderers to perform similarly for the common cases of drawing one-pixel wide horizontal and vertical lines on the screen. To ensure that turning on antialiasing by setting the &lt;a href=&quot;renderinghints#KEY_ANTIALIASING&quot;&gt;&lt;code&gt;KEY_ANTIALIASING&lt;/code&gt;&lt;/a&gt; hint key to &lt;a href=&quot;renderinghints#VALUE_ANTIALIAS_ON&quot;&gt;&lt;code&gt;VALUE_ANTIALIAS_ON&lt;/code&gt;&lt;/a&gt; does not cause such lines to suddenly become twice as wide and half as opaque, it is desirable to have the model specify a path for such lines so that they completely cover a particular set of pixels to help increase their crispness.</source>
          <target state="translated">The Java 2D(tm) (Java(tm) 2 platform) API supports antialiasing renderers. A pen with a width of one pixel does not need to fall completely on pixel N as opposed to pixel N+1. The pen can fall partially on both pixels. It is not necessary to choose a bias direction for a wide pen since the blending that occurs along the pen traversal edges makes the sub-pixel position of the pen visible to the user. On the other hand, when antialiasing is turned off by setting the &lt;a href=&quot;renderinghints#KEY_ANTIALIASING&quot;&gt; &lt;code&gt;KEY_ANTIALIASING&lt;/code&gt; &lt;/a&gt; hint key to the &lt;a href=&quot;renderinghints#VALUE_ANTIALIAS_OFF&quot;&gt; &lt;code&gt;VALUE_ANTIALIAS_OFF&lt;/code&gt; &lt;/a&gt; hint value, the renderer might need to apply a bias to determine which pixel to modify when the pen is straddling a pixel boundary, such as when it is drawn along an integer coordinate in device space. While the capabilities of an antialiasing renderer make it no longer necessary for the rendering model to specify a bias for the pen, it is desirable for the antialiasing and non-antialiasing renderers to perform similarly for the common cases of drawing one-pixel wide horizontal and vertical lines on the screen. To ensure that turning on antialiasing by setting the &lt;a href=&quot;renderinghints#KEY_ANTIALIASING&quot;&gt; &lt;code&gt;KEY_ANTIALIASING&lt;/code&gt; &lt;/a&gt; hint key to &lt;a href=&quot;renderinghints#VALUE_ANTIALIAS_ON&quot;&gt; &lt;code&gt;VALUE_ANTIALIAS_ON&lt;/code&gt; &lt;/a&gt; does not cause such lines to suddenly become twice as wide and half as opaque, it is desirable to have the model specify a path for such lines so that they completely cover a particular set of pixels to help increase their crispness.</target>
        </trans-unit>
        <trans-unit id="0fbc55fe3353d168165d01c77ce52a7169349fae" translate="yes" xml:space="preserve">
          <source>The Java AWT Native Interface (JAWT)</source>
          <target state="translated">Java AWT ネイティブインターフェース (JAWT)</target>
        </trans-unit>
        <trans-unit id="3db037c857875b9fa1012171be8083c44281dea6" translate="yes" xml:space="preserve">
          <source>The Java Accessibility API package consists of 8 Java programming language interfaces, and 6 Java programming language classes. These are described below.</source>
          <target state="translated">Java Accessibility APIパッケージは、8つのJavaプログラミング言語インタフェースと6つのJavaプログラミング言語クラスで構成されています。これらを以下に説明します。</target>
        </trans-unit>
        <trans-unit id="ec9ce57118dd5eeebc30267a59845414305f39c4" translate="yes" xml:space="preserve">
          <source>The Java Debug Interface (JDI) is a high level Java API providing information useful for debuggers and similar systems needing access to the running state of a (usually remote) virtual machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7cd6bf18e5d512749050266dad5e8ad183ff281" translate="yes" xml:space="preserve">
          <source>The Java Development Kit (JDK) APIs are specific to the JDK and will not necessarily be available in all implementations of the Java SE Platform. These APIs are in modules whose names start with &lt;code&gt;jdk&lt;/code&gt;.</source>
          <target state="translated">The Java Development Kit (JDK) APIs are specific to the JDK and will not necessarily be available in all implementations of the Java SE Platform. These APIs are in modules whose names start with &lt;code&gt;jdk&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61602e7596e12b632597fd4f988db4b318fd0d87" translate="yes" xml:space="preserve">
          <source>The Java Language Specification</source>
          <target state="translated">Java言語仕様書</target>
        </trans-unit>
        <trans-unit id="ebc6437d60221359ee032cd72734c3e893152ecb" translate="yes" xml:space="preserve">
          <source>The Java Language Specification, First Edition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d7523255fa435c106227002fd7691eedcdb254" translate="yes" xml:space="preserve">
          <source>The Java Language Specification, Second Edition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4704dd2a636040f03c24e57dbdac4f22ec8180" translate="yes" xml:space="preserve">
          <source>The Java Language Specification, Third Edition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe92060513e13f1787c56819355245bef3c94ab" translate="yes" xml:space="preserve">
          <source>The Java Look and Feel, otherwise known as Metal.</source>
          <target state="translated">Javaのルックアンドフィール、別名メタルと呼ばれています。</target>
        </trans-unit>
        <trans-unit id="05622f717f9f313a62126060521423008c4d1058" translate="yes" xml:space="preserve">
          <source>The Java Management Extensions (JMX&amp;trade;) API is a standard API for management and monitoring. Typical uses include:</source>
          <target state="translated">The Java Management Extensions (JMX&amp;trade;) API is a standard API for management and monitoring. Typical uses include:</target>
        </trans-unit>
        <trans-unit id="3d4ddff1e13e642d6bc1fae73d9cb1b5769ed1c8" translate="yes" xml:space="preserve">
          <source>The Java Management Extensions (JMX) API is a standard API for management and monitoring. Typical uses include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d13fecff6728378da832d10b9051c944390c97" translate="yes" xml:space="preserve">
          <source>The Java Management Extensions (JMX&lt;sup&gt;TM&lt;/sup&gt;) API is a standard API for management and monitoring. Typical uses include:</source>
          <target state="translated">Java Management Extensions（JMX &lt;sup&gt;TM&lt;/sup&gt;）APIは、管理と監視のための標準APIです。一般的な用途は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="d78753332522c3ae6721300363a5c6096e665327" translate="yes" xml:space="preserve">
          <source>The Java Platform distinguishes between two kinds of fonts: &lt;em&gt;physical&lt;/em&gt; fonts and &lt;em&gt;logical&lt;/em&gt; fonts.</source>
          <target state="translated">The Java Platform distinguishes between two kinds of fonts: &lt;em&gt;physical&lt;/em&gt; fonts and &lt;em&gt;logical&lt;/em&gt; fonts.</target>
        </trans-unit>
        <trans-unit id="8bef35235f701eb6de58ba31cfe59d2bb33aa8ff" translate="yes" xml:space="preserve">
          <source>The Java Platform provides a number of classes that perform locale-sensitive operations. For example, the &lt;code&gt;NumberFormat&lt;/code&gt; class formats numbers, currency, and percentages in a locale-sensitive manner. Classes such as &lt;code&gt;NumberFormat&lt;/code&gt; have several convenience methods for creating a default object of that type. For example, the &lt;code&gt;NumberFormat&lt;/code&gt; class provides these three convenience methods for creating a default &lt;code&gt;NumberFormat&lt;/code&gt; object:</source>
          <target state="translated">Javaプラットフォームは、ロケールに依存する操作を実行するいくつかのクラスを提供します。たとえば、 &lt;code&gt;NumberFormat&lt;/code&gt; クラスは、数値、通貨、およびパーセンテージをロケール依存の方法でフォーマットします。 &lt;code&gt;NumberFormat&lt;/code&gt; などのクラスには、そのタイプのデフォルトオブジェクトを作成するための便利なメソッドがいくつかあります。たとえば、 &lt;code&gt;NumberFormat&lt;/code&gt; クラスは、デフォルトの &lt;code&gt;NumberFormat&lt;/code&gt; オブジェクトを作成するための次の3つの便利なメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="3b60f629f49f10f4985e6a720af54abf514bac30" translate="yes" xml:space="preserve">
          <source>The Java Platform provides three specialized subclasses of &lt;code&gt;Format&lt;/code&gt;-- &lt;code&gt;DateFormat&lt;/code&gt;, &lt;code&gt;MessageFormat&lt;/code&gt;, and &lt;code&gt;NumberFormat&lt;/code&gt;--for formatting dates, messages, and numbers, respectively.</source>
          <target state="translated">Javaプラットフォームの3つの特殊なサブクラスを提供 &lt;code&gt;Format&lt;/code&gt; - &lt;code&gt;DateFormat&lt;/code&gt; の、 &lt;code&gt;MessageFormat&lt;/code&gt; の、と &lt;code&gt;NumberFormat&lt;/code&gt; 日付、メッセージ、数字をフォーマット--for、それぞれ。</target>
        </trans-unit>
        <trans-unit id="03ea0cad9aef11b637a3137ff4122043f3493aef" translate="yes" xml:space="preserve">
          <source>The Java Platform provides two subclasses of &lt;code&gt;ResourceBundle&lt;/code&gt;, &lt;code&gt;ListResourceBundle&lt;/code&gt; and &lt;code&gt;PropertyResourceBundle&lt;/code&gt;, that provide a fairly simple way to create resources. As you saw briefly in a previous example, &lt;code&gt;ListResourceBundle&lt;/code&gt; manages its resource as a list of key/value pairs. &lt;code&gt;PropertyResourceBundle&lt;/code&gt; uses a properties file to manage its resources.</source>
          <target state="translated">Javaプラットフォームは、の2つのサブクラスを提供 &lt;code&gt;ResourceBundle&lt;/code&gt; 、 &lt;code&gt;ListResourceBundle&lt;/code&gt; および &lt;code&gt;PropertyResourceBundle&lt;/code&gt; のリソースを作成するかなり簡単な方法を提供し、。前の例で簡単に見たように、 &lt;code&gt;ListResourceBundle&lt;/code&gt; はそのリソースをキーと値のペアのリストとして管理します。 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; は、プロパティファイルを使用してリソースを管理します。</target>
        </trans-unit>
        <trans-unit id="2228edce994b6e3417cf42c80f9c126b6f466b3b" translate="yes" xml:space="preserve">
          <source>The Java Platform supports input methods that have been developed in the Java programming language, using the interfaces in the &lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.awt.im.spi&lt;/code&gt;&lt;/a&gt; package, which can be made available by adding them to the application's class path. Implementations may also support using the native input methods of the platforms they run on; however, not all platforms and locales provide input methods. Keyboard layouts are provided by the host platform.</source>
          <target state="translated">The Java Platform supports input methods that have been developed in the Java programming language, using the interfaces in the &lt;a href=&quot;spi/package-summary&quot;&gt; &lt;code&gt;java.awt.im.spi&lt;/code&gt; &lt;/a&gt; package, which can be made available by adding them to the application's class path. Implementations may also support using the native input methods of the platforms they run on; however, not all platforms and locales provide input methods. Keyboard layouts are provided by the host platform.</target>
        </trans-unit>
        <trans-unit id="563105f61580384f40b3157faa1d0806aadcdba7" translate="yes" xml:space="preserve">
          <source>The Java Platform, Standard Edition (Java SE) APIs define the core Java platform for general-purpose computing. These APIs are in modules whose names start with &lt;code&gt;java&lt;/code&gt;.</source>
          <target state="translated">The Java Platform, Standard Edition (Java SE) APIs define the core Java platform for general-purpose computing. These APIs are in modules whose names start with &lt;code&gt;java&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f239cc990f3edd2c4e5449b541498920cb9d284" translate="yes" xml:space="preserve">
          <source>The Java Print Service API defines a group of standard attribute classes modeled upon the attributes in the Internet Printing Protocol (IPP) version 1.1. The standard attribute classes are in the subpackage &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; to keep the actual attribute classes conceptually separate from the generic apparatus defined in package &lt;code&gt;javax.print.attribute&lt;/code&gt;.</source>
          <target state="translated">The Java Print Service API defines a group of standard attribute classes modeled upon the attributes in the Internet Printing Protocol (IPP) version 1.1. The standard attribute classes are in the subpackage &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; to keep the actual attribute classes conceptually separate from the generic apparatus defined in package &lt;code&gt;javax.print.attribute&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94f66170e9f1f394a5254a9fe89af973c28cd26f" translate="yes" xml:space="preserve">
          <source>The Java Print Service API defines a group of standard attribute classes modeled upon the attributes in the Internet Printing Protocol (IPP) version 1.1. The standard attribute classes are in the subpackage javax.print.attribute.standard to keep the actual attribute classes conceptually separate from the generic apparatus defined in package javax.print.attribute.</source>
          <target state="translated">Java Print Service APIは,インターネット印刷プロトコル(IPP)バージョン1.1の属性をモデルにした標準属性クラス群を定義している。標準属性クラスは,実際の属性クラスをパッケージjavax.print.attributeで定義されている一般的な装置から概念的に分離しておくために,サブパッケージjavax.print.attribute.standardにあります。</target>
        </trans-unit>
        <trans-unit id="a818f0937d6870054c9657fd1853dbbf7260285b" translate="yes" xml:space="preserve">
          <source>The Java Print Service API defines these different kinds of attributes with five subinterfaces of &lt;code&gt;Attribute&lt;/code&gt;:</source>
          <target state="translated">Java Print Service APIは、 &lt;code&gt;Attribute&lt;/code&gt; の 5つのサブインターフェースを使用して、これらの異なる種類の属性を定義します。</target>
        </trans-unit>
        <trans-unit id="4a4823caa7194efcb9ec79cc33455ea92b11d4af" translate="yes" xml:space="preserve">
          <source>The Java Print Service API does not define any mandatorily supported &lt;code&gt;DocFlavors&lt;/code&gt;. However, here are some examples of MIME types that a Java Print Service instance might support for client formatted print data. Nested classes inside class &lt;code&gt;DocFlavor&lt;/code&gt; declare predefined static constant &lt;code&gt;DocFlavor&lt;/code&gt; objects for these example doc flavors; class &lt;code&gt;DocFlavor&lt;/code&gt;'s constructor can be used to create an arbitrary doc flavor.</source>
          <target state="translated">The Java Print Service API does not define any mandatorily supported &lt;code&gt;DocFlavors&lt;/code&gt; . However, here are some examples of MIME types that a Java Print Service instance might support for client formatted print data. Nested classes inside class &lt;code&gt;DocFlavor&lt;/code&gt; declare predefined static constant &lt;code&gt;DocFlavor&lt;/code&gt; objects for these example doc flavors; class &lt;code&gt;DocFlavor&lt;/code&gt; 's constructor can be used to create an arbitrary doc flavor.</target>
        </trans-unit>
        <trans-unit id="fe3bd743981c387b2400e5d9b97f685293d95022" translate="yes" xml:space="preserve">
          <source>The Java Print Service API does not define any mandatorily supported DocFlavors. However, here are some examples of MIME types that a Java Print Service instance might support for client formatted print data. Nested classes inside class DocFlavor declare predefined static constant DocFlavor objects for these example doc flavors; class DocFlavor's constructor can be used to create an arbitrary doc flavor.</source>
          <target state="translated">Java Print Service APIは、強制的にサポートされるDocFlavorsを定義していない。しかし、Java Print Serviceインスタンスがクライアントフォーマットされた印刷データに対してサポートする可能性のあるMIMEタイプの例を以下に示す。クラスDocFlavor内のネストされたクラスは、これらの例のdocフレーバーに対して、定義済みの静的定数DocFlavorオブジェクトを宣言している。</target>
        </trans-unit>
        <trans-unit id="65c3c2c1fe707b0a8b3bdeea8d3461a62fcf7c49" translate="yes" xml:space="preserve">
          <source>The Java Print Service API is designed so that vendors can:</source>
          <target state="translated">Java Print Service APIは、ベンダーができるように設計されています。</target>
        </trans-unit>
        <trans-unit id="3f34c755601f30797b5c5b7d5b48474498065dd9" translate="yes" xml:space="preserve">
          <source>The Java Print Service API provides four specializations of an attribute set that are restricted to contain just one of the four kinds of attributes, as discussed in the &lt;a href=&quot;#role&quot;&gt;Attribute Roles&lt;/a&gt; section:</source>
          <target state="translated">Java Print Service APIは、&lt;a href=&quot;#role&quot;&gt;属性の役割の&lt;/a&gt;セクションで説明したように、4種類の属性の1つだけを含むように制限された属性セットの4つの特殊化を提供します。</target>
        </trans-unit>
        <trans-unit id="5e75e4ce71063f5deab60042bab1ecda724688fe" translate="yes" xml:space="preserve">
          <source>The Java SE 11 Platform uses character information from version 10.0 of the Unicode Standard, with an extension. The Java SE 11 Platform allows an implementation of class &lt;code&gt;Character&lt;/code&gt; to use the Japanese Era code point, &lt;code&gt;U+32FF&lt;/code&gt;, from the first version of the Unicode Standard after 10.0 that assigns the code point. Consequently, the behavior of fields and methods of class &lt;code&gt;Character&lt;/code&gt; may vary across implementations of the Java SE 11 Platform when processing the aforementioned code point ( outside of version 10.0 ), except for the following methods that define Java identifiers: &lt;a href=&quot;#isJavaIdentifierStart(int)&quot;&gt;&lt;code&gt;isJavaIdentifierStart(int)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#isJavaIdentifierStart(char)&quot;&gt;&lt;code&gt;isJavaIdentifierStart(char)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#isJavaIdentifierPart(int)&quot;&gt;&lt;code&gt;isJavaIdentifierPart(int)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#isJavaIdentifierPart(char)&quot;&gt;&lt;code&gt;isJavaIdentifierPart(char)&lt;/code&gt;&lt;/a&gt;. Code points in Java identifiers must be drawn from version 10.0 of the Unicode Standard.</source>
          <target state="translated">The Java SE 11 Platform uses character information from version 10.0 of the Unicode Standard, with an extension. The Java SE 11 Platform allows an implementation of class &lt;code&gt;Character&lt;/code&gt; to use the Japanese Era code point, &lt;code&gt;U+32FF&lt;/code&gt; , from the first version of the Unicode Standard after 10.0 that assigns the code point. Consequently, the behavior of fields and methods of class &lt;code&gt;Character&lt;/code&gt; may vary across implementations of the Java SE 11 Platform when processing the aforementioned code point ( outside of version 10.0 ), except for the following methods that define Java identifiers: &lt;a href=&quot;#isJavaIdentifierStart(int)&quot;&gt; &lt;code&gt;isJavaIdentifierStart(int)&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#isJavaIdentifierStart(char)&quot;&gt; &lt;code&gt;isJavaIdentifierStart(char)&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#isJavaIdentifierPart(int)&quot;&gt; &lt;code&gt;isJavaIdentifierPart(int)&lt;/code&gt; &lt;/a&gt;, and &lt;a href=&quot;#isJavaIdentifierPart(char)&quot;&gt; &lt;code&gt;isJavaIdentifierPart(char)&lt;/code&gt; &lt;/a&gt;. Code points in Java identifiers must be drawn from version 10.0 of the Unicode Standard.</target>
        </trans-unit>
        <trans-unit id="44ab385c7dd8fa1da3c53b3392398a85953402b3" translate="yes" xml:space="preserve">
          <source>The Java SE Platform supports all eras defined by the Japanese government, beginning with the Meiji era. Each era is identified in the Platform by an integer value and a name. The &lt;a href=&quot;#of(int)&quot;&gt;&lt;code&gt;of(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt;&lt;code&gt;valueOf(String)&lt;/code&gt;&lt;/a&gt; methods may be used to obtain a singleton instance of &lt;code&gt;JapaneseEra&lt;/code&gt; for each era. The &lt;a href=&quot;#values()&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; method returns the singleton instances of all supported eras.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb3e24894a90acb5b20ffe967cda4ac6a0179f2" translate="yes" xml:space="preserve">
          <source>The Java SE Platform supports all eras defined by the Japanese government, beginning with the Meiji era. Each era is identified in the Platform by an integer value and a name. The &lt;a href=&quot;#of(int)&quot;&gt;&lt;code&gt;of(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt;&lt;code&gt;valueOf(String)&lt;/code&gt;&lt;/a&gt; methods may be used to obtain a singleton instance of JapaneseEra for each era. The &lt;a href=&quot;#values()&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; method returns the singleton instances of all supported eras.</source>
          <target state="translated">The Java SE Platform supports all eras defined by the Japanese government, beginning with the Meiji era. Each era is identified in the Platform by an integer value and a name. The &lt;a href=&quot;#of(int)&quot;&gt; &lt;code&gt;of(int)&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#valueOf(java.lang.String)&quot;&gt; &lt;code&gt;valueOf(String)&lt;/code&gt; &lt;/a&gt; methods may be used to obtain a singleton instance of JapaneseEra for each era. The &lt;a href=&quot;#values()&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt; method returns the singleton instances of all supported eras.</target>
        </trans-unit>
        <trans-unit id="020b92794f4c93bc0ed4d9763a4e104a73b9e2f4" translate="yes" xml:space="preserve">
          <source>The Java SQL framework allows for multiple database drivers.</source>
          <target state="translated">Java SQLフレームワークでは、複数のデータベースドライバを使用することができます。</target>
        </trans-unit>
        <trans-unit id="a77beb7b7668d78be82a4d8cfa6760cf65edf7a3" translate="yes" xml:space="preserve">
          <source>The Java Series book published by Addison-Wesley Longman provides detailed information about the classes and interfaces in the &lt;code&gt;javax.sql&lt;/code&gt; package:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cea0620c1bef0b99a18c809ce3bab655ecb274b" translate="yes" xml:space="preserve">
          <source>The Java Sound Tutorial</source>
          <target state="translated">Javaサウンドチュートリアル</target>
        </trans-unit>
        <trans-unit id="c2715c77dd34c70665dfad2f1923e173e786e209" translate="yes" xml:space="preserve">
          <source>The Java Time-Scale divides each calendar day into exactly 86400 subdivisions, known as seconds. These seconds may differ from the SI second. It closely matches the de facto international civil time scale, the definition of which changes from time to time.</source>
          <target state="translated">Javaタイムスケールは、各暦日を秒と呼ばれる86400の細分化に分割しています。これらの秒は、SI秒とは異なる場合があります。これは、事実上の国際的な市民時間スケールと密接に一致しており、その定義は時々刻々と変化します。</target>
        </trans-unit>
        <trans-unit id="4bde9066215b58dffb03e10c8882b75db84e87a4" translate="yes" xml:space="preserve">
          <source>The Java Time-Scale has slightly different definitions for different segments of the time-line, each based on the consensus international time scale that is used as the basis for civil time. Whenever the internationally-agreed time scale is modified or replaced, a new segment of the Java Time-Scale must be defined for it. Each segment must meet these requirements:</source>
          <target state="translated">Java時間尺度は,時間軸の異なるセグメントに対してわずかに異なる定義を持っており,それぞれが市民時間の基礎として使用されているコンセンサス国際時間尺度に基づいている。国際的に合意された時間尺度が修正されたり置き換えられたりするたびに、Java時間尺度の新しいセグメントが定義されなければならない。各セグメントは、これらの要件を満たさなければならない。</target>
        </trans-unit>
        <trans-unit id="f78637fddaa4e53e279355beabee4458db283b36" translate="yes" xml:space="preserve">
          <source>The Java Tutorial</source>
          <target state="translated">Javaチュートリアル</target>
        </trans-unit>
        <trans-unit id="4600970ab5dcc28d471a34b69880d44724af7c9c" translate="yes" xml:space="preserve">
          <source>The Java Virtual Machine Specification</source>
          <target state="translated">Java仮想マシン仕様</target>
        </trans-unit>
        <trans-unit id="5e6b0a63803973c77139670d0df2b4f4878bdba5" translate="yes" xml:space="preserve">
          <source>The Java Virtual Machine marks &lt;code&gt;L&lt;/code&gt; as the defining class loader of &lt;code&gt;C&lt;/code&gt;, but no class loader is recorded as an initiating class loader of &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3cf148b298a0b996efd7f97bd7f2e6174fda315" translate="yes" xml:space="preserve">
          <source>The Java Virtual Machine sets the default locale during startup based on the host environment. It is used by many locale-sensitive methods if no locale is explicitly specified.</source>
          <target state="translated">Java 仮想マシンは、ホスト環境に基づいて起動時のデフォルトロケールを設定します。これは、ロケールが明示的に指定されていない場合、多くのロケールに敏感なメソッドで使用されます。</target>
        </trans-unit>
        <trans-unit id="54550db269bf7cd9cb4b43e4d04a89f68d9ad806" translate="yes" xml:space="preserve">
          <source>The Java Virtual Machine sets the default locale during startup based on the host environment. It is used by many locale-sensitive methods if no locale is explicitly specified. It can be changed using the &lt;a href=&quot;#setDefault(java.util.Locale)&quot;&gt;&lt;code&gt;setDefault&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">The Java Virtual Machine sets the default locale during startup based on the host environment. It is used by many locale-sensitive methods if no locale is explicitly specified. It can be changed using the &lt;a href=&quot;#setDefault(java.util.Locale)&quot;&gt; &lt;code&gt;setDefault&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="d9d7a4ea102a2331058fd720ef77be5d28603b6b" translate="yes" xml:space="preserve">
          <source>The Java Virtual Machine sets the default locale during startup based on the host environment. It is used by many locale-sensitive methods if no locale is explicitly specified. It can be changed using the &lt;a href=&quot;locale#setDefault-java.util.Locale-&quot;&gt;&lt;code&gt;setDefault&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java仮想マシンは、ホスト環境に基づいて、起動時にデフォルトのロケールを設定します。ロケールが明示的に指定されていない場合、ロケールに依存する多くのメソッドで使用されます。&lt;a href=&quot;locale#setDefault-java.util.Locale-&quot;&gt; &lt;code&gt;setDefault&lt;/code&gt; &lt;/a&gt;メソッドを使用して変更できます。</target>
        </trans-unit>
        <trans-unit id="935b4a63d6ee5db34b9d75a511cfdfab0947e278" translate="yes" xml:space="preserve">
          <source>The Java Virtual Machine sets the default locale during startup based on the host environment. It is used by many locale-sensitive methods if no locale is explicitly specified. It can be changed using the setDefault(Locale.Category, Locale) method.</source>
          <target state="translated">Java 仮想マシンは、ホスト環境に基づいて起動時のデフォルトロケールを設定します。これは、ロケールが明示的に指定されていない場合、多くのロケールセンシティブなメソッドで使用されます。setDefault(Locale.Category,Locale)メソッドを使用して変更できます。</target>
        </trans-unit>
        <trans-unit id="f5d4bfdb8b77d90d9d3b5f96ac809bfa715ae313" translate="yes" xml:space="preserve">
          <source>The Java class name of composite data values this composite type represents (ie the class name returned by the &lt;a href=&quot;opentype#getClassName()&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; method) is set to the string value returned by &lt;code&gt;CompositeData.class.getName()&lt;/code&gt;.</source>
          <target state="translated">The Java class name of composite data values this composite type represents (ie the class name returned by the &lt;a href=&quot;opentype#getClassName()&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt; method) is set to the string value returned by &lt;code&gt;CompositeData.class.getName()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0bf9c7a5833d85446736a0e1c4523720b0baa70e" translate="yes" xml:space="preserve">
          <source>The Java class name of composite data values this composite type represents (ie the class name returned by the &lt;a href=&quot;opentype#getClassName--&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; method) is set to the string value returned by &lt;code&gt;CompositeData.class.getName()&lt;/code&gt;.</source>
          <target state="translated">この複合型が表す複合データ値のJavaクラス名（つまり、&lt;a href=&quot;opentype#getClassName--&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt;メソッドによって返されるクラス名）は、 &lt;code&gt;CompositeData.class.getName()&lt;/code&gt; によって返される文字列値に設定されます。</target>
        </trans-unit>
        <trans-unit id="c797024101e43684f89be3466f4ed077167867bf" translate="yes" xml:space="preserve">
          <source>The Java class name of tabular data values this tabular type represents (ie the class name returned by the &lt;a href=&quot;opentype#getClassName()&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; method) is set to the string value returned by &lt;code&gt;TabularData.class.getName()&lt;/code&gt;.</source>
          <target state="translated">The Java class name of tabular data values this tabular type represents (ie the class name returned by the &lt;a href=&quot;opentype#getClassName()&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt; method) is set to the string value returned by &lt;code&gt;TabularData.class.getName()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bda12988aff6c0c6b0da57eda918cd7f7e41f2f4" translate="yes" xml:space="preserve">
          <source>The Java class name of tabular data values this tabular type represents (ie the class name returned by the &lt;a href=&quot;opentype#getClassName--&quot;&gt;&lt;code&gt;getClassName&lt;/code&gt;&lt;/a&gt; method) is set to the string value returned by &lt;code&gt;TabularData.class.getName()&lt;/code&gt;.</source>
          <target state="translated">この表形式タイプが表す表形式データ値のJavaクラス名（つまり、&lt;a href=&quot;opentype#getClassName--&quot;&gt; &lt;code&gt;getClassName&lt;/code&gt; &lt;/a&gt;メソッドによって返されるクラス名）は、 &lt;code&gt;TabularData.class.getName()&lt;/code&gt; によって返される文字列値に設定されます。</target>
        </trans-unit>
        <trans-unit id="9c14a043362d4c6a8070d7ef91c6074e182453f3" translate="yes" xml:space="preserve">
          <source>The Java input method framework intends to support all combinations of input methods (host input methods and Java input methods) and components (peered and lightweight). However, because of limitations in the underlying platform, it may not always be possible to enable the communication between Java input methods and peered AWT components. Support for this specific combination is therefore platform dependent. In Sun's Java SE Runtime Environments, this combination is supported on Windows, but not on Solaris.</source>
          <target state="translated">Java入力メソッドフレームワークは、入力メソッド(ホスト入力メソッドとJava入力メソッド)とコンポーネント(ピアード型と軽量型)のすべての組み合わせをサポートすることを意図しています。しかし、基礎となるプラットフォームの制限のため、Java入力メソッドとピアードAWTコンポーネント間の通信を可能にすることが常に可能であるとは限らない。したがって、この特定の組み合わせのサポートは、プラットフォームに依存します。SunのJava SEランタイム環境では、この組み合わせはWindowsでサポートされていますが、Solarisではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="79100a6d797f840a76dcfd0b27ebb8da026f838e" translate="yes" xml:space="preserve">
          <source>The Java interface name for a Standard MBean or MXBean, as returned by &lt;a href=&quot;../../../java.base/java/lang/class#getName()&quot;&gt;&lt;code&gt;Class.getName()&lt;/code&gt;&lt;/a&gt;. A Standard MBean or MXBean registered directly in the MBean Server or created using the &lt;a href=&quot;standardmbean&quot;&gt;&lt;code&gt;StandardMBean&lt;/code&gt;&lt;/a&gt; class will have this field in its MBeanInfo Descriptor.</source>
          <target state="translated">The Java interface name for a Standard MBean or MXBean, as returned by &lt;a href=&quot;../../../java.base/java/lang/class#getName()&quot;&gt; &lt;code&gt;Class.getName()&lt;/code&gt; &lt;/a&gt;. A Standard MBean or MXBean registered directly in the MBean Server or created using the &lt;a href=&quot;standardmbean&quot;&gt; &lt;code&gt;StandardMBean&lt;/code&gt; &lt;/a&gt; class will have this field in its MBeanInfo Descriptor.</target>
        </trans-unit>
        <trans-unit id="51863c4a757aa5599aa4ec4ebb6fdc59f85b517e" translate="yes" xml:space="preserve">
          <source>The Java interface name for a Standard MBean or MXBean, as returned by &lt;a href=&quot;../../java/lang/class#getName--&quot;&gt;&lt;code&gt;Class.getName()&lt;/code&gt;&lt;/a&gt;. A Standard MBean or MXBean registered directly in the MBean Server or created using the &lt;a href=&quot;standardmbean&quot;&gt;&lt;code&gt;StandardMBean&lt;/code&gt;&lt;/a&gt; class will have this field in its MBeanInfo Descriptor.</source>
          <target state="translated">&lt;a href=&quot;../../java/lang/class#getName--&quot;&gt; &lt;code&gt;Class.getName()&lt;/code&gt; &lt;/a&gt;によって返される、標準MBeanまたはMXBeanのJavaインターフェース名。 MBeanサーバーに直接登録された、または&lt;a href=&quot;standardmbean&quot;&gt; &lt;code&gt;StandardMBean&lt;/code&gt; &lt;/a&gt;クラスを使用して作成された標準MBeanまたはMXBean は、MBeanInfo記述子にこのフィールドを持ちます。</target>
        </trans-unit>
        <trans-unit id="b846c3f527602fad3b8086a6f7a5ad28be2a0b97" translate="yes" xml:space="preserve">
          <source>The Java language provides special support for the string concatenation operator ( + ), and for conversion of other objects to strings. For additional information on string concatenation and conversion, see</source>
          <target state="translated">Java言語は,文字列連結演算子(+)と,他のオブジェクトの文字列への変換を特別にサポートしています。文字列の連結と変換についての詳細は</target>
        </trans-unit>
        <trans-unit id="1aedb6f153f14e307ee0a63ee1143e333aca4608" translate="yes" xml:space="preserve">
          <source>The Java language provides special support for the string concatenation operator ( + ), and for conversion of other objects to strings. String concatenation is implemented through the &lt;code&gt;StringBuilder&lt;/code&gt;(or &lt;code&gt;StringBuffer&lt;/code&gt;) class and its &lt;code&gt;append&lt;/code&gt; method. String conversions are implemented through the method &lt;code&gt;toString&lt;/code&gt;, defined by &lt;code&gt;Object&lt;/code&gt; and inherited by all classes in Java. For additional information on string concatenation and conversion, see Gosling, Joy, and Steele,</source>
          <target state="translated">Java言語は、文字列連結演算子（+）、および他のオブジェクトから文字列への変換を特別にサポートしています。文字列の連結は、 &lt;code&gt;StringBuilder&lt;/code&gt; （または &lt;code&gt;StringBuffer&lt;/code&gt; ）クラスとその &lt;code&gt;append&lt;/code&gt; メソッドを介して実装されます。文字列変換は、メソッド &lt;code&gt;toString&lt;/code&gt; を介して実装され、 &lt;code&gt;Object&lt;/code&gt; によって定義され、Javaのすべてのクラスによって継承されます。文字列の連結と変換の詳細については、Gosling、Joy、およびSteeleを参照してください。</target>
        </trans-unit>
        <trans-unit id="e0998193a86cfe456d402b1f0c70a66b6cd6c11c" translate="yes" xml:space="preserve">
          <source>The Java math library is defined with respect to &lt;code&gt;fdlibm&lt;/code&gt; version 5.3. Where &lt;code&gt;fdlibm&lt;/code&gt; provides more than one definition for a function (such as &lt;code&gt;acos&lt;/code&gt;), use the &quot;IEEE 754 core function&quot; version (residing in a file whose name begins with the letter &lt;code&gt;e&lt;/code&gt;). The methods which require &lt;code&gt;fdlibm&lt;/code&gt; semantics are &lt;code&gt;sin&lt;/code&gt;, &lt;code&gt;cos&lt;/code&gt;, &lt;code&gt;tan&lt;/code&gt;, &lt;code&gt;asin&lt;/code&gt;, &lt;code&gt;acos&lt;/code&gt;, &lt;code&gt;atan&lt;/code&gt;, &lt;code&gt;exp&lt;/code&gt;, &lt;code&gt;log&lt;/code&gt;, &lt;code&gt;log10&lt;/code&gt;, &lt;code&gt;cbrt&lt;/code&gt;, &lt;code&gt;atan2&lt;/code&gt;, &lt;code&gt;pow&lt;/code&gt;, &lt;code&gt;sinh&lt;/code&gt;, &lt;code&gt;cosh&lt;/code&gt;, &lt;code&gt;tanh&lt;/code&gt;, &lt;code&gt;hypot&lt;/code&gt;, &lt;code&gt;expm1&lt;/code&gt;, and &lt;code&gt;log1p&lt;/code&gt;.</source>
          <target state="translated">Java数学ライブラリは、 &lt;code&gt;fdlibm&lt;/code&gt; バージョン5.3 に関して定義されています。どこ &lt;code&gt;fdlibm&lt;/code&gt; は（のような機能のために複数の定義を提供 &lt;code&gt;acos&lt;/code&gt; ）、（名前が文字で始まるファイルに存在する「IEEE 754コア機能」バージョンを使用 &lt;code&gt;e&lt;/code&gt; ）。必要とする方法 &lt;code&gt;fdlibm&lt;/code&gt; セマンティクスがある &lt;code&gt;sin&lt;/code&gt; 、 &lt;code&gt;cos&lt;/code&gt; 、 &lt;code&gt;tan&lt;/code&gt; 、 &lt;code&gt;asin&lt;/code&gt; 、 &lt;code&gt;acos&lt;/code&gt; 、 &lt;code&gt;atan&lt;/code&gt; 、 &lt;code&gt;exp&lt;/code&gt; 、 &lt;code&gt;log&lt;/code&gt; 、 &lt;code&gt;log10&lt;/code&gt; 、 &lt;code&gt;cbrt&lt;/code&gt; 、 &lt;code&gt;atan2&lt;/code&gt; 、 &lt;code&gt;pow&lt;/code&gt; 、 &lt;code&gt;sinh&lt;/code&gt; 、 &lt;code&gt;cosh&lt;/code&gt; 、 &lt;code&gt;tanh&lt;/code&gt; 、 &lt;code&gt;hypot&lt;/code&gt; 、 &lt;code&gt;expm1&lt;/code&gt; 、および &lt;code&gt;log1p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75bc96f1b0cc70e1672a7ea3f62bf4ee8f43d325" translate="yes" xml:space="preserve">
          <source>The Java programming language does not guarantee which thread will invoke the &lt;code&gt;finalize&lt;/code&gt; method for any given object. It is guaranteed, however, that the thread that invokes finalize will not be holding any user-visible synchronization locks when finalize is invoked. If an uncaught exception is thrown by the finalize method, the exception is ignored and finalization of that object terminates.</source>
          <target state="translated">Javaプログラミング言語は、どのスレッドが特定のオブジェクトの &lt;code&gt;finalize&lt;/code&gt; メソッドを呼び出すかを保証しません。ただし、finalizeを呼び出すスレッドは、finalizeが呼び出されたときに、ユーザーに表示される同期ロックを保持しないことが保証されています。キャッチされない例外がfinalizeメソッドによってスローされた場合、その例外は無視され、そのオブジェクトのファイナライズは終了します。</target>
        </trans-unit>
        <trans-unit id="a17398b63cfead5fb4c823a73d9a91965bc4ebc9" translate="yes" xml:space="preserve">
          <source>The Java run-time has the following built-in class loaders:</source>
          <target state="translated">Javaランタイムには、以下の組み込みクラスローダーがあります。</target>
        </trans-unit>
        <trans-unit id="08aaa85f6f705c223cf7d10e7c00860e557c843f" translate="yes" xml:space="preserve">
          <source>The Java run-time may also allow, but is not required to allow, the security manager to be set dynamically by invoking the &lt;a href=&quot;system#setSecurityManager(java.lang.SecurityManager)&quot;&gt;&lt;code&gt;setSecurityManager&lt;/code&gt;&lt;/a&gt; method. In the JDK implementation, if the Java virtual machine is started with the &lt;code&gt;java.security.manager&lt;/code&gt; system property set to the special token &quot;&lt;code&gt;disallow&lt;/code&gt;&quot; then a security manager will not be set at startup and cannot be set dynamically (the &lt;a href=&quot;system#setSecurityManager(java.lang.SecurityManager)&quot;&gt;&lt;code&gt;setSecurityManager&lt;/code&gt;&lt;/a&gt; method will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;). If the &lt;code&gt;java.security.manager&lt;/code&gt; system property is not set or is set to the special token &quot;&lt;code&gt;allow&lt;/code&gt;&quot;, then a security manager will not be set at startup but can be set dynamically. Finally, if the &lt;code&gt;java.security.manager&lt;/code&gt; system property is set to the class name of the security manager, or to the empty String (&quot;&quot;) or the special token &quot;&lt;code&gt;default&lt;/code&gt;&quot;, then a security manager is set at startup (as described previously) and can also be subsequently replaced (or disabled) dynamically (subject to the policy of the currently installed security manager). The following table illustrates the behavior of the JDK implementation for the different settings of the &lt;code&gt;java.security.manager&lt;/code&gt; system property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9b0a73944b42ff81458d35c69a8c4267a950f1" translate="yes" xml:space="preserve">
          <source>The Java thread ID, or &lt;code&gt;-1&lt;/code&gt; if doesn't exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af13f60de6a564a40dc8e97ebaf3a0143c84236a" translate="yes" xml:space="preserve">
          <source>The Java time-scale is used for all date-time classes. This includes &lt;code&gt;Instant&lt;/code&gt;, &lt;code&gt;LocalDate&lt;/code&gt;, &lt;code&gt;LocalTime&lt;/code&gt;, &lt;code&gt;OffsetDateTime&lt;/code&gt;, &lt;code&gt;ZonedDateTime&lt;/code&gt; and &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="translated">Javaタイムスケールは、すべての日時クラスに使用されます。これには、 &lt;code&gt;Instant&lt;/code&gt; 、 &lt;code&gt;LocalDate&lt;/code&gt; 、 &lt;code&gt;LocalTime&lt;/code&gt; 、 &lt;code&gt;OffsetDateTime&lt;/code&gt; 、 &lt;code&gt;ZonedDateTime&lt;/code&gt; 、 &lt;code&gt;Duration&lt;/code&gt; が含まれます。</target>
        </trans-unit>
        <trans-unit id="b2da8a881d3a54f6e4f6b884054ec854ec43a1d9" translate="yes" xml:space="preserve">
          <source>The Java type of the resource. For field annotations, the default is the type of the field. For method annotations, the default is the type of the JavaBeans property. For class annotations, there is no default and this must be specified.</source>
          <target state="translated">リソースのJava型。フィールド注釈の場合、デフォルトはフィールドのタイプです。メソッドのアノテーションの場合、デフォルトは JavaBeans プロパティの型です。クラス注釈の場合、デフォルトはなく、これを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="43d20fd86e33d070ee07b30fb6fd2637b8965aa6" translate="yes" xml:space="preserve">
          <source>The Java virtual machine</source>
          <target state="translated">Java仮想マシン</target>
        </trans-unit>
        <trans-unit id="9b5c7ce28420ae67114f39b12a0543341609a160" translate="yes" xml:space="preserve">
          <source>The Java virtual machine has a</source>
          <target state="translated">Java仮想マシンには</target>
        </trans-unit>
        <trans-unit id="88c7b1259981c72516090ed9654552f9f3ed6e3b" translate="yes" xml:space="preserve">
          <source>The Java virtual machine has a default provider that provides zone rules for the time-zones defined by IANA Time Zone Database (TZDB). If the system property &lt;code&gt;&lt;span id=&quot;java.time.zone.DefaultZoneRulesProvider&quot;&gt;java.time.zone.DefaultZoneRulesProvider&lt;/span&gt;&lt;/code&gt; is defined then it is taken to be the fully-qualified name of a concrete ZoneRulesProvider class to be loaded as the default provider, using the system class loader. If this system property is not defined, a system-default provider will be loaded to serve as the default provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8516f820bb05657121a79dd1bd0a5cddcc1f2f53" translate="yes" xml:space="preserve">
          <source>The Java virtual machine has a default provider that provides zone rules for the time-zones defined by IANA Time Zone Database (TZDB). If the system property &lt;code&gt;java.time.zone.DefaultZoneRulesProvider&lt;/code&gt; is defined then it is taken to be the fully-qualified name of a concrete ZoneRulesProvider class to be loaded as the default provider, using the system class loader. If this system property is not defined, a system-default provider will be loaded to serve as the default provider.</source>
          <target state="translated">Java仮想マシンには、IANAタイムゾーンデータベース（TZDB）によって定義されたタイムゾーンのゾーンルールを提供するデフォルトプロバイダーがあります。システムプロパティ &lt;code&gt;java.time.zone.DefaultZoneRulesProvider&lt;/code&gt; が定義されている場合は、システムクラスローダーを使用して、デフォルトプロバイダーとして読み込まれる具体的なZoneRulesProviderクラスの完全修飾名と見なされます。このシステムプロパティが定義されていない場合、システムデフォルトプロバイダーがロードされ、デフォルトプロバイダーとして機能します。</target>
        </trans-unit>
        <trans-unit id="01e66a7f2f90bc990318958109b0d41e725d670b" translate="yes" xml:space="preserve">
          <source>The Java virtual machine has a heap for object allocation and also maintains non-heap memory for the method area and the Java virtual machine execution. The Java virtual machine can have one or more memory pools. Each memory pool represents a memory area of one of the following types:</source>
          <target state="translated">Java仮想マシンは、オブジェクトの割り当てのためのヒープを持ち、また、メソッド領域とJava仮想マシンの実行のための非ヒープメモリを維持します。Java 仮想マシンは、1 つ以上のメモリプールを持つことができます。各メモリプールは、以下のいずれかのタイプのメモリ領域を表します。</target>
        </trans-unit>
        <trans-unit id="20591611464f80238a71287e9fce3d26d00ecfac" translate="yes" xml:space="preserve">
          <source>The Java virtual machine implementation may use a high resolution timer to measure the elapsed time. This method may return the same value even if the collection count has been incremented if the collection elapsed time is very short.</source>
          <target state="translated">Java仮想マシンの実装では、高解像度のタイマーを使用して経過時間を測定することがあります。このメソッドは、コレクションの経過時間が非常に短い場合、コレクションカウントがインクリメントされていても同じ値を返す場合があります。</target>
        </trans-unit>
        <trans-unit id="1b9d55292bfb865db4e6b6204b4073d1f202f8ab" translate="yes" xml:space="preserve">
          <source>The Java virtual machine maintains the peak memory usage of a memory pool since the virtual machine was started or the peak was reset. The peak memory usage is returned by the &lt;a href=&quot;#getPeakUsage()&quot;&gt;&lt;code&gt;getPeakUsage()&lt;/code&gt;&lt;/a&gt; method and reset by calling the &lt;a href=&quot;#resetPeakUsage()&quot;&gt;&lt;code&gt;resetPeakUsage()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">The Java virtual machine maintains the peak memory usage of a memory pool since the virtual machine was started or the peak was reset. The peak memory usage is returned by the &lt;a href=&quot;#getPeakUsage()&quot;&gt; &lt;code&gt;getPeakUsage()&lt;/code&gt; &lt;/a&gt; method and reset by calling the &lt;a href=&quot;#resetPeakUsage()&quot;&gt; &lt;code&gt;resetPeakUsage()&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="21c32d462e38386cb39051b42822e7568e72eaed" translate="yes" xml:space="preserve">
          <source>The Java virtual machine maintains the peak memory usage of a memory pool since the virtual machine was started or the peak was reset. The peak memory usage is returned by the &lt;a href=&quot;memorypoolmxbean#getPeakUsage--&quot;&gt;&lt;code&gt;getPeakUsage()&lt;/code&gt;&lt;/a&gt; method and reset by calling the &lt;a href=&quot;memorypoolmxbean#resetPeakUsage--&quot;&gt;&lt;code&gt;resetPeakUsage()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java仮想マシンは、仮想マシンが起動またはピークがリセットされてから、メモリプールのピークメモリ使用量を維持します。ピークのメモリ使用量が返される&lt;a href=&quot;memorypoolmxbean#getPeakUsage--&quot;&gt; &lt;code&gt;getPeakUsage()&lt;/code&gt; &lt;/a&gt;メソッドと呼び出すことによってリセット&lt;a href=&quot;memorypoolmxbean#resetPeakUsage--&quot;&gt; &lt;code&gt;resetPeakUsage()&lt;/code&gt; &lt;/a&gt;メソッドを。</target>
        </trans-unit>
        <trans-unit id="1dd3f55b5efbf2036c2fe1ec00c3c49d3ddb4916" translate="yes" xml:space="preserve">
          <source>The Java virtual machine manages memory other than the heap (referred as</source>
          <target state="translated">Java仮想マシンはヒープ以外のメモリを管理しています(</target>
        </trans-unit>
        <trans-unit id="472437aa219a5ab5c682981b0f53bbaf388053c7" translate="yes" xml:space="preserve">
          <source>The Java virtual machine may measure the time with a high resolution timer. This statistic is reset when the thread contention monitoring is reenabled.</source>
          <target state="translated">Java 仮想マシンは、高解像度タイマーで時間を測定することがあります。この統計量は、スレッド競合監視が再有効化されるとリセットされます。</target>
        </trans-unit>
        <trans-unit id="7d5cc1c9e97c8fd121944655161d88c67a4b91ea" translate="yes" xml:space="preserve">
          <source>The Java&amp;trade; Language Specification</source>
          <target state="translated">Java&amp;trade;言語仕様</target>
        </trans-unit>
        <trans-unit id="fff53af6e46bb1a4be8a5ab0a06369d5f80e1391" translate="yes" xml:space="preserve">
          <source>The Java&amp;trade; Language Specification, First Edition</source>
          <target state="translated">Java&amp;trade;言語仕様、初版</target>
        </trans-unit>
        <trans-unit id="417681d10c199b472becfb181846b8f2351a0cd7" translate="yes" xml:space="preserve">
          <source>The Java&amp;trade; Language Specification, Second Edition</source>
          <target state="translated">Java&amp;trade;言語仕様、第2版</target>
        </trans-unit>
        <trans-unit id="a4154fea8bd8d5b8ca35ca7f9f31b5ca95523b77" translate="yes" xml:space="preserve">
          <source>The Java&amp;trade; Language Specification, Third Edition</source>
          <target state="translated">Java&amp;trade;言語仕様、第3版</target>
        </trans-unit>
        <trans-unit id="b01e874645c4aa3cc169adba9f26395f941d4bfb" translate="yes" xml:space="preserve">
          <source>The Java&amp;trade; Virtual Machine Specification</source>
          <target state="translated">Java&amp;trade;仮想マシン仕様</target>
        </trans-unit>
        <trans-unit id="573f4350c0a7648c709160ed919837ba77cd9cc2" translate="yes" xml:space="preserve">
          <source>The Java(tm)2D API adopts the convention that one point is equivalent to one unit in user coordinates. When using a normalized transform for converting user space coordinates to device space coordinates 72 user space units equal 1 inch in device space. In this case one point is 1/72 of an inch.</source>
          <target state="translated">Java(tm)2D APIでは、ユーザ座標では1点が1単位に相当するという慣例を採用しています。ユーザ空間座標をデバイス空間座標に変換するために正規化変換を使用する場合、ユーザ空間の72単位はデバイス空間の1インチに相当します。この場合、1点は1インチの1/72となります。</target>
        </trans-unit>
        <trans-unit id="73f06ed2f1aac123ba68f5eb4faa83cf80ea193e" translate="yes" xml:space="preserve">
          <source>The JavaBeans specification defines the notion of design time as is a mode in which JavaBeans instances should function during their composition and customization in a interactive design, composition or construction tool, as opposed to runtime when the JavaBean is part of an applet, application, or other live Java executable abstraction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cadba2d15fbb9804bf151281d2e05044e9bc484" translate="yes" xml:space="preserve">
          <source>The JavaBeans&amp;trade; specification defines the notion of design time as is a mode in which JavaBeans instances should function during their composition and customization in a interactive design, composition or construction tool, as opposed to runtime when the JavaBean is part of an applet, application, or other live Java executable abstraction.</source>
          <target state="translated">JavaBeans&amp;trade;仕様は、JavaBeansがアプレット、アプリケーションの一部である場合の実行時ではなく、対話型の設計、構成、または構築ツールでの構成およびカスタマイズ中にJavaBeansインスタンスが機能するモードである設計時の概念を定義します。または他のライブJava実行可能抽象化。</target>
        </trans-unit>
        <trans-unit id="2c47a19a69292af9f4d3ab44cef1faa2270339a1" translate="yes" xml:space="preserve">
          <source>The Javanese range with the Javanese digits.</source>
          <target state="translated">ジャワの桁数でジャワの範囲。</target>
        </trans-unit>
        <trans-unit id="7ece0bccd4f47c81fc16bd9c26fb8dacabc06bc3" translate="yes" xml:space="preserve">
          <source>The Jdbc &lt;code&gt;RowSet&lt;/code&gt; Implementations specification provides two reference implementations of the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class: &lt;code&gt;RIOptimisticProvider&lt;/code&gt; and &lt;code&gt;RIXMLProvider&lt;/code&gt;. The &lt;code&gt;RIOptimisticProvider&lt;/code&gt; can set any &lt;code&gt;RowSet&lt;/code&gt; implementation with a &lt;code&gt;RowSetReader&lt;/code&gt; object and a &lt;code&gt;RowSetWriter&lt;/code&gt; object. However, only the &lt;code&gt;RIXMLProvider&lt;/code&gt; implementation can set an &lt;code&gt;XmlReader&lt;/code&gt; object and an &lt;code&gt;XmlWriter&lt;/code&gt; object. A &lt;code&gt;WebRowSet&lt;/code&gt; object uses the &lt;code&gt;XmlReader&lt;/code&gt; object to read data in XML format to populate itself with that data. It uses the &lt;code&gt;XmlWriter&lt;/code&gt; object to write itself to a stream or &lt;code&gt;java.io.Writer&lt;/code&gt; object in XML format.</source>
          <target state="translated">The Jdbc &lt;code&gt;RowSet&lt;/code&gt; Implementations specification provides two reference implementations of the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class: &lt;code&gt;RIOptimisticProvider&lt;/code&gt; and &lt;code&gt;RIXMLProvider&lt;/code&gt; . The &lt;code&gt;RIOptimisticProvider&lt;/code&gt; can set any &lt;code&gt;RowSet&lt;/code&gt; implementation with a &lt;code&gt;RowSetReader&lt;/code&gt; object and a &lt;code&gt;RowSetWriter&lt;/code&gt; object. However, only the &lt;code&gt;RIXMLProvider&lt;/code&gt; implementation can set an &lt;code&gt;XmlReader&lt;/code&gt; object and an &lt;code&gt;XmlWriter&lt;/code&gt; object. A &lt;code&gt;WebRowSet&lt;/code&gt; object uses the &lt;code&gt;XmlReader&lt;/code&gt; object to read data in XML format to populate itself with that data. It uses the &lt;code&gt;XmlWriter&lt;/code&gt; object to write itself to a stream or &lt;code&gt;java.io.Writer&lt;/code&gt; object in XML format.</target>
        </trans-unit>
        <trans-unit id="46152631e4488fac6b1cad7442ef7feac4ea4d12" translate="yes" xml:space="preserve">
          <source>The JobImpressions attribute describes the size of the job. This attribute is not intended to be a counter; it is intended to be useful routing and scheduling information if known. The printer may try to compute the JobImpressions attribute's value if it is not supplied in the Print Request. Even if the client does supply a value for the JobImpressions attribute in the Print Request, the printer may choose to change the value if the printer is able to compute a value which is more accurate than the client supplied value. The printer may be able to determine the correct value for the JobImpressions attribute either right at job submission time or at any later point in time.</source>
          <target state="translated">JobImpressions属性は、ジョブのサイズを記述します。この属性はカウンタではなく、既知であれば有用なルーティングおよびスケジューリング情報となることを意図しています。印刷要求でJobImpressions属性の値が提供されていない場合、プリンタはJobImpressions属性の値を計算しようとすることがある。クライアントが印刷要求でJobImpressions属性の値を供給したとしても、プリンタは、クライアントが供給した値よりも正確な値を計算することができれば、その値を変更することを選択してもよい。プリンタは、ジョブ投入時に、またはそれ以降の任意の時点で、JobImpressions属性の正しい値を決定することができるかもしれない。</target>
        </trans-unit>
        <trans-unit id="2eda45bce719c55226f8cb11330a3730a179a164" translate="yes" xml:space="preserve">
          <source>The JobImpressionsCompleted attribute describes the progress of the job. This attribute is intended to be a counter. That is, the JobImpressionsCompleted value for a job that has not started processing must be 0. When the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; is PROCESSING or PROCESSING_STOPPED, the JobImpressionsCompleted value is intended to increase as the job is processed; it indicates the amount of the job that has been processed at the time the Print Job's attribute set is queried or at the time a print job event is reported. When the job enters the COMPLETED, CANCELED, or ABORTED states, the JobImpressionsCompleted value is the final value for the job.</source>
          <target state="translated">JobImpressionsCompleted属性は、ジョブの進行状況を示します。この属性は、カウンターとなることを目的としています。つまり、処理を開始していないジョブのJobImpressionsCompleted値は0である必要があります。ジョブの&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;がPROCESSINGまたはPROCESSING_STOPPED の場合、JobImpressionsCompleted値はジョブが処理されるにつれて増加することを目的としています。これは、印刷ジョブの属性セットが照会されたとき、または印刷ジョブイベントが報告されたときに処理されたジョブの量を示します。ジョブがCOMPLETED、CANCELED、またはABORTED状態になると、JobImpressionsCompleted値がジョブの最終値になります。</target>
        </trans-unit>
        <trans-unit id="23b552cbebfc9eeb6f00f5f7f1d577e52be27c5e" translate="yes" xml:space="preserve">
          <source>The JobKOctets attribute describes the size of the job. This attribute is not intended to be a counter; it is intended to be useful routing and scheduling information if known. The printer may try to compute the JobKOctets attribute's value if it is not supplied in the Print Request. Even if the client does supply a value for the JobKOctets attribute in the Print Request, the printer may choose to change the value if the printer is able to compute a value which is more accurate than the client supplied value. The printer may be able to determine the correct value for the JobKOctets attribute either right at job submission time or at any later point in time.</source>
          <target state="translated">JobKOctets属性は、ジョブのサイズを記述します。この属性はカウンタではなく、既知であれば有用なルーティングおよびスケジューリング情報となることを意図しています。印刷要求に JobKOctets 属性の値が提供されていない場合、プリンタは JobKOctets 属性の値を計算しようとすることがあります。クライアントが印刷要求でJobKOctets属性の値を供給したとしても、プリンタは、クライアントが供給した値よりも正確な値を計算することができれば、その値を変更することを選択してもよい。プリンタは、ジョブ投入時に、またはそれ以降の任意の時点で、JobKoctets属性の正しい値を決定することができる。</target>
        </trans-unit>
        <trans-unit id="10778b515020fa74e3922d67e4e4cfb07a6b5d4d" translate="yes" xml:space="preserve">
          <source>The JobKOctets value must also not include the multiplicative factor due to a copies instruction embedded in the document data. If the document data actually includes replications of the document data, this value will include such replication. In other words, this value is always the size of the source document data, rather than a measure of the hardcopy output to be produced.</source>
          <target state="translated">また、JobKOctets値には、文書データに埋め込まれた複製命令による乗算係数を含めてはならない。文書データが実際に文書データの複製を含む場合、この値はそのような複製を含む。言い換えれば、この値は、生成されるハードコピー出力の尺度ではなく、常にソース文書データのサイズである。</target>
        </trans-unit>
        <trans-unit id="4f8e193f841acdf58db4b152692036053ed12078" translate="yes" xml:space="preserve">
          <source>The JobKOctets value must not include the multiplicative factors contributed by the number of copies specified by the &lt;a href=&quot;copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute, independent of whether the device can process multiple copies without making multiple passes over the job or document data and independent of whether the output is collated or not. Thus the value is independent of the implementation and indicates the size of the document(s) measured in K octets independent of the number of copies.</source>
          <target state="translated">JobKOctets値には、デバイスがジョブまたはドキュメントデータに対して複数のパスを作成せずに複数のコピーを処理できるかどうか、および出力が照合されるかどうかとは無関係に、&lt;a href=&quot;copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt;属性で指定されたコピー数が寄与する乗法因子を含めないでください。 。したがって、値は実装とは無関係であり、コピーの数とは無関係にKオクテットで測定されたドキュメントのサイズを示します。</target>
        </trans-unit>
        <trans-unit id="860b972389f862538b6b997fd07b4c1c60636261" translate="yes" xml:space="preserve">
          <source>The JobKOctetsProcessed attribute describes the progress of the job. This attribute is intended to be a counter. That is, the JobKOctetsProcessed value for a job that has not started processing must be 0. When the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; is PROCESSING or PROCESSING_STOPPED, the JobKOctetsProcessed value is intended to increase as the job is processed; it indicates the amount of the job that has been processed at the time the Print Job's attribute set is queried or at the time a print job event is reported. When the job enters the COMPLETED, CANCELED, or ABORTED states, the JobKOctetsProcessed value is the final value for the job.</source>
          <target state="translated">JobKOctetsProcessed属性は、ジョブの進行状況を示します。この属性は、カウンターとなることを目的としています。つまり、処理を開始していないジョブのJobKOctetsProcessed値は0である必要があります。ジョブの&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;がPROCESSINGまたはPROCESSING_STOPPED の場合、JobKOctetsProcessed値はジョブが処理されるにつれて増加することを意図しています。これは、印刷ジョブの属性セットが照会されたとき、または印刷ジョブイベントが報告されたときに処理されたジョブの量を示します。ジョブがCOMPLETED、CANCELED、またはABORTED状態になると、JobKOctetsProcessed値がジョブの最終値になります。</target>
        </trans-unit>
        <trans-unit id="67c4f689dd8dce6456481d0861afa2eb83cc72f8" translate="yes" xml:space="preserve">
          <source>The JobMediaSheets attribute describes the size of the job. This attribute is not intended to be a counter; it is intended to be useful routing and scheduling information if known. The printer may try to compute the JobMediaSheets attribute's value if it is not supplied in the Print Request. Even if the client does supply a value for the JobMediaSheets attribute in the Print Request, the printer may choose to change the value if the printer is able to compute a value which is more accurate than the client supplied value. The printer may be able to determine the correct value for the JobMediaSheets attribute either right at job submission time or at any later point in time.</source>
          <target state="translated">JobMediaSheets属性は、ジョブのサイズを記述します。この属性はカウンタではなく、既知であれば有用なルーティングおよびスケジューリング情報となることを意図しています。印刷要求でJobMediaSheets属性の値が提供されない場合、プリンタはJobMediaSheets属性の値を計算しようとすることがあります。クライアントが印刷要求でJobMediaSheets属性の値を供給したとしても、プリンタは、クライアントが供給した値よりも正確な値を計算することができれば、その値を変更することを選択してもよい。プリンタは、ジョブ投入時に、またはそれ以降の任意の時点で、JobMediaSheets属性の正しい値を決定することができるかもしれない。</target>
        </trans-unit>
        <trans-unit id="27e40040d6353841f04365a16d249f070597a18a" translate="yes" xml:space="preserve">
          <source>The JobMediaSheetsCompleted attribute describes the progress of the job. This attribute is intended to be a counter. That is, the JobMediaSheetsCompleted value for a job that has not started processing must be 0. When the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; is PROCESSING or PROCESSING_STOPPED, the JobMediaSheetsCompleted value is intended to increase as the job is processed; it indicates the amount of the job that has been processed at the time the Print Job's attribute set is queried or at the time a print job event is reported. When the job enters the COMPLETED, CANCELED, or ABORTED states, the JobMediaSheetsCompleted value is the final value for the job.</source>
          <target state="translated">JobMediaSheetsCompleted属性は、ジョブの進行状況を示します。この属性は、カウンターとなることを目的としています。つまり、処理を開始していないジョブのJobMediaSheetsCompleted値は0である必要があります。ジョブの&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;がPROCESSINGまたはPROCESSING_STOPPED の場合、JobMediaSheetsCompleted値は、ジョブが処理されるにつれて増加することを目的としています。これは、印刷ジョブの属性セットが照会されたとき、または印刷ジョブイベントが報告されたときに処理されたジョブの量を示します。ジョブがCOMPLETED、CANCELED、またはABORTED状態になると、JobMediaSheetsCompleted値がジョブの最終値になります。</target>
        </trans-unit>
        <trans-unit id="bc898aeb76a9f867124df93fc92a814fb7980188" translate="yes" xml:space="preserve">
          <source>The Julian Day is a standard way of expressing date and time commonly used in the scientific community. It is expressed as a decimal number of whole days where days start at midday. This class represents variations on Julian Days that count whole days from midnight.</source>
          <target state="translated">ユリウス日は、科学界で一般的に使用されている日付と時間の標準的な表現方法です。これは、日が真昼から始まる全日の十進数で表されます。このクラスは、真夜中からの全日を数えるユリウス日のバリエーションを表しています。</target>
        </trans-unit>
        <trans-unit id="9eef549030343348c0081e0aeeb494d2d5823916" translate="yes" xml:space="preserve">
          <source>The Kannada range with the Kannada digits.</source>
          <target state="translated">神奈田の桁数で神奈田の範囲。</target>
        </trans-unit>
        <trans-unit id="9d5cb955409a47e5080caa7c35c25ddf731fb54b" translate="yes" xml:space="preserve">
          <source>The Kayah Li range with the Kayah Li digits.</source>
          <target state="translated">カヤ・リーの桁があるカヤ・リーのレンジ。</target>
        </trans-unit>
        <trans-unit id="04de0af52612213497a4e8449d41e7beb1c261f5" translate="yes" xml:space="preserve">
          <source>The Kerberos network authentication protocol is defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;. The Java platform contains support for the client side of Kerberos via the &lt;a href=&quot;../../../../org/ietf/jgss/package-summary&quot;&gt;&lt;code&gt;org.ietf.jgss&lt;/code&gt;&lt;/a&gt; package. There might also be a login module that implements &lt;a href=&quot;../../../../../java.base/javax/security/auth/spi/loginmodule&quot;&gt;&lt;code&gt;LoginModule&lt;/code&gt;&lt;/a&gt; to authenticate Kerberos principals.</source>
          <target state="translated">The Kerberos network authentication protocol is defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;. The Java platform contains support for the client side of Kerberos via the &lt;a href=&quot;../../../../org/ietf/jgss/package-summary&quot;&gt; &lt;code&gt;org.ietf.jgss&lt;/code&gt; &lt;/a&gt; package. There might also be a login module that implements &lt;a href=&quot;../../../../../java.base/javax/security/auth/spi/loginmodule&quot;&gt; &lt;code&gt;LoginModule&lt;/code&gt; &lt;/a&gt; to authenticate Kerberos principals.</target>
        </trans-unit>
        <trans-unit id="b31c8a2b1469694c5596d8e7d24f8ca4168d3814" translate="yes" xml:space="preserve">
          <source>The Kerberos network authentication protocol is defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;. The Java platform contains support for the client side of Kerberos via the &lt;a href=&quot;/openjdk~8_web/org/ietf/jgss/package-summary&quot;&gt;&lt;code&gt;org.ietf.jgss&lt;/code&gt;&lt;/a&gt; package. There might also be a login module that implements &lt;a href=&quot;../spi/loginmodule&quot;&gt;&lt;code&gt;LoginModule&lt;/code&gt;&lt;/a&gt; to authenticate Kerberos principals.</source>
          <target state="translated">Kerberosネットワーク認証プロトコルは&lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120で&lt;/a&gt;定義されています。Javaプラットフォームには、&lt;a href=&quot;/openjdk~8_web/org/ietf/jgss/package-summary&quot;&gt; &lt;code&gt;org.ietf.jgss&lt;/code&gt; &lt;/a&gt;パッケージによるKerberosのクライアント側のサポートが含まれています。Kerberosプリンシパルを認証するために&lt;a href=&quot;../spi/loginmodule&quot;&gt; &lt;code&gt;LoginModule&lt;/code&gt; &lt;/a&gt;を実装するログインモジュールが存在する場合もあります。</target>
        </trans-unit>
        <trans-unit id="157c69eafa4fbe15c7e8811316a4ab15df7d02af" translate="yes" xml:space="preserve">
          <source>The Kerberos network authentication protocol is defined in &lt;a href=&quot;https://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;. The Java platform contains support for the client side of Kerberos via the &lt;a href=&quot;../../../../org/ietf/jgss/package-summary&quot;&gt;&lt;code&gt;org.ietf.jgss&lt;/code&gt;&lt;/a&gt; package. There might also be a login module that implements &lt;a href=&quot;../../../../../java.base/javax/security/auth/spi/loginmodule&quot;&gt;&lt;code&gt;LoginModule&lt;/code&gt;&lt;/a&gt; to authenticate Kerberos principals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179c153fa31e392a5dae09bfb3ec12cf7382a77e" translate="yes" xml:space="preserve">
          <source>The Kerberos v5 mechanism (&quot;1.2.840.113554.1.2.2&quot;) will always be returned in this list when the indicated nametype is one of &lt;a href=&quot;gssname#NT_HOSTBASED_SERVICE&quot;&gt;&lt;code&gt;GSSName.NT_HOSTBASED_SERVICE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;gssname#NT_EXPORT_NAME&quot;&gt;&lt;code&gt;GSSName.NT_EXPORT_NAME&lt;/code&gt;&lt;/a&gt;, or &quot;1.2.840.113554.1.2.2.1&quot;.</source>
          <target state="translated">The Kerberos v5 mechanism (&quot;1.2.840.113554.1.2.2&quot;) will always be returned in this list when the indicated nametype is one of &lt;a href=&quot;gssname#NT_HOSTBASED_SERVICE&quot;&gt; &lt;code&gt;GSSName.NT_HOSTBASED_SERVICE&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;gssname#NT_EXPORT_NAME&quot;&gt; &lt;code&gt;GSSName.NT_EXPORT_NAME&lt;/code&gt; &lt;/a&gt;, or &quot;1.2.840.113554.1.2.2.1&quot;.</target>
        </trans-unit>
        <trans-unit id="1544cf9c5107663734ae872cc327b8154b4bc517" translate="yes" xml:space="preserve">
          <source>The Key interface is the top-level interface for all keys.</source>
          <target state="translated">キーインターフェースは、すべてのキーのトップレベルインターフェースです。</target>
        </trans-unit>
        <trans-unit id="0f7ba838a05da49357b31ae6823009d4f10f3dbe" translate="yes" xml:space="preserve">
          <source>The Key interface is the top-level interface for all keys. It defines the functionality shared by all key objects. All keys have three characteristics:</source>
          <target state="translated">キー・インターフェースは、すべてのキーのためのトップレベルのインターフェースです。これは、すべての鍵オブジェクトが共有する機能を定義します。すべての鍵には3つの特徴があります。</target>
        </trans-unit>
        <trans-unit id="cf548aaac46d4e0f0b562c298e02a26e9e223aa6" translate="yes" xml:space="preserve">
          <source>The KeyPairGenerator class is used to generate pairs of public and private keys.</source>
          <target state="translated">KeyPairGenerator クラスは、公開鍵と秘密鍵のペアを生成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="84ce39b134b25304a741de41814f7513944cfe5b" translate="yes" xml:space="preserve">
          <source>The KeyPairGenerator class is used to generate pairs of public and private keys. Key pair generators are constructed using the &lt;code&gt;getInstance&lt;/code&gt; factory methods (static methods that return instances of a given class).</source>
          <target state="translated">KeyPairGeneratorクラスは、公開鍵と秘密鍵のペアを生成するために使用されます。キーペアジェネレータは、 &lt;code&gt;getInstance&lt;/code&gt; ファクトリメソッド（特定のクラスのインスタンスを返す静的メソッド）を使用して構築されます。</target>
        </trans-unit>
        <trans-unit id="15b0ebadd884d0b51462c94b77021fc226c8b293" translate="yes" xml:space="preserve">
          <source>The KeyStore is instantiated from &lt;code&gt;provider&lt;/code&gt; if non-null. Otherwise, all installed providers are searched.</source>
          <target state="translated">KeyStoreは、nullでない場合、 &lt;code&gt;provider&lt;/code&gt; からインスタンス化されます。それ以外の場合は、インストールされているすべてのプロバイダーが検索されます。</target>
        </trans-unit>
        <trans-unit id="0e2ef01fdd78023f4e41a2332f54d31d4e897196" translate="yes" xml:space="preserve">
          <source>The KeyboardFocusManager is both a centralized location for client code to query for the focus owner and initiate focus changes, and an event dispatcher for all FocusEvents, WindowEvents related to focus, and KeyEvents.</source>
          <target state="translated">KeyboardFocusManager は、フォーカスの所有者を検索してフォーカスの変更を開始するためのクライアント コードの一元化された場所であると同時に、すべての FocusEvents、フォーカスに関連する WindowEvents、および KeyEvents のイベント ディスパッチャでもあります。</target>
        </trans-unit>
        <trans-unit id="fe9108e974a840f34cdac2d8957f8fc6f75c25d0" translate="yes" xml:space="preserve">
          <source>The KeyboardFocusManager is responsible for managing the active and focused Windows, and the current focus owner.</source>
          <target state="translated">KeyboardFocusManager は、アクティブでフォーカスされた Windows、および現在のフォーカスの所有者を管理する責任があります。</target>
        </trans-unit>
        <trans-unit id="c9b92722aba2c53f9e3ad23b73c28a03069188d3" translate="yes" xml:space="preserve">
          <source>The KeyboardFocusManager is responsible for managing the active and focused Windows, and the current focus owner. The focus owner is defined as the Component in an application that will typically receive all KeyEvents generated by the user. The focused Window is the Window that is, or contains, the focus owner. Only a Frame or a Dialog can be the active Window. The native windowing system may denote the active Window or its children with special decorations, such as a highlighted title bar. The active Window is always either the focused Window, or the first Frame or Dialog that is an owner of the focused Window.</source>
          <target state="translated">KeyboardFocusManager は、アクティブな Windows とフォーカスされた Windows、および現在のフォーカスの所有者を管理します。フォーカスオーナーは、通常、ユーザーによって生成されたすべての KeyEvents を受け取るアプリケーションのコンポーネントとして定義されます。フォーカスされたウィンドウとは、フォーカスの所有者であるウィンドウ、またはそれを含むウィンドウのことです。フレームまたはダイアログのみがアクティブウィンドウになることができます。ネイティブウィンドウシステムでは、アクティブウィンドウやその子ウィンドウを、ハイライトされたタイトルバーのような特別な装飾で表示することができます。アクティブウィンドウは、常にフォーカスされたウィンドウか、フォーカスされたウィンドウの所有者である最初のフレームまたはダイアログのいずれかです。</target>
        </trans-unit>
        <trans-unit id="dfdf028492eeb6a2c0a7e187bb51caef0fe58094" translate="yes" xml:space="preserve">
          <source>The Khmer range with the Khmer digits.</source>
          <target state="translated">クメール語の桁数でクメール語の範囲。</target>
        </trans-unit>
        <trans-unit id="e90bf29f8e3545c413433081172c9465c0614fe9" translate="yes" xml:space="preserve">
          <source>The LDAP directory server must be configured to permit read access to the userPassword attribute. If the user entered a valid username and password, this &lt;code&gt;LoginModule&lt;/code&gt; associates a &lt;code&gt;UnixPrincipal&lt;/code&gt;, &lt;code&gt;UnixNumericUserPrincipal&lt;/code&gt;, and the relevant UnixNumericGroupPrincipals with the &lt;code&gt;Subject&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0192d9ab92e21e9c2744dd9f7ef43296184075" translate="yes" xml:space="preserve">
          <source>The LDAPv3 protocol uses controls to send and receive additional data to affect the behavior of predefined operations. Controls can be sent along with any LDAP operation to the server. These are referred to as &lt;em&gt;request controls&lt;/em&gt;. For example, a &quot;sort&quot; control can be sent with an LDAP search operation to request that the results be returned in a particular order. Solicited and unsolicited controls can also be returned with responses from the server. Such controls are referred to as &lt;em&gt;response controls&lt;/em&gt;. For example, an LDAP server might define a special control to return change notifications.</source>
          <target state="translated">LDAPv3プロトコルは、コントロールを使用して追加のデータを送受信し、事前定義された操作の動作に影響を与えます。コントロールは、LDAP操作とともにサーバーに送信できます。これらは、&lt;em&gt;リクエストコントロール&lt;/em&gt;と呼ばれ&lt;em&gt;ます&lt;/em&gt;。たとえば、LDAP検索操作で「ソート」コントロールを送信して、特定の順序で結果を返すように要求できます。要請されたコントロールと要請されていないコントロールも、サーバーからの応答で返すことができます。このようなコントロールは、&lt;em&gt;応答コントロール&lt;/em&gt;と呼ばれ&lt;em&gt;ます&lt;/em&gt;。たとえば、LDAPサーバーは、変更通知を返す特別なコントロールを定義する場合があります。</target>
        </trans-unit>
        <trans-unit id="84b009686e42e06098b246c404691be107aa2893" translate="yes" xml:space="preserve">
          <source>The Lao range with the Lao digits.</source>
          <target state="translated">ラオスの桁数でラオスの範囲。</target>
        </trans-unit>
        <trans-unit id="3d7e088fa5dee667531590ff7a47cda4787dd6af" translate="yes" xml:space="preserve">
          <source>The Latin (European) range with the Latin (ASCII) digits.</source>
          <target state="translated">ラテン語(ASCII)の桁数を持つラテン語(ヨーロッパ)の範囲。</target>
        </trans-unit>
        <trans-unit id="e69f4a3d93cbdffcb22365dd2d768eab2d0fbb22" translate="yes" xml:space="preserve">
          <source>The Left Arrow key, a non-ASCII action key.</source>
          <target state="translated">左矢印キー、非ASCIIのアクションキーです。</target>
        </trans-unit>
        <trans-unit id="625f245af32d880495183dfc988c393be7c10c2c" translate="yes" xml:space="preserve">
          <source>The Lepcha range with the Lepcha digits.</source>
          <target state="translated">レプチャの桁数でレプチャ範囲。</target>
        </trans-unit>
        <trans-unit id="e247331a2fdfcd1f002adc01fbf899e2a1591f78" translate="yes" xml:space="preserve">
          <source>The Level class defines a set of standard logging levels that can be used to control logging output.</source>
          <target state="translated">Level クラスは、ロギング出力を制御するために使用できる標準ロギングレベルのセットを定義します。</target>
        </trans-unit>
        <trans-unit id="5e0b0c714c17843fb551c38291dba43f83549e84" translate="yes" xml:space="preserve">
          <source>The Level class defines a set of standard logging levels that can be used to control logging output. The logging Level objects are ordered and are specified by ordered integers. Enabling logging at a given level also enables logging at all higher levels.</source>
          <target state="translated">Level クラスは、ロギング出力を制御するために使用できる標準ロギングレベルのセットを定義します。ロギングLevelオブジェクトは順序付きで、順序付き整数で指定されます。与えられたレベルでロギングを有効にすると、それより高いレベルのすべてのロギングも有効になります。</target>
        </trans-unit>
        <trans-unit id="1eb102e7a522f2dead8bb60ac1334e542914f901" translate="yes" xml:space="preserve">
          <source>The Limbu range with the Limbu digits.</source>
          <target state="translated">リンブの桁数でリンブレンジ。</target>
        </trans-unit>
        <trans-unit id="23341604b8e30c5db6f5082ffe273ce643ebf866" translate="yes" xml:space="preserve">
          <source>The LineEvent.Type inner class identifies what kind of event occurred on a line.</source>
          <target state="translated">LineEvent.Type インナー・クラスは、ライン上でどのようなイベントが発生したかを識別します。</target>
        </trans-unit>
        <trans-unit id="f4515bae178db99e414cd4419e58ab70e3a4ab78" translate="yes" xml:space="preserve">
          <source>The LineEvent.Type inner class identifies what kind of event occurred on a line. Static instances are provided for the common types (OPEN, CLOSE, START, and STOP).</source>
          <target state="translated">LineEvent.Type インナー・クラスは、ライン上でどのようなイベントが発生したかを識別します。一般的なタイプ (OPEN、CLOSE、START、およびSTOP)に対してスタティック・インスタンスが提供されます。</target>
        </trans-unit>
        <trans-unit id="82041c3f3458b7321d9e6904a9a2fbd85ff5e8fb" translate="yes" xml:space="preserve">
          <source>The ListSelectionListener that's added to the JLists selection model at installUI time, and whenever the JList.selectionModel property changes.</source>
          <target state="translated">installUI時にJListsの選択モデルに追加されるListSelectionListenerで、JList.slectionModelプロパティが変更されるたびに追加されます。</target>
        </trans-unit>
        <trans-unit id="9d8a5479edc0054602772a4f3eec0b96299fb21f" translate="yes" xml:space="preserve">
          <source>The ListSelectionListener that's added to the JLists selection model at installUI time, and whenever the JList.selectionModel property changes. When the selection changes we repaint the affected rows.</source>
          <target state="translated">installUI時にJListsの選択モデルに追加されるListSelectionListenerで、JList.slectionModelプロパティが変更されるたびに追加されます。選択範囲が変更されると、影響を受けた行を再描画します。</target>
        </trans-unit>
        <trans-unit id="15a370cb868586ab99d868f607377364eaa66939" translate="yes" xml:space="preserve">
          <source>The Locale constructors have always specified that the language and the country param be two characters in length, although in practice they have accepted any length. The specification has now been relaxed to allow language codes of two to eight characters and country (region) codes of two to three characters, and in particular, three-letter language codes and three-digit region codes as specified in the IANA Language Subtag Registry. For compatibility, the implementation still does not impose a length constraint.</source>
          <target state="translated">Localeのコンストラクタでは、言語と国のパラメータの長さは常に2文字であることを指定してきましたが、実際には任意の長さを受け入れてきました。この仕様は、2文字から8文字の言語コードと2文字から3文字の国(地域)コード、特にIANA言語サブタグレジストリで指定されている3文字の言語コードと3桁の地域コードを許容するように緩和されました。互換性のために、この実装ではまだ長さの制約は課されていない。</target>
        </trans-unit>
        <trans-unit id="cb678f5a8ea6de459807c825837564cfaf1f3ed6" translate="yes" xml:space="preserve">
          <source>The LogManager defines two optional system properties that allow control over the initial configuration, as specified in the &lt;a href=&quot;#readConfiguration()&quot;&gt;&lt;code&gt;readConfiguration()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">The LogManager defines two optional system properties that allow control over the initial configuration, as specified in the &lt;a href=&quot;#readConfiguration()&quot;&gt; &lt;code&gt;readConfiguration()&lt;/code&gt; &lt;/a&gt; method:</target>
        </trans-unit>
        <trans-unit id="3bb20e6e58795891b26d0418b98b5c49029c3c3e" translate="yes" xml:space="preserve">
          <source>The LogManager defines two optional system properties that allow control over the initial configuration:</source>
          <target state="translated">LogManager は、初期設定の制御を可能にする 2 つのオプションのシステムプロパティを定義します。</target>
        </trans-unit>
        <trans-unit id="3cca1e6f62e92b82a24f09973b67d35f6162ed74" translate="yes" xml:space="preserve">
          <source>The LogRecord class is serializable.</source>
          <target state="translated">LogRecord クラスはシリアライズ可能です。</target>
        </trans-unit>
        <trans-unit id="37b5ec8719483e5837405faf74d2042c53b0e061" translate="yes" xml:space="preserve">
          <source>The Logger factory methods call this method to register each newly created Logger.</source>
          <target state="translated">Logger factory メソッドは、このメソッドを呼び出して、新しく作成された各 Logger を登録します。</target>
        </trans-unit>
        <trans-unit id="16fa852d45e166564cfd7fb514ab7d4a6acfffbe" translate="yes" xml:space="preserve">
          <source>The Logging APIs offer both static and dynamic configuration control. Static control enables field service staff to set up a particular configuration and then re-launch the application with the new logging settings. Dynamic control allows for updates to the logging configuration within a currently running program. The APIs also allow for logging to be enabled or disabled for different functional areas of the system. For example, a field service engineer might be interested in tracing all AWT events, but might have no interest in socket events or memory management.</source>
          <target state="translated">ロギング API は、静的および動的な設定制御の両方を提供します。静的制御は、フィールドサービススタッフが特定の設定を設定し、新しいロギング設定でアプリケーションを再起動することを可能にします。動的制御では、現在実行中のプログラム内でロギング設定を更新することができます。また、APIは、システムの異なる機能領域に対してロギングを有効または無効にすることができます。例えば、フィールドサービスエンジニアはすべてのAWTイベントのトレースに興味があるかもしれませんが、ソケットイベントやメモリ管理には興味がないかもしれません。</target>
        </trans-unit>
        <trans-unit id="8d2c9dc56a0259f0e6bad38df059f2ef62f5a015" translate="yes" xml:space="preserve">
          <source>The LoginModule-specific options represent the options configured for this &lt;code&gt;LoginModule&lt;/code&gt; by an administrator or user in the login &lt;code&gt;Configuration&lt;/code&gt;. The options are defined by the &lt;code&gt;LoginModule&lt;/code&gt; itself and control the behavior within it. For example, a &lt;code&gt;LoginModule&lt;/code&gt; may define options to support debugging/testing capabilities. Options are defined using a key-value syntax, such as</source>
          <target state="translated">LoginModule固有のオプションは、ログイン &lt;code&gt;Configuration&lt;/code&gt; で管理者またはユーザーがこの &lt;code&gt;LoginModule&lt;/code&gt; 用に構成したオプションを表します。オプションは &lt;code&gt;LoginModule&lt;/code&gt; 自体によって定義され、LoginModule内の動作を制御します。たとえば、 &lt;code&gt;LoginModule&lt;/code&gt; は、デバッグ/テスト機能をサポートするオプションを定義できます。オプションは、次のようなKey-Value構文を使用して定義されます。</target>
        </trans-unit>
        <trans-unit id="873df94afa4e7ad82e48e9073fb806c35bb167b5" translate="yes" xml:space="preserve">
          <source>The MAC result is stored in &lt;code&gt;output&lt;/code&gt;, starting at &lt;code&gt;outOffset&lt;/code&gt; inclusive.</source>
          <target state="translated">MACの結果は、 &lt;code&gt;outOffset&lt;/code&gt; から始まる &lt;code&gt;output&lt;/code&gt; に格納されます。</target>
        </trans-unit>
        <trans-unit id="df379351016742258da0a9b0e11610edb7e1d510" translate="yes" xml:space="preserve">
          <source>The MBean Server can be queried for MBeans that meet a particular condition, using its &lt;a href=&quot;mbeanserver#queryNames(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt;&lt;code&gt;queryNames&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mbeanserver#queryMBeans(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt;&lt;code&gt;queryMBeans&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;queryexp&quot;&gt;&lt;code&gt;QueryExp&lt;/code&gt;&lt;/a&gt; parameter to the method can be any implementation of the interface &lt;code&gt;QueryExp&lt;/code&gt;, but it is usually best to obtain the &lt;code&gt;QueryExp&lt;/code&gt; value by calling the static methods in this class. This is particularly true when querying a remote MBean Server: a custom implementation of the &lt;code&gt;QueryExp&lt;/code&gt; interface might not be present in the remote MBean Server, but the methods in this class return only standard classes that are part of the JMX implementation.</source>
          <target state="translated">The MBean Server can be queried for MBeans that meet a particular condition, using its &lt;a href=&quot;mbeanserver#queryNames(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt; &lt;code&gt;queryNames&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;mbeanserver#queryMBeans(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt; &lt;code&gt;queryMBeans&lt;/code&gt; &lt;/a&gt; method. The &lt;a href=&quot;queryexp&quot;&gt; &lt;code&gt;QueryExp&lt;/code&gt; &lt;/a&gt; parameter to the method can be any implementation of the interface &lt;code&gt;QueryExp&lt;/code&gt; , but it is usually best to obtain the &lt;code&gt;QueryExp&lt;/code&gt; value by calling the static methods in this class. This is particularly true when querying a remote MBean Server: a custom implementation of the &lt;code&gt;QueryExp&lt;/code&gt; interface might not be present in the remote MBean Server, but the methods in this class return only standard classes that are part of the JMX implementation.</target>
        </trans-unit>
        <trans-unit id="8e20974e279464971ac54f4c492ac718451f3fb7" translate="yes" xml:space="preserve">
          <source>The MBean Server can be queried for MBeans that meet a particular condition, using its &lt;a href=&quot;mbeanserver#queryNames-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt;&lt;code&gt;queryNames&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mbeanserver#queryMBeans-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt;&lt;code&gt;queryMBeans&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;queryexp&quot;&gt;&lt;code&gt;QueryExp&lt;/code&gt;&lt;/a&gt; parameter to the method can be any implementation of the interface &lt;code&gt;QueryExp&lt;/code&gt;, but it is usually best to obtain the &lt;code&gt;QueryExp&lt;/code&gt; value by calling the static methods in this class. This is particularly true when querying a remote MBean Server: a custom implementation of the &lt;code&gt;QueryExp&lt;/code&gt; interface might not be present in the remote MBean Server, but the methods in this class return only standard classes that are part of the JMX implementation.</source>
          <target state="translated">MBeanサーバーは、その&lt;a href=&quot;mbeanserver#queryNames-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt; &lt;code&gt;queryNames&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;mbeanserver#queryMBeans-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt; &lt;code&gt;queryMBeans&lt;/code&gt; &lt;/a&gt;メソッドを使用して、特定の条件を満たすMBeanを照会できます。メソッドの&lt;a href=&quot;queryexp&quot;&gt; &lt;code&gt;QueryExp&lt;/code&gt; &lt;/a&gt;パラメータは、インターフェイス &lt;code&gt;QueryExp&lt;/code&gt; の任意の実装にすることができますが、通常は、このクラスの静的メソッドを呼び出して &lt;code&gt;QueryExp&lt;/code&gt; 値を取得するのが最善です。これは、リモートMBeanサーバーをクエリする場合に特に当てはまります &lt;code&gt;QueryExp&lt;/code&gt; インターフェースのカスタム実装がリモートMBeanサーバーに存在しない場合がありますが、このクラスのメソッドは、JMX実装の一部である標準クラスのみを返します。</target>
        </trans-unit>
        <trans-unit id="9b55c952d8b9667a8cd83b230d433a9d1d3bc37d" translate="yes" xml:space="preserve">
          <source>The MBean Server used is the one returned by &lt;a href=&quot;queryeval#getMBeanServer()&quot;&gt;&lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The MBean Server used is the one returned by &lt;a href=&quot;queryeval#getMBeanServer()&quot;&gt; &lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="72d1d3a5c29db56a086580b10e87cee9417c2769" translate="yes" xml:space="preserve">
          <source>The MBean Server used is the one returned by &lt;a href=&quot;queryeval#getMBeanServer--&quot;&gt;&lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用されるMBeanサーバーは、&lt;a href=&quot;queryeval#getMBeanServer--&quot;&gt; &lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt; &lt;/a&gt;によって返されるサーバーです。</target>
        </trans-unit>
        <trans-unit id="21324a38f03c31ace3a1e422ca3454c83ac8dbb8" translate="yes" xml:space="preserve">
          <source>The MBean is already registered in the repository.</source>
          <target state="translated">MBeanはすでにリポジトリに登録されています。</target>
        </trans-unit>
        <trans-unit id="43753879ff4a9ab9e94f41c105bc04ec605906f3" translate="yes" xml:space="preserve">
          <source>The MBean must have a listener that exactly matches the given &lt;code&gt;listener&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, and &lt;code&gt;handback&lt;/code&gt; parameters. If there is more than one such listener, only one is removed.</source>
          <target state="translated">MBeanには、指定された &lt;code&gt;listener&lt;/code&gt; 、 &lt;code&gt;filter&lt;/code&gt; 、および &lt;code&gt;handback&lt;/code&gt; パラメータと完全に一致するリスナーが必要です。そのようなリスナーが複数ある場合は、1つだけが削除されます。</target>
        </trans-unit>
        <trans-unit id="30152426051a3aa7c2787f9bb448c65fd9d96573" translate="yes" xml:space="preserve">
          <source>The MBean server connection through which the methods of a proxy using this handler are forwarded.</source>
          <target state="translated">このハンドラを使用したプロキシのメソッドが転送される MBean サーバ接続。</target>
        </trans-unit>
        <trans-unit id="5a6b667365181658d557141a79bdcd9ae1d79d48" translate="yes" xml:space="preserve">
          <source>The MBeanServer reference is internally kept. This will allow &lt;code&gt;findMBeanServer&lt;/code&gt; to return a reference to this MBeanServer object.</source>
          <target state="translated">MBeanServer参照は内部的に保持されます。これにより、 &lt;code&gt;findMBeanServer&lt;/code&gt; がこのMBeanServerオブジェクトへの参照を返すことができます。</target>
        </trans-unit>
        <trans-unit id="fce98176f741b29841e04388f314ecc341556fb9" translate="yes" xml:space="preserve">
          <source>The MBeanServerBuilder makes it possible to wrap the MBeanServers returned by the default MBeanServerBuilder implementation, for the purpose of e.g. adding an additional security layer.</source>
          <target state="translated">MBeanServerBuilder を使用すると、デフォルトの MBeanServerBuilder 実装で返された MBeanServers をラップして、セキュリティ層を追加することができます。</target>
        </trans-unit>
        <trans-unit id="3ebb8ef1bdda79f2bf977d8f0f2c843f817752de" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-1&quot; message digest</source>
          <target state="translated">SHA-1」メッセージダイジェストを使用するMGF1ParameterSpec</target>
        </trans-unit>
        <trans-unit id="c43e787474141d0bb72e21314b04491164ecd29c" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-1&quot; message digest.</source>
          <target state="translated">SHA-1 &quot;メッセージダイジェストを使用するMGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="32c91218272c1ce637c8a43d4efa8d7be714817e" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-224&quot; message digest</source>
          <target state="translated">SHA-224」メッセージダイジェストを使用するMGF1ParameterSpec</target>
        </trans-unit>
        <trans-unit id="ded68968556406a67098d9312cb325eb7740b1a7" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-224&quot; message digest.</source>
          <target state="translated">SHA-224 &quot;メッセージダイジェストを使用するMGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="f4145abd624d13b5fd6c271646d555d996874e76" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-256&quot; message digest</source>
          <target state="translated">SHA-256」メッセージダイジェストを使用するMGF1ParameterSpec</target>
        </trans-unit>
        <trans-unit id="30567a972c0ebfa4faa9759c8c4f5615d0736a78" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-256&quot; message digest.</source>
          <target state="translated">SHA-256 &quot;メッセージダイジェストを使用するMGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="ffe8090c162f81eda0ca11ad18b4d00f0460668a" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-384&quot; message digest</source>
          <target state="translated">SHA-384」メッセージダイジェストを使用するMGF1ParameterSpec</target>
        </trans-unit>
        <trans-unit id="8f743fd5434a0de8774dcd2c54b80badfe4a3dec" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses &quot;SHA-384&quot; message digest.</source>
          <target state="translated">SHA-384 &quot;メッセージダイジェストを使用するMGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="9fcd13c9a51cff2dfe34d11d75622669ff7a2f6f" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses SHA-512 message digest</source>
          <target state="translated">SHA-512メッセージダイジェストを使用するMGF1ParameterSpec</target>
        </trans-unit>
        <trans-unit id="773fa0838097295208f32770a4edbdf66bd50a46" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses SHA-512 message digest.</source>
          <target state="translated">SHA-512メッセージダイジェストを使用するMGF1ParameterSpec。</target>
        </trans-unit>
        <trans-unit id="c6fdeb15a6d0d672938ac7162d09074690eabb53" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses SHA-512/224 message digest</source>
          <target state="translated">SHA-512/224メッセージダイジェストを使用するMGF1ParameterSpec</target>
        </trans-unit>
        <trans-unit id="6b740423dca40861f104766ac050de56d78d3f30" translate="yes" xml:space="preserve">
          <source>The MGF1ParameterSpec which uses SHA-512/256 message digest</source>
          <target state="translated">SHA-512/256メッセージダイジェストを使用するMGF1ParameterSpec</target>
        </trans-unit>
        <trans-unit id="516e21a61c986db4b650efb7f3b9edffb19e1c28" translate="yes" xml:space="preserve">
          <source>The MIDI 1.0 Specification defines both 7-bit controllers and 14-bit controllers. Continuous controllers, such as wheels and sliders, typically have 14 bits (two MIDI bytes), while discrete controllers, such as switches, typically have 7 bits (one MIDI byte). Refer to the specification to see the expected resolution for each type of control.</source>
          <target state="translated">MIDI 1.0 仕様では 7 ビットコントローラと 14 ビットコントローラの両方が定義されています。ホイールやスライダーなどの連続的なコントローラは通常 14 ビット(2 つの MIDI バイト)で、スイッチなどの個別のコントローラは通常 7 ビット(1 つの MIDI バイト)です。各タイプのコントロールの期待される解像度については、仕様書を参照してください。</target>
        </trans-unit>
        <trans-unit id="3b90ca10823dacdb7ec1aff6e9c338eb2858be24" translate="yes" xml:space="preserve">
          <source>The MIDI 1.0 specification provides for 16 channels, so this method returns an array of at least 16 elements. However, if this synthesizer doesn't make use of all 16 channels, some of the elements of the array might be &lt;code&gt;null&lt;/code&gt;, so you should check each element before using it.</source>
          <target state="translated">MIDI 1.0仕様は16チャネルを提供するため、このメソッドは少なくとも16要素の配列を返します。ただし、このシンセサイザが16チャネルすべてを使用しない場合、配列の一部の要素が &lt;code&gt;null&lt;/code&gt; になる可能性があるため、使用する前に各要素を確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="049c7ab3e0f2c876b50b46fe3789a8747dae1e9c" translate="yes" xml:space="preserve">
          <source>The MIDI channel on which this voice is playing.</source>
          <target state="translated">この音声が再生されているMIDIチャンネル。</target>
        </trans-unit>
        <trans-unit id="b52e6c1511e484eaf10f9c3556aee2243b42e67c" translate="yes" xml:space="preserve">
          <source>The MIDI channel on which this voice is playing. The value is a zero-based channel number if the voice is active, or unspecified if the voice is inactive.</source>
          <target state="translated">この音色が演奏されている MIDI チャンネル。ボイスがアクティブな場合はゼロベースのチャンネル番号、アクティブでない場合は指定されません。</target>
        </trans-unit>
        <trans-unit id="526debeb157a66f1367b032953ad21ed8a2a5fd6" translate="yes" xml:space="preserve">
          <source>The MIDI message data.</source>
          <target state="translated">MIDIメッセージデータです。</target>
        </trans-unit>
        <trans-unit id="72e471be8e18253cd2fa90755b2430be47a7c9c7" translate="yes" xml:space="preserve">
          <source>The MIDI message data. The first byte is the status byte for the message; subsequent bytes up to the length of the message are data bytes for this message.</source>
          <target state="translated">MIDI メッセージデータ。最初のバイトはメッセージのステータスバイトで、メッセージの長さまでの後続のバイトはこのメッセージのデータバイトです。</target>
        </trans-unit>
        <trans-unit id="317772b1f4d7bef7e847f7a2507ef5cf22a36f76" translate="yes" xml:space="preserve">
          <source>The MIDI note that this voice is playing.</source>
          <target state="translated">この音声が再生されているMIDIノート。</target>
        </trans-unit>
        <trans-unit id="09d0f1e1fda22537e5c3106cad4d736b151fe66f" translate="yes" xml:space="preserve">
          <source>The MIDI note that this voice is playing. The range for an active voice is from 0 to 127 in semitones, with 60 referring to Middle C. The value is unspecified if the voice is inactive.</source>
          <target state="translated">この音色が演奏しているMIDIノート。アクティブな音色の範囲は0から127までの半音で、60はミドルCを基準にしています。</target>
        </trans-unit>
        <trans-unit id="9f275ac1e77302fd1f9c984942071af0000235dd" translate="yes" xml:space="preserve">
          <source>The MIDI specification does not dictate whether notes that are already sounding should switch to the new instrument (timbre) or continue with their original timbre until terminated by a note-off.</source>
          <target state="translated">MIDI仕様では、既に鳴っている音符を新しい楽器(音色)に切り替えるか、ノートオフで終了するまで元の音色を維持するかは規定されていません。</target>
        </trans-unit>
        <trans-unit id="883ec76cbd3a1ad3d350032e79eb664e1f1a784b" translate="yes" xml:space="preserve">
          <source>The MIDI specification stipulates that pitch bend be a 14-bit value, where zero is maximum downward bend, 16383 is maximum upward bend, and 8192 is the center (no pitch bend). The actual amount of pitch change is not specified; it can be changed by a pitch-bend sensitivity setting. However, the General MIDI specification says that the default range should be two semitones up and down from center.</source>
          <target state="translated">MIDI 仕様では、ピッチベンドは 14 ビットの値であることが規定されており、ゼロが最大下向きベンド、16383 が最大上向きベンド、8192 がセンター(ピッチベンドなし)となっています。実際のピッチの変化量は規定されておらず、ピッチベンドの感度設定で変化させることができます。ただし、一般的なMIDIの仕様では、デフォルトの範囲はセンターから2半音上下するようにしてくださいと書かれています。</target>
        </trans-unit>
        <trans-unit id="635898bd1d6ec018c38dd8a4feda9d061e0d6d2b" translate="yes" xml:space="preserve">
          <source>The MIDI specification stipulates that pitch bend be a 14-bit value, where zero is maximum downward bend, 16383 is maximum upward bend, and 8192 is the center (no pitch bend). The actual amount of pitch change is not specified; it can be changed by a pitch-bend sensitivity setting. However, the General MIDI specification says that the default range should be two semitones up and down from center. It is possible that the underlying synthesizer does not support this MIDI message. In order to verify that &lt;code&gt;setPitchBend&lt;/code&gt; was successful, use &lt;code&gt;getPitchBend&lt;/code&gt;.</source>
          <target state="translated">MIDI仕様では、ピッチベンドは14ビット値であることが規定されており、ゼロは最大の下向きのベンド、16383は最大の上向きのベンド、8192が中心（ピッチベンドなし）です。ピッチ変更の実際の量は指定されていません。ピッチベンド感度設定で変更できます。ただし、一般的なMIDI仕様では、デフォルトの範囲は中央から上下に2セミトーンにする必要があると規定されています。基になるシンセサイザがこのMIDIメッセージをサポートしていない可能性があります。 &lt;code&gt;setPitchBend&lt;/code&gt; が成功したことを確認するには、getPitchBendを使用し &lt;code&gt;getPitchBend&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4c4101d3bd5e4e0ccc23d2b59d331c881ddef1d" translate="yes" xml:space="preserve">
          <source>The MIDI standard expresses MIDI data in bytes. However, because Java uses signed bytes, the Java Sound API uses integers instead of bytes when expressing MIDI data. For example, the &lt;a href=&quot;#getStatus()&quot;&gt;&lt;code&gt;getStatus()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;MidiMessage&lt;/code&gt; returns MIDI status bytes as integers. If you are processing MIDI data that originated outside Java Sound and now is encoded as signed bytes, the bytes can be converted to integers using this conversion:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc37db06eee182d506afa49c0c246f6a9c01a35" translate="yes" xml:space="preserve">
          <source>The MIDI standard expresses MIDI data in bytes. However, because Java&amp;trade; uses signed bytes, the Java Sound API uses integers instead of bytes when expressing MIDI data. For example, the &lt;a href=&quot;#getStatus()&quot;&gt;&lt;code&gt;getStatus()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;MidiMessage&lt;/code&gt; returns MIDI status bytes as integers. If you are processing MIDI data that originated outside Java Sound and now is encoded as signed bytes, the bytes can be converted to integers using this conversion:</source>
          <target state="translated">MIDI規格は、MIDIデータをバイト単位で表現します。ただし、Java&amp;trade;は符号付きバイトを使用するため、Java Sound APIは、MIDIデータを表現するときにバイトではなく整数を使用します。たとえば、 &lt;code&gt;MidiMessage&lt;/code&gt; の&lt;a href=&quot;#getStatus()&quot;&gt; &lt;code&gt;getStatus()&lt;/code&gt; &lt;/a&gt;メソッドは、MIDIステータスバイトを整数として返します。Java Soundの外部で発生し、現在は符号付きバイトとしてエンコードされているMIDIデータを処理している場合、バイトは次の変換を使用して整数に変換できます。</target>
        </trans-unit>
        <trans-unit id="c526e09fb95606778bb5e764a54a0e9f208fc206" translate="yes" xml:space="preserve">
          <source>The MIDI standard expresses MIDI data in bytes. However, because Java&lt;sup id=&quot;integersVsBytes&quot;&gt;TM&lt;/sup&gt; uses signed bytes, the Java Sound API uses integers instead of bytes when expressing MIDI data. For example, the &lt;a href=&quot;midimessage#getStatus--&quot;&gt;&lt;code&gt;getStatus()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;MidiMessage&lt;/code&gt; returns MIDI status bytes as integers. If you are processing MIDI data that originated outside Java Sound and now is encoded as signed bytes, the bytes can can be converted to integers using this conversion:</source>
          <target state="translated">MIDI規格は、MIDIデータをバイト単位で表します。ただし、Java &lt;sup id=&quot;integersVsBytes&quot;&gt;TM&lt;/sup&gt;は符号付きバイトを使用するため、Java Sound APIはMIDIデータを表現するときにバイトではなく整数を使用します。たとえば、 &lt;code&gt;MidiMessage&lt;/code&gt; の&lt;a href=&quot;midimessage#getStatus--&quot;&gt; &lt;code&gt;getStatus()&lt;/code&gt; &lt;/a&gt;メソッドは、MIDIステータスバイトを整数として返します。 Java Soundの外部で発生し、現在符号付きバイトとしてエンコードされているMIDIデータを処理している場合、この変換を使用してバイトを整数に変換できます。</target>
        </trans-unit>
        <trans-unit id="0c8a2781b35fa31817c29abe30b50e8043af665c" translate="yes" xml:space="preserve">
          <source>The MIDI tracks in this sequence.</source>
          <target state="translated">このシーケンスのMIDIトラック。</target>
        </trans-unit>
        <trans-unit id="23a350af8445001f598c4651a4f45324e9f33c23" translate="yes" xml:space="preserve">
          <source>The MLet text file's base URL.</source>
          <target state="translated">MLetテキストファイルのベースURLです。</target>
        </trans-unit>
        <trans-unit id="db0ce9ae1e5d2f89a8f312663fdfbed2b32ba495" translate="yes" xml:space="preserve">
          <source>The MXBean concept provides a simple way to code an MBean that only references a predefined set of types, the ones defined by &lt;a href=&quot;openmbean/package-summary&quot;&gt;&lt;code&gt;javax.management.openmbean&lt;/code&gt;&lt;/a&gt;. In this way, you can be sure that your MBean will be usable by any client, including remote clients, without any requirement that the client have access to &lt;em&gt;model-specific classes&lt;/em&gt; representing the types of your MBeans.</source>
          <target state="translated">MXBeanの概念は、&lt;a href=&quot;openmbean/package-summary&quot;&gt; &lt;code&gt;javax.management.openmbean&lt;/code&gt; で&lt;/a&gt;定義されている定義済みのタイプのセットのみを参照するMBeanをコーディングする簡単な方法を提供します。このようにして、クライアントがMBeanのタイプを表す&lt;em&gt;モデル固有のクラスに&lt;/em&gt;アクセスする必要がなくても、リモートクライアントを含むすべてのクライアントがMBeanを確実に使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="e33c92fe4338e85410252cbf5f86c27123acc080" translate="yes" xml:space="preserve">
          <source>The Malayalam range with the Malayalam digits.</source>
          <target state="translated">マラヤーラム語の桁数を使ったマラヤーラム語の範囲です。</target>
        </trans-unit>
        <trans-unit id="d4a3d1afcec2a7b84cb429f3bcbbf430180a0aa8" translate="yes" xml:space="preserve">
          <source>The ManageReferral control's assigned object identifier is 2.16.840.1.113730.3.4.2.</source>
          <target state="translated">ManageReferrerral コントロールに割り当てられたオブジェクト識別子は 2.16.840.1.11730.3.4.2 です。</target>
        </trans-unit>
        <trans-unit id="f0c9875b8d07e007e2745fc0af6fe732b94df483" translate="yes" xml:space="preserve">
          <source>The Manifest class is used to maintain Manifest entry names and their associated Attributes.</source>
          <target state="translated">マニフェスト・クラスは、マニフェスト・エントリ名とそれに関連する属性を維持するために使用されます。</target>
        </trans-unit>
        <trans-unit id="0f91edbc800e6ebe0a97d46777ffeab5dd79019f" translate="yes" xml:space="preserve">
          <source>The Manifest class is used to maintain Manifest entry names and their associated Attributes. There are main Manifest Attributes as well as per-entry Attributes. For information on the Manifest format, please see the  Manifest format specification.</source>
          <target state="translated">Manifestクラスは、マニフェスト・エントリ名とそれに関連する属性を維持するために使用されます。Manifestの主要な属性と、エントリごとの属性があります。マニフェスト・フォーマットに関する情報は、マニフェスト・フォーマット仕様を参照してください。</target>
        </trans-unit>
        <trans-unit id="6b08c1dceec8f387af3ac7117a090db5f90ca9a8" translate="yes" xml:space="preserve">
          <source>The Manifest class is used to maintain Manifest entry names and their associated Attributes. There are main Manifest Attributes as well as per-entry Attributes. For information on the Manifest format, please see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jar/jar.html&quot;&gt; Manifest format specification&lt;/a&gt;.</source>
          <target state="translated">マニフェストクラスは、マニフェストエントリ名とそれに関連する属性を維持するために使用されます。メインのマニフェスト属性とエントリごとの属性があります。マニフェスト形式の詳細については、&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jar/jar.html&quot;&gt;マニフェスト形式の仕様&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="af81b22d465ae1e7d170117e7b040f06e9f7354e" translate="yes" xml:space="preserve">
          <source>The Manifest class is used to maintain Manifest entry names and their associated Attributes. There are main Manifest Attributes as well as per-entry Attributes. For information on the Manifest format, please see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jar/jar.html&quot;&gt; Manifest format specification&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14dcb9ffe833bd8ff0c3971c624e1ee8fa1ea44" translate="yes" xml:space="preserve">
          <source>The MediaSize is in turn used to locate the MediaSizeName object. This method may return null if the closest matching MediaSize has no corresponding Media instance.</source>
          <target state="translated">MediaSize は、MediaSizeName オブジェクトを見つけるために使用されます。最も近い一致する MediaSize に対応する Media インスタンスがない場合、このメソッドは null を返すことがあります。</target>
        </trans-unit>
        <trans-unit id="c7f2589c5eb6fefc0630c3f00ed4bcf6743212bf" translate="yes" xml:space="preserve">
          <source>The MediaType instance for 6 3/4 envelope, 3 5/8 x 6 1/2 in.</source>
          <target state="translated">6 3/4 エンベロープ、3 5/8 x 6 1/2 インチの MediaType インスタンス。</target>
        </trans-unit>
        <trans-unit id="573f4b6872edf71d06ba58486250a54311c264a2" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Engineering A, 8 1/2 x 11 in.</source>
          <target state="translated">エンジニアリング A,8 1/2 x 11 インチの MediaType インスタンス。</target>
        </trans-unit>
        <trans-unit id="64d3072107241435185f88936c6286ff514d147e" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Engineering B, 11 x 17 in.</source>
          <target state="translated">エンジニアリング B,11 x 17 インチの MediaType インスタンス。</target>
        </trans-unit>
        <trans-unit id="c7692968c3215d63e31ac87679acd24d403571f9" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Engineering C, 17 x 22 in.</source>
          <target state="translated">エンジニアリングC,17 x 22 in.</target>
        </trans-unit>
        <trans-unit id="9f478c8d9d5bcb2ea8dcf961f52385b3f2895b9b" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Engineering D, 22 x 34 in.</source>
          <target state="translated">エンジニアリング D,22 x 34 インチの MediaType インスタンス。</target>
        </trans-unit>
        <trans-unit id="dbaba1c80bc3cfe1b7c16c807a907a7e87387b83" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Engineering E, 34 x 44 in.</source>
          <target state="translated">エンジニアリング E,34 x 44 インチの MediaType インスタンス。</target>
        </trans-unit>
        <trans-unit id="0b90d28550428199920f8f10dbe0d35f58b47e46" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Executive, 7 1/4 x 10 1/2 in.</source>
          <target state="translated">Executive,7 1/4 x 10 1/2 インチの MediaType インスタンス。</target>
        </trans-unit>
        <trans-unit id="54db702c63c3eba7e3cf9613a7e24e501b5591f5" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Folio, 8 1/2 x 13 in.</source>
          <target state="translated">Folio,8 1/2 x 13 in.</target>
        </trans-unit>
        <trans-unit id="ca7bc12d3f763cdf64763c795bba0f7408968808" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO Designated Long, 110 x 220 mm.</source>
          <target state="translated">ISO指定ロング、110 x 220 mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="673633bbfb4eae0e9618c4e988561b66316b66a0" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B0, 1000 x 1414 mm.</source>
          <target state="translated">ISO/DIN B0,1000 x 1414 mmのMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="633a4f5076112dbd2c6bb5d62adea677c380d4c2" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B1, 707 x 1000 mm.</source>
          <target state="translated">ISO/DIN B1,707 x 1000 mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="bf0b29aa253400f76f92bbb770579b1dcd7bd212" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B10, 31 x 44 mm.</source>
          <target state="translated">ISO/DIN B10,31 x 44 mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="408b81ca2d63672d842cbe95759d93c0ce23fda0" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B2, 500 x 707 mm.</source>
          <target state="translated">ISO/DIN B2,500 x 707 mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="d35e4f9c90e881101d512c07c9ef78a1b2c0a590" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B3, 353 x 500 mm.</source>
          <target state="translated">ISO/DIN B3,353 x 500 mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="e85b6c3c90193600f59176d247f27a7869e5f80b" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B4, 250 x 353 mm.</source>
          <target state="translated">ISO/DIN B4,250 x 353 mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="9466895dc6ed7b01f8a05d2480595fe918fe866f" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B5, 176 x 250 mm.</source>
          <target state="translated">ISO/DIN B5用のMediaTypeインスタンス、176 x 250 mm。</target>
        </trans-unit>
        <trans-unit id="f5f57afdb5af642624b9ff15644c03935fea3c26" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B6, 125 x 176 mm.</source>
          <target state="translated">ISO/DIN B6、125 x 176 mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="bbc65a80b94626d534fba496c26601f37eb9cc7e" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B7, 88 x 125 mm.</source>
          <target state="translated">ISO/DIN B7,88 x 125 mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="5370845fbcc7ff27e93c3f3b2c5afa54c06aba5d" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B8, 62 x 88 mm.</source>
          <target state="translated">ISO/DIN B8,62 x 88 mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="c7376e552997d46d8fb4da906538a74a1187916b" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN B9, 44 x 62 mm.</source>
          <target state="translated">ISO/DIN B9,44 x 62 mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="b605875476890cef42c14810fd8b9dd8f581a802" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C0, 917 x 1297 mm.</source>
          <target state="translated">ISO/DIN C0,917 x 1297 mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="138165f085ea155edd49258fe3b30b06ae636a75" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C1, 648 x 917 mm.</source>
          <target state="translated">ISO/DIN C1,648 x 917 mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="be46d31b238340f94c16e8449c4cc1ba35914fba" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C10, 28 x 40 mm.</source>
          <target state="translated">ISO/DIN C10,28 x 40 mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="4b4e963d6d8911274eec2d4e53cbadd5d162003e" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C2, 458 x 648 mm.</source>
          <target state="translated">ISO/DIN C2用のMediaTypeインスタンス、458 x 648 mm。</target>
        </trans-unit>
        <trans-unit id="2968745b19f968d7dfda3dd7e5b36fc63c8c63f9" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C3, 324 x 458 mm.</source>
          <target state="translated">ISO/DIN C3,324 x 458 mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="2fd2805e5fa3604a42759df5243a86b5bdc6840a" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C4, 229 x 324 mm.</source>
          <target state="translated">ISO/DIN C4用のMediaTypeインスタンス、229 x 324 mm。</target>
        </trans-unit>
        <trans-unit id="7c6e34d5a1e6aac5f93ac6c39efb2cefc933c905" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C5, 162 x 229 mm.</source>
          <target state="translated">ISO/DIN C5用のMediaTypeインスタンス、162 x 229 mm。</target>
        </trans-unit>
        <trans-unit id="e88dde0a1f5037536d3ca8917b55e40b8bff2eca" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C6, 114 x 162 mm.</source>
          <target state="translated">ISO/DIN C6用のMediaTypeインスタンス、114 x 162 mm。</target>
        </trans-unit>
        <trans-unit id="728de0db508ce4ed22627bdf4dff61dcb6ec0b00" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C7, 81 x 114 mm.</source>
          <target state="translated">ISO/DIN C7,81 x 114 mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="b67749263b75857473962b93d2efb5003c81647c" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C8, 57 x 81 mm.</source>
          <target state="translated">ISO/DIN C8,57 x 81 mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="cc097e0463fec0dad72b2003cd307d811124eca5" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN C9, 40 x 57 mm.</source>
          <target state="translated">ISO/DIN C9用のMediaTypeインスタンス、40 x 57 mm。</target>
        </trans-unit>
        <trans-unit id="e8fafbff47ed712ab286e6dc1fa034d9363ce45c" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS 2A0, 1189 x 1682 mm.</source>
          <target state="translated">ISO/DINおよびJIS 2A0、1189×1682mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="edcb8ad8ea42994b67f5c173c3561cb16040e0aa" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS 4A0, 1682 x 2378 mm.</source>
          <target state="translated">ISO/DINおよびJIS 4A0用のMediaTypeインスタンス、1682×2378mm。</target>
        </trans-unit>
        <trans-unit id="a48de2f0a2ffeecfbbe66c09c3607f92aaa24545" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A0, 841 x 1189 mm.</source>
          <target state="translated">ISO/DIN、JIS A0、841×1189mm用のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="5152c1950aee7fa8cea203995f6c2ba0e1137c65" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A1, 594 x 841 mm.</source>
          <target state="translated">ISO/DINおよびJIS A1用のMediaTypeインスタンス、594×841mm。</target>
        </trans-unit>
        <trans-unit id="d9b5f248232afa5f459ffca326f0e43135da8cce" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A10, 26 x 37 mm.</source>
          <target state="translated">ISO/DINおよびJIS A10用のMediaTypeインスタンス、26×37mm。</target>
        </trans-unit>
        <trans-unit id="07417af7ef502ffcf2b82a7c0bb15b59d75da8ca" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A2, 420 x 594 mm.</source>
          <target state="translated">ISO/DINおよびJIS A2用のMediaTypeインスタンス、420×594mm。</target>
        </trans-unit>
        <trans-unit id="c18ab19c5b73307d4ae2d012a6c63e869ea1be79" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A3, 297 x 420 mm.</source>
          <target state="translated">ISO/DINおよびJIS A3用のMediaTypeインスタンス、297×420mm。</target>
        </trans-unit>
        <trans-unit id="3e57797753cccdaa5bba861bfecab4b85c3078df" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A4, 210 x 297 mm.</source>
          <target state="translated">ISO/DINおよびJIS A4用のMediaTypeインスタンス、210×297mm。</target>
        </trans-unit>
        <trans-unit id="58e7d9a8b01a945f936e646cc8cac08b4951be27" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A5, 148 x 210 mm.</source>
          <target state="translated">ISO/DINおよびJIS A5用のMediaTypeインスタンス、148×210mm。</target>
        </trans-unit>
        <trans-unit id="29fb2ce4c6f868125b147a456624ea74c38273ea" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A6, 105 x 148 mm.</source>
          <target state="translated">ISO/DINおよびJIS A6用のMediaTypeインスタンス、105×148mm。</target>
        </trans-unit>
        <trans-unit id="d3588072c88be42806e1f398f2dc865322bbd86f" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A7, 74 x 105 mm.</source>
          <target state="translated">ISO/DINおよびJIS A7用のMediaTypeインスタンス、74×105mm。</target>
        </trans-unit>
        <trans-unit id="1319cf82239614d64b53239bd9ea6fd2c7c9ae03" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A8, 52 x 74 mm.</source>
          <target state="translated">ISO/DINおよびJIS A8用のMediaTypeインスタンス、52×74mm。</target>
        </trans-unit>
        <trans-unit id="8a8577a2d01de8ea714249530b84b9319027e6ef" translate="yes" xml:space="preserve">
          <source>The MediaType instance for ISO/DIN and JIS A9, 37 x 52 mm.</source>
          <target state="translated">ISO/DINおよびJIS A9用のMediaTypeインスタンス、37×52mm。</target>
        </trans-unit>
        <trans-unit id="6ebdb0af9b5bd1dbcd81aae7f76b05eb82e9f251" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Invitation Envelope, 220 x 220 mm.</source>
          <target state="translated">招待状封筒、220 x 220 mm 用の MediaType インスタンス。</target>
        </trans-unit>
        <trans-unit id="284a9938133c0bc7737e5a5628d9964a4a455ec9" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Invoice, 5 1/2 x 8 1/2 in.</source>
          <target state="translated">Invoice,5 1/2 x 8 1/2 in.</target>
        </trans-unit>
        <trans-unit id="9df3876557a49a66925ac34f30679b8b271b0ffd" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Italy Envelope, 110 x 230 mm.</source>
          <target state="translated">イタリアエンベロープ、110 x 230 mm 用の MediaType インスタンス。</target>
        </trans-unit>
        <trans-unit id="d1f205f909b279d4b54614f525425281ab998a62" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B0, 1030 x 1456 mm.</source>
          <target state="translated">JIS B0、1030×1456mmのMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="7a3507131ac0a58b25713da630370ac083d42bad" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B1, 728 x 1030 mm.</source>
          <target state="translated">JIS B1、728×1030mmのMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="b6fb0e7883f5067ab230e26f1b7333611f313dac" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B10, 32 x 45 mm.</source>
          <target state="translated">JIS B10、32×45mmのMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="28ca85b7db426b9609f7e87f5b658d49d4b8458c" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B2, 515 x 728 mm.</source>
          <target state="translated">JIS B2用のMediaTypeインスタンス、515×728mm。</target>
        </trans-unit>
        <trans-unit id="559f9edb2d44e6af611dda54ecb423c3659926f1" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B3, 364 x 515 mm.</source>
          <target state="translated">JIS B3、364×515mmのMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="9683c97a0ab0d280070a8d40bbc88bb83ddbc7fc" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B4, 257 x 364 mm.</source>
          <target state="translated">JIS B4用のMediaTypeインスタンス、257×364mm。</target>
        </trans-unit>
        <trans-unit id="c748db60b813ead222252bc7ed474c22dc101620" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B5, 182 x 257 mm.</source>
          <target state="translated">JIS B5用のMediaTypeインスタンス、182×257mm。</target>
        </trans-unit>
        <trans-unit id="3f710af7e6fad592cae964d3b21f236da76cbd78" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B6, 128 x 182 mm.</source>
          <target state="translated">JIS B6、128×182mmのMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="118ac4356b9094747ba3b05a39dbc303db47f99b" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B7, 91 x 128 mm.</source>
          <target state="translated">JIS B7、91×128mmのMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="d2f3ccf956d631e9cb14695a4712862293384cd7" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B8, 64 x 91 mm.</source>
          <target state="translated">JIS B8、64×91mmのMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="965b48c83b9684550d85818602c850891b0bfbac" translate="yes" xml:space="preserve">
          <source>The MediaType instance for JIS B9, 45 x 64 mm.</source>
          <target state="translated">JIS B9、45×64mmのMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="08e8d5ad8aedd8df9a2705ecd63e13040f593461" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Ledger, 11 x 17 in.</source>
          <target state="translated">Ledger,11 x 17 in.</target>
        </trans-unit>
        <trans-unit id="cbffd20c909d16fb73a0618879035890db592698" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Monarch Envelope, 3 7/8 x 7 1/2 in.</source>
          <target state="translated">Monarch Envelope,3 7/8 x 7 1/2 in.のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="2809eb9e95cca61581af46e1c5d4b071b752e6e2" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American #10 Business Envelope, 4 1/8 x 9 1/2 in.</source>
          <target state="translated">North American #10 Business Envelope,4 1/8 x 9 1/2 in.のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="6a00b206e640e9009fd313fb09be1fb2b3071af2" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American #11 Business Envelope, 4 1/2 x 10 3/8 in.</source>
          <target state="translated">North American #11 Business Envelope,4 1/2 x 10 3/8 in.のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="58adf13bb88ed68eb98e06f030474a6c380617af" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American #12 Business Envelope, 4 3/4 x 11 in.</source>
          <target state="translated">North American #12 Business Envelope,4 3/4 x 11 in.のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="7e0986a1bed3d7a471357fa11804986a159c01db" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American #14 Business Envelope, 5 x 11 1/2 in.</source>
          <target state="translated">North American #14 Business Envelope,5 x 11 1/2 in.のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="93008a331376be010dd94f80b34dfb88f45f138e" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American #9 Business Envelope, 3 7/8 x 8 7/8 in.</source>
          <target state="translated">North American #9 Business Envelope,3 7/8 x 8 7/8 in.のMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="54bd22dfffb84fe412c08cb7e97e0713b39de2c1" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American 10 x 13 in.</source>
          <target state="translated">北アメリカの10 x 13インチのMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="b3e00aa7daada662140fb382c24f0834b8fb0aaa" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American 10 x 14 in.</source>
          <target state="translated">北アメリカの 10 x 14 インチの MediaType インスタンス。</target>
        </trans-unit>
        <trans-unit id="437bb5aff9176e384a9a374f460e9b82e4e77e33" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American 10 x 15 in.</source>
          <target state="translated">北米 10 x 15 インチの MediaType インスタンス。</target>
        </trans-unit>
        <trans-unit id="746fa05a28ed0de64b6070da461617a50ce099a9" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American 6 x 9 in.</source>
          <target state="translated">北アメリカの 6 x 9 インチの MediaType インスタンス。</target>
        </trans-unit>
        <trans-unit id="3dd618276eaf23db123f5ac0dba2a04b8090db50" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American 7 x 9 in.</source>
          <target state="translated">北アメリカの 7 x 9 インチの MediaType インスタンス。</target>
        </trans-unit>
        <trans-unit id="0ad3eb69fcd194e7aefbe10391d439acb76f4834" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American 9 x 11 in.</source>
          <target state="translated">北アメリカの9×11インチのMediaTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="d38c08e580f4d74f2d8590c57c9bcd7fc9202c26" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American 9 x 12 in.</source>
          <target state="translated">北アメリカの 9 x 12 インチの MediaType インスタンス。</target>
        </trans-unit>
        <trans-unit id="77561bd1ac7d493abd82509f5322a0d89ce61c27" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American Legal, 8 1/2 x 14 in.</source>
          <target state="translated">North American Legal,8 1/2 x 14 in.</target>
        </trans-unit>
        <trans-unit id="b6301557a78b184376740b0bf884635471dd48da" translate="yes" xml:space="preserve">
          <source>The MediaType instance for North American Letter, 8 1/2 x 11 in.</source>
          <target state="translated">North American Letter,8 1/2 x 11 in.</target>
        </trans-unit>
        <trans-unit id="f786c8f1c63c1c613edc22c586577870a4531932" translate="yes" xml:space="preserve">
          <source>The MediaType instance for Quarto, 215 x 275 mm.</source>
          <target state="translated">Quarto,215 x 275 mm の MediaType インスタンス。</target>
        </trans-unit>
        <trans-unit id="998f2712a3a90e84218b3e0b194373c93820adc3" translate="yes" xml:space="preserve">
          <source>The Meetei Mayek range with the Meetei Mayek digits.</source>
          <target state="translated">メーテイ・メイエクの桁数がある範囲。</target>
        </trans-unit>
        <trans-unit id="7a16633fa40606c8afd41af115a269d2362fbb6e" translate="yes" xml:space="preserve">
          <source>The MemoryImageSource is also capable of managing a memory image which varies over time to allow animation or custom rendering. Here is an example showing how to set up the animation source and signal changes in the data (adapted from the MemoryAnimationSourceDemo by Garth Dickie):</source>
          <target state="translated">MemoryImageSourceは、アニメーションやカスタムレンダリングを可能にするために、時間の経過とともに変化するメモリイメージを管理することもできます。ここでは、アニメーションソースを設定し、データの変化をシグナルする方法を示す例を示しています(Garth DickieによるMemoryAnimationSourceDemoを参考にしています)。</target>
        </trans-unit>
        <trans-unit id="2ba25dec67967ea91f752676ffd7c09867b52b7f" translate="yes" xml:space="preserve">
          <source>The MessageProp object is instantiated by the application and is used by the underlying mechanism to return information to the caller such as the QOP indicating the strength of protection that was applied to the message and other supplementary message state information.</source>
          <target state="translated">MessageProp オブジェクトはアプリケーションによってインスタンス化され、メッセージに適用された保護の強さを示す QOP やその他の補足的なメッセージ状態情報などの情報を呼び出す側に返すために基礎となるメカニズムによって使用されます。</target>
        </trans-unit>
        <trans-unit id="237b7bd0839d25260d44d915861351b309bae340" translate="yes" xml:space="preserve">
          <source>The MessageProp object is instantiated by the application and is used by the underlying mechanism to return information to the caller such as the QOP, whether confidentiality was applied to the message, and other supplementary message state information.</source>
          <target state="translated">MessageProp オブジェクトはアプリケーションによってインスタンス化され、QOP、メッセージに機密性が適用されているかどうか、その他の補足的なメッセージ状態情報などの情報を呼び出す側に返すために、基礎となるメカニズムによって使用されます。</target>
        </trans-unit>
        <trans-unit id="f94aa6f7289a229745c48f83698c13d487ddaab9" translate="yes" xml:space="preserve">
          <source>The MessageProp object is instantiated by the application and used to specify a QOP value which selects cryptographic algorithms, and a privacy service to optionally encrypt the message. The underlying mechanism that is used in the call may not be able to provide the privacy service. It sets the actual privacy service that it does provide in this MessageProp object which the caller should then query upon return. If the mechanism is not able to provide the requested QOP, it throws a GSSException with the BAD_QOP code.</source>
          <target state="translated">MessageProp オブジェクトはアプリケーションによってインスタンス化され、暗号アルゴリズムを選択する QOP 値と、オプションでメッセージを暗号化するためのプライバシーサービスを指定するために使用されます。呼び出しで使用される基礎となるメカニズムは、プライバシーサービスを提供できない場合があります。この MessageProp オブジェクトには、実際に提供されるプライバシーサービスが設定されていて、 呼び出し元が戻ってきたときに問い合わせを行う必要があります。メカニズムが要求された QOP を提供できない場合は、GSSException をスローして BAD_QOP コードを返します。</target>
        </trans-unit>
        <trans-unit id="61516ce935dd7b488fdbc612f5b14f5e3dcf1ad2" translate="yes" xml:space="preserve">
          <source>The Meta key extended modifier constant.</source>
          <target state="translated">メタキー拡張修飾子定数。</target>
        </trans-unit>
        <trans-unit id="507d8e20b6162f00db7d5c2171a5204a0d6e3976" translate="yes" xml:space="preserve">
          <source>The Meta key modifier constant.</source>
          <target state="translated">メタキー修飾子定数。</target>
        </trans-unit>
        <trans-unit id="b5d82a163a9f53ffdc5df9d6562d4ccaf06fdd68" translate="yes" xml:space="preserve">
          <source>The Metal implementation of ProgressBarUI.</source>
          <target state="translated">ProgressBarUIのMetal実装です。</target>
        </trans-unit>
        <trans-unit id="ff60eb164b3eb146d9fb4d86b4417a36702eeb86" translate="yes" xml:space="preserve">
          <source>The Metal subclass of BasicTabbedPaneUI.</source>
          <target state="translated">BasicTabbedPaneUIのMetalサブクラス。</target>
        </trans-unit>
        <trans-unit id="875260bee7cb4b86188f6d5c14bdd4b99434b19c" translate="yes" xml:space="preserve">
          <source>The Minguo calendar system has two eras, 'ROC' and 'BEFORE_ROC', defined by &lt;a href=&quot;minguoera&quot;&gt;&lt;code&gt;MinguoEra&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Minguoカレンダーシステムには、&lt;a href=&quot;minguoera&quot;&gt; &lt;code&gt;MinguoEra&lt;/code&gt; &lt;/a&gt;によって定義された「ROC」と「BEFORE_ROC」の2つの時代があります。</target>
        </trans-unit>
        <trans-unit id="8488e49133ae34f00360eaccd8da765934bd62e6" translate="yes" xml:space="preserve">
          <source>The Minguo calendar system has two eras. The current era, for years from 1 onwards, is known as the 'Republic of China' era. All previous years, zero or earlier in the proleptic count or one and greater in the year-of-era count, are part of the 'Before Republic of China' era.</source>
          <target state="translated">民国暦には2つの時代があります。1年目以降の年を「中華民国時代」といいます。それ以前の年は「中華民国以前」と呼ばれていますが、それ以前の年は「中華民国以前」と呼ばれています。</target>
        </trans-unit>
        <trans-unit id="82fefb5d3040f57efd3b63bb98ca09fc3ccfc0a0" translate="yes" xml:space="preserve">
          <source>The Minguo calendar system.</source>
          <target state="translated">みんぐうカレンダーシステム。</target>
        </trans-unit>
        <trans-unit id="53001a7acd9647bac32dcf33bf0c1c4be2ae82ab" translate="yes" xml:space="preserve">
          <source>The Minimum size for this component is 10.</source>
          <target state="translated">このコンポーネントの最小サイズは10です。</target>
        </trans-unit>
        <trans-unit id="893ac55162eba5c07c0982b5961ca183969c45a8" translate="yes" xml:space="preserve">
          <source>The Minimum size for this component is 10. The rationale here is that there should be at least one pixel per 10 percent.</source>
          <target state="translated">このコンポーネントの最小サイズは10です。ここでの根拠は、10%につき、少なくとも1つのピクセルがあるべきであるということです。</target>
        </trans-unit>
        <trans-unit id="a545218db7a03aed04c1ac511afdb4cfed76973c" translate="yes" xml:space="preserve">
          <source>The ModelMBeanAttributeInfo isReadable method returns 'false'.</source>
          <target state="translated">ModelMBeanAttributeInfo isReadable メソッドは 'false' を返します。</target>
        </trans-unit>
        <trans-unit id="622c5c9f064611bbc382eb21caab00da9baf69e6" translate="yes" xml:space="preserve">
          <source>The ModelMBeanAttributeInfo object describes an attribute of the ModelMBean.</source>
          <target state="translated">ModelMBeanAttributeInfoオブジェクトは、ModelMBeanの属性を記述します。</target>
        </trans-unit>
        <trans-unit id="7515b956ff4baf3913874b737697b14e24efd566" translate="yes" xml:space="preserve">
          <source>The ModelMBeanAttributeInfo object describes an attribute of the ModelMBean. It is a subclass of MBeanAttributeInfo with the addition of an associated Descriptor and an implementation of the DescriptorAccess interface.</source>
          <target state="translated">ModelMBeanAttributeInfo オブジェクトは、ModelMBean の属性を記述します。これはMBeanAttributeInfoのサブクラスで、関連するDescriptorとDescriptorAccessインタフェースの実装が追加されています。</target>
        </trans-unit>
        <trans-unit id="0c7970e27c195e599aad6a1440a8c2fd34d10c3b" translate="yes" xml:space="preserve">
          <source>The ModelMBeanAttributeInfo's isWritable method returns 'false'.</source>
          <target state="translated">ModelMBeanAttributeInfo の isWritable メソッドは 'false' を返します。</target>
        </trans-unit>
        <trans-unit id="ee6068579dec79a74358815593f8fb0ae992ddc8" translate="yes" xml:space="preserve">
          <source>The ModelMBeanConstructorInfo object describes a constructor of the ModelMBean.</source>
          <target state="translated">ModelMBeanConstructorInfoオブジェクトは、ModelMBeanのコンストラクタを記述します。</target>
        </trans-unit>
        <trans-unit id="d6d0e1ffbdbc4b382742186b6969198f0e473566" translate="yes" xml:space="preserve">
          <source>The ModelMBeanConstructorInfo object describes a constructor of the ModelMBean. It is a subclass of MBeanConstructorInfo with the addition of an associated Descriptor and an implementation of the DescriptorAccess interface.</source>
          <target state="translated">ModelMBeanConstructorInfo オブジェクトは、ModelMBean のコンストラクタを記述します。これはMBeanConstructorInfoのサブクラスで、関連するDescriptorとDescriptorAccessインタフェースの実装が追加されています。</target>
        </trans-unit>
        <trans-unit id="9ea1fe7432118222c8edb7be56bce005b9d32202" translate="yes" xml:space="preserve">
          <source>The ModelMBeanInfo of the Model MBean is stored in a file.</source>
          <target state="translated">モデルMBeanのModelMBeanInfoは、ファイルに格納されています。</target>
        </trans-unit>
        <trans-unit id="be717043f5a4f39bd2bd5c39bd928fa423eadd62" translate="yes" xml:space="preserve">
          <source>The ModelMBeanNotificationInfo object describes a notification emitted by a ModelMBean.</source>
          <target state="translated">ModelMBeanNotificationInfoオブジェクトは、ModelMBeanによって発行される通知を記述します。</target>
        </trans-unit>
        <trans-unit id="0e87a04c7fd637b21db2de3d9c9f1aa8fb0a7e77" translate="yes" xml:space="preserve">
          <source>The ModelMBeanNotificationInfo object describes a notification emitted by a ModelMBean. It is a subclass of MBeanNotificationInfo with the addition of an associated Descriptor and an implementation of the Descriptor interface.</source>
          <target state="translated">ModelMBeanNotificationInfo オブジェクトは、ModelMBean によって発行される通知を記述します。これはMBeanNotificationInfoのサブクラスで、関連するDescriptorとDescriptorインタフェースの実装が追加されています。</target>
        </trans-unit>
        <trans-unit id="fe7d736d21ad24599ca368ba9eda956e4fa29c39" translate="yes" xml:space="preserve">
          <source>The ModelMBeanOperationInfo object describes a management operation of the ModelMBean.</source>
          <target state="translated">ModelMBeanOperationInfo オブジェクトは、ModelMBean の管理操作を記述します。</target>
        </trans-unit>
        <trans-unit id="f0a2617a3fc98a6c5d488b0a6049a4f3b639a203" translate="yes" xml:space="preserve">
          <source>The ModelMBeanOperationInfo object describes a management operation of the ModelMBean. It is a subclass of MBeanOperationInfo with the addition of an associated Descriptor and an implementation of the DescriptorAccess interface.</source>
          <target state="translated">ModelMBeanOperationInfo オブジェクトは、ModelMBean の管理操作を記述します。これはMBeanOperationInfoのサブクラスで、関連するDescriptorとDescriptorAccessインタフェースの実装が追加されています。</target>
        </trans-unit>
        <trans-unit id="513ceb059a7b6fcddfe05011f87eba04b0d4e534" translate="yes" xml:space="preserve">
          <source>The Modifier class provides &lt;code&gt;static&lt;/code&gt; methods and constants to decode class and member access modifiers.</source>
          <target state="translated">Modifierクラスは、クラスとメンバーのアクセス修飾子をデコードするための &lt;code&gt;static&lt;/code&gt; メソッドと定数を提供します。</target>
        </trans-unit>
        <trans-unit id="01b236d448fafe1eecbecf699e0dbd1752899ea4" translate="yes" xml:space="preserve">
          <source>The Modifier class provides &lt;code&gt;static&lt;/code&gt; methods and constants to decode class and member access modifiers. The sets of modifiers are represented as integers with distinct bit positions representing different modifiers. The values for the constants representing the modifiers are taken from the tables in sections 4.1, 4.4, 4.5, and 4.7 of</source>
          <target state="translated">Modifierクラスは、クラスとメンバーのアクセス修飾子をデコードするための &lt;code&gt;static&lt;/code&gt; メソッドと定数を提供します。修飾子のセットは、異なる修飾子を表す個別のビット位置を持つ整数として表されます。修飾子を表す定数の値は、セクション4.1、4.4、4.5、および4.7の表から取得されます。</target>
        </trans-unit>
        <trans-unit id="147218b3793553c6b152bc61f1b6863a14d4552d" translate="yes" xml:space="preserve">
          <source>The Mongolian range with the Mongolian digits.</source>
          <target state="translated">モンゴル語の桁数でモンゴル語の範囲。</target>
        </trans-unit>
        <trans-unit id="d4ae824181721cb564241d8f0b6762682d46721e" translate="yes" xml:space="preserve">
          <source>The Mouse Button1 extended modifier constant.</source>
          <target state="translated">Mouse Button1 拡張修飾子定数です。</target>
        </trans-unit>
        <trans-unit id="36f1dd4b84698f2f168f968f1caef9d5816c2cad" translate="yes" xml:space="preserve">
          <source>The Mouse Button1 modifier constant.</source>
          <target state="translated">Mouse Button1修飾子の定数です。</target>
        </trans-unit>
        <trans-unit id="7479352e34f2d634b6076357847f56a729ff8cbc" translate="yes" xml:space="preserve">
          <source>The Mouse Button2 extended modifier constant.</source>
          <target state="translated">Mouse Button2の拡張モディファイア定数です。</target>
        </trans-unit>
        <trans-unit id="cd5f53c16d765610f8cd6bfeea0f5863ac7f2aa9" translate="yes" xml:space="preserve">
          <source>The Mouse Button2 modifier constant.</source>
          <target state="translated">Mouse Button2モディファイア定数。</target>
        </trans-unit>
        <trans-unit id="83642f43ba8fddd538948fe313e6eeaae2573de8" translate="yes" xml:space="preserve">
          <source>The Mouse Button3 extended modifier constant.</source>
          <target state="translated">Mouse Button3 拡張修飾子定数。</target>
        </trans-unit>
        <trans-unit id="a20281ec405691a7568eeb99c14a936676c4035e" translate="yes" xml:space="preserve">
          <source>The Mouse Button3 modifier constant.</source>
          <target state="translated">Mouse Button3モディファイアの定数です。</target>
        </trans-unit>
        <trans-unit id="05f5a5006691f90b4276e21b323e87245864d43a" translate="yes" xml:space="preserve">
          <source>The Myanmar Extended-B range with the Myanmar Tai Laing digits.</source>
          <target state="translated">ミャンマー・タイライン桁のミャンマー・エクステンデッドBレンジ。</target>
        </trans-unit>
        <trans-unit id="5d426691e21fd73966b8897676ebfc3571346951" translate="yes" xml:space="preserve">
          <source>The Myanmar range with the Myanmar Shan digits.</source>
          <target state="translated">ミャンマーシャン数字のミャンマーレンジ。</target>
        </trans-unit>
        <trans-unit id="ec1b0128ec2d3f55537b22b5fc6f1544811b51e3" translate="yes" xml:space="preserve">
          <source>The Myanmar range with the Myanmar digits.</source>
          <target state="translated">ミャンマーの桁数でミャンマーレンジ。</target>
        </trans-unit>
        <trans-unit id="38fb7495dfe24e23d739f8db0ae47f092cec8470" translate="yes" xml:space="preserve">
          <source>The N'Ko range with the N'Ko digits.</source>
          <target state="translated">N'Koの桁数でN'Koの範囲。</target>
        </trans-unit>
        <trans-unit id="2333e86e53a0d2dc1db2ea3db8dcf5c9ff0df51f" translate="yes" xml:space="preserve">
          <source>The NUMERIC_SHAPING attribute in the text, if present, converts European digits to other decimal digits before running the bidi algorithm. This attribute, if present, must be applied to all the text in the paragraph.</source>
          <target state="translated">テキスト内の NUMERIC_SHAPING 属性が存在する場合は、bidi アルゴリズムを実行する前に欧文桁を他の 10 進数に変換します。この属性が存在する場合は、段落内のすべてのテキストに適用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="1b0c4095bf6e6786886376a2ab5cf659ab61071c" translate="yes" xml:space="preserve">
          <source>The Namespace URI is not validated as a &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;URI reference&lt;/a&gt;. The local part and prefix are not validated as a &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt; as specified in &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="translated">名前空間URIは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;URI参照&lt;/a&gt;として検証されません。ローカル部分とプレフィックスは&lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/&quot;&gt;、XMLの名前空間で&lt;/a&gt;指定されている&lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt;として検証されません。</target>
        </trans-unit>
        <trans-unit id="9860fd3cf2e82656195040828fb908cd32572177" translate="yes" xml:space="preserve">
          <source>The Namespace URI is not validated as a &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;URI reference&lt;/a&gt;. The local part is not validated as a &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt; as specified in &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="translated">名前空間URIは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;URI参照&lt;/a&gt;として検証されません。ローカル部分は&lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/&quot;&gt;、XMLの名前空間で&lt;/a&gt;指定されている&lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt;として検証されません。</target>
        </trans-unit>
        <trans-unit id="e9851aa4437262220bf8dbd048bf6ed520942805" translate="yes" xml:space="preserve">
          <source>The Namespace URI is not validated as a &lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;URI reference&lt;/a&gt;. The local part and prefix are not validated as a &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt; as specified in &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea1b910195c3b31f032d85ab5bd0d269e37b618" translate="yes" xml:space="preserve">
          <source>The Namespace URI is not validated as a &lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;URI reference&lt;/a&gt;. The local part is not validated as a &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt; as specified in &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0fc16e86f02bd75076a767ae77a361cf9c75705" translate="yes" xml:space="preserve">
          <source>The Namespace URI, or an empty string if none is in use.</source>
          <target state="translated">名前空間のURI、または使用されていない場合は空の文字列。</target>
        </trans-unit>
        <trans-unit id="8b5974aa1b16d92497e0200180a3ad8896e31774" translate="yes" xml:space="preserve">
          <source>The Namespace URI, or the empty string if none is available, or null if the index is out of range.</source>
          <target state="translated">名前空間のURI、または空の文字列がない場合は空文字列、インデックスが範囲外の場合はnull。</target>
        </trans-unit>
        <trans-unit id="cf7642f87956e8bd9a081d6f1bbf36661694d8ce" translate="yes" xml:space="preserve">
          <source>The Namespace URI, the empty string if none is available, or null if the index is out of range.</source>
          <target state="translated">名前空間のURI、利用可能なものがない場合は空の文字列、インデックスが範囲外の場合はnull。</target>
        </trans-unit>
        <trans-unit id="349839596e03d0ac0126c309092e36e03e011173" translate="yes" xml:space="preserve">
          <source>The Namespace support object always starts with a base context already in force: in this context, only the &quot;xml&quot; prefix is declared.</source>
          <target state="translated">名前空間サポートオブジェクトは常に、既に有効なベースコンテキストから開始します。</target>
        </trans-unit>
        <trans-unit id="463ad161e211102811e3b4f729e92c59017920f0" translate="yes" xml:space="preserve">
          <source>The NamingEnumeration that results from search() using OBJECT_SCOPE will contain one or zero element. The enumeration contains one element if the named object satisfies the search filter specified in search(). The element will have as its name the empty string because the names of elements in the NamingEnumeration are relative to the target context--in this case, the target context is the named object. It contains zero element if the named object does not satisfy the search filter specified in search().</source>
          <target state="translated">OBJECT_SCOPEを用いたsearch()の結果として得られるNamingEnumerationは、1つまたは0つの要素を含む。命名されたオブジェクトがsearch()で指定された検索フィルタを満たすならば、列挙は一つの要素を含みます。なぜなら、NamingEnumerationの中の要素の名前はターゲット・コンテキストからの相対的なものだからです--この場合、ターゲット・コンテキストは名前付きオブジェクトです。名前付きオブジェクトが search()で指定した検索フィルタを満たさない場合は、要素はゼロとなります。</target>
        </trans-unit>
        <trans-unit id="f597fd36413579878114afaa6d6023419e477bcb" translate="yes" xml:space="preserve">
          <source>The NamingEnumeration that results from search() using ONELEVEL_SCOPE contains elements with objects in the named context that satisfy the search filter specified in search(). The names of elements in the NamingEnumeration are atomic names relative to the named context.</source>
          <target state="translated">ONELEVEL_SCOPE を使用した search()の結果として得られる NamingEnumeration には、 search()で指定された検索フィルタを満たす名前付きコンテキスト内のオブジェクトを持つ要素が含まれています。NamingEnumeration 内の要素の名前は、名前付きコンテキストからの相対的な原子名です。</target>
        </trans-unit>
        <trans-unit id="da9e1b040a45d5ff3225e516ec2f10b9b87c4fde" translate="yes" xml:space="preserve">
          <source>The NamingEnumeration that results from search() using SUBTREE_SCOPE contains elements of objects from the subtree (including the named context) that satisfy the search filter specified in search(). The names of elements in the NamingEnumeration are either relative to the named context or is a URL string. If the named context satisfies the search filter, it is included in the enumeration with the empty string as its name.</source>
          <target state="translated">SUBTREE_SCOPE を使用した search()の結果として得られる NamingEnumeration には、search()で指定された検索フィルタを満たすサブツリー (名前付きコンテキストを含む)のオブジェクトの要素が含まれます。NamingEnumeration に含まれる要素の名前は、指定されたコンテキストからの相対的なものか、URL 文字列です。名前付きコンテキストが検索フィルタを満たす場合は、空の文字列を名前として列挙に含まれます。</target>
        </trans-unit>
        <trans-unit id="0717837b006cdb37b72a3c747375798b59b55ee7" translate="yes" xml:space="preserve">
          <source>The New Tai Lue range with the New Tai Lue digits.</source>
          <target state="translated">ニュータイルーの桁数を持つニュータイルーのレンジ。</target>
        </trans-unit>
        <trans-unit id="6ef92ae8e6bbc492d70f78dfd743db2d2318625d" translate="yes" xml:space="preserve">
          <source>The NimbusLookAndFeel class.</source>
          <target state="translated">NimbusLookAndFeelクラス。</target>
        </trans-unit>
        <trans-unit id="930af5019cfcdd67f8baecc2face9a22fc4ffedd" translate="yes" xml:space="preserve">
          <source>The NimbusLookAndFeel uses a standard naming scheme for entries in the UIDefaults table. The key for each property, state, painter, and other default registered in UIDefaults for a specific Region will begin with the specified &lt;code&gt;prefix&lt;/code&gt;</source>
          <target state="translated">NimbusLookAndFeelは、UIDefaultsテーブルのエントリに標準の命名スキームを使用します。特定のリージョンのUIDefaultsに登録されている各プロパティ、状態、ペインター、およびその他のデフォルトのキーは、指定された &lt;code&gt;prefix&lt;/code&gt; 始まります</target>
        </trans-unit>
        <trans-unit id="030dd257d65fcf8444f5ed24a27c3cbccb19f920" translate="yes" xml:space="preserve">
          <source>The NimbusStyle is reloaded whenever a property change event is fired for a component for &quot;Nimbus.Overrides&quot; or &quot;Nimbus.Overrides.InheritDefaults&quot;. So for example, setting a new UIDefaults on a component would cause the style to be reloaded.</source>
          <target state="translated">NimbusStyleは、&quot;Nimbus.Overrides &quot;または &quot;Nimbus.Overrides.InheritDefaults &quot;のコンポーネントのプロパティ変更イベントが発生するたびにリロードされます。そのため、例えば、コンポーネントに新しいUIDefaultsを設定すると、スタイルがリロードされます。</target>
        </trans-unit>
        <trans-unit id="b7a36233af8a787ae0e73f20504bb4105ca1942f" translate="yes" xml:space="preserve">
          <source>The Node at the specified position.</source>
          <target state="translated">指定した位置のノード。</target>
        </trans-unit>
        <trans-unit id="339f160048f54fde5fb16ed0dd770edbfb611d30" translate="yes" xml:space="preserve">
          <source>The Notification class represents a notification emitted by an MBean.</source>
          <target state="translated">Notification クラスは、MBean が発行する通知を表します。</target>
        </trans-unit>
        <trans-unit id="cf39ffb21a4256234c05b38d7bda0371c83db12a" translate="yes" xml:space="preserve">
          <source>The Notification class represents a notification emitted by an MBean. It contains a reference to the source MBean: if the notification has been forwarded through the MBean server, and the original source of the notification was a reference to the emitting MBean object, then the MBean server replaces it by the MBean's ObjectName. If the listener has registered directly with the MBean, this is either the object name or a direct reference to the MBean.</source>
          <target state="translated">Notification クラスは、MBean によって発行される通知を表します。通知が MBean サーバを介して転送された場合、通知の元のソースが発行された MBean オブジェクトへの参照であった場合、MBean サーバはそれを MBean の ObjectName で置き換えます。リスナーが MBean に直接登録している場合、これはオブジェクト名または MBean への直接の参照となります。</target>
        </trans-unit>
        <trans-unit id="21674881f205ff2b1ebde10ad56146b65e883a73" translate="yes" xml:space="preserve">
          <source>The NullCipher class is a class that provides an &quot;identity cipher&quot; -- one that does not transform the plain text.</source>
          <target state="translated">NullCipherクラスは、平文を変換しない &quot;identity cipher &quot;を提供するクラスです。</target>
        </trans-unit>
        <trans-unit id="4eba459ac1063b013ecb05450cfc942330983956" translate="yes" xml:space="preserve">
          <source>The NullCipher class is a class that provides an &quot;identity cipher&quot; -- one that does not transform the plain text. As a consequence, the ciphertext is identical to the plaintext. All initialization methods do nothing, while the blocksize is set to 1 byte.</source>
          <target state="translated">NullCipher クラスは、平文を変換しない「同一性暗号」を提供するクラスです。結果として、暗号文は平文と同じになります。すべての初期化メソッドは何もせず、ブロックサイズは 1 バイトに設定されます。</target>
        </trans-unit>
        <trans-unit id="9bc696b5517a42b3b02a6bb92ed85290770009f8" translate="yes" xml:space="preserve">
          <source>The Num Lock key, a non-ASCII action key.</source>
          <target state="translated">Num Lockキー、非ASCIIアクションキーです。</target>
        </trans-unit>
        <trans-unit id="af7f35dd7e76fe866932423b2aed6d1fb8aee4d0" translate="yes" xml:space="preserve">
          <source>The OAEP parameter set with all default values.</source>
          <target state="translated">すべてのデフォルト値が設定されたOAEPパラメータセット。</target>
        </trans-unit>
        <trans-unit id="d3c91484eda423d34310b6f683e8f9c4d38353ad" translate="yes" xml:space="preserve">
          <source>The OCSP responder returns one of the following errors specified in section 2.3 of RFC 2560: internalError or tryLater.</source>
          <target state="translated">OCSP レスポンダは、RFC 2560 のセクション 2.3 で指定された以下のエラー(internalError または tryLater)のいずれかを返します。</target>
        </trans-unit>
        <trans-unit id="590e9f81926a84b9e3f08b8204debee01bf90568" translate="yes" xml:space="preserve">
          <source>The Object to which resolution was successful. Cannot be null.</source>
          <target state="translated">解決に成功したオブジェクト。ヌルにすることはできません。</target>
        </trans-unit>
        <trans-unit id="7b04c18b328378819a5abfef3f9602c4688e2f86" translate="yes" xml:space="preserve">
          <source>The ObjectFactoryBuilder determines the policy used when trying to load object factories.</source>
          <target state="translated">ObjectFactoryBuilderは、オブジェクトファクトリをロードしようとするときに使用するポリシーを決定します。</target>
        </trans-unit>
        <trans-unit id="2d9af7dd4afe4b3827fea167ae916792006d5495" translate="yes" xml:space="preserve">
          <source>The ObjectFactoryBuilder determines the policy used when trying to load object factories. See getObjectInstance() and class ObjectFactory for a description of the default policy. setObjectFactoryBuilder() overrides this default policy by installing an ObjectFactoryBuilder. Subsequent object factories will be loaded and created using the installed builder.</source>
          <target state="translated">ObjectFactoryBuilderは、オブジェクトファクトリをロードする際に使用するポリシーを決定します。デフォルトのポリシーについては getObjectInstance()と ObjectFactory クラスを参照してください。それ以降のオブジェクトファクトリは、インストールされたビルダーを使用してロードされ、作成されます。</target>
        </trans-unit>
        <trans-unit id="5419cd5a84f61ee5075bb1b79dcc22de8c464f19" translate="yes" xml:space="preserve">
          <source>The ObjectOutputStream.writeObject method takes a parameter of type Object (as opposed to type Serializable) to allow for cases where non-serializable objects are replaced by serializable ones.</source>
          <target state="translated">ObjectOutputStream.writeObject メソッドは、シリアライズ可能でないオブジェクトがシリアライズ可能なものに置き換えられる場合に対応するために、(シリアライズ可能な型ではなく)Object 型のパラメータを取ります。</target>
        </trans-unit>
        <trans-unit id="580f1b6bc8f9c82e08b5a2581e4f010efcf39dbc" translate="yes" xml:space="preserve">
          <source>The ObjectStreamClass of an enum constant does not represent an enum type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e3e58b05fa221f0f71b1840e5fa4b72d867a75" translate="yes" xml:space="preserve">
          <source>The ObjectStreamField object of the named field or null if there is no such named field.</source>
          <target state="translated">指定されたフィールドのObjectStreamFieldオブジェクト、またはそのような指定されたフィールドがない場合はNULL。</target>
        </trans-unit>
        <trans-unit id="2ac840327c868e94a9ca4f260da23dea54452a47" translate="yes" xml:space="preserve">
          <source>The Ol Chiki range with the Ol Chiki digits.</source>
          <target state="translated">オルチキの桁数でオルチキのレンジ。</target>
        </trans-unit>
        <trans-unit id="686dc1c6a4bf6a908c5989eadf0b4e575c563e0a" translate="yes" xml:space="preserve">
          <source>The Open Type of this element. In the case of &lt;code&gt;
 MBeanAttributeInfo&lt;/code&gt; and &lt;code&gt;MBeanParameterInfo&lt;/code&gt;, this is the Open Type of the attribute or parameter. In the case of &lt;code&gt;
 MBeanOperationInfo&lt;/code&gt;, it is the Open Type of the return value. This field is set in the Descriptor for all instances of &lt;a href=&quot;openmbean/openmbeanattributeinfosupport&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbean/openmbeanoperationinfosupport&quot;&gt;&lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;openmbean/openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;. It is also set for attributes, operations, and parameters of MXBeans.</source>
          <target state="translated">この要素のオープンタイプ。 &lt;code&gt; MBeanAttributeInfo&lt;/code&gt; および &lt;code&gt;MBeanParameterInfo&lt;/code&gt; の場合、これは属性またはパラメータのオープンタイプです。 &lt;code&gt; MBeanOperationInfo&lt;/code&gt; の場合、戻り値のOpenTypeです。このフィールドは、&lt;a href=&quot;openmbean/openmbeanattributeinfosupport&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;openmbean/openmbeanoperationinfosupport&quot;&gt; &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;openmbean/openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; の&lt;/a&gt;すべてのインスタンスの記述子で設定されます。また、MXBeanの属性、操作、およびパラメーターにも設定されます。</target>
        </trans-unit>
        <trans-unit id="14746a7869df9344bf3add89eda86eda0f27df41" translate="yes" xml:space="preserve">
          <source>The Open Type of this element. In the case of &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; and &lt;code&gt;MBeanParameterInfo&lt;/code&gt;, this is the Open Type of the attribute or parameter. In the case of &lt;code&gt;MBeanOperationInfo&lt;/code&gt;, it is the Open Type of the return value. This field is set in the Descriptor for all instances of &lt;a href=&quot;openmbean/openmbeanattributeinfosupport&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbean/openmbeanoperationinfosupport&quot;&gt;&lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;openmbean/openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;. It is also set for attributes, operations, and parameters of MXBeans.</source>
          <target state="translated">この要素の公開タイプ。 &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; および &lt;code&gt;MBeanParameterInfo&lt;/code&gt; の場合、これは属性またはパラメーターのOpen Typeです。 &lt;code&gt;MBeanOperationInfo&lt;/code&gt; の場合は、戻り値のOpen Typeです。このフィールドは、&lt;a href=&quot;openmbean/openmbeanattributeinfosupport&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;openmbean/openmbeanoperationinfosupport&quot;&gt; &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;openmbean/openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; の&lt;/a&gt;すべてのインスタンスの記述子で設定されます。また、MXBeanの属性、操作、およびパラメーターに対しても設定されます。</target>
        </trans-unit>
        <trans-unit id="1ee8b38b45c5d04256b1084f98f63cbf5cd52ad7" translate="yes" xml:space="preserve">
          <source>The Open Type, &lt;em&gt;opentype(&lt;/em&gt;&lt;code&gt;
        List&amp;lt;String&amp;gt;&lt;/code&gt;&lt;em&gt;)&lt;/em&gt;, is &lt;a href=&quot;openmbean/arraytype&quot;&gt;&lt;code&gt;ArrayType&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(1, &lt;/code&gt;&lt;a href=&quot;openmbean/simpletype#STRING&quot;&gt;&lt;code&gt;SimpleType.STRING&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;, representing a 1-dimensional array of &lt;code&gt;String&lt;/code&gt;s.</source>
          <target state="translated">Open Type、&lt;em&gt;opentype（&lt;/em&gt; &lt;code&gt; List&amp;lt;String&amp;gt;&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;は&lt;a href=&quot;openmbean/arraytype&quot;&gt; &lt;code&gt;ArrayType&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(1, &lt;/code&gt; &lt;a href=&quot;openmbean/simpletype#STRING&quot;&gt; &lt;code&gt;SimpleType.STRING&lt;/code&gt; &lt;/a&gt; &lt;code&gt;)&lt;/code&gt; であり、 &lt;code&gt;String&lt;/code&gt; の1次元配列を表します。</target>
        </trans-unit>
        <trans-unit id="3d8ca0b1298715049081cc8a7ee921c31ef00c4d" translate="yes" xml:space="preserve">
          <source>The Open Type, &lt;em&gt;opentype(&lt;/em&gt;&lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt;&lt;em&gt;)&lt;/em&gt;, is &lt;a href=&quot;openmbean/arraytype&quot;&gt;&lt;code&gt;ArrayType&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(1, &lt;/code&gt;&lt;a href=&quot;openmbean/simpletype#STRING&quot;&gt;&lt;code&gt;SimpleType.STRING&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;, representing a 1-dimensional array of &lt;code&gt;String&lt;/code&gt;s.</source>
          <target state="translated">オープンタイプ&lt;em&gt;opentype（&lt;/em&gt; &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;は&lt;a href=&quot;openmbean/arraytype&quot;&gt; &lt;code&gt;ArrayType&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(1, &lt;/code&gt; &lt;a href=&quot;openmbean/simpletype#STRING&quot;&gt; &lt;code&gt;SimpleType.STRING&lt;/code&gt; &lt;/a&gt; &lt;code&gt;)&lt;/code&gt; で、 &lt;code&gt;String&lt;/code&gt; の1次元配列を表します。</target>
        </trans-unit>
        <trans-unit id="eacc7b04548f8ebda5f388a359ed276237f9e530" translate="yes" xml:space="preserve">
          <source>The OrientationRequestedType instance to use for specifying a landscape orientation.</source>
          <target state="translated">ランドスケープ方向を指定するために使用する OrientationRequestedType インスタンス。</target>
        </trans-unit>
        <trans-unit id="d2e78bf087c2f313d0557edb30b321bd5d2675d4" translate="yes" xml:space="preserve">
          <source>The OrientationRequestedType instance to use for specifying a portrait orientation.</source>
          <target state="translated">ポートレートの向きを指定するために使用するOrientationRequestedTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="86e97ad57b9b9d8ebd7b9d529990f1d9ae26ec7d" translate="yes" xml:space="preserve">
          <source>The OriginType instance to use for specifying a physical origin.</source>
          <target state="translated">物理的な原点を指定するために使用するOriginTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="0c144f2bace2e10e29c5d67044e54b84b1b53676" translate="yes" xml:space="preserve">
          <source>The OriginType instance to use for specifying a printable origin.</source>
          <target state="translated">印刷可能な原点を指定するために使用するOriginTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="3daffe642dc56886ac3c7c719d3cf4600cbab1e2" translate="yes" xml:space="preserve">
          <source>The Oriya range with the Oriya digits.</source>
          <target state="translated">オリヤの桁数でオリヤレンジ。</target>
        </trans-unit>
        <trans-unit id="604108d7679d35923f2a2666b52d152240872ab8" translate="yes" xml:space="preserve">
          <source>The POSIX attributes of a file are retrieved using a &lt;a href=&quot;posixfileattributeview&quot;&gt;&lt;code&gt;PosixFileAttributeView&lt;/code&gt;&lt;/a&gt; by invoking its &lt;a href=&quot;posixfileattributeview#readAttributes()&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ファイルのPOSIX属性を使用して取得され&lt;a href=&quot;posixfileattributeview&quot;&gt; &lt;code&gt;PosixFileAttributeView&lt;/code&gt; を&lt;/a&gt;その呼び出すことによって&lt;a href=&quot;posixfileattributeview#readAttributes()&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; の&lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="c8d2a39da861a7048f3bf16ac55acc32a5404839" translate="yes" xml:space="preserve">
          <source>The POSIX attributes of a file are retrieved using a &lt;a href=&quot;posixfileattributeview&quot;&gt;&lt;code&gt;PosixFileAttributeView&lt;/code&gt;&lt;/a&gt; by invoking its &lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ファイルのPOSIX属性は、その&lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、&lt;a href=&quot;posixfileattributeview&quot;&gt; &lt;code&gt;PosixFileAttributeView&lt;/code&gt; &lt;/a&gt;を使用して取得されます。</target>
        </trans-unit>
        <trans-unit id="c6209ce8603095315802c16ee6435b6d192cd524" translate="yes" xml:space="preserve">
          <source>The PRECISION column represents the maximum column size that the server supports for the given datatype. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable.</source>
          <target state="translated">PRECISION列は、サーバが指定されたデータ型に対してサポートする最大列サイズを表します。数値データの場合、これは最大精度です。文字データの場合、これは文字単位の長さです。データタイプの場合、これは文字列表現の文字数での長さです(小数点以下の秒数成分の最大許容精度を想定しています)。バイナリ・データの場合、これはバイト単位の長さです。ROWIDデータ型の場合、これはバイト単位の長さです。列サイズが適用できないデータ型の場合、Null が返されます。</target>
        </trans-unit>
        <trans-unit id="608f908546c6fb2d1a0985679772a6d0fb7a4cd7" translate="yes" xml:space="preserve">
          <source>The PRECISION column represents the specified column size for the given column. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable.</source>
          <target state="translated">PRECISION列は、指定された列の指定された列サイズを表します。数値データの場合、これは最大精度です。文字データの場合、これは文字単位の長さです。データタイプが時刻データの場合、これは文字列表現の文字数での長さです(小数点以下の秒数成分の最大許容精度を想定しています)。バイナリ・データの場合、これはバイト単位の長さです。ROWIDデータ型の場合、これはバイト単位の長さです。列サイズが適用できないデータ型の場合、Null が返されます。</target>
        </trans-unit>
        <trans-unit id="1881900cdf6442ca348aababed8d278a05876686" translate="yes" xml:space="preserve">
          <source>The PRECISION column represents the specified column size for the given parameter or column. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. Null is returned for data types where the column size is not applicable.</source>
          <target state="translated">PRECISION列は、指定されたパラメータまたは列の指定された列サイズを表します。数値データの場合、これは最大精度です。文字データの場合、これは文字単位の長さです。データタイプの場合、これはString表現の文字数での長さです(小数の秒成分の最大許容精度を想定しています)。バイナリ・データの場合、これはバイト単位の長さです。ROWIDデータ型の場合、これはバイト単位の長さです。列サイズが適用できないデータ型の場合、Null が返されます。</target>
        </trans-unit>
        <trans-unit id="1079b01e3962327ce622a8802a1cf6880ebb5c6e" translate="yes" xml:space="preserve">
          <source>The PSS parameter set with all default values</source>
          <target state="translated">すべてのデフォルト値が設定された PSS パラメータセット</target>
        </trans-unit>
        <trans-unit id="b3ab28242caa847b286fc90013d2b0491ec3901c" translate="yes" xml:space="preserve">
          <source>The PSS parameter set with all default values.</source>
          <target state="translated">すべてのデフォルト値が設定された PSS パラメータセット。</target>
        </trans-unit>
        <trans-unit id="7a1a9a52c509b8bf2aa11fc375268d5d4b982847" translate="yes" xml:space="preserve">
          <source>The Page Down key, a non-ASCII action key.</source>
          <target state="translated">ページダウンキー、非ASCIIのアクションキーです。</target>
        </trans-unit>
        <trans-unit id="b6ceff4e733a8fd8dd95849144a04eed6a170dfb" translate="yes" xml:space="preserve">
          <source>The Page Up key, a non-ASCII action key.</source>
          <target state="translated">ページアップキー、非ASCIIのアクションキーです。</target>
        </trans-unit>
        <trans-unit id="3d027f6c803d6758ba706e29a00afc1193bf2442" translate="yes" xml:space="preserve">
          <source>The ParameterDescriptor class allows bean implementors to provide additional information on each of their parameters, beyond the low level type information provided by the java.lang.reflect.Method class.</source>
          <target state="translated">ParameterDescriptorクラスは、ビーンの実装者が、java.lang.reflect.Methodクラスで提供される低レベルの型情報を超えて、それぞれのパラメータに関する追加情報を提供することを可能にします。</target>
        </trans-unit>
        <trans-unit id="4d3cbd26cc18d883fce3423f3e8a2d5ef0540f3d" translate="yes" xml:space="preserve">
          <source>The Parser will call this method to report each chunk of character data. SAX parsers may return all contiguous character data in a single chunk, or they may split it into several chunks; however, all of the characters in any single event must come from the same external entity so that the Locator provides useful information.</source>
          <target state="translated">パーサは、文字データの各チャンクを報告するためにこのメソッドを呼び出します。SAXパーサは、連続する全ての文字データを単一のチャンクで返すか、複数のチャンクに分割することができます。しかし、ロケータが有用な情報を提供するために、単一のイベントの全ての文字は同じ外部エンティティから来ていなければなりません。</target>
        </trans-unit>
        <trans-unit id="007f0b4c51a8ac3735f09488d895ca9527132e33" translate="yes" xml:space="preserve">
          <source>The Parser will call this method to report each chunk of character data. SAX parsers may return all contiguous character data in a single chunk, or they may split it into several chunks; however, all of the characters in any single event must come from the same external entity, so that the Locator provides useful information.</source>
          <target state="translated">パーサは、文字データの各チャンクを報告するためにこのメソッドを呼び出します。SAXパーサは、連続する全ての文字データを単一のチャンクで返すか、複数のチャンクに分割することができます;しかし、任意の単一イベントの全ての文字は同じ外部エンティティから来ていなければならないので、ロケータは有用な情報を提供します。</target>
        </trans-unit>
        <trans-unit id="c553a7aebfb79b4c7d7552c035617009c0021687" translate="yes" xml:space="preserve">
          <source>The Parser will invoke this method at the beginning of every element in the XML document; there will be a corresponding &lt;a href=&quot;#endElement(java.lang.String,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;endElement&lt;/code&gt;&lt;/a&gt; event for every startElement event (even when the element is empty). All of the element's content will be reported, in order, before the corresponding endElement event.</source>
          <target state="translated">パーサーは、XMLドキュメントのすべての要素の先頭でこのメソッドを呼び出します。すべてのstartElementイベントに対応する&lt;a href=&quot;#endElement(java.lang.String,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;endElement&lt;/code&gt; &lt;/a&gt;イベントがあります（要素が空の場合でも）。要素のすべてのコンテンツは、対応するendElementイベントの前に順番に報告されます。</target>
        </trans-unit>
        <trans-unit id="b2ffaeb8d0f43b3556a7668c6a3754787ebdf35f" translate="yes" xml:space="preserve">
          <source>The Parser will invoke this method at the beginning of every element in the XML document; there will be a corresponding endElement() event for every startElement() event (even when the element is empty). All of the element's content will be reported, in order, before the corresponding endElement() event.</source>
          <target state="translated">パーサはXML文書内の全ての要素の初めにこのメソッドを呼び出します;全てのstartElement()イベントに対応するendElement()イベントがあります(要素が空であっても)。全ての要素の内容は、対応するendElement()イベントの前に順番に報告されます。</target>
        </trans-unit>
        <trans-unit id="f1bdbe90a7c340b478f9c1c18b63e2450df851d2" translate="yes" xml:space="preserve">
          <source>The Parser will invoke this method each time the entity is skipped. Non-validating processors may skip entities if they have not seen the declarations (because, for example, the entity was declared in an external DTD subset). All processors may skip external entities, depending on the values of the &lt;code&gt;http://xml.org/sax/features/external-general-entities&lt;/code&gt; and the &lt;code&gt;http://xml.org/sax/features/external-parameter-entities&lt;/code&gt; properties.</source>
          <target state="translated">パーサーは、エンティティがスキップされるたびにこのメソッドを呼び出します。非検証プロセッサは、宣言が表示されていない場合（たとえば、エンティティが外部DTDサブセットで宣言されているため）、エンティティをスキップする場合があります。 &lt;code&gt;http://xml.org/sax/features/external-general-entities&lt;/code&gt; および &lt;code&gt;http://xml.org/sax/features/external-parameter-entities&lt;/code&gt; プロパティの値に応じて、すべてのプロセッサが外部エンティティをスキップする場合があります。 。</target>
        </trans-unit>
        <trans-unit id="3cc97f14d1c6ed34640e855f6a0e48fc1a501ede" translate="yes" xml:space="preserve">
          <source>The Parser will invoke this method once for each processing instruction found: note that processing instructions may occur before or after the main document element.</source>
          <target state="translated">パーサは見つけられた各処理命令のために一度このメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="b49db7c6419de0ed107d7d806648cd410319d193" translate="yes" xml:space="preserve">
          <source>The PasswordAuthentication collected from the user, or null if none is provided.</source>
          <target state="translated">ユーザから収集した PasswordAuthentication、または何も提供されていない場合は NULL。</target>
        </trans-unit>
        <trans-unit id="6b93a014cd48ed59022ceab57c22cc48b40d19a2" translate="yes" xml:space="preserve">
          <source>The Pause key, a non-ASCII action key.</source>
          <target state="translated">Pauseキー、非ASCIIアクションキーです。</target>
        </trans-unit>
        <trans-unit id="9b0ce5aa8f07de13619b19a3de18228946efc98c" translate="yes" xml:space="preserve">
          <source>The Payload Protocol Identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47162c3848702f346f4c344da14d624a5c12818f" translate="yes" xml:space="preserve">
          <source>The Permission class for reflective operations.</source>
          <target state="translated">リフレクト操作のためのパーミッションクラスです。</target>
        </trans-unit>
        <trans-unit id="2fe6df3634a9b58d388e16b81f2a5767b8a67a98" translate="yes" xml:space="preserve">
          <source>The PermissionCollection returned by the &lt;code&gt;Permission.newPermissionCollection&lt;/code&gt; method is a homogeneous collection, which stores only Permission objects for a given Permission type. A PermissionCollection may also be heterogeneous. For example, Permissions is a PermissionCollection subclass that represents a collection of PermissionCollections. That is, its members are each a homogeneous PermissionCollection. For example, a Permissions object might have a FilePermissionCollection for all the FilePermission objects, a SocketPermissionCollection for all the SocketPermission objects, and so on. Its &lt;code&gt;add&lt;/code&gt; method adds a permission to the appropriate collection.</source>
          <target state="translated">&lt;code&gt;Permission.newPermissionCollection&lt;/code&gt; メソッドによって返されるPermissionCollectionは、特定のPermissionタイプのPermissionオブジェクトのみを格納する同種のコレクションです。 PermissionCollectionは、異種の場合もあります。たとえば、Permissionsは、PermissionCollectionsのコレクションを表すPermissionCollectionサブクラスです。つまり、そのメンバーはそれぞれ同種のPermissionCollectionです。たとえば、Permissionsオブジェクトには、すべてのFilePermissionオブジェクトのFilePermissionCollection、すべてのSocketPermissionオブジェクトのSocketPermissionCollectionなどがあります。その &lt;code&gt;add&lt;/code&gt; メソッドは、適切なコレクションに権限を追加します。</target>
        </trans-unit>
        <trans-unit id="5b44fa11f797cda619a6aef640c6e5f1150da36c" translate="yes" xml:space="preserve">
          <source>The PersistenceDelegate class takes the responsibility for expressing the state of an instance of a given class in terms of the methods in the class's public API.</source>
          <target state="translated">PersistenceDelegateクラスは、与えられたクラスのインスタンスの状態をクラスのパブリックAPIのメソッドで表現する責任を負います。</target>
        </trans-unit>
        <trans-unit id="fe7a2d34b2335b92e9d706d17e53c3f47d5a8dbf" translate="yes" xml:space="preserve">
          <source>The PersistenceDelegate class takes the responsibility for expressing the state of an instance of a given class in terms of the methods in the class's public API. Instead of associating the responsibility of persistence with the class itself as is done, for example, by the &lt;code&gt;readObject&lt;/code&gt; and &lt;code&gt;writeObject&lt;/code&gt; methods used by the &lt;code&gt;ObjectOutputStream&lt;/code&gt;, streams like the &lt;code&gt;XMLEncoder&lt;/code&gt; which use this delegation model can have their behavior controlled independently of the classes themselves. Normally, the class is the best place to put such information and conventions can easily be expressed in this delegation scheme to do just that. Sometimes however, it is the case that a minor problem in a single class prevents an entire object graph from being written and this can leave the application developer with no recourse but to attempt to shadow the problematic classes locally or use alternative persistence techniques. In situations like these, the delegation model gives a relatively clean mechanism for the application developer to intervene in all parts of the serialization process without requiring that modifications be made to the implementation of classes which are not part of the application itself.</source>
          <target state="translated">PersistenceDelegateクラスは、クラスのパブリックAPIのメソッドに関して、特定のクラスのインスタンスの状態を表現する責任を負います。 &lt;code&gt;ObjectOutputStream&lt;/code&gt; で使用される &lt;code&gt;readObject&lt;/code&gt; メソッドや &lt;code&gt;writeObject&lt;/code&gt; メソッドなど、 &lt;code&gt;XMLEncoder&lt;/code&gt; のようなストリームによって行われるように、永続性の責任をクラス自体に関連付ける代わりにこの委任モデルを使用するクラスは、クラス自体とは独立して動作を制御できます。通常、クラスはそのような情報を配置するのに最適な場所であり、この委任スキームでは、それを行うための規則を簡単に表現できます。ただし、単一のクラスの軽微な問題が原因でオブジェクトグラフ全体を作成できない場合があるため、アプリケーション開発者は、問題のあるクラスをローカルでシャドウするか、代替の永続化手法を使用するしかありません。このような状況では、委任モデルは、アプリケーション開発者がアプリケーション自体の一部ではないクラスの実装に変更を加えることなく、シリアル化プロセスのすべての部分に介入できる比較的クリーンなメカニズムを提供します。</target>
        </trans-unit>
        <trans-unit id="583fa9535a80ecfda9fc21924d4be2f9b0f70a94" translate="yes" xml:space="preserve">
          <source>The Photo YCC conversion color space.</source>
          <target state="translated">フォトYCC変換の色空間。</target>
        </trans-unit>
        <trans-unit id="bce29884d2e4006d61c9c4ae80d1499100307e59" translate="yes" xml:space="preserve">
          <source>The PixelGrabber class implements an ImageConsumer which can be attached to an Image or ImageProducer object to retrieve a subset of the pixels in that image.</source>
          <target state="translated">PixelGrabber クラスは ImageConsumer を実装しており、Image または ImageProducer オブジェクトにアタッチして、その画像のピクセルのサブセットを取得することができます。</target>
        </trans-unit>
        <trans-unit id="62f294221adf8c7cc8209135f1f1270130eba917" translate="yes" xml:space="preserve">
          <source>The PixelGrabber class implements an ImageConsumer which can be attached to an Image or ImageProducer object to retrieve a subset of the pixels in that image. Here is an example:</source>
          <target state="translated">PixelGrabber クラスは ImageConsumer を実装しており、Image または ImageProducer オブジェクトにアタッチして、その画像のピクセルのサブセットを取得することができます。以下に例を示します。</target>
        </trans-unit>
        <trans-unit id="0f579bdcf97e6eb9cb7574a266fa66a89a905516" translate="yes" xml:space="preserve">
          <source>The PostConstruct annotation is used on a method that needs to be executed after dependency injection is done to perform any initialization.</source>
          <target state="translated">PostConstruct アノテーションは、任意の初期化を行うために依存性注入が行われた後に実行する必要があるメソッドで使用されます。</target>
        </trans-unit>
        <trans-unit id="663424111809ef7a25cf879a877b2f4c747a5c6b" translate="yes" xml:space="preserve">
          <source>The PostConstruct annotation is used on a method that needs to be executed after dependency injection is done to perform any initialization. This method MUST be invoked before the class is put into service. This annotation MUST be supported on all classes that support dependency injection. The method annotated with PostConstruct MUST be invoked even if the class does not request any resources to be injected. Only one method can be annotated with this annotation. The method on which the PostConstruct annotation is applied MUST fulfill all of the following criteria:</source>
          <target state="translated">PostConstruct アノテーションは、任意の初期化を実行するために依存性注入が行われた後に実行する必要のあるメソッドで使用されます。このメソッドは、クラスがサービスに投入される前に呼び出されなければなりません(MUST)。このアノテーションは、依存性注入をサポートするすべてのクラスでサポートされなければなりません(MUST)。PostConstruct でアノテーションされたメソッドは、クラスが注入するリソースを要求しない場合でも呼び出されなければなりません[MUST]。このアノテーションでアノテーションできるメソッドは 1 つだけです。PostConstruct アノテーションが適用されるメソッドは、以下の基準をすべて満たさなければなりません[MUST]。</target>
        </trans-unit>
        <trans-unit id="474d2291101f131bfdaaf8be9f4fb6c2d55ed0cb" translate="yes" xml:space="preserve">
          <source>The PreDestroy annotation is used on methods as a callback notification to signal that the instance is in the process of being removed by the container.</source>
          <target state="translated">PreDestroy アノテーションは、コンテナによってインスタンスが削除される過程にあることを知らせるコールバック通知としてメソッドで使用されます。</target>
        </trans-unit>
        <trans-unit id="3f4e141fe06f04a529a2ebb0a5d0f52a343eafc5" translate="yes" xml:space="preserve">
          <source>The PreDestroy annotation is used on methods as a callback notification to signal that the instance is in the process of being removed by the container. The method annotated with PreDestroy is typically used to release resources that it has been holding. This annotation MUST be supported by all container managed objects that support PostConstruct except the application client container in Java EE 5. The method on which the PreDestroy annotation is applied MUST fulfill all of the following criteria:</source>
          <target state="translated">PreDestroy アノテーションは、コンテナによってインスタンスが削除される過程にあることを知らせるコールバック通知としてメソッドで使用されます。PreDestroy でアノテーションされたメソッドは、通常は保持していたリソースを解放するために使用されます。このアノテーションは、Java EE 5 のアプリケーション・クライアント・コンテナを除く、PostConstruct をサポートするすべてのコンテナ管理オブジェクトでサポートされなければなりません(MUST)。PreDestroy アノテーションが適用されるメソッドは、以下の基準をすべて満たさなければならない[MUST]。</target>
        </trans-unit>
        <trans-unit id="d1757e1a54444fb1f78c30c52a38118eeb762c87" translate="yes" xml:space="preserve">
          <source>The Principals and credentials from the specified Sets are copied into newly constructed Sets. These newly created Sets check whether this &lt;code&gt;Subject&lt;/code&gt; has been set read-only before permitting subsequent modifications. The newly created Sets also prevent illegal modifications by ensuring that callers have sufficient permissions.</source>
          <target state="translated">指定されたセットのプリンシパルと資格情報が、新しく構築されたセットにコピーされます。これらの新しく作成されたセットは、後続の変更を許可する前に、この &lt;code&gt;Subject&lt;/code&gt; が読み取り専用に設定されているかどうかを確認します。また、新しく作成されたセットは、呼び出し元に十分な権限があることを保証することにより、違法な変更を防ぎます。</target>
        </trans-unit>
        <trans-unit id="35d858350b98812050600775afb70417bda94300" translate="yes" xml:space="preserve">
          <source>The Principals and credentials from the specified Sets are copied into newly constructed Sets. These newly created Sets check whether this &lt;code&gt;Subject&lt;/code&gt; has been set read-only before permitting subsequent modifications. The newly created Sets also prevent illegal modifications by ensuring that callers have sufficient permissions. These Sets also prohibit null elements, and attempts to add or query a null element will result in a &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">指定されたセットのプリンシパルと資格情報が、新しく構築されたセットにコピーされます。これらの新しく作成されたセットは、後続の変更を許可する前に、この &lt;code&gt;Subject&lt;/code&gt; が読み取り専用に設定されているかどうかを確認します。新しく作成されたセットは、呼び出し元に十分な権限があることを確認することにより、不正な変更も防止します。これらのセットはnull要素も禁止しており、null要素を追加またはクエリしようとすると、 &lt;code&gt;NullPointerException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="9479f421d53dcb84a15d69adc8edc90fd07e8e87" translate="yes" xml:space="preserve">
          <source>The Print Screen key, a non-ASCII action key.</source>
          <target state="translated">印刷画面キー、非ASCIIアクションキーです。</target>
        </trans-unit>
        <trans-unit id="69d951673774bcf174ae72870200da34cf3c5ebe" translate="yes" xml:space="preserve">
          <source>The Print Service API provides one implementation of interface &lt;code&gt;AttributeSet&lt;/code&gt;, class &lt;a href=&quot;hashattributeset&quot;&gt;&lt;code&gt;HashAttributeSet&lt;/code&gt;&lt;/a&gt;. A client can use class &lt;a href=&quot;hashattributeset&quot;&gt;&lt;code&gt;HashAttributeSet&lt;/code&gt;&lt;/a&gt; or provide its own implementation of interface &lt;code&gt;AttributeSet&lt;/code&gt;. The Print Service API also provides implementations of interface &lt;code&gt;AttributeSet&lt;/code&gt;'s subinterfaces -- classes &lt;a href=&quot;hashdocattributeset&quot;&gt;&lt;code&gt;HashDocAttributeSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;hashprintrequestattributeset&quot;&gt;&lt;code&gt;HashPrintRequestAttributeSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;hashprintjobattributeset&quot;&gt;&lt;code&gt;HashPrintJobAttributeSet&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;hashprintserviceattributeset&quot;&gt;&lt;code&gt;HashPrintServiceAttributeSet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Print Service APIは、インターフェース &lt;code&gt;AttributeSet&lt;/code&gt; の1つの実装、クラス&lt;a href=&quot;hashattributeset&quot;&gt; &lt;code&gt;HashAttributeSet&lt;/code&gt; を提供し&lt;/a&gt;ます。クライアントは、クラス&lt;a href=&quot;hashattributeset&quot;&gt; &lt;code&gt;HashAttributeSet&lt;/code&gt; &lt;/a&gt;を使用するか、インターフェイス &lt;code&gt;AttributeSet&lt;/code&gt; の独自の実装を提供できます。Print Service APIは、インターフェイス &lt;code&gt;AttributeSet&lt;/code&gt; のサブインターフェイス（クラス&lt;a href=&quot;hashdocattributeset&quot;&gt; &lt;code&gt;HashDocAttributeSet&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;hashprintrequestattributeset&quot;&gt; &lt;code&gt;HashPrintRequestAttributeSet&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;hashprintjobattributeset&quot;&gt; &lt;code&gt;HashPrintJobAttributeSet&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;hashprintserviceattributeset&quot;&gt; &lt;code&gt;HashPrintServiceAttributeSet&lt;/code&gt; )の&lt;/a&gt;実装も提供します。</target>
        </trans-unit>
        <trans-unit id="5023e9c16aece2d432f4a46ffaa75c4a32d41d7b" translate="yes" xml:space="preserve">
          <source>The Print Service API provides one implementation of interface AttributeSet, class &lt;a href=&quot;hashattributeset&quot;&gt;&lt;code&gt;HashAttributeSet&lt;/code&gt;&lt;/a&gt;. A client can use class &lt;a href=&quot;hashattributeset&quot;&gt;&lt;code&gt;HashAttributeSet&lt;/code&gt;&lt;/a&gt; or provide its own implementation of interface AttributeSet. The Print Service API also provides implementations of interface AttributeSet's subinterfaces -- classes &lt;a href=&quot;hashdocattributeset&quot;&gt;&lt;code&gt;HashDocAttributeSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;hashprintrequestattributeset&quot;&gt;&lt;code&gt;HashPrintRequestAttributeSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;hashprintjobattributeset&quot;&gt;&lt;code&gt;HashPrintJobAttributeSet&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;hashprintserviceattributeset&quot;&gt;&lt;code&gt;HashPrintServiceAttributeSet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Print Service APIは、インターフェースAttributeSetの1つの実装である&lt;a href=&quot;hashattributeset&quot;&gt; &lt;code&gt;HashAttributeSet&lt;/code&gt; &lt;/a&gt;クラスを提供します。クライアントは、クラス&lt;a href=&quot;hashattributeset&quot;&gt; &lt;code&gt;HashAttributeSet&lt;/code&gt; &lt;/a&gt;を使用するか、インターフェースAttributeSetの独自の実装を提供できます。 Print Service APIは、インターフェースAttributeSetのサブインターフェース（クラス&lt;a href=&quot;hashdocattributeset&quot;&gt; &lt;code&gt;HashDocAttributeSet&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;hashprintrequestattributeset&quot;&gt; &lt;code&gt;HashPrintRequestAttributeSet&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;hashprintjobattributeset&quot;&gt; &lt;code&gt;HashPrintJobAttributeSet&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;hashprintserviceattributeset&quot;&gt; &lt;code&gt;HashPrintServiceAttributeSet&lt;/code&gt; )の&lt;/a&gt;実装も提供します。</target>
        </trans-unit>
        <trans-unit id="a36fd7d83fcd442d2ca4e063a3d8df953492d146" translate="yes" xml:space="preserve">
          <source>The PrintQualityType instance to use for specifying a draft print quality.</source>
          <target state="translated">ドラフト印刷品質を指定するために使用するPrintQualityTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="031b4b1f0aba81e6ac427aa15ddc998c99500e14" translate="yes" xml:space="preserve">
          <source>The PrintQualityType instance to use for specifying a high print quality.</source>
          <target state="translated">高い印刷品質を指定するために使用するPrintQualityTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="784892b08d359d8cf5e053ee18347d2f728babf6" translate="yes" xml:space="preserve">
          <source>The PrintQualityType instance to use for specifying a normal print quality.</source>
          <target state="translated">通常の印刷品質を指定するために使用するPrintQualityTypeインスタンス。</target>
        </trans-unit>
        <trans-unit id="113ca29dc8899124bef3d1bfa5bd50040ad1d06f" translate="yes" xml:space="preserve">
          <source>The Printer could not access one or more documents passed by reference (i.e., the print data representation object is a URL). This reason is intended to cover any file access problem,including file does not exist and access denied because of an access control problem. Whether the printer aborts the job and moves the job to the ABORTED job state or prints all documents that are accessible and moves the job to the COMPLETED job state and adds the COMPLETED_WITH_ERRORS reason to the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute depends on implementation and/or site policy. This value should be supported if the printer supports doc flavors with URL print data representation objects.</source>
          <target state="translated">プリンターは、参照によって渡された1つ以上のドキュメントにアクセスできませんでした（つまり、印刷データ表現オブジェクトはURLです）。この理由は、ファイルが存在せず、アクセス制御の問題のためにアクセスが拒否されたことを含む、ファイルアクセスの問題をカバーすることを目的としています。プリンターがジョブを中止してジョブをABORTEDジョブ状態に移行するか、アクセス可能なすべてのドキュメントを印刷してジョブをCOMPLETEDジョブ状態に移行し、COMPLETED_WITH_ERRORS理由をジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性に追加するかどうかは、実装やサイトポリシーによって異なります。この値は、プリンターがURL印刷データ表現オブジェクトでdocフレーバーをサポートする場合にサポートされます。</target>
        </trans-unit>
        <trans-unit id="fce18036495868d9659f03df3d44dfcec351c534" translate="yes" xml:space="preserve">
          <source>The Program</source>
          <target state="translated">プログラム</target>
        </trans-unit>
        <trans-unit id="6fcae93a93a1ee82554381525484d5b1b3f879a6" translate="yes" xml:space="preserve">
          <source>The Properties object that was passed to &lt;a href=&quot;#setOutputProperties(java.util.Properties)&quot;&gt;&lt;code&gt;setOutputProperties(java.util.Properties)&lt;/code&gt;&lt;/a&gt; won't be effected by calling this method.</source>
          <target state="translated">&lt;a href=&quot;#setOutputProperties(java.util.Properties)&quot;&gt; &lt;code&gt;setOutputProperties(java.util.Properties)&lt;/code&gt; &lt;/a&gt;に渡されたPropertiesオブジェクトは、このメソッドを呼び出しても影響を受けません。</target>
        </trans-unit>
        <trans-unit id="95de950a5d7a1f254995d0b5167a4290a1b7a28e" translate="yes" xml:space="preserve">
          <source>The PropertyChangeListener that will be added to track changes in the desktop pane.</source>
          <target state="translated">デスクトップ ペインの変更を追跡するために追加される PropertyChangeListener。</target>
        </trans-unit>
        <trans-unit id="59a9f4d1b84220d6f2d96b358a0f7ee7ce4bb654" translate="yes" xml:space="preserve">
          <source>The PropertyChangeListener that's added to the JList at installUI time.</source>
          <target state="translated">installUI時にJListに追加されるPropertyChangeListener。</target>
        </trans-unit>
        <trans-unit id="2e2d0d45cb9f1cfc9a548fbe762ae6b51166f7c6" translate="yes" xml:space="preserve">
          <source>The PropertyChangeListener that's added to the JList at installUI time. When the value of a JList property that affects layout changes, we set a bit in updateLayoutStateNeeded. If the JLists model changes we additionally remove our listeners from the old model. Likewise for the JList selectionModel.</source>
          <target state="translated">installUI時にJListに追加されるPropertyChangeListenerです。レイアウトに影響を与えるJListプロパティの値が変わると、updateLayoutStateNeededにビットを設定します。JLists のモデルが変更された場合は、古いモデルからリスナーを追加で削除します。JList selectionModelについても同様です。</target>
        </trans-unit>
        <trans-unit id="79c5bed2e16f2a36efdbb26417f5d432d107c87f" translate="yes" xml:space="preserve">
          <source>The PropertyEditorManager can be used to locate a property editor for any given type name.</source>
          <target state="translated">PropertyEditorManager を使用して、任意の型名のプロパティエディタを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="03f186ff2c81c37adab709c0e89d137a465a74c1" translate="yes" xml:space="preserve">
          <source>The PropertyEditorManager can be used to locate a property editor for any given type name. This property editor must support the java.beans.PropertyEditor interface for editing a given object.</source>
          <target state="translated">PropertyEditorManager を使用して、任意の型名のプロパティエディタを見つけることができます。このプロパティエディタは、与えられたオブジェクトを編集するための java.bean.PropertyEditor インターフェースをサポートしていなければなりません。</target>
        </trans-unit>
        <trans-unit id="a2d11ff6fce664d384fd5b4cb99275a3053adfd8" translate="yes" xml:space="preserve">
          <source>The PropertyEditorManager uses three techniques for locating an editor for a given type. First, it provides a registerEditor method to allow an editor to be specifically registered for a given type. Second it tries to locate a suitable class by adding &quot;Editor&quot; to the full qualified classname of the given type (e.g. &quot;foo.bah.FozEditor&quot;). Finally it takes the simple classname (without the package name) adds &quot;Editor&quot; to it and looks in a search-path of packages for a matching class.</source>
          <target state="translated">PropertyEditorManager は、指定されたタイプのエディタを見つけるために 3 つのテクニックを使用します。第一に、与えられた型に対してエディタを特別に登録できるようにするための registerEditor メソッドを提供します。次に、与えられた型の完全修飾クラス名(例:&quot;foo.bah.FozEditor&quot;)に &quot;Editor&quot; を追加することで、適切なクラスを見つけようとします。最後に、(パッケージ名を除いた)単純なクラス名に &quot;Editor&quot; を追加して、一致するクラスをパッケージの検索パスから探します。</target>
        </trans-unit>
        <trans-unit id="e69e44faf76f952a5c9a199fdcebe3d843730632" translate="yes" xml:space="preserve">
          <source>The ProtectionDomain class encapsulates the characteristics of a domain, which encloses a set of classes whose instances are granted a set of permissions when being executed on behalf of a given set of Principals.</source>
          <target state="translated">ProtectionDomainクラスは、ドメインの特性をカプセル化したもので、プリンシパルに代わって実行されるときに、そのインスタンスに一連の許可が与えられるクラスの集合を囲んでいます。</target>
        </trans-unit>
        <trans-unit id="dc1a13b023d0705e0b7b2456d0489a32905a21a8" translate="yes" xml:space="preserve">
          <source>The REVERSE_LANDSCAPE value was added because some applications rotate landscape -90 degrees from portrait, rather than +90 degrees.</source>
          <target state="translated">REVERSE_LANDSCAPEの値が追加されたのは、一部のアプリケーションでは縦から90度ではなく、横から-90度回転するためです。</target>
        </trans-unit>
        <trans-unit id="6db7050862750f47a0efb63666d6d145e9e68f0e" translate="yes" xml:space="preserve">
          <source>The REVERSE_PORTRAIT value was added for use with the &lt;a href=&quot;finishings&quot;&gt;&lt;code&gt;Finishings&lt;/code&gt;&lt;/a&gt; attribute in cases where the opposite edge is desired for finishing a portrait document on simple finishing devices that have only one finishing position. Thus a &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; portrait document can be stapled &quot;on the right&quot; by a simple finishing device as is common use with some Middle Eastern languages such as Hebrew.</source>
          <target state="translated">REVERSE_PORTRAIT値は、1つの仕上げ位置しかない単純な仕上げデバイスで縦向きのドキュメントを仕上げるために反対側のエッジが必要な場合に、&lt;a href=&quot;finishings&quot;&gt; &lt;code&gt;Finishings&lt;/code&gt; &lt;/a&gt;属性で使用するために追加されました。したがって、 &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; 縦長のドキュメントは、ヘブライ語など一部の中東言語で一般的に使用されているように、単純な仕上げ装置によって「右側」にホチキス止めできます。</target>
        </trans-unit>
        <trans-unit id="91344e6cf60e370413b5e41435a7570bf1602389" translate="yes" xml:space="preserve">
          <source>The RFC-1123 date-time formatter, such as 'Tue, 3 Jun 2008 11:05:30 GMT'.</source>
          <target state="translated">RFC-1123 の日付時間フォーマッタ、例えば 'Tue,3 Jun 2008 11:05:30 GMT' のようなものです。</target>
        </trans-unit>
        <trans-unit id="16ee6f4995441de74711ec4a94d4a5fada764a10" translate="yes" xml:space="preserve">
          <source>The RMI Activation mechanism has been deprecated and may be removed from a future version of the Java Platform. All of the classes and interfaces in this package have been terminally deprecated. The &lt;code&gt;rmid&lt;/code&gt; tool has also been terminally deprecated. There is no replacement for the RMI Activation mechanism in the Java Platform. Users of RMI Activation are advised to migrate their applications to other technologies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd6b6f1f0aee47728916c5bade09680616f86e1" translate="yes" xml:space="preserve">
          <source>The RMI connector is a connector for the JMX Remote API that uses RMI to transmit client requests to a remote MBean server.</source>
          <target state="translated">RMIコネクタは、RMIを使用してクライアントのリクエストをリモートのMBeanサーバに送信するJMX Remote API用のコネクタです。</target>
        </trans-unit>
        <trans-unit id="82677ad477cb29bbe50c6cb2ef69c1f5f53feed1" translate="yes" xml:space="preserve">
          <source>The RMI connector is a connector for the JMX Remote API that uses RMI to transmit client requests to a remote MBean server. This package defines the classes that the user of an RMI connector needs to reference directly, for both the client and server sides. It also defines certain classes that the user will not usually reference directly, but that must be defined so that different implementations of the RMI connector can interoperate.</source>
          <target state="translated">RMI コネクタは、リモート MBean サーバにクライアント要求を送信するために RMI を使用する JMX リモート API 用のコネクタです。本パッケージでは、RMI コネクタのユーザが直接参照する必要のあるクラスを、クライアント側とサーバ側の両方で定義します。また、通常は直接参照しませんが、RMI コネクタの異なる実装が相互運用できるように定義しなければならないクラスも定義されています。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
